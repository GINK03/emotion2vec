{"tags": ["Metal", "iOS", "GPU", "\u753b\u50cf\u51e6\u7406", "Swift"], "context": "\u3084\u308a\u305f\u3044\u3053\u3068\uff1a\n@IBOutlet weak var imageView: MetalImageView!\n\nimageView.image = uiImage // UIImage\n\nimageView.image = mpsImage // MPSImage\n\nimageView.image = mtlTexture // MTLTexture\n\nimageView.image = ciTexture // CIImage\n\n\u3053\u3093\u306a\u611f\u3058\u3067UIImageView\u30e9\u30a4\u30af\u306b\u624b\u8efd\u306b\u3001\u304b\u3064\u306a\u308b\u3079\u304fCPU\u3068GPU\u3092\u884c\u3063\u305f\u308a\u6765\u305f\u308a\u305b\u305a\u306b\uff08\u4f59\u8a08\u306a\u30b3\u30f3\u30d0\u30fc\u30c8\u3092\u305b\u305a\u306b\uff09\u9ad8\u901f\u63cf\u753b\u3057\u305f\u3044\u3002\n\nMTKView\nMetal\u3067\u63cf\u753b\u3067\u304d\u308bUIView\u30b5\u30d6\u30af\u30e9\u30b9\u306e MTKView \u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u30fb\u30fb\u30fb\u305f\u3060\u5358\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3057\u305f\u3044\u3060\u3051\u3060\u3068\u3057\u3066\u3082\u304b\u306a\u308a\u306e\u624b\u9806\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u3001\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\u3001\u30b3\u30de\u30f3\u30c9\u30a8\u30f3\u30b3\u30fc\u30c0\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30fb\u30fb\u30fbUIKit\u3084Core Graphics\u3067\u306f\u610f\u8b58\u3059\u308b\u3053\u3068\u306e\u306a\u304b\u3063\u305f\u6982\u5ff5\u304c\u305f\u304f\u3055\u3093\u767b\u5834\u3057\u307e\u3059\u3002OpenGL\u306b\u6163\u308c\u89aa\u3057\u3093\u3060\u4eba\u304b\u3089\u3059\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3089\u3057\u3044\u3067\u3059\u304c\u3001GPU\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u3067\u3042\u308b\u81ea\u5206\u304b\u3089\u3059\u308b\u3068\u3001Apple\u306e\u30b5\u30f3\u30d7\u30eb\u7b49\u306f\u3084\u308a\u305f\u3044\u3053\u3068\u306b\u5bfe\u3057\u3066\u8907\u96d1\u3059\u304e\u308b\u3088\u3046\u306b\u611f\u3058\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3053\u3053\u3092\u30e9\u30c3\u30d7\u3059\u308bMTKView\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u3064\u304f\u308a\u3064\u3064\u3001Metal\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u6700\u5c0f\u5b9f\u88c5\u3092\u63a2\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nclass MetalImageView: MTKView, MTKViewDelegate\n\n\u4ee5\u4e0b\u3067\u305d\u306e\u5b9f\u88c5\u306e\u8981\u70b9\u3092\u66f8\u304d\u307e\u3059\u3002\n\nUIImage \u3092 MTLTexture \u306b\u5909\u63db\u3059\u308b\nMetal\u3067\u306fMTLTexture\u3068\u3044\u3046\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u9069\u5408\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002\nUIImage\u304b\u3089MTLTexture\u3092\u751f\u6210\u3059\u308b\u3001\u3082\u3057\u304f\u306f\u30a2\u30bb\u30c3\u30c8\u304b\u3089\u76f4\u63a5\u751f\u6210\u3059\u308b\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u305f\u306e\u3067\u3001\u9069\u5b9c\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nMetal\u9006\u5f15\u304d\u30ec\u30b7\u30d4 - Qiita\n\n\n\u30b7\u30a7\u30fc\u30c0\u3092\u8aad\u307f\u8fbc\u307f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30b9\u30c6\u30fc\u30c8\u3092\u4f5c\u6210\u3059\u308b\nMetal\u30b7\u30a7\u30fc\u30c0\u306e\u30d5\u30a1\u30a4\u30eb\uff08xxxx.metal\uff09\u3092\u8aad\u307f\u8fbc\u3093\u3067 MTLLibrary \u3092\u751f\u6210\u3057\u3001\u305d\u3053\u304b\u3089\u4f7f\u7528\u3059\u308b\u95a2\u6570\u3092\u53d6\u308a\u51fa\u3057\u3066 MTLFunction \u3092\u751f\u6210\u3057\u3001\nguard let library = device.newDefaultLibrary() else {fatalError()}\nguard let function = library.makeFunction(name: \"kernel_passthrough\") else {fatalError()}\n\n\u305d\u306e\u95a2\u6570\u3092\u5f15\u6570\u306b\u6e21\u3057\u3066\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30b9\u30c6\u30fc\u30c8\uff08\u3053\u3053\u3067\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3046\u306e\u3067MTLComputePipelineState\uff09\u3092\u751f\u6210\u3057\u307e\u3059\u3002\ndo {\n    pipeline = try device.makeComputePipelineState(function: function)\n}\ncatch {\n    fatalError(\"Failed to create MTLComputePipelineState with error: \\(error).\")\n}\n\n\u300c\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30b9\u30c6\u30fc\u30c8\u300d\u3068\u3044\u3046\u306e\u304cGPU\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u3068\u3057\u3066\u306f\u3042\u307e\u308a\u30d4\u30f3\u3068\u6765\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u540c\u30af\u30e9\u30b9\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u898b\u308b\u3068\u3001\n\nThe MTLComputePipelineState protocol defines the interface for a lightweight object used to encode a reference to a compiled compute program. \n\n\u3068\u3042\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u95a2\u6570\u3092\u30b3\u30de\u30f3\u30c9\u30a8\u30f3\u30b3\u30fc\u30c0\u3067\u53d6\u308a\u6271\u3046\u305f\u3081\u306e\u3082\u306e\u306e\u3088\u3046\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u30b7\u30a7\u30fc\u30c0\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3001\u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\nShader.metal\n#include <metal_stdlib>\nusing namespace metal;\n\nmtkview\nkernel void kernel_passthrough(texture2d<float, access::read> inTexture [[texture(0)]],\n                               texture2d<float, access::write> outTexture [[texture(1)]],\n                               uint2 gid [[thread_position_in_grid]])\n{\n    float4 inColor   = inTexture.read(gid);\n    outTexture.write(inColor, gid);\n}\n\n\n\u53c2\u8003\uff1a http://stackoverflow.com/questions/33605241/display-jpeg-image-using-\n\n\u305d\u306e\u4ed6\u521d\u671f\u5316\u6642\u306b\u3084\u308b\u3053\u3068\n\n\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u3092\u751f\u6210\nMTLCommandQueue\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306e\u8aac\u660e\u304c\u5b8c\u7d50\u3067\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u5f15\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\uff08\u307e\u305f\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\uff09\u30b3\u30de\u30f3\u30c9\u3092GPU\u306b\u6d41\u3059\u305f\u3081\u306e\u30ad\u30e5\u30fc\u3002\nGPU\u306e\u30bf\u30b9\u30af\u304c\u7a7a\u304d\u6b21\u7b2c\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u305f\u9806\u306b\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u3053\u306b\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u3044\u304f\u306e\u3067\u3001\u6700\u521d\u306b\u3064\u304f\u3063\u3066\u304a\u304d\u307e\u3059\u3002\ncommandQueue = device.makeCommandQueue()\n\n\nMTKView\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u3061\u3083\u3093\u3068\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3082\u3063\u3068\u8272\u3005\u5fc5\u8981\u305d\u3046\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u4eca\u56de\u306e\u65b9\u6cd5\u3067\u6700\u5c0f\u9650\u30bb\u30c3\u30c8\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u306f\u4ee5\u4e0b\u306e2\u3064\u3002\nframebufferOnly = false\ndelegate = self\n\nframebufferOnly \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true \u3067\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u304c\u4f7f\u3048\u306a\u3044\u7684\u306a\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306e\u8981\u4ef6\u3067\u306f\u63cf\u753b\u3092\u540c\u3058\u30af\u30e9\u30b9\u5185\u3067\u51e6\u7406\u3057\u305f\u3044\u306e\u3067 delegate \u306b\u306f\u81ea\u8eab\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n\u63cf\u753b\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u3068MTKView\u306e\u30d4\u30af\u30bb\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5408\u308f\u305b\u308b\n\u63cf\u753b\u3059\u308bMTLTexture\u304c\u30bb\u30c3\u30c8\u3055\u308c\u305f\u3089\uff08MTKTextureLoader\u3092\u7528\u3044\u3066\u30ed\u30fc\u30c9\u3057\u305f\u3089\uff09\u3001\u81ea\u8eab\uff08MTKView\uff09\u306ecolorPixelFormat\u3092\u5408\u308f\u305b\u307e\u3059\u3002\ncolorPixelFormat = texture.pixelFormat\n\n\u3053\u308c\u3092\u3084\u3089\u306a\u3044\u3068\u3001\u63cf\u753b\u3055\u308c\u3066\u3082\u5909\u306a\u8272\u306b\u306a\u308a\u307e\u3059\u3002\n\nMTKViewDelegate\u306e\u5b9f\u88c5\n2\u3064\u306eMTKViewDelegate\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nfunc mtkView(_ view: MTKView, drawableSizeWillChange size: CGSize) {\n}\n\nfunc draw(in view: MTKView) {\n}\n\n\ndrawInMTKView:\u3067\u3084\u308b\u3053\u3068\n\u30d3\u30e5\u30fc\u306b\u63cf\u753b\u3092\u884c\u3046\u969b\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\nCalled on the delegate when it is asked to render into the view\n\n\u3053\u3053\u3067\u3084\u308b\u3079\u304d\u3053\u3068\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u8a00\u3046\u3068\u3001\n\u300c\u30b3\u30de\u30f3\u30c9\u3092\u751f\u6210\u3057\u3066\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u306b\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u300d\n\u3068\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u306b\u3064\u3044\u3066\u306f\u4e0a\u8ff0\u3057\u305f\u901a\u308a\u3067\u3059\u304c\u3001\u300c\u30b3\u30de\u30f3\u30c9\u306e\u751f\u6210\u300d\u306b\u3064\u3044\u3066\u306f\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\uff08MTLCommandBuffer\uff09, \u30b3\u30de\u30f3\u30c9\u30a8\u30f3\u30b3\u30fc\u30c0\uff08MTLRenderCommandEncoder, MTLComputeCommandEncoder\uff09\u304c\u7d61\u3093\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3089\u306b\u3064\u3044\u3066\u3001\u307e\u305f\u4e0b\u8a18\u30b5\u30a4\u30c8\u306e\u8aac\u660e\u3092\u304a\u501f\u308a\u3057\u307e\u3059\u3002\n\nDSAS\u958b\u767a\u8005\u306e\u90e8\u5c4b:Metal\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u524d\u306b\u77e5\u3063\u3066\u304a\u304f\u3068\u697d\u306a\u3053\u3068\n\n[MTLCommandBuffer]\n\nMTLCommandQueue\u306b\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u30b3\u30de\u30f3\u30c9\u672c\u4f53\u3002\n\u30b3\u30de\u30f3\u30c9\u306f\u4e3b\u306bGPU\u3067\u5b9f\u884c\u3055\u308c\u308b\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u30fb\u9802\u70b9\u30c7\u30fc\u30bf\u306e\u30dd\u30a4\u30f3\u30bf\u3001\u305d\u306e\u4ed6\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30dd\u30a4\u30f3\u30bf\u306a\u3069\u306e\u60c5\u5831\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u7528\u306eMTLCommandBuffer\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u6b21\u306eMTLRenderCommandEncoder\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n[MTLRenderCommandEncoder] 1\n\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u5f79\u5272\u3092\u6301\u3064\u30af\u30e9\u30b9\u3067\u3059\u3002\nMTLBuffer\u3084MTLTexture\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30dd\u30a4\u30f3\u30bf\u3084\u3001\u4ee5\u4e0b\u3067\u7d39\u4ecb\u3059\u308bMTLRenderPipelineState\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5143\u306b\u30b3\u30de\u30f3\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\nfunc draw(in view: MTKView) {\n    guard let drawable = view.currentDrawable else {\n        return\n    }\n    guard let texture = texture else {\n        return\n    }\n\n    let commandBuffer = commandQueue.makeCommandBuffer()\n\n    let encoder: MTLComputeCommandEncoder = commandBuffer.makeComputeCommandEncoder()\n    encoder.setComputePipelineState(pipeline)\n    encoder.setTexture(texture, at: 0)\n    encoder.setTexture(drawable.texture, at: 1)\n    encoder.dispatchThreadgroups(threadgroupsPerGrid, threadsPerThreadgroup: threadsPerThreadgroup)\n    encoder.endEncoding()\n\n    commandBuffer.present(drawable)\n    commandBuffer.commit()\n}\n\n\nDrawable\n\u4e0a\u8a18\u5b9f\u88c5\u3067\u3001\nguard let drawable = view.currentDrawable else {\n    return\n}\n\n\u3068\u3001MTKView \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089 currentDrawable \u306a\u308b\u3082\u306e\u3092\u53d6\u5f97\u3057\u3001\nencoder.setTexture(drawable.texture, at: 1)\n\n\u305d\u306e texture \u3092\u30b7\u30a7\u30fc\u30c0\u306e\u7b2c2\u5f15\u6570\uff08\u3064\u307e\u308a\u51fa\u529b\u5074\uff09\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u3067\u3001\u6700\u5f8c\u306b\ncommandBuffer.present(drawable)\ncommandBuffer.commit()\n\n\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\u306b\u6e21\u3057\u3066\u30b3\u30df\u30c3\u30c8\u3002\uff08\u2192\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u308b\uff09\n\u3053\u306e currentDrawable \u306e\u578b\u306f CAMetalDrawable \u3067\u3001\u30d8\u30c3\u30c0\u306b\u306f\u3053\u3046\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nCAMetalDrawable represents a displayable buffer that vends an object that conforms to the MTLTexture protocol that may be used to create a render target for Metal.\n\n\n\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\n\u3082\u3046\u3072\u3068\u3064\u3001\u4e0a\u8a18\u5b9f\u88c5\u3067\nencoder.dispatchThreadgroups(threadgroupsPerGrid, threadsPerThreadgroup: threadsPerThreadgroup)\n\n\u3068\u3044\u3046\u3053\u3068\u3092\u3084\u3063\u3066\u3044\u307e\u3059\u3002\u5f15\u6570\u306b\u6e21\u3057\u3066\u3044\u308b2\u3064\u306e\u5024\u306f\u3069\u3061\u3089\u3082MTLSize\u578b\u3067\u3001GPU\u3067\u4e26\u5217\u306b\u5b9f\u884c\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u306e\u6570\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u306e\u5f15\u6570\u306b\u3064\u3044\u3066\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\nthreadgroupsPerGrid\n\n\nThe number of threadgroups for the grid, in each dimension.\n\n\nthreadsPerThreadgroup\n\n\nThe number of threads in one threadgroup, in each dimension.\n\n\u524d\u8005\u304c\uff08\u30b0\u30ea\u30c3\u30c9\u3042\u305f\u308a\u306e\uff09\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u306e\u6570\u3001\u5f8c\u8005\u304c1\u3064\u306e\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u306b\u304a\u3051\u308b\u30b9\u30ec\u30c3\u30c9\u6570\u3001\u306b\u306a\u308a\u307e\u3059\u3002\n\u6b63\u76f4\u3069\u3046\u3044\u3046\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3088\u3044\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u306fApple\u306eMetalImageProcessing\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\uff08\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u3067\u753b\u50cf\u3092\u53d6\u308a\u6271\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u70b9\u3067\u3001\u72b6\u6cc1\u306f\u4f3c\u901a\u3063\u3066\u3044\u308b\u306e\u304b\u306a\u3068\uff09\nprivate let threadsPerThreadgroup = MTLSize(width: 16, height: 16, depth: 1)\n\nthreadgroupsPerGrid = MTLSize(width: (texture.width + threadsPerThreadgroup.width - 1) / threadsPerThreadgroup.width,\n                              height: (texture.height + threadsPerThreadgroup.height - 1) / threadsPerThreadgroup.height,\n                              depth: 1)\n\n\n\u4f59\u8ac7\uff1a\u51e6\u7406\u3092\u66f8\u304b\u306a\u3044\u3068\u3069\u3046\u306a\u308b\uff1f\n\u4f55\u304c\u5fc5\u9808\u3067\u3001\u4f55\u304c\u5fc5\u9808\u3058\u3083\u306a\u3044\u304b\u3092\u63a2\u308b\u305f\u3081\u3001\u307e\u305a\u306f\u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\nlet commandBuffer = commandQueue.makeCommandBuffer()\n\n// let encoder = commandBuffer.makeComputeCommandEncoder()\n// encoder.setComputePipelineState(pipeline)\n// encoder.setTexture(texture, at: 0)\n// encoder.setTexture(drawable.texture, at: 1)\n// encoder.dispatchThreadgroups(threadgroupsPerGrid, threadsPerThreadgroup: threadsPerThreadgroup)\n// encoder.endEncoding()\n\ncommandBuffer.present(drawable)\ncommandBuffer.commit()\n\n\u2192 \u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306b\u306f\u306a\u3089\u306a\u3044\u304c\u3001drawable\u306b\u4f55\u3082\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u771f\u3063\u9ed2\u306b\u63cf\u753b\u3055\u308c\u308b\n\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\u3082\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n// let commandBuffer = commandQueue.makeCommandBuffer()\n\n// let encoder = commandBuffer.makeComputeCommandEncoder()\n// encoder.setComputePipelineState(pipeline)\n// encoder.setTexture(texture, at: 0)\n// encoder.setTexture(drawable.texture, at: 1)\n// encoder.dispatchThreadgroups(threadgroupsPerGrid, threadsPerThreadgroup: threadsPerThreadgroup)\n// encoder.endEncoding()\n\n// commandBuffer.present(drawable)\n// commandBuffer.commit()\n\n\u2192 \u771f\u3063\u767d\u306b\u63cf\u753b\u3055\u308c\u308b\u3002\u63cf\u753b\u547d\u4ee4\u304c\u306a\u3044\u306e\u3067\u3001\u305d\u3082\u305d\u3082\u63cf\u753b\u304c\u884c\u308f\u308c\u305a\u3001\u4e0b\u306e\u30d3\u30e5\u30fc\u304c\u898b\u3048\u3066\u3044\u308b\u3001\u3068\u89e3\u91c8\u3057\u307e\u3057\u305f\u3002\n\n\u51fa\u6765\u4e0a\u304c\u308a\n\u4ee5\u4e0a\u3067\u3001\nimageView.image = UIImage(named: \"filename\")\n\n\u3068\u3084\u308b\u3060\u3051\u3067Metal\u3067\u753b\u50cf\u3092\u63cf\u753b\u3059\u308b\u30af\u30e9\u30b9\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u304c\u3001contentMode\u306b\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3057\u30012x/3x\u3068\u3044\u3063\u305fRetina\u30b9\u30b1\u30fc\u30eb\u3082\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u306e\u3067\u3001\u5b9f\u969b\u306e\u3068\u3053\u308dUIImageView\u306e\u4ee3\u66ff\u3068\u3057\u3066\u306f\u307e\u3060\u307e\u3060\u5b8c\u6210\u5ea6\u304c\u7a0b\u9060\u3044\u8d85\u539f\u59cb\u7684\u30d1\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\n\u6700\u4f4e\u9650\u306e\u5bfe\u5fdc\uff08contentMode/Retina\uff09\u304c\u3067\u304d\u305f\u3089GitHub\u306b\u30a2\u30c3\u30d7\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n\n\u3053\u3053\u3067\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3063\u3066\u308b\u306e\u3067\u3001\u30b3\u30de\u30f3\u30c9\u30a8\u30f3\u30b3\u30fc\u30c0\u306fMTLComputeEncoder\u306b\u306a\u308a\u307e\u3059\u00a0\u21a9\n\n\n\n\u3084\u308a\u305f\u3044\u3053\u3068\uff1a\n\n```swift\n@IBOutlet weak var imageView: MetalImageView!\n```    \n\n```swift\nimageView.image = uiImage // UIImage\n```\n\n```swift\nimageView.image = mpsImage // MPSImage\n```\n\n```swift\nimageView.image = mtlTexture // MTLTexture\n```\n\n```swift\nimageView.image = ciTexture // CIImage\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067**UIImageView\u30e9\u30a4\u30af\u306b\u624b\u8efd\u306b\u3001\u304b\u3064\u306a\u308b\u3079\u304fCPU\u3068GPU\u3092\u884c\u3063\u305f\u308a\u6765\u305f\u308a\u305b\u305a\u306b\uff08\u4f59\u8a08\u306a\u30b3\u30f3\u30d0\u30fc\u30c8\u3092\u305b\u305a\u306b\uff09\u9ad8\u901f\u63cf\u753b**\u3057\u305f\u3044\u3002\n\n\n\n##MTKView\n\nMetal\u3067\u63cf\u753b\u3067\u304d\u308bUIView\u30b5\u30d6\u30af\u30e9\u30b9\u306e `MTKView` \u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u30fb\u30fb\u30fb**\u305f\u3060\u5358\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3057\u305f\u3044\u3060\u3051\u3060\u3068\u3057\u3066\u3082\u304b\u306a\u308a\u306e\u624b\u9806\u304c\u5fc5\u8981**\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u3001\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\u3001\u30b3\u30de\u30f3\u30c9\u30a8\u30f3\u30b3\u30fc\u30c0\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30fb\u30fb\u30fbUIKit\u3084Core Graphics\u3067\u306f\u610f\u8b58\u3059\u308b\u3053\u3068\u306e\u306a\u304b\u3063\u305f\u6982\u5ff5\u304c\u305f\u304f\u3055\u3093\u767b\u5834\u3057\u307e\u3059\u3002OpenGL\u306b\u6163\u308c\u89aa\u3057\u3093\u3060\u4eba\u304b\u3089\u3059\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3089\u3057\u3044\u3067\u3059\u304c\u3001GPU\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u3067\u3042\u308b\u81ea\u5206\u304b\u3089\u3059\u308b\u3068\u3001[Apple\u306e\u30b5\u30f3\u30d7\u30eb](https://developer.apple.com/library/content/samplecode/MetalTexturedQuad/Introduction/Intro.html#//apple_ref/doc/uid/TP40014604)\u7b49\u306f\u3084\u308a\u305f\u3044\u3053\u3068\u306b\u5bfe\u3057\u3066\u8907\u96d1\u3059\u304e\u308b\u3088\u3046\u306b\u611f\u3058\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3053\u3053\u3092\u30e9\u30c3\u30d7\u3059\u308bMTKView\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u3064\u304f\u308a\u3064\u3064\u3001Metal\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e**\u6700\u5c0f\u5b9f\u88c5**\u3092\u63a2\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```swift\nclass MetalImageView: MTKView, MTKViewDelegate\n```\n\n\u4ee5\u4e0b\u3067\u305d\u306e\u5b9f\u88c5\u306e\u8981\u70b9\u3092\u66f8\u304d\u307e\u3059\u3002\n\n##UIImage \u3092 MTLTexture \u306b\u5909\u63db\u3059\u308b\n\nMetal\u3067\u306f`MTLTexture`\u3068\u3044\u3046\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u9069\u5408\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002\n\nUIImage\u304b\u3089MTLTexture\u3092\u751f\u6210\u3059\u308b\u3001\u3082\u3057\u304f\u306f\u30a2\u30bb\u30c3\u30c8\u304b\u3089\u76f4\u63a5\u751f\u6210\u3059\u308b\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u305f\u306e\u3067\u3001\u9069\u5b9c\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n- [Metal\u9006\u5f15\u304d\u30ec\u30b7\u30d4 - Qiita](http://qiita.com/shu223/items/7ed4efd54d03f0babbe0)\n\n\n\n##\u30b7\u30a7\u30fc\u30c0\u3092\u8aad\u307f\u8fbc\u307f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30b9\u30c6\u30fc\u30c8\u3092\u4f5c\u6210\u3059\u308b\n\nMetal\u30b7\u30a7\u30fc\u30c0\u306e\u30d5\u30a1\u30a4\u30eb\uff08xxxx.metal\uff09\u3092\u8aad\u307f\u8fbc\u3093\u3067 `MTLLibrary` \u3092\u751f\u6210\u3057\u3001\u305d\u3053\u304b\u3089\u4f7f\u7528\u3059\u308b\u95a2\u6570\u3092\u53d6\u308a\u51fa\u3057\u3066 `MTLFunction` \u3092\u751f\u6210\u3057\u3001\n\n```swift\nguard let library = device.newDefaultLibrary() else {fatalError()}\nguard let function = library.makeFunction(name: \"kernel_passthrough\") else {fatalError()}\n```\n\n\u305d\u306e\u95a2\u6570\u3092\u5f15\u6570\u306b\u6e21\u3057\u3066\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30b9\u30c6\u30fc\u30c8\uff08\u3053\u3053\u3067\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3046\u306e\u3067`MTLComputePipelineState`\uff09\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```swift\ndo {\n    pipeline = try device.makeComputePipelineState(function: function)\n}\ncatch {\n    fatalError(\"Failed to create MTLComputePipelineState with error: \\(error).\")\n}\n```\n\n\u300c\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30b9\u30c6\u30fc\u30c8\u300d\u3068\u3044\u3046\u306e\u304cGPU\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u3068\u3057\u3066\u306f\u3042\u307e\u308a\u30d4\u30f3\u3068\u6765\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u540c\u30af\u30e9\u30b9\u306e[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](https://developer.apple.com/reference/metal/mtlcomputepipelinestate)\u3092\u898b\u308b\u3068\u3001\n\n> The MTLComputePipelineState protocol defines the interface for a lightweight object used to encode a reference to a compiled compute program. \n\n\u3068\u3042\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u95a2\u6570\u3092\u30b3\u30de\u30f3\u30c9\u30a8\u30f3\u30b3\u30fc\u30c0\u3067\u53d6\u308a\u6271\u3046\u305f\u3081\u306e\u3082\u306e\u306e\u3088\u3046\u3067\u3059\u3002\n\n\n\u3061\u306a\u307f\u306b\u30b7\u30a7\u30fc\u30c0\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3001\u5165\u529b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\n```cpp:Shader.metal\n#include <metal_stdlib>\nusing namespace metal;\n\nmtkview\nkernel void kernel_passthrough(texture2d<float, access::read> inTexture [[texture(0)]],\n                               texture2d<float, access::write> outTexture [[texture(1)]],\n                               uint2 gid [[thread_position_in_grid]])\n{\n    float4 inColor   = inTexture.read(gid);\n    outTexture.write(inColor, gid);\n}\n```\n\n\u53c2\u8003\uff1a http://stackoverflow.com/questions/33605241/display-jpeg-image-using-\n\n\n##\u305d\u306e\u4ed6\u521d\u671f\u5316\u6642\u306b\u3084\u308b\u3053\u3068\n\n\n###\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u3092\u751f\u6210\n\nMTLCommandQueue\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://dsas.blog.klab.org/archives/52168969.html)\u306e\u8aac\u660e\u304c\u5b8c\u7d50\u3067\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u5f15\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\n> **\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\uff08\u307e\u305f\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\uff09\u30b3\u30de\u30f3\u30c9\u3092GPU\u306b\u6d41\u3059\u305f\u3081\u306e\u30ad\u30e5\u30fc\u3002**\nGPU\u306e\u30bf\u30b9\u30af\u304c\u7a7a\u304d\u6b21\u7b2c\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u305f\u9806\u306b\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u3053\u306b\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u3044\u304f\u306e\u3067\u3001\u6700\u521d\u306b\u3064\u304f\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n```swift\ncommandQueue = device.makeCommandQueue()\n```\n\n###MTKView\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\u3061\u3083\u3093\u3068\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3082\u3063\u3068\u8272\u3005\u5fc5\u8981\u305d\u3046\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u4eca\u56de\u306e\u65b9\u6cd5\u3067\u6700\u5c0f\u9650\u30bb\u30c3\u30c8\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u306f\u4ee5\u4e0b\u306e2\u3064\u3002\n\n```swift\nframebufferOnly = false\ndelegate = self\n```\n\n`framebufferOnly` \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f `true` \u3067\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u304c\u4f7f\u3048\u306a\u3044\u7684\u306a\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u8981\u4ef6\u3067\u306f\u63cf\u753b\u3092\u540c\u3058\u30af\u30e9\u30b9\u5185\u3067\u51e6\u7406\u3057\u305f\u3044\u306e\u3067 `delegate` \u306b\u306f\u81ea\u8eab\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n##\u63cf\u753b\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u3068MTKView\u306e\u30d4\u30af\u30bb\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5408\u308f\u305b\u308b\n\n\u63cf\u753b\u3059\u308b`MTLTexture`\u304c\u30bb\u30c3\u30c8\u3055\u308c\u305f\u3089\uff08MTKTextureLoader\u3092\u7528\u3044\u3066\u30ed\u30fc\u30c9\u3057\u305f\u3089\uff09\u3001\u81ea\u8eab\uff08MTKView\uff09\u306e`colorPixelFormat`\u3092\u5408\u308f\u305b\u307e\u3059\u3002\n\n```swift\ncolorPixelFormat = texture.pixelFormat\n```\n\n\u3053\u308c\u3092\u3084\u3089\u306a\u3044\u3068\u3001\u63cf\u753b\u3055\u308c\u3066\u3082**\u5909\u306a\u8272\u306b**\u306a\u308a\u307e\u3059\u3002\n\n\n##MTKViewDelegate\u306e\u5b9f\u88c5\n\n2\u3064\u306e`MTKViewDelegate`\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```swift\nfunc mtkView(_ view: MTKView, drawableSizeWillChange size: CGSize) {\n}\n    \nfunc draw(in view: MTKView) {\n}\n```\n\n###`drawInMTKView:`\u3067\u3084\u308b\u3053\u3068\n\n\u30d3\u30e5\u30fc\u306b\u63cf\u753b\u3092\u884c\u3046\u969b\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\n> Called on the delegate when it is asked to render into the view\n\n\u3053\u3053\u3067\u3084\u308b\u3079\u304d\u3053\u3068\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u8a00\u3046\u3068\u3001\n\n\u300c**\u30b3\u30de\u30f3\u30c9\u3092\u751f\u6210\u3057\u3066\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u306b\u30d7\u30c3\u30b7\u30e5\u3059\u308b**\u300d\n\n\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u306b\u3064\u3044\u3066\u306f\u4e0a\u8ff0\u3057\u305f\u901a\u308a\u3067\u3059\u304c\u3001\u300c\u30b3\u30de\u30f3\u30c9\u306e\u751f\u6210\u300d\u306b\u3064\u3044\u3066\u306f\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\uff08`MTLCommandBuffer`\uff09, \u30b3\u30de\u30f3\u30c9\u30a8\u30f3\u30b3\u30fc\u30c0\uff08`MTLRenderCommandEncoder`, `MTLComputeCommandEncoder`\uff09\u304c\u7d61\u3093\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3089\u306b\u3064\u3044\u3066\u3001\u307e\u305f\u4e0b\u8a18\u30b5\u30a4\u30c8\u306e\u8aac\u660e\u3092\u304a\u501f\u308a\u3057\u307e\u3059\u3002\n\n- [DSAS\u958b\u767a\u8005\u306e\u90e8\u5c4b:Metal\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u524d\u306b\u77e5\u3063\u3066\u304a\u304f\u3068\u697d\u306a\u3053\u3068](http://dsas.blog.klab.org/archives/52168969.html)\n\n[MTLCommandBuffer]\n\n> MTLCommandQueue\u306b\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u30b3\u30de\u30f3\u30c9\u672c\u4f53\u3002\n\u30b3\u30de\u30f3\u30c9\u306f\u4e3b\u306bGPU\u3067\u5b9f\u884c\u3055\u308c\u308b\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u30fb\u9802\u70b9\u30c7\u30fc\u30bf\u306e\u30dd\u30a4\u30f3\u30bf\u3001\u305d\u306e\u4ed6\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30dd\u30a4\u30f3\u30bf\u306a\u3069\u306e\u60c5\u5831\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u7528\u306eMTLCommandBuffer\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u6b21\u306eMTLRenderCommandEncoder\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\n[MTLRenderCommandEncoder] [^1]\n\n> \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u5f79\u5272\u3092\u6301\u3064\u30af\u30e9\u30b9\u3067\u3059\u3002\nMTLBuffer\u3084MTLTexture\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30dd\u30a4\u30f3\u30bf\u3084\u3001\u4ee5\u4e0b\u3067\u7d39\u4ecb\u3059\u308bMTLRenderPipelineState\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5143\u306b\u30b3\u30de\u30f3\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n[^1]: \u3053\u3053\u3067\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3063\u3066\u308b\u306e\u3067\u3001\u30b3\u30de\u30f3\u30c9\u30a8\u30f3\u30b3\u30fc\u30c0\u306f`MTLComputeEncoder`\u306b\u306a\u308a\u307e\u3059\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n```swift\nfunc draw(in view: MTKView) {\n    guard let drawable = view.currentDrawable else {\n        return\n    }\n    guard let texture = texture else {\n        return\n    }\n    \n    let commandBuffer = commandQueue.makeCommandBuffer()\n    \n    let encoder: MTLComputeCommandEncoder = commandBuffer.makeComputeCommandEncoder()\n    encoder.setComputePipelineState(pipeline)\n    encoder.setTexture(texture, at: 0)\n    encoder.setTexture(drawable.texture, at: 1)\n    encoder.dispatchThreadgroups(threadgroupsPerGrid, threadsPerThreadgroup: threadsPerThreadgroup)\n    encoder.endEncoding()\n    \n    commandBuffer.present(drawable)\n    commandBuffer.commit()\n}\n```\n\n###Drawable\n\n\u4e0a\u8a18\u5b9f\u88c5\u3067\u3001\n\n```swift\nguard let drawable = view.currentDrawable else {\n    return\n}\n```\n\n\u3068\u3001MTKView \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089 `currentDrawable` \u306a\u308b\u3082\u306e\u3092\u53d6\u5f97\u3057\u3001\n\n```\nencoder.setTexture(drawable.texture, at: 1)\n```\n\n\u305d\u306e `texture` \u3092\u30b7\u30a7\u30fc\u30c0\u306e\u7b2c2\u5f15\u6570\uff08\u3064\u307e\u308a\u51fa\u529b\u5074\uff09\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3067\u3001\u6700\u5f8c\u306b\n\n```swift\ncommandBuffer.present(drawable)\ncommandBuffer.commit()\n```\n\n\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\u306b\u6e21\u3057\u3066\u30b3\u30df\u30c3\u30c8\u3002\uff08\u2192\u30b3\u30de\u30f3\u30c9\u30ad\u30e5\u30fc\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u308b\uff09\n\n\n\u3053\u306e `currentDrawable` \u306e\u578b\u306f `CAMetalDrawable` \u3067\u3001\u30d8\u30c3\u30c0\u306b\u306f\u3053\u3046\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n> CAMetalDrawable **represents a displayable buffer** that vends an object that conforms to the MTLTexture protocol that may be used to create a render target for Metal.\n\n\n###\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\n\n\u3082\u3046\u3072\u3068\u3064\u3001\u4e0a\u8a18\u5b9f\u88c5\u3067\n\n```swift\nencoder.dispatchThreadgroups(threadgroupsPerGrid, threadsPerThreadgroup: threadsPerThreadgroup)\n```\n\n\u3068\u3044\u3046\u3053\u3068\u3092\u3084\u3063\u3066\u3044\u307e\u3059\u3002\u5f15\u6570\u306b\u6e21\u3057\u3066\u3044\u308b2\u3064\u306e\u5024\u306f\u3069\u3061\u3089\u3082`MTLSize`\u578b\u3067\u3001GPU\u3067\u4e26\u5217\u306b\u5b9f\u884c\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u306e\u6570\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u308c\u305e\u308c\u306e\u5f15\u6570\u306b\u3064\u3044\u3066\u3001[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](https://developer.apple.com/reference/metal/mtlcomputecommandencoder/1443138-dispatchthreadgroups?language=objc)\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n- `threadgroupsPerGrid`\n\n> The number of threadgroups for the grid, in each dimension.\n\n- `threadsPerThreadgroup`\n\n> The number of threads in one threadgroup, in each dimension.\n\n\u524d\u8005\u304c\uff08\u30b0\u30ea\u30c3\u30c9\u3042\u305f\u308a\u306e\uff09\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u306e\u6570\u3001\u5f8c\u8005\u304c1\u3064\u306e\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u306b\u304a\u3051\u308b\u30b9\u30ec\u30c3\u30c9\u6570\u3001\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6b63\u76f4\u3069\u3046\u3044\u3046\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3088\u3044\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u306fApple\u306e[MetalImageProcessing](https://developer.apple.com/library/prerelease/content/samplecode/MetalImageProcessing/Introduction/Intro.html#//apple_ref/doc/uid/TP40014598)\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\uff08\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8\u30b7\u30a7\u30fc\u30c0\u3067\u753b\u50cf\u3092\u53d6\u308a\u6271\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u70b9\u3067\u3001\u72b6\u6cc1\u306f\u4f3c\u901a\u3063\u3066\u3044\u308b\u306e\u304b\u306a\u3068\uff09\n\n```swift\nprivate let threadsPerThreadgroup = MTLSize(width: 16, height: 16, depth: 1)\n```\n\n```swift\nthreadgroupsPerGrid = MTLSize(width: (texture.width + threadsPerThreadgroup.width - 1) / threadsPerThreadgroup.width,\n                              height: (texture.height + threadsPerThreadgroup.height - 1) / threadsPerThreadgroup.height,\n                              depth: 1)\n```\n\n###\u4f59\u8ac7\uff1a\u51e6\u7406\u3092\u66f8\u304b\u306a\u3044\u3068\u3069\u3046\u306a\u308b\uff1f\n\n\u4f55\u304c\u5fc5\u9808\u3067\u3001\u4f55\u304c\u5fc5\u9808\u3058\u3083\u306a\u3044\u304b\u3092\u63a2\u308b\u305f\u3081\u3001\u307e\u305a\u306f\u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\n```swift\nlet commandBuffer = commandQueue.makeCommandBuffer()\n\n// let encoder = commandBuffer.makeComputeCommandEncoder()\n// encoder.setComputePipelineState(pipeline)\n// encoder.setTexture(texture, at: 0)\n// encoder.setTexture(drawable.texture, at: 1)\n// encoder.dispatchThreadgroups(threadgroupsPerGrid, threadsPerThreadgroup: threadsPerThreadgroup)\n// encoder.endEncoding()\n\ncommandBuffer.present(drawable)\ncommandBuffer.commit()\n```\n\n\u2192 \u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306b\u306f\u306a\u3089\u306a\u3044\u304c\u3001drawable\u306b\u4f55\u3082\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001**\u771f\u3063\u9ed2\u306b\u63cf\u753b\u3055\u308c\u308b**\n\n\n\u30b3\u30de\u30f3\u30c9\u30d0\u30c3\u30d5\u30a1\u3082\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\n```swift\n// let commandBuffer = commandQueue.makeCommandBuffer()\n\n// let encoder = commandBuffer.makeComputeCommandEncoder()\n// encoder.setComputePipelineState(pipeline)\n// encoder.setTexture(texture, at: 0)\n// encoder.setTexture(drawable.texture, at: 1)\n// encoder.dispatchThreadgroups(threadgroupsPerGrid, threadsPerThreadgroup: threadsPerThreadgroup)\n// encoder.endEncoding()\n\n// commandBuffer.present(drawable)\n// commandBuffer.commit()\n```\n\n\u2192 **\u771f\u3063\u767d\u306b\u63cf\u753b\u3055\u308c\u308b**\u3002\u63cf\u753b\u547d\u4ee4\u304c\u306a\u3044\u306e\u3067\u3001\u305d\u3082\u305d\u3082\u63cf\u753b\u304c\u884c\u308f\u308c\u305a\u3001\u4e0b\u306e\u30d3\u30e5\u30fc\u304c\u898b\u3048\u3066\u3044\u308b\u3001\u3068\u89e3\u91c8\u3057\u307e\u3057\u305f\u3002\n\n##\u51fa\u6765\u4e0a\u304c\u308a\n\n\u4ee5\u4e0a\u3067\u3001\n\n```swift\nimageView.image = UIImage(named: \"filename\")\n```\n\n\u3068\u3084\u308b\u3060\u3051\u3067Metal\u3067\u753b\u50cf\u3092\u63cf\u753b\u3059\u308b\u30af\u30e9\u30b9\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\n\u304c\u3001`contentMode`\u306b\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3057\u30012x/3x\u3068\u3044\u3063\u305fRetina\u30b9\u30b1\u30fc\u30eb\u3082\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u306e\u3067\u3001\u5b9f\u969b\u306e\u3068\u3053\u308d**UIImageView\u306e\u4ee3\u66ff\u3068\u3057\u3066\u306f\u307e\u3060\u307e\u3060\u5b8c\u6210\u5ea6\u304c\u7a0b\u9060\u3044**\u8d85\u539f\u59cb\u7684\u30d1\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\n\n\u6700\u4f4e\u9650\u306e\u5bfe\u5fdc\uff08contentMode/Retina\uff09\u304c\u3067\u304d\u305f\u3089GitHub\u306b\u30a2\u30c3\u30d7\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n"}