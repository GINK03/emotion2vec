{"tags": ["avx512"], "context": " More than 1 year has passed since last update.\u5024\u304c\u7bc4\u56f2\u306b\u5165\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u6bd4\u8f03\u3059\u308b\u6642\u3001\u7d76\u5bfe\u5024\u3067\u6bd4\u8f03\u3057\u305f\u3044\u5834\u5408\u306f\u305f\u307e\u306b\u3042\u308a\u307e\u3059\u306d\u3002\nrangeps \u306f\u3001\u7b26\u53f7\u3092\u591a\u5c11\u64cd\u4f5c\u3057\u3066 min, max \u3057\u307e\u3059\u3002\n\u5373\u50244bit\u306e\u3046\u30612bit\u3067\u3001\n\nmin\nmax\n\u7d76\u5bfe\u5024\u6bd4\u8f03\u306e min\n\u7d76\u5bfe\u5024\u6bd4\u8f03\u306e max \n\n\u304c\u9078\u3079\u3066\u3001\u6b8b\u308a2bit\u3067\u3001\u7d50\u679c\u306e\u7b26\u53f7\u3092\u3001\n\nsrc1 \u306e\u7b26\u53f7\nmin,max \u7d50\u679c\u306e\u7b26\u53f7\n\u7b26\u53f7\u30af\u30ea\u30a2\n\u7b26\u53f7\u30bb\u30c3\u30c8\n\n\u304c\u9078\u3079\u307e\u3059\u3002\n#include <immintrin.h>\n#include <stdio.h>\n\nfloat out[16];\n\nstatic inline __attribute__((always_inline)) void\ntest(float a, float b, const int imm)\n{\n    __m512 v1 = _mm512_set1_ps(a);\n    __m512 v2 = _mm512_set1_ps(b);\n    __m512 v3;\n\n    __asm__ __volatile__ (\"vrangeps %[imm], %[src2], %[src1], %[dest]\\n\\t\"\n                          :[dest]\"=v\"(v3)\n                          :[src1]\"v\"(v1),\n                           [src2]\"v\"(v2),\n                           [imm]\"i\"(imm)\n        );\n\n    _mm512_storeu_ps(out, v3);\n\n    printf(\"src1=%4.0f, src2=%4.0f, cmp=%d, signsel=%d : result=%5.1f\\n\", a, b, (imm)&3, (imm>>2)&3, out[0]);\n}\n\n#define CMP_MIN 0\n#define CMP_MAX 1\n#define CMP_ABS_MIN 2\n#define CMP_ABS_MAX 3\n\n#define SIGNSEL_PRESERVE_SRC1 (0<<2)\n#define SIGNSEL_PRESERVE_RESULT (1<<2)\n#define SIGNSEL_SETZERO (2<<2)\n#define SIGNSEL_SET1 (3<<2)\n\nint\nmain()\n{\n    test(-2, 1, CMP_ABS_MIN|SIGNSEL_PRESERVE_SRC1);\n    test(2, -1, CMP_ABS_MIN|SIGNSEL_PRESERVE_SRC1);\n    test(2, -1, CMP_ABS_MIN|SIGNSEL_PRESERVE_SRC1);\n\n    test(2, -1, CMP_MIN|SIGNSEL_PRESERVE_RESULT);\n\n    test(-2,-2, CMP_MAX|SIGNSEL_SETZERO);\n    test(2,2, CMP_MIN|SIGNSEL_SET1);\n}\n\n$ ./sde -skx -- ./a.out \nsrc1=  -2, src2=   1, cmp=2, signsel=0 : result= -1.0\nsrc1=   2, src2=  -1, cmp=2, signsel=0 : result=  1.0\nsrc1=   2, src2=  -1, cmp=2, signsel=0 : result=  1.0\nsrc1=   2, src2=  -1, cmp=0, signsel=1 : result= -1.0\nsrc1=  -2, src2=  -2, cmp=1, signsel=2 : result=  2.0\nsrc1=   2, src2=   2, cmp=0, signsel=3 : result= -2.0\n\n\u5b8c\u5168\u306b\u6d6e\u52d5\u5c0f\u6570\u6f14\u7b97\u306e\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u4f55\u6545\u304b AVX-512DQ \u62e1\u5f35\u3067\u3059\u3002KNL\u3067\u306f\u52d5\u304d\u307e\u305b\u3093\u3002\n\u660e\u65e5\u306f @tanakmura \u304c vpexpandd \u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\u5024\u304c\u7bc4\u56f2\u306b\u5165\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u6bd4\u8f03\u3059\u308b\u6642\u3001\u7d76\u5bfe\u5024\u3067\u6bd4\u8f03\u3057\u305f\u3044\u5834\u5408\u306f\u305f\u307e\u306b\u3042\u308a\u307e\u3059\u306d\u3002\n\nrangeps \u306f\u3001\u7b26\u53f7\u3092\u591a\u5c11\u64cd\u4f5c\u3057\u3066 min, max \u3057\u307e\u3059\u3002\n\n\u5373\u50244bit\u306e\u3046\u30612bit\u3067\u3001\n\n- min\n- max\n- \u7d76\u5bfe\u5024\u6bd4\u8f03\u306e min\n- \u7d76\u5bfe\u5024\u6bd4\u8f03\u306e max \n\n\u304c\u9078\u3079\u3066\u3001\u6b8b\u308a2bit\u3067\u3001\u7d50\u679c\u306e\u7b26\u53f7\u3092\u3001\n\n- src1 \u306e\u7b26\u53f7\n- min,max \u7d50\u679c\u306e\u7b26\u53f7\n- \u7b26\u53f7\u30af\u30ea\u30a2\n- \u7b26\u53f7\u30bb\u30c3\u30c8\n\n\u304c\u9078\u3079\u307e\u3059\u3002\n\n```cpp\n#include <immintrin.h>\n#include <stdio.h>\n\nfloat out[16];\n\nstatic inline __attribute__((always_inline)) void\ntest(float a, float b, const int imm)\n{\n    __m512 v1 = _mm512_set1_ps(a);\n    __m512 v2 = _mm512_set1_ps(b);\n    __m512 v3;\n    \n    __asm__ __volatile__ (\"vrangeps %[imm], %[src2], %[src1], %[dest]\\n\\t\"\n                          :[dest]\"=v\"(v3)\n                          :[src1]\"v\"(v1),\n                           [src2]\"v\"(v2),\n                           [imm]\"i\"(imm)\n        );\n\n    _mm512_storeu_ps(out, v3);\n\n    printf(\"src1=%4.0f, src2=%4.0f, cmp=%d, signsel=%d : result=%5.1f\\n\", a, b, (imm)&3, (imm>>2)&3, out[0]);\n}\n\n#define CMP_MIN 0\n#define CMP_MAX 1\n#define CMP_ABS_MIN 2\n#define CMP_ABS_MAX 3\n\n#define SIGNSEL_PRESERVE_SRC1 (0<<2)\n#define SIGNSEL_PRESERVE_RESULT (1<<2)\n#define SIGNSEL_SETZERO (2<<2)\n#define SIGNSEL_SET1 (3<<2)\n\nint\nmain()\n{\n    test(-2, 1, CMP_ABS_MIN|SIGNSEL_PRESERVE_SRC1);\n    test(2, -1, CMP_ABS_MIN|SIGNSEL_PRESERVE_SRC1);\n    test(2, -1, CMP_ABS_MIN|SIGNSEL_PRESERVE_SRC1);\n\n    test(2, -1, CMP_MIN|SIGNSEL_PRESERVE_RESULT);\n\n    test(-2,-2, CMP_MAX|SIGNSEL_SETZERO);\n    test(2,2, CMP_MIN|SIGNSEL_SET1);\n}\n```\n\n```\n$ ./sde -skx -- ./a.out \nsrc1=  -2, src2=   1, cmp=2, signsel=0 : result= -1.0\nsrc1=   2, src2=  -1, cmp=2, signsel=0 : result=  1.0\nsrc1=   2, src2=  -1, cmp=2, signsel=0 : result=  1.0\nsrc1=   2, src2=  -1, cmp=0, signsel=1 : result= -1.0\nsrc1=  -2, src2=  -2, cmp=1, signsel=2 : result=  2.0\nsrc1=   2, src2=   2, cmp=0, signsel=3 : result= -2.0\n```\n\n\u5b8c\u5168\u306b\u6d6e\u52d5\u5c0f\u6570\u6f14\u7b97\u306e\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u4f55\u6545\u304b AVX-512DQ \u62e1\u5f35\u3067\u3059\u3002KNL\u3067\u306f\u52d5\u304d\u307e\u305b\u3093\u3002\n\n\n\u660e\u65e5\u306f @tanakmura \u304c vpexpandd \u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n"}