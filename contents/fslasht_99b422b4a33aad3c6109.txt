{"context": " More than 1 year has passed since last update.\u3000libGDX\u306f\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u3059\u304c\u3001Android\u5c02\u7528\u3067\u4f7f\u3044\u305f\u3044\u5834\u5408\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3000\u65e2\u5b58\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7279\u5b9a\u306eActivity\u3060\u3051libGDX\u306b\u3057\u305f\u308a\u3001\u30bd\u30fc\u30b7\u30e3\u30ebSDK\u3084Android\u306e\u6a5f\u80fd\u3092\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u9060\u616e\u7121\u304f\u4f7f\u3063\u305f\u308a\u2026\n\u3000\u4eca\u56de\u306f\u3001gdx-setup.jar \u3092\u4f7f\u308f\u305a\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u306e\u3067\u305d\u306e\u624b\u9806\u3092\u516c\u958b\u3057\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u624b\u9806\n\n\u6700\u65b0\u306elibGDX\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u304b\u3089 libgdx-nightly-latest.zip \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttp://libgdx.badlogicgames.com/nightlies/\n\n\nAndroid\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\u203b\u6975\u666e\u901a\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u65b9\u6cd5\u3067\u3059\nEclipse\u3092\u8d77\u52d5\u3057\u3066\u30e1\u30cb\u30e5\u30fc\u306e\u300c\u65b0\u898f\u300d\u2192\u300cAndroid\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300d\n\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\uff1aGdxAppForAndroidOnly\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\uff1aGdxAppForAndroidOnly\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\uff1acom.dokokano.gdxappforandroidonly\n\n\n\n\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306e\u4f5c\u6210\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3044\u308c\u308b\n\u300cBlank Activity\u300d\u3092\u9078\u629e\n\n\u3053\u308c\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8ffd\u52a0\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305flibGDX\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a2\u30fc\u30ab\u30a4\u30d6\u304b\u3089\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\nlibgdx-nightly-latest.zip\u3092\u5c55\u958b\u3057\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306elibs\u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203b \u30d5\u30a1\u30a4\u30eb\u3092Eclipse\u306e\u30c4\u30ea\u30fc\u306b\u76f4\u63a5\u30c9\u30ed\u30c3\u30d7\u3057\u3066OK\u3067\u3059\u3002\n\ngdx.jar\ngdx-backend-android.jar\narmeabi (\u30d5\u30a9\u30eb\u30c0)\narmeabi-v7a (\u30d5\u30a9\u30eb\u30c0)\nx86 (\u30d5\u30a9\u30eb\u30c0)\n\n\n\u3000\u4e0a\u8a18\u306e\u3088\u3046\u306b\u306a\u308c\u3070OK\u3067\u3059\u3002\n\u3000\u30a4\u30f3\u30dd\u30fc\u30c8\u306f\u30b3\u30d4\u30fc\u3067\u884c\u3044\u307e\u3059\u3002\n\n\nJava\u306e\u30d3\u30eb\u30c9\u30d1\u30b9\u306b\u8ffd\u52a0\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u958b\u304d\u3001\u300cJava\u306e\u30d3\u30eb\u30c9\u30d1\u30b9\u3092\u9078\u629e\u300d\u2192\u300c\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u30bf\u30d6\u300d\u2192\u300cJar\u8ffd\u52a0...\u300d\u30dc\u30bf\u30f3\n\n\u4ee5\u4e0b\u306eJar\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ngdx.jar\ngdx-backend-android.jar\n\n\n\n\u30b3\u30fc\u30c9\u306e\u66f4\u65b0\n\nMainActivity.java\u3092\u66f8\u304d\u63db\u3048\n\u3000\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f MainActivity.java \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\uff08\u307b\u3068\u3093\u3069\u5165\u308c\u66ff\u3048\u3067\u3059\uff09\n\nMainActivity.java\npackage com.dokokano.gdxappforandroidonly;\n\nimport android.os.Bundle;\n\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.android.AndroidApplication;\nimport com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;\nimport com.badlogic.gdx.graphics.GL20;\n\npublic class MainActivity extends AndroidApplication {\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        AndroidApplicationConfiguration cfg = new AndroidApplicationConfiguration();\n\n        initialize(new MyGdxApp(), cfg);\n    }\n\n    class MyGdxApp implements ApplicationListener  {\n        @Override\n        public void create() {\n        }\n\n        @Override\n        public void dispose() {\n        }\n\n        @Override\n        public void pause() {\n        }\n\n        @Override\n        public void render() {\n            // \u8d64\u3067\u5857\u308a\u3064\u3076\u3059\n            Gdx.gl.glClearColor(1, 0, 0, 1);\n            Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        }\n\n        @Override\n        public void resize(int width, int height) {\n        }\n\n        @Override\n        public void resume() {\n        }\n    }\n}\n\n\n\n\u5b9f\u884c\nAndroid\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u8d64\u3044\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\u3053\u306e\u753b\u9762\u81ea\u4f53\u3001libGDX\u306b\u3088\u3063\u3066\u63cf\u753b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u30b3\u30fc\u30c9\u306e\u66f4\u65b0\uff12\uff1a\u6a5f\u80fd\u3092\u5f37\u5316\n\u3000\u8d64\u3044\u753b\u9762\u3067\u306f\u30d4\u30f3\u3068\u6765\u306a\u3044\u306e\u3067\u753b\u50cf\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u753b\u50cf\u3092\u8ffd\u52a0\n\u3000\u753b\u50cf\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\nhttp://libgdx.badlogicgames.com/nightlies/config/libgdx-logo.png\n\u4e0a\u8a18URL\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u300clibgdx-logo.png\u300d\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306easset\u306b\u8ffd\u52a0\uff08\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\uff09\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u203b \u753b\u50cf\u306e\u30b5\u30a4\u30ba\u306f200x250\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002\n\nMainActivity.java\u3092\u66f8\u304d\u63db\u3048\n\nMainActivity.java\npackage com.dokokano.gdxappforandroidonly;\n\nimport android.os.Bundle;\n\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.android.AndroidApplication;\nimport com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.Texture.TextureFilter;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\nimport com.badlogic.gdx.math.Vector2;\nimport com.badlogic.gdx.math.Vector3;\n\npublic class MainActivity extends AndroidApplication {\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        AndroidApplicationConfiguration cfg = new AndroidApplicationConfiguration();\n\n        initialize(new MyGdxApp(), cfg);\n    }\n\n    class MyGdxApp implements ApplicationListener  {\n        // \u753b\u9762\u306e\u8ad6\u7406\u5ea7\u6a19\n        static private final float WIDTH  =320;\n        static private final float HEIGHT  =640;\n\n        // \u30ab\u30a6\u30f3\u30bf\u30fc(render\u304c\u547c\u3070\u308c\u308b\u305f\u3073\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\uff09\n        int count;\n\n        // Gdx\u7528\u5909\u6570\n        OrthographicCamera camera;\n        SpriteBatch batch;\n        Texture texture;\n        Sprite sprite;\n        BitmapFont font;\n\n\n        @Override\n        public void create() {\n            // \u753b\u9762\u306e\u5b9f\u969b\u306e\u30b5\u30a4\u30ba(pixel)\n            float w = Gdx.graphics.getWidth();\n            float h = Gdx.graphics.getHeight();\n\n            // \u30ab\u30e1\u30e9\u8a2d\u5b9a\u3000\u203b\u753b\u9762\u306e\u30b5\u30a4\u30ba\u306b\u3042\u308f\u305b\u7e26\u6a2a\u6bd4\u304c\u6b63\u3057\u3044\u72b6\u614b\u3067\u6700\u5927\u9650\u306e\u30b5\u30a4\u30ba\u3067\u8a2d\u5b9a\n            float scrRatio =  w/h;              // \u5b9f\u969b\u306e\u753b\u9762\u306e\u7e26\u6a2a\u6bd4\n            float logicalRatio =  WIDTH /HEIGHT;    // \u8ad6\u7406\u5ea7\u6a19\u306e\u7e26\u6a2a\u6bd4\n            camera = new OrthographicCamera();\n            if ( scrRatio>logicalRatio) {\n                // \u5b9f\u969b\u306e\u753b\u9762\u306e\u307b\u3046\u304c\u8ad6\u7406\u5ea7\u6a19\u3088\u308a\u6a2a\u9577\n                camera.setToOrtho(false, WIDTH/logicalRatio*scrRatio, HEIGHT);\n                camera.translate(new Vector2( - (WIDTH/logicalRatio*scrRatio - WIDTH)/2,0));\n                camera.update();\n            }else{\n                // \u5b9f\u969b\u306e\u753b\u9762\u306e\u307b\u3046\u304c\u8ad6\u7406\u5ea7\u6a19\u3088\u308a\u7e26\u9577\n                camera.setToOrtho(false, WIDTH, HEIGHT*logicalRatio/scrRatio  );\n                camera.translate(new Vector2(0,  -(HEIGHT*logicalRatio/scrRatio - HEIGHT)/2));\n                camera.update();\n            }\n\n            // \u30b9\u30d7\u30e9\u30a4\u30c8\u30d0\u30c3\u30c1\u521d\u671f\u5316\n            batch = new SpriteBatch();\n\n            // \u30d5\u30a9\u30f3\u30c8\u521d\u671f\u5316\n            font = new BitmapFont();\n\n            // \u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u3092\u30ed\u30fc\u30c9\u3057\u30b9\u30d7\u30e9\u30a4\u30c8\u306b\u30bb\u30c3\u30c8\u3059\u308b\n            texture = new Texture(Gdx.files.internal(\"libgdx-logo.png\"));   // 200x250pixel\n            texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);\n            TextureRegion region = new TextureRegion(texture, 0, 0, 200, 250);\n\n            sprite = new Sprite(region);\n            sprite.setOrigin(sprite.getWidth()/2, sprite.getHeight()/2);                // \u30b9\u30d7\u30e9\u30a4\u30c8\u306e\u4e2d\u5fc3\u3092\u539f\u70b9\u306b\n            sprite.setPosition(WIDTH/2-sprite.getWidth()/2, HEIGHT/2-sprite.getHeight()/2); // \u753b\u9762\u4e2d\u592e\u306b\u914d\u7f6e\n        }\n\n        @Override\n        public void dispose() {\n            texture.dispose();\n            font.dispose();\n        }\n\n        @Override\n        public void pause() {\n        }\n\n        @Override\n        public void render() {\n            count++;\n            // \u8d64\u3067\u5857\u308a\u3064\u3076\u3059\n            Gdx.gl.glClearColor(1, 0, 0, 1);\n            Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n            // \u63cf\u753b\n            batch.setProjectionMatrix(camera.combined);\n            batch.begin();\n\n            sprite.setRotation(count);\n            sprite.draw(batch);\n            font.setColor(Color.WHITE);\n            font.draw(batch, \"for Android only!\", 0, HEIGHT);\n\n            batch.end();\n        }\n\n        @Override\n        public void resize(int width, int height) {\n        }\n\n        @Override\n        public void resume() {\n        }\n    }\n}\n\n\n\n\u5b9f\u884c\n\n\u753b\u9762\u4e2d\u592e\u3067\u30a4\u30e1\u30fc\u30b8\u304c\u56de\u8ee2\u3059\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306e\u66f4\u65b0\uff13\uff1aAndroid \u306e\u6a5f\u80fd\u3092\u547c\u3073\u51fa\u3059\n\nMainActivity.java\u306b\u8ffd\u52a0\n\u30e1\u30f3\u30d0\u30fc\u5909\u6570\u8ffd\u52a0\n    Handler handler_ = new Handler();\n\nrender()\u30e1\u30bd\u30c3\u30c9\u5185\u306b\u8ffd\u52a0\n    // \u30bf\u30c3\u30d7\u3055\u308c\u305f\u5834\u5408 Toast\u3092\u8868\u793a\n    if ( Gdx.input.justTouched()) {\n        // Toast\u8868\u793a\u203bAndroid\u5074\u306e\u6a5f\u80fd\u3092\u5229\u7528\n        handler_.post(new Runnable() {\n            @Override\n            public void run() {\n                Toast.makeText(getApplicationContext(), \"Touched! (\" + count + \")\", Toast.LENGTH_SHORT).show();\n            }\n        });\n    }\n\n\n\u5b9f\u884c\n\n\u3000\u753b\u9762\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3068Toast\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u3000\u3053\u306e\u3088\u3046\u306b\u76f4\u63a5Android\u306e\u6a5f\u80fd\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3000\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u304c\u4e0d\u8981\u306a\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u5f62\u3067\u7d44\u307f\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u304c\u52b9\u7387\u7684\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u30bd\u30fc\u30b9\u5168\u4f53\n\nMainActivity.java\npackage com.dokokano.gdxappforandroidonly;\n\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.widget.Toast;\n\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.android.AndroidApplication;\nimport com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.Texture.TextureFilter;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\nimport com.badlogic.gdx.graphics.glutils.ShapeRenderer;\nimport com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;\nimport com.badlogic.gdx.math.Vector2;\n\npublic class MainActivity extends AndroidApplication {\n    Handler handler_ = new Handler();\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        AndroidApplicationConfiguration cfg = new AndroidApplicationConfiguration();\n        initialize(new MyGdxApp(), cfg);\n    }\n\n    class MyGdxApp implements ApplicationListener  {\n        // \u753b\u9762\u306e\u8ad6\u7406\u5ea7\u6a19\n        static private final float WIDTH  =320;\n        static private final float HEIGHT  =640;\n\n        // \u30ab\u30a6\u30f3\u30bf\u30fc(render\u304c\u547c\u3070\u308c\u308b\u305f\u3073\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\uff09\n        int count;\n\n        // Gdx\u7528\u5909\u6570\n        OrthographicCamera camera;\n        SpriteBatch batch;\n        ShapeRenderer renderer;\n        Texture texture;\n        Sprite sprite;\n        BitmapFont font;\n\n\n        @Override\n        public void create() {\n            // \u753b\u9762\u306e\u5b9f\u969b\u306e\u30b5\u30a4\u30ba(pixel)\n            float w = Gdx.graphics.getWidth();\n            float h = Gdx.graphics.getHeight();\n\n            Gdx.app.log(\"\", \"size w:\" + w + \" h:\" + h);\n\n            // \u30ab\u30e1\u30e9\u8a2d\u5b9a\u3000\n            // \u203b\u753b\u9762\u306e\u30b5\u30a4\u30ba\u306b\u3042\u308f\u305b\u7e26\u6a2a\u6bd4\u304c\u6b63\u3057\u3044\u72b6\u614b\u3067\u6700\u5927\u9650\u306e\u30b5\u30a4\u30ba\u3067\u8a2d\u5b9a\n            float scrRatio =  w/h;              // \u5b9f\u969b\u306e\u753b\u9762\u306e\u7e26\u6a2a\u6bd4\n            float logicalRatio =  WIDTH /HEIGHT;    // \u8ad6\u7406\u5ea7\u6a19\u306e\u7e26\u6a2a\u6bd4\n            camera = new OrthographicCamera();\n            if ( scrRatio>logicalRatio) {\n                // \u5b9f\u969b\u306e\u753b\u9762\u306e\u307b\u3046\u304c\u8ad6\u7406\u5ea7\u6a19\u3088\u308a\u6a2a\u9577\n                camera.setToOrtho(false, WIDTH/logicalRatio*scrRatio, HEIGHT);\n                camera.translate(new Vector2( - (WIDTH/logicalRatio*scrRatio - WIDTH)/2,0));\n                camera.update();\n            }else{\n                // \u5b9f\u969b\u306e\u753b\u9762\u306e\u307b\u3046\u304c\u8ad6\u7406\u5ea7\u6a19\u3088\u308a\u7e26\u9577\n                camera.setToOrtho(false, WIDTH, HEIGHT*logicalRatio/scrRatio  );\n                camera.translate(new Vector2(0,  -(HEIGHT*logicalRatio/scrRatio - HEIGHT)/2));\n                camera.update();\n            }\n\n            // \u30b9\u30d7\u30e9\u30a4\u30c8\u30d0\u30c3\u30c1\u521d\u671f\u5316\n            batch = new SpriteBatch();\n            // \u30ec\u30f3\u30c0\u30e9\u30fc\u521d\u671f\u5316\n            renderer = new ShapeRenderer();\n\n            // \u30d5\u30a9\u30f3\u30c8\u521d\u671f\u5316\n            font = new BitmapFont();\n\n            // \u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u3092\u30ed\u30fc\u30c9\u3057\u30b9\u30d7\u30e9\u30a4\u30c8\u306b\u30bb\u30c3\u30c8\u3059\u308b\n            texture = new Texture(Gdx.files.internal(\"libgdx-logo.png\"));   // 200x250pixel\n            texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);\n            TextureRegion region = new TextureRegion(texture, 0, 0, 200, 250);\n\n            sprite = new Sprite(region);\n            sprite.setOrigin(sprite.getWidth()/2, sprite.getHeight()/2);                // \u30b9\u30d7\u30e9\u30a4\u30c8\u306e\u4e2d\u5fc3\u3092\u539f\u70b9\u306b\n            sprite.setPosition(WIDTH/2-sprite.getWidth()/2, HEIGHT/2-sprite.getHeight()/2); // \u753b\u9762\u4e2d\u592e\u306b\u914d\u7f6e\n        }\n\n        @Override\n        public void dispose() {\n            texture.dispose();\n            font.dispose();\n        }\n\n        @Override\n        public void pause() {\n        }\n\n        @Override\n        public void render() {\n            count++;\n            // \u8d64\u3067\u5857\u308a\u3064\u3076\u3059\n            Gdx.gl.glClearColor(1, 0, 0, 1);\n            Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n            // \u63cf\u753b\n            batch.setProjectionMatrix(camera.combined);\n            batch.begin();\n            sprite.setRotation(count);\n            sprite.draw(batch);\n            font.setColor(Color.WHITE);\n            font.draw(batch, \"for Android only!\", 0, HEIGHT);\n            batch.end();\n\n            // \u753b\u9762\u306e\u67a0\u3092\u63cf\u753b\uff08\u8ad6\u7406\u5ea7\u6a19 WIDTH,HEIGHT\u306e\u7bc4\u56f2\uff09\n            renderer.setProjectionMatrix(camera.combined);\n            renderer.begin(ShapeType.Line);\n            renderer.setColor(1,1,1f,1);\n            renderer.rect(0, 0,WIDTH,HEIGHT);\n            renderer.end();\n\n            // \u30bf\u30c3\u30d7\u3055\u308c\u305f\u5834\u5408 Toast\u3092\u8868\u793a\n            if ( Gdx.input.justTouched()) {\n                // Toast\u8868\u793a\u203bAndroid\u5074\u306e\u6a5f\u80fd\u3092\u5229\u7528\n                handler_.post(new Runnable() {\n                    @Override\n                    public void run() {\n                        Toast.makeText(getApplicationContext(), \"Touched! (\" + count + \")\", Toast.LENGTH_SHORT).show();\n                    }\n                });\n            }\n        }\n\n        @Override\n        public void resize(int width, int height) {\n        }\n\n        @Override\n        public void resume() {\n        }\n    }\n}\n\n\n\u3000libGDX\u306f\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u3059\u304c\u3001Android\u5c02\u7528\u3067\u4f7f\u3044\u305f\u3044\u5834\u5408\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3000\u65e2\u5b58\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7279\u5b9a\u306eActivity\u3060\u3051libGDX\u306b\u3057\u305f\u308a\u3001\u30bd\u30fc\u30b7\u30e3\u30ebSDK\u3084Android\u306e\u6a5f\u80fd\u3092\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u9060\u616e\u7121\u304f\u4f7f\u3063\u305f\u308a\u2026\n\u3000\u4eca\u56de\u306f\u3001gdx-setup.jar \u3092\u4f7f\u308f\u305a\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u306e\u3067\u305d\u306e\u624b\u9806\u3092\u516c\u958b\u3057\u307e\u3059\u3002\n\n\n# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u624b\u9806\n\n## \u6700\u65b0\u306elibGDX\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u304b\u3089 `libgdx-nightly-latest.zip` \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttp://libgdx.badlogicgames.com/nightlies/\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 19.02.08trim.png](https://qiita-image-store.s3.amazonaws.com/0/42140/43b8a1e9-69b7-95c8-62c1-d7366421769f.png)\n\n\n\n##Android\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\u203b\u6975\u666e\u901a\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u65b9\u6cd5\u3067\u3059\nEclipse\u3092\u8d77\u52d5\u3057\u3066\u30e1\u30cb\u30e5\u30fc\u306e\u300c\u65b0\u898f\u300d\u2192\u300cAndroid\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300d\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 17.11.00.png](https://qiita-image-store.s3.amazonaws.com/0/42140/c3da250d-e915-0941-168f-7a13e02d7db1.png)\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\uff1aGdxAppForAndroidOnly\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\uff1aGdxAppForAndroidOnly\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\uff1acom.dokokano.gdxappforandroidonly\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 17.11.54.png](https://qiita-image-store.s3.amazonaws.com/0/42140/02570e11-6ea5-da4e-d8be-d751a7bf503e.png)\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 17.11.58.png](https://qiita-image-store.s3.amazonaws.com/0/42140/f8b57e79-8e66-f802-9b37-7be1bf52edb0.png)\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 17.23.59.png](https://qiita-image-store.s3.amazonaws.com/0/42140/4c942474-8ee6-82ea-d955-0437ddcb90a7.png)\n\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306e\u4f5c\u6210\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3044\u308c\u308b\n\u300cBlank Activity\u300d\u3092\u9078\u629e\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 17.24.07.png](https://qiita-image-store.s3.amazonaws.com/0/42140/78f6192a-1cbc-9ec3-7c30-d513018150a2.png)\n\u3053\u308c\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 18.36.45.png](https://qiita-image-store.s3.amazonaws.com/0/42140/4d58577d-827c-411d-0232-b48cedcec7b9.png)\n\n\n##\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8ffd\u52a0\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305flibGDX\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a2\u30fc\u30ab\u30a4\u30d6\u304b\u3089\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\nlibgdx-nightly-latest.zip\u3092\u5c55\u958b\u3057\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306elibs\u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203b \u30d5\u30a1\u30a4\u30eb\u3092Eclipse\u306e\u30c4\u30ea\u30fc\u306b\u76f4\u63a5\u30c9\u30ed\u30c3\u30d7\u3057\u3066OK\u3067\u3059\u3002\n\n* gdx.jar\n* gdx-backend-android.jar\n* armeabi (\u30d5\u30a9\u30eb\u30c0)\n* armeabi-v7a (\u30d5\u30a9\u30eb\u30c0)\n* x86 (\u30d5\u30a9\u30eb\u30c0)\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 18.43.06trim.png](https://qiita-image-store.s3.amazonaws.com/0/42140/cded10e3-d647-62a7-fc66-39176bda3a58.png)\n\n\u3000\u4e0a\u8a18\u306e\u3088\u3046\u306b\u306a\u308c\u3070OK\u3067\u3059\u3002\n\u3000\u30a4\u30f3\u30dd\u30fc\u30c8\u306f\u30b3\u30d4\u30fc\u3067\u884c\u3044\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 18.42.44.png](https://qiita-image-store.s3.amazonaws.com/0/42140/0dc0e953-82e4-1423-1072-5310316037b3.png)\n\n\n\n##Java\u306e\u30d3\u30eb\u30c9\u30d1\u30b9\u306b\u8ffd\u52a0\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u958b\u304d\u3001\u300cJava\u306e\u30d3\u30eb\u30c9\u30d1\u30b9\u3092\u9078\u629e\u300d\u2192\u300c\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u30bf\u30d6\u300d\u2192\u300cJar\u8ffd\u52a0...\u300d\u30dc\u30bf\u30f3\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 18.45.11.png](https://qiita-image-store.s3.amazonaws.com/0/42140/1dc3c90b-3ae5-8458-e7a0-d158e467fb33.png)\n\n\u4ee5\u4e0b\u306eJar\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n* gdx.jar\n* gdx-backend-android.jar\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-05-02 18.46.28.png](https://qiita-image-store.s3.amazonaws.com/0/42140/98c1e852-ef2e-f2b2-6bd1-affac2473dfa.png)\n\n\n# \u30b3\u30fc\u30c9\u306e\u66f4\u65b0\n\n## MainActivity.java\u3092\u66f8\u304d\u63db\u3048\n\n\u3000\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f `MainActivity.java` \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\uff08\u307b\u3068\u3093\u3069\u5165\u308c\u66ff\u3048\u3067\u3059\uff09\n\n```java:MainActivity.java\npackage com.dokokano.gdxappforandroidonly;\n\nimport android.os.Bundle;\n\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.android.AndroidApplication;\nimport com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;\nimport com.badlogic.gdx.graphics.GL20;\n\npublic class MainActivity extends AndroidApplication {\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        AndroidApplicationConfiguration cfg = new AndroidApplicationConfiguration();\n\n        initialize(new MyGdxApp(), cfg);\n    }\n\n    class MyGdxApp implements ApplicationListener  {\n\t\t@Override\n\t\tpublic void create() {\n\t\t}\n\n\t\t@Override\n\t\tpublic void dispose() {\n\t\t}\n\n\t\t@Override\n\t\tpublic void pause() {\n\t\t}\n\n\t\t@Override\n\t\tpublic void render() {\n\t\t\t// \u8d64\u3067\u5857\u308a\u3064\u3076\u3059\n\t\t\tGdx.gl.glClearColor(1, 0, 0, 1);\n\t\t\tGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\t\t}\n\n\t\t@Override\n\t\tpublic void resize(int width, int height) {\n\t\t}\n\n\t\t@Override\n\t\tpublic void resume() {\n\t\t}\n    }\n}\n```\n\n\n## \u5b9f\u884c\nAndroid\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u8d64\u3044\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\u3053\u306e\u753b\u9762\u81ea\u4f53\u3001libGDX\u306b\u3088\u3063\u3066\u63cf\u753b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n![Screenshot_2014-05-02-18-51-52.png](https://qiita-image-store.s3.amazonaws.com/0/42140/37d61431-7e7c-758a-abcf-6dc0718cd87a.png)\n\n\n# \u30b3\u30fc\u30c9\u306e\u66f4\u65b0\uff12\uff1a\u6a5f\u80fd\u3092\u5f37\u5316\n\n\u3000\u8d64\u3044\u753b\u9762\u3067\u306f\u30d4\u30f3\u3068\u6765\u306a\u3044\u306e\u3067\u753b\u50cf\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n##\u753b\u50cf\u3092\u8ffd\u52a0\n\u3000\u753b\u50cf\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nhttp://libgdx.badlogicgames.com/nightlies/config/libgdx-logo.png\n\u4e0a\u8a18URL\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u300clibgdx-logo.png\u300d\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306easset\u306b\u8ffd\u52a0\uff08\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\uff09\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n![libgdx-logo.png](https://qiita-image-store.s3.amazonaws.com/0/42140/606e0def-f482-ee63-b96a-69970da84cc3.png)\n\u203b \u753b\u50cf\u306e\u30b5\u30a4\u30ba\u306f200x250\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002\n\n\n\n## MainActivity.java\u3092\u66f8\u304d\u63db\u3048\n\n```java:MainActivity.java\npackage com.dokokano.gdxappforandroidonly;\n\nimport android.os.Bundle;\n\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.android.AndroidApplication;\nimport com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.Texture.TextureFilter;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\nimport com.badlogic.gdx.math.Vector2;\nimport com.badlogic.gdx.math.Vector3;\n\npublic class MainActivity extends AndroidApplication {\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        AndroidApplicationConfiguration cfg = new AndroidApplicationConfiguration();\n\n        initialize(new MyGdxApp(), cfg);\n    }\n\n    class MyGdxApp implements ApplicationListener  {\n    \t// \u753b\u9762\u306e\u8ad6\u7406\u5ea7\u6a19\n    \tstatic private final float WIDTH  =320;\n    \tstatic private final float HEIGHT  =640;\n\n    \t// \u30ab\u30a6\u30f3\u30bf\u30fc(render\u304c\u547c\u3070\u308c\u308b\u305f\u3073\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\uff09\n    \tint count;\n\n    \t// Gdx\u7528\u5909\u6570\n    \tOrthographicCamera camera;\n    \tSpriteBatch batch;\n    \tTexture texture;\n    \tSprite sprite;\n    \tBitmapFont font;\n\n\n\t\t@Override\n\t\tpublic void create() {\n\t\t\t// \u753b\u9762\u306e\u5b9f\u969b\u306e\u30b5\u30a4\u30ba(pixel)\n\t\t\tfloat w = Gdx.graphics.getWidth();\n\t\t\tfloat h = Gdx.graphics.getHeight();\n\n\t\t\t// \u30ab\u30e1\u30e9\u8a2d\u5b9a\u3000\u203b\u753b\u9762\u306e\u30b5\u30a4\u30ba\u306b\u3042\u308f\u305b\u7e26\u6a2a\u6bd4\u304c\u6b63\u3057\u3044\u72b6\u614b\u3067\u6700\u5927\u9650\u306e\u30b5\u30a4\u30ba\u3067\u8a2d\u5b9a\n\t\t\tfloat scrRatio =  w/h;\t\t\t\t// \u5b9f\u969b\u306e\u753b\u9762\u306e\u7e26\u6a2a\u6bd4\n\t\t\tfloat logicalRatio =  WIDTH /HEIGHT;\t// \u8ad6\u7406\u5ea7\u6a19\u306e\u7e26\u6a2a\u6bd4\n\t\t\tcamera = new OrthographicCamera();\n\t\t\tif ( scrRatio>logicalRatio) {\n\t\t\t\t// \u5b9f\u969b\u306e\u753b\u9762\u306e\u307b\u3046\u304c\u8ad6\u7406\u5ea7\u6a19\u3088\u308a\u6a2a\u9577\n\t\t\t\tcamera.setToOrtho(false, WIDTH/logicalRatio*scrRatio, HEIGHT);\n\t\t\t\tcamera.translate(new Vector2( - (WIDTH/logicalRatio*scrRatio - WIDTH)/2,0));\n\t\t\t\tcamera.update();\n\t\t\t}else{\n\t\t\t\t// \u5b9f\u969b\u306e\u753b\u9762\u306e\u307b\u3046\u304c\u8ad6\u7406\u5ea7\u6a19\u3088\u308a\u7e26\u9577\n\t\t\t\tcamera.setToOrtho(false, WIDTH, HEIGHT*logicalRatio/scrRatio  );\n\t\t\t\tcamera.translate(new Vector2(0,  -(HEIGHT*logicalRatio/scrRatio - HEIGHT)/2));\n\t\t\t\tcamera.update();\n\t\t\t}\n\n\t\t\t// \u30b9\u30d7\u30e9\u30a4\u30c8\u30d0\u30c3\u30c1\u521d\u671f\u5316\n\t\t\tbatch = new SpriteBatch();\n\n\t\t\t// \u30d5\u30a9\u30f3\u30c8\u521d\u671f\u5316\n\t\t\tfont = new BitmapFont();\n\n\t\t\t// \u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u3092\u30ed\u30fc\u30c9\u3057\u30b9\u30d7\u30e9\u30a4\u30c8\u306b\u30bb\u30c3\u30c8\u3059\u308b\n\t\t\ttexture = new Texture(Gdx.files.internal(\"libgdx-logo.png\"));\t// 200x250pixel\n\t       \ttexture.setFilter(TextureFilter.Linear, TextureFilter.Linear);\n\t\t\tTextureRegion region = new TextureRegion(texture, 0, 0, 200, 250);\n\n\t\t\tsprite = new Sprite(region);\n\t\t\tsprite.setOrigin(sprite.getWidth()/2, sprite.getHeight()/2);\t\t\t\t// \u30b9\u30d7\u30e9\u30a4\u30c8\u306e\u4e2d\u5fc3\u3092\u539f\u70b9\u306b\n\t\t\tsprite.setPosition(WIDTH/2-sprite.getWidth()/2, HEIGHT/2-sprite.getHeight()/2);\t// \u753b\u9762\u4e2d\u592e\u306b\u914d\u7f6e\n\t\t}\n\n\t\t@Override\n\t\tpublic void dispose() {\n\t\t\ttexture.dispose();\n\t\t\tfont.dispose();\n\t\t}\n\n\t\t@Override\n\t\tpublic void pause() {\n\t\t}\n\n\t\t@Override\n\t\tpublic void render() {\n\t\t\tcount++;\n\t\t\t// \u8d64\u3067\u5857\u308a\u3064\u3076\u3059\n\t\t\tGdx.gl.glClearColor(1, 0, 0, 1);\n\t\t\tGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n\t\t\t// \u63cf\u753b\n\t\t\tbatch.setProjectionMatrix(camera.combined);\n\t\t\tbatch.begin();\n\n\t\t\tsprite.setRotation(count);\n\t\t\tsprite.draw(batch);\n\t\t\tfont.setColor(Color.WHITE);\n\t\t\tfont.draw(batch, \"for Android only!\", 0, HEIGHT);\n\n\t\t\tbatch.end();\n\t\t}\n\n\t\t@Override\n\t\tpublic void resize(int width, int height) {\n\t\t}\n\n\t\t@Override\n\t\tpublic void resume() {\n\t\t}\n    }\n}\n```\n\n## \u5b9f\u884c\n![Screenshot_2014-05-02-19-46-02.png](https://qiita-image-store.s3.amazonaws.com/0/42140/c6f1e4df-f225-397f-3ab1-cbe74a44a1d8.png)\n\u753b\u9762\u4e2d\u592e\u3067\u30a4\u30e1\u30fc\u30b8\u304c\u56de\u8ee2\u3059\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\n\n\n# \u30b3\u30fc\u30c9\u306e\u66f4\u65b0\uff13\uff1aAndroid \u306e\u6a5f\u80fd\u3092\u547c\u3073\u51fa\u3059\n\n## MainActivity.java\u306b\u8ffd\u52a0\n\n\u30e1\u30f3\u30d0\u30fc\u5909\u6570\u8ffd\u52a0\n\n```java\n\tHandler handler_ = new Handler();\n```\n\nrender()\u30e1\u30bd\u30c3\u30c9\u5185\u306b\u8ffd\u52a0\n\n```java\n\t// \u30bf\u30c3\u30d7\u3055\u308c\u305f\u5834\u5408 Toast\u3092\u8868\u793a\n\tif ( Gdx.input.justTouched()) {\n\t\t// Toast\u8868\u793a\u203bAndroid\u5074\u306e\u6a5f\u80fd\u3092\u5229\u7528\n\t\thandler_.post(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tToast.makeText(getApplicationContext(), \"Touched! (\" + count + \")\", Toast.LENGTH_SHORT).show();\n\t\t\t}\n\t\t});\n\t}\n```\n\n##\u5b9f\u884c\n![Screenshot_2014-05-02-19-51-45.png](https://qiita-image-store.s3.amazonaws.com/0/42140/b66c0f8f-7472-cac8-6e8f-693813e33155.png)\n\n\u3000\u753b\u9762\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3068Toast\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u3000\u3053\u306e\u3088\u3046\u306b\u76f4\u63a5Android\u306e\u6a5f\u80fd\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3000\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u304c\u4e0d\u8981\u306a\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u5f62\u3067\u7d44\u307f\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u304c\u52b9\u7387\u7684\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n# \u30bd\u30fc\u30b9\u5168\u4f53\n\n```java:MainActivity.java\npackage com.dokokano.gdxappforandroidonly;\n\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.widget.Toast;\n\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.android.AndroidApplication;\nimport com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.Texture.TextureFilter;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\nimport com.badlogic.gdx.graphics.glutils.ShapeRenderer;\nimport com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;\nimport com.badlogic.gdx.math.Vector2;\n\npublic class MainActivity extends AndroidApplication {\n\tHandler handler_ = new Handler();\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        AndroidApplicationConfiguration cfg = new AndroidApplicationConfiguration();\n        initialize(new MyGdxApp(), cfg);\n    }\n\n    class MyGdxApp implements ApplicationListener  {\n    \t// \u753b\u9762\u306e\u8ad6\u7406\u5ea7\u6a19\n    \tstatic private final float WIDTH  =320;\n    \tstatic private final float HEIGHT  =640;\n\n    \t// \u30ab\u30a6\u30f3\u30bf\u30fc(render\u304c\u547c\u3070\u308c\u308b\u305f\u3073\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\uff09\n    \tint count;\n\n    \t// Gdx\u7528\u5909\u6570\n    \tOrthographicCamera camera;\n    \tSpriteBatch batch;\n    \tShapeRenderer renderer;\n    \tTexture texture;\n    \tSprite sprite;\n    \tBitmapFont font;\n\n\n\t\t@Override\n\t\tpublic void create() {\n\t\t\t// \u753b\u9762\u306e\u5b9f\u969b\u306e\u30b5\u30a4\u30ba(pixel)\n\t\t\tfloat w = Gdx.graphics.getWidth();\n\t\t\tfloat h = Gdx.graphics.getHeight();\n\n\t\t\tGdx.app.log(\"\", \"size w:\" + w + \" h:\" + h);\n\n\t\t\t// \u30ab\u30e1\u30e9\u8a2d\u5b9a\u3000\n\t\t\t// \u203b\u753b\u9762\u306e\u30b5\u30a4\u30ba\u306b\u3042\u308f\u305b\u7e26\u6a2a\u6bd4\u304c\u6b63\u3057\u3044\u72b6\u614b\u3067\u6700\u5927\u9650\u306e\u30b5\u30a4\u30ba\u3067\u8a2d\u5b9a\n\t\t\tfloat scrRatio =  w/h;\t\t\t\t// \u5b9f\u969b\u306e\u753b\u9762\u306e\u7e26\u6a2a\u6bd4\n\t\t\tfloat logicalRatio =  WIDTH /HEIGHT;\t// \u8ad6\u7406\u5ea7\u6a19\u306e\u7e26\u6a2a\u6bd4\n\t\t\tcamera = new OrthographicCamera();\n\t\t\tif ( scrRatio>logicalRatio) {\n\t\t\t\t// \u5b9f\u969b\u306e\u753b\u9762\u306e\u307b\u3046\u304c\u8ad6\u7406\u5ea7\u6a19\u3088\u308a\u6a2a\u9577\n\t\t\t\tcamera.setToOrtho(false, WIDTH/logicalRatio*scrRatio, HEIGHT);\n\t\t\t\tcamera.translate(new Vector2( - (WIDTH/logicalRatio*scrRatio - WIDTH)/2,0));\n\t\t\t\tcamera.update();\n\t\t\t}else{\n\t\t\t\t// \u5b9f\u969b\u306e\u753b\u9762\u306e\u307b\u3046\u304c\u8ad6\u7406\u5ea7\u6a19\u3088\u308a\u7e26\u9577\n\t\t\t\tcamera.setToOrtho(false, WIDTH, HEIGHT*logicalRatio/scrRatio  );\n\t\t\t\tcamera.translate(new Vector2(0,  -(HEIGHT*logicalRatio/scrRatio - HEIGHT)/2));\n\t\t\t\tcamera.update();\n\t\t\t}\n\n\t\t\t// \u30b9\u30d7\u30e9\u30a4\u30c8\u30d0\u30c3\u30c1\u521d\u671f\u5316\n\t\t\tbatch = new SpriteBatch();\n\t\t\t// \u30ec\u30f3\u30c0\u30e9\u30fc\u521d\u671f\u5316\n\t\t\trenderer = new ShapeRenderer();\n\n\t\t\t// \u30d5\u30a9\u30f3\u30c8\u521d\u671f\u5316\n\t\t\tfont = new BitmapFont();\n\n\t\t\t// \u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u3092\u30ed\u30fc\u30c9\u3057\u30b9\u30d7\u30e9\u30a4\u30c8\u306b\u30bb\u30c3\u30c8\u3059\u308b\n\t\t\ttexture = new Texture(Gdx.files.internal(\"libgdx-logo.png\"));\t// 200x250pixel\n\t       \ttexture.setFilter(TextureFilter.Linear, TextureFilter.Linear);\n\t\t\tTextureRegion region = new TextureRegion(texture, 0, 0, 200, 250);\n\n\t\t\tsprite = new Sprite(region);\n\t\t\tsprite.setOrigin(sprite.getWidth()/2, sprite.getHeight()/2);\t\t\t\t// \u30b9\u30d7\u30e9\u30a4\u30c8\u306e\u4e2d\u5fc3\u3092\u539f\u70b9\u306b\n\t\t\tsprite.setPosition(WIDTH/2-sprite.getWidth()/2, HEIGHT/2-sprite.getHeight()/2);\t// \u753b\u9762\u4e2d\u592e\u306b\u914d\u7f6e\n\t\t}\n\n\t\t@Override\n\t\tpublic void dispose() {\n\t\t\ttexture.dispose();\n\t\t\tfont.dispose();\n\t\t}\n\n\t\t@Override\n\t\tpublic void pause() {\n\t\t}\n\n\t\t@Override\n\t\tpublic void render() {\n\t\t\tcount++;\n\t\t\t// \u8d64\u3067\u5857\u308a\u3064\u3076\u3059\n\t\t\tGdx.gl.glClearColor(1, 0, 0, 1);\n\t\t\tGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n\t\t\t// \u63cf\u753b\n\t\t\tbatch.setProjectionMatrix(camera.combined);\n\t\t\tbatch.begin();\n\t\t\tsprite.setRotation(count);\n\t\t\tsprite.draw(batch);\n\t\t\tfont.setColor(Color.WHITE);\n\t\t\tfont.draw(batch, \"for Android only!\", 0, HEIGHT);\n\t\t\tbatch.end();\n\n\t\t\t// \u753b\u9762\u306e\u67a0\u3092\u63cf\u753b\uff08\u8ad6\u7406\u5ea7\u6a19 WIDTH,HEIGHT\u306e\u7bc4\u56f2\uff09\n\t\t\trenderer.setProjectionMatrix(camera.combined);\n\t        renderer.begin(ShapeType.Line);\n\t        renderer.setColor(1,1,1f,1);\n\t        renderer.rect(0, 0,WIDTH,HEIGHT);\n\t        renderer.end();\n\n\t\t\t// \u30bf\u30c3\u30d7\u3055\u308c\u305f\u5834\u5408 Toast\u3092\u8868\u793a\n\t\t\tif ( Gdx.input.justTouched()) {\n\t\t\t\t// Toast\u8868\u793a\u203bAndroid\u5074\u306e\u6a5f\u80fd\u3092\u5229\u7528\n\t\t\t\thandler_.post(new Runnable() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\tToast.makeText(getApplicationContext(), \"Touched! (\" + count + \")\", Toast.LENGTH_SHORT).show();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic void resize(int width, int height) {\n\t\t}\n\n\t\t@Override\n\t\tpublic void resume() {\n\t\t}\n    }\n}\n```\n", "tags": ["libGDX", "Android"]}