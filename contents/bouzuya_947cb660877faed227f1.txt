{"tags": ["RxJS", "Rx", "ReactiveExtensions"], "context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 21 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 21 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u3044\u307e\u3055\u3089\u306a\u304c\u3089 Event \u3092 Observable \u3067\u64cd\u4f5c\u3057\u307e\u3059\u3002Observable.fromEvent \u3068\u305d\u306e\u7c21\u5358\u306a\u4f8b\u3092\u66f8\u304d\u307e\u3059\u3002\n\u901a\u5e38\u306a\u3089 DOM \u306e Event \u3067\u4f7f\u3046\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u3053\u3053\u307e\u3067 Node.js \u3067\u8a66\u3057\u3066\u304d\u305f\u306e\u3067 EventEmitter \u3092\u4f7f\u3044\u307e\u3059\u3002\u3069\u3061\u3089\u3082 Observable.fromEvent \u3067\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\nObservable.fromEvent\n\n\nEventEmitter \u306e\u4f8b\n\u307e\u305a Observable \u3092\u4f7f\u308f\u306a\u3044 EventEmitter \u306e\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\nimport { EventEmitter } from 'events';\n\nconst emitter = new EventEmitter();\n\nemitter.on('data', value => console.log(value));\n\nemitter.emit('data', 'Hello, Event!');\n// Hello, Event!\n\nEventEmitter.prototype.on \u3067 event listener \u3092\u767b\u9332\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u6d41\u308c\u3066\u304f\u308b\u3000'data' event \u306e\u5024\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002EventEmitter.prototype.emit \u3067 'data' event \u3068\u3057\u3066 'Hello, Event!' \u3092\u6d41\u3057\u3066\u3044\u307e\u3059\u3002\n\nObservable \u306e\u4f8b\n\u6b21\u306b Observable \u3092\u4f7f\u3063\u305f EventEmitter \u306e\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\nimport { EventEmitter } from 'events';\nimport { Observable } from 'rx';\n\nconst emitter = new EventEmitter();\n\nObservable\n  .fromEvent(emitter, 'data') // fromEvent(element, 'cilcked')\n  .subscribe(value => console.log(value));\n\nemitter.emit('data', 'Hello, Event!');\n// Hello, Event!\n\nObservable.fromEvent \u3067 emitter \u306e 'data' event \u304b\u3089 Observable instance \u3092\u3064\u304f\u3063\u3066\u3044\u307e\u3059\u3002Observable.prototype.subscribe \u306f\u8aac\u660e\u4e0d\u8981\u3067\u3057\u3087\u3046\u3002\n\u81ea\u7136\u306b\u8aad\u307f\u304b\u3048\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nObservable \u306e\u826f\u3044\u70b9\n\u524d\u8ff0\u306e Observable \u306e\u4f8b\u3067\u306f 1 \u884c\u5897\u3048\u305f\u3060\u3051\u3067\u826f\u3044\u70b9\u304c\u5206\u304b\u308a\u3065\u3089\u3044\u306e\u3067\u3001\u3082\u3046\u3059\u3053\u3057\u3044\u304f\u3064\u304b\u306e\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\n\u6d41\u308c\u3066\u304f\u308b\u6587\u5b57\u306e\u307b\u304b\u306b\u305d\u308c\u3092 mask ('*' \u3067\u3064\u3076\u3059) \u3057\u305f\u6587\u5b57\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u611a\u76f4\u306b\u66f8\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\nimport { EventEmitter } from 'events';\nimport { Observable } from 'rx';\n\nconst emitter = new EventEmitter();\n\nObservable\n  .fromEvent(emitter, 'data')\n  .subscribe(value => console.log(value));\n\nObservable\n  .fromEvent(emitter, 'data')\n  .map(s => s.split('').map(() => '*').join(''))\n  .subscribe(value => console.log(value));\n\nemitter.emit('data', 'H');\nemitter.emit('data', 'He');\nemitter.emit('data', 'Hell');\nemitter.emit('data', 'Hello, Event!');\n// H\n// *\n// He\n// **\n// Hell\n// ****\n// Hello, Event!\n// *************\n\n\u307e\u305a Observable \u306e Operator \u3092\u4f7f\u3048\u308b\u306e\u306f\u826f\u3044\u70b9\u3067\u3059\u3002map \u3084 filter \u3067 event \u3092\u5909\u63db\u3057\u305f\u308a\u4e0d\u8981\u306a\u3082\u306e\u3092\u53d6\u308a\u9664\u3044\u305f\u308a\u2026\u2026\u3053\u306e Advent Calendar \u3067 10 \u65e5\u4ee5\u4e0a\u3092\u304b\u3051\u3066\u3082\u7d39\u4ecb\u3057\u304d\u308c\u306a\u3044 Operator \u3092\u4f7f\u3048\u307e\u3059\u3002\n\u307e\u305f interface \u304c\u7d71\u4e00\u3055\u308c\u308b\u306e\u3082\u826f\u3044\u70b9\u3067\u3059\u3002\u4eca\u56de\u306f EventEmitter \u3067\u3059\u304c\u3001\u305d\u308c\u304c element \u306b\u306a\u3063\u3066\u3082\u3001\u540c\u69d8\u306b Observable \u3068\u3057\u3066\u6271\u3048\u308b\u306e\u306f\u826f\u3044\u70b9\u3067\u3057\u3087\u3046\u3002\n\u307b\u304b\u306e\u826f\u3044\u70b9\u3092\u793a\u3059\u305f\u3081\u306b\u3082\u3046\u4e00\u3064\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\nimport { EventEmitter } from 'events';\nimport { Observable } from 'rx';\n\nconst emitter = new EventEmitter();\n\nconst event$ = Observable.fromEvent(emitter, 'data');\nconst masked$ = event$.map((s) => s.split('').map(() => '*').join(''));\n\nObservable\n  .merge(event$, masked$)\n  .subscribe(value => console.log(value));\n\nemitter.emit('data', 'H');\nemitter.emit('data', 'He');\nemitter.emit('data', 'Hell');\nemitter.emit('data', 'Hello, Event!');\n// H\n// *\n// He\n// **\n// Hell\n// ****\n// Hello, Event!\n// *************\n\n\u5b9f\u884c\u7d50\u679c\u306f\u540c\u3058\u3067\u3059\u304c\u5148\u307b\u3069\u3088\u308a\u968f\u5206\u3068\u91cd\u8907\u30b3\u30fc\u30c9\u3092\u6e1b\u3089\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f mask \u3055\u308c\u305f\u5024\u3092\u6d41\u3059 Observable \u306b\u9069\u5207\u306a\u540d\u524d\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u67d4\u8edf\u306b\u5206\u5272\u3067\u304d\u308b\u3053\u3068\u3067\u500b\u5225\u306b Observable \u306e\u52d5\u304d\u3092 test \u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u304a\u308f\u308a\u306b\n\u5b9f\u306f\u307e\u3060\u5168\u4f53\u306e 2/5 \u304f\u3089\u3044\u3067\u3001\u7d9a\u304d\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u9577\u304f\u306a\u308b\u306e\u3067\u5206\u5272\u3057\u307e\u3059\u3002\u660e\u65e5\u306f Observable.fromEvent (Observable.fromEventPattern) \u306e\u5b9f\u88c5\u3092\u8aad\u3093\u3067\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 21 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 21 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u3044\u307e\u3055\u3089\u306a\u304c\u3089 Event \u3092 Observable \u3067\u64cd\u4f5c\u3057\u307e\u3059\u3002`Observable.fromEvent` \u3068\u305d\u306e\u7c21\u5358\u306a\u4f8b\u3092\u66f8\u304d\u307e\u3059\u3002\n\n\u901a\u5e38\u306a\u3089 DOM \u306e Event \u3067\u4f7f\u3046\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u3053\u3053\u307e\u3067 Node.js \u3067\u8a66\u3057\u3066\u304d\u305f\u306e\u3067 `EventEmitter` \u3092\u4f7f\u3044\u307e\u3059\u3002\u3069\u3061\u3089\u3082 `Observable.fromEvent` \u3067\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n# `Observable.fromEvent`\n\n## EventEmitter \u306e\u4f8b\n\n\u307e\u305a `Observable` \u3092\u4f7f\u308f\u306a\u3044 `EventEmitter` \u306e\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\n\n```js\nimport { EventEmitter } from 'events';\n\nconst emitter = new EventEmitter();\n\nemitter.on('data', value => console.log(value));\n\nemitter.emit('data', 'Hello, Event!');\n// Hello, Event!\n```\n\n`EventEmitter.prototype.on` \u3067 event listener \u3092\u767b\u9332\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u6d41\u308c\u3066\u304f\u308b\u3000`'data'` event \u306e\u5024\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002`EventEmitter.prototype.emit` \u3067 `'data'` event \u3068\u3057\u3066 `'Hello, Event!'` \u3092\u6d41\u3057\u3066\u3044\u307e\u3059\u3002\n\n## Observable \u306e\u4f8b\n\n\u6b21\u306b `Observable` \u3092\u4f7f\u3063\u305f `EventEmitter` \u306e\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\n\n```js\nimport { EventEmitter } from 'events';\nimport { Observable } from 'rx';\n\nconst emitter = new EventEmitter();\n\nObservable\n  .fromEvent(emitter, 'data') // fromEvent(element, 'cilcked')\n  .subscribe(value => console.log(value));\n\nemitter.emit('data', 'Hello, Event!');\n// Hello, Event!\n```\n\n`Observable.fromEvent` \u3067 `emitter` \u306e `'data'` event \u304b\u3089 `Observable` instance \u3092\u3064\u304f\u3063\u3066\u3044\u307e\u3059\u3002`Observable.prototype.subscribe` \u306f\u8aac\u660e\u4e0d\u8981\u3067\u3057\u3087\u3046\u3002\n\n\u81ea\u7136\u306b\u8aad\u307f\u304b\u3048\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n### Observable \u306e\u826f\u3044\u70b9\n\n\u524d\u8ff0\u306e `Observable` \u306e\u4f8b\u3067\u306f 1 \u884c\u5897\u3048\u305f\u3060\u3051\u3067\u826f\u3044\u70b9\u304c\u5206\u304b\u308a\u3065\u3089\u3044\u306e\u3067\u3001\u3082\u3046\u3059\u3053\u3057\u3044\u304f\u3064\u304b\u306e\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\n\n\u6d41\u308c\u3066\u304f\u308b\u6587\u5b57\u306e\u307b\u304b\u306b\u305d\u308c\u3092 mask (`'*'` \u3067\u3064\u3076\u3059) \u3057\u305f\u6587\u5b57\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u611a\u76f4\u306b\u66f8\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n```js\nimport { EventEmitter } from 'events';\nimport { Observable } from 'rx';\n\nconst emitter = new EventEmitter();\n\nObservable\n  .fromEvent(emitter, 'data')\n  .subscribe(value => console.log(value));\n\nObservable\n  .fromEvent(emitter, 'data')\n  .map(s => s.split('').map(() => '*').join(''))\n  .subscribe(value => console.log(value));\n\nemitter.emit('data', 'H');\nemitter.emit('data', 'He');\nemitter.emit('data', 'Hell');\nemitter.emit('data', 'Hello, Event!');\n// H\n// *\n// He\n// **\n// Hell\n// ****\n// Hello, Event!\n// *************\n```\n\n\u307e\u305a `Observable` \u306e Operator \u3092\u4f7f\u3048\u308b\u306e\u306f\u826f\u3044\u70b9\u3067\u3059\u3002`map` \u3084 `filter` \u3067 event \u3092\u5909\u63db\u3057\u305f\u308a\u4e0d\u8981\u306a\u3082\u306e\u3092\u53d6\u308a\u9664\u3044\u305f\u308a\u2026\u2026\u3053\u306e Advent Calendar \u3067 10 \u65e5\u4ee5\u4e0a\u3092\u304b\u3051\u3066\u3082\u7d39\u4ecb\u3057\u304d\u308c\u306a\u3044 Operator \u3092\u4f7f\u3048\u307e\u3059\u3002\n\n\u307e\u305f interface \u304c\u7d71\u4e00\u3055\u308c\u308b\u306e\u3082\u826f\u3044\u70b9\u3067\u3059\u3002\u4eca\u56de\u306f `EventEmitter` \u3067\u3059\u304c\u3001\u305d\u308c\u304c `element` \u306b\u306a\u3063\u3066\u3082\u3001\u540c\u69d8\u306b `Observable` \u3068\u3057\u3066\u6271\u3048\u308b\u306e\u306f\u826f\u3044\u70b9\u3067\u3057\u3087\u3046\u3002\n\n\u307b\u304b\u306e\u826f\u3044\u70b9\u3092\u793a\u3059\u305f\u3081\u306b\u3082\u3046\u4e00\u3064\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\n\n```js\nimport { EventEmitter } from 'events';\nimport { Observable } from 'rx';\n\nconst emitter = new EventEmitter();\n\nconst event$ = Observable.fromEvent(emitter, 'data');\nconst masked$ = event$.map((s) => s.split('').map(() => '*').join(''));\n\nObservable\n  .merge(event$, masked$)\n  .subscribe(value => console.log(value));\n\nemitter.emit('data', 'H');\nemitter.emit('data', 'He');\nemitter.emit('data', 'Hell');\nemitter.emit('data', 'Hello, Event!');\n// H\n// *\n// He\n// **\n// Hell\n// ****\n// Hello, Event!\n// *************\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u540c\u3058\u3067\u3059\u304c\u5148\u307b\u3069\u3088\u308a\u968f\u5206\u3068\u91cd\u8907\u30b3\u30fc\u30c9\u3092\u6e1b\u3089\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f mask \u3055\u308c\u305f\u5024\u3092\u6d41\u3059 `Observable` \u306b\u9069\u5207\u306a\u540d\u524d\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u67d4\u8edf\u306b\u5206\u5272\u3067\u304d\u308b\u3053\u3068\u3067\u500b\u5225\u306b `Observable` \u306e\u52d5\u304d\u3092 test \u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u5b9f\u306f\u307e\u3060\u5168\u4f53\u306e 2/5 \u304f\u3089\u3044\u3067\u3001\u7d9a\u304d\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u9577\u304f\u306a\u308b\u306e\u3067\u5206\u5272\u3057\u307e\u3059\u3002\u660e\u65e5\u306f `Observable.fromEvent` (`Observable.fromEventPattern`) \u306e\u5b9f\u88c5\u3092\u8aad\u3093\u3067\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n"}