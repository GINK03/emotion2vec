{"context": " More than 1 year has passed since last update.\u60c5\u5831\u306f\u3044\u308d\u3044\u308d\u3042\u308b\u3051\u3069\u3001\u306a\u304b\u306a\u304b\u3046\u307e\u304f\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n\u74b0\u5883\n\nJava8\njUnit4.12\nPowerMock1.6.4\nEasyMock3.4\n\nmaven\u306a\u3089\u4ee5\u4e0b\u3092\u5165\u308c\u308c\u3070OK\n\npowermock-module-junit4 1.6.4\npowermock-module-easymock 1.6.4\neasymock 3.4\n\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\n\nUtils.java\nimport java.text.SimpleDateFormat;\nimport java.util.Calender;\n\npublic class Utils {\n    public static String getStringDate() {\n        Calender cal = Calender.getInstance();\n        return new SimpleDateFormat(\"yyyyMMdd\").format(cal.getTime());\n    }\n}\n\n\n\u300cCalender.getInstance()\u300d\u3092\u3044\u3064\u5b9f\u884c\u3057\u3066\u3082\u540c\u3058\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\nUtilsTest.java\nimport static org.junit.Assert.assertThat;\nimport static org.hamcrest.core.Is.is;\n\nimport java.util.Calender;\n\nimport org.easymock.EasyMock;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.easymock.PowerMock;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(Utils.class) // *1\npublic class UtilTest {\n\n    @Test\n    public void test() {\n        Calender cal = Calender.getInstance();\n        cal.set(2015, 3, 1);\n\n        // *2\n        PowerMock.mockStaticPartial(Calender.class, \"getInstance\");\n        EasyMock.expect(Calender.getInstance()).andReturn(cal);\n        PowerMock.replay(Calender.class);\n\n        String actual = Utils.getStringDate();\n        assertThat(actual, is(\"20150401\")); \n    }\n}\n\n\n*1\u306e\u7b87\u6240\u3067\u306f\u30c6\u30b9\u30c8\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3002\n*2\u306e\u7b87\u6240\u3067\u306f\u30e2\u30c3\u30af\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u306e\u3042\u308b\u30af\u30e9\u30b9\u5468\u308a\u306e\u8a2d\u5b9a\u3002\nstatic\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3068\u3053\u308d\u3092\u52d8\u9055\u3044\u3057\u3066\u3044\u3066\u3001\u3064\u307e\u3065\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\u60c5\u5831\u306f\u3044\u308d\u3044\u308d\u3042\u308b\u3051\u3069\u3001\u306a\u304b\u306a\u304b\u3046\u307e\u304f\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n## \u74b0\u5883\n\n- Java8\n- jUnit4.12\n- PowerMock1.6.4\n- EasyMock3.4\n\nmaven\u306a\u3089\u4ee5\u4e0b\u3092\u5165\u308c\u308c\u3070OK\n\n- powermock-module-junit4 1.6.4\n- powermock-module-easymock 1.6.4\n- easymock 3.4\n\n## \u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\n\n```java:Utils.java\nimport java.text.SimpleDateFormat;\nimport java.util.Calender;\n\npublic class Utils {\n\tpublic static String getStringDate() {\n\t\tCalender cal = Calender.getInstance();\n\t\treturn new SimpleDateFormat(\"yyyyMMdd\").format(cal.getTime());\n\t}\n}\n```\n\n\u300cCalender.getInstance()\u300d\u3092\u3044\u3064\u5b9f\u884c\u3057\u3066\u3082\u540c\u3058\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u3002\n\n## \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n```java:UtilsTest.java\nimport static org.junit.Assert.assertThat;\nimport static org.hamcrest.core.Is.is;\n\nimport java.util.Calender;\n\nimport org.easymock.EasyMock;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.easymock.PowerMock;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(Utils.class) // *1\npublic class UtilTest {\n\n\t@Test\n\tpublic void test() {\n\t\tCalender cal = Calender.getInstance();\n\t\tcal.set(2015, 3, 1);\n\t\t\n\t\t// *2\n\t\tPowerMock.mockStaticPartial(Calender.class, \"getInstance\");\n\t\tEasyMock.expect(Calender.getInstance()).andReturn(cal);\n\t\tPowerMock.replay(Calender.class);\n\n\t\tString actual = Utils.getStringDate();\n\t\tassertThat(actual, is(\"20150401\"));\t\n\t}\n}\n```\n\n*1\u306e\u7b87\u6240\u3067\u306f\u30c6\u30b9\u30c8\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3002\n*2\u306e\u7b87\u6240\u3067\u306f\u30e2\u30c3\u30af\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u306e\u3042\u308b\u30af\u30e9\u30b9\u5468\u308a\u306e\u8a2d\u5b9a\u3002\n\nstatic\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3068\u3053\u308d\u3092\u52d8\u9055\u3044\u3057\u3066\u3044\u3066\u3001\u3064\u307e\u3065\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n", "tags": ["Java", "JUnit"]}