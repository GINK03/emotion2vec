{"context": " More than 1 year has passed since last update.\n\nscriptcs \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\n\n\nNetTopologySuite\n\nNetTopologySuite (+GeoAPI)\n\n$ scriptcs  -install  NetTopologySuite\nInstalling packages...\nInstalled: NetTopologySuite\nPackage installation succeeded.\nSaving packages in scriptcs_packages.config...\nCreating scriptcs_packages.config...\nAdded GeoAPI (v1.7.4, .NET 4.5) to scriptcs_packages.config\nAdded NetTopologySuite (v1.14, .NET 4.5) to scriptcs_packages.config\nSuccessfully updated scriptcs_packages.config.\n\n\nNetTopologySuite.IO.GeoJSON\n\n$ scriptcs  -install  NetTopologySuite.IO.GeoJSON\nInstalling packages...\nInstalled: NetTopologySuite.IO.GeoJSON\nPackage installation succeeded.\nSaving packages in scriptcs_packages.config...\nUpdating scriptcs_packages.config...\nSkipped GeoAPI because it already exists.\nSkipped NetTopologySuite because it already exists.\nAdded NetTopologySuite.IO.GeoJSON (v1.14, .NET 4.5) to scriptcs_packages.config\nAdded Newtonsoft.Json (v8.0.2, .NET 4.5) to scriptcs_packages.config\nSuccessfully updated scriptcs_packages.config.\n\n\nGeoJSON\n\ntest.cs (Point)\n\nusing System;\n\nusing NetTopologySuite.IO;\nusing NetTopologySuite.Geometries;\n\nvar reader = new GeoJsonReader ();\nvar json = @\"{\"\"type\"\": \"\"Point\"\", \"\"coordinates\"\": [-122.402, 37.7976983333333]}\";\nvar obj = reader.Read<Point> (json);\nConsole.WriteLine(obj.ToString());\n\n$ scriptcs test.cs\nPOINT (-122.402 37.7976983333333)\n\n\nPolygon\u306bPoint\u304c\u5165\u3063\u3066\u3044\u308b\u304b\u5224\u5b9a\n\nvar reader = new GeoJsonReader ();\n\nvar area = reader.Read<Polygon> (\n    File.ReadAllText(\"shibuya.json\"));\n\nvar locations = new Dictionary<string, string>{\n  {\"\u897f\u65e5\u66ae\u91cc\", @\"{\"\"type\"\": \"\"Point\"\", \"\"coordinates\"\": [139.7691960797771, 35.73323451860732]}\" },\n  {\"\u30cf\u30c1\u516c\u524d\", @\"{\"\"type\"\": \"\"Point\"\", \"\"coordinates\"\": [139.7003236463392, 35.65870361613276]}\" },\n};\n\nforeach(var location in locations){\n    Console.Write(location.Key + \":\");\n    Console.WriteLine(\n        area.Contains(reader.Read<Point> (location.Value)));\n}\n\n$ scriptcs test.cs \n\u897f\u65e5\u66ae\u91cc:False\n\u30cf\u30c1\u516c\u524d:True\n\n\nGeometryConverter: \u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\nusing NetTopologySuite.IO.Converters;\nusing NetTopologySuite.Geometries;\n\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Converters;\n\n\nnamespace WalkAround.Droid\n{   \n\n    public class BusStop\n    {\n        public int id {get;set; }\n        public string name {get;set;}\n\n        [JsonConverter(typeof(GeometryConverter))]\n        public Point location {get;set;}\n\n        [JsonConverter(typeof(GeometryConverter))]\n        public Polygon bus_area {get;set;}\n\n        public static BusStop Deserialize(string json)\n        {\n            return JsonConvert.DeserializeObject<BusStop> (json);\n        }\n    }\n}\n\n\niOS, scriptcs \u3067\u52d5\u304b\u306a\u3044\n\nAndroid\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u306f\u52d5\u3044\u3066\u3044\u308b\u304c\u3001scriptcs \u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\n\nERROR: Script execution failed. [JsonException] Error creating 'NetTopologySuite.IO.Converters.GeometryConverter'.\n\n=== INNER EXCEPTION ===\n[System.InvalidCastException] Specified cast is not valid.\n  at Newtonsoft.Json.Serialization.JsonTypeReflector+<>c__DisplayClass18_0.<GetJsonConverterCreator>b__0 (System.Object[] parameters) <0x40173d0 + 0x0025f> in <filename unknown>:0 \n\n\n\niOS\u3067\u3082\u4f8b\u5916\n\nSystem.TypeLoadException: \n  Could not load type NetTopologySuite.IO.Converters.GeometryConverter, \n    NetTopologySuite.IO.GeoJSON, Version=1.14.0.0, Culture=neutral, PublicKeyToken=null while decoding custom attribute\n\n\n\u3068\u308a\u3042\u3048\u305a\u52d5\u304b\u3059\n\n\n    public class Station\n    {\n        public int id {get;set; }\n        public string name {get;set;}\n        public JToken location {get;set; }\n        public JToken area {get;set; }\n\n        public static Station Deserialize(string json)\n        {\n            return JsonConvert.DeserializeObject<Station> (json);\n        }\n\n        [JsonIgnore]\n        public Point Location \n        {\n            get{\n                var reader = new GeoJsonReader ();\n                eturn reader.Read<Point> (location.ToString ());\n            }\n        }\n\n        [JsonIgnore]\n        public Polygon Area \n        {\n            get{\n                var reader = new GeoJsonReader ();\n                return reader.Read<Polygon> (area.ToString ());\n            }\n        }\n    }\n\n\n\n- [scriptcs](http://bitly.com/hdknr_scriptcs) \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\n\n## NetTopologySuite\n\n- NetTopologySuite (+GeoAPI)\n\n~~~bash\n$ scriptcs  -install  NetTopologySuite\nInstalling packages...\nInstalled: NetTopologySuite\nPackage installation succeeded.\nSaving packages in scriptcs_packages.config...\nCreating scriptcs_packages.config...\nAdded GeoAPI (v1.7.4, .NET 4.5) to scriptcs_packages.config\nAdded NetTopologySuite (v1.14, .NET 4.5) to scriptcs_packages.config\nSuccessfully updated scriptcs_packages.config.\n~~~\n\n- NetTopologySuite.IO.GeoJSON\n\n~~~bash\n$ scriptcs  -install  NetTopologySuite.IO.GeoJSON\nInstalling packages...\nInstalled: NetTopologySuite.IO.GeoJSON\nPackage installation succeeded.\nSaving packages in scriptcs_packages.config...\nUpdating scriptcs_packages.config...\nSkipped GeoAPI because it already exists.\nSkipped NetTopologySuite because it already exists.\nAdded NetTopologySuite.IO.GeoJSON (v1.14, .NET 4.5) to scriptcs_packages.config\nAdded Newtonsoft.Json (v8.0.2, .NET 4.5) to scriptcs_packages.config\nSuccessfully updated scriptcs_packages.config.\n~~~\n\n## GeoJSON\n\n- test.cs (Point)\n\n~~~csharp\nusing System;\n\nusing NetTopologySuite.IO;\nusing NetTopologySuite.Geometries;\n\nvar reader = new GeoJsonReader ();\nvar json = @\"{\"\"type\"\": \"\"Point\"\", \"\"coordinates\"\": [-122.402, 37.7976983333333]}\";\nvar obj = reader.Read<Point> (json);\nConsole.WriteLine(obj.ToString());\n~~~\n\n~~~bash\n$ scriptcs test.cs\nPOINT (-122.402 37.7976983333333)\n~~~\n\n- Polygon\u306bPoint\u304c\u5165\u3063\u3066\u3044\u308b\u304b\u5224\u5b9a\n\n~~~csharp\nvar reader = new GeoJsonReader ();\n\nvar area = reader.Read<Polygon> (\n    File.ReadAllText(\"shibuya.json\"));\n\nvar locations = new Dictionary<string, string>{\n  {\"\u897f\u65e5\u66ae\u91cc\", @\"{\"\"type\"\": \"\"Point\"\", \"\"coordinates\"\": [139.7691960797771, 35.73323451860732]}\" },\n  {\"\u30cf\u30c1\u516c\u524d\", @\"{\"\"type\"\": \"\"Point\"\", \"\"coordinates\"\": [139.7003236463392, 35.65870361613276]}\" },\n};\n\nforeach(var location in locations){\n    Console.Write(location.Key + \":\");\n    Console.WriteLine(\n        area.Contains(reader.Read<Point> (location.Value)));\n}\n~~~\n\n~~~bash\n$ scriptcs test.cs \n\u897f\u65e5\u66ae\u91cc:False\n\u30cf\u30c1\u516c\u524d:True\n~~~\n\n\n## GeometryConverter: \u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n\n\n~~~bash\nusing NetTopologySuite.IO.Converters;\nusing NetTopologySuite.Geometries;\n\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Converters;\n\n\nnamespace WalkAround.Droid\n{\t\n\t\n\tpublic class BusStop\n\t{\n\t\tpublic int id {get;set; }\n\t\tpublic string name {get;set;}\n\n\t\t[JsonConverter(typeof(GeometryConverter))]\n\t\tpublic Point location {get;set;}\n\n\t\t[JsonConverter(typeof(GeometryConverter))]\n\t\tpublic Polygon bus_area {get;set;}\n\n\t\tpublic static BusStop Deserialize(string json)\n\t\t{\n\t\t\treturn JsonConvert.DeserializeObject<BusStop> (json);\n\t\t}\n\t}\n}\n~~~\n\n### iOS, scriptcs \u3067\u52d5\u304b\u306a\u3044\n\n- Android\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u306f\u52d5\u3044\u3066\u3044\u308b\u304c\u3001scriptcs \u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\n\n~~~\nERROR: Script execution failed. [JsonException] Error creating 'NetTopologySuite.IO.Converters.GeometryConverter'.\n\n=== INNER EXCEPTION ===\n[System.InvalidCastException] Specified cast is not valid.\n  at Newtonsoft.Json.Serialization.JsonTypeReflector+<>c__DisplayClass18_0.<GetJsonConverterCreator>b__0 (System.Object[] parameters) <0x40173d0 + 0x0025f> in <filename unknown>:0 \n\n~~~\n\n- iOS\u3067\u3082\u4f8b\u5916\n\n~~~\nSystem.TypeLoadException: \n  Could not load type NetTopologySuite.IO.Converters.GeometryConverter, \n    NetTopologySuite.IO.GeoJSON, Version=1.14.0.0, Culture=neutral, PublicKeyToken=null while decoding custom attribute\n~~~\n\n- \u3068\u308a\u3042\u3048\u305a\u52d5\u304b\u3059\n\n~~~csharp\n\n\tpublic class Station\n\t{\n\t\tpublic int id {get;set; }\n\t\tpublic string name {get;set;}\n\t\tpublic JToken location {get;set; }\n\t\tpublic JToken area {get;set; }\n\n\t\tpublic static Station Deserialize(string json)\n\t\t{\n\t\t\treturn JsonConvert.DeserializeObject<Station> (json);\n\t\t}\n\t\t\t\n\t\t[JsonIgnore]\n\t\tpublic Point Location \n\t\t{\n\t\t\tget{\n\t\t\t\tvar reader = new GeoJsonReader ();\n\t\t\t\teturn reader.Read<Point> (location.ToString ());\n\t\t\t}\n\t\t}\n\n\t\t[JsonIgnore]\n\t\tpublic Polygon Area \n\t\t{\n\t\t\tget{\n\t\t\t\tvar reader = new GeoJsonReader ();\n\t\t\t\treturn reader.Read<Polygon> (area.ToString ());\n\t\t\t}\n\t\t}\n\t}\n~~~\n", "tags": ["geojson", "C#"]}