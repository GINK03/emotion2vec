{"context": " More than 1 year has passed since last update.\u6f22\u3060\u3063\u305f\u3089 AWS Lambda \u3067 Google Compute Engine \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u76e3\u8996\u3057\u305f\u3044\u3067\u3059\u3088\u306d!\n\u3084\u308a\u307e\u3057\u3087\u3046!\n\nnode.js \u30b3\u30fc\u30c9\n\u53c2\u8003\u4f8b\u3068\u3057\u3066 gcloud \u3068 async \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066, \u6307\u5b9a\u6642\u9593\u4ee5\u4e0a\u8d77\u52d5\u3057\u3066\u3044\u308b instance \u3092 delete \u3059\u308b\u30b3\u30fc\u30c9\u3092\u3067\u3063\u3061\u4e0a\u3052\u307e\u3059.\nAWS Lambda \u3067\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3080\u306a\u3069\u304c\u51fa\u6765\u306a\u3044(node_modules/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7f6e\u3051\u3070\u8aad\u3081\u308b?)\u306e\u3067, GCE \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e credentials \u60c5\u5831\u3092 JSON \u306b\u76f4\u63a5\u57cb\u3081\u8fbc\u307f\u307e\u3059.\n// gceterminator.js\nvar secs = 600; // delete instance running larthan this value.\nvar zones = ['us-east1-b', 'us-east1-c', 'us-east1-d', 'us-central1-a', 'us-central1-b', 'us-central1-c', 'us-central1-f', 'asia-east1-a', 'asia-east1-b', 'asia-east1-c']\n\nvar projectId = 'GCE_PROJECT_ID'\nvar gcloud = require('gcloud');\nvar async = require('async');\n\nexports.handler = function(event, context) {\n\n  var gce = gcloud.compute({\n    projectId: projectId,\n    //keyFilename: './keyfile.json'\n    credentials: {   \n      private_key: \"XXXX\",\n     client_email: \"XXXX\"\n   }\n  });\n\n  async.each(zones, function(z, callback) {\n\n    var zone = gce.zone(z);\n    console.log('zone = ' + z)\n\n    zone.getVMs(function(err, vms) {\n      if (err) {\n        console.log(\"err:\" + err);\n        callback('err' + err);\n      } else {\n        console.log('# of vms: ' + vms.length)\n        async.each(vms, function(vm, callback) {\n          console.log(vm.metadata.creationTimestamp);\n          var d = new Date(vm.metadata.creationTimestamp);\n          var elapsedMsec = (new Date()) - d;\n          var elapsedSec = (elapsedMsec / 1000.0) \n          console.log(elapsedSec);\n          if (elapsedSec > secs) {\n            console.log(\"delete \" + vm.name);\n            vm.delete(function(err, operation, apiResponse) {\n            // `operation` is an Operation object that can be used to check the status\n            //   // of the request.\n              if (err) {\n                console.log(\"vm delete err:\" + err);\n                callback('vm delete err' + err);\n              }\n              callback();\n            });\n          }\n          callback();\n        }, function(err) {\n          callback(err);\n        });\n      }\n    });\n\n  }, function(err) {\n    if (err) {\n      console.log(err);\n      if (context) context.done(err)\n    } else {\n      console.log(\"done\");\n      if (context) context.done(null, 'done')\n    }\n  });\n}\n\nnode_modules, gceterminator.js \u3092 zip \u5727\u7e2e\u3057\u3066 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059.\n(\u5fae\u5999\u306b Lambda \u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u4e0a\u9650\u3067\u3042\u308b 10MB \u3092\u8d85\u3048\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067)\n\nLambda \u306e\u8a2d\u5b9a\n\u30cf\u30f3\u30c9\u30e9\u3092 gceterminator.handler \u306b\u3057, zip \u30d5\u30a1\u30a4\u30eb\u3092 S3 \u304b\u3089\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066 Lambda function \u3092\u5b9a\u7fa9\u3057\u307e\u3059.\n\nLambda \u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\nSTART RequestId:  Version: $LATEST\n2015-10-12T16:22:06.088Z        zone = us-east1-b\n2015-10-12T16:22:06.111Z        zone = us-east1-c\n2015-10-12T16:22:06.112Z        zone = us-east1-d\n2015-10-12T16:22:06.113Z        zone = us-central1-a\n2015-10-12T16:22:06.169Z        zone = us-central1-b\n2015-10-12T16:22:06.170Z        zone = us-central1-c\n2015-10-12T16:22:06.170Z        zone = us-central1-f\n2015-10-12T16:22:06.170Z        zone = asia-east1-a\n2015-10-12T16:22:06.171Z        zone = asia-east1-b\n2015-10-12T16:22:06.171Z        zone = asia-east1-c\n2015-10-12T16:22:08.712Z        # of vms: 0\n2015-10-12T16:22:08.931Z        # of vms: 0\n2015-10-12T16:22:09.145Z        # of vms: 0\n2015-10-12T16:22:09.191Z        # of vms: 0\n2015-10-12T16:22:09.266Z        # of vms: 0\n2015-10-12T16:22:09.352Z        # of vms: 0\n2015-10-12T16:22:09.416Z        # of vms: 1\n2015-10-12T16:22:09.416Z        2015-10-12T09:14:51.579-07:00\n2015-10-12T16:22:09.417Z        437.838\n2015-10-12T16:22:09.493Z        # of vms: 0\n2015-10-12T16:22:09.723Z        # of vms: 0\n2015-10-12T16:22:09.754Z        # of vms: 0\n2015-10-12T16:22:09.754Z        done\nEND RequestId: \nREPORT RequestId:   Duration: 3669.54 ms    Billed Duration: 3700 ms    Memory Size: 128 MB Max Memory Used: 57 MB  \n\nVoala! \u5b9f\u884c\u3067\u304d\u307e\u3057\u305f.\n\u3042\u3068\u306f\u3053\u308c\u3092 Scheduled event \u3067\u5b9a\u671f\u7684\u306b\u5b9f\u884c\u3059\u308c\u3070 GCE instances \u3092\u76e3\u8996\u3067\u304d\u307e\u3059\u306d! AWS Lambda \u4fbf\u5229\u3067\u3059\u306d, \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059.\n\nTODO\n\nCredentials \u3092 lambda code \u306b\u76f4\u63a5\u66f8\u3044\u3066\u3044\u3044\u3082\u306e\u306a\u306e\u304b? Credentials \u60c5\u5831\u306e\u7ba1\u7406\u306f\u3069\u3046\u308b\u3059\u308b\u306e\u304c\u3088\u3044\u304b?\n\n\u6f22\u3060\u3063\u305f\u3089 AWS Lambda \u3067 Google Compute Engine \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u76e3\u8996\u3057\u305f\u3044\u3067\u3059\u3088\u306d!\n\n\u3084\u308a\u307e\u3057\u3087\u3046!\n\n## node.js \u30b3\u30fc\u30c9\n\n\u53c2\u8003\u4f8b\u3068\u3057\u3066 gcloud \u3068 async \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066, \u6307\u5b9a\u6642\u9593\u4ee5\u4e0a\u8d77\u52d5\u3057\u3066\u3044\u308b instance \u3092 delete \u3059\u308b\u30b3\u30fc\u30c9\u3092\u3067\u3063\u3061\u4e0a\u3052\u307e\u3059.\n\nAWS Lambda \u3067\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3080\u306a\u3069\u304c\u51fa\u6765\u306a\u3044(`node_modules/` \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7f6e\u3051\u3070\u8aad\u3081\u308b?)\u306e\u3067, GCE \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e credentials \u60c5\u5831\u3092 JSON \u306b\u76f4\u63a5\u57cb\u3081\u8fbc\u307f\u307e\u3059.\n\n```\n// gceterminator.js\nvar secs = 600; // delete instance running larthan this value.\nvar zones = ['us-east1-b', 'us-east1-c', 'us-east1-d', 'us-central1-a', 'us-central1-b', 'us-central1-c', 'us-central1-f', 'asia-east1-a', 'asia-east1-b', 'asia-east1-c']\n\nvar projectId = 'GCE_PROJECT_ID'\nvar gcloud = require('gcloud');\nvar async = require('async');\n\nexports.handler = function(event, context) {\n\n  var gce = gcloud.compute({\n    projectId: projectId,\n    //keyFilename: './keyfile.json'\n    credentials: {   \n      private_key: \"XXXX\",\n     client_email: \"XXXX\"\n   }\n  });\n\n  async.each(zones, function(z, callback) {\n\n    var zone = gce.zone(z);\n    console.log('zone = ' + z)\n\n    zone.getVMs(function(err, vms) {\n      if (err) {\n        console.log(\"err:\" + err);\n        callback('err' + err);\n      } else {\n        console.log('# of vms: ' + vms.length)\n        async.each(vms, function(vm, callback) {\n          console.log(vm.metadata.creationTimestamp);\n          var d = new Date(vm.metadata.creationTimestamp);\n          var elapsedMsec = (new Date()) - d;\n          var elapsedSec = (elapsedMsec / 1000.0) \n          console.log(elapsedSec);\n          if (elapsedSec > secs) {\n            console.log(\"delete \" + vm.name);\n            vm.delete(function(err, operation, apiResponse) {\n            // `operation` is an Operation object that can be used to check the status\n            //   // of the request.\n              if (err) {\n                console.log(\"vm delete err:\" + err);\n                callback('vm delete err' + err);\n              }\n              callback();\n            });\n          }\n          callback();\n        }, function(err) {\n          callback(err);\n        });\n      }\n    });\n\n  }, function(err) {\n    if (err) {\n      console.log(err);\n      if (context) context.done(err)\n    } else {\n      console.log(\"done\");\n      if (context) context.done(null, 'done')\n    }\n  });\n}\n```\n\n`node_modules`, `gceterminator.js` \u3092 zip \u5727\u7e2e\u3057\u3066 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059.\n(\u5fae\u5999\u306b Lambda \u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u4e0a\u9650\u3067\u3042\u308b 10MB \u3092\u8d85\u3048\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067)\n\n## Lambda \u306e\u8a2d\u5b9a\n\n\u30cf\u30f3\u30c9\u30e9\u3092 `gceterminator.handler` \u306b\u3057, zip \u30d5\u30a1\u30a4\u30eb\u3092 S3 \u304b\u3089\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066 Lambda function \u3092\u5b9a\u7fa9\u3057\u307e\u3059.\n\n## Lambda \u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\n\n```\nSTART RequestId:  Version: $LATEST\n2015-10-12T16:22:06.088Z\t\tzone = us-east1-b\n2015-10-12T16:22:06.111Z\t\tzone = us-east1-c\n2015-10-12T16:22:06.112Z\t\tzone = us-east1-d\n2015-10-12T16:22:06.113Z\t\tzone = us-central1-a\n2015-10-12T16:22:06.169Z\t\tzone = us-central1-b\n2015-10-12T16:22:06.170Z\t\tzone = us-central1-c\n2015-10-12T16:22:06.170Z\t\tzone = us-central1-f\n2015-10-12T16:22:06.170Z\t\tzone = asia-east1-a\n2015-10-12T16:22:06.171Z\t\tzone = asia-east1-b\n2015-10-12T16:22:06.171Z\t\tzone = asia-east1-c\n2015-10-12T16:22:08.712Z\t\t# of vms: 0\n2015-10-12T16:22:08.931Z\t\t# of vms: 0\n2015-10-12T16:22:09.145Z\t\t# of vms: 0\n2015-10-12T16:22:09.191Z\t\t# of vms: 0\n2015-10-12T16:22:09.266Z\t\t# of vms: 0\n2015-10-12T16:22:09.352Z\t\t# of vms: 0\n2015-10-12T16:22:09.416Z\t\t# of vms: 1\n2015-10-12T16:22:09.416Z\t\t2015-10-12T09:14:51.579-07:00\n2015-10-12T16:22:09.417Z\t\t437.838\n2015-10-12T16:22:09.493Z\t\t# of vms: 0\n2015-10-12T16:22:09.723Z\t\t# of vms: 0\n2015-10-12T16:22:09.754Z\t\t# of vms: 0\n2015-10-12T16:22:09.754Z\t\tdone\nEND RequestId: \nREPORT RequestId: \tDuration: 3669.54 ms\tBilled Duration: 3700 ms \tMemory Size: 128 MB\tMax Memory Used: 57 MB\t\n```\n\nVoala! \u5b9f\u884c\u3067\u304d\u307e\u3057\u305f.\n\n\u3042\u3068\u306f\u3053\u308c\u3092 Scheduled event \u3067\u5b9a\u671f\u7684\u306b\u5b9f\u884c\u3059\u308c\u3070 GCE instances \u3092\u76e3\u8996\u3067\u304d\u307e\u3059\u306d! AWS Lambda \u4fbf\u5229\u3067\u3059\u306d, \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059.\n\n## TODO\n\n* Credentials \u3092 lambda code \u306b\u76f4\u63a5\u66f8\u3044\u3066\u3044\u3044\u3082\u306e\u306a\u306e\u304b? Credentials \u60c5\u5831\u306e\u7ba1\u7406\u306f\u3069\u3046\u308b\u3059\u308b\u306e\u304c\u3088\u3044\u304b?\n", "tags": ["gce", "lambda"]}