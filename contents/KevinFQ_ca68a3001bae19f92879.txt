{"context": "Spring Boot + Thymeleaf\u3067\u753b\u9762\u306e\u30da\u30fc\u30b8\u30f3\u30b0\u6a5f\u80fd\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\u5b8c\u6210\u5f8c\u306e\u753b\u9762\u30a4\u30e1\u30fc\u30b8\n\n\n\u691c\u8a3c\u74b0\u5883\n\nSpring Boot 1.4.3\nPostgreSQL 9.3.15\n\n\n\u5b9f\u88c5\n\n\u307e\u305a\u306f\u3001Domain\u30ec\u30a4\u30e4\u3067\u3059\u3002\n@Entity\n@Table(name=\"word_info\")\npublic class Word implements Serializable {\n\n    private static final long serialVersionUID = -870708489937857961L;\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.TABLE, generator=\"seqTable\")\n    @TableGenerator(name=\"seqTable\", table=\"seq_table\", pkColumnName=\"seq_name\", pkColumnValue=\"word_seq\", valueColumnName=\"seq_value\")\n    @Column(name=\"id\")\n    private Long id;\n\n    @Column(name=\"word\")\n    private String word;\n\n    @Column(name=\"meaning\")\n    private String meaning;\n\n    @Column(name=\"example\")\n    private String example;\n\n    //get\u30fbset\u7701\u7565\n    ...\n}\n\n\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u3001JPA\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3002List\u306e\u4ee3\u308f\u308a\u306bPage\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n@Repository\npublic interface WordRepository extends CrudRepository<Word, Long>{\n\n    public Page<Word> findAll(Pageable pageable);\n\n}\n\n\n\u6b21\u306f\u3001Service\u30ec\u30a4\u30e4\u3067\u3059\u3002\n@Service\npublic class WordService {\n\n    @Autowired\n    private WordRepository wordRepo;\n\n    public Page<Word> getAllWord(Pageable pageable) {\n\n        return wordRepo.findAll(pageable);\n    }\n\n}\n\n\nPresentation\u30ec\u30a4\u30e4\u3067\u3059\u3002\n@Controller\npublic class MainController {\n\n    @Autowired\n    private WordService wordService;\n\n    @RequestMapping(value=\"/word/wordList\", method=RequestMethod.GET)\n    public String getWordList(Model model, Pageable pageable) {\n        Page<Word> wordsPage = wordService.getAllWord(pageable);\n        model.addAttribute(\"page\", wordsPage);\n        model.addAttribute(\"words\", wordsPage.getContent());\n        model.addAttribute(\"url\", \"/word/wordList\");\n\n        return \"/word/wordList\";\n    }\n}\n\n\n\u8868\u793a\u4ef6\u6570\u306e\u8a2d\u5b9a\n\u30da\u30fc\u30b8\u5358\u4f4d\u306b\u6700\u5927\u306e\u8868\u793a\u4ef6\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n@Configuration\npublic class WebConfig extends WebMvcConfigurerAdapter {\n\n  @Override\n  public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {\n      PageableHandlerMethodArgumentResolver resolver = new PageableHandlerMethodArgumentResolver();\n      //\u30da\u30fc\u30b8\u5358\u4f4d\u306b\u8868\u793a\u3059\u308b\u4ef6\u6570\n      resolver.setFallbackPageable(new PageRequest(0, 5));\n      argumentResolvers.add(resolver);\n      super.addArgumentResolvers(argumentResolvers);\n  }\n\n}\n\n\n\u6700\u5f8c\u306bThymeleaf\u5074\u306e\u5b9f\u88c5\u3067\u3059\u3002\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\n      xmlns:th=\"http://www.thymeleaf.org\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <link th:substituteby=\"common/header :: common_header\"/>\n        <title>Word List</title>\n    </head>\n    <body>\n        <table border=\"1\">\n            <tr>\n                <th>ID</th>\n                <th>WORD</th>\n                <th>MEANING</th>\n                <th>EXAMPLE</th>\n            </tr>\n            <tr th:each=\"word:${words}\">\n                <td th:text=\"${word.id}\"></td>\n                <td th:text=\"${word.word}\"></td>\n                <td th:text=\"${word.meaning}\"></td>\n                <td th:text=\"${word.example}\"></td>\n            </tr>\n        </table>\n\n        <div th:fragment='paginationbar'>\n            <ul>\n                <li th:class=\"${page.first} ? 'disabled':''\" style=\"display:inline\">\n                    <span th:if=\"${page.first}\">\u2190\u5148\u982d</span>\n                    <a th:if=\"${not page.first}\" th:href=\"@{${url}(page=0)}\">\u2190\u5148\u982d</a>\n                </li>\n                <li th:each='i : ${#numbers.sequence(0, page.totalPages-1)}' th:class=\"(${i}==${page.number})? 'active' : ''\" style=\"display:inline\">\n                    <span th:if='${i}==${page.number}' th:text='${i+1}'>1</span>\n                    <a th:if='${i}!=${page.number}' th:href=\"@{'/word/wordList'(page=${i})}\">\n                        <span th:text='${i+1}'>1</span>\n                    </a>\n                </li>\n                <li th:class=\"${page.last} ? 'disabled':''\" style=\"display:inline\">\n                    <span th:if=\"${page.last}\">\u672b\u5c3e\u279d</span>\n                    <a th:if=\"${not page.last}\" th:href=\"@{${url}(page=(${page.totalPages}-1))}\">\u672b\u5c3e\u279d</a>\n                </li>\n            </ul>\n        </div>\n    </body>\n</html>\n\n\n\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306e\u5834\u5408\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30da\u30fc\u30b8\u6570\u304c\u591a\u3044\u30b1\u30fc\u30b9\u306b\u306f\u3001\u4e00\u90e8\u306e\u30da\u30fc\u30b8\u756a\u53f7\u3057\u304b\u8868\u793a\u3055\u305b\u306a\u3044\u5834\u5408\u306b\u3001Page\u306e\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\n\n\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\npublic class PageWrapper<T> {\n    public static final int MAX_PAGE_ITEM_DISPLAY = 5;\n    private Page<T> page;\n    private List<PageItem> items;\n    private int currentNumber;\n    private String url;\n\n    public String getUrl() {\n        return url;\n    }\n\n    public void setUrl(String url) {\n        this.url = url;\n    }\n\n    public PageWrapper(Page<T> page, String url){\n        this.page = page;\n        this.url = url;\n        items = new ArrayList<PageItem>();\n\n        currentNumber = page.getNumber() + 1;\n\n        int start, size;\n        if (page.getTotalPages() <= MAX_PAGE_ITEM_DISPLAY){\n            start = 1;\n            size = page.getTotalPages();\n        } else {\n            if (currentNumber <= MAX_PAGE_ITEM_DISPLAY - MAX_PAGE_ITEM_DISPLAY/2){\n                start = 1;\n                size = MAX_PAGE_ITEM_DISPLAY;\n            } else if (currentNumber >= page.getTotalPages() - MAX_PAGE_ITEM_DISPLAY/2){\n                start = page.getTotalPages() - MAX_PAGE_ITEM_DISPLAY + 1;\n                size = MAX_PAGE_ITEM_DISPLAY;\n            } else {\n                start = currentNumber - MAX_PAGE_ITEM_DISPLAY/2;\n                size = MAX_PAGE_ITEM_DISPLAY;\n            }\n        }\n\n        for (int i = 0; i<size; i++){\n            items.add(new PageItem(start+i, (start+i)==currentNumber));\n        }\n    }\n\n    public List<PageItem> getItems(){\n        return items;\n    }\n\n    public int getNumber(){\n        return currentNumber;\n    }\n\n    public List<T> getContent(){\n        return page.getContent();\n    }\n\n    public int getSize(){\n        return page.getSize();\n    }\n\n    public int getTotalPages(){\n        return page.getTotalPages();\n    }\n\n    public boolean isFirstPage(){\n        return page.isFirst();\n    }\n\n    public boolean isLastPage(){\n        return page.isLast();\n    }\n\n    public boolean isHasPreviousPage(){\n        return page.hasPrevious();\n    }\n\n    public boolean isHasNextPage(){\n        return page.hasNext();\n    }\n\n    public class PageItem {\n        private int number;\n        private boolean current;\n        public PageItem(int number, boolean current){\n            this.number = number;\n            this.current = current;\n        }\n\n        public int getNumber(){\n            return this.number;\n        }\n\n        public boolean isCurrent(){\n            return this.current;\n        }\n    }\n}\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30af\u30e9\u30b9\u306e\u5909\u66f4\nPage\u306e\u4ee3\u308f\u308a\u306b\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3002\n@Controller\npublic class MainController {\n\n    @Autowired\n    private WordService wordService;\n\n    @RequestMapping(\"/word/register\")\n    public String wordRegister(WordForm wordForm) {\n        wordService.addWord(wordForm);\n        return \"/word/wordRegister\";\n    }\n\n    @RequestMapping(value=\"/word/wordList\", method=RequestMethod.GET)\n    public String getWordList(Model model, Pageable pageable) {\n        Page<Word> wordPage = wordService.getAllWord(pageable);\n        PageWrapper<Word> page = new PageWrapper<Word>(wordPage, \"/word/wordList\");\n        model.addAttribute(\"page\", page);\n        model.addAttribute(\"words\", page.getContent());\n\n        return \"/word/wordList\";\n    }\n}\n\n\nThymeleaf\n\u30da\u30fc\u30b8\u30f3\u30b0\u306e\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n    ...\n\n        <div th:fragment='paginationbar'>\n            <ul class='pagination pagination-centered'>\n                <li th:class=\"${page.firstPage}?'disabled':''\" style=\"display:inline\">\n                    <span th:if='${page.firstPage}'>\u2190\u5148\u982d</span>\n                    <a th:if='${not page.firstPage}' th:href='@{${page.url}(page=0,size=${page.size})}'>\u2190\u5148\u982d</a>\n                </li>\n                <li th:class=\"${page.hasPreviousPage}? '' : 'disabled'\" style=\"display:inline\">\n                    <span th:if='${not page.hasPreviousPage}'>\u00ab</span>\n                    <a th:if='${page.hasPreviousPage}' th:href='@{${page.url}(page=${page.number-2},size=${page.size})}'>\u00ab</a>\n                </li>\n\n\n                <li th:each='item : ${page.items}' th:class=\"${item.current}? 'active' : ''\" style=\"display:inline\">\n                    <span th:if='${item.current}' th:text='${item.number}'>1</span>\n                    <a th:if='${not item.current}' th:href='@{${page.url}(page=${item.number-1},size=${page.size})}'>\n                    <span th:text='${item.number}'>1</span>\n                    </a>\n                </li>\n                <li th:class=\"${page.hasNextPage}? '' : 'disabled'\" style=\"display:inline\">\n                    <span th:if='${not page.hasNextPage}'>\u00bb</span>\n                    <a th:if='${page.hasNextPage}' th:href='@{${page.url}(page=${page.number},size=${page.size})}'>\u00bb</a>\n                </li>\n                <li th:class=\"${page.lastPage}? 'disabled' : ''\" style=\"display:inline\">\n                    <span th:if='${page.lastPage}'>\u672b\u5c3e\u279d</span>\n                    <a th:if='${not page.lastPage}' th:href='@{${page.url}(page=${page.totalPages - 1},size=${page.size})}'>\u672b\u5c3e\u279d</a>\n                </li>\n            </ul>\n        </div>\n    ...\n\n\u53c2\u7167\uff1ahttps://github.com/mtiger2k/pageableSpringBootDataJPA\nSpring Boot + Thymeleaf\u3067\u753b\u9762\u306e\u30da\u30fc\u30b8\u30f3\u30b0\u6a5f\u80fd\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\u5b8c\u6210\u5f8c\u306e\u753b\u9762\u30a4\u30e1\u30fc\u30b8\n<img width=\"1355\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-21 23.25.18.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/123138/b43099a2-fe83-c5b7-5144-5d19d99713ae.png\">\n\n\n##\u691c\u8a3c\u74b0\u5883\n- Spring Boot 1.4.3\n- PostgreSQL 9.3.15\n\n##\u5b9f\u88c5\n###\u307e\u305a\u306f\u3001Domain\u30ec\u30a4\u30e4\u3067\u3059\u3002\n\n```java\n@Entity\n@Table(name=\"word_info\")\npublic class Word implements Serializable {\n\n\tprivate static final long serialVersionUID = -870708489937857961L;\n\t\n\t@Id\n\t@GeneratedValue(strategy=GenerationType.TABLE, generator=\"seqTable\")\n\t@TableGenerator(name=\"seqTable\", table=\"seq_table\", pkColumnName=\"seq_name\", pkColumnValue=\"word_seq\", valueColumnName=\"seq_value\")\n\t@Column(name=\"id\")\n\tprivate Long id;\n\t\n\t@Column(name=\"word\")\n\tprivate String word;\n\t\n\t@Column(name=\"meaning\")\n\tprivate String meaning;\n\t\n\t@Column(name=\"example\")\n\tprivate String example;\n\n\t//get\u30fbset\u7701\u7565\n\t...\n}\n```\n\n\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u3001JPA\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3002List\u306e\u4ee3\u308f\u308a\u306bPage\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```java\n@Repository\npublic interface WordRepository extends CrudRepository<Word, Long>{\n\t\n\tpublic Page<Word> findAll(Pageable pageable);\n\n}\n```\n\n###\u6b21\u306f\u3001Service\u30ec\u30a4\u30e4\u3067\u3059\u3002\n\n```java\n@Service\npublic class WordService {\n\t\n\t@Autowired\n\tprivate WordRepository wordRepo;\n\t\n\tpublic Page<Word> getAllWord(Pageable pageable) {\n\n\t\treturn wordRepo.findAll(pageable);\n\t}\n\n}\n```\n\n###Presentation\u30ec\u30a4\u30e4\u3067\u3059\u3002\n\n\n```java\n@Controller\npublic class MainController {\n\t\n\t@Autowired\n\tprivate WordService wordService;\n\t\n\t@RequestMapping(value=\"/word/wordList\", method=RequestMethod.GET)\n\tpublic String getWordList(Model model, Pageable pageable) {\n\t\tPage<Word> wordsPage = wordService.getAllWord(pageable);\n\t\tmodel.addAttribute(\"page\", wordsPage);\n\t\tmodel.addAttribute(\"words\", wordsPage.getContent());\n\t\tmodel.addAttribute(\"url\", \"/word/wordList\");\n\t\t\n\t\treturn \"/word/wordList\";\n\t}\n}\n```\n\n###\u8868\u793a\u4ef6\u6570\u306e\u8a2d\u5b9a\n\u30da\u30fc\u30b8\u5358\u4f4d\u306b\u6700\u5927\u306e\u8868\u793a\u4ef6\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```java\n@Configuration\npublic class WebConfig extends WebMvcConfigurerAdapter {\n\n  @Override\n  public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {\n      PageableHandlerMethodArgumentResolver resolver = new PageableHandlerMethodArgumentResolver();\n      //\u30da\u30fc\u30b8\u5358\u4f4d\u306b\u8868\u793a\u3059\u308b\u4ef6\u6570\n      resolver.setFallbackPageable(new PageRequest(0, 5));\n      argumentResolvers.add(resolver);\n      super.addArgumentResolvers(argumentResolvers);\n  }\n\n}\n```\n\n###\u6700\u5f8c\u306bThymeleaf\u5074\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\n```html\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\n\t  xmlns:th=\"http://www.thymeleaf.org\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<link th:substituteby=\"common/header :: common_header\"/>\n\t\t<title>Word List</title>\n\t</head>\n\t<body>\n\t\t<table border=\"1\">\n\t\t\t<tr>\n\t\t\t\t<th>ID</th>\n\t\t\t\t<th>WORD</th>\n\t\t\t\t<th>MEANING</th>\n\t\t\t\t<th>EXAMPLE</th>\n\t\t\t</tr>\n\t\t\t<tr th:each=\"word:${words}\">\n\t\t\t\t<td th:text=\"${word.id}\"></td>\n\t\t\t\t<td th:text=\"${word.word}\"></td>\n\t\t\t\t<td th:text=\"${word.meaning}\"></td>\n\t\t\t\t<td th:text=\"${word.example}\"></td>\n\t\t\t</tr>\n\t\t</table>\n\t\t\n\t\t<div th:fragment='paginationbar'>\n\t\t\t<ul>\n\t\t\t\t<li th:class=\"${page.first} ? 'disabled':''\" style=\"display:inline\">\n\t\t\t\t\t<span th:if=\"${page.first}\">\u2190\u5148\u982d</span>\n\t\t\t\t\t<a th:if=\"${not page.first}\" th:href=\"@{${url}(page=0)}\">\u2190\u5148\u982d</a>\n\t\t\t\t</li>\n\t\t\t\t<li th:each='i : ${#numbers.sequence(0, page.totalPages-1)}' th:class=\"(${i}==${page.number})? 'active' : ''\" style=\"display:inline\">\n                \t<span th:if='${i}==${page.number}' th:text='${i+1}'>1</span>\n               \t \t<a th:if='${i}!=${page.number}' th:href=\"@{'/word/wordList'(page=${i})}\">\n               \t \t\t<span th:text='${i+1}'>1</span>\n               \t \t</a>\n                </li>\n\t\t\t\t<li th:class=\"${page.last} ? 'disabled':''\" style=\"display:inline\">\n\t\t\t\t\t<span th:if=\"${page.last}\">\u672b\u5c3e\u279d</span>\n\t\t\t\t\t<a th:if=\"${not page.last}\" th:href=\"@{${url}(page=(${page.totalPages}-1))}\">\u672b\u5c3e\u279d</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</body>\n</html>\n```\n\n##\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306e\u5834\u5408\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30da\u30fc\u30b8\u6570\u304c\u591a\u3044\u30b1\u30fc\u30b9\u306b\u306f\u3001\u4e00\u90e8\u306e\u30da\u30fc\u30b8\u756a\u53f7\u3057\u304b\u8868\u793a\u3055\u305b\u306a\u3044\u5834\u5408\u306b\u3001Page\u306e\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n<img width=\"1363\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-21 23.52.24.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/123138/f70c7462-3ecb-4da8-5080-b6e3c218352c.png\">\n\n<img width=\"1367\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-21 23.52.39.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/123138/7846fad4-2a82-babf-fa71-a65406c4876e.png\">\n\n###\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\n\n```java\npublic class PageWrapper<T> {\n    public static final int MAX_PAGE_ITEM_DISPLAY = 5;\n    private Page<T> page;\n    private List<PageItem> items;\n    private int currentNumber;\n    private String url;\n\n    public String getUrl() {\n        return url;\n    }\n\n    public void setUrl(String url) {\n        this.url = url;\n    }\n\n    public PageWrapper(Page<T> page, String url){\n        this.page = page;\n        this.url = url;\n        items = new ArrayList<PageItem>();\n\n        currentNumber = page.getNumber() + 1;\n\n        int start, size;\n        if (page.getTotalPages() <= MAX_PAGE_ITEM_DISPLAY){\n            start = 1;\n            size = page.getTotalPages();\n        } else {\n            if (currentNumber <= MAX_PAGE_ITEM_DISPLAY - MAX_PAGE_ITEM_DISPLAY/2){\n                start = 1;\n                size = MAX_PAGE_ITEM_DISPLAY;\n            } else if (currentNumber >= page.getTotalPages() - MAX_PAGE_ITEM_DISPLAY/2){\n                start = page.getTotalPages() - MAX_PAGE_ITEM_DISPLAY + 1;\n                size = MAX_PAGE_ITEM_DISPLAY;\n            } else {\n                start = currentNumber - MAX_PAGE_ITEM_DISPLAY/2;\n                size = MAX_PAGE_ITEM_DISPLAY;\n            }\n        }\n\n        for (int i = 0; i<size; i++){\n            items.add(new PageItem(start+i, (start+i)==currentNumber));\n        }\n    }\n\n    public List<PageItem> getItems(){\n        return items;\n    }\n\n    public int getNumber(){\n        return currentNumber;\n    }\n\n    public List<T> getContent(){\n        return page.getContent();\n    }\n\n    public int getSize(){\n        return page.getSize();\n    }\n\n    public int getTotalPages(){\n        return page.getTotalPages();\n    }\n\n    public boolean isFirstPage(){\n        return page.isFirst();\n    }\n\n    public boolean isLastPage(){\n        return page.isLast();\n    }\n\n    public boolean isHasPreviousPage(){\n        return page.hasPrevious();\n    }\n\n    public boolean isHasNextPage(){\n        return page.hasNext();\n    }\n\n    public class PageItem {\n        private int number;\n        private boolean current;\n        public PageItem(int number, boolean current){\n            this.number = number;\n            this.current = current;\n        }\n\n        public int getNumber(){\n            return this.number;\n        }\n\n        public boolean isCurrent(){\n            return this.current;\n        }\n    }\n}\n```\n\n###\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30af\u30e9\u30b9\u306e\u5909\u66f4\nPage\u306e\u4ee3\u308f\u308a\u306b\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```java\n@Controller\npublic class MainController {\n\t\n\t@Autowired\n\tprivate WordService wordService;\n\n\t@RequestMapping(\"/word/register\")\n\tpublic String wordRegister(WordForm wordForm) {\n\t\twordService.addWord(wordForm);\n\t\treturn \"/word/wordRegister\";\n\t}\n\t\n\t@RequestMapping(value=\"/word/wordList\", method=RequestMethod.GET)\n\tpublic String getWordList(Model model, Pageable pageable) {\n\t\tPage<Word> wordPage = wordService.getAllWord(pageable);\n\t\tPageWrapper<Word> page = new PageWrapper<Word>(wordPage, \"/word/wordList\");\n\t\tmodel.addAttribute(\"page\", page);\n\t\tmodel.addAttribute(\"words\", page.getContent());\n\t\t\n\t\treturn \"/word/wordList\";\n\t}\n}\n```\n\n###Thymeleaf\n\n\u30da\u30fc\u30b8\u30f3\u30b0\u306e\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```html\n\t...\n\n\t\t<div th:fragment='paginationbar'>\n\t\t\t<ul class='pagination pagination-centered'>\n\t\t\t\t<li th:class=\"${page.firstPage}?'disabled':''\" style=\"display:inline\">\n\t\t\t\t\t<span th:if='${page.firstPage}'>\u2190\u5148\u982d</span>\n\t\t\t\t\t<a th:if='${not page.firstPage}' th:href='@{${page.url}(page=0,size=${page.size})}'>\u2190\u5148\u982d</a>\n\t\t\t\t</li>\n\t\t\t\t<li th:class=\"${page.hasPreviousPage}? '' : 'disabled'\" style=\"display:inline\">\n\t\t\t\t\t<span th:if='${not page.hasPreviousPage}'>\u00ab</span>\n\t\t\t\t\t<a th:if='${page.hasPreviousPage}' th:href='@{${page.url}(page=${page.number-2},size=${page.size})}'>\u00ab</a>\n\t\t\t\t</li>\n\t                \n\t                \n\t\t\t\t<li th:each='item : ${page.items}' th:class=\"${item.current}? 'active' : ''\" style=\"display:inline\">\n\t\t\t\t\t<span th:if='${item.current}' th:text='${item.number}'>1</span>\n\t\t\t\t\t<a th:if='${not item.current}' th:href='@{${page.url}(page=${item.number-1},size=${page.size})}'>\n\t\t\t\t\t<span th:text='${item.number}'>1</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li th:class=\"${page.hasNextPage}? '' : 'disabled'\" style=\"display:inline\">\n\t\t\t\t\t<span th:if='${not page.hasNextPage}'>\u00bb</span>\n\t\t\t\t\t<a th:if='${page.hasNextPage}' th:href='@{${page.url}(page=${page.number},size=${page.size})}'>\u00bb</a>\n\t\t\t\t</li>\n\t\t\t\t<li th:class=\"${page.lastPage}? 'disabled' : ''\" style=\"display:inline\">\n\t\t\t\t\t<span th:if='${page.lastPage}'>\u672b\u5c3e\u279d</span>\n\t\t\t\t\t<a th:if='${not page.lastPage}' th:href='@{${page.url}(page=${page.totalPages - 1},size=${page.size})}'>\u672b\u5c3e\u279d</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t...\n```\n\n\u53c2\u7167\uff1ahttps://github.com/mtiger2k/pageableSpringBootDataJPA\n", "tags": ["Java", "spring", "spring-boot", "spring-data-jpa", "Thymeleaf"]}