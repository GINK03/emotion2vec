{"tags": ["RaspberryPi", "Linux", "kernel"], "context": "\n\n\u524d\u56de\n\u300c\u96fb\u6e90\u6295\u5165\u304b\u3089Kernel\u306b\u5236\u5fa1\u304c\u79fb\u884c\u3059\u308b\u307e\u3067\u300d\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\n\u76ee\u7684\u3084\u4f7f\u7528\u6a5f\u6750\u306b\u3064\u3044\u3066\u3082\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\nKernel\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u524d\u306b(\u4e8b\u524d\u6e96\u5099)\n\u79c1\u306e\u3088\u3046\u306a\u521d\u5fc3\u8005\u306f\u3001\u9014\u4e2d\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8ffd\u3048\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u6b63\u3057\u3044\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u308b\u306e\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u30d6\u30fc\u30c8\u6642\u306e\u30ed\u30b0\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u30ed\u30b0\u306f\u3001Raspberry Pi\u306e\u8d77\u52d5\u5f8c\u306b\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3059\u308b\u4e8b\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\npi\u306f\u30e6\u30fc\u30b6\u540d\u3067\u3059\u3002boot_log.txt\u306f\u597d\u304d\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n$ dmesg > /home/pi/Desktop>boot_log.txt\n\u30b3\u30de\u30f3\u30c9\u5165\u529b\u5f8c\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u304c\u8a18\u8f09\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n\u4f8b\n[    0.000000] Booting Linux on physical CPU 0xf00\n[    0.000000] Initializing cgroup subsys cpuset\n[    0.000000] Initializing cgroup subsys cpu\n[    0.000000] Initializing cgroup subsys cpuacct\n(\u4ee5\u4e0b\u7701\u7565)\n\n\u3053\u306e\u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u691c\u7d22\u3059\u308b\u4e8b\u3067\u3001\u8a72\u5f53\u3059\u308b\u51e6\u7406\u304c\u8a18\u8f09\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u3053\u306e\u969b\u3001\u6163\u308c\u306a\u3044\u3068\u6b63\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u304c\u5224\u65ad\u3067\u304d\u306a\u3044\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\u6163\u308c\u308b\u3057\u304b\u306a\u3044\u3067\u3059\u3002\n$ cd /home/pi/Desktop/linux-rpi-4.1.y\n$ grep -nr \"Booting Linux on physical CPU\" *\n\nKernel\u5185\u306eENTRY(stext)\u3078\u79fb\u52d5\n\u4e00\u756a\u6700\u521d\u306e\u8d77\u52d5\u30ed\u30b0\u3092\u691c\u7d22\u3059\u308b\u3068\u3001\n$ grep -nr \"Booting Linux on physical CPU\" *\nlinux-rpi-4.1.y/arch/arm/kernel/setup.c\u5185\u306e\"void notrace cpu_init(void)\"\u304c\n\u8a72\u5f53\u306e\u51e6\u7406\u3068\u5206\u304b\u308a\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u5b9f\u969b\u306f\u3053\u306e\u95a2\u6570\u306b\u8fbf\u308a\u7740\u304f\u524d\u306b\u3001\u7d30\u304b\u306a\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\nRaspberry Pi2\u306fARM CPU(Cortex-A7)\u306a\u306e\u3067\u3001\nlinux-rpi-4.1.y/arch/arm/kernel/head.S\u306eENTRY(stext)\u304b\u3089\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002\nENTRY(stext)\u306f\u3001kernel.img\u306e\u5148\u982d\u304b\u3089\u30aa\u30d5\u30bb\u30c3\u30c8(0x8000)\u3092\u8db3\u3057\u305f\u4f4d\u7f6e\u306b\u3042\u308a\u307e\u3059\u3002\n\u30aa\u30d5\u30bb\u30c3\u30c8\u306e\u5024\u3092\u77e5\u308b\u65b9\u6cd5\u306f\u3001\u4ee5\u4e0b\u306e2\u901a\u308a\u3067\u3059\u3002\n\u3000\u30fbstart.elf\u3092\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\uff1a$ arm-none-eabi-objdump -m arm -D start.elf\n\u3000\u30fblinux-rpi-4.1.y/arch/arm/kernel/vmlinux.lds\u306e\u4e2d\u8eab\u3092\u8aad\u3080\nENTRY(stext)\u3092\u5b9f\u884c\u3057\u305f\u76f4\u5f8c\u306eCPU\u306e\u72b6\u614b\u306f\u3001\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\nMMU     = OFF\nD-cache = OFF\nI-cache = Don't care\nr0      = 0\nr1      = machine number\nr2      = atargs or DTB pointer\n\nMMU(\u30e1\u30e2\u30ea\u7ba1\u7406\u30e6\u30cb\u30c3\u30c8)\u306fOFF\u3001\nD-Cache(\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5)\u3082OFF\u3001\nI-cache(\u547d\u4ee4\u30ad\u30e3\u30c3\u30b7\u30e5)\u306fON/OFF\u3069\u3061\u3089\u3067\u3082\u554f\u984c\u304c\u3042\u308a\u307e\u305b\u3093\u3002\nr0\u306f0(ARM CPU\u306er0\u306f\u5f15\u6570\u6e21\u3057\u3067\u306f\u306a\u304f\u3001\u8fd4\u308a\u5024\u3092\u6e21\u3059\u6642\u306b\u4f7f\u7528\u3055\u308c\u308b\u305f\u3081)\u3001\nr1\u306flinux-rpi-4.1.y/arch/arm/tools/mach-types\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30dc\u30fc\u30c9\u56fa\u6709\u3092\u683c\u7d0d\u3057\u3001\nr2\u306fatags\u69cb\u9020\u4f53\u304bDTB(Device Tree Blob)\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nr0~r2\u306b\u5024\u3092\u5165\u308c\u305f\u306e\u306f\u3001Bootloader\u3067\u3059\u3002\natags\u69cb\u9020\u4f53\u3001DTB(Device Tree)\u306f\u3001\u30dc\u30fc\u30c9\u56fa\u6709\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u60c5\u5831\u3092\u8a18\u8ff0\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\u524d\u8005\u306fKernel\u5185(arch/arm/mach-*/)\u306b\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001\n\u5f8c\u8005\u306fKernel\u5916(Device Tree)\u306b\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u4e00\u822c\u7684\u306b\u3001ARM\u74b0\u5883(Raspberry Pi)\u3067\u306fDTB\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\nENTRY(stext)\u3067\u306e\u51e6\u7406(CPU ID\u306e\u53d6\u5f97\u307e\u3067)\n\u4ee5\u4e0b\u306b\u6982\u7565\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\nlinux-rpi-4.1.y/arch/arm/kernel/head.S\nENTRY(stext)\n ARM_BE8(setend be )            @ ensure we are in BE8 mode\n\n THUMB( adr r9, BSYM(1f)    )   @ Kernel is always entered in ARM.\n THUMB( bx  r9      )   @ If this is a Thumb-2 kernel,\n THUMB( .thumb          )   @ switch to Thumb now.\n THUMB(1:           )\n\n#ifdef CONFIG_ARM_VIRT_EXT\n    bl  __hyp_stub_install\n#endif\n    @ ensure svc mode and all interrupts masked\n    safe_svcmode_maskall r9\n\n    mrc p15, 0, r9, c0, c0      @ get processor id\n    bl  __lookup_processor_type     @ r5=procinfo r9=cpuid\n    movs    r10, r5             @ invalid processor (r5=0)?\n THUMB( it  eq )        @ force fixup-able long branch encoding\n    beq __error_p           @ yes, error 'p'\n\n\n\u30001\uff09CPU\u3092\u30d3\u30c3\u30b0\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u5f62\u5f0f\u306b\u5909\u66f4\n\u30002\uff09CPU\u306e\u52d5\u4f5c\u30e2\u30fc\u30c9\u3092ARM(32bit\u547d\u4ee4\u30e2\u30fc\u30c9)\u306b\u5909\u66f4\n\u30003\uff09CPU\u3092\u30b9\u30fc\u30d1\u30d0\u30a4\u30b6\u30e2\u30fc\u30c9\u306b\u5909\u66f4\n\u30004\uff09\u5168\u3066\u306e\u5272\u308a\u8fbc\u307f\u3092\u30de\u30b9\u30af\n\u30005\uff09c0(\u30d7\u30ed\u30bb\u30c3\u30b5\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u542b\u3080\u30ec\u30b8\u30b9\u30bf)\u304b\u3089CPU ID\u3092r9\u306b\u683c\u7d0d\n\u30006\uff09_lookup_processor_type\u306b\u3088\u308a\u3001r5\u306bproc_infolist\u69cb\u9020\u4f53\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u683c\u7d0d\n\nlinux-rpi-4.1.y/arch/arm/kernel/head-common.S\n__lookup_processor_type:\n    adr r3, __lookup_processor_type_data\n    ldmia   r3, {r4 - r6}\n    sub r3, r3, r4          @ get offset between virt&phys\n    add r5, r5, r3          @ convert virt addresses to\n    add r6, r6, r3          @ physical address space\n1:  ldmia   r5, {r3, r4}            @ value, mask\n    and r4, r4, r9          @ mask wanted bits\n    teq r3, r4\n    beq 2f\n    add r5, r5, #PROC_INFO_SZ       @ sizeof(proc_info_list)\n    cmp r5, r6\n    blo 1b\n    mov r5, #0              @ unknown processor\n2:  ret lr\nENDPROC(__lookup_processor_type)\n\n\n\u307e\u305a\u3001proc_info_list\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092CPU ID(r9)\u3092\u7528\u3044\u3066\u5165\u624b\u3057\u307e\u3059\u3002\nr4\u306b\u306fproc_info_begin(\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9)\u3001r6\u306b\u306fproc_info_end(\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9)\u304c\u683c\u7d0d\u3055\u308c\u3001\n\u3053\u308c\u3089\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u7269\u7406\u30a2\u30c9\u30ec\u30b9\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n(\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306f\u3001MMU\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081)\n\u6b21\u306b\u3001ldmia\u547d\u4ee4\u3067r3\u306bCPU ID\u3092\u683c\u7d0d\u3057\u3001r4\u306bCPU MASK\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\nr4(__proc_info_begin)\u3068r9(CPU ID)\u306e\u8ad6\u7406\u7a4d\u3092\u3068\u308a\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001r3(CPU ID)\u3068r4(_proc_info_begin\u3068CPU ID\u306e\u8ad6\u7406\u7a4d)\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\u3001\u30e9\u30d9\u30eb2:\u306b\u79fb\u52d5\u3057\u3001ret\u547d\u4ee4\u306b\u3088\u308a\u3001\u547c\u3073\u51fa\u3057\u5143\u306b\u30ea\u30bf\u30fc\u30f3\u3057\u307e\u3059\u3002\n\u5024\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u30dd\u30a4\u30f3\u30bf\u3092\u30aa\u30d5\u30bb\u30c3\u30c8\u5206(PROC_INFO_SZ)\u79fb\u52d5\u3055\u305b\u3001\n\u6b21\u306eprocinfo_list\u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u3092\u8abf\u3079\u307e\u3059(\u30e9\u30d9\u30eb1\uff1a\u306b\u98db\u3073\u307e\u3059)\u3002\n\u3053\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u306f\u3001linux-rpi-4.1.y/arch/arm/kernel/asm-offsets.c\u5185\u3067\u3001\nDEFINE(PROC_INFO_SZ, sizeof(struct proc_info_list));\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nproc_info_list\u69cb\u9020\u4f53\u306b\u3064\u3044\u3066\n\u4ee5\u4e0b\u306e\u69cb\u9020\u4f53\u306f\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b(C\u8a00\u8a9e\u3067\u306f\u306a\u3044)\u3002\n\nlinux-rpi-4.1.y/arch/arm/include/asm/procinfo.h\nstruct proc_info_list {\n    unsigned int        cpu_val;\n    unsigned int        cpu_mask;\n    unsigned long       __cpu_mm_mmu_flags; /* used by head.S */\n    unsigned long       __cpu_io_mmu_flags; /* used by head.S */\n    unsigned long       __cpu_flush;        /* used by head.S */\n    const char      *arch_name;\n    const char      *elf_name;\n    unsigned int        elf_hwcap;\n    const char      *cpu_name;\n    struct processor    *proc;\n    struct cpu_tlb_fns  *tlb;\n    struct cpu_user_fns *user;\n    struct cpu_cache_fns    *cache;\n};\n\n\n\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059(\u5f8c\u65e5\u8ffd\u8a18\u3057\u307e\u3059)\n\nlinux-rpi-4.1.y/arch/arm/mm/proc-v7.S\n    /*\n     * Standard v7 proc info content\n     */\n.macro __v7_proc name, initfunc, mm_mmuflags = 0, io_mmuflags = 0, hwcaps = 0, proc_fns = v7_processor_functions\n    ALT_SMP(.long   PMD_TYPE_SECT | PMD_SECT_AP_WRITE | PMD_SECT_AP_READ | \\\n            PMD_SECT_AF | PMD_FLAGS_SMP | \\mm_mmuflags)\n    ALT_UP(.long    PMD_TYPE_SECT | PMD_SECT_AP_WRITE | PMD_SECT_AP_READ | \\\n            PMD_SECT_AF | PMD_FLAGS_UP | \\mm_mmuflags)\n    .long   PMD_TYPE_SECT | PMD_SECT_AP_WRITE | \\\n        PMD_SECT_AP_READ | PMD_SECT_AF | \\io_mmuflags\n    initfn  \\initfunc, \\name\n    .long   cpu_arch_name\n    .long   cpu_elf_name\n    .long   HWCAP_SWP | HWCAP_HALF | HWCAP_THUMB | HWCAP_FAST_MULT | \\\n        HWCAP_EDSP | HWCAP_TLS | \\hwcaps\n    .long   cpu_v7_name\n    .long   \\proc_fns\n    .long   v7wbi_tlb_fns\n    .long   v6_user_fns\n    .long   v7_cache_fns\n.endm\n\n\n\n\u6b21\u56de\n\u300cRaspberry Pi2(Linux Kernel)\u306e\u30d6\u30fc\u30c8\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u8aad\u3080(\u305d\u306e3)\u300d\nstart_kernel\u306b\u79fb\u884c\u3059\u308b\u307e\u3067(\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4f9d\u5b58\u90e8\u306e\u6700\u5f8c\u307e\u3067)\u306e\u8aac\u660e\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nDevice Tree \u5165\u9580\nDevice Tree \u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081\n##\u524d\u56de\n[\u300c\u96fb\u6e90\u6295\u5165\u304b\u3089Kernel\u306b\u5236\u5fa1\u304c\u79fb\u884c\u3059\u308b\u307e\u3067\u300d](http://qiita.com/Mogura1215/items/b8f866b4ede757cdaa73)\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\n\u76ee\u7684\u3084\u4f7f\u7528\u6a5f\u6750\u306b\u3064\u3044\u3066\u3082\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\n##Kernel\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u524d\u306b(\u4e8b\u524d\u6e96\u5099)\n\u79c1\u306e\u3088\u3046\u306a\u521d\u5fc3\u8005\u306f\u3001\u9014\u4e2d\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8ffd\u3048\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u6b63\u3057\u3044\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u308b\u306e\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u30d6\u30fc\u30c8\u6642\u306e\u30ed\u30b0\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30ed\u30b0\u306f\u3001Raspberry Pi\u306e\u8d77\u52d5\u5f8c\u306b\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3059\u308b\u4e8b\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\npi\u306f\u30e6\u30fc\u30b6\u540d\u3067\u3059\u3002boot_log.txt\u306f\u597d\u304d\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n`$ dmesg > /home/pi/Desktop>boot_log.txt`\n\n\u30b3\u30de\u30f3\u30c9\u5165\u529b\u5f8c\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u304c\u8a18\u8f09\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n>\u4f8b\n>[    0.000000] Booting Linux on physical CPU 0xf00\n>[    0.000000] Initializing cgroup subsys cpuset\n>[    0.000000] Initializing cgroup subsys cpu\n>[    0.000000] Initializing cgroup subsys cpuacct\n>(\u4ee5\u4e0b\u7701\u7565)\n\n\u3053\u306e\u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u691c\u7d22\u3059\u308b\u4e8b\u3067\u3001\u8a72\u5f53\u3059\u308b\u51e6\u7406\u304c\u8a18\u8f09\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u3053\u306e\u969b\u3001\u6163\u308c\u306a\u3044\u3068\u6b63\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u304c\u5224\u65ad\u3067\u304d\u306a\u3044\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\u6163\u308c\u308b\u3057\u304b\u306a\u3044\u3067\u3059\u3002\n`$ cd /home/pi/Desktop/linux-rpi-4.1.y`\n`$ grep -nr \"Booting Linux on physical CPU\" *`\n\n\n##Kernel\u5185\u306eENTRY(stext)\u3078\u79fb\u52d5\n\u4e00\u756a\u6700\u521d\u306e\u8d77\u52d5\u30ed\u30b0\u3092\u691c\u7d22\u3059\u308b\u3068\u3001\n`$ grep -nr \"Booting Linux on physical CPU\" *`\nlinux-rpi-4.1.y/arch/arm/kernel/setup.c\u5185\u306e\"void notrace cpu_init(void)\"\u304c\n\u8a72\u5f53\u306e\u51e6\u7406\u3068\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u5b9f\u969b\u306f\u3053\u306e\u95a2\u6570\u306b\u8fbf\u308a\u7740\u304f\u524d\u306b\u3001\u7d30\u304b\u306a\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\nRaspberry Pi2\u306fARM CPU(Cortex-A7)\u306a\u306e\u3067\u3001\nlinux-rpi-4.1.y/arch/arm/kernel/head.S\u306eENTRY(stext)\u304b\u3089\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002\n\nENTRY(stext)\u306f\u3001kernel.img\u306e\u5148\u982d\u304b\u3089\u30aa\u30d5\u30bb\u30c3\u30c8(0x8000)\u3092\u8db3\u3057\u305f\u4f4d\u7f6e\u306b\u3042\u308a\u307e\u3059\u3002\n\u30aa\u30d5\u30bb\u30c3\u30c8\u306e\u5024\u3092\u77e5\u308b\u65b9\u6cd5\u306f\u3001\u4ee5\u4e0b\u306e2\u901a\u308a\u3067\u3059\u3002\n\u3000\u30fbstart.elf\u3092\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\uff1a`$ arm-none-eabi-objdump -m arm -D start.elf`\n\u3000\u30fblinux-rpi-4.1.y/arch/arm/kernel/vmlinux.lds\u306e\u4e2d\u8eab\u3092\u8aad\u3080\n\nENTRY(stext)\u3092\u5b9f\u884c\u3057\u305f\u76f4\u5f8c\u306eCPU\u306e\u72b6\u614b\u306f\u3001\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n>MMU     = OFF\n>D-cache = OFF\n>I-cache = Don't care\n>r0      = 0\n>r1      = machine number\n>r2      = atargs or DTB pointer\n\n[MMU(\u30e1\u30e2\u30ea\u7ba1\u7406\u30e6\u30cb\u30c3\u30c8)](https://ja.wikipedia.org/wiki/%E3%83%A1%E3%83%A2%E3%83%AA%E7%AE%A1%E7%90%86%E3%83%A6%E3%83%8B%E3%83%83%E3%83%88)\u306fOFF\u3001\nD-Cache(\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5)\u3082OFF\u3001\nI-cache(\u547d\u4ee4\u30ad\u30e3\u30c3\u30b7\u30e5)\u306fON/OFF\u3069\u3061\u3089\u3067\u3082\u554f\u984c\u304c\u3042\u308a\u307e\u305b\u3093\u3002\nr0\u306f0(ARM CPU\u306er0\u306f\u5f15\u6570\u6e21\u3057\u3067\u306f\u306a\u304f\u3001\u8fd4\u308a\u5024\u3092\u6e21\u3059\u6642\u306b\u4f7f\u7528\u3055\u308c\u308b\u305f\u3081)\u3001\nr1\u306flinux-rpi-4.1.y/arch/arm/tools/mach-types\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30dc\u30fc\u30c9\u56fa\u6709\u3092\u683c\u7d0d\u3057\u3001\nr2\u306fatags\u69cb\u9020\u4f53\u304bDTB(Device Tree Blob)\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nr0~r2\u306b\u5024\u3092\u5165\u308c\u305f\u306e\u306f\u3001Bootloader\u3067\u3059\u3002\natags\u69cb\u9020\u4f53\u3001DTB(Device Tree)\u306f\u3001\u30dc\u30fc\u30c9\u56fa\u6709\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u60c5\u5831\u3092\u8a18\u8ff0\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\u524d\u8005\u306fKernel\u5185(arch/arm/mach-*/)\u306b\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001\n\u5f8c\u8005\u306fKernel\u5916(Device Tree)\u306b\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u4e00\u822c\u7684\u306b\u3001ARM\u74b0\u5883(Raspberry Pi)\u3067\u306fDTB\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\n##ENTRY(stext)\u3067\u306e\u51e6\u7406(CPU ID\u306e\u53d6\u5f97\u307e\u3067)\n\u4ee5\u4e0b\u306b\u6982\u7565\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```linux-rpi-4.1.y/arch/arm/kernel/head.S\nENTRY(stext)\n ARM_BE8(setend\tbe )\t\t\t@ ensure we are in BE8 mode\n\n THUMB(\tadr\tr9, BSYM(1f)\t)\t@ Kernel is always entered in ARM.\n THUMB(\tbx\tr9\t\t)\t@ If this is a Thumb-2 kernel,\n THUMB(\t.thumb\t\t\t)\t@ switch to Thumb now.\n THUMB(1:\t\t\t)\n\n#ifdef CONFIG_ARM_VIRT_EXT\n\tbl\t__hyp_stub_install\n#endif\n\t@ ensure svc mode and all interrupts masked\n\tsafe_svcmode_maskall r9\n\n\tmrc\tp15, 0, r9, c0, c0\t\t@ get processor id\n\tbl\t__lookup_processor_type\t\t@ r5=procinfo r9=cpuid\n\tmovs\tr10, r5\t\t\t\t@ invalid processor (r5=0)?\n THUMB( it\teq )\t\t@ force fixup-able long branch encoding\n\tbeq\t__error_p\t\t\t@ yes, error 'p'\n```\n\n\u30001\uff09CPU\u3092[\u30d3\u30c3\u30b0\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u5f62\u5f0f](https://ja.wikipedia.org/wiki/%E3%82%A8%E3%83%B3%E3%83%87%E3%82%A3%E3%82%A2%E3%83%B3)\u306b\u5909\u66f4\n\u30002\uff09CPU\u306e\u52d5\u4f5c\u30e2\u30fc\u30c9\u3092ARM(32bit\u547d\u4ee4\u30e2\u30fc\u30c9)\u306b\u5909\u66f4\n\u30003\uff09CPU\u3092[\u30b9\u30fc\u30d1\u30d0\u30a4\u30b6\u30e2\u30fc\u30c9](http://yougo.ascii.jp/caltar/%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E3%83%90%E3%82%A4%E3%82%B6%E3%83%BC%E3%83%A2%E3%83%BC%E3%83%89)\u306b\u5909\u66f4\n\u30004\uff09\u5168\u3066\u306e\u5272\u308a\u8fbc\u307f\u3092\u30de\u30b9\u30af\n\u30005\uff09[c0(\u30d7\u30ed\u30bb\u30c3\u30b5\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u542b\u3080\u30ec\u30b8\u30b9\u30bf)](http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0363fj/Bgbceeed.html)\u304b\u3089CPU ID\u3092r9\u306b\u683c\u7d0d\n\u30006\uff09__lookup_processor_type\u306b\u3088\u308a\u3001r5\u306bproc_info_list\u69cb\u9020\u4f53\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u683c\u7d0d\n\n```linux-rpi-4.1.y/arch/arm/kernel/head-common.S\n__lookup_processor_type:\n\tadr\tr3, __lookup_processor_type_data\n\tldmia\tr3, {r4 - r6}\n\tsub\tr3, r3, r4\t\t\t@ get offset between virt&phys\n\tadd\tr5, r5, r3\t\t\t@ convert virt addresses to\n\tadd\tr6, r6, r3\t\t\t@ physical address space\n1:\tldmia\tr5, {r3, r4}\t\t\t@ value, mask\n\tand\tr4, r4, r9\t\t\t@ mask wanted bits\n\tteq\tr3, r4\n\tbeq\t2f\n\tadd\tr5, r5, #PROC_INFO_SZ\t\t@ sizeof(proc_info_list)\n\tcmp\tr5, r6\n\tblo\t1b\n\tmov\tr5, #0\t\t\t\t@ unknown processor\n2:\tret\tlr\nENDPROC(__lookup_processor_type)\n```\n\n\u307e\u305a\u3001proc_info_list\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092CPU ID(r9)\u3092\u7528\u3044\u3066\u5165\u624b\u3057\u307e\u3059\u3002\nr4\u306b\u306f__proc_info_begin(\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9)\u3001r6\u306b\u306f__proc_info_end(\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9)\u304c\u683c\u7d0d\u3055\u308c\u3001\n\u3053\u308c\u3089\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u7269\u7406\u30a2\u30c9\u30ec\u30b9\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n(\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306f\u3001MMU\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081)\n\n\u6b21\u306b\u3001ldmia\u547d\u4ee4\u3067r3\u306bCPU ID\u3092\u683c\u7d0d\u3057\u3001r4\u306bCPU MASK\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\nr4(__proc_info_begin)\u3068r9(CPU ID)\u306e\u8ad6\u7406\u7a4d\u3092\u3068\u308a\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u3001r3(CPU ID)\u3068r4(__proc_info_begin\u3068CPU ID\u306e\u8ad6\u7406\u7a4d)\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\u3001\u30e9\u30d9\u30eb2:\u306b\u79fb\u52d5\u3057\u3001ret\u547d\u4ee4\u306b\u3088\u308a\u3001\u547c\u3073\u51fa\u3057\u5143\u306b\u30ea\u30bf\u30fc\u30f3\u3057\u307e\u3059\u3002\n\u5024\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u30dd\u30a4\u30f3\u30bf\u3092\u30aa\u30d5\u30bb\u30c3\u30c8\u5206(PROC_INFO_SZ)\u79fb\u52d5\u3055\u305b\u3001\n\u6b21\u306eproc_info_list\u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u3092\u8abf\u3079\u307e\u3059(\u30e9\u30d9\u30eb1\uff1a\u306b\u98db\u3073\u307e\u3059)\u3002\n\u3053\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u306f\u3001linux-rpi-4.1.y/arch/arm/kernel/asm-offsets.c\u5185\u3067\u3001\n`DEFINE(PROC_INFO_SZ, sizeof(struct proc_info_list));`\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n##proc_info_list\u69cb\u9020\u4f53\u306b\u3064\u3044\u3066\n\u4ee5\u4e0b\u306e\u69cb\u9020\u4f53\u306f\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b(C\u8a00\u8a9e\u3067\u306f\u306a\u3044)\u3002\n\n```linux-rpi-4.1.y/arch/arm/include/asm/procinfo.h\nstruct proc_info_list {\n\tunsigned int\t\tcpu_val;\n\tunsigned int\t\tcpu_mask;\n\tunsigned long\t\t__cpu_mm_mmu_flags;\t/* used by head.S */\n\tunsigned long\t\t__cpu_io_mmu_flags;\t/* used by head.S */\n\tunsigned long\t\t__cpu_flush;\t\t/* used by head.S */\n\tconst char\t\t*arch_name;\n\tconst char\t\t*elf_name;\n\tunsigned int\t\telf_hwcap;\n\tconst char\t\t*cpu_name;\n\tstruct processor\t*proc;\n\tstruct cpu_tlb_fns\t*tlb;\n\tstruct cpu_user_fns\t*user;\n\tstruct cpu_cache_fns\t*cache;\n};\n```\n\n\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059(\u5f8c\u65e5\u8ffd\u8a18\u3057\u307e\u3059)\n\n```linux-rpi-4.1.y/arch/arm/mm/proc-v7.S\n\t/*\n\t * Standard v7 proc info content\n\t */\n.macro __v7_proc name, initfunc, mm_mmuflags = 0, io_mmuflags = 0, hwcaps = 0, proc_fns = v7_processor_functions\n\tALT_SMP(.long\tPMD_TYPE_SECT | PMD_SECT_AP_WRITE | PMD_SECT_AP_READ | \\\n\t\t\tPMD_SECT_AF | PMD_FLAGS_SMP | \\mm_mmuflags)\n\tALT_UP(.long\tPMD_TYPE_SECT | PMD_SECT_AP_WRITE | PMD_SECT_AP_READ | \\\n\t\t\tPMD_SECT_AF | PMD_FLAGS_UP | \\mm_mmuflags)\n\t.long\tPMD_TYPE_SECT | PMD_SECT_AP_WRITE | \\\n\t\tPMD_SECT_AP_READ | PMD_SECT_AF | \\io_mmuflags\n\tinitfn\t\\initfunc, \\name\n\t.long\tcpu_arch_name\n\t.long\tcpu_elf_name\n\t.long\tHWCAP_SWP | HWCAP_HALF | HWCAP_THUMB | HWCAP_FAST_MULT | \\\n\t\tHWCAP_EDSP | HWCAP_TLS | \\hwcaps\n\t.long\tcpu_v7_name\n\t.long\t\\proc_fns\n\t.long\tv7wbi_tlb_fns\n\t.long\tv6_user_fns\n\t.long\tv7_cache_fns\n.endm\n```\n\n##\u6b21\u56de\n[\u300cRaspberry Pi2(Linux Kernel)\u306e\u30d6\u30fc\u30c8\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u8aad\u3080(\u305d\u306e3)\u300d](http://qiita.com/Mogura1215/items/0f29cf4361dce85bfe0f)\nstart_kernel\u306b\u79fb\u884c\u3059\u308b\u307e\u3067(\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4f9d\u5b58\u90e8\u306e\u6700\u5f8c\u307e\u3067)\u306e\u8aac\u660e\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n##\u53c2\u8003\u30b5\u30a4\u30c8\n[Device Tree \u5165\u9580](http://masahir0y.blogspot.jp/2014/05/device-tree.html)\n[Device Tree \u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081](http://qiita.com/koara-local/items/ed99a7b96a0ca252fc4e)\n\n\n\n\n\n"}