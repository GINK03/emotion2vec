{"context": " More than 1 year has passed since last update.\u4e00\u4eba(+\u03b1)\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc6\u65e5\u76ee\u3002...1\u65e5\u7a7a\u3044\u305f\u5206\u306f\u82f1\u8a33\u3067\u57cb\u3081\u308b\u4e88\u5b9a\u3002\nKotlin+RoboVM\u3067\u6311\u3080\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u958b\u767a\u8a66\u884c\u932f\u8aa4\u3002\n\u672c\u65e5\u306f\u3001\u3088\u3046\u3084\u304f\u306bRoboVM\u4e0a\u306eKotlin\u3067\u3001iOS\u306eUI\u3092\u66f8\u304f\u3002\n\u5b9f\u884c\u7d50\u679c:\n\n\n1) \u65b9\u91dd\n\nKotlin\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3001\u5f53\u5ea7\u30011.0.0-beta-2423\u3067\u3002\n1.0\u3092\u524d\u306b\u3001Kotlin Stdlib\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u76db\u3093\u306b\u4e0a\u304c\u3063\u3066\u3044\u308b\u300211/25\u306brobovm on kotlin\u30b3\u30f3\u30c6\u30b9\u30c8\u304c\u59cb\u307e\u3063\u305f\u5f53\u6642\u306e1.0.0-beta-2423\u3000beta\u30d0\u30fc\u30b8\u30e7\u30f3\u304b\u3089\u3059\u3067\u306b\u3001\u7d042\u9031\u9593\u3067\u4e09\u56de\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u3066\u3044\u308b\u3002\n\n//mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib\n1.0.0-beta-3595 beta    (Dec, 2015)\n1.0.0-beta-3594 beta    (Dec, 2015)\n1.0.0-beta-3593 beta    (Dec, 2015)\n\n\n\u305d\u306e\u305f\u3081\u304b\u3001RoboVM\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7acb\u3061\u4e0a\u3052\u305f\u969b\u306b\u3001\u53f3\u5074\u306bKotlin\u3092\u8a2d\u5b9a\u3059\u308b\u3088\u3046\u306b\u6ce8\u610f\u304c\u51fa\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u304c\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0b\u624b\u306b\u4e0a\u3052\u308b\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f9d\u5b58\u304c\u89e3\u6c7a\u3067\u304d\u305a\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u3089\u306a\u304f\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\u3002\nKotlin\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3001\u5f53\u5ea7\u30011.0.0-beta-2423\u3067\u3044\u304f\u3053\u3068\u306b\u3057\u305f\u3002\n\nXCode\u306f\u3044\u3063\u305f\u3093\u5fd8\u308c\u308b\u3002\nXCode\u306e\u5b66\u7fd2\u30b3\u30b9\u30c8\u3092\u5272\u304f\u6642\u9593\u304c\u306a\u3044\u305f\u3081\u3001iOS\u30a2\u30d7\u30ea\u306e\u30b3\u30fc\u30c9\u3092Kotlin\u3067\u66f8\u304f\u3053\u3068\u306b\u6163\u308c\u308b\u76ee\u7684\u3082\u517c\u306d\u3066\u3001\u3059\u3079\u3066Kotlin\u3067\u66f8\u304f\u3002\n\u5fc5\u8981\u306a\u6e96\u5099\u4f5c\u696d\u306f\u3001Main.kt\u306b\u304a\u3044\u3066\u3001didFinishLaunching\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067window\u3092\u81ea\u3089\u521d\u671f\u5316\u3059\u308b\u3053\u3068:\n\nMain.kt\nimport org.robovm.apple.foundation.NSAutoreleasePool\nimport org.robovm.apple.uikit.* // UIApplication,UIApplicationDelegateAdapter, UIApplicationLaunchOptions etc.\n\n\nclass Main : UIApplicationDelegateAdapter() {\n\n    override fun didFinishLaunching(application: UIApplication?, launchOptions: UIApplicationLaunchOptions?): Boolean {\n\n        // window\u3092\u81ea\u3089\u521d\u671f\u5316\n        window.setRootViewController(MyViewController())\n        window.setBackgroundColor(UIColor.blue())\n        window.makeKeyAndVisible()\n        addStrongRef(window)\n        return true\n    }\n\n    companion object {\n        @JvmStatic fun main(args: Array<String>) {\n            val pool = NSAutoreleasePool()\n            UIApplication.main<UIApplication, Main>(args, null, Main::class.java)\n            pool.release()\n        }\n    }\n}\n\n\n\n2) class MyViewController\u3092\u3054\u308a\u3054\u308a\u66f8\u304f\u3002\nkotlin\u30b3\u30fc\u30c9\u3067ViewController\u3092\u5b8c\u7d50\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001\u304a\u304a\u307e\u304b\u306b\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u8e0f\u3081\u3070\u826f\u3044(\u7528\u8a9e\u306f\u9069\u5f53)\u3002\n\n\u2460 UI\u90e8\u54c1\u306e\u751f\u6210\u30ed\u30b8\u30c3\u30af\u3092\u5b9a\u7fa9\n\u2461  UI\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210 \n\u2462\u3000UI\u8981\u7d20\u3092\u753b\u9762\u306b\u914d\u7f6e\n\n\u3084\u3063\u3064\u3051\u611f\u6e80\u8f09\u3060\u304c\u3001\u3001\u3068\u308a\u3042\u3048\u305a\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b:\n\nMyViewController.kt\nimport org.robovm.apple.uikit.* // UILabel,UIViewController etc.\nimport org.robovm.apple.coregraphics.CGRect\nimport org.robovm.apple.uikit.UIControl\nimport org.robovm.apple.uikit.UIControl.OnTouchUpInsideListener\n\nclass MyViewController : UIViewController() {\n\n    private val counterStore = CounterStore()\n\n//\u2460 UI\u90e8\u54c1\u306e\u751f\u6210\u30eb\u30fc\u30c1\u30f3\u5b9a\u7fa9\n    // 1-1:\u30e9\u30d9\u30eb\u751f\u6210\n\n    fun genLabel (horizon:Int, str:String) : UILabel{\n        val lbl = UILabel(CGRect(0.0, 10.0+horizon, 300.0, 40.0))\n        lbl.setText(str)\n        lbl.setTextColor(UIColor.white())\n        lbl.setTextAlignment(NSTextAlignment.Center)\n        return lbl\n    }\n\n    // 1-2:TextField + Button\u3092\u751f\u6210\n    data class TfWithBtn (val field : UITextField, val button : UIButton)\n\n    fun genTfWithBtn (horizon:Int, fieldStr:String, buttonStr:String) : TfWithBtn {\n\n        val cg1 = CGRect(10.0, 10.0+horizon, 180.0, 48.0)\n        val cg2 = CGRect(200.0, 20.0+horizon, 100.0, 38.0)\n\n        val textField = UITextField(cg1)\n        textField.setContentVerticalAlignment(UIControlContentVerticalAlignment.Center)\n        textField.setBorderStyle(UITextBorderStyle.RoundedRect)\n        textField.setClearsOnBeginEditing(true)\n        textField.text = fieldStr\n\n        val button  = UIButton(cg2)\n        title = buttonStr+\"\u8a2d\u5b9a\"\n        button.setTitle(title, UIControlState.Normal)\n        button.setTitleColor(UIColor.black(), UIControlState.Normal)\n        button.setBackgroundColor(UIColor.cyan())\n        button.layer.cornerRadius = 10.0        // \u89d2\u4e38\u30dc\u30bf\u30f3\n        button.layer.borderWidth = 1.0         // \u30dc\u30fc\u30c0\u30fc\u306e\u7dda\u306e\u592a\u3055\n\n        button.addOnTouchUpInsideListener(object:OnTouchUpInsideListener {\n            override fun onTouchUpInside(c:UIControl, e:UIEvent) { onClicked(textField) }\n        })\n\n        return TfWithBtn(textField,button)\n    }\n\n\n    fun setTfWithBtn (t:TfWithBtn) {\n        getView().addSubview(t.field)\n        getView().addSubview(t.button)\n    }\n\n    //1-3 \u632f\u308b\u821e\u3044\u3092\u5b9a\u7fa9\n    private fun onClicked(textField:UITextField) {\n\n        var name = textField?.getText() ?: \"\u306a\u3057\"\n        labels[0]!!.text =  \"${counterStore.get()}\u56de\u76ee\"\n        labels[1]!!.text =  \"\u5165\u529b : ${name} \u3067\u3059\u3002\"\n    }\n\n// \u2461  UI\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210(\u4eca\u56de\u306f\u914d\u5217\u3067\u6301\u3064)\n    val labels = arrayOf(\n            genLabel( 0, \"\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u5165\u529b\u30c6\u30b9\u30c8\"),\n            genLabel( 30, \"\u4ee5\u4e0b\u306e\u6587\u5b57\u3092\u5165\u529b\")\n    )\n    val TfBtns = arrayOf(\n            genTfWithBtn(120, \"Kotlin\",\"\u8a00\u8a9e\"),\n            genTfWithBtn(180, \"iOS\",\"\u74b0\u5883\"),\n            genTfWithBtn(240, \"\u304a\u8a66\u3057\",\"\u4ed8\u8a18\")\n    )\n\n    override fun viewDidLoad() {\n//  \u2462UI\u8981\u7d20\u3092\u753b\u9762\u306b\u914d\u7f6e\n        labels.forEach { t ->\n            getView().addSubview(t)\n        }\n        TfBtns.forEach{ t ->\n            setTfWithBtn(t)\n        }\n    }\n\n\n}\n\n\n\nkotlin\u7684\u306a\u3068\u3053\u308d\u306f\u3001data class\u3092\u4f7f\u3063\u3066\u3044\u308b\u3053\u3068\u304f\u3089\u3044\u3002\n\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306e\u898b\u901a\u3057\u306f\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3002\n...\u3069\u306a\u305f\u304b\u3001Swift\u306e\u3044\u3051\u3066\u308bUI\u30e9\u30a4\u30d6\u30e9\u30ea\u3092kotlin\u3067\u4f7f\u3046\u3053\u3068\u306b\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u6b32\u3057\u3044\u3002\n\u306a\u304a\u3001\u5171\u901a\u30ed\u30b8\u30c3\u30af\u306e\u3068\u3053\u308d\u3082\u82e5\u5e72\u66f8\u304d\u63db\u3048\u3066\u3044\u308b:\n\nCounterStore.kt\nclass CounterStore {\n    private var count: Int = 0\n\n    fun add(num: Int) {\n        count += num\n    }\n\n    fun get(): Int {\n        count += 1\n        return count\n    }\n}\n\n\n\n3) \u5b9f\u884c\n\u5b9f\u884c\u3057\u305f\u3044\u74b0\u5883\u3092\u9078\u3093\u3067\u5b9f\u884c\u3059\u308b\u3002\n\n\u30b3\u30f3\u30d1\u30a4\u30eb&\u30d3\u30eb\u30c9\u306f\u7d50\u69cb\u9045\u3044(\u74b0\u5883:MacBookAir)\u304c\u3057\u3070\u3089\u304f\u5f85\u3063\u3066\u3044\u308b\u3068\u3001\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u304c\u7acb\u3061\u4e0a\u304c\u308b\u3002\n\n4)\u6b21\u56de\n\u5171\u901a\u30ed\u30b8\u30c3\u30af\u306e\u3068\u3053\u308d\u306b\u3001okhttp\u7b49\u3092\u4f7f\u3063\u305f\u901a\u4fe1\u3092\u66f8\u304f\u3002\n\u4e00\u4eba(+\u03b1)\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc6\u65e5\u76ee\u3002...1\u65e5\u7a7a\u3044\u305f\u5206\u306f\u82f1\u8a33\u3067\u57cb\u3081\u308b\u4e88\u5b9a\u3002\nKotlin+RoboVM\u3067\u6311\u3080\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u958b\u767a\u8a66\u884c\u932f\u8aa4\u3002\n\n\u672c\u65e5\u306f\u3001\u3088\u3046\u3084\u304f\u306bRoboVM\u4e0a\u306eKotlin\u3067\u3001iOS\u306eUI\u3092\u66f8\u304f\u3002\n\n\u5b9f\u884c\u7d50\u679c:\n![991.gif](https://qiita-image-store.s3.amazonaws.com/0/16455/985899c7-5629-cf94-5884-deb3e54ef515.gif)\n\n\n#1) \u65b9\u91dd\n##Kotlin\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3001\u5f53\u5ea7\u30011.0.0-beta-2423\u3067\u3002\n1.0\u3092\u524d\u306b\u3001Kotlin Stdlib\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u76db\u3093\u306b\u4e0a\u304c\u3063\u3066\u3044\u308b\u300211/25\u306brobovm on kotlin\u30b3\u30f3\u30c6\u30b9\u30c8\u304c\u59cb\u307e\u3063\u305f\u5f53\u6642\u306e1.0.0-beta-2423\u3000beta\u30d0\u30fc\u30b8\u30e7\u30f3\u304b\u3089\u3059\u3067\u306b\u3001\u7d042\u9031\u9593\u3067\u4e09\u56de\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u3066\u3044\u308b\u3002\n\n```http://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib\n1.0.0-beta-3595\tbeta\t(Dec, 2015)\n1.0.0-beta-3594\tbeta\t(Dec, 2015)\n1.0.0-beta-3593\tbeta\t(Dec, 2015)\n```\n\u305d\u306e\u305f\u3081\u304b\u3001RoboVM\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7acb\u3061\u4e0a\u3052\u305f\u969b\u306b\u3001\u53f3\u5074\u306bKotlin\u3092\u8a2d\u5b9a\u3059\u308b\u3088\u3046\u306b\u6ce8\u610f\u304c\u51fa\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-05 22.56.54.png](https://qiita-image-store.s3.amazonaws.com/0/16455/c1f1ac03-6c97-960e-d628-4c4115ef9e90.png)\n\u304c\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0b\u624b\u306b\u4e0a\u3052\u308b\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f9d\u5b58\u304c\u89e3\u6c7a\u3067\u304d\u305a\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u3089\u306a\u304f\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\u3002\nKotlin\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3001\u5f53\u5ea7\u30011.0.0-beta-2423\u3067\u3044\u304f\u3053\u3068\u306b\u3057\u305f\u3002\n\n## XCode\u306f\u3044\u3063\u305f\u3093\u5fd8\u308c\u308b\u3002\nXCode\u306e\u5b66\u7fd2\u30b3\u30b9\u30c8\u3092\u5272\u304f\u6642\u9593\u304c\u306a\u3044\u305f\u3081\u3001iOS\u30a2\u30d7\u30ea\u306e\u30b3\u30fc\u30c9\u3092Kotlin\u3067\u66f8\u304f\u3053\u3068\u306b\u6163\u308c\u308b\u76ee\u7684\u3082\u517c\u306d\u3066\u3001\u3059\u3079\u3066Kotlin\u3067\u66f8\u304f\u3002\n\u5fc5\u8981\u306a\u6e96\u5099\u4f5c\u696d\u306f\u3001Main.kt\u306b\u304a\u3044\u3066\u3001didFinishLaunching\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067window\u3092\u81ea\u3089\u521d\u671f\u5316\u3059\u308b\u3053\u3068:\n\n```Main.kt\nimport org.robovm.apple.foundation.NSAutoreleasePool\nimport org.robovm.apple.uikit.* // UIApplication,UIApplicationDelegateAdapter, UIApplicationLaunchOptions etc.\n\n\nclass Main : UIApplicationDelegateAdapter() {\n\n    override fun didFinishLaunching(application: UIApplication?, launchOptions: UIApplicationLaunchOptions?): Boolean {\n\n        // window\u3092\u81ea\u3089\u521d\u671f\u5316\n        window.setRootViewController(MyViewController())\n        window.setBackgroundColor(UIColor.blue())\n        window.makeKeyAndVisible()\n        addStrongRef(window)\n        return true\n    }\n\n    companion object {\n        @JvmStatic fun main(args: Array<String>) {\n            val pool = NSAutoreleasePool()\n            UIApplication.main<UIApplication, Main>(args, null, Main::class.java)\n            pool.release()\n        }\n    }\n}\n```\n\n#2) class MyViewController\u3092\u3054\u308a\u3054\u308a\u66f8\u304f\u3002\n\nkotlin\u30b3\u30fc\u30c9\u3067ViewController\u3092\u5b8c\u7d50\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001\u304a\u304a\u307e\u304b\u306b\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u8e0f\u3081\u3070\u826f\u3044(\u7528\u8a9e\u306f\u9069\u5f53)\u3002\n>\u2460 UI\u90e8\u54c1\u306e\u751f\u6210\u30ed\u30b8\u30c3\u30af\u3092\u5b9a\u7fa9\n\u2461  UI\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210 \n\u2462\u3000UI\u8981\u7d20\u3092\u753b\u9762\u306b\u914d\u7f6e\n\n\u3084\u3063\u3064\u3051\u611f\u6e80\u8f09\u3060\u304c\u3001\u3001\u3068\u308a\u3042\u3048\u305a\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b:\n\n```MyViewController.kt\nimport org.robovm.apple.uikit.* // UILabel,UIViewController etc.\nimport org.robovm.apple.coregraphics.CGRect\nimport org.robovm.apple.uikit.UIControl\nimport org.robovm.apple.uikit.UIControl.OnTouchUpInsideListener\n\nclass MyViewController : UIViewController() {\n\n    private val counterStore = CounterStore()\n\n//\u2460 UI\u90e8\u54c1\u306e\u751f\u6210\u30eb\u30fc\u30c1\u30f3\u5b9a\u7fa9\n    // 1-1:\u30e9\u30d9\u30eb\u751f\u6210\n\n    fun genLabel (horizon:Int, str:String) : UILabel{\n        val lbl = UILabel(CGRect(0.0, 10.0+horizon, 300.0, 40.0))\n        lbl.setText(str)\n        lbl.setTextColor(UIColor.white())\n        lbl.setTextAlignment(NSTextAlignment.Center)\n        return lbl\n    }\n\n    // 1-2:TextField + Button\u3092\u751f\u6210\n    data class TfWithBtn (val field : UITextField, val button : UIButton)\n\n    fun genTfWithBtn (horizon:Int, fieldStr:String, buttonStr:String) : TfWithBtn {\n\n        val cg1 = CGRect(10.0, 10.0+horizon, 180.0, 48.0)\n        val cg2 = CGRect(200.0, 20.0+horizon, 100.0, 38.0)\n\n        val textField = UITextField(cg1)\n        textField.setContentVerticalAlignment(UIControlContentVerticalAlignment.Center)\n        textField.setBorderStyle(UITextBorderStyle.RoundedRect)\n        textField.setClearsOnBeginEditing(true)\n        textField.text = fieldStr\n\n        val button  = UIButton(cg2)\n        title = buttonStr+\"\u8a2d\u5b9a\"\n        button.setTitle(title, UIControlState.Normal)\n        button.setTitleColor(UIColor.black(), UIControlState.Normal)\n        button.setBackgroundColor(UIColor.cyan())\n        button.layer.cornerRadius = 10.0        // \u89d2\u4e38\u30dc\u30bf\u30f3\n        button.layer.borderWidth = 1.0         // \u30dc\u30fc\u30c0\u30fc\u306e\u7dda\u306e\u592a\u3055\n\n        button.addOnTouchUpInsideListener(object:OnTouchUpInsideListener {\n            override fun onTouchUpInside(c:UIControl, e:UIEvent) { onClicked(textField) }\n        })\n\n        return TfWithBtn(textField,button)\n    }\n\n\n    fun setTfWithBtn (t:TfWithBtn) {\n        getView().addSubview(t.field)\n        getView().addSubview(t.button)\n    }\n\n    //1-3 \u632f\u308b\u821e\u3044\u3092\u5b9a\u7fa9\n    private fun onClicked(textField:UITextField) {\n\n        var name = textField?.getText() ?: \"\u306a\u3057\"\n        labels[0]!!.text =  \"${counterStore.get()}\u56de\u76ee\"\n        labels[1]!!.text =  \"\u5165\u529b : ${name} \u3067\u3059\u3002\"\n    }\n\n// \u2461  UI\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210(\u4eca\u56de\u306f\u914d\u5217\u3067\u6301\u3064)\n    val labels = arrayOf(\n            genLabel( 0, \"\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u5165\u529b\u30c6\u30b9\u30c8\"),\n            genLabel( 30, \"\u4ee5\u4e0b\u306e\u6587\u5b57\u3092\u5165\u529b\")\n    )\n    val TfBtns = arrayOf(\n            genTfWithBtn(120, \"Kotlin\",\"\u8a00\u8a9e\"),\n            genTfWithBtn(180, \"iOS\",\"\u74b0\u5883\"),\n            genTfWithBtn(240, \"\u304a\u8a66\u3057\",\"\u4ed8\u8a18\")\n    )\n\n    override fun viewDidLoad() {\n//  \u2462UI\u8981\u7d20\u3092\u753b\u9762\u306b\u914d\u7f6e\n        labels.forEach { t ->\n            getView().addSubview(t)\n        }\n        TfBtns.forEach{ t ->\n            setTfWithBtn(t)\n        }\n    }\n\n\n}\n\n```\nkotlin\u7684\u306a\u3068\u3053\u308d\u306f\u3001data class\u3092\u4f7f\u3063\u3066\u3044\u308b\u3053\u3068\u304f\u3089\u3044\u3002\n\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306e\u898b\u901a\u3057\u306f\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3002\n...\u3069\u306a\u305f\u304b\u3001Swift\u306e\u3044\u3051\u3066\u308bUI\u30e9\u30a4\u30d6\u30e9\u30ea\u3092kotlin\u3067\u4f7f\u3046\u3053\u3068\u306b\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u6b32\u3057\u3044\u3002\n\n\u306a\u304a\u3001\u5171\u901a\u30ed\u30b8\u30c3\u30af\u306e\u3068\u3053\u308d\u3082\u82e5\u5e72\u66f8\u304d\u63db\u3048\u3066\u3044\u308b:\n\n```CounterStore.kt\nclass CounterStore {\n    private var count: Int = 0\n\n    fun add(num: Int) {\n        count += num\n    }\n\n    fun get(): Int {\n        count += 1\n        return count\n    }\n}\n```\n\n\n#3) \u5b9f\u884c\n\n\u5b9f\u884c\u3057\u305f\u3044\u74b0\u5883\u3092\u9078\u3093\u3067\u5b9f\u884c\u3059\u308b\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-05 23.04.05.png](https://qiita-image-store.s3.amazonaws.com/0/16455/8b3bf8e1-39ee-9e67-7763-e4569c1e21a8.png)\n\n\u30b3\u30f3\u30d1\u30a4\u30eb&\u30d3\u30eb\u30c9\u306f\u7d50\u69cb\u9045\u3044(\u74b0\u5883:MacBookAir)\u304c\u3057\u3070\u3089\u304f\u5f85\u3063\u3066\u3044\u308b\u3068\u3001\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u304c\u7acb\u3061\u4e0a\u304c\u308b\u3002\n\n\n#4)\u6b21\u56de\n\u5171\u901a\u30ed\u30b8\u30c3\u30af\u306e\u3068\u3053\u308d\u306b\u3001okhttp\u7b49\u3092\u4f7f\u3063\u305f\u901a\u4fe1\u3092\u66f8\u304f\u3002\n\n", "tags": ["RoboVM", "iOS", "Kotlin", "AndroidStudio"]}