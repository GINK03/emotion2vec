{"context": " More than 1 year has passed since last update.\n\n\u57fa\u672c\u306e\u304a\u3055\u3089\u3044\n\u307e\u305a\u306f\u57fa\u672c\u7684\u306a\u90e8\u5206\u306e\u78ba\u8a8d\u3067\u3059\u3002\n\uff11\uff0eCollectionViewSource\u3092\u7528\u610f\n\uff12\uff0eItemsControl\u3067ItemsSource\u306b\uff11\u3067\u7528\u610f\u3057\u305fCollectionViewSource\u3092\u30d0\u30a4\u30f3\u30c9\n\uff13\uff0e\u30b9\u30bf\u30a4\u30eb\u3067\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u30fc\u306e\u898b\u305f\u76ee\u3092\u5b9a\u7fa9\n\u5177\u4f53\u7684\u306b\u306f\n\uff11\uff0e\u30ea\u30bd\u30fc\u30b9\u306bCollectionViewSource\u3092\u5b9a\u7fa9\nPropertyGroupDescription\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u305f\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n<UserControl.Resources>\n    <CollectionViewSource x:Key=\"StaffCollectionKey\"\n                          Source=\"{Binding Staffs}\">\n        <CollectionViewSource.GroupDescriptions>\n            <PropertyGroupDescription PropertyName=\"Model.Department\" />\n        </CollectionViewSource.GroupDescriptions>\n    </CollectionViewSource>\n</UserControl.Resources>\n\n\uff12\uff0e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u30d0\u30a4\u30f3\u30c9\n<ItemsControl ItemsSource=\"{Binding Source={StaticResource StaffCollectionKey}}\">\n  (\u7565)\n</ItemsControl>\n\n\uff13\uff0e\u30d8\u30c3\u30c0\u30fc\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5b9a\u7fa9\n<ItemsControl.GroupStyle>\n    <GroupStyle>\n        <GroupStyle.HeaderTemplate>\n            <DataTemplate>\n                <Border Margin=\"1 0 1 4\"\n                        Background=\"DimGray\">\n                    <TextBlock Text=\"{Binding Name}\"\n                               Foreground=\"Snow\"/>\n                </Border>\n            </DataTemplate>\n        </GroupStyle.HeaderTemplate>\n    </GroupStyle>\n</ItemsControl.GroupStyle>\n\n\n\u4e0a\u8a18\uff13\u30b9\u30c6\u30c3\u30d7\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u8868\u793a\u304c\u3067\u304d\u307e\u3059\u3002\uff08WPF\u30b9\u30c6\u30ad\uff01\uff09\n\n\n\u672c\u984c\n\u7121\u4e8b\u306b\u30b0\u30eb\u30fc\u30d7\u5316\u8868\u793a\u3067\u304d\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3068\u304d\u306b\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u30fc\u3082\u540c\u6642\u306b\u79fb\u52d5\u3057\u3066\u3057\u307e\u3046\u6b20\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u2191\u300c1010 \u30b9\u30bf\u30c3\u30d5\uff13\u300d\u306e\u6240\u5c5e\u304c\u308f\u304b\u3089\u306a\u3044\u3001\u306e\u56f3\n\u4eca\u56de\u306f\u3053\u306e\u6b20\u70b9\u3092\u514b\u670d\u3059\u308b\u305f\u3081\u306b\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u6642\u306b\u5e38\u306b\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u5b9f\u88c5\u65b9\u6cd5\n\u57fa\u672c\u7684\u306b\u306f\u3053\u306e\u8a18\u4e8b\u3068\u540c\u3058\u3088\u3046\u306b\u3001Adorner\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u53c2\u7167\u5143\u3067\u306f\u6dfb\u4ed8\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u5b9f\u88c5\u3057\u3066\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306fBehavior\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\u307e\u305f\u3001ListBox\u306b\u3057\u304b\u5bfe\u5fdc\u3067\u304d\u306a\u3044\uff08ItemsControl\u5185\u306bScrollViewer\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u524d\u63d0\u306b\u306a\u3063\u3066\u3044\u308b\uff09\u305f\u3081\u3001ListBox\u4ee5\u5916\u306eItemsControl\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n    /// <summary>\n    /// GroupItem\u306e\u30d8\u30c3\u30c0\u3092\u56fa\u5b9a\u8868\u793a\u3059\u308bBehavior\n    /// </summary>\n    public class GroupHeaderFrozenBehavior : Behavior<ItemsControl>\n    {\n        private static readonly Dictionary<GroupItem, WeakReference<HeaderAdorner>> _CurrentGroupItem = new Dictionary<GroupItem, WeakReference<HeaderAdorner>>();\n\n        #region HeaderTemplate\u4f9d\u5b58\u95a2\u4fc2\u30d7\u30ed\u30d1\u30c6\u30a3\n        public DataTemplate HeaderTemplate\n        {\n            get { return (DataTemplate)GetValue(HeaderTemplateProperty); }\n            set { SetValue(HeaderTemplateProperty, value); }\n        }\n\n        // Using a DependencyProperty as the backing store for HeaderTemplate.  This enables animation, styling, binding, etc...\n        public static readonly DependencyProperty HeaderTemplateProperty =\n            DependencyProperty.Register(\"HeaderTemplate\", typeof(DataTemplate), typeof(GroupHeaderFrozenBehavior), new PropertyMetadata(null)); \n        #endregion\n\n\n        protected override void OnAttached()\n        {\n            base.OnAttached();\n\n            AssociatedObject.Loaded += AssociatedObject_Loaded;\n            AssociatedObject.Unloaded += AssociatedObject_Unloaded;\n        }\n\n        protected override void OnDetaching()\n        {\n            base.OnDetaching();\n\n            AssociatedObject.Loaded -= AssociatedObject_Loaded;\n            AssociatedObject.Unloaded -= AssociatedObject_Unloaded;\n        }\n\n        private void AssociatedObject_Loaded(object sender, RoutedEventArgs e)\n        {\n            SetScrollChangedEvent(true);\n        }\n\n        private void AssociatedObject_Unloaded(object sender, RoutedEventArgs e)\n        {\n            SetScrollChangedEvent(false);\n        }\n\n        private void SetScrollChangedEvent(bool add)\n        {\n            ScrollViewer scrollViewer;\n\n            if(AssociatedObject is ListBox)\n            {\n                // \u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u5185\u306eScrollViewer\u3092\u63a2\u3059\n                scrollViewer = AssociatedObject.FindChild<ScrollViewer>();\n            }\n            else\n            {\n                // \u89aa\u65b9\u5411\u306bScrollViewer\u3092\u63a2\u3059\n                scrollViewer = AssociatedObject.FindParent<ScrollViewer>();\n            }\n\n            if (scrollViewer != null)\n            {\n                if(add)\n                {\n                    scrollViewer.ScrollChanged += ScrollViewer_ScrollChanged;\n                }\n                else\n                {\n                    scrollViewer.ScrollChanged -= ScrollViewer_ScrollChanged;\n                }\n            }\n        }\n\n        private void ScrollViewer_ScrollChanged(object sender, ScrollChangedEventArgs e)\n        {\n            var scrollViewer = (ScrollViewer)sender;\n\n            // ScrollViewer\u306e\u63cf\u753b\u30b5\u30a4\u30ba\n            var scrollViewerRectangle = new Rect(new Point(0, 0), scrollViewer.RenderSize);\n\n            // ItemsControl\u306eGroupItem\n            foreach(var containerItem in AssociatedObject.ItemContainerGenerator.Items)\n            {\n                // GroupItem\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u53d6\u5f97\n                var groupItemContainer = AssociatedObject.ItemContainerGenerator.ContainerFromItem(containerItem) as GroupItem;\n                if(groupItemContainer==null)\n                {\n                    Debug.WriteLine(\"Failed: get groupItemContainer\");\n                    return;\n                }\n\n                // ScrollViewer\u3092\u57fa\u6e96\u3068\u3057\u305f\u63cf\u753b\u4f4d\u7f6e\u3092\u8a08\u7b97\n                var transform = groupItemContainer.TransformToAncestor(scrollViewer);\n                var groupItemRect = transform.TransformBounds(new Rect(new Point(0, 0), groupItemContainer.RenderSize));\n\n                // ScrollViewer\u3068GroupItem\u306e\u91cd\u306a\u308a\u3092\u78ba\u8a8d\n                var intersectRect = Rect.Intersect(scrollViewerRectangle, groupItemRect);\n\n                // \u30d8\u30c3\u30c0\u30fc\u56fa\u5b9a\u8868\u793a\u7528\u306eAdorner\u3092\u8868\u793a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3069\u3046\u304b\n                var needDisplayAdorner = true;\n\n                // ScrollViewer\u306e\u63cf\u753b\u30a8\u30ea\u30a2\u5185\u306bGroupItem\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\n                needDisplayAdorner &= intersectRect != Rect.Empty;\n\n                // \u304b\u3064\u3001GroupItem\u306e\u4e0a\u7aef\u304cScrollViewer\u306e\u4e0a\u7aef\u3088\u308a\u3082\u4e0a\u306b\u5b58\u5728\n                needDisplayAdorner &= groupItemRect.Top <= 0;\n\n                // GroupItem\u306eAdornerLayer\u3092\u53d6\u5f97\n                var adornerLayer = AdornerLayer.GetAdornerLayer(groupItemContainer);\n                if(adornerLayer==null)\n                {\n                    Debug.WriteLine(\"Failed: get adornerLayer of GroupItem\");\n                    return;\n                }\n\n                // Adorner\u306e\u8868\u793a\u304c\u5fc5\u8981\u306a\u5834\u5408\n                if(needDisplayAdorner)\n                {\n                    // \u3059\u3067\u306bAdorner\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u305d\u306e\u4f4d\u7f6e\u3092\u66f4\u65b0\u3059\u308b\u3060\u3051\n                    var headerAdorner = GetAdorner(groupItemContainer);\n                    if (headerAdorner != null)\n                    {\n                        headerAdorner.UpdateLocation(groupItemRect.Top);\n                        return;\n                    }\n\n                    // \u672a\u4f5c\u6210\u306e\u5834\u5408\u306f\u65b0\u898f\u306bAdorner\u3092\u4f5c\u6210\u3057\u3001Dictionary\u306b\u52a0\u3048\u308b\n                    var adorner = new HeaderAdorner(groupItemContainer)\n                    {\n                        DataContext = containerItem,\n                        HeaderTemplate = HeaderTemplate,\n                        Top = Math.Abs(groupItemRect.Top)\n                    };\n                    adornerLayer.Add(adorner);\n\n                    _CurrentGroupItem.Add(groupItemContainer, new WeakReference<HeaderAdorner>(adorner));\n                }\n                // Adorner\u306e\u8868\u793a\u304c\u4e0d\u8981\u306a\u5834\u5408\n                else\n                {\n                    // Adorner\u3092AdornerLayer\u3068Dictionary\u304b\u3089\u9664\u53bb\n                    var adorner = GetAdorner(groupItemContainer);\n                    if (adorner != null)\n                    {\n                        adornerLayer.Remove(adorner);\n                        _CurrentGroupItem.Remove(groupItemContainer);\n                    }\n                }\n            }\n\n        }\n\n\n        private HeaderAdorner GetAdorner(GroupItem container)\n        {\n            if (_CurrentGroupItem.ContainsKey(container))\n            {\n                HeaderAdorner adorner;\n                if (_CurrentGroupItem[container].TryGetTarget(out adorner))\n                {\n                    return adorner;\n                }\n            }\n\n            return null;\n        }\n    }\n\n\n\u5229\u7528\u3059\u308b\u3068\u304d\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306bItemsControl\u306bBehavior\u3092\u8a2d\u5b9a\uff06GroupItem\u306eHeaderTemplate\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u30fc\u306fDataTemplate\u3068\u3057\u3066\u30ea\u30bd\u30fc\u30b9\u5316\u3057\u3066\u304a\u304f\u3068\u7ba1\u7406\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n<UserControl x:Class=\"ControlsShowcase.Views.GroupItemTabView\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \n             xmlns:i=\"http://schemas.microsoft.com/expression/2010/interactivity\"\n             xmlns:ei=\"http://schemas.microsoft.com/expression/2010/interactions\"\n             xmlns:l=\"http://schemas.livet-mvvm.net/2011/wpf\"\n             xmlns:local=\"clr-namespace:ControlsShowcase.Views\"\n             xmlns:vm=\"clr-namespace:ControlsShowcase.ViewModels\"\n             xmlns:b=\"clr-namespace:ControlsShowcase.Behaviors\"\n             mc:Ignorable=\"d\" \n             Foreground=\"Black\"\n             d:DesignHeight=\"300\" d:DesignWidth=\"300\">\n\n    <UserControl.Resources>\n        <CollectionViewSource x:Key=\"StaffCollectionKey\"\n                              Source=\"{Binding Staffs}\">\n            <CollectionViewSource.GroupDescriptions>\n                <PropertyGroupDescription PropertyName=\"Model.Department\" />\n            </CollectionViewSource.GroupDescriptions>\n        </CollectionViewSource>\n\n        <DataTemplate x:Key=\"GroupItemHeaderTemplateKey\">\n            <Border Margin=\"2\"\n                    Padding=\"4 2\"\n                    Background=\"DimGray\">\n                <TextBlock Text=\"{Binding Name}\"\n                           Foreground=\"Snow\"/>\n            </Border>\n\n        </DataTemplate>\n    </UserControl.Resources>\n\n    <UserControl.DataContext>\n        <vm:GroupItemTabViewModel />\n    </UserControl.DataContext>\n\n    <Grid>\n        <ScrollViewer>\n            <ItemsControl ItemsSource=\"{Binding Source={StaticResource StaffCollectionKey}}\">\n                <i:Interaction.Behaviors>\n                    <b:GroupHeaderFrozenBehavior HeaderTemplate=\"{StaticResource GroupItemHeaderTemplateKey}\" />\n                </i:Interaction.Behaviors>\n\n                <ItemsControl.GroupStyle>\n                    <GroupStyle HeaderTemplate=\"{StaticResource GroupItemHeaderTemplateKey}\">\n                    </GroupStyle>\n                </ItemsControl.GroupStyle>\n\n                <ItemsControl.ItemTemplate>\n                    <DataTemplate>\n                        <Grid Margin=\"4 1\">\n                            <Grid.ColumnDefinitions>\n                                <ColumnDefinition Width=\"60\" />\n                                <ColumnDefinition />\n                            </Grid.ColumnDefinitions>\n\n                            <TextBlock Text=\"{Binding Model.Id}\" />\n\n                            <TextBlock Grid.Column=\"1\"\n                                       Text=\"{Binding Model.Name}\" />\n                        </Grid>\n                    </DataTemplate>\n                </ItemsControl.ItemTemplate>\n            </ItemsControl>\n        </ScrollViewer>\n\n    </Grid>\n</UserControl>\n\n\n\u3053\u308c\u3067\u3081\u3067\u305f\u304f\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u30fc\u306e\u8868\u793a\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u6642\u306b\u56fa\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff01\n\n\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\nhttp://blog.qarim.net/2013/08/16/wpf-persistent-group-headers-for-the-listbox-control/\n## \u57fa\u672c\u306e\u304a\u3055\u3089\u3044\n\n\u307e\u305a\u306f\u57fa\u672c\u7684\u306a\u90e8\u5206\u306e\u78ba\u8a8d\u3067\u3059\u3002\n\uff11\uff0eCollectionViewSource\u3092\u7528\u610f\n\uff12\uff0eItemsControl\u3067ItemsSource\u306b\uff11\u3067\u7528\u610f\u3057\u305fCollectionViewSource\u3092\u30d0\u30a4\u30f3\u30c9\n\uff13\uff0e\u30b9\u30bf\u30a4\u30eb\u3067\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u30fc\u306e\u898b\u305f\u76ee\u3092\u5b9a\u7fa9\n\n\u5177\u4f53\u7684\u306b\u306f\n\uff11\uff0e\u30ea\u30bd\u30fc\u30b9\u306bCollectionViewSource\u3092\u5b9a\u7fa9\nPropertyGroupDescription\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u305f\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```xml\n<UserControl.Resources>\n    <CollectionViewSource x:Key=\"StaffCollectionKey\"\n                          Source=\"{Binding Staffs}\">\n        <CollectionViewSource.GroupDescriptions>\n            <PropertyGroupDescription PropertyName=\"Model.Department\" />\n        </CollectionViewSource.GroupDescriptions>\n    </CollectionViewSource>\n</UserControl.Resources>\n```\n\n\uff12\uff0e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u30d0\u30a4\u30f3\u30c9\n\n```xml\n<ItemsControl ItemsSource=\"{Binding Source={StaticResource StaffCollectionKey}}\">\n  (\u7565)\n</ItemsControl>\n```\n\n\uff13\uff0e\u30d8\u30c3\u30c0\u30fc\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5b9a\u7fa9\n\n```xml\n<ItemsControl.GroupStyle>\n    <GroupStyle>\n        <GroupStyle.HeaderTemplate>\n            <DataTemplate>\n                <Border Margin=\"1 0 1 4\"\n                        Background=\"DimGray\">\n                    <TextBlock Text=\"{Binding Name}\"\n                               Foreground=\"Snow\"/>\n                </Border>\n            </DataTemplate>\n        </GroupStyle.HeaderTemplate>\n    </GroupStyle>\n</ItemsControl.GroupStyle>\n\n```\n\n\n\u4e0a\u8a18\uff13\u30b9\u30c6\u30c3\u30d7\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u8868\u793a\u304c\u3067\u304d\u307e\u3059\u3002\uff08WPF\u30b9\u30c6\u30ad\uff01\uff09\n\n![\u30ad\u30e3\u30d7\u30c1\u30e33.PNG](https://qiita-image-store.s3.amazonaws.com/0/77732/38226c9a-1e3a-b870-fe60-5b6803d175b4.png)\n\n\n## \u672c\u984c\n\n\u7121\u4e8b\u306b\u30b0\u30eb\u30fc\u30d7\u5316\u8868\u793a\u3067\u304d\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3068\u304d\u306b\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u30fc\u3082\u540c\u6642\u306b\u79fb\u52d5\u3057\u3066\u3057\u307e\u3046\u6b20\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n![\u30ad\u30e3\u30d7\u30c1\u30e34.PNG](https://qiita-image-store.s3.amazonaws.com/0/77732/7bce6841-5883-5882-d40a-9ac2688d4f03.png)\n\u2191\u300c1010 \u30b9\u30bf\u30c3\u30d5\uff13\u300d\u306e\u6240\u5c5e\u304c\u308f\u304b\u3089\u306a\u3044\u3001\u306e\u56f3\n\n\u4eca\u56de\u306f\u3053\u306e\u6b20\u70b9\u3092\u514b\u670d\u3059\u308b\u305f\u3081\u306b\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u6642\u306b\u5e38\u306b\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u3044\u307e\u3059\u3002\n\n\n## \u5b9f\u88c5\u65b9\u6cd5\n\n\u57fa\u672c\u7684\u306b\u306f[\u3053\u306e\u8a18\u4e8b](http://blog.qarim.net/2013/08/16/wpf-persistent-group-headers-for-the-listbox-control/)\u3068\u540c\u3058\u3088\u3046\u306b\u3001Adorner\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u53c2\u7167\u5143\u3067\u306f\u6dfb\u4ed8\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u5b9f\u88c5\u3057\u3066\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306fBehavior\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\u307e\u305f\u3001ListBox\u306b\u3057\u304b\u5bfe\u5fdc\u3067\u304d\u306a\u3044\uff08ItemsControl\u5185\u306bScrollViewer\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u524d\u63d0\u306b\u306a\u3063\u3066\u3044\u308b\uff09\u305f\u3081\u3001ListBox\u4ee5\u5916\u306eItemsControl\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n\n```csharp\n\n    /// <summary>\n    /// GroupItem\u306e\u30d8\u30c3\u30c0\u3092\u56fa\u5b9a\u8868\u793a\u3059\u308bBehavior\n    /// </summary>\n    public class GroupHeaderFrozenBehavior : Behavior<ItemsControl>\n    {\n        private static readonly Dictionary<GroupItem, WeakReference<HeaderAdorner>> _CurrentGroupItem = new Dictionary<GroupItem, WeakReference<HeaderAdorner>>();\n\n        #region HeaderTemplate\u4f9d\u5b58\u95a2\u4fc2\u30d7\u30ed\u30d1\u30c6\u30a3\n        public DataTemplate HeaderTemplate\n        {\n            get { return (DataTemplate)GetValue(HeaderTemplateProperty); }\n            set { SetValue(HeaderTemplateProperty, value); }\n        }\n\n        // Using a DependencyProperty as the backing store for HeaderTemplate.  This enables animation, styling, binding, etc...\n        public static readonly DependencyProperty HeaderTemplateProperty =\n            DependencyProperty.Register(\"HeaderTemplate\", typeof(DataTemplate), typeof(GroupHeaderFrozenBehavior), new PropertyMetadata(null)); \n        #endregion\n\n\n        protected override void OnAttached()\n        {\n            base.OnAttached();\n\n            AssociatedObject.Loaded += AssociatedObject_Loaded;\n            AssociatedObject.Unloaded += AssociatedObject_Unloaded;\n        }\n\n        protected override void OnDetaching()\n        {\n            base.OnDetaching();\n\n            AssociatedObject.Loaded -= AssociatedObject_Loaded;\n            AssociatedObject.Unloaded -= AssociatedObject_Unloaded;\n        }\n\n        private void AssociatedObject_Loaded(object sender, RoutedEventArgs e)\n        {\n            SetScrollChangedEvent(true);\n        }\n\n        private void AssociatedObject_Unloaded(object sender, RoutedEventArgs e)\n        {\n            SetScrollChangedEvent(false);\n        }\n\n        private void SetScrollChangedEvent(bool add)\n        {\n            ScrollViewer scrollViewer;\n\n            if(AssociatedObject is ListBox)\n            {\n                // \u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u5185\u306eScrollViewer\u3092\u63a2\u3059\n                scrollViewer = AssociatedObject.FindChild<ScrollViewer>();\n            }\n            else\n            {\n                // \u89aa\u65b9\u5411\u306bScrollViewer\u3092\u63a2\u3059\n                scrollViewer = AssociatedObject.FindParent<ScrollViewer>();\n            }\n\n            if (scrollViewer != null)\n            {\n                if(add)\n                {\n                    scrollViewer.ScrollChanged += ScrollViewer_ScrollChanged;\n                }\n                else\n                {\n                    scrollViewer.ScrollChanged -= ScrollViewer_ScrollChanged;\n                }\n            }\n        }\n\n        private void ScrollViewer_ScrollChanged(object sender, ScrollChangedEventArgs e)\n        {\n            var scrollViewer = (ScrollViewer)sender;\n\n            // ScrollViewer\u306e\u63cf\u753b\u30b5\u30a4\u30ba\n            var scrollViewerRectangle = new Rect(new Point(0, 0), scrollViewer.RenderSize);\n\n            // ItemsControl\u306eGroupItem\n            foreach(var containerItem in AssociatedObject.ItemContainerGenerator.Items)\n            {\n                // GroupItem\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u53d6\u5f97\n                var groupItemContainer = AssociatedObject.ItemContainerGenerator.ContainerFromItem(containerItem) as GroupItem;\n                if(groupItemContainer==null)\n                {\n                    Debug.WriteLine(\"Failed: get groupItemContainer\");\n                    return;\n                }\n\n                // ScrollViewer\u3092\u57fa\u6e96\u3068\u3057\u305f\u63cf\u753b\u4f4d\u7f6e\u3092\u8a08\u7b97\n                var transform = groupItemContainer.TransformToAncestor(scrollViewer);\n                var groupItemRect = transform.TransformBounds(new Rect(new Point(0, 0), groupItemContainer.RenderSize));\n\n                // ScrollViewer\u3068GroupItem\u306e\u91cd\u306a\u308a\u3092\u78ba\u8a8d\n                var intersectRect = Rect.Intersect(scrollViewerRectangle, groupItemRect);\n\n                // \u30d8\u30c3\u30c0\u30fc\u56fa\u5b9a\u8868\u793a\u7528\u306eAdorner\u3092\u8868\u793a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3069\u3046\u304b\n                var needDisplayAdorner = true;\n\n                // ScrollViewer\u306e\u63cf\u753b\u30a8\u30ea\u30a2\u5185\u306bGroupItem\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\n                needDisplayAdorner &= intersectRect != Rect.Empty;\n                \n                // \u304b\u3064\u3001GroupItem\u306e\u4e0a\u7aef\u304cScrollViewer\u306e\u4e0a\u7aef\u3088\u308a\u3082\u4e0a\u306b\u5b58\u5728\n                needDisplayAdorner &= groupItemRect.Top <= 0;\n\n                // GroupItem\u306eAdornerLayer\u3092\u53d6\u5f97\n                var adornerLayer = AdornerLayer.GetAdornerLayer(groupItemContainer);\n                if(adornerLayer==null)\n                {\n                    Debug.WriteLine(\"Failed: get adornerLayer of GroupItem\");\n                    return;\n                }\n\n                // Adorner\u306e\u8868\u793a\u304c\u5fc5\u8981\u306a\u5834\u5408\n                if(needDisplayAdorner)\n                {\n                    // \u3059\u3067\u306bAdorner\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u305d\u306e\u4f4d\u7f6e\u3092\u66f4\u65b0\u3059\u308b\u3060\u3051\n                    var headerAdorner = GetAdorner(groupItemContainer);\n                    if (headerAdorner != null)\n                    {\n                        headerAdorner.UpdateLocation(groupItemRect.Top);\n                        return;\n                    }\n\n                    // \u672a\u4f5c\u6210\u306e\u5834\u5408\u306f\u65b0\u898f\u306bAdorner\u3092\u4f5c\u6210\u3057\u3001Dictionary\u306b\u52a0\u3048\u308b\n                    var adorner = new HeaderAdorner(groupItemContainer)\n                    {\n                        DataContext = containerItem,\n                        HeaderTemplate = HeaderTemplate,\n                        Top = Math.Abs(groupItemRect.Top)\n                    };\n                    adornerLayer.Add(adorner);\n\n                    _CurrentGroupItem.Add(groupItemContainer, new WeakReference<HeaderAdorner>(adorner));\n                }\n                // Adorner\u306e\u8868\u793a\u304c\u4e0d\u8981\u306a\u5834\u5408\n                else\n                {\n                    // Adorner\u3092AdornerLayer\u3068Dictionary\u304b\u3089\u9664\u53bb\n                    var adorner = GetAdorner(groupItemContainer);\n                    if (adorner != null)\n                    {\n                        adornerLayer.Remove(adorner);\n                        _CurrentGroupItem.Remove(groupItemContainer);\n                    }\n                }\n            }\n\n        }\n\n\n        private HeaderAdorner GetAdorner(GroupItem container)\n        {\n            if (_CurrentGroupItem.ContainsKey(container))\n            {\n                HeaderAdorner adorner;\n                if (_CurrentGroupItem[container].TryGetTarget(out adorner))\n                {\n                    return adorner;\n                }\n            }\n\n            return null;\n        }\n    }\n\n```\n\n\u5229\u7528\u3059\u308b\u3068\u304d\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306bItemsControl\u306bBehavior\u3092\u8a2d\u5b9a\uff06GroupItem\u306eHeaderTemplate\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u30fc\u306fDataTemplate\u3068\u3057\u3066\u30ea\u30bd\u30fc\u30b9\u5316\u3057\u3066\u304a\u304f\u3068\u7ba1\u7406\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n```xml\n<UserControl x:Class=\"ControlsShowcase.Views.GroupItemTabView\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \n             xmlns:i=\"http://schemas.microsoft.com/expression/2010/interactivity\"\n             xmlns:ei=\"http://schemas.microsoft.com/expression/2010/interactions\"\n             xmlns:l=\"http://schemas.livet-mvvm.net/2011/wpf\"\n             xmlns:local=\"clr-namespace:ControlsShowcase.Views\"\n             xmlns:vm=\"clr-namespace:ControlsShowcase.ViewModels\"\n             xmlns:b=\"clr-namespace:ControlsShowcase.Behaviors\"\n             mc:Ignorable=\"d\" \n             Foreground=\"Black\"\n             d:DesignHeight=\"300\" d:DesignWidth=\"300\">\n\n    <UserControl.Resources>\n        <CollectionViewSource x:Key=\"StaffCollectionKey\"\n                              Source=\"{Binding Staffs}\">\n            <CollectionViewSource.GroupDescriptions>\n                <PropertyGroupDescription PropertyName=\"Model.Department\" />\n            </CollectionViewSource.GroupDescriptions>\n        </CollectionViewSource>\n\n        <DataTemplate x:Key=\"GroupItemHeaderTemplateKey\">\n            <Border Margin=\"2\"\n                    Padding=\"4 2\"\n                    Background=\"DimGray\">\n                <TextBlock Text=\"{Binding Name}\"\n                           Foreground=\"Snow\"/>\n            </Border>\n\n        </DataTemplate>\n    </UserControl.Resources>\n    \n    <UserControl.DataContext>\n        <vm:GroupItemTabViewModel />\n    </UserControl.DataContext>\n    \n    <Grid>\n        <ScrollViewer>\n            <ItemsControl ItemsSource=\"{Binding Source={StaticResource StaffCollectionKey}}\">\n                <i:Interaction.Behaviors>\n                    <b:GroupHeaderFrozenBehavior HeaderTemplate=\"{StaticResource GroupItemHeaderTemplateKey}\" />\n                </i:Interaction.Behaviors>\n                \n                <ItemsControl.GroupStyle>\n                    <GroupStyle HeaderTemplate=\"{StaticResource GroupItemHeaderTemplateKey}\">\n                    </GroupStyle>\n                </ItemsControl.GroupStyle>\n                \n                <ItemsControl.ItemTemplate>\n                    <DataTemplate>\n                        <Grid Margin=\"4 1\">\n                            <Grid.ColumnDefinitions>\n                                <ColumnDefinition Width=\"60\" />\n                                <ColumnDefinition />\n                            </Grid.ColumnDefinitions>\n\n                            <TextBlock Text=\"{Binding Model.Id}\" />\n\n                            <TextBlock Grid.Column=\"1\"\n                                       Text=\"{Binding Model.Name}\" />\n                        </Grid>\n                    </DataTemplate>\n                </ItemsControl.ItemTemplate>\n            </ItemsControl>\n        </ScrollViewer>\n\n    </Grid>\n</UserControl>\n\n```\n\n\u3053\u308c\u3067\u3081\u3067\u305f\u304f\u30b0\u30eb\u30fc\u30d7\u30d8\u30c3\u30c0\u30fc\u306e\u8868\u793a\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u6642\u306b\u56fa\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff01\n\n![groupitem2.gif](https://qiita-image-store.s3.amazonaws.com/0/77732/b578eff1-10cb-7d7c-e453-2d774c19ef5e.gif)\n\n\u30bd\u30fc\u30b9\u306f[\u3053\u3061\u3089](https://github.com/ambleside138/ControlsShowcase)\u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\n\n## \u53c2\u8003\n\nhttp://blog.qarim.net/2013/08/16/wpf-persistent-group-headers-for-the-listbox-control/\n", "tags": ["WPF"]}