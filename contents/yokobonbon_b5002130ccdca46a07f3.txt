{"tags": ["OAuth", "Web", "spring-boot", "spring-security", "spring"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nOAuth\u3092\u7528\u3044\u3066\u3001Web API\u306e\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u3092\u884c\u3044\u307e\u3059\u3002OAuth\u306e\u60c5\u5831\u306f\u3001\u57fa\u672c\u7684\u306b\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u306f\u3001\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u306e\u60c5\u5831\u3092\u8aad\u307f\u89e3\u3044\u3066\u3001\u6700\u5c0f\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nOAuth2 Developers Guid\n\u4f5c\u6210\u3057\u305f\u3044\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8981\u6c42\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\n\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306fOAuth2 authorization code\u3067\u53d6\u5f97\u3067\u304d\u308b\u3053\u3068\nWeb API\u306f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u3053\u3068\nWeb API\u306f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306a\u3057\u3067\u306f\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u3053\u3068\n\n\n\u57fa\u672c\u8a2d\u5b9a\nSpring Boot, Spring Security, Spring Security OAuth\u306e3\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306bbuild.gradle\u306b\u4ee5\u4e0b\u3092\u8a18\u8ff0\u3057\u307e\u3059\nbuild.gradle\ndependencies {\n    compile(\"org.springframework.boot:spring-boot-starter-web\")\n    compile(\"org.springframework.boot:spring-boot-starter-security\")\n    compile(\"org.springframework.security.oauth:spring-security-oauth2\")\n}\n\nApplication\u30af\u30e9\u30b9\u3084\u3001API\u3092\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u306f\u3001\u306a\u308b\u3079\u304f\u7c21\u7565\u5316\u3057\u3066\u3044\u307e\u3059\u3002\u5358\u7d14\u306blocalhost:8080\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\"hello world\"\u3068\u8fd4\u3059\u3060\u3051\u3067\u3059\u3002\nApplication.java\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n\nAPIController.java\n@RestController\npublic class APIController {\n    @RequestMapping(\"/\")\n    public String get() {\n        return \"hello world\\n\";\n    }\n}\n\n\n\u30e6\u30fc\u30b6\u30fc\u306e\u8a2d\u5b9a\nWebSecurityConfigurerAdapter\u3092\u7528\u3044\u3066\u30e6\u30fc\u30b6\u30fc\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u3092\u5358\u7d14\u306b\u4e00\u4eba\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306e\u8aac\u660e\u306f\u3053\u3053\u3067\u306f\u884c\u3044\u307e\u305b\u3093\u3002HttpSecurity\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u4e0b\u3055\u3044\u3002\nconfigure(HttpSecurity http)\u3067\u306f\u3001\u5168\u3066\u306e\u547c\u3073\u51fa\u3057\u306b\u8a8d\u8a3c\u304c\u3044\u308b\u3053\u3068\u3068\u3001OAuth Server\u304b\u3089\u306eID/Password\u8a8d\u8a3c\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nSecurityConfig.java\n@Configuration\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n                .withUser(\"user\").password(\"password\").roles(\"USER\");\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests().antMatchers(\"/**\").authenticated()\n                .and().httpBasic().realmName(\"OAuth Server\");\n    }\n}\n\n\n\u8a8d\u53ef\u8a2d\u5b9a\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u8a8d\u53ef\u8a2d\u5b9a\u306f\u3001AuthorizationServerConfigurerAdapter\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u884c\u3044\u307e\u3059\u3002\n\u307e\u305a\u767a\u884c\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u5b58\u3059\u308b\u5834\u6240\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30e1\u30e2\u30ea\u4e0a\u306e\u30c8\u30fc\u30af\u30f3\u30b9\u30c8\u30a2\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306b\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u6b21\u306b\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u9805\u76ee\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\n\u30ed\u30fc\u30eb\n\u30ea\u30bd\u30fc\u30b9ID\n\u8a8d\u53ef\u3059\u308b\u30b9\u30b3\u30fc\u30d7\n\u8a8d\u8a3c\u30bf\u30a4\u30d7 (\u3053\u3053\u3067\u306f\u8a8d\u8a3c\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059)\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\n\n@Configuration\n@EnableAuthorizationServer\npublic class OAuthAuthorizationConfig extends AuthorizationServerConfigurerAdapter {\n    @Autowired\n    private TokenStore tokenStore;\n\n    @Bean\n    public TokenStore tokenStore() {\n        return new InMemoryTokenStore();\n    }\n\n    @Override\n    public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {\n        endpoints.tokenStore(tokenStore());\n    }\n\n    @Override\n    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n        clients.inMemory()\n                .withClient(\"oauth_client\")\n                .authorities(\"USER\")\n                .resourceIds(OAuthResourceConfig.RESOURCE_ID)\n                .scopes(\"read\")\n                .authorizedGrantTypes(\"authorization_code\")\n                .redirectUris(\"http://oauth-callback.com\")\n                .secret(\"oauth_client_secret\");\n    }\n}\n\n\n\u30ea\u30bd\u30fc\u30b9\u8a2d\u5b9a\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306b\u5bfe\u3057\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u306f\u3001ResourceServerConfigurerAdapter\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u5185\u5bb9\u306f\n\n\u30ea\u30bd\u30fc\u30b9ID\nURI\u306e\u30d1\u30b9\u306b\u5bfe\u3057\u3066\u3069\u306e\u3088\u3046\u306a\u30a2\u30af\u30bb\u30b9\u6a29\u304c\u5fc5\u8981\u304b(\u3053\u3053\u3067\u306fread\u30b9\u30b3\u30fc\u30d7\u304c\u5fc5\u8981\u3068\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\uff09\n\nHTTP GET\u306e\u307f\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001GET\u4ee5\u5916\u306e\u30a2\u30af\u30bb\u30b9\u306f\u5168\u3066\u8a8d\u8a3c\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n@Configuration\n@EnableResourceServer\npublic class OAuthResourceConfig extends ResourceServerConfigurerAdapter {\n    static final String RESOURCE_ID = \"my_resource_id\";\n\n    @Override\n    public void configure(ResourceServerSecurityConfigurer resources) throws Exception {\n        resources.resourceId(RESOURCE_ID);\n    }\n\n    @Override\n    public void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .antMatchers(HttpMethod.GET, \"/**\").access(\"#oauth2.hasScope('read')\");\n    }\n}\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\u3053\u308c\u3067\u5b9f\u88c5\u5b8c\u4e86\u3067\u3059\u3002\u6700\u5f8c\u306b\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\u307e\u305a\u3001\u8a8d\u8a3c\u30b3\u30fc\u30c9\u306e\u53d6\u5f97\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u884c\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306aURI\u3092\u5165\u529b\u3057\u307e\u3059\u3002\nhttp://localhost:8080/oauth/authorize?response_type=code&client_id=oauth_client&redirect_url=http://oauchcallback.com&scope=read\n\n\u30a2\u30af\u30bb\u30b9\u6a29\u3092\u4e0e\u3048\u308b\u304b\u3069\u3046\u304b\u306e\u78ba\u8a8d\u30da\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30d3\u30e5\u30fc\u306fSpring Security OAuth\u306e\u4e2d\u3067\u5b9f\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a8d\u8a3c\u30b3\u30fc\u30c9\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\nxml\nhttp://oauth-callback.com/?code=sVs0bm\n\n\u53d6\u5f97\u3057\u305f\u8a8d\u8a3c\u30b3\u30fc\u30c9\u3092\u7528\u3044\u3066\u3001POST\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306fPOST MAN\u3068\u3044\u3046Chrome\u306eExtension\u3092\u7528\u3044\u305f\u4f8b\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068hello world\u3068\u3061\u3083\u3093\u3068\u8fd4\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n$curl -H \"Authorization: Bearer ca29a1b6-89fc-4ded-a00f-6fd7f4bcf991\" localhost:8080\nhello world\n\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u304c\u7570\u306a\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a8d\u8a3c\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\n{\"error\":\"invalid_token\",\"error_description\":\"Invalid access token: ca29a1b6-89fc-4ded-a00f-6fd7f4bcf99\"}\n\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u8fd4\u308a\u307e\u3059\n$ curl \"localhost:8080\"\n{\"error\":\"unauthorized\",\"error_description\":\"Full authentication is required to access this resource\"}\n\n# \u306f\u3058\u3081\u306b\nOAuth\u3092\u7528\u3044\u3066\u3001Web API\u306e\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u3092\u884c\u3044\u307e\u3059\u3002OAuth\u306e\u60c5\u5831\u306f\u3001\u57fa\u672c\u7684\u306b\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u306f\u3001\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u306e\u60c5\u5831\u3092\u8aad\u307f\u89e3\u3044\u3066\u3001\u6700\u5c0f\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n[OAuth2 Developers Guid](http://projects.spring.io/spring-security-oauth/docs/oauth2.html)\n\n\u4f5c\u6210\u3057\u305f\u3044\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8981\u6c42\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\n\n* \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306fOAuth2 authorization code\u3067\u53d6\u5f97\u3067\u304d\u308b\u3053\u3068\n* Web API\u306f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u3053\u3068\n* Web API\u306f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306a\u3057\u3067\u306f\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u3053\u3068\n\n# \u57fa\u672c\u8a2d\u5b9a\nSpring Boot, Spring Security, Spring Security OAuth\u306e3\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306bbuild.gradle\u306b\u4ee5\u4e0b\u3092\u8a18\u8ff0\u3057\u307e\u3059\n\nbuild.gradle\n\n```java\ndependencies {\n    compile(\"org.springframework.boot:spring-boot-starter-web\")\n    compile(\"org.springframework.boot:spring-boot-starter-security\")\n    compile(\"org.springframework.security.oauth:spring-security-oauth2\")\n}\n```\n\nApplication\u30af\u30e9\u30b9\u3084\u3001API\u3092\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u306f\u3001\u306a\u308b\u3079\u304f\u7c21\u7565\u5316\u3057\u3066\u3044\u307e\u3059\u3002\u5358\u7d14\u306blocalhost:8080\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\"hello world\"\u3068\u8fd4\u3059\u3060\u3051\u3067\u3059\u3002\n\nApplication.java\n\n```java\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n```\n\nAPIController.java\n\n```java\n@RestController\npublic class APIController {\n    @RequestMapping(\"/\")\n    public String get() {\n        return \"hello world\\n\";\n    }\n}\n```\n\n# \u30e6\u30fc\u30b6\u30fc\u306e\u8a2d\u5b9a\n[WebSecurityConfigurerAdapter](http://docs.spring.io/spring-security/site/docs/current/apidocs/org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html)\u3092\u7528\u3044\u3066\u30e6\u30fc\u30b6\u30fc\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u3092\u5358\u7d14\u306b\u4e00\u4eba\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306e\u8aac\u660e\u306f\u3053\u3053\u3067\u306f\u884c\u3044\u307e\u305b\u3093\u3002HttpSecurity\u306b\u3064\u3044\u3066\u306f[\u3053\u306e\u8a18\u4e8b](http://qiita.com/yokobonbon/items/6459bec1f09b57982bc1)\u3092\u3054\u53c2\u7167\u4e0b\u3055\u3044\u3002\n\nconfigure(HttpSecurity http)\u3067\u306f\u3001\u5168\u3066\u306e\u547c\u3073\u51fa\u3057\u306b\u8a8d\u8a3c\u304c\u3044\u308b\u3053\u3068\u3068\u3001OAuth Server\u304b\u3089\u306eID/Password\u8a8d\u8a3c\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nSecurityConfig.java\n\n```java\n@Configuration\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n                .withUser(\"user\").password(\"password\").roles(\"USER\");\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests().antMatchers(\"/**\").authenticated()\n                .and().httpBasic().realmName(\"OAuth Server\");\n    }\n}\n```\n\n# \u8a8d\u53ef\u8a2d\u5b9a\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u8a8d\u53ef\u8a2d\u5b9a\u306f\u3001[AuthorizationServerConfigurerAdapter](http://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/config/annotation/web/configuration/AuthorizationServerConfigurerAdapter.html)\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u884c\u3044\u307e\u3059\u3002\n\n\u307e\u305a\u767a\u884c\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u5b58\u3059\u308b\u5834\u6240\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30e1\u30e2\u30ea\u4e0a\u306e\u30c8\u30fc\u30af\u30f3\u30b9\u30c8\u30a2\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306b\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u6b21\u306b\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u9805\u76ee\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n* \u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\n* \u30ed\u30fc\u30eb\n* \u30ea\u30bd\u30fc\u30b9ID\n* \u8a8d\u53ef\u3059\u308b\u30b9\u30b3\u30fc\u30d7\n* \u8a8d\u8a3c\u30bf\u30a4\u30d7 (\u3053\u3053\u3067\u306f\u8a8d\u8a3c\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059)\n* \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8URI\n* \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\n\n```java\n@Configuration\n@EnableAuthorizationServer\npublic class OAuthAuthorizationConfig extends AuthorizationServerConfigurerAdapter {\n    @Autowired\n    private TokenStore tokenStore;\n\n    @Bean\n    public TokenStore tokenStore() {\n        return new InMemoryTokenStore();\n    }\n\n    @Override\n    public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {\n        endpoints.tokenStore(tokenStore());\n    }\n\n    @Override\n    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n        clients.inMemory()\n                .withClient(\"oauth_client\")\n                .authorities(\"USER\")\n                .resourceIds(OAuthResourceConfig.RESOURCE_ID)\n                .scopes(\"read\")\n                .authorizedGrantTypes(\"authorization_code\")\n                .redirectUris(\"http://oauth-callback.com\")\n                .secret(\"oauth_client_secret\");\n    }\n}\n```\n\n# \u30ea\u30bd\u30fc\u30b9\u8a2d\u5b9a\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306b\u5bfe\u3057\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u306f\u3001[ResourceServerConfigurerAdapter](http://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/config/annotation/web/configuration/ResourceServerConfigurerAdapter.html)\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u5185\u5bb9\u306f\n\n* \u30ea\u30bd\u30fc\u30b9ID\n* URI\u306e\u30d1\u30b9\u306b\u5bfe\u3057\u3066\u3069\u306e\u3088\u3046\u306a\u30a2\u30af\u30bb\u30b9\u6a29\u304c\u5fc5\u8981\u304b(\u3053\u3053\u3067\u306fread\u30b9\u30b3\u30fc\u30d7\u304c\u5fc5\u8981\u3068\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\uff09\n\nHTTP GET\u306e\u307f\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001GET\u4ee5\u5916\u306e\u30a2\u30af\u30bb\u30b9\u306f\u5168\u3066\u8a8d\u8a3c\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\n@Configuration\n@EnableResourceServer\npublic class OAuthResourceConfig extends ResourceServerConfigurerAdapter {\n    static final String RESOURCE_ID = \"my_resource_id\";\n\n    @Override\n    public void configure(ResourceServerSecurityConfigurer resources) throws Exception {\n        resources.resourceId(RESOURCE_ID);\n    }\n\n    @Override\n    public void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .antMatchers(HttpMethod.GET, \"/**\").access(\"#oauth2.hasScope('read')\");\n    }\n}\n```\n# \u52d5\u4f5c\u78ba\u8a8d\n\u3053\u308c\u3067\u5b9f\u88c5\u5b8c\u4e86\u3067\u3059\u3002\u6700\u5f8c\u306b\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\u307e\u305a\u3001\u8a8d\u8a3c\u30b3\u30fc\u30c9\u306e\u53d6\u5f97\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u884c\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306aURI\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\n```xml\nhttp://localhost:8080/oauth/authorize?response_type=code&client_id=oauth_client&redirect_url=http://oauchcallback.com&scope=read\n```\n\n\u30a2\u30af\u30bb\u30b9\u6a29\u3092\u4e0e\u3048\u308b\u304b\u3069\u3046\u304b\u306e\u78ba\u8a8d\u30da\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30d3\u30e5\u30fc\u306fSpring Security OAuth\u306e\u4e2d\u3067\u5b9f\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n<img width=\"485\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-23 22.40.50.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/85182/69fb8860-6e1b-6f33-cb4b-1b5cdc5431a1.png\">\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a8d\u8a3c\u30b3\u30fc\u30c9\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\n```xml\nhttp://oauth-callback.com/?code=sVs0bm\n```\n\n\u53d6\u5f97\u3057\u305f\u8a8d\u8a3c\u30b3\u30fc\u30c9\u3092\u7528\u3044\u3066\u3001POST\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306fPOST MAN\u3068\u3044\u3046Chrome\u306eExtension\u3092\u7528\u3044\u305f\u4f8b\u3067\u3059\u3002\n\n<img width=\"620\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-23 22.41.52.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/85182/e6c2214f-16bf-a473-281c-694d935b8899.png\">\n\n\u6700\u5f8c\u306b\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068hello world\u3068\u3061\u3083\u3093\u3068\u8fd4\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\n```bash\n$curl -H \"Authorization: Bearer ca29a1b6-89fc-4ded-a00f-6fd7f4bcf991\" localhost:8080\nhello world\n```\n\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u304c\u7570\u306a\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a8d\u8a3c\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\n\n```json\n{\"error\":\"invalid_token\",\"error_description\":\"Invalid access token: ca29a1b6-89fc-4ded-a00f-6fd7f4bcf99\"}\n```\n\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u8fd4\u308a\u307e\u3059\n\n```bash\n$ curl \"localhost:8080\"\n{\"error\":\"unauthorized\",\"error_description\":\"Full authentication is required to access this resource\"}\n```\n"}