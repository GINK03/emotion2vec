{"context": " More than 1 year has passed since last update.UDF\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u306f\u306a\u304f\u3001GenericUDF\u3092\u7d99\u627f\u3059\u308b\u3068\u3082\u3063\u3068\u3044\u3044\u611f\u3058\u306b\u306a\u308b\u3088\u3046\u3060\u3002(\u4eca\u56de\u306e\u5834\u5408)\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u524d\u56de\u4f5c\u6210\u3057\u305fArrayStringToStringUDF\u3092String\u306aArray\u3067\u306a\u304f\u3066\u3082\u826f\u3044\u3088\u3046\u306b\u6539\u5909\u3057\u3066\u307f\u308b\u3002\nGenericUDF\u3092\u7d99\u627f\u3057\u305fArrayToObjectUDF\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\nGenericUDF\u3092\u7d99\u627f\u3057\u305f\u5834\u5408\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u6a5f\u80fd\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\ninitialize\nUDF\u306b\u4e0e\u3048\u3089\u308c\u305f\u5f15\u6570\u306e\u78ba\u8a8d(\u6570\u3084\u578b)\u3068\u623b\u308a\u5024\u306eObjectInspector\u8fd4\u5374\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002\n@Override\npublic ObjectInspector initialize(ObjectInspector[] args)\n        throws UDFArgumentException {\n\n    if(args.length != 2){\n        throw new UDFArgumentException(\"_FUNC_ expects exactly 2 arg\");\n    }\n\n    if(args[0].getCategory() != Category.LIST){\n        throw new UDFArgumentException(\"The 1st arg needs to be array but an arg of type \"+ args[0].getTypeName() + \" was given.\");\n    }\n\n    if(!(args[1] instanceof IntObjectInspector)){\n        throw new UDFArgumentException(\"The 2nd arg needs to be integer but an arg of type \"+ args[1].getTypeName() + \" was given.\");\n    }\n\n    listOI = (ListObjectInspector)args[0];\n    intOI = (IntObjectInspector)args[1];\n\n    GenericUDFUtils.ReturnObjectInspectorResolver returnOI = new GenericUDFUtils.ReturnObjectInspectorResolver(true);\n    returnOI.update(listOI.getListElementObjectInspector());\n\n    converter = ObjectInspectorConverters.getConverter(listOI.getListElementObjectInspector(), returnOI.get());\n\n    return returnOI.get();\n}\n\n\u5f15\u6570\u306e\u6570\u3001\u5f15\u6570\u306e\u578b\u306a\u3069\u78ba\u8a8d\u3002\u4eca\u56de\u306fARRAY\u306e\u4e2d\u8eab\u306f\u554f\u308f\u306a\u3044\u306e\u3067\u3001args[0]\u306b\u95a2\u3057\u3066\u306fCategory\u306e\u78ba\u8a8d\u306e\u307f\u3068\u306a\u3063\u3066\u3044\u308b\u3002\nlistOI(ListObjectInspector)\u3068intOI(IntObjectInspector)\u306f\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u5909\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u304a\u308a\u3001evaluate\u3067\u5024\u306e\u53d6\u5f97\u306b\u4f7f\u7528\u3059\u308b\u3002\n\u307e\u305f\u3001converter(Converter)\u3082\u30af\u30e9\u30b9\u30e1\u30f3\u30d0\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u304a\u308a\u3001evaluate\u3067\u5024\u306e\u8fd4\u5374\u306b\u5229\u7528\u3059\u308b\u3002\n\nevaluate\n\u5b9f\u969b\u306bUDF\u3078\u6e21\u3055\u308c\u305f\u5f15\u6570\u3092\u5143\u306b\u5024\u306e\u8fd4\u5374\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002\n@Override\npublic Object evaluate(DeferredObject[] args) throws HiveException {\n    if(args.length != 2){\n        return null;\n    }\n\n    if(args[0].get() == null){\n        return null;\n    }\n\n    if(listOI == null || intOI == null){\n        throw new HiveException(\"Invalid ObjectInspector.\");\n    }\n\n    List<?> values = (List<?>)(listOI.getList(args[0].get()));\n    int num = intOI.get(args[1].get());\n\n    if(values == null || values.size() < num + 1){\n        return null;\n    }\n\n    return converter.convert(values.get(num));\n}\n\n\u5f15\u6570\u304c2\u3067\u3042\u308b\u4e8b\u3092\u78ba\u8a8d\u3057\u3066\u3001ARRAY\u306e\u78ba\u8a8d\u3068initialize\u6642\u306b\u53d6\u5f97\u3057\u3066\u3044\u308b\u306f\u305a\u306eObjectInspector\u306e\u78ba\u8a8d\u3092\u3057\u305f\u5f8c\u306b\u3001List\u304b\u3089\u8a72\u5f53\u7b87\u6240\u306eObject\u3092get\u3057\u3066Converter\u3067convert\u3057\u3066\u8fd4\u5374\u3002\n\u51fa\u6765\u305f\uff01\u3053\u308c\u3067INT\u306aARRAY\u3082STRING\u306aARRAY\u3082STRUCT\u306aARRAY\u3082\u6016\u304f\u306a\u3044\uff01\n\u6ce8\uff09\u3068\u8a00\u3044\u3064\u3064STRUCT\u306aARRAY\u306f\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3001\u3001\u3001\u5927\u4e08\u592b\u304b\u306a\uff08\u6c57\uff09\n\u3044\u3084\u3001\u307e\u3041\u3053\u306e\u624b\u306e\u4e8b\u306fHive\u304c\u30cd\u30a4\u30c6\u30a3\u30d6\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u304f\u308c\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u3068\u601d\u3046\u306e\u3060\u3051\u3069\u3082\u3001\u305d\u3093\u306a\u306b\u9700\u8981\u304c\u7121\u3044\u306e\u304b\u306a\u3041(-_-)\nUDF\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u306f\u306a\u304f\u3001GenericUDF\u3092\u7d99\u627f\u3059\u308b\u3068\u3082\u3063\u3068\u3044\u3044\u611f\u3058\u306b\u306a\u308b\u3088\u3046\u3060\u3002(\u4eca\u56de\u306e\u5834\u5408)\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001[\u524d\u56de](http://qiita.com/unksato/items/fb10c42ef0def6c308fe)\u4f5c\u6210\u3057\u305f`ArrayStringToStringUDF`\u3092String\u306aArray\u3067\u306a\u304f\u3066\u3082\u826f\u3044\u3088\u3046\u306b\u6539\u5909\u3057\u3066\u307f\u308b\u3002\n\n`GenericUDF`\u3092\u7d99\u627f\u3057\u305f`ArrayToObjectUDF`\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n`GenericUDF`\u3092\u7d99\u627f\u3057\u305f\u5834\u5408\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u6a5f\u80fd\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\n### initialize\n\nUDF\u306b\u4e0e\u3048\u3089\u308c\u305f\u5f15\u6570\u306e\u78ba\u8a8d(\u6570\u3084\u578b)\u3068\u623b\u308a\u5024\u306eObjectInspector\u8fd4\u5374\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002\n\n```java\n@Override\npublic ObjectInspector initialize(ObjectInspector[] args)\n\t\tthrows UDFArgumentException {\n\t\n\tif(args.length != 2){\n\t\tthrow new UDFArgumentException(\"_FUNC_ expects exactly 2 arg\");\n\t}\n\t\n\tif(args[0].getCategory() != Category.LIST){\n\t\tthrow new UDFArgumentException(\"The 1st arg needs to be array but an arg of type \"+ args[0].getTypeName() + \" was given.\");\n\t}\n\n\tif(!(args[1] instanceof IntObjectInspector)){\n\t\tthrow new UDFArgumentException(\"The 2nd arg needs to be integer but an arg of type \"+ args[1].getTypeName() + \" was given.\");\n\t}\n\t\n\tlistOI = (ListObjectInspector)args[0];\n\tintOI = (IntObjectInspector)args[1];\n\n\tGenericUDFUtils.ReturnObjectInspectorResolver returnOI = new GenericUDFUtils.ReturnObjectInspectorResolver(true);\n\treturnOI.update(listOI.getListElementObjectInspector());\n\t\n\tconverter = ObjectInspectorConverters.getConverter(listOI.getListElementObjectInspector(), returnOI.get());\n\n\treturn returnOI.get();\n}\n```\n\n\u5f15\u6570\u306e\u6570\u3001\u5f15\u6570\u306e\u578b\u306a\u3069\u78ba\u8a8d\u3002\u4eca\u56de\u306fARRAY\u306e\u4e2d\u8eab\u306f\u554f\u308f\u306a\u3044\u306e\u3067\u3001args[0]\u306b\u95a2\u3057\u3066\u306fCategory\u306e\u78ba\u8a8d\u306e\u307f\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n`listOI(ListObjectInspector)`\u3068`intOI(IntObjectInspector)`\u306f\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u5909\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u304a\u308a\u3001`evaluate`\u3067\u5024\u306e\u53d6\u5f97\u306b\u4f7f\u7528\u3059\u308b\u3002\n\u307e\u305f\u3001`converter(Converter)`\u3082\u30af\u30e9\u30b9\u30e1\u30f3\u30d0\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u304a\u308a\u3001`evaluate`\u3067\u5024\u306e\u8fd4\u5374\u306b\u5229\u7528\u3059\u308b\u3002\n\n### evaluate\n\n\u5b9f\u969b\u306bUDF\u3078\u6e21\u3055\u308c\u305f\u5f15\u6570\u3092\u5143\u306b\u5024\u306e\u8fd4\u5374\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002\n\n```java\n@Override\npublic Object evaluate(DeferredObject[] args) throws HiveException {\n\tif(args.length != 2){\n\t\treturn null;\n\t}\n\t\n\tif(args[0].get() == null){\n\t\treturn null;\n\t}\n\t\n\tif(listOI == null || intOI == null){\n\t\tthrow new HiveException(\"Invalid ObjectInspector.\");\n\t}\n\t\n\tList<?> values = (List<?>)(listOI.getList(args[0].get()));\n\tint num = intOI.get(args[1].get());\n\t\n\tif(values == null || values.size() < num + 1){\n\t\treturn null;\n\t}\n\t\n\treturn converter.convert(values.get(num));\n}\n```\n\n\u5f15\u6570\u304c2\u3067\u3042\u308b\u4e8b\u3092\u78ba\u8a8d\u3057\u3066\u3001ARRAY\u306e\u78ba\u8a8d\u3068initialize\u6642\u306b\u53d6\u5f97\u3057\u3066\u3044\u308b\u306f\u305a\u306eObjectInspector\u306e\u78ba\u8a8d\u3092\u3057\u305f\u5f8c\u306b\u3001List\u304b\u3089\u8a72\u5f53\u7b87\u6240\u306eObject\u3092get\u3057\u3066Converter\u3067convert\u3057\u3066\u8fd4\u5374\u3002\n\n\n\u51fa\u6765\u305f\uff01\u3053\u308c\u3067INT\u306aARRAY\u3082STRING\u306aARRAY\u3082STRUCT\u306aARRAY\u3082\u6016\u304f\u306a\u3044\uff01\n\u6ce8\uff09\u3068\u8a00\u3044\u3064\u3064STRUCT\u306aARRAY\u306f\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3001\u3001\u3001\u5927\u4e08\u592b\u304b\u306a\uff08\u6c57\uff09\n\n\n\u3044\u3084\u3001\u307e\u3041\u3053\u306e\u624b\u306e\u4e8b\u306fHive\u304c\u30cd\u30a4\u30c6\u30a3\u30d6\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u304f\u308c\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u3068\u601d\u3046\u306e\u3060\u3051\u3069\u3082\u3001\u305d\u3093\u306a\u306b\u9700\u8981\u304c\u7121\u3044\u306e\u304b\u306a\u3041(-_-)\n\n\n\n", "tags": ["hive", "CSV", "Java"]}