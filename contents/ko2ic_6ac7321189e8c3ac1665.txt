{"context": "\n\n\u306f\u3058\u3081\u306b\nSwift\u3067ios\u958b\u767a\u3092\u3059\u308b\u3068\u304d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\u3059\u3067\u306b\u3044\u304f\u3064\u304b\u826f\u3044\u8a18\u4e8b\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u3092\u53c2\u8003\u306b\u4f5c\u308b\u306e\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001Web\u958b\u767a\u3067\u6163\u308c\u89aa\u3057\u3093\u3060DDD\u3067\u306f\u3069\u3046\u306a\u308b\u306e\u304b\u3068\u601d\u3044\u8a66\u3057\u307e\u3057\u305f\u3002\n\u7d50\u8ad6\u304b\u3089\u3059\u308b\u3068ios\u958b\u767a\u3067\u306f\u3001DDD\u3092\u305d\u306e\u307e\u307e\u3084\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u3042\u304f\u307e\u3067DDD\u3063\u307d\u304f\u3084\u308b\u306e\u304c\u751f\u7523\u6027\u304c\u9ad8\u305d\u3046\u3067\u3059\u3002\n\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308b\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u3082ios\u958b\u767a\u306b\u5408\u3063\u305fMVVM\u98a8\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3057\u3001\u79c1\u81ea\u8eab\u3001\u539f\u7406\u4e3b\u7fa9\u7684\u306b\u3084\u308b\u3088\u308a\u3082\u305d\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5408\u3046\u3088\u3046\u306b\u67d4\u8edf\u306b\u3084\u308b\u306e\u304c\u597d\u304d\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3001\u306a\u308b\u3079\u304f\u672c\u8cea\u7684\u306a\u5b9f\u88c5\u306b\u5c02\u5ff5\u3067\u304d\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u30bf\u30a4\u30c8\u30eb\u306e\u300c\u30e2\u30c0\u30f3\u306a\u300d\u306f\u5358\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30e2\u30c0\u30f3\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\nDDD\u306b\u8208\u5473\u304c\u306a\u304f\u3066\u3082\u3053\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5229\u7528\u65b9\u6cd5\u3067\u591a\u5c11\u306a\u308a\u3068\u3082\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nBond\nAlamofire\nObjectMapper\nAlamofireObjectMapper\nSwiftTask\nRealmSwift\n\n\u307e\u305f\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u3084\u3059\u3055\u3082\u975e\u5e38\u306b\u5927\u4e8b\u306a\u306e\u3067\u3001\u305d\u3053\u3082\u6c17\u306b\u304b\u3051\u307e\u3059\u3002\n\u80fd\u66f8\u304d\u304c\u5acc\u3044\u306a\u4eba\u306f\u30b3\u30fc\u30c9\u306e\u7ae0\u3092\u898b\u3066\u3001\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3089\u4ed6\u306e\u90e8\u5206\u3082\u8aad\u3081\u3070\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nDDD\u3063\u307d\u304f\u306a\u3044\u3068\u3053\u308d\n\n\u30c9\u30e1\u30a4\u30f3\u5c64\u3082\u7279\u5b9a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\n\n\u305d\u3046\u3044\u3046\u610f\u5473\u3067\u3001\u5168\u7136\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3058\u3083\u306a\u3044\u3067\u3059\u3002\n\u30c9\u30e1\u30a4\u30f3\u304c\u3001Bond\u306b\u3082\u308d\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u304cViewModel\u3063\u307d\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nBond\u3092\u4f7f\u3046\u3068\u5927\u62b5\u305d\u3046\u306a\u308a\u307e\u3059\u304c\u3001\u958b\u767a\u52b9\u7387\u304c\u826f\u3044\u306e\u3067\u3053\u3046\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u3068\u8a00\u3044\u306a\u304c\u3089\u753b\u9762\u3042\u308a\u304d\n\nBond\u304c\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u3042\u308b\u304b\u3089\u3067\u3059\u3002\n\u305f\u3060\u3001UI\u5c64\u3084\u30a4\u30f3\u30d5\u30e9\u5c64\u3092\u307e\u308b\u3063\u3068\u5909\u3048\u3066\u3082\u305d\u3093\u306a\u306b\u30c9\u30e1\u30a4\u30f3\u5c64\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u304b\u3089\u958b\u767a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\n\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\u30a8\u30ea\u30c3\u30af\u30a8\u30f4\u30a1\u30f3\u30b9\u306eDDD\u672c\u3067\u306f\u3001\u307b\u307c\u4ee5\u4e0b\u306e\u56f3\u3067\u3059\u3002\nDDD\u3068\u3044\u3046\u4ee5\u524d\u306b\u3001\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306f\u4f9d\u5b58\u306e\u65b9\u5411\u6027\u306f\u4e00\u65b9\u5411\u306b\u4f5c\u308a\u307e\u3059\u3002\n\u81ea\u5206\u3082Java\u3067Web\u958b\u767a\u306e\u6642\u306f\u3001\u30ec\u30a4\u30e4\u30fc\u3054\u3068\u306b\u30de\u30eb\u30c1\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u3057\u3066\u3001\u9006\u5411\u304d\u306e\u4f9d\u5b58\u304c\u7d76\u5bfe\u306b\u8d77\u304d\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\uff08\u4e00\u3064\u306e\u6307\u91dd\u3068\u3057\u3066\u4e0a\u4f4d\u5c64\u304b\u3089\u9806\u306b\u5c64\u3092\u524a\u9664\u3057\u3066\u3044\u3063\u3066\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u306a\u3044\u72b6\u614b\u3067\u3042\u308c\u3070\u3001\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u8a00\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\uff09\n\n\u3067\u3001\u3053\u308c\u3092\u4e00\u6b69\u9032\u3081\u3066\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u306f\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u4f9d\u5b58\u3055\u305b\u305f\u304f\u306a\u3044\u306e\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u306bprotocol\u3092\u7f6e\u3044\u3066\u3001DI\u3067\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u6ce8\u5165\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u3059\u308b\u3068\u30d8\u30ad\u30b5\u30b4\u30ca\u30eb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u767a\u5c55\u3057\u3066\u3044\u304f\u306e\u3060\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\uff08\u30a8\u30f4\u30a1\u30f3\u30b9\u306eDDD\u3082\u3064\u307e\u308b\u3068\u3053\u308d\u540c\u3058\u3053\u3068\u3092\u8a00\u3063\u3066\u308b\u3068\u601d\u3044\u307e\u3059\u3002\uff09\n\n\u4e0a\u8a18\u306e\u56f3\u306e\u77e2\u5370\u306f\u4f9d\u5b58\u6027\u306e\u65b9\u5411\u3067\u3059\u3002\u56f3\u306b\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u30a4\u30f3\u30d5\u30e9\u5c64\u3078\u306e\u65b9\u5411\u306b\u7d99\u627f\u306e\u77e2\u5370\u304c\u5f15\u304b\u308c\u307e\u3059\u3002\n\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306bServiceLocator\u7d4c\u7531\u3067Repository\u3092\u53d6\u5f97\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002\n\u304c\u3001\u73fe\u5728\u306eSwift\u306e\u4ed5\u69d8\u4e0a\u3001associatedtype \u306e\u3042\u308bprotocol\u3092generics\u3092\u5229\u7528\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\n\u3053\u3093\u306a\u611f\u3058\u306e\u8a71\u3067\u3059\u3002\nfunc lookup<T: Storable>() -> T?\n\n\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u3001\nlet repository: WeatherRepository? = RepositoryLocator.sharedInstance.lookup()\n\n\u3067protocol\u3092\u53d6\u5f97\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3057\u305f\u3002\nProtocol 'WeatherRepository' can only be used as a generic constraint because it has Self or associated type requirements\n\n\u539f\u56e0\u306f\u3001WeatherRepository\u306bassociatedtype\u3092\u4f7f\u3063\u3066\u3044\u305f\u305f\u3081\u3067\u3059\u3002Generics\u3092\u5229\u7528\u3059\u308b\u66d6\u6627\u306aprotocol\u306f\u3001\u5909\u6570\u306e\u578b\u3068\u3057\u3066\u5ba3\u8a00\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3002(\u306a\u306e\u3067DI\u306a\u4ed5\u7d44\u307f\u306b\u3057\u3066\u3082\u305d\u3053\u304c\u5909\u308f\u3089\u306a\u3051\u308c\u3070\u540c\u69d8\u3067\u3059\u3002)\nprotocol WeatherRepository: AppRepository {\n    associatedtype T = WeatherEntity\n\u30fb\u30fb\u30fb\n// realm\u3092\u6271\u3046\u30af\u30e9\u30b9\nprotocol AppRepository: Storable {\n    associatedtype T: Object\n    func save(entity: Self.T)\n\u30fb\u30fb\u30fb\n\n\u578b\u5ba3\u8a00\u3067associatedtype(\u62bd\u8c61\u578b)\u3092\u4f7f\u3048\u306a\u3044\u3068\u958b\u767a\u52b9\u7387\u304c\u843d\u3061\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408\u3001AppRepository(Realm\u306e\u51e6\u7406\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b)\u3092\u7d99\u627f\u3057\u3066\u3044\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306eRepository\u3067find\u3084\u3089save\u3084\u3089\u306e\u5b9a\u578b\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5ba3\u8a00\u3057\u306a\u304f\u3066\u826f\u3044\u306e\u3067\u3059\u3002\n\u3082\u3063\u3068\u8a00\u3048\u3070\u3001protocol\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u3001\u30af\u30e9\u30b9\u4e00\u3064\u3067Realm\u306e\u3059\u3079\u3066\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u64cd\u4f5c\u306e\u307b\u3068\u3093\u3069\u3092\u8cc4\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001\u30ec\u30a4\u30e4\u30fc\u306e\u4f9d\u5b58\u3092\u6b63\u3057\u304f\u4fdd\u3064\u3088\u308a\u3082\u3001\u30b3\u30fc\u30c9\u8a18\u8ff0\u91cf\u3092\u6e1b\u3089\u3059\u3053\u3068\u306e\u5229\u70b9\u3092\u8003\u3048\u3066\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u3068\u30a4\u30f3\u30d5\u30e9\u5c64\u3092\u7de9\u3084\u304b\u306b\u4f9d\u5b58\u3057\u3066\u3082\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001DDD(\u98a8)\u3092\u540d\u4e57\u3063\u3066\u3044\u308b\u306e\u3067\u3001associatedtype\u3067\u66f8\u304f\u3053\u3068\u3092\u8ae6\u3081\u3066\u3001\u611a\u76f4\u306b\u66f8\u304f\u3053\u3068\u3067\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b88\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u3066\u5909\u66f4\u3057\u305f\u56f3\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u5229\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u88dc\u8db3\u3068\u3057\u3066\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u304b\u3089\u30c9\u30e1\u30a4\u30f3\u5c64\u306e\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u623b\u308a\u5024\u306fSwiftTask\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\nUI\u5c64\u3068\u30c9\u30e1\u30a4\u30f3\u5c64\u306fSwiftBond\u3067\u53cc\u65b9\u5411\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081UI\u5c64\u304b\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u3078\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u4ee5\u4e0b\u306f\u30ec\u30a4\u30e4\u30fc\u304c\u4f55\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u304b\u306e\u56f3\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u30ec\u30a4\u30e4\u30fc\u306e\u69cb\u6210\u8981\u7d20\n\u7c21\u5358\u306b\u30a8\u30f4\u30a1\u30f3\u30b9\u306e\u30ec\u30a4\u30e4\u30fc\u30fb\u69cb\u6210\u8981\u7d20\u306e\u8aac\u660e\u3068\u4eca\u56de\u306e\u5834\u5408\u306e\u8aac\u660e\u3092\u8a18\u8ff0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30a4\u30f3\u30d5\u30e9\u5c64\n\u4ed6\u306e3\u5c64\u3092\u652f\u3048\u308b\u6280\u8853\u7684\u306a\u57fa\u76e4\u3068\u306a\u308b\u5c64\u3067\u3059\u3002\n\u30a8\u30f4\u30a1\u30f3\u30b9\u306b\u3088\u308b\u3068\n\n\u4e0a\u4f4d\u306e\u30ec\u30a4\u30e4\u3092\u652f\u3048\u308b\u4e00\u822c\u7684\u306a\u6280\u8853\u7684\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u3002\u3053\u308c\u306b\u306f\u30a2\u30d5\u309a\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u30e1\u30c3\u30bb\u30fc\u30b7\u3099\u9001\u4fe1\u3001\u30c8\u3099\u30e1\u30a4\u30f3\u306e\u305f\u3081\u306e\u6c38\u7d9a\u5316\u3001\u30e6\u30fc\u30b5\u3099\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u305f\u3081\u306e\u30a6\u30a3\u30b7\u3099\u30a7\u30c3\u30c8\u63cf\u753b\u306a\u3068\u3099\u304b\u3099\u3042\u308b\u3002\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u5c64\u306f\u3001\u3053\u3053\u3066\u3099\u793a\u30594\u5c64\u805e\u306b\u304a\u3051\u308b\u76f8\u4e92\u4f5c\u7528\u306e\u30cf\u309a\u30bf\u30fc\u30f3\u3082\u3001\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u901a\u3057\u3099\u3066\u30b5\u30db\u309a\u30fc\u30c8\u3059\u308b\u3053\u3068\u304b\u3099\u3042\u308b\u3002\n\n\u4eca\u56de\u306f\u3001Repository\u3068\u4ed6\u306e\u5c64\u3067\u5229\u7528\u3059\u308bService\u306e\u5b9f\u88c5\uff08\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30fbAPI\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306a\u3069\uff09\u3092\u7f6e\u304f\u5c64\u306b\u306a\u308a\u307e\u3059\u3002\n\nRepository\n\u30c9\u30e1\u30a4\u30f3\u306a\u3069\u306e\u6c38\u7d9a\u5316\u6a5f\u69cb\u3092\u6271\u3046\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001UserDefaults\u3060\u3063\u305f\u308a\u3001Realm\u3060\u3063\u305f\u308a\u3001API\u3060\u3063\u305f\u308a\u3092\u6271\u3046\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\nService\n\u30a4\u30f3\u30d5\u30e9\u56fa\u6709\u306e\u30b5\u30fc\u30d3\u30b9\u30ed\u30b8\u30c3\u30af\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\u4ed6\u306e\u5c64\u3067\u5229\u7528\u3059\u308b\u5b9f\u88c5\u30af\u30e9\u30b9\u3082\u542b\u307e\u308c\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001Realm\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6a5f\u69cb\u3060\u3063\u305f\u308a\u3001Api\u547c\u3073\u51fa\u3057\u306e\u5171\u901a\u51e6\u7406\u3060\u3063\u305f\u308a\u3001Api\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u3060\u3063\u305f\u308a\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30c9\u30e1\u30a4\u30f3\u5c64\n\u30a8\u30f4\u30a1\u30f3\u30b9\u306b\u3088\u308b\u3068\n\n\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u306e\u6982\u5ff5\u3068\u3001\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u304b\u3099\u7f6e\u304b\u308c\u305f\u72b6\u6cc1\u306b\u95a2\u3059\u308b\u60c5\u5831\u3001\u304a\u3088\u3073\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u30eb\u30fc\u30eb\u3092\u8868\u3059\u8cac\u52d9\u3092\u8ca0\u3046\u3002\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u306e\u72b6\u6cc1\u3092\u53cd\u6620\u3059\u308b\u72b6\u614b\u306f\u3053\u3053\u3066\u3099\u5236\u5fa1\u3055\u308c\u4f7f\u7528\u3055\u308c\u308b\u304b\u3099\u3001\u305d\u308c\u3092\u683c\u7d0d\u3059\u308b\u3068\u3044\u3046\u6280\u8853\u7684\u306a\u8a73\u7d30\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306b\u59d4\u8b72\u3055\u308c\u308b\u3002\u3053\u306e\u5c64\u304b\u3099\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u6838\u5fc3\u3066\u3099\u3042\u308b\u3002\n\n\nEntity\n\u8b58\u5225\u5b50\uff08\u30a2\u30a4\u30c7\u30f3\u30c6\u30a3\u30c6\u30a3\uff09\u304c\u3042\u308b\u30c7\u30fc\u30bf\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306e\u4e3b\u5f79\u306b\u306a\u308a\u307e\u3059\u3002\u5c5e\u6027\u304c\u9055\u3063\u3066\u3044\u3066\u3082\u8b58\u5225\u5b50\u3067\u540c\u4e00\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nValue Object\n\u5c5e\u6027\u305d\u306e\u3082\u306e\u304c\u91cd\u8981\u3067\u3001\u8b58\u5225\u3059\u308b\u3053\u3068\u306b\u610f\u5473\u304c\u306a\u3044\u30c7\u30fc\u30bf\u3067\u3059\u3002\u7269\u4e8b\u306e\u6027\u8cea\u3092\u8868\u3059\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002immutable(\u4e0d\u5909)\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7c21\u5358\u306b\u8a00\u3046\u3068\u578b\u306b\u306a\u308a\u5f97\u308b\u3082\u306e\u3067\u3059\u3002\n\u4eca\u56de\u306e\u5834\u5408\u306f\u3001Temperature\u578b\u3084\u3001enum\u3082\u3053\u3053\u306b\u542b\u3081\u307e\u3059\u3002\n\nAggregate\n\u5e38\u306b\u6574\u5408\u6027\u3092\u4fdd\u3063\u3066\u3044\u308b\u5fc5\u8981\u306e\u3042\u308b\u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb\u306e\u5358\u4f4d\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u8868\u73fe\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u96c6\u7d04\u306e\u4e2d\u306b\u4e00\u3064\u306e\u30eb\u30fc\u30c8\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u3042\u308a\u3001\u5916\u90e8\u53c2\u7167\u3067\u304d\u308b\u306e\u306f\u305d\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u307f\u306b\u3057\u307e\u3059\u3002\nios\u306e\u5834\u5408\u3001\u307b\u3068\u3093\u3069API\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u306e\u3067\u3001\u305d\u308c\u304c\u307b\u307c\u96c6\u7d04\u3063\u307d\u3044\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30af\u30e9\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306f\u3001Bond\u306eObserval\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6301\u3061\u3001API\u304b\u3089\u53d6\u5f97\u3057\u305f\u30eb\u30fc\u30c8\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4fdd\u6301\u3059\u308b\u30af\u30e9\u30b9\u3092\u96c6\u7d04\u3068\u547c\u3076\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\nService\n1\u3064\u306e\u6a5f\u80fd\u3084\u51e6\u7406\u304c\u5358\u4f53\u3067\u5b58\u5728\u3057\u3066\u3044\u3066\u3001\u30e2\u30ce\u3068\u3057\u3066\u6271\u3046\u306e\u304c\u4e0d\u81ea\u7136\u306a\u3082\u306e\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u30e6\u30d3\u30ad\u30bf\u30b9\u8a00\u8a9e\u3067\u8868\u73fe\u3055\u308c\u308b\u3082\u306e\u3092\u30af\u30e9\u30b9\u306b\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u57fa\u672c\u7684\u306b\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u304c\u5165\u51fa\u529b\u306b\u306a\u308b\u3088\u3046\u306a\u632f\u308b\u821e\u3044\u3092\u6301\u3063\u305f\u30af\u30e9\u30b9\u306a\u3069\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u5229\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u4f55\u3092\u8a00\u3063\u3066\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070\u4f5c\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\u30a8\u30f4\u30a1\u30f3\u30b9\u306b\u3088\u308b\u3068\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u884c\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u4ed5\u4e8b\u3092\u5b9a\u7fa9\u3057\u3001\u8868\u73fe\u529b\u8c4a\u304b\u306a\u30c8\u3099\u30e1\u30a4\u30f3\u30aa\u30d5\u3099\u30b7\u3099\u30a7\u30af\u30c8\u304b\u3099\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u3088\u3046\u306b\u5c0e\u304f\u3002\u3053\u306e\u30ec\u30a4\u30e4\u304b\u3099\u8cac\u52d9\u3092\u8ca0\u3046\u4f5c\u696d\u306f\u3001\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u306b\u3068\u3063\u3066\u610f\u5473\u304b\u3099\u3042\u308b\u3082\u306e\u304b\u3001\u3042\u308b\u3044\u306f\u4ed6\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30d5\u309a\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u3068\u76f8\u4e92\u4f5c\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u3082\u306e\u3066\u3099\u3042\u308b\u3002\n\u3053\u306e\u30ec\u30a4\u30e4\u306f\u8584\u304f\u4fdd\u305f\u308c\u308b\u3002\u30d2\u309a\u30b7\u3099\u30cd\u30b9\u30eb\u30fc\u30eb\u3084\u77e5\u8b58\u3092\u542b\u307e\u3059\u3099\u3001\u3084\u308b\u3078\u3099\u304d\u4f5c\u696d\u3092\u8abf\u6574\u3059\u308b\u305f\u3099\u3051\u3066\u3099\u3001\u5b9f\u969b\u306e\u51e6\u7406\u306f\u3001\u30c8\u3099\u30e1\u30a4\u30f3\u30aa\u30d5\u3099\u30b7\u3099\u30a7\u30af\u30c8\u306b\u3088\u3063\u3066\u76f4\u4e0b\u306e\u30ec\u30a4\u30e4\u3066\u3099\u5b9f\u884c\u3055\u308c\u308b\u5171\u540c\u4f5c\u696d\u306b\u59d4\u8b72\u3059\u308b\u3002\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u306e\u72b6\u6cc1\u3092\u53cd\u6620\u3059\u308b\u72b6\u614b\u306f\u6301\u305f\u306a\u3044\u304b\u3099\u3001 \u30e6\u30fc\u30b5\u3099\u3084\u30d5\u309a\u30ed\u30af\u3099\u30e9\u30e0\u304b\u3099\u884c\u3046\u4f5c\u696d\u306e\u9032\u6357\u3092\u53cd\u6620\u3059\u308b\u72b6\u614b\u3092\u6301\u3064\u3053\u3068\u306f\u3066\u3099\u304d\u308b\u3002\n\n\nService\n\u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb\u306f\u306a\u304f\u3001\u8584\u3044\u30af\u30e9\u30b9\u306b\u3057\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u5c64\u306a\u3069\u3092\u547c\u3073\u51fa\u3057\u3066\u8abf\u6574\u4f5c\u696d\u3092\u3057\u307e\u3059\u3002\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u3068\u3057\u3066\u306e\u5f79\u5272\u3068\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3059\u308b\u5f79\u5272\u3092\u6301\u3061\u307e\u3059\u3002DB\u3067\u6c38\u7d9a\u5316\u3059\u308b\u3068\u304d\u3084API\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306f\u5fc5\u305a\u5229\u7528\u3057\u307e\u3059\u3002\n\nUI\u5c64\n\u30a8\u30f4\u30a1\u30f3\u30b9\u306b\u3088\u308b\u3068\n\n\u30e6\u30fc\u30b5\u3099\u306b\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u3001\u30e6\u30fc\u30b5\u3099\u306e\u30b3\u30de\u30f3\u30c8\u3099\u3092\u89e3\u91c8\u3059\u308b\u8cac\u52d9\u3092\u8ca0\u3046\u3002\u5916\u90e8\u30a2\u30af\u30bf\u306f\u4eba\u9593\u306e\u30e6\u30fc\u30b5\u3099\u3066\u3099\u306f\u306a\u304f\u3001\u5225\u306e\u30b3\u30f3\u30d2\u309a\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306e\u3053\u3068\u3082\u3042\u308b\u3002\n\nView\u3084Controller\u304c\u3042\u308b\u5c64\u3067\u3059\u3002\u3053\u3053\u306f\u3001\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\nRealmSwift\n\u307e\u305a\u306fDB\u5468\u308a\u306e\u8981\u7d20\u3002\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\nRealmSwift\u306eObject\u3092\u7d99\u627f\u3057\u307e\u3059\u3002\u307e\u305f\u5909\u6570\u306bdynamic\u4fee\u98fe\u5b50\u3092\u3064\u3051\u307e\u3059\u3002\u914d\u5217\u306fList\u306b\u3057\u307e\u3059\u3002\n\nWeatherEntity.swift\nimport RealmSwift\n\nclass WeatherEntity: Object {\n    dynamic var cityCode = \"\"\n    dynamic var title = \"\"\n    var forecasts = List<ForecastEntity>()\n\n    override static func primaryKey() -> String? {\n        return \"cityCode\"\n    }\n\u30fb\u30fb\u30fbAlamofire\u3068ObjectMapper\u306e\u51e6\u7406\u304c\u7d9a\u304f\n}\n\n\n\n\u30ec\u30dd\u30b8\u30c8\u30ea\nRealm\u304b\u3089\u53d6\u5f97\u3057\u305f\u308a\u3001\u4fdd\u5b58\u3057\u305f\u308a\u3059\u308b\u5f79\u5272\u3082\u6301\u3061\u307e\u3059\u3002\nAppRepository\u306f\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\nAppRepositoryImpl\u306f\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306b\u6c4e\u7528\u7684\u306aDB\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\nAppRepository.swift\nprotocol  AppRepository: Storable {\n    associatedtype T: Object\n    func save(entity: T)\n    func find() -> Results<T>?\n    func deleteAll()\n}\n\n\n\nAppRepositoryImpl.swift\nimport RealmSwift\n\nclass AppRepositoryImpl<T : Object>: AppRepository {\n\n    func save(entity: T) {\n        try! RealmWrapper.sharedInstance().add(entity)\n    }\n\n    func find() -> Results<T>? {\n        return try! RealmWrapper.sharedInstance().objects(T)\n    }\n\n    func deleteAll() {\n        try! RealmWrapper.sharedInstance().deleteAll()\n    }\n}\n\n\n\n\u30a4\u30f3\u30d5\u30e9\u5c64\u306e\u30b5\u30fc\u30d3\u30b9\n\u30b9\u30ec\u30c3\u30c9\u3054\u3068\u306erealm\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u6301\u3057\u3066\u304a\u304f\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u3067\u30b5\u30fc\u30d3\u30b9\u5c64\uff08\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\uff09\u3068\u30ec\u30dd\u30b8\u30c8\u30ea\u3067\u540c\u3058Realm\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\n\nRealmWrapper.swift\nimport RealmSwift\n\nclass RealmWrapper {\n\n    private static var realmPerThread: Dictionary < String, Realm > = [:]\n\n    private init() { }\n\n    static func sharedInstance() throws -> Realm {\n        var realm = self.realmPerThread[self.threadId()]\n        if realm == nil {\n            do {\n                realm = try Realm()\n                self.realmPerThread[threadId()] = realm\n            } catch let error as RealmSwift.Error {\n                print(\"Realm init error: \\(error)\")\n                switch error {\n                case .FileAccess:\n                    throw Exception.LackResources\n                case .Fail:\n                    throw Exception.Unexpected\n                default:\n                    throw Exception.ProgramError\n                }\n            } catch {\n                print(\"Realm init error: unexpected\")\n                throw Exception.Unexpected\n            }\n        }\n        return realm!\n    }\n\n    static func destroy() {\n        self.realmPerThread.removeValueForKey(self.threadId())\n    }\n\n    private static func threadId() -> String {\n        let id = \"\\(NSThread.currentThread())\"\n        print(id)\n        return id\n    }\n}\n\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u62c5\u3046\u30af\u30e9\u30b9\u304cTransactionTemplateImpl\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u306f\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002protocol\u306f\u30b5\u30fc\u30d3\u30b9\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\n\nTransactionTemplate.swift\nprotocol TransactionTemplate {\n    func execute(errorObservable errorObservable: Observable<Exception>, doProcess: () -> ())\n}\n\n\n\nTransactionTemplateImpl.swift\nclass TransactionTemplateImpl: TransactionTemplate {\n    func execute(errorObservable errorObservable: Observable<Exception>, doProcess: () -> ()) {\n        do {\n            let realm = try RealmWrapper.sharedInstance()\n            realm.beginWrite()\n            doProcess()\n            try realm.commitWrite()\n        } catch Exception.LackResources {\n            print(\"\u521d\u671f\u5316\u5931\u6557\")\n            errorObservable.next(.LackResources)\n        } catch RealmSwift.Error.FileAccess {\n            print(\"commit\u5931\u6557\")\n            errorObservable.next(.LackResources)\n        } catch {\n            print(\"\u4e88\u671f\u305b\u306c\u30a8\u30e9\u30fc\")\n            errorObservable.next(.Unexpected)\n        }\n    }\n}\n\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306e\u30b5\u30fc\u30d3\u30b9\nTransactionTemplate#execute()\u306eclosure\u304c\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b5\u30fc\u30d3\u30b9\u30ed\u30b1\u30fc\u30bf\u30fc\u304b\u3089Protocol\u3092\u53d6\u5f97\u3057\u3066\u6271\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30b5\u30fc\u30d3\u30b9\u5c64\u304cRealm\u306b\u4f9d\u5b58\u3059\u308b\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u3001\u4ed6\u306eDB\u306b\u5909\u66f4\u3057\u3066\u3082\u30b5\u30fc\u30d3\u30b9\u5c64\u306b\u306f\u5f71\u97ff\u304c\u3042\u308a\u307e\u305b\u3093\u3002\nSwiftTask\u306e\u6b04\u3067\u66f4\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\nWeatherService.swift\n    func fetchWeather() {\n\u30fb\u30fb\u30fb\n            let tx: TransactionTemplate = self.locator.lookup()\n            tx.execute(errorObservable: self.weather.errorState) {\n                self.weather.changeForecasts(entity)\n            }\n        }\n\u30fb\u30fb\u30fb\n\n\n\n\u96c6\u7d04\n\u4e0a\u8a18\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u304b\u3089DB\u51e6\u7406\u3092\u79fb\u8b72\u3055\u308c\u307e\u3059\u3002\nrepository\u7d4c\u7531\u3067\u8907\u6570\u306eDB\u547c\u3073\u51fa\u3057\u3092\u3057\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306e\u4ed6\u306e\u90e8\u5206\u306fSwiftBond\u306e\u6b04\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\nWeather.swift\nclass Weather {\n\u30fb\u30fb\u30fb\n    func changeForecasts(entity: WeatherEntity) {\n        self.entity.changeForecasts(entity.forecasts)\n        repository.deleteAll()\n        repository.save(entity)\n    }\n\u30fb\u30fb\u30fb\n\n\n\nAlamofire\u3068ObjectMapper\u3068SwiftTask\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\nObjectMapper\u306e\u305f\u3081\u306e\u30b3\u30f3\u30d3\u30cb\u30a8\u30f3\u30b9\u521d\u671f\u5316\u5b50\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001Mappable\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nmapping\u30e1\u30bd\u30c3\u30c9\u3067\u3001json\u306e\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u5024\u304c\u53d6\u5f97\u3067\u304d\u3001\u305d\u308c\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u8a2d\u5b9a\u51fa\u6765\u307e\u3059\u3002\n(ArrayTransform\u306fObjectMapper\u304cRealm\u306eList\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306e\u81ea\u4f5c\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059)\n\nWeatherEntity.swift\nclass WeatherEntity: Object {\n\u30fb\u30fb\u30fb\n    required convenience init?(_ map: Map) {\n        self.init()\n    }\n}\n\nextension WeatherEntity: Mappable {\n    func mapping(map: ObjectMapper.Map) {\n        self.title <- map[\"title\"]\n        self.forecasts <- (map[\"forecasts\"], ArrayTransform<ForecastEntity>())\n    }\n}\n\n\u30fb\u30fb\u30fbSwiftBond\u306e\u51e6\u7406\u304c\u7d9a\u304f\n\n\n\n\u30ec\u30dd\u30b8\u30c8\u30ea\nAPI\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002WeatherRepository\u306f\u30e2\u30c7\u30eb\u5c64\u3001WeatherRepositoryImpl\u306f\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u7f6e\u304d\u307e\u3059\u3002\n\u5fc5\u305aSwiftTask\u3092\u623b\u308a\u5024\u306b\u3057\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001ApiCaller\u3068\u305d\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u3044\u308bFetchContext\u306b\u306a\u308a\u307e\u3059\u3002\n\nWeatherRepository.swift\nimport SwiftTask\nprotocol WeatherRepository: Storable {\n\n    func fetchWeather(cityCode: String) -> Task<Progress, WeatherEntity, Int>\n\u30fb\u30fb\u30fb\n\n\n\nWeatherRepositoryImpl.swift\nimport SwiftTask\n\nclass WeatherRepositoryImpl: AppRepositoryImpl<WeatherEntity>, WeatherRepository {\n    typealias T = WeatherEntity\n    typealias Promise = Task<Progress, T, Int>\n\n    func fetchWeather(cityCode: String) -> Promise {\n        return ApiCaller.call(FetchContext([\"city\": cityCode]))\n    }\n}\n\nprivate final class FetchContext: GetRestable {\n    var parameters: [String: AnyObject]?\n\n    required init() {\n    }\n\n    var path: String {\n        return \"/forecast/webservice/json/v1\"\n    }\n}\n\n\nFetchContext\u306fURLRequestConvertible\u3092\u5b9f\u88c5\u3057\u305fRestable\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\nFetchContext\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u3001\u305d\u308c\u305e\u308c\u306eAPI\u547c\u3073\u51fa\u3057\u7528\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nGET\u7528\u306e\u5171\u901a\u90e8\u5206\u306fGetRestable\u306b\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\u540c\u3058\u3088\u3046\u306bPosstRestable\u306a\u3069\u3082\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\nRestable.swift\nimport Alamofire\n\nprotocol Restable: URLRequestConvertible {\n    var baseUrl: String { get }\n    var path: String { get }\n    var parameters: [String: AnyObject]? { get set }\n    var method: Method { get }\n    var encoding: ParameterEncoding { get }\n    var headers: [String: String]? { get }\n\n    init()\n    init(_ parameters: [String: AnyObject])\n}\n\nextension Restable {\n    var URLRequest: NSMutableURLRequest {\n        let url = NSURL(string: baseUrl)!\n        let request = NSMutableURLRequest(URL: url.URLByAppendingPathComponent(path))\n        request.HTTPMethod = self.method.rawValue\n        request.allHTTPHeaderFields = headers\n        return encoding.encode(request, parameters: parameters).0\n    }\n}\n\nextension Restable {\n    init(_ parameters: [String: AnyObject]) {\n        self.init()\n        self.parameters = parameters\n        print(self.URLRequest.debugDescription)\n    }\n}\n\nextension Restable {\n    var headers: [String: String]? {\n        return nil\n    }\n\n    var baseUrl: String {\n        return \"http://weather.livedoor.com\"\n    }\n}\n\nprotocol GetRestable: Restable {\n}\n\nextension GetRestable {\n    var method: Alamofire.Method {\n        return .GET\n    }\n\n    var encoding: Alamofire.ParameterEncoding {\n        return .URL\n    }\n}\n\n\n\n\u6b21\u306f\u3001\u5b9f\u969b\u306bAPI\u547c\u3073\u51fa\u3057\u3092\u884c\u3063\u3066\u3044\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u307b\u3068\u3093\u3069AlamofireObjectMapper\u304c\u52d5\u4f5c\u3057\u3066\u3044\u3066\u3001SwiftTask\u3067Promise\u30d1\u30bf\u30fc\u30f3\u306b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\u30a4\u30f3\u30d5\u30e9\u5c64\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u7f6e\u304d\u307e\u3059\u3002\n\nApiCaller.swift\nimport SwiftTask\nimport Alamofire\nimport AlamofireObjectMapper\nimport ObjectMapper\n\nclass ApiCaller<T: Mappable> {\n    typealias Promise = Task<Progress, T, Int>\n\n    class func call(context: Restable) -> Promise {\n        let task = Promise { progress, fulfill, reject, configure in\n            Alamofire.request(context)\n                .progress { bytesWritten, totalBytesWritten, totalBytesExpectedToWrite in\n                    progress((bytesWritten, totalBytesWritten, totalBytesExpectedToWrite) as Progress)\n            }.responseObject() { (response: Response<T, NSError>) in\n                    switch response.result {\n                    case .Success(let entity):\n                        fulfill(entity)\n                    case .Failure(let error):\n                        print(\"error:\\(error)\")\n                        reject((response.response?.statusCode)!)\n                    }\n            }\n        }\n        return task\n    }\n}\n\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306e\u30b5\u30fc\u30d3\u30b9\n\u4e0a\u90e8\u306eRealmSwift\u3067\u898b\u305f\u30b5\u30fc\u30d3\u30b9\u306e\u8a73\u7d30\u90e8\u5206\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306e\u5f79\u5272\u4ee5\u5916\u306b\u3001SwiftTask\u306e\u7d50\u679c\u3092\u51e6\u7406\u3059\u308b\u5f79\u5272\u3082\u6301\u3061\u307e\u3059\u3002\u5b9f\u969b\u306e\u51e6\u7406\u306f\u96c6\u7d04\u30af\u30e9\u30b9\u306b\u79fb\u8b72\u3057\u307e\u3059\u3002\n\nWeatherService.swift\nimport SwiftTask\n\nclass WeatherService {\n    private let locator: ServiceLocator!\n    private let weather: Weather!\n\n    init(locator: ServiceLocator = ServiceLocatorImpl.sharedInstance, weather: Weather = WeatherFactory.sharedInstance) {\n        self.locator = locator\n        self.weather = weather\n    }\n    func fetchWeather() {\n        let task = weather.fetchWeather()\n        task.success { [unowned self] entity -> Void in\n            entity.cityCode = self.weather.cityCode.value!\n            let tx: TransactionTemplate = self.locator.lookup()\n            tx.execute(errorObservable: self.weather.errorState) {\n                self.weather.changeForecasts(entity)\n            }\n        }.failure { error, isCancelled in\n            var handler: ApiErrorHandler = self.locator.lookup()\n            handler.notFound = {\n                self.weather.clearForecasts()\n            }\n            handler.handle(error!, isCancelld: isCancelled, errorObservable: self.weather.errorState)\n        }\n    }\n\n\n\u308f\u3056\u308f\u3056init \u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u7406\u7531\u306f\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u3084\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\u30d7\u30ed\u30c0\u30af\u30c8\u4e0a\u3067\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fWeatherService() \u3067\u884c\u3044\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u6642\u306f\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3057\u307e\u3059\u3002\n\nWeatherServiceTest.swift\n\u30fb\u30fb\u30fb\n    func test_fetchWeatherInApp() {\n\n        class MockWeather: Weather {\n            var wasCalled = false\n            override func fetchWeatherInApp() {\n                self.wasCalled = true\n            }\n        }\n\n        let mock = MockWeather()\n\n        let target = WeatherService(weather: mock)\n        target.fetchWeatherInApp()\n        XCTAssertTrue(mock.wasCalled);\n    }\n\u30fb\u30fb\u30fb\n\n\n\u307e\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u5171\u901a\u306b\u306a\u308b\u306e\u3067\u5225\u30af\u30e9\u30b9\u306b\u3057\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u3067\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3054\u3068\u306b\u30c9\u30e1\u30a4\u30f3\u306e\u72b6\u614b\u3092\u5909\u5316\u3055\u305b\u307e\u3059\u3002\nAPI\u3067\u5fc5\u8981\u306a\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u5168\u3066\u3053\u306e\u30af\u30e9\u30b9\u306b\u66f8\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\nApiErrorHandlerImpl.swift\nclass ApiErrorHandlerImpl: ApiErrorHandler {\n\n    var unexpected = { }\n    var notFound = { }\n\n    func handle(error: Int, isCancelld: (Bool), errorObservable: Observable<Exception>) {\n        switch error {\n        case 404:\n            notFound()\n            errorObservable.next(.NotFound)\n        default:\n            unexpected()\n            errorObservable.next(.Unexpected)\n            break\n        }\n    }\n}\n\n\n\nSwiftBond\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\nBond\u7528\u306b\u62e1\u5f35\u3057\u307e\u3059\u3002ObservableType\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u305d\u306e\u4e2d\u3067Bond\u306e\u51e6\u7406\u3092\u9589\u3058\u8fbc\u3081\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u306f\u30dc\u30a4\u30e9\u30fc\u30b3\u30fc\u30c9\u306a\u306e\u3067\u5c11\u3057\u8003\u3048\u76f4\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u304c\u3001\u826f\u3044\u65b9\u6cd5\u304c\u601d\u3044\u3064\u304b\u306a\u3044\u306e\u3067\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nWeatherEntity.swift\n\u30fb\u30fb\u30fb\nextension WeatherEntity {\n    class ObservableType {\n        let observableForecasts = ObservableArray<ForecastEntity>()\n        let observableTitle: Observable<String> = Observable(\"\")\n\n        init(entity: WeatherEntity) {\n            self.changeForecasts(entity.forecasts)\n            self.observableTitle.next(entity.title)\n        }\n\n        func changeForecasts(forecasts: List<ForecastEntity>) {\n            self.observableForecasts.removeAll()\n            let entities = self.convertToArray(forecasts)\n            self.observableForecasts.extend(entities)\n        }\n\n        func clearForecasts() {\n            self.observableForecasts.removeAll()\n        }\n\n        func changeTitle(title: String) {\n            self.observableTitle.next(title)\n        }\n\n        private func convertToArray(list: List<ForecastEntity>) -> [ForecastEntity] {\n            var entities = [ForecastEntity]()\n            list.forEach { entity in\n                entities.append(entity)\n            }\n            return entities\n        }\n    }\n\n    func observableType() -> WeatherEntity.ObservableType {\n        return ObservableType(entity: self)\n    }\n}\n\n\n\n\u96c6\u7d04\n\u901a\u5e38\u3067\u3042\u308c\u3070\u4e0a\u8a18\u306eWeatherEntity\u304c\u30eb\u30fc\u30c8\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u306a\u308a\u307e\u3059\u304c\u3001Bond\u3067\u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u96c6\u7d04\u30af\u30e9\u30b9\u3092\u5225\u9014\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u304c\u51e6\u7406\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u901a\u3057\u3066\u4ed6\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u6271\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001Bond\u3067\u3001\u3053\u306e\u30af\u30e9\u30b9\u306e\u72b6\u614b\u306b\u3088\u3063\u3066\u753b\u9762\u9077\u79fb\u306a\u308a\u3001\u69d8\u3005\u306a\u51e6\u7406\u304c\u52d5\u304f\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nWeather.swift\nimport Bond\nimport SwiftTask\n\nclass Weather {\n    typealias Promise = Task<Progress, WeatherEntity, Int>\n\n    private(set) var repository: WeatherRepository!\n    private(set) var entity: WeatherEntity.ObservableType!\n    private(set) var dataSource: ObservableArray<ObservableArray<ForecastEntity>>!\n    private(set) var cityCode: Observable<String?>!\n    private(set) var transitionState: Observable<TransitionState>!\n    private(set) var errorState: Observable<Exception>!\n\n    //private init() { }\n\n    func toThird() {\n        if errorState.value == .None {\n            self.transitionState.next(TransitionState.Start)\n        } else {\n            self.errorState.next(.NotFound)\n        }\n    }\n\n    func fetchWeather() -> Promise {\n        return repository.fetchWeather(cityCode.value!)\n    }\n\n    func changeForecasts(entity: WeatherEntity) {\n        self.entity.changeForecasts(entity.forecasts)\n        repository.deleteAll()\n        repository.save(entity)\n    }\n\n    func clearForecasts() {\n        self.entity.clearForecasts()\n    }\n\n    func fetchWeatherInApp() {\n        if let entity: WeatherEntity = repository.find()!.last {\n            self.entity.changeTitle(entity.title)\n            self.entity.changeForecasts(entity.forecasts)\n        }\n    }\n}\n\n\n\u307e\u305f\u3001\u96c6\u7d04\u30af\u30e9\u30b9\u306f\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u3067\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u521d\u306f private init() \u306b\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u3046\u3059\u308b\u3068\u5358\u4f53\u30c6\u30b9\u30c8\u6642\u306bWeather\u3092\u7d99\u627f\u3055\u305b\u305f\u30e2\u30c3\u30af\u3092\u4f5c\u308c\u306a\u3044\u306e\u3067\u3001private\u306f\u6b62\u3081\u307e\u3057\u305f\u3002\ndestoroy() \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u307e\u3067\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8fd4\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nWeather.swift\nclass WeatherFactory {\n    private static var weather: Weather?\n\n    static var sharedInstance: Weather {\n        if let cache = self.weather {\n            return cache\n        }\n        self.weather = self.instance\n        self.weather!.repository = self.repository\n        self.weather!.entity = WeatherEntity().observableType()\n        self.weather!.cityCode = Observable<String?>(\"130010\")\n        self.weather!.transitionState = Observable<TransitionState>(.None)\n        self.weather!.errorState = Observable<Exception>(.None)\n        self.weather!.dataSource = ObservableArray<ObservableArray<ForecastEntity>>([self.weather!.entity.observableForecasts])\n        return self.weather!\n    }\n\n    class var repository: WeatherRepository! {\n        let locator = ServiceLocatorImpl.sharedInstance\n        let repository: WeatherRepository = locator.lookup()\n        return ImplicitlyUnwrappedOptional(repository)\n    }\n\n    class var instance: Weather {\n        return Weather()\n    }\n\n    static func destroy() {\n        self.weather = nil\n    }\n}\n\n\n\u4e00\u90e8\u3001static\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u306a\u304fclass\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u3066\u3044\u308b\u7406\u7531\u306f\u5358\u4f53\u30c6\u30b9\u30c8\u3067\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3067\u30e2\u30c3\u30af\u3092\u8fd4\u305b\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\nWeatherServiceTest.swift\n\u30fb\u30fb\u30fb\n    func test_fetchWeather_failure() {\n        class MockFactory: WeatherFactory {\n            override class var instance: Weather {\n                return MockWeather()\n            }\n        }\n\n        let locator = MockLocator.sharedInstance\n        let target = WeatherService(locator: locator, weather: MockFactory.sharedInstance)\n        target.fetchWeather()\n\u30fb\u30fb\u30fb\n\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\nBond\u3067\u753b\u9762\u8981\u7d20\u3068\u30c9\u30e1\u30a4\u30f3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u63a5\u7d9a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u304c\u753b\u9762\u3092\u3044\u3058\u308b\u3068Bond\u3092\u901a\u3058\u3066\u30c9\u30e1\u30a4\u30f3\u306e\u5024\u304c\u5909\u308f\u308a\u3001\u307e\u305f\u3001\u30c9\u30e1\u30a4\u30f3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3067\u753b\u9762\u9077\u79fb\u3084\u30a8\u30e9\u30fc\u8868\u793a\u304c\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u30fb\u30fb\u30fb\n    @IBOutlet weak var cityCode: UITextField!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        WeatherFactory.sharedInstance.cityCode.bidirectionalBindTo(cityCode.bnd_text)\n        WeatherFactory.sharedInstance.transitionState.observeNew { state in\n            switch state {\n            case .Start:\n                self.performSegueWithIdentifier(\"toThird\", sender: self)\n                break\n            default:\n                break\n            }\n        }\n        WeatherFactory.sharedInstance.errorState.observeNew { state in\n            switch state {\n            case .NotFound:\n                let alertController = UIAlertController(title: \"\u691c\u7d22\u7d50\u679c\u304c\u3042\u308a\u307e\u305b\u3093\", message: \"\", preferredStyle: .Alert)\n                let okAction = UIAlertAction(title: \"OK\", style: .Cancel) { alert in\n                    print(alert)\n                }\n                alertController.addAction(okAction)\n                self.presentViewController(alertController, animated: true, completion: nil)\n                break\n            default:\n                break\n            }\n        }\n    }\n\n\n\u305d\u306e\u4ed6\n\nValueObject\nValueObject\u306fimmutable(\u4e0d\u5909)\u306b\u3059\u308b\u306e\u3067struct\u306b\u3059\u308b\u306e\u304c\u666e\u901a\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306eTemperature\u306b\u95a2\u3057\u3066\u306f\u3001Realm\u3067\u4fdd\u5b58\u3057\u305f\u3044\u305f\u3081\u306bclass\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u307b\u3068\u3093\u3069Entity\u3068\u540c\u3058\u3067\u3059\u3002\nTemperature\u30af\u30e9\u30b9\u81ea\u4f53\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u306a\u3044(\u5e38\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u308b)\u306e\u3067\u4e0d\u5909\u3067\u3059\u304c\u3001Bond\u3092\u4fdd\u6301\u3059\u308bTemperature.ObservableType\u30af\u30e9\u30b9\u306f\u5909\u5316\u3057\u307e\u3059\u3002\u305d\u3046\u3044\u3046\u610f\u5473\u3067\u672c\u6765\u306eValueObject\u3068\u306f\u9055\u3046\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\nTemperature.swift\nclass Temperature: Object {\n    private(set) var celsius = \"\"\n    private(set) var fahrenheit = \"\"\n\n    convenience init(celsius: String, fahrenheit: String) {\n        self.init()\n        self.celsius = celsius\n        self.fahrenheit = fahrenheit\n    }\n    required convenience init?(_ map: Map) {\n        self.init()\n    }\n}\n\nextension Temperature {\n    class ObservableType {\n        private(set) var celsius = Observable(\"\")\n        private(set) var fahrenheit = Observable(\"\")\n\n        init(_ type: Temperature) {\n            self.celsius.next(type.celsius)\n            self.fahrenheit.next(type.fahrenheit)\n        }\n    }\n\n    func observableType() -> Temperature.ObservableType {\n        return ObservableType(self)\n    }\n}\n\nextension Temperature: Mappable {\n    func mapping(map: ObjectMapper.Map) {\n        self.celsius <- map[\"celsius\"]\n        self.fahrenheit <- map[\"fahrenheit\"]\n    }\n}\n\n\n\u672c\u6765\u306eValueObject\u3068\u3057\u3066\u306f\u3001enum\u306f\u6b63\u3057\u3044\u3067\u3057\u3087\u3046\u3002\n\nException.swift\nenum Exception: ErrorType {\n    // \u3000\u306a\u3057\n    case None\n    // \u4e88\u671f\u305b\u306c\u4f8b\u5916\u3002\u56de\u5fa9\u4e0d\u80fd\u306a\u4f8b\u5916\u3002\n    case Unexpected\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u5916\u3002\u56de\u5fa9\u4e0d\u80fd\u306a\u4f8b\u5916\u3002\n    case ProgramError\n    // Realm\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u521d\u671f\u5316\u4f8b\u5916\u3002\n    // \u4e00\u822c\u7684\u306a\u30c7\u30a3\u30b9\u30afI/O\u306e\u51e6\u7406\u3068\u540c\u69d8\u306b\u3001Realm\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\u306f\u30ea\u30bd\u30fc\u30b9\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u74b0\u5883\u4e0b\u3067\u306f\u5931\u6557\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u5b9f\u969b\u306f\u3001\u5404\u30b9\u30ec\u30c3\u30c9\u306b\u304a\u3044\u3066\u6700\u521d\u306bRealm\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u304d\u3060\u3051\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n    case LackResources\n    case NotFound\n}\n\n\n\u305d\u306e\u4ed6\u3088\u304f\u4f5c\u308b\u6b63\u3057\u3044ValueObject\u3068\u3057\u3066\u306f\u3001\u4f8b\u3048\u3070UIDevice\u306e\u60c5\u5831\u3092\u5b9a\u6570\u3067\u4fdd\u6301\u3059\u308bstruct\u3067\u3059\u3002\uff08\u3082\u3061\u308d\u3093\u3001Device\u306b\u95a2\u9023\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u305f\u305b\u307e\u3059\uff09\n\u3053\u3046\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u306fUIDevice(\u8aac\u660e\u306e\u305f\u3081UIDevice\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001\u4ed6\u306e\u30af\u30e9\u30b9\u3067\u3082\u540c\u69d8)\u306eios\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u308b\u9055\u3044\u3092\u3053\u306e\u30af\u30e9\u30b9\u3067\u5438\u53ce\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002\n\u8272\u3005\u306a\u30af\u30e9\u30b9\u306b\u70b9\u5728\u3059\u308b\u3088\u308a\u3082\u4e00\u3064\u306e\u30af\u30e9\u30b9\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u305f\u65b9\u304c\u5bfe\u5fdc\u304c\u7c21\u5358\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\nDevice.swift\nimport UIKit\n\nstruct Device {\n    let iosVersion = UIDevice.currentDevice().systemVersion\n    let modelName = UIDevice.currentDevice().model\n\u30fb\u30fb\u30fb\n\n\n\n\u30b5\u30fc\u30d3\u30b9\u30ed\u30b1\u30fc\u30bf\u30fc\n\u6700\u521d\u306b\u8a71\u3057\u3066\u3044\u305f\u30b5\u30fc\u30d3\u30b9\u30ed\u30b1\u30fc\u30bf\u30fc\u3067\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306e\u304a\u304b\u3052\u3067\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7c21\u5358\u306b\u7dad\u6301\u3067\u304d\u307e\u3059\u3002\n\u547d\u540d\u898f\u7d04(\u5b9f\u88c5\u306b\u306fprotocol\u540d+Impl\u3068\u3057\u3066\u3044\u308b)\u3067\u53d6\u5f97\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3001add \u30e1\u30bd\u30c3\u30c9\u3067closure\u3092\u6e21\u3059\u3088\u3046\u306b\u3057\u3001lookup \u6642\u306bclosure\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u90fd\u5ea6\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u306f\u3001T\u578b\u3092\u5f15\u6570\u306b\u6e21\u3059 add \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\nServiceLocator.swift\nprotocol ServiceLocator {\n\n    static var sharedInstance: ServiceLocator { get }\n    func add<T>(recipe: () -> T)\n    func lookup<T>() -> T\n}\n\n\n\nServiceLocatorImpl.swift\nclass ServiceLocatorImpl: ServiceLocator {\n\n    private lazy var container: Dictionary < String, () -> Any > = [:]\n\n    private static let singleton = ServiceLocatorImpl()\n\n    static var sharedInstance: ServiceLocator { return singleton }\n\n    private init() {\n    }\n\n    func add<T>(recipe: () -> T) {\n        let key = typeName(T)\n        container[key] = recipe\n    }\n\n    func lookup<T>() -> T {\n        let key = typeName(T)\n        return container[key]!() as! T\n    }\n\n    private func typeName<T>(some: T.Type) -> String {\n        // \u547d\u540d\u898f\u7d04\u3067\u52d5\u4f5c\n        return \"\\(some)\".stringByReplacingOccurrencesOfString(\"Impl\", withString: \"\")\n    }\n}\n\n\n\n\u307e\u3068\u3081\n\u3053\u306e\u8a18\u4e8b\u306e\u3088\u3046\u306b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306e\u4ed5\u7d44\u307f\u3092\u304d\u3061\u3093\u3068\u4f5c\u3063\u3066\u304a\u304f\u3068\u672c\u8cea\u7684\u306a\u5b9f\u88c5\u3092\u3059\u308b\u3060\u3051\u3067\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u307b\u3068\u3093\u3069\u306e\u51e6\u7406\u306f\u5171\u901a\u5316\u3055\u308c\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f5c\u6210\u3059\u308b\u306e\u306f\u3001\u4ee5\u4e0b\u3060\u3051\u306b\u306a\u308a\u307e\u3059\u3002\n\nRepository\u306eprotocol\u3068class\n\n\nAPI\u547c\u3073\u51fa\u3057\u306b\u3064\u304d\u3001\u30e1\u30bd\u30c3\u30c9\u30011\u884c\u3002\nAPI\u547c\u3073\u51fa\u3057\u306b\u3064\u304d\u3001\u4e00\u3064\u306eFetchContext\u30af\u30e9\u30b9\n\u5fc5\u8981\u3067\u3042\u308c\u3070\u8907\u96d1\u306aDB\u691c\u7d22\u30e1\u30bd\u30c3\u30c9\n\n\nController\n\n\nBond\u3068\u30c9\u30e1\u30a4\u30f3\u306e\u63a5\u7d9a\n\u30c9\u30e1\u30a4\u30f3\u306e\u76e3\u8996\u3068\u753b\u9762\u66f4\u65b0\n\u30dc\u30bf\u30f3\u62bc\u4e0b\u306a\u3069\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306e\u547c\u3073\u51fa\u3057\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306eService\n\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5358\u4f4d\u3067\u307e\u3068\u3081\u3089\u308c\u305f\u30c9\u30e1\u30a4\u30f3\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\n\u30a8\u30e9\u30fc\u3092\u4f1d\u3048\u308bBond\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a\n\n\nEntity\u3068ValueObject\n\n\nBond\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\nDB\u306b\u4fdd\u5b58\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\n\u30c9\u30e1\u30a4\u30f3\u56fa\u6709\u306e\u51e6\u7406\u30fb\u30c9\u30e1\u30a4\u30f3\u72b6\u614b\u306e\u5909\u66f4\n\n\n\n\u3053\u306e\u3046\u3061\u307b\u3068\u3093\u3069\u306e\u51e6\u7406\u306f\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u304f\u306f\u305a\u3067\u3059\u3002\n\u3064\u307e\u308a\u672c\u8cea\u7684\u306a\u30ed\u30b8\u30c3\u30af\u306b\u96c6\u4e2d\u3057\u3084\u3059\u304f\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\nSwift\u3067ios\u958b\u767a\u3092\u3059\u308b\u3068\u304d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\u3059\u3067\u306b\u3044\u304f\u3064\u304b\u826f\u3044\u8a18\u4e8b\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u3092\u53c2\u8003\u306b\u4f5c\u308b\u306e\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001Web\u958b\u767a\u3067\u6163\u308c\u89aa\u3057\u3093\u3060DDD\u3067\u306f\u3069\u3046\u306a\u308b\u306e\u304b\u3068\u601d\u3044\u8a66\u3057\u307e\u3057\u305f\u3002\n\n\u7d50\u8ad6\u304b\u3089\u3059\u308b\u3068ios\u958b\u767a\u3067\u306f\u3001DDD\u3092\u305d\u306e\u307e\u307e\u3084\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u3042\u304f\u307e\u3067DDD\u3063\u307d\u304f\u3084\u308b\u306e\u304c\u751f\u7523\u6027\u304c\u9ad8\u305d\u3046\u3067\u3059\u3002\n\n\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308b[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/susieyy/items/2af5321b287b8d2f49f6)\u3067\u3082ios\u958b\u767a\u306b\u5408\u3063\u305fMVVM\u98a8\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3057\u3001\u79c1\u81ea\u8eab\u3001\u539f\u7406\u4e3b\u7fa9\u7684\u306b\u3084\u308b\u3088\u308a\u3082\u305d\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5408\u3046\u3088\u3046\u306b\u67d4\u8edf\u306b\u3084\u308b\u306e\u304c\u597d\u304d\u3067\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3001\u306a\u308b\u3079\u304f\u672c\u8cea\u7684\u306a\u5b9f\u88c5\u306b\u5c02\u5ff5\u3067\u304d\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u30bf\u30a4\u30c8\u30eb\u306e\u300c\u30e2\u30c0\u30f3\u306a\u300d\u306f\u5358\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30e2\u30c0\u30f3\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\nDDD\u306b\u8208\u5473\u304c\u306a\u304f\u3066\u3082\u3053\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5229\u7528\u65b9\u6cd5\u3067\u591a\u5c11\u306a\u308a\u3068\u3082\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n* Bond\n* Alamofire\n* ObjectMapper\n* AlamofireObjectMapper\n* SwiftTask\n* RealmSwift\n\n\u307e\u305f\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u3084\u3059\u3055\u3082\u975e\u5e38\u306b\u5927\u4e8b\u306a\u306e\u3067\u3001\u305d\u3053\u3082\u6c17\u306b\u304b\u3051\u307e\u3059\u3002\n\n\u80fd\u66f8\u304d\u304c\u5acc\u3044\u306a\u4eba\u306f\u30b3\u30fc\u30c9\u306e\u7ae0\u3092\u898b\u3066\u3001\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3089\u4ed6\u306e\u90e8\u5206\u3082\u8aad\u3081\u3070\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n# DDD\u3063\u307d\u304f\u306a\u3044\u3068\u3053\u308d\n\n* \u30c9\u30e1\u30a4\u30f3\u5c64\u3082\u7279\u5b9a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\n\n\u305d\u3046\u3044\u3046\u610f\u5473\u3067\u3001\u5168\u7136\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3058\u3083\u306a\u3044\u3067\u3059\u3002\n\n\u30c9\u30e1\u30a4\u30f3\u304c\u3001Bond\u306b\u3082\u308d\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u304cViewModel\u3063\u307d\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nBond\u3092\u4f7f\u3046\u3068\u5927\u62b5\u305d\u3046\u306a\u308a\u307e\u3059\u304c\u3001\u958b\u767a\u52b9\u7387\u304c\u826f\u3044\u306e\u3067\u3053\u3046\u3057\u3066\u3044\u307e\u3059\u3002\n\n* \u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u3068\u8a00\u3044\u306a\u304c\u3089\u753b\u9762\u3042\u308a\u304d\n\nBond\u304c\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u3042\u308b\u304b\u3089\u3067\u3059\u3002\n\u305f\u3060\u3001UI\u5c64\u3084\u30a4\u30f3\u30d5\u30e9\u5c64\u3092\u307e\u308b\u3063\u3068\u5909\u3048\u3066\u3082\u305d\u3093\u306a\u306b\u30c9\u30e1\u30a4\u30f3\u5c64\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u304b\u3089\u958b\u767a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\n\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\n\u30a8\u30ea\u30c3\u30af\u30a8\u30f4\u30a1\u30f3\u30b9\u306eDDD\u672c\u3067\u306f\u3001\u307b\u307c\u4ee5\u4e0b\u306e\u56f3\u3067\u3059\u3002\nDDD\u3068\u3044\u3046\u4ee5\u524d\u306b\u3001\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306f\u4f9d\u5b58\u306e\u65b9\u5411\u6027\u306f\u4e00\u65b9\u5411\u306b\u4f5c\u308a\u307e\u3059\u3002\n\u81ea\u5206\u3082Java\u3067Web\u958b\u767a\u306e\u6642\u306f\u3001\u30ec\u30a4\u30e4\u30fc\u3054\u3068\u306b\u30de\u30eb\u30c1\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u3057\u3066\u3001\u9006\u5411\u304d\u306e\u4f9d\u5b58\u304c\u7d76\u5bfe\u306b\u8d77\u304d\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\uff08\u4e00\u3064\u306e\u6307\u91dd\u3068\u3057\u3066\u4e0a\u4f4d\u5c64\u304b\u3089\u9806\u306b\u5c64\u3092\u524a\u9664\u3057\u3066\u3044\u3063\u3066\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u306a\u3044\u72b6\u614b\u3067\u3042\u308c\u3070\u3001\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u8a00\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\uff09\n\n![layer-architecture.png](https://qiita-image-store.s3.amazonaws.com/0/10494/8815f493-3d72-d74b-2714-92fe0c9f62fc.png \"layer-architecture.png\")\n\n\n\u3067\u3001\u3053\u308c\u3092\u4e00\u6b69\u9032\u3081\u3066\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u306f\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u4f9d\u5b58\u3055\u305b\u305f\u304f\u306a\u3044\u306e\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u306bprotocol\u3092\u7f6e\u3044\u3066\u3001DI\u3067\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u6ce8\u5165\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u3059\u308b\u3068\u30d8\u30ad\u30b5\u30b4\u30ca\u30eb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u767a\u5c55\u3057\u3066\u3044\u304f\u306e\u3060\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\uff08\u30a8\u30f4\u30a1\u30f3\u30b9\u306eDDD\u3082\u3064\u307e\u308b\u3068\u3053\u308d\u540c\u3058\u3053\u3068\u3092\u8a00\u3063\u3066\u308b\u3068\u601d\u3044\u307e\u3059\u3002\uff09\n\n![ Hexagonal.png](https://qiita-image-store.s3.amazonaws.com/0/10494/04e29dde-73ea-2dfe-9f9d-86f24d3ce1c7.png \" Hexagonal.png\")\n\n\u4e0a\u8a18\u306e\u56f3\u306e\u77e2\u5370\u306f\u4f9d\u5b58\u6027\u306e\u65b9\u5411\u3067\u3059\u3002\u56f3\u306b\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u30a4\u30f3\u30d5\u30e9\u5c64\u3078\u306e\u65b9\u5411\u306b\u7d99\u627f\u306e\u77e2\u5370\u304c\u5f15\u304b\u308c\u307e\u3059\u3002\n\n\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306bServiceLocator\u7d4c\u7531\u3067Repository\u3092\u53d6\u5f97\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002\n\u304c\u3001\u73fe\u5728\u306eSwift\u306e\u4ed5\u69d8\u4e0a\u3001```associatedtype``` \u306e\u3042\u308bprotocol\u3092generics\u3092\u5229\u7528\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u8a71\u3067\u3059\u3002\n\n```\nfunc lookup<T: Storable>() -> T?\n```\n\n \u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u3001\n\n```\nlet repository: WeatherRepository? = RepositoryLocator.sharedInstance.lookup()\n```\n\n\u3067protocol\u3092\u53d6\u5f97\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3057\u305f\u3002\n\n```\nProtocol 'WeatherRepository' can only be used as a generic constraint because it has Self or associated type requirements\n```\n\n\u539f\u56e0\u306f\u3001WeatherRepository\u306bassociatedtype\u3092\u4f7f\u3063\u3066\u3044\u305f\u305f\u3081\u3067\u3059\u3002Generics\u3092\u5229\u7528\u3059\u308b\u66d6\u6627\u306aprotocol\u306f\u3001\u5909\u6570\u306e\u578b\u3068\u3057\u3066\u5ba3\u8a00\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3002(\u306a\u306e\u3067DI\u306a\u4ed5\u7d44\u307f\u306b\u3057\u3066\u3082\u305d\u3053\u304c\u5909\u308f\u3089\u306a\u3051\u308c\u3070\u540c\u69d8\u3067\u3059\u3002)\n\n```\nprotocol WeatherRepository: AppRepository {\n    associatedtype T = WeatherEntity\n\u30fb\u30fb\u30fb\n// realm\u3092\u6271\u3046\u30af\u30e9\u30b9\nprotocol AppRepository: Storable {\n    associatedtype T: Object\n    func save(entity: Self.T)\n\u30fb\u30fb\u30fb\n```\n\n\u578b\u5ba3\u8a00\u3067associatedtype(\u62bd\u8c61\u578b)\u3092\u4f7f\u3048\u306a\u3044\u3068\u958b\u767a\u52b9\u7387\u304c\u843d\u3061\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408\u3001AppRepository(Realm\u306e\u51e6\u7406\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b)\u3092\u7d99\u627f\u3057\u3066\u3044\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306eRepository\u3067find\u3084\u3089save\u3084\u3089\u306e\u5b9a\u578b\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5ba3\u8a00\u3057\u306a\u304f\u3066\u826f\u3044\u306e\u3067\u3059\u3002\n\n\u3082\u3063\u3068\u8a00\u3048\u3070\u3001protocol\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u3001\u30af\u30e9\u30b9\u4e00\u3064\u3067Realm\u306e\u3059\u3079\u3066\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u64cd\u4f5c\u306e\u307b\u3068\u3093\u3069\u3092\u8cc4\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001\u30ec\u30a4\u30e4\u30fc\u306e\u4f9d\u5b58\u3092\u6b63\u3057\u304f\u4fdd\u3064\u3088\u308a\u3082\u3001\u30b3\u30fc\u30c9\u8a18\u8ff0\u91cf\u3092\u6e1b\u3089\u3059\u3053\u3068\u306e\u5229\u70b9\u3092\u8003\u3048\u3066\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u3068\u30a4\u30f3\u30d5\u30e9\u5c64\u3092\u7de9\u3084\u304b\u306b\u4f9d\u5b58\u3057\u3066\u3082\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001DDD(\u98a8)\u3092\u540d\u4e57\u3063\u3066\u3044\u308b\u306e\u3067\u3001associatedtype\u3067\u66f8\u304f\u3053\u3068\u3092\u8ae6\u3081\u3066\u3001\u611a\u76f4\u306b\u66f8\u304f\u3053\u3068\u3067\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b88\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u3066\u5909\u66f4\u3057\u305f\u56f3\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n![ios-architecture.png](https://qiita-image-store.s3.amazonaws.com/0/10494/07812719-d328-ea38-e1c1-313759553218.png \"ios-architecture.png\")\n\n\n\n\u307e\u305f\u3001\u5229\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u88dc\u8db3\u3068\u3057\u3066\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u304b\u3089\u30c9\u30e1\u30a4\u30f3\u5c64\u306e\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u623b\u308a\u5024\u306fSwiftTask\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n* UI\u5c64\u3068\u30c9\u30e1\u30a4\u30f3\u5c64\u306fSwiftBond\u3067\u53cc\u65b9\u5411\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081UI\u5c64\u304b\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u3078\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u4ee5\u4e0b\u306f\u30ec\u30a4\u30e4\u30fc\u304c\u4f55\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u304b\u306e\u56f3\u306b\u306a\u308a\u307e\u3059\u3002\n\n![ios-library.png](https://qiita-image-store.s3.amazonaws.com/0/10494/6aeef618-d603-c79e-e9b6-877b67968022.png \"ios-library.png\")\n\n\n## \u30ec\u30a4\u30e4\u30fc\u306e\u69cb\u6210\u8981\u7d20\n\n\u7c21\u5358\u306b\u30a8\u30f4\u30a1\u30f3\u30b9\u306e\u30ec\u30a4\u30e4\u30fc\u30fb\u69cb\u6210\u8981\u7d20\u306e\u8aac\u660e\u3068\u4eca\u56de\u306e\u5834\u5408\u306e\u8aac\u660e\u3092\u8a18\u8ff0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## \u30a4\u30f3\u30d5\u30e9\u5c64\n\n\u4ed6\u306e3\u5c64\u3092\u652f\u3048\u308b\u6280\u8853\u7684\u306a\u57fa\u76e4\u3068\u306a\u308b\u5c64\u3067\u3059\u3002\n\n\u30a8\u30f4\u30a1\u30f3\u30b9\u306b\u3088\u308b\u3068\n>\u4e0a\u4f4d\u306e\u30ec\u30a4\u30e4\u3092\u652f\u3048\u308b\u4e00\u822c\u7684\u306a\u6280\u8853\u7684\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u3002\u3053\u308c\u306b\u306f\u30a2\u30d5\u309a\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u30e1\u30c3\u30bb\u30fc\u30b7\u3099\u9001\u4fe1\u3001\u30c8\u3099\u30e1\u30a4\u30f3\u306e\u305f\u3081\u306e\u6c38\u7d9a\u5316\u3001\u30e6\u30fc\u30b5\u3099\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u305f\u3081\u306e\u30a6\u30a3\u30b7\u3099\u30a7\u30c3\u30c8\u63cf\u753b\u306a\u3068\u3099\u304b\u3099\u3042\u308b\u3002\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u5c64\u306f\u3001\u3053\u3053\u3066\u3099\u793a\u30594\u5c64\u805e\u306b\u304a\u3051\u308b\u76f8\u4e92\u4f5c\u7528\u306e\u30cf\u309a\u30bf\u30fc\u30f3\u3082\u3001\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u901a\u3057\u3099\u3066\u30b5\u30db\u309a\u30fc\u30c8\u3059\u308b\u3053\u3068\u304b\u3099\u3042\u308b\u3002\n\n\u4eca\u56de\u306f\u3001Repository\u3068\u4ed6\u306e\u5c64\u3067\u5229\u7528\u3059\u308bService\u306e\u5b9f\u88c5\uff08\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30fbAPI\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306a\u3069\uff09\u3092\u7f6e\u304f\u5c64\u306b\u306a\u308a\u307e\u3059\u3002\n\n### Repository\n\n\u30c9\u30e1\u30a4\u30f3\u306a\u3069\u306e\u6c38\u7d9a\u5316\u6a5f\u69cb\u3092\u6271\u3046\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001UserDefaults\u3060\u3063\u305f\u308a\u3001Realm\u3060\u3063\u305f\u308a\u3001API\u3060\u3063\u305f\u308a\u3092\u6271\u3046\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n### Service\n\n\u30a4\u30f3\u30d5\u30e9\u56fa\u6709\u306e\u30b5\u30fc\u30d3\u30b9\u30ed\u30b8\u30c3\u30af\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\u4ed6\u306e\u5c64\u3067\u5229\u7528\u3059\u308b\u5b9f\u88c5\u30af\u30e9\u30b9\u3082\u542b\u307e\u308c\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001Realm\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6a5f\u69cb\u3060\u3063\u305f\u308a\u3001Api\u547c\u3073\u51fa\u3057\u306e\u5171\u901a\u51e6\u7406\u3060\u3063\u305f\u308a\u3001Api\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u3060\u3063\u305f\u308a\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n## \u30c9\u30e1\u30a4\u30f3\u5c64\n\n\u30a8\u30f4\u30a1\u30f3\u30b9\u306b\u3088\u308b\u3068\n>\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u306e\u6982\u5ff5\u3068\u3001\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u304b\u3099\u7f6e\u304b\u308c\u305f\u72b6\u6cc1\u306b\u95a2\u3059\u308b\u60c5\u5831\u3001\u304a\u3088\u3073\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u30eb\u30fc\u30eb\u3092\u8868\u3059\u8cac\u52d9\u3092\u8ca0\u3046\u3002\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u306e\u72b6\u6cc1\u3092\u53cd\u6620\u3059\u308b\u72b6\u614b\u306f\u3053\u3053\u3066\u3099\u5236\u5fa1\u3055\u308c\u4f7f\u7528\u3055\u308c\u308b\u304b\u3099\u3001\u305d\u308c\u3092\u683c\u7d0d\u3059\u308b\u3068\u3044\u3046\u6280\u8853\u7684\u306a\u8a73\u7d30\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306b\u59d4\u8b72\u3055\u308c\u308b\u3002\u3053\u306e\u5c64\u304b\u3099\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u6838\u5fc3\u3066\u3099\u3042\u308b\u3002\n\n### Entity\n\n\u8b58\u5225\u5b50\uff08\u30a2\u30a4\u30c7\u30f3\u30c6\u30a3\u30c6\u30a3\uff09\u304c\u3042\u308b\u30c7\u30fc\u30bf\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306e\u4e3b\u5f79\u306b\u306a\u308a\u307e\u3059\u3002\u5c5e\u6027\u304c\u9055\u3063\u3066\u3044\u3066\u3082\u8b58\u5225\u5b50\u3067\u540c\u4e00\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n### Value Object\n\n\u5c5e\u6027\u305d\u306e\u3082\u306e\u304c\u91cd\u8981\u3067\u3001\u8b58\u5225\u3059\u308b\u3053\u3068\u306b\u610f\u5473\u304c\u306a\u3044\u30c7\u30fc\u30bf\u3067\u3059\u3002\u7269\u4e8b\u306e\u6027\u8cea\u3092\u8868\u3059\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002immutable(\u4e0d\u5909)\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7c21\u5358\u306b\u8a00\u3046\u3068\u578b\u306b\u306a\u308a\u5f97\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u4eca\u56de\u306e\u5834\u5408\u306f\u3001Temperature\u578b\u3084\u3001enum\u3082\u3053\u3053\u306b\u542b\u3081\u307e\u3059\u3002\n\n### Aggregate\n\n\u5e38\u306b\u6574\u5408\u6027\u3092\u4fdd\u3063\u3066\u3044\u308b\u5fc5\u8981\u306e\u3042\u308b\u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb\u306e\u5358\u4f4d\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u8868\u73fe\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u96c6\u7d04\u306e\u4e2d\u306b\u4e00\u3064\u306e\u30eb\u30fc\u30c8\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u3042\u308a\u3001\u5916\u90e8\u53c2\u7167\u3067\u304d\u308b\u306e\u306f\u305d\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u307f\u306b\u3057\u307e\u3059\u3002\n\nios\u306e\u5834\u5408\u3001\u307b\u3068\u3093\u3069API\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u306e\u3067\u3001\u305d\u308c\u304c\u307b\u307c\u96c6\u7d04\u3063\u307d\u3044\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30af\u30e9\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306f\u3001Bond\u306eObserval\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6301\u3061\u3001API\u304b\u3089\u53d6\u5f97\u3057\u305f\u30eb\u30fc\u30c8\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4fdd\u6301\u3059\u308b\u30af\u30e9\u30b9\u3092\u96c6\u7d04\u3068\u547c\u3076\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n### Service\n\n1\u3064\u306e\u6a5f\u80fd\u3084\u51e6\u7406\u304c\u5358\u4f53\u3067\u5b58\u5728\u3057\u3066\u3044\u3066\u3001\u30e2\u30ce\u3068\u3057\u3066\u6271\u3046\u306e\u304c\u4e0d\u81ea\u7136\u306a\u3082\u306e\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u30e6\u30d3\u30ad\u30bf\u30b9\u8a00\u8a9e\u3067\u8868\u73fe\u3055\u308c\u308b\u3082\u306e\u3092\u30af\u30e9\u30b9\u306b\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u57fa\u672c\u7684\u306b\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u304c\u5165\u51fa\u529b\u306b\u306a\u308b\u3088\u3046\u306a\u632f\u308b\u821e\u3044\u3092\u6301\u3063\u305f\u30af\u30e9\u30b9\u306a\u3069\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u5229\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u4f55\u3092\u8a00\u3063\u3066\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070\u4f5c\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\n\u30a8\u30f4\u30a1\u30f3\u30b9\u306b\u3088\u308b\u3068\n>\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u884c\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u4ed5\u4e8b\u3092\u5b9a\u7fa9\u3057\u3001\u8868\u73fe\u529b\u8c4a\u304b\u306a\u30c8\u3099\u30e1\u30a4\u30f3\u30aa\u30d5\u3099\u30b7\u3099\u30a7\u30af\u30c8\u304b\u3099\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u3088\u3046\u306b\u5c0e\u304f\u3002\u3053\u306e\u30ec\u30a4\u30e4\u304b\u3099\u8cac\u52d9\u3092\u8ca0\u3046\u4f5c\u696d\u306f\u3001\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u306b\u3068\u3063\u3066\u610f\u5473\u304b\u3099\u3042\u308b\u3082\u306e\u304b\u3001\u3042\u308b\u3044\u306f\u4ed6\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30d5\u309a\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u3068\u76f8\u4e92\u4f5c\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u3082\u306e\u3066\u3099\u3042\u308b\u3002\n\u3053\u306e\u30ec\u30a4\u30e4\u306f\u8584\u304f\u4fdd\u305f\u308c\u308b\u3002\u30d2\u309a\u30b7\u3099\u30cd\u30b9\u30eb\u30fc\u30eb\u3084\u77e5\u8b58\u3092\u542b\u307e\u3059\u3099\u3001\u3084\u308b\u3078\u3099\u304d\u4f5c\u696d\u3092\u8abf\u6574\u3059\u308b\u305f\u3099\u3051\u3066\u3099\u3001\u5b9f\u969b\u306e\u51e6\u7406\u306f\u3001\u30c8\u3099\u30e1\u30a4\u30f3\u30aa\u30d5\u3099\u30b7\u3099\u30a7\u30af\u30c8\u306b\u3088\u3063\u3066\u76f4\u4e0b\u306e\u30ec\u30a4\u30e4\u3066\u3099\u5b9f\u884c\u3055\u308c\u308b\u5171\u540c\u4f5c\u696d\u306b\u59d4\u8b72\u3059\u308b\u3002\u30d2\u3099\u30b7\u3099\u30cd\u30b9\u306e\u72b6\u6cc1\u3092\u53cd\u6620\u3059\u308b\u72b6\u614b\u306f\u6301\u305f\u306a\u3044\u304b\u3099\u3001 \u30e6\u30fc\u30b5\u3099\u3084\u30d5\u309a\u30ed\u30af\u3099\u30e9\u30e0\u304b\u3099\u884c\u3046\u4f5c\u696d\u306e\u9032\u6357\u3092\u53cd\u6620\u3059\u308b\u72b6\u614b\u3092\u6301\u3064\u3053\u3068\u306f\u3066\u3099\u304d\u308b\u3002\n\n### Service\n\n\u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb\u306f\u306a\u304f\u3001\u8584\u3044\u30af\u30e9\u30b9\u306b\u3057\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u5c64\u306a\u3069\u3092\u547c\u3073\u51fa\u3057\u3066\u8abf\u6574\u4f5c\u696d\u3092\u3057\u307e\u3059\u3002\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u3068\u3057\u3066\u306e\u5f79\u5272\u3068\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3059\u308b\u5f79\u5272\u3092\u6301\u3061\u307e\u3059\u3002DB\u3067\u6c38\u7d9a\u5316\u3059\u308b\u3068\u304d\u3084API\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306f\u5fc5\u305a\u5229\u7528\u3057\u307e\u3059\u3002\n\n## UI\u5c64\n\n\u30a8\u30f4\u30a1\u30f3\u30b9\u306b\u3088\u308b\u3068\n>\u30e6\u30fc\u30b5\u3099\u306b\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u3001\u30e6\u30fc\u30b5\u3099\u306e\u30b3\u30de\u30f3\u30c8\u3099\u3092\u89e3\u91c8\u3059\u308b\u8cac\u52d9\u3092\u8ca0\u3046\u3002\u5916\u90e8\u30a2\u30af\u30bf\u306f\u4eba\u9593\u306e\u30e6\u30fc\u30b5\u3099\u3066\u3099\u306f\u306a\u304f\u3001\u5225\u306e\u30b3\u30f3\u30d2\u309a\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306e\u3053\u3068\u3082\u3042\u308b\u3002\n\nView\u3084Controller\u304c\u3042\u308b\u5c64\u3067\u3059\u3002\u3053\u3053\u306f\u3001\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n# \u30b3\u30fc\u30c9\n\n## RealmSwift\n\n\u307e\u305a\u306fDB\u5468\u308a\u306e\u8981\u7d20\u3002\n\n### \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\nRealmSwift\u306eObject\u3092\u7d99\u627f\u3057\u307e\u3059\u3002\u307e\u305f\u5909\u6570\u306bdynamic\u4fee\u98fe\u5b50\u3092\u3064\u3051\u307e\u3059\u3002\u914d\u5217\u306fList\u306b\u3057\u307e\u3059\u3002\n\n```WeatherEntity.swift\nimport RealmSwift\n\nclass WeatherEntity: Object {\n    dynamic var cityCode = \"\"\n    dynamic var title = \"\"\n    var forecasts = List<ForecastEntity>()\n\n    override static func primaryKey() -> String? {\n        return \"cityCode\"\n    }\n\u30fb\u30fb\u30fbAlamofire\u3068ObjectMapper\u306e\u51e6\u7406\u304c\u7d9a\u304f\n}\n```\n\n### \u30ec\u30dd\u30b8\u30c8\u30ea\n\nRealm\u304b\u3089\u53d6\u5f97\u3057\u305f\u308a\u3001\u4fdd\u5b58\u3057\u305f\u308a\u3059\u308b\u5f79\u5272\u3082\u6301\u3061\u307e\u3059\u3002\nAppRepository\u306f\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\nAppRepositoryImpl\u306f\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306b\u6c4e\u7528\u7684\u306aDB\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```AppRepository.swift\nprotocol  AppRepository: Storable {\n    associatedtype T: Object\n    func save(entity: T)\n    func find() -> Results<T>?\n    func deleteAll()\n}\n```\n\n```AppRepositoryImpl.swift\nimport RealmSwift\n\nclass AppRepositoryImpl<T : Object>: AppRepository {\n\n    func save(entity: T) {\n        try! RealmWrapper.sharedInstance().add(entity)\n    }\n\n    func find() -> Results<T>? {\n        return try! RealmWrapper.sharedInstance().objects(T)\n    }\n\n    func deleteAll() {\n        try! RealmWrapper.sharedInstance().deleteAll()\n    }\n}\n```\n\n### \u30a4\u30f3\u30d5\u30e9\u5c64\u306e\u30b5\u30fc\u30d3\u30b9 \n\n\u30b9\u30ec\u30c3\u30c9\u3054\u3068\u306erealm\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u6301\u3057\u3066\u304a\u304f\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u3067\u30b5\u30fc\u30d3\u30b9\u5c64\uff08\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\uff09\u3068\u30ec\u30dd\u30b8\u30c8\u30ea\u3067\u540c\u3058Realm\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\n\n```RealmWrapper.swift\nimport RealmSwift\n\nclass RealmWrapper {\n\n    private static var realmPerThread: Dictionary < String, Realm > = [:]\n\n    private init() { }\n\n    static func sharedInstance() throws -> Realm {\n        var realm = self.realmPerThread[self.threadId()]\n        if realm == nil {\n            do {\n                realm = try Realm()\n                self.realmPerThread[threadId()] = realm\n            } catch let error as RealmSwift.Error {\n                print(\"Realm init error: \\(error)\")\n                switch error {\n                case .FileAccess:\n                    throw Exception.LackResources\n                case .Fail:\n                    throw Exception.Unexpected\n                default:\n                    throw Exception.ProgramError\n                }\n            } catch {\n                print(\"Realm init error: unexpected\")\n                throw Exception.Unexpected\n            }\n        }\n        return realm!\n    }\n\n    static func destroy() {\n        self.realmPerThread.removeValueForKey(self.threadId())\n    }\n\n    private static func threadId() -> String {\n        let id = \"\\(NSThread.currentThread())\"\n        print(id)\n        return id\n    }\n}\n```\n\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u62c5\u3046\u30af\u30e9\u30b9\u304cTransactionTemplateImpl\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u306f\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002protocol\u306f\u30b5\u30fc\u30d3\u30b9\u5c64\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\n\n\n```TransactionTemplate.swift\nprotocol TransactionTemplate {\n    func execute(errorObservable errorObservable: Observable<Exception>, doProcess: () -> ())\n}\n```\n\n```TransactionTemplateImpl.swift\nclass TransactionTemplateImpl: TransactionTemplate {\n    func execute(errorObservable errorObservable: Observable<Exception>, doProcess: () -> ()) {\n        do {\n            let realm = try RealmWrapper.sharedInstance()\n            realm.beginWrite()\n            doProcess()\n            try realm.commitWrite()\n        } catch Exception.LackResources {\n            print(\"\u521d\u671f\u5316\u5931\u6557\")\n            errorObservable.next(.LackResources)\n        } catch RealmSwift.Error.FileAccess {\n            print(\"commit\u5931\u6557\")\n            errorObservable.next(.LackResources)\n        } catch {\n            print(\"\u4e88\u671f\u305b\u306c\u30a8\u30e9\u30fc\")\n            errorObservable.next(.Unexpected)\n        }\n    }\n}\n```\n\n### \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306e\u30b5\u30fc\u30d3\u30b9\n\nTransactionTemplate#execute()\u306eclosure\u304c\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b5\u30fc\u30d3\u30b9\u30ed\u30b1\u30fc\u30bf\u30fc\u304b\u3089Protocol\u3092\u53d6\u5f97\u3057\u3066\u6271\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30b5\u30fc\u30d3\u30b9\u5c64\u304cRealm\u306b\u4f9d\u5b58\u3059\u308b\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u3001\u4ed6\u306eDB\u306b\u5909\u66f4\u3057\u3066\u3082\u30b5\u30fc\u30d3\u30b9\u5c64\u306b\u306f\u5f71\u97ff\u304c\u3042\u308a\u307e\u305b\u3093\u3002\nSwiftTask\u306e\u6b04\u3067\u66f4\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n```WeatherService.swift\n    func fetchWeather() {\n\u30fb\u30fb\u30fb\n            let tx: TransactionTemplate = self.locator.lookup()\n            tx.execute(errorObservable: self.weather.errorState) {\n                self.weather.changeForecasts(entity)\n            }\n        }\n\u30fb\u30fb\u30fb\n```\n\n### \u96c6\u7d04\n\n\u4e0a\u8a18\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u304b\u3089DB\u51e6\u7406\u3092\u79fb\u8b72\u3055\u308c\u307e\u3059\u3002\nrepository\u7d4c\u7531\u3067\u8907\u6570\u306eDB\u547c\u3073\u51fa\u3057\u3092\u3057\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306e\u4ed6\u306e\u90e8\u5206\u306fSwiftBond\u306e\u6b04\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```Weather.swift\nclass Weather {\n\u30fb\u30fb\u30fb\n    func changeForecasts(entity: WeatherEntity) {\n        self.entity.changeForecasts(entity.forecasts)\n        repository.deleteAll()\n        repository.save(entity)\n    }\n\u30fb\u30fb\u30fb\n```\n\n## Alamofire\u3068ObjectMapper\u3068SwiftTask\n\n### \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\nObjectMapper\u306e\u305f\u3081\u306e\u30b3\u30f3\u30d3\u30cb\u30a8\u30f3\u30b9\u521d\u671f\u5316\u5b50\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001Mappable\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nmapping\u30e1\u30bd\u30c3\u30c9\u3067\u3001json\u306e\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u5024\u304c\u53d6\u5f97\u3067\u304d\u3001\u305d\u308c\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u8a2d\u5b9a\u51fa\u6765\u307e\u3059\u3002\n(ArrayTransform\u306fObjectMapper\u304cRealm\u306eList\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306e\u81ea\u4f5c\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059)\n\n```WeatherEntity.swift\nclass WeatherEntity: Object {\n\u30fb\u30fb\u30fb\n    required convenience init?(_ map: Map) {\n        self.init()\n    }\n}\n\nextension WeatherEntity: Mappable {\n    func mapping(map: ObjectMapper.Map) {\n        self.title <- map[\"title\"]\n        self.forecasts <- (map[\"forecasts\"], ArrayTransform<ForecastEntity>())\n    }\n}\n\n\u30fb\u30fb\u30fbSwiftBond\u306e\u51e6\u7406\u304c\u7d9a\u304f\n```\n\n### \u30ec\u30dd\u30b8\u30c8\u30ea\n\nAPI\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002WeatherRepository\u306f\u30e2\u30c7\u30eb\u5c64\u3001WeatherRepositoryImpl\u306f\u30a4\u30f3\u30d5\u30e9\u5c64\u306b\u7f6e\u304d\u307e\u3059\u3002\n\u5fc5\u305aSwiftTask\u3092\u623b\u308a\u5024\u306b\u3057\u307e\u3059\u3002\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001ApiCaller\u3068\u305d\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u3044\u308bFetchContext\u306b\u306a\u308a\u307e\u3059\u3002\n\n```WeatherRepository.swift\nimport SwiftTask\nprotocol WeatherRepository: Storable {\n\n    func fetchWeather(cityCode: String) -> Task<Progress, WeatherEntity, Int>\n\u30fb\u30fb\u30fb\n```\n\n```WeatherRepositoryImpl.swift\nimport SwiftTask\n\nclass WeatherRepositoryImpl: AppRepositoryImpl<WeatherEntity>, WeatherRepository {\n    typealias T = WeatherEntity\n    typealias Promise = Task<Progress, T, Int>\n\n    func fetchWeather(cityCode: String) -> Promise {\n        return ApiCaller.call(FetchContext([\"city\": cityCode]))\n    }\n}\n\nprivate final class FetchContext: GetRestable {\n    var parameters: [String: AnyObject]?\n\n    required init() {\n    }\n\n    var path: String {\n        return \"/forecast/webservice/json/v1\"\n    }\n}\n```\n\nFetchContext\u306fURLRequestConvertible\u3092\u5b9f\u88c5\u3057\u305fRestable\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\nFetchContext\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u3001\u305d\u308c\u305e\u308c\u306eAPI\u547c\u3073\u51fa\u3057\u7528\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nGET\u7528\u306e\u5171\u901a\u90e8\u5206\u306fGetRestable\u306b\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\u540c\u3058\u3088\u3046\u306bPosstRestable\u306a\u3069\u3082\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n```Restable.swift\nimport Alamofire\n\nprotocol Restable: URLRequestConvertible {\n    var baseUrl: String { get }\n    var path: String { get }\n    var parameters: [String: AnyObject]? { get set }\n    var method: Method { get }\n    var encoding: ParameterEncoding { get }\n    var headers: [String: String]? { get }\n\n    init()\n    init(_ parameters: [String: AnyObject])\n}\n\nextension Restable {\n    var URLRequest: NSMutableURLRequest {\n        let url = NSURL(string: baseUrl)!\n        let request = NSMutableURLRequest(URL: url.URLByAppendingPathComponent(path))\n        request.HTTPMethod = self.method.rawValue\n        request.allHTTPHeaderFields = headers\n        return encoding.encode(request, parameters: parameters).0\n    }\n}\n\nextension Restable {\n    init(_ parameters: [String: AnyObject]) {\n        self.init()\n        self.parameters = parameters\n        print(self.URLRequest.debugDescription)\n    }\n}\n\nextension Restable {\n    var headers: [String: String]? {\n        return nil\n    }\n\n    var baseUrl: String {\n        return \"http://weather.livedoor.com\"\n    }\n}\n\nprotocol GetRestable: Restable {\n}\n\nextension GetRestable {\n    var method: Alamofire.Method {\n        return .GET\n    }\n\n    var encoding: Alamofire.ParameterEncoding {\n        return .URL\n    }\n}\n\n```\n\n\u6b21\u306f\u3001\u5b9f\u969b\u306bAPI\u547c\u3073\u51fa\u3057\u3092\u884c\u3063\u3066\u3044\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u307b\u3068\u3093\u3069AlamofireObjectMapper\u304c\u52d5\u4f5c\u3057\u3066\u3044\u3066\u3001SwiftTask\u3067Promise\u30d1\u30bf\u30fc\u30f3\u306b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\u30a4\u30f3\u30d5\u30e9\u5c64\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u7f6e\u304d\u307e\u3059\u3002\n\n```ApiCaller.swift\nimport SwiftTask\nimport Alamofire\nimport AlamofireObjectMapper\nimport ObjectMapper\n\nclass ApiCaller<T: Mappable> {\n    typealias Promise = Task<Progress, T, Int>\n\n    class func call(context: Restable) -> Promise {\n        let task = Promise { progress, fulfill, reject, configure in\n            Alamofire.request(context)\n                .progress { bytesWritten, totalBytesWritten, totalBytesExpectedToWrite in\n                    progress((bytesWritten, totalBytesWritten, totalBytesExpectedToWrite) as Progress)\n            }.responseObject() { (response: Response<T, NSError>) in\n                    switch response.result {\n                    case .Success(let entity):\n                        fulfill(entity)\n                    case .Failure(let error):\n                        print(\"error:\\(error)\")\n                        reject((response.response?.statusCode)!)\n                    }\n            }\n        }\n        return task\n    }\n}\n```\n\n### \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306e\u30b5\u30fc\u30d3\u30b9\n\n\u4e0a\u90e8\u306eRealmSwift\u3067\u898b\u305f\u30b5\u30fc\u30d3\u30b9\u306e\u8a73\u7d30\u90e8\u5206\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306e\u5f79\u5272\u4ee5\u5916\u306b\u3001SwiftTask\u306e\u7d50\u679c\u3092\u51e6\u7406\u3059\u308b\u5f79\u5272\u3082\u6301\u3061\u307e\u3059\u3002\u5b9f\u969b\u306e\u51e6\u7406\u306f\u96c6\u7d04\u30af\u30e9\u30b9\u306b\u79fb\u8b72\u3057\u307e\u3059\u3002\n\n```WeatherService.swift\nimport SwiftTask\n\nclass WeatherService {\n    private let locator: ServiceLocator!\n    private let weather: Weather!\n\n    init(locator: ServiceLocator = ServiceLocatorImpl.sharedInstance, weather: Weather = WeatherFactory.sharedInstance) {\n        self.locator = locator\n        self.weather = weather\n    }\n    func fetchWeather() {\n        let task = weather.fetchWeather()\n        task.success { [unowned self] entity -> Void in\n            entity.cityCode = self.weather.cityCode.value!\n            let tx: TransactionTemplate = self.locator.lookup()\n            tx.execute(errorObservable: self.weather.errorState) {\n                self.weather.changeForecasts(entity)\n            }\n        }.failure { error, isCancelled in\n            var handler: ApiErrorHandler = self.locator.lookup()\n            handler.notFound = {\n                self.weather.clearForecasts()\n            }\n            handler.handle(error!, isCancelld: isCancelled, errorObservable: self.weather.errorState)\n        }\n    }\n```\n\n\u308f\u3056\u308f\u3056```init``` \u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u7406\u7531\u306f\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u3084\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\u30d7\u30ed\u30c0\u30af\u30c8\u4e0a\u3067\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f```WeatherService()``` \u3067\u884c\u3044\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u6642\u306f\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3057\u307e\u3059\u3002\n\n```WeatherServiceTest.swift\n\u30fb\u30fb\u30fb\n    func test_fetchWeatherInApp() {\n\n        class MockWeather: Weather {\n            var wasCalled = false\n            override func fetchWeatherInApp() {\n                self.wasCalled = true\n            }\n        }\n\n        let mock = MockWeather()\n\n        let target = WeatherService(weather: mock)\n        target.fetchWeatherInApp()\n        XCTAssertTrue(mock.wasCalled);\n    }\n\u30fb\u30fb\u30fb\n```\n\n\u307e\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u5171\u901a\u306b\u306a\u308b\u306e\u3067\u5225\u30af\u30e9\u30b9\u306b\u3057\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u3067\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3054\u3068\u306b\u30c9\u30e1\u30a4\u30f3\u306e\u72b6\u614b\u3092\u5909\u5316\u3055\u305b\u307e\u3059\u3002\nAPI\u3067\u5fc5\u8981\u306a\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u5168\u3066\u3053\u306e\u30af\u30e9\u30b9\u306b\u66f8\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```ApiErrorHandlerImpl.swift\nclass ApiErrorHandlerImpl: ApiErrorHandler {\n\n    var unexpected = { }\n    var notFound = { }\n\n    func handle(error: Int, isCancelld: (Bool), errorObservable: Observable<Exception>) {\n        switch error {\n        case 404:\n            notFound()\n            errorObservable.next(.NotFound)\n        default:\n            unexpected()\n            errorObservable.next(.Unexpected)\n            break\n        }\n    }\n}\n```\n\n## SwiftBond\n\n### \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\nBond\u7528\u306b\u62e1\u5f35\u3057\u307e\u3059\u3002ObservableType\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u305d\u306e\u4e2d\u3067Bond\u306e\u51e6\u7406\u3092\u9589\u3058\u8fbc\u3081\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u306f\u30dc\u30a4\u30e9\u30fc\u30b3\u30fc\u30c9\u306a\u306e\u3067\u5c11\u3057\u8003\u3048\u76f4\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u304c\u3001\u826f\u3044\u65b9\u6cd5\u304c\u601d\u3044\u3064\u304b\u306a\u3044\u306e\u3067\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```WeatherEntity.swift\n\u30fb\u30fb\u30fb\nextension WeatherEntity {\n    class ObservableType {\n        let observableForecasts = ObservableArray<ForecastEntity>()\n        let observableTitle: Observable<String> = Observable(\"\")\n\n        init(entity: WeatherEntity) {\n            self.changeForecasts(entity.forecasts)\n            self.observableTitle.next(entity.title)\n        }\n\n        func changeForecasts(forecasts: List<ForecastEntity>) {\n            self.observableForecasts.removeAll()\n            let entities = self.convertToArray(forecasts)\n            self.observableForecasts.extend(entities)\n        }\n\n        func clearForecasts() {\n            self.observableForecasts.removeAll()\n        }\n\n        func changeTitle(title: String) {\n            self.observableTitle.next(title)\n        }\n\n        private func convertToArray(list: List<ForecastEntity>) -> [ForecastEntity] {\n            var entities = [ForecastEntity]()\n            list.forEach { entity in\n                entities.append(entity)\n            }\n            return entities\n        }\n    }\n\n    func observableType() -> WeatherEntity.ObservableType {\n        return ObservableType(entity: self)\n    }\n}\n```\n\n## \u96c6\u7d04\n\n\u901a\u5e38\u3067\u3042\u308c\u3070\u4e0a\u8a18\u306eWeatherEntity\u304c\u30eb\u30fc\u30c8\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u306a\u308a\u307e\u3059\u304c\u3001Bond\u3067\u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u96c6\u7d04\u30af\u30e9\u30b9\u3092\u5225\u9014\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u304c\u51e6\u7406\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u901a\u3057\u3066\u4ed6\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u6271\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001Bond\u3067\u3001\u3053\u306e\u30af\u30e9\u30b9\u306e\u72b6\u614b\u306b\u3088\u3063\u3066\u753b\u9762\u9077\u79fb\u306a\u308a\u3001\u69d8\u3005\u306a\u51e6\u7406\u304c\u52d5\u304f\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```Weather.swift\nimport Bond\nimport SwiftTask\n\nclass Weather {\n    typealias Promise = Task<Progress, WeatherEntity, Int>\n\n    private(set) var repository: WeatherRepository!\n    private(set) var entity: WeatherEntity.ObservableType!\n    private(set) var dataSource: ObservableArray<ObservableArray<ForecastEntity>>!\n    private(set) var cityCode: Observable<String?>!\n    private(set) var transitionState: Observable<TransitionState>!\n    private(set) var errorState: Observable<Exception>!\n\n    //private init() { }\n\n    func toThird() {\n        if errorState.value == .None {\n            self.transitionState.next(TransitionState.Start)\n        } else {\n            self.errorState.next(.NotFound)\n        }\n    }\n\n    func fetchWeather() -> Promise {\n        return repository.fetchWeather(cityCode.value!)\n    }\n\n    func changeForecasts(entity: WeatherEntity) {\n        self.entity.changeForecasts(entity.forecasts)\n        repository.deleteAll()\n        repository.save(entity)\n    }\n\n    func clearForecasts() {\n        self.entity.clearForecasts()\n    }\n\n    func fetchWeatherInApp() {\n        if let entity: WeatherEntity = repository.find()!.last {\n            self.entity.changeTitle(entity.title)\n            self.entity.changeForecasts(entity.forecasts)\n        }\n    }\n}\n```\n\n\u307e\u305f\u3001\u96c6\u7d04\u30af\u30e9\u30b9\u306f\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u3067\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u521d\u306f ```private init()``` \u306b\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u3046\u3059\u308b\u3068\u5358\u4f53\u30c6\u30b9\u30c8\u6642\u306bWeather\u3092\u7d99\u627f\u3055\u305b\u305f\u30e2\u30c3\u30af\u3092\u4f5c\u308c\u306a\u3044\u306e\u3067\u3001private\u306f\u6b62\u3081\u307e\u3057\u305f\u3002\n\n```destoroy()``` \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u307e\u3067\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8fd4\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```Weather.swift\nclass WeatherFactory {\n    private static var weather: Weather?\n\n    static var sharedInstance: Weather {\n        if let cache = self.weather {\n            return cache\n        }\n        self.weather = self.instance\n        self.weather!.repository = self.repository\n        self.weather!.entity = WeatherEntity().observableType()\n        self.weather!.cityCode = Observable<String?>(\"130010\")\n        self.weather!.transitionState = Observable<TransitionState>(.None)\n        self.weather!.errorState = Observable<Exception>(.None)\n        self.weather!.dataSource = ObservableArray<ObservableArray<ForecastEntity>>([self.weather!.entity.observableForecasts])\n        return self.weather!\n    }\n\n    class var repository: WeatherRepository! {\n        let locator = ServiceLocatorImpl.sharedInstance\n        let repository: WeatherRepository = locator.lookup()\n        return ImplicitlyUnwrappedOptional(repository)\n    }\n\n    class var instance: Weather {\n        return Weather()\n    }\n\n    static func destroy() {\n        self.weather = nil\n    }\n}\n```\n\n\u4e00\u90e8\u3001static\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u306a\u304fclass\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u3066\u3044\u308b\u7406\u7531\u306f\u5358\u4f53\u30c6\u30b9\u30c8\u3067\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3067\u30e2\u30c3\u30af\u3092\u8fd4\u305b\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n```WeatherServiceTest.swift\n\u30fb\u30fb\u30fb\n    func test_fetchWeather_failure() {\n        class MockFactory: WeatherFactory {\n            override class var instance: Weather {\n                return MockWeather()\n            }\n        }\n\n        let locator = MockLocator.sharedInstance\n        let target = WeatherService(locator: locator, weather: MockFactory.sharedInstance)\n        target.fetchWeather()\n\u30fb\u30fb\u30fb\n```\n\n### \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\n\nBond\u3067\u753b\u9762\u8981\u7d20\u3068\u30c9\u30e1\u30a4\u30f3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u63a5\u7d9a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u304c\u753b\u9762\u3092\u3044\u3058\u308b\u3068Bond\u3092\u901a\u3058\u3066\u30c9\u30e1\u30a4\u30f3\u306e\u5024\u304c\u5909\u308f\u308a\u3001\u307e\u305f\u3001\u30c9\u30e1\u30a4\u30f3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3067\u753b\u9762\u9077\u79fb\u3084\u30a8\u30e9\u30fc\u8868\u793a\u304c\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```\n\u30fb\u30fb\u30fb\n    @IBOutlet weak var cityCode: UITextField!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        WeatherFactory.sharedInstance.cityCode.bidirectionalBindTo(cityCode.bnd_text)\n        WeatherFactory.sharedInstance.transitionState.observeNew { state in\n            switch state {\n            case .Start:\n                self.performSegueWithIdentifier(\"toThird\", sender: self)\n                break\n            default:\n                break\n            }\n        }\n        WeatherFactory.sharedInstance.errorState.observeNew { state in\n            switch state {\n            case .NotFound:\n                let alertController = UIAlertController(title: \"\u691c\u7d22\u7d50\u679c\u304c\u3042\u308a\u307e\u305b\u3093\", message: \"\", preferredStyle: .Alert)\n                let okAction = UIAlertAction(title: \"OK\", style: .Cancel) { alert in\n                    print(alert)\n                }\n                alertController.addAction(okAction)\n                self.presentViewController(alertController, animated: true, completion: nil)\n                break\n            default:\n                break\n            }\n        }\n    }\n```\n\n## \u305d\u306e\u4ed6\n\n### ValueObject\n\nValueObject\u306fimmutable(\u4e0d\u5909)\u306b\u3059\u308b\u306e\u3067struct\u306b\u3059\u308b\u306e\u304c\u666e\u901a\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306eTemperature\u306b\u95a2\u3057\u3066\u306f\u3001Realm\u3067\u4fdd\u5b58\u3057\u305f\u3044\u305f\u3081\u306bclass\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u307b\u3068\u3093\u3069Entity\u3068\u540c\u3058\u3067\u3059\u3002\n\nTemperature\u30af\u30e9\u30b9\u81ea\u4f53\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u306a\u3044(\u5e38\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u308b)\u306e\u3067\u4e0d\u5909\u3067\u3059\u304c\u3001Bond\u3092\u4fdd\u6301\u3059\u308bTemperature.ObservableType\u30af\u30e9\u30b9\u306f\u5909\u5316\u3057\u307e\u3059\u3002\u305d\u3046\u3044\u3046\u610f\u5473\u3067\u672c\u6765\u306eValueObject\u3068\u306f\u9055\u3046\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\n```Temperature.swift\nclass Temperature: Object {\n    private(set) var celsius = \"\"\n    private(set) var fahrenheit = \"\"\n\n    convenience init(celsius: String, fahrenheit: String) {\n        self.init()\n        self.celsius = celsius\n        self.fahrenheit = fahrenheit\n    }\n    required convenience init?(_ map: Map) {\n        self.init()\n    }\n}\n\nextension Temperature {\n    class ObservableType {\n        private(set) var celsius = Observable(\"\")\n        private(set) var fahrenheit = Observable(\"\")\n\n        init(_ type: Temperature) {\n            self.celsius.next(type.celsius)\n            self.fahrenheit.next(type.fahrenheit)\n        }\n    }\n\n    func observableType() -> Temperature.ObservableType {\n        return ObservableType(self)\n    }\n}\n\nextension Temperature: Mappable {\n    func mapping(map: ObjectMapper.Map) {\n        self.celsius <- map[\"celsius\"]\n        self.fahrenheit <- map[\"fahrenheit\"]\n    }\n}\n```\n\n\u672c\u6765\u306eValueObject\u3068\u3057\u3066\u306f\u3001enum\u306f\u6b63\u3057\u3044\u3067\u3057\u3087\u3046\u3002\n\n```Exception.swift\nenum Exception: ErrorType {\n    // \u3000\u306a\u3057\n    case None\n    // \u4e88\u671f\u305b\u306c\u4f8b\u5916\u3002\u56de\u5fa9\u4e0d\u80fd\u306a\u4f8b\u5916\u3002\n    case Unexpected\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u5916\u3002\u56de\u5fa9\u4e0d\u80fd\u306a\u4f8b\u5916\u3002\n    case ProgramError\n    // Realm\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u521d\u671f\u5316\u4f8b\u5916\u3002\n    // \u4e00\u822c\u7684\u306a\u30c7\u30a3\u30b9\u30afI/O\u306e\u51e6\u7406\u3068\u540c\u69d8\u306b\u3001Realm\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\u306f\u30ea\u30bd\u30fc\u30b9\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u74b0\u5883\u4e0b\u3067\u306f\u5931\u6557\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u5b9f\u969b\u306f\u3001\u5404\u30b9\u30ec\u30c3\u30c9\u306b\u304a\u3044\u3066\u6700\u521d\u306bRealm\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u304d\u3060\u3051\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n    case LackResources\n    case NotFound\n}\n```\n\n\u305d\u306e\u4ed6\u3088\u304f\u4f5c\u308b\u6b63\u3057\u3044ValueObject\u3068\u3057\u3066\u306f\u3001\u4f8b\u3048\u3070UIDevice\u306e\u60c5\u5831\u3092\u5b9a\u6570\u3067\u4fdd\u6301\u3059\u308bstruct\u3067\u3059\u3002\uff08\u3082\u3061\u308d\u3093\u3001Device\u306b\u95a2\u9023\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u305f\u305b\u307e\u3059\uff09\n\u3053\u3046\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u306fUIDevice(\u8aac\u660e\u306e\u305f\u3081UIDevice\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001\u4ed6\u306e\u30af\u30e9\u30b9\u3067\u3082\u540c\u69d8)\u306eios\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u308b\u9055\u3044\u3092\u3053\u306e\u30af\u30e9\u30b9\u3067\u5438\u53ce\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002\n\u8272\u3005\u306a\u30af\u30e9\u30b9\u306b\u70b9\u5728\u3059\u308b\u3088\u308a\u3082\u4e00\u3064\u306e\u30af\u30e9\u30b9\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u305f\u65b9\u304c\u5bfe\u5fdc\u304c\u7c21\u5358\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n```Device.swift\nimport UIKit\n\nstruct Device {\n    let iosVersion = UIDevice.currentDevice().systemVersion\n    let modelName = UIDevice.currentDevice().model\n\u30fb\u30fb\u30fb\n```\n\n### \u30b5\u30fc\u30d3\u30b9\u30ed\u30b1\u30fc\u30bf\u30fc\n\n\u6700\u521d\u306b\u8a71\u3057\u3066\u3044\u305f\u30b5\u30fc\u30d3\u30b9\u30ed\u30b1\u30fc\u30bf\u30fc\u3067\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306e\u304a\u304b\u3052\u3067\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7c21\u5358\u306b\u7dad\u6301\u3067\u304d\u307e\u3059\u3002\n\u547d\u540d\u898f\u7d04(\u5b9f\u88c5\u306b\u306fprotocol\u540d+Impl\u3068\u3057\u3066\u3044\u308b)\u3067\u53d6\u5f97\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3001```add``` \u30e1\u30bd\u30c3\u30c9\u3067closure\u3092\u6e21\u3059\u3088\u3046\u306b\u3057\u3001```lookup``` \u6642\u306bclosure\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u90fd\u5ea6\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u306f\u3001T\u578b\u3092\u5f15\u6570\u306b\u6e21\u3059 ```add``` \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n```ServiceLocator.swift\nprotocol ServiceLocator {\n\n    static var sharedInstance: ServiceLocator { get }\n    func add<T>(recipe: () -> T)\n    func lookup<T>() -> T\n}\n```\n\n```ServiceLocatorImpl.swift\nclass ServiceLocatorImpl: ServiceLocator {\n\n    private lazy var container: Dictionary < String, () -> Any > = [:]\n\n    private static let singleton = ServiceLocatorImpl()\n\n    static var sharedInstance: ServiceLocator { return singleton }\n\n    private init() {\n    }\n\n    func add<T>(recipe: () -> T) {\n        let key = typeName(T)\n        container[key] = recipe\n    }\n\n    func lookup<T>() -> T {\n        let key = typeName(T)\n        return container[key]!() as! T\n    }\n\n    private func typeName<T>(some: T.Type) -> String {\n        // \u547d\u540d\u898f\u7d04\u3067\u52d5\u4f5c\n        return \"\\(some)\".stringByReplacingOccurrencesOfString(\"Impl\", withString: \"\")\n    }\n}\n```\n\n# \u307e\u3068\u3081\n\n\u3053\u306e\u8a18\u4e8b\u306e\u3088\u3046\u306b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306e\u4ed5\u7d44\u307f\u3092\u304d\u3061\u3093\u3068\u4f5c\u3063\u3066\u304a\u304f\u3068\u672c\u8cea\u7684\u306a\u5b9f\u88c5\u3092\u3059\u308b\u3060\u3051\u3067\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\u307b\u3068\u3093\u3069\u306e\u51e6\u7406\u306f\u5171\u901a\u5316\u3055\u308c\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f5c\u6210\u3059\u308b\u306e\u306f\u3001\u4ee5\u4e0b\u3060\u3051\u306b\u306a\u308a\u307e\u3059\u3002\n\n* Repository\u306eprotocol\u3068class\n * API\u547c\u3073\u51fa\u3057\u306b\u3064\u304d\u3001\u30e1\u30bd\u30c3\u30c9\u30011\u884c\u3002\n * API\u547c\u3073\u51fa\u3057\u306b\u3064\u304d\u3001\u4e00\u3064\u306eFetchContext\u30af\u30e9\u30b9\n * \u5fc5\u8981\u3067\u3042\u308c\u3070\u8907\u96d1\u306aDB\u691c\u7d22\u30e1\u30bd\u30c3\u30c9\n* Controller\n * Bond\u3068\u30c9\u30e1\u30a4\u30f3\u306e\u63a5\u7d9a\n * \u30c9\u30e1\u30a4\u30f3\u306e\u76e3\u8996\u3068\u753b\u9762\u66f4\u65b0\n * \u30dc\u30bf\u30f3\u62bc\u4e0b\u306a\u3069\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306e\u547c\u3073\u51fa\u3057\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306eService\n * \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5358\u4f4d\u3067\u307e\u3068\u3081\u3089\u308c\u305f\u30c9\u30e1\u30a4\u30f3\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\n * \u30a8\u30e9\u30fc\u3092\u4f1d\u3048\u308bBond\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a\n* Entity\u3068ValueObject\n * Bond\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\n * DB\u306b\u4fdd\u5b58\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\n * \u30c9\u30e1\u30a4\u30f3\u56fa\u6709\u306e\u51e6\u7406\u30fb\u30c9\u30e1\u30a4\u30f3\u72b6\u614b\u306e\u5909\u66f4\n\n\u3053\u306e\u3046\u3061\u307b\u3068\u3093\u3069\u306e\u51e6\u7406\u306f\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u304f\u306f\u305a\u3067\u3059\u3002\n\u3064\u307e\u308a\u672c\u8cea\u7684\u306a\u30ed\u30b8\u30c3\u30af\u306b\u96c6\u4e2d\u3057\u3084\u3059\u304f\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["DDD", "Realm", "iOS", "Swift", "iPhone"]}