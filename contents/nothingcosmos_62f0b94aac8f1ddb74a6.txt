{"context": " More than 1 year has passed since last update.C\u8a00\u8a9e\u3078\u306e\u611f\u8b1d\u306e\u6b63\u62f3\u7a81\u304d 2\u65e5\u76ee\u3067\u3059\u3002\n\n\u6982\u8981\n\u6700\u521d\u30bf\u30a4\u30c8\u30eb\u306f\u300c\u518d\u5e30\u7684\u306ainclude\u306b\u304a\u3051\u308b\u30de\u30af\u30ed\u306e\u5c55\u958b\u300d\n\u3068\u3057\u3066\u3044\u305f\u305f\u3081\u3001include\u3092\u7e70\u308a\u8fd4\u3057\u3066fibo\u306e\u8a08\u7b97\u3067\u3082\u3059\u3093\u306e\u304b\uff1f\n\u3068\u601d\u308f\u308c\u305f\u65b9\u3082\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u3046\u3044\u3046\u3053\u3068\u306fModern C++\u306econstexpr\u306b\u304a\u4efb\u305b\u3059\u308b\u3068\u3057\u3066\u3001\u3001\n\u4eca\u56de\u3082\u3001OSS\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u3066\u52c9\u5f37\u306b\u306a\u3063\u305f\u30de\u30af\u30ed\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5168\u7136\u518d\u5e30\u7684\u3067\u306a\u3044\u3001self include\u3068\u547c\u3079\u308b\u30de\u30af\u30ed\u306e\u5c55\u958b\u3067\u3059\u3002\n\u4eca\u56de\u898b\u3064\u3051\u3066\u304d\u305f\u306e\u306f\u3001\u3053\u3061\u3089\u306eOSS\u3067\u3059\u3002uriparser\nhttp://sourceforge.net/p/uriparser/git/ci/master/tree/\n\nuriparser/include/uriparser\n\nUri.h            //\u30e1\u30a4\u30f3\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\nUriDefsAnsi.h    //Ansi\u5411\u3051\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\nUriDefsUnicode.h //Unicode\u5411\u3051\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\n\n\n\nUri.h\u3092include\u3059\u308b\u3068\u3001\u305d\u306e\u4e2d\u3067\u6a5f\u7a2e\u4f9d\u5b58\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3057\u305f\u5f8c\u3001Uri.h\u3092self include\u3057\u307e\u3059\u3002\n\u8aac\u660e\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u5148\u306b\u5177\u4f53\u4f8b\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u5177\u4f53\u4f8b(\u30d8\u30c3\u30c0)\nUri.h\u306finclude\u3059\u308b\u3068\u3001Uri.h\u30922\u56deself include\u3057\u307e\u3059\u3002\n1\u56de\u76ee\u306eself include\u6642\u306fAnsi\u7528\u306e\u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u305fUriDefsAnsi.h\u3092include\u3057\u305f\u306e\u3061\u3001body\u90e8\u5206\u304c\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\n2\u56de\u76ee\u306eself include\u6642\u306fUnicdoe\u7528\u306e\u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u305fUriDefsUnicode.h\u3092include\u3057\u305f\u306e\u3061\u3001body\u90e8\u5206\u304c\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\n\nuriparser/include/uriparser/Uri.h\n\n/* What encodings are enabled? */\n#include \"UriDefsConfig.h\"\n#if (!defined(URI_PASS_ANSI) && !defined(URI_PASS_UNICODE))\n/* Include SELF twice */\n# ifdef URI_ENABLE_ANSI                                       // ANSI\u30d5\u30e9\u30b0\u306e\u30ac\u30fc\u30c9\n#  define URI_PASS_ANSI 1                                     // ANSI\u30d5\u30e9\u30b0\n#  include \"Uri.h\"                                            // ...self include!\n#  undef URI_PASS_ANSI\n# endif\n# ifdef URI_ENABLE_UNICODE                                   // UNICODE\u30d5\u30e9\u30b0\u306e\u30ac\u30fc\u30c9\n#  define URI_PASS_UNICODE 1                                 // UNICODE\u30d5\u30e9\u30b0\n#  include \"Uri.h\"                                           // ...self include!\n#  undef URI_PASS_UNICODE\n# endif\n/* Only one pass for each encoding */\n#elif (defined(URI_PASS_ANSI) && !defined(URI_H_ANSI) \\\n  && defined(URI_ENABLE_ANSI)) || (defined(URI_PASS_UNICODE) \\\n  && !defined(URI_H_UNICODE) && defined(URI_ENABLE_UNICODE))\n# ifdef URI_PASS_ANSI\n#  define URI_H_ANSI 1\n#  include \"UriDefsAnsi.h\"                                   // ANSI PASS\u306e\u969b\u306b\u8aad\u307f\u8fbc\u3080ANSI\u7528\u30de\u30af\u30ed\n# else\n#  define URI_H_UNICODE 1\n#  include \"UriDefsUnicode.h\"                                // UNICODE PASS\u306e\u969b\u306b\u8aad\u307f\u8fbc\u3080UNICODE\u7528\u30de\u30af\u30ed\n# endif\n\n\n\n\u7d20\u6674\u3089\u3057\u3044\u3067\u3059\u306d\u3002\u79c1\u306f\u7d76\u5bfe\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u305f\u304f\u306a\u3044\u3067\u3059\u3002\n\u4ee5\u964d\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u69cb\u9020\u4f53\u3068\u95a2\u6570\u306e\u5ba3\u8a00\u3092\u307f\u3066\u307f\u307e\u3059\u3002\n\nuriparser/include/uriparser/Uri.h\ntypedef struct URI_TYPE(TextRangeStruct) {\n        const URI_CHAR * first; /**< Pointer to first character */\n        const URI_CHAR * afterLast; /**< Pointer to character after the last one still in */\n} URI_TYPE(TextRange); /**< @copydoc UriTextRangeStructA */\n\nvoid URI_FUNC(FreeQueryList)(URI_TYPE(QueryList) * queryList);\n\n\n\nURI_TYPE\u3084URI_FUNC\u306a\u3069\u306e\u30de\u30af\u30ed\u306f\u3001UriDefsUnicode.h\u3068UriDefsAnsi.h\u3067\u305d\u308c\u305e\u308c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\n\u7c21\u5358\u306b\u7e8f\u3081\u308b\u3068\u3001Ansi\u306e\u65b9\u306f\u672b\u5c3e\u306bA\u3092\u3064\u3051\u3066\u3001Unicode\u306e\u65b9\u306f\u672b\u5c3e\u306bW\u3092\u3064\u3051\u307e\u3059\u3002\n\nAnsi\u3068Unicode\u306e\u30de\u30af\u30ed\n        \u30de\u30af\u30ed\u540d     Ansi\u7248\u30de\u30af\u30ed Unicode\u7248\u30de\u30af\u30ed\n#define URI_TYPE(x) Uri##x##A   Uri##x##W\n#define URI_FUNC(x) uri##x##A   uri##x##W\n#define URI_CHAR(x) char        wchar_t\n\n\n\n\u3053\u308c\u3001\u3069\u3063\u304b\u306eWindows\u3067\u307f\u305f\u3053\u3068\u3042\u308b\u3084\u3064\u3067\u3059\u306d\u3002\u3002Uri.h\u306fAnsi\u7248\u3068Unicode\u7248\u306e\u4e21\u65b9\u3092\u5ba3\u8a00\u3057\u3001\nAnsi\u7248\u306e\u4f9d\u5b58\u90e8\u5206\u3092UriDefsAnsi.h\u306b\u8ffd\u3044\u51fa\u3057\u3001Unicode\u7248\u306e\u4f9d\u5b58\u90e8\u5206\u3092UriDefsUnicode.h\u306b\u8ffd\u3044\u51fa\u3057\u3066\u3044\u308b\u3068\u3002\u3002\n\u5b9f\u969b\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b7\u30f3\u30dc\u30eb\u3092\u307f\u3066\u307f\u307e\u3059\u3068\u3001\u4e21\u65b9\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\nliburiparser.so\n\n    94: 0002616f    95 FUNC    GLOBAL DEFAULT   11 uriFreeQueryListA\n   103: 00026a32    95 FUNC    GLOBAL DEFAULT   11 uriFreeQueryListW\n   471: 0002616f    95 FUNC    GLOBAL DEFAULT   11 uriFreeQueryListA\n   480: 00026a32    95 FUNC    GLOBAL DEFAULT   11 uriFreeQueryListW\n\n\n\n\n\u5177\u4f53\u4f8b(\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9)\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u307b\u3046\u3082\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nUriQuery.c\n/* What encodings are enabled? */\n#include <uriparser/UriDefsConfig.h>\n#if (!defined(URI_PASS_ANSI) && !defined(URI_PASS_UNICODE))\n/* Include SELF twice */\n# ifdef URI_ENABLE_ANSI\n#  define URI_PASS_ANSI 1\n#  include \"UriQuery.c\"\n#  undef URI_PASS_ANSI\n# endif\n# ifdef URI_ENABLE_UNICODE\n#  define URI_PASS_UNICODE 1\n#  include \"UriQuery.c\"\n#  undef URI_PASS_UNICODE\n# endif\n#else\n# ifdef URI_PASS_ANSI\n#  include <uriparser/UriDefsAnsi.h>\n# else\n#  include <uriparser/UriDefsUnicode.h>\n#  include <wchar.h>\n# endif\n\n\n...\nvoid URI_FUNC(FreeQueryList)(URI_TYPE(QueryList) * queryList) {\n        while (queryList != NULL) {\n                URI_TYPE(QueryList) * nextBackup = queryList->next;\n                free((URI_CHAR *)queryList->key); /* const cast */\n                free((URI_CHAR *)queryList->value); /* const cast */\n                free(queryList);\n                queryList = nextBackup;\n        }\n}\n\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306eUriQuery.c\u306f\u3001\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30ebUri.h\u3068\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u3001UriQuery.c\u3092self include\u3059\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\u6b63\u76f4\u306a\u3068\u3053\u308d\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306bAnsi\u4f9d\u5b58\u3068Unicode\u4f9d\u5b58\u3092\u8ffd\u3044\u51fa\u3057\u3066\u7834\u7dbb\u306a\u304f\u8a18\u8ff0\u3067\u304d\u308b\u306e\u306f\u7d20\u6674\u3089\u3057\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u3053\u308c\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u969b\u306b\u306f\u7247\u5074\u3060\u3051include\u3057\u3066\u30c7\u30d0\u30c3\u30b0\u3057\u3066\u305f\u3093\u3067\u3057\u3087\u3046\u304b\u306d\u3001\u6c17\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6ce8\u610f\u70b9\n(1) \u3053\u306e\u4f8b\u306f\u6b63\u76f4\u3059\u3063\u3052\u30fc\u3068\u601d\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u4f8b\u306b\u3042\u3052\u3066\u3044\u308b\u3060\u3051\u3067\u3001\n\u5b9f\u969b\u306b\u3053\u3093\u306a\u30c6\u30af\u30cb\u30c3\u30af\u4f7f\u3063\u3066Ansi\u7248\u3068Unicode\u7248\u306e\u30b3\u30fc\u30c9\u66f8\u304f\u306e\u304b\uff1f\u3068\u805e\u304b\u308c\u305f\u3089\u66f8\u304d\u305f\u304f\u306a\u3044\u3067\u3059\u3002\n(2) \u30de\u30af\u30ed\u3078\u904e\u5ea6\u306b\u983c\u308b\u306e\u306f\u6b62\u3081\u307e\u3057\u3087\u3046\u3002\n(3) \u30de\u30af\u30ed\u3092\u4f7f\u3063\u305f\u5c0f\u624b\u5148\u306e\u5171\u901a\u5316\u3084\u62bd\u8c61\u5316\u3088\u308a\u3001C++\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u307b\u3046\u304c\u826f\u3044\u5834\u5408\u304c\u591a\u3044\u305f\u3081\u3001Modern\u306aC++\u306e\u4f7f\u7528\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0a\nC\u8a00\u8a9e\u3078\u306e\u611f\u8b1d\u306e\u6b63\u62f3\u7a81\u304d 2\u65e5\u76ee\u3067\u3059\u3002\n\n# \u6982\u8981\n\n\u6700\u521d\u30bf\u30a4\u30c8\u30eb\u306f\u300c\u518d\u5e30\u7684\u306ainclude\u306b\u304a\u3051\u308b\u30de\u30af\u30ed\u306e\u5c55\u958b\u300d\n\u3068\u3057\u3066\u3044\u305f\u305f\u3081\u3001include\u3092\u7e70\u308a\u8fd4\u3057\u3066fibo\u306e\u8a08\u7b97\u3067\u3082\u3059\u3093\u306e\u304b\uff1f\n\u3068\u601d\u308f\u308c\u305f\u65b9\u3082\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u3046\u3044\u3046\u3053\u3068\u306fModern C++\u306econstexpr\u306b\u304a\u4efb\u305b\u3059\u308b\u3068\u3057\u3066\u3001\u3001\n\n\u4eca\u56de\u3082\u3001OSS\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u3066\u52c9\u5f37\u306b\u306a\u3063\u305f\u30de\u30af\u30ed\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5168\u7136\u518d\u5e30\u7684\u3067\u306a\u3044\u3001self include\u3068\u547c\u3079\u308b\u30de\u30af\u30ed\u306e\u5c55\u958b\u3067\u3059\u3002\n\n\u4eca\u56de\u898b\u3064\u3051\u3066\u304d\u305f\u306e\u306f\u3001\u3053\u3061\u3089\u306eOSS\u3067\u3059\u3002uriparser\nhttp://sourceforge.net/p/uriparser/git/ci/master/tree/\n\n```C:uriparser/include/uriparser\n\nUri.h            //\u30e1\u30a4\u30f3\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\nUriDefsAnsi.h    //Ansi\u5411\u3051\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\nUriDefsUnicode.h //Unicode\u5411\u3051\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\n\n```\n\nUri.h\u3092include\u3059\u308b\u3068\u3001\u305d\u306e\u4e2d\u3067\u6a5f\u7a2e\u4f9d\u5b58\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3057\u305f\u5f8c\u3001Uri.h\u3092self include\u3057\u307e\u3059\u3002\n\u8aac\u660e\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u5148\u306b\u5177\u4f53\u4f8b\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n# \u5177\u4f53\u4f8b(\u30d8\u30c3\u30c0)\n\nUri.h\u306finclude\u3059\u308b\u3068\u3001Uri.h\u30922\u56deself include\u3057\u307e\u3059\u3002\n1\u56de\u76ee\u306eself include\u6642\u306fAnsi\u7528\u306e\u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u305fUriDefsAnsi.h\u3092include\u3057\u305f\u306e\u3061\u3001body\u90e8\u5206\u304c\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\n2\u56de\u76ee\u306eself include\u6642\u306fUnicdoe\u7528\u306e\u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u305fUriDefsUnicode.h\u3092include\u3057\u305f\u306e\u3061\u3001body\u90e8\u5206\u304c\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\n\n```C:uriparser/include/uriparser/Uri.h\n\n/* What encodings are enabled? */\n#include \"UriDefsConfig.h\"\n#if (!defined(URI_PASS_ANSI) && !defined(URI_PASS_UNICODE))\n/* Include SELF twice */\n# ifdef URI_ENABLE_ANSI                                       // ANSI\u30d5\u30e9\u30b0\u306e\u30ac\u30fc\u30c9\n#  define URI_PASS_ANSI 1                                     // ANSI\u30d5\u30e9\u30b0\n#  include \"Uri.h\"                                            // ...self include!\n#  undef URI_PASS_ANSI\n# endif\n# ifdef URI_ENABLE_UNICODE                                   // UNICODE\u30d5\u30e9\u30b0\u306e\u30ac\u30fc\u30c9\n#  define URI_PASS_UNICODE 1                                 // UNICODE\u30d5\u30e9\u30b0\n#  include \"Uri.h\"                                           // ...self include!\n#  undef URI_PASS_UNICODE\n# endif\n/* Only one pass for each encoding */\n#elif (defined(URI_PASS_ANSI) && !defined(URI_H_ANSI) \\\n  && defined(URI_ENABLE_ANSI)) || (defined(URI_PASS_UNICODE) \\\n  && !defined(URI_H_UNICODE) && defined(URI_ENABLE_UNICODE))\n# ifdef URI_PASS_ANSI\n#  define URI_H_ANSI 1\n#  include \"UriDefsAnsi.h\"                                   // ANSI PASS\u306e\u969b\u306b\u8aad\u307f\u8fbc\u3080ANSI\u7528\u30de\u30af\u30ed\n# else\n#  define URI_H_UNICODE 1\n#  include \"UriDefsUnicode.h\"                                // UNICODE PASS\u306e\u969b\u306b\u8aad\u307f\u8fbc\u3080UNICODE\u7528\u30de\u30af\u30ed\n# endif\n\n```\n\n\u7d20\u6674\u3089\u3057\u3044\u3067\u3059\u306d\u3002\u79c1\u306f\u7d76\u5bfe\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u305f\u304f\u306a\u3044\u3067\u3059\u3002\n\n\u4ee5\u964d\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u69cb\u9020\u4f53\u3068\u95a2\u6570\u306e\u5ba3\u8a00\u3092\u307f\u3066\u307f\u307e\u3059\u3002\n\n```C:uriparser/include/uriparser/Uri.h\ntypedef struct URI_TYPE(TextRangeStruct) {\n        const URI_CHAR * first; /**< Pointer to first character */\n        const URI_CHAR * afterLast; /**< Pointer to character after the last one still in */\n} URI_TYPE(TextRange); /**< @copydoc UriTextRangeStructA */\n\nvoid URI_FUNC(FreeQueryList)(URI_TYPE(QueryList) * queryList);\n\n```\n\nURI_TYPE\u3084URI_FUNC\u306a\u3069\u306e\u30de\u30af\u30ed\u306f\u3001UriDefsUnicode.h\u3068UriDefsAnsi.h\u3067\u305d\u308c\u305e\u308c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\n\u7c21\u5358\u306b\u7e8f\u3081\u308b\u3068\u3001Ansi\u306e\u65b9\u306f\u672b\u5c3e\u306bA\u3092\u3064\u3051\u3066\u3001Unicode\u306e\u65b9\u306f\u672b\u5c3e\u306bW\u3092\u3064\u3051\u307e\u3059\u3002\n\n```C:Ansi\u3068Unicode\u306e\u30de\u30af\u30ed\n        \u30de\u30af\u30ed\u540d     Ansi\u7248\u30de\u30af\u30ed Unicode\u7248\u30de\u30af\u30ed\n#define URI_TYPE(x) Uri##x##A   Uri##x##W\n#define URI_FUNC(x) uri##x##A   uri##x##W\n#define URI_CHAR(x) char        wchar_t\n\n```\n\n\u3053\u308c\u3001\u3069\u3063\u304b\u306eWindows\u3067\u307f\u305f\u3053\u3068\u3042\u308b\u3084\u3064\u3067\u3059\u306d\u3002\u3002Uri.h\u306fAnsi\u7248\u3068Unicode\u7248\u306e\u4e21\u65b9\u3092\u5ba3\u8a00\u3057\u3001\nAnsi\u7248\u306e\u4f9d\u5b58\u90e8\u5206\u3092UriDefsAnsi.h\u306b\u8ffd\u3044\u51fa\u3057\u3001Unicode\u7248\u306e\u4f9d\u5b58\u90e8\u5206\u3092UriDefsUnicode.h\u306b\u8ffd\u3044\u51fa\u3057\u3066\u3044\u308b\u3068\u3002\u3002\n\n\u5b9f\u969b\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b7\u30f3\u30dc\u30eb\u3092\u307f\u3066\u307f\u307e\u3059\u3068\u3001\u4e21\u65b9\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\n```C:liburiparser.so\n\n    94: 0002616f    95 FUNC    GLOBAL DEFAULT   11 uriFreeQueryListA\n   103: 00026a32    95 FUNC    GLOBAL DEFAULT   11 uriFreeQueryListW\n   471: 0002616f    95 FUNC    GLOBAL DEFAULT   11 uriFreeQueryListA\n   480: 00026a32    95 FUNC    GLOBAL DEFAULT   11 uriFreeQueryListW\n\n```\n\n# \u5177\u4f53\u4f8b(\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9)\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u307b\u3046\u3082\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```C:UriQuery.c\n/* What encodings are enabled? */\n#include <uriparser/UriDefsConfig.h>\n#if (!defined(URI_PASS_ANSI) && !defined(URI_PASS_UNICODE))\n/* Include SELF twice */\n# ifdef URI_ENABLE_ANSI\n#  define URI_PASS_ANSI 1\n#  include \"UriQuery.c\"\n#  undef URI_PASS_ANSI\n# endif\n# ifdef URI_ENABLE_UNICODE\n#  define URI_PASS_UNICODE 1\n#  include \"UriQuery.c\"\n#  undef URI_PASS_UNICODE\n# endif\n#else\n# ifdef URI_PASS_ANSI\n#  include <uriparser/UriDefsAnsi.h>\n# else\n#  include <uriparser/UriDefsUnicode.h>\n#  include <wchar.h>\n# endif\n\n\n...\nvoid URI_FUNC(FreeQueryList)(URI_TYPE(QueryList) * queryList) {\n        while (queryList != NULL) {\n                URI_TYPE(QueryList) * nextBackup = queryList->next;\n                free((URI_CHAR *)queryList->key); /* const cast */\n                free((URI_CHAR *)queryList->value); /* const cast */\n                free(queryList);\n                queryList = nextBackup;\n        }\n}\n\n```\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306eUriQuery.c\u306f\u3001\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30ebUri.h\u3068\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u3001UriQuery.c\u3092self include\u3059\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\u6b63\u76f4\u306a\u3068\u3053\u308d\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306bAnsi\u4f9d\u5b58\u3068Unicode\u4f9d\u5b58\u3092\u8ffd\u3044\u51fa\u3057\u3066\u7834\u7dbb\u306a\u304f\u8a18\u8ff0\u3067\u304d\u308b\u306e\u306f\u7d20\u6674\u3089\u3057\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u3053\u308c\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u969b\u306b\u306f\u7247\u5074\u3060\u3051include\u3057\u3066\u30c7\u30d0\u30c3\u30b0\u3057\u3066\u305f\u3093\u3067\u3057\u3087\u3046\u304b\u306d\u3001\u6c17\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u6ce8\u610f\u70b9\n\n(1) \u3053\u306e\u4f8b\u306f\u6b63\u76f4\u3059\u3063\u3052\u30fc\u3068\u601d\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u4f8b\u306b\u3042\u3052\u3066\u3044\u308b\u3060\u3051\u3067\u3001\n\u5b9f\u969b\u306b\u3053\u3093\u306a\u30c6\u30af\u30cb\u30c3\u30af\u4f7f\u3063\u3066Ansi\u7248\u3068Unicode\u7248\u306e\u30b3\u30fc\u30c9\u66f8\u304f\u306e\u304b\uff1f\u3068\u805e\u304b\u308c\u305f\u3089\u66f8\u304d\u305f\u304f\u306a\u3044\u3067\u3059\u3002\n\n(2) \u30de\u30af\u30ed\u3078\u904e\u5ea6\u306b\u983c\u308b\u306e\u306f\u6b62\u3081\u307e\u3057\u3087\u3046\u3002\n\n(3) \u30de\u30af\u30ed\u3092\u4f7f\u3063\u305f\u5c0f\u624b\u5148\u306e\u5171\u901a\u5316\u3084\u62bd\u8c61\u5316\u3088\u308a\u3001C++\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u307b\u3046\u304c\u826f\u3044\u5834\u5408\u304c\u591a\u3044\u305f\u3081\u3001Modern\u306aC++\u306e\u4f7f\u7528\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u4ee5\u4e0a\n", "tags": ["C\u8a00\u8a9e", "macro"]}