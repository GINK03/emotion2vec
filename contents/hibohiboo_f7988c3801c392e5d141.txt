{"tags": ["docker", "tmux", "MongoDB", "Express", "webpack"], "context": "\u524d\u56de\u306e\u7d9a\u304d\u3002\u8907\u6570\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f\u306e\u304c\u9762\u5012\u306a\u305f\u3081\uff11\u3064\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u5206\u5272\u3059\u308b\u3002\n(2016/2/4 \u8ffd\u8a18\uff09webpack\u306e\u8a2d\u5b9a\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u305f\u6642\u306f\u3046\u307e\u304f\u3044\u304f\u304c\u3001\u65b0\u898f\u4f5c\u6210\u3057\u305f\u3068\u304d\u306b\u8a8d\u8b58\u3057\u306a\u304b\u3063\u305f\u306e\u3067gulp\u3092\u4f7f\u7528\u3059\u308b\u69cb\u6210\u306b\u5909\u66f4\u3002\n\ntmux\u3067\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u5206\u5272\ntmux\u306e\u8a2d\u5b9a\u306f\u30b3\u30d4\u30da\u3002\n\u9054\u4eba\u306b\u5b66\u3076.tmux.conf\u306e\u57fa\u672c\u8a2d\u5b9a\n\nshare/config/tmux.conf\n#prefix C-a\u306b\u5909\u66f4\u3059\u308b\nset -g prefix C-a\n\n# C-b\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3092\u89e3\u9664\u3059\u308b\nunbind C-b\n\n# \u30ad\u30fc\u30b9\u30c8\u30ed\u30fc\u30af\u306e\u30c7\u30a3\u30ec\u30a4\u3092\u6e1b\u3089\u3059\nset -sg escape-time 1\n\n# \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30921\u304b\u3089\u59cb\u3081\u308b\nset -g base-index 1\n\n# \u30da\u30a4\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30921\u304b\u3089\u59cb\u3081\u308b\nsetw -g pane-base-index 1\n\n# \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30ed\u30fc\u30c9\u3059\u308b\nbind r source-file ~/.tmux.conf \\; display \"Reloaded!\"\n\n# C-a*2\u3067tmux\u5185\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306bC-a\u3092\u9001\u308b\nbind C-a send-prefix\n\n# | \u3067\u30da\u30a4\u30f3\u3092\u7e26\u306b\u5206\u5272\u3059\u308b\nbind | split-window -h\n\n# - \u3067\u30da\u30a4\u30f3\u3092\u6a2a\u306b\u5206\u5272\u3059\u308b\nbind - split-window -v\n\n# Vim\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3067\u30da\u30a4\u30f3\u3092\u79fb\u52d5\u3059\u308b\nbind h select-pane -L\nbind j select-pane -D\nbind k select-pane -U\nbind l select-pane -R\nbind -r C-h select-window -t :-\nbind -r C-l select-window -t :+\n\n# Vim\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3067\u30da\u30a4\u30f3\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nbind -r H resize-pane -L 5\nbind -r J resize-pane -D 5\nbind -r K resize-pane -U 5\nbind -r L resize-pane -R 5\n\n\n# 256\u8272\u7aef\u672b\u3092\u4f7f\u7528\u3059\u308b\nset -g default-terminal \"screen-256color\"\n\n# \u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\n\n# \u30a6\u30a3\u30f3\u30c9\u30a6\u30ea\u30b9\u30c8\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nsetw -g window-status-fg cyan\nsetw -g window-status-bg default\nsetw -g window-status-attr dim\n# \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u76ee\u7acb\u305f\u305b\u308b\nsetw -g window-status-current-fg white\nsetw -g window-status-current-bg red\nsetw -g window-status-current-attr bright\n\n# \u30da\u30a4\u30f3\u30dc\u30fc\u30c0\u30fc\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nset -g pane-border-fg green\nset -g pane-border-bg black\n# \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30da\u30a4\u30f3\u3092\u76ee\u7acb\u305f\u305b\u308b\nset -g pane-active-border-fg white\nset -g pane-active-border-bg yellow\n\n# \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nset -g message-fg white\nset -g message-bg black\nset -g message-attr bright\n\n# \u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\n## \u5de6\u30d1\u30cd\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nset -g status-left-length 40\nset -g status-left \"#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P\"\n## \u53f3\u30d1\u30cd\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nset -g status-right \"#[fg=cyan][%Y-%m-%d(%a) %H:%M]\"\n## \u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u306eUTF-8\u30b5\u30dd\u30fc\u30c8\u3092\u6709\u52b9\u306b\u3059\u308b\nset -g status-utf8 on\n## \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u306e\u9593\u9694\u3092\u8a2d\u5b9a\u3059\u308b(\u30c7\u30d5\u30a9\u30eb\u30c8 15\u79d2)\nset -g status-interval 60\n## \u30a6\u30a3\u30f3\u30c9\u30a6\u30ea\u30b9\u30c8\u306e\u4f4d\u7f6e\u3092\u4e2d\u5fc3\u5bc4\u305b\u306b\u3059\u308b\nset -g status-justify centre\n## \u30f4\u30a3\u30b8\u30e5\u30a2\u30eb\u30ce\u30fc\u30c6\u30a3\u30d5\u30a3\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\nsetw -g monitor-activity on\nset -g visual-activity on\n## \u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u3092\u4e0a\u90e8\u306b\u8868\u793a\u3059\u308b\nset -g status-position top\n\n\n\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u5206\u5272\u3057\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u3057\u305f\u3044\u3002\n\u305d\u306e\u305f\u3081\u3001gitbash\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u5927\u304d\u304f\u3057\u3066\u304a\u304f\u3002\ngitbash\u306e\u4e0a\u306e\u30d0\u30fc\u3067\u53f3\u30af\u30ea\u30c3\u30af\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u9078\u629e\u80a2\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u30bf\u30d6\u3092\u958b\u304f\u3002\n\u5e45120\u3001\u9ad8\u305535\u3067\u8a2d\u5b9a\u3057\u3066\u307f\u305f\u3002\n\ntmux\u306fubuntu14.04\u306b\u306f\u30d7\u30ec\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u305f\u3002\n\u8d77\u52d5\u3057\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u5206\u5272\u3059\u308b\u30b7\u30a7\u30eb\u3092\u4f5c\u6210\u3002\n\nshare/shell/tmux_start.sh\n#!/bin/bash\n\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u540d\u304c\u306a\u3051\u308c\u3070\u5b9a\u7fa9\nif [ -n \"$SESSION_NAME\" ];then\n  session=$SESSION_NAME\nelse\n  session=dev-`date +%s`\nfi\n\n# \u30a6\u30a3\u30f3\u30c9\u30a6\u540d\u3092\u5b9a\u7fa9\nwindow=development\n\n### tmux\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\ntmux -f /home/vagrant/share/config/tmux.conf new-session -d -n $window -s $session  \n\ntmux send-keys \"echo test1\" C-m\n\n#\u30a6\u30a3\u30f3\u30c9\u30a6\u4f5c\u6210\ntmux split-window -h\ntmux send-keys \"echo test2\" C-m\n#tmux send-keys \"./share/shell/karma_docker_start.sh\" C-m\n\ntmux split-window -h\ntmux send-keys \"echo test4\" C-m\n\ntmux select-pane -t 2\ntmux split-window\ntmux send-keys \"echo test3\" C-m\n\ntmux select-pane -t 4\ntmux split-window\ntmux send-keys \"echo test5\" C-m\n\n### \u6700\u521d\u306epane\u3092\u9078\u629e\u72b6\u614b\u306b\u3059\u308b\ntmux select-pane -t 1\n\n### \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u30a2\u30bf\u30c3\u30c1\ntmux attach-session -t $session\n\n\n\nwebpack\u3068karma\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08Docker)\n\u524d\u56de\u3068\u540c\u69d8\u306bDockerfile\u304b\u3089\u30d3\u30eb\u30c9\u3002\nwindows\u3067\u30d5\u30a1\u30a4\u30eb\u4f5c\u3063\u305f\u3089\u6539\u884c\u30b3\u30fc\u30c9\u304cCRLF\u3067\u30b7\u30a7\u30eb\u304c\u52d5\u304b\u306a\u304f\u306630\u5206\u304f\u3089\u3044\u60a9\u307f\u307e\u3057\u305f\u3002\n\u6539\u884c\u30b3\u30fc\u30c9LF\u3067\u4fdd\u5b58\u3057\u306a\u304a\u3057\u3066\u8d77\u52d5\u78ba\u8a8d\u3002\n\nshare/shell/env.conf\n#!/bin/bash\n\n# \u5171\u6709\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_share_dir=\"/home/vagrant/share\"\n\n# docker\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_Dockerfile_dir=\"${path_share_dir}/Docker\"\n\n# \u958b\u767a\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_dev_dir=\"${path_share_dir}/dev\"\n\n# docker\u30a4\u30e1\u30fc\u30b8\u30d5\u30a1\u30a4\u30eb\u540d(:\u30bf\u30b0\u540d)\nimageName_karma=\"hibo/karma\"\nimageName_webpack=\"hibo/node_webpack\"\nimageName_express=\"hibo/express\"\n\n# \u30b3\u30f3\u30c6\u30ca\u540d\ncontainerName_karma=\"karma\"\ncontainerName_webpack=\"webpack\"\n\n\n\n\nshare/shell/build_webpack.sh\n#!/bin/bash\n\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd $path_Dockerfile_dir/webpack && docker build -t $imageName_webpack .\n\n\n\nshare/Docker/webpack/Dockerfile.\nFROM node:5.4.0\n\nRUN mkdir -p /usr/local/src/share\nWORKDIR /usr/local/src\n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"my_webpack\",\"scripts\": {\"build\": \"webpack\"} }' > package.json\n\nRUN npm i -D webpack\nRUN npm i -D babel-core babel-preset-es2015 babel-preset-react\nRUN npm i -D eslint\nRUN npm i -D pre-commit precommit-hook\nRUN npm i -D lodash\nRUN npm i -D react\n\nRUN npm i -D eslint-loader\nRUN npm i -D babel-loader\nRUN npm i -D css-loader\nRUN npm i -D react-hot-loader\nRUN npm i -D style-loader\n\n# babel\u3067\u4f7f\u7528\u3059\u308bpresets\u306e\u66f8\u304d\u51fa\u3057\nRUN echo '{\"presets\": [\"es2015\", \"react\"]}' > .babelrc\n``\n\n```share/shell/webpack_docker_start.sh\n#!/bin/bash\n\n# \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u8fbc\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306ekarma\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_webpack >/dev/null 2>&1\n\n# \u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_webpack\nfi\n\n# \u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\ndocker run -it --name $containerName_webpack --rm \\\n           -v $path_dev_dir:/usr/local/src/share \\\n           $imageName_webpack /bin/bash -c \\\n           'npm run-script build -- --config ./share/webpack/webpack.config.js --progess --colors --watch'\n\n\nnpm run build -- --options\u306b\u5909\u66f4\u3057\u305f\u306e\u304c\u4eca\u56de\u65b0\u3057\u304f\u899a\u3048\u305f\u3053\u3068\u3002\nDocker\u3067\u4e00\u3064\u3060\u3051\u52d5\u304b\u3059\u306a\u3089\u524d\u56de\u306e\u3088\u3046\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3002\npackage.json\u306escripts\u306b\u6307\u5b9a\u3057\u3066\u3084\u308c\u3070\u30d1\u30b9\u3092\u901a\u3055\u306a\u304f\u3066\u3082npm run \u30b9\u30af\u30ea\u30d7\u30c8\u540d\u3067\u5b9f\u884c\u3067\u304d\u308b\u3002\n\u30aa\u30d7\u30b7\u30e7\u30f3\u306f -- \u306e\u5f8c\u306b\u7d9a\u3051\u3066\u66f8\u3044\u3066\u3084\u308c\u3070OK\u3002\n\u4eca\u56de\u306e\u5834\u5408\u3060\u3068\u3001npm run build -- --config ./share/webpack/webpack.config.js --progess --colors --watch\u306fwebpack\u306b\u30d1\u30b9\u304c\u901a\u3063\u3066\u3044\u308b\u3068\u304d\u306ewebpack --config ./share/webpack/webpack.config.js --progess --colors --watch\u3068\u540c\u610f\u3002\n\u524d\u56de\u306ftest-context.js\u3092\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u3059\u308b\u65b9\u6cd5\u3092\u8a66\u3057\u305f\u306e\u3067\u3001\n\u4eca\u56de\u306f-spec.js\u306e\u5404\u30d5\u30a1\u30a4\u30eb\u3092\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u3059\u308b\u65b9\u6cd5\u3092\u8a66\u3057\u3066\u307f\u308b\u3002\n\nshare/dev/webpack/webpack.config.js\nrequire('babel-core/register');\nmodule.exports = require('./configs/karma');\n\n\n\nshare/dev/webpack/configs/_base.js\nexport default {\n  entry: 'app.js',\n  output: { filename: 'bundle.js' },\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'babel'\n      }\n    ]\n  },\n  resolve: {\n    extensions: ['', '.js'] \n  },\n  watchOptions: {\n    poll: true\n  }\n};\n\n\n\n\nshare/dev/configs/karma.js\n\nimport base from './_base';\nimport path from 'path';\nimport fs from 'fs';\nexport const src = path.resolve(__dirname,  '../../karma/test/spec');\nexport const dist = path.resolve(__dirname, '../../karma/test/dist');\n\nvar entry_point = {};\n// spec\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u4e00\u89a7\u3092\u53d6\u5f97\u3002\nvar filenames = fs.readdirSync(path.resolve(__dirname,'../../karma/test/spec'));\n\nfilenames.forEach((elm, index)=>{\n  //-spec.js\u3067\u7d42\u308f\u308bjavascript\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3092\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306b\u767b\u9332\n  if( /-spec\\.js$/.test(elm) ){\n    entry_point[elm.replace(\".js\",\"\")] = \"./\" + elm;\n  }\n});\n\nconst webpackConfig = Object.assign(base, {\n  context:src,\n  entry: entry_point,\n  output: {\n    path: dist,\n    filename: '[name].bundle.js'\n  }\n});\n\nexport default webpackConfig;\n\n\n\u7d9a\u3044\u3066karma\u3002\n\nshare/Docker/karma/Dockerfile.\nFROM node:4.2.4\n\nRUN mkdir -p /usr/karma/share\nWORKDIR /usr/karma\n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"my_karma\",\"scripts\": {\"tests\": \"karma start\"} }' > package.json\n\n# karma\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev jasmine-core\nRUN npm install --save-dev karma\nRUN npm install --save-dev karma-jasmine\nRUN npm install --save-dev jasmine\nRUN npm install --save-dev karma-phantomjs-launcher\n\n\n\nshare/shell/build_karma.sh\n#!/bin/bash\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd $path_Dockerfile_dir/karma && docker build -t $imageName_karma .\n\n\n\nshare/shell/karma_docker_start.sh\n#!/bin/bash\n\n# \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u8fbc\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306ekarma\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_karma >/dev/null 2>&1\n\n# karma\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_karma\nfi\n\n# \u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\ndocker run -it --name $containerName_karma --rm \\\n           -v $path_dev_dir:/usr/karma/share \\\n           $imageName_karma /bin/bash -c \\\n           'npm run-script tests -- ./share/karma/karma.conf.js'\n\n\n\nshare/dev/karma/karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    browsers: ['PhantomJS'],\n    files: [ { pattern: './test/dist/*-spec.bundle.js', watched: true } ],\n    frameworks: ['jasmine'],\n    autoWatch: true,\n    singleRun:false,\n    logLevel: config.LOG_INFO,\n    port: 9876,\n    concurrency: Infinity\n  }); \n};\n\n\n\n\u3053\u3053\u307e\u3067\u306e\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\nshare\n  - Docker\n    - webpack\n      - Dockerfile\n    - karma\n      - Dockerfile\n  -shell\n    - env.conf\n    - build_karma.sh\n    - build_webpack.sh\n    - karma_docker_start.sh\n    - webpack_docker_start.sh \n  - dev\n    - webpack\n      - webpack.config.js\n      - configs\n        - _base.js\n        - karma.js\n    - karma\n      - karma.conf.js \n      - test\n        + dist\n        - spec\n          - test-spec.js\n        - source\n          - test.js\n\n\n\nmongodb\u3068express\u306e\u7528\u610f\nexpress\u306f\u524d\u56de\u3068\u3055\u307b\u3069\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u3002\nmongodb\u306f3.2\u3092\u4f7f\u7528\u3057\u305f\u3002\nmongodb\u306eDockerfile\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\ndocker-library/mongo\n\u30d3\u30eb\u30c9\u7528\u306e\u30b7\u30a7\u30eb\u3092\u4f5c\u6210\u3002\n\nshare/shell/env.conf\n#!/bin/bash\n\n# \u5171\u6709\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_share_dir=\"/home/vagrant/share\"\n\n# docker\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_Dockerfile_dir=\"${path_share_dir}/Docker\"\n\n# \u958b\u767a\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_dev_dir=\"${path_share_dir}/dev\"\n\n# docker\u30a4\u30e1\u30fc\u30b8\u30d5\u30a1\u30a4\u30eb\u540d(:\u30bf\u30b0\u540d)\nimageName_karma=\"hibo/karma\"\nimageName_webpack=\"hibo/node_webpack\"\nimageName_express=\"hibo/express\"\nimageName_mongodb=\"hibo/mongodb\"\n\n# \u30b3\u30f3\u30c6\u30ca\u540d\ncontainerName_karma=\"karma\"\ncontainerName_webpack=\"webpack\"\ncontainerName_express=\"express\"\ncontainerName_mongodb=\"mongodb\"\n\n\n\nshare/shell/build_monogodb.sh\n#!/bin/bash\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd $path_Dockerfile_dir/mongodb && docker build -t $imageName_mongodb .\n\n\n\u5b9f\u884c\u7528\u306e\u30b7\u30a7\u30eb\u3092\u4f5c\u6210\u3002\n\u6700\u521d\u306fDB\u306e\u5171\u6709\u5148\u3092windows\u3068\u5171\u6709\u3057\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u305f\u306e\u3060\u304c\u3001rename WiredTiger.wt to WiredTiger.wt.1: Text file busy\u306a\u3069\u3068\u8a00\u308f\u308c\u305f\u3002\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u304b\u3089\u3068\u3044\u3046\u60c5\u5831\u306f\u5f97\u305f\u304c\u8a73\u7d30\u306f\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001windows\u3068\u5171\u6709\u3057\u3066\u3044\u306a\u3044\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092-v\u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\nshare/shell/mongodb_docker_start.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_mongodb >/dev/null 2>&1\n\n# karma\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_mongodb\nfi\ndocker run --name $containerName_mongodb --rm -it -p 27017:27017 -v /home/vagrant/DataBase/mongodb:/data/db $imageName_mongodb\n\n\n\u3064\u3065\u3044\u3066express\u306e\u8a2d\u5b9a\n\nshare/Docker/express/Dockerfile.\nFROM node:5.4.0\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\n#gulpfile\u3092\u66f8\u304d\u51fa\u3057\nRUN echo \"var requireDir = require('require-dir'); requireDir('webapp/gulp/tasks', { recurse: true }); \" > gulpfile.js \n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"node_express\",  \"scripts\": { \"start\": \"node webapp/bin/www\", \"gulp\":\"gulp\" }}' > package.json\n\n#\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev gulp \nRUN npm install --save-dev require-dir \nRUN npm install --save-dev gulp-if \nRUN npm install --save-dev gulp-livereload\n\n#\u30b5\u30fc\u30d0\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev express \nRUN npm install --save-dev body-parser \nRUN npm install --save-dev cookie-parser \nRUN npm install --save-dev debug \nRUN npm install --save-dev jade \nRUN npm install --save-dev morgan \nRUN npm install --save-dev serve-favicon \n\n# \u30a6\u30a7\u30d6\u30bd\u30b1\u30c3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev socket.io\n\n# DB\u30c9\u30e9\u30a4\u30d0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev mongodb\n\n\n\nshare/shell/build_express.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd \"${path_Dockerfile_dir}/express\" && docker build -t $imageName_express . \n\n\n\nshare/shell/expess_docker_start.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_express >/dev/null 2>&1\n\n# \u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_express\nfi\n\ndocker run --name $containerName_express --rm -it -p 80:3000 -p 35729:35729 \\\n      -v $path_dev_dir/myExpressGenerator:/usr/src/app/webapp \\\n      $imageName_express /bin/bash -c 'npm run gulp -- watch'\n\n\n\u3053\u308c\u3067\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067\u3001tmux\u958b\u59cb\u30b7\u30a7\u30eb\u3082\u5909\u66f4\u3002\n\nshare/shell/tmux_start.sh\n#!/bin/bash\n\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u540d\u304c\u306a\u3051\u308c\u3070\u5b9a\u7fa9\nif [ -n \"$SESSION_NAME\" ];then\n  session=$SESSION_NAME\nelse\n  session=dev-`date +%s`\nfi\n\n# \u30a6\u30a3\u30f3\u30c9\u30a6\u540d\u3092\u5b9a\u7fa9\nwindow=development\n\n### tmux\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\ntmux -f /home/vagrant/share/config/tmux.conf new-session -d -n $window -s $session  \n\ntmux send-keys \"echo test1\" C-m\n\n#\u30a6\u30a3\u30f3\u30c9\u30a6\u4f5c\u6210\ntmux split-window -h\ntmux send-keys \"./share/shell/karma_docker_start.sh\" C-m\n\ntmux split-window -h\ntmux send-keys \"./share/shell/webpack_docker_start.sh\" C-m\n\ntmux select-pane -t 2\ntmux split-window\ntmux send-keys \"./share/shell/mongodb_docker_start.sh\" C-m\n\ntmux select-pane -t 4\ntmux split-window\ntmux send-keys \"./share/shell/express_docker_start.sh\" C-m\n\n### \u6700\u521d\u306epane\u3092\u9078\u629e\u72b6\u614b\u306b\u3059\u308b\ntmux select-pane -t 1\n\n### \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u30a2\u30bf\u30c3\u30c1\ntmux attach-session -t $session\n\n\n\u30b7\u30a7\u30eb\u3092\u5909\u66f4\u3057\u305f\u3089./share/shell/tmux_start.sh\u3067\u8d77\u52d5\u3002\nmongodb\u3068express\u306e\u9023\u643a\u3092\u8a66\u3057\u3066\u307f\u308b\u3002\nmyExpressGenerator\u30d5\u30a9\u30eb\u30c0\u306fexpress-generator\u3067\u30b9\u30ad\u30e3\u30d5\u30a9\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u3082\u306e\u306b\u8ffd\u8a18\u3002\n\nshare/shell/dev/myExpressGenerator/gulp/tasks/express.js\nvar gulp = require('gulp');\nvar spawn = require('child_process').spawn;\nvar server;\n\nvar livereload = require('gulp-livereload');\n\n// \u30d6\u30e9\u30a6\u30b6\u30ea\u30ed\u30fc\u30c9\u30bf\u30b9\u30af\u3002\ngulp.task('reload',function(){\n     gulp.src(['webapp/public/*/*','webapp/views/*.jade'])\n     .pipe(livereload());  \n});\n\ngulp.task('server',function(){\n    if(server){\n         //\u30b5\u30fc\u30d0\u30fc\u3092\u7d42\u4e86\n         server.kill('SIGKILL');\n    }\n     //\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\n     server = spawn('node',['./webapp/bin/www'], {stdio: ['pipe', process.stdout, process.stderr]});\n\n});\n\ngulp.task('watch',['server'],function(){\n    // webapp\u914d\u4e0b\u306epublic\u30d5\u30a9\u30eb\u30c0\u3092\u9664\u304fjs\u30d5\u30a1\u30a4\u30eb\u304c\u66f4\u65b0\u3055\u308c\u305f\u3089\u30b5\u30fc\u30d0\u30fc\u3092\u518d\u8d77\u52d5\n    gulp.watch(['webapp/**/*.js','!webapp/public/**/*.js'],['server']);\n\n\n    // public\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304bviews\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u305f\u3089\u30d6\u30e9\u30a6\u30b6\u30ea\u30ed\u30fc\u30c9\n    livereload.listen();\n    gulp.watch(['webapp/public/**/**', 'webapp/views/*.jade'], ['reload']);\n});\n\n\nexpress\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30d5\u30a1\u30a4\u30eb\u3002socket.io\u306e\u5ba3\u8a00\u3057\u305f\u3060\u3051\u3002\u524d\u56de\u3068\u5909\u66f4\u306a\u3057\u3002\n\nshare/dev/myExpressGenarator/bin/www.\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar app = require('../app');\nvar debug = require('debug')('myExpressGenerator:server');\nvar http = require('http');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '3000');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Create websocket.\n */\nvar io = require('socket.io').listen(server);\n\nio.on('connection', function(socket){\n  socket.on('chat message', function(msg){\n    io.emit('chat message', msg);\n  });\n});\n\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n\n\n\napp.js\u3067\u306finsert\u3078\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3002\n\nshare/dev/myExpressGenarator/app.js\nvar express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\nvar insert = require('./routes/insert.js');\n\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', routes);\napp.use('/users', users);\napp.use('/insert', insert);\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\n\nmodule.exports = app;\n\n\n\nshare/dev/myExpressGenerator/routes/insert.js\nvar express = require('express');\nvar router = express.Router();\nvar MongoClient = require('mongodb').MongoClient\n  , assert = require('assert');\n\nvar insertDocuments = function(db, callback) {\n  // Get the documents collection\n  var collection = db.collection('documents');\n  // Insert some documents\n  collection.insertMany([\n    {a : 1}, {a : 2}, {a : 3}\n  ], function(err, result) {\n    assert.equal(err, null);\n    assert.equal(3, result.result.n);\n    assert.equal(3, result.ops.length);\n    console.log(\"Inserted 3 documents into the document collection\");\n    callback(result);\n  });\n};\n\n// Connection URL\nvar url = 'mongodb://192.168.50.10:27017/myproject';\n\n/* GET insert. */\nrouter.get('/', function(req, res, next) {\n  // Use connect method to connect to the Server\n  MongoClient.connect(url, function(err, db) {\n    assert.equal(null, err);\n    console.log(\"Connected correctly to server\");\n\n    insertDocuments(db, function() {\n      res.send(\"insert!\");\n      db.close();\n    });\n  });\n});\n\nmodule.exports = router;\n\n\n\u3053\u308c\u3067http://192.168.50.10/insert\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u30a4\u30f3\u30b5\u30fc\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u8d77\u52d5\u4e2d\u306edb\u306edocker\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\nshare/shell/bash_mongodb.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\ndocker exec -it $containerName_mongodb /bin/bash\n\n\n\u4e0a\u306e\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068db\u306e\u3042\u308b\u5834\u6240\u306ebash\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001mongo\u3068\u5165\u529b\u3002\nmongodb\u306e\u30b7\u30a7\u30eb\u304c\u958b\u304b\u308c\u308b\u3002\ndb\u30b7\u30a7\u30eb\u3067show dbs\u3068\u6253\u3061\u8fbc\u3093\u3067\u3001myproject\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002use myproject \u3092\u5165\u529b\u3057\u3001db\u306e\u4f7f\u7528\u3092\u5ba3\u8a00\u3057\u3066\u304b\u3089db.documents.find()\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067\u3001\u8ffd\u52a0\u3055\u308c\u305f\u9805\u76ee\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\u6700\u5f8c\u306b\u30d5\u30a9\u30eb\u30c0\u306e\u69cb\u9020\u3002\nshare\n  - Docker\n    + webpack\n    + karma\n    - mongodb\n      - Dockerfile\n      - docker-entrypoint.sh\n    - express\n      - Dockerfile\n  -shell\n    - env.conf\n    - build_karma.sh\n    - build_webpack.sh\n    - karma_docker_start.sh\n    - webpack_docker_start.sh \n\n    - build_mongodb.sh\n    - build_express.sh\n    - mongodb_docker_start.sh\n    - express_docker_start.sh\n    - bash_mongodb.sh\n  - dev\n    + webpack\n    + karma\n    - myExpressGenerator\n      - gulp\n        - tasks\n          - express.js\n      - app.js\n      - bin\n        - www\n      - routes\n        - index.js\n        - insert.js\n      + views\n      + public\n\n\n\n\n2016/2/4\u8ffd\u8a18\uff1awebpack\u3092gulp\u3092\u4f7f\u3063\u305f\u69cb\u6210\u306b\u5909\u66f4\u3002\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\nshare/shell/env.conf\n#!/bin/bash\n\n# \u5171\u6709\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_share_dir=\"/home/vagrant/share\"\n\n# docker\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_Dockerfile_dir=\"${path_share_dir}/Docker\"\n\n# docker\u30a4\u30e1\u30fc\u30b8\u30d5\u30a1\u30a4\u30eb\u540d(:\u30bf\u30b0\u540d)\nimageName_gulp_webpack=\"hibo/gulp_webpack\"\n\n\n# \u30b3\u30f3\u30c6\u30ca\u540d\ncontainerName_gulp_webpack=\"gulp_webpack\"\n\n\n\n\u30d3\u30eb\u30c9\u7528\u30b7\u30a7\u30eb\n\nshare/shell/build_gulp_webpack.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd \"${path_Dockerfile_dir}/gulp/webpack\" && docker build -t $imageName_gulp_webpack . \n\n\nDocker\u30d5\u30a1\u30a4\u30eb\n\nshare/Docker/gulp/webpack/Dockerfile.\nFROM node:5.5.0\n\nWORKDIR /usr/local/src\n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"my_webpack\",\"scripts\": {\"build\": \"webpack\", \"gulp\":\"gulp\"} }' > package.json\n\nRUN npm i -D webpack\nRUN npm i -D babel-core babel-preset-es2015 babel-preset-react\nRUN npm i -D eslint\nRUN npm i -D pre-commit precommit-hook\nRUN npm i -D lodash\nRUN npm i -D react\n\nRUN npm i -D eslint-loader\nRUN npm i -D babel-loader\nRUN npm i -D css-loader\nRUN npm i -D react-hot-loader\nRUN npm i -D style-loader\n\nRUN npm i -D require-dir \nRUN npm i -D gulp\nRUN npm i -D babel-register\n\n# babel\u3067\u4f7f\u7528\u3059\u308bpresets\u306e\u66f8\u304d\u51fa\u3057\nRUN echo '{\"presets\": [\"es2015\", \"react\"]}' > .babelrc\n\n#gulpfile\u3092\u66f8\u304d\u51fa\u3057\nRUN echo \"var requireDir = require('require-dir'); requireDir('share/dev/gulp/webpack', { recurse: true }); \" > gulpfile.babel.js \n\nRUN mkdir -p /usr/local/src/share\n\n\n\nshare/shell/gulp_webpack_docker_start.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_gulp_webpack >/dev/null 2>&1\n\n# \u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_gulp_webpack\nfi\n\ndocker run --name $containerName_gulp_webpack --rm -it -v $path_share_dir:/usr/local/src/share $imageName_gulp_webpack  /bin/bash -c \\\n           'npm run-script gulp'\n\n\ngulp\u30d5\u30a1\u30a4\u30eb\n\nshare/dev/gulp/webpack/task.js\nvar gulp = require('gulp');\nvar spawn = require('child_process').spawn;\n\ngulp.task('default', ['webpack', 'watch']);\n\ngulp.task('webpack',function(){\n  spawn('npm',['run-script', 'build', '--', '--config', './share/dev/webpack/webpack.config.js', '--progess', '--colors'], {stdio: ['pipe', process.stdout, process.stderr]});\n});\n\ngulp.task('watch',['webpack'],function(){\n  gulp.watch('./share/dev/karma/test/spec/*.js', ['webpack']);\n});\n\n\nwebpack\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\nshare/dev/webpack/webpack.config.js\nrequire('babel-register');\nmodule.exports = require('./configs/karma');\n\n\nkarma\u7528\u8a2d\u5b9a\uff08\u5909\u66f4\u306a\u3057\uff09\n\nshare/dev/webpack/configs/karma.js\n\nimport base from './_base';\nimport path from 'path';\nimport fs from 'fs';\nexport const src = path.resolve(__dirname,  '../../karma/test/spec');\nexport const dist = path.resolve(__dirname, '../../karma/test/dist');\n\nvar entry_point = {};\n\nvar keys = fs.readdirSync(path.resolve(__dirname,'../../karma/test/spec'));\nkeys.forEach((elm,idx)=>{\n  //-spec.js\u3067\u7d42\u308f\u308bjavascript\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3092\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306b\u767b\u9332\n  if( /-spec\\.js$/.test(elm) ){\n    entry_point[elm.replace(\".js\",\"\")] = \"./\"+elm;\n  }\n});\n\nconst webpackConfig = Object.assign(base, {\n  context:src,\n  entry: entry_point,\n  output: {\n    path: dist,\n    filename: '[name].bundle.js'\n  }\n});\n\nexport default webpackConfig;\n\n\n\u30d5\u30a9\u30eb\u30c0\u306e\u69cb\u9020\u3002\nshare\n  - Docker\n    + webpack\n    + karma\n    + mongodb\n    + express\n    - gulp\n      - webpack\n        - Dockerfile\n\n  - shell\n    - env.conf\n    - gulp_webpack_docker_start.sh\n    - build_gulp_webpack.sh\n\n  - dev\n    + webpack\n    + karma\n    + myExpressGenerator\n    - gulp\n      - webpack\n        - task.js\n\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nterminal multiplexer\n\u9054\u4eba\u306b\u5b66\u3076.tmux.conf\u306e\u57fa\u672c\u8a2d\u5b9a\ntmux\u57fa\u672c\u306e\u30b3\u30de\u30f3\u30c9\n\u30bf\u30fc\u30df\u30ca\u30eb\u30de\u30eb\u30c1\u30d7\u30ec\u30af\u30b5 tmux \u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\ntmux\u3067\u8907\u6570\u30b5\u30fc\u30d0\u306e\u540c\u6642\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\ntmux\u3092\u4f7f\u3044\u59cb\u3081\u305f\u306e\u3067\u57fa\u672c\u7684\u306a\u6a5f\u80fd\u306e\u4f7f\u3044\u65b9\u3068\u304b\u3092\u6574\u7406\u3057\u3066\u307f\u305f\ntmux\u3092\u8d77\u52d5\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3053\u3068\u3068\u305d\u306e\u5bfe\u51e6\u306e\u5099\u5fd8\u9332\n\u9054\u4eba\u306e\u8a2d\u5b9a\u3092\u7d99\u627f\u3055\u305b\u3066\u3082\u3089\u3063\u305f\nwebpack configure\nwebpack\u306econfig\nWeb\u958b\u767a\u306e\u672a\u6765 \u2013 React\u3001Falcor\u304a\u3088\u3073ES6\nregexp\nnode.js doc fs\nnode.js doc spawn\nnode-mongodb-native\ndocker mongo\nBabel\u30926\u7cfb\u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u3089gulp\u3067\u3053\u3051\u308b\ngulp-webpack \u3067\u8907\u6570 JS \u306e\u66f8\u304d\u51fa\u3057 Tips\ngulp\nReactRadarScope\n[\u524d\u56de][link-18]\u306e\u7d9a\u304d\u3002\u8907\u6570\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f\u306e\u304c\u9762\u5012\u306a\u305f\u3081\uff11\u3064\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u5206\u5272\u3059\u308b\u3002\n\n(2016/2/4 \u8ffd\u8a18\uff09webpack\u306e\u8a2d\u5b9a\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u305f\u6642\u306f\u3046\u307e\u304f\u3044\u304f\u304c\u3001\u65b0\u898f\u4f5c\u6210\u3057\u305f\u3068\u304d\u306b\u8a8d\u8b58\u3057\u306a\u304b\u3063\u305f\u306e\u3067gulp\u3092\u4f7f\u7528\u3059\u308b\u69cb\u6210\u306b\u5909\u66f4\u3002\n\n#tmux\u3067\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u5206\u5272\n\ntmux\u306e\u8a2d\u5b9a\u306f\u30b3\u30d4\u30da\u3002\n[\u9054\u4eba\u306b\u5b66\u3076.tmux.conf\u306e\u57fa\u672c\u8a2d\u5b9a][link-4]\n\n```share/config/tmux.conf\n#prefix C-a\u306b\u5909\u66f4\u3059\u308b\nset -g prefix C-a\n\n# C-b\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3092\u89e3\u9664\u3059\u308b\nunbind C-b\n\n# \u30ad\u30fc\u30b9\u30c8\u30ed\u30fc\u30af\u306e\u30c7\u30a3\u30ec\u30a4\u3092\u6e1b\u3089\u3059\nset -sg escape-time 1\n\n# \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30921\u304b\u3089\u59cb\u3081\u308b\nset -g base-index 1\n\n# \u30da\u30a4\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30921\u304b\u3089\u59cb\u3081\u308b\nsetw -g pane-base-index 1\n\n# \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30ed\u30fc\u30c9\u3059\u308b\nbind r source-file ~/.tmux.conf \\; display \"Reloaded!\"\n\n# C-a*2\u3067tmux\u5185\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306bC-a\u3092\u9001\u308b\nbind C-a send-prefix\n\n# | \u3067\u30da\u30a4\u30f3\u3092\u7e26\u306b\u5206\u5272\u3059\u308b\nbind | split-window -h\n\n# - \u3067\u30da\u30a4\u30f3\u3092\u6a2a\u306b\u5206\u5272\u3059\u308b\nbind - split-window -v\n\n# Vim\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3067\u30da\u30a4\u30f3\u3092\u79fb\u52d5\u3059\u308b\nbind h select-pane -L\nbind j select-pane -D\nbind k select-pane -U\nbind l select-pane -R\nbind -r C-h select-window -t :-\nbind -r C-l select-window -t :+\n\n# Vim\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3067\u30da\u30a4\u30f3\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\nbind -r H resize-pane -L 5\nbind -r J resize-pane -D 5\nbind -r K resize-pane -U 5\nbind -r L resize-pane -R 5\n\n\n# 256\u8272\u7aef\u672b\u3092\u4f7f\u7528\u3059\u308b\nset -g default-terminal \"screen-256color\"\n\n# \u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\n\n# \u30a6\u30a3\u30f3\u30c9\u30a6\u30ea\u30b9\u30c8\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nsetw -g window-status-fg cyan\nsetw -g window-status-bg default\nsetw -g window-status-attr dim\n# \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u76ee\u7acb\u305f\u305b\u308b\nsetw -g window-status-current-fg white\nsetw -g window-status-current-bg red\nsetw -g window-status-current-attr bright\n\n# \u30da\u30a4\u30f3\u30dc\u30fc\u30c0\u30fc\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nset -g pane-border-fg green\nset -g pane-border-bg black\n# \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30da\u30a4\u30f3\u3092\u76ee\u7acb\u305f\u305b\u308b\nset -g pane-active-border-fg white\nset -g pane-active-border-bg yellow\n\n# \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\nset -g message-fg white\nset -g message-bg black\nset -g message-attr bright\n\n# \u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\n## \u5de6\u30d1\u30cd\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nset -g status-left-length 40\nset -g status-left \"#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P\"\n## \u53f3\u30d1\u30cd\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nset -g status-right \"#[fg=cyan][%Y-%m-%d(%a) %H:%M]\"\n## \u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u306eUTF-8\u30b5\u30dd\u30fc\u30c8\u3092\u6709\u52b9\u306b\u3059\u308b\nset -g status-utf8 on\n## \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u306e\u9593\u9694\u3092\u8a2d\u5b9a\u3059\u308b(\u30c7\u30d5\u30a9\u30eb\u30c8 15\u79d2)\nset -g status-interval 60\n## \u30a6\u30a3\u30f3\u30c9\u30a6\u30ea\u30b9\u30c8\u306e\u4f4d\u7f6e\u3092\u4e2d\u5fc3\u5bc4\u305b\u306b\u3059\u308b\nset -g status-justify centre\n## \u30f4\u30a3\u30b8\u30e5\u30a2\u30eb\u30ce\u30fc\u30c6\u30a3\u30d5\u30a3\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\nsetw -g monitor-activity on\nset -g visual-activity on\n## \u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u3092\u4e0a\u90e8\u306b\u8868\u793a\u3059\u308b\nset -g status-position top\n```\n\n\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u5206\u5272\u3057\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u3057\u305f\u3044\u3002\n\u305d\u306e\u305f\u3081\u3001gitbash\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u5927\u304d\u304f\u3057\u3066\u304a\u304f\u3002\n\ngitbash\u306e\u4e0a\u306e\u30d0\u30fc\u3067\u53f3\u30af\u30ea\u30c3\u30af\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u9078\u629e\u80a2\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u30bf\u30d6\u3092\u958b\u304f\u3002\n\u5e45120\u3001\u9ad8\u305535\u3067\u8a2d\u5b9a\u3057\u3066\u307f\u305f\u3002\n\n![terminal.png](https://qiita-image-store.s3.amazonaws.com/0/99876/68b9ccc0-2f5a-9762-f46f-fcbebdee9710.png)\n\ntmux\u306fubuntu14.04\u306b\u306f\u30d7\u30ec\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u305f\u3002\n\u8d77\u52d5\u3057\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u5206\u5272\u3059\u308b\u30b7\u30a7\u30eb\u3092\u4f5c\u6210\u3002\n\n```share/shell/tmux_start.sh\n#!/bin/bash\n\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u540d\u304c\u306a\u3051\u308c\u3070\u5b9a\u7fa9\nif [ -n \"$SESSION_NAME\" ];then\n  session=$SESSION_NAME\nelse\n  session=dev-`date +%s`\nfi\n\n# \u30a6\u30a3\u30f3\u30c9\u30a6\u540d\u3092\u5b9a\u7fa9\nwindow=development\n\n### tmux\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\ntmux -f /home/vagrant/share/config/tmux.conf new-session -d -n $window -s $session  \n\ntmux send-keys \"echo test1\" C-m\n\n#\u30a6\u30a3\u30f3\u30c9\u30a6\u4f5c\u6210\ntmux split-window -h\ntmux send-keys \"echo test2\" C-m\n#tmux send-keys \"./share/shell/karma_docker_start.sh\" C-m\n  \ntmux split-window -h\ntmux send-keys \"echo test4\" C-m\n\ntmux select-pane -t 2\ntmux split-window\ntmux send-keys \"echo test3\" C-m\n\ntmux select-pane -t 4\ntmux split-window\ntmux send-keys \"echo test5\" C-m\n\n### \u6700\u521d\u306epane\u3092\u9078\u629e\u72b6\u614b\u306b\u3059\u308b\ntmux select-pane -t 1\n\n### \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u30a2\u30bf\u30c3\u30c1\ntmux attach-session -t $session\n```\n\n# webpack\u3068karma\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08Docker)\n\n\u524d\u56de\u3068\u540c\u69d8\u306bDockerfile\u304b\u3089\u30d3\u30eb\u30c9\u3002\nwindows\u3067\u30d5\u30a1\u30a4\u30eb\u4f5c\u3063\u305f\u3089\u6539\u884c\u30b3\u30fc\u30c9\u304cCRLF\u3067\u30b7\u30a7\u30eb\u304c\u52d5\u304b\u306a\u304f\u306630\u5206\u304f\u3089\u3044\u60a9\u307f\u307e\u3057\u305f\u3002\n\u6539\u884c\u30b3\u30fc\u30c9LF\u3067\u4fdd\u5b58\u3057\u306a\u304a\u3057\u3066\u8d77\u52d5\u78ba\u8a8d\u3002\n\n```share/shell/env.conf\n#!/bin/bash\n\n# \u5171\u6709\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_share_dir=\"/home/vagrant/share\"\n\n# docker\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_Dockerfile_dir=\"${path_share_dir}/Docker\"\n\n# \u958b\u767a\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_dev_dir=\"${path_share_dir}/dev\"\n\n# docker\u30a4\u30e1\u30fc\u30b8\u30d5\u30a1\u30a4\u30eb\u540d(:\u30bf\u30b0\u540d)\nimageName_karma=\"hibo/karma\"\nimageName_webpack=\"hibo/node_webpack\"\nimageName_express=\"hibo/express\"\n\n# \u30b3\u30f3\u30c6\u30ca\u540d\ncontainerName_karma=\"karma\"\ncontainerName_webpack=\"webpack\"\n\n```\n\n```share/shell/build_webpack.sh\n#!/bin/bash\n\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd $path_Dockerfile_dir/webpack && docker build -t $imageName_webpack .\n```\n\n```share/Docker/webpack/Dockerfile.\nFROM node:5.4.0\n\nRUN mkdir -p /usr/local/src/share\nWORKDIR /usr/local/src\n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"my_webpack\",\"scripts\": {\"build\": \"webpack\"} }' > package.json\n\nRUN npm i -D webpack\nRUN npm i -D babel-core babel-preset-es2015 babel-preset-react\nRUN npm i -D eslint\nRUN npm i -D pre-commit precommit-hook\nRUN npm i -D lodash\nRUN npm i -D react\n\nRUN npm i -D eslint-loader\nRUN npm i -D babel-loader\nRUN npm i -D css-loader\nRUN npm i -D react-hot-loader\nRUN npm i -D style-loader\n\n# babel\u3067\u4f7f\u7528\u3059\u308bpresets\u306e\u66f8\u304d\u51fa\u3057\nRUN echo '{\"presets\": [\"es2015\", \"react\"]}' > .babelrc\n``\n\n```share/shell/webpack_docker_start.sh\n#!/bin/bash\n\n# \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u8fbc\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306ekarma\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_webpack >/dev/null 2>&1\n\n# \u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_webpack\nfi\n\n# \u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\ndocker run -it --name $containerName_webpack --rm \\\n           -v $path_dev_dir:/usr/local/src/share \\\n           $imageName_webpack /bin/bash -c \\\n           'npm run-script build -- --config ./share/webpack/webpack.config.js --progess --colors --watch'\n```\n\n```npm run build -- --options```\u306b\u5909\u66f4\u3057\u305f\u306e\u304c\u4eca\u56de\u65b0\u3057\u304f\u899a\u3048\u305f\u3053\u3068\u3002\nDocker\u3067\u4e00\u3064\u3060\u3051\u52d5\u304b\u3059\u306a\u3089\u524d\u56de\u306e\u3088\u3046\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3002\npackage.json\u306escripts\u306b\u6307\u5b9a\u3057\u3066\u3084\u308c\u3070\u30d1\u30b9\u3092\u901a\u3055\u306a\u304f\u3066\u3082```npm run \u30b9\u30af\u30ea\u30d7\u30c8\u540d```\u3067\u5b9f\u884c\u3067\u304d\u308b\u3002\n\u30aa\u30d7\u30b7\u30e7\u30f3\u306f -- \u306e\u5f8c\u306b\u7d9a\u3051\u3066\u66f8\u3044\u3066\u3084\u308c\u3070OK\u3002\n\u4eca\u56de\u306e\u5834\u5408\u3060\u3068\u3001```npm run build -- --config ./share/webpack/webpack.config.js --progess --colors --watch```\u306fwebpack\u306b\u30d1\u30b9\u304c\u901a\u3063\u3066\u3044\u308b\u3068\u304d\u306e```webpack --config ./share/webpack/webpack.config.js --progess --colors --watch```\u3068\u540c\u610f\u3002\n\n\u524d\u56de\u306ftest-context.js\u3092\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u3059\u308b\u65b9\u6cd5\u3092\u8a66\u3057\u305f\u306e\u3067\u3001\n\u4eca\u56de\u306f-spec.js\u306e\u5404\u30d5\u30a1\u30a4\u30eb\u3092\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u3059\u308b\u65b9\u6cd5\u3092\u8a66\u3057\u3066\u307f\u308b\u3002\n\n```share/dev/webpack/webpack.config.js\nrequire('babel-core/register');\nmodule.exports = require('./configs/karma');\n```\n\n```share/dev/webpack/configs/_base.js\nexport default {\n  entry: 'app.js',\n  output: { filename: 'bundle.js' },\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'babel'\n      }\n    ]\n  },\n  resolve: {\n    extensions: ['', '.js'] \n  },\n  watchOptions: {\n    poll: true\n  }\n};\n\n```\n\n```share/dev/configs/karma.js\n\nimport base from './_base';\nimport path from 'path';\nimport fs from 'fs';\nexport const src = path.resolve(__dirname,  '../../karma/test/spec');\nexport const dist = path.resolve(__dirname, '../../karma/test/dist');\n\nvar entry_point = {};\n// spec\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u4e00\u89a7\u3092\u53d6\u5f97\u3002\nvar filenames = fs.readdirSync(path.resolve(__dirname,'../../karma/test/spec'));\n\nfilenames.forEach((elm, index)=>{\n  //-spec.js\u3067\u7d42\u308f\u308bjavascript\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3092\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306b\u767b\u9332\n  if( /-spec\\.js$/.test(elm) ){\n    entry_point[elm.replace(\".js\",\"\")] = \"./\" + elm;\n  }\n});\n\nconst webpackConfig = Object.assign(base, {\n  context:src,\n  entry: entry_point,\n  output: {\n    path: dist,\n    filename: '[name].bundle.js'\n  }\n});\n\nexport default webpackConfig;\n```\n\n\u7d9a\u3044\u3066karma\u3002\n\n```share/Docker/karma/Dockerfile.\nFROM node:4.2.4\n\nRUN mkdir -p /usr/karma/share\nWORKDIR /usr/karma\n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"my_karma\",\"scripts\": {\"tests\": \"karma start\"} }' > package.json\n\n# karma\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev jasmine-core\nRUN npm install --save-dev karma\nRUN npm install --save-dev karma-jasmine\nRUN npm install --save-dev jasmine\nRUN npm install --save-dev karma-phantomjs-launcher\n```\n\n```share/shell/build_karma.sh\n#!/bin/bash\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd $path_Dockerfile_dir/karma && docker build -t $imageName_karma .\n```\n\n```share/shell/karma_docker_start.sh\n#!/bin/bash\n\n# \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u8fbc\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306ekarma\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_karma >/dev/null 2>&1\n\n# karma\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_karma\nfi\n\n# \u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\ndocker run -it --name $containerName_karma --rm \\\n           -v $path_dev_dir:/usr/karma/share \\\n           $imageName_karma /bin/bash -c \\\n           'npm run-script tests -- ./share/karma/karma.conf.js'\n```\n\n```share/dev/karma/karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    browsers: ['PhantomJS'],\n    files: [ { pattern: './test/dist/*-spec.bundle.js', watched: true } ],\n    frameworks: ['jasmine'],\n    autoWatch: true,\n    singleRun:false,\n    logLevel: config.LOG_INFO,\n    port: 9876,\n    concurrency: Infinity\n  }); \n};\n\n```\n\n\n\u3053\u3053\u307e\u3067\u306e\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n\n```\nshare\n  - Docker\n    - webpack\n      - Dockerfile\n    - karma\n      - Dockerfile\n  -shell\n    - env.conf\n    - build_karma.sh\n    - build_webpack.sh\n    - karma_docker_start.sh\n    - webpack_docker_start.sh \n  - dev\n    - webpack\n      - webpack.config.js\n      - configs\n        - _base.js\n        - karma.js\n    - karma\n      - karma.conf.js \n      - test\n        + dist\n        - spec\n          - test-spec.js\n        - source\n          - test.js\n          \n```\n\n#mongodb\u3068express\u306e\u7528\u610f\n\nexpress\u306f[\u524d\u56de][link-18]\u3068\u3055\u307b\u3069\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u3002\nmongodb\u306f3.2\u3092\u4f7f\u7528\u3057\u305f\u3002\nmongodb\u306eDockerfile\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\n[docker-library/mongo][link-17]\n\n\u30d3\u30eb\u30c9\u7528\u306e\u30b7\u30a7\u30eb\u3092\u4f5c\u6210\u3002\n\n```share/shell/env.conf\n#!/bin/bash\n\n# \u5171\u6709\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_share_dir=\"/home/vagrant/share\"\n\n# docker\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_Dockerfile_dir=\"${path_share_dir}/Docker\"\n\n# \u958b\u767a\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_dev_dir=\"${path_share_dir}/dev\"\n\n# docker\u30a4\u30e1\u30fc\u30b8\u30d5\u30a1\u30a4\u30eb\u540d(:\u30bf\u30b0\u540d)\nimageName_karma=\"hibo/karma\"\nimageName_webpack=\"hibo/node_webpack\"\nimageName_express=\"hibo/express\"\nimageName_mongodb=\"hibo/mongodb\"\n\n# \u30b3\u30f3\u30c6\u30ca\u540d\ncontainerName_karma=\"karma\"\ncontainerName_webpack=\"webpack\"\ncontainerName_express=\"express\"\ncontainerName_mongodb=\"mongodb\"\n```\n\n```share/shell/build_monogodb.sh\n#!/bin/bash\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd $path_Dockerfile_dir/mongodb && docker build -t $imageName_mongodb .\n```\n\n\u5b9f\u884c\u7528\u306e\u30b7\u30a7\u30eb\u3092\u4f5c\u6210\u3002\n\u6700\u521d\u306fDB\u306e\u5171\u6709\u5148\u3092windows\u3068\u5171\u6709\u3057\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u305f\u306e\u3060\u304c\u3001``` rename WiredTiger.wt to WiredTiger.wt.1: Text file busy```\u306a\u3069\u3068\u8a00\u308f\u308c\u305f\u3002\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u304b\u3089\u3068\u3044\u3046\u60c5\u5831\u306f\u5f97\u305f\u304c\u8a73\u7d30\u306f\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001windows\u3068\u5171\u6709\u3057\u3066\u3044\u306a\u3044\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092-v\u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n```share/shell/mongodb_docker_start.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_mongodb >/dev/null 2>&1\n\n# karma\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_mongodb\nfi\ndocker run --name $containerName_mongodb --rm -it -p 27017:27017 -v /home/vagrant/DataBase/mongodb:/data/db $imageName_mongodb\n```\n\n\u3064\u3065\u3044\u3066express\u306e\u8a2d\u5b9a\n\n```share/Docker/express/Dockerfile.\nFROM node:5.4.0\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\n#gulpfile\u3092\u66f8\u304d\u51fa\u3057\nRUN echo \"var requireDir = require('require-dir'); requireDir('webapp/gulp/tasks', { recurse: true }); \" > gulpfile.js \n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"node_express\",  \"scripts\": { \"start\": \"node webapp/bin/www\", \"gulp\":\"gulp\" }}' > package.json\n\n#\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev gulp \nRUN npm install --save-dev require-dir \nRUN npm install --save-dev gulp-if \nRUN npm install --save-dev gulp-livereload\n\n#\u30b5\u30fc\u30d0\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev express \nRUN npm install --save-dev body-parser \nRUN npm install --save-dev cookie-parser \nRUN npm install --save-dev debug \nRUN npm install --save-dev jade \nRUN npm install --save-dev morgan \nRUN npm install --save-dev serve-favicon \n\n# \u30a6\u30a7\u30d6\u30bd\u30b1\u30c3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev socket.io\n\n# DB\u30c9\u30e9\u30a4\u30d0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev mongodb\n```\n\n\n```share/shell/build_express.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd \"${path_Dockerfile_dir}/express\" && docker build -t $imageName_express . \n```\n\n```share/shell/expess_docker_start.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_express >/dev/null 2>&1\n\n# \u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_express\nfi\n\ndocker run --name $containerName_express --rm -it -p 80:3000 -p 35729:35729 \\\n      -v $path_dev_dir/myExpressGenerator:/usr/src/app/webapp \\\n      $imageName_express /bin/bash -c 'npm run gulp -- watch'\n```\n\n\u3053\u308c\u3067\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067\u3001tmux\u958b\u59cb\u30b7\u30a7\u30eb\u3082\u5909\u66f4\u3002\n\n```share/shell/tmux_start.sh\n#!/bin/bash\n\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u540d\u304c\u306a\u3051\u308c\u3070\u5b9a\u7fa9\nif [ -n \"$SESSION_NAME\" ];then\n  session=$SESSION_NAME\nelse\n  session=dev-`date +%s`\nfi\n\n# \u30a6\u30a3\u30f3\u30c9\u30a6\u540d\u3092\u5b9a\u7fa9\nwindow=development\n\n### tmux\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\ntmux -f /home/vagrant/share/config/tmux.conf new-session -d -n $window -s $session  \n\ntmux send-keys \"echo test1\" C-m\n\n#\u30a6\u30a3\u30f3\u30c9\u30a6\u4f5c\u6210\ntmux split-window -h\ntmux send-keys \"./share/shell/karma_docker_start.sh\" C-m\n  \ntmux split-window -h\ntmux send-keys \"./share/shell/webpack_docker_start.sh\" C-m\n\ntmux select-pane -t 2\ntmux split-window\ntmux send-keys \"./share/shell/mongodb_docker_start.sh\" C-m\n\ntmux select-pane -t 4\ntmux split-window\ntmux send-keys \"./share/shell/express_docker_start.sh\" C-m\n\n### \u6700\u521d\u306epane\u3092\u9078\u629e\u72b6\u614b\u306b\u3059\u308b\ntmux select-pane -t 1\n\n### \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u30a2\u30bf\u30c3\u30c1\ntmux attach-session -t $session\n```\n\n\u30b7\u30a7\u30eb\u3092\u5909\u66f4\u3057\u305f\u3089```./share/shell/tmux_start.sh```\u3067\u8d77\u52d5\u3002\nmongodb\u3068express\u306e\u9023\u643a\u3092\u8a66\u3057\u3066\u307f\u308b\u3002\nmyExpressGenerator\u30d5\u30a9\u30eb\u30c0\u306fexpress-generator\u3067\u30b9\u30ad\u30e3\u30d5\u30a9\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u3082\u306e\u306b\u8ffd\u8a18\u3002\n\n```share/shell/dev/myExpressGenerator/gulp/tasks/express.js\nvar gulp = require('gulp');\nvar spawn = require('child_process').spawn;\nvar server;\n\nvar livereload = require('gulp-livereload');\n\n// \u30d6\u30e9\u30a6\u30b6\u30ea\u30ed\u30fc\u30c9\u30bf\u30b9\u30af\u3002\ngulp.task('reload',function(){\n     gulp.src(['webapp/public/*/*','webapp/views/*.jade'])\n     .pipe(livereload());  \n});\n\ngulp.task('server',function(){\n    if(server){\n         //\u30b5\u30fc\u30d0\u30fc\u3092\u7d42\u4e86\n         server.kill('SIGKILL');\n    }\n     //\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\n     server = spawn('node',['./webapp/bin/www'], {stdio: ['pipe', process.stdout, process.stderr]});\n\n});\n\ngulp.task('watch',['server'],function(){\n    // webapp\u914d\u4e0b\u306epublic\u30d5\u30a9\u30eb\u30c0\u3092\u9664\u304fjs\u30d5\u30a1\u30a4\u30eb\u304c\u66f4\u65b0\u3055\u308c\u305f\u3089\u30b5\u30fc\u30d0\u30fc\u3092\u518d\u8d77\u52d5\n    gulp.watch(['webapp/**/*.js','!webapp/public/**/*.js'],['server']);\n    \n\n    // public\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304bviews\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u305f\u3089\u30d6\u30e9\u30a6\u30b6\u30ea\u30ed\u30fc\u30c9\n    livereload.listen();\n    gulp.watch(['webapp/public/**/**', 'webapp/views/*.jade'], ['reload']);\n});\n```\n\nexpress\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30d5\u30a1\u30a4\u30eb\u3002socket.io\u306e\u5ba3\u8a00\u3057\u305f\u3060\u3051\u3002\u524d\u56de\u3068\u5909\u66f4\u306a\u3057\u3002\n\n```share/dev/myExpressGenarator/bin/www.\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar app = require('../app');\nvar debug = require('debug')('myExpressGenerator:server');\nvar http = require('http');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '3000');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Create websocket.\n */\nvar io = require('socket.io').listen(server);\n\nio.on('connection', function(socket){\n  socket.on('chat message', function(msg){\n    io.emit('chat message', msg);\n  });\n});\n\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n\n```\n\napp.js\u3067\u306finsert\u3078\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3002\n\n```share/dev/myExpressGenarator/app.js\nvar express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\nvar insert = require('./routes/insert.js');\n\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', routes);\napp.use('/users', users);\napp.use('/insert', insert);\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\n\nmodule.exports = app;\n```\n\n```share/dev/myExpressGenerator/routes/insert.js\nvar express = require('express');\nvar router = express.Router();\nvar MongoClient = require('mongodb').MongoClient\n  , assert = require('assert');\n\nvar insertDocuments = function(db, callback) {\n  // Get the documents collection\n  var collection = db.collection('documents');\n  // Insert some documents\n  collection.insertMany([\n    {a : 1}, {a : 2}, {a : 3}\n  ], function(err, result) {\n    assert.equal(err, null);\n    assert.equal(3, result.result.n);\n    assert.equal(3, result.ops.length);\n    console.log(\"Inserted 3 documents into the document collection\");\n    callback(result);\n  });\n};\n\n// Connection URL\nvar url = 'mongodb://192.168.50.10:27017/myproject';\n\n/* GET insert. */\nrouter.get('/', function(req, res, next) {\n  // Use connect method to connect to the Server\n  MongoClient.connect(url, function(err, db) {\n    assert.equal(null, err);\n    console.log(\"Connected correctly to server\");\n\n    insertDocuments(db, function() {\n      res.send(\"insert!\");\n      db.close();\n    });\n  });\n});\n\nmodule.exports = router;\n```\n\n\u3053\u308c\u3067http://192.168.50.10/insert\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u30a4\u30f3\u30b5\u30fc\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u8d77\u52d5\u4e2d\u306edb\u306edocker\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n```share/shell/bash_mongodb.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\ndocker exec -it $containerName_mongodb /bin/bash\n```\n\n\u4e0a\u306e\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068db\u306e\u3042\u308b\u5834\u6240\u306ebash\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001```mongo```\u3068\u5165\u529b\u3002\nmongodb\u306e\u30b7\u30a7\u30eb\u304c\u958b\u304b\u308c\u308b\u3002\ndb\u30b7\u30a7\u30eb\u3067```show dbs```\u3068\u6253\u3061\u8fbc\u3093\u3067\u3001myproject\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002```use myproject``` \u3092\u5165\u529b\u3057\u3001db\u306e\u4f7f\u7528\u3092\u5ba3\u8a00\u3057\u3066\u304b\u3089```db.documents.find()```\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067\u3001\u8ffd\u52a0\u3055\u308c\u305f\u9805\u76ee\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n\u6700\u5f8c\u306b\u30d5\u30a9\u30eb\u30c0\u306e\u69cb\u9020\u3002\n\n```\nshare\n  - Docker\n    + webpack\n    + karma\n    - mongodb\n      - Dockerfile\n      - docker-entrypoint.sh\n    - express\n      - Dockerfile\n  -shell\n    - env.conf\n    - build_karma.sh\n    - build_webpack.sh\n    - karma_docker_start.sh\n    - webpack_docker_start.sh \n\n    - build_mongodb.sh\n    - build_express.sh\n    - mongodb_docker_start.sh\n    - express_docker_start.sh\n    - bash_mongodb.sh\n  - dev\n    + webpack\n    + karma\n    - myExpressGenerator\n      - gulp\n        - tasks\n          - express.js\n      - app.js\n      - bin\n        - www\n      - routes\n        - index.js\n        - insert.js\n      + views\n      + public\n\n          \n```\n\n#2016/2/4\u8ffd\u8a18\uff1awebpack\u3092gulp\u3092\u4f7f\u3063\u305f\u69cb\u6210\u306b\u5909\u66f4\u3002\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\n```share/shell/env.conf\n#!/bin/bash\n\n# \u5171\u6709\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_share_dir=\"/home/vagrant/share\"\n\n# docker\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\npath_Dockerfile_dir=\"${path_share_dir}/Docker\"\n\n# docker\u30a4\u30e1\u30fc\u30b8\u30d5\u30a1\u30a4\u30eb\u540d(:\u30bf\u30b0\u540d)\nimageName_gulp_webpack=\"hibo/gulp_webpack\"\n\n\n# \u30b3\u30f3\u30c6\u30ca\u540d\ncontainerName_gulp_webpack=\"gulp_webpack\"\n\n```\n\n\u30d3\u30eb\u30c9\u7528\u30b7\u30a7\u30eb\n\n```share/shell/build_gulp_webpack.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\ncd \"${path_Dockerfile_dir}/gulp/webpack\" && docker build -t $imageName_gulp_webpack . \n```\n\nDocker\u30d5\u30a1\u30a4\u30eb\n\n```share/Docker/gulp/webpack/Dockerfile.\nFROM node:5.5.0\n\nWORKDIR /usr/local/src\n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"my_webpack\",\"scripts\": {\"build\": \"webpack\", \"gulp\":\"gulp\"} }' > package.json\n\nRUN npm i -D webpack\nRUN npm i -D babel-core babel-preset-es2015 babel-preset-react\nRUN npm i -D eslint\nRUN npm i -D pre-commit precommit-hook\nRUN npm i -D lodash\nRUN npm i -D react\n\nRUN npm i -D eslint-loader\nRUN npm i -D babel-loader\nRUN npm i -D css-loader\nRUN npm i -D react-hot-loader\nRUN npm i -D style-loader\n\nRUN npm i -D require-dir \nRUN npm i -D gulp\nRUN npm i -D babel-register\n\n# babel\u3067\u4f7f\u7528\u3059\u308bpresets\u306e\u66f8\u304d\u51fa\u3057\nRUN echo '{\"presets\": [\"es2015\", \"react\"]}' > .babelrc\n\n#gulpfile\u3092\u66f8\u304d\u51fa\u3057\nRUN echo \"var requireDir = require('require-dir'); requireDir('share/dev/gulp/webpack', { recurse: true }); \" > gulpfile.babel.js \n\nRUN mkdir -p /usr/local/src/share\n```\n\n```share/shell/gulp_webpack_docker_start.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_gulp_webpack >/dev/null 2>&1\n\n# \u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_gulp_webpack\nfi\n\ndocker run --name $containerName_gulp_webpack --rm -it -v $path_share_dir:/usr/local/src/share $imageName_gulp_webpack  /bin/bash -c \\\n           'npm run-script gulp'\n```\n\ngulp\u30d5\u30a1\u30a4\u30eb\n\n```share/dev/gulp/webpack/task.js\nvar gulp = require('gulp');\nvar spawn = require('child_process').spawn;\n\ngulp.task('default', ['webpack', 'watch']);\n\ngulp.task('webpack',function(){\n  spawn('npm',['run-script', 'build', '--', '--config', './share/dev/webpack/webpack.config.js', '--progess', '--colors'], {stdio: ['pipe', process.stdout, process.stderr]});\n});\n\ngulp.task('watch',['webpack'],function(){\n  gulp.watch('./share/dev/karma/test/spec/*.js', ['webpack']);\n});\n```\n\nwebpack\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\n```share/dev/webpack/webpack.config.js\nrequire('babel-register');\nmodule.exports = require('./configs/karma');\n```\n\nkarma\u7528\u8a2d\u5b9a\uff08\u5909\u66f4\u306a\u3057\uff09\n\n```share/dev/webpack/configs/karma.js\n\nimport base from './_base';\nimport path from 'path';\nimport fs from 'fs';\nexport const src = path.resolve(__dirname,  '../../karma/test/spec');\nexport const dist = path.resolve(__dirname, '../../karma/test/dist');\n\nvar entry_point = {};\n\nvar keys = fs.readdirSync(path.resolve(__dirname,'../../karma/test/spec'));\nkeys.forEach((elm,idx)=>{\n  //-spec.js\u3067\u7d42\u308f\u308bjavascript\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3092\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306b\u767b\u9332\n  if( /-spec\\.js$/.test(elm) ){\n    entry_point[elm.replace(\".js\",\"\")] = \"./\"+elm;\n  }\n});\n\nconst webpackConfig = Object.assign(base, {\n  context:src,\n  entry: entry_point,\n  output: {\n    path: dist,\n    filename: '[name].bundle.js'\n  }\n});\n\nexport default webpackConfig;\n```\n\n\u30d5\u30a9\u30eb\u30c0\u306e\u69cb\u9020\u3002\n\n```\nshare\n  - Docker\n    + webpack\n    + karma\n    + mongodb\n    + express\n    - gulp\n      - webpack\n        - Dockerfile\n\n  - shell\n    - env.conf\n    - gulp_webpack_docker_start.sh\n    - build_gulp_webpack.sh\n    \n  - dev\n    + webpack\n    + karma\n    + myExpressGenerator\n    - gulp\n      - webpack\n        - task.js\n```\n\n\n\n#\u53c2\u8003\u30b5\u30a4\u30c8\n[terminal multiplexer][link-8]\n[\u9054\u4eba\u306b\u5b66\u3076.tmux.conf\u306e\u57fa\u672c\u8a2d\u5b9a][link-4]\n[tmux\u57fa\u672c\u306e\u30b3\u30de\u30f3\u30c9][link-5]\n[\u30bf\u30fc\u30df\u30ca\u30eb\u30de\u30eb\u30c1\u30d7\u30ec\u30af\u30b5 tmux \u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b][link-7]\n[tmux\u3067\u8907\u6570\u30b5\u30fc\u30d0\u306e\u540c\u6642\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3][link-1]\n[tmux\u3092\u4f7f\u3044\u59cb\u3081\u305f\u306e\u3067\u57fa\u672c\u7684\u306a\u6a5f\u80fd\u306e\u4f7f\u3044\u65b9\u3068\u304b\u3092\u6574\u7406\u3057\u3066\u307f\u305f][link-6]\n[tmux\u3092\u8d77\u52d5\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3053\u3068\u3068\u305d\u306e\u5bfe\u51e6\u306e\u5099\u5fd8\u9332][link-2]\n[\u9054\u4eba\u306e\u8a2d\u5b9a\u3092\u7d99\u627f\u3055\u305b\u3066\u3082\u3089\u3063\u305f][link-3]\n[webpack configure][link-9]\n[webpack\u306econfig][link-12]\n[Web\u958b\u767a\u306e\u672a\u6765 \u2013 React\u3001Falcor\u304a\u3088\u3073ES6][link-10]\n[regexp][link-11]\n[node.js doc fs][link-13]\n[node.js doc spawn][link-14]\n[node-mongodb-native][link-15]\n[docker mongo][link-16]\n\n[Babel\u30926\u7cfb\u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u3089gulp\u3067\u3053\u3051\u308b][link-19]\n[gulp-webpack \u3067\u8907\u6570 JS \u306e\u66f8\u304d\u51fa\u3057 Tips][link-20]\n[gulp][link-21]\n[ReactRadarScope][link-22]\n\n[link-1]:http://tech.naviplus.co.jp/2014/01/09/tmux%E3%81%A7%E8%A4%87%E6%95%B0%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E5%90%8C%E6%99%82%E3%82%AA%E3%83%9A%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/\n[link-2]:http://qiita.com/takc923/items/018733112963b69b408b\n[link-3]:http://raichel.hatenablog.com/entry/2015/08/02/185018\n[link-4]:http://qiita.com/succi0303/items/cb396704493476373edf\n[link-5]:http://room6933.com/mymemo/tmux/tmux-basic.html\n[link-6]:http://kanjuku-tomato.blogspot.jp/2014/02/tmux.html\n[link-7]:http://qiita.com/b4b4r07/items/01359e8a3066d1c37edc\n[link-8]:http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/tmux.1?query=tmux&sec=1\n[link-9]:https://webpack.github.io/docs/configuration.html#watchoptions-aggregatetimeout\n[link-10]:http://postd.cc/future-of-the-web-react-falcor/\n[link-11]:https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\n[link-12]:http://yokotakenji.me/log/programming/js/webpack/4315/\n[link-13]:https://nodejs.org/api/fs.html\n[link-14]:https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options\n[link-15]:https://github.com/mongodb/node-mongodb-native\n[link-16]:https://hub.docker.com/_/mongo/\n\n[link-17]:https://github.com/docker-library/mongo/tree/fcb9584617e63f1d3db8dc730fb8abb83653c7ad/3.2\n[link-18]:http://qiita.com/hibohiboo/items/fb977fe8ce08ab390bd7\n\n[link-19]:http://qiita.com/sawapi/items/e11d0cfbbacd078b2c3a\n[link-20]:http://2no.hatenablog.com/entry/2015/06/08/170511\n[link-21]:https://github.com/gulpjs/gulp/blob/master/docs/API.md\n[link-22]:https://github.com/jirokun/ReactRadarScope\n"}