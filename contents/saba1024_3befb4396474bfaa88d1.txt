{"context": "\n\n\u6982\u8981\n\u73fe\u572831\u6b73\u306e\u304a\u3058\u3055\u3093\u3067\u3042\u308b\u79c1\u306e\u5e74\u4ee3\u3067\u306f\u3001\u5b50\u4f9b\u306e\u9803\u306b\u3001\u25cb\u25cb \u30a6\u30bd \u30c4\u30ab\u30ca\u30a4\u3068\u3044\u3046\u3088\u3046\u306b\u6587\u7ae0\u3092\u30ab\u30bf\u30ab\u30ca\u306b\u3057\u3066\u5fc5\u8981\u6700\u4f4e\u9650\u306a\u90e8\u5206\u306e\u307f\u4f7f\u3046\u3001\u3068\u3044\u3046\u3088\u3046\u306a\u904a\u3073\uff08\uff1f\uff09\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u25cb\u25cb\u306e\u90e8\u5206\u306f\u73fe\u5728\u3067\u306f\u3082\u3057\u304b\u3057\u305f\u3089\u554f\u984c\u306e\u3042\u308b\u8868\u73fe\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u306e\u3067\u3001\u30b3\u30b3\u3067\u306f\u5b87\u5b99\u4eba\u3068\u3057\u307e\u3059\u3002\n\u3068\u3046\u3053\u3068\u3067\u3001\u6587\u7ae0\u3092\u89e3\u6790\u3057\u3066\u5fc5\u8981\u6700\u4f4e\u9650\u306a\u90e8\u5206\u306e\u307f\u62bd\u51fa\u3057\u3066\u3001\u305d\u308c\u3063\u307d\u304f\u306a\u308b\u3088\u3046\u306b\u5404\u5358\u8a9e\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u3066\u3001\u3055\u3089\u306b\u305d\u308c\u3063\u307d\u304f\u30ab\u30bf\u30ab\u30ca\u306e\u307f\u5229\u7528\u3059\u308b\u3001\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092Groovy\u3067\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\n\u3053\u3093\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3001\u624b\u52d5\u3067\u306e\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3001\u8a2d\u5b9a\u3084\u3001\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3092\u4f7f\u3063\u305f\u30b3\u30f3\u30d1\u30a4\u30eb&\u5b9f\u884c\u3092 \u5fc5\u8981\u3068\u305b\u305a\u3001\u3055\u3089\u306b\u30b3\u30ec\u3060\u3051 \u77ed\u3044\u30b3\u30fc\u30c9\u3067\u5b9f\u73fe\u3067\u304d\u3066\u3057\u307e\u3046Apache Groovy\u306f\u672c\u5f53\u306b\u7d20\u6674\u3089\u3057\u3044\u8a00\u8a9e\u3067\u3059\u306d\uff01\n\n\u30b3\u30fc\u30c9\n@Grapes([\n    @Grab(group='com.atilika.kuromoji', module='kuromoji-ipadic', version='0.9.0')\n])\n\nimport com.atilika.kuromoji.ipadic.Token\nimport com.atilika.kuromoji.ipadic.Tokenizer\n\nTokenizer tokenizer = new Tokenizer()\n\n// \u8aad\u307f\uff08\u30ab\u30bf\u30ab\u30ca\uff09\u306e\u62bd\u51fa\n// \u52d5\u8a5e\u306e\u5206\u5272\u304c\u3061\u3087\u3063\u3068\u5fae\u5999\u306a\u306e\u3067\u672c\u5f53\u306f\u52d5\u8a5e\u306e\u5834\u5408\u306f\u3055\u3089\u306bbaseForm\u304b\u3089\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3057\u305f\u3044\ndef toReading = { Token token ->\n    token.reading == '*' ? token.surface : token.reading\n}\n\n// \u5fc5\u8981\u306a\u7a2e\u985e\u306e\u5358\u8a9e\u306e\u307f\u62bd\u51fa\ndef withThisCondition = { Token token ->\n    token.partOfSpeechLevel1 in ['\u52d5\u8a5e', '\u540d\u8a5e', '\u52a9\u52d5\u8a5e', '\u526f\u8a5e', '\u5f62\u5bb9\u8a5e']\n}\n\n// \u5225\u306b\u614b\u3005\u30e1\u30bf\u30af\u30e9\u30b9\u306b\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044\u3051\u3069\u30ab\u30c3\u30b3\u3044\u3044\u306e\u3067\uff01\n// \uff08\u4eca\u56de\u306e\u3088\u3046\u306a\u5834\u5408\u306fmetaClass\u306b\u76f4\u63a5\u3058\u3083\u306a\u304f\u3066Category\u30af\u30e9\u30b9\u3067\u3084\u3063\u305f\u65b9\u304c\u3044\u3044\u3051\u3069\uff09\nList.metaClass.shuffle = {\n    List<Token> list = delegate\n    Token first = list.find{Token t -> t.partOfSpeechLevel1 == '\u540d\u8a5e'}\n    List<Token> remains = list.findAll{it != first}\n    Collections.shuffle(remains)\n    [first] + remains\n}\n\n// \u89e3\u6790&\u7ffb\u8a33\uff08\uff1f\uff09\nList<Token>tokens = tokenizer.tokenize(\"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eApache Groovy\u306f\u672c\u5f53\u306b\u7d20\u6674\u3089\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\")\nprintln tokens.findAll(withThisCondition).shuffle().collect(toReading).unique().join(\" \")\n\n\u305f\u3063\u305f\u30b3\u30ec\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u5b9f\u884c\u7d50\u679c\u306f\u6bce\u56de\u30e9\u30f3\u30c0\u30e0\u306b\u5909\u308f\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\n\"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eApache Groovy\u306f\u672c\u5f53\u306b\u7d20\u6674\u3089\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\"\n\u3092\u89e3\u6790\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u306f\u3001\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u30b2\u30f3\u30b4 \u30c7\u30b9 Groovy \u30b9\u30d0\u30e9\u30b7\u30a4 Apache \u30db\u30f3\u30c8\u30a6\u30cb\n\n\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3068\u3066\u3082\u305d\u308c\u3063\u307d\u3044\uff01\n\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u3001\u306e\u5192\u982d\u3082\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nList<String> values = [\n    \"\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u3002\",\n    \"\u540d\u524d\u306f\u307e\u3060\u7121\u3044\u3002\",\n    \"\u3069\u3053\u3067\u751f\u308c\u305f\u304b\u3068\u3093\u3068\u898b\u5f53\u304c\u3064\u304b\u306c\u3002\",\n    \"\u4f55\u3067\u3082\u8584\u6697\u3044\u3058\u3081\u3058\u3081\u3057\u305f\u6240\u3067\u30cb\u30e3\u30fc\u30cb\u30e3\u30fc\u6ce3\u3044\u3066\u3044\u305f\u4e8b\u3060\u3051\u306f\u8a18\u61b6\u3057\u3066\u3044\u308b\u3002\",\n    \"\u543e\u8f29\u306f\u3053\u3053\u3067\u59cb\u3081\u3066\u4eba\u9593\u3068\u3044\u3046\u3082\u306e\u3092\u898b\u305f\u3002\",\n    \"\u3057\u304b\u3082\u3042\u3068\u3067\u805e\u304f\u3068\u305d\u308c\u306f\u66f8\u751f\u3068\u3044\u3046\u4eba\u9593\u4e2d\u3067\u4e00\u756a\u7370\u60aa\u306a\u7a2e\u65cf\u3067\u3042\u3063\u305f\u305d\u3046\u3060\u3002\"\n]\n\nvalues.each { String line ->\n    println tokenizer.tokenize(line).findAll(withThisCondition).shuffle().collect(toReading).unique().join(\" \")\n}\n\n\u7d50\u679c\u306f\n\u30ef\u30ac\u30cf\u30a4 \u30cd\u30b3 \u30a2\u30eb \u30c7\n\u30ca\u30de\u30a8 \u30de\u30c0 \u30ca\u30a4\n\u30c9\u30b3 \u30c8\u30a6 \u30c4\u30ab \u30cc \u30b1\u30f3 \u30bf \u30b1\u30f3\u30c8\u30a6 \u30a6\u30de\u30ec \u30c8\u30f3\u30c8\n\u30ca\u30cb \u30a6\u30b9\u30b0\u30e9\u30a4 \u30b8\u30e1\u30b8\u30e1 \u30a4\u30eb \u30b7 \u30bf \u30cb\u30e3\u30fc\u30cb\u30e3\u30fc \u30c8\u30b3\u30ed \u30ad\u30aa\u30af \u30ca\u30a4 \u30a4\u30bf\u30b3\u30c8\n\u30ef\u30ac\u30cf\u30a4 \u30cb\u30f3\u30b2\u30f3 \u30e2\u30ce \u30cf\u30b8\u30e1 \u30b3\u30b3 \u30bf \u30df\n\u30a2\u30c8 \u30bd\u30a6 \u30c9\u30a6 \u30a2\u30c3 \u30cb\u30f3\u30b2\u30f3 \u30c0 \u30bd\u30ec \u30a4\u30c1\u30d0\u30f3 \u30b7\u30e5\u30be\u30af \u30b7\u30e7\u30bb\u30a4 \u30ad\u30af \u30c1\u30e5\u30a6 \u30a2\u30af \u30bf \u30c7 \u30c9\u30a6\u30a2\u30af\n\n\n\u307e\u3068\u3081\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u30b9\u30d0\u30e9\u30b7\u30a4 \u30b2\u30f3\u30b4 \u30db\u30f3\u30c8\u30a6\u30cb \u30c7\u30b9 Groovy Apache\n\u6ce8\u76ee\u3059\u3079\u304d\u306f\u3084\u306f\u308a\u3001Apache Groovy\u304c\u5982\u4f55\u306b\u512a\u308c\u305f\u30a4\u30b1\u30e1\u30f3\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304b\u3001\u3068\u3044\u3046\u70b9\u3067\u3059\u306d\u3002\n\u306a\u304a\u3001\u5225\u306e\u65b9\u306eCommon Lisp\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30a4\u30ab\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u3082\u3069\u3046\u305e\uff01\nLisp\u3067\u65e5\u672c\u8a9e\u3092\u5b87\u5b99\u4eba\u8a00\u8449\u306b\u3059\u308b\n\n\u53c2\u8003\u8cc7\u6599\n[Groovy]\u305f\u3063\u305f1\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u5f62\u614b\u7d20\u89e3\u6790\uff01\n[Groovy]\u305f\u3063\u305f1\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u5f62\u614b\u7d20\u89e3\u6790\uff01 -\u5c11\u3057\u8a73\u7d30\u7de8-\nApache Groovy\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\uff08\u975e\u516c\u5f0f\uff09\n# \u6982\u8981\n\u73fe\u572831\u6b73\u306e\u304a\u3058\u3055\u3093\u3067\u3042\u308b\u79c1\u306e\u5e74\u4ee3\u3067\u306f\u3001\u5b50\u4f9b\u306e\u9803\u306b\u3001`\u25cb\u25cb \u30a6\u30bd \u30c4\u30ab\u30ca\u30a4`\u3068\u3044\u3046\u3088\u3046\u306b\u6587\u7ae0\u3092\u30ab\u30bf\u30ab\u30ca\u306b\u3057\u3066\u5fc5\u8981\u6700\u4f4e\u9650\u306a\u90e8\u5206\u306e\u307f\u4f7f\u3046\u3001\u3068\u3044\u3046\u3088\u3046\u306a\u904a\u3073\uff08\uff1f\uff09\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u25cb\u25cb\u306e\u90e8\u5206\u306f\u73fe\u5728\u3067\u306f\u3082\u3057\u304b\u3057\u305f\u3089\u554f\u984c\u306e\u3042\u308b\u8868\u73fe\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u306e\u3067\u3001\u30b3\u30b3\u3067\u306f\u5b87\u5b99\u4eba\u3068\u3057\u307e\u3059\u3002\n\u3068\u3046\u3053\u3068\u3067\u3001\u6587\u7ae0\u3092\u89e3\u6790\u3057\u3066\u5fc5\u8981\u6700\u4f4e\u9650\u306a\u90e8\u5206\u306e\u307f\u62bd\u51fa\u3057\u3066\u3001\u305d\u308c\u3063\u307d\u304f\u306a\u308b\u3088\u3046\u306b\u5404\u5358\u8a9e\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u3066\u3001\u3055\u3089\u306b\u305d\u308c\u3063\u307d\u304f\u30ab\u30bf\u30ab\u30ca\u306e\u307f\u5229\u7528\u3059\u308b\u3001\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092Groovy\u3067\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u3093\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3001**\u624b\u52d5\u3067\u306e\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3001\u8a2d\u5b9a\u3084\u3001\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3092\u4f7f\u3063\u305f\u30b3\u30f3\u30d1\u30a4\u30eb&\u5b9f\u884c\u3092 \u5fc5\u8981\u3068\u305b\u305a**\u3001\u3055\u3089\u306b\u30b3\u30ec\u3060\u3051 **\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u5b9f\u73fe\u3067\u304d\u3066\u3057\u307e\u3046[Apache Groovy](http://groovy-lang.org/)\u306f\u672c\u5f53\u306b\u7d20\u6674\u3089\u3057\u3044\u8a00\u8a9e\u3067\u3059\u306d\uff01**\n\n# \u30b3\u30fc\u30c9\n\n```groovy\n@Grapes([\n    @Grab(group='com.atilika.kuromoji', module='kuromoji-ipadic', version='0.9.0')\n])\n\nimport com.atilika.kuromoji.ipadic.Token\nimport com.atilika.kuromoji.ipadic.Tokenizer\n\nTokenizer tokenizer = new Tokenizer()\n\n// \u8aad\u307f\uff08\u30ab\u30bf\u30ab\u30ca\uff09\u306e\u62bd\u51fa\n// \u52d5\u8a5e\u306e\u5206\u5272\u304c\u3061\u3087\u3063\u3068\u5fae\u5999\u306a\u306e\u3067\u672c\u5f53\u306f\u52d5\u8a5e\u306e\u5834\u5408\u306f\u3055\u3089\u306bbaseForm\u304b\u3089\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3057\u305f\u3044\ndef toReading = { Token token ->\n    token.reading == '*' ? token.surface : token.reading\n}\n\n// \u5fc5\u8981\u306a\u7a2e\u985e\u306e\u5358\u8a9e\u306e\u307f\u62bd\u51fa\ndef withThisCondition = { Token token ->\n    token.partOfSpeechLevel1 in ['\u52d5\u8a5e', '\u540d\u8a5e', '\u52a9\u52d5\u8a5e', '\u526f\u8a5e', '\u5f62\u5bb9\u8a5e']\n}\n\n// \u5225\u306b\u614b\u3005\u30e1\u30bf\u30af\u30e9\u30b9\u306b\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044\u3051\u3069\u30ab\u30c3\u30b3\u3044\u3044\u306e\u3067\uff01\n// \uff08\u4eca\u56de\u306e\u3088\u3046\u306a\u5834\u5408\u306fmetaClass\u306b\u76f4\u63a5\u3058\u3083\u306a\u304f\u3066Category\u30af\u30e9\u30b9\u3067\u3084\u3063\u305f\u65b9\u304c\u3044\u3044\u3051\u3069\uff09\nList.metaClass.shuffle = {\n    List<Token> list = delegate\n    Token first = list.find{Token t -> t.partOfSpeechLevel1 == '\u540d\u8a5e'}\n    List<Token> remains = list.findAll{it != first}\n    Collections.shuffle(remains)\n    [first] + remains\n}\n\n// \u89e3\u6790&\u7ffb\u8a33\uff08\uff1f\uff09\nList<Token>tokens = tokenizer.tokenize(\"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eApache Groovy\u306f\u672c\u5f53\u306b\u7d20\u6674\u3089\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\")\nprintln tokens.findAll(withThisCondition).shuffle().collect(toReading).unique().join(\" \")\n```\n\u305f\u3063\u305f\u30b3\u30ec\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u5b9f\u884c\u7d50\u679c\u306f\u6bce\u56de\u30e9\u30f3\u30c0\u30e0\u306b\u5909\u308f\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\n**\"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eApache Groovy\u306f\u672c\u5f53\u306b\u7d20\u6674\u3089\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\"**\n\u3092\u89e3\u6790\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u306f\u3001\n\n```text\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u30b2\u30f3\u30b4 \u30c7\u30b9 Groovy \u30b9\u30d0\u30e9\u30b7\u30a4 Apache \u30db\u30f3\u30c8\u30a6\u30cb\n```\n\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3068\u3066\u3082\u305d\u308c\u3063\u307d\u3044\uff01\n\n\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u3001\u306e\u5192\u982d\u3082\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n```groovy\nList<String> values = [\n    \"\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u3002\",\n    \"\u540d\u524d\u306f\u307e\u3060\u7121\u3044\u3002\",\n    \"\u3069\u3053\u3067\u751f\u308c\u305f\u304b\u3068\u3093\u3068\u898b\u5f53\u304c\u3064\u304b\u306c\u3002\",\n    \"\u4f55\u3067\u3082\u8584\u6697\u3044\u3058\u3081\u3058\u3081\u3057\u305f\u6240\u3067\u30cb\u30e3\u30fc\u30cb\u30e3\u30fc\u6ce3\u3044\u3066\u3044\u305f\u4e8b\u3060\u3051\u306f\u8a18\u61b6\u3057\u3066\u3044\u308b\u3002\",\n    \"\u543e\u8f29\u306f\u3053\u3053\u3067\u59cb\u3081\u3066\u4eba\u9593\u3068\u3044\u3046\u3082\u306e\u3092\u898b\u305f\u3002\",\n    \"\u3057\u304b\u3082\u3042\u3068\u3067\u805e\u304f\u3068\u305d\u308c\u306f\u66f8\u751f\u3068\u3044\u3046\u4eba\u9593\u4e2d\u3067\u4e00\u756a\u7370\u60aa\u306a\u7a2e\u65cf\u3067\u3042\u3063\u305f\u305d\u3046\u3060\u3002\"\n]\n\nvalues.each { String line ->\n    println tokenizer.tokenize(line).findAll(withThisCondition).shuffle().collect(toReading).unique().join(\" \")\n}\n```\n\n\u7d50\u679c\u306f\n\n```\n\u30ef\u30ac\u30cf\u30a4 \u30cd\u30b3 \u30a2\u30eb \u30c7\n\u30ca\u30de\u30a8 \u30de\u30c0 \u30ca\u30a4\n\u30c9\u30b3 \u30c8\u30a6 \u30c4\u30ab \u30cc \u30b1\u30f3 \u30bf \u30b1\u30f3\u30c8\u30a6 \u30a6\u30de\u30ec \u30c8\u30f3\u30c8\n\u30ca\u30cb \u30a6\u30b9\u30b0\u30e9\u30a4 \u30b8\u30e1\u30b8\u30e1 \u30a4\u30eb \u30b7 \u30bf \u30cb\u30e3\u30fc\u30cb\u30e3\u30fc \u30c8\u30b3\u30ed \u30ad\u30aa\u30af \u30ca\u30a4 \u30a4\u30bf\u30b3\u30c8\n\u30ef\u30ac\u30cf\u30a4 \u30cb\u30f3\u30b2\u30f3 \u30e2\u30ce \u30cf\u30b8\u30e1 \u30b3\u30b3 \u30bf \u30df\n\u30a2\u30c8 \u30bd\u30a6 \u30c9\u30a6 \u30a2\u30c3 \u30cb\u30f3\u30b2\u30f3 \u30c0 \u30bd\u30ec \u30a4\u30c1\u30d0\u30f3 \u30b7\u30e5\u30be\u30af \u30b7\u30e7\u30bb\u30a4 \u30ad\u30af \u30c1\u30e5\u30a6 \u30a2\u30af \u30bf \u30c7 \u30c9\u30a6\u30a2\u30af\n```\n\n# \u307e\u3068\u3081\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u30b9\u30d0\u30e9\u30b7\u30a4 \u30b2\u30f3\u30b4 \u30db\u30f3\u30c8\u30a6\u30cb \u30c7\u30b9 Groovy Apache\n\u6ce8\u76ee\u3059\u3079\u304d\u306f\u3084\u306f\u308a\u3001[Apache Groovy](http://groovy-lang.org/)\u304c\u5982\u4f55\u306b\u512a\u308c\u305f\u30a4\u30b1\u30e1\u30f3\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304b\u3001\u3068\u3044\u3046\u70b9\u3067\u3059\u306d\u3002\n\n\u306a\u304a\u3001\u5225\u306e\u65b9\u306eCommon Lisp\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30a4\u30ab\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u3082\u3069\u3046\u305e\uff01\n[Lisp\u3067\u65e5\u672c\u8a9e\u3092\u5b87\u5b99\u4eba\u8a00\u8449\u306b\u3059\u308b](http://progn.hateblo.jp/entry/20161021/1476978400)\n\n# \u53c2\u8003\u8cc7\u6599\n[[Groovy]\u305f\u3063\u305f1\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u5f62\u614b\u7d20\u89e3\u6790\uff01](http://qiita.com/saba1024/items/85ff23531105cfbba78e)\n[[Groovy]\u305f\u3063\u305f1\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u5f62\u614b\u7d20\u89e3\u6790\uff01 -\u5c11\u3057\u8a73\u7d30\u7de8-](http://qiita.com/saba1024/items/67ef29bedc01386878d7)\n[Apache Groovy\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\uff08\u975e\u516c\u5f0f\uff09](http://koji-k.github.io/groovy-tutorial/)\n", "tags": ["Groovy"]}