{"context": "\u4ee5\u5916\u3068\u60c5\u5831\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u5099\u5fd8\u9332\u7684\u306b\u66f8\u3044\u3066\u304a\u304f\u3002\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\nGoogleMapsAPI\u3067\u5730\u56f3\u3092\u8868\u793a\u3055\u305b\u3066\u30e6\u30fc\u30b6\u30fc\u306b\u5834\u6240\u3092\u9078\u629e\u3055\u305b\u308bUI\u3092\u4f5c\u308a\u305f\u3044\n\u30de\u30c3\u30d7\u4e2d\u5fc3\u306bPin\u3068\u5186\u3092\u8868\u793a\u3057\u3066\u3001\u30de\u30c3\u30d7\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u5834\u6240\u3092\u9078\u3070\u305b\u305f\u3044\n\n\n\u6e96\u5099\n\u4e0b\u306e\u8a18\u4e8b\u306a\u3069\u3092\u53c2\u8003\u306b\u3057\u3066\u3001GoogleMapsAPIKey\u3092\u53d6\u5f97\u301c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u307e\u3067\u3057\u3066\u304a\u304f\nAndroid\u30a2\u30d7\u30ea\u958b\u767a\u3067GoogleMap\u3092\u5229\u7528\u3059\u308b\n\n\u30dd\u30a4\u30f3\u30c8\nGoogleMap\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306esetOnCameraChangeListener\u3067\u30de\u30c3\u30d7\u306e\u8868\u793a\u4f4d\u7f6e\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u308c\u308b\u306e\u3067\u3001\u305d\u3053\u306bMarker\u3068Circle\u306e\u63cf\u753b\u51e6\u7406\u3092\u66f8\u3044\u3066\u3084\u308c\u3070\u826f\u3044\u3002\n\u305d\u306e\u969b\u3001\u63cf\u753b\u6e08\u307f\u306eMarker\u3068Circle\u3092remove()\u3057\u306a\u3044\u3068\u3069\u3093\u3069\u3093\u5897\u3048\u3066\u3044\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3002\n\n\u30ad\u30e3\u30d7\u30c1\u30e3\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\npublic class MapsActivity extends FragmentActivity implements OnMapReadyCallback {\n    /** \u5730\u56f3\u306e\u521d\u671f\u4f4d\u7f6e. */\n    private static final LatLng DEFAULT_PIN_POSITION = new LatLng(35.691636, 139.701732);\n    /** \u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u521d\u671f\u5024. */\n    private static final float DEFAULT_MAP_ZOOM = 11.0f;\n    /** \u5186\u306e\u534a\u5f84\u521d\u671f\u5024. */\n    private static final Double DEFAULT_CIRCLE_RANGE = 5d*1000;\n    private GoogleMap mMap;\n    private Marker mMarker = null;\n    private Circle mCircle = null;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_maps);\n        // Obtain the SupportMapFragment and get notified when the map is ready to be used.\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\n                .findFragmentById(R.id.map);\n        mapFragment.getMapAsync(this);\n    }\n\n    /**\n     * Manipulates the map once available.\n     * This callback is triggered when the map is ready to be used.\n     * This is where we can add markers or lines, add listeners or move the camera. In this case,\n     * we just add a marker near Sydney, Australia.\n     * If Google Play services is not installed on the device, the user will be prompted to install\n     * it inside the SupportMapFragment. This method will only be triggered once the user has\n     * installed Google Play services and returned to the app.\n     */\n    @Override\n    public void onMapReady(GoogleMap googleMap) {\n        mMap = googleMap;\n\n        mMap.setOnCameraChangeListener(new GoogleMap.OnCameraChangeListener() {\n            @Override\n            public void onCameraChange(CameraPosition cameraPosition) {\n                mMarker.remove();\n                mCircle.remove();\n                mMarker = mMap.addMarker(new MarkerOptions().position(cameraPosition.target));\n                mCircle = mMap.addCircle(createCircleOptions(cameraPosition.target, DEFAULT_CIRCLE_RANGE));\n            }\n        });\n\n        mMarker = mMap.addMarker(new MarkerOptions().position(DEFAULT_PIN_POSITION));\n        mCircle = mMap.addCircle(createCircleOptions(DEFAULT_PIN_POSITION, DEFAULT_CIRCLE_RANGE));\n        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(DEFAULT_PIN_POSITION, DEFAULT_MAP_ZOOM));\n    }\n\n    private static CircleOptions createCircleOptions(LatLng position, Double range){\n        CircleOptions co = new CircleOptions();\n        co.center(position);\n        co.radius(range);\n        co.fillColor(Color.parseColor(\"#3300FFCC\")); // Circle\u5185\u90e8\u306e\u8272\n        co.strokeColor(Color.parseColor(\"#FF0000FF\")); // Circle\u67a0\u306e\u8272\n        co.strokeWidth(2); // Circle\u67a0\u306e\u592a\u3055\n        return co;\n    }\n}\n\n\n\n\u8ffd\u8a18\n\u305f\u3060\u3053\u306e\u65b9\u6cd5\u3060\u3068\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u306f\u8868\u793a\u304c\u66f4\u65b0\u3055\u308c\u306a\u3044\u3002\n\u3061\u3083\u3093\u3068\u30de\u30c3\u30d7\u4e2d\u5fc3\u306b\u8868\u793a\u3057\u7d9a\u3051\u308b\u306b\u306fIconOverlay\u3092\u88ab\u305b\u305f\u308a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\u306a\u30fb\u30fb\u30fb\n\n\u4ee5\u5916\u3068\u60c5\u5831\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u5099\u5fd8\u9332\u7684\u306b\u66f8\u3044\u3066\u304a\u304f\u3002\n## \u3084\u308a\u305f\u3044\u3053\u3068\n- GoogleMapsAPI\u3067\u5730\u56f3\u3092\u8868\u793a\u3055\u305b\u3066\u30e6\u30fc\u30b6\u30fc\u306b\u5834\u6240\u3092\u9078\u629e\u3055\u305b\u308bUI\u3092\u4f5c\u308a\u305f\u3044\n- \u30de\u30c3\u30d7\u4e2d\u5fc3\u306bPin\u3068\u5186\u3092\u8868\u793a\u3057\u3066\u3001\u30de\u30c3\u30d7\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u5834\u6240\u3092\u9078\u3070\u305b\u305f\u3044\n\n\n## \u6e96\u5099\n\n\u4e0b\u306e\u8a18\u4e8b\u306a\u3069\u3092\u53c2\u8003\u306b\u3057\u3066\u3001GoogleMapsAPIKey\u3092\u53d6\u5f97\u301c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u307e\u3067\u3057\u3066\u304a\u304f\n[Android\u30a2\u30d7\u30ea\u958b\u767a\u3067GoogleMap\u3092\u5229\u7528\u3059\u308b](http://qiita.com/azunobu/items/8bec3d5a45235fc88a08)\n\n\n\n## \u30dd\u30a4\u30f3\u30c8\nGoogleMap\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e`setOnCameraChangeListener`\u3067\u30de\u30c3\u30d7\u306e\u8868\u793a\u4f4d\u7f6e\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u308c\u308b\u306e\u3067\u3001\u305d\u3053\u306bMarker\u3068Circle\u306e\u63cf\u753b\u51e6\u7406\u3092\u66f8\u3044\u3066\u3084\u308c\u3070\u826f\u3044\u3002\n\u305d\u306e\u969b\u3001\u63cf\u753b\u6e08\u307f\u306eMarker\u3068Circle\u3092`remove()`\u3057\u306a\u3044\u3068\u3069\u3093\u3069\u3093\u5897\u3048\u3066\u3044\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3002\n\n### \u30ad\u30e3\u30d7\u30c1\u30e3\n![map_sample.png](https://qiita-image-store.s3.amazonaws.com/0/111853/6aa5cfd6-d559-5729-545f-a6c054509c76.png \"map_sample.png\")\n\n### \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```\n\npublic class MapsActivity extends FragmentActivity implements OnMapReadyCallback {\n    /** \u5730\u56f3\u306e\u521d\u671f\u4f4d\u7f6e. */\n    private static final LatLng DEFAULT_PIN_POSITION = new LatLng(35.691636, 139.701732);\n    /** \u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u521d\u671f\u5024. */\n    private static final float DEFAULT_MAP_ZOOM = 11.0f;\n    /** \u5186\u306e\u534a\u5f84\u521d\u671f\u5024. */\n    private static final Double DEFAULT_CIRCLE_RANGE = 5d*1000;\n    private GoogleMap mMap;\n    private Marker mMarker = null;\n    private Circle mCircle = null;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_maps);\n        // Obtain the SupportMapFragment and get notified when the map is ready to be used.\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\n                .findFragmentById(R.id.map);\n        mapFragment.getMapAsync(this);\n    }\n\n    /**\n     * Manipulates the map once available.\n     * This callback is triggered when the map is ready to be used.\n     * This is where we can add markers or lines, add listeners or move the camera. In this case,\n     * we just add a marker near Sydney, Australia.\n     * If Google Play services is not installed on the device, the user will be prompted to install\n     * it inside the SupportMapFragment. This method will only be triggered once the user has\n     * installed Google Play services and returned to the app.\n     */\n    @Override\n    public void onMapReady(GoogleMap googleMap) {\n        mMap = googleMap;\n\n        mMap.setOnCameraChangeListener(new GoogleMap.OnCameraChangeListener() {\n            @Override\n            public void onCameraChange(CameraPosition cameraPosition) {\n                mMarker.remove();\n                mCircle.remove();\n                mMarker = mMap.addMarker(new MarkerOptions().position(cameraPosition.target));\n                mCircle = mMap.addCircle(createCircleOptions(cameraPosition.target, DEFAULT_CIRCLE_RANGE));\n            }\n        });\n\n        mMarker = mMap.addMarker(new MarkerOptions().position(DEFAULT_PIN_POSITION));\n        mCircle = mMap.addCircle(createCircleOptions(DEFAULT_PIN_POSITION, DEFAULT_CIRCLE_RANGE));\n        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(DEFAULT_PIN_POSITION, DEFAULT_MAP_ZOOM));\n    }\n\n    private static CircleOptions createCircleOptions(LatLng position, Double range){\n        CircleOptions co = new CircleOptions();\n        co.center(position);\n        co.radius(range);\n        co.fillColor(Color.parseColor(\"#3300FFCC\")); // Circle\u5185\u90e8\u306e\u8272\n        co.strokeColor(Color.parseColor(\"#FF0000FF\")); // Circle\u67a0\u306e\u8272\n        co.strokeWidth(2); // Circle\u67a0\u306e\u592a\u3055\n        return co;\n    }\n}\n\n```\n\n## \u8ffd\u8a18\n\n\u305f\u3060\u3053\u306e\u65b9\u6cd5\u3060\u3068\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u306f\u8868\u793a\u304c\u66f4\u65b0\u3055\u308c\u306a\u3044\u3002\n\u3061\u3083\u3093\u3068\u30de\u30c3\u30d7\u4e2d\u5fc3\u306b\u8868\u793a\u3057\u7d9a\u3051\u308b\u306b\u306fIconOverlay\u3092\u88ab\u305b\u305f\u308a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\u306a\u30fb\u30fb\u30fb\n", "tags": ["map", "GoogleMapsAPI", "Android"]}