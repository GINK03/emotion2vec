{"context": " More than 1 year has passed since last update.CoordinatorLayout\u3068RecyclerView\u3092\u4f7f\u3046\u3053\u3068\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u6642\u306b\u69d8\u3005\u306a\u3053\u3068\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3061\u3087\u3063\u3068CoordinatorLayout\u3092\u8abf\u3079\u3066\u3044\u3066\u3001\u3082\u3057\u304b\u3057\u305f\u3089ListView\u3067\u3082\u3067\u304d\u308b\u3093\u3058\u3083\u3001\u3001\u3068\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nRecyclerView\u3067\u306f\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u6642\u306bAppBarLayout\u304c\u5c0f\u3055\u304f\u306a\u3063\u305f\u308a\u3001\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u884c\u3048\u307e\u3057\u305f\u3002\u3053\u308c\u3092ListView\u3067\u3082\u3084\u308a\u305f\u3044\u8a71\u3067\u3059\u3002\n\nhttps://www.google.com/design/spec/patterns/scrolling-techniques.html \u3088\u308a\n\n\u524d\u7f6e\u304d\nCoordinatorLayout\u306fAPI Level 21\u304b\u3089View\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u89aaView\u306b\u4f1d\u3048\u308b\u4ed5\u7d44\u307f\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://developer.android.com/intl/ja/reference/android/view/ViewGroup.html#onStartNestedScroll(android.view.View, android.view.View, int)\n\u305f\u3060Support Library\u306b\u3082\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u89aaView\u306b\u4f1d\u3048\u308b\u4ed5\u7d44\u307f\u3092\u3046\u307e\u304f\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u4ed5\u7d44\u307f\u304c\u3042\u308a\u307e\u3059\u3002\nNestedScrollingChild(\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9)\u3092\u5b9f\u88c5\u3057\u3066\u3001\u30a4\u30d9\u30f3\u30c8\u3092NestedScrollingChildHelper\u306a\u3069\u306b\u6e21\u3059\u3053\u3068\u3067\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttp://developer.android.com/intl/ja/reference/android/support/v4/view/NestedScrollingChild.html\n\u3053\u308c\u306fNestedScrollView\u3084RecyclerView\u3084SwipeRefreshLayout\u306e\u5b9f\u88c5\u304c\u305d\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002\nListView\u306fSupport Library\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bView\u3067\u306a\u3044\u305f\u3081\u3001NestedScrollingChild\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u305b\u3093\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u3092NestedScrollingChildHelper\u306b\u6e21\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u305d\u306e\u305f\u3081\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u30a4\u30d9\u30f3\u30c8\u3092CoordinatorLayout\u306b\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u5b9f\u88c5\nListView\u3092\u7d99\u627f\u3057\u305fView\u3092\u4f5c\u308a\u3001NestedScrollingChild(\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9)\u3092\u5b9f\u88c5\u3057\u3066\u3001\u30a4\u30d9\u30f3\u30c8\u3092NestedScrollingChildHelper\u306b\u6e21\u3059\u3053\u3068\u3067\u3001CoordinatorLayout\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u30a4\u30d9\u30f3\u30c8\u304c\u901a\u77e5\u3055\u308c\u3001\u5229\u7528\u3067\u304d\u308b\u306e\u3067\u306f\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30b9\u30af\u30ed\u30fc\u30eb\u958b\u59cb\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067startNestedScroll()\u3092\u547c\u3073\u3001\u81ea\u5206\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u524d\u306bdispatchNestedPreScroll()\u3092\u547c\u3073\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u5f8c\u306bdispatchNestedScroll()\u3092\u547c\u3076\u3053\u3068\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\npublic class NestedListView extends ListView implements NestedScrollingChild {\n    private int mLastY;\n    private final int[] mScrollOffset = new int[2];\n    private final int[] mScrollConsumed = new int[2];\n    private int mNestedOffsetY;\n    private NestedScrollingChildHelper mChildHelper;\n\n    public NestedListView(Context context) {\n        this(context, null);\n    }\n\n    public NestedListView(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public NestedListView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        mChildHelper = new NestedScrollingChildHelper(this);\n        setNestedScrollingEnabled(true);\n    }\n\n    /**\n     *\n     * @see android.support.v4.widget.NestedScrollView#onTouchEvent(MotionEvent)\n     */\n    @Override\n    public boolean onTouchEvent(MotionEvent ev) {\n        boolean returnValue = false;\n\n        MotionEvent event = MotionEvent.obtain(ev);\n        final int action = MotionEventCompat.getActionMasked(event);\n        if (action == MotionEvent.ACTION_DOWN) {\n            mNestedOffsetY = 0;\n        }\n        event.offsetLocation(0, mNestedOffsetY);\n        int eventY = (int) event.getY();\n        switch (action) {\n            case MotionEvent.ACTION_MOVE:\n                int deltaY = mLastY - eventY;\n                // NestedPreScroll\n                if (dispatchNestedPreScroll(0, deltaY, mScrollConsumed, mScrollOffset)) {\n                    deltaY -= mScrollConsumed[1];\n                    mLastY = eventY - mScrollOffset[1];\n                    event.offsetLocation(0, mScrollOffset[1]);\n                    mNestedOffsetY += mScrollOffset[1];\n                }\n                returnValue = super.onTouchEvent(event);\n\n                // NestedScroll\n                if (dispatchNestedScroll(0, mScrollOffset[1], 0, deltaY, mScrollOffset)) {\n                    event.offsetLocation(0, mScrollOffset[1]);\n                    mNestedOffsetY += mScrollOffset[1];\n                    mLastY -= mScrollOffset[1];\n                }\n                break;\n            case MotionEvent.ACTION_DOWN:\n                returnValue = super.onTouchEvent(event);\n                mLastY = eventY;\n                // start NestedScroll\n                startNestedScroll(ViewCompat.SCROLL_AXIS_VERTICAL);\n                break;\n            case MotionEvent.ACTION_UP:\n                // TODO: fling\n                returnValue = super.onTouchEvent(event);\n                break;\n            case MotionEvent.ACTION_CANCEL:\n                returnValue = super.onTouchEvent(event);\n                // end NestedScroll\n                stopNestedScroll();\n                break;\n        }\n        return returnValue;\n    }\n\n\n    // NestedScrollingChild\n    @Override\n    public void setNestedScrollingEnabled(boolean enabled) {\n        mChildHelper.setNestedScrollingEnabled(enabled);\n    }\n\n    @Override\n    public boolean isNestedScrollingEnabled() {\n        return mChildHelper.isNestedScrollingEnabled();\n    }\n\n    @Override\n    public boolean startNestedScroll(int axes) {\n        return mChildHelper.startNestedScroll(axes);\n    }\n\n    @Override\n    public void stopNestedScroll() {\n        mChildHelper.stopNestedScroll();\n    }\n\n    @Override\n    public boolean hasNestedScrollingParent() {\n        return mChildHelper.hasNestedScrollingParent();\n    }\n\n    @Override\n    public boolean dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed,\n                                        int[] offsetInWindow) {\n        return mChildHelper.dispatchNestedScroll(dxConsumed, dyConsumed, dxUnconsumed, dyUnconsumed, offsetInWindow);\n    }\n\n    @Override\n    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow) {\n        return mChildHelper.dispatchNestedPreScroll(dx, dy, consumed, offsetInWindow);\n    }\n\n    @Override\n    public boolean dispatchNestedFling(float velocityX, float velocityY, boolean consumed) {\n        return mChildHelper.dispatchNestedFling(velocityX, velocityY, consumed);\n    }\n\n    @Override\n    public boolean dispatchNestedPreFling(float velocityX, float velocityY) {\n        return mChildHelper.dispatchNestedPreFling(velocityX, velocityY);\n    }\n\n}\n\n\n\u52d5\u4f5c\n\n\n\u554f\u984c\u70b9\n\u3053\u306e\u5b9f\u88c5\u306b\u306f\u3044\u304f\u3064\u304b\u554f\u984c\u70b9\u304c\u3042\u308b\u306e\u3067\u5b9f\u7528\u3067\u304d\u308b\u30ec\u30d9\u30eb\u3067\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u898b\u3064\u304b\u3063\u3066\u3044\u308b\u90e8\u5206\u3060\u3068\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u306b\u96e2\u3057\u305f\u6642\u306b\u3046\u307e\u304f\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u306a\u3044\u3053\u3068\u304c\u3042\u3063\u305f\u308a\u3001\nListView\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u5909\u5316\u91cf\u3092\u6d88\u8cbb\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001AppBarLayout\u306eexitUntilCollapsed\u30d5\u30e9\u30b0\u3092\u3064\u3051\u3066\u3044\u308b\u5834\u5408\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u6319\u52d5\u304c\u5c11\u3057\u9055\u3046\u306a\u3069\u3067\u3059\u3002\n\u8ab0\u304b\u89e3\u6c7a\u7b56\u3092\u77e5\u3063\u3066\u3044\u305f\u3089\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u3002\n\u3053\u3053\u306b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\nhttps://github.com/takahirom/NestedListView\n\u3061\u306a\u307f\u306bWebView\u3067\u3082\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttps://github.com/takahirom/webview-in-coordinatorlayout\n\n\u53c2\u8003\nNestedScrollView\u306e\u4ed5\u7d44\u307f\nhttp://qiita.com/takahirom/items/2978ede8e7d40b888832\nAndroid\u306eCoordinatorLayout\u3092\u4f7f\u3044\u3053\u306a\u3057\u3066\u3001\u30e2\u30c0\u30f3\u306a\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u5b9f\u88c5\u3057\u3088\u3046\nhttp://techblog.yahoo.co.jp/android/androidcoordinatorlayout/\nCoordinatorLayout\u3068RecyclerView\u3092\u4f7f\u3046\u3053\u3068\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u6642\u306b\u69d8\u3005\u306a\u3053\u3068\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3061\u3087\u3063\u3068CoordinatorLayout\u3092\u8abf\u3079\u3066\u3044\u3066\u3001\u3082\u3057\u304b\u3057\u305f\u3089ListView\u3067\u3082\u3067\u304d\u308b\u3093\u3058\u3083\u3001\u3001\u3068\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nRecyclerView\u3067\u306f\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u6642\u306bAppBarLayout\u304c\u5c0f\u3055\u304f\u306a\u3063\u305f\u308a\u3001\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u884c\u3048\u307e\u3057\u305f\u3002\u3053\u308c\u3092ListView\u3067\u3082\u3084\u308a\u305f\u3044\u8a71\u3067\u3059\u3002\n\n![scroll.gif](https://qiita-image-store.s3.amazonaws.com/0/27388/61884e07-3e12-8118-9a32-1fc88a3361b1.gif)\nhttps://www.google.com/design/spec/patterns/scrolling-techniques.html \u3088\u308a\n\n\n# \u524d\u7f6e\u304d\nCoordinatorLayout\u306fAPI Level 21\u304b\u3089View\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u89aaView\u306b\u4f1d\u3048\u308b\u4ed5\u7d44\u307f\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://developer.android.com/intl/ja/reference/android/view/ViewGroup.html#onStartNestedScroll(android.view.View, android.view.View, int)\n\u305f\u3060Support Library\u306b\u3082\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u89aaView\u306b\u4f1d\u3048\u308b\u4ed5\u7d44\u307f\u3092**\u3046\u307e\u304f\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u4ed5\u7d44\u307f\u304c\u3042\u308a\u307e\u3059**\u3002\nNestedScrollingChild(\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9)\u3092\u5b9f\u88c5\u3057\u3066\u3001\u30a4\u30d9\u30f3\u30c8\u3092NestedScrollingChildHelper\u306a\u3069\u306b\u6e21\u3059\u3053\u3068\u3067\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttp://developer.android.com/intl/ja/reference/android/support/v4/view/NestedScrollingChild.html\n\n\u3053\u308c\u306fNestedScrollView\u3084RecyclerView\u3084SwipeRefreshLayout\u306e\u5b9f\u88c5\u304c\u305d\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\nListView\u306fSupport Library\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bView\u3067\u306a\u3044\u305f\u3081\u3001NestedScrollingChild\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u305b\u3093\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u3092NestedScrollingChildHelper\u306b\u6e21\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u305d\u306e\u305f\u3081\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u30a4\u30d9\u30f3\u30c8\u3092CoordinatorLayout\u306b\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\n# \u5b9f\u88c5\n\nListView\u3092\u7d99\u627f\u3057\u305fView\u3092\u4f5c\u308a\u3001NestedScrollingChild(\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9)\u3092\u5b9f\u88c5\u3057\u3066\u3001\u30a4\u30d9\u30f3\u30c8\u3092NestedScrollingChildHelper\u306b\u6e21\u3059\u3053\u3068\u3067\u3001CoordinatorLayout\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u30a4\u30d9\u30f3\u30c8\u304c\u901a\u77e5\u3055\u308c\u3001\u5229\u7528\u3067\u304d\u308b\u306e\u3067\u306f\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30b9\u30af\u30ed\u30fc\u30eb\u958b\u59cb\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067startNestedScroll()\u3092\u547c\u3073\u3001\u81ea\u5206\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u524d\u306bdispatchNestedPreScroll()\u3092\u547c\u3073\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u5f8c\u306bdispatchNestedScroll()\u3092\u547c\u3076\u3053\u3068\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java\npublic class NestedListView extends ListView implements NestedScrollingChild {\n    private int mLastY;\n    private final int[] mScrollOffset = new int[2];\n    private final int[] mScrollConsumed = new int[2];\n    private int mNestedOffsetY;\n    private NestedScrollingChildHelper mChildHelper;\n\n    public NestedListView(Context context) {\n        this(context, null);\n    }\n\n    public NestedListView(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public NestedListView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        mChildHelper = new NestedScrollingChildHelper(this);\n        setNestedScrollingEnabled(true);\n    }\n\n    /**\n     *\n     * @see android.support.v4.widget.NestedScrollView#onTouchEvent(MotionEvent)\n     */\n    @Override\n    public boolean onTouchEvent(MotionEvent ev) {\n        boolean returnValue = false;\n\n        MotionEvent event = MotionEvent.obtain(ev);\n        final int action = MotionEventCompat.getActionMasked(event);\n        if (action == MotionEvent.ACTION_DOWN) {\n            mNestedOffsetY = 0;\n        }\n        event.offsetLocation(0, mNestedOffsetY);\n        int eventY = (int) event.getY();\n        switch (action) {\n            case MotionEvent.ACTION_MOVE:\n                int deltaY = mLastY - eventY;\n                // NestedPreScroll\n                if (dispatchNestedPreScroll(0, deltaY, mScrollConsumed, mScrollOffset)) {\n                    deltaY -= mScrollConsumed[1];\n                    mLastY = eventY - mScrollOffset[1];\n                    event.offsetLocation(0, mScrollOffset[1]);\n                    mNestedOffsetY += mScrollOffset[1];\n                }\n                returnValue = super.onTouchEvent(event);\n\n                // NestedScroll\n                if (dispatchNestedScroll(0, mScrollOffset[1], 0, deltaY, mScrollOffset)) {\n                    event.offsetLocation(0, mScrollOffset[1]);\n                    mNestedOffsetY += mScrollOffset[1];\n                    mLastY -= mScrollOffset[1];\n                }\n                break;\n            case MotionEvent.ACTION_DOWN:\n                returnValue = super.onTouchEvent(event);\n                mLastY = eventY;\n                // start NestedScroll\n                startNestedScroll(ViewCompat.SCROLL_AXIS_VERTICAL);\n                break;\n            case MotionEvent.ACTION_UP:\n                // TODO: fling\n                returnValue = super.onTouchEvent(event);\n                break;\n            case MotionEvent.ACTION_CANCEL:\n                returnValue = super.onTouchEvent(event);\n                // end NestedScroll\n                stopNestedScroll();\n                break;\n        }\n        return returnValue;\n    }\n\n\n    // NestedScrollingChild\n    @Override\n    public void setNestedScrollingEnabled(boolean enabled) {\n        mChildHelper.setNestedScrollingEnabled(enabled);\n    }\n\n    @Override\n    public boolean isNestedScrollingEnabled() {\n        return mChildHelper.isNestedScrollingEnabled();\n    }\n\n    @Override\n    public boolean startNestedScroll(int axes) {\n        return mChildHelper.startNestedScroll(axes);\n    }\n\n    @Override\n    public void stopNestedScroll() {\n        mChildHelper.stopNestedScroll();\n    }\n\n    @Override\n    public boolean hasNestedScrollingParent() {\n        return mChildHelper.hasNestedScrollingParent();\n    }\n\n    @Override\n    public boolean dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed,\n                                        int[] offsetInWindow) {\n        return mChildHelper.dispatchNestedScroll(dxConsumed, dyConsumed, dxUnconsumed, dyUnconsumed, offsetInWindow);\n    }\n\n    @Override\n    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow) {\n        return mChildHelper.dispatchNestedPreScroll(dx, dy, consumed, offsetInWindow);\n    }\n\n    @Override\n    public boolean dispatchNestedFling(float velocityX, float velocityY, boolean consumed) {\n        return mChildHelper.dispatchNestedFling(velocityX, velocityY, consumed);\n    }\n\n    @Override\n    public boolean dispatchNestedPreFling(float velocityX, float velocityY) {\n        return mChildHelper.dispatchNestedPreFling(velocityX, velocityY);\n    }\n\n}\n\n```\n\n\u52d5\u4f5c\n\n![output.gif](https://qiita-image-store.s3.amazonaws.com/0/27388/0905ef9f-e583-b9f9-bb4a-b4b21351fa2e.gif)\n\n\n# \u554f\u984c\u70b9\n\u3053\u306e\u5b9f\u88c5\u306b\u306f\u3044\u304f\u3064\u304b\u554f\u984c\u70b9\u304c\u3042\u308b\u306e\u3067\u5b9f\u7528\u3067\u304d\u308b\u30ec\u30d9\u30eb\u3067\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u898b\u3064\u304b\u3063\u3066\u3044\u308b\u90e8\u5206\u3060\u3068\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u306b\u96e2\u3057\u305f\u6642\u306b\u3046\u307e\u304f\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u306a\u3044\u3053\u3068\u304c\u3042\u3063\u305f\u308a\u3001\nListView\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u5909\u5316\u91cf\u3092\u6d88\u8cbb\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001AppBarLayout\u306eexitUntilCollapsed\u30d5\u30e9\u30b0\u3092\u3064\u3051\u3066\u3044\u308b\u5834\u5408\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u6319\u52d5\u304c\u5c11\u3057\u9055\u3046\u306a\u3069\u3067\u3059\u3002\n\u8ab0\u304b\u89e3\u6c7a\u7b56\u3092\u77e5\u3063\u3066\u3044\u305f\u3089\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u3002\n\n\n\u3053\u3053\u306b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\nhttps://github.com/takahirom/NestedListView\n\n\u3061\u306a\u307f\u306bWebView\u3067\u3082\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttps://github.com/takahirom/webview-in-coordinatorlayout\n\n# \u53c2\u8003\nNestedScrollView\u306e\u4ed5\u7d44\u307f\nhttp://qiita.com/takahirom/items/2978ede8e7d40b888832\nAndroid\u306eCoordinatorLayout\u3092\u4f7f\u3044\u3053\u306a\u3057\u3066\u3001\u30e2\u30c0\u30f3\u306a\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u5b9f\u88c5\u3057\u3088\u3046\nhttp://techblog.yahoo.co.jp/android/androidcoordinatorlayout/\n", "tags": ["Android", "ListView", "CoordinatorLayout", "DesignSupportLibrary"]}