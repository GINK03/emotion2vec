{"context": "\n\n\u72d9\u3044\n\u53e4\u3044DLL\u306f\u6587\u5b57\u30b3\u30fc\u30c9\u306bCP932\u3092\u4f7f\u3063\u3066\u308b\u3082\u306e\u304c\u3042\u308b\u304c\nweb\u4e0a\u306b\u898b\u53d7\u3051\u3089\u308c\u308b\u6587\u732e\u306b\u306f\u3053\u308c\u3089\u306e\u907a\u7269\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u306e\u3067\u3053\u3053\u306b\u8a18\u8ff0\u3059\u308b\u3002\n\n\u30b3\u30fc\u30c9\n\ncall_msgbox.go\npackage main\n\nimport (\n    \"syscall\"\n    \"unsafe\"\n\n    \"golang.org/x/text/encoding/japanese\"\n    \"golang.org/x/text/transform\"\n)\n\nfunc cp932(str string) string {\n    r, _, err := transform.String(japanese.ShiftJIS.NewEncoder(), str)\n    if err != nil {\n        panic(err)\n    }\n    return r\n}\nfunc cp932ptr(str string) *byte {\n    return syscall.StringBytePtr(cp932(str))\n}\n\nfunc main() {\n    user32 := syscall.MustLoadDLL(\"user32.dll\")\n    defer user32.Release()\n    MessageBoxA := user32.MustFindProc(\"MessageBoxA\")\n    MessageBoxW := user32.MustFindProc(\"MessageBoxW\")\n\n    //wide char = utf16le\n    MessageBoxW.Call(0,\n        uintptr(unsafe.Pointer(syscall.StringToUTF16Ptr(\"\u65e5\u672c\u8a9e\u306e\u8868\u793a\"))),\n        uintptr(unsafe.Pointer(syscall.StringToUTF16Ptr(\"UTF16LE\u306e\u5834\u5408\"))),\n        0)\n\n    // cp932\n    MessageBoxA.Call(0,\n        uintptr(unsafe.Pointer(cp932ptr(\"\u65e5\u672c\u8a9e\u306e\u8868\u793a\"))),\n        uintptr(unsafe.Pointer(cp932ptr(\"CP932\u306e\u5834\u5408\"))),\n        0)\n\n    // UTF8\u3082ANSI\u4e92\u63db\u306a\u306e\u3067\u82f1\u6570\u5b57\u306e\u307f\u306a\u3089\u3070\n    MessageBoxA.Call(0,\n        uintptr(unsafe.Pointer(syscall.StringBytePtr(\"ascii only\"))),\n        uintptr(unsafe.Pointer(syscall.StringBytePtr(\"utf8 is ANSI\"))),\n        0)\n}\n\n\n\n\u53cd\u7701\u70b9\n\u3042\u304f\u307e\u3067CP932(\u3044\u308f\u3086\u308bSJIS)\u7528\u3067\u3042\u308b\u3002\n\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3092OS\u306eANSI\u95a2\u6570\u306b\u6e21\u3059\u5834\u5408\u306b\u306fWideCharToMultiByte\u3092\u5229\u7528\u3057\u3066\nUTF16\u3078\u5909\u63db -> WideCharToMultiByte -> CP_ACP \u3078\u5909\u63db\u3057\u3066\u3084\u308b\u3079\u304d\n\n\u4e00\u8a00\nuintptr(unsafe.Pointer(\n\u304c\u975e\u5e38\u306b\u5197\u9577\u306b\u611f\u3058\u308b\n# \u72d9\u3044\n\u53e4\u3044DLL\u306f\u6587\u5b57\u30b3\u30fc\u30c9\u306bCP932\u3092\u4f7f\u3063\u3066\u308b\u3082\u306e\u304c\u3042\u308b\u304c\nweb\u4e0a\u306b\u898b\u53d7\u3051\u3089\u308c\u308b\u6587\u732e\u306b\u306f\u3053\u308c\u3089\u306e\u907a\u7269\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u306e\u3067\u3053\u3053\u306b\u8a18\u8ff0\u3059\u308b\u3002\n\n# \u30b3\u30fc\u30c9\n\n```go:call_msgbox.go\npackage main\n\nimport (\n\t\"syscall\"\n\t\"unsafe\"\n\n\t\"golang.org/x/text/encoding/japanese\"\n\t\"golang.org/x/text/transform\"\n)\n\nfunc cp932(str string) string {\n\tr, _, err := transform.String(japanese.ShiftJIS.NewEncoder(), str)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn r\n}\nfunc cp932ptr(str string) *byte {\n\treturn syscall.StringBytePtr(cp932(str))\n}\n\nfunc main() {\n\tuser32 := syscall.MustLoadDLL(\"user32.dll\")\n\tdefer user32.Release()\n\tMessageBoxA := user32.MustFindProc(\"MessageBoxA\")\n\tMessageBoxW := user32.MustFindProc(\"MessageBoxW\")\n\n\t//wide char = utf16le\n\tMessageBoxW.Call(0,\n\t\tuintptr(unsafe.Pointer(syscall.StringToUTF16Ptr(\"\u65e5\u672c\u8a9e\u306e\u8868\u793a\"))),\n\t\tuintptr(unsafe.Pointer(syscall.StringToUTF16Ptr(\"UTF16LE\u306e\u5834\u5408\"))),\n\t\t0)\n\n\t// cp932\n\tMessageBoxA.Call(0,\n\t\tuintptr(unsafe.Pointer(cp932ptr(\"\u65e5\u672c\u8a9e\u306e\u8868\u793a\"))),\n\t\tuintptr(unsafe.Pointer(cp932ptr(\"CP932\u306e\u5834\u5408\"))),\n\t\t0)\n\n\t// UTF8\u3082ANSI\u4e92\u63db\u306a\u306e\u3067\u82f1\u6570\u5b57\u306e\u307f\u306a\u3089\u3070\n\tMessageBoxA.Call(0,\n\t\tuintptr(unsafe.Pointer(syscall.StringBytePtr(\"ascii only\"))),\n\t\tuintptr(unsafe.Pointer(syscall.StringBytePtr(\"utf8 is ANSI\"))),\n\t\t0)\n}\n```\n\n\n# \u53cd\u7701\u70b9\n\u3042\u304f\u307e\u3067CP932(\u3044\u308f\u3086\u308bSJIS)\u7528\u3067\u3042\u308b\u3002\n\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3092OS\u306eANSI\u95a2\u6570\u306b\u6e21\u3059\u5834\u5408\u306b\u306fWideCharToMultiByte\u3092\u5229\u7528\u3057\u3066\nUTF16\u3078\u5909\u63db -> WideCharToMultiByte -> CP_ACP \u3078\u5909\u63db\u3057\u3066\u3084\u308b\u3079\u304d\n\n# \u4e00\u8a00\nuintptr(unsafe.Pointer(\n\u304c\u975e\u5e38\u306b\u5197\u9577\u306b\u611f\u3058\u308b\n", "tags": ["golang", "Go", "CP932", "dll"]}