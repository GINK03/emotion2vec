{"context": "\n\n\u306f\u3058\u3081\u306b\nAuthorization Plugin \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u3054\u3068\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nAuthorization Plugin \u3092\u4f7f\u3046\u306b\u306f\u3001\u8ab0\u304c\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u8b58\u5225\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nBasic\u8a8d\u8a3c\u3084\u30c8\u30fc\u30af\u30f3\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306a\u3069\u3092\u7528\u3044\u3066\u8a8d\u8a3c (Authentication) \u3092\u884c\u3063\u305f\u4e0a\u3067\u3001\u8a8d\u8a3c\u3055\u308c\u305f\u30e6\u30fc\u30b6\u3084 ServiceAccount \u306b\u5bfe\u3059\u308b\u8a8d\u53ef (Authorization) \u3092\u884c\u3044\u307e\u3059\u3002\n\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u304c\u884c\u308f\u308c\u308b\u306e\u306f secure port \u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u306e\u307f\u3067\u3001insecure port \u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u306f\u30c1\u30a7\u30c3\u30af\u3055\u308c\u307e\u305b\u3093\u3002\n\u8a8d\u53ef\u306b\u3064\u3044\u3066\u306e\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f \u3053\u3061\u3089\n\u8a8d\u8a3c\u306b\u95a2\u3057\u3066\u306f \u3053\u3061\u3089\n\u30c6\u30b9\u30c8\u74b0\u5883\u306e Kubernetes \u30af\u30e9\u30b9\u30bf\u306f \u3053\u3061\u3089\u306e\u3088\u3046\u306b kubespray \u3067\u4f5c\u3063\u305f\u60f3\u5b9a\u3067\u3059\u3002\nKubernetes 1.3.0 \u306b\u306f RBAC \u95a2\u9023\u3067 \u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\u30d0\u30b0 \u304c\u3042\u308b\u306e\u3067 1.3.4 \u4ee5\u964d\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\nAPI Server \u306e\u8a2d\u5b9a\nABAC (Attribute-Based Access Control) \u3068 RBAC (Roles-Based Access Control) \u3092\u8a66\u3057\u307e\u3059\u3002\nAPI Server \u306e\u8d77\u52d5\u6642\u306e\u5f15\u6570\u3092\u5909\u66f4\u3057\u3066 ABAC \u3068 RBAC \u4e21\u65b9\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306f\u3069\u3061\u3089\u304b\u306e Authorization Plugin \u3067\u8a8d\u53ef\u304c\u4e0b\u308a\u308c\u3070\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nkubespary \u3067\u69cb\u6210\u3057\u305f\u4f8b\u3067\u306f kubelet \u304b\u3089 API Server \u304c\u8d77\u52d5\u3055\u308c\u308b\u306e\u3067\u3001manifest \u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\nAPI Server \u3092\u52d5\u4f5c\u3055\u305b\u308b 2\u53f0\u4e21\u65b9\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\nnode1,node2\u3067\u5b9f\u65bd\n## manifests \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f watch \u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u5148\u306b\u6e96\u5099\u3092\u6574\u3048\u308b\n# vi /etc/kubernetes/abac-policy.jsonl    ## \u5185\u5bb9\u306f\u5f8c\u8ff0\n# chmod 600 /etc/kubernetes/abac-policy.jsonl\n\n# cd /etc/kubernetes/manifests\n# cp -ip kube-apiserver.manifest /tmp\n# vi kube-apiserver.manifest    ## \u5909\u66f4\u70b9\u3092\u5f8c\u8ff0\n\n\n\n/etc/kubernetes/abac-policy.jsonl\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube-node\", \"namespace\": \"*\", \"resource\": \"*\", \"apiGroup\": \"*\"}}\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"*\", \"readonly\": true, \"nonResourcePath\": \"*\"}}\n\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"root\", \"namespace\": \"*\", \"resource\": \"*\", \"apiGroup\": \"*\"}}\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube\", \"namespace\": \"test\", \"resource\": \"services\", \"apiGroup\": \"*\", \"readonly\": true}}\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube\", \"namespace\": \"test\", \"resource\": \"pods\", \"apiGroup\": \"*\"}}\n\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"system:serviceaccount:test:default\", \"namespace\": \"test\", \"resource\": \"*\", \"apiGroup\": \"*\", \"readonly\": true}}\n\n\n\nkube-apiserver.manifest\u306e\u4fee\u6b63\u70b9\n--- /tmp/kube-apiserver.manifest        2016-08-12 00:35:27.311905955 +0900\n+++ /etc/kubernetes/manifests/kube-apiserver.manifest   2016-08-12 00:50:44.237718445 +0900\n@@ -23,6 +23,9 @@\n     - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n     - --token-auth-file=/etc/kubernetes/tokens/known_tokens.csv\n     - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n+    - --authorization-mode=ABAC,RBAC\n+    - --authorization-policy-file=/etc/kubernetes/abac-policy.jsonl\n+    - --authorization-rbac-super-user=root\n     - --secure-port=443\n     - --insecure-port=8080\n     - --v=2\n\n\nkube-apiserver.manifest \u3092\u5909\u66f4\u30fb\u4fdd\u5b58\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b kube-apiserver \u304c\u518d\u8d77\u52d5\u3055\u308c\u307e\u3059\u3002\n\u5f15\u6570\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n# ps -eo args | grep hyperkube\\ apiserve[r] | sed \"s/ /\\n/g\"\n/hyperkube\napiserver\n--advertise-address=192.168.100.1\n--etcd-servers=http://127.0.0.1:2379\n--insecure-bind-address=127.0.0.1\n--apiserver-count=2\n--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota\n--service-cluster-ip-range=10.233.0.0/18\n--client-ca-file=/etc/kubernetes/ssl/ca.pem\n--basic-auth-file=/etc/kubernetes/users/known_users.csv\n--tls-cert-file=/etc/kubernetes/ssl/apiserver.pem\n--tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n--token-auth-file=/etc/kubernetes/tokens/known_tokens.csv\n--service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n--authorization-mode=ABAC,RBAC\n--authorization-policy-file=/etc/kubernetes/abac-policy.jsonl\n--authorization-rbac-super-user=root\n--secure-port=443\n--insecure-port=8080\n--v=2\n--allow-privileged=true\n2>&1\n>>\n/var/log/kubernetes/kube-apiserver.log\n\n\u3064\u3044\u3067\u306b\u30c6\u30b9\u30c8\u7528\u306e Namespace \u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n# kubectl create ns test\nnamespace \"test\" created\n# kubectl get ns\nNAME          STATUS    AGE\ndefault       Active    12m\nkube-system   Active    12m\ntest          Active    2s\n\n\nkubedns \u306e\u8a2d\u5b9a\nAPI Server \u3067\u8a8d\u53ef\u304c\u6709\u52b9\u306b\u306a\u3063\u305f\u305f\u3081\u3001\u3053\u306e\u307e\u307e\u3067\u306f kubedns \u304b\u3089 API Server \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\nkubedns \u306f API Server \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u5f97\u3089\u308c\u305f\u60c5\u5831\u3092\u3082\u3068\u306b DNS \u30ec\u30b3\u30fc\u30c9\u3092\u66f4\u65b0\u3059\u308b\u306e\u3067\u3001API Server \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u74b0\u5883\u3067\u306f Replication Controller \u3068\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u8a2d\u5b9a\u3092\u66f8\u304d\u66ff\u3048\u307e\u3059\u3002\u5909\u66f4\u304c\u5fc5\u8981\u306a\u306e\u306f kube2sky \u306e\u7b87\u6240\u3060\u3051\u3067\u3059\u3002\n\u3084\u308a\u65b9\u306f\u8272\u3005\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f ConfigMap \u3067 kubeconfig.yaml \u3092\u7528\u610f\u3057\u3001\u30db\u30b9\u30c8\u306e /etc/kubernetes/ssl \u306b\u3042\u308b\u8a3c\u660e\u66f8\u3068\u79d8\u5bc6\u9375\u3092 HostPath \u3067\u30b3\u30f3\u30c6\u30ca\u306b\u898b\u305b\u3066 TLS \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a8d\u8a3c\u3092\u3057\u307e\u3059\u3002\n(\u8a3c\u660e\u66f8\u30fb\u79d8\u5bc6\u9375\u306f\u5168\u3066\u306e\u30db\u30b9\u30c8\u304c\u6301\u3063\u3066\u3044\u308b\u69cb\u6210\u3067\u3059)\n\nConfigMap\u4f5c\u6210\n# vi kubeconfig.yaml\n# kubectl --namespace=kube-system create configmap kubeconfig --from-file=kubeconfig.yaml\nconfigmap \"kubeconfig\" created\n# kubectl --namespace=kube-system get configmap\nNAME         DATA      AGE\nkubeconfig   1         7s\n\n\n\nkubeconfig.yaml\napiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\n    server: https://10.233.0.1/\nusers:\n- name: kubedns\n  user:\n    client-certificate: /etc/kubernetes/ssl/node.pem\n    client-key: /etc/kubernetes/ssl/node-key.pem\ncontexts:\n- context:\n    cluster: local\n    user: kubedns\n  name: kubedns-cluster.local\ncurrent-context: kubedns-cluster.local\n\n\nAPI Server \u306e\u6307\u5b9a\u306f ClusterIP \u3067\u884c\u3044\u307e\u3057\u305f\u3002\n# kubectl get svc\nNAME         CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nkubernetes   10.233.0.1   <none>        443/TCP   15m\n\nConfigMap \u3092\u4f5c\u3063\u305f\u3089\u3001\u7d9a\u3044\u3066\u73fe\u5728\u306e\u8a2d\u5b9a\u3092\u30d9\u30fc\u30b9\u306b Replication Controller \u306e\u4fee\u6b63\u3092\u884c\u3044\u307e\u3059\u3002\n\nReplicationController\u4fee\u6b63\n# kubectl --namespace=kube-system get rc kubedns -o yaml > kubedns.yaml\n# vi kubedns.yaml\n# diff -u <(kubectl --namespace=kube-system get rc kubedns -o yaml) kubedns.yaml\n\n\n--- /dev/fd/63  2016-08-12 00:56:59.701544080 +0900\n+++ kubedns.yaml        2016-08-12 00:56:45.148329156 +0900\n@@ -52,6 +52,7 @@\n           name: etcd-storage\n       - args:\n         - --domain=cluster.local\n+        - --kubecfg-file=/etc/kubernetes/kubeconfig.yaml\n         image: gcr.io/google_containers/kube2sky:1.14\n         imagePullPolicy: IfNotPresent\n         name: kube2sky\n@@ -60,6 +61,12 @@\n             cpu: 100m\n             memory: 50Mi\n         terminationMessagePath: /dev/termination-log\n+        volumeMounts:\n+        - mountPath: /etc/kubernetes\n+          name: kubeconfig\n+        - mountPath: /etc/kubernetes/ssl\n+          name: etc-kube-ssl\n+          readOnly: true\n       - args:\n         - -machines=http://localhost:4001\n         - -addr=0.0.0.0:53\n@@ -118,6 +125,12 @@\n       volumes:\n       - emptyDir: {}\n         name: etcd-storage\n+      - configMap:\n+          name: kubeconfig\n+        name: kubeconfig\n+      - hostPath:\n+          path: /etc/kubernetes/ssl\n+        name: etc-kube-ssl\n status:\n   fullyLabeledReplicas: 1\n   observedGeneration: 1\n\n\u8a2d\u5b9a\u3092\u4f5c\u3063\u305f\u3089 Replication Controller \u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\nPod \u3092\u4f5c\u308a\u76f4\u3055\u305b\u308b\u305f\u3081\u306b\u3001\u4e00\u5ea6\u524a\u9664\u3057\u307e\u3059\u3002\n\u524a\u9664\u3057\u3066\u3057\u3070\u3089\u304f\u5f85\u3064\u3068\u81ea\u52d5\u7684\u306b Replication Controller \u304c Pod \u3092\u4f5c\u308a\u76f4\u3057\u307e\u3059\u3002\n# kubectl replace -f kubedns.yaml\nreplicationcontroller \"kubedns\" replaced\n\n# kubectl --namespace=kube-system get pod -l k8s-app=kubedns\nNAME            READY     STATUS    RESTARTS   AGE\nkubedns-gy54j   4/4       Running   0          17m\n\n# kubectl --namespace=kube-system delete pod kubedns-gy54j\npod \"kubedns-gy54j\" deleted\n\n# kubectl --namespace=kube-system get pod -l k8s-app=kubedns\nNAME            READY     STATUS    RESTARTS   AGE\nkubedns-ys89d   4/4       Running   0          44s\n\nPod \u304c\u52d5\u3044\u305f\u3089\u9069\u5f53\u306a Service \u3092\u4f5c\u3063\u3066\u540d\u524d\u304c\u5f15\u3051\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u540d\u524d\u767b\u9332\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u3067\u3001Endpoint \u306f\u5b58\u5728\u3057\u306a\u304f\u3066\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n# kubectl expose svc kubernetes --name=hoge --port=1111 --selector=\"foo=bar\"\nservice \"hoge\" exposed\n# kubectl get svc\nNAME         CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nhoge         10.233.62.169   <none>        1111/TCP   4s\nkubernetes   10.233.0.1      <none>        443/TCP    21m\n\n# dig +short hoge.default.svc.cluster.local.\n10.233.62.169\n\n\u7121\u4e8b\u306b\u540d\u524d\u304c\u5f15\u3051\u305f\u3089\u4f59\u8a08\u306a Service \u306f\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n# kubectl delete svc hoge\nservice \"hoge\" deleted\n\n\nABAC\n\nABAC policy \u8a2d\u5b9a\u306e\u8aac\u660e\n\u3069\u306e\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u5426\u304c\u8a2d\u5b9a\u3055\u308c\u305f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u524d\u306b\u3001API Server \u306e\u8a2d\u5b9a \u3067\u8a18\u8ff0\u3057\u305f abac-policy.jsonl \u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f kube-node \u30e6\u30fc\u30b6\u306b\u5168\u3066\u306e Namespace \u53ca\u3073\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube-node\", \"namespace\": \"*\", \"resource\": \"*\", \"apiGroup\": \"*\"}}\n\n\u3053\u306e\u74b0\u5883\u3067 kubelet \u306e\u8a8d\u8a3c\u8a2d\u5b9a\u306f /etc/kubernetes/node-kubeconfig.yaml \u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\napiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\nusers:\n- name: kubelet\n  user:\n    client-certificate: /etc/kubernetes/ssl/node.pem\n    client-key: /etc/kubernetes/ssl/node-key.pem\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: kubelet-cluster.local\ncurrent-context: kubelet-cluster.local\n\n\u3053\u306e\u8a3c\u660e\u66f8\u306e CN \u304c kube-node \u3067\u3059\u3002\u3053\u308c\u306b\u3088\u308a kubelet \u306f API Server \u3078\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n# openssl x509 -in /etc/kubernetes/ssl/node.pem -subject -noout\nsubject= /CN=kube-node\n\nkube-proxy \u3082\u540c\u3058 node-kubeconfig.yaml \u3092\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u3002\n(Master \u3068\u3057\u3066 kubespray \u3067\u69cb\u6210\u3057\u305f\u30db\u30b9\u30c8\u306f localhost \u306e insecure port \u3092\u53c2\u7167\u3057\u307e\u3059\u304c\u3001Master \u306e\u6a5f\u80fd\u3092\u6301\u305f\u306a\u3044\u3088\u3046 kubespray \u3067\u69cb\u6210\u3057\u305f\u30db\u30b9\u30c8\u306f Master \u306b\u3057\u305f\u30db\u30b9\u30c8\u306e secure port \u3092\u53c2\u7167\u3057\u307e\u3059\u3002)\nkubedns \u3082\u8a2d\u5b9a\u306f\u82e5\u5e72\u7570\u306a\u308a\u307e\u3059\u304c\u3001\u540c\u3058\u8a3c\u660e\u66f8\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a8d\u8a3c\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f nonResourcePath \u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5168\u3066\u306e\u30e6\u30fc\u30b6\u306b\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\nkubectl \u3092\u53e9\u304f\u969b\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"*\", \"readonly\": true, \"nonResourcePath\": \"*\"}}\n\n\u4ee5\u4e0b\u306f root \u30e6\u30fc\u30b6\u306b\u5168\u3066\u306e Namespace \u53ca\u3073\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\u3053\u306e\u74b0\u5883\u3067\u306f\u5f8c\u8ff0\u3059\u308b RBAC \u306e\u30b9\u30fc\u30d1\u30fc\u30e6\u30fc\u30b6\u3068\u3057\u3066\u3082 root \u30e6\u30fc\u30b6\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"root\", \"namespace\": \"*\", \"resource\": \"*\", \"apiGroup\": \"*\"}}\n\n\u4ee5\u4e0b\u306f kube \u30e6\u30fc\u30b6\u306b\u9650\u5b9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\ntest Namespace \u306b\u304a\u3044\u3066 Service \u306e\u8aad\u307f\u53d6\u308a\u3068 Pod \u306e\u8aad\u307f\u66f8\u304d\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube\", \"namespace\": \"test\", \"resource\": \"services\", \"apiGroup\": \"*\", \"readonly\": true}}\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube\", \"namespace\": \"test\", \"resource\": \"pods\", \"apiGroup\": \"*\"}}\n\n\u4ee5\u4e0b\u306f test Namespace \u306e default \u3068\u3044\u3046 ServiceAccount \u306b test Namespace \u306e\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u8aad\u307f\u53d6\u308a\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\nServiceAccount \u306e\u8a2d\u5b9a\u3092\u66f8\u304f\u5834\u5408\u306f system:serviceaccount:<namespace>:<serviceaccountname> \u3068\u3044\u3046\u5f62\u5f0f\u306e\u30e6\u30fc\u30b6\u540d\u306b\u3057\u307e\u3059\u3002\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"system:serviceaccount:test:default\", \"namespace\": \"test\", \"resource\": \"*\", \"apiGroup\": \"*\", \"readonly\": true}}\n\ndefault \u3068\u3044\u3046 ServiceAccount \u306f test Namespace \u3092\u4f5c\u6210\u3057\u305f\u969b\u306b\u81ea\u52d5\u7684\u306b\u4f5c\u3089\u308c\u305f\u3082\u306e\u3067\u3059\u3002\n# kubectl --namespace=test get sa\nNAME      SECRETS   AGE\ndefault   1         15m\n# kubectl --namespace=test get secret\nNAME                  TYPE                                  DATA      AGE\ndefault-token-a9aii   kubernetes.io/service-account-token   3         15m\n\n\nABAC \u52d5\u4f5c\u30c6\u30b9\u30c8\n\u8a2d\u5b9a\u3057\u305f\u901a\u308a\u306b\u5236\u5fa1\u3055\u308c\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\nkubectl \u306e\u8a8d\u8a3c\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001insecure port \u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u304c\u5fc5\u8981\u306a\u3044 (\u5e38\u306b\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3055\u308c\u308b) \u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\nAuthorization Plugin \u306e\u52d5\u4f5c\u30c6\u30b9\u30c8\u3092\u3059\u308b\u306b\u306f\u3001kubectl \u3067\u306e\u30a2\u30af\u30bb\u30b9\u3092 secure port \u306e\u65b9\u306b\u5411\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n(kubectl \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f http://locahost:8080/ \u5b9b\u3066\u306b\u306a\u3063\u3066\u3044\u307e\u3059)\n## \u8a8d\u8a3c\u3042\u308a\u306b\u3057\u305f\u3044\u5834\u5408\u306f secure port \u306b\u5411\u3051\u308b\n# kubectl config set-cluster kubespray-secure --server=https://kubernetes.default.svc.cluster.local/ --certificate-authority=/root/.kube/ca.pem\n# cp /etc/kubernetes/ssl/ca.pem /root/.kube/\n\n## root \u30e6\u30fc\u30b6\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\n# kubectl config set-credentials root --username=root --password=changeme\n# kubectl config set-context kubespray-root --cluster=kubespray-secure --user=root\n\n## kube \u30e6\u30fc\u30b6\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\n# kubectl config set-credentials kube --username=kube --password=changeme\n# kubectl config set-context kubespray-kube --cluster=kubespray-secure --user=kube\n\n## insecure port \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\n# kubectl config set-cluster kubespray-insecure --server=http://localhost:8080/\n# kubectl config set-context insecure --cluster=kubespray-insecure --user=\"\"\n\n## test Namespace \u306e default ServiceAccount \u306b\u95a2\u3059\u308b\u8a2d\u5b9a\n# yum install -y jq\n# kubectl config set-credentials test-default-sa \\\n--token=$(kubectl --namespace=test get secret \\\n $(kubectl --namespace=test get sa default -o json | \\\njq -r .secrets[0].name) -o json | jq -r .data.token | base64 -d)\n# kubectl config set-context kubespray-test-default-sa --cluster=kubespray-secure --user=test-default-sa\n\n4\u3064\u306e context \u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u3089\u306f use-context \u306b\u3088\u3063\u3066\u5207\u308a\u66ff\u3048\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n/root/.kube/config\u306e\u78ba\u8a8d\n# kubectl config view\napiVersion: v1\nclusters:\n- cluster:\n    server: http://localhost:8080/\n  name: kubespray-insecure\n- cluster:\n    certificate-authority: ca.pem\n    server: https://kubernetes.default.svc.cluster.local/\n  name: kubespray-secure\ncontexts:\n- context:\n    cluster: kubespray-insecure\n    user: \"\"\n  name: insecure\n- context:\n    cluster: kubespray-secure\n    user: kube\n  name: kubespray-kube\n- context:\n    cluster: kubespray-secure\n    user: root\n  name: kubespray-root\n- context:\n    cluster: kubespray-secure\n    user: test-default-sa\n  name: kubespray-test-default-sa\ncurrent-context: \"\"\nkind: Config\npreferences: {}\nusers:\n- name: kube\n  user:\n    password: changeme\n    username: kube\n- name: root\n  user:\n    password: changeme\n    username: root\n- name: test-default-sa\n  user:\n    token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0ZXN0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tYTlhaWkiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjgxNzY2MGJhLTVmZGItMTFlNi05NzJlLTAwMGMyOTJlZWMzNyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDp0ZXN0OmRlZmF1bHQifQ.5N_TDpepXRL3yf_vslVoU0b76VcE2FqXToGbIBIZH-o5Fxqn-yuzXQ16JRdZaAKpFQHX1vG8xnHqRsrt3xrM228zuF6h6vZjephsLqPYNdy3dHhc62ZhhiI_RWzcb6uMYlAxT4YwfGWL-DikSuZtH5YJiASreo17Uf4Xy2_6WeRPzweLG4GHDHvdmTV5Llz-nRqcIC6CaYvDpxoShTx4DdbG9PkH7txnhHGGxZj-7qC_vThaN0APrJrWTeRPyu2oFy78vioAbB5mPHo9XNZ7hjWKtzUwzy26wFDgzdCUyzRmRaGKnTe1DQLQRoR5iw5byfaaM8tsHGtbPWsk8Dw3mA\n\n\n\u307e\u305a\u306f root \u30e6\u30fc\u30b6\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002 \n# kubectl config use-context kubespray-root\n# kubectl config current-context\nkubespray-root\n\n# kubectl get secret --all-namespaces\nNAMESPACE     NAME                  TYPE                                  DATA      AGE\ndefault       default-token-vxtr6   kubernetes.io/service-account-token   3         31m\nkube-system   default-token-gh3tp   kubernetes.io/service-account-token   3         31m\ntest          default-token-a9aii   kubernetes.io/service-account-token   3         18m\n\n\u5168\u3066\u3092\u8a66\u3059\u306e\u306f\u9762\u5012\u306a\u306e\u3067 secret \u3060\u3051\u3067\u3059\u304c\u3001\u5168\u3066\u306e Namespace \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3057\u305f\u3002\u540c\u69d8\u306b Service \u3084 Pod \u3082\u554f\u984c\u306a\u304f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\nkube \u30e6\u30fc\u30b6\u306e\u5834\u5408\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\u5207\u308a\u66ff\u3048\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n# kubectl config use-context kubespray-kube\n# kubectl config current-context\nkubespray-kube\n\n## kube-system Namespace \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=kube-system get pod\nthe server does not allow access to the requested resource (get pods)\n\n## test Namespace \u306a\u3089\u30ea\u30bd\u30fc\u30b9\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b (\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u672a\u4f5c\u6210\u306a\u306e\u3067\u7121\u3044)\n# kubectl --namespace=test get pod\n# kubectl --namespace=test get svc\n# kubectl --namespace=test get secret\nthe server does not allow access to the requested resource (get secrets)\n\n## test Namespace \u3067 Pod \u3092\u4f5c\u308c\u308b\u304c Service \u306f\u4f5c\u308c\u306a\u3044\n# kubectl --namespace=test run test -l foo=bar --image=nginx:alpine --restart=Never\npod \"test\" created\n# kubectl --namespace=test get pod\nNAME      READY     STATUS    RESTARTS   AGE\ntest      1/1       Running   0          11s\n# kubectl --namespace=test expose pod test --port=80 --target-port=80\nError from server: the server does not allow access to the requested resource (post services)\n\ntest Namespace \u306e default \u3068\u3044\u3046 ServiceAccount \u3082\u8a66\u3057\u307e\u3059\u3002\n# kubectl config use-context kubespray-test-default-sa\n# kubectl config current-context\nkubespray-test-default-sa\n\n## kube-system Namespace \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=kube-system get pod\nthe server does not allow access to the requested resource (get pods)\n\n## test Namespace \u306a\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304c\u3001readonly \u3067 Pod \u3092\u4f5c\u308c\u306a\u3044\n# kubectl --namespace=test get pod\nNAME      READY     STATUS    RESTARTS   AGE\ntest      1/1       Running   0          1m\n# kubectl --namespace=test get svc\n# kubectl --namespace=test get secret\nNAME                  TYPE                                  DATA      AGE\ndefault-token-a9aii   kubernetes.io/service-account-token   3         20m\n# kubectl --namespace=test run test2 -l foo=baz --image=nginx:alpine --restart=Never\nError from server: the server does not allow access to the requested resource (post pods)\n\ninsecure port \u3092\u4f7f\u3063\u3066\u5236\u9650\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3064\u3044\u3067\u306b\u3001\u4f5c\u6210\u3057\u305f Pod \u3092\u524a\u9664\u3057\u307e\u3059\u3002\n# kubectl config use-context insecure\n# kubectl config current-context\ninsecure\n\n# kubectl --namespace=test delete pod test\npod \"test\" deleted\n\n\nRBAC\nRBAC \u3067\u306f ABAC \u3088\u308a\u7d30\u304b\u3044\u5236\u5fa1\u304c\u53ef\u80fd\u3067\u3059\u3002\nRBAC \u306f\u307e\u3060\u30a2\u30eb\u30d5\u30a1\u7248\u306a\u306e\u3067\u3001\u672c\u756a\u904b\u7528\u3059\u308b\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nRBAC \u8a2d\u5b9a\u4f5c\u6210\nRBAC \u306e\u8a2d\u5b9a\u306b\u306f\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\nRBAC \u306e\u30b9\u30fc\u30d1\u30fc\u30e6\u30fc\u30b6\n\u7279\u5b9a\u306e Namespace \u306b\u306e\u307f\u52b9\u679c\u304c\u53ca\u3076 Role, RoleBinding\n\n\u30af\u30e9\u30b9\u30bf\u5168\u4f53\u306b\u52b9\u679c\u304c\u53ca\u3076 ClusterRole, ClusterRoleBinding\n\n\nRole, ClusterRole \u3067\u6a29\u9650\u30bb\u30c3\u30c8\u3092\u5b9a\u7fa9\u3057\u3001RoleBidnnig, ClusterRoleBinding \u3067\u3069\u306e\u30e6\u30fc\u30b6\u307e\u305f\u306f ServiceAccount \u306b\u9069\u7528\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\nClusterRole \u3092 RoleBinding \u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u52b9\u679c\u304c Namespace \u5185\u306b\u9650\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u30af\u30e9\u30b9\u30bf\u5168\u4f53\u306b\u52b9\u679c\u304c\u53ca\u3076\u306e\u306f ClusterRole \u3092 ClusterRoleBinding \u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306e\u307f\u3067\u3059\u3002\n1\u7a2e\u985e\u3060\u3051\u4f5c\u3063\u3066\u8a66\u3057\u307e\u3059\u3002\nABAC \u306e\u3088\u3046\u306a readonly \u30d5\u30e9\u30b0\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u305d\u308c\u305e\u308c\u306e\u64cd\u4f5c\u3092\u7d30\u304b\u304f\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u306f Deployment \u3084 Service \u306e\u4f5c\u6210\u30fb\u66f4\u65b0\u3092\u884c\u3046\u3088\u3046\u306a\u30e6\u30fc\u30b6\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002kube \u30e6\u30fc\u30b6\u3068 test Namespace \u306e default ServiceAccount \u3092\u307e\u3068\u3081\u3066\u540c\u3058 role \u306b bind \u3057\u307e\u3059\u3002\n\nuser-role.yaml\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1alpha1\nmetadata:\n  # \"namespace\" omitted since ClusterRoles are not namespaced.\n  #namespace: default\n  name: normal-user\nrules:\n  - apiGroups: [\"\"] # The API group \"\" indicates the default API Group.\n    resources: [\"pods\"]\n    verbs: [\"get\", \"list\", \"create\", \"update\", \"watch\", \"delete\", \"deletecollection\"]\n    nonResourceURLs: []\n\n  - apiGroups: [\"\"] # The API group \"\" indicates the default API Group.\n    resources: [\"endpoints\", \"events\", \"services\"]\n    verbs: [\"get\", \"list\", \"create\", \"update\", \"delete\", \"watch\" ]\n    nonResourceURLs: [\"\"]\n\n  - apiGroups: [\"extensions\"] # The API group \"\" indicates the default API Group.\n    resources: [\"replicasets\", \"deployments\"]\n    verbs: [\"get\", \"list\", \"create\", \"update\", \"watch\", \"delete\", \"deletecollection\", \"patch\"]\n    nonResourceURLs: []\n\n\n\nuser-bind.yaml\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1alpha1\nmetadata:\n  name: test-normal-users\n  namespace: test\nsubjects:\n  - kind: ServiceAccount\n    name: default\n    namespace: test\n  - kind: User\n    name: kube\nroleRef:\n  kind: ClusterRole\n  name: normal-user\n  apiVersion: rbac.authorization.k8s.io/v1alpha1\n\n\nRBAC \u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u306b\u306f RBAC \u306e\u30b9\u30fc\u30d1\u30fc\u30e6\u30fc\u30b6 (\u3053\u3053\u3067\u306f root) \u306b\u306a\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067 context \u3092\u5207\u308a\u66ff\u3048\u3066\u304b\u3089\u8a2d\u5b9a\u3092\u6295\u5165\u3057\u307e\u3059\u3002\n\nClusterRole,RoleBinding\u4f5c\u6210\u30fb\u78ba\u8a8d\n# kubectl config use-context kubespray-root\n# kubectl config current-context\nkubespray-root\n\n# kubectl create -f user-role.yaml\nclusterrole \"normal-user\" created\n# kubectl create -f user-bind.yaml\nrolebinding \"test-normal-users\" created\n\n# kubectl get clusterroles\nNAME          AGE\nnormal-user   6s\n# kubectl --namespace=test get rolebindings\nNAME                AGE\ntest-normal-users   23s\n\n\n\nRBAC \u52d5\u4f5c\u30c6\u30b9\u30c8\n\u4f5c\u6210\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c6\u30b9\u30c8\u3092\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f kube \u30e6\u30fc\u30b6\u304c normal-user \u30ed\u30fc\u30eb\u306e\u6a29\u9650\u3092\u6301\u3064\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n# kubectl config use-context kubespray-kube\n# kubectl config current-context\nkubespray-kube\n\n## test Namespace \u3067 bind \u3057\u3066\u3044\u308b\u306e\u3067 kube-system Namespace \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=kube-system get pod\nthe server does not allow access to the requested resource (get pods)\n\n## test Namespace \u306a\u3089 Deployment, ReplicaSet, Pod \u304c\u4f5c\u308c\u308b\n# kubectl --namespace=test run test -l foo=bar --image=nginx:1.10.1-alpine\ndeployment \"test\" created\n# kubectl --namespace=test get deployment\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ntest      1         1         1            0           8s\n# kubectl --namespace=test get rs\nNAME              DESIRED   CURRENT   AGE\ntest-2066847110   1         1         9s\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-wk5ze   1/1       Running   0          28s       10.233.120.3   node3\n\n## Service \u3082\u4f5c\u308c\u308b\n# kubectl --namespace=test expose deployment/test --port=80 --target-port=80\nservice \"test\" exposed\n# kubectl --namespace=test get svc\nNAME      CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\ntest      10.233.32.165   <none>        80/TCP    6s\n# kubectl --namespace=test get ep\nNAME      ENDPOINTS         AGE\ntest      10.233.120.3:80   12s\n\n## test Namespace \u3067\u3082 serviceaccount \u3084 secret \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=test get sa\nthe server does not allow access to the requested resource (get serviceaccounts)\n# kubectl --namespace=test get secret\nthe server does not allow access to the requested resource (get secrets)\n\n\u7d9a\u3044\u3066 test Namespace \u306e default ServiceAccount \u3082\u78ba\u8a8d\u3057\u307e\u3059\u3002\n# kubectl config use-context kubespray-test-default-sa\n# kubectl config current-context\nkubespray-test-default-sa\n\n## test Namespace \u3067 bind \u3057\u3066\u3044\u308b\u306e\u3067 kube-system Namespace \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=kube-system get pod\nthe server does not allow access to the requested resource (get pods)\n\n## test Namespace \u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8aad\u307f\u53d6\u308c\u308b\n# kubectl --namespace=test get deployment\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ntest      1         1         1            1           1m\n# kubectl --namespace=test get rs\nNAME              DESIRED   CURRENT   AGE\ntest-2066847110   1         1         1m\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-wk5ze   1/1       Running   0          1m        10.233.120.3   node3\n\n## test Namespace \u306a\u3089 Deployment, ReplicaSet, Pod \u306e\u5909\u66f4\u304c\u3067\u304d\u308b\n# kubectl --namespace=test scale --replicas=2 deployment/test\ndeployment \"test\" scaled\n# kubectl --namespace=test get deployment\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ntest      2         2         2            1           2m\n# kubectl --namespace=test get rs\nNAME              DESIRED   CURRENT   AGE\ntest-2066847110   2         2         2m\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-bcenk   1/1       Running   0          21s       10.233.82.3    node1\ntest-2066847110-wk5ze   1/1       Running   0          3m        10.233.120.3   node3\n# kubectl --namespace=test get svc\nNAME      CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\ntest      10.233.32.165   <none>        80/TCP    2m\n# kubectl --namespace=test get ep\nNAME      ENDPOINTS                        AGE\ntest      10.233.120.3:80,10.233.82.3:80   2m\n\n## test Namespace \u3067 serviceaccount \u3084 secret \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n# kubectl --namespace=test get sa\nNAME      SECRETS   AGE\ndefault   1         28m\n# kubectl --namespace=test get secret\nNAME                  TYPE                                  DATA      AGE\ndefault-token-a9aii   kubernetes.io/service-account-token   3         28m\n\n## serviceaccount \u306e\u4f5c\u6210\u306f\u3067\u304d\u306a\u3044\n# kubectl --namespace=test create sa hoge\nError from server: the server does not allow access to the requested resource (post serviceaccounts)\n\nSecret \u3078\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u3053\u3068\u3092\u4e0d\u5be9\u306b\u601d\u3063\u305f\u65b9\u3082\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nkube \u30e6\u30fc\u30b6\u304c ServiceAccount, Secret \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u306e\u306b\u3001\u540c\u3058 ClusterRole \u3067\u3042\u308b test Namespace \u306e default ServiceAccount \u306f\u4f55\u6545\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\nAPI Server \u306e\u8a2d\u5b9a \u3067\u3082\u89e6\u308c\u305f\u3088\u3046\u306b\u3001ABAC \u53ca\u3073 RBAC \u304c\u4e21\u65b9\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u3069\u3061\u3089\u304b\u4e00\u65b9\u3067\u8a8d\u53ef\u3055\u308c\u308c\u3070\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\ntest Namespace \u306e default ServiceAccount \u306f ABAC \u306e\u30dd\u30ea\u30b7\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a test Namespace \u306e\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u306e readonly \u306a\u30a2\u30af\u30bb\u30b9\u306f\u8a31\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u3002\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"system:serviceaccount:test:default\", \"namespace\": \"test\", \"resource\": \"*\", \"apiGroup\": \"*\", \"readonly\": true}}\n\n\u6700\u5f8c\u306b role \u3092\u524a\u9664\u3057\u3066\u3082\u3046\u4e00\u5ea6\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\nABAC \u306e\u8a2d\u5b9a\u3067\u8a31\u3055\u308c\u3066\u3044\u308b\u64cd\u4f5c\u306e\u307f\u304c\u884c\u3048\u308b\u306f\u305a\u3067\u3059\u3002\n\nClusteRole,RoleBinding\u306e\u524a\u9664\n# kubectl config use-context kubespray-root\n# kubectl config current-context\nkubespray-root\n\n# kubectl delete -f user-role.yaml\nclusterrole \"normal-user\" deleted\n# kubectl delete -f user-bind.yaml\nrolebinding \"test-normal-users\" deleted\n\n## \u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\n# kubectl get clusterroles\n# kubectl --namespace=test get rolebindings\n\n\n\n\u30a2\u30af\u30bb\u30b9\u30c1\u30a7\u30c3\u30af\n## kube \u30e6\u30fc\u30b6\u306e\u78ba\u8a8d\n# kubectl config use-context kubespray-kube\n# kubectl config current-context\nkubespray-kube\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-bcenk   1/1       Running   0          2m        10.233.82.3    node1\ntest-2066847110-wk5ze   1/1       Running   0          5m        10.233.120.3   node3\n# kubectl --namespace=test get deployment\nthe server does not allow access to the requested resource (get deployments.extensions)\n# kubectl --namespace=test get rs\nthe server does not allow access to the requested resource (get replicasets.extensions)\n\n## default ServiceAccount \u306e\u78ba\u8a8d\n# kubectl config use-context kubespray-test-default-sa\n# kubectl config current-context\nkubespray-test-default-sa\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-bcenk   1/1       Running   0          3m        10.233.82.3    node1\ntest-2066847110-wk5ze   1/1       Running   0          5m        10.233.120.3   node3\n# kubectl --namespace=test get deployment\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ntest      2         2         2            2           6m\n# kubectl --namespace=test get secret\nNAME                  TYPE                                  DATA      AGE\ndefault-token-a9aii   kubernetes.io/service-account-token   3         31m\n# kubectl --namespace=test run hoge -l foo=baz --image=nginx:alpine --restart=Never\nError from server: the server does not allow access to the requested resource (post pods)\n\n\n# \u306f\u3058\u3081\u306b\n\nAuthorization Plugin \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u3054\u3068\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nAuthorization Plugin \u3092\u4f7f\u3046\u306b\u306f\u3001\u8ab0\u304c\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u8b58\u5225\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nBasic\u8a8d\u8a3c\u3084\u30c8\u30fc\u30af\u30f3\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306a\u3069\u3092\u7528\u3044\u3066\u8a8d\u8a3c (Authentication) \u3092\u884c\u3063\u305f\u4e0a\u3067\u3001\u8a8d\u8a3c\u3055\u308c\u305f\u30e6\u30fc\u30b6\u3084 ServiceAccount \u306b\u5bfe\u3059\u308b\u8a8d\u53ef (Authorization) \u3092\u884c\u3044\u307e\u3059\u3002\n\n\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u304c\u884c\u308f\u308c\u308b\u306e\u306f secure port \u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u306e\u307f\u3067\u3001insecure port \u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u306f\u30c1\u30a7\u30c3\u30af\u3055\u308c\u307e\u305b\u3093\u3002\n\n\u8a8d\u53ef\u306b\u3064\u3044\u3066\u306e\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f [\u3053\u3061\u3089](http://kubernetes.io/docs/admin/authorization/)\n\u8a8d\u8a3c\u306b\u95a2\u3057\u3066\u306f [\u3053\u3061\u3089](http://kubernetes.io/docs/admin/authentication/)\n\n\u30c6\u30b9\u30c8\u74b0\u5883\u306e Kubernetes \u30af\u30e9\u30b9\u30bf\u306f [\u3053\u3061\u3089\u306e\u3088\u3046\u306b kubespray \u3067\u4f5c\u3063\u305f](http://qiita.com/albatross/items/7f472a973d0c04041a4d)\u60f3\u5b9a\u3067\u3059\u3002\nKubernetes `1.3.0` \u306b\u306f RBAC \u95a2\u9023\u3067 [\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\u30d0\u30b0](https://github.com/kubernetes/kubernetes/pull/29071) \u304c\u3042\u308b\u306e\u3067 `1.3.4` \u4ee5\u964d\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n# API Server \u306e\u8a2d\u5b9a\n\n`ABAC (Attribute-Based Access Control)` \u3068 `RBAC (Roles-Based Access Control)` \u3092\u8a66\u3057\u307e\u3059\u3002\nAPI Server \u306e\u8d77\u52d5\u6642\u306e\u5f15\u6570\u3092\u5909\u66f4\u3057\u3066 `ABAC` \u3068 `RBAC` \u4e21\u65b9\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306f\u3069\u3061\u3089\u304b\u306e Authorization Plugin \u3067\u8a8d\u53ef\u304c\u4e0b\u308a\u308c\u3070\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n`kubespary` \u3067\u69cb\u6210\u3057\u305f\u4f8b\u3067\u306f kubelet \u304b\u3089 API Server \u304c\u8d77\u52d5\u3055\u308c\u308b\u306e\u3067\u3001manifest \u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\nAPI Server \u3092\u52d5\u4f5c\u3055\u305b\u308b 2\u53f0\u4e21\u65b9\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```console:node1,node2\u3067\u5b9f\u65bd\n## manifests \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f watch \u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u5148\u306b\u6e96\u5099\u3092\u6574\u3048\u308b\n# vi /etc/kubernetes/abac-policy.jsonl    ## \u5185\u5bb9\u306f\u5f8c\u8ff0\n# chmod 600 /etc/kubernetes/abac-policy.jsonl\n\n# cd /etc/kubernetes/manifests\n# cp -ip kube-apiserver.manifest /tmp\n# vi kube-apiserver.manifest    ## \u5909\u66f4\u70b9\u3092\u5f8c\u8ff0\n```\n\n```json:/etc/kubernetes/abac-policy.jsonl\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube-node\", \"namespace\": \"*\", \"resource\": \"*\", \"apiGroup\": \"*\"}}\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"*\", \"readonly\": true, \"nonResourcePath\": \"*\"}}\n\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"root\", \"namespace\": \"*\", \"resource\": \"*\", \"apiGroup\": \"*\"}}\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube\", \"namespace\": \"test\", \"resource\": \"services\", \"apiGroup\": \"*\", \"readonly\": true}}\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube\", \"namespace\": \"test\", \"resource\": \"pods\", \"apiGroup\": \"*\"}}\n\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"system:serviceaccount:test:default\", \"namespace\": \"test\", \"resource\": \"*\", \"apiGroup\": \"*\", \"readonly\": true}}\n```\n\n```diff:kube-apiserver.manifest\u306e\u4fee\u6b63\u70b9\n--- /tmp/kube-apiserver.manifest        2016-08-12 00:35:27.311905955 +0900\n+++ /etc/kubernetes/manifests/kube-apiserver.manifest   2016-08-12 00:50:44.237718445 +0900\n@@ -23,6 +23,9 @@\n     - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n     - --token-auth-file=/etc/kubernetes/tokens/known_tokens.csv\n     - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n+    - --authorization-mode=ABAC,RBAC\n+    - --authorization-policy-file=/etc/kubernetes/abac-policy.jsonl\n+    - --authorization-rbac-super-user=root\n     - --secure-port=443\n     - --insecure-port=8080\n     - --v=2\n```\n\n`kube-apiserver.manifest` \u3092\u5909\u66f4\u30fb\u4fdd\u5b58\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b kube-apiserver \u304c\u518d\u8d77\u52d5\u3055\u308c\u307e\u3059\u3002\n\u5f15\u6570\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```console\n# ps -eo args | grep hyperkube\\ apiserve[r] | sed \"s/ /\\n/g\"\n/hyperkube\napiserver\n--advertise-address=192.168.100.1\n--etcd-servers=http://127.0.0.1:2379\n--insecure-bind-address=127.0.0.1\n--apiserver-count=2\n--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota\n--service-cluster-ip-range=10.233.0.0/18\n--client-ca-file=/etc/kubernetes/ssl/ca.pem\n--basic-auth-file=/etc/kubernetes/users/known_users.csv\n--tls-cert-file=/etc/kubernetes/ssl/apiserver.pem\n--tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n--token-auth-file=/etc/kubernetes/tokens/known_tokens.csv\n--service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n--authorization-mode=ABAC,RBAC\n--authorization-policy-file=/etc/kubernetes/abac-policy.jsonl\n--authorization-rbac-super-user=root\n--secure-port=443\n--insecure-port=8080\n--v=2\n--allow-privileged=true\n2>&1\n>>\n/var/log/kubernetes/kube-apiserver.log\n```\n\n\u3064\u3044\u3067\u306b\u30c6\u30b9\u30c8\u7528\u306e Namespace \u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n```console\n# kubectl create ns test\nnamespace \"test\" created\n# kubectl get ns\nNAME          STATUS    AGE\ndefault       Active    12m\nkube-system   Active    12m\ntest          Active    2s\n```\n\n# kubedns \u306e\u8a2d\u5b9a\n\nAPI Server \u3067\u8a8d\u53ef\u304c\u6709\u52b9\u306b\u306a\u3063\u305f\u305f\u3081\u3001\u3053\u306e\u307e\u307e\u3067\u306f `kubedns` \u304b\u3089 API Server \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\n`kubedns` \u306f API Server \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u5f97\u3089\u308c\u305f\u60c5\u5831\u3092\u3082\u3068\u306b DNS \u30ec\u30b3\u30fc\u30c9\u3092\u66f4\u65b0\u3059\u308b\u306e\u3067\u3001API Server \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u74b0\u5883\u3067\u306f `Replication Controller` \u3068\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u8a2d\u5b9a\u3092\u66f8\u304d\u66ff\u3048\u307e\u3059\u3002\u5909\u66f4\u304c\u5fc5\u8981\u306a\u306e\u306f `kube2sky` \u306e\u7b87\u6240\u3060\u3051\u3067\u3059\u3002\n\u3084\u308a\u65b9\u306f\u8272\u3005\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f `ConfigMap` \u3067 kubeconfig.yaml \u3092\u7528\u610f\u3057\u3001\u30db\u30b9\u30c8\u306e `/etc/kubernetes/ssl` \u306b\u3042\u308b\u8a3c\u660e\u66f8\u3068\u79d8\u5bc6\u9375\u3092 `HostPath` \u3067\u30b3\u30f3\u30c6\u30ca\u306b\u898b\u305b\u3066 TLS \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a8d\u8a3c\u3092\u3057\u307e\u3059\u3002\n(\u8a3c\u660e\u66f8\u30fb\u79d8\u5bc6\u9375\u306f\u5168\u3066\u306e\u30db\u30b9\u30c8\u304c\u6301\u3063\u3066\u3044\u308b\u69cb\u6210\u3067\u3059)\n\n```console:ConfigMap\u4f5c\u6210\n# vi kubeconfig.yaml\n# kubectl --namespace=kube-system create configmap kubeconfig --from-file=kubeconfig.yaml\nconfigmap \"kubeconfig\" created\n# kubectl --namespace=kube-system get configmap\nNAME         DATA      AGE\nkubeconfig   1         7s\n```\n\n```yaml:kubeconfig.yaml\napiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\n    server: https://10.233.0.1/\nusers:\n- name: kubedns\n  user:\n    client-certificate: /etc/kubernetes/ssl/node.pem\n    client-key: /etc/kubernetes/ssl/node-key.pem\ncontexts:\n- context:\n    cluster: local\n    user: kubedns\n  name: kubedns-cluster.local\ncurrent-context: kubedns-cluster.local\n```\n\nAPI Server \u306e\u6307\u5b9a\u306f ClusterIP \u3067\u884c\u3044\u307e\u3057\u305f\u3002\n\n```\n# kubectl get svc\nNAME         CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nkubernetes   10.233.0.1   <none>        443/TCP   15m\n```\n\nConfigMap \u3092\u4f5c\u3063\u305f\u3089\u3001\u7d9a\u3044\u3066\u73fe\u5728\u306e\u8a2d\u5b9a\u3092\u30d9\u30fc\u30b9\u306b Replication Controller \u306e\u4fee\u6b63\u3092\u884c\u3044\u307e\u3059\u3002\n\n```console:ReplicationController\u4fee\u6b63\n# kubectl --namespace=kube-system get rc kubedns -o yaml > kubedns.yaml\n# vi kubedns.yaml\n# diff -u <(kubectl --namespace=kube-system get rc kubedns -o yaml) kubedns.yaml\n```\n\n```diff:\n--- /dev/fd/63  2016-08-12 00:56:59.701544080 +0900\n+++ kubedns.yaml        2016-08-12 00:56:45.148329156 +0900\n@@ -52,6 +52,7 @@\n           name: etcd-storage\n       - args:\n         - --domain=cluster.local\n+        - --kubecfg-file=/etc/kubernetes/kubeconfig.yaml\n         image: gcr.io/google_containers/kube2sky:1.14\n         imagePullPolicy: IfNotPresent\n         name: kube2sky\n@@ -60,6 +61,12 @@\n             cpu: 100m\n             memory: 50Mi\n         terminationMessagePath: /dev/termination-log\n+        volumeMounts:\n+        - mountPath: /etc/kubernetes\n+          name: kubeconfig\n+        - mountPath: /etc/kubernetes/ssl\n+          name: etc-kube-ssl\n+          readOnly: true\n       - args:\n         - -machines=http://localhost:4001\n         - -addr=0.0.0.0:53\n@@ -118,6 +125,12 @@\n       volumes:\n       - emptyDir: {}\n         name: etcd-storage\n+      - configMap:\n+          name: kubeconfig\n+        name: kubeconfig\n+      - hostPath:\n+          path: /etc/kubernetes/ssl\n+        name: etc-kube-ssl\n status:\n   fullyLabeledReplicas: 1\n   observedGeneration: 1\n```\n\n\u8a2d\u5b9a\u3092\u4f5c\u3063\u305f\u3089 Replication Controller \u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\nPod \u3092\u4f5c\u308a\u76f4\u3055\u305b\u308b\u305f\u3081\u306b\u3001\u4e00\u5ea6\u524a\u9664\u3057\u307e\u3059\u3002\n\u524a\u9664\u3057\u3066\u3057\u3070\u3089\u304f\u5f85\u3064\u3068\u81ea\u52d5\u7684\u306b Replication Controller \u304c Pod \u3092\u4f5c\u308a\u76f4\u3057\u307e\u3059\u3002\n\n```console\n# kubectl replace -f kubedns.yaml\nreplicationcontroller \"kubedns\" replaced\n\n# kubectl --namespace=kube-system get pod -l k8s-app=kubedns\nNAME            READY     STATUS    RESTARTS   AGE\nkubedns-gy54j   4/4       Running   0          17m\n\n# kubectl --namespace=kube-system delete pod kubedns-gy54j\npod \"kubedns-gy54j\" deleted\n\n# kubectl --namespace=kube-system get pod -l k8s-app=kubedns\nNAME            READY     STATUS    RESTARTS   AGE\nkubedns-ys89d   4/4       Running   0          44s\n```\n\nPod \u304c\u52d5\u3044\u305f\u3089\u9069\u5f53\u306a Service \u3092\u4f5c\u3063\u3066\u540d\u524d\u304c\u5f15\u3051\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u540d\u524d\u767b\u9332\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u3067\u3001Endpoint \u306f\u5b58\u5728\u3057\u306a\u304f\u3066\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n```console\n# kubectl expose svc kubernetes --name=hoge --port=1111 --selector=\"foo=bar\"\nservice \"hoge\" exposed\n# kubectl get svc\nNAME         CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nhoge         10.233.62.169   <none>        1111/TCP   4s\nkubernetes   10.233.0.1      <none>        443/TCP    21m\n\n# dig +short hoge.default.svc.cluster.local.\n10.233.62.169\n```\n\n\u7121\u4e8b\u306b\u540d\u524d\u304c\u5f15\u3051\u305f\u3089\u4f59\u8a08\u306a Service \u306f\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```console\n# kubectl delete svc hoge\nservice \"hoge\" deleted\n```\n\n\n# ABAC \n\n## ABAC policy \u8a2d\u5b9a\u306e\u8aac\u660e\n\n\u3069\u306e\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u5426\u304c\u8a2d\u5b9a\u3055\u308c\u305f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u524d\u306b\u3001[API Server \u306e\u8a2d\u5b9a](#api-server-\u306e\u8a2d\u5b9a) \u3067\u8a18\u8ff0\u3057\u305f `abac-policy.jsonl` \u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\n\u4ee5\u4e0b\u306f kube-node \u30e6\u30fc\u30b6\u306b\u5168\u3066\u306e Namespace \u53ca\u3073\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\n```json\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube-node\", \"namespace\": \"*\", \"resource\": \"*\", \"apiGroup\": \"*\"}}\n```\n\n\u3053\u306e\u74b0\u5883\u3067 kubelet \u306e\u8a8d\u8a3c\u8a2d\u5b9a\u306f `/etc/kubernetes/node-kubeconfig.yaml` \u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```yaml\napiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\nusers:\n- name: kubelet\n  user:\n    client-certificate: /etc/kubernetes/ssl/node.pem\n    client-key: /etc/kubernetes/ssl/node-key.pem\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: kubelet-cluster.local\ncurrent-context: kubelet-cluster.local\n```\n\n\u3053\u306e\u8a3c\u660e\u66f8\u306e CN \u304c kube-node \u3067\u3059\u3002\u3053\u308c\u306b\u3088\u308a kubelet \u306f API Server \u3078\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n```console\n# openssl x509 -in /etc/kubernetes/ssl/node.pem -subject -noout\nsubject= /CN=kube-node\n```\n\nkube-proxy \u3082\u540c\u3058 `node-kubeconfig.yaml` \u3092\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u3002\n(Master \u3068\u3057\u3066 `kubespray` \u3067\u69cb\u6210\u3057\u305f\u30db\u30b9\u30c8\u306f localhost \u306e insecure port \u3092\u53c2\u7167\u3057\u307e\u3059\u304c\u3001Master \u306e\u6a5f\u80fd\u3092\u6301\u305f\u306a\u3044\u3088\u3046 `kubespray` \u3067\u69cb\u6210\u3057\u305f\u30db\u30b9\u30c8\u306f Master \u306b\u3057\u305f\u30db\u30b9\u30c8\u306e secure port \u3092\u53c2\u7167\u3057\u307e\u3059\u3002)\nkubedns \u3082\u8a2d\u5b9a\u306f\u82e5\u5e72\u7570\u306a\u308a\u307e\u3059\u304c\u3001\u540c\u3058\u8a3c\u660e\u66f8\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a8d\u8a3c\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306f nonResourcePath \u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5168\u3066\u306e\u30e6\u30fc\u30b6\u306b\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\nkubectl \u3092\u53e9\u304f\u969b\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\n```json\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"*\", \"readonly\": true, \"nonResourcePath\": \"*\"}}\n```\n\n\u4ee5\u4e0b\u306f root \u30e6\u30fc\u30b6\u306b\u5168\u3066\u306e Namespace \u53ca\u3073\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\u3053\u306e\u74b0\u5883\u3067\u306f\u5f8c\u8ff0\u3059\u308b RBAC \u306e\u30b9\u30fc\u30d1\u30fc\u30e6\u30fc\u30b6\u3068\u3057\u3066\u3082 root \u30e6\u30fc\u30b6\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```json\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"root\", \"namespace\": \"*\", \"resource\": \"*\", \"apiGroup\": \"*\"}}\n```\n\n\u4ee5\u4e0b\u306f kube \u30e6\u30fc\u30b6\u306b\u9650\u5b9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\ntest Namespace \u306b\u304a\u3044\u3066 Service \u306e\u8aad\u307f\u53d6\u308a\u3068 Pod \u306e\u8aad\u307f\u66f8\u304d\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```json\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube\", \"namespace\": \"test\", \"resource\": \"services\", \"apiGroup\": \"*\", \"readonly\": true}}\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kube\", \"namespace\": \"test\", \"resource\": \"pods\", \"apiGroup\": \"*\"}}\n```\n\n\u4ee5\u4e0b\u306f test Namespace \u306e default \u3068\u3044\u3046 ServiceAccount \u306b test Namespace \u306e\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u8aad\u307f\u53d6\u308a\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3082\u306e\u3067\u3059\u3002\nServiceAccount \u306e\u8a2d\u5b9a\u3092\u66f8\u304f\u5834\u5408\u306f `system:serviceaccount:<namespace>:<serviceaccountname>` \u3068\u3044\u3046\u5f62\u5f0f\u306e\u30e6\u30fc\u30b6\u540d\u306b\u3057\u307e\u3059\u3002\n\n```json\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"system:serviceaccount:test:default\", \"namespace\": \"test\", \"resource\": \"*\", \"apiGroup\": \"*\", \"readonly\": true}}\n```\n\ndefault \u3068\u3044\u3046 ServiceAccount \u306f test Namespace \u3092\u4f5c\u6210\u3057\u305f\u969b\u306b\u81ea\u52d5\u7684\u306b\u4f5c\u3089\u308c\u305f\u3082\u306e\u3067\u3059\u3002\n\n```console\n# kubectl --namespace=test get sa\nNAME      SECRETS   AGE\ndefault   1         15m\n# kubectl --namespace=test get secret\nNAME                  TYPE                                  DATA      AGE\ndefault-token-a9aii   kubernetes.io/service-account-token   3         15m\n```\n\n## ABAC \u52d5\u4f5c\u30c6\u30b9\u30c8\n\n\u8a2d\u5b9a\u3057\u305f\u901a\u308a\u306b\u5236\u5fa1\u3055\u308c\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\nkubectl \u306e\u8a8d\u8a3c\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001insecure port \u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u304c\u5fc5\u8981\u306a\u3044 (\u5e38\u306b\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3055\u308c\u308b) \u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\nAuthorization Plugin \u306e\u52d5\u4f5c\u30c6\u30b9\u30c8\u3092\u3059\u308b\u306b\u306f\u3001kubectl \u3067\u306e\u30a2\u30af\u30bb\u30b9\u3092 secure port \u306e\u65b9\u306b\u5411\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n(kubectl \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f http://locahost:8080/ \u5b9b\u3066\u306b\u306a\u3063\u3066\u3044\u307e\u3059)\n\n```console\n## \u8a8d\u8a3c\u3042\u308a\u306b\u3057\u305f\u3044\u5834\u5408\u306f secure port \u306b\u5411\u3051\u308b\n# kubectl config set-cluster kubespray-secure --server=https://kubernetes.default.svc.cluster.local/ --certificate-authority=/root/.kube/ca.pem\n# cp /etc/kubernetes/ssl/ca.pem /root/.kube/\n\n## root \u30e6\u30fc\u30b6\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\n# kubectl config set-credentials root --username=root --password=changeme\n# kubectl config set-context kubespray-root --cluster=kubespray-secure --user=root\n\n## kube \u30e6\u30fc\u30b6\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\n# kubectl config set-credentials kube --username=kube --password=changeme\n# kubectl config set-context kubespray-kube --cluster=kubespray-secure --user=kube\n\n## insecure port \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\n# kubectl config set-cluster kubespray-insecure --server=http://localhost:8080/\n# kubectl config set-context insecure --cluster=kubespray-insecure --user=\"\"\n\n## test Namespace \u306e default ServiceAccount \u306b\u95a2\u3059\u308b\u8a2d\u5b9a\n# yum install -y jq\n# kubectl config set-credentials test-default-sa \\\n--token=$(kubectl --namespace=test get secret \\\n $(kubectl --namespace=test get sa default -o json | \\\njq -r .secrets[0].name) -o json | jq -r .data.token | base64 -d)\n# kubectl config set-context kubespray-test-default-sa --cluster=kubespray-secure --user=test-default-sa\n```\n\n4\u3064\u306e context \u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u3089\u306f use-context \u306b\u3088\u3063\u3066\u5207\u308a\u66ff\u3048\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```console:/root/.kube/config\u306e\u78ba\u8a8d\n# kubectl config view\napiVersion: v1\nclusters:\n- cluster:\n    server: http://localhost:8080/\n  name: kubespray-insecure\n- cluster:\n    certificate-authority: ca.pem\n    server: https://kubernetes.default.svc.cluster.local/\n  name: kubespray-secure\ncontexts:\n- context:\n    cluster: kubespray-insecure\n    user: \"\"\n  name: insecure\n- context:\n    cluster: kubespray-secure\n    user: kube\n  name: kubespray-kube\n- context:\n    cluster: kubespray-secure\n    user: root\n  name: kubespray-root\n- context:\n    cluster: kubespray-secure\n    user: test-default-sa\n  name: kubespray-test-default-sa\ncurrent-context: \"\"\nkind: Config\npreferences: {}\nusers:\n- name: kube\n  user:\n    password: changeme\n    username: kube\n- name: root\n  user:\n    password: changeme\n    username: root\n- name: test-default-sa\n  user:\n    token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0ZXN0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tYTlhaWkiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjgxNzY2MGJhLTVmZGItMTFlNi05NzJlLTAwMGMyOTJlZWMzNyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDp0ZXN0OmRlZmF1bHQifQ.5N_TDpepXRL3yf_vslVoU0b76VcE2FqXToGbIBIZH-o5Fxqn-yuzXQ16JRdZaAKpFQHX1vG8xnHqRsrt3xrM228zuF6h6vZjephsLqPYNdy3dHhc62ZhhiI_RWzcb6uMYlAxT4YwfGWL-DikSuZtH5YJiASreo17Uf4Xy2_6WeRPzweLG4GHDHvdmTV5Llz-nRqcIC6CaYvDpxoShTx4DdbG9PkH7txnhHGGxZj-7qC_vThaN0APrJrWTeRPyu2oFy78vioAbB5mPHo9XNZ7hjWKtzUwzy26wFDgzdCUyzRmRaGKnTe1DQLQRoR5iw5byfaaM8tsHGtbPWsk8Dw3mA\n```\n\n\u307e\u305a\u306f root \u30e6\u30fc\u30b6\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002 \n\n```console\n# kubectl config use-context kubespray-root\n# kubectl config current-context\nkubespray-root\n\n# kubectl get secret --all-namespaces\nNAMESPACE     NAME                  TYPE                                  DATA      AGE\ndefault       default-token-vxtr6   kubernetes.io/service-account-token   3         31m\nkube-system   default-token-gh3tp   kubernetes.io/service-account-token   3         31m\ntest          default-token-a9aii   kubernetes.io/service-account-token   3         18m\n```\n\n\u5168\u3066\u3092\u8a66\u3059\u306e\u306f\u9762\u5012\u306a\u306e\u3067 secret \u3060\u3051\u3067\u3059\u304c\u3001\u5168\u3066\u306e Namespace \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3057\u305f\u3002\u540c\u69d8\u306b Service \u3084 Pod \u3082\u554f\u984c\u306a\u304f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\nkube \u30e6\u30fc\u30b6\u306e\u5834\u5408\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\u5207\u308a\u66ff\u3048\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```console\n# kubectl config use-context kubespray-kube\n# kubectl config current-context\nkubespray-kube\n\n## kube-system Namespace \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=kube-system get pod\nthe server does not allow access to the requested resource (get pods)\n\n## test Namespace \u306a\u3089\u30ea\u30bd\u30fc\u30b9\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b (\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u672a\u4f5c\u6210\u306a\u306e\u3067\u7121\u3044)\n# kubectl --namespace=test get pod\n# kubectl --namespace=test get svc\n# kubectl --namespace=test get secret\nthe server does not allow access to the requested resource (get secrets)\n\n## test Namespace \u3067 Pod \u3092\u4f5c\u308c\u308b\u304c Service \u306f\u4f5c\u308c\u306a\u3044\n# kubectl --namespace=test run test -l foo=bar --image=nginx:alpine --restart=Never\npod \"test\" created\n# kubectl --namespace=test get pod\nNAME      READY     STATUS    RESTARTS   AGE\ntest      1/1       Running   0          11s\n# kubectl --namespace=test expose pod test --port=80 --target-port=80\nError from server: the server does not allow access to the requested resource (post services)\n```\n\ntest Namespace \u306e default \u3068\u3044\u3046 ServiceAccount \u3082\u8a66\u3057\u307e\u3059\u3002\n\n```console\n# kubectl config use-context kubespray-test-default-sa\n# kubectl config current-context\nkubespray-test-default-sa\n\n## kube-system Namespace \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=kube-system get pod\nthe server does not allow access to the requested resource (get pods)\n\n## test Namespace \u306a\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304c\u3001readonly \u3067 Pod \u3092\u4f5c\u308c\u306a\u3044\n# kubectl --namespace=test get pod\nNAME      READY     STATUS    RESTARTS   AGE\ntest      1/1       Running   0          1m\n# kubectl --namespace=test get svc\n# kubectl --namespace=test get secret\nNAME                  TYPE                                  DATA      AGE\ndefault-token-a9aii   kubernetes.io/service-account-token   3         20m\n# kubectl --namespace=test run test2 -l foo=baz --image=nginx:alpine --restart=Never\nError from server: the server does not allow access to the requested resource (post pods)\n```\n\ninsecure port \u3092\u4f7f\u3063\u3066\u5236\u9650\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3064\u3044\u3067\u306b\u3001\u4f5c\u6210\u3057\u305f Pod \u3092\u524a\u9664\u3057\u307e\u3059\u3002\n\n```console\n# kubectl config use-context insecure\n# kubectl config current-context\ninsecure\n\n# kubectl --namespace=test delete pod test\npod \"test\" deleted\n```\n\n\n# RBAC\n\nRBAC \u3067\u306f ABAC \u3088\u308a\u7d30\u304b\u3044\u5236\u5fa1\u304c\u53ef\u80fd\u3067\u3059\u3002\nRBAC \u306f\u307e\u3060\u30a2\u30eb\u30d5\u30a1\u7248\u306a\u306e\u3067\u3001\u672c\u756a\u904b\u7528\u3059\u308b\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## RBAC \u8a2d\u5b9a\u4f5c\u6210\n\nRBAC \u306e\u8a2d\u5b9a\u306b\u306f\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n- RBAC \u306e\u30b9\u30fc\u30d1\u30fc\u30e6\u30fc\u30b6\n- \u7279\u5b9a\u306e Namespace \u306b\u306e\u307f\u52b9\u679c\u304c\u53ca\u3076 `Role`, `RoleBinding`\n- \u30af\u30e9\u30b9\u30bf\u5168\u4f53\u306b\u52b9\u679c\u304c\u53ca\u3076 `ClusterRole`, `ClusterRoleBinding`\n\n`Role`, `ClusterRole` \u3067\u6a29\u9650\u30bb\u30c3\u30c8\u3092\u5b9a\u7fa9\u3057\u3001`RoleBidnnig`, `ClusterRoleBinding` \u3067\u3069\u306e\u30e6\u30fc\u30b6\u307e\u305f\u306f ServiceAccount \u306b\u9069\u7528\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\n`ClusterRole` \u3092 `RoleBinding` \u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u52b9\u679c\u304c Namespace \u5185\u306b\u9650\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u30af\u30e9\u30b9\u30bf\u5168\u4f53\u306b\u52b9\u679c\u304c\u53ca\u3076\u306e\u306f `ClusterRole` \u3092 `ClusterRoleBinding` \u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306e\u307f\u3067\u3059\u3002\n\n1\u7a2e\u985e\u3060\u3051\u4f5c\u3063\u3066\u8a66\u3057\u307e\u3059\u3002\n\nABAC \u306e\u3088\u3046\u306a readonly \u30d5\u30e9\u30b0\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u305d\u308c\u305e\u308c\u306e\u64cd\u4f5c\u3092\u7d30\u304b\u304f\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u306f Deployment \u3084 Service \u306e\u4f5c\u6210\u30fb\u66f4\u65b0\u3092\u884c\u3046\u3088\u3046\u306a\u30e6\u30fc\u30b6\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002`kube` \u30e6\u30fc\u30b6\u3068 `test Namespace \u306e default` ServiceAccount \u3092\u307e\u3068\u3081\u3066\u540c\u3058 role \u306b bind \u3057\u307e\u3059\u3002\n\n```yaml:user-role.yaml\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1alpha1\nmetadata:\n  # \"namespace\" omitted since ClusterRoles are not namespaced.\n  #namespace: default\n  name: normal-user\nrules:\n  - apiGroups: [\"\"] # The API group \"\" indicates the default API Group.\n    resources: [\"pods\"]\n    verbs: [\"get\", \"list\", \"create\", \"update\", \"watch\", \"delete\", \"deletecollection\"]\n    nonResourceURLs: []\n\n  - apiGroups: [\"\"] # The API group \"\" indicates the default API Group.\n    resources: [\"endpoints\", \"events\", \"services\"]\n    verbs: [\"get\", \"list\", \"create\", \"update\", \"delete\", \"watch\" ]\n    nonResourceURLs: [\"\"]\n\n  - apiGroups: [\"extensions\"] # The API group \"\" indicates the default API Group.\n    resources: [\"replicasets\", \"deployments\"]\n    verbs: [\"get\", \"list\", \"create\", \"update\", \"watch\", \"delete\", \"deletecollection\", \"patch\"]\n    nonResourceURLs: []\n```\n\n```yaml:user-bind.yaml\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1alpha1\nmetadata:\n  name: test-normal-users\n  namespace: test\nsubjects:\n  - kind: ServiceAccount\n    name: default\n    namespace: test\n  - kind: User\n    name: kube\nroleRef:\n  kind: ClusterRole\n  name: normal-user\n  apiVersion: rbac.authorization.k8s.io/v1alpha1\n```\n\nRBAC \u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u306b\u306f RBAC \u306e\u30b9\u30fc\u30d1\u30fc\u30e6\u30fc\u30b6 (\u3053\u3053\u3067\u306f root) \u306b\u306a\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067 context \u3092\u5207\u308a\u66ff\u3048\u3066\u304b\u3089\u8a2d\u5b9a\u3092\u6295\u5165\u3057\u307e\u3059\u3002\n\n```console:ClusterRole,RoleBinding\u4f5c\u6210\u30fb\u78ba\u8a8d\n# kubectl config use-context kubespray-root\n# kubectl config current-context\nkubespray-root\n\n# kubectl create -f user-role.yaml\nclusterrole \"normal-user\" created\n# kubectl create -f user-bind.yaml\nrolebinding \"test-normal-users\" created\n\n# kubectl get clusterroles\nNAME          AGE\nnormal-user   6s\n# kubectl --namespace=test get rolebindings\nNAME                AGE\ntest-normal-users   23s\n```\n\n\n## RBAC \u52d5\u4f5c\u30c6\u30b9\u30c8\n\n\u4f5c\u6210\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c6\u30b9\u30c8\u3092\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f `kube` \u30e6\u30fc\u30b6\u304c `normal-user` \u30ed\u30fc\u30eb\u306e\u6a29\u9650\u3092\u6301\u3064\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```console\n# kubectl config use-context kubespray-kube\n# kubectl config current-context\nkubespray-kube\n\n## test Namespace \u3067 bind \u3057\u3066\u3044\u308b\u306e\u3067 kube-system Namespace \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=kube-system get pod\nthe server does not allow access to the requested resource (get pods)\n\n## test Namespace \u306a\u3089 Deployment, ReplicaSet, Pod \u304c\u4f5c\u308c\u308b\n# kubectl --namespace=test run test -l foo=bar --image=nginx:1.10.1-alpine\ndeployment \"test\" created\n# kubectl --namespace=test get deployment\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ntest      1         1         1            0           8s\n# kubectl --namespace=test get rs\nNAME              DESIRED   CURRENT   AGE\ntest-2066847110   1         1         9s\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-wk5ze   1/1       Running   0          28s       10.233.120.3   node3\n\n## Service \u3082\u4f5c\u308c\u308b\n# kubectl --namespace=test expose deployment/test --port=80 --target-port=80\nservice \"test\" exposed\n# kubectl --namespace=test get svc\nNAME      CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\ntest      10.233.32.165   <none>        80/TCP    6s\n# kubectl --namespace=test get ep\nNAME      ENDPOINTS         AGE\ntest      10.233.120.3:80   12s\n\n## test Namespace \u3067\u3082 serviceaccount \u3084 secret \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=test get sa\nthe server does not allow access to the requested resource (get serviceaccounts)\n# kubectl --namespace=test get secret\nthe server does not allow access to the requested resource (get secrets)\n```\n\n\n\u7d9a\u3044\u3066 `test Namespace` \u306e `default` ServiceAccount \u3082\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```console\n# kubectl config use-context kubespray-test-default-sa\n# kubectl config current-context\nkubespray-test-default-sa\n\n## test Namespace \u3067 bind \u3057\u3066\u3044\u308b\u306e\u3067 kube-system Namespace \u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\n# kubectl --namespace=kube-system get pod\nthe server does not allow access to the requested resource (get pods)\n\n## test Namespace \u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8aad\u307f\u53d6\u308c\u308b\n# kubectl --namespace=test get deployment\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ntest      1         1         1            1           1m\n# kubectl --namespace=test get rs\nNAME              DESIRED   CURRENT   AGE\ntest-2066847110   1         1         1m\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-wk5ze   1/1       Running   0          1m        10.233.120.3   node3\n\n## test Namespace \u306a\u3089 Deployment, ReplicaSet, Pod \u306e\u5909\u66f4\u304c\u3067\u304d\u308b\n# kubectl --namespace=test scale --replicas=2 deployment/test\ndeployment \"test\" scaled\n# kubectl --namespace=test get deployment\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ntest      2         2         2            1           2m\n# kubectl --namespace=test get rs\nNAME              DESIRED   CURRENT   AGE\ntest-2066847110   2         2         2m\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-bcenk   1/1       Running   0          21s       10.233.82.3    node1\ntest-2066847110-wk5ze   1/1       Running   0          3m        10.233.120.3   node3\n# kubectl --namespace=test get svc\nNAME      CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\ntest      10.233.32.165   <none>        80/TCP    2m\n# kubectl --namespace=test get ep\nNAME      ENDPOINTS                        AGE\ntest      10.233.120.3:80,10.233.82.3:80   2m\n\n## test Namespace \u3067 serviceaccount \u3084 secret \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n# kubectl --namespace=test get sa\nNAME      SECRETS   AGE\ndefault   1         28m\n# kubectl --namespace=test get secret\nNAME                  TYPE                                  DATA      AGE\ndefault-token-a9aii   kubernetes.io/service-account-token   3         28m\n\n## serviceaccount \u306e\u4f5c\u6210\u306f\u3067\u304d\u306a\u3044\n# kubectl --namespace=test create sa hoge\nError from server: the server does not allow access to the requested resource (post serviceaccounts)\n```\n\nSecret \u3078\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u3053\u3068\u3092\u4e0d\u5be9\u306b\u601d\u3063\u305f\u65b9\u3082\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n`kube` \u30e6\u30fc\u30b6\u304c `ServiceAccount`, `Secret` \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u306e\u306b\u3001\u540c\u3058 `ClusterRole` \u3067\u3042\u308b `test Namespace \u306e default` ServiceAccount \u306f\u4f55\u6545\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\n[API Server \u306e\u8a2d\u5b9a](#api-server-\u306e\u8a2d\u5b9a) \u3067\u3082\u89e6\u308c\u305f\u3088\u3046\u306b\u3001`ABAC` \u53ca\u3073 `RBAC` \u304c\u4e21\u65b9\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u3069\u3061\u3089\u304b\u4e00\u65b9\u3067\u8a8d\u53ef\u3055\u308c\u308c\u3070\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n`test Namespace \u306e default` ServiceAccount \u306f `ABAC` \u306e\u30dd\u30ea\u30b7\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a test Namespace \u306e\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u306e readonly \u306a\u30a2\u30af\u30bb\u30b9\u306f\u8a31\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u3002\n\n```json\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"system:serviceaccount:test:default\", \"namespace\": \"test\", \"resource\": \"*\", \"apiGroup\": \"*\", \"readonly\": true}}\n```\n\n\u6700\u5f8c\u306b role \u3092\u524a\u9664\u3057\u3066\u3082\u3046\u4e00\u5ea6\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n`ABAC` \u306e\u8a2d\u5b9a\u3067\u8a31\u3055\u308c\u3066\u3044\u308b\u64cd\u4f5c\u306e\u307f\u304c\u884c\u3048\u308b\u306f\u305a\u3067\u3059\u3002\n\n```console:ClusteRole,RoleBinding\u306e\u524a\u9664\n# kubectl config use-context kubespray-root\n# kubectl config current-context\nkubespray-root\n\n# kubectl delete -f user-role.yaml\nclusterrole \"normal-user\" deleted\n# kubectl delete -f user-bind.yaml\nrolebinding \"test-normal-users\" deleted\n\n## \u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\n# kubectl get clusterroles\n# kubectl --namespace=test get rolebindings\n```\n\n```console:\u30a2\u30af\u30bb\u30b9\u30c1\u30a7\u30c3\u30af\n## kube \u30e6\u30fc\u30b6\u306e\u78ba\u8a8d\n# kubectl config use-context kubespray-kube\n# kubectl config current-context\nkubespray-kube\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-bcenk   1/1       Running   0          2m        10.233.82.3    node1\ntest-2066847110-wk5ze   1/1       Running   0          5m        10.233.120.3   node3\n# kubectl --namespace=test get deployment\nthe server does not allow access to the requested resource (get deployments.extensions)\n# kubectl --namespace=test get rs\nthe server does not allow access to the requested resource (get replicasets.extensions)\n\n## default ServiceAccount \u306e\u78ba\u8a8d\n# kubectl config use-context kubespray-test-default-sa\n# kubectl config current-context\nkubespray-test-default-sa\n# kubectl --namespace=test get pod -o wide\nNAME                    READY     STATUS    RESTARTS   AGE       IP             NODE\ntest-2066847110-bcenk   1/1       Running   0          3m        10.233.82.3    node1\ntest-2066847110-wk5ze   1/1       Running   0          5m        10.233.120.3   node3\n# kubectl --namespace=test get deployment\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ntest      2         2         2            2           6m\n# kubectl --namespace=test get secret\nNAME                  TYPE                                  DATA      AGE\ndefault-token-a9aii   kubernetes.io/service-account-token   3         31m\n# kubectl --namespace=test run hoge -l foo=baz --image=nginx:alpine --restart=Never\nError from server: the server does not allow access to the requested resource (post pods)\n```\n\n", "tags": ["kubernetes"]}