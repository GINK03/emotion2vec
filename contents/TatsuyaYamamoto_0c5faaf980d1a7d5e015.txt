{"context": "\n\nSpring\u304a\u3058\u3055\u3093\u306b\u306a\u3089\u306a\u304f\u3066\u306f\n\u304a\u4ed5\u4e8b\u3067Spring\u3092\u4f7f\u3063\u3066\u3044\u304f\u98a8\u6f6e\u304c\u51fa\u3066\u304d\u305f\u306e\u3067\u3001\u8a2d\u5b9a\u3068\u304b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u304b\u3092\u3055\u3089\u3063\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\nSpring\u3068\u3044\u3048\u3070DI\u30b3\u30f3\u30c6\u30ca\uff01\u3089\u3057\u3044\u306e\u3067\u3001Controller\u30af\u30e9\u30b9\u304b\u3089Service\u30af\u30e9\u30b9\u3092DI\u3067\u547c\u3073\u51fa\u3057\u3066JSON\u3067\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u524d\u56de\u307e\u3067\nboot\u3057\u305f\n\n\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\n\nUserService.java\n@Service\n@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)\npublic class UserService {\n\n    public User getById(String id){\n        User user = new User();\n        user.setId(id);\n        return user;\n    }\n}\n\n\n\nuser.java\n// \u9069\u5f53\u306abean\npublic class User {\n    @Getter\n    @Setter\n    private String id;\n}\n\n\n\n\n@Service\n\n\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u3092\u5ba3\u8a00\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\n@Component\u3084\u3089@Reponsitory\u3084\u3089\u8272\u3005\u3042\u308b\u307f\u305f\u3044\u3060\u3051\u308c\u3069\u3001\u305d\u306e\u30af\u30e9\u30b9\u306e\u8aac\u660e\u7684\u306b\u4f7f\u3044\u5206\u3051\u308b\u3060\u3051\u3067\u5b9f\u614b\u306f\u3042\u307e\u308a\u5909\u308f\u3089\u306a\u3044\u3089\u3057\u3044\n\n\n\n@Scope\n\n\n@Service\u3001\u3001\u3068\u3044\u3046\u304bSpring\u306eDI\u306f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3089\u3057\u3044\nConfigurableBeanFactory\u30af\u30e9\u30b9\u304b\u3089\u5b9a\u6570\u3067scope\u3092\u6307\u5b9a\u3067\u304d\u308b\nprototype\n\n\nbean\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b\u6bce\u56denew\u3059\u308b\n\n\nrequest\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u6bce\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u3044\u56de\u3059\n\n\nsession\n\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u7bc4\u56f2\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u3044\u56de\u3059\n\n\n\n\n\n\n\u30b5\u30fc\u30d3\u30b9\u4f7f\u3046\u30af\u30e9\u30b9\n@RestController\n@RequestMapping(\"/api/users\")\npublic class UserRestController {\n\n    @Autowired\n    UserService userService;\n\n    @RequestMapping(\n            value = \"/\",\n            method = RequestMethod.GET,\n            produces = MediaType.APPLICATION_JSON_UTF8_VALUE)\n    public List<User> getUsers(){\n        List<User> users = new ArrayList();\n        users.add(userService.getById(\"minami kotori\"));\n        users.add(userService.getById(\"kita kotori\"));\n        users.add(userService.getById(\"higashi kotori\"));\n        users.add(userService.getById(\"nishi kotori\"));\n        return users;\n    }\n}\n\n\n\n@Autowired\n\n\n@Component(\u4eca\u56de\u306f@Service)\u304c\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30af\u30e9\u30b9\u7fa4\u306e\u4e2d\u304b\u3089\u3001\u578b\u4e00\u81f4\u3059\u308b\u3082\u306e\u3092\u81ea\u52d5\u3067\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u304f\u308c\u308b\ninterface\u3092\u7528\u610f\u3057\u3066\u3066DI\u306e\u5019\u88dc\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u3001@Component(\"hogehoge\")\u3067\u540d\u524d\u3092\u4ed8\u3051\u3066\u3001@Qualifier\u3067\u305d\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u308b\u307f\u305f\u3044\n\n\n\n\n\u3068\u308a\u3042\u3048\u305a\u5b9f\u884c\n$ gradle bootRun\n\n\n\u3084\u3063\u305f\u30fc\uff01\uff08\u30fb\uff18\u30fb\uff09\n\n\u304a\u307e\u3051\n\u30db\u30c3\u30c8\u30c7\u30d7\u30ed\u30a4\u306a\u308b\u3082\u306e\u304c\u51fa\u6765\u308b\u3089\u3057\u3044\u306e\u3067\u8a66\u3057\u3066\u307f\u305f\n\n\u4f9d\u5b58\u95a2\u4fc2\ncompile group: 'org.springframework', name: 'springloaded', version: '1.2.6.RELEASE'\n\n\n\u3067\u3076\u308d\u3044\uff01\n\u3042\u3068\u306fbootRun\u3057\u305f\u307e\u307e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3042\u3052\u308b\u3060\u3051\uff01\u7c21\u5358\u304b\u3088\uff01\n## Spring\u304a\u3058\u3055\u3093\u306b\u306a\u3089\u306a\u304f\u3066\u306f\n\n\u304a\u4ed5\u4e8b\u3067Spring\u3092\u4f7f\u3063\u3066\u3044\u304f\u98a8\u6f6e\u304c\u51fa\u3066\u304d\u305f\u306e\u3067\u3001\u8a2d\u5b9a\u3068\u304b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u304b\u3092\u3055\u3089\u3063\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nSpring\u3068\u3044\u3048\u3070DI\u30b3\u30f3\u30c6\u30ca\uff01\u3089\u3057\u3044\u306e\u3067\u3001Controller\u30af\u30e9\u30b9\u304b\u3089Service\u30af\u30e9\u30b9\u3092DI\u3067\u547c\u3073\u51fa\u3057\u3066JSON\u3067\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n## \u524d\u56de\u307e\u3067\n[boot\u3057\u305f](http://qiita.com/TatsuyaYamamoto/items/0ecbb1ed4c3cbfe41691)\n\n## \u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\n\n```UserService.java\n@Service\n@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)\npublic class UserService {\n\n    public User getById(String id){\n        User user = new User();\n        user.setId(id);\n        return user;\n    }\n}\n```\n\n``` user.java\n// \u9069\u5f53\u306abean\npublic class User {\n    @Getter\n    @Setter\n    private String id;\n}\n```\n\n- @Service\n    - \u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u3092\u5ba3\u8a00\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n    - @Component\u3084\u3089@Reponsitory\u3084\u3089\u8272\u3005\u3042\u308b\u307f\u305f\u3044\u3060\u3051\u308c\u3069\u3001\u305d\u306e\u30af\u30e9\u30b9\u306e\u8aac\u660e\u7684\u306b\u4f7f\u3044\u5206\u3051\u308b\u3060\u3051\u3067\u5b9f\u614b\u306f\u3042\u307e\u308a\u5909\u308f\u3089\u306a\u3044\u3089\u3057\u3044\n- @Scope\n    - @Service\u3001\u3001\u3068\u3044\u3046\u304bSpring\u306eDI\u306f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3089\u3057\u3044\n    - ConfigurableBeanFactory\u30af\u30e9\u30b9\u304b\u3089\u5b9a\u6570\u3067scope\u3092\u6307\u5b9a\u3067\u304d\u308b\n    - prototype\n        - bean\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b\u6bce\u56denew\u3059\u308b\n    - request\n        - \u30ea\u30af\u30a8\u30b9\u30c8\u6bce\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u3044\u56de\u3059\n    - session\n        - \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u7bc4\u56f2\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u3044\u56de\u3059\n\n\n\n\n## \u30b5\u30fc\u30d3\u30b9\u4f7f\u3046\u30af\u30e9\u30b9\n\n```\n@RestController\n@RequestMapping(\"/api/users\")\npublic class UserRestController {\n\n    @Autowired\n    UserService userService;\n\n    @RequestMapping(\n            value = \"/\",\n            method = RequestMethod.GET,\n            produces = MediaType.APPLICATION_JSON_UTF8_VALUE)\n    public List<User> getUsers(){\n        List<User> users = new ArrayList();\n        users.add(userService.getById(\"minami kotori\"));\n        users.add(userService.getById(\"kita kotori\"));\n        users.add(userService.getById(\"higashi kotori\"));\n        users.add(userService.getById(\"nishi kotori\"));\n        return users;\n    }\n}\n```\n\n- @Autowired\n    - @Component(\u4eca\u56de\u306f@Service)\u304c\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30af\u30e9\u30b9\u7fa4\u306e\u4e2d\u304b\u3089\u3001\u578b\u4e00\u81f4\u3059\u308b\u3082\u306e\u3092\u81ea\u52d5\u3067\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u304f\u308c\u308b\n    - interface\u3092\u7528\u610f\u3057\u3066\u3066DI\u306e\u5019\u88dc\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u3001@Component(\"hogehoge\")\u3067\u540d\u524d\u3092\u4ed8\u3051\u3066\u3001@Qualifier\u3067\u305d\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u308b\u307f\u305f\u3044\n\n## \u3068\u308a\u3042\u3048\u305a\u5b9f\u884c\n```bash\n$ gradle bootRun\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-07-16 11.17.47.png](https://qiita-image-store.s3.amazonaws.com/0/55826/61eeaa93-d873-6861-6a0c-db8bd9b7949e.png)\n\n\u3084\u3063\u305f\u30fc\uff01\uff08\u30fb\uff18\u30fb\uff09\n\n\n\n\n\n## \u304a\u307e\u3051\n\n\u30db\u30c3\u30c8\u30c7\u30d7\u30ed\u30a4\u306a\u308b\u3082\u306e\u304c\u51fa\u6765\u308b\u3089\u3057\u3044\u306e\u3067\u8a66\u3057\u3066\u307f\u305f\n\n\n### \u4f9d\u5b58\u95a2\u4fc2\n\n```\ncompile group: 'org.springframework', name: 'springloaded', version: '1.2.6.RELEASE'\n```\n### \u3067\u3076\u308d\u3044\uff01\n\n\u3042\u3068\u306fbootRun\u3057\u305f\u307e\u307e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3042\u3052\u308b\u3060\u3051\uff01\u7c21\u5358\u304b\u3088\uff01\n", "tags": ["Java", "spring"]}