{"context": " More than 1 year has passed since last update.C\u3067\u5b9f\u88c5\u3057\u305f\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\u578b\u6570\u72ec\u30bd\u30eb\u30d0\u30fc\u3092\u3001Emscripten\u3092\u4f7f\u3063\u3066JavaScript\u74b0\u5883\u3067\u5b9f\u884c\u3055\u305b\u308b\u3053\u3068\u304b\u3089\u3001Emscripten\u306e\u4ed5\u7d44\u307f\u3092\u8abf\u3079\u3066\u3044\u3063\u305f\u3001\u3068\u3044\u3046\u8a71\u3067\u3059\u3002\n\nEmscripten\u3068\u306f\nemscripten\u306f\u3001LLVM/Clang\u3092\u4f7f\u3063\u3066\u3001C\u3084C++\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d6\u30e9\u30a6\u30b6\u3084nodejs/iojs\u3068\u3044\u3063\u305fJavaScript\u74b0\u5883\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\nC/C++\u306e\u30bd\u30fc\u30b9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305fLLVM\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u5143\u306b\u3001JavaScript\u4e0a\u3067\u5b9f\u884c\u3055\u305b\u308b\u305f\u3081\u306e\u5909\u63db\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u305d\u308c\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u74b0\u5883\u306e\u90e8\u5206\u3068\u3001gcc\u3084make\u7b49\u3068\u4e92\u63db\u6027\u3092\u9ad8\u3081\u305femcc\u3084emmake\u306a\u3069\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u7fa4\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u524d\u8005\u306fnodejs\u306b\u3088\u3063\u3066\u3001\u5f8c\u8005\u306fpython\u306b\u3088\u3063\u3066\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nlibc\u7b49\u306eC/C++\u3067\u5229\u7528\u3059\u308b\u30e9\u30f3\u30bf\u30a4\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea(\u306e\u95a2\u6570)\u306f\u3001JavaScript\u5074\u3067\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30b3\u30f3\u30bd\u30fc\u30eb\u3078\u306e\u6a19\u6e96\u51fa\u529b\u3001SDL/OpenGL\u7b49\u306e\u63cf\u753b\u306a\u3069\u3092nodejs/iojs\u74b0\u5883\u3084\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u5b9f\u73fe\u3059\u308bJS\u5b9f\u88c5\u3001\u7b49\u304c\u3001emscripten\u306b\u306f\u6a19\u6e96\u6dfb\u4ed8\u3055\u308c\u3066\u3044\u307e\u3059(\u305f\u3068\u3048\u3070libc\u306e\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u5b9f\u88c5\u306f\u3001/usr/local/opt/emscripten/libexec/src/library.js\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059)\u3002\n\nEmscripten\u306e\u74b0\u5883\u8a2d\u5b9a\nOSX\u74b0\u5883\u3067\u306f\u3001homebrew\u306b\u3088\u3063\u3066emscripten\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f(brew install emscripten)\u3002\nemscripten\u3092\u5165\u308c\u308b\u3068\u3001emcc(gcc/clang\u4e92\u63db\u306e\u30b3\u30de\u30f3\u30c9)\u7b49\u306e\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\u521d\u56de\u306b\u305d\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u6642\u3001\u74b0\u5883\u304c\u8a2d\u5b9a\u3055\u308c\u305f~/.emscripten\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u3089\u308c\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001OSX\u3060\u3068\u73fe\u72b6\u306e\u30b7\u30b9\u30c6\u30e0\u6dfb\u4ed8\u306eclang\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u306a\u3069\u3001\u305d\u306e\u5185\u5bb9\u306f\u305f\u3060\u3057\u304f\u53cd\u6620\u3055\u308c\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u306a\u304a\u3057\u307e\u3059\u3002\n# ~/.emscripten\nEMSCRIPTEN_ROOT = os.path.expanduser(\n    os.getenv('EMSCRIPTEN') or \n    '/usr/local/opt/emscripten/libexec')\nLLVM_ROOT = os.path.expanduser(\n    os.getenv('LLVM') or \n    '/usr/local/opt/emscripten/libexec/llvm/bin')\n\nNODE_JS = os.path.expanduser(\n    os.getenv('NODE') or \n    '/usr/local/opt/node/bin/node')\n\nTMP_DIR = '/tmp'\nCOMPILER_ENGINE = NODE_JS\nJS_ENGINES = [NODE_JS]\n\n\u3053\u306e\u3088\u3046\u306bhomebrew\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u3082\u3092\u6307\u5b9a\u3057\u3066\u304a\u3051\u304f\u3053\u3068\u3067\u3001homebrew\u306eupgrade\u306b\u3088\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308bemscripten\u3084nodejs\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u3066\u3082\u3001\u6bce\u56de\u306e\u518d\u8a2d\u5b9a\u305b\u305a\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u8a2d\u5b9a\u3067emcc\u30b3\u30de\u30f3\u30c9\u3092\u7a7a\u5b9f\u884c\u3059\u308b\u3068\u3001\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u3066\u3044\u308c\u3070\u4ee5\u4e0b\u306e\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n$ emcc\nWARNING  root: (Emscripten: settings file has changed, clearing cache)\nINFO     root: (Emscripten: Running sanity checks)\nWARNING  root: no input files\n\n\nC\u8a00\u8a9e(C11)\u3067\u6570\u72ec\u30bd\u30eb\u30d0\u30fc\u3092\u66f8\u304f\n\u306f\u3058\u3081\u306bC11\u4ed5\u69d8\u3067\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\u578b\u306e9x9\u30de\u30b9\u306e\u6570\u72ec\u30bd\u30eb\u30d0\u30fc\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\u3042\u3068\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3051\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u3001\u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u90e8\u5206\u3068main\u90e8\u5206\u3068\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\n// libsudoku.c\n#include <stdio.h>\n\n// helpers for board data\nstatic inline unsigned masks(unsigned i) {return i ? 1 << (i - 1) : 0;}\nstatic inline unsigned row(unsigned i) {return i / 9;}\nstatic inline unsigned col(unsigned i) {return i % 9;}\nstatic inline unsigned blk(unsigned i) {return i / 27 * 3 + i % 9 / 3;}\nextern void output(unsigned board[])\n{\n  char buffer[(9 + 3) * (9 + 3)];\n  char* cur = buffer;\n  for (unsigned y = 0; y < 9; y++) {\n    for (unsigned x = 0; x < 9; x++) {\n      *cur++ = board[y * 9 + x] > 0 ? board[y * 9 + x] + '0' : '.';\n      if (x % 3 == 2) *cur++ = x == 8 ? '\\n' : '|';\n    }\n    if (y == 8) {\n      *cur++ = '\\0';\n    } else if (y % 3 == 2) {\n      for (unsigned i = 0; i < 11; i++) *cur++ = i % 4 == 3 ? '+' : '-';\n      *cur++ = '\\n';\n    }\n  }\n  puts(buffer);\n}\n\n// sudoku solver\ntypedef void (*sudoku_cb)(unsigned board[]);\ntypedef struct {\n  unsigned board[81];\n  unsigned rows[9], cols[9], blks[9];\n  sudoku_cb callback;\n} sudoku_t;\n\nstatic void sudoku_init(sudoku_t* s, unsigned board[])\n{\n  for (unsigned i = 0; i < 81; i++) {\n    const unsigned mask = masks(board[i]);\n    s->rows[row(i)] |= mask, s->cols[col(i)] |= mask, s->blks[blk(i)] |= mask;\n    s->board[i] = board[i];\n  }\n}\n\nstatic void sudoku_solve(sudoku_t* s, unsigned i)\n{\n  if (i == 81) {\n    s->callback(s->board);\n  } else if (s->board[i] != 0) {\n    sudoku_solve(s, i + 1);\n  } else {\n    const unsigned r = row(i), c = col(i), b = blk(i);\n    const unsigned used = s->rows[r] | s->cols[c] | s->blks[b];\n    for (unsigned v = 1; v <= 9; v++) {\n      const unsigned mask = masks(v);\n      if (used & mask) continue;\n      s->board[i] = v;\n      s->rows[r] |= mask, s->cols[c] |= mask, s->blks[b] |= mask;\n      sudoku_solve(s, i + 1);\n      s->rows[r] &= ~mask, s->cols[c] &= ~mask, s->blks[b] &= ~mask;\n      s->board[i] = 0;\n    }\n  }\n}\n\nextern void sudoku(unsigned board[], sudoku_cb callback)\n{\n  sudoku_t s = {\n    .board = {0}, .rows = {0}, .cols = {0}, .blks = {0}, .callback = callback};\n  sudoku_init(&s, board);\n  sudoku_solve(&s, 0);\n}\n\n// sudoku-main.c\n\n#include <stdio.h>\n\nextern void output(unsigned board[]);\ntypedef void (*sudoku_cb)(unsigned board[]);\nextern void sudoku(unsigned board[], sudoku_cb callback);\n\n// example problem from http://rosettacode.org/wiki/Sudoku\nstatic unsigned problem[] = {\n  8, 5, 0, 0, 0, 2, 4, 0, 0,\n  7, 2, 0, 0, 0, 0, 0, 0, 9,\n  0, 0, 4, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 1, 0, 7, 0, 0, 2,\n  3, 0, 5, 0, 0, 0, 9, 0, 0,\n  0, 4, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 8, 0, 0, 7, 0,\n  0, 1, 7, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 3, 6, 0, 4, 0\n};\n\nextern int main(int argc, char* argv[])\n{\n  if (argc <= 1) {\n    puts(\"[problem]\");\n    output(problem);\n    puts(\"[solutions]\");\n    sudoku(problem, output);\n  } else {\n    for (int i = 1; i < argc; i++) {\n      char ch = -1;\n      for (int c = 0; c < 81; c++) {\n        if (ch == '\\0') {\n          problem[c] = 0;\n        } else {\n          ch = argv[i][c];\n          problem[c] = '0' <= ch && ch <= '9' ? ch - '0' : 0;\n        }\n      }\n      puts(\"[problem]\");\n      output(problem);\n      puts(\"[solution]\");\n      sudoku(problem, output);\n    }\n  }\n  return 0;\n}\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bgcc/clang\u3067\u666e\u901a\u306b\u30b3\u30f3\u30d1\u30a4\u30eb/\u5b9f\u884c\u53ef\u80fd\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n$ clang -std=c11 -Wall -Wextra libsudoku.c sudoku-main.c -o sudoku\n$ ./sudoku \n[problem]\n85.|..2|4..\n72.|...|..9\n..4|...|...\n---+---+---\n...|1.7|..2\n3.5|...|9..\n.4.|...|...\n---+---+---\n...|.8.|.7.\n.17|...|...\n...|.36|.4.\n\n[solutions]\n859|612|437\n723|854|169\n164|379|528\n---+---+---\n986|147|352\n375|268|914\n241|593|786\n---+---+---\n432|981|675\n617|425|893\n598|736|241\n\n\n\nEmscripten\u3067C\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3001iojs\u3067\u5b9f\u884c\u3059\u308b\n\u4e0a\u8a18\u30d3\u30eb\u30c9\u3067\u306eclang\u306e\u90e8\u5206\u3092emcc\u306b\u5909\u3048\u3001\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306b.js\u3092\u3064\u3051\u308b\u3060\u3051\u3067JavaScript\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3059\u3002\n\u751f\u6210\u3055\u308c\u305fjs\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u305d\u308c\u5358\u4f53\u3067nodejs/iojs\u4e0a\u3067\u5b9f\u884c\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n$ emcc -std=c11 -Wall -Wextra libsudoku.c sudoku-main.c -o sudoku.js\n$ iojs sudoku.js \n[problem]\n85.|..2|4..\n72.|...|..9\n..4|...|...\n---+---+---\n...|1.7|..2\n3.5|...|9..\n.4.|...|...\n---+---+---\n...|.8.|.7.\n.17|...|...\n...|.36|.4.\n\n[solutions]\n859|612|437\n723|854|169\n164|379|528\n---+---+---\n986|147|352\n375|268|914\n241|593|786\n---+---+---\n432|981|675\n617|425|893\n598|736|241\n\n\n\n\nEmscripten\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u95a2\u6570\u3092\u3001JavaScript\u30b3\u30fc\u30c9\u304b\u3089\u547c\u3073\u51fa\u3059\nEmscripten\u3067\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306f\u3001(CoffeeScript\u7b49\u306e\u30c8\u30e9\u30f3\u30b9\u30ec\u30fc\u30bf\u306e\u3088\u3046\u306a)\u666e\u901a\u306eJavaScript\u95a2\u6570\u3068\u3057\u3066\u4f7f\u3048\u308bJS\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u751f\u6210\u3055\u308c\u308b\u306e\u306f\u3001(C\u8a00\u8a9e\u5b9f\u884c\u30e2\u30c7\u30eb\u3092\u524d\u63d0\u3068\u3059\u308b)LLVM\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3068\u305d\u306e\u5b9f\u884c\u74b0\u5883\u304c\u5408\u308f\u3055\u3063\u305f\u3082\u306e\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001HEAP\u306e\u3088\u3046\u306a\u5b9a\u91cf\u306e\u30e1\u30e2\u30ea\u9818\u57df\u306e\u7ba1\u7406\u6a5f\u69cb\u304cJS\u30b3\u30fc\u30c9\u4e2d\u306b\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u751f\u6210\u3059\u308b\u306e\u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u3063\u3066\u3082\u540c\u3058\u3067\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3082\u3064extern\u306a\u95a2\u6570\u3068\u3044\u3046\u306e\u306f\u3001\u3042\u304f\u307e\u3067C\u306e\u95a2\u6570\u3068\u3057\u3066\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306b\u7d44\u307f\u8fbc\u3093\u3060\u5b9f\u884c\u74b0\u5883\u4e0a\u3067\u5b9f\u884c\u3055\u305b\u308b\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081Emscripten\u3067\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u3001JavaScript\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u4f7f\u3046\u306b\u306f\u3001\u6240\u3005\u3067\u5c11\u3057\u5de5\u592b\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u3001Interacting with code\u306b\u306f\u3001\u3053\u306e\u305f\u3081\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306f\u8a18\u8ff0\u3057\u3066\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u3089\u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306eC\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u74b0\u5883\u3078\u306e\u30a2\u30af\u30bb\u30b9\u624b\u6bb5\u3067\u3042\u308b\u3001\u3068\u3044\u3046\u5927\u672c\u306e\u9055\u3044\u3092\u8a8d\u8b58\u3057\u3066\u3044\u306a\u3044\u3068\u30cf\u30de\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\nnodejs/iojs\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\nlibsudoku.c\u304b\u3089nodejs/iojs\u4e0a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u4f7f\u3046libsudoku.js\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4ed8\u5c5e\u306e\u30aa\u30d7\u30b7\u30e7\u30f3-s EXPORTED_FUNCTIONS\u3068-s RESERVED_FUNCTION_POINTERS\u306e\uff12\u3064\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n$ emcc -Wall -Wextra -std=c11 libsudoku.c -o libsudoku.js \\\n      -s EXPORTED_FUNCTIONS=\"['_sudoku','_output']\" \\\n      -s RESERVED_FUNCTION_POINTERS=20\n\n\u524d\u8005\u306eEXPORTED_FUNCTIONS\u3067\u306f\u3001JavaScript\u5074\u3067\u547c\u3073\u51fa\u3059\u305f\u3081\u306b\u3001C\u3067\u306eextern\u306a\u95a2\u6570\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001C\u306e\u95a2\u6570\u540d\u305d\u306e\u307e\u307e\u3067\u306f\u306a\u304f\u3001\u982d\u306b_\u3092\u3064\u3051\u305f\u540d\u524d\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n\u5f8c\u8005\u306eRESERVED_FUNCTION_POINTERS\u306f\u3001sudoku(board, callback)\u95a2\u6570\u306e\u3088\u3046\u306a\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3059\u95a2\u6570\u3092JavaScript\u5074\u304b\u3089\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b\u3068\u304d\u306b\u5fc5\u8981\u306a\u5909\u6570\u3067\u3059\u3002\u3053\u3053\u3067\u3001JavaScript\u306efunction\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u305b\u308b\u305f\u3081\u306b\u3001\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c\u74b0\u5883\u4e0a\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u6570\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002libsudoku.js\u306f\u4e26\u5217\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067\u3001libsudoku.js\u306e\u5834\u5408\u306f1\u3042\u308c\u3070\u3088\u3044\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f20\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\u3002\n\nEmscripten\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u547c\u3073\u51fa\u3059JavaScript\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001ccall\u3084cwrap\u3092\u4f7f\u3048\u3068\u3042\u308a\u307e\u3059\u304c\u3001\u8f09\u305b\u3066\u3042\u308b\u306e\u306f\u3084\u308a\u3068\u308a\u3059\u308b\u306e\u304c\u5358\u7d14\u306anumber\u306e\u5024\u3068\u304d\u306e\u307f\u3067\u3042\u3063\u3066\u3001\u5f15\u6570\u3067\u914d\u5217\u3084\u95a2\u6570\u3092\u4f7f\u3046\u305f\u3081\u306b\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u89e3\u6790\u3057\u305f\u308a\u3057\u3066\u8a66\u884c\u932f\u8aa4\u3057\u307e\u3057\u305f\u3002\n\nccall\u3067\u914d\u5217\u3092\u5f15\u6570\u306b\u6e21\u3057\u3066\u547c\u3073\u51fa\u3059\u65b9\u6cd5\n\u307e\u305a\u3001libsudoku.c\u306evoid output(unsigned board[])\u3092\u547c\u3073\u51fa\u3059\u30e9\u30c3\u30d1\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nvar libsudoku = require(\"./libsudoku.js\");\n\n// use ccall to call emscripten C function\nvar output = function (board) {\n    // unsigned[] as Uint8Array view of Uint32Array\n    var unsignedBoard = new Uint8Array(new Uint32Array(board).buffer);\n    // ccall(cfuncname, return_type, argument_types, arguments)\n    // type: \"string\", \"number\", \"array\" or undefined as return type\n    return libsudoku.ccall(\"output\", undefined, [\"array\"], [unsignedBoard]);\n};\n\n\u3053\u3053\u3067\u306f\u3001JavaScript\u306eArray\u3092\u3001Emscripten\u306earray\u5024\u3068\u3057\u3066ccall\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u5f15\u6570\u306f\u3001library.ccall(\u95a2\u6570\u540d, \u623b\u308a\u5024\u578b, \u5f15\u6570\u578b\u30ea\u30b9\u30c8, \u5f15\u6570\u5024\u30ea\u30b9\u30c8)\u3067\u3059\u3002\u3053\u306e\u95a2\u6570\u540d\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u3067\u306f\u306a\u304f\u3001\u982d\u306e_\u306a\u3057\u306eC\u3067\u306e\u95a2\u6570\u540d\u306b\u306a\u308a\u307e\u3059\u3002\n\u623b\u308a\u5024\u306fvoid\u306e\u5834\u5408undefined\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u5f15\u6570\u306e\u578b\u306f\"number\"\u304b\"string\"\u304b\"array\"\u306e\u3069\u308c\u304b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u578b\u6307\u5b9a\u306f\u3001C\u306e\u95a2\u6570\u5ba3\u8a00\u3067\u306e\u578b\u3067\u306f\u306a\u304f\u3001\u547c\u3073\u51fa\u3057\u3066\u5b9f\u884c\u3055\u305b\u308b\u6642\u306b\u5b9f\u969b\u306b\u6e21\u3059JavaScript\u5024\u306e\u578b\u306b\u306a\u308a\u307e\u3059\u3002\noutput()\u306e\u5f15\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u306e\u578b\u306funsigned (int)\u3067\u3059\u304c\u3001Emscripten\u3067\u306f\u3001int\u578b\u306f32bit\u6574\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\u305d\u3057\u3066\u30d0\u30a4\u30c8\u30aa\u30fc\u30c0\u30fc\u306f\u3001TypedArray\u306eCPU\u74b0\u5883\u4f9d\u5b58\u6027\u3092\u305d\u306e\u307e\u307e\u7d99\u627f\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059(\u751f\u6210\u30b3\u30fc\u30c9\u5185\u3067CPU\u4f9d\u5b58\u306anew Uint32Array(buffer)\u306a\u3069\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b)\u3002\nC\u8a00\u8a9e\u4e0a\u3067\u6271\u3046\u306e\u304c32bit\u914d\u5217\u3060\u308d\u3046\u3068\u3001ccall\u3067\u547c\u3073\u51fa\u3059\u3068\u304d\u306e\"array\"\u578b\u306e\u5f15\u6570\u306f\u30018bit\u306eInt8Array\u3084Uint8Array\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306eccall\u5b9f\u88c5\u3092\u898b\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u3067\u6e21\u3059\u5f15\u6570\u306f\u3001\u305d\u306e\u5024\u3092\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306e\u30e1\u30e2\u30ea\u9818\u57df\u306b\u30b3\u30d4\u30fc\u3057\u3066\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c\u3055\u305b\u307e\u3059\u3002\"string\"\u3068\u304b\"array\"\u3068\u304b\u3044\u3046\u306e\u306f\u3001\u305d\u306e\u30b3\u30d4\u30fc\u624b\u6bb5\u3092\u6307\u5b9a\u3059\u308b\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\"array\"\u306e\u5834\u5408\u306f\u3001HEAP8[...] = array[i]\u3067\u30b3\u30d4\u30fc\u3059\u308b\u306e\u3067\u3001Uint32Array\u7b49\u3092\u305d\u306e\u307e\u307eccall\u306b\u6e21\u3059\u30688bit\u306b\u5207\u308a\u8a70\u3081\u3089\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b\"string\"\u306fC\u3078\u306fUTF8\u306achar\u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u6e21\u308a\u307e\u3059\u3002\n\n\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3059\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u65b9\u6cd5\nsudoku(board, callback)\u3078\u306e\u30e9\u30c3\u30d1\u30fc\u3092\u3001\u3082\u3046\u4e00\u3064\u306ecwrap\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3057\u305f\u306e\u304c\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002ccall(\u95a2\u6570\u540d, \u623b\u308a\u5024\u578b\u3001\u5f15\u6570\u578b\u30ea\u30b9\u30c8\u3001\u5f15\u6570\u5024\u30ea\u30b9\u30c8)\u306f\u3001cwrap(\u95a2\u6570\u540d, \u623b\u308a\u5024\u578b, \u5f15\u6570\u578b\u30ea\u30b9\u30c8)(\u5f15\u6570\u5024\u30ea\u30b9\u30c8)\u3068\u7b49\u4fa1\u3067\u3059\u3002emscripten\u306e\u95a2\u6570\u3092\u4f55\u5ea6\u3082\u547c\u3073\u51fa\u3059\u5834\u5408\u306b\u306fcwrap\u304c\u8fd4\u3059\u95a2\u6570\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u3044\u3066\u3001\u5f15\u6570\u3060\u3051\u6e21\u3057\u3066\u547c\u3073\u51fa\u3059\u307b\u3046\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\u3053\u3053\u3067\u306e\u30dd\u30a4\u30f3\u30c8\u306f\u3001JavaScript\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306f\u3001\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c\u74b0\u5883\u306b\u30bb\u30c3\u30c8\u3057\u3001\u305d\u306e\u30dd\u30a4\u30f3\u30bf\u5024\u3092\"number\"\u3068\u3057\u3066cwrap\u3067\u4f5c\u3063\u305f\u95a2\u6570\u306e\u5f15\u6570\u306b\u6e21\u3059\u70b9\u3067\u3059\u3002\n// use cwrap to call emscripten C function with callback\nvar sudoku = function sudoku(board, callback) {\n    // NOTE: For using addFunction(),\n    //    emcc option \"-s REQUIRED_FUNCTION_POINTERS=10\" (more than 1) required\n    var callbackPtr = libsudoku.Runtime.addFunction(function (resultPtr) {\n        var r = new Uint32Array(libsudoku.HEAPU8.buffer, resultPtr, 81);\n        // NOTE: copy memory value as array for async use in callback(like IO)\n        callback([].slice.call(r));\n    });\n    var unsignedBoard = new Uint8Array(new Uint32Array(board).buffer);\n    sudoku._cfunc(unsignedBoard, callbackPtr);\n    libsudoku.Runtime.removeFunction(callbackPtr);\n};\n// pointer as a \"number\"\nsudoku._cfunc = libsudoku.cwrap(\"sudoku\", undefined, [\"array\", \"number\"]);\n\nptr = library.Runtime.addFunction(function)\u3092\u4f7f\u3044\u3001JavaScript function\u3092\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u74b0\u5883\u306b\u30bb\u30c3\u30c8\u3057\u3001\u305d\u306e\u30dd\u30a4\u30f3\u30bf\u5024\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u5f15\u6570\u306eRESERVED_FUNCTION_POINTERS\u306e\u6570\u306f\u3001\u540c\u6642\u306baddFunction\u3067\u767b\u9332\u3067\u304d\u308bJavaScript\u95a2\u6570\u306e\u6570\u3092\u6307\u3057\u307e\u3059\u3002\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u306b\u6e21\u3055\u308c\u308b\u5f15\u6570\u306f\u3001(ccall\u7b49\u306e\u3067\u306e\u5024\u3067\u306f\u306a\u304f)\u5b9f\u884c\u74b0\u5883\u4e0a\u3067\u306e\u6570\u5024\u305d\u306e\u307e\u307e\u3067\u3059\u3002\u30dd\u30a4\u30f3\u30bf\u306e\u5834\u5408\u306f\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306eHEAP(library.HEAPU8\u7b49)\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u5024\u3068\u3057\u3066\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u96a0\u307a\u3044\u3059\u308b\u305f\u3081\u306b\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3082\u307e\u305f\u30e9\u30c3\u30d1\u30fc\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e9\u30c3\u30d1\u30fc\u306e\u4e2d\u3067\u30e1\u30e2\u30ea\u30aa\u30d5\u30bb\u30c3\u30c8\u304b\u3089\u901a\u5e38\u306eArray\u3092\u4f5c\u3063\u3066\u5b9f\u969b\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\nvar callbackPtr = libsudoku.Runtime.addFunction(function (resultPtr) {\n    var r = new Uint32Array(libsudoku.HEAPU8.buffer, resultPtr, 81);\n    callback([].slice.call(r));\n});\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u6e21\u3055\u308c\u308bresult\u306fC\u4e0a\u3067unsigned [81]\u306a\u306e\u3067\u3001HEAP\u304b\u308981\u500b\u306e32bit\u6574\u6570\u306e\u914d\u5217\u3092Uint32Array\u3067\u5207\u308a\u51fa\u3057\u3001\u305d\u308c\u3092\u666e\u901a\u306eArray\u306b\u5909\u63db\u3057\u3066\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002ccall\u3084cwrap\u306f\u3001\u4e2d\u3067\u3053\u3046\u3044\u3063\u305fHEAP\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3063\u3066JavaScript\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u30e1\u30e2\u30ea\u5024\u3068\u306e\u76f8\u4e92\u5909\u63db\u3092\u3057\u3066\u3044\u307e\u3059\u3002\nlibrary.Runtime.addFunction(f)\u304c\u8fd4\u3059\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306b\u9650\u3089\u305a\u3001\u30dd\u30a4\u30f3\u30bf\u5024\u306f\u3001\"number\"\u3068\u3057\u3066ccall\u3084cwrap\u306e\u95a2\u6570\u306e\u5f15\u6570\u306b\u6e21\u3057\u307e\u3059\u3002\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u304c\u7d42\u308f\u3063\u305f\u3042\u3068\u306f\u3001library.Runtime.removeFunction(ptr)\u3067\u524a\u9664\u3057\u3001addFunction\u3067\u304d\u308b\u5834\u6240\u3092\u958b\u3051\u3066\u3084\u308a\u307e\u3059\u3002Emscripten\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001C\u3068\u540c\u69d8\u306b\u3053\u3046\u3044\u3063\u305f\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u3092\u624b\u52d5\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nmain\u90e8\u5206\u3068\u5b9f\u884c\n\u4e0a\u8ff0\u306e\u30e9\u30c3\u30d1\u30fc\u3092\u7528\u3044\u305f\u3001sudoku-main.c\u3068\u540c\u69d8\u306e\u51e6\u7406\u3092\u884c\u3046\u30b3\u30fc\u30c9\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n// sudoku-call-libsudoku.js \nvar libsudoku = require(\"./libsudoku.js\");\n\nvar output = function (board) {\n    var unsignedBoard = new Uint8Array(new Uint32Array(board).buffer);\n    return libsudoku.ccall(\"output\", undefined, [\"array\"], [unsignedBoard]);\n};\n\nvar sudoku = function sudoku(board, callback) {\n    var callbackPtr = libsudoku.Runtime.addFunction(function (resultPtr) {\n        var r = new Uint32Array(libsudoku.HEAPU8.buffer, resultPtr, 81);\n        callback([].slice.call(r));\n    });\n    var unsignedBoard = new Uint8Array(new Uint32Array(board).buffer);\n    sudoku._cfunc(unsignedBoard, callbackPtr);\n    libsudoku.Runtime.removeFunction(callbackPtr);\n};\nsudoku._cfunc = libsudoku.cwrap(\"sudoku\", undefined, [\"array\", \"number\"]);\n\n// main\nif (process.argv.length <= 2) {\n    // example problem from http://rosettacode.org/wiki/Sudoku\n    var problem = [\n        8, 5, 0, 0, 0, 2, 4, 0, 0,\n        7, 2, 0, 0, 0, 0, 0, 0, 9,\n        0, 0, 4, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 1, 0, 7, 0, 0, 2,\n        3, 0, 5, 0, 0, 0, 9, 0, 0,\n        0, 4, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 8, 0, 0, 7, 0,\n        0, 1, 7, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 3, 6, 0, 4, 0\n    ];\n    console.log(\"[problem]\");\n    output(problem);\n    console.log(\"[solution]\");\n    sudoku(problem, output);\n} else {\n    for (var i = 2; i < process.argv.length; i++) {\n        var problem = Array(81);\n        for (var j = 0; j < 81; j++) {\n            var ch = process.argv[i].charCodeAt(j);\n            problem[j] = 0 <= ch && ch <= 9 ? v : 0;\n        }\n        console.log(\"[problem]\");\n        output(problem);\n        console.log(\"[solution]\");\n        sudoku(problem, output);\n    }\n}\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001main\u3092\u542b\u3081\u3066\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u6642\u3068\u540c\u69d8\u306b\u3001\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u4e0d\u8981\u3067\u305d\u306e\u307e\u307e\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n$ iojs sudoku-call-libsudoku.js\n[problem]\n85.|..2|4..\n72.|...|..9\n..4|...|...\n---+---+---\n...|1.7|..2\n3.5|...|9..\n.4.|...|...\n---+---+---\n...|.8.|.7.\n.17|...|...\n...|.36|.4.\n\n[solution]\n859|612|437\n723|854|169\n164|379|528\n---+---+---\n986|147|352\n375|268|914\n241|593|786\n---+---+---\n432|981|675\n617|425|893\n598|736|241\n\n\n\n\u5b9f\u884c\u901f\u5ea6\u306e\u5206\u6790\n\u30cd\u30a4\u30c6\u30a3\u30d6\u5b9f\u884c\u306esudoku\u3001C\u30b3\u30fc\u30c9\u5168\u90e8\u3092\u5909\u63db\u3057\u305fsudoku.js\u3001\u30e9\u30a4\u30d6\u30e9\u30ealibsudoku.js\u3092\u5229\u7528\u3059\u308bsudoku-call-libsudoku.js\u306e\u5b9f\u884c\u6642\u9593\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n$ time ./sudoku\nreal    0m0.020s\nuser    0m0.015s\nsys 0m0.002s\n\n$ time iojs sudoku-call-libsudoku.js\nreal    0m0.355s\nuser    0m0.313s\nsys 0m0.037s\n\n$ time iojs sudoku.js\nreal    0m0.888s\nuser    0m0.312s\nsys 0m0.045s\n\nC\u3067main\u3092\u5b9f\u88c5\u3059\u308b\u3088\u308a\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u5229\u7528\u3060\u3051\u306b\u3057\u305f\u307b\u3046\u304c\u901f\u3044\u3088\u3046\u3067\u3059(\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u95a2\u6570\u306fprintf\u7b49\u3092\u907f\u3051puts()\u306e\u307f\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u305f\u306e\u3067\u3059\u304c)\u3002\n\u3061\u306a\u307f\u306b\u3001JavaScript\u3067\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9\u3067\u306e\u5b9f\u884c\u6642\u9593\u306f\u3001\n$ time iojs sudoku-backtrack.js\nreal    0m0.723s\nuser    0m0.684s\nsys 0m0.030s\n\n\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\u76e4\u9762\u30921\u56de\u89e3\u304f\u3060\u3051\u306a\u3089C\u30b3\u30fc\u30c9\u5168\u90e8\u3092\u5909\u63db\u3057\u305f\u3082\u306e\u3088\u308a\u901f\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306fmain\u90e8\u5206\u306e\u30b3\u30b9\u30c8\u304c\u5927\u304d\u304f\u5f71\u97ff\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3057\u3087\u3046\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u5229\u7528\u306a\u3082\u306e\u304b\u3089\u306f\u3001\u500d\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u304a\u308a\u3001\u30bd\u30eb\u30d0\u30fc\u90e8\u5206\u306fEmscripten\u3067\u500d\u901f\u306b\u306a\u3063\u305f\u3068\u3044\u3048\u307e\u3059\u3002\n\n\u7591\u554f: ccall\u3067\u306estruct\u5024\u6e21\u3057\u306e\u65b9\u6cd5\nccall\u3084cwrap\u3067\u306f\u3001\u305f\u3068\u3048\u3070float4\u3064\u304c\u5165\u3063\u305fvec4\u306e\u3088\u3046\u306a(\u30dd\u30a4\u30f3\u30bf\u6e21\u3057\u306b\u3057\u306a\u3044)struct\u5024\u3092\u6e21\u3059\u624b\u6bb5\u304c\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\n\n\u53c2\u8003: Emscripten\u306e\u6700\u9069\u5316\u53ca\u3073\u30c7\u30d0\u30c3\u30b0\u30aa\u30d7\u30b7\u30e7\u30f3\ngcc/clang\u3068\u540c\u69d8\u306b\u6700\u9069\u5316\u53ca\u3073\u30c7\u30d0\u30c3\u30b0\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u306f\u3001O0-3\u3068g1-4\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u610f\u5473\u306f\u5225\u7269\u3067Emscripten\u56fa\u6709\u306e\u610f\u5473\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\nO0: \u6700\u9069\u5316\u306a\u3057(\u30c7\u30d5\u30a9\u30eb\u30c8)\nO1: \u30c7\u30d0\u30c3\u30b0\u30b3\u30fc\u30c9\u304c\u524a\u9664\u3055\u308c\u308b\nO2: \u51fa\u529b\u304cminify\u3055\u308c\u308b(.js.mem\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b)\nO3: \u3055\u3089\u306a\u308b\u6700\u9069\u5316\u3092\u3059\u308b(O2\u3088\u308a\u82e5\u5e72\u30d5\u30a1\u30a4\u30eb\u304c\u5c0f\u3055\u304f\u306a\u308b)\n\nO2\u3084O3\u3067\u540c\u6642\u306b\u751f\u6210\u3055\u308c\u308b.js.mem\u30d5\u30a1\u30a4\u30eb\u306f\u751f\u6210\u3057\u305f.js\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306e\u306b\u5fc5\u9808\u306a\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\u30c7\u30d0\u30c3\u30b0\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001O2\u4ee5\u964d\u306e\u6700\u9069\u5316\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u4f75\u7528\u3057\u3066minify\u5316\u3092\u6291\u5236\u3059\u308b\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\ng1: \u7a7a\u767d\u3092\u4fdd\u5b58\ng2: \u95a2\u6570\u540d\u3092\u4fdd\u5b58\ng3: \u5909\u6570\u540d\u3092\u4fdd\u5b58\ng4: \u30bd\u30fc\u30b9\u30de\u30c3\u30d7(.map\u30d5\u30a1\u30a4\u30eb)\u3092\u751f\u6210\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3078\u306e\u30ea\u30f3\u30af\n\u5b8c\u5168\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3001Makefile\u3092\u3064\u3051\u3066gist\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\nhttps://gist.github.com/bellbind/64786335e8760e9c9756\n\nC\u3067\u5b9f\u88c5\u3057\u305f\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\u578b\u6570\u72ec\u30bd\u30eb\u30d0\u30fc\u3092\u3001[Emscripten](http://kripken.github.io/emscripten-site/)\u3092\u4f7f\u3063\u3066JavaScript\u74b0\u5883\u3067\u5b9f\u884c\u3055\u305b\u308b\u3053\u3068\u304b\u3089\u3001Emscripten\u306e\u4ed5\u7d44\u307f\u3092\u8abf\u3079\u3066\u3044\u3063\u305f\u3001\u3068\u3044\u3046\u8a71\u3067\u3059\u3002\n\n# Emscripten\u3068\u306f\n\nemscripten\u306f\u3001[LLVM/Clang](http://llvm.org/)\u3092\u4f7f\u3063\u3066\u3001C\u3084C++\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d6\u30e9\u30a6\u30b6\u3084[nodejs](https://nodejs.org/)/[iojs](https://iojs.org/)\u3068\u3044\u3063\u305fJavaScript\u74b0\u5883\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\n\nC/C++\u306e\u30bd\u30fc\u30b9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305fLLVM\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u5143\u306b\u3001JavaScript\u4e0a\u3067\u5b9f\u884c\u3055\u305b\u308b\u305f\u3081\u306e**\u5909\u63db\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u305d\u308c\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u74b0\u5883\u306e\u90e8\u5206**\u3068\u3001gcc\u3084make\u7b49\u3068\u4e92\u63db\u6027\u3092\u9ad8\u3081\u305f[`emcc`](https://github.com/kripken/emscripten/blob/master/emcc)\u3084[`emmake`](https://github.com/kripken/emscripten/blob/master/emmake)\u306a\u3069\u306e**\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u7fa4**\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u524d\u8005\u306fnodejs\u306b\u3088\u3063\u3066\u3001\u5f8c\u8005\u306f[python](https://www.python.org/)\u306b\u3088\u3063\u3066\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n[libc](http://www.gnu.org/software/libc/)\u7b49\u306eC/C++\u3067\u5229\u7528\u3059\u308b**\u30e9\u30f3\u30bf\u30a4\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea(\u306e\u95a2\u6570)\u306f\u3001JavaScript\u5074\u3067\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b**\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30b3\u30f3\u30bd\u30fc\u30eb\u3078\u306e\u6a19\u6e96\u51fa\u529b\u3001[SDL](https://www.libsdl.org/)/[OpenGL](https://www.opengl.org/)\u7b49\u306e\u63cf\u753b\u306a\u3069\u3092nodejs/iojs\u74b0\u5883\u3084\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u5b9f\u73fe\u3059\u308bJS\u5b9f\u88c5\u3001\u7b49\u304c\u3001emscripten\u306b\u306f\u6a19\u6e96\u6dfb\u4ed8\u3055\u308c\u3066\u3044\u307e\u3059(\u305f\u3068\u3048\u3070libc\u306e\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u5b9f\u88c5\u306f\u3001[`/usr/local/opt/emscripten/libexec/src/library.js`](https://github.com/kripken/emscripten/blob/master/src/library.js)\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059)\u3002\n\n# Emscripten\u306e\u74b0\u5883\u8a2d\u5b9a\n\nOSX\u74b0\u5883\u3067\u306f\u3001[homebrew](http://brew.sh/)\u306b\u3088\u3063\u3066emscripten\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f(`brew install emscripten`)\u3002\n\nemscripten\u3092\u5165\u308c\u308b\u3068\u3001`emcc`(gcc/clang\u4e92\u63db\u306e\u30b3\u30de\u30f3\u30c9)\u7b49\u306e\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\u521d\u56de\u306b\u305d\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u6642\u3001\u74b0\u5883\u304c\u8a2d\u5b9a\u3055\u308c\u305f`~/.emscripten`\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u3089\u308c\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001OSX\u3060\u3068\u73fe\u72b6\u306e\u30b7\u30b9\u30c6\u30e0\u6dfb\u4ed8\u306e`clang`\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u306a\u3069\u3001\u305d\u306e\u5185\u5bb9\u306f\u305f\u3060\u3057\u304f\u53cd\u6620\u3055\u308c\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u306a\u304a\u3057\u307e\u3059\u3002\n\n```py3\n# ~/.emscripten\nEMSCRIPTEN_ROOT = os.path.expanduser(\n    os.getenv('EMSCRIPTEN') or \n    '/usr/local/opt/emscripten/libexec')\nLLVM_ROOT = os.path.expanduser(\n    os.getenv('LLVM') or \n    '/usr/local/opt/emscripten/libexec/llvm/bin')\n\nNODE_JS = os.path.expanduser(\n    os.getenv('NODE') or \n    '/usr/local/opt/node/bin/node')\n\nTMP_DIR = '/tmp'\nCOMPILER_ENGINE = NODE_JS\nJS_ENGINES = [NODE_JS]\n```\n\n\u3053\u306e\u3088\u3046\u306bhomebrew\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u3082\u3092\u6307\u5b9a\u3057\u3066\u304a\u3051\u304f\u3053\u3068\u3067\u3001homebrew\u306eupgrade\u306b\u3088\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308bemscripten\u3084nodejs\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u3066\u3082\u3001\u6bce\u56de\u306e\u518d\u8a2d\u5b9a\u305b\u305a\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u8a2d\u5b9a\u3067`emcc`\u30b3\u30de\u30f3\u30c9\u3092\u7a7a\u5b9f\u884c\u3059\u308b\u3068\u3001\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u3066\u3044\u308c\u3070\u4ee5\u4e0b\u306e\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\n```bash\n$ emcc\nWARNING  root: (Emscripten: settings file has changed, clearing cache)\nINFO     root: (Emscripten: Running sanity checks)\nWARNING  root: no input files\n```\n\n# C\u8a00\u8a9e(C11)\u3067\u6570\u72ec\u30bd\u30eb\u30d0\u30fc\u3092\u66f8\u304f\n\n\u306f\u3058\u3081\u306b[C11\u4ed5\u69d8](http://en.wikipedia.org/wiki/C11_%28C_standard_revision%29)\u3067\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\u578b\u306e9x9\u30de\u30b9\u306e\u6570\u72ec\u30bd\u30eb\u30d0\u30fc\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\u3042\u3068\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3051\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u3001\u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u90e8\u5206\u3068`main`\u90e8\u5206\u3068\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```c\n// libsudoku.c\n#include <stdio.h>\n\n// helpers for board data\nstatic inline unsigned masks(unsigned i) {return i ? 1 << (i - 1) : 0;}\nstatic inline unsigned row(unsigned i) {return i / 9;}\nstatic inline unsigned col(unsigned i) {return i % 9;}\nstatic inline unsigned blk(unsigned i) {return i / 27 * 3 + i % 9 / 3;}\nextern void output(unsigned board[])\n{\n  char buffer[(9 + 3) * (9 + 3)];\n  char* cur = buffer;\n  for (unsigned y = 0; y < 9; y++) {\n    for (unsigned x = 0; x < 9; x++) {\n      *cur++ = board[y * 9 + x] > 0 ? board[y * 9 + x] + '0' : '.';\n      if (x % 3 == 2) *cur++ = x == 8 ? '\\n' : '|';\n    }\n    if (y == 8) {\n      *cur++ = '\\0';\n    } else if (y % 3 == 2) {\n      for (unsigned i = 0; i < 11; i++) *cur++ = i % 4 == 3 ? '+' : '-';\n      *cur++ = '\\n';\n    }\n  }\n  puts(buffer);\n}\n\n// sudoku solver\ntypedef void (*sudoku_cb)(unsigned board[]);\ntypedef struct {\n  unsigned board[81];\n  unsigned rows[9], cols[9], blks[9];\n  sudoku_cb callback;\n} sudoku_t;\n\nstatic void sudoku_init(sudoku_t* s, unsigned board[])\n{\n  for (unsigned i = 0; i < 81; i++) {\n    const unsigned mask = masks(board[i]);\n    s->rows[row(i)] |= mask, s->cols[col(i)] |= mask, s->blks[blk(i)] |= mask;\n    s->board[i] = board[i];\n  }\n}\n\nstatic void sudoku_solve(sudoku_t* s, unsigned i)\n{\n  if (i == 81) {\n    s->callback(s->board);\n  } else if (s->board[i] != 0) {\n    sudoku_solve(s, i + 1);\n  } else {\n    const unsigned r = row(i), c = col(i), b = blk(i);\n    const unsigned used = s->rows[r] | s->cols[c] | s->blks[b];\n    for (unsigned v = 1; v <= 9; v++) {\n      const unsigned mask = masks(v);\n      if (used & mask) continue;\n      s->board[i] = v;\n      s->rows[r] |= mask, s->cols[c] |= mask, s->blks[b] |= mask;\n      sudoku_solve(s, i + 1);\n      s->rows[r] &= ~mask, s->cols[c] &= ~mask, s->blks[b] &= ~mask;\n      s->board[i] = 0;\n    }\n  }\n}\n\nextern void sudoku(unsigned board[], sudoku_cb callback)\n{\n  sudoku_t s = {\n    .board = {0}, .rows = {0}, .cols = {0}, .blks = {0}, .callback = callback};\n  sudoku_init(&s, board);\n  sudoku_solve(&s, 0);\n}\n```\n\n```c\n// sudoku-main.c\n\n#include <stdio.h>\n\nextern void output(unsigned board[]);\ntypedef void (*sudoku_cb)(unsigned board[]);\nextern void sudoku(unsigned board[], sudoku_cb callback);\n\n// example problem from http://rosettacode.org/wiki/Sudoku\nstatic unsigned problem[] = {\n  8, 5, 0, 0, 0, 2, 4, 0, 0,\n  7, 2, 0, 0, 0, 0, 0, 0, 9,\n  0, 0, 4, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 1, 0, 7, 0, 0, 2,\n  3, 0, 5, 0, 0, 0, 9, 0, 0,\n  0, 4, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 8, 0, 0, 7, 0,\n  0, 1, 7, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 3, 6, 0, 4, 0\n};\n\nextern int main(int argc, char* argv[])\n{\n  if (argc <= 1) {\n    puts(\"[problem]\");\n    output(problem);\n    puts(\"[solutions]\");\n    sudoku(problem, output);\n  } else {\n    for (int i = 1; i < argc; i++) {\n      char ch = -1;\n      for (int c = 0; c < 81; c++) {\n        if (ch == '\\0') {\n          problem[c] = 0;\n        } else {\n          ch = argv[i][c];\n          problem[c] = '0' <= ch && ch <= '9' ? ch - '0' : 0;\n        }\n      }\n      puts(\"[problem]\");\n      output(problem);\n      puts(\"[solution]\");\n      sudoku(problem, output);\n    }\n  }\n  return 0;\n}\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bgcc/clang\u3067\u666e\u901a\u306b\u30b3\u30f3\u30d1\u30a4\u30eb/\u5b9f\u884c\u53ef\u80fd\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```bash\n$ clang -std=c11 -Wall -Wextra libsudoku.c sudoku-main.c -o sudoku\n$ ./sudoku \n[problem]\n85.|..2|4..\n72.|...|..9\n..4|...|...\n---+---+---\n...|1.7|..2\n3.5|...|9..\n.4.|...|...\n---+---+---\n...|.8.|.7.\n.17|...|...\n...|.36|.4.\n\n[solutions]\n859|612|437\n723|854|169\n164|379|528\n---+---+---\n986|147|352\n375|268|914\n241|593|786\n---+---+---\n432|981|675\n617|425|893\n598|736|241\n\n```\n\n# Emscripten\u3067C\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3001iojs\u3067\u5b9f\u884c\u3059\u308b\n\n\u4e0a\u8a18\u30d3\u30eb\u30c9\u3067\u306e`clang`\u306e\u90e8\u5206\u3092`emcc`\u306b\u5909\u3048\u3001**\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306b`.js`\u3092\u3064\u3051\u308b**\u3060\u3051\u3067JavaScript\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3059\u3002\n\u751f\u6210\u3055\u308c\u305fjs\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u305d\u308c**\u5358\u4f53\u3067nodejs/iojs\u4e0a\u3067\u5b9f\u884c\u53ef\u80fd**\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```bash\n$ emcc -std=c11 -Wall -Wextra libsudoku.c sudoku-main.c -o sudoku.js\n$ iojs sudoku.js \n[problem]\n85.|..2|4..\n72.|...|..9\n..4|...|...\n---+---+---\n...|1.7|..2\n3.5|...|9..\n.4.|...|...\n---+---+---\n...|.8.|.7.\n.17|...|...\n...|.36|.4.\n\n[solutions]\n859|612|437\n723|854|169\n164|379|528\n---+---+---\n986|147|352\n375|268|914\n241|593|786\n---+---+---\n432|981|675\n617|425|893\n598|736|241\n\n\n```\n\n# Emscripten\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u95a2\u6570\u3092\u3001JavaScript\u30b3\u30fc\u30c9\u304b\u3089\u547c\u3073\u51fa\u3059\n\nEmscripten\u3067\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306f\u3001(CoffeeScript\u7b49\u306e\u30c8\u30e9\u30f3\u30b9\u30ec\u30fc\u30bf\u306e\u3088\u3046\u306a)**\u666e\u901a\u306eJavaScript\u95a2\u6570\u3068\u3057\u3066\u4f7f\u3048\u308bJS\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093**\u3002\u751f\u6210\u3055\u308c\u308b\u306e\u306f\u3001(C\u8a00\u8a9e\u5b9f\u884c\u30e2\u30c7\u30eb\u3092\u524d\u63d0\u3068\u3059\u308b)LLVM\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3068\u305d\u306e\u5b9f\u884c\u74b0\u5883\u304c\u5408\u308f\u3055\u3063\u305f\u3082\u306e\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001HEAP\u306e\u3088\u3046\u306a\u5b9a\u91cf\u306e\u30e1\u30e2\u30ea\u9818\u57df\u306e\u7ba1\u7406\u6a5f\u69cb\u304cJS\u30b3\u30fc\u30c9\u4e2d\u306b\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u751f\u6210\u3059\u308b\u306e\u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u3063\u3066\u3082\u540c\u3058\u3067\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3082\u3064`extern`\u306a\u95a2\u6570\u3068\u3044\u3046\u306e\u306f\u3001\u3042\u304f\u307e\u3067**C\u306e\u95a2\u6570\u3068\u3057\u3066\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306b\u7d44\u307f\u8fbc\u3093\u3060\u5b9f\u884c\u74b0\u5883\u4e0a\u3067\u5b9f\u884c\u3055\u305b\u308b\u3082\u306e**\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u305f\u3081Emscripten\u3067\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u3001JavaScript\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u4f7f\u3046\u306b\u306f\u3001\u6240\u3005\u3067\u5c11\u3057\u5de5\u592b\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u3001[Interacting with code](http://kripken.github.io/emscripten-site/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html)\u306b\u306f\u3001\u3053\u306e\u305f\u3081\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306f\u8a18\u8ff0\u3057\u3066\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u3089\u304c**\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306eC\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u74b0\u5883\u3078\u306e\u30a2\u30af\u30bb\u30b9\u624b\u6bb5**\u3067\u3042\u308b\u3001\u3068\u3044\u3046\u5927\u672c\u306e\u9055\u3044\u3092\u8a8d\u8b58\u3057\u3066\u3044\u306a\u3044\u3068\u30cf\u30de\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n## nodejs/iojs\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n\n`libsudoku.c`\u304b\u3089nodejs/iojs\u4e0a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u4f7f\u3046`libsudoku.js`\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4ed8\u5c5e\u306e\u30aa\u30d7\u30b7\u30e7\u30f3`-s EXPORTED_FUNCTIONS`\u3068`-s RESERVED_FUNCTION_POINTERS`\u306e\uff12\u3064\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```bash\n$ emcc -Wall -Wextra -std=c11 libsudoku.c -o libsudoku.js \\\n      -s EXPORTED_FUNCTIONS=\"['_sudoku','_output']\" \\\n      -s RESERVED_FUNCTION_POINTERS=20\n```\n\n\u524d\u8005\u306e`EXPORTED_FUNCTIONS`\u3067\u306f\u3001JavaScript\u5074\u3067\u547c\u3073\u51fa\u3059\u305f\u3081\u306b\u3001C\u3067\u306e`extern`\u306a\u95a2\u6570\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001C\u306e\u95a2\u6570\u540d\u305d\u306e\u307e\u307e\u3067\u306f\u306a\u304f\u3001**\u982d\u306b`_`\u3092\u3064\u3051\u305f\u540d\u524d**\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n\n\u5f8c\u8005\u306e`RESERVED_FUNCTION_POINTERS`\u306f\u3001`sudoku(board, callback)`\u95a2\u6570\u306e\u3088\u3046\u306a\u3001**\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3059\u95a2\u6570\u3092JavaScript\u5074\u304b\u3089\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b\u3068\u304d**\u306b\u5fc5\u8981\u306a\u5909\u6570\u3067\u3059\u3002\u3053\u3053\u3067\u3001JavaScript\u306e`function`\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u305b\u308b\u305f\u3081\u306b\u3001\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c\u74b0\u5883\u4e0a\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u6570\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002`libsudoku.js`\u306f\u4e26\u5217\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067\u3001libsudoku.js\u306e\u5834\u5408\u306f`1`\u3042\u308c\u3070\u3088\u3044\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f`20`\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n## Emscripten\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u547c\u3073\u51fa\u3059JavaScript\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001`ccall`\u3084`cwrap`\u3092\u4f7f\u3048\u3068\u3042\u308a\u307e\u3059\u304c\u3001\u8f09\u305b\u3066\u3042\u308b\u306e\u306f\u3084\u308a\u3068\u308a\u3059\u308b\u306e\u304c\u5358\u7d14\u306a`number`\u306e\u5024\u3068\u304d\u306e\u307f\u3067\u3042\u3063\u3066\u3001\u5f15\u6570\u3067\u914d\u5217\u3084\u95a2\u6570\u3092\u4f7f\u3046\u305f\u3081\u306b\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u89e3\u6790\u3057\u305f\u308a\u3057\u3066\u8a66\u884c\u932f\u8aa4\u3057\u307e\u3057\u305f\u3002\n\n### `ccall`\u3067\u914d\u5217\u3092\u5f15\u6570\u306b\u6e21\u3057\u3066\u547c\u3073\u51fa\u3059\u65b9\u6cd5\n\n\u307e\u305a\u3001`libsudoku.c`\u306e`void output(unsigned board[])`\u3092\u547c\u3073\u51fa\u3059\u30e9\u30c3\u30d1\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```js\nvar libsudoku = require(\"./libsudoku.js\");\n\n// use ccall to call emscripten C function\nvar output = function (board) {\n    // unsigned[] as Uint8Array view of Uint32Array\n    var unsignedBoard = new Uint8Array(new Uint32Array(board).buffer);\n    // ccall(cfuncname, return_type, argument_types, arguments)\n    // type: \"string\", \"number\", \"array\" or undefined as return type\n    return libsudoku.ccall(\"output\", undefined, [\"array\"], [unsignedBoard]);\n};\n```\n\n\u3053\u3053\u3067\u306f\u3001JavaScript\u306e`Array`\u3092\u3001Emscripten\u306earray\u5024\u3068\u3057\u3066`ccall`\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u5f15\u6570\u306f\u3001`library.ccall(\u95a2\u6570\u540d, \u623b\u308a\u5024\u578b, \u5f15\u6570\u578b\u30ea\u30b9\u30c8, \u5f15\u6570\u5024\u30ea\u30b9\u30c8)`\u3067\u3059\u3002\u3053\u306e\u95a2\u6570\u540d\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u3067\u306f\u306a\u304f\u3001**\u982d\u306e`_`\u306a\u3057\u306eC\u3067\u306e\u95a2\u6570\u540d**\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u623b\u308a\u5024\u306f`void`\u306e\u5834\u5408`undefined`\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u5f15\u6570\u306e\u578b\u306f`\"number\"`\u304b`\"string\"`\u304b`\"array\"`\u306e\u3069\u308c\u304b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u578b\u6307\u5b9a\u306f\u3001C\u306e\u95a2\u6570\u5ba3\u8a00\u3067\u306e\u578b\u3067\u306f\u306a\u304f\u3001\u547c\u3073\u51fa\u3057\u3066\u5b9f\u884c\u3055\u305b\u308b\u6642\u306b\u5b9f\u969b\u306b\u6e21\u3059**JavaScript\u5024\u306e\u578b**\u306b\u306a\u308a\u307e\u3059\u3002\n\n`output()`\u306e\u5f15\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u306e\u578b\u306f`unsigned (int)`\u3067\u3059\u304c\u3001**Emscripten\u3067\u306f\u3001`int`\u578b\u306f32bit\u6574\u6570**\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\u305d\u3057\u3066**\u30d0\u30a4\u30c8\u30aa\u30fc\u30c0\u30fc\u306f\u3001`TypedArray`\u306eCPU\u74b0\u5883\u4f9d\u5b58\u6027\u3092\u305d\u306e\u307e\u307e\u7d99\u627f\u3057\u3066\u3044\u308b**\u3088\u3046\u3067\u3059(\u751f\u6210\u30b3\u30fc\u30c9\u5185\u3067CPU\u4f9d\u5b58\u306a`new Uint32Array(buffer)`\u306a\u3069\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b)\u3002\n\nC\u8a00\u8a9e\u4e0a\u3067\u6271\u3046\u306e\u304c32bit\u914d\u5217\u3060\u308d\u3046\u3068\u3001`ccall`\u3067\u547c\u3073\u51fa\u3059\u3068\u304d\u306e**`\"array\"`\u578b\u306e\u5f15\u6570\u306f\u30018bit\u306e`Int8Array`\u3084`Uint8Array`\u3067\u3042\u308b**\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306e`ccall`\u5b9f\u88c5\u3092\u898b\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u3067\u6e21\u3059\u5f15\u6570\u306f\u3001\u305d\u306e\u5024\u3092**\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306e\u30e1\u30e2\u30ea\u9818\u57df\u306b\u30b3\u30d4\u30fc\u3057\u3066\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c**\u3055\u305b\u307e\u3059\u3002`\"string\"`\u3068\u304b`\"array\"`\u3068\u304b\u3044\u3046\u306e\u306f\u3001\u305d\u306e\u30b3\u30d4\u30fc\u624b\u6bb5\u3092\u6307\u5b9a\u3059\u308b\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002`\"array\"`\u306e\u5834\u5408\u306f\u3001`HEAP8[...] = array[i]`\u3067\u30b3\u30d4\u30fc\u3059\u308b\u306e\u3067\u3001`Uint32Array`\u7b49\u3092\u305d\u306e\u307e\u307e`ccall`\u306b\u6e21\u3059\u30688bit\u306b\u5207\u308a\u8a70\u3081\u3089\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b`\"string\"`\u306fC\u3078\u306fUTF8\u306a`char`\u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u6e21\u308a\u307e\u3059\u3002\n\n### \u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3059\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u65b9\u6cd5\n\n`sudoku(board, callback)`\u3078\u306e\u30e9\u30c3\u30d1\u30fc\u3092\u3001\u3082\u3046\u4e00\u3064\u306e`cwrap`\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3057\u305f\u306e\u304c\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002`ccall(\u95a2\u6570\u540d, \u623b\u308a\u5024\u578b\u3001\u5f15\u6570\u578b\u30ea\u30b9\u30c8\u3001\u5f15\u6570\u5024\u30ea\u30b9\u30c8)`\u306f\u3001`cwrap(\u95a2\u6570\u540d, \u623b\u308a\u5024\u578b, \u5f15\u6570\u578b\u30ea\u30b9\u30c8)(\u5f15\u6570\u5024\u30ea\u30b9\u30c8)`\u3068\u7b49\u4fa1\u3067\u3059\u3002emscripten\u306e\u95a2\u6570\u3092\u4f55\u5ea6\u3082\u547c\u3073\u51fa\u3059\u5834\u5408\u306b\u306f`cwrap`\u304c\u8fd4\u3059\u95a2\u6570\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u3044\u3066\u3001\u5f15\u6570\u3060\u3051\u6e21\u3057\u3066\u547c\u3073\u51fa\u3059\u307b\u3046\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u3053\u3053\u3067\u306e\u30dd\u30a4\u30f3\u30c8\u306f\u3001JavaScript\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306f\u3001\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c\u74b0\u5883\u306b\u30bb\u30c3\u30c8\u3057\u3001\u305d\u306e\u30dd\u30a4\u30f3\u30bf\u5024\u3092`\"number\"`\u3068\u3057\u3066`cwrap`\u3067\u4f5c\u3063\u305f\u95a2\u6570\u306e\u5f15\u6570\u306b\u6e21\u3059\u70b9\u3067\u3059\u3002\n\n```js\n// use cwrap to call emscripten C function with callback\nvar sudoku = function sudoku(board, callback) {\n    // NOTE: For using addFunction(),\n    //    emcc option \"-s REQUIRED_FUNCTION_POINTERS=10\" (more than 1) required\n    var callbackPtr = libsudoku.Runtime.addFunction(function (resultPtr) {\n        var r = new Uint32Array(libsudoku.HEAPU8.buffer, resultPtr, 81);\n        // NOTE: copy memory value as array for async use in callback(like IO)\n        callback([].slice.call(r));\n    });\n    var unsignedBoard = new Uint8Array(new Uint32Array(board).buffer);\n    sudoku._cfunc(unsignedBoard, callbackPtr);\n    libsudoku.Runtime.removeFunction(callbackPtr);\n};\n// pointer as a \"number\"\nsudoku._cfunc = libsudoku.cwrap(\"sudoku\", undefined, [\"array\", \"number\"]);\n```\n\n`ptr = library.Runtime.addFunction(function)`\u3092\u4f7f\u3044\u3001JavaScript `function`\u3092\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u74b0\u5883\u306b\u30bb\u30c3\u30c8\u3057\u3001\u305d\u306e\u30dd\u30a4\u30f3\u30bf\u5024\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u5f15\u6570\u306e`RESERVED_FUNCTION_POINTERS`\u306e\u6570\u306f\u3001\u540c\u6642\u306b`addFunction`\u3067\u767b\u9332\u3067\u304d\u308bJavaScript\u95a2\u6570\u306e\u6570\u3092\u6307\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u306b\u6e21\u3055\u308c\u308b\u5f15\u6570\u306f\u3001(`ccall`\u7b49\u306e\u3067\u306e\u5024\u3067\u306f\u306a\u304f)\u5b9f\u884c\u74b0\u5883\u4e0a\u3067\u306e\u6570\u5024\u305d\u306e\u307e\u307e\u3067\u3059\u3002**\u30dd\u30a4\u30f3\u30bf\u306e\u5834\u5408\u306f\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306eHEAP(`library.HEAPU8`\u7b49)\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u5024\u3068\u3057\u3066\u4f7f\u3046**\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u96a0\u307a\u3044\u3059\u308b\u305f\u3081\u306b\u306f**\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3082\u307e\u305f\u30e9\u30c3\u30d1\u30fc\u304c\u5fc5\u8981**\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e9\u30c3\u30d1\u30fc\u306e\u4e2d\u3067\u30e1\u30e2\u30ea\u30aa\u30d5\u30bb\u30c3\u30c8\u304b\u3089\u901a\u5e38\u306e`Array`\u3092\u4f5c\u3063\u3066\u5b9f\u969b\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```js\nvar callbackPtr = libsudoku.Runtime.addFunction(function (resultPtr) {\n    var r = new Uint32Array(libsudoku.HEAPU8.buffer, resultPtr, 81);\n    callback([].slice.call(r));\n});\n```\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u6e21\u3055\u308c\u308b`result`\u306fC\u4e0a\u3067`unsigned [81]`\u306a\u306e\u3067\u3001HEAP\u304b\u308981\u500b\u306e32bit\u6574\u6570\u306e\u914d\u5217\u3092`Uint32Array`\u3067\u5207\u308a\u51fa\u3057\u3001\u305d\u308c\u3092\u666e\u901a\u306e`Array`\u306b\u5909\u63db\u3057\u3066\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002`ccall`\u3084`cwrap`\u306f\u3001\u4e2d\u3067\u3053\u3046\u3044\u3063\u305fHEAP\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3063\u3066JavaScript\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u30e1\u30e2\u30ea\u5024\u3068\u306e\u76f8\u4e92\u5909\u63db\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n`library.Runtime.addFunction(f)`\u304c\u8fd4\u3059\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306b\u9650\u3089\u305a\u3001\u30dd\u30a4\u30f3\u30bf\u5024\u306f\u3001`\"number\"`\u3068\u3057\u3066`ccall`\u3084`cwrap`\u306e\u95a2\u6570\u306e\u5f15\u6570\u306b\u6e21\u3057\u307e\u3059\u3002\n\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u304c\u7d42\u308f\u3063\u305f\u3042\u3068\u306f\u3001`library.Runtime.removeFunction(ptr)`\u3067\u524a\u9664\u3057\u3001`addFunction`\u3067\u304d\u308b\u5834\u6240\u3092\u958b\u3051\u3066\u3084\u308a\u307e\u3059\u3002Emscripten\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001C\u3068\u540c\u69d8\u306b\u3053\u3046\u3044\u3063\u305f**\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u3092\u624b\u52d5\u3067\u884c\u3046**\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### main\u90e8\u5206\u3068\u5b9f\u884c\n\n\u4e0a\u8ff0\u306e\u30e9\u30c3\u30d1\u30fc\u3092\u7528\u3044\u305f\u3001`sudoku-main.c`\u3068\u540c\u69d8\u306e\u51e6\u7406\u3092\u884c\u3046\u30b3\u30fc\u30c9\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```js\n// sudoku-call-libsudoku.js \nvar libsudoku = require(\"./libsudoku.js\");\n\nvar output = function (board) {\n    var unsignedBoard = new Uint8Array(new Uint32Array(board).buffer);\n    return libsudoku.ccall(\"output\", undefined, [\"array\"], [unsignedBoard]);\n};\n\nvar sudoku = function sudoku(board, callback) {\n    var callbackPtr = libsudoku.Runtime.addFunction(function (resultPtr) {\n        var r = new Uint32Array(libsudoku.HEAPU8.buffer, resultPtr, 81);\n        callback([].slice.call(r));\n    });\n    var unsignedBoard = new Uint8Array(new Uint32Array(board).buffer);\n    sudoku._cfunc(unsignedBoard, callbackPtr);\n    libsudoku.Runtime.removeFunction(callbackPtr);\n};\nsudoku._cfunc = libsudoku.cwrap(\"sudoku\", undefined, [\"array\", \"number\"]);\n\n// main\nif (process.argv.length <= 2) {\n    // example problem from http://rosettacode.org/wiki/Sudoku\n    var problem = [\n        8, 5, 0, 0, 0, 2, 4, 0, 0,\n        7, 2, 0, 0, 0, 0, 0, 0, 9,\n        0, 0, 4, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 1, 0, 7, 0, 0, 2,\n        3, 0, 5, 0, 0, 0, 9, 0, 0,\n        0, 4, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 8, 0, 0, 7, 0,\n        0, 1, 7, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 3, 6, 0, 4, 0\n    ];\n    console.log(\"[problem]\");\n    output(problem);\n    console.log(\"[solution]\");\n    sudoku(problem, output);\n} else {\n    for (var i = 2; i < process.argv.length; i++) {\n        var problem = Array(81);\n        for (var j = 0; j < 81; j++) {\n            var ch = process.argv[i].charCodeAt(j);\n            problem[j] = 0 <= ch && ch <= 9 ? v : 0;\n        }\n        console.log(\"[problem]\");\n        output(problem);\n        console.log(\"[solution]\");\n        sudoku(problem, output);\n    }\n}\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001`main`\u3092\u542b\u3081\u3066\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u6642\u3068\u540c\u69d8\u306b\u3001**\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u4e0d\u8981**\u3067\u305d\u306e\u307e\u307e\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\n```bash\n$ iojs sudoku-call-libsudoku.js\n[problem]\n85.|..2|4..\n72.|...|..9\n..4|...|...\n---+---+---\n...|1.7|..2\n3.5|...|9..\n.4.|...|...\n---+---+---\n...|.8.|.7.\n.17|...|...\n...|.36|.4.\n\n[solution]\n859|612|437\n723|854|169\n164|379|528\n---+---+---\n986|147|352\n375|268|914\n241|593|786\n---+---+---\n432|981|675\n617|425|893\n598|736|241\n\n```\n\n# \u5b9f\u884c\u901f\u5ea6\u306e\u5206\u6790\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u5b9f\u884c\u306e`sudoku`\u3001C\u30b3\u30fc\u30c9\u5168\u90e8\u3092\u5909\u63db\u3057\u305f`sudoku.js`\u3001\u30e9\u30a4\u30d6\u30e9\u30ea`libsudoku.js`\u3092\u5229\u7528\u3059\u308b`sudoku-call-libsudoku.js`\u306e\u5b9f\u884c\u6642\u9593\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```\n$ time ./sudoku\nreal\t0m0.020s\nuser\t0m0.015s\nsys\t0m0.002s\n```\n\n```\n$ time iojs sudoku-call-libsudoku.js\nreal\t0m0.355s\nuser\t0m0.313s\nsys\t0m0.037s\n```\n\n```\n$ time iojs sudoku.js\nreal\t0m0.888s\nuser\t0m0.312s\nsys\t0m0.045s\n```\n\nC\u3067main\u3092\u5b9f\u88c5\u3059\u308b\u3088\u308a\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u5229\u7528\u3060\u3051\u306b\u3057\u305f\u307b\u3046\u304c\u901f\u3044\u3088\u3046\u3067\u3059(\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u95a2\u6570\u306f`printf`\u7b49\u3092\u907f\u3051`puts()`\u306e\u307f\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u305f\u306e\u3067\u3059\u304c)\u3002\n\n\u3061\u306a\u307f\u306b\u3001[JavaScript\u3067\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9](https://gist.github.com/bellbind/2415a53ff67b28233d94)\u3067\u306e\u5b9f\u884c\u6642\u9593\u306f\u3001\n\n```\n$ time iojs sudoku-backtrack.js\nreal\t0m0.723s\nuser\t0m0.684s\nsys\t0m0.030s\n```\n\n\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u76e4\u9762\u30921\u56de\u89e3\u304f\u3060\u3051\u306a\u3089C\u30b3\u30fc\u30c9\u5168\u90e8\u3092\u5909\u63db\u3057\u305f\u3082\u306e\u3088\u308a\u901f\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306fmain\u90e8\u5206\u306e\u30b3\u30b9\u30c8\u304c\u5927\u304d\u304f\u5f71\u97ff\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3057\u3087\u3046\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u5229\u7528\u306a\u3082\u306e\u304b\u3089\u306f\u3001\u500d\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u304a\u308a\u3001\u30bd\u30eb\u30d0\u30fc\u90e8\u5206\u306fEmscripten\u3067\u500d\u901f\u306b\u306a\u3063\u305f\u3068\u3044\u3048\u307e\u3059\u3002\n\n# \u7591\u554f: `ccall`\u3067\u306e`struct`\u5024\u6e21\u3057\u306e\u65b9\u6cd5\n\n`ccall`\u3084`cwrap`\u3067\u306f\u3001\u305f\u3068\u3048\u3070`float`4\u3064\u304c\u5165\u3063\u305f`vec4`\u306e\u3088\u3046\u306a**(\u30dd\u30a4\u30f3\u30bf\u6e21\u3057\u306b\u3057\u306a\u3044)`struct`\u5024\u3092\u6e21\u3059\u624b\u6bb5\u304c\u306a\u3044**\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\n\n# \u53c2\u8003: Emscripten\u306e\u6700\u9069\u5316\u53ca\u3073\u30c7\u30d0\u30c3\u30b0\u30aa\u30d7\u30b7\u30e7\u30f3\n\ngcc/clang\u3068\u540c\u69d8\u306b\u6700\u9069\u5316\u53ca\u3073\u30c7\u30d0\u30c3\u30b0\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u306f\u3001O0-3\u3068g1-4\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u610f\u5473\u306f\u5225\u7269\u3067Emscripten\u56fa\u6709\u306e\u610f\u5473\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\n- O0: \u6700\u9069\u5316\u306a\u3057(\u30c7\u30d5\u30a9\u30eb\u30c8)\n- O1: \u30c7\u30d0\u30c3\u30b0\u30b3\u30fc\u30c9\u304c\u524a\u9664\u3055\u308c\u308b\n- O2: \u51fa\u529b\u304cminify\u3055\u308c\u308b(`.js.mem`\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b)\n- O3: \u3055\u3089\u306a\u308b\u6700\u9069\u5316\u3092\u3059\u308b(O2\u3088\u308a\u82e5\u5e72\u30d5\u30a1\u30a4\u30eb\u304c\u5c0f\u3055\u304f\u306a\u308b)\n\nO2\u3084O3\u3067\u540c\u6642\u306b\u751f\u6210\u3055\u308c\u308b`.js.mem`\u30d5\u30a1\u30a4\u30eb\u306f\u751f\u6210\u3057\u305f`.js`\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306e\u306b\u5fc5\u9808\u306a\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30c7\u30d0\u30c3\u30b0\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001**O2\u4ee5\u964d\u306e\u6700\u9069\u5316\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u4f75\u7528\u3057\u3066minify\u5316\u3092\u6291\u5236**\u3059\u308b\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n- g1: \u7a7a\u767d\u3092\u4fdd\u5b58\n- g2: \u95a2\u6570\u540d\u3092\u4fdd\u5b58\n- g3: \u5909\u6570\u540d\u3092\u4fdd\u5b58\n- g4: \u30bd\u30fc\u30b9\u30de\u30c3\u30d7(.map\u30d5\u30a1\u30a4\u30eb)\u3092\u751f\u6210\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3078\u306e\u30ea\u30f3\u30af\n\n\u5b8c\u5168\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3001`Makefile`\u3092\u3064\u3051\u3066gist\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\n- https://gist.github.com/bellbind/64786335e8760e9c9756\n", "tags": ["JavaScriptES5", "Emscripten1.33.0", "CC11", "iojs2.2.1"]}