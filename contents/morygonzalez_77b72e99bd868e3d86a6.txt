{"context": " More than 1 year has passed since last update.Development \u3066\u3099\u306f\u9001\u4fe1\u3066\u3099\u304d\u3066\u3044\u308b\u306e\u306b\u3002\u306a\u3093\u3066\u3099\u3066\u3099\u3057\u3087\u3046\u304b\uff1f\n\u308f\u304b\u308a\u307e\u3057\u305f\u3002Production \u306e\u30e1\u30fc\u30eb\u9001\u4fe1\u306f Amazon SES \u3092\u4f7f\u3063\u3066\u305f\u306e\u304b\u3099\u539f\u56e0\u307b\u309a\u3044\u3002\n\nAmazon SES \u306f BCC \u304b\u3099\u82e6\u624b\u3089\u3057\u3044\n\u30a8\u30f3\u30bf\u30fc\u30d5\u309a\u30e9\u30a4\u30b9\u3099\u7528\u9014\u306b SES \u306f\u4f7f\u3048\u306a\u3044\u3001\u3068\u307e\u3066\u3099\u66f8\u3044\u3066\u3042\u308b\u3002\n\n\nAWS Developer Forums: Only bcc addresses ... \n\naws-ses.gem \u306e GitHub Issue \u306b\u3082\u66f8\u3044\u3066\u3042\u3063\u305f\u3002\n\nIssue #16: Bcc doesn't work through rails 3 \u00b7 drewblas/aws-ses\n\u30b3\u30fc\u30c8\u3099\u3092\u7121\u7406\u77e2\u7406\u30aa\u30fc\u30cf\u3099\u30fc\u30e9\u30a4\u30c8\u3099\u3059\u308c\u306f\u3099\u9001\u308c\u308b\u3053\u3068\u306f\u9001\u308c\u308b\u3088\u3046\u3066\u3099\u3059\u3002\n\nAWS::SES::SendEmail.class_eval do\n  #TN: made bbc work with ses\n  def send_raw_email(mail, args = {})\n    message = mail.is_a?(Hash) ? Mail.new(mail).to_s : mail.to_s\n    package = { 'RawMessage.Data' => Base64::encode64(message) }\n    package['Source'] = args[:from] if args[:from]\n    package['Source'] = args[:source] if args[:source]\n\n    # Extract the list of recipients based on arguments or mail headers\n    destinations = []\n    if args[:destinations]\n      destinations.concat args[:destinations].to_a\n    elsif args[:to]\n      destinations.concat args[:to].to_a\n    else\n      destinations.concat mail.to.to_a\n      destinations.concat mail.cc.to_a\n      destinations.concat mail.bcc.to_a\n    end\n    add_array_to_hash!(package, 'Destinations', destinations) if destinations.length > 0\n\n    request('SendRawEmail', package)\n  end\n\n  alias :deliver! :send_raw_email\n  alias :deliver  :send_raw_email\n\nend\n\n\nDevelopment \u3066\u3099\u306f\u9001\u4fe1\u3066\u3099\u304d\u3066\u3044\u308b\u306e\u306b\u3002\u306a\u3093\u3066\u3099\u3066\u3099\u3057\u3087\u3046\u304b\uff1f\n\n\u308f\u304b\u308a\u307e\u3057\u305f\u3002Production \u306e\u30e1\u30fc\u30eb\u9001\u4fe1\u306f Amazon SES \u3092\u4f7f\u3063\u3066\u305f\u306e\u304b\u3099\u539f\u56e0\u307b\u309a\u3044\u3002\n\n## Amazon SES \u306f BCC \u304b\u3099\u82e6\u624b\u3089\u3057\u3044\n\n\u30a8\u30f3\u30bf\u30fc\u30d5\u309a\u30e9\u30a4\u30b9\u3099\u7528\u9014\u306b SES \u306f\u4f7f\u3048\u306a\u3044\u3001\u3068\u307e\u3066\u3099\u66f8\u3044\u3066\u3042\u308b\u3002\n\n- [AWS Developer Forums: Only bcc addresses ...](https://forums.aws.amazon.com/thread.jspa?messageID=277021&#277021 \"AWS Developer Forums: Only bcc addresses ...\") \n\naws-ses.gem \u306e GitHub Issue \u306b\u3082\u66f8\u3044\u3066\u3042\u3063\u305f\u3002\n\n- [Issue #16: Bcc doesn't work through rails 3 \u00b7 drewblas/aws-ses](https://github.com/drewblas/aws-ses/issues/16 \"Issue #16: Bcc doesn't work through rails 3 \u00b7 drewblas/aws-ses\")\n\n- \u30b3\u30fc\u30c8\u3099\u3092\u7121\u7406\u77e2\u7406\u30aa\u30fc\u30cf\u3099\u30fc\u30e9\u30a4\u30c8\u3099\u3059\u308c\u306f\u3099\u9001\u308c\u308b\u3053\u3068\u306f\u9001\u308c\u308b\u3088\u3046\u3066\u3099\u3059\u3002\n\n```ruby\nAWS::SES::SendEmail.class_eval do\n  #TN: made bbc work with ses\n  def send_raw_email(mail, args = {})\n    message = mail.is_a?(Hash) ? Mail.new(mail).to_s : mail.to_s\n    package = { 'RawMessage.Data' => Base64::encode64(message) }\n    package['Source'] = args[:from] if args[:from]\n    package['Source'] = args[:source] if args[:source]\n    \n    # Extract the list of recipients based on arguments or mail headers\n    destinations = []\n    if args[:destinations]\n      destinations.concat args[:destinations].to_a\n    elsif args[:to]\n      destinations.concat args[:to].to_a\n    else\n      destinations.concat mail.to.to_a\n      destinations.concat mail.cc.to_a\n      destinations.concat mail.bcc.to_a\n    end\n    add_array_to_hash!(package, 'Destinations', destinations) if destinations.length > 0\n    \n    request('SendRawEmail', package)\n  end\n  \n  alias :deliver! :send_raw_email\n  alias :deliver  :send_raw_email\n    \nend\n```\n", "tags": ["ses", "Rails", "AWS"]}