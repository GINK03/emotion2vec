{"context": "\n\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n\n\nPython\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306ePEP8\u30c1\u30a7\u30c3\u30af\u3092\u8a66\u3057\u3066\u3044\u308b\u3002\n\u53c2\u8003\u3000http://qiita.com/clarinet758/items/312e95ee1513560dfdd1\n\n\u5b9f\u884c\n$ pep8 read_chpoint.py | head\nread_chpoint.py:20:1: E302 expected 2 blank lines, found 1\nread_chpoint.py:21:1: E101 indentation contains mixed spaces and tabs\nread_chpoint.py:21:1: W191 indentation contains tabs\n...\n\n\n\u30b3\u30fc\u30c9\u306e\u8a72\u5f53\u90e8\u5206\u306f\u4ee5\u4e0b\u306ewrap_fromfile()\u306edef\u306e\u884c\u3002\n\nread_chpoint.py\nimport numpy as np\nimport array\nimport sys\n\n'''\nv0.5 Dec. 23, 2016\n    - wrap_fromfile() takes [num] arg\nv0.4 Dec. 21, 2016\n    - read from \"auxiliary\" file [auxfp]\n        + add read_auxiliary_info()\nv0.3 Dec. 19, 2016\n    - add wrap_fromfile()\n    - read [inprodR],[prev_err],[resid_scale]\nv0.2 Dec. 19, 2016\n    - fix bug > read [local_nRows] for \"size_t\" type\nv0.1 Dec. 18, 2016\n    - read_chpoint_file() > read [ind_m],[local_nRows],[niter],[counter]\n'''\n\ndef wrap_fromfile(rfp, typecode, num):\n    res = array.array(typecode)\n...\n\n\n\n\u5bfe\u51e6\n\u30b3\u30e1\u30f3\u30c8\u306e\u4e0b\u306f\uff11\u884c\u306e\u7a7a\u767d\u884c\u306b\u3057\u3066\u3044\u305f\u304c\u3001\uff12\u884c\u306b\u3059\u308b\u3088\u3046\u3060\u3002\n\nread_chpoint.py\nimport numpy as np\nimport array\nimport sys\n\n'''\nv0.5 Dec. 23, 2016\n    - wrap_fromfile() takes [num] arg\nv0.4 Dec. 21, 2016\n    - read from \"auxiliary\" file [auxfp]\n        + add read_auxiliary_info()\nv0.3 Dec. 19, 2016\n    - add wrap_fromfile()\n    - read [inprodR],[prev_err],[resid_scale]\nv0.2 Dec. 19, 2016\n    - fix bug > read [local_nRows] for \"size_t\" type\nv0.1 Dec. 18, 2016\n    - read_chpoint_file() > read [ind_m],[local_nRows],[niter],[counter]\n'''\n\n\ndef wrap_fromfile(rfp, typecode, num):\n    res = array.array(typecode)\n    res.fromfile(rfp, num)\n...\n\n\n\u4e0a\u8a18\u306e\u4fee\u6b63\u306b\u3088\u308a\u95a2\u9023\u30a8\u30e9\u30fc\u304c\u306a\u304f\u306a\u3063\u305f\u3002\n\n\u5b9f\u884c\n$ pep8 read_chpoint.py | head\nread_chpoint.py:22:1: E101 indentation contains mixed spaces and tabs\nread_chpoint.py:22:1: W191 indentation contains tabs\nread_chpoint.py:23:1: W191 indentation contains tabs\nread_chpoint.py:24:1: W191 indentation contains tabs\nread_chpoint.py:26:1: E302 expected 2 blank lines, found 1\nread_chpoint.py:27:1: W191 indentation contains tabs\nread_chpoint.py:28:1: W191 indentation contains tabs\nread_chpoint.py:28:35: E261 at least two spaces before inline comment\nread_chpoint.py:28:36: E262 inline comment should start with '# '\nread_chpoint.py:29:1: W191 indentation contains tabs\n\n\n```txt:\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n```\n\nPython\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306ePEP8\u30c1\u30a7\u30c3\u30af\u3092\u8a66\u3057\u3066\u3044\u308b\u3002\n\u53c2\u8003\u3000http://qiita.com/clarinet758/items/312e95ee1513560dfdd1\n\n```txt:\u5b9f\u884c\n$ pep8 read_chpoint.py | head\nread_chpoint.py:20:1: E302 expected 2 blank lines, found 1\nread_chpoint.py:21:1: E101 indentation contains mixed spaces and tabs\nread_chpoint.py:21:1: W191 indentation contains tabs\n...\n```\n\n\u30b3\u30fc\u30c9\u306e\u8a72\u5f53\u90e8\u5206\u306f\u4ee5\u4e0b\u306e`wrap_fromfile()`\u306edef\u306e\u884c\u3002\n\n```read_chpoint.py\nimport numpy as np\nimport array\nimport sys\n\n'''\nv0.5 Dec. 23, 2016\n    - wrap_fromfile() takes [num] arg\nv0.4 Dec. 21, 2016\n    - read from \"auxiliary\" file [auxfp]\n        + add read_auxiliary_info()\nv0.3 Dec. 19, 2016\n    - add wrap_fromfile()\n    - read [inprodR],[prev_err],[resid_scale]\nv0.2 Dec. 19, 2016\n    - fix bug > read [local_nRows] for \"size_t\" type\nv0.1 Dec. 18, 2016\n    - read_chpoint_file() > read [ind_m],[local_nRows],[niter],[counter]\n'''\n\ndef wrap_fromfile(rfp, typecode, num):\n\tres = array.array(typecode)\n...\n```\n\n### \u5bfe\u51e6\n\n\u30b3\u30e1\u30f3\u30c8\u306e\u4e0b\u306f\uff11\u884c\u306e\u7a7a\u767d\u884c\u306b\u3057\u3066\u3044\u305f\u304c\u3001\uff12\u884c\u306b\u3059\u308b\u3088\u3046\u3060\u3002\n\n```read_chpoint.py\nimport numpy as np\nimport array\nimport sys\n\n'''\nv0.5 Dec. 23, 2016\n    - wrap_fromfile() takes [num] arg\nv0.4 Dec. 21, 2016\n    - read from \"auxiliary\" file [auxfp]\n        + add read_auxiliary_info()\nv0.3 Dec. 19, 2016\n    - add wrap_fromfile()\n    - read [inprodR],[prev_err],[resid_scale]\nv0.2 Dec. 19, 2016\n    - fix bug > read [local_nRows] for \"size_t\" type\nv0.1 Dec. 18, 2016\n    - read_chpoint_file() > read [ind_m],[local_nRows],[niter],[counter]\n'''\n\n\ndef wrap_fromfile(rfp, typecode, num):\n\tres = array.array(typecode)\n\tres.fromfile(rfp, num)\n...\n```\n\n\u4e0a\u8a18\u306e\u4fee\u6b63\u306b\u3088\u308a\u95a2\u9023\u30a8\u30e9\u30fc\u304c\u306a\u304f\u306a\u3063\u305f\u3002\n\n```txt:\u5b9f\u884c\n$ pep8 read_chpoint.py | head\nread_chpoint.py:22:1: E101 indentation contains mixed spaces and tabs\nread_chpoint.py:22:1: W191 indentation contains tabs\nread_chpoint.py:23:1: W191 indentation contains tabs\nread_chpoint.py:24:1: W191 indentation contains tabs\nread_chpoint.py:26:1: E302 expected 2 blank lines, found 1\nread_chpoint.py:27:1: W191 indentation contains tabs\nread_chpoint.py:28:1: W191 indentation contains tabs\nread_chpoint.py:28:35: E261 at least two spaces before inline comment\nread_chpoint.py:28:36: E262 inline comment should start with '# '\nread_chpoint.py:29:1: W191 indentation contains tabs\n```\n", "tags": ["Python", "borgWarp", "codingRule"]}