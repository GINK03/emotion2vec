{"context": "\n\n\u306f\u3058\u3081\u306b\nWireshark \u306e Lua\u30b9\u30af\u30ea\u30d7\u30c8\u89e3\u6790\u306e\u6642\u306bProto \u3092\u6307\u5b9a\u3057\u305f\u5f8c\u306b ProtoField \u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u304c\u3001ProtoField \u306b\u30b5\u30d6\u30c4\u30ea\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306bProtoField\u306b\u6587\u5b57\u304c\u8868\u793a\u3055\u308c\u3063\u3071\u306a\u3057\u306a\u306e\u304c\u5acc\u3067\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n\u6b63\u76f4\u3053\u3093\u306a\u7cde\u307f\u305f\u3044\u306a\u8a18\u4e8b\u3092\u66f8\u304f\u306e\u306f\u8e8a\u8e87\u308f\u308c\u307e\u3057\u305f\u304c\u3001\u5c11\u3057\u3067\u3082\u8ab0\u304b\u306e\u5f79\u306b\u7acb\u3066\u308c\u3070\u826f\u3044\u306a\u3068\u601d\u3063\u3066\u30a8\u30f3\u30c8\u30ea\u30fc\u3057\u307e\u3057\u305f\u3002\n\n\u304a\u3089\u3055\u3044\nLua\u30b9\u30af\u30ea\u30d7\u30c8\u3067TCP\u3092\u89e3\u6790\u3059\u308b\u969b\u306e\u66f8\u304d\u65b9\u3092\u7c21\u5358\u306b\u307e\u3068\u3081\u307e\u3057\u305f( Wireshark2.0.5/Lua5.2 )\n\u8a73\u3057\u3044\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u3057\u3066\u30b0\u30b0\u3063\u3066\u4e0b\u3055\u3044\u3002\nPP_PROTOCOL = Proto.new (\"pp\", \"PP Network Protocol\")\n\n-- protocol fields \u306e\u4f5c\u6210\nf_pp = PP_PROTOCOL.fields\n\n\nCmdName = { -- PP Commands,\n            [0x2510] = \"Request\",\n            [0x2520] = \"Response\"}\n\nResults = { [0x0000] = \"Success\",\n            [0x0001] = \"Error\"}\n\n\n-- \u30d1\u30b1\u30c3\u30c8\u5185\u306e\u5168\u3066\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f8\u304f\nf_pp.identifier   = ProtoField.string (\"pp.identifier\",   \"Packet Identifier\")\nf_pp.tcpCmd       = ProtoField.uint16 (\"pp.tcpCommand\",   \"Command\",       base.HEX, CmdName)\nf_pp.result       = ProtoField.uint16 (\"pp.result\",       \"Result\",        base.HEX, Results)\nf_pp.packetID     = ProtoField.uint16 (\"pp.packetID\",     \"Packet ID\",     base.HEX)\nf_pp.sessionID    = ProtoField.uint16 (\"pp.sessionID\",    \"Session ID\",    base.HEX)\nf_pp.packetLength = ProtoField.uint16 (\"pp.packetLength\", \"Packet Length\", base.DEC)\nf_pp.applicationData = ProtoField.bytes (\"pp.data\", \"Application Data\")\n\n-- \u30b5\u30d6\u30c4\u30ea\u30fc\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f8\u304f\nf_pp.PrinterStatus = ProtoField.uint8  (\"pp.info\", \"Stat\",  base.HEX)\nf_pp.UsingClient   = ProtoField.uint8  (\"pp.info\", \"Using\", base.HEX)\nf_pp.EqTrayInfo    = ProtoField.uint8  (\"pp.info\", \"Tray\",  base.HEX)\n\n\n-- Register the dissector to the TCP Table using the retrieved\nport = 600\ntcp_table = DissectorTable.get (\"tcp.port\")\ntcp_table:add (port, PP_PROTOCOL)\n\n-- TCP(600) \u306e\u30d1\u30b1\u30c3\u30c8\u306f\u3053\u306e\u95a2\u6570\u3067dissector(\u89e3\u5256)\u3055\u308c\u308b\nfunction PP_PROTOCOL.dissector (buffer, pinfo, tree)\n\n    -- Protocol\u30ab\u30e9\u30e0\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u540d\u3092\u8868\u793a\u3059\u308b\n    pinfo.cols.protocol = \"PPP\"\n\n    -- PP_PROTOCOL \u3092\u30c4\u30ea\u30fc\u69cb\u9020\u306b\u3059\u308b\n    local ppTree = tree:add (PP_PROTOCOL, buffer())\n\n    local identifier = buffer(0,4):string()\n    if( identifier == \"PPP\") then\n\n        ppTree:add (f_pp.identifier  , buffer( 0, 4))\n        ppTree:add (f_pp.tcpCmd      , buffer( 4, 2))\n        ppTree:add (f_pp.result      , buffer( 6, 2))\n        ppTree:add (f_pp.packetID    , buffer( 8, 2))\n        ppTree:add (f_pp.sessionID   , buffer(10, 2))\n        ppTree:add (f_pp.packetLength, buffer(12, 4))\n\n        -- Application Data \u3092\u30c4\u30ea\u30fc\u69cb\u9020\u306b\u3059\u308b\n        local subTree  = ppTree:add (f_pp.applicationData, buffer(16, buffer:len()-16) )\n\n        subTree:add (f_pp.stat,  buffer(16+0, 2),  buffer(16+0, 2):le_uint())\n        subTree:add (f_pp.using, buffer(16+2, 1),  buffer(16+2, 1):le_uint())\n        subTree:add (f_pp.tray,  buffer(16+3, 1),  buffer(16+3, 1):le_uint())\n    else\n        -- \u30d1\u30b1\u30c3\u30c8\u304c\"PPP\"\u304b\u3089\u59cb\u307e\u3089\u306a\u3044\u5834\u5408\u306f\u30d1\u30b1\u30c3\u30c8\u5168\u4f53\u3092\"Application Data\"\u3068\u3059\u308b\n        ppTree:add (f_pp.applicationData, buffer(0, buffer:len()) )\n    end\nend\n\n\n\u4fee\u6b63\u65b9\u6cd5\nf_pp.applicationData = ProtoField.bytes (\"pp.data\", \"Application Data\")\n\u3092\nf_pp.applicationData = ProtoField.none (\"pp.data\", \"Application Data\")\n\u306b\u5909\u3048\u308c\u3070\u9805\u76ee\u306f\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u306e\u4ed6\nApplication Data\u306e\u9805\u76ee\u306b\u3064\u3044\u3066\u30d0\u30a4\u30c8\u5217\u3092\u8868\u793a\u3059\u308b\u3088\u308a\u30b5\u30a4\u30ba\u3092\u51fa\u3057\u305f\u65b9\u304c\u4fbf\u5229\u3058\u3083\u306a\u3044\u304b\uff1f\u3068\u601d\u3063\u3066\u4ee5\u4e0b\u306e\u5bfe\u5fdc\u3092\u3057\u305f\u3089\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n    -- Application Data \u3092\u30c4\u30ea\u30fc\u69cb\u9020\u306b\u3059\u308b\n    local subTree  = ppTree:add (f_pp.applicationData, buffer(16, buffer:len()-16), \"(\"..buffer:len()-16..\")\" )\n\n\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3002\n    -- Application Data \u3092\u30c4\u30ea\u30fc\u69cb\u9020\u306b\u3059\u308b\n    local subTree  = ppTree:add (buffer(16, buffer:len()-16), \"(\"..buffer:len()-16..\")\" )\n\n\u3053\u308c\u3067\u3053\u3093\u306a\u98a8\u306b\u51fa\u6765\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u65b9\u6cd5\u304c\u3042\u308b\u306a\u3089f_pp.applicationData = ProtoField.none (\"pp.data\", \"Application Data\")\u306f\u4e0d\u8981\u3067\u3059\u306d\u3002\n\n\u307e\u3068\u3081\nWireshark\u306eLauaAPI\u4ed5\u69d8\u66f8\u3092\u898b\u308b\u3068\u4e0a\u8a18\u4ee5\u5916\u306b\u3082\u66f8\u304d\u65b9\u304c\u8907\u6570\u3042\u308b\u3063\u307d\u3044\u3002\n\u53d6\u308a\u5408\u3048\u305a\u3084\u308a\u305f\u3044\u4e8b\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u5b9f\u73fe\u51fa\u6765\u305f\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\nWireshark \u306e Lua\u30b9\u30af\u30ea\u30d7\u30c8\u89e3\u6790\u306e\u6642\u306bProto \u3092\u6307\u5b9a\u3057\u305f\u5f8c\u306b ProtoField \u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u304c\u3001ProtoField \u306b\u30b5\u30d6\u30c4\u30ea\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306bProtoField\u306b\u6587\u5b57\u304c\u8868\u793a\u3055\u308c\u3063\u3071\u306a\u3057\u306a\u306e\u304c\u5acc\u3067\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n![\u7121\u984c2.png](https://qiita-image-store.s3.amazonaws.com/0/112253/65e4a255-5853-92ae-0105-5e7504161712.png)\n\n\u6b63\u76f4\u3053\u3093\u306a\u7cde\u307f\u305f\u3044\u306a\u8a18\u4e8b\u3092\u66f8\u304f\u306e\u306f\u8e8a\u8e87\u308f\u308c\u307e\u3057\u305f\u304c\u3001\u5c11\u3057\u3067\u3082\u8ab0\u304b\u306e\u5f79\u306b\u7acb\u3066\u308c\u3070\u826f\u3044\u306a\u3068\u601d\u3063\u3066\u30a8\u30f3\u30c8\u30ea\u30fc\u3057\u307e\u3057\u305f\u3002\n\n\n# \u304a\u3089\u3055\u3044\n\nLua\u30b9\u30af\u30ea\u30d7\u30c8\u3067TCP\u3092\u89e3\u6790\u3059\u308b\u969b\u306e\u66f8\u304d\u65b9\u3092\u7c21\u5358\u306b\u307e\u3068\u3081\u307e\u3057\u305f( Wireshark2.0.5/Lua5.2 )\n\u8a73\u3057\u3044\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u3057\u3066\u30b0\u30b0\u3063\u3066\u4e0b\u3055\u3044\u3002\n\n```Lua\nPP_PROTOCOL = Proto.new (\"pp\", \"PP Network Protocol\")\n\n-- protocol fields \u306e\u4f5c\u6210\nf_pp = PP_PROTOCOL.fields\n\n\nCmdName = { -- PP Commands,\n            [0x2510] = \"Request\",\n            [0x2520] = \"Response\"}\n\nResults = { [0x0000] = \"Success\",\n            [0x0001] = \"Error\"}\n\n\n-- \u30d1\u30b1\u30c3\u30c8\u5185\u306e\u5168\u3066\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f8\u304f\nf_pp.identifier   = ProtoField.string (\"pp.identifier\",   \"Packet Identifier\")\nf_pp.tcpCmd       = ProtoField.uint16 (\"pp.tcpCommand\",   \"Command\",       base.HEX, CmdName)\nf_pp.result       = ProtoField.uint16 (\"pp.result\",       \"Result\",        base.HEX, Results)\nf_pp.packetID     = ProtoField.uint16 (\"pp.packetID\",     \"Packet ID\",     base.HEX)\nf_pp.sessionID    = ProtoField.uint16 (\"pp.sessionID\",    \"Session ID\",    base.HEX)\nf_pp.packetLength = ProtoField.uint16 (\"pp.packetLength\", \"Packet Length\", base.DEC)\nf_pp.applicationData = ProtoField.bytes (\"pp.data\", \"Application Data\")\n\n-- \u30b5\u30d6\u30c4\u30ea\u30fc\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f8\u304f\nf_pp.PrinterStatus = ProtoField.uint8  (\"pp.info\", \"Stat\",  base.HEX)\nf_pp.UsingClient   = ProtoField.uint8  (\"pp.info\", \"Using\", base.HEX)\nf_pp.EqTrayInfo    = ProtoField.uint8  (\"pp.info\", \"Tray\",  base.HEX)\n\n\n-- Register the dissector to the TCP Table using the retrieved\nport = 600\ntcp_table = DissectorTable.get (\"tcp.port\")\ntcp_table:add (port, PP_PROTOCOL)\n\n-- TCP(600) \u306e\u30d1\u30b1\u30c3\u30c8\u306f\u3053\u306e\u95a2\u6570\u3067dissector(\u89e3\u5256)\u3055\u308c\u308b\nfunction PP_PROTOCOL.dissector (buffer, pinfo, tree)\n\n    -- Protocol\u30ab\u30e9\u30e0\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u540d\u3092\u8868\u793a\u3059\u308b\n    pinfo.cols.protocol = \"PPP\"\n\n    -- PP_PROTOCOL \u3092\u30c4\u30ea\u30fc\u69cb\u9020\u306b\u3059\u308b\n    local ppTree = tree:add (PP_PROTOCOL, buffer())\n\n    local identifier = buffer(0,4):string()\n    if( identifier == \"PPP\") then\n\n        ppTree:add (f_pp.identifier  , buffer( 0, 4))\n        ppTree:add (f_pp.tcpCmd      , buffer( 4, 2))\n        ppTree:add (f_pp.result      , buffer( 6, 2))\n        ppTree:add (f_pp.packetID    , buffer( 8, 2))\n        ppTree:add (f_pp.sessionID   , buffer(10, 2))\n        ppTree:add (f_pp.packetLength, buffer(12, 4))\n\n        -- Application Data \u3092\u30c4\u30ea\u30fc\u69cb\u9020\u306b\u3059\u308b\n        local subTree  = ppTree:add (f_pp.applicationData, buffer(16, buffer:len()-16) )\n\n        subTree:add (f_pp.stat,  buffer(16+0, 2),  buffer(16+0, 2):le_uint())\n        subTree:add (f_pp.using, buffer(16+2, 1),  buffer(16+2, 1):le_uint())\n        subTree:add (f_pp.tray,  buffer(16+3, 1),  buffer(16+3, 1):le_uint())\n    else\n        -- \u30d1\u30b1\u30c3\u30c8\u304c\"PPP\"\u304b\u3089\u59cb\u307e\u3089\u306a\u3044\u5834\u5408\u306f\u30d1\u30b1\u30c3\u30c8\u5168\u4f53\u3092\"Application Data\"\u3068\u3059\u308b\n        ppTree:add (f_pp.applicationData, buffer(0, buffer:len()) )\n    end\nend\n```\n\n# \u4fee\u6b63\u65b9\u6cd5\n\n`f_pp.applicationData = ProtoField.bytes (\"pp.data\", \"Application Data\")`\n\n\u3092\n\n`f_pp.applicationData = ProtoField.none (\"pp.data\", \"Application Data\")`\n\n\u306b\u5909\u3048\u308c\u3070\u9805\u76ee\u306f\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\n# \u305d\u306e\u4ed6\n\nApplication Data\u306e\u9805\u76ee\u306b\u3064\u3044\u3066\u30d0\u30a4\u30c8\u5217\u3092\u8868\u793a\u3059\u308b\u3088\u308a\u30b5\u30a4\u30ba\u3092\u51fa\u3057\u305f\u65b9\u304c\u4fbf\u5229\u3058\u3083\u306a\u3044\u304b\uff1f\u3068\u601d\u3063\u3066\u4ee5\u4e0b\u306e\u5bfe\u5fdc\u3092\u3057\u305f\u3089\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```Lua\n    -- Application Data \u3092\u30c4\u30ea\u30fc\u69cb\u9020\u306b\u3059\u308b\n    local subTree  = ppTree:add (f_pp.applicationData, buffer(16, buffer:len()-16), \"(\"..buffer:len()-16..\")\" )\n```\n\n\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3002\n\n```Lua\n    -- Application Data \u3092\u30c4\u30ea\u30fc\u69cb\u9020\u306b\u3059\u308b\n    local subTree  = ppTree:add (buffer(16, buffer:len()-16), \"(\"..buffer:len()-16..\")\" )\n```\n\n\u3053\u308c\u3067\u3053\u3093\u306a\u98a8\u306b\u51fa\u6765\u307e\u3057\u305f\u3002\n![modify.png](https://qiita-image-store.s3.amazonaws.com/0/112253/d61557d0-2145-4932-e14b-206de3067023.png)\n\n\n\u3053\u306e\u65b9\u6cd5\u304c\u3042\u308b\u306a\u3089`f_pp.applicationData = ProtoField.none (\"pp.data\", \"Application Data\")`\u306f\u4e0d\u8981\u3067\u3059\u306d\u3002\n\n# \u307e\u3068\u3081\nWireshark\u306eLauaAPI\u4ed5\u69d8\u66f8\u3092\u898b\u308b\u3068\u4e0a\u8a18\u4ee5\u5916\u306b\u3082\u66f8\u304d\u65b9\u304c\u8907\u6570\u3042\u308b\u3063\u307d\u3044\u3002\n\u53d6\u308a\u5408\u3048\u305a\u3084\u308a\u305f\u3044\u4e8b\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u5b9f\u73fe\u51fa\u6765\u305f\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n", "tags": ["Wireshark", "Lua"]}