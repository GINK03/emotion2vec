{"context": "\n\nlibshogi \u3067\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308d\u3046 (1)\n\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cbAdventCalendar 2016\u300023 \u4eba\u76ee\u306e tsoftware \u3067\u3059\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u6a5f\u4f1a\u3092\u8a2d\u3051\u3066\u304f\u3060\u3055\u3063\u305f\u5e73\u5ca1\u3055\u3093\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\uff0e\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0c\u521d\u3081\u3066\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u65b9\u5411\u3051\u306b\uff0clibshogi \u3092\u4f7f\u3063\u305f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u767a\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\nlibshogi \u306e\u7d39\u4ecb\n\nlibshogi \u3068\u306f\nlibshogi \u306f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u305f\u3081\u306e\u9053\u5177\u3092\u63d0\u4f9b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\uff0e\u7b2c24\u56de\u4e16\u754c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u9078\u624b\u6a29\u304b\u3089 libshogi \u3092\u4f7f\u3063\u305f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c libshogi \u306e\u540d\u524d\u3067\u51fa\u5834\u3057\u3066\u3044\u307e\u3059\uff0e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u9078\u624b\u6a29\u306b\u304a\u3051\u308b\u30ab\u30c4\u4e3c\u5c06\u68cb\u3055\u3093\u3068\u306e\u5c06\u68cb\u306f\uff0c\u6b63\u5f0f\u306b\u8a18\u9332\u304c\u6b8b\u308b\u5c06\u68cb\u306e\u5bfe\u5c40\u3068\u3057\u3066\u306f\u304a\u305d\u3089\u304f\u521d\u3081\u3066\u306e\u30b9\u30c6\u30a4\u30eb\u30e1\u30a4\u30c8\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\n\u30b9\u30c6\u30a4\u30eb\u30e1\u30a4\u30c8\u306b\u306a\u3063\u305f\u306e\u306f\u4e00\u624b\u8a70\u3081\u304c\u8aad\u3081\u306a\u3044\u306a\u3069 libshogi \u306e\u5f31\u3055\u304c\u539f\u56e0\u3067\u3059\uff0e\u3067\u3082\u9078\u624b\u6a29\u306e libshogi \u304c\u5f31\u3044\u306e\u306f libshogi \u4e0a\u3067\u52d5\u3044\u3066\u3044\u308b\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5f31\u3044\u306e\u3067\u3042\u3063\u3066\u30e9\u30a4\u30d6\u30e9\u30ea libshogi \u306e\u8cac\u4efb\u3067\u306f\u3042\u308a\u307e\u305b\u3093 (\u591a\u5206)\nlibshogi \u306f\u5c06\u68cb\u76e4\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3084\u5408\u6cd5\u624b\u751f\u6210\u306a\u3069\u57fa\u672c\u7684\u306a\u6a5f\u80fd\u306e\u307f\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e\u5c06\u68cb\u306e\u6226\u7565\u306f\u305d\u306e\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u62c5\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\uff0c\u4f5c\u308a\u65b9\u6b21\u7b2c\u3067\u5f37\u304f\u3082\u5f31\u304f\u3082\u306a\u308a\u307e\u3059\uff0e\n\n\u958b\u767a\u8005\n\u958b\u767a\u306f\u9999\u5ddd\u9ad8\u5c02\u8a6b\u9593\u30ad\u30e3\u30f3\u30d1\u30b9\u85e4\u4e95\u7814\u7a76\u5ba4\u3068 tsoftware \u3067\u884c\u3063\u3066\u3044\u307e\u3059\uff0e\u5c06\u68cb\u3092\u6559\u6750\u306b\u4eba\u5de5\u77e5\u80fd\u306e\u5b66\u7fd2\u304c\u3067\u304d\u305f\u3089\u697d\u3057\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3067 libshogi \u3068\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u308b\u5b66\u7fd2\u6559\u6750\u306e\u5171\u540c\u958b\u767a\u3092\u59cb\u3081\u307e\u3057\u305f\uff0e\u5168\u304f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\uff0c\u85e4\u4e95\u3064\u306a\u304c\u308a\u3067\uff0c\u30e1\u30f3\u30d0\u30fc\u5168\u54e1\u304c\u632f\u308a\u98db\u8eca\u515a\u3067\u85e4\u4e95\u731b\u4e5d\u6bb5\u306e\u30d5\u30a1\u30f3\u3067\u3059\uff0e\n\n\u958b\u767a\u306e\u52d5\u6a5f\n\u85e4\u4e95\u7814\u7a76\u5ba4\u3067\u306f\u5c06\u68cb\u3092\u7d20\u6750\u306b\uff0c\u5b66\u751f\u304c\u63a2\u7d22\u306a\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u624b\u6cd5\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u5b66\u7fd2\u306b\u304a\u3044\u3066\u554f\u984c\u3068\u306a\u3063\u305f\u306e\u304c\u5c06\u68cb\u306e\u5bfe\u5c40\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u306e\u96e3\u3057\u3055\u3067\u3057\u305f\uff0e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u6570\u591a\u304f\u306e\u8457\u540d\u306a\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3069\u308c\u3082\u82f1\u77e5\u306e\u7d50\u6676\u3067\u3042\u308a\uff0c\u4e39\u5ff5\u306b\u8aad\u3080\u3053\u3068\u306b\u3088\u308a\u7d20\u6674\u3089\u3057\u3044\u77e5\u898b\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u4e00\u65b9\u3067\u305d\u308c\u3089\u306f\u4eba\u3092\u8d85\u3048\u308b\u3053\u3068\u3092\u76ee\u6a19\u306b\u78e8\u304d\u629c\u304b\u308c\u3066\u304d\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u306e\u3067\u7c21\u5358\u306b\u306f\u7406\u89e3\u3067\u304d\u307e\u305b\u3093\uff0e\u305d\u3053\u3067 C++ \u306e\u57fa\u672c\u7684\u306a\u6587\u6cd5\u3092\u77e5\u3063\u3066\u3044\u308b\u5b66\u751f\u304c\u77ed\u671f\u9593\u3067\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u59cb\u3081\u308b\u3068\u3053\u308d\u307e\u3067\u5230\u9054\u3067\u304d\u308b\u3053\u3068\u3092\u76ee\u6a19\u306b\u5b66\u7fd2\u7528\u306e\u5c06\u68cb\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u767a\u3057\u307e\u3057\u305f\uff0e\n\n\u7279\u5fb4\nlibshogi \u306f x64 \u74b0\u5883\u3067\u52d5\u4f5c\u3057\u307e\u3059\uff0e\u5185\u90e8\u3067\u306f \u7e26\u578b\u30d3\u30c3\u30c8\u30dc\u30fc\u30c9 \u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\u5229\u304d\u30c6\u30fc\u30d6\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u8a08\u7b97\u306b\u306f PEXT \u547d\u4ee4\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\u5c11\u3057\u9045\u304f\u306a\u308a\u307e\u3059\u304c PEXT \u547d\u4ee4\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044 (BMI2 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044) \u578b\u756a\u306e CPU \u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\uff0e\nlibshogi \u306f Boost \u3084 STL \u306a\u3069\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u305b\u305a\u306b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\uff0e\u30ea\u30b9\u30c8\u3084\u914d\u5217\u306a\u3069\u306e\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067 libshogi \u3060\u3051\u3067\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\uff0e\u5168\u3066\u306e\u6a5f\u80fd\u304c\u4e00\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u5b8c\u7d50\u3057\u3066\u3044\u308b\u3053\u3068\u306e\u30e1\u30ea\u30c3\u30c8\u306f\u30c7\u30d0\u30c3\u30b0\u306e\u3057\u3084\u3059\u3055\u3067\u3059\uff0e\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u554f\u984c\u304c\u3042\u3063\u3066\u3082\uff0c\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u306a\u3069\u306f\u5f80\u3005\u306b\u3057\u3066\u30ea\u30b9\u30c8\u3084\u914d\u5217\u306e\u4e2d\u3067\u767a\u751f\u3057\u307e\u3059\uff0e\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3082\u542b\u3081\u3066\u4e00\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u5b8c\u7d50\u3057\u3066\u3044\u308c\u3070\u554f\u984c\u306e\u5168\u4f53\u50cf\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\uff0e\u307e\u305f\uff0c\u6027\u80fd\u306e\u571f\u53f0\u3068\u306a\u308b\u90e8\u5206\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u7528\u306b\u6700\u9069\u5316\u3059\u308b\u4f59\u5730\u304c\u3042\u308b\u3068\u3044\u3046\u306e\u3082\u30e1\u30ea\u30c3\u30c8\u3067\u3059\uff0e\n\nlibshogi \u304c\u63d0\u4f9b\u3059\u308b\u3082\u306e\n\u56f3-1 \u306b libshogi \u306e\u968e\u5c64\u30e2\u30c7\u30eb\u3092\u793a\u3057\u307e\u3059\uff0e\u6700\u3082\u91cd\u8981\u306a\u306e\u306f\uff0c\u63a2\u7d22\uff0c\u5b9a\u8de1\uff0c\u5b66\u7fd2\u306a\u3069\u306e\u6226\u7565\u3092\u53f8\u308b\u90e8\u5206\u3067\u3059\uff0elibshogi \u3092\u4f7f\u7528\u3057\u3066\u958b\u767a\u884c\u3046\u5834\u5408\uff0c\u3053\u306e\u90e8\u5206\u3092\u81ea\u4f5c\u306e\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u4f5c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0elibshogi \u306f\u7db2\u639b\u3051\u3055\u308c\u305f\u6a5f\u80fd\u306e\u307f\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0efoundation \u5c64\u3067\u306f\uff0c\u30a2\u30c8\u30df\u30c3\u30af\u64cd\u4f5c\uff0c\u30ed\u30c3\u30af\uff0c\u30b9\u30ec\u30c3\u30c9\uff0c\u30ea\u30b9\u30c8\uff0c\u306a\u3069\u306e\u57fa\u672c\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u64cd\u4f5c\uff0cgame \u5c64\u3067\u306f\uff0c\u30eb\u30fc\u30eb\u901a\u308a\u6307\u3059\u305f\u3081\u306e\u5c06\u68cb\u6a5f\u80fd\uff0c\u5916\u90e8\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306e\u901a\u4fe1\u6a5f\u80fd\u306a\u3069\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e\n\n\u56f3-1\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\nlibshogi \u306f LGPL \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\uff0e\u30b7\u30a7\u30a2\u30fc\u30c9\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30ea\u30f3\u30af\u3057\u3066\u4f7f\u7528\u3044\u305f\u3060\u304f\u9650\u308a\u306f\uff0c\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u672c\u4f53\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u958b\u793a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u30e9\u30a4\u30d6\u30e9\u30ea\u672c\u4f53\u306b\u52a0\u3048\u305f\u5909\u66f4\u3060\u3051\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0elibshogi \u306b\u306f SIMD-oriented Fast Mersenne Twister (SFMT) \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306b\u3064\u3044\u3066\u306f SFMT \u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b LICENSE.txt \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \n\nlibshogi \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nlibshogi \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u7c21\u5358\u3067\u3059\uff0e\u3053\u3053\u3067\u306f Fedora 25 Server \u306b\u6700\u5c0f\u69cb\u6210\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n\u52d5\u4f5c\u74b0\u5883\n\nx64\nBerkeley \u30bd\u30b1\u30c3\u30c8\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b POSIX \u30b7\u30b9\u30c6\u30e0 (Linux \u306a\u3069)\ngcc 5.1 \u3082\u3057\u304f\u306f\u305d\u308c\u4ee5\u4e0a (c++14 \u306e\u30b5\u30dd\u30fc\u30c8)\n\nlibshogi \u306f Fedora 25\uff0cUbuntu 16.04\uff0cLinux Mint 18 \u3067\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\uff0e\u65b0\u3057\u304f\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u306e\u3067\u3042\u308c\u3070\uff0c\u30a8\u30c7\u30a3\u30bf\u306a\u3069\u306e\u57fa\u672c\u7684\u306a\u9053\u5177\u304c\u521d\u3081\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b Linux Mint 18 \u304c\u304a\u3059\u3059\u3081\u3067\u3059\uff0eFedora 25 Server \u3092\u6700\u5c0f\u69cb\u6210\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\uff0cgcc-c++\uff0cmake\uff0cctags\uff0cvim \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308c\u3070\u77ed\u6642\u9593\u306b\u958b\u767a\u74b0\u5883\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u304c FreeBSD \u306a\u3069\u4ed6\u306e POSIX \u30b7\u30b9\u30c6\u30e0\u3067\u3082\u52d5\u4f5c\u3059\u308b\u306f\u305a\u3067\u3059\uff0e\n\nFedora 25 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nFedora 25 \u3067\u6700\u5c0f\u9650\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0eFedora \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb CD/DVD \u306e ISO \u30a4\u30e1\u30fc\u30b8\u306fFedora Server \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8 \u304b\u3089\u5165\u624b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u4f7f\u7528\u3067\u304d\u308b\u74b0\u5883\u3067\u3042\u308c\u3070\u30cd\u30c3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30a4\u30e1\u30fc\u30b8\u304c\u7c21\u4fbf\u3067\u3059\uff0e\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u304c\u8d77\u52d5\u3057\u305f\u3089 Install Fedora 25 \u3092\u9078\u3073\u307e\u3059\uff0e\n\n\u8a00\u8a9e\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u9078\u629e(S) \u3092\u6700\u5c0f\u9650\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u3057\u307e\u3059\uff0e\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148 (D)\u3092\u958b\u3044\u3066\u78ba\u8a8d\u3068\u5b8c\u4e86\u3092\u884c\u3046\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u958b\u59cb(B)\u3092\u62bc\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u30c7\u30a3\u30b9\u30af\u306b\u3042\u308b\u30c7\u30fc\u30bf\u306f\u5168\u3066\u5931\u308f\u308c\u307e\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u9593\u306bROOT \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a (R)\u3068\u4e00\u822c\u30e6\u30fc\u30b6\u306e\u4f5c\u6210 (U)\u3092\u884c\u3044\u307e\u3059\uff0e\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7d42\u4e86\u307e\u3067\u304a\u3088\u305d 15 \u5206\u7a0b\u5ea6\u3067\u3059\uff0e\u5b8c\u4e86\u3057\u305f\u3089\u518d\u8d77\u52d5(R)\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\uff0e\n\n\u3053\u3053\u304b\u3089\u5148\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u7aef\u672b\u3067\u306e\u4f5c\u696d\u3068\u306a\u308a\u307e\u3059\uff0eWindows \u304b\u3089\u30ea\u30e2\u30fc\u30c8\u63a5\u7d9a\u3059\u308b\u306e\u3067\u3042\u308c\u3070 Tera Term \u304c\u304a\u3059\u3059\u3081\u3067\u3059\uff0e\u4ee5\u4e0b\u306e\u3088\u3046\u306b root \u3067\u30ed\u30b0\u30a4\u30f3\u3057 IP \u30a2\u30c9\u30ec\u30b9\u3092\u78ba\u8a8d\u3057\u305f\u4e0a\u3067\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\nlibshogi \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nlibshogi \u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306a\u306e\u306f gcc-c++\uff0cmake\uff0cctags \u3067\u3059\uff0e\u307e\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u53d6\u5f97\u306b git \u304c\u5fc5\u8981\u3067\u3059\uff0e\u3053\u308c\u4ee5\u5916\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u306a\u3082\u306e\u3068\u3057\u3066\uff0cgdb\uff0cwget\uff0cvim\uff0c screen \u306a\u3069\u304c\u3042\u308a\u307e\u3059\uff0eWindows \u3068\u30d5\u30a1\u30a4\u30eb\u3092\u5171\u6709\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u7de8\u96c6\u3092\u884c\u3046\u306e\u3067\u3042\u308c\u3070 samba \u3082\u3042\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\uff0eroot \u6a29\u9650\u3067\u305d\u308c\u3089\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e\n# yum -y install sudo git gcc-c++ make ctags gdb vim screen samba ftp wget openssh-clients\n\n\u6b21\u306b libshogi \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e\u4e00\u822c\u30e6\u30fc\u30b6\u3067\u4f5c\u696d\u3092\u884c\u3044\u307e\u3059\uff0eGitHub \u304b\u3089\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u305f\u3089 libshogi \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b Makefile \u3092\u958b\u3044\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n$ git clone https://github.com/makudenki/libshogi.git\n$ cd libshogi\n$ vi Makefile\n\n\u3053\u3053\u3067\u306f\u3044\u304f\u3064\u304b\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\uff0e\nTARGET  = /usr/local\nHEADDIR = $(TARGET)/include/shogi/\nLIBRDIR = $(TARGET)/lib64\nLIBNAME = libshogi.so.0\nBMI2    = n\nTLS     = n\n\nTARGET \u306b\u306f libshogi \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30c8\u30c3\u30d7\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f /usr/local/ \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff0eHEADDIR \u306b\u306f\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0eLIBDIR \u306b\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\u3082\u3057\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u304c BMI2 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070 PEXT \u547d\u4ee4\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u6027\u80fd\u304c\u5411\u4e0a\u3057\u307e\u3059\uff0e\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c flags : ... bmi2 ... \u306e\u8868\u793a\u304c\u3042\u308c\u3070\u30d7\u30ed\u30bb\u30c3\u30b5\u304c BMI2 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e\n$ cat /proc/cpuinfo | grep bmi2 \nflags           : ..... bmi2 .....\n\nPEXT \u547d\u4ee4\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f Makefile \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\uff0e\nBMI2    = y\n\nlibshogi \u3067\u306f\u5c40\u9762\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9 Position \u304c\u983b\u7e41\u306b\u30b3\u30d4\u30fc\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\uff0e\u3082\u3057\u30b3\u30d4\u30fc\u306e\u30b3\u30b9\u30c8\u304c\u7121\u8996\u3067\u304d\u306a\u3044\u5834\u5408\u306f\uff0c\u30b3\u30f3\u30c6\u30af\u30b9\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u90e8\u5206 (\u30b3\u30f3\u30c6\u30af\u30b9\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5) \u3092 Thread Local Storage (TLS) \u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\u3053\u308c\u306b\u3088\u308a Position \u306e\u30d5\u30c3\u30c8\u30d7\u30ea\u30f3\u30c8\u304c\u534a\u5206\u7a0b\u5ea6\u306b\u306a\u308a\u307e\u3059\uff0e\u305f\u3060\u3057 TLS \u306b\u3059\u308b\u3068\u8aad\u307f\u66f8\u304d\u306e\u5ea6\u306b\u30a2\u30c9\u30ec\u30b9\u306e\u78ba\u8a8d\u304c\u884c\u308f\u308c\u308b\u305f\u3081\u52b9\u7387\u304c\u843d\u3061\u307e\u3059\uff0e\u30b3\u30d4\u30fc\u306e\u30b3\u30b9\u30c8\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u3092\u3088\u304f\u691c\u8a0e\u3057\u305f\u4e0a\u3067\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0eTLS \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f Makefile \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\uff0e\nTLS     = y\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306f make \u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n$ make\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f root \u6a29\u9650\u3067 make install \u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n# make install\n\n\u3053\u308c\u3067 libshogi \u3092\u4f7f\u7528\u3057\u3066\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u767a\u3059\u308b\u74b0\u5883\u304c\u6574\u3044\u307e\u3057\u305f\uff0e\n\nlibshogi \u3092\u4f7f\u7528\u3057\u305f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\nlibshogi \u3092\u4f7f\u7528\u3057\u305f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n\u521d\u624b7\u516d\u6b69\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u305f\u3081\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\u4f5c\u6210\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b Makefile \u306e\u3072\u306a\u5f62 libshogi/example/Makefile \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff0e\u3053\u306e Makefile \u306f Main.cpp \u304b\u3089 shogiprogram \u3068\u3044\u3046\u540d\u524d\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n$ cd\n$ pwd\n/home/XXXXXX\n$ ls\nlibshogi\n$ mkdir shogiprogram\n$ cd shogiprogram\n$ cp ../libshogi/example/Makefile .\n$ vim Makefile\n\nMakefile \u306f libshogi \u672c\u4f53\u3092\u30d3\u30eb\u30c9\u3057\u305f\u3068\u304d\u3068\u540c\u3058\u8a2d\u5b9a\u306b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\nTARGET  = /usr/local\nHEADDIR = $(TARGET)/include/shogi/\nLIBRDIR = $(TARGET)/lib64\nLIBNAME = libshogi.so.0\nBMI2    = n\nTLS     = n\n\n\u305d\u308c\u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\uff0eshogiprogram \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u3067 Main.cpp \u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3059\uff0e\n\nMain.cpp\n#include <iostream>\n#include <Shogi.h>\n\nusing namespace game;\n\nint main (void)\n{\n\n    // \u30e9\u30a4\u30d6\u30e9\u30ea\u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p;\n\n    // \u5e73\u624b\u521d\u671f\u5c40\u9762\u306b\u3059\u308b\n    p.init();\n\n    // \u5c40\u9762\u3092\u8868\u793a\n    std::cout << p << std::endl;\n\n    // \u6307\u3057\u624b 7\u516d\u6b69\u3092\u4f5c\u6210\n    Move::Move m = Move::move(Square::SQ77, Square::SQ76);\n\n    // 7\u516d \u6b69\u3092\u6307\u3059\n    p.move(m);\n\n    // \u518d\u3073\u5c40\u9762\u3092\u8868\u793a\n    std::cout << p << std::endl;\n\n    return 0;\n\n}\n\n\n\u307e\u305a make \u306b\u3088\u308a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\uff0e\u74b0\u5883\u5909\u6570 LD_LIBRARY_PATH \u306b\u30b7\u30a7\u30a2\u30fc\u30c9\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5834\u6240\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\uff0e\u540c\u3058\u30b7\u30a7\u30eb\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f7f\u3044\u7d9a\u3051\u308b\u306e\u3067\u3042\u308c\u3070\u6b21\u56de\u304b\u3089\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\n$ make\n$ export LD_LIBRARY_PATH=/usr/local/lib64\n$ ./shogiprogram\n\nLD_LIBRARY_PATH \u3092\u6307\u5b9a\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u3068\u304d\u306f root \u6a29\u9650\u3067 /etc/ld.so.conf \u30d5\u30a1\u30a4\u30eb\u306b /usr/local/lib64 \u3092\u8ffd\u8a18\u3059\u308c\u3070\u90fd\u5ea6\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\u30b3\u30de\u30f3\u30c9\u3092\u9593\u9055\u3048\u306a\u3044\u3088\u3046\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n# echo '/usr/local/lib64' >> /etc/ld.so.conf\n# ldconfig\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8aac\u660e\u3092\u3057\u307e\u3059\uff0elibshogi \u306e\u5c06\u68cb\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f Shogi.h \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\uff0eShogi \u306b\u95a2\u9023\u3059\u308b\u69d8\u3005\u306a\u30c7\u30fc\u30bf\u3084\u6a5f\u80fd\u306f\u540d\u524d\u7a7a\u9593 game:: \u4e0a\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4ed6\u306e\u5c06\u68cb\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u5171\u7528\u3059\u308b\u3088\u3046\u306a\u3053\u3068\u304c\u306a\u3051\u308c\u3070\u540d\u524d\u304c\u885d\u7a81\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u306e\u3067 using namespace game; \u3068\u3057\u307e\u3057\u3087\u3046\uff0e \n#include <iostream>\n#include <Shogi.h>\n\nusing namespace game;\n\n\u6700\u521d\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u521d\u671f\u5316\u304c\u5fc5\u8981\u3067\u3059\uff0e\u3053\u308c\u306b\u3088\u308a\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u4e71\u6570\u30c6\u30fc\u30d6\u30eb\u3084\u5229\u304d\u30c6\u30fc\u30d6\u30eb\u304c\u521d\u671f\u5316\u3055\u308c\u307e\u3059\uff0e\n    // \u30e9\u30a4\u30d6\u30e9\u30ea\u521d\u671f\u5316\n    Shogi::initialize();\n\n\u6b21\u306b\u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u99d2\u4fa1\u5024\u304c libshogi/lib/shogi/Evaluation.h \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\nlibshogi/lib/shogi/Evaluation.h\n/// Value of the pieces on board\nstatic const Eval           Value[Piece::Pieces] = {\n                            //  EMP   BFU   BKY   BKE   BGI   BKA   BHI   BKI\n                                  0,  100,  200,  300,  400,  800, 1000,  500,\n                            //  BOU   BTO   BNY   BNK   BNG   BUM   BRY\n                                  0,  500,  500,  500,  500, 1300, 1500,    0,\n                            //        WFU   WKY   WKE   WGI   WKA   WHI   WKI\n                                  0, -100, -200, -300, -400, -800,-1000, -500,\n                            //  WOU   WTO   WNY   WNK   WNG   WUM   WRY\n                                  0, -500, -500, -500, -500,-1300,-1500,    0\n                            };\n\n/// Number of pieces\n/// Value of the pieces in hands\nstatic const Eval           Hands[Piece::Depth + 1][Piece::Kind] = {\n                            //  EMP    FU    KY    KE    GI    KA    HI    KI\n                             {    0,    0,    0,    0,    0,    0,    0,    0},\n                             {    0,  100,  200,  300,  400,  800, 1000,  500},\n                             {    0,  200,  400,  600,  800, 1600, 2000, 1000},\n                             {    0,  300,  600,  900, 1200,    0,    0, 1500},\n                             {    0,  400,  800, 1200, 1600,    0,    0, 2000},\n                             {    0,  500,    0,    0,    0,    0,    0,    0},\n                             {    0,  600,    0,    0,    0,    0,    0,    0},\n                             {    0,  700,    0,    0,    0,    0,    0,    0},\n                             {    0,  800,    0,    0,    0,    0,    0,    0},\n                             {    0,  900,    0,    0,    0,    0,    0,    0},\n                             {    0, 1000,    0,    0,    0,    0,    0,    0},\n                             {    0, 1100,    0,    0,    0,    0,    0,    0},\n                             {    0, 1200,    0,    0,    0,    0,    0,    0},\n                             {    0, 1300,    0,    0,    0,    0,    0,    0},\n                             {    0, 1400,    0,    0,    0,    0,    0,    0},\n                             {    0, 1500,    0,    0,    0,    0,    0,    0},\n                             {    0, 1600,    0,    0,    0,    0,    0,    0},\n                             {    0, 1700,    0,    0,    0,    0,    0,    0},\n                             {    0, 1800,    0,    0,    0,    0,    0,    0}\n                            };\n\n\n\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u306e\u3067\u3042\u308c\u3070\uff0c\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n\u3068\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u540c\u3058\u30b5\u30a4\u30ba\u306e\u914d\u5217\u3092 setValue() \u30e1\u30bd\u30c3\u30c9\u3068 handsValue() \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u99d2\u306e\u4fa1\u5024\u306f\u5168\u4f53\u3092\u901a\u3057\u3066\u4e00\u56de\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3067\u826f\u3044\u3067\u3059\uff0e\n\u5c40\u9762\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9\u306f Position \u3067\u3059\uff0einit() \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u5e73\u624b\u521d\u671f\u5c40\u9762\u306b\u306a\u308a\u307e\u3059\uff0e\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p;\n\n    // \u5e73\u624b\u521d\u671f\u5c40\u9762\u306b\u3059\u308b\n    p.init();\n\n    // \u5c40\u9762\u3092\u8868\u793a\n    std::cout << p << std::endl;\n\nPosition \u306f iostream \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u307e\u307e std::cout \u306b\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u8868\u793a\u3067 Hash \u306f\u5c40\u9762\u306e\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\uff0cHand \u306f\u6301\u3061\u99d2\u306e\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\uff0cBoard \u306f\u76e4\u9762\u306e\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u3067\u3059\uff0e\u76e4\u9762\u306e\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306b\u3088\u3063\u3066\u5c40\u9762\u3092 64 bit \u5024\u3067\u8b58\u5225\u3057\u307e\u3059\uff0eExchange \u306f\u99d2\u306e\u640d\u5f97 (\u99d2\u5272\u308a) \u3067\u3059\uff0e\u76e4\u4e0a\u306e\u99d2\u306f\u9ec4\u8272\u304c\u5f8c\u624b\uff0c\u7dd1\u304c\u5148\u624b\u3067\u3059\uff0eHand \u306b\u306f\u6301\u3061\u99d2\u3068\u679a\u6570\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\n\u6307\u3057\u624b\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306b Move::Move \u3068\u3044\u3046\u5217\u6319\u578b\u304c libshogi/lib/shogi/Move.h \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3084\u306d\u3046\u3089\u738b \u306e\u5b9f\u88c5\u3092\u53c2\u8003\u306b 16 bit \u3067\u624b\u3092\u8868\u73fe\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\n\nlibshogi/lib/shogi/Move.h\n/**\n *  Move\n *   is 16 bit-value expressed as the followings;\n *\n *   MSB                                                         LSB\n *   15  14  13  12  11  10   9   8   7   6   5   4   3   2   1   0\n *  +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n *  |   |   |                           |                           |\n *  |   |   |    Square moved from      |     Square moved to       |\n *  |   |   |                           |                           |\n *  +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n *    |   |\n *    |   +--- indicator for dropping moves.\n *    |\n *    +------- Indicator for promoting moves.\n *\n *    YaneuraOu combines this with 16 bits evaluation value to 32 bits\n *    value. This makes it easy for CPU to line the values in its cache.\n *\n */\nenum Move : uint32_t {\n\n    /// Void move\n    None    = 0,\n\n    /// Dropping move\n    Drop    = 1 << 14,\n\n    /// Promoting move\n    Promote = 1 << PromotionShift\n\n};\n\n\n\u76e4\u4e0a\u306e\u4f4d\u7f6e\u306f Square::Square \u578b\u3067\u8868\u73fe\u3057\u307e\u3059\uff0e\u4f8b\u3048\u3070 7\u516d \u306e\u5730\u70b9\u306f Square::SQ76\uff0c7\u4e03\u306e\u5730\u70b9\u306f Square::SQ77 \u3068\u306a\u308a\u307e\u3059\uff0e\u521d\u624b 7\u516d\u6b69\u306f SQ77 \u304b\u3089 SQ76 \u3078\u306e\u79fb\u52d5\u3067\u3059\u306e\u3067\uff0c\n    // \u6307\u3057\u624b 7\u516d\u6b69\u3092\u4f5c\u6210\n    Move::Move m = Move::move(Square::SQ77, Square::SQ76);\n\n\u306e\u3088\u3046\u306b\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u3053\u3053\u307e\u3067\u898b\u3066\u6c17\u3065\u304b\u308c\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u304c\uff0clibshogi \u3067\u306f\u307b\u3068\u3093\u3069\u306e\u578b\u304c\u56fa\u6709\u306e\u540d\u524d\u7a7a\u9593\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0e\u983b\u7e41\u306b\u4f7f\u3046\u540d\u524d\u7a7a\u9593\u306f using namespace \u3067\u7701\u7565\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\uff0e\u624b\u3092\u5c40\u9762\u306b\u53cd\u6620\u3055\u305b\u308b\u306b\u306f move() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\uff0e\n    // 7\u516d \u6b69\u3092\u6307\u3059\n    p.move(m);\n\n\u3082\u3046\u4e00\u5ea6\u8868\u793a\u3059\u308b\u3068 7\u516d\u6b69\u304c\u6307\u3055\u308c\u305f\u5c40\u9762\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\n\n\u601d\u3063\u305f\u3088\u308a\u7c21\u5358\u3067\u3059\u306d\uff0e\n\n\u521d\u3081\u3066\u306e\u5bfe\u5c40\n\u521d\u3081\u3066\u306e\u5bfe\u5c40\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u6307\u3057\u624b\u3067\u81ea\u5df1\u5bfe\u6226\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6b21\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\uff0e\n\nMain.cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n\nusing namespace game;\nusing namespace foundation;\n\nint main (void)\n{\n\n    // \u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p;\n\n    // \u5e73\u624b\u521d\u671f\u5c40\u9762\u306b\u3059\u308b\n    p.init();\n\n    // \u5bfe\u6226\n    while (1) {\n\n        // \u6307\u3057\u624b\u751f\u6210\n        Array<Move::Move, Move::Max> move;\n        p.genMove(move);\n\n        // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n        if (move.vsize() == 0) {\n            break;\n        }\n\n        // \u30e9\u30f3\u30c0\u30e0\u306b\u624b\u3092\u9078\u3076\n        int choice = rand() % (int)move.vsize();\n\n        // \u624b\u3092\u8868\u793a\n        std::cout << p.string(move[choice]) << std::endl;\n\n        // \u7740\u624b\n        p.move(move[choice]);\n\n        // \u5c40\u9762\u3092\u8868\u793a\n        std::cout << p << std::endl;\n\n    }\n\n    return 0;\n\n}\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u74b0\u5883\u5909\u6570 LD_LIBRARY_PATH \u306f\u6bce\u56de\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u65b0\u3057\u3044\u30b7\u30a7\u30eb\u3092\u958b\u3044\u305f\u3068\u304d\u306b\u4e00\u56de\u3060\u3051 export \u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n$ make\n$ export LD_LIBRARY_PATH=/usr/local/lib64 # \u6bce\u56de\u5fc5\u8981\u3067\u306f\u306a\u3044\n$ ./shogiprogram\n\n\u30e9\u30f3\u30c0\u30e0\u306b\u6307\u3059\u3068\u6c7a\u7740\u304c\u3064\u304b\u306a\u3044\u306e\u3067\u306f\u3068\u5fc3\u914d\u306b\u306a\u308a\u307e\u3059\uff0e\u3057\u304b\u3057\u4e71\u6570\u3092\u521d\u671f\u5316\u3057\u3066\u3082\u307b\u3068\u3093\u3069\u306e\u5834\u5408 1 \u79d2\u4ee5\u5185\u306b\u6c7a\u7740\u304c\u3064\u304d\u307e\u3059\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n\nusing namespace game;\nusing namespace foundation;\n\n\u4eca\u56de\u306f Position \u304c\u751f\u6210\u3057\u305f\u624b\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e Array \u3092\u4f7f\u7528\u3057\u307e\u3059\uff0eArray \u306f\u56fa\u5b9a\u9577\u914d\u5217\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u3067\u3059\uff0eArray<\u578b, \u8981\u7d20\u6570> \u306e\u3088\u3046\u306b\u4f7f\u3044\u307e\u3059\uff0e\u624b\u3092\u66f8\u304d\u8fbc\u3080\u305f\u3081\u578b\u306f Move::Move\uff0c\u8981\u7d20\u6570\u306f libshogi/lib/shogi/Move.h \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b Move::Max = 539 \u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\n        // \u6307\u3057\u624b\u751f\u6210\n        Array<Move::Move, Move::Max> move;\n        p.genMove(move);\n\nPosition \u306f\u5185\u90e8\u3067\u624b\u756a\u3092\u7ba1\u7406\u3057\u3066\u3044\u3066 genMove() \u30e1\u30bd\u30c3\u30c9\u306f\u73fe\u5c40\u9762\u306e\u5408\u6cd5\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0ePosition \u304c\u751f\u6210\u3059\u308b\u624b\u306e\u7a2e\u985e\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\uff0e\n\n\n\n\u30e1\u30bd\u30c3\u30c9\n\u624b\u756a\n\u6253\u3061\u6b69\u8a70\u3081\nPin\n\n\n\n\ngenMove()\n\n\u00d7\n\u25cb\n\n\ngenMoveB()\n\u5148\u624b\n\u00d7\n\u25cb\n\n\ngenMoveW()\n\u5f8c\u624b\n\u00d7\n\u25cb\n\n\nminorMove()\n\n\u00d7\n\u25cb\n\n\ngenFast()\n\n\u00d7\n\u00d7\n\n\ngenFastB()\n\u5148\u624b\n\u00d7\n\u00d7\n\n\ngenFastW()\n\u5f8c\u624b\n\u00d7\n\u00d7\n\n\ngenCapt()\n\n\u00d7\n\u00d7\n\n\ngenCaptB()\n\u5148\u624b\n\u00d7\n\u00d7\n\n\ngenCaptW()\n\u5f8c\u624b\n\u00d7\n\u00d7\n\n\ngenChck()\n\n\u00d7\n\u25cb\n\n\ngenChckB()\n\u5148\u624b\n\u00d7\n\u25cb\n\n\ngenChckW()\n\u5f8c\u624b\n\u00d7\n\u25cb\n\n\ngenCFst()\n\n\u00d7\n\u00d7\n\n\ngenCFstB()\n\u5148\u624b\n\u00d7\n\u00d7\n\n\ngenCFstW()\n\u5f8c\u624b\n\u00d7\n\u00d7\n\n\n\ngenMove() \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f Pin \u3092\u8003\u616e\u3057\u305f\u5408\u6cd5\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u6b69\uff0c\u89d2\uff0c\u98db\u306e\u4e0d\u6210\u306f\u751f\u6210\u3057\u307e\u305b\u3093\uff0e\u6b69\uff0c\u89d2\uff0c\u98db\u306e\u4e0d\u6210\u306f\u5225\u306b minorMove() \u3092\u547c\u3073\u51fa\u305b\u3070\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0egenMoveB() \u306f\u5148\u624b\u306e\u624b\uff0cgenMoveW() \u306f\u5f8c\u624b\u306e\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0ePosition \u306e\u6307\u3057\u624b\u751f\u6210\u306f\u624b\u756a\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u63a2\u7d22\u306a\u3069\u624b\u756a\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30af\u30b9\u30c8\u304b\u3089\u547c\u3073\u51fa\u3059\u5834\u5408\u306f\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u305f\u65b9\u304c\u65e9\u304f\u306a\u308a\u307e\u3059\uff0e\ngenFast() \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f Pin \u3092\u8003\u616e\u3057\u307e\u305b\u3093\uff0e\u3057\u305f\u304c\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u624b\u306b\u306f\u81ea\u6bba\u624b\u304c\u542b\u307e\u308c\u307e\u3059\uff0egenCapt() \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u3082 Pin \u3092\u8003\u616e\u3057\u307e\u305b\u3093\uff0egenCapt() \u306f\u99d2\u3092\u53d6\u308b\u624b\uff0c\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\ngenChck() \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f Pin \u3092\u8003\u616e\u3057\u305f\u738b\u624b\uff0c\u307e\u305f\u306f\u81ea\u7389\u306b\u738b\u624b\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\ngenCFst() \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f Pin \u3092\u8003\u616e\u305b\u305a\u306b\u738b\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306f\u751f\u6210\u3057\u307e\u305b\u3093\uff0egenCFst() \u306f genCapt() \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u9759\u6b62\u63a2\u7d22\u306b\u304a\u3044\u3066 genCapt() \u306b\u7d9a\u3051\u3066 genCFst() \u3092\u547c\u3073\u51fa\u305b\u3070\uff0c\u99d2\u3092\u53d6\u308b\u624b\u3060\u3051\u3067\u306f\u306a\u304f\uff0cgenCapt() \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u624b\u306b\u542b\u307e\u308c\u306a\u3044\u738b\u624b\u3082\u63a2\u7d22\u306e\u5bfe\u8c61\u3068\u306a\u308a\u307e\u3059\uff0e\nIntel Core i3-6100 CPU @ 3.70GHz \u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3067\u8a08\u6e2c\u3059\u308b\u3068 genMove() \u306f\u6307\u3057\u624b\u751f\u6210\u796d\u308a\u5c40\u9762\u3067 1.00 M\u56de/\u79d2\uff0cgenFast() \u306f 1.25 M\u56de/\u79d2\u7a0b\u5ea6\u3067\u3059\uff0e\n\u3044\u305a\u308c\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u6253\u3061\u6b69\u8a70\u3081\u306e\u30c1\u30a7\u30c3\u30af\u306f\u884c\u3044\u307e\u305b\u3093\uff0e\n\u751f\u6210\u3055\u308c\u305f\u624b\u306f Array \u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\uff0egenMove() \u306b\u52a0\u3048\u3066\uff0c\u6b69\uff0c\u89d2\uff0c\u98db\u306e\u4e0d\u6210\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\uff0c\u7d9a\u3051\u3066 minorMove() \u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u3088\u308a\u8ffd\u52a0\u3055\u308c\u307e\u3059\uff0e\n        // \u6307\u3057\u624b\u751f\u6210\n        Array<Move::Move, Move::Max> move;\n        p.genMove(move);\n        p.minorMove(move);\n\nArray \u306b\u542b\u307e\u308c\u308b\u610f\u5473\u306e\u3042\u308b\u5024\u3092\u6301\u3064\u8981\u7d20\u306e\u6570\u306f vsize() \u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f move \u306b\u624b\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3057\u305f\u304c\u3063\u3066 move.vsize() == 0 \u306e\u5834\u5408\uff0c\u6307\u3057\u624b\u304c\u306a\u3044\u72b6\u614b (\u8a70\u307f) \u3068\u306a\u308a\u307e\u3059\uff0e\n        // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n        if (move.vsize() == 0) {\n            break;\n        }\n\n\u30e9\u30f3\u30c0\u30e0\u306b\u624b\u3092\u9078\u3073\u7740\u624b\u3057\u307e\u3059\uff0en \u756a\u76ee\u306e Array \u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5834\u5408\u306f [] \u6f14\u7b97\u5b50\u3092\u4f7f\u3044\u307e\u3059\uff0e\n        // \u30e9\u30f3\u30c0\u30e0\u306b\u624b\u3092\u9078\u3076\n        int choice = rand() % (int)move.vsize();\n        // \u7740\u624b\n        p.move(move[choice]);\n\n\n\u81ea\u4f5c\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306e\u521d\u3081\u3066\u306e\u5bfe\u5c40\n\u6b21\u306f\u81ea\u4f5c\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u5bfe\u5c40\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0elibshogi \u306f CSA \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0eCSA \u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u5c06\u68cb\u6240\u306b\u63a5\u7d9a\u3057\u3066\u5bfe\u5c40\u3057\u307e\u3059\uff0e\u5c06\u68cb\u6240\u306f\u7d20\u6674\u3089\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u30bd\u30d5\u30c8\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u4f5c\u8005\u69d8\u306b\u611f\u8b1d\u3057\u307e\u3059\uff0e\u5c06\u68cb\u6240\u306e\u4f7f\u3044\u65b9\u3092\u53c2\u8003\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u5c55\u958b\u307e\u3067\u884c\u3063\u3066\u304f\u3060\u3055\u3044\uff0e\nCSA \u901a\u4fe1\u6a5f\u80fd\u3092\u5099\u3048\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\nMain.cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n#include <CSAConnection.h>\n\nusing namespace game;\nusing namespace foundation;\n\nint main (int argc, char * argv[])\n{\n\n    // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u78ba\u8a8d\n    if (argc != 4) {\n        std::cerr << \"Usage : \"\n                  << argv[0]\n                  << \" <User Name> <Password> <CSA Server>\"\n                  << std::endl;\n        exit(EXIT_FAILURE);\n    }\n\n    // \u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\n    CSAConnection csa(argv[3]);\n    csa.connect();\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u30ed\u30b0\u30a4\u30f3\n    csa.login(argv[1], argv[2]);\n\n    // \u5bfe\u5c40\u5f85\u3061\n    auto summary = csa.newGame();\n\n    // \u5bfe\u5c40\u53d7\u8afe\n    csa.accept();\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p(summary);\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3092\u78ba\u8a8d\n    auto myturn  = Position::myTurn(summary);\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u7528\n    Vector<std::string> message;\n\n    // \u5bfe\u6226\n    while (1) {\n\n        if (p.turn() == myturn) {\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\n\n            // \u6307\u3057\u624b\u751f\u6210\n            Array<Move::Move, Move::Max> move;\n            p.genMove(move);\n\n            // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n            if (move.vsize() == 0) {\n                // \u6295\u4e86\n                csa.resign();\n                break;\n            }\n\n            // \u30e9\u30f3\u30c0\u30e0\u306b\u624b\u3092\u9078\u3076\n            int choice = rand() % (int)move.vsize();\n\n            // \u6307\u3057\u624b\u9001\u4fe1\n            csa.send(p.string(move[choice]));\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(move[choice]);\n\n        } else {\n\n            // \u76f8\u624b\u306e\u624b\u756a\n\n            // \u76f8\u624b\u306e\u624b\u3092\u5f85\u3064\n            csa.receive(message);\n\n            // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u306e\u5148\u982d\u6587\u5b57\u304c '+' '-' \u3067\u306a\u3044\u3068\u304d\u306f\u6307\u3057\u624b\u3067\u306f\u306a\u3044\n            if (message[0][0] != '+' && message[0][0] != '-') {\n                // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\n                for (auto l : message) {\n                    std::cout << l << std::endl;\n                }\n                break;\n            }\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b (\u30a8\u30b3\u30fc) \u306f\u7121\u8996\n            const char turchk[] = {'+', '-'};\n            if (message[0][0] == turchk[myturn]) {\n                // 2 \u884c\u76ee\u306b\u76f8\u624b\u306e\u624b\u304c\u5165\u308b\u5834\u5408\u3082\u3042\u308b\n                if (message.size() == 2) {\n                    message[0] = message[1];\n                } else {\n                    continue;\n                }\n            }\n\n            // \u76f8\u624b\u306e\u624b\u3092\u8868\u793a\n            std::cout << message[0] << std::endl;\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(message[0]);\n\n        }\n\n        // \u5c40\u9762\u3092\u8868\u793a\n        std::cout << p << std::endl;\n\n    }\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5168\u3066\u53d7\u4fe1\n    while (csa.message()) {\n        csa.receive(message);\n        if (message.vsize() == 0) {\n            break;\n        }\n        for (auto l : message) {\n            std::cout << l << std::endl;\n        }\n    }\n\n    // \u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\n    csa.write(\"kifu.csa\");\n\n    // \u30ed\u30b0\u30a2\u30a6\u30c8\n    csa.logout();\n\n    // \u901a\u4fe1\u7d42\u4e86\n    csa.close();\n\n    exit(EXIT_SUCCESS);    \n\n}\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u305f\u3089\u5c06\u68cb\u6240\u3092\u958b\u3044\u3066 \u5bfe\u5c40(G) \u304b\u3089 1 \u5bfe 1 \u901a\u4fe1\u5bfe\u5c40\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\u3053\u3061\u3089\u5074\u306e\u5bfe\u5c40\u8005\u306f \u4eba\u9593 \u3092\u9078\u3073 OK \u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\n\u63a5\u7d9a\u5f85\u3061\u30c0\u30a4\u30a2\u30ed\u30b0\u306b\u8868\u793a\u3055\u308c\u308b\u30a2\u30c9\u30ec\u30b9\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\u30c0\u30a4\u30a2\u30ed\u30b0\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b IP \u30a2\u30c9\u30ec\u30b9\u3092\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e 3 \u756a\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n$ ./shogiprogram test test 192.168.2.129\n\n\u4f55\u56de\u304b\u5bfe\u5c40\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u6307\u3057\u624b\u3092\u9078\u629e\u3059\u308b\u306e\u3067\u5f53\u7136\u5f31\u3044\u3067\u3059\uff0e\u305d\u308c\u3067\u3082\u738b\u624b\u3092\u304b\u3051\u308c\u3070\u9003\u3052\u3066\u304f\u308c\u307e\u3059\uff0e\u5168\u304f\u7121\u6a5f\u8cea\u306a\u76f8\u624b\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u5370\u8c61\u3092\u6301\u305f\u308c\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff0eCSA \u901a\u4fe1\u3092\u3059\u308b\u305f\u3081\u306b CSAConnection.h \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\uff0e\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n#include <CSAConnection.h>\n\nusing namespace game;\nusing namespace foundation;\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306b\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3068\u3057\u3066\uff0c\u30b5\u30fc\u30d0\u3078\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30b6\u540d\uff0c\u30d1\u30b9\u30ef\u30fc\u30c9\uff0c\u30b5\u30fc\u30d0\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u30b5\u30fc\u30d0\u30a2\u30c9\u30ec\u30b9\u306f\u30db\u30b9\u30c8\u540d\u3082\u3057\u304f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3067\u6307\u5b9a\u3057\u307e\u3059\uff0e\u6700\u521d\u306b\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u3092\u898b\u3066\u3053\u308c\u3089\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\uff0e\n    // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u78ba\u8a8d\n    if (argc != 4) {\n        std::cerr << \"Usage : \"\n                  << argv[0]\n                  << \" <User Name> <Password> <CSA Server>\"\n                  << std::endl;\n        exit(EXIT_FAILURE);\n    }\n\nCSA \u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u3088\u308b\u901a\u4fe1\u306f CSAConnection \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u884c\u3044\u307e\u3059\uff0e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u6642\u306b\u30b5\u30fc\u30d0\u30a2\u30c9\u30ec\u30b9\u3092\u6e21\u3057\u307e\u3059\uff0e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u305f\u3089\u6700\u521d\u306b connect() \u3067\u30b5\u30fc\u30d0\u3078\u63a5\u7d9a\u3057\u307e\u3059\uff0e\u6b21\u306b login() \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\uff0e\u30ed\u30b0\u30a4\u30f3\u5f8c newGame() \u3092\u547c\u3076\u3068\u30b5\u30fc\u30d0\u304b\u3089\u5bfe\u6226\u306e\u6761\u4ef6 (\u5bfe\u5c40\u76f8\u624b\u306e\u540d\u524d\uff0c\u6301\u3061\u6642\u9593\u306a\u3069) \u304c\u901a\u77e5\u3055\u308c\u307e\u3059\uff0e\u305d\u306e\u6761\u4ef6\u3067\u826f\u3051\u308c\u3070 accept() \u3057\u307e\u3059\uff0e\u901a\u4fe1\u30a8\u30e9\u30fc\u306a\u3069\u304c\u3042\u3063\u305f\u5834\u5408\u306f CSAConnection \u30af\u30e9\u30b9\u304b\u3089\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u307e\u3059\uff0e\u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3064\u3044\u3066\u306f\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u66f8\u304f\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\n    // CSA \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\n    CSAConnection csa(argv[3]);\n    csa.connect();\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u30ed\u30b0\u30a4\u30f3\n    csa.login(argv[1], argv[2]);\n\n    // \u5bfe\u5c40\u5f85\u3061\n    auto summary = csa.newGame();\n\n    // \u5bfe\u5c40\u53d7\u8afe\n    csa.accept();\n\nnewGame() \u306e\u623b\u308a\u5024\u304c\u5bfe\u5c40\u306e\u6761\u4ef6\u3068\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u3092 Position \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u305b\u3070\uff0c\u5bfe\u5c40\u6761\u4ef6\u306b\u6cbf\u3063\u305f\u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff0e\u307e\u305f\u3053\u3061\u3089\u306e\u624b\u756a\u306f Position::myTurn() \u306b\u3088\u308a\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p(summary);\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3092\u78ba\u8a8d\n    auto myturn  = Position::myTurn(summary);\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3081\u306b std::string \u306e\u914d\u5217\u3092\u7528\u610f\u3057\u307e\u3059\uff0eVector \u306f\u53ef\u5909\u9577\u914d\u5217\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u3067\u3059\uff0eCSA \u30b5\u30fc\u30d0\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u8907\u6570\u884c\u3068\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u306e\u3067\uff0cstd::string \u306e\u53ef\u5909\u9577\u914d\u5217\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\uff0eVector \u306e\u8981\u7d20\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u4e00\u884c\u3065\u3064\u683c\u7d0d\u3055\u308c\u3066\u3044\u304d\u307e\u3059\uff0e\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u7528\n    Vector<std::string> message;\n\n\u3053\u3053\u307e\u3067\u6765\u305f\u3089\u5bfe\u5c40\u958b\u59cb\u3067\u3059\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u6307\u3057\u624b\u3092\u9078\u629e\u3057 send() \u3067\u9001\u4fe1\uff0c\u76f8\u624b\u306e\u624b\u756a\u306b\u306f receive() \u3067\u76f8\u624b\u306e\u624b\u3092\u5f85\u3061\u307e\u3059\uff0ePosition \u3067\u73fe\u5728\u306e\u624b\u756a\u3092\u8abf\u3079\u308b\u306b\u306f turn() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\uff0e\n    // \u5bfe\u6226\n    while (1) {\n\n        if (p.turn() == myturn) {\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\n\n            // \u6307\u3057\u624b\u751f\u6210\n            Array<Move::Move, Move::Max> move;\n            p.genMove(move);\n\n\u624b\u304c\u7121\u304b\u3063\u305f\u6642\u306f\u8a70\u307f\u3067\u3059\u306e\u3067 CSAConnection \u306e resign() \u30e1\u30bd\u30c3\u30c9\u3067\u6295\u4e86\u3057\u307e\u3059\uff0e\n            // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n            if (move.vsize() == 0) {\n                // \u6295\u4e86\n                csa.resign();\n                break;\n            }\n\n\u6307\u305b\u308b\u624b\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u3073\u9001\u4fe1\u3057\u307e\u3059\uff0ePosition \u306e string() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068 Move::Move \u3092 CSA \u30d7\u30ed\u30c8\u30b3\u30eb\u5f62\u5f0f\u306e\u6307\u3057\u624b\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u307e\u3059\uff0eCSA \u30b5\u30fc\u30d0\u3078\u624b\u3092\u9001\u4fe1\u3059\u308b\u306e\u3068\u540c\u6642\u306b\u5c40\u9762\u3082\u9032\u3081\u3066\u304a\u304d\u307e\u3059\uff0e\n            int choice = rand() % (int)move.vsize();\n\n            // \u6307\u3057\u624b\u9001\u4fe1\n            csa.send(p.string(move[choice]));\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(move[choice]);\n\n\u6b21\u306f\u76f8\u624b\u306e\u624b\u756a\u3067\u3059\uff0e\u76f8\u624b\u306e\u624b\u756a\u306b\u306f\u30b5\u30fc\u30d0\u304b\u3089\u6307\u3057\u624b\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u306e\u3092\u5f85\u3061\u307e\u3059\uff0e\n        } else {\n\n            // \u76f8\u624b\u306e\u624b\u756a\n\n            // \u76f8\u624b\u306e\u624b\u3092\u5f85\u3064\n            csa.receive(message);\n\nCSA \u30b5\u30fc\u30d0\u304b\u3089\u306f\u6307\u3057\u624b\u4ee5\u5916\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\uff0e\u4f8b\u3048\u3070\u5343\u65e5\u624b\u304c\u6210\u7acb\u3057\u305f\u3068\u304d\u306b\u306f #SENNICHITE \u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9001\u3089\u308c\u3066\u304d\u307e\u3059\uff0e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6700\u521d\u306e\u6587\u5b57\u304c + \u304b - \u306e\u6642\u306f\u6307\u3057\u624b\u3067\u3059\uff0e\u305d\u308c\u4ee5\u5916\u3067\u306f\u5bfe\u5c40\u304c\u7d42\u308f\u308b\u3082\u3057\u304f\u306f\u4e2d\u65ad\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u305f\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u5bfe\u5c40\u3092\u7d42\u4e86\u3057\u307e\u3059\uff0e\n            // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u306e\u5148\u982d\u6587\u5b57\u304c '+' '-' \u3067\u306a\u3044\u3068\u304d\u306f\u6307\u3057\u624b\u3067\u306f\u306a\u3044\n            if (message[0][0] != '+' && message[0][0] != '-') {\n                // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\n                for (auto l : message) {\n                    std::cout << l << std::endl;\n                }\n                break;\n            }\n\nCSA \u30b5\u30fc\u30d0\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u9001\u4fe1\u3057\u305f\u624b\u3092\u6d88\u8cbb\u6642\u9593\u306e\u60c5\u5831\u3092\u4ed8\u52a0\u3057\u3066\u30a8\u30b3\u30fc\u30d0\u30c3\u30af\u3057\u307e\u3059\uff0e\u3053\u306e\u6d88\u8cbb\u6642\u9593\u306e\u60c5\u5831\u306f\u6301\u3061\u6642\u9593\u306e\u7ba1\u7406\u306b\u4f7f\u3044\u307e\u3059\uff0e\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u7c21\u5358\u306e\u305f\u3081\u7121\u8996\u3057\u307e\u3057\u3087\u3046\uff0e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u540c\u58eb\u306e\u5bfe\u6226\u3067\u306f\u77ed\u3044\u6642\u9593\u3067\u624b\u304c\u9032\u3080\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u6642\u306b CSAConnection \u306e receive() \u30e1\u30bd\u30c3\u30c9\u304c\u30a8\u30b3\u30fc\u30d0\u30c3\u30af\u3068\u540c\u6642\u306b\u76f8\u624b\u306e\u624b\u3092\u6e21\u3057\u3066\u304f\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e2 \u884c\u76ee\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u308c\u3092\u76f8\u624b\u306e\u624b\u3068\u3057\u3066\u51e6\u7406\u3057\u307e\u3059\uff0e\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b (\u30a8\u30b3\u30fc) \u306f\u7121\u8996\n            const char turchk[] = {'+', '-'};\n            if (message[0][0] == turchk[myturn]) {\n                // 2 \u884c\u76ee\u306b\u76f8\u624b\u306e\u624b\u304c\u5165\u308b\u5834\u5408\u3082\u3042\u308b\n                if (message.size() == 2) {\n                    message[0] = message[1];\n                } else {\n                    continue;\n                }\n            }\n\nPosition \u306f\u30b5\u30fc\u30d0\u304b\u3089\u9001\u3089\u308c\u3066\u304d\u305f\u6307\u3057\u624b\u6587\u5b57\u5217 (std::string) \u3067\u3082 move() \u3067\u304d\u307e\u3059 (\u5b9f\u969b\u306f CSAMove \u3068\u3057\u3066\u51e6\u7406\u3055\u308c\u307e\u3059) \u76f8\u624b\u304b\u3089\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u3092\u8868\u793a\u3057\u3066\u5c40\u9762\u3092\u9032\u3081\u307e\u3059\uff0e\u305d\u3057\u3066\u518d\u3073\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u306b\u623b\u308a\u307e\u3059\uff0e\n            // \u76f8\u624b\u306e\u624b\u3092\u8868\u793a\n            std::cout << message[0] << std::endl;\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(message[0]);\n\n\u6700\u5f8c\u306b\u5bfe\u5c40\u306e\u7d42\u4e86\u51e6\u7406\u3067\u3059\uff0e\u307e\u305a\uff0c\u30b5\u30fc\u30d0\u304b\u3089\u672a\u53d7\u4fe1\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3042\u308c\u3070\u5168\u3066\u53d7\u4fe1\u3057write() \u3067\u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u6b21\u306blogout()\uff0cclose() \u30e1\u30bd\u30c3\u30c9\u3067\u901a\u4fe1\u3092\u7d42\u4e86\u3057\u307e\u3059\uff0e\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5168\u3066\u53d7\u4fe1\n    while (csa.message()) {\n        csa.receive(message);\n        if (message.vsize() == 0) {\n            break;\n        }\n        for (auto l : message) {\n            std::cout << l << std::endl;\n        }\n    }\n\n    // \u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\n    csa.write(\"kifu.csa\");\n\n    // \u30ed\u30b0\u30a2\u30a6\u30c8\n    csa.logout();\n\n    // \u901a\u4fe1\u7d42\u4e86\n    csa.close();\n\nfloodgate \u3078\u306e\u63a5\u7d9a\u3082 CSA \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u4f7f\u3044\u307e\u3059\uff0e\u30e6\u30fc\u30b6\u540d\uff0c\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u898f\u5247\u306b\u3064\u3044\u3066\u306f floodgate \u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n$ ./shogiprogram libshogi_corei3 floodgate-300-10F,test1 wdoor.c.u-tokyo.ac.jp # \u63a5\u7d9a\u4f8b\n\n\u3053\u308c\u306f\u5c06\u6765\u81ea\u4f5c\u306e\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u305f\u3068\u304d\u306e\u305f\u3081\u306e\u4f8b\u3068\u3057\u3066\u6319\u3052\u307e\u3057\u305f\uff0e\u3053\u306e\u30e9\u30f3\u30c0\u30e0\u30d7\u30ec\u30fc\u30e4\u3067 floodgate \u306b\u306f\u63a5\u7d9a\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff0e\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u99d2\u306e\u640d\u5f97\u3092\u8003\u3048\u305f\u624b\u3092\u6307\u3055\u305b\u308b\n\u30e9\u30f3\u30c0\u30e0\u306a\u6307\u3057\u624b\u3060\u3068\u3055\u3059\u304c\u306b\u5f31\u3044\u306e\u3067\u5c11\u3057\u3060\u3051\u8003\u3048\u308b\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6539\u826f\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u306f\u99d2\u306e\u53d6\u308a\u5408\u3044\u304c\u751f\u3058\u308b\u5c40\u9762\u3067\u306f\u3067\u304d\u308b\u3060\u3051\u99d2\u5f97\u3059\u308b\u3088\u3046\u306a\u624b\u3092\u9078\u3076\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5909\u66f4\u3057\u307e\u3059\uff0e\n\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u6570\u5024\u3067\u99d2\u306e\u640d\u5f97\u3092\u5224\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u99d2\u306b\u70b9\u6570\u3092\u4e0e\u3048\u307e\u3059\uff0elibshogi/lib/shogi/Evaluation.h \u306b\u306f\u99d2\u3054\u3068\u306e\u70b9\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4f8b\u3048\u3070\u6b69\u306f 100 \u70b9\uff0c\u98db\u8eca\u306f 1000 \u70b9\u3068\u3044\u3063\u305f\u5177\u5408\u3067\u3059\uff0e\u5b9f\u969b\u306b\u624b\u3092\u6307\u3059\u524d\u306b\u81ea\u5206\u304c\u3053\u3046\u6307\u3057\u305f\u3089\u76f8\u624b\u304c\u3053\u3046\u5fdc\u3058\u308b\u3068\u3044\u3046\u306e\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u6700\u7d42\u7684\u306b\u99d2\u5f97\u3059\u308b\u624b\u9806\u3092\u9078\u3073\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u5148\u8aad\u307f (\u63a2\u7d22) \u3092\u30df\u30cb\u30de\u30c3\u30af\u30b9\u6cd5 \u3068\u8a00\u3044\u307e\u3059\uff0e\u99d2\u306e\u70b9\u6570\u3092\u6c7a\u3081\u305f\u3053\u3068\u306b\u3088\u308a\u5c40\u9762\u3054\u3068\u306b\u99d2\u306e\u640d\u5f97\u3092\u6570\u5024\u3068\u3057\u3066\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u3053\u308c\u3092\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u3057\u307e\u3059\uff0e\u5f8c\u624b\u306e\u99d2\u306b\u306f\u30de\u30a4\u30ca\u30b9\u306e\u5024\u3092\u4e0e\u3048\u3066\u304a\u304d\uff0c\u8a55\u4fa1\u5024\u304c 0 \u306e\u5834\u5408\u306f\u4e92\u89d2\uff0c\u30d7\u30e9\u30b9\u306e\u5024\u306b\u306a\u308b\u3068\u5148\u624b\u304c\u99d2\u5f97\uff0c\u30de\u30a4\u30ca\u30b9\u306e\u5024\u306b\u306a\u308b\u3068\u5f8c\u624b\u304c\u99d2\u5f97\u3068\u5224\u65ad\u3057\u307e\u3059\uff0e\u7389\u3092\u53d6\u3089\u308c\u308b\u3068\u3069\u3093\u306a\u306b\u99d2\u5f97\u3057\u3066\u3044\u3066\u3082\u8ca0\u3051\u3067\u3059\u306e\u3067\uff0c\u5148\u624b\u7389\u306e\u4fa1\u5024\u306f $+\\infty$ \u5f8c\u624b\u7389\u306e\u4fa1\u5024\u306f $-\\infty$ \u306b\u306a\u308a\u307e\u3059\uff0e\n\u7406\u5c48\u306e\u4e0a\u3067\u306f\u6700\u5f8c\u307e\u3067\u63a2\u7d22\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u6700\u7d42\u7684\u306b\u76f8\u624b\u306e\u7389\u3092\u53d6\u308b\u624b\u3092\u9078\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u73fe\u5b9f\u306e\u5c40\u9762\u5909\u5316\u306f\u81a8\u5927\u306a\u6570\u306b\u306a\u308b\u306e\u3067\uff0c\u6700\u5f8c\u307e\u3067\u8aad\u307f\u5207\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\uff0e\u3042\u308b\u7a0b\u5ea6\u307e\u3067\u63a2\u7d22\u3057\u305f\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3092\u3082\u3063\u3066\u6307\u3057\u624b\u3092\u6c7a\u65ad\u3057\u307e\u3059\uff0e\n\u5b9f\u969b\u306e\u63a2\u7d22\u306b\u306f\u30df\u30cb\u30de\u30c3\u30af\u30b9\u6cd5\u3092\u6539\u826f\u3057\u305f\u30a2\u30eb\u30d5\u30a1\u30fb\u30d9\u30fc\u30bf\u6cd5\u3092\u7528\u3044\u307e\u3059\uff0e\u30a2\u30eb\u30d5\u30a1\u30fb\u30d9\u30fc\u30bf\u6cd5\u306f\u30df\u30cb\u30de\u30c3\u30af\u30b9\u6cd5\u3088\u308a\u3082\u5c11\u306a\u3044\u63a2\u7d22\u6570\u3067\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\nMain.cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n#include <CSAConnection.h>\n\nusing namespace game;\nusing namespace foundation;\nusing namespace Evaluation;\n\n/* --------------------------- global  variables --------------------------- */\n\n/// \u6700\u5927\u306e\u63a2\u7d22\u6df1\u3055\nstatic int                  _searchDepth    = 10;\n\n/* ------------------------------------------------------------------------- */\n\n/* -------------------------- function prototypes -------------------------- */\n\n/// \u63a2\u7d22\nstatic size_t   searchMax (Position &, Array<Move::Move, Move::Max> &);\nstatic size_t   searchMin (Position &, Array<Move::Move, Move::Max> &);\nstatic Eval     quiesMax  (Position &, Eval alpha, Eval beta, int depth);\nstatic Eval     quiesMin  (Position &, Eval alpha, Eval beta, int depth);\n\n/* ------------------------------------------------------------------------- */\n\n/**\n * \u5148\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMax (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5f8c\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMin(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta ) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0b\u9650\u3092\u66f4\u65b0\n        if (value >  alpha) {\n            alpha = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n\n/**\n * \u5f8c\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMin (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5148\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMax(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0a\u9650\u3092\u66f4\u65b0\n        if (value <  beta ) {\n            beta  = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n\n/**\n * \u5148\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Max)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMax (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0a\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0b\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmax = p.eval();\n\n    // beta \u30ab\u30c3\u30c8 (standpat)\n    if (beta <= vmax) {\n        return beta;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmax;\n    }\n\n    // \u5148\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptB(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5f8c\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMin(p, max(vmax, alpha), beta, depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta) {\n            return beta;\n        }\n\n        // \u4e0b\u9650\u66f4\u65b0\u304b\n        if (value > vmax) {\n            vmax = value;\n        }\n\n    }\n\n    return vmax;\n\n}\n\n/**\n * \u5f8c\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Min)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMin (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0b\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0a\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmin = p.eval();\n\n    // alpha \u30ab\u30c3\u30c8 (standpat)\n    if (alpha >= vmin) {\n        return alpha;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmin;\n    }\n\n    // \u5f8c\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptW(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyW(move)) {\n            vmin = -Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5148\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMax(p, alpha, min(vmin, beta), depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            return alpha;\n        }\n\n        // \u4e0a\u9650\u66f4\u65b0\u304b\n        if (value < vmin) {\n            vmin = value;\n        }\n\n    }\n\n    return vmin;\n\n}\n\n\n\nint main (int argc, char * argv[])\n{\n\n    // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u78ba\u8a8d\n    if (argc != 4) {\n        std::cerr << \"Usage : \"\n                  << argv[0]\n                  << \"<User Name> <Password> <CSA Server>\"\n                  << std::endl;\n        exit(EXIT_FAILURE);\n    }\n\n    // \u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\n    CSAConnection csa(argv[3]);\n    csa.connect();\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u30ed\u30b0\u30a4\u30f3\n    csa.login(argv[1], argv[2]);\n\n    // \u5bfe\u5c40\u5f85\u3061\n    auto summary = csa.newGame();\n\n    // \u5bfe\u5c40\u53d7\u8afe\n    csa.accept();\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p(summary);\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3092\u78ba\u8a8d\n    auto myturn  = Position::myTurn(summary);\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u7528\n    Vector<std::string> message;\n\n    // \u5bfe\u6226\n    while (1) {\n\n        if (p.turn() == myturn) {\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\n\n            // \u6307\u3057\u624b\u751f\u6210\n            Array<Move::Move, Move::Max> move;\n            p.genMove(move);\n\n            // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n            if (move.vsize() == 0) {\n                // \u6295\u4e86\n                csa.resign();\n                break;\n            }\n\n            // \u63a2\u7d22\u306e\u7d50\u679c\u304c\u6700\u3082\u826f\u3044\u624b\u3092\u9078\u629e\u3059\u308b\n            size_t best;\n            if (move.vsize() > 1) {\n                if (myturn == Color::Black) {\n                    best = searchMax(p, move);\n                } else {\n                    best = searchMin(p, move);\n                }\n            } else {\n                // \u624b\u304c\u3072\u3068\u3064\u3060\u3051\u3057\u304b\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u624b\u3092\u6307\u3059\u3057\u304b\u306a\u3044\n                best = 0;\n            }\n\n            // \u6307\u3057\u624b\u9001\u4fe1\n            csa.send(p.string(move[best]));\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(move[best]);\n\n        } else {\n\n            // \u76f8\u624b\u306e\u624b\u756a\n\n            // \u76f8\u624b\u306e\u624b\u3092\u5f85\u3064\n            csa.receive(message);\n\n            // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u306e\u5148\u982d\u6587\u5b57\u304c '+' '-' \u3067\u306a\u3044\u3068\u304d\u306f\u6307\u3057\u624b\u3067\u306f\u306a\u3044\n            if (message[0][0] != '+' && message[0][0] != '-') {\n                // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\n                for (auto l : message) {\n                    std::cout << l << std::endl;\n                }\n                break;\n            }\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u624b\u756a\u306e\u6307\u3057\u624b (\u30a8\u30b3\u30fc) \u306f\u7121\u8996\n            const char turchk[] = {'+', '-'};\n            if (message[0][0] == turchk[myturn]) {\n                // 2 \u884c\u76ee\u306b\u76f8\u624b\u306e\u624b\u304c\u5165\u308b\u5834\u5408\u3082\u3042\u308b\n                if (message.size() == 2) {\n                    message[0] = message[1];\n                } else {\n                    continue;\n                }\n            }\n\n            // \u76f8\u624b\u306e\u624b\u3092\u8868\u793a\n            std::cout << message[0] << std::endl;\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(message[0]);\n\n        }\n\n        // \u5c40\u9762\u3092\u8868\u793a\n        std::cout << p << std::endl;\n\n    }\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5168\u3066\u53d7\u4fe1\n    while (csa.message()) {\n        csa.receive(message);\n        if (message.vsize() == 0) {\n            break;\n        }\n        for (auto l : message) {\n            std::cout << l << std::endl;\n        }\n    }\n\n    // \u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\n    csa.write(\"kifu.csa\");\n\n    // \u30ed\u30b0\u30a2\u30a6\u30c8\n    csa.logout();\n\n    // \u901a\u4fe1\u7d42\u4e86\n    csa.close();\n\n    exit(EXIT_SUCCESS);    \n\n}\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5c06\u68cb\u6240\u3067\u5bfe\u5c40\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u30e9\u30f3\u30c0\u30e0\u306a\u6307\u3057\u624b\u306e\u3068\u304d\u3088\u308a\u306f\u5f37\u304f\u306a\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\u99d2\u304c\u305f\u3060\u3067\u3068\u3089\u308c\u308b\u3088\u3046\u306a\u624b\u306f\u6307\u3055\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u305f\u306f\u305a\u3067\u3059\uff0e\nmain() \u306f\u307b\u3068\u3093\u3069\u5909\u66f4\u304c\u3042\u308a\u307e\u305b\u3093\uff0e\u30e9\u30f3\u30c0\u30e0\u306b\u6307\u3057\u624b\u3092\u6c7a\u5b9a\u3057\u3066\u3044\u305f\u90e8\u5206\u3092\u63a2\u7d22\u306b\u7f6e\u304d\u63db\u3048\u3066\u3044\u307e\u3059\uff0e\u3082\u3057\u6307\u305b\u308b\u624b\u306e\u6570\u304c 1 \u306e\u5834\u5408\u306f\u63a2\u7d22\u3059\u308b\u307e\u3067\u3082\u306a\u3044\u306e\u3067\u305d\u306e\u624b\u3092\u9078\u3073\u307e\u3059\uff0e\u305d\u308c\u4ee5\u5916\u306f\u63a2\u7d22\u306e\u7d50\u679c\u304c\u6700\u3082\u826f\u3044\u624b\u3092\u9078\u3073\u307e\u3059\uff0e\u624b\u756a\u306f Color::Color \u3067\u8868\u73fe\u3055\u308c Color::Black = 0 \u304c\u5148\u624b\uff0cColor::White = 1 \u304c\u5f8c\u624b\u3067\u3059\uff0e\n            // \u63a2\u7d22\u306e\u7d50\u679c\u304c\u6700\u3082\u826f\u3044\u624b\u3092\u9078\u629e\u3059\u308b\n            size_t best;\n            if (move.vsize() > 1) {\n                if (myturn == Color::Black) {\n                    best = searchMax(p, move);\n                } else {\n                    best = searchMin(p, move);\n                }\n            } else {\n                // \u624b\u304c\u3072\u3068\u3064\u3060\u3051\u3057\u304b\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u624b\u3092\u6307\u3059\u3057\u304b\u306a\u3044\n                best = 0;\n            }\n\n\u5148\u624b\u756a\u5c40\u9762\u3067\u306f\u8a55\u4fa1\u5024\u304c\u6700\u5927\u306b\u306a\u308b\u624b\u3092\u63a2\u7d22\u3057\u307e\u3059\uff0e\u5f8c\u624b\u756a\u5c40\u9762\u3067\u306f\u8a55\u4fa1\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u624b\u3092\u63a2\u7d22\u3057\u307e\u3059\uff0e\u30a2\u30eb\u30d5\u30a1\u30fb\u30d9\u30fc\u30bf\u6cd5\u3067\u306f\u30df\u30cb\u30de\u30c3\u30af\u30b9\u6cd5\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u3067\u3042\u308d\u3046\u8a55\u4fa1\u5024\u306e\u7bc4\u56f2\u3092\u6c7a\u3081\u3066\u63a2\u7d22\u3092\u884c\u3044\u307e\u3059\uff0e\u63a2\u7d22\u3092\u7e70\u308a\u8fd4\u3059\u306b\u5f93\u3044\u3053\u306e\u7bc4\u56f2\u306f\u72ed\u307e\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\u7bc4\u56f2\u306e\u4e0b\u9650\u5024\u306e\u3053\u3068\u3092$\\alpha$\uff0c\u4e0a\u9650\u5024\u306e\u3053\u3068\u3092$\\beta$\u3068\u547c\u3073\u307e\u3059\uff0e$\\alpha$\u306e\u521d\u671f\u5024\u306f $-\\infty$\uff0c$\\beta$\u306e\u521d\u671f\u5024\u306f $+\\infty$ \u3067\u3059\uff0e\u5148\u624b\u756a\u5c40\u9762\u3067\u306f\u8a55\u4fa1\u5024\u304c\u6700\u5927\u306b\u306a\u308b\u624b\u3092\u63a2\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u3042\u308b\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u304c\u73fe\u5728\u306e$\\alpha$\u3092\u4e0a\u56de\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u5834\u5408\uff0c\u7bc4\u56f2\u306e\u4e0b\u9650\u304c\u305d\u306e\u8a55\u4fa1\u5024\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\uff0e\u5f8c\u624b\u756a\u5c40\u9762\u3067\u306f\u8a55\u4fa1\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u624b\u3092\u63a2\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u3042\u308b\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u304c\u73fe\u5728\u306e$\\beta$\u3092\u4e0b\u56de\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u5834\u5408\uff0c\u7bc4\u56f2\u306e\u4e0a\u9650\u304c\u305d\u306e\u8a55\u4fa1\u5024\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\uff0e\u5148\u624b\uff0c\u5f8c\u624b\u306e\u5c40\u9762\u306f\u4ea4\u4e92\u306b\u73fe\u308c\u308b\u306e\u3067\uff0c\u5148\u624b\u756a\u5c40\u9762\u3067\u8a55\u4fa1\u5024\u304c\u73fe\u5728\u306e$\\beta$\u4ee5\u4e0a\u3068\u306a\u308b\u3053\u3068\u304c\u660e\u3089\u304b\u306b\u306a\u3063\u305f\u6642\u70b9\u3067\uff0c\u305d\u306e\u5c40\u9762\u306b\u81f3\u308b\u624b\u306f\uff0c\u3072\u3068\u3064\u524d\u306e\u5f8c\u624b\u756a\u5c40\u9762\u306b\u304a\u3044\u3066\u9078\u629e\u3055\u308c\u306a\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u3092$\\beta$\u30ab\u30c3\u30c8\u3068\u547c\u3073\u305d\u306e\u5c40\u9762\u306f\u305d\u308c\u4ee5\u4e0a\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\uff0e\u5f8c\u624b\u756a\u5c40\u9762\u3067\u3082\uff0c\u73fe\u5728\u306e$\\alpha$\u4ee5\u4e0b\u306b\u306a\u308b\u3053\u3068\u304c\u660e\u3089\u304b\u306b\u306a\u3063\u305f\u6642\u70b9\u3067\uff0c\u305d\u306e\u5c40\u9762\u306b\u81f3\u308b\u624b\u306f\uff0c\u3072\u3068\u3064\u524d\u306e\u5148\u624b\u756a\u5c40\u9762\u306b\u304a\u3044\u3066\u9078\u629e\u3055\u308c\u306a\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u3092$\\alpha$\u30ab\u30c3\u30c8\u3068\u547c\u3073\u305d\u306e\u5c40\u9762\u306f\u305d\u308c\u4ee5\u4e0a\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\uff0e\n\nsearchMax()\n/**\n * \u5148\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMax (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5f8c\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMin(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta ) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0b\u9650\u3092\u66f4\u65b0\n        if (value >  alpha) {\n            alpha = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n\n\nsearchMax() \u3067\u306f\u3072\u3068\u3064\u3060\u3051\u624b\u3092\u9032\u3081\u3066\u5f8c\u624b\u306e\u5c40\u9762\u3092\u63a2\u7d22\u3059\u308b quiesMin() \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\uff0ePosition \u306b\u3088\u308b\u63a2\u7d22\u306f\u5148\u624b\u756a\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5f8c\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMin(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n\u5f8c\u624b\u756a\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5148\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMax(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n\u5c40\u9762\u3092\u9032\u3081\u308b move() \u30e1\u30bd\u30c3\u30c9\u306f\u5c40\u9762\u3092\u623b\u3059\u306e\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u8fd4\u3057\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u306f\u6307\u3057\u305f\u624b\u304c Move::Move \u578b\u3067\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3059\u304c \u4e0a\u4f4d 16 bit \u306b\u53d6\u3063\u305f\u99d2\u304c\u8a18\u9332\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3053\u308c\u3092 undo() \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u3068 move() \u3067\u9032\u3081\u305f\u5c40\u9762\u3092\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u4eca\u56de\u306f\u99d2\u304c\u3076\u3064\u304b\u308b\u3068\u304d\u306e\u53d6\u308a\u5408\u3044\u306e\u640d\u5f97\u3060\u3051\u3092\u8a55\u4fa1\u3057\u3066\u3044\u307e\u3059\uff0e\u3064\u307e\u308a genCapt() \u306b\u3088\u3063\u3066\u751f\u6210\u3057\u305f\u624b\u306b\u3064\u3044\u3066\u306e\u307f\u63a2\u7d22\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u63a2\u7d22\u3092\u9759\u6b62\u63a2\u7d22\u3068\u547c\u3073\u307e\u3059\uff0e\u3042\u308b\u4f4d\u7f6e\u306b\u5229\u3044\u3066\u3044\u308b\u99d2\u306e\u6570\u304c\u540c\u3058\u5834\u5408\uff0c\u5148\u306b\u53d6\u308a\u59cb\u3081\u305f\u65b9\u304c\u640d\u3092\u3057\u307e\u3059\uff0e\u3057\u305f\u304c\u3063\u3066\u9759\u6b62\u63a2\u7d22\u3067\u306f\u30d1\u30b9\u3092\u3057\u3066\u3082\u826f\u3044\u3053\u3068\u3068\u3057\u307e\u3059\uff0e\n\nquiesMax()\n/**\n * \u5148\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Max)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMax (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0a\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0b\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmax = p.eval();\n\n    // beta \u30ab\u30c3\u30c8 (standpat)\n    if (beta <= vmax) {\n        return beta;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmax;\n    }\n\n    // \u5148\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptB(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5f8c\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMin(p, max(vmax, alpha), beta, depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta) {\n            return beta;\n        }\n\n        // \u4e0b\u9650\u66f4\u65b0\u304b\n        if (value > vmax) {\n            vmax = value;\n        }\n\n    }\n\n    return vmax;\n\n}\n\n\ngenCapt() \u306f Pin \u3092\u51e6\u7406\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u751f\u6210\u3055\u308c\u308b\u624b\u306b\u81ea\u6bba\u624b\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\u5c40\u9762\u3092\u9032\u3081\u308b\u3068\u7389\u3092\u53d6\u308b\u624b\u304c\u73fe\u308c\u308b\u306e\u3067\u3053\u308c\u3092\u63a2\u7d22\u3067\u6392\u9664\u3057\u307e\u3059\uff0e\u624b\u304c\u7389\u3092\u53d6\u308b\u304b\u3069\u3046\u304b\u306f Position \u30af\u30e9\u30b9\u306e dusty() \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308a\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u7389\u3092\u53d6\u308b\u624b\u306f\u5148\u624b\u5c40\u9762\u3067\u306f $+\\infty$ \u5f8c\u624b\u5c40\u9762\u3067\u306f $-\\infty$ \u3068\u8a55\u4fa1\u3057\u307e\u3059\uff0e\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n\n\n\u4e09\u624b\u3060\u3051\u8aad\u3093\u3067\u307f\u308b\n\u99d2\u306e\u53d6\u308a\u5408\u3044\u3060\u3051\u306e\u8a55\u4fa1\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u3088\u308a\u306f\u307e\u3057\u3067\u3059\u304c\u307e\u3060\u307e\u3060\u5f31\u3044\u3067\u3059\uff0e\u3053\u308c\u306b\u4e09\u624b\u306e\u8aad\u307f\u3092\u52a0\u3048\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u306f\u9759\u6b62\u63a2\u7d22\u3068\u307b\u3068\u3093\u3069\u5909\u308f\u308a\u307e\u305b\u3093\uff0e\u63a2\u7d22\u3059\u308b\u624b\u306e\u751f\u6210\u3092 genFast() \u306b\u7f6e\u304d\u63db\u3048\u308b\u3060\u3051\u3067\u3059\uff0e\u4e09\u624b\u8aad\u3093\u3060\u672b\u7aef\u3067\u9759\u6b62\u63a2\u7d22\u3092\u547c\u3073\u51fa\u3057\u3066\u305d\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u3057\u307e\u3059\uff0e\n\nMain.cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n#include <CSAConnection.h>\n\nusing namespace game;\nusing namespace foundation;\nusing namespace Evaluation;\n\n/* --------------------------- global  variables --------------------------- */\n\n/// \u6700\u5927\u306e\u63a2\u7d22\u6df1\u3055\nstatic int                  _searchDepth    = 10;\n\n/// \u9759\u6b62\u63a2\u7d22\u306b\u5165\u308b\u63a2\u7d22\u6df1\u3055\nstatic int                  _stableDepth    = 3;\n\n/* ------------------------------------------------------------------------- */\n\n/* -------------------------- function prototypes -------------------------- */\n\n/// \u63a2\u7d22\nstatic size_t   searchMax (Position &, Array<Move::Move, Move::Max> &);\nstatic size_t   searchMin (Position &, Array<Move::Move, Move::Max> &);\nstatic Eval     searchMax (Position &, Eval alpha, Eval beta, int depth);\nstatic Eval     searchMin (Position &, Eval alpha, Eval beta, int depth);\nstatic Eval     quiesMax  (Position &, Eval alpha, Eval beta, int depth);\nstatic Eval     quiesMin  (Position &, Eval alpha, Eval beta, int depth);\n\n/* ------------------------------------------------------------------------- */\n\n/**\n * \u5148\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMax (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5f8c\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = searchMin(p, alpha, beta, 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta ) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0b\u9650\u3092\u66f4\u65b0\n        if (value >  alpha) {\n            alpha = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n\n/**\n * \u5f8c\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMin (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5148\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = searchMax(p, alpha, beta, 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0a\u9650\u3092\u66f4\u65b0\n        if (value <  beta ) {\n            beta  = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n\n/**\n * \u5148\u624b\u756a\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Max)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval searchMax (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\n    Eval vmax = -Infinity;\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u6b62\u63a2\u7d22\u306e\u7d50\u679c\u3092\u8fd4\u3059\n    if (depth > _stableDepth) {\n        return quiesMax(p, alpha, beta, depth); \n    }\n\n    // \u5148\u624b\u756a\u306e\u5019\u88dc\u624b (\u307b\u307c\u5408\u6cd5\u624b) \u3092\u751f\u6210\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u8a70\u307f (-Infinity)\n    Array<Move::Move, Move::Max> m;\n    p.genFastB(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5f8c\u624b\u756a\u3067\u63a2\u7d22\n        auto value = searchMin(p, max(vmax, alpha), beta, depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta) {\n            return beta;\n        }\n\n        // \u4e0b\u9650\u66f4\u65b0\u304b\n        if (value > vmax ) {\n            vmax = value;\n        }\n\n    }\n\n    return vmax;\n\n}\n\n/**\n * \u5f8c\u624b\u756a\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Min)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval searchMin (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\n    Eval vmin = Infinity;\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u6b62\u63a2\u7d22\u306e\u7d50\u679c\u3092\u8fd4\u3059\n    if (depth > _stableDepth) {\n        return quiesMin(p, alpha, beta, depth); \n    }\n\n    // \u5f8c\u624b\u756a\u306e\u5019\u88dc\u624b (\u307b\u307c\u5408\u6cd5\u624b) \u3092\u751f\u6210\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u8a70\u307f (Infinity)\n    Array<Move::Move, Move::Max> m;\n    p.genFastW(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyW(move)) {\n            vmin = -Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5148\u624b\u756a\u3067\u63a2\u7d22\n        auto value = searchMax(p, alpha, min(vmin, beta), depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            return alpha;\n        }\n\n        // \u4e0a\u9650\u66f4\u65b0\u304b\n        if (value < vmin  ) {\n            vmin = value;\n        }\n\n    }\n\n    return vmin;\n\n}\n\n/**\n * \u5148\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Max)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMax (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0a\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0b\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmax = p.eval();\n\n    // beta \u30ab\u30c3\u30c8 (standpat)\n    if (beta <= vmax) {\n        return beta;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmax;\n    }\n\n    // \u5148\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u7389\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptB(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5f8c\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMin(p, max(vmax, alpha), beta, depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta) {\n            return beta;\n        }\n\n        // \u4e0b\u9650\u66f4\u65b0\u304b\n        if (value > vmax) {\n            vmax = value;\n        }\n\n    }\n\n    return vmax;\n\n}\n\n/**\n * \u5f8c\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Min)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMin (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0b\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0a\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmin = p.eval();\n\n    // alpha \u30ab\u30c3\u30c8 (standpat)\n    if (alpha >= vmin) {\n        return alpha;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmin;\n    }\n\n    // \u5f8c\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u7389\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptW(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyW(move)) {\n            vmin = -Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5148\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMax(p, alpha, min(vmin, beta), depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            return alpha;\n        }\n\n        // \u4e0a\u9650\u66f4\u65b0\u304b\n        if (value < vmin) {\n            vmin = value;\n        }\n\n    }\n\n    return vmin;\n\n}\n\n\n\nint main (int argc, char * argv[])\n{\n\n    // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u78ba\u8a8d\n    if (argc != 4) {\n        std::cerr << \"Usage : \"\n                  << argv[0]\n                  << \"<User Name> <Password> <CSA Server>\"\n                  << std::endl;\n        exit(EXIT_FAILURE);\n    }\n\n    // \u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\n    CSAConnection csa(argv[3]);\n    csa.connect();\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u30ed\u30b0\u30a4\u30f3\n    csa.login(argv[1], argv[2]);\n\n    // \u5bfe\u5c40\u5f85\u3061\n    auto summary = csa.newGame();\n\n    // \u5bfe\u5c40\u53d7\u8afe\n    csa.accept();\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p(summary);\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3092\u78ba\u8a8d\n    auto myturn  = Position::myTurn(summary);\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u7528\n    Vector<std::string> message;\n\n    // \u5bfe\u6226\n    while (1) {\n\n        if (p.turn() == myturn) {\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\n\n            // \u6307\u3057\u624b\u751f\u6210\n            Array<Move::Move, Move::Max> move;\n            p.genMove(move);\n\n            // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n            if (move.vsize() == 0) {\n                // \u6295\u4e86\n                csa.resign();\n                break;\n            }\n\n            // \u63a2\u7d22\u306e\u7d50\u679c\u304c\u6700\u3082\u826f\u3044\u624b\u3092\u9078\u629e\u3059\u308b\n            size_t best;\n            if (move.vsize() > 1) {\n                if (myturn == Color::Black) {\n                    best = searchMax(p, move);\n                } else {\n                    best = searchMin(p, move);\n                }\n            } else {\n                // \u624b\u304c\u3072\u3068\u3064\u3060\u3051\u3057\u304b\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u624b\u3092\u6307\u3059\u3057\u304b\u306a\u3044\n                best = 0;\n            }\n\n            // \u6307\u3057\u624b\u9001\u4fe1\n            csa.send(p.string(move[best]));\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(move[best]);\n\n        } else {\n\n            // \u76f8\u624b\u306e\u624b\u756a\n\n            // \u76f8\u624b\u306e\u624b\u3092\u5f85\u3064\n            csa.receive(message);\n\n            // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u306e\u5148\u982d\u6587\u5b57\u304c '+' '-' \u3067\u306a\u3044\u3068\u304d\u306f\u6307\u3057\u624b\u3067\u306f\u306a\u3044\n            if (message[0][0] != '+' && message[0][0] != '-') {\n                // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\n                for (auto l : message) {\n                    std::cout << l << std::endl;\n                }\n                break;\n            }\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u624b\u756a\u306e\u6307\u3057\u624b (\u30a8\u30b3\u30fc) \u306f\u7121\u8996\n            const char turchk[] = {'+', '-'};\n            if (message[0][0] == turchk[myturn]) {\n                // 2 \u884c\u76ee\u306b\u76f8\u624b\u306e\u624b\u304c\u5165\u308b\u5834\u5408\u3082\u3042\u308b\n                if (message.size() == 2) {\n                    message[0] = message[1];\n                } else {\n                    continue;\n                }\n            }\n\n            // \u76f8\u624b\u306e\u624b\u3092\u8868\u793a\n            std::cout << message[0] << std::endl;\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(message[0]);\n\n        }\n\n        // \u5c40\u9762\u3092\u8868\u793a\n        std::cout << p << std::endl;\n\n    }\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5168\u3066\u53d7\u4fe1\n    while (csa.message()) {\n        csa.receive(message);\n        if (message.vsize() == 0) {\n            break;\n        }\n        for (auto l : message) {\n            std::cout << l << std::endl;\n        }\n    }\n\n    // \u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\n    csa.write(\"kifu.csa\");\n\n    // \u30ed\u30b0\u30a2\u30a6\u30c8\n    csa.logout();\n\n    // \u901a\u4fe1\u7d42\u4e86\n    csa.close();\n\n    exit(EXIT_SUCCESS);    \n\n}\n\n\n\u9759\u6b62\u63a2\u7d22\u306e\u307f\u306e\u3068\u304d\u3088\u308a\u3055\u3089\u306b\u5f37\u304f\u306a\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\u305f\u3060\u6307\u3059\u307e\u3067\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u3088\u3046\u306b\u3082\u306a\u308a\u307e\u3057\u305f\uff0e\u30a2\u30eb\u30d5\u30a1\u30fb\u30d9\u30fc\u30bf\u6cd5\u306f\u3044\u304b\u306b\u65e9\u304f\u8a55\u4fa1\u5024\u306e\u7bc4\u56f2\u3092\u72ed\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u304c\u52b9\u7387\u5316\u306e\u9375\u3068\u306a\u308a\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\u306b\u306f\u3088\u308a\u826f\u3044\u8a55\u4fa1\u5024\u304c\u5f97\u3089\u308c\u308b\u624b\u304b\u3089\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u307e\u305f\u99d2\u306e\u640d\u5f97\u3060\u3051\u306e\u8a55\u4fa1\u3088\u308a\u3082\u6b63\u78ba\u306b\u5c40\u9762\u3092\u8a55\u4fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3089\uff0c\u3088\u308a\u826f\u3044\u8a55\u4fa1\u5024\u304c\u5f97\u3089\u308c\u308b\u5c40\u9762\u306b\u81f3\u308b\u3067\u3042\u308d\u3046\u624b\u306b\u7d5e\u3063\u3066\u63a2\u7d22\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f Fedora 25 \u306b\u6700\u5c0f\u69cb\u6210\u3067\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u767a\u3059\u308b\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3057\u305f\uff0e\u305d\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u304b\u3089\u51fa\u767a\u3057\u3066\uff0c\u6700\u5f8c\u306f 3 \u624b\u8aad\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u307e\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\u6b21\u56de\u306f\uff0c\u7279\u5b9a\u306e\u5c40\u9762\u306e\u89e3\u6790\uff0c\u6642\u9593\u7ba1\u7406\uff0c\u7f6e\u63db\u8868\uff0c\u4e26\u5217\u63a2\u7d22\uff0c\u8a55\u4fa1\u95a2\u6570\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u9000\u884c\u30c6\u30b9\u30c8\u306b\u3064\u3044\u3066\u6295\u7a3f\u3057\u307e\u3059\uff0e\n\n\u8b1d\u8f9e\n\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u306b\u95a2\u3059\u308b\u60c5\u5831\u3084\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u516c\u958b\u3057\u3066\u304f\u3060\u3055\u3063\u3066\u3044\u308b\u5168\u3066\u306e\u65b9\u3005\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\uff0elibshogi \u306e\u958b\u767a\u306b\u3042\u305f\u308a lesserpyon\uff0cBonanza\uff0cApery\uff0c\u3084\u306d\u3046\u3089\u738b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u591a\u304f\u306e\u3053\u3068\u3092\u5b66\u3070\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0elesserpyon3 \u306e\u304a\u304b\u3052\u3067\u5408\u6cd5\u624b\u751f\u6210\u306e\u30af\u30ed\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u3067\u304d\u307e\u3057\u305f\uff0e\u307e\u305f\uff0c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u9078\u624b\u6a29\u3067\u306f\u4f55\u4eba\u304b\u306e\u958b\u767a\u8005\u306e\u65b9\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u6210\u306b\u3064\u3044\u3066\u6696\u304b\u3044\u5fdc\u63f4\u306e\u8a00\u8449\u3092\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0e\u516c\u5f0f\u5bfe\u5c40\u521d\u306e\u30b9\u30c6\u30a4\u30eb\u30e1\u30a4\u30c8\u306f\u30ab\u30c4\u4e3c\u5c06\u68cb\u3055\u3093\u7121\u3057\u306b\u306f\u6210\u3057\u3048\u306a\u304b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\uff0e\n\u3042\u3089\u305f\u3081\u3066\u7686\u69d8\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\uff0e\n# libshogi \u3067\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308d\u3046 \\(1\\)\n[\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cbAdventCalendar 2016](http://www.adventar.org/calendars/1457\")\u300023 \u4eba\u76ee\u306e [tsoftware](http://www.tsoftware.jp) \u3067\u3059\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u6a5f\u4f1a\u3092\u8a2d\u3051\u3066\u304f\u3060\u3055\u3063\u305f\u5e73\u5ca1\u3055\u3093\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\uff0e\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0c\u521d\u3081\u3066\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u65b9\u5411\u3051\u306b\uff0clibshogi \u3092\u4f7f\u3063\u305f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u767a\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n\n## libshogi \u306e\u7d39\u4ecb\n\n### libshogi \u3068\u306f\nlibshogi \u306f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u305f\u3081\u306e\u9053\u5177\u3092\u63d0\u4f9b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\uff0e\u7b2c24\u56de\u4e16\u754c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u9078\u624b\u6a29\u304b\u3089 libshogi \u3092\u4f7f\u3063\u305f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c libshogi \u306e\u540d\u524d\u3067\u51fa\u5834\u3057\u3066\u3044\u307e\u3059\uff0e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u9078\u624b\u6a29\u306b\u304a\u3051\u308b\u30ab\u30c4\u4e3c\u5c06\u68cb\u3055\u3093\u3068\u306e\u5c06\u68cb\u306f\uff0c[\u6b63\u5f0f\u306b\u8a18\u9332\u304c\u6b8b\u308b\u5c06\u68cb\u306e\u5bfe\u5c40\u3068\u3057\u3066\u306f\u304a\u305d\u3089\u304f\u521d\u3081\u3066\u306e\u30b9\u30c6\u30a4\u30eb\u30e1\u30a4\u30c8](https://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%86%E3%82%A4%E3%83%AB%E3%83%A1%E3%82%A4%E3%83%88)\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\n![katsudon.png](https://qiita-image-store.s3.amazonaws.com/0/152964/f6379baa-349e-506b-0378-7ac4ef843f48.png)\n\n\u30b9\u30c6\u30a4\u30eb\u30e1\u30a4\u30c8\u306b\u306a\u3063\u305f\u306e\u306f\u4e00\u624b\u8a70\u3081\u304c\u8aad\u3081\u306a\u3044\u306a\u3069 libshogi \u306e\u5f31\u3055\u304c\u539f\u56e0\u3067\u3059\uff0e\u3067\u3082\u9078\u624b\u6a29\u306e libshogi \u304c\u5f31\u3044\u306e\u306f libshogi \u4e0a\u3067\u52d5\u3044\u3066\u3044\u308b\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5f31\u3044\u306e\u3067\u3042\u3063\u3066\u30e9\u30a4\u30d6\u30e9\u30ea libshogi \u306e\u8cac\u4efb\u3067\u306f\u3042\u308a\u307e\u305b\u3093 \\(\u591a\u5206\\)\n\nlibshogi \u306f\u5c06\u68cb\u76e4\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3084\u5408\u6cd5\u624b\u751f\u6210\u306a\u3069\u57fa\u672c\u7684\u306a\u6a5f\u80fd\u306e\u307f\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e\u5c06\u68cb\u306e\u6226\u7565\u306f\u305d\u306e\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u62c5\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\uff0c\u4f5c\u308a\u65b9\u6b21\u7b2c\u3067\u5f37\u304f\u3082\u5f31\u304f\u3082\u306a\u308a\u307e\u3059\uff0e\n\n\n### \u958b\u767a\u8005\n\u958b\u767a\u306f[\u9999\u5ddd\u9ad8\u5c02\u8a6b\u9593\u30ad\u30e3\u30f3\u30d1\u30b9\u85e4\u4e95\u7814\u7a76\u5ba4](http://www.kagawa-nct.ac.jp/)\u3068 tsoftware \u3067\u884c\u3063\u3066\u3044\u307e\u3059\uff0e\u5c06\u68cb\u3092\u6559\u6750\u306b\u4eba\u5de5\u77e5\u80fd\u306e\u5b66\u7fd2\u304c\u3067\u304d\u305f\u3089\u697d\u3057\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3067 libshogi \u3068\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u308b\u5b66\u7fd2\u6559\u6750\u306e\u5171\u540c\u958b\u767a\u3092\u59cb\u3081\u307e\u3057\u305f\uff0e\u5168\u304f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\uff0c\u85e4\u4e95\u3064\u306a\u304c\u308a\u3067\uff0c\u30e1\u30f3\u30d0\u30fc\u5168\u54e1\u304c\u632f\u308a\u98db\u8eca\u515a\u3067\u85e4\u4e95\u731b\u4e5d\u6bb5\u306e\u30d5\u30a1\u30f3\u3067\u3059\uff0e\n\n\n### \u958b\u767a\u306e\u52d5\u6a5f\n\u85e4\u4e95\u7814\u7a76\u5ba4\u3067\u306f\u5c06\u68cb\u3092\u7d20\u6750\u306b\uff0c\u5b66\u751f\u304c\u63a2\u7d22\u306a\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u624b\u6cd5\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u5b66\u7fd2\u306b\u304a\u3044\u3066\u554f\u984c\u3068\u306a\u3063\u305f\u306e\u304c\u5c06\u68cb\u306e\u5bfe\u5c40\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u306e\u96e3\u3057\u3055\u3067\u3057\u305f\uff0e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u6570\u591a\u304f\u306e\u8457\u540d\u306a\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3069\u308c\u3082\u82f1\u77e5\u306e\u7d50\u6676\u3067\u3042\u308a\uff0c\u4e39\u5ff5\u306b\u8aad\u3080\u3053\u3068\u306b\u3088\u308a\u7d20\u6674\u3089\u3057\u3044\u77e5\u898b\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u4e00\u65b9\u3067\u305d\u308c\u3089\u306f\u4eba\u3092\u8d85\u3048\u308b\u3053\u3068\u3092\u76ee\u6a19\u306b\u78e8\u304d\u629c\u304b\u308c\u3066\u304d\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u306e\u3067\u7c21\u5358\u306b\u306f\u7406\u89e3\u3067\u304d\u307e\u305b\u3093\uff0e\u305d\u3053\u3067 C++ \u306e\u57fa\u672c\u7684\u306a\u6587\u6cd5\u3092\u77e5\u3063\u3066\u3044\u308b\u5b66\u751f\u304c\u77ed\u671f\u9593\u3067\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u59cb\u3081\u308b\u3068\u3053\u308d\u307e\u3067\u5230\u9054\u3067\u304d\u308b\u3053\u3068\u3092\u76ee\u6a19\u306b\u5b66\u7fd2\u7528\u306e\u5c06\u68cb\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u767a\u3057\u307e\u3057\u305f\uff0e\n\n\n### \u7279\u5fb4\nlibshogi \u306f x64 \u74b0\u5883\u3067\u52d5\u4f5c\u3057\u307e\u3059\uff0e\u5185\u90e8\u3067\u306f [\u7e26\u578b\u30d3\u30c3\u30c8\u30dc\u30fc\u30c9](http://yaneuraou.yaneu.com/2015/10/11/%E7%B6%9A-haswell%E4%BB%A5%E9%99%8D%E5%B0%82%E7%94%A8%E3%81%A0%E3%81%A8%E4%BD%95%E3%81%8C%E5%AC%89%E3%81%97%E3%81%84%E3%81%AE%E3%81%A7%E3%81%99%E3%81%8B%EF%BC%9F/) \u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\u5229\u304d\u30c6\u30fc\u30d6\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u8a08\u7b97\u306b\u306f `PEXT` \u547d\u4ee4\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\u5c11\u3057\u9045\u304f\u306a\u308a\u307e\u3059\u304c `PEXT` \u547d\u4ee4\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044 \\(`BMI2` \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\\) \u578b\u756a\u306e CPU \u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\uff0e\n\nlibshogi \u306f Boost \u3084 STL \u306a\u3069\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u305b\u305a\u306b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\uff0e\u30ea\u30b9\u30c8\u3084\u914d\u5217\u306a\u3069\u306e\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067 libshogi \u3060\u3051\u3067\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\uff0e\u5168\u3066\u306e\u6a5f\u80fd\u304c\u4e00\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u5b8c\u7d50\u3057\u3066\u3044\u308b\u3053\u3068\u306e\u30e1\u30ea\u30c3\u30c8\u306f\u30c7\u30d0\u30c3\u30b0\u306e\u3057\u3084\u3059\u3055\u3067\u3059\uff0e\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u554f\u984c\u304c\u3042\u3063\u3066\u3082\uff0c\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u306a\u3069\u306f\u5f80\u3005\u306b\u3057\u3066\u30ea\u30b9\u30c8\u3084\u914d\u5217\u306e\u4e2d\u3067\u767a\u751f\u3057\u307e\u3059\uff0e\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3082\u542b\u3081\u3066\u4e00\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u5b8c\u7d50\u3057\u3066\u3044\u308c\u3070\u554f\u984c\u306e\u5168\u4f53\u50cf\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\uff0e\u307e\u305f\uff0c\u6027\u80fd\u306e\u571f\u53f0\u3068\u306a\u308b\u90e8\u5206\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u7528\u306b\u6700\u9069\u5316\u3059\u308b\u4f59\u5730\u304c\u3042\u308b\u3068\u3044\u3046\u306e\u3082\u30e1\u30ea\u30c3\u30c8\u3067\u3059\uff0e\n\n\n### libshogi \u304c\u63d0\u4f9b\u3059\u308b\u3082\u306e\n\u56f3-1 \u306b libshogi \u306e\u968e\u5c64\u30e2\u30c7\u30eb\u3092\u793a\u3057\u307e\u3059\uff0e\u6700\u3082\u91cd\u8981\u306a\u306e\u306f\uff0c\u63a2\u7d22\uff0c\u5b9a\u8de1\uff0c\u5b66\u7fd2\u306a\u3069\u306e\u6226\u7565\u3092\u53f8\u308b\u90e8\u5206\u3067\u3059\uff0elibshogi \u3092\u4f7f\u7528\u3057\u3066\u958b\u767a\u884c\u3046\u5834\u5408\uff0c\u3053\u306e\u90e8\u5206\u3092\u81ea\u4f5c\u306e\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u4f5c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0elibshogi \u306f\u7db2\u639b\u3051\u3055\u308c\u305f\u6a5f\u80fd\u306e\u307f\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0efoundation \u5c64\u3067\u306f\uff0c\u30a2\u30c8\u30df\u30c3\u30af\u64cd\u4f5c\uff0c\u30ed\u30c3\u30af\uff0c\u30b9\u30ec\u30c3\u30c9\uff0c\u30ea\u30b9\u30c8\uff0c\u306a\u3069\u306e\u57fa\u672c\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u64cd\u4f5c\uff0cgame \u5c64\u3067\u306f\uff0c\u30eb\u30fc\u30eb\u901a\u308a\u6307\u3059\u305f\u3081\u306e\u5c06\u68cb\u6a5f\u80fd\uff0c\u5916\u90e8\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306e\u901a\u4fe1\u6a5f\u80fd\u306a\u3069\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/e6d0929a-014d-de28-50be-95e13a244945.png)\n\u56f3-1\n\n\n### \u30e9\u30a4\u30bb\u30f3\u30b9\nlibshogi \u306f [LGPL](\"https://www.gnu.org/licenses/lgpl-3.0.en.html\") \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\uff0e\u30b7\u30a7\u30a2\u30fc\u30c9\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30ea\u30f3\u30af\u3057\u3066\u4f7f\u7528\u3044\u305f\u3060\u304f\u9650\u308a\u306f\uff0c\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u672c\u4f53\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u958b\u793a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u30e9\u30a4\u30d6\u30e9\u30ea\u672c\u4f53\u306b\u52a0\u3048\u305f\u5909\u66f4\u3060\u3051\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0elibshogi \u306b\u306f [SIMD-oriented Fast Mersenne Twister (SFMT)](http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index-jp.html) \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306b\u3064\u3044\u3066\u306f SFMT \u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b LICENSE.txt \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \n\n\n## libshogi \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nlibshogi \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u7c21\u5358\u3067\u3059\uff0e\u3053\u3053\u3067\u306f Fedora 25 Server \u306b\u6700\u5c0f\u69cb\u6210\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n### \u52d5\u4f5c\u74b0\u5883\n- x64\n- Berkeley \u30bd\u30b1\u30c3\u30c8\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b POSIX \u30b7\u30b9\u30c6\u30e0 (Linux \u306a\u3069)\n- gcc 5.1 \u3082\u3057\u304f\u306f\u305d\u308c\u4ee5\u4e0a (c++14 \u306e\u30b5\u30dd\u30fc\u30c8)\n\nlibshogi \u306f [Fedora 25](https://getfedora.org/ja/)\uff0c[Ubuntu 16.04](https://www.ubuntu.com/)\uff0c[Linux Mint 18](http://linuxmint-jp.net/) \u3067\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\uff0e\u65b0\u3057\u304f\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u306e\u3067\u3042\u308c\u3070\uff0c\u30a8\u30c7\u30a3\u30bf\u306a\u3069\u306e\u57fa\u672c\u7684\u306a\u9053\u5177\u304c\u521d\u3081\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b Linux Mint 18 \u304c\u304a\u3059\u3059\u3081\u3067\u3059\uff0eFedora 25 Server \u3092\u6700\u5c0f\u69cb\u6210\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\uff0cgcc-c++\uff0cmake\uff0cctags\uff0cvim \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308c\u3070\u77ed\u6642\u9593\u306b\u958b\u767a\u74b0\u5883\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u304c [FreeBSD](https://www.freebsd.org/ja/) \u306a\u3069\u4ed6\u306e POSIX \u30b7\u30b9\u30c6\u30e0\u3067\u3082\u52d5\u4f5c\u3059\u308b\u306f\u305a\u3067\u3059\uff0e\n\n### Fedora 25 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nFedora 25 \u3067\u6700\u5c0f\u9650\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0eFedora \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb CD/DVD \u306e ISO \u30a4\u30e1\u30fc\u30b8\u306f[Fedora Server \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8](https://getfedora.org/ja/server/download/) \u304b\u3089\u5165\u624b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u4f7f\u7528\u3067\u304d\u308b\u74b0\u5883\u3067\u3042\u308c\u3070\u30cd\u30c3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30a4\u30e1\u30fc\u30b8\u304c\u7c21\u4fbf\u3067\u3059\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/153b950f-2b15-0aa1-5873-0405cff112b4.png)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u304c\u8d77\u52d5\u3057\u305f\u3089 **Install Fedora 25** \u3092\u9078\u3073\u307e\u3059\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/8e6bdbe1-1d13-f3af-4a84-9ac94a391895.png)\n\n\u8a00\u8a9e\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/1e567139-8bb2-4337-4a85-ec49a7245bbc.png)\n\n**\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u9078\u629e(S)** \u3092**\u6700\u5c0f\u9650\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb**\u306b\u3057\u307e\u3059\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/f47e65d4-3944-c9c9-29ec-1709ec6dc435.png)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/3d2ae102-940a-96ab-19b4-a3f3b22afb6e.png)\n\n**\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148 (D)**\u3092\u958b\u3044\u3066\u78ba\u8a8d\u3068\u5b8c\u4e86\u3092\u884c\u3046\u3068**\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u958b\u59cb(B)**\u3092\u62bc\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u30c7\u30a3\u30b9\u30af\u306b\u3042\u308b\u30c7\u30fc\u30bf\u306f\u5168\u3066\u5931\u308f\u308c\u307e\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/9275cc25-8ece-04ef-7f86-3de5b3f4ad41.png)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u9593\u306b**ROOT \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a (R)**\u3068\u4e00\u822c**\u30e6\u30fc\u30b6\u306e\u4f5c\u6210 (U)**\u3092\u884c\u3044\u307e\u3059\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/e83979d0-c36e-dc82-8cb8-a3fe013ed404.png)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7d42\u4e86\u307e\u3067\u304a\u3088\u305d 15 \u5206\u7a0b\u5ea6\u3067\u3059\uff0e\u5b8c\u4e86\u3057\u305f\u3089**\u518d\u8d77\u52d5(R)**\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/aba0f77f-e590-4226-5374-3acd49f9b0ab.png)\n\n\u3053\u3053\u304b\u3089\u5148\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u7aef\u672b\u3067\u306e\u4f5c\u696d\u3068\u306a\u308a\u307e\u3059\uff0eWindows \u304b\u3089\u30ea\u30e2\u30fc\u30c8\u63a5\u7d9a\u3059\u308b\u306e\u3067\u3042\u308c\u3070 [Tera Term](https://ttssh2.osdn.jp/) \u304c\u304a\u3059\u3059\u3081\u3067\u3059\uff0e\u4ee5\u4e0b\u306e\u3088\u3046\u306b root \u3067\u30ed\u30b0\u30a4\u30f3\u3057 IP \u30a2\u30c9\u30ec\u30b9\u3092\u78ba\u8a8d\u3057\u305f\u4e0a\u3067\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/bb811de0-191f-0c04-ceaa-b19748583a16.png)\n\n\n### libshogi \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nlibshogi \u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306a\u306e\u306f gcc-c++\uff0cmake\uff0cctags \u3067\u3059\uff0e\u307e\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u53d6\u5f97\u306b git \u304c\u5fc5\u8981\u3067\u3059\uff0e\u3053\u308c\u4ee5\u5916\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u306a\u3082\u306e\u3068\u3057\u3066\uff0cgdb\uff0cwget\uff0cvim\uff0c screen \u306a\u3069\u304c\u3042\u308a\u307e\u3059\uff0eWindows \u3068\u30d5\u30a1\u30a4\u30eb\u3092\u5171\u6709\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u7de8\u96c6\u3092\u884c\u3046\u306e\u3067\u3042\u308c\u3070 samba \u3082\u3042\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\uff0eroot \u6a29\u9650\u3067\u305d\u308c\u3089\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e\n\n```shell-session\n# yum -y install sudo git gcc-c++ make ctags gdb vim screen samba ftp wget openssh-clients\n```\n\n\u6b21\u306b libshogi \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e**\u4e00\u822c\u30e6\u30fc\u30b6**\u3067\u4f5c\u696d\u3092\u884c\u3044\u307e\u3059\uff0eGitHub \u304b\u3089\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u305f\u3089 libshogi \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b Makefile \u3092\u958b\u3044\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n```shell-session\n$ git clone https://github.com/makudenki/libshogi.git\n$ cd libshogi\n$ vi Makefile\n```\n\n\u3053\u3053\u3067\u306f\u3044\u304f\u3064\u304b\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\uff0e\n\n```Makefile\nTARGET  = /usr/local\nHEADDIR = $(TARGET)/include/shogi/\nLIBRDIR = $(TARGET)/lib64\nLIBNAME = libshogi.so.0\nBMI2    = n\nTLS     = n\n```\n\n`TARGET` \u306b\u306f libshogi \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30c8\u30c3\u30d7\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f `/usr/local/` \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e`HEADDIR` \u306b\u306f\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e`LIBDIR` \u306b\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\n\u3082\u3057\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u304c BMI2 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070 `PEXT` \u547d\u4ee4\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u6027\u80fd\u304c\u5411\u4e0a\u3057\u307e\u3059\uff0e\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c `flags : ... bmi2 ...` \u306e\u8868\u793a\u304c\u3042\u308c\u3070\u30d7\u30ed\u30bb\u30c3\u30b5\u304c BMI2 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```shell-session\n$ cat /proc/cpuinfo | grep bmi2 \nflags           : ..... bmi2 .....\n```\n\n`PEXT` \u547d\u4ee4\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f Makefile \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\n```Makefile\nBMI2    = y\n```\n\nlibshogi \u3067\u306f\u5c40\u9762\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9 `Position` \u304c\u983b\u7e41\u306b\u30b3\u30d4\u30fc\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\uff0e\u3082\u3057\u30b3\u30d4\u30fc\u306e\u30b3\u30b9\u30c8\u304c\u7121\u8996\u3067\u304d\u306a\u3044\u5834\u5408\u306f\uff0c\u30b3\u30f3\u30c6\u30af\u30b9\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u90e8\u5206 (\u30b3\u30f3\u30c6\u30af\u30b9\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5) \u3092 Thread Local Storage (TLS) \u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\u3053\u308c\u306b\u3088\u308a `Position` \u306e\u30d5\u30c3\u30c8\u30d7\u30ea\u30f3\u30c8\u304c\u534a\u5206\u7a0b\u5ea6\u306b\u306a\u308a\u307e\u3059\uff0e\u305f\u3060\u3057 TLS \u306b\u3059\u308b\u3068\u8aad\u307f\u66f8\u304d\u306e\u5ea6\u306b\u30a2\u30c9\u30ec\u30b9\u306e\u78ba\u8a8d\u304c\u884c\u308f\u308c\u308b\u305f\u3081\u52b9\u7387\u304c\u843d\u3061\u307e\u3059\uff0e\u30b3\u30d4\u30fc\u306e\u30b3\u30b9\u30c8\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u3092\u3088\u304f\u691c\u8a0e\u3057\u305f\u4e0a\u3067\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0eTLS \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f Makefile \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\n```Makefile\nTLS     = y\n```\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306f `make` \u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n\n```shell-session\n$ make\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f root \u6a29\u9650\u3067 `make install` \u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n\n```shell-session\n# make install\n```\n\n\u3053\u308c\u3067 libshogi \u3092\u4f7f\u7528\u3057\u3066\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u767a\u3059\u308b\u74b0\u5883\u304c\u6574\u3044\u307e\u3057\u305f\uff0e\n\n\n## libshogi \u3092\u4f7f\u7528\u3057\u305f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\nlibshogi \u3092\u4f7f\u7528\u3057\u305f\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n### \u521d\u624b7\u516d\u6b69\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u305f\u3081\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\u4f5c\u6210\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b Makefile \u306e\u3072\u306a\u5f62 `libshogi/example/Makefile` \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff0e\u3053\u306e Makefile \u306f Main.cpp \u304b\u3089 shogiprogram \u3068\u3044\u3046\u540d\u524d\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\n```shell-session\n$ cd\n$ pwd\n/home/XXXXXX\n$ ls\nlibshogi\n$ mkdir shogiprogram\n$ cd shogiprogram\n$ cp ../libshogi/example/Makefile .\n$ vim Makefile\n```\n\nMakefile \u306f libshogi \u672c\u4f53\u3092\u30d3\u30eb\u30c9\u3057\u305f\u3068\u304d\u3068\u540c\u3058\u8a2d\u5b9a\u306b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n```Makefile\nTARGET  = /usr/local\nHEADDIR = $(TARGET)/include/shogi/\nLIBRDIR = $(TARGET)/lib64\nLIBNAME = libshogi.so.0\nBMI2    = n\nTLS     = n\n```\n\n\u305d\u308c\u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\uff0eshogiprogram \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u3067 Main.cpp \u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3059\uff0e\n\n```cpp:Main.cpp\n#include <iostream>\n#include <Shogi.h>\n\nusing namespace game;\n\nint main (void)\n{\n\n    // \u30e9\u30a4\u30d6\u30e9\u30ea\u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p;\n\n    // \u5e73\u624b\u521d\u671f\u5c40\u9762\u306b\u3059\u308b\n    p.init();\n\n    // \u5c40\u9762\u3092\u8868\u793a\n    std::cout << p << std::endl;\n\n    // \u6307\u3057\u624b 7\u516d\u6b69\u3092\u4f5c\u6210\n    Move::Move m = Move::move(Square::SQ77, Square::SQ76);\n\n    // 7\u516d \u6b69\u3092\u6307\u3059\n    p.move(m);\n\n    // \u518d\u3073\u5c40\u9762\u3092\u8868\u793a\n    std::cout << p << std::endl;\n\n    return 0;\n\n}\n```\n\n\u307e\u305a `make` \u306b\u3088\u308a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\uff0e\u74b0\u5883\u5909\u6570 `LD_LIBRARY_PATH` \u306b\u30b7\u30a7\u30a2\u30fc\u30c9\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5834\u6240\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\uff0e\u540c\u3058\u30b7\u30a7\u30eb\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f7f\u3044\u7d9a\u3051\u308b\u306e\u3067\u3042\u308c\u3070\u6b21\u56de\u304b\u3089\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\n\n```shell-session\n$ make\n$ export LD_LIBRARY_PATH=/usr/local/lib64\n$ ./shogiprogram\n```\n\n`LD_LIBRARY_PATH` \u3092\u6307\u5b9a\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u3068\u304d\u306f root \u6a29\u9650\u3067 `/etc/ld.so.conf` \u30d5\u30a1\u30a4\u30eb\u306b `/usr/local/lib64` \u3092\u8ffd\u8a18\u3059\u308c\u3070\u90fd\u5ea6\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e**\u30b3\u30de\u30f3\u30c9\u3092\u9593\u9055\u3048\u306a\u3044\u3088\u3046\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044**\uff0e\n\n```shell-session\n# echo '/usr/local/lib64' >> /etc/ld.so.conf\n# ldconfig\n```\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8aac\u660e\u3092\u3057\u307e\u3059\uff0elibshogi \u306e\u5c06\u68cb\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f `Shogi.h` \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\uff0eShogi \u306b\u95a2\u9023\u3059\u308b\u69d8\u3005\u306a\u30c7\u30fc\u30bf\u3084\u6a5f\u80fd\u306f\u540d\u524d\u7a7a\u9593 `game::` \u4e0a\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4ed6\u306e\u5c06\u68cb\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u5171\u7528\u3059\u308b\u3088\u3046\u306a\u3053\u3068\u304c\u306a\u3051\u308c\u3070\u540d\u524d\u304c\u885d\u7a81\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u306e\u3067 `using namespace game;` \u3068\u3057\u307e\u3057\u3087\u3046\uff0e \n\n```cpp\n#include <iostream>\n#include <Shogi.h>\n\nusing namespace game;\n```\n\n\u6700\u521d\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u521d\u671f\u5316\u304c\u5fc5\u8981\u3067\u3059\uff0e\u3053\u308c\u306b\u3088\u308a\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u4e71\u6570\u30c6\u30fc\u30d6\u30eb\u3084\u5229\u304d\u30c6\u30fc\u30d6\u30eb\u304c\u521d\u671f\u5316\u3055\u308c\u307e\u3059\uff0e\n\n```cpp\n    // \u30e9\u30a4\u30d6\u30e9\u30ea\u521d\u671f\u5316\n    Shogi::initialize();\n```\n\n\u6b21\u306b\u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u99d2\u4fa1\u5024\u304c `libshogi/lib/shogi/Evaluation.h` \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\n```cpp:libshogi/lib/shogi/Evaluation.h\n/// Value of the pieces on board\nstatic const Eval           Value[Piece::Pieces] = {\n                            //  EMP   BFU   BKY   BKE   BGI   BKA   BHI   BKI\n                                  0,  100,  200,  300,  400,  800, 1000,  500,\n                            //  BOU   BTO   BNY   BNK   BNG   BUM   BRY\n                                  0,  500,  500,  500,  500, 1300, 1500,    0,\n                            //        WFU   WKY   WKE   WGI   WKA   WHI   WKI\n                                  0, -100, -200, -300, -400, -800,-1000, -500,\n                            //  WOU   WTO   WNY   WNK   WNG   WUM   WRY\n                                  0, -500, -500, -500, -500,-1300,-1500,    0\n                            };\n\n/// Number of pieces\n/// Value of the pieces in hands\nstatic const Eval           Hands[Piece::Depth + 1][Piece::Kind] = {\n                            //  EMP    FU    KY    KE    GI    KA    HI    KI\n                             {    0,    0,    0,    0,    0,    0,    0,    0},\n                             {    0,  100,  200,  300,  400,  800, 1000,  500},\n                             {    0,  200,  400,  600,  800, 1600, 2000, 1000},\n                             {    0,  300,  600,  900, 1200,    0,    0, 1500},\n                             {    0,  400,  800, 1200, 1600,    0,    0, 2000},\n                             {    0,  500,    0,    0,    0,    0,    0,    0},\n                             {    0,  600,    0,    0,    0,    0,    0,    0},\n                             {    0,  700,    0,    0,    0,    0,    0,    0},\n                             {    0,  800,    0,    0,    0,    0,    0,    0},\n                             {    0,  900,    0,    0,    0,    0,    0,    0},\n                             {    0, 1000,    0,    0,    0,    0,    0,    0},\n                             {    0, 1100,    0,    0,    0,    0,    0,    0},\n                             {    0, 1200,    0,    0,    0,    0,    0,    0},\n                             {    0, 1300,    0,    0,    0,    0,    0,    0},\n                             {    0, 1400,    0,    0,    0,    0,    0,    0},\n                             {    0, 1500,    0,    0,    0,    0,    0,    0},\n                             {    0, 1600,    0,    0,    0,    0,    0,    0},\n                             {    0, 1700,    0,    0,    0,    0,    0,    0},\n                             {    0, 1800,    0,    0,    0,    0,    0,    0}\n                            };\n```\n\n\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u306e\u3067\u3042\u308c\u3070\uff0c\n\n```cpp\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n```\n\n\u3068\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u540c\u3058\u30b5\u30a4\u30ba\u306e\u914d\u5217\u3092 `setValue()` \u30e1\u30bd\u30c3\u30c9\u3068 `handsValue()` \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u99d2\u306e\u4fa1\u5024\u306f\u5168\u4f53\u3092\u901a\u3057\u3066\u4e00\u56de\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3067\u826f\u3044\u3067\u3059\uff0e\n\n\u5c40\u9762\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9\u306f `Position` \u3067\u3059\uff0e`init()` \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u5e73\u624b\u521d\u671f\u5c40\u9762\u306b\u306a\u308a\u307e\u3059\uff0e\n\n```cpp\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p;\n\n    // \u5e73\u624b\u521d\u671f\u5c40\u9762\u306b\u3059\u308b\n    p.init();\n\n    // \u5c40\u9762\u3092\u8868\u793a\n    std::cout << p << std::endl;\n```\n\n`Position` \u306f iostream \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u307e\u307e `std::cout` \u306b\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/cc6eab7e-240b-253d-b590-edec96916528.png)\n\n\u8868\u793a\u3067 Hash \u306f\u5c40\u9762\u306e\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\uff0cHand \u306f\u6301\u3061\u99d2\u306e\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\uff0cBoard \u306f\u76e4\u9762\u306e\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u3067\u3059\uff0e\u76e4\u9762\u306e\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306b\u3088\u3063\u3066\u5c40\u9762\u3092 64 bit \u5024\u3067\u8b58\u5225\u3057\u307e\u3059\uff0eExchange \u306f\u99d2\u306e\u640d\u5f97 \\(\u99d2\u5272\u308a\\) \u3067\u3059\uff0e\u76e4\u4e0a\u306e\u99d2\u306f\u9ec4\u8272\u304c\u5f8c\u624b\uff0c\u7dd1\u304c\u5148\u624b\u3067\u3059\uff0eHand \u306b\u306f\u6301\u3061\u99d2\u3068\u679a\u6570\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\n\n\u6307\u3057\u624b\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306b `Move::Move` \u3068\u3044\u3046\u5217\u6319\u578b\u304c `libshogi/lib/shogi/Move.h` \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e[\u3084\u306d\u3046\u3089\u738b](http://yaneuraou.yaneu.com/) \u306e\u5b9f\u88c5\u3092\u53c2\u8003\u306b 16 bit \u3067\u624b\u3092\u8868\u73fe\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```cpp:libshogi/lib/shogi/Move.h\n/**\n *  Move\n *   is 16 bit-value expressed as the followings;\n *\n *   MSB                                                         LSB\n *   15  14  13  12  11  10   9   8   7   6   5   4   3   2   1   0\n *  +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n *  |   |   |                           |                           |\n *  |   |   |    Square moved from      |     Square moved to       |\n *  |   |   |                           |                           |\n *  +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n *    |   |\n *    |   +--- indicator for dropping moves.\n *    |\n *    +------- Indicator for promoting moves.\n *\n *    YaneuraOu combines this with 16 bits evaluation value to 32 bits\n *    value. This makes it easy for CPU to line the values in its cache.\n *\n */\nenum Move : uint32_t {\n\n    /// Void move\n    None    = 0,\n\n    /// Dropping move\n    Drop    = 1 << 14,\n\n    /// Promoting move\n    Promote = 1 << PromotionShift\n\n};\n```\n\n\u76e4\u4e0a\u306e\u4f4d\u7f6e\u306f `Square::Square` \u578b\u3067\u8868\u73fe\u3057\u307e\u3059\uff0e\u4f8b\u3048\u3070 7\u516d \u306e\u5730\u70b9\u306f `Square::SQ76`\uff0c7\u4e03\u306e\u5730\u70b9\u306f `Square::SQ77` \u3068\u306a\u308a\u307e\u3059\uff0e\u521d\u624b 7\u516d\u6b69\u306f `SQ77` \u304b\u3089 `SQ76` \u3078\u306e\u79fb\u52d5\u3067\u3059\u306e\u3067\uff0c\n\n```cpp\n    // \u6307\u3057\u624b 7\u516d\u6b69\u3092\u4f5c\u6210\n    Move::Move m = Move::move(Square::SQ77, Square::SQ76);\n```\n\n\u306e\u3088\u3046\u306b\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u3053\u3053\u307e\u3067\u898b\u3066\u6c17\u3065\u304b\u308c\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u304c\uff0clibshogi \u3067\u306f\u307b\u3068\u3093\u3069\u306e\u578b\u304c\u56fa\u6709\u306e\u540d\u524d\u7a7a\u9593\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0e\u983b\u7e41\u306b\u4f7f\u3046\u540d\u524d\u7a7a\u9593\u306f `using namespace` \u3067\u7701\u7565\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\uff0e\u624b\u3092\u5c40\u9762\u306b\u53cd\u6620\u3055\u305b\u308b\u306b\u306f `move()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\n```cpp\n    // 7\u516d \u6b69\u3092\u6307\u3059\n    p.move(m);\n```\n\n\u3082\u3046\u4e00\u5ea6\u8868\u793a\u3059\u308b\u3068 7\u516d\u6b69\u304c\u6307\u3055\u308c\u305f\u5c40\u9762\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/3f069a31-d621-1c0b-8878-81f98b161581.png)\n\n\u601d\u3063\u305f\u3088\u308a\u7c21\u5358\u3067\u3059\u306d\uff0e\n\n\n\n\n### \u521d\u3081\u3066\u306e\u5bfe\u5c40\n\u521d\u3081\u3066\u306e\u5bfe\u5c40\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u6307\u3057\u624b\u3067\u81ea\u5df1\u5bfe\u6226\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6b21\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\uff0e\n\n```cpp:Main.cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n\nusing namespace game;\nusing namespace foundation;\n\nint main (void)\n{\n\n    // \u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p;\n\n    // \u5e73\u624b\u521d\u671f\u5c40\u9762\u306b\u3059\u308b\n    p.init();\n\n    // \u5bfe\u6226\n    while (1) {\n\n        // \u6307\u3057\u624b\u751f\u6210\n        Array<Move::Move, Move::Max> move;\n        p.genMove(move);\n\n        // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n        if (move.vsize() == 0) {\n            break;\n        }\n\n        // \u30e9\u30f3\u30c0\u30e0\u306b\u624b\u3092\u9078\u3076\n        int choice = rand() % (int)move.vsize();\n\n        // \u624b\u3092\u8868\u793a\n        std::cout << p.string(move[choice]) << std::endl;\n\n        // \u7740\u624b\n        p.move(move[choice]);\n\n        // \u5c40\u9762\u3092\u8868\u793a\n        std::cout << p << std::endl;\n\n    }\n\n    return 0;\n\n}\n```\n\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u74b0\u5883\u5909\u6570 `LD_LIBRARY_PATH` \u306f\u6bce\u56de\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u65b0\u3057\u3044\u30b7\u30a7\u30eb\u3092\u958b\u3044\u305f\u3068\u304d\u306b\u4e00\u56de\u3060\u3051 `export` \u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n```shell-session\n$ make\n$ export LD_LIBRARY_PATH=/usr/local/lib64 # \u6bce\u56de\u5fc5\u8981\u3067\u306f\u306a\u3044\n$ ./shogiprogram\n```\n\n\u30e9\u30f3\u30c0\u30e0\u306b\u6307\u3059\u3068\u6c7a\u7740\u304c\u3064\u304b\u306a\u3044\u306e\u3067\u306f\u3068\u5fc3\u914d\u306b\u306a\u308a\u307e\u3059\uff0e\u3057\u304b\u3057\u4e71\u6570\u3092\u521d\u671f\u5316\u3057\u3066\u3082\u307b\u3068\u3093\u3069\u306e\u5834\u5408 1 \u79d2\u4ee5\u5185\u306b\u6c7a\u7740\u304c\u3064\u304d\u307e\u3059\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n```cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n\nusing namespace game;\nusing namespace foundation;\n```\n\n\u4eca\u56de\u306f `Position` \u304c\u751f\u6210\u3057\u305f\u624b\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e Array \u3092\u4f7f\u7528\u3057\u307e\u3059\uff0eArray \u306f\u56fa\u5b9a\u9577\u914d\u5217\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u3067\u3059\uff0e`Array<\u578b, \u8981\u7d20\u6570>` \u306e\u3088\u3046\u306b\u4f7f\u3044\u307e\u3059\uff0e\u624b\u3092\u66f8\u304d\u8fbc\u3080\u305f\u3081\u578b\u306f `Move::Move`\uff0c\u8981\u7d20\u6570\u306f `libshogi/lib/shogi/Move.h` \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b `Move::Max = 539` \u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\n```cpp\n        // \u6307\u3057\u624b\u751f\u6210\n        Array<Move::Move, Move::Max> move;\n        p.genMove(move);\n```\n\n`Position` \u306f\u5185\u90e8\u3067\u624b\u756a\u3092\u7ba1\u7406\u3057\u3066\u3044\u3066 `genMove()` \u30e1\u30bd\u30c3\u30c9\u306f\u73fe\u5c40\u9762\u306e\u5408\u6cd5\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e`Position` \u304c\u751f\u6210\u3059\u308b\u624b\u306e\u7a2e\u985e\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\uff0e\n\n\n|  \u30e1\u30bd\u30c3\u30c9  |   \u624b\u756a    | \u6253\u3061\u6b69\u8a70\u3081 |    Pin    |\n|:---------:|:---------:|:---------:|:---------:|\n|genMove()  |           |    \u00d7      |     \u25cb     |\n|genMoveB() |\u5148\u624b       |    \u00d7      |     \u25cb     |\n|genMoveW() |\u5f8c\u624b       |    \u00d7      |     \u25cb     |\n|minorMove()|           |    \u00d7      |     \u25cb     |\n|genFast()  |           |    \u00d7      |     \u00d7     |\n|genFastB() |\u5148\u624b       |    \u00d7      |     \u00d7     |\n|genFastW() |\u5f8c\u624b       |    \u00d7      |     \u00d7     |\n|genCapt()  |           |    \u00d7      |     \u00d7     |\n|genCaptB() |\u5148\u624b       |    \u00d7      |     \u00d7     |\n|genCaptW() |\u5f8c\u624b       |    \u00d7      |     \u00d7     |\n|genChck()  |           |    \u00d7      |     \u25cb     |\n|genChckB() |\u5148\u624b       |    \u00d7      |     \u25cb     |\n|genChckW() |\u5f8c\u624b       |    \u00d7      |     \u25cb     |\n|genCFst()  |           |    \u00d7      |     \u00d7     |\n|genCFstB() |\u5148\u624b       |    \u00d7      |     \u00d7     |\n|genCFstW() |\u5f8c\u624b       |    \u00d7      |     \u00d7     |\n\n`genMove()` \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f [Pin](https://ja.wikipedia.org/wiki/%E3%83%94%E3%83%B3_\\(%E3%83%81%E3%82%A7%E3%82%B9\\)) \u3092\u8003\u616e\u3057\u305f\u5408\u6cd5\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u6b69\uff0c\u89d2\uff0c\u98db\u306e\u4e0d\u6210\u306f\u751f\u6210\u3057\u307e\u305b\u3093\uff0e\u6b69\uff0c\u89d2\uff0c\u98db\u306e\u4e0d\u6210\u306f\u5225\u306b `minorMove()` \u3092\u547c\u3073\u51fa\u305b\u3070\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e`genMoveB()` \u306f\u5148\u624b\u306e\u624b\uff0c`genMoveW()` \u306f\u5f8c\u624b\u306e\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e`Position` \u306e\u6307\u3057\u624b\u751f\u6210\u306f\u624b\u756a\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u63a2\u7d22\u306a\u3069\u624b\u756a\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30af\u30b9\u30c8\u304b\u3089\u547c\u3073\u51fa\u3059\u5834\u5408\u306f\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u305f\u65b9\u304c\u65e9\u304f\u306a\u308a\u307e\u3059\uff0e\n\n`genFast()` \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f Pin \u3092\u8003\u616e\u3057\u307e\u305b\u3093\uff0e\u3057\u305f\u304c\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u624b\u306b\u306f\u81ea\u6bba\u624b\u304c\u542b\u307e\u308c\u307e\u3059\uff0e`genCapt()` \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u3082 Pin \u3092\u8003\u616e\u3057\u307e\u305b\u3093\uff0e`genCapt()` \u306f\u99d2\u3092\u53d6\u308b\u624b\uff0c\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\n\n`genChck()` \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f Pin \u3092\u8003\u616e\u3057\u305f\u738b\u624b\uff0c\u307e\u305f\u306f\u81ea\u7389\u306b\u738b\u624b\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\n\n`genCFst()` \u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f Pin \u3092\u8003\u616e\u305b\u305a\u306b\u738b\u624b\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306f\u751f\u6210\u3057\u307e\u305b\u3093\uff0e`genCFst()` \u306f `genCapt()` \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u9759\u6b62\u63a2\u7d22\u306b\u304a\u3044\u3066 `genCapt()` \u306b\u7d9a\u3051\u3066 `genCFst()` \u3092\u547c\u3073\u51fa\u305b\u3070\uff0c\u99d2\u3092\u53d6\u308b\u624b\u3060\u3051\u3067\u306f\u306a\u304f\uff0c`genCapt()` \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u624b\u306b\u542b\u307e\u308c\u306a\u3044\u738b\u624b\u3082\u63a2\u7d22\u306e\u5bfe\u8c61\u3068\u306a\u308a\u307e\u3059\uff0e\n\nIntel Core i3-6100 CPU @ 3.70GHz \u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3067\u8a08\u6e2c\u3059\u308b\u3068 `genMove()` \u306f\u6307\u3057\u624b\u751f\u6210\u796d\u308a\u5c40\u9762\u3067 1.00 M\u56de/\u79d2\uff0c`genFast()` \u306f 1.25 M\u56de/\u79d2\u7a0b\u5ea6\u3067\u3059\uff0e\n\n\u3044\u305a\u308c\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u6253\u3061\u6b69\u8a70\u3081\u306e\u30c1\u30a7\u30c3\u30af\u306f\u884c\u3044\u307e\u305b\u3093\uff0e\n\n\u751f\u6210\u3055\u308c\u305f\u624b\u306f Array \u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\uff0e`genMove()` \u306b\u52a0\u3048\u3066\uff0c\u6b69\uff0c\u89d2\uff0c\u98db\u306e\u4e0d\u6210\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\uff0c\u7d9a\u3051\u3066 `minorMove()` \u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u3088\u308a\u8ffd\u52a0\u3055\u308c\u307e\u3059\uff0e\n\n```cpp\n        // \u6307\u3057\u624b\u751f\u6210\n        Array<Move::Move, Move::Max> move;\n        p.genMove(move);\n        p.minorMove(move);\n```\n\nArray \u306b\u542b\u307e\u308c\u308b\u610f\u5473\u306e\u3042\u308b\u5024\u3092\u6301\u3064\u8981\u7d20\u306e\u6570\u306f `vsize()` \u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f `move` \u306b\u624b\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3057\u305f\u304c\u3063\u3066 `move.vsize() == 0` \u306e\u5834\u5408\uff0c\u6307\u3057\u624b\u304c\u306a\u3044\u72b6\u614b (\u8a70\u307f) \u3068\u306a\u308a\u307e\u3059\uff0e\n\n```cpp\n        // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n        if (move.vsize() == 0) {\n            break;\n        }\n```\n\n\u30e9\u30f3\u30c0\u30e0\u306b\u624b\u3092\u9078\u3073\u7740\u624b\u3057\u307e\u3059\uff0e`n` \u756a\u76ee\u306e Array \u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5834\u5408\u306f `[]` \u6f14\u7b97\u5b50\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\n```cpp\n        // \u30e9\u30f3\u30c0\u30e0\u306b\u624b\u3092\u9078\u3076\n        int choice = rand() % (int)move.vsize();\n        // \u7740\u624b\n        p.move(move[choice]);\n```\n\n\n\n### \u81ea\u4f5c\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306e\u521d\u3081\u3066\u306e\u5bfe\u5c40\n\u6b21\u306f\u81ea\u4f5c\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u5bfe\u5c40\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0elibshogi \u306f [CSA \u30d7\u30ed\u30c8\u30b3\u30eb](http://www.computer-shogi.org/protocol/)\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0eCSA \u30d7\u30ed\u30c8\u30b3\u30eb\u3067[\u5c06\u68cb\u6240](http://www.geocities.jp/shogidokoro/)\u306b\u63a5\u7d9a\u3057\u3066\u5bfe\u5c40\u3057\u307e\u3059\uff0e\u5c06\u68cb\u6240\u306f\u7d20\u6674\u3089\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u30bd\u30d5\u30c8\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u4f5c\u8005\u69d8\u306b\u611f\u8b1d\u3057\u307e\u3059\uff0e[\u5c06\u68cb\u6240\u306e\u4f7f\u3044\u65b9](http://www.geocities.jp/shogidokoro/usage.html)\u3092\u53c2\u8003\u306b**\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u5c55\u958b\u307e\u3067**\u884c\u3063\u3066\u304f\u3060\u3055\u3044\uff0e\n\nCSA \u901a\u4fe1\u6a5f\u80fd\u3092\u5099\u3048\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n```cpp:Main.cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n#include <CSAConnection.h>\n\nusing namespace game;\nusing namespace foundation;\n\nint main (int argc, char * argv[])\n{\n\n    // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u78ba\u8a8d\n    if (argc != 4) {\n        std::cerr << \"Usage : \"\n                  << argv[0]\n                  << \" <User Name> <Password> <CSA Server>\"\n                  << std::endl;\n        exit(EXIT_FAILURE);\n    }\n\n    // \u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\n    CSAConnection csa(argv[3]);\n    csa.connect();\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u30ed\u30b0\u30a4\u30f3\n    csa.login(argv[1], argv[2]);\n\n    // \u5bfe\u5c40\u5f85\u3061\n    auto summary = csa.newGame();\n\n    // \u5bfe\u5c40\u53d7\u8afe\n    csa.accept();\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p(summary);\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3092\u78ba\u8a8d\n    auto myturn  = Position::myTurn(summary);\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u7528\n    Vector<std::string> message;\n\n    // \u5bfe\u6226\n    while (1) {\n\n        if (p.turn() == myturn) {\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\n\n            // \u6307\u3057\u624b\u751f\u6210\n            Array<Move::Move, Move::Max> move;\n            p.genMove(move);\n\n            // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n            if (move.vsize() == 0) {\n                // \u6295\u4e86\n                csa.resign();\n                break;\n            }\n\n            // \u30e9\u30f3\u30c0\u30e0\u306b\u624b\u3092\u9078\u3076\n            int choice = rand() % (int)move.vsize();\n\n            // \u6307\u3057\u624b\u9001\u4fe1\n            csa.send(p.string(move[choice]));\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(move[choice]);\n\n        } else {\n\n            // \u76f8\u624b\u306e\u624b\u756a\n\n            // \u76f8\u624b\u306e\u624b\u3092\u5f85\u3064\n            csa.receive(message);\n\n            // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u306e\u5148\u982d\u6587\u5b57\u304c '+' '-' \u3067\u306a\u3044\u3068\u304d\u306f\u6307\u3057\u624b\u3067\u306f\u306a\u3044\n            if (message[0][0] != '+' && message[0][0] != '-') {\n                // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\n                for (auto l : message) {\n                    std::cout << l << std::endl;\n                }\n                break;\n            }\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b (\u30a8\u30b3\u30fc) \u306f\u7121\u8996\n            const char turchk[] = {'+', '-'};\n            if (message[0][0] == turchk[myturn]) {\n                // 2 \u884c\u76ee\u306b\u76f8\u624b\u306e\u624b\u304c\u5165\u308b\u5834\u5408\u3082\u3042\u308b\n                if (message.size() == 2) {\n                    message[0] = message[1];\n                } else {\n                    continue;\n                }\n            }\n\n            // \u76f8\u624b\u306e\u624b\u3092\u8868\u793a\n            std::cout << message[0] << std::endl;\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(message[0]);\n\n        }\n\n        // \u5c40\u9762\u3092\u8868\u793a\n        std::cout << p << std::endl;\n\n    }\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5168\u3066\u53d7\u4fe1\n    while (csa.message()) {\n        csa.receive(message);\n        if (message.vsize() == 0) {\n            break;\n        }\n        for (auto l : message) {\n            std::cout << l << std::endl;\n        }\n    }\n\n    // \u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\n    csa.write(\"kifu.csa\");\n\n    // \u30ed\u30b0\u30a2\u30a6\u30c8\n    csa.logout();\n\n    // \u901a\u4fe1\u7d42\u4e86\n    csa.close();\n\n    exit(EXIT_SUCCESS);    \n\n}\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u305f\u3089\u5c06\u68cb\u6240\u3092\u958b\u3044\u3066 `\u5bfe\u5c40(G)` \u304b\u3089 1 \u5bfe 1 \u901a\u4fe1\u5bfe\u5c40\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\u3053\u3061\u3089\u5074\u306e\u5bfe\u5c40\u8005\u306f `\u4eba\u9593` \u3092\u9078\u3073 OK \u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/e043bb06-d72f-8501-48df-d88d66058647.png)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/152964/de2a3d4d-eeff-a0b6-e512-d9cd43c01a8b.png)\n\n\u63a5\u7d9a\u5f85\u3061\u30c0\u30a4\u30a2\u30ed\u30b0\u306b\u8868\u793a\u3055\u308c\u308b\u30a2\u30c9\u30ec\u30b9\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\u30c0\u30a4\u30a2\u30ed\u30b0\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b IP \u30a2\u30c9\u30ec\u30b9\u3092\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e 3 \u756a\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n```shell-session\n$ ./shogiprogram test test 192.168.2.129\n```\n\n\u4f55\u56de\u304b\u5bfe\u5c40\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u6307\u3057\u624b\u3092\u9078\u629e\u3059\u308b\u306e\u3067\u5f53\u7136\u5f31\u3044\u3067\u3059\uff0e\u305d\u308c\u3067\u3082\u738b\u624b\u3092\u304b\u3051\u308c\u3070\u9003\u3052\u3066\u304f\u308c\u307e\u3059\uff0e\u5168\u304f\u7121\u6a5f\u8cea\u306a\u76f8\u624b\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u5370\u8c61\u3092\u6301\u305f\u308c\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff0eCSA \u901a\u4fe1\u3092\u3059\u308b\u305f\u3081\u306b `CSAConnection.h` \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\uff0e\n\n```cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n#include <CSAConnection.h>\n\nusing namespace game;\nusing namespace foundation;\n```\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306b\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3068\u3057\u3066\uff0c\u30b5\u30fc\u30d0\u3078\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30b6\u540d\uff0c\u30d1\u30b9\u30ef\u30fc\u30c9\uff0c\u30b5\u30fc\u30d0\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u30b5\u30fc\u30d0\u30a2\u30c9\u30ec\u30b9\u306f\u30db\u30b9\u30c8\u540d\u3082\u3057\u304f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3067\u6307\u5b9a\u3057\u307e\u3059\uff0e\u6700\u521d\u306b\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u3092\u898b\u3066\u3053\u308c\u3089\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\uff0e\n\n```cpp\n    // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u78ba\u8a8d\n    if (argc != 4) {\n        std::cerr << \"Usage : \"\n                  << argv[0]\n                  << \" <User Name> <Password> <CSA Server>\"\n                  << std::endl;\n        exit(EXIT_FAILURE);\n    }\n```\n\nCSA \u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u3088\u308b\u901a\u4fe1\u306f `CSAConnection` \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u884c\u3044\u307e\u3059\uff0e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u6642\u306b\u30b5\u30fc\u30d0\u30a2\u30c9\u30ec\u30b9\u3092\u6e21\u3057\u307e\u3059\uff0e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u305f\u3089\u6700\u521d\u306b `connect()` \u3067\u30b5\u30fc\u30d0\u3078\u63a5\u7d9a\u3057\u307e\u3059\uff0e\u6b21\u306b `login()` \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\uff0e\u30ed\u30b0\u30a4\u30f3\u5f8c `newGame()` \u3092\u547c\u3076\u3068\u30b5\u30fc\u30d0\u304b\u3089\u5bfe\u6226\u306e\u6761\u4ef6 \\(\u5bfe\u5c40\u76f8\u624b\u306e\u540d\u524d\uff0c\u6301\u3061\u6642\u9593\u306a\u3069\\) \u304c\u901a\u77e5\u3055\u308c\u307e\u3059\uff0e\u305d\u306e\u6761\u4ef6\u3067\u826f\u3051\u308c\u3070 `accept()` \u3057\u307e\u3059\uff0e\u901a\u4fe1\u30a8\u30e9\u30fc\u306a\u3069\u304c\u3042\u3063\u305f\u5834\u5408\u306f CSAConnection \u30af\u30e9\u30b9\u304b\u3089\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u307e\u3059\uff0e\u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3064\u3044\u3066\u306f\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u66f8\u304f\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\n\n```cpp\n    // CSA \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\n    CSAConnection csa(argv[3]);\n    csa.connect();\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u30ed\u30b0\u30a4\u30f3\n    csa.login(argv[1], argv[2]);\n\n    // \u5bfe\u5c40\u5f85\u3061\n    auto summary = csa.newGame();\n\n    // \u5bfe\u5c40\u53d7\u8afe\n    csa.accept();\n```\n\n`newGame()` \u306e\u623b\u308a\u5024\u304c\u5bfe\u5c40\u306e\u6761\u4ef6\u3068\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u3092 `Position` \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u305b\u3070\uff0c\u5bfe\u5c40\u6761\u4ef6\u306b\u6cbf\u3063\u305f\u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff0e\u307e\u305f\u3053\u3061\u3089\u306e\u624b\u756a\u306f `Position::myTurn()` \u306b\u3088\u308a\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n```cpp\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p(summary);\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3092\u78ba\u8a8d\n    auto myturn  = Position::myTurn(summary);\n```\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3081\u306b `std::string` \u306e\u914d\u5217\u3092\u7528\u610f\u3057\u307e\u3059\uff0eVector \u306f\u53ef\u5909\u9577\u914d\u5217\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u3067\u3059\uff0eCSA \u30b5\u30fc\u30d0\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u8907\u6570\u884c\u3068\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u306e\u3067\uff0c`std::string` \u306e\u53ef\u5909\u9577\u914d\u5217\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\uff0eVector \u306e\u8981\u7d20\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u4e00\u884c\u3065\u3064\u683c\u7d0d\u3055\u308c\u3066\u3044\u304d\u307e\u3059\uff0e\n\n```cpp\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u7528\n    Vector<std::string> message;\n```\n\n\u3053\u3053\u307e\u3067\u6765\u305f\u3089\u5bfe\u5c40\u958b\u59cb\u3067\u3059\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u6307\u3057\u624b\u3092\u9078\u629e\u3057 `send()` \u3067\u9001\u4fe1\uff0c\u76f8\u624b\u306e\u624b\u756a\u306b\u306f `receive()` \u3067\u76f8\u624b\u306e\u624b\u3092\u5f85\u3061\u307e\u3059\uff0e`Position` \u3067\u73fe\u5728\u306e\u624b\u756a\u3092\u8abf\u3079\u308b\u306b\u306f `turn()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\n```cpp\n    // \u5bfe\u6226\n    while (1) {\n\n        if (p.turn() == myturn) {\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\n\n            // \u6307\u3057\u624b\u751f\u6210\n            Array<Move::Move, Move::Max> move;\n            p.genMove(move);\n```\n\n\u624b\u304c\u7121\u304b\u3063\u305f\u6642\u306f\u8a70\u307f\u3067\u3059\u306e\u3067 `CSAConnection` \u306e `resign()` \u30e1\u30bd\u30c3\u30c9\u3067\u6295\u4e86\u3057\u307e\u3059\uff0e\n\n```cpp\n            // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n            if (move.vsize() == 0) {\n                // \u6295\u4e86\n                csa.resign();\n                break;\n            }\n```\n\n\u6307\u305b\u308b\u624b\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u3073\u9001\u4fe1\u3057\u307e\u3059\uff0e`Position` \u306e `string()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068 `Move::Move` \u3092 CSA \u30d7\u30ed\u30c8\u30b3\u30eb\u5f62\u5f0f\u306e\u6307\u3057\u624b\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u307e\u3059\uff0eCSA \u30b5\u30fc\u30d0\u3078\u624b\u3092\u9001\u4fe1\u3059\u308b\u306e\u3068\u540c\u6642\u306b\u5c40\u9762\u3082\u9032\u3081\u3066\u304a\u304d\u307e\u3059\uff0e\n\n```cpp\n            int choice = rand() % (int)move.vsize();\n\n            // \u6307\u3057\u624b\u9001\u4fe1\n            csa.send(p.string(move[choice]));\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(move[choice]);\n```\n\n\u6b21\u306f\u76f8\u624b\u306e\u624b\u756a\u3067\u3059\uff0e\u76f8\u624b\u306e\u624b\u756a\u306b\u306f\u30b5\u30fc\u30d0\u304b\u3089\u6307\u3057\u624b\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u306e\u3092\u5f85\u3061\u307e\u3059\uff0e\n\n```cpp\n        } else {\n\n            // \u76f8\u624b\u306e\u624b\u756a\n\n            // \u76f8\u624b\u306e\u624b\u3092\u5f85\u3064\n            csa.receive(message);\n```\n\nCSA \u30b5\u30fc\u30d0\u304b\u3089\u306f\u6307\u3057\u624b\u4ee5\u5916\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\uff0e\u4f8b\u3048\u3070\u5343\u65e5\u624b\u304c\u6210\u7acb\u3057\u305f\u3068\u304d\u306b\u306f `#SENNICHITE` \u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9001\u3089\u308c\u3066\u304d\u307e\u3059\uff0e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6700\u521d\u306e\u6587\u5b57\u304c `+` \u304b `-` \u306e\u6642\u306f\u6307\u3057\u624b\u3067\u3059\uff0e\u305d\u308c\u4ee5\u5916\u3067\u306f\u5bfe\u5c40\u304c\u7d42\u308f\u308b\u3082\u3057\u304f\u306f\u4e2d\u65ad\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u305f\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u5bfe\u5c40\u3092\u7d42\u4e86\u3057\u307e\u3059\uff0e\n\n```cpp\n            // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u306e\u5148\u982d\u6587\u5b57\u304c '+' '-' \u3067\u306a\u3044\u3068\u304d\u306f\u6307\u3057\u624b\u3067\u306f\u306a\u3044\n            if (message[0][0] != '+' && message[0][0] != '-') {\n                // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\n                for (auto l : message) {\n                    std::cout << l << std::endl;\n                }\n                break;\n            }\n```\n\nCSA \u30b5\u30fc\u30d0\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u9001\u4fe1\u3057\u305f\u624b\u3092\u6d88\u8cbb\u6642\u9593\u306e\u60c5\u5831\u3092\u4ed8\u52a0\u3057\u3066\u30a8\u30b3\u30fc\u30d0\u30c3\u30af\u3057\u307e\u3059\uff0e\u3053\u306e\u6d88\u8cbb\u6642\u9593\u306e\u60c5\u5831\u306f\u6301\u3061\u6642\u9593\u306e\u7ba1\u7406\u306b\u4f7f\u3044\u307e\u3059\uff0e\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u7c21\u5358\u306e\u305f\u3081\u7121\u8996\u3057\u307e\u3057\u3087\u3046\uff0e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u540c\u58eb\u306e\u5bfe\u6226\u3067\u306f\u77ed\u3044\u6642\u9593\u3067\u624b\u304c\u9032\u3080\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u6642\u306b `CSAConnection` \u306e `receive()` \u30e1\u30bd\u30c3\u30c9\u304c\u30a8\u30b3\u30fc\u30d0\u30c3\u30af\u3068\u540c\u6642\u306b\u76f8\u624b\u306e\u624b\u3092\u6e21\u3057\u3066\u304f\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e2 \u884c\u76ee\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u308c\u3092\u76f8\u624b\u306e\u624b\u3068\u3057\u3066\u51e6\u7406\u3057\u307e\u3059\uff0e\n\n```cpp\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b (\u30a8\u30b3\u30fc) \u306f\u7121\u8996\n            const char turchk[] = {'+', '-'};\n            if (message[0][0] == turchk[myturn]) {\n                // 2 \u884c\u76ee\u306b\u76f8\u624b\u306e\u624b\u304c\u5165\u308b\u5834\u5408\u3082\u3042\u308b\n                if (message.size() == 2) {\n                    message[0] = message[1];\n                } else {\n                    continue;\n                }\n            }\n```\n\n`Position` \u306f\u30b5\u30fc\u30d0\u304b\u3089\u9001\u3089\u308c\u3066\u304d\u305f\u6307\u3057\u624b\u6587\u5b57\u5217 \\(`std::string`\\) \u3067\u3082 `move()` \u3067\u304d\u307e\u3059 (\u5b9f\u969b\u306f `CSAMove` \u3068\u3057\u3066\u51e6\u7406\u3055\u308c\u307e\u3059) \u76f8\u624b\u304b\u3089\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u3092\u8868\u793a\u3057\u3066\u5c40\u9762\u3092\u9032\u3081\u307e\u3059\uff0e\u305d\u3057\u3066\u518d\u3073\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u306b\u623b\u308a\u307e\u3059\uff0e\n\n```cpp\n            // \u76f8\u624b\u306e\u624b\u3092\u8868\u793a\n            std::cout << message[0] << std::endl;\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(message[0]);\n```\n\n\u6700\u5f8c\u306b\u5bfe\u5c40\u306e\u7d42\u4e86\u51e6\u7406\u3067\u3059\uff0e\u307e\u305a\uff0c\u30b5\u30fc\u30d0\u304b\u3089\u672a\u53d7\u4fe1\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3042\u308c\u3070\u5168\u3066\u53d7\u4fe1\u3057`write()` \u3067\u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u6b21\u306b`logout()`\uff0c`close()` \u30e1\u30bd\u30c3\u30c9\u3067\u901a\u4fe1\u3092\u7d42\u4e86\u3057\u307e\u3059\uff0e\n\n```cpp\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5168\u3066\u53d7\u4fe1\n    while (csa.message()) {\n        csa.receive(message);\n        if (message.vsize() == 0) {\n            break;\n        }\n        for (auto l : message) {\n            std::cout << l << std::endl;\n        }\n    }\n\n    // \u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\n    csa.write(\"kifu.csa\");\n\n    // \u30ed\u30b0\u30a2\u30a6\u30c8\n    csa.logout();\n\n    // \u901a\u4fe1\u7d42\u4e86\n    csa.close();\n```\n\n[floodgate](http://wdoor.c.u-tokyo.ac.jp/shogi/floodgate.html) \u3078\u306e\u63a5\u7d9a\u3082 CSA \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u4f7f\u3044\u307e\u3059\uff0e\u30e6\u30fc\u30b6\u540d\uff0c\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u898f\u5247\u306b\u3064\u3044\u3066\u306f floodgate \u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n```shell-session\n$ ./shogiprogram libshogi_corei3 floodgate-300-10F,test1 wdoor.c.u-tokyo.ac.jp # \u63a5\u7d9a\u4f8b\n```\n\n\u3053\u308c\u306f\u5c06\u6765\u81ea\u4f5c\u306e\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u305f\u3068\u304d\u306e\u305f\u3081\u306e\u4f8b\u3068\u3057\u3066\u6319\u3052\u307e\u3057\u305f\uff0e\u3053\u306e\u30e9\u30f3\u30c0\u30e0\u30d7\u30ec\u30fc\u30e4\u3067 floodgate \u306b\u306f\u63a5\u7d9a\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff0e\n\n\n\n### \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u99d2\u306e\u640d\u5f97\u3092\u8003\u3048\u305f\u624b\u3092\u6307\u3055\u305b\u308b\n\u30e9\u30f3\u30c0\u30e0\u306a\u6307\u3057\u624b\u3060\u3068\u3055\u3059\u304c\u306b\u5f31\u3044\u306e\u3067\u5c11\u3057\u3060\u3051\u8003\u3048\u308b\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6539\u826f\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u306f\u99d2\u306e\u53d6\u308a\u5408\u3044\u304c\u751f\u3058\u308b\u5c40\u9762\u3067\u306f\u3067\u304d\u308b\u3060\u3051\u99d2\u5f97\u3059\u308b\u3088\u3046\u306a\u624b\u3092\u9078\u3076\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5909\u66f4\u3057\u307e\u3059\uff0e\n\n\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u6570\u5024\u3067\u99d2\u306e\u640d\u5f97\u3092\u5224\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u99d2\u306b\u70b9\u6570\u3092\u4e0e\u3048\u307e\u3059\uff0e`libshogi/lib/shogi/Evaluation.h` \u306b\u306f\u99d2\u3054\u3068\u306e\u70b9\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4f8b\u3048\u3070\u6b69\u306f 100 \u70b9\uff0c\u98db\u8eca\u306f 1000 \u70b9\u3068\u3044\u3063\u305f\u5177\u5408\u3067\u3059\uff0e\u5b9f\u969b\u306b\u624b\u3092\u6307\u3059\u524d\u306b\u81ea\u5206\u304c\u3053\u3046\u6307\u3057\u305f\u3089\u76f8\u624b\u304c\u3053\u3046\u5fdc\u3058\u308b\u3068\u3044\u3046\u306e\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u6700\u7d42\u7684\u306b\u99d2\u5f97\u3059\u308b\u624b\u9806\u3092\u9078\u3073\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u5148\u8aad\u307f (\u63a2\u7d22) \u3092[\u30df\u30cb\u30de\u30c3\u30af\u30b9\u6cd5](https://ja.wikipedia.org/wiki/%E3%83%9F%E3%83%8B%E3%83%9E%E3%83%83%E3%82%AF%E3%82%B9%E6%B3%95) \u3068\u8a00\u3044\u307e\u3059\uff0e\u99d2\u306e\u70b9\u6570\u3092\u6c7a\u3081\u305f\u3053\u3068\u306b\u3088\u308a\u5c40\u9762\u3054\u3068\u306b\u99d2\u306e\u640d\u5f97\u3092\u6570\u5024\u3068\u3057\u3066\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u3053\u308c\u3092\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u3057\u307e\u3059\uff0e\u5f8c\u624b\u306e\u99d2\u306b\u306f\u30de\u30a4\u30ca\u30b9\u306e\u5024\u3092\u4e0e\u3048\u3066\u304a\u304d\uff0c\u8a55\u4fa1\u5024\u304c 0 \u306e\u5834\u5408\u306f\u4e92\u89d2\uff0c\u30d7\u30e9\u30b9\u306e\u5024\u306b\u306a\u308b\u3068\u5148\u624b\u304c\u99d2\u5f97\uff0c\u30de\u30a4\u30ca\u30b9\u306e\u5024\u306b\u306a\u308b\u3068\u5f8c\u624b\u304c\u99d2\u5f97\u3068\u5224\u65ad\u3057\u307e\u3059\uff0e\u7389\u3092\u53d6\u3089\u308c\u308b\u3068\u3069\u3093\u306a\u306b\u99d2\u5f97\u3057\u3066\u3044\u3066\u3082\u8ca0\u3051\u3067\u3059\u306e\u3067\uff0c\u5148\u624b\u7389\u306e\u4fa1\u5024\u306f $+\\infty$ \u5f8c\u624b\u7389\u306e\u4fa1\u5024\u306f $-\\infty$ \u306b\u306a\u308a\u307e\u3059\uff0e\n\n\u7406\u5c48\u306e\u4e0a\u3067\u306f\u6700\u5f8c\u307e\u3067\u63a2\u7d22\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u6700\u7d42\u7684\u306b\u76f8\u624b\u306e\u7389\u3092\u53d6\u308b\u624b\u3092\u9078\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u73fe\u5b9f\u306e\u5c40\u9762\u5909\u5316\u306f\u81a8\u5927\u306a\u6570\u306b\u306a\u308b\u306e\u3067\uff0c\u6700\u5f8c\u307e\u3067\u8aad\u307f\u5207\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\uff0e\u3042\u308b\u7a0b\u5ea6\u307e\u3067\u63a2\u7d22\u3057\u305f\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3092\u3082\u3063\u3066\u6307\u3057\u624b\u3092\u6c7a\u65ad\u3057\u307e\u3059\uff0e\n\n\u5b9f\u969b\u306e\u63a2\u7d22\u306b\u306f\u30df\u30cb\u30de\u30c3\u30af\u30b9\u6cd5\u3092\u6539\u826f\u3057\u305f[\u30a2\u30eb\u30d5\u30a1\u30fb\u30d9\u30fc\u30bf\u6cd5](https://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%AB%E3%83%95%E3%82%A1%E3%83%BB%E3%83%99%E3%83%BC%E3%82%BF%E6%B3%95)\u3092\u7528\u3044\u307e\u3059\uff0e\u30a2\u30eb\u30d5\u30a1\u30fb\u30d9\u30fc\u30bf\u6cd5\u306f\u30df\u30cb\u30de\u30c3\u30af\u30b9\u6cd5\u3088\u308a\u3082\u5c11\u306a\u3044\u63a2\u7d22\u6570\u3067\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n```cpp:Main.cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n#include <CSAConnection.h>\n\nusing namespace game;\nusing namespace foundation;\nusing namespace Evaluation;\n\n/* --------------------------- global  variables --------------------------- */\n\n/// \u6700\u5927\u306e\u63a2\u7d22\u6df1\u3055\nstatic int                  _searchDepth    = 10;\n\n/* ------------------------------------------------------------------------- */\n\n/* -------------------------- function prototypes -------------------------- */\n\n/// \u63a2\u7d22\nstatic size_t   searchMax (Position &, Array<Move::Move, Move::Max> &);\nstatic size_t   searchMin (Position &, Array<Move::Move, Move::Max> &);\nstatic Eval     quiesMax  (Position &, Eval alpha, Eval beta, int depth);\nstatic Eval     quiesMin  (Position &, Eval alpha, Eval beta, int depth);\n\n/* ------------------------------------------------------------------------- */\n\n/**\n * \u5148\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMax (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5f8c\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMin(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta ) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0b\u9650\u3092\u66f4\u65b0\n        if (value >  alpha) {\n            alpha = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n\n/**\n * \u5f8c\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMin (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5148\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMax(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0a\u9650\u3092\u66f4\u65b0\n        if (value <  beta ) {\n            beta  = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n\n/**\n * \u5148\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Max)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMax (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0a\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0b\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmax = p.eval();\n\n    // beta \u30ab\u30c3\u30c8 (standpat)\n    if (beta <= vmax) {\n        return beta;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmax;\n    }\n\n    // \u5148\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptB(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5f8c\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMin(p, max(vmax, alpha), beta, depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta) {\n            return beta;\n        }\n\n        // \u4e0b\u9650\u66f4\u65b0\u304b\n        if (value > vmax) {\n            vmax = value;\n        }\n\n    }\n\n    return vmax;\n\n}\n\n/**\n * \u5f8c\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Min)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMin (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0b\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0a\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmin = p.eval();\n\n    // alpha \u30ab\u30c3\u30c8 (standpat)\n    if (alpha >= vmin) {\n        return alpha;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmin;\n    }\n\n    // \u5f8c\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptW(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyW(move)) {\n            vmin = -Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5148\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMax(p, alpha, min(vmin, beta), depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            return alpha;\n        }\n\n        // \u4e0a\u9650\u66f4\u65b0\u304b\n        if (value < vmin) {\n            vmin = value;\n        }\n\n    }\n\n    return vmin;\n\n}\n\n\n\nint main (int argc, char * argv[])\n{\n\n    // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u78ba\u8a8d\n    if (argc != 4) {\n        std::cerr << \"Usage : \"\n                  << argv[0]\n                  << \"<User Name> <Password> <CSA Server>\"\n                  << std::endl;\n        exit(EXIT_FAILURE);\n    }\n\n    // \u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\n    CSAConnection csa(argv[3]);\n    csa.connect();\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u30ed\u30b0\u30a4\u30f3\n    csa.login(argv[1], argv[2]);\n\n    // \u5bfe\u5c40\u5f85\u3061\n    auto summary = csa.newGame();\n\n    // \u5bfe\u5c40\u53d7\u8afe\n    csa.accept();\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p(summary);\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3092\u78ba\u8a8d\n    auto myturn  = Position::myTurn(summary);\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u7528\n    Vector<std::string> message;\n\n    // \u5bfe\u6226\n    while (1) {\n\n        if (p.turn() == myturn) {\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\n\n            // \u6307\u3057\u624b\u751f\u6210\n            Array<Move::Move, Move::Max> move;\n            p.genMove(move);\n\n            // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n            if (move.vsize() == 0) {\n                // \u6295\u4e86\n                csa.resign();\n                break;\n            }\n\n            // \u63a2\u7d22\u306e\u7d50\u679c\u304c\u6700\u3082\u826f\u3044\u624b\u3092\u9078\u629e\u3059\u308b\n            size_t best;\n            if (move.vsize() > 1) {\n                if (myturn == Color::Black) {\n                    best = searchMax(p, move);\n                } else {\n                    best = searchMin(p, move);\n                }\n            } else {\n                // \u624b\u304c\u3072\u3068\u3064\u3060\u3051\u3057\u304b\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u624b\u3092\u6307\u3059\u3057\u304b\u306a\u3044\n                best = 0;\n            }\n\n            // \u6307\u3057\u624b\u9001\u4fe1\n            csa.send(p.string(move[best]));\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(move[best]);\n\n        } else {\n\n            // \u76f8\u624b\u306e\u624b\u756a\n\n            // \u76f8\u624b\u306e\u624b\u3092\u5f85\u3064\n            csa.receive(message);\n\n            // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u306e\u5148\u982d\u6587\u5b57\u304c '+' '-' \u3067\u306a\u3044\u3068\u304d\u306f\u6307\u3057\u624b\u3067\u306f\u306a\u3044\n            if (message[0][0] != '+' && message[0][0] != '-') {\n                // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\n                for (auto l : message) {\n                    std::cout << l << std::endl;\n                }\n                break;\n            }\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u624b\u756a\u306e\u6307\u3057\u624b (\u30a8\u30b3\u30fc) \u306f\u7121\u8996\n            const char turchk[] = {'+', '-'};\n            if (message[0][0] == turchk[myturn]) {\n                // 2 \u884c\u76ee\u306b\u76f8\u624b\u306e\u624b\u304c\u5165\u308b\u5834\u5408\u3082\u3042\u308b\n                if (message.size() == 2) {\n                    message[0] = message[1];\n                } else {\n                    continue;\n                }\n            }\n\n            // \u76f8\u624b\u306e\u624b\u3092\u8868\u793a\n            std::cout << message[0] << std::endl;\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(message[0]);\n\n        }\n\n        // \u5c40\u9762\u3092\u8868\u793a\n        std::cout << p << std::endl;\n\n    }\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5168\u3066\u53d7\u4fe1\n    while (csa.message()) {\n        csa.receive(message);\n        if (message.vsize() == 0) {\n            break;\n        }\n        for (auto l : message) {\n            std::cout << l << std::endl;\n        }\n    }\n\n    // \u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\n    csa.write(\"kifu.csa\");\n\n    // \u30ed\u30b0\u30a2\u30a6\u30c8\n    csa.logout();\n\n    // \u901a\u4fe1\u7d42\u4e86\n    csa.close();\n\n    exit(EXIT_SUCCESS);    \n\n}\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5c06\u68cb\u6240\u3067\u5bfe\u5c40\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u30e9\u30f3\u30c0\u30e0\u306a\u6307\u3057\u624b\u306e\u3068\u304d\u3088\u308a\u306f\u5f37\u304f\u306a\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\u99d2\u304c\u305f\u3060\u3067\u3068\u3089\u308c\u308b\u3088\u3046\u306a\u624b\u306f\u6307\u3055\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u305f\u306f\u305a\u3067\u3059\uff0e\n\n`main()` \u306f\u307b\u3068\u3093\u3069\u5909\u66f4\u304c\u3042\u308a\u307e\u305b\u3093\uff0e\u30e9\u30f3\u30c0\u30e0\u306b\u6307\u3057\u624b\u3092\u6c7a\u5b9a\u3057\u3066\u3044\u305f\u90e8\u5206\u3092\u63a2\u7d22\u306b\u7f6e\u304d\u63db\u3048\u3066\u3044\u307e\u3059\uff0e\u3082\u3057\u6307\u305b\u308b\u624b\u306e\u6570\u304c 1 \u306e\u5834\u5408\u306f\u63a2\u7d22\u3059\u308b\u307e\u3067\u3082\u306a\u3044\u306e\u3067\u305d\u306e\u624b\u3092\u9078\u3073\u307e\u3059\uff0e\u305d\u308c\u4ee5\u5916\u306f\u63a2\u7d22\u306e\u7d50\u679c\u304c\u6700\u3082\u826f\u3044\u624b\u3092\u9078\u3073\u307e\u3059\uff0e\u624b\u756a\u306f `Color::Color` \u3067\u8868\u73fe\u3055\u308c `Color::Black = 0` \u304c\u5148\u624b\uff0c`Color::White = 1` \u304c\u5f8c\u624b\u3067\u3059\uff0e\n\n```cpp\n            // \u63a2\u7d22\u306e\u7d50\u679c\u304c\u6700\u3082\u826f\u3044\u624b\u3092\u9078\u629e\u3059\u308b\n            size_t best;\n            if (move.vsize() > 1) {\n                if (myturn == Color::Black) {\n                    best = searchMax(p, move);\n                } else {\n                    best = searchMin(p, move);\n                }\n            } else {\n                // \u624b\u304c\u3072\u3068\u3064\u3060\u3051\u3057\u304b\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u624b\u3092\u6307\u3059\u3057\u304b\u306a\u3044\n                best = 0;\n            }\n```\n\n\u5148\u624b\u756a\u5c40\u9762\u3067\u306f\u8a55\u4fa1\u5024\u304c\u6700\u5927\u306b\u306a\u308b\u624b\u3092\u63a2\u7d22\u3057\u307e\u3059\uff0e\u5f8c\u624b\u756a\u5c40\u9762\u3067\u306f\u8a55\u4fa1\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u624b\u3092\u63a2\u7d22\u3057\u307e\u3059\uff0e\u30a2\u30eb\u30d5\u30a1\u30fb\u30d9\u30fc\u30bf\u6cd5\u3067\u306f\u30df\u30cb\u30de\u30c3\u30af\u30b9\u6cd5\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u3067\u3042\u308d\u3046\u8a55\u4fa1\u5024\u306e\u7bc4\u56f2\u3092\u6c7a\u3081\u3066\u63a2\u7d22\u3092\u884c\u3044\u307e\u3059\uff0e\u63a2\u7d22\u3092\u7e70\u308a\u8fd4\u3059\u306b\u5f93\u3044\u3053\u306e\u7bc4\u56f2\u306f\u72ed\u307e\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\u7bc4\u56f2\u306e\u4e0b\u9650\u5024\u306e\u3053\u3068\u3092$\\alpha$\uff0c\u4e0a\u9650\u5024\u306e\u3053\u3068\u3092$\\beta$\u3068\u547c\u3073\u307e\u3059\uff0e$\\alpha$\u306e\u521d\u671f\u5024\u306f $-\\infty$\uff0c$\\beta$\u306e\u521d\u671f\u5024\u306f $+\\infty$ \u3067\u3059\uff0e\u5148\u624b\u756a\u5c40\u9762\u3067\u306f\u8a55\u4fa1\u5024\u304c\u6700\u5927\u306b\u306a\u308b\u624b\u3092\u63a2\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u3042\u308b\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u304c\u73fe\u5728\u306e$\\alpha$\u3092\u4e0a\u56de\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u5834\u5408\uff0c\u7bc4\u56f2\u306e\u4e0b\u9650\u304c\u305d\u306e\u8a55\u4fa1\u5024\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\uff0e\u5f8c\u624b\u756a\u5c40\u9762\u3067\u306f\u8a55\u4fa1\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u624b\u3092\u63a2\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u3042\u308b\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u304c\u73fe\u5728\u306e$\\beta$\u3092\u4e0b\u56de\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u5834\u5408\uff0c\u7bc4\u56f2\u306e\u4e0a\u9650\u304c\u305d\u306e\u8a55\u4fa1\u5024\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\uff0e\u5148\u624b\uff0c\u5f8c\u624b\u306e\u5c40\u9762\u306f\u4ea4\u4e92\u306b\u73fe\u308c\u308b\u306e\u3067\uff0c\u5148\u624b\u756a\u5c40\u9762\u3067\u8a55\u4fa1\u5024\u304c\u73fe\u5728\u306e$\\beta$\u4ee5\u4e0a\u3068\u306a\u308b\u3053\u3068\u304c\u660e\u3089\u304b\u306b\u306a\u3063\u305f\u6642\u70b9\u3067\uff0c\u305d\u306e\u5c40\u9762\u306b\u81f3\u308b\u624b\u306f\uff0c\u3072\u3068\u3064\u524d\u306e\u5f8c\u624b\u756a\u5c40\u9762\u306b\u304a\u3044\u3066\u9078\u629e\u3055\u308c\u306a\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u3092$\\beta$\u30ab\u30c3\u30c8\u3068\u547c\u3073\u305d\u306e\u5c40\u9762\u306f\u305d\u308c\u4ee5\u4e0a\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\uff0e\u5f8c\u624b\u756a\u5c40\u9762\u3067\u3082\uff0c\u73fe\u5728\u306e$\\alpha$\u4ee5\u4e0b\u306b\u306a\u308b\u3053\u3068\u304c\u660e\u3089\u304b\u306b\u306a\u3063\u305f\u6642\u70b9\u3067\uff0c\u305d\u306e\u5c40\u9762\u306b\u81f3\u308b\u624b\u306f\uff0c\u3072\u3068\u3064\u524d\u306e\u5148\u624b\u756a\u5c40\u9762\u306b\u304a\u3044\u3066\u9078\u629e\u3055\u308c\u306a\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u3092$\\alpha$\u30ab\u30c3\u30c8\u3068\u547c\u3073\u305d\u306e\u5c40\u9762\u306f\u305d\u308c\u4ee5\u4e0a\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\uff0e\n\n```cpp:searchMax()\n/**\n * \u5148\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMax (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5f8c\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMin(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta ) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0b\u9650\u3092\u66f4\u65b0\n        if (value >  alpha) {\n            alpha = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n```\n\n`searchMax()` \u3067\u306f\u3072\u3068\u3064\u3060\u3051\u624b\u3092\u9032\u3081\u3066\u5f8c\u624b\u306e\u5c40\u9762\u3092\u63a2\u7d22\u3059\u308b `quiesMin()` \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\uff0e`Position` \u306b\u3088\u308b\u63a2\u7d22\u306f\u5148\u624b\u756a\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n```cpp\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5f8c\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMin(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n```\n\n\u5f8c\u624b\u756a\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n```cpp\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5148\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = quiesMax(p, alpha, beta, 0);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n```\n\n\u5c40\u9762\u3092\u9032\u3081\u308b `move()` \u30e1\u30bd\u30c3\u30c9\u306f\u5c40\u9762\u3092\u623b\u3059\u306e\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u8fd4\u3057\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u306f\u6307\u3057\u305f\u624b\u304c `Move::Move` \u578b\u3067\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3059\u304c \u4e0a\u4f4d 16 bit \u306b\u53d6\u3063\u305f\u99d2\u304c\u8a18\u9332\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3053\u308c\u3092 `undo()` \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u3068 `move()` \u3067\u9032\u3081\u305f\u5c40\u9762\u3092\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u4eca\u56de\u306f\u99d2\u304c\u3076\u3064\u304b\u308b\u3068\u304d\u306e\u53d6\u308a\u5408\u3044\u306e\u640d\u5f97\u3060\u3051\u3092\u8a55\u4fa1\u3057\u3066\u3044\u307e\u3059\uff0e\u3064\u307e\u308a `genCapt()` \u306b\u3088\u3063\u3066\u751f\u6210\u3057\u305f\u624b\u306b\u3064\u3044\u3066\u306e\u307f\u63a2\u7d22\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u3088\u3046\u306a\u63a2\u7d22\u3092\u9759\u6b62\u63a2\u7d22\u3068\u547c\u3073\u307e\u3059\uff0e\u3042\u308b\u4f4d\u7f6e\u306b\u5229\u3044\u3066\u3044\u308b\u99d2\u306e\u6570\u304c\u540c\u3058\u5834\u5408\uff0c\u5148\u306b\u53d6\u308a\u59cb\u3081\u305f\u65b9\u304c\u640d\u3092\u3057\u307e\u3059\uff0e\u3057\u305f\u304c\u3063\u3066\u9759\u6b62\u63a2\u7d22\u3067\u306f\u30d1\u30b9\u3092\u3057\u3066\u3082\u826f\u3044\u3053\u3068\u3068\u3057\u307e\u3059\uff0e\n\n```cpp:quiesMax()\n/**\n * \u5148\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Max)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMax (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0a\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0b\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmax = p.eval();\n\n    // beta \u30ab\u30c3\u30c8 (standpat)\n    if (beta <= vmax) {\n        return beta;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmax;\n    }\n\n    // \u5148\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u738b\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptB(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5f8c\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMin(p, max(vmax, alpha), beta, depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta) {\n            return beta;\n        }\n\n        // \u4e0b\u9650\u66f4\u65b0\u304b\n        if (value > vmax) {\n            vmax = value;\n        }\n\n    }\n\n    return vmax;\n\n}\n```\n\n`genCapt()` \u306f Pin \u3092\u51e6\u7406\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u751f\u6210\u3055\u308c\u308b\u624b\u306b\u81ea\u6bba\u624b\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\u5c40\u9762\u3092\u9032\u3081\u308b\u3068\u7389\u3092\u53d6\u308b\u624b\u304c\u73fe\u308c\u308b\u306e\u3067\u3053\u308c\u3092\u63a2\u7d22\u3067\u6392\u9664\u3057\u307e\u3059\uff0e\u624b\u304c\u7389\u3092\u53d6\u308b\u304b\u3069\u3046\u304b\u306f `Position` \u30af\u30e9\u30b9\u306e `dusty()` \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308a\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u7389\u3092\u53d6\u308b\u624b\u306f\u5148\u624b\u5c40\u9762\u3067\u306f $+\\infty$ \u5f8c\u624b\u5c40\u9762\u3067\u306f $-\\infty$ \u3068\u8a55\u4fa1\u3057\u307e\u3059\uff0e\n\n```cpp\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n```\n\n\n### \u4e09\u624b\u3060\u3051\u8aad\u3093\u3067\u307f\u308b\n\u99d2\u306e\u53d6\u308a\u5408\u3044\u3060\u3051\u306e\u8a55\u4fa1\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u3088\u308a\u306f\u307e\u3057\u3067\u3059\u304c\u307e\u3060\u307e\u3060\u5f31\u3044\u3067\u3059\uff0e\u3053\u308c\u306b\u4e09\u624b\u306e\u8aad\u307f\u3092\u52a0\u3048\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u306f\u9759\u6b62\u63a2\u7d22\u3068\u307b\u3068\u3093\u3069\u5909\u308f\u308a\u307e\u305b\u3093\uff0e\u63a2\u7d22\u3059\u308b\u624b\u306e\u751f\u6210\u3092 `genFast()` \u306b\u7f6e\u304d\u63db\u3048\u308b\u3060\u3051\u3067\u3059\uff0e\u4e09\u624b\u8aad\u3093\u3060\u672b\u7aef\u3067\u9759\u6b62\u63a2\u7d22\u3092\u547c\u3073\u51fa\u3057\u3066\u305d\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u3057\u307e\u3059\uff0e\n\n```cpp:Main.cpp\n#include <cstdlib>\n#include <iostream>\n#include <Shogi.h>\n#include <Array.h>\n#include <CSAConnection.h>\n\nusing namespace game;\nusing namespace foundation;\nusing namespace Evaluation;\n\n/* --------------------------- global  variables --------------------------- */\n\n/// \u6700\u5927\u306e\u63a2\u7d22\u6df1\u3055\nstatic int                  _searchDepth    = 10;\n\n/// \u9759\u6b62\u63a2\u7d22\u306b\u5165\u308b\u63a2\u7d22\u6df1\u3055\nstatic int                  _stableDepth    = 3;\n\n/* ------------------------------------------------------------------------- */\n\n/* -------------------------- function prototypes -------------------------- */\n\n/// \u63a2\u7d22\nstatic size_t   searchMax (Position &, Array<Move::Move, Move::Max> &);\nstatic size_t   searchMin (Position &, Array<Move::Move, Move::Max> &);\nstatic Eval     searchMax (Position &, Eval alpha, Eval beta, int depth);\nstatic Eval     searchMin (Position &, Eval alpha, Eval beta, int depth);\nstatic Eval     quiesMax  (Position &, Eval alpha, Eval beta, int depth);\nstatic Eval     quiesMin  (Position &, Eval alpha, Eval beta, int depth);\n\n/* ------------------------------------------------------------------------- */\n\n/**\n * \u5148\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMax (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5f8c\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = searchMin(p, alpha, beta, 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta ) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0b\u9650\u3092\u66f4\u65b0\n        if (value >  alpha) {\n            alpha = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n\n/**\n * \u5f8c\u624b\u6700\u5584\u624b\u3092\u8abf\u3079\u308b\n * @parm p \u5c40\u9762\n * @parm m \u5019\u88dc\u624b\n * @return \u6700\u5584\u624b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n */\nstatic size_t searchMin (Position &p, Array<Move::Move, Move::Max> &m)\n{\n\n    size_t                  idx   = 0;\n    Eval                    alpha = -Infinity;\n    Eval                    beta  =  Infinity;\n\n    for (size_t i = 0; i < m.vsize(); ++i) {\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(m[i]);\n        // \u5148\u624b\u5c40\u9762\u3092\u63a2\u7d22\n        auto value = searchMax(p, alpha, beta, 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            std::cout << \"* \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n            return i;\n        }\n        // \u4e0a\u9650\u3092\u66f4\u65b0\n        if (value <  beta ) {\n            beta  = value;\n            idx   = i;\n            std::cout << \"  \" << value << \" \"\n                      << p.string(m[i]) << std::endl;\n        }\n    }\n\n    return idx;\n\n}\n\n/**\n * \u5148\u624b\u756a\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Max)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval searchMax (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\n    Eval vmax = -Infinity;\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u6b62\u63a2\u7d22\u306e\u7d50\u679c\u3092\u8fd4\u3059\n    if (depth > _stableDepth) {\n        return quiesMax(p, alpha, beta, depth); \n    }\n\n    // \u5148\u624b\u756a\u306e\u5019\u88dc\u624b (\u307b\u307c\u5408\u6cd5\u624b) \u3092\u751f\u6210\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u8a70\u307f (-Infinity)\n    Array<Move::Move, Move::Max> m;\n    p.genFastB(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5f8c\u624b\u756a\u3067\u63a2\u7d22\n        auto value = searchMin(p, max(vmax, alpha), beta, depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta) {\n            return beta;\n        }\n\n        // \u4e0b\u9650\u66f4\u65b0\u304b\n        if (value > vmax ) {\n            vmax = value;\n        }\n\n    }\n\n    return vmax;\n\n}\n\n/**\n * \u5f8c\u624b\u756a\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Min)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval searchMin (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\n    Eval vmin = Infinity;\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u6b62\u63a2\u7d22\u306e\u7d50\u679c\u3092\u8fd4\u3059\n    if (depth > _stableDepth) {\n        return quiesMin(p, alpha, beta, depth); \n    }\n\n    // \u5f8c\u624b\u756a\u306e\u5019\u88dc\u624b (\u307b\u307c\u5408\u6cd5\u624b) \u3092\u751f\u6210\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u8a70\u307f (Infinity)\n    Array<Move::Move, Move::Max> m;\n    p.genFastW(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyW(move)) {\n            vmin = -Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5148\u624b\u756a\u3067\u63a2\u7d22\n        auto value = searchMax(p, alpha, min(vmin, beta), depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            return alpha;\n        }\n\n        // \u4e0a\u9650\u66f4\u65b0\u304b\n        if (value < vmin  ) {\n            vmin = value;\n        }\n\n    }\n\n    return vmin;\n\n}\n\n/**\n * \u5148\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Max)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMax (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0a\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0b\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmax = p.eval();\n\n    // beta \u30ab\u30c3\u30c8 (standpat)\n    if (beta <= vmax) {\n        return beta;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmax;\n    }\n\n    // \u5148\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u7389\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptB(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyB(move)) {\n            vmax = Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5f8c\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMin(p, max(vmax, alpha), beta, depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // beta \u30ab\u30c3\u30c8\n        if (value >= beta) {\n            return beta;\n        }\n\n        // \u4e0b\u9650\u66f4\u65b0\u304b\n        if (value > vmax) {\n            vmax = value;\n        }\n\n    }\n\n    return vmax;\n\n}\n\n/**\n * \u5f8c\u624b\u756a\u5c40\u9762\u306e\u9759\u7684\u306a\u8a55\u4fa1\u5024\u3092\u63a2\u7d22\u306b\u3088\u308a\u6c7a\u5b9a\u3059\u308b (Min)\n * @parm p     \u5c40\u9762\n * @parm alpha \u4e0b\u9650\u5024\n * @parm beta  \u4e0a\u9650\u5024\n * @parm depth \u63a2\u7d22\u306e\u6df1\u3055\n * @return \u8a55\u4fa1\u5024\n */\nstatic Eval quiesMin (Position &p, Eval alpha, Eval beta, int depth)\n{\n\n    // \u8a55\u4fa1\u5024\u306e\u521d\u671f\u5024\u306f\u9759\u7684\u8a55\u4fa1\u5024\n    // \u4e0b\u9650\u304c\u73fe\u5728\u306e\u9759\u7684\u8a55\u4fa1\u5024\u4ee5\u4e0a\u306e\u5834\u5408\u63a2\u7d22\u3057\u306a\u3044\n    Eval vmin = p.eval();\n\n    // alpha \u30ab\u30c3\u30c8 (standpat)\n    if (alpha >= vmin) {\n        return alpha;\n    }\n\n    // \u672b\u7aef\u306a\u306e\u3067\u9759\u7684\u8a55\u4fa1\u5024\u3092\u8fd4\u3059\n    if (depth > _searchDepth) {\n        return vmin;\n    }\n\n    // \u5f8c\u624b\u756a\u3067\u99d2\u3092\u53d6\u308b\u624b\u3001\u7389\u624b\u3092\u56de\u907f\u3059\u308b\u624b\u306e\u307f\u3092\u751f\u6210 (\u307b\u307c\u5408\u6cd5\u624b)\n    // \u8a72\u5f53\u3059\u308b\u624b\u304c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u9759\u7684\u8a55\u4fa1\u5024\u304c\u3053\u306e\u5c40\u9762\u306e\u8a55\u4fa1\u5024\u3068\u306a\u308b\n    Array<Move::Move, Move::Max> m;\n    p.genCaptW(m);\n\n    for (auto move : m) {\n\n        // \u7389\u3092\u53d6\u308b\u624b\u304b\n        if (p.dustyW(move)) {\n            vmin = -Infinity;\n            break;\n        }\n\n        // \u5c40\u9762\u3092\u9032\u3081\u308b\n        auto back  = p.move(move);\n        // \u5148\u624b\u756a\u3067\u9759\u6b62\u63a2\u7d22\n        auto value = quiesMax(p, alpha, min(vmin, beta), depth + 1);\n        // \u5c40\u9762\u3092\u623b\u3059\n        p.undo(back);\n\n        // alpha \u30ab\u30c3\u30c8\n        if (value <= alpha) {\n            return alpha;\n        }\n\n        // \u4e0a\u9650\u66f4\u65b0\u304b\n        if (value < vmin) {\n            vmin = value;\n        }\n\n    }\n\n    return vmin;\n\n}\n\n\n\nint main (int argc, char * argv[])\n{\n\n    // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306e\u5f15\u6570\u78ba\u8a8d\n    if (argc != 4) {\n        std::cerr << \"Usage : \"\n                  << argv[0]\n                  << \"<User Name> <Password> <CSA Server>\"\n                  << std::endl;\n        exit(EXIT_FAILURE);\n    }\n\n    // \u521d\u671f\u5316\n    Shogi::initialize();\n\n    // \u99d2\u306e\u4fa1\u5024\u3092\u8a2d\u5b9a\n    Position::setValue  (Evaluation::Value);\n    Position::handsValue(Evaluation::Hands);\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\n    CSAConnection csa(argv[3]);\n    csa.connect();\n\n    // CSA \u30b5\u30fc\u30d0\u306b\u30ed\u30b0\u30a4\u30f3\n    csa.login(argv[1], argv[2]);\n\n    // \u5bfe\u5c40\u5f85\u3061\n    auto summary = csa.newGame();\n\n    // \u5bfe\u5c40\u53d7\u8afe\n    csa.accept();\n\n    // \u5c40\u9762\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    Position p(summary);\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\u3092\u78ba\u8a8d\n    auto myturn  = Position::myTurn(summary);\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u7528\n    Vector<std::string> message;\n\n    // \u5bfe\u6226\n    while (1) {\n\n        if (p.turn() == myturn) {\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u756a\n\n            // \u6307\u3057\u624b\u751f\u6210\n            Array<Move::Move, Move::Max> move;\n            p.genMove(move);\n\n            // \u624b\u304c\u7121\u304b\u3063\u305f\u3089\u8a70\u307f\n            if (move.vsize() == 0) {\n                // \u6295\u4e86\n                csa.resign();\n                break;\n            }\n\n            // \u63a2\u7d22\u306e\u7d50\u679c\u304c\u6700\u3082\u826f\u3044\u624b\u3092\u9078\u629e\u3059\u308b\n            size_t best;\n            if (move.vsize() > 1) {\n                if (myturn == Color::Black) {\n                    best = searchMax(p, move);\n                } else {\n                    best = searchMin(p, move);\n                }\n            } else {\n                // \u624b\u304c\u3072\u3068\u3064\u3060\u3051\u3057\u304b\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u624b\u3092\u6307\u3059\u3057\u304b\u306a\u3044\n                best = 0;\n            }\n\n            // \u6307\u3057\u624b\u9001\u4fe1\n            csa.send(p.string(move[best]));\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(move[best]);\n\n        } else {\n\n            // \u76f8\u624b\u306e\u624b\u756a\n\n            // \u76f8\u624b\u306e\u624b\u3092\u5f85\u3064\n            csa.receive(message);\n\n            // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u624b\u306e\u5148\u982d\u6587\u5b57\u304c '+' '-' \u3067\u306a\u3044\u3068\u304d\u306f\u6307\u3057\u624b\u3067\u306f\u306a\u3044\n            if (message[0][0] != '+' && message[0][0] != '-') {\n                // \u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\n                for (auto l : message) {\n                    std::cout << l << std::endl;\n                }\n                break;\n            }\n\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u624b\u756a\u306e\u6307\u3057\u624b (\u30a8\u30b3\u30fc) \u306f\u7121\u8996\n            const char turchk[] = {'+', '-'};\n            if (message[0][0] == turchk[myturn]) {\n                // 2 \u884c\u76ee\u306b\u76f8\u624b\u306e\u624b\u304c\u5165\u308b\u5834\u5408\u3082\u3042\u308b\n                if (message.size() == 2) {\n                    message[0] = message[1];\n                } else {\n                    continue;\n                }\n            }\n\n            // \u76f8\u624b\u306e\u624b\u3092\u8868\u793a\n            std::cout << message[0] << std::endl;\n\n            // \u5c40\u9762\u3092\u9032\u3081\u308b\n            p.move(message[0]);\n\n        }\n\n        // \u5c40\u9762\u3092\u8868\u793a\n        std::cout << p << std::endl;\n\n    }\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5168\u3066\u53d7\u4fe1\n    while (csa.message()) {\n        csa.receive(message);\n        if (message.vsize() == 0) {\n            break;\n        }\n        for (auto l : message) {\n            std::cout << l << std::endl;\n        }\n    }\n\n    // \u68cb\u8b5c\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\n    csa.write(\"kifu.csa\");\n\n    // \u30ed\u30b0\u30a2\u30a6\u30c8\n    csa.logout();\n\n    // \u901a\u4fe1\u7d42\u4e86\n    csa.close();\n\n    exit(EXIT_SUCCESS);    \n\n}\n```\n\n\u9759\u6b62\u63a2\u7d22\u306e\u307f\u306e\u3068\u304d\u3088\u308a\u3055\u3089\u306b\u5f37\u304f\u306a\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\u305f\u3060\u6307\u3059\u307e\u3067\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u3088\u3046\u306b\u3082\u306a\u308a\u307e\u3057\u305f\uff0e\u30a2\u30eb\u30d5\u30a1\u30fb\u30d9\u30fc\u30bf\u6cd5\u306f\u3044\u304b\u306b\u65e9\u304f\u8a55\u4fa1\u5024\u306e\u7bc4\u56f2\u3092\u72ed\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u304c\u52b9\u7387\u5316\u306e\u9375\u3068\u306a\u308a\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\u306b\u306f\u3088\u308a\u826f\u3044\u8a55\u4fa1\u5024\u304c\u5f97\u3089\u308c\u308b\u624b\u304b\u3089\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u307e\u305f\u99d2\u306e\u640d\u5f97\u3060\u3051\u306e\u8a55\u4fa1\u3088\u308a\u3082\u6b63\u78ba\u306b\u5c40\u9762\u3092\u8a55\u4fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3089\uff0c\u3088\u308a\u826f\u3044\u8a55\u4fa1\u5024\u304c\u5f97\u3089\u308c\u308b\u5c40\u9762\u306b\u81f3\u308b\u3067\u3042\u308d\u3046\u624b\u306b\u7d5e\u3063\u3066\u63a2\u7d22\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\n\n\n## \u307e\u3068\u3081\n\u4eca\u56de\u306f Fedora 25 \u306b\u6700\u5c0f\u69cb\u6210\u3067\u5c06\u68cb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u767a\u3059\u308b\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3057\u305f\uff0e\u305d\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u304b\u3089\u51fa\u767a\u3057\u3066\uff0c\u6700\u5f8c\u306f 3 \u624b\u8aad\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u307e\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\u6b21\u56de\u306f\uff0c\u7279\u5b9a\u306e\u5c40\u9762\u306e\u89e3\u6790\uff0c\u6642\u9593\u7ba1\u7406\uff0c\u7f6e\u63db\u8868\uff0c\u4e26\u5217\u63a2\u7d22\uff0c\u8a55\u4fa1\u95a2\u6570\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u9000\u884c\u30c6\u30b9\u30c8\u306b\u3064\u3044\u3066\u6295\u7a3f\u3057\u307e\u3059\uff0e\n\n\n## \u8b1d\u8f9e\n\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u306b\u95a2\u3059\u308b\u60c5\u5831\u3084\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u516c\u958b\u3057\u3066\u304f\u3060\u3055\u3063\u3066\u3044\u308b\u5168\u3066\u306e\u65b9\u3005\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\uff0elibshogi \u306e\u958b\u767a\u306b\u3042\u305f\u308a lesserpyon\uff0cBonanza\uff0cApery\uff0c\u3084\u306d\u3046\u3089\u738b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u591a\u304f\u306e\u3053\u3068\u3092\u5b66\u3070\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0elesserpyon3 \u306e\u304a\u304b\u3052\u3067\u5408\u6cd5\u624b\u751f\u6210\u306e\u30af\u30ed\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u3067\u304d\u307e\u3057\u305f\uff0e\u307e\u305f\uff0c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5c06\u68cb\u9078\u624b\u6a29\u3067\u306f\u4f55\u4eba\u304b\u306e\u958b\u767a\u8005\u306e\u65b9\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u6210\u306b\u3064\u3044\u3066\u6696\u304b\u3044\u5fdc\u63f4\u306e\u8a00\u8449\u3092\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0e\u516c\u5f0f\u5bfe\u5c40\u521d\u306e\u30b9\u30c6\u30a4\u30eb\u30e1\u30a4\u30c8\u306f\u30ab\u30c4\u4e3c\u5c06\u68cb\u3055\u3093\u7121\u3057\u306b\u306f\u6210\u3057\u3048\u306a\u304b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u3042\u3089\u305f\u3081\u3066\u7686\u69d8\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\uff0e\n", "tags": ["AI", "shogi", "Linux", "C++"]}