{"tags": ["RaspberryPi", "node-red", "I2C", "oled"], "context": "\n\n\u6982\u8981\nraspberry pi 1 model b\u306e\u3001node-red\u3067\u3001i2c\u3092\u53e9\u3044\u3066\u3001OLED\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3002\n\n\u958b\u767a\u74b0\u5883\nraspberry pi 1 model b\nraspbian 2016_09_23 jessie lite\n\n\u6e96\u5099\nsudo aptitude install i2c-tools\nsudo aptitude install python-smbus\nsudo aptitude install python-pillow\n\nraspi-config \u306eAdvanced Option \u304b\u3089i2c\u3092\u6709\u52b9\u5316\u3059\u308b\u3002\n\n\u5199\u771f\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n[{\"id\":\"2ca91c68.4c6684\",\"type\":\"inject\",\"z\":\"4f4f703e.a2a9d\",\"name\":\"\",\"topic\":\"\",\"payload\":\"\",\"payloadType\":\"date\",\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"x\":128,\"y\":421,\"wires\":[[\"3040db51.0c7da4\"]]},{\"id\":\"3040db51.0c7da4\",\"type\":\"exec\",\"z\":\"4f4f703e.a2a9d\",\"command\":\"sudo python /home/pi/py/test7.py\",\"addpay\":true,\"append\":\"\",\"useSpawn\":\"\",\"timer\":\"\",\"name\":\"sudo\",\"x\":326,\"y\":421.5,\"wires\":[[],[],[]]}]\n\n\n\u56de\u8def\u56f3\n\n\n\u6e96\u5099\uff12\n\uff11\uff12\uff18\u00d7\uff16\uff14\u306e\u753b\u50cf\u3092\u3064\u304f\u308b\u3002\nhttp://jsdo.it/ohisama1/yhxJ\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nimport smbus\nimport time\nfrom PIL import Image\n\nimage = Image.open('canvas.png')\nimg = image.convert('1')\npx = img.getdata()\noled = smbus.SMBus(1)\nlist0 = [0x21, 0, 127, 0x22, 0, 7]\nfor k in list0:\n    block = []\n    block.append(k)\n    oled.write_i2c_block_data(0x3c, 0x0, block)\n\nstep = 1024\nbuf = [0] * 8 * step\nof = [0, 128, 256, 384, 512, 640, 768, 896]\nw = 128\nj = 0\nfor y in range(0, 8 * step, step):\n    i = y + w - 1\n    while i >= y:\n        buf[j] = (px[i] & 0x01) | (px[i + of[1]] & 0x01) << 1 | (px[i + of[2]] & 0x01) << 2 | (px[i + of[3]] & 0x01) << 3 | (px[i + of[4]] & 0x01) << 4 | (px[i + of[5]] & 0x01) << 5 | (px[i + of[6]] & 0x01) << 6 | (px[i + of[7]] & 0x01) << 7\n        i -= 1\n        j += 1\n\nfor i in range(64):\n    block = []\n    for j in range(16):\n        b = i * 16 + j\n        block.append(buf[b])\n    oled.write_i2c_block_data(0x3c, 0x40, block)\nprint(\"ok\")\n\n\n#\u6982\u8981\nraspberry pi 1 model b\u306e\u3001node-red\u3067\u3001i2c\u3092\u53e9\u3044\u3066\u3001OLED\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3002\n\n#\u958b\u767a\u74b0\u5883\nraspberry pi 1 model b\nraspbian 2016_09_23 jessie lite\n\n#\u6e96\u5099\n```\nsudo aptitude install i2c-tools\nsudo aptitude install python-smbus\nsudo aptitude install python-pillow\n```\nraspi-config \u306eAdvanced Option \u304b\u3089i2c\u3092\u6709\u52b9\u5316\u3059\u308b\u3002\n#\u5199\u771f\n\n![MVC-009S.JPG](https://qiita-image-store.s3.amazonaws.com/0/18104/ba58d882-0216-ce5a-cbf3-d58f67463e7f.jpeg)\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n![rasp.JPG](https://qiita-image-store.s3.amazonaws.com/0/18104/02b99024-b87c-faf0-4299-c71014cc94f5.jpeg)\n\n```\n[{\"id\":\"2ca91c68.4c6684\",\"type\":\"inject\",\"z\":\"4f4f703e.a2a9d\",\"name\":\"\",\"topic\":\"\",\"payload\":\"\",\"payloadType\":\"date\",\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"x\":128,\"y\":421,\"wires\":[[\"3040db51.0c7da4\"]]},{\"id\":\"3040db51.0c7da4\",\"type\":\"exec\",\"z\":\"4f4f703e.a2a9d\",\"command\":\"sudo python /home/pi/py/test7.py\",\"addpay\":true,\"append\":\"\",\"useSpawn\":\"\",\"timer\":\"\",\"name\":\"sudo\",\"x\":326,\"y\":421.5,\"wires\":[[],[],[]]}]\n```\n#\u56de\u8def\u56f3\n![res.JPG](https://qiita-image-store.s3.amazonaws.com/0/18104/c7f206b8-458b-f8ef-4687-d7e6e4a35834.jpeg)\n\n#\u6e96\u5099\uff12\n\uff11\uff12\uff18\u00d7\uff16\uff14\u306e\u753b\u50cf\u3092\u3064\u304f\u308b\u3002\nhttp://jsdo.it/ohisama1/yhxJ\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```\nimport smbus\nimport time\nfrom PIL import Image\n\nimage = Image.open('canvas.png')\nimg = image.convert('1')\npx = img.getdata()\noled = smbus.SMBus(1)\nlist0 = [0x21, 0, 127, 0x22, 0, 7]\nfor k in list0:\n    block = []\n    block.append(k)\n    oled.write_i2c_block_data(0x3c, 0x0, block)\n\nstep = 1024\nbuf = [0] * 8 * step\nof = [0, 128, 256, 384, 512, 640, 768, 896]\nw = 128\nj = 0\nfor y in range(0, 8 * step, step):\n    i = y + w - 1\n    while i >= y:\n        buf[j] = (px[i] & 0x01) | (px[i + of[1]] & 0x01) << 1 | (px[i + of[2]] & 0x01) << 2 | (px[i + of[3]] & 0x01) << 3 | (px[i + of[4]] & 0x01) << 4 | (px[i + of[5]] & 0x01) << 5 | (px[i + of[6]] & 0x01) << 6 | (px[i + of[7]] & 0x01) << 7\n        i -= 1\n        j += 1\n\nfor i in range(64):\n    block = []\n    for j in range(16):\n        b = i * 16 + j\n        block.append(buf[b])\n    oled.write_i2c_block_data(0x3c, 0x40, block)\nprint(\"ok\")\n\n```\n"}