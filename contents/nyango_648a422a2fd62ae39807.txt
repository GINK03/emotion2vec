{"context": " More than 1 year has passed since last update.Scala\u306eTest\u30af\u30e9\u30b9\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u66f8\u304f\u3068\nimport org.specs2.mock.Mockito\nimport play.api.test.PlaySpecification\n\ncase class A1(id: B)\ncase class A2[T](id: T)\ncase class B(id: Int)\nclass HogeSpec extends PlaySpecification with Mockito {\n  override def is =s2\"\"\"\n      \u3053\u308c\u306f\u30d1\u30b9\u3059\u308b $tes1\n      \u3053\u308c\u306f\u30d1\u30b9\u3059\u308b $tes2\n      \u3053\u308c\u306f\u30d1\u30b9\u3059\u308b $tes1s\n      \u3053\u308c\u306f\u30d1\u30b9\u3057\u306a\u3044 $tes2s\n    \"\"\"\n  def tes1 = {\n    val a = mock[A1]\n    val b = mock[B]\n    a.id returns b\n    a.id must_== b\n  }\n  def tes2 = {\n    val a = mock[A2[B]]\n    val b = mock[B]\n    a.id returns b\n    a.id must_== b\n  }\n  def tes1s = {\n    val a = smartMock[A1]\n    val b = smartMock[B]\n    a.id returns b\n    a.id must_== b\n  }\n  def tes2s = {\n    val a = smartMock[A2[B]]\n    val b = smartMock[B]\n    a.id returns b\n    a.id must_== b\n  }\n}\n\ntes2s\u306e3\u884c\u76ee\u3067Mockito\u304c ClassCastException \u3092\u8fd4\u3057\u3001a.id \u3068 b \u306e\u578b\u304c\u7570\u306a\u308b\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3092\u5410\u304f\nhttp://stackoverflow.com/questions/10324063/mockito-classcastexception\nhttp://mockito.googlecode.com/svn/tags/1.8.3/javadoc/org/mockito/Mockito.html#RETURNS_DEEP_STUBS\n\nGood quote I've seen one day on the web: every time a mock returns a mock a fairy dies. \n\n\u30a8\u30e9\u30fc\u3067\u691c\u7d22\u3057\u305f\u3089\u3001\u300c\u30e2\u30c3\u30af\u304c\u30e2\u30c3\u30af\u3092\u8fd4\u3059\u305f\u3073\u5996\u7cbe\u304c\u6b7b\u306c\u300d\u3068\u3044\u3046\u8b0e\u306e\u683c\u8a00\u304c\u51fa\u3066\u304d\u305f\n\n\u8ffd\u8a18\n\u3069\u3046\u3084\u3089smartMock \u3067\u306a\u304f mock \u3092\u7528\u3044\u305f\u5834\u5408\u306f\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\u3002\nScala\u306eTest\u30af\u30e9\u30b9\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u66f8\u304f\u3068\n\n```scala\nimport org.specs2.mock.Mockito\nimport play.api.test.PlaySpecification\n\ncase class A1(id: B)\ncase class A2[T](id: T)\ncase class B(id: Int)\nclass HogeSpec extends PlaySpecification with Mockito {\n  override def is =s2\"\"\"\n      \u3053\u308c\u306f\u30d1\u30b9\u3059\u308b $tes1\n      \u3053\u308c\u306f\u30d1\u30b9\u3059\u308b $tes2\n      \u3053\u308c\u306f\u30d1\u30b9\u3059\u308b $tes1s\n      \u3053\u308c\u306f\u30d1\u30b9\u3057\u306a\u3044 $tes2s\n    \"\"\"\n  def tes1 = {\n    val a = mock[A1]\n    val b = mock[B]\n    a.id returns b\n    a.id must_== b\n  }\n  def tes2 = {\n    val a = mock[A2[B]]\n    val b = mock[B]\n    a.id returns b\n    a.id must_== b\n  }\n  def tes1s = {\n    val a = smartMock[A1]\n    val b = smartMock[B]\n    a.id returns b\n    a.id must_== b\n  }\n  def tes2s = {\n    val a = smartMock[A2[B]]\n    val b = smartMock[B]\n    a.id returns b\n    a.id must_== b\n  }\n}\n```\n\n`tes2s`\u306e3\u884c\u76ee\u3067Mockito\u304c `ClassCastException` \u3092\u8fd4\u3057\u3001`a.id` \u3068 `b` \u306e\u578b\u304c\u7570\u306a\u308b\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3092\u5410\u304f\n\nhttp://stackoverflow.com/questions/10324063/mockito-classcastexception\nhttp://mockito.googlecode.com/svn/tags/1.8.3/javadoc/org/mockito/Mockito.html#RETURNS_DEEP_STUBS\n> Good quote I've seen one day on the web: every time a mock returns a mock a fairy dies. \n\n\u30a8\u30e9\u30fc\u3067\u691c\u7d22\u3057\u305f\u3089\u3001\u300c\u30e2\u30c3\u30af\u304c\u30e2\u30c3\u30af\u3092\u8fd4\u3059\u305f\u3073\u5996\u7cbe\u304c\u6b7b\u306c\u300d\u3068\u3044\u3046\u8b0e\u306e\u683c\u8a00\u304c\u51fa\u3066\u304d\u305f\n\n\n\n## \u8ffd\u8a18\n\u3069\u3046\u3084\u3089`smartMock` \u3067\u306a\u304f `mock` \u3092\u7528\u3044\u305f\u5834\u5408\u306f\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\u3002\n\n\n", "tags": ["Mockito", "Scala", "Specs2"]}