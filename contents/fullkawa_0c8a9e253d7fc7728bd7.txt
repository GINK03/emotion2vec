{"context": "\n\n\u306f\u3058\u3081\u306b\n2016\u5e74\u306f\u30dc\u30c3\u30c8\u304c\u6ce8\u76ee\u3092\u96c6\u3081\u305f1\u5e74\u3067\u3057\u305f\u3002\u307e\u305f\u3001\u6a5f\u68b0\u5b66\u7fd2\u95a2\u9023\u306e\u6280\u8853\u9032\u6b69\u304c\u3081\u3056\u307e\u3057\u304f\u3001\u6b21\u3005\u3068\u65b0\u305f\u306a\u53ef\u80fd\u6027\u304c\u898b\u3048\u3066\u304d\u305f\u5e74\u3067\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u8a18\u4e8b\u3092\u958b\u3044\u305f\u3042\u306a\u305f\u306f\u304d\u3063\u3068\u300c\u6a5f\u68b0\u5b66\u7fd2\u3092\u4f7f\u3063\u305f\u30dc\u30c3\u30c8\u3092\u958b\u767a\u3057\u305f\u3044\u300d\u3068\u601d\u3063\u3066\u3044\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\n\u300c\u3067\u3082\u4f55\u3092\u3069\u3046\u3057\u305f\u3089\u3044\u3044\u304b\u5206\u304b\u3089\u306a\u3044\u300d\n\u3053\u306e\u8a18\u4e8b\u306f\u305d\u3093\u306a\u8aad\u8005\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u4f7f\u3044\u3069\u3053\u308d\u30fb\u4f7f\u3044\u65b9\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u4f7f\u3044\u3069\u3053\u308d\u306b\u306f\u5927\u304d\u304f\u5206\u3051\u3066\uff12\u3064\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4e00\u3064\u306f\u300c\u30e6\u30fc\u30b6\u3068\u30dc\u30c3\u30c8\u306e\u3084\u308a\u3068\u308a\u300d\u306e\u90e8\u5206\u3001\u3082\u3046\u4e00\u3064\u306f\u300c\u30e6\u30fc\u30b6\u306b\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u300d\u306e\u90e8\u5206\u3067\u3059\u3002\n\u524d\u8005\u306f\u3001\u81ea\u7136\u6587\u306b\u3088\u3063\u3066\u30e6\u30fc\u30b6\u3068\u3084\u308a\u3068\u308a\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\u3053\u3053\u306fMicrosoft LUIS\u306a\u3069\u306e\u65e2\u5b58\u30b5\u30fc\u30d3\u30b9\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u73fe\u5b9f\u7684\u3067\u3057\u3087\u3046\u3002\nLUIS\u4ee5\u5916\u306b\u3069\u3046\u3044\u3063\u305f\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b\u304b\u3001\u4e0b\u8a18\u306b\u3088\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\u3002\nBOT\u3067\u4f7f\u3048\u308b\u4f1a\u8a71API\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fb\u30b5\u30fc\u30d3\u30b9\u307e\u3068\u3081\n\u6b21\u306b\u300c\u30e6\u30fc\u30b6\u306b\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u300d\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u3002\n\u3053\u308c\u306f\u3055\u3089\u306b\u4ee5\u4e0b\u306e2\u3064\u306b\u5206\u3051\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u306e\uff11.\u4e00\u822c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9, API\u3092\u5229\u7528\u3059\u308b\n(\u4e3b\u306b)\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u6210\u679c\u3092\u5229\u7528\u3057\u305fAPI\u96c6(\u81ea\u5206\u7528)\n\u4e0a\u8a18\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bAPI\u7b49\u3092\u4f7f\u3046\u3068\u3001\u6700\u65b0\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u6210\u679c\u304c\u3044\u3068\u3082\u7c21\u5358\u306b\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u6ce8\u610f\u3057\u305f\u3044\u306e\u306f\u3001API\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3060\u3051\u3060\u3068\u4f3c\u305f\u3088\u3046\u306a\u30dc\u30c3\u30c8\u3070\u304b\u308a\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u305d\u306e\uff12.\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3046\n\u3082\u3046\u4e00\u3064\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\u3055\u3089\u306b\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u3001\u30ea\u30bd\u30fc\u30b9(GPU\u3068\u304b\u3067\u3059\u306d)\u3092\u4f7f\u3063\u3066\u5b66\u7fd2\u3055\u305b\u308b\u3068\u3044\u3046\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u3059\u3002\n\u4e00\u6c17\u306b\u30cf\u30fc\u30c9\u30eb\u306f\u4e0a\u304c\u308a\u307e\u3059\u304c\u3001\u30aa\u30ea\u30b8\u30ca\u30ea\u30c6\u30a3\u306e\u9ad8\u3044\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u907f\u3051\u3066\u901a\u308c\u306a\u3044\u90e8\u5206\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3055\u3042\u3001\u305d\u308c\u3067\u306f\u6a5f\u68b0\u5b66\u7fd2\u3092\u4f7f\u3063\u305f\u72ec\u81ea\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30dc\u30c3\u30c8\u3092\u5b9f\u969b\u306b\u958b\u767a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u9078\u629e\n\u5b9f\u88c5\u306b\u5165\u308b\u524d\u306b\u3001\u4eca\u56de\u4f7f\u3046\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\u6df1\u5c64\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u30d2\u30c3\u30c1\u30cf\u30a4\u30af\u30ac\u30a4\u30c9\n\u4e00\u756a\u4eba\u6c17\u306fTensorflow\u3067\u3059\u304c\u3001\u4f4e\u30ec\u30d9\u30ebAPI(\u6027\u80fd\u304c\u4f4e\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u306a\u3044\u3067\u3059\u3088\uff1f)\u306e\u305f\u3081\u521d\u5fc3\u8005\u306b\u3068\u3063\u3066\u306f\u5c11\u3057\u6577\u5c45\u304c\u9ad8\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4eca\u56de\u306fKeras\u3092\u9078\u629e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u3061\u3089\u306f\u9ad8\u30ec\u30d9\u30ebAPI\u306a\u306e\u3067\u8a18\u8ff0\u304c\u7c21\u6f54\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u3044\u3046\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001\u30dc\u30c3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3082\u9078\u629e\u3057\u307e\u3057\u3087\u3046\u3002\n\u4e0a\u8a18\u8a18\u4e8b\u3092\u898b\u3066\u5206\u304b\u308b\u901a\u308a\u3001\u4f7f\u7528\u8a00\u8a9e\u306fPython\u304c\u591a\u3044\u3067\u3059\u3002\u4e00\u65b9\u3001\u30dc\u30c3\u30c8\u306e\u5b9f\u88c5\u306b\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u306fNode.js\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3053\u306e\u30df\u30b9\u30de\u30c3\u30c1\u3092\u89e3\u6d88\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u306f\u6050\u3089\u304f\u300c\u305d\u308c\u305e\u308c\u3092\u5206\u3051\u3066\u5b9f\u88c5\u3057\u3001API\u7d4c\u7531\u3067\u5229\u7528\u3059\u308b\u300d\u304c\u4e00\u822c\u7684\u306a\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u4eca\u56de\u306f\u5b9f\u88c5\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3001\u30dc\u30c3\u30c8\u3082Python\u3067\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4f7f\u7528\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306fpython-rtmbot\u3067\u3059\u3002\n\n\u4f55\u3092\u3059\u3079\u304d\u304b\uff1f\n\u6a5f\u68b0\u5b66\u7fd2\u3092\u4f7f\u3063\u305f\u72ec\u81ea\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30dc\u30c3\u30c8\u3092\u958b\u767a\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u3001\u975e\u5e38\u306b\u5927\u307e\u304b\u306b\u8a00\u3063\u3066\u4ee5\u4e0b\u306e\uff13\u3064\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\n\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3001\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3055\u305b\u308b\n\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3059\u308b\n\n\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u306e\u306f\u307b\u3068\u3093\u3069\u4e0a\u8a181, 2\u306e\u307f\u3067\u3059\u3002\n\u203b\u53c2\u8003\uff1aTensorFlow\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb - TensorFlow\u30e1\u30ab\u30cb\u30af\u30b9101\uff08\u7ffb\u8a33\uff09\n\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u3001\u5b66\u7fd2\u306f\u57fa\u672c\u7684\u306b1\u56de\u884c\u3048\u3070\u5341\u5206\u3067\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u305d\u308c\u3067\u5341\u5206\u306b\u7cbe\u5ea6\u304c\u9ad8\u3044\u4e88\u6e2c\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u524d\u63d0\u3067\u3059\u3002\n\u305d\u306e\u5f8c\u3001\u30e2\u30c7\u30eb\u69cb\u9020\u3001\u5b66\u7fd2\u7d50\u679c(\u30d1\u30e9\u30e1\u30fc\u30bf)\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3001\u5b9f\u884c\u6642(=3)\u306b\u8aad\u307f\u8fbc\u3080\u3068\u3044\u3046\u306e\u304c\u5927\u307e\u304b\u306a\u6d41\u308c\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30e2\u30c7\u30eb\u69cb\u7bc9, \u5b66\u7fd2\n\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u3068\u5b66\u7fd2\u306b\u3064\u3044\u3066\u306f\u524d\u8ff0\u306e\u901a\u308a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3001\u30b5\u30f3\u30d7\u30eb\u304c\u8c4a\u5bcc\u3067\u3059\u306e\u3067\u3001\u4eca\u56de\u306f\u65e2\u5b58\u306e\u3082\u306e\u3092\u6d41\u7528\u3057\u307e\u3059\u3002\nKeras\u306ecallback\u3092\u8a66\u3059\uff08model\u306esave,restore/TensorBoard\u66f8\u304d\u51fa\u3057/early stopping\uff09\n\u3053\u308c\u3092\u5229\u7528\u3057\u3001\u300c\u8a71\u3057\u304b\u3051\u3089\u308c\u308b\u3068sin\u306e\u5024\u3092\u8fd4\u3059\u300d\u30dc\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5b9f\u7528\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306f\u5341\u5206\u3067\u3057\u3087\u3046\u3002\n\u307e\u305f\u3001\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u4e00\u5f0f\u3092Github(fullkawa/ml-bot-sample)\u306b\u4e0a\u3052\u307e\u3057\u305f\u3002\n\u4ee5\u5f8c\u306f\u3053\u3061\u3089\u304b\u3089\u5fc5\u8981\u306a\u90e8\u5206\u306e\u307f\u629c\u7c8b\u3057\u3066\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u3001\"train.py\"\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u53c2\u8003\u8a18\u4e8b\u306e\u30bd\u30fc\u30b9\u3092\u307b\u307c\u307e\u3068\u3081\u305f\u3060\u3051\u306e\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u300173\u884c\u76ee\u306e\n\ntrain.py\ncp_cb = ModelCheckpoint(filepath = fpath, monitor='val_loss', verbose=1, save_best_only=True, mode='auto')\n\n\n\u306878\u301c80\u884c\u76ee\u306e\n\ntrain.py\njson_string = model.to_json()\n#open(os.path.join(f_model,'./tensorlog/rnn_model.json'), 'w').write(json_string)\nopen(os.path.join('./tensorlog/rnn_model.json'), 'w').write(json_string)\n\n\n\u3067\u3059\u3002\n\u524d\u8005\u3067\u5b66\u7fd2\u7d50\u679c(\u30d1\u30e9\u30e1\u30fc\u30bf)\u3001\u5f8c\u8005\u3067\u30e2\u30c7\u30eb\u69cb\u9020\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ed6\u306e\u90e8\u5206\u3067\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306f\u53c2\u7167\u5143\u8a18\u4e8b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\u30dc\u30c3\u30c8\u3092\u52d5\u304b\u3059\u524d\u306bpython train.py\u3092\u4e00\u5ea6\u5b9f\u884c\u3057\u307e\u3059\u3002\n112-233:ml-bot-sample y.furukawa$ python train.py\nUsing TensorFlow backend.\n____________________________________________________________________________________________________\nLayer (type) Output ShapeParam # Connected to\n====================================================================================================\nlstm_1 (LSTM)(None, 300) 362400lstm_input_1[0][0]\n____________________________________________________________________________________________________\n\ndense_1 (Dense)(None, 1) 301 lstm_1[0][0]\n____________________________________________________________________________________________________\nactivation_1 (Activation)(None, 1) 0 dense_1[0][0]\n====================================================================================================\nTotal params: 362701\n____________________________________________________________________________________________________\nTrain on 3325 samples, validate on 176 samples\nEpoch 1/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.2627 - acc: 0.0000e+00 Epoch 00000: val_loss improved from inf to 0.19250, saving model to ./tensorlog/weights.00-0.24-0.19.hdf5\n3325/3325 [==============================] - 49s - loss: 0.2408 - acc: 3.0075e-04 - val_loss: 0.1925 - val_acc: 0.0000e+00\nEpoch 2/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.0456 - acc: 3.3333e-04 Epoch 00001: val_loss improved from 0.19250 to 0.00085, saving model to ./tensorlog/weights.01-0.04-0.00.hdf5\n3325/3325 [==============================] - 48s - loss: 0.0412 - acc: 3.0075e-04 - val_loss: 8.4748e-04 - val_acc: 0.0000e+00\nEpoch 3/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.0015 - acc: 3.3333e-04 Epoch 00002: val_loss did not improve\n3325/3325 [==============================] - 47s - loss: 0.0024 - acc: 3.0075e-04 - val_loss: 0.0228 - val_acc: 0.0000e+00\nEpoch 4/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.0189 - acc: 3.3333e-04 Epoch 00003: val_loss did not improve\n3325/3325 [==============================] - 46s - loss: 0.0177 - acc: 3.0075e-04 - val_loss: 0.0055 - val_acc: 0.0000e+00\nEpoch 5/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.0089 - acc: 3.3333e-04 Epoch 00004: val_loss did not improve\n3325/3325 [==============================] - 47s - loss: 0.0095 - acc: 3.0075e-04 - val_loss: 0.0163 - val_acc: 0.0000e+00\nEpoch 00004: early stopping\n\n\u4eca\u56de\u306e\u5834\u5408\u3001Epock 2/10\u3067\u51fa\u529b\u3055\u308c\u305f\"weights.01-0.04-0.00.hdf5\"\u304c\u6700\u3082\u7cbe\u5ea6\u304c\u9ad8\u304f(val_loss: 8.4748e-04 - val_acc: 0.0000e+00)\u3001\u4ee5\u964d\u306f\u3080\u3057\u308d\u60aa\u5316\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30dc\u30c3\u30c8\u306e\u5b9f\u88c5\n\u6b21\u306b\u3001\u30dc\u30c3\u30c8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\n\u3053\u308c(plugins/sin.py)\u304c\u4eca\u56de\u306e\u30e1\u30a4\u30f3\u30c7\u30a3\u30c3\u30b7\u30e5\u3067\u3059\u3002\n\nplugins/sin.py\nmodel_json = open('tensorlog/rnn_model.json', 'r').read()\nmodel = model_from_json(model_json)\n\n\n\u30e2\u30c7\u30eb\u69cb\u9020\u3092\u8aad\u307f\u8fbc\u307f\u3001\n\nplugins/sin.py\nfiles = glob.glob('tensorlog/weights.*.hdf5')\nmodel.load_weights(files[-1])\n\n\n\u5b66\u7fd2\u7d50\u679c(\u30d1\u30e9\u30e1\u30fc\u30bf)\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u6570\u5b57\u304c\u4e00\u756a\u5927\u304d\u3044\u30d5\u30a1\u30a4\u30eb\uff1d\u6700\u3082\u7cbe\u5ea6\u304c\u9ad8\u3044\u5b66\u7fd2\u6e08\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n\u3053\u308c\u3060\u3051\u3067\u3001\n\nplugins/sin.py\npredicted = self.model.predict(X, batch_size=1)\n\n\n\u3068\u3044\u3046\u5177\u5408\u306bsin\u5024\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u306e\u524d\u306e\n\nplugins/sin.py\nX = np.zeros((1,100,1))\nfor i in range(0, 100):\n  X[0, i, 0] = i # \u672c\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u56fa\u5b9a\u3068\u3059\u308b\n\n\n\u306fsin\u5024\u3092\u7b97\u51fa\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u7279\u306b\u91cd\u8981\u306a\u7b87\u6240\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092\u63c3\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u306f\u5730\u5473\u306b\u9762\u5012\u3067\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\n112-233:ml-bot-sample y.furukawa$ rtmbot\nUsing TensorFlow backend.\nModel loaded.\nWeights loaded from tensorlog/weights.01-0.04-0.00.hdf5\nREADY!\n\n\u4eca\u56de\u3001\u30dc\u30c3\u30c8\u306e\u540d\u524d\u3092\"stag.feec\"\u3068\u3057\u307e\u3057\u305f\u3002\n\u8a71\u3057\u304b\u3051\u3066\u307f\u307e\u3059\u3002\n\n\u7121\u4e8b\u3001sin\u306e\u5024\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff01\n## \u306f\u3058\u3081\u306b\n\n2016\u5e74\u306f\u30dc\u30c3\u30c8\u304c\u6ce8\u76ee\u3092\u96c6\u3081\u305f1\u5e74\u3067\u3057\u305f\u3002\u307e\u305f\u3001\u6a5f\u68b0\u5b66\u7fd2\u95a2\u9023\u306e\u6280\u8853\u9032\u6b69\u304c\u3081\u3056\u307e\u3057\u304f\u3001\u6b21\u3005\u3068\u65b0\u305f\u306a\u53ef\u80fd\u6027\u304c\u898b\u3048\u3066\u304d\u305f\u5e74\u3067\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3092\u958b\u3044\u305f\u3042\u306a\u305f\u306f\u304d\u3063\u3068\u300c\u6a5f\u68b0\u5b66\u7fd2\u3092\u4f7f\u3063\u305f\u30dc\u30c3\u30c8\u3092\u958b\u767a\u3057\u305f\u3044\u300d\u3068\u601d\u3063\u3066\u3044\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\n\u300c\u3067\u3082\u4f55\u3092\u3069\u3046\u3057\u305f\u3089\u3044\u3044\u304b\u5206\u304b\u3089\u306a\u3044\u300d\n\u3053\u306e\u8a18\u4e8b\u306f\u305d\u3093\u306a\u8aad\u8005\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u6a5f\u68b0\u5b66\u7fd2\u306e\u4f7f\u3044\u3069\u3053\u308d\u30fb\u4f7f\u3044\u65b9\n\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u4f7f\u3044\u3069\u3053\u308d\u306b\u306f\u5927\u304d\u304f\u5206\u3051\u3066\uff12\u3064\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4e00\u3064\u306f\u300c\u30e6\u30fc\u30b6\u3068\u30dc\u30c3\u30c8\u306e\u3084\u308a\u3068\u308a\u300d\u306e\u90e8\u5206\u3001\u3082\u3046\u4e00\u3064\u306f\u300c\u30e6\u30fc\u30b6\u306b\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u300d\u306e\u90e8\u5206\u3067\u3059\u3002\n\n\u524d\u8005\u306f\u3001\u81ea\u7136\u6587\u306b\u3088\u3063\u3066\u30e6\u30fc\u30b6\u3068\u3084\u308a\u3068\u308a\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\u3053\u3053\u306fMicrosoft LUIS\u306a\u3069\u306e\u65e2\u5b58\u30b5\u30fc\u30d3\u30b9\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u73fe\u5b9f\u7684\u3067\u3057\u3087\u3046\u3002\nLUIS\u4ee5\u5916\u306b\u3069\u3046\u3044\u3063\u305f\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b\u304b\u3001\u4e0b\u8a18\u306b\u3088\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n[BOT\u3067\u4f7f\u3048\u308b\u4f1a\u8a71API\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fb\u30b5\u30fc\u30d3\u30b9\u307e\u3068\u3081](http://qiita.com/kenzo0202/items/582e3a5e06b64ab24964)\n\n\u6b21\u306b\u300c\u30e6\u30fc\u30b6\u306b\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u300d\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u3002\n\u3053\u308c\u306f\u3055\u3089\u306b\u4ee5\u4e0b\u306e2\u3064\u306b\u5206\u3051\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n### \u305d\u306e\uff11.\u4e00\u822c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9, API\u3092\u5229\u7528\u3059\u308b\n\n[(\u4e3b\u306b)\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u6210\u679c\u3092\u5229\u7528\u3057\u305fAPI\u96c6(\u81ea\u5206\u7528)](http://qiita.com/shngt/items/966799cc3f7c77a6fa17)\n\n\u4e0a\u8a18\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bAPI\u7b49\u3092\u4f7f\u3046\u3068\u3001\u6700\u65b0\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u6210\u679c\u304c\u3044\u3068\u3082\u7c21\u5358\u306b\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u6ce8\u610f\u3057\u305f\u3044\u306e\u306f\u3001API\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3060\u3051\u3060\u3068\u4f3c\u305f\u3088\u3046\u306a\u30dc\u30c3\u30c8\u3070\u304b\u308a\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\uff1f\n\n### \u305d\u306e\uff12.\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3046\n\n\u3082\u3046\u4e00\u3064\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\u3055\u3089\u306b\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u3001\u30ea\u30bd\u30fc\u30b9(GPU\u3068\u304b\u3067\u3059\u306d)\u3092\u4f7f\u3063\u3066\u5b66\u7fd2\u3055\u305b\u308b\u3068\u3044\u3046\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u3059\u3002\n\u4e00\u6c17\u306b\u30cf\u30fc\u30c9\u30eb\u306f\u4e0a\u304c\u308a\u307e\u3059\u304c\u3001\u30aa\u30ea\u30b8\u30ca\u30ea\u30c6\u30a3\u306e\u9ad8\u3044\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u907f\u3051\u3066\u901a\u308c\u306a\u3044\u90e8\u5206\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3055\u3042\u3001\u305d\u308c\u3067\u306f\u6a5f\u68b0\u5b66\u7fd2\u3092\u4f7f\u3063\u305f\u72ec\u81ea\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30dc\u30c3\u30c8\u3092\u5b9f\u969b\u306b\u958b\u767a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\n\n## \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u9078\u629e\n\n\u5b9f\u88c5\u306b\u5165\u308b\u524d\u306b\u3001\u4eca\u56de\u4f7f\u3046\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n[\u6df1\u5c64\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u30d2\u30c3\u30c1\u30cf\u30a4\u30af\u30ac\u30a4\u30c9](http://qiita.com/aokikenichi/items/c359a53e8307be3ebe02)\n\n\u4e00\u756a\u4eba\u6c17\u306fTensorflow\u3067\u3059\u304c\u3001\u4f4e\u30ec\u30d9\u30ebAPI(\u6027\u80fd\u304c\u4f4e\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u306a\u3044\u3067\u3059\u3088\uff1f)\u306e\u305f\u3081\u521d\u5fc3\u8005\u306b\u3068\u3063\u3066\u306f\u5c11\u3057\u6577\u5c45\u304c\u9ad8\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4eca\u56de\u306f[Keras](https://keras.io/ja/)\u3092\u9078\u629e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u3061\u3089\u306f\u9ad8\u30ec\u30d9\u30ebAPI\u306a\u306e\u3067\u8a18\u8ff0\u304c\u7c21\u6f54\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u3044\u3046\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3055\u3089\u306b\u3001\u30dc\u30c3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3082\u9078\u629e\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u4e0a\u8a18\u8a18\u4e8b\u3092\u898b\u3066\u5206\u304b\u308b\u901a\u308a\u3001\u4f7f\u7528\u8a00\u8a9e\u306fPython\u304c\u591a\u3044\u3067\u3059\u3002\u4e00\u65b9\u3001\u30dc\u30c3\u30c8\u306e\u5b9f\u88c5\u306b\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u306fNode.js\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3053\u306e\u30df\u30b9\u30de\u30c3\u30c1\u3092\u89e3\u6d88\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u306f\u6050\u3089\u304f\u300c\u305d\u308c\u305e\u308c\u3092\u5206\u3051\u3066\u5b9f\u88c5\u3057\u3001API\u7d4c\u7531\u3067\u5229\u7528\u3059\u308b\u300d\u304c\u4e00\u822c\u7684\u306a\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u4eca\u56de\u306f\u5b9f\u88c5\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3001\u30dc\u30c3\u30c8\u3082Python\u3067\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4f7f\u7528\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f[python-rtmbot](https://github.com/slackhq/python-rtmbot)\u3067\u3059\u3002\n\n## \u4f55\u3092\u3059\u3079\u304d\u304b\uff1f\n\n\u6a5f\u68b0\u5b66\u7fd2\u3092\u4f7f\u3063\u305f\u72ec\u81ea\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30dc\u30c3\u30c8\u3092\u958b\u767a\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u3001\u975e\u5e38\u306b\u5927\u307e\u304b\u306b\u8a00\u3063\u3066\u4ee5\u4e0b\u306e\uff13\u3064\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n1. \u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\n2. \u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3001\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3055\u305b\u308b\n3. \u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3059\u308b\n\n\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u306e\u306f\u307b\u3068\u3093\u3069\u4e0a\u8a181, 2\u306e\u307f\u3067\u3059\u3002\n\u203b\u53c2\u8003\uff1a[TensorFlow\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb - TensorFlow\u30e1\u30ab\u30cb\u30af\u30b9101\uff08\u7ffb\u8a33\uff09](http://qiita.com/KojiOhki/items/0640d01029371d6ae092)\n\n\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u3001\u5b66\u7fd2\u306f\u57fa\u672c\u7684\u306b1\u56de\u884c\u3048\u3070\u5341\u5206\u3067\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u305d\u308c\u3067\u5341\u5206\u306b\u7cbe\u5ea6\u304c\u9ad8\u3044\u4e88\u6e2c\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u524d\u63d0\u3067\u3059\u3002\n\u305d\u306e\u5f8c\u3001\u30e2\u30c7\u30eb\u69cb\u9020\u3001\u5b66\u7fd2\u7d50\u679c(\u30d1\u30e9\u30e1\u30fc\u30bf)\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3001\u5b9f\u884c\u6642(=3)\u306b\u8aad\u307f\u8fbc\u3080\u3068\u3044\u3046\u306e\u304c\u5927\u307e\u304b\u306a\u6d41\u308c\u3068\u306a\u308a\u307e\u3059\u3002\n\n### \u30e2\u30c7\u30eb\u69cb\u7bc9, \u5b66\u7fd2\n\n\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u3068\u5b66\u7fd2\u306b\u3064\u3044\u3066\u306f\u524d\u8ff0\u306e\u901a\u308a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3001\u30b5\u30f3\u30d7\u30eb\u304c\u8c4a\u5bcc\u3067\u3059\u306e\u3067\u3001\u4eca\u56de\u306f\u65e2\u5b58\u306e\u3082\u306e\u3092\u6d41\u7528\u3057\u307e\u3059\u3002\n\n[Keras\u306ecallback\u3092\u8a66\u3059\uff08model\u306esave,restore/TensorBoard\u66f8\u304d\u51fa\u3057/early stopping\uff09](http://qiita.com/yukiB/items/f45f0f71bc9739830002)\n\u3053\u308c\u3092\u5229\u7528\u3057\u3001\u300c\u8a71\u3057\u304b\u3051\u3089\u308c\u308b\u3068sin\u306e\u5024\u3092\u8fd4\u3059\u300d\u30dc\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5b9f\u7528\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306f\u5341\u5206\u3067\u3057\u3087\u3046\u3002\n\n\u307e\u305f\u3001\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u4e00\u5f0f\u3092[Github(fullkawa/ml-bot-sample)](https://github.com/fullkawa/ml-bot-sample)\u306b\u4e0a\u3052\u307e\u3057\u305f\u3002\n\u4ee5\u5f8c\u306f\u3053\u3061\u3089\u304b\u3089\u5fc5\u8981\u306a\u90e8\u5206\u306e\u307f\u629c\u7c8b\u3057\u3066\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305a\u3001[\"train.py\"](https://github.com/fullkawa/ml-bot-sample/blob/master/train.py)\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u53c2\u8003\u8a18\u4e8b\u306e\u30bd\u30fc\u30b9\u3092\u307b\u307c\u307e\u3068\u3081\u305f\u3060\u3051\u306e\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u300173\u884c\u76ee\u306e\n\n```python:train.py\ncp_cb = ModelCheckpoint(filepath = fpath, monitor='val_loss', verbose=1, save_best_only=True, mode='auto')\n```\n\n\u306878\u301c80\u884c\u76ee\u306e\n\n```python:train.py\njson_string = model.to_json()\n#open(os.path.join(f_model,'./tensorlog/rnn_model.json'), 'w').write(json_string)\nopen(os.path.join('./tensorlog/rnn_model.json'), 'w').write(json_string)\n```\n\n\u3067\u3059\u3002\n\u524d\u8005\u3067\u5b66\u7fd2\u7d50\u679c(\u30d1\u30e9\u30e1\u30fc\u30bf)\u3001\u5f8c\u8005\u3067\u30e2\u30c7\u30eb\u69cb\u9020\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ed6\u306e\u90e8\u5206\u3067\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306f\u53c2\u7167\u5143\u8a18\u4e8b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u30dc\u30c3\u30c8\u3092\u52d5\u304b\u3059\u524d\u306b`python train.py`\u3092\u4e00\u5ea6\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n112-233:ml-bot-sample y.furukawa$ python train.py\nUsing TensorFlow backend.\n____________________________________________________________________________________________________\nLayer (type) Output ShapeParam # Connected to\n====================================================================================================\nlstm_1 (LSTM)(None, 300) 362400lstm_input_1[0][0]\n____________________________________________________________________________________________________\n\ndense_1 (Dense)(None, 1) 301 lstm_1[0][0]\n____________________________________________________________________________________________________\nactivation_1 (Activation)(None, 1) 0 dense_1[0][0]\n====================================================================================================\nTotal params: 362701\n____________________________________________________________________________________________________\nTrain on 3325 samples, validate on 176 samples\nEpoch 1/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.2627 - acc: 0.0000e+00 Epoch 00000: val_loss improved from inf to 0.19250, saving model to ./tensorlog/weights.00-0.24-0.19.hdf5\n3325/3325 [==============================] - 49s - loss: 0.2408 - acc: 3.0075e-04 - val_loss: 0.1925 - val_acc: 0.0000e+00\nEpoch 2/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.0456 - acc: 3.3333e-04 Epoch 00001: val_loss improved from 0.19250 to 0.00085, saving model to ./tensorlog/weights.01-0.04-0.00.hdf5\n3325/3325 [==============================] - 48s - loss: 0.0412 - acc: 3.0075e-04 - val_loss: 8.4748e-04 - val_acc: 0.0000e+00\nEpoch 3/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.0015 - acc: 3.3333e-04 Epoch 00002: val_loss did not improve\n3325/3325 [==============================] - 47s - loss: 0.0024 - acc: 3.0075e-04 - val_loss: 0.0228 - val_acc: 0.0000e+00\nEpoch 4/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.0189 - acc: 3.3333e-04 Epoch 00003: val_loss did not improve\n3325/3325 [==============================] - 46s - loss: 0.0177 - acc: 3.0075e-04 - val_loss: 0.0055 - val_acc: 0.0000e+00\nEpoch 5/10\n3000/3325 [==========================>...] - ETA: 4s - loss: 0.0089 - acc: 3.3333e-04 Epoch 00004: val_loss did not improve\n3325/3325 [==============================] - 47s - loss: 0.0095 - acc: 3.0075e-04 - val_loss: 0.0163 - val_acc: 0.0000e+00\nEpoch 00004: early stopping\n```\n\n\u4eca\u56de\u306e\u5834\u5408\u3001Epock 2/10\u3067\u51fa\u529b\u3055\u308c\u305f\"weights.01-0.04-0.00.hdf5\"\u304c\u6700\u3082\u7cbe\u5ea6\u304c\u9ad8\u304f(val_loss: 8.4748e-04 - val_acc: 0.0000e+00)\u3001\u4ee5\u964d\u306f\u3080\u3057\u308d\u60aa\u5316\u3057\u3066\u3044\u307e\u3059\u3002\n\n### \u30dc\u30c3\u30c8\u306e\u5b9f\u88c5\n\n\u6b21\u306b\u3001\u30dc\u30c3\u30c8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\n[\u3053\u308c(plugins/sin.py)](https://github.com/fullkawa/ml-bot-sample/blob/master/plugins/sin.py)\u304c\u4eca\u56de\u306e\u30e1\u30a4\u30f3\u30c7\u30a3\u30c3\u30b7\u30e5\u3067\u3059\u3002\n\n```python:plugins/sin.py\nmodel_json = open('tensorlog/rnn_model.json', 'r').read()\nmodel = model_from_json(model_json)\n```\n\n\u30e2\u30c7\u30eb\u69cb\u9020\u3092\u8aad\u307f\u8fbc\u307f\u3001\n\n```python:plugins/sin.py\nfiles = glob.glob('tensorlog/weights.*.hdf5')\nmodel.load_weights(files[-1])\n```\n\n\u5b66\u7fd2\u7d50\u679c(\u30d1\u30e9\u30e1\u30fc\u30bf)\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u6570\u5b57\u304c\u4e00\u756a\u5927\u304d\u3044\u30d5\u30a1\u30a4\u30eb\uff1d\u6700\u3082\u7cbe\u5ea6\u304c\u9ad8\u3044\u5b66\u7fd2\u6e08\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3060\u3051\u3067\u3001\n\n```python:plugins/sin.py\npredicted = self.model.predict(X, batch_size=1)\n```\n\n\u3068\u3044\u3046\u5177\u5408\u306bsin\u5024\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u306e\u524d\u306e\n\n```python:plugins/sin.py\nX = np.zeros((1,100,1))\nfor i in range(0, 100):\n  X[0, i, 0] = i # \u672c\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u56fa\u5b9a\u3068\u3059\u308b\n```\n\n\u306fsin\u5024\u3092\u7b97\u51fa\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u7279\u306b\u91cd\u8981\u306a\u7b87\u6240\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092\u63c3\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u306f\u5730\u5473\u306b\u9762\u5012\u3067\u3059\u3002\n\n### \u5b9f\u884c\u7d50\u679c\n\n```\n112-233:ml-bot-sample y.furukawa$ rtmbot\nUsing TensorFlow backend.\nModel loaded.\nWeights loaded from tensorlog/weights.01-0.04-0.00.hdf5\nREADY!\n```\n\n\u4eca\u56de\u3001\u30dc\u30c3\u30c8\u306e\u540d\u524d\u3092\"stag.feec\"\u3068\u3057\u307e\u3057\u305f\u3002\n\u8a71\u3057\u304b\u3051\u3066\u307f\u307e\u3059\u3002\n\n<img width=\"506\" alt=\"Slack\u30ad\u30e3\u30d7\u30c1\u30e3\" src=\"https://qiita-image-store.s3.amazonaws.com/0/11338/7f696061-0eb4-b3e6-4d75-e2dacc70b102.png\">\n\n\u7121\u4e8b\u3001sin\u306e\u5024\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff01\n", "tags": ["bot", "\u6a5f\u68b0\u5b66\u7fd2", "Keras", "python-rtmbot", "Python"]}