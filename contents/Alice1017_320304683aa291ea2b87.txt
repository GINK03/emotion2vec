{"tags": ["Git", "Parse", "Python"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u76ee\u6b21\n\n\u306f\u3058\u3081\u306b\nsubprocess\u30e2\u30b8\u30e5\u30fc\u30eb\nCommit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3059\u308b\n\n\n\u306f\u3058\u3081\u306b\n\u307f\u306a\u3055\u3093\u3001Python\u3067 git \u3092\u4f7f\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u3063\u305f\u308a\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u3068\u304d\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\n\u50d5\u306f\u3042\u308a\u307e\u3059\u3002\u73fe\u5728\u9032\u884c\u4e2d\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u4eca\u56de\u306f Python\u3067Git\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3059\u308b \u3068\u3044\u3046\u30c6\u30fc\u30de\u3067\u66f8\u304d\u307e\u3059\u3002\n\nsubprocess\u30e2\u30b8\u30e5\u30fc\u30eb\ngit\u3092\u4f7f\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001\u307e\u305a git\u30b3\u30de\u30f3\u30c9\u306e\u51fa\u529b\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b \u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001 subprocess \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066git\u30b3\u30de\u30f3\u30c9\u306e\u51fa\u529b\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b git\u95a2\u6570 \u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\ngit.py\nfrom subprocess import Popen, PIPE\n\nclass GitError(BaseException):\n    \"\"\"git\u95a2\u6570\u306e\u53d6\u5f97\u7d50\u679c\u3067\u30a8\u30e9\u30fc\u304c\u3067\u305f\u5834\u5408\u306b\u767a\u751f\u3059\u308b\"\"\"\n    pass\n\ndef git(cmd, *args):\n    \"\"\"git\u306e\u5b9f\u884c\u7d50\u679c\u3092\u53d6\u5f97\u3057\u3066\u8fd4\u3059\"\"\"\n    proc = Popen(\n        (\"git\", cmd) + args, stdin=PIPE, stdout=PIPE, stderr=PIPE)\n    out, err = proc.communicate()\n    if len(err) == 0:\n        return out[:-1]\n    else:\n        raise GitError(err)\n\n\n\n\u7c21\u5358\u306b\u95a2\u6570\u306e\u4e2d\u8eab\u3092\u8aac\u660e\u3059\u308b\u3068\uff08\u62ec\u5f27\u5185\u306f\u884c\u756a\u53f7)\u3001subprocess\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089 Popen \u30af\u30e9\u30b9\u3068 PIPE \u5909\u6570\u3092Import\u3057(1)\u3001Popen\u95a2\u6570\u3067 git \u306e\u30d7\u30ed\u30bb\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002(8~9)\nPopen\u30af\u30e9\u30b9\u306e communicate \u30e1\u30bd\u30c3\u30c9\u3067\u5b9a\u7fa9\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u3092\u5b9f\u884c\u3055\u305b\u307e\u3059\u3002\u5b9f\u884c\u3055\u305b\u308b\u3068\u3001 \u6a19\u6e96\u51fa\u529b\u306e\u51fa\u529b\u7d50\u679c\u3068\u3001\u6a19\u6e96\u30a8\u30e9\u30fc\u306e\u51fa\u529b\u7d50\u679c\u304c\u30bf\u30d7\u30eb\u3067\u8fd4\u3055\u308c\u307e\u3059 \u306e\u3067\u3001 out\u5909\u6570\u3068err\u5909\u6570\u3067\u6a19\u6e96\u51fa\u529b\u306e\u51fa\u529b\u7d50\u679c\u3068\u3001\u6a19\u6e96\u30a8\u30e9\u30fc\u306e\u51fa\u529b\u7d50\u679c\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002(10)\u305d\u306e\u5f8c\u3001\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3001\u3042\u308c\u3070 GitError \n\u30af\u30e9\u30b9\u3092raise\u3057\u307e\u3059\u3002\u306a\u3051\u308c\u3070\u3001\u305d\u306e\u307e\u307e\u6a19\u6e96\u51fa\u529b\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3056\u3063\u3068\u3053\u3093\u306a\u304b\u3093\u3058\u3067\u3059\u3002\u6b21\u306f\u3001\u3053\u306egit\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u53d6\u5f97\u3057\u307e\u3057\u3087\u3046\u3002\n\nCommit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u305d\u306e\u524d\u306b\u3001\u3084\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30fc\u30b9\u3057\u305f \u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u4fdd\u7ba1\u3059\u308bCommit\u30af\u30e9\u30b9 \u3092\u4f5c\u308a\u307e\u3059\u3002\n\ncommit.py\nclass Commit(object):\n    \"\"\"\u30b3\u30df\u30c3\u30c8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3001\u88fd\u4f5c\u8005\u3001\u65e5\u4ed8\u6642\u9593\u3001\u30b3\u30df\u30c3\u30c8\u30b3\u30e1\u30f3\u30c8\u3001\u30de\u30fc\u30b8\u3057\u305f\u306e\u3067\u3042\u308c\u3070\u30de\u30fc\u30b8\u3057\u305f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u30af\u30e9\u30b9\"\"\"\n    def __init__(self, commithash, author, date, comment, merge_data=None):\n        self.commithash = commithash\n        self.author = self._get_user_obj(author)\n        self.date = date\n        self.comment = comment\n        self.merge_data = merge_data\n\n    def _get_user_obj(self, author_string):\n        if \" \" in author_string:\n            lines = author_string.split(\" \")\n            name = lines[0]\n            email = lines[1][1:-1]\n            return User(name, email)\n        else:\n            return User(author_string)\n\n\n    def __repr__(self):\n        return \"CommitObject(%s)\" % self.commithash\n\n\n\u30d3\u30eb\u30c8\u30a4\u30f3\u306e Object \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\nCommit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4fdd\u6301\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306f\u3001\n\n\u30b3\u30df\u30c3\u30c8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\n\u30b3\u30df\u30c3\u30bf\u30fc\n\u30b3\u30df\u30c3\u30c8\u3057\u305f\u65e5\u4ed8\u30fb\u6642\u9593\n\u30b3\u30df\u30c3\u30c8\u30b3\u30e1\u30f3\u30c8\n\u30de\u30fc\u30b8\u30c7\u30fc\u30bf(\u306a\u3051\u308c\u3070None)\n\n\u3053\u308c\u3089\u3067\u3059\u3002\u306a\u306e\u3067\u3001 __init__ \u30e1\u30bd\u30c3\u30c9\u3067\u306f\u305d\u308c\u305e\u308c\u3092\u5f15\u6570\u306b\u3068\u308a\u3001Self\u30af\u30e9\u30b9\u306b\u5024\u3092\u3064\u3051\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n_get_user_obj \u30e1\u30bd\u30c3\u30c9\u306f\u3001\u3082\u3068\u3082\u3068Commit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u633f\u5165\u3055\u308c\u308b\u30b3\u30df\u30c3\u30bf\u30fc\u60c5\u5831\u306f\u3001 Author <email@sample.com> \u3068\u3044\u3046\u30c7\u30fc\u30bf\u3067\u3059\u3002\u306a\u306e\u3067\u3001\u3053\u306e\u6587\u5b57\u5217\u3092 Author \u3068 Email \u3068\u3044\u3046\u60c5\u5831\u306b\u5206\u3051\u308b\u306e\u304c\u5f79\u5272\u3067\u3059\u3002\u3053\u306e2\u3064\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3055\u305b\u308b\u30af\u30e9\u30b9\u304c\u3001 User \u30af\u30e9\u30b9\u3067\u3059\u3002\n\nuser.py\n\nclass User(object):\n    \"\"\"\u30b3\u30df\u30c3\u30c8\u3057\u305f\u8005\u306e\u540d\u524d\u3068\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u4fdd\u6301\"\"\"\n    def __init__(self, name, email=None):\n        self.name = name\n        self.email = email\n\n    def __repr__(self):\n        return \"UserObject(name=&#39;%s&#39;, email=&#39;%s&#39;)\" % (\n                                    self.name, self.email)\n    def __str__(self):\n        return self.__repr__()\n\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f\u7c21\u5358\u3067\u3059\u3002\u305f\u3060\u5358\u306bAuthor\u3092Email\u3092\u4fdd\u6301\u3055\u305b\u308b\u305f\u3081\u3060\u3051\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3059\u308b\n\u5148\u306b\u30b3\u30fc\u30c9\u304b\u3089\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\nparser.py\n\nfrom dateutil import parser as dateparser \n\ndef get_commits():\n    \"\"\"\u30b7\u30a7\u30eb\u304b\u3089\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u53d6\u5f97\u3057\u3066Commit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3057\u3066\u30ea\u30b9\u30c8\u3067\u8fd4\u3059\"\"\"\n    commits = []\n    commits_string = git(\"log\")\n\n    # analyzing\n    commitlines = commits_string.split(\"\\n\\n\")\n    commits_string_list = []\n    while 0 < len(commitlines):\n        commits_string_list.append(\n                    \"\\n\".join(commitlines[0:2]))\n        commitlines = commitlines[2:]\n\n    # parse\n    for commitline in commits_string_list:\n        commitdata = parse_commit(commitline)\n        commits.append(\n            Commit(**commitdata))\n\n    return commits\n\n\ndef parse_commit():\n    \"\"\"\u30b7\u30a7\u30eb\u304b\u3089\u53d6\u5f97\u3057\u305f\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u30b3\u30df\u30c3\u30c8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3001\u30b3\u30df\u30c3\u30c8\u3057\u305f\u8005\u3001\u65e5\u4ed8\u30fb\u6642\u9593\u3001\u30b3\u30df\u30c3\u30c8\u30b3\u30e1\u30f3\u30c8\u53ca\u3073\u30de\u30fc\u30b8\u3057\u305f\u5834\u5408\u306fsource\u3068destination\u3092\u8fd4\u3059\"\"\"\n\n    commitlines = commitstring.split(\"\\n\")\n\n    # 1 row\n    commithash = commitlines[0].replace(\"commit \",\"\")\n\n    # 2 row\n    merge_source = merge_dest = None\n    author = None\n    if \"Merge\" in commitlines[1]:\n        # parse merge data\n        merge_source = commitlines[1].split(\" \")[1]\n        merge_dest = commitlines[1].split(\" \")[2]\n    else:\n        # parse author\n        author = commitlines[1].replace(\"Author: \",\"\")\n\n    # 3 row\n    if \"Author\" in commitlines[2]:\n        # parse author\n        author = commitlines[2].replace(\"Author: \",\"\")\n    else:\n        # parse date\n        date = dateparser.parse(commitlines[2].replace(\"Date:   \",\"\"))\n\n    # 4 row\n    if \"Date\" in commitlines[3]:\n        # parse date\n        date = dateparser.parse(commitlines[3].replace(\"Date:   \",\"\"))\n    else:\n        # parse comment\n        comment = \" \".join([i.strip() for i in commitlines[3:]])\n\n    # 5 row\n    if \"Merge\" in commitlines[1]:\n        # comment -> under 4 row\n        comment = \" \".join([i.strip() for i in commitlines[4:]])\n\n    return {\"commithash\": commithash,\n            \"merge_data\": (merge_source, merge_dest) if merge_source != None else None,\n            \"author\"    : author,\n            \"date\"      : date,\n            \"comment\"   : comment}\n\n\n\ncommit c92b57f9418eddf75cd96e268bac616aaecd95c4\nMerge: 46a71a7 137a6ca\nAuthor: alice <takemehighermore@gmail.com>\nDate:   Sat Nov 17 01:00:14 2012 +0900\n\n    Merge branch &#39;rewrite&#39;\n\n    Conflicts:\n        commithash.py\n\n\u666e\u901a\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u306f\u4e0a\u8a18\u306e\u3088\u3046\u306a\u5f62\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002(Merge\u304c\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\n\u4e0a\u8a18\u306e\u30d1\u30fc\u30b5\u30fc\u306f\u3053\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u4e00\u884c\u305a\u3064\u8a55\u4fa1\u3057\u3066\u3044\u304d\u3001\u30b3\u30df\u30c3\u30c8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3068\u30de\u30fc\u30b8\u30c7\u30fc\u30bf\u3001\u30b3\u30df\u30c3\u30bf\u30fc\u306b\u65e5\u4ed8\u30fb\u6642\u9593\u3001\u30b3\u30df\u30c3\u30c8\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u30021\u884c\u305a\u3064\u8aac\u660e\u3059\u308b\u306e\u306f\u3059\u3054\u304f\u9762\u5012\u306a\u306e\u3067\u7701\u7565\u3055\u305b\u3066\u304f\u3060\u3055\u3044\u2026\n\u307e\u3041\u3067\u3082\u30b3\u30fc\u30c9\u8aad\u3081\u3070\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3093\u306a\u306b\u9ad8\u5ea6\u306a\u3053\u3068\u306f\u3057\u3066\u307e\u305b\u3093\u306e\u3067\u3002\n\u3053\u306e\u30b3\u30df\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u3069\u3046\u6271\u3046\u304b\u306f\u541b\u6b21\u7b2c\uff01\uff01\n#\u76ee\u6b21\n\n1. \u306f\u3058\u3081\u306b\n2. subprocess\u30e2\u30b8\u30e5\u30fc\u30eb\n3. Commit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n4. \u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3059\u308b\n\n## \u306f\u3058\u3081\u306b\n\n\u307f\u306a\u3055\u3093\u3001Python\u3067 `git` \u3092\u4f7f\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u3063\u305f\u308a\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u3068\u304d\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\n\u50d5\u306f\u3042\u308a\u307e\u3059\u3002\u73fe\u5728\u9032\u884c\u4e2d\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u4eca\u56de\u306f **Python\u3067Git\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3059\u308b** \u3068\u3044\u3046\u30c6\u30fc\u30de\u3067\u66f8\u304d\u307e\u3059\u3002\n\n## subprocess\u30e2\u30b8\u30e5\u30fc\u30eb\n\ngit\u3092\u4f7f\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001\u307e\u305a **git\u30b3\u30de\u30f3\u30c9\u306e\u51fa\u529b\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b** \u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001 `subprocess` \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066git\u30b3\u30de\u30f3\u30c9\u306e\u51fa\u529b\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b ``git\u95a2\u6570`` \u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\n```py:git.py\nfrom subprocess import Popen, PIPE\n\nclass GitError(BaseException):\n    \"\"\"git\u95a2\u6570\u306e\u53d6\u5f97\u7d50\u679c\u3067\u30a8\u30e9\u30fc\u304c\u3067\u305f\u5834\u5408\u306b\u767a\u751f\u3059\u308b\"\"\"\n    pass\n\ndef git(cmd, *args):\n    \"\"\"git\u306e\u5b9f\u884c\u7d50\u679c\u3092\u53d6\u5f97\u3057\u3066\u8fd4\u3059\"\"\"\n    proc = Popen(\n        (\"git\", cmd) + args, stdin=PIPE, stdout=PIPE, stderr=PIPE)\n    out, err = proc.communicate()\n    if len(err) == 0:\n        return out[:-1]\n    else:\n        raise GitError(err)\n\n```\n\n\u7c21\u5358\u306b\u95a2\u6570\u306e\u4e2d\u8eab\u3092\u8aac\u660e\u3059\u308b\u3068\uff08\u62ec\u5f27\u5185\u306f\u884c\u756a\u53f7)\u3001subprocess\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089 `Popen` \u30af\u30e9\u30b9\u3068 `PIPE` \u5909\u6570\u3092Import\u3057(1)\u3001Popen\u95a2\u6570\u3067 `git` \u306e\u30d7\u30ed\u30bb\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002(8~9)\nPopen\u30af\u30e9\u30b9\u306e **communicate** \u30e1\u30bd\u30c3\u30c9\u3067\u5b9a\u7fa9\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u3092\u5b9f\u884c\u3055\u305b\u307e\u3059\u3002\u5b9f\u884c\u3055\u305b\u308b\u3068\u3001 **\u6a19\u6e96\u51fa\u529b\u306e\u51fa\u529b\u7d50\u679c\u3068\u3001\u6a19\u6e96\u30a8\u30e9\u30fc\u306e\u51fa\u529b\u7d50\u679c\u304c\u30bf\u30d7\u30eb\u3067\u8fd4\u3055\u308c\u307e\u3059** \u306e\u3067\u3001 out\u5909\u6570\u3068err\u5909\u6570\u3067\u6a19\u6e96\u51fa\u529b\u306e\u51fa\u529b\u7d50\u679c\u3068\u3001\u6a19\u6e96\u30a8\u30e9\u30fc\u306e\u51fa\u529b\u7d50\u679c\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002(10)\u305d\u306e\u5f8c\u3001\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3001\u3042\u308c\u3070 `GitError` \n\u30af\u30e9\u30b9\u3092raise\u3057\u307e\u3059\u3002\u306a\u3051\u308c\u3070\u3001\u305d\u306e\u307e\u307e\u6a19\u6e96\u51fa\u529b\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u3056\u3063\u3068\u3053\u3093\u306a\u304b\u3093\u3058\u3067\u3059\u3002\u6b21\u306f\u3001\u3053\u306egit\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u53d6\u5f97\u3057\u307e\u3057\u3087\u3046\u3002\n\n## Commit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n\u305d\u306e\u524d\u306b\u3001\u3084\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30fc\u30b9\u3057\u305f **\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u4fdd\u7ba1\u3059\u308bCommit\u30af\u30e9\u30b9** \u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```py:commit.py\nclass Commit(object):\n    \"\"\"\u30b3\u30df\u30c3\u30c8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3001\u88fd\u4f5c\u8005\u3001\u65e5\u4ed8\u6642\u9593\u3001\u30b3\u30df\u30c3\u30c8\u30b3\u30e1\u30f3\u30c8\u3001\u30de\u30fc\u30b8\u3057\u305f\u306e\u3067\u3042\u308c\u3070\u30de\u30fc\u30b8\u3057\u305f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u30af\u30e9\u30b9\"\"\"\n    def __init__(self, commithash, author, date, comment, merge_data=None):\n        self.commithash = commithash\n        self.author = self._get_user_obj(author)\n        self.date = date\n        self.comment = comment\n        self.merge_data = merge_data\n\n    def _get_user_obj(self, author_string):\n        if \" \" in author_string:\n            lines = author_string.split(\" \")\n            name = lines[0]\n            email = lines[1][1:-1]\n            return User(name, email)\n        else:\n            return User(author_string)\n\n\n    def __repr__(self):\n        return \"CommitObject(%s)\" % self.commithash\n```\n\n\u30d3\u30eb\u30c8\u30a4\u30f3\u306e `Object` \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\nCommit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4fdd\u6301\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306f\u3001\n\n1. \u30b3\u30df\u30c3\u30c8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\n2. \u30b3\u30df\u30c3\u30bf\u30fc\n3. \u30b3\u30df\u30c3\u30c8\u3057\u305f\u65e5\u4ed8\u30fb\u6642\u9593\n4. \u30b3\u30df\u30c3\u30c8\u30b3\u30e1\u30f3\u30c8\n5. \u30de\u30fc\u30b8\u30c7\u30fc\u30bf(\u306a\u3051\u308c\u3070None)\n\n\u3053\u308c\u3089\u3067\u3059\u3002\u306a\u306e\u3067\u3001 `__init__` \u30e1\u30bd\u30c3\u30c9\u3067\u306f\u305d\u308c\u305e\u308c\u3092\u5f15\u6570\u306b\u3068\u308a\u3001Self\u30af\u30e9\u30b9\u306b\u5024\u3092\u3064\u3051\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n`_get_user_obj` \u30e1\u30bd\u30c3\u30c9\u306f\u3001\u3082\u3068\u3082\u3068Commit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u633f\u5165\u3055\u308c\u308b\u30b3\u30df\u30c3\u30bf\u30fc\u60c5\u5831\u306f\u3001 ``Author <email@sample.com>`` \u3068\u3044\u3046\u30c7\u30fc\u30bf\u3067\u3059\u3002\u306a\u306e\u3067\u3001\u3053\u306e\u6587\u5b57\u5217\u3092 `Author` \u3068 `Email` \u3068\u3044\u3046\u60c5\u5831\u306b\u5206\u3051\u308b\u306e\u304c\u5f79\u5272\u3067\u3059\u3002\u3053\u306e2\u3064\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3055\u305b\u308b\u30af\u30e9\u30b9\u304c\u3001 **User** \u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```py:user.py\n\nclass User(object):\n    \"\"\"\u30b3\u30df\u30c3\u30c8\u3057\u305f\u8005\u306e\u540d\u524d\u3068\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u4fdd\u6301\"\"\"\n    def __init__(self, name, email=None):\n        self.name = name\n        self.email = email\n\n    def __repr__(self):\n        return \"UserObject(name=&#39;%s&#39;, email=&#39;%s&#39;)\" % (\n                                    self.name, self.email)\n    def __str__(self):\n        return self.__repr__()\n```\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f\u7c21\u5358\u3067\u3059\u3002\u305f\u3060\u5358\u306bAuthor\u3092Email\u3092\u4fdd\u6301\u3055\u305b\u308b\u305f\u3081\u3060\u3051\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n## \u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3059\u308b\n\n\u5148\u306b\u30b3\u30fc\u30c9\u304b\u3089\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n```py:parser.py\n\nfrom dateutil import parser as dateparser \n\ndef get_commits():\n    \"\"\"\u30b7\u30a7\u30eb\u304b\u3089\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u53d6\u5f97\u3057\u3066Commit\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3057\u3066\u30ea\u30b9\u30c8\u3067\u8fd4\u3059\"\"\"\n    commits = []\n    commits_string = git(\"log\")\n\n    # analyzing\n    commitlines = commits_string.split(\"\\n\\n\")\n    commits_string_list = []\n    while 0 < len(commitlines):\n        commits_string_list.append(\n                    \"\\n\".join(commitlines[0:2]))\n        commitlines = commitlines[2:]\n\n    # parse\n    for commitline in commits_string_list:\n        commitdata = parse_commit(commitline)\n        commits.append(\n            Commit(**commitdata))\n\n    return commits\n\n\ndef parse_commit():\n    \"\"\"\u30b7\u30a7\u30eb\u304b\u3089\u53d6\u5f97\u3057\u305f\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u30b3\u30df\u30c3\u30c8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3001\u30b3\u30df\u30c3\u30c8\u3057\u305f\u8005\u3001\u65e5\u4ed8\u30fb\u6642\u9593\u3001\u30b3\u30df\u30c3\u30c8\u30b3\u30e1\u30f3\u30c8\u53ca\u3073\u30de\u30fc\u30b8\u3057\u305f\u5834\u5408\u306fsource\u3068destination\u3092\u8fd4\u3059\"\"\"\n\n    commitlines = commitstring.split(\"\\n\")\n\n    # 1 row\n    commithash = commitlines[0].replace(\"commit \",\"\")\n\n    # 2 row\n    merge_source = merge_dest = None\n    author = None\n    if \"Merge\" in commitlines[1]:\n        # parse merge data\n        merge_source = commitlines[1].split(\" \")[1]\n        merge_dest = commitlines[1].split(\" \")[2]\n    else:\n        # parse author\n        author = commitlines[1].replace(\"Author: \",\"\")\n\n    # 3 row\n    if \"Author\" in commitlines[2]:\n        # parse author\n        author = commitlines[2].replace(\"Author: \",\"\")\n    else:\n        # parse date\n        date = dateparser.parse(commitlines[2].replace(\"Date:   \",\"\"))\n\n    # 4 row\n    if \"Date\" in commitlines[3]:\n        # parse date\n        date = dateparser.parse(commitlines[3].replace(\"Date:   \",\"\"))\n    else:\n        # parse comment\n        comment = \" \".join([i.strip() for i in commitlines[3:]])\n\n    # 5 row\n    if \"Merge\" in commitlines[1]:\n        # comment -> under 4 row\n        comment = \" \".join([i.strip() for i in commitlines[4:]])\n\n    return {\"commithash\": commithash,\n            \"merge_data\": (merge_source, merge_dest) if merge_source != None else None,\n            \"author\"    : author,\n            \"date\"      : date,\n            \"comment\"   : comment}\n\n```\n\n```\ncommit c92b57f9418eddf75cd96e268bac616aaecd95c4\nMerge: 46a71a7 137a6ca\nAuthor: alice <takemehighermore@gmail.com>\nDate:   Sat Nov 17 01:00:14 2012 +0900\n\n    Merge branch &#39;rewrite&#39;\n\n    Conflicts:\n        commithash.py\n```\n\n\u666e\u901a\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u306f\u4e0a\u8a18\u306e\u3088\u3046\u306a\u5f62\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002(Merge\u304c\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\n\u4e0a\u8a18\u306e\u30d1\u30fc\u30b5\u30fc\u306f\u3053\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u4e00\u884c\u305a\u3064\u8a55\u4fa1\u3057\u3066\u3044\u304d\u3001\u30b3\u30df\u30c3\u30c8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3068\u30de\u30fc\u30b8\u30c7\u30fc\u30bf\u3001\u30b3\u30df\u30c3\u30bf\u30fc\u306b\u65e5\u4ed8\u30fb\u6642\u9593\u3001\u30b3\u30df\u30c3\u30c8\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u30021\u884c\u305a\u3064\u8aac\u660e\u3059\u308b\u306e\u306f\u3059\u3054\u304f\u9762\u5012\u306a\u306e\u3067\u7701\u7565\u3055\u305b\u3066\u304f\u3060\u3055\u3044\u2026\n\u307e\u3041\u3067\u3082\u30b3\u30fc\u30c9\u8aad\u3081\u3070\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3093\u306a\u306b\u9ad8\u5ea6\u306a\u3053\u3068\u306f\u3057\u3066\u307e\u305b\u3093\u306e\u3067\u3002\n\n\u3053\u306e\u30b3\u30df\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u3069\u3046\u6271\u3046\u304b\u306f\u541b\u6b21\u7b2c\uff01\uff01"}