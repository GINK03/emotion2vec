{"context": "\n\n\u306f\u3058\u3081\u306b\nAPI Gateway\u3067\u3001HTTP\u30ea\u30af\u30a8\u30b9\u30c8Body\u306bGET\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u3088\u3046\u306a\u5f62\u5f0f\u306e\u6587\u5b57\u5217\uff08Key1=Value1&Key2=Value2...\uff09\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306b\u3001\u3053\u308c\u3092JSON\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306eTemplate\u304c\u5fc5\u8981\u3068\u306a\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001\u4e0b\u8a18\u306e\u8a18\u4e8b\u304b\u3089\u306e\u6d3e\u751f\u3068\u306a\u308a\u307e\u3059\u3002Twilio\u304b\u3089\u306ePOST\u30ea\u30af\u30a8\u30b9\u30c8\u3092JSON\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3067\u3057\u305f\u3002\n\u4ed5\u7d44\u307f\u304b\u3089\u7406\u89e3\u3059\u308bTwilio #3-1 - AWS API Gateway+Lambda\u5b9f\u88c5Walkthrough(\u524d\u7de8)\n\nMapping Template\u3068\u306f\nAPI Gateway\u3067\u3001\u30c7\u30fc\u30bf\u5f62\u5f0f\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3002Velocity Template Language(\u4ee5\u4e0b\u3001VTL)\u3068JSONPath\u3092\u5229\u7528\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nAmazon API Gateway API \u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\nhttps://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/models-mappings.html\nApache Velocity Engine - User Guide\nhttp://velocity.apache.org/engine/devel/user-guide.html\nApache Velocity Engine VTL Reference\nhttp://velocity.apache.org/engine/devel/vtl-reference.html\nJSONPath - XPath for JSON\nhttp://goessner.net/articles/JsonPath/\n\n\u3084\u308a\u305f\u3044\u3053\u3068\nPOST\u30e1\u30bd\u30c3\u30c9\u3067\u9001\u4fe1\u3055\u308c\u305fHTTP\u30ea\u30af\u30a8\u30b9\u30c8Body\u306b\u300c&\u300d\u3067\u533a\u5207\u3089\u308c\u305fKey=Value\u30da\u30a2\uff08\u6539\u884c\u306a\u3057\uff09\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u308c\u3092JSON\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\u3002Value\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044Key\u306f\u7121\u8996\u3057\u307e\u3059\u3002\n\nInput\nApiVersion=2010-04-01&ApplicationSid=AP75zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz&Called=&Caller=client%3ADeviceId_0001&From=client%3ADeviceId_0001&To=&callerPhoneNumber=%2B81-50-3123-4567&callOutgoingPhoneNumber=%2B81-90-5987-6543\n\n\n\nOutput\n{\n    \"From\": \"client:DeviceId_0001\",\n    \"Caller\": \"client:DeviceId_0001\",\n    \"ApiVersion\": \"2010-04-01\",\n    \"ApplicationSid\": \"AP75zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\",\n    \"callerPhoneNumber\": \"+81-50-3123-4567\",\n    \"callOutgoingPhoneNumber\": \"+81-90-5987-6543\"\n}\n\n\n\u300cCalled\u300d\u306fKey\u306e\u307f\u3067Value\u304c\u5b58\u5728\u3057\u306a\u3044\u305f\u3081\u3001\u5909\u63db\u5f8c\u306eJSON\u306b\u306f\u5b58\u5728\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\nTemplate\u306e\u5b9f\u88c5\n\nTwilio\u7279\u5316\u578b\n#set($raw_input = $input.path(\"$\"))\n\n{\n  #foreach( $kvpairs in $raw_input.split( '&' ) )\n    #set( $kvpair = $kvpairs.split( '=' ) )\n      #if($kvpair.length == 2)\n        \"$kvpair[0]\" : \"$kvpair[1]\"#if( $foreach.hasNext ),#end\n      #end\n  #end\n}\n\n\u30ea\u30af\u30a8\u30b9\u30c8Body\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u300c&\u300d\u3067\u5206\u5272\u3057\u305f\u306e\u3061\u3001\u305d\u308c\u3089\u3092\u66f4\u306b\u300c=\u300d\u3067\u5206\u5272\u3057\u3066Key\u3068Value\u306e\u5024\u3092\u53d6\u308a\u51fa\u3057\u3001JSON\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30da\u30a2\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001Key=Value\u3092\u300c=\u300d\u3067\u5206\u5272\u3057\u305f\u5f8c\u306b\u3001\u8981\u7d20\u6570\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u8981\u7d20\u6570\u304c2\u306e\u5834\u5408\u306e\u307f\u3001\u5909\u63db\u5f8c\u306eJSON\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u8981\u7d20\u6570\u306b\u5206\u5272\u3055\u308c\u305f\u5834\u5408\u306f\u4e0d\u6b63\u3068\u307f\u306a\u3057\u7121\u8996\u3057\u307e\u3059\u3002\n\n\u6c4e\u7528\u578b\nGET\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3082\u5bfe\u5fdc\u3057\u305f\u6c4e\u7528\u578b\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002AWS Developer Forum\u3067\u8b70\u8ad6\u3055\u308c\u3001\u307e\u3068\u3081\u3066\u3089\u308c\u3066\u3044\u305f\u5185\u5bb9\u306b\u82e5\u5e72\u624b\u3092\u52a0\u3048\u305f\u3082\u306e\u3067\u3059\u3002\n\u4e0b\u8a18\u306e\u8a18\u4e8b\u3067\u6700\u7d42\u7684\u306b\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u305f\u3082\u306e\u306f\u3001Key\u306e\u6307\u5b9a\u304c\u3042\u308b\u304cValue\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u30b1\u30fc\u30b9(\u300cKey2=&Key3=Value3\u300d\u306eKey2\u3088\u3046\u306a\u30b1\u30fc\u30b9)\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\nHOWTO: Mapping Template v3.0 to convert form POST data or GET query to JSON\nhttps://forums.aws.amazon.com/thread.jspa?messageID=673012&tstart=0#725034\n## convert HTML POST data or HTTP GET query string to JSON\n\n## get the raw post data from the AWS built-in variable and give it a nicer name\n#if ($context.httpMethod == \"POST\")\n #set($rawAPIData = $input.path(\"$\"))\n#elseif ($context.httpMethod == \"GET\")\n #set($rawAPIData = $input.params().querystring)\n #set($rawAPIData = $rawAPIData.toString())\n #set($rawAPIDataLength = $rawAPIData.length() - 1)\n #set($rawAPIData = $rawAPIData.substring(1, $rawAPIDataLength))\n #set($rawAPIData = $rawAPIData.replace(\", \", \"&\"))\n#else\n #set($rawAPIData = \"\")\n#end\n\n## first we get the number of \"&\" in the string, this tells us if there is more than one key value pair\n#set($countAmpersands = $rawAPIData.length() - $rawAPIData.replace(\"&\", \"\").length())\n\n## if there are no \"&\" at all then we have only one key value pair.\n## we append an ampersand to the string so that we can tokenise it the same way as multiple kv pairs.\n## the \"empty\" kv pair to the right of the ampersand will be ignored anyway.\n#if ($countAmpersands == 0)\n #set($rawPostData = $rawAPIData + \"&\")\n#end\n\n## now we tokenise using the ampersand(s)\n#set($tokenisedAmpersand = $rawAPIData.split(\"&\"))\n\n## we set up a variable to hold the valid key value pairs\n#set($tokenisedEquals = [])\n\n## now we set up a loop to find the valid key value pairs, which must contain only one \"=\"\n#foreach( $kvPair in $tokenisedAmpersand )\n #set($countEquals = $kvPair.length() - $kvPair.replace(\"=\", \"\").length())\n #if ($countEquals == 1)\n  #set($kvTokenised = $kvPair.split(\"=\"))\n  #if ( ($kvTokenised.size() == 2) && ($kvTokenised[0].length() > 0) )\n   ## we found a valid key value pair. add it to the list.\n   #set($devNull = $tokenisedEquals.add($kvPair))\n  #end\n #end\n#end\n\n## next we set up our loop inside the output structure \"{\" and \"}\"\n{\n#foreach( $kvPair in $tokenisedEquals )\n  ## finally we output the JSON for this pair and append a comma if this isn't the last pair\n  #set($kvTokenised = $kvPair.split(\"=\"))\n \"$util.urlDecode($kvTokenised[0])\" : #if($kvTokenised.size() > 1 && $kvTokenised[1].length() > 0)\"$util.urlDecode($kvTokenised[1])\"#{else}\"\"#end#if( $foreach.hasNext ),#end\n#end\n}\n\n# \u306f\u3058\u3081\u306b\nAPI Gateway\u3067\u3001HTTP\u30ea\u30af\u30a8\u30b9\u30c8Body\u306bGET\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u3088\u3046\u306a\u5f62\u5f0f\u306e\u6587\u5b57\u5217\uff08Key1=Value1&Key2=Value2...\uff09\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306b\u3001\u3053\u308c\u3092JSON\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306eTemplate\u304c\u5fc5\u8981\u3068\u306a\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u306a\u304a\u3001\u4e0b\u8a18\u306e\u8a18\u4e8b\u304b\u3089\u306e\u6d3e\u751f\u3068\u306a\u308a\u307e\u3059\u3002Twilio\u304b\u3089\u306ePOST\u30ea\u30af\u30a8\u30b9\u30c8\u3092JSON\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3067\u3057\u305f\u3002\n[\u4ed5\u7d44\u307f\u304b\u3089\u7406\u89e3\u3059\u308bTwilio #3-1 - AWS API Gateway+Lambda\u5b9f\u88c5Walkthrough(\u524d\u7de8)](http://qiita.com/tmiki/items/7f55a81c46dd07b2e4fa)\n\n# Mapping Template\u3068\u306f\nAPI Gateway\u3067\u3001\u30c7\u30fc\u30bf\u5f62\u5f0f\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3002Velocity Template Language(\u4ee5\u4e0b\u3001VTL)\u3068JSONPath\u3092\u5229\u7528\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nAmazon API Gateway API \u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\nhttps://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/models-mappings.html\n\nApache Velocity Engine - User Guide\nhttp://velocity.apache.org/engine/devel/user-guide.html\n\nApache Velocity Engine VTL Reference\nhttp://velocity.apache.org/engine/devel/vtl-reference.html\n\nJSONPath - XPath for JSON\nhttp://goessner.net/articles/JsonPath/\n\n\n# \u3084\u308a\u305f\u3044\u3053\u3068\nPOST\u30e1\u30bd\u30c3\u30c9\u3067\u9001\u4fe1\u3055\u308c\u305fHTTP\u30ea\u30af\u30a8\u30b9\u30c8Body\u306b\u300c&\u300d\u3067\u533a\u5207\u3089\u308c\u305fKey=Value\u30da\u30a2\uff08\u6539\u884c\u306a\u3057\uff09\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u308c\u3092JSON\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\u3002Value\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044Key\u306f\u7121\u8996\u3057\u307e\u3059\u3002\n\n```:Input\nApiVersion=2010-04-01&ApplicationSid=AP75zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz&Called=&Caller=client%3ADeviceId_0001&From=client%3ADeviceId_0001&To=&callerPhoneNumber=%2B81-50-3123-4567&callOutgoingPhoneNumber=%2B81-90-5987-6543\n```\n\n```json:Output\n{\n    \"From\": \"client:DeviceId_0001\",\n    \"Caller\": \"client:DeviceId_0001\",\n    \"ApiVersion\": \"2010-04-01\",\n    \"ApplicationSid\": \"AP75zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\",\n    \"callerPhoneNumber\": \"+81-50-3123-4567\",\n    \"callOutgoingPhoneNumber\": \"+81-90-5987-6543\"\n}\n```\n\n\u300cCalled\u300d\u306fKey\u306e\u307f\u3067Value\u304c\u5b58\u5728\u3057\u306a\u3044\u305f\u3081\u3001\u5909\u63db\u5f8c\u306eJSON\u306b\u306f\u5b58\u5728\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n\n# Template\u306e\u5b9f\u88c5\n## Twilio\u7279\u5316\u578b\n\n```\n#set($raw_input = $input.path(\"$\"))\n\n{\n  #foreach( $kvpairs in $raw_input.split( '&' ) )\n    #set( $kvpair = $kvpairs.split( '=' ) )\n      #if($kvpair.length == 2)\n        \"$kvpair[0]\" : \"$kvpair[1]\"#if( $foreach.hasNext ),#end\n      #end\n  #end\n}\n```\n\n\u30ea\u30af\u30a8\u30b9\u30c8Body\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u300c&\u300d\u3067\u5206\u5272\u3057\u305f\u306e\u3061\u3001\u305d\u308c\u3089\u3092\u66f4\u306b\u300c=\u300d\u3067\u5206\u5272\u3057\u3066Key\u3068Value\u306e\u5024\u3092\u53d6\u308a\u51fa\u3057\u3001JSON\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30da\u30a2\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001Key=Value\u3092\u300c=\u300d\u3067\u5206\u5272\u3057\u305f\u5f8c\u306b\u3001\u8981\u7d20\u6570\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u8981\u7d20\u6570\u304c2\u306e\u5834\u5408\u306e\u307f\u3001\u5909\u63db\u5f8c\u306eJSON\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u8981\u7d20\u6570\u306b\u5206\u5272\u3055\u308c\u305f\u5834\u5408\u306f\u4e0d\u6b63\u3068\u307f\u306a\u3057\u7121\u8996\u3057\u307e\u3059\u3002\n\n\n## \u6c4e\u7528\u578b\nGET\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3082\u5bfe\u5fdc\u3057\u305f\u6c4e\u7528\u578b\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002AWS Developer Forum\u3067\u8b70\u8ad6\u3055\u308c\u3001\u307e\u3068\u3081\u3066\u3089\u308c\u3066\u3044\u305f\u5185\u5bb9\u306b\u82e5\u5e72\u624b\u3092\u52a0\u3048\u305f\u3082\u306e\u3067\u3059\u3002\n\u4e0b\u8a18\u306e\u8a18\u4e8b\u3067\u6700\u7d42\u7684\u306b\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u305f\u3082\u306e\u306f\u3001Key\u306e\u6307\u5b9a\u304c\u3042\u308b\u304cValue\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u30b1\u30fc\u30b9(\u300cKey2=&Key3=Value3\u300d\u306eKey2\u3088\u3046\u306a\u30b1\u30fc\u30b9)\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\nHOWTO: Mapping Template v3.0 to convert form POST data or GET query to JSON\nhttps://forums.aws.amazon.com/thread.jspa?messageID=673012&tstart=0#725034\n\n```\n## convert HTML POST data or HTTP GET query string to JSON\n \n## get the raw post data from the AWS built-in variable and give it a nicer name\n#if ($context.httpMethod == \"POST\")\n #set($rawAPIData = $input.path(\"$\"))\n#elseif ($context.httpMethod == \"GET\")\n #set($rawAPIData = $input.params().querystring)\n #set($rawAPIData = $rawAPIData.toString())\n #set($rawAPIDataLength = $rawAPIData.length() - 1)\n #set($rawAPIData = $rawAPIData.substring(1, $rawAPIDataLength))\n #set($rawAPIData = $rawAPIData.replace(\", \", \"&\"))\n#else\n #set($rawAPIData = \"\")\n#end\n \n## first we get the number of \"&\" in the string, this tells us if there is more than one key value pair\n#set($countAmpersands = $rawAPIData.length() - $rawAPIData.replace(\"&\", \"\").length())\n \n## if there are no \"&\" at all then we have only one key value pair.\n## we append an ampersand to the string so that we can tokenise it the same way as multiple kv pairs.\n## the \"empty\" kv pair to the right of the ampersand will be ignored anyway.\n#if ($countAmpersands == 0)\n #set($rawPostData = $rawAPIData + \"&\")\n#end\n \n## now we tokenise using the ampersand(s)\n#set($tokenisedAmpersand = $rawAPIData.split(\"&\"))\n \n## we set up a variable to hold the valid key value pairs\n#set($tokenisedEquals = [])\n \n## now we set up a loop to find the valid key value pairs, which must contain only one \"=\"\n#foreach( $kvPair in $tokenisedAmpersand )\n #set($countEquals = $kvPair.length() - $kvPair.replace(\"=\", \"\").length())\n #if ($countEquals == 1)\n  #set($kvTokenised = $kvPair.split(\"=\"))\n  #if ( ($kvTokenised.size() == 2) && ($kvTokenised[0].length() > 0) )\n   ## we found a valid key value pair. add it to the list.\n   #set($devNull = $tokenisedEquals.add($kvPair))\n  #end\n #end\n#end\n \n## next we set up our loop inside the output structure \"{\" and \"}\"\n{\n#foreach( $kvPair in $tokenisedEquals )\n  ## finally we output the JSON for this pair and append a comma if this isn't the last pair\n  #set($kvTokenised = $kvPair.split(\"=\"))\n \"$util.urlDecode($kvTokenised[0])\" : #if($kvTokenised.size() > 1 && $kvTokenised[1].length() > 0)\"$util.urlDecode($kvTokenised[1])\"#{else}\"\"#end#if( $foreach.hasNext ),#end\n#end\n}\n```\n\n", "tags": ["APIGateway", "AWS"]}