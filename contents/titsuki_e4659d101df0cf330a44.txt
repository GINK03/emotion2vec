{"tags": ["Perl6", "NLP"], "context": "\u3053\u3093\u306b\u3061\u306f\u3001Perl 6\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e16\u65e5\u76ee\u306e\u6295\u7a3f\u306b\u306a\u308a\u307e\u3059\u3002\nNLP 5\u672c\u30ce\u30c3\u30af\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6771\u5317\u5927\u5b66\u306e\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u306e\u300e\u7b2c4\u7ae0: \u5f62\u614b\u7d20\u89e3\u6790\u300f\u306e 35~39\u307e\u3067\u306e5\u672c\u306e\u3046\u3061\u306e\u5f8c\u534a2\u672c\u3092Perl 6\u3067\u89e3\u304d\u3064\u3064\u89e3\u8aac\u3092\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u554f\u984c\u6587\u306f\u63b2\u8f09\u3057\u307e\u305b\u3093\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u306e\u5225\u7a93\u3067\u4e0b\u8a18\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u306a\u304c\u3089\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044\uff1a\nhttp://www.cl.ecei.tohoku.ac.jp/nlp100/#ch4\n\n\u8aad\u307f\u9032\u3081\u308b\u524d\u306b\n\n\u6ce8\u610f!\n\n\u8aad\u8005\u30ec\u30d9\u30eb\u3068\u3057\u3066\u306f\u3001Perl 6\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc1\u65e5\u76ee\u3067\u7d39\u4ecb\u3057\u305fPerl 6 introduction\u306a\u3069\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u4e00\u901a\u308a\u7d42\u3048\u305f\u30ec\u30d9\u30eb\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u308f\u304b\u308a\u3084\u3059\u304f\u7d39\u4ecb\u3059\u308b\u305f\u3081\u306b\u3001\u6b63\u78ba\u3067\u306f\u306a\u3044\u8868\u73fe\u304c\u3068\u3053\u308d\u3069\u3053\u308d\u51fa\u3066\u304f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n\u3088\u308a\u6b63\u78ba\u306a\u60c5\u5831\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001Perl 6\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc1\u65e5\u76ee\u3067\u7d39\u4ecb\u3057\u305f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3084\u516c\u5f0f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306eroast\u306a\u3069\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\n\u65e5\u672c\u8a9e\u8a33\u304c\u5b9a\u7740\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u306aPerl 6\u72ec\u7279\u306e\u82f1\u5358\u8a9e\u3092\u76ee\u306b\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u57fa\u672c\u7684\u306b\u89e3\u8aac\u4e2d\u3067\u306f\u305d\u306e\u307e\u307e\u82f1\u5358\u8a9e\u3067\u66f8\u304d\u3001\u305d\u306e\u5f8c\u88dc\u8db3\u3057\u307e\u3059\u306e\u3067\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\nPerl 6\u306e\u30e2\u30c3\u30c8\u30fc\u306fTMTOWTDI (\u3084\u308a\u65b9\u306f\u4e00\u3064\u3058\u3083\u306a\u3044) \u3067\u3059\u3002\u7279\u306b\u6b63\u89e3\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3067\u3082\u3001\u300c\u3053\u308c\u306e\u307b\u3046\u304c\u3082\u3063\u3068\u304b\u3063\u3053\u3088\u304f\u7c21\u6f54\u306b\u66f8\u3051\u308b\u3088\uff01\u300d\u3068\u3044\u3063\u305f\u6307\u6458\u306f\u5927\u6b53\u8fce\u3067\u3059\uff01\n\u5143\u306e38~39\u306e\u554f\u984c\u6587\u3060\u3068\u300130\u3067\u751f\u6210\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u305d\u308c\u4ee5\u964d\u3067\u4f7f\u3046\u6d41\u308c\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u3053\u3053\u3067\u306f\u30d0\u30a4\u30f3\u30c0\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u305f\u304b\u3063\u305f\u95a2\u4fc2\u3067\u7121\u8996\u3057\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u6e96\u5099\n\n\u62d9\u4f5c\u306eMeCab\u306ePerl 6\u30d0\u30a4\u30f3\u30c0\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u3001README\u306b\u66f8\u3044\u3066\u3042\u308b\u3088\u3046\u306bIPAdic\u3082\u52dd\u624b\u306b\u5165\u308a\u307e\u3059\u3002\n\n$ zef install MeCab\n\n\n38. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n\n\u30b3\u30fc\u30c9\nuse MeCab;\nuse MeCab::Tagger;\nuse SVG;\nuse SVG::Plot;\n\nmy $text-fh = open \"neko.txt\", :r;\nmy MeCab::Tagger $tagger .= new;\n\nmy @bag-of-words = gather for $text-fh.lines {\n    loop (my MeCab::Node $node = $tagger.parse-tonode($_); $node; $node = $node.next) {\n        next if $node.stat == MECAB_BOS_NODE|MECAB_EOS_NODE;\n        take $node.surface;\n    }     \n}.Bag.categorize(:as{ 1 }, { $_.value }).map({ .key => [+] .values }).sort: { $^a.key <=> $^b.key };\n\nmy $plot-fh = open 'histogram.svg', :w ;\n$plot-fh.say(\n    SVG.serialize: SVG::Plot.new(\n        :title( '\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0' ),\n        :width( 400 ),\n        :height( 300 ),\n        :background( '#fffff0' ),\n        :colors( '#4169e1' ),\n        :label-font-size(10),\n        :labels( @bag-of-words>>.key ),\n        :values( item(@bag-of-words>>.value) ),\n    ).plot(:stacked-bars)\n);\n\n$text-fh.close;\n$plot-fh.close;\n\n\n\u89e3\u8aac\n\n\u524d\u534a\n\n\ngather for take \u3067\u5358\u8a9e\u306e\u9045\u5ef6\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\n\n\n\n$tagger.parse-tonode\u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u3066\u3001take\u3067\u8868\u8a18\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\n\n.Bag \u3067\u8868\u8a18\u3001\u983b\u5ea6\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\n\n.categorize(:as{ 1 }, { $_.value }) \u3067 $_.value\u3092\u30ad\u30fc\u3068\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u306b\u5bfe\u3057\u3066\u3001:as{ 1 }\u3067\u50241\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n.map({ .key => [+] .values })\u3067\u3001\u983b\u5ea6\u304c\u30ad\u30fc\u3067\u3001\u305d\u306e\u983b\u5ea6\u3092\u6301\u3064\u8981\u7d20\u306e\u6570\u304c\u5024\u3068\u306a\u308b\u3088\u3046\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d[+]\u306f\u88ab\u6f14\u7b97\u5b50\u306e\u30ea\u30b9\u30c8(i.e. 1\u306e\u30ea\u30b9\u30c8)\u306b\u5bfe\u3057\u3066+\u6f14\u7b97\u3092\u884c\u3044\u307e\u3059\u3002\n\n.sort: { $^a.key <=> $^b.key } \u3067\u983b\u5ea6\u306e\u6607\u9806\u306b\u30bd\u30fc\u30c8\u3057\u307e\u3059\n5.\u3067\u751f\u6210\u3055\u308c\u305f\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3001\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u3068\u308b\u5358\u8a9e\u306e\u7a2e\u985e\u6570\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u3092\u5909\u6570\u306b\u4ee3\u5165\u3057\u307e\u3059\n\n\n\u5f8c\u534a\n\n\n:stacked-bars\u3092\u4f7f\u3044\u307e\u3059\n\n:labels( @bag-of-words>>.key ) \u3067\u3001\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u6a2a\u8ef8\u306b\u6307\u5b9a\u3057\u307e\u3059\n\n:values( item(@bag-of-words>>.value) ) \u3067\u3001\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u3068\u308b\u5358\u8a9e\u306e\u7a2e\u985e\u6570\u3092\u7e26\u8ef8\u306b\u6307\u5b9a\u3057\u307e\u3059\n\n\n\u3088\u3055\u305d\u3046\u3067\u3059\n\n39. Zipf\u306e\u6cd5\u5247\n\n\u30b3\u30fc\u30c9\nuse MeCab;\nuse MeCab::Tagger;\nuse SVG;\nuse SVG::Plot;\n\nmy $text-fh = open \"neko.txt\", :r;\nmy MeCab::Tagger $tagger .= new;\n\nmy @bag-of-words = gather for $text-fh.lines {\n    loop (my MeCab::Node $node = $tagger.parse-tonode($_); $node; $node = $node.next) {\n        next if $node.stat == MECAB_BOS_NODE|MECAB_EOS_NODE;\n        take $node.surface;\n    }     \n}.Bag.sort: { $^b.value <=> $^a.value };\n\nmy $plot-fh = open 'Zipf.svg', :w ;\n$plot-fh.say(\n    SVG.serialize: SVG::Plot.new(\n        :title( 'Zipf' ),\n        :width( 800 ),\n        :height( 600 ),\n        :background( '#fffff0' ),\n        :colors( '#4169e1' ),\n        :fill-width( 1.1 ),\n        :label-font-size(10),\n        :x( (1 .. +@bag-of-words).list>>.log10 ),\n        :values( item(@bag-of-words>>.value>>.log10) ),\n        :min-y-axis( -0.0001 ) # trick\n    ).plot(:xy-points)\n);\n\n$text-fh.close;\n$plot-fh.close;\n\n\n\u89e3\u8aac\n\n\u524d\u534a\n\n\ngather for take \u3067\u5358\u8a9e\u306e\u9045\u5ef6\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\n\n\n\n$tagger.parse-tonode\u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u3066\u3001take\u3067\u8868\u8a18\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\n\n.Bag \u3067\u8868\u8a18\u3001\u983b\u5ea6\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\n\n.sort: { $^b.value <=> $^a.value } \u3067\u5024\u306e\u964d\u9806\u306b\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002\n3.\u3067\u751f\u6210\u3055\u308c\u305f\u5358\u8a9e\u3001\u51fa\u73fe\u983b\u5ea6\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u3092\u5909\u6570\u306b\u4ee3\u5165\u3057\u307e\u3059\n\n\n\u5f8c\u534a\n\n\n:xy-points\u3092\u4f7f\u3044\u307e\u3059\n\n:x( (1 .. +@bag-of-words).list>>.log10 ) \u3067\u3001\u9806\u4f4d\u306e\u5bfe\u6570\u3092\u3068\u3063\u305f\u3082\u306e\u3092\u6a2a\u8ef8\u306b\u6307\u5b9a\u3057\u307e\u3059\n\n:values( item(@bag-of-words>>.value>>.log10) ) \u3067\u3001\u983b\u5ea6\u306e\u5bfe\u6570\u3092\u53d6\u3063\u305f\u3082\u306e\u3092\u7e26\u8ef8\u306b\u6307\u5b9a\u3057\u307e\u3059\n\n\n\u3088\u3055\u305d\u3046\u3067\u3059\n\u4ee5\u4e0a\u3001Perl 6\u3067NLP 5\u672c\u30ce\u30c3\u30af \u300e\u7b2c4\u7ae0: \u5f62\u614b\u7d20\u89e3\u6790\u300f 35~39 \u5f8c\u7de8\u3000\u3067\u3057\u305f\u3002\n\u3053\u3093\u306b\u3061\u306f\u3001Perl 6\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e16\u65e5\u76ee\u306e\u6295\u7a3f\u306b\u306a\u308a\u307e\u3059\u3002\n\nNLP 5\u672c\u30ce\u30c3\u30af\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6771\u5317\u5927\u5b66\u306e\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u306e\u300e\u7b2c4\u7ae0: \u5f62\u614b\u7d20\u89e3\u6790\u300f\u306e 35~39\u307e\u3067\u306e5\u672c\u306e\u3046\u3061\u306e\u5f8c\u534a2\u672c\u3092Perl 6\u3067\u89e3\u304d\u3064\u3064\u89e3\u8aac\u3092\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u554f\u984c\u6587\u306f\u63b2\u8f09\u3057\u307e\u305b\u3093\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u306e\u5225\u7a93\u3067\u4e0b\u8a18\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u306a\u304c\u3089\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044\uff1a\nhttp://www.cl.ecei.tohoku.ac.jp/nlp100/#ch4\n\n# \u8aad\u307f\u9032\u3081\u308b\u524d\u306b\n\n## \u6ce8\u610f!\n+ \u8aad\u8005\u30ec\u30d9\u30eb\u3068\u3057\u3066\u306f\u3001[Perl 6\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc1\u65e5\u76ee](http://qiita.com/titsuki/items/549ac95b8c37feb1dee1)\u3067\u7d39\u4ecb\u3057\u305f[Perl 6 introduction](https://github.com/hankache/perl6intro)\u306a\u3069\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u4e00\u901a\u308a\u7d42\u3048\u305f\u30ec\u30d9\u30eb\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n+ \u308f\u304b\u308a\u3084\u3059\u304f\u7d39\u4ecb\u3059\u308b\u305f\u3081\u306b\u3001\u6b63\u78ba\u3067\u306f\u306a\u3044\u8868\u73fe\u304c\u3068\u3053\u308d\u3069\u3053\u308d\u51fa\u3066\u304f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n + \u3088\u308a\u6b63\u78ba\u306a\u60c5\u5831\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001[Perl 6\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc1\u65e5\u76ee](http://qiita.com/titsuki/items/549ac95b8c37feb1dee1)\u3067\u7d39\u4ecb\u3057\u305f[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://qiita.com/titsuki/items/549ac95b8c37feb1dee1#%E5%85%AC%E5%BC%8F%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88) \u3084\u516c\u5f0f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e[roast](http://qiita.com/titsuki/items/549ac95b8c37feb1dee1#roast)\u306a\u3069\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n+ \u65e5\u672c\u8a9e\u8a33\u304c\u5b9a\u7740\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u306aPerl 6\u72ec\u7279\u306e\u82f1\u5358\u8a9e\u3092\u76ee\u306b\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u57fa\u672c\u7684\u306b\u89e3\u8aac\u4e2d\u3067\u306f\u305d\u306e\u307e\u307e\u82f1\u5358\u8a9e\u3067\u66f8\u304d\u3001\u305d\u306e\u5f8c\u88dc\u8db3\u3057\u307e\u3059\u306e\u3067\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\n+ Perl 6\u306e\u30e2\u30c3\u30c8\u30fc\u306fTMTOWTDI (\u3084\u308a\u65b9\u306f\u4e00\u3064\u3058\u3083\u306a\u3044) \u3067\u3059\u3002\u7279\u306b\u6b63\u89e3\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3067\u3082\u3001\u300c\u3053\u308c\u306e\u307b\u3046\u304c\u3082\u3063\u3068\u304b\u3063\u3053\u3088\u304f\u7c21\u6f54\u306b\u66f8\u3051\u308b\u3088\uff01\u300d\u3068\u3044\u3063\u305f\u6307\u6458\u306f\u5927\u6b53\u8fce\u3067\u3059\uff01\n+ \u5143\u306e38~39\u306e\u554f\u984c\u6587\u3060\u3068\u300130\u3067\u751f\u6210\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u305d\u308c\u4ee5\u964d\u3067\u4f7f\u3046\u6d41\u308c\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u3053\u3053\u3067\u306f\u30d0\u30a4\u30f3\u30c0\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u305f\u304b\u3063\u305f\u95a2\u4fc2\u3067\u7121\u8996\u3057\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u6e96\u5099\n\n+ \u62d9\u4f5c\u306e[MeCab\u306ePerl 6\u30d0\u30a4\u30f3\u30c0](https://github.com/titsuki/p6-MeCab)\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u3001README\u306b\u66f8\u3044\u3066\u3042\u308b\u3088\u3046\u306bIPAdic\u3082\u52dd\u624b\u306b\u5165\u308a\u307e\u3059\u3002\n\n```\n$ zef install MeCab\n```\n\n# 38. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n\n## \u30b3\u30fc\u30c9\n\n```\nuse MeCab;\nuse MeCab::Tagger;\nuse SVG;\nuse SVG::Plot;\n\nmy $text-fh = open \"neko.txt\", :r;\nmy MeCab::Tagger $tagger .= new;\n\nmy @bag-of-words = gather for $text-fh.lines {\n    loop (my MeCab::Node $node = $tagger.parse-tonode($_); $node; $node = $node.next) {\n        next if $node.stat == MECAB_BOS_NODE|MECAB_EOS_NODE;\n        take $node.surface;\n    }     \n}.Bag.categorize(:as{ 1 }, { $_.value }).map({ .key => [+] .values }).sort: { $^a.key <=> $^b.key };\n\nmy $plot-fh = open 'histogram.svg', :w ;\n$plot-fh.say(\n    SVG.serialize: SVG::Plot.new(\n        :title( '\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0' ),\n        :width( 400 ),\n        :height( 300 ),\n        :background( '#fffff0' ),\n        :colors( '#4169e1' ),\n        :label-font-size(10),\n        :labels( @bag-of-words>>.key ),\n        :values( item(@bag-of-words>>.value) ),\n    ).plot(:stacked-bars)\n);\n\n$text-fh.close;\n$plot-fh.close;\n```\n\n## \u89e3\u8aac\n\n### \u524d\u534a\n\n1. `gather for take` \u3067\u5358\u8a9e\u306e\u9045\u5ef6\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\n + `$tagger.parse-tonode`\u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u3066\u3001`take`\u3067\u8868\u8a18\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n2. `.Bag` \u3067\u8868\u8a18\u3001\u983b\u5ea6\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\n3. `.categorize(:as{ 1 }, { $_.value })` \u3067 `$_.value`\u3092\u30ad\u30fc\u3068\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u306b\u5bfe\u3057\u3066\u3001`:as{ 1 }`\u3067\u5024`1`\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n4. `.map({ .key => [+] .values })`\u3067\u3001\u983b\u5ea6\u304c\u30ad\u30fc\u3067\u3001\u305d\u306e\u983b\u5ea6\u3092\u6301\u3064\u8981\u7d20\u306e\u6570\u304c\u5024\u3068\u306a\u308b\u3088\u3046\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d`[+]`\u306f\u88ab\u6f14\u7b97\u5b50\u306e\u30ea\u30b9\u30c8(i.e. `1`\u306e\u30ea\u30b9\u30c8)\u306b\u5bfe\u3057\u3066`+`\u6f14\u7b97\u3092\u884c\u3044\u307e\u3059\u3002\n5. `.sort: { $^a.key <=> $^b.key }` \u3067\u983b\u5ea6\u306e\u6607\u9806\u306b\u30bd\u30fc\u30c8\u3057\u307e\u3059\n6. 5.\u3067\u751f\u6210\u3055\u308c\u305f\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3001\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u3068\u308b\u5358\u8a9e\u306e\u7a2e\u985e\u6570\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u3092\u5909\u6570\u306b\u4ee3\u5165\u3057\u307e\u3059\n\n### \u5f8c\u534a\n\n+ `:stacked-bars`\u3092\u4f7f\u3044\u307e\u3059\n+ `:labels( @bag-of-words>>.key )` \u3067\u3001\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u6a2a\u8ef8\u306b\u6307\u5b9a\u3057\u307e\u3059\n+ `:values( item(@bag-of-words>>.value) )` \u3067\u3001\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u3068\u308b\u5358\u8a9e\u306e\u7a2e\u985e\u6570\u3092\u7e26\u8ef8\u306b\u6307\u5b9a\u3057\u307e\u3059\n\n\n![histogram.png](https://qiita-image-store.s3.amazonaws.com/0/149227/f9671426-1067-7e11-b022-8589fb14f1a9.png)\n\n\u3088\u3055\u305d\u3046\u3067\u3059\n\n# 39. Zipf\u306e\u6cd5\u5247\n\n## \u30b3\u30fc\u30c9\n\n```\nuse MeCab;\nuse MeCab::Tagger;\nuse SVG;\nuse SVG::Plot;\n\nmy $text-fh = open \"neko.txt\", :r;\nmy MeCab::Tagger $tagger .= new;\n\nmy @bag-of-words = gather for $text-fh.lines {\n    loop (my MeCab::Node $node = $tagger.parse-tonode($_); $node; $node = $node.next) {\n        next if $node.stat == MECAB_BOS_NODE|MECAB_EOS_NODE;\n        take $node.surface;\n    }     \n}.Bag.sort: { $^b.value <=> $^a.value };\n\nmy $plot-fh = open 'Zipf.svg', :w ;\n$plot-fh.say(\n    SVG.serialize: SVG::Plot.new(\n        :title( 'Zipf' ),\n        :width( 800 ),\n        :height( 600 ),\n        :background( '#fffff0' ),\n        :colors( '#4169e1' ),\n        :fill-width( 1.1 ),\n        :label-font-size(10),\n        :x( (1 .. +@bag-of-words).list>>.log10 ),\n        :values( item(@bag-of-words>>.value>>.log10) ),\n        :min-y-axis( -0.0001 ) # trick\n    ).plot(:xy-points)\n);\n\n$text-fh.close;\n$plot-fh.close;\n```\n\n## \u89e3\u8aac\n\n### \u524d\u534a\n\n1. `gather for take` \u3067\u5358\u8a9e\u306e\u9045\u5ef6\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\n + `$tagger.parse-tonode`\u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u3066\u3001`take`\u3067\u8868\u8a18\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n2. `.Bag` \u3067\u8868\u8a18\u3001\u983b\u5ea6\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\n3. `.sort: { $^b.value <=> $^a.value }` \u3067\u5024\u306e\u964d\u9806\u306b\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002\n4. 3.\u3067\u751f\u6210\u3055\u308c\u305f\u5358\u8a9e\u3001\u51fa\u73fe\u983b\u5ea6\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u3092\u5909\u6570\u306b\u4ee3\u5165\u3057\u307e\u3059\n\n### \u5f8c\u534a\n\n+ `:xy-points`\u3092\u4f7f\u3044\u307e\u3059\n+ `:x( (1 .. +@bag-of-words).list>>.log10 )` \u3067\u3001\u9806\u4f4d\u306e\u5bfe\u6570\u3092\u3068\u3063\u305f\u3082\u306e\u3092\u6a2a\u8ef8\u306b\u6307\u5b9a\u3057\u307e\u3059\n+ `:values( item(@bag-of-words>>.value>>.log10) )` \u3067\u3001\u983b\u5ea6\u306e\u5bfe\u6570\u3092\u53d6\u3063\u305f\u3082\u306e\u3092\u7e26\u8ef8\u306b\u6307\u5b9a\u3057\u307e\u3059\n\n![Zipf.png](https://qiita-image-store.s3.amazonaws.com/0/149227/a45b0597-032e-23fa-6fa6-58be72545815.png)\n\u3088\u3055\u305d\u3046\u3067\u3059\n\n\n\u4ee5\u4e0a\u3001Perl 6\u3067NLP 5\u672c\u30ce\u30c3\u30af \u300e\u7b2c4\u7ae0: \u5f62\u614b\u7d20\u89e3\u6790\u300f 35~39 \u5f8c\u7de8\u3000\u3067\u3057\u305f\u3002\n"}