{"context": "\u6700\u521d\u306f\u4e00\u65e6List\u306b\u5c55\u958b\u3057\u3066\u304b\u3089sc.parallelize\u3057\u3088\u3046\u3068\u3057\u3066\u305f\u3051\u3069\u3001master\u306e\u30e1\u30e2\u30ea\u306b\u4e57\u308a\u305d\u3046\u306b\u306a\u3044\u3057\n\u3069\u3046\u3084\u3089JdbcRDD\u3068\u304b\u3044\u3046\u306e\u304c\u3042\u308b\u3089\u3057\u3044\u306e\u3067\u305d\u308c\u3092\u3064\u304b\u3046\n\u65e9\u901f\u5b9f\u88c5\n  val props = new Properties() {\n    setProperty(\"apikey\", conf.getString(\"apikey\"))\n    setProperty(\"useSSL\", conf.getString(\"useSSL\"))\n    setProperty(\"type\", conf.getString(\"jobType\"))\n  }\n\n  val connection = DriverManager.getConnection(conf.getString(\"url\"), props)\n\n  val query = \"\"\"\n      select *\n      from ad_impressions ai\n      where TD_TIME_RANGE(ai.time, ?, ?, 'UTC')\n      order by time asc\n  \"\"\"\n\n  val treasuredataLogs: JdbcRDD[ArticleImpression] = new JdbcRDD(\n    sc, // SparkContext\n    () => TreasureData.getConnection(), // Jdbc Connection\n    query, // Query String\n        from.map(_.toDateTime(DateTimeZone.UTC).getMillis / 1000) | Long.MinValue, // the minimum value of the first placeholder\n      to.map(_.toDateTime(DateTimeZone.UTC).getMillis / 1000) | Long.MaxValue, // the maximum value of the second placeholder\n    10, // num partition 1~20\n    rs => ArticleImpressionDxo.fromEntity(rs) // data exchange function\n  )\n\n\nJdbcRdd\u306e\u30bd\u30fc\u30b9\u3092\u898b\u305f\u611f\u3058\u3001\u52dd\u624b\u306bclose\u3057\u3066\u304f\u308c\u308b\u3063\u307d\u3044\u30cd(\u00b4\u03c9\uff40*)\n  override def compute(thePart: Partition, context: TaskContext): Iterator[T] = new NextIterator[T]\n    {\n      context.addTaskCompletionListener{ context => closeIfNeeded() }\n\n\n\u3067\u3001\u52d5\u3044\u305f\u3051\u3069\u306a\u3093\u304b\u304a\u3063\u305d\u3044\u306a\u3002\u3002\u3002\n\u306a\u3093\u3067\u3084\u308d\n\u3069\u3046\u3084\u3089\u3001\u30af\u30a8\u30ea\u304c\u4f55\u56de\u3082\u5b9f\u884c\u3055\u308c\u3066\u308b\u3063\u307d\u3044\uff1f\nTreasureData\u306e\u30b8\u30e7\u30d6\u5c65\u6b74\u3092\u898b\u305f\u3089\uff11\uff10\u56de\u30af\u30a8\u30ea\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3002\n * @param numPartitions the number of partitions.\n *   Given a lowerBound of 1, an upperBound of 20, and a numPartitions of 2,\n *   the query would be executed twice, once with (1, 10) and once with (11, 20)\n\nlower \u3068 upper \u306b time\u306e\u7bc4\u56f2\u3092\u5165\u308c\u3066\u3001\u30af\u30a8\u30ea\u306b\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u3092\uff12\u3064\u8a2d\u5b9a\u3059\u308b\u3002\n\u3082\u3057num partition\u306e\u6570\u3067\u7bc4\u56f2\u3092\u5206\u5272\u3057\u3066\u5b9f\u884c\u3057\u3066\u304f\u308c\u308b\u3063\u3066\u611f\u3058\u304b\u306a\n\u4eca\u56de\u306f10\u3067\u6307\u5b9a\u3057\u305f\u306e\u3067\uff11\uff10\u30af\u30a8\u30ea\u306b\u5206\u3051\u3066\u304f\u308c\u305f\u3063\u307d\u3044\u30cd\n\u5b9f\u969b\u30b8\u30e7\u30d6\u306e\u5c65\u6b74\u898b\u305f\u3089\u3001range\u3092\uff11\uff10\u500b\u306b\u5206\u5272\u3057\u3066\u304f\u308c\u3066\u305f\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468998720, 1469016000) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468981440, 1468998719) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468964160, 1468981439) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468946880, 1468964159) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468929600, 1468946879) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468912320, 1468929599) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468895040, 1468912319) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468877760, 1468895039) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468860480, 1468877759) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468843200, 1468860479) order by time asc\n\n\u3042\u308a\u304c\u3068\u3046JdbcRDD\n\n\u6700\u521d\u306f\u4e00\u65e6List\u306b\u5c55\u958b\u3057\u3066\u304b\u3089```sc.parallelize```\u3057\u3088\u3046\u3068\u3057\u3066\u305f\u3051\u3069\u3001master\u306e\u30e1\u30e2\u30ea\u306b\u4e57\u308a\u305d\u3046\u306b\u306a\u3044\u3057\n\u3069\u3046\u3084\u3089JdbcRDD\u3068\u304b\u3044\u3046\u306e\u304c\u3042\u308b\u3089\u3057\u3044\u306e\u3067\u305d\u308c\u3092\u3064\u304b\u3046\n\n\u65e9\u901f\u5b9f\u88c5\n\n```\n  val props = new Properties() {\n    setProperty(\"apikey\", conf.getString(\"apikey\"))\n    setProperty(\"useSSL\", conf.getString(\"useSSL\"))\n    setProperty(\"type\", conf.getString(\"jobType\"))\n  }\n\n  val connection = DriverManager.getConnection(conf.getString(\"url\"), props)\n\n  val query = \"\"\"\n      select *\n      from ad_impressions ai\n      where TD_TIME_RANGE(ai.time, ?, ?, 'UTC')\n      order by time asc\n  \"\"\"\n  \n  val treasuredataLogs: JdbcRDD[ArticleImpression] = new JdbcRDD(\n    sc, // SparkContext\n    () => TreasureData.getConnection(), // Jdbc Connection\n    query, // Query String\n        from.map(_.toDateTime(DateTimeZone.UTC).getMillis / 1000) | Long.MinValue, // the minimum value of the first placeholder\n      to.map(_.toDateTime(DateTimeZone.UTC).getMillis / 1000) | Long.MaxValue, // the maximum value of the second placeholder\n    10, // num partition 1~20\n    rs => ArticleImpressionDxo.fromEntity(rs) // data exchange function\n  )\n\n```\n\n\nJdbcRdd\u306e\u30bd\u30fc\u30b9\u3092\u898b\u305f\u611f\u3058\u3001\u52dd\u624b\u306bclose\u3057\u3066\u304f\u308c\u308b\u3063\u307d\u3044\u30cd(\u00b4\u03c9\uff40*)\n\n```\n  override def compute(thePart: Partition, context: TaskContext): Iterator[T] = new NextIterator[T]\n    {\n      context.addTaskCompletionListener{ context => closeIfNeeded() }\n  \n```\n\n\n\u3067\u3001\u52d5\u3044\u305f\u3051\u3069\u306a\u3093\u304b\u304a\u3063\u305d\u3044\u306a\u3002\u3002\u3002\n\u306a\u3093\u3067\u3084\u308d\n\n\n\n\u3069\u3046\u3084\u3089\u3001\u30af\u30a8\u30ea\u304c\u4f55\u56de\u3082\u5b9f\u884c\u3055\u308c\u3066\u308b\u3063\u307d\u3044\uff1f\nTreasureData\u306e\u30b8\u30e7\u30d6\u5c65\u6b74\u3092\u898b\u305f\u3089\uff11\uff10\u56de\u30af\u30a8\u30ea\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3002\n\n```\n * @param numPartitions the number of partitions.\n *   Given a lowerBound of 1, an upperBound of 20, and a numPartitions of 2,\n *   the query would be executed twice, once with (1, 10) and once with (11, 20)\n```\n\nlower \u3068 upper \u306b time\u306e\u7bc4\u56f2\u3092\u5165\u308c\u3066\u3001\u30af\u30a8\u30ea\u306b\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u3092\uff12\u3064\u8a2d\u5b9a\u3059\u308b\u3002\n\u3082\u3057num partition\u306e\u6570\u3067\u7bc4\u56f2\u3092\u5206\u5272\u3057\u3066\u5b9f\u884c\u3057\u3066\u304f\u308c\u308b\u3063\u3066\u611f\u3058\u304b\u306a\n\n\u4eca\u56de\u306f10\u3067\u6307\u5b9a\u3057\u305f\u306e\u3067\uff11\uff10\u30af\u30a8\u30ea\u306b\u5206\u3051\u3066\u304f\u308c\u305f\u3063\u307d\u3044\u30cd\n\u5b9f\u969b\u30b8\u30e7\u30d6\u306e\u5c65\u6b74\u898b\u305f\u3089\u3001range\u3092\uff11\uff10\u500b\u306b\u5206\u5272\u3057\u3066\u304f\u308c\u3066\u305f\n\n```\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468998720, 1469016000) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468981440, 1468998719) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468964160, 1468981439) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468946880, 1468964159) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468929600, 1468946879) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468912320, 1468929599) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468895040, 1468912319) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468877760, 1468895039) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468860480, 1468877759) order by time asc\nselect * from ad_impressions ai where TD_TIME_RANGE(ai.time, 1468843200, 1468860479) order by time asc\n```\n\n\u3042\u308a\u304c\u3068\u3046JdbcRDD\n\n", "tags": ["TreasureData", "Spark"]}