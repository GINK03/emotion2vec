{"context": " More than 1 year has passed since last update.http://qiita.com/Nabetani/items/c206fbc645c255cb7de6\n\u300c\u7b49\u5dee\u6570\u5217\u300d\u3092Erlang\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u30021\u6642\u9593\u3061\u3087\u3044\u304b\u304b\u308a\u307e\u3057\u305f\u3002\n\ntousa.erl\n-module(tousa).\n-compile(export_all).\n\n% \"012abku\" -> [0,1,2,10,11,20,30].\nto_num([])    -> [];\nto_num([H|T]) ->\n  case H =< $9 of\n    true  -> [H - $0      | to_num(T)];\n    false -> [H - $a + 10 | to_num(T)]\n  end.\n\nsolve(Data) ->\n  element(1, lists:max(lists:map(fun add_length/1, find(to_num(Data))))).\n\nadd_length(L) -> {length(L), L}.\n\nfind(List)        -> find(List, List).\nfind([], _)       -> [];\nfind([A], _)      -> [[A]];\nfind([H|T], List) -> find2(H, T, List) ++ find(T, List).\n\n% 0, [1,2,10,11,20,30], [0,1,2,10,11,20,30]\n%   -> [[0,1,2],[0,2],[0,10,20,30],[0,11],[0,20],[0,30]]\nfind2(_, [], _)       -> [];\nfind2(A, [B|T], List) -> [find3(A, B - A, List) | find2(A, T, List)].\n\n% 10, 1, [0,1,2,10,11,20,30] -> [10,11].\nfind3(Num, Diff, List) ->\n  case lists:member(Num, List) of\n    true  -> [Num | find3(Num + Diff, Diff, List)];\n    false -> []\n  end.\n\ntests() ->\n  test(\"12345abcz\", 5),           % #0\n  test(\"012abku\", 4),             % #1\n  test(\"158achklmqstwy\", 3),      % #48\n  test(\"012346abceghjknortv\", 5). % #49\n\ntest(Data, Expected) ->\n  io:fwrite(\"~s -> ~w ~w~n\", [Data, Expected, solve(Data) == Expected]).\n\n\nhttp://qiita.com/Nabetani/items/c206fbc645c255cb7de6\n\u300c\u7b49\u5dee\u6570\u5217\u300d\u3092Erlang\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u30021\u6642\u9593\u3061\u3087\u3044\u304b\u304b\u308a\u307e\u3057\u305f\u3002\n\n```erlang:tousa.erl\n-module(tousa).\n-compile(export_all).\n\n% \"012abku\" -> [0,1,2,10,11,20,30].\nto_num([])    -> [];\nto_num([H|T]) ->\n  case H =< $9 of\n    true  -> [H - $0      | to_num(T)];\n    false -> [H - $a + 10 | to_num(T)]\n  end.\n\nsolve(Data) ->\n  element(1, lists:max(lists:map(fun add_length/1, find(to_num(Data))))).\n\nadd_length(L) -> {length(L), L}.\n\nfind(List)        -> find(List, List).\nfind([], _)       -> [];\nfind([A], _)      -> [[A]];\nfind([H|T], List) -> find2(H, T, List) ++ find(T, List).\n\n% 0, [1,2,10,11,20,30], [0,1,2,10,11,20,30]\n%   -> [[0,1,2],[0,2],[0,10,20,30],[0,11],[0,20],[0,30]]\nfind2(_, [], _)       -> [];\nfind2(A, [B|T], List) -> [find3(A, B - A, List) | find2(A, T, List)].\n\n% 10, 1, [0,1,2,10,11,20,30] -> [10,11].\nfind3(Num, Diff, List) ->\n  case lists:member(Num, List) of\n    true  -> [Num | find3(Num + Diff, Diff, List)];\n    false -> []\n  end.\n\ntests() ->\n  test(\"12345abcz\", 5),           % #0\n  test(\"012abku\", 4),             % #1\n  test(\"158achklmqstwy\", 3),      % #48\n  test(\"012346abceghjknortv\", 5). % #49\n\ntest(Data, Expected) ->\n  io:fwrite(\"~s -> ~w ~w~n\", [Data, Expected, solve(Data) == Expected]).\n```\n", "tags": ["\u3069\u3046\u66f8\u304f", "Erlang"]}