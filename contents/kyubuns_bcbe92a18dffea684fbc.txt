{"context": " More than 1 year has passed since last update.\n\n\u307e\u3048\u304c\u304d\n\u30de\u30c3\u30d1\u30fc\u3063\u3066\u3084\u3064\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3076\u3093\u3002\nC#\u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3044\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u52d5\u7684\u306b\u521d\u671f\u5316\u3059\u308b\n\u3053\u306e\u8a18\u4e8b\u306b\u3081\u3063\u3061\u3083\u304a\u4e16\u8a71\u306b\u306a\u308a\u307e\u3057\u305f\uff01\uff01\n\u3068\u3044\u3046\u304b\u3001\u534a\u5206\u3050\u3089\u3044\u30b3\u30d4\u30da\u3067\u3059\u3002\n\n\u5b9f\u73fe\u3057\u305f\u3044\u3053\u3068\n\u3053\u3093\u306a\u611f\u3058\u306ecsv\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u3066\n\nEnemyMaster.csv\nID,Name,Hp,Power\nslime,\u30b9\u30e9\u30a4\u30e0,10,1\nbat,\u3053\u3046\u3082\u308a,5,2\n\n\n\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u3067\n\nEnemyMasterTable.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic class EnemyMasterTable : MasterTableBase<EnemyMaster>\n{\n  private static readonly string FilePath = \"EnemyMaster\";\n  public void Load() { Load(FilePath); }\n}\n\npublic class EnemyMaster : MasterBase\n{\n  public string ID { get; private set; }\n  public string Name { get; private set; }\n  public int Hp { get; private set; }\n  public int Power { get; private set; }\n}\n\n\n\nHoge.cs\nvar enemyMasterTable = new EnemyMasterTable();\nenemyMasterTable.Load();\nforeach(var enemyMaster in enemyMasterTable.All)\n{\n    Debug.Log(enemyMaster.Name);\n}\n\n\n\u3053\u3093\u306a\u3053\u3068\u304c\u51fa\u6765\u308b\u3068\u3044\u3044\u306a\uff01\uff01\uff01\n\u3068\u601d\u3063\u3066\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u4e2d\u8eab\n\nMasterTableBase.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\n\npublic class MasterTableBase<T> where T : MasterBase, new()\n{\n  protected List<T> masters;\n  public List<T> All { get { return masters; } }\n\n  public void Load(string filePath)\n  {\n    var text = ((TextAsset)Resources.Load(filePath, typeof(TextAsset))).text;\n    text = text.Trim().Replace(\"\\r\", \"\") + \"\\n\";\n    var lines = text.Split('\\n').ToList();\n\n    // header\n    var headerElements = lines[0].Split(',');\n    lines.RemoveAt(0); // header\n\n    // body\n    masters = new List<T>();\n    foreach(var line in lines) ParseLine(line, headerElements);\n  }\n\n  private void ParseLine(string line, string[] headerElements)\n  {\n    var elements = line.Split(',');\n    if(elements.Length == 1) return;\n    if(elements.Length != headerElements.Length)\n    {\n      Debug.LogWarning(string.Format(\"can't load: {0}\", line));\n      return;\n    }\n\n    var param = new Dictionary<string, string>();\n    for(int i=0;i<elements.Length;++i) param.Add(headerElements[i], elements[i]);\n    var master = new T();\n    master.Load(param);\n    masters.Add(master);\n  }\n}\n\npublic class MasterBase\n{\n  public void Load(Dictionary<string, string> param)\n  {\n    foreach(string key in param.Keys) SetField (key, param[key]);\n  }\n\n  private void SetField(string key, string value)\n  {\n    PropertyInfo propertyInfo = this.GetType().GetProperty(key, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance);\n\n    if(propertyInfo.PropertyType == typeof(int))         propertyInfo.SetValue(this, int.Parse(value), null);\n    else if(propertyInfo.PropertyType == typeof(string)) propertyInfo.SetValue(this, value, null);\n    else if(propertyInfo.PropertyType == typeof(double)) propertyInfo.SetValue(this, double.Parse(value), null);\n    // \u4ed6\u306e\u578b\u306b\u3082\u5bfe\u5fdc\u3055\u305b\u305f\u3044\u3068\u304d\u306b\u306f\u9069\u5f53\u306b\u3053\u3053\u306b\u3002enum\u3068\u304b\u3082\u3069\u3046\u306b\u304b\u306a\u308a\u305d\u3046\u3002\n  }\n}\n\n\n\n\u3042\u3068\u304c\u304d\n\u4fbf\u5229\u306a\u3093\u3067\u3059\u3051\u3069\u3001\u305d\u3053\u305d\u3053\u91cd\u3044\u3068\u601d\u3046\uff08\u8a08\u6e2c\u306f\u3057\u3066\u306a\u3044\uff09\u306e\u3067\u304a\u6c17\u3092\u4ed8\u3051\u3066\u3002\niOS\u52d5\u4f5c\u691c\u8a3c\u6e08\u307f\n\n\u5ba3\u4f1d\nCSV\u3092\u7c21\u5358\u306bUnity\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308bCSV Viewer\u3092AssetStore\u306b\u51fa\u3057\u3066\u308b\u306e\u3067\u3088\u3051\u308c\u3070\u305c\u3072\u305c\u3072\u3002\n\n# \u307e\u3048\u304c\u304d\n\n\u30de\u30c3\u30d1\u30fc\u3063\u3066\u3084\u3064\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3076\u3093\u3002\n\n[C#\u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3044\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u52d5\u7684\u306b\u521d\u671f\u5316\u3059\u308b](http://qiita.com/yonestra/items/976d575fed5a4997a3a4)\n\u3053\u306e\u8a18\u4e8b\u306b\u3081\u3063\u3061\u3083\u304a\u4e16\u8a71\u306b\u306a\u308a\u307e\u3057\u305f\uff01\uff01\n\u3068\u3044\u3046\u304b\u3001\u534a\u5206\u3050\u3089\u3044\u30b3\u30d4\u30da\u3067\u3059\u3002\n\n# \u5b9f\u73fe\u3057\u305f\u3044\u3053\u3068\n\n\u3053\u3093\u306a\u611f\u3058\u306ecsv\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u3066\n\n```lang:EnemyMaster.csv\nID,Name,Hp,Power\nslime,\u30b9\u30e9\u30a4\u30e0,10,1\nbat,\u3053\u3046\u3082\u308a,5,2\n```\n\n\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u3067\n\n```lang:EnemyMasterTable.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic class EnemyMasterTable : MasterTableBase<EnemyMaster>\n{\n  private static readonly string FilePath = \"EnemyMaster\";\n  public void Load() { Load(FilePath); }\n}\n\npublic class EnemyMaster : MasterBase\n{\n  public string ID { get; private set; }\n  public string Name { get; private set; }\n  public int Hp { get; private set; }\n  public int Power { get; private set; }\n}\n```\n\n```lang:Hoge.cs\nvar enemyMasterTable = new EnemyMasterTable();\nenemyMasterTable.Load();\nforeach(var enemyMaster in enemyMasterTable.All)\n{\n    Debug.Log(enemyMaster.Name);\n}\n```\n\n\u3053\u3093\u306a\u3053\u3068\u304c\u51fa\u6765\u308b\u3068\u3044\u3044\u306a\uff01\uff01\uff01\n\u3068\u601d\u3063\u3066\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n# \u4e2d\u8eab\n\n```lang:MasterTableBase.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\n\npublic class MasterTableBase<T> where T : MasterBase, new()\n{\n  protected List<T> masters;\n  public List<T> All { get { return masters; } }\n\n  public void Load(string filePath)\n  {\n    var text = ((TextAsset)Resources.Load(filePath, typeof(TextAsset))).text;\n    text = text.Trim().Replace(\"\\r\", \"\") + \"\\n\";\n    var lines = text.Split('\\n').ToList();\n\n    // header\n    var headerElements = lines[0].Split(',');\n    lines.RemoveAt(0); // header\n\n    // body\n    masters = new List<T>();\n    foreach(var line in lines) ParseLine(line, headerElements);\n  }\n  \n  private void ParseLine(string line, string[] headerElements)\n  {\n    var elements = line.Split(',');\n    if(elements.Length == 1) return;\n    if(elements.Length != headerElements.Length)\n    {\n      Debug.LogWarning(string.Format(\"can't load: {0}\", line));\n      return;\n    }\n\n    var param = new Dictionary<string, string>();\n    for(int i=0;i<elements.Length;++i) param.Add(headerElements[i], elements[i]);\n    var master = new T();\n    master.Load(param);\n    masters.Add(master);\n  }\n}\n\npublic class MasterBase\n{\n  public void Load(Dictionary<string, string> param)\n  {\n    foreach(string key in param.Keys) SetField (key, param[key]);\n  }\n\n  private void SetField(string key, string value)\n  {\n    PropertyInfo propertyInfo = this.GetType().GetProperty(key, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance);\n\n    if(propertyInfo.PropertyType == typeof(int))         propertyInfo.SetValue(this, int.Parse(value), null);\n    else if(propertyInfo.PropertyType == typeof(string)) propertyInfo.SetValue(this, value, null);\n    else if(propertyInfo.PropertyType == typeof(double)) propertyInfo.SetValue(this, double.Parse(value), null);\n    // \u4ed6\u306e\u578b\u306b\u3082\u5bfe\u5fdc\u3055\u305b\u305f\u3044\u3068\u304d\u306b\u306f\u9069\u5f53\u306b\u3053\u3053\u306b\u3002enum\u3068\u304b\u3082\u3069\u3046\u306b\u304b\u306a\u308a\u305d\u3046\u3002\n  }\n}\n```\n\n# \u3042\u3068\u304c\u304d\n\n\u4fbf\u5229\u306a\u3093\u3067\u3059\u3051\u3069\u3001\u305d\u3053\u305d\u3053\u91cd\u3044\u3068\u601d\u3046\uff08\u8a08\u6e2c\u306f\u3057\u3066\u306a\u3044\uff09\u306e\u3067\u304a\u6c17\u3092\u4ed8\u3051\u3066\u3002\niOS\u52d5\u4f5c\u691c\u8a3c\u6e08\u307f\n\n# \u5ba3\u4f1d\n\nCSV\u3092\u7c21\u5358\u306bUnity\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b[CSV Viewer](https://www.assetstore.unity3d.com/jp/#!/content/18424)\u3092AssetStore\u306b\u51fa\u3057\u3066\u308b\u306e\u3067\u3088\u3051\u308c\u3070\u305c\u3072\u305c\u3072\u3002\n\n![Dungeon_unity_-_chocolate_-_iPhone__iPod_Touch_and_iPad.png](https://qiita-image-store.s3.amazonaws.com/0/6459/5dd19404-367a-95b0-2daa-8477bd0f1b26.png)\n", "tags": ["Unity", "Unity3D"]}