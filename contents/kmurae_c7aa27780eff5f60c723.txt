{"context": "Hubot\u3067Hotpepper\u30b0\u30eb\u30e1\u30b5\u30fc\u30c1API\u3092\u4f7f\u3063\u3066\u304a\u5e97\u3092\u7d39\u4ecb\u3057\u3066\u304f\u308c\u308b\u3084\u3064\u3092\u4f5c\u3063\u305f\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u5929\u6c17\u4e88\u5831\u3082\u77e5\u308a\u305f\u3044\u306a\u3068\u601d\u3063\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u56de\u5929\u6c17\u4e88\u5831\u306e\u53d6\u5f97\u306b\u306fOpenWeatherMap\u306eWeather API\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u3082Slack\u3068\u9023\u643a\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nAPI\u30ad\u30fc\u306e\u53d6\u5f97\nSign Up\u306b\u5fc5\u8981\u60c5\u5831\u3092\u5165\u529b\u3057\u3066API\u30ad\u30fc\u3092\u767a\u884c\u3059\u308b\u3002price-list\u306b\u8272\u3005\u30d7\u30e9\u30f3\u304c\u3042\u308b\u3051\u3069\u3001\u52c9\u5f37\u306e\u305f\u3081\u306a\u306e\u3067\u3001Free\u3067\u5341\u5206\u3002\n\u767b\u9332\u304c\u6e08\u3080\u3068API\u30ad\u30fc\u304c\u767a\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u4f7f\u3063\u3066\u307f\u308b\n\u5b8c\u6210\u5f62\u3092\u5148\u306b\u304a\u898b\u305b\u3057\u307e\u3059\u3002\n# Description:\n\nmodule.exports = (robot) ->\n  robot.hear /(.*)\u306e\u5929\u6c17\u306f\uff1f/i, (msg) ->\n\n    cityName  = msg.match[1]\n    query = encodeURIComponent msg.match[1]\n\n    request = msg.http(\"http://api.openweathermap.org/data/2.5/forecast/weather?q=#{query}&APPID={API\u30ad\u30fc}\")\n    .get()\n    request (err, res, body) ->\n      json = JSON.parse body\n      switch json[\"list\"][0][\"weather\"][0][\"main\"]\n        when \"Clear\"\n          weather = \"\u6674\u308c\"\n        when \"Clouds\"\n          weather = \"\u304f\u3082\u308a\"\n        when \"Rain\"\n          weather = \"\u96e8\"\n        when \"snow\"\n          weather = \"\u96ea\"\n\n        icon = json[\"list\"][0][\"weather\"][0][\"icon\"]\n\n      msg.reply \"#{cityName}\u306e\u5929\u6c17\u306f#{weather}\u3067\u3059 \\n http://openweathermap.org/img/w/#{icon}.png\"\n\n\n\u8aac\u660e\nmodule.exports = (robot) ->\n  robot.hear /(.*)\u306e\u5929\u6c17\u306f\uff1f/i, (msg) ->\n\n\u300c\u25ef\u25ef\u306e\u5929\u6c17\u306f\uff1f\u300d\u3068\u3044\u3046\u30d5\u30ec\u30fc\u30ba\u306b\u53cd\u5fdc\u3057\u3066\u51e6\u7406\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u25ef\u25ef\u306e\u90e8\u5206\u306b\u8abf\u3079\u305f\u3044\u5730\u540d\u3092\u5165\u529b\u3057\u307e\u3059\u3002\ncityName  = msg.match[1]\nquery = encodeURIComponent msg.match[1]\n\n(.+)\u3067\u30de\u30c3\u30c1\u3057\u305f\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\nrequest = msg.http(\"http://api.openweathermap.org/data/2.5/forecast/weather?q=#{query}&APPID={API\u30ad\u30fc}\")\n    .get()\n\nAPI\u3092\u305f\u305f\u304d\u307e\u3059\u3002\nweather?q=#{query}\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u5730\u540d\u3092API\u306b\u6e21\u3057\u3066\u307e\u3059\u3002\njson = JSON.parse body\n      switch json[\"list\"][0][\"weather\"][0][\"main\"]\n        when \"Clear\"\n          weather = \"\u6674\u308c\"\n        when \"Clouds\"\n          weather = \"\u304f\u3082\u308a\"\n        when \"Rain\"\n          weather = \"\u96e8\"\n        when \"snow\"\n          weather = \"\u96ea\"\n\n\u8fd4\u3063\u3066\u304d\u305fJSON\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u66f8\u304d\u307e\u3059\u3002\njson[\"list\"][0]\u3067\u4eca\u65e5\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3055\u3089\u306b[\"weather\"][0][\"main\"]\u3067\u5929\u6c17\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nWeather API\u3067\u306f\u5929\u6c17\u304c\u82f1\u8a9e\u3067\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u6587\u5b57\u306b\u5fdc\u3058\u3066\u65e5\u672c\u8a9e\u3092\u8fd4\u3057\u307e\u3059\u3002\nicon = json[\"list\"][0][\"weather\"][0][\"icon\"]\ntimestamp = (new Date()).toISOString().replace(/[^0-9]/g, \"\")\n\njson[\"list\"][0][\"weather\"][0][\"icon\"]\u306b\u3088\u3063\u3066\u5929\u6c17\u30a2\u30a4\u30b3\u30f3\u306f\u5909\u308f\u3063\u3066\u308b\u307f\u305f\u3044\u3002\n\"01d\", \"01n\"\u306ed\u3001\uff4e\u306f\u3001d:day\u3001n:night\u306e\u7565\u3063\u307d\u3044\u3002\n\u307e\u305f\u3001Slack\u3067\u306f\uff12\u56de\u76ee\u4ee5\u964d\u306e\u753b\u50cf\u306f\u30b5\u30e0\u30cd\u30a4\u30eb\u3068\u3057\u3066\u8868\u793a\u3055\u308c\u306a\u3044\u3088\u3046\u306a\u306e\u3067timestamp = (new Date()).toISOString().replace(/[^0-9]/g, \"\")\u3092\u753b\u50cf\u540d\u306e\u6700\u5f8c\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\n\u3042\u3068\u306f\u305d\u308c\u3092\nmsg.reply \"#{cityName}\u306e\u5929\u6c17\u306f#{weather}\u3067\u3059 \\n http://openweathermap.org/img/w/#{icon}.png?#{timestamp}\"\n\u3067\u51fa\u529b\u3057\u3066\u3084\u308c\u3070OK\n\u3067\u306f\u3067\u306f\u3084\u3063\u3066\u307f\u307e\u3059\u3002\nmybot> \u90a3\u8987\u306e\u5929\u6c17\u306f\uff1f\nmybot> \u90a3\u8987\u306e\u5929\u6c17\u306f\u6674\u308c\u3067\u3059\n http://openweathermap.org/img/w/02d.png?20160820234350565\n\n\u3044\u3044\u611f\u3058\u3067\u3067\u304d\u307e\u3057\u305f\u3002\n[Hubot\u3067Hotpepper\u30b0\u30eb\u30e1\u30b5\u30fc\u30c1API\u3092\u4f7f\u3063\u3066\u304a\u5e97\u3092\u7d39\u4ecb\u3057\u3066\u304f\u308c\u308b\u3084\u3064\u3092\u4f5c\u3063\u305f](http://qiita.com/kmurae/items/87fb6d5b9b95d2511edc)\u306e\u7d9a\u304d\u3067\u3059\u3002\n\n\u5929\u6c17\u4e88\u5831\u3082\u77e5\u308a\u305f\u3044\u306a\u3068\u601d\u3063\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u56de\u5929\u6c17\u4e88\u5831\u306e\u53d6\u5f97\u306b\u306f[OpenWeatherMap](http://openweathermap.org/)\u306eWeather API\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u3082Slack\u3068\u9023\u643a\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n## API\u30ad\u30fc\u306e\u53d6\u5f97\n[Sign Up](https://home.openweathermap.org/users/sign_up)\u306b\u5fc5\u8981\u60c5\u5831\u3092\u5165\u529b\u3057\u3066API\u30ad\u30fc\u3092\u767a\u884c\u3059\u308b\u3002[price-list](http://openweathermap.org/price)\u306b\u8272\u3005\u30d7\u30e9\u30f3\u304c\u3042\u308b\u3051\u3069\u3001\u52c9\u5f37\u306e\u305f\u3081\u306a\u306e\u3067\u3001Free\u3067\u5341\u5206\u3002\n\u767b\u9332\u304c\u6e08\u3080\u3068API\u30ad\u30fc\u304c\u767a\u884c\u3055\u308c\u307e\u3059\u3002\n\n## \u4f7f\u3063\u3066\u307f\u308b\n\u5b8c\u6210\u5f62\u3092\u5148\u306b\u304a\u898b\u305b\u3057\u307e\u3059\u3002\n\n```\n# Description:\n\nmodule.exports = (robot) ->\n  robot.hear /(.*)\u306e\u5929\u6c17\u306f\uff1f/i, (msg) ->\n\n    cityName  = msg.match[1]\n    query = encodeURIComponent msg.match[1]\n\n    request = msg.http(\"http://api.openweathermap.org/data/2.5/forecast/weather?q=#{query}&APPID={API\u30ad\u30fc}\")\n    .get()\n    request (err, res, body) ->\n      json = JSON.parse body\n      switch json[\"list\"][0][\"weather\"][0][\"main\"]\n        when \"Clear\"\n          weather = \"\u6674\u308c\"\n        when \"Clouds\"\n          weather = \"\u304f\u3082\u308a\"\n        when \"Rain\"\n          weather = \"\u96e8\"\n        when \"snow\"\n          weather = \"\u96ea\"\n\n        icon = json[\"list\"][0][\"weather\"][0][\"icon\"]\n\n      msg.reply \"#{cityName}\u306e\u5929\u6c17\u306f#{weather}\u3067\u3059 \\n http://openweathermap.org/img/w/#{icon}.png\"\n```\n\n### \u8aac\u660e\n```\nmodule.exports = (robot) ->\n  robot.hear /(.*)\u306e\u5929\u6c17\u306f\uff1f/i, (msg) ->\n```\n\u300c\u25ef\u25ef\u306e\u5929\u6c17\u306f\uff1f\u300d\u3068\u3044\u3046\u30d5\u30ec\u30fc\u30ba\u306b\u53cd\u5fdc\u3057\u3066\u51e6\u7406\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u25ef\u25ef\u306e\u90e8\u5206\u306b\u8abf\u3079\u305f\u3044\u5730\u540d\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\n```\ncityName  = msg.match[1]\nquery = encodeURIComponent msg.match[1]\n```\n(.+)\u3067\u30de\u30c3\u30c1\u3057\u305f\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\nrequest = msg.http(\"http://api.openweathermap.org/data/2.5/forecast/weather?q=#{query}&APPID={API\u30ad\u30fc}\")\n    .get()\n```\nAPI\u3092\u305f\u305f\u304d\u307e\u3059\u3002\n`weather?q=#{query}`\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u5730\u540d\u3092API\u306b\u6e21\u3057\u3066\u307e\u3059\u3002\n\n```\njson = JSON.parse body\n      switch json[\"list\"][0][\"weather\"][0][\"main\"]\n        when \"Clear\"\n          weather = \"\u6674\u308c\"\n        when \"Clouds\"\n          weather = \"\u304f\u3082\u308a\"\n        when \"Rain\"\n          weather = \"\u96e8\"\n        when \"snow\"\n          weather = \"\u96ea\"\n```\n\u8fd4\u3063\u3066\u304d\u305fJSON\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u66f8\u304d\u307e\u3059\u3002\n`json[\"list\"][0]`\u3067\u4eca\u65e5\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3055\u3089\u306b`[\"weather\"][0][\"main\"]`\u3067\u5929\u6c17\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nWeather API\u3067\u306f\u5929\u6c17\u304c\u82f1\u8a9e\u3067\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u6587\u5b57\u306b\u5fdc\u3058\u3066\u65e5\u672c\u8a9e\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\n```\nicon = json[\"list\"][0][\"weather\"][0][\"icon\"]\ntimestamp = (new Date()).toISOString().replace(/[^0-9]/g, \"\")\n```\n`json[\"list\"][0][\"weather\"][0][\"icon\"]`\u306b\u3088\u3063\u3066\u5929\u6c17\u30a2\u30a4\u30b3\u30f3\u306f\u5909\u308f\u3063\u3066\u308b\u307f\u305f\u3044\u3002\n`\"01d\", \"01n\"`\u306ed\u3001\uff4e\u306f\u3001d:day\u3001n:night\u306e\u7565\u3063\u307d\u3044\u3002\n\u307e\u305f\u3001Slack\u3067\u306f\uff12\u56de\u76ee\u4ee5\u964d\u306e\u753b\u50cf\u306f\u30b5\u30e0\u30cd\u30a4\u30eb\u3068\u3057\u3066\u8868\u793a\u3055\u308c\u306a\u3044\u3088\u3046\u306a\u306e\u3067`timestamp = (new Date()).toISOString().replace(/[^0-9]/g, \"\")`\u3092\u753b\u50cf\u540d\u306e\u6700\u5f8c\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\u3042\u3068\u306f\u305d\u308c\u3092\n`msg.reply \"#{cityName}\u306e\u5929\u6c17\u306f#{weather}\u3067\u3059 \\n http://openweathermap.org/img/w/#{icon}.png?#{timestamp}\"`\n\u3067\u51fa\u529b\u3057\u3066\u3084\u308c\u3070OK\n\n\u3067\u306f\u3067\u306f\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\n```\nmybot> \u90a3\u8987\u306e\u5929\u6c17\u306f\uff1f\nmybot> \u90a3\u8987\u306e\u5929\u6c17\u306f\u6674\u308c\u3067\u3059\n http://openweathermap.org/img/w/02d.png?20160820234350565\n```\n\n\u3044\u3044\u611f\u3058\u3067\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n", "tags": ["Hubot"]}