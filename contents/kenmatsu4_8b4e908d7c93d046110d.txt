{"tags": ["Python2.7", "\u7d71\u8a08\u5b66", "\u7d71\u8a08", "statistics", "matplotlib"], "context": " More than 1 year has passed since last update.\u6700\u8fd1\u3001\u6a5f\u68b0\u5b66\u7fd2\u3001\u4eba\u5de5\u77e5\u80fd\u7b49\u304c\u6d41\u884c\u3063\u3066\u304a\u308a\u305d\u306e\u57fa\u76e4\u3068\u306a\u308b\u7d71\u8a08\u5b66\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u304c\u91cd\u8981\u3068\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u7d71\u8a08\u5b66\u306e\u4e2d\u3067\u3082\u305d\u306e\u52b9\u679c\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u56de\u5e30\u5206\u6790\u306e\u539f\u7406\u306b\u3064\u3044\u3066Python\u3067\u8a08\u7b97\u3057\u305f\u308a\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u305f\u308a\u3057\u306a\u304c\u3089\u6982\u5ff5\u7684\u306b\u7406\u89e3\u3067\u304d\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u8aac\u660e\u3092\u8a66\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u7d71\u8a08\u306e\u5c02\u9580\u5bb6\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u3082\u3057\u3054\u6307\u6458\u30fb\u30b3\u30e1\u30f3\u30c8\u3042\u308a\u307e\u3057\u305f\u3089\u305c\u3072\u3054\u9023\u7d61\u304f\u3060\u3055\u3044\u3002\u6570\u5b66\u7684\u306b\u53b3\u5bc6\u3067\u306a\u3044\u70b9\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044...\n\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n\u307e\u305a\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5165\u624b\u3057\u307e\u3059\u3002\n\ncars\u30c7\u30fc\u30bf\n\u3053\u306e\u30da\u30fc\u30b8\u3067\u306fPython\u3092\u7528\u3044\u3066\u8aac\u660e\u3092\u9032\u3081\u307e\u3059\u304c\u3001\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u306f\u7d71\u8a08\u89e3\u6790\u30bd\u30d5\u30c8R\u306e\u306a\u304b\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306ecars\u30c7\u30fc\u30bf\u3092\u7528\u3044\u307e\u3059\u3002\u3053\u3053\u304b\u3089csv\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002(\u305f\u3060\u3057\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306eDescription\u306b\u3088\u308b\u30681920\u5e74\u4ee3\u306e\u30c7\u30fc\u30bf\u306e\u3088\u3046\u306a\u306e\u3067\u3001\u3042\u304f\u307e\u3067\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306e\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u306d\u3002)\n\u3053\u306e\u89e3\u8aac\u3067\u306f\"cars.csv\"\u3068\u3057\u540d\u524d\u3092\u3064\u3051\u3066\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3068\u3057\u3066\u8aac\u660e\u3092\u3057\u307e\u3059\u3002\nteble definition of cars data\n[,0]    index\n[,1]    speed   numeric Speed (mph)\n[,2]    dist    numeric Stopping distance (ft)\n\n\u30c7\u30fc\u30bf\u306e\u8a73\u7d30\u8aac\u660e\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u304c\u3001\u8eca\u306e\u30b9\u30d4\u30fc\u30c9\u3068\u3001\u305d\u306e\u30b9\u30d4\u30fc\u30c9\u3067\u30d6\u30ec\u30fc\u30ad\u3092\u8e0f\u3093\u3060\u6642\u306e\u505c\u6b62\u8ddd\u96e2\u309250\u30bb\u30c3\u30c8\u96c6\u3081\u305f\u30c7\u30fc\u30bf\u3067\u3059\u3002\n\nPython\u306e\u6e96\u5099\nPython\u306f\u30d0\u30fc\u30b8\u30e7\u30f32.7\u3092\u4f7f\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u4e0b\u8a18\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3059\u3067\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n - Numpy\n - Matplotlib\n\u3053\u308c\u3089\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\n\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u307e\u305a\u306f\u6563\u5e03\u56f3\u3092\u63cf\u304d\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u3064\u304b\u3080\u306b\u306f\u3001\u3084\u306f\u308a\u30b0\u30e9\u30d5\u3092\u63cf\u304f\u306e\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\u3055\u3066\u3001\u5143\u30c7\u30fc\u30bf\u306f\u30de\u30a4\u30eb\u3084\u3089\u3001\u30d5\u30a3\u30fc\u30c8\u3084\u3089\u65e5\u672c\u4eba\u306b\u306a\u3058\u307f\u304c\u306a\u3044\u5358\u4f4d\u306a\u306e\u3067\u3001\u30e1\u30fc\u30c8\u30eb\u8a18\u8f09\u306b\u5358\u4f4d\u5909\u63db\u3092\u884c\u3044\u307e\u3059\u3002\n1\u30d5\u30a3\u30fc\u30c8\u3000\u2252 0.3048\u30e1\u30fc\u30c8\u30eb\n1 mph\u3000\u3000\u3000\u2252  1.61 km/h \n\u306a\u306e\u3067\u3001\u4e0b\u8a18\u306e\u901a\u308a\u30c7\u30fc\u30bf\u306e\u5358\u4f4d\u5909\u63db\u3092\u3002\n\ndata= np.loadtxt('cars.csv',delimiter=',',skiprows=1)\ndata[:,1] = map(lambda x: x * 1.61, data[:,1])    # mph \u304b\u3089 km/h \u306b\u5909\u63db\ndata[:,2] = map(lambda y: y * 0.3048, data[:,2])  # ft \u304b\u3089  m \u306b\u5909\u63db\n\n\u305d\u3057\u3066\u305d\u306e\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b\u6563\u5e03\u56f3\u3092\u63cf\u304d\u307e\u3059\u3002\n\nfig = plt.figure(figsize=(10,6))\nax = fig.add_subplot(111)\nax.set_title(\"Stopping Distances of Cars\")\nax.set_xlabel(\"speed(km/h)\")\nax.set_ylabel(\"distance(m)\")\nplt.scatter(data[:,1],data[:,2])\n\n\n\n\u56de\u5e30\u5206\u6790\u3068\u306f\n\u3053\u306e\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u56de\u5e30\u5206\u6790\u3092\u4f7f\u3046\u3068\u3001\u3042\u308b\u30b9\u30d4\u30fc\u30c9\u3067\u8d70\u3063\u3066\u3044\u308b\u8eca\u304c\u6025\u30d6\u30ec\u30fc\u30ad\u3092\u8e0f\u3093\u3060\u6642\u306b\u3069\u308c\u304f\u3089\u3044\u306e\u8ddd\u96e2\u3067\u5b8c\u5168\u306b\u30b9\u30c8\u30c3\u30d7\u3067\u304d\u308b\u304b\u3001\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a\u3001\n\ndistance = \\alpha * speed + \\beta\ndistance=\u03b1\u2217speed+\u03b2distance=\u03b1\u2217speed+\u03b2{\ndistance = \\alpha * speed + \\beta\n}\n\u306e\u3088\u3046\u306b\uff11\u6b21\u65b9\u7a0b\u5f0f\u3067\u8868\u3057\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002\u3053\u308c\u3092\u5358\u56de\u5e30\u5206\u6790\u3068\u3044\u3044\u307e\u3059\u3002\uff08\u5909\u6570\u304c\uff11\u3064\u306a\u306e\u3067\u3001\u201d\u5358\"\uff09\u3053\u306e\u76f4\u7dda\u5f53\u3066\u306f\u3081\u3092\uff11\u6b21\u8fd1\u4f3c\u3068\u547c\u3093\u3060\u308a\u3057\u307e\u3059\u3002\u03b1\u03b1\\alpha\u306f\u76f4\u7dda\u306e\u50be\u304d\u3001\u03b2\u03b2\\beta\u306f\u5207\u7247\u306e\u5024\u3067\u3059\u306d\u3002\u3053\u306e\u76f4\u7dda\u3092\u8fd1\u4f3c\u76f4\u7dda\u3068\u547c\u3073\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u308c\u3092\u76ee\u8996\u3067\u306a\u3093\u3068\u306a\u304f\u3001\u76f4\u7dda\u3092\u5f53\u3066\u306f\u3081\u3066\u307f\u307e\u3059\u3002\u76ee\u8996\u3067\u5f53\u3066\u306f\u3081\u305f\u30b0\u30e9\u30d5\u304c\u4e0b\u8a18\u3067\u3059\u304c\u3001\u03b1\u03b1\\alpha\u30920.74, \u03b2\u03b2\\beta\u3092\u22125\u3068\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3069\u3046\u3067\u3059\uff1f\u306a\u3093\u3068\u306a\u304f\u3053\u3093\u306a\u76f4\u7dda\u304c\u5f53\u3066\u306f\u3081\u3089\u308c\u305d\u3046\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff1f\n# y = 0.74x -5 \u306e\u76f4\u7dda ((0,-5),(50,32)\u3092\u901a\u308b)\nx = [0,  50]\ny = [-5, 32]\nplt.plot(x,y)\n\n\n\n\u3067\u3082\u3001\u3042\u304f\u307e\u3067\u3053\u308c\u306f\u76ee\u8996\u3067\u5f53\u3066\u306f\u3081\u3066\u307f\u305f\u3060\u3051\u306a\u306e\u3067\u3001\u672c\u5f53\u306b\u6700\u9069\u306a\u76f4\u7dda\u304b\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u3067\u306f\u6700\u9069\u306a\u03b1\u03b1\\alpha\u3068\u03b2\u03b2\\beta\u3092\u6c42\u3081\u308b\u3084\u308a\u65b9\u3001\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u6700\u5c0f\u4e8c\u4e57\u6cd5\n\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3068\u306f\u306a\u3093\u3067\u3057\u3087\u3046\u3001\u4f55\u3092\"\u6700\u5c0f\"\u306b\u3059\u308b\u3093\u3067\u3057\u3087\u3046\uff1f\u4f55\u3092\"\u4e8c\u4e57\"\u3059\u308b\u306e\u3067\u3057\u3087\u3046\uff1f\n\n\u4f55\u3092\u6700\u5c0f\u306b\u3059\u308b\uff1f\n\u6700\u5c0f\u306b\u3059\u308b\u306e\u306f\u3001\u76f4\u7dda\u3068\u30c7\u30fc\u30bf\u306e\u8aa4\u5dee\u306a\u3093\u3067\u3059\u3002\n\u8aa4\u5dee\u3068\u306f\u5404\u70b9\u304b\u3089\u5782\u76f4\u306a\u7dda\u3092\u8fd1\u4f3c\u76f4\u7dda\u307e\u3067\u5f15\u3044\u305f\u3082\u306e\u3092\u8868\u3057\u307e\u3059\u3002\u4e0b\u8a18\u306e\u30b0\u30e9\u30d5\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n# line: y = 0.74 -5\nx = [0,  50]\ny = [-5, 32]\nplt.plot(x,y)\n\n# draw errors\nfor d in data:\n    plt.plot([d[1],d[1]],[d[2],d[1]*0.74-5],\"k\")\n\n\n\u3053\u306e\u9ed2\u3044\u7dda\u3067\u8868\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u8aa4\u5dee\u3067\u3059\u306d\u3002\u76f4\u611f\u7684\u306b\u3082\u3053\u306e\u8aa4\u5dee\u3092\u5168\u90e8\u8db3\u3057\u305f\u3082\u306e\u304c\u4e00\u756a\u5c11\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u76f4\u7dda\u304c\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306b\u4e00\u756a\u30d5\u30a3\u30c3\u30c8\u3057\u3066\u3044\u308b\u611f\u3058\u304c\u3057\u307e\u3059\u306d\u3002\n\u5148\u307b\u3069\u76ee\u8996\u3067\u5f53\u3066\u306f\u3081\u305f\u76f4\u7dda\u306b\u5bfe\u3057\u3066\u3001\u03b1\u03b1\\alpha\u3084\u03b2\u03b2\\beta\u3092\u5909\u3048\u305f\u6642\u306e\u3069\u3046\u306a\u308b\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306f\u03b1\u03b1\\alpha\u3092\u5909\u3048\u3066\u307f\u305f\u76f4\u7dda\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n# line: y = 0.54x -5\nx = [0,  50]\ny = [-5, 72]\nplt.plot(x,y)\n\n# draw errors\nfor d in data:\n    plt.plot([d[1],d[1]],[d[2],d[1]*1.54-5],\"k\")\n\n\n\u03b2\u03b2\\beta\u3092\u5909\u3048\u305f\u3082\u306e\u3082\u898b\u3066\u307f\u307e\u3059\u3002\n\n# line: y = 0.74x +15\nx = [0,  50]\ny = [15, 52]\nplt.plot(x,y)\n\n# draw errors\nfor d in data:\n    plt.plot([d[1],d[1]],[d[2],d[1]*0.74+15],\"k\")\n\n\n\u3069\u3046\u3067\u3057\u3087\u3046\uff1f\u6700\u521d\u306b\u76ee\u8996\u3067\u826f\u3055\u305d\u3046\u306a\u8fd1\u4f3c\u76f4\u7dda\u3092\u5f15\u3044\u305f\u3082\u306e\u3068\u3001\u3042\u3048\u3066\u03b1\u03b1\\alpha\u3001\u03b2\u03b2\\beta\u3092\u305a\u3089\u3057\u305f\u3082\u306e\u3092\u6bd4\u3079\u308b\u3068\u3053\u306e\u8aa4\u5dee\u304c\u5c11\u306a\u305d\u3046\u306b\u898b\u3048\u307e\u3059\u3088\u306d\u3002\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3068\u306f\u3053\u306e\u8aa4\u5dee\u3092\u6700\u5c0f\u306b\u3059\u308b\u03b1\u03b1\\alpha\u3001\u03b2\u03b2\\beta\u3092\u6c42\u3081\u308b\u65b9\u6cd5\u306a\u306e\u3067\u3059\u3002\n\n\u4f55\u3092\u4e8c\u4e57\u3059\u308b\uff1f\n\u3053\u308c\u3082\u3001\u8aa4\u5dee\u3092\u4e8c\u4e57\u3059\u308b\u3093\u3067\u3059\u3002\u306a\u305c\u304b\u3068\u3044\u3046\u3068\u3001\u76f4\u7dda\u3068\u5404\u30c7\u30fc\u30bf\u306e\u70b9\u3092\u7d50\u3076\u76f4\u7dda\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u76f4\u7dda\u306e\u4e0a\u306b\u3042\u308b\u30c7\u30fc\u30bf\u306f\u8aa4\u5dee\u304c\u30d7\u30e9\u30b9\u3001\u4e0b\u306b\u3042\u308b\u30c7\u30fc\u30bf\u306f\u30de\u30a4\u30ca\u30b9\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4e8c\u4e57\u3057\u3066\u30d7\u30e9\u30b9\u30de\u30a4\u30ca\u30b9\u3092\u3068\u3063\u3066\u5168\u3066\u30d7\u30e9\u30b9\u306b\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u3002\n\n\u8a08\u7b97\u3057\u3088\u3046\n\u3067\u306f\u3001\u4f55\u3092\u4e8c\u4e57\u3057\u3066\u3001\u6700\u5c0f\u306b\u3059\u308b\u304b\u304c\u308f\u304b\u3063\u305f\u3068\u3053\u308d\u3067\u5177\u4f53\u7684\u306a\u8a08\u7b97\u3092\u9032\u3081\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u7528\u8a9e\u306e\u5b9a\u7fa9\u304b\u3089\u3002\niii\u756a\u76ee\u306e\u30c7\u30fc\u30bf\u3092xi,yixi,yix_i, y_i\u3068\u3057\u3066\u3001\u305d\u306e\u8fd1\u4f3c\u5024\u3092\u02c6yiy^i\\hat{y}_i\u3068\u8868\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u8aa4\u5dee\u3092 \u03f5i\u03f5i\\epsilon_i\u3068\u3057\u307e\u3059\u300219\u756a\u76ee\u306e\u30c7\u30fc\u30bf\u3092\u62e1\u5927\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\ni = 18\nx_i = data[i,1]\ny_i = data[i,2]\ny_hat = x_i*0.74-5\nax.set_ylim(0,y_i+3)\nax.set_xlim(x_i-5,x_i+5)\n\nplt.plot([x_i,x_i],[y_i,y_hat],\"k\")\nplt.plot(x,y)\n\nplt.scatter([x_i],[y_i])\n\n\n\u3055\u3066\u3001\u3053\u306e\u8aa4\u5dee\u3092\u4e8c\u4e57\u3057\u3066\u30c7\u30fc\u30bf\u5168\u3066\u8db3\u3057\u5408\u308f\u305b\u308b\u3068\u3001\n\nS = \\sum_i^n\\epsilon_i^2=\\sum_i^n (y_i-\\hat{y}_i )^2\n\nS=n\u2211i\u03f52i=n\u2211i(yi\u2212\u02c6yi)2S=\u2211in\u03f52i=\u2211in(yi\u2212y^i)2{\nS = \\sum_i^n\\epsilon_i^2=\\sum_i^n (y_i-\\hat{y}_i )^2\n\n}\n\u3068\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\\hat{y}_i = \\alpha  x_i + \\beta\n\n\u02c6yi=\u03b1xi+\u03b2y^i=\u03b1xi+\u03b2{\n\\hat{y}_i = \\alpha  x_i + \\beta\n\n}\n\u306a\u306e\u3067\u3001\u8fd1\u4f3c\u5024\u30c7\u30fc\u30bf\u3092\u4ee3\u5165\u3059\u308b\u3068\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n\nS = \\sum_i^n \\epsilon_i^2 = \\sum_i^n  ( y_i-\\alpha x_i - \\beta )^2 \n\nS=n\u2211i\u03f52i=n\u2211i(yi\u2212\u03b1xi\u2212\u03b2)2S=\u2211in\u03f52i=\u2211in(yi\u2212\u03b1xi\u2212\u03b2)2{\nS = \\sum_i^n \\epsilon_i^2 = \\sum_i^n  ( y_i-\\alpha x_i - \\beta )^2 \n\n}\n\u3053\u306eSSS\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u03b1,\u03b2\u03b1,\u03b2\\alpha, \\beta\u3067\u5fae\u5206\u3092\u3057\u3066\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\u3053\u3068\u3067\u6700\u9069\u306a\u8fd1\u4f3c\u76f4\u7dda\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u3053\u306eSSS\u3092\u03b1\u03b1\\alpha\u306e\u65b9\u7a0b\u5f0f\u3067\u8868\u3059\u3068\u3001\n\nS(\\alpha) = \\left( \\sum_i^n x_i^2 \\right) \\alpha^2\n + 2\\left( \\sum_i^n (x_i\\beta - x_i y_i ) \\right) \\alpha \n + n\\beta^2 - 2\\beta\\sum_i^n y_i + \\sum_i^n y_i^2\nS(\u03b1)=(n\u2211ix2i)\u03b12+2(n\u2211i(xi\u03b2\u2212xiyi))\u03b1+n\u03b22\u22122\u03b2n\u2211iyi+n\u2211iy2i{\nS(\\alpha) = \\left( \\sum_i^n x_i^2 \\right) \\alpha^2\n + 2\\left( \\sum_i^n (x_i\\beta - x_i y_i ) \\right) \\alpha \n + n\\beta^2 - 2\\beta\\sum_i^n y_i + \\sum_i^n y_i^2\n}\n\u3068\u306a\u308b\u3002\u3053\u306eS(\u03b1)S(\\alpha)\u3063\u3066\u3069\u3093\u306a\u95a2\u6570\u3067\u3057\u3087\u3046\uff1f\u03b1\\alpha\u306e\uff12\u6b21\u95a2\u6570\u3067\u3059\u306d\u3002\n\u03b1\\alpha\u306e\u4fc2\u6570\u306f\u4e8c\u4e57\u306e\u548c\u306a\u306e\u3067\u5e38\u306b\uff10\u304b\u30d7\u30e9\u30b9\u306e\u5024\u3067\u3059\u306e\u3067\u4e0b\u306b\u51f8\u306a2\u6b21\u95a2\u6570\u3068\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001\u5f62\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u3064\u3051\u308b\u305f\u3081\u3001\u4eee\u306b\u03b2=0\\beta=0\u3060\u3063\u305f\u3068\u3057\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nS(\\alpha) = \\left( \\sum_i^n x_i^2 \\right) \\alpha^2\n - 2\\left( \\sum_i^n x_i y_i \\right) \\alpha \n + \\sum_i^n y_i^2  \u3000...\u3000 (if \\beta = 0 )\nS(\u03b1)=(n\u2211ix2i)\u03b12\u22122(n\u2211ixiyi)\u03b1+n\u2211iy2i\u3000...\u3000(if\u03b2=0){\nS(\\alpha) = \\left( \\sum_i^n x_i^2 \\right) \\alpha^2\n - 2\\left( \\sum_i^n x_i y_i \\right) \\alpha \n + \\sum_i^n y_i^2  \u3000...\u3000 (if \\beta = 0 )\n}\n\u3068\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u306d\u3002\n\u30c7\u30fc\u30bf\u304b\u3089\u3053\u306e\u4fc2\u6570\u3092\u8a08\u7b97\u3057\u307e\u3057\u3087\u3046\u3002\nsum_x2 = np.sum([x ** 2 for x in data[:,1]])   # \\sum x_i^2 \nsum_y2 = np.sum([x ** 2 for y in data[:,2]])   # \\sum y_i^2 \nsum_xy = data[:,1].dot(data[:,2])              # \\sum x_i y_i\n\nprint sum_x2\n>>> 34288.2988\n\nprint sum_y2\n>>> 11603.8684051\n\nprint sum_xy\n>>> 18884.194896\n\n\u3088\u3063\u3066\u3001\n\nS(\\alpha) \u2252 34288 \\alpha^2 - 37768 \\alpha + 11604 \n\nS(\u03b1)\u225234288\u03b12\u221237768\u03b1+11604{\nS(\\alpha) \u2252 34288 \\alpha^2 - 37768 \\alpha + 11604 \n\n}\n\u3053\u306e\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\u3068\u3001\nx1 = np.linspace(-1,5,200)\nx1_2 = np.array([x ** 2 for x in x1])\n\n#34288\u03b12\u221237768\u03b1+ 11604\ny1 = np.array(34288 * x1_2) - (37768 * x1) + 11604\n\nplt.plot(x1,y1)\n\n\n# Y = 11604\u306e\u7dda\nplt.plot([-1,5],[11604, 11604])\nplt.plot([0,0],[13000, 0], \"--k\")\n\n\n\u03b1\\alpha\u3092\u305a\u3089\u3057\u3066\u3044\u304f\u3068\u3001\u3069\u3053\u304b\u3067\u6700\u5c0f\u5024\u304c\u898b\u3064\u304b\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u03b2\\beta\u3082\u540c\u69d8\u306b\u3001\n\nS(\\beta) = n\\beta^2\n+ 2 \\left( \\sum_i^n (x_i\\alpha - y_i) \\right) \\beta\n+ \\alpha^2\\sum_i^n x_i^2 - 2\\alpha \\sum_i^n x_iy_i + \\sum_i^n y_i^2\n\nS(\u03b2)=n\u03b22+2(n\u2211i(xi\u03b1\u2212yi))\u03b2+\u03b12n\u2211ix2i\u22122\u03b1n\u2211ixiyi+n\u2211iy2i{\nS(\\beta) = n\\beta^2\n+ 2 \\left( \\sum_i^n (x_i\\alpha - y_i) \\right) \\beta\n+ \\alpha^2\\sum_i^n x_i^2 - 2\\alpha \\sum_i^n x_iy_i + \\sum_i^n y_i^2\n\n}\n\u4eee\u306b\u03b1=0\\alpha=0\u3060\u3063\u305f\u3068\u3057\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nS(\\beta) = n\\beta^2\n- 2 \\left( \\sum_i^n y_i \\right) \\beta + \\sum_i^n y_i^2\n  \u3000...\u3000 (if \\alpha = 0 )\nS(\u03b2)=n\u03b22\u22122(n\u2211iyi)\u03b2+n\u2211iy2i\u3000...\u3000(if\u03b1=0){\nS(\\beta) = n\\beta^2\n- 2 \\left( \\sum_i^n y_i \\right) \\beta + \\sum_i^n y_i^2\n  \u3000...\u3000 (if \\alpha = 0 )\n}\n\u5148\u307b\u3069\u8a08\u7b97\u3057\u305f\u5024\u306b\u2211yi \\sum y_i\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u8a08\u7b97\u3059\u308b\u3068(\u3064\u3044\u3067\u306b\u2211xi\\sum x_i\u3082)\u3001\n\nsum_x = np.sum(data[:,1])\nprint sum_x\n>>> 1239.7\n\nsum_y = np.sum(data[:,2])\nprint sum_y\n>>> 655.0152\n\n\u3088\u3063\u3066\u3001\u03b2\\beta\u306b\u95a2\u3059\u308b2\u6b21\u65b9\u7a0b\u5f0f\u306f\n\nS(\\beta) \u2252 50\\beta^2 - 1310 \\beta + 11604\n\nS(\u03b2)\u225250\u03b22\u22121310\u03b2+11604{\nS(\\beta) \u2252 50\\beta^2 - 1310 \\beta + 11604\n\n}\n\u3068\u306a\u308a\u3001\u30b0\u30e9\u30d5\u3092\u63cf\u304f\u3068 \n\nx1 = np.arange(-100,100,0.01)\nx1_2 = np.array([x ** 2 for x in x1])\nn = len(data[:,2])\n\n# n\u03b2^2-1310\u03b2+11604 \ny1 = np.array(n * x1_2) - (1310 * x1) + 11604 \n\nfig = plt.figure(figsize=(10,6))\nax = fig.add_subplot(111)\nax.set_xlim(-5,30)\nax.set_ylim(0,20000)\nax.set_xlabel(\"beta\")\nplt.plot([-50,30],[11604,11604],\"g\")\nplt.plot([0,0],[30000,0],\"--k\")\nplt.plot(x1,y1)\n\n\n\n\n\u3068\u3001\u3084\u306f\u308a\u03b2\\beta\u3092\u305a\u3089\u3057\u3066\u3044\u304f\u3068\u3001\u3042\u308b\u03b2\\beta\u3067\u6700\u5c0f\u5024\u3092\u53d6\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u305d\u306e\uff12\u306b\u3064\u3065\u304d\u307e\u3059\u3002\n\n\u6700\u8fd1\u3001\u6a5f\u68b0\u5b66\u7fd2\u3001\u4eba\u5de5\u77e5\u80fd\u7b49\u304c\u6d41\u884c\u3063\u3066\u304a\u308a\u305d\u306e\u57fa\u76e4\u3068\u306a\u308b\u7d71\u8a08\u5b66\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u304c\u91cd\u8981\u3068\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u7d71\u8a08\u5b66\u306e\u4e2d\u3067\u3082\u305d\u306e\u52b9\u679c\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u56de\u5e30\u5206\u6790\u306e\u539f\u7406\u306b\u3064\u3044\u3066Python\u3067\u8a08\u7b97\u3057\u305f\u308a\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u305f\u308a\u3057\u306a\u304c\u3089\u6982\u5ff5\u7684\u306b\u7406\u89e3\u3067\u304d\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u8aac\u660e\u3092\u8a66\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u7d71\u8a08\u306e\u5c02\u9580\u5bb6\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u3082\u3057\u3054\u6307\u6458\u30fb\u30b3\u30e1\u30f3\u30c8\u3042\u308a\u307e\u3057\u305f\u3089\u305c\u3072\u3054\u9023\u7d61\u304f\u3060\u3055\u3044\u3002\u6570\u5b66\u7684\u306b\u53b3\u5bc6\u3067\u306a\u3044\u70b9\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044...\n\n##\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8###\n\u307e\u305a\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5165\u624b\u3057\u307e\u3059\u3002\n\n###cars\u30c7\u30fc\u30bf###\n\u3053\u306e\u30da\u30fc\u30b8\u3067\u306fPython\u3092\u7528\u3044\u3066\u8aac\u660e\u3092\u9032\u3081\u307e\u3059\u304c\u3001\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u306f\u7d71\u8a08\u89e3\u6790\u30bd\u30d5\u30c8R\u306e\u306a\u304b\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306ecars\u30c7\u30fc\u30bf\u3092\u7528\u3044\u307e\u3059\u3002[\u3053\u3053](https://www.dropbox.com/s/bjmd4g22ubxxrgn/cars.csv?dl=0)\u304b\u3089csv\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002(\u305f\u3060\u3057\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306eDescription\u306b\u3088\u308b\u30681920\u5e74\u4ee3\u306e\u30c7\u30fc\u30bf\u306e\u3088\u3046\u306a\u306e\u3067\u3001\u3042\u304f\u307e\u3067\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306e\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u306d\u3002)\n\u3053\u306e\u89e3\u8aac\u3067\u306f\"cars.csv\"\u3068\u3057\u540d\u524d\u3092\u3064\u3051\u3066\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3068\u3057\u3066\u8aac\u660e\u3092\u3057\u307e\u3059\u3002\n\n**teble definition of cars data**\n\n```\n[,0]    index\n[,1]\tspeed\tnumeric\tSpeed (mph)\n[,2]\tdist\tnumeric\tStopping distance (ft)\n```\n\n\u30c7\u30fc\u30bf\u306e\u8a73\u7d30\u8aac\u660e\u306f[\u3053\u3061\u3089](http://www.is.titech.ac.jp/~mase/mase/html.jp/temp/cars.jp.html)\u306b\u3042\u308a\u307e\u3059\u304c\u3001\u8eca\u306e\u30b9\u30d4\u30fc\u30c9\u3068\u3001\u305d\u306e\u30b9\u30d4\u30fc\u30c9\u3067\u30d6\u30ec\u30fc\u30ad\u3092\u8e0f\u3093\u3060\u6642\u306e\u505c\u6b62\u8ddd\u96e2\u309250\u30bb\u30c3\u30c8\u96c6\u3081\u305f\u30c7\u30fc\u30bf\u3067\u3059\u3002\n\n###Python\u306e\u6e96\u5099###\nPython\u306f\u30d0\u30fc\u30b8\u30e7\u30f32.7\u3092\u4f7f\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u4e0b\u8a18\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3059\u3067\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n - Numpy\n - Matplotlib\n\n\u3053\u308c\u3089\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```py\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n```\n\n\n###\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f###\n\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u307e\u305a\u306f\u6563\u5e03\u56f3\u3092\u63cf\u304d\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u3064\u304b\u3080\u306b\u306f\u3001\u3084\u306f\u308a\u30b0\u30e9\u30d5\u3092\u63cf\u304f\u306e\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\n\u3055\u3066\u3001\u5143\u30c7\u30fc\u30bf\u306f\u30de\u30a4\u30eb\u3084\u3089\u3001\u30d5\u30a3\u30fc\u30c8\u3084\u3089\u65e5\u672c\u4eba\u306b\u306a\u3058\u307f\u304c\u306a\u3044\u5358\u4f4d\u306a\u306e\u3067\u3001\u30e1\u30fc\u30c8\u30eb\u8a18\u8f09\u306b\u5358\u4f4d\u5909\u63db\u3092\u884c\u3044\u307e\u3059\u3002\n\n1\u30d5\u30a3\u30fc\u30c8\u3000\u2252 0.3048\u30e1\u30fc\u30c8\u30eb\n1 mph\u3000\u3000\u3000\u2252  1.61 km/h \n\u306a\u306e\u3067\u3001\u4e0b\u8a18\u306e\u901a\u308a\u30c7\u30fc\u30bf\u306e\u5358\u4f4d\u5909\u63db\u3092\u3002\n\n```py\n\ndata= np.loadtxt('cars.csv',delimiter=',',skiprows=1)\ndata[:,1] = map(lambda x: x * 1.61, data[:,1])    # mph \u304b\u3089 km/h \u306b\u5909\u63db\ndata[:,2] = map(lambda y: y * 0.3048, data[:,2])  # ft \u304b\u3089  m \u306b\u5909\u63db\n```\n\n\n\u305d\u3057\u3066\u305d\u306e\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b\u6563\u5e03\u56f3\u3092\u63cf\u304d\u307e\u3059\u3002\n\n```py\n\nfig = plt.figure(figsize=(10,6))\nax = fig.add_subplot(111)\nax.set_title(\"Stopping Distances of Cars\")\nax.set_xlabel(\"speed(km/h)\")\nax.set_ylabel(\"distance(m)\")\nplt.scatter(data[:,1],data[:,2])\n```\n\n![cardistans_scatter.png](https://qiita-image-store.s3.amazonaws.com/0/50670/e427d0d2-fb0d-cf79-7b61-dc9aaff17533.png)\n\n\n### \u56de\u5e30\u5206\u6790\u3068\u306f ###\n\u3053\u306e\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u56de\u5e30\u5206\u6790\u3092\u4f7f\u3046\u3068\u3001\u3042\u308b\u30b9\u30d4\u30fc\u30c9\u3067\u8d70\u3063\u3066\u3044\u308b\u8eca\u304c\u6025\u30d6\u30ec\u30fc\u30ad\u3092\u8e0f\u3093\u3060\u6642\u306b\u3069\u308c\u304f\u3089\u3044\u306e\u8ddd\u96e2\u3067\u5b8c\u5168\u306b\u30b9\u30c8\u30c3\u30d7\u3067\u304d\u308b\u304b\u3001\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a\u3001\n\n```math\n\ndistance = \\alpha * speed + \\beta\n```\n\u306e\u3088\u3046\u306b\uff11\u6b21\u65b9\u7a0b\u5f0f\u3067\u8868\u3057\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002\u3053\u308c\u3092\u5358\u56de\u5e30\u5206\u6790\u3068\u3044\u3044\u307e\u3059\u3002\uff08\u5909\u6570\u304c\uff11\u3064\u306a\u306e\u3067\u3001\u201d\u5358\"\uff09\u3053\u306e\u76f4\u7dda\u5f53\u3066\u306f\u3081\u3092\uff11\u6b21\u8fd1\u4f3c\u3068\u547c\u3093\u3060\u308a\u3057\u307e\u3059\u3002$\\alpha$\u306f\u76f4\u7dda\u306e\u50be\u304d\u3001$\\beta$\u306f\u5207\u7247\u306e\u5024\u3067\u3059\u306d\u3002\u3053\u306e\u76f4\u7dda\u3092\u8fd1\u4f3c\u76f4\u7dda\u3068\u547c\u3073\u307e\u3057\u3087\u3046\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-02-15 15.23.38.png](https://qiita-image-store.s3.amazonaws.com/0/50670/ee83b7e4-1a5c-5dbc-2633-dca41cb07e16.png)\n\n\n\u3053\u308c\u3092\u76ee\u8996\u3067\u306a\u3093\u3068\u306a\u304f\u3001\u76f4\u7dda\u3092\u5f53\u3066\u306f\u3081\u3066\u307f\u307e\u3059\u3002\u76ee\u8996\u3067\u5f53\u3066\u306f\u3081\u305f\u30b0\u30e9\u30d5\u304c\u4e0b\u8a18\u3067\u3059\u304c\u3001$\\alpha$\u30920.74, $\\beta$\u3092\u22125\u3068\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3069\u3046\u3067\u3059\uff1f\u306a\u3093\u3068\u306a\u304f\u3053\u3093\u306a\u76f4\u7dda\u304c\u5f53\u3066\u306f\u3081\u3089\u308c\u305d\u3046\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff1f\n\n``` py\n# y = 0.74x -5 \u306e\u76f4\u7dda ((0,-5),(50,32)\u3092\u901a\u308b)\nx = [0,  50]\ny = [-5, 32]\nplt.plot(x,y)\n\n```\n![cardistans_scatter2.png](https://qiita-image-store.s3.amazonaws.com/0/50670/bea66649-f568-0ce8-25b7-0783f002f5a2.png)\n\n\u3067\u3082\u3001\u3042\u304f\u307e\u3067\u3053\u308c\u306f\u76ee\u8996\u3067\u5f53\u3066\u306f\u3081\u3066\u307f\u305f\u3060\u3051\u306a\u306e\u3067\u3001\u672c\u5f53\u306b\u6700\u9069\u306a\u76f4\u7dda\u304b\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u3067\u306f\u6700\u9069\u306a$\\alpha$\u3068$\\beta$\u3092\u6c42\u3081\u308b\u3084\u308a\u65b9\u3001\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n##\u6700\u5c0f\u4e8c\u4e57\u6cd5##\n\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3068\u306f\u306a\u3093\u3067\u3057\u3087\u3046\u3001\u4f55\u3092\"\u6700\u5c0f\"\u306b\u3059\u308b\u3093\u3067\u3057\u3087\u3046\uff1f\u4f55\u3092\"\u4e8c\u4e57\"\u3059\u308b\u306e\u3067\u3057\u3087\u3046\uff1f\n\n###\u4f55\u3092\u6700\u5c0f\u306b\u3059\u308b\uff1f###\n\n\u6700\u5c0f\u306b\u3059\u308b\u306e\u306f\u3001\u76f4\u7dda\u3068\u30c7\u30fc\u30bf\u306e\u8aa4\u5dee\u306a\u3093\u3067\u3059\u3002\n\u8aa4\u5dee\u3068\u306f\u5404\u70b9\u304b\u3089\u5782\u76f4\u306a\u7dda\u3092\u8fd1\u4f3c\u76f4\u7dda\u307e\u3067\u5f15\u3044\u305f\u3082\u306e\u3092\u8868\u3057\u307e\u3059\u3002\u4e0b\u8a18\u306e\u30b0\u30e9\u30d5\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n```py\n\n# line: y = 0.74 -5\nx = [0,  50]\ny = [-5, 32]\nplt.plot(x,y)\n\n# draw errors\nfor d in data:\n    plt.plot([d[1],d[1]],[d[2],d[1]*0.74-5],\"k\")\n```\n\n![cardistans_scatter_with_errors.png](https://qiita-image-store.s3.amazonaws.com/0/50670/dcccf5e5-077b-9a4f-b0fc-060feaf46990.png)\n\n\u3053\u306e\u9ed2\u3044\u7dda\u3067\u8868\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u8aa4\u5dee\u3067\u3059\u306d\u3002\u76f4\u611f\u7684\u306b\u3082\u3053\u306e\u8aa4\u5dee\u3092\u5168\u90e8\u8db3\u3057\u305f\u3082\u306e\u304c\u4e00\u756a\u5c11\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u76f4\u7dda\u304c\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306b\u4e00\u756a\u30d5\u30a3\u30c3\u30c8\u3057\u3066\u3044\u308b\u611f\u3058\u304c\u3057\u307e\u3059\u306d\u3002\n\n\u5148\u307b\u3069\u76ee\u8996\u3067\u5f53\u3066\u306f\u3081\u305f\u76f4\u7dda\u306b\u5bfe\u3057\u3066\u3001$\\alpha$\u3084$\\beta$\u3092\u5909\u3048\u305f\u6642\u306e\u3069\u3046\u306a\u308b\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u306f$\\alpha$\u3092\u5909\u3048\u3066\u307f\u305f\u76f4\u7dda\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py\n\n# line: y = 0.54x -5\nx = [0,  50]\ny = [-5, 72]\nplt.plot(x,y)\n\n# draw errors\nfor d in data:\n    plt.plot([d[1],d[1]],[d[2],d[1]*1.54-5],\"k\")\n```\n\n![cardistans_scatter_with_errors_a.png](https://qiita-image-store.s3.amazonaws.com/0/50670/ce979daa-b0e6-2e7d-a0bf-0647096a9afc.png)\n\n\n$\\beta$\u3092\u5909\u3048\u305f\u3082\u306e\u3082\u898b\u3066\u307f\u307e\u3059\u3002\n\n```py\n\n# line: y = 0.74x +15\nx = [0,  50]\ny = [15, 52]\nplt.plot(x,y)\n\n# draw errors\nfor d in data:\n    plt.plot([d[1],d[1]],[d[2],d[1]*0.74+15],\"k\")\n```\n\n![cardistans_scatter_with_errors_b.png](https://qiita-image-store.s3.amazonaws.com/0/50670/697dfc17-9dfe-55ee-c494-6080edfdeefd.png)\n\n\u3069\u3046\u3067\u3057\u3087\u3046\uff1f\u6700\u521d\u306b\u76ee\u8996\u3067\u826f\u3055\u305d\u3046\u306a\u8fd1\u4f3c\u76f4\u7dda\u3092\u5f15\u3044\u305f\u3082\u306e\u3068\u3001\u3042\u3048\u3066$\\alpha$\u3001$\\beta$\u3092\u305a\u3089\u3057\u305f\u3082\u306e\u3092\u6bd4\u3079\u308b\u3068\u3053\u306e\u8aa4\u5dee\u304c\u5c11\u306a\u305d\u3046\u306b\u898b\u3048\u307e\u3059\u3088\u306d\u3002\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3068\u306f\u3053\u306e\u8aa4\u5dee\u3092\u6700\u5c0f\u306b\u3059\u308b$\\alpha$\u3001$\\beta$\u3092\u6c42\u3081\u308b\u65b9\u6cd5\u306a\u306e\u3067\u3059\u3002\n\n###\u4f55\u3092\u4e8c\u4e57\u3059\u308b\uff1f###\n\u3053\u308c\u3082\u3001\u8aa4\u5dee\u3092\u4e8c\u4e57\u3059\u308b\u3093\u3067\u3059\u3002\u306a\u305c\u304b\u3068\u3044\u3046\u3068\u3001\u76f4\u7dda\u3068\u5404\u30c7\u30fc\u30bf\u306e\u70b9\u3092\u7d50\u3076\u76f4\u7dda\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u76f4\u7dda\u306e\u4e0a\u306b\u3042\u308b\u30c7\u30fc\u30bf\u306f\u8aa4\u5dee\u304c\u30d7\u30e9\u30b9\u3001\u4e0b\u306b\u3042\u308b\u30c7\u30fc\u30bf\u306f\u30de\u30a4\u30ca\u30b9\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4e8c\u4e57\u3057\u3066\u30d7\u30e9\u30b9\u30de\u30a4\u30ca\u30b9\u3092\u3068\u3063\u3066\u5168\u3066\u30d7\u30e9\u30b9\u306b\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u3002\n\n\n###\u8a08\u7b97\u3057\u3088\u3046###\n\n\u3067\u306f\u3001\u4f55\u3092\u4e8c\u4e57\u3057\u3066\u3001\u6700\u5c0f\u306b\u3059\u308b\u304b\u304c\u308f\u304b\u3063\u305f\u3068\u3053\u308d\u3067\u5177\u4f53\u7684\u306a\u8a08\u7b97\u3092\u9032\u3081\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u7528\u8a9e\u306e\u5b9a\u7fa9\u304b\u3089\u3002\n$i$\u756a\u76ee\u306e\u30c7\u30fc\u30bf\u3092$x_i, y_i$\u3068\u3057\u3066\u3001\u305d\u306e\u8fd1\u4f3c\u5024\u3092$\\hat{y}_i$\u3068\u8868\u3057\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u8aa4\u5dee\u3092 $\\epsilon_i$\u3068\u3057\u307e\u3059\u300219\u756a\u76ee\u306e\u30c7\u30fc\u30bf\u3092\u62e1\u5927\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py\n\ni = 18\nx_i = data[i,1]\ny_i = data[i,2]\ny_hat = x_i*0.74-5\nax.set_ylim(0,y_i+3)\nax.set_xlim(x_i-5,x_i+5)\n\nplt.plot([x_i,x_i],[y_i,y_hat],\"k\")\nplt.plot(x,y)\n\nplt.scatter([x_i],[y_i])\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-02-15 16.23.03.png](https://qiita-image-store.s3.amazonaws.com/0/50670/0710ff57-41f8-78b4-78e4-066bff1360f6.png)\n\n\u3055\u3066\u3001\u3053\u306e\u8aa4\u5dee\u3092\u4e8c\u4e57\u3057\u3066\u30c7\u30fc\u30bf\u5168\u3066\u8db3\u3057\u5408\u308f\u305b\u308b\u3068\u3001\n\n```math\n\nS = \\sum_i^n\\epsilon_i^2=\\sum_i^n (y_i-\\hat{y}_i )^2\n\n```\n\n\u3068\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\n```math\n\n\\hat{y}_i = \\alpha  x_i + \\beta\n\n```\n\u306a\u306e\u3067\u3001\u8fd1\u4f3c\u5024\u30c7\u30fc\u30bf\u3092\u4ee3\u5165\u3059\u308b\u3068\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n\n```math\n\nS = \\sum_i^n \\epsilon_i^2 = \\sum_i^n  ( y_i-\\alpha x_i - \\beta )^2 \n\n```\n\n\u3053\u306e$S$\u3092\u30d1\u30e9\u30e1\u30fc\u30bf$\\alpha, \\beta$\u3067\u5fae\u5206\u3092\u3057\u3066\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\u3053\u3068\u3067\u6700\u9069\u306a\u8fd1\u4f3c\u76f4\u7dda\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u3053\u306e$S$\u3092$\\alpha$\u306e\u65b9\u7a0b\u5f0f\u3067\u8868\u3059\u3068\u3001\n\n```math\n\nS(\\alpha) = \\left( \\sum_i^n x_i^2 \\right) \\alpha^2\n + 2\\left( \\sum_i^n (x_i\\beta - x_i y_i ) \\right) \\alpha \n + n\\beta^2 - 2\\beta\\sum_i^n y_i + \\sum_i^n y_i^2\n```\n\u3068\u306a\u308b\u3002\u3053\u306e$S(\\alpha)$\u3063\u3066\u3069\u3093\u306a\u95a2\u6570\u3067\u3057\u3087\u3046\uff1f$\\alpha$\u306e\uff12\u6b21\u95a2\u6570\u3067\u3059\u306d\u3002\n$\\alpha$\u306e\u4fc2\u6570\u306f\u4e8c\u4e57\u306e\u548c\u306a\u306e\u3067\u5e38\u306b\uff10\u304b\u30d7\u30e9\u30b9\u306e\u5024\u3067\u3059\u306e\u3067\u4e0b\u306b\u51f8\u306a2\u6b21\u95a2\u6570\u3068\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001\u5f62\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u3064\u3051\u308b\u305f\u3081\u3001\u4eee\u306b$\\beta=0$\u3060\u3063\u305f\u3068\u3057\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```math\n\nS(\\alpha) = \\left( \\sum_i^n x_i^2 \\right) \\alpha^2\n - 2\\left( \\sum_i^n x_i y_i \\right) \\alpha \n + \\sum_i^n y_i^2  \u3000...\u3000 (if \\beta = 0 )\n```\n\u3068\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u306d\u3002\n\u30c7\u30fc\u30bf\u304b\u3089\u3053\u306e\u4fc2\u6570\u3092\u8a08\u7b97\u3057\u307e\u3057\u3087\u3046\u3002\n\n```py\nsum_x2 = np.sum([x ** 2 for x in data[:,1]])   # \\sum x_i^2 \nsum_y2 = np.sum([x ** 2 for y in data[:,2]])   # \\sum y_i^2 \nsum_xy = data[:,1].dot(data[:,2])              # \\sum x_i y_i\n\nprint sum_x2\n>>> 34288.2988\n\nprint sum_y2\n>>> 11603.8684051\n\nprint sum_xy\n>>> 18884.194896\n```\n\n\u3088\u3063\u3066\u3001\n\n```math\n\nS(\\alpha) \u2252 34288 \\alpha^2 - 37768 \\alpha + 11604 \n\n```\n\n\u3053\u306e\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\u3068\u3001\n\n```py\nx1 = np.linspace(-1,5,200)\nx1_2 = np.array([x ** 2 for x in x1])\n\n#34288\u03b12\u221237768\u03b1+ 11604\ny1 = np.array(34288 * x1_2) - (37768 * x1) + 11604\n\nplt.plot(x1,y1)\n\n\n# Y = 11604\u306e\u7dda\nplt.plot([-1,5],[11604, 11604])\nplt.plot([0,0],[13000, 0], \"--k\")\n```\n![minimize_a3.png](https://qiita-image-store.s3.amazonaws.com/0/50670/fd06f1bb-0a5b-9b36-f6ae-3839af81e194.png)\n\n\n$\\alpha$\u3092\u305a\u3089\u3057\u3066\u3044\u304f\u3068\u3001\u3069\u3053\u304b\u3067\u6700\u5c0f\u5024\u304c\u898b\u3064\u304b\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n$\\beta$\u3082\u540c\u69d8\u306b\u3001\n\n```math\n\nS(\\beta) = n\\beta^2\n+ 2 \\left( \\sum_i^n (x_i\\alpha - y_i) \\right) \\beta\n+ \\alpha^2\\sum_i^n x_i^2 - 2\\alpha \\sum_i^n x_iy_i + \\sum_i^n y_i^2\n\n```\n\n\u4eee\u306b$\\alpha=0$\u3060\u3063\u305f\u3068\u3057\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```math\n\nS(\\beta) = n\\beta^2\n- 2 \\left( \\sum_i^n y_i \\right) \\beta + \\sum_i^n y_i^2\n  \u3000...\u3000 (if \\alpha = 0 )\n```\n\n\u5148\u307b\u3069\u8a08\u7b97\u3057\u305f\u5024\u306b$ \\sum y_i$\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u8a08\u7b97\u3059\u308b\u3068(\u3064\u3044\u3067\u306b$\\sum x_i$\u3082)\u3001\n\n```py\n\nsum_x = np.sum(data[:,1])\nprint sum_x\n>>> 1239.7\n\nsum_y = np.sum(data[:,2])\nprint sum_y\n>>> 655.0152\n```\n\u3088\u3063\u3066\u3001$\\beta$\u306b\u95a2\u3059\u308b2\u6b21\u65b9\u7a0b\u5f0f\u306f\n\n```math\n\nS(\\beta) \u2252 50\\beta^2 - 1310 \\beta + 11604\n\n```\n\n\u3068\u306a\u308a\u3001\u30b0\u30e9\u30d5\u3092\u63cf\u304f\u3068 \n\n``` py\n\nx1 = np.arange(-100,100,0.01)\nx1_2 = np.array([x ** 2 for x in x1])\nn = len(data[:,2])\n\n# n\u03b2^2-1310\u03b2+11604 \ny1 = np.array(n * x1_2) - (1310 * x1) + 11604 \n\nfig = plt.figure(figsize=(10,6))\nax = fig.add_subplot(111)\nax.set_xlim(-5,30)\nax.set_ylim(0,20000)\nax.set_xlabel(\"beta\")\nplt.plot([-50,30],[11604,11604],\"g\")\nplt.plot([0,0],[30000,0],\"--k\")\nplt.plot(x1,y1)\n\n\n```\n\n![minimize_b3.png](https://qiita-image-store.s3.amazonaws.com/0/50670/98bd0c76-604f-ebca-d590-f934a97b15ca.png)\n\n\n\n\u3068\u3001\u3084\u306f\u308a$\\beta$\u3092\u305a\u3089\u3057\u3066\u3044\u304f\u3068\u3001\u3042\u308b$\\beta$\u3067\u6700\u5c0f\u5024\u3092\u53d6\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\n[\u305d\u306e\uff12](http://qiita.com/kenmatsu4/items/1e37da1d55292035d985)\u306b\u3064\u3065\u304d\u307e\u3059\u3002\n"}