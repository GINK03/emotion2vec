{"context": " More than 1 year has passed since last update.\n\nCocos2d-x\u3067\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u306b\u30dc\u30bf\u30f3\u3092\u5909\u5316\u3055\u305b\u305f\u3044\nCocos2d-x(3.4) \u3067\u306f\u3001Menu\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u5358\u306b\u30dc\u30bf\u30f3\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nauto button = MenuItemImage::create(\n    \"button_normal.png\",\n    \"button_pressed.png\",\n    \"button_disabled.png\",\n    [](Ref* ref){\n        // do anything if clicking\n});\nauto menuButton = Menu::create(button, NULL);\nauto winSize = Director::getInstance()->getWinSize();\nmenuButton->setPosition(Vec2(winSize.width / 2.0, winSize.height / 2.0));\nthis->addChild(menuButton);\n\n\u30b9\u30de\u30db\u5411\u3051\u30a2\u30d7\u30ea\u3092\u958b\u767a\u3059\u308b\u969b\u306b\u306f\u4fbf\u5229\u306a\u6a5f\u80fd\u3067\u306f\u3042\u308b\u304c\u3001\u30de\u30a6\u30b9\u3092\u4f7f\u7528\u3059\u308bPC\u5411\u3051\u306e\u30a2\u30d7\u30ea\u306b\u306f\u82e5\u5e72\u6a5f\u80fd\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u601d\u3046\u3002\nMenuItemImage::create\u306e\u5f15\u6570\u306f\u3001\u30b9\u30de\u30db\u5bfe\u8c61\u306e\u5834\u5408\u3001\n\u300c\u30dc\u30bf\u30f3\u306b\u89e6\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u3066\u3044\u308b\u6700\u4e2d\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u975e\u6d3b\u6027\u6642\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u304b\u3089\u624b\u3092\u96e2\u3057\u305f\u969b\u306e\u51e6\u7406\u300d\u3067\u3042\u308b\u304c\u3001\nPC\u5bfe\u8c61\u306e\u5834\u5408\u306f\u3001\n\u300c\u30de\u30a6\u30b9\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u3092\u5de6\u30af\u30ea\u30c3\u30af\u3057\u3066\u3044\u308b\u6700\u4e2d\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u975e\u6d3b\u6027\u6642\u306e\u753b\u50cf\u300d\u300c\u30de\u30a6\u30b9\u5de6\u30dc\u30bf\u30f3\u3092\u96e2\u3057\u305f\u969b\u306e\u51e6\u7406\u300d\u3068\u306a\u308b\u3002\n\u3064\u307e\u308a\u3001\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u306e\u51e6\u7406\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002\n\u3053\u308c\u306fPC\u5411\u3051\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u306f\u81f4\u547d\u7684\u3068\u306a\u308b\u3002\n\n\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u51e6\u7406\u306e\u5b9f\u88c5\n\uff08\u79c1\u306e\u5834\u5408\u306f\u30dc\u30bf\u30f3\u3092\u975e\u6d3b\u6027\u306b\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3068\u601d\u3063\u305f\u306e\u3067\uff09\u975e\u6d3b\u6027\u6642\u306e\u753b\u50cf\u3092\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u306e\u753b\u50cf\u306b\u5145\u3066\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n2015.03.29 \u30dc\u30bf\u30f3\u3092\u96e2\u3057\u305f\u969b\u306e\u51e6\u7406\u306b\u4e0d\u5099\u304c\u3042\u3063\u305f\u306e\u3067\u4fee\u6b63\n\nMouseOverMenuItem.h\n//  MouseOverMenuItem.h\n//  MouseOver\n//\n//  Created by Baris Atamer on 3/15/15.\n//  Modified by reah_at\n#ifndef __MouseOver__MouseOverMenuItem__\n#define __MouseOver__MouseOverMenuItem__\n\n#include \"cocos2d.h\"\n\nUSING_NS_CC;\n\nclass MouseOverMenuItem : public MenuItemImage\n{\npublic:\n\n    ~MouseOverMenuItem();\n\n    static MouseOverMenuItem * create(const std::string &normalImage, const std::string &pressedImage, const std::string &focusImage);\n    void setCursorInCallback(const std::function<void(Ref*)> &callback);\n    void setButtonPressedCallback(const std::function<void(Ref*)> &callback);\n    void setButtonReleasedCallback(const std::function<void(Ref*)> &callback);\n\nprotected:\n    EventListenerMouse* mouseListener;\n\nprivate:\n    void onMouseMove(Event *event);\n    void onMouseDown(Event *event);\n    void onMouseUp(Event *event);\n    void setMouseListener();\n    bool isMousePressing = false;\n    // \u30ab\u30fc\u30bd\u30eb\u304c\u30dc\u30bf\u30f3\u306b\u4e57\u3063\u305f\u969b\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n    std::function<void(Ref*)> cursor_in_callback = nullptr;\n    // \u30ab\u30fc\u30bd\u30eb\u304c\u30dc\u30bf\u30f3\u306b\u4e57\u3063\u305f\u3068\u304d\u3001\u521d\u56de\u306e\u307f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u52d5\u4f5c\u3055\u305b\u308b\n    bool isCursorInCallbackEnable = true;\n    // \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3068\u304d\uff08\u96e2\u3057\u305f\u6642\u3067\u306f\u306a\u3044\uff09\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n    std::function<void(Ref*)> button_pressed_callback = nullptr;\n    // \u30dc\u30bf\u30f3\u3092\u96e2\u3057\u305f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n    std::function<void(Ref*)> button_released_callback = nullptr;\n};\n\n#endif /* defined(__MouseOver__MouseOverMenuItem__) */\n\n\n\nMouseOverMenuItem.cpp\n//  MouseOverMenuItem.cpp\n//  MouseOver\n//\n//  Created by Baris Atamer on 3/15/15.\n//  Modified by reah_at\n#include \"MouseOverMenuItem.h\"\n\nMouseOverMenuItem::~MouseOverMenuItem()\n{\n    _eventDispatcher->removeEventListener(mouseListener);\n}\n\nMouseOverMenuItem* MouseOverMenuItem::create(const std::string &normalImage, const std::string &pressedImage, const std::string &focusImage)\n{\n    MouseOverMenuItem *ret = new (std::nothrow) MouseOverMenuItem();\n\n    if (ret && ret->initWithNormalImage(normalImage, pressedImage, focusImage, nullptr))\n    {\n        ret->setMouseListener();\n        ret->autorelease();\n        return ret;\n    }\n    CC_SAFE_DELETE(ret);\n    return nullptr;\n}\n\n// \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u51e6\u7406\nvoid MouseOverMenuItem::onMouseMove(Event *event)\n{\n    EventMouse* e = (EventMouse*)event;\n    Size visibleSize = Director::getInstance()->getVisibleSize();\n    Vec2 locationInNode = convertToNodeSpace(Vec2(e->getCursorX(), e->getCursorY()));\n\n    Rect r = Rect(0, 0, getContentSize().width, getContentSize().height);\n\n    // \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\n    if (!isMousePressing){\n        if (r.containsPoint(locationInNode)){\n            selected();\n            // \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u30bb\u30c3\u30c8\u6e08\u307f\u3001\u304b\u3064\u4e00\u5ea6\u3082\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\n            if (cursor_in_callback && isCursorInCallbackEnable){\n                cursor_in_callback(this);\n                isCursorInCallbackEnable = false;\n            }\n        }\n        else{\n            unselected();\n            isCursorInCallbackEnable = true;\n        }\n    }\n}\n\n// \u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u51e6\u7406\uff08\u96e2\u3057\u305f\u6642\u3067\u306f\u306a\u3044\uff09\nvoid MouseOverMenuItem::onMouseDown(Event* event){\n    EventMouse* e = (EventMouse*)event;\n    Size visibleSize = Director::getInstance()->getVisibleSize();\n    Vec2 locationInNode = convertToNodeSpace(Vec2(e->getCursorX(), e->getCursorY()));\n\n    Rect r = Rect(0, 0, getContentSize().width, getContentSize().height);\n\n    if (r.containsPoint(locationInNode)){\n        setEnabled(false);\n        if (button_pressed_callback) button_pressed_callback(this);\n        isMousePressing = true;\n    }\n\n}\n\n// \u30dc\u30bf\u30f3\u3092\u96e2\u3057\u305f\u3068\u304d\nvoid MouseOverMenuItem::onMouseUp(Event* event){\n    EventMouse* e = (EventMouse*)event;\n    Size visibleSize = Director::getInstance()->getVisibleSize();\n    Vec2 locationInNode = convertToNodeSpace(Vec2(e->getCursorX(), e->getCursorY()));\n\n    Rect r = Rect(0, 0, getContentSize().width, getContentSize().height);\n\n    if (r.containsPoint(locationInNode)){\n        setEnabled(true);\n        isMousePressing = false;\n        if (button_released_callback) button_released_callback(this);\n    }\n}\n\n\nvoid MouseOverMenuItem::setCursorInCallback(const std::function<void(Ref*)> &callback){\n    cursor_in_callback = callback;\n}\nvoid MouseOverMenuItem::setButtonPressedCallback(const std::function<void(Ref*)> &callback){\n    button_pressed_callback = callback;\n}\nvoid MouseOverMenuItem::setButtonReleasedCallback(const std::function<void(Ref*)> &callback){\n    button_released_callback = callback;\n}\n\nvoid MouseOverMenuItem::setMouseListener()\n{\n    mouseListener = EventListenerMouse::create();\n    mouseListener->onMouseMove = CC_CALLBACK_1(MouseOverMenuItem::onMouseMove, this);\n    mouseListener->onMouseDown = CC_CALLBACK_1(MouseOverMenuItem::onMouseDown, this);\n    mouseListener->onMouseUp   = CC_CALLBACK_1(MouseOverMenuItem::onMouseUp, this);\n\n    _eventDispatcher->addEventListenerWithSceneGraphPriority(mouseListener, this);\n}\n\n\n\n\u4f7f\u7528\u65b9\u6cd5\n    auto button = MouseOverMenuItem::create(\"button_normal.png\", \"button_pressed.png\", \"button_focus.png\");\n    button->setCursorInCallback([](Ref* ref){\n        log(\"cursor enter callback\");\n    });\n    button->setButtonPressedCallback([](Ref* ref){\n        log(\"button pressed callback\");\n    });\n    button->setButtonReleasedCallback([](Ref* ref){\n        log(\"button released callback\");\n    });\n\n    button->setPosition(Vec2(winSize.width*.5, winSize.height*.5));\n\n    // create menu, it's an autorelease object\n    auto menu = Menu::create(button, NULL);\n    menu->setPosition(Vec2::ZERO);\n    this->addChild(menu, 1);\n\n\n\u4f7f\u7528\u6642\u306b\u306f\u3001\u753b\u50cf\u3092\u5148\u306b\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304d\u3001\u5f8c\u304b\u3089\u305d\u308c\u305e\u308c\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\u672c\u6765\u4f7f\u7528\u3059\u308b\u3079\u304d\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u683c\u7d0d\u7528\u306e\u5909\u6570\u304c\u4f7f\u308f\u308c\u306a\u3044\u306a\u3069\u3001\u3044\u308d\u3044\u308d\u3068\u554f\u984c\u306f\u3042\u308b\u3002\n\u305d\u3082\u305d\u3082PC\u5411\u3051\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b9\u30de\u30db\u3067\u306e\u52d5\u4f5c\u78ba\u8a8d\u306f\u3057\u3066\u3044\u306a\u3044\u3002\n\u3068\u306f\u3044\u3048\u3001\u3053\u306e\u65b9\u6cd5\u3067\u304b\u306a\u308a\u697d\u306b\u30dc\u30bf\u30f3\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n\u6700\u5f8c\u306b\u3001stackoverflow\u306b\u3066\u65b9\u6cd5\u3092\u793a\u3057\u3066\u304f\u3060\u3055\u3063\u305fBaris Atamer\u6c0f\u306b\u611f\u8b1d\u3057\u305f\u3044\u3002\nhttp://stackoverflow.com/questions/29047615/cocos2d-x-change-menuitemimage-on-cursor-focus\n## Cocos2d-x\u3067\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u306b\u30dc\u30bf\u30f3\u3092\u5909\u5316\u3055\u305b\u305f\u3044\nCocos2d-x(3.4) \u3067\u306f\u3001`Menu`\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u5358\u306b\u30dc\u30bf\u30f3\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```cpp\nauto button = MenuItemImage::create(\n    \"button_normal.png\",\n    \"button_pressed.png\",\n    \"button_disabled.png\",\n    [](Ref* ref){\n        // do anything if clicking\n});\nauto menuButton = Menu::create(button, NULL);\nauto winSize = Director::getInstance()->getWinSize();\nmenuButton->setPosition(Vec2(winSize.width / 2.0, winSize.height / 2.0));\nthis->addChild(menuButton);\n```\n\u30b9\u30de\u30db\u5411\u3051\u30a2\u30d7\u30ea\u3092\u958b\u767a\u3059\u308b\u969b\u306b\u306f\u4fbf\u5229\u306a\u6a5f\u80fd\u3067\u306f\u3042\u308b\u304c\u3001\u30de\u30a6\u30b9\u3092\u4f7f\u7528\u3059\u308bPC\u5411\u3051\u306e\u30a2\u30d7\u30ea\u306b\u306f\u82e5\u5e72\u6a5f\u80fd\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u601d\u3046\u3002\nMenuItemImage::create\u306e\u5f15\u6570\u306f\u3001\u30b9\u30de\u30db\u5bfe\u8c61\u306e\u5834\u5408\u3001\n\u300c\u30dc\u30bf\u30f3\u306b\u89e6\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u3066\u3044\u308b\u6700\u4e2d\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u975e\u6d3b\u6027\u6642\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u304b\u3089\u624b\u3092\u96e2\u3057\u305f\u969b\u306e\u51e6\u7406\u300d\u3067\u3042\u308b\u304c\u3001\nPC\u5bfe\u8c61\u306e\u5834\u5408\u306f\u3001\n\u300c\u30de\u30a6\u30b9\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u3092\u5de6\u30af\u30ea\u30c3\u30af\u3057\u3066\u3044\u308b\u6700\u4e2d\u306e\u753b\u50cf\u300d\u300c\u30dc\u30bf\u30f3\u975e\u6d3b\u6027\u6642\u306e\u753b\u50cf\u300d\u300c\u30de\u30a6\u30b9\u5de6\u30dc\u30bf\u30f3\u3092\u96e2\u3057\u305f\u969b\u306e\u51e6\u7406\u300d\u3068\u306a\u308b\u3002\n\n\u3064\u307e\u308a\u3001\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u306e\u51e6\u7406\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002\n\u3053\u308c\u306fPC\u5411\u3051\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u306f\u81f4\u547d\u7684\u3068\u306a\u308b\u3002\n\n## \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u51e6\u7406\u306e\u5b9f\u88c5\n\uff08\u79c1\u306e\u5834\u5408\u306f\u30dc\u30bf\u30f3\u3092\u975e\u6d3b\u6027\u306b\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3068\u601d\u3063\u305f\u306e\u3067\uff09\u975e\u6d3b\u6027\u6642\u306e\u753b\u50cf\u3092\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u306e\u753b\u50cf\u306b\u5145\u3066\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n\n\n2015.03.29 \u30dc\u30bf\u30f3\u3092\u96e2\u3057\u305f\u969b\u306e\u51e6\u7406\u306b\u4e0d\u5099\u304c\u3042\u3063\u305f\u306e\u3067\u4fee\u6b63\n\n```cpp:MouseOverMenuItem.h\n//  MouseOverMenuItem.h\n//  MouseOver\n//\n//  Created by Baris Atamer on 3/15/15.\n//  Modified by reah_at\n#ifndef __MouseOver__MouseOverMenuItem__\n#define __MouseOver__MouseOverMenuItem__\n\n#include \"cocos2d.h\"\n\nUSING_NS_CC;\n\nclass MouseOverMenuItem : public MenuItemImage\n{\npublic:\n\n\t~MouseOverMenuItem();\n\n\tstatic MouseOverMenuItem * create(const std::string &normalImage, const std::string &pressedImage, const std::string &focusImage);\n\tvoid setCursorInCallback(const std::function<void(Ref*)> &callback);\n\tvoid setButtonPressedCallback(const std::function<void(Ref*)> &callback);\n\tvoid setButtonReleasedCallback(const std::function<void(Ref*)> &callback);\n\nprotected:\n\tEventListenerMouse* mouseListener;\n\nprivate:\n\tvoid onMouseMove(Event *event);\n\tvoid onMouseDown(Event *event);\n\tvoid onMouseUp(Event *event);\n\tvoid setMouseListener();\n\tbool isMousePressing = false;\n\t// \u30ab\u30fc\u30bd\u30eb\u304c\u30dc\u30bf\u30f3\u306b\u4e57\u3063\u305f\u969b\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n\tstd::function<void(Ref*)> cursor_in_callback = nullptr;\n\t// \u30ab\u30fc\u30bd\u30eb\u304c\u30dc\u30bf\u30f3\u306b\u4e57\u3063\u305f\u3068\u304d\u3001\u521d\u56de\u306e\u307f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u52d5\u4f5c\u3055\u305b\u308b\n\tbool isCursorInCallbackEnable = true;\n\t// \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3068\u304d\uff08\u96e2\u3057\u305f\u6642\u3067\u306f\u306a\u3044\uff09\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n\tstd::function<void(Ref*)> button_pressed_callback = nullptr;\n\t// \u30dc\u30bf\u30f3\u3092\u96e2\u3057\u305f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n\tstd::function<void(Ref*)> button_released_callback = nullptr;\n};\n\n#endif /* defined(__MouseOver__MouseOverMenuItem__) */\n```\n\n```cpp:MouseOverMenuItem.cpp\n//  MouseOverMenuItem.cpp\n//  MouseOver\n//\n//  Created by Baris Atamer on 3/15/15.\n//  Modified by reah_at\n#include \"MouseOverMenuItem.h\"\n\nMouseOverMenuItem::~MouseOverMenuItem()\n{\n\t_eventDispatcher->removeEventListener(mouseListener);\n}\n\nMouseOverMenuItem* MouseOverMenuItem::create(const std::string &normalImage, const std::string &pressedImage, const std::string &focusImage)\n{\n\tMouseOverMenuItem *ret = new (std::nothrow) MouseOverMenuItem();\n\n\tif (ret && ret->initWithNormalImage(normalImage, pressedImage, focusImage, nullptr))\n\t{\n\t\tret->setMouseListener();\n\t\tret->autorelease();\n\t\treturn ret;\n\t}\n\tCC_SAFE_DELETE(ret);\n\treturn nullptr;\n}\n\n// \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u51e6\u7406\nvoid MouseOverMenuItem::onMouseMove(Event *event)\n{\n\tEventMouse* e = (EventMouse*)event;\n\tSize visibleSize = Director::getInstance()->getVisibleSize();\n\tVec2 locationInNode = convertToNodeSpace(Vec2(e->getCursorX(), e->getCursorY()));\n\n\tRect r = Rect(0, 0, getContentSize().width, getContentSize().height);\n\n\t// \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\n\tif (!isMousePressing){\n\t\tif (r.containsPoint(locationInNode)){\n\t\t\tselected();\n\t\t\t// \u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u30bb\u30c3\u30c8\u6e08\u307f\u3001\u304b\u3064\u4e00\u5ea6\u3082\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\n\t\t\tif (cursor_in_callback && isCursorInCallbackEnable){\n\t\t\t\tcursor_in_callback(this);\n\t\t\t\tisCursorInCallbackEnable = false;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tunselected();\n\t\t\tisCursorInCallbackEnable = true;\n\t\t}\n\t}\n}\n\n// \u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u51e6\u7406\uff08\u96e2\u3057\u305f\u6642\u3067\u306f\u306a\u3044\uff09\nvoid MouseOverMenuItem::onMouseDown(Event* event){\n\tEventMouse* e = (EventMouse*)event;\n\tSize visibleSize = Director::getInstance()->getVisibleSize();\n\tVec2 locationInNode = convertToNodeSpace(Vec2(e->getCursorX(), e->getCursorY()));\n\n\tRect r = Rect(0, 0, getContentSize().width, getContentSize().height);\n\n\tif (r.containsPoint(locationInNode)){\n\t\tsetEnabled(false);\n\t\tif (button_pressed_callback) button_pressed_callback(this);\n\t\tisMousePressing = true;\n\t}\n\t\n}\n\n// \u30dc\u30bf\u30f3\u3092\u96e2\u3057\u305f\u3068\u304d\nvoid MouseOverMenuItem::onMouseUp(Event* event){\n\tEventMouse* e = (EventMouse*)event;\n\tSize visibleSize = Director::getInstance()->getVisibleSize();\n\tVec2 locationInNode = convertToNodeSpace(Vec2(e->getCursorX(), e->getCursorY()));\n\n\tRect r = Rect(0, 0, getContentSize().width, getContentSize().height);\n\n\tif (r.containsPoint(locationInNode)){\n\t    setEnabled(true);\n\t    isMousePressing = false;\n\t    if (button_released_callback) button_released_callback(this);\n\t}\n}\n\n\nvoid MouseOverMenuItem::setCursorInCallback(const std::function<void(Ref*)> &callback){\n\tcursor_in_callback = callback;\n}\nvoid MouseOverMenuItem::setButtonPressedCallback(const std::function<void(Ref*)> &callback){\n\tbutton_pressed_callback = callback;\n}\nvoid MouseOverMenuItem::setButtonReleasedCallback(const std::function<void(Ref*)> &callback){\n\tbutton_released_callback = callback;\n}\n\nvoid MouseOverMenuItem::setMouseListener()\n{\n\tmouseListener = EventListenerMouse::create();\n\tmouseListener->onMouseMove = CC_CALLBACK_1(MouseOverMenuItem::onMouseMove, this);\n\tmouseListener->onMouseDown = CC_CALLBACK_1(MouseOverMenuItem::onMouseDown, this);\n\tmouseListener->onMouseUp   = CC_CALLBACK_1(MouseOverMenuItem::onMouseUp, this);\n\t\n\t_eventDispatcher->addEventListenerWithSceneGraphPriority(mouseListener, this);\n}\n```\n\n```cpp:\u4f7f\u7528\u65b9\u6cd5\n\tauto button = MouseOverMenuItem::create(\"button_normal.png\", \"button_pressed.png\", \"button_focus.png\");\n\tbutton->setCursorInCallback([](Ref* ref){\n\t\tlog(\"cursor enter callback\");\n\t});\n\tbutton->setButtonPressedCallback([](Ref* ref){\n\t\tlog(\"button pressed callback\");\n\t});\n\tbutton->setButtonReleasedCallback([](Ref* ref){\n\t\tlog(\"button released callback\");\n\t});\n\n\tbutton->setPosition(Vec2(winSize.width*.5, winSize.height*.5));\n\n\t// create menu, it's an autorelease object\n\tauto menu = Menu::create(button, NULL);\n\tmenu->setPosition(Vec2::ZERO);\n\tthis->addChild(menu, 1);\n```\n\n\u4f7f\u7528\u6642\u306b\u306f\u3001\u753b\u50cf\u3092\u5148\u306b\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304d\u3001\u5f8c\u304b\u3089\u305d\u308c\u305e\u308c\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\n\u672c\u6765\u4f7f\u7528\u3059\u308b\u3079\u304d\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u683c\u7d0d\u7528\u306e\u5909\u6570\u304c\u4f7f\u308f\u308c\u306a\u3044\u306a\u3069\u3001\u3044\u308d\u3044\u308d\u3068\u554f\u984c\u306f\u3042\u308b\u3002\n\u305d\u3082\u305d\u3082PC\u5411\u3051\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b9\u30de\u30db\u3067\u306e\u52d5\u4f5c\u78ba\u8a8d\u306f\u3057\u3066\u3044\u306a\u3044\u3002\n\u3068\u306f\u3044\u3048\u3001\u3053\u306e\u65b9\u6cd5\u3067\u304b\u306a\u308a\u697d\u306b\u30dc\u30bf\u30f3\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n\n\n\u6700\u5f8c\u306b\u3001stackoverflow\u306b\u3066\u65b9\u6cd5\u3092\u793a\u3057\u3066\u304f\u3060\u3055\u3063\u305fBaris Atamer\u6c0f\u306b\u611f\u8b1d\u3057\u305f\u3044\u3002\nhttp://stackoverflow.com/questions/29047615/cocos2d-x-change-menuitemimage-on-cursor-focus\n", "tags": ["cocos2d-x3.4"]}