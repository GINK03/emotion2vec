{"context": "\u524d\u56de\u306fGR-COTTON\u3068\u3044\u3046\u30dc\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306fWIO-NODE\u3092\u4f7f\u7528\u3057\u3066\u540c\u69d8\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f5c\u308a\u307e\u3059\u3002\n\nWIO-NODE\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308bWi-Fi\u30e2\u30b8\u30e5\u30fc\u30ebESP-WROOM-02\u306f\u3001\u5358\u4f53\u3067Arduino\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u306e\u3067\u3001\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u76f4\u63a5\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n\u307e\u305f\u3001WIO-NODE\u306f\u30b3\u30cd\u30af\u30bf\u304b\u3089\u76f4\u63a5I2C\u306e\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308c\u308b\u306e\u3067\u3001\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306b\u3082I2C\u306e\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u63c3\u3048\u308b\u3082\u306e\n\n\u30d1\u30fc\u30c4\n\u30fbWIO-NODE\n\u30fb\uff13\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30eb\u3000\uff21\uff24\uff38\uff2c\uff13\uff14\uff15\uff08\uff33\uff30\uff29\uff0f\uff29\uff29\uff23\uff09\n\u30fb\u30b7\u30ea\u30a2\u30eb\u5909\u63db\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\u5de5\u4f5c\u9053\u5177\n\u30fb\u30ef\u30a4\u30e4\u30fc\u30b9\u30c8\u30ea\u30c3\u30d1\u30fc\uff08\u307e\u305f\u306f\u30cb\u30c3\u30d1\u30fc\u3001\u30ca\u30a4\u30d5\u7b49\uff09\n\u30fbGROVE 4\u30d4\u30f3\u30b1\u30fc\u30d6\u30eb\n\u30fb\u30cf\u30f3\u30c0\n\u30fb\u30cf\u30f3\u30c0\u3053\u3066\n\n\u96fb\u6e90\n\u30fbUSB\u30b1\u30fc\u30d6\u30eb\n\u30fb\u30b9\u30de\u30db\u7528\u30d0\u30c3\u30c6\u30ea\u30fc\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n\u30fbArduino IDE\n\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u63a5\u7d9a\n\u307e\u305a\u306fWIO-NODE\u3068\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u914d\u7dda\u30fb\u534a\u7530\u4ed8\u3051\u3057\u307e\u3059\u3002\n\n\u534a\u7530\u4ed8\u3051\u3057\u305f\u3089\u5b8c\u6210\u3067\u3059\u3002\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4f5c\u6210\n\nWIO-NODE\u7528\u52a0\u901f\u5ea6\u9001\u4fe1\u30d7\u30ed\u30b0\u30e9\u30e0\n\nwio_node_acc.ino\n#include <Wire.h>\n#include <ESP8266WiFi.h>\n#include <WiFiUDP.h>\n\n#define WIO_POW_PIN 15\n\n// port2:GND,3V3,SDA,SCL\n// http://akizukidenshi.com/download/ds/freescale/ADXL345_jp.pdf\n\n#define ADXL 0x1D // (SDO HIGH) or 0x53 (SDO LOW)\n#define BW_RATE 0x2C\n#define POWER_CTRL 0x2D\n#define DATA_FORMAT 0x31\n#define DATAX0 0x32 // Low\n#define DATAX1 0x33 // High\n#define DATAY0 0x34\n#define DATAY1 0x35\n#define DATAZ0 0x36\n#define DATAZ1 0x37\n\n/* for Wi-Fi */\n#define HOST_NAME   \"192.168.4.2\"\n#define HOST_PORT   (7001)\n#define RECV_PORT   (7001)\nstatic WiFiUDP wifiUdp; \nstatic const char *ssid = \"skipshoes0\";\nstatic const char *password = \"123456789\";\n\nvoid setup() {\n  // put your setup code here, to run once:\n  delay(1000);\n  pinMode(WIO_POW_PIN, OUTPUT); // \n  digitalWrite(WIO_POW_PIN,HIGH); // Vcc (and LED) on\n  delay(100);\n  Serial.begin(115200);\n  delay(100);\n  espWifiSetup();  \n  delay(1000);\n  adxlSetup();\n  delay(100);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n//  scan();\n\n    int val[3]; // x,y,z\n    char buff[15];\n\n    adxlRead(val);\n    delay(1);\n    espWifiUpdate(val);\n    delay(30);\n\n    sprintf(buff,\"%d,%d,%d\",val[0],val[1],val[2]);\n    Serial.println(buff);\n}\n\nvoid adxlSetup(){\n  Wire.begin();\n  delay(100);\n  Wire.beginTransmission(ADXL);\n  Wire.write(DATA_FORMAT);\n  // D7:SELF_TEST\n  // D6:SPI\n  // D5:INT_INVERT\n  // D4:0\n  // D3:FULL_RES\n  // D2:Justify\n  // D1,0: 00=2g,01=4g,10=8g,11=16g\n  Wire.write(B00000000);\n  Wire.endTransmission();\n\n  Wire.beginTransmission(ADXL);\n  Wire.write(BW_RATE);\n  // D4:LOW_POWER\n  // D3-D0:Rate 400Hz:1100,200:1011,100:1010,50:1001\n  Wire.write(B00001010);\n  Wire.endTransmission();\n\n  Wire.beginTransmission(ADXL);\n  Wire.write(POWER_CTRL);\n  // D7:0\n  // D6:0\n  // D5:Link\n  // D4:AUTO_SLEEP\n  // D3:Measure\n  // D2:Sleep\n  // D1,0: wakeup\n  Wire.write(B00001000);\n  Wire.endTransmission();\n\n}\n\nint adxlRead(int val[3]){\n//\u7b26\u53f7\u306a\u3057\u3067\u9001\u308b\n    int STATUS=0x2F;\n    byte vH,vL,st;\n    st= 1;\n\n  Wire.beginTransmission(ADXL);\n  Wire.write(DATAX0);\n  Wire.endTransmission();\n  Wire.requestFrom(ADXL, 6); // DATAX0~DATAZ1\n  Wire.endTransmission();\n\n   //I2c.read(ADXL,0x32,2);\n    vL = Wire.read();\n    vH = Wire.read();\n    val[0]=(short)(word(vH,vL))+512;\n\n    //I2c.read(ADXL,0x34,2);\n    vL = Wire.read();\n    vH = Wire.read();\n    val[1]=(short)(word(vH,vL))+512;\n\n    //I2c.read(ADXL,0x36,2);\n    vL = Wire.read();\n    vH = Wire.read();\n    val[2]=(short)(word(vH,vL))+512;\n\n   return st; //1:dataready, 0:not ready\n}\n\nvoid   espWifiSetup(){\n  Serial.println(\"espWifiSetup\");\n  delay(500);\n  WiFi.mode(WIFI_AP);\n  WiFi.softAP(ssid, password, 1, false);\n  delay(500);\n  wifiUdp.begin(RECV_PORT);\n  delay(500);\n\n}\n\nvoid   espWifiUpdate(int val[3]){\n  String sendStr = \"x:\" + String(val[0])+\",y:\" + String(val[1])+\",z:\" + String(val[2]);\n  wifiUdp.beginPacket(HOST_NAME, HOST_PORT);\n  wifiUdp.write((const uint8_t*)(sendStr.c_str()), strlen(sendStr.c_str()));\n  wifiUdp.endPacket();\n}\n\n\n\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u914d\u7dda\u3057\u3001\u30b7\u30ea\u30a2\u30eb\u5909\u63db\u30e2\u30b8\u30e5\u30fc\u30eb\u306eSW1\u3092OFF\u306b\u3057\u3066(3.3V)\n\uff11\uff0eFunc\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u306a\u304c\u3089RST\u30dc\u30bf\u30f3\u3092\u62bc\u3059\n\uff12\uff0eRST\u30dc\u30bf\u30f3\u3092\u96e2\u3059\n\uff13\uff0eFunc\u30dc\u30bf\u30f3\u3092\u96e2\u3059\n\u306e\u624b\u9806\u3067\u66f8\u304d\u8fbc\u307f\u30e2\u30fc\u30c9\u306b\u3057\u305f\u5f8c\u3001\u30b7\u30ea\u30a2\u30eb\u5909\u63db\u30e2\u30b8\u30e5\u30fc\u30eb\u306eUSB\u30dd\u30fc\u30c8\u3068PC\u3092\u63a5\u7d9a\u3057\u3001Arduino IDE\u3092\u4f7f\u7528\u3057\u3066\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n\u66f8\u304d\u8fbc\u307f\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4e8b\u524d\u306bIDE\u306bESP8266\u30dc\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\nUnity\u7528\u52a0\u901f\u5ea6\u53d7\u4fe1\u30b9\u30af\u30ea\u30d7\u30c8\n\u524d\u56de\u3068\u540c\u3058\u3067\u3059\u3002\n[\u524d\u56de](http://qiita.com/ELIXIR/items/7dded038455f966463a1)\u306f[GR-COTTON](http://akizukidenshi.com/catalog/g/gK-09867/)\u3068\u3044\u3046\u30dc\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f[WIO-NODE](http://www.marutsu.co.jp/pc/i/607381/)\u3092\u4f7f\u7528\u3057\u3066\u540c\u69d8\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n![DSC02250.JPG](https://qiita-image-store.s3.amazonaws.com/0/59911/dba1893a-a5fc-cdec-96d9-ad567ae18636.jpeg)\n\nWIO-NODE\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308bWi-Fi\u30e2\u30b8\u30e5\u30fc\u30ebESP-WROOM-02\u306f\u3001\u5358\u4f53\u3067Arduino\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u306e\u3067\u3001\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u76f4\u63a5\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n\u307e\u305f\u3001WIO-NODE\u306f\u30b3\u30cd\u30af\u30bf\u304b\u3089\u76f4\u63a5I2C\u306e\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308c\u308b\u306e\u3067\u3001\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306b\u3082I2C\u306e\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n##\u63c3\u3048\u308b\u3082\u306e\n###\u30d1\u30fc\u30c4\n\u30fb[WIO-NODE](http://www.marutsu.co.jp/pc/i/607381/)\n\u30fb[\uff13\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30eb\u3000\uff21\uff24\uff38\uff2c\uff13\uff14\uff15\uff08\uff33\uff30\uff29\uff0f\uff29\uff29\uff23\uff09](http://akizukidenshi.com/catalog/g/gM-06724/)\n\u30fb[\u30b7\u30ea\u30a2\u30eb\u5909\u63db\u30e2\u30b8\u30e5\u30fc\u30eb](http://akizukidenshi.com/catalog/g/gM-11007/)\n###\u5de5\u4f5c\u9053\u5177\n\u30fb[\u30ef\u30a4\u30e4\u30fc\u30b9\u30c8\u30ea\u30c3\u30d1\u30fc](https://www.amazon.co.jp/VESSEL-%E3%83%99%E3%83%83%E3%82%BB%E3%83%AB-No-3500E-2-%E3%83%AF%E3%82%A4%E3%83%A4%E3%83%BC%E3%82%B9%E3%83%88%E3%83%AA%E3%83%83%E3%83%91%E3%83%BC/dp/B000CEAXM4/ref=sr_1_5?ie=UTF8&qid=1481521568&sr=8-5&keywords=%E3%83%AF%E3%82%A4%E3%83%A4%E3%83%BC%E3%82%B9%E3%83%88%E3%83%AA%E3%83%83%E3%83%91%E3%83%BC)\uff08\u307e\u305f\u306f\u30cb\u30c3\u30d1\u30fc\u3001\u30ca\u30a4\u30d5\u7b49\uff09\n\u30fb[GROVE 4\u30d4\u30f3\u30b1\u30fc\u30d6\u30eb](https://www.switch-science.com/catalog/798/)\n\u30fb\u30cf\u30f3\u30c0\n\u30fb\u30cf\u30f3\u30c0\u3053\u3066\n###\u96fb\u6e90\n\u30fb[USB\u30b1\u30fc\u30d6\u30eb](https://www.amazon.co.jp/%E3%82%A8%E3%83%AC%E3%82%B3%E3%83%A0-%E5%85%85%E9%9B%BB%E5%B0%82%E7%94%A8-Micro-USB%E3%82%B1%E3%83%BC%E3%83%96%E3%83%AB-0-1m-%E3%83%96%E3%83%A9%E3%83%83%E3%82%AF/dp/B00DVT96RK/ref=sr_1_2?s=computers&ie=UTF8&qid=1481520722&sr=1-2&keywords=usb%E3%82%B1%E3%83%BC%E3%83%96%E3%83%AB+%E3%82%A8%E3%83%AC%E3%82%B3%E3%83%A0%E3%80%800.1m)\n\u30fb[\u30b9\u30de\u30db\u7528\u30d0\u30c3\u30c6\u30ea\u30fc](https://www.amazon.co.jp/BUFFALO-BSMPB3301P1BK-iPhone7Plus-Nintendo/dp/B01KN3I0R8/ref=dp_ob_title_ce)\n###\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n\u30fb[Arduino IDE](https://www.arduino.cc/en/Main/Software)\n##\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u63a5\u7d9a\n\u307e\u305a\u306fWIO-NODE\u3068\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u914d\u7dda\u30fb\u534a\u7530\u4ed8\u3051\u3057\u307e\u3059\u3002\n![WIONODE.jpg](https://qiita-image-store.s3.amazonaws.com/0/59911/1f40c7c3-cba5-8951-180f-27d9dfff2d7b.jpeg)\n\n\u534a\u7530\u4ed8\u3051\u3057\u305f\u3089\u5b8c\u6210\u3067\u3059\u3002\n\n##\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4f5c\u6210\n###WIO-NODE\u7528\u52a0\u901f\u5ea6\u9001\u4fe1\u30d7\u30ed\u30b0\u30e9\u30e0\n\n```wio_node_acc.ino\n#include <Wire.h>\n#include <ESP8266WiFi.h>\n#include <WiFiUDP.h>\n\n#define WIO_POW_PIN 15\n\n// port2:GND,3V3,SDA,SCL\n// http://akizukidenshi.com/download/ds/freescale/ADXL345_jp.pdf\n\n#define ADXL 0x1D // (SDO HIGH) or 0x53 (SDO LOW)\n#define BW_RATE 0x2C\n#define POWER_CTRL 0x2D\n#define DATA_FORMAT 0x31\n#define DATAX0 0x32 // Low\n#define DATAX1 0x33 // High\n#define DATAY0 0x34\n#define DATAY1 0x35\n#define DATAZ0 0x36\n#define DATAZ1 0x37\n\n/* for Wi-Fi */\n#define HOST_NAME   \"192.168.4.2\"\n#define HOST_PORT   (7001)\n#define RECV_PORT   (7001)\nstatic WiFiUDP wifiUdp; \nstatic const char *ssid = \"skipshoes0\";\nstatic const char *password = \"123456789\";\n\nvoid setup() {\n  // put your setup code here, to run once:\n  delay(1000);\n  pinMode(WIO_POW_PIN, OUTPUT); // \n  digitalWrite(WIO_POW_PIN,HIGH); // Vcc (and LED) on\n  delay(100);\n  Serial.begin(115200);\n  delay(100);\n  espWifiSetup();  \n  delay(1000);\n  adxlSetup();\n  delay(100);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n//  scan();\n\n    int val[3]; // x,y,z\n    char buff[15];\n  \n    adxlRead(val);\n    delay(1);\n    espWifiUpdate(val);\n    delay(30);\n  \n    sprintf(buff,\"%d,%d,%d\",val[0],val[1],val[2]);\n    Serial.println(buff);\n}\n\nvoid adxlSetup(){\n  Wire.begin();\n  delay(100);\n  Wire.beginTransmission(ADXL);\n  Wire.write(DATA_FORMAT);\n  // D7:SELF_TEST\n  // D6:SPI\n  // D5:INT_INVERT\n  // D4:0\n  // D3:FULL_RES\n  // D2:Justify\n  // D1,0: 00=2g,01=4g,10=8g,11=16g\n  Wire.write(B00000000);\n  Wire.endTransmission();\n\n  Wire.beginTransmission(ADXL);\n  Wire.write(BW_RATE);\n  // D4:LOW_POWER\n  // D3-D0:Rate 400Hz:1100,200:1011,100:1010,50:1001\n  Wire.write(B00001010);\n  Wire.endTransmission();\n\n  Wire.beginTransmission(ADXL);\n  Wire.write(POWER_CTRL);\n  // D7:0\n  // D6:0\n  // D5:Link\n  // D4:AUTO_SLEEP\n  // D3:Measure\n  // D2:Sleep\n  // D1,0: wakeup\n  Wire.write(B00001000);\n  Wire.endTransmission();\n\n}\n\nint adxlRead(int val[3]){\n//\u7b26\u53f7\u306a\u3057\u3067\u9001\u308b\n    int STATUS=0x2F;\n    byte vH,vL,st;\n    st= 1;\n  \n  Wire.beginTransmission(ADXL);\n  Wire.write(DATAX0);\n  Wire.endTransmission();\n  Wire.requestFrom(ADXL, 6); // DATAX0~DATAZ1\n  Wire.endTransmission();\n  \n   //I2c.read(ADXL,0x32,2);\n    vL = Wire.read();\n    vH = Wire.read();\n    val[0]=(short)(word(vH,vL))+512;\n  \n    //I2c.read(ADXL,0x34,2);\n    vL = Wire.read();\n    vH = Wire.read();\n    val[1]=(short)(word(vH,vL))+512;\n  \n    //I2c.read(ADXL,0x36,2);\n    vL = Wire.read();\n    vH = Wire.read();\n    val[2]=(short)(word(vH,vL))+512;\n\n   return st; //1:dataready, 0:not ready\n}\n\nvoid   espWifiSetup(){\n  Serial.println(\"espWifiSetup\");\n  delay(500);\n  WiFi.mode(WIFI_AP);\n  WiFi.softAP(ssid, password, 1, false);\n  delay(500);\n  wifiUdp.begin(RECV_PORT);\n  delay(500);\n  \n}\n\nvoid   espWifiUpdate(int val[3]){\n  String sendStr = \"x:\" + String(val[0])+\",y:\" + String(val[1])+\",z:\" + String(val[2]);\n  wifiUdp.beginPacket(HOST_NAME, HOST_PORT);\n  wifiUdp.write((const uint8_t*)(sendStr.c_str()), strlen(sendStr.c_str()));\n  wifiUdp.endPacket();\n}\n```\n\n\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u914d\u7dda\u3057\u3001\u30b7\u30ea\u30a2\u30eb\u5909\u63db\u30e2\u30b8\u30e5\u30fc\u30eb\u306eSW1\u3092OFF\u306b\u3057\u3066(3.3V)\n\uff11\uff0eFunc\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u306a\u304c\u3089RST\u30dc\u30bf\u30f3\u3092\u62bc\u3059\n\uff12\uff0eRST\u30dc\u30bf\u30f3\u3092\u96e2\u3059\n\uff13\uff0eFunc\u30dc\u30bf\u30f3\u3092\u96e2\u3059\n\u306e\u624b\u9806\u3067\u66f8\u304d\u8fbc\u307f\u30e2\u30fc\u30c9\u306b\u3057\u305f\u5f8c\u3001\u30b7\u30ea\u30a2\u30eb\u5909\u63db\u30e2\u30b8\u30e5\u30fc\u30eb\u306eUSB\u30dd\u30fc\u30c8\u3068PC\u3092\u63a5\u7d9a\u3057\u3001[Arduino IDE](https://www.arduino.cc/en/Main/Software)\u3092\u4f7f\u7528\u3057\u3066\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n\n\u66f8\u304d\u8fbc\u307f\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4e8b\u524d\u306b[IDE\u306bESP8266\u30dc\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f]\n(http://trac.switch-science.com/wiki/esp_dev_arduino_ide)\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n![WIONODE.jpg](https://qiita-image-store.s3.amazonaws.com/0/59911/9d91ce85-6acd-85f2-cbaf-5105fd20ae12.jpeg)\n\n###Unity\u7528\u52a0\u901f\u5ea6\u53d7\u4fe1\u30b9\u30af\u30ea\u30d7\u30c8\n[\u524d\u56de](http://qiita.com/ELIXIR/items/7dded038455f966463a1)\u3068\u540c\u3058\u3067\u3059\u3002\n", "tags": ["Unity", "WioNode", "ESP8266", "ESP-WROOM-02", "Arduino"]}