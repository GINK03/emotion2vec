{"tags": ["PRML", "R"], "context": " More than 1 year has passed since last update.PRML\u56f33.5\u3068\u540c\u69d8\u306b\u300125\u500b\u306e\u30ac\u30a6\u30b9\u57fa\u5e95\u3067\u69cb\u6210\u3055\u308c\u308b\u7dda\u5f62\u57fa\u5e95\u95a2\u6570\u30e2\u30c7\u30eb\u306b\u304a\u3044\u3066\u3001\u6b63\u5247\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u3054\u3068\u306b\u300125\u70b9\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u96c6\u5408\u306e\u751f\u6210\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b66\u7fd2\u3092200\u56de\u7e70\u308a\u8fd4\u3057\u3001\u5404\u30e2\u30c7\u30eb(20\u56de\u5206\u306e\u307f\u63cf\u753b)\u3068\u305d\u306e\u5e73\u5747\u5024\u3092\u63cf\u304d\u307e\u3059\u3002\u307e\u305f\u305d\u306e\u7d50\u679c\u304b\u3089\u3001\u30e2\u30c7\u30eb\u306e\u6b63\u5247\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u3054\u3068\u306b\u3001\u30e2\u30c7\u30eb\u306e\u671f\u5f85\u640d\u5931\u3092\u69cb\u6210\u3059\u308b\u30d0\u30a4\u30a2\u30b9\u3068\u30d0\u30ea\u30a2\u30f3\u30b9\u3092\u6c42\u3081\u3066\u3001\u56f33.6\u3068\u540c\u69d8\u306e\u56f3\u3092\u63cf\u304d\u307e\u3059\u3002\n\nframe()\nset.seed(0)\nN<-25\nM<-25\nATTEMPT=200\nxrange<-c(-0.0,1.0)\nyrange<-c(-1.5,1.5)\nx<-seq(1/(N*2), 1, 1/N)\nbase<-function(m,x) {\n#        r<-x^m                          #\u591a\u9805\u5f0f\u57fa\u5e95\u306e\u5834\u5408\n        r<-exp(-(x-(m-1)/(M-2))^2/(2*0.05^2))    #\u30ac\u30a6\u30b9\u57fa\u5e95\u306e\u5834\u5408\n        r[m == 0]<-1                    # w0\u3092\u30d0\u30a4\u30a2\u30b9\u9805\u3068\u3059\u308b\u305f\u3081\u03c60=1\n        r\n}\nmakePhi<-function(M) {\n        A <- matrix(nrow=length(x),ncol=M)\n        for (i in 1:length(x)) {\n                for (j in 0:(M-1)) {\n                        A[i,1+j] <- base(j,x[i])\n                }\n        }\n        A\n}\nbiassquared<-numeric(5)\nvariance<-numeric(5)\nis<-1:7\nlambdabase<-is-5\nlambda<-exp(lambdabase)\npar(mfrow=c(2,4))\nfor (i in is) {\n    h<-function(x){sin(2*pi*x)}\n    curve(h,type=\"l\",xlim=xrange,ylim=yrange,col=2,ylab=\"t\")\n    title(paste0(\"ln(lambda)=\", lambdabase[i]), cex.main=1)\n    y=matrix(nrow=length(x),ncol=ATTEMPT)\n    for (attempt in 1:ATTEMPT) {\n        t<-sin(2*pi*x)+rnorm(N, 0, 0.5^2)\n        t<-matrix(t,nrow=length(t))\n        phi<-makePhi(M)\n        w<-solve(lambda[i] * diag(M) + t(phi) %*% phi) %*% t(phi) %*% t\n        estimate<-function(x){\n            i <- 0:(M-1)\n            (sapply(x,function(xn){ (sum(w * base(i, xn))) } )) # (w[1]+w[2]*base(1,x)+w[3]*base(2,x)...)\n        }\n        y[,attempt]<-estimate(x)\n        if (attempt <= 20) {\n            par(new=T)\n            curve(estimate,type=\"l\",xlim=xrange,ylim=yrange,col=1,ylab=\"\")\n        }\n    }\n    meany<-apply(y, 1, mean)\n    par(new=T)\n    curve(h,type=\"l\",xlim=xrange,ylim=yrange,col=2,ylab=\"t\")\n    par(new=T)\n    plot(x, meany, xlim=xrange,ylim=yrange,col=3,ylab=\"\")\n    biassquared[i]<-mean((meany - h(x))^2)\n    variance[i]<-mean((y - meany)^2)\n\n}\nd<-data.frame(biassquared,variance,biassquared+variance)\nrownames(d)<-lambdabase\nmatplot(d,type=\"l\",axes=F,lty=1)\naxis(1,1:length(lambdabase),lambdabase)\naxis(2)\nlegend(\"topleft\",legend=colnames(d),col=1:ncol(d),lty=1,cex=0.6)\n\nPRML\u56f33.5\u3068\u540c\u69d8\u306b\u300125\u500b\u306e\u30ac\u30a6\u30b9\u57fa\u5e95\u3067\u69cb\u6210\u3055\u308c\u308b\u7dda\u5f62\u57fa\u5e95\u95a2\u6570\u30e2\u30c7\u30eb\u306b\u304a\u3044\u3066\u3001\u6b63\u5247\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u3054\u3068\u306b\u300125\u70b9\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u96c6\u5408\u306e\u751f\u6210\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b66\u7fd2\u3092200\u56de\u7e70\u308a\u8fd4\u3057\u3001\u5404\u30e2\u30c7\u30eb(20\u56de\u5206\u306e\u307f\u63cf\u753b)\u3068\u305d\u306e\u5e73\u5747\u5024\u3092\u63cf\u304d\u307e\u3059\u3002\u307e\u305f\u305d\u306e\u7d50\u679c\u304b\u3089\u3001\u30e2\u30c7\u30eb\u306e\u6b63\u5247\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u3054\u3068\u306b\u3001\u30e2\u30c7\u30eb\u306e\u671f\u5f85\u640d\u5931\u3092\u69cb\u6210\u3059\u308b\u30d0\u30a4\u30a2\u30b9\u3068\u30d0\u30ea\u30a2\u30f3\u30b9\u3092\u6c42\u3081\u3066\u3001\u56f33.6\u3068\u540c\u69d8\u306e\u56f3\u3092\u63cf\u304d\u307e\u3059\u3002\n\n![](https://dl.dropbox.com/sh/cwfemibvr7gk4cy/EjMLqa9_li/4.BiasVarianceDecomposition.png)\n\n```r\nframe()\nset.seed(0)\nN<-25\nM<-25\nATTEMPT=200\nxrange<-c(-0.0,1.0)\nyrange<-c(-1.5,1.5)\nx<-seq(1/(N*2), 1, 1/N)\nbase<-function(m,x) {\n#        r<-x^m                          #\u591a\u9805\u5f0f\u57fa\u5e95\u306e\u5834\u5408\n        r<-exp(-(x-(m-1)/(M-2))^2/(2*0.05^2))    #\u30ac\u30a6\u30b9\u57fa\u5e95\u306e\u5834\u5408\n        r[m == 0]<-1                    # w0\u3092\u30d0\u30a4\u30a2\u30b9\u9805\u3068\u3059\u308b\u305f\u3081\u03c60=1\n        r\n}\nmakePhi<-function(M) {\n        A <- matrix(nrow=length(x),ncol=M)\n        for (i in 1:length(x)) {\n                for (j in 0:(M-1)) {\n                        A[i,1+j] <- base(j,x[i])\n                }\n        }\n        A\n}\nbiassquared<-numeric(5)\nvariance<-numeric(5)\nis<-1:7\nlambdabase<-is-5\nlambda<-exp(lambdabase)\npar(mfrow=c(2,4))\nfor (i in is) {\n\th<-function(x){sin(2*pi*x)}\n\tcurve(h,type=\"l\",xlim=xrange,ylim=yrange,col=2,ylab=\"t\")\n\ttitle(paste0(\"ln(lambda)=\", lambdabase[i]), cex.main=1)\n\ty=matrix(nrow=length(x),ncol=ATTEMPT)\n\tfor (attempt in 1:ATTEMPT) {\n\t\tt<-sin(2*pi*x)+rnorm(N, 0, 0.5^2)\n\t\tt<-matrix(t,nrow=length(t))\n\t\tphi<-makePhi(M)\n\t\tw<-solve(lambda[i] * diag(M) + t(phi) %*% phi) %*% t(phi) %*% t\n\t\testimate<-function(x){\n\t\t\ti <- 0:(M-1)\n\t\t\t(sapply(x,function(xn){ (sum(w * base(i, xn))) } )) # (w[1]+w[2]*base(1,x)+w[3]*base(2,x)...)\n\t\t}\n\t\ty[,attempt]<-estimate(x)\n\t\tif (attempt <= 20) {\n\t\t\tpar(new=T)\n\t\t\tcurve(estimate,type=\"l\",xlim=xrange,ylim=yrange,col=1,ylab=\"\")\n\t\t}\n\t}\n\tmeany<-apply(y, 1, mean)\n\tpar(new=T)\n\tcurve(h,type=\"l\",xlim=xrange,ylim=yrange,col=2,ylab=\"t\")\n\tpar(new=T)\n\tplot(x, meany, xlim=xrange,ylim=yrange,col=3,ylab=\"\")\n\tbiassquared[i]<-mean((meany - h(x))^2)\n\tvariance[i]<-mean((y - meany)^2)\n\n}\nd<-data.frame(biassquared,variance,biassquared+variance)\nrownames(d)<-lambdabase\nmatplot(d,type=\"l\",axes=F,lty=1)\naxis(1,1:length(lambdabase),lambdabase)\naxis(2)\nlegend(\"topleft\",legend=colnames(d),col=1:ncol(d),lty=1,cex=0.6)\n```"}