{"context": "\u4ee5\u524d\u304b\u3089\u3084\u3063\u3066\u307f\u305f\u304b\u3063\u305fRaspberry Pi\u306e\u7269\u4f53\u8a8d\u8b58\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u308f\u305a\u306b\u6df1\u5c64\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\n\n\nRaspberry Pi3 (RASPBIAN JESSIE WITH PIXEL 4.4\u3000/ Python 3.4.2)\nLOGICOOL \u30a6\u30a7\u30d6\u30ab\u30e0 HD\u753b\u8cea 120\u4e07\u753b\u7d20 C270\n\u30df\u30cb\u30ed\u30dc\u30c3\u30c8PC\u7b49\u7528\u30b9\u30d4\u30fc\u30ab\u30fc\u5c0f\u578b\u304b\u308f\u3044\u3044\u767d\n7\u30a4\u30f3\u30c1(1024*600) IPS\u6db2\u6676\u30d1\u30cd\u30eb\u3000\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\n\n\u4eca\u307e\u3067\u30ab\u30e1\u30e9\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001OpenCV\u3067\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3092\u3055\u305b\u308b\u305f\u3081Web\u30ab\u30e1\u30e9\u3092\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002\u3064\u3044\u3067\u306b\u3061\u3087\u3063\u3068\u53ef\u611b\u3089\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u578b\u306e\u30b9\u30d4\u30fc\u30ab\u30fc\u3082\u5408\u308f\u305b\u3066\u8cb7\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u30ed\u30dc\u30c3\u30c8\u578b\u306e\u30b9\u30d4\u30fc\u30ab\u30fc\u304cWeb\u30ab\u30e1\u30e9\u306b\u6620\u3063\u305f\u7269\u3092\u3057\u3083\u3079\u3063\u3066\u304f\u308c\u307e\u3059\uff08\u82f1\u8a9e\u3067\u3059\uff09\u3002\n\n\u3053\u3093\u306a\u611f\u3058\n\nDeep Learning Object Recognition   - YouTube\n\u3061\u3087\u3063\u3068\u30ec\u30c8\u30ed\u306a\u6a5f\u68b0\u97f3\u58f0\u3067\u8a71\u3057\u307e\u3059\u3002\n\n\u300cApple\u300d\u3068\u7b54\u3048\u308b\u304b\u3068\u601d\u3063\u305f\u3089\u3001\u300cGranny Smith\uff08\u30b0\u30e9\u30cb\u30fc\u30b9\u30df\u30b9\uff09\u300d\u3068\u3044\u3046\u308a\u3093\u3054\u306e\u54c1\u7a2e\u3092\u7b54\u3048\u307e\u3057\u305f\u3002\u30a2\u30e1\u30ea\u30ab\u3067\u306f\u30e1\u30b8\u30e3\u30fc\u306a\u54c1\u7a2e\u306e\u69d8\u3067\u3059\u3002\uff08\u3053\u308c\u306f\u300c\u3075\u3058\u308a\u3093\u3054\u300d\u3067\u3059\uff09\n\niPhone\u3092\u898b\u305b\u308b\u3068\u300ciPod\u300d\u3068\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\uff08\u5b66\u7fd2\u30c7\u30fc\u30bf\u304c\u3061\u3087\u3063\u3068\u53e4\u3044\u304b\u306a\uff1f\uff09\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\nOpenCV3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nInstall guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3\nOpenCV\u306fPython3\u7cfb\u3067\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u3001\u4f9d\u5b58\u95a2\u4fc2\u304c\u3084\u3084\u3053\u3057\u304f\u82e6\u52b4\u3057\u307e\u3057\u305f\u3002\u4e0a\u8a18\u30b5\u30a4\u30c8\u306e\u624b\u9806\u306b\u6cbf\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nTensorFlow\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ntensorflow-on-raspberry-pi\nTensorFlow\u306f\u6a19\u6e96\u3067\u306f\u30e9\u30ba\u30d1\u30a4\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001GitHub\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3053\u3061\u3089\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\nKeras \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nKeras\u306f\u666e\u901a\u306bpip\u3092\u5229\u7528\u3057\u3066\u7c21\u5358\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u307e\u3059\u3002\u4f9d\u5b58\u95a2\u4fc2\u306e\u3042\u308b\u30e9\u30a4\u30d6\u30e9\u30eascipy\u3084h5py\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067sudo apt-get\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u306e\u5229\u7528\n\u30e1\u30a4\u30f3\u958b\u767a\u8005\u306eFran\u00e7ois Chollet\u3055\u3093\u304c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u516c\u958b\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\nfchollet/deep-learning-models - GitHub\n\u3053\u3061\u3089\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u304f\u308c\u3070\u3001\u7269\u4f53\u8a8d\u8b58\u3092\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u4eca\u56de\u306f\u9a5a\u7570\u306e\u8a8d\u8b58\u738796.6%\u3092\u8a87\u308b\u5b66\u7fd2\u30e2\u30c7\u30ebInceptionV3\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30ebh5\u3068\u3001\u30e9\u30d9\u30eb\u4e00\u89a7json\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\uff08\u30e9\u30d9\u30eb\u304c\u7d041,000\u7a2e\u985e\u3082\u3042\u308b\uff09\u3001\u3053\u308c\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3057\u307e\u3044\u3001\u540c\u3058\u968e\u5c64\u306b\u8a2d\u7f6e\u3057\u307e\u3059\u3002\ndeep-learning-models\n\u251c\u2500\u2500 imagenet_class_index.json\n\u251c\u2500\u2500 imagenet_utils.py\n\u251c\u2500\u2500 inception_v3.py\n\u251c\u2500\u2500 inception_v3_weights_tf_dim_ordering_tf_kernels.h5\n\u251c\u2500\u2500 inception_v3_weights_tf_dim_ordering_tf_kernels_notop.h5\n\u251c\u2500\u2500 inception_v3_weights_th_dim_ordering_th_kernels.h5\n\u2514\u2500\u2500inception_v3_weights_th_dim_ordering_th_kernels_notop.h5\n\n\u5b66\u7fd2\u3055\u305b\u308b\u306b\u306f\u81a8\u5927\u306a\u6642\u9593\u304c\u304b\u304b\u308b\u69d8\u3067\u3059\u304c\uff08\u6df1\u5c64\u5b66\u7fd2\u7528\u306ePC\u30671\u30f6\u6708\u4f4d\u304b\u304b\u308b\u3068\u304b\uff09\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d5\u30a1\u30a4\u30eb\u3067\u8a2d\u7f6e\u3059\u308c\u3070\u3001\u30e9\u30ba\u30d1\u30a4\u3067\u30821\u30012\u79d2\u3067\u753b\u50cf\u8a8d\u8b58\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u5c11\u3057\u6539\u9020\u3059\u308b\n\n$ cd deep-learning-models\n$ python3 inception_v3.py\nUsing TensorFlow backend.\nPredicted: [[('n02504013', 'Indian_elephant', 0.87686646), ('n01871265', 'tusker', 0.044712357), ('n02504458', 'African_elephant', 0.02874627), ('n02398521', 'hippopotamus', 0.0072720782), ('n02092339', 'Weimaraner', 0.0020943223)]]\n\n\u753b\u50cf\u3092\u89e3\u6790\u3059\u308b\u3068\u3001\u300c\u30e9\u30d9\u30eb\u756a\u53f7\u30fb\u30e9\u30d9\u30eb\u540d\u30fb\u4e88\u6e2c\u5024\u300d\u304c\u591a\u6b21\u5143\u914d\u5217\u3067\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001326\u3001327\u884c\u76ee\uff08\u6700\u5f8c\u306e\uff12\u884c\uff09\u3092\u4ee5\u4e0b\u306e\u69d8\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\npreds = model.predict(x)\nrecognize = decode_predictions(preds)\nprint('Label:', recognize[0][0][1])\n\n\u3053\u308c\u3067\u4e00\u756a\u4e88\u6e2c\u5024\u306e\u9ad8\u3044\u30e9\u30d9\u30eb\u3092\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\nLabel: Indian_elephant\n\n\nOpenCV\u306e\u753b\u50cf\u3092\u89e3\u6790\u3059\u308b\nOpenCV\u306e\u753b\u50cf\u306fBGR\u306eNumPy\u914d\u5217\u3068\u306a\u308a\u3001\u51e6\u7406\u304c\u9762\u5012\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u5358\u7d14\u306bs\u30ad\u30fc\u62bc\u4e0b\u3067\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\u69d8\u306b\u3057\u307e\u3057\u305f\u3002\n316\u884c\u76ee\u304b\u3089\u306eif __name__ == '__main__':\u4ee5\u964d\u3092\u4ee5\u4e0b\u306e\u69d8\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\nimport cv2\nif __name__ == '__main__':\n    model = InceptionV3(include_top=True, weights='imagenet')\n\n    cam = cv2.VideoCapture(0)\n\n    while(True):\n        ret, frame = cam.read()\n        cv2.imshow(\"Show FLAME Image\", frame)\n\n        k = cv2.waitKey(1)\n        if k == ord('s'):\n            cv2.imwrite(\"output.png\", frame)\n            img_path = \"output.png\"\n            img = image.load_img(img_path, target_size=(299, 299))\n            x = image.img_to_array(img)\n            x = np.expand_dims(x, axis=0)\n\n            x = preprocess_input(x)\n\n            preds = model.predict(x)\n            recognize = decode_predictions(preds)\n            print('Label:', recognize[0][0][1])\n\n        elif k == ord('q'):\n            break\n\n    cam.release()\n    cv2.destroyAllWindows()\n\n\u753b\u50cf\u306e\u5909\u63db\u306f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\n\u97f3\u58f0\u767a\u8a71\u3055\u305b\u308b\n\u672c\u5f53\u306f\u30e9\u30d9\u30eb\u3092\u65e5\u672c\u8a9e\u306b\u5909\u63db\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u65ad\u5ff5\u3057\u3001\u82f1\u8a9e\u30e9\u30d9\u30eb\u3092\u305d\u306e\u307e\u307e\u767a\u8a71\u3055\u305b\u307e\u3059\u3002\u30e9\u30ba\u30d1\u30a4\u306e\u82f1\u8a9e\u3067\u306e\u767a\u8a71\u306flinux\u306e\u30bd\u30d5\u30c8eSpeak text to speech\u304c\u7c21\u5358\u3067\u3059\u3002\n$ sudo apt-get install espeak\n$ espeak \"This is a test\"\n\n\u3053\u308c\u3067\u30e9\u30ba\u30d1\u30a4\u306b\u82f1\u8a9e\u3092\u558b\u3089\u305b\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u4e0a\u8a18\u306e\uff12\uff12\u884c\u76ee\u4ee5\u964d\u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n# linux\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u305f\u3081\u306bsubprocess\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\nimport subprocess\n\n# \uff12\uff12\u884c\u76ee\u4ee5\u964d\u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\nspeak = \"This is a \" + recognize[0][0][1]\nsubprocess.check_output([\"espeak\", \"-k5\", \"-s150\", speak])\nprint(speak)\n\n\n\u307e\u3068\u3081\n\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u306eAPI\u3092\u4f7f\u308f\u305a\u306b\u30e9\u30ba\u30d1\u30a4\u3067\u7269\u4f53\u8a8d\u8b58\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\u30cd\u30c3\u30c8\u63a5\u7d9a\u304c\u306a\u3044\u30c8\u30a4\u30ed\u30dc\u30c3\u30c8\u306a\u3069\u306b\u3082\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u8a8d\u8b58\u3067\u304d\u308b\u30e9\u30d9\u30eb\u304c\u304b\u306a\u308a\u8c4a\u5bcc\u306b\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u4e00\u90e8\u3092\u65e5\u672c\u8a9e\u5316\u3059\u308b\u3060\u3051\u3067\u3082\u8272\u3093\u306a\u3082\u306e\u304c\u8a8d\u8b58\u304c\u53ef\u80fd\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\uff08\u4e0a\u8a18\u306eGranny_Smith\u3092\u308a\u3093\u3054\u306b\u5909\u63db\u3057\u305f\u308a\u3068\u304b\uff09\n\u4eca\u56de\u306f\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u5229\u7528\u3057\u3066\u307f\u305f\u306e\u3067\u3001\u81ea\u5206\u3067\u7528\u610f\u3057\u305f\u753b\u50cf\u306e\u5b66\u7fd2\u306b\u3082\u6311\u6226\u3057\u3066\u307f\u305f\u3044\u3067\u3059\u306d\u3002\u3067\u306f\u3002\n\n\u8ffd\u8a18\uff1a2016/12/31\n\u306a\u3093\u304b\u6c17\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u65e5\u672c\u8a9e\u5316\u3057\u3066\u307f\u307e\u3057\u305f\uff08\u5927\u6666\u65e5\u3060\u3068\u3044\u3046\u306e\u306b\u2026\uff09\u3002\n\n\u6df1\u5c64\u5b66\u7fd2\u3067\u7269\u4f53\u8a8d\u8b58 - YouTube\n\u65e5\u672c\u8a9e\u3067\u7269\u4f53\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\n\n\u30e9\u30d9\u30eb\u3092\u65e5\u672c\u8a9e\u5316\n\u4ee5\u524d\u3001Pok\u00e9mon GO\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u540d\u3092\u65e5\u672c\u8a9e\u5316\u3057\u305f\u306e\u3068\u540c\u3058\u304f\u3001\u4ee5\u4e0b\u306e\u69d8\u306ajson\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\uff08\u5229\u7528\u3057\u305f\u3044\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u3063\u305f\u3089\u3001\u3054\u81ea\u7531\u306b\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\uff09\nimagenet_class_index.json\n\u30b5\u30c3\u3068\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u7d44\u3093\u3067\u7ffb\u8a33\u51fa\u6765\u308c\u3070\u683c\u597d\u826f\u3044\u306e\u3067\u3059\u304c\u2026\u3002CSV\u30d5\u30a1\u30a4\u30eb\u306b\u843d\u3068\u3057\u305f\u3082\u306e\u3092\u3001Google\u306e\u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u7ffb\u8a33\u3057\u3066\uff08GOOGLETRANSLATE\uff09\u3001\u7ffb\u8a33\u304c\u30a4\u30de\u30a4\u30c1\u306a\u90e8\u5206\u3092\u3061\u307e\u3061\u307e\u3068\u624b\u4f5c\u696d\u3067\u76f4\u3057\u307e\u3057\u305f\u3002\n\u7ffb\u8a33\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3044\u3051\u308b\u3060\u308d\u3046\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\napp.py\nimport sys\nimport json\n\nwith open('imagenet_class_index.json', 'r') as f:\n  obj = json.load(f)\n  for i in obj:\n    if i['en'] == sys.argv[1]:\n        print(i['ja'])\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n$ python3 app.py goldfish\n\u91d1\u9b5a\n\n\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n\n\u65e5\u672c\u8a9e\u3067\u97f3\u58f0\u767a\u8a71\u3055\u305b\u308b\n\u3053\u308c\u306fOpenJTalk\u3092\u4f7f\u3048\u3070\u826f\u3044\u3068\u601d\u3044\u3002\u3053\u3061\u3089\u306e\u8a18\u4e8b\uff08OpenJTalk + python \u3067\u65e5\u672c\u8a9e\u30c6\u30ad\u30b9\u30c8\u3092\u767a\u8a71 - Qiita\uff09\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001Python3\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3044\u3001\u3072\u3068\u3057\u304d\u308a\u60a9\u307f\u307e\u3057\u305f\u3002\nimport sys\nimport subprocess\n\ndef jtalk(t):\n    open_jtalk=['open_jtalk']\n    mech=['-x','/var/lib/mecab/dic/open-jtalk/naist-jdic']\n    htsvoice=['-m','/usr/share/hts-voice/mei/mei_happy.htsvoice']\n    speed=['-r','1.0']\n    outwav=['-ow','open_jtalk.wav']\n    cmd=open_jtalk+mech+htsvoice+speed+outwav\n    c = subprocess.Popen(cmd,stdin=subprocess.PIPE)\n    c.stdin.write(t)\n    c.stdin.close()\n    c.wait()\n    aplay = ['aplay','-q','open_jtalk.wav']\n    wr = subprocess.Popen(aplay)\n\ntext = '\u3053\u3093\u306b\u3061\u306f'.encode('utf-8')\njtalk(text)\n\nPython3\u7cfb\u306b\u306a\u3063\u3066\u304b\u3089\u6587\u5b57\u5217\u304cstr\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u3053\u306e\u69d8\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u5f15\u6570\u3068\u3057\u3066\u65e5\u672c\u8a9e\u3092\u5229\u7528\u3059\u308b\u969b\u306f\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u306a\u69d8\u3067\u3059\u3002\n\u30c6\u30ad\u30b9\u30c8\u3092.encode('utf-8')\u3092\u4f7f\u3063\u3066\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u3089\u4e0a\u624b\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n\n\u3053\u3093\u306a\u611f\u3058\n\n\u300c\u30ea\u30f3\u30b4\u300d\u3068\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u3067\u5b50\u4f9b\u3082\u904a\u3079\u308b\u304b\u306a\uff1f\n\n\u300ciPhone\u300d\u3068\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002316\u884c\u76ee\u304b\u3089\u306eif __name__ == '__main__':\u4ee5\u964d\u3092\u4ee5\u4e0b\u306e\u69d8\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n# \u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\nimport cv2\nimport subprocess\nimport json\nimport sys\n\n# \u4ee5\u4e0b\u3092316\u884c\u76ee\u304b\u3089\u66f8\u304d\u63db\u3048\nif __name__ == '__main__':\n    model = InceptionV3(include_top=True, weights='imagenet')\n\n    def jtalk(t):\n        open_jtalk=['open_jtalk']\n        mech=['-x','/var/lib/mecab/dic/open-jtalk/naist-jdic']\n        htsvoice=['-m','/usr/share/hts-voice/mei/mei_happy.htsvoice']\n        speed=['-r','1.0']\n        outwav=['-ow','open_jtalk.wav']\n        cmd=open_jtalk+mech+htsvoice+speed+outwav\n        c = subprocess.Popen(cmd,stdin=subprocess.PIPE)\n        c.stdin.write(t)\n        c.stdin.close()\n        c.wait()\n        aplay = ['aplay','-q','open_jtalk.wav']\n        wr = subprocess.Popen(aplay)\n\n    cam = cv2.VideoCapture(0)\n\n    while(True):\n        ret, frame = cam.read()\n        cv2.imshow(\"Show FLAME Image\", frame)\n\n        k = cv2.waitKey(1)\n        if k == ord('s'):\n            cv2.imwrite(\"output.png\", frame)\n            img_path = \"output.png\"\n            img = image.load_img(img_path, target_size=(299, 299))\n            x = image.img_to_array(img)\n            x = np.expand_dims(x, axis=0)\n\n            x = preprocess_input(x)\n\n            preds = model.predict(x)\n            recognize = decode_predictions(preds)\n            recognize_rabel = recognize[0][0][1]\n\n            with open('imagenet_class_index.json', 'r') as f:\n              obj = json.load(f)\n              for i in obj:\n                if i['en'] == recognize_rabel:\n                    print('\u3053\u308c\u306f' + i['ja'] + '\u3060\u3088')\n\n                    text = '\u3053\u308c\u306f' + i['ja'] + '\u3060\u3088'\n                    text = text.encode('utf-8')\n                    jtalk(text)\n\n        elif k == ord('q'):\n            break\n\n    cam.release()\n    cv2.destroyAllWindows()\n\n\n\n\u3082\u3046\u4e00\u5ea6\u307e\u3068\u3081\n\u300c\u4eba\u5de5\u77e5\u80fd\u3092\u4f7f\u3063\u3066\u3001\u3053\u3093\u306a\u3053\u3068\u3067\u304d\u306a\u3044\u304b\u306a\u3042\u3002\u300d\u3063\u3066\u601d\u3063\u3066\u305f\u3053\u3068\u304c\u4eca\u5e74\u306e\u5185\u306b\u51fa\u6765\u305f\u306e\u3067\u3001\u826f\u3057\u3068\u3057\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u7686\u69d8\u3001\u826f\u3044\u304a\u5e74\u3092\u3002\n\u4ee5\u524d\u304b\u3089\u3084\u3063\u3066\u307f\u305f\u304b\u3063\u305fRaspberry Pi\u306e\u7269\u4f53\u8a8d\u8b58\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u308f\u305a\u306b\u6df1\u5c64\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u74b0\u5883\n\n![DSC_0037.jpg](https://qiita-image-store.s3.amazonaws.com/0/47128/90f3a8cd-4372-66f2-01f9-ad0f33906057.jpeg)\n\n- Raspberry Pi3 (RASPBIAN JESSIE WITH PIXEL 4.4\u3000/ Python 3.4.2)\n- LOGICOOL \u30a6\u30a7\u30d6\u30ab\u30e0 HD\u753b\u8cea 120\u4e07\u753b\u7d20 C270\n- \u30df\u30cb\u30ed\u30dc\u30c3\u30c8PC\u7b49\u7528\u30b9\u30d4\u30fc\u30ab\u30fc\u5c0f\u578b\u304b\u308f\u3044\u3044\u767d\n- 7\u30a4\u30f3\u30c1(1024*600) IPS\u6db2\u6676\u30d1\u30cd\u30eb\u3000\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\n\n\u4eca\u307e\u3067\u30ab\u30e1\u30e9\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001OpenCV\u3067\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3092\u3055\u305b\u308b\u305f\u3081Web\u30ab\u30e1\u30e9\u3092\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002\u3064\u3044\u3067\u306b\u3061\u3087\u3063\u3068\u53ef\u611b\u3089\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u578b\u306e\u30b9\u30d4\u30fc\u30ab\u30fc\u3082\u5408\u308f\u305b\u3066\u8cb7\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30ed\u30dc\u30c3\u30c8\u578b\u306e\u30b9\u30d4\u30fc\u30ab\u30fc\u304cWeb\u30ab\u30e1\u30e9\u306b\u6620\u3063\u305f\u7269\u3092\u3057\u3083\u3079\u3063\u3066\u304f\u308c\u307e\u3059\uff08\u82f1\u8a9e\u3067\u3059\uff09\u3002\n\n## \u3053\u3093\u306a\u611f\u3058\n\n[![Deep Learning Object Recognition ](http://img.youtube.com/vi/CL8cA-_qG3Y/0.jpg)](https://www.youtube.com/watch?v=CL8cA-_qG3Y)\n\n[Deep Learning Object Recognition   - YouTube](https://www.youtube.com/watch?v=CL8cA-_qG3Y)\n\n\u3061\u3087\u3063\u3068\u30ec\u30c8\u30ed\u306a\u6a5f\u68b0\u97f3\u58f0\u3067\u8a71\u3057\u307e\u3059\u3002\n\n![2016-12-30 18_45_34.gif](https://qiita-image-store.s3.amazonaws.com/0/47128/9a1d77ff-0759-73d1-7e3e-7737fdbb75f8.gif)\n\n\u300cApple\u300d\u3068\u7b54\u3048\u308b\u304b\u3068\u601d\u3063\u305f\u3089\u3001\u300cGranny Smith\uff08\u30b0\u30e9\u30cb\u30fc\u30b9\u30df\u30b9\uff09\u300d\u3068\u3044\u3046\u308a\u3093\u3054\u306e\u54c1\u7a2e\u3092\u7b54\u3048\u307e\u3057\u305f\u3002\u30a2\u30e1\u30ea\u30ab\u3067\u306f\u30e1\u30b8\u30e3\u30fc\u306a\u54c1\u7a2e\u306e\u69d8\u3067\u3059\u3002\uff08\u3053\u308c\u306f\u300c\u3075\u3058\u308a\u3093\u3054\u300d\u3067\u3059\uff09\n\n![2016-12-30 18_46_26.gif](https://qiita-image-store.s3.amazonaws.com/0/47128/a6012cb5-3134-d862-d5a7-346612867aca.gif)\n\niPhone\u3092\u898b\u305b\u308b\u3068\u300ciPod\u300d\u3068\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\uff08\u5b66\u7fd2\u30c7\u30fc\u30bf\u304c\u3061\u3087\u3063\u3068\u53e4\u3044\u304b\u306a\uff1f\uff09\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\n### OpenCV3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n[Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3](http://www.pyimagesearch.com/2016/04/18/install-guide-raspberry-pi-3-raspbian-jessie-opencv-3/)\n\nOpenCV\u306fPython3\u7cfb\u3067\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u3001\u4f9d\u5b58\u95a2\u4fc2\u304c\u3084\u3084\u3053\u3057\u304f\u82e6\u52b4\u3057\u307e\u3057\u305f\u3002\u4e0a\u8a18\u30b5\u30a4\u30c8\u306e\u624b\u9806\u306b\u6cbf\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n### TensorFlow\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n[tensorflow-on-raspberry-pi](https://github.com/samjabrahams/tensorflow-on-raspberry-pi)\n\nTensorFlow\u306f\u6a19\u6e96\u3067\u306f\u30e9\u30ba\u30d1\u30a4\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001GitHub\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3053\u3061\u3089\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\n### Keras \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nKeras\u306f\u666e\u901a\u306b`pip`\u3092\u5229\u7528\u3057\u3066\u7c21\u5358\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u307e\u3059\u3002\u4f9d\u5b58\u95a2\u4fc2\u306e\u3042\u308b\u30e9\u30a4\u30d6\u30e9\u30ea`scipy`\u3084`h5py`\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067`sudo apt-get`\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u306e\u5229\u7528\n\n\u30e1\u30a4\u30f3\u958b\u767a\u8005\u306e[Fran\u00e7ois Chollet](https://github.com/fchollet)\u3055\u3093\u304c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u516c\u958b\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\n[fchollet/deep-learning-models - GitHub](https://github.com/fchollet/deep-learning-models.git)\n\n\u3053\u3061\u3089\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u304f\u308c\u3070\u3001\u7269\u4f53\u8a8d\u8b58\u3092\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u4eca\u56de\u306f\u9a5a\u7570\u306e\u8a8d\u8b58\u738796.6%\u3092\u8a87\u308b\u5b66\u7fd2\u30e2\u30c7\u30eb`InceptionV3`\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb`h5`\u3068\u3001\u30e9\u30d9\u30eb\u4e00\u89a7`json`\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\uff08\u30e9\u30d9\u30eb\u304c\u7d041,000\u7a2e\u985e\u3082\u3042\u308b\uff09\u3001\u3053\u308c\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3057\u307e\u3044\u3001\u540c\u3058\u968e\u5c64\u306b\u8a2d\u7f6e\u3057\u307e\u3059\u3002\n\n```bash\ndeep-learning-models\n\u251c\u2500\u2500 imagenet_class_index.json\n\u251c\u2500\u2500 imagenet_utils.py\n\u251c\u2500\u2500 inception_v3.py\n\u251c\u2500\u2500 inception_v3_weights_tf_dim_ordering_tf_kernels.h5\n\u251c\u2500\u2500 inception_v3_weights_tf_dim_ordering_tf_kernels_notop.h5\n\u251c\u2500\u2500 inception_v3_weights_th_dim_ordering_th_kernels.h5\n\u2514\u2500\u2500inception_v3_weights_th_dim_ordering_th_kernels_notop.h5\n```\n\u5b66\u7fd2\u3055\u305b\u308b\u306b\u306f\u81a8\u5927\u306a\u6642\u9593\u304c\u304b\u304b\u308b\u69d8\u3067\u3059\u304c\uff08\u6df1\u5c64\u5b66\u7fd2\u7528\u306ePC\u30671\u30f6\u6708\u4f4d\u304b\u304b\u308b\u3068\u304b\uff09\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d5\u30a1\u30a4\u30eb\u3067\u8a2d\u7f6e\u3059\u308c\u3070\u3001\u30e9\u30ba\u30d1\u30a4\u3067\u30821\u30012\u79d2\u3067\u753b\u50cf\u8a8d\u8b58\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n## \u5c11\u3057\u6539\u9020\u3059\u308b\n\n![tBEPGOefTR.jpg](https://qiita-image-store.s3.amazonaws.com/0/47128/27d61878-4275-1ef4-c580-28df98e8bd91.jpeg)\n\n```bash\n$ cd deep-learning-models\n$ python3 inception_v3.py\nUsing TensorFlow backend.\nPredicted: [[('n02504013', 'Indian_elephant', 0.87686646), ('n01871265', 'tusker', 0.044712357), ('n02504458', 'African_elephant', 0.02874627), ('n02398521', 'hippopotamus', 0.0072720782), ('n02092339', 'Weimaraner', 0.0020943223)]]\n```\n\u753b\u50cf\u3092\u89e3\u6790\u3059\u308b\u3068\u3001\u300c\u30e9\u30d9\u30eb\u756a\u53f7\u30fb\u30e9\u30d9\u30eb\u540d\u30fb\u4e88\u6e2c\u5024\u300d\u304c\u591a\u6b21\u5143\u914d\u5217\u3067\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001326\u3001327\u884c\u76ee\uff08\u6700\u5f8c\u306e\uff12\u884c\uff09\u3092\u4ee5\u4e0b\u306e\u69d8\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n```python\npreds = model.predict(x)\nrecognize = decode_predictions(preds)\nprint('Label:', recognize[0][0][1])\n```\n\n\u3053\u308c\u3067\u4e00\u756a\u4e88\u6e2c\u5024\u306e\u9ad8\u3044\u30e9\u30d9\u30eb\u3092\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\n\n```bash\nLabel: Indian_elephant\n```\n\n## OpenCV\u306e\u753b\u50cf\u3092\u89e3\u6790\u3059\u308b\n\nOpenCV\u306e\u753b\u50cf\u306fBGR\u306eNumPy\u914d\u5217\u3068\u306a\u308a\u3001\u51e6\u7406\u304c\u9762\u5012\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u5358\u7d14\u306bs\u30ad\u30fc\u62bc\u4e0b\u3067\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\u69d8\u306b\u3057\u307e\u3057\u305f\u3002\n\n316\u884c\u76ee\u304b\u3089\u306e`if __name__ == '__main__':`\u4ee5\u964d\u3092\u4ee5\u4e0b\u306e\u69d8\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n```python\nimport cv2\nif __name__ == '__main__':\n    model = InceptionV3(include_top=True, weights='imagenet')\n\n    cam = cv2.VideoCapture(0)\n\n    while(True):\n        ret, frame = cam.read()\n        cv2.imshow(\"Show FLAME Image\", frame)\n\n        k = cv2.waitKey(1)\n        if k == ord('s'):\n            cv2.imwrite(\"output.png\", frame)\n            img_path = \"output.png\"\n            img = image.load_img(img_path, target_size=(299, 299))\n            x = image.img_to_array(img)\n            x = np.expand_dims(x, axis=0)\n\n            x = preprocess_input(x)\n\n            preds = model.predict(x)\n            recognize = decode_predictions(preds)\n            print('Label:', recognize[0][0][1])\n\n        elif k == ord('q'):\n            break\n\n    cam.release()\n    cv2.destroyAllWindows()\n```\n\n\u753b\u50cf\u306e\u5909\u63db\u306f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\n## \u97f3\u58f0\u767a\u8a71\u3055\u305b\u308b\n\n\u672c\u5f53\u306f\u30e9\u30d9\u30eb\u3092\u65e5\u672c\u8a9e\u306b\u5909\u63db\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u65ad\u5ff5\u3057\u3001\u82f1\u8a9e\u30e9\u30d9\u30eb\u3092\u305d\u306e\u307e\u307e\u767a\u8a71\u3055\u305b\u307e\u3059\u3002\u30e9\u30ba\u30d1\u30a4\u306e\u82f1\u8a9e\u3067\u306e\u767a\u8a71\u306flinux\u306e\u30bd\u30d5\u30c8[eSpeak text to speech](http://espeak.sourceforge.net/)\u304c\u7c21\u5358\u3067\u3059\u3002\n\n```bash\n$ sudo apt-get install espeak\n$ espeak \"This is a test\"\n```\n\n\u3053\u308c\u3067\u30e9\u30ba\u30d1\u30a4\u306b\u82f1\u8a9e\u3092\u558b\u3089\u305b\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u4e0a\u8a18\u306e\uff12\uff12\u884c\u76ee\u4ee5\u964d\u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```python\n# linux\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u305f\u3081\u306bsubprocess\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\nimport subprocess\n\n# \uff12\uff12\u884c\u76ee\u4ee5\u964d\u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\nspeak = \"This is a \" + recognize[0][0][1]\nsubprocess.check_output([\"espeak\", \"-k5\", \"-s150\", speak])\nprint(speak)\n```\n\n## \u307e\u3068\u3081\n\n\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u306eAPI\u3092\u4f7f\u308f\u305a\u306b\u30e9\u30ba\u30d1\u30a4\u3067\u7269\u4f53\u8a8d\u8b58\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\u30cd\u30c3\u30c8\u63a5\u7d9a\u304c\u306a\u3044\u30c8\u30a4\u30ed\u30dc\u30c3\u30c8\u306a\u3069\u306b\u3082\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u8a8d\u8b58\u3067\u304d\u308b\u30e9\u30d9\u30eb\u304c\u304b\u306a\u308a\u8c4a\u5bcc\u306b\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u4e00\u90e8\u3092\u65e5\u672c\u8a9e\u5316\u3059\u308b\u3060\u3051\u3067\u3082\u8272\u3093\u306a\u3082\u306e\u304c\u8a8d\u8b58\u304c\u53ef\u80fd\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\uff08\u4e0a\u8a18\u306e`Granny_Smith`\u3092`\u308a\u3093\u3054`\u306b\u5909\u63db\u3057\u305f\u308a\u3068\u304b\uff09\n\n\u4eca\u56de\u306f\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u5229\u7528\u3057\u3066\u307f\u305f\u306e\u3067\u3001\u81ea\u5206\u3067\u7528\u610f\u3057\u305f\u753b\u50cf\u306e\u5b66\u7fd2\u306b\u3082\u6311\u6226\u3057\u3066\u307f\u305f\u3044\u3067\u3059\u306d\u3002\u3067\u306f\u3002\n\n## \u8ffd\u8a18\uff1a2016/12/31\n\n\u306a\u3093\u304b\u6c17\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u65e5\u672c\u8a9e\u5316\u3057\u3066\u307f\u307e\u3057\u305f\uff08\u5927\u6666\u65e5\u3060\u3068\u3044\u3046\u306e\u306b\u2026\uff09\u3002\n\n[![\u6df1\u5c64\u5b66\u7fd2\u3067\u7269\u4f53\u8a8d\u8b58](http://img.youtube.com/vi/-wp2keeQo6Q/0.jpg)](https://www.youtube.com/watch?v=-wp2keeQo6Q)\n\n[\u6df1\u5c64\u5b66\u7fd2\u3067\u7269\u4f53\u8a8d\u8b58 - YouTube](https://www.youtube.com/watch?v=-wp2keeQo6Q)\n\n\u65e5\u672c\u8a9e\u3067\u7269\u4f53\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\n\n## \u30e9\u30d9\u30eb\u3092\u65e5\u672c\u8a9e\u5316\n\n\u4ee5\u524d\u3001Pok\u00e9mon GO\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u540d\u3092\u65e5\u672c\u8a9e\u5316\u3057\u305f\u306e\u3068\u540c\u3058\u304f\u3001\u4ee5\u4e0b\u306e\u69d8\u306a`json`\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\uff08\u5229\u7528\u3057\u305f\u3044\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u3063\u305f\u3089\u3001\u3054\u81ea\u7531\u306b\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\uff09\n\n[imagenet_class_index.json](https://gist.github.com/PonDad/4dcb4b242b9358e524b4ddecbee385e9)\n\n\u30b5\u30c3\u3068\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u7d44\u3093\u3067\u7ffb\u8a33\u51fa\u6765\u308c\u3070\u683c\u597d\u826f\u3044\u306e\u3067\u3059\u304c\u2026\u3002CSV\u30d5\u30a1\u30a4\u30eb\u306b\u843d\u3068\u3057\u305f\u3082\u306e\u3092\u3001Google\u306e\u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u7ffb\u8a33\u3057\u3066\uff08[GOOGLETRANSLATE](https://support.google.com/docs/answer/3093331?hl=ja)\uff09\u3001\u7ffb\u8a33\u304c\u30a4\u30de\u30a4\u30c1\u306a\u90e8\u5206\u3092\u3061\u307e\u3061\u307e\u3068\u624b\u4f5c\u696d\u3067\u76f4\u3057\u307e\u3057\u305f\u3002\n\n\u7ffb\u8a33\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3044\u3051\u308b\u3060\u308d\u3046\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\n```app.py\nimport sys\nimport json\n\nwith open('imagenet_class_index.json', 'r') as f:\n  obj = json.load(f)\n  for i in obj:\n    if i['en'] == sys.argv[1]:\n        print(i['ja'])\n```\n\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```bash\n$ python3 app.py goldfish\n\u91d1\u9b5a\n```\n\n\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n\n## \u65e5\u672c\u8a9e\u3067\u97f3\u58f0\u767a\u8a71\u3055\u305b\u308b\n\n\u3053\u308c\u306fOpenJTalk\u3092\u4f7f\u3048\u3070\u826f\u3044\u3068\u601d\u3044\u3002\u3053\u3061\u3089\u306e\u8a18\u4e8b\uff08[OpenJTalk + python \u3067\u65e5\u672c\u8a9e\u30c6\u30ad\u30b9\u30c8\u3092\u767a\u8a71 - Qiita](http://qiita.com/kkoba84/items/b828229c374a249965a9)\uff09\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u305f\u3060\u3001Python3\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3044\u3001\u3072\u3068\u3057\u304d\u308a\u60a9\u307f\u307e\u3057\u305f\u3002\n\n```python\nimport sys\nimport subprocess\n\ndef jtalk(t):\n    open_jtalk=['open_jtalk']\n    mech=['-x','/var/lib/mecab/dic/open-jtalk/naist-jdic']\n    htsvoice=['-m','/usr/share/hts-voice/mei/mei_happy.htsvoice']\n    speed=['-r','1.0']\n    outwav=['-ow','open_jtalk.wav']\n    cmd=open_jtalk+mech+htsvoice+speed+outwav\n    c = subprocess.Popen(cmd,stdin=subprocess.PIPE)\n    c.stdin.write(t)\n    c.stdin.close()\n    c.wait()\n    aplay = ['aplay','-q','open_jtalk.wav']\n    wr = subprocess.Popen(aplay)\n\ntext = '\u3053\u3093\u306b\u3061\u306f'.encode('utf-8')\njtalk(text)\n```\nPython3\u7cfb\u306b\u306a\u3063\u3066\u304b\u3089\u6587\u5b57\u5217\u304c`str`\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u3053\u306e\u69d8\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u5f15\u6570\u3068\u3057\u3066\u65e5\u672c\u8a9e\u3092\u5229\u7528\u3059\u308b\u969b\u306f\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u306a\u69d8\u3067\u3059\u3002\n\n\u30c6\u30ad\u30b9\u30c8\u3092`.encode('utf-8')`\u3092\u4f7f\u3063\u3066\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u3089\u4e0a\u624b\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n\n## \u3053\u3093\u306a\u611f\u3058\n\n![2016-12-31 21_02_49.gif](https://qiita-image-store.s3.amazonaws.com/0/47128/c3b06870-fd2d-0478-b3fd-3c5f1a96d302.gif)\n\n\u300c\u30ea\u30f3\u30b4\u300d\u3068\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u3067\u5b50\u4f9b\u3082\u904a\u3079\u308b\u304b\u306a\uff1f\n\n![2016-12-31 21_03_35.gif](https://qiita-image-store.s3.amazonaws.com/0/47128/ec642e9e-a665-e121-282e-58bf312a30e2.gif)\n\n\u300ciPhone\u300d\u3068\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002316\u884c\u76ee\u304b\u3089\u306e`if __name__ == '__main__':`\u4ee5\u964d\u3092\u4ee5\u4e0b\u306e\u69d8\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n```python\n# \u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\nimport cv2\nimport subprocess\nimport json\nimport sys\n\n# \u4ee5\u4e0b\u3092316\u884c\u76ee\u304b\u3089\u66f8\u304d\u63db\u3048\nif __name__ == '__main__':\n    model = InceptionV3(include_top=True, weights='imagenet')\n\n    def jtalk(t):\n        open_jtalk=['open_jtalk']\n        mech=['-x','/var/lib/mecab/dic/open-jtalk/naist-jdic']\n        htsvoice=['-m','/usr/share/hts-voice/mei/mei_happy.htsvoice']\n        speed=['-r','1.0']\n        outwav=['-ow','open_jtalk.wav']\n        cmd=open_jtalk+mech+htsvoice+speed+outwav\n        c = subprocess.Popen(cmd,stdin=subprocess.PIPE)\n        c.stdin.write(t)\n        c.stdin.close()\n        c.wait()\n        aplay = ['aplay','-q','open_jtalk.wav']\n        wr = subprocess.Popen(aplay)\n\n    cam = cv2.VideoCapture(0)\n\n    while(True):\n        ret, frame = cam.read()\n        cv2.imshow(\"Show FLAME Image\", frame)\n\n        k = cv2.waitKey(1)\n        if k == ord('s'):\n            cv2.imwrite(\"output.png\", frame)\n            img_path = \"output.png\"\n            img = image.load_img(img_path, target_size=(299, 299))\n            x = image.img_to_array(img)\n            x = np.expand_dims(x, axis=0)\n\n            x = preprocess_input(x)\n\n            preds = model.predict(x)\n            recognize = decode_predictions(preds)\n            recognize_rabel = recognize[0][0][1]\n\n            with open('imagenet_class_index.json', 'r') as f:\n              obj = json.load(f)\n              for i in obj:\n                if i['en'] == recognize_rabel:\n                    print('\u3053\u308c\u306f' + i['ja'] + '\u3060\u3088')\n\n                    text = '\u3053\u308c\u306f' + i['ja'] + '\u3060\u3088'\n                    text = text.encode('utf-8')\n                    jtalk(text)\n\n        elif k == ord('q'):\n            break\n\n    cam.release()\n    cv2.destroyAllWindows()\n\n```\n\n## \u3082\u3046\u4e00\u5ea6\u307e\u3068\u3081\n\n\u300c\u4eba\u5de5\u77e5\u80fd\u3092\u4f7f\u3063\u3066\u3001\u3053\u3093\u306a\u3053\u3068\u3067\u304d\u306a\u3044\u304b\u306a\u3042\u3002\u300d\u3063\u3066\u601d\u3063\u3066\u305f\u3053\u3068\u304c\u4eca\u5e74\u306e\u5185\u306b\u51fa\u6765\u305f\u306e\u3067\u3001\u826f\u3057\u3068\u3057\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u7686\u69d8\u3001\u826f\u3044\u304a\u5e74\u3092\u3002\n\n\n\n\n\n\n\n\n\n", "tags": ["RaspberryPi", "Keras", "\u6a5f\u68b0\u5b66\u7fd2", "TensorFlow", "DeepLearning"]}