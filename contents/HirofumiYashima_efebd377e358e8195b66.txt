{"context": "\n\n\u540c\u6642\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb \u3068\u306f\n\n\u305f\u3068\u3048\u3070\u3001\u7d4c\u6e08\u5b66\u306e\u6559\u79d1\u66f8\u306b\u51fa\u3066\u304f\u308b\u300c\u9700\u8981\u300d\u3068\u300c\u4f9b\u7d66\u300d\u306e\u95a2\u4fc2\u3002\n\n\u3082\u306e\u306e\u5024\u6bb5\uff08\u4fa1\u683c\uff09\u3068\u6d88\u8cbb\u91cf\uff08\u58f2\u4e0a\uff09\u306f\u3001\u300c\u9700\u8981\u300d\u3068\u300c\u4f9b\u7d66\u300d\u304c\u4ea4\u308f\u308a\u3001\u4e00\u81f4\u3059\u308b\u3068\u3053\u308d\uff08\u4fa1\u683c\u3068\u91cf\uff09\u3067\u6c7a\u307e\u308a\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u3001\u300c\u9700\u8981\u300d\u3092\u76ee\u7684\u5909\u6570\uff08\u88ab\u8aac\u660e\u5909\u6570\uff09\u306b\u3068\u308a\u3001\u300c\u9700\u8981\u300d\u3092\u6c7a\u5b9a\u3059\u308b\u8aac\u660e\u5909\u6570\u3092\u8907\u6570\u306a\u3089\u3079\u305f\u91cd\u56de\u5e30\u5f0f\u3068\u3001\u304a\u306a\u3058\u3088\u3046\u306b\u3001\u300c\u4f9b\u7d66\u300d\u3092\u76ee\u7684\u5909\u6570\u306b\u3068\u308a\u3001\u8907\u6570\u306e\u300c\u4f9b\u7d66\u300d\u6c7a\u5b9a\u8981\u56e0\u3092\u8aac\u660e\u5909\u6570\u306b\u3068\u3063\u305f\u91cd\u56de\u5e30\u5f0f\u3092\uff12\u672c\u7528\u610f\u3057\u307e\u3059\u304c\u3001\u7247\u65b9\u306e\u91cd\u56de\u5e30\u5f0f\u306e\u8aac\u660e\u5909\u6570\u306b\u3001\u3082\u3046\u7247\u65b9\u306e\u91cd\u56de\u5e30\u5f0f\u306e\u76ee\u7684\u5909\u6570\u3092\u4e92\u3044\u306b\u542b\u3093\u3067\u3044\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u5834\u5408\u3001\u3069\u3061\u3089\u306e\u91cd\u56de\u5e30\u5f0f\u3082\u3001\u65b9\u7a0b\u5f0f\u306e \u8aa4\u5dee\u9805 \u3068 \u3042\u308b\u8aac\u660e\u5909\u6570 = \u3082\u3046\u7247\u65b9\u306e\u91cd\u56de\u5e30\u5f0f\u306e\u76ee\u7684\u5909\u6570 \u3068\u306e\u9593\u306b\u76f8\u95a2\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u591a\u91cd\u56de\u5e30\u5206\u6790\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n \uff08\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3078\u306e\u30ea\u30f3\u30af\uff09\u300c\u540c\u6642\u65b9\u7a0b\u5f0f\u3068\u5e83\u544a\u3068Instrumental Variable Method\u300d \n\n\n\n\u64cd\u4f5c\u5909\u6570\u6cd5 \u306b\u3088\u308b\u89e3\u6c7a\n\n\u3053\u306e\u5834\u5408\u3001\u8aa4\u5dee\u9805 \u3068 \u76f8\u95a2\u3057\u306a\u3044\u4f55\u3089\u304b\u306e\u5909\u6570 \u3092\u4eee\u5b9a\u7684\u306b\u53d6\u308a\u5165\u308c\u3066\u3001\u91cd\u56de\u5e30\u5206\u6790\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u3001\u300c\u9700\u8981\u300d\u3068\u300c\u4f9b\u7d66\u300d\u306e\u95a2\u4fc2\u306e\u3088\u3046\u306a\u3001\u5165\u308c\u5b50\u306b\u306a\u3063\u305f\u9023\u7acb\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u3092\u89e3\u3044\u3066\u3001\u300c\u4fa1\u683c\u300d\u3068\u300c\u8ca9\u58f2\u91cf\u300d\uff08\u751f\u7523\u91cf\uff09\u3092\u63a8\u8a08\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\n\u7406\u8ad6\u7684\u306a\u8a71\u306f\u3001\u4e0b\u8a18\u306e\u53c2\u8003\u8cc7\u6599\u304c\u76f4\u611f\u7684\u306b\u308f\u304b\u308a\u3084\u3059\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\n\n \uff08\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\uff09\u300c\u540c\u6642\u65b9\u7a0b\u5f0f\u3068\u5e83\u544a\u3068Instrumental Variable Method\u300d \n\n\n \uff08\u6176\u61c9\u7fa9\u587e\u5927\u5b66\u6cd5\u5b66\u90e8\u8b1b\u7fa9\u8cc7\u6599 \u300c\u64cd\u4f5c\u5909\u6570\u6cd5\u300d\u3078\u306e\u30ea\u30f3\u30af\uff09\n\n\n\nR \u3067\u89e3\u304f\u65b9\u6cd5\n\n\uff01 \u3053\u3053\u3067\u6ce8\u610f  \uff01  \n\n\n\u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\u3001\u3068\u3044\u3063\u3066\u3082\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u901a\u5e38\u306e\u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\u65b9\u6cd5\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\n\n\uff08\u3053\u3053\u3067\u5411\u304d\u5408\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u591a\u91cd\u56de\u5e30\u5f0f\u306e\u9023\u7acb\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u3060\u304b\u3089\u3067\u3059\uff09\n\n \uff08\u30ea\u30f3\u30af\uff09R\u3067\u9023\u7acb\u4e00\u6b21\u65b9\u7a0b\u5f0f\u306e\u89e3\u3092\u6c42\u3081\u308b\u3002\n\n\n\n\u203b \u6b63\u3057\u3044\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\n\nsystemfit \u30d1\u30c3\u30b1\u30fc\u30b8 \uff08\u540c\u3058\u540d\u524d\u306e systemfit() \u95a2\u6570\uff09\n\n\n\uff08CRAN) Arne Henningsen, Jeff D. Hamann D. Hamann, systemfit: A Package for Estimating Systems of Simultaneous Equations in R \n\n\n \uff08\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3078\u306e\u30ea\u30f3\u30af\uff09\u300c\u540c\u6642\u65b9\u7a0b\u5f0f\u3068\u5e83\u544a\u3068Instrumental Variable Method\u300d \n\n\n\u95a2\u6570\u306e\u30c7\u30e2\u4e8b\u4f8b\u3092\u5b9f\u884c\u3057\u3066\u6d41\u308c\u3092\u78ba\u8a8d\n\nR\ninstall.packages(\"systemfit\")\ninstall.packages(\"plm\")\nlibrary(systemfit) # \u307e\u305f\u306f\u3001 require(systemfit)\nlibrary(plm)       # \u307e\u305f\u306f\u3001 require(plm)\n\n\n\nR\nexample(systemfit)\n\n\nsystmf> data( \"Kmenta\" )\n\nsystmf> eqDemand <- consump ~ price + income\n\nsystmf> eqSupply <- consump ~ price + farmPrice + trend\n\nsystmf> system <- list( demand = eqDemand, supply = eqSupply )\n\nsystmf> ## OLS estimation\nsystmf> fitols <- systemfit( system, data=Kmenta )\n\nsystmf> print( fitols )\n\nsystemfit results \nmethod: OLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         99.895423          -0.316299           0.334636          58.275431           0.160367 \n  supply_farmPrice       supply_trend \n          0.248133           0.248302 \n\nsystmf> ## OLS estimation with 2 restrictions\nsystmf> Rrestr <- matrix(0,2,7)\n\nsystmf> Rrestr[1,3] <-  1\n\nsystmf> Rrestr[1,7] <- -1\n\nsystmf> Rrestr[2,2] <- -1\n\nsystmf> Rrestr[2,5] <-  1\n\nsystmf> qrestr <- c( 0, 0.5 )\n\nsystmf> fitols2 <- systemfit( system, data = Kmenta,\nsystmf+                       restrict.matrix = Rrestr, restrict.rhs = qrestr )\n\nsystmf> print( fitols2 )\n\nsystemfit results \nmethod: OLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n        101.481708          -0.316799           0.318885          54.149420           0.183201 \n  supply_farmPrice       supply_trend \n          0.259528           0.318885 \n\nsystmf> ## OLS estimation with the same 2 restrictions in symbolic form\nsystmf> restrict <- c( \"demand_income - supply_trend = 0\",\nsystmf+    \"- demand_price + supply_price = 0.5\" )\n\nsystmf> fitols2b <- systemfit( system, data = Kmenta, restrict.matrix = restrict )\n\nsystmf> print( fitols2b )\n\nsystemfit results \nmethod: OLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n        101.481708          -0.316799           0.318885          54.149420           0.183201 \n  supply_farmPrice       supply_trend \n          0.259528           0.318885 \n\nsystmf> # test whether both restricted estimators are identical\nsystmf> all.equal( coef( fitols2 ), coef( fitols2b ) )\n[1] TRUE\n\nsystmf> ## OLS with restrictions on the coefficients by modifying the regressor matrix\nsystmf> ## with argument restrict.regMat\nsystmf> modReg <- matrix( 0, 7, 6 )\n\nsystmf> colnames( modReg ) <- c( \"demIntercept\", \"demPrice\", \"demIncome\",\nsystmf+    \"supIntercept\", \"supPrice2\", \"supTrend\" )\n\nsystmf> modReg[ 1, \"demIntercept\" ] <- 1\n\nsystmf> modReg[ 2, \"demPrice\" ]     <- 1\n\nsystmf> modReg[ 3, \"demIncome\" ]    <- 1\n\nsystmf> modReg[ 4, \"supIntercept\" ] <- 1\n\nsystmf> modReg[ 5, \"supPrice2\" ]    <- 1\n\nsystmf> modReg[ 6, \"supPrice2\" ]    <- 1\n\nsystmf> modReg[ 7, \"supTrend\" ]     <- 1\n\nsystmf> fitols3 <- systemfit( system, data = Kmenta, restrict.regMat = modReg )\n\nsystmf> print( fitols3 )\n\nsystemfit results \nmethod: OLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         99.895423          -0.316299           0.334636          51.929646           0.236157 \n  supply_farmPrice       supply_trend \n          0.236157           0.240931 \n\nsystmf> ## iterated SUR estimation\nsystmf> fitsur <- systemfit( system, \"SUR\", data = Kmenta, maxit = 100 )\n\nsystmf> print( fitsur )\n\nsystemfit results \nmethod: iterated SUR \n\nconvergence achieved after 35 iterations\n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         97.516307          -0.143687           0.182020          77.900537           0.105094 \n  supply_farmPrice       supply_trend \n          0.108410           0.191543 \n\nsystmf> ## 2SLS estimation\nsystmf> inst <- ~ income + farmPrice + trend\n\nsystmf> fit2sls <- systemfit( system, \"2SLS\", inst = inst, data = Kmenta )\n\nsystmf> print( fit2sls )\n\nsystemfit results \nmethod: 2SLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         94.633304          -0.243557           0.313992          49.532442           0.240076 \n  supply_farmPrice       supply_trend \n          0.255606           0.252924 \n\nsystmf> ## 2SLS estimation with different instruments in each equation\nsystmf> inst1 <- ~ income + farmPrice\n\nsystmf> inst2 <- ~ income + farmPrice + trend\n\nsystmf> instlist <- list( inst1, inst2 )\n\nsystmf> fit2sls2 <- systemfit( system, \"2SLS\", inst = instlist, data = Kmenta )\n\nsystmf> print( fit2sls2 )\n\nsystemfit results \nmethod: 2SLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n        106.789358          -0.411599           0.361681          49.532442           0.240076 \n  supply_farmPrice       supply_trend \n          0.255606           0.252924 \n\nsystmf> ## 3SLS estimation with GMM-3SLS formula\nsystmf> inst <- ~ income + farmPrice + trend\n\nsystmf> fit3sls <- systemfit( system, \"3SLS\", inst = inst, data = Kmenta,\nsystmf+    method3sls = \"GMM\" )\n\nsystmf> print( fit3sls )\n\nsystemfit results \nmethod: 3SLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         94.633304          -0.243557           0.313992          52.197204           0.228589 \n  supply_farmPrice       supply_trend \n          0.228158           0.361138 \n\nsystmf> ## Examples how to use systemfit() with panel-like data\nsystmf> ## Repeating the SUR estimations in Greene (2003, p. 351)\nsystmf> data( \"GrunfeldGreene\" )\n\nsystmf> library( plm )\n\nsystmf> GGPanel <- plm.data( GrunfeldGreene, c( \"firm\", \"year\" ) )\n\nsystmf> formulaGrunfeld <- invest ~ value + capital\n\nsystmf> # SUR\nsystmf> greeneSur <- systemfit( formulaGrunfeld, \"SUR\",\nsystmf+    data = GGPanel, methodResidCov = \"noDfCor\" )\n\nsystmf> summary( greeneSur )\n\nsystemfit results \nmethod: SUR \n\n         N DF    SSR     detRCov   OLS-R2 McElroy-R2\nsystem 100 85 347048 6.17788e+13 0.844042   0.868682\n\n                  N DF       SSR       MSE     RMSE       R2   Adj R2\nChrysler         20 17   3056.98   179.823  13.4098 0.911862 0.901493\nGeneral.Electric 20 17  14009.12   824.066  28.7065 0.687636 0.650887\nGeneral.Motors   20 17 144320.88  8489.463  92.1383 0.920742 0.911417\nUS.Steel         20 17 183763.01 10809.589 103.9692 0.421959 0.353954\nWestinghouse     20 17   1898.25   111.662  10.5670 0.726429 0.694244\n\nThe covariance matrix of the residuals used for estimation\n                  Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler          149.8722         -21.3757       -282.756   418.079      13.3070\nGeneral.Electric  -21.3757         660.8294        607.533   904.952     176.4491\nGeneral.Motors   -282.7564         607.5331       7160.294 -2222.060     126.1762\nUS.Steel          418.0786         904.9517      -2222.060  8896.416     546.1856\nWestinghouse       13.3070         176.4491        126.176   546.186      88.6617\n\nThe covariance matrix of the residuals\n                   Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler          152.84923          2.04737       -313.704   455.089      16.6606\nGeneral.Electric    2.04737        700.45575        605.336  1224.405     200.3163\nGeneral.Motors   -313.70357        605.33650       7216.044 -2686.517     129.8866\nUS.Steel          455.08946       1224.40545      -2686.517  9188.151     652.7164\nWestinghouse       16.66062        200.31627        129.887   652.716      94.9125\n\nThe correlations of the residuals\n                    Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler          1.00000000       0.00625711      -0.298702  0.384018     0.138324\nGeneral.Electric  0.00625711       1.00000000       0.269251  0.482637     0.776898\nGeneral.Motors   -0.29870209       0.26925075       1.000000 -0.329933     0.156947\nUS.Steel          0.38401758       0.48263726      -0.329933  1.000000     0.698954\nWestinghouse      0.13832413       0.77689848       0.156947  0.698954     1.000000\n\n\nSUR estimates for 'Chrysler' (equation 1)\nModel Formula: Chrysler_invest ~ Chrysler_value + Chrysler_capital\n<environment: 0x000000002b8d8ba8>\n\n              Estimate Std. Error  t value   Pr(>|t|)    \n(Intercept)  0.5043036 11.5128290  0.04380 0.96557134    \nvalue        0.0695456  0.0168975  4.11573 0.00072174 ***\ncapital      0.3085445  0.0258636 11.92971 1.1008e-09 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 13.409796 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 3056.984521 MSE: 179.822619 Root MSE: 13.409796 \nMultiple R-Squared: 0.911862 Adjusted R-Squared: 0.901493 \n\n\nSUR estimates for 'General.Electric' (equation 2)\nModel Formula: General.Electric_invest ~ General.Electric_value + General.Electric_capital\n<environment: 0x000000002b8d8ba8>\n\n               Estimate  Std. Error  t value   Pr(>|t|)    \n(Intercept) -22.4389132  25.5185863 -0.87932  0.3914900    \nvalue         0.0372914   0.0122631  3.04094  0.0073808 ** \ncapital       0.1307830   0.0220497  5.93127 1.6424e-05 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 28.706543 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 14009.115084 MSE: 824.065593 Root MSE: 28.706543 \nMultiple R-Squared: 0.687636 Adjusted R-Squared: 0.650887 \n\n\nSUR estimates for 'General.Motors' (equation 3)\nModel Formula: General.Motors_invest ~ General.Motors_value + General.Motors_capital\n<environment: 0x000000002b8d8ba8>\n\n                Estimate   Std. Error  t value   Pr(>|t|)    \n(Intercept) -162.3641052   89.4592324 -1.81495   0.087216 .  \nvalue          0.1204930    0.0216291  5.57087 3.3806e-05 ***\ncapital        0.3827462    0.0327680 11.68047 1.5189e-09 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 92.138284 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 144320.876426 MSE: 8489.463319 Root MSE: 92.138284 \nMultiple R-Squared: 0.920742 Adjusted R-Squared: 0.911417 \n\n\nSUR estimates for 'US.Steel' (equation 4)\nModel Formula: US.Steel_invest ~ US.Steel_value + US.Steel_capital\n<environment: 0x000000002b8d8ba8>\n\n               Estimate  Std. Error t value  Pr(>|t|)   \n(Intercept)  85.4232548 111.8774214 0.76354 0.4556062   \nvalue         0.1014782   0.0547837 1.85234 0.0814214 . \ncapital       0.3999914   0.1277946 3.12996 0.0060999 **\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 103.969173 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 183763.011429 MSE: 10809.588908 Root MSE: 103.969173 \nMultiple R-Squared: 0.421959 Adjusted R-Squared: 0.353954 \n\n\nSUR estimates for 'Westinghouse' (equation 5)\nModel Formula: Westinghouse_invest ~ Westinghouse_value + Westinghouse_capital\n<environment: 0x000000002b8d8ba8>\n\n             Estimate Std. Error t value   Pr(>|t|)    \n(Intercept) 1.0888770  6.2588045 0.17398 0.86393984    \nvalue       0.0570091  0.0113623 5.01742 0.00010566 ***\ncapital     0.0415065  0.0412016 1.00740 0.32786736    \n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 10.56701 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 1898.249072 MSE: 111.66171 Root MSE: 10.56701 \nMultiple R-Squared: 0.726429 Adjusted R-Squared: 0.694244 \n\n\nsystmf> # SUR Pooled\nsystmf> greeneSurPooled <- systemfit( formulaGrunfeld, \"SUR\",\nsystmf+    data = GGPanel, pooled = TRUE, methodResidCov = \"noDfCor\",\nsystmf+    residCovWeighted = TRUE )\n\nsystmf> summary( greeneSurPooled )\n\nsystemfit results \nmethod: SUR \n\n         N DF     SSR     detRCov   OLS-R2 McElroy-R2\nsystem 100 97 1604301 9.94613e+16 0.279053   0.843852\n\n                  N DF      SSR       MSE     RMSE         R2     Adj R2\nChrysler         20 17   6112.2   359.541  18.9616   0.823775   0.803042\nGeneral.Electric 20 17 691132.1 40654.827 201.6304 -14.410331 -16.223311\nGeneral.Motors   20 17 201010.5 11824.147 108.7389   0.889609   0.876622\nUS.Steel         20 17 689379.5 40551.736 201.3746  -1.168498  -1.423616\nWestinghouse     20 17  16667.1   980.421  31.3117  -1.402026  -1.684618\n\nThe covariance matrix of the residuals used for estimation\n                  Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler           409.190         -2594.27       -196.755   2594.27     -102.225\nGeneral.Electric -2594.272         36563.24      -3479.909 -28622.88     3797.408\nGeneral.Motors    -196.755         -3479.91       8612.147    996.07     -970.757\nUS.Steel          2594.272        -28622.88        996.070  32902.83    -2271.944\nWestinghouse      -102.225          3797.41       -970.757  -2271.94      777.975\n\nThe covariance matrix of the residuals\n                    Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler           305.61001         -1966.65       -4.80523   2158.60     -123.920\nGeneral.Electric -1966.64761         34556.60    -7160.66658 -28722.01     4274.000\nGeneral.Motors      -4.80523         -7160.67    10050.52486   4439.99    -1400.747\nUS.Steel          2158.59516        -28722.01     4439.98867  34468.98    -2893.733\nWestinghouse      -123.92048          4274.00    -1400.74696  -2893.73      833.357\n\nThe correlations of the residuals\n                  Chrysler General.Electric General.Motors   US.Steel Westinghouse\nChrysler          1.000000         0.220150     -0.3447472  0.2007628    0.2907014\nGeneral.Electric  0.220150         1.000000     -0.2232503 -0.1586937    0.8973130\nGeneral.Motors   -0.344747        -0.223250      1.0000000 -0.0923957   -0.3760456\nUS.Steel          0.200763        -0.158694     -0.0923957  1.0000000   -0.0757482\nWestinghouse      0.290701         0.897313     -0.3760456 -0.0757482    1.0000000\n\n\nSUR estimates for 'Chrysler' (equation 1)\nModel Formula: Chrysler_invest ~ Chrysler_value + Chrysler_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 18.961571 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 6112.20028 MSE: 359.541193 Root MSE: 18.961571 \nMultiple R-Squared: 0.823775 Adjusted R-Squared: 0.803042 \n\n\nSUR estimates for 'General.Electric' (equation 2)\nModel Formula: General.Electric_invest ~ General.Electric_value + General.Electric_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 201.630421 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 691132.055958 MSE: 40654.826821 Root MSE: 201.630421 \nMultiple R-Squared: -14.410331 Adjusted R-Squared: -16.223311 \n\n\nSUR estimates for 'General.Motors' (equation 3)\nModel Formula: General.Motors_invest ~ General.Motors_value + General.Motors_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 108.738893 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 201010.497194 MSE: 11824.146894 Root MSE: 108.738893 \nMultiple R-Squared: 0.889609 Adjusted R-Squared: 0.876622 \n\n\nSUR estimates for 'US.Steel' (equation 4)\nModel Formula: US.Steel_invest ~ US.Steel_value + US.Steel_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 201.374617 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 689379.520435 MSE: 40551.736496 Root MSE: 201.374617 \nMultiple R-Squared: -1.168498 Adjusted R-Squared: -1.423616 \n\n\nSUR estimates for 'Westinghouse' (equation 5)\nModel Formula: Westinghouse_invest ~ Westinghouse_value + Westinghouse_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 31.311667 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 16667.148552 MSE: 980.420503 Root MSE: 31.311667 \nMultiple R-Squared: -1.402026 Adjusted R-Squared: -1.684618 \n\n\nsystmf> ## Further examples are in the documentation to the data sets\nsystmf> ## 'KleinI' and 'GrunfeldGreene'.\nsystmf> \nsystmf> \nsystmf> \n\n\n\u3010 \u767a\u5c55\u5b66\u7fd2 \u3011 \u30de\u30af\u30ed\u30e2\u30c7\u30eb\u3078\n\n\u30de\u30af\u30ed\u30e2\u30c7\u30eb\u3068\u306f\uff1f\uff1f\n\n\u4eca\u56de\u3001\u63a8\u8a08\u3057\u305f\u65b9\u7a0b\u5f0f\u306f2\u672c\u3067\u3057\u305f\u3002\n\n\u3053\u308c\u304c\u3001\u4e92\u3044\u306b\u8aac\u660e\u5909\u6570\u3068\u76ee\u7684\u5909\u6570\u304c\u5165\u308c\u5b50\uff08\u300c\u9d8f\u3068\u5375\u300d\uff09\u306e\u95a2\u4fc2\u306b\u3042\u308b \u6570\u5341\u672c\uff5e\u6570\u767e\u672c\u306e\u65b9\u7a0b\u5f0f\uff08\u91cd\u56de\u5e30\u5f0f\uff09\u3067\u69cb\u6210\u3055\u308c\u308b\u9023\u7acb\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u3092\u6271\u3046\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n\uff08\u4f8b\uff09\u4e00\u56fd\u306e\u793e\u4f1a\u7d4c\u6e08\u3092\u6570\u7406\u30e2\u30c7\u30eb\uff08\u9023\u7acb\u65b9\u7a0b\u5f0f\uff09\u306b\u8868\u73fe\u3057\u305f\u3082\u306e => \u300c\u30de\u30af\u30ed\u30e2\u30c7\u30eb\u300d\n\n\n Weblio \u8f9e\u66f8 \n\n\n\u4e00\u56fd\u306e\u7d4c\u6e08\u306e\u4ed5\u7d44\u307f\u3092\u30de\u30af\u30ed\u7d4c\u6e08\u5b66\u3068\u8a08\u91cf\u7d4c\u6e08\u5b66\u3092\u7528\u3044\u3066\u8a08\u91cf\u7d4c\u6e08\u30e2\u30c7\u30eb\u306b\u8868\u3057\u305f\u3082\u306e\u3002\u56fd\u6c11\u6240\u5f97\u30fb\u6295\u8cc7\u30fb\u8f38\u51fa\u5165\u306a\u3069\u306e\u76f8\u4e92\u306e\u95a2\u4fc2\u3092\u6570\u91cf\u7684\u306b\u660e\u3089\u304b\u306b\u3057\uff0c\u7d4c\u6e08\u653f\u7b56\u306e\u52b9\u679c\u306e\u63a8\u5b9a\u3084\u7d4c\u6e08\u4e88\u6e2c\u306b\u7528\u3044\u308b\u3002\u30de\u30af\u30ed\u8a08\u91cf\u30e2\u30c7\u30eb\n\n\n \uff08\u30ea\u30f3\u30af\uff09\u5185\u95a3\u5e9c \u7d4c\u6e08\u793e\u4f1a\u7dcf\u5408\u7814\u7a76\u6240 \u300c\u77ed\u671f\u65e5\u672c\u7d4c\u6e08\u30de\u30af\u30ed\u8a08\u91cf\u30e2\u30c7\u30eb\u300d\n\n\n\u203b \u5185\u95a3\u5e9c\u306e\u3053\u306e\u7814\u7a76\u6240\u306f\u3001\u653f\u5e9c\u306e\u65e5\u672c\u7d4c\u6e08\u898b\u901a\u3057 \uff08GDP\u6210\u9577\u7387\u898b\u901a\u3057\u306a\u3069\uff09\u3092\u7b97\u51fa\u3057\u3066\u3044\u308b\u653f\u5e9c\u6a5f\u95a2\u3067\u3059\n\n\u305d\u306e\u300c\u653f\u5e9c\u7d4c\u6e08\u898b\u901a\u3057\u300d\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u305f\u304f\u3055\u3093\u306e\u65b9\u7a0b\u5f0f\u304b\u3089\u306a\u308b\u9023\u7acb\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb = \u30de\u30af\u30ed\u30e2\u30c7\u30eb \u3092\u63a8\u8a08\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\n\n\n\n\n\u3010 \u95a2\u9023\u9818\u57df \u3011 VAR \u30e2\u30c7\u30eb \uff08\u30d9\u30af\u30c8\u30eb\u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb\uff09\n\n \u9280\u5ea7\u3067\u50cd\u304f\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u306e\u30d6\u30ed\u30b0 \u300cR\u3067\u8a08\u91cf\u6642\u7cfb\u5217\u5206\u6790\uff1aVAR\u30e2\u30c7\u30eb\u306e\u57fa\u790e\uff08\u591a\u5909\u91cf\u6642\u7cfb\u5217\u30e2\u30c7\u30eb\uff09\u300d\n\n\n\n Logics of Blue \uff08\u65e7\u30fb\u300c\u6d77\u3068\u9b5a\u3068\u7d71\u8a08\u89e3\u6790\u300d\u300cVAR\u30e2\u30c7\u30eb\u300d\n\n\n## **\u540c\u6642\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb** \u3068\u306f\n##### \u305f\u3068\u3048\u3070\u3001\u7d4c\u6e08\u5b66\u306e\u6559\u79d1\u66f8\u306b\u51fa\u3066\u304f\u308b\u300c\u9700\u8981\u300d\u3068\u300c\u4f9b\u7d66\u300d\u306e\u95a2\u4fc2\u3002\n##### \u3082\u306e\u306e\u5024\u6bb5\uff08\u4fa1\u683c\uff09\u3068\u6d88\u8cbb\u91cf\uff08\u58f2\u4e0a\uff09\u306f\u3001\u300c\u9700\u8981\u300d\u3068\u300c\u4f9b\u7d66\u300d\u304c\u4ea4\u308f\u308a\u3001\u4e00\u81f4\u3059\u308b\u3068\u3053\u308d\uff08\u4fa1\u683c\u3068\u91cf\uff09\u3067\u6c7a\u307e\u308a\u307e\u3059\u3002\n##### \u3053\u3053\u3067\u3001\u300c\u9700\u8981\u300d\u3092\u76ee\u7684\u5909\u6570\uff08\u88ab\u8aac\u660e\u5909\u6570\uff09\u306b\u3068\u308a\u3001\u300c\u9700\u8981\u300d\u3092\u6c7a\u5b9a\u3059\u308b\u8aac\u660e\u5909\u6570\u3092\u8907\u6570\u306a\u3089\u3079\u305f\u91cd\u56de\u5e30\u5f0f\u3068\u3001\u304a\u306a\u3058\u3088\u3046\u306b\u3001\u300c\u4f9b\u7d66\u300d\u3092\u76ee\u7684\u5909\u6570\u306b\u3068\u308a\u3001\u8907\u6570\u306e\u300c\u4f9b\u7d66\u300d\u6c7a\u5b9a\u8981\u56e0\u3092\u8aac\u660e\u5909\u6570\u306b\u3068\u3063\u305f\u91cd\u56de\u5e30\u5f0f\u3092\uff12\u672c\u7528\u610f\u3057\u307e\u3059\u304c\u3001\u7247\u65b9\u306e\u91cd\u56de\u5e30\u5f0f\u306e\u8aac\u660e\u5909\u6570\u306b\u3001\u3082\u3046\u7247\u65b9\u306e\u91cd\u56de\u5e30\u5f0f\u306e\u76ee\u7684\u5909\u6570\u3092\u4e92\u3044\u306b\u542b\u3093\u3067\u3044\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n##### \u3053\u306e\u5834\u5408\u3001\u3069\u3061\u3089\u306e\u91cd\u56de\u5e30\u5f0f\u3082\u3001\u65b9\u7a0b\u5f0f\u306e **\u8aa4\u5dee\u9805** \u3068 **\u3042\u308b\u8aac\u660e\u5909\u6570 = \u3082\u3046\u7247\u65b9\u306e\u91cd\u56de\u5e30\u5f0f\u306e\u76ee\u7684\u5909\u6570** \u3068\u306e\u9593\u306b\u76f8\u95a2\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u591a\u91cd\u56de\u5e30\u5206\u6790\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n#### [ \uff08\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3078\u306e\u30ea\u30f3\u30af\uff09\u300c\u540c\u6642\u65b9\u7a0b\u5f0f\u3068\u5e83\u544a\u3068Instrumental Variable Method\u300d ](http://ameblo.jp/cyberanalyst/entry-11645894886.html)\n\n![C.png](https://qiita-image-store.s3.amazonaws.com/0/43487/a93c5fc7-aef0-d854-b5a8-4e0277991c7d.png)\n\n\n## **\u64cd\u4f5c\u5909\u6570\u6cd5** \u306b\u3088\u308b\u89e3\u6c7a\n\n##### \u3053\u306e\u5834\u5408\u3001**\u8aa4\u5dee\u9805** \u3068 **\u76f8\u95a2\u3057\u306a\u3044\u4f55\u3089\u304b\u306e\u5909\u6570** \u3092\u4eee\u5b9a\u7684\u306b\u53d6\u308a\u5165\u308c\u3066\u3001\u91cd\u56de\u5e30\u5206\u6790\u3092\u884c\u3044\u307e\u3059\u3002\n\n##### \u3053\u308c\u3067\u3001\u300c\u9700\u8981\u300d\u3068\u300c\u4f9b\u7d66\u300d\u306e\u95a2\u4fc2\u306e\u3088\u3046\u306a\u3001\u5165\u308c\u5b50\u306b\u306a\u3063\u305f\u9023\u7acb\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u3092\u89e3\u3044\u3066\u3001\u300c\u4fa1\u683c\u300d\u3068\u300c\u8ca9\u58f2\u91cf\u300d\uff08\u751f\u7523\u91cf\uff09\u3092\u63a8\u8a08\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\n## \u7406\u8ad6\u7684\u306a\u8a71\u306f\u3001\u4e0b\u8a18\u306e\u53c2\u8003\u8cc7\u6599\u304c\u76f4\u611f\u7684\u306b\u308f\u304b\u308a\u3084\u3059\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\n\n#### [ \uff08\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\uff09\u300c\u540c\u6642\u65b9\u7a0b\u5f0f\u3068\u5e83\u544a\u3068Instrumental Variable Method\u300d ](http://ameblo.jp/cyberanalyst/entry-11645894886.html)\n\n#### [ \uff08\u6176\u61c9\u7fa9\u587e\u5927\u5b66\u6cd5\u5b66\u90e8\u8b1b\u7fa9\u8cc7\u6599 \u300c\u64cd\u4f5c\u5909\u6570\u6cd5\u300d\u3078\u306e\u30ea\u30f3\u30af\uff09](https://www.google.co.jp/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CB4QFjAA&url=http%3A%2F%2Ffs1.law.keio.ac.jp%2F~aso%2Fecnm%2Fpp%2Fiv.pptx&ei=hD3GU7L4I4T-8QXsgIGIDw&usg=AFQjCNHh3lIR02vn_EsQuHhR8g3aNfkuVw&bvm=bv.71126742,d.dGc)\n![D.png](https://qiita-image-store.s3.amazonaws.com/0/43487/052fd252-f42c-d3b2-103d-2fc905ed640a.png)\n\n## _R_ \u3067\u89e3\u304f\u65b9\u6cd5\n\n### \uff01 \u3053\u3053\u3067\u6ce8\u610f  \uff01 :zap: :umbrella: \n#### \u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\u3001\u3068\u3044\u3063\u3066\u3082\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u901a\u5e38\u306e\u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\u65b9\u6cd5\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\n##### \uff08\u3053\u3053\u3067\u5411\u304d\u5408\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u591a\u91cd\u56de\u5e30\u5f0f\u306e\u9023\u7acb\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u3060\u304b\u3089\u3067\u3059\uff09\n\n##### [ \uff08\u30ea\u30f3\u30af\uff09R\u3067\u9023\u7acb\u4e00\u6b21\u65b9\u7a0b\u5f0f\u306e\u89e3\u3092\u6c42\u3081\u308b\u3002](http://d.hatena.ne.jp/arupaka-_-arupaka/20100123/1264210760)\n![J.png](https://qiita-image-store.s3.amazonaws.com/0/43487/53c14071-6b82-723b-aae2-e8bbe564cea6.png)\n\n### \u203b \u6b63\u3057\u3044\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\n\n#### _systemfit_ \u30d1\u30c3\u30b1\u30fc\u30b8 \uff08\u540c\u3058\u540d\u524d\u306e _systemfit()_ \u95a2\u6570\uff09\n![E.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8e3ccd71-6e53-e532-0502-6f4cc30ee35b.png)\n\n* __[\uff08CRAN) Arne Henningsen, Jeff D. Hamann D. Hamann, _systemfit: A Package for Estimating Systems of Simultaneous Equations in R_  ](http://cran.r-project.org/web/packages/systemfit/vignettes/systemfit.pdf)__\n\n#### [ \uff08\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3078\u306e\u30ea\u30f3\u30af\uff09\u300c\u540c\u6642\u65b9\u7a0b\u5f0f\u3068\u5e83\u544a\u3068Instrumental Variable Method\u300d ](http://ameblo.jp/cyberanalyst/entry-11645894886.html)\n\n# \u95a2\u6570\u306e\u30c7\u30e2\u4e8b\u4f8b\u3092\u5b9f\u884c\u3057\u3066\u6d41\u308c\u3092\u78ba\u8a8d\n\n```{r:R}\ninstall.packages(\"systemfit\")\ninstall.packages(\"plm\")\nlibrary(systemfit) # \u307e\u305f\u306f\u3001 require(systemfit)\nlibrary(plm)       # \u307e\u305f\u306f\u3001 require(plm)\n```\n\n```{r:R}\nexample(systemfit)\n```\n\n```\nsystmf> data( \"Kmenta\" )\n\nsystmf> eqDemand <- consump ~ price + income\n\nsystmf> eqSupply <- consump ~ price + farmPrice + trend\n\nsystmf> system <- list( demand = eqDemand, supply = eqSupply )\n\nsystmf> ## OLS estimation\nsystmf> fitols <- systemfit( system, data=Kmenta )\n\nsystmf> print( fitols )\n\nsystemfit results \nmethod: OLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         99.895423          -0.316299           0.334636          58.275431           0.160367 \n  supply_farmPrice       supply_trend \n          0.248133           0.248302 \n\nsystmf> ## OLS estimation with 2 restrictions\nsystmf> Rrestr <- matrix(0,2,7)\n\nsystmf> Rrestr[1,3] <-  1\n\nsystmf> Rrestr[1,7] <- -1\n\nsystmf> Rrestr[2,2] <- -1\n\nsystmf> Rrestr[2,5] <-  1\n\nsystmf> qrestr <- c( 0, 0.5 )\n\nsystmf> fitols2 <- systemfit( system, data = Kmenta,\nsystmf+                       restrict.matrix = Rrestr, restrict.rhs = qrestr )\n\nsystmf> print( fitols2 )\n\nsystemfit results \nmethod: OLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n        101.481708          -0.316799           0.318885          54.149420           0.183201 \n  supply_farmPrice       supply_trend \n          0.259528           0.318885 \n\nsystmf> ## OLS estimation with the same 2 restrictions in symbolic form\nsystmf> restrict <- c( \"demand_income - supply_trend = 0\",\nsystmf+    \"- demand_price + supply_price = 0.5\" )\n\nsystmf> fitols2b <- systemfit( system, data = Kmenta, restrict.matrix = restrict )\n\nsystmf> print( fitols2b )\n\nsystemfit results \nmethod: OLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n        101.481708          -0.316799           0.318885          54.149420           0.183201 \n  supply_farmPrice       supply_trend \n          0.259528           0.318885 \n\nsystmf> # test whether both restricted estimators are identical\nsystmf> all.equal( coef( fitols2 ), coef( fitols2b ) )\n[1] TRUE\n\nsystmf> ## OLS with restrictions on the coefficients by modifying the regressor matrix\nsystmf> ## with argument restrict.regMat\nsystmf> modReg <- matrix( 0, 7, 6 )\n\nsystmf> colnames( modReg ) <- c( \"demIntercept\", \"demPrice\", \"demIncome\",\nsystmf+    \"supIntercept\", \"supPrice2\", \"supTrend\" )\n\nsystmf> modReg[ 1, \"demIntercept\" ] <- 1\n\nsystmf> modReg[ 2, \"demPrice\" ]     <- 1\n\nsystmf> modReg[ 3, \"demIncome\" ]    <- 1\n\nsystmf> modReg[ 4, \"supIntercept\" ] <- 1\n\nsystmf> modReg[ 5, \"supPrice2\" ]    <- 1\n\nsystmf> modReg[ 6, \"supPrice2\" ]    <- 1\n\nsystmf> modReg[ 7, \"supTrend\" ]     <- 1\n\nsystmf> fitols3 <- systemfit( system, data = Kmenta, restrict.regMat = modReg )\n\nsystmf> print( fitols3 )\n\nsystemfit results \nmethod: OLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         99.895423          -0.316299           0.334636          51.929646           0.236157 \n  supply_farmPrice       supply_trend \n          0.236157           0.240931 \n\nsystmf> ## iterated SUR estimation\nsystmf> fitsur <- systemfit( system, \"SUR\", data = Kmenta, maxit = 100 )\n\nsystmf> print( fitsur )\n\nsystemfit results \nmethod: iterated SUR \n\nconvergence achieved after 35 iterations\n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         97.516307          -0.143687           0.182020          77.900537           0.105094 \n  supply_farmPrice       supply_trend \n          0.108410           0.191543 \n\nsystmf> ## 2SLS estimation\nsystmf> inst <- ~ income + farmPrice + trend\n\nsystmf> fit2sls <- systemfit( system, \"2SLS\", inst = inst, data = Kmenta )\n\nsystmf> print( fit2sls )\n\nsystemfit results \nmethod: 2SLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         94.633304          -0.243557           0.313992          49.532442           0.240076 \n  supply_farmPrice       supply_trend \n          0.255606           0.252924 \n\nsystmf> ## 2SLS estimation with different instruments in each equation\nsystmf> inst1 <- ~ income + farmPrice\n\nsystmf> inst2 <- ~ income + farmPrice + trend\n\nsystmf> instlist <- list( inst1, inst2 )\n\nsystmf> fit2sls2 <- systemfit( system, \"2SLS\", inst = instlist, data = Kmenta )\n\nsystmf> print( fit2sls2 )\n\nsystemfit results \nmethod: 2SLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n        106.789358          -0.411599           0.361681          49.532442           0.240076 \n  supply_farmPrice       supply_trend \n          0.255606           0.252924 \n\nsystmf> ## 3SLS estimation with GMM-3SLS formula\nsystmf> inst <- ~ income + farmPrice + trend\n\nsystmf> fit3sls <- systemfit( system, \"3SLS\", inst = inst, data = Kmenta,\nsystmf+    method3sls = \"GMM\" )\n\nsystmf> print( fit3sls )\n\nsystemfit results \nmethod: 3SLS \n\nCoefficients:\ndemand_(Intercept)       demand_price      demand_income supply_(Intercept)       supply_price \n         94.633304          -0.243557           0.313992          52.197204           0.228589 \n  supply_farmPrice       supply_trend \n          0.228158           0.361138 \n\nsystmf> ## Examples how to use systemfit() with panel-like data\nsystmf> ## Repeating the SUR estimations in Greene (2003, p. 351)\nsystmf> data( \"GrunfeldGreene\" )\n\nsystmf> library( plm )\n\nsystmf> GGPanel <- plm.data( GrunfeldGreene, c( \"firm\", \"year\" ) )\n\nsystmf> formulaGrunfeld <- invest ~ value + capital\n\nsystmf> # SUR\nsystmf> greeneSur <- systemfit( formulaGrunfeld, \"SUR\",\nsystmf+    data = GGPanel, methodResidCov = \"noDfCor\" )\n\nsystmf> summary( greeneSur )\n\nsystemfit results \nmethod: SUR \n\n         N DF    SSR     detRCov   OLS-R2 McElroy-R2\nsystem 100 85 347048 6.17788e+13 0.844042   0.868682\n\n                  N DF       SSR       MSE     RMSE       R2   Adj R2\nChrysler         20 17   3056.98   179.823  13.4098 0.911862 0.901493\nGeneral.Electric 20 17  14009.12   824.066  28.7065 0.687636 0.650887\nGeneral.Motors   20 17 144320.88  8489.463  92.1383 0.920742 0.911417\nUS.Steel         20 17 183763.01 10809.589 103.9692 0.421959 0.353954\nWestinghouse     20 17   1898.25   111.662  10.5670 0.726429 0.694244\n\nThe covariance matrix of the residuals used for estimation\n                  Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler          149.8722         -21.3757       -282.756   418.079      13.3070\nGeneral.Electric  -21.3757         660.8294        607.533   904.952     176.4491\nGeneral.Motors   -282.7564         607.5331       7160.294 -2222.060     126.1762\nUS.Steel          418.0786         904.9517      -2222.060  8896.416     546.1856\nWestinghouse       13.3070         176.4491        126.176   546.186      88.6617\n\nThe covariance matrix of the residuals\n                   Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler          152.84923          2.04737       -313.704   455.089      16.6606\nGeneral.Electric    2.04737        700.45575        605.336  1224.405     200.3163\nGeneral.Motors   -313.70357        605.33650       7216.044 -2686.517     129.8866\nUS.Steel          455.08946       1224.40545      -2686.517  9188.151     652.7164\nWestinghouse       16.66062        200.31627        129.887   652.716      94.9125\n\nThe correlations of the residuals\n                    Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler          1.00000000       0.00625711      -0.298702  0.384018     0.138324\nGeneral.Electric  0.00625711       1.00000000       0.269251  0.482637     0.776898\nGeneral.Motors   -0.29870209       0.26925075       1.000000 -0.329933     0.156947\nUS.Steel          0.38401758       0.48263726      -0.329933  1.000000     0.698954\nWestinghouse      0.13832413       0.77689848       0.156947  0.698954     1.000000\n\n\nSUR estimates for 'Chrysler' (equation 1)\nModel Formula: Chrysler_invest ~ Chrysler_value + Chrysler_capital\n<environment: 0x000000002b8d8ba8>\n\n              Estimate Std. Error  t value   Pr(>|t|)    \n(Intercept)  0.5043036 11.5128290  0.04380 0.96557134    \nvalue        0.0695456  0.0168975  4.11573 0.00072174 ***\ncapital      0.3085445  0.0258636 11.92971 1.1008e-09 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 13.409796 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 3056.984521 MSE: 179.822619 Root MSE: 13.409796 \nMultiple R-Squared: 0.911862 Adjusted R-Squared: 0.901493 \n\n\nSUR estimates for 'General.Electric' (equation 2)\nModel Formula: General.Electric_invest ~ General.Electric_value + General.Electric_capital\n<environment: 0x000000002b8d8ba8>\n\n               Estimate  Std. Error  t value   Pr(>|t|)    \n(Intercept) -22.4389132  25.5185863 -0.87932  0.3914900    \nvalue         0.0372914   0.0122631  3.04094  0.0073808 ** \ncapital       0.1307830   0.0220497  5.93127 1.6424e-05 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 28.706543 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 14009.115084 MSE: 824.065593 Root MSE: 28.706543 \nMultiple R-Squared: 0.687636 Adjusted R-Squared: 0.650887 \n\n\nSUR estimates for 'General.Motors' (equation 3)\nModel Formula: General.Motors_invest ~ General.Motors_value + General.Motors_capital\n<environment: 0x000000002b8d8ba8>\n\n                Estimate   Std. Error  t value   Pr(>|t|)    \n(Intercept) -162.3641052   89.4592324 -1.81495   0.087216 .  \nvalue          0.1204930    0.0216291  5.57087 3.3806e-05 ***\ncapital        0.3827462    0.0327680 11.68047 1.5189e-09 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 92.138284 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 144320.876426 MSE: 8489.463319 Root MSE: 92.138284 \nMultiple R-Squared: 0.920742 Adjusted R-Squared: 0.911417 \n\n\nSUR estimates for 'US.Steel' (equation 4)\nModel Formula: US.Steel_invest ~ US.Steel_value + US.Steel_capital\n<environment: 0x000000002b8d8ba8>\n\n               Estimate  Std. Error t value  Pr(>|t|)   \n(Intercept)  85.4232548 111.8774214 0.76354 0.4556062   \nvalue         0.1014782   0.0547837 1.85234 0.0814214 . \ncapital       0.3999914   0.1277946 3.12996 0.0060999 **\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 103.969173 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 183763.011429 MSE: 10809.588908 Root MSE: 103.969173 \nMultiple R-Squared: 0.421959 Adjusted R-Squared: 0.353954 \n\n\nSUR estimates for 'Westinghouse' (equation 5)\nModel Formula: Westinghouse_invest ~ Westinghouse_value + Westinghouse_capital\n<environment: 0x000000002b8d8ba8>\n\n             Estimate Std. Error t value   Pr(>|t|)    \n(Intercept) 1.0888770  6.2588045 0.17398 0.86393984    \nvalue       0.0570091  0.0113623 5.01742 0.00010566 ***\ncapital     0.0415065  0.0412016 1.00740 0.32786736    \n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 10.56701 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 1898.249072 MSE: 111.66171 Root MSE: 10.56701 \nMultiple R-Squared: 0.726429 Adjusted R-Squared: 0.694244 \n\n\nsystmf> # SUR Pooled\nsystmf> greeneSurPooled <- systemfit( formulaGrunfeld, \"SUR\",\nsystmf+    data = GGPanel, pooled = TRUE, methodResidCov = \"noDfCor\",\nsystmf+    residCovWeighted = TRUE )\n\nsystmf> summary( greeneSurPooled )\n\nsystemfit results \nmethod: SUR \n\n         N DF     SSR     detRCov   OLS-R2 McElroy-R2\nsystem 100 97 1604301 9.94613e+16 0.279053   0.843852\n\n                  N DF      SSR       MSE     RMSE         R2     Adj R2\nChrysler         20 17   6112.2   359.541  18.9616   0.823775   0.803042\nGeneral.Electric 20 17 691132.1 40654.827 201.6304 -14.410331 -16.223311\nGeneral.Motors   20 17 201010.5 11824.147 108.7389   0.889609   0.876622\nUS.Steel         20 17 689379.5 40551.736 201.3746  -1.168498  -1.423616\nWestinghouse     20 17  16667.1   980.421  31.3117  -1.402026  -1.684618\n\nThe covariance matrix of the residuals used for estimation\n                  Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler           409.190         -2594.27       -196.755   2594.27     -102.225\nGeneral.Electric -2594.272         36563.24      -3479.909 -28622.88     3797.408\nGeneral.Motors    -196.755         -3479.91       8612.147    996.07     -970.757\nUS.Steel          2594.272        -28622.88        996.070  32902.83    -2271.944\nWestinghouse      -102.225          3797.41       -970.757  -2271.94      777.975\n\nThe covariance matrix of the residuals\n                    Chrysler General.Electric General.Motors  US.Steel Westinghouse\nChrysler           305.61001         -1966.65       -4.80523   2158.60     -123.920\nGeneral.Electric -1966.64761         34556.60    -7160.66658 -28722.01     4274.000\nGeneral.Motors      -4.80523         -7160.67    10050.52486   4439.99    -1400.747\nUS.Steel          2158.59516        -28722.01     4439.98867  34468.98    -2893.733\nWestinghouse      -123.92048          4274.00    -1400.74696  -2893.73      833.357\n\nThe correlations of the residuals\n                  Chrysler General.Electric General.Motors   US.Steel Westinghouse\nChrysler          1.000000         0.220150     -0.3447472  0.2007628    0.2907014\nGeneral.Electric  0.220150         1.000000     -0.2232503 -0.1586937    0.8973130\nGeneral.Motors   -0.344747        -0.223250      1.0000000 -0.0923957   -0.3760456\nUS.Steel          0.200763        -0.158694     -0.0923957  1.0000000   -0.0757482\nWestinghouse      0.290701         0.897313     -0.3760456 -0.0757482    1.0000000\n\n\nSUR estimates for 'Chrysler' (equation 1)\nModel Formula: Chrysler_invest ~ Chrysler_value + Chrysler_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 18.961571 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 6112.20028 MSE: 359.541193 Root MSE: 18.961571 \nMultiple R-Squared: 0.823775 Adjusted R-Squared: 0.803042 \n\n\nSUR estimates for 'General.Electric' (equation 2)\nModel Formula: General.Electric_invest ~ General.Electric_value + General.Electric_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 201.630421 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 691132.055958 MSE: 40654.826821 Root MSE: 201.630421 \nMultiple R-Squared: -14.410331 Adjusted R-Squared: -16.223311 \n\n\nSUR estimates for 'General.Motors' (equation 3)\nModel Formula: General.Motors_invest ~ General.Motors_value + General.Motors_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 108.738893 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 201010.497194 MSE: 11824.146894 Root MSE: 108.738893 \nMultiple R-Squared: 0.889609 Adjusted R-Squared: 0.876622 \n\n\nSUR estimates for 'US.Steel' (equation 4)\nModel Formula: US.Steel_invest ~ US.Steel_value + US.Steel_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 201.374617 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 689379.520435 MSE: 40551.736496 Root MSE: 201.374617 \nMultiple R-Squared: -1.168498 Adjusted R-Squared: -1.423616 \n\n\nSUR estimates for 'Westinghouse' (equation 5)\nModel Formula: Westinghouse_invest ~ Westinghouse_value + Westinghouse_capital\n<environment: 0x000000001b14a020>\n\n                Estimate   Std. Error t value   Pr(>|t|)    \n(Intercept) -28.24669393   4.88823801 -5.7785 9.1246e-08 ***\nvalue         0.08910091   0.00507226 17.5663 < 2.22e-16 ***\ncapital       0.33401503   0.01671254 19.9859 < 2.22e-16 ***\n---\nSignif. codes:  0 \u2018***\u2019 0.001 \u2018**\u2019 0.01 \u2018*\u2019 0.05 \u2018.\u2019 0.1 \u2018 \u2019 1\n\nResidual standard error: 31.311667 on 17 degrees of freedom\nNumber of observations: 20 Degrees of Freedom: 17 \nSSR: 16667.148552 MSE: 980.420503 Root MSE: 31.311667 \nMultiple R-Squared: -1.402026 Adjusted R-Squared: -1.684618 \n\n\nsystmf> ## Further examples are in the documentation to the data sets\nsystmf> ## 'KleinI' and 'GrunfeldGreene'.\nsystmf> \nsystmf> \nsystmf> \n```\n\n# \u3010 \u767a\u5c55\u5b66\u7fd2 \u3011 \u30de\u30af\u30ed\u30e2\u30c7\u30eb\u3078\n### \u30de\u30af\u30ed\u30e2\u30c7\u30eb\u3068\u306f\uff1f\uff1f\n##### \u4eca\u56de\u3001\u63a8\u8a08\u3057\u305f\u65b9\u7a0b\u5f0f\u306f2\u672c\u3067\u3057\u305f\u3002\n##### \u3053\u308c\u304c\u3001\u4e92\u3044\u306b\u8aac\u660e\u5909\u6570\u3068\u76ee\u7684\u5909\u6570\u304c\u5165\u308c\u5b50\uff08\u300c\u9d8f\u3068\u5375\u300d\uff09\u306e\u95a2\u4fc2\u306b\u3042\u308b \u6570\u5341\u672c\uff5e\u6570\u767e\u672c\u306e\u65b9\u7a0b\u5f0f\uff08\u91cd\u56de\u5e30\u5f0f\uff09\u3067\u69cb\u6210\u3055\u308c\u308b\u9023\u7acb\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u3092\u6271\u3046\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \uff08\u4f8b\uff09\u4e00\u56fd\u306e\u793e\u4f1a\u7d4c\u6e08\u3092\u6570\u7406\u30e2\u30c7\u30eb\uff08\u9023\u7acb\u65b9\u7a0b\u5f0f\uff09\u306b\u8868\u73fe\u3057\u305f\u3082\u306e => **\u300c\u30de\u30af\u30ed\u30e2\u30c7\u30eb\u300d**\n##### [ _Weblio_ \u8f9e\u66f8 ](http://www.weblio.jp/content/\u30de\u30af\u30ed\u30e2\u30c7\u30eb)\n> \u4e00\u56fd\u306e\u7d4c\u6e08\u306e\u4ed5\u7d44\u307f\u3092\u30de\u30af\u30ed\u7d4c\u6e08\u5b66\u3068\u8a08\u91cf\u7d4c\u6e08\u5b66\u3092\u7528\u3044\u3066\u8a08\u91cf\u7d4c\u6e08\u30e2\u30c7\u30eb\u306b\u8868\u3057\u305f\u3082\u306e\u3002\u56fd\u6c11\u6240\u5f97\u30fb\u6295\u8cc7\u30fb\u8f38\u51fa\u5165\u306a\u3069\u306e\u76f8\u4e92\u306e\u95a2\u4fc2\u3092\u6570\u91cf\u7684\u306b\u660e\u3089\u304b\u306b\u3057\uff0c\u7d4c\u6e08\u653f\u7b56\u306e\u52b9\u679c\u306e\u63a8\u5b9a\u3084\u7d4c\u6e08\u4e88\u6e2c\u306b\u7528\u3044\u308b\u3002\u30de\u30af\u30ed\u8a08\u91cf\u30e2\u30c7\u30eb\n\n###[ \uff08\u30ea\u30f3\u30af\uff09\u5185\u95a3\u5e9c \u7d4c\u6e08\u793e\u4f1a\u7dcf\u5408\u7814\u7a76\u6240 \u300c\u77ed\u671f\u65e5\u672c\u7d4c\u6e08\u30de\u30af\u30ed\u8a08\u91cf\u30e2\u30c7\u30eb\u300d](http://www.esri.go.jp/jp/archive/e_dis/e_dis259/e_dis259.html)\n##### \u203b \u5185\u95a3\u5e9c\u306e\u3053\u306e\u7814\u7a76\u6240\u306f\u3001\u653f\u5e9c\u306e\u65e5\u672c\u7d4c\u6e08\u898b\u901a\u3057 \uff08GDP\u6210\u9577\u7387\u898b\u901a\u3057\u306a\u3069\uff09\u3092\u7b97\u51fa\u3057\u3066\u3044\u308b\u653f\u5e9c\u6a5f\u95a2\u3067\u3059\n\n##### \u305d\u306e\u300c\u653f\u5e9c\u7d4c\u6e08\u898b\u901a\u3057\u300d\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u305f\u304f\u3055\u3093\u306e\u65b9\u7a0b\u5f0f\u304b\u3089\u306a\u308b\u9023\u7acb\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb = \u30de\u30af\u30ed\u30e2\u30c7\u30eb \u3092\u63a8\u8a08\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\n\n![H.png](https://qiita-image-store.s3.amazonaws.com/0/43487/c2ec7673-2e9a-1310-2a3e-6d05622209da.png)\n\n![G.png](https://qiita-image-store.s3.amazonaws.com/0/43487/4ec4998a-f48c-2563-c620-ae22595d419d.png)\n\n![I.png](https://qiita-image-store.s3.amazonaws.com/0/43487/32e8468a-0a9b-bb32-f47f-881ce3c2c0cb.png)\n\n\n# \u3010 \u95a2\u9023\u9818\u57df \u3011 _VAR_ \u30e2\u30c7\u30eb \uff08\u30d9\u30af\u30c8\u30eb\u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb\uff09\n### [ \u9280\u5ea7\u3067\u50cd\u304f\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u306e\u30d6\u30ed\u30b0 \u300cR\u3067\u8a08\u91cf\u6642\u7cfb\u5217\u5206\u6790\uff1aVAR\u30e2\u30c7\u30eb\u306e\u57fa\u790e\uff08\u591a\u5909\u91cf\u6642\u7cfb\u5217\u30e2\u30c7\u30eb\uff09\u300d](http://tjo.hatenablog.com/entry/2013/07/25/194546)\n![A.png](https://qiita-image-store.s3.amazonaws.com/0/43487/c1dd85f0-8006-d3c2-2a4f-c4b4bed0d66f.png)\n\n### [ _Logics of Blue_ \uff08\u65e7\u30fb\u300c\u6d77\u3068\u9b5a\u3068\u7d71\u8a08\u89e3\u6790\u300d\u300cVAR\u30e2\u30c7\u30eb\u300d](http://logics-of-blue.com/var\u30e2\u30c7\u30eb/)\n![B.png](https://qiita-image-store.s3.amazonaws.com/0/43487/69f8580d-e07a-7be9-041e-52af41829c34.png)\n", "tags": ["R", "\u540c\u6642\u65b9\u7a0b\u5f0f", "\u6642\u7cfb\u5217\u89e3\u6790", "Finance", "Econometrics"]}