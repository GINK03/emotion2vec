{"context": " More than 1 year has passed since last update.\n\nAKAZE\u7279\u5fb4\u91cf\u3068\u306f\nOpenCV3.0.0\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u65b0\u3057\u3044\u7279\u5fb4\u91cf\u3067\u3001OpenCV2.4\u6642\u4ee3\u306e\u4ed6\u306e\u7279\u5fb4\u70b9\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3088\u308a\u3082\u3088\u3044\u3068\u306e\u5642\u3092\u805e\u304d\u307e\u3059\u3002\n\u53c2\u8003 AKAZE\u7279\u5fb4\u91cf\u306e\u7d39\u4ecb\u3068\u4ed6\u7279\u5fb4\u91cf\u3068\u306e\u6bd4\u8f03\nSIFT\u3082SURF\u3082\u5546\u7528NG\u3067\u4f7f\u3048\u306a\u3044\u3088\uff01\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3001AKAZE\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\npython2.7\u3067\u306e\u5b9f\u88c5\nOpenCV3.0.0\u306epython\u306e\u516c\u5f0f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u8003\u306b\u3057\u3066\u3082\u3001\u305d\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u306d\u30fc\u3088\u3068\u304b\u6012\u3089\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001StackOverFlow\u306e\u904e\u53bb\u306e\u4eba\u306e\u8cea\u554f\u3084C++\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\u66f8\u304d\u307e\u3057\u305f\u3002\npython\u3067OpenCV3.0.0\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u304c\u307b\u3068\u3093\u3069\u306a\u304f\u3066\u82e6\u6226\u3057\u305f\u30fb\u30fb\u30fb\n\u4ee5\u4e0b\u3001\u6a19\u6e96\u5165\u529b\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\uff12\u3064\u5165\u308c\u308b\u3068\u3001\u7279\u5fb4\u70b9\u3092\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3057\u3066\u3001\u7d50\u679c\u3092\u753b\u50cf\u51fa\u529b\u3057\u3066\u304f\u308c\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport numpy as np\nimport cv2\nimport sys\n\nimg_path = sys.argv[1]\nimg_path2 = sys.argv[2]\n\nimg = cv2.imread(img_path)\nimg2 = cv2.imread(img_path2)\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\ngray2 = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)\n\n# \u7279\u5fb4\u91cf\u8a18\u8ff0\ndetector = cv2.AKAZE_create()\nkp1, des1 = detector.detectAndCompute(gray, None)\nkp2, des2 = detector.detectAndCompute(gray2, None)\n\n# \u6bd4\u8f03\u5668\u4f5c\u6210\nbf = cv2.BFMatcher(cv2.NORM_HAMMING)\n\n# \u753b\u50cf\u3078\u306e\u7279\u5fb4\u70b9\u306e\u66f8\u304d\u8fbc\u307f\nmatches = bf.match(des1, des2)\nmatches = sorted(matches, key = lambda x:x.distance)\n\n# \u51fa\u529b\u753b\u50cf\u4f5c\u6210 \u8868\u793a\nh1, w1, c1 = img.shape[:3]\nh2, w2, c2 = img2.shape[:3]\nheight = max([h1,h2])\nwidth = w1 + w2\nout = np.zeros((height, width, 3), np.uint8)\n\ncv2.drawMatches(img, kp1, img2, kp2, matches[:50],out, flags=0)\ncv2.imshow(\"name\", out)\ncv2.waitKey(0)\n\n\n\u3064\u307e\u3065\u3044\u305f\u30dd\u30a4\u30f3\u30c8\n\ndetector\u304c\u5909\u308f\u3063\u3066\u308b\uff01\n\u516c\u5f0f\u306b\u306f\u3001\n\norb = cv2.ORB() \n\n\u307f\u305f\u3044\u306b\u3001\u4f7f\u7528\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u540d\u524d\u306e\u5927\u6587\u5b57\u3067\u5ba3\u8a00\u3059\u308b\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u307e\u3059\u304c\u3001\u3053\u308c\u3060\u3068\u901a\u308a\u307e\u305b\u3093\u3002\ndetector = cv2.ORB_create()\n\n\u306e\u3088\u3046\u306b\u3001{\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u540d}_create\u3068\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ndrawMatches\u306boutImg\u3092\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\n\u4ee5\u524d\u304a\u3088\u3073\u516c\u5f0f\u306b\u306f\u3001\npython-tutorial\u306b\u306f\n\nimg3 = cv2.drawMatches(img1,kp1,img2,kp2,matches[:10], flags=2) \n\n\u3068\u3044\u3063\u305f\u4f7f\u3044\u65b9\u3060\u3063\u305f\u308a\u3001\nAPI Reference\u3067\u306f\n\nPython: cv2.drawMatches(img1, keypoints1, img2, keypoints2, matches1to2[, outImg[, matchColor[, singlePointColor[, matchesMask[, flags]]]]]) \u2192 outImg  \n\n\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u304c\u3001\u5b9f\u969b\u306b\u3053\u308c\u3092\u3084\u308b\u3068\u3001\n\nTypeError: Required argument 'outImg' (pos 6) not found  \n\n\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3046\u3002\noutImg\u306foptional\u306e\u306f\u305a\u306a\u306e\u306b\u3001Required\u3068\u8a00\u308f\u308c\u308b\u3002\n\u3053\u3061\u3089\u306e\u554f\u984c\u306f\u3001stackoverflow\u3067\u3082\u8b70\u8ad6\u3055\u308c\u3066\u3044\u305f\u3002\nTypeError: Required argument 'outImg' (pos 6) not found\noutImg\u3092None\u306b\u3059\u308b\u3060\u3051\u3067\u3088\u3044\u305d\u3046\u3060\u304c\u3001\u6c17\u3065\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u308f\u3056\u308f\u3056\uff12\u679a\u306e\u753b\u50cf\u306e\u5927\u304d\u3055\u304b\u3089\u3001outImg\u3092\u4f5c\u6210\u3057\u305f\u3002\n# \u51fa\u529b\u753b\u50cf\u4f5c\u6210 \u8868\u793a\nh1, w1, c1 = img.shape[:3]\nh2, w2, c2 = img2.shape[:3]\nheight = max([h1,h2])\nwidth = w1 + w2\nout = np.zeros((height, width, 3), np.uint8)\n\n\n\u6700\u5f8c\u306b\npython\u3067OpenCV3.0\u306e\u30bd\u30fc\u30b9\u3092\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u901a\u308a\u306b\u3044\u304b\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u307f\u305f\u3044\u306a\u306e\u3067\u3001\u6c17\u3092\u3064\u3051\u3066\u4e0b\u3055\u3044\u3002\u3053\u306e\u60c5\u5831\u3082\u3044\u3064\u307e\u3067\u6709\u52b9\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\n\u53c2\u8003\n\nFeature Matching(\u516c\u5f0fpython tutorial)\nDrawing Function of Keypoints and Matches(\u516c\u5f0fAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9)\nTypeError: Required argument 'outImg' (pos 6) not found - stackoverflow\nAKAZE\u7279\u5fb4\u91cf\u306e\u7d39\u4ecb\u3068\u4ed6\u7279\u5fb4\u91cf\u3068\u306e\u6bd4\u8f03\niOS / OpenCV 3.0 \u3067\u753b\u50cf\u306e\u7279\u5fb4\u70b9\u3092\u691c\u51fa\u3059\u308b\uff08AKAZE, SIFT, SURF, ORB\uff09\n\n# AKAZE\u7279\u5fb4\u91cf\u3068\u306f\nOpenCV3.0.0\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u65b0\u3057\u3044\u7279\u5fb4\u91cf\u3067\u3001OpenCV2.4\u6642\u4ee3\u306e\u4ed6\u306e\u7279\u5fb4\u70b9\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3088\u308a\u3082\u3088\u3044\u3068\u306e\u5642\u3092\u805e\u304d\u307e\u3059\u3002\n\u53c2\u8003 [AKAZE\u7279\u5fb4\u91cf\u306e\u7d39\u4ecb\u3068\u4ed6\u7279\u5fb4\u91cf\u3068\u306e\u6bd4\u8f03](http://poly.hatenablog.com/entry/2014/01/06/063012)\n\nSIFT\u3082SURF\u3082\u5546\u7528NG\u3067\u4f7f\u3048\u306a\u3044\u3088\uff01\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3001AKAZE\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n# python2.7\u3067\u306e\u5b9f\u88c5\nOpenCV3.0.0\u306epython\u306e\u516c\u5f0f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u8003\u306b\u3057\u3066\u3082\u3001\u305d\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u306d\u30fc\u3088\u3068\u304b\u6012\u3089\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001StackOverFlow\u306e\u904e\u53bb\u306e\u4eba\u306e\u8cea\u554f\u3084C++\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\u66f8\u304d\u307e\u3057\u305f\u3002\npython\u3067OpenCV3.0.0\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u304c\u307b\u3068\u3093\u3069\u306a\u304f\u3066\u82e6\u6226\u3057\u305f\u30fb\u30fb\u30fb\n\n\n\u4ee5\u4e0b\u3001\u6a19\u6e96\u5165\u529b\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\uff12\u3064\u5165\u308c\u308b\u3068\u3001\u7279\u5fb4\u70b9\u3092\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3057\u3066\u3001\u7d50\u679c\u3092\u753b\u50cf\u51fa\u529b\u3057\u3066\u304f\u308c\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport numpy as np\nimport cv2\nimport sys\n\nimg_path = sys.argv[1]\nimg_path2 = sys.argv[2]\n\nimg = cv2.imread(img_path)\nimg2 = cv2.imread(img_path2)\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\ngray2 = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)\n\n# \u7279\u5fb4\u91cf\u8a18\u8ff0\ndetector = cv2.AKAZE_create()\nkp1, des1 = detector.detectAndCompute(gray, None)\nkp2, des2 = detector.detectAndCompute(gray2, None)\n\n# \u6bd4\u8f03\u5668\u4f5c\u6210\nbf = cv2.BFMatcher(cv2.NORM_HAMMING)\n\n# \u753b\u50cf\u3078\u306e\u7279\u5fb4\u70b9\u306e\u66f8\u304d\u8fbc\u307f\nmatches = bf.match(des1, des2)\nmatches = sorted(matches, key = lambda x:x.distance)\n\n# \u51fa\u529b\u753b\u50cf\u4f5c\u6210 \u8868\u793a\nh1, w1, c1 = img.shape[:3]\nh2, w2, c2 = img2.shape[:3]\nheight = max([h1,h2])\nwidth = w1 + w2\nout = np.zeros((height, width, 3), np.uint8)\n\ncv2.drawMatches(img, kp1, img2, kp2, matches[:50],out, flags=0)\ncv2.imshow(\"name\", out)\ncv2.waitKey(0)\n```\n\n# \u3064\u307e\u3065\u3044\u305f\u30dd\u30a4\u30f3\u30c8\n## detector\u304c\u5909\u308f\u3063\u3066\u308b\uff01\n\u516c\u5f0f\u306b\u306f\u3001\n> ```orb = cv2.ORB()```  \n\n\u307f\u305f\u3044\u306b\u3001\u4f7f\u7528\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u540d\u524d\u306e\u5927\u6587\u5b57\u3067\u5ba3\u8a00\u3059\u308b\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u307e\u3059\u304c\u3001\u3053\u308c\u3060\u3068\u901a\u308a\u307e\u305b\u3093\u3002\n\n```\ndetector = cv2.ORB_create()\n```\n\n\u306e\u3088\u3046\u306b\u3001```{\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u540d}_create```\u3068\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## drawMatches\u306boutImg\u3092\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\n\u4ee5\u524d\u304a\u3088\u3073\u516c\u5f0f\u306b\u306f\u3001\n\npython-tutorial\u306b\u306f\n> ```img3 = cv2.drawMatches(img1,kp1,img2,kp2,matches[:10], flags=2)``` \n \n\u3068\u3044\u3063\u305f\u4f7f\u3044\u65b9\u3060\u3063\u305f\u308a\u3001\n  \nAPI Reference\u3067\u306f\n> Python: cv2.drawMatches(img1, keypoints1, img2, keypoints2, matches1to2[, outImg[, matchColor[, singlePointColor[, matchesMask[, flags]]]]]) \u2192 outImg  \n\n\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u304c\u3001\u5b9f\u969b\u306b\u3053\u308c\u3092\u3084\u308b\u3068\u3001\n> TypeError: Required argument 'outImg' (pos 6) not found  \n\n\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3046\u3002\noutImg\u306foptional\u306e\u306f\u305a\u306a\u306e\u306b\u3001Required\u3068\u8a00\u308f\u308c\u308b\u3002\n\u3053\u3061\u3089\u306e\u554f\u984c\u306f\u3001stackoverflow\u3067\u3082\u8b70\u8ad6\u3055\u308c\u3066\u3044\u305f\u3002\n[TypeError: Required argument 'outImg' (pos 6) not found](http://stackoverflow.com/questions/31631352/typeerror-required-argument-outimg-pos-6-not-found)\n\noutImg\u3092None\u306b\u3059\u308b\u3060\u3051\u3067\u3088\u3044\u305d\u3046\u3060\u304c\u3001\u6c17\u3065\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u308f\u3056\u308f\u3056\uff12\u679a\u306e\u753b\u50cf\u306e\u5927\u304d\u3055\u304b\u3089\u3001outImg\u3092\u4f5c\u6210\u3057\u305f\u3002\n\n```\n# \u51fa\u529b\u753b\u50cf\u4f5c\u6210 \u8868\u793a\nh1, w1, c1 = img.shape[:3]\nh2, w2, c2 = img2.shape[:3]\nheight = max([h1,h2])\nwidth = w1 + w2\nout = np.zeros((height, width, 3), np.uint8)\n```\n\n# \u6700\u5f8c\u306b\npython\u3067OpenCV3.0\u306e\u30bd\u30fc\u30b9\u3092\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u901a\u308a\u306b\u3044\u304b\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u307f\u305f\u3044\u306a\u306e\u3067\u3001\u6c17\u3092\u3064\u3051\u3066\u4e0b\u3055\u3044\u3002\u3053\u306e\u60c5\u5831\u3082\u3044\u3064\u307e\u3067\u6709\u52b9\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\n\n# \u53c2\u8003\n* [Feature Matching(\u516c\u5f0fpython tutorial)](http://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_feature2d/py_matcher/py_matcher.html?highlight=drawmatches)\n* [Drawing Function of Keypoints and Matches(\u516c\u5f0fAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9)](http://docs.opencv.org/3.0-beta/modules/features2d/doc/drawing_function_of_keypoints_and_matches.html)\n* [TypeError: Required argument 'outImg' (pos 6) not found - stackoverflow](http://stackoverflow.com/questions/31631352/typeerror-required-argument-outimg-pos-6-not-found)\n* [AKAZE\u7279\u5fb4\u91cf\u306e\u7d39\u4ecb\u3068\u4ed6\u7279\u5fb4\u91cf\u3068\u306e\u6bd4\u8f03](http://poly.hatenablog.com/entry/2014/01/06/063012)\n* [iOS / OpenCV 3.0 \u3067\u753b\u50cf\u306e\u7279\u5fb4\u70b9\u3092\u691c\u51fa\u3059\u308b\uff08AKAZE, SIFT, SURF, ORB\uff09](http://qiita.com/shu223/items/fa3cf693296e5641f771)\n", "tags": ["OpenCV", "python2.7", "AKAZE", "OpenCV3"]}