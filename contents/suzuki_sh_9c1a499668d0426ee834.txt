{"context": "Phoenix \u74b0\u5883\u3092Docker\u3067\u69cb\u7bc9\u3057\u3066\u307f\u308b\u30e1\u30e2\u3002\n\n\u524d\u63d0\nWindows10 PowerShell\u4e0a\u3067Docker for Windows\u3092\u4f7f\u3044\u307e\u3059\u3002\nBash on Windows\u3084boot2docker\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002\nPS > [System.Environment]::OSVersion\n\nPlatform ServicePack Version      VersionString\n-------- ----------- -------      -------------\n Win32NT             10.0.14393.0 Microsoft Windows NT 10.0.14393.0\n\nPS > docker --version\nDocker version 1.12.1, build 23cf638\n\nPS > docker-compose --version\ndocker-compose version 1.8.0, build d988a55\n\n\u306a\u304a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306ePostgreSQL\u3067\u306f\u306a\u304fMySQL\u3092\u7528\u3044\u307e\u3059\u3002\n\nDocker for Windows\u306e\u5c0e\u5165\nhttp://www.atmarkit.co.jp/ait/articles/1609/01/news053.html\n\u3092\u53c2\u8003\u306bDocker for Windows\u3092\u6e96\u5099\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u81ea\u4f53\u306fGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u306e\u3067\u7279\u306b\u60a9\u3080\u30dd\u30a4\u30f3\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306bDocker for Windows\u30a2\u30d7\u30ea\u306e\u8a2d\u5b9a\u3067Shared Devices\u306b\u5fc5\u8981\u306a\u30c9\u30e9\u30a4\u30d6\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u308c\u304c\u7121\u3044\u3068\u30d5\u30a1\u30a4\u30eb\u30de\u30a6\u30f3\u30c8\u304c\u3046\u307e\u304f\u884c\u304d\u307e\u305b\u3093\u3002\n\nPhoenix\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210 (phoenix.new)\n\u307e\u305a\u306f phoenix.new \u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u5c02\u7528\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u7528\u610f\u3057\u307e\u3059\u3002\nPS > mkdir project_name\nPS > cd project_name\n\nhttp://qiita.com/xtity/items/969eefb83fcac9023542\n\u3092\u53c2\u8003\u306bDockerfile\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n#----------------\n# OS\n#----------------\nFROM centos:centos7\n\nRUN yum update -y && yum clean all\nRUN yum reinstall -y glibc-common\n\n#----------------\n# ENV\n#----------------\n# Set the locale(ja_JP.UTF-8)\nENV LANG ja_JP.UTF-8\nENV LANGUAGE ja_JP:ja\nENV LC_ALL ja_JP.UTF-8\n\n# Set app env\nENV HOME /root\n\n#----------------\n# \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n#----------------\nWORKDIR /usr/local/src\nRUN yum install -y gcc gcc-c++ make openssl-devel ncurses-devel && yum clean all\nRUN yum install -y epel-release.noarch && yum clean all\nRUN yum install -y http://packages.erlang-solutions.com/site/esl/esl-erlang/FLAVOUR_1_general/esl-erlang_18.1-1~centos~7_amd64.rpm && yum clean all\nRUN yum install -y sudo wget git tar bzip2 incron vim nodejs npm && yum clean all\nRUN yum install -y mysql && yum clean all\n\n#----------------\n# Elixir\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n#----------------\nENV ELIXIR_VERSION 1.3.2\n\n# Build Elixir\nRUN git clone https://github.com/elixir-lang/elixir.git\nWORKDIR /usr/local/src/elixir\nRUN git checkout refs/tags/v${ELIXIR_VERSION}\nRUN make clean install\n\n# Build Mix Tasks to use Dialyxir\nWORKDIR /usr/local/src\nRUN git clone https://github.com/jeremyjh/dialyxir.git\nWORKDIR /usr/local/src/dialyxir\nRUN mix archive.build\nRUN yes | mix archive.install && mix dialyzer.plt\n\n#----------------\n# Phoenix\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n#----------------\nRUN mkdir -p /usr/local/src/phoenix/origin\nWORKDIR /usr/local/src/phoenix/origin\nRUN git clone https://github.com/phoenixframework/phoenix.git\nWORKDIR /usr/local/src/phoenix/origin/phoenix/installer\nRUN MIX_ENV=prod mix archive.build\nRUN yes | mix archive.install\nRUN mkdir -p /usr/local/src/phoenix/app\nWORKDIR /usr/local/src/phoenix/app\n\n\u3044\u3061\u3069\u30d3\u30eb\u30c9\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nPS > docker build -t your_name/your_elixir_phoenix:0.1 .\nPS > docker run --rm -it -v C:\\path\\to\\current\\dir\\project_name:/usr/local/src/phoenix/app your_name/your_elixir_phoenix:0.1  mix phoenix.new . /usr/local/src/phoenix/app/project_name --database mysql\n\nPhoenix\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306eDB\u306fPostgreSQL\u3067\u3059\u304c\u3001 mix phoenix.new project_name --database mysql \u3067MySQL(MariaDB)\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n(\u672c\u5f53\u306f\u3001\u307e\u305a\u306f\u624b\u8efd\u306bSQLite\u3067\u4f5c\u6210\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001SQLite\u7528O/R\u30de\u30c3\u30d1\u30fc\u304c\u3046\u307e\u304f\u52d5\u304b\u305b\u305aPhoenix\u30a2\u30d7\u30ea\u304c\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f...)\n\u3053\u3053\u307e\u3067\u3067\u3001\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092 git init \u7b49\u3067\u7ba1\u7406\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nPhoenix\u8d77\u52d5 (phoenix.server)\n\u5148\u7a0b\u306eDockerfile\u306b\u4e0b\u8a18\u8ffd\u8a18\u3057\u3001\u751f\u6210\u3055\u308c\u305fPhoenix\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u52d5\u304b\u3059\u305f\u3081\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n#----------------\n# Setup Phoenix Project\n#----------------\nENV PHOENIX_APP_NAME project_name\nENV PHOENIX_APP_PORT 4000\nENV PHOENIX_APP_ROOT /usr/local/src/phoenix/app/${PHOENIX_APP_NAME}\n\nWORKDIR $PHOENIX_APP_ROOT\n\nEXPOSE ${PHOENIX_APP_PORT}\nCOPY . $PHOENIX_APP_ROOT\nWORKDIR $PHOENIX_APP_ROOT\n\n# Compile phoenix(FOR dev)\nRUN yes | mix local.hex && yes | mix local.rebar && mix do deps.get, compile\n\n# npm install\nRUN npm install\nRUN npm install -g brunch\n\n# Run Phoenix\nCMD [\"/bin/bash\", \"-c\", \"mix phoenix.server\"]\n\n\u7d9a\u3044\u3066\u3001Phoenix\u3092\u52d5\u304b\u3059\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3068MySQL\u3092\u52d5\u304b\u3059\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b5\u30fc\u30d0\u3092\u540c\u6642\u306b\u7ba1\u7406\u3059\u308b\u305f\u3081\u306edocker-compose\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\ndocker-compose.yml\nversion: '2'\nservices:\n  app:\n    build: .\n    environment:\n      MYSQL_ROOT_USERNAME: 'root'\n      MYSQL_ROOT_PASSWORD: 'pass'\n      MYSQL_HOSTNAME: 'mysql'\n      MYSQL_PORT: '3306'\n    ports:\n      - '4000:4000'\n    volumes:\n      - .:/usr/local/src/phoenix/app/project_name\n    links:\n      - mysql\n  mysql:\n    image: mysql:5.7.10\n    environment:\n      MYSQL_ROOT_PASSWORD: 'pass'\n    ports:\n      - '3306:3306'\n    volumes:\n      - mysql-data:/var/lib/mysql\nvolumes:\n  mysql-data:\n    driver: local\n\n\ndev.exs\u306eMySQL\u8a2d\u5b9a\u7b87\u6240\u306b\u63a5\u7d9a\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\ndev.exs\n# Configure your database\nconfig :app, App.Repo,\n  adapter: Ecto.Adapters.MySQL,\n  username: System.get_env(\"MYSQL_ROOT_USERNAME\"),\n  password: System.get_env(\"MYSQL_ROOT_PASSWORD\"),\n  hostname: System.get_env(\"MYSQL_HOSTNAME\"),\n\n  database: \"app_dev\",\n  pool_size: 10\n\n\n\n\u8d77\u52d5\nPS > docker-compose build\nPS > docker-compose up -d\n\nlocalhost:4000 \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8d77\u52d5\u3059\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\u30e1\u30e2\n\n\u3046\u307e\u304f\u8868\u793a\u3055\u308c\u306a\u3044\u3068\u304d\u306f $ docker exec -it projectname_app_1 bash \u3067\u4e2d\u306b\u5165\u3063\u3066\u78ba\u8a8d\u3002\n\u3046\u307e\u304f\u8d77\u52d5\u3067\u304d\u306a\u3044\u3068\u304d\u306f $ docker run --rm -it projectname_app bash \u3067\u4e2d\u306b\u5165\u3063\u3066\u78ba\u8a8d\u3002\n\n\n\nRUN mix phoenix.server \u304c\u6210\u529f\u3057\u306a\u3044\u3068\u30b3\u30f3\u30c6\u30ca\u306eSTATUS\u304cExited\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001docker exec\u3082\u3067\u304d\u306a\u3044\u3002\n\n\n\ndocker-compose up\u3084docker run\u3067\u7acb\u3061\u4e0a\u304c\u3063\u305f\u304b\u3069\u3046\u304b\u306f $ docker ps \u3067\u78ba\u8a8d\u3002-a \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u5b9f\u884c\u4e2d\u3067\u306a\u3044\u30b3\u30f3\u30c6\u30ca\u306b\u3064\u3044\u3066\u3082\u78ba\u8a8d\u3002\n\ndocker-compose build\u3084docker build\u3067\u30d3\u30eb\u30c9\u3067\u304d\u305f\u304b\u3069\u3046\u304b\u306f $ docker images\u3067\u78ba\u8a8d\u3002\n\n\n\u4e0d\u8981\u306a\u30b3\u30f3\u30c6\u30ca\u306f $ docker rm \u3067\u3001 \u4e0d\u8981\u306a\u30a4\u30e1\u30fc\u30b8\u306f $ docker rmi \u3067\u524a\u9664\u3002\n\n\n\u4f5c\u6210\u3057\u305f _build/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30b3\u30f3\u30c6\u30ca\u3092\u307e\u305f\u3044\u3067\u30de\u30a6\u30f3\u30c8\u3067\u6301\u3063\u3066\u3044\u304f\u3068\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u4e8b\u304c\u3042\u308b\u306e\u3067\u3001\u9069\u5b9c\u6d88\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\u30c7\u30d0\u30c3\u30b0\u4e2d\u306b\u30cf\u30de\u3063\u305f\u3002\nDocker for Windows\u306f\u610f\u5916\u3068\u60c5\u5831\u304c\u5c11\u306a\u3044\u3002\n\n\n\u53c2\u8003\n\nCentOS + Erlang + Elixir + Phoenix\u306eDocker\u30a4\u30e1\u30fc\u30b8\u3067\u4eca\u65e5\u304b\u3089\u59cb\u3081\u308bElixir on Phoenix\u5165\u9580 - Qiita\nRails\u30a2\u30d7\u30ea\u3092Docker\u3067\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u624b\u9806 - Qiita\n\nPhoenix \u74b0\u5883\u3092Docker\u3067\u69cb\u7bc9\u3057\u3066\u307f\u308b\u30e1\u30e2\u3002\n\n## \u524d\u63d0\n\nWindows10 PowerShell\u4e0a\u3067Docker for Windows\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nBash on Windows\u3084boot2docker\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002\n\n```\nPS > [System.Environment]::OSVersion\n\nPlatform ServicePack Version      VersionString\n-------- ----------- -------      -------------\n Win32NT             10.0.14393.0 Microsoft Windows NT 10.0.14393.0\n\nPS > docker --version\nDocker version 1.12.1, build 23cf638\n\nPS > docker-compose --version\ndocker-compose version 1.8.0, build d988a55\n```\n\n\u306a\u304a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306ePostgreSQL\u3067\u306f\u306a\u304fMySQL\u3092\u7528\u3044\u307e\u3059\u3002\n\n### Docker for Windows\u306e\u5c0e\u5165\n\nhttp://www.atmarkit.co.jp/ait/articles/1609/01/news053.html\n\u3092\u53c2\u8003\u306bDocker for Windows\u3092\u6e96\u5099\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u81ea\u4f53\u306fGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u306e\u3067\u7279\u306b\u60a9\u3080\u30dd\u30a4\u30f3\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306bDocker for Windows\u30a2\u30d7\u30ea\u306e\u8a2d\u5b9a\u3067Shared Devices\u306b\u5fc5\u8981\u306a\u30c9\u30e9\u30a4\u30d6\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u308c\u304c\u7121\u3044\u3068\u30d5\u30a1\u30a4\u30eb\u30de\u30a6\u30f3\u30c8\u304c\u3046\u307e\u304f\u884c\u304d\u307e\u305b\u3093\u3002\n\n## Phoenix\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210 (phoenix.new)\n\n\u307e\u305a\u306f phoenix.new \u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u5c02\u7528\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```\nPS > mkdir project_name\nPS > cd project_name\n```\n\nhttp://qiita.com/xtity/items/969eefb83fcac9023542\n\u3092\u53c2\u8003\u306bDockerfile\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```Dockerfile\n#----------------\n# OS\n#----------------\nFROM centos:centos7\n\nRUN yum update -y && yum clean all\nRUN yum reinstall -y glibc-common\n\n#----------------\n# ENV\n#----------------\n# Set the locale(ja_JP.UTF-8)\nENV LANG ja_JP.UTF-8\nENV LANGUAGE ja_JP:ja\nENV LC_ALL ja_JP.UTF-8\n\n# Set app env\nENV HOME /root\n\n#----------------\n# \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n#----------------\nWORKDIR /usr/local/src\nRUN yum install -y gcc gcc-c++ make openssl-devel ncurses-devel && yum clean all\nRUN yum install -y epel-release.noarch && yum clean all\nRUN yum install -y http://packages.erlang-solutions.com/site/esl/esl-erlang/FLAVOUR_1_general/esl-erlang_18.1-1~centos~7_amd64.rpm && yum clean all\nRUN yum install -y sudo wget git tar bzip2 incron vim nodejs npm && yum clean all\nRUN yum install -y mysql && yum clean all\n\n#----------------\n# Elixir\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n#----------------\nENV ELIXIR_VERSION 1.3.2\n\n# Build Elixir\nRUN git clone https://github.com/elixir-lang/elixir.git\nWORKDIR /usr/local/src/elixir\nRUN git checkout refs/tags/v${ELIXIR_VERSION}\nRUN make clean install\n\n# Build Mix Tasks to use Dialyxir\nWORKDIR /usr/local/src\nRUN git clone https://github.com/jeremyjh/dialyxir.git\nWORKDIR /usr/local/src/dialyxir\nRUN mix archive.build\nRUN yes | mix archive.install && mix dialyzer.plt\n\n#----------------\n# Phoenix\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n#----------------\nRUN mkdir -p /usr/local/src/phoenix/origin\nWORKDIR /usr/local/src/phoenix/origin\nRUN git clone https://github.com/phoenixframework/phoenix.git\nWORKDIR /usr/local/src/phoenix/origin/phoenix/installer\nRUN MIX_ENV=prod mix archive.build\nRUN yes | mix archive.install\nRUN mkdir -p /usr/local/src/phoenix/app\nWORKDIR /usr/local/src/phoenix/app\n```\n\n\u3044\u3061\u3069\u30d3\u30eb\u30c9\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\nPS > docker build -t your_name/your_elixir_phoenix:0.1 .\nPS > docker run --rm -it -v C:\\path\\to\\current\\dir\\project_name:/usr/local/src/phoenix/app your_name/your_elixir_phoenix:0.1  mix phoenix.new . /usr/local/src/phoenix/app/project_name --database mysql\n```\n\nPhoenix\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306eDB\u306fPostgreSQL\u3067\u3059\u304c\u3001 `mix phoenix.new project_name --database mysql` \u3067MySQL(MariaDB)\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n(\u672c\u5f53\u306f\u3001\u307e\u305a\u306f\u624b\u8efd\u306bSQLite\u3067\u4f5c\u6210\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001SQLite\u7528O/R\u30de\u30c3\u30d1\u30fc\u304c\u3046\u307e\u304f\u52d5\u304b\u305b\u305aPhoenix\u30a2\u30d7\u30ea\u304c\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f...)\n\n\u3053\u3053\u307e\u3067\u3067\u3001\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092 `git init` \u7b49\u3067\u7ba1\u7406\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Phoenix\u8d77\u52d5 (phoenix.server)\n\n\u5148\u7a0b\u306eDockerfile\u306b\u4e0b\u8a18\u8ffd\u8a18\u3057\u3001\u751f\u6210\u3055\u308c\u305fPhoenix\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u52d5\u304b\u3059\u305f\u3081\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```Dockerfile\n#----------------\n# Setup Phoenix Project\n#----------------\nENV PHOENIX_APP_NAME project_name\nENV PHOENIX_APP_PORT 4000\nENV PHOENIX_APP_ROOT /usr/local/src/phoenix/app/${PHOENIX_APP_NAME}\n\nWORKDIR $PHOENIX_APP_ROOT\n\nEXPOSE ${PHOENIX_APP_PORT}\nCOPY . $PHOENIX_APP_ROOT\nWORKDIR $PHOENIX_APP_ROOT\n\n# Compile phoenix(FOR dev)\nRUN yes | mix local.hex && yes | mix local.rebar && mix do deps.get, compile\n\n# npm install\nRUN npm install\nRUN npm install -g brunch\n\n# Run Phoenix\nCMD [\"/bin/bash\", \"-c\", \"mix phoenix.server\"]\n```\n\n\u7d9a\u3044\u3066\u3001Phoenix\u3092\u52d5\u304b\u3059\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3068MySQL\u3092\u52d5\u304b\u3059\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b5\u30fc\u30d0\u3092\u540c\u6642\u306b\u7ba1\u7406\u3059\u308b\u305f\u3081\u306edocker-compose\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```docker-compose.yml\nversion: '2'\nservices:\n  app:\n    build: .\n    environment:\n      MYSQL_ROOT_USERNAME: 'root'\n      MYSQL_ROOT_PASSWORD: 'pass'\n      MYSQL_HOSTNAME: 'mysql'\n      MYSQL_PORT: '3306'\n    ports:\n      - '4000:4000'\n    volumes:\n      - .:/usr/local/src/phoenix/app/project_name\n    links:\n      - mysql\n  mysql:\n    image: mysql:5.7.10\n    environment:\n      MYSQL_ROOT_PASSWORD: 'pass'\n    ports:\n      - '3306:3306'\n    volumes:\n      - mysql-data:/var/lib/mysql\nvolumes:\n  mysql-data:\n    driver: local\n```\n\ndev.exs\u306eMySQL\u8a2d\u5b9a\u7b87\u6240\u306b\u63a5\u7d9a\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```dev.exs\n# Configure your database\nconfig :app, App.Repo,\n  adapter: Ecto.Adapters.MySQL,\n  username: System.get_env(\"MYSQL_ROOT_USERNAME\"),\n  password: System.get_env(\"MYSQL_ROOT_PASSWORD\"),\n  hostname: System.get_env(\"MYSQL_HOSTNAME\"),\n\n  database: \"app_dev\",\n  pool_size: 10\n```\n\n### \u8d77\u52d5\n\n```\nPS > docker-compose build\nPS > docker-compose up -d\n```\n\nlocalhost:4000 \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8d77\u52d5\u3059\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n### \u30e1\u30e2\n\n- \u3046\u307e\u304f\u8868\u793a\u3055\u308c\u306a\u3044\u3068\u304d\u306f `$ docker exec -it projectname_app_1 bash` \u3067\u4e2d\u306b\u5165\u3063\u3066\u78ba\u8a8d\u3002\n- \u3046\u307e\u304f\u8d77\u52d5\u3067\u304d\u306a\u3044\u3068\u304d\u306f `$ docker run --rm -it projectname_app bash` \u3067\u4e2d\u306b\u5165\u3063\u3066\u78ba\u8a8d\u3002\n  - `RUN mix phoenix.server` \u304c\u6210\u529f\u3057\u306a\u3044\u3068\u30b3\u30f3\u30c6\u30ca\u306eSTATUS\u304cExited\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001`docker exec`\u3082\u3067\u304d\u306a\u3044\u3002\n- `docker-compose up`\u3084`docker run`\u3067\u7acb\u3061\u4e0a\u304c\u3063\u305f\u304b\u3069\u3046\u304b\u306f `$ docker ps` \u3067\u78ba\u8a8d\u3002`-a` \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u5b9f\u884c\u4e2d\u3067\u306a\u3044\u30b3\u30f3\u30c6\u30ca\u306b\u3064\u3044\u3066\u3082\u78ba\u8a8d\u3002\n- `docker-compose build`\u3084`docker build`\u3067\u30d3\u30eb\u30c9\u3067\u304d\u305f\u304b\u3069\u3046\u304b\u306f `$ docker images`\u3067\u78ba\u8a8d\u3002\n  - \u4e0d\u8981\u306a\u30b3\u30f3\u30c6\u30ca\u306f `$ docker rm` \u3067\u3001 \u4e0d\u8981\u306a\u30a4\u30e1\u30fc\u30b8\u306f `$ docker rmi` \u3067\u524a\u9664\u3002\n- \u4f5c\u6210\u3057\u305f _build/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30b3\u30f3\u30c6\u30ca\u3092\u307e\u305f\u3044\u3067\u30de\u30a6\u30f3\u30c8\u3067\u6301\u3063\u3066\u3044\u304f\u3068\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u4e8b\u304c\u3042\u308b\u306e\u3067\u3001\u9069\u5b9c\u6d88\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\u30c7\u30d0\u30c3\u30b0\u4e2d\u306b\u30cf\u30de\u3063\u305f\u3002\n- Docker for Windows\u306f\u610f\u5916\u3068\u60c5\u5831\u304c\u5c11\u306a\u3044\u3002\n\n## \u53c2\u8003\n\n- [CentOS \\+ Erlang \\+ Elixir \\+ Phoenix\u306eDocker\u30a4\u30e1\u30fc\u30b8\u3067\u4eca\u65e5\u304b\u3089\u59cb\u3081\u308bElixir on Phoenix\u5165\u9580 \\- Qiita](http://qiita.com/xtity/items/969eefb83fcac9023542)\n- [Rails\u30a2\u30d7\u30ea\u3092Docker\u3067\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u624b\u9806 \\- Qiita](http://qiita.com/togana/items/30b22fc39fe6f7a188ec)\n", "tags": ["docker", "Windows", "Elixir", "Phoenix", "PowerShell"]}