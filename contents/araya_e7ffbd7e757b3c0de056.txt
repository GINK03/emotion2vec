{"context": " More than 1 year has passed since last update.OSX + ruby \u3067OpenCV\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\nruby-opencv\u3092\u4f7f\u3044\u307e\u3059\n\nOpenCV \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nbrew search opencv\nbrew tap homebrew/science\nbrew info opencv\nbrew install opencv\n\ngem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ngem install ruby-opencv\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\u53c2\u8003 ruby-opencv\n\n\n\nshow.rb\nrequire 'opencv'\ninclude OpenCV\n\nif ARGV.size == 0\n  puts \"Usage: ruby #{__FILE__} ImageToLoadAndDisplay\"\n  exit\nend\n\nimage = nil\nbegin\n  image = CvMat.load(ARGV[0], CV_LOAD_IMAGE_COLOR) # Read the file.\nrescue\n  puts 'Could not open or find the image.'\n  exit\nend\n\nwindow = GUI::Window.new('Display window') # Create a window for display.\nwindow.show(image) # Show our image inside it.\nGUI::wait_key # Wait for a keystroke in the window.\n\n\n\u307b\u3093\u3067\nruby show.rb ***.jpg\n\u3068\u304b\u3084\u308b\u3068\u3001\u305f\u3060\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u308b\u3060\u3051\u3067\u3059\u304c\u52d5\u4f5c\u3057\u307e\u3059\nOSX + ruby \u3067OpenCV\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n[ruby-opencv](https://github.com/ruby-opencv/ruby-opencv)\u3092\u4f7f\u3044\u307e\u3059\n\n# OpenCV \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n`brew search opencv`\n`brew tap homebrew/science`\n`brew info opencv`\n`brew install opencv`\n\n# gem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n`gem install ruby-opencv`\n\n# \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n* \u53c2\u8003 [ruby-opencv](https://github.com/ruby-opencv/ruby-opencv)\n\n\n```ruby:show.rb\nrequire 'opencv'\ninclude OpenCV\n\nif ARGV.size == 0\n  puts \"Usage: ruby #{__FILE__} ImageToLoadAndDisplay\"\n  exit\nend\n\nimage = nil\nbegin\n  image = CvMat.load(ARGV[0], CV_LOAD_IMAGE_COLOR) # Read the file.\nrescue\n  puts 'Could not open or find the image.'\n  exit\nend\n\nwindow = GUI::Window.new('Display window') # Create a window for display.\nwindow.show(image) # Show our image inside it.\nGUI::wait_key # Wait for a keystroke in the window.\n```\n\n\u307b\u3093\u3067\n`ruby show.rb ***.jpg`\n\u3068\u304b\u3084\u308b\u3068\u3001\u305f\u3060\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u308b\u3060\u3051\u3067\u3059\u304c\u52d5\u4f5c\u3057\u307e\u3059\n", "tags": ["OpenCV", "MacOSX", "Ruby"]}