{"context": " More than 1 year has passed since last update.\n\n \u624b\u639b\u304b\u308a\u306f\u30d0\u30e9\u30d0\u30e9\u306e\u5199\u771f\n\u72af\u4eba\u306e\u30a2\u30b8\u30c8\u306b\u8b66\u5bdf\u304c\u8e0f\u307f\u8fbc\u3093\u3060\u3068\u3053\u308d\u3001\u6642\u3059\u3067\u306b\u9045\u304f\u3001\u72af\u4eba\u306f\u8a3c\u62e0\u306e\u5199\u771f\u3092\u30b7\u30e5\u30ec\u30c3\u30c0\u30fc\u306b\u304b\u3051\u305f\u5f8c\u3060\u3063\u305f\u3002\n\u30b7\u30e5\u30ec\u30c3\u30c0\u30fc\u306b\u304b\u3051\u3089\u308c\u305f\u77ed\u518a\u72b6\u306e\u5207\u308c\u7aef\u3092\u4e26\u3079\u66ff\u3048\u3066\u3001\u5199\u771f\u3092\u5fa9\u5143\u3057\u3088\u3046\u3002\n\n \u30d0\u30e9\u30d0\u30e9\u306e\u5199\u771f\u306e\u7528\u610f\n\n\u5199\u771f\u3092\u8aad\u307f\u8fbc\u3080\u2192\u5909\u6570ar\nstocksnap.io\u306e\u5199\u771f\u3092\u4f7f\u3044\u307e\u3059\u3002Python\u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3059\u3002\n\npython3\nimport numpy as np, networkx as nx, matplotlib.pyplot as plt\nfrom PIL import Image\nfrom urllib import request\nwith request.urlopen('https://snap-photos.s3.amazonaws.com/'\n                     'img-thumbs/960w/X8CW5LGMWI.jpg') as fd:\n    im = Image.open(fd) # \u5199\u771f\u8aad\u8fbc\nar = np.array(im.convert('L').getdata()) # \u30b0\u30ec\u30fc('L')\u306b\u3057\u3066\u3001np.ndarray\u306b\u5909\u63db\nar = ar.reshape((im.height, -1))\nplt.imshow(ar, cmap='gray'); # \u8868\u793a\n\n\n\n\n\u5199\u771f\u3092\u30d0\u30e9\u30d0\u30e9\u306b\u3059\u308b\u2192\u5909\u6570sp\n20\u30d4\u30af\u30bb\u30eb\u3054\u3068\u306b\u3001\u6a2a\u306b\u5207\u3063\u3066\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u3066\u7e4b\u3052\u307e\u3059\u3002\n\npython3\nwd = 20 # \u77ed\u518a\u306e\u5e45\nn = im.height // wd # \u5206\u5272\u6570\nr = range(n)\n\nsp = [ar[i*wd:(i+1)*wd] for i in r]\ntmp = sp[1:]\nnp.random.seed(1)\nnp.random.shuffle(tmp)\nsp = [sp[0]] + tmp # \u5148\u982d\u306e\u307f\u540c\u3058\u9806\u756a\u306e\u307e\u307e\u306b\u3057\u3001\u6b8b\u308a\u30b7\u30e3\u30c3\u30d5\u30eb\nplt.imshow(np.concatenate(sp), cmap='gray'); # \u30d0\u30e9\u30d0\u30e9\u306e\u5199\u771f\n\n\n\n\n \u8003\u3048\u65b9\nn\u500b\u306e\u77ed\u518a\u306b\u5bfe\u3057\u3001\u3064\u306a\u304c\u308b\u304b\u3069\u3046\u304b\u30922\u90e8\u30b0\u30e9\u30d5\u3067\u8003\u3048\u307e\u3059\u3002\n\n\u3059\u306a\u308f\u3061\u3001\u4e0a\u306e\u30ce\u30fc\u30c9i\u3068\u4e0b\u306e\u30ce\u30fc\u30c9j\u3092\u7d50\u3093\u3060\u3068\u304d\u306b\u3001\u77ed\u518ai\u306e\u4e0b\u306b\u77ed\u518aj\u3092\u7e4b\u3052\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u3064\u306a\u3052\u305f\u3068\u304d\u306b\u91cd\u307f\u306f\u3001\u300c\u77ed\u518ai\u306e\u4e0b1\u5217\u306e\u30d4\u30af\u30bb\u30eb\u3068\u77ed\u518aj\u306e\u4e0a1\u5217\u306e\u30d4\u30af\u30bb\u30eb\u306e\u5dee\u5206\u306e\u5c0f\u3055\u3044\u5024\u306e50%\u306e\u30ce\u30eb\u30e0\u300d\u306e\u30de\u30a4\u30ca\u30b9\u3068\u3057\u3001\u6700\u5c0f\u304c0\u306b\u306a\u308b\u3088\u3046\u306b\u8abf\u6574\u3057\u307e\u3059\u3002\n\u3053\u306e2\u90e8\u30b0\u30e9\u30d5\u306b\u5bfe\u3057\u3001\u7d44\u5408\u305b\u6700\u9069\u5316\u554f\u984c\u306e\u6700\u5927\u91cd\u307f\u30de\u30c3\u30c1\u30f3\u30b0\u554f\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u3001\u4e26\u3079\u65b9\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u91cd\u307f\u3092\u8a08\u7b97\u3059\u308b\u2192wgt\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a08\u7b97\u3057\u307e\u3059\u3002\n\npython3\nnn = int(im.width * 0.5) # 50%\u3092\u4f7f\u3046\nt = [[np.linalg.norm(np.sort(np.abs(sp[i][-1] - sp[j][0]))[:nn])\n      for j in r] for i in r]\nwgt = np.max(t) - t\n\n\n\n\u6709\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u2192g\n\u4e0a\u306e\u30ce\u30fc\u30c9\u30920...n-1\u3068\u3057\u3001\u4e0b\u306e\u30ce\u30fc\u30c9\u3092n...2*n-1\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u30b0\u30e9\u30d5\u306f2\u90e8\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\npython3\ng = nx.DiGraph() # \u6709\u5411\u30b0\u30e9\u30d5\nfor i in r:\n    for j in r:\n        if i != j:\n            g.add_edge(i, j+n, weight=wgt[i][j])\n\n\n\n\u89e3\u3044\u3066\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\u2192mtc\n2\u90e8\u30b0\u30e9\u30d5\u306e\u6700\u5927\u91cd\u307f\u30de\u30c3\u30c1\u30f3\u30b0\u554f\u984c\u3092\u89e3\u304d\u307e\u3059\u30020\u304b\u3089\u9806\u756a\u306b\u7d50\u679c(mtc)\u3092\u305f\u3069\u308b\u3068\u3001\u3064\u306a\u304e\u65b9\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\npython3\nmtc = nx.max_weight_matching(g) # \u6700\u5927\u91cd\u307f\u30de\u30c3\u30c1\u30f3\u30b0\u554f\u984c\u3092\u89e3\u304f\n# res\u306b\u9806\u756a\u3092\u5165\u308c\u308b\ni, res = 0, []\nfor _ in r:\n    res.append(sp[i])\n    i = mtc[i] - n\nplt.imshow(np.concatenate(res), cmap='gray'); # \u7d50\u679c\u8868\u793a\n\n\n\n\u4e00\u5fdc\u3001\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n# <i class='fa fa-camera-retro' /> \u624b\u639b\u304b\u308a\u306f\u30d0\u30e9\u30d0\u30e9\u306e\u5199\u771f\n\u72af\u4eba\u306e\u30a2\u30b8\u30c8\u306b\u8b66\u5bdf\u304c\u8e0f\u307f\u8fbc\u3093\u3060\u3068\u3053\u308d\u3001\u6642\u3059\u3067\u306b\u9045\u304f\u3001\u72af\u4eba\u306f\u8a3c\u62e0\u306e\u5199\u771f\u3092\u30b7\u30e5\u30ec\u30c3\u30c0\u30fc\u306b\u304b\u3051\u305f\u5f8c\u3060\u3063\u305f\u3002\n\u30b7\u30e5\u30ec\u30c3\u30c0\u30fc\u306b\u304b\u3051\u3089\u308c\u305f\u77ed\u518a\u72b6\u306e\u5207\u308c\u7aef\u3092\u4e26\u3079\u66ff\u3048\u3066\u3001\u5199\u771f\u3092\u5fa9\u5143\u3057\u3088\u3046\u3002\n\n# <i class='fa fa-camera-retro' /> \u30d0\u30e9\u30d0\u30e9\u306e\u5199\u771f\u306e\u7528\u610f\n## \u5199\u771f\u3092\u8aad\u307f\u8fbc\u3080\u2192\u5909\u6570ar\n[stocksnap.io](https://stocksnap.io/photo/X8CW5LGMWI)\u306e\u5199\u771f\u3092\u4f7f\u3044\u307e\u3059\u3002Python\u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3059\u3002\n\n```py3:python3\nimport numpy as np, networkx as nx, matplotlib.pyplot as plt\nfrom PIL import Image\nfrom urllib import request\nwith request.urlopen('https://snap-photos.s3.amazonaws.com/'\n                     'img-thumbs/960w/X8CW5LGMWI.jpg') as fd:\n    im = Image.open(fd) # \u5199\u771f\u8aad\u8fbc\nar = np.array(im.convert('L').getdata()) # \u30b0\u30ec\u30fc('L')\u306b\u3057\u3066\u3001np.ndarray\u306b\u5909\u63db\nar = ar.reshape((im.height, -1))\nplt.imshow(ar, cmap='gray'); # \u8868\u793a\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/463b6b05-9b7e-f8b4-80aa-9cfb6fbce83e.png)\n\n## \u5199\u771f\u3092\u30d0\u30e9\u30d0\u30e9\u306b\u3059\u308b\u2192\u5909\u6570sp\n20\u30d4\u30af\u30bb\u30eb\u3054\u3068\u306b\u3001\u6a2a\u306b\u5207\u3063\u3066\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u3066\u7e4b\u3052\u307e\u3059\u3002\n\n```py3:python3\nwd = 20 # \u77ed\u518a\u306e\u5e45\nn = im.height // wd # \u5206\u5272\u6570\nr = range(n)\n\nsp = [ar[i*wd:(i+1)*wd] for i in r]\ntmp = sp[1:]\nnp.random.seed(1)\nnp.random.shuffle(tmp)\nsp = [sp[0]] + tmp # \u5148\u982d\u306e\u307f\u540c\u3058\u9806\u756a\u306e\u307e\u307e\u306b\u3057\u3001\u6b8b\u308a\u30b7\u30e3\u30c3\u30d5\u30eb\nplt.imshow(np.concatenate(sp), cmap='gray'); # \u30d0\u30e9\u30d0\u30e9\u306e\u5199\u771f\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/8a2f07ed-2ca2-b553-0622-01a2770b33a5.png)\n\n# <i class='fa fa-camera-retro' /> \u8003\u3048\u65b9\nn\u500b\u306e\u77ed\u518a\u306b\u5bfe\u3057\u3001\u3064\u306a\u304c\u308b\u304b\u3069\u3046\u304b\u30922\u90e8\u30b0\u30e9\u30d5\u3067\u8003\u3048\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/0c9ac3a3-cc53-0224-1421-0a1450dfdb56.png)\n\n\u3059\u306a\u308f\u3061\u3001\u4e0a\u306e\u30ce\u30fc\u30c9i\u3068\u4e0b\u306e\u30ce\u30fc\u30c9j\u3092\u7d50\u3093\u3060\u3068\u304d\u306b\u3001\u77ed\u518ai\u306e\u4e0b\u306b\u77ed\u518aj\u3092\u7e4b\u3052\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u3064\u306a\u3052\u305f\u3068\u304d\u306b\u91cd\u307f\u306f\u3001\u300c\u77ed\u518ai\u306e\u4e0b1\u5217\u306e\u30d4\u30af\u30bb\u30eb\u3068\u77ed\u518aj\u306e\u4e0a1\u5217\u306e\u30d4\u30af\u30bb\u30eb\u306e\u5dee\u5206\u306e\u5c0f\u3055\u3044\u5024\u306e50%\u306e\u30ce\u30eb\u30e0\u300d\u306e\u30de\u30a4\u30ca\u30b9\u3068\u3057\u3001\u6700\u5c0f\u304c0\u306b\u306a\u308b\u3088\u3046\u306b\u8abf\u6574\u3057\u307e\u3059\u3002\n\u3053\u306e2\u90e8\u30b0\u30e9\u30d5\u306b\u5bfe\u3057\u3001[\u7d44\u5408\u305b\u6700\u9069\u5316\u554f\u984c](http://qiita.com/Tsutomu-KKE@github/items/bfbf4c185ed7004b5721)\u306e\u6700\u5927\u91cd\u307f\u30de\u30c3\u30c1\u30f3\u30b0\u554f\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u3001\u4e26\u3079\u65b9\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u91cd\u307f\u3092\u8a08\u7b97\u3059\u308b\u2192wgt\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n```py3:python3\nnn = int(im.width * 0.5) # 50%\u3092\u4f7f\u3046\nt = [[np.linalg.norm(np.sort(np.abs(sp[i][-1] - sp[j][0]))[:nn])\n      for j in r] for i in r]\nwgt = np.max(t) - t\n```\n\n## \u6709\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u2192g\n\u4e0a\u306e\u30ce\u30fc\u30c9\u30920...n-1\u3068\u3057\u3001\u4e0b\u306e\u30ce\u30fc\u30c9\u3092n...2*n-1\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u30b0\u30e9\u30d5\u306f2\u90e8\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\n```py3:python3\ng = nx.DiGraph() # \u6709\u5411\u30b0\u30e9\u30d5\nfor i in r:\n    for j in r:\n        if i != j:\n            g.add_edge(i, j+n, weight=wgt[i][j])\n```\n\n## \u89e3\u3044\u3066\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\u2192mtc\n2\u90e8\u30b0\u30e9\u30d5\u306e\u6700\u5927\u91cd\u307f\u30de\u30c3\u30c1\u30f3\u30b0\u554f\u984c\u3092\u89e3\u304d\u307e\u3059\u30020\u304b\u3089\u9806\u756a\u306b\u7d50\u679c(mtc)\u3092\u305f\u3069\u308b\u3068\u3001\u3064\u306a\u304e\u65b9\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```py3:python3\nmtc = nx.max_weight_matching(g) # \u6700\u5927\u91cd\u307f\u30de\u30c3\u30c1\u30f3\u30b0\u554f\u984c\u3092\u89e3\u304f\n# res\u306b\u9806\u756a\u3092\u5165\u308c\u308b\ni, res = 0, []\nfor _ in r:\n    res.append(sp[i])\n    i = mtc[i] - n\nplt.imshow(np.concatenate(res), cmap='gray'); # \u7d50\u679c\u8868\u793a\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/c6c0fc1f-9658-055f-659b-dbf9257b553f.png)\n\n\u4e00\u5fdc\u3001\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n", "tags": ["\u7d44\u5408\u305b\u6700\u9069\u5316", "\u6700\u9069\u5316", "\u6570\u5b66", "Python"]}