{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\npotatotips\u52c9\u5f37\u4f1a #23 \u3067 @izumin5210 \u3055\u3093\u304c\"Predictable state container\" and Data Binding\u306e\u30bf\u30a4\u30c8\u30eb\u3067, Redux\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u958b\u767a\u3057\u305fAndroid\u5411\u3051\u306eRedux\u5b9f\u88c5\u306eDroidux\u304c\u3068\u3066\u3082\u8208\u5473\u6df1\u304b\u3063\u305f\u306e\u3067\u3001Swift\u3067\u3082Redux\u306b\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\nRedux\u306f\u8907\u96d1\u306b\u306a\u308a\u304c\u3061\u306a\u30a2\u30d7\u30ea\u306e\u72b6\u614b\u3084\u30c7\u30fc\u30bf\u3092\u7136\u308b\u3079\u304d\u30eb\u30fc\u30eb\u306e\u5143\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30d7\u30ea\u958b\u767a\u306e\u8907\u96d1\u6027\u3092\u8efd\u6e1b\u3057\u54c1\u8cea\u3068\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u6027\u306e\u3042\u308b\u30b3\u30fc\u30c9\u3078\u3068\u5bc4\u4e0e\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3053\u306e\u8003\u3048\u65b9\u306fJavaScript\u306e\u30a2\u30d7\u30ea(SPA)\u306b\u7559\u307e\u3089\u305aiOS\u30a2\u30d7\u30ea\u3067\u3082\u901a\u305a\u308b\u3088\u3046\u306b\u611f\u3058\u307e\u3057\u305f\u3002\nSwift\u3067\u306eRedux\u5b9f\u88c5\u3092\u63a2\u3057\u305f\u3068\u3053\u308d\uff13\u3064\u307b\u3069\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\u3069\u308c\u3082GithubStar\u306f\u307e\u3060\u4e00\u6841\u53f0\u3067\u3059\u3002\u4eca\u56de\u306fAleksion\u3055\u3093\u4f5c\u306eReduxSwift\u3092\u3055\u308f\u3063\u3066\u307f\u307e\u3059\u3002ReduxSwift\u306fstate\u306esubscribe\u306bRxSwift\u3092\u6d3b\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\nAleksion/reduxSwift\nrob-brown/SwiftRedux\nmwise/Redux.swift\n\n\nRedux\u306b\u3064\u3044\u3066\n\nRedux is a predictable state container for JavaScript apps.\nRedux\u306fJavaScrip\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u4e88\u6e2c\u53ef\u80fd\u306a\u72b6\u614b\u30b3\u30f3\u30c6\u30ca\u3067\u3059\u3002\nRedux\u306f\u4ee5\u4e0b\u306e3\u539f\u5247\u306b\u5247\u3063\u3066\u72b6\u614b\u5909\u5316\u306e\u6d41\u308c\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u3001\u72b6\u614b\u3092\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nThree Principles (3\u539f\u5247)\n\nSingle source of truth\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306e\u72b6\u614b(state)\u306f\u30c4\u30ea\u30fc\u306e\u5f62\u3067\uff11\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u4f5c\u3089\u308c\u3001\uff11\u3064\u306e\u30b9\u30c8\u30a2\u306b\u4fdd\u5b58\u3055\u308c\u308b\n\n\nState is read-only\n\n\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u624b\u6bb5\u306f\u3001\u5909\u66f4\u5185\u5bb9\u3092\u3082\u3063\u305faction\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u767a\u884c\u3057\u3066\u5b9f\u884c\u3059\u308b\u3060\u3051\n\n\nMutations are written as pure functions\n\n\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u3069\u306e\u3088\u3046\u306b\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u304b\u3092\u300cReducer\u300d\u3067\u884c\u3046\n\n\n\u30c7\u30fc\u30bf\u30d5\u30ed\u30fc\nRedux\u306e\u30c7\u30fc\u30bf\u30d5\u30ed\u30fc\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u4e00\u65b9\u5411\u306e\u30b5\u30a4\u30af\u30eb\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\u30c7\u30fc\u30bf\u66f4\u65b0\u306e\u624b\u7d9a\u304d\u3092\u300cReducer\u300d\u3068\u3044\u3046\uff11\u3064\u306e\u7a93\u53e3\u306b\u96c6\u7d04\u3059\u308b\u3053\u3068\u3067\u3001\u3044\u3064\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u304c\u66f4\u65b0\u3055\u308c\u308b\u306e\u304b\u628a\u63e1\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u56f3\u306f Introduction to Redux // Speaker Deck \u304b\u3089\u304a\u501f\u308a\u3057\u307e\u3057\u305f\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nRedux\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u672c\u5bb6\u306e\u30b5\u30a4\u30c8\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\u548c\u8a33\u304f\u3060\u3055\u3063\u3066\u3044\u308b\u65b9\u304c\u3044\u308b\u306e\u3067\u305d\u3061\u3089\u3082\u3069\u3046\u305e\u3002\n\u672c\u5bb6\n\nrackt/redux\nRedux Read Me\n\n\u7ffb\u8a33\n\nRedux\u5165\u9580 1\u65e5\u76ee Redux\u3068\u306f(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33) \n\nRedux\u5165\u9580 2\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbActions(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33) \nRedux\u5165\u9580 3\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbReducers(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)\nRedux\u5165\u9580 4\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbStores(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)\nRedux\u5165\u9580 5\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbData Flow(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)\nRedux\u5165\u9580 6\u65e5\u76ee Redux\u3068React\u306e\u9023\u643a(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)\n\n\n\u74b0\u5883\u69cb\u7bc9\n\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u884c\u3044\u307e\u3057\u305f\u3002\n\nXcode7.1.1\nSwift2.1\n\n\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u5f8c\u3001Carthage\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ cat Cartfile\ngithub \"Aleksion/reduxSwift\"\ngit \"git@github.com:ReactiveX/RxSwift.git\" \"2.0.0-beta.2\"\n\n$ carthage update --platform ios\n*** Cloning RxSwift\n*** Cloning reduxSwift\n*** Checking out RxSwift at \"2.0.0-beta.2\"\n*** Checking out reduxSwift at \"0.0.18\"\n*** xcodebuild output can be found in /var/folders/mg/ryg2v7mx28jbd1k_6xh0gmc00000gn/T/carthage-xcodebuild.yrb0dw.log\n*** Building scheme \"RxBlocking-iOS\" in Rx.xcworkspace\n*** Building scheme \"RxCocoa-iOS\" in Rx.xcworkspace\n*** Building scheme \"RxSwift-iOS\" in Rx.xcworkspace\n*** Building scheme \"SwiftRedux\" in SwiftRedux.xcodeproj\n ~/s/g/s/ReduxExample \ue0b0 cat Cartfile\n\nBuild\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u8ffd\u52a0\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\n\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\nSwiftRedux\u306eUsage\u3092\u53c2\u8003\u306b\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3057\u305f\uff08\u307b\u3068\u3093\u3069\u305d\u306e\u307e\u307e\u3067\u3059\uff09\u3002\nSwift\u3067\u8a18\u8ff0\u3059\u308b\u5834\u5408JavaScript\u7248\u306b\u6bd4\u3079\u3066\u4ee5\u4e0b\u306e\u512a\u4f4d\u6027\u304c\u3042\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\nAction\u3068State\u306e\u30c7\u30fc\u30bf\u3092let\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067Immutable\u3067\u3042\u308b\u3053\u3068\u3092\u660e\u793a\u3067\u304d\u308b\nAction\u306eType\u306b\u4efb\u610f\u306e\u4e00\u610f\u306a\u6587\u5b57\u5217\u3092\u30e9\u30d9\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n\n\nStruct\u540d\u304c\u81ea\u52d5\u7684\u306bType\u3068\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u308b\n\n\nstore\u3092subscribe\u3059\u308b\u3053\u3068\u3067\u5f97\u3089\u308c\u308bstate\u306f\u578b\u3092\u6709\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3069\u306e\u3088\u3046\u306astate\u306a\u306e\u304b\u5224\u65ad\u3067\u304d\u308b\n\n//\n//  ViewController.swift\n//  ReduxExample\n//\n//  Created by susieyy on 11/29/15.\n//  Copyright \u00a9 2015 SUSIEYY. All rights reserved.\n//\n\nimport UIKit\nimport SwiftRedux\nimport RxSwift\n\n/**\n * This is a simple standard action. The only requirement is that an action complies to\n * the Action protocol. The SimpleStandardAction containts a strongly typed rawPayload\n * property. The protocol automatically assigns the rawPayload to the Actions payload\n * property. This removes the necessity of type casting whenever working with actions in * a reducer.\n *\n * There's also the StandardAction protocol, that requires the struc to have an\n * initializer. This is required if the bindActionCreators helper is to be used.\n */\nstruct IncrementAction: SimpleStandardAction {\n    let meta: Any? = nil\n    let error: Bool = false\n    let rawPayload: Int = 1\n}\n\n/**\n * This is a simple reducer. It is a pure function that follows the syntax\n * (state, action) -> state.\n * It describes how an action transforms the previous state into the next state.\n *\n * Instead of using the actions.type property - as is done in the regular Redux framework\n * we use the power of Swifts static typing to deduce the action.\n */\nfunc counterReducer(previousState: Int?, action: Action) -> Int {\n    // Declare the reducers default value\n    let defaultValue = 0\n    var state = previousState ?? defaultValue\n\n    switch action {\n    case let action as IncrementAction:\n        state = state + action.rawPayload\n        return state\n    default:\n        return state\n    }\n}\n\n/**\n * The applications state. This should contain the state of the whole application.\n * When building larger applications, you can optionally assign complex structs to\n * properties on the AppState and handle them in the part of the application that\n * uses them.\n */\nstruct AppState: State {\n    let count: Int!\n}\n\n/**\n * Create the applications reducer. While we could create a combineReducer function\n * we've currently chosen to allow reducers to be statically typed and accept\n * static states - instead of Any - which currently forces us to define the\n * application reducer as such. This could possibly be simplified with reflection.\n */\nlet applicationReducer = {(state: State? , action: Action) -> State in\n    // Optionally throw error if the given state isn't an AppState\n    let appState = state as! AppState?\n    return AppState(count: counterReducer(appState?.count, action: action))\n}\n\n// Create application store. The second parameter is an optional default state.\nlet store = createStore(applicationReducer, initialState: nil)\n\nclass ViewController: UIViewController {\n\n    @IBOutlet weak var countLabel: UILabel!\n    var disposable: Disposable? = nil\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        disposable = store.subscribe{ (state: State) in\n            print(state)\n            if let state = state as? AppState {\n                self.countLabel.text = \"\\(state.count)\"\n            }\n        }\n    }\n\n    deinit {\n        // Dispose of the subscriber after use.\n        disposable?.dispose()\n    }\n\n    @IBAction func incremntAction(sender: AnyObject) {\n        store.dispatch(IncrementAction())\n    }\n}\n\n\n\n\u52d5\u4f5c\n\n\nRefs\n\nRedux\n\nrackt/redux\nRedux Read Me\n\n\nSwift Redux\n\nAleksion/reduxSwift\nrob-brown/SwiftRedux\nmwise/Redux.swift\n\n\n\u7ffb\u8a33\n\nRedux\u5165\u9580 1\u65e5\u76ee Redux\u3068\u306f(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33) \n\nRedux\u5165\u9580 2\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbActions(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33) \nRedux\u5165\u9580 3\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbReducers(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)\nRedux\u5165\u9580 4\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbStores(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)\nRedux\u5165\u9580 5\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbData Flow(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)\nRedux\u5165\u9580 6\u65e5\u76ee Redux\u3068React\u306e\u9023\u643a(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)\n\n\n## \u306f\u3058\u3081\u306b\n\n[potatotips\u52c9\u5f37\u4f1a #23](http://connpass.com/event/21750/) \u3067 @izumin5210 \u3055\u3093\u304c\"Predictable state container\" and Data Binding\u306e\u30bf\u30a4\u30c8\u30eb\u3067, [Redux](https://github.com/rackt/redux)\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u958b\u767a\u3057\u305fAndroid\u5411\u3051\u306e[Redux](https://github.com/rackt/redux)\u5b9f\u88c5\u306e[Droidux](https://github.com/izumin5210/Droidux)\u304c\u3068\u3066\u3082\u8208\u5473\u6df1\u304b\u3063\u305f\u306e\u3067\u3001Swift\u3067\u3082[Redux](https://github.com/rackt/redux)\u306b\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n[Redux](https://github.com/rackt/redux)\u306f\u8907\u96d1\u306b\u306a\u308a\u304c\u3061\u306a\u30a2\u30d7\u30ea\u306e\u72b6\u614b\u3084\u30c7\u30fc\u30bf\u3092\u7136\u308b\u3079\u304d\u30eb\u30fc\u30eb\u306e\u5143\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30d7\u30ea\u958b\u767a\u306e\u8907\u96d1\u6027\u3092\u8efd\u6e1b\u3057\u54c1\u8cea\u3068\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u6027\u306e\u3042\u308b\u30b3\u30fc\u30c9\u3078\u3068\u5bc4\u4e0e\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3053\u306e\u8003\u3048\u65b9\u306fJavaScript\u306e\u30a2\u30d7\u30ea(SPA)\u306b\u7559\u307e\u3089\u305aiOS\u30a2\u30d7\u30ea\u3067\u3082\u901a\u305a\u308b\u3088\u3046\u306b\u611f\u3058\u307e\u3057\u305f\u3002\n\nSwift\u3067\u306e[Redux](https://github.com/rackt/redux)\u5b9f\u88c5\u3092\u63a2\u3057\u305f\u3068\u3053\u308d\uff13\u3064\u307b\u3069\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\u3069\u308c\u3082GithubStar\u306f\u307e\u3060\u4e00\u6841\u53f0\u3067\u3059\u3002\u4eca\u56de\u306f[Aleksion](https://github.com/Aleksion)\u3055\u3093\u4f5c\u306e[ReduxSwift](https://github.com/Aleksion/reduxSwift)\u3092\u3055\u308f\u3063\u3066\u307f\u307e\u3059\u3002[ReduxSwift](https://github.com/Aleksion/reduxSwift)\u306fstate\u306esubscribe\u306b[RxSwift](https://github.com/ReactiveX/RxSwift/)\u3092\u6d3b\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n- [Aleksion/reduxSwift](https://github.com/Aleksion/reduxSwift)\n- [rob-brown/SwiftRedux](https://github.com/rob-brown/SwiftRedux)\n- [mwise/Redux.swift](https://github.com/mwise/Redux.swift)\n\n\n## Redux\u306b\u3064\u3044\u3066\n\n> Redux is a predictable state container for JavaScript apps.\n> Redux\u306fJavaScrip\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u4e88\u6e2c\u53ef\u80fd\u306a\u72b6\u614b\u30b3\u30f3\u30c6\u30ca\u3067\u3059\u3002\n\n> Redux\u306f\u4ee5\u4e0b\u306e3\u539f\u5247\u306b\u5247\u3063\u3066\u72b6\u614b\u5909\u5316\u306e\u6d41\u308c\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u3001\u72b6\u614b\u3092\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n### Three Principles (3\u539f\u5247)\n\n#### Single source of truth\n\n> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306e\u72b6\u614b(state)\u306f\u30c4\u30ea\u30fc\u306e\u5f62\u3067\uff11\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u4f5c\u3089\u308c\u3001\uff11\u3064\u306e\u30b9\u30c8\u30a2\u306b\u4fdd\u5b58\u3055\u308c\u308b\n\n#### State is read-only\n\n> \u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u624b\u6bb5\u306f\u3001\u5909\u66f4\u5185\u5bb9\u3092\u3082\u3063\u305faction\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u767a\u884c\u3057\u3066\u5b9f\u884c\u3059\u308b\u3060\u3051\n\n#### Mutations are written as pure functions\n\n> \u30a2\u30af\u30b7\u30e7\u30f3\u304c\u3069\u306e\u3088\u3046\u306b\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u304b\u3092\u300cReducer\u300d\u3067\u884c\u3046\n\n### \u30c7\u30fc\u30bf\u30d5\u30ed\u30fc\n\nRedux\u306e\u30c7\u30fc\u30bf\u30d5\u30ed\u30fc\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u4e00\u65b9\u5411\u306e\u30b5\u30a4\u30af\u30eb\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\u30c7\u30fc\u30bf\u66f4\u65b0\u306e\u624b\u7d9a\u304d\u3092\u300cReducer\u300d\u3068\u3044\u3046\uff11\u3064\u306e\u7a93\u53e3\u306b\u96c6\u7d04\u3059\u308b\u3053\u3068\u3067\u3001\u3044\u3064\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u304c\u66f4\u65b0\u3055\u308c\u308b\u306e\u304b\u628a\u63e1\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n![\u540d\u79f0\u672a\u8a2d\u5b9a.jpg](https://qiita-image-store.s3.amazonaws.com/0/4943/9e395770-9217-cd64-e8a6-78124c1ff5fb.jpeg \"\u540d\u79f0\u672a\u8a2d\u5b9a.jpg\")\n\n\n\u56f3\u306f [Introduction to Redux // Speaker Deck](https://speakerdeck.com/axross/introduction-to-redux) \u304b\u3089\u304a\u501f\u308a\u3057\u307e\u3057\u305f\u3002\n\n### \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\nRedux\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u672c\u5bb6\u306e\u30b5\u30a4\u30c8\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\u548c\u8a33\u304f\u3060\u3055\u3063\u3066\u3044\u308b\u65b9\u304c\u3044\u308b\u306e\u3067\u305d\u3061\u3089\u3082\u3069\u3046\u305e\u3002\n\n\u672c\u5bb6\n\n- [rackt/redux](https://github.com/rackt/redux)\n- [Redux Read Me](http://rackt.org/redux/index.html)\n\n\u7ffb\u8a33\n\n- [Redux\u5165\u9580 1\u65e5\u76ee Redux\u3068\u306f(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33) ](http://qiita.com/kiita312/items/b001839150ab04a6a427)\n- [Redux\u5165\u9580 2\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbActions(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/8f8d047e5cbd87399ccb) \n- [Redux\u5165\u9580 3\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbReducers(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/7fdce94912d6d9c801f8)\n- [Redux\u5165\u9580 4\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbStores(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/377787c24efac64f2495)\n- [Redux\u5165\u9580 5\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbData Flow(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/ae3ce31521ad24dd699f)\n- [Redux\u5165\u9580 6\u65e5\u76ee Redux\u3068React\u306e\u9023\u643a(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/d769c85f446994349b52)\n\n## \u74b0\u5883\u69cb\u7bc9\n\n\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u884c\u3044\u307e\u3057\u305f\u3002\n\n- Xcode7.1.1\n- Swift2.1\n\n\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u5f8c\u3001Carthage\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```shell\n$ cat Cartfile\ngithub \"Aleksion/reduxSwift\"\ngit \"git@github.com:ReactiveX/RxSwift.git\" \"2.0.0-beta.2\"\n```\n\n```shell\n$ carthage update --platform ios\n*** Cloning RxSwift\n*** Cloning reduxSwift\n*** Checking out RxSwift at \"2.0.0-beta.2\"\n*** Checking out reduxSwift at \"0.0.18\"\n*** xcodebuild output can be found in /var/folders/mg/ryg2v7mx28jbd1k_6xh0gmc00000gn/T/carthage-xcodebuild.yrb0dw.log\n*** Building scheme \"RxBlocking-iOS\" in Rx.xcworkspace\n*** Building scheme \"RxCocoa-iOS\" in Rx.xcworkspace\n*** Building scheme \"RxSwift-iOS\" in Rx.xcworkspace\n*** Building scheme \"SwiftRedux\" in SwiftRedux.xcodeproj\n ~/s/g/s/ReduxExample \ue0b0 cat Cartfile\n```\n\nBuild\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n![ReduxExample_xcodeproj.jpg](https://qiita-image-store.s3.amazonaws.com/0/4943/1a9d4dad-7560-27f0-d2d6-cfc72f5199a7.jpeg \"ReduxExample_xcodeproj.jpg\")\n\n\n\u8ffd\u52a0\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n![ReduxExample_xcodeproj.jpg](https://qiita-image-store.s3.amazonaws.com/0/4943/730c4acf-f86f-b879-b558-9a83137fa7cb.jpeg \"ReduxExample_xcodeproj.jpg\")\n\n\n## \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n\nSwiftRedux\u306eUsage\u3092\u53c2\u8003\u306b\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3057\u305f\uff08\u307b\u3068\u3093\u3069\u305d\u306e\u307e\u307e\u3067\u3059\uff09\u3002\nSwift\u3067\u8a18\u8ff0\u3059\u308b\u5834\u5408JavaScript\u7248\u306b\u6bd4\u3079\u3066\u4ee5\u4e0b\u306e\u512a\u4f4d\u6027\u304c\u3042\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n- Action\u3068State\u306e\u30c7\u30fc\u30bf\u3092`let`\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067Immutable\u3067\u3042\u308b\u3053\u3068\u3092\u660e\u793a\u3067\u304d\u308b\n- Action\u306eType\u306b\u4efb\u610f\u306e\u4e00\u610f\u306a\u6587\u5b57\u5217\u3092\u30e9\u30d9\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n - Struct\u540d\u304c\u81ea\u52d5\u7684\u306bType\u3068\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u308b\n- store\u3092subscribe\u3059\u308b\u3053\u3068\u3067\u5f97\u3089\u308c\u308bstate\u306f\u578b\u3092\u6709\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3069\u306e\u3088\u3046\u306astate\u306a\u306e\u304b\u5224\u65ad\u3067\u304d\u308b\n\n\n```swift\n//\n//  ViewController.swift\n//  ReduxExample\n//\n//  Created by susieyy on 11/29/15.\n//  Copyright \u00a9 2015 SUSIEYY. All rights reserved.\n//\n\nimport UIKit\nimport SwiftRedux\nimport RxSwift\n\n/**\n * This is a simple standard action. The only requirement is that an action complies to\n * the Action protocol. The SimpleStandardAction containts a strongly typed rawPayload\n * property. The protocol automatically assigns the rawPayload to the Actions payload\n * property. This removes the necessity of type casting whenever working with actions in * a reducer.\n *\n * There's also the StandardAction protocol, that requires the struc to have an\n * initializer. This is required if the bindActionCreators helper is to be used.\n */\nstruct IncrementAction: SimpleStandardAction {\n    let meta: Any? = nil\n    let error: Bool = false\n    let rawPayload: Int = 1\n}\n\n/**\n * This is a simple reducer. It is a pure function that follows the syntax\n * (state, action) -> state.\n * It describes how an action transforms the previous state into the next state.\n *\n * Instead of using the actions.type property - as is done in the regular Redux framework\n * we use the power of Swifts static typing to deduce the action.\n */\nfunc counterReducer(previousState: Int?, action: Action) -> Int {\n    // Declare the reducers default value\n    let defaultValue = 0\n    var state = previousState ?? defaultValue\n    \n    switch action {\n    case let action as IncrementAction:\n        state = state + action.rawPayload\n        return state\n    default:\n        return state\n    }\n}\n\n/**\n * The applications state. This should contain the state of the whole application.\n * When building larger applications, you can optionally assign complex structs to\n * properties on the AppState and handle them in the part of the application that\n * uses them.\n */\nstruct AppState: State {\n    let count: Int!\n}\n\n/**\n * Create the applications reducer. While we could create a combineReducer function\n * we've currently chosen to allow reducers to be statically typed and accept\n * static states - instead of Any - which currently forces us to define the\n * application reducer as such. This could possibly be simplified with reflection.\n */\nlet applicationReducer = {(state: State? , action: Action) -> State in\n    // Optionally throw error if the given state isn't an AppState\n    let appState = state as! AppState?\n    return AppState(count: counterReducer(appState?.count, action: action))\n}\n\n// Create application store. The second parameter is an optional default state.\nlet store = createStore(applicationReducer, initialState: nil)\n\nclass ViewController: UIViewController {\n\n    @IBOutlet weak var countLabel: UILabel!\n    var disposable: Disposable? = nil\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        disposable = store.subscribe{ (state: State) in\n            print(state)\n            if let state = state as? AppState {\n                self.countLabel.text = \"\\(state.count)\"\n            }\n        }\n    }\n    \n    deinit {\n        // Dispose of the subscriber after use.\n        disposable?.dispose()\n    }\n\n    @IBAction func incremntAction(sender: AnyObject) {\n        store.dispatch(IncrementAction())\n    }\n}\n\n```\n\n## \u52d5\u4f5c\n\n![11\u6708 29, 2015 23:33.gif](https://qiita-image-store.s3.amazonaws.com/0/4943/31b27487-228b-ca4c-13bf-e18eca456e92.gif \"11\u6708 29, 2015 23:33.gif\")\n\n\n\n## Refs\n\n#### Redux\n\n- [rackt/redux](https://github.com/rackt/redux)\n- [Redux Read Me](http://rackt.org/redux/index.html)\n\n\n#### Swift Redux\n\n- [Aleksion/reduxSwift](https://github.com/Aleksion/reduxSwift)\n- [rob-brown/SwiftRedux](https://github.com/rob-brown/SwiftRedux)\n- [mwise/Redux.swift](https://github.com/mwise/Redux.swift)\n\n#### \u7ffb\u8a33\n\n- [Redux\u5165\u9580 1\u65e5\u76ee Redux\u3068\u306f(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33) ](http://qiita.com/kiita312/items/b001839150ab04a6a427)\n- [Redux\u5165\u9580 2\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbActions(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/8f8d047e5cbd87399ccb) \n- [Redux\u5165\u9580 3\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbReducers(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/7fdce94912d6d9c801f8)\n- [Redux\u5165\u9580 4\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbStores(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/377787c24efac64f2495)\n- [Redux\u5165\u9580 5\u65e5\u76ee Redux\u306e\u57fa\u672c\u30fbData Flow(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/ae3ce31521ad24dd699f)\n- [Redux\u5165\u9580 6\u65e5\u76ee Redux\u3068React\u306e\u9023\u643a(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u548c\u8a33)](http://qiita.com/kiita312/items/d769c85f446994349b52)\n\n\n\n", "tags": ["iOS", "redux", "Swift"]}