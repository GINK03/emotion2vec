{"context": "\n\n\u56fa\u5b9a\u3057\u304d\u3044\u5024\u51e6\u7406\n\u3042\u308b\u4e00\u5b9a\u306e\u5024\u3088\u308a\u4e0a\u304b\u3001\u4e0b\u304b\u3068\u8a00\u3063\u305f\u8a71\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nfunc StaticThreshold(th uint32) icom.EffectFunc {\n    return func(img image.Image, x, y int) color.RGBA64 {\n        r, _, _, a := img.At(x, y).RGBA()\n        val := ex.ColorWidth\n        if r < th {\n            val = 0\n        }\n        return color.RGBA64{uint16(val), uint16(val), uint16(val), uint16(a)}\n    }\n}\n\n\u3082\u306f\u3084\u8aac\u660e\u306f\u4e0d\u8981\u3067\u3059\u306d\u3001\u3053\u308c\u304f\u3089\u3044\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u826f\u3044\u3067\u3059\u3002\n\n\u3000\u51fa\u529b\u7d50\u679c\n\u3053\u3046\u3084\u3063\u3066\u5149\u306e\u5f53\u305f\u308a\u65b9\u304c\u304a\u304b\u3057\u3044\u3068\u3053\u3046\u3044\u3046\u611f\u3058\u306b\u306a\u308b\u3088\u3001\u3063\u3066\u306a\u5177\u5408\u3002\n\n\u5143\u753b\u50cf\n\n\n\u51e6\u7406\u753b\u50cf\n\n\n\u53ef\u5909\u3057\u304d\u3044\u5024\u51e6\u7406\n\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u753b\u7d20\u306e\u5024\u3092\u6c7a\u5b9a\u3059\u308b\u3001\u3068\u7406\u89e3\u3057\u305f\u3002\n* \u3042\u308b\u4e00\u70b9\u306b\u5bfe\u3057\u3001\u4efb\u610f\u306b\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u3001\u305d\u306e\u7bc4\u56f2\u306e\u753b\u7d20\u306e\u5e73\u5747\u3092\u3068\u308b\n* \u5e73\u5747\u306b\u5bfe\u3057\u3066\u3001\u524d\u56de\u306e\u5224\u5b9a\u304c\u660e\u308b\u3044\u5074\u306a\u3089\u4efb\u610f\u306e\u5024\u3092\u6e1b\u7b97\u3059\u308b\n* \u5e73\u5747\u306b\u5bfe\u3057\u3066\u3001\u524d\u56de\u306e\u5224\u5b9a\u304c\u6697\u3044\u5074\u306a\u3089\u4efb\u610f\u306e\u5024\u3092\u52a0\u7b97\u3059\u308b\u3002\n* \u305d\u306e\u5e73\u5747\u3068\u3042\u308b\u4e00\u70b9\u306e\u3069\u3061\u3089\u304c\u660e\u308b\u3044\u304b\u3067\uff10or\u660e\u308b\u3055\u6700\u5927\u304b\u3092\u6c7a\u3081\u308b\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u304c\u3068\u306b\u304b\u304f\u3084\u3084\u3053\u3057\u304b\u3063\u305f\u3001\u304a\u305d\u3089\u304f\u6574\u7406\u3059\u308b\u8853\u306f\u3042\u308b\u3051\u3069\u3001\u307b\u3063\u3068\u3053\u3046\u3002\n\u6700\u65b0\u8ca9\u306e\u672c\u306b\u306f\u307e\u3057\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u3042\u308b\u306e\u3060\u308d\u3051\uff1f\nfunc VariableThreshold(size, width int, isBlack bool) icom.EffectFunc {\n    data := VariableData{-1, 0}\n    return func(img image.Image, x, y int) color.RGBA64 {\n        //  y\u8ef8\u304c\u5909\u308f\u3063\u305f\u3089\u521d\u671f\u5316\u3059\u308b\u3060\u3051\n        createGrayBase(&data, y, isBlack)\n        point := img.Bounds().Size()\n        //\u5e73\u5747\u3092\u53d6\u308b\u753b\u7d20\u306e\u7bc4\u56f2\u3092\u4f5c\u6210\u3059\u308b\n        y1, y2 := getVariableRange(y, point.Y, size)\n        x1, x2 := getVariableRange(x, point.X, size)\n        ave := getAverage(img, x1, x2, y1, y2)\n        var th int\n        // \u524d\u56de\u306e\u5909\u5316\u3057\u305f\u7a2e\u985e\u306b\u3088\u3063\u3066\u57fa\u6e96\u5024\u3092\u5909\u5316\u3055\u305b\u308b\u3002\n        if data.grayBase == ex.ColorWidth {\n            th = ave - width\n        } else {\n            th = ave + width\n        }\n        //\u5e73\u5747\u5024\u3088\u308a\u660e\u308b\u3044\u304b\uff1f\n        r, _, _, a := img.At(x, y).RGBA()\n        v := uint16(0)\n        if r >= uint32(th) {\n            v = ex.ColorWidth\n        }\n        data.grayBase = int(v)\n        return color.RGBA64{v, v, v, uint16(a)}\n    }\n\n\n\u95a2\u6570\u540dcreate\u3058\u3083\u306a\u304f\u3066init\ngetVariableRange\u3082\u542b\u3081\u3066getAverage\n\u5927\u304d\u304f\uff13\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u5206\u3051\u308b\u3079\u304d\u3060\u3063\u305f\u304b\u306a\u3068\u601d\u3046\u3002\n\u3068\u3044\u3046\u53cd\u7701\u304c\u51fa\u3066\u304d\u305f\u3002\n\n\u4e2d\u306e\u95a2\u6570\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u3066\u3082\u826f\u3044\u3051\u3069\u3001\u8ad6\u7406\u3092\u77e5\u308b\u3079\u304d\u3060\u3068\u601d\u3046\u306e\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3088\u308a\u3082\u56f3\u3092\u63cf\u3044\u3066\u3042\u3052\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u306d\u3002\n\ngetVariableRange\u306e\u4e2d\u8eab\n\u5e73\u5747\u3092\u53d6\u308b\u305f\u3081\u306e\u7bc4\u56f2\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002DRY\uff1f\u4f55\u305d\u308c\uff1f\nfunc getVariableRange(pos, max, siz int) (int, int) {\n    var v1, v2 int\n    //  \u6700\u521d\u304b\u3089\u73fe\u5728\u5024\uff0b\u898f\u5b9a\u5024\u306e\u534a\u5206\u3060\u3051\n    if pos < siz/2 {\n        //  pos-siz/2\u6700\u521d\u7a81\u7834\u306e\u5834\u5408  \n        v1 = 0\n        v2 = pos + siz/2\n    } else if (max - 1 - pos) < siz/2 {\n        //  pos\u301c\u6700\u5927\u30aa\u30fc\u30d0\u30fc\u306e\u5834\u5408   \n        v1 = pos - siz/2\n        v2 = max - 1\n    } else {\n        //  \u5927\u4f53\u3053\u3053\n        v1 = pos - siz/2\n        v2 = pos + siz/2\n    }\n    return v1, v2\n}\n\n\n\u51fa\u529b\u7d50\u679c\n\u306f\u3044\u3001\u6587\u5b57\u304c\u8aad\u3081\u307e\u3059\u306d\u3001\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\u3084\u3063\u3071\u3001\u3053\u3046\u3044\u3046\u306e\u306f\u7fd2\u3063\u305f\u65b9\u304c\u65e9\u305d\u3046\u3067\u3059\u3051\u3069\u3001OpenCV\u3042\u308b\u304b\u3089\u9762\u5012\u306a\u3093\u3067\u3084\u3089\u3093\u3060\u308d\u3046\u306a\u3002\n\n\n# \u56fa\u5b9a\u3057\u304d\u3044\u5024\u51e6\u7406\n\u3042\u308b\u4e00\u5b9a\u306e\u5024\u3088\u308a\u4e0a\u304b\u3001\u4e0b\u304b\u3068\u8a00\u3063\u305f\u8a71\u3002\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```go\nfunc StaticThreshold(th uint32) icom.EffectFunc {\n\treturn func(img image.Image, x, y int) color.RGBA64 {\n\t\tr, _, _, a := img.At(x, y).RGBA()\n\t\tval := ex.ColorWidth\n\t\tif r < th {\n\t\t\tval = 0\n\t\t}\n\t\treturn color.RGBA64{uint16(val), uint16(val), uint16(val), uint16(a)}\n\t}\n}\n```\n\n\u3082\u306f\u3084\u8aac\u660e\u306f\u4e0d\u8981\u3067\u3059\u306d\u3001\u3053\u308c\u304f\u3089\u3044\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u826f\u3044\u3067\u3059\u3002\n##\u3000\u51fa\u529b\u7d50\u679c\n\u3053\u3046\u3084\u3063\u3066\u5149\u306e\u5f53\u305f\u308a\u65b9\u304c\u304a\u304b\u3057\u3044\u3068\u3053\u3046\u3044\u3046\u611f\u3058\u306b\u306a\u308b\u3088\u3001\u3063\u3066\u306a\u5177\u5408\u3002\n\n### \u5143\u753b\u50cf\n![test2.jpg](https://qiita-image-store.s3.amazonaws.com/0/51009/4732a7cc-0fae-5126-a473-be2cc511e684.jpeg \"test2.jpg\")\n### \u51e6\u7406\u753b\u50cf\n![test_static_th.png](https://qiita-image-store.s3.amazonaws.com/0/51009/d6d2fcb7-096f-259a-1ab6-49853eca23eb.png \"test_static_th.png\")\n\n\n# \u53ef\u5909\u3057\u304d\u3044\u5024\u51e6\u7406\n\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u753b\u7d20\u306e\u5024\u3092\u6c7a\u5b9a\u3059\u308b\u3001\u3068\u7406\u89e3\u3057\u305f\u3002\n* \u3042\u308b\u4e00\u70b9\u306b\u5bfe\u3057\u3001\u4efb\u610f\u306b\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u3001\u305d\u306e\u7bc4\u56f2\u306e\u753b\u7d20\u306e\u5e73\u5747\u3092\u3068\u308b\n* \u5e73\u5747\u306b\u5bfe\u3057\u3066\u3001\u524d\u56de\u306e\u5224\u5b9a\u304c\u660e\u308b\u3044\u5074\u306a\u3089\u4efb\u610f\u306e\u5024\u3092\u6e1b\u7b97\u3059\u308b\n* \u5e73\u5747\u306b\u5bfe\u3057\u3066\u3001\u524d\u56de\u306e\u5224\u5b9a\u304c\u6697\u3044\u5074\u306a\u3089\u4efb\u610f\u306e\u5024\u3092\u52a0\u7b97\u3059\u308b\u3002\n* \u305d\u306e\u5e73\u5747\u3068\u3042\u308b\u4e00\u70b9\u306e\u3069\u3061\u3089\u304c\u660e\u308b\u3044\u304b\u3067\uff10or\u660e\u308b\u3055\u6700\u5927\u304b\u3092\u6c7a\u3081\u308b\u3002\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u304c\u3068\u306b\u304b\u304f\u3084\u3084\u3053\u3057\u304b\u3063\u305f\u3001\u304a\u305d\u3089\u304f\u6574\u7406\u3059\u308b\u8853\u306f\u3042\u308b\u3051\u3069\u3001\u307b\u3063\u3068\u3053\u3046\u3002\n\u6700\u65b0\u8ca9\u306e\u672c\u306b\u306f\u307e\u3057\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u3042\u308b\u306e\u3060\u308d\u3051\uff1f\n\n```go\nfunc VariableThreshold(size, width int, isBlack bool) icom.EffectFunc {\n\tdata := VariableData{-1, 0}\n\treturn func(img image.Image, x, y int) color.RGBA64 {\n\t\t//\ty\u8ef8\u304c\u5909\u308f\u3063\u305f\u3089\u521d\u671f\u5316\u3059\u308b\u3060\u3051\n\t\tcreateGrayBase(&data, y, isBlack)\n\t\tpoint := img.Bounds().Size()\n\t\t//\u5e73\u5747\u3092\u53d6\u308b\u753b\u7d20\u306e\u7bc4\u56f2\u3092\u4f5c\u6210\u3059\u308b\n\t\ty1, y2 := getVariableRange(y, point.Y, size)\n\t\tx1, x2 := getVariableRange(x, point.X, size)\n\t\tave := getAverage(img, x1, x2, y1, y2)\n\t\tvar th int\n\t\t// \u524d\u56de\u306e\u5909\u5316\u3057\u305f\u7a2e\u985e\u306b\u3088\u3063\u3066\u57fa\u6e96\u5024\u3092\u5909\u5316\u3055\u305b\u308b\u3002\n\t\tif data.grayBase == ex.ColorWidth {\n\t\t\tth = ave - width\n\t\t} else {\n\t\t\tth = ave + width\n\t\t}\n\t\t//\u5e73\u5747\u5024\u3088\u308a\u660e\u308b\u3044\u304b\uff1f\n\t\tr, _, _, a := img.At(x, y).RGBA()\n\t\tv := uint16(0)\n\t\tif r >= uint32(th) {\n\t\t\tv = ex.ColorWidth\n\t\t}\n\t\tdata.grayBase = int(v)\n\t\treturn color.RGBA64{v, v, v, uint16(a)}\n\t}\n```\n\n* \u95a2\u6570\u540dcreate\u3058\u3083\u306a\u304f\u3066init\n* getVariableRange\u3082\u542b\u3081\u3066getAverage\n* \u5927\u304d\u304f\uff13\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u5206\u3051\u308b\u3079\u304d\u3060\u3063\u305f\u304b\u306a\u3068\u601d\u3046\u3002\n\u3068\u3044\u3046\u53cd\u7701\u304c\u51fa\u3066\u304d\u305f\u3002\n\n\u4e2d\u306e\u95a2\u6570\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u3066\u3082\u826f\u3044\u3051\u3069\u3001\u8ad6\u7406\u3092\u77e5\u308b\u3079\u304d\u3060\u3068\u601d\u3046\u306e\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3088\u308a\u3082\u56f3\u3092\u63cf\u3044\u3066\u3042\u3052\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u306d\u3002\n\n### getVariableRange\u306e\u4e2d\u8eab\n\u5e73\u5747\u3092\u53d6\u308b\u305f\u3081\u306e\u7bc4\u56f2\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002DRY\uff1f\u4f55\u305d\u308c\uff1f\n\n```\nfunc getVariableRange(pos, max, siz int) (int, int) {\n\tvar v1, v2 int\n\t//\t\u6700\u521d\u304b\u3089\u73fe\u5728\u5024\uff0b\u898f\u5b9a\u5024\u306e\u534a\u5206\u3060\u3051\n\tif pos < siz/2 {\n\t\t//\tpos-siz/2\u6700\u521d\u7a81\u7834\u306e\u5834\u5408\t\n\t\tv1 = 0\n\t\tv2 = pos + siz/2\n\t} else if (max - 1 - pos) < siz/2 {\n\t\t//\tpos\u301c\u6700\u5927\u30aa\u30fc\u30d0\u30fc\u306e\u5834\u5408\t\n\t\tv1 = pos - siz/2\n\t\tv2 = max - 1\n\t} else {\n\t\t//\t\u5927\u4f53\u3053\u3053\n\t\tv1 = pos - siz/2\n\t\tv2 = pos + siz/2\n\t}\n\treturn v1, v2\n}\n```\n## \u51fa\u529b\u7d50\u679c\n\u306f\u3044\u3001\u6587\u5b57\u304c\u8aad\u3081\u307e\u3059\u306d\u3001\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\u3084\u3063\u3071\u3001\u3053\u3046\u3044\u3046\u306e\u306f\u7fd2\u3063\u305f\u65b9\u304c\u65e9\u305d\u3046\u3067\u3059\u3051\u3069\u3001OpenCV\u3042\u308b\u304b\u3089\u9762\u5012\u306a\u3093\u3067\u3084\u3089\u3093\u3060\u308d\u3046\u306a\u3002\n![test_vari_th.png](https://qiita-image-store.s3.amazonaws.com/0/51009/4780f1bd-a5a2-15fe-c0bf-efd169295988.png \"test_vari_th.png\")\n\n", "tags": ["\u753b\u50cf\u51e6\u7406", "Go", "golang"]}