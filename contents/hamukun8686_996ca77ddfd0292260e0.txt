{"context": " More than 1 year has passed since last update.100\u884c\u4ee5\u5185\u76ee\u6307\u3057\u3066\u66f8\u3044\u3066\u305f\u3089\n\u3044\u3064\u306e\u9593\u306b\u304b300\u884c\u3092\u8d85\u3048\u3066\u3044\u305f\n\n\nMain.cpp\n\n# include <Siv3D.hpp>\n\nImage CreateGradImage()\n{\n    Image image(640, 480);\n\n    for (int y = 0; y < 480; ++y)\n        for (int x = 0; x < 640; ++x)\n            image[y][x] = HSV(0, 0, (1.0 - (Vec2(x, y) - Window::Center()).length() / (Vec2(640, 480) / 2.0).length()) * 0.3);\n\n    return image;        \n}\n\nvoid DrawButton(const RectF& rect)\n{\n    RoundRect(rect, 10.0).drawFrame(5.0, Palette::Gray);\n    RoundRect(rect, 10.0).draw(rect.mouseOver ? rect.leftClicked ? Palette::White :  Palette::Darkgray : Palette::Dimgray);\n}\n\nvoid DrawButton(const RectF& rect, const LineString& line)\n{\n    DrawButton(rect);\n    line.drawCatmullRomSpline(2.0);\n}\n\nvoid DrawScore(int score)\n{\n    const Vec2 startPos = Window::Size() + Vec2(-50.0, -30.0);\n\n    for (int i = 0; i < score; ++i)\n    {\n        Ellipse(startPos + Vec2(0.0, -i * 5.0), 30.0, 15.0).draw(Palette::Lightgoldenrodyellow);\n        Ellipse(startPos + Vec2(0.0, -i * 5.0), 30.0, 15.0).drawFrame(1.0, 1.0, Palette::Darkgoldenrod);\n    }\n}\n\nvoid Main()\n{\n    using std::vector;\n    using std::array;\n    using std::function;\n\n    enum class JyankenState\n    {\n        Guu, Choki, Paa\n    };\n\n    enum class GameState\n    {\n        Undefined, Jyanken, Pon, Aikode, Syo, Win, Lose, Praise, GameOver\n    };\n\n    const Texture texture(CreateGradImage());\n    const Font font(30);\n    const Font jyankenFont(10);\n    const Vec2 fontPosCenter = Window::Center() - Vec2(0.0, 200.0);\n    const Vec2 enemyCenter = Window::Center() + Vec2(0.0, -50.0);\n    const double rouletteRadius = Window::Height() * 0.3;\n    const Vec2 jyankenFontPosCenter = enemyCenter + Vec2(0.0, 95.0);\n\n    JyankenState m_enemyJyankenState;\n    JyankenState m_playerJyankenState;\n    GameState gameState = GameState::Undefined;\n    GameState tGameState = gameState;\n    TimerMillisec m_timer;\n    m_timer.start();\n\n    const Vec2 size{90, 90};\n\n    RectF guuButton = RectF(size).setCenter(Window::Center() + Vec2(-Window::Width() * 0.2, Window::Height() * 0.35));\n    RectF chokiButton = RectF(size).setCenter(Window::Center() + Vec2( 0.0, Window::Height() * 0.35));\n    RectF paaButton = RectF(size).setCenter(Window::Center() + Vec2(Window::Width() * 0.2, Window::Height() * 0.35));\n\n    int coinNum = 10;\n    double rouletteRad = 0.0;\n    int roulettePos = 0;\n\n    struct JyankenButton\n    {\n        RectF rect;\n        JyankenState state;\n        LineString line;\n    };\n\n    array<JyankenButton, 3> jyankenButtons = \n    {\n        { { guuButton, JyankenState::Guu, LineString() },\n        { chokiButton, JyankenState::Choki, LineString() },\n        { paaButton, JyankenState::Paa, LineString() } }\n    };\n\n    vector<Vec2> guu =\n    {\n        { -0.361, 0.843 }, { -0.602, -0.259 }, { -0.292, -0.273 }, { -0.139, -0.407 },\n        { 0.102, -0.222 }, { 0.431, -0.171 }, { 0.542, -0.019 }, { 0.398, 0.838 }\n    };\n\n    vector<Vec2> choki =\n    {\n        { -0.361, 0.843 }, { -0.681, -0.671 }, { -0.477, -0.671 }, { -0.301, -0.204 },\n        { -0.199, -0.898 }, { -0.019, -0.968 }, { 0.023, -0.241 }, { 0.236, -0.301 },\n        { 0.542, -0.093 }, { 0.324, 0.81 }\n    };\n\n    vector<Vec2> paa =\n    {\n        { -0.361, 0.843 }, { -0.917, 0.134 }, { -0.824, 0 }, { -0.449, 0.343 },\n        { -0.56, -0.75 }, { -0.398, -0.829 }, { -0.273, -0.106 }, { -0.208, -0.963 },\n        { -0.037, -0.935 }, { -0.032, -0.148 }, { 0.097, -0.894 }, { 0.231, -0.866 },\n        { 0.236, -0.106 }, { 0.384, -0.713 }, { 0.505, -0.648 }, { 0.407, -0.014 },\n        { 0.301, 0.856 }\n    };\n\n    array<vector<Vec2>, 3> jyankenFigures = { guu, choki, paa };\n\n    array<LineString, 3> jyankenEnemyLines;\n\n    for (int i = 0; i < 3; ++i)\n    {\n        vector<Vec2> lineEnemy;\n        vector<Vec2> lineButton;\n\n        for (const auto& pos : jyankenFigures[i])\n        {\n            lineEnemy.push_back(pos * 100.0 + enemyCenter);\n            lineButton.push_back(pos * 40.0 + jyankenButtons[i].rect.center);\n        }\n\n        jyankenEnemyLines[i] = LineString(lineEnemy);\n        jyankenButtons[i].line = LineString(lineButton);\n    }\n\n    array<GameState, 3> resultArray =\n    {\n        GameState::Aikode, GameState::Win, GameState::Lose\n    };  \n\n    array < JyankenState, 3 > jyankenStrongerArray =\n    {\n        JyankenState::Paa, JyankenState::Guu, JyankenState::Choki\n    };\n\n    array<int, 12> rouletteArray = \n    {\n        20, 1, 2, 5, 2, 7, 3, 4, 3, 2, 2, 1\n    };\n\n    function<void(GameState nextState)> updateJyankenState = [&](GameState nextState)\n    {\n        if (AnyOf(jyankenButtons, [&](const JyankenButton& button){return button.rect.leftClicked; }))\n        {\n            for (const auto& button : jyankenButtons)\n                if (button.rect.leftClicked)\n                    m_playerJyankenState = button.state;\n\n            const double randomValue = Random(1.0);\n\n            const int playerState = static_cast<int>(m_playerJyankenState);\n\n            if (randomValue < 0.6)\n                m_enemyJyankenState = jyankenStrongerArray[playerState];\n            else if (randomValue < 0.8)\n                m_enemyJyankenState = jyankenStrongerArray[(playerState + 1) % 3];\n            else\n                m_enemyJyankenState = jyankenStrongerArray[(playerState + 2) % 3];\n\n            gameState = nextState;\n        }\n    };  \n\n    const double difRad = TwoPi / rouletteArray.size();\n\n    const double margin = difRad * 0.05;\n\n    function<void()> drawRoulette = [&]()\n    {\n        for (int i = 0; i < rouletteArray.size(); ++i)\n        {\n            const double startRad = difRad * i;\n\n            Circle(enemyCenter, rouletteRadius).drawArc(startRad + margin, difRad - 2.0 * margin, 30.0, 30.0, Palette::Gray);\n\n            font(rouletteArray[i]).drawCenter(enemyCenter + Circular(rouletteRadius, startRad + difRad * 0.5));\n        }\n    };\n\n    function<int(double)> drawRouletteWithLight = [&](double locateRad)\n    {\n        const int locatePos = locateRad / difRad;\n\n        const double startRad = difRad * locatePos;\n\n        Circle(enemyCenter, rouletteRadius).drawArc(startRad + margin, difRad - 2.0 * margin, 30.0, 30.0, Palette::White);\n\n        font(rouletteArray[locatePos]).drawCenter(enemyCenter + Circular(rouletteRadius, startRad + difRad * 0.5), Palette::Gray);\n\n        return locatePos;\n    };\n\n    array<function<void()>, 9> stageFunctions = \n    {[&]()\n        {\n            jyankenFont(L\"\u30af\u30ea\u30c3\u30af\u3067\u3058\u3083\u3093\u3051\u3093\").drawCenter(jyankenFontPosCenter);\n\n            if (Input::MouseL.clicked && coinNum >= 1)\n            {\n                --coinNum;\n\n                gameState = GameState::Jyanken;\n            }\n        },[&]()\n        {\n            jyankenFont(L\"\u3058\u3083\u3093\u3051\u3093\u2026\").drawCenter(jyankenFontPosCenter);\n\n            updateJyankenState(GameState::Pon);\n\n            jyankenEnemyLines[Random(2)].drawCatmullRomSpline(5.0);\n        },[&]()\n        {\n            jyankenFont(L\"\u307d\u3093\uff01\").drawCenter(jyankenFontPosCenter);\n\n            jyankenEnemyLines[static_cast<int>(m_enemyJyankenState)].drawCatmullRomSpline(5.0);\n\n            if (m_timer.elapsed() > 500.0)\n            {\n                const int result = (3 + static_cast<int>(m_playerJyankenState) - static_cast<int>(m_enemyJyankenState)) % 3;\n\n                gameState = resultArray[result];\n            }\n        },[&]()\n        {\n            jyankenFont(L\"\u3042\u3044\u3053\u3067\u2026\").drawCenter(jyankenFontPosCenter);\n\n            updateJyankenState(GameState::Syo);\n\n            jyankenEnemyLines[Random(2)].drawCatmullRomSpline(5.0);\n        },[&]()\n        {\n            jyankenFont(L\"\u3057\u3087\uff01\").drawCenter(jyankenFontPosCenter);\n\n            jyankenEnemyLines[static_cast<int>(m_enemyJyankenState)].drawCatmullRomSpline(5.0);\n\n            if (m_timer.elapsed() > 500.0)\n            {\n                const int result = (3 + static_cast<int>(m_playerJyankenState)-static_cast<int>(m_enemyJyankenState)) % 3;\n\n                gameState = resultArray[result];\n            }\n        },[&]()\n        {\n            jyankenFont(L\"\u30ba\u30b3\u30fc\").drawCenter(jyankenFontPosCenter);\n\n            if (Input::MouseL.clicked)\n            {\n                gameState = coinNum == 0 ? GameState::GameOver : GameState::Undefined;\n            }\n        },[&]()\n        {\n            jyankenFont(L\"\u30d5\u30a3\u30fc\u30d0\u30fc\uff01\").drawCenter(jyankenFontPosCenter);\n\n            rouletteRad = Fmod(rouletteRad + Pi * 0.06, TwoPi);\n\n            roulettePos = drawRouletteWithLight(rouletteRad);\n\n            if (Input::MouseL.clicked || m_timer.elapsed() > 3000)\n            {\n                gameState = GameState::Praise;\n            }\n        }, [&]()\n        {\n            jyankenFont(L\"\u3084\u3063\u3074\uff5e\").drawCenter(jyankenFontPosCenter);\n\n            drawRouletteWithLight(rouletteRad);\n\n            if (Input::MouseL.clicked)\n            {\n                coinNum += rouletteArray[roulettePos];\n\n                rouletteRad = Random(TwoPi);\n\n                gameState = GameState::Undefined;\n            }\n        }, [&]()\n        {\n            font(L\"GAME OVER\").drawCenter(Window::Center());\n        }\n    };  \n\n    while (System::Update())\n    {\n        texture.draw();\n\n        DrawScore(coinNum);\n\n        drawRoulette();\n\n        stageFunctions[static_cast<int>(gameState)]();\n\n        for (const auto& button : jyankenButtons) \n            DrawButton(button.rect, button.line);\n\n        if (tGameState != gameState)\n        {\n            m_timer.restart();\n\n            tGameState = gameState;\n        }\n    }\n}\n\n\n\n100\u884c\u4ee5\u5185\u76ee\u6307\u3057\u3066\u66f8\u3044\u3066\u305f\u3089\n\u3044\u3064\u306e\u9593\u306b\u304b300\u884c\u3092\u8d85\u3048\u3066\u3044\u305f\n\n![\u30b8\u30e3\u30f3\u30b1\u30f3\u30de\u30f3.png](https://qiita-image-store.s3.amazonaws.com/0/34295/a3ebecb9-b7cc-8ed0-1fc0-5ad9a9805e14.png)\n\n\n```cpp:Main.cpp\n\n# include <Siv3D.hpp>\n\nImage CreateGradImage()\n{\n\tImage image(640, 480);\n\n\tfor (int y = 0; y < 480; ++y)\n\t\tfor (int x = 0; x < 640; ++x)\n\t\t\timage[y][x] = HSV(0, 0, (1.0 - (Vec2(x, y) - Window::Center()).length() / (Vec2(640, 480) / 2.0).length()) * 0.3);\n\n\treturn image;\t\t \n}\n\nvoid DrawButton(const RectF& rect)\n{\n\tRoundRect(rect, 10.0).drawFrame(5.0, Palette::Gray);\n\tRoundRect(rect, 10.0).draw(rect.mouseOver ? rect.leftClicked ? Palette::White :  Palette::Darkgray : Palette::Dimgray);\n}\n\nvoid DrawButton(const RectF& rect, const LineString& line)\n{\n\tDrawButton(rect);\n\tline.drawCatmullRomSpline(2.0);\n}\n\nvoid DrawScore(int score)\n{\n\tconst Vec2 startPos = Window::Size() + Vec2(-50.0, -30.0);\n\n\tfor (int i = 0; i < score; ++i)\n\t{\n\t\tEllipse(startPos + Vec2(0.0, -i * 5.0), 30.0, 15.0).draw(Palette::Lightgoldenrodyellow);\n\t\tEllipse(startPos + Vec2(0.0, -i * 5.0), 30.0, 15.0).drawFrame(1.0, 1.0, Palette::Darkgoldenrod);\n\t}\n}\n\nvoid Main()\n{\n\tusing std::vector;\n\tusing std::array;\n\tusing std::function;\n\n\tenum class JyankenState\n\t{\n\t\tGuu, Choki, Paa\n\t};\n\n\tenum class GameState\n\t{\n\t\tUndefined, Jyanken, Pon, Aikode, Syo, Win, Lose, Praise, GameOver\n\t};\n\n\tconst Texture texture(CreateGradImage());\n\tconst Font font(30);\n\tconst Font jyankenFont(10);\n\tconst Vec2 fontPosCenter = Window::Center() - Vec2(0.0, 200.0);\n\tconst Vec2 enemyCenter = Window::Center() + Vec2(0.0, -50.0);\n\tconst double rouletteRadius = Window::Height() * 0.3;\n\tconst Vec2 jyankenFontPosCenter = enemyCenter + Vec2(0.0, 95.0);\n\n\tJyankenState m_enemyJyankenState;\n\tJyankenState m_playerJyankenState;\n\tGameState gameState = GameState::Undefined;\n\tGameState tGameState = gameState;\n\tTimerMillisec m_timer;\n\tm_timer.start();\n\n\tconst Vec2 size{90, 90};\n\n\tRectF guuButton = RectF(size).setCenter(Window::Center() + Vec2(-Window::Width() * 0.2, Window::Height() * 0.35));\n\tRectF chokiButton = RectF(size).setCenter(Window::Center() + Vec2( 0.0, Window::Height() * 0.35));\n\tRectF paaButton = RectF(size).setCenter(Window::Center() + Vec2(Window::Width() * 0.2, Window::Height() * 0.35));\n\n\tint coinNum = 10;\n\tdouble rouletteRad = 0.0;\n\tint roulettePos = 0;\n\n\tstruct JyankenButton\n\t{\n\t\tRectF rect;\n\t\tJyankenState state;\n\t\tLineString line;\n\t};\n\n\tarray<JyankenButton, 3> jyankenButtons = \n\t{\n\t\t{ { guuButton, JyankenState::Guu, LineString() },\n\t\t{ chokiButton, JyankenState::Choki, LineString() },\n\t\t{ paaButton, JyankenState::Paa, LineString() } }\n\t};\n\n\tvector<Vec2> guu =\n\t{\n\t\t{ -0.361, 0.843 }, { -0.602, -0.259 }, { -0.292, -0.273 }, { -0.139, -0.407 },\n\t\t{ 0.102, -0.222 }, { 0.431, -0.171 }, { 0.542, -0.019 }, { 0.398, 0.838 }\n\t};\n\n\tvector<Vec2> choki =\n\t{\n\t\t{ -0.361, 0.843 }, { -0.681, -0.671 }, { -0.477, -0.671 }, { -0.301, -0.204 },\n\t\t{ -0.199, -0.898 }, { -0.019, -0.968 }, { 0.023, -0.241 }, { 0.236, -0.301 },\n\t\t{ 0.542, -0.093 }, { 0.324, 0.81 }\n\t};\n\n\tvector<Vec2> paa =\n\t{\n\t\t{ -0.361, 0.843 }, { -0.917, 0.134 }, { -0.824, 0 }, { -0.449, 0.343 },\n\t\t{ -0.56, -0.75 }, { -0.398, -0.829 }, { -0.273, -0.106 }, { -0.208, -0.963 },\n\t\t{ -0.037, -0.935 }, { -0.032, -0.148 }, { 0.097, -0.894 }, { 0.231, -0.866 },\n\t\t{ 0.236, -0.106 }, { 0.384, -0.713 }, { 0.505, -0.648 }, { 0.407, -0.014 },\n\t\t{ 0.301, 0.856 }\n\t};\n\n\tarray<vector<Vec2>, 3> jyankenFigures = { guu, choki, paa };\n\n\tarray<LineString, 3> jyankenEnemyLines;\n\n\tfor (int i = 0; i < 3; ++i)\n\t{\n\t\tvector<Vec2> lineEnemy;\n\t\tvector<Vec2> lineButton;\n\n\t\tfor (const auto& pos : jyankenFigures[i])\n\t\t{\n\t\t\tlineEnemy.push_back(pos * 100.0 + enemyCenter);\n\t\t\tlineButton.push_back(pos * 40.0 + jyankenButtons[i].rect.center);\n\t\t}\n\n\t\tjyankenEnemyLines[i] = LineString(lineEnemy);\n\t\tjyankenButtons[i].line = LineString(lineButton);\n\t}\n\n\tarray<GameState, 3> resultArray =\n\t{\n\t\tGameState::Aikode, GameState::Win, GameState::Lose\n\t};\t\n\n\tarray < JyankenState, 3 > jyankenStrongerArray =\n\t{\n\t\tJyankenState::Paa, JyankenState::Guu, JyankenState::Choki\n\t};\n\n\tarray<int, 12> rouletteArray = \n\t{\n\t\t20, 1, 2, 5, 2, 7, 3, 4, 3, 2, 2, 1\n\t};\n\n\tfunction<void(GameState nextState)> updateJyankenState = [&](GameState nextState)\n\t{\n\t\tif (AnyOf(jyankenButtons, [&](const JyankenButton& button){return button.rect.leftClicked; }))\n\t\t{\n\t\t\tfor (const auto& button : jyankenButtons)\n\t\t\t\tif (button.rect.leftClicked)\n\t\t\t\t\tm_playerJyankenState = button.state;\n\n\t\t\tconst double randomValue = Random(1.0);\n\n\t\t\tconst int playerState = static_cast<int>(m_playerJyankenState);\n\n\t\t\tif (randomValue < 0.6)\n\t\t\t\tm_enemyJyankenState = jyankenStrongerArray[playerState];\n\t\t\telse if (randomValue < 0.8)\n\t\t\t\tm_enemyJyankenState = jyankenStrongerArray[(playerState + 1) % 3];\n\t\t\telse\n\t\t\t\tm_enemyJyankenState = jyankenStrongerArray[(playerState + 2) % 3];\n\n\t\t\tgameState = nextState;\n\t\t}\n\t};\t\n\n\tconst double difRad = TwoPi / rouletteArray.size();\n\n\tconst double margin = difRad * 0.05;\n\n\tfunction<void()> drawRoulette = [&]()\n\t{\n\t\tfor (int i = 0; i < rouletteArray.size(); ++i)\n\t\t{\n\t\t\tconst double startRad = difRad * i;\n\n\t\t\tCircle(enemyCenter, rouletteRadius).drawArc(startRad + margin, difRad - 2.0 * margin, 30.0, 30.0, Palette::Gray);\n\n\t\t\tfont(rouletteArray[i]).drawCenter(enemyCenter + Circular(rouletteRadius, startRad + difRad * 0.5));\n\t\t}\n\t};\n\n\tfunction<int(double)> drawRouletteWithLight = [&](double locateRad)\n\t{\n\t\tconst int locatePos = locateRad / difRad;\n\n\t\tconst double startRad = difRad * locatePos;\n\n\t\tCircle(enemyCenter, rouletteRadius).drawArc(startRad + margin, difRad - 2.0 * margin, 30.0, 30.0, Palette::White);\n\n\t\tfont(rouletteArray[locatePos]).drawCenter(enemyCenter + Circular(rouletteRadius, startRad + difRad * 0.5), Palette::Gray);\n\n\t\treturn locatePos;\n\t};\n\n\tarray<function<void()>, 9> stageFunctions = \n\t{[&]()\n\t\t{\n\t\t\tjyankenFont(L\"\u30af\u30ea\u30c3\u30af\u3067\u3058\u3083\u3093\u3051\u3093\").drawCenter(jyankenFontPosCenter);\n\n\t\t\tif (Input::MouseL.clicked && coinNum >= 1)\n\t\t\t{\n\t\t\t\t--coinNum;\n\n\t\t\t\tgameState = GameState::Jyanken;\n\t\t\t}\n\t\t},[&]()\n\t\t{\n\t\t\tjyankenFont(L\"\u3058\u3083\u3093\u3051\u3093\u2026\").drawCenter(jyankenFontPosCenter);\n\n\t\t\tupdateJyankenState(GameState::Pon);\n\n\t\t\tjyankenEnemyLines[Random(2)].drawCatmullRomSpline(5.0);\n\t\t},[&]()\n\t\t{\n\t\t\tjyankenFont(L\"\u307d\u3093\uff01\").drawCenter(jyankenFontPosCenter);\n\t\t\t\n\t\t\tjyankenEnemyLines[static_cast<int>(m_enemyJyankenState)].drawCatmullRomSpline(5.0);\n\n\t\t\tif (m_timer.elapsed() > 500.0)\n\t\t\t{\n\t\t\t\tconst int result = (3 + static_cast<int>(m_playerJyankenState) - static_cast<int>(m_enemyJyankenState)) % 3;\n\n\t\t\t\tgameState = resultArray[result];\n\t\t\t}\n\t\t},[&]()\n\t\t{\n\t\t\tjyankenFont(L\"\u3042\u3044\u3053\u3067\u2026\").drawCenter(jyankenFontPosCenter);\n\n\t\t\tupdateJyankenState(GameState::Syo);\n\n\t\t\tjyankenEnemyLines[Random(2)].drawCatmullRomSpline(5.0);\n\t\t},[&]()\n\t\t{\n\t\t\tjyankenFont(L\"\u3057\u3087\uff01\").drawCenter(jyankenFontPosCenter);\n\n\t\t\tjyankenEnemyLines[static_cast<int>(m_enemyJyankenState)].drawCatmullRomSpline(5.0);\n\n\t\t\tif (m_timer.elapsed() > 500.0)\n\t\t\t{\n\t\t\t\tconst int result = (3 + static_cast<int>(m_playerJyankenState)-static_cast<int>(m_enemyJyankenState)) % 3;\n\n\t\t\t\tgameState = resultArray[result];\n\t\t\t}\n\t\t},[&]()\n\t\t{\n\t\t\tjyankenFont(L\"\u30ba\u30b3\u30fc\").drawCenter(jyankenFontPosCenter);\n\n\t\t\tif (Input::MouseL.clicked)\n\t\t\t{\n\t\t\t\tgameState = coinNum == 0 ? GameState::GameOver : GameState::Undefined;\n\t\t\t}\n\t\t},[&]()\n\t\t{\n\t\t\tjyankenFont(L\"\u30d5\u30a3\u30fc\u30d0\u30fc\uff01\").drawCenter(jyankenFontPosCenter);\n\n\t\t\trouletteRad = Fmod(rouletteRad + Pi * 0.06, TwoPi);\n\n\t\t\troulettePos = drawRouletteWithLight(rouletteRad);\n\n\t\t\tif (Input::MouseL.clicked || m_timer.elapsed() > 3000)\n\t\t\t{\n\t\t\t\tgameState = GameState::Praise;\n\t\t\t}\n\t\t}, [&]()\n\t\t{\n\t\t\tjyankenFont(L\"\u3084\u3063\u3074\uff5e\").drawCenter(jyankenFontPosCenter);\n\n\t\t\tdrawRouletteWithLight(rouletteRad);\n\n\t\t\tif (Input::MouseL.clicked)\n\t\t\t{\n\t\t\t\tcoinNum += rouletteArray[roulettePos];\n\n\t\t\t\trouletteRad = Random(TwoPi);\n\n\t\t\t\tgameState = GameState::Undefined;\n\t\t\t}\n\t\t}, [&]()\n\t\t{\n\t\t\tfont(L\"GAME OVER\").drawCenter(Window::Center());\n\t\t}\n\t};\t\n\n\twhile (System::Update())\n\t{\n\t\ttexture.draw();\n\n\t\tDrawScore(coinNum);\n\n\t\tdrawRoulette();\n\n\t\tstageFunctions[static_cast<int>(gameState)]();\n\n\t\tfor (const auto& button : jyankenButtons) \n\t\t\tDrawButton(button.rect, button.line);\n\n\t\tif (tGameState != gameState)\n\t\t{\n\t\t\tm_timer.restart();\n\n\t\t\ttGameState = gameState;\n\t\t}\n\t}\n}\n\n```\n", "tags": ["Siv3DMay2014"]}