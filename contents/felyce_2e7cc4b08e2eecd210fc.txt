{"context": "\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306b\u7a7a\u767d\u304c\u3042\u308b\u306e\u3067\u30fb\u30fb\u30fb\n\nDjango 1.10.4\nPython 3.5.2\n\n\n\u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\nDjango\u3067\u306fForm\u95a2\u4fc2\u306eAPI\u306f\u5272\u3068\u624b\u539a\u3044\u306e\u3067\u3059\u304c\u3001\u4e00\u3064\u306e\u30d5\u30a9\u30fc\u30e0\u306e\u4e2d\u3067\u8907\u6570\u306e\u30e2\u30c7\u30eb\u3092\u7de8\u96c6\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u6025\u306b\u9762\u5012\u5ea6\u304c\u4e0a\u304c\u308a\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u306a\u304c\u3089\u624b\u65e9\u304f\u305d\u306e\u8fba\u306e\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u524d\u306e\u8a18\u4e8b\u306e\u7d9a\u304d\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\ndjango-extra-views\npip install django-extra-views\n\n\n\u4f7f\u3044\u65b9\ndjango extra views\u306f\u30d5\u30a9\u30fc\u30e0\u30af\u30e9\u30b9\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u884c\u3051\u308b\u306e\u3067\u3001\u305d\u3046\u3057\u307e\u3059\u3002\n\nCreateView\n\n\u30e2\u30c7\u30eb\n\nmodels.py\nfrom django.db import models\n\n\nclass Person(models.Model):\n\n    name = models.CharField(max_length=255)\n    age = models.IntegerField(default=25) # 25\u6b73\u306b\u623b\u308a\u305f\u3044\n\n\nclass Car(models.Model):\n\n    owner = models.ForeignKey(Person)\n    color = models.CharField(max_length=10)\n\n\n\n\nviews.py\n\nviews.py\nfrom extra_views import CreateWithInlinesView, InlineFormSet\n\n\nclass CarInlineFormSet(InlineFormSet):\n    model = Car\n    fields = (\"color\", )\n    can_delete = False  # create view \u3067\u306f\u524a\u9664\u4e0d\u8981\n\n\nclass PersonCarCreateFormsetView(CreateWithInlinesView):\n    model = Person\n    fields = (\"name\", \"age\")  # self.model \u306e fields\n    inlines = [CarInlineFormSet, ]\n    template_name = \"person_formset.html\"\n    success_url = \"/\"\n\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\nperson_formset.html\n{% extends \"base.html\" %}\n\n{% block content %}\n\n    <form method=\"post\">\n        {% csrf_token %}\n        <table>\n            {{ form.as_table }}\n        </table>\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 {# \u30a4\u30f3\u30e9\u30a4\u30f3\u306finlines\u3068\u3044\u3046\u5909\u6570\u306b\u30ea\u30b9\u30c8\u3067\u5165\u3063\u3066\u3044\u308b #}\n        <p>Car Color</p>\n        <table>\n            {% for form in inlines %}\n                {{ form.as_table }}\n            {% endfor %}\n        </table>\n        <button type=\"submit\">save</button>\n    </form>\n\n{% endblock %}\n\n\n\nUpdateView\n\n\u30e2\u30c7\u30eb\n\u540c\u3058\n\nviews.py\n\nviews.py\nfrom extra_views import InlineFormSet, UpdateWithInlinesView\n\nclass CarInlineFormSetCanDelete(InlineFormSet):\n    model = Car\n    fields = (\"color\", )\n    can_delete = True\n\nclass PersonCarUpdateFormsetView(UpdateWithInlinesView):\n    model = Person\n    fields = (\"name\", \"age\")\n    inlines = [CarInlineFormSetCanDelete, ]\n    template_name = \"person_formset.html\"\n    success_url = \"/\"\n\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\u540c\u3058\n\n\u307e\u3068\u3081\n\u306a\u304b\u306a\u304b\u4fbf\u5229\u3002\n\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306b\u7a7a\u767d\u304c\u3042\u308b\u306e\u3067\u30fb\u30fb\u30fb\n\n- Django 1.10.4\n- Python 3.5.2\n\n# \u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\nDjango\u3067\u306fForm\u95a2\u4fc2\u306eAPI\u306f\u5272\u3068\u624b\u539a\u3044\u306e\u3067\u3059\u304c\u3001\u4e00\u3064\u306e\u30d5\u30a9\u30fc\u30e0\u306e\u4e2d\u3067\u8907\u6570\u306e\u30e2\u30c7\u30eb\u3092\u7de8\u96c6\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u6025\u306b\u9762\u5012\u5ea6\u304c\u4e0a\u304c\u308a\u307e\u3059\u3002\n\n\u306a\u306e\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u306a\u304c\u3089\u624b\u65e9\u304f\u305d\u306e\u8fba\u306e\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u524d\u306e\u8a18\u4e8b\u306e\u7d9a\u304d\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\n\n[django-extra-views](https://django-extra-views.readthedocs.io/en/latest/index.html)\n\n``` bash\npip install django-extra-views\n```\n\n# \u4f7f\u3044\u65b9\n\ndjango extra views\u306f\u30d5\u30a9\u30fc\u30e0\u30af\u30e9\u30b9\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u884c\u3051\u308b\u306e\u3067\u3001\u305d\u3046\u3057\u307e\u3059\u3002\n\n## CreateView\n### \u30e2\u30c7\u30eb\n\n``` py3:models.py\nfrom django.db import models\n\n\nclass Person(models.Model):\n\n    name = models.CharField(max_length=255)\n    age = models.IntegerField(default=25) # 25\u6b73\u306b\u623b\u308a\u305f\u3044\n\n\nclass Car(models.Model):\n\n    owner = models.ForeignKey(Person)\n    color = models.CharField(max_length=10)\n\n```\n\n### views.py\n``` py3:views.py\nfrom extra_views import CreateWithInlinesView, InlineFormSet\n\n\nclass CarInlineFormSet(InlineFormSet):\n    model = Car\n    fields = (\"color\", )\n    can_delete = False  # create view \u3067\u306f\u524a\u9664\u4e0d\u8981\n\n\nclass PersonCarCreateFormsetView(CreateWithInlinesView):\n    model = Person\n    fields = (\"name\", \"age\")  # self.model \u306e fields\n    inlines = [CarInlineFormSet, ]\n    template_name = \"person_formset.html\"\n    success_url = \"/\"\n```\n\n### \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n``` jinja:person_formset.html\n{% extends \"base.html\" %}\n\n{% block content %}\n\n    <form method=\"post\">\n        {% csrf_token %}\n        <table>\n            {{ form.as_table }}\n        </table>\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 {# \u30a4\u30f3\u30e9\u30a4\u30f3\u306finlines\u3068\u3044\u3046\u5909\u6570\u306b\u30ea\u30b9\u30c8\u3067\u5165\u3063\u3066\u3044\u308b #}\n        <p>Car Color</p>\n        <table>\n            {% for form in inlines %}\n                {{ form.as_table }}\n            {% endfor %}\n        </table>\n        <button type=\"submit\">save</button>\n    </form>\n\n{% endblock %}\n```\n\n## UpdateView\n### \u30e2\u30c7\u30eb\n\u540c\u3058\n\n### views.py\n```py3:views.py\nfrom extra_views import InlineFormSet, UpdateWithInlinesView\n\nclass CarInlineFormSetCanDelete(InlineFormSet):\n    model = Car\n    fields = (\"color\", )\n    can_delete = True\n\nclass PersonCarUpdateFormsetView(UpdateWithInlinesView):\n    model = Person\n    fields = (\"name\", \"age\")\n    inlines = [CarInlineFormSetCanDelete, ]\n    template_name = \"person_formset.html\"\n    success_url = \"/\"\n```\n\n### \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\u540c\u3058\n\n# \u307e\u3068\u3081\n\n\u306a\u304b\u306a\u304b\u4fbf\u5229\u3002\n", "tags": ["Django", "Python"]}