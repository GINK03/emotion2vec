{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nSpring Boot + Apache Wicket \u306f\u3067\u304d\u3066\u304d\u305f\u611f\u304c\u3042\u308b\u306e\u3067\u3001Vaadin\u306b\u3082\u6311\u6226\u3057\u3066\u307f\u308b\u3002\n\nVaadin4Spring\nSpring Boot + Vaddin \u306e\u5148\u99c6\u3068\u3057\u3066\u3001peholmst/vaadin4spring\u304c\u3042\u308b\u3002\u307e\u305a\u306f\u3053\u308c\u3092\u4f7f\u308f\u305b\u3066\u3082\u3089\u3046\u3002\nREADME.md\u306e\u901a\u308a\u306b\u3001\u307e\u305a\u3001SPRING INITIALIZR\u3067\u3001Web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u6b21\u306b\u3001pom.xml\u306edependencies\u306bspring-boot-vaadin, vaadin-themes, vaadin-client-compiled\u3092\u767b\u9332\u3059\u308b\n<!-- Vaadin4Spring -->\n<!-- \u8a18\u4e8b\u306e\u57f7\u7b46\u6642\u70b9\u3067spring-boot-vaadin 0.0.3.1\u306evaadin\u306f7.3.6\u306a\u306e\u3067\u3001\u5f8c\u307b\u3069\u5b9f\u884c\u6642\u306b\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30a2\u30e9\u30fc\u30c8\u304c\u767a\u751f\u3059\u308b\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5408\u308f\u305b\u305f\u3044\u3068\u304d\u306f\u8abf\u6574\u3059\u308b -->\n<dependency>\n  <groupId>org.vaadin.spring</groupId>\n  <artifactId>spring-boot-vaadin</artifactId>\n  <version>0.0.3.1</version>\n</dependency>\n<dependency>\n  <groupId>com.vaadin</groupId>\n  <artifactId>vaadin-themes</artifactId>\n  <version>7.3.9</version>\n</dependency>\n<dependency>\n  <groupId>com.vaadin</groupId>\n  <artifactId>vaadin-client-compiled</artifactId>\n  <version>7.3.9</version>\n</dependency>\n\n\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u4f5c\u3063\u3066\u307f\u308b\nVaadin\u306eWiki\u306bCreating a simple login view\u3068\u3044\u3046\u8a18\u4e8b\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u53c2\u8003\u306b\u3057\u3001\u7c21\u5358\u306a\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\u753b\u9762\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306eMainUI\u30af\u30e9\u30b9\u3001\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u8868\u793a\u3059\u308bLoginView\u30af\u30e9\u30b9\u3001\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u753b\u9762\u3092\u8868\u793a\u3059\u308bLoginedView\u30af\u30e9\u30b9\u306e3\u7a2e\u985e\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nMainUI\n\u4ee5\u4e0b\u3001Wiki\u306eSimpleLoginUI\u3092\u5f15\u7528\u3057\u6539\u5909\u3057\u3066\u3044\u308b\u3002\npackage com.example.ui;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.vaadin.spring.VaadinUI;\nimport org.vaadin.spring.navigator.SpringViewProvider;\n\nimport com.vaadin.annotations.Theme;\nimport com.vaadin.navigator.Navigator;\nimport com.vaadin.navigator.ViewChangeListener;\nimport com.vaadin.server.VaadinRequest;\nimport com.vaadin.ui.UI;\n\n@Theme(\"valo\")\n@VaadinUI\npublic class MainUI extends UI {\n\n  @Autowired\n  private SpringViewProvider viewProvider;\n\n  @Override\n  protected void init(VaadinRequest request) {\n    Navigator navigator = new Navigator(this, this);\n    navigator.addProvider(viewProvider);\n    navigator.addViewChangeListener(new ViewChangeListener() {\n\n      @Override\n      public boolean beforeViewChange(ViewChangeEvent event) {\n\n        boolean isLoggedIn = getSession().getAttribute(\"user\") != null;\n        boolean isLoginView = event.getNewView() instanceof LoginView;\n\n        if (!isLoggedIn && !isLoginView) {\n          getNavigator().navigateTo(LoginView.NAME);\n          return false;\n        } else if (isLoggedIn && isLoginView) {\n          return false;\n        }\n        return true;\n      }\n\n      @Override\n      public void afterViewChange(ViewChangeEvent event) {\n\n      }\n    });\n    setNavigator(navigator);\n  }\n}\n\n@VaadinUI\u3067\u3001URL\u3067\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306aUI\u3067\u3042\u308b\u3053\u3068\u3092\u8a2d\u5b9a\u3002Vaadin\u3067\u306f\u30da\u30fc\u30b8\u9077\u79fb\u306fNavigator\u3067\u884c\u3046\u304c\u3001\u3053\u308c\u3092\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u7ba1\u7406\u3059\u308b\u305f\u3081\u306eSpringViewProvider\u3092Inject\u3059\u308b\u3002\n@Theme(\"valo\")\u3067\u3001Vaadin\u306e\u7dba\u9e97\u306aCSS\u30c6\u30fc\u30de\u3067\u3042\u308bValo\u3092\u5229\u7528\u3057\u3066\u304f\u308c\u308b\u3002\n\nLoginView\n\u4ee5\u4e0b\u3001Wiki\u306eSimpleLoginView\u3092\u5f15\u7528\u3057\u6539\u5909\u3057\u3066\u3044\u308b\u3002\npackage com.example.ui;\n\nimport org.vaadin.spring.UIScope;\nimport org.vaadin.spring.navigator.VaadinView;\n\nimport com.vaadin.annotations.Theme;\nimport com.vaadin.data.validator.AbstractValidator;\nimport com.vaadin.data.validator.EmailValidator;\nimport com.vaadin.navigator.View;\nimport com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;\nimport com.vaadin.shared.ui.MarginInfo;\nimport com.vaadin.ui.Alignment;\nimport com.vaadin.ui.Button;\nimport com.vaadin.ui.CustomComponent;\nimport com.vaadin.ui.PasswordField;\nimport com.vaadin.ui.TextField;\nimport com.vaadin.ui.VerticalLayout;\nimport com.vaadin.ui.themes.Reindeer;\n\n@UIScope\n@VaadinView(name = LoginView.NAME)\npublic class LoginView extends CustomComponent implements View {\n\n  public static final String NAME = \"\";\n\n  private final TextField user;\n\n  private final PasswordField password;\n\n  private final Button loginButton;\n\n  public LoginView() {\n    setSizeFull();\n\n    user = new TextField(\"\u30e6\u30fc\u30b6\u30fc\u540d:\");\n    user.setWidth(\"300px\");\n    user.setRequired(true);\n    user.setInputPrompt(\"\u4f8b\uff1auser@example.com\");\n    user.addValidator(new EmailValidator(\"\u30e6\u30fc\u30b6\u540d\u304b\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\"));\n    user.setInvalidAllowed(false);\n\n    password = new PasswordField(\"\u30d1\u30b9\u30ef\u30fc\u30c9:\");\n    password.setWidth(\"300px\");\n    password.addValidator(new PasswordValidator());\n    password.setRequired(true);\n    password.setValue(\"\");\n    password.setNullRepresentation(\"\");\n\n    loginButton = new Button(\"\u30ed\u30b0\u30a4\u30f3\", e -> {\n      if (!user.isValid() || !password.isValid()) {\n        return;\n      }\n\n      String username = user.getValue();\n      String password = this.password.getValue();\n\n      boolean isValid = username.equals(\"test@test.com\")\n                        && password.equals(\"passw0rd\");\n\n      if (isValid) {\n        getSession().setAttribute(\"user\", username);\n        getUI().getNavigator().navigateTo(LoginedView.NAME);\n      } else {\n        this.password.setValue(null);\n        this.password.focus();\n      }\n    });\n\n    VerticalLayout fields = new VerticalLayout(user, password, loginButton);\n    fields.setCaption(\"\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044 (test@test.com/passw0rd)\");\n    fields.setSpacing(true);\n    fields.setMargin(new MarginInfo(true, true, true, false));\n    fields.setSizeUndefined();\n\n    VerticalLayout viewLayout = new VerticalLayout(fields);\n    viewLayout.setSizeFull();\n    viewLayout.setComponentAlignment(fields, Alignment.MIDDLE_CENTER);\n    viewLayout.setStyleName(Reindeer.LAYOUT_BLUE);\n    setCompositionRoot(viewLayout);\n  }\n\n  @Override\n  public void enter(ViewChangeEvent event) {\n    user.focus();\n  }\n\n  private static final class PasswordValidator extends AbstractValidator<String> {\n\n    public PasswordValidator() {\n      super(\"\u30e6\u30fc\u30b6\u540d\u304b\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\");\n    }\n\n    @Override\n    protected boolean isValidValue(String value) {\n      return value != null ? value.length() >= 8 && value.matches(\".*\\\\d.*\") : false;\n    }\n\n    @Override\n    public Class<String> getType() {\n      return String.class;\n    }\n  }\n\n}\n\n\u3061\u3087\u3063\u3068\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u3066\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u308b\u611f\u304c\u3042\u308b\u3051\u3069\u3001\u539f\u5247\u7684\u306b\u306fTextField\u3084Button\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u8a2d\u5b9a\u3092\u4ed8\u3051\u52a0\u3048\u3066\u3042\u308b\u3060\u3051\u3002\n@UIScope\u3067\u30b9\u30b3\u30fc\u30d7\u3092\u8a2d\u5b9a\u3059\u308b\u3002@VaadinView\u306f\u3001\u30da\u30fc\u30b8\u3068\u306a\u308bView\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u540d\u79f0\u3002\uff08Vaadin\u7684\u306b\u3001\u521d\u671f\u30da\u30fc\u30b8\u306f\u7a7a\u6587\u5b57\u3067\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044...\uff1f\u3061\u3087\u3063\u3068\u81ea\u4fe1\u306a\u3044\uff09\u3002\n\u30dc\u30bf\u30f3\u306e\u30ea\u30b9\u30ca\u30fc\u306b\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u3048\u308b\u306e\u304c\u3059\u3063\u304d\u308a\u3057\u3066\u3066\u7d20\u6575\u3002\n\nLoginedView\n\u4ee5\u4e0b\u3001Wiki\u306eSimpleLoginMainView\u3092\u5f15\u7528\u3057\u6539\u5909\u3057\u3066\u3044\u308b\u3002\npackage com.example.ui;\n\nimport org.vaadin.spring.UIScope;\nimport org.vaadin.spring.navigator.VaadinView;\n\nimport com.vaadin.navigator.View;\nimport com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;\nimport com.vaadin.ui.Button;\nimport com.vaadin.ui.CssLayout;\nimport com.vaadin.ui.CustomComponent;\nimport com.vaadin.ui.Label;\n\n@UIScope\n@VaadinView(name = LoginedView.NAME)\npublic class LoginedView extends CustomComponent implements View {\n\n  public static final String NAME = \"LoginedView\";\n\n  private Label text = new Label();\n\n  private Button logout = new Button(\"\u30ed\u30b0\u30a2\u30a6\u30c8\", e -> {\n    getSession().setAttribute(\"user\", null);\n    getUI().getNavigator().navigateTo(NAME);\n  });\n\n  public LoginedView() {\n    setCompositionRoot(new CssLayout(text, logout));\n  }\n\n  @Override\n  public void enter(ViewChangeEvent event) {\n    String username = String.valueOf(getSession().getAttribute(\"user\"));\n    text.setValue(\"\u3088\u3046\u3053\u305d\u3001 \" + username);\n  }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\n\n\n\nVaadin\u3092\u4f7f\u3046\u3068\uff08Layout\u306e\u4f7f\u3044\u65b9\u306b\u6163\u308c\u304c\u5fc5\u8981\u305d\u3046\u3060\u3051\u3069\uff09HTML\u3092\u66f8\u304b\u305a\u306bWeb\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3057\u3066\u3044\u3051\u308b\u3002Spring4Vaadin\u3092\u4f7f\u3048\u3070\u3001Navigator\u306a\u3069\u306e\u9762\u5012\u306b\u306a\u308a\u304c\u3061\u306a\u8a2d\u5b9a\u3082\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u62fe\u3063\u3066\u81ea\u52d5\u8a2d\u5b9a\u3057\u3066\u304f\u308c\u308b\u3002\u6163\u308c\u3066\u304f\u308b\u3068\u723d\u5feb\u306b\u958b\u767a\u3067\u304d\u305d\u3046\u3060\u306a\u3042\u3002\n\u306a\u304a\u3001\u3053\u3053\u307e\u3067\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fgishi-yama/springboot-vaadin-sample/tree/61086783ec\u306bpush\u3057\u3066\u3042\u308b\u3002\n## \u306f\u3058\u3081\u306b\n\nSpring Boot + Apache Wicket \u306f\u3067\u304d\u3066\u304d\u305f\u611f\u304c\u3042\u308b\u306e\u3067\u3001Vaadin\u306b\u3082\u6311\u6226\u3057\u3066\u307f\u308b\u3002\n\n## Vaadin4Spring\n\nSpring Boot + Vaddin \u306e\u5148\u99c6\u3068\u3057\u3066\u3001[peholmst/vaadin4spring](https://github.com/peholmst/vaadin4spring)\u304c\u3042\u308b\u3002\u307e\u305a\u306f\u3053\u308c\u3092\u4f7f\u308f\u305b\u3066\u3082\u3089\u3046\u3002\n\nREADME.md\u306e\u901a\u308a\u306b\u3001\u307e\u305a\u3001[SPRING INITIALIZR](http://start.spring.io)\u3067\u3001Web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n\u6b21\u306b\u3001pom.xml\u306e`dependencies`\u306b`spring-boot-vaadin`, `vaadin-themes`, `vaadin-client-compiled`\u3092\u767b\u9332\u3059\u308b\n\n```xml\n<!-- Vaadin4Spring -->\n<!-- \u8a18\u4e8b\u306e\u57f7\u7b46\u6642\u70b9\u3067spring-boot-vaadin 0.0.3.1\u306evaadin\u306f7.3.6\u306a\u306e\u3067\u3001\u5f8c\u307b\u3069\u5b9f\u884c\u6642\u306b\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30a2\u30e9\u30fc\u30c8\u304c\u767a\u751f\u3059\u308b\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5408\u308f\u305b\u305f\u3044\u3068\u304d\u306f\u8abf\u6574\u3059\u308b -->\n<dependency>\n  <groupId>org.vaadin.spring</groupId>\n  <artifactId>spring-boot-vaadin</artifactId>\n  <version>0.0.3.1</version>\n</dependency>\n<dependency>\n  <groupId>com.vaadin</groupId>\n  <artifactId>vaadin-themes</artifactId>\n  <version>7.3.9</version>\n</dependency>\n<dependency>\n  <groupId>com.vaadin</groupId>\n  <artifactId>vaadin-client-compiled</artifactId>\n  <version>7.3.9</version>\n</dependency>\n```\n\n## \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u4f5c\u3063\u3066\u307f\u308b\n\nVaadin\u306eWiki\u306b[Creating a simple login view](https://vaadin.com/wiki/-/wiki/Main/Creating%20a%20simple%20login%20view)\u3068\u3044\u3046\u8a18\u4e8b\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u53c2\u8003\u306b\u3057\u3001\u7c21\u5358\u306a\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\n\u753b\u9762\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e`MainUI`\u30af\u30e9\u30b9\u3001\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u8868\u793a\u3059\u308b`LoginView`\u30af\u30e9\u30b9\u3001\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u753b\u9762\u3092\u8868\u793a\u3059\u308b`LoginedView`\u30af\u30e9\u30b9\u306e3\u7a2e\u985e\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n### MainUI\n\n\u4ee5\u4e0b\u3001Wiki\u306e`SimpleLoginUI`\u3092\u5f15\u7528\u3057\u6539\u5909\u3057\u3066\u3044\u308b\u3002\n\n```java\npackage com.example.ui;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.vaadin.spring.VaadinUI;\nimport org.vaadin.spring.navigator.SpringViewProvider;\n\nimport com.vaadin.annotations.Theme;\nimport com.vaadin.navigator.Navigator;\nimport com.vaadin.navigator.ViewChangeListener;\nimport com.vaadin.server.VaadinRequest;\nimport com.vaadin.ui.UI;\n\n@Theme(\"valo\")\n@VaadinUI\npublic class MainUI extends UI {\n\n  @Autowired\n  private SpringViewProvider viewProvider;\n\n  @Override\n  protected void init(VaadinRequest request) {\n    Navigator navigator = new Navigator(this, this);\n    navigator.addProvider(viewProvider);\n    navigator.addViewChangeListener(new ViewChangeListener() {\n\n      @Override\n      public boolean beforeViewChange(ViewChangeEvent event) {\n\n        boolean isLoggedIn = getSession().getAttribute(\"user\") != null;\n        boolean isLoginView = event.getNewView() instanceof LoginView;\n\n        if (!isLoggedIn && !isLoginView) {\n          getNavigator().navigateTo(LoginView.NAME);\n          return false;\n        } else if (isLoggedIn && isLoginView) {\n          return false;\n        }\n        return true;\n      }\n\n      @Override\n      public void afterViewChange(ViewChangeEvent event) {\n\n      }\n    });\n    setNavigator(navigator);\n  }\n}\n```\n\n`@VaadinUI`\u3067\u3001URL\u3067\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306aUI\u3067\u3042\u308b\u3053\u3068\u3092\u8a2d\u5b9a\u3002Vaadin\u3067\u306f\u30da\u30fc\u30b8\u9077\u79fb\u306f`Navigator`\u3067\u884c\u3046\u304c\u3001\u3053\u308c\u3092\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e`SpringViewProvider`\u3092Inject\u3059\u308b\u3002\n\n`@Theme(\"valo\")`\u3067\u3001Vaadin\u306e\u7dba\u9e97\u306aCSS\u30c6\u30fc\u30de\u3067\u3042\u308b[Valo](https://vaadin.com/valo)\u3092\u5229\u7528\u3057\u3066\u304f\u308c\u308b\u3002\n\n### LoginView\n\n\u4ee5\u4e0b\u3001Wiki\u306e`SimpleLoginView`\u3092\u5f15\u7528\u3057\u6539\u5909\u3057\u3066\u3044\u308b\u3002\n\n```java\npackage com.example.ui;\n\nimport org.vaadin.spring.UIScope;\nimport org.vaadin.spring.navigator.VaadinView;\n\nimport com.vaadin.annotations.Theme;\nimport com.vaadin.data.validator.AbstractValidator;\nimport com.vaadin.data.validator.EmailValidator;\nimport com.vaadin.navigator.View;\nimport com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;\nimport com.vaadin.shared.ui.MarginInfo;\nimport com.vaadin.ui.Alignment;\nimport com.vaadin.ui.Button;\nimport com.vaadin.ui.CustomComponent;\nimport com.vaadin.ui.PasswordField;\nimport com.vaadin.ui.TextField;\nimport com.vaadin.ui.VerticalLayout;\nimport com.vaadin.ui.themes.Reindeer;\n\n@UIScope\n@VaadinView(name = LoginView.NAME)\npublic class LoginView extends CustomComponent implements View {\n\n  public static final String NAME = \"\";\n\n  private final TextField user;\n\n  private final PasswordField password;\n\n  private final Button loginButton;\n\n  public LoginView() {\n    setSizeFull();\n\n    user = new TextField(\"\u30e6\u30fc\u30b6\u30fc\u540d:\");\n    user.setWidth(\"300px\");\n    user.setRequired(true);\n    user.setInputPrompt(\"\u4f8b\uff1auser@example.com\");\n    user.addValidator(new EmailValidator(\"\u30e6\u30fc\u30b6\u540d\u304b\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\"));\n    user.setInvalidAllowed(false);\n\n    password = new PasswordField(\"\u30d1\u30b9\u30ef\u30fc\u30c9:\");\n    password.setWidth(\"300px\");\n    password.addValidator(new PasswordValidator());\n    password.setRequired(true);\n    password.setValue(\"\");\n    password.setNullRepresentation(\"\");\n\n    loginButton = new Button(\"\u30ed\u30b0\u30a4\u30f3\", e -> {\n      if (!user.isValid() || !password.isValid()) {\n        return;\n      }\n\n      String username = user.getValue();\n      String password = this.password.getValue();\n\n      boolean isValid = username.equals(\"test@test.com\")\n                        && password.equals(\"passw0rd\");\n\n      if (isValid) {\n        getSession().setAttribute(\"user\", username);\n        getUI().getNavigator().navigateTo(LoginedView.NAME);\n      } else {\n        this.password.setValue(null);\n        this.password.focus();\n      }\n    });\n\n    VerticalLayout fields = new VerticalLayout(user, password, loginButton);\n    fields.setCaption(\"\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044 (test@test.com/passw0rd)\");\n    fields.setSpacing(true);\n    fields.setMargin(new MarginInfo(true, true, true, false));\n    fields.setSizeUndefined();\n\n    VerticalLayout viewLayout = new VerticalLayout(fields);\n    viewLayout.setSizeFull();\n    viewLayout.setComponentAlignment(fields, Alignment.MIDDLE_CENTER);\n    viewLayout.setStyleName(Reindeer.LAYOUT_BLUE);\n    setCompositionRoot(viewLayout);\n  }\n\n  @Override\n  public void enter(ViewChangeEvent event) {\n    user.focus();\n  }\n\n  private static final class PasswordValidator extends AbstractValidator<String> {\n\n    public PasswordValidator() {\n      super(\"\u30e6\u30fc\u30b6\u540d\u304b\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\");\n    }\n\n    @Override\n    protected boolean isValidValue(String value) {\n      return value != null ? value.length() >= 8 && value.matches(\".*\\\\d.*\") : false;\n    }\n\n    @Override\n    public Class<String> getType() {\n      return String.class;\n    }\n  }\n\n}\n```\n\n\u3061\u3087\u3063\u3068\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u3066\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u308b\u611f\u304c\u3042\u308b\u3051\u3069\u3001\u539f\u5247\u7684\u306b\u306f`TextField`\u3084`Button`\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u8a2d\u5b9a\u3092\u4ed8\u3051\u52a0\u3048\u3066\u3042\u308b\u3060\u3051\u3002\n\n`@UIScope`\u3067\u30b9\u30b3\u30fc\u30d7\u3092\u8a2d\u5b9a\u3059\u308b\u3002`@VaadinView`\u306f\u3001\u30da\u30fc\u30b8\u3068\u306a\u308bView\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u540d\u79f0\u3002\uff08Vaadin\u7684\u306b\u3001\u521d\u671f\u30da\u30fc\u30b8\u306f\u7a7a\u6587\u5b57\u3067\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044...\uff1f\u3061\u3087\u3063\u3068\u81ea\u4fe1\u306a\u3044\uff09\u3002\n\n\u30dc\u30bf\u30f3\u306e\u30ea\u30b9\u30ca\u30fc\u306b\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u3048\u308b\u306e\u304c\u3059\u3063\u304d\u308a\u3057\u3066\u3066\u7d20\u6575\u3002\n\n\n### LoginedView\n\n\u4ee5\u4e0b\u3001Wiki\u306e`SimpleLoginMainView`\u3092\u5f15\u7528\u3057\u6539\u5909\u3057\u3066\u3044\u308b\u3002\n\n```java\npackage com.example.ui;\n\nimport org.vaadin.spring.UIScope;\nimport org.vaadin.spring.navigator.VaadinView;\n\nimport com.vaadin.navigator.View;\nimport com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;\nimport com.vaadin.ui.Button;\nimport com.vaadin.ui.CssLayout;\nimport com.vaadin.ui.CustomComponent;\nimport com.vaadin.ui.Label;\n\n@UIScope\n@VaadinView(name = LoginedView.NAME)\npublic class LoginedView extends CustomComponent implements View {\n\n  public static final String NAME = \"LoginedView\";\n\n  private Label text = new Label();\n\n  private Button logout = new Button(\"\u30ed\u30b0\u30a2\u30a6\u30c8\", e -> {\n    getSession().setAttribute(\"user\", null);\n    getUI().getNavigator().navigateTo(NAME);\n  });\n\n  public LoginedView() {\n    setCompositionRoot(new CssLayout(text, logout));\n  }\n\n  @Override\n  public void enter(ViewChangeEvent event) {\n    String username = String.valueOf(getSession().getAttribute(\"user\"));\n    text.setValue(\"\u3088\u3046\u3053\u305d\u3001 \" + username);\n  }\n}\n```\n\n## \u5b9f\u884c\u7d50\u679c\n\n----\n\n![Spring_Boot+Vaadin_01a.png](https://qiita-image-store.s3.amazonaws.com/0/8064/c173ad7a-c72e-0d25-01c0-ff167c63feb9.png)\n\n----\n\n![Spring_Boot+Vaadin_01b.png](https://qiita-image-store.s3.amazonaws.com/0/8064/a3a98cbb-f149-6772-3e5d-54015946e261.png)\n\n---\n\nVaadin\u3092\u4f7f\u3046\u3068\uff08Layout\u306e\u4f7f\u3044\u65b9\u306b\u6163\u308c\u304c\u5fc5\u8981\u305d\u3046\u3060\u3051\u3069\uff09HTML\u3092\u66f8\u304b\u305a\u306bWeb\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3057\u3066\u3044\u3051\u308b\u3002Spring4Vaadin\u3092\u4f7f\u3048\u3070\u3001Navigator\u306a\u3069\u306e\u9762\u5012\u306b\u306a\u308a\u304c\u3061\u306a\u8a2d\u5b9a\u3082\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u62fe\u3063\u3066\u81ea\u52d5\u8a2d\u5b9a\u3057\u3066\u304f\u308c\u308b\u3002\u6163\u308c\u3066\u304f\u308b\u3068\u723d\u5feb\u306b\u958b\u767a\u3067\u304d\u305d\u3046\u3060\u306a\u3042\u3002\n\n\u306a\u304a\u3001\u3053\u3053\u307e\u3067\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[gishi-yama/springboot-vaadin-sample/tree/61086783ec](https://github.com/gishi-yama/springboot-vaadin-sample/tree/61086783ec8264f5347da8a3ca7efd22f5189be3)\u306bpush\u3057\u3066\u3042\u308b\u3002\n", "tags": ["spring-boot1.2.1", "vaadin7.3.9"]}