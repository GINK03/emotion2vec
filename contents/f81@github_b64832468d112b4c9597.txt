{"context": " More than 1 year has passed since last update.\u6700\u8fd1\u3001\u578b\u308a\uff08\u8a9e\u308a\uff09\u307e\u304f\u3063\u3066\u3044\u305f\u3051\u3069\u3001\u4eca\u56de\u306f\u5236\u5fa1\u69cb\u9020\u3060\u3088\u3002\nScala\u3067\u306f\u3069\u3093\u306a\u5236\u5fa1\u69cb\u9020\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\nScala\u306e\u5236\u5fa1\u69cb\u9020\n\u51e6\u7406\u3092\u3069\u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u304b\u3092\u6c7a\u3081\u308b\u3053\u3068\n\u5236\u5fa1\u69cb\u9020\u3092\u30b6\u30c3\u30af\u3057\u8a00\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u306fif\u3084for\u7b49\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nScala\u306e\u5236\u5fa1\u69cb\u9020\u4ee5\u4e0b\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nif\nfor\nwhile\ntry\nmatch\n\u95a2\u6570\u547c\u3073\u51fa\u3057\n\nJVM\u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u3089Java\u3068\u9055\u3044\u304c\u306a\u3044\u3068\u601d\u3044\u304d\u3084\n\u3084\u3063\u3071\u308a\u5225\u8a00\u8a9e\u306a\u306e\u3067\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u306d\u3002\u3002\n\u4eca\u56de\u306f\u5236\u5fa1\u69cb\u9020\u3068\u3042\u308f\u305b\u3066\u3001\u5909\u6570\u306e\u30b9\u30b3\u30fc\u30d7\u7b49\u306b\u3064\u3044\u3066\u3082\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nif\n\u9078\u629e\u69cb\u9020\u306e\u4ee3\u8868\u3067\u3059\u3002 if\u5f0f \u3068\u547c\u3073\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u8a18\u8ff0\u306f\u9055\u548c\u611f\u306a\u304f\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nIfTest1.scala\nimport java.io.File\n\nobject IfTest1 {\n\n  def main(args: Array[String]): Unit = {\n    var filename = \"config.txt\"\n\n    if (!args.isEmpty)\n      filename = args(0)\n\n    println(\"Filename:\" + filename)\n  }\n\n}\n\n\nif\u306e\u6761\u4ef6\u5f0f !args.isEmpty \u304c true \u306b\u6210\u3063\u305f\u5834\u5408\u3001\n\u3064\u307e\u308a\u30d1\u30e9\u30e1\u30fc\u30bf\u6307\u5b9a\u3067\u5b9f\u884c\u3057\u305f\u6642\u306b filename \u306e\u5024\u3092\u5165\u308c\u66ff\u3048\u307e\u3059\u3002\nif \u306e\u666e\u901a\u306a\u4f7f\u3044\u65b9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3067\u3082\u3088\u30fc\u304f\u898b\u308b\u3068\u3002\u3053\u308c\u30a4\u30b1\u3066\u306a\u3044\u3067\u3059\u3088\u306d\uff1f\n\u5909\u6570\u304c\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3057\u3001\u518d\u4ee3\u5165\u3057\u3066\u3044\u308b\u3057\u3002\n\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u4f8b\u3048\u3070 Java \u3060\u3068\u3001filename \u306e\u78ba\u5b9a\u51e6\u7406\u3092\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\n\u5207\u308a\u3060\u3059\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001Scala \u3067\u306e if \u306f\u5f0f\u306e\u305f\u3081\u3001\u5024\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\u3067\u306f if \u304c\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u3088\u3046\u3002\n\nIfTest1Refactor.scala\nimport java.io.File\n\nobject IfTest1Refactor {\n\n  def main(args: Array[String]): Unit = {\n    val filename = if (args.isEmpty) \"config.txt\" else args(0)\n\n    println(\"Filename:\" + filename)\n  }\n\n}\n\n\n\u5909\u6570 filename \u3092\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\n\u3057\u304b\u3082\u5024\u306e\u78ba\u5b9a\u51e6\u7406\u3092\u5909\u6570\u306e\u5ba3\u8a00\u3068\u5171\u306b1\u884c\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\nif \u3092\u4f7f\u3046\u3068\u3001\u5ba3\u8a00\u3068\u5024\u306e\u5b9a\u7fa9\u304c1\u7b87\u6240\u306b\u7e8f\u307e\u3063\u3066\u898b\u3084\u3059\u304f\u306a\u308a\u307e\u3057\u305f\u306d\u3002\n\nfor\n\u7e70\u8fd4\u69cb\u9020\u306e\u4ee3\u8868\u3067\u3059\u3002\u6240\u8b02\u30eb\u30fc\u30d7\u3063\u3066\u3084\u3064\u3067\u3059\u3002\nfor\u5f0f \u3068\u547c\u3073\u307e\u3059\u3002\n\u307e\u305a\u306f\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u304b\u3089\u3002\n\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nscala> val list = List(\"Brad Jones\", \"Steven Gerrard\", \"Daniel Agger\", \"Daniel Sturridge\")\nlist: List[java.lang.String] = List(Brad Jones, Steven Gerrard, Daniel Agger, Daniel Sturridge)\n\nscala> for (name <- list) { println(name) }\nBrad Jones\nSteven Gerrard\nDaniel Agger\nDaniel Sturridge\n\nJava \u306e\u62e1\u5f35 for \u6587\u3068\u4f3c\u3066\u3044\u307e\u3059\u306d\u3002\n\u3053\u3053\u304b\u3089 for \u5f0f\u306e\u30d1\u30ef\u30fc\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\nJava \u3068\u9055\u3063\u3066\u3001Scala \u3067\u306f\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u304c\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\nscala> for (name <- list if name.startsWith(\"Daniel\")) { println(name) }\nDaniel Agger\nDaniel Sturridge\n\nDaniel \u3067\u59cb\u307e\u308b\u6587\u5b57\u5217\u3060\u3051\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nJava \u3060\u3068 Commons Collections \u3092\u7528\u610f\u3057\u305f\u308a\u3067\u3001\u9762\u5012\u304f\u3055\u304f\u306a\u308a\u307e\u3059\u3002\n\u8a66\u3057\u306bCommons Collections \u3092\u4f7f\u3063\u3066\u4e0a\u306e\u30bd\u30fc\u30b9\u3068\n\u540c\u3058\u30e2\u30ce\u3092Java\u3067\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nJavaFiltering.java\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.apache.commons.collections.Predicate;\nimport org.apache.commons.collections.iterators.FilterIterator;\nimport org.apache.commons.lang3.StringUtils;\n\npublic class JavaFiltering {\n\n    public static void main(String[] args) {\n        final List<String> list = Arrays.asList(\"Brad Jones\", \"Steven Gerrard\",\n                \"Daniel Agger\", \"Daniel Sturridge\");\n\n        final Iterator<String> iterator = new FilterIterator(list.iterator(),\n                new Predicate() {\n\n                    @Override\n                    public boolean evaluate(Object object) {\n                        final String name = (String) object;\n                        return StringUtils.startsWith(name, \"Daniel\");\n                    }\n                });\n\n        while (iterator.hasNext()) {\n            System.out.println(iterator.next());\n        }\n    }\n\n}\n\n\nScala\u3060\u3068\u3053\u306e1\u884c\u3067\u3059\u304c\nfor (name <- list if name.startsWith(\"Daniel\")) { println(name) }\n\nJava\u3060\u3068\u3001\nfinal Iterator<String> iterator = new FilterIterator(list.iterator(),\n        new Predicate() {\n\n            @Override\n            public boolean evaluate(Object object) {\n                final String name = (String) object;\n                return StringUtils.startsWith(name, \"Daniel\");\n            }\n        });\n\nwhile (iterator.hasNext()) {\n    System.out.println(iterator.next());\n}\n\n\u306e\u3088\u3046\u306b\u3001 Predicate \u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u6761\u4ef6\u3092\u4f5c\u3063\u3066\n\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b Iterator \u4f5c\u3063\u305f\u308a\u3067\u304b\u306a\u308a\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u5b8c\u5168\u306b\u5197\u9577\u306b\u66f8\u3044\u3066\u306f\u3044\u307e\u3059\u3051\u3069\u306d\u3002\nScala \u306f\u7c21\u5358\u904e\u304e\u307e\u3059\uff01\n\n\u65b0\u3057\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u751f\u6210\n\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u306f\u7e70\u8fd4\u306e\u4e2d\u3067\u5024\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\n\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u7d50\u679c\u3092\u65b0\u3057\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\nscala> val daniels = for { name <- list if name.startsWith(\"Daniel\") } yield name\ndaniels: List[java.lang.String] = List(Daniel Agger, Daniel Sturridge)\n\nscala> for (name <- daniels) { println(name) }\nDaniel Agger\nDaniel Sturridge\n\n\u3053\u3053\u3067 yield \u304c\u767b\u5834\u3057\u3066\u3044\u307e\u3059\u3002\nfor \u306f\u623b\u308a\u5024\u304c\u306a\u3044\u3067\u3059\u304c\u3001yield \u3092\u4f7f\u3046\u3068\u6f14\u7b97\u7d50\u679c\u3092\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3057\u3066\n\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nwhile\n\u3053\u308c\u3082\u7e70\u8fd4\u69cb\u9020\u306e\u4ee3\u8868\u3067\u3059\u306d\u3002\nScala \u3067\u306e\u4f7f\u3044\u9053\u304c\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u306e\u3067\n\u30b5\u30e9\u30c3\u3068\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nwhile\u30eb\u30fc\u30d7\nscala> var count = 0;\ncount: Int = 0\n\nscala> while (count < 5) {\n     |   count += 1\n     |   println(count)\n     | }\n1\n2\n3\n4\n5\n\nwhile \u306e\u6761\u4ef6\u5f0f\u304c true \u3067\u3042\u308b\u9593\u3001\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\ndo-while \u30eb\u30fc\u30d7\n\u307e\u305a\u306f\u30b3\u30fc\u30c9\u304b\u3089\u3067\u3059\u3002\nscala> var count = 0;\ncount: Int = 0\n\nscala> do {\n     |   count += 1\n     |   println(count)\n     | } while (count < 5)\n1\n2\n3\n4\n5\n\nwhile \u3068 do-while \u306e\u9055\u3044\u306f\u3001\nwhile \u306f\u6761\u4ef6\u5f0f\u306e\u8a55\u4fa1\u3092\u5148\u306b\u3057\u307e\u3059\u3002\ndo-while \u306f\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u5148\u306b\u5b9f\u884c\u3057\u3001\u6761\u4ef6\u5f0f\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u30b9\u30b3\u30fc\u30d7\n\u5909\u6570\u306e\u751f\u5b58\u7bc4\u56f2\u3067\u3059\u306d\u3002\n\u5909\u6570\u306f\u57fa\u672c\u7684\u306b\u306f\u4e2d\u62ec\u5f27 {} \u5185\u3067\u306e\u307f\u751f\u5b58\u3067\u304d\u307e\u3059\u3002\n\u3042\u308b\u751f\u5b58\u7bc4\u56f2\u3067\u306f\u3001\u540c\u3058\u5909\u6570\u3092\u5ba3\u8a00\u3067\u304d\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u6b21\u306e\u5834\u5408\u306f\u3001\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002\nscala> {\n     |   val variable = \"a\"\n     |   val variable = \"b\"\n     | }\n<console>:10: error: variable is already defined as value variable\n                    val variable = \"b\"\n                        ^\n\n\u305d\u3057\u3066\u3001\u5916\u5074\u306e\u4e2d\u62ec\u5f27\u3067\u5ba3\u8a00\u3057\u305f\u5909\u6570\u306f\u3001\u305d\u306e\u5185\u90e8\u306e\u4e2d\u62ec\u5f27\u3067\u3082\n\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\u4ee5\u4e0b\u306f\u3001\u5916\u5074\u306e\u4e2d\u62ec\u5f27\u3067\u5ba3\u8a00\u3057\u305f\u5909\u6570 count \u3092\u3001\nwhile \u306e\u4e2d\u62ec\u5f27\u5185\u3067\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nscala> {\n     |   val variable = \"a\"\n     |\n     |   {\n     |     println(variable)\n     |   }\n     | }\na\n\n\u3053\u3053\u307e\u3067\u306fJava \u3068\u5909\u308f\u3089\u306a\u3044\u3093\u3060\u3051\u3069\u3001\u6700\u5f8c\u306b\u300cScala \u56fa\u6709\u306e\u898f\u5247\u300d\u3067\u3059\u3002\nScala \u3067\u306f\u3001\u305d\u3057\u3066\u3001\u5916\u5074\u306e\u4e2d\u62ec\u5f27\u3067\u5ba3\u8a00\u3057\u305f\u5909\u6570\u306f\u3001\n\u305d\u306e\u5185\u90e8\u306e\u4e2d\u62ec\u5f27\u3067\u3082 \u5ba3\u8a00 \u53ef\u80fd\u3067\u3059\u3002\nscala> {\n     |   val variable = \"a\"\n     |\n     |   {\n     |     val variable = \"b\"\n     |     println(variable)\n     |   }\n     | }\nb\n\n\u3053\u306e\u6642\u3001 \u5185\u90e8\u306e\u5909\u6570\u306f\u5916\u5074\u306e\u5909\u6570\u3092\u30b7\u30e3\u30c9\u30a6\u30a4\u30f3\u30b0\u3057\u3066\u3044\u308b \u3068\u8868\u73fe\u3057\u307e\u3059\u3002\n\u5b9f\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306e\u52d5\u304d\u306f\u3001\u30b7\u30e3\u30c9\u30a6\u30a4\u30f3\u30b0\u3057\u3066\u305f\u308a\u3057\u307e\u3059\u3002\n\u305f\u3060\u3053\u306e\u30b7\u30e3\u30c9\u30a6\u30a4\u30f3\u30b0\u3001\u30bd\u30fc\u30b9\u3092\u66f8\u304f\u4e0a\u3067\u306f\u5168\u304f\u4f7f\u3044\u9053\u304c\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\u30b9\u30b3\u30fc\u30d7\u306e\u5c0f\u3055\u3044 if \u5f0f\u3068\u304b\u3067\u3001\u5909\u6570\u540d\u3092\u8003\u3048\u308b\u306e\u304c\u9762\u5012\u81ed\u3044\u6642\u7b49\u306b\u4f7f\u3046\u304f\u3089\u3044\u304b\u306a\u3002\n\u8aad\u307f\u8f9b\u304f\u306a\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u306e\u3067\u3001\u3042\u307e\u308a\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3067\u3059\u306d\u3002\n\n\u4f8b\u5916 (Exception)\n\u4f8b\u5916\u3068\u306f\u3001 \u51e6\u7406\u306e\u7570\u5e38\u6642\u306b\u623b\u308a\u5024\u3068\u306f\u5225\u306e\u3084\u308a\u65b9\u3067\u547c\u51fa\u5143\u306b\u901a\u77e5\u3059\u308b\u4ed5\u7d44\u307f \u3067\u3059\u3002\n\u547c\u51fa\u5143\u306f\u4f8b\u5916\u767a\u751f\u306e\u901a\u77e5\u3092\u53d7\u3051\u53d6\u3063\u305f\u6642\u306b\u3001\u4ee5\u4e0b\u306a\u3053\u3068\u3092\u3059\u308b\u306e\u304c\u591a\u3044\u3067\u3059\u3002\n\n\u4e0a\u4f4d\u306b\u66f4\u306b\u901a\u77e5\u3092\u51fa\u3059(\u4e0a\u4f4d\u306b\u4f1d\u64ad\u3055\u305b\u308b)\n\u5225\u306e\u51e6\u7406(\u6240\u8b02\u3001\u6e96\u6b63\u5e38\u7cfb\u3084\u7570\u5e38\u7cfb\u306e\u51e6\u7406)\u3092\u5b9f\u65bd\u3059\u308b\n\n\n\u4f8b\u5916\u3092\u4f5c\u308b (throw)\n\u4f8b\u5916\u3092\u4f5c\u308b\u306e\u306f\u7c21\u5358\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3067\u3059\u3002\nthrow new FileNotFoundException\n\n\u3053\u308c\u3067 FileNotFoundException \u3068\u3044\u3046\u4f8b\u5916\u3092\u751f\u6210\u3057\u3066\u3001\u4e0a\u4f4d\u306b\u6295\u3052\u3066\u3044\u307e\u3059\u3002\n\u30b9\u30ed\u30fc\u3059\u308b\u3068\u8a00\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u8a66\u3057\u3066\u307f\u305f\u306e\u304c\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\nscala> throw new java.io.FileNotFoundException\njava.io.FileNotFoundException\n        at .<init>(<console>:8)\n        at .<clinit>(<console>)\n        at .<init>(<console>:11)\n        at .<clinit>(<console>)\n        at $print(<console>)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:601)\n        at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:704)\n        at scala.tools.nsc.interpreter.IMain$Request$$anonfun$14.apply(IMain.scala:920)\n        at scala.tools.nsc.interpreter.Line$$anonfun$1.apply$mcV$sp(Line.scala:43)\n        at scala.tools.nsc.io.package$$anon$2.run(package.scala:25)\n        at java.lang.Thread.run(Thread.java:722)\n\n\u3053\u308c\u3067\u81ea\u5206\u3067\u4f8b\u5916\u306e\u751f\u6210\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u306d\uff01\n\n\u4f8b\u5916\u3092\u6355\u3048\u308b (try/catch)\n\u6b21\u306b\u3001\u4e0b\u4f4d\u3067\u30b9\u30ed\u30fc\u3055\u308c\u305f\u4f8b\u5916\u306e\u901a\u77e5\u3092\u691c\u77e5\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3059\u308b\u3068\u8a00\u3063\u305f\u308a\u3057\u307e\u3059\u3002\ntry/catch \u7bc0\u3068\u3044\u3046\u306e\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u52d5\u304b\u3057\u305f\u7d50\u679c\u3082\u8f09\u305b\u305f\u3044\u306e\u3067\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u8f09\u305b\u3066\u898b\u8f9b\u304f\u306a\u3063\u3066\u3044\u308b\u306f\u30b4\u30e1\u30f3\u30ca\u30b5\u30a4\u3002\nscala> try {\n     |   val input = new java.io.FileInputStream(\"input.txt\")\n     | } catch {\n     |   case ex: java.io.FileNotFoundException => println(\"File not found\")\n     |   case ex: java.io.IOException => println(\"IOError\")\n     | }\nFile not found\n\n\n\u4f8b\u5916\u30af\u30e9\u30b9\n\u307e\u305a2\u3064\u306e\u4f8b\u5916\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\n\n\njava.io.FileNotFoundException\n\n\u5b9f\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u30b9\u30ed\u30fc\u3055\u308c\u308b\n\n\n\njava.io.IOException\n\n\u66f8\u304d\u8fbc\u307f\u304c\u5931\u6557\u3059\u308b\u7b49\u306eIO\u7cfb\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u30b9\u30ed\u30fc\u3055\u308c\u308b\n\n\n\njava.io.FileInputStream \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u305f\u6642\u306b\n\u3053\u306e2\u3064\u306e\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3068\u4e88\u6e2c\u3057\u3066\u3044\u307e\u3059\u3002\n\ncatch\n\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066case\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30bd\u30fc\u30b9\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u3001\u300cinput.txt\u300d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\n\u300cFile not found\u300d\u3068\u51fa\u529b\u3055\u308c\u307e\u3057\u305f\u3002\n\ntry\n\u3069\u3053\u3067\u767a\u751f\u3057\u305f\u4f8b\u5916\u3092\u5bfe\u8c61\u306b\u3059\u308b\u304b\u3092\u6c7a\u3081\u307e\u3059\u3002\ntry \u3067\u59cb\u307e\u308b\u4e2d\u62ec\u5f27\u306e\u4e2d\u3067\u767a\u751f\u3057\u305f\u4f8b\u5916\u304c\u306e\u307f\u304c\u3001\n\u30ad\u30e3\u30c3\u30c1\u5bfe\u8c61\u3068\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\nfinally\n\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3068\u5f8c\u7d9a\u306e\u51e6\u7406\u304c\u5b9f\u65bd\u3055\u308c\u307e\u305b\u3093\u3002\n\u6b63\u5e38\u7cfb\u3067\u3082\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3082\u3001\u6700\u5f8c\u306b\u78ba\u5b9f\u306b\u5b9f\u884c\u3055\u305b\u305f\u3044\u51e6\u7406\u304c\u3042\u308b\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\nscala> {\n     |   val input = new java.io.FileInputStream(\"input.txt\")\n     |\n     |   try {\n     |     throw new java.io.IOException // \u660e\u793a\u7684\u306b\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\n     |\n     |     input.close() // \u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3053\u306b\u306f\u5230\u9054\u3057\u306a\u3044\n     |   } catch {\n     |     case ex: java.io.FileNotFoundException => println(\"File not found\")\n     |     case ex: java.io.IOException => println(\"IOError\")\n     |   } finally {\n     |     println(\"Finally\")\n     |     input.close()  // \u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3082\u3001\u3057\u306a\u304f\u3066\u3082\u3053\u3053\u306b\u5165\u3063\u3066\u304f\u308b\n     |   }\n     | }\nIOError\nFinally\n\n\u3088\u304f\u3042\u308b\u306e\u304c\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30ed\u30fc\u30ba\u3067\u3059\u306d\u3002\n\nScala\u306e\u4f8b\u5916\n\u6700\u5f8c\u306b\u3001Scala \u3067\u306fJava \u3068\u9055\u3063\u3066\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306e\u30ad\u30e3\u30c3\u30c1\u304c\u5fc5\u9808\u3067\u306f\u306a\u3044\u3067\u3059\u3002\n\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u3063\u3066\u4f55\u3063\u3066\uff1f\nJava\u306e\u4f8b\u5916\u306b\u306f2\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002\n\n\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\n\u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\n\n\n\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\nException \u30af\u30e9\u30b9\u3092\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u3092\u30b9\u30ed\u30fc\u3057\u3066\u767a\u751f\u3055\u305b\u308b\u4f8b\u5916\u3002\nthrows \u3092\u5f37\u5236\u3055\u308c\u308b\u3002\n\u4e0a\u4f4d\u3067\u306f\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u304c\u5fc5\u8981\u3068\u306a\u308b\u3002\n\n\u30ad\u30e3\u30c3\u30c1\u3059\u308b\n\nthrows \u5ba3\u8a00\u3092\u3057\u3066\u3001\u66f4\u306b\u4e0a\u4f4d\u306b\u30b9\u30ed\u30fc\u3059\u308b\n\n\n\u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\nRuntimeException \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u3092\u30b9\u30ed\u30fc\u3057\u3066\u767a\u751f\u3055\u305b\u308b\u4f8b\u5916\nthrows \u3092\u5f37\u5236\u3055\u308c\u306a\u3044\u3002\n\u4e0a\u4f4d\u3067\u306e\u30ad\u30e3\u30c3\u30c1\u3084 throws \u5ba3\u8a00\u306f\u5fc5\u9808\u3067\u306f\u306a\u3044\u3002\n\u3064\u307e\u308aScala \u3067\u306f\u3001Java \u306b\u304a\u3051\u308b \u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916 \u306e\u3088\u3046\u306b\u4f8b\u5916\u3092\u6271\u3048\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u5236\u5fa1\u69cb\u9020\u306b\u3057\u3066\u307f\u305f\u3051\u3069\u3069\u3046\u3060\u3063\u305f\uff1f\n\u4eca\u56de\u3001 match \u306b\u3064\u3044\u3066\u306f\u89e6\u308c\u306a\u304b\u3063\u305f\u3051\u3069\u3001\u5225\u306e\u6a5f\u4f1a\u3067\u8a9e\u308a\u307e\u3059\u3002\n\u4eca\u56de\u3082\n\u4f53\u3067\u611f\u3058\u3066\u304f\u308c\u305f\u304b\u306a\uff1f\n\u6700\u8fd1\u3001\u578b\u308a\uff08\u8a9e\u308a\uff09\u307e\u304f\u3063\u3066\u3044\u305f\u3051\u3069\u3001\u4eca\u56de\u306f\u5236\u5fa1\u69cb\u9020\u3060\u3088\u3002\n\nScala\u3067\u306f\u3069\u3093\u306a\u5236\u5fa1\u69cb\u9020\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\n# Scala\u306e\u5236\u5fa1\u69cb\u9020\n__\u51e6\u7406\u3092\u3069\u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u304b\u3092\u6c7a\u3081\u308b\u3053\u3068__\n\n\u5236\u5fa1\u69cb\u9020\u3092\u30b6\u30c3\u30af\u3057\u8a00\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u306fif\u3084for\u7b49\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nScala\u306e\u5236\u5fa1\u69cb\u9020\u4ee5\u4e0b\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n- if\n- for\n- while\n- try\n- match\n- \u95a2\u6570\u547c\u3073\u51fa\u3057\n\nJVM\u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u3089Java\u3068\u9055\u3044\u304c\u306a\u3044\u3068\u601d\u3044\u304d\u3084\n\u3084\u3063\u3071\u308a\u5225\u8a00\u8a9e\u306a\u306e\u3067\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u306d\u3002\u3002\n\n\u4eca\u56de\u306f\u5236\u5fa1\u69cb\u9020\u3068\u3042\u308f\u305b\u3066\u3001\u5909\u6570\u306e\u30b9\u30b3\u30fc\u30d7\u7b49\u306b\u3064\u3044\u3066\u3082\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n# if\n\u9078\u629e\u69cb\u9020\u306e\u4ee3\u8868\u3067\u3059\u3002 __if\u5f0f__ \u3068\u547c\u3073\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u8a18\u8ff0\u306f\u9055\u548c\u611f\u306a\u304f\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```scala:IfTest1.scala\nimport java.io.File\n\nobject IfTest1 {\n\n  def main(args: Array[String]): Unit = {\n    var filename = \"config.txt\"\n\n    if (!args.isEmpty)\n      filename = args(0)\n\n    println(\"Filename:\" + filename)\n  }\n\n}\n```\n\nif\u306e\u6761\u4ef6\u5f0f `!args.isEmpty` \u304c true \u306b\u6210\u3063\u305f\u5834\u5408\u3001\n\u3064\u307e\u308a\u30d1\u30e9\u30e1\u30fc\u30bf\u6307\u5b9a\u3067\u5b9f\u884c\u3057\u305f\u6642\u306b `filename` \u306e\u5024\u3092\u5165\u308c\u66ff\u3048\u307e\u3059\u3002\n`if` \u306e\u666e\u901a\u306a\u4f7f\u3044\u65b9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3067\u3082\u3088\u30fc\u304f\u898b\u308b\u3068\u3002\u3053\u308c\u30a4\u30b1\u3066\u306a\u3044\u3067\u3059\u3088\u306d\uff1f\n\u5909\u6570\u304c\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3057\u3001\u518d\u4ee3\u5165\u3057\u3066\u3044\u308b\u3057\u3002\n\n\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u4f8b\u3048\u3070 Java \u3060\u3068\u3001`filename` \u306e\u78ba\u5b9a\u51e6\u7406\u3092\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\n\u5207\u308a\u3060\u3059\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001Scala \u3067\u306e `if` \u306f\u5f0f\u306e\u305f\u3081\u3001\u5024\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\n\u3067\u306f `if` \u304c\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u3088\u3046\u3002\n\n```scala:IfTest1Refactor.scala\nimport java.io.File\n\nobject IfTest1Refactor {\n\n  def main(args: Array[String]): Unit = {\n    val filename = if (args.isEmpty) \"config.txt\" else args(0)\n\n    println(\"Filename:\" + filename)\n  }\n\n}\n```\n\n\u5909\u6570 `filename` \u3092\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\n\u3057\u304b\u3082\u5024\u306e\u78ba\u5b9a\u51e6\u7406\u3092\u5909\u6570\u306e\u5ba3\u8a00\u3068\u5171\u306b1\u884c\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n`if` \u3092\u4f7f\u3046\u3068\u3001\u5ba3\u8a00\u3068\u5024\u306e\u5b9a\u7fa9\u304c1\u7b87\u6240\u306b\u7e8f\u307e\u3063\u3066\u898b\u3084\u3059\u304f\u306a\u308a\u307e\u3057\u305f\u306d\u3002\n\n# for\n\u7e70\u8fd4\u69cb\u9020\u306e\u4ee3\u8868\u3067\u3059\u3002\u6240\u8b02\u30eb\u30fc\u30d7\u3063\u3066\u3084\u3064\u3067\u3059\u3002\n__for\u5f0f__ \u3068\u547c\u3073\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u304b\u3089\u3002\n\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n```scala\nscala> val list = List(\"Brad Jones\", \"Steven Gerrard\", \"Daniel Agger\", \"Daniel Sturridge\")\nlist: List[java.lang.String] = List(Brad Jones, Steven Gerrard, Daniel Agger, Daniel Sturridge)\n\nscala> for (name <- list) { println(name) }\nBrad Jones\nSteven Gerrard\nDaniel Agger\nDaniel Sturridge\n```\n\nJava \u306e\u62e1\u5f35 for \u6587\u3068\u4f3c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u3053\u3053\u304b\u3089 for \u5f0f\u306e\u30d1\u30ef\u30fc\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\nJava \u3068\u9055\u3063\u3066\u3001Scala \u3067\u306f\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u304c\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n```scala\nscala> for (name <- list if name.startsWith(\"Daniel\")) { println(name) }\nDaniel Agger\nDaniel Sturridge\n```\n\n`Daniel` \u3067\u59cb\u307e\u308b\u6587\u5b57\u5217\u3060\u3051\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nJava \u3060\u3068 Commons Collections \u3092\u7528\u610f\u3057\u305f\u308a\u3067\u3001\u9762\u5012\u304f\u3055\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u8a66\u3057\u306bCommons Collections \u3092\u4f7f\u3063\u3066\u4e0a\u306e\u30bd\u30fc\u30b9\u3068\n\u540c\u3058\u30e2\u30ce\u3092Java\u3067\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```java:JavaFiltering.java\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.apache.commons.collections.Predicate;\nimport org.apache.commons.collections.iterators.FilterIterator;\nimport org.apache.commons.lang3.StringUtils;\n\npublic class JavaFiltering {\n\n\tpublic static void main(String[] args) {\n\t\tfinal List<String> list = Arrays.asList(\"Brad Jones\", \"Steven Gerrard\",\n\t\t\t\t\"Daniel Agger\", \"Daniel Sturridge\");\n\n\t\tfinal Iterator<String> iterator = new FilterIterator(list.iterator(),\n\t\t\t\tnew Predicate() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean evaluate(Object object) {\n\t\t\t\t\t\tfinal String name = (String) object;\n\t\t\t\t\t\treturn StringUtils.startsWith(name, \"Daniel\");\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\twhile (iterator.hasNext()) {\n\t\t\tSystem.out.println(iterator.next());\n\t\t}\n\t}\n\n}\n```\n\nScala\u3060\u3068\u3053\u306e1\u884c\u3067\u3059\u304c\n\n```scala\nfor (name <- list if name.startsWith(\"Daniel\")) { println(name) }\n```\n\nJava\u3060\u3068\u3001\n\n```java\nfinal Iterator<String> iterator = new FilterIterator(list.iterator(),\n\t\tnew Predicate() {\n\n\t\t\t@Override\n\t\t\tpublic boolean evaluate(Object object) {\n\t\t\t\tfinal String name = (String) object;\n\t\t\t\treturn StringUtils.startsWith(name, \"Daniel\");\n\t\t\t}\n\t\t});\n\nwhile (iterator.hasNext()) {\n\tSystem.out.println(iterator.next());\n}\n```\n\n\u306e\u3088\u3046\u306b\u3001 `Predicate` \u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u6761\u4ef6\u3092\u4f5c\u3063\u3066\n\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b `Iterator` \u4f5c\u3063\u305f\u308a\u3067\u304b\u306a\u308a\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u5b8c\u5168\u306b\u5197\u9577\u306b\u66f8\u3044\u3066\u306f\u3044\u307e\u3059\u3051\u3069\u306d\u3002\n\nScala \u306f\u7c21\u5358\u904e\u304e\u307e\u3059\uff01\n\n## \u65b0\u3057\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u751f\u6210\n\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u306f\u7e70\u8fd4\u306e\u4e2d\u3067\u5024\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\n\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u7d50\u679c\u3092\u65b0\u3057\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```scala\nscala> val daniels = for { name <- list if name.startsWith(\"Daniel\") } yield name\ndaniels: List[java.lang.String] = List(Daniel Agger, Daniel Sturridge)\n\nscala> for (name <- daniels) { println(name) }\nDaniel Agger\nDaniel Sturridge\n```\n\n\u3053\u3053\u3067 `yield` \u304c\u767b\u5834\u3057\u3066\u3044\u307e\u3059\u3002\n`for` \u306f\u623b\u308a\u5024\u304c\u306a\u3044\u3067\u3059\u304c\u3001`yield` \u3092\u4f7f\u3046\u3068\u6f14\u7b97\u7d50\u679c\u3092\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3057\u3066\n\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n# while\n\u3053\u308c\u3082\u7e70\u8fd4\u69cb\u9020\u306e\u4ee3\u8868\u3067\u3059\u306d\u3002\nScala \u3067\u306e\u4f7f\u3044\u9053\u304c\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u306e\u3067\n\u30b5\u30e9\u30c3\u3068\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## while\u30eb\u30fc\u30d7\n```scala\nscala> var count = 0;\ncount: Int = 0\n\nscala> while (count < 5) {\n     |   count += 1\n     |   println(count)\n     | }\n1\n2\n3\n4\n5\n```\n\n`while` \u306e\u6761\u4ef6\u5f0f\u304c `true` \u3067\u3042\u308b\u9593\u3001\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n## do-while \u30eb\u30fc\u30d7\n\u307e\u305a\u306f\u30b3\u30fc\u30c9\u304b\u3089\u3067\u3059\u3002\n\n```scala\nscala> var count = 0;\ncount: Int = 0\n\nscala> do {\n     |   count += 1\n     |   println(count)\n     | } while (count < 5)\n1\n2\n3\n4\n5\n```\n\n`while` \u3068 `do-while` \u306e\u9055\u3044\u306f\u3001\n`while` \u306f\u6761\u4ef6\u5f0f\u306e\u8a55\u4fa1\u3092\u5148\u306b\u3057\u307e\u3059\u3002\n`do-while` \u306f\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u5148\u306b\u5b9f\u884c\u3057\u3001\u6761\u4ef6\u5f0f\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\n\n# \u5909\u6570\u306e\u30b9\u30b3\u30fc\u30d7\n\u5909\u6570\u306e\u751f\u5b58\u7bc4\u56f2\u3067\u3059\u306d\u3002\n\u5909\u6570\u306f\u57fa\u672c\u7684\u306b\u306f\u4e2d\u62ec\u5f27 `{}` \u5185\u3067\u306e\u307f\u751f\u5b58\u3067\u304d\u307e\u3059\u3002\n\n\u3042\u308b\u751f\u5b58\u7bc4\u56f2\u3067\u306f\u3001\u540c\u3058\u5909\u6570\u3092\u5ba3\u8a00\u3067\u304d\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u6b21\u306e\u5834\u5408\u306f\u3001\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002\n\n```scala\nscala> {\n     |   val variable = \"a\"\n     |   val variable = \"b\"\n     | }\n<console>:10: error: variable is already defined as value variable\n                    val variable = \"b\"\n                        ^\n```\n\n\u305d\u3057\u3066\u3001\u5916\u5074\u306e\u4e2d\u62ec\u5f27\u3067\u5ba3\u8a00\u3057\u305f\u5909\u6570\u306f\u3001\u305d\u306e\u5185\u90e8\u306e\u4e2d\u62ec\u5f27\u3067\u3082\n\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\u4ee5\u4e0b\u306f\u3001\u5916\u5074\u306e\u4e2d\u62ec\u5f27\u3067\u5ba3\u8a00\u3057\u305f\u5909\u6570 `count` \u3092\u3001\n`while` \u306e\u4e2d\u62ec\u5f27\u5185\u3067\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```scala\nscala> {\n     |   val variable = \"a\"\n     |\n     |   {\n     |     println(variable)\n     |   }\n     | }\na\n```\n\n\u3053\u3053\u307e\u3067\u306fJava \u3068\u5909\u308f\u3089\u306a\u3044\u3093\u3060\u3051\u3069\u3001\u6700\u5f8c\u306b\u300cScala \u56fa\u6709\u306e\u898f\u5247\u300d\u3067\u3059\u3002\n\nScala \u3067\u306f\u3001\u305d\u3057\u3066\u3001\u5916\u5074\u306e\u4e2d\u62ec\u5f27\u3067\u5ba3\u8a00\u3057\u305f\u5909\u6570\u306f\u3001\n\u305d\u306e\u5185\u90e8\u306e\u4e2d\u62ec\u5f27\u3067\u3082 __\u5ba3\u8a00__ \u53ef\u80fd\u3067\u3059\u3002\n\n```scala\nscala> {\n     |   val variable = \"a\"\n     |\n     |   {\n     |     val variable = \"b\"\n     |     println(variable)\n     |   }\n     | }\nb\n```\n\n\u3053\u306e\u6642\u3001 __\u5185\u90e8\u306e\u5909\u6570\u306f\u5916\u5074\u306e\u5909\u6570\u3092\u30b7\u30e3\u30c9\u30a6\u30a4\u30f3\u30b0\u3057\u3066\u3044\u308b__ \u3068\u8868\u73fe\u3057\u307e\u3059\u3002\n\n\u5b9f\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306e\u52d5\u304d\u306f\u3001\u30b7\u30e3\u30c9\u30a6\u30a4\u30f3\u30b0\u3057\u3066\u305f\u308a\u3057\u307e\u3059\u3002\n\n\u305f\u3060\u3053\u306e\u30b7\u30e3\u30c9\u30a6\u30a4\u30f3\u30b0\u3001\u30bd\u30fc\u30b9\u3092\u66f8\u304f\u4e0a\u3067\u306f\u5168\u304f\u4f7f\u3044\u9053\u304c\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\u30b9\u30b3\u30fc\u30d7\u306e\u5c0f\u3055\u3044 `if` \u5f0f\u3068\u304b\u3067\u3001\u5909\u6570\u540d\u3092\u8003\u3048\u308b\u306e\u304c\u9762\u5012\u81ed\u3044\u6642\u7b49\u306b\u4f7f\u3046\u304f\u3089\u3044\u304b\u306a\u3002\n\n\u8aad\u307f\u8f9b\u304f\u306a\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u306e\u3067\u3001\u3042\u307e\u308a\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3067\u3059\u306d\u3002\n\n# \u4f8b\u5916 (Exception)\n\u4f8b\u5916\u3068\u306f\u3001 __\u51e6\u7406\u306e\u7570\u5e38\u6642\u306b\u623b\u308a\u5024\u3068\u306f\u5225\u306e\u3084\u308a\u65b9\u3067\u547c\u51fa\u5143\u306b\u901a\u77e5\u3059\u308b\u4ed5\u7d44\u307f__ \u3067\u3059\u3002\n\u547c\u51fa\u5143\u306f\u4f8b\u5916\u767a\u751f\u306e\u901a\u77e5\u3092\u53d7\u3051\u53d6\u3063\u305f\u6642\u306b\u3001\u4ee5\u4e0b\u306a\u3053\u3068\u3092\u3059\u308b\u306e\u304c\u591a\u3044\u3067\u3059\u3002\n\n- \u4e0a\u4f4d\u306b\u66f4\u306b\u901a\u77e5\u3092\u51fa\u3059(\u4e0a\u4f4d\u306b\u4f1d\u64ad\u3055\u305b\u308b)\n- \u5225\u306e\u51e6\u7406(\u6240\u8b02\u3001\u6e96\u6b63\u5e38\u7cfb\u3084\u7570\u5e38\u7cfb\u306e\u51e6\u7406)\u3092\u5b9f\u65bd\u3059\u308b\n\n\n## \u4f8b\u5916\u3092\u4f5c\u308b (throw)\n\u4f8b\u5916\u3092\u4f5c\u308b\u306e\u306f\u7c21\u5358\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```scala\nthrow new FileNotFoundException\n```\n\n\u3053\u308c\u3067 `FileNotFoundException` \u3068\u3044\u3046\u4f8b\u5916\u3092\u751f\u6210\u3057\u3066\u3001\u4e0a\u4f4d\u306b\u6295\u3052\u3066\u3044\u307e\u3059\u3002\n__\u30b9\u30ed\u30fc\u3059\u308b__\u3068\u8a00\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b\u8a66\u3057\u3066\u307f\u305f\u306e\u304c\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n\n```scala\nscala> throw new java.io.FileNotFoundException\njava.io.FileNotFoundException\n        at .<init>(<console>:8)\n        at .<clinit>(<console>)\n        at .<init>(<console>:11)\n        at .<clinit>(<console>)\n        at $print(<console>)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:601)\n        at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:704)\n        at scala.tools.nsc.interpreter.IMain$Request$$anonfun$14.apply(IMain.scala:920)\n        at scala.tools.nsc.interpreter.Line$$anonfun$1.apply$mcV$sp(Line.scala:43)\n        at scala.tools.nsc.io.package$$anon$2.run(package.scala:25)\n        at java.lang.Thread.run(Thread.java:722)\n```\n\n\u3053\u308c\u3067\u81ea\u5206\u3067\u4f8b\u5916\u306e\u751f\u6210\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u306d\uff01\n\n## \u4f8b\u5916\u3092\u6355\u3048\u308b (try/catch)\n\u6b21\u306b\u3001\u4e0b\u4f4d\u3067\u30b9\u30ed\u30fc\u3055\u308c\u305f\u4f8b\u5916\u306e\u901a\u77e5\u3092\u691c\u77e5\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n__\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3059\u308b__\u3068\u8a00\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\n__try/catch \u7bc0__\u3068\u3044\u3046\u306e\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u52d5\u304b\u3057\u305f\u7d50\u679c\u3082\u8f09\u305b\u305f\u3044\u306e\u3067\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u8f09\u305b\u3066\u898b\u8f9b\u304f\u306a\u3063\u3066\u3044\u308b\u306f\u30b4\u30e1\u30f3\u30ca\u30b5\u30a4\u3002\n\n```scala\nscala> try {\n     |   val input = new java.io.FileInputStream(\"input.txt\")\n     | } catch {\n     |   case ex: java.io.FileNotFoundException => println(\"File not found\")\n     |   case ex: java.io.IOException => println(\"IOError\")\n     | }\nFile not found\n```\n\n### \u4f8b\u5916\u30af\u30e9\u30b9\n\u307e\u305a2\u3064\u306e\u4f8b\u5916\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\n\n- java.io.FileNotFoundException\n  - \u5b9f\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u30b9\u30ed\u30fc\u3055\u308c\u308b\n\n- java.io.IOException\n  - \u66f8\u304d\u8fbc\u307f\u304c\u5931\u6557\u3059\u308b\u7b49\u306eIO\u7cfb\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u30b9\u30ed\u30fc\u3055\u308c\u308b\n\njava.io.FileInputStream \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u305f\u6642\u306b\n\u3053\u306e2\u3064\u306e\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3068\u4e88\u6e2c\u3057\u3066\u3044\u307e\u3059\u3002\n\n### catch\n\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066`case`\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30bd\u30fc\u30b9\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u3001\u300cinput.txt\u300d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\n\u300cFile not found\u300d\u3068\u51fa\u529b\u3055\u308c\u307e\u3057\u305f\u3002\n\n### try\n\u3069\u3053\u3067\u767a\u751f\u3057\u305f\u4f8b\u5916\u3092\u5bfe\u8c61\u306b\u3059\u308b\u304b\u3092\u6c7a\u3081\u307e\u3059\u3002\n`try` \u3067\u59cb\u307e\u308b\u4e2d\u62ec\u5f27\u306e\u4e2d\u3067\u767a\u751f\u3057\u305f\u4f8b\u5916\u304c\u306e\u307f\u304c\u3001\n\u30ad\u30e3\u30c3\u30c1\u5bfe\u8c61\u3068\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\n## finally\n\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3068\u5f8c\u7d9a\u306e\u51e6\u7406\u304c\u5b9f\u65bd\u3055\u308c\u307e\u305b\u3093\u3002\n\u6b63\u5e38\u7cfb\u3067\u3082\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3082\u3001\u6700\u5f8c\u306b\u78ba\u5b9f\u306b\u5b9f\u884c\u3055\u305b\u305f\u3044\u51e6\u7406\u304c\u3042\u308b\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```scala\nscala> {\n     |   val input = new java.io.FileInputStream(\"input.txt\")\n     |\n     |   try {\n     |     throw new java.io.IOException // \u660e\u793a\u7684\u306b\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\n     |\n     |     input.close() // \u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3053\u306b\u306f\u5230\u9054\u3057\u306a\u3044\n     |   } catch {\n     |     case ex: java.io.FileNotFoundException => println(\"File not found\")\n     |     case ex: java.io.IOException => println(\"IOError\")\n     |   } finally {\n     |     println(\"Finally\")\n     |     input.close()  // \u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3082\u3001\u3057\u306a\u304f\u3066\u3082\u3053\u3053\u306b\u5165\u3063\u3066\u304f\u308b\n     |   }\n     | }\nIOError\nFinally\n```\n\n\u3088\u304f\u3042\u308b\u306e\u304c\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30ed\u30fc\u30ba\u3067\u3059\u306d\u3002\n\n## Scala\u306e\u4f8b\u5916\n\u6700\u5f8c\u306b\u3001Scala \u3067\u306fJava \u3068\u9055\u3063\u3066\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306e\u30ad\u30e3\u30c3\u30c1\u304c\u5fc5\u9808\u3067\u306f\u306a\u3044\u3067\u3059\u3002\n\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u3063\u3066\u4f55\u3063\u3066\uff1f\n\nJava\u306e\u4f8b\u5916\u306b\u306f2\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002\n\n- \u30c1\u30a7\u30c3\u30af\u4f8b\u5916\n- \u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\n\n### \u30c1\u30a7\u30c3\u30af\u4f8b\u5916\nException \u30af\u30e9\u30b9\u3092\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u3092\u30b9\u30ed\u30fc\u3057\u3066\u767a\u751f\u3055\u305b\u308b\u4f8b\u5916\u3002\n`throws` \u3092\u5f37\u5236\u3055\u308c\u308b\u3002\n\n\u4e0a\u4f4d\u3067\u306f\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u304c\u5fc5\u8981\u3068\u306a\u308b\u3002\n\n- \u30ad\u30e3\u30c3\u30c1\u3059\u308b\n- `throws` \u5ba3\u8a00\u3092\u3057\u3066\u3001\u66f4\u306b\u4e0a\u4f4d\u306b\u30b9\u30ed\u30fc\u3059\u308b\n\n### \u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\nRuntimeException \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u3092\u30b9\u30ed\u30fc\u3057\u3066\u767a\u751f\u3055\u305b\u308b\u4f8b\u5916\n`throws` \u3092\u5f37\u5236\u3055\u308c\u306a\u3044\u3002\n\n\u4e0a\u4f4d\u3067\u306e\u30ad\u30e3\u30c3\u30c1\u3084 `throws` \u5ba3\u8a00\u306f\u5fc5\u9808\u3067\u306f\u306a\u3044\u3002\n\n\u3064\u307e\u308aScala \u3067\u306f\u3001Java \u306b\u304a\u3051\u308b __\u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916__ \u306e\u3088\u3046\u306b\u4f8b\u5916\u3092\u6271\u3048\u307e\u3059\u3002\n\n# \u307e\u3068\u3081\n\u5236\u5fa1\u69cb\u9020\u306b\u3057\u3066\u307f\u305f\u3051\u3069\u3069\u3046\u3060\u3063\u305f\uff1f\n\n\u4eca\u56de\u3001 __match__ \u306b\u3064\u3044\u3066\u306f\u89e6\u308c\u306a\u304b\u3063\u305f\u3051\u3069\u3001\u5225\u306e\u6a5f\u4f1a\u3067\u8a9e\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u3082\n__\u4f53\u3067\u611f\u3058\u3066\u304f\u308c\u305f\u304b\u306a\uff1f__\n", "tags": ["Java", "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411", "Scala2.10.1", "\u95a2\u6570\u578b\u8a00\u8a9e"]}