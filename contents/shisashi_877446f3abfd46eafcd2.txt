{"context": " More than 1 year has passed since last update.Java \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30c6\u30b9\u30c8\u3092 Groovy (spock) \u3067\u66f8\u304f\u306e\u306f\u6614\u304b\u3089\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u4e0b\u3059\u969b\u306e\u5de5\u592b\u3092\u30e1\u30e2\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30d7\u30ed\u30b0\u30e9\u30e0\n\nFirstDate.java\npackage example;\n\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.Date;\nimport java.util.List;\n\npublic class FirstDate {\n    /**\n     * \u30c6\u30b9\u30c8\u5bfe\u8c61\u30e1\u30bd\u30c3\u30c9\u3002\n     * \u4e0e\u3048\u3089\u308c\u305f\u65e5\u4ed8\u306e\u30ea\u30b9\u30c8\u304b\u3089\u4e00\u756a\u904e\u53bb\u306e\u3082\u306e\u3092\u8fd4\u3059\n     */\n    public static Date firstDate(List<Date> dates) {\n        List<Date> copy = new ArrayList<>(dates);\n        copy.sort(Comparator.<Date>naturalOrder());\n        return copy.get(0);\n    }\n}\n\n\n\u3053\u306e firstDate \u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\nFirstDateSpec.groovy\npackage example\n\nimport spock.lang.Specification\n\nclass FirstDateSpec extends Specification {\n    // \u3053\u3053\u306b\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u8db3\u3057\u3066\u3044\u304d\u307e\u3059\n}\n\n\n\u3053\u3053\u306b\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u8db3\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u666e\u901a\u306e\u3084\u308a\u65b9\ndef \"\u57fa\u672c\u5f62\"() {\n    given:\n    def dates = [new Date('2015/5/5'), new Date('2015/1/1'), new Date('2015/10/10'), new Date('2015/11/3')]\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == new Date('2015/1/1')\n}\n\nnew Date \u304c\u6ca2\u5c71\u3067\u3066\u304d\u3066\u3046\u3063\u3068\u304a\u3057\u3044\u3067\u3059\u306d\u3002\u3053\u306e\u90aa\u9b54\u306a new Date \u3092\u524a\u6e1b\u3057\u3066\u3044\u304f\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\nnew Date \u3092 as Date \u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\ndef setup() {\n    String.metaClass.define {\n        def originalAsType = String.metaClass.getMetaMethod('asType', [] as Class[])\n        asType = { Class c ->\n            if (c == Date) {\n                new Date(delegate)\n            } else {\n                originalAsType.invoke(delegate, c)\n            }\n        }\n    }\n}\n\ndef \"as\u3067\u5909\u63db\"() {\n    given:\n    def dates = ['2015/5/5' as Date, '2015/1/1' as Date, '2015/10/10' as Date, '2015/11/3' as Date]\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n\nGroovy \u30d1\u30ef\u30fc\u3067 String \u3092 as \u3067 Date \u306b\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u3042\u3093\u307e\u308a\u898b\u305f\u76ee\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u306d\u3002\n\u3067\u3082\u3053\u306e as \u306f\u4e0b\u6e96\u5099\u3067\u3059\u3002\n\ncollect \u3067 List<String> \u3092 List<Date> \u306b\u3059\u308b1\ndef \"collect\u3067\u5909\u63db1\"() {\n    given:\n    def dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].collect { new Date(it) }\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n\n\u4e00\u6c17\u306b\u90aa\u9b54\u8005\u304c\u6e1b\u308a\u307e\u3057\u305f\u306d\u3002\n\ncollect \u3067 List<String> \u3092 List<Date> \u306b\u3059\u308b2\ndef \"collect\u3067\u5909\u63db2\"() {\n    given:\n    def dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].collect { it as Date }\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n\n\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u4e2d\u3067\u3082 as \u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\ncollect\u306e\u5909\u63db\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5916\u51fa\u3057\ndef \"collect\u306e\u5909\u63db\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5916\u51fa\u3057\u3057\u3066\u5909\u63db\"() {\n    def asDate = { it as Date }\n\n    given:\n    def dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].collect asDate\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n\n\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5909\u6570\u306b\u5165\u308c\u3066\u307f\u307e\u3057\u305f\u3002List<Date> \u3092\u6ca2\u5c71\u4f5c\u308a\u305f\u3044\u3068\u304d\u306f\u3061\u3087\u3063\u3068\u7c21\u6f54\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u306a\u304a\u3001\u3053\u306e\u4f8b\u306e\u5834\u5408\u3067\u30af\u30ed\u30fc\u30b8\u30e3\u90e8\u5206\u304c {new Date(it)} \u3060\u3068 it \u306e\u578b\u304c\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u8b66\u544a\u304c\u51fa\u307e\u3059\u3002\n\nstatic method \u3067\u5909\u63db\nstatic <T> List<T> memberAs(List<String> l, Class<T> c) {\n    return l.collect({ it.asType(c) })\n}\n\ndef \"staticMethod\u3067\u5909\u63db\"() {\n    given:\n    def dates = memberAs(['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'], Date)\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n\n\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u3082\u3067\u304d\u307e\u3059\u304c\u3001memberAs \u306e\u547c\u3073\u51fa\u3057\u65b9\u304c\u306a\u3093\u3068\u306a\u304f\u30c0\u30b5\u3055\u3092\u91b8\u3057\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u547c\u3073\u51fa\u3057\u306f Groovy \u306e\u30d1\u30ef\u30fc\u3067\u30c0\u30b5\u304f\u306a\u304f\u3059\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\nCategory \u3068 use \u3067\u5909\u63db\n@Category(List)\nclass ListMemberAs {\n    public <T> List<T> memberAs(Class<T> c) {\n        return this.collect({ it.asType(c) })\n    }\n}\n\ndef \"Category\u3067\u5909\u63db\"() {\n    given:\n    List<Date> dates = null\n    use(ListMemberAs) {\n        dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].memberAs(Date)\n    }\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n\nGroovy \u306e Category \u3092\u4f7f\u3048\u3070\u30ea\u30b9\u30c8\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u305f\u3088\u3046\u306b\u898b\u305b\u304b\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u547c\u3073\u51fa\u3057\u3057\u3066\u3044\u308b\u90e8\u5206\u3092 use \u3068\u30af\u30ed\u30fc\u30b8\u30e3\u3067\u56f2\u3046\u5fc5\u8981\u304c\u3042\u308a\u3001 dates \u306e\u5ba3\u8a00\u90e8\u5206\u306a\u3069\u306b\u30c0\u30b5\u3055\u304c\u6b8b\u308a\u307e\u3059\u3002\n\u306a\u304a given, when, then \u3092\u542b\u3080\u5168\u4f53\u3092 use \u3067\u56f2\u3046\u3068 spock \u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u4f8b\u306b\u306f\u305d\u3050\u308f\u306a\u3044\u3067\u3059\u304c\u3001Groovy \u306e Category \u3068 use \u306b\u306f\u53ef\u80fd\u6027\u3092\u611f\u3058\u307e\u3059\u3002\n\nCategory \u3092 Use \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u9069\u7528\nimport spock.util.mop.Use\n\n@Use(ListMemberAs)\ndef \"Category\u3092Use\u3067\u9069\u7528\u3057\u3066\u5909\u63db\"() {\n    given:\n    List<Date> dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].memberAs(Date)\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n\n\u898b\u305f\u76ee\u7684\u306b\u306f\u5b8c\u74a7\u3067\u3059\u304c\u3001Intellij IDEA \u3055\u3093\u304c\u3001\u300cList \u306b\u306f memberAs \u306a\u3093\u3066\u306a\u3044\u3088\uff1f\u300d\u3068\u3044\u3046\u8b66\u544a\u3092\u51fa\u3057\u3084\u304c\u308a\u307e\u3059\u3002\u307e\u305f\u3001dates \u306b\u578b\u306e\u5ba3\u8a00 List<Date> \u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3092 def \u306b\u3059\u308b\u3068\u300cdates \u306e\u578b\u304c\u7279\u7684\u3067\u304d\u306a\u3044\u3088\uff1f\u300d\u3068\u3044\u3046\u8b66\u544a\u3092\u51fa\u3057\u3084\u304c\u308a\u307e\u3059\u3002\n\u3053\u306e\u30c6\u30b9\u30c8\u3067\u306f\u554f\u984c\u304c\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spock \u306e\u30c7\u30fc\u30bf\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u3084\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u76f4\u63a5\u6e21\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u3001\u578b\u5ba3\u8a00\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068 dates \u306b\u95a2\u9023\u3059\u308b\u547c\u3073\u51fa\u3057\u3067\u828b\u3065\u308b\u5f0f\u306b\u578b\u63a8\u8ad6\u304c\u52b9\u304b\u306a\u304f\u306a\u3063\u3066\u4f7f\u3044\u52dd\u624b\u304c\u843d\u3061\u3066\u3057\u307e\u3046\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u73fe\u6642\u70b9\u3067\u306e\u81ea\u5206\u306e\u63a1\u7528\u3057\u3066\u3044\u308b\u65b9\u6cd5\nList<Date> \u304c\u6ca2\u5c71\u5fc5\u8981\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30c6\u30b9\u30c8\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u3001collect asDate \u306b\u3088\u308b\u65b9\u6cd5\uff08collect\u306e\u5909\u63db\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5916\u51fa\u3057\uff09\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\uff08\u5b9f\u969b\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3067\u306f Date \u3058\u3083\u306a\u3044\u30af\u30e9\u30b9\u3067\u3059\uff09\u3002\nGroovy \u306f Gradle \u3068 Spock \u306b\u3057\u304b\u4f7f\u3063\u3066\u306a\u3044\u5f31\u8005\u306a\u306e\u3067\u3001\u5f37\u3044\u4eba\u304c\u63a1\u7528\u3057\u3066\u3044\u308b\u65b9\u6cd5\u3092\u77e5\u308a\u305f\u3044\u3068\u601d\u3063\u3066\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\nJava \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30c6\u30b9\u30c8\u3092 Groovy (spock) \u3067\u66f8\u304f\u306e\u306f\u6614\u304b\u3089\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u4e0b\u3059\u969b\u306e\u5de5\u592b\u3092\u30e1\u30e2\u3057\u307e\u3059\u3002\n\n## \u30c6\u30b9\u30c8\u5bfe\u8c61\u30d7\u30ed\u30b0\u30e9\u30e0\n\n```FirstDate.java\npackage example;\n\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.Date;\nimport java.util.List;\n\npublic class FirstDate {\n    /**\n     * \u30c6\u30b9\u30c8\u5bfe\u8c61\u30e1\u30bd\u30c3\u30c9\u3002\n     * \u4e0e\u3048\u3089\u308c\u305f\u65e5\u4ed8\u306e\u30ea\u30b9\u30c8\u304b\u3089\u4e00\u756a\u904e\u53bb\u306e\u3082\u306e\u3092\u8fd4\u3059\n     */\n    public static Date firstDate(List<Date> dates) {\n        List<Date> copy = new ArrayList<>(dates);\n        copy.sort(Comparator.<Date>naturalOrder());\n        return copy.get(0);\n    }\n}\n```\n\u3053\u306e `firstDate` \u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\n```FirstDateSpec.groovy\npackage example\n\nimport spock.lang.Specification\n\nclass FirstDateSpec extends Specification {\n    // \u3053\u3053\u306b\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u8db3\u3057\u3066\u3044\u304d\u307e\u3059\n}\n```\n\n\u3053\u3053\u306b\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u8db3\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u666e\u901a\u306e\u3084\u308a\u65b9\n\n```groovy\ndef \"\u57fa\u672c\u5f62\"() {\n    given:\n    def dates = [new Date('2015/5/5'), new Date('2015/1/1'), new Date('2015/10/10'), new Date('2015/11/3')]\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == new Date('2015/1/1')\n}\n```\n\n`new Date` \u304c\u6ca2\u5c71\u3067\u3066\u304d\u3066\u3046\u3063\u3068\u304a\u3057\u3044\u3067\u3059\u306d\u3002\u3053\u306e\u90aa\u9b54\u306a `new Date` \u3092\u524a\u6e1b\u3057\u3066\u3044\u304f\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\n## `new Date` \u3092 `as Date` \u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\n```groovy\ndef setup() {\n    String.metaClass.define {\n        def originalAsType = String.metaClass.getMetaMethod('asType', [] as Class[])\n        asType = { Class c ->\n            if (c == Date) {\n                new Date(delegate)\n            } else {\n                originalAsType.invoke(delegate, c)\n            }\n        }\n    }\n}\n\ndef \"as\u3067\u5909\u63db\"() {\n    given:\n    def dates = ['2015/5/5' as Date, '2015/1/1' as Date, '2015/10/10' as Date, '2015/11/3' as Date]\n    \n    when:\n    def firstDate = FirstDate.firstDate(dates)\n    \n    then:\n    firstDate == '2015/1/1' as Date\n}\n```\n\nGroovy \u30d1\u30ef\u30fc\u3067 `String` \u3092 `as` \u3067 `Date` \u306b\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u3042\u3093\u307e\u308a\u898b\u305f\u76ee\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u306d\u3002\n\u3067\u3082\u3053\u306e as \u306f\u4e0b\u6e96\u5099\u3067\u3059\u3002\n\n## `collect` \u3067 `List<String>` \u3092 `List<Date>` \u306b\u3059\u308b1\n```groovy\ndef \"collect\u3067\u5909\u63db1\"() {\n    given:\n    def dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].collect { new Date(it) }\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n```\n\n\u4e00\u6c17\u306b\u90aa\u9b54\u8005\u304c\u6e1b\u308a\u307e\u3057\u305f\u306d\u3002\n\n## `collect` \u3067 `List<String>` \u3092 `List<Date>` \u306b\u3059\u308b2\n\n```groovy\ndef \"collect\u3067\u5909\u63db2\"() {\n    given:\n    def dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].collect { it as Date }\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n```\n\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u4e2d\u3067\u3082 as \u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n## `collect`\u306e\u5909\u63db\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5916\u51fa\u3057\n\n```groovy\ndef \"collect\u306e\u5909\u63db\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5916\u51fa\u3057\u3057\u3066\u5909\u63db\"() {\n    def asDate = { it as Date }\n\n    given:\n    def dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].collect asDate\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n```\n\n\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5909\u6570\u306b\u5165\u308c\u3066\u307f\u307e\u3057\u305f\u3002`List<Date>` \u3092\u6ca2\u5c71\u4f5c\u308a\u305f\u3044\u3068\u304d\u306f\u3061\u3087\u3063\u3068\u7c21\u6f54\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u306a\u304a\u3001\u3053\u306e\u4f8b\u306e\u5834\u5408\u3067\u30af\u30ed\u30fc\u30b8\u30e3\u90e8\u5206\u304c `{new Date(it)}` \u3060\u3068 it \u306e\u578b\u304c\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u8b66\u544a\u304c\u51fa\u307e\u3059\u3002\n\n## static method \u3067\u5909\u63db\n\n```groovy\nstatic <T> List<T> memberAs(List<String> l, Class<T> c) {\n    return l.collect({ it.asType(c) })\n}\n\ndef \"staticMethod\u3067\u5909\u63db\"() {\n    given:\n    def dates = memberAs(['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'], Date)\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n```\n\n\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u3082\u3067\u304d\u307e\u3059\u304c\u3001memberAs \u306e\u547c\u3073\u51fa\u3057\u65b9\u304c\u306a\u3093\u3068\u306a\u304f\u30c0\u30b5\u3055\u3092\u91b8\u3057\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u547c\u3073\u51fa\u3057\u306f Groovy \u306e\u30d1\u30ef\u30fc\u3067\u30c0\u30b5\u304f\u306a\u304f\u3059\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\n## Category \u3068 use \u3067\u5909\u63db\n\n```groovy\n@Category(List)\nclass ListMemberAs {\n    public <T> List<T> memberAs(Class<T> c) {\n        return this.collect({ it.asType(c) })\n    }\n}\n\ndef \"Category\u3067\u5909\u63db\"() {\n    given:\n    List<Date> dates = null\n    use(ListMemberAs) {\n        dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].memberAs(Date)\n    }\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n```\n\nGroovy \u306e Category \u3092\u4f7f\u3048\u3070\u30ea\u30b9\u30c8\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u305f\u3088\u3046\u306b\u898b\u305b\u304b\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u547c\u3073\u51fa\u3057\u3057\u3066\u3044\u308b\u90e8\u5206\u3092 `use` \u3068\u30af\u30ed\u30fc\u30b8\u30e3\u3067\u56f2\u3046\u5fc5\u8981\u304c\u3042\u308a\u3001 dates \u306e\u5ba3\u8a00\u90e8\u5206\u306a\u3069\u306b\u30c0\u30b5\u3055\u304c\u6b8b\u308a\u307e\u3059\u3002\n\u306a\u304a `given`, `when`, `then` \u3092\u542b\u3080\u5168\u4f53\u3092 use \u3067\u56f2\u3046\u3068 spock \u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u4f8b\u306b\u306f\u305d\u3050\u308f\u306a\u3044\u3067\u3059\u304c\u3001Groovy \u306e Category \u3068 use \u306b\u306f\u53ef\u80fd\u6027\u3092\u611f\u3058\u307e\u3059\u3002\n\n## Category \u3092 Use \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u9069\u7528\n\n```groovy\nimport spock.util.mop.Use\n\n@Use(ListMemberAs)\ndef \"Category\u3092Use\u3067\u9069\u7528\u3057\u3066\u5909\u63db\"() {\n    given:\n    List<Date> dates = ['2015/5/5', '2015/1/1', '2015/10/10', '2015/11/3'].memberAs(Date)\n\n    when:\n    def firstDate = FirstDate.firstDate(dates)\n\n    then:\n    firstDate == '2015/1/1' as Date\n}\n```\n\n\u898b\u305f\u76ee\u7684\u306b\u306f\u5b8c\u74a7\u3067\u3059\u304c\u3001Intellij IDEA \u3055\u3093\u304c\u3001\u300cList \u306b\u306f memberAs \u306a\u3093\u3066\u306a\u3044\u3088\uff1f\u300d\u3068\u3044\u3046\u8b66\u544a\u3092\u51fa\u3057\u3084\u304c\u308a\u307e\u3059\u3002\u307e\u305f\u3001dates \u306b\u578b\u306e\u5ba3\u8a00 `List<Date>` \u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3092 `def` \u306b\u3059\u308b\u3068\u300cdates \u306e\u578b\u304c\u7279\u7684\u3067\u304d\u306a\u3044\u3088\uff1f\u300d\u3068\u3044\u3046\u8b66\u544a\u3092\u51fa\u3057\u3084\u304c\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u30c6\u30b9\u30c8\u3067\u306f\u554f\u984c\u304c\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spock \u306e\u30c7\u30fc\u30bf\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u3084\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u76f4\u63a5\u6e21\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u3001\u578b\u5ba3\u8a00\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068 `dates` \u306b\u95a2\u9023\u3059\u308b\u547c\u3073\u51fa\u3057\u3067\u828b\u3065\u308b\u5f0f\u306b\u578b\u63a8\u8ad6\u304c\u52b9\u304b\u306a\u304f\u306a\u3063\u3066\u4f7f\u3044\u52dd\u624b\u304c\u843d\u3061\u3066\u3057\u307e\u3046\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n# \u73fe\u6642\u70b9\u3067\u306e\u81ea\u5206\u306e\u63a1\u7528\u3057\u3066\u3044\u308b\u65b9\u6cd5\n\n`List<Date>` \u304c\u6ca2\u5c71\u5fc5\u8981\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30c6\u30b9\u30c8\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u3001`collect asDate` \u306b\u3088\u308b\u65b9\u6cd5\uff08collect\u306e\u5909\u63db\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5916\u51fa\u3057\uff09\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\uff08\u5b9f\u969b\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3067\u306f Date \u3058\u3083\u306a\u3044\u30af\u30e9\u30b9\u3067\u3059\uff09\u3002\n\nGroovy \u306f Gradle \u3068 Spock \u306b\u3057\u304b\u4f7f\u3063\u3066\u306a\u3044\u5f31\u8005\u306a\u306e\u3067\u3001\u5f37\u3044\u4eba\u304c\u63a1\u7528\u3057\u3066\u3044\u308b\u65b9\u6cd5\u3092\u77e5\u308a\u305f\u3044\u3068\u601d\u3063\u3066\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n", "tags": ["Java", "Groovy", "spock"]}