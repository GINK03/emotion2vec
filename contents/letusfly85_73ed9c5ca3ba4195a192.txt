{"context": "\u5099\u5fd8\u3068\u306a\u308a\u307e\u3059\u3002\nremove\u51e6\u7406\u3092\u5165\u308c\u306a\u3044\u3068\u3001\u305a\u3093\u305a\u3093\u305a\u3093\u305a\u3093\u56f3\u5f62\u304c\u9ed2\u305a\u3093\u3067\u3044\u304d\u307e\u3059\u3002\u3002\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>Line Chart</title>\n    <style>\n        svg {\n            width: 380px;\n            height: 240px;\n            border: 1px solid skyblue;\n        }\n        .line {\n            fill: none;\n            stroke: black;\n        }\n        .axis text {\n            font-family: sans-serif;\n            font-size: 11px;\n        }\n        .axis path,\n        .alis line {\n            fill: none;\n            stroke: black;\n        }\n        .axis_x line {\n            fill: none;\n            stroke: black;\n        }\n    </style>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n\n<body>\n    <h1>Line Chart</h1>\n    <svg id=\"myGraph\"></svg>\n    <script src=\"js/line_chart.js\"></script>\n</body>\n\n</html>\n\n\nline_chart.js\nvar svgWidth = 320;\nvar svgHeight = 240;\nvar offsetX = 30;\nvar offsetY = 20;\nvar scale = 2.0;\nvar dataSet1 = [10, 47, 65, 8, 64, 99, 75, 22, 63, 80];\nvar dataSet2 = [10, 48, 67, 18, 74, 20, 80, 22, 63, 80];\nvar margin = svgWidth / (dataSet1.length - 1);\n\nvar t = 0;\nvar x = 0;\nvar yScale = d3.scale.linear()\n    .domain([0, 100])\n    .range([scale * 100, 0])\n\nd3.select(\"#myGraph\")\n    .append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", \"translate(\" + offsetX + \", \" + offsetY + \")\")\n    .call(\n        d3.svg.axis()\n        .scale(yScale)\n        .orient(\"left\")\n    )\n\nd3.select(\"#myGraph\")\n    .append(\"rect\")\n    .attr(\"class\", \"axis_x\")\n    .attr(\"width\", svgWidth)\n    .attr(\"height\", 1)\n    .attr(\"transform\", \"translate(\" + offsetX + \", \" + (svgHeight - offsetY - 0.5) + \")\")\n\nfunction draw(dataSet) {\n    var line = d3.svg.line()\n        .x(function(d, i) {\n            return offsetX + i * margin;\n        })\n        .y(function(d, i) {\n            return svgHeight - (d * scale) - offsetY;\n        })\n        .interpolate(\"basis\")\n\n    var lineElements = d3.selectAll(\"#myGraph\")\n        .append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", line(dataSet))\n}\n\nd3.timer(function() {\n    if (t > 1.0) {\n        console.log(t);\n        t = 0\n        x += 1;\n\n        if (x % 2 == 0) {\n            d3.selectAll(\"path\").remove();\n            draw(dataSet1)\n\n        } else {\n            d3.selectAll(\"path\").remove();\n            draw(dataSet2)\n        }\n    }\n\n    t += 0.02;\n\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u56f3\u304c\u4ea4\u4e92\u306b\u7e70\u308a\u8fd4\u3055\u308c\u7d9a\u3051\u307e\u3059\u3002\u304a\u30fc\u3002\n\n\u5099\u5fd8\u3068\u306a\u308a\u307e\u3059\u3002\n\nremove\u51e6\u7406\u3092\u5165\u308c\u306a\u3044\u3068\u3001\u305a\u3093\u305a\u3093\u305a\u3093\u305a\u3093\u56f3\u5f62\u304c\u9ed2\u305a\u3093\u3067\u3044\u304d\u307e\u3059\u3002\u3002\n\n```html\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>Line Chart</title>\n    <style>\n        svg {\n            width: 380px;\n            height: 240px;\n            border: 1px solid skyblue;\n        }\n        .line {\n            fill: none;\n            stroke: black;\n        }\n        .axis text {\n            font-family: sans-serif;\n            font-size: 11px;\n        }\n        .axis path,\n        .alis line {\n            fill: none;\n            stroke: black;\n        }\n        .axis_x line {\n            fill: none;\n            stroke: black;\n        }\n    </style>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n</head>\n\n<body>\n    <h1>Line Chart</h1>\n    <svg id=\"myGraph\"></svg>\n    <script src=\"js/line_chart.js\"></script>\n</body>\n\n</html>\n```\n\n```line_chart.js\nvar svgWidth = 320;\nvar svgHeight = 240;\nvar offsetX = 30;\nvar offsetY = 20;\nvar scale = 2.0;\nvar dataSet1 = [10, 47, 65, 8, 64, 99, 75, 22, 63, 80];\nvar dataSet2 = [10, 48, 67, 18, 74, 20, 80, 22, 63, 80];\nvar margin = svgWidth / (dataSet1.length - 1);\n\nvar t = 0;\nvar x = 0;\nvar yScale = d3.scale.linear()\n    .domain([0, 100])\n    .range([scale * 100, 0])\n\nd3.select(\"#myGraph\")\n    .append(\"g\")\n    .attr(\"class\", \"axis\")\n    .attr(\"transform\", \"translate(\" + offsetX + \", \" + offsetY + \")\")\n    .call(\n        d3.svg.axis()\n        .scale(yScale)\n        .orient(\"left\")\n    )\n\nd3.select(\"#myGraph\")\n    .append(\"rect\")\n    .attr(\"class\", \"axis_x\")\n    .attr(\"width\", svgWidth)\n    .attr(\"height\", 1)\n    .attr(\"transform\", \"translate(\" + offsetX + \", \" + (svgHeight - offsetY - 0.5) + \")\")\n\nfunction draw(dataSet) {\n    var line = d3.svg.line()\n        .x(function(d, i) {\n            return offsetX + i * margin;\n        })\n        .y(function(d, i) {\n            return svgHeight - (d * scale) - offsetY;\n        })\n        .interpolate(\"basis\")\n\n    var lineElements = d3.selectAll(\"#myGraph\")\n        .append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", line(dataSet))\n}\n\nd3.timer(function() {\n    if (t > 1.0) {\n        console.log(t);\n        t = 0\n        x += 1;\n\n        if (x % 2 == 0) {\n            d3.selectAll(\"path\").remove();\n            draw(dataSet1)\n\n        } else {\n            d3.selectAll(\"path\").remove();\n            draw(dataSet2)\n        }\n    }\n\n    t += 0.02;\n```\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u56f3\u304c\u4ea4\u4e92\u306b\u7e70\u308a\u8fd4\u3055\u308c\u7d9a\u3051\u307e\u3059\u3002\u304a\u30fc\u3002\n\n![Screenshot from 2016-04-25 16-19-16.png](https://qiita-image-store.s3.amazonaws.com/0/49547/853f1f93-5ac8-c6c5-5a47-26317c2d9791.png)![Screenshot from 2016-04-25 16-20-58.png](https://qiita-image-store.s3.amazonaws.com/0/49547/496e8f70-4419-d78c-9d5f-05624080d58c.png)\n\n", "tags": ["d3.js", "JavaScript"]}