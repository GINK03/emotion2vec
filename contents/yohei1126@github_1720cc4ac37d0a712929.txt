{"context": "\n\n\u5229\u7528\u30c4\u30fc\u30eb\u7fa4\n\n\nkarma\u30fb\u30fb\u30fb\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3002\u3082\u3068\u3082\u3068\u306fAngularJS\u306e\u30c1\u30fc\u30e0\u304c\u958b\u767a\u3057\u305f\u3002\n\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\u306e\u6d41\u308c\u3092\u7ba1\u7406\u3059\u308b\u3002\n\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u547c\u3073\u51fa\u3057\u305f\u308a\u3001\u30d6\u30e9\u30a6\u30b6\u5411\u3051\u30c6\u30b9\u30c8\u6642\u306b\u30d6\u30e9\u30a6\u30b6\u3092\u8d77\u52d5\u3057\u305f\u308a\u3059\u308b\u3002\n\n\n\nmocha\u30fb\u30fb\u30fb\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\n\n\nBDD \u3084 TDD \u306a\u3069\u3092\u53ef\u80fd\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\n\n\n\npower-assert\u30fb\u30fb\u30fb\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\n\n\u30c6\u30b9\u30c8\u3067\u5229\u7528\u3059\u308b\u4fbf\u5229\u306a\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u7fa4\u3092\u307e\u3068\u3081\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\n\n\nwebpack\u30fb\u30fb\u30fb\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5358\u4e00\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u307e\u3068\u3081\u308b\u3002\n\n\n\u53c2\u8003URL\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\nTypeScript + power-assert + Mocha + Karma + webpack \u3092\u4f7f\u3063\u3066\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067JavaScript\u3092\u30c6\u30b9\u30c8\u3059\u308b\n\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\n\napp.ts\u304c\u5f8c\u3005\u3001webpack\u3067\u30d0\u30f3\u30c9\u30eb\u306b\u307e\u3068\u3081\u308b\u969b\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nsrc/browser/app.ts\nimport {sub} from \"./sub\";\nimport {add} from \"./add\";\nconsole.log(\"add = \" + add(2, 3));\nconsole.log(\"sub = \" + sub(2, 3));\n\n\n\nsrc/browser/add.ts\nexport function add(x: number, y: number): number {\n    return x + y;\n}\n\n\n\nsrc/browser/sub.ts\nexport function sub(x: number, y: number): number {\n    return x - y;\n}\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\ntest/browser/add.spec.ts\nimport * as assert from \"power-assert\";\nimport {add} from \"../../src/browser/add\";\n\nit(\"2 + 3 = 5\", () => {\n    assert(add(2, 3) == 5);\n});\n\n\n\ntest/browser/sub.spec.ts\nimport * as assert from \"power-assert\";\nimport {sub} from \"../../src/browser/sub\";\n\nit(\"2 - 3 = -1\", () => {\n    assert(sub(2, 3) == -1);\n});\n\n\n\nnpm\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n@types/mocha\u3001@types/power-assert\u306f\u305d\u308c\u305e\u308cmocha\u3068power-assert\u306e\u578b\u5b9a\u7fa9\u30e9\u30a4\u30d6\u30e9\u30ea\u3002TypeScript\u3067\u53c2\u7167\u3059\u308b\u969b\u306b\u5fc5\u8981\u3002\n\nnpm install @types/mocha @types/power-assert mocha power-assert intelli-espower-loader typescript --save-dev\n\n\nTypeScript\u30b3\u30fc\u30c9\u3092\u30d3\u30eb\u30c9\u3059\u308b\n\n\u51fa\u529b\u5148\u3092dist\u3068\u3059\u308b\u3002\nTypeScript2\u4ee5\u964d\u306f\u3001types\u3068\u3057\u3066mocha\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u3042\u308a\u3002\n\n\ntscconfig.json\n{\n    \"compilerOptions\": {\n        \"noImplicitAny\": true,\n        \"noImplicitReturns\": true,\n        \"types\": [\n            \"mocha\"\n        ],\n        \"outDir\": \"./dist\"\n    },\n    \"exclude\": [\n        \"node_modules\"\n    ]\n}\n\n\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3001TypeScript\u306e\u30b3\u30fc\u30c9\u304c\u30d3\u30eb\u30c9\u3055\u308c\u3001JavaScript\u30b3\u30fc\u30c9\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\n\n$(npm bin)/tsc -p .\n\n\nmocha \u3068 power-assert \u3092\u4f7f\u3044\u3001 Node.js \u4e0a\u3067\u5b9f\u884c\u3059\u308b\n\nmocha \u306b\u306f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306eJavaScript\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u3042\u308a\u3002\n\n\nfind \u30b3\u30de\u30f3\u30c9\u3067\u30de\u30c3\u30c1\u3059\u308b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u6e21\u3059\u3053\u3068\u3082\u53ef\u80fd\u3002\n\n\n\n$ $(npm bin)/mocha --require intelli-espower-loader $(find ./dist/test -name '*.js')\n\n\n  \u2713 2 + 3 = 5\n  \u2713 2 - 3 = -1\n\n  2 passing (9ms)\n\n\nKarma\u3092\u4f7f\u3063\u3066\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\n\nkarma\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u3002\n\n\n\u4eca\u56de\u306f\u3001Web\u30d6\u30e9\u30a6\u30b6\u306e\u30c6\u30b9\u30c8\u306fChrome\u306e\u307f\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u30d6\u30e9\u30a6\u30b6\u3067\u3082\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u4ed6\u306elancher\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u304c\u30ed\u30fc\u30ab\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u5b9f\u884c\u3067\u304d\u306a\u3044\u3002\nkarma-firefox-launcher\nkarma-safari-launcher\nkarma-ie-launcher\nkarma-phantomjs-launcher\n\n\n\n$ (npm bin)/karma init\n\nWhich testing framework do you want to use ?\nPress tab to list possible options. Enter to move to the next question.\n> mocha\n\nDo you want to use Require.js ?\nThis will add Require.js plugin.\nPress tab to list possible options. Enter to move to the next question.\n> no\n\nDo you want to capture any browsers automatically ?\nPress tab to list possible options. Enter empty string to move to the next question.\n> Chrome\n> \n\nWhat is the location of your source and test files ?\nYou can use glob patterns, eg. \"js/*.js\" or \"test/**/*Spec.js\".\nEnter empty string to move to the next question.\n> test/browser/*.ts\n> \n\nShould any of the files included by the previous patterns be excluded ?\nYou can use glob patterns, eg. \"**/*.swp\".\nEnter empty string to move to the next question.\n> \n\nDo you want Karma to watch all the files and run the tests on change ?\nPress tab to list possible options.\n> yes\n\nConfig file generated at \"/??/karma.conf.js\".\n\n\nkarma.conf.js\u304c\u751f\u6210\u3055\u308c\u308b\u3002\nwebpack\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u3001preprocessors\u306e\u7b87\u6240\u306bwebpack\u306e\u8a2d\u5b9a\u3092\u8ffd\u8a18\u3057\u3066\u3044\u308b\u3002\nTypeScript\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u306b\u306fmime\u306e\u8a2d\u5b9a\u3082\u5fc5\u8981\u3002\n\n\nkarma.conf.js\n// Karma configuration\n// Generated on Fri Jul 29 2016 21:29:35 GMT+0900 (JST)\n\nmodule.exports = function (config) {\n  config.set({\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['mocha'],\n\n\n    // list of files / patterns to load in the browser\n    files: [\n      'test/browser/*.ts'\n    ],\n\n\n    // list of files to exclude\n    exclude: [\n    ],\n\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n      'test/browser/*.ts': ['webpack'],\n    },\n\n\n    webpack: require(__dirname + '/webpack.config.js'),\n\n\n    // https://github.com/angular/angular-cli/issues/2125#issuecomment-247395088\n    mime: {\n      'text/x-typescript': ['ts', 'tsx']\n    },\n\n\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['progress'],\n\n\n    // web server port\n    port: 9876,\n\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: true,\n\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: ['Chrome'],\n\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: true,\n\n    // Concurrency level\n    // how many browser should be started simultaneous\n    concurrency: Infinity\n  })\n}\n\n\n\n\nkarama init \u5b9f\u884c\u5f8c\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u518d\u5ea6\u3001npm install\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3002\n\n$ npm install\n\n\n\u6700\u7d42\u7684\u306a package.json \u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n\npackage.json\n{\n  \"devDependencies\": {\n    \"@types/mocha\": \"^2.2.33\",\n    \"@types/power-assert\": \"^1.4.29\",\n    \"intelli-espower-loader\": \"^1.0.1\",\n    \"json-loader\": \"^0.5.4\",\n    \"karma\": \"^1.3.0\",\n    \"karma-chrome-launcher\": \"^2.0.0\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"karma-webpack\": \"^1.8.0\",\n    \"mocha\": \"^3.2.0\",\n    \"power-assert\": \"^1.4.2\",\n    \"ts-loader\": \"^1.3.3\",\n    \"typescript\": \"^2.1.4\",\n    \"webpack\": \"^1.14.0\",\n    \"webpack-espower-loader\": \"^1.0.1\"\n  },\n  \"scripts\": {\n    \"test\": \"karma start --single-run\"\n  }\n}\n\n\n\nkarma\u304b\u3089\u5b9f\u884c\u3055\u308c\u308b\u3001webpack\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\napp.ts\u3092bundle\u306b\u307e\u3068\u3081\u308b\u3002\nmodule loarders\u3092\u8ffd\u8a18\u3057\u3066\u3044\u308b\u3002\n\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30b3\u30fc\u30c9\u306f\uff0cts-loader\u3067TypeScript\u304b\u3089JavaScript\u306b\u5909\u63db\u3057\u305f\u5f8c\u306bwebpack-espower-loader\u3067power-assert\u7528\u306b\u5909\u63db\u3059\u308b\u3002\n\n\n\n\nwebpack.conf.js\nmodule.exports = {\n  entry: {\n    app: __dirname + '/src/browser/app.ts',\n  },\n  output: {\n    path: __dirname + '/dist',\n    filename: \"[name].bundle.js\",\n  },\n  resolve: {\n    extensions: ['', '.ts', '.js'],\n  },\n  module: {\n    loaders: [\n      { test: /\\.ts$/, loader: 'ts-loader' },\n      { test: /\\.json$/, loader: 'json-loader' },\n    ],\n    postLoaders: [\n      { test: /_test\\.ts$/, loader: 'webpack-espower-loader' },\n    ],\n  },\n};\n\n\n\nkarma\u3092\u8d77\u52d5\u3059\u308b\u3068Web\u30d6\u30e9\u30a6\u30b6\u304c\u7acb\u3061\u4e0a\u304c\u308a\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n$(npm bin)/karma start\n\uff08\u7701\u7565\uff09\n20 12 2016 23:36:06.276:INFO [karma]: Karma v1.3.0 server started at http://localhost:9876/\n20 12 2016 23:36:06.279:INFO [launcher]: Launching browser Chrome with unlimited concurrency\n20 12 2016 23:36:06.287:INFO [launcher]: Starting browser Chrome\n20 12 2016 23:36:07.513:INFO [Chrome 55.0.2883 (Mac OS X 10.12.2)]: Connected on socket /#5Kf5li8bV2zNxwJJAAA\nA with id 64264329\nChrome 55.0.2883 (Mac OS X 10.12.2): Executed 2 of 2 SUCCESS (0.004 secs / 0.003 secs)\n\n\n# \u5229\u7528\u30c4\u30fc\u30eb\u7fa4\n\n* [karma](https://karma-runner.github.io/1.0/index.html)\u30fb\u30fb\u30fb\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3002\u3082\u3068\u3082\u3068\u306fAngularJS\u306e\u30c1\u30fc\u30e0\u304c\u958b\u767a\u3057\u305f\u3002\n\t* \u30c6\u30b9\u30c8\u5b9f\u884c\u306e\u6d41\u308c\u3092\u7ba1\u7406\u3059\u308b\u3002\n\t* \u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u547c\u3073\u51fa\u3057\u305f\u308a\u3001\u30d6\u30e9\u30a6\u30b6\u5411\u3051\u30c6\u30b9\u30c8\u6642\u306b\u30d6\u30e9\u30a6\u30b6\u3092\u8d77\u52d5\u3057\u305f\u308a\u3059\u308b\u3002\n* [mocha](https://mochajs.org/)\u30fb\u30fb\u30fb\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\n\t* BDD \u3084 TDD \u306a\u3069\u3092\u53ef\u80fd\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\n* [power-assert](https://github.com/power-assert-js/power-assert)\u30fb\u30fb\u30fb\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\t* \u30c6\u30b9\u30c8\u3067\u5229\u7528\u3059\u308b\u4fbf\u5229\u306a\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u7fa4\u3092\u307e\u3068\u3081\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n* [webpack](https://webpack.js.org/)\u30fb\u30fb\u30fb\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5358\u4e00\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u307e\u3068\u3081\u308b\u3002\n\n# \u53c2\u8003URL\n\n \u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n* [TypeScript + power-assert + Mocha + Karma + webpack \u3092\u4f7f\u3063\u3066\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067JavaScript\u3092\u30c6\u30b9\u30c8\u3059\u308b](http://kujira16.hateblo.jp/entry/2016/07/29/215735)\n\n# \u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\n\n* app.ts\u304c\u5f8c\u3005\u3001webpack\u3067\u30d0\u30f3\u30c9\u30eb\u306b\u307e\u3068\u3081\u308b\u969b\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\n```src/browser/app.ts\nimport {sub} from \"./sub\";\nimport {add} from \"./add\";\nconsole.log(\"add = \" + add(2, 3));\nconsole.log(\"sub = \" + sub(2, 3));\n```\n\n```src/browser/add.ts\nexport function add(x: number, y: number): number {\n    return x + y;\n}\n```\n\n```src/browser/sub.ts\nexport function sub(x: number, y: number): number {\n    return x - y;\n}\n```\n\n# \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n```test/browser/add.spec.ts\nimport * as assert from \"power-assert\";\nimport {add} from \"../../src/browser/add\";\n\nit(\"2 + 3 = 5\", () => {\n    assert(add(2, 3) == 5);\n});\n```\n\n```test/browser/sub.spec.ts\nimport * as assert from \"power-assert\";\nimport {sub} from \"../../src/browser/sub\";\n\nit(\"2 - 3 = -1\", () => {\n    assert(sub(2, 3) == -1);\n});\n```\n\n# npm\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n* @types/mocha\u3001@types/power-assert\u306f\u305d\u308c\u305e\u308cmocha\u3068power-assert\u306e\u578b\u5b9a\u7fa9\u30e9\u30a4\u30d6\u30e9\u30ea\u3002TypeScript\u3067\u53c2\u7167\u3059\u308b\u969b\u306b\u5fc5\u8981\u3002\n\n```\nnpm install @types/mocha @types/power-assert mocha power-assert intelli-espower-loader typescript --save-dev\n```\n\n# TypeScript\u30b3\u30fc\u30c9\u3092\u30d3\u30eb\u30c9\u3059\u308b\n\n* \u51fa\u529b\u5148\u3092dist\u3068\u3059\u308b\u3002\n* TypeScript2\u4ee5\u964d\u306f\u3001[types\u3068\u3057\u3066mocha\u3092\u6307\u5b9a\u3059\u308b](http://stackoverflow.com/questions/39816482/how-to-import-describe-and-it-from-mocha-in-typescript)\u5fc5\u8981\u3042\u308a\u3002\n\n```tscconfig.json\n{\n    \"compilerOptions\": {\n        \"noImplicitAny\": true,\n        \"noImplicitReturns\": true,\n        \"types\": [\n            \"mocha\"\n        ],\n        \"outDir\": \"./dist\"\n    },\n    \"exclude\": [\n        \"node_modules\"\n    ]\n}\n```\n\n* \u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3001TypeScript\u306e\u30b3\u30fc\u30c9\u304c\u30d3\u30eb\u30c9\u3055\u308c\u3001JavaScript\u30b3\u30fc\u30c9\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\n\n```\n$(npm bin)/tsc -p .\n```\n\n# mocha \u3068 power-assert \u3092\u4f7f\u3044\u3001 Node.js \u4e0a\u3067\u5b9f\u884c\u3059\u308b\n\n* mocha \u306b\u306f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306eJavaScript\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u3042\u308a\u3002\n\t* find \u30b3\u30de\u30f3\u30c9\u3067\u30de\u30c3\u30c1\u3059\u308b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u6e21\u3059\u3053\u3068\u3082\u53ef\u80fd\u3002\n\n```\n$ $(npm bin)/mocha --require intelli-espower-loader $(find ./dist/test -name '*.js')\n\n\n  \u2713 2 + 3 = 5\n  \u2713 2 - 3 = -1\n\n  2 passing (9ms)\n```\n\n# Karma\u3092\u4f7f\u3063\u3066\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\n\n* karma\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u3002\n  * \u4eca\u56de\u306f\u3001Web\u30d6\u30e9\u30a6\u30b6\u306e\u30c6\u30b9\u30c8\u306fChrome\u306e\u307f\u3002\n  * \u305d\u308c\u4ee5\u5916\u306e\u30d6\u30e9\u30a6\u30b6\u3067\u3082\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u4ed6\u306elancher\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u304c\u30ed\u30fc\u30ab\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u5b9f\u884c\u3067\u304d\u306a\u3044\u3002\n    * [karma-firefox-launcher](https://www.npmjs.com/package/karma-firefox-launcher)\n    * [karma-safari-launcher](https://www.npmjs.com/package/karma-safari-launcher)\n    * [karma-ie-launcher](https://www.npmjs.com/package/karma-ie-launcher)\n    * [karma-phantomjs-launcher](https://www.npmjs.com/package/karma-phantomjs-launcher)\n\n```\n$ (npm bin)/karma init\n\nWhich testing framework do you want to use ?\nPress tab to list possible options. Enter to move to the next question.\n> mocha\n\nDo you want to use Require.js ?\nThis will add Require.js plugin.\nPress tab to list possible options. Enter to move to the next question.\n> no\n\nDo you want to capture any browsers automatically ?\nPress tab to list possible options. Enter empty string to move to the next question.\n> Chrome\n> \n\nWhat is the location of your source and test files ?\nYou can use glob patterns, eg. \"js/*.js\" or \"test/**/*Spec.js\".\nEnter empty string to move to the next question.\n> test/browser/*.ts\n> \n\nShould any of the files included by the previous patterns be excluded ?\nYou can use glob patterns, eg. \"**/*.swp\".\nEnter empty string to move to the next question.\n> \n\nDo you want Karma to watch all the files and run the tests on change ?\nPress tab to list possible options.\n> yes\n\nConfig file generated at \"/??/karma.conf.js\".\n```\n\n* karma.conf.js\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n* webpack\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u3001preprocessors\u306e\u7b87\u6240\u306bwebpack\u306e\u8a2d\u5b9a\u3092\u8ffd\u8a18\u3057\u3066\u3044\u308b\u3002\n* TypeScript\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u306b\u306fmime\u306e\u8a2d\u5b9a\u3082\u5fc5\u8981\u3002\n\n```karma.conf.js\n// Karma configuration\n// Generated on Fri Jul 29 2016 21:29:35 GMT+0900 (JST)\n\nmodule.exports = function (config) {\n  config.set({\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['mocha'],\n\n\n    // list of files / patterns to load in the browser\n    files: [\n      'test/browser/*.ts'\n    ],\n\n\n    // list of files to exclude\n    exclude: [\n    ],\n\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n      'test/browser/*.ts': ['webpack'],\n    },\n\n\n    webpack: require(__dirname + '/webpack.config.js'),\n\n\n    // https://github.com/angular/angular-cli/issues/2125#issuecomment-247395088\n    mime: {\n      'text/x-typescript': ['ts', 'tsx']\n    },\n\n\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['progress'],\n\n\n    // web server port\n    port: 9876,\n\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: true,\n\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: ['Chrome'],\n\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: true,\n\n    // Concurrency level\n    // how many browser should be started simultaneous\n    concurrency: Infinity\n  })\n}\n\n```\n\n* karama init \u5b9f\u884c\u5f8c\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u518d\u5ea6\u3001npm install\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3002\n\n```\n$ npm install\n```\n\n* \u6700\u7d42\u7684\u306a package.json \u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n```package.json\n{\n  \"devDependencies\": {\n    \"@types/mocha\": \"^2.2.33\",\n    \"@types/power-assert\": \"^1.4.29\",\n    \"intelli-espower-loader\": \"^1.0.1\",\n    \"json-loader\": \"^0.5.4\",\n    \"karma\": \"^1.3.0\",\n    \"karma-chrome-launcher\": \"^2.0.0\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"karma-webpack\": \"^1.8.0\",\n    \"mocha\": \"^3.2.0\",\n    \"power-assert\": \"^1.4.2\",\n    \"ts-loader\": \"^1.3.3\",\n    \"typescript\": \"^2.1.4\",\n    \"webpack\": \"^1.14.0\",\n    \"webpack-espower-loader\": \"^1.0.1\"\n  },\n  \"scripts\": {\n    \"test\": \"karma start --single-run\"\n  }\n}\n```\n\n* karma\u304b\u3089\u5b9f\u884c\u3055\u308c\u308b\u3001webpack\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n* app.ts\u3092bundle\u306b\u307e\u3068\u3081\u308b\u3002\n* module loarders\u3092\u8ffd\u8a18\u3057\u3066\u3044\u308b\u3002\n\t* \u30c6\u30b9\u30c8\u7528\u306e\u30b3\u30fc\u30c9\u306f\uff0cts-loader\u3067TypeScript\u304b\u3089JavaScript\u306b\u5909\u63db\u3057\u305f\u5f8c\u306bwebpack-espower-loader\u3067power-assert\u7528\u306b\u5909\u63db\u3059\u308b\u3002\n\n```webpack.conf.js\nmodule.exports = {\n  entry: {\n    app: __dirname + '/src/browser/app.ts',\n  },\n  output: {\n    path: __dirname + '/dist',\n    filename: \"[name].bundle.js\",\n  },\n  resolve: {\n    extensions: ['', '.ts', '.js'],\n  },\n  module: {\n    loaders: [\n      { test: /\\.ts$/, loader: 'ts-loader' },\n      { test: /\\.json$/, loader: 'json-loader' },\n    ],\n    postLoaders: [\n      { test: /_test\\.ts$/, loader: 'webpack-espower-loader' },\n    ],\n  },\n};\n```\n\n* karma\u3092\u8d77\u52d5\u3059\u308b\u3068Web\u30d6\u30e9\u30a6\u30b6\u304c\u7acb\u3061\u4e0a\u304c\u308a\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n```\n$(npm bin)/karma start\n\uff08\u7701\u7565\uff09\n20 12 2016 23:36:06.276:INFO [karma]: Karma v1.3.0 server started at http://localhost:9876/\n20 12 2016 23:36:06.279:INFO [launcher]: Launching browser Chrome with unlimited concurrency\n20 12 2016 23:36:06.287:INFO [launcher]: Starting browser Chrome\n20 12 2016 23:36:07.513:INFO [Chrome 55.0.2883 (Mac OS X 10.12.2)]: Connected on socket /#5Kf5li8bV2zNxwJJAAA\nA with id 64264329\nChrome 55.0.2883 (Mac OS X 10.12.2): Executed 2 of 2 SUCCESS (0.004 secs / 0.003 secs)\n```\n", "tags": ["karma", "mocha", "webpack", "power-assert"]}