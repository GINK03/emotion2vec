{"tags": ["java,", "Mockito"], "context": " More than 1 year has passed since last update.JUnit\u3067Mockito\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u3092\u3057\u305f\u306e\u3067\u3001\u4f7f\u3044\u65b9\u3092\u30e1\u30e2\u30e1\u30e2\u3002\n\nNonStrictExpectations\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9(\u629c\u7c8b)\n@Mocked\nprotected TimeServiceImpl timeServiceImpl; // @Mock\u3067\u3001\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\n\n    @Test\n    public void doTest() {\n        new NonStrictExpectations() {\n            {\n                // \u547c\u3073\u51fa\u3057\u3059\u308b\u65e5\u4ed8\u3092\u30e2\u30c3\u30af\u5316\n                Date now = new Date();\n                timeServiceImpl.getCurrentTimeDate();\n                result = now; // getCurrentTimeDate()\u3092\u547c\u3093\u3060\u6642\u306b\u8fd4\u3063\u3066\u304d\u3066\u307b\u3057\u3044\u5024\u3092\u66f8\u304f\n            }\n        };\n        testService.testMethod();\n    }\n\n\n\u3053\u306e\u4e2d\u3067\u3001mock\u5316\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3001\u5909\u6570result\u306b\u671f\u5f85\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304b\u3089\u8a72\u5f53\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u6642\u306e\u7d50\u679c\u304cmock\u3055\u308c\u308b\u3002\n\nVerifications\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9(\u629c\u7c8b)\n@Mocked\nprotected CloseableHttpClient mockHttpClient; // @Mock\u3067\u3001\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\n\n    @Test\n    public void doTest() {\n        testService.testMethod();\n        new Verifications() {\n            {\n                List<HttpUriRequest> requestList = new ArrayList<>();\n\n                mockHttpClient.execute(withCapture(requestList));\n                times = 1; // \u547c\u3073\u51fa\u3057\u56de\u6570\u306e\u691c\u8a3c\n\n                HttpUriRequest request = requestList.get(0);\n                assertThat(request, instanceOf(HttpPost.class)); // \u578b\u306e\u691c\u8a3c\n\n                HttpPost post = (HttpPost) request;\n                assertThat(post.getURI().toString(), is(fixture.uri)); // URI\u691c\u8a3c\n            }\n        };\n    }\n\n\n\u691c\u8a3c\u7528\u3002\n\u3053\u306e\u4f8b\u3060\u3068\u3001\u300cmockHttpClient.execute\u300d\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u969b\u306e\u60c5\u5831\u3092requestList\u306b\u4fdd\u6301\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n\u305d\u306e\u5185\u5bb9\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u3001List\u304b\u3089\u53d6\u308a\u51fa\u3057\u3066\u691c\u8a3c\u3092\u3059\u308b\u3002\n\u4f8b\u3060\u3068get(0)\u3067\u30011\u56de\u76ee\u3057\u304b\u898b\u3066\u306a\u3044\u3051\u3069\u4f55\u5ea6\u3082\u547c\u3093\u3067\u308b\u5834\u5408\u306f\u62e1\u5f35for\u6587\u7b49\u3067\u5168\u90e8\u898b\u308b\u3002\n\u5909\u6570times\u306f\u3001\u8a72\u5f53\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u56de\u6570\u3067\u3001\u4ee3\u5165\u306e\u5f62\u3067\u691c\u8a3c\u304c\u3067\u304d\u308b\u3002(\u56de\u6570\u304c\u9055\u3063\u3066\u3044\u308b\u3068assert\u30a8\u30e9\u30fc\u3067JUnit\u5931\u6557\u306b\u306a\u308b)\n\nJUnit\u3067Mockito\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u3092\u3057\u305f\u306e\u3067\u3001\u4f7f\u3044\u65b9\u3092\u30e1\u30e2\u30e1\u30e2\u3002\n\n\n- NonStrictExpectations\n\n```Java:\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9(\u629c\u7c8b)\n@Mocked\nprotected TimeServiceImpl timeServiceImpl; // @Mock\u3067\u3001\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\n\n    @Test\n    public void doTest() {\n        new NonStrictExpectations() {\n            {\n                // \u547c\u3073\u51fa\u3057\u3059\u308b\u65e5\u4ed8\u3092\u30e2\u30c3\u30af\u5316\n                Date now = new Date();\n                timeServiceImpl.getCurrentTimeDate();\n                result = now; // getCurrentTimeDate()\u3092\u547c\u3093\u3060\u6642\u306b\u8fd4\u3063\u3066\u304d\u3066\u307b\u3057\u3044\u5024\u3092\u66f8\u304f\n            }\n        };\n        testService.testMethod();\n    }\n```\n\n\u3053\u306e\u4e2d\u3067\u3001mock\u5316\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3001\u5909\u6570result\u306b\u671f\u5f85\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304b\u3089\u8a72\u5f53\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u6642\u306e\u7d50\u679c\u304cmock\u3055\u308c\u308b\u3002\n\n- Verifications\n\n```Java:\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9(\u629c\u7c8b)\n@Mocked\nprotected CloseableHttpClient mockHttpClient; // @Mock\u3067\u3001\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\n\n    @Test\n    public void doTest() {\n        testService.testMethod();\n        new Verifications() {\n            {\n                List<HttpUriRequest> requestList = new ArrayList<>();\n                \n                mockHttpClient.execute(withCapture(requestList));\n                times = 1; // \u547c\u3073\u51fa\u3057\u56de\u6570\u306e\u691c\u8a3c\n                \n                HttpUriRequest request = requestList.get(0);\n                assertThat(request, instanceOf(HttpPost.class)); // \u578b\u306e\u691c\u8a3c\n        \n                HttpPost post = (HttpPost) request;\n                assertThat(post.getURI().toString(), is(fixture.uri)); // URI\u691c\u8a3c\n            }\n        };\n    }\n```\n\n\u691c\u8a3c\u7528\u3002\n\u3053\u306e\u4f8b\u3060\u3068\u3001\u300cmockHttpClient.execute\u300d\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u969b\u306e\u60c5\u5831\u3092requestList\u306b\u4fdd\u6301\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n\u305d\u306e\u5185\u5bb9\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u3001List\u304b\u3089\u53d6\u308a\u51fa\u3057\u3066\u691c\u8a3c\u3092\u3059\u308b\u3002\n\u4f8b\u3060\u3068get(0)\u3067\u30011\u56de\u76ee\u3057\u304b\u898b\u3066\u306a\u3044\u3051\u3069\u4f55\u5ea6\u3082\u547c\u3093\u3067\u308b\u5834\u5408\u306f\u62e1\u5f35for\u6587\u7b49\u3067\u5168\u90e8\u898b\u308b\u3002\n\u5909\u6570times\u306f\u3001\u8a72\u5f53\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u56de\u6570\u3067\u3001\u4ee3\u5165\u306e\u5f62\u3067\u691c\u8a3c\u304c\u3067\u304d\u308b\u3002(\u56de\u6570\u304c\u9055\u3063\u3066\u3044\u308b\u3068assert\u30a8\u30e9\u30fc\u3067JUnit\u5931\u6557\u306b\u306a\u308b)\n"}