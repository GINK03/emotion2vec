{"context": " More than 1 year has passed since last update.\u524d\u56de\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u305f\u30de\u30b9\u30af\u7d20\u6750\u3092\u4f5c\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u306e\u8aac\u660e\u3067\u3059\u3002\n\n\u958b\u767a\u74b0\u5883\nVisualStudio2008\nC#\n.NetFramwork 3.5\n\n\u6982\u8981\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u5165\u308c\u308b\u3068\u30de\u30b9\u30af\u753b\u50cf\u3092\u51fa\u529b\u3059\u308b\nCreateMask.exe [\u30de\u30b9\u30af\u5143\u306e\u30d5\u30a1\u30a4\u30eb]\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\n[-w] \u6a2a\u306b\u30de\u30b9\u30af\u3092\u6301\u3064\u753b\u50cf\u3092\u751f\u6210\n[-h] \u7e26\u306b\u30de\u30b9\u30af\u3092\u6301\u3064\u753b\u50cf\u3092\u751f\u6210\n[-o] [\u51fa\u529b\u30d5\u30a1\u30a4\u30eb] \u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u51fa\u529b(\u3053\u306e\u6307\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306b_m\u3092\u3064\u3051\u3066\u51fa\u529b)\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\n\nBitmap\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u53c2\u7167\u306e\u8a2d\u5b9a\u3067\u300cSystem.Drawing\u300d\u3092\u8ffd\u52a0\n\n\n\n\n\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30a2\u30f3\u30bb\u30fc\u30d5\u30b3\u30fc\u30c9\u306e\u8a31\u53ef\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\n\n\n\n\n\u30bd\u30fc\u30b9\n\nCreateMask.cs\nusing System;\nusing System.IO;\nusing System.Drawing;\nusing System.Drawing.Imaging;\n\nnamespace CreateMack\n{\n    class Program\n    {\n        /// <summary>\n        /// \u901a\u5e38\u306e\u30de\u30b9\u30af\u753b\u50cf\u751f\u6210\n        /// </summary>\n        /// <param name=\"src\">\u5165\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        /// <param name=\"dst\">\u51fa\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        static void CreateMaskNormal(BitmapData src, BitmapData dst)\n        {\n            unsafe\n            {\n                for (int y = 0; y < src.Height; ++y)\n                {\n                    byte* sp = (byte*)src.Scan0 + y * src.Stride;\n                    byte* dp = (byte*)dst.Scan0 + y * dst.Stride;\n                    for (int x = 0; x < src.Width; ++x)\n                    {\n                        dp[0] = dp[1] = dp[2] = sp[3];\n                        sp += 4;\n                        dp += 3;\n                    }\n                }\n            }\n        }\n\n        /// <summary>\n        /// \u6a2a\u306b\u30de\u30b9\u30af\u304c\u3042\u308b\u753b\u50cf\u751f\u6210\n        /// </summary>\n        /// <param name=\"src\">\u5165\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        /// <param name=\"dst\">\u51fa\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        static void CreateMaskWidth(BitmapData src, BitmapData dst)\n        {\n            unsafe\n            {\n                for (int y = 0; y < src.Height; ++y)\n                {\n                    byte* sp = (byte*)src.Scan0 + y * src.Stride;\n                    byte* dp = (byte*)dst.Scan0 + y * dst.Stride;\n                    byte* dpm = (byte*)dst.Scan0 + y * dst.Stride + src.Width * 3;\n                    for (int x = 0; x < src.Width; ++x)\n                    {\n                        // \u901a\u5e38\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n                        dp[0] = sp[0];\n                        dp[1] = sp[1];\n                        dp[2] = sp[2];\n                        // \u30de\u30b9\u30af\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n                        dpm[0] = dpm[1] = dpm[2] = sp[3];\n                        // \u30dd\u30a4\u30f3\u30bf\u79fb\u52d5\n                        sp += 4;\n                        dp += 3;\n                        dpm += 3;\n                    }\n                }\n            }\n        }\n\n        /// <summary>\n        /// \u7e26\u306b\u30de\u30b9\u30af\u304c\u3042\u308b\u753b\u50cf\u751f\u6210\n        /// </summary>\n        /// <param name=\"src\">\u5165\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        /// <param name=\"dst\">\u51fa\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        static void CreateMaskHeight(BitmapData src, BitmapData dst)\n        {\n            unsafe\n            {\n                for (int y = 0; y < src.Height; ++y)\n                {\n                    byte* sp = (byte*)src.Scan0 + y * src.Stride;\n                    byte* dp = (byte*)dst.Scan0 + y * dst.Stride;\n                    byte* dpm = (byte*)dst.Scan0 + (y + src.Height) * dst.Stride;\n                    for (int x = 0; x < src.Width; ++x)\n                    {\n                        // \u901a\u5e38\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n                        dp[0] = sp[0];\n                        dp[1] = sp[1];\n                        dp[2] = sp[2];\n                        // \u30de\u30b9\u30af\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n                        dpm[0] = dpm[1] = dpm[2] = sp[3];\n                        // \u30dd\u30a4\u30f3\u30bf\u79fb\u52d5\n                        sp += 4;\n                        dp += 3;\n                        dpm += 3;\n                    }\n                }\n            }\n        }\n\n        /// <summary>\n        /// \u30de\u30b9\u30af\u753b\u50cf\u306e\u751f\u6210\n        /// </summary>\n        /// <param name=\"in_file\">\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d</param>\n        /// <param name=\"out_file\">\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d</param>\n        /// <param name=\"w_scale\">\u5e45\u306e\u30b9\u30b1\u30fc\u30eb</param>\n        /// <param name=\"h_scale\">\u9ad8\u3055\u306e\u30b9\u30b1\u30fc\u30eb</param>\n        static void CreateMask(string in_file, string out_file, int w_scale, int h_scale)\n        {\n            // \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3092\u751f\u6210\n            Bitmap src_bmp = new Bitmap(in_file);\n            Bitmap dst_bmp = new Bitmap(src_bmp.Width * w_scale,\n                                        src_bmp.Height * h_scale,\n                                        System.Drawing.Imaging.PixelFormat.Format24bppRgb);\n            // \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf\u3092\u751f\u6210\n            var src = src_bmp.LockBits(new Rectangle(0, 0, src_bmp.Width, src_bmp.Height),\n                                       System.Drawing.Imaging.ImageLockMode.ReadOnly,\n                                       System.Drawing.Imaging.PixelFormat.Format32bppArgb);\n            var dst = dst_bmp.LockBits(new Rectangle(0, 0, dst_bmp.Width, dst_bmp.Height),\n                                       System.Drawing.Imaging.ImageLockMode.ReadOnly,\n                                       System.Drawing.Imaging.PixelFormat.Format24bppRgb);\n\n            // \u30de\u30b9\u30af\u3092\u66f8\u304d\u8fbc\u3080\n            if (w_scale != 1)      CreateMaskWidth(src, dst);   // \u6a2a\u306b\u30de\u30b9\u30af\u753b\u50cf\u3092\u4f5c\u308b\u5f62\u5f0f\n            else if (h_scale != 1) CreateMaskHeight(src, dst);  // \u7e26\u306b\u30de\u30b9\u30af\u753b\u50cf\u3092\u4f5c\u308b\u5f62\u5f0f\n            else                   CreateMaskNormal(src, dst);  // \u30de\u30b9\u30af\u753b\u50cf\u306e\u307f\u3092\u4f5c\u308b\u5f62\u5f0f\n\n            src_bmp.UnlockBits(src);\n            dst_bmp.UnlockBits(dst);\n\n            // \u4fdd\u5b58\u3057\u3066\u7d42\u4e86\n            dst_bmp.Save(out_file, System.Drawing.Imaging.ImageFormat.Png);\n            dst_bmp.Clone();\n            src_bmp.Clone();\n        }\n\n        /// <summary>\n        /// \u30e1\u30a4\u30f3\u95a2\u6570\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            bool w = false; // \u6a2a\u306b\u30de\u30b9\u30af\u3092\u4f5c\u6210\u306e\u6709\u7121\n            bool h = false; // \u7e26\u306b\u30de\u30b9\u30af\u3092\u4f5c\u6210\u306e\u6709\u7121\n            string in_file = \"\";    // \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n            string out_file = \"\";   // \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n            // \u5f15\u6570\u3092\u78ba\u8a8d\n            for (int i = 0; i < args.Length; ++i)\n            {\n                if (args[i] == \"-w\")      w = true;\n                else if (args[i] == \"-h\") h = true;\n                else if (args[i] == \"-o\") out_file = args[++i];\n                else                      in_file = args[i];\n            }\n\n            // \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306fHELP\u8868\u793a\n            if (in_file == \"\")\n            {\n                Console.WriteLine(\"CreateMask.exe [\u8aad\u307f\u8fbc\u3080\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d]\");\n                Console.WriteLine(\"-w                \u6a2a\u306b\u30de\u30b9\u30af\u3092\u751f\u6210\");\n                Console.WriteLine(\"-h                \u7e26\u306b\u30de\u30b9\u30af\u3092\u751f\u6210\");\n                Console.WriteLine(\"-o \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d  \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a2d\u5b9a\");\n                Console.WriteLine(\"                  \u8a2d\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306b_m\u304c\u8ffd\u52a0\u3055\u308c\u3066\u51fa\u529b\");\n                return;\n            }\n            if (out_file == \"\")\n            {\n                // \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u306a\u3044\u5834\u5408\u306f\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306b_m\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3092\u8a2d\u5b9a\n                out_file = Path.GetFileNameWithoutExtension(in_file) + \"_m.png\";\n            }\n            else if (Path.GetExtension(out_file) != \".png\")\n            {\n                // \u62e1\u5f35\u5b50\u306b.png\u3092\u8a2d\u5b9a\n                out_file = Path.GetFileNameWithoutExtension(out_file) + \".png\";\n            }\n\n            // \u30de\u30b9\u30af\u3092\u4f5c\u6210\n            CreateMask(in_file,\n                       out_file,\n                       w ? 2 : 1,\n                       (!w && h) ? 2 : 1); // \u6a2a\u306b\u30de\u30b9\u30af\u3092\u4f5c\u308b\u5f62\u5f0f\u3092\u512a\u5148\u3059\u308b\n        }\n    }\n}\n\n\n\n\u6700\u5f8c\u306b\nAndroidSDK\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308betc1tool.exe\u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u3001\u7c21\u5358\u306b\u30de\u30b9\u30af\u4ed8\u304dETC\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\ncocos2d-x\u3092\u4f7f\u3048\u3070\u3001windows,mac\u306e\u4e21\u5bfe\u5fdc\u3057\u305f\u30c4\u30fc\u30eb\u3082\u4f5c\u308c\u305f\u3068\u601d\u3044\u307e\u3059\u304c\n\u9762\u5012\u3060\u3063\u305f\u306e\u3067VisualStudio\u306eC#\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u305d\u308c\u3067\u306f\u307e\u305f\u6b21\u56de\uff01\uff01\uff01\n\n\u524d\u56de\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u305f\u30de\u30b9\u30af\u7d20\u6750\u3092\u4f5c\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u306e\u8aac\u660e\u3067\u3059\u3002\n\n##\u958b\u767a\u74b0\u5883\nVisualStudio2008\nC#\n.NetFramwork 3.5\n\n##\u6982\u8981\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u5165\u308c\u308b\u3068\u30de\u30b9\u30af\u753b\u50cf\u3092\u51fa\u529b\u3059\u308b\nCreateMask.exe [\u30de\u30b9\u30af\u5143\u306e\u30d5\u30a1\u30a4\u30eb]\n\n##\u30aa\u30d7\u30b7\u30e7\u30f3\n[-w] \u6a2a\u306b\u30de\u30b9\u30af\u3092\u6301\u3064\u753b\u50cf\u3092\u751f\u6210\n[-h] \u7e26\u306b\u30de\u30b9\u30af\u3092\u6301\u3064\u753b\u50cf\u3092\u751f\u6210\n[-o] [\u51fa\u529b\u30d5\u30a1\u30a4\u30eb] \u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u51fa\u529b(\u3053\u306e\u6307\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306b_m\u3092\u3064\u3051\u3066\u51fa\u529b)\n\n##\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\n\n* Bitmap\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u53c2\u7167\u306e\u8a2d\u5b9a\u3067\u300cSystem.Drawing\u300d\u3092\u8ffd\u52a0\n\n![ref_setting.png](https://qiita-image-store.s3.amazonaws.com/0/64194/57325785-6515-e7ef-6300-baf28ea9fdcb.png)\n\n***\n\n* \u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30a2\u30f3\u30bb\u30fc\u30d5\u30b3\u30fc\u30c9\u306e\u8a31\u53ef\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\n![unsafe.png](https://qiita-image-store.s3.amazonaws.com/0/64194/dd1c4028-cf1e-9830-a56a-5df00b4314ef.png)\n\n##\u30bd\u30fc\u30b9\n\n```csharp:CreateMask.cs\nusing System;\nusing System.IO;\nusing System.Drawing;\nusing System.Drawing.Imaging;\n\nnamespace CreateMack\n{\n    class Program\n    {\n        /// <summary>\n        /// \u901a\u5e38\u306e\u30de\u30b9\u30af\u753b\u50cf\u751f\u6210\n        /// </summary>\n        /// <param name=\"src\">\u5165\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        /// <param name=\"dst\">\u51fa\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        static void CreateMaskNormal(BitmapData src, BitmapData dst)\n        {\n            unsafe\n            {\n                for (int y = 0; y < src.Height; ++y)\n                {\n                    byte* sp = (byte*)src.Scan0 + y * src.Stride;\n                    byte* dp = (byte*)dst.Scan0 + y * dst.Stride;\n                    for (int x = 0; x < src.Width; ++x)\n                    {\n                        dp[0] = dp[1] = dp[2] = sp[3];\n                        sp += 4;\n                        dp += 3;\n                    }\n                }\n            }\n        }\n\n        /// <summary>\n        /// \u6a2a\u306b\u30de\u30b9\u30af\u304c\u3042\u308b\u753b\u50cf\u751f\u6210\n        /// </summary>\n        /// <param name=\"src\">\u5165\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        /// <param name=\"dst\">\u51fa\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        static void CreateMaskWidth(BitmapData src, BitmapData dst)\n        {\n            unsafe\n            {\n                for (int y = 0; y < src.Height; ++y)\n                {\n                    byte* sp = (byte*)src.Scan0 + y * src.Stride;\n                    byte* dp = (byte*)dst.Scan0 + y * dst.Stride;\n                    byte* dpm = (byte*)dst.Scan0 + y * dst.Stride + src.Width * 3;\n                    for (int x = 0; x < src.Width; ++x)\n                    {\n                        // \u901a\u5e38\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n                        dp[0] = sp[0];\n                        dp[1] = sp[1];\n                        dp[2] = sp[2];\n                        // \u30de\u30b9\u30af\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n                        dpm[0] = dpm[1] = dpm[2] = sp[3];\n                        // \u30dd\u30a4\u30f3\u30bf\u79fb\u52d5\n                        sp += 4;\n                        dp += 3;\n                        dpm += 3;\n                    }\n                }\n            }\n        }\n\n        /// <summary>\n        /// \u7e26\u306b\u30de\u30b9\u30af\u304c\u3042\u308b\u753b\u50cf\u751f\u6210\n        /// </summary>\n        /// <param name=\"src\">\u5165\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        /// <param name=\"dst\">\u51fa\u529b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf</param>\n        static void CreateMaskHeight(BitmapData src, BitmapData dst)\n        {\n            unsafe\n            {\n                for (int y = 0; y < src.Height; ++y)\n                {\n                    byte* sp = (byte*)src.Scan0 + y * src.Stride;\n                    byte* dp = (byte*)dst.Scan0 + y * dst.Stride;\n                    byte* dpm = (byte*)dst.Scan0 + (y + src.Height) * dst.Stride;\n                    for (int x = 0; x < src.Width; ++x)\n                    {\n                        // \u901a\u5e38\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n                        dp[0] = sp[0];\n                        dp[1] = sp[1];\n                        dp[2] = sp[2];\n                        // \u30de\u30b9\u30af\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n                        dpm[0] = dpm[1] = dpm[2] = sp[3];\n                        // \u30dd\u30a4\u30f3\u30bf\u79fb\u52d5\n                        sp += 4;\n                        dp += 3;\n                        dpm += 3;\n                    }\n                }\n            }\n        }\n\n        /// <summary>\n        /// \u30de\u30b9\u30af\u753b\u50cf\u306e\u751f\u6210\n        /// </summary>\n        /// <param name=\"in_file\">\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d</param>\n        /// <param name=\"out_file\">\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d</param>\n        /// <param name=\"w_scale\">\u5e45\u306e\u30b9\u30b1\u30fc\u30eb</param>\n        /// <param name=\"h_scale\">\u9ad8\u3055\u306e\u30b9\u30b1\u30fc\u30eb</param>\n        static void CreateMask(string in_file, string out_file, int w_scale, int h_scale)\n        {\n            // \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3092\u751f\u6210\n            Bitmap src_bmp = new Bitmap(in_file);\n            Bitmap dst_bmp = new Bitmap(src_bmp.Width * w_scale,\n                                        src_bmp.Height * h_scale,\n                                        System.Drawing.Imaging.PixelFormat.Format24bppRgb);\n            // \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf\u3092\u751f\u6210\n            var src = src_bmp.LockBits(new Rectangle(0, 0, src_bmp.Width, src_bmp.Height),\n                                       System.Drawing.Imaging.ImageLockMode.ReadOnly,\n                                       System.Drawing.Imaging.PixelFormat.Format32bppArgb);\n            var dst = dst_bmp.LockBits(new Rectangle(0, 0, dst_bmp.Width, dst_bmp.Height),\n                                       System.Drawing.Imaging.ImageLockMode.ReadOnly,\n                                       System.Drawing.Imaging.PixelFormat.Format24bppRgb);\n\n            // \u30de\u30b9\u30af\u3092\u66f8\u304d\u8fbc\u3080\n            if (w_scale != 1)      CreateMaskWidth(src, dst);   // \u6a2a\u306b\u30de\u30b9\u30af\u753b\u50cf\u3092\u4f5c\u308b\u5f62\u5f0f\n            else if (h_scale != 1) CreateMaskHeight(src, dst);  // \u7e26\u306b\u30de\u30b9\u30af\u753b\u50cf\u3092\u4f5c\u308b\u5f62\u5f0f\n            else                   CreateMaskNormal(src, dst);  // \u30de\u30b9\u30af\u753b\u50cf\u306e\u307f\u3092\u4f5c\u308b\u5f62\u5f0f\n\n            src_bmp.UnlockBits(src);\n            dst_bmp.UnlockBits(dst);\n\n            // \u4fdd\u5b58\u3057\u3066\u7d42\u4e86\n            dst_bmp.Save(out_file, System.Drawing.Imaging.ImageFormat.Png);\n            dst_bmp.Clone();\n            src_bmp.Clone();\n        }\n\n        /// <summary>\n        /// \u30e1\u30a4\u30f3\u95a2\u6570\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            bool w = false; // \u6a2a\u306b\u30de\u30b9\u30af\u3092\u4f5c\u6210\u306e\u6709\u7121\n            bool h = false; // \u7e26\u306b\u30de\u30b9\u30af\u3092\u4f5c\u6210\u306e\u6709\u7121\n            string in_file = \"\";    // \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n            string out_file = \"\";   // \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n            // \u5f15\u6570\u3092\u78ba\u8a8d\n            for (int i = 0; i < args.Length; ++i)\n            {\n                if (args[i] == \"-w\")      w = true;\n                else if (args[i] == \"-h\") h = true;\n                else if (args[i] == \"-o\") out_file = args[++i];\n                else                      in_file = args[i];\n            }\n\n            // \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306fHELP\u8868\u793a\n            if (in_file == \"\")\n            {\n                Console.WriteLine(\"CreateMask.exe [\u8aad\u307f\u8fbc\u3080\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d]\");\n                Console.WriteLine(\"-w                \u6a2a\u306b\u30de\u30b9\u30af\u3092\u751f\u6210\");\n                Console.WriteLine(\"-h                \u7e26\u306b\u30de\u30b9\u30af\u3092\u751f\u6210\");\n                Console.WriteLine(\"-o \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d  \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a2d\u5b9a\");\n                Console.WriteLine(\"                  \u8a2d\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306b_m\u304c\u8ffd\u52a0\u3055\u308c\u3066\u51fa\u529b\");\n                return;\n            }\n            if (out_file == \"\")\n            {\n                // \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u306a\u3044\u5834\u5408\u306f\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306b_m\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3092\u8a2d\u5b9a\n                out_file = Path.GetFileNameWithoutExtension(in_file) + \"_m.png\";\n            }\n            else if (Path.GetExtension(out_file) != \".png\")\n            {\n                // \u62e1\u5f35\u5b50\u306b.png\u3092\u8a2d\u5b9a\n                out_file = Path.GetFileNameWithoutExtension(out_file) + \".png\";\n            }\n\n            // \u30de\u30b9\u30af\u3092\u4f5c\u6210\n            CreateMask(in_file,\n                       out_file,\n                       w ? 2 : 1,\n                       (!w && h) ? 2 : 1); // \u6a2a\u306b\u30de\u30b9\u30af\u3092\u4f5c\u308b\u5f62\u5f0f\u3092\u512a\u5148\u3059\u308b\n        }\n    }\n}\n```\n\n##\u6700\u5f8c\u306b\nAndroidSDK\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308betc1tool.exe\u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u3001\u7c21\u5358\u306b\u30de\u30b9\u30af\u4ed8\u304dETC\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\ncocos2d-x\u3092\u4f7f\u3048\u3070\u3001windows,mac\u306e\u4e21\u5bfe\u5fdc\u3057\u305f\u30c4\u30fc\u30eb\u3082\u4f5c\u308c\u305f\u3068\u601d\u3044\u307e\u3059\u304c\n\u9762\u5012\u3060\u3063\u305f\u306e\u3067VisualStudio\u306eC#\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u305d\u308c\u3067\u306f\u307e\u305f\u6b21\u56de\uff01\uff01\uff01\n", "tags": ["cocos2d-x3.3", "C#3.5", "Android"]}