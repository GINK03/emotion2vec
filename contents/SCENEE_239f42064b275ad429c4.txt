{"context": " More than 1 year has passed since last update.\n\nXcode5.1\n\nQuick Look\u306e\u62e1\u5f35\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30c7\u30d0\u30c3\u30af\u4e2d\u306b\u3001Preview\u3067\u304d\u308b\u3002\n\u307e\u305f\u3001\u958b\u767a\u8005\u306f\u3001QuickLook\u3067\u95b2\u89a7\u3057\u305f\u3044\u5185\u5bb9\u3092-debugQuickLookObject\u3067\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\u72ec\u81ea\u306b-debugQuickLookObject\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u5024\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002(iOS\u306e\u307f\u8a18\u8f09)\nUIImage, UIImageView, CIImage, UIColor, UIBezirePath\u3001CLLocation, UIView, NSString, NSAttributedString, NSData, NSURL\n\u8a73\u7d30\u306f\u3001\u3053\u3061\u3089\nQuick Look for Custom Types in the Xcode Debugger\n\nLog breakpoint actions\u3067\u306e\u30ed\u30b0\u51fa\u529b\n\u30d6\u30ec\u30a4\u30af\u30dd\u30a4\u30f3\u30c8\u306eEdit BreackPoint > Add Action > Log Message\u3067\u3001NSLog\u306e\u3088\u3046\u306b\u30ed\u30b0\u51fa\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nmyString value: @myString@\n\u8a18\u8ff0\u3059\u308b\u3068\u3001\u3053\u308c\u307e\u3067\u3001myString\u306e\u30dd\u30a4\u30f3\u30bf\u5024\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001myString\u306e\u5024\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30e1\u30ea\u30c3\u30c8\n\nNSLog\u3092\u88fd\u54c1\u30b3\u30fc\u30c9\u306b\u8ffd\u52a0\u305b\u305a\u3001\u30c7\u30d0\u30c3\u30af\u3067\u304d\u308b\n\n\n\u30c7\u30e1\u30ea\u30c3\u30c8\n\n\u8a2d\u5b9a\u307e\u3067\u306e\u64cd\u4f5c\u304c\u591a\u304f\u3001\u5c11\u3005\u9762\u5012\n\u3069\u3093\u306a\u30ed\u30b0\u51fa\u529b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3057\u305f\u306e\u304b\u3001\u8a2d\u5b9a\u5f8c\u306b\u78ba\u8a8d\u3057\u3065\u3089\u3044\n\n\u3046\u307e\u3044\u6d3b\u7528\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff01\n\nXcode Snippets\u306e\u8ffd\u52a0\nXcode5.1\u3067\u3001Xcode Snippets\u304c\u62e1\u5145\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\nSnippets\nCompletion Shortcut\nNotes\n\n\n\n\n\n-isEqual: and -hash methods\nisequal\n\n\n\n\n-initXXXX: methods\ninit\nXcode5.1\u3088\u308aid\u304cinstancetype\u306b\u306a\u3063\u3066\u3044\u308b\n\n\n\n+initialize methods\ninitialize\n\n\n\nEnumerated Type Declarations\nenumdef, nsenum, nsoption\nFixed underlying Type\u3067\u5217\u6319\u578b\u306e\u5b9a\u7fa9\u3001NS_ENUM, NS_OPTIONS\u7528\u306e\u30b9\u30cb\u30da\u30c3\u30c8\n\n\n\n-compare: method\ncompare\n\n\n\n\n-debugDescription, -description\n\ndebugdescription, description\n\nreturn NSString stringWithFormat:...\u307e\u3067\u8ffd\u52a0\u3055\u308c\u308b\u306e\u3067\u3001\u697d\u305d\u3046\n\n\nCategory, Extension\n@interface-category/extension\n\n\n\nInline Block as Variable\ninlineBlock\n\u203bXcode5.0\u306b\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u5099\u5fd8\u9332\u306e\u305f\u3081\n\n\n\n\nClang 3.5\nXcode 5.1\u3067\u306eDefault compiler\u306f\u3001 Apple LLVM compiler version 5.1 (clang-502)\u306a\u306e\u3067\u3001Clang 3.5\u306e\u6a5f\u80fd\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\nBoxed C String\n@(<expression>)\u306eBox\u30ea\u30c6\u30e9\u30eb\u3067\u3001\u30b9\u30ab\u30e9\u30fc\u578b\u3088\u308aNSNumber\u3092\u751f\u6210\u3067\u304d\u308b\u306e\u306f\u6709\u540d\u3067\u3059\u304c\nchar*\u3084\u3001const char *\u304b\u3089NSString\u3082\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\u203b\u30a8\u30f3\u30b3\u30fc\u30c9\u304cUTF8\u3067\u3001\\0\u304c\u7d42\u7aef\u306e\u6587\u5b57\u5217\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001main.m\u3067\u3001\u4ee5\u4e0b\u3092\u8a18\u8ff0\u3059\u308b\u3068\u3001int main(int,char*)\u306e\u5f15\u6570\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n// Partition command line arguments into positional and option arguments.\nNSMutableArray *args = [NSMutableArray new];\nNSMutableDictionary *options = [NSMutableDictionary new];\nwhile (--argc) {\n    const char *arg = *++argv;\n    if (strncmp(arg, \"--\", 2) == 0) {\n        options[@(arg + 2)] = @(*++argv);   // --key value\n    } else {\n        [args addObject:@(arg)];            // positional argument\n    }\n}\n\nquoted from Objective-C Literals Clang 3.5\n\u4ed6\u306b\u3082\u3001xml\u30d1\u30fc\u30b5\u30fc\u3067\u3001libxml2\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u30b1\u30fc\u30b9\u306a\u3069\u3067\u6d3b\u7528\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\nAttributes on Enumerators\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u4e0d\u826f\u306b\u306a\u3063\u305f\u5217\u6319\u5024\u3092deprecated\u3068\u3057\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\ntypedef enum : NSInteger {\n  Garlic,\n  Salt,\n  Wasabi __attribute__((deprecated)),\n} PotatoChipType;\n\n__attribute__((deprecated))\u306f\u3001DEPRECARED_ATTRIBUTE\u3068\u3057\u3066\u3082\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\nTODO: deprecated\u3055\u308c\u3066\u3044\u308b\u753b\u50cf\n\nObject Literals and Subscripting\n\u203bClang 3.3\u3088\u308a\u5165\u3063\u3066\u3044\u305f\u6a5f\u80fd\u3067\u3059\u304c\u3001\u5099\u5fd8\u9332\u306e\u305f\u3081\u8a18\u8f09\u3044\u305f\u3057\u307e\u3059\u3002\nNSArray, NSDictionary\u4ee5\u5916\u306e\u30ab\u30b9\u30bf\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001[]\u30ea\u30c6\u30e9\u30eb\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001\u9069\u6642\u3001\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u9069\u7528\u3057\u307e\u3059\u3002\n@interface CustomClass : NSObject\n// customClass[idx] = obj;\n- (void)setObject:(id)obj atIndexedSubscript:(NSUInteger)idx; \n\n// id obj = customClass[idx];\n- (id)objectAtIndexedSubscript:(NSUInteger)idx; \n\n// customClass[key] = obj;\n- (void)setObject:(id)obj forKeyedSubscript:(id <NSCopying>)key; \n\n// id obj = customClass[key]\n- (id)objectForKeyedSubscript:(id)key; \n\n\u305f\u3060\u3001\u3053\u306e\u3088\u3046\u306b\u72ec\u81ea\u30af\u30e9\u30b9\u3092\u751f\u6210\u3067\u304d\u308b\u3082\u306e\u306e\u3001NSArray, NSDictionary\u3068\u306e\u898b\u5206\u3051\u304c\u4ed8\u304d\u3065\u3089\u304f\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u3042\u307e\u308a\u5229\u7528\u3057\u306a\u3044\u65b9\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u306d\u3002\nSee Object Subscripting : NSHipster\n\n\u305d\u306e\u4ed6\n\ncomplex\nC99\u3088\u308a\u5229\u7528\u3067\u304d\u308bcomplex.h\u3067\u3001\u865a\u6570\u3092\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3092\u7c21\u5358\u306b\u8a18\u8ff0\u3067\u304d\u308b\u30ea\u30c6\u30e9\u30eb\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n#include <math.h>\n#include <complex.h>\ncomplex float x = { 1.0f, INFINITY }; // Init to (1, Inf)\n\nquoted from Objective-C Literals Clang 3.5\n\nlambdas(C++)\u3068Blocks(Objective-C)\u306e\u76f8\u4e92\u904b\u7528\nClang 3.5\u3088\u308a\u3001C++11\u3088\u308alambdas\u306e\u30dd\u30a4\u30f3\u30bf\u3092Block\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3078\u5909\u63db\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u4f8b\u3048\u3070\u3001Objective-C++\u306e\u30b3\u30fc\u30c9\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\nNSArray *array = @[@\"string 1\", @\"string 21\", @\"string 12\", @\"String 11\",\n                   @\"String 02\"];\nconst NSStringCompareOptions comparisonOptions\n  = NSCaseInsensitiveSearch | NSNumericSearch |\n    NSWidthInsensitiveSearch | NSForcedOrderingSearch;\nNSLocale *currentLocale = [NSLocale currentLocale];\n// See HERE\nNSArray *sorted\n  = [array sortedArrayUsingComparator:[=](id s1, id s2) -> NSComparisonResult {\n             NSRange string1Range = NSMakeRange(0, [s1 length]);\n             return [s1 compare:s2 options:comparisonOptions\n             range:string1Range locale:currentLocale];\n     }]; \nNSLog(@\"sorted: %@\", sorted);\n\nquoted from Objective-C Literals Clang 3.5\n\nCarPlay\n\nCarPlay Simulator\n\u307e\u3060\u307e\u3060\u4e0d\u660e\u306a\u3053\u3068\u304c\u591a\u3044CarPlay\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u3042\u308b\u3088\u3046\u306a\u64cd\u4f5c\u3092\u884c\u3046\u3068\niPhone Simulator\u306eHardWare\u3068\u3057\u3066\u3001CarPlay\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nCarPlay \u3092 iOS\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u8a66\u3057\u3066\u307f\u308b\n0xED\u3092\u30d0\u30a4\u30ca\u30ea\u7de8\u96c6\u306b\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3082\u3061\u308d\u3093vim\u3067\u3082\u3067\u304d\u307e\u3059\u3002\n\u203b\u4ee5\u4e0b\u306e\u64cd\u4f5c\u3092\u884c\u3046\u524d\u306b\u3001\u5fc5\u305a\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u3063\u3066\u4e0b\u3055\u3044\u3002\nsudo vi -b libMobileGestalt.dylib\n\n\u3067\u5bfe\u8c61\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u304d\u307e\u3059\u3002xdd\u30b3\u30de\u30f3\u30c9\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n:silent %!xxd -g 1\n:set ft=xxd\n\n00399da\u306e45\u309243\u3078\u5909\u66f4\u3057\u307e\u3059\u3002\n14750 00399d0: 8b 0d 82 66 01 00 84 c0 48 0f 43 0d 80 66 01 00  ...f....H.C..f..\n\n\u6700\u5f8c\u306b\u3001\u30d0\u30a4\u30ca\u30ea\u8868\u793a\u3092\u89e3\u9664\u3057\u3066\u3001\u4fdd\u5b58\u3057\u307e\u3059\u3002\n:%!xxd -r\n:wq\n\n\nCarPlay\u5411\u3051API\nCarPlay\u3067\u5229\u7528\u3059\u308bAPI\u306f\u3001\u4ee5\u4e0b\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089\nApple\u304b\u3089entitlement\u3092\u53d6\u5f97\u3057\u306a\u3044\u3068\u5229\u7528\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\nMPConnectionItem.h\nMPPlayableContentManager.h\nMPPlayableContentDelegate.h\nMPPlayableContetnDataSource.h\n\n\u4e0a\u8a18\u306f\u5168\u3066\u3001MediaPlayer.framework\u306a\u306e\u3067\nCarPlay\u5bfe\u5fdc\u4e88\u5b9a\u3068\u3055\u308c\u308b\u5404\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30e9\u30b8\u30aa\u306e\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u5411\u3051\u306b\n\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bAPI\u306a\u306e\u3067\u3057\u3087\u3046\u306d\u3002\niOS8\u4ee5\u964d\u306e\u5c55\u958b\u306b\u671f\u5f85\u3067\u3059\uff01\n# Xcode5.1\n\n## Quick Look\u306e\u62e1\u5f35\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30c7\u30d0\u30c3\u30af\u4e2d\u306b\u3001Preview\u3067\u304d\u308b\u3002\n\n\u307e\u305f\u3001\u958b\u767a\u8005\u306f\u3001QuickLook\u3067\u95b2\u89a7\u3057\u305f\u3044\u5185\u5bb9\u3092`-debugQuickLookObject`\u3067\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\n\u72ec\u81ea\u306b`-debugQuickLookObject`\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u5024\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002(iOS\u306e\u307f\u8a18\u8f09)\n\n`UIImage, UIImageView, CIImage, UIColor, UIBezirePath\u3001CLLocation, UIView, NSString, NSAttributedString, NSData, NSURL`\n\n\u8a73\u7d30\u306f\u3001\u3053\u3061\u3089\n[Quick Look for Custom Types in the Xcode Debugger](https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/CustomClassDisplay_in_QuickLook/Introduction/Introduction.html)\n\n## Log breakpoint actions\u3067\u306e\u30ed\u30b0\u51fa\u529b\n\n\u30d6\u30ec\u30a4\u30af\u30dd\u30a4\u30f3\u30c8\u306eEdit BreackPoint > Add Action > Log Message\u3067\u3001NSLog\u306e\u3088\u3046\u306b\u30ed\u30b0\u51fa\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n`myString value: @myString@`\n\n\u8a18\u8ff0\u3059\u308b\u3068\u3001\u3053\u308c\u307e\u3067\u3001myString\u306e\u30dd\u30a4\u30f3\u30bf\u5024\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001`myString`\u306e\u5024\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n### \u30e1\u30ea\u30c3\u30c8\n- NSLog\u3092\u88fd\u54c1\u30b3\u30fc\u30c9\u306b\u8ffd\u52a0\u305b\u305a\u3001\u30c7\u30d0\u30c3\u30af\u3067\u304d\u308b\n\n### \u30c7\u30e1\u30ea\u30c3\u30c8\n- \u8a2d\u5b9a\u307e\u3067\u306e\u64cd\u4f5c\u304c\u591a\u304f\u3001\u5c11\u3005\u9762\u5012\n- \u3069\u3093\u306a\u30ed\u30b0\u51fa\u529b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3057\u305f\u306e\u304b\u3001\u8a2d\u5b9a\u5f8c\u306b\u78ba\u8a8d\u3057\u3065\u3089\u3044\n\n\u3046\u307e\u3044\u6d3b\u7528\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff01\n\n## Xcode Snippets\u306e\u8ffd\u52a0\n\nXcode5.1\u3067\u3001Xcode Snippets\u304c\u62e1\u5145\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n| Snippets|Completion Shortcut| Notes |\n|:---|:---|:---|\n| `-isEqual:` and `-hash` methods | isequal| | \n| `-initXXXX:` methods | init | Xcode5.1\u3088\u308a`id`\u304c`instancetype`\u306b\u306a\u3063\u3066\u3044\u308b |\n| `+initialize` methods | initialize | |\n| Enumerated Type Declarations | enumdef, nsenum, nsoption | Fixed underlying Type\u3067\u5217\u6319\u578b\u306e\u5b9a\u7fa9\u3001`NS_ENUM`, `NS_OPTIONS`\u7528\u306e\u30b9\u30cb\u30da\u30c3\u30c8|\n| `-compare:` method |  compare | |\n| `-debugDescription`, `-description` | debugdescription, description | `return NSString stringWithFormat:...`\u307e\u3067\u8ffd\u52a0\u3055\u308c\u308b\u306e\u3067\u3001\u697d\u305d\u3046 |\n| Category, Extension | @interface-category/extension | |\n| Inline Block as Variable | inlineBlock | \u203bXcode5.0\u306b\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u5099\u5fd8\u9332\u306e\u305f\u3081|\n\n# Clang 3.5\nXcode 5.1\u3067\u306eDefault compiler\u306f\u3001 Apple LLVM compiler version 5.1 (clang-502)\u306a\u306e\u3067\u3001Clang 3.5\u306e\u6a5f\u80fd\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n## Boxed C String\n\n`@(<expression>)`\u306eBox\u30ea\u30c6\u30e9\u30eb\u3067\u3001\u30b9\u30ab\u30e9\u30fc\u578b\u3088\u308aNSNumber\u3092\u751f\u6210\u3067\u304d\u308b\u306e\u306f\u6709\u540d\u3067\u3059\u304c\n`char*`\u3084\u3001`const char *`\u304b\u3089NSString\u3082\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\n\u203b\u30a8\u30f3\u30b3\u30fc\u30c9\u304cUTF8\u3067\u3001`\\0`\u304c\u7d42\u7aef\u306e\u6587\u5b57\u5217\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001`main.m`\u3067\u3001\u4ee5\u4e0b\u3092\u8a18\u8ff0\u3059\u308b\u3068\u3001`int main(int,char*)`\u306e\u5f15\u6570\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```objc\n// Partition command line arguments into positional and option arguments.\nNSMutableArray *args = [NSMutableArray new];\nNSMutableDictionary *options = [NSMutableDictionary new];\nwhile (--argc) {\n    const char *arg = *++argv;\n    if (strncmp(arg, \"--\", 2) == 0) {\n        options[@(arg + 2)] = @(*++argv);   // --key value\n    } else {\n        [args addObject:@(arg)];            // positional argument\n    }\n}\n```\nquoted from [Objective-C Literals Clang 3.5](http://clang.llvm.org/docs/ObjectiveCLiterals.html)\n\n\u4ed6\u306b\u3082\u3001xml\u30d1\u30fc\u30b5\u30fc\u3067\u3001libxml2\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u30b1\u30fc\u30b9\u306a\u3069\u3067\u6d3b\u7528\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n## Attributes on Enumerators\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u4e0d\u826f\u306b\u306a\u3063\u305f\u5217\u6319\u5024\u3092deprecated\u3068\u3057\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```objc\ntypedef enum : NSInteger {\n  Garlic,\n  Salt,\n  Wasabi __attribute__((deprecated)),\n} PotatoChipType;\n```\n\n`__attribute__((deprecated))`\u306f\u3001`DEPRECARED_ATTRIBUTE`\u3068\u3057\u3066\u3082\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\nTODO: deprecated\u3055\u308c\u3066\u3044\u308b\u753b\u50cf\n\n## Object Literals and Subscripting\n\n\u203bClang 3.3\u3088\u308a\u5165\u3063\u3066\u3044\u305f\u6a5f\u80fd\u3067\u3059\u304c\u3001\u5099\u5fd8\u9332\u306e\u305f\u3081\u8a18\u8f09\u3044\u305f\u3057\u307e\u3059\u3002\n\nNSArray, NSDictionary\u4ee5\u5916\u306e\u30ab\u30b9\u30bf\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001`[]`\u30ea\u30c6\u30e9\u30eb\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u306b\u3001\u9069\u6642\u3001\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\n```objc\n@interface CustomClass : NSObject\n// customClass[idx] = obj;\n- (void)setObject:(id)obj atIndexedSubscript:(NSUInteger)idx; \n\n// id obj = customClass[idx];\n- (id)objectAtIndexedSubscript:(NSUInteger)idx; \n\n// customClass[key] = obj;\n- (void)setObject:(id)obj forKeyedSubscript:(id <NSCopying>)key; \n\n// id obj = customClass[key]\n- (id)objectForKeyedSubscript:(id)key; \n```\n\n\u305f\u3060\u3001\u3053\u306e\u3088\u3046\u306b\u72ec\u81ea\u30af\u30e9\u30b9\u3092\u751f\u6210\u3067\u304d\u308b\u3082\u306e\u306e\u3001NSArray, NSDictionary\u3068\u306e\u898b\u5206\u3051\u304c\u4ed8\u304d\u3065\u3089\u304f\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u3042\u307e\u308a\u5229\u7528\u3057\u306a\u3044\u65b9\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u306d\u3002\n\nSee [Object Subscripting : NSHipster](http://nshipster.com/object-subscripting/)\n\n## \u305d\u306e\u4ed6\n\n### complex \nC99\u3088\u308a\u5229\u7528\u3067\u304d\u308b`complex.h`\u3067\u3001\u865a\u6570\u3092\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3092\u7c21\u5358\u306b\u8a18\u8ff0\u3067\u304d\u308b\u30ea\u30c6\u30e9\u30eb\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```objc\n#include <math.h>\n#include <complex.h>\ncomplex float x = { 1.0f, INFINITY }; // Init to (1, Inf)\n```\nquoted from [Objective-C Literals Clang 3.5](http://clang.llvm.org/docs/ObjectiveCLiterals.html)\n\n### lambdas(C++)\u3068Blocks(Objective-C)\u306e\u76f8\u4e92\u904b\u7528\nClang 3.5\u3088\u308a\u3001C++11\u3088\u308alambdas\u306e\u30dd\u30a4\u30f3\u30bf\u3092Block\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3078\u5909\u63db\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u4f8b\u3048\u3070\u3001Objective-C++\u306e\u30b3\u30fc\u30c9\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\n```objc\nNSArray *array = @[@\"string 1\", @\"string 21\", @\"string 12\", @\"String 11\",\n                   @\"String 02\"];\nconst NSStringCompareOptions comparisonOptions\n  = NSCaseInsensitiveSearch | NSNumericSearch |\n    NSWidthInsensitiveSearch | NSForcedOrderingSearch;\nNSLocale *currentLocale = [NSLocale currentLocale];\n// See HERE\nNSArray *sorted\n  = [array sortedArrayUsingComparator:[=](id s1, id s2) -> NSComparisonResult {\n             NSRange string1Range = NSMakeRange(0, [s1 length]);\n             return [s1 compare:s2 options:comparisonOptions\n             range:string1Range locale:currentLocale];\n     }]; \nNSLog(@\"sorted: %@\", sorted);\n```\nquoted from [Objective-C Literals Clang 3.5](http://clang.llvm.org/docs/ObjectiveCLiterals.html)\n\n# CarPlay\n\n## CarPlay Simulator\n\n\u307e\u3060\u307e\u3060\u4e0d\u660e\u306a\u3053\u3068\u304c\u591a\u3044CarPlay\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u3042\u308b\u3088\u3046\u306a\u64cd\u4f5c\u3092\u884c\u3046\u3068\niPhone Simulator\u306eHardWare\u3068\u3057\u3066\u3001CarPlay\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n[CarPlay \u3092 iOS\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u8a66\u3057\u3066\u307f\u308b](http://qiita.com/kanekoa/items/3b6d97bea89557519c57)\n\n0xED\u3092\u30d0\u30a4\u30ca\u30ea\u7de8\u96c6\u306b\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3082\u3061\u308d\u3093vim\u3067\u3082\u3067\u304d\u307e\u3059\u3002\n\n**\u203b\u4ee5\u4e0b\u306e\u64cd\u4f5c\u3092\u884c\u3046\u524d\u306b\u3001\u5fc5\u305a\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u3063\u3066\u4e0b\u3055\u3044\u3002**\n\n```bash\nsudo vi -b libMobileGestalt.dylib\n```\n\n\u3067\u5bfe\u8c61\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u304d\u307e\u3059\u3002xdd\u30b3\u30de\u30f3\u30c9\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n\n```bash\n:silent %!xxd -g 1\n:set ft=xxd\n```\n\n00399da\u306e`45`\u3092`43`\u3078\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```\n14750 00399d0: 8b 0d 82 66 01 00 84 c0 48 0f 43 0d 80 66 01 00  ...f....H.C..f..\n```\n\n\u6700\u5f8c\u306b\u3001\u30d0\u30a4\u30ca\u30ea\u8868\u793a\u3092\u89e3\u9664\u3057\u3066\u3001\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n```bash\n:%!xxd -r\n:wq\n```\n\n## CarPlay\u5411\u3051API\n\nCarPlay\u3067\u5229\u7528\u3059\u308bAPI\u306f\u3001\u4ee5\u4e0b\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089\nApple\u304b\u3089entitlement\u3092\u53d6\u5f97\u3057\u306a\u3044\u3068\u5229\u7528\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n- MPConnectionItem.h\n- MPPlayableContentManager.h\n- MPPlayableContentDelegate.h\n- MPPlayableContetnDataSource.h\n\n\u4e0a\u8a18\u306f\u5168\u3066\u3001MediaPlayer.framework\u306a\u306e\u3067\nCarPlay\u5bfe\u5fdc\u4e88\u5b9a\u3068\u3055\u308c\u308b\u5404\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30e9\u30b8\u30aa\u306e\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u5411\u3051\u306b\n\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bAPI\u306a\u306e\u3067\u3057\u3087\u3046\u306d\u3002\n\niOS8\u4ee5\u964d\u306e\u5c55\u958b\u306b\u671f\u5f85\u3067\u3059\uff01\n", "tags": ["Xcode", "clang"]}