{"context": "\n\n\u98fd\u548c #\u3068\u306f\n\u8a73\u7d30\u306f Saturation arithmetic \u3092\u8aad\u3080\u3068\u826f\u3044\u3051\u3069\u3001\u3088\u3046\u306f signed char \u306a\u3089 126\u3092++\u3059\u308b\u3068127\u306b\u306a\u3063\u3066\u307b\u3057\u3044\u3051\u3069\u3001127\u3092++\u3059\u308b\u3068127\u306e\u307e\u307e\u306b\u306a\u3063\u3066\u307b\u3057\u3044\u308f\u3051\u3067\u3059\u3088\u3002signed\u306e\u6574\u6570\u306f\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u6319\u52d5\u304c\u672a\u5b9a\u7fa9\u3060\u3057\u306d\u3002\u305d\u3046\u3044\u3046\u3053\u3068\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\u3067\u3001\u304b\u3064\u3001\u307e\u3042\u3001\u901f\u304f\u52d5\u3044\u3066\u6b32\u3057\u3044\u308f\u3051\u3002\u308f\u3056\u308f\u3056C\u3067\u66f8\u3044\u3066\u308b\u3093\u3060\u304b\u3089\u306a\u3002\n\n\u89e3\u6cd5\n\n\u3082\u306e\u3059\u3054\u3044\u6700\u8fd1\u306egcc\u306e\u5834\u5408\n__GNUC__ >= 7 \u304b\u3089\u7d44\u307f\u8fbc\u307f\u95a2\u6570 __builtin_add_overflow_p \u304c\u5897\u3048\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3067\u4e00\u767a\u3002\u3059\u3070\u3089\u3057\u3044\u3002\n#define saturated_inc(x) __builtin_add_overflow_p(x, 1, x) ? x : ++x\n\n\u3061\u306a\u307f\u306b\u3058\u3083\u3042\u5b9f\u969b\u306e\u51fa\u529b\u306f\u3069\u3046\u306a\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u3053\u308c\u3067\u305f\u3068\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\nsigned long long\nfunc(signed long long x)\n{\n    return saturated_inc(x);\n}\n\n\u51fa\u529b\u306f\u3053\u3046\u3002\n% gcc-trunk -O3 -S -o- tmp.c\n        .text\n        .align 4,0x90\n        .globl _func\n_func:\nLFB1:\n        movq    %rdi, %rax\n        addq    $1, %rax\n        jo      L7\n        ret\nL7:\n        movq    %rdi, %rax\n        ret\nLFE1:\n(\u4ee5\u4e0b\u7565)\n\n1\u8db3\u3057\u3066\u307f\u3066\u304b\u3089\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u30d5\u30e9\u30b0\u3067\u8fd4\u3059\u3082\u306e\u3092\u5909\u3048\u308b\u3001\u5b8c\u74a7\u306b\u6700\u77ed\u6700\u901f\u306e\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u3066\u307e\u3059\u306d\u3002\u7d20\u6674\u3089\u3057\u3044\u3002gcc7\u65e9\u304f\u51fa\u3066\u3002\n\n\u7d50\u69cb\u6700\u8fd1\u306egcc\u3068\u304b\u7d50\u69cb\u6700\u8fd1\u306eclang\u306e\u5834\u5408\n__GNUC__ >= 5 \u304b\u3089\u7d44\u307f\u8fbc\u307f\u95a2\u6570 __builtin_add_overflow \u304c\u5897\u3048\u3066\u3044\u308b\u3002\u3053\u308c\u306f\u4e0a\u3068\u9055\u3063\u3066\u5b9f\u969b\u306b\u8db3\u3057\u7b97\u3092\u5b9f\u884c\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u30c6\u30f3\u30dd\u30e9\u30ea\u306e\u5909\u6570\u304c\u5fc5\u8981\u306a\u306e\u304c\u3084\u3084\u9762\u5012\u3060\u304c\u3001\u307e\u3042\u5f0f\u6587\u3092\u4f7f\u3048\u3070\u56de\u907f\u3067\u304d\u308b\u304b\u3089\u554f\u984c\u306a\u3044(\u3053\u306e\u5c0e\u5165\u3057\u305f\u5909\u6570\u306f\u3082\u3061\u308d\u3093\u6700\u9069\u5316\u3059\u308c\u3070\u6d88\u3048\u308b)\u3002\n#define saturated_inc(x) ({__typeof__(x) y; __builtin_add_overflow(x, 1, &y) ? x : ++x; })\n\n\u3053\u308c\u3067\u305f\u3068\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\nsigned long long\nfunc(signed long long x)\n{\n    return saturated_inc(x);\n}\n\ngcc\u3060\u3068\u3053\u3046\u306a\u3063\u3066\n% gcc-6 -O3 -S -o- tmp.c\n        .text\n        .align 4,0x90\n        .globl _func\n_func:\nLFB1:\n        movq    %rdi, %rax\n        addq    $1, %rax\n        jo      L7\n        ret\nL7:\n        movq    %rdi, %rax\n        ret\nLFE1:\n(\u4ee5\u4e0b\u7565)\n\nclang\u3060\u3068\u3053\u3046\u306a\u308b\n% clang-3.8 -O3 -S -o- tmp.c\n        .section        __TEXT,__text,regular,pure_instructions\n        .macosx_version_min 10, 11\n        .globl  _func\n        .align  4, 0x90\n_func:                                  ## @func\n        .cfi_startproc\n## BB#0:                                ## %entry\n        pushq   %rbp\nLtmp0:\n        .cfi_def_cfa_offset 16\nLtmp1:\n        .cfi_offset %rbp, -16\n        movq    %rsp, %rbp\nLtmp2:\n        .cfi_def_cfa_register %rbp\n        movq    %rdi, %rax\n        incq    %rax\n        seto    %al\n        movzbl  %al, %eax\n        xorq    $1, %rax\n        addq    %rdi, %rax\n        popq    %rbp\n        retq\n        .cfi_endproc\n\n\n.subsections_via_symbols\n\ngcc\u306f\u4e0a\u306e7\u7cfb\u306e\u6642\u3068\u540c\u3058\u3067\u7d20\u76f4\u306a\u611f\u3058\u3060\u3051\u3069\u3001clang\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u30b3\u30fc\u30c9\u5410\u3044\u3066\u307e\u3059\u306d\u3002inc\u3057\u3066seto\u304b\u3089\u306emobzx\u3067%eax\u306b\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3057\u305f\u304b\u304c0/1\u3067\u5165\u3063\u3066\u304f\u308b\u304b\u3089\u3001\u305d\u308c\u3092xor\u3067\u3072\u3063\u304f\u308a\u8fd4\u3057\u3066\u304b\u3089add\u3067\u3082\u3068\u306e\u5f15\u6570\u306b\u8db3\u3057\u8fbc\u3080\u3002\u305f\u3057\u304b\u306b\u3002\u305f\u3057\u304b\u306b\u6b63\u3057\u3044\u3002\u3053\u308c\u591a\u5206\u30b8\u30e3\u30f3\u30d7\u5acc\u3063\u3066\u308b\u3093\u3060\u308d\u3046\u306a\u3002gcc\u3060\u3068jo\u3057\u3066\u308b\u3051\u3069\u3001\u3053\u308c\u306e\u30b3\u30b9\u30c8\u306e\u307b\u3046\u304c\u5927\u304d\u3044\u3068\u3044\u3046\u5224\u65ad\u306a\u3093\u3060\u3068\u601d\u3046\u3002\n\n\u3053\u3053\u6570\u5e74\u306eC\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5834\u5408\n\u3053\u3053\u307e\u3067\u306e\u3084\u3064\u306ftype-neutral\u3067\u3059\u3079\u3066\u306esigned/unsigned\u306a\u6574\u6570\u306b\u5bfe\u3057\u3066\u5358\u4e00\u306e\u30de\u30af\u30ed\u3067\u3044\u3051\u305f\u308f\u3051\u3060\u304c\u3001__builtin_add_overflow\u304c\u5b58\u5728\u3057\u306a\u3044\u975egcc\u7cfb\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3068\u304bclang\u3060\u3051\u3069\u3061\u3087\u3044\u53e4\u3044\u3068\u304b\u3060\u3068\u3069\u3046\u3059\u308b\u304b\u3002\n\u307e\u3042_Generic\u3068\u3044\u3046\u8a71\u306b\u306a\u308b\u308f\u3051\u3060\u3051\u3069\u3001_Generic\u306b\u306f\u7f60\u304c\u3042\u308b\u306e\u3067\u8981\u6ce8\u610f\u3067\u3001_Generic\u306e\u5f15\u6570\u306b\u7121\u601d\u616e\u306bchar\u3068\u304b\u66f8\u3044\u3061\u3083\u3046\u3068int\u306btype promote\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b(gcc\u306f\u3059\u308b)\u306e\u3067\u3001\u30dd\u30a4\u30f3\u30bf\u306b\u3072\u306d\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u7f60\u3044\u3002\u3002\u3002\n#define saturated_inc2(x, y) (((x) < (y)) ? ++ (x) : (x))\n#define saturated_inc(x) _Generic( &(x),                \\\n          int8_t*: saturated_inc2((x),   INT8_MAX),     \\\n         uint8_t*: saturated_inc2((x),  UINT8_MAX),     \\\n         int16_t*: saturated_inc2((x),  INT16_MAX),     \\\n        uint16_t*: saturated_inc2((x), UINT16_MAX),     \\\n         int32_t*: saturated_inc2((x),  INT32_MAX),     \\\n        uint32_t*: saturated_inc2((x), UINT32_MAX),     \\\n         int64_t*: saturated_inc2((x),  INT64_MAX),     \\\n        uint64_t*: saturated_inc2((x), UINT64_MAX))\n\n\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\nsigned long long\nfunc(signed long long x)\n{\n    return saturated_inc(x);\n}\n\ngcc\u3060\u3068\u3053\u3046\u306a\u3063\u3066\n% gcc-4.9 -O3 -S -o- tmp.c\n        .section __TEXT,__text_cold,regular,pure_instructions\nLCOLDB0:\n        .text\nLHOTB0:\n        .align 4,0x90\n        .globl _func\n_func:\nLFB1:\n        movabsq $9223372036854775807, %rax\n        cmpq    %rax, %rdi\n        setne   %al\n        movzbl  %al, %eax\n        addq    %rdi, %rax\n        ret\nLFE1:\n(\u4ee5\u4e0b\u7565)\n\nclang\u3060\u3068\u3053\u3046\u306a\u308b\n% clang-3.5 -O3 -S -o- tmp.c\n        .section        __TEXT,__text,regular,pure_instructions\n        .macosx_version_min 10, 11\n        .globl  _func\n        .align  4, 0x90\n_func:                                  ## @func\n        .cfi_startproc\n## BB#0:                                ## %entry\n        pushq   %rbp\nLtmp0:\n        .cfi_def_cfa_offset 16\nLtmp1:\n        .cfi_offset %rbp, -16\n        movq    %rsp, %rbp\nLtmp2:\n        .cfi_def_cfa_register %rbp\n        leaq    1(%rdi), %rax\n        movabsq $9223372036854775807, %rcx ## imm = 0x7FFFFFFFFFFFFFFF\n        cmpq    %rcx, %rdi\n        cmoveq  %rdi, %rax\n        popq    %rbp\n        retq\n        .cfi_endproc\n\n\n.subsections_via_symbols\n\ngcc\u306e\u3084\u3064\u306fx < y ? ++x : x\u3092x += (x < y ? 1 : 0)\u306b\u5909\u63db\u3057\u3066\u308b\u3068\u89e3\u91c8\u3059\u308b\u3068\u307e\u3042\u308f\u308a\u3068\u308f\u304b\u308b\u611f\u3058\u3002clang\u306f++x\u90e8\u5206\u3092\u5148\u982d\u306elea\u3067\u6295\u6a5f\u7684\u306b\u4f5c\u6210\u3057\u3066\u3042\u308b\u3002\u591a\u5206\u3069\u3046\u305bCPU\u306einteger pipeline\u4f59\u3063\u3066\u3093\u3060\u308d? \u3063\u3066\u3044\u3046\u524d\u63d0\u304b\u3002\n\n\u7d50\u69cb\u53e4\u3044\u3051\u3069gcc\u306e\u5834\u5408\n\u305d\u308d\u305d\u308d\u300c\u30b3\u30f3\u30d1\u30a4\u30e9\u66f4\u65b0\u3057\u308d\u3088\u300d\u3068\u3044\u3046\u611f\u3058\u3060\u304c\u3001gcc\u306a\u3089C11\u975e\u5bfe\u5fdc\u306e\u8d85\u53e4\u3044\u3084\u3064\u3067\u3082\u306a\u3093\u3068\u304b\u306a\u308b\u3002\n#define maxof(x) \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,   int8_t),   INT8_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,  uint8_t),  UINT8_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,  int16_t),  INT16_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x, uint16_t), UINT16_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,  int32_t),  INT32_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x, uint32_t), UINT32_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,  int64_t),  INT64_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x, uint64_t), UINT64_MAX, \\\n    __builtin_trap()))))))))\n#define saturated_inc(x) (((x) < maxof(typeof(x))) ? ++ (x) : (x))\n\n\u3053\u308c\u306f\u30de\u30af\u30ed\u304c\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u304c\u4e0a\u306eC11\u306e\u6642\u3068\u540c\u3058\u306a\u306e\u3067\u51fa\u529b\u3082\u540c\u3058\u3002__typeof__\u306f\u304b\u306a\u308a\u53e4\u304f\u304b\u3089\u3042\u308b\u306e\u3067gcc\u306a\u3089\u304b\u306a\u308a\u6614\u306e\u3067\u3082\u6551\u6e08\u63aa\u7f6e\u304c\u3042\u308b\u3068\u3044\u3048\u308b\u3002\n\n__typeof__\u3082\u306a\u3044\u3051\u3069C++\u306e\u5834\u5408\nC++\u306a\u3089\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u666e\u901a\u306b\u66f8\u3051\u308b\u3002\n#include <limits>\ntemplate<typename T> inline auto\nsaturated_inc(T& x)\n{\n    auto const max = std::numeric_limits<T>::max();\n\n    return (x < max) ? ++x : x;\n}\n\n\u3076\u3063\u3061\u3083\u3051\u4e00\u756a\u8aad\u307f\u3084\u3059\u3044\u3002\u3053\u308c\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\nsigned long long\nfunc(signed long long x)\n{\n    return saturated_inc(x);\n}\n\ng++\u3060\u3068\u3053\u3046\u306a\u3063\u3066\n% g++-trunk -std=c++1z -O3 -S -o- tmp.cpp\n        .text\n        .align 4,0x90\n        .globl __Z4funcx\n__Z4funcx:\nLFB172:\n        movabsq $9223372036854775807, %rax\n        cmpq    %rax, %rdi\n        setne   %al\n        movzbl  %al, %eax\n        addq    %rdi, %rax\n        ret\nLFE172:\n(\u4ee5\u4e0b\u7565)\n\nclang++\u3060\u3068\u3053\u3046\u3002\n% clang++-3.8 -std=c++1z -O3 -S -o- tmp.cpp\n        .section        __TEXT,__text,regular,pure_instructions\n        .macosx_version_min 10, 11\n        .globl  __Z4funcx\n        .align  4, 0x90\n__Z4funcx:                              ## @_Z4funcx\n        .cfi_startproc\n## BB#0:                                ## %entry\n        pushq   %rbp\nLtmp0:\n        .cfi_def_cfa_offset 16\nLtmp1:\n        .cfi_offset %rbp, -16\n        movq    %rsp, %rbp\nLtmp2:\n        .cfi_def_cfa_register %rbp\n        leaq    1(%rdi), %rax\n        movabsq $9223372036854775807, %rcx ## imm = 0x7FFFFFFFFFFFFFFF\n        cmpq    %rcx, %rdi\n        cmoveq  %rdi, %rax\n        popq    %rbp\n        retq\n        .cfi_endproc\n\n\n.subsections_via_symbols\n\n\u3088\u3046\u306fC11\u306e\u6642\u3068\u4e00\u7dd2\u3002\n\n\u305d\u308c\u3059\u3089\u3082\u9078\u629e\u80a2\u3068\u3057\u3066\u53d6\u308c\u306a\u3044\u5834\u5408\n\u53b3\u3057\u3044\u3068\u8a00\u308f\u3056\u308b\u3092\u3048\u306a\u3044\u3002\u591a\u5206\u3053\u308c\u307e\u3067\u306e\u3088\u3046\u306b\u4e00\u3064\u306e\u30de\u30af\u30ed\u3067\u3059\u3079\u3066\u306e\u578b\u3092\u30ab\u30d0\u30fc\u3059\u308b\u306e\u306f\u3067\u304d\u306a\u3044\u3068\u601d\u3046\u3002\u305f\u3060unsigned\u3092\u6368\u3066\u3066 signed\u306b\u9650\u5b9a \u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u9003\u3052\u65b9\u304c\u3042\u308a\u5f97\u308b\u3002\n#define maxof(x) (\\\n    (sizeof(x) == sizeof( int8_t)) ?  INT8_MAX : \\\n    (sizeof(x) == sizeof(int16_t)) ? INT16_MAX : \\\n    (sizeof(x) == sizeof(int32_t)) ? INT32_MAX : \\\n    (sizeof(x) == sizeof(int64_t)) ? INT64_MAX : \\\n    INTMAX_MAX)\n#define saturated_inc(x) ((x) < maxof(x) ? ++ (x) : (x))\n\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u7406\u7531\u306b\u3088\u308a\u30c0\u30e1\u306e\u4e2d\u3067\u3082\u4e00\u756a\u30de\u30b7\u306a\u6319\u52d5\u3092\u3059\u308b\n\nunsigned\u306f\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3057\u305f\u3068\u304d\u306e\u6319\u52d5\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u304csigned\u306f\u672a\u5b9a\u7fa9\u306a\u306e\u3067\u3001signed\u306b\u306f\u7a4d\u6975\u7684\u306b\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u304b\u3089\u6551\u3046\u7406\u7531\u304c\u3042\u308b\u3002\nunsigned\u306a\u578b\u306e\u5909\u6570\u3092\u7a81\u3063\u8fbc\u3080\u3068\u4e0a\u306e1bit\u3092\u4f7f\u308f\u306a\u3044\u611f\u3058\u3068\u3057\u3066\u52d5\u304f\u3002\u3082\u3061\u308d\u3093\u6b8b\u5ff5\u306a\u52d5\u304d\u3060\u304c\u3001\u3068\u306f\u3044\u3048\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306f\u767a\u751f\u3057\u306a\u3044\u3002\u3059\u308b\u3088\u308a\u30de\u30b7\u3067\u3042\u308b\u3002\n\n\n\u307e\u3068\u3081\n\ngcc7\u304c\u6700\u5f37\ngcc5\u4ee5\u964d\u3068clang3.8\u4ee5\u964d\u306f\u6700\u5f37\u306b\u307b\u307c\u8fd1\u3044\n\u305d\u308c\u4ee5\u524d\u306egcc\u306f\u8aad\u307f\u3065\u3089\u3044\u306a\u304c\u3089\u306a\u3093\u304b\u65b9\u6cd5\u304c\u3042\u308b\nC11\u306a\u3089\u307e\u3042OK\nC++\u306fC11\u3068\u540c\u3058\u30b3\u30fc\u30c9\u3092\u5410\u304f\u4e0a\u306bC11\u3088\u308a\u304b\u306a\u308a\u8aad\u307f\u3084\u3059\u3044\n\u4ee5\u4e0a\u306e\u3069\u308c\u306b\u3082\u8a72\u5f53\u3057\u306a\u3044\u4eba\u306f\u76f8\u5f53\u53b3\u3057\u3044\n\n# \u98fd\u548c #\u3068\u306f\n\n\u8a73\u7d30\u306f [Saturation arithmetic](https://en.wikipedia.org/wiki/Saturation_arithmetic) \u3092\u8aad\u3080\u3068\u826f\u3044\u3051\u3069\u3001\u3088\u3046\u306f signed char \u306a\u3089 126\u3092++\u3059\u308b\u3068127\u306b\u306a\u3063\u3066\u307b\u3057\u3044\u3051\u3069\u3001127\u3092++\u3059\u308b\u3068127\u306e\u307e\u307e\u306b\u306a\u3063\u3066\u307b\u3057\u3044\u308f\u3051\u3067\u3059\u3088\u3002signed\u306e\u6574\u6570\u306f\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u6319\u52d5\u304c\u672a\u5b9a\u7fa9\u3060\u3057\u306d\u3002\u305d\u3046\u3044\u3046\u3053\u3068\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n\u3067\u3001\u304b\u3064\u3001\u307e\u3042\u3001\u901f\u304f\u52d5\u3044\u3066\u6b32\u3057\u3044\u308f\u3051\u3002\u308f\u3056\u308f\u3056C\u3067\u66f8\u3044\u3066\u308b\u3093\u3060\u304b\u3089\u306a\u3002\n\n# \u89e3\u6cd5\n\n## \u3082\u306e\u3059\u3054\u3044\u6700\u8fd1\u306egcc\u306e\u5834\u5408\n\n`__GNUC__ >= 7` \u304b\u3089\u7d44\u307f\u8fbc\u307f\u95a2\u6570 `__builtin_add_overflow_p` \u304c[\u5897\u3048\u3066\u3044\u308b](https://gcc.gnu.org/onlinedocs/gcc/Integer-Overflow-Builtins.html#Integer-Overflow-Builtins)\u306e\u3067\u3001\u3053\u308c\u3067\u4e00\u767a\u3002\u3059\u3070\u3089\u3057\u3044\u3002\n\n```c\n#define saturated_inc(x) __builtin_add_overflow_p(x, 1, x) ? x : ++x\n```\n\n\u3061\u306a\u307f\u306b\u3058\u3083\u3042\u5b9f\u969b\u306e\u51fa\u529b\u306f\u3069\u3046\u306a\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u3053\u308c\u3067\u305f\u3068\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\n\n```C\nsigned long long\nfunc(signed long long x)\n{\n    return saturated_inc(x);\n}\n```\n\n\u51fa\u529b\u306f\u3053\u3046\u3002\n\n```gas\n% gcc-trunk -O3 -S -o- tmp.c\n        .text\n        .align 4,0x90\n        .globl _func\n_func:\nLFB1:\n        movq    %rdi, %rax\n        addq    $1, %rax\n        jo      L7\n        ret\nL7:\n        movq    %rdi, %rax\n        ret\nLFE1:\n(\u4ee5\u4e0b\u7565)\n```\n\n1\u8db3\u3057\u3066\u307f\u3066\u304b\u3089\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u30d5\u30e9\u30b0\u3067\u8fd4\u3059\u3082\u306e\u3092\u5909\u3048\u308b\u3001\u5b8c\u74a7\u306b\u6700\u77ed\u6700\u901f\u306e\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u3066\u307e\u3059\u306d\u3002\u7d20\u6674\u3089\u3057\u3044\u3002gcc7\u65e9\u304f\u51fa\u3066\u3002\n\n## \u7d50\u69cb\u6700\u8fd1\u306egcc\u3068\u304b\u7d50\u69cb\u6700\u8fd1\u306eclang\u306e\u5834\u5408\n\n`__GNUC__ >= 5` \u304b\u3089\u7d44\u307f\u8fbc\u307f\u95a2\u6570 `__builtin_add_overflow` \u304c[\u5897\u3048\u3066\u3044\u308b](https://gcc.gnu.org/onlinedocs/gcc-5.4.0/gcc/Integer-Overflow-Builtins.html#Integer-Overflow-Builtins)\u3002\u3053\u308c\u306f\u4e0a\u3068\u9055\u3063\u3066\u5b9f\u969b\u306b\u8db3\u3057\u7b97\u3092\u5b9f\u884c\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u30c6\u30f3\u30dd\u30e9\u30ea\u306e\u5909\u6570\u304c\u5fc5\u8981\u306a\u306e\u304c\u3084\u3084\u9762\u5012\u3060\u304c\u3001\u307e\u3042\u5f0f\u6587\u3092\u4f7f\u3048\u3070\u56de\u907f\u3067\u304d\u308b\u304b\u3089\u554f\u984c\u306a\u3044(\u3053\u306e\u5c0e\u5165\u3057\u305f\u5909\u6570\u306f\u3082\u3061\u308d\u3093\u6700\u9069\u5316\u3059\u308c\u3070\u6d88\u3048\u308b)\u3002\n\n```c\n#define saturated_inc(x) ({__typeof__(x) y; __builtin_add_overflow(x, 1, &y) ? x : ++x; })\n```\n\n\u3053\u308c\u3067\u305f\u3068\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\n\n```C\nsigned long long\nfunc(signed long long x)\n{\n    return saturated_inc(x);\n}\n```\n\ngcc\u3060\u3068\u3053\u3046\u306a\u3063\u3066\n\n```gas\n% gcc-6 -O3 -S -o- tmp.c\n        .text\n        .align 4,0x90\n        .globl _func\n_func:\nLFB1:\n        movq    %rdi, %rax\n        addq    $1, %rax\n        jo      L7\n        ret\nL7:\n        movq    %rdi, %rax\n        ret\nLFE1:\n(\u4ee5\u4e0b\u7565)\n```\n\nclang\u3060\u3068\u3053\u3046\u306a\u308b\n\n```gas\n% clang-3.8 -O3 -S -o- tmp.c\n        .section        __TEXT,__text,regular,pure_instructions\n        .macosx_version_min 10, 11\n        .globl  _func\n        .align  4, 0x90\n_func:                                  ## @func\n        .cfi_startproc\n## BB#0:                                ## %entry\n        pushq   %rbp\nLtmp0:\n        .cfi_def_cfa_offset 16\nLtmp1:\n        .cfi_offset %rbp, -16\n        movq    %rsp, %rbp\nLtmp2:\n        .cfi_def_cfa_register %rbp\n        movq    %rdi, %rax\n        incq    %rax\n        seto    %al\n        movzbl  %al, %eax\n        xorq    $1, %rax\n        addq    %rdi, %rax\n        popq    %rbp\n        retq\n        .cfi_endproc\n\n\n.subsections_via_symbols\n```\n\ngcc\u306f\u4e0a\u306e7\u7cfb\u306e\u6642\u3068\u540c\u3058\u3067\u7d20\u76f4\u306a\u611f\u3058\u3060\u3051\u3069\u3001clang\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u30b3\u30fc\u30c9\u5410\u3044\u3066\u307e\u3059\u306d\u3002`inc`\u3057\u3066`seto`\u304b\u3089\u306e`mobzx`\u3067`%eax`\u306b\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3057\u305f\u304b\u304c0/1\u3067\u5165\u3063\u3066\u304f\u308b\u304b\u3089\u3001\u305d\u308c\u3092`xor`\u3067\u3072\u3063\u304f\u308a\u8fd4\u3057\u3066\u304b\u3089`add`\u3067\u3082\u3068\u306e\u5f15\u6570\u306b\u8db3\u3057\u8fbc\u3080\u3002\u305f\u3057\u304b\u306b\u3002\u305f\u3057\u304b\u306b\u6b63\u3057\u3044\u3002\u3053\u308c\u591a\u5206\u30b8\u30e3\u30f3\u30d7\u5acc\u3063\u3066\u308b\u3093\u3060\u308d\u3046\u306a\u3002gcc\u3060\u3068`jo`\u3057\u3066\u308b\u3051\u3069\u3001\u3053\u308c\u306e\u30b3\u30b9\u30c8\u306e\u307b\u3046\u304c\u5927\u304d\u3044\u3068\u3044\u3046\u5224\u65ad\u306a\u3093\u3060\u3068\u601d\u3046\u3002\n\n## \u3053\u3053\u6570\u5e74\u306eC\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5834\u5408\n\n\u3053\u3053\u307e\u3067\u306e\u3084\u3064\u306ftype-neutral\u3067\u3059\u3079\u3066\u306esigned/unsigned\u306a\u6574\u6570\u306b\u5bfe\u3057\u3066\u5358\u4e00\u306e\u30de\u30af\u30ed\u3067\u3044\u3051\u305f\u308f\u3051\u3060\u304c\u3001`__builtin_add_overflow`\u304c\u5b58\u5728\u3057\u306a\u3044\u975egcc\u7cfb\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3068\u304bclang\u3060\u3051\u3069\u3061\u3087\u3044\u53e4\u3044\u3068\u304b\u3060\u3068\u3069\u3046\u3059\u308b\u304b\u3002\n\n\u307e\u3042`_Generic`\u3068\u3044\u3046\u8a71\u306b\u306a\u308b\u308f\u3051\u3060\u3051\u3069\u3001[`_Generic`\u306b\u306f\u7f60\u304c\u3042\u308b](https://gustedt.wordpress.com/2015/05/11/the-controlling-expression-of-_generic/)\u306e\u3067\u8981\u6ce8\u610f\u3067\u3001_Generic\u306e\u5f15\u6570\u306b\u7121\u601d\u616e\u306b`char`\u3068\u304b\u66f8\u3044\u3061\u3083\u3046\u3068`int`\u306btype promote\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b(gcc\u306f\u3059\u308b)\u306e\u3067\u3001\u30dd\u30a4\u30f3\u30bf\u306b\u3072\u306d\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u7f60\u3044\u3002\u3002\u3002\n\n```C\n#define saturated_inc2(x, y) (((x) < (y)) ? ++ (x) : (x))\n#define saturated_inc(x) _Generic( &(x),                \\\n          int8_t*: saturated_inc2((x),   INT8_MAX),     \\\n         uint8_t*: saturated_inc2((x),  UINT8_MAX),     \\\n         int16_t*: saturated_inc2((x),  INT16_MAX),     \\\n        uint16_t*: saturated_inc2((x), UINT16_MAX),     \\\n         int32_t*: saturated_inc2((x),  INT32_MAX),     \\\n        uint32_t*: saturated_inc2((x), UINT32_MAX),     \\\n         int64_t*: saturated_inc2((x),  INT64_MAX),     \\\n        uint64_t*: saturated_inc2((x), UINT64_MAX))\n```\n\n\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\n\n```C\nsigned long long\nfunc(signed long long x)\n{\n    return saturated_inc(x);\n}\n```\n\ngcc\u3060\u3068\u3053\u3046\u306a\u3063\u3066\n\n```gas\n% gcc-4.9 -O3 -S -o- tmp.c\n        .section __TEXT,__text_cold,regular,pure_instructions\nLCOLDB0:\n        .text\nLHOTB0:\n        .align 4,0x90\n        .globl _func\n_func:\nLFB1:\n        movabsq $9223372036854775807, %rax\n        cmpq    %rax, %rdi\n        setne   %al\n        movzbl  %al, %eax\n        addq    %rdi, %rax\n        ret\nLFE1:\n(\u4ee5\u4e0b\u7565)\n```\n\nclang\u3060\u3068\u3053\u3046\u306a\u308b\n\n```gas\n% clang-3.5 -O3 -S -o- tmp.c\n        .section        __TEXT,__text,regular,pure_instructions\n        .macosx_version_min 10, 11\n        .globl  _func\n        .align  4, 0x90\n_func:                                  ## @func\n        .cfi_startproc\n## BB#0:                                ## %entry\n        pushq   %rbp\nLtmp0:\n        .cfi_def_cfa_offset 16\nLtmp1:\n        .cfi_offset %rbp, -16\n        movq    %rsp, %rbp\nLtmp2:\n        .cfi_def_cfa_register %rbp\n        leaq    1(%rdi), %rax\n        movabsq $9223372036854775807, %rcx ## imm = 0x7FFFFFFFFFFFFFFF\n        cmpq    %rcx, %rdi\n        cmoveq  %rdi, %rax\n        popq    %rbp\n        retq\n        .cfi_endproc\n\n\n.subsections_via_symbols\n```\n\ngcc\u306e\u3084\u3064\u306f`x < y ? ++x : x`\u3092`x += (x < y ? 1 : 0)`\u306b\u5909\u63db\u3057\u3066\u308b\u3068\u89e3\u91c8\u3059\u308b\u3068\u307e\u3042\u308f\u308a\u3068\u308f\u304b\u308b\u611f\u3058\u3002clang\u306f`++x`\u90e8\u5206\u3092\u5148\u982d\u306e`lea`\u3067\u6295\u6a5f\u7684\u306b\u4f5c\u6210\u3057\u3066\u3042\u308b\u3002\u591a\u5206\u3069\u3046\u305bCPU\u306einteger pipeline\u4f59\u3063\u3066\u3093\u3060\u308d? \u3063\u3066\u3044\u3046\u524d\u63d0\u304b\u3002\n\n## \u7d50\u69cb\u53e4\u3044\u3051\u3069gcc\u306e\u5834\u5408\n\n\u305d\u308d\u305d\u308d\u300c\u30b3\u30f3\u30d1\u30a4\u30e9\u66f4\u65b0\u3057\u308d\u3088\u300d\u3068\u3044\u3046\u611f\u3058\u3060\u304c\u3001gcc\u306a\u3089C11\u975e\u5bfe\u5fdc\u306e\u8d85\u53e4\u3044\u3084\u3064\u3067\u3082\u306a\u3093\u3068\u304b\u306a\u308b\u3002\n\n```C\n#define maxof(x) \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,   int8_t),   INT8_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,  uint8_t),  UINT8_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,  int16_t),  INT16_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x, uint16_t), UINT16_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,  int32_t),  INT32_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x, uint32_t), UINT32_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x,  int64_t),  INT64_MAX, \\\n    __builtin_choose_expr(__builtin_types_compatible_p(x, uint64_t), UINT64_MAX, \\\n    __builtin_trap()))))))))\n#define saturated_inc(x) (((x) < maxof(typeof(x))) ? ++ (x) : (x))\n```\n\n\u3053\u308c\u306f\u30de\u30af\u30ed\u304c\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u304c\u4e0a\u306eC11\u306e\u6642\u3068\u540c\u3058\u306a\u306e\u3067\u51fa\u529b\u3082\u540c\u3058\u3002`__typeof__`\u306f\u304b\u306a\u308a\u53e4\u304f\u304b\u3089\u3042\u308b\u306e\u3067gcc\u306a\u3089\u304b\u306a\u308a\u6614\u306e\u3067\u3082\u6551\u6e08\u63aa\u7f6e\u304c\u3042\u308b\u3068\u3044\u3048\u308b\u3002\n\n## `__typeof__`\u3082\u306a\u3044\u3051\u3069C++\u306e\u5834\u5408\nC++\u306a\u3089\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u666e\u901a\u306b\u66f8\u3051\u308b\u3002\n\n```cpp\n#include <limits>\ntemplate<typename T> inline auto\nsaturated_inc(T& x)\n{\n    auto const max = std::numeric_limits<T>::max();\n\n    return (x < max) ? ++x : x;\n}\n```\n\n\u3076\u3063\u3061\u3083\u3051\u4e00\u756a\u8aad\u307f\u3084\u3059\u3044\u3002\u3053\u308c\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\n\n```C\nsigned long long\nfunc(signed long long x)\n{\n    return saturated_inc(x);\n}\n```\n\ng++\u3060\u3068\u3053\u3046\u306a\u3063\u3066\n\n```gas\n% g++-trunk -std=c++1z -O3 -S -o- tmp.cpp\n        .text\n        .align 4,0x90\n        .globl __Z4funcx\n__Z4funcx:\nLFB172:\n        movabsq $9223372036854775807, %rax\n        cmpq    %rax, %rdi\n        setne   %al\n        movzbl  %al, %eax\n        addq    %rdi, %rax\n        ret\nLFE172:\n(\u4ee5\u4e0b\u7565)\n```\n\nclang++\u3060\u3068\u3053\u3046\u3002\n\n```gas\n% clang++-3.8 -std=c++1z -O3 -S -o- tmp.cpp\n        .section        __TEXT,__text,regular,pure_instructions\n        .macosx_version_min 10, 11\n        .globl  __Z4funcx\n        .align  4, 0x90\n__Z4funcx:                              ## @_Z4funcx\n        .cfi_startproc\n## BB#0:                                ## %entry\n        pushq   %rbp\nLtmp0:\n        .cfi_def_cfa_offset 16\nLtmp1:\n        .cfi_offset %rbp, -16\n        movq    %rsp, %rbp\nLtmp2:\n        .cfi_def_cfa_register %rbp\n        leaq    1(%rdi), %rax\n        movabsq $9223372036854775807, %rcx ## imm = 0x7FFFFFFFFFFFFFFF\n        cmpq    %rcx, %rdi\n        cmoveq  %rdi, %rax\n        popq    %rbp\n        retq\n        .cfi_endproc\n\n\n.subsections_via_symbols\n```\n\n\u3088\u3046\u306fC11\u306e\u6642\u3068\u4e00\u7dd2\u3002\n\n## \u305d\u308c\u3059\u3089\u3082\u9078\u629e\u80a2\u3068\u3057\u3066\u53d6\u308c\u306a\u3044\u5834\u5408\n\n\u53b3\u3057\u3044\u3068\u8a00\u308f\u3056\u308b\u3092\u3048\u306a\u3044\u3002\u591a\u5206\u3053\u308c\u307e\u3067\u306e\u3088\u3046\u306b\u4e00\u3064\u306e\u30de\u30af\u30ed\u3067\u3059\u3079\u3066\u306e\u578b\u3092\u30ab\u30d0\u30fc\u3059\u308b\u306e\u306f\u3067\u304d\u306a\u3044\u3068\u601d\u3046\u3002\u305f\u3060unsigned\u3092\u6368\u3066\u3066 **signed\u306b\u9650\u5b9a** \u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u9003\u3052\u65b9\u304c\u3042\u308a\u5f97\u308b\u3002\n\n```C\n#define maxof(x) (\\\n    (sizeof(x) == sizeof( int8_t)) ?  INT8_MAX : \\\n    (sizeof(x) == sizeof(int16_t)) ? INT16_MAX : \\\n    (sizeof(x) == sizeof(int32_t)) ? INT32_MAX : \\\n    (sizeof(x) == sizeof(int64_t)) ? INT64_MAX : \\\n    INTMAX_MAX)\n#define saturated_inc(x) ((x) < maxof(x) ? ++ (x) : (x))\n```\n\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u7406\u7531\u306b\u3088\u308a\u30c0\u30e1\u306e\u4e2d\u3067\u3082\u4e00\u756a\u30de\u30b7\u306a\u6319\u52d5\u3092\u3059\u308b\n\n- unsigned\u306f\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3057\u305f\u3068\u304d\u306e\u6319\u52d5\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u304csigned\u306f\u672a\u5b9a\u7fa9\u306a\u306e\u3067\u3001signed\u306b\u306f\u7a4d\u6975\u7684\u306b\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u304b\u3089\u6551\u3046\u7406\u7531\u304c\u3042\u308b\u3002\n- unsigned\u306a\u578b\u306e\u5909\u6570\u3092\u7a81\u3063\u8fbc\u3080\u3068\u4e0a\u306e1bit\u3092\u4f7f\u308f\u306a\u3044\u611f\u3058\u3068\u3057\u3066\u52d5\u304f\u3002\u3082\u3061\u308d\u3093\u6b8b\u5ff5\u306a\u52d5\u304d\u3060\u304c\u3001\u3068\u306f\u3044\u3048\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306f\u767a\u751f\u3057\u306a\u3044\u3002\u3059\u308b\u3088\u308a\u30de\u30b7\u3067\u3042\u308b\u3002\n\n## \u307e\u3068\u3081\n- gcc7\u304c\u6700\u5f37\n- gcc5\u4ee5\u964d\u3068clang3.8\u4ee5\u964d\u306f\u6700\u5f37\u306b\u307b\u307c\u8fd1\u3044\n- \u305d\u308c\u4ee5\u524d\u306egcc\u306f\u8aad\u307f\u3065\u3089\u3044\u306a\u304c\u3089\u306a\u3093\u304b\u65b9\u6cd5\u304c\u3042\u308b\n- C11\u306a\u3089\u307e\u3042OK\n- C++\u306fC11\u3068\u540c\u3058\u30b3\u30fc\u30c9\u3092\u5410\u304f\u4e0a\u306bC11\u3088\u308a\u304b\u306a\u308a\u8aad\u307f\u3084\u3059\u3044\n- \u4ee5\u4e0a\u306e\u3069\u308c\u306b\u3082\u8a72\u5f53\u3057\u306a\u3044\u4eba\u306f\u76f8\u5f53\u53b3\u3057\u3044\n", "tags": ["C", "GCC", "clang", "x86", "\u30a2\u30bb\u30f3\u30d6\u30e9"]}