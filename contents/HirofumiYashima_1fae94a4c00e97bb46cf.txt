{"context": " More than 1 year has passed since last update.\u5148\u65e5\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u3001Haskell \u306e \u30ac\u30fc\u30c9\u5f0f \u30e9\u30a4\u30af\u306b\u3001\u300c\u95a2\u6570\u304c\u53d7\u3051\u53d6\u308b \u5f15\u6570\u306e\u6761\u4ef6\uff08\u578b or \u5024\uff09 \u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u3059\u308b\u51e6\u7406\u5185\u5bb9\u3092\u5834\u5408\u5206\u3051\u3059\u308b\u300d\u30e1\u30bd\u30c3\u30c9 \u306e\u4f5c\u308a\u65b9\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3057\u305f\u3002\n\nHirofumiYashima Qiita\u8a18\u4e8b\uff08 \uff09\u300cPython \u3067 Haskell \u306e \u30ac\u30fc\u30c9\u5f0f \u30e9\u30a4\u30af\u306b\u3001\u300c\u95a2\u6570\u304c\u53d7\u3051\u53d6\u308b \u5f15\u6570\u306e\u6761\u4ef6\uff08\u578b or \u5024\uff09 \u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u3059\u308b\u51e6\u7406\u5185\u5bb9\u3092\u5834\u5408\u5206\u3051\u3059\u308b\u300d\u30e1\u30bd\u30c3\u30c9 \u3092\u5b9a\u7fa9\u3059\u308b \u30a8\u30ec\u30ac\u30f3\u30c8\u306a\u30b3\u30fc\u30c9\u4e8b\u4f8b\u3092\u898b\u3064\u3051\u305f\u4ef6\u300d\n\n\nHaskell \u3067\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30fb\u30de\u30c3\u30c1\u5f0f \u3084 \u30ac\u30fc\u30c9\u5f0f \u3092\u4f7f\u3063\u3066\u3001\u95a2\u6570\u306b\u6e21\u3055\u308c\u305f\u5f15\u6570\u306e\uff08\u578b or \u5024\uff09 \u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u3059\u308b\u95a2\u6570 \u3092 \u5834\u5408\u5206\u3051\u3057\u3066 \u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u300cDive Into Python 3\u300d\u3068\u3044\u3046\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3092\uff08\u5225\u4ef6\u3067\uff09\u773a\u3081\u3066\u3044\u3066\u3001\u3053\u308c\u306b\u76f8\u5f53\u3059\u308b\u51e6\u7406\u3092 Python \u3067\u5b9f\u884c\u3059\u308b \u30a8\u30ec\u30ac\u30f3\u30c8\u306a\u30b3\u30fc\u30c9 \u304c\u76ee\u306b\u7559\u307e\u3063\u305f\u306e\u3067\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5f35\u3089\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\nDive Into Python 3 \u7b2c6\u7ae0\u30af\u30ed\u30fc\u30b8\u30e3\u3068\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf \u300c6.3. \u95a2\u6570\u306e\u30ea\u30b9\u30c8\u300d\n\uff08 \u65b9\u6cd5 \uff09\n1. \u307e\u305a\u6700\u521d\u306b\u3001(\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6761\u4ef6\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9, \u305d\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u9069\u7528\u3055\u305b\u305f\u3044\u30e1\u30bd\u30c3\u30c9\uff09\u3000\u3092 tuple\uff08\u53c8\u306f list, dict\uff09\u306b\u3001\u5fc5\u8981\u306a\u6761\u4ef6\u306e\u30d1\u30bf\u30fc\u30f3\u6570\u5206\u3001\u7528\u610f\u3002\n\u3059\u3079\u3066\u306e\uff08\u6761\u4ef6\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9, \u9069\u7528\u30e1\u30bd\u30c3\u30c9\uff09\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 tuple\uff08\u53c8\u306f list, dict) \u306b\u53ce\u3081\u305f\u30eb\u30fc\u30eb\u96c6\u5408\u3092\u5b9a\u3081\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3002\n\nrules = (\n            \uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u6761\u4ef6\u2460 \u306b\u5408\u81f4\u3059\u308b\u304b\u306e\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9\u540d,  \u6761\u4ef6\u2460 \u306b\u5408\u81f4\u3059\u308b\u5834\u5408\u306e\u51e6\u7406\u30e1\u30bd\u30c3\u30c9\u540d\uff09,\n            \uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u6761\u4ef6\u2461 \u306b\u5408\u81f4\u3059\u308b\u304b\u306e\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9\u540d,  \u6761\u4ef6\u2461 \u306b\u5408\u81f4\u3059\u308b\u5834\u5408\u306e\u51e6\u7406\u30e1\u30bd\u30c3\u30c9\u540d\uff09,\n            \uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u6761\u4ef6\u2462 \u306b\u5408\u81f4\u3059\u308b\u304b\u306e\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9\u540d,  \u6761\u4ef6\u2462 \u306b\u5408\u81f4\u3059\u308b\u5834\u5408\u306e\u51e6\u7406\u30e1\u30bd\u30c3\u30c9\u540d\uff09,\n                                                        \u30fb\u30fb\u30fb\n            \uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u6761\u4ef6N \u306b\u5408\u81f4\u3059\u308b\u304b\u306e\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9\u540d,  \u6761\u4ef6N \u306b\u5408\u81f4\u3059\u308b\u5834\u5408\u306e\u51e6\u7406\u30e1\u30bd\u30c3\u30c9\u540d\uff09\n)\n\n\n\n2. \u6b21\u306b\u300c\u30eb\u30fc\u30eb\u96c6\u5408\u300d\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u3001\u30eb\u30fc\u30eb\u3092\uff11\u4ef6\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u304csatisfy\u3057\u305f\uff08\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u305f\uff09\u30eb\u30fc\u30eb\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u3001\u305d\u306e\u30eb\u30fc\u30eb\u306b\u8a18\u8ff0\u3055\u308c\u305f\u51e6\u7406\u30e1\u30bd\u30c3\u30c9 \u3092 \u5b9f\u884c\u3002\n\n\n\ndef meethod_name(\u5f15\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8):\n    for arg_pattern_detecting_func, applying_func in rules:       \n        if arg_pattern_detecting_func(\u5f15\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8):\n            return applying_func(\u5f15\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\n\n\n\n\n\n\n\u4eca\u56de\u306f\u3001\u95a2\u6570\u3092 def\u6587\u3067\u5b9a\u7fa9\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001Python \u306e\u30b3\u30fc\u30c9\u3092\u3001string\u578b\uff08\u6587\u5b57\u5217\uff09\u306e\u30c7\u30fc\u30bf\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5f62\u3067\u751f\u6210\u3057\u3066\uff08\u30ea\u30c6\u30e9\u30eb\u30d9\u30bf\u6253\u3061\uff09\u3001exec\u30e1\u30bd\u30c3\u30c9 \u306e\u5f15\u6570\u306b\u6e21\u3057\u3066 \u5b9f\u884c\u3059\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u8a66\u307f\u3066\u6210\u529f\u3057\u305f\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u5f15\u6570\u306b\u53d7\u3051\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u3055\u305b\u308b\u51e6\u7406\u3092\u3001def\u6587\u3067\u5b9a\u7fa9\u6e08\u307f\u306e\u30e1\u30bd\u30c3\u30c9\uff08\u5b9a\u6570\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09\u3067\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u6587\u5b57\u5217\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5f62\u3067 exec\u30e1\u30bd\u30c3\u30c9 \u306b\u6e21\u3059\u3053\u3068\u3067\u3001\n\n\u5b9f\u884c\u3055\u305b\u308b\u547d\u4ee4\u6587\u3084\u5f0f\u306e\u30b3\u30fc\u30c9\u6587\u5b57\u5217\u3092\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30b3\u30fc\u30c9\u306e\u4e2d\u3067\u3001\u52d5\u7684\u306b\uff08\u53ef\u5909\u306b\uff09\u751f\u6210\u3055\u305b\u308b\n\n\u9053\u304c\u958b\u3051\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u8a18\u53f7\u3067\u56f2\u3063\u305f \u6587\u5b57\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e Python\u30b3\u30fc\u30c9 \u3092\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u306a\u304b\u3067\u3001\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u51e6\u7406\u307e\u308f\u308a\u306f\u5b9f\u88c5\u3057\u307e\u305b\u3093\u304c\u3001\n\u4e00\u5ea6\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u306a\u304b\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u300c\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u8a18\u53f7\u3067\u56f2\u307e\u308c\u305f\u3001\u6587\u5b57\u5217\u578b\u306ePython\u30b3\u30fc\u30c9\u30fb\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u3092\u3001exec\u30b3\u30fc\u30c9\u3067\u53d7\u3051\u53d6\u3063\u3066\u3001Python\u30b3\u30fc\u30c9\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u30b3\u30fc\u30c9\u306e\u5b9f\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u6b21\u56de\u4ee5\u964d\u306e\u8a18\u4e8b\u3067\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8 \u304c Python\u30b3\u30fc\u30c9 \u3092\u81ea\u52d5\u7684\u306b\u3001\u52d5\u7684 \u306b \u751f\u6210\u3059\u308b\uff08\u3042\u308b\u7a2e\u306e\uff09\u300c\u30e1\u30bf\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u300d\u7684\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3055\u305b\u308b\u3068\u3053\u308d\u307e\u3067\u3092\u884c\u3046\u4e88\u5b9a\u3067\u3059\u3002\n\n\n\u307e\u305a\u306f\u3001def\u6587\u3067\u3001\uff08\u5b9a\u6570\u7684\u306b\u56fa\u5b9a\u5b9a\u7fa9\u3055\u308c\u305f\uff09\u30e1\u30bd\u30c3\u30c9\u3092\u884c\u3046\u5834\u5408\u3092\u304a\u3055\u3089\u3044\u3057\u307e\u3059\u3002\n\n\n\u5b9f\u4f8b\n\n\n\u56fa\u5b9a\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u305f\uff08\u5b9a\u6570\u7684\u306a\uff09\u30e1\u30bd\u30c3\u30c9 \u3092\u7528\u3044\u305f Haskell \u30ac\u30fc\u30c9\u5f0f\u30e9\u30a4\u30af \u306a\u51e6\u7406\u3092\u5b9f\u73fe\u3055\u305b\u308b\u30b3\u30fc\u30c9\n\n\nPython3\ndef match_list(obj):\n   return isinstance(obj, list)\n\ndef apply_list(obj, new_data):\n    for element in new_data:\n        obj.append(element)\n    return obj\n\ndef match_dict(obj):\n   return isinstance(obj, dict)  \n\ndef apply_dict(obj, new_data):\n   obj.update(new_data)\n   return obj\n\n\n\nPython3\nrules = (\n          (match_list, apply_list),               \n          (match_dict, apply_dict),\n        )\n\n\n\nPython3\ndef add_data(current_object, new_data):\n    for (class_inspection_func, apply_func) in  rules:\n        if class_inspection_func(current_object) and class_inspection_func(new_data):\n            apply_func(current_object, new_data)\n\n\n\n\u5b9f\u884c\n\nlist\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u305f\u5834\u5408\n\nPython3\ncurrent_object = [\"a\", \"b\", \"c\"]\nnew_data = [\"d\", \"e\"]\n\nadd_data(current_object, new_data)\nprint(current_object)\n\n\n['a', 'b', 'c', 'd', 'e']\n\n\n\nPython3\ncurrent_object = [\"X\", \"Y\", \"Z\"]\nnew_data = (\"A\", \"B\")\n\nadd_data(current_object, new_data)\nprint(current_object)\n\n\n['X', 'Y', 'Z']\n\ndict\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u305f\u5834\u5408\n\nPython3\ncurrent_object_2 = {\"label_a\" : \"value_a\", \"label_b\" : \"value_b\", \"label_c\" : \"value_c\"}\nnew_data_2= {\"label_d\" : \"value_d\", \"label_e\" : \"value_e\"}\n\nadd_data(current_object_2, new_data_2)\nprint(current_object_2)\n\n\n{'label_d': 'value_d', 'label_b': 'value_b', 'label_e': 'value_e', 'label_a': 'value_a', 'label_c': 'value_c'}\n\n\n\n\nPython3\ncurrent_object_3 = {\"label_X\" : \"value_X\", \"label_Y\" : \"value_Y\", \"label_Z\" : \"value_Z\"}\nnew_data_3= [\"value_K\", \"label_L\", \"value_M\"]\n\nadd_data(current_object_3, new_data_3)\nprint(current_object_3)\n\n\n{'label_X': 'value_X', 'label_Y': 'value_Y', 'label_Z': 'value_Z'}\n\n\n\uff08 \u95a2\u9023 \uff09\n\n\nHatena::Group::Bugrammer \uff082011/12/13\uff09 \u300c[\u307f\u3093\u306a\u4ee5\u5916\u306ePython]\u304a\u524d\u306f\u4f55\u8005\u304b\u306f\u8208\u5473\u304c\u7121\u3044\u304c\u3001\u304a\u524d\u306e\u529b\u3092\u501f\u308a\u305f\u3044 -- Python\u306b\u304a\u3051\u308b\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u300d\n\u30b5\u30eb\u3067\u3082\u308f\u304b\u308b \u9006\u5f15\u304d\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3 \u300c\u7b2c1\u7ae0\u3000\u521d\u3081\u3066\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u300d\nM.Hiroi's Home Page Functional Programming \u304a\u6c17\u697d Haskell \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580 \u300c\u591a\u76f8\u7684\u306a\u30ec\u30b3\u30fc\u30c9\u300d\ntorshinor\u3055\u3093 Qiita\u8a18\u4e8b\uff082013/03/17\uff09 \u300c\u3059\u3054\u3044Haskell\u305f\u306e\u3057\u304f\u5b66\u307c\u3046\uff01 \u7b2c2\u7ae0 \u8aad\u66f8\u30e1\u30e2\u300d\nlotz\u3055\u3093 Qiita\u8a18\u4e8b\uff082015/04/26\uff09 \u300c\u9ad8\u968e\u591a\u76f8\u578b\u3067\u904a\u3093\u3067\u307f\u308b\u300d\n\u3084\u3055\u3057\u3044 Haskell \u5165\u9580 (\u30d0\u30fc\u30b8\u30e7\u30f3 98 ) 2  \u5024\u3001\u578b\u3001\u305d\u306e\u307b\u304b\u306e\u6709\u7528\u306a\u6982\u5ff5\u300c2.1  \u591a\u76f8\u578b\u300d\n\n\n\n\u6b21\u306b\u3001\u672c\u8a18\u4e8b\u304c\u76ee\u6307\u3059 \u30b3\u30fc\u30c9\u6587\u5b57\u5217 \u3092 string\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3067\u53d7\u3051\u53d6\u3063\u3066\u3001exec\u30e1\u30bd\u30c3\u30c9 \u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002\n\n\n\u30e1\u30bd\u30c3\u30c9\u5316\u3057\u306a\u3044\u3067\u3001\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u305f\u6587\u5b57\u5217\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u3066\u3001exec\u30e1\u30bd\u30c3\u30c9\u3067\u5b9f\u884c\n\n\n\n\uff08 \u95a2\u9023\u8a18\u4e8b \uff09\n\n\nHirofumiYashima Qiita\u8a18\u4e8b \u300c\u5909\u6570\u5ba3\u8a00 \u3092 \u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067 \u81ea\u52d5\u5b9f\u884c\u3055\u305b\u305f\u3044\u3068\u304d\u306f\u3001exec( ) \u30e1\u30bd\u30c3\u30c9 \u3092\u4f7f\u3046\u3068\u3067\u304d\u308b\u300d\n\n\n\uff08 2016/01/30 \u8ffd\u8a18 \uff09\n\u30b3\u30fc\u30c9\u306e\u6319\u52d5\u306b\u554f\u984c\u306f\u306a\u3044\u3082\u306e\u306e\u3001\u5909\u6570\u540d\u306e\u4ed8\u3051\u65b9 \u306b\u6539\u5584\u3059\u3079\u304d\u90e8\u5206\u304c\u3042\u3063\u305f\u306e\u3067\u30e1\u30e2\u66f8\u304d\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u304c \u30ea\u30b9\u30c8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u7d50\u679c \u3092 \u683c\u7d0d\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d\u306f\u3001\u300coutput_obj_name\u300d\u3067\u306f\u306a\u304f\u3001\u4f8b\u3048\u3070\u300cclass_type_check_result_name\u300d\u3084\u300ccheck_result_boolean_value_name\u300d\u306e\u65b9\u304c\u610f\u5473\u304c\u901a\u308a\u3001\u9069\u5207\u3067\u3042\u3063\u305f\u3002\n\u6700\u7d42\u7684\u306b\u65e2\u5b58\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u300cobj\u300d\uff09\u3068\u65b0\u898f\u30c7\u30fc\u30bf\uff08\u300cadd_date\u300d\uff09\u3092\u30de\u30fc\u30b8\u3057\u3066\u3001\u5f97\u305f\u3044\uff08\u8fd4\u3055\u308c\u308b\uff09\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u300cobj\u300d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308a\u3001isinstance({b}) \u306e\u8fd4\u308a\u5024\u3067\u306f\u306a\u3044\u305f\u3081\u3001isinstance({b}) \u306e\u8fd4\u308a\u5024 \u3092 \u683c\u7d0d\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d\u3092\u300coutput_obj_name\u300d\u3068\u3059\u308b\u3068\u3001\u30b3\u30fc\u30c9\u3092\u5f8c\u3067\u8aad\u3080\u969b\u3001\u30df\u30b9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u306a\u308b\u3002\n\n\npython3\noutput_obj_name = \"result\"\nobj = [\"test_1\", \"test_2\", \"test_3\"]\nobj_name = \"obj\"\nadd_data = [\"test_4\", \"test_5\", \"test_6\"]\n\n\nstatesment_tuple = (\n                    (\"{a}=isinstance({b}, list)\".format(a=output_obj_name, b=obj),\n                    \"\"\"if {a}:\n                        for element in {new_data}:{object}.append(element)\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data)),\n                    (\"{a}=isinstance({b}, dict)\".format(a=output_obj_name, b=obj),\n                     \"\"\"if {a}:\n                         {object}.update({new_data})\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data))\n                    )\n\n\n\n\uff08 format\u30e1\u30bd\u30c3\u30c9 \u3067 \u751f\u6210\u3055\u308c\u305f Python\u30b3\u30fc\u30c9\u6587\u5b57\u5217 \uff08\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09\u306e\u5185\u5bb9\u3092\u78ba\u8a8d \uff09\n\npython3\nfor (statesment_1, statesment_2) in statesment_tuple:\n    print(statesment_1)\n    print(statesment_2)\n\n\n\n\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\uff08\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09\nresult=isinstance(['test_1', 'test_2', 'test_3'], list)\nif result:\n                        for element in ['test_4', 'test_5', 'test_6']:obj.append(element)\nresult=isinstance(['test_1', 'test_2', 'test_3'], dict)\nif result:\n                         obj.update(['test_4', 'test_5', 'test_6'])\n\n\n\nprint \u3092 exec \u306b\u5909\u3048\u3066\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\n\npython3\nfor (statesment_1, statesment_2) in statesment_tuple:\n    exec(statesment_1)\n    exec(statesment_2)\n\n\n\n\npython3\nprint(obj)\n\n\n\n\u5b9f\u884c\u7d50\u679c\uff08\u6210\u529f\uff09\n\n['test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6']\n\n\n\n\u30c7\u30fc\u30bf\u3092\u5909\u3048\u3066\u5b9f\u884c\u3057\u3066\u307f\u308b\n\n\npython3\noutput_obj_name = \"result\"\nobj = [\"test_a\", \"test_b\", \"test_c\"]\nobj_name = \"obj\"\nadd_data = [\"test_d\", \"test_e\", \"test_f\"]\n\nfor (statesment_1, statesment_2) in statesment_tuple:\n    print(statesment_1)\n    print(statesment_2)\n\n\n\uff08 format\u30e1\u30bd\u30c3\u30c9 \u3067 \u751f\u6210\u3055\u308c\u305f Python\u30b3\u30fc\u30c9\u6587\u5b57\u5217 \uff08\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09\u306e\u5185\u5bb9\u3092\u78ba\u8a8d \uff09\n\nstatesment_tuple \u306e\u66f4\u65b0\u304c\u5fc5\u8981\n\nresult=isinstance(['test_1', 'test_2', 'test_3'], list)\nif result:\n                        for element in ['test_4', 'test_5', 'test_6']:obj.append(element)\nresult=isinstance(['test_1', 'test_2', 'test_3'], dict)\nif result:\n                         obj.update(['test_4', 'test_5', 'test_6'])\n\n\n\nstatesment_tuple \u3092\u66f4\u65b0\n\n\npython3\nstatesment_tuple = (\n                    (\"{a}=isinstance({b}, list)\".format(a=output_obj_name, b=obj),\n                    \"\"\"if {a}:\n                        for element in {new_data}:{object}.append(element)\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data)),\n                    (\"{a}=isinstance({b}, dict)\".format(a=output_obj_name, b=obj),\n                     \"\"\"if {a}:\n                         {object}.update({new_data})\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data))\n                    )\n\n\nfor (statesment_1, statesment_2) in statesment_tuple:\n    print(statesment_1)\n    print(statesment_2)\n\n\n\uff08 format\u30e1\u30bd\u30c3\u30c9 \u3067 \u751f\u6210\u3055\u308c\u305f Python\u30b3\u30fc\u30c9\u6587\u5b57\u5217 \uff08\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09\u306e\u5185\u5bb9 \u3092 \u518d\u5ea6\u3001\u78ba\u8a8d \uff09\n\n\u56fa\u5b9a\u30b3\u30fc\u30c9\nresult=isinstance(['test_a', 'test_b', 'test_c'], list)\nif result:\n                        for element in ['test_d', 'test_e', 'test_f']:obj.append(element)\nresult=isinstance(['test_a', 'test_b', 'test_c'], dict)\nif result:\n                         obj.update(['test_d', 'test_e', 'test_f'])\n\n\n\n\u30b3\u30fc\u30c9\u6587\u5b57\u5217 \u3092 \u66f4\u65b0\u3067\u304d\u305f\u306e\u3067\u3001exec\u30e1\u30bd\u30c3\u30c9 \u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\n\n\npython3\nfor (statesment_1, statesment_2) in statesment_tuple:\n    exec(statesment_1)\n    exec(statesment_2)\n\nprint(obj)\n\n\n\n\u5b9f\u884c\u6210\u529f\n\n['test_a', 'test_b', 'test_c', 'test_d', 'test_e', 'test_f']\n\n\n\n\u30c7\u30fc\u30bf\u3092dict\u578b\u306b\u5909\u3048\u3066\u3001\u5b9f\u884c\u3057\u3066\u307f\u308b\n\n\npython3\noutput_obj_name = \"result\"\nobj = {\"key_test_1\" : \"value_test_1\", \"key_test_2\" : \"value_test_2\"}\nobj_name = \"obj\"\nadd_data = {\"key_test_3\" : \"value_test_3\", \"key_test_4\" : \"value_test_4\"}\n\n\n\n\nstatesment_tuple \u3092\u66f4\u65b0\n\n\npython3\nstatesment_tuple = (\n                    (\"{a}=isinstance({b}, list)\".format(a=output_obj_name, b=obj),\n                    \"\"\"if {a}:\n                        for element in {new_data}:{object}.append(element)\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data)),\n                    (\"{a}=isinstance({b}, dict)\".format(a=output_obj_name, b=obj),\n                     \"\"\"if {a}:\n                         {object}.update({new_data})\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data))\n                    )\n\n\nfor (statesment_1, statesment_2) in statesment_tuple:\n    print(statesment_1)\n    print(statesment_2)\n\n\n\uff08 \u4ee5\u4e0b\u3001\u30b3\u30fc\u30c9\u6587\u5b57\u5217\u306e\u66f4\u65b0\u5b8c\u4e86 \uff09\n\n\u56fa\u5b9a\u30b3\u30fc\u30c9\nresult=isinstance({'key_test_2': 'value_test_2', 'key_test_1': 'value_test_1'}, list)\nif result:\n                        for element in {'key_test_3': 'value_test_3', 'key_test_4': 'value_test_4'}:obj.append(element)\nresult=isinstance({'key_test_2': 'value_test_2', 'key_test_1': 'value_test_1'}, dict)\nif result:\n                         obj.update({'key_test_3': 'value_test_3', 'key_test_4': 'value_test_4'})\n\n\n\nexec\u30e1\u30bd\u30c3\u30c9 \u3067\u5b9f\u884c\n\n\npython3\nfor (statesment_1, statesment_2) in statesment_tuple:\n    exec(statesment_1)\n    exec(statesment_2)\n\n\n\nprint(obj)\n\n\n\u5b9f\u884c\u6210\u529f\n\n{'key_test_3': 'value_test_3', 'key_test_4': 'value_test_4', 'key_test_2': 'value_test_2', 'key_test_1': 'value_test_1'}\n\n\n\n\uff08 \u53c2\u8003 \uff09\n\n\npython3\nobj = [1, 3, 4,\"a\", \"b\"]\nboolean_flag_name = \"class_type_check_result\"\n\n\n\npython3\nexec(\"\"\"{a}=isinstance({b}, list)\nif {a}:print(\"This is a list object\")\"\"\".format(a=boolean_flag_name, b=obj))\n\n\n\uff08 \u5b9f\u884c\u7d50\u679c \uff09\nThis is a list object\n\n\npython3\nprint(boolean_flag_name)\n\n\nclass_type_check_result\n\n\npython3\nprint(class_type_check_result)\n\n\nTrue\n\nexec\u30e1\u30bd\u30c3\u30c9 \u306e\u5f15\u6570 \u306b\u6e21\u3055\u308c\u308b Python\u30b3\u30fc\u30c9\u6587\n\npython3\nprint(\"\"\"{a}=isinstance({b}, list)\nif {a}:print(\"This is a list object\")\"\"\".format(a=boolean_flag_name, b=obj))\n\n\nclass_type_check_result=isinstance([1, 3, 4, 'a', 'b'], list)\nif class_type_check_result:print(\"This is a list object\")\n\n\n\u30af\u30e9\u30b9\u304c\u30ea\u30b9\u30c8\u578b\u3067\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308bisinstance\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\uff08boolean\u5024\uff09\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u30d9\u30bf\u6253\u3061\u3067\u5ba3\u8a00\u3057\u3066OK\n\npython3\nexec(\"\"\"boolean_flag=isinstance({b}, list)\nif boolean_flag:print(\"This is a list object\")\"\"\".format(b=obj))\n\n\n\uff08 \u5b9f\u884c\u7d50\u679c \uff09\nThis is a list object\n\n\npython3\nprint(boolean_flag)\n\n\nTrue\n\n\n\npython3\nflag = (1+1 ==2)\nflag\n\n\n\uff08 \u5b9f\u884c\u7d50\u679c \uff09\nTrue\n\n\n\n\uff08 \u53c2\u8003 \uff09exec\u30e1\u30bd\u30c3\u30c9 \u306e \u6319\u52d5\n\n\nexec( ) \u306e\u8fd4\u308a\u5024\u306f\u3001None\n\n\npython3\nobj = [\"a\", \"b\", \"c\"]\nprint(exec(\"isinstance(obj, list)\"))\n\n\nNone\n\n\npython3\nprint(exec(\"result_boolean = isinstance(obj, list)\"))\n\n\nNone\n\n\npython3\nexec(\"result_boolean = isinstance(obj, list)\")\nprint(result_boolean)\n\n\nTrue\n\n\n\n\u3010 \u53c2\u8003 \u3011\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001\u52d5\u7684SQL\n\n\n[C#][.NET] \u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580 - \u306f\u3058\u3081\u306b\natmarkIT \u300c\u82e5\u624b\u30a8\u30f3\u30b8\u30cb\u30a2\uff0f\u521d\u5fc3\u8005\u306e\u305f\u3081\u306eRuby 2.1\u5165\u9580\uff0812\uff09\uff1a\u96e3\u3057\u3044\u304c\u5f37\u529b\uff01 Ruby\u306e\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001self\u3001\u7279\u7570\u30af\u30e9\u30b9\uff0f\u30e1\u30bd\u30c3\u30c9\u3001\u30aa\u30fc\u30d7\u30f3\u30af\u30e9\u30b9\u3068\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1 (1/4)\u300d\nIBM developerWorks \u300c\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u6280\u6cd5\u3000\u7b2c1\u56de: \u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u306f\u300d\nCodeZine \u300c\u52d5\u7684SQL\u306b\u3088\u308b\u6570\u72ec\u306e\u8d85\u9ad8\u901f\u89e3\u6cd5\u300d\n\u3067\u304d\u308b\u3060\u3051\u9069\u5f53\u306b\u8a9e\u308a\u304d \u300cSQLAlchemy \u3092\u4f7f\u3063\u3066\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u8a9e\u308a\u304d\u300d\n\n__\u5148\u65e5\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u3001Haskell \u306e \u30ac\u30fc\u30c9\u5f0f \u30e9\u30a4\u30af\u306b\u3001\u300c\u95a2\u6570\u304c\u53d7\u3051\u53d6\u308b \u5f15\u6570\u306e\u6761\u4ef6\uff08\u578b or \u5024\uff09 \u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u3059\u308b\u51e6\u7406\u5185\u5bb9\u3092\u5834\u5408\u5206\u3051\u3059\u308b\u300d\u30e1\u30bd\u30c3\u30c9 \u306e\u4f5c\u308a\u65b9\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3057\u305f\u3002__\n \n* [HirofumiYashima Qiita\u8a18\u4e8b\uff08 \uff09\u300cPython \u3067 Haskell \u306e \u30ac\u30fc\u30c9\u5f0f \u30e9\u30a4\u30af\u306b\u3001\u300c\u95a2\u6570\u304c\u53d7\u3051\u53d6\u308b \u5f15\u6570\u306e\u6761\u4ef6\uff08\u578b or \u5024\uff09 \u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u3059\u308b\u51e6\u7406\u5185\u5bb9\u3092\u5834\u5408\u5206\u3051\u3059\u308b\u300d\u30e1\u30bd\u30c3\u30c9 \u3092\u5b9a\u7fa9\u3059\u308b \u30a8\u30ec\u30ac\u30f3\u30c8\u306a\u30b3\u30fc\u30c9\u4e8b\u4f8b\u3092\u898b\u3064\u3051\u305f\u4ef6\u300d](http://qiita.com/HirofumiYashima/items/6844d183bf2122637b9f)\n\n>Haskell \u3067\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30fb\u30de\u30c3\u30c1\u5f0f \u3084 \u30ac\u30fc\u30c9\u5f0f \u3092\u4f7f\u3063\u3066\u3001\u95a2\u6570\u306b\u6e21\u3055\u308c\u305f\u5f15\u6570\u306e\uff08\u578b or \u5024\uff09 \u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u3059\u308b\u95a2\u6570 \u3092 \u5834\u5408\u5206\u3051\u3057\u3066 \u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n>**\u300cDive Into Python 3\u300d**\u3068\u3044\u3046\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3092\uff08\u5225\u4ef6\u3067\uff09\u773a\u3081\u3066\u3044\u3066\u3001\u3053\u308c\u306b\u76f8\u5f53\u3059\u308b\u51e6\u7406\u3092 Python \u3067\u5b9f\u884c\u3059\u308b \u30a8\u30ec\u30ac\u30f3\u30c8\u306a\u30b3\u30fc\u30c9 \u304c\u76ee\u306b\u7559\u307e\u3063\u305f\u306e\u3067\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5f35\u3089\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\n>__[Dive Into Python 3 \u7b2c6\u7ae0\u30af\u30ed\u30fc\u30b8\u30e3\u3068\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf \u300c6.3. \u95a2\u6570\u306e\u30ea\u30b9\u30c8\u300d](http://diveintopython3-ja.rdy.jp/generators.html#a-fibonacci-generator)__\n\n>__\uff08 \u65b9\u6cd5 \uff09__\n\n>__1. \u307e\u305a\u6700\u521d\u306b\u3001(\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6761\u4ef6\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9, \u305d\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u9069\u7528\u3055\u305b\u305f\u3044\u30e1\u30bd\u30c3\u30c9\uff09\u3000\u3092 tuple\uff08\u53c8\u306f list, dict\uff09\u306b\u3001\u5fc5\u8981\u306a\u6761\u4ef6\u306e\u30d1\u30bf\u30fc\u30f3\u6570\u5206\u3001\u7528\u610f\u3002__\n>__\u3059\u3079\u3066\u306e\uff08\u6761\u4ef6\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9, \u9069\u7528\u30e1\u30bd\u30c3\u30c9\uff09\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 tuple\uff08\u53c8\u306f list, dict) \u306b\u53ce\u3081\u305f\u30eb\u30fc\u30eb\u96c6\u5408\u3092\u5b9a\u3081\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3002__\n\n>>```\n>>rules = (\n\t\t\t\uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u6761\u4ef6\u2460 \u306b\u5408\u81f4\u3059\u308b\u304b\u306e\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9\u540d,  \u6761\u4ef6\u2460 \u306b\u5408\u81f4\u3059\u308b\u5834\u5408\u306e\u51e6\u7406\u30e1\u30bd\u30c3\u30c9\u540d\uff09,\n\t\t\t\uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u6761\u4ef6\u2461 \u306b\u5408\u81f4\u3059\u308b\u304b\u306e\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9\u540d,  \u6761\u4ef6\u2461 \u306b\u5408\u81f4\u3059\u308b\u5834\u5408\u306e\u51e6\u7406\u30e1\u30bd\u30c3\u30c9\u540d\uff09,\n\t\t\t\uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u6761\u4ef6\u2462 \u306b\u5408\u81f4\u3059\u308b\u304b\u306e\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9\u540d,  \u6761\u4ef6\u2462 \u306b\u5408\u81f4\u3059\u308b\u5834\u5408\u306e\u51e6\u7406\u30e1\u30bd\u30c3\u30c9\u540d\uff09,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u30fb\u30fb\u30fb\n\t\t\t\uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u6761\u4ef6N \u306b\u5408\u81f4\u3059\u308b\u304b\u306e\u5224\u5b9a\u30e1\u30bd\u30c3\u30c9\u540d,  \u6761\u4ef6N \u306b\u5408\u81f4\u3059\u308b\u5834\u5408\u306e\u51e6\u7406\u30e1\u30bd\u30c3\u30c9\u540d\uff09\n)\n>>```\n\n\n>####__2. \u6b21\u306b\u300c\u30eb\u30fc\u30eb\u96c6\u5408\u300d\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u3001\u30eb\u30fc\u30eb\u3092\uff11\u4ef6\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u304csatisfy\u3057\u305f\uff08\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u305f\uff09\u30eb\u30fc\u30eb\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u3001\u305d\u306e\u30eb\u30fc\u30eb\u306b\u8a18\u8ff0\u3055\u308c\u305f\u51e6\u7406\u30e1\u30bd\u30c3\u30c9 \u3092 \u5b9f\u884c\u3002__\n\n>>>```\ndef meethod_name(\u5f15\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8):\n    for arg_pattern_detecting_func, applying_func in rules:       \n        if arg_pattern_detecting_func(\u5f15\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8):\n            return applying_func(\u5f15\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\n>>>```\n\n___\n\n####__\u4eca\u56de\u306f\u3001\u95a2\u6570\u3092 def\u6587\u3067\u5b9a\u7fa9\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001Python \u306e\u30b3\u30fc\u30c9\u3092\u3001string\u578b\uff08\u6587\u5b57\u5217\uff09\u306e\u30c7\u30fc\u30bf\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5f62\u3067\u751f\u6210\u3057\u3066\uff08\u30ea\u30c6\u30e9\u30eb\u30d9\u30bf\u6253\u3061\uff09\u3001exec\u30e1\u30bd\u30c3\u30c9 \u306e\u5f15\u6570\u306b\u6e21\u3057\u3066 \u5b9f\u884c\u3059\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u8a66\u307f\u3066\u6210\u529f\u3057\u305f\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002__\n\n__\u5f15\u6570\u306b\u53d7\u3051\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u3055\u305b\u308b\u51e6\u7406\u3092\u3001def\u6587\u3067\u5b9a\u7fa9\u6e08\u307f\u306e\u30e1\u30bd\u30c3\u30c9\uff08\u5b9a\u6570\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09\u3067\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u6587\u5b57\u5217\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5f62\u3067 exec\u30e1\u30bd\u30c3\u30c9 \u306b\u6e21\u3059\u3053\u3068\u3067\u3001__\n\n* \u5b9f\u884c\u3055\u305b\u308b\u547d\u4ee4\u6587\u3084\u5f0f\u306e\u30b3\u30fc\u30c9\u6587\u5b57\u5217\u3092\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30b3\u30fc\u30c9\u306e\u4e2d\u3067\u3001\u52d5\u7684\u306b\uff08\u53ef\u5909\u306b\uff09\u751f\u6210\u3055\u305b\u308b\n\n__\u9053\u304c\u958b\u3051\u307e\u3059\u3002__\n\n__\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u8a18\u53f7\u3067\u56f2\u3063\u305f \u6587\u5b57\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e Python\u30b3\u30fc\u30c9 \u3092\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u306a\u304b\u3067\u3001\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u51e6\u7406\u307e\u308f\u308a\u306f\u5b9f\u88c5\u3057\u307e\u305b\u3093\u304c\u3001__\n__\u4e00\u5ea6\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u306a\u304b\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u300c\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u8a18\u53f7\u3067\u56f2\u307e\u308c\u305f\u3001\u6587\u5b57\u5217\u578b\u306ePython\u30b3\u30fc\u30c9\u30fb\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u3092\u3001exec\u30b3\u30fc\u30c9\u3067\u53d7\u3051\u53d6\u3063\u3066\u3001Python\u30b3\u30fc\u30c9\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u30b3\u30fc\u30c9\u306e\u5b9f\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002__\n\n####__\u6b21\u56de\u4ee5\u964d\u306e\u8a18\u4e8b\u3067\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8 \u304c Python\u30b3\u30fc\u30c9 \u3092\u81ea\u52d5\u7684\u306b\u3001\u52d5\u7684 \u306b \u751f\u6210\u3059\u308b\uff08\u3042\u308b\u7a2e\u306e\uff09\u300c\u30e1\u30bf\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u300d\u7684\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3055\u305b\u308b\u3068\u3053\u308d\u307e\u3067\u3092\u884c\u3046\u4e88\u5b9a\u3067\u3059\u3002__\n\n\n##\u307e\u305a\u306f\u3001def\u6587\u3067\u3001\uff08\u5b9a\u6570\u7684\u306b\u56fa\u5b9a\u5b9a\u7fa9\u3055\u308c\u305f\uff09\u30e1\u30bd\u30c3\u30c9\u3092\u884c\u3046\u5834\u5408\u3092\u304a\u3055\u3089\u3044\u3057\u307e\u3059\u3002\n\n___\n\n###__\u5b9f\u4f8b__\n####__\u56fa\u5b9a\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u305f\uff08\u5b9a\u6570\u7684\u306a\uff09\u30e1\u30bd\u30c3\u30c9 \u3092\u7528\u3044\u305f Haskell \u30ac\u30fc\u30c9\u5f0f\u30e9\u30a4\u30af \u306a\u51e6\u7406\u3092\u5b9f\u73fe\u3055\u305b\u308b\u30b3\u30fc\u30c9__\n\n```{Python3:Python3}\ndef match_list(obj):\n   return isinstance(obj, list)\n\ndef apply_list(obj, new_data):\n    for element in new_data:\n        obj.append(element)\n    return obj\n    \ndef match_dict(obj):\n   return isinstance(obj, dict)  \n\ndef apply_dict(obj, new_data):\n   obj.update(new_data)\n   return obj\n```\n\n\n```{Python3:Python3}\nrules = (\n          (match_list, apply_list),               \n          (match_dict, apply_dict),\n        )\n```\n\n\n```{Python3:Python3}\ndef add_data(current_object, new_data):\n\tfor (class_inspection_func, apply_func) in  rules:\n\t\tif class_inspection_func(current_object) and class_inspection_func(new_data):\n\t\t\tapply_func(current_object, new_data)\n```\n\n####__\u5b9f\u884c__\n\n__list\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u305f\u5834\u5408__\n\n```{Python3:Python3}\ncurrent_object = [\"a\", \"b\", \"c\"]\nnew_data = [\"d\", \"e\"]\n\nadd_data(current_object, new_data)\nprint(current_object)\n```\n\n```\n['a', 'b', 'c', 'd', 'e']\n```\n\n___\n\n```{Python3:Python3}\ncurrent_object = [\"X\", \"Y\", \"Z\"]\nnew_data = (\"A\", \"B\")\n\nadd_data(current_object, new_data)\nprint(current_object)\n```\n\n```\n['X', 'Y', 'Z']\n```\n\n\n__dict\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u305f\u5834\u5408__\n\n\n```{Python3:Python3}\ncurrent_object_2 = {\"label_a\" : \"value_a\", \"label_b\" : \"value_b\", \"label_c\" : \"value_c\"}\nnew_data_2= {\"label_d\" : \"value_d\", \"label_e\" : \"value_e\"}\n\nadd_data(current_object_2, new_data_2)\nprint(current_object_2)\n```\n\n```\n{'label_d': 'value_d', 'label_b': 'value_b', 'label_e': 'value_e', 'label_a': 'value_a', 'label_c': 'value_c'}\n\n```\n\n\n___\n\n```{Python3:Python3}\ncurrent_object_3 = {\"label_X\" : \"value_X\", \"label_Y\" : \"value_Y\", \"label_Z\" : \"value_Z\"}\nnew_data_3= [\"value_K\", \"label_L\", \"value_M\"]\n\nadd_data(current_object_3, new_data_3)\nprint(current_object_3)\n```\n\n```\n{'label_X': 'value_X', 'label_Y': 'value_Y', 'label_Z': 'value_Z'}\n```\n\n####__\uff08 \u95a2\u9023 \uff09__\n\n* [Hatena::Group::Bugrammer \uff082011/12/13\uff09 \u300c[\u307f\u3093\u306a\u4ee5\u5916\u306ePython]\u304a\u524d\u306f\u4f55\u8005\u304b\u306f\u8208\u5473\u304c\u7121\u3044\u304c\u3001\u304a\u524d\u306e\u529b\u3092\u501f\u308a\u305f\u3044 -- Python\u306b\u304a\u3051\u308b\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u300d](http://bugrammer.g.hatena.ne.jp/nisemono_san/20111213/1323790821)\n* [\u30b5\u30eb\u3067\u3082\u308f\u304b\u308b \u9006\u5f15\u304d\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3 \u300c\u7b2c1\u7ae0\u3000\u521d\u3081\u3066\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u300d](http://www.nulab.co.jp/designPatterns/designPatterns1/designPatterns1-4.html)\n* [M.Hiroi's Home Page Functional Programming \u304a\u6c17\u697d Haskell \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580 \u300c\u591a\u76f8\u7684\u306a\u30ec\u30b3\u30fc\u30c9\u300d](http://www.geocities.jp/m_hiroi/func/haskell07.html)\n* [torshinor\u3055\u3093 Qiita\u8a18\u4e8b\uff082013/03/17\uff09 \u300c\u3059\u3054\u3044Haskell\u305f\u306e\u3057\u304f\u5b66\u307c\u3046\uff01 \u7b2c2\u7ae0 \u8aad\u66f8\u30e1\u30e2\u300d](http://qiita.com/torshinor/items/cdeaafcea8add288af36)\n* [lotz\u3055\u3093 Qiita\u8a18\u4e8b\uff082015/04/26\uff09 \u300c\u9ad8\u968e\u591a\u76f8\u578b\u3067\u904a\u3093\u3067\u307f\u308b\u300d](http://qiita.com/lotz/items/8b22ce15fb66cf293536)\n* [\u3084\u3055\u3057\u3044 Haskell \u5165\u9580 (\u30d0\u30fc\u30b8\u30e7\u30f3 98 ) 2  \u5024\u3001\u578b\u3001\u305d\u306e\u307b\u304b\u306e\u6709\u7528\u306a\u6982\u5ff5\u300c2.1  \u591a\u76f8\u578b\u300d](http://www.sampou.org/haskell/tutorial-j/goodies.html)\n\n___\n\n##__\u6b21\u306b\u3001\u672c\u8a18\u4e8b\u304c\u76ee\u6307\u3059 \u30b3\u30fc\u30c9\u6587\u5b57\u5217 \u3092 string\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3067\u53d7\u3051\u53d6\u3063\u3066\u3001exec\u30e1\u30bd\u30c3\u30c9 \u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002__\n\n###__\u30e1\u30bd\u30c3\u30c9\u5316\u3057\u306a\u3044\u3067\u3001\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u305f\u6587\u5b57\u5217\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u3066\u3001exec\u30e1\u30bd\u30c3\u30c9\u3067\u5b9f\u884c__\n\n___\n\n####__\uff08 \u95a2\u9023\u8a18\u4e8b \uff09__\n\n* [HirofumiYashima Qiita\u8a18\u4e8b \u300c\u5909\u6570\u5ba3\u8a00 \u3092 \u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067 \u81ea\u52d5\u5b9f\u884c\u3055\u305b\u305f\u3044\u3068\u304d\u306f\u3001exec( ) \u30e1\u30bd\u30c3\u30c9 \u3092\u4f7f\u3046\u3068\u3067\u304d\u308b\u300d](http://qiita.com/HirofumiYashima/items/d342d8e8b1a9f935b07f)\n\n___\n\n__\uff08 2016/01/30 \u8ffd\u8a18 \uff09__\n__\u30b3\u30fc\u30c9\u306e\u6319\u52d5\u306b\u554f\u984c\u306f\u306a\u3044\u3082\u306e\u306e\u3001\u5909\u6570\u540d\u306e\u4ed8\u3051\u65b9 \u306b\u6539\u5584\u3059\u3079\u304d\u90e8\u5206\u304c\u3042\u3063\u305f\u306e\u3067\u30e1\u30e2\u66f8\u304d__\n\n* \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u304c \u30ea\u30b9\u30c8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u7d50\u679c \u3092 \u683c\u7d0d\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d\u306f\u3001\u300coutput_obj_name\u300d\u3067\u306f\u306a\u304f\u3001\u4f8b\u3048\u3070\u300cclass_type_check_result_name\u300d\u3084\u300ccheck_result_boolean_value_name\u300d\u306e\u65b9\u304c\u610f\u5473\u304c\u901a\u308a\u3001\u9069\u5207\u3067\u3042\u3063\u305f\u3002\n* \u6700\u7d42\u7684\u306b\u65e2\u5b58\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u300cobj\u300d\uff09\u3068\u65b0\u898f\u30c7\u30fc\u30bf\uff08\u300cadd_date\u300d\uff09\u3092\u30de\u30fc\u30b8\u3057\u3066\u3001\u5f97\u305f\u3044\uff08\u8fd4\u3055\u308c\u308b\uff09\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u300cobj\u300d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308a\u3001isinstance({b}) \u306e\u8fd4\u308a\u5024\u3067\u306f\u306a\u3044\u305f\u3081\u3001isinstance({b}) \u306e\u8fd4\u308a\u5024 \u3092 \u683c\u7d0d\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d\u3092\u300coutput_obj_name\u300d\u3068\u3059\u308b\u3068\u3001\u30b3\u30fc\u30c9\u3092\u5f8c\u3067\u8aad\u3080\u969b\u3001\u30df\u30b9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u306a\u308b\u3002\n\n\n```{python3:python3}\noutput_obj_name = \"result\"\nobj = [\"test_1\", \"test_2\", \"test_3\"]\nobj_name = \"obj\"\nadd_data = [\"test_4\", \"test_5\", \"test_6\"]\n\n\nstatesment_tuple = (\n                    (\"{a}=isinstance({b}, list)\".format(a=output_obj_name, b=obj),\n                    \"\"\"if {a}:\n                        for element in {new_data}:{object}.append(element)\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data)),\n                    (\"{a}=isinstance({b}, dict)\".format(a=output_obj_name, b=obj),\n                     \"\"\"if {a}:\n                         {object}.update({new_data})\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data))\n                    )\n\n```\n\n__\uff08 format\u30e1\u30bd\u30c3\u30c9 \u3067 \u751f\u6210\u3055\u308c\u305f Python\u30b3\u30fc\u30c9\u6587\u5b57\u5217 \uff08\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09\u306e\u5185\u5bb9\u3092\u78ba\u8a8d \uff09__\n\n```{python3:python3}\nfor (statesment_1, statesment_2) in statesment_tuple:\n    print(statesment_1)\n    print(statesment_2)\n```\n\n\n\n```{python3:\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\uff08\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09}\nresult=isinstance(['test_1', 'test_2', 'test_3'], list)\nif result:\n                        for element in ['test_4', 'test_5', 'test_6']:obj.append(element)\nresult=isinstance(['test_1', 'test_2', 'test_3'], dict)\nif result:\n                         obj.update(['test_4', 'test_5', 'test_6'])\n```\n\n\n___\n\n__print \u3092 exec \u306b\u5909\u3048\u3066\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b__\n\n```{python3:python3}\nfor (statesment_1, statesment_2) in statesment_tuple:\n    exec(statesment_1)\n    exec(statesment_2)\n\t\n```\n\n\n```{python3:python3}\nprint(obj)\n```\n\n###__\u5b9f\u884c\u7d50\u679c\uff08\u6210\u529f\uff09__ \n\n\n```\n['test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6']\n```\n\n___\n\n###__\u30c7\u30fc\u30bf\u3092\u5909\u3048\u3066\u5b9f\u884c\u3057\u3066\u307f\u308b__\n\n```{python3:python3}\noutput_obj_name = \"result\"\nobj = [\"test_a\", \"test_b\", \"test_c\"]\nobj_name = \"obj\"\nadd_data = [\"test_d\", \"test_e\", \"test_f\"]\n\nfor (statesment_1, statesment_2) in statesment_tuple:\n    print(statesment_1)\n    print(statesment_2)\n```\n\n\n__\uff08 format\u30e1\u30bd\u30c3\u30c9 \u3067 \u751f\u6210\u3055\u308c\u305f Python\u30b3\u30fc\u30c9\u6587\u5b57\u5217 \uff08\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09\u306e\u5185\u5bb9\u3092\u78ba\u8a8d \uff09__\n\n####__statesment_tuple \u306e\u66f4\u65b0\u304c\u5fc5\u8981__\n\n```\nresult=isinstance(['test_1', 'test_2', 'test_3'], list)\nif result:\n                        for element in ['test_4', 'test_5', 'test_6']:obj.append(element)\nresult=isinstance(['test_1', 'test_2', 'test_3'], dict)\nif result:\n                         obj.update(['test_4', 'test_5', 'test_6'])\n```\n\n___\n\n####__statesment_tuple \u3092\u66f4\u65b0__\n\n```{python3:python3}\nstatesment_tuple = (\n                    (\"{a}=isinstance({b}, list)\".format(a=output_obj_name, b=obj),\n                    \"\"\"if {a}:\n                        for element in {new_data}:{object}.append(element)\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data)),\n                    (\"{a}=isinstance({b}, dict)\".format(a=output_obj_name, b=obj),\n                     \"\"\"if {a}:\n                         {object}.update({new_data})\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data))\n                    )\n\n\nfor (statesment_1, statesment_2) in statesment_tuple:\n    print(statesment_1)\n    print(statesment_2)\n```\n\n__\uff08 format\u30e1\u30bd\u30c3\u30c9 \u3067 \u751f\u6210\u3055\u308c\u305f Python\u30b3\u30fc\u30c9\u6587\u5b57\u5217 \uff08\u56fa\u5b9a\u30b3\u30fc\u30c9\uff09\u306e\u5185\u5bb9 \u3092 \u518d\u5ea6\u3001\u78ba\u8a8d \uff09__\n\n```{python3:\u56fa\u5b9a\u30b3\u30fc\u30c9}\nresult=isinstance(['test_a', 'test_b', 'test_c'], list)\nif result:\n                        for element in ['test_d', 'test_e', 'test_f']:obj.append(element)\nresult=isinstance(['test_a', 'test_b', 'test_c'], dict)\nif result:\n                         obj.update(['test_d', 'test_e', 'test_f'])\n```\n\n####__\u30b3\u30fc\u30c9\u6587\u5b57\u5217 \u3092 \u66f4\u65b0\u3067\u304d\u305f\u306e\u3067\u3001exec\u30e1\u30bd\u30c3\u30c9 \u3067\u5b9f\u884c\u3057\u3066\u307f\u308b__\n\n```{python3:python3}\nfor (statesment_1, statesment_2) in statesment_tuple:\n    exec(statesment_1)\n    exec(statesment_2)\n\nprint(obj)\n```\n\n####__\u5b9f\u884c\u6210\u529f__\n\n```\n['test_a', 'test_b', 'test_c', 'test_d', 'test_e', 'test_f']\n```\n\n\n___\n\n###__\u30c7\u30fc\u30bf\u3092dict\u578b\u306b\u5909\u3048\u3066\u3001\u5b9f\u884c\u3057\u3066\u307f\u308b__\n\n```{python3:python3}\noutput_obj_name = \"result\"\nobj = {\"key_test_1\" : \"value_test_1\", \"key_test_2\" : \"value_test_2\"}\nobj_name = \"obj\"\nadd_data = {\"key_test_3\" : \"value_test_3\", \"key_test_4\" : \"value_test_4\"}\n\n```\n\n\n####__statesment_tuple \u3092\u66f4\u65b0__\n\n```{python3:python3}\nstatesment_tuple = (\n                    (\"{a}=isinstance({b}, list)\".format(a=output_obj_name, b=obj),\n                    \"\"\"if {a}:\n                        for element in {new_data}:{object}.append(element)\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data)),\n                    (\"{a}=isinstance({b}, dict)\".format(a=output_obj_name, b=obj),\n                     \"\"\"if {a}:\n                         {object}.update({new_data})\"\"\".format(a=output_obj_name, object=obj_name, new_data=add_data))\n                    )\n\n\nfor (statesment_1, statesment_2) in statesment_tuple:\n    print(statesment_1)\n    print(statesment_2)\n```\n\n__\uff08 \u4ee5\u4e0b\u3001\u30b3\u30fc\u30c9\u6587\u5b57\u5217\u306e\u66f4\u65b0\u5b8c\u4e86 \uff09__\n\n```{python3:\u56fa\u5b9a\u30b3\u30fc\u30c9}\nresult=isinstance({'key_test_2': 'value_test_2', 'key_test_1': 'value_test_1'}, list)\nif result:\n                        for element in {'key_test_3': 'value_test_3', 'key_test_4': 'value_test_4'}:obj.append(element)\nresult=isinstance({'key_test_2': 'value_test_2', 'key_test_1': 'value_test_1'}, dict)\nif result:\n                         obj.update({'key_test_3': 'value_test_3', 'key_test_4': 'value_test_4'})\n```\n\n####__exec\u30e1\u30bd\u30c3\u30c9 \u3067\u5b9f\u884c__\n\n```{python3:python3}\nfor (statesment_1, statesment_2) in statesment_tuple:\n    exec(statesment_1)\n    exec(statesment_2)\n\t\n```\n\n\n```\nprint(obj)\n```\n\t\n####__\u5b9f\u884c\u6210\u529f__\n\n```\n{'key_test_3': 'value_test_3', 'key_test_4': 'value_test_4', 'key_test_2': 'value_test_2', 'key_test_1': 'value_test_1'}\n```\n\n\n___\n\n#__\uff08 \u53c2\u8003 \uff09__\n\n```{python3:python3}\nobj = [1, 3, 4,\"a\", \"b\"]\nboolean_flag_name = \"class_type_check_result\"\n```\n\n```{python3:python3}\nexec(\"\"\"{a}=isinstance({b}, list)\nif {a}:print(\"This is a list object\")\"\"\".format(a=boolean_flag_name, b=obj))\n```\n\n__\uff08 \u5b9f\u884c\u7d50\u679c \uff09__\n\n```\nThis is a list object\n```\n\n```{python3:python3}\nprint(boolean_flag_name)\n```\n\n```\nclass_type_check_result\n```\n\n```{python3:python3}\nprint(class_type_check_result)\n```\n\n```\nTrue\n```\n\n__exec\u30e1\u30bd\u30c3\u30c9 \u306e\u5f15\u6570 \u306b\u6e21\u3055\u308c\u308b Python\u30b3\u30fc\u30c9\u6587__\n\n```{python3:python3}\nprint(\"\"\"{a}=isinstance({b}, list)\nif {a}:print(\"This is a list object\")\"\"\".format(a=boolean_flag_name, b=obj))\n````\n\n```\nclass_type_check_result=isinstance([1, 3, 4, 'a', 'b'], list)\nif class_type_check_result:print(\"This is a list object\")\n```\n\n___\n\n__\u30af\u30e9\u30b9\u304c\u30ea\u30b9\u30c8\u578b\u3067\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308bisinstance\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\uff08boolean\u5024\uff09\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u30d9\u30bf\u6253\u3061\u3067\u5ba3\u8a00\u3057\u3066OK__\n\n```{python3:python3}\nexec(\"\"\"boolean_flag=isinstance({b}, list)\nif boolean_flag:print(\"This is a list object\")\"\"\".format(b=obj))\n```\n\n__\uff08 \u5b9f\u884c\u7d50\u679c \uff09__\n\n```\nThis is a list object\n```\n\n```{python3:python3}\nprint(boolean_flag)\n```\n\n```\nTrue\n```\n___\n\n\n```{python3:python3}\nflag = (1+1 ==2)\nflag\n```\n\n__\uff08 \u5b9f\u884c\u7d50\u679c \uff09__\n\n```\nTrue\n```\n\n___\n\n###__\uff08 \u53c2\u8003 \uff09exec\u30e1\u30bd\u30c3\u30c9 \u306e \u6319\u52d5__\n\n* exec( ) \u306e\u8fd4\u308a\u5024\u306f\u3001None\n\n```{python3:python3}\nobj = [\"a\", \"b\", \"c\"]\nprint(exec(\"isinstance(obj, list)\"))\n```\n\n```\nNone\n```\n\n```{python3:python3}\nprint(exec(\"result_boolean = isinstance(obj, list)\"))\n```\n\n```\nNone\n```\n\n```{python3:python3}\nexec(\"result_boolean = isinstance(obj, list)\")\nprint(result_boolean)\n```\n\n```\nTrue\n```\n\n___\n\n##__\u3010 \u53c2\u8003 \u3011\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001\u52d5\u7684SQL__\n\n* [[C#][.NET] \u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580 - \u306f\u3058\u3081\u306b](http://blog.shos.info/archives/2013/11/csharp_metaprogramming.html)\n* [atmarkIT \u300c\u82e5\u624b\u30a8\u30f3\u30b8\u30cb\u30a2\uff0f\u521d\u5fc3\u8005\u306e\u305f\u3081\u306eRuby 2.1\u5165\u9580\uff0812\uff09\uff1a\u96e3\u3057\u3044\u304c\u5f37\u529b\uff01 Ruby\u306e\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001self\u3001\u7279\u7570\u30af\u30e9\u30b9\uff0f\u30e1\u30bd\u30c3\u30c9\u3001\u30aa\u30fc\u30d7\u30f3\u30af\u30e9\u30b9\u3068\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1 (1/4)\u300d](http://www.atmarkit.co.jp/ait/articles/1501/06/news028.html)\n* [IBM developerWorks \u300c\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u6280\u6cd5\u3000\u7b2c1\u56de: \u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u306f\u300d](https://www.ibm.com/developerworks/jp/linux/library/l-metaprog1/)\n* [CodeZine \u300c\u52d5\u7684SQL\u306b\u3088\u308b\u6570\u72ec\u306e\u8d85\u9ad8\u901f\u89e3\u6cd5\u300d](http://codezine.jp/article/detail/1629)\n* [\u3067\u304d\u308b\u3060\u3051\u9069\u5f53\u306b\u8a9e\u308a\u304d \u300cSQLAlchemy \u3092\u4f7f\u3063\u3066\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u8a9e\u308a\u304d\u300d](http://saygox.blogspot.jp/2013/08/sqlalchemy.html)\n\n \n", "tags": ["Python", "python3", "\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "\u4eba\u5de5\u77e5\u80fd"]}