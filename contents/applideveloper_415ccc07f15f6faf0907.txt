{"tags": ["CoreData", "Swift", "Swift3.0"], "context": "\u4ee5\u524d\u3001CoreData\u3067\u3001\u914d\u5217\u60c5\u5831\u3092\u6301\u3064\u5fc5\u8981\u304c\u3042\u3063\u305f\u306e\u3067\u3001\nCoreData\u306eCascade delete\u306e\u30b5\u30f3\u30d7\u30eb\u30921\u65e5\u3067\u4f5c\u3063\u3066\u3001\u6319\u52d5\u3092\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://github.com/applideveloper/CascadeDeleteSample\nCascade Delete\u306a\u306e\u306b\u3001Cascade Delegate\u3063\u3066\u540d\u524d\u9593\u9055\u3048\u307e\u3057\u305fw\n\u5b8c\u5168\u306b\u75b2\u308c\u3066\u307e\u3059\u306dw\n\u3061\u306a\u307f\u306bRealm\u306f\u3001Cascade Delete\u304c\u307e\u3060\u3001\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u306a\u3044\u306e\u3067\u3001\n\u4ee5\u524d\u3001Realm\u3092\u4f7f\u3063\u3066\u3044\u305f\u6642\u306f\u3001\u81ea\u5206\u3067\u81ea\u4f5c\u3057\u3066\u5b50\u30c6\u30fc\u30d6\u30eb\u307e\u3067\u6d88\u3057\u3066\u307e\u3057\u305f\u3002\n\u305d\u308c\u306b\u5bfe\u3057\u3001CoreData\u306f\u3001Cascade Delete\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002Limit\u3082Offset\u3082\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/realm/realm-java/issues/1104\nCascade Delete\u3068\u306f\u3001Wikipedia\u306b\u3088\u308b\u3068\nhttps://ja.wikipedia.org/wiki/%E5%A4%96%E9%83%A8%E3%82%AD%E3%83%BC#CASCADE\n\u53c2\u7167\u3055\u308c\u308b\u5074\u306e\u95a2\u4fc2\u5909\u6570\u306e\u7d44\u304c\u524a\u9664\u3055\u308c\u305f\u5834\u5408\u3001\u53c2\u7167\u3059\u308b\u5074\u306e\u95a2\u4fc2\u5909\u6570\u306e\u5bfe\u5fdc\u3059\u308b\u3059\u3079\u3066\u306e\u7d44\u306f\u524a\u9664\u3055\u308c\u308b\u3002\n\u540c\u69d8\u306b\u3001\u53c2\u7167\u3055\u308c\u308b\u5074\u306e\u95a2\u4fc2\u5909\u6570\u306e\u7d44\u304c\u66f4\u65b0\u3055\u308c\u305f\u5834\u5408\u3001\u53c2\u7167\u3059\u308b\u5074\u306e\u95a2\u4fc2\u5909\u6570\u306e\u5916\u90e8\u30ad\u30fc\u306e\u5024\u306f\u540c\u3058\u5024\u306b\u66f4\u65b0\u3055\u308c\u308b\u3002\n\u306a\u308b\u307b\u3069\u3001\u308f\u304b\u308a\u306b\u304f\u3044\n\u3061\u3087\u3063\u3068\u56f3\u3067\u5177\u4f53\u7684\u306b\u8aac\u660e\u3057\u3066\u307f\u307e\u3059\u3002\n\nSearchCondition\u306f\u3001\u691c\u7d22\u6761\u4ef6\u30c6\u30fc\u30d6\u30eb\nWorkTyle\u306f\u3001\u691c\u7d22\u6761\u4ef6\u306e\u50cd\u304d\u65b9\u306e\u8907\u6570\u9078\u629e\u3092\u5165\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u3067\u3059\u3002\n\u691c\u7d22\u6761\u4ef6\u306b\u3001\u50cd\u304d\u65b9\u3092\u8907\u6570\u9078\u629e\u3059\u308b\u30a2\u30d7\u30ea\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u306e\u50cd\u304d\u65b9\u306f\u3001\u300c\u30a2\u30eb\u30d0\u30a4\u30c8\u3084\u3001\u30d1\u30fc\u30c8\u3001\u6b63\u793e\u54e1\u3001\u5951\u7d04\u793e\u54e1\u3001\u305d\u306e\u4ed6\u300d\u3092\u9078\u629e\u3067\u304d\u308b\u3068\u3057\u307e\u3059\u3002\n\u6700\u521d\u306e\u753b\u9762\u3067\u6307\u5b9a\u306a\u3057\u3092\u9078\u629e\u3059\u308b\u3068\n\n\u6b21\u306e\u753b\u9762\u306b\u884c\u3063\u3066\u3001\u3001\u300c\u30d1\u30fc\u30c8\u3001\u5951\u7d04\u793e\u54e1\u3001\u305d\u306e\u4ed6\u300d\u3092\u9078\u629e\u3057\u3066\u3001\u6c7a\u5b9a\u3092\u62bc\u3059\u3068\n\n\u5909\u66f4\u3055\u308c\u3066\n\n\u3082\u3046\u4e00\u5ea6\u6761\u4ef6\u3092\u9078\u629e\u3057\u3066\u5909\u66f4\u3059\u308b\u3068\n\n\u9078\u629e\u3057\u305f\u9806\u756a\u901a\u308a\u306b\u3001\u6761\u4ef6\u304c\u5909\u66f4\u3055\u308c\u308b\n\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3001Casdate Delete\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u304c\u78ba\u304b\u3081\u307e\u3059\u3002\nCoreData\u306f\u3001SQLite\u306b\u4fdd\u5b58\u3059\u308b\u306e\u3067\u3001\u691c\u7d22\u6761\u4ef6\u306eSearchCondition\u306e1\u3064\u306e\u30c7\u30fc\u30d6\u30eb\u3060\u3051\u3067\u3001\u914d\u5217\u60c5\u5831\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u3001One to Many\u306e\u95a2\u4fc2\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u306aWorkStyle\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u306a\u95a2\u4fc2\u3092\u4f5c\u308b\u306b\u306f\u3001Add Entity\u3067\u3001SearchCondition\u30c6\u30fc\u30d6\u30eb\u3068WorkStyle\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u3063\u305f\u5f8c\u306b\u3001\nEditor Style\u3092\u3001GUI\u5f62\u5f0f\u306b\u3057\u3066\u3001SearchCondition\u30c6\u30fc\u30d6\u30eb\u3092\u3001Control\u30ad\u30fc\u3092\u62bc\u3057\u306a\u304c\u3089\u3001WorkStyle\u306b\u63a5\u7d9a\u3059\u308b\u3068\u3001\u77e2\u5370\u304c\u3064\u306a\u304c\u308a\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u3001\u30c6\u30fc\u30d6\u30eb\u306e\u30ab\u30e9\u30e0\u540d\u3084\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u540d\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3001\u5909\u3048\u3066\u3044\u304d\u307e\u3059\u3002\n\n\nWorkStyle\u30c6\u30fc\u30d6\u30eb\u304c\u3001Nullify\u304b\u3089\u3001Cascade\u3001To One\u304b\u3089\u3001To Many\u306b\u5909\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nModel.xcdatamodeld\u3092\u9078\u629e\u3057\u3066\u3001\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306eEditor\u304b\u3089\u3001Create NSManagedObject SubClass\u3092\u9078\u629e\u3059\u308b\u3068\u3001\nEntity\u306b\u5bfe\u5fdc\u3059\u308bNSManagedObject SubClass\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u81ea\u52d5\u751f\u6210\u3059\u308b\u3068\u304d\u306b\u3001\u30d5\u30a9\u30eb\u30c0\u3068\u3001\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3057\u5fd8\u308c\u308b\u3068\u3001\u9055\u3046\u30d5\u30a9\u30eb\u30c0\u3068\u30b0\u30eb\u30fc\u30d7\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5f8c\u3001\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30e9\u30b9\u3068\u3001\u81ea\u52d5\u751f\u6210\u3059\u308b\u524d\u306b\u540c\u3058\u30af\u30e9\u30b9\u540d\u304c\u5b58\u5728\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u3001\u30af\u30e9\u30b9\u540d\u304c\u885d\u7a81\u3057\u306a\u3044\u3088\u3046\u306b\u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044\u3002\n\nCascade Delete\u3067\u3001\u50d5\u304c\u30cf\u30de\u3063\u305f\u306e\u306f\u3001\n\u89aa\u30c6\u30fc\u30d6\u30eb\u306eSearchCondition\u3067\u3001\u50cd\u304d\u65b9\u3092\u8907\u6570\u6301\u3064\u305f\u3081\u306eRelationships\u306eworkStyleSet\u306b\u3001nil\u3092\u5165\u308c\u3066\u4e0a\u66f8\u304d\u4fdd\u5b58\u3057\u3066\u524a\u9664\u3057\u3066\u3082\n\u5b50\u30c6\u30fc\u30d6\u30eb\u306eWorkStyle\u30ec\u30b3\u30fc\u30c9\u306f\u3001\u5916\u90e8\u30ad\u30fc\u304c\u6d88\u3048\u308b\u3060\u3051\u3067\u3001\u5168\u90e8\u524a\u9664\u3055\u308c\u306a\u3044\u3067\u6b8b\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u81ea\u5206\u304c\u691c\u8a3c\u3057\u305f\u3068\u3053\u308d\u3001\u5b50\u30c6\u30fc\u30d6\u30eb\u306eWorkStyle\u306bRelationships\u306e\u3042\u308b\u3001\u89aa\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3057\u306a\u3044\u3068\u3001\n\u5b50\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u304c\u5168\u90e8\u524a\u9664\u3055\u308c\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u306e\u5b9f\u88c5\u3067\u3001\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/applideveloper/CascadeDelegateSample\n\u4e3b\u306a\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\nSearchConditionViewController.swift\nimport UIKit\n\nclass SearchConditionViewController: UIViewController {\n\n    @IBOutlet weak var tableView: UITableView!\n\n    var searchConditionArray = [SearchCondition]()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        self.navigationItem.title = \"\u6761\u4ef6\u9078\u629e\"\n\n        // UITableViewDelegate\n        self.tableView.delegate = self\n        // UITableViewDataSource\n        self.tableView.dataSource = self\n\n        self.tableView.register(\n            UINib(\n                nibName : SelectWorkStyleTableViewCell.className,\n                bundle : nil\n            ),\n            forCellReuseIdentifier: SelectWorkStyleTableViewCell.className\n        )\n\n    }\n\n    override func viewWillAppear(_ animated: Bool) {\n        super.viewWillAppear(animated)\n\n        searchConditionArray = SearchConditionManager.sharedManager.fetchAll() ?? [SearchCondition]()\n\n        self.tableView.reloadData()\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n\nextension SearchConditionViewController: UITableViewDelegate {\n    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        if let tableViewCell = self.tableView.cellForRow(at: indexPath),\n           tableViewCell.className == SelectWorkStyleTableViewCell.className {\n\n            let workStyleStoryboard = UIStoryboard(name: Constraints.WorkStyleStoryboard.rawValue, bundle: nil)\n\n            guard let selectWorkStyleViewController = workStyleStoryboard.instantiateInitialViewController() as? SelectWorkStyleViewController else {\n                // send error report\n                return\n            }\n\n            if searchConditionArray.count > 0 {\n                let searchCondition = self.searchConditionArray[indexPath.row]\n\n                if let workStyleSet = searchCondition.workStyleSet,\n                    let workStyleArray = workStyleSet.array as? [WorkStyle] {\n\n                    var selectedWorkStyleArray = [String]()\n\n                    for workStyle in workStyleArray {\n                        selectedWorkStyleArray.append(workStyle.workStyleType ?? \"\")\n                    }\n\n                    selectWorkStyleViewController.selectedWorkStyleArray = selectedWorkStyleArray\n\n                }\n            }\n\n            self.navigationController?.pushViewController(selectWorkStyleViewController, animated: true)\n        }\n    }\n}\n\nextension SearchConditionViewController: UITableViewDataSource {\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        if searchConditionArray.count == 0 {\n            return 1\n        } else {\n            return searchConditionArray.count\n        }\n    }\n\n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n        guard let selectWorkStyleTableViewCell = self.tableView.dequeueReusableCell(withIdentifier: SelectWorkStyleTableViewCell.className) as? SelectWorkStyleTableViewCell else {\n            return ViewUtlity.getTableViewCell(color: UIColor.clear)\n        }\n\n        if searchConditionArray.count == 0 {\n            selectWorkStyleTableViewCell.workStyleLabel.text = \"\u6307\u5b9a\u306a\u3057\"\n        } else {\n            let searchCondition = self.searchConditionArray[indexPath.row]\n\n            if let workStyleSet = searchCondition.workStyleSet,\n                let workStyleArray = workStyleSet.array as? [WorkStyle] {\n                var workStyleString = \"\"\n\n                for (index, workStyle) in workStyleArray.enumerated() {\n                    if let workStyleType = workStyle.workStyleType,\n                        workStyleType.isEmpty == false {\n                        if index == 0 {\n                            workStyleString += workStyleType\n                        } else {\n                            workStyleString += \",\" + workStyleType\n                        }\n                    }\n                }\n\n                print(workStyleString)\n\n                if workStyleString.isEmpty == true {\n                    selectWorkStyleTableViewCell.workStyleLabel.text = \"\u6307\u5b9a\u306a\u3057\"\n                } else {\n                    selectWorkStyleTableViewCell.workStyleLabel.text = workStyleString\n                }\n\n            }\n        }\n\n        return selectWorkStyleTableViewCell\n    }\n}\n\n\n\nSelectWorkStyleViewController.swift\nimport UIKit\n\nclass SelectWorkStyleViewController: UIViewController {\n\n    @IBOutlet weak var tableView: UITableView!\n\n    var workStyleTypeArray = [String]()\n\n    var selectedWorkStyleArray = [String]()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        workStyleTypeArray.append(WorkStyleType.Arbeit.rawValue)\n        workStyleTypeArray.append(WorkStyleType.Part.rawValue)\n        workStyleTypeArray.append(WorkStyleType.RegularEmployee.rawValue)\n        workStyleTypeArray.append(WorkStyleType.ContractEmployee.rawValue)\n        workStyleTypeArray.append(WorkStyleType.TemporaryStaff.rawValue)\n        workStyleTypeArray.append(WorkStyleType.Other.rawValue)\n\n        // UITableViewDelegate\n        self.tableView.delegate = self\n        // UITableViewDataSource\n        self.tableView.dataSource = self\n\n        self.tableView.register(\n            UINib(nibName : WorkStyleTableViewCell.className, bundle : nil),\n            forCellReuseIdentifier: WorkStyleTableViewCell.className\n        )\n\n        self.tableView.reloadData()\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n\n    @IBAction func tapDesideButton(_ sender: Any) {\n        if let searchCondition = SearchConditionManager.sharedManager.create() {\n            var workStyleArray = [WorkStyle]()\n\n            for workStyleType in self.workStyleTypeArray {\n                if self.selectedWorkStyleArray.contains(workStyleType) {\n                    if let workStyle = WorkStyleManager.sharedManager.create() {\n                        workStyle.workStyleType = workStyleType\n                        workStyleArray.append(workStyle)\n                    }\n                }\n            }\n\n            searchCondition.workStyleSet = NSOrderedSet(array: workStyleArray)\n\n            SearchConditionManager.sharedManager.update(updateSearchCondition: searchCondition)\n        }\n\n        let _ = self.navigationController?.popViewController(animated: true)\n    }\n}\n\nextension SelectWorkStyleViewController: UITableViewDelegate {\n    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        let tableViewCell = self.tableView.cellForRow(at: indexPath)\n\n        if let workStyleTableViewCell = tableViewCell as? WorkStyleTableViewCell  {\n            if workStyleTableViewCell.isWorkStyleTableViewCellSelected {\n                // \u3059\u3067\u306b\u9078\u629e\u3055\u308c\u3066\u3044\u305f\u6642\n                workStyleTableViewCell.isWorkStyleTableViewCellSelected = false\n            } else {\n                // \u672a\u9078\u629e\u306e\u6642\n                workStyleTableViewCell.isWorkStyleTableViewCellSelected = true\n            }\n\n            if let workStyleLabelText = workStyleTableViewCell.workStyleLabel.text {\n                if selectedWorkStyleArray.contains(workStyleLabelText) {\n                    // \u3059\u3067\u306b\u9078\u629e\u3055\u308c\u3066\u3044\u305f\u6642\n                    let newSelectedWorkStyleArray = selectedWorkStyleArray.filter({ (workStyle: String) -> Bool in\n                        if workStyle == workStyleLabelText {\n                            return false\n                        } else {\n                            return true\n                        }\n                   })\n\n                    self.selectedWorkStyleArray = newSelectedWorkStyleArray\n                } else {\n                    self.selectedWorkStyleArray.append(workStyleLabelText)\n                }\n            }\n        }\n\n        self.tableView.reloadData()\n    }\n}\n\nextension SelectWorkStyleViewController: UITableViewDataSource {\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return self.workStyleTypeArray.count\n    }\n\n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        guard let workStyleTableViewCell = self.tableView.dequeueReusableCell(withIdentifier: WorkStyleTableViewCell.className) as? WorkStyleTableViewCell else {\n            return ViewUtlity.getTableViewCell(color: UIColor.clear)\n        }\n\n        let workStyleType = workStyleTypeArray[indexPath.row]\n\n        if self.selectedWorkStyleArray.contains(workStyleType) {\n            workStyleTableViewCell.isWorkStyleTableViewCellSelected = true\n        } else {\n            workStyleTableViewCell.isWorkStyleTableViewCellSelected = false\n        }\n\n        workStyleTableViewCell.workStyleLabel.text = workStyleType\n\n        return workStyleTableViewCell\n    }\n}\n\n\n\nSearchConditionManager.swift\nimport UIKit\nimport CoreData\n\nclass SearchConditionManager: NSObject {\n\n    static let sharedManager = SearchConditionManager()\n\n    private override init() {\n\n    }\n\n    func create() -> SearchCondition? {\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return nil\n        }\n\n        let viewContext = appDelegate.persistentContainer.viewContext\n\n        guard let searchConditionEntity = NSEntityDescription.entity(forEntityName: SearchCondition.className, in: viewContext) else {\n            // FIXME: send error report\n            return nil\n        }\n\n        guard let searchCondition = NSManagedObject(entity: searchConditionEntity, insertInto: viewContext) as? SearchCondition else {\n            return nil\n        }\n\n        do {\n            try viewContext.save()\n            return searchCondition\n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n            return nil\n        }\n    }\n\n    func fetchAll() -> [SearchCondition]? {\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return nil\n        }\n\n        let viewContext = appDelegate.persistentContainer.viewContext\n\n        let fetchRequest: NSFetchRequest<SearchCondition> = SearchCondition.fetchRequest()\n\n        //ascendind:true \u6607\u9806\u3001false \u964d\u9806\u3067\u3059\n        let sortDescripter = NSSortDescriptor(key: \"updateTime\", ascending: false)\n        fetchRequest.sortDescriptors = [sortDescripter]\n\n        do {\n            return try viewContext.fetch(fetchRequest)\n\n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n            return nil\n        }\n    }\n\n    func update(updateSearchCondition: SearchCondition) {\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return\n        }\n\n        let viewContext = appDelegate.persistentContainer.viewContext\n\n        if let searchCondition = self.create() {\n            searchCondition.workStyleSet = updateSearchCondition.workStyleSet\n            searchCondition.updateTime = NSDate()\n        }\n\n        do {\n            try viewContext.save()\n\n\n            if let searchConditionArray = self.fetchAll(),\n                searchConditionArray.count >= 2 {\n\n                print(\"start\")\n                for searchCondition in searchConditionArray {\n                    if let workStyleSet = searchCondition.workStyleSet,\n                        let workStyleArray = workStyleSet.array as? [WorkStyle] {\n                        var workStyleString = \"\"\n\n                        for (index, workStyle) in workStyleArray.enumerated() {\n                            if let workStyleType = workStyle.workStyleType,\n                               workStyleType.isEmpty == false {\n                                if index == 0 {\n                                    workStyleString += workStyleType\n                                } else {\n                                    workStyleString += \",\" + workStyleType\n                                }\n                            }\n                        }\n\n                        if workStyleString.isEmpty == true {\n                            workStyleString = \"\u6307\u5b9a\u306a\u3057\"\n                        }\n                        print(workStyleString)\n                    }\n                }\n                print(\"end\")\n\n\n                for (index, searchCondition) in searchConditionArray.enumerated() {\n                    if index == 0 {\n                        continue\n                    }\n\n                    self.delete(searchCondition: searchCondition)\n                }\n            }\n\n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n        }\n    }\n\n    func delete(searchCondition: SearchCondition){\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return\n        }\n\n        let viewContext = appDelegate.persistentContainer.viewContext\n\n        viewContext.delete(searchCondition)\n\n        do {\n\n            try viewContext.save()\n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n            return\n        }\n\n    }\n}\n\n\nimport UIKit\nimport CoreData\n\nclass WorkStyleManager: NSObject {\n    static let sharedManager = WorkStyleManager()\n\n    private override init() {\n\n    }\n\n    func create() -> WorkStyle? {\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return nil\n        }\n\n        let viewContext = appDelegate.persistentContainer.viewContext\n\n        guard let workStyleEntity = NSEntityDescription.entity(forEntityName: WorkStyle.className, in: viewContext) else {\n            // FIXME: send error report\n            return nil\n        }\n\n        guard let workStyle = NSManagedObject(entity: workStyleEntity, insertInto: viewContext) as? WorkStyle else {\n            return nil\n        }\n\n        do {\n            try viewContext.save()\n            return workStyle\n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n            return nil\n        }\n    }\n}\n\n\u81ea\u5206\u306eCasdate Delete\u306e\u5b9f\u88c5\u306f\u3001\u66f4\u65b0\u524d\u306e\u89aa\u30ec\u30b3\u30fc\u30c9\u53d6\u5f97\u3057\u3066\u3001\u66f8\u304d\u63db\u3048\u3066\u3001\u66f4\u65b0\u3067\u306f\u306a\u304f\u3001\u65b0\u898f\u4f5c\u6210\u3057\u3066\u3001\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u4fdd\u5b58\u304c\u6210\u529f\u3057\u305f\u3089\u3001\u53e4\u3044\u89aa\u30ec\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u3068\u3044\u3046\u5b9f\u88c5\u3067\u3059\u3002\n\u4ed6\u306b\u3053\u3046\u3044\u3046\u3084\u308a\u65b9\u304c\u3042\u308b\u3088\u3001\u5b9f\u88c5\u9593\u9055\u3063\u3066\u308b\u3088\u3063\u3066\u3044\u3046\u3068\u3053\u308d\u304c\u3042\u308c\u3070\u3001\u305c\u3072\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0a\u3001\u9045\u304f\u306a\u308a\u307e\u3057\u305f\u304c\u30012016\u5e7412\u65e510\u65e5\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3067\u3057\u305f\u3002\n\u4ee5\u524d\u3001CoreData\u3067\u3001\u914d\u5217\u60c5\u5831\u3092\u6301\u3064\u5fc5\u8981\u304c\u3042\u3063\u305f\u306e\u3067\u3001\n\nCoreData\u306eCascade delete\u306e\u30b5\u30f3\u30d7\u30eb\u30921\u65e5\u3067\u4f5c\u3063\u3066\u3001\u6319\u52d5\u3092\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nhttps://github.com/applideveloper/CascadeDeleteSample\n\nCascade Delete\u306a\u306e\u306b\u3001Cascade Delegate\u3063\u3066\u540d\u524d\u9593\u9055\u3048\u307e\u3057\u305fw\n\n\u5b8c\u5168\u306b\u75b2\u308c\u3066\u307e\u3059\u306dw\n\n\u3061\u306a\u307f\u306bRealm\u306f\u3001Cascade Delete\u304c\u307e\u3060\u3001\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u306a\u3044\u306e\u3067\u3001\n\n\u4ee5\u524d\u3001Realm\u3092\u4f7f\u3063\u3066\u3044\u305f\u6642\u306f\u3001\u81ea\u5206\u3067\u81ea\u4f5c\u3057\u3066\u5b50\u30c6\u30fc\u30d6\u30eb\u307e\u3067\u6d88\u3057\u3066\u307e\u3057\u305f\u3002\n\n\u305d\u308c\u306b\u5bfe\u3057\u3001CoreData\u306f\u3001Cascade Delete\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002Limit\u3082Offset\u3082\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/realm/realm-java/issues/1104\n\nCascade Delete\u3068\u306f\u3001Wikipedia\u306b\u3088\u308b\u3068\n\nhttps://ja.wikipedia.org/wiki/%E5%A4%96%E9%83%A8%E3%82%AD%E3%83%BC#CASCADE\n\n\u53c2\u7167\u3055\u308c\u308b\u5074\u306e\u95a2\u4fc2\u5909\u6570\u306e\u7d44\u304c\u524a\u9664\u3055\u308c\u305f\u5834\u5408\u3001\u53c2\u7167\u3059\u308b\u5074\u306e\u95a2\u4fc2\u5909\u6570\u306e\u5bfe\u5fdc\u3059\u308b\u3059\u3079\u3066\u306e\u7d44\u306f\u524a\u9664\u3055\u308c\u308b\u3002\n\u540c\u69d8\u306b\u3001\u53c2\u7167\u3055\u308c\u308b\u5074\u306e\u95a2\u4fc2\u5909\u6570\u306e\u7d44\u304c\u66f4\u65b0\u3055\u308c\u305f\u5834\u5408\u3001\u53c2\u7167\u3059\u308b\u5074\u306e\u95a2\u4fc2\u5909\u6570\u306e\u5916\u90e8\u30ad\u30fc\u306e\u5024\u306f\u540c\u3058\u5024\u306b\u66f4\u65b0\u3055\u308c\u308b\u3002\n\n\u306a\u308b\u307b\u3069\u3001\u308f\u304b\u308a\u306b\u304f\u3044\n\n\u3061\u3087\u3063\u3068\u56f3\u3067\u5177\u4f53\u7684\u306b\u8aac\u660e\u3057\u3066\u307f\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-10 23.36.16.png](https://qiita-image-store.s3.amazonaws.com/0/25434/3fa5e773-bd92-137e-ba59-eb2c0b8cf12b.png)\n\nSearchCondition\u306f\u3001\u691c\u7d22\u6761\u4ef6\u30c6\u30fc\u30d6\u30eb\n\nWorkTyle\u306f\u3001\u691c\u7d22\u6761\u4ef6\u306e\u50cd\u304d\u65b9\u306e\u8907\u6570\u9078\u629e\u3092\u5165\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u3067\u3059\u3002\n\n\u691c\u7d22\u6761\u4ef6\u306b\u3001\u50cd\u304d\u65b9\u3092\u8907\u6570\u9078\u629e\u3059\u308b\u30a2\u30d7\u30ea\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u5834\u5408\u306e\u50cd\u304d\u65b9\u306f\u3001\u300c\u30a2\u30eb\u30d0\u30a4\u30c8\u3084\u3001\u30d1\u30fc\u30c8\u3001\u6b63\u793e\u54e1\u3001\u5951\u7d04\u793e\u54e1\u3001\u305d\u306e\u4ed6\u300d\u3092\u9078\u629e\u3067\u304d\u308b\u3068\u3057\u307e\u3059\u3002\n\n\u6700\u521d\u306e\u753b\u9762\u3067\u6307\u5b9a\u306a\u3057\u3092\u9078\u629e\u3059\u308b\u3068\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-10 23.56.20.png](https://qiita-image-store.s3.amazonaws.com/0/25434/d964dc71-0540-fbb4-a315-77743b801993.png)\n\n\u6b21\u306e\u753b\u9762\u306b\u884c\u3063\u3066\u3001\u3001\u300c\u30d1\u30fc\u30c8\u3001\u5951\u7d04\u793e\u54e1\u3001\u305d\u306e\u4ed6\u300d\u3092\u9078\u629e\u3057\u3066\u3001\u6c7a\u5b9a\u3092\u62bc\u3059\u3068\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-10 23.57.06.png](https://qiita-image-store.s3.amazonaws.com/0/25434/6cf9df00-60e3-00d5-4be6-c1594d446035.png)\n\n\u5909\u66f4\u3055\u308c\u3066\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-10 23.54.32.png](https://qiita-image-store.s3.amazonaws.com/0/25434/0d9395b2-710e-b451-bc87-2e4633681992.png)\n\n\u3082\u3046\u4e00\u5ea6\u6761\u4ef6\u3092\u9078\u629e\u3057\u3066\u5909\u66f4\u3059\u308b\u3068\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-10 23.54.59.png](https://qiita-image-store.s3.amazonaws.com/0/25434/5323009d-82d6-b7a2-d06f-583e956df0eb.png)\n\n\u9078\u629e\u3057\u305f\u9806\u756a\u901a\u308a\u306b\u3001\u6761\u4ef6\u304c\u5909\u66f4\u3055\u308c\u308b\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-10 23.54.57.png](https://qiita-image-store.s3.amazonaws.com/0/25434/69acaf5a-a84b-e254-199d-8449676e9a29.png)\n\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3001Casdate Delete\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u304c\u78ba\u304b\u3081\u307e\u3059\u3002\n\nCoreData\u306f\u3001SQLite\u306b\u4fdd\u5b58\u3059\u308b\u306e\u3067\u3001\u691c\u7d22\u6761\u4ef6\u306eSearchCondition\u306e1\u3064\u306e\u30c7\u30fc\u30d6\u30eb\u3060\u3051\u3067\u3001\u914d\u5217\u60c5\u5831\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u305d\u3053\u3067\u3001One to Many\u306e\u95a2\u4fc2\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u306aWorkStyle\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u306a\u95a2\u4fc2\u3092\u4f5c\u308b\u306b\u306f\u3001Add Entity\u3067\u3001SearchCondition\u30c6\u30fc\u30d6\u30eb\u3068WorkStyle\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u3063\u305f\u5f8c\u306b\u3001\n\nEditor Style\u3092\u3001GUI\u5f62\u5f0f\u306b\u3057\u3066\u3001SearchCondition\u30c6\u30fc\u30d6\u30eb\u3092\u3001Control\u30ad\u30fc\u3092\u62bc\u3057\u306a\u304c\u3089\u3001WorkStyle\u306b\u63a5\u7d9a\u3059\u308b\u3068\u3001\u77e2\u5370\u304c\u3064\u306a\u304c\u308a\u307e\u3059\u3002\n\n\u305d\u306e\u5f8c\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u3001\u30c6\u30fc\u30d6\u30eb\u306e\u30ab\u30e9\u30e0\u540d\u3084\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u540d\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3001\u5909\u3048\u3066\u3044\u304d\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-10 23.46.59.png](https://qiita-image-store.s3.amazonaws.com/0/25434/de1b23e2-3132-d75e-d473-721170097c8d.png)\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-10 23.48.17.png](https://qiita-image-store.s3.amazonaws.com/0/25434/4d04b5d9-d4d9-53a7-f11e-0f2e0d2c5779.png)\n\nWorkStyle\u30c6\u30fc\u30d6\u30eb\u304c\u3001Nullify\u304b\u3089\u3001Cascade\u3001To One\u304b\u3089\u3001To Many\u306b\u5909\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nModel.xcdatamodeld\u3092\u9078\u629e\u3057\u3066\u3001\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306eEditor\u304b\u3089\u3001Create NSManagedObject SubClass\u3092\u9078\u629e\u3059\u308b\u3068\u3001\n\nEntity\u306b\u5bfe\u5fdc\u3059\u308bNSManagedObject SubClass\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n\u81ea\u52d5\u751f\u6210\u3059\u308b\u3068\u304d\u306b\u3001\u30d5\u30a9\u30eb\u30c0\u3068\u3001\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3057\u5fd8\u308c\u308b\u3068\u3001\u9055\u3046\u30d5\u30a9\u30eb\u30c0\u3068\u30b0\u30eb\u30fc\u30d7\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u5f8c\u3001\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30e9\u30b9\u3068\u3001\u81ea\u52d5\u751f\u6210\u3059\u308b\u524d\u306b\u540c\u3058\u30af\u30e9\u30b9\u540d\u304c\u5b58\u5728\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u3001\u30af\u30e9\u30b9\u540d\u304c\u885d\u7a81\u3057\u306a\u3044\u3088\u3046\u306b\u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044\u3002\n\n<img width=\"373\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-10 19.51.16.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/25434/7e8a1dcc-8da4-d9e3-2ada-d7fba2162b01.png\">\n\n\nCascade Delete\u3067\u3001\u50d5\u304c\u30cf\u30de\u3063\u305f\u306e\u306f\u3001\n\n\u89aa\u30c6\u30fc\u30d6\u30eb\u306eSearchCondition\u3067\u3001\u50cd\u304d\u65b9\u3092\u8907\u6570\u6301\u3064\u305f\u3081\u306eRelationships\u306eworkStyleSet\u306b\u3001nil\u3092\u5165\u308c\u3066\u4e0a\u66f8\u304d\u4fdd\u5b58\u3057\u3066\u524a\u9664\u3057\u3066\u3082\n\n\u5b50\u30c6\u30fc\u30d6\u30eb\u306eWorkStyle\u30ec\u30b3\u30fc\u30c9\u306f\u3001\u5916\u90e8\u30ad\u30fc\u304c\u6d88\u3048\u308b\u3060\u3051\u3067\u3001\u5168\u90e8\u524a\u9664\u3055\u308c\u306a\u3044\u3067\u6b8b\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u81ea\u5206\u304c\u691c\u8a3c\u3057\u305f\u3068\u3053\u308d\u3001\u5b50\u30c6\u30fc\u30d6\u30eb\u306eWorkStyle\u306bRelationships\u306e\u3042\u308b\u3001\u89aa\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3057\u306a\u3044\u3068\u3001\n\n\u5b50\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u304c\u5168\u90e8\u524a\u9664\u3055\u308c\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u306e\u5b9f\u88c5\u3067\u3001\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\nhttps://github.com/applideveloper/CascadeDelegateSample\n\n\u4e3b\u306a\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n``` SearchConditionViewController.swift\nimport UIKit\n\nclass SearchConditionViewController: UIViewController {\n    \n    @IBOutlet weak var tableView: UITableView!\n    \n    var searchConditionArray = [SearchCondition]()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        self.navigationItem.title = \"\u6761\u4ef6\u9078\u629e\"\n        \n        // UITableViewDelegate\n        self.tableView.delegate = self\n        // UITableViewDataSource\n        self.tableView.dataSource = self\n        \n        self.tableView.register(\n            UINib(\n                nibName : SelectWorkStyleTableViewCell.className,\n                bundle : nil\n            ),\n            forCellReuseIdentifier: SelectWorkStyleTableViewCell.className\n        )\n        \n    }\n    \n    override func viewWillAppear(_ animated: Bool) {\n        super.viewWillAppear(animated)\n        \n        searchConditionArray = SearchConditionManager.sharedManager.fetchAll() ?? [SearchCondition]()\n        \n        self.tableView.reloadData()\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n\nextension SearchConditionViewController: UITableViewDelegate {\n    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        if let tableViewCell = self.tableView.cellForRow(at: indexPath),\n           tableViewCell.className == SelectWorkStyleTableViewCell.className {\n            \n            let workStyleStoryboard = UIStoryboard(name: Constraints.WorkStyleStoryboard.rawValue, bundle: nil)\n            \n            guard let selectWorkStyleViewController = workStyleStoryboard.instantiateInitialViewController() as? SelectWorkStyleViewController else {\n                // send error report\n                return\n            }\n            \n            if searchConditionArray.count > 0 {\n                let searchCondition = self.searchConditionArray[indexPath.row]\n                \n                if let workStyleSet = searchCondition.workStyleSet,\n                    let workStyleArray = workStyleSet.array as? [WorkStyle] {\n                    \n                    var selectedWorkStyleArray = [String]()\n                    \n                    for workStyle in workStyleArray {\n                        selectedWorkStyleArray.append(workStyle.workStyleType ?? \"\")\n                    }\n\n                    selectWorkStyleViewController.selectedWorkStyleArray = selectedWorkStyleArray\n                    \n                }\n            }\n            \n            self.navigationController?.pushViewController(selectWorkStyleViewController, animated: true)\n        }\n    }\n}\n\nextension SearchConditionViewController: UITableViewDataSource {\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        if searchConditionArray.count == 0 {\n            return 1\n        } else {\n            return searchConditionArray.count\n        }\n    }\n    \n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        \n        guard let selectWorkStyleTableViewCell = self.tableView.dequeueReusableCell(withIdentifier: SelectWorkStyleTableViewCell.className) as? SelectWorkStyleTableViewCell else {\n            return ViewUtlity.getTableViewCell(color: UIColor.clear)\n        }\n        \n        if searchConditionArray.count == 0 {\n            selectWorkStyleTableViewCell.workStyleLabel.text = \"\u6307\u5b9a\u306a\u3057\"\n        } else {\n            let searchCondition = self.searchConditionArray[indexPath.row]\n            \n            if let workStyleSet = searchCondition.workStyleSet,\n                let workStyleArray = workStyleSet.array as? [WorkStyle] {\n                var workStyleString = \"\"\n                \n                for (index, workStyle) in workStyleArray.enumerated() {\n                    if let workStyleType = workStyle.workStyleType,\n                        workStyleType.isEmpty == false {\n                        if index == 0 {\n                            workStyleString += workStyleType\n                        } else {\n                            workStyleString += \",\" + workStyleType\n                        }\n                    }\n                }\n                \n                print(workStyleString)\n                \n                if workStyleString.isEmpty == true {\n                    selectWorkStyleTableViewCell.workStyleLabel.text = \"\u6307\u5b9a\u306a\u3057\"\n                } else {\n                    selectWorkStyleTableViewCell.workStyleLabel.text = workStyleString\n                }\n                \n            }\n        }\n        \n        return selectWorkStyleTableViewCell\n    }\n}\n```\n\n``` SelectWorkStyleViewController.swift\nimport UIKit\n\nclass SelectWorkStyleViewController: UIViewController {\n    \n    @IBOutlet weak var tableView: UITableView!\n    \n    var workStyleTypeArray = [String]()\n    \n    var selectedWorkStyleArray = [String]()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        workStyleTypeArray.append(WorkStyleType.Arbeit.rawValue)\n        workStyleTypeArray.append(WorkStyleType.Part.rawValue)\n        workStyleTypeArray.append(WorkStyleType.RegularEmployee.rawValue)\n        workStyleTypeArray.append(WorkStyleType.ContractEmployee.rawValue)\n        workStyleTypeArray.append(WorkStyleType.TemporaryStaff.rawValue)\n        workStyleTypeArray.append(WorkStyleType.Other.rawValue)\n        \n        // UITableViewDelegate\n        self.tableView.delegate = self\n        // UITableViewDataSource\n        self.tableView.dataSource = self\n        \n        self.tableView.register(\n            UINib(nibName : WorkStyleTableViewCell.className, bundle : nil),\n            forCellReuseIdentifier: WorkStyleTableViewCell.className\n        )\n        \n        self.tableView.reloadData()\n    }\n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n    \n    \n    @IBAction func tapDesideButton(_ sender: Any) {\n        if let searchCondition = SearchConditionManager.sharedManager.create() {\n            var workStyleArray = [WorkStyle]()\n            \n            for workStyleType in self.workStyleTypeArray {\n                if self.selectedWorkStyleArray.contains(workStyleType) {\n                    if let workStyle = WorkStyleManager.sharedManager.create() {\n                        workStyle.workStyleType = workStyleType\n                        workStyleArray.append(workStyle)\n                    }\n                }\n            }\n            \n            searchCondition.workStyleSet = NSOrderedSet(array: workStyleArray)\n            \n            SearchConditionManager.sharedManager.update(updateSearchCondition: searchCondition)\n        }\n        \n        let _ = self.navigationController?.popViewController(animated: true)\n    }\n}\n\nextension SelectWorkStyleViewController: UITableViewDelegate {\n    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        let tableViewCell = self.tableView.cellForRow(at: indexPath)\n    \n        if let workStyleTableViewCell = tableViewCell as? WorkStyleTableViewCell  {\n            if workStyleTableViewCell.isWorkStyleTableViewCellSelected {\n                // \u3059\u3067\u306b\u9078\u629e\u3055\u308c\u3066\u3044\u305f\u6642\n                workStyleTableViewCell.isWorkStyleTableViewCellSelected = false\n            } else {\n                // \u672a\u9078\u629e\u306e\u6642\n                workStyleTableViewCell.isWorkStyleTableViewCellSelected = true\n            }\n            \n            if let workStyleLabelText = workStyleTableViewCell.workStyleLabel.text {\n                if selectedWorkStyleArray.contains(workStyleLabelText) {\n                    // \u3059\u3067\u306b\u9078\u629e\u3055\u308c\u3066\u3044\u305f\u6642\n                    let newSelectedWorkStyleArray = selectedWorkStyleArray.filter({ (workStyle: String) -> Bool in\n                        if workStyle == workStyleLabelText {\n                            return false\n                        } else {\n                            return true\n                        }\n                   })\n                    \n                    self.selectedWorkStyleArray = newSelectedWorkStyleArray\n                } else {\n                    self.selectedWorkStyleArray.append(workStyleLabelText)\n                }\n            }\n        }\n        \n        self.tableView.reloadData()\n    }\n}\n\nextension SelectWorkStyleViewController: UITableViewDataSource {\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return self.workStyleTypeArray.count\n    }\n    \n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        guard let workStyleTableViewCell = self.tableView.dequeueReusableCell(withIdentifier: WorkStyleTableViewCell.className) as? WorkStyleTableViewCell else {\n            return ViewUtlity.getTableViewCell(color: UIColor.clear)\n        }\n        \n        let workStyleType = workStyleTypeArray[indexPath.row]\n        \n        if self.selectedWorkStyleArray.contains(workStyleType) {\n            workStyleTableViewCell.isWorkStyleTableViewCellSelected = true\n        } else {\n            workStyleTableViewCell.isWorkStyleTableViewCellSelected = false\n        }\n        \n        workStyleTableViewCell.workStyleLabel.text = workStyleType\n        \n        return workStyleTableViewCell\n    }\n}\n```\n\n``` SearchConditionManager.swift\nimport UIKit\nimport CoreData\n\nclass SearchConditionManager: NSObject {\n    \n    static let sharedManager = SearchConditionManager()\n    \n    private override init() {\n        \n    }\n    \n    func create() -> SearchCondition? {\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return nil\n        }\n        \n        let viewContext = appDelegate.persistentContainer.viewContext\n\n        guard let searchConditionEntity = NSEntityDescription.entity(forEntityName: SearchCondition.className, in: viewContext) else {\n            // FIXME: send error report\n            return nil\n        }\n        \n        guard let searchCondition = NSManagedObject(entity: searchConditionEntity, insertInto: viewContext) as? SearchCondition else {\n            return nil\n        }\n        \n        do {\n            try viewContext.save()\n            return searchCondition\n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n            return nil\n        }\n    }\n\n    func fetchAll() -> [SearchCondition]? {\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return nil\n        }\n        \n        let viewContext = appDelegate.persistentContainer.viewContext\n        \n        let fetchRequest: NSFetchRequest<SearchCondition> = SearchCondition.fetchRequest()\n        \n        //ascendind:true \u6607\u9806\u3001false \u964d\u9806\u3067\u3059\n        let sortDescripter = NSSortDescriptor(key: \"updateTime\", ascending: false)\n        fetchRequest.sortDescriptors = [sortDescripter]\n        \n        do {\n            return try viewContext.fetch(fetchRequest)\n            \n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n            return nil\n        }\n    }\n    \n    func update(updateSearchCondition: SearchCondition) {\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return\n        }\n        \n        let viewContext = appDelegate.persistentContainer.viewContext\n        \n        if let searchCondition = self.create() {\n            searchCondition.workStyleSet = updateSearchCondition.workStyleSet\n            searchCondition.updateTime = NSDate()\n        }\n        \n        do {\n            try viewContext.save()\n            \n            \n            if let searchConditionArray = self.fetchAll(),\n                searchConditionArray.count >= 2 {\n                \n                print(\"start\")\n                for searchCondition in searchConditionArray {\n                    if let workStyleSet = searchCondition.workStyleSet,\n                        let workStyleArray = workStyleSet.array as? [WorkStyle] {\n                        var workStyleString = \"\"\n                        \n                        for (index, workStyle) in workStyleArray.enumerated() {\n                            if let workStyleType = workStyle.workStyleType,\n                               workStyleType.isEmpty == false {\n                                if index == 0 {\n                                    workStyleString += workStyleType\n                                } else {\n                                    workStyleString += \",\" + workStyleType\n                                }\n                            }\n                        }\n                        \n                        if workStyleString.isEmpty == true {\n                            workStyleString = \"\u6307\u5b9a\u306a\u3057\"\n                        }\n                        print(workStyleString)\n                    }\n                }\n                print(\"end\")\n                \n                \n                for (index, searchCondition) in searchConditionArray.enumerated() {\n                    if index == 0 {\n                        continue\n                    }\n                    \n                    self.delete(searchCondition: searchCondition)\n                }\n            }\n            \n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n        }\n    }\n    \n    func delete(searchCondition: SearchCondition){\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return\n        }\n        \n        let viewContext = appDelegate.persistentContainer.viewContext\n       \n        viewContext.delete(searchCondition)\n        \n        do {\n\n            try viewContext.save()\n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n            return\n        }\n        \n    }\n}\n```\n\n```\nimport UIKit\nimport CoreData\n\nclass WorkStyleManager: NSObject {\n    static let sharedManager = WorkStyleManager()\n    \n    private override init() {\n        \n    }\n    \n    func create() -> WorkStyle? {\n        guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n            // FIXME: send error report\n            return nil\n        }\n        \n        let viewContext = appDelegate.persistentContainer.viewContext\n        \n        guard let workStyleEntity = NSEntityDescription.entity(forEntityName: WorkStyle.className, in: viewContext) else {\n            // FIXME: send error report\n            return nil\n        }\n        \n        guard let workStyle = NSManagedObject(entity: workStyleEntity, insertInto: viewContext) as? WorkStyle else {\n            return nil\n        }\n        \n        do {\n            try viewContext.save()\n            return workStyle\n        } catch let error as NSError {\n            // FIXME: send error report\n            print(\"error.description = \\(error.description)\")\n            return nil\n        }\n    }\n}\n```\n\n\u81ea\u5206\u306eCasdate Delete\u306e\u5b9f\u88c5\u306f\u3001\u66f4\u65b0\u524d\u306e\u89aa\u30ec\u30b3\u30fc\u30c9\u53d6\u5f97\u3057\u3066\u3001\u66f8\u304d\u63db\u3048\u3066\u3001\u66f4\u65b0\u3067\u306f\u306a\u304f\u3001\u65b0\u898f\u4f5c\u6210\u3057\u3066\u3001\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u4fdd\u5b58\u304c\u6210\u529f\u3057\u305f\u3089\u3001\u53e4\u3044\u89aa\u30ec\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u3068\u3044\u3046\u5b9f\u88c5\u3067\u3059\u3002\n\n\u4ed6\u306b\u3053\u3046\u3044\u3046\u3084\u308a\u65b9\u304c\u3042\u308b\u3088\u3001\u5b9f\u88c5\u9593\u9055\u3063\u3066\u308b\u3088\u3063\u3066\u3044\u3046\u3068\u3053\u308d\u304c\u3042\u308c\u3070\u3001\u305c\u3072\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4ee5\u4e0a\u3001\u9045\u304f\u306a\u308a\u307e\u3057\u305f\u304c\u30012016\u5e7412\u65e510\u65e5\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3067\u3057\u305f\u3002\n\n\n\n\n\n"}