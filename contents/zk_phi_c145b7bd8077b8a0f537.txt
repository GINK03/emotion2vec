{"context": " More than 1 year has passed since last update.\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u3001\u300c\u3055\u3063\u304d\u307e\u3067\u30ab\u30fc\u30bd\u30eb\u306e\u3042\u3063\u305f\u5834\u6240\u306b\u623b\u308a\u305f\u3044\u300d\u306e\u3088\u3046\u306a\u5834\u9762\u306f\u3051\u3063\u3053\u3046\u3042\u308a\u307e\u3059\u3002\n\u305d\u3093\u306a\u4eba\u306e\u305f\u3081\u306b\u3001\u30ab\u30fc\u30bd\u30eb\u79fb\u52d5\u306e\u5c65\u6b74\u3092\u6b8b\u3057\u3066\u304f\u308c\u308b\u7d20\u6575\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u300cpoint-undo.el\u300d\u3082\u3042\u308a\u307e\u3059\u3002\n\u304c\u3002\n\u50d5\u306b\u306f\u3001\u6687\u306a\u3068\u304d\u3001\u3064\u3044\u30ab\u30fc\u30bd\u30eb\u3092\u4e0a\u4e0b\u3068\u304b\u5de6\u53f3\u306b\u3071\u305f\u3071\u305f\u52d5\u304b\u3059\u7656\u304c\u3042\u308a\u307e\u3059\u3002\u3059\u308b\u3068\u3053\u306e\u5c65\u6b74\u3082\u3059\u3079\u3066\u6b8b\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001 point-undo \u304c\u4f7f\u3044\u7269\u306b\u306a\u308a\u307e\u305b\u3093\u3002\u56f0\u3063\u305f\u3002\n\u305b\u3063\u304b\u304f\u62e1\u5f35\u306e\u3067\u304d\u308b\u30a8\u30c7\u30a3\u30bf\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u50d5\u306e\u3088\u3046\u306a\u843d\u3061\u7740\u304d\u306e\u306a\u3044\u4eba\u306e\u305f\u3081\u306e point-undo \u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n(require 'ring)\n(require 'edmacro)\n\n(defvar-local jump-back!--marker-ring nil)\n\n(defun jump-back!--ring-update ()\n  (let ((marker (point-marker)))\n    (unless jump-back!--marker-ring\n      (setq jump-back!--marker-ring (make-ring 30)))\n    (ring-insert jump-back!--marker-ring marker)))\n\n(run-with-idle-timer 1 t 'jump-back!--ring-update)\n\n(defun jump-back! ()\n  (interactive)\n  (if (ring-empty-p jump-back!--marker-ring)\n      (error \"No further undo information\")\n    (let ((marker (ring-ref jump-back!--marker-ring 0))\n          (repeat-key (vector last-input-event)))\n      (ring-remove jump-back!--marker-ring 0)\n      (if (= (point-marker) marker)\n          (jump-back!)\n        (goto-char marker)\n        (message \"(Type %s to repeat)\" (edmacro-format-keys repeat-key))\n        (set-temporary-overlay-map\n         (let ((km (make-sparse-keymap)))\n           (define-key km repeat-key 'jump-back!)\n           km))))))\n\njump-back! \u304c\u809d\u5fc3\u306e\u30b3\u30de\u30f3\u30c9\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u3069\u3053\u304b\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3067\u3059\u3002\n(global-set-key (kbd \"M--\") 'jump-back!)\n\n\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u3001\u300c\u3055\u3063\u304d\u307e\u3067\u30ab\u30fc\u30bd\u30eb\u306e\u3042\u3063\u305f\u5834\u6240\u306b\u623b\u308a\u305f\u3044\u300d\u306e\u3088\u3046\u306a\u5834\u9762\u306f\u3051\u3063\u3053\u3046\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u3093\u306a\u4eba\u306e\u305f\u3081\u306b\u3001\u30ab\u30fc\u30bd\u30eb\u79fb\u52d5\u306e\u5c65\u6b74\u3092\u6b8b\u3057\u3066\u304f\u308c\u308b\u7d20\u6575\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u300c[point-undo.el](http://d.hatena.ne.jp/rubikitch/20081230/pointundo)\u300d\u3082\u3042\u308a\u307e\u3059\u3002\n\n*\u304c\u3002*\n\n\u50d5\u306b\u306f\u3001\u6687\u306a\u3068\u304d\u3001\u3064\u3044\u30ab\u30fc\u30bd\u30eb\u3092\u4e0a\u4e0b\u3068\u304b\u5de6\u53f3\u306b\u3071\u305f\u3071\u305f\u52d5\u304b\u3059\u7656\u304c\u3042\u308a\u307e\u3059\u3002\u3059\u308b\u3068\u3053\u306e\u5c65\u6b74\u3082\u3059\u3079\u3066\u6b8b\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001 point-undo \u304c\u4f7f\u3044\u7269\u306b\u306a\u308a\u307e\u305b\u3093\u3002\u56f0\u3063\u305f\u3002\n\n\u305b\u3063\u304b\u304f\u62e1\u5f35\u306e\u3067\u304d\u308b\u30a8\u30c7\u30a3\u30bf\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u50d5\u306e\u3088\u3046\u306a\u843d\u3061\u7740\u304d\u306e\u306a\u3044\u4eba\u306e\u305f\u3081\u306e point-undo \u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n```el\n(require 'ring)\n(require 'edmacro)\n\n(defvar-local jump-back!--marker-ring nil)\n\n(defun jump-back!--ring-update ()\n  (let ((marker (point-marker)))\n    (unless jump-back!--marker-ring\n      (setq jump-back!--marker-ring (make-ring 30)))\n    (ring-insert jump-back!--marker-ring marker)))\n\n(run-with-idle-timer 1 t 'jump-back!--ring-update)\n\n(defun jump-back! ()\n  (interactive)\n  (if (ring-empty-p jump-back!--marker-ring)\n      (error \"No further undo information\")\n    (let ((marker (ring-ref jump-back!--marker-ring 0))\n          (repeat-key (vector last-input-event)))\n      (ring-remove jump-back!--marker-ring 0)\n      (if (= (point-marker) marker)\n          (jump-back!)\n        (goto-char marker)\n        (message \"(Type %s to repeat)\" (edmacro-format-keys repeat-key))\n        (set-temporary-overlay-map\n         (let ((km (make-sparse-keymap)))\n           (define-key km repeat-key 'jump-back!)\n           km))))))\n```\n\n`jump-back!` \u304c\u809d\u5fc3\u306e\u30b3\u30de\u30f3\u30c9\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u3069\u3053\u304b\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3067\u3059\u3002\n\n```el\n(global-set-key (kbd \"M--\") 'jump-back!)\n```\n", "tags": ["Emacs", "emacs-lisp"]}