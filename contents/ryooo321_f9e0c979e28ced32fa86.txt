{"tags": ["Ruby", "Rails", "SublimeText", "sublime"], "context": "Happy Elements\u682a\u5f0f\u4f1a\u793e \u30ab\u30ab\u30ea\u30a2\u30b9\u30bf\u30b8\u30aa Advent Calendar 2016\u306e9\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u62c5\u5f53\u306f @ryooo \u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\u8981\u65e8\nSublime Text\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304b\u3089rails\u306e\u958b\u767a\u7528API\u3092\u53e9\u304f\u3053\u3068\u3067\u5feb\u9069\u306a\u958b\u767a\u74b0\u5883\u304c\u3067\u304d\u308b\u3002\n\n\u3069\u3046\u3044\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u304b\n\n\u25cb\u25cb\u306b\u5fdc\u3058\u305f\u00d7\u00d7\u3092\u8abf\u3079\u3089\u308c\u308b\n\nID1\u301c3\u306e\u30a2\u30a4\u30c6\u30e0\u540d\u3092\u8abf\u3079\u308b\n\n\n\u30b9\u30ad\u30ebID38, 39\u305d\u308c\u305e\u308c\u306e\u30e2\u30f3\u30b9\u30bf\u30fcID\u3092\u8abf\u3079\u3001\u305d\u306e\u5f8c\u30b9\u30ad\u30ebID38\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u540d\u3092\u8abf\u3079\u308b\n\n\n\u958b\u767a\u4e2d\u306bRuby\u306e\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3059\n\n\n\u8aac\u660e\n\nSublime\u5074\u306e\u30b3\u30fc\u30c9(Python)\n\n\u6982\u8981\n\nGetDictionaryCommand\n\u30de\u30eb\u30c1\u30ab\u30fc\u30bd\u30eb\u3067\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u884c\u306e\u672b\u5c3e\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u8f9e\u66f8\u3092\u3082\u3068\u306b\u5024\u3092\u8ffd\u8a18\u3059\u308b\u5b9f\u88c5\u3067\u3059\u3002\n\nExecRailsCommand\n\u30de\u30eb\u30c1\u30ab\u30fc\u30bd\u30eb\u3067\u9078\u629e\u3055\u308c\u3066\u3044\u308bruby\u30b3\u30fc\u30c9\u306e\u672b\u5c3e\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u5b9f\u884c\u7d50\u679c\u3092\u8ffd\u8a18\u3059\u308b\u5b9f\u88c5\u3067\u3059\u3002\n\n\u5b9f\u88c5\uff08\u7d39\u4ecb\u7528\u306e\u4f8b\uff09\nimport sublime\nimport sublime_plugin\nimport json\nimport urllib.request\nimport urllib.parse\n\n# \u8a2d\u5b9a\u4f8b(Setting User)\n# \"App.host\" : \"localhost\",\n\n# binding\u4f8b\n# { \"keys\": [\"ctrl+m\"], \"command\": \"get_dictionary\" },\n# { \"keys\": [\"ctrl+e\"], \"command\": \"exec_rails\" },\n\nclass GetDictionaryCommand(sublime_plugin.TextCommand):\n    def run(self, edit):\n        self.view.window().show_input_panel('Dictionary Type', '', lambda s: self.view.window().run_command(\"get_dictionary_and_replace\",{\"arg\":s}), None, None)\n\nclass GetDictionaryAndReplace(sublime_plugin.TextCommand):\n    def run(self, edit, arg):\n        # \u63a5\u7d9a\u5148\u30b5\u30fc\u30d0\u30fc\u3092\u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u306b\u51fa\u529b\n        settings = sublime.load_settings('Preferences.sublime-settings')\n        host = settings.get('App.host')\n        if not host:\n            host = \"localhost\"\n        sublime.status_message(\"host is \" + host + \".\")\n\n        with urllib.request.urlopen(\"https://\" + host + \"/\u8f9e\u66f8\u30c7\u30fc\u30bf\u3092return\u3059\u308bAPI/?type=\" + urllib.parse.quote(arg)) as res:\n            body = res.read().decode(\"utf-8\")\n            jsonData = json.loads(body)\n            for selection in self.view.sel():\n                if self.view.substr(selection) in jsonData:\n                    row = self.view.line(selection)\n                    self.view.replace(edit, row, self.view.substr(row) + \" # \" + jsonData[self.view.substr(selection)])\n            self.view.sel().clear()\n\nclass ExecRailsCommand(sublime_plugin.TextCommand):\n    def run(self, edit):\n        host = \"localhost\"\n        sublime.status_message(\"host is \" + host + \".\")\n        for selection in self.view.sel():\n            code = self.view.substr(selection)\n            try:\n                with urllib.request.urlopen(\"https://\" + host + \"/\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059API/?q=\" + urllib.parse.quote(code)) as res:\n                    body = res.read().decode(\"utf-8\")\n                    row = self.view.line(selection)\n                    self.view.replace(edit, row, self.view.substr(row) + \" # \" + body)\n            except urllib.error.HTTPError as e:\n                row = self.view.line(selection)\n                self.view.replace(edit, row, self.view.substr(row) + \" # err \" + e.reason)\n        self.view.sel().clear()\n\n\nRails\u5074\u306e\u30b3\u30fc\u30c9\n\n\u6982\u8981\ntype\u306b\u5fdc\u3058\u305f\u8f9e\u66f8json\u3092\u8fd4\u3059API\u3067\u3059\u3002\n\u30ea\u30bf\u30fc\u30f3\u3057\u305f\u8f9e\u66f8\u3092\u5143\u306b\u3001Sublime\u5074\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u8a18\u3059\u308b\u306e\u3067\u3001\u3053\u306eAPI\u306e\u5b9f\u88c5\u6b21\u7b2c\u3067\u3084\u308a\u305f\u3044\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30e0\u3067\u304d\u307e\u3059\u3002\n\n\u5b9f\u88c5\uff08\u7d39\u4ecb\u7528\u306e\u4f8b\uff09\nclass XXXController < ActionController::Base\n  def dictionary\n    ret = case params[:type]\n    when 'item'\n      # \u30a2\u30a4\u30c6\u30e0ID => \u30a2\u30a4\u30c6\u30e0\u540d\n      Hash[*::Item.all_with_cache.map{|r|[\n        r.id,\n        r.name,\n      ]}.flatten]\n    when 'monster'\n      # \u30e2\u30f3\u30b9\u30bf\u30fcID => \u30e2\u30f3\u30b9\u30bf\u30fc\u540d\n      Hash[*::Monster.all_with_cache.map{|r|[\n        r.id,\n        r.name,\n      ]}.flatten]\n    when 'monster skill_id'\n      # \u30e2\u30f3\u30b9\u30bf\u30fc\u30b9\u30ad\u30ebID => \u30e2\u30f3\u30b9\u30bf\u30fcID(\u30ab\u30f3\u30de\u533a\u5207\u308a)\n      val = Hash.new {|h, k| h[k] = []}\n      ::Monster.all_with_cache.each do |m|\n        val[m.skill_id] << m.id\n      end\n      Hash[*val.map{|k, v|[k, \"#{v.join(',')}\"]}.flatten]\n    else\n      raise 'unknown type'\n    end\n\n    return render :json => ret\n  end\nend\n\n\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059API\n\u5b9f\u88c5\u306f\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u53d7\u3051\u53d6\u3063\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092return\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306a\u306e\u3067\u3001\u8a8d\u8a3c\u3055\u308c\u305f\u74b0\u5883\u3084\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u74b0\u5883\u3067\u3057\u304b\u7d76\u5bfe\u306b\u53d7\u3051\u4ed8\u3051\u306a\u3044\u3053\u3068\u3001\u307e\u305f\u5fc5\u305a\u691c\u8a3c\u3092\u884c\u3046\u3053\u3068\u304c\u524d\u63d0\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u304a\u307e\u3051\n\ngif\u306e\u4e2d\u3067\u4f7f\u3063\u3066\u3044\u308b\u9023\u756a\u5165\u529b\u3092\u7c21\u5358\u306b\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u7d39\u4ecb\n\u203b \u6614\u3053\u3053\u3067\u6295\u7a3f\u3057\u305f\u3082\u306e\u306e\u7c21\u6613\u7248\u3067\u3059\u3002\n\n\u6982\u8981\n\u30de\u30eb\u30c1\u30ab\u30fc\u30bd\u30eb\u306e\u5148\u982d\u306e\u6570\u5b57\u3092\u521d\u671f\u5024\u3068\u3057\u3066\u3001\u9023\u756a\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u3059\u3002\n\n\n\u5b9f\u88c5\uff08\u7d39\u4ecb\u7528\u306e\u4f8b\uff09\n# binding\u4f8b\n# { \"keys\": [\"ctrl+n\"], \"command\": \"increment_numbers\" },\n\nclass IncrementNumbersCommand(sublime_plugin.TextCommand):\n    def run(self, edit):\n        start_value = int(self.view.substr(self.view.sel()[0]))\n        counter = 0\n        for selection in self.view.sel():\n            self.view.insert(edit, selection.begin(), str(start_value + counter))\n            counter = counter + 1\n        for selection in self.view.sel():\n            self.view.erase(edit, selection)\n\n\n\u6700\u5f8c\u306b\nHappy Elements\u682a\u5f0f\u4f1a\u793e \u30ab\u30ab\u30ea\u30a2\u30b9\u30bf\u30b8\u30aa\u3067\u306f\u3001\u4e00\u7dd2\u306b\u3082\u306e\u3065\u304f\u308a\u3092\u3059\u308b\u4ef2\u9593\u3092\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\uff01\n\u3082\u306e\u3065\u304f\u308a\u304c\u5927\u597d\u304d\u306a\u65b9\u306f\u662f\u975e\u304a\u6c17\u8efd\u306b\u3054\u5fdc\u52df\u4e0b\u3055\u3044\u3002\n\u30ab\u30ab\u30ea\u30a2\u30b9\u30bf\u30b8\u30aa \u63a1\u7528\u60c5\u5831\n\n\u3072\u3068\u308a\u3072\u3068\u308a\u306e\u30c1\u30ab\u30e9\u3092\u6700\u5927\u9650\u306b\u5f15\u304d\u51fa\u305b\u308b\u3053\u306e\u3046\u3048\u306a\u3044\u74b0\u5883\u3068\u4f53\u5236\u3001\u6587\u5316\u304c\u3042\u308c\u3070\u3053\u305d\u3001\u6700\u9ad8\u306e\u3082\u306e\u3065\u304f\u308a\u3092\u3064\u306a\u304c\u308b\u3068\u79c1\u305f\u3061\u306f\u4fe1\u3058\u3066\u3044\u307e\u3059\u3002\u30ab\u30ab\u30ea\u30a2\u30b9\u30bf\u30b8\u30aa\u306e\u30e1\u30f3\u30d0\u30fc\u3068\u3057\u3066\u3001\u79c1\u305f\u3061\u3068\u4e00\u7dd2\u306b\u50cd\u304d\u305f\u3044\u3068\u601d\u3046\u4ef2\u9593\u3092\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\u3002\n\nHappy Elements\u682a\u5f0f\u4f1a\u793e \u30ab\u30ab\u30ea\u30a2\u30b9\u30bf\u30b8\u30aa Advent Calendar 2016\u306e9\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u62c5\u5f53\u306f [@ryooo](https://github.com/ryooo) \u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n# \u8981\u65e8\nSublime Text\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304b\u3089rails\u306e\u958b\u767a\u7528API\u3092\u53e9\u304f\u3053\u3068\u3067\u5feb\u9069\u306a\u958b\u767a\u74b0\u5883\u304c\u3067\u304d\u308b\u3002\n\n# \u3069\u3046\u3044\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u304b\n## \u25cb\u25cb\u306b\u5fdc\u3058\u305f\u00d7\u00d7\u3092\u8abf\u3079\u3089\u308c\u308b\n### ID1\u301c3\u306e\u30a2\u30a4\u30c6\u30e0\u540d\u3092\u8abf\u3079\u308b\n![g1.gif](https://qiita-image-store.s3.amazonaws.com/0/7847/0ddacc79-07e9-9492-38d4-309014dbfa93.gif)\n\n### \u30b9\u30ad\u30ebID38, 39\u305d\u308c\u305e\u308c\u306e\u30e2\u30f3\u30b9\u30bf\u30fcID\u3092\u8abf\u3079\u3001\u305d\u306e\u5f8c\u30b9\u30ad\u30ebID38\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u540d\u3092\u8abf\u3079\u308b\n![g2.gif](https://qiita-image-store.s3.amazonaws.com/0/7847/2fccbbe2-4853-2045-6768-da97fa136451.gif)\n\n\n## \u958b\u767a\u4e2d\u306bRuby\u306e\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3059\n![g3_2.gif](https://qiita-image-store.s3.amazonaws.com/0/7847/b684e343-db98-2174-c561-784ff679022c.gif)\n\n\n# \u8aac\u660e\n## Sublime\u5074\u306e\u30b3\u30fc\u30c9(Python)\n### \u6982\u8981\n#### GetDictionaryCommand\n\u30de\u30eb\u30c1\u30ab\u30fc\u30bd\u30eb\u3067\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u884c\u306e\u672b\u5c3e\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u8f9e\u66f8\u3092\u3082\u3068\u306b\u5024\u3092\u8ffd\u8a18\u3059\u308b\u5b9f\u88c5\u3067\u3059\u3002\n\n#### ExecRailsCommand\n\u30de\u30eb\u30c1\u30ab\u30fc\u30bd\u30eb\u3067\u9078\u629e\u3055\u308c\u3066\u3044\u308bruby\u30b3\u30fc\u30c9\u306e\u672b\u5c3e\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u5b9f\u884c\u7d50\u679c\u3092\u8ffd\u8a18\u3059\u308b\u5b9f\u88c5\u3067\u3059\u3002\n### \u5b9f\u88c5\uff08\u7d39\u4ecb\u7528\u306e\u4f8b\uff09\n```py\nimport sublime\nimport sublime_plugin\nimport json\nimport urllib.request\nimport urllib.parse\n\n# \u8a2d\u5b9a\u4f8b(Setting User)\n# \"App.host\" : \"localhost\",\n\n# binding\u4f8b\n# { \"keys\": [\"ctrl+m\"], \"command\": \"get_dictionary\" },\n# { \"keys\": [\"ctrl+e\"], \"command\": \"exec_rails\" },\n\nclass GetDictionaryCommand(sublime_plugin.TextCommand):\n    def run(self, edit):\n        self.view.window().show_input_panel('Dictionary Type', '', lambda s: self.view.window().run_command(\"get_dictionary_and_replace\",{\"arg\":s}), None, None)\n\nclass GetDictionaryAndReplace(sublime_plugin.TextCommand):\n    def run(self, edit, arg):\n        # \u63a5\u7d9a\u5148\u30b5\u30fc\u30d0\u30fc\u3092\u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u306b\u51fa\u529b\n        settings = sublime.load_settings('Preferences.sublime-settings')\n        host = settings.get('App.host')\n        if not host:\n            host = \"localhost\"\n        sublime.status_message(\"host is \" + host + \".\")\n        \n        with urllib.request.urlopen(\"https://\" + host + \"/\u8f9e\u66f8\u30c7\u30fc\u30bf\u3092return\u3059\u308bAPI/?type=\" + urllib.parse.quote(arg)) as res:\n            body = res.read().decode(\"utf-8\")\n            jsonData = json.loads(body)\n            for selection in self.view.sel():\n                if self.view.substr(selection) in jsonData:\n                    row = self.view.line(selection)\n                    self.view.replace(edit, row, self.view.substr(row) + \" # \" + jsonData[self.view.substr(selection)])\n            self.view.sel().clear()\n\nclass ExecRailsCommand(sublime_plugin.TextCommand):\n    def run(self, edit):\n        host = \"localhost\"\n        sublime.status_message(\"host is \" + host + \".\")\n        for selection in self.view.sel():\n            code = self.view.substr(selection)\n            try:\n                with urllib.request.urlopen(\"https://\" + host + \"/\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059API/?q=\" + urllib.parse.quote(code)) as res:\n                    body = res.read().decode(\"utf-8\")\n                    row = self.view.line(selection)\n                    self.view.replace(edit, row, self.view.substr(row) + \" # \" + body)\n            except urllib.error.HTTPError as e:\n                row = self.view.line(selection)\n                self.view.replace(edit, row, self.view.substr(row) + \" # err \" + e.reason)\n        self.view.sel().clear()\n```\n\n\n## Rails\u5074\u306e\u30b3\u30fc\u30c9\n### \u6982\u8981\ntype\u306b\u5fdc\u3058\u305f\u8f9e\u66f8json\u3092\u8fd4\u3059API\u3067\u3059\u3002\n\u30ea\u30bf\u30fc\u30f3\u3057\u305f\u8f9e\u66f8\u3092\u5143\u306b\u3001Sublime\u5074\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u8a18\u3059\u308b\u306e\u3067\u3001\u3053\u306eAPI\u306e\u5b9f\u88c5\u6b21\u7b2c\u3067\u3084\u308a\u305f\u3044\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30e0\u3067\u304d\u307e\u3059\u3002\n\n### \u5b9f\u88c5\uff08\u7d39\u4ecb\u7528\u306e\u4f8b\uff09\n```rb\nclass XXXController < ActionController::Base\n  def dictionary\n    ret = case params[:type]\n    when 'item'\n      # \u30a2\u30a4\u30c6\u30e0ID => \u30a2\u30a4\u30c6\u30e0\u540d\n      Hash[*::Item.all_with_cache.map{|r|[\n        r.id,\n        r.name,\n      ]}.flatten]\n    when 'monster'\n      # \u30e2\u30f3\u30b9\u30bf\u30fcID => \u30e2\u30f3\u30b9\u30bf\u30fc\u540d\n      Hash[*::Monster.all_with_cache.map{|r|[\n        r.id,\n        r.name,\n      ]}.flatten]\n    when 'monster skill_id'\n      # \u30e2\u30f3\u30b9\u30bf\u30fc\u30b9\u30ad\u30ebID => \u30e2\u30f3\u30b9\u30bf\u30fcID(\u30ab\u30f3\u30de\u533a\u5207\u308a)\n      val = Hash.new {|h, k| h[k] = []}\n      ::Monster.all_with_cache.each do |m|\n        val[m.skill_id] << m.id\n      end\n      Hash[*val.map{|k, v|[k, \"#{v.join(',')}\"]}.flatten]\n    else\n      raise 'unknown type'\n    end\n    \n    return render :json => ret\n  end\nend\n```\n\n### \u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059API\n\u5b9f\u88c5\u306f\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u53d7\u3051\u53d6\u3063\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092return\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306a\u306e\u3067\u3001**\u8a8d\u8a3c\u3055\u308c\u305f\u74b0\u5883\u3084\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u74b0\u5883\u3067\u3057\u304b\u7d76\u5bfe\u306b\u53d7\u3051\u4ed8\u3051\u306a\u3044\u3053\u3068\u3001\u307e\u305f\u5fc5\u305a\u691c\u8a3c\u3092\u884c\u3046\u3053\u3068\u304c\u524d\u63d0**\u3068\u306a\u308a\u307e\u3059\u3002\n\n# \u304a\u307e\u3051\n## gif\u306e\u4e2d\u3067\u4f7f\u3063\u3066\u3044\u308b\u9023\u756a\u5165\u529b\u3092\u7c21\u5358\u306b\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u7d39\u4ecb\n\u203b \u6614[\u3053\u3053](http://qiita.com/ryooo321/items/734a81a411d2f2eea6b3)\u3067\u6295\u7a3f\u3057\u305f\u3082\u306e\u306e\u7c21\u6613\u7248\u3067\u3059\u3002\n### \u6982\u8981\n\u30de\u30eb\u30c1\u30ab\u30fc\u30bd\u30eb\u306e\u5148\u982d\u306e\u6570\u5b57\u3092\u521d\u671f\u5024\u3068\u3057\u3066\u3001\u9023\u756a\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u3059\u3002\n![ni.gif](https://qiita-image-store.s3.amazonaws.com/0/7847/789e1f59-4244-d7d1-7f6e-8d4e873ca1df.gif)\n### \u5b9f\u88c5\uff08\u7d39\u4ecb\u7528\u306e\u4f8b\uff09\n```py\n# binding\u4f8b\n# { \"keys\": [\"ctrl+n\"], \"command\": \"increment_numbers\" },\n\nclass IncrementNumbersCommand(sublime_plugin.TextCommand):\n    def run(self, edit):\n        start_value = int(self.view.substr(self.view.sel()[0]))\n        counter = 0\n        for selection in self.view.sel():\n            self.view.insert(edit, selection.begin(), str(start_value + counter))\n            counter = counter + 1\n        for selection in self.view.sel():\n            self.view.erase(edit, selection)\n```\n\n# \u6700\u5f8c\u306b\n**Happy Elements\u682a\u5f0f\u4f1a\u793e \u30ab\u30ab\u30ea\u30a2\u30b9\u30bf\u30b8\u30aa\u3067\u306f\u3001\u4e00\u7dd2\u306b\u3082\u306e\u3065\u304f\u308a\u3092\u3059\u308b\u4ef2\u9593\u3092\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\uff01**\n\n\u3082\u306e\u3065\u304f\u308a\u304c\u5927\u597d\u304d\u306a\u65b9\u306f\u662f\u975e\u304a\u6c17\u8efd\u306b\u3054\u5fdc\u52df\u4e0b\u3055\u3044\u3002\n\n[\u30ab\u30ab\u30ea\u30a2\u30b9\u30bf\u30b8\u30aa \u63a1\u7528\u60c5\u5831](http://cacalia.jp/recruit/)\n> \u3072\u3068\u308a\u3072\u3068\u308a\u306e\u30c1\u30ab\u30e9\u3092\u6700\u5927\u9650\u306b\u5f15\u304d\u51fa\u305b\u308b\u3053\u306e\u3046\u3048\u306a\u3044\u74b0\u5883\u3068\u4f53\u5236\u3001\u6587\u5316\u304c\u3042\u308c\u3070\u3053\u305d\u3001\u6700\u9ad8\u306e\u3082\u306e\u3065\u304f\u308a\u3092\u3064\u306a\u304c\u308b\u3068\u79c1\u305f\u3061\u306f\u4fe1\u3058\u3066\u3044\u307e\u3059\u3002\u30ab\u30ab\u30ea\u30a2\u30b9\u30bf\u30b8\u30aa\u306e\u30e1\u30f3\u30d0\u30fc\u3068\u3057\u3066\u3001\u79c1\u305f\u3061\u3068\u4e00\u7dd2\u306b\u50cd\u304d\u305f\u3044\u3068\u601d\u3046\u4ef2\u9593\u3092\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n"}