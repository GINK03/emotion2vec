{"context": " More than 1 year has passed since last update.\n\nCoffeeScript\u306b\u304a\u3051\u308b\u6b63\u898f\u8868\u73fe\n\nBlock Regular Expression\nRuby\u3067\u306f\u6587\u5b57\u5217\u3068\u540c\u3058\u304f\uff0c\u6b63\u898f\u8868\u73fe\u30ea\u30c6\u30e9\u30eb\u5185\u3067\u3082\u5909\u6570\u5c55\u958b\u304c\u53ef\u80fd\u3067\u3042\u308b\uff0e\n`/#{hoge}Script/`\n\n\u3067\u306fRuby\u3068\u540c\u69d8\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u306e\u5909\u6570\u5c55\u958b\u3092\u5229\u7528\u3067\u304d\u308bCoffeeScript\u3060\u3068\u3069\u3046\u304b\uff1f\n# \u3053\u308c\u306f\u6b7b\n# /#{hoge}Script/\n\n# \u3053\u308c\u306a\u3089OK\n///#{hoge}Script///\n\n\u3053\u306e3\u91cd\u30b9\u30e9\u30c3\u30b7\u30e5\u306fBlock Regular Expressions\u3068\u3044\u3046\u540d\u524d\u3089\u3057\u3044\uff0e\n\nextended regular expressions that ignore internal whitespace and can contain comments and interpolation\nBlock Regular Expressions - CoffeeScript\n\n///#{hoge}Script/// # =>`RegExp(hoge + \"Script\");` \u306b\u5909\u63db\u3055\u308c\u308b\n\nPerl\u306ex\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u3088\u3046\u306b\u6539\u884c\u3068\u304b\u7a7a\u767d\uff0c\u30b3\u30e1\u30f3\u30c8\u3082\u81ea\u7531\u306b\u5165\u308c\u3089\u308c\u308b\uff08\u7a7a\u767d\u3092\u7121\u8996\u3057\u3066\u307b\u3057\u304f\u306a\u3044\u6642\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b: \\\uff09\uff0e\n\nModeled after Perl's /x modifier\n\n# \u5909\u63db\u524d\nOPERATOR = /// ^ (\n  ?: [-=]>             # function\n   | [-+*/%<>&|^!?=]=  # compound assign / compare\n   | >>>=?             # zero-fill right shift\n   | ([-+:])\\1         # doubles\n   | ([&|<>])\\2=?      # logic / shift\n   | \\?\\.              # soak access\n   | \\.{2,3}           # range or splat\n) ///\n\n# \u5909\u63db\u5f8c\n# var OPERATOR;\n# \n# OPERATOR = /^(?:[-=]>|[-+*\\/%<>&|^!?=]=|>>>=?|([-+:])\\1|([&|<>])\\2=?|\\?\\.|\\.{2,3})/;\n\n\u4fbf\u5229\uff0e\ntext = 'Java'\nmsg = 'JavaScriptTypeScriptCoffeeScriptTypeScriptJavaScriptCoffeeScript'\n\npattern = ///#{text}Script///g\nmsg.replace(pattern, 'TypeScript')\n# => TypeScriptTypeScriptCoffeeScriptTypeScriptTypeScriptCoffeeScript\n\nTypeScript\u6700\u9ad8(\u2579\u25e1\u2579)\n\nRef\n\nBlock Regular Expressions - CoffeeScript\n\n# CoffeeScript\u306b\u304a\u3051\u308b\u6b63\u898f\u8868\u73fe\n## Block Regular Expression\nRuby\u3067\u306f\u6587\u5b57\u5217\u3068\u540c\u3058\u304f\uff0c\u6b63\u898f\u8868\u73fe\u30ea\u30c6\u30e9\u30eb\u5185\u3067\u3082\u5909\u6570\u5c55\u958b\u304c\u53ef\u80fd\u3067\u3042\u308b\uff0e\n\n```ruby\n`/#{hoge}Script/`\n```\n\n\u3067\u306fRuby\u3068\u540c\u69d8\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u306e\u5909\u6570\u5c55\u958b\u3092\u5229\u7528\u3067\u304d\u308bCoffeeScript\u3060\u3068\u3069\u3046\u304b\uff1f\n\n```coffeescript\n# \u3053\u308c\u306f\u6b7b\n# /#{hoge}Script/\n\n# \u3053\u308c\u306a\u3089OK\n///#{hoge}Script///\n```\n\n\u3053\u306e3\u91cd\u30b9\u30e9\u30c3\u30b7\u30e5\u306f[**Block Regular Expressions**](http://coffeescript.org/#regexes)\u3068\u3044\u3046\u540d\u524d\u3089\u3057\u3044\uff0e\n\n> extended regular expressions that ignore internal whitespace and can contain comments and interpolation\n>\n> <cite>[Block Regular Expressions - CoffeeScript](http://coffeescript.org/#regexes)</cite>\n\n```coffeescript\n///#{hoge}Script/// # =>`RegExp(hoge + \"Script\");` \u306b\u5909\u63db\u3055\u308c\u308b\n```\n\nPerl\u306ex\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u3088\u3046\u306b\u6539\u884c\u3068\u304b\u7a7a\u767d\uff0c\u30b3\u30e1\u30f3\u30c8\u3082\u81ea\u7531\u306b\u5165\u308c\u3089\u308c\u308b\uff08\u7a7a\u767d\u3092\u7121\u8996\u3057\u3066\u307b\u3057\u304f\u306a\u3044\u6642\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b: `\\ `\uff09\uff0e\n\n> Modeled after Perl's /x modifier\n\n```coffeescript\n# \u5909\u63db\u524d\nOPERATOR = /// ^ (\n  ?: [-=]>             # function\n   | [-+*/%<>&|^!?=]=  # compound assign / compare\n   | >>>=?             # zero-fill right shift\n   | ([-+:])\\1         # doubles\n   | ([&|<>])\\2=?      # logic / shift\n   | \\?\\.              # soak access\n   | \\.{2,3}           # range or splat\n) ///\n\n# \u5909\u63db\u5f8c\n# var OPERATOR;\n# \n# OPERATOR = /^(?:[-=]>|[-+*\\/%<>&|^!?=]=|>>>=?|([-+:])\\1|([&|<>])\\2=?|\\?\\.|\\.{2,3})/;\n```\n\n\n\u4fbf\u5229\uff0e\n\n```coffeescript\ntext = 'Java'\nmsg = 'JavaScriptTypeScriptCoffeeScriptTypeScriptJavaScriptCoffeeScript'\n\npattern = ///#{text}Script///g\nmsg.replace(pattern, 'TypeScript')\n# => TypeScriptTypeScriptCoffeeScriptTypeScriptTypeScriptCoffeeScript\n```\n\nTypeScript\u6700\u9ad8(\u2579\u25e1\u2579)\n\n# Ref\n\n* [Block Regular Expressions - CoffeeScript](http://coffeescript.org/#regexes)\n", "tags": ["CoffeeScript", "regexp", "\u6b63\u898f\u8868\u73fe"]}