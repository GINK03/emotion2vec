{"context": " More than 1 year has passed since last update.\u30c9\u30fc\u30e2\u3001\u5f15\u304d\u7d9a\u304d\u3001\u3053\u306e\u8a18\u4e8b\u3082Viibar\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u3068\u3042\u308b1\u65e5\u306e\u8a18\u4e8b\u3067\u3054\u3056\u3044\u307e\u3059\u3002\n\u3053\u3053\u6570\u65e5\u306f\u5c11\u3057\u3060\u3051\u30c7\u30fc\u30bf\u5206\u6790\u696d\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u307f\u3093\u306a\u3060\u3044\u3059\u304dJupyter\u304b\u3089MySQL\u306b\u3064\u306a\u3044\u3067\u307f\u307e\u3059\u3002\n\n\u524d\u63d0\n\nMysql\u30b5\u30fc\u30d0\u30fc\u304c\u30ed\u30fc\u30ab\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u3066\u8d77\u52d5\u6e08\u307f\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066datacharmer/test_db\u3092\u4f7f\u7528\n\n\nJupyter\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nminiconda3\u304c\u3088\u3044\u3068\u306e\u3053\u3068\u3060\u3063\u305f\u306e\u3067\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001Pythonz\u306f\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u9055\u3044\u306f\u542b\u3081\u305f\u304f\u306a\u3044\u3068\u3044\u3046\u30dd\u30ea\u30b7\u30fc\u3089\u3057\u304f(ana|mini)conda\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001pyenv\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u304c\u3001pyenv\u306f\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u96d1\u306b\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\nbrew install pyenv\neval \"$(pyenv init -)\"\npyenv install miniconda3-3.18.3\n\n.pyenv/versions\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n$ ls ~/.pyenv/versions\nminiconda3-3.18.3\n\nconda\u7cfb\u306fconda\u30b3\u30de\u30f3\u30c9\u3067virtualenv\u4f5c\u6210\u3001\u4f9d\u5b58\u6027\u7ba1\u7406\u307e\u3067\u3059\u308b\u3088\u3046\u3067\u3059\u3002\u306a\u306e\u3067\u3001conda\u4e0a\u3067\u306ejupyter\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306fpyenv-virtualenv\u306f\u3044\u3089\u306a\u3044\u3088\u3046\u3067\u3059\u3002\npyenv global miniconda3-3.18.3\npyenv rehash\nconda create -n test01 jupyter\n\n$ ls ~/.pyenv/versions/miniconda3-3.18.3/envs/\ntest01\n\nvenv\u304c\u3067\u304d\u307e\u3057\u305f\u3002\nsource ~/.pyenv/versions/miniconda3-3.18.3/envs/test01/bin/activate test01\njupyter notebook\n\nnotebook\u304c\u8d77\u52d5\u3059\u308c\u3070OK\u3067\u3059\u3002source activate test01\u3060\u3068pyenv\u3068\u3076\u3064\u304b\u308b\u306e\u3067\u30d5\u30eb\u30d1\u30b9\u3067\u3059\u3002conda\u3082pyenv\u3082\u4f7f\u308f\u306a\u3044\u3067\u3001\u666e\u901a\u306b\u624b\u52d5\u3067\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3082\u3088\u304b\u3063\u305f\u306a\u3002\n\n\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nMySQL\u30c9\u30e9\u30a4\u30d0\u306fpymysql\u3001\u5b9a\u756a\u306epandas, matplotlib\u3082\u5165\u308c\u307e\u3059\u3002\nconda install pymysql\nconda install pandas\nconda install matplotlib\npip install ipython-sql\n\ncatherinedevlin/ipython-sql\u3060\u3051\u306fconda\u306b\u7528\u610f\u3055\u308c\u3066\u306a\u3044\u306e\u3067pip\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u3059\u3002\n\nMySQL\u30b5\u30fc\u30d0\u30fc\u306bJupyter notbook\u304b\u3089\u63a5\u7d9a\n\n\u4ee5\u4e0b\u3001notebook\u304b\u3089\u5b9f\u884c\u3067\u3059\u3002\nimport pymysql\n\nconnection = pymysql.connect(host='localhost',\n                             user='root',\n                             password='',\n                             db='employees',\n                             charset='utf8mb4',\n                             cursorclass=pymysql.cursors.DictCursor)\n\nconnection.commit()\ncur = connection.cursor()\ncur.execute('select count(*) from employees')\n\n1\n\nrows = cur.fetchall()\n\nrows\n\n[{'count(*)': 300024}]\n\ncur.execute('select * from employees limit 100')\n\n100\n\nrows = cur.fetchall()\n\nrows\n\n[{'birth_date': datetime.date(1953, 9, 2),\n  'emp_no': 10001,\n  'first_name': 'Georgi',\n  'gender': 'M',\n  'hire_date': datetime.date(1986, 6, 26),\n  'last_name': 'Facello'},\n {'birth_date': datetime.date(1964, 6, 2),\n  'emp_no': 10002,\n  'first_name': 'Bezalel',\n  'gender': 'F',\n  'hire_date': datetime.date(1985, 11, 21),\n  'last_name': 'Simmel'},\n...\n {'birth_date': datetime.date(1956, 5, 25),\n  'emp_no': 10099,\n  'first_name': 'Valter',\n  'gender': 'F',\n  'hire_date': datetime.date(1988, 10, 18),\n  'last_name': 'Sullins'},\n {'birth_date': datetime.date(1953, 4, 21),\n  'emp_no': 10100,\n  'first_name': 'Hironobu',\n  'gender': 'F',\n  'hire_date': datetime.date(1987, 9, 21),\n  'last_name': 'Haraldson'}]\n\n\n%%sql\u3092\u5229\u7528\u3057\u3066\u306esql\u5b9f\u884c\n\u6b21\u306f\u3001%%sql\u3092\u5229\u7528\u3057\u3066MySQL\u306b\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3059\u3002\n%config SqlMagic.autopandas = True\n%config SqlMagic.feedback = False\n%load_ext sql\n\n/Users/shirakawahiroyuki/.pyenv/versions/miniconda3-3.18.3/envs/test01/lib/python3.5/site-packages/IPython/config.py:13: ShimWarning: The `IPython.config` package has been deprecated. You should import from traitlets.config instead.\n  \"You should import from traitlets.config instead.\", ShimWarning)\n/Users/shirakawahiroyuki/.pyenv/versions/miniconda3-3.18.3/envs/test01/lib/python3.5/site-packages/IPython/utils/traitlets.py:5: UserWarning: IPython.utils.traitlets has moved to a top-level traitlets package.\n  warn(\"IPython.utils.traitlets has moved to a top-level traitlets package.\")\n\n\u3053\u3053\u3067\u8b66\u544a\u3067\u308b\u306e\u3001import from traitlets directly instead of IPYthon by aebrahim \u00b7 Pull Request #46 \u00b7 catherinedevlin/ipython-sql\u3067\u3001PR\u4f5c\u3063\u3066\u304f\u308c\u3066\u307e\u3059\u304c\u3001\u30de\u30fc\u30b8\u3055\u308c\u3066\u307e\u305b\u3093\u3002\n%%sql mysql+pymysql://root@localhost/employees?charset=utf8mb4\n\nselect * from employees limit 100;\n\n\n\n\n\n\nemp_no\nbirth_date\nfirst_name\nlast_name\ngender\nhire_date\n\n\n\n\n0\n10001\n1953-09-02\nGeorgi\nFacello\nM\n1986-06-26\n\n\n1\n10002\n1964-06-02\nBezalel\nSimmel\nF\n1985-11-21\n\n\n2\n10003\n1959-12-03\nParto\nBamford\nM\n1986-08-28\n\n\n3\n10004\n1954-05-01\nChirstian\nKoblick\nM\n1986-12-01\n\n\n97\n10098\n1961-09-23\nSreekrishna\nServieres\nF\n1985-05-13\n\n\n98\n10099\n1956-05-25\nValter\nSullins\nF\n1988-10-18\n\n\n99\n10100\n1953-04-21\nHironobu\nHaraldson\nF\n1987-09-21\n\n\n\n100 rows \u00d7 6 columns\n\ndf = _\n\ndescribe\u306e\u610f\u5473\u304c\u7121\u3044\u30c7\u30fc\u30bf\u3067\u3059\u304c\u3068\u308a\u3042\u3048\u305a\u3002\ndf.describe()\n\n\n\n\n\n\nemp_no\n\n\n\n\ncount\n100.000000\n\n\nmean\n10050.500000\n\n\nstd\n29.011492\n\n\nmin\n10001.000000\n\n\n25%\n10025.750000\n\n\n50%\n10050.500000\n\n\n75%\n10075.250000\n\n\nmax\n10100.000000\n\n\n\n\n2\u56de\u3081\u304b\u3089\u306f\u63a5\u7d9a\u306e\u60c5\u5831\u306f\u4e0d\u8981\u3067\u3059\u3002\n%%sql\n\nselect * from employees limit 1;\n\n\n\n\n\n\nemp_no\nbirth_date\nfirst_name\nlast_name\ngender\nhire_date\n\n\n\n\n0\n10001\n1953-09-02\nGeorgi\nFacello\nM\n1986-06-26\n\n\n\n\n\u3064\u3044\u3067\u306b\u3088\u304f\u3042\u308bpandas\u3068matplotlib\u306e\u30b5\u30f3\u30d7\u30eb\u3082\u51fa\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n%matplotlib inline\n\nimport os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nts = pd.Series(np.random.randn(1000), index=pd.date_range('1/1/2000', periods=1000))\n\nts = ts.cumsum()\n\nts.plot()\n\n<matplotlib.axes._subplots.AxesSubplot at 0x10a6fac18>\n\n\n\u307e\u3068\u3081\nSQL\u306e\u5b9f\u884c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3001\u6614\u306fCSE\u3068\u304bNavicat for MySQL | MySQL\u306b\u5bfe\u5fdc\u3057\u305fDB\u7ba1\u7406\u30fb\u958b\u767a\u30c4\u30fc\u30eb\u3068\u304b\u4f7f\u3063\u3066\u305f\u3093\u3067\u3059\u304c\u3001Mac\u306b\u3057\u3066\u304b\u3089\u3042\u307e\u308a\u3044\u3044\u611f\u3058\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u5de1\u308a\u3042\u3063\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u81ea\u5206\u306e\u7528\u9014\u3067\u306f\u3001\u7ba1\u7406\u6a5f\u80fd\u3068\u304b\u306f\u305d\u3093\u306a\u5fc5\u8981\u3068\u3057\u3066\u306a\u304f\u3066\u3001\n\nSQL\u6587\u3068\u305d\u306e\u5b9f\u884c\u7d50\u679c\u306e\u4fdd\u5b58\nSQL\u6587\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\n\u304f\u3089\u3044\u304c\u3067\u304d\u308c\u3070\u3088\u3055\u3052\u3060\u3063\u305f\u306e\u3067\u3001Jupyter notebook\u304c\u307e\u3042\u307e\u3042\u3061\u3087\u3046\u3069\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nSQL\u6587\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u3064\u3044\u3066\u306f\u3001andialbrecht/sqlparse\u4f7f\u3048\u3070\u3001SQL\u6587\u3092\u304d\u308c\u3044\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u305d\u308c\u3067\u3002\n\u3044\u308d\u3044\u308dPython\u3067\u3084\u308b\u3068\u5e78\u305b\u306b\u306a\u308c\u305d\u3046\u3067\u3059\u3002\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u30c9\u30fc\u30e2\u3001\u5f15\u304d\u7d9a\u304d\u3001\u3053\u306e\u8a18\u4e8b\u3082Viibar\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u3068\u3042\u308b1\u65e5\u306e\u8a18\u4e8b\u3067\u3054\u3056\u3044\u307e\u3059\u3002\n\n\u3053\u3053\u6570\u65e5\u306f\u5c11\u3057\u3060\u3051\u30c7\u30fc\u30bf\u5206\u6790\u696d\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u307f\u3093\u306a\u3060\u3044\u3059\u304dJupyter\u304b\u3089MySQL\u306b\u3064\u306a\u3044\u3067\u307f\u307e\u3059\u3002\n\n## \u524d\u63d0\n\n- Mysql\u30b5\u30fc\u30d0\u30fc\u304c\u30ed\u30fc\u30ab\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u3066\u8d77\u52d5\u6e08\u307f\n- \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066[datacharmer/test_db](https://github.com/datacharmer/test_db)\u3092\u4f7f\u7528\n\n\n## Jupyter\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nminiconda3\u304c\u3088\u3044\u3068\u306e\u3053\u3068\u3060\u3063\u305f\u306e\u3067\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001Pythonz\u306f\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u9055\u3044\u306f\u542b\u3081\u305f\u304f\u306a\u3044\u3068\u3044\u3046\u30dd\u30ea\u30b7\u30fc\u3089\u3057\u304f(ana|mini)conda\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001pyenv\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u304c\u3001pyenv\u306f\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u96d1\u306b\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n```\nbrew install pyenv\neval \"$(pyenv init -)\"\npyenv install miniconda3-3.18.3\n```\n\n`.pyenv/versions`\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\n```\n$ ls ~/.pyenv/versions\nminiconda3-3.18.3\n```\n\nconda\u7cfb\u306fconda\u30b3\u30de\u30f3\u30c9\u3067virtualenv\u4f5c\u6210\u3001\u4f9d\u5b58\u6027\u7ba1\u7406\u307e\u3067\u3059\u308b\u3088\u3046\u3067\u3059\u3002\u306a\u306e\u3067\u3001conda\u4e0a\u3067\u306ejupyter\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f`pyenv-virtualenv`\u306f\u3044\u3089\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n```\npyenv global miniconda3-3.18.3\npyenv rehash\nconda create -n test01 jupyter\n```\n\n```\n$ ls ~/.pyenv/versions/miniconda3-3.18.3/envs/\ntest01\n```\n\nvenv\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n```\nsource ~/.pyenv/versions/miniconda3-3.18.3/envs/test01/bin/activate test01\njupyter notebook\n```\n\nnotebook\u304c\u8d77\u52d5\u3059\u308c\u3070OK\u3067\u3059\u3002`source activate test01`\u3060\u3068`pyenv`\u3068\u3076\u3064\u304b\u308b\u306e\u3067\u30d5\u30eb\u30d1\u30b9\u3067\u3059\u3002conda\u3082pyenv\u3082\u4f7f\u308f\u306a\u3044\u3067\u3001\u666e\u901a\u306b\u624b\u52d5\u3067\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3082\u3088\u304b\u3063\u305f\u306a\u3002\n\n## \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nMySQL\u30c9\u30e9\u30a4\u30d0\u306f`pymysql`\u3001\u5b9a\u756a\u306e`pandas`, `matplotlib`\u3082\u5165\u308c\u307e\u3059\u3002\n\n```\nconda install pymysql\nconda install pandas\nconda install matplotlib\npip install ipython-sql\n```\n\n[catherinedevlin/ipython-sql](https://github.com/catherinedevlin/ipython-sql)\u3060\u3051\u306fconda\u306b\u7528\u610f\u3055\u308c\u3066\u306a\u3044\u306e\u3067pip\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u3059\u3002\n\n## MySQL\u30b5\u30fc\u30d0\u30fc\u306bJupyter notbook\u304b\u3089\u63a5\u7d9a\n\n![jupyter4.gif](https://qiita-image-store.s3.amazonaws.com/0/20698/350a99a1-dab0-a896-85df-0b5ae5e8b712.gif)\n\n\u4ee5\u4e0b\u3001notebook\u304b\u3089\u5b9f\u884c\u3067\u3059\u3002\n\n\n```python\nimport pymysql\n\nconnection = pymysql.connect(host='localhost',\n                             user='root',\n                             password='',\n                             db='employees',\n                             charset='utf8mb4',\n                             cursorclass=pymysql.cursors.DictCursor)\n```\n\n\n```python\nconnection.commit()\ncur = connection.cursor()\ncur.execute('select count(*) from employees')\n```\n\n\n\n\n    1\n\n\n\n\n```python\nrows = cur.fetchall()\n```\n\n\n```python\nrows\n```\n\n\n\n\n    [{'count(*)': 300024}]\n\n\n\n\n```python\ncur.execute('select * from employees limit 100')\n```\n\n\n\n\n    100\n\n\n\n\n```python\nrows = cur.fetchall()\n```\n\n\n```python\nrows\n```\n\n\n\n\n    [{'birth_date': datetime.date(1953, 9, 2),\n      'emp_no': 10001,\n      'first_name': 'Georgi',\n      'gender': 'M',\n      'hire_date': datetime.date(1986, 6, 26),\n      'last_name': 'Facello'},\n     {'birth_date': datetime.date(1964, 6, 2),\n      'emp_no': 10002,\n      'first_name': 'Bezalel',\n      'gender': 'F',\n      'hire_date': datetime.date(1985, 11, 21),\n      'last_name': 'Simmel'},\n    ...\n     {'birth_date': datetime.date(1956, 5, 25),\n      'emp_no': 10099,\n      'first_name': 'Valter',\n      'gender': 'F',\n      'hire_date': datetime.date(1988, 10, 18),\n      'last_name': 'Sullins'},\n     {'birth_date': datetime.date(1953, 4, 21),\n      'emp_no': 10100,\n      'first_name': 'Hironobu',\n      'gender': 'F',\n      'hire_date': datetime.date(1987, 9, 21),\n      'last_name': 'Haraldson'}]\n\n\n\n## `%%sql`\u3092\u5229\u7528\u3057\u3066\u306esql\u5b9f\u884c\n\n\u6b21\u306f\u3001`%%sql`\u3092\u5229\u7528\u3057\u3066MySQL\u306b\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3059\u3002\n\n```python\n%config SqlMagic.autopandas = True\n%config SqlMagic.feedback = False\n%load_ext sql\n```\n\n    /Users/shirakawahiroyuki/.pyenv/versions/miniconda3-3.18.3/envs/test01/lib/python3.5/site-packages/IPython/config.py:13: ShimWarning: The `IPython.config` package has been deprecated. You should import from traitlets.config instead.\n      \"You should import from traitlets.config instead.\", ShimWarning)\n    /Users/shirakawahiroyuki/.pyenv/versions/miniconda3-3.18.3/envs/test01/lib/python3.5/site-packages/IPython/utils/traitlets.py:5: UserWarning: IPython.utils.traitlets has moved to a top-level traitlets package.\n      warn(\"IPython.utils.traitlets has moved to a top-level traitlets package.\")\n\n\n\u3053\u3053\u3067\u8b66\u544a\u3067\u308b\u306e\u3001[import from traitlets directly instead of IPYthon by aebrahim \u00b7 Pull Request #46 \u00b7 catherinedevlin/ipython-sql](https://github.com/catherinedevlin/ipython-sql/pull/46)\u3067\u3001PR\u4f5c\u3063\u3066\u304f\u308c\u3066\u307e\u3059\u304c\u3001\u30de\u30fc\u30b8\u3055\u308c\u3066\u307e\u305b\u3093\u3002\n\n\n```python\n%%sql mysql+pymysql://root@localhost/employees?charset=utf8mb4\n\nselect * from employees limit 100;\n```\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>emp_no</th>\n      <th>birth_date</th>\n      <th>first_name</th>\n      <th>last_name</th>\n      <th>gender</th>\n      <th>hire_date</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10001</td>\n      <td>1953-09-02</td>\n      <td>Georgi</td>\n      <td>Facello</td>\n      <td>M</td>\n      <td>1986-06-26</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10002</td>\n      <td>1964-06-02</td>\n      <td>Bezalel</td>\n      <td>Simmel</td>\n      <td>F</td>\n      <td>1985-11-21</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10003</td>\n      <td>1959-12-03</td>\n      <td>Parto</td>\n      <td>Bamford</td>\n      <td>M</td>\n      <td>1986-08-28</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10004</td>\n      <td>1954-05-01</td>\n      <td>Chirstian</td>\n      <td>Koblick</td>\n      <td>M</td>\n      <td>1986-12-01</td>\n    </tr>\n\n    <tr>\n      <th>97</th>\n      <td>10098</td>\n      <td>1961-09-23</td>\n      <td>Sreekrishna</td>\n      <td>Servieres</td>\n      <td>F</td>\n      <td>1985-05-13</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>10099</td>\n      <td>1956-05-25</td>\n      <td>Valter</td>\n      <td>Sullins</td>\n      <td>F</td>\n      <td>1988-10-18</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>10100</td>\n      <td>1953-04-21</td>\n      <td>Hironobu</td>\n      <td>Haraldson</td>\n      <td>F</td>\n      <td>1987-09-21</td>\n    </tr>\n  </tbody>\n</table>\n<p>100 rows \u00d7 6 columns</p>\n</div>\n\n\n\n\n```python\ndf = _\n```\n\n`describe`\u306e\u610f\u5473\u304c\u7121\u3044\u30c7\u30fc\u30bf\u3067\u3059\u304c\u3068\u308a\u3042\u3048\u305a\u3002\n\n```python\ndf.describe()\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>emp_no</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>100.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>10050.500000</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>29.011492</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>10001.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>10025.750000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>10050.500000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>10075.250000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>10100.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n2\u56de\u3081\u304b\u3089\u306f\u63a5\u7d9a\u306e\u60c5\u5831\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n```python\n%%sql\n\nselect * from employees limit 1;\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>emp_no</th>\n      <th>birth_date</th>\n      <th>first_name</th>\n      <th>last_name</th>\n      <th>gender</th>\n      <th>hire_date</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10001</td>\n      <td>1953-09-02</td>\n      <td>Georgi</td>\n      <td>Facello</td>\n      <td>M</td>\n      <td>1986-06-26</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\u3064\u3044\u3067\u306b\u3088\u304f\u3042\u308bpandas\u3068matplotlib\u306e\u30b5\u30f3\u30d7\u30eb\u3082\u51fa\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```python\n%matplotlib inline\n```\n\n\n```python\nimport os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nts = pd.Series(np.random.randn(1000), index=pd.date_range('1/1/2000', periods=1000))\n\nts = ts.cumsum()\n```\n\n\n```python\nts.plot()\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x10a6fac18>\n\n## \u307e\u3068\u3081\n\nSQL\u306e\u5b9f\u884c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3001\u6614\u306f[CSE](http://www.hi-ho.ne.jp/tsumiki/)\u3068\u304b[Navicat for MySQL | MySQL\u306b\u5bfe\u5fdc\u3057\u305fDB\u7ba1\u7406\u30fb\u958b\u767a\u30c4\u30fc\u30eb](http://jp.navicat.com/products/navicat-for-mysql)\u3068\u304b\u4f7f\u3063\u3066\u305f\u3093\u3067\u3059\u304c\u3001Mac\u306b\u3057\u3066\u304b\u3089\u3042\u307e\u308a\u3044\u3044\u611f\u3058\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u5de1\u308a\u3042\u3063\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u81ea\u5206\u306e\u7528\u9014\u3067\u306f\u3001\u7ba1\u7406\u6a5f\u80fd\u3068\u304b\u306f\u305d\u3093\u306a\u5fc5\u8981\u3068\u3057\u3066\u306a\u304f\u3066\u3001\n\n- SQL\u6587\u3068\u305d\u306e\u5b9f\u884c\u7d50\u679c\u306e\u4fdd\u5b58\n- SQL\u6587\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\n\u304f\u3089\u3044\u304c\u3067\u304d\u308c\u3070\u3088\u3055\u3052\u3060\u3063\u305f\u306e\u3067\u3001Jupyter notebook\u304c\u307e\u3042\u307e\u3042\u3061\u3087\u3046\u3069\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nSQL\u6587\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u3064\u3044\u3066\u306f\u3001[andialbrecht/sqlparse](https://github.com/andialbrecht/sqlparse)\u4f7f\u3048\u3070\u3001SQL\u6587\u3092\u304d\u308c\u3044\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u305d\u308c\u3067\u3002\n\u3044\u308d\u3044\u308dPython\u3067\u3084\u308b\u3068\u5e78\u305b\u306b\u306a\u308c\u305d\u3046\u3067\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["Jupyter", "MySQL", "Miniconda", "python3"]}