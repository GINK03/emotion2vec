{"context": "\u4eca\u56de\u306f\u30ea\u30ea\u30fc\u30b9\u304b\u3089\u7d04\uff11\u30f6\u6708\u7d4c\u904e\u3057\u305fSpring Security 4.1\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u300cSpring 4.3\u306e\u5909\u66f4\u70b9\u300d\u3068\u540c\u69d8\u306b\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u300cWhat\u2019s New in Spring Security 4.1\u300d\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u5185\u5bb9\u3092\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ea4\u3048\u3066\u5177\u4f53\u7684\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\uff08\u9006\u306b\u3044\u3046\u3068\u3001\u300cWhat\u2019s New in Spring Security 4.1\u300d\u306b\u306e\u3063\u3066\u3044\u306a\u3044\u5909\u66f4\u70b9\u306f\u7d39\u4ecb\u3057\u306a\u3044\u306e\u3067\u3001\u3042\u3057\u304b\u3089\u305a\u30fb\u30fb\u30fb  \uff09\n\u305d\u3082\u305d\u3082Spring Security\u3063\u3066\u30fb\u30fb\u30fb\u3068\u3044\u3046\u65b9\u306f\u3001\u300cTERASOLUNA Server Framework (5.x)\u306e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u300d\u3092\u8aad\u3082\u3046\uff01\uff01Spring Secuirty 4.0\u30d9\u30fc\u30b9\u3067\u306eSpring Security\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3001\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u7528\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3001\u5177\u4f53\u7684\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8981\u4ef6\u3092\u5145\u305f\u3059\u305f\u3081\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u4f53\u7cfb\u7684\u306bSpring Security\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u4f7f\u3044\u65b9\u304c\u5b66\u3079\u307e\u3059 \nSpring Boot\u524d\u63d0\u3067\u306f\u306a\u3044\uff0bXML\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u4f8b\u3057\u304b\u8f09\u3063\u3066\u306a\u3044\u306e\u304c\u5c11\u3057\u3060\u3051\u6b8b\u5ff5\u3067\u3059\u304c\u3001\u305d\u3053\u306fSpring Boot\u3084Spring Security\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u7167\u3057\u3066\u8aad\u307f\u66ff\u3048\u307e\u3057\u3087\u3046\uff01\uff01\n\n4.1.1.RELEASE (4.1.2.RELEAE)\n\nSpring 4.1.1.REALEASE\u3067\u8ffd\u52a0\u3055\u308c\u305fMvcRequestMatcher\u306e\u8aac\u660e\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\uff08\u5dee\u5206\u306f\u3001\u300c\u26058/13\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\n\n\u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n\nSpring Security 4.1.0.RELEASE\nSpring Boot 1.4.0.BUILD-SNAPSHOT (2016/6/5\u6642\u70b9)\n\n\nWhat\u2019s New in Spring Security 4.1\nSpring Security\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u306f\u3001\u4ee5\u4e0b\u306e6\u3064\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u6539\u5584\u70b9\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002Spring 4.3\u306e\u6295\u7a3f\u3067\u306f\u30bb\u30af\u30b7\u30e7\u30f3\u6bce\u306b\u6295\u7a3f\u3092\u308f\u3051\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u3044\u3063\u304d\u306b\u8aac\u660e\u3057\u307e\u3059\uff01\uff01\n\nJava Configuration Improvements\n\u4ee5\u4e0b\u306f\u3001JavaConfig\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n\n\nNo\nJavaConfig\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n1\n\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305fUserDetailsService\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306eBean\u5b9a\u7fa9\u304c\u3061\u3087\u301c\u7c21\u5358\u306b\u306a\u308a\u307e\u3057\u305f\u3002\uff08\u3063\u3066\u304bDI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3057\u3061\u3083\u3048\u3070\u81ea\u52d5\u691c\u51fa\u3055\u308c\u3061\u3083\u3046  \uff09\n\n\n2\n\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305fAuthenticationProvider\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306eBean\u5b9a\u7fa9\u304c\u3061\u3087\u301c\u7c21\u5358\u306b\u306a\u308a\u307e\u3057\u305f\u3002\uff08\u3053\u3061\u3089\u3082DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3057\u3061\u3083\u3048\u3070\u81ea\u52d5\u691c\u51fa\u3055\u308c\u3061\u3083\u3046  \uff09\n\n\n3\n\nLogoutSuccessHandler\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u7a2e\u985e\u6bce(RequestMatcher\u6bce)\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u7a2e\u985e\u306b\u5fdc\u3058\u3066\u30ed\u30b0\u30a2\u30a6\u30c8\u6210\u529f\u6642\u306e\u30ec\u30b9\u30dd\u30f3\u30b9(\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u307f\u3001HTML\u3001JSON\u306a\u3069)\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u307e\u3059\u3002\n\n\n4\n\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305fInvalidSessionStrategy\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n5\n\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u6307\u5b9a\u3057\u305f\u767b\u9332\u6e08\u307f\u306e\u30d5\u30a3\u30eb\u30bf\u3068\u540c\u3058\u30dd\u30b8\u30b7\u30e7\u30f3(\u512a\u5148\u9806)\u306b\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n\n\nWeb Application Security Improvements\n\u4ee5\u4e0b\u306f\u3001Web\u30a2\u30d7\u30ea\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n\n\nNo\nWeb\u30a2\u30d7\u30ea\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n6\nWeb\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u306b\u3066\u3001Spring MVC\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u30eb\u30fc\u30eb\u3068\u9023\u52d5\u3057\u305fRequestMatcher(MvcRequestMatcher)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 \u300c\u26058/13\u8ffd\u52a0\u300d\n\n\n7\nXSS\u653b\u6483\u5bfe\u7b56\u3068\u3057\u3066\u3001\u300cContent Security Policy (CSP)\u300d\u7528\u306eHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u51fa\u529b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n8\n\u507d\u9020\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306b\u3088\u308b\u4e2d\u9593\u8005\u653b\u6483\u5bfe\u7b56\u3068\u3057\u3066\u3001\u300cHTTP Public Key Pinning (HPKP)\u300d\u7528\u306eHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u51fa\u529b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n9\nCSRF\u30c8\u30fc\u30af\u30f3\u306e\u4fdd\u5b58\u5148\u3068\u3057\u3066Cookie\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001AngularJS\u306eCSRF\u5bfe\u7b56\u6a5f\u80fd\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u52d5\u4f5c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002\n\n\n10\n\nAuthenticationSuccessHandler\u3068AuthenticationFailureHandler\u306b\u3066\u3001\u9077\u79fb\u5148\u306b\u30d5\u30a9\u30ef\u30fc\u30c9\u3059\u308b\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u9077\u79fb\u5148\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7\u306e\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n11\n\n@AuthenticationPrincipal\u306bexpression\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002expression\u5c5e\u6027\u3092\u5229\u7528\u3059\u308b\u3068\u3001Spring MVC\u306eHandler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u3001\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u60c5\u5831(Authentication#getPrincipal()\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024)\u304c\u4fdd\u6301\u3059\u308b\u4efb\u610f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u5024\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n\nAuthorization Improvements\n\u4ee5\u4e0b\u306f\u3001\u8a8d\u53ef\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n\n\nNo\n\u8a8d\u53ef\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n12\nWeb\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u306b\u3066\u3001(\u5f85\u671b\u306e\u30fb\u30fb\u30fb)\u30d1\u30b9\u5909\u6570\u5024\u3092\u53c2\u7167\u3057\u305f\u8a8d\u53ef\u5236\u5fa1\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f \n\n\n\n13\nJava\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\u6642\u306b\u4f7f\u7528\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(@PreAuthorize\u306a\u3069)\u304c\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n\n\nCrypto Module Improvements\n\u4ee5\u4e0b\u306f\u3001\u6697\u53f7\u5316\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n\n\nNo\n\u6697\u53f7\u5316\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n14\nSCrypt\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305fPasswordEncoder\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n15\nPBKDF2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305fPasswordEncoder\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n\n\nTesting Improvements\n\u4ee5\u4e0b\u306f\u3001\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n\n\nNo\n\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n16\n\u533f\u540d\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(@WithAnonymousUser)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n17\n\n@WithUserDetails\u306buserDetailsServiceBeanName\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002userDetailsServiceBeanName\u5c5e\u6027\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30c6\u30b9\u30c8\u6642\u306b\u4f7f\u7528\u3059\u308bUserDetailsService\u306eBean\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n18\n\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(@WithMockUser\u306a\u3069)\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n19\n\nSecurityMockMvcResultMatchers#withAuthorities\u30e1\u30bd\u30c3\u30c9\u3067\u3001GrantedAuthority\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u30ad\u30e3\u30b9\u30c8\u306a\u3057\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff1f\uff1f\uff08\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u5185\u5bb9\u3068\u306a\u3093\u3068\u306a\u304f\u9055\u3044\u6c17\u304c\u3059\u308b\u3051\u3069\u30fb\u30fb\u30fb\u305f\u3076\u3093\u3042\u3063\u3066\u3044\u308b\u3068\u601d\u3046\u30fb\u30fb\u30fb  \uff09\n\n\n\n\nGeneral Improvements\n\u4ee5\u4e0b\u306f\u3001Spring Security\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e(\u975e\u6a5f\u80fd\u7684\u306a)\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n\n\nNo\nSpring Security\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5909\u66f4\u70b9\n\n\n\n\n20\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u518d\u7de8\u3055\u308c\u305f\u6a21\u69d8\u3067\u3059\u3002 (Issue#3752)\n\n\n21\nIssue\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u304c\u3001Spring JIRA\u304b\u3089GitHub\u306b\u79fb\u7ba1\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n\n\n\u52d5\u4f5c\u691c\u8a3c\u7528\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6e96\u5099\n\u4eca\u56de\u7d39\u4ecb\u3059\u308b\u5185\u5bb9\u306e\u52d5\u4f5c\u691c\u8a3c\u306f\u3001Spring Boot 1.4(Spring Security 4.1)\u3067\u884c\u3044\u307e\u3059\u3002\u5b9f\u969b\u306b\u30a2\u30d7\u30ea\u4e0a\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u65b9\u306f\u3001\u300cSPRING INITIALIZR\u300d\u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fZip\u30d5\u30a1\u30a4\u30eb\u3092\u9069\u5f53\u306a\u3068\u3053\u308d\u306b\u89e3\u51cd\u3057\u3001pom.xml\u306b\u4ee5\u4e0b\u306e\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\npom.xml\n<dependency>\n    <groupId>org.thymeleaf.extras</groupId>\n    <artifactId>thymeleaf-extras-springsecurity4</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-test</artifactId>\n</dependency>\n\n\nSpring Boot\u8d77\u52d5\u3092\u8d77\u52d5\u3057\u307e\u3057\u3087\u3046\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u505c\u6b62\u306f\u300cCtl+C\u300d\u3067\u3059\u3002\n$ ./mvnw spring-boot:run\n...\n2016-06-05 14:04:57.149  INFO 59552 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup\n2016-06-05 14:04:57.215  INFO 59552 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)\n2016-06-05 14:04:57.220  INFO 59552 --- [           main] com.example.Sec41DemoApplication         : Started Sec41DemoApplication in 3.553 seconds (JVM running for 6.06)\n\n\n\nUserDetailsService(+PasswordEncoder)\u306e\u9069\u7528\u304c\u8d85\u7d76\u7c21\u5358\u306b\u306a\u308b \n\nSpring Security 4.1\u304b\u3089\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305fUserDetailsService\u53ca\u3073PasswordEncoder\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u65b9\u6cd5\u304c\u8d85\u7d76\u7c21\u5358\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u30fb\u30fb\u30fbSpring\u306eDI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308b\u3068\u81ea\u52d5\u691c\u51fa\u3057\u3066\u304f\u308c\u307e\u3059  \n\nSpring Boot\u304c\u4f7f\u3046\u30c7\u30d5\u30a9\u30eb\u30c8\u306eUserDetailsService\u3068PasswordEncoder\u306f\uff1f\nSpring Boot\u306e\u81ea\u52d5\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30a4\u30f3\u30e1\u30e2\u30ea\u5b9f\u88c5\u306eInMemoryUserDetailsManager\u304c\u5229\u7528\u3055\u308c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30e6\u30fc\u30b6\u30fc\u3068\u3057\u3066\u300c\u30e6\u30fc\u30b6\u540d\uff1auser\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\uff1a\u8d77\u52d5\u6642\u306b\u751f\u6210\u3057\u305fUUID\u300d\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u8d77\u52d5\u6642\u306b\u751f\u6210\u3055\u308c\u308b\u30d1\u30b9\u30ef\u30fc\u30c9(UUID)\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u4f7f\u7528\u3055\u308c\u308bPasswordEncoder\u306f\u3001\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u307e\u307e\u6271\u3046PlaintextPasswordEncoder\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\n...\n2016-06-05 14:10:05.479  INFO 59590 --- [ost-startStop-1] b.a.s.AuthenticationManagerConfiguration : \n\nUsing default security password: c93c44f6-9194-4249-b360-6d8a1753b946\n\n2016-06-05 14:10:05.555  INFO 59590 --- [ost-startStop-1] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: Ant [pattern='/css/**'], []\n...\n\n\n\n\u72ec\u81ea\u306eDB\u8a8d\u8a3c\u7528\u306eUserDetailsService\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\n\u3053\u3053\u3067\u306f\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3059\u308bUserDetailsService\u3092\u4f5c\u6210\u3057\u3001Spring Security\u306b\u63d0\u4f9b\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u8a8d\u8a3c\u7528\u306e\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\npublic class Account implements Serializable {\n    private static final long serialVersionUID = 1L;\n    private String username;\n    private String password;\n    private String name;\n    private String authorities;\n    // ...\n}\n\n\n\n\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308bUserDetails\nimport org.springframework.security.core.authority.AuthorityUtils;\nimport org.springframework.security.core.userdetails.User;\n\npublic class MyUserDetails extends User {\n    private static final long serialVersionUID = 1L;\n    private final Account account;\n    public MyUserDetails(Account account) {\n        super(account.getUsername(), account.getPassword(),\n                AuthorityUtils.commaSeparatedStringToAuthorityList(account.getAuthorities()));\n        this.account = account;\n    }\n    public Account getAccount() {\n        return account;\n    }\n}\n\n\n\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308bUserDetails\u3092\u8fd4\u5374\u3059\u308bUserDetailsService\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n@Service // \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u6a5f\u80fd\u3067DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308c\u3070\u81ea\u52d5\u691c\u51fa\u3055\u308c\u308b\npublic class MyUserDetailsService implements UserDetailsService {\n    @Autowired\n    NamedParameterJdbcOperations namedParameterJdbcOperations;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        try {\n            Account account = namedParameterJdbcOperations.queryForObject(\n                    \"SELECT username, password, name, authorities FROM account WHERE username = :username\"\n                    , new MapSqlParameterSource(\"username\", username),\n                    new BeanPropertyRowMapper<>(Account.class));\n            return new MyUserDetails(account);\n        } catch (IncorrectResultSizeDataAccessException e) {\n            throw new UsernameNotFoundException(\"A specified user does not exist.\", e);\n        }\n    }\n}\n\n\u5b9f\u306f\u3001\u3053\u308c\u3060\u3051\u3067\u4f5c\u6210\u3057\u305fMyUserDetailsService\u30af\u30e9\u30b9\u304c\u3001Spring Security\u306b\u9069\u7528\u3055\u308c\u3061\u3083\u3044\u307e\u3059\uff01\uff01\u30dd\u30a4\u30f3\u30c8\u306f\u30fb\u30fb\u30fb@Service\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u5bfe\u8c61\u306b\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u6a5f\u80fd\u306b\u3088\u3063\u3066DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u305fMyUserDetailsService\u304c\u3001Spring Security\u306b\u3088\u3063\u3066\u81ea\u52d5\u691c\u51fa\u3055\u308c\u307e\u3059\u3002\u4f5c\u6210\u3057\u305fUserDetailsService\u3092\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u5bfe\u8c61\u306b\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u666e\u901a\u306bBean\u5b9a\u7fa9\u3059\u308c\u3070OK\u3067\u3059\u3002\n\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u3057\u306a\u3044\u5834\u5408\u306eBean\u5b9a\u7fa9\u4f8b\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    UserDetailsService userDetailsService(){\n        return new MyUserDetailsService();\n    }\n}\n\n\n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fbDDL\u3068DML\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u3053\u308c\u3089\u306eSQL\u30d5\u30a1\u30a4\u30eb\u306f\u3001Spring Boot\u304c\u81ea\u52d5\u3067\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nsrc/resources/schema.sql\nCREATE TABLE account (\n    username NVARCHAR(128) PRIMARY KEY,\n    password CHAR(60) NOT NULL,\n    name NVARCHAR(128) NOT NULL,\n    authorities TEXT\n);\n\n\n\nsrc/resources/data.sql\n-- password = demo(Hashed by Bcrypt algorithm)\n\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('demo', '$2a$10$oxSJl.keBwxmsMLkcT9lPeAIxfNTPNQxpeywMrF7A3kVszwUTqfTK', 'Kazuki Shimizu', 'ROLE_USER');\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('admin', '$2a$10$oxSJl.keBwxmsMLkcT9lPeAIxfNTPNQxpeywMrF7A3kVszwUTqfTK', 'Administrator', 'ROLE_ADMIN,ROLE_USER');\n\n\n\nPasswordEncoder\u306e\u9069\u7528\nSpring Boot\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u3060\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u3068\u3057\u3066\u6271\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u3053\u3053\u3067\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u7ba1\u7406\u3059\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u30cf\u30c3\u30b7\u30e5\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3042\u3046PasswordEncoder\u3092\u9069\u7528\u3057\u307e\u3057\u3087\u3046\u3002PasswordEncoder\u3082\u3001UserDetailsService\u3068\u540c\u69d8\u306bDI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308b\u3060\u3051\u3067\u81ea\u52d5\u691c\u51fa\u3055\u308c\u307e\u3059\uff01\uff01\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n}\n\n\nAuthenticationProvider\u306e\u9069\u7528\u304c\u8d85\u7d76\u7c21\u5358\u306b\u306a\u308b \n\nSpring Security 4.1\u304b\u3089\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305fAuthenticationProvider\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u65b9\u6cd5\u304c\u8d85\u7d76\u7c21\u5358\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u30fb\u30fb\u30fbSpring\u306eDI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308b\u3068\u81ea\u52d5\u691c\u51fa\u3057\u3066\u304f\u308c\u307e\u3059  \n\n\u72ec\u81ea\u306eAuthenticationProvider\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\n\u3053\u3053\u3067\u306f\u3001Spring Security\u304b\u3089\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bDaoAuthenticationProvider\u306e\u30c1\u30a7\u30c3\u30af\u51e6\u7406\u3092\u62e1\u5f35\u3057\u3066\u307f\u307e\u3059\u3002\n@Component // \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u6a5f\u80fd\u3067DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308c\u3070\u81ea\u52d5\u691c\u51fa\u3055\u308c\u308b\npublic class MyDaoAuthenticationProvider extends DaoAuthenticationProvider {\n\n    @Override\n    protected void additionalAuthenticationChecks(UserDetails userDetails, UsernamePasswordAuthenticationToken authentication) throws AuthenticationException {\n        // ... Please add a check\n        // ... (\u7701\u7565)\n        super.additionalAuthenticationChecks(userDetails, authentication);\n        // ... Please add a check\n        // ... (\u7701\u7565)\n    }\n\n    @Autowired\n    public void setUserDetailsService(UserDetailsService userDetailsService) {\n        super.setUserDetailsService(userDetailsService);\n    }\n    @Autowired\n    public void setPasswordEncoder(PasswordEncoder passwordEncoder) {\n        super.setPasswordEncoder(passwordEncoder);\n    }\n}\n\n\u4f5c\u6210\u3057\u305fAuthenticationProvider\u3092\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u5bfe\u8c61\u306b\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u666e\u901a\u306bBean\u5b9a\u7fa9\u3059\u308c\u3070OK\u3067\u3059\u3002\n\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u3057\u306a\u3044\u5834\u5408\u306eBean\u5b9a\u7fa9\u4f8b\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    AuthenticationProvider authenticationProvider() {\n        return new MyDaoAuthenticationProvider();\n    }\n}\n\n\n\nLogoutSuccessHandler\u306e\u8907\u6570\u767b\u9332\u304c\u53ef\u80fd\u306b\u306a\u308b \n\nLogoutSuccessHandler\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u7a2e\u985e\u6bce(RequestMatcher\u6bce)\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u7a2e\u985e\u306b\u5fdc\u3058\u3066\u30ed\u30b0\u30a2\u30a6\u30c8\u6210\u529f\u6642\u306e\u30ec\u30b9\u30dd\u30f3\u30b9(\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u307f\u3001HTML\u3001JSON\u306a\u3069)\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001Ajax\u306e\u5834\u5408\u306f\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9(200 OK)\u306e\u307f\u3092\u8fd4\u5374\u3057\u3001Ajax\u3067\u306a\u3051\u308c\u3070\u30ed\u30b0\u30a4\u30f3\u753b\u9762(/login?logout)\u306b\u9077\u79fb\u3055\u305b\u308b\u5834\u5408\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin().permitAll();\n        http.authorizeRequests().anyRequest().authenticated();\n        // ...\n        http.logout()\n                // Ajax\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306f\u300c200 OK\u300d\u306e\u307f\u3092\u8fd4\u5374\n                .defaultLogoutSuccessHandlerFor(new HttpStatusReturningLogoutSuccessHandler(),\n                        request -> \"XMLHttpRequest\".equals(request.getHeader(\"X-Requested-With\")))\n                .permitAll();\n    }\n}\n\n\u30d5\u30a9\u30fc\u30e0\u3068Ajax\u3092\u4f7f\u3063\u3066\u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b\u753b\u9762\u3082\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\npom.xml\n<dependency>\n    <groupId>org.webjars</groupId>\n    <artifactId>jquery</artifactId>\n    <version>2.2.4</version>\n</dependency>\n\n\n\nsrc/main/resources/templates/home.html\n<!DOCTYPE html>\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n    <meta charset=\"UTF-8\"/>\n    <script th:src=\"@{/webjars/jquery/2.2.4/jquery.js}\"/>\n    <script type=\"text/javascript\">\n        $(function () {\n            $(\"#logout\").click(function () {\n                $.ajax({\n                    url: '/logout',\n                    type: 'POST',\n                    success: function () {\n                        window.location = \"/login?logout\";\n                    },\n                    error: function (data) {\n                        console.log(data);\n                    }\n                });\n\n            });\n            $(document).ajaxSend(function (event, xhr, options) {\n                var token = $(\"meta[name='_csrf']\").attr(\"content\");\n                var header = $(\"meta[name='_csrf_header']\").attr(\"content\");\n                xhr.setRequestHeader(header, token);\n            });\n        });\n    </script>\n    <meta name=\"_csrf\" th:content=\"${_csrf.token}\"/>\n    <meta name=\"_csrf_header\" th:content=\"${_csrf.headerName}\"/>\n</head>\n<body>\n<h3>\u30e1\u30cb\u30e5\u30fc</h3>\n\n<!-- \u30d5\u30a9\u30fc\u30e0\u3092\u4f7f\u3063\u305f\u30ed\u30b0\u30a2\u30a6\u30c8\u30dc\u30bf\u30f3 -->\n<form th:action=\"@{/logout}\" method=\"post\">\n    <button>\u30ed\u30b0\u30a2\u30a6\u30c8</button>\n</form>\n\n<br/>\n\n<!-- Ajax\u3092\u4f7f\u3063\u305f\u30ed\u30b0\u30a2\u30a6\u30c8\u30dc\u30bf\u30f3 -->\n<button id=\"logout\">\u30ed\u30b0\u30a2\u30a6\u30c8 for Ajax</button>\n\n</body>\n</html>\n\n\n\nsrc/main/java/com/example/component/WelcomeController.java\npackage com.example.component;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.GetMapping;\n\n@Controller\npublic class WelcomeController {\n\n    @GetMapping(\"/\")\n    public String home() {\n        return \"home\";\n    }\n\n}\n\n\n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u30fb\u5f8c\u8ff0\u3059\u308b\u300cContent Security Policy (CSP)\u300d\u5bfe\u7b56\u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u3001<script>\u8981\u7d20\u5185\u306eJava Script\u304c\u5b9f\u884c\u3067\u304d\u306a\u304f\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001<script>\u5185\u306e\u30b3\u30fc\u30c9\u3092js\u30d5\u30a1\u30a4\u30eb\u306b\u79fb\u52d5\u3059\u308b\u306e\u304c\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7684\u306b\u306f\u4e00\u756a\u5b89\u5168\u3067\u3059\u3002\n\nInvalidSessionStrategy\u306e\u9069\u7528\u304c\u7c21\u5358\u306b\u306a\u308b \n\nSpring Security 4.1\u304b\u3089\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305fInvalidSessionStrategy\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.sessionManagement()\n                .invalidSessionStrategy(new MyInvalidSessionStrategy());\n    }\n}\n\n\n\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\u4f4d\u7f6e\u306e\u6307\u5b9a\u304c\u67d4\u8edf\u306b\u306a\u308b \n\nSpring Security 4.1\u304b\u3089\u3001\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u6307\u5b9a\u3057\u305f\u767b\u9332\u6e08\u307f\u306e\u30d5\u30a3\u30eb\u30bf\u3068\u540c\u3058\u30dd\u30b8\u30b7\u30e7\u30f3(\u512a\u5148\u9806)\u306b\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.addFilterAt(new MyFilter(), UsernamePasswordAuthenticationFilter.class);\n    }\n}\n\nUsernamePasswordAuthenticationFilter.class\u3068\u540c\u3058\u30dd\u30b8\u30b7\u30e7\u30f3(\u512a\u5148\u9806)\u3067\u3001\u6307\u5b9a\u3057\u305f\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u304cSpring Security\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u540c\u3058\u512a\u5148\u9806\u4f4d\u3067\u767b\u9332\u3055\u308c\u307e\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u306e\u30b1\u30fc\u30b9\u3067\u7b2c\uff11\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u306e\u65b9\u304c\u5148\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\nSpring MVC\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u30eb\u30fc\u30eb\u3068\u9023\u52d5\u3057\u305fRequestMatcher\u304c\u8ffd\u52a0\u3055\u308c\u308b \n\nSpring Security 4.1.1\u304b\u3089\u3001Spring MVC\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u30eb\u30fc\u30eb\u3068\u9023\u52d5\u3057\u305fRequestMatcher(MvcRequestMatcher)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3067\u3053\u306e\u3088\u3046\u306a\u6a5f\u80fd\u8ffd\u52a0\u304c\u884c\u308f\u308c\u305f\u306e\u306f\u3001\u3069\u3046\u3084\u3089\u300ccve-2016-5007\u300d\u306e\u8106\u5f31\u6027\u5bfe\u7b56\u306b\u95a2\u4fc2\u3057\u3066\u3044\u308b\u304b\u3089\u307f\u305f\u3044\u3067\u3059  \ncve-2016-5007\u306e\u8106\u5f31\u6027\u306e\u8a73\u7d30\u306f\u3001\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\nhttps://github.com/spring-projects/spring-security/issues/3964\nhttps://pivotal.io/security/cve-2016-5007\nhttps://jira.spring.io/browse/SEC-2534\n\n\u306a\u304a\u3001Spring Security\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u3082URL\u306e\u89e3\u91c8\u306e\u9055\u3044\u306b\u3088\u3063\u3066Spring Security\u306e\u8a2d\u5b9a\u3092\u3059\u308a\u629c\u3051\u308b\u30b1\u30fc\u30b9\u306e\u8aac\u660e\u3084\u3001MvcRequestMatcher\u3092\u5229\u7528\u3057\u3066\u3059\u308a\u629c\u3051\u3092\u9632\u6b62\u3059\u308b\u65b9\u6cd5\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nhttp://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#mvc-requestmatcher\n\n\u4ee5\u4e0b\u306b\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u7d39\u4ecb\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4f8b\u306b\u3001URL\u306e\u89e3\u91c8\u306e\u9055\u3044\u306b\u3088\u3063\u3066\u767a\u751f\u3059\u308b\u3059\u308a\u629c\u3051\u4f8b\u3068MvcRequestMatcher\u306e\u5229\u7528\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001\u7ba1\u7406\u8005\u5411\u3051\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n\u7ba1\u7406\u8005\u5411\u3051\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n@RequestMapping(\"/admin\")\npublic String admin() {\n    // ...\n}\n\n\n\u7ba1\u7406\u8005\u5411\u3051\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u5bfe\u3057\u3066\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u3051\u308b\u5834\u5408\u3001\u591a\u304f\u306e\u958b\u767a\u8005\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9a\u7fa9\u306b\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nprotected configure(HttpSecurity http) throws Exception {\n    http.authorizeRequests()\n            .antMatchers(\"/admin\").hasRole(\"ADMIN\");\n}\n\n\u3071\u3063\u3068\u307f\u554f\u984c\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u304c\u30fb\u30fb\u30fbSpring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u30eb\u30fc\u30eb\u3067\u306f\u3001\u300c/admin\u300d\u306b\u52a0\u3048\u3066\u4ee5\u4e0b\u306e\u30d1\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3082admin\u30e1\u30bd\u30c3\u30c9\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\uff08\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u3053\u306e\u3042\u305f\u308a\u306e\u52d5\u4f5c\u306f\u3001Spring MVC\u5074\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u52d5\u4f5c\u3092\u5909\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002\uff09\n\n\u300c/admin/\u300d\n\u300c/admin.\u62e1\u5f35\u5b50\u300d\uff08\u4f8b\uff1a /admin.html, /admin.json, /admin.xml, etc ...\uff09\n\n\u3064\u307e\u308a\u30fb\u30fb\u30fbSpring Security\u5074\u306e\u8a2d\u5b9a\u304c\u300c/admin\u300d\u3060\u3051\u3060\u3068\u300c/admin/\u300d\u3084\u300c/admin.html\u300d\u304c\u3059\u308a\u629c\u3051\u3066\u3057\u307e\u3046\u308f\u3051\u3067\u3059    antMatchers\u306b\u306f\u8907\u6570\u306e\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u300c/admin/\u3068/admin.*\u300d\u3082\u5bfe\u8c61\u306b\u52a0\u3048\u308c\u3070\u3059\u308a\u629c\u3051\u306a\u3044\u6c17\u3082\u3059\u308b\u3051\u3069\u3001\u305d\u3093\u306a\u5358\u7d14\u306a\u8a71\u3058\u3083\u306a\u3044\u306e\u304b\u306a\uff01\uff1f\n\u3067\u3001\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3068\u3057\u3066\u3001Spring MVC\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u30eb\u30fc\u30eb\u3068\u9023\u643a\u3059\u308bRequestMatcher(MvcRequestMatcher)\u304c\u5c0e\u5165\u3055\u308c\u305f\u308f\u3051\u3067\u3059\u3002MvcRequestMatcher\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9a\u7fa9\u306b\u5909\u3048\u3066\u304f\u3060\u3055\u3044\u3002\nprotected configure(HttpSecurity http) throws Exception {\n    http.authorizeRequests()\n            .mvcMatchers(\"/admin\").hasRole(\"ADMIN\"); // mvcMatchers\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\uff01\uff01\n}\n\n\nNote: \u30e1\u30bd\u30c3\u30c9\u8a8d\u53ef\u306e\u4f75\u7528\u306b\u3064\u3044\u3066\n\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u30ce\u30fc\u30c8\u306b\u306f\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u305fJava\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\uff08\u30e1\u30bd\u30c3\u30c9\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\uff09\u3068\u306e\u4f75\u7528\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\u4eee\u306bWeb\u30ec\u30a4\u30e4\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u3059\u308a\u629c\u3051\u3066\u3082\u3001Java\u30e1\u30bd\u30c3\u30c9\u306b\u9069\u5207\u306a\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u4e0d\u6b63\u306a\u30a2\u30af\u30bb\u30b9\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6a5f\u5bc6\u5ea6\u304c\u9ad8\u3044\u60c5\u5831\u3092\u6271\u3046\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u306e\u4f75\u7528\u3092\u691c\u8a0e\u3057\u305f\u65b9\u304c\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\n\n\u3055\u3089\u306b\u3001Spring Security 4.1.2\u304b\u3089\u306f\u3001HttpSecurity\u306e\u9069\u7528\u7bc4\u56f2\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u969b\u306b\u3082MvcRequestMatcher\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5358\u4e00\u306e\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u5bfe\u8c61\u3059\u308b\u5834\u5408\nprotected void configure(HttpSecurity http) throws Exception {\n    http.mvcMatcher(\"/admin/**\") // \u9069\u7528\u7bc4\u56f2\u306e\u6307\u5b9a\u3067\u3082\u5229\u7528\u3067\u304d\u308b\n            .authorizeRequests()\n            .antMatchers(\"/admin/system\").hasRole(\"SYS_ADMIN\")\n            .antMatchers(\"/admin/infra\").hasRole(\"INFRA_ADMIN\");\n}\n\n\nor \n\n\u8907\u6570\u306e\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u5bfe\u8c61\u306b\u3059\u308b\u5834\u5408\nprotected void configure(HttpSecurity http) throws Exception {\n    http.requestMatchers()\n            .mvcMatchers(\"/admin/system/**\", \"/admin/infra/**\") // \u9069\u7528\u7bc4\u56f2\u306e\u6307\u5b9a\u3067\u3082\u5229\u7528\u3067\u304d\u308b\n            .and()\n            .authorizeRequests().anyRequest().hasRole(\"SUPER_ADMIN\");\n\n\nSpring Security\u3092Spring MVC\u3068\u4e00\u7dd2\u306b\u4f7f\u3046\u5834\u5408\u306f\u3001MvcRequestMatcher\u3092\u4f7f\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\uff01\uff01\u3063\u3066\u8a71\u3067\u3059\u306d  \n\nContent Security Policy (CSP)\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b \n\nSpring Security 4.1\u304b\u3089\u3001XSS\u653b\u6483\u5bfe\u7b56\u3068\u3057\u3066\u3001\u300cContent Security Policy (CSP)\u300d\u7528\u306eHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0(Content-Security-Policy\u3084Content-Security-Policy-Report-Only)\u306e\u51fa\u529b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.headers()\n                .contentSecurityPolicy(\"default-src 'self'\");\n    }\n}\n\n\nHTTP Public Key Pinning (HPKP)\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b \n\nSpring Security 4.1\u304b\u3089\u3001\u507d\u9020\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306b\u3088\u308b\u4e2d\u9593\u8005\u653b\u6483\u5bfe\u7b56\u3068\u3057\u3066\u3001\u300cHTTP Public Key Pinning (HPKP)\u300d\u7528\u306eHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0(Public-Key-Pins\u3084Public-Key-Pins-Report-Only)\u306e\u51fa\u529b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.headers()\n                .httpPublicKeyPinning()\n                .addSha256Pins(\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\",\n                               \"E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=\");\n    }\n}\n\n\nCSRF\u30c8\u30fc\u30af\u30f3\u306e\u4fdd\u5b58\u5148\u3068\u3057\u3066Cookie\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b \n\nSpring Security 4.1\u304b\u3089\u3001CSRF\u30c8\u30fc\u30af\u30f3\u306e\u4fdd\u5b58\u5148\u3068\u3057\u3066Cookie(CookieCsrfTokenRepository)\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001AngularJS\u306eCSRF\u5bfe\u7b56\u6a5f\u80fd\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u52d5\u4f5c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002 \n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.csrf()\n                .csrfTokenRepository(new CookieCsrfTokenRepository());\n    }\n}\n\n\u306a\u304a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u7528\u3055\u308c\u308bCookie\u540d\u306f\u300cXSRF-TOKEN\u300d\u3067\u3001CSRF\u30c8\u30fc\u30af\u30f3\u5024\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u306f\u300c_csrf\u300d\u3001CSRF\u30c8\u30fc\u30af\u30f3\u5024\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u540d\u306f\u300cX-XSRF-TOKEN\u300d\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u540d\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304cHttpSessionCsrfTokenRepository\u4f7f\u7528\u6642\u3068\u3053\u3068\u306a\u308b\u70b9\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002(HttpSessionCsrfTokenRepository\u4f7f\u7528\u6642\u306f\u300cX-CSRF-TOKEN\u300d\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059)\n\n\u8a8d\u8a3c\u5f8c\u306e\u9077\u79fb\u65b9\u6cd5\u3068\u3057\u3066Forward\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b(\u2260Redirect) \n\nAuthenticationSuccessHandler\u3068AuthenticationFailureHandler\u306b\u3066\u3001\u9077\u79fb\u5148\u306b\u30d5\u30a9\u30ef\u30fc\u30c9\u3059\u308b\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u9077\u79fb\u5148\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7\u306e\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.formLogin()\n                .successForwardUrl(\"/authenticationSuccess\") // ForwardAuthenticationSuccessHandler\u304c\u8a2d\u5b9a\u3055\u308c\u308b\n                .failureForwardUrl(\"/authenticationError\"); // ForwardAuthenticationFailureHandler\u304c\u8a2d\u5b9a\u3055\u308c\u308b\n    }\n}\n\n\n@AuthenticationPrincipal\u3092\u4f7f\u3063\u3066Spring MVC\u306eHandler\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u305b\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u67d4\u8edf\u306b\u306a\u308b \n\nSpring Security 4.1\u304b\u3089\u3001@AuthenticationPrincipal\u306bexpression\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002expression\u5c5e\u6027\u3092\u5229\u7528\u3059\u308b\u3068\u3001Spring MVC\u306eHandler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u3001\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u60c5\u5831(Authentication#getPrincipal()\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024)\u304c\u4fdd\u6301\u3059\u308b\u4efb\u610f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u5024\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n4.1\u301c\npackage com.example.component;\n\nimport org.springframework.security.core.annotation.AuthenticationPrincipal;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@RequestMapping(\"/profile\")\n@Controller\npublic class ProfileController {\n\n    @GetMapping\n    public String view(@AuthenticationPrincipal(expression = \"account\") Account account, Model model) {\n        model.addAttribute(account);\n        return \"profile\";\n    }\n\n}\n\n\nSpring Security 4.0\u3067\u306f\u3001UserDetails\u3092\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u301c4.0\n@GetMapping\npublic String view(@AuthenticationPrincipal MyUserDetails userDetails, Model model) {\n    model.addAttribute(userDetails.getAccount()); // \u660e\u793a\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n    return \"profile\";\n}\n\n\n\nWeb\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u3067\u30d1\u30b9\u5909\u6570\u5024\u304c\u53c2\u7167\u53ef\u80fd\u306b\u306a\u308b \n\nSpring Security 4.1\u304b\u3089\u3001Web\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u306b\u5bfe\u3057\u3066\u30d1\u30b9\u5909\u6570\u5024\u3092\u53c2\u7167\u3057\u305f\u8a8d\u53ef\u5236\u5fa1\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f \uff01\uff01\uff01 \u500b\u4eba\u7684\u306b\u306fSpring Security 4.1\u306e\u6700\u5927\u306e\u76ee\u7389\u3060\u3068\u601d\u3063\u3066\u3044\u307e\u3059    \n\u3053\u3053\u3067\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc\u540d\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308bWeb\u30ea\u30bd\u30fc\u30b9(/accounts/{username})\u3078\u306e\u8a8d\u53ef\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30ea\u30bd\u30fc\u30b9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u51e6\u7406(Handler\u30e1\u30bd\u30c3\u30c9)\u306f\u3001\u304a\u305d\u3089\u304f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\npackage com.example.component;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.dao.EmptyResultDataAccessException;\nimport org.springframework.jdbc.core.BeanPropertyRowMapper;\nimport org.springframework.jdbc.core.namedparam.MapSqlParameterSource;\nimport org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@RequestMapping(\"/accounts\")\n@Controller\npublic class AccountController {\n\n    @Autowired\n    NamedParameterJdbcOperations namedParameterJdbcOperations;\n\n    @GetMapping(\"{username}\")\n    public String detail(@PathVariable String username, Model model) {\n        try {\n            Account account = namedParameterJdbcOperations.queryForObject(\n                    \"SELECT username, password, name, authorities FROM account WHERE username = :username\"\n                    , new MapSqlParameterSource(\"username\", username),\n                    new BeanPropertyRowMapper<>(Account.class));\n            model.addAttribute(account);\n        } catch (EmptyResultDataAccessException e) {\n            model.addAttribute(new Account()); // \u3053\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u9069\u5207\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u9069\u5207\u306a\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3057\u307e\u3057\u3087\uff01\uff01\n        }\n        return \"accountDetail\";\n    }\n\n}\n\n\u3053\u3053\u3067\u306f\u3001\u7ba1\u7406\u8005(ROLE_ADMIN)\u306f\u3059\u3079\u3066\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u4e00\u822c\u30e6\u30fc\u30b6\u30fc(ROLE_USER)\u306f\u81ea\u5206\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u8a8d\u53ef\u5236\u5fa1\u3057\u307e\u3059\u3002\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.authorizeRequests()\n                .antMatchers(\"/accounts/{username}\")\n                        .access(\"isAuthenticated() and (hasRole('ADMIN') or (#username == principal.username))\")\n                .anyRequest()\n                        .authenticated();\n    }\n}\n\n\u30d1\u30b9\u5909\u6570\u300c{\u30d1\u30b9\u5909\u6570\u540d}\u300d\u306b\u306f\u3001expression\u5c5e\u6027\u306e\u4e2d\u3067\u306f\u300c#\u30d1\u30b9\u5909\u6570\u540d\u300d\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u30ca\u30a4\u30b9\u3067\u3059\u306d    \n\n\u30e1\u30bd\u30c3\u30c9\u8a8d\u53ef\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b \n\nSpring Security 4.1\u304b\u3089\u3001Java\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\u6642\u306b\u4f7f\u7528\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(@PreAuthorize\u306a\u3069)\u304c\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\npackage com.example.component;\n\nimport org.springframework.security.access.prepost.PreAuthorize;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\n\n@PreAuthorize(\"isAuthenticated() and (#username == principal.username\"))\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface SelfPermission {\n}\n\n\n@SelfPermission // \u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\n@GetMapping(\"{username}\")\npublic String detail(@PathVariable String username, Model model) {\n    // ...\n}\n\n\u306a\u304a\u3001\u30e1\u30bd\u30c3\u30c9\u8a8d\u53ef\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001Java\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n@EnableGlobalMethodSecurity(prePostEnabled = true) // Java\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\u6a5f\u80fd\u3092\u6709\u52b9\u5316\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n}\n\n\nSCrypt\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306ePasswordEncoder\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b \n\nSpring Security 4.1\u304b\u3089\u3001SCrypt\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305fPasswordEncoder\u306e\u5b9f\u88c5\u30af\u30e9\u30b9(SCryptPasswordEncoder)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002SCryptPasswordEncoder\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001Bouncy Castle Provider\u3092\u4f9d\u5b58\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8\u306b\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n<dependency>\n    <groupId>org.bouncycastle</groupId>\n    <artifactId>bcprov-jdk15on</artifactId>\n    <version>1.54</version> <!-- \u6295\u7a3f\u6642\u70b9\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3 -->\n</dependency>\n\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return new SCryptPasswordEncoder();\n    }\n}\n\nSCryptPasswordEncoder\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4fdd\u6301\u3059\u308b\u30ab\u30e9\u30e0\u30b5\u30a4\u30ba\u3092140\u6587\u5b57\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nsrc/main/resources/schema.sql\nCREATE TABLE account (\n    username NVARCHAR(128) PRIMARY KEY,\n    password CHAR(140) NOT NULL, -- 140\u6587\u5b57\u3078\u5909\u66f4\n    name NVARCHAR(128) NOT NULL,\n    authorities TEXT\n);\n\n\n\nsrc/main/resources/data.sql\n-- password = demo(Hashed by SCrypt algorithm)\n\nINSERT INTO account (username, password, name, authorities) \n    VALUES ('demo', '$e0801$xJb9axROvGvtu06vSPZBaDtD8Xpd/4NzTVBkP81E4ZrBSvnF276hkCj7R9YbxpVW3jY2e03Mqk8EFlgOH6FV3g==$2m3TbgXxYCuDK4PQt8eHDwoXOIahFEMCwznuT7DFSo0=', 'Kazuki Shimizu', 'ROLE_USER');\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('admin', '$e0801$xJb9axROvGvtu06vSPZBaDtD8Xpd/4NzTVBkP81E4ZrBSvnF276hkCj7R9YbxpVW3jY2e03Mqk8EFlgOH6FV3g==$2m3TbgXxYCuDK4PQt8eHDwoXOIahFEMCwznuT7DFSo0=', 'Administrator', 'ROLE_ADMIN,ROLE_USER');\n\n\n\nPBKDF2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306ePasswordEncoder\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b \n\nSpring Security 4.1\u304b\u3089\u3001PBKDF2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305fPasswordEncoder\u306e\u5b9f\u88c5\u30af\u30e9\u30b9(Pbkdf2PasswordEncoder)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return new Pbkdf2PasswordEncoder();\n    }\n}\n\nSCryptPasswordEncoder\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4fdd\u6301\u3059\u308b\u30ab\u30e9\u30e0\u30b5\u30a4\u30ba\u309296\u6587\u5b57\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nsrc/main/resources/schema.sql\nCREATE TABLE account (\n    username NVARCHAR(128) PRIMARY KEY,\n    password CHAR(96) NOT NULL, -- 96\u6587\u5b57\u3078\u5909\u66f4\n    name NVARCHAR(128) NOT NULL,\n    authorities TEXT\n);\n\n\n\nsrc/main/resources/data.sql\n-- password = demo(Hashed by PBKDF2 algorithm)\n\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('demo', 'a35fd0d412a681a1a35fd0d412a681a154793f9cc057581cf317649f4ab1766d15aea67b9bef7f062a348907160e7752', 'Kazuki Shimizu', 'ROLE_USER');\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('admin', 'a35fd0d412a681a1a35fd0d412a681a154793f9cc057581cf317649f4ab1766d15aea67b9bef7f062a348907160e7752', 'Administrator', 'ROLE_ADMIN,ROLE_USER');\n\n\n\n\u30c6\u30b9\u30c8\u6642\u306b\u533f\u540d\u30e6\u30fc\u30b6\u30fc\u7528\u306e\u8a8d\u8a3c\u60c5\u5831\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u3067\u304d\u308b \n\nSpring Security 4.1\u304b\u3089\u3001\u533f\u540d\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(@WithAnonymousUser)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\npackage com.example;\n\nimport com.example.component.AccountController;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.security.access.AccessDeniedException;\nimport org.springframework.security.test.context.support.WithAnonymousUser;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport org.springframework.ui.ExtendedModelMap;\n\n\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class Sec41DemoApplicationTests {\n\n    @Autowired\n    AccountController accountController;\n\n    @WithAnonymousUser // \u533f\u540d\u30e6\u30fc\u30b6\u30fc\u7528\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    @Test(expected = AccessDeniedException.class)\n    public void detailByAnonymous() throws Exception {\n\n        accountController.detail(\"demo\", new ExtendedModelMap());\n\n    }\n\n}\n\n\n\u30c6\u30b9\u30c8\u6642\u306b\u5229\u7528\u3059\u308bUserDetailsService\u3092\u6307\u5b9a\u3067\u304d\u308b \n\nSpring Security 4.1\u304b\u3089\u3001@WithUserDetails\u306buserDetailsServiceBeanName\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002userDetailsServiceBeanName\u5c5e\u6027\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30c6\u30b9\u30c8\u6642\u306b\u4f7f\u7528\u3059\u308bUserDetailsService\u306eBean\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n@WithUserDetails(value = \"admin\", userDetailsServiceBeanName = \"myUserDetailsService\")\n@Test(expected = AccessDeniedException.class)\npublic void anonymous() throws Exception {\n\n    accountController.detail(\"demo\", new ExtendedModelMap());\n\n}\n\n\n\u30c6\u30b9\u30c8\u6642\u306b\u5229\u7528\u3059\u308b\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b \n\nSpring Security 4.1\u304b\u3089\u3001\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(@WithMockUser\u306a\u3069)\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n@WithMockUser(\"demo\")\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface DemoUser {}\n\n\n@DemoUser // \u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\n@Test(expected = AccessDeniedException.class)\npublic void anonymous() throws Exception {\n\n    accountController.detail(\"admin\", new ExtendedModelMap());\n\n}\n\n\nSecurityMockMvcResultMatchers#withAuthorities\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3067\u6271\u3048\u308b\u578b\u304c\u67d4\u8edf\u306b\u306a\u308b \n\nSpring Security 4.1\u304b\u3089\u3001SecurityMockMvcResultMatchers#withAuthorities\u30e1\u30bd\u30c3\u30c9\u3067\u3001GrantedAuthority\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u30ad\u30e3\u30b9\u30c8\u306a\u3057\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\npackage com.example;\n\nimport com.example.component.AccountController;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport org.springframework.test.web.servlet.MockMvc;\nimport org.springframework.test.web.servlet.setup.MockMvcBuilders;\nimport org.springframework.web.context.WebApplicationContext;\n\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.formLogin;\nimport static org.springframework.security.test.web.servlet.response.SecurityMockMvcResultMatchers.authenticated;\nimport static org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.springSecurity;\nimport static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.redirectedUrl;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class Sec41DemoApplicationTests {\n\n    @Autowired\n    WebApplicationContext was;\n\n    MockMvc mockMvc;\n\n    @Autowired\n    AccountController accountController;\n\n    @Before\n    public void setupMockMvc() {\n        this.mockMvc = MockMvcBuilders.webAppContextSetup(was)\n                .apply(springSecurity())\n                .build();\n    }\n\n    @Test\n    public void login() throws Exception {\n\n        // \u8981\u7d20\u306e\u578b\u3092\u5177\u8c61\u30af\u30e9\u30b9(SimpleGrantedAuthority)\u306b\u3057\u3066\u3082\u30fb\u30fb\u30fb\n        List<SimpleGrantedAuthority> expectedAuthorities = new ArrayList<>(); \n        expectedAuthorities.add(new SimpleGrantedAuthority(\"ROLE_USER\"));\n\n        mockMvc.perform(\n                formLogin().user(\"demo\").password(\"demo\"))\n                .andExpect(status().isFound()).andExpect(redirectedUrl(\"/\"))\n                .andExpect(authenticated().withAuthorities(expectedAuthorities)); // \u30ad\u30e3\u30b9\u30c8\u306a\u3057\u3067withAuthorities\u306b\u6307\u5b9a\u53ef\u80fd\uff01\uff01\n    }\n}\n\n\u3067\u3082\u30fb\u30fb\u30fb\u30fb\u3053\u306e\u30b1\u30fc\u30b9\u3060\u3068\u3001Spring Security\u304b\u3089\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bAuthorityUtils#createAuthorityList\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u65b9\u304c\u3044\u3044\u3067\u3059\u3051\u3069\u306d\u30fb\u30fb\u30fb(\u305d\u3046\u3059\u308c\u3070Spring Security 4.0\u3067\u3082\u554f\u984c\u306a\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u53ef\u80fd\u3067\u304d\u307e\u3059)\n@Test\npublic void login() throws Exception {\n\n    List<GrantedAuthority> expectedAuthorities = AuthorityUtils.createAuthorityList(\"ROLE_USER\");\n\n    mockMvc.perform(\n            formLogin().user(\"demo\").password(\"demo\"))\n            .andExpect(status().isFound()).andExpect(redirectedUrl(\"/\"))\n            .andExpect(authenticated().withAuthorities(expectedAuthorities));\n}\n\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306fSpring Security 4.1\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u7c21\u5358\u306b\u306a\u3063\u305f\u308a\u3001Web\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u3067\u30d1\u30b9\u5909\u6570\u5024\u306e\u53c2\u7167\u304c\u53ef\u80fd\u306b\u306a\u3063\u305f\u308a\u3001\u65b0\u3057\u3044PasswordEncoder\u304c\u8ffd\u52a0\u3055\u308c\u305f\u308a\u3001\u65b0\u3057\u3044\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d8\u30c3\u30c0\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u308a\u3068\u3001Spring Security 4.1\u306f\u78ba\u5b9f\u306b\u9032\u5316\u3057\u3066\u3044\u307e\u3059\u3002Spring Security\u306f\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001Spring MVC\u4ee5\u5916\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u3082\u9069\u7528\u3067\u304d\u307e\u3059\u3002Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u306b\u306f\u662f\u975eSpring Security\u3092\uff01\uff01 \n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://docs.spring.io/spring-security/site/docs/4.1.2.RELEASE/reference/htmlsingle/\nhttp://terasolunaorg.github.io/guideline/5.1.0.RELEASE/ja/Security/index.html\n\n\u4eca\u56de\u306f\u30ea\u30ea\u30fc\u30b9\u304b\u3089\u7d04\uff11\u30f6\u6708\u7d4c\u904e\u3057\u305fSpring Security 4.1\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u300c[Spring 4.3\u306e\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/172d132ff8f4ba098888)\u300d\u3068\u540c\u69d8\u306b\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u300c[What\u2019s New in Spring Security 4.1](http://docs.spring.io/spring-security/site/docs/4.1.0.RELEASE/reference/htmlsingle/#new)\u300d\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u5185\u5bb9\u3092\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ea4\u3048\u3066\u5177\u4f53\u7684\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\uff08\u9006\u306b\u3044\u3046\u3068\u3001\u300cWhat\u2019s New in Spring Security 4.1\u300d\u306b\u306e\u3063\u3066\u3044\u306a\u3044\u5909\u66f4\u70b9\u306f\u7d39\u4ecb\u3057\u306a\u3044\u306e\u3067\u3001\u3042\u3057\u304b\u3089\u305a\u30fb\u30fb\u30fb :wink: \uff09\n\n\u305d\u3082\u305d\u3082Spring Security\u3063\u3066\u30fb\u30fb\u30fb\u3068\u3044\u3046\u65b9\u306f\u3001\u300c[TERASOLUNA Server Framework (5.x)\u306e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3](http://terasolunaorg.github.io/guideline/5.1.0.RELEASE/ja/Security/index.html)\u300d\u3092\u8aad\u3082\u3046\uff01\uff01Spring Secuirty 4.0\u30d9\u30fc\u30b9\u3067\u306eSpring Security\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3001\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u7528\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3001\u5177\u4f53\u7684\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8981\u4ef6\u3092\u5145\u305f\u3059\u305f\u3081\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u4f53\u7cfb\u7684\u306bSpring Security\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u4f7f\u3044\u65b9\u304c\u5b66\u3079\u307e\u3059 :+1:\nSpring Boot\u524d\u63d0\u3067\u306f\u306a\u3044\uff0bXML\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u4f8b\u3057\u304b\u8f09\u3063\u3066\u306a\u3044\u306e\u304c\u5c11\u3057\u3060\u3051\u6b8b\u5ff5\u3067\u3059\u304c\u3001\u305d\u3053\u306fSpring Boot\u3084Spring Security\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u7167\u3057\u3066\u8aad\u307f\u66ff\u3048\u307e\u3057\u3087\u3046\uff01\uff01\n\n## 4.1.1.RELEASE (4.1.2.RELEAE)\n\n* Spring 4.1.1.REALEASE\u3067\u8ffd\u52a0\u3055\u308c\u305f`MvcRequestMatcher`\u306e\u8aac\u660e\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\uff08\u5dee\u5206\u306f\u3001\u300c\u26058/13\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\n# \u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n* Spring Security 4.1.0.RELEASE\n* Spring Boot 1.4.0.BUILD-SNAPSHOT (2016/6/5\u6642\u70b9)\n\n# What\u2019s New in Spring Security 4.1\n\nSpring Security\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u306f\u3001\u4ee5\u4e0b\u306e6\u3064\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u6539\u5584\u70b9\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002Spring 4.3\u306e\u6295\u7a3f\u3067\u306f\u30bb\u30af\u30b7\u30e7\u30f3\u6bce\u306b\u6295\u7a3f\u3092\u308f\u3051\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u3044\u3063\u304d\u306b\u8aac\u660e\u3057\u307e\u3059\uff01\uff01\n\n## Java Configuration Improvements\n\n\u4ee5\u4e0b\u306f\u3001JavaConfig\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n| No | JavaConfig\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| :---: | --- |\n| 1 | \u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f`UserDetailsService`\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306eBean\u5b9a\u7fa9\u304c\u3061\u3087\u301c\u7c21\u5358\u306b\u306a\u308a\u307e\u3057\u305f\u3002\uff08\u3063\u3066\u304bDI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3057\u3061\u3083\u3048\u3070\u81ea\u52d5\u691c\u51fa\u3055\u308c\u3061\u3083\u3046 :v: \uff09 |\n| 2 | \u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f`AuthenticationProvider`\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306eBean\u5b9a\u7fa9\u304c\u3061\u3087\u301c\u7c21\u5358\u306b\u306a\u308a\u307e\u3057\u305f\u3002\uff08\u3053\u3061\u3089\u3082DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3057\u3061\u3083\u3048\u3070\u81ea\u52d5\u691c\u51fa\u3055\u308c\u3061\u3083\u3046 :v: \uff09 |\n| 3 | `LogoutSuccessHandler`\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u7a2e\u985e\u6bce(`RequestMatcher`\u6bce)\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u7a2e\u985e\u306b\u5fdc\u3058\u3066\u30ed\u30b0\u30a2\u30a6\u30c8\u6210\u529f\u6642\u306e\u30ec\u30b9\u30dd\u30f3\u30b9(\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u307f\u3001HTML\u3001JSON\u306a\u3069)\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u307e\u3059\u3002 |\n| 4 | \u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f`InvalidSessionStrategy`\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 |\n| 5 | \u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u6307\u5b9a\u3057\u305f\u767b\u9332\u6e08\u307f\u306e\u30d5\u30a3\u30eb\u30bf\u3068\u540c\u3058\u30dd\u30b8\u30b7\u30e7\u30f3(\u512a\u5148\u9806)\u306b\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 |\n\n## Web Application Security Improvements\n\n\u4ee5\u4e0b\u306f\u3001Web\u30a2\u30d7\u30ea\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n| No | Web\u30a2\u30d7\u30ea\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| :---: | --- |\n| 6 | Web\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u306b\u3066\u3001Spring MVC\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u30eb\u30fc\u30eb\u3068\u9023\u52d5\u3057\u305f`RequestMatcher`(`MvcRequestMatcher`)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 \u300c\u26058/13\u8ffd\u52a0\u300d |\n| 7 | XSS\u653b\u6483\u5bfe\u7b56\u3068\u3057\u3066\u3001\u300c[Content Security Policy (CSP)](https://developer.mozilla.org/ja/docs/Web/Security/CSP)\u300d\u7528\u306eHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u51fa\u529b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002 |\n| 8 | \u507d\u9020\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306b\u3088\u308b\u4e2d\u9593\u8005\u653b\u6483\u5bfe\u7b56\u3068\u3057\u3066\u3001\u300c[HTTP Public Key Pinning (HPKP)](https://developer.mozilla.org/ja/docs/Web/Security/Public_Key_Pinning)\u300d\u7528\u306eHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u51fa\u529b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002 |\n| 9 | CSRF\u30c8\u30fc\u30af\u30f3\u306e\u4fdd\u5b58\u5148\u3068\u3057\u3066Cookie\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001[AngularJS\u306eCSRF\u5bfe\u7b56\u6a5f\u80fd](https://docs.angularjs.org/api/ng/service/$http#cross-site-request-forgery-xsrf-protection)\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u52d5\u4f5c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002 |\n| 10 | `AuthenticationSuccessHandler`\u3068`AuthenticationFailureHandler`\u306b\u3066\u3001\u9077\u79fb\u5148\u306b\u30d5\u30a9\u30ef\u30fc\u30c9\u3059\u308b\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u9077\u79fb\u5148\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7\u306e\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 11 | `@AuthenticationPrincipal`\u306b`expression`\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002`expression`\u5c5e\u6027\u3092\u5229\u7528\u3059\u308b\u3068\u3001Spring MVC\u306eHandler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u3001\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u60c5\u5831(`Authentication#getPrincipal()`\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024)\u304c\u4fdd\u6301\u3059\u308b\u4efb\u610f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u5024\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 |\n\n## Authorization Improvements\n\n\u4ee5\u4e0b\u306f\u3001\u8a8d\u53ef\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n| No | \u8a8d\u53ef\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| :---: | --- |\n| 12 | Web\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u306b\u3066\u3001(\u5f85\u671b\u306e\u30fb\u30fb\u30fb)\u30d1\u30b9\u5909\u6570\u5024\u3092\u53c2\u7167\u3057\u305f\u8a8d\u53ef\u5236\u5fa1\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f :+1: |\n| 13 | Java\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\u6642\u306b\u4f7f\u7528\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(`@PreAuthorize`\u306a\u3069)\u304c\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 |\n\n## Crypto Module Improvements\n\n\u4ee5\u4e0b\u306f\u3001\u6697\u53f7\u5316\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n| No | \u6697\u53f7\u5316\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| :---: | --- |\n| 14 | SCrypt\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f`PasswordEncoder`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 |\n| 15 | PBKDF2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f`PasswordEncoder`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 |\n\n## Testing Improvements\n\n\u4ee5\u4e0b\u306f\u3001\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n| No | \u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| :---: | --- |\n| 16 | \u533f\u540d\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(`@WithAnonymousUser`)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 |\n| 17 | `@WithUserDetails`\u306b`userDetailsServiceBeanName`\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002`userDetailsServiceBeanName`\u5c5e\u6027\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30c6\u30b9\u30c8\u6642\u306b\u4f7f\u7528\u3059\u308b`UserDetailsService`\u306eBean\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 |\n| 18 | \u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(`@WithMockUser`\u306a\u3069)\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 |\n| 19 | `SecurityMockMvcResultMatchers#withAuthorities`\u30e1\u30bd\u30c3\u30c9\u3067\u3001`GrantedAuthority`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u30ad\u30e3\u30b9\u30c8\u306a\u3057\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff1f\uff1f\uff08\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u5185\u5bb9\u3068\u306a\u3093\u3068\u306a\u304f\u9055\u3044\u6c17\u304c\u3059\u308b\u3051\u3069\u30fb\u30fb\u30fb\u305f\u3076\u3093\u3042\u3063\u3066\u3044\u308b\u3068\u601d\u3046\u30fb\u30fb\u30fb :sweat_smile: \uff09|\n\n\n## General Improvements\n\n\u4ee5\u4e0b\u306f\u3001Spring Security\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e(\u975e\u6a5f\u80fd\u7684\u306a)\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n| No | Spring Security\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5909\u66f4\u70b9 |\n| :---: | --- |\n| 20 | \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u518d\u7de8\u3055\u308c\u305f\u6a21\u69d8\u3067\u3059\u3002 ([Issue#3752](https://github.com/spring-projects/spring-security/issues/3752)) |\n| 21 | Issue\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u304c\u3001Spring JIRA\u304b\u3089GitHub\u306b\u79fb\u7ba1\u3055\u308c\u307e\u3057\u305f\u3002 |\n\n# \u52d5\u4f5c\u691c\u8a3c\u7528\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6e96\u5099\n\n\u4eca\u56de\u7d39\u4ecb\u3059\u308b\u5185\u5bb9\u306e\u52d5\u4f5c\u691c\u8a3c\u306f\u3001Spring Boot 1.4(Spring Security 4.1)\u3067\u884c\u3044\u307e\u3059\u3002\u5b9f\u969b\u306b\u30a2\u30d7\u30ea\u4e0a\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u65b9\u306f\u3001\u300c[SPRING INITIALIZR](https://start.spring.io/)\u300d\u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\n<img width=\"1189\" alt=\"sec41-create-project.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/117313/0611a73f-3694-4341-83c9-18576cf14077.png\">\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fZip\u30d5\u30a1\u30a4\u30eb\u3092\u9069\u5f53\u306a\u3068\u3053\u308d\u306b\u89e3\u51cd\u3057\u3001`pom.xml`\u306b\u4ee5\u4e0b\u306e\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```xml:pom.xml\n<dependency>\n    <groupId>org.thymeleaf.extras</groupId>\n    <artifactId>thymeleaf-extras-springsecurity4</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-test</artifactId>\n</dependency>\n```\n\nSpring Boot\u8d77\u52d5\u3092\u8d77\u52d5\u3057\u307e\u3057\u3087\u3046\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u505c\u6b62\u306f\u300cCtl+C\u300d\u3067\u3059\u3002\n\n```text\n$ ./mvnw spring-boot:run\n...\n2016-06-05 14:04:57.149  INFO 59552 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup\n2016-06-05 14:04:57.215  INFO 59552 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)\n2016-06-05 14:04:57.220  INFO 59552 --- [           main] com.example.Sec41DemoApplication         : Started Sec41DemoApplication in 3.553 seconds (JVM running for 6.06)\n\n```\n\n# `UserDetailsService`(+`PasswordEncoder`)\u306e\u9069\u7528\u304c\u8d85\u7d76\u7c21\u5358\u306b\u306a\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f`UserDetailsService`\u53ca\u3073`PasswordEncoder`\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u65b9\u6cd5\u304c\u8d85\u7d76\u7c21\u5358\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u30fb\u30fb\u30fbSpring\u306eDI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308b\u3068\u81ea\u52d5\u691c\u51fa\u3057\u3066\u304f\u308c\u307e\u3059 :laughing: \n\n## Spring Boot\u304c\u4f7f\u3046\u30c7\u30d5\u30a9\u30eb\u30c8\u306e`UserDetailsService`\u3068`PasswordEncoder`\u306f\uff1f\n\nSpring Boot\u306e\u81ea\u52d5\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30a4\u30f3\u30e1\u30e2\u30ea\u5b9f\u88c5\u306e`InMemoryUserDetailsManager`\u304c\u5229\u7528\u3055\u308c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30e6\u30fc\u30b6\u30fc\u3068\u3057\u3066\u300c\u30e6\u30fc\u30b6\u540d\uff1a`user`\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\uff1a\u8d77\u52d5\u6642\u306b\u751f\u6210\u3057\u305fUUID\u300d\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u8d77\u52d5\u6642\u306b\u751f\u6210\u3055\u308c\u308b\u30d1\u30b9\u30ef\u30fc\u30c9(UUID)\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u4f7f\u7528\u3055\u308c\u308b`PasswordEncoder`\u306f\u3001\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u307e\u307e\u6271\u3046`PlaintextPasswordEncoder`\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\n...\n2016-06-05 14:10:05.479  INFO 59590 --- [ost-startStop-1] b.a.s.AuthenticationManagerConfiguration : \n\nUsing default security password: c93c44f6-9194-4249-b360-6d8a1753b946\n\n2016-06-05 14:10:05.555  INFO 59590 --- [ost-startStop-1] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: Ant [pattern='/css/**'], []\n...\n```\n\n## \u72ec\u81ea\u306eDB\u8a8d\u8a3c\u7528\u306e`UserDetailsService`\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\n\n\u3053\u3053\u3067\u306f\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3059\u308b`UserDetailsService`\u3092\u4f5c\u6210\u3057\u3001Spring Security\u306b\u63d0\u4f9b\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u8a8d\u8a3c\u7528\u306e\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```java:\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\npublic class Account implements Serializable {\n    private static final long serialVersionUID = 1L;\n    private String username;\n    private String password;\n    private String name;\n    private String authorities;\n    // ...\n}\n```\n```java:\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308bUserDetails\nimport org.springframework.security.core.authority.AuthorityUtils;\nimport org.springframework.security.core.userdetails.User;\n\npublic class MyUserDetails extends User {\n    private static final long serialVersionUID = 1L;\n    private final Account account;\n    public MyUserDetails(Account account) {\n        super(account.getUsername(), account.getPassword(),\n                AuthorityUtils.commaSeparatedStringToAuthorityList(account.getAuthorities()));\n        this.account = account;\n    }\n    public Account getAccount() {\n        return account;\n    }\n}\n```\n\n\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b`UserDetails`\u3092\u8fd4\u5374\u3059\u308b`UserDetailsService`\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```java\n@Service // \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u6a5f\u80fd\u3067DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308c\u3070\u81ea\u52d5\u691c\u51fa\u3055\u308c\u308b\npublic class MyUserDetailsService implements UserDetailsService {\n    @Autowired\n    NamedParameterJdbcOperations namedParameterJdbcOperations;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        try {\n            Account account = namedParameterJdbcOperations.queryForObject(\n                    \"SELECT username, password, name, authorities FROM account WHERE username = :username\"\n                    , new MapSqlParameterSource(\"username\", username),\n                    new BeanPropertyRowMapper<>(Account.class));\n            return new MyUserDetails(account);\n        } catch (IncorrectResultSizeDataAccessException e) {\n            throw new UsernameNotFoundException(\"A specified user does not exist.\", e);\n        }\n    }\n}\n```\n\n\u5b9f\u306f\u3001\u3053\u308c\u3060\u3051\u3067\u4f5c\u6210\u3057\u305f`MyUserDetailsService`\u30af\u30e9\u30b9\u304c\u3001Spring Security\u306b\u9069\u7528\u3055\u308c\u3061\u3083\u3044\u307e\u3059\uff01\uff01\u30dd\u30a4\u30f3\u30c8\u306f\u30fb\u30fb\u30fb`@Service`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u5bfe\u8c61\u306b\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u6a5f\u80fd\u306b\u3088\u3063\u3066DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u305f`MyUserDetailsService`\u304c\u3001Spring Security\u306b\u3088\u3063\u3066\u81ea\u52d5\u691c\u51fa\u3055\u308c\u307e\u3059\u3002\u4f5c\u6210\u3057\u305f`UserDetailsService`\u3092\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u5bfe\u8c61\u306b\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u666e\u901a\u306bBean\u5b9a\u7fa9\u3059\u308c\u3070OK\u3067\u3059\u3002\n\n```java:\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u3057\u306a\u3044\u5834\u5408\u306eBean\u5b9a\u7fa9\u4f8b\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    UserDetailsService userDetailsService(){\n        return new MyUserDetailsService();\n    }\n}\n```\n\n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fbDDL\u3068DML\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u3053\u308c\u3089\u306eSQL\u30d5\u30a1\u30a4\u30eb\u306f\u3001Spring Boot\u304c\u81ea\u52d5\u3067\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```sql:src/resources/schema.sql\nCREATE TABLE account (\n    username NVARCHAR(128) PRIMARY KEY,\n    password CHAR(60) NOT NULL,\n    name NVARCHAR(128) NOT NULL,\n    authorities TEXT\n);\n```\n\n```sql:src/resources/data.sql\n-- password = demo(Hashed by Bcrypt algorithm)\n\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('demo', '$2a$10$oxSJl.keBwxmsMLkcT9lPeAIxfNTPNQxpeywMrF7A3kVszwUTqfTK', 'Kazuki Shimizu', 'ROLE_USER');\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('admin', '$2a$10$oxSJl.keBwxmsMLkcT9lPeAIxfNTPNQxpeywMrF7A3kVszwUTqfTK', 'Administrator', 'ROLE_ADMIN,ROLE_USER');\n```\n\n## `PasswordEncoder`\u306e\u9069\u7528\n\nSpring Boot\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u3060\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u3068\u3057\u3066\u6271\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u3053\u3053\u3067\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u7ba1\u7406\u3059\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u30cf\u30c3\u30b7\u30e5\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3042\u3046`PasswordEncoder`\u3092\u9069\u7528\u3057\u307e\u3057\u3087\u3046\u3002`PasswordEncoder`\u3082\u3001`UserDetailsService`\u3068\u540c\u69d8\u306bDI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308b\u3060\u3051\u3067\u81ea\u52d5\u691c\u51fa\u3055\u308c\u307e\u3059\uff01\uff01\n\n```java\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n}\n```\n\n# `AuthenticationProvider`\u306e\u9069\u7528\u304c\u8d85\u7d76\u7c21\u5358\u306b\u306a\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f`AuthenticationProvider`\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u65b9\u6cd5\u304c\u8d85\u7d76\u7c21\u5358\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u30fb\u30fb\u30fbSpring\u306eDI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308b\u3068\u81ea\u52d5\u691c\u51fa\u3057\u3066\u304f\u308c\u307e\u3059 :laughing: \n\n## \u72ec\u81ea\u306e`AuthenticationProvider`\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\n\n\u3053\u3053\u3067\u306f\u3001Spring Security\u304b\u3089\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b`DaoAuthenticationProvider`\u306e\u30c1\u30a7\u30c3\u30af\u51e6\u7406\u3092\u62e1\u5f35\u3057\u3066\u307f\u307e\u3059\u3002\n\n```java\n@Component // \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u6a5f\u80fd\u3067DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3059\u308c\u3070\u81ea\u52d5\u691c\u51fa\u3055\u308c\u308b\npublic class MyDaoAuthenticationProvider extends DaoAuthenticationProvider {\n\n    @Override\n    protected void additionalAuthenticationChecks(UserDetails userDetails, UsernamePasswordAuthenticationToken authentication) throws AuthenticationException {\n        // ... Please add a check\n        // ... (\u7701\u7565)\n        super.additionalAuthenticationChecks(userDetails, authentication);\n        // ... Please add a check\n        // ... (\u7701\u7565)\n    }\n\n    @Autowired\n    public void setUserDetailsService(UserDetailsService userDetailsService) {\n        super.setUserDetailsService(userDetailsService);\n    }\n    @Autowired\n    public void setPasswordEncoder(PasswordEncoder passwordEncoder) {\n        super.setPasswordEncoder(passwordEncoder);\n    }\n}\n```\n\n\u4f5c\u6210\u3057\u305f`AuthenticationProvider`\u3092\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u5bfe\u8c61\u306b\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u666e\u901a\u306bBean\u5b9a\u7fa9\u3059\u308c\u3070OK\u3067\u3059\u3002\n\n```java:\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30b9\u30ad\u30e3\u30f3\u3057\u306a\u3044\u5834\u5408\u306eBean\u5b9a\u7fa9\u4f8b\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    AuthenticationProvider authenticationProvider() {\n        return new MyDaoAuthenticationProvider();\n    }\n}\n```\n\n# `LogoutSuccessHandler`\u306e\u8907\u6570\u767b\u9332\u304c\u53ef\u80fd\u306b\u306a\u308b :+1: \n\n`LogoutSuccessHandler`\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u7a2e\u985e\u6bce(`RequestMatcher`\u6bce)\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u7a2e\u985e\u306b\u5fdc\u3058\u3066\u30ed\u30b0\u30a2\u30a6\u30c8\u6210\u529f\u6642\u306e\u30ec\u30b9\u30dd\u30f3\u30b9(\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u307f\u3001HTML\u3001JSON\u306a\u3069)\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001Ajax\u306e\u5834\u5408\u306f\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9(200 OK)\u306e\u307f\u3092\u8fd4\u5374\u3057\u3001Ajax\u3067\u306a\u3051\u308c\u3070\u30ed\u30b0\u30a4\u30f3\u753b\u9762(`/login?logout`)\u306b\u9077\u79fb\u3055\u305b\u308b\u5834\u5408\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin().permitAll();\n        http.authorizeRequests().anyRequest().authenticated();\n        // ...\n        http.logout()\n                // Ajax\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306f\u300c200 OK\u300d\u306e\u307f\u3092\u8fd4\u5374\n                .defaultLogoutSuccessHandlerFor(new HttpStatusReturningLogoutSuccessHandler(),\n                        request -> \"XMLHttpRequest\".equals(request.getHeader(\"X-Requested-With\")))\n                .permitAll();\n    }\n}\n```\n\n\u30d5\u30a9\u30fc\u30e0\u3068Ajax\u3092\u4f7f\u3063\u3066\u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b\u753b\u9762\u3082\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```xml:pom.xml\n<dependency>\n    <groupId>org.webjars</groupId>\n    <artifactId>jquery</artifactId>\n    <version>2.2.4</version>\n</dependency>\n```\n\n```html:src/main/resources/templates/home.html\n<!DOCTYPE html>\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n    <meta charset=\"UTF-8\"/>\n    <script th:src=\"@{/webjars/jquery/2.2.4/jquery.js}\"/>\n    <script type=\"text/javascript\">\n        $(function () {\n            $(\"#logout\").click(function () {\n                $.ajax({\n                    url: '/logout',\n                    type: 'POST',\n                    success: function () {\n                        window.location = \"/login?logout\";\n                    },\n                    error: function (data) {\n                        console.log(data);\n                    }\n                });\n\n            });\n            $(document).ajaxSend(function (event, xhr, options) {\n                var token = $(\"meta[name='_csrf']\").attr(\"content\");\n                var header = $(\"meta[name='_csrf_header']\").attr(\"content\");\n                xhr.setRequestHeader(header, token);\n            });\n        });\n    </script>\n    <meta name=\"_csrf\" th:content=\"${_csrf.token}\"/>\n    <meta name=\"_csrf_header\" th:content=\"${_csrf.headerName}\"/>\n</head>\n<body>\n<h3>\u30e1\u30cb\u30e5\u30fc</h3>\n\n<!-- \u30d5\u30a9\u30fc\u30e0\u3092\u4f7f\u3063\u305f\u30ed\u30b0\u30a2\u30a6\u30c8\u30dc\u30bf\u30f3 -->\n<form th:action=\"@{/logout}\" method=\"post\">\n    <button>\u30ed\u30b0\u30a2\u30a6\u30c8</button>\n</form>\n\n<br/>\n\n<!-- Ajax\u3092\u4f7f\u3063\u305f\u30ed\u30b0\u30a2\u30a6\u30c8\u30dc\u30bf\u30f3 -->\n<button id=\"logout\">\u30ed\u30b0\u30a2\u30a6\u30c8 for Ajax</button>\n\n</body>\n</html>\n```\n\n```java:src/main/java/com/example/component/WelcomeController.java\npackage com.example.component;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.GetMapping;\n\n@Controller\npublic class WelcomeController {\n\n    @GetMapping(\"/\")\n    public String home() {\n        return \"home\";\n    }\n\n}\n```\n\n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u30fb\u5f8c\u8ff0\u3059\u308b\u300cContent Security Policy (CSP)\u300d\u5bfe\u7b56\u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u3001`<script>`\u8981\u7d20\u5185\u306eJava Script\u304c\u5b9f\u884c\u3067\u304d\u306a\u304f\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001`<script>`\u5185\u306e\u30b3\u30fc\u30c9\u3092js\u30d5\u30a1\u30a4\u30eb\u306b\u79fb\u52d5\u3059\u308b\u306e\u304c\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7684\u306b\u306f\u4e00\u756a\u5b89\u5168\u3067\u3059\u3002\n\n# `InvalidSessionStrategy`\u306e\u9069\u7528\u304c\u7c21\u5358\u306b\u306a\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f`InvalidSessionStrategy`\u3092Spring Security\u306b\u9069\u7528\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.sessionManagement()\n                .invalidSessionStrategy(new MyInvalidSessionStrategy());\n    }\n}\n```\n\n# \u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\u4f4d\u7f6e\u306e\u6307\u5b9a\u304c\u67d4\u8edf\u306b\u306a\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u6307\u5b9a\u3057\u305f\u767b\u9332\u6e08\u307f\u306e\u30d5\u30a3\u30eb\u30bf\u3068\u540c\u3058\u30dd\u30b8\u30b7\u30e7\u30f3(\u512a\u5148\u9806)\u306b\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.addFilterAt(new MyFilter(), UsernamePasswordAuthenticationFilter.class);\n    }\n}\n```\n\n`UsernamePasswordAuthenticationFilter.class`\u3068\u540c\u3058\u30dd\u30b8\u30b7\u30e7\u30f3(\u512a\u5148\u9806)\u3067\u3001\u6307\u5b9a\u3057\u305f\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u304cSpring Security\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u540c\u3058\u512a\u5148\u9806\u4f4d\u3067\u767b\u9332\u3055\u308c\u307e\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u306e\u30b1\u30fc\u30b9\u3067\u7b2c\uff11\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u306e\u65b9\u304c\u5148\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\n# Spring MVC\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u30eb\u30fc\u30eb\u3068\u9023\u52d5\u3057\u305f`RequestMatcher`\u304c\u8ffd\u52a0\u3055\u308c\u308b :+1: \n\nSpring Security **4.1.1**\u304b\u3089\u3001Spring MVC\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u30eb\u30fc\u30eb\u3068\u9023\u52d5\u3057\u305f`RequestMatcher`(`MvcRequestMatcher`)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3067\u3053\u306e\u3088\u3046\u306a\u6a5f\u80fd\u8ffd\u52a0\u304c\u884c\u308f\u308c\u305f\u306e\u306f\u3001\u3069\u3046\u3084\u3089\u300c[cve-2016-5007](https://pivotal.io/security/cve-2016-5007)\u300d\u306e\u8106\u5f31\u6027\u5bfe\u7b56\u306b\u95a2\u4fc2\u3057\u3066\u3044\u308b\u304b\u3089\u307f\u305f\u3044\u3067\u3059 :sweat_smile: \n\ncve-2016-5007\u306e\u8106\u5f31\u6027\u306e\u8a73\u7d30\u306f\u3001\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n* https://github.com/spring-projects/spring-security/issues/3964\n* https://pivotal.io/security/cve-2016-5007\n* https://jira.spring.io/browse/SEC-2534\n\n\u306a\u304a\u3001Spring Security\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u3082URL\u306e\u89e3\u91c8\u306e\u9055\u3044\u306b\u3088\u3063\u3066Spring Security\u306e\u8a2d\u5b9a\u3092\b\u3059\u308a\u629c\u3051\u308b\u30b1\u30fc\u30b9\u306e\u8aac\u660e\u3084\u3001`MvcRequestMatcher`\u3092\u5229\u7528\u3057\u3066\u3059\u308a\u629c\u3051\u3092\u9632\u6b62\u3059\u308b\u65b9\u6cd5\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n* http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#mvc-requestmatcher\n\n\u4ee5\u4e0b\u306b\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u7d39\u4ecb\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4f8b\u306b\u3001URL\u306e\u89e3\u91c8\u306e\u9055\u3044\u306b\u3088\u3063\u3066\u767a\u751f\u3059\u308b\u3059\u308a\u629c\u3051\u4f8b\u3068`MvcRequestMatcher`\u306e\u5229\u7528\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u7ba1\u7406\u8005\u5411\u3051\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```java:\u7ba1\u7406\u8005\u5411\u3051\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n@RequestMapping(\"/admin\")\npublic String admin() {\n    // ...\n}\n```\n\n\u7ba1\u7406\u8005\u5411\u3051\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u5bfe\u3057\u3066\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u3051\u308b\u5834\u5408\u3001\u591a\u304f\u306e\u958b\u767a\u8005\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9a\u7fa9\u306b\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```java\nprotected configure(HttpSecurity http) throws Exception {\n    http.authorizeRequests()\n            .antMatchers(\"/admin\").hasRole(\"ADMIN\");\n}\n```\n\n\u3071\u3063\u3068\u307f\u554f\u984c\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u304c\u30fb\u30fb\u30fbSpring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u30eb\u30fc\u30eb\u3067\u306f\u3001\u300c/admin\u300d\u306b\u52a0\u3048\u3066\u4ee5\u4e0b\u306e\u30d1\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3082`admin`\u30e1\u30bd\u30c3\u30c9\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\uff08\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u3053\u306e\u3042\u305f\u308a\u306e\u52d5\u4f5c\u306f\u3001[Spring MVC\u5074\u306e\u8a2d\u5b9a\u3092\u5909\u66f4](http://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#mvc-config-path-matching)\u3059\u308b\u3053\u3068\u3067\u52d5\u4f5c\u3092\u5909\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002\uff09\n\n* \u300c/admin/\u300d\n* \u300c/admin.\u62e1\u5f35\u5b50\u300d\uff08\u4f8b\uff1a /admin.html, /admin.json, /admin.xml, etc ...\uff09\n\n\n\u3064\u307e\u308a\u30fb\u30fb\u30fbSpring Security\u5074\u306e\u8a2d\u5b9a\u304c\u300c/admin\u300d\u3060\u3051\u3060\u3068\u300c/admin/\u300d\u3084\u300c/admin.html\u300d\u304c\u3059\u308a\u629c\u3051\u3066\u3057\u307e\u3046\u308f\u3051\u3067\u3059 :scream: :scream: :scream: `antMatchers`\u306b\u306f\u8907\u6570\u306e\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u300c/admin/\u3068/admin.*\u300d\u3082\u5bfe\u8c61\u306b\u52a0\u3048\u308c\u3070\u3059\u308a\u629c\u3051\u306a\u3044\u6c17\u3082\u3059\u308b\u3051\u3069\u3001\u305d\u3093\u306a\u5358\u7d14\u306a\u8a71\u3058\u3083\u306a\u3044\u306e\u304b\u306a\uff01\uff1f\n\n\u3067\u3001\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3068\u3057\u3066\u3001Spring MVC\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u30eb\u30fc\u30eb\u3068\u9023\u643a\u3059\u308b`RequestMatcher`(`MvcRequestMatcher`)\u304c\u5c0e\u5165\u3055\u308c\u305f\u308f\u3051\u3067\u3059\u3002`MvcRequestMatcher`\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9a\u7fa9\u306b\u5909\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n```java\nprotected configure(HttpSecurity http) throws Exception {\n    http.authorizeRequests()\n            .mvcMatchers(\"/admin\").hasRole(\"ADMIN\"); // mvcMatchers\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\uff01\uff01\n}\n```\n\n> Note: \u30e1\u30bd\u30c3\u30c9\u8a8d\u53ef\u306e\u4f75\u7528\u306b\u3064\u3044\u3066\n>\n> \u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u30ce\u30fc\u30c8\u306b\u306f\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u305f[Java\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\uff08\u30e1\u30bd\u30c3\u30c9\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\uff09](http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#jc-method)\u3068\u306e\u4f75\u7528\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\u4eee\u306bWeb\u30ec\u30a4\u30e4\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u3059\u308a\u629c\u3051\u3066\u3082\u3001Java\u30e1\u30bd\u30c3\u30c9\u306b\u9069\u5207\u306a\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u4e0d\u6b63\u306a\u30a2\u30af\u30bb\u30b9\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6a5f\u5bc6\u5ea6\u304c\u9ad8\u3044\u60c5\u5831\u3092\u6271\u3046\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u306e\u4f75\u7528\u3092\u691c\u8a0e\u3057\u305f\u65b9\u304c\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\n\n\u3055\u3089\u306b\u3001Spring Security **4.1.2**\u304b\u3089\u306f\u3001`HttpSecurity`\u306e\u9069\u7528\u7bc4\u56f2\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u969b\u306b\u3082`MvcRequestMatcher`\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```java:\u5358\u4e00\u306e\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u5bfe\u8c61\u3059\u308b\u5834\u5408\nprotected void configure(HttpSecurity http) throws Exception {\n    http.mvcMatcher(\"/admin/**\") // \u9069\u7528\u7bc4\u56f2\u306e\u6307\u5b9a\u3067\u3082\u5229\u7528\u3067\u304d\u308b\n            .authorizeRequests()\n            .antMatchers(\"/admin/system\").hasRole(\"SYS_ADMIN\")\n            .antMatchers(\"/admin/infra\").hasRole(\"INFRA_ADMIN\");\n}\n```\n\nor \n\n```java:\u8907\u6570\u306e\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u5bfe\u8c61\u306b\u3059\u308b\u5834\u5408\nprotected void configure(HttpSecurity http) throws Exception {\n    http.requestMatchers()\n            .mvcMatchers(\"/admin/system/**\", \"/admin/infra/**\") // \u9069\u7528\u7bc4\u56f2\u306e\u6307\u5b9a\u3067\u3082\u5229\u7528\u3067\u304d\u308b\n            .and()\n            .authorizeRequests().anyRequest().hasRole(\"SUPER_ADMIN\");\n```\n\nSpring Security\u3092Spring MVC\u3068\u4e00\u7dd2\u306b\u4f7f\u3046\u5834\u5408\u306f\u3001`MvcRequestMatcher`\u3092\u4f7f\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\uff01\uff01\u3063\u3066\u8a71\u3067\u3059\u306d :wink: \n\n\n\n# Content Security Policy (CSP)\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001XSS\u653b\u6483\u5bfe\u7b56\u3068\u3057\u3066\u3001\u300c[Content Security Policy (CSP)](https://developer.mozilla.org/ja/docs/Web/Security/CSP)\u300d\u7528\u306eHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0(Content-Security-Policy\u3084Content-Security-Policy-Report-Only)\u306e\u51fa\u529b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.headers()\n                .contentSecurityPolicy(\"default-src 'self'\");\n    }\n}\n```\n\n# HTTP Public Key Pinning (HPKP)\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001\u507d\u9020\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306b\u3088\u308b\u4e2d\u9593\u8005\u653b\u6483\u5bfe\u7b56\u3068\u3057\u3066\u3001\u300c[HTTP Public Key Pinning (HPKP)](https://developer.mozilla.org/ja/docs/Web/Security/Public_Key_Pinning)\u300d\u7528\u306eHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0(Public-Key-Pins\u3084Public-Key-Pins-Report-Only)\u306e\u51fa\u529b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.headers()\n                .httpPublicKeyPinning()\n                .addSha256Pins(\"d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=\",\n                               \"E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=\");\n    }\n}\n```\n\n# CSRF\u30c8\u30fc\u30af\u30f3\u306e\u4fdd\u5b58\u5148\u3068\u3057\u3066Cookie\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001CSRF\u30c8\u30fc\u30af\u30f3\u306e\u4fdd\u5b58\u5148\u3068\u3057\u3066Cookie(`CookieCsrfTokenRepository`)\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001[AngularJS\u306eCSRF\u5bfe\u7b56\u6a5f\u80fd](https://docs.angularjs.org/api/ng/service/$http#cross-site-request-forgery-xsrf-protection)\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u52d5\u4f5c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002 \n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.csrf()\n                .csrfTokenRepository(new CookieCsrfTokenRepository());\n    }\n}\n```\n\n\u306a\u304a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u7528\u3055\u308c\u308bCookie\u540d\u306f\u300cXSRF-TOKEN\u300d\u3067\u3001CSRF\u30c8\u30fc\u30af\u30f3\u5024\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u306f\u300c_csrf\u300d\u3001CSRF\u30c8\u30fc\u30af\u30f3\u5024\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u540d\u306f\u300cX-XSRF-TOKEN\u300d\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u540d\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c`HttpSessionCsrfTokenRepository`\u4f7f\u7528\u6642\u3068\u3053\u3068\u306a\u308b\u70b9\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002(`HttpSessionCsrfTokenRepository`\u4f7f\u7528\u6642\u306f\u300cX-CSRF-TOKEN\u300d\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059)\n\n\n# \u8a8d\u8a3c\u5f8c\u306e\u9077\u79fb\u65b9\u6cd5\u3068\u3057\u3066Forward\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b(\u2260Redirect) :+1: \n\n`AuthenticationSuccessHandler`\u3068`AuthenticationFailureHandler`\u306b\u3066\u3001\u9077\u79fb\u5148\u306b\u30d5\u30a9\u30ef\u30fc\u30c9\u3059\u308b\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u9077\u79fb\u5148\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7\u306e\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.formLogin()\n                .successForwardUrl(\"/authenticationSuccess\") // ForwardAuthenticationSuccessHandler\u304c\u8a2d\u5b9a\u3055\u308c\u308b\n                .failureForwardUrl(\"/authenticationError\"); // ForwardAuthenticationFailureHandler\u304c\u8a2d\u5b9a\u3055\u308c\u308b\n    }\n}\n```\n\n\n# `@AuthenticationPrincipal`\u3092\u4f7f\u3063\u3066Spring MVC\u306eHandler\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u305b\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u67d4\u8edf\u306b\u306a\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001`@AuthenticationPrincipal`\u306b`expression`\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002`expression`\u5c5e\u6027\u3092\u5229\u7528\u3059\u308b\u3068\u3001Spring MVC\u306eHandler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u3001\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u60c5\u5831(`Authentication#getPrincipal()`\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024)\u304c\u4fdd\u6301\u3059\u308b\u4efb\u610f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u5024\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:4.1\u301c\npackage com.example.component;\n\nimport org.springframework.security.core.annotation.AuthenticationPrincipal;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@RequestMapping(\"/profile\")\n@Controller\npublic class ProfileController {\n\n    @GetMapping\n    public String view(@AuthenticationPrincipal(expression = \"account\") Account account, Model model) {\n        model.addAttribute(account);\n        return \"profile\";\n    }\n\n}\n```\n\nSpring Security 4.0\u3067\u306f\u3001`UserDetails`\u3092\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n```java:\u301c4.0\n@GetMapping\npublic String view(@AuthenticationPrincipal MyUserDetails userDetails, Model model) {\n    model.addAttribute(userDetails.getAccount()); // \u660e\u793a\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n    return \"profile\";\n}\n```\n\n# Web\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u3067\u30d1\u30b9\u5909\u6570\u5024\u304c\u53c2\u7167\u53ef\u80fd\u306b\u306a\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001Web\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u306b\u5bfe\u3057\u3066**\u30d1\u30b9\u5909\u6570\u5024\u3092\u53c2\u7167\u3057\u305f\u8a8d\u53ef\u5236\u5fa1**\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f \uff01\uff01\uff01 \u500b\u4eba\u7684\u306b\u306fSpring Security 4.1\u306e\u6700\u5927\u306e\u76ee\u7389\u3060\u3068\u601d\u3063\u3066\u3044\u307e\u3059 :laughing: :laughing: :laughing: \n\n\u3053\u3053\u3067\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc\u540d\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308bWeb\u30ea\u30bd\u30fc\u30b9(`/accounts/{username}`)\u3078\u306e\u8a8d\u53ef\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30ea\u30bd\u30fc\u30b9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u51e6\u7406(Handler\u30e1\u30bd\u30c3\u30c9)\u306f\u3001\u304a\u305d\u3089\u304f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\npackage com.example.component;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.dao.EmptyResultDataAccessException;\nimport org.springframework.jdbc.core.BeanPropertyRowMapper;\nimport org.springframework.jdbc.core.namedparam.MapSqlParameterSource;\nimport org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@RequestMapping(\"/accounts\")\n@Controller\npublic class AccountController {\n\n    @Autowired\n    NamedParameterJdbcOperations namedParameterJdbcOperations;\n\n    @GetMapping(\"{username}\")\n    public String detail(@PathVariable String username, Model model) {\n        try {\n            Account account = namedParameterJdbcOperations.queryForObject(\n                    \"SELECT username, password, name, authorities FROM account WHERE username = :username\"\n                    , new MapSqlParameterSource(\"username\", username),\n                    new BeanPropertyRowMapper<>(Account.class));\n            model.addAttribute(account);\n        } catch (EmptyResultDataAccessException e) {\n            model.addAttribute(new Account()); // \u3053\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u9069\u5207\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u9069\u5207\u306a\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3057\u307e\u3057\u3087\uff01\uff01\n        }\n        return \"accountDetail\";\n    }\n\n}\n```\n\n\u3053\u3053\u3067\u306f\u3001\u7ba1\u7406\u8005(`ROLE_ADMIN`)\u306f\u3059\u3079\u3066\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u4e00\u822c\u30e6\u30fc\u30b6\u30fc(`ROLE_USER`)\u306f\u81ea\u5206\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u8a8d\u53ef\u5236\u5fa1\u3057\u307e\u3059\u3002\n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.authorizeRequests()\n                .antMatchers(\"/accounts/{username}\")\n                        .access(\"isAuthenticated() and (hasRole('ADMIN') or (#username == principal.username))\")\n                .anyRequest()\n                        .authenticated();\n    }\n}\n```\n\n\u30d1\u30b9\u5909\u6570\u300c`{\u30d1\u30b9\u5909\u6570\u540d}`\u300d\u306b\u306f\u3001`expression`\u5c5e\u6027\u306e\u4e2d\u3067\u306f\u300c`#\u30d1\u30b9\u5909\u6570\u540d`\u300d\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u30ca\u30a4\u30b9\u3067\u3059\u306d :+1: :+1: :+1: \n\n\n# \u30e1\u30bd\u30c3\u30c9\u8a8d\u53ef\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001Java\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\u6642\u306b\u4f7f\u7528\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(`@PreAuthorize`\u306a\u3069)\u304c\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```java:\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\npackage com.example.component;\n\nimport org.springframework.security.access.prepost.PreAuthorize;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\n\n@PreAuthorize(\"isAuthenticated() and (#username == principal.username\"))\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface SelfPermission {\n}\n```\n\n```java\n@SelfPermission // \u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\n@GetMapping(\"{username}\")\npublic String detail(@PathVariable String username, Model model) {\n    // ...\n}\n```\n\n\u306a\u304a\u3001\u30e1\u30bd\u30c3\u30c9\u8a8d\u53ef\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001Java\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```java\n@EnableGlobalMethodSecurity(prePostEnabled = true) // Java\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u8a8d\u53ef\u6a5f\u80fd\u3092\u6709\u52b9\u5316\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n}\n```\n\n# SCrypt\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e`PasswordEncoder`\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001SCrypt\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f`PasswordEncoder`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9(`SCryptPasswordEncoder`)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002`SCryptPasswordEncoder`\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001Bouncy Castle Provider\u3092\u4f9d\u5b58\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8\u306b\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```xml\n<dependency>\n    <groupId>org.bouncycastle</groupId>\n    <artifactId>bcprov-jdk15on</artifactId>\n    <version>1.54</version> <!-- \u6295\u7a3f\u6642\u70b9\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3 -->\n</dependency>\n```\n\n```java\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return new SCryptPasswordEncoder();\n    }\n}\n```\n\n`SCryptPasswordEncoder`\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4fdd\u6301\u3059\u308b\u30ab\u30e9\u30e0\u30b5\u30a4\u30ba\u3092140\u6587\u5b57\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```sql:src/main/resources/schema.sql\nCREATE TABLE account (\n    username NVARCHAR(128) PRIMARY KEY,\n    password CHAR(140) NOT NULL, -- 140\u6587\u5b57\u3078\u5909\u66f4\n    name NVARCHAR(128) NOT NULL,\n    authorities TEXT\n);\n```\n\n```sql:src/main/resources/data.sql\n-- password = demo(Hashed by SCrypt algorithm)\n\nINSERT INTO account (username, password, name, authorities) \n    VALUES ('demo', '$e0801$xJb9axROvGvtu06vSPZBaDtD8Xpd/4NzTVBkP81E4ZrBSvnF276hkCj7R9YbxpVW3jY2e03Mqk8EFlgOH6FV3g==$2m3TbgXxYCuDK4PQt8eHDwoXOIahFEMCwznuT7DFSo0=', 'Kazuki Shimizu', 'ROLE_USER');\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('admin', '$e0801$xJb9axROvGvtu06vSPZBaDtD8Xpd/4NzTVBkP81E4ZrBSvnF276hkCj7R9YbxpVW3jY2e03Mqk8EFlgOH6FV3g==$2m3TbgXxYCuDK4PQt8eHDwoXOIahFEMCwznuT7DFSo0=', 'Administrator', 'ROLE_ADMIN,ROLE_USER');\n```\n\n# PBKDF2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e`PasswordEncoder`\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001PBKDF2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f`PasswordEncoder`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9(`Pbkdf2PasswordEncoder`)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n```java\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return new Pbkdf2PasswordEncoder();\n    }\n}\n```\n\n`SCryptPasswordEncoder`\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4fdd\u6301\u3059\u308b\u30ab\u30e9\u30e0\u30b5\u30a4\u30ba\u309296\u6587\u5b57\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```sql:src/main/resources/schema.sql\nCREATE TABLE account (\n    username NVARCHAR(128) PRIMARY KEY,\n    password CHAR(96) NOT NULL, -- 96\u6587\u5b57\u3078\u5909\u66f4\n    name NVARCHAR(128) NOT NULL,\n    authorities TEXT\n);\n```\n\n```sql:src/main/resources/data.sql\n-- password = demo(Hashed by PBKDF2 algorithm)\n\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('demo', 'a35fd0d412a681a1a35fd0d412a681a154793f9cc057581cf317649f4ab1766d15aea67b9bef7f062a348907160e7752', 'Kazuki Shimizu', 'ROLE_USER');\nINSERT INTO account (username, password, name, authorities)\n    VALUES ('admin', 'a35fd0d412a681a1a35fd0d412a681a154793f9cc057581cf317649f4ab1766d15aea67b9bef7f062a348907160e7752', 'Administrator', 'ROLE_ADMIN,ROLE_USER');\n```\n\n# \u30c6\u30b9\u30c8\u6642\u306b\u533f\u540d\u30e6\u30fc\u30b6\u30fc\u7528\u306e\u8a8d\u8a3c\u60c5\u5831\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u3067\u304d\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001\u533f\u540d\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(`@WithAnonymousUser`)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n```java\npackage com.example;\n\nimport com.example.component.AccountController;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.security.access.AccessDeniedException;\nimport org.springframework.security.test.context.support.WithAnonymousUser;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport org.springframework.ui.ExtendedModelMap;\n\n\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class Sec41DemoApplicationTests {\n\n    @Autowired\n    AccountController accountController;\n\n    @WithAnonymousUser // \u533f\u540d\u30e6\u30fc\u30b6\u30fc\u7528\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    @Test(expected = AccessDeniedException.class)\n    public void detailByAnonymous() throws Exception {\n\n        accountController.detail(\"demo\", new ExtendedModelMap());\n\n    }\n\n}\n```\n\n# \u30c6\u30b9\u30c8\u6642\u306b\u5229\u7528\u3059\u308b`UserDetailsService`\u3092\u6307\u5b9a\u3067\u304d\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001`@WithUserDetails`\u306b`userDetailsServiceBeanName`\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002`userDetailsServiceBeanName`\u5c5e\u6027\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30c6\u30b9\u30c8\u6642\u306b\u4f7f\u7528\u3059\u308b`UserDetailsService`\u306eBean\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java\n@WithUserDetails(value = \"admin\", userDetailsServiceBeanName = \"myUserDetailsService\")\n@Test(expected = AccessDeniedException.class)\npublic void anonymous() throws Exception {\n\n    accountController.detail(\"demo\", new ExtendedModelMap());\n\n}\n```\n\n# \u30c6\u30b9\u30c8\u6642\u306b\u5229\u7528\u3059\u308b\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(`@WithMockUser`\u306a\u3069)\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```java:\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n@WithMockUser(\"demo\")\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface DemoUser {}\n```\n\n```java\n@DemoUser // \u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\n@Test(expected = AccessDeniedException.class)\npublic void anonymous() throws Exception {\n\n    accountController.detail(\"admin\", new ExtendedModelMap());\n\n}\n```\n\n# `SecurityMockMvcResultMatchers#withAuthorities`\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3067\u6271\u3048\u308b\u578b\u304c\u67d4\u8edf\u306b\u306a\u308b :+1: \n\nSpring Security 4.1\u304b\u3089\u3001`SecurityMockMvcResultMatchers#withAuthorities`\u30e1\u30bd\u30c3\u30c9\u3067\u3001`GrantedAuthority`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u30ad\u30e3\u30b9\u30c8\u306a\u3057\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```java\npackage com.example;\n\nimport com.example.component.AccountController;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport org.springframework.test.web.servlet.MockMvc;\nimport org.springframework.test.web.servlet.setup.MockMvcBuilders;\nimport org.springframework.web.context.WebApplicationContext;\n\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.formLogin;\nimport static org.springframework.security.test.web.servlet.response.SecurityMockMvcResultMatchers.authenticated;\nimport static org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.springSecurity;\nimport static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.redirectedUrl;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class Sec41DemoApplicationTests {\n\n    @Autowired\n    WebApplicationContext was;\n\n    MockMvc mockMvc;\n\n    @Autowired\n    AccountController accountController;\n\n    @Before\n    public void setupMockMvc() {\n        this.mockMvc = MockMvcBuilders.webAppContextSetup(was)\n                .apply(springSecurity())\n                .build();\n    }\n\n    @Test\n    public void login() throws Exception {\n\n        // \u8981\u7d20\u306e\u578b\u3092\u5177\u8c61\u30af\u30e9\u30b9(SimpleGrantedAuthority)\u306b\u3057\u3066\u3082\u30fb\u30fb\u30fb\n        List<SimpleGrantedAuthority> expectedAuthorities = new ArrayList<>(); \n        expectedAuthorities.add(new SimpleGrantedAuthority(\"ROLE_USER\"));\n\n        mockMvc.perform(\n                formLogin().user(\"demo\").password(\"demo\"))\n                .andExpect(status().isFound()).andExpect(redirectedUrl(\"/\"))\n                .andExpect(authenticated().withAuthorities(expectedAuthorities)); // \u30ad\u30e3\u30b9\u30c8\u306a\u3057\u3067withAuthorities\u306b\u6307\u5b9a\u53ef\u80fd\uff01\uff01\n    }\n}\n```\n\n\u3067\u3082\u30fb\u30fb\u30fb\u30fb\u3053\u306e\u30b1\u30fc\u30b9\u3060\u3068\u3001Spring Security\u304b\u3089\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b`AuthorityUtils#createAuthorityList`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u65b9\u304c\u3044\u3044\u3067\u3059\u3051\u3069\u306d\u30fb\u30fb\u30fb(\u305d\u3046\u3059\u308c\u3070Spring Security 4.0\u3067\u3082\u554f\u984c\u306a\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u53ef\u80fd\u3067\u304d\u307e\u3059)\n\n```java\n@Test\npublic void login() throws Exception {\n\n    List<GrantedAuthority> expectedAuthorities = AuthorityUtils.createAuthorityList(\"ROLE_USER\");\n\n    mockMvc.perform(\n            formLogin().user(\"demo\").password(\"demo\"))\n            .andExpect(status().isFound()).andExpect(redirectedUrl(\"/\"))\n            .andExpect(authenticated().withAuthorities(expectedAuthorities));\n}\n```\n\n# \u307e\u3068\u3081\n\n\u4eca\u56de\u306fSpring Security 4.1\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u7c21\u5358\u306b\u306a\u3063\u305f\u308a\u3001Web\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u8a8d\u53ef\u3067\u30d1\u30b9\u5909\u6570\u5024\u306e\u53c2\u7167\u304c\u53ef\u80fd\u306b\u306a\u3063\u305f\u308a\u3001\u65b0\u3057\u3044`PasswordEncoder`\u304c\u8ffd\u52a0\u3055\u308c\u305f\u308a\u3001\u65b0\u3057\u3044\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d8\u30c3\u30c0\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u308a\u3068\u3001Spring Security 4.1\u306f\u78ba\u5b9f\u306b\u9032\u5316\u3057\u3066\u3044\u307e\u3059\u3002Spring Security\u306f\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001Spring MVC\u4ee5\u5916\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u3082\u9069\u7528\u3067\u304d\u307e\u3059\u3002Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u306b\u306f\u662f\u975eSpring Security\u3092\uff01\uff01 :smile:\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n\n* http://docs.spring.io/spring-security/site/docs/4.1.2.RELEASE/reference/htmlsingle/\n* http://terasolunaorg.github.io/guideline/5.1.0.RELEASE/ja/Security/index.html\n", "tags": ["Java", "spring", "spring-boot", "spring-security", "Security"]}