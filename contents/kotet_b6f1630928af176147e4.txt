{"context": "\u81ea\u5206\u306e\u9032\u6357\u8868\u793a\u7528\u30d1\u30c3\u30b1\u30fc\u30b8progress\u306bPR\u304c\u6765\u305f\u3002\nBars: bug on narrow terminals when non-ascii fill character is used\n\u3069\u3046\u3084\u3089\u6587\u5b57\u5217\u306e\u9577\u3055\u3092\u5f97\u308b\u3068\u304d\u306flength\u3067\u306f\u3044\u3051\u306a\u3044\u6642\u304c\u3042\u308b\u305d\u3046\u3060\u3002\n\n\u3069\u3046\u3044\u3046\u3053\u3068\u304b\nimport std.stdio;\n\nvoid main()\n{\n    string ascii = \"a\";\n    string non_ascii = \"\u3042\";\n    writeln(ascii.length);\n    writeln(non_ascii.length);\n}\n\n\n\u51fa\u529b\u7d50\u679c\n1\n3\n\n\n\"a\"\u3082\"\u3042\"\u30821\u6587\u5b57\u306e\u306f\u305a\u3060\u304c\u3001\"\u3042\".length\u306f3\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3002\nwriteln(cast(void[]) ascii);\nwriteln(cast(void[]) non_ascii);\n\n\n\u51fa\u529b\u7d50\u679c\n[97]\n[227, 129, 130]\n\n\nlength\u306f\u6587\u5b57\u5217\u306e\u30d0\u30a4\u30c8\u6570\u3092\u8fd4\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\nstd.range.primitives.walkLength\nstd.range.primitives.walkLength\u306f\u3001empty == true\u306b\u306a\u308b\u307e\u3067\u4f55\u56depopFront()\u304c\u3067\u304d\u308b\u304b\u5b9f\u969b\u306b\u8a66\u3057\u3066\u307f\u3066\u3001\u305d\u308c\u3067\u5f97\u3089\u308c\u305f\u9577\u3055\u3092\u8fd4\u3059\u3002\nimport std.stdio;\nimport std.range : walkLength;\n\nvoid main()\n{\n    string ascii = \"a\";\n    string non_ascii = \"\u3042\";\n    writeln(ascii.walkLength);\n    writeln(non_ascii.walkLength);\n}\n\n\n\u51fa\u529b\u7d50\u679c\n1\n1\n\n\n\u3061\u3083\u3093\u3068\u6b63\u3057\u3044\u6587\u5b57\u6570\u304c\u5f97\u3089\u308c\u3066\u3044\u308b\u3002\n\u81ea\u5206\u306e\u9032\u6357\u8868\u793a\u7528\u30d1\u30c3\u30b1\u30fc\u30b8[progress](https://github.com/kotet/progress)\u306bPR\u304c\u6765\u305f\u3002\n\n[Bars: bug on narrow terminals when non-ascii fill character is used](https://github.com/kotet/progress/issues/31)\n\n\u3069\u3046\u3084\u3089\u6587\u5b57\u5217\u306e\u9577\u3055\u3092\u5f97\u308b\u3068\u304d\u306f`length`\u3067\u306f\u3044\u3051\u306a\u3044\u6642\u304c\u3042\u308b\u305d\u3046\u3060\u3002\n\n## \u3069\u3046\u3044\u3046\u3053\u3068\u304b\n\n```d\nimport std.stdio;\n\nvoid main()\n{\n    string ascii = \"a\";\n    string non_ascii = \"\u3042\";\n    writeln(ascii.length);\n    writeln(non_ascii.length);\n}\n```\n\n```text:\u51fa\u529b\u7d50\u679c\n1\n3\n```\n\n`\"a\"`\u3082`\"\u3042\"`\u30821\u6587\u5b57\u306e\u306f\u305a\u3060\u304c\u3001`\"\u3042\".length`\u306f`3`\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3002\n\n```d\nwriteln(cast(void[]) ascii);\nwriteln(cast(void[]) non_ascii);\n```\n\n```text:\u51fa\u529b\u7d50\u679c\n[97]\n[227, 129, 130]\n```\n\n`length`\u306f\u6587\u5b57\u5217\u306e\u30d0\u30a4\u30c8\u6570\u3092\u8fd4\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\n## std.range.primitives.walkLength\n\n`std.range.primitives.walkLength`\u306f\u3001`empty == true`\u306b\u306a\u308b\u307e\u3067\u4f55\u56de`popFront()`\u304c\u3067\u304d\u308b\u304b\u5b9f\u969b\u306b\u8a66\u3057\u3066\u307f\u3066\u3001\u305d\u308c\u3067\u5f97\u3089\u308c\u305f\u9577\u3055\u3092\u8fd4\u3059\u3002\n\n```d\nimport std.stdio;\nimport std.range : walkLength;\n\nvoid main()\n{\n    string ascii = \"a\";\n    string non_ascii = \"\u3042\";\n    writeln(ascii.walkLength);\n    writeln(non_ascii.walkLength);\n}\n```\n```text:\u51fa\u529b\u7d50\u679c\n1\n1\n```\n\n\u3061\u3083\u3093\u3068\u6b63\u3057\u3044\u6587\u5b57\u6570\u304c\u5f97\u3089\u308c\u3066\u3044\u308b\u3002\n", "tags": ["dlang"]}