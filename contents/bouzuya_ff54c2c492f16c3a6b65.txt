{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 12 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 12 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u306f ReactiveX \u306e Mathematical and Aggregate Operators \u306b\u3064\u3044\u3066 RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3060\u308a\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305f RxJS 4.0.7 \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nObservable \u306e\u96c6\u7d04\n\nObservable.prototype.average\n\n\nReactiveX - Average operator\nObservable.prototype.average API Document\nObservable.prototype.average Source Code\n\n\u5e73\u5747\u3092\u6d41\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 3, 5])\n  .average()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 3\n// onCompleted\n\naverage \u306f\u5f15\u6570\u306b selector \u3092\u53d6\u308c\u308b\u306e\u3067\u3059\u304c\u3001count \u306f\u5f15\u6570\u306b predicate \u3092\u53d6\u308c\u308b\u306e\u3067\u3001\u4f55\u3092\u57fa\u6e96\u306b\u3057\u3066\u3044\u308b\u306e\u304b\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\nObservable.prototype.concat\n\nconcat \u306f\u7d50\u5408\u306e\u3068\u304d\u306b\u66f8\u3044\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\nObservable.prototype.count\n\n\nReactiveX - Count operator\nObservable.prototype.count API Document\nObservable.prototype.count Source Code\n\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4, 5])\n  .count()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 5\n// onCompleted\n\n\u524d\u8ff0\u306e\u901a\u308a predicate \u3092\u53d6\u308c\u307e\u3059\u3002filter \u3057\u3066\u304b\u3089 count \u3059\u308c\u3070\u3044\u3044\u306e\u306b\u3068\u500b\u4eba\u7684\u306b\u306f\u601d\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\nObservable.prototype.max / Observable.prototype.min\n\n\nReactiveX - Max operator\nObservable.prototype.max API Document\nObservable.prototype.max Source Code\nReactiveX - Min operator\nObservable.prototype.min API Document\nObservable.prototype.min Source Code\n\n\u6700\u5927\u5024 / \u6700\u5c0f\u5024\u3092\u6d41\u3057\u307e\u3059\u3002comparer \u3092\u5f15\u6570\u306b\u53d6\u308c\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 4, 5, 2, 3])\n  .max()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 5\n// onCompleted\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068 Observable.prototype.maxBy / minBy \u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\nObservable.prototype.reduce\n\n\nReactiveX - Reduce operator\nObservable.prototype.reduce API Document\nObservable.prototype.reduce Source Code\n\nArray.prototype.reduce \u76f8\u5f53\u306e\u3082\u306e\u3067\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4, 5])\n  .reduce((sum, i) => sum + i, 0)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 15\n// onCompleted\n\nObservable.prototype.scan \u306e\u969b\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001reduce \u3088\u308a\u3082 scan \u3092\u4f7f\u3046\u5834\u9762\u306e\u307b\u3046\u304c\u591a\u3044\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\n\nObservable.prototype.sum\n\n\nReactiveX - Sum operator\nObservable.prototype.sum API Document\nObservable.prototype.sum Source Code\n\n\u5408\u8a08\u3092\u8fd4\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4, 5])\n  .sum()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 15\n// onCompleted\n\n\u3055\u304d\u307b\u3069\u306e Observable.prototype.reduce \u3067 sum \u3063\u307d\u3044\u3082\u306e\u3092\u66f8\u3044\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u2026\u2026\u3002\u5b9f\u88c5\u81ea\u4f53\u306f reduce \u3092\u4f7f\u3046\u308f\u3051\u3067\u306f\u306a\u304f\u500b\u5225\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\nReactiveX \u306e Mathematical and Aggregate Operators \u3092\u898b\u307e\u3057\u305f\u3002\n\u96e3\u3057\u3044\u52d5\u304d\u306e\u3082\u306e\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 12 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 12 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u306f [ReactiveX \u306e Mathematical and Aggregate Operators](http://reactivex.io/documentation/operators.html#mathematical) \u306b\u3064\u3044\u3066 [RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/observable.md)\u3092\u8aad\u3093\u3060\u308a\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Observable \u306e\u96c6\u7d04\n\n## `Observable.prototype.average`\n\n- [ReactiveX - Average operator](http://reactivex.io/documentation/operators/average.html)\n- [`Observable.prototype.average` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/average.md)\n- [`Observable.prototype.average` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/average.js)\n\n\u5e73\u5747\u3092\u6d41\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 3, 5])\n  .average()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 3\n// onCompleted\n```\n\n`average` \u306f\u5f15\u6570\u306b `selector` \u3092\u53d6\u308c\u308b\u306e\u3067\u3059\u304c\u3001`count` \u306f\u5f15\u6570\u306b `predicate` \u3092\u53d6\u308c\u308b\u306e\u3067\u3001\u4f55\u3092\u57fa\u6e96\u306b\u3057\u3066\u3044\u308b\u306e\u304b\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\n## `Observable.prototype.concat`\n\n`concat` \u306f\u7d50\u5408\u306e\u3068\u304d\u306b\u66f8\u3044\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n## `Observable.prototype.count`\n\n- [ReactiveX - Count operator](http://reactivex.io/documentation/operators/count.html)\n- [`Observable.prototype.count` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/count.md)\n- [`Observable.prototype.count` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/count.js)\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4, 5])\n  .count()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 5\n// onCompleted\n```\n\n\u524d\u8ff0\u306e\u901a\u308a `predicate` \u3092\u53d6\u308c\u307e\u3059\u3002`filter` \u3057\u3066\u304b\u3089 `count` \u3059\u308c\u3070\u3044\u3044\u306e\u306b\u3068\u500b\u4eba\u7684\u306b\u306f\u601d\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n## `Observable.prototype.max` / `Observable.prototype.min`\n\n- [ReactiveX - Max operator](http://reactivex.io/documentation/operators/max.html)\n- [`Observable.prototype.max` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/max.md)\n- [`Observable.prototype.max` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/max.js)\n- [ReactiveX - Min operator](http://reactivex.io/documentation/operators/min.html)\n- [`Observable.prototype.min` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/min.md)\n- [`Observable.prototype.min` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/min.js)\n\n\u6700\u5927\u5024 / \u6700\u5c0f\u5024\u3092\u6d41\u3057\u307e\u3059\u3002`comparer` \u3092\u5f15\u6570\u306b\u53d6\u308c\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 4, 5, 2, 3])\n  .max()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 5\n// onCompleted\n```\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068 `Observable.prototype.maxBy` / `minBy` \u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n## `Observable.prototype.reduce`\n\n- [ReactiveX - Reduce operator](http://reactivex.io/documentation/operators/reduce.html)\n- [`Observable.prototype.reduce` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/reduce.md)\n- [`Observable.prototype.reduce` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/reduce.js)\n\n`Array.prototype.reduce` \u76f8\u5f53\u306e\u3082\u306e\u3067\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4, 5])\n  .reduce((sum, i) => sum + i, 0)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 15\n// onCompleted\n```\n\n`Observable.prototype.scan` \u306e\u969b\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001`reduce` \u3088\u308a\u3082 `scan` \u3092\u4f7f\u3046\u5834\u9762\u306e\u307b\u3046\u304c\u591a\u3044\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\n\n## `Observable.prototype.sum`\n\n- [ReactiveX - Sum operator](http://reactivex.io/documentation/operators/sum.html)\n- [`Observable.prototype.sum` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/sum.md)\n- [`Observable.prototype.sum` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/sum.js)\n\n\u5408\u8a08\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4, 5])\n  .sum()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 15\n// onCompleted\n```\n\n\u3055\u304d\u307b\u3069\u306e `Observable.prototype.reduce` \u3067 `sum` \u3063\u307d\u3044\u3082\u306e\u3092\u66f8\u3044\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u2026\u2026\u3002\u5b9f\u88c5\u81ea\u4f53\u306f `reduce` \u3092\u4f7f\u3046\u308f\u3051\u3067\u306f\u306a\u304f\u500b\u5225\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\n\nReactiveX \u306e Mathematical and Aggregate Operators \u3092\u898b\u307e\u3057\u305f\u3002\n\n\u96e3\u3057\u3044\u52d5\u304d\u306e\u3082\u306e\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}