{"tags": ["TypeScript", "Wikipedia", "mediawiki", "jQuery"], "context": " More than 1 year has passed since last update.TypeScript\u3067Wikipedia\u306e\u60c5\u5831\u3092mediawiki API\u306b\u3088\u308a\u53d6\u5f97\u3059\u308b\u3002\nWikipedia\u306eAPI\u306b\u95a2\u3057\u3066\u306fMediaWiki API\u3092\u4f7f\u3063\u3066Wikipedia\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\n\n\u76ee\u6a19\n\u3042\u308b\u6587\u5b57\u5217\u3092\u542b\u3080\u8a18\u4e8b\u306e\u691c\u7d22\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n\u8fd4\u308a\u5024\u306e\u78ba\u8a8d\nAPI\u30b5\u30f3\u30c9\u30dc\u30c3\u30af\u30b9\u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3059\u308b\u3002\n\u5f62\u5f0f=json\u3001\u64cd\u4f5c=query, list=search\u3001srsearch=\u300c\u691c\u7d22\u6587\u5b57\u5217\u300d\u306b\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308c\u3070\u3001\u8fd4\u308a\u5024\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n\n\nTypeScript\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nAPI\u30b5\u30f3\u30c9\u30dc\u30c3\u30af\u30b9\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u7d50\u679c\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\n\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u306fjquery\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002\n\nWikipedia.ts\nnamespace utils.Wikipedia {\n    const ENDPOINT = 'https://ja.wikipedia.org/w/api.php?'\n    const TITLE_BASE_URL = ENDPOINT + 'action=query&list=search&format=json&srsearch='\n\n    export function search(title: string, success: (infos: Array<SearchInfo>) => void, fail?: (jqXhr: JQueryXHR) => void) {\n        var url = TITLE_BASE_URL + encodeURIComponent(title)\n        var xhr = $.ajax({\n            url: url,\n            type: 'GET',\n            dataType: 'jsonp',\n            jsonpCallback: 'callback'\n        })\n        xhr.then((json: SearchResponseJson) => {\n            success(json.query.search)\n        }, fail)\n    }\n\n    interface SearchResponseJson {\n        query: {\n            search: Array<SearchInfo>\n        }\n    }\n\n    export interface SearchInfo {\n        title: string,\n        snippet: string,\n        wordcount: number,\n        timestamp: string\n    }\n}\n\n\nTypeScript\u3067Wikipedia\u306e\u60c5\u5831\u3092mediawiki API\u306b\u3088\u308a\u53d6\u5f97\u3059\u308b\u3002\nWikipedia\u306eAPI\u306b\u95a2\u3057\u3066\u306f[MediaWiki API\u3092\u4f7f\u3063\u3066Wikipedia\u306e\u60c5\u5831\u3092\u53d6\u5f97](http://qiita.com/yubessy/items/16d2a074be84ee67c01f)\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\n\n# \u76ee\u6a19\n\u3042\u308b\u6587\u5b57\u5217\u3092\u542b\u3080\u8a18\u4e8b\u306e\u691c\u7d22\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n# \u8fd4\u308a\u5024\u306e\u78ba\u8a8d\n[API\u30b5\u30f3\u30c9\u30dc\u30c3\u30af\u30b9](https://ja.wikipedia.org/wiki/%E7%89%B9%E5%88%A5:API%E3%82%B5%E3%83%B3%E3%83%89%E3%83%9C%E3%83%83%E3%82%AF%E3%82%B9)\u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3059\u308b\u3002\n\u5f62\u5f0f=json\u3001\u64cd\u4f5c=query, list=search\u3001srsearch=\u300c\u691c\u7d22\u6587\u5b57\u5217\u300d\u306b\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308c\u3070\u3001\u8fd4\u308a\u5024\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\n![API\u30b5\u30f3\u30c9\u30dc\u30c3\u30af\u30b9.PNG](https://qiita-image-store.s3.amazonaws.com/0/56307/8b35907e-7c67-f6da-f741-f70b0905ca85.png)\n![API\u30b5\u30f3\u30c9\u30dc\u30c3\u30af\u30b9\u7d50\u679c.PNG](https://qiita-image-store.s3.amazonaws.com/0/56307/d22087b8-09ef-d8e2-e61e-576e5aca4ef6.png)\n\n# TypeScript\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nAPI\u30b5\u30f3\u30c9\u30dc\u30c3\u30af\u30b9\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u7d50\u679c\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\n\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u306fjquery\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002\n\n```ts:Wikipedia.ts\nnamespace utils.Wikipedia {\n    const ENDPOINT = 'https://ja.wikipedia.org/w/api.php?'\n    const TITLE_BASE_URL = ENDPOINT + 'action=query&list=search&format=json&srsearch='\n\n    export function search(title: string, success: (infos: Array<SearchInfo>) => void, fail?: (jqXhr: JQueryXHR) => void) {\n        var url = TITLE_BASE_URL + encodeURIComponent(title)\n        var xhr = $.ajax({\n            url: url,\n            type: 'GET',\n            dataType: 'jsonp',\n            jsonpCallback: 'callback'\n        })\n        xhr.then((json: SearchResponseJson) => {\n            success(json.query.search)\n        }, fail)\n    }\n\n    interface SearchResponseJson {\n        query: {\n            search: Array<SearchInfo>\n        }\n    }\n\n    export interface SearchInfo {\n        title: string,\n        snippet: string,\n        wordcount: number,\n        timestamp: string\n    }\n}\n```\n"}