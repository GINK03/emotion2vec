{"context": " More than 1 year has passed since last update.\u524d\u56de\u306fEntityRepository\u304b\u3089Container\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fFormType\u304b\u3089Container\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\nSymfony 2.3.17\n\n\u5b9f\u88c5\u3059\u308b\n\nContainer\u3092\u53c2\u7167\u53ef\u80fd\u306aFormType\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\nAbstractContainerAwareType.php\n<?php\n\nnamespace Some\\MyBundle\\Component\\Form;\n\nuse Symfony\\Component\\DependencyInjection\\ContainerAwareInterface;\nuse Symfony\\Component\\DependencyInjection\\ContainerInterface;\nuse Symfony\\Component\\Form\\AbstractType;\n\nabstract class AbstractContainerAwareType extends AbstractType implements ContainerAwareInterface\n{\n    /**\n     * Container\n     * @var ContainerInterface\n     */\n    protected $container;\n\n    /**\n     * {@inheritdoc}\n     */\n    public function setContainer(ContainerInterface $container = null)\n    {\n        $this->container = $container;\n    }\n\n    /**\n     * Get Container\n     * @return ContainerInterface\n     */\n    public function getContainer()\n    {\n        return $this->container;\n    }\n}\n\n\n\nAbstractContainerAwareType\u306bContainer\u3092\u8a2d\u5b9a\u3059\u308bFormFactory\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\nMyFormFactory.php\n<?php\n\nnamespace Some\\MyBundle\\Component\\Form;\n\nuse Symfony\\Component\\DependencyInjection\\ContainerInterface;\nuse Symfony\\Component\\Form\\FormFactory;\nuse Symfony\\Component\\Form\\FormRegistryInterface;\nuse Symfony\\Component\\Form\\ResolvedFormTypeFactoryInterface;\n\nclass MyFormFactory extends FormFactory\n{\n    /**\n     * Container\n     * @var ContainerInterface\n     */\n    private $container;\n\n    /**\n     * @param FormRegistryInterface $registry\n     * @param ResolvedFormTypeFactoryInterface $resolvedTypeFactory\n     * @param ContainerInterface $container\n     */\n    public function __construct(FormRegistryInterface $registry, ResolvedFormTypeFactoryInterface $resolvedTypeFactory, ContainerInterface $container)\n    {\n        parent::__construct($registry, $resolvedTypeFactory);\n        $this->container = $container;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function createNamedBuilder($name, $type = 'form', $data = null, array $options = array())\n    {\n        if ($type instanceof AbstractContainerAwareType) {\n            $type->setContainer($this->container);\n        }\n\n        return parent::createNamedBuilder($name, $type, $data, $options);\n    }\n}\n\n\n\u30b5\u30fc\u30d3\u30b9\u306b\u767b\u9332\n\nservices.yml\nservices:\n    form.factory: # FrameworkBundle\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u518d\u5b9a\u7fa9\n        class: Some\\MyBundle\\Component\\Form\\MyFormFactory\n        arguments: [ @form.registry, @form.resolved_type_factory, @service_container ]\n\n\n\n\u4f7f\u7528\u3059\u308b\nAbstractContainerAwareType\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u5185\u3067$this->getContainer()\u3059\u308b\u3068Container\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\nSomeType.php\n<?php\n\nnamespace Some\\MyBundle\\Form\\Type;\n\nuse Some\\MyBundle\\Component\\Form\\AbstractContainerAwareType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolverInterface;\n\nclass SomeType extends AbstractContainerAwareType\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $container = $this->getContainer();\n\n        $builder\n            ->add('someColumn', 'choice', [\n                'choices' => $container->getParameter('some.parameter'),\n            ])\n        ;\n\n        $logger = $container->get('logger');\n        $logger->debug('FormType\u304b\u3089\u30ed\u30b0\u51fa\u529b!');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function setDefaultOptions(OptionsResolverInterface $resolver)\n    {\n        $resolver\n            ->setDefaults([\n                'data_class' => 'Some\\MyBundle\\Entity\\SomeTable',\n            ])\n        ;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getName()\n    {\n        return 'some';\n    }\n}\n\n\n\n[\u524d\u56de](http://qiita.com/adarah_g/items/d2a534f127fb641bb511 \"Symfony2\u3067EntityRepository\u304b\u3089Container\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\")\u306fEntityRepository\u304b\u3089Container\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fFormType\u304b\u3089Container\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n## \u74b0\u5883\nSymfony 2.3.17\n\n## \u5b9f\u88c5\u3059\u308b\n### Container\u3092\u53c2\u7167\u53ef\u80fd\u306aFormType\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\n```php:AbstractContainerAwareType.php\n<?php\n\nnamespace Some\\MyBundle\\Component\\Form;\n\nuse Symfony\\Component\\DependencyInjection\\ContainerAwareInterface;\nuse Symfony\\Component\\DependencyInjection\\ContainerInterface;\nuse Symfony\\Component\\Form\\AbstractType;\n\nabstract class AbstractContainerAwareType extends AbstractType implements ContainerAwareInterface\n{\n    /**\n     * Container\n     * @var ContainerInterface\n     */\n    protected $container;\n\n    /**\n     * {@inheritdoc}\n     */\n    public function setContainer(ContainerInterface $container = null)\n    {\n        $this->container = $container;\n    }\n\n    /**\n     * Get Container\n     * @return ContainerInterface\n     */\n    public function getContainer()\n    {\n        return $this->container;\n    }\n}\n```\n\n### AbstractContainerAwareType\u306bContainer\u3092\u8a2d\u5b9a\u3059\u308bFormFactory\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\n```php:MyFormFactory.php\n<?php\n\nnamespace Some\\MyBundle\\Component\\Form;\n\nuse Symfony\\Component\\DependencyInjection\\ContainerInterface;\nuse Symfony\\Component\\Form\\FormFactory;\nuse Symfony\\Component\\Form\\FormRegistryInterface;\nuse Symfony\\Component\\Form\\ResolvedFormTypeFactoryInterface;\n\nclass MyFormFactory extends FormFactory\n{\n    /**\n     * Container\n     * @var ContainerInterface\n     */\n    private $container;\n\n    /**\n     * @param FormRegistryInterface $registry\n     * @param ResolvedFormTypeFactoryInterface $resolvedTypeFactory\n     * @param ContainerInterface $container\n     */\n    public function __construct(FormRegistryInterface $registry, ResolvedFormTypeFactoryInterface $resolvedTypeFactory, ContainerInterface $container)\n    {\n        parent::__construct($registry, $resolvedTypeFactory);\n        $this->container = $container;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function createNamedBuilder($name, $type = 'form', $data = null, array $options = array())\n    {\n        if ($type instanceof AbstractContainerAwareType) {\n            $type->setContainer($this->container);\n        }\n\n        return parent::createNamedBuilder($name, $type, $data, $options);\n    }\n}\n```\n\n\u30b5\u30fc\u30d3\u30b9\u306b\u767b\u9332\n\n```yaml:services.yml\nservices:\n    form.factory: # FrameworkBundle\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u518d\u5b9a\u7fa9\n        class: Some\\MyBundle\\Component\\Form\\MyFormFactory\n        arguments: [ @form.registry, @form.resolved_type_factory, @service_container ]\n```\n\n## \u4f7f\u7528\u3059\u308b\nAbstractContainerAwareType\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u5185\u3067`$this->getContainer()`\u3059\u308b\u3068Container\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\n```php:SomeType.php\n<?php\n\nnamespace Some\\MyBundle\\Form\\Type;\n\nuse Some\\MyBundle\\Component\\Form\\AbstractContainerAwareType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolverInterface;\n\nclass SomeType extends AbstractContainerAwareType\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $container = $this->getContainer();\n\n        $builder\n            ->add('someColumn', 'choice', [\n                'choices' => $container->getParameter('some.parameter'),\n            ])\n        ;\n\n        $logger = $container->get('logger');\n        $logger->debug('FormType\u304b\u3089\u30ed\u30b0\u51fa\u529b!');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function setDefaultOptions(OptionsResolverInterface $resolver)\n    {\n        $resolver\n            ->setDefaults([\n                'data_class' => 'Some\\MyBundle\\Entity\\SomeTable',\n            ])\n        ;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getName()\n    {\n        return 'some';\n    }\n}\n```\n", "tags": ["Symfony2"]}