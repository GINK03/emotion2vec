{"context": " More than 1 year has passed since last update.\n\nstd.concurrency \u5fdc\u7528\u7de8\nstd.concurrency\u3092\u4f7f\u3046\u3053\u3068\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306e\u5e73\u884c\u51e6\u7406\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u306f11\u65e5\u76ee\u306e @repeatedly \u3055\u3093\u306e\u8a18\u4e8b\u306b\u3088\u3063\u3066\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u306e\u5fdc\u7528\u3002\u306a\u306e\u306711\u65e5\u76ee\u3092\u8aad\u3093\u3067\u3044\u306a\u3051\u308c\u3070\u5148\u306b\u305d\u3061\u3089\u3092\u8aad\u3080\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306fstd.concurrency\u306e\u5fdc\u7528\u3068\u3057\u3066\u3001spawn\u306e\u5f15\u6570\u306b\u6e21\u305b\u308b\u3082\u306e\u3084\u3001send\u306e\u5f15\u6570\u306b\u6e21\u305b\u308b\u3082\u306e==receive/receiveOnly\u3067\u53d7\u3051\u53d6\u308c\u308b\u3082\u306e\u306b\u95a2\u3057\u3066\u3001\u8a73\u3057\u304f\u8a9e\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306e\u8a18\u4e8b\u306f\u3001\u4ee5\u4e0b\u306e\u9032\u884c\u306b\u5f93\u3063\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\n\nspawn\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u3082\u306e\n\nsend/receive \u3067\u304d\u308b\u3082\u306e\n\n\n\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\n\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\u3068\u306f\u3001\u3064\u307e\u308a\u3001\n!hasUnsharedAliasing!T\n\u306a\u3001 T \u306e\u3053\u3068\u3067\u3059\u3002\ndlang.org:hasUnsharedAliasing\n\n\ntemplate hasUnsharedAliasing(T...)\n\u5404T\u304c\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u6761\u4ef6\u3092\u307f\u305f\u3059\u5834\u5408\u306btrue\u3092\u8fd4\u3057\u307e\u3059\uff1a\n\n\u751f\u306e\u30dd\u30a4\u30f3\u30bfU*\u3092\u542b\u307f\u3001U\u306fimmutable\u3067\u3082shared\u3067\u3082\u306a\u3044\u3002\n\u914d\u5217U[]\u3092\u542b\u307f\u3001U\u306fimmutable\u3067\u3082shared\u3067\u3082\u306a\u3044\u3002\nclass\u306e\u53c2\u7167\u578bC\u3092\u542b\u307f\u3001C\u306fimmutable\u3067\u3082shared\u3067\u3082\u306a\u3044\u3002(\u8a33\u6ce8: \u305f\u3076\u3093interface\u3082\u3053\u308c\u3068\u540c\u3058)\n\u9023\u60f3\u914d\u5217\u578b\u3092\u542b\u307f\u3001\u305d\u308c\u304cimmutable\u3067\u3082shared\u3067\u3082\u306a\u3044\u3002\ndelegate\u3092\u542b\u307f\u3001\u305d\u308c\u304cshared\u3067\u306f\u306a\u3044\u3002(\u8a33\u6ce8:\u305f\u3076\u3093immutable\u304c\u629c\u3051\u3066\u308b)\n\n\n(\u539f\u6587):\nReturns true if and only if T's representation includes at least one of the following:\n\na raw pointer U* and U is not immutable or shared;\nan array U[] and U is not immutable or shared;\na reference to a class type C and C is not immutable or shared.\nan associative array that is not immutable or shared.\na delegate that is not shared.\n\n\n\n\n\u5b9f\u306f\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u307e\u3055\u306b\u3053\u306e\u76ee\u7684\u306e\u305f\u3081\u3001\u3059\u306a\u308f\u3061\u3001\u3042\u308b\u578bT\u306b\u3088\u3063\u3066\u5f62\u6210\u3055\u308c\u308b\u30c7\u30fc\u30bf\u304c\u3001\u30b9\u30ec\u30c3\u30c9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u9593\u3092\u6e21\u3063\u3066\u53d6\u308a\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u3092\u4e3b\u306a\u76ee\u7684\u3068\u3057\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002\n\u88cf\u8fd4\u305b\u3070 !hasUnsharedAliasing!T \u3067\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001T\u3068\u3044\u3046\u578b\u306b\u62e0\u308b\u30c7\u30fc\u30bf\u304b\u3089\u305f\u3069\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u53c2\u7167\u30fb\u30dd\u30a4\u30f3\u30bf\u30fb\u30c7\u30ea\u30b2\u30fc\u30c8\u304c shared/immutable/const shared \u3067\u3042\u308b\u3053\u3068\u3001\u8981\u3059\u308b\u306b\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\u3067\u3042\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3057\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b !hasUnsharedAliasing!T \u3092\u6e80\u305f\u3059\u306e\u306f\u3069\u306e\u3088\u3046\u306a\u578b\u304b\u3001\u307b\u3093\u306e\u4e00\u90e8\u3067\u3059\u304c\u4ee5\u4e0b\u306e\u4f8b\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\nPhobos\u306estd.traits.hasUnsharedAliasing\u306eunittest\u3088\u308a\u4e00\u90e8\u629c\u7c8b\nunittest\n{\n    struct S2 { string a; }\n    struct S3 { int a; immutable Object b; }\n    static assert(!hasUnsharedAliasing!S2);\n    static assert(!hasUnsharedAliasing!S3);\n\n    struct S4 { int a; shared Object b; }\n    struct S6 { shared char[] b; }\n    struct S7 { float[3] vals; }\n    static assert(!hasUnsharedAliasing!S4);\n    static assert(!hasUnsharedAliasing!S6);\n    static assert(!hasUnsharedAliasing!S7);\n\n    struct S8 { int a; Rebindable!(immutable Object) b; }\n    static assert(!hasUnsharedAliasing!S8);\n\n    static assert(!hasUnsharedAliasing!(void delegate() immutable));\n    static assert(!hasUnsharedAliasing!(void delegate() shared));\n    static assert(!hasUnsharedAliasing!(void delegate() shared const));\n    static assert(!hasUnsharedAliasing!(const(void delegate() immutable)));\n    static assert(!hasUnsharedAliasing!(immutable(void delegate())));\n    static assert(!hasUnsharedAliasing!(shared(void delegate())));\n    static assert(!hasUnsharedAliasing!(shared(const(void delegate()))));\n    static assert(!hasUnsharedAliasing!(void function()));\n\n    static assert(!hasUnsharedAliasing!(Rebindable!(immutable Object)));\n    static assert(!hasUnsharedAliasing!(Rebindable!(shared Object)));\n\n    static assert(!hasUnsharedAliasing!(int, shared(int)*));\n    static assert(!hasUnsharedAliasing!(shared(int)*, Rebindable!(shared Object)));\n    static assert(!hasUnsharedAliasing!());\n\n    class S13\n    {\n        void delegate() shared a;\n        void delegate() immutable b;\n        shared(const(void delegate() shared const)) o;\n    }\n    static assert(!hasUnsharedAliasing!(immutable(S13)));\n    static assert(!hasUnsharedAliasing!(shared(S13)));\n\n    // \u306a\u3069\u306a\u3069\n}\n\n\n\u3053\u3053\u3067\u306f!hasUnsharedAliasing!T\u306a\u3082\u306e\u306b\u9650\u308a\u307e\u3057\u305f\u304c\u3001Phobos\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068hasUnsharedAliasing!T\u306a\u4f8b\u3082\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nspawn\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u3082\u306e\nspawn \u95a2\u6570\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u30b9\u30ec\u30c3\u30c9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3068\u306a\u308c\u308b\u3082\u306e\u306f\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u3059\u3079\u3066\u6e80\u305f\u3059\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n\nspawn\u306e\u7b2c\u4e00\u5f15\u6570\u306eF\u306fisCallable!F\u3002\u547c\u3073\u51fa\u3057\u53ef\u80fd\u306a\u578b\u3067\u3042\u308b\u3053\u3068\u3002\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3092\u6e80\u305f\u3059\u3002\n\n\nfunction(\u95a2\u6570\u30dd\u30a4\u30f3\u30bf)\ndelegate (\u30c7\u30ea\u30b2\u30fc\u30c8)\nopCall\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8/\u69cb\u9020\u4f53(\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\n\n\n\u623b\u308a\u5024\u304cvoid\n\n\nspawn \u306b\u6307\u5b9a\u3057\u305f\u7b2c\u4e8c\u5f15\u6570\u4ee5\u964d\u306e\u5f15\u6570T...\u306f\u3059\u3079\u3066\u3001\u6697\u9ed9\u306bF\u306e\u5f15\u6570\u306b\u6307\u5b9a\u53ef\u80fd\nF\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304b\u3001!hasUnsharedAliasing!F\n\n\u5f15\u6570T...\u306f!hasUnsharedAliasing!T\u307e\u305f\u306fTid\u3002\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\u3067\u3042\u308b\u3053\u3068\u3002\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3092\u6e80\u305f\u3059\u3002\n\n\n\nimmutable/shared\u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u30dd\u30a4\u30f3\u30bf\n\nimmutable/shared\u306a\u8981\u7d20\u3092\u6301\u3064\u914d\u5217\n\nimmutable/shared\u306aclass/interface\n\n\nimmutable/shared\u306a\u9023\u60f3\u914d\u5217\n\nimmutable/shared\u306adelegate\n\n\u53c2\u7167\u3092\u542b\u307e\u306a\u3044\u30c7\u30fc\u30bf\nTid\n\n\n\n\n\u3053\u3053\u3067\u3082\u51fa\u3066\u304f\u308b\u306e\u304c !hasUnsharedAliasing!F \u3067\u3059\u3002\u8981\u3059\u308b\u306b\u3001\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u95a2\u6570\u547c\u3073\u51fa\u3057\u53ef\u80fd\u306a\u578b\u3001\u4f8b\u3048\u3070void delegate() shared\u307f\u305f\u3044\u306a\u578b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nvoid delegate() shared\u306e\u4f5c\u308a\u65b9\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f 10\u65e5\u76ee \u3068\u304b\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\u3055\u3089\u306b\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u6307\u5b9a\u3059\u308bF\u306e\u5f15\u6570T...\u306b\u3064\u3044\u3066\u3082\u3001!hasUnsharedAliasing!T\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u6761\u4ef6\u304c\u3042\u308a\u307e\u3059\u3002\n\u8981\u3059\u308b\u306b\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306fspawn\u3092\u547c\u3073\u51fa\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3068\u306f\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\u306e\u3060\u304b\u3089\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u305d\u306e\u3082\u306e\u3082\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u6307\u5b9a\u3057\u305f\u95a2\u6570\u306e\u5f15\u6570\u3082\u3001\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u6271\u3063\u3066\u554f\u984c\u306a\u3044\u30c7\u30fc\u30bf\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3088\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u4ee5\u4e0b\u3001\u4f8b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u4f8b1 11\u65e5\u76ee @repeatedly \u3055\u3093\u306e\u8a18\u4e8b\u3088\u308a\u629c\u7c8b\n\nimport std.stdio, std.concurrency;\n\nvoid func(string message)\n{\n    writeln(message);\n}\n\nvoid main()\n{\n    spawn(&func, \"Hello!\");\n}\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u3067\u306f\u3001spawn\u306b\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\u7b2c1\u3068\u7b2c4\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\u307e\u305f\u3001func\u306e\u623b\u308a\u5024\u306fvoid\u3067\u3042\u308a\u3001\u7b2c2\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u5f15\u6570\u306e\u578b\u306ffunc\u306e\u4eee\u5f15\u6570\u3001spawn\u306e\u7b2c2\u5b9f\u5f15\u6570\u3068\u3082\u306bstring\u3067\u4e00\u81f4\u3057\u3066\u304a\u308a\u3001\u7b2c3\u306e\u6761\u4ef6\u3082\u554f\u984c\u306a\u304f\u6e80\u305f\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u304a\u3001\u5f15\u6570\u306e\u578bstring\u306f\u3001immutable(char)[]\u3068\u7b49\u4fa1\u3001\u3064\u307e\u308ahasUnsharedAliasing\u306e\u7b2c2\u6761\u4ef6\u306b\u4e00\u81f4\u3057\u306a\u3044\u305f\u3081\u3001 !hasUnsharedAliasing!(string) == true \u3068\u306a\u308a\u3001\u7b2c5\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u8868\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\n\n\u6761\u4ef6\u756a\u53f7\n\u6761\u4ef6\n\u5224\u5b9a\u5bfe\u8c61\n\u53ef\u5426\n\n\n\n\n1\n\nisCallable!F\u3092\u6e80\u305f\u3059\n&func\n\u25cb function\n\n\n2\n\u623b\u308a\u5024\u304cvoid\n\nfunc\u306e\u623b\u308a\u5024\u578b\n\u25cb void\n\n\n3\n\nT...\u306fF\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd\nstring\u3068string\n\u25cb \u5b8c\u5168\u4e00\u81f4\n\n\n4\nF\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304b!hasUnsharedAliasing!F\n\n&func\n\u25cb function\n\n\n5\n\n!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059\u304bTid\nstring\n\u25cbimmutable\u306a\u8981\u7d20\u3092\u6301\u3064\u914d\u5217\n\n\n\n\n\u4f8b2\nimport std.stdio, std.concurrency;\n\nclass Callable\n{\n    int a;\n    this(int x) shared\n    {\n        a = x;\n    }\n    void opCall(shared Callable callable, const shared int* x) shared\n    {\n        writefln(\"this.a=%s, callable.a=%s, arg x=%s\", a, callable.a, *x);\n    }\n}\n\nclass DerivedCallable: Callable\n{\n    this(int x) shared\n    {\n        super(x*x);\n    }\n}\n\nvoid main()\n{\n    auto callable1 = new shared Callable(1);\n    auto callable2 = new shared DerivedCallable(2);\n    shared int* a = new shared int;\n    *a = 100;\n    spawn(callable1, callable2, a);\n}\n\n\u6761\u4ef6\u3092\u6e80\u305f\u305b\u3070\u3001\u4e0a\u8a18\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306a\u3053\u3068\u3082\u53ef\u80fd\u3002\n\u5404\u6761\u4ef6\u3092\u6e80\u305f\u3059\u7406\u7531\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u8868\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\n\n\u6761\u4ef6\u756a\u53f7\n\u6761\u4ef6\n\u5224\u5b9a\u5bfe\u8c61\n\u53ef\u5426\n\n\n\n\n1\n\nisCallable!F\u3092\u6e80\u305f\u3059\ncallable1\n\u25cb opCall\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\n2\n\u623b\u308a\u5024\u304cvoid\n\nCallable.opCall\n\u25cb void\n\n\n3-1\n\nT...\u306fF\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd\nshared Callable\u3068shared Callable\n\u25cb \u5b8c\u5168\u4e00\u81f4\n\n\n3-2\n\nT...\u306fF\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd\nshared Callable\u3068shared DerivedCallable\n\u25cb \u6697\u9ed9\u5909\u63db(\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8)\u53ef\u80fd\n\n\n3-3\n\nT...\u306fF\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd\nconst shared int* \u3068shared int*\n\u25cb \u6697\u9ed9\u5909\u63db(shared\u578b\u304b\u3089const shared\u578b\u3078\u306e\u5909\u63db)\u53ef\u80fd\n\n\n4\nF\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304b!hasUnsharedAliasing!F\n\ncallable1\n\u25cb shared\u306aclass\u306a\u306e\u3067!hasUnsharedAliasing!F\u3092\u6e80\u305f\u3059\n\n\n5-1\n\n!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059\u304bTid\nshared Callable\n\u25cb shared\u306aclass\u306a\u306e\u3067!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059\n\n\n5-2\n\n!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059\u304bTid\nshared Callable\n\u25cb shared\u306aclass\u306a\u306e\u3067!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059\n\n\n5-3\n\n!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059\u304bTid\nconst shared int*\n\u25cb shared\u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u306a\u306e\u3067!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059\n\n\n\n\nsend/receive\u3067\u304d\u308b\u3082\u306e\nspawn\u306e\u5f15\u6570\u304c !hasUnsharedAliasing!T \u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3068\u540c\u69d8\u306b\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u4ee5\u4e0a\u3001\u305d\u3053\u306b\u9001\u4ed8\u3059\u308b\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u3082\u3001!hasUnsharedAliasing!T \u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3053\u3053\u307e\u3067\u306a\u3089spawn\u3068\u540c\u3058\u306a\u306e\u3067\u7c21\u5358\u306a\u306e\u3067\u3059\u304c\u3001\u5b9f\u306f\u3082\u3046\u4e00\u3064\u5927\u304d\u3081\u306e\u5236\u9650\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u306f\u3001\u5b9f\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u30c7\u30fc\u30bf\u304c\u3001creal\u30fb\u6587\u5b57\u5217(char[])\u30fb\u30c7\u30ea\u30b2\u30fc\u30c8\u306e\u3046\u3061\u30d3\u30c3\u30c8\u9577\u304c\u6700\u5927\u306e\u578b\u306e\u30d3\u30c3\u30c8\u9577\u3092\u8d85\u3048\u3066\u306f\u306a\u3089\u306a\u3044\u3001\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u8981\u3059\u308b\u306b\u3001\u57fa\u672c\u578b\u3001\u914d\u5217\u3001\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u30c7\u30ea\u30b2\u30fc\u30c8\u3001\u30dd\u30a4\u30f3\u30bf\u304f\u3089\u3044\u3057\u304b\u6307\u5b9a\u3067\u304d\u305a\u3001\u69cb\u9020\u4f53\u5909\u6570\u306f\u305f\u304b\u3060\u304b\u30dd\u30a4\u30f3\u30bf\u3068\u540c\u7b49\u30b5\u30a4\u30ba\u7a0b\u5ea6\u306e\u3082\u306e\u3057\u304b\u6307\u5b9a\u3067\u304d\u306a\u3044\u3068\u601d\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n\u3053\u306e\u6761\u4ef6\u306f\u3001send/receive\u306e\u5185\u90e8\u3067\u3001Variant\u578b\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u7531\u6765\u3057\u307e\u3059\u3002Variant\u306b\u8a70\u3081\u8fbc\u3081\u308b\u30c7\u30fc\u30bf\u306e\u6761\u4ef6\u304c\u3001\u307e\u3055\u306b\u4e0a\u8a18\u3067\u8ff0\u3079\u305f\u5185\u5bb9\u305d\u306e\u307e\u307e\u306a\u306e\u3067\u3059\u3002\nsend\u306b\u95a2\u3057\u3066\u3001\u53d7\u3051\u6e21\u3057\u306e\u969b\u306bVariant\u304c\u4f7f\u7528\u3055\u308c\u308b\u95a2\u4fc2\u4e0a\u3001Variant\u304c\u8a31\u5bb9\u3059\u308b\u30b5\u30a4\u30ba\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u3057\u304b\u5f15\u304d\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n(\u6b63\u76f4\u3053\u308c\u306fA\u5148\u751f\u3082\u610f\u56f3\u3057\u3066\u3044\u306a\u3044\u6319\u52d5\u306a\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u73fe\u72b6\u305d\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u308c\u304c\u4ed5\u69d8\u306a\u306e\u3067\u3057\u3087\u3046\u2026\u3002)\n(\u79c1\u306fVariant\u306b\u5236\u9650\u304c\u3042\u308b\u4e8b\u81ea\u4f53\u306a\u3093\u304b\u30c0\u30e1\u306a\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059)\n\u3082\u3057\u3082\u53d7\u6e21\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306e\u30b5\u30a4\u30ba\u304c\u5927\u3044\u5834\u5408\u306f\u3001new\u3057\u305f\u3046\u3048\u3067\u3001\u30dd\u30a4\u30f3\u30bf\u306b\u3088\u308b\u53d7\u3051\u6e21\u3057\u3092\u884c\u3046\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u306a\u304a\u3001\u30dd\u30a4\u30f3\u30bf\u3084\u914d\u5217\u306a\u3069\u3092\u53d7\u3051\u6e21\u3059\u969b\u306b\u306f\u3001\u578b\u540d\u306f\u6b63\u78ba\u306b\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7279\u306b\u578b\u3092\u4fee\u98fe\u3059\u308b\u5834\u5408\u306f\u8981\u6ce8\u610f\u3067\u3059\u3002\nreceive((shared int* i) {} );\n\u306a\u3069\u3068\u3044\u3046\u66f8\u304d\u65b9\u306fNG\u3067\u3059\u3002\nreceive((shared(int)* i) {} );\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001\u578b\u540d\u3092\u6b63\u78ba\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u3001\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u4f8b3  11\u65e5\u76ee @repeatedly \u3055\u3093\u306e\u8a18\u4e8b\u3088\u308a\u629c\u7c8b\n\nimport std.stdio, std.concurrency;\n\nvoid func()\n{\n    bool running = true;\n\n    while (running) {\n        receive((int i) { writeln(\"Received an int: \", i); },\n                (float f) { writeln(\"Received a float: \", f); },\n                (Variant v) {\n                    writeln(\"Received unknown type. Terminated...\");\n                    running = false;\n                });\n    }\n}\n\nvoid main()\n{\n    auto tid = spawn(&func);\n    send(tid, 42);\n    send(tid, 42.0f);\n    send(tid, \"Hello!\");\n}\n\n1\u3064\u76ee\u306esend\u306f42 \u3064\u307e\u308a\u3001int\u578b\u3067\u3059\u3002int\u578b\u306f\u57fa\u672c\u578b\u3067\u53c2\u7167\u578b\u3092\u542b\u307e\u306a\u3044\u306e\u3067!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3057\u3001\u304b\u3064Variant\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u306e\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\n2\u3064\u76ee\u306esend\u306f42.0f \u3064\u307e\u308a\u3001float\u578b\u3067\u3059\u3002float\u578b\u306f\u57fa\u672c\u578b\u3067\u53c2\u7167\u578b\u3092\u542b\u307e\u306a\u3044\u306e\u3067!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3057\u3001\u304b\u3064Variant\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u306e\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\n3\u3064\u76ee\u306esend\u306f\"Hello!\" \u3064\u307e\u308a\u3001immutable(char)[]\u578b\u3067\u3059\u3002\u914d\u5217\u3067\u3059\u304c\u3001\u8981\u7d20\u304cimmutable\u306a\u306e\u3067!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3057\u3001\u304b\u3064Variant\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u306e\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\n\n\u4f8b4\n\nmain.d\nimport std.stdio, std.concurrency;\n\n// \u30af\u30e9\u30b9\nclass A { }\n// \u5927\u304d\u3044\u30b5\u30a4\u30ba\u306e\u69cb\u9020\u4f53\nstruct S { int[32] dat; }\n\nvoid func()\n{\n    bool running = true;\n\n    while (running) {\n        receive(// \u4ee5\u4e0b2\u3064\u306e\u95a2\u6570\u306f\u3001\u3069\u3061\u3089\u304c\u547c\u3070\u308c\u308b\u304b\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002\n                (shared int* i) { writeln(\"Received an int ptr 1:\", *i); },\n                (shared(int)* i) { writeln(\"Received an int ptr 2:\", *i); },\n                // \u4ee5\u4e0b\u306ea\u306f\u6392\u4ed6\u5236\u5fa1\u306a\u3057\u306b\u7121\u7406\u3084\u308a\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\n                // main\u95a2\u6570\u5185\u3067\u5909\u66f4\u3055\u308c\u306a\u3044\u3053\u3068\u306b\u78ba\u8a3c\u3092\u5f97\u3066\u3044\u308b\u304b\u3089\u884c\u3048\u308b\u884c\u70ba\u3067\u3059\u3002\n                // \u78ba\u8a3c\u306a\u3057\u306b\u6392\u4ed6\u5236\u5fa1\u306a\u3057\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u306fNG\u3067\u3059\u3002\n                (shared A a) { writeln(\"Received a class object A:\", (cast()a).toString()); },\n                // \u5927\u304d\u3044\u30b5\u30a4\u30ba\u306e\u69cb\u9020\u4f53\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30dd\u30a4\u30f3\u30bf\u3067\u53d7\u3051\u6e21\u3057\u3092\u884c\u3046\u306e\u304c\u5409\u3002\n                (shared(S)* s) { writeln(\"Received a struct S: \", s.dat[]); },\n                (Variant v) {\n                    writeln(\"Received unknown type. Terminated...\");\n                    running = false;\n                });\n    }\n}\n\nvoid main()\n{\n    auto tid = spawn(&func);\n    auto i = new shared int;\n    auto a = new shared A;\n    auto s = new shared S;\n    *i = 123;\n    s.dat[] = 456;\n    // \u4ee5\u4e0b\u3001i, a, s \u306e\u578b\u304c\u305d\u308c\u305e\u308c\u4f55\u304b\u3092\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002\n    pragma(msg, typeof(i));\n    pragma(msg, typeof(a));\n    pragma(msg, typeof(s));\n\n    send(tid, i);\n    send(tid, a);\n    send(tid, s);\n    send(tid, \"Hello!\");\n}\n\n\n\n\u307e\u3068\u3081\nstd.concurrency\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u3001\u5404\u95a2\u6570\u306e\u5f15\u6570\u306b\u4f55\u3092\u6307\u5b9a\u3059\u308c\u3070\u3088\u3044\u306e\u304b\u306b\u3064\u3044\u3066\u304a\u8a71\u3057\u307e\u3057\u305f\u3002\n\n\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\u3068\u306f\u3001!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059T\u306e\u3053\u3068\u3067\u3001shared/immutable\u306e\u3064\u3044\u3066\u3044\u306a\u3044\u53c2\u7167\u30c7\u30fc\u30bf\u3092\u542b\u307f\u307e\u305b\u3093\u3002\n\nspawn\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u3082\u306e\u3068\u306f\u3001!hasUnsharedAliasing!F\u3092\u6e80\u305f\u3059F\u3068\u3001F\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd\u306a!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059T...\u306e\u3053\u3068\u3067\u3059\u3002F\u306b\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u4ee5\u5916\u306b\u3082\u3001void delegate() shared\u306a\u3069\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n\nsend/receive \u3067\u304d\u308b\u3082\u306e\u3068\u306f\u3001!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3057\u3001\u304b\u3064Variant\u306b\u6307\u5b9a\u53ef\u80fd\u306aT\u306e\u3053\u3068\u3067\u3059\u3002\u307e\u305f\u3001receive\u306e\u969b\u306b\u306f\u578b\u540d\u3092\u6b63\u78ba\u306b\u8a18\u8ff0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3080\u3068\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4e26\u884c\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u884c\u3046\u4e0a\u3067\u3001shared\u5c5e\u6027\u306f!hasUnsharedAliasing!T\u3092\u6e80\u305f\u3059\u6761\u4ef6\u306b\u3068\u3063\u3066\u3001immutable\u3068\u540c\u3058\u304f\u3089\u3044\u975e\u5e38\u306b\u9ad8\u3044\u91cd\u8981\u6027\u3092\u6301\u3061\u307e\u3059\u3002\u3057\u304b\u3057\u306a\u304c\u3089\u3001shared\u306e\u4f7f\u3044\u3053\u306a\u3057\u306e\u6280\u8853\u306b\u3064\u3044\u3066\u306f\u307e\u3060\u307e\u3060\u672a\u767a\u9054\u306a\u5206\u91ce\u3067\u3059\u3002\u3053\u308c\u3089\u3092\u3046\u307e\u304f\u4f7f\u304a\u3046\u3068\u601d\u3046\u3068\u3001\u5fc5\u305ashared\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u5e7e\u3064\u3082\u306e\u58c1\u304c\u51fa\u3066\u304f\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3082\u3057\u4eee\u306b\u3001\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u307f\u3001shared\u3092\u4f7f\u3063\u3066\u307f\u3066\u3001\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u3044\u3044\u65b9\u6cd5\u3084\u5b9a\u77f3\u306a\u3069\u304c\u898b\u3048\u3066\u304f\u308b\u3088\u3046\u3067\u3057\u305f\u3089\u3001\u662f\u975e\u8a18\u4e8b\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002shared\u3092\u4f7f\u3046\u4eba\u3068\u60c5\u5831\u304c\u5897\u3048\u308b\u3053\u3068\u3092\u5fc3\u304b\u3089\u9858\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001\u79c1\u306e\u66f8\u3044\u305fshared\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u306f\u4ee5\u4e0b\u3067\u3059\u3002\u305c\u3072\u3054\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nshared\u306e\u8a71\nshraed\u306ecast\u306b\u3064\u3044\u3066\n# [std.concurrency](http://dlang.org/phobos/std_concurrency.html) \u5fdc\u7528\u7de8\n\n`std.concurrency`\u3092\u4f7f\u3046\u3053\u3068\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306e\u5e73\u884c\u51e6\u7406\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u306f[11\u65e5\u76ee](http://qiita.com/repeatedly/items/dbb858a4f4e3b2dffb51)\u306e @repeatedly \u3055\u3093\u306e\u8a18\u4e8b\u306b\u3088\u3063\u3066\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u306e\u5fdc\u7528\u3002\u306a\u306e\u306711\u65e5\u76ee\u3092\u8aad\u3093\u3067\u3044\u306a\u3051\u308c\u3070\u5148\u306b\u305d\u3061\u3089\u3092\u8aad\u3080\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f`std.concurrency`\u306e\u5fdc\u7528\u3068\u3057\u3066\u3001`spawn`\u306e\u5f15\u6570\u306b\u6e21\u305b\u308b\u3082\u306e\u3084\u3001`send`\u306e\u5f15\u6570\u306b\u6e21\u305b\u308b\u3082\u306e==`receive`/`receiveOnly`\u3067\u53d7\u3051\u53d6\u308c\u308b\u3082\u306e\u306b\u95a2\u3057\u3066\u3001\u8a73\u3057\u304f\u8a9e\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306e\u8a18\u4e8b\u306f\u3001\u4ee5\u4e0b\u306e\u9032\u884c\u306b\u5f93\u3063\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n1. \u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\n2. `spawn`\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u3082\u306e\n3. `send`/`receive` \u3067\u304d\u308b\u3082\u306e\n\n# \u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\n\n\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\u3068\u306f\u3001\u3064\u307e\u308a\u3001\n\n`!hasUnsharedAliasing!T`\n\n\u306a\u3001 `T` \u306e\u3053\u3068\u3067\u3059\u3002\n[dlang.org:hasUnsharedAliasing](http://dlang.org/phobos/std_traits.html#.hasUnsharedAliasing)\n\n---------------------------------------\n\n> `template hasUnsharedAliasing(T...)`\n> \n> \u5404T\u304c\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u6761\u4ef6\u3092\u307f\u305f\u3059\u5834\u5408\u306btrue\u3092\u8fd4\u3057\u307e\u3059\uff1a\n>\n>  1. \u751f\u306e\u30dd\u30a4\u30f3\u30bfU*\u3092\u542b\u307f\u3001U\u306fimmutable\u3067\u3082shared\u3067\u3082\u306a\u3044\u3002\n>  2. \u914d\u5217U[]\u3092\u542b\u307f\u3001U\u306fimmutable\u3067\u3082shared\u3067\u3082\u306a\u3044\u3002\n>  3. class\u306e\u53c2\u7167\u578bC\u3092\u542b\u307f\u3001C\u306fimmutable\u3067\u3082shared\u3067\u3082\u306a\u3044\u3002(\u8a33\u6ce8: \u305f\u3076\u3093interface\u3082\u3053\u308c\u3068\u540c\u3058)\n>  4. \u9023\u60f3\u914d\u5217\u578b\u3092\u542b\u307f\u3001\u305d\u308c\u304cimmutable\u3067\u3082shared\u3067\u3082\u306a\u3044\u3002\n>  5. delegate\u3092\u542b\u307f\u3001\u305d\u308c\u304cshared\u3067\u306f\u306a\u3044\u3002(\u8a33\u6ce8:\u305f\u3076\u3093immutable\u304c\u629c\u3051\u3066\u308b)\n>\n>> (\u539f\u6587):\n>> Returns true if and only if T's representation includes at least one of the following:\n>> \n>>    1. a raw pointer U* and U is not immutable or shared;\n>>    2. an array U[] and U is not immutable or shared;\n>>    3. a reference to a class type C and C is not immutable or shared.\n>>    4. an associative array that is not immutable or shared.\n>>    5. a delegate that is not shared.\n\n---------------------------------------\n\n\u5b9f\u306f\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u307e\u3055\u306b\u3053\u306e\u76ee\u7684\u306e\u305f\u3081\u3001\u3059\u306a\u308f\u3061\u3001\u3042\u308b\u578bT\u306b\u3088\u3063\u3066\u5f62\u6210\u3055\u308c\u308b\u30c7\u30fc\u30bf\u304c\u3001\u30b9\u30ec\u30c3\u30c9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u9593\u3092\u6e21\u3063\u3066\u53d6\u308a\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u3092\u4e3b\u306a\u76ee\u7684\u3068\u3057\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002\n\u88cf\u8fd4\u305b\u3070 `!hasUnsharedAliasing!T` \u3067\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001T\u3068\u3044\u3046\u578b\u306b\u62e0\u308b\u30c7\u30fc\u30bf\u304b\u3089\u305f\u3069\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u53c2\u7167\u30fb\u30dd\u30a4\u30f3\u30bf\u30fb\u30c7\u30ea\u30b2\u30fc\u30c8\u304c `shared`/`immutable`/`const shared` \u3067\u3042\u308b\u3053\u3068\u3001\u8981\u3059\u308b\u306b\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\u3067\u3042\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3057\u307e\u3059\u3002\n\n\u5177\u4f53\u7684\u306b `!hasUnsharedAliasing!T` \u3092\u6e80\u305f\u3059\u306e\u306f\u3069\u306e\u3088\u3046\u306a\u578b\u304b\u3001\u307b\u3093\u306e\u4e00\u90e8\u3067\u3059\u304c\u4ee5\u4e0b\u306e\u4f8b\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\n```d:Phobos\u306estd.traits.hasUnsharedAliasing\u306eunittest\u3088\u308a\u4e00\u90e8\u629c\u7c8b\nunittest\n{\n    struct S2 { string a; }\n    struct S3 { int a; immutable Object b; }\n    static assert(!hasUnsharedAliasing!S2);\n    static assert(!hasUnsharedAliasing!S3);\n\n    struct S4 { int a; shared Object b; }\n    struct S6 { shared char[] b; }\n    struct S7 { float[3] vals; }\n    static assert(!hasUnsharedAliasing!S4);\n    static assert(!hasUnsharedAliasing!S6);\n    static assert(!hasUnsharedAliasing!S7);\n\n    struct S8 { int a; Rebindable!(immutable Object) b; }\n    static assert(!hasUnsharedAliasing!S8);\n\n    static assert(!hasUnsharedAliasing!(void delegate() immutable));\n    static assert(!hasUnsharedAliasing!(void delegate() shared));\n    static assert(!hasUnsharedAliasing!(void delegate() shared const));\n    static assert(!hasUnsharedAliasing!(const(void delegate() immutable)));\n    static assert(!hasUnsharedAliasing!(immutable(void delegate())));\n    static assert(!hasUnsharedAliasing!(shared(void delegate())));\n    static assert(!hasUnsharedAliasing!(shared(const(void delegate()))));\n    static assert(!hasUnsharedAliasing!(void function()));\n\n    static assert(!hasUnsharedAliasing!(Rebindable!(immutable Object)));\n    static assert(!hasUnsharedAliasing!(Rebindable!(shared Object)));\n\n    static assert(!hasUnsharedAliasing!(int, shared(int)*));\n    static assert(!hasUnsharedAliasing!(shared(int)*, Rebindable!(shared Object)));\n    static assert(!hasUnsharedAliasing!());\n\n    class S13\n    {\n        void delegate() shared a;\n        void delegate() immutable b;\n        shared(const(void delegate() shared const)) o;\n    }\n    static assert(!hasUnsharedAliasing!(immutable(S13)));\n    static assert(!hasUnsharedAliasing!(shared(S13)));\n\n    // \u306a\u3069\u306a\u3069\n}\n```\n\n\u3053\u3053\u3067\u306f`!hasUnsharedAliasing!T`\u306a\u3082\u306e\u306b\u9650\u308a\u307e\u3057\u305f\u304c\u3001[Phobos\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9](https://github.com/D-Programming-Language/phobos/blob/c445f1c288ff864dd8891190e1be516863ebe7dd/std/traits.d#L2829)\u3092\u8aad\u3080\u3068`hasUnsharedAliasing!T`\u306a\u4f8b\u3082\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n# `spawn`\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u3082\u306e\n\n`spawn` \u95a2\u6570\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u30b9\u30ec\u30c3\u30c9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3068\u306a\u308c\u308b\u3082\u306e\u306f\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u3059\u3079\u3066\u6e80\u305f\u3059\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002\n\n---------------------------------------\n\n1. `spawn`\u306e\u7b2c\u4e00\u5f15\u6570\u306e`F`\u306f`isCallable!F`\u3002\u547c\u3073\u51fa\u3057\u53ef\u80fd\u306a\u578b\u3067\u3042\u308b\u3053\u3068\u3002\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3092\u6e80\u305f\u3059\u3002\n    * function(\u95a2\u6570\u30dd\u30a4\u30f3\u30bf)\n    * delegate (\u30c7\u30ea\u30b2\u30fc\u30c8)\n    * opCall\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8/\u69cb\u9020\u4f53(\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\n2. \u623b\u308a\u5024\u304c`void`\n3. `spawn` \u306b\u6307\u5b9a\u3057\u305f\u7b2c\u4e8c\u5f15\u6570\u4ee5\u964d\u306e\u5f15\u6570`T...`\u306f\u3059\u3079\u3066\u3001\u6697\u9ed9\u306bF\u306e\u5f15\u6570\u306b\u6307\u5b9a\u53ef\u80fd\n4. F\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304b\u3001`!hasUnsharedAliasing!F`\n5. \u5f15\u6570`T...`\u306f`!hasUnsharedAliasing!T`\u307e\u305f\u306fTid\u3002\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\u3067\u3042\u308b\u3053\u3068\u3002\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3092\u6e80\u305f\u3059\u3002\n    * `immutable`/`shared`\u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u30dd\u30a4\u30f3\u30bf\n    * `immutable`/`shared`\u306a\u8981\u7d20\u3092\u6301\u3064\u914d\u5217\n    * `immutable`/`shared`\u306a`class`/`interface`\n    * `immutable`/`shared`\u306a\u9023\u60f3\u914d\u5217\n    * `immutable`/`shared`\u306a`delegate`\n    * \u53c2\u7167\u3092\u542b\u307e\u306a\u3044\u30c7\u30fc\u30bf\n    * `Tid`\n\n---------------------------------------\n\n\u3053\u3053\u3067\u3082\u51fa\u3066\u304f\u308b\u306e\u304c `!hasUnsharedAliasing!F` \u3067\u3059\u3002\u8981\u3059\u308b\u306b\u3001\u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u95a2\u6570\u547c\u3073\u51fa\u3057\u53ef\u80fd\u306a\u578b\u3001\u4f8b\u3048\u3070`void delegate() shared`\u307f\u305f\u3044\u306a\u578b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n`void delegate() shared`\u306e\u4f5c\u308a\u65b9\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f [10\u65e5\u76ee](http://qiita.com/mono_shoo/items/9c11789764004aaa7ca2) \u3068\u304b\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\u3055\u3089\u306b\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u6307\u5b9a\u3059\u308b`F`\u306e\u5f15\u6570`T...`\u306b\u3064\u3044\u3066\u3082\u3001`!hasUnsharedAliasing!T`\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u6761\u4ef6\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u8981\u3059\u308b\u306b\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306f`spawn`\u3092\u547c\u3073\u51fa\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3068\u306f\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\u306e\u3060\u304b\u3089\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u305d\u306e\u3082\u306e\u3082\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u6307\u5b9a\u3057\u305f\u95a2\u6570\u306e\u5f15\u6570\u3082\u3001\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u6271\u3063\u3066\u554f\u984c\u306a\u3044\u30c7\u30fc\u30bf\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3088\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u3001\u4f8b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n## \u4f8b1 _[11\u65e5\u76ee](http://qiita.com/repeatedly/items/dbb858a4f4e3b2dffb51) @repeatedly \u3055\u3093\u306e\u8a18\u4e8b\u3088\u308a\u629c\u7c8b_\n\n```d\nimport std.stdio, std.concurrency;\n\nvoid func(string message)\n{\n\twriteln(message);\n}\n\nvoid main()\n{\n\tspawn(&func, \"Hello!\");\n}\n```\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u3067\u306f\u3001`spawn`\u306b\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\u7b2c1\u3068\u7b2c4\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\u307e\u305f\u3001func\u306e\u623b\u308a\u5024\u306fvoid\u3067\u3042\u308a\u3001\u7b2c2\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u5f15\u6570\u306e\u578b\u306f`func`\u306e\u4eee\u5f15\u6570\u3001`spawn`\u306e\u7b2c2\u5b9f\u5f15\u6570\u3068\u3082\u306bstring\u3067\u4e00\u81f4\u3057\u3066\u304a\u308a\u3001\u7b2c3\u306e\u6761\u4ef6\u3082\u554f\u984c\u306a\u304f\u6e80\u305f\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u304a\u3001\u5f15\u6570\u306e\u578b`string`\u306f\u3001`immutable(char)[]`\u3068\u7b49\u4fa1\u3001\u3064\u307e\u308a`hasUnsharedAliasing`\u306e\u7b2c2\u6761\u4ef6\u306b\u4e00\u81f4\u3057\u306a\u3044\u305f\u3081\u3001 `!hasUnsharedAliasing!(string) == true` \u3068\u306a\u308a\u3001\u7b2c5\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u8868\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n| \u6761\u4ef6\u756a\u53f7 | \u6761\u4ef6 | \u5224\u5b9a\u5bfe\u8c61 | \u53ef\u5426 |\n|:-----------:|:-------|:------------|:------|\n| 1 | `isCallable!F`\u3092\u6e80\u305f\u3059                                    | &func               | \u25cb function |\n| 2 | \u623b\u308a\u5024\u304c`void`                                                 | func\u306e\u623b\u308a\u5024\u578b | \u25cb void |\n| 3 | `T...`\u306f`F`\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd                     | string\u3068string    | \u25cb \u5b8c\u5168\u4e00\u81f4 |\n| 4 | F\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304b`!hasUnsharedAliasing!F`    | &func               | \u25cb function |\n| 5 | `!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059\u304bTid          | string               | \u25cb`immutable`\u306a\u8981\u7d20\u3092\u6301\u3064\u914d\u5217 |\n\n## \u4f8b2\n\n```d\nimport std.stdio, std.concurrency;\n\nclass Callable\n{\n\tint a;\n\tthis(int x) shared\n\t{\n\t\ta = x;\n\t}\n\tvoid opCall(shared Callable callable, const shared int* x) shared\n\t{\n\t\twritefln(\"this.a=%s, callable.a=%s, arg x=%s\", a, callable.a, *x);\n\t}\n}\n\nclass DerivedCallable: Callable\n{\n\tthis(int x) shared\n\t{\n\t\tsuper(x*x);\n\t}\n}\n\nvoid main()\n{\n\tauto callable1 = new shared Callable(1);\n\tauto callable2 = new shared DerivedCallable(2);\n\tshared int* a = new shared int;\n\t*a = 100;\n\tspawn(callable1, callable2, a);\n}\n```\n\n\u6761\u4ef6\u3092\u6e80\u305f\u305b\u3070\u3001\u4e0a\u8a18\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306a\u3053\u3068\u3082\u53ef\u80fd\u3002\n\u5404\u6761\u4ef6\u3092\u6e80\u305f\u3059\u7406\u7531\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u8868\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n| \u6761\u4ef6\u756a\u53f7 | \u6761\u4ef6 | \u5224\u5b9a\u5bfe\u8c61 | \u53ef\u5426 |\n|:-----------:|:-------|:------------|:------|\n| 1 | `isCallable!F`\u3092\u6e80\u305f\u3059                                    | callable1           | \u25cb opCall\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 |\n| 2 | \u623b\u308a\u5024\u304c`void`                                                 | Callable.opCall | \u25cb void |\n| 3-1 | `T...`\u306f`F`\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd                  | shared Callable\u3068shared Callable             | \u25cb \u5b8c\u5168\u4e00\u81f4 |\n| 3-2 | `T...`\u306f`F`\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd                  | shared Callable\u3068shared DerivedCallable | \u25cb \u6697\u9ed9\u5909\u63db(\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8)\u53ef\u80fd |\n| 3-3 | `T...`\u306f`F`\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd                  | const shared int* \u3068shared int* | \u25cb \u6697\u9ed9\u5909\u63db(shared\u578b\u304b\u3089const shared\u578b\u3078\u306e\u5909\u63db)\u53ef\u80fd |\n| 4 | F\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304b`!hasUnsharedAliasing!F`    | callable1               | \u25cb `shared`\u306a`class`\u306a\u306e\u3067`!hasUnsharedAliasing!F`\u3092\u6e80\u305f\u3059 |\n| 5-1 | `!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059\u304bTid          | shared Callable             | \u25cb `shared`\u306a`class`\u306a\u306e\u3067`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059 |\n| 5-2 | `!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059\u304bTid          | shared Callable             | \u25cb `shared`\u306a`class`\u306a\u306e\u3067`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059 |\n| 5-3 | `!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059\u304bTid          | const shared int*             | \u25cb `shared`\u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u306a\u306e\u3067`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059 |\n\n\n# `send`/`receive`\u3067\u304d\u308b\u3082\u306e\n\n`spawn`\u306e\u5f15\u6570\u304c `!hasUnsharedAliasing!T` \u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3068\u540c\u69d8\u306b\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u4ee5\u4e0a\u3001\u305d\u3053\u306b\u9001\u4ed8\u3059\u308b\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u3082\u3001`!hasUnsharedAliasing!T` \u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u3053\u3053\u307e\u3067\u306a\u3089`spawn`\u3068\u540c\u3058\u306a\u306e\u3067\u7c21\u5358\u306a\u306e\u3067\u3059\u304c\u3001\u5b9f\u306f\u3082\u3046\u4e00\u3064\u5927\u304d\u3081\u306e\u5236\u9650\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u308c\u306f\u3001\u5b9f\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u30c7\u30fc\u30bf\u304c\u3001creal\u30fb\u6587\u5b57\u5217(char[])\u30fb\u30c7\u30ea\u30b2\u30fc\u30c8\u306e\u3046\u3061\u30d3\u30c3\u30c8\u9577\u304c\u6700\u5927\u306e\u578b\u306e\u30d3\u30c3\u30c8\u9577\u3092\u8d85\u3048\u3066\u306f\u306a\u3089\u306a\u3044\u3001\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u8981\u3059\u308b\u306b\u3001\u57fa\u672c\u578b\u3001\u914d\u5217\u3001\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u30c7\u30ea\u30b2\u30fc\u30c8\u3001\u30dd\u30a4\u30f3\u30bf\u304f\u3089\u3044\u3057\u304b\u6307\u5b9a\u3067\u304d\u305a\u3001\u69cb\u9020\u4f53\u5909\u6570\u306f\u305f\u304b\u3060\u304b\u30dd\u30a4\u30f3\u30bf\u3068\u540c\u7b49\u30b5\u30a4\u30ba\u7a0b\u5ea6\u306e\u3082\u306e\u3057\u304b\u6307\u5b9a\u3067\u304d\u306a\u3044\u3068\u601d\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n\n\u3053\u306e\u6761\u4ef6\u306f\u3001`send`/`receive`\u306e\u5185\u90e8\u3067\u3001`Variant`\u578b\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u7531\u6765\u3057\u307e\u3059\u3002`Variant`\u306b\u8a70\u3081\u8fbc\u3081\u308b\u30c7\u30fc\u30bf\u306e\u6761\u4ef6\u304c\u3001\u307e\u3055\u306b\u4e0a\u8a18\u3067\u8ff0\u3079\u305f\u5185\u5bb9\u305d\u306e\u307e\u307e\u306a\u306e\u3067\u3059\u3002\n`send`\u306b\u95a2\u3057\u3066\u3001\u53d7\u3051\u6e21\u3057\u306e\u969b\u306b`Variant`\u304c\u4f7f\u7528\u3055\u308c\u308b\u95a2\u4fc2\u4e0a\u3001`Variant`\u304c\u8a31\u5bb9\u3059\u308b\u30b5\u30a4\u30ba\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u3057\u304b\u5f15\u304d\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n(\u6b63\u76f4\u3053\u308c\u306fA\u5148\u751f\u3082\u610f\u56f3\u3057\u3066\u3044\u306a\u3044\u6319\u52d5\u306a\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u73fe\u72b6\u305d\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u308c\u304c\u4ed5\u69d8\u306a\u306e\u3067\u3057\u3087\u3046\u2026\u3002)\n(\u79c1\u306f`Variant`\u306b\u5236\u9650\u304c\u3042\u308b\u4e8b\u81ea\u4f53\u306a\u3093\u304b\u30c0\u30e1\u306a\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059)\n\n\u3082\u3057\u3082\u53d7\u6e21\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306e\u30b5\u30a4\u30ba\u304c\u5927\u3044\u5834\u5408\u306f\u3001new\u3057\u305f\u3046\u3048\u3067\u3001\u30dd\u30a4\u30f3\u30bf\u306b\u3088\u308b\u53d7\u3051\u6e21\u3057\u3092\u884c\u3046\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u306a\u304a\u3001\u30dd\u30a4\u30f3\u30bf\u3084\u914d\u5217\u306a\u3069\u3092\u53d7\u3051\u6e21\u3059\u969b\u306b\u306f\u3001\u578b\u540d\u306f\u6b63\u78ba\u306b\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7279\u306b\u578b\u3092\u4fee\u98fe\u3059\u308b\u5834\u5408\u306f\u8981\u6ce8\u610f\u3067\u3059\u3002\n`receive((shared int* i) {} );`\n\u306a\u3069\u3068\u3044\u3046\u66f8\u304d\u65b9\u306fNG\u3067\u3059\u3002\n`receive((shared(int)* i) {} );`\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001\u578b\u540d\u3092\u6b63\u78ba\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u3001\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n## \u4f8b3  _[11\u65e5\u76ee](http://qiita.com/repeatedly/items/dbb858a4f4e3b2dffb51) @repeatedly \u3055\u3093\u306e\u8a18\u4e8b\u3088\u308a\u629c\u7c8b_\n```d\nimport std.stdio, std.concurrency;\n\nvoid func()\n{\n\tbool running = true;\n\t\n\twhile (running) {\n\t\treceive((int i) { writeln(\"Received an int: \", i); },\n\t\t        (float f) { writeln(\"Received a float: \", f); },\n\t\t        (Variant v) {\n\t\t            writeln(\"Received unknown type. Terminated...\");\n\t\t            running = false;\n\t\t        });\n    }\n}\n\nvoid main()\n{\n\tauto tid = spawn(&func);\n\tsend(tid, 42);\n\tsend(tid, 42.0f);\n\tsend(tid, \"Hello!\");\n}\n```\n\n1\u3064\u76ee\u306e`send`\u306f`42` \u3064\u307e\u308a\u3001`int`\u578b\u3067\u3059\u3002`int`\u578b\u306f\u57fa\u672c\u578b\u3067\u53c2\u7167\u578b\u3092\u542b\u307e\u306a\u3044\u306e\u3067`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3057\u3001\u304b\u3064`Variant`\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u306e\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\n2\u3064\u76ee\u306e`send`\u306f`42.0f` \u3064\u307e\u308a\u3001`float`\u578b\u3067\u3059\u3002`float`\u578b\u306f\u57fa\u672c\u578b\u3067\u53c2\u7167\u578b\u3092\u542b\u307e\u306a\u3044\u306e\u3067`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3057\u3001\u304b\u3064`Variant`\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u306e\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\n3\u3064\u76ee\u306e`send`\u306f`\"Hello!\"` \u3064\u307e\u308a\u3001`immutable(char)[]`\u578b\u3067\u3059\u3002\u914d\u5217\u3067\u3059\u304c\u3001\u8981\u7d20\u304c`immutable`\u306a\u306e\u3067`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3057\u3001\u304b\u3064`Variant`\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u306e\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\n\n\n##\u4f8b4\n```d:main.d\nimport std.stdio, std.concurrency;\n\n// \u30af\u30e9\u30b9\nclass A { }\n// \u5927\u304d\u3044\u30b5\u30a4\u30ba\u306e\u69cb\u9020\u4f53\nstruct S { int[32] dat; }\n\nvoid func()\n{\n\tbool running = true;\n\t\n\twhile (running) {\n\t\treceive(// \u4ee5\u4e0b2\u3064\u306e\u95a2\u6570\u306f\u3001\u3069\u3061\u3089\u304c\u547c\u3070\u308c\u308b\u304b\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002\n\t\t        (shared int* i) { writeln(\"Received an int ptr 1:\", *i); },\n\t\t        (shared(int)* i) { writeln(\"Received an int ptr 2:\", *i); },\n\t\t        // \u4ee5\u4e0b\u306ea\u306f\u6392\u4ed6\u5236\u5fa1\u306a\u3057\u306b\u7121\u7406\u3084\u308a\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\n\t\t        // main\u95a2\u6570\u5185\u3067\u5909\u66f4\u3055\u308c\u306a\u3044\u3053\u3068\u306b\u78ba\u8a3c\u3092\u5f97\u3066\u3044\u308b\u304b\u3089\u884c\u3048\u308b\u884c\u70ba\u3067\u3059\u3002\n\t\t        // \u78ba\u8a3c\u306a\u3057\u306b\u6392\u4ed6\u5236\u5fa1\u306a\u3057\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u306fNG\u3067\u3059\u3002\n\t\t        (shared A a) { writeln(\"Received a class object A:\", (cast()a).toString()); },\n\t\t        // \u5927\u304d\u3044\u30b5\u30a4\u30ba\u306e\u69cb\u9020\u4f53\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30dd\u30a4\u30f3\u30bf\u3067\u53d7\u3051\u6e21\u3057\u3092\u884c\u3046\u306e\u304c\u5409\u3002\n\t\t        (shared(S)* s) { writeln(\"Received a struct S: \", s.dat[]); },\n\t\t        (Variant v) {\n\t\t            writeln(\"Received unknown type. Terminated...\");\n\t\t            running = false;\n\t\t        });\n\t}\n}\n\nvoid main()\n{\n\tauto tid = spawn(&func);\n\tauto i = new shared int;\n\tauto a = new shared A;\n\tauto s = new shared S;\n\t*i = 123;\n\ts.dat[] = 456;\n\t// \u4ee5\u4e0b\u3001i, a, s \u306e\u578b\u304c\u305d\u308c\u305e\u308c\u4f55\u304b\u3092\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002\n\tpragma(msg, typeof(i));\n\tpragma(msg, typeof(a));\n\tpragma(msg, typeof(s));\n\t\n\tsend(tid, i);\n\tsend(tid, a);\n\tsend(tid, s);\n\tsend(tid, \"Hello!\");\n}\n```\n\n\n\n# \u307e\u3068\u3081\n\n`std.concurrency`\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u3001\u5404\u95a2\u6570\u306e\u5f15\u6570\u306b\u4f55\u3092\u6307\u5b9a\u3059\u308c\u3070\u3088\u3044\u306e\u304b\u306b\u3064\u3044\u3066\u304a\u8a71\u3057\u307e\u3057\u305f\u3002\n\n1. \u30b9\u30ec\u30c3\u30c9\u3092\u8d85\u3048\u3066\u5b89\u5168\u306b\u53d6\u308a\u6271\u308f\u308c\u308b\u578b\u3068\u306f\u3001`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059`T`\u306e\u3053\u3068\u3067\u3001`shared`/`immutable`\u306e\u3064\u3044\u3066\u3044\u306a\u3044\u53c2\u7167\u30c7\u30fc\u30bf\u3092\u542b\u307f\u307e\u305b\u3093\u3002\n2. `spawn`\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u3082\u306e\u3068\u306f\u3001`!hasUnsharedAliasing!F`\u3092\u6e80\u305f\u3059`F`\u3068\u3001`F`\u306e\u5f15\u6570\u306b\u6697\u9ed9\u5909\u63db\u53ef\u80fd\u306a`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059`T...`\u306e\u3053\u3068\u3067\u3059\u3002`F`\u306b\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u4ee5\u5916\u306b\u3082\u3001`void delegate() shared`\u306a\u3069\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n3. `send`/`receive` \u3067\u304d\u308b\u3082\u306e\u3068\u306f\u3001`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3057\u3001\u304b\u3064`Variant`\u306b\u6307\u5b9a\u53ef\u80fd\u306a`T`\u306e\u3053\u3068\u3067\u3059\u3002\u307e\u305f\u3001`receive`\u306e\u969b\u306b\u306f\u578b\u540d\u3092\u6b63\u78ba\u306b\u8a18\u8ff0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3080\u3068\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4e26\u884c\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u884c\u3046\u4e0a\u3067\u3001`shared`\u5c5e\u6027\u306f`!hasUnsharedAliasing!T`\u3092\u6e80\u305f\u3059\u6761\u4ef6\u306b\u3068\u3063\u3066\u3001`immutable`\u3068\u540c\u3058\u304f\u3089\u3044\u975e\u5e38\u306b\u9ad8\u3044\u91cd\u8981\u6027\u3092\u6301\u3061\u307e\u3059\u3002\u3057\u304b\u3057\u306a\u304c\u3089\u3001`shared`\u306e\u4f7f\u3044\u3053\u306a\u3057\u306e\u6280\u8853\u306b\u3064\u3044\u3066\u306f\u307e\u3060\u307e\u3060\u672a\u767a\u9054\u306a\u5206\u91ce\u3067\u3059\u3002\u3053\u308c\u3089\u3092\u3046\u307e\u304f\u4f7f\u304a\u3046\u3068\u601d\u3046\u3068\u3001\u5fc5\u305a`shared`\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u5e7e\u3064\u3082\u306e\u58c1\u304c\u51fa\u3066\u304f\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3082\u3057\u4eee\u306b\u3001\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u307f\u3001`shared`\u3092\u4f7f\u3063\u3066\u307f\u3066\u3001\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u3044\u3044\u65b9\u6cd5\u3084\u5b9a\u77f3\u306a\u3069\u304c\u898b\u3048\u3066\u304f\u308b\u3088\u3046\u3067\u3057\u305f\u3089\u3001\u662f\u975e\u8a18\u4e8b\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002`shared`\u3092\u4f7f\u3046\u4eba\u3068\u60c5\u5831\u304c\u5897\u3048\u308b\u3053\u3068\u3092\u5fc3\u304b\u3089\u9858\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001\u79c1\u306e\u66f8\u3044\u305f`shared`\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u306f\u4ee5\u4e0b\u3067\u3059\u3002\u305c\u3072\u3054\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n[shared\u306e\u8a71](http://qiita.com/mono_shoo/items/c759e64ebc1c8507b483)\n[shraed\u306ecast\u306b\u3064\u3044\u3066](http://qiita.com/mono_shoo/items/c7dcf742bb2dea3970cc)\n", "tags": ["dlang"]}