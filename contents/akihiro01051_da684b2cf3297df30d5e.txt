{"context": "\n\n\u306c\u3044\u3050\u308b\u307f\u3068\u5bfe\u8a71\u3057\u305f\u3044\n\u524d\u56deRaspberryPizero\u306c\u3044\u3050\u308b\u307f\u306e\u4f5c\u308a\u65b9\u306e\u7d9a\u304d\u3067\n\n\u4f5c\u308a\u305f\u3044\u3082\u306e\n\n\u306c\u3044\u3050\u308b\u307f\u3068\u4f1a\u8a71\u3057\u305f\u3044\n\u5bfe\u8a71\u5185\u5bb9\u3092\u4f5c\u6210\u3059\u308b\u306e\u306f\u5927\u5909\n\n\u97f3\u58f0\u8a8d\u8b58\u304b\u3089\u97f3\u58f0\u5408\u6210\uff0c\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u5236\u5fa1\u307e\u3067\u884c\u3046\u3068RaspberryPizero\u3067\u306f\u30b9\u30da\u30c3\u30af\u304c\u8db3\u308a\u306a\u3044\u3068\u601d\u308f\u308c\u308b\n\u2193\n\u97f3\u58f0\u8a8d\u8b58\u3068\u4f1a\u8a71\u5185\u5bb9\u4f5c\u6210\u306fAndroid\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306b\u4efb\u305b\u3088\u3046\n\ndocomoAPI(\u96d1\u8ac7API)\n\n\ndocomo\u304c\u958b\u767a\u8005\u306b\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30a2\u30bb\u30c3\u30c8\u3092API\n\n\u69d8\u3005\u306aAPI\u304c\u5229\u7528\u53ef\u80fd\n\u5229\u7528\u306b\u306f\u767b\u9332\u304c\u5fc5\u8981\nhttps://dev.smt.docomo.ne.jp/\n\n\n\n\u4eca\u56de\u306f\u96d1\u8ac7\u5bfe\u8a71\u306eAPI\u3092\u5229\u7528\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306bAndroid\u7528\u306e\u30a2\u30d7\u30ea\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u308c\u3092\u53c2\u8003\u306b\u3059\u308b\n\n\n\n\n\u4f5c\u6210\u65b9\u6cd5\n\u524d\u56deRaspberryPizero\u306c\u3044\u3050\u308b\u307f\u306e\u4f5c\u308a\u65b9\u3067\u4f5c\u6210\u3057\u305fBluetoothChat\u30a2\u30d7\u30ea\u306b\u97f3\u58f0\u8a8d\u8b58\u3068docomo\u96d1\u8ac7API\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\n\n\n\u97f3\u58f0\u8a8d\u8b58\u90e8\u5206\n\nAndroidSDK\u306b\u3042\u308b\u97f3\u58f0\u8a8d\u8b58SpeechRecognizer\u3092\u5229\u7528\n\n\nRecognizer.java\npublic class Recognizer {\nprivate docomolibs docomo;\n\nprivate Context context;\nprivate SpeechRecognizer sr;\nprivate String RecognizerText=\"\";\nprivate boolean RecognizerFlag=false;\n\npublic void initListening(Context c) {\n    docomo =new docomolibs();\n    docomo.startDocomo();\n    context=c;\n}\n\npublic void startListening() {\n    if (sr == null) {\n        sr = SpeechRecognizer.createSpeechRecognizer(context);\n        sr.setRecognitionListener(new listener());\n    }\n\n    RecognizerFlag=false;\n    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);\n    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);\n    sr.startListening(intent);\n}\n\nprotected void stopListening() {\n    if (sr != null) sr.destroy();\n    sr = null;\n}\n\npublic void restartListeningService() {\n    stopListening();\n    startListening();\n}\n\npublic boolean getRecognizerFlag() {\n    return RecognizerFlag;\n}\n\npublic String getRecognizerText() {\n    return RecognizerText;\n}\n\npublic void setRecognizerFlag() {\n    RecognizerFlag=false;\n}\n\nclass listener implements RecognitionListener {\n\n    @Override\n    public void onReadyForSpeech(Bundle bundle) {\n\n    }\n\n    @Override\n    public void onBeginningOfSpeech() {\n\n    }\n\n    @Override\n    public void onRmsChanged(float v) {\n\n    }\n\n    @Override\n    public void onBufferReceived(byte[] bytes) {\n\n    }\n\n    @Override\n    public void onEndOfSpeech() {\n\n    }\n\n    @Override\n    public void onError(int i) {\n        restartListeningService();\n    }\n\n    @Override\n    public void onResults(Bundle bundle) {\n        ArrayList results_array = bundle.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);\n        String resultsString = results_array.get(0).toString() ;\n        docomo.sendDocomo(resultsString);\n\n        while (true)\n        {\n            if (docomo.getTextFlag()==true) {\n                RecognizerText = docomo.getText();\n                Random r = new Random();\n                int i=r.nextInt(3);\n                if(i==0)RecognizerText= RecognizerText + \",0\";\n                else if(i==1)RecognizerText = RecognizerText + \",1\";\n                else  RecognizerText =  RecognizerText + \",2\";\n                RecognizerFlag=true;\n                break;\n            }\n        }\n    }\n\n    @Override\n    public void onPartialResults(Bundle bundle) {\n\n    }\n\n    @Override\n    public void onEvent(int i, Bundle bundle) {\n\n    }\n}\n}\n\n\n\n\ndocomo\u96d1\u8ac7API\u90e8\u5206\n\ndocomoAPI\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\u96d1\u8ac7\u306e\u901a\u4fe1\u90e8\u5206\u3092\u4f5c\u6210\n\n\ndocomolibs.java\npublic class docomolibs {\n\nprivate DialogueRequestParam param;\nprivate String Context=\"\";\nprivate String Text=\"\";\nprivate boolean TextFlag=false;\npublic void startDocomo(){\n    AuthApiKey.initializeAuth( \"\u767a\u884c\u3055\u308c\u305fAPIKey\");\n    param = new DialogueRequestParam();\n    param.setContext(Context);\n    param.setNickname(\"\u30c7\u30e2\");\n    param.setNickname_y(\"\u30c7\u30e2\");\n    param.setSex(\"\u7537\");\n    param.setBloodtype(\"A\");\n    param.setBirthdateY(2016);\n    param.setBirthdateM(10);\n    param.setBirthdateD(9);\n    param.setAge(25);\n    param.setConstellations(\"\u5c71\u7f8a\u5ea7\");\n    param.setPlace(\"\u6771\u4eac\");\n    param.setMode(\"dialog\");\n}\n\npublic void sendDocomo(String text){\n    Text=\"\";\n    TextFlag=false;\n    param.setUtt(text);\n    param.setContext(Context);\n    AsyncTask<DialogueRequestParam, Void, Void> task = new AsyncTask<DialogueRequestParam, Void, Void>()\n    {\n\n        @Override\n        protected Void doInBackground(DialogueRequestParam... dialogueRequestParams) {\n            DialogueResultData resultData = null;\n            DialogueRequestParam req_param = dialogueRequestParams[0];\n            //\u8981\u6c42\u51e6\u7406\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n            Dialogue dialogue = new Dialogue();\n            //\u8981\u6c42\u51e6\u7406\u30af\u30e9\u30b9\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u6e21\u3057\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n            try {\n                resultData = dialogue.request(req_param);\n            } catch (SdkException e) {\n                e.printStackTrace();\n            } catch (ServerException e) {\n                e.printStackTrace();\n            }\n            Text=resultData.getUtt();\n            Context=resultData.getContext();\n            TextFlag=true;\n            return null;\n        }\n    };\n    task.execute(param);\n}\n\npublic String getText(){\n    return Text;\n}\n\npublic boolean getTextFlag() {\n    return TextFlag;\n}\n}\n\n\n\n\n\nBluetoothChat\u3067\u7d50\u679c\u3092\u9001\u4fe1\n\n\n\u30bf\u30a4\u30de\u30fc\u6a5f\u80fd\u3067\u96d1\u8ac7\u7d50\u679c\u3092Bluetooth\u3067\u9001\u4fe1\u3059\u308b\u305f\u3081\u4ee5\u4e0b\u3092\u8ffd\u52a0\n\n\n\n\nBluetoothChatFragment.java\n public class MainTimerTask extends TimerTask {\n\n        @Override\n        public void run() {\n            mHandler.post( new Runnable() {\n                public void run() {\n                    if(recognizer.getRecognizerFlag()==true) {\n                        sendMessage(recognizer.getRecognizerText());\n                        recognizer.setRecognizerFlag();\n                        recognizer.restartListeningService();\n                    }\n                }\n            });\n        }\n    }\n\n\n\n\u5b9f\u884c\n\nBluetooth\u3067\u306c\u3044\u3050\u308b\u307f\u3068\u63a5\u7d9a\u5f8c\u97f3\u58f0\u8a8d\u8b58\u304c\u958b\u59cb\u3055\u308c\u308b\n\u97f3\u58f0\u8a8d\u8b58\u5f8c\uff0c\u96d1\u8ac7API\u3068\u901a\u4fe1\u3092\u884c\u3044\u5bfe\u8a71\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\n\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306b\u6587\u5b57\u3092\u5165\u529b\u3057\u306a\u304f\u3066\u3082\uff0c\u96d1\u8ac7API\u304b\u3089\u306e\u8fd4\u7b54\u304c\u5165\u529b\u3055\u308c\u3066\u306c\u3044\u3050\u308b\u307f\u304c\u3057\u3083\u3079\u3063\u3066\u304f\u308c\u308b\n\n\n\u30b9\u30de\u30db\u304b\u3089\u97f3\u58f0\u8a8d\u8b58\u2192docomo\u96d1\u8ac7API\u2192bluetooth\u2192RaspberryPizero\u2192OpenJTalk+\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u30fc\u3067\u3001\u4f1a\u8a71\u3063\u307d\u3044\u3082\u306e\u304c\u3067\u304d\u305f\u3002\u5bdd\u308b\u3002 pic.twitter.com/n6WtwxVCTP\u2014 \u30a2\u30ad\u30d2\u30ed (@akihiro01051) 2016\u5e749\u670820\u65e5\n\n\n.@akihiro01051 \u305f\u3076\u3093\u97f3\u58f0\u306f\u51fa\u3066\u308b\u306f\u305a\u3002 pic.twitter.com/DK5psVUH94\u2014 \u30a2\u30ad\u30d2\u30ed (@akihiro01051) 2016\u5e749\u670829\u65e5\n\n\n\u4eca\u5f8c\u306e\u8ab2\u984c\n\n\u30a2\u30d7\u30ea\u306e\u753b\u9762\u304c\u30b5\u30f3\u30d7\u30eb\u306e\u307e\u307e\u3067\u3044\u307e\u3044\u3061\n\u5468\u308a\u304c\u308f\u3055\u308f\u3055\u3057\u3066\u308b\u3068\u97f3\u58f0\u8a8d\u8b58\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044(\u3057\u3083\u3079\u308a\u7d42\u308f\u308a\u3092\u8a8d\u8b58\u3067\u304d\u306a\u3044)\n\u306c\u3044\u3050\u308b\u307f\u5358\u4f53\u3068\u304a\u8a71\u3057\u305f\u3044\n\n# \u306c\u3044\u3050\u308b\u307f\u3068\u5bfe\u8a71\u3057\u305f\u3044\n\u524d\u56de[RaspberryPizero\u306c\u3044\u3050\u308b\u307f\u306e\u4f5c\u308a\u65b9](http://qiita.com/akihiro01051/items/de7b6e708b382fa0f6c7)\u306e\u7d9a\u304d\u3067\n\n## \u4f5c\u308a\u305f\u3044\u3082\u306e\n- \u306c\u3044\u3050\u308b\u307f\u3068\u4f1a\u8a71\u3057\u305f\u3044\n- \u5bfe\u8a71\u5185\u5bb9\u3092\u4f5c\u6210\u3059\u308b\u306e\u306f\u5927\u5909\n\n\u97f3\u58f0\u8a8d\u8b58\u304b\u3089\u97f3\u58f0\u5408\u6210\uff0c\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u5236\u5fa1\u307e\u3067\u884c\u3046\u3068RaspberryPizero\u3067\u306f\u30b9\u30da\u30c3\u30af\u304c\u8db3\u308a\u306a\u3044\u3068\u601d\u308f\u308c\u308b\n\u2193\n\u97f3\u58f0\u8a8d\u8b58\u3068\u4f1a\u8a71\u5185\u5bb9\u4f5c\u6210\u306fAndroid\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306b\u4efb\u305b\u3088\u3046\n\n## docomoAPI(\u96d1\u8ac7API)\n- docomo\u304c\u958b\u767a\u8005\u306b\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30a2\u30bb\u30c3\u30c8\u3092API\n    - \u69d8\u3005\u306aAPI\u304c\u5229\u7528\u53ef\u80fd\n    - \u5229\u7528\u306b\u306f\u767b\u9332\u304c\u5fc5\u8981\n    - [https://dev.smt.docomo.ne.jp/](https://dev.smt.docomo.ne.jp/)\n\n- \u4eca\u56de\u306f\u96d1\u8ac7\u5bfe\u8a71\u306eAPI\u3092\u5229\u7528\n    - \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306bAndroid\u7528\u306e\u30a2\u30d7\u30ea\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u308c\u3092\u53c2\u8003\u306b\u3059\u308b\n\n\n## \u4f5c\u6210\u65b9\u6cd5\n\u524d\u56de[RaspberryPizero\u306c\u3044\u3050\u308b\u307f\u306e\u4f5c\u308a\u65b9](http://qiita.com/akihiro01051/items/de7b6e708b382fa0f6c7)\u3067\u4f5c\u6210\u3057\u305fBluetoothChat\u30a2\u30d7\u30ea\u306b\u97f3\u58f0\u8a8d\u8b58\u3068docomo\u96d1\u8ac7API\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\n\n- \u97f3\u58f0\u8a8d\u8b58\u90e8\u5206\n    - AndroidSDK\u306b\u3042\u308b\u97f3\u58f0\u8a8d\u8b58__SpeechRecognizer__\u3092\u5229\u7528\n\n    ``` Recognizer.java\npublic class Recognizer {\n    private docomolibs docomo;\n\n    private Context context;\n    private SpeechRecognizer sr;\n    private String RecognizerText=\"\";\n    private boolean RecognizerFlag=false;\n\n    public void initListening(Context c) {\n        docomo =new docomolibs();\n        docomo.startDocomo();\n        context=c;\n    }\n\n    public void startListening() {\n        if (sr == null) {\n            sr = SpeechRecognizer.createSpeechRecognizer(context);\n            sr.setRecognitionListener(new listener());\n        }\n\n        RecognizerFlag=false;\n        Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);\n        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);\n        sr.startListening(intent);\n    }\n\n    protected void stopListening() {\n        if (sr != null) sr.destroy();\n        sr = null;\n    }\n\n    public void restartListeningService() {\n        stopListening();\n        startListening();\n    }\n\n    public boolean getRecognizerFlag() {\n        return RecognizerFlag;\n    }\n\n    public String getRecognizerText() {\n        return RecognizerText;\n    }\n\n    public void setRecognizerFlag() {\n        RecognizerFlag=false;\n    }\n\n    class listener implements RecognitionListener {\n\n        @Override\n        public void onReadyForSpeech(Bundle bundle) {\n\n        }\n\n        @Override\n        public void onBeginningOfSpeech() {\n\n        }\n\n        @Override\n        public void onRmsChanged(float v) {\n\n        }\n\n        @Override\n        public void onBufferReceived(byte[] bytes) {\n\n        }\n\n        @Override\n        public void onEndOfSpeech() {\n\n        }\n\n        @Override\n        public void onError(int i) {\n            restartListeningService();\n        }\n\n        @Override\n        public void onResults(Bundle bundle) {\n            ArrayList results_array = bundle.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);\n            String resultsString = results_array.get(0).toString() ;\n            docomo.sendDocomo(resultsString);\n\n            while (true)\n            {\n                if (docomo.getTextFlag()==true) {\n                    RecognizerText = docomo.getText();\n                    Random r = new Random();\n                    int i=r.nextInt(3);\n                    if(i==0)RecognizerText= RecognizerText + \",0\";\n                    else if(i==1)RecognizerText = RecognizerText + \",1\";\n                    else  RecognizerText =  RecognizerText + \",2\";\n                    RecognizerFlag=true;\n                    break;\n                }\n            }\n        }\n\n        @Override\n        public void onPartialResults(Bundle bundle) {\n\n        }\n\n        @Override\n        public void onEvent(int i, Bundle bundle) {\n\n        }\n    }\n}\n```\n\n\n- docomo\u96d1\u8ac7API\u90e8\u5206\n    - docomoAPI\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n    - \u96d1\u8ac7\u306e\u901a\u4fe1\u90e8\u5206\u3092\u4f5c\u6210\n\n    ``` docomolibs.java\npublic class docomolibs {\n\n    private DialogueRequestParam param;\n    private String Context=\"\";\n    private String Text=\"\";\n    private boolean TextFlag=false;\n    public void startDocomo(){\n        AuthApiKey.initializeAuth( \"\u767a\u884c\u3055\u308c\u305fAPIKey\");\n        param = new DialogueRequestParam();\n        param.setContext(Context);\n        param.setNickname(\"\u30c7\u30e2\");\n        param.setNickname_y(\"\u30c7\u30e2\");\n        param.setSex(\"\u7537\");\n        param.setBloodtype(\"A\");\n        param.setBirthdateY(2016);\n        param.setBirthdateM(10);\n        param.setBirthdateD(9);\n        param.setAge(25);\n        param.setConstellations(\"\u5c71\u7f8a\u5ea7\");\n        param.setPlace(\"\u6771\u4eac\");\n        param.setMode(\"dialog\");\n    }\n\n    public void sendDocomo(String text){\n        Text=\"\";\n        TextFlag=false;\n        param.setUtt(text);\n        param.setContext(Context);\n        AsyncTask<DialogueRequestParam, Void, Void> task = new AsyncTask<DialogueRequestParam, Void, Void>()\n        {\n\n            @Override\n            protected Void doInBackground(DialogueRequestParam... dialogueRequestParams) {\n                DialogueResultData resultData = null;\n                DialogueRequestParam req_param = dialogueRequestParams[0];\n                //\u8981\u6c42\u51e6\u7406\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n                Dialogue dialogue = new Dialogue();\n                //\u8981\u6c42\u51e6\u7406\u30af\u30e9\u30b9\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u6e21\u3057\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n                try {\n                    resultData = dialogue.request(req_param);\n                } catch (SdkException e) {\n                    e.printStackTrace();\n                } catch (ServerException e) {\n                    e.printStackTrace();\n                }\n                Text=resultData.getUtt();\n                Context=resultData.getContext();\n                TextFlag=true;\n                return null;\n            }\n        };\n        task.execute(param);\n    }\n\n    public String getText(){\n        return Text;\n    }\n\n    public boolean getTextFlag() {\n        return TextFlag;\n    }\n}\n\n- BluetoothChat\u3067\u7d50\u679c\u3092\u9001\u4fe1\n    - \u30bf\u30a4\u30de\u30fc\u6a5f\u80fd\u3067\u96d1\u8ac7\u7d50\u679c\u3092Bluetooth\u3067\u9001\u4fe1\u3059\u308b\u305f\u3081\u4ee5\u4e0b\u3092\u8ffd\u52a0\n\n   ``` BluetoothChatFragment.java\n public class MainTimerTask extends TimerTask {\n\n        @Override\n        public void run() {\n            mHandler.post( new Runnable() {\n                public void run() {\n                    if(recognizer.getRecognizerFlag()==true) {\n                        sendMessage(recognizer.getRecognizerText());\n                        recognizer.setRecognizerFlag();\n                        recognizer.restartListeningService();\n                    }\n                }\n            });\n        }\n    }\n```\n\n## \u5b9f\u884c\n- Bluetooth\u3067\u306c\u3044\u3050\u308b\u307f\u3068\u63a5\u7d9a\u5f8c\u97f3\u58f0\u8a8d\u8b58\u304c\u958b\u59cb\u3055\u308c\u308b\n- \u97f3\u58f0\u8a8d\u8b58\u5f8c\uff0c\u96d1\u8ac7API\u3068\u901a\u4fe1\u3092\u884c\u3044\u5bfe\u8a71\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\n- \u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306b\u6587\u5b57\u3092\u5165\u529b\u3057\u306a\u304f\u3066\u3082\uff0c\u96d1\u8ac7API\u304b\u3089\u306e\u8fd4\u7b54\u304c\u5165\u529b\u3055\u308c\u3066\u306c\u3044\u3050\u308b\u307f\u304c\u3057\u3083\u3079\u3063\u3066\u304f\u308c\u308b\n\n<blockquote class=\"twitter-video\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">\u30b9\u30de\u30db\u304b\u3089\u97f3\u58f0\u8a8d\u8b58\u2192docomo\u96d1\u8ac7API\u2192bluetooth\u2192RaspberryPizero\u2192OpenJTalk+\u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u30fc\u3067\u3001\u4f1a\u8a71\u3063\u307d\u3044\u3082\u306e\u304c\u3067\u304d\u305f\u3002<br><br>\u5bdd\u308b\u3002 <a href=\"https://t.co/n6WtwxVCTP\">pic.twitter.com/n6WtwxVCTP</a></p>&mdash; \u30a2\u30ad\u30d2\u30ed (@akihiro01051) <a href=\"https://twitter.com/akihiro01051/status/778264463984041984\">2016\u5e749\u670820\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<blockquote class=\"twitter-video\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">.<a href=\"https://twitter.com/akihiro01051\">@akihiro01051</a> <br>\u305f\u3076\u3093\u97f3\u58f0\u306f\u51fa\u3066\u308b\u306f\u305a\u3002 <a href=\"https://t.co/DK5psVUH94\">pic.twitter.com/DK5psVUH94</a></p>&mdash; \u30a2\u30ad\u30d2\u30ed (@akihiro01051) <a href=\"https://twitter.com/akihiro01051/status/781331438884966400\">2016\u5e749\u670829\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n## \u4eca\u5f8c\u306e\u8ab2\u984c\n- \u30a2\u30d7\u30ea\u306e\u753b\u9762\u304c\u30b5\u30f3\u30d7\u30eb\u306e\u307e\u307e\u3067\u3044\u307e\u3044\u3061\n- \u5468\u308a\u304c\u308f\u3055\u308f\u3055\u3057\u3066\u308b\u3068\u97f3\u58f0\u8a8d\u8b58\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044(\u3057\u3083\u3079\u308a\u7d42\u308f\u308a\u3092\u8a8d\u8b58\u3067\u304d\u306a\u3044)\n- \u306c\u3044\u3050\u308b\u307f\u5358\u4f53\u3068\u304a\u8a71\u3057\u305f\u3044\n", "tags": ["Android", "docomoAPI", "\u97f3\u58f0\u8a8d\u8b58"]}