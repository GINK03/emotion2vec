{"tags": ["OpenCV", "Python", "\u753b\u50cf\u51e6\u7406"], "context": "\n\n\u306f\u3058\u3081\u306b\nOpenCV(Open Source Computer Vision Library)\u306fBSD\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u6620\u50cf/\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u96c6\u3067\u3059\u3002\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3001\u7269\u4f53\u8a8d\u8b58\u3001\u6620\u50cf\u89e3\u6790\u3001\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u591a\u6570\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nOpenCV\u3092\u4f7f\u3063\u305f\u52d5\u4f53\u8ffd\u8de1\u306e\u4f8b (OpenCV Google Summer of Code 2015)\nhttps://www.youtube.com/watch?v=OUbUFn71S4s\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\nOpenCV 3\uff08core + contrib\uff09\u3092Python 3\u306e\u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff06OpenCV 2\u3068OpenCV 3\u306e\u9055\u3044\uff06\u7c21\u5358\u306a\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\n\u9759\u6b62\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\nOpenCV\u3067\u30a8\u30c3\u30b8\u691c\u51fa\u3057\u3066\u307f\u308b\nOpenCV\u3067\u5404\u7a2e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u3092\u3059\u308b\uff08\u30b0\u30e9\u30c7\u30a3\u30a8\u30f3\u30c8\u3001\u30cf\u30a4\u30d1\u30b9\u3001\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\uff09\nOpenCV\u3067\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3059\u308b\uff08AgastFeature, FAST, GFTT, MSER, AKAZE, BRISK, KAZE, ORB, SimpleBlob\uff09\n\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\nOpenCV\u3067\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b\nOpenCV\u3067Web\u30ab\u30e1\u30e9/\u30d3\u30c7\u30aa\u30ab\u30e1\u30e9\u306e\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b\n\u4eca\u56de\u306f\u3001OpenCV\u3092\u4f7f\u3063\u3066\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u63cf\u753b\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\n\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3068\u306f\u3001\u52d5\u753b\u306b\u304a\u3044\u3066\u3001\u7279\u5fb4\u70b9\u306e\u30d5\u30ec\u30fc\u30e0\u3068\u30d5\u30ec\u30fc\u30e0\u306e\u5dee\u5206\uff08\u30d9\u30af\u30c8\u30eb\uff09\u3092\u8868\u73fe\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u306f\u3001\u901a\u5e38\u4e00\u5b9a\u306a\u306e\u3067\u3001\u7279\u5fb4\u70b9\u306e\u901f\u5ea6\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\n\u8a08\u7b97\u65b9\u6cd5\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u7528\u3044\u308b\u65b9\u6cd5\u3084\u7279\u5fb4\u70b9/\u7279\u5fb4\u91cf\u3092\u7528\u3044\u308b\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u7279\u5fb4\u70b9\u3092\u7528\u3044\u3066\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u63cf\u753b\u3057\u3066\u307f\u307e\u3059\u3002\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u524d\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u7279\u5fb4\u70b9\u3092\u691c\u51fa\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3001Shi-Tomashi\u306e\u65b9\u6cd5\u3092\u7528\u3044\u3066\u7279\u5fb4\u70b9\u3092\u691c\u51fa\u3057\u307e\u3059\u3002\ncv2.goodFeaturesToTrack() \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u524d\u30d5\u30ec\u30fc\u30e0\u5185\u306e\u7279\u5fb4\u70b9\u306e\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u3001\u524d\u30d5\u30ec\u30fc\u30e0\u3001\u6b21\u30d5\u30ec\u30fc\u30e0\u306e\u60c5\u5831\u3092\u7528\u3044\u3066\u3001\u753b\u50cf\u30d4\u30e9\u30df\u30c3\u30c9\u578bLucas-Kanade\u6cd5\u3067\u8a08\u7b97\u3057\u307e\u3059\u3002\ncv2.calcOpticalFlowPyrLK() \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u30d5\u30ec\u30fc\u30e0\u306b\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n2\u30683\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\n\u52d5\u4f5c\u74b0\u5883\n\npython: 3.5.1\nOpenCV: 3.1.0\n\n\n\u52d5\u753b\u30c7\u30fc\u30bf\nOpenCV\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u52d5\u753b\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\u3000\u3000OpenCV\\opencv\\sources\\samples\\data\\768x576.avi\n\n\nLucasKande.py\nimport numpy as np\nimport cv2\n\ncap = cv2.VideoCapture('768x576.avi')\n\n# Shi-Tomasi\u306e\u30b3\u30fc\u30ca\u30fc\u691c\u51fa\u30d1\u30e9\u30e1\u30fc\u30bf\nfeature_params = dict( maxCorners = 100,\n                       qualityLevel = 0.3,\n                       minDistance = 7,\n                       blockSize = 7 )\n\n# Lucas-Kanade\u6cd5\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\nlk_params = dict( winSize  = (15,15),\n                  maxLevel = 2,\n                  criteria = (cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, 10, 0.03))\n\n# \u30e9\u30f3\u30c0\u30e0\u306b\u8272\u3092\uff11\uff10\uff10\u500b\u751f\u6210\uff08\u50240\uff5e255\u306e\u7bc4\u56f2\u3067100\u884c3\u5217\u306e\u30e9\u30f3\u30c0\u30e0\u306andarray\u3092\u751f\u6210\uff09\ncolor = np.random.randint(0, 255, (100, 3))\n\n# \u6700\u521d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u51e6\u7406\nend_flag, frame = cap.read()\ngray_prev = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\nfeature_prev = cv2.goodFeaturesToTrack(gray_prev, mask = None, **feature_params)\nmask = np.zeros_like(frame)\n\nwhile(end_flag):\n    # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n    gray_next = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n\n    # \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u691c\u51fa\n    feature_next, status, err = cv2.calcOpticalFlowPyrLK(gray_prev, gray_next, feature_prev, None, **lk_params)\n\n    # \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u691c\u51fa\u3057\u305f\u7279\u5fb4\u70b9\u3092\u9078\u5225\uff080\uff1a\u691c\u51fa\u305b\u305a\u30011\uff1a\u691c\u51fa\u3057\u305f\uff09\n    good_prev = feature_prev[status == 1]\n    good_next = feature_next[status == 1]\n\n    # \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u63cf\u753b\n    for i, (next_point, prev_point) in enumerate(zip(good_next, good_prev)):\n        prev_x, prev_y = prev_point.ravel()\n        next_x, next_y = next_point.ravel()\n        mask = cv2.line(mask, (next_x, next_y), (prev_x, prev_y), color[i].tolist(), 2)\n        frame = cv2.circle(frame, (next_x, next_y), 5, color[i].tolist(), -1)\n    img = cv2.add(frame, mask)\n\n    # \u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8868\u793a\n    cv2.imshow('window', img)\n\n    # ESC\u30ad\u30fc\u62bc\u4e0b\u3067\u7d42\u4e86\n    if cv2.waitKey(30) & 0xff == 27:\n        break\n\n    # \u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u3001\u30dd\u30a4\u30f3\u30c8\u306e\u6e96\u5099\n    gray_prev = gray_next.copy()\n    feature_prev = good_next.reshape(-1, 1, 2)\n    end_flag, frame = cap.read()\n\n# \u7d42\u4e86\u51e6\u7406\ncv2.destroyAllWindows()\ncap.release()\n\n\nOpenCV\u306a\u3089\u3001\u7279\u5fb4\u70b9\u306e\u62bd\u51fa\u3001\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u306e\u8a08\u7b97\u3068\u3082\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u3092\uff11\u500b\u547c\u3076\u3060\u3051\u3067\u3059\u3002\n\u306a\u3093\u3066\u4fbf\u5229\u306a\u4e16\u306e\u4e2d\u306a\u3093\u3067\u3057\u3087\u3046(^^;)\n\n\u5b9f\u884c\u7d50\u679c\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u304c\u63cf\u753b\u3055\u308c\u307e\u3059\u3002\n\n\n\n\n# \u306f\u3058\u3081\u306b\nOpenCV(Open Source Computer Vision Library)\u306fBSD\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u6620\u50cf/\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u96c6\u3067\u3059\u3002\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3001\u7269\u4f53\u8a8d\u8b58\u3001\u6620\u50cf\u89e3\u6790\u3001\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u591a\u6570\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nOpenCV\u3092\u4f7f\u3063\u305f\u52d5\u4f53\u8ffd\u8de1\u306e\u4f8b (OpenCV Google Summer of Code 2015)\n[https://www.youtube.com/watch?v=OUbUFn71S4s](https://www.youtube.com/watch?v=OUbUFn71S4s)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\n[OpenCV 3\uff08core + contrib\uff09\u3092Python 3\u306e\u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff06OpenCV 2\u3068OpenCV 3\u306e\u9055\u3044\uff06\u7c21\u5358\u306a\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af](http://qiita.com/olympic2020/items/d5d475a446ec9c73261e)\n\n\u9759\u6b62\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n[OpenCV\u3067\u30a8\u30c3\u30b8\u691c\u51fa\u3057\u3066\u307f\u308b](http://qiita.com/olympic2020/items/2c3a2bfefe73ab5c86a4)\n[OpenCV\u3067\u5404\u7a2e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u3092\u3059\u308b\uff08\u30b0\u30e9\u30c7\u30a3\u30a8\u30f3\u30c8\u3001\u30cf\u30a4\u30d1\u30b9\u3001\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\uff09](http://qiita.com/olympic2020/items/93e01ef22e46b14a60a9)\n[OpenCV\u3067\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3059\u308b\uff08AgastFeature, FAST, GFTT, MSER, AKAZE, BRISK, KAZE, ORB, SimpleBlob\uff09](http://qiita.com/olympic2020/items/62989573a30ec1d8180b)\n\n\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n[OpenCV\u3067\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b](http://qiita.com/olympic2020/items/ce00fab38d829965db3b)\n[OpenCV\u3067Web\u30ab\u30e1\u30e9/\u30d3\u30c7\u30aa\u30ab\u30e1\u30e9\u306e\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b](http://qiita.com/olympic2020/items/12a2eceaf65f142ec3df)\n\n\u4eca\u56de\u306f\u3001OpenCV\u3092\u4f7f\u3063\u3066\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u63cf\u753b\u3057\u3066\u307f\u307e\u3059\u3002\n\n# \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\n\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3068\u306f\u3001\u52d5\u753b\u306b\u304a\u3044\u3066\u3001\u7279\u5fb4\u70b9\u306e\u30d5\u30ec\u30fc\u30e0\u3068\u30d5\u30ec\u30fc\u30e0\u306e\u5dee\u5206\uff08\u30d9\u30af\u30c8\u30eb\uff09\u3092\u8868\u73fe\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u306f\u3001\u901a\u5e38\u4e00\u5b9a\u306a\u306e\u3067\u3001\u7279\u5fb4\u70b9\u306e\u901f\u5ea6\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\n\u8a08\u7b97\u65b9\u6cd5\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u7528\u3044\u308b\u65b9\u6cd5\u3084\u7279\u5fb4\u70b9/\u7279\u5fb4\u91cf\u3092\u7528\u3044\u308b\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u7279\u5fb4\u70b9\u3092\u7528\u3044\u3066\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u63cf\u753b\u3057\u3066\u307f\u307e\u3059\u3002\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. \u524d\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u7279\u5fb4\u70b9\u3092\u691c\u51fa\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3001Shi-Tomashi\u306e\u65b9\u6cd5\u3092\u7528\u3044\u3066\u7279\u5fb4\u70b9\u3092\u691c\u51fa\u3057\u307e\u3059\u3002  \n    cv2.goodFeaturesToTrack() \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n2. \u524d\u30d5\u30ec\u30fc\u30e0\u5185\u306e\u7279\u5fb4\u70b9\u306e\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u3001\u524d\u30d5\u30ec\u30fc\u30e0\u3001\u6b21\u30d5\u30ec\u30fc\u30e0\u306e\u60c5\u5831\u3092\u7528\u3044\u3066\u3001\u753b\u50cf\u30d4\u30e9\u30df\u30c3\u30c9\u578bLucas-Kanade\u6cd5\u3067\u8a08\u7b97\u3057\u307e\u3059\u3002  \n    cv2.calcOpticalFlowPyrLK() \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n3. \u30d5\u30ec\u30fc\u30e0\u306b\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n4. 2\u30683\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\n+ \u52d5\u4f5c\u74b0\u5883\n    - python: 3.5.1\n    - OpenCV: 3.1.0\n\n+ \u52d5\u753b\u30c7\u30fc\u30bf\n    OpenCV\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u52d5\u753b\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n    \u3000\u3000OpenCV\\opencv\\sources\\samples\\data\\768x576.avi\n\n```LucasKande.py\nimport numpy as np\nimport cv2\n\ncap = cv2.VideoCapture('768x576.avi')\n\n# Shi-Tomasi\u306e\u30b3\u30fc\u30ca\u30fc\u691c\u51fa\u30d1\u30e9\u30e1\u30fc\u30bf\nfeature_params = dict( maxCorners = 100,\n                       qualityLevel = 0.3,\n                       minDistance = 7,\n                       blockSize = 7 )\n\n# Lucas-Kanade\u6cd5\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\nlk_params = dict( winSize  = (15,15),\n                  maxLevel = 2,\n                  criteria = (cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, 10, 0.03))\n\n# \u30e9\u30f3\u30c0\u30e0\u306b\u8272\u3092\uff11\uff10\uff10\u500b\u751f\u6210\uff08\u50240\uff5e255\u306e\u7bc4\u56f2\u3067100\u884c3\u5217\u306e\u30e9\u30f3\u30c0\u30e0\u306andarray\u3092\u751f\u6210\uff09\ncolor = np.random.randint(0, 255, (100, 3))\n\n# \u6700\u521d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u51e6\u7406\nend_flag, frame = cap.read()\ngray_prev = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\nfeature_prev = cv2.goodFeaturesToTrack(gray_prev, mask = None, **feature_params)\nmask = np.zeros_like(frame)\n\nwhile(end_flag):\n    # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n    gray_next = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n\n    # \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u691c\u51fa\n    feature_next, status, err = cv2.calcOpticalFlowPyrLK(gray_prev, gray_next, feature_prev, None, **lk_params)\n\n    # \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u691c\u51fa\u3057\u305f\u7279\u5fb4\u70b9\u3092\u9078\u5225\uff080\uff1a\u691c\u51fa\u305b\u305a\u30011\uff1a\u691c\u51fa\u3057\u305f\uff09\n    good_prev = feature_prev[status == 1]\n    good_next = feature_next[status == 1]\n\n    # \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u63cf\u753b\n    for i, (next_point, prev_point) in enumerate(zip(good_next, good_prev)):\n        prev_x, prev_y = prev_point.ravel()\n        next_x, next_y = next_point.ravel()\n        mask = cv2.line(mask, (next_x, next_y), (prev_x, prev_y), color[i].tolist(), 2)\n        frame = cv2.circle(frame, (next_x, next_y), 5, color[i].tolist(), -1)\n    img = cv2.add(frame, mask)\n\n    # \u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8868\u793a\n    cv2.imshow('window', img)\n\n    # ESC\u30ad\u30fc\u62bc\u4e0b\u3067\u7d42\u4e86\n    if cv2.waitKey(30) & 0xff == 27:\n        break\n\n    # \u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u3001\u30dd\u30a4\u30f3\u30c8\u306e\u6e96\u5099\n    gray_prev = gray_next.copy()\n    feature_prev = good_next.reshape(-1, 1, 2)\n    end_flag, frame = cap.read()\n\n# \u7d42\u4e86\u51e6\u7406\ncv2.destroyAllWindows()\ncap.release()\n```\n\nOpenCV\u306a\u3089\u3001\u7279\u5fb4\u70b9\u306e\u62bd\u51fa\u3001\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u306e\u8a08\u7b97\u3068\u3082\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u3092\uff11\u500b\u547c\u3076\u3060\u3051\u3067\u3059\u3002\n\u306a\u3093\u3066\u4fbf\u5229\u306a\u4e16\u306e\u4e2d\u306a\u3093\u3067\u3057\u3087\u3046(^^;)\n\n# \u5b9f\u884c\u7d50\u679c\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u304c\u63cf\u753b\u3055\u308c\u307e\u3059\u3002\n\n![result1.png](https://qiita-image-store.s3.amazonaws.com/0/107056/9422f40f-2ca2-5542-d2ed-82a6418e272a.png)\n\n![result2.png](https://qiita-image-store.s3.amazonaws.com/0/107056/855eeacb-0ef2-98c7-5a25-87eac130210e.png)\n\n![result3.png](https://qiita-image-store.s3.amazonaws.com/0/107056/b633daa1-bf76-2585-82e3-c6185b2204fe.png)\n\n![result4.png](https://qiita-image-store.s3.amazonaws.com/0/107056/6ecc01fd-5414-e8de-9749-57eae30687d8.png)\n\n"}