{"context": "\n\u52d5\u4f5c\u74b0\u5883\nXeon E5-2620 v4 (8\u30b3\u30a2) x 2\n32GB RAM\nCentOS 6.8 (64bit)\nopenmpi-1.8.x86_64 \u3068\u305d\u306e-devel\nmpich.x86_64 3.1-5.el6\u3068\u305d\u306e-devel\ngcc version 4.4.7 (\u3068gfortran)\nNCAR Command Language Version 6.3.0\nWRF v3.7.1\nGNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)\n\n\n\u4ee5\u4e0b\u3092\u884c\u3044\u305f\u3044\n\n2\u3064\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u540c\u3058\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6bd4\u8f03\n\u30e9\u30f3\u30c0\u30e0\u306b\u53d6\u308a\u51fa\u3059\n\u30d5\u30a1\u30a4\u30eb(png\u753b\u50cf)\u3092\u6bd4\u8f03\u3057\u305fhtml\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210 (\u30bf\u30a4\u30c8\u30eb\u4ed8\u304d)\npdf\u5316\n\n\u76ee\u7684\u306f\u3001WRF(Weather Research and Forecasting Model)\u3067\u51e6\u7406\u3057\u305f\u7d50\u679c\u753b\u50cf\u306e\u6bd4\u8f03\u3002\n\nv0.1 > \u6587\u5b57\u5217\u7f6e\u63db + if [ -e\n2\u3064\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u540c\u3058\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308bbash script\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\n\u53c2\u8003(\u6587\u5b57\u5217\u7f6e\u63db) http://d.hatena.ne.jp/ozuma/20130928/1380380390\n\ncode\n\ncompare_images_170127_exec\n#!/usr/bin/env bash\n\n#\n# v0.1 Jan,27,2017\n#   - find files in both directories\n#\n\nif [ $# -lt 2 ]; then\n    echo \"Usage:\"\n    echo \"  [cmd] [source1 dir] [source2 dir]\"\n    echo \"  to compare files with same names in 2 dirs\"\n    echo \n    exit\nfi\n\nsrc1dir=$1\nsrc2dir=$2\n\n#echo $src1dir\n#echo $src2dir\n\nfor src1file in $(ls $src1dir/*.png);do\n    # echo $src1file\n    src2file=${src1file/$src1dir/$src2dir}\n\n    if [ -e $src2file ]; then\n        echo $src2file\n    fi\n\n    #break; // for debug\ndone\n\n\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u751f\u6210\nmkdir WORK_A\nmkdir WORK_B\ntouch WORK_A/AAA.png\ntouch WORK_A/BBB.png\ntouch WORK_A/CCC.png\ntouch WORK_A/DDD.png\ntouch WORK_B/BBB.png\ntouch WORK_B/DDD.png\n\n\u3053\u308c\u3067BBB.png\u3068DDD.png\u306e\u307f\u5171\u901a\u3068\u306a\u308b\u3002\n\n\u5b9f\u884c\u4f8b > \u5f15\u6570\u306a\u3057 (\u4f7f\u3044\u65b9\u306e\u8868\u793a)\n$ bash compare_images_170127_exec \nUsage:\n  [cmd] [source1 dir] [source2 dir]\n  to compare files with same names in 2 dirs\n\n\n\u5b9f\u884c\u4f8b > \u5f15\u6570\u3042\u308a (\u30d5\u30a1\u30a4\u30eb\u540d\u8868\u793a)\n$ bash compare_images_170127_exec WORK_A WORK_B\nWORK_B/BBB.png\nWORK_B/DDD.png\n\n\n\u3082\u3063\u3068\u7c21\u5358\u306a\u65b9\u6cd5\n\u3042\u308c\u3070\u77e5\u308a\u305f\u3044\u3002\n\u3042\u3063\u305f\u3002\nhttp://stackoverflow.com/questions/10087571/given-two-directory-trees-how-to-find-which-files-are-the-same\n$ diff -srq WORK_A WORK_B\nOnly in WORK_A: AAA.png\nFiles WORK_A/BBB.png and WORK_B/BBB.png are identical\nOnly in WORK_A: CCC.png\nFiles WORK_A/DDD.png and WORK_B/DDD.png are identical\n\n$ diff -srq WORK_A/ WORK_B/ | grep identical\nFiles WORK_A/BBB.png and WORK_B/BBB.png are identical\nFiles WORK_A/DDD.png and WORK_B/DDD.png are identical\n\n\nv0.2 > diff -srq\ndiff -srq\u4f7f\u7528\n\ncode\n\ncompare_images_170127_exec\n#!/usr/bin/env bash\n\n# v0.2 Jan,27,2017\n#   - use [diff -srq] \n# v0.1 Jan,27,2017\n#   - find files in both directories\n#\n\nif [ $# -lt 2 ]; then\n    echo \"Usage:\"\n    echo \"  [cmd] [source1 dir] [source2 dir]\"\n    echo \"  to compare files with same names in 2 dirs\"\n    echo \n    exit\nfi\n\nsrc1dir=$1\nsrc2dir=$2\n\nres=$(diff -srq $src1dir $src2dir | grep identical | awk '{print $2}')\nfor afile in $res;do\n    echo $afile\ndone\n\n\n\u4e0a\u8a18\u300120\u884c\u76ee\u306eprint $2\u306b\u3088\u308a\u3001src1dir\u5074\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u5f97\u3059\u308b\u3002\n(Note: \u30b3\u30fc\u30c9\u306e20\u884c\u76ee\u3001\u3068\u3044\u3046\u306e\u306fQ Accelerator\u3092\u4f7f\u3046\u3068\u3001\u3059\u3050\u306b\u898b\u308c\u307e\u3059\uff09\u3002\n\n\u7d50\u679c\n$ bash compare_images_170127_exec WORK_A WORK_B\nWORK_A/BBB.png\nWORK_A/DDD.png\n\n\n\nv0.3 > \u51e6\u7406\u3059\u308b/\u3057\u306a\u3044\u3092\u9078\u629e > RANDOM\u4f7f\u7528\n\ncode\n\ncompare_images_170127_exec\n#!/usr/bin/env bash\n\n# v0.3 Jan,27,2017\n#   - add condition using $RANDOM to process or not\n# v0.2 Jan,27,2017\n#   - use [diff -srq] \n# v0.1 Jan,27,2017\n#   - find files in both directories\n#\n\nif [ $# -lt 2 ]; then\n    echo \"Usage:\"\n    echo \"  [cmd] [source1 dir] [source2 dir]\"\n    echo \"  to compare files with same names in 2 dirs\"\n    echo \n    exit\nfi\n\nsrc1dir=$1\nsrc2dir=$2\n\nTHRESHOLD=16384 # should be <= [32767]\n# set smaller to increase the probability\n# set larger to decrease the probability\n\nres=$(diff -srq $src1dir $src2dir | grep identical | awk '{print $2}')\nfor afile in $res;do\n    if  [ $RANDOM -lt $THRESHOLD ]; then\n        continue\n    fi\n    echo $afile\ndone\n\n\n\n\u5b9f\u884c\n$ bash compare_images_170127_exec WORK_A WORK_B\n$ bash compare_images_170127_exec WORK_A WORK_B\nWORK_A/DDD.png\n$ bash compare_images_170127_exec WORK_A WORK_B\nWORK_A/BBB.png\n\n\n\ndiff\u3067\u306f\u3060\u3081 > \u540c\u4e00\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u691c\u7d22\u3067\u898b\u3064\u304b\u308b\n\u540c\u3058\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u3001\u4f5c\u6210\u65e5\u6642\u304c\u7570\u306a\u308b(\u3055\u3089\u306b\u8a00\u3048\u3070\u3001\u5185\u5bb9\u3082\u5c11\u3057\u7570\u306a\u308b)\u30d5\u30a1\u30a4\u30eb\u306fdiff -srq\u3067\u306f\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u6c17\u3065\u3044\u305f\u3002\n\nv0.5 > diff -srq\u3084\u3081 / html\u51fa\u529b\n\ncode\n\ncompare_images_170127_exec\n#!/usr/bin/env bash\n\n# v0.5 Jan,27,2017\n#   - remove [diff -srq] because diff only picks up \"the same file\"\n# v0.4 Jan,27,2017\n#   - add html_output()\n# v0.3 Jan,27,2017\n#   - add condition using $RANDOM to process or not\n# v0.2 Jan,27,2017\n#   - use [diff -srq] \n# v0.1 Jan,27,2017\n#   - find files in both directories\n#\n\nhtml_output() {\n    in1file=$1\n    in2file=$2\n    echo \"$in1file<br>\"\n    echo -n \"<table>\"\n    echo -n \"<tr>\"\n    echo -n \"<td>\"\n    echo -n \"<img src=$in1file width=300></img>\"\n    echo -n \"</td>\"\n    echo -n \"<td>\"\n    echo -n \"<img src=$in2file width=300></img>\"\n    echo -n \"</td>\"\n    echo -n \"</tr>\"\n    echo -n \"</table>\"\n    echo \n}\n\nif [ $# -lt 2 ]; then\n    echo \"Usage:\"\n    echo \"  [cmd] [source1 dir] [source2 dir]\"\n    echo \"  to compare files with same names in 2 dirs\"\n    echo \n    exit\nfi\n\nsrc1dir=$1\nsrc2dir=$2\n\nTHRESHOLD=16384 # should be <= [32767]\n# set smaller to increase the probability\n# set larger to decrease the probability\n\nfor src1file in $(ls $src1dir/*.png);do\n    #echo $src1file\n    src2file=${src1file/$src1dir/$src2dir}\n\n    if [ -e $src2file ]; then\n        if  [ $RANDOM -lt $THRESHOLD ]; then\n            continue\n        fi\n        #echo $src2file\n        html_output $src1file $src2file\n        #break; // for debug\n    fi\ndone\n\n\n\n\u51e6\u7406\u7d50\u679c\n\u753b\u50cf\u30b5\u30a4\u30ba\u306f\u9069\u5b9c\u8abf\u6574\u3059\u308b\u3002\n\n2\u3064\u306e\u9055\u3044\u306f\u4f55\u306b\u8d77\u56e0\u3059\u308b\u306e\u304b\u3002\n\u3082\u3084\u3082\u3084\u3059\u308b\u3002\n\nTODO \u30ea\u30b9\u30c8\n\n\n2\u3064\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u540c\u3058\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6bd4\u8f03\n\n\u30e9\u30f3\u30c0\u30e0\u306b\u53d6\u308a\u51fa\u3059\n\n\u30d5\u30a1\u30a4\u30eb(png\u753b\u50cf)\u3092\u6bd4\u8f03\u3057\u305fhtml\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210 (\u30bf\u30a4\u30c8\u30eb\u4ed8\u304d)\n\npdf\u5316\n\n```txt:\u52d5\u4f5c\u74b0\u5883\nXeon E5-2620 v4 (8\u30b3\u30a2) x 2\n32GB RAM\nCentOS 6.8 (64bit)\nopenmpi-1.8.x86_64 \u3068\u305d\u306e-devel\nmpich.x86_64 3.1-5.el6\u3068\u305d\u306e-devel\ngcc version 4.4.7 (\u3068gfortran)\nNCAR Command Language Version 6.3.0\nWRF v3.7.1\nGNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)\n```\n\n\u4ee5\u4e0b\u3092\u884c\u3044\u305f\u3044\n\n1. 2\u3064\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u540c\u3058\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6bd4\u8f03\n2. \u30e9\u30f3\u30c0\u30e0\u306b\u53d6\u308a\u51fa\u3059\n3. \u30d5\u30a1\u30a4\u30eb(png\u753b\u50cf)\u3092\u6bd4\u8f03\u3057\u305fhtml\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210 (\u30bf\u30a4\u30c8\u30eb\u4ed8\u304d)\n4. pdf\u5316\n\n\u76ee\u7684\u306f\u3001WRF(Weather Research and Forecasting Model)\u3067\u51e6\u7406\u3057\u305f\u7d50\u679c\u753b\u50cf\u306e\u6bd4\u8f03\u3002\n\n## v0.1 > \u6587\u5b57\u5217\u7f6e\u63db + if [ -e \n\n2\u3064\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u540c\u3058\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308bbash script\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\n\n\u53c2\u8003(\u6587\u5b57\u5217\u7f6e\u63db) http://d.hatena.ne.jp/ozuma/20130928/1380380390\n\n### code\n\n```bash:compare_images_170127_exec\n#!/usr/bin/env bash\n\n#\n# v0.1 Jan,27,2017\n#   - find files in both directories\n#\n\nif [ $# -lt 2 ]; then\n\techo \"Usage:\"\n\techo \"  [cmd] [source1 dir] [source2 dir]\"\n\techo \"  to compare files with same names in 2 dirs\"\n\techo \n\texit\nfi\n\nsrc1dir=$1\nsrc2dir=$2\n\n#echo $src1dir\n#echo $src2dir\n\nfor src1file in $(ls $src1dir/*.png);do\n\t# echo $src1file\n\tsrc2file=${src1file/$src1dir/$src2dir}\n\n\tif [ -e $src2file ]; then\n\t\techo $src2file\n\tfi\n\n\t#break; // for debug\ndone\n``` \n\n### \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u751f\u6210\n\n```bash\nmkdir WORK_A\nmkdir WORK_B\ntouch WORK_A/AAA.png\ntouch WORK_A/BBB.png\ntouch WORK_A/CCC.png\ntouch WORK_A/DDD.png\ntouch WORK_B/BBB.png\ntouch WORK_B/DDD.png\n```\n\n\u3053\u308c\u3067BBB.png\u3068DDD.png\u306e\u307f\u5171\u901a\u3068\u306a\u308b\u3002\n\n### \u5b9f\u884c\u4f8b > \u5f15\u6570\u306a\u3057 (\u4f7f\u3044\u65b9\u306e\u8868\u793a)\n\n```bash\n$ bash compare_images_170127_exec \nUsage:\n  [cmd] [source1 dir] [source2 dir]\n  to compare files with same names in 2 dirs\n```\n\n### \u5b9f\u884c\u4f8b > \u5f15\u6570\u3042\u308a (\u30d5\u30a1\u30a4\u30eb\u540d\u8868\u793a)\n\n```bash\n$ bash compare_images_170127_exec WORK_A WORK_B\nWORK_B/BBB.png\nWORK_B/DDD.png\n```\n\n### \u3082\u3063\u3068\u7c21\u5358\u306a\u65b9\u6cd5\n\n~~\u3042\u308c\u3070\u77e5\u308a\u305f\u3044\u3002~~\n\n\u3042\u3063\u305f\u3002\nhttp://stackoverflow.com/questions/10087571/given-two-directory-trees-how-to-find-which-files-are-the-same\n\n```\n$ diff -srq WORK_A WORK_B\nOnly in WORK_A: AAA.png\nFiles WORK_A/BBB.png and WORK_B/BBB.png are identical\nOnly in WORK_A: CCC.png\nFiles WORK_A/DDD.png and WORK_B/DDD.png are identical\n```\n\n```\n$ diff -srq WORK_A/ WORK_B/ | grep identical\nFiles WORK_A/BBB.png and WORK_B/BBB.png are identical\nFiles WORK_A/DDD.png and WORK_B/DDD.png are identical\n```\n\n## v0.2 > diff -srq\n\ndiff -srq\u4f7f\u7528\n\n### code\n\n```bash:compare_images_170127_exec\n#!/usr/bin/env bash\n\n# v0.2 Jan,27,2017\n#   - use [diff -srq] \n# v0.1 Jan,27,2017\n#   - find files in both directories\n#\n\nif [ $# -lt 2 ]; then\n\techo \"Usage:\"\n\techo \"  [cmd] [source1 dir] [source2 dir]\"\n\techo \"  to compare files with same names in 2 dirs\"\n\techo \n\texit\nfi\n\nsrc1dir=$1\nsrc2dir=$2\n\nres=$(diff -srq $src1dir $src2dir | grep identical | awk '{print $2}')\nfor afile in $res;do\n\techo $afile\ndone\n```\n\n\u4e0a\u8a18\u300120\u884c\u76ee\u306e`print $2`\u306b\u3088\u308a\u3001src1dir\u5074\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u5f97\u3059\u308b\u3002\n(Note: \u30b3\u30fc\u30c9\u306e20\u884c\u76ee\u3001\u3068\u3044\u3046\u306e\u306f[Q Accelerator](http://qiita.com/howdy39/items/e6136b8454099ebfef29)\u3092\u4f7f\u3046\u3068\u3001\u3059\u3050\u306b\u898b\u308c\u307e\u3059\uff09\u3002\n\n```txt:\u7d50\u679c\n$ bash compare_images_170127_exec WORK_A WORK_B\nWORK_A/BBB.png\nWORK_A/DDD.png\n```\n\n## v0.3 > \u51e6\u7406\u3059\u308b/\u3057\u306a\u3044\u3092\u9078\u629e > RANDOM\u4f7f\u7528\n\n### code\n\n```bash:compare_images_170127_exec\n#!/usr/bin/env bash\n\n# v0.3 Jan,27,2017\n#   - add condition using $RANDOM to process or not\n# v0.2 Jan,27,2017\n#   - use [diff -srq] \n# v0.1 Jan,27,2017\n#   - find files in both directories\n#\n\nif [ $# -lt 2 ]; then\n\techo \"Usage:\"\n\techo \"  [cmd] [source1 dir] [source2 dir]\"\n\techo \"  to compare files with same names in 2 dirs\"\n\techo \n\texit\nfi\n\nsrc1dir=$1\nsrc2dir=$2\n\nTHRESHOLD=16384 # should be <= [32767]\n# set smaller to increase the probability\n# set larger to decrease the probability\n\nres=$(diff -srq $src1dir $src2dir | grep identical | awk '{print $2}')\nfor afile in $res;do\n\tif  [ $RANDOM -lt $THRESHOLD ]; then\n\t\tcontinue\n\tfi\n\techo $afile\ndone\n```\n\n```txt:\u5b9f\u884c\n$ bash compare_images_170127_exec WORK_A WORK_B\n$ bash compare_images_170127_exec WORK_A WORK_B\nWORK_A/DDD.png\n$ bash compare_images_170127_exec WORK_A WORK_B\nWORK_A/BBB.png\n```\n\n## diff\u3067\u306f\u3060\u3081 > \u540c\u4e00\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u691c\u7d22\u3067\u898b\u3064\u304b\u308b\n\n**<font color=red>\u540c\u3058\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u3001\u4f5c\u6210\u65e5\u6642\u304c\u7570\u306a\u308b(\u3055\u3089\u306b\u8a00\u3048\u3070\u3001\u5185\u5bb9\u3082\u5c11\u3057\u7570\u306a\u308b)\u30d5\u30a1\u30a4\u30eb\u306f`diff -srq`\u3067\u306f\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u6c17\u3065\u3044\u305f\u3002</font>**\n\n## v0.5 > diff -srq\u3084\u3081 / html\u51fa\u529b\n\n### code\n\n```bash:compare_images_170127_exec\n#!/usr/bin/env bash\n\n# v0.5 Jan,27,2017\n#   - remove [diff -srq] because diff only picks up \"the same file\"\n# v0.4 Jan,27,2017\n#   - add html_output()\n# v0.3 Jan,27,2017\n#   - add condition using $RANDOM to process or not\n# v0.2 Jan,27,2017\n#   - use [diff -srq] \n# v0.1 Jan,27,2017\n#   - find files in both directories\n#\n\nhtml_output() {\n\tin1file=$1\n\tin2file=$2\n\techo \"$in1file<br>\"\n\techo -n \"<table>\"\n\techo -n \"<tr>\"\n\techo -n \"<td>\"\n\techo -n \"<img src=$in1file width=300></img>\"\n\techo -n \"</td>\"\n\techo -n \"<td>\"\n\techo -n \"<img src=$in2file width=300></img>\"\n\techo -n \"</td>\"\n\techo -n \"</tr>\"\n\techo -n \"</table>\"\n\techo \n}\n\nif [ $# -lt 2 ]; then\n\techo \"Usage:\"\n\techo \"  [cmd] [source1 dir] [source2 dir]\"\n\techo \"  to compare files with same names in 2 dirs\"\n\techo \n\texit\nfi\n\nsrc1dir=$1\nsrc2dir=$2\n\nTHRESHOLD=16384 # should be <= [32767]\n# set smaller to increase the probability\n# set larger to decrease the probability\n\nfor src1file in $(ls $src1dir/*.png);do\n    #echo $src1file\n    src2file=${src1file/$src1dir/$src2dir}\n\n    if [ -e $src2file ]; then\n    \tif  [ $RANDOM -lt $THRESHOLD ]; then\n    \t\tcontinue\n    \tfi\n    \t#echo $src2file\n\t\thtml_output $src1file $src2file\n\t    #break; // for debug\n    fi\ndone\n```\n\n### \u51e6\u7406\u7d50\u679c\n\n\u753b\u50cf\u30b5\u30a4\u30ba\u306f\u9069\u5b9c\u8abf\u6574\u3059\u308b\u3002\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/3c0ddbcf-dade-5311-a978-411680a4eb9d.png)\n\n2\u3064\u306e\u9055\u3044\u306f\u4f55\u306b\u8d77\u56e0\u3059\u308b\u306e\u304b\u3002\n\u3082\u3084\u3082\u3084\u3059\u308b\u3002\n\n### TODO \u30ea\u30b9\u30c8\n\n- [x] 2\u3064\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u540c\u3058\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6bd4\u8f03\n- [x] \u30e9\u30f3\u30c0\u30e0\u306b\u53d6\u308a\u51fa\u3059\n- [x] \u30d5\u30a1\u30a4\u30eb(png\u753b\u50cf)\u3092\u6bd4\u8f03\u3057\u305fhtml\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210 (\u30bf\u30a4\u30c8\u30eb\u4ed8\u304d)\n- [x] pdf\u5316\n", "tags": ["Bash", "WRF", "diff", "difference"]}