{"context": " More than 1 year has passed since last update.class Event < ActiveRecord::Base\n  belongs_to :owner , class_name: 'User'\n  has_many :tickets, dependent: :destroy\n\n  validates :name, length: { maximum: 50 }, presence: true\n  validates :place, length: { maximum: 100 }, presence: true\n  validates :content, length: { maximum: 2000 }, presence: true\n  validates :start_time, presence: true\n  validates :end_time, presence: true\n  validate :start_time_should_be_before_end_time\n\n  def created_by?(user)\n    return false unless user\n    owner_id == user.id\n  end\n\n  private\n\n  def start_time_should_be_before_end_time\n    return unless start_time && end_time\n\n    if start_time >= end_time\n      errors.add(:start_time, '\u306f\u7d42\u4e86\u6642\u9593\u3088\u308a\u3082\u524d\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044')\n    end\n  end\n\nend\n\n\nowner_id\u306f\u30df\u30df\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\nirb(main):002:0> event = Event.new(name: \"test name!\")\n=> #<Event id: nil, owner_id: nil, name: \"test name!\", place: nil, start_time: nil, end_time: nil, content: nil, created_at: nil, updated_at: nil>\nirb(main):003:0> event.instance_variables\n=> [:@attributes, :@column_types_override, :@column_types, :@aggregation_cache, :@association_cache, :@attributes_cache, :@readonly, :@destroyed, :@marked_for_destruction, :@destroyed_by_association, :@new_record, :@txn, :@_start_transaction_state, :@transaction_state, :@reflects_state, :@changed_attributes]\nirb(main):004:0> puts event.attributes\n{\"id\"=>nil, \"owner_id\"=>nil, \"name\"=>\"test name!\", \"place\"=>nil, \"start_time\"=>nil, \"end_time\"=>nil, \"content\"=>nil, \"created_at\"=>nil, \"updated_at\"=>nil}\n=> nil\n\n\n\n```rails\nclass Event < ActiveRecord::Base\n  belongs_to :owner , class_name: 'User'\n  has_many :tickets, dependent: :destroy\n\n  validates :name, length: { maximum: 50 }, presence: true\n  validates :place, length: { maximum: 100 }, presence: true\n  validates :content, length: { maximum: 2000 }, presence: true\n  validates :start_time, presence: true\n  validates :end_time, presence: true\n  validate :start_time_should_be_before_end_time\n\n  def created_by?(user)\n    return false unless user\n    owner_id == user.id\n  end\n\n  private\n\n  def start_time_should_be_before_end_time\n    return unless start_time && end_time\n\n    if start_time >= end_time\n      errors.add(:start_time, '\u306f\u7d42\u4e86\u6642\u9593\u3088\u308a\u3082\u524d\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044')\n    end\n  end\n\nend\n\n```\n\nowner_id\u306f\u30df\u30df\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\n\n```ruby\nirb(main):002:0> event = Event.new(name: \"test name!\")\n=> #<Event id: nil, owner_id: nil, name: \"test name!\", place: nil, start_time: nil, end_time: nil, content: nil, created_at: nil, updated_at: nil>\nirb(main):003:0> event.instance_variables\n=> [:@attributes, :@column_types_override, :@column_types, :@aggregation_cache, :@association_cache, :@attributes_cache, :@readonly, :@destroyed, :@marked_for_destruction, :@destroyed_by_association, :@new_record, :@txn, :@_start_transaction_state, :@transaction_state, :@reflects_state, :@changed_attributes]\nirb(main):004:0> puts event.attributes\n{\"id\"=>nil, \"owner_id\"=>nil, \"name\"=>\"test name!\", \"place\"=>nil, \"start_time\"=>nil, \"end_time\"=>nil, \"content\"=>nil, \"created_at\"=>nil, \"updated_at\"=>nil}\n=> nil\n\n````\n", "tags": ["ActiveRecord"]}