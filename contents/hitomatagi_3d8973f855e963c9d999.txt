{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4eca\u56de\u306f\u3001\u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3067\u52d5\u753b\u306b\u5bfe\u3057\u3066\u8ffd\u8de1\u5bfe\u8c61\u3092\u6307\u5b9a\u3057\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\uff13\u6b21\u5143\u7a7a\u9593\u5185\u306e\u7269\u4f53\u3092\u8ffd\u8de1\u3092\u3057\u3066\u307f\u307e\u3059\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u6bd4\u8f03\u3057\u3066\u3001\u8a08\u7b97\u91cf\u304c\u5c11\u306a\u304f\u3001\u56de\u8ee2\u3057\u3066\u3082\u8ffd\u8de1\u3057\u7d9a\u3051\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u3001\u7279\u5fb4\u91cf\u3092\u5229\u7528\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nOpenCV\nOpenCV(Open Source Computer Vision Library)\u306fBSD\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u6620\u50cf/\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u96c6\u3067\u3059\u3002\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3001\u7269\u4f53\u8a8d\u8b58\u3001\u6620\u50cf\u89e3\u6790\u3001\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u591a\u6570\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u25a0 OpenCV\u3092\u4f7f\u3063\u305f\u52d5\u4f53\u8ffd\u8de1\u306e\u4f8b (OpenCV Google Summer of Code 2015)\nhttps://www.youtube.com/watch?v=OUbUFn71S4s\n\u25a0 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\nOpenCV 3\uff08core + contrib\uff09\u3092Python 3\u306e\u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff06OpenCV 2\u3068OpenCV 3\u306e\u9055\u3044\uff06\u7c21\u5358\u306a\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\n\u25a0 \u9759\u6b62\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\nOpenCV\u3067\u30a8\u30c3\u30b8\u691c\u51fa\u3057\u3066\u307f\u308b\nOpenCV\u3067\u5404\u7a2e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u3092\u3059\u308b\uff08\u30b0\u30e9\u30c7\u30a3\u30a8\u30f3\u30c8\u3001\u30cf\u30a4\u30d1\u30b9\u3001\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\uff09\nOpenCV\u3067\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3059\u308b\uff08AgastFeature, FAST, GFTT, MSER, AKAZE, BRISK, KAZE, ORB, SimpleBlob\uff09\n\u25a0 \u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\nOpenCV\u3067\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b\nOpenCV\u3067Web\u30ab\u30e1\u30e9/\u30d3\u30c7\u30aa\u30ab\u30e1\u30e9\u306e\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b\nOpenCV\u3067\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u63cf\u753b\u3059\u308b\uff08Shi-Tomasi\u6cd5\u3001Lucas-Kanade\u6cd5\uff09\n\n\u6a5f\u80fd\u6982\u8981\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n+ \u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3067\u8ffd\u8de1\u3059\u308b\u70b9\u3092\u6307\u5b9a\n    \u3000\u3000cv2.setMouseCallback()\n+ \u8ffd\u8de1\u3059\u308b\u7279\u5fb4\u70b9\u3092\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\n+ \u8ffd\u8de1\u4e2d\u306e\u7279\u5fb4\u70b9\u3092\u52d5\u753b\u306b\u8868\u793a\n+ \u753b\u50cf\u30d4\u30e9\u30df\u30c3\u30c9\u578bLucas-Kanade\u6cd5\u3067\uff12\u30d5\u30ec\u30fc\u30e0\u9593\u306e\u7279\u5fb4\u70b9\u306e\u52d5\u304d\u3092\u691c\u51fa\n    \u3000\u3000cv2.calcOpticalFlowPyrLK()\n+ \u8a08\u7b97\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u307e\u3067\u9ad8\u7cbe\u5ea6\u306b\u884c\u3046\n    \u3000\u3000cv2.cornerSubPix()\n+ \u7279\u5fb4\u70b9\u3068\u3057\u3066\u8a8d\u8b58\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u70b9\u3092\u81ea\u52d5\u7684\u306b\u524a\u9664\n+ \u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u306e\u8fd1\u508d\u3092\u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u7279\u5fb4\u70b9\u3092\u524a\u9664\n+ \u300cEsc\u300d\u30ad\u30fc\u3092\u62bc\u3059\u3068\u7d42\u4e86\n+ \u300cs\u300d\u30ad\u30fc\u3092\u62bc\u3059\u3068\u4e00\u6642\u505c\u6b62\n+ \u4e00\u6642\u505c\u6b62\u4e2d\u306b\u300cs\u300d\u30ad\u30fc\u3092\u62bc\u3059\u3068\u30b9\u30c6\u30c3\u30d7\u5b9f\u884c\n+ \u4e00\u6642\u505c\u6b62\u4e2d\u306b\u300cr\u300d\u30ad\u30fc\u3092\u62bc\u3059\u3068\u30ea\u30b9\u30bf\u30fc\u30c8\n+ \u52d5\u753b\u304c\u6700\u5f8c\u307e\u3067\u518d\u751f\u3055\u308c\u305f\u3089\u7d42\u4e86\n\u52d5\u753b\u306b\u5bfe\u3057\u3066\u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3067\u7279\u5fb4\u70b9\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001\u4e00\u6642\u505c\u6b62\u6a5f\u80fd\u306f\u7d50\u69cb\u91cd\u8981\u3067\u3059\u3002\n\u300cs\u300d\u30ad\u30fc\u3067\u52d5\u753b\u3092\u4e00\u6642\u505c\u6b62\u3055\u305b\u3001\u3086\u3063\u304f\u308a\u3068\u7279\u5fb4\u70b9\u3092\u6307\u5b9a\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\n\u52d5\u4f5c\u74b0\u5883\n\npython: 3.5.1\nOpenCV: 3.1.0\n\n\n\u52d5\u753b\u30c7\u30fc\u30bf\n\u3000OpenCV\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u52d5\u753b\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\u3000\u3000OpenCV\\opencv\\sources\\samples\\data\\768x576.avi\n\n\nmotion.py\nimport cv2\nimport numpy as np\n\n# Esc \u30ad\u30fc\nESC_KEY = 0x1b\n# s \u30ad\u30fc\nS_KEY = 0x73\n# r \u30ad\u30fc\nR_KEY = 0x72\n# \u7279\u5fb4\u70b9\u306e\u6700\u5927\u6570\nMAX_FEATURE_NUM = 500\n# \u53cd\u5fa9\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u7d42\u4e86\u6761\u4ef6\nCRITERIA = (cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, 10, 0.03)\n# \u30a4\u30f3\u30bf\u30fc\u30d0\u30eb \uff081000 / \u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\uff09\nINTERVAL = 30\n# \u30d3\u30c7\u30aa\u30c7\u30fc\u30bf\nVIDEO_DATA = '768x576.avi'\n\nclass Motion:\n    # \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    def __init__(self):\n        # \u8868\u793a\u30a6\u30a3\u30f3\u30c9\u30a6\n        cv2.namedWindow(\"motion\")\n        # \u30de\u30a6\u30b9\u30a4\u30d9\u30f3\u30c8\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u767b\u9332\n        cv2.setMouseCallback(\"motion\", self.onMouse)\n        # \u6620\u50cf\n        self.video = cv2.VideoCapture(VIDEO_DATA)\n        # \u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\n        self.interval = INTERVAL\n        # \u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\uff08\u30ab\u30e9\u30fc\uff09\n        self.frame = None\n        # \u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\uff08\u30b0\u30ec\u30fc\uff09\n        self.gray_next = None\n        # \u524d\u56de\u306e\u30d5\u30ec\u30fc\u30e0\uff08\u30b0\u30ec\u30fc\uff09\n        self.gray_prev = None\n        # \u7279\u5fb4\u70b9\n        self.features = None\n        # \u7279\u5fb4\u70b9\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\n        self.status = None\n\n    # \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\n    def run(self):\n\n        # \u6700\u521d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u51e6\u7406\n        end_flag, self.frame = self.video.read()\n        self.gray_prev = cv2.cvtColor(self.frame, cv2.COLOR_BGR2GRAY)\n\n        while end_flag:\n            # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n            self.gray_next = cv2.cvtColor(self.frame, cv2.COLOR_BGR2GRAY)\n\n            # \u7279\u5fb4\u70b9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306bOpticalFlow\u3092\u8a08\u7b97\u3059\u308b\n            if self.features is not None:\n                # \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u306e\u8a08\u7b97\n                features_prev = self.features\n                self.features, self.status, err = cv2.calcOpticalFlowPyrLK( \\\n                                                    self.gray_prev, \\\n                                                    self.gray_next, \\\n                                                    features_prev, \\\n                                                    None, \\\n                                                    winSize = (10, 10), \\\n                                                    maxLevel = 3, \\\n                                                    criteria = CRITERIA, \\\n                                                    flags = 0)\n\n                # \u6709\u52b9\u306a\u7279\u5fb4\u70b9\u306e\u307f\u6b8b\u3059\n                self.refreshFeatures()\n\n                # \u30d5\u30ec\u30fc\u30e0\u306b\u6709\u52b9\u306a\u7279\u5fb4\u70b9\u3092\u63cf\u753b\n                if self.features is not None:\n                    for feature in self.features:\n                        cv2.circle(self.frame, (feature[0][0], feature[0][1]), 4, (15, 241, 255), -1, 8, 0)\n\n            # \u8868\u793a\n            cv2.imshow(\"motion\", self.frame)\n\n            # \u6b21\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u306e\u6e96\u5099\n            self.gray_prev = self.gray_next\n            end_flag, self.frame = self.video.read()\n            if end_flag:\n                self.gray_next = cv2.cvtColor(self.frame, cv2.COLOR_BGR2GRAY)\n\n            # \u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\n            key = cv2.waitKey(self.interval)\n            # \"Esc\"\u30ad\u30fc\u62bc\u4e0b\u3067\u7d42\u4e86\n            if key == ESC_KEY:\n                break\n            # \"s\"\u30ad\u30fc\u62bc\u4e0b\u3067\u4e00\u6642\u505c\u6b62\n            elif key == S_KEY:\n                self.interval = 0\n            elif key == R_KEY:\n                self.interval = INTERVAL\n\n\n        # \u7d42\u4e86\u51e6\u7406\n        cv2.destroyAllWindows()\n        self.video.release()\n\n\n    # \u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3067\u7279\u5fb4\u70b9\u3092\u6307\u5b9a\u3059\u308b\n    #     \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u8fd1\u508d\u306b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u3042\u308b\u5834\u5408\u306f\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u3092\u524a\u9664\u3059\u308b\n    #     \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u8fd1\u508d\u306b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u306a\u3044\u5834\u5408\u306f\u65b0\u898f\u306b\u7279\u5fb4\u70b9\u3092\u8ffd\u52a0\u3059\u308b\n    def onMouse(self, event, x, y, flags, param):\n        # \u5de6\u30af\u30ea\u30c3\u30af\u4ee5\u5916\n        if event != cv2.EVENT_LBUTTONDOWN:\n            return\n\n        # \u6700\u521d\u306e\u7279\u5fb4\u70b9\u8ffd\u52a0\n        if self.features is None:\n            self.addFeature(x, y)\n            return\n\n        # \u63a2\u7d22\u534a\u5f84\uff08pixel\uff09\n        radius = 5\n        # \u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u8fd1\u508d\u306b\u3042\u308b\u304b\u63a2\u7d22\n        index = self.getFeatureIndex(x, y, radius)\n\n        # \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u8fd1\u508d\u306b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u3042\u308b\u306e\u3067\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u3092\u524a\u9664\u3059\u308b\n        if index >= 0:\n            self.features = np.delete(self.features, index, 0)\n            self.status = np.delete(self.status, index, 0)\n\n        # \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u8fd1\u508d\u306b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u306a\u3044\u306e\u3067\u65b0\u898f\u306b\u7279\u5fb4\u70b9\u3092\u8ffd\u52a0\u3059\u308b\n        else:\n            self.addFeature(x, y)\n\n        return\n\n\n    # \u6307\u5b9a\u3057\u305f\u534a\u5f84\u5185\u306b\u3042\u308b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\uff11\u3064\u53d6\u5f97\u3059\u308b\n    #     \u6307\u5b9a\u3057\u305f\u534a\u5f84\u5185\u306b\u7279\u5fb4\u70b9\u304c\u306a\u3044\u5834\u5408 index = -1 \u3092\u5fdc\u7b54\n    def getFeatureIndex(self, x, y, radius):\n        index = -1\n\n        # \u7279\u5fb4\u70b9\u304c\uff11\u3064\u3082\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\n        if self.features is None:\n            return index\n\n        max_r2 = radius ** 2\n        index = 0\n        for point in self.features:\n            dx = x - point[0][0]\n            dy = y - point[0][1]\n            r2 = dx ** 2 + dy ** 2\n            if r2 <= max_r2:\n                # \u3053\u306e\u7279\u5fb4\u70b9\u306f\u6307\u5b9a\u3055\u308c\u305f\u534a\u5f84\u5185\n                return index\n            else:\n                # \u3053\u306e\u7279\u5fb4\u70b9\u306f\u6307\u5b9a\u3055\u308c\u305f\u534a\u5f84\u5916\n                index += 1\n\n        # \u5168\u3066\u306e\u7279\u5fb4\u70b9\u304c\u6307\u5b9a\u3055\u308c\u305f\u534a\u5f84\u306e\u5916\u5074\u306b\u3042\u308b\n        return -1\n\n\n    # \u7279\u5fb4\u70b9\u3092\u65b0\u898f\u306b\u8ffd\u52a0\u3059\u308b\n    def addFeature(self, x, y):\n\n        # \u7279\u5fb4\u70b9\u304c\u672a\u767b\u9332\n        if self.features is None:\n            # ndarray\u306e\u4f5c\u6210\u3057\u7279\u5fb4\u70b9\u306e\u5ea7\u6a19\u3092\u767b\u9332\n            self.features = np.array([[[x, y]]], np.float32)\n            self.status = np.array([1])\n            # \u7279\u5fb4\u70b9\u3092\u9ad8\u7cbe\u5ea6\u5316\n            cv2.cornerSubPix(self.gray_next, self.features, (10, 10), (-1, -1), CRITERIA)\n\n        # \u7279\u5fb4\u70b9\u306e\u6700\u5927\u767b\u9332\u500b\u6570\u3092\u30aa\u30fc\u30d0\u30fc\n        elif len(self.features) >= MAX_FEATURE_NUM:\n            print(\"max feature num over: \" + str(MAX_FEATURE_NUM))\n\n        # \u7279\u5fb4\u70b9\u3092\u8ffd\u52a0\u767b\u9332\n        else:\n            # \u65e2\u5b58\u306endarray\u306e\u6700\u5f8c\u306b\u7279\u5fb4\u70b9\u306e\u5ea7\u6a19\u3092\u8ffd\u52a0\n            self.features = np.append(self.features, [[[x, y]]], axis = 0).astype(np.float32)\n            self.status = np.append(self.status, 1)\n            # \u7279\u5fb4\u70b9\u3092\u9ad8\u7cbe\u5ea6\u5316\n            cv2.cornerSubPix(self.gray_next, self.features, (10, 10), (-1, -1), CRITERIA)\n\n\n    # \u6709\u52b9\u306a\u7279\u5fb4\u70b9\u306e\u307f\u6b8b\u3059\n    def refreshFeatures(self):\n        # \u7279\u5fb4\u70b9\u304c\u672a\u767b\u9332\n        if self.features is None:\n            return\n\n        # \u5168status\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        i = 0\n        while i < len(self.features):\n\n            # \u7279\u5fb4\u70b9\u3068\u3057\u3066\u8a8d\u8b58\u3067\u304d\u305a\n            if self.status[i] == 0:\n                # \u65e2\u5b58\u306endarray\u304b\u3089\u524a\u9664\n                self.features = np.delete(self.features, i, 0)\n                self.status = np.delete(self.status, i, 0)\n                i -= 1\n\n            i += 1\n\n\nif __name__ == '__main__':\n    Motion().run()\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u3000\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001OpenCV\u306e\u30b5\u30f3\u30d7\u30eb\u52d5\u753b\uff08768x576.avi\uff09\u3092\u4f7f\u3046\u3082\u306e\u3067\u3057\u305f\u304c\u3001\u3044\u3064\u3082\u540c\u3058\u753b\u9762\u3067\u4ee3\u308a\u6620\u3048\u3057\u307e\u305b\u3093\u3088\u306d\u3002\n\u3000\u52d5\u753b\u306f\u4f55\u3067\u3082\uff2f\uff2b\u3067\u3059\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u306eVIDEO_DATA\u90e8\u5206\u3092\u597d\u304d\u306a\u52d5\u753b\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000\u4f8b\u3048\u3070\u3001\u5b9f\u884c\u7d50\u679c\u306e\u5b9f\u4f8b\u3068\u3057\u3066\u3001\u30ea\u30aa\u30c7\u30b8\u30e3\u30cd\u30a4\u30ed \u30aa\u30ea\u30f3\u30d4\u30c3\u30af 2016 \u4f53\u64cd\u500b\u4eba\u7dcf\u5408 \u6c7a\u52dd\u3001\u9244\u68d2\u3092\u3059\u308b\u5185\u6751\u9078\u624b\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\u3053\u3061\u3089\u306e\u52d5\u753b\u306f\u3001\u9244\u68d2\u3092\u3059\u308b\u5185\u6751\u9078\u624b\u3082\u52d5\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u80cc\u666f\u306e\u30d5\u30ec\u30fc\u30e0\u3082\u5185\u6751\u9078\u624b\u306b\u5408\u308f\u305b\u3066\u4e0a\u4e0b\u306b\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\u300cs\u300d\u30ad\u30fc\u3067\u52d5\u753b\u3092\u4e00\u6642\u505c\u6b62\u3055\u305b\u3001\u5185\u6751\u9078\u624b\u306e\u9774\u4e0b\u306b\u8ffd\u5f93\u3059\u308b\u70b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u9ec4\u8272\u3044\u70b9\u304c\u7279\u5fb4\u70b9\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u52d5\u753b\u3092\u518d\u751f\u3059\u308b\u3068\u3001\u9ec4\u8272\u3044\u70b9\u304c\u5185\u6751\u9078\u624b\u306e\u9774\u4e0b\u3092\u8ffd\u8de1\u3057\u3066\u3044\u308b\u69d8\u5b50\u304c\u5206\u304b\u308a\u307e\u3059\u3002\uff08\u5185\u6751\u9078\u624b\u306e\u3064\u307e\u5148\u304c\u7dba\u9e97\u306b\u305d\u308d\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u540c\u3058\u7279\u5fb4\u70b9\u3068\u3057\u3066\u8a8d\u8b58\u3057\u7d9a\u3051\u3066\u3044\u3089\u308c\u308b\u3068\u3082\u8a00\u3048\u307e\u3059\u306d\u3002\uff09\n\n\n\n\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8ab2\u984c\n\u5b9f\u969b\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u52d5\u4f5c\u3055\u305b\u3066\u307f\u308b\u3068\u3001\u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\uff08\u5358\u7d14\u306bcv2.calcOpticalFlowPyrLK()\u3092\u4f7f\u3046\u3060\u3051\u306e\u65b9\u6cd5\uff09\u306b\u306f\u3001\uff13\u3064\u306e\u8ab2\u984c\u304c\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u80cc\u666f\u306e\u7279\u5fb4\u70b9\u3068\u8ffd\u8de1\u4e2d\u306e\u7279\u5fb4\u70b9\u304c\u91cd\u306a\u308b\u3068\u8aa4\u8a8d\u304c\u767a\u751f\u3057\u3001\u80cc\u666f\u306e\u7279\u5fb4\u70b9\u306b\u6355\u307e\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u8ffd\u8de1\u4e2d\u306e\u7279\u5fb4\u70b9\u304c\u96a0\u308c\u308b\u3068\u8ffd\u8de1\u304c\u7d42\u308f\u3063\u3066\u3057\u307e\u3044\u3001\u7279\u5fb4\u70b9\u304c\u73fe\u308c\u3066\u3082\u518d\u8ffd\u8de1\u3057\u3066\u304f\u308c\u306a\u3044\u3002\n\n\u6307\u5b9a\u3057\u305f\u7279\u5fb4\u70b9\u306b\u7279\u5fb4\u304c\u306a\u3044\u3068\u3001\u3059\u3050\u306b\u8ffd\u8de1\u304c\u7d42\u308f\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u3044\u305a\u308c\u3082\u8a08\u7b97\u91cf\u304c\u5897\u3048\u3066\u3057\u307e\u3046\u3082\u306e\u306e\u3001\u5bfe\u5fdc\u65b9\u6cd5\u306f\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u3046\u3061\u5bfe\u5fdc\u7248\u3082\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\u4eca\u56de\u306f\u3001\u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3067\u52d5\u753b\u306b\u5bfe\u3057\u3066\u8ffd\u8de1\u5bfe\u8c61\u3092\u6307\u5b9a\u3057\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\uff13\u6b21\u5143\u7a7a\u9593\u5185\u306e\u7269\u4f53\u3092\u8ffd\u8de1\u3092\u3057\u3066\u307f\u307e\u3059\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u6bd4\u8f03\u3057\u3066\u3001\u8a08\u7b97\u91cf\u304c\u5c11\u306a\u304f\u3001\u56de\u8ee2\u3057\u3066\u3082\u8ffd\u8de1\u3057\u7d9a\u3051\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u3001\u7279\u5fb4\u91cf\u3092\u5229\u7528\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n# OpenCV\nOpenCV(Open Source Computer Vision Library)\u306fBSD\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u6620\u50cf/\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u96c6\u3067\u3059\u3002\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3001\u7269\u4f53\u8a8d\u8b58\u3001\u6620\u50cf\u89e3\u6790\u3001\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u591a\u6570\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u25a0 OpenCV\u3092\u4f7f\u3063\u305f\u52d5\u4f53\u8ffd\u8de1\u306e\u4f8b (OpenCV Google Summer of Code 2015)\n[https://www.youtube.com/watch?v=OUbUFn71S4s](https://www.youtube.com/watch?v=OUbUFn71S4s)\n\n\u25a0 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\n[OpenCV 3\uff08core + contrib\uff09\u3092Python 3\u306e\u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff06OpenCV 2\u3068OpenCV 3\u306e\u9055\u3044\uff06\u7c21\u5358\u306a\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af](http://qiita.com/olympic2020/items/d5d475a446ec9c73261e)\n\n\u25a0 \u9759\u6b62\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n[OpenCV\u3067\u30a8\u30c3\u30b8\u691c\u51fa\u3057\u3066\u307f\u308b](http://qiita.com/olympic2020/items/2c3a2bfefe73ab5c86a4)\n[OpenCV\u3067\u5404\u7a2e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u3092\u3059\u308b\uff08\u30b0\u30e9\u30c7\u30a3\u30a8\u30f3\u30c8\u3001\u30cf\u30a4\u30d1\u30b9\u3001\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\uff09](http://qiita.com/olympic2020/items/93e01ef22e46b14a60a9)\n[OpenCV\u3067\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3059\u308b\uff08AgastFeature, FAST, GFTT, MSER, AKAZE, BRISK, KAZE, ORB, SimpleBlob\uff09](http://qiita.com/olympic2020/items/62989573a30ec1d8180b)\n\n\u25a0 \u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n[OpenCV\u3067\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b](http://qiita.com/olympic2020/items/ce00fab38d829965db3b)\n[OpenCV\u3067Web\u30ab\u30e1\u30e9/\u30d3\u30c7\u30aa\u30ab\u30e1\u30e9\u306e\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b](http://qiita.com/olympic2020/items/12a2eceaf65f142ec3df)\n[OpenCV\u3067\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u63cf\u753b\u3059\u308b\uff08Shi-Tomasi\u6cd5\u3001Lucas-Kanade\u6cd5\uff09](http://qiita.com/olympic2020/items/772549d0fc3c89fb3cc4)\n\n\n# \u6a5f\u80fd\u6982\u8981\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n+ \u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3067\u8ffd\u8de1\u3059\u308b\u70b9\u3092\u6307\u5b9a  \n    \u3000\u3000cv2.setMouseCallback()\n+ \u8ffd\u8de1\u3059\u308b\u7279\u5fb4\u70b9\u3092\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd  \n+ \u8ffd\u8de1\u4e2d\u306e\u7279\u5fb4\u70b9\u3092\u52d5\u753b\u306b\u8868\u793a\n+ \u753b\u50cf\u30d4\u30e9\u30df\u30c3\u30c9\u578bLucas-Kanade\u6cd5\u3067\uff12\u30d5\u30ec\u30fc\u30e0\u9593\u306e\u7279\u5fb4\u70b9\u306e\u52d5\u304d\u3092\u691c\u51fa  \n    \u3000\u3000cv2.calcOpticalFlowPyrLK()\n+ \u8a08\u7b97\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u307e\u3067\u9ad8\u7cbe\u5ea6\u306b\u884c\u3046  \n    \u3000\u3000cv2.cornerSubPix()\n+ \u7279\u5fb4\u70b9\u3068\u3057\u3066\u8a8d\u8b58\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u70b9\u3092\u81ea\u52d5\u7684\u306b\u524a\u9664\n+ \u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u306e\u8fd1\u508d\u3092\u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u7279\u5fb4\u70b9\u3092\u524a\u9664\n+ \u300cEsc\u300d\u30ad\u30fc\u3092\u62bc\u3059\u3068\u7d42\u4e86\n+ \u300cs\u300d\u30ad\u30fc\u3092\u62bc\u3059\u3068\u4e00\u6642\u505c\u6b62\n+ \u4e00\u6642\u505c\u6b62\u4e2d\u306b\u300cs\u300d\u30ad\u30fc\u3092\u62bc\u3059\u3068\u30b9\u30c6\u30c3\u30d7\u5b9f\u884c\n+ \u4e00\u6642\u505c\u6b62\u4e2d\u306b\u300cr\u300d\u30ad\u30fc\u3092\u62bc\u3059\u3068\u30ea\u30b9\u30bf\u30fc\u30c8\n+ \u52d5\u753b\u304c\u6700\u5f8c\u307e\u3067\u518d\u751f\u3055\u308c\u305f\u3089\u7d42\u4e86\n\n\u52d5\u753b\u306b\u5bfe\u3057\u3066\u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3067\u7279\u5fb4\u70b9\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001\u4e00\u6642\u505c\u6b62\u6a5f\u80fd\u306f\u7d50\u69cb\u91cd\u8981\u3067\u3059\u3002\n\u300cs\u300d\u30ad\u30fc\u3067\u52d5\u753b\u3092\u4e00\u6642\u505c\u6b62\u3055\u305b\u3001\u3086\u3063\u304f\u308a\u3068\u7279\u5fb4\u70b9\u3092\u6307\u5b9a\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\n+ \u52d5\u4f5c\u74b0\u5883\n    - python: 3.5.1\n    - OpenCV: 3.1.0\n\n+ \u52d5\u753b\u30c7\u30fc\u30bf\n    \u3000OpenCV\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u52d5\u753b\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n    \u3000\u3000OpenCV\\opencv\\sources\\samples\\data\\768x576.avi\n\n```motion.py\nimport cv2\nimport numpy as np\n\n# Esc \u30ad\u30fc\nESC_KEY = 0x1b\n# s \u30ad\u30fc\nS_KEY = 0x73\n# r \u30ad\u30fc\nR_KEY = 0x72\n# \u7279\u5fb4\u70b9\u306e\u6700\u5927\u6570\nMAX_FEATURE_NUM = 500\n# \u53cd\u5fa9\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u7d42\u4e86\u6761\u4ef6\nCRITERIA = (cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, 10, 0.03)\n# \u30a4\u30f3\u30bf\u30fc\u30d0\u30eb \uff081000 / \u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\uff09\nINTERVAL = 30\n# \u30d3\u30c7\u30aa\u30c7\u30fc\u30bf\nVIDEO_DATA = '768x576.avi'\n\nclass Motion:\n    # \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    def __init__(self):\n        # \u8868\u793a\u30a6\u30a3\u30f3\u30c9\u30a6\n        cv2.namedWindow(\"motion\")\n        # \u30de\u30a6\u30b9\u30a4\u30d9\u30f3\u30c8\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u767b\u9332\n        cv2.setMouseCallback(\"motion\", self.onMouse)\n        # \u6620\u50cf\n        self.video = cv2.VideoCapture(VIDEO_DATA)\n        # \u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\n        self.interval = INTERVAL\n        # \u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\uff08\u30ab\u30e9\u30fc\uff09\n        self.frame = None\n        # \u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\uff08\u30b0\u30ec\u30fc\uff09\n        self.gray_next = None\n        # \u524d\u56de\u306e\u30d5\u30ec\u30fc\u30e0\uff08\u30b0\u30ec\u30fc\uff09\n        self.gray_prev = None\n        # \u7279\u5fb4\u70b9\n        self.features = None\n        # \u7279\u5fb4\u70b9\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\n        self.status = None\n\n    # \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\n    def run(self):\n        \n        # \u6700\u521d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u51e6\u7406\n        end_flag, self.frame = self.video.read()\n        self.gray_prev = cv2.cvtColor(self.frame, cv2.COLOR_BGR2GRAY)\n\n        while end_flag:\n            # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n            self.gray_next = cv2.cvtColor(self.frame, cv2.COLOR_BGR2GRAY)\n\n            # \u7279\u5fb4\u70b9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306bOpticalFlow\u3092\u8a08\u7b97\u3059\u308b\n            if self.features is not None:\n                # \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u306e\u8a08\u7b97\n                features_prev = self.features\n                self.features, self.status, err = cv2.calcOpticalFlowPyrLK( \\\n                                                    self.gray_prev, \\\n                                                    self.gray_next, \\\n                                                    features_prev, \\\n                                                    None, \\\n                                                    winSize = (10, 10), \\\n                                                    maxLevel = 3, \\\n                                                    criteria = CRITERIA, \\\n                                                    flags = 0)\n\n                # \u6709\u52b9\u306a\u7279\u5fb4\u70b9\u306e\u307f\u6b8b\u3059\n                self.refreshFeatures()\n                \n                # \u30d5\u30ec\u30fc\u30e0\u306b\u6709\u52b9\u306a\u7279\u5fb4\u70b9\u3092\u63cf\u753b\n                if self.features is not None:\n                    for feature in self.features:\n                        cv2.circle(self.frame, (feature[0][0], feature[0][1]), 4, (15, 241, 255), -1, 8, 0)\n            \n            # \u8868\u793a\n            cv2.imshow(\"motion\", self.frame)\n            \n            # \u6b21\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u306e\u6e96\u5099\n            self.gray_prev = self.gray_next\n            end_flag, self.frame = self.video.read()\n            if end_flag:\n                self.gray_next = cv2.cvtColor(self.frame, cv2.COLOR_BGR2GRAY)\n\n            # \u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\n            key = cv2.waitKey(self.interval)\n            # \"Esc\"\u30ad\u30fc\u62bc\u4e0b\u3067\u7d42\u4e86\n            if key == ESC_KEY:\n                break\n            # \"s\"\u30ad\u30fc\u62bc\u4e0b\u3067\u4e00\u6642\u505c\u6b62\n            elif key == S_KEY:\n                self.interval = 0\n            elif key == R_KEY:\n                self.interval = INTERVAL\n                \n            \n        # \u7d42\u4e86\u51e6\u7406\n        cv2.destroyAllWindows()\n        self.video.release()\n\n\n    # \u30de\u30a6\u30b9\u30af\u30ea\u30c3\u30af\u3067\u7279\u5fb4\u70b9\u3092\u6307\u5b9a\u3059\u308b\n    #     \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u8fd1\u508d\u306b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u3042\u308b\u5834\u5408\u306f\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u3092\u524a\u9664\u3059\u308b\n    #     \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u8fd1\u508d\u306b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u306a\u3044\u5834\u5408\u306f\u65b0\u898f\u306b\u7279\u5fb4\u70b9\u3092\u8ffd\u52a0\u3059\u308b\n    def onMouse(self, event, x, y, flags, param):\n        # \u5de6\u30af\u30ea\u30c3\u30af\u4ee5\u5916\n        if event != cv2.EVENT_LBUTTONDOWN:\n            return\n\n        # \u6700\u521d\u306e\u7279\u5fb4\u70b9\u8ffd\u52a0\n        if self.features is None:\n            self.addFeature(x, y)\n            return\n\n        # \u63a2\u7d22\u534a\u5f84\uff08pixel\uff09\n        radius = 5\n        # \u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u8fd1\u508d\u306b\u3042\u308b\u304b\u63a2\u7d22\n        index = self.getFeatureIndex(x, y, radius)\n\n        # \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u8fd1\u508d\u306b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u3042\u308b\u306e\u3067\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u3092\u524a\u9664\u3059\u308b\n        if index >= 0:\n            self.features = np.delete(self.features, index, 0)\n            self.status = np.delete(self.status, index, 0)\n\n        # \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u8fd1\u508d\u306b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u304c\u306a\u3044\u306e\u3067\u65b0\u898f\u306b\u7279\u5fb4\u70b9\u3092\u8ffd\u52a0\u3059\u308b\n        else:\n            self.addFeature(x, y)\n\n        return\n\n\n    # \u6307\u5b9a\u3057\u305f\u534a\u5f84\u5185\u306b\u3042\u308b\u65e2\u5b58\u306e\u7279\u5fb4\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\uff11\u3064\u53d6\u5f97\u3059\u308b\n    #     \u6307\u5b9a\u3057\u305f\u534a\u5f84\u5185\u306b\u7279\u5fb4\u70b9\u304c\u306a\u3044\u5834\u5408 index = -1 \u3092\u5fdc\u7b54\n    def getFeatureIndex(self, x, y, radius):\n        index = -1\n        \n        # \u7279\u5fb4\u70b9\u304c\uff11\u3064\u3082\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\n        if self.features is None:\n            return index\n        \n        max_r2 = radius ** 2\n        index = 0\n        for point in self.features:\n            dx = x - point[0][0]\n            dy = y - point[0][1]\n            r2 = dx ** 2 + dy ** 2\n            if r2 <= max_r2:\n                # \u3053\u306e\u7279\u5fb4\u70b9\u306f\u6307\u5b9a\u3055\u308c\u305f\u534a\u5f84\u5185\n                return index\n            else:\n                # \u3053\u306e\u7279\u5fb4\u70b9\u306f\u6307\u5b9a\u3055\u308c\u305f\u534a\u5f84\u5916\n                index += 1\n                \n        # \u5168\u3066\u306e\u7279\u5fb4\u70b9\u304c\u6307\u5b9a\u3055\u308c\u305f\u534a\u5f84\u306e\u5916\u5074\u306b\u3042\u308b\n        return -1\n\n\n    # \u7279\u5fb4\u70b9\u3092\u65b0\u898f\u306b\u8ffd\u52a0\u3059\u308b\n    def addFeature(self, x, y):\n        \n        # \u7279\u5fb4\u70b9\u304c\u672a\u767b\u9332\n        if self.features is None:\n            # ndarray\u306e\u4f5c\u6210\u3057\u7279\u5fb4\u70b9\u306e\u5ea7\u6a19\u3092\u767b\u9332\n            self.features = np.array([[[x, y]]], np.float32)\n            self.status = np.array([1])\n            # \u7279\u5fb4\u70b9\u3092\u9ad8\u7cbe\u5ea6\u5316\n            cv2.cornerSubPix(self.gray_next, self.features, (10, 10), (-1, -1), CRITERIA)\n\n        # \u7279\u5fb4\u70b9\u306e\u6700\u5927\u767b\u9332\u500b\u6570\u3092\u30aa\u30fc\u30d0\u30fc\n        elif len(self.features) >= MAX_FEATURE_NUM:\n            print(\"max feature num over: \" + str(MAX_FEATURE_NUM))\n\n        # \u7279\u5fb4\u70b9\u3092\u8ffd\u52a0\u767b\u9332\n        else:\n            # \u65e2\u5b58\u306endarray\u306e\u6700\u5f8c\u306b\u7279\u5fb4\u70b9\u306e\u5ea7\u6a19\u3092\u8ffd\u52a0\n            self.features = np.append(self.features, [[[x, y]]], axis = 0).astype(np.float32)\n            self.status = np.append(self.status, 1)\n            # \u7279\u5fb4\u70b9\u3092\u9ad8\u7cbe\u5ea6\u5316\n            cv2.cornerSubPix(self.gray_next, self.features, (10, 10), (-1, -1), CRITERIA)\n            \n\n    # \u6709\u52b9\u306a\u7279\u5fb4\u70b9\u306e\u307f\u6b8b\u3059\n    def refreshFeatures(self):\n        # \u7279\u5fb4\u70b9\u304c\u672a\u767b\u9332\n        if self.features is None:\n            return\n        \n        # \u5168status\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        i = 0\n        while i < len(self.features):\n            \n            # \u7279\u5fb4\u70b9\u3068\u3057\u3066\u8a8d\u8b58\u3067\u304d\u305a\n            if self.status[i] == 0:\n                # \u65e2\u5b58\u306endarray\u304b\u3089\u524a\u9664\n                self.features = np.delete(self.features, i, 0)\n                self.status = np.delete(self.status, i, 0)\n                i -= 1\n            \n            i += 1\n\n\nif __name__ == '__main__':\n    Motion().run()\n```\n\n# \u5b9f\u884c\u7d50\u679c\n\u3000\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001OpenCV\u306e\u30b5\u30f3\u30d7\u30eb\u52d5\u753b\uff08768x576.avi\uff09\u3092\u4f7f\u3046\u3082\u306e\u3067\u3057\u305f\u304c\u3001\u3044\u3064\u3082\u540c\u3058\u753b\u9762\u3067\u4ee3\u308a\u6620\u3048\u3057\u307e\u305b\u3093\u3088\u306d\u3002\n\u3000\u52d5\u753b\u306f\u4f55\u3067\u3082\uff2f\uff2b\u3067\u3059\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u306e`VIDEO_DATA`\u90e8\u5206\u3092\u597d\u304d\u306a\u52d5\u753b\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000\u4f8b\u3048\u3070\u3001\u5b9f\u884c\u7d50\u679c\u306e\u5b9f\u4f8b\u3068\u3057\u3066\u3001\u30ea\u30aa\u30c7\u30b8\u30e3\u30cd\u30a4\u30ed \u30aa\u30ea\u30f3\u30d4\u30c3\u30af 2016 \u4f53\u64cd\u500b\u4eba\u7dcf\u5408 \u6c7a\u52dd\u3001\u9244\u68d2\u3092\u3059\u308b\u5185\u6751\u9078\u624b\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\u3053\u3061\u3089\u306e\u52d5\u753b\u306f\u3001\u9244\u68d2\u3092\u3059\u308b\u5185\u6751\u9078\u624b\u3082\u52d5\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u80cc\u666f\u306e\u30d5\u30ec\u30fc\u30e0\u3082\u5185\u6751\u9078\u624b\u306b\u5408\u308f\u305b\u3066\u4e0a\u4e0b\u306b\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\u300cs\u300d\u30ad\u30fc\u3067\u52d5\u753b\u3092\u4e00\u6642\u505c\u6b62\u3055\u305b\u3001\u5185\u6751\u9078\u624b\u306e\u9774\u4e0b\u306b\u8ffd\u5f93\u3059\u308b\u70b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u9ec4\u8272\u3044\u70b9\u304c\u7279\u5fb4\u70b9\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u52d5\u753b\u3092\u518d\u751f\u3059\u308b\u3068\u3001\u9ec4\u8272\u3044\u70b9\u304c\u5185\u6751\u9078\u624b\u306e\u9774\u4e0b\u3092\u8ffd\u8de1\u3057\u3066\u3044\u308b\u69d8\u5b50\u304c\u5206\u304b\u308a\u307e\u3059\u3002\uff08\u5185\u6751\u9078\u624b\u306e\u3064\u307e\u5148\u304c\u7dba\u9e97\u306b\u305d\u308d\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u540c\u3058\u7279\u5fb4\u70b9\u3068\u3057\u3066\u8a8d\u8b58\u3057\u7d9a\u3051\u3066\u3044\u3089\u308c\u308b\u3068\u3082\u8a00\u3048\u307e\u3059\u306d\u3002\uff09\n\n![u1.png](https://qiita-image-store.s3.amazonaws.com/0/107056/cb625729-451d-7e6d-aad2-247109e45dca.png)\n\n![u2.png](https://qiita-image-store.s3.amazonaws.com/0/107056/741564cd-9851-cd68-0d9a-045f758adaff.png)\n\n![u3.png](https://qiita-image-store.s3.amazonaws.com/0/107056/e540f5e1-adf5-62b4-0bdf-d58286e7cd45.png)\n\n![u4.png](https://qiita-image-store.s3.amazonaws.com/0/107056/178c785c-e6bc-a21d-72cf-2e4a6294653c.png)\n\n![u5.png](https://qiita-image-store.s3.amazonaws.com/0/107056/fc16755d-a323-8bce-0bed-adac831e8f9b.png)\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8ab2\u984c\n\u5b9f\u969b\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u52d5\u4f5c\u3055\u305b\u3066\u307f\u308b\u3068\u3001\u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\uff08\u5358\u7d14\u306bcv2.calcOpticalFlowPyrLK()\u3092\u4f7f\u3046\u3060\u3051\u306e\u65b9\u6cd5\uff09\u306b\u306f\u3001\uff13\u3064\u306e\u8ab2\u984c\u304c\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n1. \u80cc\u666f\u306e\u7279\u5fb4\u70b9\u3068\u8ffd\u8de1\u4e2d\u306e\u7279\u5fb4\u70b9\u304c\u91cd\u306a\u308b\u3068\u8aa4\u8a8d\u304c\u767a\u751f\u3057\u3001\u80cc\u666f\u306e\u7279\u5fb4\u70b9\u306b\u6355\u307e\u3063\u3066\u3057\u307e\u3046\u3002  \n2. \u8ffd\u8de1\u4e2d\u306e\u7279\u5fb4\u70b9\u304c\u96a0\u308c\u308b\u3068\u8ffd\u8de1\u304c\u7d42\u308f\u3063\u3066\u3057\u307e\u3044\u3001\u7279\u5fb4\u70b9\u304c\u73fe\u308c\u3066\u3082\u518d\u8ffd\u8de1\u3057\u3066\u304f\u308c\u306a\u3044\u3002  \n3. \u6307\u5b9a\u3057\u305f\u7279\u5fb4\u70b9\u306b\u7279\u5fb4\u304c\u306a\u3044\u3068\u3001\u3059\u3050\u306b\u8ffd\u8de1\u304c\u7d42\u308f\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u3044\u305a\u308c\u3082\u8a08\u7b97\u91cf\u304c\u5897\u3048\u3066\u3057\u307e\u3046\u3082\u306e\u306e\u3001\u5bfe\u5fdc\u65b9\u6cd5\u306f\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u3046\u3061\u5bfe\u5fdc\u7248\u3082\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n", "tags": ["OpenCV", "Python", "\u753b\u50cf\u51e6\u7406"]}