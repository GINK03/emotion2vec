{"tags": ["Android", "Wi-Fi", "direct"], "context": "https://github.com/markrjr/Salut/blob/master/README.md \u306e2016/05/12\u6642\u70b9\u306e\u65e5\u672c\u8a9e\u8a33\u3067\u3059\u3002\n\nSalut\nSalut\u306fAndroid\u306eWiFi Direct API\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3059\u3002Salut\u3092\u4f7f\u7528\u3059\u308b\u524d\u306b\u4e0b\u8a18\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u3056\u3063\u3068\u8aad\u3093\u3067\u304a\u304f\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\nRecommended Reading\n\n\nGeneral Overview\n\n\nService Discovery\n\n\nPower Consumption\n\nMore Recommended Reading\n\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306fAPI 16 (Android 4.1 Jelly Bean)\u4ee5\u4e0a\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u6280\u8853\u7684\u306b\u306fWiFi Direct\u306fAndroid 4.0\u304b\u3089\u4f7f\u7528\u3067\u304d\u307e\u3059\u304c\u30014.1\u4ee5\u4e0a\u306e\u65b9\u304c\u4fe1\u983c\u6027\u304c\u9ad8\u3044\u3067\u3059\u3002\n\n\u6ce8\u610f\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u73fe\u5728\u30d9\u30fc\u30bf\u72b6\u614b\u3067\u3042\u308a\u3001API\u3084\u6a5f\u80fd\u306f\u5909\u66f4\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u306a\u305c\u3053\u306e\u540d\u524d\uff1f\u3069\u3093\u306a\u610f\u5473\u304c\uff1f\nSalut\u306f\u30d5\u30e9\u30f3\u30b9\u8a9e\u306e\u6328\u62f6\u3067\u3001hello\u3084goodbye\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\u306a\u305c\u3053\u306e\u540d\u524d\u304b\u3068\u3044\u3046\u3068\u3001iOS\u3067\u4f7f\u308f\u308c\u3066\u3044\u308bApple\u306e\u540c\u3058\u3088\u3046\u306a\u6280\u8853\u306bBonjour\u3068\u3044\u3046\u540d\u524d\u304c\u4ed8\u3044\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\nDependencies\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\n\n\nLoganSquare (Serialization)\n\n\nAsyncJob Library\n\n\nLoganSquare\u306f\u30a2\u30d7\u30ea\u306b\u3082\u542b\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306ebuild.grade\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'\n    }\n}\napply plugin: 'com.neenbedankt.android-apt'\n\ndependencies {\n    apt 'com.bluelinelabs:logansquare-compiler:1.3.4'\n    compile 'com.bluelinelabs:logansquare:1.3.4'\n}\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nJitPack\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u304c\u7c21\u5358\u3067\u3059\u3002\n\n\u4f7f\u3044\u65b9\n\nSample Activity\n\n\n\u5229\u7528\u624b\u9806\n\u307e\u305a\u3001\u6b21\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092AndroidManifest.xml\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\n    <uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\" />\n    <uses-permission android:name=\"android.permission.CHANGE_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <!-- Android\u3067\u306fINTERNET\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u304c\u306a\u3044\u3068\u30bd\u30b1\u30c3\u30c8\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u307e\u305b\u3093 -->\n\nAndorid 6.0\u4ee5\u4e0a\u3067\u306f\u3001\u4e0a\u8a18\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306f\u81ea\u52d5\u3067\u4ed8\u4e0e\u3055\u308c\u307e\u3059\u3002(\u8a73\u3057\u304f\u306f\u3053\u3061\u3089)\n\u6b21\u306b\u3001\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3057\u305f\u3044\u30af\u30e9\u30b9\u306bSalutDataCallback\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u3053\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u51e6\u7406\u306f\u547c\u3073\u51fa\u3057\u5143\u3068\u540c\u3058\u30b9\u30ec\u30c3\u30c9\u3067\u767a\u751f\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001SalutDataReceiver\u3068SalutServiceData\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n    SalutDataReceiver dataReceiver = new SalutDataReceiver(myActivity, myActivity);\n    SalutServiceData serviceData = new SalutServiceData(\"sas\", 50489, superAwesomeUser.name);\n\nSalutDataReceiver\u306f\u4e8c\u3064\u306e\u5f15\u6570\u3092\u53d6\u308a\u307e\u3059(Activity activity, SalutDataCallback dataCallback)\u3002\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001Activity\u304cSalutDataCallback\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067mActivity\u3092\u4e8c\u5ea6\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u306bActivity\u3092\u6e21\u3059\u3068Salut\u304c\u81ea\u52d5\u7684\u306bBroadcastReceiver\u3092\u767b\u9332\u30fb\u89e3\u9664\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nSalutServiceData\u306f\u30b5\u30fc\u30d3\u30b9\u540d\u3001\u30dd\u30fc\u30c8\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u540d\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u8868\u793a\u3055\u308c\u308b\u8aad\u307f\u3084\u3059\u3044\u6587\u5b57\u5217\u3067\u3059\u3002\u6697\u53f7\u7684\u306a\u6587\u5b57\u5217\u306b\u306f\u3057\u306a\u3044\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002Android 5.0\u672a\u6e80\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u3001\u30b5\u30fc\u30d3\u30b9\u540d\u3068\u8868\u793a\u540d\u306f\u77ed\u3081\u306e\u6587\u5b57\u5217\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u30b7\u30b9\u30c6\u30e0\u81ea\u4f53\u306e\u5236\u9650\u3067\u3059\u3002\n\u6700\u5f8c\u306b\u3001Salut\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n    Salut network = new Salut(dataReceiver, serviceData, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.e(TAG, \"Sorry, but this device does not support WiFi Direct.\");\n        }\n    });\n\n\n\u30db\u30b9\u30c8\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u4fdd\u6301\u3059\u308b\u5909\u6570\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u306e\u306f\u826f\u3044\u65b9\u6cd5\u3067\u3059\u3002isRunningAsHost\u3068\u3044\u3046\u8ad6\u7406\u578b\u304c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u30db\u30b9\u30c8\u3068\u3057\u3066\u52d5\u4f5c\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3059\u308b\u3068\u304d\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u308c\u306f\u30b0\u30eb\u30fc\u30d7\u30aa\u30fc\u30ca\u30fc\u3068\u3057\u3066\u63a5\u7d9a\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3084\u30b5\u30fc\u30d0\u30fc\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n\nWorking with services\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001WiFi direct \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u305f\u308a\u63a2\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n\n\u30db\u30b9\u30c8\u5074\n    network.startNetworkService(new SalutDeviceCallback() {\n        @Override\n        public void call(SalutDevice device) {\n            Log.d(TAG, device.readableName + \" has connected!\");\n        }\n    });\n\n\u30c7\u30d0\u30a4\u30b9\u304c\u63a5\u7d9a\u3057\u3066\u767b\u9332\u3055\u308c\u308b\u3068\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002registeredClients\u3067\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\n\u30b5\u30fc\u30d3\u30b9\u3092\u63a2\u3059\u306b\u306f\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002Salut\u306f\u540c\u3058\u30bf\u30a4\u30d7\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u306e\u307f\u63a5\u7d9a\u3057\u307e\u3059\u3002\n    network.discoverNetworkServices(new SalutDeviceCallback() {\n        @Override\n        public void call(SalutDevice device) {\n           Log.d(TAG, \"A device has connected with the name \" + device.deviceName);\n        }\n    }, false);\n\n    //\u307e\u305f\u306f\n\n    network.discoverNetworkServices(new SalutCallback() {\n        @Override\n        public void call() {\n           Log.d(TAG, \"All I know is that a device has connected.\");\n        }\n    }, true);\n\n\u3069\u3061\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u3001\u8ad6\u7406\u578b\u306e\u5f15\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u7e70\u308a\u8fd4\u3057\u547c\u3073\u51fa\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3082\u3057true\u3060\u3063\u305f\u5834\u5408\u306f\u3001\u30c7\u30d0\u30a4\u30b9\u304c\u898b\u3064\u304b\u308b\u5ea6\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002false\u306a\u3089\u3001\u6700\u521d\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u305f\u6642\u306b\u4e00\u5ea6\u3060\u3051\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002true,false\u3069\u3061\u3089\u3092\u6e21\u3057\u305f\u304b\u306b\u95a2\u4fc2\u306a\u304f\u3001stopServiceDiscovery()\u3092\u547c\u3073\u51fa\u3059\u307e\u3067\u30c7\u30d0\u30a4\u30b9\u3092\u63a2\u3057\u7d9a\u3051\u307e\u3059\u3002\n\u3082\u3046\u4e00\u3064\u3001discoverNetworkServicesWithTimeout()\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u540d\u524d\u304c\u793a\u3059\u3068\u304a\u308a\u3001\u6307\u5b9a\u3057\u305f\u6642\u9593\u3060\u3051\u30c7\u30d0\u30a4\u30b9\u3092\u63a2\u3057\u3066\u81ea\u52d5\u7684\u306bstopServiceDiscovery()\u3092\u547c\u3073\u307e\u3059\u3002foundDevices\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u898b\u3064\u304b\u3063\u305f\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n    network.discoverNetworkServicesWithTimeout(new SalutCallback() {\n        @Override\n        public void call() {\n            Log.d(TAG, \"Look at all these devices! \" + network.foundDevices.toString());\n        }\n    }, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.d(TAG, \"Bummer, we didn't find anyone. \");\n        }\n    }, 5000);\n\n\u30c7\u30d0\u30a4\u30b9\u304c\u30db\u30b9\u30c8\u3092\u898b\u3064\u3051\u305f\u3089\u3001registerWithHost()\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n    network.registerWithHost(possibleHost, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.d(TAG, \"We're now registered.\");\n        }\n    }, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.d(TAG, \"We failed to register.\");\n        }\n    });\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u969b\u306bWiFi Direct\u3067\u30c7\u30d0\u30a4\u30b9\u540c\u58eb\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u901a\u5e38\u306e\u30bd\u30b1\u30c3\u30c8\u3067\u30c7\u30fc\u30bf\u3092\u4ea4\u63db\u3057\u307e\u3059\u3002\u30c7\u30d0\u30a4\u30b9\u306funregisterClient\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u304b\u3001stopNetworkService\u304c\u30db\u30b9\u30c8\u5074\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u307e\u3067\u63a5\u7d9a\u3057\u7d9a\u3051\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\nLoganSquare \u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e2d\u3067\u30c7\u30fc\u30bf\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3044\u307e\u3059\u3002LoganSquare\u306f\u5358\u7d14\u306a\u6587\u5b57\u5217\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30e9\u30c3\u30d1\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n@JsonObject\npublic class Message{\n\n    /*\n     * Annotate a field that you want sent with the @JsonField marker.\n     */\n    @JsonField\n    public String description;\n\n    /*\n     * Note that since this field isn't annotated as a\n     * @JsonField, LoganSquare will ignore it when parsing\n     * and serializing this class.\n     */\n    public int nonJsonField;\n}\n\n\n\u30c7\u30fc\u30bf\u3092\u9001\u308b\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30db\u30b9\u30c8\u306b\u767b\u9332\u3055\u308c\u308b\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3082\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n    Message myMessage = new Message();\n    myMessage.description = \"See you on the other side!\";\n\n    network.sendToAllDevices(myMessage, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.e(TAG, \"Oh no! The data failed to send.\");\n        }\n    });\n\n\u30db\u30b9\u30c8\u3060\u3051\u304c\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u77e5\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4e0a\u8a18\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\u5c06\u6765\u7684\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u3082\u540c\u3058\u3088\u3046\u306b\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u4e88\u5b9a\u3067\u3059\u3002\u4eca\u306e\u3068\u3053\u308d\u306f\u307e\u305a\u30c7\u30fc\u30bf\u3092\u30db\u30b9\u30c8\u306b\u9001\u3063\u3066\u304b\u3089\u4e0a\u8a18\u30e1\u30bd\u30c3\u30c9\u3067\u305d\u306e\u4ed6\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u4f1d\u9054\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\n\u7279\u5b9a\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n    Message myMessage = new Message();\n    myMessage.description = \"See you on the other side!\";\n\n    network.sendToDevice(deviceToSendTo, myMessage, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.e(TAG, \"Oh no! The data failed to send.\");\n        }\n    });\n\n    network.sendToHost(myMessage, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.e(TAG, \"Oh no! The data failed to send.\");\n        }\n    });\n\n\n\n\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\nSalutDataCallback\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u306fonDataReceived(Object data)\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u306f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305f\u6587\u5b57\u5217\u3067\u9001\u3089\u308c\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u306fString\u3068\u3057\u3066\u9001\u3089\u308c\u307e\u3059\u3002LoganSquare\u3067\u5b9f\u969b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u89e3\u6790\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u306f\u6587\u5b57\u5217\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u89e3\u6790\u3059\u308b\u51e6\u7406\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n    @Override\n    public void onDataReceived(Object data) {\n        Log.d(TAG, \"Received network data.\");\n        try\n        {\n            Message newMessage = LoganSquare.parse((String)data, Message.class);\n            Log.d(TAG, newMessage.description);  //See you on the other side!\n            //Do other stuff with data.\n        }\n        catch (IOException ex)\n        {\n            Log.e(TAG, \"Failed to parse network data.\");\n        }\n    }\n\n\n\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n\n        if(MyApp.isHost)\n            network.stopNetworkService(true);\n        else\n            network.unregisterClient(true);\n    }\n\n\u5192\u982d\u3067\u8aac\u660e\u3057\u305f\u3001\u30db\u30b9\u30c8\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u4fdd\u6301\u3059\u308b\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30db\u30b9\u30c8\n\u30db\u30b9\u30c8\u5074\u3067\u306fstopNetworkService\u3092\u547c\u3070\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002WiFi\u3092\u7121\u52b9\u5316\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3059\u308b\u8ad6\u7406\u578b\u306e\u5f15\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u306funregisterClient\u3092\u547c\u3070\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002WiFi\u3092\u7121\u52b9\u5316\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3059\u308b\u8ad6\u7406\u578b\u306e\u5f15\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\u89e3\u9664\u51e6\u7406\u306e\u6210\u529f\u30fb\u5931\u6557\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\nMIT\n\n\n\u3042\u3068\u304c\u304d\n\u3053\u3053\u307e\u3067\u304c\u3093\u3070\u3063\u3066\u8a33\u3057\u3066\u66f8\u3044\u3066\u307f\u305f\u3093\u3067\u3059\u3051\u3069\u3001\u3044\u3056\u4f7f\u3063\u3066\u307f\u308b\u3068Wi-Fi Direct\u306eAPI\u306f\u610f\u5473\u4e0d\u660e\u306b\u52d5\u304b\u306a\u3044\u3053\u3068\u304c\u591a\u304f\u3066\u3064\u3089\u3044\u3067\u3059\u3002\u540c\u3058\u30b3\u30fc\u30c9\u304c1\u56de\u76ee\u306f\u52d5\u304f\u306e\u306b2\u56de\u76ee\u304c\u52d5\u304b\u306a\u304b\u3063\u305f\u308a\u3001Wi-Fi\u3092\u4e00\u5ea6\u30aa\u30d5\u306b\u3057\u3066\u30aa\u30f3\u306b\u3059\u308b\u3068\u76f4\u3063\u305f\u2026\u3068\u601d\u3063\u305f\u3089\u6b21\u306f\u52d5\u304b\u306a\u304b\u3063\u305f\u308a\u2026\u2026\n\u5b9f\u7528\u7684\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306b\u306f\u3082\u3046\u5c11\u3057\u304b\u304b\u308b\u306e\u304b\u306a\uff1f\u3068\u601d\u3044\u307e\u3057\u305f\u3002\nhttps://github.com/markrjr/Salut/blob/master/README.md \u306e2016/05/12\u6642\u70b9\u306e\u65e5\u672c\u8a9e\u8a33\u3067\u3059\u3002\n\n# Salut\n\nSalut\u306fAndroid\u306eWiFi Direct API\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3059\u3002Salut\u3092\u4f7f\u7528\u3059\u308b\u524d\u306b\u4e0b\u8a18\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u3056\u3063\u3068\u8aad\u3093\u3067\u304a\u304f\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\n### Recommended Reading\n\n* [General Overview](http://developer.android.com/guide/topics/connectivity/wifip2p.html)  \n* [Service Discovery](http://developer.android.com/training/connect-devices-wirelessly/nsd-wifi-direct.html)  \n* [Power Consumption](http://www.drjukka.com/blog/wordpress/?p=95)  \n* [More Recommended Reading](http://www.drjukka.com/blog/wordpress/?p=81)\n\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306fAPI 16 (Android 4.1 Jelly Bean)\u4ee5\u4e0a\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u6280\u8853\u7684\u306b\u306fWiFi Direct\u306fAndroid 4.0\u304b\u3089\u4f7f\u7528\u3067\u304d\u307e\u3059\u304c\u30014.1\u4ee5\u4e0a\u306e\u65b9\u304c\u4fe1\u983c\u6027\u304c\u9ad8\u3044\u3067\u3059\u3002\n\n### \u6ce8\u610f\n\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u73fe\u5728\u30d9\u30fc\u30bf\u72b6\u614b\u3067\u3042\u308a\u3001API\u3084\u6a5f\u80fd\u306f\u5909\u66f4\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u306a\u305c\u3053\u306e\u540d\u524d\uff1f\u3069\u3093\u306a\u610f\u5473\u304c\uff1f\n\nSalut\u306f\u30d5\u30e9\u30f3\u30b9\u8a9e\u306e\u6328\u62f6\u3067\u3001hello\u3084goodbye\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\u306a\u305c\u3053\u306e\u540d\u524d\u304b\u3068\u3044\u3046\u3068\u3001iOS\u3067\u4f7f\u308f\u308c\u3066\u3044\u308bApple\u306e\u540c\u3058\u3088\u3046\u306a\u6280\u8853\u306bBonjour\u3068\u3044\u3046\u540d\u524d\u304c\u4ed8\u3044\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\n## Dependencies\n\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\n\n* [LoganSquare (Serialization)](https://github.com/bluelinelabs/LoganSquare)  \n* [AsyncJob Library](https://github.com/Arasthel/AsyncJobLibrary)  \n\n**LoganSquare\u306f\u30a2\u30d7\u30ea\u306b\u3082\u542b\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002**\u305d\u306e\u305f\u3081\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306ebuild.grade\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```groovy\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'\n    }\n}\napply plugin: 'com.neenbedankt.android-apt'\n\ndependencies {\n    apt 'com.bluelinelabs:logansquare-compiler:1.3.4'\n    compile 'com.bluelinelabs:logansquare:1.3.4'\n}\n```\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n[JitPack](https://jitpack.io/#markrjr/Salut)\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u304c\u7c21\u5358\u3067\u3059\u3002\n\n## \u4f7f\u3044\u65b9\n\n### [Sample Activity](https://gist.github.com/markrjr/0519268f69a5823da17b)\n\n### \u5229\u7528\u624b\u9806\n\n\u307e\u305a\u3001\u6b21\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092AndroidManifest.xml\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```xml\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\n    <uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\" />\n    <uses-permission android:name=\"android.permission.CHANGE_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <!-- Android\u3067\u306fINTERNET\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u304c\u306a\u3044\u3068\u30bd\u30b1\u30c3\u30c8\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u307e\u305b\u3093 -->\n```\n\n*Andorid 6.0\u4ee5\u4e0a\u3067\u306f\u3001\u4e0a\u8a18\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306f\u81ea\u52d5\u3067\u4ed8\u4e0e\u3055\u308c\u307e\u3059\u3002[(\u8a73\u3057\u304f\u306f\u3053\u3061\u3089)](http://developer.android.com/guide/topics/security/normal-permissions.html)*\n\n\u6b21\u306b\u3001\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3057\u305f\u3044\u30af\u30e9\u30b9\u306b`SalutDataCallback`\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u3053\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u51e6\u7406\u306f\u547c\u3073\u51fa\u3057\u5143\u3068\u540c\u3058\u30b9\u30ec\u30c3\u30c9\u3067\u767a\u751f\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001`SalutDataReceiver`\u3068`SalutServiceData`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```java\n    SalutDataReceiver dataReceiver = new SalutDataReceiver(myActivity, myActivity);\n    SalutServiceData serviceData = new SalutServiceData(\"sas\", 50489, superAwesomeUser.name);\n```\n\n`SalutDataReceiver`\u306f\u4e8c\u3064\u306e\u5f15\u6570\u3092\u53d6\u308a\u307e\u3059`(Activity activity, SalutDataCallback dataCallback)`\u3002\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001Activity\u304c`SalutDataCallback`\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067`mActivity`\u3092\u4e8c\u5ea6\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u306bActivity\u3092\u6e21\u3059\u3068Salut\u304c\u81ea\u52d5\u7684\u306bBroadcastReceiver\u3092\u767b\u9332\u30fb\u89e3\u9664\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n`SalutServiceData`\u306f\u30b5\u30fc\u30d3\u30b9\u540d\u3001\u30dd\u30fc\u30c8\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u540d\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u8868\u793a\u3055\u308c\u308b\u8aad\u307f\u3084\u3059\u3044\u6587\u5b57\u5217\u3067\u3059\u3002\u6697\u53f7\u7684\u306a\u6587\u5b57\u5217\u306b\u306f\u3057\u306a\u3044\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002**Android 5.0\u672a\u6e80\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u3001\u30b5\u30fc\u30d3\u30b9\u540d\u3068\u8868\u793a\u540d\u306f\u77ed\u3081\u306e\u6587\u5b57\u5217\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u30b7\u30b9\u30c6\u30e0\u81ea\u4f53\u306e\u5236\u9650\u3067\u3059\u3002**\n\n\u6700\u5f8c\u306b\u3001`Salut`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```java\n    Salut network = new Salut(dataReceiver, serviceData, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.e(TAG, \"Sorry, but this device does not support WiFi Direct.\");\n        }\n    });\n    \n```\n\n**\u30db\u30b9\u30c8\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u4fdd\u6301\u3059\u308b\u5909\u6570\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u306e\u306f\u826f\u3044\u65b9\u6cd5\u3067\u3059\u3002`isRunningAsHost`\u3068\u3044\u3046\u8ad6\u7406\u578b\u304c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u30db\u30b9\u30c8\u3068\u3057\u3066\u52d5\u4f5c\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3059\u308b\u3068\u304d\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u308c\u306f\u30b0\u30eb\u30fc\u30d7\u30aa\u30fc\u30ca\u30fc\u3068\u3057\u3066\u63a5\u7d9a\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3084\u30b5\u30fc\u30d0\u30fc\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002**\n\n### Working with services\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001WiFi direct \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u305f\u308a\u63a2\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n\n#### \u30db\u30b9\u30c8\u5074\n\n```java\n    network.startNetworkService(new SalutDeviceCallback() {\n        @Override\n        public void call(SalutDevice device) {\n            Log.d(TAG, device.readableName + \" has connected!\");\n        }\n    });\n```\n\n\u30c7\u30d0\u30a4\u30b9\u304c\u63a5\u7d9a\u3057\u3066\u767b\u9332\u3055\u308c\u308b\u3068\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002**`registeredClients`\u3067\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002**\n\n#### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\n\n\u30b5\u30fc\u30d3\u30b9\u3092\u63a2\u3059\u306b\u306f\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002**Salut\u306f\u540c\u3058\u30bf\u30a4\u30d7\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u306e\u307f\u63a5\u7d9a\u3057\u307e\u3059\u3002**\n\n```java\n    network.discoverNetworkServices(new SalutDeviceCallback() {\n        @Override\n        public void call(SalutDevice device) {\n           Log.d(TAG, \"A device has connected with the name \" + device.deviceName);\n        }\n    }, false);\n    \n    //\u307e\u305f\u306f\n    \n    network.discoverNetworkServices(new SalutCallback() {\n        @Override\n        public void call() {\n           Log.d(TAG, \"All I know is that a device has connected.\");\n        }\n    }, true);\n```\n\n\u3069\u3061\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u3001\u8ad6\u7406\u578b\u306e\u5f15\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u7e70\u308a\u8fd4\u3057\u547c\u3073\u51fa\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3082\u3057**true**\u3060\u3063\u305f\u5834\u5408\u306f\u3001\u30c7\u30d0\u30a4\u30b9\u304c\u898b\u3064\u304b\u308b\u5ea6\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002**false**\u306a\u3089\u3001\u6700\u521d\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u305f\u6642\u306b\u4e00\u5ea6\u3060\u3051\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002**true,false\u3069\u3061\u3089\u3092\u6e21\u3057\u305f\u304b\u306b\u95a2\u4fc2\u306a\u304f\u3001`stopServiceDiscovery()`\u3092\u547c\u3073\u51fa\u3059\u307e\u3067\u30c7\u30d0\u30a4\u30b9\u3092\u63a2\u3057\u7d9a\u3051\u307e\u3059\u3002**\n\n\u3082\u3046\u4e00\u3064\u3001`discoverNetworkServicesWithTimeout()`\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u540d\u524d\u304c\u793a\u3059\u3068\u304a\u308a\u3001\u6307\u5b9a\u3057\u305f\u6642\u9593\u3060\u3051\u30c7\u30d0\u30a4\u30b9\u3092\u63a2\u3057\u3066\u81ea\u52d5\u7684\u306b`stopServiceDiscovery()`\u3092\u547c\u3073\u307e\u3059\u3002**`foundDevices`\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u898b\u3064\u304b\u3063\u305f\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002**\n\n```java\n    network.discoverNetworkServicesWithTimeout(new SalutCallback() {\n        @Override\n        public void call() {\n            Log.d(TAG, \"Look at all these devices! \" + network.foundDevices.toString());\n        }\n    }, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.d(TAG, \"Bummer, we didn't find anyone. \");\n        }\n    }, 5000);\n```\n\n\u30c7\u30d0\u30a4\u30b9\u304c\u30db\u30b9\u30c8\u3092\u898b\u3064\u3051\u305f\u3089\u3001`registerWithHost()`\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```java\n    network.registerWithHost(possibleHost, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.d(TAG, \"We're now registered.\");\n        }\n    }, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.d(TAG, \"We failed to register.\");\n        }\n    });\n```\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u969b\u306bWiFi Direct\u3067\u30c7\u30d0\u30a4\u30b9\u540c\u58eb\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u901a\u5e38\u306e\u30bd\u30b1\u30c3\u30c8\u3067\u30c7\u30fc\u30bf\u3092\u4ea4\u63db\u3057\u307e\u3059\u3002\u30c7\u30d0\u30a4\u30b9\u306f`unregisterClient`\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u304b\u3001`stopNetworkService`\u304c\u30db\u30b9\u30c8\u5074\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u307e\u3067\u63a5\u7d9a\u3057\u7d9a\u3051\u307e\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u3092\u4f5c\u308b\n\nLoganSquare \u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e2d\u3067\u30c7\u30fc\u30bf\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3044\u307e\u3059\u3002LoganSquare\u306f\u5358\u7d14\u306a\u6587\u5b57\u5217\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30e9\u30c3\u30d1\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```java\n@JsonObject\npublic class Message{\n\n    /*\n     * Annotate a field that you want sent with the @JsonField marker.\n     */\n    @JsonField\n    public String description;\n\n    /*\n     * Note that since this field isn't annotated as a\n     * @JsonField, LoganSquare will ignore it when parsing\n     * and serializing this class.\n     */\n    public int nonJsonField;\n}\n```\n\n### \u30c7\u30fc\u30bf\u3092\u9001\u308b\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30db\u30b9\u30c8\u306b\u767b\u9332\u3055\u308c\u308b\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3082\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```java\n    Message myMessage = new Message();\n    myMessage.description = \"See you on the other side!\";\n    \n    network.sendToAllDevices(myMessage, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.e(TAG, \"Oh no! The data failed to send.\");\n        }\n    });\n```\n\n\u30db\u30b9\u30c8\u3060\u3051\u304c\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u77e5\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4e0a\u8a18\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\u5c06\u6765\u7684\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u3082\u540c\u3058\u3088\u3046\u306b\u5168\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u4e88\u5b9a\u3067\u3059\u3002\u4eca\u306e\u3068\u3053\u308d\u306f\u307e\u305a\u30c7\u30fc\u30bf\u3092\u30db\u30b9\u30c8\u306b\u9001\u3063\u3066\u304b\u3089\u4e0a\u8a18\u30e1\u30bd\u30c3\u30c9\u3067\u305d\u306e\u4ed6\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u4f1d\u9054\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u7279\u5b9a\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```java\n    Message myMessage = new Message();\n    myMessage.description = \"See you on the other side!\";\n\n    network.sendToDevice(deviceToSendTo, myMessage, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.e(TAG, \"Oh no! The data failed to send.\");\n        }\n    });\n    \n    network.sendToHost(myMessage, new SalutCallback() {\n        @Override\n        public void call() {\n            Log.e(TAG, \"Oh no! The data failed to send.\");\n        }\n    });\n    \n```\n\n### \u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\n\nSalutDataCallback\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u306f`onDataReceived(Object data)`\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002\n\n**\u30c7\u30fc\u30bf\u306f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305f\u6587\u5b57\u5217\u3067\u9001\u3089\u308c\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u306f`String`\u3068\u3057\u3066\u9001\u3089\u308c\u307e\u3059\u3002LoganSquare\u3067\u5b9f\u969b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u89e3\u6790\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002**\n\n\u30c7\u30fc\u30bf\u306f\u6587\u5b57\u5217\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u89e3\u6790\u3059\u308b\u51e6\u7406\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\n    @Override\n    public void onDataReceived(Object data) {\n        Log.d(TAG, \"Received network data.\");\n        try\n        {\n            Message newMessage = LoganSquare.parse((String)data, Message.class);\n            Log.d(TAG, newMessage.description);  //See you on the other side!\n            //Do other stuff with data.\n        }\n        catch (IOException ex)\n        {\n            Log.e(TAG, \"Failed to parse network data.\");\n        }\n    }\n```\n\n### \u30af\u30ea\u30fc\u30cb\u30f3\u30b0\n\n```java\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        \n        if(MyApp.isHost)\n            network.stopNetworkService(true);\n        else\n            network.unregisterClient(true);\n    }\n```\n\n**\u5192\u982d\u3067\u8aac\u660e\u3057\u305f\u3001\u30db\u30b9\u30c8\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u4fdd\u6301\u3059\u308b\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002**\n\n#### \u30db\u30b9\u30c8\n\n**\u30db\u30b9\u30c8\u5074\u3067\u306f`stopNetworkService`\u3092\u547c\u3070\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002**WiFi\u3092\u7121\u52b9\u5316\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3059\u308b\u8ad6\u7406\u578b\u306e\u5f15\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\n\n#### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n\n**\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u306f`unregisterClient`\u3092\u547c\u3070\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002**WiFi\u3092\u7121\u52b9\u5316\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3059\u308b\u8ad6\u7406\u578b\u306e\u5f15\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\u89e3\u9664\u51e6\u7406\u306e\u6210\u529f\u30fb\u5931\u6557\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n## \u30e9\u30a4\u30bb\u30f3\u30b9\n\nMIT\n\n---\n\n## \u3042\u3068\u304c\u304d\n\n\u3053\u3053\u307e\u3067\u304c\u3093\u3070\u3063\u3066\u8a33\u3057\u3066\u66f8\u3044\u3066\u307f\u305f\u3093\u3067\u3059\u3051\u3069\u3001\u3044\u3056\u4f7f\u3063\u3066\u307f\u308b\u3068Wi-Fi Direct\u306eAPI\u306f**\u610f\u5473\u4e0d\u660e\u306b\u52d5\u304b\u306a\u3044\u3053\u3068\u304c\u591a\u304f\u3066\u3064\u3089\u3044**\u3067\u3059\u3002\u540c\u3058\u30b3\u30fc\u30c9\u304c1\u56de\u76ee\u306f\u52d5\u304f\u306e\u306b2\u56de\u76ee\u304c\u52d5\u304b\u306a\u304b\u3063\u305f\u308a\u3001Wi-Fi\u3092\u4e00\u5ea6\u30aa\u30d5\u306b\u3057\u3066\u30aa\u30f3\u306b\u3059\u308b\u3068\u76f4\u3063\u305f\u2026\u3068\u601d\u3063\u305f\u3089\u6b21\u306f\u52d5\u304b\u306a\u304b\u3063\u305f\u308a\u2026\u2026\n\n\u5b9f\u7528\u7684\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306b\u306f\u3082\u3046\u5c11\u3057\u304b\u304b\u308b\u306e\u304b\u306a\uff1f\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n"}