{"context": "\n\n\u73fe\u5728\u6642\u523b/\u4eca\u65e5\u306e\u53d6\u5f97\nDatetime t = Datetime.now();\nDate today = Date.today();\nLong t = Datetime.now().getTime(); 1970\u5e74\u304b\u3089\u306e\u30df\u30ea\u79d2\n\nDate\u578b\u3092\u6587\u5b57\u5217\u306b\u3057\u305f\u6642\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n2017-03-31 Date\n2017-01-26T07:12:03.000Z  Datetime\n\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u3066Datetime\u578b\u3092\u6587\u5b57\u5217\u306b\u3059\u308b (Timezone\u306fAsia/Tokyo)\ndt.format('yyyy/MM/dd HH:mm', UserInfo.getTimeZone().getId())\n\n\u30c7\u30fc\u30bf\u5909\u63db (Date <-> String)\nString test_str = '2017-1-1 15:30:00';\nDatetime test_dt = Datetime.valueOfGmt(test_str);`\n//Datetime.valueOf()\u3067\u5909\u63db\u3059\u308b\u3068GMT\u6642\u9593\u3068\u306a\u308a -9h \u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u6ce8\u610f\n\nstartDateTime.format('yyyyMMdd')`\n\n\nDatetime\u304b\u3089Date\nDate mdate = lastUpdateDatetime.date();  //date()\u3067Date\u578b\u3092\u53d6\u5f97\n\n\u30df\u30ea\u79d2\u6570\u304b\u3089\u306e\u5909\u63db\nLong msec = mydatetime.getTime();  //1970 \u5e74 1 \u6708 1 \u65e5 00:00:00 (GMT) \u3092\u8d77\u70b9\u3068\u3057\u305f\u6307\u5b9a\u3057\u305f\u30df\u30ea\u79d2\u6570(1341828183000L)\nDatetime mydatetime = Datetime.newInstance(msec);\n\n\u65e5\u4ed8\u306e\u5dee\u5206\u3092\u6c42\u3081\u308b\uff08Date.daysBetween()\uff09\nDate lastUpdateDate = Datetime.newInstance(lastUpdateTime).date();\nInteger sabun = Date.today().daysBetween(lastUpdateDate);\n\n\nGMT\u6642\u9593\u3092\u30ed\u30fc\u30ab\u30eb\u6642\u9593\u306b\u88dc\u6b63\u3059\u308b\u6570\u5024\u306e\u7b97\u51fa\n/*\n * get Timezone offset\n */ \npublic static Double getTimezoneOffset(){\n    TimeZone tz = UserInfo.getTimeZone();\n    return tz.getOffset(DateTime.now()) / (1000 * 3600 * 24.0);\n}\n\n\n####\u73fe\u5728\u6642\u523b/\u4eca\u65e5\u306e\u53d6\u5f97\n`Datetime t = Datetime.now();`\n`Date today = Date.today();`\n`Long t = Datetime.now().getTime();` 1970\u5e74\u304b\u3089\u306e\u30df\u30ea\u79d2\n\n####Date\u578b\u3092\u6587\u5b57\u5217\u306b\u3057\u305f\u6642\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n`2017-03-31 Date`\n`2017-01-26T07:12:03.000Z  Datetime`\n\n####\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u3066Datetime\u578b\u3092\u6587\u5b57\u5217\u306b\u3059\u308b (Timezone\u306fAsia/Tokyo)\n`dt.format('yyyy/MM/dd HH:mm', UserInfo.getTimeZone().getId())`\n####\u30c7\u30fc\u30bf\u5909\u63db (Date <-> String)\n```java\nString test_str = '2017-1-1 15:30:00';\nDatetime test_dt = Datetime.valueOfGmt(test_str);`\n//Datetime.valueOf()\u3067\u5909\u63db\u3059\u308b\u3068GMT\u6642\u9593\u3068\u306a\u308a -9h \u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u6ce8\u610f\n\nstartDateTime.format('yyyyMMdd')`\n```\n\n####Datetime\u304b\u3089Date\n`Date mdate = lastUpdateDatetime.date();  //date()\u3067Date\u578b\u3092\u53d6\u5f97`\n####\u30df\u30ea\u79d2\u6570\u304b\u3089\u306e\u5909\u63db\n`Long msec = mydatetime.getTime();  //1970 \u5e74 1 \u6708 1 \u65e5 00:00:00 (GMT) \u3092\u8d77\u70b9\u3068\u3057\u305f\u6307\u5b9a\u3057\u305f\u30df\u30ea\u79d2\u6570(1341828183000L)`\n`Datetime mydatetime = Datetime.newInstance(msec);`\n####\u65e5\u4ed8\u306e\u5dee\u5206\u3092\u6c42\u3081\u308b\uff08Date.daysBetween()\uff09\n```java\nDate lastUpdateDate = Datetime.newInstance(lastUpdateTime).date();\nInteger sabun = Date.today().daysBetween(lastUpdateDate);\n```\n####GMT\u6642\u9593\u3092\u30ed\u30fc\u30ab\u30eb\u6642\u9593\u306b\u88dc\u6b63\u3059\u308b\u6570\u5024\u306e\u7b97\u51fa\n```java \n/*\n * get Timezone offset\n */ \npublic static Double getTimezoneOffset(){\n    TimeZone tz = UserInfo.getTimeZone();\n    return tz.getOffset(DateTime.now()) / (1000 * 3600 * 24.0);\n}\n\n```\n", "tags": ["Salesforce", "\u65e5\u4ed8", "Apex"]}