{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u95a2\u6570\u578b\u8a00\u8a9e\uff7d\uff77\uff70\u306e\u7686\u69d8\uff0c\u8da3\u5473\u3067\u3082\u4ed5\u4e8b\u3067\u3082\u95a2\u6570\u578b\u3055\u308c\u3066\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f \n\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u5f37\u529b\u306a\u7279\u5fb4\u306e\u4e00\u3064\u3068\u3057\u3066\u4e0d\u5909\u6027\u304c\u6319\u3052\u3089\u308c\u307e\u3059\uff0e\u4e0d\u5909\u6027\u306b\u304a\u3044\u3066\u306flet\u3084IO\u30e2\u30ca\u30c9\u304c\u6ce8\u76ee\u3055\u308c\u304c\u3061\u3067\u3059\u304c\uff0c\u771f\u306b\u4e0d\u5909\u6027\u3092\u4e0b\u652f\u3048\u3057\u3066\u3044\u308b\u306e\u306f\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u308bList\u3084Map\u3068\u3044\u3063\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\uff0e\u3053\u308c\u3089\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3055\u308c\u305f\u53e4\u5178\u304c\u300cPurely Functional Data Structures\u300d\u3067\u3059\uff0e\u3053\u308c\u3089\u306b\u8a18\u8ff0\u3055\u308c\u3066\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3064\u3044\u3066\u5b9f\u88c5\u3068\u89e3\u8aac\u3092\u66f8\u304f\uff0c\u3068\u3044\u3046\u306e\u304c\u672c\u7a3f\u306e\u76ee\u6307\u3059\u3068\u3053\u308d\u3067\u3059\uff0e\n\n\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u306f\uff1f\n\u6b63\u78ba\u306a\u5b9a\u7fa9\u306b\u3064\u3044\u3066\u306f\uff0cMIT\u306e\u8b1b\u7fa9\u30d3\u30c7\u30aa \u306a\u3069\u898b\u3066\u6b32\u3057\u3044\u306e\u3067\u3059\u304c\uff0c\u91cd\u8981\u306a\u7279\u5fb4\u3068\u3057\u3066\uff0c\u5168\u3066\u306e\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u306f\uff0c\u64cd\u4f5c\u3092\u884c\u3046\u524d\u306e\u53e4\u3044\u7248\u3068\uff0c\u64cd\u4f5c\u5f8c\u306e\u65b0\u3057\u3044\u7248\u306e\uff0c\u4e21\u65b9\u304c\u7dad\u6301\u3055\u308c\u308b\u70b9\u304c\u6319\u3052\u3089\u308c\u307e\u3059\uff0e\uff08\u3053\u308c\u3092\u6c38\u7d9a\u6027(Persistency)\u3068\u547c\u3073\u307e\u3059\uff0e\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u306b\u6c38\u7d9a\u6027\u306b\u3082\u8272\u3005\u3068\u7a2e\u985e\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u2026\uff09\n\u7c21\u5358\u306b\u6982\u5ff5\u3092\u793a\u3059\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n// \u547d\u4ee4\u578b\u306a\u30c7\u30fc\u30bf\u69cb\u9020\nx1 = (\u521d\u671f\u72b6\u614b)\nx1.add(y) // y\u3092\u8ffd\u52a0\nprint x1 // x1\u306f\u5f53\u7136y\u8ffd\u52a0\u5f8c\u306e\u30c7\u30fc\u30bf\u3067\u3042\u308a\uff0cy\u8ffd\u52a0\u524d\u306ex1\u306f\u6b8b\u3063\u3066\u306a\u3044\uff01\n\n// \u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5834\u5408\nx1 = \uff08\u521d\u671f\u72b6\u614b\uff09\nx2 = x1 + y // y\u3092\u8ffd\u52a0\nprint x2 // x1+y \u306e\u30c7\u30fc\u30bf\u304c\u8868\u793a\u3055\u308c\u308b\nprint x1 // x1\uff08\u521d\u671f\u72b6\u614b\uff09\u306e\u30c7\u30fc\u30bf\u304c\u8868\u793a\u3055\u308c\u308b\n\n\u6c38\u7d9a\u6027\u306e\u5b9f\u88c5\u3067\u306f\uff0c\u64cd\u4f5c\u524d\u306e\u7248\u3092\u30b3\u30d4\u30fc\u3057\uff0c\u30b3\u30d4\u30fc\u3057\u305f\u3082\u306e\u3092\u4f7f\u3063\u3066\u64cd\u4f5c\u5f8c\u306e\u7248\u3092\u8868\u73fe\u3059\u308b\uff0c\u3068\u3044\u3046\u3053\u3068\u304c\u884c\u308f\u308c\u307e\u3059\uff0e\u3088\u3063\u3066\uff0c\u6c38\u7d9a\u6027\u3092\u6e80\u305f\u3059\u3060\u3051\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306f\uff0c\u65e2\u5b58\u306e\u547d\u4ee4\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u7528\u3044\u3066\u3042\u3063\u3055\u308a\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e\u64cd\u4f5c\u524d\u306e\u72b6\u614b\u3092\u5168\u3066\u30b3\u30d4\u30fc\u3057\u3066\uff0c\u65b0\u3057\u3044\u72b6\u614b\u3092\u8fd4\u305b\u3070\u3044\u3044\u306e\u3067\u3059\uff0e\u4f8b\u3048\u3070\uff0cJava\u3067add\u306b\u95a2\u3059\u308b\u6c38\u7d9a\u6027\u3092\u6301\u305f\u305b\u305fList\u3092\u4f5c\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\nclass PersitentList<T> {\n  List<T> list;\n  PersistentList(List<T> list) {\n    this.list = list;  // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n  }\n  PersistentList add(T x) {\n    List<T> list2 = this.list.clone();\n    return new PersistentList(list2);\n  }\n  ...\n}   \n\n\u3067\u3059\u304c\uff0c\u3053\u306e\u5b9f\u88c5\u3067\u306f\u975e\u5e38\u306b\u52b9\u7387\u304c\u60aa\u3044\u3067\u3059\uff0e\u3068\u306f\u3044\u3048\u30b3\u30d4\u30fc\u306a\u3057\u3067\u6c38\u7d9a\u6027\u3092\u5b9f\u73fe\u3059\u308b\u306e\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308a\uff0c\u5b9f\u8df5\u7684\u306a\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u304a\u3044\u3066\u306f\uff0c\u5fc5\u8981\u6700\u5c0f\u9650\u306e\u30b3\u30d4\u30fc\u3092\u884c\u3046\u3053\u3068\u3067\u6c38\u7d9a\u6027\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u306b\u3064\u3044\u3066\n\u4ee5\u964d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u3067\u306f\uff0c\u672c\u306e\u30b3\u30d4\u30da\u3092\u907f\u3051\u308b\u610f\u5473\uff0c\u79c1\u306e\u8da3\u5473\u3092\u517c\u306d\u3066F#\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\uff0eF#\u3060\u305e\uff01Haskell\u3058\u3083\u306a\u3044\u305e\uff01\n\n\u4f8b: \u4e8c\u5206\u6728\n\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u4f8b\u3068\u3057\u3066\u306f\uff0c\u5358\u65b9\u5411\u30ea\u30b9\u30c8\u304c\u3088\u304f\u51fa\u3066\u304d\u307e\u3059\u306e\u3067\uff0c\u3053\u3053\u3067\u306f\u4e8c\u5206\u6728\u3092\u4f8b\u306b\u8aac\u660e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\u56f3\u4f8b\u3092\u4ee5\u4e0b\u306b\u8868\u793a\u3057\u307e\u3059\uff0e\n\n\u4e0a\u306e\u4f8b\u3067\u306f\u5909\u6570xs\u304c\u4e8c\u5206\u6728\u306e\u9802\u70b9\u3092\u6307\u3057\u3066\u304a\u308a\uff0c\u3053\u3053\u304b\u3089\u4e8c\u5206\u6728\u5168\u4f53\u3092\u305f\u3069\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0exs\u306b4\u3092\u633f\u5165\u3057ys\u3092\u4f5c\u308b\u3053\u3068\u3092\u8003\u3048\u3066\u307f\u307e\u3059\uff0e\u65b0\u305f\u306b4\u306e\u9802\u70b9\u304c\u633f\u5165\u3055\u308c\u308b\u5834\u6240\u306f\u547d\u4ee4\u578b\u306e\u5834\u5408\u3068\u540c\u3058\u304f\uff0c3\u306e\u9802\u70b9\u306e\u53f3\u5074\u306e\u5b50\u306e\u90e8\u5206\u3067\u3059\uff0e\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u4e8c\u5206\u6728\u3092\u5b9f\u73fe\u3059\u308b\u5834\u5408\u306f\uff0c\u633f\u5165\u90e8\u306b\u95a2\u9023\u3059\u308b\u90e8\u5206\u3092\u3046\u307e\u304f\u30b3\u30d4\u30fc\u3057\u3066\u3084\u308a\uff0c\u305d\u308c\u4ee5\u5916\u306e\u90e8\u5206\u306f\u5143\u306e\u4e8c\u5206\u6728\u3092\u4f7f\u3044\u56de\u305b\u3070\u4f4e\u30b3\u30b9\u30c8\u3067\u65b0\u3057\u3044\u4e8c\u5206\u6728\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u4eca\u56de\u306e\u4e8c\u5206\u6728\u3067\u306f\uff0c\u9802\u70b9\u30ce\u30fc\u30c9\u304b\u3089\u65b0\u3057\u304f\u633f\u5165\u3059\u308b\u5834\u6240\u307e\u3067\u306e\u30d1\u30b9\u304c\u30b3\u30d4\u30fc\u3059\u308b\u90e8\u5206\u3068\u306a\u308a\u307e\u3059\uff0e\u56f3\u306e\u4e0b\u306e\u90e8\u5206\u304c ys = insert 4 xs\u3068\u3057\u3066\u3084\u308a\uff0cxs\u306b4\u3092\u633f\u5165\u3057\u305f\u3042\u3068\u306e\u4e8c\u5206\u6728\u3068\u3057\u3066ys\u3092\u5f97\u305f\u6642\u306e\u4e21\u8005\u306e\u69cb\u9020\u3067\u3059\uff0eys\u304b\u3089\u8fbf\u308c\u308b\u7bc4\u56f2\u306fxs\u306b4\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3067\u3042\u308a\uff0c\u304b\u3064\uff0cxs\u304b\u3089\u8fbf\u308c\u308b\u7bc4\u56f2\u306f\u5909\u5316\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\n\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3044\u305f\u5834\u5408\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\uff0e\n\nsimpleTree\ntype Tree<'a> =    // \u578b\u5909\u6570\u306f\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306e\u3088\u3046\u306b\u66f8\u304f\uff0e \u4efb\u610f\u306e\u578b\u3092\u8868\u3059\u5909\u6570\u306e\u540d\u524d\u306f\uff0c\u5148\u982d\u306b'\u3092\u3064\u3051\u308b\n    | E            // \u3044\u308f\u3086\u308b\u7a7a\u9802\u70b9\n    | T of Tree<'a> * 'a * Tree<'a> // \u7bc0\u70b9\uff0e\u5de6\u306e\u5b50\uff0c\u8981\u7d20\uff0c\u53f3\u306e\u5b50\u306e\u30bf\u30d7\u30eb\uff0e Haskell\u7684\u306b\u306f (T 'a, 'a, T 'a)\u3060\u308d\u3046\u304b  \n\n// insert \u65b0\u8981\u7d20 Tree \nlet rec insert x = function  // \u6700\u5f8c\u306e\u5f15\u6570\u306b\u5bfe\u3057\u3066\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u884c\u3046\n    | E -> T(E, x, E)        // \u30c4\u30ea\u30fc\u304c\u7a7a\u306a\u3089\u65b0\u9802\u70b9\u3092\u8fd4\u3059\n    | (T(a, y, b) as s) ->   // \u30c4\u30ea\u30fc\u304c\u7a7a\u3067\u306f\u7121\u3044\n        if x < y then T(insert x a, y, b)       // \u7d4c\u8def\u3092\u30b3\u30d4\u30fc\u3057\u306a\u304c\u3089\u5de6\u306b\u8ffd\u52a0\n        else if y < x then T(a, y, insert x b)  // \u7d4c\u8def\u3092\u30b3\u30d4\u30fc\u3057\u306a\u304c\u3089\u53f3\u306b\u8ffd\u52a0\n        else s // \u540c\u3058\u8981\u7d20\u306f\u3059\u3067\u306b\u3042\u308b\u306e\u3067\u4f55\u3082\u3057\u306a\u3044\n...\n// \u4f7f\u7528\u4f8b\nlet xs = insert 1 E\nlet ys = insert 4 xs\nprintfn \"%A\" xs \nprintfn \"%A\" ys\n\n\nF#\u306e\u5224\u5225\u5171\u7528\u4f53\u306fEquals\u3082ToString\u3082\u81ea\u52d5\u5b9f\u88c5\u3055\u308c\u308b\u306e\u3067deriving\u3082\u3044\u308a\u307e\u305b\u3093\uff0e\u307e\u305f\uff0cOCaml\u3068\u9055\u3044\uff0c\u30aa\u30d5\u30b5\u30a4\u30c9\u30eb\u30fc\u30eb\u3092\u9069\u7528\u3057\u305f\u6587\u6cd5\u304c\u4f7f\u3048\u308b\u305f\u3081\uff0c\u8a18\u8ff0\u91cf\u304cHaskell\u7a0b\u5ea6\u306b\u306f\u5c11\u306a\u3044\u3067\u3059\uff0e\uff08\u305d\u306e\u5206\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u304b\u306a\u308a\u5236\u7d04\u3055\u308c\u307e\u3059\u304c\u30fb\u30fb\u30fb\uff09\n\u306a\u304a\uff0cF#\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3063\u307d\u304finsert\u3092\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\n\nmethodVersion\ntype Tree<'a when 'a : comparison> =    // \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u88c5\u3059\u308b\u5834\u5408\uff0cinsert\u306b\u5bfe\u5fdc\u3057\u305f\u578b\u5236\u7d04\u304c\u5fc5\u9808\n    | E\n    | T of Tree<'a> * 'a * Tree<'a>\n\ntype Tree with  // \u578b\u5b9a\u7fa9\u5f8c\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3067\u304d\u308b\uff08\uff01\uff09\n    member this.insert x =  // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u304f\u5834\u5408\u306f member this.\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u66f8\u304f \n        match this with\n        | E -> T(E, x, E)\n        | (T(a, y, b) as s) ->\n            if x < y then T(a.insert x, y, b) // \u547c\u3073\u51fa\u3059\u3068\u304d\u306fa.insert\u3068\u30e1\u30bd\u30c3\u30c9\u3063\u307d\u304f\u304b\u3051\u308b\n            else if y < x then T(a, y, b.insert x)\n            else s\n...\n// \u4f7f\u7528\u4f8b\nlet xs = E.insert 1\nlet ys = xs.insert 4\nprintfn \"%A\" xs \nprintfn \"%A\" ys\n\n\n\u305f\u3060\u3057\uff0c\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u66f8\u304f\u3068F#\u3067\u591a\u7528\u3055\u308c\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u6f14\u7b97\u5b50\u3068\u306e\u76f8\u6027\u304c\u3044\u307e\u3044\u3061\u60aa\u3044\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u306e\u3067\uff0c\u4eca\u5f8c\u306e\u4f8b\u3067\u306f\u666e\u901a\u306b\u95a2\u6570\u3068\u3057\u3066\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u307e\u3068\u3081\n\u4ee5\u4e0a\uff0c\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3064\u3044\u3066\u306e\u7c21\u5358\u306a\u6027\u8cea\u306e\u8a18\u8ff0\u3092\u884c\u3044\u307e\u3057\u305f\uff0e\u76ee\u6307\u3059\u306fPFDS\u306e\u5168\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5236\u8987\u3067\u3059\uff0e\uff08\u3064\u3044\u3067\u306bF#\u306e\u77e5\u540d\u5ea6\u306e\u4e0a\u6607\u3059\u308b\u3068\u3044\u3044\u306a\u3042\uff0e\uff09\n\u95a2\u6570\u578b\u8a00\u8a9e\u30d3\u30ae\u30ca\u30fc\u306b\u3082F#\u306f\u304a\u3059\u3059\u3081\u3067\uff0cVisual Studio\u3068\u3044\u3046\u5f37\u529b\u306aIDE\u306e\u304a\u304b\u3052\u3067\u578b\u3092\u78ba\u8a8d\u3059\u308b\u306e\u3082\u7c21\u5358\u3067\u3059\u3057\uff0c\u56f0\u3063\u305f\u3068\u304d\u306b\u306f\u7834\u58ca\u7684\u64cd\u4f5c\u3082\u884c\u3048\u307e\u3059\uff0e\u307f\u306a\u3055\u3093Visual Studio Community\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0c\u305d\u3057\u3066F#\u3084\u3063\u3066\u307f\u307e\u3057\u3087\uff0e\n\u6b21\u56de\u306fleftist heap\u3084\u308a\u307e\u3059\uff0e\n# \u306f\u3058\u3081\u306b\n\u95a2\u6570\u578b\u8a00\u8a9e\uff7d\uff77\uff70\u306e\u7686\u69d8\uff0c\u8da3\u5473\u3067\u3082\u4ed5\u4e8b\u3067\u3082\u95a2\u6570\u578b\u3055\u308c\u3066\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f \n\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u5f37\u529b\u306a\u7279\u5fb4\u306e\u4e00\u3064\u3068\u3057\u3066\u4e0d\u5909\u6027\u304c\u6319\u3052\u3089\u308c\u307e\u3059\uff0e\u4e0d\u5909\u6027\u306b\u304a\u3044\u3066\u306flet\u3084IO\u30e2\u30ca\u30c9\u304c\u6ce8\u76ee\u3055\u308c\u304c\u3061\u3067\u3059\u304c\uff0c\u771f\u306b\u4e0d\u5909\u6027\u3092\u4e0b\u652f\u3048\u3057\u3066\u3044\u308b\u306e\u306f\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u308bList\u3084Map\u3068\u3044\u3063\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\uff0e\u3053\u308c\u3089\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3055\u308c\u305f\u53e4\u5178\u304c[\u300cPurely Functional Data Structures\u300d](http://www.amazon.co.jp/Purely-Functional-Structures-Chris-Okasaki/dp/0521663504)\u3067\u3059\uff0e\u3053\u308c\u3089\u306b\u8a18\u8ff0\u3055\u308c\u3066\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3064\u3044\u3066\u5b9f\u88c5\u3068\u89e3\u8aac\u3092\u66f8\u304f\uff0c\u3068\u3044\u3046\u306e\u304c\u672c\u7a3f\u306e\u76ee\u6307\u3059\u3068\u3053\u308d\u3067\u3059\uff0e\n\n# \u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u306f\uff1f\n\u6b63\u78ba\u306a\u5b9a\u7fa9\u306b\u3064\u3044\u3066\u306f\uff0cMIT\u306e[\u8b1b\u7fa9\u30d3\u30c7\u30aa](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-851-advanced-data-structures-spring-2012/lecture-videos/session-1-persistent-data-structures/) \u306a\u3069\u898b\u3066\u6b32\u3057\u3044\u306e\u3067\u3059\u304c\uff0c\u91cd\u8981\u306a\u7279\u5fb4\u3068\u3057\u3066\uff0c\u5168\u3066\u306e\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u306f\uff0c\u64cd\u4f5c\u3092\u884c\u3046\u524d\u306e\u53e4\u3044\u7248\u3068\uff0c\u64cd\u4f5c\u5f8c\u306e\u65b0\u3057\u3044\u7248\u306e\uff0c\u4e21\u65b9\u304c\u7dad\u6301\u3055\u308c\u308b\u70b9\u304c\u6319\u3052\u3089\u308c\u307e\u3059\uff0e\uff08\u3053\u308c\u3092\u6c38\u7d9a\u6027(Persistency)\u3068\u547c\u3073\u307e\u3059\uff0e\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u306b\u6c38\u7d9a\u6027\u306b\u3082\u8272\u3005\u3068\u7a2e\u985e\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u2026\uff09\n\u7c21\u5358\u306b\u6982\u5ff5\u3092\u793a\u3059\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n```\n// \u547d\u4ee4\u578b\u306a\u30c7\u30fc\u30bf\u69cb\u9020\nx1 = (\u521d\u671f\u72b6\u614b)\nx1.add(y) // y\u3092\u8ffd\u52a0\nprint x1 // x1\u306f\u5f53\u7136y\u8ffd\u52a0\u5f8c\u306e\u30c7\u30fc\u30bf\u3067\u3042\u308a\uff0cy\u8ffd\u52a0\u524d\u306ex1\u306f\u6b8b\u3063\u3066\u306a\u3044\uff01\n\n// \u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5834\u5408\nx1 = \uff08\u521d\u671f\u72b6\u614b\uff09\nx2 = x1 + y // y\u3092\u8ffd\u52a0\nprint x2 // x1+y \u306e\u30c7\u30fc\u30bf\u304c\u8868\u793a\u3055\u308c\u308b\nprint x1 // x1\uff08\u521d\u671f\u72b6\u614b\uff09\u306e\u30c7\u30fc\u30bf\u304c\u8868\u793a\u3055\u308c\u308b\n```\n\n\n\u6c38\u7d9a\u6027\u306e\u5b9f\u88c5\u3067\u306f\uff0c\u64cd\u4f5c\u524d\u306e\u7248\u3092\u30b3\u30d4\u30fc\u3057\uff0c\u30b3\u30d4\u30fc\u3057\u305f\u3082\u306e\u3092\u4f7f\u3063\u3066\u64cd\u4f5c\u5f8c\u306e\u7248\u3092\u8868\u73fe\u3059\u308b\uff0c\u3068\u3044\u3046\u3053\u3068\u304c\u884c\u308f\u308c\u307e\u3059\uff0e\u3088\u3063\u3066\uff0c\u6c38\u7d9a\u6027\u3092\u6e80\u305f\u3059**\u3060\u3051**\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306f\uff0c\u65e2\u5b58\u306e\u547d\u4ee4\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u7528\u3044\u3066\u3042\u3063\u3055\u308a\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e\u64cd\u4f5c\u524d\u306e\u72b6\u614b\u3092\u5168\u3066\u30b3\u30d4\u30fc\u3057\u3066\uff0c\u65b0\u3057\u3044\u72b6\u614b\u3092\u8fd4\u305b\u3070\u3044\u3044\u306e\u3067\u3059\uff0e\u4f8b\u3048\u3070\uff0cJava\u3067add\u306b\u95a2\u3059\u308b\u6c38\u7d9a\u6027\u3092\u6301\u305f\u305b\u305fList\u3092\u4f5c\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\n```java\nclass PersitentList<T> {\n  List<T> list;\n  PersistentList(List<T> list) {\n    this.list = list;  // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n  }\n  PersistentList add(T x) {\n    List<T> list2 = this.list.clone();\n    return new PersistentList(list2);\n  }\n  ...\n}   \n```\n\n\u3067\u3059\u304c\uff0c\u3053\u306e\u5b9f\u88c5\u3067\u306f\u975e\u5e38\u306b\u52b9\u7387\u304c\u60aa\u3044\u3067\u3059\uff0e\u3068\u306f\u3044\u3048\u30b3\u30d4\u30fc\u306a\u3057\u3067\u6c38\u7d9a\u6027\u3092\u5b9f\u73fe\u3059\u308b\u306e\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308a\uff0c\u5b9f\u8df5\u7684\u306a\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u304a\u3044\u3066\u306f\uff0c\u5fc5\u8981\u6700\u5c0f\u9650\u306e\u30b3\u30d4\u30fc\u3092\u884c\u3046\u3053\u3068\u3067\u6c38\u7d9a\u6027\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u306b\u306a\u308a\u307e\u3059\uff0e\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u306b\u3064\u3044\u3066\n\u4ee5\u964d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u3067\u306f\uff0c\u672c\u306e\u30b3\u30d4\u30da\u3092\u907f\u3051\u308b\u610f\u5473\uff0c\u79c1\u306e\u8da3\u5473\u3092\u517c\u306d\u3066**F#**\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\uff0e**F#**\u3060\u305e\uff01Haskell\u3058\u3083\u306a\u3044\u305e\uff01\n\n# \u4f8b: \u4e8c\u5206\u6728\n\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u4f8b\u3068\u3057\u3066\u306f\uff0c\u5358\u65b9\u5411\u30ea\u30b9\u30c8\u304c\u3088\u304f\u51fa\u3066\u304d\u307e\u3059\u306e\u3067\uff0c\u3053\u3053\u3067\u306f\u4e8c\u5206\u6728\u3092\u4f8b\u306b\u8aac\u660e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\u56f3\u4f8b\u3092\u4ee5\u4e0b\u306b\u8868\u793a\u3057\u307e\u3059\uff0e\n\n![\u7121\u984c\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3(1).png](https://qiita-image-store.s3.amazonaws.com/0/58722/366d2816-faf0-da28-767a-2dee384ee5c9.png)\n\n\u4e0a\u306e\u4f8b\u3067\u306f\u5909\u6570xs\u304c\u4e8c\u5206\u6728\u306e\u9802\u70b9\u3092\u6307\u3057\u3066\u304a\u308a\uff0c\u3053\u3053\u304b\u3089\u4e8c\u5206\u6728\u5168\u4f53\u3092\u305f\u3069\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0exs\u306b4\u3092\u633f\u5165\u3057ys\u3092\u4f5c\u308b\u3053\u3068\u3092\u8003\u3048\u3066\u307f\u307e\u3059\uff0e\u65b0\u305f\u306b4\u306e\u9802\u70b9\u304c\u633f\u5165\u3055\u308c\u308b\u5834\u6240\u306f\u547d\u4ee4\u578b\u306e\u5834\u5408\u3068\u540c\u3058\u304f\uff0c3\u306e\u9802\u70b9\u306e\u53f3\u5074\u306e\u5b50\u306e\u90e8\u5206\u3067\u3059\uff0e\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u4e8c\u5206\u6728\u3092\u5b9f\u73fe\u3059\u308b\u5834\u5408\u306f\uff0c\u633f\u5165\u90e8\u306b\u95a2\u9023\u3059\u308b\u90e8\u5206\u3092\u3046\u307e\u304f\u30b3\u30d4\u30fc\u3057\u3066\u3084\u308a\uff0c\u305d\u308c\u4ee5\u5916\u306e\u90e8\u5206\u306f\u5143\u306e\u4e8c\u5206\u6728\u3092\u4f7f\u3044\u56de\u305b\u3070\u4f4e\u30b3\u30b9\u30c8\u3067\u65b0\u3057\u3044\u4e8c\u5206\u6728\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u4eca\u56de\u306e\u4e8c\u5206\u6728\u3067\u306f\uff0c\u9802\u70b9\u30ce\u30fc\u30c9\u304b\u3089\u65b0\u3057\u304f\u633f\u5165\u3059\u308b\u5834\u6240\u307e\u3067\u306e\u30d1\u30b9\u304c\u30b3\u30d4\u30fc\u3059\u308b\u90e8\u5206\u3068\u306a\u308a\u307e\u3059\uff0e\u56f3\u306e\u4e0b\u306e\u90e8\u5206\u304c ys = insert 4 xs\u3068\u3057\u3066\u3084\u308a\uff0cxs\u306b4\u3092\u633f\u5165\u3057\u305f\u3042\u3068\u306e\u4e8c\u5206\u6728\u3068\u3057\u3066ys\u3092\u5f97\u305f\u6642\u306e\u4e21\u8005\u306e\u69cb\u9020\u3067\u3059\uff0eys\u304b\u3089\u8fbf\u308c\u308b\u7bc4\u56f2\u306fxs\u306b4\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3067\u3042\u308a\uff0c\u304b\u3064\uff0cxs\u304b\u3089\u8fbf\u308c\u308b\u7bc4\u56f2\u306f\u5909\u5316\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\n\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3044\u305f\u5834\u5408\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\uff0e\n\n```fsharp:simpleTree\ntype Tree<'a> =    // \u578b\u5909\u6570\u306f\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306e\u3088\u3046\u306b\u66f8\u304f\uff0e \u4efb\u610f\u306e\u578b\u3092\u8868\u3059\u5909\u6570\u306e\u540d\u524d\u306f\uff0c\u5148\u982d\u306b'\u3092\u3064\u3051\u308b\n    | E            // \u3044\u308f\u3086\u308b\u7a7a\u9802\u70b9\n    | T of Tree<'a> * 'a * Tree<'a> // \u7bc0\u70b9\uff0e\u5de6\u306e\u5b50\uff0c\u8981\u7d20\uff0c\u53f3\u306e\u5b50\u306e\u30bf\u30d7\u30eb\uff0e Haskell\u7684\u306b\u306f (T 'a, 'a, T 'a)\u3060\u308d\u3046\u304b  \n    \n// insert \u65b0\u8981\u7d20 Tree \nlet rec insert x = function  // \u6700\u5f8c\u306e\u5f15\u6570\u306b\u5bfe\u3057\u3066\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u884c\u3046\n    | E -> T(E, x, E)        // \u30c4\u30ea\u30fc\u304c\u7a7a\u306a\u3089\u65b0\u9802\u70b9\u3092\u8fd4\u3059\n    | (T(a, y, b) as s) ->   // \u30c4\u30ea\u30fc\u304c\u7a7a\u3067\u306f\u7121\u3044\n        if x < y then T(insert x a, y, b)       // \u7d4c\u8def\u3092\u30b3\u30d4\u30fc\u3057\u306a\u304c\u3089\u5de6\u306b\u8ffd\u52a0\n        else if y < x then T(a, y, insert x b)  // \u7d4c\u8def\u3092\u30b3\u30d4\u30fc\u3057\u306a\u304c\u3089\u53f3\u306b\u8ffd\u52a0\n        else s // \u540c\u3058\u8981\u7d20\u306f\u3059\u3067\u306b\u3042\u308b\u306e\u3067\u4f55\u3082\u3057\u306a\u3044\n...\n// \u4f7f\u7528\u4f8b\nlet xs = insert 1 E\nlet ys = insert 4 xs\nprintfn \"%A\" xs \nprintfn \"%A\" ys\n```\n\nF#\u306e\u5224\u5225\u5171\u7528\u4f53\u306fEquals\u3082ToString\u3082\u81ea\u52d5\u5b9f\u88c5\u3055\u308c\u308b\u306e\u3067deriving\u3082\u3044\u308a\u307e\u305b\u3093\uff0e\u307e\u305f\uff0cOCaml\u3068\u9055\u3044\uff0c\u30aa\u30d5\u30b5\u30a4\u30c9\u30eb\u30fc\u30eb\u3092\u9069\u7528\u3057\u305f\u6587\u6cd5\u304c\u4f7f\u3048\u308b\u305f\u3081\uff0c\u8a18\u8ff0\u91cf\u304cHaskell\u7a0b\u5ea6\u306b\u306f\u5c11\u306a\u3044\u3067\u3059\uff0e\uff08\u305d\u306e\u5206\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u304b\u306a\u308a\u5236\u7d04\u3055\u308c\u307e\u3059\u304c\u30fb\u30fb\u30fb\uff09\n\n\u306a\u304a\uff0cF#\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3063\u307d\u304finsert\u3092\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\n\n```fsharp:methodVersion\ntype Tree<'a when 'a : comparison> =    // \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u88c5\u3059\u308b\u5834\u5408\uff0cinsert\u306b\u5bfe\u5fdc\u3057\u305f\u578b\u5236\u7d04\u304c\u5fc5\u9808\n    | E\n    | T of Tree<'a> * 'a * Tree<'a>\n    \ntype Tree with  // \u578b\u5b9a\u7fa9\u5f8c\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3067\u304d\u308b\uff08\uff01\uff09\n    member this.insert x =  // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u304f\u5834\u5408\u306f member this.\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u66f8\u304f \n        match this with\n        | E -> T(E, x, E)\n        | (T(a, y, b) as s) ->\n            if x < y then T(a.insert x, y, b) // \u547c\u3073\u51fa\u3059\u3068\u304d\u306fa.insert\u3068\u30e1\u30bd\u30c3\u30c9\u3063\u307d\u304f\u304b\u3051\u308b\n            else if y < x then T(a, y, b.insert x)\n            else s\n...\n// \u4f7f\u7528\u4f8b\nlet xs = E.insert 1\nlet ys = xs.insert 4\nprintfn \"%A\" xs \nprintfn \"%A\" ys\n```\n\n\u305f\u3060\u3057\uff0c\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u66f8\u304f\u3068F#\u3067\u591a\u7528\u3055\u308c\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u6f14\u7b97\u5b50\u3068\u306e\u76f8\u6027\u304c\u3044\u307e\u3044\u3061\u60aa\u3044\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u306e\u3067\uff0c\u4eca\u5f8c\u306e\u4f8b\u3067\u306f\u666e\u901a\u306b\u95a2\u6570\u3068\u3057\u3066\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\n# \u307e\u3068\u3081\n\u4ee5\u4e0a\uff0c\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3064\u3044\u3066\u306e\u7c21\u5358\u306a\u6027\u8cea\u306e\u8a18\u8ff0\u3092\u884c\u3044\u307e\u3057\u305f\uff0e\u76ee\u6307\u3059\u306fPFDS\u306e\u5168\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5236\u8987\u3067\u3059\uff0e\uff08\u3064\u3044\u3067\u306bF#\u306e\u77e5\u540d\u5ea6\u306e\u4e0a\u6607\u3059\u308b\u3068\u3044\u3044\u306a\u3042\uff0e\uff09\n\n\u95a2\u6570\u578b\u8a00\u8a9e\u30d3\u30ae\u30ca\u30fc\u306b\u3082F#\u306f\u304a\u3059\u3059\u3081\u3067\uff0cVisual Studio\u3068\u3044\u3046\u5f37\u529b\u306aIDE\u306e\u304a\u304b\u3052\u3067\u578b\u3092\u78ba\u8a8d\u3059\u308b\u306e\u3082\u7c21\u5358\u3067\u3059\u3057\uff0c\u56f0\u3063\u305f\u3068\u304d\u306b\u306f\u7834\u58ca\u7684\u64cd\u4f5c\u3082\u884c\u3048\u307e\u3059\uff0e\u307f\u306a\u3055\u3093Visual Studio Community\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0c\u305d\u3057\u3066F#\u3084\u3063\u3066\u307f\u307e\u3057\u3087\uff0e\n\n\u6b21\u56de\u306fleftist heap\u3084\u308a\u307e\u3059\uff0e\n\n\n", "tags": ["\u95a2\u6570\u578b\u8a00\u8a9e", "F#", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}