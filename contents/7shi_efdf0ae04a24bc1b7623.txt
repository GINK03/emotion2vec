{"context": "F#\u3067OpenGL\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u30c7\u30e2\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\nOpenGL - Mesademos (gears.c)\n\n\n\u30b7\u30ea\u30fc\u30ba\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\nF#\u3067OpenGL\nF#\u306bOpenGL\u306e\u6b6f\u8eca\u30c7\u30e2\u3092\u79fb\u690d \u2190 \u3053\u306e\u8a18\u4e8b\nOpenGL\u3067\u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\n\n\u95a2\u9023\u3059\u308b\u30b3\u30fc\u30c9\u3092\u307e\u3068\u3081\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u3059\u3002\n\nhttps://bitbucket.org/7shi/fsgl\n\n\u3010\u6ce8\u610f\u3011\u3053\u306e\u8a18\u4e8b\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u30ec\u30ac\u30b7\u30fc\u306aAPI\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u65b0\u3057\u3044API\u3078\u306e\u79fb\u884c\u306f\u6a5f\u4f1a\u3092\u6539\u3081\u308b\u3053\u3068\u306b\u3057\u3066\u3001\u4eca\u56de\u306f\u30ec\u30ac\u30b7\u30fc\u306a\u307e\u307e\u9032\u3081\u307e\u3059\u3002\n\n\u79fb\u690d\n\u524d\u56de\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305fOpenGL\u30b5\u30dd\u30fc\u30c8\u306b\u8db3\u308a\u306a\u3044\u6a5f\u80fd\u3092\u88dc\u3044\u306a\u304c\u3089\u79fb\u690d\u3092\u9032\u3081\u307e\u3057\u305f\u3002\n\u5b8c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\nGL7.fsx\nGL7.GL.fsx\ngears.fsx\n\n\u203b GL7 \u3068\u3044\u3046\u540d\u524d\u306f\u9069\u5f53\u3067\u30017\u306f\u4e03\u8a8c\u306e\u4e03\u3067\u3059\u3002\n\n\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\n\u5143\u306eC\u8a00\u8a9e\u306e main() \u304b\u3089\u521d\u671f\u5316\u90e8\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\n\ngears.c\nmain(int argc, char *argv[])\n{\n  \uff08\u7565\uff09\n  glutCreateWindow(\"Gears\");\n  init();\n\n\nGLUT\u3067\u306f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c1\u3064\u3057\u304b\u306a\u3044\u305f\u3081\u5207\u308a\u66ff\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u304c\u3001GLForm\u3067\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5207\u308a\u66ff\u3048\u308b\u65b9\u91dd\u3067\u3059\u3002\ninit() \u3067\u306fOpenGL\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\ngears.c\nstatic void\ninit(void)\n{\n  \uff08\u7565\uff09\n  glLightfv(GL_LIGHT0, GL_POSITION, pos);\n  glEnable(GL_CULL_FACE);\n  glEnable(GL_LIGHTING);\n  glEnable(GL_LIGHT0);\n  glEnable(GL_DEPTH_TEST);\n\n\nGLForm\u3067\u306fPaint\u3060\u3051\u7279\u5225\u6271\u3044\u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u5207\u308a\u66ff\u3048\u3066\u3044\u307e\u3059\u3002\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30cf\u30f3\u30c9\u30e9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u3066\u306f\u304d\u308a\u304c\u306a\u3044\u305f\u3081\u3001Paint\u4ee5\u5916\u3067\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u5207\u308a\u66ff\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u30b9\u30b3\u30fc\u30d7\u30a2\u30a6\u30c8\u6642\u306b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u624b\u653e\u3059\u305f\u3081\u3001\u5f8c\u7247\u4ed8\u3051\u7528\u306e\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u203b RAII\u306f\u624b\u6cd5\u306e\u7565\u8a9e\u3067\u3059\u3002\ntype RAII(dtor) =\n    interface IDisposable with override x.Dispose() = dtor()\n\nRAII\u3092\u4f7f\u3063\u3066\u30b9\u30b3\u30fc\u30d7\u5185\u3060\u3051\u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n    member x.MakeCurrent() =\n        ignore <| wglMakeCurrent(hDC, hGLRC)\n        new RAII(fun () -> ignore <| wglMakeCurrent(0n, 0n))\n\nF#\u306e\u521d\u671f\u5316\u90e8\u3067MakeCurrent\u3092\u4f7f\u3044\u307e\u3059\u3002GLUT\u3067\u306f\u8d77\u52d5\u76f4\u5f8c\u306bReshape\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3059\u304cWindows Forms\u3067\u306f\u767a\u751f\u3057\u306a\u3044\u305f\u3081\u3001\u660e\u793a\u7684\u306b\u30cf\u30f3\u30c9\u30e9\u3092\u547c\u3073\u307e\u3059\u3002\n\ngears.fsx\n    let f = new GLForm(Text = \"Gears\")\n    f.Load.Add <| fun _ ->\n        use raii = f.MakeCurrent()\n        init()\n        reshape f\n\n\n\n\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\nmain() \u3067GUI\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\ngears.c\nmain(int argc, char *argv[])\n{\n  \uff08\u7565\uff09\n  glutDisplayFunc(draw);\n  glutReshapeFunc(reshape);\n  glutKeyboardFunc(key);\n  glutSpecialFunc(special);\n  glutVisibilityFunc(visible);\n\n\nreshape() \u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30ea\u30b5\u30a4\u30ba\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3082OpenGL\u306e\u95a2\u6570\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\ngears.c\n/* new window size or exposure */\nstatic void\nreshape(int width, int height)\n{\n  GLfloat h = (GLfloat) height / (GLfloat) width;\n\n  glViewport(0, 0, (GLint) width, (GLint) height);\n  glMatrixMode(GL_PROJECTION);\n  glLoadIdentity();\n  glFrustum(-1.0, 1.0, -h, h, 5.0, 60.0);\n  glMatrixMode(GL_MODELVIEW);\n  glLoadIdentity();\n  glTranslatef(0.0, 0.0, -40.0);\n}\n\n\n\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066MakeCurrent\u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002GLUT\u3068\u306f\u30cf\u30f3\u30c9\u30e9\u306e\u5f15\u6570\u304c\u7570\u306a\u308b\u305f\u3081\u3001\u5f15\u6570\u3092\u8abf\u6574\u3057\u3066\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u307e\u3059\u3002\n\ngears.fsx\n    f.Paint.Add <| fun _ ->\n        draw f\n        idle f\n    f.Resize.Add <| fun _ ->\n        use raii = f.MakeCurrent()\n        reshape f\n    f.KeyPress.Add <| fun e ->\n        key f e.KeyChar\n    f.KeyDown.Add <| fun e ->\n        special e.KeyCode\n\n\nGLUT\u3067\u306fVisibility\u30a4\u30d9\u30f3\u30c8\u3067\u975e\u8868\u793a\u6642\u306b\u518d\u63cf\u753b\u8981\u6c42\u3092\u6b62\u3081\u3066\u3044\u307e\u3059\u3002Windows Forms\u3067\u306f\u975e\u8868\u793a\u6642\u306bPaint\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u306a\u3044\u305f\u3081\u81ea\u7136\u3068\u6b62\u307e\u308b\u305f\u3081Visibility\u30a4\u30d9\u30f3\u30c8\u306f\u79fb\u690d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u3053\u308c\u3067GLUT\u3068GLForm\u306e\u3059\u308a\u5408\u308f\u305b\u306f\u5b8c\u4e86\u3067\u3059\u3002\u5f8c\u306f\u6587\u6cd5\u3092\u66f8\u304d\u66ff\u3048\u308c\u3070\u79fb\u690d\u3067\u304d\u307e\u3059\u3002\n\nfloat32\nF#\u3067\u306f\u6570\u5024\u578b\u306e\u81ea\u52d5\u30ad\u30e3\u30b9\u30c8\u306f\u884c\u308f\u308c\u306a\u3044\u305f\u3081\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30ad\u30e3\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\ngears.c\n#ifndef M_PI\n#define M_PI 3.14159265\n#endif\n\n\n\ngears.fsx\nlet M_PI = float32 Math.PI\n\n\n\u305d\u3053\u306b\u6ce8\u610f\u3059\u308c\u3070\u5f8c\u306f\u307b\u3068\u3093\u3069\u6a5f\u68b0\u7684\u306a\u66f8\u304d\u66ff\u3048\u3067\u3059\u3002\n\ngears.c\nstatic void\ngear(GLfloat inner_radius, GLfloat outer_radius, GLfloat width,\n  GLint teeth, GLfloat tooth_depth)\n{\n  \uff08\u7565\uff09\n  /* draw front face */\n  glBegin(GL_QUAD_STRIP);\n  for (i = 0; i <= teeth; i++) {\n    angle = i * 2.0 * M_PI / teeth;\n    glVertex3f(r0 * cos(angle), r0 * sin(angle), width * 0.5);\n    glVertex3f(r1 * cos(angle), r1 * sin(angle), width * 0.5);\n    glVertex3f(r0 * cos(angle), r0 * sin(angle), width * 0.5);\n    glVertex3f(r1 * cos(angle + 3 * da), r1 * sin(angle + 3 * da), width * 0.5);\n  }\n  glEnd();\n\n\n\ngears.fsx\nlet gear inner_radius outer_radius width teeth tooth_depth =\n    \uff08\u7565\uff09\n    // draw front face\n    glBegin(GL_QUAD_STRIP)\n    for i = 0 to teeth do\n        let angle = float32 i * 2.0f * M_PI / float32 teeth\n        glVertex3f(r0 * cos(angle), r0 * sin(angle), width * 0.5f)\n        glVertex3f(r1 * cos(angle), r1 * sin(angle), width * 0.5f)\n        glVertex3f(r0 * cos(angle), r0 * sin(angle), width * 0.5f)\n        glVertex3f(r1 * cos(angle + 3.f * da), r1 * sin(angle + 3.f * da), width * 0.5f)\n    glEnd()\n\n\n\n\u30ad\u30fc\u30a4\u30d9\u30f3\u30c8\n\u30ad\u30fc\u30a4\u30d9\u30f3\u30c8\u3067\u7d42\u4e86\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3044\u304d\u306a\u308a exit \u306f\u884c\u5100\u304c\u60aa\u3044\u306e\u3067\u3001GLForm\u3092\u6e21\u3057\u3066\u9589\u3058\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\ngears.c\n/* change view angle, exit upon ESC */\n/* ARGSUSED1 */\nstatic void\nkey(unsigned char k, int x, int y)\n{\n  switch (k) {\n  case 'z':\n    view_rotz += 5.0;\n    break;\n  case 'Z':\n    view_rotz -= 5.0;\n    break;\n  case 27:  /* Escape */\n    exit(0);\n    break;\n  default:\n    return;\n  }\n  glutPostRedisplay();\n}\n\n\n\u5225\u306e\u6240\u3067\u518d\u63cf\u753b\u3092\u547c\u3076\u305f\u3081 glutPostRedisplay() \u306f\u79fb\u690d\u304b\u3089\u7701\u304d\u307e\u3059\u3002\n\ngears.fsx\n// change view angle, exit upon ESC\nlet key (f:GLForm) = function\n| 'z' -> view_rotz <- view_rotz + 5.0f\n| 'Z' -> view_rotz <- view_rotz - 5.0f\n| '\\u001b' (* Escape *) -> f.Close()\n| _ -> ()\n\n\nF#\u306e\u69cb\u6587\u306f\u7e26\u306b\u9577\u304f\u306a\u3089\u306a\u3044\u306e\u3067\u3059\u3063\u304d\u308a\u3057\u3066\u3044\u307e\u3059\u3002\u5225\u306e\u4f8b\u3082\u898b\u307e\u3059\u3002\n\ngears.c\n/* change view angle */\n/* ARGSUSED1 */\nstatic void\nspecial(int k, int x, int y)\n{\n  switch (k) {\n  case GLUT_KEY_UP:\n    view_rotx += 5.0;\n    break;\n  case GLUT_KEY_DOWN:\n    view_rotx -= 5.0;\n    break;\n  case GLUT_KEY_LEFT:\n    view_roty += 5.0;\n    break;\n  case GLUT_KEY_RIGHT:\n    view_roty -= 5.0;\n    break;\n  default:\n    return;\n  }\n  glutPostRedisplay();\n}\n\n\n\ngears.fsx\n// change view angle\nlet special = function\n| Keys.Up    -> view_rotx <- view_rotx + 5.0f\n| Keys.Down  -> view_rotx <- view_rotx - 5.0f\n| Keys.Left  -> view_roty <- view_roty + 5.0f\n| Keys.Right -> view_roty <- view_roty - 5.0f\n| _ -> ()\n\n\n\n\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n\u753b\u9762\u63cf\u753b\u5f8c\u306b\u3059\u3050\u518d\u63cf\u753b\u3092\u8981\u6c42\u3059\u308b\u3053\u3068\u3067\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u3044\u307e\u3059\u3002\n\ngears.fsx\n    f.Paint .Add <| fun _ ->\n        draw()\n        idle f\n\n\n\u30aa\u30ea\u30b8\u30ca\u30eb\u306egears\u304c\u958b\u767a\u3055\u308c\u305f\u3068\u304d\u3068\u306f\u30de\u30b7\u30f3\u6027\u80fd\u304c\u7570\u306a\u308b\u305f\u3081\u3001\u5143\u306e\u56de\u8ee2\u89d2\u5ea6\u3067\u306f\u901f\u904e\u304e\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u56de\u8ee2\u89d2\u5ea6\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\ngears.c\nstatic void\nidle(void)\n{\n  angle += 2.0;\n  glutPostRedisplay();\n}\n\n\n\ngears.fsx\nlet idle (f:GLForm) =\n    angle <- angle + 0.1f  // 2.0f\n    f.Invalidate()\n\n\n\u79fb\u690d\u6642\u306b\u6ce8\u610f\u3057\u305f\u70b9\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\n\u611f\u60f3\nGLUT\u3067\u306f\u306a\u304f\u6163\u308c\u305fWindows Forms\u3092OpenGL\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u306e\u306f\u306a\u304b\u306a\u304b\u5feb\u9069\u3067\u3059\u3002\u65e2\u5b58\u306e\u975eOpenGL\u8cc7\u7523\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3082\u67d4\u8edf\u306b\u3067\u304d\u307e\u3059\u3002\u3082\u3063\u3068\u65e9\u304f\u77e5\u3063\u3066\u3044\u308c\u3070\u5fc5\u8981\u4ee5\u4e0a\u306bGDI+\u3067\u6d88\u8017\u3057\u306a\u304b\u3063\u305f\u306e\u306b\u3068\u3082\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u307e\u3042\u4eca\u304b\u3089\u3067\u3082\u9045\u3059\u304e\u308b\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u305d\u306e\u4ed6\n\u5b9a\u756a\u306e\u89e3\u8aac\u66f8Red Book\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u3044\u304f\u3064\u304b\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n\nF#\u3067OpenGL\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u30c7\u30e2\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n* [OpenGL - Mesademos](https://www.opengl.org/archives/resources/code/samples/glut_examples/mesademos/mesademos.html) ([gears.c](https://www.opengl.org/archives/resources/code/samples/glut_examples/mesademos/gears.c))\n\n![gears.gif](https://qiita-image-store.s3.amazonaws.com/0/32057/7ab38dec-3bc5-f744-b28a-a49c8612255d.gif)\n\n\u30b7\u30ea\u30fc\u30ba\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n* [F#\u3067OpenGL](http://qiita.com/7shi/items/029343420518b6884d7c)\n* F#\u306bOpenGL\u306e\u6b6f\u8eca\u30c7\u30e2\u3092\u79fb\u690d \u2190 \u3053\u306e\u8a18\u4e8b\n* [OpenGL\u3067\u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0](http://qiita.com/7shi/items/b02f2e45b49c0314fd12)\n\n\u95a2\u9023\u3059\u308b\u30b3\u30fc\u30c9\u3092\u307e\u3068\u3081\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u3059\u3002\n\n* https://bitbucket.org/7shi/fsgl\n\n<font color=\"red\">**\u3010\u6ce8\u610f\u3011**</font>\u3053\u306e\u8a18\u4e8b\u306e\u30b5\u30f3\u30d7\u30eb\u306f[\u30ec\u30ac\u30b7\u30fc\u306aAPI](https://www.khronos.org/opengl/wiki/Legacy_OpenGL)\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u65b0\u3057\u3044API\u3078\u306e\u79fb\u884c\u306f\u6a5f\u4f1a\u3092\u6539\u3081\u308b\u3053\u3068\u306b\u3057\u3066\u3001\u4eca\u56de\u306f\u30ec\u30ac\u30b7\u30fc\u306a\u307e\u307e\u9032\u3081\u307e\u3059\u3002\n\n# \u79fb\u690d\n\n\u524d\u56de\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305fOpenGL\u30b5\u30dd\u30fc\u30c8\u306b\u8db3\u308a\u306a\u3044\u6a5f\u80fd\u3092\u88dc\u3044\u306a\u304c\u3089\u79fb\u690d\u3092\u9032\u3081\u307e\u3057\u305f\u3002\n\n\u5b8c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n* [GL7.fsx](https://bitbucket.org/7shi/fsgl/src/tip/GL7.fsx)\n* [GL7.GL.fsx](https://bitbucket.org/7shi/fsgl/src/tip/GL7.GL.fsx)\n* [gears.fsx](https://bitbucket.org/7shi/fsgl/src/tip/gears.fsx)\n\n\u203b GL7 \u3068\u3044\u3046\u540d\u524d\u306f\u9069\u5f53\u3067\u30017\u306f\u4e03\u8a8c\u306e\u4e03\u3067\u3059\u3002\n\n## \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\n\n\u5143\u306eC\u8a00\u8a9e\u306e `main()` \u304b\u3089\u521d\u671f\u5316\u90e8\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\n\n```c:gears.c\nmain(int argc, char *argv[])\n{\n  \uff08\u7565\uff09\n  glutCreateWindow(\"Gears\");\n  init();\n```\n\nGLUT\u3067\u306f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c1\u3064\u3057\u304b\u306a\u3044\u305f\u3081\u5207\u308a\u66ff\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u304c\u3001GLForm\u3067\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5207\u308a\u66ff\u3048\u308b\u65b9\u91dd\u3067\u3059\u3002\n\n`init()` \u3067\u306fOpenGL\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```c:gears.c\nstatic void\ninit(void)\n{\n  \uff08\u7565\uff09\n  glLightfv(GL_LIGHT0, GL_POSITION, pos);\n  glEnable(GL_CULL_FACE);\n  glEnable(GL_LIGHTING);\n  glEnable(GL_LIGHT0);\n  glEnable(GL_DEPTH_TEST);\n```\n\nGLForm\u3067\u306fPaint\u3060\u3051\u7279\u5225\u6271\u3044\u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u5207\u308a\u66ff\u3048\u3066\u3044\u307e\u3059\u3002\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30cf\u30f3\u30c9\u30e9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u3066\u306f\u304d\u308a\u304c\u306a\u3044\u305f\u3081\u3001Paint\u4ee5\u5916\u3067\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u5207\u308a\u66ff\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u30b9\u30b3\u30fc\u30d7\u30a2\u30a6\u30c8\u6642\u306b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u624b\u653e\u3059\u305f\u3081\u3001\u5f8c\u7247\u4ed8\u3051\u7528\u306e\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u203b [RAII](https://ja.wikipedia.org/wiki/RAII)\u306f\u624b\u6cd5\u306e\u7565\u8a9e\u3067\u3059\u3002\n\n```fsharp\ntype RAII(dtor) =\n    interface IDisposable with override x.Dispose() = dtor()\n```\n\n`RAII`\u3092\u4f7f\u3063\u3066\u30b9\u30b3\u30fc\u30d7\u5185\u3060\u3051\u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```fsharp\n    member x.MakeCurrent() =\n        ignore <| wglMakeCurrent(hDC, hGLRC)\n        new RAII(fun () -> ignore <| wglMakeCurrent(0n, 0n))\n```\n\nF#\u306e\u521d\u671f\u5316\u90e8\u3067`MakeCurrent`\u3092\u4f7f\u3044\u307e\u3059\u3002GLUT\u3067\u306f\u8d77\u52d5\u76f4\u5f8c\u306bReshape\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3059\u304cWindows Forms\u3067\u306f\u767a\u751f\u3057\u306a\u3044\u305f\u3081\u3001\u660e\u793a\u7684\u306b\u30cf\u30f3\u30c9\u30e9\u3092\u547c\u3073\u307e\u3059\u3002\n\n```fsharp:gears.fsx\n    let f = new GLForm(Text = \"Gears\")\n    f.Load.Add <| fun _ ->\n        use raii = f.MakeCurrent()\n        init()\n        reshape f\n```\n\n## \u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n\n`main()` \u3067GUI\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```c:gears.c\nmain(int argc, char *argv[])\n{\n  \uff08\u7565\uff09\n  glutDisplayFunc(draw);\n  glutReshapeFunc(reshape);\n  glutKeyboardFunc(key);\n  glutSpecialFunc(special);\n  glutVisibilityFunc(visible);\n```\n\n`reshape()` \u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30ea\u30b5\u30a4\u30ba\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3082OpenGL\u306e\u95a2\u6570\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n```c:gears.c\n/* new window size or exposure */\nstatic void\nreshape(int width, int height)\n{\n  GLfloat h = (GLfloat) height / (GLfloat) width;\n\n  glViewport(0, 0, (GLint) width, (GLint) height);\n  glMatrixMode(GL_PROJECTION);\n  glLoadIdentity();\n  glFrustum(-1.0, 1.0, -h, h, 5.0, 60.0);\n  glMatrixMode(GL_MODELVIEW);\n  glLoadIdentity();\n  glTranslatef(0.0, 0.0, -40.0);\n}\n```\n\n\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066`MakeCurrent`\u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002GLUT\u3068\u306f\u30cf\u30f3\u30c9\u30e9\u306e\u5f15\u6570\u304c\u7570\u306a\u308b\u305f\u3081\u3001\u5f15\u6570\u3092\u8abf\u6574\u3057\u3066\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u307e\u3059\u3002\n\n```fsharp:gears.fsx\n    f.Paint.Add <| fun _ ->\n        draw f\n        idle f\n    f.Resize.Add <| fun _ ->\n        use raii = f.MakeCurrent()\n        reshape f\n    f.KeyPress.Add <| fun e ->\n        key f e.KeyChar\n    f.KeyDown.Add <| fun e ->\n        special e.KeyCode\n```\n\nGLUT\u3067\u306fVisibility\u30a4\u30d9\u30f3\u30c8\u3067\u975e\u8868\u793a\u6642\u306b\u518d\u63cf\u753b\u8981\u6c42\u3092\u6b62\u3081\u3066\u3044\u307e\u3059\u3002Windows Forms\u3067\u306f\u975e\u8868\u793a\u6642\u306bPaint\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u306a\u3044\u305f\u3081\u81ea\u7136\u3068\u6b62\u307e\u308b\u305f\u3081Visibility\u30a4\u30d9\u30f3\u30c8\u306f\u79fb\u690d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u3053\u308c\u3067GLUT\u3068GLForm\u306e\u3059\u308a\u5408\u308f\u305b\u306f\u5b8c\u4e86\u3067\u3059\u3002\u5f8c\u306f\u6587\u6cd5\u3092\u66f8\u304d\u66ff\u3048\u308c\u3070\u79fb\u690d\u3067\u304d\u307e\u3059\u3002\n\n## float32\n\nF#\u3067\u306f\u6570\u5024\u578b\u306e\u81ea\u52d5\u30ad\u30e3\u30b9\u30c8\u306f\u884c\u308f\u308c\u306a\u3044\u305f\u3081\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30ad\u30e3\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```c:gears.c\n#ifndef M_PI\n#define M_PI 3.14159265\n#endif\n```\n\n```fsharp:gears.fsx\nlet M_PI = float32 Math.PI\n```\n\n\u305d\u3053\u306b\u6ce8\u610f\u3059\u308c\u3070\u5f8c\u306f\u307b\u3068\u3093\u3069\u6a5f\u68b0\u7684\u306a\u66f8\u304d\u66ff\u3048\u3067\u3059\u3002\n\n```c:gears.c\nstatic void\ngear(GLfloat inner_radius, GLfloat outer_radius, GLfloat width,\n  GLint teeth, GLfloat tooth_depth)\n{\n  \uff08\u7565\uff09\n  /* draw front face */\n  glBegin(GL_QUAD_STRIP);\n  for (i = 0; i <= teeth; i++) {\n    angle = i * 2.0 * M_PI / teeth;\n    glVertex3f(r0 * cos(angle), r0 * sin(angle), width * 0.5);\n    glVertex3f(r1 * cos(angle), r1 * sin(angle), width * 0.5);\n    glVertex3f(r0 * cos(angle), r0 * sin(angle), width * 0.5);\n    glVertex3f(r1 * cos(angle + 3 * da), r1 * sin(angle + 3 * da), width * 0.5);\n  }\n  glEnd();\n```\n\n```fsharp:gears.fsx\nlet gear inner_radius outer_radius width teeth tooth_depth =\n    \uff08\u7565\uff09\n    // draw front face\n    glBegin(GL_QUAD_STRIP)\n    for i = 0 to teeth do\n        let angle = float32 i * 2.0f * M_PI / float32 teeth\n        glVertex3f(r0 * cos(angle), r0 * sin(angle), width * 0.5f)\n        glVertex3f(r1 * cos(angle), r1 * sin(angle), width * 0.5f)\n        glVertex3f(r0 * cos(angle), r0 * sin(angle), width * 0.5f)\n        glVertex3f(r1 * cos(angle + 3.f * da), r1 * sin(angle + 3.f * da), width * 0.5f)\n    glEnd()\n```\n\n## \u30ad\u30fc\u30a4\u30d9\u30f3\u30c8\n\n\u30ad\u30fc\u30a4\u30d9\u30f3\u30c8\u3067\u7d42\u4e86\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3044\u304d\u306a\u308a `exit` \u306f\u884c\u5100\u304c\u60aa\u3044\u306e\u3067\u3001GLForm\u3092\u6e21\u3057\u3066\u9589\u3058\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```c:gears.c\n/* change view angle, exit upon ESC */\n/* ARGSUSED1 */\nstatic void\nkey(unsigned char k, int x, int y)\n{\n  switch (k) {\n  case 'z':\n    view_rotz += 5.0;\n    break;\n  case 'Z':\n    view_rotz -= 5.0;\n    break;\n  case 27:  /* Escape */\n    exit(0);\n    break;\n  default:\n    return;\n  }\n  glutPostRedisplay();\n}\n```\n\n\u5225\u306e\u6240\u3067\u518d\u63cf\u753b\u3092\u547c\u3076\u305f\u3081 `glutPostRedisplay()` \u306f\u79fb\u690d\u304b\u3089\u7701\u304d\u307e\u3059\u3002\n\n```fsharp:gears.fsx\n// change view angle, exit upon ESC\nlet key (f:GLForm) = function\n| 'z' -> view_rotz <- view_rotz + 5.0f\n| 'Z' -> view_rotz <- view_rotz - 5.0f\n| '\\u001b' (* Escape *) -> f.Close()\n| _ -> ()\n```\n\nF#\u306e\u69cb\u6587\u306f\u7e26\u306b\u9577\u304f\u306a\u3089\u306a\u3044\u306e\u3067\u3059\u3063\u304d\u308a\u3057\u3066\u3044\u307e\u3059\u3002\u5225\u306e\u4f8b\u3082\u898b\u307e\u3059\u3002\n\n```c:gears.c\n/* change view angle */\n/* ARGSUSED1 */\nstatic void\nspecial(int k, int x, int y)\n{\n  switch (k) {\n  case GLUT_KEY_UP:\n    view_rotx += 5.0;\n    break;\n  case GLUT_KEY_DOWN:\n    view_rotx -= 5.0;\n    break;\n  case GLUT_KEY_LEFT:\n    view_roty += 5.0;\n    break;\n  case GLUT_KEY_RIGHT:\n    view_roty -= 5.0;\n    break;\n  default:\n    return;\n  }\n  glutPostRedisplay();\n}\n```\n\n```fsharp:gears.fsx\n// change view angle\nlet special = function\n| Keys.Up    -> view_rotx <- view_rotx + 5.0f\n| Keys.Down  -> view_rotx <- view_rotx - 5.0f\n| Keys.Left  -> view_roty <- view_roty + 5.0f\n| Keys.Right -> view_roty <- view_roty - 5.0f\n| _ -> ()\n```\n\n## \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n\n\u753b\u9762\u63cf\u753b\u5f8c\u306b\u3059\u3050\u518d\u63cf\u753b\u3092\u8981\u6c42\u3059\u308b\u3053\u3068\u3067\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u3044\u307e\u3059\u3002\n\n```fsharp:gears.fsx\n    f.Paint .Add <| fun _ ->\n        draw()\n        idle f\n```\n\n\u30aa\u30ea\u30b8\u30ca\u30eb\u306egears\u304c\u958b\u767a\u3055\u308c\u305f\u3068\u304d\u3068\u306f\u30de\u30b7\u30f3\u6027\u80fd\u304c\u7570\u306a\u308b\u305f\u3081\u3001\u5143\u306e\u56de\u8ee2\u89d2\u5ea6\u3067\u306f\u901f\u904e\u304e\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u56de\u8ee2\u89d2\u5ea6\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```c:gears.c\nstatic void\nidle(void)\n{\n  angle += 2.0;\n  glutPostRedisplay();\n}\n```\n\n```fsharp:gears.fsx\nlet idle (f:GLForm) =\n    angle <- angle + 0.1f  // 2.0f\n    f.Invalidate()\n```\n\n\u79fb\u690d\u6642\u306b\u6ce8\u610f\u3057\u305f\u70b9\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\n# \u611f\u60f3\n\nGLUT\u3067\u306f\u306a\u304f\u6163\u308c\u305fWindows Forms\u3092OpenGL\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u306e\u306f\u306a\u304b\u306a\u304b\u5feb\u9069\u3067\u3059\u3002\u65e2\u5b58\u306e\u975eOpenGL\u8cc7\u7523\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3082\u67d4\u8edf\u306b\u3067\u304d\u307e\u3059\u3002\u3082\u3063\u3068\u65e9\u304f\u77e5\u3063\u3066\u3044\u308c\u3070\u5fc5\u8981\u4ee5\u4e0a\u306bGDI+\u3067\u6d88\u8017\u3057\u306a\u304b\u3063\u305f\u306e\u306b\u3068\u3082\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u307e\u3042\u4eca\u304b\u3089\u3067\u3082\u9045\u3059\u304e\u308b\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n# \u305d\u306e\u4ed6\n\n\u5b9a\u756a\u306e\u89e3\u8aac\u66f8[Red Book\u306e\u30b5\u30f3\u30d7\u30eb](https://www.opengl.org/archives/resources/code/samples/redbook/)\u3092\u3044\u304f\u3064\u304b\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u30922\u3064\u79fb\u690d\u3057\u307e\u3057\u305f\u3002 <a href=\"https://t.co/VYySVpnzMn\">https://t.co/VYySVpnzMn</a> <a href=\"https://t.co/9NKIu9qhPw\">pic.twitter.com/9NKIu9qhPw</a></p>&mdash; \u4e03\u8a8c (@7shi) <a href=\"https://twitter.com/7shi/status/823481161468940288\">2017\u5e741\u670823\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">FreeGLUT\u304b\u3089\u5fc5\u8981\u306a\u95a2\u6570\u3060\u3051\u79fb\u690d\u3057\u3066\u3001\u7403\u3084\u30c8\u30fc\u30e9\u30b9\u3092\u8868\u793a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u79fb\u690d\u3057\u305f\u3002GLUT\u3042\u308a\u304d\u3060\u3068\u6c17\u4ed8\u304b\u306a\u304b\u3063\u305f\u3051\u3069\u3001\u3053\u3093\u306a\u306b\u624b\u9593\u304c\u639b\u304b\u308b\u3093\u3060\u2026 <a href=\"https://t.co/n3AnhQGvnG\">https://t.co/n3AnhQGvnG</a> <a href=\"https://t.co/DXHefpWnX6\">pic.twitter.com/DXHefpWnX6</a></p>&mdash; \u4e03\u8a8c (@7shi) <a href=\"https://twitter.com/7shi/status/824933436137709568\">2017\u5e741\u670827\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">\u79fb\u690d\u3057\u3066\u307f\u305f\u3051\u3069\u3061\u3087\u3063\u3068\u30b7\u30f3\u30d7\u30eb\u904e\u304e\u308b\uff08\u6559\u6750\u76ee\u7684\u3067\u53d6\u3063\u639b\u304b\u308a\u3092\u63d0\u4f9b\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u3053\u308c\u3067\u826f\u3044\u306e\u3060\u308d\u3046\u3051\u3069\uff09\u3002\u62e1\u5927\u3057\u3066\u5857\u308a\u3064\u3076\u3057\u3092\u3084\u3081\u305f\u3089\u3001\u30ef\u30a4\u30e4\u30fc\u30d5\u30ec\u30fc\u30e0\u306e\u30c8\u30fc\u30e9\u30b9\u304c\u73fe\u308c\u305f\u3002 <a href=\"https://t.co/5H2RjsfZ0r\">https://t.co/5H2RjsfZ0r</a> <a href=\"https://t.co/Pn6cCXWvaq\">pic.twitter.com/Pn6cCXWvaq</a></p>&mdash; \u4e03\u8a8c (@7shi) <a href=\"https://twitter.com/7shi/status/825905507927941124\">2017\u5e741\u670830\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n", "tags": ["F#", "C\u8a00\u8a9e", "OpenGL"]}