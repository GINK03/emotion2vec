{"context": " More than 1 year has passed since last update.\nfast.scm\n#!/usr/local/bin/gosh\n\n(define (solve? num ls)\n  (let loop ((ls ls)(n 1))\n    (cond\n      ((null? ls)#t)\n      ((= (abs (- num (car ls))) n)\n       #f)\n      (else (loop (cdr ls)(+ n 1))))))\n\n(define (check? lst)\n  (let loop ((lst lst))\n    (cond\n      ((null? (cdr lst))#t)\n      ((solve? (car lst) (cdr lst))\n       (loop (cdr lst)))\n      (else #f))))\n\n(define (queen lst)\n  (let loop ((lst lst)(result '()))\n    (if (null? lst)\n      (print (reverse result))\n      (for-each (lambda(x)\n        (if (check? (reverse (cons x result)))\n                  (loop (delete x lst) (cons x result)))) lst))))\n\n\n\n;(time (queen '(0 1 2 3 4 5 6 7)))\n; real   0.008\n; user   0.010\n; sys    0.000\n\n```scheme:fast.scm\n#!/usr/local/bin/gosh\n\n(define (solve? num ls)\n  (let loop ((ls ls)(n 1))\n\t(cond\n\t  ((null? ls)#t)\n\t  ((= (abs (- num (car ls))) n)\n\t   #f)\n\t  (else (loop (cdr ls)(+ n 1))))))\n\n(define (check? lst)\n  (let loop ((lst lst))\n\t(cond\n\t  ((null? (cdr lst))#t)\n\t  ((solve? (car lst) (cdr lst))\n\t   (loop (cdr lst)))\n\t  (else #f))))\n\n(define (queen lst)\n  (let loop ((lst lst)(result '()))\n\t(if (null? lst)\n\t  (print (reverse result))\n\t  (for-each (lambda(x)\n\t\t(if (check? (reverse (cons x result)))\n\t\t          (loop (delete x lst) (cons x result)))) lst))))\n```\n\n>;(time (queen '(0 1 2 3 4 5 6 7)))\n>; real   0.008\n>; user   0.010\n>; sys    0.000", "tags": ["Scheme"]}