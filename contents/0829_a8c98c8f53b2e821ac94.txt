{"context": " More than 1 year has passed since last update.\u30bf\u30a4\u30c8\u30eb\u3069\u304a\u308a\u306e\u3053\u3068\u3092\u3084\u3063\u305f\u969b\u306e\u5b9f\u88c5\u6642\u30e1\u30e2\u3002\n\nCanvas\u304b\u3089\u753b\u50cf\u3092\u53d6\u5f97\n2\u901a\u308a\u306e\u65b9\u6cd5\u304c\u898b\u3064\u304b\u3063\u305f\u3002\n\nBase64\u3078\u306e\u5909\u63db\nBlob\u3078\u306e\u5909\u63db\n\n\nBase64\u3078\u306e\u5909\u63db\ncanvas.toDataURL()\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u53d6\u5f97\u53ef\u80fd\u3067\u3042\u308b\u304c\u3001\n\u753b\u50cf\u30b5\u30a4\u30ba\u306b\u6bd4\u4f8b\u3057\u305f\u5de8\u5927\u306a\u6587\u5b57\u5217\u3068\u306a\u308a\u3001\u5909\u63db\u306b\u3088\u3063\u3066\u5143\u30b5\u30a4\u30ba\u3088\u308a33%\u30c7\u30fc\u30bf\u91cf\u304c\u5897\u3048\u308b\u3002\nvar base64= this.canvas.toDataURL('image/png');\n\n\u53d6\u5f97\u3057\u305fBase64\u3092<image>\u306esrc\u306b\u6307\u5b9a\u3059\u308c\u3070\u753b\u50cf\u8868\u793a\u3055\u308c\u3001\n<a>\u306ehref\u306b\u6307\u5b9a\u3059\u308c\u3070\u30ea\u30f3\u30af\u30af\u30ea\u30c3\u30af\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u3066\u3053\u308c\u306f\u3053\u308c\u3067\u4fbf\u5229\u3002\n\nBlob\u3078\u306e\u5909\u63db\ncanvas.toBlob()\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u53d6\u5f97\u53ef\u80fd\u3002\nBlob\u5f62\u5f0f\u3067\u8868\u73fe\u3059\u308c\u3070\u3001createObjectURL(blob)\u306b\u3088\u308aURL\u53c2\u7167\u304c\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u3001\n\u753b\u50cf\u30b5\u30a4\u30ba\u306b\u4f9d\u5b58\u305b\u305a\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3092\u6291\u3048\u3089\u308c\u308b\u3089\u3057\u3044\u3002\uff08\u672a\u78ba\u8a8d)\n\u3053\u308c\u306f\u4fbf\u5229\u3068\u601d\u3044\u304d\u3084canvas.toBlob()\u306fFirefox\u3067\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u304a\u308a\u3001\nFirefox\u4ee5\u5916\u3067\u306fBase64\u7d4c\u7531\u3067Blob\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3068\u306a\u3089\u3056\u308b\u5f97\u306a\u3044\u3002\ntoBlob: function() {\n    var base64 = this.canvas.toDataURL('image/png');\n    // Base64\u304b\u3089\u30d0\u30a4\u30ca\u30ea\u3078\u5909\u63db\n    var bin = atob(base64.replace(/^.*,/, ''));\n    var buffer = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; i++) {\n        buffer[i] = bin.charCodeAt(i);\n    }\n    // Blob\u3092\u4f5c\u6210\n    var blob = new Blob([buffer.buffer], {\n        type: type\n    });\n    return blob;\n}\n\n\u3061\u306a\u307f\u306b\u30b5\u30a4\u30ba\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001\u78ba\u304b\u306bBase64\u306f33%\u5897\u91cf\u3057\u3066\u3044\u305f\u3002\n\n\n\ntype\nsize\n\n\n\n\nbase64.length\n132506\n\n\nblob.size\n99361\n\n\n\n\nServer\u3078\u9001\u4fe1\u3059\u308b\n\u30af\u30e9\u30a4\u30f3\u30c8\u5074\u306f Sencha Touch 2.3 \u3092\u4f7f\u7528\u3002\n\u3068\u3044\u3046\u306e\u30822.3\u304b\u3089 XMLHTTPRequest Level 2(XHR2)\u3092\u5b8c\u5168\u306b\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u306e\u3067\u3001\n\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3082\u9001\u4fe1\u3067\u304d\u308b\u306f\u305a\u306a\u306e\u3067\u305d\u306e\u8a66\u9a13\u3092\u517c\u306d\u3066\u3002\n\u30b5\u30fc\u30d0\u306f\u52c9\u5f37\u3082\u517c\u306d\u3066Sinatra\u3092\u5229\u7528\u3002\n\nBase64\u306e\u307e\u307e\u9001\u4fe1\u3059\u308b\nBinary\u306b\u5909\u63db\u3057\u3066\u9001\u4fe1\u3059\u308b\nBlob\u306b\u5909\u63db\u3057\u3066\u9001\u4fe1\u3059\u308b\n\n\n1. Base64\u7248\n\nBase64\u306f\u5148\u982d\u306eminetype(data:image/png;base64,\u306e\u90e8\u5206\uff09\u306f\u4e0d\u8981\u306a\u305f\u3081\u524a\u9664\n\u30b5\u30fc\u30d0\u5074\u306f\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3066\u3084\u308c\u3070\u753b\u50cf\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u308b\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\nvar base64 = this.canvas.toDataURL('image/png');\nvar request = {\n    url: 'http://localhost:4567/base64',\n    method: 'POST',\n    params: {\n        image: base64.replace(/^.*,/, '')\n    },\n    success: function (response) {\n        console.log(response.responseText);\n    }\n};\nExt.Ajax.request(request);\n\n\n\u30b5\u30fc\u30d0\u5074\nrequire 'base64'\n\npost '/base64' do\n    File.open('imageBase64.png', 'wb') do|f|\n        f.write(Base64.decode64(params['image']))\n    end\n    \"OK\"\nend\n\n\n2. Binary\u7248\n\n\nxhr2: true\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\n\nrawData\u3068\u3057\u3066\u6e21\u3059(data\u3060\u3068\u6587\u5b57\u5217\u3068\u8a8d\u8b58\u3055\u308c\u308b)\n\u30b5\u30fc\u30d0\u5074\u306fbody\u3092\u305d\u306e\u307e\u307e\u66f8\u304d\u51fa\u3057\u3066\u3084\u308b\u3068\u753b\u50cf\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u308b\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\ntoBinary: function(canvas) {\n    var base64 = canvas.toDataURL('image/png'),\n        bin = atob(base64.replace(/^.*,/, '')),\n        buffer = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; i++) {\n        buffer[i] = bin.charCodeAt(i);\n    }\n    return buffer;\n}\n\n// Binary\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\nvar buf = toBinary();\nvar request = {\n    url: 'http://localhost:4567/binary',\n    method: 'POST',\n    xhr2: true,\n    rawData: buf.buffer,\n    success: function (response) {\n        console.log(response.responseText);\n    }\n};\nExt.Ajax.request(request);\n\n\n\u30b5\u30fc\u30d0\u5074\npost '/binary' do\n    File.open('imageBin.png', 'wb') do|f|\n        f.write(request.body.read)\n    end\n    \"OK\"\nend\n\n\n3. Blob\u7248\n\nBlob\u306e\u5834\u5408\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u6271\u3048\u308b\u306e\u3067\u3001FormData\u5f62\u5f0f\u3067\u9001\u4fe1\u3059\u308b\n\nrawData\u3068\u3057\u3066\u6e21\u3059\n\u30b5\u30fc\u30d0\u5074\u306f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u51fa\u3059\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\nvar buf = toBinary();\n// Blob\u3092\u4f5c\u6210\nvar blob = new Blob([buf.buffer], {\n    type: 'image/png'\n});\n\n// FormData\u3068\u3057\u3066\u9001\u4fe1\nvar fd = new FormData();\nfd.append(\"image\", blob);\nvar request = {\n    url: 'http://localhost:4567/blob',\n    method: 'POST',\n    xhr2: true,\n    rawData: fd,\n    success: function (response) {\n        console.log(response.responseText);\n    }\n};\nExt.Ajax.request(request);\n\n\n\u30b5\u30fc\u30d0\u5074\npost '/blob' do\n    img = params[:image]\n    File.open('imageBlob.png', 'wb') do|f|\n        f.write(img[:tempfile].read)\n    end\n    \"OK\"\nend\n\n\n\u53c2\u8003\n\nCanvas Images and Rails\nXMLHttpRequest2 \u306b\u95a2\u3059\u308b\u65b0\u3057\u3044\u30d2\u30f3\u30c8\nXHR2 Uploads and Downloads - Touch 2.3.0 - Sencha Docs\n\n\u30bf\u30a4\u30c8\u30eb\u3069\u304a\u308a\u306e\u3053\u3068\u3092\u3084\u3063\u305f\u969b\u306e\u5b9f\u88c5\u6642\u30e1\u30e2\u3002\n\n# Canvas\u304b\u3089\u753b\u50cf\u3092\u53d6\u5f97\n\n2\u901a\u308a\u306e\u65b9\u6cd5\u304c\u898b\u3064\u304b\u3063\u305f\u3002\n\n1. Base64\u3078\u306e\u5909\u63db\n1. Blob\u3078\u306e\u5909\u63db\n\n## Base64\u3078\u306e\u5909\u63db\n\n`canvas.toDataURL()`\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u53d6\u5f97\u53ef\u80fd\u3067\u3042\u308b\u304c\u3001\n\u753b\u50cf\u30b5\u30a4\u30ba\u306b\u6bd4\u4f8b\u3057\u305f\u5de8\u5927\u306a\u6587\u5b57\u5217\u3068\u306a\u308a\u3001\u5909\u63db\u306b\u3088\u3063\u3066\u5143\u30b5\u30a4\u30ba\u3088\u308a33%\u30c7\u30fc\u30bf\u91cf\u304c\u5897\u3048\u308b\u3002\n\n```js\nvar base64= this.canvas.toDataURL('image/png');\n```\n\n\u53d6\u5f97\u3057\u305fBase64\u3092`<image>`\u306e`src`\u306b\u6307\u5b9a\u3059\u308c\u3070\u753b\u50cf\u8868\u793a\u3055\u308c\u3001\n`<a>`\u306e`href`\u306b\u6307\u5b9a\u3059\u308c\u3070\u30ea\u30f3\u30af\u30af\u30ea\u30c3\u30af\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u3066\u3053\u308c\u306f\u3053\u308c\u3067\u4fbf\u5229\u3002\n\n## Blob\u3078\u306e\u5909\u63db\n\n`canvas.toBlob()`\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u53d6\u5f97\u53ef\u80fd\u3002\nBlob\u5f62\u5f0f\u3067\u8868\u73fe\u3059\u308c\u3070\u3001`createObjectURL(blob)`\u306b\u3088\u308aURL\u53c2\u7167\u304c\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u3001\n\u753b\u50cf\u30b5\u30a4\u30ba\u306b\u4f9d\u5b58\u305b\u305a\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3092\u6291\u3048\u3089\u308c\u308b\u3089\u3057\u3044\u3002\uff08\u672a\u78ba\u8a8d)\n\n\u3053\u308c\u306f\u4fbf\u5229\u3068\u601d\u3044\u304d\u3084`canvas.toBlob()`\u306fFirefox\u3067\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u304a\u308a\u3001\nFirefox\u4ee5\u5916\u3067\u306fBase64\u7d4c\u7531\u3067Blob\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3068\u306a\u3089\u3056\u308b\u5f97\u306a\u3044\u3002\n\n```js\ntoBlob: function() {\n    var base64 = this.canvas.toDataURL('image/png');\n    // Base64\u304b\u3089\u30d0\u30a4\u30ca\u30ea\u3078\u5909\u63db\n    var bin = atob(base64.replace(/^.*,/, ''));\n    var buffer = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; i++) {\n        buffer[i] = bin.charCodeAt(i);\n    }\n    // Blob\u3092\u4f5c\u6210\n    var blob = new Blob([buffer.buffer], {\n        type: type\n    });\n    return blob;\n}\n```\n\n\u3061\u306a\u307f\u306b\u30b5\u30a4\u30ba\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001\u78ba\u304b\u306bBase64\u306f33%\u5897\u91cf\u3057\u3066\u3044\u305f\u3002\n\ntype | size\n-----|-----:\nbase64.length | 132506\nblob.size | 99361\n\n# Server\u3078\u9001\u4fe1\u3059\u308b\n\n\u30af\u30e9\u30a4\u30f3\u30c8\u5074\u306f Sencha Touch 2.3 \u3092\u4f7f\u7528\u3002\n\u3068\u3044\u3046\u306e\u30822.3\u304b\u3089 XMLHTTPRequest Level 2(XHR2)\u3092\u5b8c\u5168\u306b\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u306e\u3067\u3001\n\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3082\u9001\u4fe1\u3067\u304d\u308b\u306f\u305a\u306a\u306e\u3067\u305d\u306e\u8a66\u9a13\u3092\u517c\u306d\u3066\u3002\n\n\u30b5\u30fc\u30d0\u306f\u52c9\u5f37\u3082\u517c\u306d\u3066`Sinatra`\u3092\u5229\u7528\u3002\n\n1. Base64\u306e\u307e\u307e\u9001\u4fe1\u3059\u308b\n2. Binary\u306b\u5909\u63db\u3057\u3066\u9001\u4fe1\u3059\u308b\n3. Blob\u306b\u5909\u63db\u3057\u3066\u9001\u4fe1\u3059\u308b\n\n## 1. Base64\u7248\n\n* Base64\u306f\u5148\u982d\u306eminetype(`data:image/png;base64,`\u306e\u90e8\u5206\uff09\u306f\u4e0d\u8981\u306a\u305f\u3081\u524a\u9664\n* \u30b5\u30fc\u30d0\u5074\u306f\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3066\u3084\u308c\u3070\u753b\u50cf\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u308b\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\n\n```js\nvar base64 = this.canvas.toDataURL('image/png');\nvar request = {\n    url: 'http://localhost:4567/base64',\n    method: 'POST',\n    params: {\n        image: base64.replace(/^.*,/, '')\n    },\n    success: function (response) {\n        console.log(response.responseText);\n    }\n};\nExt.Ajax.request(request);\n```\n\n### \u30b5\u30fc\u30d0\u5074\n\n```rb\nrequire 'base64'\n\npost '/base64' do\n    File.open('imageBase64.png', 'wb') do|f|\n        f.write(Base64.decode64(params['image']))\n    end\n    \"OK\"\nend\n```\n\n## 2. Binary\u7248\n\n* `xhr2: true`\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\n* `rawData`\u3068\u3057\u3066\u6e21\u3059(data\u3060\u3068\u6587\u5b57\u5217\u3068\u8a8d\u8b58\u3055\u308c\u308b)\n* \u30b5\u30fc\u30d0\u5074\u306fbody\u3092\u305d\u306e\u307e\u307e\u66f8\u304d\u51fa\u3057\u3066\u3084\u308b\u3068\u753b\u50cf\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u308b\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\n\n```js\ntoBinary: function(canvas) {\n    var base64 = canvas.toDataURL('image/png'),\n        bin = atob(base64.replace(/^.*,/, '')),\n        buffer = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; i++) {\n        buffer[i] = bin.charCodeAt(i);\n    }\n    return buffer;\n}\n\n// Binary\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\nvar buf = toBinary();\nvar request = {\n    url: 'http://localhost:4567/binary',\n    method: 'POST',\n    xhr2: true,\n    rawData: buf.buffer,\n    success: function (response) {\n        console.log(response.responseText);\n    }\n};\nExt.Ajax.request(request);\n```\n\n### \u30b5\u30fc\u30d0\u5074\n\n```rb\npost '/binary' do\n    File.open('imageBin.png', 'wb') do|f|\n        f.write(request.body.read)\n    end\n    \"OK\"\nend\n```\n\n## 3. Blob\u7248\n\n* Blob\u306e\u5834\u5408\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u6271\u3048\u308b\u306e\u3067\u3001FormData\u5f62\u5f0f\u3067\u9001\u4fe1\u3059\u308b\n* `rawData`\u3068\u3057\u3066\u6e21\u3059\n* \u30b5\u30fc\u30d0\u5074\u306f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u51fa\u3059\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\n\n```js\nvar buf = toBinary();\n// Blob\u3092\u4f5c\u6210\nvar blob = new Blob([buf.buffer], {\n    type: 'image/png'\n});\n\n// FormData\u3068\u3057\u3066\u9001\u4fe1\nvar fd = new FormData();\nfd.append(\"image\", blob);\nvar request = {\n    url: 'http://localhost:4567/blob',\n    method: 'POST',\n    xhr2: true,\n    rawData: fd,\n    success: function (response) {\n        console.log(response.responseText);\n    }\n};\nExt.Ajax.request(request);\n```\n\n#### \u30b5\u30fc\u30d0\u5074\n\n```rb\npost '/blob' do\n    img = params[:image]\n    File.open('imageBlob.png', 'wb') do|f|\n        f.write(img[:tempfile].read)\n    end\n    \"OK\"\nend\n```\n\n# \u53c2\u8003\n* [Canvas Images and Rails](http://rohitrox.github.io/2013/07/19/canvas-images-and-rails/)\n* [XMLHttpRequest2 \u306b\u95a2\u3059\u308b\u65b0\u3057\u3044\u30d2\u30f3\u30c8](http://www.html5rocks.com/ja/tutorials/file/xhr2/)\n* [XHR2 Uploads and Downloads - Touch 2.3.0 - Sencha Docs](http://docs.sencha.com/touch/2.3.0/#!/guide/xhr2_guide)\n", "tags": ["SenchaTouch2", "HTML5", "Ruby"]}