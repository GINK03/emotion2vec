{"context": "Chainer\u3092\u4f7f\u3046\u305f\u3081\u306b\u5e7e\u3064\u304b\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3057\u305f\uff0e\n\nPFN\u767a\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afchainer\u3067\u753b\u50cf\u5206\u985e\u3092\u3059\u308b\u3088(chainer\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c81)\nChainer\u306eNIN\u3067\u81ea\u5206\u306e\u753b\u50cf\u30bb\u30c3\u30c8\u3092\u6df1\u5c64\u5b66\u7fd2\u3055\u305b\u3066\u8a8d\u8b58\u3055\u305b\u308b\n\n\u3068\u3053\u308d\u304c\uff0c\u81ea\u524d\u306e\u753b\u50cf\u3092\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306btrain_imagenet.py\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\uff0e\n\n\u30a8\u30e9\u30fc\ncPickle.UnpicklingError: invalid load key, \n\n\n\u8a72\u5f53\u7b87\u6240\u306f\u2193\u306e\u30b3\u30fc\u30c9\u306epickle.load\u3068\u3044\u3046\u95a2\u6570\u306b\u3088\u308b\u975ePickle\u5316\u51e6\u7406\n\ntrain_imagenet.py\n# Prepare dataset\ntrain_list = load_image_list(args.train, args.root)\nval_list = load_image_list(args.val, args.root)\nmean_image = pickle.load(open(args.mean, 'rb'))\n\n\n\u5f15\u6570\u306eargs.mean\u306e\u5024\u306fmean.npy\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\uff0c\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u51fa\u51e6\u3092\u63a2\u3057\u3066\u307f\u308b\u3068...\n\ncompute_mean.py\n#!/usr/bin/env python\nimport argparse\nimport os\nimport sys\n\nimport numpy\nfrom PIL import Image\nimport six.moves.cPickle as pickle\n\n\nparser = argparse.ArgumentParser(description='Compute images mean array')\nparser.add_argument('dataset', help='Path to training image-label list file')\nparser.add_argument('--root', '-r', default='.',\n                    help='Root directory path of image files')\nparser.add_argument('--output', '-o', default='mean.npy',\n                    help='path to output mean array')\nargs = parser.parse_args()\n\nsum_image = None\ncount = 0\nfor line in open(args.dataset):\n    filepath = os.path.join(args.root, line.strip().split()[0])\n    image = numpy.asarray(Image.open(filepath)).transpose(2, 0, 1)\n    if sum_image is None:\n        sum_image = numpy.ndarray(image.shape, dtype=numpy.float32)\n        sum_image[:] = image\n    else:\n        sum_image += image\n    count += 1\n    sys.stderr.write('\\r{}'.format(count))\n    sys.stderr.flush()\n\nsys.stderr.write('\\n')\n\nmean = sum_image / count\npickle.dump(mean, open(args.output, 'wb'), -1)\n\n\nnumpy.ndarray\u95a2\u6570\u3067\u751f\u6210\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\uff0cpickle.dump\u95a2\u6570\u3067mean.npy\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\n\u3064\u307e\u308a\uff0cmean.npy\u306e\u5b9f\u4f53\u306fNumPy\u914d\u5217\u306e\u30d0\u30a4\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u3088\u3046\u3067\u3059\uff0e\n\u306a\u306e\u3067\uff0ctrain_imagenet.py\u3067mean.npy\u3092\u975ePickle\u5316\u3057\u3066\u8aad\u307f\u8fbc\u3080\u306e\u3067\u306f\u306a\u304f\uff0cNumPy\u914d\u5217\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\uff0e\n\ntrain_imagenet.py\n# Prepare dataset\ntrain_list = load_image_list(args.train, args.root)\nval_list = load_image_list(args.val, args.root)\n# mean_image = pickle.load(open(args.mean, 'rb')) \u2190\u975ePickle\u5316\u3057\u3066\u8aad\u307f\u8fbc\u3080\u3068cPickle.UnpicklingError\nmean_image = np.load(args.mean) # NumPy\u914d\u5217\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3080\n\n\n\u3059\u308b\u3068\u306a\u3093\u3068\u304b\u8aad\u307f\u8fbc\u3081\u307e\u3057\u305f\uff0e\n\nChainer\u3092\u4f7f\u3046\u305f\u3081\u306b\u5e7e\u3064\u304b\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3057\u305f\uff0e\n\n- [PFN\u767a\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afchainer\u3067\u753b\u50cf\u5206\u985e\u3092\u3059\u308b\u3088(chainer\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c81)](http://hi-king.hatenablog.com/entry/2015/06/11/021144)\n\n- [Chainer\u306eNIN\u3067\u81ea\u5206\u306e\u753b\u50cf\u30bb\u30c3\u30c8\u3092\u6df1\u5c64\u5b66\u7fd2\u3055\u305b\u3066\u8a8d\u8b58\u3055\u305b\u308b](http://d.hatena.ne.jp/shi3z/20150709/1436397615)\n\n\u3068\u3053\u308d\u304c\uff0c\u81ea\u524d\u306e\u753b\u50cf\u3092\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306btrain_imagenet.py\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\uff0e\n\n```py:\u30a8\u30e9\u30fc\ncPickle.UnpicklingError: invalid load key, \n```\n\n\u8a72\u5f53\u7b87\u6240\u306f\u2193\u306e\u30b3\u30fc\u30c9\u306epickle.load\u3068\u3044\u3046\u95a2\u6570\u306b\u3088\u308b\u975ePickle\u5316\u51e6\u7406\n\n```py:train_imagenet.py\n# Prepare dataset\ntrain_list = load_image_list(args.train, args.root)\nval_list = load_image_list(args.val, args.root)\nmean_image = pickle.load(open(args.mean, 'rb'))\n```\n\n\u5f15\u6570\u306eargs.mean\u306e\u5024\u306fmean.npy\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\uff0c\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u51fa\u51e6\u3092\u63a2\u3057\u3066\u307f\u308b\u3068...\n\n```py:compute_mean.py\n#!/usr/bin/env python\nimport argparse\nimport os\nimport sys\n\nimport numpy\nfrom PIL import Image\nimport six.moves.cPickle as pickle\n\n\nparser = argparse.ArgumentParser(description='Compute images mean array')\nparser.add_argument('dataset', help='Path to training image-label list file')\nparser.add_argument('--root', '-r', default='.',\n                    help='Root directory path of image files')\nparser.add_argument('--output', '-o', default='mean.npy',\n                    help='path to output mean array')\nargs = parser.parse_args()\n\nsum_image = None\ncount = 0\nfor line in open(args.dataset):\n    filepath = os.path.join(args.root, line.strip().split()[0])\n    image = numpy.asarray(Image.open(filepath)).transpose(2, 0, 1)\n    if sum_image is None:\n        sum_image = numpy.ndarray(image.shape, dtype=numpy.float32)\n        sum_image[:] = image\n    else:\n        sum_image += image\n    count += 1\n    sys.stderr.write('\\r{}'.format(count))\n    sys.stderr.flush()\n\nsys.stderr.write('\\n')\n\nmean = sum_image / count\npickle.dump(mean, open(args.output, 'wb'), -1)\n```\n\nnumpy.ndarray\u95a2\u6570\u3067\u751f\u6210\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\uff0cpickle.dump\u95a2\u6570\u3067mean.npy\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\n\u3064\u307e\u308a\uff0cmean.npy\u306e\u5b9f\u4f53\u306fNumPy\u914d\u5217\u306e\u30d0\u30a4\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u3088\u3046\u3067\u3059\uff0e\n\n\u306a\u306e\u3067\uff0ctrain_imagenet.py\u3067mean.npy\u3092\u975ePickle\u5316\u3057\u3066\u8aad\u307f\u8fbc\u3080\u306e\u3067\u306f\u306a\u304f\uff0cNumPy\u914d\u5217\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\uff0e\n\n```py:train_imagenet.py\n# Prepare dataset\ntrain_list = load_image_list(args.train, args.root)\nval_list = load_image_list(args.val, args.root)\n# mean_image = pickle.load(open(args.mean, 'rb')) \u2190\u975ePickle\u5316\u3057\u3066\u8aad\u307f\u8fbc\u3080\u3068cPickle.UnpicklingError\nmean_image = np.load(args.mean) # NumPy\u914d\u5217\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3080\n```\n\n\u3059\u308b\u3068\u306a\u3093\u3068\u304b\u8aad\u307f\u8fbc\u3081\u307e\u3057\u305f\uff0e\n", "tags": ["Chainer", "Python"]}