{"context": "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7d44\u307f\u8fbc\u3093\u3067C++\u95a2\u6570\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u5074\u3078\u516c\u958b\u3059\u308b\u5834\u5408\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u5f15\u6570\u3092\u5c55\u958b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u591a\u304f\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f\u95a2\u6570\u306e\u5f15\u6570\u3092 \"Any\"\u578b\u306e\u30b7\u30fc\u30b1\u30f3\u30b9 \u3068\u3057\u3066\u6271\u3063\u3066\u3044\u308b\u305f\u3081\u3001C++\u306e\u305f\u3081\u306b \u578b\u4ed8\u304d\u306e\u30b3\u30f3\u30de\u533a\u5207\u308a \u3078\u5909\u63db\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002C++14\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u5f15\u6570\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u30d0\u30a4\u30f3\u30c0\u306e\u8a18\u8ff0\u304c\u5bb9\u6613\u306b\u306a\u308b\u3002\n\u3064\u307e\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u3092\u3057\u305f\u304b\u3063\u305f\u3002\u8ffd\u52a0\u306e\u51e6\u7406\u3092\u66f8\u304b\u305a\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3078C++\u306e\u95a2\u6570\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3067\u3042\u308b\u3002\nstatic string concat(int a, string b, double c) {\n    std::ostringstream s;\n    s << a << b << c;\n    return s.str();\n}\n\n// for JavaScript (Chakra)\nJsSetProperty(globals, key, js::CreateFunction(&concat), true);\n// for Lua\nlua::pushFunction(L, &concat);\n\n\nJavaScript (Chakra) \u7248\n\u307e\u305a\u3001\u5024\u3092\u30db\u30b9\u30c8\u304b\u3089\u30b9\u30af\u30ea\u30d7\u30c8\u3078 (H2S) \u3068\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u30db\u30b9\u30c8\u3078 (S2H) \u5909\u63db\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u3002Chakra \u306f C API \u3067\u3042\u308b\u305f\u3081\u540c\u540d\u95a2\u6570\u3092\u907f\u3051\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u5358\u306bC++\u306e\u540c\u540d\u95a2\u6570\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u3059\u308c\u3070\u3088\u3044\u3002\nnamespace js {\n    // H2S: Host to Script\n    JsValueRef H2S(int value);\n    JsValueRef H2S(double value);\n    JsValueRef H2S(wstring value) {\n        JsValueRef r;\n        JsPointerToString(value.data(), value.size(), &r);\n        return r;\n    }\n\n    // S2H: Script to Host\n    template < typename T > T S2H(JsValueRef value) {\n        static_assert(false, \"S2H must be specialized\");\n    }\n\n    template <> int S2H<int>(JsValueRef value);\n    template <> double S2H<double>(JsValueRef value);\n    template <> wstring S2H<wstring>(JsValueRef value) {\n        const wchar_t* data;\n        size_t size;\n        JsStringToPointer(value, &data, &size);\n        return wstring(data, size);\n    }\n}\n\n\u95a2\u6570\u30d0\u30a4\u30f3\u30c0\u306b\u306f\u3001\u53ef\u5909\u9577\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001std::make_index_sequence\u3001std::invoke\u7b49\u3092\u4f7f\u3046\u3002Chakra\u3067\u306f\u5f15\u6570\u304cC\u914d\u5217\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u306e\u3067\u3001N\u756a\u76ee\u306eJsValueRef\u3092\u3001N\u756a\u76ee\u306eC++\u95a2\u6570\u5f15\u6570\u306e\u578b\u306b\u95a2\u9023\u4ed8\u3051\u3066\u5909\u63db\u3057\u3066\u3044\u308b\u3002JavaScript\u306e\u7279\u6027\u4e0a\u3001\u7b2c1\u5f15\u6570\u306fthis\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\u4eca\u56de\u306f\u5358\u306b\u6368\u3066\u3066\u3044\u308b\u3002\n\u30b9\u30af\u30ea\u30d7\u30c8\u30a8\u30f3\u30b8\u30f3\u3078\u6e21\u3059\u95a2\u6570\u306b\u306f\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u3046\u3068\u898b\u901a\u3057\u826f\u304f\u8a18\u8ff0\u3067\u304d\u308b1\u3002\u30e9\u30e0\u30c0\u5f0f\u306b\u306f\u3044\u304b\u306a\u308b\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3082\u30ad\u30e3\u30d7\u30c1\u30e3\u3055\u305b\u3066\u306f\u306a\u3089\u306a\u3044\u3002\u672c\u6765\u306eC++\u95a2\u6570\u3092\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf state \u3068\u3057\u3066\u6e21\u3059\u3002\nnamespace js {\n    namespace detail {\n        template < typename R, typename ...Args, size_t... I >\n        JsValueRef CreateFunction(R(*fn)(Args...), std::index_sequence<I...>) {\n            using F = decltype(fn);\n\n            auto thunk = [](JsValueRef callee, bool isConstructCall, JsValueRef argv[], unsigned short argc, void *state) {\n                auto fn = static_cast<F>(state);\n                --argc; ++argv; // pop 'this'\n                return H2S(std::invoke(fn, S2H<Args>(argv[I])...));\n            };\n\n            JsValueRef function;\n            JsCreateFunction(thunk, fn, &function);\n            return function;\n        }\n    }\n\n    template < typename R, typename ...Args >\n    JsValueRef CreateFunction(R(*fn)(Args...)) {\n        return detail::CreateFunction(fn, std::make_index_sequence<sizeof...(Args)>());\n    }\n}\n\n\nLua \u7248\nLua\u3067\u3082\u540c\u69d8\u3060\u304c\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u30db\u30b9\u30c8\u3078 (S2H) \u306f\u30b9\u30bf\u30c3\u30af\u306e\u6307\u5b9a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8aad\u307f\u53d6\u308a\u3001\u30db\u30b9\u30c8\u304b\u3089\u30b9\u30af\u30ea\u30d7\u30c8\u3078 (H2S) \u306f\u30b9\u30bf\u30c3\u30af\u306b\u8ffd\u52a0\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\nnamespace lua {\n    // H2S: Host to Script\n    void H2S(lua_State* L, int value);\n    void H2S(lua_State* L, double value);\n    void H2S(lua_State* L, string value) {\n        lua_pushlstring(L, value.data(), value.size());\n    }\n\n    // S2H: Script to Host\n    template < typename T > T S2H(lua_State* L, int idx) {\n        static_assert(false, \"S2H must be specialized\");\n    }\n\n    template <> int S2H<int>(lua_State* L, int idx);\n    template <> double S2H<double>(lua_State* L, int idx);\n    template <> string S2H<string>(lua_State* L, int idx) {\n        size_t size;\n        const char* data = luaL_tolstring(L, idx, &size);\n        return string(data, size);\n    }\n\n\u95a2\u6570\u30d0\u30a4\u30f3\u30c0\u3067\u306f\u3001\u5f15\u6570\u306b\u306f\u30b9\u30bf\u30c3\u30af\u756a\u53f7 (1..N) \u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\u672c\u6765\u306eC++\u95a2\u6570\u3092 upvalue \u3068\u3057\u3066\u6e21\u3057\u3066\u3044\u308b\u3002\nnamespace lua {\n    namespace detail {\n        template < typename R, typename ...Args, size_t... I >\n        void pushFunction(lua_State* L, R(*fn)(Args...), std::index_sequence<I...>) {\n            using F = decltype(fn);\n\n            auto thunk = [](lua_State* L) {\n                auto fn = static_cast<F>(lua_touserdata(L, lua_upvalueindex(1)));\n                H2S(L, std::invoke(fn, S2H<Args>(L, I + 1)...));\n                return 1;\n            };\n\n            lua_pushlightuserdata(L, fn);\n            lua_pushcclosure(L, thunk, 1);\n        }\n    }\n\n    template < typename R, typename ...Args >\n    void pushFunction(lua_State* L, R(*fn)(Args...)) {\n        detail::pushFunction(L, fn, std::make_index_sequence<sizeof...(Args)>());\n    }\n}\n\n\n\u307e\u3068\u3081\nC++14\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3066\u300c\u5f15\u6570\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u6e21\u3057\u3066\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u300d\u3053\u3068\u3092\u7c21\u5358\u306b\u8a18\u8ff0\u3067\u304d\u305f\u3002Chakra / Lua\u306b\u9650\u3089\u305a\u3001\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u95a2\u6570\u306b\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u3092\u6301\u305f\u305b\u3089\u308c\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u30a8\u30f3\u30b8\u30f3\u3067\u3042\u308c\u3070\u3001\u540c\u69d8\u306e\u65b9\u6cd5\u304c\u4f7f\u3048\u308b\u3067\u3042\u308d\u3046\u3002\u6614\u306eC++\u3067\u306f\u5f15\u6570\u306e\u6570\u306b\u5fdc\u3058\u305f\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u5168\u3066\u8a18\u8ff0\u3057\u305f\u308a\u3001\u305d\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u30de\u30af\u30ed\u3092\u99c6\u4f7f\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u304c\u3001\u826f\u3044\u6642\u4ee3\u306b\u306a\u3063\u305f\u3082\u306e\u3060\u3002\n\u306a\u304a\u3001\u30d0\u30a4\u30f3\u30c0\u306e\u672c\u683c\u7684\u306a\u5229\u7528\u306b\u3042\u305f\u3063\u3066\u306f\u3001\u304d\u3061\u3093\u3068\u3057\u305f\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306e\u4ed6\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ab2\u984c\u304c\u3042\u308b\u3002\n\n\u8fd4\u5024void\u3078\u306e\u5bfe\u5fdc\n\u30e1\u30f3\u30d0\u95a2\u6570\u3078\u306e\u5bfe\u5fdc\uff08\u30e1\u30f3\u30d0\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306fvoid*\u306b\u5909\u63db\u3067\u304d\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\uff09\n\u7701\u7565\u53ef\u80fd\u306a\u5f15\u6570\u3092 std::optional \u3067\u8868\u73fe\u3059\u308b\n\u6587\u5b57\u5217\u30d0\u30c3\u30d5\u30a1\u306e\u30b3\u30d4\u30fc\u3092\u907f\u3051\u308b\u305f\u3081 boost::basic_string_view \u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\n\n\n\n\n\n\u6614\u306a\u304c\u3089\u306e struct { static fn() } \u3067\u3082\u53ef\u3002\u00a0\u21a9\n\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7d44\u307f\u8fbc\u3093\u3067C++\u95a2\u6570\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u5074\u3078\u516c\u958b\u3059\u308b\u5834\u5408\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u5f15\u6570\u3092\u5c55\u958b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u591a\u304f\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f\u95a2\u6570\u306e\u5f15\u6570\u3092 **\"Any\"\u578b\u306e\u30b7\u30fc\u30b1\u30f3\u30b9** \u3068\u3057\u3066\u6271\u3063\u3066\u3044\u308b\u305f\u3081\u3001C++\u306e\u305f\u3081\u306b **\u578b\u4ed8\u304d\u306e\u30b3\u30f3\u30de\u533a\u5207\u308a** \u3078\u5909\u63db\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002C++14\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u5f15\u6570\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u30d0\u30a4\u30f3\u30c0\u306e\u8a18\u8ff0\u304c\u5bb9\u6613\u306b\u306a\u308b\u3002\n\n\u3064\u307e\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u3092\u3057\u305f\u304b\u3063\u305f\u3002\u8ffd\u52a0\u306e\u51e6\u7406\u3092\u66f8\u304b\u305a\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3078C++\u306e\u95a2\u6570\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3067\u3042\u308b\u3002\n\n```cpp\nstatic string concat(int a, string b, double c) {\n\tstd::ostringstream s;\n\ts << a << b << c;\n\treturn s.str();\n}\n\n// for JavaScript (Chakra)\nJsSetProperty(globals, key, js::CreateFunction(&concat), true);\n// for Lua\nlua::pushFunction(L, &concat);\n```\n\n# JavaScript (Chakra) \u7248\n\u307e\u305a\u3001\u5024\u3092\u30db\u30b9\u30c8\u304b\u3089\u30b9\u30af\u30ea\u30d7\u30c8\u3078 (H2S) \u3068\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u30db\u30b9\u30c8\u3078 (S2H) \u5909\u63db\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u3002Chakra \u306f C API \u3067\u3042\u308b\u305f\u3081\u540c\u540d\u95a2\u6570\u3092\u907f\u3051\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u5358\u306bC++\u306e\u540c\u540d\u95a2\u6570\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u3059\u308c\u3070\u3088\u3044\u3002\n\n```cpp\nnamespace js {\n\t// H2S: Host to Script\n\tJsValueRef H2S(int value);\n\tJsValueRef H2S(double value);\n\tJsValueRef H2S(wstring value) {\n\t\tJsValueRef r;\n\t\tJsPointerToString(value.data(), value.size(), &r);\n\t\treturn r;\n\t}\n\n\t// S2H: Script to Host\n\ttemplate < typename T > T S2H(JsValueRef value) {\n\t\tstatic_assert(false, \"S2H must be specialized\");\n\t}\n\n\ttemplate <> int S2H<int>(JsValueRef value);\n\ttemplate <> double S2H<double>(JsValueRef value);\n\ttemplate <> wstring S2H<wstring>(JsValueRef value) {\n\t\tconst wchar_t* data;\n\t\tsize_t size;\n\t\tJsStringToPointer(value, &data, &size);\n\t\treturn wstring(data, size);\n\t}\n}\n```\n\n\u95a2\u6570\u30d0\u30a4\u30f3\u30c0\u306b\u306f\u3001\u53ef\u5909\u9577\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001```std::make_index_sequence```\u3001```std::invoke```\u7b49\u3092\u4f7f\u3046\u3002Chakra\u3067\u306f\u5f15\u6570\u304cC\u914d\u5217\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u306e\u3067\u3001N\u756a\u76ee\u306eJsValueRef\u3092\u3001N\u756a\u76ee\u306eC++\u95a2\u6570\u5f15\u6570\u306e\u578b\u306b\u95a2\u9023\u4ed8\u3051\u3066\u5909\u63db\u3057\u3066\u3044\u308b\u3002JavaScript\u306e\u7279\u6027\u4e0a\u3001\u7b2c1\u5f15\u6570\u306f```this```\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\u4eca\u56de\u306f\u5358\u306b\u6368\u3066\u3066\u3044\u308b\u3002\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u30a8\u30f3\u30b8\u30f3\u3078\u6e21\u3059\u95a2\u6570\u306b\u306f\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u3046\u3068\u898b\u901a\u3057\u826f\u304f\u8a18\u8ff0\u3067\u304d\u308b[^1]\u3002\u30e9\u30e0\u30c0\u5f0f\u306b\u306f\u3044\u304b\u306a\u308b\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3082\u30ad\u30e3\u30d7\u30c1\u30e3\u3055\u305b\u3066\u306f\u306a\u3089\u306a\u3044\u3002\u672c\u6765\u306eC++\u95a2\u6570\u3092\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf ```state``` \u3068\u3057\u3066\u6e21\u3059\u3002\n\n[^1]: \u6614\u306a\u304c\u3089\u306e ```struct { static fn() }``` \u3067\u3082\u53ef\u3002\n\n```cpp\nnamespace js {\n\tnamespace detail {\n\t\ttemplate < typename R, typename ...Args, size_t... I >\n\t\tJsValueRef CreateFunction(R(*fn)(Args...), std::index_sequence<I...>) {\n\t\t\tusing F = decltype(fn);\n\n\t\t\tauto thunk = [](JsValueRef callee, bool isConstructCall, JsValueRef argv[], unsigned short argc, void *state) {\n\t\t\t\tauto fn = static_cast<F>(state);\n\t\t\t\t--argc; ++argv;\t// pop 'this'\n\t\t\t\treturn H2S(std::invoke(fn, S2H<Args>(argv[I])...));\n\t\t\t};\n\n\t\t\tJsValueRef function;\n\t\t\tJsCreateFunction(thunk, fn, &function);\n\t\t\treturn function;\n\t\t}\n\t}\n\n\ttemplate < typename R, typename ...Args >\n\tJsValueRef CreateFunction(R(*fn)(Args...)) {\n\t\treturn detail::CreateFunction(fn, std::make_index_sequence<sizeof...(Args)>());\n\t}\n}\n```\n\n# Lua \u7248\nLua\u3067\u3082\u540c\u69d8\u3060\u304c\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u30db\u30b9\u30c8\u3078 (S2H) \u306f\u30b9\u30bf\u30c3\u30af\u306e\u6307\u5b9a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8aad\u307f\u53d6\u308a\u3001\u30db\u30b9\u30c8\u304b\u3089\u30b9\u30af\u30ea\u30d7\u30c8\u3078 (H2S) \u306f\u30b9\u30bf\u30c3\u30af\u306b\u8ffd\u52a0\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n```cpp\nnamespace lua {\n\t// H2S: Host to Script\n\tvoid H2S(lua_State* L, int value);\n\tvoid H2S(lua_State* L, double value);\n\tvoid H2S(lua_State* L, string value) {\n\t\tlua_pushlstring(L, value.data(), value.size());\n\t}\n\n\t// S2H: Script to Host\n\ttemplate < typename T > T S2H(lua_State* L, int idx) {\n\t\tstatic_assert(false, \"S2H must be specialized\");\n\t}\n\n\ttemplate <> int S2H<int>(lua_State* L, int idx);\n\ttemplate <> double S2H<double>(lua_State* L, int idx);\n\ttemplate <> string S2H<string>(lua_State* L, int idx) {\n\t\tsize_t size;\n\t\tconst char* data = luaL_tolstring(L, idx, &size);\n\t\treturn string(data, size);\n\t}\n```\n\n\u95a2\u6570\u30d0\u30a4\u30f3\u30c0\u3067\u306f\u3001\u5f15\u6570\u306b\u306f\u30b9\u30bf\u30c3\u30af\u756a\u53f7 (1..N) \u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\u672c\u6765\u306eC++\u95a2\u6570\u3092 upvalue \u3068\u3057\u3066\u6e21\u3057\u3066\u3044\u308b\u3002\n\n```cpp\nnamespace lua {\n\tnamespace detail {\n\t\ttemplate < typename R, typename ...Args, size_t... I >\n\t\tvoid pushFunction(lua_State* L, R(*fn)(Args...), std::index_sequence<I...>) {\n\t\t\tusing F = decltype(fn);\n\n\t\t\tauto thunk = [](lua_State* L) {\n\t\t\t\tauto fn = static_cast<F>(lua_touserdata(L, lua_upvalueindex(1)));\n\t\t\t\tH2S(L, std::invoke(fn, S2H<Args>(L, I + 1)...));\n\t\t\t\treturn 1;\n\t\t\t};\n\n\t\t\tlua_pushlightuserdata(L, fn);\n\t\t\tlua_pushcclosure(L, thunk, 1);\n\t\t}\n\t}\n\n\ttemplate < typename R, typename ...Args >\n\tvoid pushFunction(lua_State* L, R(*fn)(Args...)) {\n\t\tdetail::pushFunction(L, fn, std::make_index_sequence<sizeof...(Args)>());\n\t}\n}\n```\n\n#\u307e\u3068\u3081\nC++14\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3066\u300c\u5f15\u6570\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u6e21\u3057\u3066\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u300d\u3053\u3068\u3092\u7c21\u5358\u306b\u8a18\u8ff0\u3067\u304d\u305f\u3002Chakra / Lua\u306b\u9650\u3089\u305a\u3001\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u95a2\u6570\u306b\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u3092\u6301\u305f\u305b\u3089\u308c\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u30a8\u30f3\u30b8\u30f3\u3067\u3042\u308c\u3070\u3001\u540c\u69d8\u306e\u65b9\u6cd5\u304c\u4f7f\u3048\u308b\u3067\u3042\u308d\u3046\u3002\u6614\u306eC++\u3067\u306f\u5f15\u6570\u306e\u6570\u306b\u5fdc\u3058\u305f\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u5168\u3066\u8a18\u8ff0\u3057\u305f\u308a\u3001\u305d\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u30de\u30af\u30ed\u3092\u99c6\u4f7f\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u304c\u3001\u826f\u3044\u6642\u4ee3\u306b\u306a\u3063\u305f\u3082\u306e\u3060\u3002\n\n\u306a\u304a\u3001\u30d0\u30a4\u30f3\u30c0\u306e\u672c\u683c\u7684\u306a\u5229\u7528\u306b\u3042\u305f\u3063\u3066\u306f\u3001\u304d\u3061\u3093\u3068\u3057\u305f\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306e\u4ed6\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ab2\u984c\u304c\u3042\u308b\u3002\n\n  - \u8fd4\u5024```void```\u3078\u306e\u5bfe\u5fdc\n  - \u30e1\u30f3\u30d0\u95a2\u6570\u3078\u306e\u5bfe\u5fdc\uff08\u30e1\u30f3\u30d0\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306f```void*```\u306b\u5909\u63db\u3067\u304d\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\uff09\n  - \u7701\u7565\u53ef\u80fd\u306a\u5f15\u6570\u3092 ```std::optional``` \u3067\u8868\u73fe\u3059\u308b\n  - \u6587\u5b57\u5217\u30d0\u30c3\u30d5\u30a1\u306e\u30b3\u30d4\u30fc\u3092\u907f\u3051\u308b\u305f\u3081 ```boost::basic_string_view``` \u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\n", "tags": ["C++", "Lua", "JavaScript", "ChakraCore", "embedded"]}