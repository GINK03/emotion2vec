{"context": "\na.cpp\nint my_system(const char* const comm) {\n    pid_t pid = fork();\n\n    if (pid == -1) {\n        return -1;\n    }\n\n    char system_outfile[] = \"/tmp/outfile.txt\";\n    char system_errfile[] = \"/tmp/errfile.txt\";\n\n    if (pid == 0) {\n        FILE* outfp = fopen(system_outfile, \"w\");\n\n        if (outfp == nullptr) {\n            _exit(255);\n        }\n\n        FILE* errfp = fopen(system_errfile, \"w\");\n\n        if (errfp == nullptr) {\n            _exit(255);\n        }\n\n        dup2(fileno(outfp), STDOUT_FILENO);\n        dup2(fileno(errfp), STDERR_FILENO);\n        fclose(outfp);\n        fclose(errfp);\n\n        execl(\"/bin/sh\", \"sh\", \"-c\", comm, (char*)0);\n        _exit(1);\n    }\n\n    int status = 0;\n    int r = wait(&status);\n\n    if (r == -1) {\n        kill(pid, SIGTERM);\n        status = -1;\n    }\n\n    return status;\n}\n\n\nsystem()\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u5185\u90e8\u3067fork - exec - wait\u3059\u308b\u51e6\u7406\u3002\nsystem()\u3068\u9055\u3044\u3001\u30b7\u30b0\u30ca\u30eb\u95a2\u9023\u306e\u51e6\u7406\u3092\u66f8\u304d\u63db\u3048\u306a\u3044\u3002\nmy_system()\u3092\u547c\u3073\u51fa\u3059\u524d\u306b\u3001\u9069\u5207\u306b\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u7b49\u306e\u51e6\u7406\u3092\n\u8a2d\u5b9a\u3057\u3066\u304b\u3089\u547c\u3073\u51fa\u305b\u3070\u3001\u9014\u4e2d\u3067\u51e6\u7406\u3092\u4e2d\u65ad\u3067\u304d\u308b\u3002\n\u5b9f\u884c\u9014\u4e2d\u306b\u30b7\u30b0\u30ca\u30eb\u3092\u9001\u308c\u3070\u3001wait\u304cEINTR\u3067\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001\n\u5f8c\u306f\u3001fork\u3057\u3066execl\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u306bSIGTERM\u3092\u9001\u3063\u3066\u3001\u7d42\u4e86\u3059\u308c\u3070\u826f\u3044\u3002\n\u203b\u30cf\u30f3\u30c9\u30eb\u3057\u3066\u3044\u306a\u3044\u3001\u3082\u3057\u304f\u306f\u3067\u304d\u306a\u3044\u30b7\u30b0\u30ca\u30eb\u3092\u9001\u3063\u305f\u3089\u3001\u305d\u308a\u3083\u5373\u6b7b\u3057\u307e\u3059\u304c\u3002\n\u3053\u3053\u3067\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001execl\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u304cSIGTERM\u3092\u30d6\u30ed\u30c3\u30af\u3057\u3066\u3044\u305f\u5834\u5408\u306f\u3001\n\u305d\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u30be\u30f3\u30d3\u306b\u306a\u308b\u3002\u3053\u308c\u3092\u3055\u3089\u306b\u4e01\u5be7\u306b\u51e6\u7406\u3059\u308b\u306a\u3089\u3001\nSIGTERM\u3092\u9001\u308b\u3001\u4e00\u5b9a\u6642\u9593\u5f85\u3064\u3001\u307e\u3060\u7d42\u308f\u3089\u306a\u3044\u306a\u3089SIGKILL\u3067\u7d42\u308f\u3089\u305b\u308b\u3001\n\u3068\u3044\u3046\u3053\u3068\u3092\u3059\u308c\u3070\u3088\u3044\u3002\n\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u3092RESTART\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3001\u3044\u304f\u3089\u30b7\u30b0\u30ca\u30eb\u3092\u6253\u3061\u8fbc\u3093\u3067\u3082\nwait\u304c\u518d\u5ea6\u51e6\u7406\u306b\u623b\u308a\u3001\u6c38\u9060\u3068\u5e30\u3063\u3066\u3053\u306a\u3044\u3002\nsystem()\u306f\u3001\u52dd\u624b\u306b\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u3092RESTART\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u4e2d\u65ad\u3057\u306a\u3044\u3002\n\u3042\u3068\u3001\u305b\u3063\u304b\u304f\u81ea\u5206\u3067fork - execl\u3057\u3066\u3044\u308b\u306e\u3067\u3001dup\u3092\u4f7f\u3063\u3066\u3001\nexecl\u306e\u6a19\u6e96\u51fa\u529b\u3068\u6a19\u6e96\u30a8\u30e9\u30fc\u3082\u56de\u53ce\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\u623b\u308a\u5024\u306fsystem\u3068\u540c\u3058\u3088\u3046\u306bwait\u3057\u305fstatus\u3001\u5931\u6557\u3057\u305f\u3089-1\u3002\nwait\u3067\u56de\u53ce\u3057\u305f\u30b9\u30c6\u30fc\u30bf\u30b9\u306f\u3001\nWIFEXITED(status) ? WEXITSTATUS(status) : -1;\n\u3068\u3044\u3046\u611f\u3058\u3067\u3001\u3061\u3083\u3093\u3068\u30c1\u30a7\u30c3\u30af\u3057\u3066\u4f7f\u3046\u3002\n```cpp:a.cpp\nint my_system(const char* const comm) {\n    pid_t pid = fork();\n    \n    if (pid == -1) {\n        return -1;\n    }\n    \n    char system_outfile[] = \"/tmp/outfile.txt\";\n    char system_errfile[] = \"/tmp/errfile.txt\";\n    \n    if (pid == 0) {\n        FILE* outfp = fopen(system_outfile, \"w\");\n        \n        if (outfp == nullptr) {\n            _exit(255);\n        }\n        \n        FILE* errfp = fopen(system_errfile, \"w\");\n        \n        if (errfp == nullptr) {\n            _exit(255);\n        }\n        \n        dup2(fileno(outfp), STDOUT_FILENO);\n        dup2(fileno(errfp), STDERR_FILENO);\n        fclose(outfp);\n        fclose(errfp);\n        \n        execl(\"/bin/sh\", \"sh\", \"-c\", comm, (char*)0);\n        _exit(1);\n    }\n    \n    int status = 0;\n    int r = wait(&status);\n    \n    if (r == -1) {\n        kill(pid, SIGTERM);\n        status = -1;\n    }\n    \n    return status;\n}\n```\n\nsystem()\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u5185\u90e8\u3067fork - exec - wait\u3059\u308b\u51e6\u7406\u3002\nsystem()\u3068\u9055\u3044\u3001\u30b7\u30b0\u30ca\u30eb\u95a2\u9023\u306e\u51e6\u7406\u3092\u66f8\u304d\u63db\u3048\u306a\u3044\u3002\n\nmy_system()\u3092\u547c\u3073\u51fa\u3059\u524d\u306b\u3001\u9069\u5207\u306b\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u7b49\u306e\u51e6\u7406\u3092\n\u8a2d\u5b9a\u3057\u3066\u304b\u3089\u547c\u3073\u51fa\u305b\u3070\u3001\u9014\u4e2d\u3067\u51e6\u7406\u3092\u4e2d\u65ad\u3067\u304d\u308b\u3002\n\n\u5b9f\u884c\u9014\u4e2d\u306b\u30b7\u30b0\u30ca\u30eb\u3092\u9001\u308c\u3070\u3001wait\u304cEINTR\u3067\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001\n\u5f8c\u306f\u3001fork\u3057\u3066execl\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u306bSIGTERM\u3092\u9001\u3063\u3066\u3001\u7d42\u4e86\u3059\u308c\u3070\u826f\u3044\u3002\n\u203b\u30cf\u30f3\u30c9\u30eb\u3057\u3066\u3044\u306a\u3044\u3001\u3082\u3057\u304f\u306f\u3067\u304d\u306a\u3044\u30b7\u30b0\u30ca\u30eb\u3092\u9001\u3063\u305f\u3089\u3001\u305d\u308a\u3083\u5373\u6b7b\u3057\u307e\u3059\u304c\u3002\n\n\u3053\u3053\u3067\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001execl\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u304cSIGTERM\u3092\u30d6\u30ed\u30c3\u30af\u3057\u3066\u3044\u305f\u5834\u5408\u306f\u3001\n\u305d\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u30be\u30f3\u30d3\u306b\u306a\u308b\u3002\u3053\u308c\u3092\u3055\u3089\u306b\u4e01\u5be7\u306b\u51e6\u7406\u3059\u308b\u306a\u3089\u3001\nSIGTERM\u3092\u9001\u308b\u3001\u4e00\u5b9a\u6642\u9593\u5f85\u3064\u3001\u307e\u3060\u7d42\u308f\u3089\u306a\u3044\u306a\u3089SIGKILL\u3067\u7d42\u308f\u3089\u305b\u308b\u3001\n\u3068\u3044\u3046\u3053\u3068\u3092\u3059\u308c\u3070\u3088\u3044\u3002\n\n\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u3092RESTART\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3001\u3044\u304f\u3089\u30b7\u30b0\u30ca\u30eb\u3092\u6253\u3061\u8fbc\u3093\u3067\u3082\nwait\u304c\u518d\u5ea6\u51e6\u7406\u306b\u623b\u308a\u3001\u6c38\u9060\u3068\u5e30\u3063\u3066\u3053\u306a\u3044\u3002\nsystem()\u306f\u3001\u52dd\u624b\u306b\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u3092RESTART\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u4e2d\u65ad\u3057\u306a\u3044\u3002\n\n\n\u3042\u3068\u3001\u305b\u3063\u304b\u304f\u81ea\u5206\u3067fork - execl\u3057\u3066\u3044\u308b\u306e\u3067\u3001dup\u3092\u4f7f\u3063\u3066\u3001\nexecl\u306e\u6a19\u6e96\u51fa\u529b\u3068\u6a19\u6e96\u30a8\u30e9\u30fc\u3082\u56de\u53ce\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\n\u623b\u308a\u5024\u306fsystem\u3068\u540c\u3058\u3088\u3046\u306bwait\u3057\u305fstatus\u3001\u5931\u6557\u3057\u305f\u3089-1\u3002\n\nwait\u3067\u56de\u53ce\u3057\u305f\u30b9\u30c6\u30fc\u30bf\u30b9\u306f\u3001\nWIFEXITED(status) ? WEXITSTATUS(status) : -1;\n\u3068\u3044\u3046\u611f\u3058\u3067\u3001\u3061\u3083\u3093\u3068\u30c1\u30a7\u30c3\u30af\u3057\u3066\u4f7f\u3046\u3002\n", "tags": ["C\u8a00\u8a9e", "C++"]}