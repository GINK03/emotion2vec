{"context": "\n\n\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c2\u7ae0 \u301cAPI Gateway\u5229\u7528\u7de8\u301c\n\n\u3042\u3089\u3059\u3058\n\u4eca\u5e74\u3082\u82b1\u7c89\u304c\u51c4\u3044\u3067\u3059\u306d\u3002\u81ea\u5206\u306f\u305a\u3063\u3068\u5fae\u71b1\u51fa\u3066\u308b\u72b6\u6cc1\u3067\u3059\u3002\n\u4f1a\u793e\u306b\u30b8\u30e7\u30a4\u30f3\u3057\u3066\u304b\u3089\u3001\u3082\u3046\uff12\u5e74\u304f\u3089\u3044\u7d4c\u3061\u307e\u3057\u305f\u3002\n\u4eca\u56de\u304b\u3089\u306f\u5c11\u3057\u8a71\u984c\u306b\u306a\u3063\u3066\u3044\u308b\u300c\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u300d\u3068\u3044\u3046\u30cd\u30bf\u3092\u30b7\u30ea\u30fc\u30ba\u3067\u516c\u958b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u203b\u5f8c\u3005\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u30b9\u30c8\u30c3\u30af\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\u81ea\u5206\u306f\u67d0\u793e\u3067CTO\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u982d\u3067\u3063\u304b\u3061\u306b\u7406\u8ad6\u3070\u3063\u304b\u308a\u5b66\u7fd2\u3059\u308b\u3088\u308a\u306f\u3001\u30a4\u30e1\u30fc\u30b8\u304c\u306a\u3093\u3068\u306a\u304f\u63b4\u3081\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3057\u3001\u5b9f\u8df5\u306e\u4e2d\u3067\u77e5\u8b58\u3092\u6df1\u3081\u3066\u3044\u304f\u65b9\u304c\u52b9\u7387\u7684\u306b\u5b66\u7fd2\u51fa\u6765\u308b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\u6559\u80b2\u30b9\u30bf\u30a4\u30eb\u3068\u3057\u3066\u306f\u6b63\u3057\u3044\u4e8b\u3092\u304d\u3063\u3061\u308a\u304b\u3063\u3061\u308a\u6559\u3048\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u672a\u7d4c\u9a13\u30ec\u30d9\u30eb\u306e\u4eba\u304c\u306a\u3093\u3068\u306a\u304f\u63b4\u3081\u308b\u3088\u3046\u306b\u3001\u8cc7\u6599\u3092\u69cb\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b7\u30ea\u30fc\u30ba\u30cd\u30bf\u3067\u9032\u3081\u307e\u3059\u3002\n\n\n\nNo.\n\u8a18\u4e8b\n\n\n\n\n1\n\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u5229\u7528\u7de8\u301c\n\n\n2\n\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c2\u7ae0 \u301cAPI Gateway\u5229\u7528\u7de8\u301c\n\n\n3\n[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c3\u7ae0 \u301cDynamoDB\u5229\u7528\u7de8\u301c]\n\n\n\n\u3067\u306f\u3001\u4eca\u56de\u3082\u306f\u3058\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01\n\n\u306f\u3058\u3081\u306b\n\u4eca\u56de\u306f\u524d\u56de\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u5229\u7528\u7de8\u301c\u306e\u8a18\u4e8b\u3068\u540c\u69d8\u3001serverless\u306enodejs\u306etemplate\u3092\u7528\u3044\u3066AWS APIGateway\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3067\u306f\u306f\u3058\u3081\u307e\u3057\u3087\u3046\n\n\u74b0\u5883\n\nMac\u74b0\u5883\n10.11.6\n\n\nnode\u74b0\u5883\n$ nodebrew ls\n\nv0.12.14\n\n$ nodebrew install-binary v7.4.0\n\n$ nodebrew ls\nv0.12.14\nv7.4.0\n\n\npython\u74b0\u5883\n$ pyenv versions\n  system\n  2.7.12\n\n$ pyenv install -v 3.5.2\n\n$ eval \"$(pyenv init -)\"\n\n$ pyenv shell 3.5.2\n\n$ python --version\nPython 3.5.2\n\n\nawscli\u74b0\u5883\n$ pip install awscli\n\n$ aws --version\naws-cli/1.11.9 Python/2.7.10 Darwin/15.6.0 botocore/1.4.66\n\n\nserverless\u74b0\u5883\n$ npm install serverless -g\n\n$ serverless --version\n1.5.1\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\u524d\u56de\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u5229\u7528\u7de8\u301c\u3067\u4f5c\u3063\u305f\u300cserverlesstest\u300d\u3068\u3044\u3046AWS\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u5f15\u7d9a\u304d\u5229\u7528\u3059\u308b\u5f62\u3067\u3059\u3059\u3081\u307e\u3059\u3002\n\u3044\u3064\u3082\u901a\u308a\u3001serverless\u30b3\u30de\u30f3\u30c9\u3067nodejs\u3067apigateway\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u898b\u307e\u3057\u3087\u3046\u3002\n$ serverless create --template aws-nodejs --provider aws --profile serverlesstest --path apigateway --verbose\n\n\u4f5c\u6210\u3055\u308c\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\napigateway\n\u251c\u2500\u2500 handler.js\n\u2514\u2500\u2500 serverless.yml\n\n\nAPI Gateway\u3092\u5229\u7528\u3059\u308b\n\n\u8a2d\u5b9a\u5909\u66f4\n$ cd ~/Documents/apigateway\n$ ls .\nhandler.js\nserverless.yml\n\nLambda\u306e\u30b9\u30c6\u30fc\u30b8\u3092test\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092API Gateway\u7d4c\u7531\u3067\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u5909\u66f4\u7b87\u6240\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\u4eca\u56de\u304b\u3089\u306fdiff\u306e\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u5f62\u3067\u697d\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u6700\u521d\u306f\u30a4\u30e1\u30fc\u30b8\u308f\u304b\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u6700\u7d42\u306e\u30d5\u30a1\u30a4\u30eb\u72b6\u6cc1\u3082\u4f75\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nserverless.yml\n--- serverless.yml.before   2017-03-06 18:26:48.000000000 +0900\n+++ serverless.yml.after    2017-03-06 19:00:41.000000000 +0900\n@@ -20,6 +20,9 @@\n provider:\n   name: aws\n   runtime: nodejs4.3\n+  profile: serverlesstest\n+  stage: test\n+  region: ap-northeast-1\n\n # you can overwrite defaults here\n #  stage: dev\n@@ -56,7 +59,12 @@\n functions:\n   hello:\n     handler: handler.hello\n-\n+    events:\n+      - http:\n+          path: hello\n+          method: get\n+          cors: true\n+\n #    The following are a few example events you can configure\n #    NOTE: Please make sure to change your handler code to work with those events\n #    Check the event documentation for details\n\n\n\u5909\u66f4\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb(\u5909\u66f4\u7b87\u6240\u3060\u3051\u3092\u629c\u7c8b)\n\nserverless.yml\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  profile: serverlesstest\n  stage: test\n  region: ap-northeast-1\n\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n      - http:\n          path: hello\n          method: get\n          cors: true\n\n\n\n\u30c7\u30d7\u30ed\u30a4\n\u4fee\u6b63\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n$ serverless deploy --provider aws --profile serverlesstest -v\n\n\u30c7\u30d7\u30ed\u30a4\u304c\u4e0a\u624b\u304f\u884c\u304f\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30f3\u30d5\u30a9\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\nendpoints\u3068\u3044\u3046\u7b87\u6240\u306eURL\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3057\u3087\u3046\u3002\n\nAPI GateWay\u306e\u60c5\u5831\u3092\u78ba\u8a8d\u3059\u308b\u3002\nService Information\nservice: apigateway\nstage: test\nregion: ap-northeast-1\napi keys:\n  None\nendpoints:\n  GET - https://xxxxxxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/test/hello\nfunctions:\n  apigateway-test-hello: arn:aws:lambda:ap-northeast-1:xxxxxxxxxxxxxx:function:apigateway-test-hello\n\nStack Outputs\nHelloLambdaFunctionArn: arn:aws:lambda:ap-northeast-1:xxxxxxxxxxxxxx:function:apigateway-test-hello\nHelloLambdaFunctionQualifiedArn: arn:aws:lambda:ap-northeast-1:xxxxxxxxxxxxxx:function:apigateway-test-hello:1\nServiceEndpoint: https://xxxxxxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/test\nServerlessDeploymentBucketName: apigateway-test-xxxxxxxxxxxxxx\n\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\u3055\u304d\u307b\u3069\u30b3\u30d4\u30fc\u3057\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306eURL\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\n\u5c11\u3057\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066DynamoDB\u306b\u3082\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\u6b21\u56de\u306bDynamoDB\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308bRestful\u306aAPI\u3092\u4f5c\u308b\u4e88\u5b9a\u3067\u3057\u305f\u304c\n\u5c11\u3057\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066\u3001\u3053\u306e\u56de\u3067\u3082DynamoDB\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u7d50\u679c\u3092\u8aad\u307f\u53d6\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3044\u3064\u3082\u901a\u308a\u89e3\u8aac\u306f\u307b\u3069\u307b\u3069\u306b\u3002\nserverless.yml\u3092\u4f7f\u3063\u3066\n\nLambda\u3067\u5b9f\u884c\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306bDynamoDB\u306e\u5468\u308a\u306e\u6a29\u9650\u3092\u4ed8\u4e0e(iamRoleStatements\u3089\u3078\u3093)\nresources\u3067DynamoDB\u306e\u8a2d\u5b9a\u3082\u540c\u6642\u306b\u8a2d\u5b9a\n\n\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nserverless.yml\u3092\u5909\u66f4\u3059\u308b\n\nserverless.yml\n--- serverless.yml.before   2017-03-06 19:00:41.000000000 +0900\n+++ serverless.yml.after    2017-03-07 10:52:00.000000000 +0900\n@@ -23,6 +23,17 @@\n   profile: serverlesstest\n   stage: test\n   region: ap-northeast-1\n+  iamRoleStatements:\n+  - Effect: Allow\n+    Action:\n+      - dynamodb:DescribeTable\n+      - dynamodb:Query\n+      - dynamodb:Scan\n+      - dynamodb:GetItem\n+      - dynamodb:PutItem\n+      - dynamodb:UpdateItem\n+      - dynamodb:DeleteItem\n+    Resource: \"arn:aws:dynamodb:ap-northeast-1:*:*\"\n\n # you can overwrite defaults here\n #  stage: dev\n@@ -57,14 +68,14 @@\n #    - exclude-me-dir/**\n\n functions:\n-  hello:\n-    handler: handler.hello\n+  readAll:\n+    handler: handler.readAll\n     events:\n       - http:\n-          path: hello\n+          path: members\n           method: get\n           cors: true\n-\n+\n #    The following are a few example events you can configure\n #    NOTE: Please make sure to change your handler code to work with those events\n #    Check the event documentation for details\n@@ -95,3 +106,21 @@\n #     NewOutput:\n #       Description: \"Description for the output\"\n #       Value: \"Some output value\"\n+resources:\n+  Resources:\n+    MembersDynamoDbTable:\n+      Type: 'AWS::DynamoDB::Table'\n+      DeletionPolicy: Retain\n+      Properties:\n+        AttributeDefinitions:\n+          -\n+            AttributeName: id\n+            AttributeType: S\n+        KeySchema:\n+          -\n+            AttributeName: id\n+            KeyType: HASH\n+        ProvisionedThroughput:\n+          ReadCapacityUnits: 1\n+          WriteCapacityUnits: 1\n+        TableName: 'members'\n\n\n\nhandler.js\u3092\u5909\u66f4\u3059\u308b\n\u6b21\u306e\u7ae0\u3067DynamoDB\u3092\u4f7f\u3063\u305fRestful\u306aAPI\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u8003\u3048\u3066\u3044\u307e\u3057\u305f\u304c\n\u305f\u3044\u3057\u305f\u30ec\u30d9\u30eb\u3067\u3082\u306a\u3044\u306e\u3067\u3001\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066\u4eca\u56de\u306e\u7ae0\u3067\u3082DynamoDB\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\n\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306aAPI\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nhandler.js\n\n--- handler.js.before   2017-03-06 14:47:50.000000000 +0900\n+++ handler.js.after    2017-03-07 10:29:24.000000000 +0900\n@@ -1,16 +1,17 @@\n 'use strict';\n\n-module.exports.hello = (event, context, callback) => {\n-  const response = {\n-    statusCode: 200,\n-    body: JSON.stringify({\n-      message: 'Go Serverless v1.0! Your function executed successfully!',\n-      input: event,\n-    }),\n-  };\n+const membersReadAll = require('./members-read-all.js');\n\n-  callback(null, response);\n+module.exports.readAll = (event, context, callback) => {\n+  membersReadAll(event, (error, result) => {\n+    const response = {\n+      statusCode: 200,\n+      headers: {\n+        \"Access-Control-Allow-Origin\" : \"*\"\n+      },\n+      body: JSON.stringify(result),\n+    };\n\n-  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n-  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n+    context.succeed(response);\n+  });\n };\n\n\n\nmembers-read-all.js\u3092\u4f5c\u6210\u3059\u308b\nnodejs\u7528\u306eaws-sdk\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\n\u5358\u7d14\u306bDynamoDB\u306emembers\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3057\u3066scan\u3092\u3057\u305f\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3060\u3051\u306e\n\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\nmembers-read-all.js\n'use strict';\n\nconst AWS = require('aws-sdk');\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nmodule.exports = (event, callback) => {\n  const params = {\n    TableName: 'members',\n  };\n\n  return dynamoDb.scan(params, (error, data) => {\n    if (error) {\n      callback(error);\n    }\n    callback(error, data.Items);\n  });\n};\n\n\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\nnodejs\u3067\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306fpackage.json\u306a\u3069\u3082\u4f7f\u308f\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307e\u3059\u3002\n$ npm install aws-sdk --save\n\n\u3053\u308c\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u306e\u914d\u4e0b\u306bnode_modules\u304c\u4f5c\u6210\u3055\u308c\u3066\u5bfe\u8c61\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u30c7\u30d7\u30ed\u30a4\n\u9577\u304b\u3063\u305f\u3067\u3059\u306d\u3002\u5b9f\u969b\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n$ serverless deploy --provider aws --profile serverlesstest -v\n\n\u30c7\u30d7\u30ed\u30a4\u7d50\u679c\u304b\u3089\u3001\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u3082\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nhttps://xxxxxxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/test/members\n\u300c[]\u300d\u3068\u3044\u3046\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u304b?\n\nAWS\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089DynamoDB\u3092\u78ba\u8a8d\u3059\u308b\n\n\nDynamoDB\u306b\u30c7\u30fc\u30bf\u3092\u3044\u308c\u308b\n\u30c7\u30fc\u30bf\u304c\u7a7a\u306a\u4e8b\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3044\u3046\u306e\u3082\u3064\u307e\u3089\u306a\u3044\u306e\u3067\nAWS\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u304b\u3089\u624b\u52d5\u3067\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u9805\u76ee\u3092\u4f5c\u6210\n\n\nDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u30c7\u30fc\u30bf\u3092\u767b\u9332\n\u4eca\u56de\u306fid\u3068name\u3067\u767b\u9332\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\nAPI Gateway\u7d4c\u7531\u3067DynamoDB\u306e\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\n\u518d\u5ea6\u30d6\u30e9\u30a6\u30b6\u3067\nhttps://xxxxxxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/test/members\n\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u3055\u304d\u307b\u3069\u767b\u9332\u3057\u305fDynamoDB\u306e\u5024\u304c\u53d6\u5f97\u51fa\u6765\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\n\u7de8\u96c6\u5f8c\u8a18\n\u5c11\u3057\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066DynamoDB\u307e\u3067\u9023\u643a\u3055\u305b\u3066\u307f\u307e\u3057\u305f\u3002API\u306e\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3057\u304b\u30cd\u30bf\u306b\u542b\u3081\u306a\u304b\u3063\u305f\u306e\u3067\u30a4\u30de\u30a4\u30c1\u5b9f\u611f\u304c\u308f\u304b\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4f59\u529b\u306e\u3042\u308b\u4eba\u306fAPI\u3092\u5229\u7528\u3059\u308b\u5074\u3082\u4f5c\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u6b21\u56de\u306f\u3001\u3082\u3046\u5c11\u3057CRUD\u3092Restful\u306a\u611f\u3058\u3067\u5bfe\u5fdc\u51fa\u6765\u308bAPI\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u304a\u697d\u3057\u307f\u306b\u3002\n# \u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c2\u7ae0 \u301cAPI Gateway\u5229\u7528\u7de8\u301c\n\n## \u3042\u3089\u3059\u3058\n\u4eca\u5e74\u3082\u82b1\u7c89\u304c\u51c4\u3044\u3067\u3059\u306d\u3002\u81ea\u5206\u306f\u305a\u3063\u3068\u5fae\u71b1\u51fa\u3066\u308b\u72b6\u6cc1\u3067\u3059\u3002\n\n[\u4f1a\u793e\u306b\u30b8\u30e7\u30a4\u30f3](https://www.wantedly.com/companies/temona/post_articles/41409)\u3057\u3066\u304b\u3089\u3001\u3082\u3046\uff12\u5e74\u304f\u3089\u3044\u7d4c\u3061\u307e\u3057\u305f\u3002\n\u4eca\u56de\u304b\u3089\u306f\u5c11\u3057\u8a71\u984c\u306b\u306a\u3063\u3066\u3044\u308b\u300c\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u300d\u3068\u3044\u3046\u30cd\u30bf\u3092\u30b7\u30ea\u30fc\u30ba\u3067\u516c\u958b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u203b\u5f8c\u3005\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u30b9\u30c8\u30c3\u30af\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\n\u81ea\u5206\u306f\u67d0\u793e\u3067CTO\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u982d\u3067\u3063\u304b\u3061\u306b\u7406\u8ad6\u3070\u3063\u304b\u308a\u5b66\u7fd2\u3059\u308b\u3088\u308a\u306f\u3001\u30a4\u30e1\u30fc\u30b8\u304c\u306a\u3093\u3068\u306a\u304f\u63b4\u3081\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3057\u3001\u5b9f\u8df5\u306e\u4e2d\u3067\u77e5\u8b58\u3092\u6df1\u3081\u3066\u3044\u304f\u65b9\u304c\u52b9\u7387\u7684\u306b\u5b66\u7fd2\u51fa\u6765\u308b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\n\u6559\u80b2\u30b9\u30bf\u30a4\u30eb\u3068\u3057\u3066\u306f\u6b63\u3057\u3044\u4e8b\u3092\u304d\u3063\u3061\u308a\u304b\u3063\u3061\u308a\u6559\u3048\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u672a\u7d4c\u9a13\u30ec\u30d9\u30eb\u306e\u4eba\u304c\u306a\u3093\u3068\u306a\u304f\u63b4\u3081\u308b\u3088\u3046\u306b\u3001\u8cc7\u6599\u3092\u69cb\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b7\u30ea\u30fc\u30ba\u30cd\u30bf\u3067\u9032\u3081\u307e\u3059\u3002\n\n|No.|\u8a18\u4e8b|\n|:-----------|-----------|\n|1|[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u5229\u7528\u7de8\u301c](http://qiita.com/devopsCoordinator/items/974a6e1b92a564f25a15)|\n|2|[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c2\u7ae0 \u301cAPI Gateway\u5229\u7528\u7de8\u301c](http://qiita.com/devopsCoordinator/items/46fdce5f0356bcd35a7d)|\n|3|[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c3\u7ae0 \u301cDynamoDB\u5229\u7528\u7de8\u301c]|\n\n\u3067\u306f\u3001\u4eca\u56de\u3082\u306f\u3058\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01\n\n## \u306f\u3058\u3081\u306b\n\u4eca\u56de\u306f\u524d\u56de[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u5229\u7528\u7de8\u301c](http://qiita.com/devopsCoordinator/items/974a6e1b92a564f25a15)\u306e\u8a18\u4e8b\u3068\u540c\u69d8\u3001serverless\u306enodejs\u306etemplate\u3092\u7528\u3044\u3066AWS APIGateway\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u3067\u306f\u306f\u3058\u3081\u307e\u3057\u3087\u3046\n## \u74b0\u5883\n\n### Mac\u74b0\u5883\n```shell-session\n10.11.6\n```\n\n### node\u74b0\u5883\n\n```shell-session\n$ nodebrew ls\n\nv0.12.14\n```\n\n```shell-session\n$ nodebrew install-binary v7.4.0\n```\n\n```shell-session\n$ nodebrew ls\nv0.12.14\nv7.4.0\n```\n\n### python\u74b0\u5883\n\n```shell-session\n$ pyenv versions\n  system\n  2.7.12\n```\n\n```shell-session\n$ pyenv install -v 3.5.2\n```\n\n```shell-session\n$ eval \"$(pyenv init -)\"\n```\n\n```shell-session\n$ pyenv shell 3.5.2\n```\n\n```shell-session\n$ python --version\nPython 3.5.2\n```\n\n### awscli\u74b0\u5883\n```shell-session\n$ pip install awscli\n```\n\n```shell-session\n$ aws --version\naws-cli/1.11.9 Python/2.7.10 Darwin/15.6.0 botocore/1.4.66\n```\n\n### serverless\u74b0\u5883\n\n```shell-session\n$ npm install serverless -g\n```\n\n```shell-session\n$ serverless --version\n1.5.1\n```\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\n\u524d\u56de[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u5229\u7528\u7de8\u301c](http://qiita.com/devopsCoordinator/items/974a6e1b92a564f25a15)\u3067\u4f5c\u3063\u305f\u300cserverlesstest\u300d\u3068\u3044\u3046AWS\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u5f15\u7d9a\u304d\u5229\u7528\u3059\u308b\u5f62\u3067\u3059\u3059\u3081\u307e\u3059\u3002\n\n\u3044\u3064\u3082\u901a\u308a\u3001serverless\u30b3\u30de\u30f3\u30c9\u3067nodejs\u3067apigateway\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u898b\u307e\u3057\u3087\u3046\u3002\n\n```shell-session\n$ serverless create --template aws-nodejs --provider aws --profile serverlesstest --path apigateway --verbose\n```\n\n**\u4f5c\u6210\u3055\u308c\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8**\n\n```\napigateway\n\u251c\u2500\u2500 handler.js\n\u2514\u2500\u2500 serverless.yml\n```\n\n## API Gateway\u3092\u5229\u7528\u3059\u308b\n\n### \u8a2d\u5b9a\u5909\u66f4\n\n```shell-session\n$ cd ~/Documents/apigateway\n$ ls .\nhandler.js\nserverless.yml\n```\n\nLambda\u306e\u30b9\u30c6\u30fc\u30b8\u3092test\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092API Gateway\u7d4c\u7531\u3067\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u5909\u66f4\u7b87\u6240\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\u4eca\u56de\u304b\u3089\u306fdiff\u306e\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u5f62\u3067\u697d\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u6700\u521d\u306f\u30a4\u30e1\u30fc\u30b8\u308f\u304b\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u6700\u7d42\u306e\u30d5\u30a1\u30a4\u30eb\u72b6\u6cc1\u3082\u4f75\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n\n```diff:serverless.yml\n--- serverless.yml.before\t2017-03-06 18:26:48.000000000 +0900\n+++ serverless.yml.after\t2017-03-06 19:00:41.000000000 +0900\n@@ -20,6 +20,9 @@\n provider:\n   name: aws\n   runtime: nodejs4.3\n+  profile: serverlesstest\n+  stage: test\n+  region: ap-northeast-1\n\n # you can overwrite defaults here\n #  stage: dev\n@@ -56,7 +59,12 @@\n functions:\n   hello:\n     handler: handler.hello\n-\n+    events:\n+      - http:\n+          path: hello\n+          method: get\n+          cors: true\n+\n #    The following are a few example events you can configure\n #    NOTE: Please make sure to change your handler code to work with those events\n #    Check the event documentation for details\n```\n\n**\u5909\u66f4\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb(\u5909\u66f4\u7b87\u6240\u3060\u3051\u3092\u629c\u7c8b)**\n\n```txt:serverless.yml\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  profile: serverlesstest\n  stage: test\n  region: ap-northeast-1\n\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n      - http:\n          path: hello\n          method: get\n          cors: true\n```\n\n### \u30c7\u30d7\u30ed\u30a4\n\u4fee\u6b63\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```shell-session\n$ serverless deploy --provider aws --profile serverlesstest -v\n```\n\n\u30c7\u30d7\u30ed\u30a4\u304c\u4e0a\u624b\u304f\u884c\u304f\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30f3\u30d5\u30a9\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\nendpoints\u3068\u3044\u3046\u7b87\u6240\u306eURL\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3057\u3087\u3046\u3002\n\n#### API GateWay\u306e\u60c5\u5831\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n```\nService Information\nservice: apigateway\nstage: test\nregion: ap-northeast-1\napi keys:\n  None\nendpoints:\n  GET - https://xxxxxxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/test/hello\nfunctions:\n  apigateway-test-hello: arn:aws:lambda:ap-northeast-1:xxxxxxxxxxxxxx:function:apigateway-test-hello\n\nStack Outputs\nHelloLambdaFunctionArn: arn:aws:lambda:ap-northeast-1:xxxxxxxxxxxxxx:function:apigateway-test-hello\nHelloLambdaFunctionQualifiedArn: arn:aws:lambda:ap-northeast-1:xxxxxxxxxxxxxx:function:apigateway-test-hello:1\nServiceEndpoint: https://xxxxxxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/test\nServerlessDeploymentBucketName: apigateway-test-xxxxxxxxxxxxxx\n```\n\n### \u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\n\u3055\u304d\u307b\u3069\u30b3\u30d4\u30fc\u3057\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306eURL\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n![\u30d6\u30e9\u30a6\u30b6\u3067APIGateWay\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u7d50\u679c](https://qiita-image-store.s3.amazonaws.com/0/74153/64909820-490c-d489-584c-b76acac71ed9.png)\n\n## \u5c11\u3057\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066DynamoDB\u306b\u3082\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\n\u6b21\u56de\u306bDynamoDB\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308bRestful\u306aAPI\u3092\u4f5c\u308b\u4e88\u5b9a\u3067\u3057\u305f\u304c\n\u5c11\u3057\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066\u3001\u3053\u306e\u56de\u3067\u3082DynamoDB\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u7d50\u679c\u3092\u8aad\u307f\u53d6\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3044\u3064\u3082\u901a\u308a\u89e3\u8aac\u306f\u307b\u3069\u307b\u3069\u306b\u3002\n\nserverless.yml\u3092\u4f7f\u3063\u3066\n\n* Lambda\u3067\u5b9f\u884c\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306bDynamoDB\u306e\u5468\u308a\u306e\u6a29\u9650\u3092\u4ed8\u4e0e(iamRoleStatements\u3089\u3078\u3093)\n* resources\u3067DynamoDB\u306e\u8a2d\u5b9a\u3082\u540c\u6642\u306b\u8a2d\u5b9a\n\n\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n### serverless.yml\u3092\u5909\u66f4\u3059\u308b\n\n```diff:serverless.yml\n--- serverless.yml.before\t2017-03-06 19:00:41.000000000 +0900\n+++ serverless.yml.after\t2017-03-07 10:52:00.000000000 +0900\n@@ -23,6 +23,17 @@\n   profile: serverlesstest\n   stage: test\n   region: ap-northeast-1\n+  iamRoleStatements:\n+  - Effect: Allow\n+    Action:\n+      - dynamodb:DescribeTable\n+      - dynamodb:Query\n+      - dynamodb:Scan\n+      - dynamodb:GetItem\n+      - dynamodb:PutItem\n+      - dynamodb:UpdateItem\n+      - dynamodb:DeleteItem\n+    Resource: \"arn:aws:dynamodb:ap-northeast-1:*:*\"\n\n # you can overwrite defaults here\n #  stage: dev\n@@ -57,14 +68,14 @@\n #    - exclude-me-dir/**\n\n functions:\n-  hello:\n-    handler: handler.hello\n+  readAll:\n+    handler: handler.readAll\n     events:\n       - http:\n-          path: hello\n+          path: members\n           method: get\n           cors: true\n-\n+\n #    The following are a few example events you can configure\n #    NOTE: Please make sure to change your handler code to work with those events\n #    Check the event documentation for details\n@@ -95,3 +106,21 @@\n #     NewOutput:\n #       Description: \"Description for the output\"\n #       Value: \"Some output value\"\n+resources:\n+  Resources:\n+    MembersDynamoDbTable:\n+      Type: 'AWS::DynamoDB::Table'\n+      DeletionPolicy: Retain\n+      Properties:\n+        AttributeDefinitions:\n+          -\n+            AttributeName: id\n+            AttributeType: S\n+        KeySchema:\n+          -\n+            AttributeName: id\n+            KeyType: HASH\n+        ProvisionedThroughput:\n+          ReadCapacityUnits: 1\n+          WriteCapacityUnits: 1\n+        TableName: 'members'\n```\n\n### handler.js\u3092\u5909\u66f4\u3059\u308b\n\n\u6b21\u306e\u7ae0\u3067DynamoDB\u3092\u4f7f\u3063\u305fRestful\u306aAPI\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u8003\u3048\u3066\u3044\u307e\u3057\u305f\u304c\n\u305f\u3044\u3057\u305f\u30ec\u30d9\u30eb\u3067\u3082\u306a\u3044\u306e\u3067\u3001\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066\u4eca\u56de\u306e\u7ae0\u3067\u3082DynamoDB\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\n\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306aAPI\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```diff:handler.js\n\n--- handler.js.before\t2017-03-06 14:47:50.000000000 +0900\n+++ handler.js.after\t2017-03-07 10:29:24.000000000 +0900\n@@ -1,16 +1,17 @@\n 'use strict';\n\n-module.exports.hello = (event, context, callback) => {\n-  const response = {\n-    statusCode: 200,\n-    body: JSON.stringify({\n-      message: 'Go Serverless v1.0! Your function executed successfully!',\n-      input: event,\n-    }),\n-  };\n+const membersReadAll = require('./members-read-all.js');\n\n-  callback(null, response);\n+module.exports.readAll = (event, context, callback) => {\n+  membersReadAll(event, (error, result) => {\n+    const response = {\n+      statusCode: 200,\n+      headers: {\n+        \"Access-Control-Allow-Origin\" : \"*\"\n+      },\n+      body: JSON.stringify(result),\n+    };\n\n-  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n-  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n+    context.succeed(response);\n+  });\n };\n```\n\n### members-read-all.js\u3092\u4f5c\u6210\u3059\u308b\n\nnodejs\u7528\u306eaws-sdk\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\n\u5358\u7d14\u306bDynamoDB\u306emembers\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3057\u3066scan\u3092\u3057\u305f\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3060\u3051\u306e\n\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\n```txt:members-read-all.js\n'use strict';\n\nconst AWS = require('aws-sdk');\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nmodule.exports = (event, callback) => {\n  const params = {\n    TableName: 'members',\n  };\n\n  return dynamoDb.scan(params, (error, data) => {\n    if (error) {\n      callback(error);\n    }\n    callback(error, data.Items);\n  });\n};\n\n```\n\n### \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\nnodejs\u3067\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306fpackage.json\u306a\u3069\u3082\u4f7f\u308f\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307e\u3059\u3002\n\n```shell-session\n$ npm install aws-sdk --save\n```\n\n\u3053\u308c\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u306e\u914d\u4e0b\u306bnode_modules\u304c\u4f5c\u6210\u3055\u308c\u3066\u5bfe\u8c61\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3057\u305f\u3002\n\n### \u30c7\u30d7\u30ed\u30a4\n\n\u9577\u304b\u3063\u305f\u3067\u3059\u306d\u3002\u5b9f\u969b\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```shell-session\n$ serverless deploy --provider aws --profile serverlesstest -v\n```\n\n\u30c7\u30d7\u30ed\u30a4\u7d50\u679c\u304b\u3089\u3001\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u3082\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nhttps://xxxxxxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/test/members\n\n\u300c[]\u300d\u3068\u3044\u3046\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u304b?\n\n### AWS\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089DynamoDB\u3092\u78ba\u8a8d\u3059\u308b\n![DynamoDB](https://qiita-image-store.s3.amazonaws.com/0/74153/cb1f6998-7683-e0de-a130-a5975f788f39.png)\n\n#### DynamoDB\u306b\u30c7\u30fc\u30bf\u3092\u3044\u308c\u308b\n\u30c7\u30fc\u30bf\u304c\u7a7a\u306a\u4e8b\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3044\u3046\u306e\u3082\u3064\u307e\u3089\u306a\u3044\u306e\u3067\nAWS\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u304b\u3089\u624b\u52d5\u3067\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n##### DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u9805\u76ee\u3092\u4f5c\u6210\n![DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u9805\u76ee\u3092\u4f5c\u6210\u3059\u308b](https://qiita-image-store.s3.amazonaws.com/0/74153/0823442a-1aa0-4698-a7a0-ed5020baef31.png)\n\n##### DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u30c7\u30fc\u30bf\u3092\u767b\u9332\n\u4eca\u56de\u306fid\u3068name\u3067\u767b\u9332\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n![DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3059\u308b](https://qiita-image-store.s3.amazonaws.com/0/74153/bc67d10c-1b6c-a5a9-bff7-4d9030c258e4.png)\n\n\n## API Gateway\u7d4c\u7531\u3067DynamoDB\u306e\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\n\n\u518d\u5ea6\u30d6\u30e9\u30a6\u30b6\u3067\nhttps://xxxxxxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/test/members\n\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u3055\u304d\u307b\u3069\u767b\u9332\u3057\u305fDynamoDB\u306e\u5024\u304c\u53d6\u5f97\u51fa\u6765\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n![API Gateway\u306e\u7d50\u679c](https://qiita-image-store.s3.amazonaws.com/0/74153/2edab0dc-1171-6f5f-70cc-c2d99fb40a0f.png)\n\n\n# \u7de8\u96c6\u5f8c\u8a18\n\u5c11\u3057\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066DynamoDB\u307e\u3067\u9023\u643a\u3055\u305b\u3066\u307f\u307e\u3057\u305f\u3002API\u306e\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3057\u304b\u30cd\u30bf\u306b\u542b\u3081\u306a\u304b\u3063\u305f\u306e\u3067\u30a4\u30de\u30a4\u30c1\u5b9f\u611f\u304c\u308f\u304b\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4f59\u529b\u306e\u3042\u308b\u4eba\u306fAPI\u3092\u5229\u7528\u3059\u308b\u5074\u3082\u4f5c\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6b21\u56de\u306f\u3001\u3082\u3046\u5c11\u3057CRUD\u3092Restful\u306a\u611f\u3058\u3067\u5bfe\u5fdc\u51fa\u6765\u308bAPI\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u304a\u697d\u3057\u307f\u306b\u3002\n", "tags": ["serverless", "APIGateway", "nodejs", "DynamoDB"]}