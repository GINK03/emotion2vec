{"context": "\n\n\u4f7f\u3044\u65b9\ngit clone https://github.com/tukiyo/nadmin\ncd nadmin\nsudo ./nadm.py group1 host1 192.168.1.1\n\n\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\n/etc/nagios3/conf.d/host_group1.cfg\n/etc/nagios3/conf.d/host_group1_check.cfg\n\n\n\u53c2\u8003\n\nYUChoe/nadmin: nagios cfg administrator\n\n\n\u30bd\u30fc\u30b9\n\ndownload\n\n\nnadm.py\n#!/usr/bin/env python \nimport os\nimport sys \ndir = '/etc/nagios3/conf.d'\ndir = '.'\n#------------------------------------------------------\ndef help(emsg):\n    print(emsg)\n    print(\"usage: {} group host ip\").format(sys.argv[0])\n    list()\n\ndef list():\n    for f in os.listdir(dir) :\n        if '.cfg' in f and '_nagios2' not in f:\n            print \"\\t{dir}/{file}\".format(dir=dir,file=f)\n\ndef add(group, host, ip):\n    write(define_host(group, host, ip)\n        ,\"{dir}/host_{group}.cfg\".format(dir=dir, group=group))\n    write(define_chek(group, host, ip)\n        ,\"{dir}/host_{group}_check.cfg\".format(dir=dir, group=group))\n    list()\n\ndef define_host(group, host, ip):\n    form = \"\"\"# {host} ({ip})\"\ndefine host{{\n    use        generic-host\n    host_name  {group}-{host}\n    alias      {host}\n    address    {ip}\n#   check_command return-ok\n    }}\n\"\"\"\n    text = form.format(group=group, host=host, ip=ip)\n    return text\n\n# see: /usr/lib/nagios/plugins/\ndef define_chek(group, host, ip):\n    form = \"\"\"## {host} ({ip})\n#define service{{\n#    service_description Alive\n#    host_name           {group}-{host}\n#    use                 generic-service\n#    check_command       check-host-alive\n#    }}\n\"\"\"\n    text = form.format(group=group, host=host, ip=ip)\n    return text\n\ndef write(txt, fname):\n    fp = open(fname, 'a+')\n    fp.write(txt)\n    fp.close()\n#------------------------------------------------------\nif __name__ == '__main__' :\n    if len(sys.argv) != 4:\n        help('[ERROR] specify argument is wrong.')\n        sys.exit(1)\n\n    add(sys.argv[1], sys.argv[2], sys.argv[3])\n    print(\"check: nagios3 -v /etc/nagios3/nagios.cfg && service nagios3 restart\")\n\n\n\n\n\u4f8b2.1\n\u4e2d\u8eab\u3060\u3051\u51fa\u529b\u3059\u308b\u307b\u3046\u304c\u4f7f\u3044\u3084\u3059\u304b\u3082\u3002\n\nnadm.py\n#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\nimport sys\nimport subprocess\n\nservers = {\n    '0': {'group': 'home', 'host': 'ubuntu1', 'ip': '192.168.0.2'},\n    '1': {'group': 'home', 'host': 'win7-1', 'ip': '192.168.0.3'},\n    '2': {'group': 'home', 'host': 'win7-2', 'ip': '192.168.0.4'},\n}\n\ndef define_host(server):\n  txt = \"## {host} ({ip})\\n\".format(**servers[server])\n  txt+= \"define host{\\n\"\n  txt+= \"    use        generic-host\\n\"\n  txt+= \"    host_name  {group}-{host}\\n\".format(**servers[server])\n  txt+= \"    alias      {host}\\n\".format(**servers[server])\n  txt+= \"    address    {ip}\\n\".format(**servers[server])\n  txt+= \"#   check_command return-ok\\n\"\n  txt+= \"    }\\n\"\n  return txt\n\nif __name__ == '__main__':\n    for server in sorted(servers):\n        print define_host(server)\n\n\n\n\u4f8b2.2 \u4e09\u9023\u30af\u30a9\u30fc\u30c8\u3092\u4f7f\u3046\u5834\u5408\n\nformat\u3092\u4f7f\u3046\u5834\u5408\u306f{\u306f{{\u3001}\u306f}}\u3068\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\nimport sys\nimport subprocess\n\nservers = {\n    '0': {'group': 'home', 'host': 'ubuntu1', 'ip': '192.168.0.2'},\n    '1': {'group': 'home', 'host': 'win7-1', 'ip': '192.168.0.3'},\n    '2': {'group': 'home', 'host': 'win7-2', 'ip': '192.168.0.4'},\n}\n\ndef define_host(server):\n  form = \"\"\"## {host} ({ip})\ndefine host{{\n    use        generic-host\n    host_name  {group}-{host}\n    alias      {host}\n    address    {ip}\n#   check_command return-ok\n    }}\n\"\"\"\n  text = form.format(**servers[server])\n  return text\n\nif __name__ == '__main__':\n    for server in sorted(servers):\n        print define_host(server)\n\n## \u4f7f\u3044\u65b9\n\n```bash:\ngit clone https://github.com/tukiyo/nadmin\ncd nadmin\nsudo ./nadm.py group1 host1 192.168.1.1\n```\n\n\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\n* /etc/nagios3/conf.d/host_group1.cfg\n* /etc/nagios3/conf.d/host_group1_check.cfg\n\n## \u53c2\u8003\n\n* [YUChoe/nadmin: nagios cfg administrator](https://github.com/YUChoe/nadmin)\n\n## \u30bd\u30fc\u30b9\n\n* [download](https://github.com/tukiyo/nadmin)\n\n```py:nadm.py\n#!/usr/bin/env python \nimport os\nimport sys \ndir = '/etc/nagios3/conf.d'\ndir = '.'\n#------------------------------------------------------\ndef help(emsg):\n    print(emsg)\n    print(\"usage: {} group host ip\").format(sys.argv[0])\n    list()\n\ndef list():\n    for f in os.listdir(dir) :\n        if '.cfg' in f and '_nagios2' not in f:\n            print \"\\t{dir}/{file}\".format(dir=dir,file=f)\n\ndef add(group, host, ip):\n    write(define_host(group, host, ip)\n        ,\"{dir}/host_{group}.cfg\".format(dir=dir, group=group))\n    write(define_chek(group, host, ip)\n        ,\"{dir}/host_{group}_check.cfg\".format(dir=dir, group=group))\n    list()\n\ndef define_host(group, host, ip):\n    form = \"\"\"# {host} ({ip})\"\ndefine host{{\n    use        generic-host\n    host_name  {group}-{host}\n    alias      {host}\n    address    {ip}\n#   check_command return-ok\n    }}\n\"\"\"\n    text = form.format(group=group, host=host, ip=ip)\n    return text\n\n# see: /usr/lib/nagios/plugins/\ndef define_chek(group, host, ip):\n    form = \"\"\"## {host} ({ip})\n#define service{{\n#    service_description Alive\n#    host_name           {group}-{host}\n#    use                 generic-service\n#    check_command       check-host-alive\n#    }}\n\"\"\"\n    text = form.format(group=group, host=host, ip=ip)\n    return text\n\ndef write(txt, fname):\n    fp = open(fname, 'a+')\n    fp.write(txt)\n    fp.close()\n#------------------------------------------------------\nif __name__ == '__main__' :\n    if len(sys.argv) != 4:\n        help('[ERROR] specify argument is wrong.')\n        sys.exit(1)\n\n    add(sys.argv[1], sys.argv[2], sys.argv[3])\n    print(\"check: nagios3 -v /etc/nagios3/nagios.cfg && service nagios3 restart\")\n```\n\n----\n\n## \u4f8b2.1\n\n\u4e2d\u8eab\u3060\u3051\u51fa\u529b\u3059\u308b\u307b\u3046\u304c\u4f7f\u3044\u3084\u3059\u304b\u3082\u3002\n\n```py:nadm.py\n#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\nimport sys\nimport subprocess\n\nservers = {\n    '0': {'group': 'home', 'host': 'ubuntu1', 'ip': '192.168.0.2'},\n    '1': {'group': 'home', 'host': 'win7-1', 'ip': '192.168.0.3'},\n    '2': {'group': 'home', 'host': 'win7-2', 'ip': '192.168.0.4'},\n}\n\ndef define_host(server):\n  txt = \"## {host} ({ip})\\n\".format(**servers[server])\n  txt+= \"define host{\\n\"\n  txt+= \"    use        generic-host\\n\"\n  txt+= \"    host_name  {group}-{host}\\n\".format(**servers[server])\n  txt+= \"    alias      {host}\\n\".format(**servers[server])\n  txt+= \"    address    {ip}\\n\".format(**servers[server])\n  txt+= \"#   check_command return-ok\\n\"\n  txt+= \"    }\\n\"\n  return txt\n\nif __name__ == '__main__':\n    for server in sorted(servers):\n        print define_host(server)\n```\n\n## \u4f8b2.2 \u4e09\u9023\u30af\u30a9\u30fc\u30c8\u3092\u4f7f\u3046\u5834\u5408\n\n* format\u3092\u4f7f\u3046\u5834\u5408\u306f`{`\u306f`{{`\u3001`}`\u306f`}}`\u3068\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n```py:\n#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\nimport sys\nimport subprocess\n\nservers = {\n    '0': {'group': 'home', 'host': 'ubuntu1', 'ip': '192.168.0.2'},\n    '1': {'group': 'home', 'host': 'win7-1', 'ip': '192.168.0.3'},\n    '2': {'group': 'home', 'host': 'win7-2', 'ip': '192.168.0.4'},\n}\n\ndef define_host(server):\n  form = \"\"\"## {host} ({ip})\ndefine host{{\n    use        generic-host\n    host_name  {group}-{host}\n    alias      {host}\n    address    {ip}\n#   check_command return-ok\n    }}\n\"\"\"\n  text = form.format(**servers[server])\n  return text\n\nif __name__ == '__main__':\n    for server in sorted(servers):\n        print define_host(server)\n```\n", "tags": ["Python", "Nagios"]}