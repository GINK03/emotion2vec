{"tags": ["Objective-C", "sqlite", "iPhone"], "context": " More than 1 year has passed since last update.\u307e\u305aSQLite\u306e\u74b0\u5883\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u300clibsqlite3.0.dylib\u300d\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n#import <sqlite3.h>\n\nMySQL\u3067\u306f\u8ddd\u96e2\u691c\u7d22\u6a5f\u80fd\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001SQLite\u306b\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002C\u8a00\u8a9e\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u53ef\u80fd\u306a\u3088\u3046\u3067\u3059\u3002\n\u8a00\u8a9e\u3092\u6df7\u305c\u3066\u3082\u554f\u984c\u306a\u3044\u70b9\u306f\u9055\u548c\u611f\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u51e6\u7406\u304c\u901f\u3044\u3088\u3046\u3067\u3059\u3057\u3044\u3044\u3067\u3059\u306d\uff01\n#define DEG2RAD(degrees) (degrees * 0.01745327) // degrees * pi over 180\n\nstatic void distanceFunc(sqlite3_context *context, int argc, sqlite3_value **argv)\n{\n    // check that we have four arguments (lat1, lon1, lat2, lon2)\n    assert(argc == 4);\n    // check that all four arguments are non-null\n    if (sqlite3_value_type(argv[0]) == SQLITE_NULL || sqlite3_value_type(argv[1]) == SQLITE_NULL || sqlite3_value_type(argv[2]) == SQLITE_NULL || sqlite3_value_type(argv[3]) == SQLITE_NULL) {\n        sqlite3_result_null(context);\n        return;\n    }\n    // get the four argument values\n    double lat1 = sqlite3_value_double(argv[0]);\n    double lon1 = sqlite3_value_double(argv[1]);\n    double lat2 = sqlite3_value_double(argv[2]);\n    double lon2 = sqlite3_value_double(argv[3]);\n    // convert lat1 and lat2 into radians now, to avoid doing it twice below\n    double lat1rad = DEG2RAD(lat1);\n    double lat2rad = DEG2RAD(lat2);\n    // apply the spherical law of cosines to our latitudes and longitudes, and set the result appropriately\n    // 6378.1 is the approximate radius of the earth in kilometres\n    sqlite3_result_double(context, acos(sin(lat1rad) * sin(lat2rad) + cos(lat1rad) * cos(lat2rad) * cos(DEG2RAD(lon2) - DEG2RAD(lon1))) * 6378.1);\n}\n\n\n\u6b21\u306biOS\u7aef\u672b\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u300cCoreLocation\u300d\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u8aad\u307f\u8fbc\u307f\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u901a\u3057\u307e\u3059\u3002\n#import <CoreLocation/CoreLocation.h>\n@interface Hoge : UIViewController<CLLocationManagerDelegate>{\n     CLLocationManager *locationManager;\n     //\u6700\u65b0\u306e\u73fe\u5728\u5730\u3092\u4fdd\u6301\n     CLLocation *location;\n}\n\n\n- (void) startUpdatingLocation{\n    locationManager = [[CLLocationManager alloc] init];\n    locationManager.delegate = self;\n    //\u6307\u5b9a\u3057\u305fM\u79fb\u52d5\u3057\u305f\u3089\u4f4d\u7f6e\u60c5\u5831\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u540830cm\u3068\u306a\u308a\u307e\u3059\u3002\n    locationManager.distanceFilter = 0.3;\n    [locationManager startUpdatingLocation];\n}\n\n//view\u306e\u7834\u68c4\u6642\u306a\u3069\u306b\u3066\u3001\u4f4d\u7f6e\u60c5\u5831\u306e\u66f4\u65b0\u3092\u6b62\u3081\u307e\u3059\u3002\n- (void)viewDidUnload{\n     [locationManager stopUpdatingLocation];\n}\n\n//\u4f4d\u7f6e\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u305f\u969b\u306b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n- (void)locationManager:(CLLocationManager *)manager didUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation{\n     location = newLocation;\n     [self search];//(\u5f8c\u8ff0\u3057\u307e\u3059\u30c7\u30fc\u30bf\u691c\u7d22\u51e6\u7406\u3068\u306a\u308a\u307e\u3059\u3002)\n}\n\n\n\u7def\u5ea6\u7d4c\u5ea6\u306e\u60c5\u5831\u304c\u5165\u3063\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\nLita\u3068\u3044\u3046\u30bd\u30d5\u30c8\u3060\u3068\u4f5c\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\u4eca\u56de\u300clat\u300d\u300clng\u300d\u304c\u30ab\u30e9\u30e0\u540d\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n-(void) search{\n    NSString *filePath = [[NSBundle mainBundle] pathForResource:@\"Assets/hoge\" ofType:@\"db\"];\n    if(sqlite3_open([filePath UTF8String], &db) == SQLITE_OK){\n\n        //\u5148\u307b\u3069\u306e\u95a2\u6570\u3092SQLite\u3067\u4f7f\u3048\u308b\u3088\u3046\u5b9a\u7fa9\n        sqlite3_create_function(db, \"distance\", 4, SQLITE_UTF8, NULL, &distanceFunc, NULL, NULL);\n\n        NSString *query = [NSString stringWithFormat:@\"SELECT * FROM Hoge ORDER BY distance(lat,lng,%f,%f) LIMIT 1\",location.coordinate.latitude,location.coordinate.longitude];\n\n\n        sqlite3_stmt *selectstmt;\n        if (sqlite3_prepare_v2(db, [query UTF8String], -1, &selectstmt, NULL) == SQLITE_OK) {\n\n            //\u691c\u7d22\u7d50\u679c\u306f\u4eca\u56de1\u4ef6\u306e\u307f\u3067\u3059\u304c\u3001\u8907\u6570\u306e\u691c\u7d22\u7d50\u679c\u3092\u30eb\u30fc\u30d7\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n            while (sqlite3_step(selectstmt) == SQLITE_ROW) {                   \n                   //\u30ec\u30b3\u30fc\u30c9\u30c7\u30fc\u30bf\u306e\u578b\u3092\u5909\u63db\u3057\u307e\u3059\u3002\n                   NSString *ansLat = [NSString stringWithUTF8String:(char *)sqlite3_column_text(selectstmt, 1)];\n                   NSString *ansLng = [NSString stringWithUTF8String:(char *)sqlite3_column_text(selectstmt, 2)];\n            }\n\n        }\n     }\n}\n\n\n\u4eca\u56de\u76f4\u63a5SQLite\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u300cFMDB\u300d\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u306e\u3067\u4ee5\u4e0b\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\u25cf\u53c2\u8003\n\u30fbDistance function for sqlite\nhttp://www.thismuchiknow.co.uk/?p=71\n\u30fb\u3010iPhone\u3011SQLite\u306b\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\u3059\u308b(Distance function for sqlite)\nhttp://d.hatena.ne.jp/PoohKid/comment/20111025/1319510153\n\u4f59\u8ac7\u3067\u3059\u304cCLLocation\u3092\u4f7f\u3046\u3068\u3001\u4e8c\u70b9\u306e\u8ddd\u96e2\u304c\u3060\u305b\u305f\u308a\u8272\u3005\u4fbf\u5229\u3067\u3059\u3002\n\u7def\u5ea6\u7d4c\u5ea6\u3092\u53d6\u5f97\u3059\u308b\u969b\u306fcoordinate\u30d7\u30ed\u30d1\u30c6\u30a3\u307e\u3067\u53c2\u7167\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3002\nCLLocationDirection distanceM = [location distanceFromLocation:searchLocation];\n\n\n\u307e\u305aSQLite\u306e\u74b0\u5883\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u300clibsqlite3.0.dylib\u300d\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```objectivec\n#import <sqlite3.h>\n```\n\nMySQL\u3067\u306f\u8ddd\u96e2\u691c\u7d22\u6a5f\u80fd\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001SQLite\u306b\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002C\u8a00\u8a9e\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u53ef\u80fd\u306a\u3088\u3046\u3067\u3059\u3002\n\n\u8a00\u8a9e\u3092\u6df7\u305c\u3066\u3082\u554f\u984c\u306a\u3044\u70b9\u306f\u9055\u548c\u611f\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u51e6\u7406\u304c\u901f\u3044\u3088\u3046\u3067\u3059\u3057\u3044\u3044\u3067\u3059\u306d\uff01\n\n```objectivec\n#define DEG2RAD(degrees) (degrees * 0.01745327) // degrees * pi over 180\n\nstatic void distanceFunc(sqlite3_context *context, int argc, sqlite3_value **argv)\n{\n    // check that we have four arguments (lat1, lon1, lat2, lon2)\n    assert(argc == 4);\n    // check that all four arguments are non-null\n    if (sqlite3_value_type(argv[0]) == SQLITE_NULL || sqlite3_value_type(argv[1]) == SQLITE_NULL || sqlite3_value_type(argv[2]) == SQLITE_NULL || sqlite3_value_type(argv[3]) == SQLITE_NULL) {\n        sqlite3_result_null(context);\n        return;\n    }\n    // get the four argument values\n    double lat1 = sqlite3_value_double(argv[0]);\n    double lon1 = sqlite3_value_double(argv[1]);\n    double lat2 = sqlite3_value_double(argv[2]);\n    double lon2 = sqlite3_value_double(argv[3]);\n    // convert lat1 and lat2 into radians now, to avoid doing it twice below\n    double lat1rad = DEG2RAD(lat1);\n    double lat2rad = DEG2RAD(lat2);\n    // apply the spherical law of cosines to our latitudes and longitudes, and set the result appropriately\n    // 6378.1 is the approximate radius of the earth in kilometres\n    sqlite3_result_double(context, acos(sin(lat1rad) * sin(lat2rad) + cos(lat1rad) * cos(lat2rad) * cos(DEG2RAD(lon2) - DEG2RAD(lon1))) * 6378.1);\n}\n\n```\n\n\u6b21\u306biOS\u7aef\u672b\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u300cCoreLocation\u300d\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u8aad\u307f\u8fbc\u307f\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u901a\u3057\u307e\u3059\u3002\n\n```objectivec\n#import <CoreLocation/CoreLocation.h>\n@interface Hoge : UIViewController<CLLocationManagerDelegate>{\n     CLLocationManager *locationManager;\n     //\u6700\u65b0\u306e\u73fe\u5728\u5730\u3092\u4fdd\u6301\n     CLLocation *location;\n}\n```\n\n```objectivec\n\n- (void) startUpdatingLocation{\n    locationManager = [[CLLocationManager alloc] init];\n    locationManager.delegate = self;\n    //\u6307\u5b9a\u3057\u305fM\u79fb\u52d5\u3057\u305f\u3089\u4f4d\u7f6e\u60c5\u5831\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u540830cm\u3068\u306a\u308a\u307e\u3059\u3002\n    locationManager.distanceFilter = 0.3;\n    [locationManager startUpdatingLocation];\n}\n\n//view\u306e\u7834\u68c4\u6642\u306a\u3069\u306b\u3066\u3001\u4f4d\u7f6e\u60c5\u5831\u306e\u66f4\u65b0\u3092\u6b62\u3081\u307e\u3059\u3002\n- (void)viewDidUnload{\n     [locationManager stopUpdatingLocation];\n}\n\n//\u4f4d\u7f6e\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u305f\u969b\u306b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n- (void)locationManager:(CLLocationManager *)manager didUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation{\n     location = newLocation;\n     [self search];//(\u5f8c\u8ff0\u3057\u307e\u3059\u30c7\u30fc\u30bf\u691c\u7d22\u51e6\u7406\u3068\u306a\u308a\u307e\u3059\u3002)\n}\n\n```\n\n\n\u7def\u5ea6\u7d4c\u5ea6\u306e\u60c5\u5831\u304c\u5165\u3063\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\nLita\u3068\u3044\u3046\u30bd\u30d5\u30c8\u3060\u3068\u4f5c\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\u4eca\u56de\u300clat\u300d\u300clng\u300d\u304c\u30ab\u30e9\u30e0\u540d\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```objectivec\n\n-(void) search{\n    NSString *filePath = [[NSBundle mainBundle] pathForResource:@\"Assets/hoge\" ofType:@\"db\"];\n    if(sqlite3_open([filePath UTF8String], &db) == SQLITE_OK){\n\n        //\u5148\u307b\u3069\u306e\u95a2\u6570\u3092SQLite\u3067\u4f7f\u3048\u308b\u3088\u3046\u5b9a\u7fa9\n        sqlite3_create_function(db, \"distance\", 4, SQLITE_UTF8, NULL, &distanceFunc, NULL, NULL);\n\n        NSString *query = [NSString stringWithFormat:@\"SELECT * FROM Hoge ORDER BY distance(lat,lng,%f,%f) LIMIT 1\",location.coordinate.latitude,location.coordinate.longitude];\n\n\n        sqlite3_stmt *selectstmt;\n        if (sqlite3_prepare_v2(db, [query UTF8String], -1, &selectstmt, NULL) == SQLITE_OK) {\n\n            //\u691c\u7d22\u7d50\u679c\u306f\u4eca\u56de1\u4ef6\u306e\u307f\u3067\u3059\u304c\u3001\u8907\u6570\u306e\u691c\u7d22\u7d50\u679c\u3092\u30eb\u30fc\u30d7\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n            while (sqlite3_step(selectstmt) == SQLITE_ROW) {                   \n                   //\u30ec\u30b3\u30fc\u30c9\u30c7\u30fc\u30bf\u306e\u578b\u3092\u5909\u63db\u3057\u307e\u3059\u3002\n                   NSString *ansLat = [NSString stringWithUTF8String:(char *)sqlite3_column_text(selectstmt, 1)];\n                   NSString *ansLng = [NSString stringWithUTF8String:(char *)sqlite3_column_text(selectstmt, 2)];\n            }\n\n        }\n     }\n}\n\n```\n\n\u4eca\u56de\u76f4\u63a5SQLite\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u300cFMDB\u300d\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u306e\u3067\u4ee5\u4e0b\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\n\u25cf\u53c2\u8003\n\u30fbDistance function for sqlite\nhttp://www.thismuchiknow.co.uk/?p=71\n\n\u30fb\u3010iPhone\u3011SQLite\u306b\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\u3059\u308b(Distance function for sqlite)\nhttp://d.hatena.ne.jp/PoohKid/comment/20111025/1319510153\n\n\n\n\n\u4f59\u8ac7\u3067\u3059\u304cCLLocation\u3092\u4f7f\u3046\u3068\u3001\u4e8c\u70b9\u306e\u8ddd\u96e2\u304c\u3060\u305b\u305f\u308a\u8272\u3005\u4fbf\u5229\u3067\u3059\u3002\n\u7def\u5ea6\u7d4c\u5ea6\u3092\u53d6\u5f97\u3059\u308b\u969b\u306fcoordinate\u30d7\u30ed\u30d1\u30c6\u30a3\u307e\u3067\u53c2\u7167\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3002\n\n```objectivec\nCLLocationDirection distanceM = [location distanceFromLocation:searchLocation];\n```\n\n\n"}