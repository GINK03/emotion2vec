{"context": " More than 1 year has passed since last update.\u4f8b\u306fPostgreSQL(8.0\u4ee5\u524d)\u3060\u304c\u3001\u7d99\u627f\u3059\u308bDialect\u3092\u5909\u3048\u308c\u3070\u4ed6\u306eDB\u3067\u3082\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u308b\u306f\u305a\n\nCustomPostgreDialect.java\npackage sample.dialect;\n\nimport javax.persistence.TemporalType;\n\nimport org.joda.time.DateTime;\nimport org.seasar.extension.jdbc.PropertyMeta;\nimport org.seasar.extension.jdbc.ValueType;\nimport org.seasar.extension.jdbc.dialect.PostgreDialect;\n\nimport sample.types.DateTimeTimestampType;\n\npublic class CustomPostgreDialect extends PostgreDialect {\n    private static final ValueType DATETIME_TIMESTAMP = new DateTimeTimestampType();\n\n    @Override\n    public ValueType getValueType(PropertyMeta propertyMeta) {\n        if (DateTime.class == propertyMeta.getPropertyClass()) {\n            return DATETIME_TIMESTAMP;\n        }\n        return super.getValueType(propertyMeta);\n    }\n\n    @Override\n    public ValueType getValueType(Class<?> clazz, boolean lob,\n            TemporalType temporalType) {\n        if (DateTime.class == clazz) {\n            return DATETIME_TIMESTAMP;\n        }\n        return super.getValueType(clazz, lob, temporalType);\n    }\n}\n\n\n\nDateTimeTimestampType.java\npackage sample.types;\n\nimport java.sql.CallableStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.Date;\n\nimport org.joda.time.DateTime;\nimport org.seasar.extension.jdbc.types.DateTimestampType;\n\npublic class DateTimeTimestampType extends DateTimestampType {\n    @Override\n    public Object getValue(ResultSet resultSet, int index) throws SQLException {\n        return toDateTimeFromDate(resultSet.getTimestamp(index));\n    }\n\n    @Override\n    public Object getValue(ResultSet resultSet, String columnName)\n            throws SQLException {\n        return toDateTimeFromDate(resultSet.getTimestamp(columnName));\n    }\n\n    @Override\n    public Object getValue(CallableStatement cs, int index) throws SQLException {\n        return toDateTimeFromDate(cs.getTimestamp(index));\n    }\n\n    @Override\n    public Object getValue(CallableStatement cs, String parameterName)\n            throws SQLException {\n        return toDateTimeFromDate(cs.getTimestamp(parameterName));\n    }\n\n    @Override\n    protected Date toDate(Object value) {\n        if (value instanceof DateTime) {\n            return toDateFromDateTime((DateTime) value);\n        }\n        return super.toDate(value);\n    }\n\n    /**\n     * {@link Date}\u304b\u3089{@link DateTime}\u306b\u5909\u63db\u3059\u308b.\n     * \n     * @param date\n     *            {@link Date}\u306e\u5024\n     * @return {@link DateTime}\u306e\u5024\n     */\n    protected DateTime toDateTimeFromDate(Date date) {\n        if (date == null) {\n            return null;\n        }\n        return new DateTime(date);\n    }\n\n    /**\n     * {@link DateTime}\u304b\u3089{@link Date}\u306b\u5909\u63db\u3059\u308b.\n     * \n     * @param dateTime\n     *            {@link DateTime}\u306e\u5024\n     * @return {@link Date}\u306e\u5024\n     */\n    protected Date toDateFromDateTime(DateTime dateTime) {\n        if (dateTime == null) {\n            return null;\n        }\n        return dateTime.toDate();\n    }\n}\n\n\nS2JDBC\u306e\u62e1\u5f35\u65b9\u6cd5\n\ns2jdbc.dicon\u306edialect\u90e8\n        <property name=\"dialect\">\n            <component class=\"sample.dialect.CustomPostgreDialect\" />\n        </property>\n\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30af\u30e9\u30b9\u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\n    @Column\n    public DateTime dateTime;\n\ns2jdbc-gen\u3068\u306e\u9023\u643a\u306f\u4e00\u5207\u8003\u616e\u3057\u3066\u306a\u3044\u306e\u3067\u6ce8\u610f\n\u52d5\u4f5c\u78ba\u8a8d\u4e2d\u306a\u306e\u3067\u4e0d\u5177\u5408\u304c\u3042\u3063\u305f\u3089\u662f\u975e\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n\nSeasar2 - S2JDBC - \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3#\u6642\u5236\u5b9a\u7fa9\n\u6642\u5236\u5b9a\u7fa9(\u4e0a\u8a18URL)\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3001\nDialect\u306egetValueType\u30e1\u30bd\u30c3\u30c9\u3067TemporalType\u306e\u5024\u3092\u53d6\u5f97\u3057\u3066\nValueType\u3092\u632f\u308a\u5206\u3051\u308b\u51e6\u7406\u3082\u5165\u308c\u3088\u3046\u3068\u601d\u3063\u305f\u304c\njava.util.Date\u3068java.util.Calendar\u4ee5\u5916\u306e\u578b\u3060\u3068TemporalType\u304c\u53d6\u5f97\u3067\u304d\u306a\u3044\u3002\nPropertyMetaFactory\u3092\u62e1\u5f35\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3002\n\u6a5f\u4f1a\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u306e\u62e1\u5f35\u3082\u6311\u6226\u3057\u3066\u307f\u307e\u3059\u3002\n\u4f8b\u306fPostgreSQL(8.0\u4ee5\u524d)\u3060\u304c\u3001\u7d99\u627f\u3059\u308bDialect\u3092\u5909\u3048\u308c\u3070\u4ed6\u306eDB\u3067\u3082\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u308b\u306f\u305a\n\n```CustomPostgreDialect.java\npackage sample.dialect;\n\nimport javax.persistence.TemporalType;\n\nimport org.joda.time.DateTime;\nimport org.seasar.extension.jdbc.PropertyMeta;\nimport org.seasar.extension.jdbc.ValueType;\nimport org.seasar.extension.jdbc.dialect.PostgreDialect;\n\nimport sample.types.DateTimeTimestampType;\n\npublic class CustomPostgreDialect extends PostgreDialect {\n\tprivate static final ValueType DATETIME_TIMESTAMP = new DateTimeTimestampType();\n\n\t@Override\n\tpublic ValueType getValueType(PropertyMeta propertyMeta) {\n\t\tif (DateTime.class == propertyMeta.getPropertyClass()) {\n\t\t\treturn DATETIME_TIMESTAMP;\n\t\t}\n\t\treturn super.getValueType(propertyMeta);\n\t}\n\n\t@Override\n\tpublic ValueType getValueType(Class<?> clazz, boolean lob,\n\t\t\tTemporalType temporalType) {\n\t\tif (DateTime.class == clazz) {\n\t\t\treturn DATETIME_TIMESTAMP;\n\t\t}\n\t\treturn super.getValueType(clazz, lob, temporalType);\n\t}\n}\n```\n\n```DateTimeTimestampType.java\npackage sample.types;\n\nimport java.sql.CallableStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.Date;\n\nimport org.joda.time.DateTime;\nimport org.seasar.extension.jdbc.types.DateTimestampType;\n\npublic class DateTimeTimestampType extends DateTimestampType {\n\t@Override\n\tpublic Object getValue(ResultSet resultSet, int index) throws SQLException {\n\t\treturn toDateTimeFromDate(resultSet.getTimestamp(index));\n\t}\n\n\t@Override\n\tpublic Object getValue(ResultSet resultSet, String columnName)\n\t\t\tthrows SQLException {\n\t\treturn toDateTimeFromDate(resultSet.getTimestamp(columnName));\n\t}\n\n\t@Override\n\tpublic Object getValue(CallableStatement cs, int index) throws SQLException {\n\t\treturn toDateTimeFromDate(cs.getTimestamp(index));\n\t}\n\n\t@Override\n\tpublic Object getValue(CallableStatement cs, String parameterName)\n\t\t\tthrows SQLException {\n\t\treturn toDateTimeFromDate(cs.getTimestamp(parameterName));\n\t}\n\n\t@Override\n\tprotected Date toDate(Object value) {\n\t\tif (value instanceof DateTime) {\n\t\t\treturn toDateFromDateTime((DateTime) value);\n\t\t}\n\t\treturn super.toDate(value);\n\t}\n\n\t/**\n\t * {@link Date}\u304b\u3089{@link DateTime}\u306b\u5909\u63db\u3059\u308b.\n\t * \n\t * @param date\n\t *            {@link Date}\u306e\u5024\n\t * @return {@link DateTime}\u306e\u5024\n\t */\n\tprotected DateTime toDateTimeFromDate(Date date) {\n\t\tif (date == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new DateTime(date);\n\t}\n\n\t/**\n\t * {@link DateTime}\u304b\u3089{@link Date}\u306b\u5909\u63db\u3059\u308b.\n\t * \n\t * @param dateTime\n\t *            {@link DateTime}\u306e\u5024\n\t * @return {@link Date}\u306e\u5024\n\t */\n\tprotected Date toDateFromDateTime(DateTime dateTime) {\n\t\tif (dateTime == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn dateTime.toDate();\n\t}\n}\n```\n\n[S2JDBC\u306e\u62e1\u5f35\u65b9\u6cd5](http://qiita.com/items/83da36742110b1247b16 \"S2JDBC\u306e\u62e1\u5f35\u65b9\u6cd5\")\n\n```s2jdbc.dicon\u306edialect\u90e8\n\t\t<property name=\"dialect\">\n\t\t\t<component class=\"sample.dialect.CustomPostgreDialect\" />\n\t\t</property>\n```\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30af\u30e9\u30b9\u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\n\n```\n    @Column\n    public DateTime dateTime;\n```\n\ns2jdbc-gen\u3068\u306e\u9023\u643a\u306f\u4e00\u5207\u8003\u616e\u3057\u3066\u306a\u3044\u306e\u3067\u6ce8\u610f\n\u52d5\u4f5c\u78ba\u8a8d\u4e2d\u306a\u306e\u3067\u4e0d\u5177\u5408\u304c\u3042\u3063\u305f\u3089\u662f\u975e\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n\n- - -\n\n[Seasar2 - S2JDBC - \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3#\u6642\u5236\u5b9a\u7fa9](http://s2container.seasar.org/2.4/ja/s2jdbc_entity.html#\u6642\u5236\u5b9a\u7fa9)\n\u6642\u5236\u5b9a\u7fa9(\u4e0a\u8a18URL)\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3001\nDialect\u306egetValueType\u30e1\u30bd\u30c3\u30c9\u3067TemporalType\u306e\u5024\u3092\u53d6\u5f97\u3057\u3066\nValueType\u3092\u632f\u308a\u5206\u3051\u308b\u51e6\u7406\u3082\u5165\u308c\u3088\u3046\u3068\u601d\u3063\u305f\u304c\njava.util.Date\u3068java.util.Calendar\u4ee5\u5916\u306e\u578b\u3060\u3068TemporalType\u304c\u53d6\u5f97\u3067\u304d\u306a\u3044\u3002\nPropertyMetaFactory\u3092\u62e1\u5f35\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3002\n\u6a5f\u4f1a\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u306e\u62e1\u5f35\u3082\u6311\u6226\u3057\u3066\u307f\u307e\u3059\u3002\n", "tags": ["Seasar2", "S2JDBC"]}