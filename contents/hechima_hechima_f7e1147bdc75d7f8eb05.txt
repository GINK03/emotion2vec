{"context": "\u4eca\u56de\u306fsys_pipe()\u3092\u8aad\u3080\n\u30ab\u30fc\u30cd\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306flinux-4.5\n\nUNIX\u3067\u5229\u7528\u3067\u304d\u308b\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306e\u4ed5\u7d44\u307f\n\nUNIX\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306e\u3056\u3063\u304f\u308a\u5206\u985e\n\n\u30d1\u30a4\u30d7\u3068FIFO\u3000\u2190\u4eca\u56de\u306f\u30b3\u30b3\u306b\u3064\u3044\u3066\u66f8\u304f\u3088\uff01 \n\u30bb\u30de\u30d5\u30a9\nIPC(systemV)\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\n\u5171\u6709\u30e1\u30e2\u30ea\u30ea\u30fc\u30b8\u30e7\u30f3\n\n\n\u30bd\u30b1\u30c3\u30c8\n\n\n19\u7ae0\u3067\u306f\u3001\u307b\u307c\u89e3\u8aac\u306a\u3057\uff1f\n\n\n\n\n\u30d1\u30a4\u30d7\u51e6\u7406\u306b\u3042\u305f\u308a\u91cd\u8981\u306a\u95a2\u6570\n\npipe() \u2190\u3068\u308a\u307e\u30b3\u30ec\u3092\u8aad\u3080\n\n\npopen() \u2190pipe()\u3092\u4f7f\u7528\u3057\u3066\u308b\npclose()\n\n\nfork()\nclose()\ndup2()\nexecve()\ndup3()\n\nPOSIX\u3067\u306f\u7247\u65b9\u5411\u306e\u30d1\u30a4\u30d7\u3057\u304b\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\n\u2192\u53cc\u65b9\u5411\u901a\u4fe1\u304c\u5fc5\u8981\u306a\u5834\u5408\u306fpipe()\u30922\u56de\u884c\u3046\n\npipe()\u3092\u8aad\u3080\npipe()\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u898b\u3064\u3051\u305f\u304f\u3066sys_pipe\u3067grep\u3057\u305f\u3089\u3053\u3093\u306a\u30b3\u30fc\u30c9\u304c\u898b\u3064\u304b\u3063\u305f\n\nfs/pipe.c\nSYSCALL_DEFINE1(pipe, int __user *, fildes)\n{\n        return sys_pipe2(fildes, 0);\n}\n\n\nsys_pipe2\u306f arch/x86/entry/syscalls/syscall_32.tbl\n331     i386    pipe2                   sys_pipe2\n\u306b\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304b\u308c\u3066\u308b\n\u3067\uff1f\u3069\u3053\u306bsys_pipe2\u304c\u3042\u3093\u306e\uff1f\ngtags\u3067\u5b9a\u7fa9\u5143\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u3088\u3046\u3068\u3057\u3066\u3082\"sys_pipe2: tag not found\"\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3063\u305f\nlinux-2.6.0\u3070\u3063\u304b\u308a\u3088\u3093\u3067\u305f\u306e\u3067sys_pipe2\u3067grep\u3057\u3066\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u9014\u65b9\u306b\u304f\u308c\u3066\u3057\u307e\u3046\u3001\u3001\u3001\u3001\n\u5b9f\u306fSYSCALL_DEFINE1(pipe, int __user *, fildes)\u306e\u771f\u4e0a\u306b\u3053\u3093\u306a\u95a2\u6570\u304c\u3042\u308b\n\u3053\u308c\u304csys_pipe2\u306e\u6b63\u4f53\u3063\u307d\u3044\n\nfs/pipe.c\n\u2028SYSCALL_DEFINE2(pipe2, int __user *, fildes, int, flags)\n{\n        struct file *files[2];\n        int fd[2];\n        int error;\n\n        error = __do_pipe_flags(fd, files, flags);\n        if (!error) {\n                if (unlikely(copy_to_user(fildes, fd, sizeof(fd)))) {\n                        fput(files[0]);\n                        fput(files[1]);\n                        put_unused_fd(fd[0]);\n                        put_unused_fd(fd[1]);\n                        error = -EFAULT;\n                } else {\n                        fd_install(fd[0], files[0]);\n                        fd_install(fd[1], files[1]);\n                }\n        }\n        return error;\n}\n\n\n\u3069\u3046\u3084\u30892.6\u3068\u306f\u9055\u3044sys_*\u3067\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u5b9a\u7fa9\u3057\u306a\u304f\u306a\u3063\u305f\u3089\u3057\u3044\n\u3067\u3001\u3053\u306eSYSCALL_DEFINE\u304c\u4f55\u306a\u306e\u304b\u306b\u3064\u3044\u3066\u306f\u7d20\u6674\u3089\u3057\u3044\u30b5\u30a4\u30c8\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u3061\u3089\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff08\u4e38\u6295\u3052\uff09\nSYSCALL_DEFINE2(pipe2, int __user *, fildes, int, flags)\u3092\u4f8b\u306b\u30b6\u30c3\u30af\u30ea\u8aac\u660e\u3059\u308b\u3068\n\n\n\n\u5c5e\u6027\n\u610f\u5473\n\n\n\n\nSYSCALL_DEFINE2\n2\u306f\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u5f15\u6570\u306e\u6570 1,3\u3082\u3042\u308b\u3088\n\n\npipe2\n\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u540d sys_\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u540d\u3092\u5b9a\u7fa9\u3059\u308b\n\n\nint __user *\n\uff1f\uff1f\uff1f\n\n\nfildes\n\u5f15\u65701\n\n\nint, flags\nSYSCALL_DEFINE\u3067\u306f\u578b\u540d\u3068\u5f15\u6570\u540d\u3092,\u3067\u533a\u5207\u308b\n\n\n\n\u3053\u3093\u306a\u611f\u3058\nsys_pipe2\u306e\u30b6\u30c3\u30af\u30ea\u6982\u8981\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u3044\u305f\u306e\u304c\u30b3\u30c1\u30e9\n\nfs/pipe.c\n\u2028SYSCALL_DEFINE2(pipe2, int __user *, fildes, int, flags)\n{\n        struct file *files[2];\n        int fd[2];\n        int error;\n\n        //flags\u3092\u898b\u3066error\u304b\u3069\u3046\u304b\u5224\u5b9a\u3068\u304b\u3057\u3066\u308b\n        error = __do_pipe_flags(fd, files, flags);\n        if (!error) {\n                if (unlikely(copy_to_user(fildes, fd, sizeof(fd)))) {\n                        fput(files[0]);\n                        fput(files[1]);\n                        put_unused_fd(fd[0]);\n                        put_unused_fd(fd[1]);\n                        error = -EFAULT;\n                } else {\n                        fd_install(fd[0], files[0]);\n                        fd_install(fd[1], files[1]);\n                }\n        }\n        return error;\n}\n\n\n\u3053\u306elinux\u306esys_pipe\u3067\u3059\u304c\u3001xv6\u306epipe()\u3068\u3063\u3066\u3082\u8fd1\u3044\nint p[2];\nchar *argv[2];\n\nargv[0] = \"wc\";\nargv[1] = 0;\n\npipe(p);\nif(fork() == 0) {\n  close(0);\n  dup(p[0]);\n  close(p[0]);\n  close(p[1]);\n  exec(\"/bin/wc\", argv);\n} else {\n  write(p[1], \"hello world\\n\", 12);\n  close(p[0]);\n  close(p[1]);\n}\n\n\n\u4eca\u56de\u306fsys_pipe()\u3092\u8aad\u3080\n\u30ab\u30fc\u30cd\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306flinux-4.5\n\n## UNIX\u3067\u5229\u7528\u3067\u304d\u308b\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306e\u4ed5\u7d44\u307f\n###UNIX\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306e\u3056\u3063\u304f\u308a\u5206\u985e\n- \u30d1\u30a4\u30d7\u3068FIFO\u3000\u2190\u4eca\u56de\u306f\u30b3\u30b3\u306b\u3064\u3044\u3066\u66f8\u304f\u3088\uff01 \n- \u30bb\u30de\u30d5\u30a9\n- IPC(systemV)\n\t- \u30e1\u30c3\u30bb\u30fc\u30b8\n\t- \u5171\u6709\u30e1\u30e2\u30ea\u30ea\u30fc\u30b8\u30e7\u30f3\n- \u30bd\u30b1\u30c3\u30c8\n\t- 19\u7ae0\u3067\u306f\u3001\u307b\u307c\u89e3\u8aac\u306a\u3057\uff1f\n\n###\u30d1\u30a4\u30d7\u51e6\u7406\u306b\u3042\u305f\u308a\u91cd\u8981\u306a\u95a2\u6570\n- pipe() \u2190\u3068\u308a\u307e\u30b3\u30ec\u3092\u8aad\u3080\n\t- popen() \u2190pipe()\u3092\u4f7f\u7528\u3057\u3066\u308b\n\t- pclose()\n- fork()\n- close()\n- dup2()\n- execve()\n- dup3()\n\nPOSIX\u3067\u306f\u7247\u65b9\u5411\u306e\u30d1\u30a4\u30d7\u3057\u304b\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\n\u2192\u53cc\u65b9\u5411\u901a\u4fe1\u304c\u5fc5\u8981\u306a\u5834\u5408\u306fpipe()\u30922\u56de\u884c\u3046\n\n##pipe()\u3092\u8aad\u3080\npipe()\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u898b\u3064\u3051\u305f\u304f\u3066`sys_pipe`\u3067grep\u3057\u305f\u3089\u3053\u3093\u306a\u30b3\u30fc\u30c9\u304c\u898b\u3064\u304b\u3063\u305f\n\n```fs/pipe.c\nSYSCALL_DEFINE1(pipe, int __user *, fildes)\n{\n        return sys_pipe2(fildes, 0);\n}\n```\n\nsys_pipe2\u306f arch/x86/entry/syscalls/syscall_32.tbl\n`331     i386    pipe2                   sys_pipe2`\n\u306b\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304b\u308c\u3066\u308b\n\n\u3067\uff1f\u3069\u3053\u306bsys_pipe2\u304c\u3042\u3093\u306e\uff1f\ngtags\u3067\u5b9a\u7fa9\u5143\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u3088\u3046\u3068\u3057\u3066\u3082\"sys_pipe2: tag not found\"\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3063\u305f\nlinux-2.6.0\u3070\u3063\u304b\u308a\u3088\u3093\u3067\u305f\u306e\u3067sys_pipe2\u3067grep\u3057\u3066\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u9014\u65b9\u306b\u304f\u308c\u3066\u3057\u307e\u3046\u3001\u3001\u3001\u3001\n\n\u5b9f\u306f`SYSCALL_DEFINE1(pipe, int __user *, fildes)`\u306e\u771f\u4e0a\u306b\u3053\u3093\u306a\u95a2\u6570\u304c\u3042\u308b\n\u3053\u308c\u304csys_pipe2\u306e\u6b63\u4f53\u3063\u307d\u3044\n\n```fs/pipe.c\n\u2028SYSCALL_DEFINE2(pipe2, int __user *, fildes, int, flags)\n{\n        struct file *files[2];\n        int fd[2];\n        int error;\n\n        error = __do_pipe_flags(fd, files, flags);\n        if (!error) {\n                if (unlikely(copy_to_user(fildes, fd, sizeof(fd)))) {\n                        fput(files[0]);\n                        fput(files[1]);\n                        put_unused_fd(fd[0]);\n                        put_unused_fd(fd[1]);\n                        error = -EFAULT;\n                } else {\n                        fd_install(fd[0], files[0]);\n                        fd_install(fd[1], files[1]);\n                }\n        }\n        return error;\n}\n```\n\u3069\u3046\u3084\u30892.6\u3068\u306f\u9055\u3044sys_*\u3067\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u5b9a\u7fa9\u3057\u306a\u304f\u306a\u3063\u305f\u3089\u3057\u3044\n\u3067\u3001\u3053\u306eSYSCALL_DEFINE\u304c\u4f55\u306a\u306e\u304b\u306b\u3064\u3044\u3066\u306f[\u7d20\u6674\u3089\u3057\u3044\u30b5\u30a4\u30c8](http://softwaretechnique.jp/Linux/SystemCall/sc_02.html)\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u3061\u3089\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff08\u4e38\u6295\u3052\uff09\n\n`SYSCALL_DEFINE2(pipe2, int __user *, fildes, int, flags)`\u3092\u4f8b\u306b\u30b6\u30c3\u30af\u30ea\u8aac\u660e\u3059\u308b\u3068\n\n| \t\u5c5e\u6027 \t\t\t| \u610f\u5473 |\n|:---------------:|:-------:|\n| SYSCALL_DEFINE2\t|2\u306f\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u5f15\u6570\u306e\u6570 1,3\u3082\u3042\u308b\u3088|\n| pipe2        \t|\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u540d sys_\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u540d\u3092\u5b9a\u7fa9\u3059\u308b|\n|int __user *    \t|\uff1f\uff1f\uff1f        |\n| fildes        \t|\u5f15\u65701|\n|int, flags      \t|SYSCALL_DEFINE\u3067\u306f\u578b\u540d\u3068\u5f15\u6570\u540d\u3092,\u3067\u533a\u5207\u308b|\n\u3053\u3093\u306a\u611f\u3058\n\nsys_pipe2\u306e\u30b6\u30c3\u30af\u30ea\u6982\u8981\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u3044\u305f\u306e\u304c\u30b3\u30c1\u30e9\n\n```fs/pipe.c\n\u2028SYSCALL_DEFINE2(pipe2, int __user *, fildes, int, flags)\n{\n        struct file *files[2];\n        int fd[2];\n        int error;\n        \n        //flags\u3092\u898b\u3066error\u304b\u3069\u3046\u304b\u5224\u5b9a\u3068\u304b\u3057\u3066\u308b\n        error = __do_pipe_flags(fd, files, flags);\n        if (!error) {\n                if (unlikely(copy_to_user(fildes, fd, sizeof(fd)))) {\n                        fput(files[0]);\n                        fput(files[1]);\n                        put_unused_fd(fd[0]);\n                        put_unused_fd(fd[1]);\n                        error = -EFAULT;\n                } else {\n                        fd_install(fd[0], files[0]);\n                        fd_install(fd[1], files[1]);\n                }\n        }\n        return error;\n}\n```\n\n\u3053\u306elinux\u306esys_pipe\u3067\u3059\u304c\u3001xv6\u306epipe()\u3068\u3063\u3066\u3082\u8fd1\u3044\n\n```xv6\u306epipe()\nint p[2];\nchar *argv[2];\n \nargv[0] = \"wc\";\nargv[1] = 0;\n \npipe(p);\nif(fork() == 0) {\n  close(0);\n  dup(p[0]);\n  close(p[0]);\n  close(p[1]);\n  exec(\"/bin/wc\", argv);\n} else {\n  write(p[1], \"hello world\\n\", 12);\n  close(p[0]);\n  close(p[1]);\n}\n```\n", "tags": ["Linux", "kernel"]}