{"context": " More than 1 year has passed since last update.\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u3057\u3066\u516c\u958b\u3059\u308b\u307b\u3069\u306e\u3082\u3093\u3067\u3082\u306a\u3044\u3051\u3069\u3001\nJavaEE (CDI) \u3067\u30a2\u30d7\u30ea\u4f5c\u308b\u6642\u306b\u306f\u6bce\u56de\u540c\u3058\u3088\u3046\u306a\u3082\u306e\u3092\u5b9f\u88c5\u3059\u308b\u306e\u3067\u4e00\u5fdc\u516c\u958b\u3002\nCDI \u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u30fc\u3067\u3059\u3002\n\u5b9f\u884c\u30e1\u30bd\u30c3\u30c9\u306e\u30c8\u30ec\u30fc\u30b9\u60c5\u5831\u3092\u51fa\u529b\u3057\u307e\u3059\u3002(\u958b\u59cb, \u7d42\u4e86, \u5f15\u6570, \u623b\u308a\u5024, \u51e6\u7406\u6642\u9593\uff65\uff65\uff65)\n\nTraceableBean.java\n@Trace(loggingLevel = LoggingLevel.DEBUG)\npublic class TraceableBean {\n    public String hello(String who) {\n        return \"Hi. \" + who;\n    }\n}\n\n\n\n\u3053\u3093\u306a\u611f\u3058 \u2191 \u3067\u5b9f\u88c5\u3059\u308b\u3068\u3001\n\u3053\u3093\u306a\u611f\u3058 \u2193 \u3067\u30ed\u30b0\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nDEBUG - [Started  ] TraceableBean#hello()\nDEBUG - [Completed] TraceableBean#hello() return [Hi. Taro] ........ Time is 4 ms.\n\n\u307e\u305a\u306f \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e\u305f\u3081\u306e\u305f \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092  \n\nTrace.java\n@InterceptorBinding\n@Target(value = {ElementType.METHOD, ElementType.TYPE })\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface Trace {\n\n    @Nonbinding // \u30ed\u30b0\u51fa\u529b\u306e\u30ec\u30d9\u30eb\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002DEBUG \u3068\u304b INFO \u3068\u304b\u3068\u304b\u30fb\u30fb\n    LoggingLevel loggingLevel() default LoggingLevel.DEBUG;\n\n    @Nonbinding // \u958b\u59cb\u6642\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\"[\u958b\u59cb]\" \u3068\u304b\u3002\n    String prefixStarted() default \"[Started  ]\";\n\n    @Nonbinding // \u7d42\u4e86\u6642\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\"[\u6210\u529f]\" \u3068\u304b\u3002\n    String prefixCompleted() default \"[Completed]\";\n\n    @Nonbinding // \u4f8b\u5916\u6642\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\"[\u4f8b\u5916]\" \u3068\u304b\u3002\n    String prefixSuspended() default \"[Suspended]\";\n\n    public enum LoggingLevel { TRACE, DEBUG, INFO, WARN, ERROR; }\n}\n\n\n\u7d9a\u3044\u3066 \u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u30fc\u3092  \n\nTraceInterceptor.java\n@Interceptor\n@Dependent\n@Trace\n@Priority(Interceptor.Priority.APPLICATION)\npublic class TraceInterceptor implements Serializable {\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(TraceInterceptor.class);\n\n    private static final String NULL = \"NULL\";\n\n    @AroundInvoke\n    public Object invoke(final InvocationContext ctx) throws Throwable {\n\n        Trace anno = (ctx.getMethod().isAnnotationPresent(Trace.class))\n            ? ctx.getMethod().getAnnotation(Trace.class)\n            : ctx.getTarget().getClass().getSuperclass().getAnnotation(Trace.class);\n\n        if (anno == null || !isLoggerEnabled(anno.loggingLevel())) {\n            return ctx.proceed();\n        }\n\n        String clazz = ClassUtils.getShortClassName(ctx.getTarget().getClass().getSuperclass());\n        String method = ctx.getMethod().getName();\n        String args = (ctx.getParameters() != null && 0 < ctx.getParameters().length)\n            ? StringUtils.join(ctx.getParameters(), ',') : StringUtils.EMPTY;\n\n        log(anno.loggingLevel(), \"{} {}#{}({})\", anno.prefixStarted(), clazz, method, args);\n\n        Object completed = null;\n        Throwable suspened = null;\n\n        StopWatch stopWatch = new StopWatch();\n        stopWatch.start();\n        try {\n            completed = ctx.proceed();\n            return completed;\n        } catch (Throwable t) {\n            suspened = t;\n            throw t;\n        } finally {\n            stopWatch.stop();\n            if (suspened == null) {\n                log(anno.loggingLevel(), \"{} {}#{}({}) return [{}] ........ Time is {} ms.\",\n                    anno.prefixCompleted(),\n                    clazz,\n                    method,\n                    args,\n                    ObjectUtils.defaultIfNull(completed, NULL),\n                    stopWatch.getTime());\n            } else {\n                log(anno.loggingLevel(), \"{} {}#{}({}) throw [{}] '{}' ........ Time is {} ms.\",\n                    anno.prefixSuspended(),\n                    clazz,\n                    method,\n                    args,\n                    ClassUtils.getShortClassName(suspened.getClass()),\n                    suspened.getMessage(),\n                    stopWatch.getTime());\n            }\n        }\n    }\n\n    protected boolean isLoggerEnabled(LoggingLevel loggingLevel) {\n        ....\n    }\n\n    protected void log(LoggingLevel loggingLevel, String format, Object... args) {\n        ....\n    }\n\n}\n\n\n\u5b9f\u969b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3053\u3002  \nhttps://github.com/ardito-jp/easyfly/blob/master/easyfly-cdi/src/main/java/jp/ardito/easyfly/cdi/tool/interceptor/Trace.java\nhttps://github.com/ardito-jp/easyfly/blob/master/easyfly-cdi/src/main/java/jp/ardito/easyfly/cdi/tool/interceptor/TraceInterceptor.java\n\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u3057\u3066\u516c\u958b\u3059\u308b\u307b\u3069\u306e\u3082\u3093\u3067\u3082\u306a\u3044\u3051\u3069\u3001\nJavaEE (CDI) \u3067\u30a2\u30d7\u30ea\u4f5c\u308b\u6642\u306b\u306f\u6bce\u56de\u540c\u3058\u3088\u3046\u306a\u3082\u306e\u3092\u5b9f\u88c5\u3059\u308b\u306e\u3067\u4e00\u5fdc\u516c\u958b\u3002\n\nCDI \u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u30fc\u3067\u3059\u3002\n\u5b9f\u884c\u30e1\u30bd\u30c3\u30c9\u306e\u30c8\u30ec\u30fc\u30b9\u60c5\u5831\u3092\u51fa\u529b\u3057\u307e\u3059\u3002(\u958b\u59cb, \u7d42\u4e86, \u5f15\u6570, \u623b\u308a\u5024, \u51e6\u7406\u6642\u9593\uff65\uff65\uff65)\n\n\n```java:TraceableBean.java\n@Trace(loggingLevel = LoggingLevel.DEBUG)\npublic class TraceableBean {\n\tpublic String hello(String who) {\n\t\treturn \"Hi. \" + who;\n\t}\n}\n\n```\n\n\u3053\u3093\u306a\u611f\u3058 \u2191 \u3067\u5b9f\u88c5\u3059\u308b\u3068\u3001\n\u3053\u3093\u306a\u611f\u3058 \u2193 \u3067\u30ed\u30b0\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\nDEBUG - [Started  ] TraceableBean#hello()\nDEBUG - [Completed] TraceableBean#hello() return [Hi. Taro] ........ Time is 4 ms.\n```\n\n\n\n\n\u307e\u305a\u306f \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e\u305f\u3081\u306e\u305f \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092 :kissing_closed_eyes: \n\n```java:Trace.java\n@InterceptorBinding\n@Target(value = {ElementType.METHOD, ElementType.TYPE })\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface Trace {\n\n\t@Nonbinding // \u30ed\u30b0\u51fa\u529b\u306e\u30ec\u30d9\u30eb\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002DEBUG \u3068\u304b INFO \u3068\u304b\u3068\u304b\u30fb\u30fb\n\tLoggingLevel loggingLevel() default LoggingLevel.DEBUG;\n\n\t@Nonbinding // \u958b\u59cb\u6642\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\"[\u958b\u59cb]\" \u3068\u304b\u3002\n\tString prefixStarted() default \"[Started  ]\";\n\n\t@Nonbinding // \u7d42\u4e86\u6642\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\"[\u6210\u529f]\" \u3068\u304b\u3002\n\tString prefixCompleted() default \"[Completed]\";\n\n\t@Nonbinding // \u4f8b\u5916\u6642\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\"[\u4f8b\u5916]\" \u3068\u304b\u3002\n\tString prefixSuspended() default \"[Suspended]\";\n\n\tpublic enum LoggingLevel { TRACE, DEBUG, INFO, WARN, ERROR; }\n}\n```\n\n\u7d9a\u3044\u3066 \u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u30fc\u3092 :kissing_heart: \n\n```java:TraceInterceptor.java\n@Interceptor\n@Dependent\n@Trace\n@Priority(Interceptor.Priority.APPLICATION)\npublic class TraceInterceptor implements Serializable {\n\n\tprivate static final Logger LOGGER = LoggerFactory.getLogger(TraceInterceptor.class);\n\n\tprivate static final String NULL = \"NULL\";\n\n\t@AroundInvoke\n\tpublic Object invoke(final InvocationContext ctx) throws Throwable {\n\n\t\tTrace anno = (ctx.getMethod().isAnnotationPresent(Trace.class))\n\t\t\t? ctx.getMethod().getAnnotation(Trace.class)\n\t\t\t: ctx.getTarget().getClass().getSuperclass().getAnnotation(Trace.class);\n\n\t\tif (anno == null || !isLoggerEnabled(anno.loggingLevel())) {\n\t\t\treturn ctx.proceed();\n\t\t}\n\n\t\tString clazz = ClassUtils.getShortClassName(ctx.getTarget().getClass().getSuperclass());\n\t\tString method = ctx.getMethod().getName();\n\t\tString args = (ctx.getParameters() != null && 0 < ctx.getParameters().length)\n\t\t\t? StringUtils.join(ctx.getParameters(), ',') : StringUtils.EMPTY;\n\n\t\tlog(anno.loggingLevel(), \"{} {}#{}({})\", anno.prefixStarted(), clazz, method, args);\n\n\t\tObject completed = null;\n\t\tThrowable suspened = null;\n\n\t\tStopWatch stopWatch = new StopWatch();\n\t\tstopWatch.start();\n\t\ttry {\n\t\t\tcompleted = ctx.proceed();\n\t\t\treturn completed;\n\t\t} catch (Throwable t) {\n\t\t\tsuspened = t;\n\t\t\tthrow t;\n\t\t} finally {\n\t\t\tstopWatch.stop();\n\t\t\tif (suspened == null) {\n\t\t\t\tlog(anno.loggingLevel(), \"{} {}#{}({}) return [{}] ........ Time is {} ms.\",\n\t\t\t\t\tanno.prefixCompleted(),\n\t\t\t\t\tclazz,\n\t\t\t\t\tmethod,\n\t\t\t\t\targs,\n\t\t\t\t\tObjectUtils.defaultIfNull(completed, NULL),\n\t\t\t\t\tstopWatch.getTime());\n\t\t\t} else {\n\t\t\t\tlog(anno.loggingLevel(), \"{} {}#{}({}) throw [{}] '{}' ........ Time is {} ms.\",\n\t\t\t\t\tanno.prefixSuspended(),\n\t\t\t\t\tclazz,\n\t\t\t\t\tmethod,\n\t\t\t\t\targs,\n\t\t\t\t\tClassUtils.getShortClassName(suspened.getClass()),\n\t\t\t\t\tsuspened.getMessage(),\n\t\t\t\t\tstopWatch.getTime());\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected boolean isLoggerEnabled(LoggingLevel loggingLevel) {\n\t\t....\n\t}\n\n\tprotected void log(LoggingLevel loggingLevel, String format, Object... args) {\n\t\t....\n\t}\n\n}\n```\n\n\n\u5b9f\u969b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3053\u3002 :+1: \nhttps://github.com/ardito-jp/easyfly/blob/master/easyfly-cdi/src/main/java/jp/ardito/easyfly/cdi/tool/interceptor/Trace.java\nhttps://github.com/ardito-jp/easyfly/blob/master/easyfly-cdi/src/main/java/jp/ardito/easyfly/cdi/tool/interceptor/TraceInterceptor.java\n", "tags": ["JavaEE", "CDI"]}