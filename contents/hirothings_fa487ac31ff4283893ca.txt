{"context": "\n\nWKWebview\u3068\u306f\nUIWebview\u3088\u308a\u3082\u51e6\u7406\u304c\u9ad8\u901f\u304b\u3064\u3001JS\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u5468\u308a\u306e\u51e6\u7406\u304c\u5b89\u5b9a\u3057\u3066\u3044\u308b\u3002\niOS8\u4ee5\u964d\u304b\u3089\u4f7f\u7528\u53ef\u80fd\u3002\ngoogleChrome\u306eiOS\u30a2\u30d7\u30ea\u3082WKWebview\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\nApple\u306e\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3082\nFor new development, employ this class instead of the older UIWebView class.\n\u3068\u3042\u308b\u306e\u3067\u3001\u30c7\u30d5\u30a9\u3067\u3053\u306eClass\u3092\u4f7f\u3046\u3002\n\n1. \u5ba3\u8a00\nWKWebView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nWKWebView\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u6307\u5b9a\n\u203b WKNavigationDelegate\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092Class\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\nclass WebViewController: UIViewController, WKNavigationDelegate {\n\n  \u30fb\n\u3000\u30fb\n\n  webview = WKWebView()\n  webview.navigationDelegate = self\n  webview.translatesAutoresizingMaskIntoConstraints = false        \n\n\n2. \u30ec\u30a4\u30a2\u30a6\u30c8\nStoryBoard\u4e0a\u3067\u306fWKWebview\u3092\u914d\u7f6e\u3067\u304d\u306a\u3044\u306e\u3067\u3001\n\u30b3\u30fc\u30c9\u3067AutoLayout\u306e\u5236\u7d04\u3092\u4ed8\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u203b NSLayoutAnchor(iOS9\u4ee5\u964d)\u3092\u4f7f\u3046\u3068AutoLayout\u306e\u8a18\u8ff0\u3092CSS\u30e9\u30a4\u30af\u306b\u7c21\u5358\u306b\u66f8\u3051\u307e\u3059\ncontainerView.addSubview(webview!)\n\n// \u4e0a\u8fba\u306e\u5236\u7d04\nwebview.topAnchor.constraintEqualToAnchor(containerView.topAnchor, constant: 0.0).active = true\n// \u4e0b\u8fba\u306e\u5236\u7d04\nwebview.bottomAnchor.constraintEqualToAnchor(containerView.bottomAnchor, constant: 0.0).active = true\n// \u5de6\u8fba\u306e\u5236\u7d04\nwebview.leadingAnchor.constraintEqualToAnchor(containerView.leadingAnchor, constant: 0.0).active = true\n// \u53f3\u8fba\u306e\u5236\u7d04\nwebview.trailingAnchor.constraintEqualToAnchor(containerView.trailingAnchor, constant: 0.0).active = true\n\n\n\u30b9\u30ef\u30a4\u30d7\u3067\u623b\u308b\u30fb\u9032\u3080\nwebview.allowsBackForwardNavigationGestures = true\n\u306b\u3059\u308b\u3068\u3001\u30b9\u30ef\u30a4\u30d7\u64cd\u4f5c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n2. web\u30b5\u30a4\u30c8\u306e\u8868\u793a\nloadReqest\u30e1\u30bd\u30c3\u30c9\u3067\u30da\u30fc\u30b8\u3092\u8868\u793a\nlet request = NSURLRequest(URL: url!)\nwebview.loadRequest(request)\n\n\n3. \u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u7f6e\n\u623b\u308b\u30fb\u9032\u3080\u30dc\u30bf\u30f3\u306e\u8a2d\u7f6e\u306e\u4ed5\u65b9\u3067\u3059\u304c\u3001\u3053\u3053\u306f\u4ee5\u524d\u306eUIWebVIew\u3068\u4e00\u7dd2\u3067\u3059\u3002\nToolbar\u3092StoryBoard\u3067\u8a2d\u7f6e\u3057\u3001\u4eca\u56de\u306f\u30b3\u30fc\u30c9\u3067\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3057\u307e\u3057\u305f\u3002\nfunc creatToolbarItems() {\n\n    let backBtnImage = UIImage(named: \"back\")\n    let fowardBtnImage = UIImage(named: \"next\")    \n    let flexbleItem = UIBarButtonItem(barButtonSystemItem: .FlexibleSpace, target: nil, action: nil)\n\n    // \u623b\u308b\u30fb\u9032\u3080\u30fb\u30ea\u30ed\u30fc\u30c9\u30dc\u30bf\u30f3\u306e\u8a2d\u7f6e\n    goBackBtn = UIBarButtonItem(image: backBtnImage, style: .Plain, target: self, action: #selector(goBack))\n    goFowardBtn = UIBarButtonItem(image: fowardBtnImage, style: .Plain, target: self, action: #selector(goFoward))\n    refreshBtn = UIBarButtonItem(barButtonSystemItem: .Refresh, target: self, action: #selector(refresh))\n\n    toolbar.items = [goBackBtn, goFowardBtn, flexbleItem, refreshBtn]\n}\n\n\n4. \u30c7\u30ea\u30b2\u30fc\u30c8\nWKNavigation\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\n\u8aad\u307f\u8fbc\u307f\u958b\u59cb\u301c\u8aad\u307f\u8fbc\u307f\u5b8c\u4e86\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3088\u304f\u4f7f\u3046\u4f8b\u3068\u3057\u3066\u3001\n\u30d6\u30e9\u30a6\u30b6\u30d0\u30c3\u30af\u304c\u3067\u304d\u308b\u304b\u5224\u5b9a\u3057\u3066\u3001back\u30dc\u30bf\u30f3\u306eON,OFF\u3092\u5207\u308a\u66ff\u3048\u308b\n\u51e6\u7406\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n// \u30da\u30fc\u30b8\u8aad\u307f\u8fbc\u307f\u5b8c\u4e86\u6642\u3001\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\nfunc webView(webView: WKWebView, didFinishNavigation navigation: WKNavigation!) {\n    if webview.canGoBack {\n        goBackBtn.tintColor = nil\n    } else {\n        goBackBtn.tintColor = UIColor.grayColor()\n    }\n}\n\n\n\u6ce8\uff1atarget=\"_blank\"\u306a\u30ea\u30f3\u30af\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u958b\u304d\u307e\u305b\u3093\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u5185\u306b\ntarget=\"_blank\"\u306e\u5834\u5408\u306e\u51e6\u7406\u3092\u8a18\u8ff0\nfunc webView(webView: WKWebView, decidePolicyForNavigationAction navigationAction: WKNavigationAction, decisionHandler: (WKNavigationActionPolicy) -> Void) {\n\n    guard let url = navigationAction.request.URL else {\n        decisionHandler(.Cancel)\n        return\n    }\n\n    // target=\"_blank\"\u306e\u5834\u5408\n    if navigationAction.navigationType == WKNavigationType.LinkActivated {\n        if navigationAction.targetFrame == nil || !(navigationAction.targetFrame!.mainFrame) {\n            webview.loadRequest(NSURLRequest.init(URL: url))\n            decisionHandler(.Cancel)\n            return\n        }\n    }\n\n    decisionHandler(.Allow)\n}\n\n\n\u5b8c\u6210\uff01\n\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nWKWebView\u3067target=\"_blank\"\u306a\u30ea\u30f3\u30af\u304c\u958b\u304b\u306a\u3044\u6642\u306e\u5bfe\u51e6\u6cd5\nhttp://qiita.com/ShingoFukuyama/items/b3a1441025a36ab7659c\n## WKWebview\u3068\u306f\nUIWebview\u3088\u308a\u3082\u51e6\u7406\u304c\u9ad8\u901f\u304b\u3064\u3001JS\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u5468\u308a\u306e\u51e6\u7406\u304c\u5b89\u5b9a\u3057\u3066\u3044\u308b\u3002\niOS8\u4ee5\u964d\u304b\u3089\u4f7f\u7528\u53ef\u80fd\u3002\ngoogleChrome\u306eiOS\u30a2\u30d7\u30ea\u3082WKWebview\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\n\n[Apple\u306e\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://developer.apple.com/library/ios/documentation/WebKit/Reference/WKWebView_Ref/)\u306b\u3082\nFor new development, employ this class instead of the older UIWebView class.\n\u3068\u3042\u308b\u306e\u3067\u3001\u30c7\u30d5\u30a9\u3067\u3053\u306eClass\u3092\u4f7f\u3046\u3002\n\n## 1. \u5ba3\u8a00\nWKWebView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nWKWebView\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u6307\u5b9a\n\u203b WKNavigationDelegate\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092Class\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\n\n```\nclass WebViewController: UIViewController, WKNavigationDelegate {\n\n  \u30fb\n\u3000\u30fb\n\n  webview = WKWebView()\n  webview.navigationDelegate = self\n  webview.translatesAutoresizingMaskIntoConstraints = false        \n```\n\n## 2. \u30ec\u30a4\u30a2\u30a6\u30c8\nStoryBoard\u4e0a\u3067\u306fWKWebview\u3092\u914d\u7f6e\u3067\u304d\u306a\u3044\u306e\u3067\u3001\n\u30b3\u30fc\u30c9\u3067AutoLayout\u306e\u5236\u7d04\u3092\u4ed8\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u203b NSLayoutAnchor(iOS9\u4ee5\u964d)\u3092\u4f7f\u3046\u3068AutoLayout\u306e\u8a18\u8ff0\u3092CSS\u30e9\u30a4\u30af\u306b\u7c21\u5358\u306b\u66f8\u3051\u307e\u3059\n\n```swift\ncontainerView.addSubview(webview!)\n\n// \u4e0a\u8fba\u306e\u5236\u7d04\nwebview.topAnchor.constraintEqualToAnchor(containerView.topAnchor, constant: 0.0).active = true\n// \u4e0b\u8fba\u306e\u5236\u7d04\nwebview.bottomAnchor.constraintEqualToAnchor(containerView.bottomAnchor, constant: 0.0).active = true\n// \u5de6\u8fba\u306e\u5236\u7d04\nwebview.leadingAnchor.constraintEqualToAnchor(containerView.leadingAnchor, constant: 0.0).active = true\n// \u53f3\u8fba\u306e\u5236\u7d04\nwebview.trailingAnchor.constraintEqualToAnchor(containerView.trailingAnchor, constant: 0.0).active = true\n```\n\n### \u30b9\u30ef\u30a4\u30d7\u3067\u623b\u308b\u30fb\u9032\u3080\n```webview.allowsBackForwardNavigationGestures = true```\n\u306b\u3059\u308b\u3068\u3001\u30b9\u30ef\u30a4\u30d7\u64cd\u4f5c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n## 2. web\u30b5\u30a4\u30c8\u306e\u8868\u793a\nloadReqest\u30e1\u30bd\u30c3\u30c9\u3067\u30da\u30fc\u30b8\u3092\u8868\u793a\n\n```swift\nlet request = NSURLRequest(URL: url!)\nwebview.loadRequest(request)\n```\n\n## 3. \u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u7f6e\n\u623b\u308b\u30fb\u9032\u3080\u30dc\u30bf\u30f3\u306e\u8a2d\u7f6e\u306e\u4ed5\u65b9\u3067\u3059\u304c\u3001\u3053\u3053\u306f\u4ee5\u524d\u306eUIWebVIew\u3068\u4e00\u7dd2\u3067\u3059\u3002\nToolbar\u3092StoryBoard\u3067\u8a2d\u7f6e\u3057\u3001\u4eca\u56de\u306f\u30b3\u30fc\u30c9\u3067\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3057\u307e\u3057\u305f\u3002\n\n```swift\nfunc creatToolbarItems() {\n    \n    let backBtnImage = UIImage(named: \"back\")\n    let fowardBtnImage = UIImage(named: \"next\")    \n    let flexbleItem = UIBarButtonItem(barButtonSystemItem: .FlexibleSpace, target: nil, action: nil)\n  \n    // \u623b\u308b\u30fb\u9032\u3080\u30fb\u30ea\u30ed\u30fc\u30c9\u30dc\u30bf\u30f3\u306e\u8a2d\u7f6e\n    goBackBtn = UIBarButtonItem(image: backBtnImage, style: .Plain, target: self, action: #selector(goBack))\n    goFowardBtn = UIBarButtonItem(image: fowardBtnImage, style: .Plain, target: self, action: #selector(goFoward))\n    refreshBtn = UIBarButtonItem(barButtonSystemItem: .Refresh, target: self, action: #selector(refresh))\n    \n    toolbar.items = [goBackBtn, goFowardBtn, flexbleItem, refreshBtn]\n}\n```\n\n## 4. \u30c7\u30ea\u30b2\u30fc\u30c8\nWKNavigation\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\n\u8aad\u307f\u8fbc\u307f\u958b\u59cb\u301c\u8aad\u307f\u8fbc\u307f\u5b8c\u4e86\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3088\u304f\u4f7f\u3046\u4f8b\u3068\u3057\u3066\u3001\n\u30d6\u30e9\u30a6\u30b6\u30d0\u30c3\u30af\u304c\u3067\u304d\u308b\u304b\u5224\u5b9a\u3057\u3066\u3001back\u30dc\u30bf\u30f3\u306eON,OFF\u3092\u5207\u308a\u66ff\u3048\u308b\n\u51e6\u7406\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n```swift\n\n// \u30da\u30fc\u30b8\u8aad\u307f\u8fbc\u307f\u5b8c\u4e86\u6642\u3001\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\nfunc webView(webView: WKWebView, didFinishNavigation navigation: WKNavigation!) {\n    if webview.canGoBack {\n        goBackBtn.tintColor = nil\n    } else {\n        goBackBtn.tintColor = UIColor.grayColor()\n    }\n}\n```\n\n\n\n## \u6ce8\uff1atarget=\"_blank\"\u306a\u30ea\u30f3\u30af\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u958b\u304d\u307e\u305b\u3093\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u5185\u306b\ntarget=\"_blank\"\u306e\u5834\u5408\u306e\u51e6\u7406\u3092\u8a18\u8ff0\n\n```swift\nfunc webView(webView: WKWebView, decidePolicyForNavigationAction navigationAction: WKNavigationAction, decisionHandler: (WKNavigationActionPolicy) -> Void) {\n\n    guard let url = navigationAction.request.URL else {\n        decisionHandler(.Cancel)\n        return\n    }\n\n    // target=\"_blank\"\u306e\u5834\u5408\n    if navigationAction.navigationType == WKNavigationType.LinkActivated {\n        if navigationAction.targetFrame == nil || !(navigationAction.targetFrame!.mainFrame) {\n            webview.loadRequest(NSURLRequest.init(URL: url))\n            decisionHandler(.Cancel)\n            return\n        }\n    }\n\n    decisionHandler(.Allow)\n}\n```\n\n## \u5b8c\u6210\uff01\n\n![http://i.giphy.com/26vUMGpwGCXVWRLI4.gif](http://i.giphy.com/26vUMGpwGCXVWRLI4.gif)\n\n## \u53c2\u8003\u30b5\u30a4\u30c8\nWKWebView\u3067target=\"_blank\"\u306a\u30ea\u30f3\u30af\u304c\u958b\u304b\u306a\u3044\u6642\u306e\u5bfe\u51e6\u6cd5\nhttp://qiita.com/ShingoFukuyama/items/b3a1441025a36ab7659c\n", "tags": ["Swift", "Swift2.0", "WKWebView"]}