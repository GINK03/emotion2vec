{"context": "\u4eca\u56de\u306f\u4e3b\u306b\u6570\u5024\u89e3\u6790\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u3068\u304d\u306b\u77e5\u3063\u3066\u304a\u304f\u3068\u4fbf\u5229\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u306a\u308b\u3079\u304f\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u4ed8\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u5206\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u306f\u3054\u611b\u656c1\u3002\n\n\u591a\u9805\u5f0f\u306e\u8a08\u7b97\n\nHorner \u6cd5\n\n\u7406\u8ad6\n\u4f8b\u3048\u3070\u3001\u4e09\u6b21\u5f0f f(x)=a0+a1x+a2x2+a3x3f(x) = a_0 + a_1 x + a_2 x^2 + a_3 x^3 \u3092\u305d\u306e\u307e\u307e\u8a08\u7b97\u3059\u308b\u3068\u4e57\u7b97 6 \u56de\u3001\u52a0\u7b97 3 \u56de\u304c\u5fc5\u8981\u3060\u304c\u3001\n\\begin{align}\nf(x) &= a_0 + a_1 x + (a_2 + a_3 x)x^2 \\\\\n     &= a_0 + (a_1 + (a_2 + a_3 x)x)x\n\\end{align}\nf(x)=a0+a1x+(a2+a3x)x2=a0+(a1+(a2+a3x)x)x{\\begin{align}\nf(x) &= a_0 + a_1 x + (a_2 + a_3 x)x^2 \\\\\n     &= a_0 + (a_1 + (a_2 + a_3 x)x)x\n\\end{align}\n}\n\u3068\u5909\u5f62\u3057\u3066\u304b\u3089\u8a08\u7b97\u3059\u308c\u3070\u3001\u4e57\u7b97 3 \u56de\u3001\u52a0\u7b97 3 \u56de\u3068\u306a\u308b\u3002\u591a\u9805\u5f0f\u306e\u6b21\u6570\u304c\u9ad8\u3044\u307b\u3069\u52b9\u679c\u304c\u9ad8\u3044\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\ndouble horner(double a[], double x) {\n    double f = 0;\n    for(int i = a.length - 1; i >= 0; i--) {\n        f = a[i] + f * x;\n    }\n    return f;\n}\n\n\n\u975e\u7dda\u5f62\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\n\n\u4e8c\u5206\u6cd5\n\n\u7406\u8ad6\nf(x)f(x) \u306f\u533a\u9593 [a,b][a, b] \u3067\u9023\u7d9a\u304b\u3064 f(a)f(b)<0f(a)f(b) < 0 \u3068\u3059\u308b\u3002\u3053\u306e\u3068\u304d\u4e2d\u9593\u5024\u306e\u5b9a\u7406\u306b\u3088\u308a a<c<ba < c < b \u3067 f(c)=0f(c) = 0 \u3068\u306a\u308b\u3082\u306e\u304c\u5b58\u5728\u3059\u308b\u304c\u3001\u3053\u306e cc \u3092\u4ee5\u4e0b\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066\u898b\u3064\u3051\u308b\u306e\u304c\u4e8c\u5206\u6cd5\u3067\u3042\u308b\u3002\u7c21\u5358\u306e\u305f\u3081 f(a)<0,f(b)>0f(a) < 0, f(b) > 0 \u3068\u3059\u308b\u3002\n\na1=a,b1=ba_1 = a, b_1 = b \u3068\u7f6e\u304f\u3002\nan+1a_{n+1} \u3068 bn+1b_{n+1} \u3092\u4ee5\u4e0b\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u6c7a\u5b9a\u3059\u308b\u3002\n\n\nan+bn2>0\\frac{a_n + b_n}{2} > 0 \u306a\u3089\u3070 an+1=an,bn+1=an+bn2.a_{n + 1} = a_n, b_{n + 1} = \\frac{a_n + b_n}{2}.\n\u305d\u3046\u3067\u306a\u3051\u308c\u3070 an+1=an+bn2,bn+1=bn.a_{n + 1} = \\frac{a_n + b_n}{2}, b_{n + 1} = b_n.\n\n\n\n\u3053\u306e\u3068\u304d c=limn\u2192\u221ean=limn\u2192\u221ebnc = \\lim_{n \\to \\infty} a_n = \\lim_{n \\to \\infty} b_n \u3068\u3059\u308c\u3070 f(c)=0f(c) = 0 \u3067\u3042\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\nimport java.util.function.DoubleUnaryOperator;\n\npublic class Equation {\n    static double ERROR = 1e-12; /* Error */\n\n    // Bisection method\n    double bisection(DoubleUnaryOperator f, double a, double b) {\n        double ta = a;\n        double tb = b;\n        while(tb - ta > ERROR) {\n            double tmp = (ta + tb) / 2;\n            if(f.applyAsDouble(tmp) * f.applyAsDouble(tb) > 0) {\n                tb = tmp;\n            } else {\n                ta = tmp;\n            }\n        }\n        return (ta + tb) / 2;\n    }\n}\n\npublic static void main(String args[]) {\n    DoubleUnaryOperator f = x -> x * x - 2;\n    Equation solver = new Equation();\n    System.out.println(solver.bisection(f, 1, 2));\n}\n\n\u9762\u5012\u306a\u306e\u3067\u533a\u9593\u304c\u4e0d\u6b63\u3067\u306a\u3044\u304b\u306e\u30c1\u30a7\u30c3\u30af\u306f\u7701\u7565\u3057\u3066\u307e\u3059\u3002Java8 \u306b\u306a\u3063\u3066\u95a2\u6570\u3092\u307e\u308b\u3063\u3068\u5f15\u6570\u3067\u6e21\u305b\u308b\u306e\u306f\u3044\u3044\u3067\u3059\u306d\u3002\n\nNewton \u6cd5\n\n\u7406\u8ad6\nf(x)f(x) \u306f 2 \u968e\u5fae\u5206\u53ef\u80fd\u3067\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3068\u3059\u308b\u3002\n\nf(a)<0,f(b)>0.f(a) < 0, f(b) > 0.\nf\u2032(x)>0,f\u2033(x)>0(a\u2264x\u2264b).f'(x) > 0, f''(x) > 0 (a \\leq x \\leq b).\n\n\u3053\u306e\u3068\u304d\n\nc1=b.c_1 = b.\ncn+1=cn\u2212f(cn)f\u2032(cn)(n\u22651)c_{n + 1} = c_n - \\frac{f(c_n)}{f'(c_n)} (n \\geq 1)\n\n\u3068\u3059\u308c\u3070\u3001c=limn\u2192\u221ecnc = \\lim_{n \\to \\infty} c_n \u304c\u5b58\u5728\u3057\u3066 f(c)=0.f(c) = 0.\n|g\u2032(c)|=|f(c)f\u2033(c)(f\u2032(c))2|=0<1|g'(c)| = \\left|\\frac{f(c)f''(c)}{(f'(c))^2}\\right| = 0 < 1\n\u306e\u305f\u3081\u3001\u975e\u5e38\u306b\u53ce\u675f\u304c\u65e9\u3044\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\nimport java.util.function.DoubleUnaryOperator;\n\npublic class Equation {\n    static double ERROR = 1e-12; /* Error */\n\n    // Newton method\n    double newton(DoubleUnaryOperator f, DoubleUnaryOperator df, double init) {\n        double c = init;\n        while(Math.abs(f.applyAsDouble(c)) > ERROR) {\n            c -= f.applyAsDouble(c) / df.applyAsDouble(c);\n        }\n        return c;\n    }\n}\n\npublic static void main(String args[]) {\n    DoubleUnaryOperator f = x -> x * x - 2;\n    DoubleUnaryOperator df = x -> 2 * x;\n    Equation solver = new Equation();\n    System.out.println(solver.newton(f, df, 2));\n}\n\n\n\u6570\u5024\u7a4d\u5206\n\u6570\u5024\u7a4d\u5206\u306f\u3001\u7a4d\u5206\u533a\u9593\u3092\u5206\u5272(\u8a08\u7b97\u306e\u90fd\u5408\u4e0a\u7b49\u5206\u3059\u308b\u306e\u304c\u6163\u4f8b)\u3057\u3066\u3001\u305d\u306e\u533a\u9593\u306e\u7a4d\u5206\u3092\u4f55\u3089\u304b\u306e\u5f62\u3067\u8fd1\u4f3c\u8a08\u7b97\u3057\u3001\u5408\u8a08\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6c42\u3081\u308b\u65b9\u6cd5\u3002\u4eca\u56de\u306f\u5206\u304b\u308a\u3084\u3059\u304f\u6709\u754c\u533a\u9593\u4e0a\u306e\u7a4d\u5206\u306b\u9650\u5b9a\u3059\u308b\u3002\n\u4ee5\u4e0b\u3001f(x)f(x) \u306f\u533a\u9593 [a,b][a, b] \u3067\u9023\u7d9a\u306a\u95a2\u6570\u3068\u3059\u308b\u3002\n\n\u53f0\u5f62\u516c\u5f0f\n\n\u7406\u8ad6\n\u533a\u9593 [a,b][a, b] \u3092 nn \u7b49\u5206\u3057\u3001h=b\u2212anh = \\frac{b - a}{n} \u3068\u3059\u308b\u3002\nai=a+ih(i=0,1,\u2026,n)a_i = a + ih (i = 0, 1, \\dots, n) \u3068\u3059\u308b\u3002a0=a,an=ba_0 = a, a_n = b \u3067\u3042\u308b\u3002\n\u533a\u9593 [ai,ai+1][a_i, a_{i + 1}] (i=0,1,\u2026,n\u22121)(i = 0, 1, \\dots, n - 1) \u306b\u304a\u3044\u3066\n\u222bai+1aif(x)dx\\int_{a_i}^{a_{i + 1}}f(x) dx\n\u3092\nh2(f(ai)+f(ai+1))\\frac{h}{2}(f(a_i) + f(a_{i + 1}))\n\u3067\u8fd1\u4f3c\u3059\u308b\u3053\u3068\u306b\u3088\u308a\n\u222bbaf(x)dx\\int_a^b f(x)dx\n\u306f\nh2n=1\u2211i=0(f(ai)+f(ai+1))\\frac{h}{2}\\sum_{i = 0}^{n = 1} (f(a_i) + f(a_{i + 1}))\n\u3067\u8fd1\u4f3c\u3067\u304d\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\nstatic double trapezoid(DoubleUnaryOperator f, double a, double b, int step) {\n    double h = (b - a) / step;\n    double s = 0;\n    for(int i = 0; i < step; i++) {\n        s += (f.applyAsDouble(a + i * h)\n                + f.applyAsDouble(a + (i + 1) * h))\n                * h / 2;\n    }\n    return s;\n}\n\n\nSimpson \u306e\u516c\u5f0f\n\n\u7406\u8ad6\n\u533a\u9593 [a,b][a, b] \u3092 2n2n \u7b49\u5206\u3057\u3001h=b\u2212a2nh = \\frac{b - a}{2n} \u3068\u3059\u308b\u3002\nai=a+ih(i=0,1,\u2026,2n)a_i = a + ih (i = 0, 1, \\dots, 2n) \u3068\u3059\u308b\u3002a0=a,a2n=ba_0 = a, a_{2n} = b \u3067\u3042\u308b\u3002\n\u533a\u9593 [a2i,a2i+2][a_{2i}, a_{2i + 2}] (i=0,1,\u2026,n\u22121)(i = 0, 1, \\dots, n - 1) \u306b\u304a\u3044\u3066\n\u222ba2i+2a2if(x)dx\\int_{a_{2i}}^{a_{2i + 2}}f(x) dx\n\u3092\u3001f(x)f(x) \u3092\u4e09\u70b9 (a2i,f(a2i)),(a2i+1,f(a2i+1)),(a2i+2,f(a2i+2))(a_{2i}, f(a_{2i})), (a_{2i + 1}, f(a_{2i + 1})), (a_{2i + 2}, f(a_{2i + 2})) \u3092\u901a\u308b\u653e\u7269\u7dda\u3067\u8fd1\u4f3c\u3059\u308b\u3053\u3068\u306b\u3088\u308a\nh3(f(a2i)+4f(a2i+1)+f(a2i+2))\\frac{h}{3}(f(a_{2i}) + 4f(a_{2i + 1}) + f(a_{2i + 2}))\n\u3067\u8fd1\u4f3c\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u3053\u308c\u306b\u3088\u308a\n\u222bbaf(x)dx\\int_a^b f(x)dx\n\u306f\nh3n\u22121\u2211i=0(f(a2i)+4f(a2i+1)+f(a2i+2))\\frac{h}{3}\\sum_{i = 0}^{n - 1} (f(a_{2i}) + 4f(a_{2i + 1}) + f(a_{2i + 2}))\n\u3067\u8fd1\u4f3c\u3067\u304d\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\nimport java.util.function.DoubleUnaryOperator;\n\npublic class Integral {\n    public static double simpson(DoubleUnaryOperator f, double a, double b, int step) {\n        double h = (b - a) / step;\n        double s = 0;\n        for(int i = 0; i < step / 2; i++) {\n        s += (f.applyAsDouble(a + 2 * i * h)\n                    + 4 * f.applyAsDouble(a + (2 * i + 1) * h)\n                    + f.applyAsDouble(a + (2 * i + 2) * h))\n                    * h / 3;\n        }\n        return s;\n    }\n}\n\n\u5b9f\u969b\u306b\n\u222b211xdx=log2\\int_1^2 \\frac{1}{x} dx = \\log 2\n\u3092\u8a08\u7b97\u3055\u305b\u308b\u3002\u524d\u56de\u7d50\u679c\u3068\u306e\u5dee\u304c EPS (\u9069\u5b9c\u5b9a\u7fa9\u305b\u3088)\u3088\u308a\u5c0f\u3055\u304f\u306a\u308b\u307e\u3067\u3001\u523b\u307f\u5e45\u3092 10 \u305a\u3064\u5897\u3084\u3057\u3066\u3044\u304f\u3002\npublic static void main(String args[]) {\n    DoubleUnaryOperator f = x -> 1 / x;\n    double a = 1, b = 2;\n    double s;\n    s = Integral.simpson(f, a, b, 1);\n    int n = 10;\n    while(true) {\n        double tmp = Integral.simpson(f, a, b, n);\n        if(Math.abs(s - tmp) < EPS) break;\n        s = tmp;\n        n += 10;\n    }\n    System.out.println(s);\n}\n\n\n\u5e38\u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\n\u4e00\u968e\u306e\u5e38\u5fae\u5206\u65b9\u7a0b\u5f0f\u306e\u521d\u671f\u5024\u554f\u984c\nx\u2032=f(t,x)(x=x(t)),x(t0)=x0\\boldsymbol{x}' = \\boldsymbol{f}(t, \\boldsymbol{x}) (\\boldsymbol{x} = \\boldsymbol{x}(t)), \\boldsymbol{x}(t_0) = \\boldsymbol{x}_0\n\u3092\u6570\u5024\u7684\u306b\u89e3\u6790\u3059\u308b\u65b9\u6cd5\u30021 \u6bb5\u6cd5\u3068\u591a\u6bb5\u6cd5\u304c\u3042\u308b\u304c\u3001\u4eca\u56de\u306f\u5206\u304b\u308a\u3084\u3059\u3044 1 \u6bb5\u6cd5\u306e\u307f\u7d39\u4ecb\u3059\u308b\u3002\n\nEuler \u6cd5\n\n\u7406\u8ad6\nx\u2032(t)=limh\u21920x(t+h)\u2212x(t)h\\boldsymbol{x}'(t) = \\lim_{h \\to 0} \\frac{\\boldsymbol{x}(t + h) - \\boldsymbol{x}(t)}{h}\n\u3092\nx\u2032i=xi+1\u2212xih\\boldsymbol{x}'_i = \\frac{\\boldsymbol{x}_{i + 1} - \\boldsymbol{x}_i}{h}\n\u3067\u8fd1\u4f3c\u3059\u308b\u3002\u305f\u3060\u3057 xi=x(ti),ti=t+ih.\\boldsymbol{x}_i = \\boldsymbol{x}(t_i), t_i = t + ih. \u3053\u3053\u3067\u5143\u306e\u5fae\u5206\u65b9\u7a0b\u5f0f\u306b\u3088\u308a x\u2032i=f(ti,xi)\\boldsymbol{x}_i' = \\boldsymbol{f}(t_i, \\boldsymbol{x}_i) \u3067\u3042\u308b\u304b\u3089\nxi+1=xi+hf(ti,xi)\\boldsymbol{x}_{i + 1} = \\boldsymbol{x}_i + h \\boldsymbol{f}(t_i, \\boldsymbol{x}_i)\n\u3067\u9010\u6b21\u89e3\u66f2\u7dda\u3092\u8fd1\u4f3c\u3067\u304d\u308b\u3002\u305f\u3060\u3057\u8aa4\u5dee\u306f\u523b\u307f\u5e45\u306b\u6bd4\u4f8b\u3059\u308b\u306e\u3067\u3001\u523b\u307f\u5e45\u3092\u304b\u306a\u308a\u7d30\u304b\u304f\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3046\u3048\u3001\u305d\u308c\u306b\u4f34\u3046\u8a08\u7b97\u91cf\u306e\u5897\u52a0\u306b\u3088\u308a\u4e38\u3081\u8aa4\u5dee\u304c\u84c4\u7a4d\u3057\u3084\u3059\u3044\u5f31\u70b9\u304c\u3042\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\u306a\u3057(\u7cbe\u5ea6\u304c\u60aa\u304f\u3001\u3042\u307e\u308a\u4f7f\u7528\u3055\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306a\u3044\u305f\u3081)\n\nRunge-Kutta \u6cd5\n\n\u7406\u8ad6\n\u3053\u308c\u306b\u95a2\u3057\u3066\u306f\u3001\u6b21\u306e\u8cc7\u6599\u304c\u8a73\u3057\u3044\u3002\n\u300cPDF\u5f62\u5f0f\u306e\u6570\u5b66\u30ce\u30fc\u30c8 : MATHEMATICS.PDF\u300d\u5185\u306e\u300c4\u6b21\u306eRunge-Kutta\u6cd5\u300d\n\u7d50\u8ad6\u306e\u307f\u8ff0\u3079\u308b\u3068\n\\begin{align}\n\\boldsymbol{x}_{i + 1} &= \\boldsymbol{x}_i + \\frac{h}{6} (\\boldsymbol{k}_1 + 2\\boldsymbol{k}_2 + 2\\boldsymbol{k}_3 + \\boldsymbol{k}_4),\u3000\\\\\n\\boldsymbol{k}_1 &= \\boldsymbol{f}(t_i, \\boldsymbol{x}_i), \\\\\n\\boldsymbol{k}_2 &= \\boldsymbol{f}(t_i + \\frac{h}{2}, \\boldsymbol{x}_i + \\frac{k_1}{2}), \\\\\n\\boldsymbol{k}_3 &= \\boldsymbol{f}(t_i + \\frac{h}{2}, \\boldsymbol{x}_i + \\frac{k_2}{2}), \\\\\n\\boldsymbol{k}_4 &= \\boldsymbol{f}(t_i + h, \\boldsymbol{x}_i + k_3).\n\\end{align}\nxi+1=xi+h6(k1+2k2+2k3+k4),\u3000k1=f(ti,xi),k2=f(ti+h2,xi+k12),k3=f(ti+h2,xi+k22),k4=f(ti+h,xi+k3).{\\begin{align}\n\\boldsymbol{x}_{i + 1} &= \\boldsymbol{x}_i + \\frac{h}{6} (\\boldsymbol{k}_1 + 2\\boldsymbol{k}_2 + 2\\boldsymbol{k}_3 + \\boldsymbol{k}_4),\u3000\\\\\n\\boldsymbol{k}_1 &= \\boldsymbol{f}(t_i, \\boldsymbol{x}_i), \\\\\n\\boldsymbol{k}_2 &= \\boldsymbol{f}(t_i + \\frac{h}{2}, \\boldsymbol{x}_i + \\frac{k_1}{2}), \\\\\n\\boldsymbol{k}_3 &= \\boldsymbol{f}(t_i + \\frac{h}{2}, \\boldsymbol{x}_i + \\frac{k_2}{2}), \\\\\n\\boldsymbol{k}_4 &= \\boldsymbol{f}(t_i + h, \\boldsymbol{x}_i + k_3).\n\\end{align}\n}\n\u3068\u306a\u308b\u3002\u8aa4\u5dee\u306f\u523b\u307f\u5e45\u306e 4 \u4e57\u306b\u6bd4\u4f8b\u3059\u308b\u305f\u3081\u3001\u7cbe\u5ea6\u306f Euler \u6cd5\u3088\u308a\u3082\u304b\u306a\u308a\u4e0a\u304c\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\nx\u2032=sint+cosx,x(0)=0x' = \\sin t + \\cos x, x(0) = 0 \u3092\u6570\u5024\u7684\u306b\u89e3\u304f\u3002\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.function.DoubleBinaryOperator;\n\npublic class RungeKutta {\n    public static void main(String args[]) {\n        File file = new File(\"solve.txt\");\n        double t = 0;\n        double x = 0;\n        double h = 0.01;\n        DoubleBinaryOperator f = (a, b) -> Math.sin(a) + Math.cos(b);\n        PrintWriter pw = null;\n        try {\n            pw = new PrintWriter(new BufferedWriter(new FileWriter(file)));\n            for(int i = 0; i <= 200; i++) {\n                pw.printf(\"%.8f %.8f\\n\", t, x);\n                double k1 = f.applyAsDouble(t, x);\n                double k2 = f.applyAsDouble(t + h / 2, x + h * k1 / 2);\n                double k3 = f.applyAsDouble(t + h / 2, x + h * k2 / 2);\n                double k4 = f.applyAsDouble(t + h, x + h * k3);\n                t += h;\n                x += h * (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if(pw != null) pw.close();\n        }\n    }\n}\n\n\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306f Gnuplot \u7b49\u3067\u8868\u793a\u3055\u305b\u3066\u307f\u308b\u3068\u826f\u3044\u3002\u5c11\u3057\u624b\u76f4\u3057\u3057\u3066\u3001CSV \u5f62\u5f0f\u3067\u51fa\u529b\u3057\u3066\u3001Excel \u3067\u30b0\u30e9\u30d5\u3092\u8868\u793a\u3055\u305b\u3066\u3082\u826f\u3044\u3002\n\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u4ed8\u3051\u305f\u3044\u304c\u305f\u3081\u306b\u4e45\u3005\u306b Java \u66f8\u3044\u305f\u3089\u82e5\u5e72\u5fc3\u304c\u8352\u3093\u3060\u306e\u306f\u3053\u3053\u3060\u3051\u306e\u8a71(\u82e6\u7b11)\u3002\u00a0\u21a9\n\n\n\n\u4eca\u56de\u306f\u4e3b\u306b\u6570\u5024\u89e3\u6790\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u3068\u304d\u306b\u77e5\u3063\u3066\u304a\u304f\u3068\u4fbf\u5229\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u306a\u308b\u3079\u304f\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u4ed8\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u5206\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u306f\u3054\u611b\u656c[^1]\u3002\n\n# \u591a\u9805\u5f0f\u306e\u8a08\u7b97\n## Horner \u6cd5\n### \u7406\u8ad6\n\n\u4f8b\u3048\u3070\u3001\u4e09\u6b21\u5f0f $f(x) = a_0 + a_1 x + a_2 x^2 + a_3 x^3$ \u3092\u305d\u306e\u307e\u307e\u8a08\u7b97\u3059\u308b\u3068\u4e57\u7b97 6 \u56de\u3001\u52a0\u7b97 3 \u56de\u304c\u5fc5\u8981\u3060\u304c\u3001\n\n```math\n\\begin{align}\nf(x) &= a_0 + a_1 x + (a_2 + a_3 x)x^2 \\\\\n     &= a_0 + (a_1 + (a_2 + a_3 x)x)x\n\\end{align}\n```\n\n\u3068\u5909\u5f62\u3057\u3066\u304b\u3089\u8a08\u7b97\u3059\u308c\u3070\u3001\u4e57\u7b97 3 \u56de\u3001\u52a0\u7b97 3 \u56de\u3068\u306a\u308b\u3002\u591a\u9805\u5f0f\u306e\u6b21\u6570\u304c\u9ad8\u3044\u307b\u3069\u52b9\u679c\u304c\u9ad8\u3044\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n```java\ndouble horner(double a[], double x) {\n    double f = 0;\n    for(int i = a.length - 1; i >= 0; i--) {\n        f = a[i] + f * x;\n    }\n    return f;\n}\n```\n\n# \u975e\u7dda\u5f62\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\n## \u4e8c\u5206\u6cd5\n### \u7406\u8ad6\n\n$f(x)$ \u306f\u533a\u9593 $[a, b]$ \u3067\u9023\u7d9a\u304b\u3064 $f(a)f(b) < 0$ \u3068\u3059\u308b\u3002\u3053\u306e\u3068\u304d\u4e2d\u9593\u5024\u306e\u5b9a\u7406\u306b\u3088\u308a $a < c < b$ \u3067 $f(c) = 0$ \u3068\u306a\u308b\u3082\u306e\u304c\u5b58\u5728\u3059\u308b\u304c\u3001\u3053\u306e $c$ \u3092\u4ee5\u4e0b\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066\u898b\u3064\u3051\u308b\u306e\u304c\u4e8c\u5206\u6cd5\u3067\u3042\u308b\u3002\u7c21\u5358\u306e\u305f\u3081 $f(a) < 0, f(b) > 0$ \u3068\u3059\u308b\u3002\n\n1. $a_1 = a, b_1 = b$ \u3068\u7f6e\u304f\u3002\n2. $a_{n+1}$ \u3068 $b_{n+1}$ \u3092\u4ee5\u4e0b\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u6c7a\u5b9a\u3059\u308b\u3002\n  - $\\frac{a_n + b_n}{2} > 0$ \u306a\u3089\u3070 $a_{n + 1} = a_n, b_{n + 1} = \\frac{a_n + b_n}{2}.$\n  - \u305d\u3046\u3067\u306a\u3051\u308c\u3070 $a_{n + 1} = \\frac{a_n + b_n}{2}, b_{n + 1} = b_n.$\n\n\u3053\u306e\u3068\u304d $c = \\lim_{n \\to \\infty} a_n = \\lim_{n \\to \\infty} b_n$ \u3068\u3059\u308c\u3070 $f(c) = 0$ \u3067\u3042\u308b\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n```java\nimport java.util.function.DoubleUnaryOperator;\n\npublic class Equation {\n    static double ERROR = 1e-12; /* Error */\n\n    // Bisection method\n    double bisection(DoubleUnaryOperator f, double a, double b) {\n        double ta = a;\n        double tb = b;\n        while(tb - ta > ERROR) {\n            double tmp = (ta + tb) / 2;\n            if(f.applyAsDouble(tmp) * f.applyAsDouble(tb) > 0) {\n                tb = tmp;\n            } else {\n                ta = tmp;\n            }\n        }\n        return (ta + tb) / 2;\n    }\n}\n```\n\n```java\npublic static void main(String args[]) {\n    DoubleUnaryOperator f = x -> x * x - 2;\n    Equation solver = new Equation();\n    System.out.println(solver.bisection(f, 1, 2));\n}\n```\n\n\u9762\u5012\u306a\u306e\u3067\u533a\u9593\u304c\u4e0d\u6b63\u3067\u306a\u3044\u304b\u306e\u30c1\u30a7\u30c3\u30af\u306f\u7701\u7565\u3057\u3066\u307e\u3059\u3002Java8 \u306b\u306a\u3063\u3066\u95a2\u6570\u3092\u307e\u308b\u3063\u3068\u5f15\u6570\u3067\u6e21\u305b\u308b\u306e\u306f\u3044\u3044\u3067\u3059\u306d\u3002\n\n## Newton \u6cd5\n### \u7406\u8ad6\n\n$f(x)$ \u306f 2 \u968e\u5fae\u5206\u53ef\u80fd\u3067\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3068\u3059\u308b\u3002\n\n- $f(a) < 0, f(b) > 0.$\n- $f'(x) > 0, f''(x) > 0 (a \\leq x \\leq b).$\n\n\u3053\u306e\u3068\u304d\n\n- $c_1 = b.$\n- $c_{n + 1} = c_n - \\frac{f(c_n)}{f'(c_n)} (n \\geq 1)$\n\n\u3068\u3059\u308c\u3070\u3001$c = \\lim_{n \\to \\infty} c_n$ \u304c\u5b58\u5728\u3057\u3066 $f(c) = 0.$\n$$|g'(c)| = \\left|\\frac{f(c)f''(c)}{(f'(c))^2}\\right| = 0 < 1$$\n\u306e\u305f\u3081\u3001\u975e\u5e38\u306b\u53ce\u675f\u304c\u65e9\u3044\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n```java\nimport java.util.function.DoubleUnaryOperator;\n\npublic class Equation {\n    static double ERROR = 1e-12; /* Error */\n\n    // Newton method\n    double newton(DoubleUnaryOperator f, DoubleUnaryOperator df, double init) {\n        double c = init;\n        while(Math.abs(f.applyAsDouble(c)) > ERROR) {\n            c -= f.applyAsDouble(c) / df.applyAsDouble(c);\n        }\n        return c;\n    }\n}\n```\n\n```java\npublic static void main(String args[]) {\n    DoubleUnaryOperator f = x -> x * x - 2;\n    DoubleUnaryOperator df = x -> 2 * x;\n    Equation solver = new Equation();\n    System.out.println(solver.newton(f, df, 2));\n}\n```\n\n# \u6570\u5024\u7a4d\u5206\n\n\u6570\u5024\u7a4d\u5206\u306f\u3001\u7a4d\u5206\u533a\u9593\u3092\u5206\u5272(\u8a08\u7b97\u306e\u90fd\u5408\u4e0a\u7b49\u5206\u3059\u308b\u306e\u304c\u6163\u4f8b)\u3057\u3066\u3001\u305d\u306e\u533a\u9593\u306e\u7a4d\u5206\u3092\u4f55\u3089\u304b\u306e\u5f62\u3067\u8fd1\u4f3c\u8a08\u7b97\u3057\u3001\u5408\u8a08\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6c42\u3081\u308b\u65b9\u6cd5\u3002\u4eca\u56de\u306f\u5206\u304b\u308a\u3084\u3059\u304f\u6709\u754c\u533a\u9593\u4e0a\u306e\u7a4d\u5206\u306b\u9650\u5b9a\u3059\u308b\u3002\n\n\u4ee5\u4e0b\u3001$f(x)$ \u306f\u533a\u9593 $[a, b]$ \u3067\u9023\u7d9a\u306a\u95a2\u6570\u3068\u3059\u308b\u3002\n\n## \u53f0\u5f62\u516c\u5f0f\n### \u7406\u8ad6\n\n\u533a\u9593 $[a, b]$ \u3092 $n$ \u7b49\u5206\u3057\u3001$h = \\frac{b - a}{n}$ \u3068\u3059\u308b\u3002\n$a_i = a + ih (i = 0, 1, \\dots, n)$ \u3068\u3059\u308b\u3002$a_0 = a, a_n = b$ \u3067\u3042\u308b\u3002\n\u533a\u9593 $[a_i, a_{i + 1}]$ $(i = 0, 1, \\dots, n - 1)$ \u306b\u304a\u3044\u3066\n$$\\int_{a_i}^{a_{i + 1}}f(x) dx$$\n\u3092\n$$\\frac{h}{2}(f(a_i) + f(a_{i + 1}))$$\n\u3067\u8fd1\u4f3c\u3059\u308b\u3053\u3068\u306b\u3088\u308a\n$$\\int_a^b f(x)dx$$\n\u306f\n$$\\frac{h}{2}\\sum_{i = 0}^{n = 1} (f(a_i) + f(a_{i + 1}))$$\n\u3067\u8fd1\u4f3c\u3067\u304d\u308b\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n```java\nstatic double trapezoid(DoubleUnaryOperator f, double a, double b, int step) {\n    double h = (b - a) / step;\n    double s = 0;\n    for(int i = 0; i < step; i++) {\n        s += (f.applyAsDouble(a + i * h)\n                + f.applyAsDouble(a + (i + 1) * h))\n                * h / 2;\n    }\n    return s;\n}\n```\n\n## Simpson \u306e\u516c\u5f0f\n### \u7406\u8ad6\n\n\u533a\u9593 $[a, b]$ \u3092 $2n$ \u7b49\u5206\u3057\u3001$h = \\frac{b - a}{2n}$ \u3068\u3059\u308b\u3002\n$a_i = a + ih (i = 0, 1, \\dots, 2n)$ \u3068\u3059\u308b\u3002$a_0 = a, a_{2n} = b$ \u3067\u3042\u308b\u3002\n\u533a\u9593 $[a_{2i}, a_{2i + 2}]$ $(i = 0, 1, \\dots, n - 1)$ \u306b\u304a\u3044\u3066\n$$\\int_{a_{2i}}^{a_{2i + 2}}f(x) dx$$\n\u3092\u3001$f(x)$ \u3092\u4e09\u70b9 $(a_{2i}, f(a_{2i})), (a_{2i + 1}, f(a_{2i + 1})), (a_{2i + 2}, f(a_{2i + 2}))$ \u3092\u901a\u308b\u653e\u7269\u7dda\u3067\u8fd1\u4f3c\u3059\u308b\u3053\u3068\u306b\u3088\u308a\n$$\\frac{h}{3}(f(a_{2i}) + 4f(a_{2i + 1}) + f(a_{2i + 2}))$$\n\u3067\u8fd1\u4f3c\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u3053\u308c\u306b\u3088\u308a\n$$\\int_a^b f(x)dx$$\n\u306f\n$$\\frac{h}{3}\\sum_{i = 0}^{n - 1} (f(a_{2i}) + 4f(a_{2i + 1}) + f(a_{2i + 2}))$$\n\u3067\u8fd1\u4f3c\u3067\u304d\u308b\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n```java\nimport java.util.function.DoubleUnaryOperator;\n\npublic class Integral {\n    public static double simpson(DoubleUnaryOperator f, double a, double b, int step) {\n        double h = (b - a) / step;\n        double s = 0;\n        for(int i = 0; i < step / 2; i++) {\n        s += (f.applyAsDouble(a + 2 * i * h)\n                    + 4 * f.applyAsDouble(a + (2 * i + 1) * h)\n                    + f.applyAsDouble(a + (2 * i + 2) * h))\n                    * h / 3;\n        }\n        return s;\n    }\n}\n```\n\n\u5b9f\u969b\u306b\n$$\\int_1^2 \\frac{1}{x} dx = \\log 2$$\n\u3092\u8a08\u7b97\u3055\u305b\u308b\u3002\u524d\u56de\u7d50\u679c\u3068\u306e\u5dee\u304c ```EPS``` (\u9069\u5b9c\u5b9a\u7fa9\u305b\u3088)\u3088\u308a\u5c0f\u3055\u304f\u306a\u308b\u307e\u3067\u3001\u523b\u307f\u5e45\u3092 10 \u305a\u3064\u5897\u3084\u3057\u3066\u3044\u304f\u3002\n\n```java\npublic static void main(String args[]) {\n    DoubleUnaryOperator f = x -> 1 / x;\n    double a = 1, b = 2;\n    double s;\n    s = Integral.simpson(f, a, b, 1);\n    int n = 10;\n    while(true) {\n        double tmp = Integral.simpson(f, a, b, n);\n        if(Math.abs(s - tmp) < EPS) break;\n        s = tmp;\n        n += 10;\n    }\n    System.out.println(s);\n}\n```\n\n\n# \u5e38\u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\n\n\u4e00\u968e\u306e\u5e38\u5fae\u5206\u65b9\u7a0b\u5f0f\u306e\u521d\u671f\u5024\u554f\u984c\n$$\\boldsymbol{x}' = \\boldsymbol{f}(t, \\boldsymbol{x}) (\\boldsymbol{x} = \\boldsymbol{x}(t)), \\boldsymbol{x}(t_0) = \\boldsymbol{x}_0$$\n\u3092\u6570\u5024\u7684\u306b\u89e3\u6790\u3059\u308b\u65b9\u6cd5\u30021 \u6bb5\u6cd5\u3068\u591a\u6bb5\u6cd5\u304c\u3042\u308b\u304c\u3001\u4eca\u56de\u306f\u5206\u304b\u308a\u3084\u3059\u3044 1 \u6bb5\u6cd5\u306e\u307f\u7d39\u4ecb\u3059\u308b\u3002\n\n## Euler \u6cd5\n### \u7406\u8ad6\n\n$$\\boldsymbol{x}'(t) = \\lim_{h \\to 0} \\frac{\\boldsymbol{x}(t + h) - \\boldsymbol{x}(t)}{h}$$\n\u3092\n$$\\boldsymbol{x}'\\_i = \\frac{\\boldsymbol{x}\\_{i + 1} - \\boldsymbol{x}\\_i}{h}$$\n\u3067\u8fd1\u4f3c\u3059\u308b\u3002\u305f\u3060\u3057 $\\boldsymbol{x}\\_i = \\boldsymbol{x}(t\\_i), t\\_i = t + ih.$ \u3053\u3053\u3067\u5143\u306e\u5fae\u5206\u65b9\u7a0b\u5f0f\u306b\u3088\u308a $\\boldsymbol{x}\\_i' = \\boldsymbol{f}(t\\_i, \\boldsymbol{x}\\_i)$ \u3067\u3042\u308b\u304b\u3089\n$$\\boldsymbol{x}_{i + 1} = \\boldsymbol{x}_i + h \\boldsymbol{f}(t_i, \\boldsymbol{x}_i)$$\n\u3067\u9010\u6b21\u89e3\u66f2\u7dda\u3092\u8fd1\u4f3c\u3067\u304d\u308b\u3002\u305f\u3060\u3057\u8aa4\u5dee\u306f\u523b\u307f\u5e45\u306b\u6bd4\u4f8b\u3059\u308b\u306e\u3067\u3001\u523b\u307f\u5e45\u3092\u304b\u306a\u308a\u7d30\u304b\u304f\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3046\u3048\u3001\u305d\u308c\u306b\u4f34\u3046\u8a08\u7b97\u91cf\u306e\u5897\u52a0\u306b\u3088\u308a\u4e38\u3081\u8aa4\u5dee\u304c\u84c4\u7a4d\u3057\u3084\u3059\u3044\u5f31\u70b9\u304c\u3042\u308b\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n\u306a\u3057(\u7cbe\u5ea6\u304c\u60aa\u304f\u3001\u3042\u307e\u308a\u4f7f\u7528\u3055\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306a\u3044\u305f\u3081)\n\n## Runge-Kutta \u6cd5\n### \u7406\u8ad6\n\n\u3053\u308c\u306b\u95a2\u3057\u3066\u306f\u3001\u6b21\u306e\u8cc7\u6599\u304c\u8a73\u3057\u3044\u3002\n[\u300cPDF\u5f62\u5f0f\u306e\u6570\u5b66\u30ce\u30fc\u30c8 : MATHEMATICS.PDF\u300d\u5185\u306e\u300c4\u6b21\u306eRunge-Kutta\u6cd5\u300d](http://mathematics-pdf.com/pdf/runge-kutta.pdf)\n\n\u7d50\u8ad6\u306e\u307f\u8ff0\u3079\u308b\u3068\n\n```math\n\\begin{align}\n\\boldsymbol{x}_{i + 1} &= \\boldsymbol{x}_i + \\frac{h}{6} (\\boldsymbol{k}_1 + 2\\boldsymbol{k}_2 + 2\\boldsymbol{k}_3 + \\boldsymbol{k}_4),\u3000\\\\\n\\boldsymbol{k}_1 &= \\boldsymbol{f}(t_i, \\boldsymbol{x}_i), \\\\\n\\boldsymbol{k}_2 &= \\boldsymbol{f}(t_i + \\frac{h}{2}, \\boldsymbol{x}_i + \\frac{k_1}{2}), \\\\\n\\boldsymbol{k}_3 &= \\boldsymbol{f}(t_i + \\frac{h}{2}, \\boldsymbol{x}_i + \\frac{k_2}{2}), \\\\\n\\boldsymbol{k}_4 &= \\boldsymbol{f}(t_i + h, \\boldsymbol{x}_i + k_3).\n\\end{align}\n```\n\n\u3068\u306a\u308b\u3002\u8aa4\u5dee\u306f\u523b\u307f\u5e45\u306e 4 \u4e57\u306b\u6bd4\u4f8b\u3059\u308b\u305f\u3081\u3001\u7cbe\u5ea6\u306f Euler \u6cd5\u3088\u308a\u3082\u304b\u306a\u308a\u4e0a\u304c\u308b\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n$x' = \\sin t + \\cos x, x(0) = 0$ \u3092\u6570\u5024\u7684\u306b\u89e3\u304f\u3002\n\n```java\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.function.DoubleBinaryOperator;\n\npublic class RungeKutta {\n    public static void main(String args[]) {\n        File file = new File(\"solve.txt\");\n        double t = 0;\n        double x = 0;\n        double h = 0.01;\n        DoubleBinaryOperator f = (a, b) -> Math.sin(a) + Math.cos(b);\n        PrintWriter pw = null;\n        try {\n            pw = new PrintWriter(new BufferedWriter(new FileWriter(file)));\n            for(int i = 0; i <= 200; i++) {\n                pw.printf(\"%.8f %.8f\\n\", t, x);\n                double k1 = f.applyAsDouble(t, x);\n                double k2 = f.applyAsDouble(t + h / 2, x + h * k1 / 2);\n                double k3 = f.applyAsDouble(t + h / 2, x + h * k2 / 2);\n                double k4 = f.applyAsDouble(t + h, x + h * k3);\n                t += h;\n                x += h * (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if(pw != null) pw.close();\n        }\n    }\n}\n```\n\n\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306f Gnuplot \u7b49\u3067\u8868\u793a\u3055\u305b\u3066\u307f\u308b\u3068\u826f\u3044\u3002\u5c11\u3057\u624b\u76f4\u3057\u3057\u3066\u3001CSV \u5f62\u5f0f\u3067\u51fa\u529b\u3057\u3066\u3001Excel \u3067\u30b0\u30e9\u30d5\u3092\u8868\u793a\u3055\u305b\u3066\u3082\u826f\u3044\u3002\n\n[^1]: \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u4ed8\u3051\u305f\u3044\u304c\u305f\u3081\u306b\u4e45\u3005\u306b Java \u66f8\u3044\u305f\u3089\u82e5\u5e72\u5fc3\u304c\u8352\u3093\u3060\u306e\u306f\u3053\u3053\u3060\u3051\u306e\u8a71(\u82e6\u7b11)\u3002\n", "tags": ["\u6570\u5b66", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "Java"]}