{"context": "Lambda\u306e\u30d6\u30eb\u30fc\u30d7\u30ea\u30f3\u30c8\u306e\u3046\u3061datadog-process-rds-metrics\u3092\u5229\u7528\u3057\u3066\u3001Lambda\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001KMS\u3092\u4f7f\u308f\u306a\u3044\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n\n\u524d\u63d0\u6761\u4ef6\n\nLambda\u3078\u306e\u6a29\u9650\nLambda\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\nAWS CLI\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\nAWS CLI 1.11.28\n\n\n\u30b3\u30de\u30f3\u30c9\naws --version\n\n\n\u7d50\u679c(\u4f8b):\n  aws-cli/1.11.28 Python/2.7.10 Darwin/15.6.0 botocore/1.4.85\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u5834\u5408\u306f\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30b3\u30de\u30f3\u30c9\nsudo -H pip install -U awscli\n\n\n\nIAM Role\n'lambdaBasicExecution'\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nIAM_ROLE_NAME='lambdaBasicExecution'\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws iam get-role \\\n         --role-name ${IAM_ROLE_NAME}\n\n\n\u7d50\u679c(\u4f8b):\n  {\n      \"Role\": {\n        \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Action\": \"sts:AssumeRole\",\n                    \"Principal\": {\n                        \"Service\": \"lambda.amazonaws.com\"\n                    },\n                    \"Effect\": \"Allow\",\n                    \"Sid\": \"\"\n                }\n            ]\n        },\n        \"RoleId\": \"AROAXXXXXXXXXXXXXXXXX\",\n        \"CreateDate\": \"2016-12-18T01:23:45Z\",\n        \"RoleName\": \"lambdaBasicExecution\",\n        \"Path\": \"/\",\n        \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\"\n      }\n  }\n\nIAM\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\nhttp://qiita.com/tcsh/items/6353876a5c4fef63b4d8 \u306e\u624b\u9806\u306b\u5f93\u3063\u3066\u4f5c\u6210\u3057\n\u3066\u304f\u3060\u3055\u3044\u3002\n\n0. \u6e96\u5099\n\n0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u6c7a\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nexport AWS_DEFAULT_REGION='ap-northeast-1'\n\n\n\n0.2. \u5909\u6570\u306e\u78ba\u8a8d\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u78ba\u8a8d\naws configure list\n\n\n\u7d50\u679c(\u4f8b):\n        Name                    Value             Type    Location\n        ----                    -----             ----    --------\n     profile       lambdaFull-prjz-mbp13        env    AWS_DEFAULT_PROFILE\n  access_key     ****************XXXX shared-credentials-file\n  secret_key     ****************XXXX shared-credentials-file\n      region        ap-northeast-1        env    AWS_DEFAULT_REGION\n\n\n1. \u4e8b\u524d\u4f5c\u696d\n\n1.1. IAM Role\u306eARN\u53d6\u5f97\n\n\u30b3\u30de\u30f3\u30c9\nIAM_ROLE_ARN=$( \\\n        aws iam get-role \\\n          --role-name ${IAM_ROLE_NAME} \\\n          --query 'Role.Arn' \\\n          --output text \\\n) \\\n        && echo ${IAM_ROLE_ARN}\n\n\n\u7d50\u679c(\u4f8b):\n  arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\n\n\n1.2. Datadog\u306eAPI\u30ad\u30fc\u306e\u8a2d\u5b9a\nhttps://app.datadoghq.com/account/settings#api \u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nDD_API_KEY='<API Keys\u306eKey\u306e\u5024>'\n\n\nNew application key\u306b'lambda'\u3068\u5165\u529b\u3057\u3001Create Application Key\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\nHash\u306e\u5024\u3092\u5909\u6570\u306b\u53d6\u308a\u8fbc\u307f\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nDD_APP_KEY='<Application Key\u306eHash\u306e\u5024>'\n\n\n\n1.3. Lambda\u95a2\u6570\u540d\u306e\u6c7a\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_FUNC_NAME=\"datadog_process_rds_metrics-$( date '+%Y%m%d' )\" \\\n        && echo ${LAMBDA_FUNC_NAME}\n\n\n\u540c\u540d\u306eLambda\u95a2\u6570\u306e\u4e0d\u5b58\u5728\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n\n\n\u7d50\u679c(\u4f8b):\n  A client error (ResourceNotFoundException) occurred when calling the GetFunction operation: Function not found: arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:datadog_process_rds_metrics-20161219\n\n\n1.4. Lambda\u95a2\u6570\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_LAMBDA_FUNC=\"${LAMBDA_FUNC_NAME}.py\"\nPY_FUNC_NAME='lambda_handler'\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n          FILE_LAMBDA_FUNC: ${FILE_LAMBDA_FUNC}\n          PY_FUNC_NAME:     ${PY_FUNC_NAME}\n          DD_API_KEY:       ${DD_API_KEY}\n          DD_APP_KEY:       ${DD_APP_KEY}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat << EOF > ${FILE_LAMBDA_FUNC}\nfrom __future__ import print_function\n\nimport os\nimport gzip\nimport json\nimport re\nimport time\nimport urllib\nimport urllib2\nfrom base64 import b64decode\nfrom StringIO import StringIO\n\nimport boto3\n\n# retrieve datadog options from KMS\n#KMS_ENCRYPTED_KEYS = os.environ['kmsEncryptedKeys']\n#kms = boto3.client('kms')\ndatadog_keys = json.loads('{\"api_key\":\"${DD_API_KEY}\", \"app_key\":\"${DD_APP_KEY}\"}')\n\nprint('INFO Lambda function initialized, ready to send metrics')\n\n\ndef _process_rds_enhanced_monitoring_message(ts, message, account, region):\n    instance_id = message['instanceID']\n    host_id = message['instanceResourceID']\n    tags = [\n        'dbinstanceidentifier:%s' % instance_id,\n        'aws_account:%s' % account,\n        'engine:%s' % message[\"engine\"],\n    ]\n\n    # metrics generation\n\n    uptime = 0\n    uptime_msg = re.split(' days?, ', message['uptime'])\n    if len(uptime_msg) == 2:\n        uptime += 24 * 3600 * int(uptime_msg[0])\n    uptime_day = uptime_msg[-1].split(':')\n    uptime += 3600 * int(uptime_day[0])\n    uptime += 60 * int(uptime_day[1])\n    uptime += int(uptime_day[2])\n    stats.gauge('aws.rds.uptime', uptime, timestamp=ts, tags=tags, host=host_id)\n\n    stats.gauge('aws.rds.virtual_cpus', message['numVCPUs'], timestamp=ts, tags=tags, host=host_id)\n\n    stats.gauge('aws.rds.load.1', message['loadAverageMinute']['one'], timestamp=ts, tags=tags, host=host_id)\n    stats.gauge('aws.rds.load.5', message['loadAverageMinute']['five'], timestamp=ts, tags=tags, host=host_id)\n    stats.gauge('aws.rds.load.15', message['loadAverageMinute']['fifteen'], timestamp=ts, tags=tags, host=host_id)\n\n    for namespace in ['cpuUtilization', 'memory', 'tasks', 'swap']:\n        for key, value in message[namespace].iteritems():\n            stats.gauge('aws.rds.%s.%s' % (namespace.lower(), key), value, timestamp=ts, tags=tags, host=host_id)\n\n    for network_stats in message['network']:\n        network_tag = ['interface:%s' % network_stats.pop('interface')]\n        for key, value in network_stats.iteritems():\n            stats.gauge('aws.rds.network.%s' % key, value, timestamp=ts, tags=tags + network_tag, host=host_id)\n\n    disk_stats = message['diskIO'][0]  # we never expect to have more than one disk\n    for key, value in disk_stats.iteritems():\n        stats.gauge('aws.rds.diskio.%s' % key, value, timestamp=ts, tags=tags, host=host_id)\n\n    for fs_stats in message['fileSys']:\n        fs_tag = [\n            'name:%s' % fs_stats.pop('name'),\n            'mountPoint:%s' % fs_stats.pop('mountPoint')\n        ]\n        for key, value in fs_stats.iteritems():\n            stats.gauge('aws.rds.filesystem.%s' % key, value, timestamp=ts, tags=tags + fs_tag, host=host_id)\n\n    for process_stats in message['processList']:\n        process_tag = [\n            'name:%s' % process_stats.pop('name'),\n            'id:%s' % process_stats.pop('id')\n        ]\n        for key, value in process_stats.iteritems():\n            stats.gauge('aws.rds.process.%s' % key, value, timestamp=ts, tags=tags + process_tag, host=host_id)\n\n\ndef ${PY_FUNC_NAME}(event, context):\n    ''' Process a RDS enhenced monitoring DATA_MESSAGE,\n        coming from CLOUDWATCH LOGS\n    '''\n    # event is a dict containing a base64 string gzipped\n    event = json.loads(gzip.GzipFile(fileobj=StringIO(event['awslogs']['data'].decode('base64'))).read())\n\n    account = event['owner']\n    region = context.invoked_function_arn.split(':', 4)[3]\n\n    log_events = event['logEvents']\n\n    for log_event in log_events:\n        message = json.loads(log_event['message'])\n        ts = log_event['timestamp'] / 1000\n        _process_rds_enhanced_monitoring_message(ts, message, account, region)\n\n    stats.flush()\n    return {'Status': 'OK'}\n\n\n# Helpers to send data to Datadog, inspired from https://github.com/DataDog/datadogpy\n\nclass Stats(object):\n\n    def __init__(self):\n        self.series = []\n\n    def gauge(self, metric, value, timestamp=None, tags=None, host=None):\n        base_dict = {\n            'metric': metric,\n            'points': [(int(timestamp or time.time()), value)],\n            'type': 'gauge',\n            'tags': tags,\n        }\n        if host:\n            base_dict.update({'host': host})\n        self.series.append(base_dict)\n\n    def flush(self):\n        metrics_dict = {\n            'series': self.series,\n        }\n        self.series = []\n\n        creds = urllib.urlencode(datadog_keys)\n        data = json.dumps(metrics_dict)\n        url = '%s?%s' % (datadog_keys.get('api_host', 'https://app.datadoghq.com/api/v1/series'), creds)\n        req = urllib2.Request(url, data, {'Content-Type': 'application/json'})\n        response = urllib2.urlopen(req)\n        print('INFO Submitted data with status {}'.format(response.getcode()))\n\nstats = Stats()\nEOF\n\ncat ${FILE_LAMBDA_FUNC}\n\n\n\n\u30b3\u30de\u30f3\u30c9\nzip ${LAMBDA_FUNC_NAME}.zip ${FILE_LAMBDA_FUNC}\n\n\n\u7d50\u679c(\u4f8b):\n  adding: datadog_process_rds_metrics-20161219.py (deflated 43%)\n\n\n2. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n2.1. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_FUNC_DESC='Pushes RDS Enhanced metrics to Datadog.'\nLAMBDA_RUNTIME='python2.7'\nLAMBDA_HANDLER=\"${LAMBDA_FUNC_NAME}.${PY_FUNC_NAME}\"\nFILE_LAMBDA_ZIP=\"${LAMBDA_FUNC_NAME}.zip\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:  ${LAMBDA_FUNC_NAME}\n        LAMBDA_FUNC_DESC: \"${LAMBDA_FUNC_DESC}\"\n        LAMBDA_RUNTIME:    ${LAMBDA_RUNTIME}\n        FILE_LAMBDA_ZIP    ${FILE_LAMBDA_ZIP}\n        IAM_ROLE_ARN:      ${IAM_ROLE_ARN}\n        LAMBDA_HANDLER:    ${LAMBDA_HANDLER}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda create-function \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --description \"${LAMBDA_FUNC_DESC}\" \\\n        --zip-file fileb://${FILE_LAMBDA_ZIP} \\\n        --runtime ${LAMBDA_RUNTIME} \\\n        --role ${IAM_ROLE_ARN} \\\n        --handler ${LAMBDA_HANDLER}\n\n\n\u7d50\u679c(\u4f8b):\n  {\n    \"CodeSha256\": \"lKbgNPMuV0D2blwwCSWwKLwlTrzoPAsFAdB6/FxJ+Q4=\",\n    \"FunctionName\": \"datadog_process_rds_metrics-20161219\",\n    \"CodeSize\": 1962,\n    \"MemorySize\": 128,\n    \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:datadog_process_rds_metrics-20161219\",\n    \"Version\": \"$LATEST\",\n    \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n    \"Timeout\": 3,\n    \"LastModified\": \"2016-12-18T01:23:45.678+0000\",\n    \"Handler\": \"datadog_process_rds_metrics-20161219.lambda_handler\",\n    \"Runtime\": \"python2.7\",\n    \"Description\": \"Pushes RDS Enhanced metrics to Datadog.\"\n  }\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n\n\n\u7d50\u679c(\u4f8b):\n  {\n    \"Code\": {\n      \"RepositoryType\": \"S3\",\n      \"Location\": \"https://awslambda-ap-ne-1-tasks.s3-ap-northeast-1.amazonaws.com/snapshots/XXXXXXXXXXXX/HelloWorld-2979ba79-b08f-495d-9ee6-46397c95ba13?x-amz-security-token=AQoDYXdzEDoa8AMR6t8h66eOXhN3%2Fx7XpuRxvf7pVn7IuWV4cEmwx0CtZT6yxCJ1%2BWmigYXqGoyQHuBYOWnxbhmwEcTg839qMuhSu1fk0fXpXf0oJOLkhKMudNqhdElyFQpzyT6Q8GDfhAsfbX9wvwCDTty4imxz7MczF%2FQl6tgvTYdip08ap5fAyrknZGV1%2B1Ggnp5w6JOjydYxuUsWwhoxoEWzi7SoVTmpRQQA91c4VW9lNotOAHACFxo6klzDPM8mxR9RJl66WxFugL0wQJyLUpmtjS9XoArD86sEWWiIccMpV2BQipTPQlzL%2F1Hoy%2BDF6QUxyPUihlDjPBoJTISTP8W1wxmzW%2BLbilAfFQRPY7CFjzR0k%2FA%2FIX5x9iyz52Pu1Q0ASTw1l%2Fq%2Fo3pRbvzWR79QS%2BpxXrwbYzoQHKiK62DSTsQo5tqKPsiDCYzrPxbq8lm7pNBPG%2FsxjePRWBVJeRl08WxEjSjoRRwBOPX5mz1BCUoUBPGG5tEENp87A%2FCdDgibFWM5DdYhwtaYPY7FTmi8DvqjQHL9jOmP8YuVteBTBcv8nFW6UbErPjwwn79FKG1u5M9HoTWUqUMBByz6D4tTRSEw6iJU7XdCujFnhnHe5V8imZ1KGI7fDWpciJhrhml0wnKPCK%2Fe9lK1P2kO7ldSWc7zn5hcIOD2tbEF&AWSAccessKeyId=ASIAJFVALOKV5SJVYPPA&Expires=1445825978&Signature=bvwu1Ny34LgTmZeOO3q4sn7x3Fg%3D\"\n    },\n    \"Configuration\": {\n      \"Version\": \"$LATEST\",\n      \"CodeSha256\": \"lKbgNPMuV0D2blwwCSWwKLwlTrzoPAsFAdB6/FxJ+Q4=\",\n      \"FunctionName\": \"datadog_process_rds_metrics-20161219\",\n      \"MemorySize\": 128,\n      \"CodeSize\": 350,\n      \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:datadog_process_rds_metrics-20161219\",\n      \"Handler\": \"datadog_process_rds_metrics-20161219.lambda_handler\",\n      \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n      \"Timeout\": 3,\n      \"LastModified\": \"2016-12-18T01:23:45.678+0000\",\n      \"Runtime\": \"python2.7\",\n      \"Description\": \"Pushes RDS Enhanced metrics to Datadog.\"\n    }\n  }\n\n\n2.2. Lambda\u95a2\u6570\u306e\u66f4\u65b0\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e3\u79d2\u3067\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f30\u79d2\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_TIMEOUT='30'\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME: ${LAMBDA_FUNC_NAME}\n        LAMBDA_TIMEOUT:   ${LAMBDA_TIMEOUT}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda update-function-configuration \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --timeout \"${LAMBDA_TIMEOUT}\"\n\n\n\u7d50\u679c(\u4f8b):\n  {\n    \"CodeSha256\": \"lKbgNPMuV0D2blwwCSWwKLwlTrzoPAsFAdB6/FxJ+Q4=\",\n    \"FunctionName\": \"datadog_process_rds_metrics-20161219\",\n    \"VpcConfig\": {\n        \"SubnetIds\": [],\n        \"SecurityGroupIds\": []\n    },\n    \"CodeSize\": 350,\n    \"MemorySize\": 128,\n    \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:datadog_process_rds_metrics-20161219\",\n    \"Version\": \"$LATEST\",\n    \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n    \"Timeout\": 30,\n    \"LastModified\": \"2016-12-18T01:23:45.678+0000\",\n    \"Handler\": \"datadog_process_rds_metrics-20161219.handler\",\n    \"Runtime\": \"python2.7\",\n    \"Description\": \"Pushes RDS Enhanced metrics to Datadog.\"\n  }\n\n\n3. Lambda\u95a2\u6570\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n3.1. \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-log-data.json\" \\\n          && echo ${FILE_INPUT}\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\ncat << EOF > ${FILE_INPUT}\n{\n        \"messageType\":\"DATA_MESSAGE\",\n        \"owner\":\"123456789123\",\n        \"logGroup\":\"testLogGroup\",\n        \"logStream\":\"testLogStream\",\n        \"subscriptionFilters\":[\n          \"testFilter\"\n        ],\n        \"logEvents\":[\n          {\n            \"id\":\"eventId1\",\n            \"timestamp\":1440442987000,\n            \"message\": \"{\\\"engine\\\":\\\"Postgres\\\",\\\"instanceID\\\":\\\"postgresql-redmine-20161211\\\",\\\"instanceResourceID\\\":\\\"db-7ZOMGTEKHCZNLIFRXB3TOTR2XQ\\\",\\\"timestamp\\\":\\\"2016-12-13T06:11:44Z\\\",\\\"version\\\":1.00,\\\"uptime\\\":\\\"2 days, 0:40:25\\\",\\\"numVCPUs\\\":1,\\\"cpuUtilization\\\":{\\\"guest\\\":0.00,\\\"irq\\\":0.00,\\\"system\\\":0.27,\\\"wait\\\":0.20,\\\"idle\\\":98.80,\\\"user\\\":0.67,\\\"total\\\":1.21,\\\"steal\\\":0.00,\\\"nice\\\":0.07},\\\"loadAverageMinute\\\":{\\\"fifteen\\\":0.05,\\\"five\\\":0.01,\\\"one\\\":0.00},\\\"memory\\\":{\\\"writeback\\\":12,\\\"hugePagesFree\\\":0,\\\"hugePagesRsvd\\\":0,\\\"hugePagesSurp\\\":0,\\\"cached\\\":591812,\\\"hugePagesSize\\\":2048,\\\"free\\\":103168,\\\"hugePagesTotal\\\":0,\\\"inactive\\\":388232,\\\"pageTables\\\":4740,\\\"dirty\\\":164,\\\"mapped\\\":33312,\\\"active\\\":428844,\\\"total\\\":1020188,\\\"slab\\\":44440,\\\"buffers\\\":56164},\\\"tasks\\\":{\\\"sleeping\\\":146,\\\"zombie\\\":0,\\\"running\\\":4,\\\"stopped\\\":0,\\\"total\\\":150,\\\"blocked\\\":0},\\\"swap\\\":{\\\"cached\\\":0,\\\"total\\\":4095996,\\\"free\\\":4095928},\\\"network\\\":[{\\\"interface\\\":\\\"eth0\\\",\\\"rx\\\":451.53,\\\"tx\\\":3785.40}],\\\"diskIO\\\":[{\\\"writeKbPS\\\":16.80,\\\"readIOsPS\\\":0.00,\\\"await\\\":3.87,\\\"readKbPS\\\":0.00,\\\"rrqmPS\\\":0.00,\\\"util\\\":0.08,\\\"avgQueueLen\\\":0.24,\\\"tps\\\":4.20,\\\"readKb\\\":0,\\\"device\\\":\\\"rdsdev\\\",\\\"writeKb\\\":252,\\\"avgReqSz\\\":4.00,\\\"wrqmPS\\\":0.00,\\\"writeIOsPS\\\":4.20}],\\\"fileSys\\\":[{\\\"used\\\":625804,\\\"name\\\":\\\"rdsfilesys\\\",\\\"usedFiles\\\":1910,\\\"usedFilePercent\\\":0.58,\\\"maxFiles\\\":327040,\\\"mountPoint\\\":\\\"/rdsdbdata\\\",\\\"total\\\":5017092,\\\"usedPercent\\\":12.47}],\\\"processList\\\":[{\\\"vss\\\":407876,\\\"name\\\":\\\"postgres: pgadmin redmine 172.18.16.8(35898) idle\\\",\\\"tgid\\\":3097,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":1.44,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3097,\\\"rss\\\":14740},{\\\"vss\\\":68748,\\\"name\\\":\\\"postgres: logger process   \\\",\\\"tgid\\\":3321,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.16,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3321,\\\"rss\\\":1660},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres: checkpointer process   \\\",\\\"tgid\\\":3323,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":1.43,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3323,\\\"rss\\\":14636},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres: writer process   \\\",\\\"tgid\\\":3324,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.51,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3324,\\\"rss\\\":5216},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres: wal writer process   \\\",\\\"tgid\\\":3325,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.79,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3325,\\\"rss\\\":8100},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres: autovacuum launcher process   \\\",\\\"tgid\\\":3326,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.27,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3326,\\\"rss\\\":2784},{\\\"vss\\\":68744,\\\"name\\\":\\\"postgres: archiver process   last was 00000001000000020000002B\\\",\\\"tgid\\\":3327,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.16,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3327,\\\"rss\\\":1672},{\\\"vss\\\":68744,\\\"name\\\":\\\"postgres: stats collector process   \\\",\\\"tgid\\\":3328,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.19,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3328,\\\"rss\\\":1968},{\\\"vss\\\":399712,\\\"name\\\":\\\"postgres: pgadmin redmine 172.18.16.8(36634) idle\\\",\\\"tgid\\\":6552,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.89,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":6552,\\\"rss\\\":9128},{\\\"vss\\\":393516,\\\"name\\\":\\\"postgres: rdsadmin rdsadmin localhost(63217) idle\\\",\\\"tgid\\\":27304,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.77,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":27304,\\\"rss\\\":7832},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres\\\",\\\"tgid\\\":3320,\\\"parentID\\\":1,\\\"memoryUsedPc\\\":1.78,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3320,\\\"rss\\\":18140},{\\\"vss\\\":657332,\\\"name\\\":\\\"OS processes\\\",\\\"tgid\\\":0,\\\"parentID\\\":0,\\\"memoryUsedPc\\\":2.22,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":0,\\\"rss\\\":22472},{\\\"vss\\\":887200,\\\"name\\\":\\\"RDS processes\\\",\\\"tgid\\\":0,\\\"parentID\\\":0,\\\"memoryUsedPc\\\":15.71,\\\"cpuUsedPc\\\":0.07,\\\"id\\\":0,\\\"rss\\\":160176}]}\"\n          }\n        ]\n}\nEOF\n\ncat ${FILE_INPUT}\n\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\njsonlint -q ${FILE_INPUT}\n\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\ngzip ${FILE_INPUT}\n\n\n\n\u30b3\u30de\u30f3\u30c9\nSTR_DATA=$( cat ${FILE_INPUT}.gz | base64 ) \\\n        && echo ${STR_DATA}\n\n\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-data.json\" \\\n          && echo ${FILE_INPUT}\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\ncat << EOF > ${FILE_INPUT}\n{\n        \"awslogs\": {\n          \"data\": \"${STR_DATA}\"\n        }\n}\nEOF\n\ncat ${FILE_INPUT}\n\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\njsonlint -q ${FILE_INPUT}\n\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n3.2. lambda\u95a2\u6570\u306e\u624b\u52d5\u5b9f\u884c\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n\n\n\u7d50\u679c(\u4f8b):\n  200\n\n\n3.3. lambda\u95a2\u6570\u306e\u5b9f\u884c\u7d50\u679c\u306e\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_OUTPUT_LAMBDA}\n\n\n\u7d50\u679c(\u4f8b):\n  {\"Status\": \"OK\"}\n\n\n3.4. lambda\u95a2\u6570\u306e\u30ed\u30b0\u306e\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'LogResult' \\\n        | sed 's/\"//g' \\\n        | base64 --decode\n\n\n\u7d50\u679c(\u4f8b):\n  START RequestId: 4620fd3f-c0fb-11e6-be7f-5d539d6c06cd Version: $LATEST\n  INFO Submitted data with status 202\n  END RequestId: 4620fd3f-c0fb-11e6-be7f-5d539d6c06cd\n  REPORT RequestId: 4620fd3f-c0fb-11e6-be7f-5d539d6c06cd      Duration: 1019.04 ms    Billed Duration: 1100 ms        Memory Size: 128 MB     Max Memory Used: 31 MB\n\n\n\u5b8c\u4e86\nLambda\u306e\u30d6\u30eb\u30fc\u30d7\u30ea\u30f3\u30c8\u306e\u3046\u3061datadog-process-rds-metrics\u3092\u5229\u7528\u3057\u3066\u3001Lambda\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001KMS\u3092\u4f7f\u308f\u306a\u3044\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n\n\n\u524d\u63d0\u6761\u4ef6\n========\n\n\nLambda\u3078\u306e\u6a29\u9650\n--------------\n\nLambda\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\n\nAWS CLI\n-------\n\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\n- AWS CLI 1.11.28\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws --version\n```\n\n\u7d50\u679c(\u4f8b):\n\n      aws-cli/1.11.28 Python/2.7.10 Darwin/15.6.0 botocore/1.4.85\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u5834\u5408\u306f\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u307e\u3057\u3087\u3046\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nsudo -H pip install -U awscli\n```\n\n\nIAM Role\n--------\n\n'lambdaBasicExecution'\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nIAM_ROLE_NAME='lambdaBasicExecution'\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws iam get-role \\\n         --role-name ${IAM_ROLE_NAME}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n          \"Role\": {\n            \"AssumeRolePolicyDocument\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                    {\n                        \"Action\": \"sts:AssumeRole\",\n                        \"Principal\": {\n                            \"Service\": \"lambda.amazonaws.com\"\n                        },\n                        \"Effect\": \"Allow\",\n                        \"Sid\": \"\"\n                    }\n                ]\n            },\n            \"RoleId\": \"AROAXXXXXXXXXXXXXXXXX\",\n            \"CreateDate\": \"2016-12-18T01:23:45Z\",\n            \"RoleName\": \"lambdaBasicExecution\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\"\n          }\n      }\n\nIAM\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\nhttp://qiita.com/tcsh/items/6353876a5c4fef63b4d8 \u306e\u624b\u9806\u306b\u5f93\u3063\u3066\u4f5c\u6210\u3057\n\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n0. \u6e96\u5099\n=======\n\n\n0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u6c7a\u5b9a\n---------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nexport AWS_DEFAULT_REGION='ap-northeast-1'\n```\n\n\n0.2. \u5909\u6570\u306e\u78ba\u8a8d\n---------------\n\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\naws configure list\n```\n\n\u7d50\u679c(\u4f8b):\n\n            Name                    Value             Type    Location\n            ----                    -----             ----    --------\n         profile       lambdaFull-prjz-mbp13        env    AWS_DEFAULT_PROFILE\n      access_key     ****************XXXX shared-credentials-file\n      secret_key     ****************XXXX shared-credentials-file\n          region        ap-northeast-1        env    AWS_DEFAULT_REGION\n\n\n\n1. \u4e8b\u524d\u4f5c\u696d\n===========\n\n1.1. IAM Role\u306eARN\u53d6\u5f97\n----------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nIAM_ROLE_ARN=$( \\\n        aws iam get-role \\\n          --role-name ${IAM_ROLE_NAME} \\\n          --query 'Role.Arn' \\\n          --output text \\\n) \\\n        && echo ${IAM_ROLE_ARN}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\n\n\n\n1.2. Datadog\u306eAPI\u30ad\u30fc\u306e\u8a2d\u5b9a\n---------------------------\n\nhttps://app.datadoghq.com/account/settings#api \u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nDD_API_KEY='<API Keys\u306eKey\u306e\u5024>'\n```\n\nNew application key\u306b'lambda'\u3068\u5165\u529b\u3057\u3001Create Application Key\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\nHash\u306e\u5024\u3092\u5909\u6570\u306b\u53d6\u308a\u8fbc\u307f\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nDD_APP_KEY='<Application Key\u306eHash\u306e\u5024>'\n```\n\n\n1.3. Lambda\u95a2\u6570\u540d\u306e\u6c7a\u5b9a\n-----------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nLAMBDA_FUNC_NAME=\"datadog_process_rds_metrics-$( date '+%Y%m%d' )\" \\\n        && echo ${LAMBDA_FUNC_NAME}\n```\n\n\u540c\u540d\u306eLambda\u95a2\u6570\u306e\u4e0d\u5b58\u5728\u78ba\u8a8d\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      A client error (ResourceNotFoundException) occurred when calling the GetFunction operation: Function not found: arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:datadog_process_rds_metrics-20161219\n\n\n1.4. Lambda\u95a2\u6570\n---------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_LAMBDA_FUNC=\"${LAMBDA_FUNC_NAME}.py\"\nPY_FUNC_NAME='lambda_handler'\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n          FILE_LAMBDA_FUNC: ${FILE_LAMBDA_FUNC}\n          PY_FUNC_NAME:     ${PY_FUNC_NAME}\n          DD_API_KEY:       ${DD_API_KEY}\n          DD_APP_KEY:       ${DD_APP_KEY}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat << EOF > ${FILE_LAMBDA_FUNC}\nfrom __future__ import print_function\n\nimport os\nimport gzip\nimport json\nimport re\nimport time\nimport urllib\nimport urllib2\nfrom base64 import b64decode\nfrom StringIO import StringIO\n\nimport boto3\n\n# retrieve datadog options from KMS\n#KMS_ENCRYPTED_KEYS = os.environ['kmsEncryptedKeys']\n#kms = boto3.client('kms')\ndatadog_keys = json.loads('{\"api_key\":\"${DD_API_KEY}\", \"app_key\":\"${DD_APP_KEY}\"}')\n\nprint('INFO Lambda function initialized, ready to send metrics')\n\n\ndef _process_rds_enhanced_monitoring_message(ts, message, account, region):\n    instance_id = message['instanceID']\n    host_id = message['instanceResourceID']\n    tags = [\n        'dbinstanceidentifier:%s' % instance_id,\n        'aws_account:%s' % account,\n        'engine:%s' % message[\"engine\"],\n    ]\n\n    # metrics generation\n\n    uptime = 0\n    uptime_msg = re.split(' days?, ', message['uptime'])\n    if len(uptime_msg) == 2:\n        uptime += 24 * 3600 * int(uptime_msg[0])\n    uptime_day = uptime_msg[-1].split(':')\n    uptime += 3600 * int(uptime_day[0])\n    uptime += 60 * int(uptime_day[1])\n    uptime += int(uptime_day[2])\n    stats.gauge('aws.rds.uptime', uptime, timestamp=ts, tags=tags, host=host_id)\n\n    stats.gauge('aws.rds.virtual_cpus', message['numVCPUs'], timestamp=ts, tags=tags, host=host_id)\n\n    stats.gauge('aws.rds.load.1', message['loadAverageMinute']['one'], timestamp=ts, tags=tags, host=host_id)\n    stats.gauge('aws.rds.load.5', message['loadAverageMinute']['five'], timestamp=ts, tags=tags, host=host_id)\n    stats.gauge('aws.rds.load.15', message['loadAverageMinute']['fifteen'], timestamp=ts, tags=tags, host=host_id)\n\n    for namespace in ['cpuUtilization', 'memory', 'tasks', 'swap']:\n        for key, value in message[namespace].iteritems():\n            stats.gauge('aws.rds.%s.%s' % (namespace.lower(), key), value, timestamp=ts, tags=tags, host=host_id)\n\n    for network_stats in message['network']:\n        network_tag = ['interface:%s' % network_stats.pop('interface')]\n        for key, value in network_stats.iteritems():\n            stats.gauge('aws.rds.network.%s' % key, value, timestamp=ts, tags=tags + network_tag, host=host_id)\n\n    disk_stats = message['diskIO'][0]  # we never expect to have more than one disk\n    for key, value in disk_stats.iteritems():\n        stats.gauge('aws.rds.diskio.%s' % key, value, timestamp=ts, tags=tags, host=host_id)\n\n    for fs_stats in message['fileSys']:\n        fs_tag = [\n            'name:%s' % fs_stats.pop('name'),\n            'mountPoint:%s' % fs_stats.pop('mountPoint')\n        ]\n        for key, value in fs_stats.iteritems():\n            stats.gauge('aws.rds.filesystem.%s' % key, value, timestamp=ts, tags=tags + fs_tag, host=host_id)\n\n    for process_stats in message['processList']:\n        process_tag = [\n            'name:%s' % process_stats.pop('name'),\n            'id:%s' % process_stats.pop('id')\n        ]\n        for key, value in process_stats.iteritems():\n            stats.gauge('aws.rds.process.%s' % key, value, timestamp=ts, tags=tags + process_tag, host=host_id)\n\n\ndef ${PY_FUNC_NAME}(event, context):\n    ''' Process a RDS enhenced monitoring DATA_MESSAGE,\n        coming from CLOUDWATCH LOGS\n    '''\n    # event is a dict containing a base64 string gzipped\n    event = json.loads(gzip.GzipFile(fileobj=StringIO(event['awslogs']['data'].decode('base64'))).read())\n\n    account = event['owner']\n    region = context.invoked_function_arn.split(':', 4)[3]\n\n    log_events = event['logEvents']\n\n    for log_event in log_events:\n        message = json.loads(log_event['message'])\n        ts = log_event['timestamp'] / 1000\n        _process_rds_enhanced_monitoring_message(ts, message, account, region)\n\n    stats.flush()\n    return {'Status': 'OK'}\n\n\n# Helpers to send data to Datadog, inspired from https://github.com/DataDog/datadogpy\n\nclass Stats(object):\n\n    def __init__(self):\n        self.series = []\n\n    def gauge(self, metric, value, timestamp=None, tags=None, host=None):\n        base_dict = {\n            'metric': metric,\n            'points': [(int(timestamp or time.time()), value)],\n            'type': 'gauge',\n            'tags': tags,\n        }\n        if host:\n            base_dict.update({'host': host})\n        self.series.append(base_dict)\n\n    def flush(self):\n        metrics_dict = {\n            'series': self.series,\n        }\n        self.series = []\n\n        creds = urllib.urlencode(datadog_keys)\n        data = json.dumps(metrics_dict)\n        url = '%s?%s' % (datadog_keys.get('api_host', 'https://app.datadoghq.com/api/v1/series'), creds)\n        req = urllib2.Request(url, data, {'Content-Type': 'application/json'})\n        response = urllib2.urlopen(req)\n        print('INFO Submitted data with status {}'.format(response.getcode()))\n\nstats = Stats()\nEOF\n\ncat ${FILE_LAMBDA_FUNC}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nzip ${LAMBDA_FUNC_NAME}.zip ${FILE_LAMBDA_FUNC}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      adding: datadog_process_rds_metrics-20161219.py (deflated 43%)\n\n\n2. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n===================\n\n## 2.1. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nLAMBDA_FUNC_DESC='Pushes RDS Enhanced metrics to Datadog.'\nLAMBDA_RUNTIME='python2.7'\nLAMBDA_HANDLER=\"${LAMBDA_FUNC_NAME}.${PY_FUNC_NAME}\"\nFILE_LAMBDA_ZIP=\"${LAMBDA_FUNC_NAME}.zip\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:  ${LAMBDA_FUNC_NAME}\n        LAMBDA_FUNC_DESC: \"${LAMBDA_FUNC_DESC}\"\n        LAMBDA_RUNTIME:    ${LAMBDA_RUNTIME}\n        FILE_LAMBDA_ZIP    ${FILE_LAMBDA_ZIP}\n        IAM_ROLE_ARN:      ${IAM_ROLE_ARN}\n        LAMBDA_HANDLER:    ${LAMBDA_HANDLER}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda create-function \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --description \"${LAMBDA_FUNC_DESC}\" \\\n        --zip-file fileb://${FILE_LAMBDA_ZIP} \\\n        --runtime ${LAMBDA_RUNTIME} \\\n        --role ${IAM_ROLE_ARN} \\\n        --handler ${LAMBDA_HANDLER}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n        \"CodeSha256\": \"lKbgNPMuV0D2blwwCSWwKLwlTrzoPAsFAdB6/FxJ+Q4=\",\n        \"FunctionName\": \"datadog_process_rds_metrics-20161219\",\n        \"CodeSize\": 1962,\n        \"MemorySize\": 128,\n        \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:datadog_process_rds_metrics-20161219\",\n        \"Version\": \"$LATEST\",\n        \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n        \"Timeout\": 3,\n        \"LastModified\": \"2016-12-18T01:23:45.678+0000\",\n        \"Handler\": \"datadog_process_rds_metrics-20161219.lambda_handler\",\n        \"Runtime\": \"python2.7\",\n        \"Description\": \"Pushes RDS Enhanced metrics to Datadog.\"\n      }\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n        \"Code\": {\n          \"RepositoryType\": \"S3\",\n          \"Location\": \"https://awslambda-ap-ne-1-tasks.s3-ap-northeast-1.amazonaws.com/snapshots/XXXXXXXXXXXX/HelloWorld-2979ba79-b08f-495d-9ee6-46397c95ba13?x-amz-security-token=AQoDYXdzEDoa8AMR6t8h66eOXhN3%2Fx7XpuRxvf7pVn7IuWV4cEmwx0CtZT6yxCJ1%2BWmigYXqGoyQHuBYOWnxbhmwEcTg839qMuhSu1fk0fXpXf0oJOLkhKMudNqhdElyFQpzyT6Q8GDfhAsfbX9wvwCDTty4imxz7MczF%2FQl6tgvTYdip08ap5fAyrknZGV1%2B1Ggnp5w6JOjydYxuUsWwhoxoEWzi7SoVTmpRQQA91c4VW9lNotOAHACFxo6klzDPM8mxR9RJl66WxFugL0wQJyLUpmtjS9XoArD86sEWWiIccMpV2BQipTPQlzL%2F1Hoy%2BDF6QUxyPUihlDjPBoJTISTP8W1wxmzW%2BLbilAfFQRPY7CFjzR0k%2FA%2FIX5x9iyz52Pu1Q0ASTw1l%2Fq%2Fo3pRbvzWR79QS%2BpxXrwbYzoQHKiK62DSTsQo5tqKPsiDCYzrPxbq8lm7pNBPG%2FsxjePRWBVJeRl08WxEjSjoRRwBOPX5mz1BCUoUBPGG5tEENp87A%2FCdDgibFWM5DdYhwtaYPY7FTmi8DvqjQHL9jOmP8YuVteBTBcv8nFW6UbErPjwwn79FKG1u5M9HoTWUqUMBByz6D4tTRSEw6iJU7XdCujFnhnHe5V8imZ1KGI7fDWpciJhrhml0wnKPCK%2Fe9lK1P2kO7ldSWc7zn5hcIOD2tbEF&AWSAccessKeyId=ASIAJFVALOKV5SJVYPPA&Expires=1445825978&Signature=bvwu1Ny34LgTmZeOO3q4sn7x3Fg%3D\"\n        },\n        \"Configuration\": {\n          \"Version\": \"$LATEST\",\n          \"CodeSha256\": \"lKbgNPMuV0D2blwwCSWwKLwlTrzoPAsFAdB6/FxJ+Q4=\",\n          \"FunctionName\": \"datadog_process_rds_metrics-20161219\",\n          \"MemorySize\": 128,\n          \"CodeSize\": 350,\n          \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:datadog_process_rds_metrics-20161219\",\n          \"Handler\": \"datadog_process_rds_metrics-20161219.lambda_handler\",\n          \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n          \"Timeout\": 3,\n          \"LastModified\": \"2016-12-18T01:23:45.678+0000\",\n          \"Runtime\": \"python2.7\",\n          \"Description\": \"Pushes RDS Enhanced metrics to Datadog.\"\n        }\n      }\n\n\n\n## 2.2. Lambda\u95a2\u6570\u306e\u66f4\u65b0\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e3\u79d2\u3067\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f30\u79d2\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_TIMEOUT='30'\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME: ${LAMBDA_FUNC_NAME}\n        LAMBDA_TIMEOUT:   ${LAMBDA_TIMEOUT}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda update-function-configuration \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --timeout \"${LAMBDA_TIMEOUT}\"\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n        \"CodeSha256\": \"lKbgNPMuV0D2blwwCSWwKLwlTrzoPAsFAdB6/FxJ+Q4=\",\n        \"FunctionName\": \"datadog_process_rds_metrics-20161219\",\n        \"VpcConfig\": {\n            \"SubnetIds\": [],\n            \"SecurityGroupIds\": []\n        },\n        \"CodeSize\": 350,\n        \"MemorySize\": 128,\n        \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:datadog_process_rds_metrics-20161219\",\n        \"Version\": \"$LATEST\",\n        \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n        \"Timeout\": 30,\n        \"LastModified\": \"2016-12-18T01:23:45.678+0000\",\n        \"Handler\": \"datadog_process_rds_metrics-20161219.handler\",\n        \"Runtime\": \"python2.7\",\n        \"Description\": \"Pushes RDS Enhanced metrics to Datadog.\"\n      }\n\n\n\n3. Lambda\u95a2\u6570\u306e\u52d5\u4f5c\u78ba\u8a8d\n=======================\n\n\n3.1. \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n-------------------------\n\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-log-data.json\" \\\n          && echo ${FILE_INPUT}\n```\n\n```bash:\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf:\ncat << EOF > ${FILE_INPUT}\n{\n        \"messageType\":\"DATA_MESSAGE\",\n        \"owner\":\"123456789123\",\n        \"logGroup\":\"testLogGroup\",\n        \"logStream\":\"testLogStream\",\n        \"subscriptionFilters\":[\n          \"testFilter\"\n        ],\n        \"logEvents\":[\n          {\n            \"id\":\"eventId1\",\n            \"timestamp\":1440442987000,\n            \"message\": \"{\\\"engine\\\":\\\"Postgres\\\",\\\"instanceID\\\":\\\"postgresql-redmine-20161211\\\",\\\"instanceResourceID\\\":\\\"db-7ZOMGTEKHCZNLIFRXB3TOTR2XQ\\\",\\\"timestamp\\\":\\\"2016-12-13T06:11:44Z\\\",\\\"version\\\":1.00,\\\"uptime\\\":\\\"2 days, 0:40:25\\\",\\\"numVCPUs\\\":1,\\\"cpuUtilization\\\":{\\\"guest\\\":0.00,\\\"irq\\\":0.00,\\\"system\\\":0.27,\\\"wait\\\":0.20,\\\"idle\\\":98.80,\\\"user\\\":0.67,\\\"total\\\":1.21,\\\"steal\\\":0.00,\\\"nice\\\":0.07},\\\"loadAverageMinute\\\":{\\\"fifteen\\\":0.05,\\\"five\\\":0.01,\\\"one\\\":0.00},\\\"memory\\\":{\\\"writeback\\\":12,\\\"hugePagesFree\\\":0,\\\"hugePagesRsvd\\\":0,\\\"hugePagesSurp\\\":0,\\\"cached\\\":591812,\\\"hugePagesSize\\\":2048,\\\"free\\\":103168,\\\"hugePagesTotal\\\":0,\\\"inactive\\\":388232,\\\"pageTables\\\":4740,\\\"dirty\\\":164,\\\"mapped\\\":33312,\\\"active\\\":428844,\\\"total\\\":1020188,\\\"slab\\\":44440,\\\"buffers\\\":56164},\\\"tasks\\\":{\\\"sleeping\\\":146,\\\"zombie\\\":0,\\\"running\\\":4,\\\"stopped\\\":0,\\\"total\\\":150,\\\"blocked\\\":0},\\\"swap\\\":{\\\"cached\\\":0,\\\"total\\\":4095996,\\\"free\\\":4095928},\\\"network\\\":[{\\\"interface\\\":\\\"eth0\\\",\\\"rx\\\":451.53,\\\"tx\\\":3785.40}],\\\"diskIO\\\":[{\\\"writeKbPS\\\":16.80,\\\"readIOsPS\\\":0.00,\\\"await\\\":3.87,\\\"readKbPS\\\":0.00,\\\"rrqmPS\\\":0.00,\\\"util\\\":0.08,\\\"avgQueueLen\\\":0.24,\\\"tps\\\":4.20,\\\"readKb\\\":0,\\\"device\\\":\\\"rdsdev\\\",\\\"writeKb\\\":252,\\\"avgReqSz\\\":4.00,\\\"wrqmPS\\\":0.00,\\\"writeIOsPS\\\":4.20}],\\\"fileSys\\\":[{\\\"used\\\":625804,\\\"name\\\":\\\"rdsfilesys\\\",\\\"usedFiles\\\":1910,\\\"usedFilePercent\\\":0.58,\\\"maxFiles\\\":327040,\\\"mountPoint\\\":\\\"/rdsdbdata\\\",\\\"total\\\":5017092,\\\"usedPercent\\\":12.47}],\\\"processList\\\":[{\\\"vss\\\":407876,\\\"name\\\":\\\"postgres: pgadmin redmine 172.18.16.8(35898) idle\\\",\\\"tgid\\\":3097,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":1.44,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3097,\\\"rss\\\":14740},{\\\"vss\\\":68748,\\\"name\\\":\\\"postgres: logger process   \\\",\\\"tgid\\\":3321,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.16,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3321,\\\"rss\\\":1660},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres: checkpointer process   \\\",\\\"tgid\\\":3323,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":1.43,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3323,\\\"rss\\\":14636},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres: writer process   \\\",\\\"tgid\\\":3324,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.51,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3324,\\\"rss\\\":5216},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres: wal writer process   \\\",\\\"tgid\\\":3325,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.79,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3325,\\\"rss\\\":8100},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres: autovacuum launcher process   \\\",\\\"tgid\\\":3326,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.27,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3326,\\\"rss\\\":2784},{\\\"vss\\\":68744,\\\"name\\\":\\\"postgres: archiver process   last was 00000001000000020000002B\\\",\\\"tgid\\\":3327,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.16,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3327,\\\"rss\\\":1672},{\\\"vss\\\":68744,\\\"name\\\":\\\"postgres: stats collector process   \\\",\\\"tgid\\\":3328,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.19,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3328,\\\"rss\\\":1968},{\\\"vss\\\":399712,\\\"name\\\":\\\"postgres: pgadmin redmine 172.18.16.8(36634) idle\\\",\\\"tgid\\\":6552,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.89,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":6552,\\\"rss\\\":9128},{\\\"vss\\\":393516,\\\"name\\\":\\\"postgres: rdsadmin rdsadmin localhost(63217) idle\\\",\\\"tgid\\\":27304,\\\"parentID\\\":3320,\\\"memoryUsedPc\\\":0.77,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":27304,\\\"rss\\\":7832},{\\\"vss\\\":289936,\\\"name\\\":\\\"postgres\\\",\\\"tgid\\\":3320,\\\"parentID\\\":1,\\\"memoryUsedPc\\\":1.78,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":3320,\\\"rss\\\":18140},{\\\"vss\\\":657332,\\\"name\\\":\\\"OS processes\\\",\\\"tgid\\\":0,\\\"parentID\\\":0,\\\"memoryUsedPc\\\":2.22,\\\"cpuUsedPc\\\":0.00,\\\"id\\\":0,\\\"rss\\\":22472},{\\\"vss\\\":887200,\\\"name\\\":\\\"RDS processes\\\",\\\"tgid\\\":0,\\\"parentID\\\":0,\\\"memoryUsedPc\\\":15.71,\\\"cpuUsedPc\\\":0.07,\\\"id\\\":0,\\\"rss\\\":160176}]}\"\n          }\n        ]\n}\nEOF\n\ncat ${FILE_INPUT}\n```\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\njsonlint -q ${FILE_INPUT}\n```\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ngzip ${FILE_INPUT}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nSTR_DATA=$( cat ${FILE_INPUT}.gz | base64 ) \\\n        && echo ${STR_DATA}\n```\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-data.json\" \\\n          && echo ${FILE_INPUT}\n```\n\n```bash:\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf:\ncat << EOF > ${FILE_INPUT}\n{\n        \"awslogs\": {\n          \"data\": \"${STR_DATA}\"\n        }\n}\nEOF\n\ncat ${FILE_INPUT}\n```\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\njsonlint -q ${FILE_INPUT}\n```\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n\n3.2. lambda\u95a2\u6570\u306e\u624b\u52d5\u5b9f\u884c\n-------------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n```\n\n\u7d50\u679c(\u4f8b):\n\n      200\n\n\n3.3. lambda\u95a2\u6570\u306e\u5b9f\u884c\u7d50\u679c\u306e\u78ba\u8a8d\n-------------------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_OUTPUT_LAMBDA}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\"Status\": \"OK\"}\n\n\n3.4. lambda\u95a2\u6570\u306e\u30ed\u30b0\u306e\u78ba\u8a8d\n---------------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'LogResult' \\\n        | sed 's/\"//g' \\\n        | base64 --decode\n```\n\n\u7d50\u679c(\u4f8b):\n\n      START RequestId: 4620fd3f-c0fb-11e6-be7f-5d539d6c06cd Version: $LATEST\n      INFO Submitted data with status 202\n      END RequestId: 4620fd3f-c0fb-11e6-be7f-5d539d6c06cd\n      REPORT RequestId: 4620fd3f-c0fb-11e6-be7f-5d539d6c06cd      Duration: 1019.04 ms    Billed Duration: 1100 ms        Memory Size: 128 MB     Max Memory Used: 31 MB\n\n\n\u5b8c\u4e86\n====\n", "tags": ["AWS", "aws-cli", "lambda", "CloudWatch"]}