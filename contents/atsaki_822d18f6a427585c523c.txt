{"context": " More than 1 year has passed since last update.Ruby\u306e\u9ad8\u6a5f\u80fd\u306aREPL\u3067\u3042\u308bpry\u3068\u30de\u30eb\u30c1\u30af\u30e9\u30a6\u30c9\u5bfe\u5fdc\u30e9\u30a4\u30d6\u30e9\u30ea\u306efog\u3092\u5229\u7528\u3057\u3066\u3001\u7c21\u5358\u306b\u8907\u6570\u306e\u30af\u30e9\u30a6\u30c9\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nTL;DR\n\npry\u3068fog\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u30af\u30e9\u30a6\u30c9\u306e\u64cd\u4f5c\u306b\u88dc\u5b8c\u30fb\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u30fb\u5c65\u6b74\u30fbRuby\u306e\u914d\u5217\u64cd\u4f5c\u306a\u3069\u304c\u4f7f\u3048\u975e\u5e38\u306b\u4fbf\u5229\nfog\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u3088\u308a\u7570\u306a\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3082\u540c\u3058\u30b3\u30de\u30f3\u30c9\u3067\u64cd\u4f5c\u3067\u304d\u308b\n\u4eee\u60f3\u30de\u30b7\u30f3\u3060\u3051\u3067\u306a\u304f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ec\u30fc\u30b8\u3001DNS\u3001CDN\u3082\u6271\u3048\u308b\n\n\n\u6e96\u5099\npry\u3068fog\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ gem install pry\n$ gem install fog\n\n\npry\u306e\u8a2d\u5b9a\n~/.pryrc \u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\u3057\u3066pry\u304b\u3089fog\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30a6\u30c9\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nPry::Commands.create_command \"fog\"  do\n  description \"Connect to the service provider using Fog\"\n  command_options :keep_retval => true\n\n  banner <<-BANNER\n    Usage:\n    fog [OPTIONS] PROFILE  # Connect to the provider using the specified profile\n    fog -l                 # list profiles\n  BANNER\n\n  def setup\n    require 'yaml'\n    require 'fog'\n    @profiles = YAML.load_file(File.expand_path(\"~/.fog\"))\n  end\n\n  def options(opt)\n    opt.on :l, :list, 'List profiles'\n    opt.on :r, :resource, 'Resource (compute, storage, dns, cdn)',\n      :argument => true, :default => 'compute', :as => String\n    opt.on :p, :provider, 'Provider', :argument => true, :as => String\n    opt.on :n, :nosession,  'Return a connection object without starting session'\n  end\n\n  def process\n\n    if opts[:list]\n      @profiles.keys.each { |k| output.puts k }\n      return\n    end\n\n    profile_name = args.first.nil? ? 'default' : args.first\n    profile = symbolize(@profiles[profile_name])\n    if profile.nil?\n      output.puts \"No such profile: #{args.first}\"\n      return\n    end\n\n    profile[:provider] = opts[:provider].nil? ? profile[:provider] : opts[:provider]\n\n    connection = \n      case opts[:resource]\n      when \"storage\"\n        Fog::Storage.new(profile)\n      when \"dns\"\n        Fog::DNS.new(profile)\n      when \"cdn\"\n        Fog::CDN.new(profile)\n      else\n        Fog::Compute.new(profile)\n      end\n\n    if ! opts[:nosession]\n      connection.pry :prompt => proc { |_, _, pry|\n        \"[#{pry.input_array.size}] fog[#{opts[:resource].downcase}:#{profile[:provider].downcase}:#{profile_name}]> \"\n      }\n    end\n\n    connection\n  end\n\n  private\n\n  def symbolize(hash)\n\n    return nil if hash.nil?\n\n    hash.keys.each do |key|\n      hash[(key.to_sym rescue key) || key] = hash.delete(key)\n      return hash\n    end\n  end\nend\n\n\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a\nAPI\u306e\u30ad\u30fc\u3084\u30c8\u30fc\u30af\u30f3\u306a\u3069\u3092\u6bce\u56de\u5165\u529b\u3059\u308b\u624b\u9593\u3092\u7701\u304f\u305f\u3081~/.fog\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u63a5\u7d9a\u60c5\u5831\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u7279\u5b9a\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u306b\u63a5\u7d9a\u3059\u308b\u3068\u304d\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3092\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3068\u547c\u3076\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u9805\u76ee\u306f\u30d7\u30ed\u30d0\u30a4\u30c0\u6bce\u306b\u7570\u306a\u308a\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fdefault\u3068\u3044\u3046\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d:\n  provider   : \u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\n  api_key    : API_KEY\n  secret_key : SECRET_KEY\n\n\u4eca\u56de\u8a66\u3057\u3066\u307f\u305fIDCF\u30af\u30e9\u30a6\u30c9\u3001AWS\u3001DigitalOcean\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ndefault\u3092\u7c21\u5358\u306b\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u30a2\u30f3\u30ab\u30fc\u3068\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n~/.fog\n---\n\nidcfcloud: &idcfcloud\n  provider:                     Cloudstack\n  cloudstack_scheme:            https\n  cloudstack_host:              compute.jp-east.idcfcloud.com\n  cloudstack_path:              /client/api\n  cloudstack_port:              443\n  cloudstack_api_key:           YOUR_API_KEY\n  cloudstack_secret_access_key: YOUR_SECRET_KEY\n\naws: &aws\n  provider:              AWS\n  aws_access_key_id:     YOUR_ACCESS_KEY_ID\n  aws_secret_access_key: YOUR_SECRET_ACCESS_KEY\n\ndigitalocean: &digitalocean\n  provider:               DigitalOcean\n  digitalocean_api_key:   YOUR_API_KEY\n  digitalocean_client_id: YOUR_CLIENT_KEY\n\ndefault: *idcfcloud\n\n\n\n\u4f7f\u3044\u65b9\n\n\u30af\u30e9\u30a6\u30c9\u3078\u306e\u63a5\u7d9a\npry\u3092\u8d77\u52d5\u3059\u308b\u3068fog\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306e\u3088\u3046\u306b\u5f15\u6570\u306b\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4e0e\u3048\u308b\u3068\u3001\u305d\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30a6\u30c9\u306b\u63a5\u7d9a\u3057\u3001\n\u65b0\u3057\u3044pry\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4e0e\u3048\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306fdefault \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n[1] pry(main)> fog idcfcloud\n[1] fog[compute:cloudstack:idcfcloud]> \n\n\u30b9\u30b3\u30fc\u30d7\u304cfog\u306e\u63a5\u7d9a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u5404\u7a2e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n[1] fog[compute:cloudstack:idcfcloud]> zones\n\nexit \u30b3\u30de\u30f3\u30c9\u3067\u73fe\u5728\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u629c\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n[2] fog[compute:cloudstack:idcfcloud]> exit\n\n\n\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u6307\u5b9a\nprovider \u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3001\u8907\u6570\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u63a5\u7d9a\u60c5\u5831\u3092\u307e\u3068\u3081\u3066\u66f8\u3044\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3-p \u3067\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n[1] pry(main)> fog -p cloudstack default\n\n\n\u623b\u308a\u5024\nfog\u30b3\u30de\u30f3\u30c9\u306f_ \u3067\u63a5\u7d9a\u3057\u305ffog\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\nfog\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u307f\u304c\u6b32\u3057\u3044\u5834\u5408\u306b\u306f\u3001-n\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3068\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u305b\u305a\u306b_ \u3060\u3051\u3092\u8fd4\u3057\u307e\u3059\u3002\n[1] pry(main)> fog -n idcfcloud\n[2] pry(main)> c = _\n[3] pry(main)> c.zones\n\n\n\u4f7f\u7528\u4f8b\n\u4ee5\u4e0b\u3067\u306f\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u300c>>\u300d\u3067\u8868\u3057\u307e\u3059\u3002\u51fa\u529b\u306f\u9069\u5f53\u306b\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\n\nIDCF\u30af\u30e9\u30a6\u30c9\u3067\u4eee\u60f3\u30de\u30b7\u30f3\u4f5c\u6210\u30fb\u524a\u9664\n\u307e\u305aIDCF\u30af\u30e9\u30a6\u30c9\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n>> fog idcfcloud\n\n\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u30be\u30fc\u30f3\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001\u30b5\u30fc\u30d3\u30b9\u30aa\u30d5\u30a1\u30ea\u30f3\u30b0\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u30be\u30fc\u30f3\u306e\u60c5\u5831\u306fzones \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306f1\u30be\u30fc\u30f3\u3057\u304b\u306a\u3044\u306e\u3067\u6700\u521d\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n>> zone = zones.first;\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306fimages \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002images\u306f\u5185\u90e8\u7684\u306blistTemplates \u3092 templatefitler=self \u3067\u547c\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3082\u53d6\u5f97\u3059\u308b\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067templatefilter \u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n>> images\n=> []\n>> images.all('templatefilter'=>'executable').collect { |i| i.name }\n=> [\"CentOS 7.0 64-bit\",\n \"CentOS 6.5 64-bit\",\n \"CentOS 5.10 64-bit\",\n \"CentOS 5.10 32-bit\",\n \"Red Hat Enterprise Linux 6.5 64-bit\",\n \"Red Hat Enterprise Linux 5.10 64-bit\",\n \"Red Hat Enterprise Linux 5.10 32-bit\",\n \"Ubuntu Server 14.04 LTS 64-bit\",\n \"Ubuntu Server 12.04 LTS 64-bit\",\n \"Ubuntu Server 10.04 LTS 64-bit\",\n \"VyOS 1.0.4 64-bit\",\n \"AppTemplate CentOS 6.5 64-bit\",\n \"CentOS 6.5 64-bit for Vagrant\",\n \"ubuntu-1gb-opt\",\n \"Windows Server 2008 R2 Ent SP1\",\n \"Windows Server 2012 R2 Std\",\n \"cl-base-centos65-08192014\",\n \"Windows Server 2012 Std\",\n \"Windows Server 2012 R2 Std + SQL2014 Std\",\n \"Windows Server 2012 R2 Std + SQL2012 Std SP2\",\n \"Ubuntu-1G\",\n \"Windows Server 2012 R2 Std + SQL2008 R2 Std SP3\",\n \"Windows Server 2012 Std + SQL2014 Std\",\n \"Ubuntu-1GB-2\",\n \"Windows Server 2012 Std + SQL2008 R2 Std SP3\",\n \"Windows Server 2008 R2 Ent SP1 + SQL2014 Std\",\n \"Windows Server 2008 R2 Ent SP1 + SQL2012 Std SP2\",\n \"Windows Server 2008 R2 Ent SP1 + SQL2008 R2 Std SP3\",\n \"Ubuntu-1GB-op\",\n \"CoreOS (stable) 494.4.0 64-bit\",\n \"RDB Service BASE Template\",\n \"Windows Server 2012 Std + SQL2012 Std SP2\"]\n\n\u4eca\u56de\u306fCentOS 7.0 64-bit \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002find\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u7279\u5b9a\u306e\u8981\u7d20\u3092\u629c\u304d\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>> image = images.all('templatefilter'=>'executable').find{|i| /CentOS 7.0 64-bit/ =~ i.name }\n\n\u30b5\u30fc\u30d3\u30b9\u30aa\u30d5\u30a1\u30ea\u30f3\u30b0\u306fflavors \u3067\u6240\u5f97\u3067\u304d\u307e\u3059\u3002get\u30e1\u30bd\u30c3\u30c9\u3067UUID\u3092\u6307\u5b9a\u3057\u3066light.S1 \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n>> flavors.collect{|f| [f.id, f.name, f.cpu_number, f.cpu_speed, f.memory] }\n=> [[\"e01a9f32-55c4-4c0d-9b7c-d49a3ccfd3f6\", \"light.S1\", 1, 800, 1024],\n [\"d1aac6d2-bb47-4106-90d0-6a73ac3ae78e\", \"light.S2\", 1, 800, 2048],\n [\"55621f17-4d38-457c-ba34-e6199701b67b\", \"standard.S4\", 1, 2400, 4096],\n [\"7ae143a6-5662-4f1d-bc4c-10defa775bcb\", \"standard.M8\", 2, 2400, 8192],\n [\"6a99ff4c-1a24-4aa6-b4cc-600220987ed0\", \"standard.L16\", 4, 2400, 16384],\n [\"354c62e6-b99b-42f2-b5c7-e741f1085422\", \"standard.XL32\", 8, 2400, 32768],\n [\"8cf15770-c3c8-4efc-8ae5-b8327790db76\", \"highcpu.M4\", 2, 2600, 4096],\n [\"435c1aab-e796-42c7-9320-22ebdc8f50aa\", \"highcpu.L8\", 4, 2600, 8192],\n [\"6fda5e0c-e64d-46ea-893d-7e2ac9e128e7\", \"highcpu.XL16\", 8, 2600, 16384],\n [\"7c548831-427b-437c-9c8b-80dde8031303\", \"highcpu.2XL32\", 16, 2600, 32768],\n [\"12e39b73-3ce6-4e57-9036-3dac0c2b2b06\", \"highmem.M16\", 2, 2200, 16384],\n [\"d59817bc-ed79-4083-8b71-51b26c76d311\", \"highmem.L32\", 4, 2200, 32768],\n [\"ee5ee568-76b2-46ad-9221-c695e6f2149d\", \"highmem.XL64\", 8, 2200, 65536],\n [\"9a2f3ee4-af46-4790-9331-753674c16e68\", \"highio.5XL128\", 40, 2492, 131072]]\n>> flavor = flavors.get(\"e01a9f32-55c4-4c0d-9b7c-d49a3ccfd3f6\")\n\n\u4eee\u60f3\u30de\u30b7\u30f3\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u60c5\u5831\u304c\u96c6\u307e\u3063\u305f\u306e\u3067\u3001\u3044\u3088\u3044\u3088\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n>> server = servers.create(:display_name=>\"fogtest\", :zone_id=>zone.id, :image_id=>image.id, :flavor_id=>flavor.id)\n\nservers.create \u3092\u5b9f\u884c\u3059\u308b\u3068\u4f5c\u6210\u4e2d\u306eServer\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8fd4\u308a\u307e\u3059\u3002\n\u4f5c\u6210\u304c\u5b8c\u4e86\u3059\u308b\u306e\u3092\u5f85\u3064\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306bwait_for \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n>> server.wait_for { ready? }\n\n\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u524a\u9664\u3059\u308b\u969b\u306b\u306fdestroy \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n>> server.destroy\n\n\nDigitalOcean\u3067\u4eee\u60f3\u30de\u30b7\u30f3\u4f5c\u6210\u30fb\u524a\u9664\n\u307e\u305a\u306f\u3001DigitalOcean\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n>> fog digitalocean\n\n\u307b\u3068\u3093\u3069\u306e\u64cd\u4f5c\u306fIDCF\u30af\u30e9\u30a6\u30c9\u3068\u540c\u3058\u3067\u3059\u304c\u3001DigitalOcean\u306e\u5834\u5408\u306b\u306fzones\u3067\u306f\u306a\u304fregions\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u4f5c\u6210\u3057\u305f\u4eee\u60f3\u30de\u30b7\u30f3\u306bSSH\u3067\u63a5\u7d9a\u3059\u308b\u305f\u3081\u4f5c\u6210\u6642\u306bssh_key_ids \u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n>> region = regions.first\n>> images.all.collect{|i| [i.id, i.distribution, i.name] }\n=> [[9836782, \"CoreOS\", \"557.0.0 (alpha)\"],\n [9836871, \"CoreOS\", \"522.4.0 (beta)\"],\n [9836874, \"CoreOS\", \"522.4.0 (stable)\"],\n [6370882, \"Fedora\", \"20 x64\"],\n [6370885, \"Fedora\", \"20 x32\"],\n [6370968, \"Fedora\", \"19 x64\"],\n [6370969, \"Fedora\", \"19 x32\"],\n [6372105, \"CentOS\", \"6.5 x32\"],\n [6372108, \"CentOS\", \"6.5 x64\"],\n [6372321, \"CentOS\", \"5.10 x64\"],\n [6372425, \"CentOS\", \"5.10 x32\"],\n [6372526, \"Debian\", \"7.0 x64\"],\n [6372528, \"Debian\", \"7.0 x32\"],\n [6372581, \"Debian\", \"6.0 x64\"],\n [6372662, \"Debian\", \"6.0 x32\"],\n [6374124, \"Ubuntu\", \"10.04 x64\"],\n [6374125, \"Ubuntu\", \"10.04 x32\"],\n [6374128, \"Ubuntu\", \"12.04.5 x64\"],\n [6374130, \"Ubuntu\", \"12.04.5 x32\"],\n [7053293, \"CentOS\", \"7.0 x64\"],\n [9801948, \"Ubuntu\", \"14.04 x32\"],\n [9801950, \"Ubuntu\", \"14.04 x64\"],\n [9801951, \"Ubuntu\", \"14.10 x32\"],\n [9801954, \"Ubuntu\", \"14.10 x64\"],\n [6376601, \"Ubuntu\", \"Ruby on Rails on 14.04 (Nginx + Unicorn)\"],\n [6423475, \"Ubuntu\", \"WordPress on 14.04\"],\n [6732690, \"Ubuntu\", \"LEMP on 14.04\"],\n [6732691, \"Ubuntu\", \"LAMP on 14.04\"],\n [6734697, \"Ubuntu\", \"Django on 14.04\"],\n [6798184, \"Ubuntu\", \"MEAN on 14.04\"],\n [8375425, \"Ubuntu\", \"Drupal 7.34 on 14.04\"],\n [8383942, \"Ubuntu\", \"Dokku v0.2.3 on 14.04 (w/ Docker 1.3.2)\"],\n [8412876, \"Ubuntu\", \"Magento 1.9.1.0 on 14.04\"],\n [8917824, \"Ubuntu\", \"ownCloud 7.0.4 on 14.04\"],\n [9063170, \"Ubuntu\", \"Ghost 0.5.7 on 14.04\"],\n [9303378, \"Ubuntu\", \"node-v0.10.34 on 14.04\"],\n [9435356, \"Ubuntu\", \"Docker 1.4.1 on 14.04\"],\n [9723053, \"Ubuntu\", \"GitLab 7.6.2 CE on 14.04\"],\n [7572830, \"Ubuntu\", \"Redmine on 14.04\"]]\n>> image = images.get(6372108)\n>> flavor = flavors.all.find{|f| /512MB/ =~ f.name}\n>> ssh_key = ssh_keys.first\n>> server = servers.create(:name=>\"fogtest\", :region_id=>region.id, :image_id=>image.id, :flavor_id=>flavor.id, :ssh_key_ids=>[ssh_key.id])\n>> server.wait_for { ready? }\n>> server.ssh(\"hostname\").first.stdout\n=> \"fogtest\\r\\n\"\n>> server.destroy\n\n\nS3\u3067\u30d0\u30b1\u30c3\u30c8\u4f5c\u6210\u30fb\u30d5\u30a1\u30a4\u30eb\u8ee2\u9001\nfog\u3067\u306f\u4eee\u60f3\u30de\u30b7\u30f3\u306e\u64cd\u4f5c\u3060\u3051\u3067\u306a\u304f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u6271\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3068\u3057\u3066S3\u306e\u64cd\u4f5c\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u6271\u3046\u969b\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067-r storage \u3092\u6307\u5b9a\u3057\u3066\u63a5\u7d9a\u3057\u307e\u3059\u3002\n>> fog -r storage aws\n\n\u30d0\u30b1\u30c3\u30c8\u306e\u4e00\u89a7\u306fdirectories \u3067\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>> directories\n=> []\n\n\u30c6\u30b9\u30c8\u7528\u306b\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n>> directories.create(:key=>\"fogtest#{Time.now.to_i}\")\n=>   <Fog::Storage::AWS::Directory\n    key=\"fogtest1420954226\",\n    creation_date=nil,\n    location=\"us-east-1\"\n  >\n\n\u30d0\u30b1\u30c3\u30c8\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n>> directories.first.files.create(:key=>\"test.txt\", :body=>\"test\")\n\npublic \u3092true \u306b\u3059\u308b\u3053\u3068\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>> file.public = true\n>> file.save\n>> Net::HTTP.get(URI.parse(file.public_url))\n=> \"test\"\n\nbody \u306b\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>> file.body = \"test2\"\n>> file.save\n\n\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u3068\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u3092S3\u306b\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>> file.body = File.open(\"/path/to/file\")\n>> file.save\n\n\u3082\u3061\u308d\u3093\u4f5c\u6210\u6642\u306b\u6307\u5b9a\u3057\u3066\u3082OK\u3067\u3059\u3002\n>> directories.first.files.create(:key=>\"test.txt\", :body=>File.open(\"/path/to/file\"))\n\n\u9006\u306bS3\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6301\u3063\u3066\u304f\u308b\u969b\u306b\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057body\u306e\u4e2d\u8eab\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n>> File.write(file.key, file.body)\n\ndestroy \u30e1\u30bd\u30c3\u30c9\u3067\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>> file.destroy\n>> directories.first.destroy\n\n\n\u6700\u5f8c\u306b\nVagrant\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306bfog\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u3063\u305f\u306e\u3067\u3001pry\u304b\u3089\u4f7f\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u60f3\u50cf\u4ee5\u4e0a\u306b\u4fbf\u5229\u3067\u3057\u305f\u3002pry\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u306a\u5834\u9762\u306f\u4ed6\u306b\u3082\u305f\u304f\u3055\u3093\u3042\u308a\u305d\u3046\u3067\u3059\u3002\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u306e\u4f5c\u6210\u306b\u3064\u3044\u3066\u306fpry\u306eWiki\u306b\u3082\u60c5\u5831\u304c\u3042\u308a\u307e\u3059\u304cpry\u306e\u30b3\u30de\u30f3\u30c9\u306e\u30b3\u30fc\u30c9\u3082\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nRuby\u306e\u9ad8\u6a5f\u80fd\u306aREPL\u3067\u3042\u308b[pry](https://github.com/pry/pry)\u3068\u30de\u30eb\u30c1\u30af\u30e9\u30a6\u30c9\u5bfe\u5fdc\u30e9\u30a4\u30d6\u30e9\u30ea\u306e[fog](http://fog.io/)\u3092\u5229\u7528\u3057\u3066\u3001\u7c21\u5358\u306b\u8907\u6570\u306e\u30af\u30e9\u30a6\u30c9\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n# TL;DR\n\n* pry\u3068fog\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u30af\u30e9\u30a6\u30c9\u306e\u64cd\u4f5c\u306b\u88dc\u5b8c\u30fb\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u30fb\u5c65\u6b74\u30fbRuby\u306e\u914d\u5217\u64cd\u4f5c\u306a\u3069\u304c\u4f7f\u3048\u975e\u5e38\u306b\u4fbf\u5229\n* fog\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u3088\u308a\u7570\u306a\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3082\u540c\u3058\u30b3\u30de\u30f3\u30c9\u3067\u64cd\u4f5c\u3067\u304d\u308b\n* \u4eee\u60f3\u30de\u30b7\u30f3\u3060\u3051\u3067\u306a\u304f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ec\u30fc\u30b8\u3001DNS\u3001CDN\u3082\u6271\u3048\u308b\n\n# \u6e96\u5099\n\npry\u3068fog\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash\n$ gem install pry\n$ gem install fog\n```\n\n## pry\u306e\u8a2d\u5b9a\n\n```~/.pryrc``` \u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\u3057\u3066pry\u304b\u3089fog\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30a6\u30c9\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```rb\nPry::Commands.create_command \"fog\"  do\n  description \"Connect to the service provider using Fog\"\n  command_options :keep_retval => true\n\n  banner <<-BANNER\n    Usage:\n    fog [OPTIONS] PROFILE  # Connect to the provider using the specified profile\n    fog -l                 # list profiles\n  BANNER\n\n  def setup\n    require 'yaml'\n    require 'fog'\n    @profiles = YAML.load_file(File.expand_path(\"~/.fog\"))\n  end\n\n  def options(opt)\n    opt.on :l, :list, 'List profiles'\n    opt.on :r, :resource, 'Resource (compute, storage, dns, cdn)',\n      :argument => true, :default => 'compute', :as => String\n    opt.on :p, :provider, 'Provider', :argument => true, :as => String\n    opt.on :n, :nosession,  'Return a connection object without starting session'\n  end\n\n  def process\n\n    if opts[:list]\n      @profiles.keys.each { |k| output.puts k }\n      return\n    end\n\n    profile_name = args.first.nil? ? 'default' : args.first\n    profile = symbolize(@profiles[profile_name])\n    if profile.nil?\n      output.puts \"No such profile: #{args.first}\"\n      return\n    end\n\n    profile[:provider] = opts[:provider].nil? ? profile[:provider] : opts[:provider]\n\n    connection = \n      case opts[:resource]\n      when \"storage\"\n        Fog::Storage.new(profile)\n      when \"dns\"\n        Fog::DNS.new(profile)\n      when \"cdn\"\n        Fog::CDN.new(profile)\n      else\n        Fog::Compute.new(profile)\n      end\n\n    if ! opts[:nosession]\n      connection.pry :prompt => proc { |_, _, pry|\n        \"[#{pry.input_array.size}] fog[#{opts[:resource].downcase}:#{profile[:provider].downcase}:#{profile_name}]> \"\n      }\n    end\n\n    connection\n  end\n\n  private\n\n  def symbolize(hash)\n\n    return nil if hash.nil?\n\n    hash.keys.each do |key|\n      hash[(key.to_sym rescue key) || key] = hash.delete(key)\n      return hash\n    end\n  end\nend\n```\n\n## \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a\n\nAPI\u306e\u30ad\u30fc\u3084\u30c8\u30fc\u30af\u30f3\u306a\u3069\u3092\u6bce\u56de\u5165\u529b\u3059\u308b\u624b\u9593\u3092\u7701\u304f\u305f\u3081```~/.fog```\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u63a5\u7d9a\u60c5\u5831\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u7279\u5b9a\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u306b\u63a5\u7d9a\u3059\u308b\u3068\u304d\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3092\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3068\u547c\u3076\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u9805\u76ee\u306f\u30d7\u30ed\u30d0\u30a4\u30c0\u6bce\u306b\u7570\u306a\u308a\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fdefault\u3068\u3044\u3046\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\n```yaml\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d:\n  provider   : \u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\n  api_key    : API_KEY\n  secret_key : SECRET_KEY\n```\n\n\u4eca\u56de\u8a66\u3057\u3066\u307f\u305f[IDCF\u30af\u30e9\u30a6\u30c9](http://www.idcf.jp/cloud/)\u3001[AWS](http://aws.amazon.com/jp/)\u3001[DigitalOcean](https://www.digitalocean.com)\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ndefault\u3092\u7c21\u5358\u306b\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u30a2\u30f3\u30ab\u30fc\u3068\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```yaml:~/.fog\n---\n\nidcfcloud: &idcfcloud\n  provider:                     Cloudstack\n  cloudstack_scheme:            https\n  cloudstack_host:              compute.jp-east.idcfcloud.com\n  cloudstack_path:              /client/api\n  cloudstack_port:              443\n  cloudstack_api_key:           YOUR_API_KEY\n  cloudstack_secret_access_key: YOUR_SECRET_KEY\n\naws: &aws\n  provider:              AWS\n  aws_access_key_id:     YOUR_ACCESS_KEY_ID\n  aws_secret_access_key: YOUR_SECRET_ACCESS_KEY\n\ndigitalocean: &digitalocean\n  provider:               DigitalOcean\n  digitalocean_api_key:   YOUR_API_KEY\n  digitalocean_client_id: YOUR_CLIENT_KEY\n\ndefault: *idcfcloud\n```\n\n# \u4f7f\u3044\u65b9\n\n## \u30af\u30e9\u30a6\u30c9\u3078\u306e\u63a5\u7d9a\n\npry\u3092\u8d77\u52d5\u3059\u308b\u3068```fog```\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306e\u3088\u3046\u306b\u5f15\u6570\u306b\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4e0e\u3048\u308b\u3068\u3001\u305d\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30a6\u30c9\u306b\u63a5\u7d9a\u3057\u3001\n\u65b0\u3057\u3044pry\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4e0e\u3048\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306f```default``` \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\n```\n[1] pry(main)> fog idcfcloud\n[1] fog[compute:cloudstack:idcfcloud]> \n```\n\n\u30b9\u30b3\u30fc\u30d7\u304cfog\u306e\u63a5\u7d9a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u5404\u7a2e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n[1] fog[compute:cloudstack:idcfcloud]> zones\n```\n\n```exit``` \u30b3\u30de\u30f3\u30c9\u3067\u73fe\u5728\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u629c\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n[2] fog[compute:cloudstack:idcfcloud]> exit\n```\n\n## \u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u6307\u5b9a\n\n```provider``` \u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3001\u8907\u6570\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u63a5\u7d9a\u60c5\u5831\u3092\u307e\u3068\u3081\u3066\u66f8\u3044\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3```-p``` \u3067\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n[1] pry(main)> fog -p cloudstack default\n```\n\n## \u623b\u308a\u5024\n\nfog\u30b3\u30de\u30f3\u30c9\u306f```_``` \u3067\u63a5\u7d9a\u3057\u305ffog\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\nfog\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u307f\u304c\u6b32\u3057\u3044\u5834\u5408\u306b\u306f\u3001```-n```\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3068\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u305b\u305a\u306b```_``` \u3060\u3051\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```\n[1] pry(main)> fog -n idcfcloud\n[2] pry(main)> c = _\n[3] pry(main)> c.zones\n```\n\n# \u4f7f\u7528\u4f8b\n\n\u4ee5\u4e0b\u3067\u306f\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u300c>>\u300d\u3067\u8868\u3057\u307e\u3059\u3002\u51fa\u529b\u306f\u9069\u5f53\u306b\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\n\n## IDCF\u30af\u30e9\u30a6\u30c9\u3067\u4eee\u60f3\u30de\u30b7\u30f3\u4f5c\u6210\u30fb\u524a\u9664\n\n\u307e\u305aIDCF\u30af\u30e9\u30a6\u30c9\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n```irb\n>> fog idcfcloud\n```\n\n\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u30be\u30fc\u30f3\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001\u30b5\u30fc\u30d3\u30b9\u30aa\u30d5\u30a1\u30ea\u30f3\u30b0\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30be\u30fc\u30f3\u306e\u60c5\u5831\u306f```zones``` \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306f1\u30be\u30fc\u30f3\u3057\u304b\u306a\u3044\u306e\u3067\u6700\u521d\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```irb\n>> zone = zones.first;\n```\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f```images``` \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002images\u306f\u5185\u90e8\u7684\u306b```listTemplates``` \u3092 ```templatefitler=self``` \u3067\u547c\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3082\u53d6\u5f97\u3059\u308b\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067```templatefilter``` \u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```irb\n>> images\n=> []\n>> images.all('templatefilter'=>'executable').collect { |i| i.name }\n=> [\"CentOS 7.0 64-bit\",\n \"CentOS 6.5 64-bit\",\n \"CentOS 5.10 64-bit\",\n \"CentOS 5.10 32-bit\",\n \"Red Hat Enterprise Linux 6.5 64-bit\",\n \"Red Hat Enterprise Linux 5.10 64-bit\",\n \"Red Hat Enterprise Linux 5.10 32-bit\",\n \"Ubuntu Server 14.04 LTS 64-bit\",\n \"Ubuntu Server 12.04 LTS 64-bit\",\n \"Ubuntu Server 10.04 LTS 64-bit\",\n \"VyOS 1.0.4 64-bit\",\n \"AppTemplate CentOS 6.5 64-bit\",\n \"CentOS 6.5 64-bit for Vagrant\",\n \"ubuntu-1gb-opt\",\n \"Windows Server 2008 R2 Ent SP1\",\n \"Windows Server 2012 R2 Std\",\n \"cl-base-centos65-08192014\",\n \"Windows Server 2012 Std\",\n \"Windows Server 2012 R2 Std + SQL2014 Std\",\n \"Windows Server 2012 R2 Std + SQL2012 Std SP2\",\n \"Ubuntu-1G\",\n \"Windows Server 2012 R2 Std + SQL2008 R2 Std SP3\",\n \"Windows Server 2012 Std + SQL2014 Std\",\n \"Ubuntu-1GB-2\",\n \"Windows Server 2012 Std + SQL2008 R2 Std SP3\",\n \"Windows Server 2008 R2 Ent SP1 + SQL2014 Std\",\n \"Windows Server 2008 R2 Ent SP1 + SQL2012 Std SP2\",\n \"Windows Server 2008 R2 Ent SP1 + SQL2008 R2 Std SP3\",\n \"Ubuntu-1GB-op\",\n \"CoreOS (stable) 494.4.0 64-bit\",\n \"RDB Service BASE Template\",\n \"Windows Server 2012 Std + SQL2012 Std SP2\"]\n```\n\n\u4eca\u56de\u306f```CentOS 7.0 64-bit``` \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002find\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u7279\u5b9a\u306e\u8981\u7d20\u3092\u629c\u304d\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```irb\n>> image = images.all('templatefilter'=>'executable').find{|i| /CentOS 7.0 64-bit/ =~ i.name }\n```\n\n\u30b5\u30fc\u30d3\u30b9\u30aa\u30d5\u30a1\u30ea\u30f3\u30b0\u306f```flavors``` \u3067\u6240\u5f97\u3067\u304d\u307e\u3059\u3002get\u30e1\u30bd\u30c3\u30c9\u3067UUID\u3092\u6307\u5b9a\u3057\u3066```light.S1``` \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```irb\n>> flavors.collect{|f| [f.id, f.name, f.cpu_number, f.cpu_speed, f.memory] }\n=> [[\"e01a9f32-55c4-4c0d-9b7c-d49a3ccfd3f6\", \"light.S1\", 1, 800, 1024],\n [\"d1aac6d2-bb47-4106-90d0-6a73ac3ae78e\", \"light.S2\", 1, 800, 2048],\n [\"55621f17-4d38-457c-ba34-e6199701b67b\", \"standard.S4\", 1, 2400, 4096],\n [\"7ae143a6-5662-4f1d-bc4c-10defa775bcb\", \"standard.M8\", 2, 2400, 8192],\n [\"6a99ff4c-1a24-4aa6-b4cc-600220987ed0\", \"standard.L16\", 4, 2400, 16384],\n [\"354c62e6-b99b-42f2-b5c7-e741f1085422\", \"standard.XL32\", 8, 2400, 32768],\n [\"8cf15770-c3c8-4efc-8ae5-b8327790db76\", \"highcpu.M4\", 2, 2600, 4096],\n [\"435c1aab-e796-42c7-9320-22ebdc8f50aa\", \"highcpu.L8\", 4, 2600, 8192],\n [\"6fda5e0c-e64d-46ea-893d-7e2ac9e128e7\", \"highcpu.XL16\", 8, 2600, 16384],\n [\"7c548831-427b-437c-9c8b-80dde8031303\", \"highcpu.2XL32\", 16, 2600, 32768],\n [\"12e39b73-3ce6-4e57-9036-3dac0c2b2b06\", \"highmem.M16\", 2, 2200, 16384],\n [\"d59817bc-ed79-4083-8b71-51b26c76d311\", \"highmem.L32\", 4, 2200, 32768],\n [\"ee5ee568-76b2-46ad-9221-c695e6f2149d\", \"highmem.XL64\", 8, 2200, 65536],\n [\"9a2f3ee4-af46-4790-9331-753674c16e68\", \"highio.5XL128\", 40, 2492, 131072]]\n>> flavor = flavors.get(\"e01a9f32-55c4-4c0d-9b7c-d49a3ccfd3f6\")\n```\n\n\u4eee\u60f3\u30de\u30b7\u30f3\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u60c5\u5831\u304c\u96c6\u307e\u3063\u305f\u306e\u3067\u3001\u3044\u3088\u3044\u3088\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```irb\n>> server = servers.create(:display_name=>\"fogtest\", :zone_id=>zone.id, :image_id=>image.id, :flavor_id=>flavor.id)\n```\n\n```servers.create``` \u3092\u5b9f\u884c\u3059\u308b\u3068\u4f5c\u6210\u4e2d\u306eServer\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8fd4\u308a\u307e\u3059\u3002\n\u4f5c\u6210\u304c\u5b8c\u4e86\u3059\u308b\u306e\u3092\u5f85\u3064\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b```wait_for``` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```irb\n>> server.wait_for { ready? }\n```\n\n\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u524a\u9664\u3059\u308b\u969b\u306b\u306f```destroy``` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```irb\n>> server.destroy\n```\n\n## DigitalOcean\u3067\u4eee\u60f3\u30de\u30b7\u30f3\u4f5c\u6210\u30fb\u524a\u9664\n\n\u307e\u305a\u306f\u3001DigitalOcean\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n```irb\n>> fog digitalocean\n```\n\n\u307b\u3068\u3093\u3069\u306e\u64cd\u4f5c\u306fIDCF\u30af\u30e9\u30a6\u30c9\u3068\u540c\u3058\u3067\u3059\u304c\u3001DigitalOcean\u306e\u5834\u5408\u306b\u306fzones\u3067\u306f\u306a\u304fregions\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u4f5c\u6210\u3057\u305f\u4eee\u60f3\u30de\u30b7\u30f3\u306bSSH\u3067\u63a5\u7d9a\u3059\u308b\u305f\u3081\u4f5c\u6210\u6642\u306b```ssh_key_ids``` \u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```irb\n>> region = regions.first\n>> images.all.collect{|i| [i.id, i.distribution, i.name] }\n=> [[9836782, \"CoreOS\", \"557.0.0 (alpha)\"],\n [9836871, \"CoreOS\", \"522.4.0 (beta)\"],\n [9836874, \"CoreOS\", \"522.4.0 (stable)\"],\n [6370882, \"Fedora\", \"20 x64\"],\n [6370885, \"Fedora\", \"20 x32\"],\n [6370968, \"Fedora\", \"19 x64\"],\n [6370969, \"Fedora\", \"19 x32\"],\n [6372105, \"CentOS\", \"6.5 x32\"],\n [6372108, \"CentOS\", \"6.5 x64\"],\n [6372321, \"CentOS\", \"5.10 x64\"],\n [6372425, \"CentOS\", \"5.10 x32\"],\n [6372526, \"Debian\", \"7.0 x64\"],\n [6372528, \"Debian\", \"7.0 x32\"],\n [6372581, \"Debian\", \"6.0 x64\"],\n [6372662, \"Debian\", \"6.0 x32\"],\n [6374124, \"Ubuntu\", \"10.04 x64\"],\n [6374125, \"Ubuntu\", \"10.04 x32\"],\n [6374128, \"Ubuntu\", \"12.04.5 x64\"],\n [6374130, \"Ubuntu\", \"12.04.5 x32\"],\n [7053293, \"CentOS\", \"7.0 x64\"],\n [9801948, \"Ubuntu\", \"14.04 x32\"],\n [9801950, \"Ubuntu\", \"14.04 x64\"],\n [9801951, \"Ubuntu\", \"14.10 x32\"],\n [9801954, \"Ubuntu\", \"14.10 x64\"],\n [6376601, \"Ubuntu\", \"Ruby on Rails on 14.04 (Nginx + Unicorn)\"],\n [6423475, \"Ubuntu\", \"WordPress on 14.04\"],\n [6732690, \"Ubuntu\", \"LEMP on 14.04\"],\n [6732691, \"Ubuntu\", \"LAMP on 14.04\"],\n [6734697, \"Ubuntu\", \"Django on 14.04\"],\n [6798184, \"Ubuntu\", \"MEAN on 14.04\"],\n [8375425, \"Ubuntu\", \"Drupal 7.34 on 14.04\"],\n [8383942, \"Ubuntu\", \"Dokku v0.2.3 on 14.04 (w/ Docker 1.3.2)\"],\n [8412876, \"Ubuntu\", \"Magento 1.9.1.0 on 14.04\"],\n [8917824, \"Ubuntu\", \"ownCloud 7.0.4 on 14.04\"],\n [9063170, \"Ubuntu\", \"Ghost 0.5.7 on 14.04\"],\n [9303378, \"Ubuntu\", \"node-v0.10.34 on 14.04\"],\n [9435356, \"Ubuntu\", \"Docker 1.4.1 on 14.04\"],\n [9723053, \"Ubuntu\", \"GitLab 7.6.2 CE on 14.04\"],\n [7572830, \"Ubuntu\", \"Redmine on 14.04\"]]\n>> image = images.get(6372108)\n>> flavor = flavors.all.find{|f| /512MB/ =~ f.name}\n>> ssh_key = ssh_keys.first\n>> server = servers.create(:name=>\"fogtest\", :region_id=>region.id, :image_id=>image.id, :flavor_id=>flavor.id, :ssh_key_ids=>[ssh_key.id])\n>> server.wait_for { ready? }\n>> server.ssh(\"hostname\").first.stdout\n=> \"fogtest\\r\\n\"\n>> server.destroy\n```\n## S3\u3067\u30d0\u30b1\u30c3\u30c8\u4f5c\u6210\u30fb\u30d5\u30a1\u30a4\u30eb\u8ee2\u9001\n\nfog\u3067\u306f\u4eee\u60f3\u30de\u30b7\u30f3\u306e\u64cd\u4f5c\u3060\u3051\u3067\u306a\u304f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u6271\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u4f8b\u3068\u3057\u3066S3\u306e\u64cd\u4f5c\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u6271\u3046\u969b\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067```-r storage``` \u3092\u6307\u5b9a\u3057\u3066\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n```irb\n>> fog -r storage aws\n```\n\n\u30d0\u30b1\u30c3\u30c8\u306e\u4e00\u89a7\u306f```directories``` \u3067\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```irb\n>> directories\n=> []\n```\n\n\u30c6\u30b9\u30c8\u7528\u306b\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```irb\n>> directories.create(:key=>\"fogtest#{Time.now.to_i}\")\n=>   <Fog::Storage::AWS::Directory\n    key=\"fogtest1420954226\",\n    creation_date=nil,\n    location=\"us-east-1\"\n  >\n```\n\n\u30d0\u30b1\u30c3\u30c8\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```irb\n>> directories.first.files.create(:key=>\"test.txt\", :body=>\"test\")\n```\n\n```public``` \u3092```true``` \u306b\u3059\u308b\u3053\u3068\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```irb\n>> file.public = true\n>> file.save\n>> Net::HTTP.get(URI.parse(file.public_url))\n=> \"test\"\n```\n\n```body``` \u306b\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```irb\n>> file.body = \"test2\"\n>> file.save\n```\n\n\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u3068\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u3092S3\u306b\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```irb\n>> file.body = File.open(\"/path/to/file\")\n>> file.save\n```\n\n\u3082\u3061\u308d\u3093\u4f5c\u6210\u6642\u306b\u6307\u5b9a\u3057\u3066\u3082OK\u3067\u3059\u3002\n\n```irb\n>> directories.first.files.create(:key=>\"test.txt\", :body=>File.open(\"/path/to/file\"))\n```\n\n\u9006\u306bS3\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6301\u3063\u3066\u304f\u308b\u969b\u306b\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057body\u306e\u4e2d\u8eab\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n\n```irb\n>> File.write(file.key, file.body)\n```\n\n```destroy``` \u30e1\u30bd\u30c3\u30c9\u3067\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```irb\n>> file.destroy\n>> directories.first.destroy\n```\n\n# \u6700\u5f8c\u306b\n\nVagrant\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306bfog\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u3063\u305f\u306e\u3067\u3001pry\u304b\u3089\u4f7f\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u60f3\u50cf\u4ee5\u4e0a\u306b\u4fbf\u5229\u3067\u3057\u305f\u3002pry\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u306a\u5834\u9762\u306f\u4ed6\u306b\u3082\u305f\u304f\u3055\u3093\u3042\u308a\u305d\u3046\u3067\u3059\u3002\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u306e\u4f5c\u6210\u306b\u3064\u3044\u3066\u306fpry\u306eWiki\u306b\u3082\u60c5\u5831\u304c\u3042\u308a\u307e\u3059\u304cpry\u306e[\u30b3\u30de\u30f3\u30c9\u306e\u30b3\u30fc\u30c9](https://github.com/pry/pry/tree/master/lib/pry/commands)\u3082\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["fog", "DigitalOcean", "AWS", "CloudStack", "pry"]}