{"context": "\n\n\u6982\u8981\n\nRuby \u3067 WebAPI \u3092\u30b3\u30fc\u30eb\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u305f\n\u5916\u90e8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u308f\u305a\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u307f\u4f7f\u3063\u3066\u3044\u308b (\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f7f\u3044\u65b9\u3092\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b)\n\u3088\u304f\u4f7f\u3044\u305d\u3046\u306a\u8981\u7d20\u3092\u76db\u308a\u8fbc\u3093\u3060 (HTTP, HTTPS, GET, POST, JSON, XML, timeout, Basic access authentication, etc.)\n\u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883: macOS Sierra + Ruby 2.4.0\n\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nrequire 'json'\nrequire 'net/https'\nrequire 'rexml/document'\nrequire 'uri'\n\nclass WebAPIClient\n\n  def initialize()\n  end\n\n  def encode(params, encoding)\n    return nil if params == nil\n    encoded = {}\n    params.map{|k,v|\n      encoded[k.encode(encoding)] = v.encode(encoding)\n    }\n    return encoded\n  end\n\n  def to_query(params, enc=nil)\n    if params != nil && !params.empty?\n      return '?' + URI.encode_www_form(params, enc)\n    else\n      return ''\n    end\n  end\n\n  def get_response(x)\n\n    # \u6587\u5b57 \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n    if x['encoding'] != nil\n      x['params'] = encode(x['params'], x['encoding'])\n    end\n\n    # URL \u30a8\u30f3\u30b3\u30fc\u30c9\n    if x['method'] == 'GET'\n      url = x['base_url'] + to_query(x['params'])\n    elsif x['method'] == 'POST'\n      url = x['base_url']\n    end\n\n    # URI \u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3057\u3066\n    # URI::Generic \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n    uri = URI.parse(url)\n\n    # \u30ea\u30af\u30a8\u30b9\u30c8\u60c5\u5831\u3092\u78ba\u8a8d\u7528\u306b\u51fa\u529b\n    puts \"URI#to_s: #{uri.to_s}\"\n    puts \"URI#host: #{uri.host}\"\n    puts \"URI#port: #{uri.port}\"\n    puts \"URI#request_uri: #{uri.request_uri}\"\n\n    # Net::HTTP \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\n    http = Net::HTTP.new(uri.host, uri.port)\n\n    # \u63a5\u7d9a\u6642\u306b\u5f85\u3064\u6700\u5927\u79d2\u6570\n    http.open_timeout = 5\n\n    # \u8aad\u307f\u3053\u307f (read(2)) \u4e00\u56de\u3067\u30d6\u30ed\u30c3\u30af\u3057\u3066\u3088\u3044\u6700\u5927\u79d2\u6570\n    http.read_timeout = 5\n\n    if uri.scheme == 'https'\n      # HTTPS \u306e\u5834\u5408\u306b true \u3092\u8a2d\u5b9a\n      http.use_ssl = true\n      # SSL \u8a3c\u660e\u66f8\u306e\u691c\u8a3c\u30e2\u30fc\u30c9\n      http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n    end\n\n    # Net::HTTPRequest \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n    if x['method'] == 'GET'\n      req = Net::HTTP::Get.new(uri.request_uri, x['headers'])\n    elsif x['method'] == 'POST'\n      req = Net::HTTP::Post.new(uri.request_uri, x['headers'])\n      req.set_form_data(x['params'])\n    end\n\n    # BASIC \u8a8d\u8a3c\n    if x['basic_auth'] != nil\n      req.basic_auth(x['basic_auth']['account'], x['basic_auth']['password'])\n    end\n\n    # TCP \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u308a\u3001HTTP \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\n    # \u30d6\u30ed\u30c3\u30af\u304c\u7d42\u308f\u3063\u305f\u3068\u304d\u306b\u63a5\u7d9a\u3092\u81ea\u52d5\u7684\u306b\u9589\u3058\u308b\n    res = http.start{|h|\n      h.request(req)\n    }\n\n    # \u30ec\u30b9\u30dd\u30f3\u30b9\u60c5\u5831\u3092\u78ba\u8a8d\u7528\u306b\u51fa\u529b\n    puts \"Net::HTTPResponse#code: #{res.code}\"\n    puts \"Net::HTTPResponse#message: #{res.message}\"\n\n    return res\n  end\n\n  def parse_json(json)\n    return JSON.parse(json)\n  end\n\n  def parse_xml(xml)\n    return REXML::Document.new(xml)\n  end\n\n  def self.invoke(x)\n\n    client = WebAPIClient.new()\n    res = client.get_response(x)\n\n    if res.kind_of?(Net::HTTPSuccess)\n      if res.content_type.include?('json')\n        obj = client.parse_json(res.body)\n      elsif res.content_type.include?('xml')\n        obj = client.parse_xml(res.body)\n      else\n        obj = res.body\n      end\n      # \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u51fa\u529b\n      puts obj\n    end\n  end\n\nend\n\n# HTTP, POST method, xml response\n# \u30e6\u30fc\u30b6\u30fc\u30ed\u30fc\u30ab\u30ebWikipedia API: http://wikipedia.simpleapi.net/\nWebAPIClient.invoke({\n  'base_url' => 'http://wikipedia.simpleapi.net/api',\n  'method' => 'POST',\n  'params' => {\n    'keyword' => '\u7d05\u7389',\n    'output' => 'xml'\n  },\n  'headers' => {\n    'User-Agent' => 'Mozilla/5.0 (WebAPIClient; Ruby)'\n  }\n})\n\n# HTTPS, GET method, JSON response\n# Users | GitHub Developer Guide: https://developer.github.com/v3/users/\nWebAPIClient.invoke({\n  'base_url' => 'https://api.github.com/users/niwasawa',\n  'method' => 'GET'\n})\n\n\n\u53c2\u8003\u8cc7\u6599\n\nlibrary json: https://docs.ruby-lang.org/ja/latest/library/json.html\n\nlibrary net/http: https://docs.ruby-lang.org/ja/latest/library/net=2fhttp.html\n\nlibrary rexml: https://docs.ruby-lang.org/ja/latest/library/rexml.html\n\nlibrary uri: https://docs.ruby-lang.org/ja/latest/library/uri.html\n\n\n# \u6982\u8981\n\n- Ruby \u3067 WebAPI \u3092\u30b3\u30fc\u30eb\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u305f\n- \u5916\u90e8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u308f\u305a\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u307f\u4f7f\u3063\u3066\u3044\u308b (\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f7f\u3044\u65b9\u3092\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b)\n- \u3088\u304f\u4f7f\u3044\u305d\u3046\u306a\u8981\u7d20\u3092\u76db\u308a\u8fbc\u3093\u3060 (HTTP, HTTPS, GET, POST, JSON, XML, timeout, Basic access authentication, etc.)\n- \u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883: macOS Sierra + Ruby 2.4.0\n\n# \u30b5\u30f3\u30d7\u30eb\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```\nrequire 'json'\nrequire 'net/https'\nrequire 'rexml/document'\nrequire 'uri'\n\nclass WebAPIClient\n\n  def initialize()\n  end\n\n  def encode(params, encoding)\n    return nil if params == nil\n    encoded = {}\n    params.map{|k,v|\n      encoded[k.encode(encoding)] = v.encode(encoding)\n    }\n    return encoded\n  end\n\n  def to_query(params, enc=nil)\n    if params != nil && !params.empty?\n      return '?' + URI.encode_www_form(params, enc)\n    else\n      return ''\n    end\n  end\n\n  def get_response(x)\n\n    # \u6587\u5b57 \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n    if x['encoding'] != nil\n      x['params'] = encode(x['params'], x['encoding'])\n    end\n\n    # URL \u30a8\u30f3\u30b3\u30fc\u30c9\n    if x['method'] == 'GET'\n      url = x['base_url'] + to_query(x['params'])\n    elsif x['method'] == 'POST'\n      url = x['base_url']\n    end\n\n    # URI \u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3057\u3066\n    # URI::Generic \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n    uri = URI.parse(url)\n\n    # \u30ea\u30af\u30a8\u30b9\u30c8\u60c5\u5831\u3092\u78ba\u8a8d\u7528\u306b\u51fa\u529b\n    puts \"URI#to_s: #{uri.to_s}\"\n    puts \"URI#host: #{uri.host}\"\n    puts \"URI#port: #{uri.port}\"\n    puts \"URI#request_uri: #{uri.request_uri}\"\n\n    # Net::HTTP \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\n    http = Net::HTTP.new(uri.host, uri.port)\n\n    # \u63a5\u7d9a\u6642\u306b\u5f85\u3064\u6700\u5927\u79d2\u6570\n    http.open_timeout = 5\n\n    # \u8aad\u307f\u3053\u307f (read(2)) \u4e00\u56de\u3067\u30d6\u30ed\u30c3\u30af\u3057\u3066\u3088\u3044\u6700\u5927\u79d2\u6570\n    http.read_timeout = 5\n\n    if uri.scheme == 'https'\n      # HTTPS \u306e\u5834\u5408\u306b true \u3092\u8a2d\u5b9a\n      http.use_ssl = true\n      # SSL \u8a3c\u660e\u66f8\u306e\u691c\u8a3c\u30e2\u30fc\u30c9\n      http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n    end\n\n    # Net::HTTPRequest \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n    if x['method'] == 'GET'\n      req = Net::HTTP::Get.new(uri.request_uri, x['headers'])\n    elsif x['method'] == 'POST'\n      req = Net::HTTP::Post.new(uri.request_uri, x['headers'])\n      req.set_form_data(x['params'])\n    end\n\n    # BASIC \u8a8d\u8a3c\n    if x['basic_auth'] != nil\n      req.basic_auth(x['basic_auth']['account'], x['basic_auth']['password'])\n    end\n\n    # TCP \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u308a\u3001HTTP \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\n    # \u30d6\u30ed\u30c3\u30af\u304c\u7d42\u308f\u3063\u305f\u3068\u304d\u306b\u63a5\u7d9a\u3092\u81ea\u52d5\u7684\u306b\u9589\u3058\u308b\n    res = http.start{|h|\n      h.request(req)\n    }\n\n    # \u30ec\u30b9\u30dd\u30f3\u30b9\u60c5\u5831\u3092\u78ba\u8a8d\u7528\u306b\u51fa\u529b\n    puts \"Net::HTTPResponse#code: #{res.code}\"\n    puts \"Net::HTTPResponse#message: #{res.message}\"\n\n    return res\n  end\n\n  def parse_json(json)\n    return JSON.parse(json)\n  end\n\n  def parse_xml(xml)\n    return REXML::Document.new(xml)\n  end\n\n  def self.invoke(x)\n\n    client = WebAPIClient.new()\n    res = client.get_response(x)\n\n    if res.kind_of?(Net::HTTPSuccess)\n      if res.content_type.include?('json')\n        obj = client.parse_json(res.body)\n      elsif res.content_type.include?('xml')\n        obj = client.parse_xml(res.body)\n      else\n        obj = res.body\n      end\n      # \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u51fa\u529b\n      puts obj\n    end\n  end\n\nend\n\n# HTTP, POST method, xml response\n# \u30e6\u30fc\u30b6\u30fc\u30ed\u30fc\u30ab\u30ebWikipedia API: http://wikipedia.simpleapi.net/\nWebAPIClient.invoke({\n  'base_url' => 'http://wikipedia.simpleapi.net/api',\n  'method' => 'POST',\n  'params' => {\n    'keyword' => '\u7d05\u7389',\n    'output' => 'xml'\n  },\n  'headers' => {\n    'User-Agent' => 'Mozilla/5.0 (WebAPIClient; Ruby)'\n  }\n})\n\n# HTTPS, GET method, JSON response\n# Users | GitHub Developer Guide: https://developer.github.com/v3/users/\nWebAPIClient.invoke({\n  'base_url' => 'https://api.github.com/users/niwasawa',\n  'method' => 'GET'\n})\n```\n\n# \u53c2\u8003\u8cc7\u6599\n\n- library json: https://docs.ruby-lang.org/ja/latest/library/json.html\n- library net/http: https://docs.ruby-lang.org/ja/latest/library/net=2fhttp.html\n- library rexml: https://docs.ruby-lang.org/ja/latest/library/rexml.html\n- library uri: https://docs.ruby-lang.org/ja/latest/library/uri.html\n\n", "tags": ["Ruby", "WebAPI", "HTTP"]}