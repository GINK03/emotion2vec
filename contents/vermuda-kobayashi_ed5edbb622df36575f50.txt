{"tags": ["cocos2d-x", "iOS", "Amazon", "\u30ab\u30e1\u30e9"], "context": " More than 1 year has passed since last update.vermuda\u5c0f\u6797\u3067\u3059\u3002\u30a2\u30d7\u30ea\u62c5\u5f53\u3060\u3051\u3069\u306a\u3093\u3084\u304b\u3093\u3084\u7d4c\u7406\u3068\u304b\u63a1\u7528\u3068\u304b\u3082\u3084\u3063\u3066\u307e\u3059\u3002\n\u7686\u3055\u3093aws\u4f7f\u3063\u3066\u307e\u3059\u304b\uff1f\u79c1\u306f\u4eca\u306e\u6848\u4ef6\u304b\u3089\u4f7f\u3044\u59cb\u3081\u307e\u3057\u305f\u3051\u3069\u958b\u767a\u306b\u5fc5\u8981\u306a\u90e8\u5206\u306e\u5927\u534a\u304c\u63c3\u3063\u3066\u3066\u300c\u3053\u308c\u306f\u3044\u3044\u3082\u306e\u3060\uff01\u300d\u3063\u3066\u306a\u3063\u3066\u307e\u3059\u3002\n\u4eca\u65e5\u306fios\u30a2\u30d7\u30ea\u304b\u3089aws\u306es3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u306e\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n(cocos2d-x\u304b\u3089\u30cd\u30a4\u30c6\u30a3\u30d6\u547c\u3073\u51fa\u3057\u3057\u3066\u308b\u306e\u3067\u7d14\u7c8b\u306aios\u958b\u767a\u3068\u306f\u3061\u3087\u3063\u3068\u9055\u3046\u304b\u3082)\n\n// \u307e\u305a\u306f\u30ab\u30e1\u30e9\u8d77\u52d5\u3059\u308b\u3068\u3053\u308d\u304b\u3089\n\n-(void)showUICameraPicker\n{\n    // \u30ab\u30e1\u30e9\u304c\u4f7f\u7528\u53ef\u80fd\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\n    if (![UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {\n        return;\n    }\n\n    // UIImagePickerController\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n    UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];\n\n    // \u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u8a2d\u5b9a\n    imagePickerController.delegate = self;\n\n    // \u753b\u50cf\u306e\u53d6\u5f97\u5148\u3092\u30ab\u30e1\u30e9\u306b\u8a2d\u5b9a\n    imagePickerController.sourceType = UIImagePickerControllerSourceTypeCamera;\n\n    // \u753b\u50cf\u53d6\u5f97\u5f8c\u306b\u7de8\u96c6\u3059\u308b\u304b\u3069\u3046\u304b\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNO\uff09\n    imagePickerController.allowsEditing = YES;\n\n    // \u64ae\u5f71\u753b\u9762\u3092\u30e2\u30fc\u30c0\u30eb\u30d3\u30e5\u30fc\u3068\u3057\u3066\u8868\u793a\u3059\u308b\n    [self presentViewController:imagePickerController animated:YES completion:nil];\n}\n\n// \u3053\u3063\u3061\u306f\u30a2\u30eb\u30d0\u30e0\u547c\u3073\u51fa\u3057\n\n- (void)showUILibraryPicker\n{\n    // \u30ab\u30e1\u30e9\u304c\u4f7f\u7528\u53ef\u80fd\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\n    if (![UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera])\n    {\n        return;\n    }\n\n    // UIImagePickerController\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n    UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];\n\n    // \u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u8a2d\u5b9a\n    imagePickerController.delegate = self;\n\n    // \u753b\u50cf\u306e\u53d6\u5f97\u5148\u3092\u30a2\u30eb\u30d0\u30e0\u306b\u8a2d\u5b9a\n    imagePickerController.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;\n\n    // \u753b\u50cf\u53d6\u5f97\u5f8c\u306b\u7de8\u96c6\u3059\u308b\u304b\u3069\u3046\u304b\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNO\uff09\n    imagePickerController.allowsEditing = YES;\n\n    // \u753b\u50cf\u9078\u629e\u753b\u9762\u3092\u30e2\u30fc\u30c0\u30eb\u30d3\u30e5\u30fc\u3068\u3057\u3066\u8868\u793a\u3059\u308b\n    [self presentViewController:imagePickerController animated:YES completion:nil];\n}\n\n// \u753b\u50cf\u9078\u629e\u5b8c\u4e86\u5f8c\u306e\u51e6\u7406(\u3053\u3053\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u52dd\u624b\u306b\u547c\u3070\u308c\u307e\u3059)\n-(void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info\n{\n    // \u30e2\u30fc\u30c0\u30eb\u30d3\u30e5\u30fc\u3092\u9589\u3058\u308b\n    [self dismissViewControllerAnimated:YES completion:nil];\n    UIImage* image = [info objectForKey:UIImagePickerControllerEditedImage];\n    // \u6e21\u3055\u308c\u3066\u304d\u305f\u753b\u50cf\u3092\u4e00\u65e6\u30a2\u30eb\u30d0\u30e0\u4ee5\u5916\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58(\u3053\u308c\u3092\u3057\u306a\u3044\u3068\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304cAsset Library\u306e\u30d1\u30b9\u3057\u304b\u53d6\u308c\u306a\u3044)\n    UIImageWriteToSavedPhotosAlbum(image, self, @selector(targetImage:didFinishSavingWithError:contextInfo:), NULL);\n    NSURL* filePath;\n    if ([info objectForKey:UIImagePickerControllerOriginalImage] != nil)\n    {\n        UIImage* tookImage = info[UIImagePickerControllerOriginalImage];\n        NSString* imagePath = NSHomeDirectory();\n        imagePath = [imagePath stringByAppendingPathComponent:@\"Documents/face.png\"];\n        NSData* imageData = UIImagePNGRepresentation(tookImage);\n        bool isSuccess = [imageData writeToFile:imagePath atomically:true];\n        if (isSuccess)\n        {\n            filePath = [NSURL fileURLWithPath:imagePath isDirectory:false];\n        }\n    }\n    // \u30c7\u30ea\u30b2\u30fc\u30c8\u5148\u304c\u3061\u3083\u3093\u3068\u300csendPhoto\u300d\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u304b?\n    if ([self.delegate respondsToSelector:@selector(sendPhoto: sendPath:)])\n    {\n        // getImage\u3092\u547c\u3073\u51fa\u3059\n        [self.delegate sendPhoto:image  sendPath:filePath];\n    }\n}\n\n\u3053\u3053\u304b\u3089\u3044\u3088\u3044\u3088s3\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u51e6\u7406\u3067\u3059\u3002\n\n// aws import\n#import <AWSCore/AWSCore.h>\n#import <AWSS3/AWSS3.h>\n\n-(void)sendPhoto:(UIImage*)photo sendPath : (NSURL*) \n{\n    native_plugin::NativeDelegate *pDelegate = (native_plugin::NativeDelegate*)object;\n    if(pDelegate != NULL)\n    {\n        NSData *imgData = UIImagePNGRepresentation(photo);\n        NSUInteger len = [imgData length];\n        Byte *byteData = (Byte*)malloc(len);\n        memcpy(byteData, [imgData bytes], len);\n\n        // \u30d5\u30a1\u30a4\u30eb\u540d\u306e\u5148\u982d\u306e\u65e5\u6642\u3092\u4f5c\u6210\n        NSDate *nowdate = [NSDate date];\n        NSDateFormatter *formatter = [[NSDateFormatter alloc] init];\n        [formatter setDateFormat:@\"yyyyMMddHHmmss\"];\n        NSString *datamoji = [formatter stringFromDate:nowdate];\n        std::string dateStr = datamoji.UTF8String;\n\n        // \u30d5\u30a1\u30a4\u30eb\u540d\u306e\u5f8c\u534a\u306e\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217\u3092\u4f5c\u6210\n        std::random_device rndDev;\n        std::mt19937 mt = std::mt19937(rndDev());\n        std::uniform_int_distribution<int> distribution( 0, INT_MAX ) ;\n        std::string rndStr = StringUtils::format(\"%d\", distribution(mt));\n\n        // \u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f5c\u6210\n        NSString* fileName = [[NSString alloc] initWithFormat:@\"image/%s%s.jpg\", dateStr.c_str(), rndStr.c_str()];\n        AWSS3TransferManager *transferManager = [AWSS3TransferManager defaultS3TransferManager];\n        AWSS3TransferManagerUploadRequest *uploadRequest = [AWSS3TransferManagerUploadRequest new];\n        uploadRequest.bucket = @\"bucketName\";   //\u3053\u3053\u306bS3\u306e\u30d0\u30b1\u30c3\u30c8\u540d\u5165\u308c\u305f\u3052\u308b\n        uploadRequest.key = fileName;           //\u30d5\u30a1\u30a4\u30eb\u540d\n        uploadRequest.body = filePath;          //\u7aef\u672b\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n        uploadRequest.contentLength = [NSNumber numberWithUnsignedLongLong:len];\n\n        // \u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51e6\u7406\n        [[transferManager upload:uploadRequest] continueWithBlock:^id(AWSTask *task)\n        {\n            int errorCode = 0;\n            std::string errorMessage = \"\";\n            if(task.error.userInfo.count > 0)\n            {\n                // \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u306e\u306f\u3053\u3053\n            }\n            pDelegate->sendPhotoCallback(errorCode, errorMessage);\n            return nil;\n        }];\n    }\n}\n\n\u3053\u308c\u3067s3\u3078\u306e\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u4e00\u5fdc\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u88ab\u3089\u306a\u3044\u3088\u3046\u306b\u65e5\u6642+\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217\u3067\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u6b21\u66f8\u304f\u3068\u304d\u306fandroid\u306e\u65b9\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\nvermuda\u3067\u306f\u30d6\u30ed\u30b0\u3082\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\u3088\u3051\u308c\u3070\u306e\u305e\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://engineer-blog.vermuda.jp/\nvermuda\u5c0f\u6797\u3067\u3059\u3002\u30a2\u30d7\u30ea\u62c5\u5f53\u3060\u3051\u3069\u306a\u3093\u3084\u304b\u3093\u3084\u7d4c\u7406\u3068\u304b\u63a1\u7528\u3068\u304b\u3082\u3084\u3063\u3066\u307e\u3059\u3002\n\u7686\u3055\u3093aws\u4f7f\u3063\u3066\u307e\u3059\u304b\uff1f\u79c1\u306f\u4eca\u306e\u6848\u4ef6\u304b\u3089\u4f7f\u3044\u59cb\u3081\u307e\u3057\u305f\u3051\u3069\u958b\u767a\u306b\u5fc5\u8981\u306a\u90e8\u5206\u306e\u5927\u534a\u304c\u63c3\u3063\u3066\u3066\u300c\u3053\u308c\u306f\u3044\u3044\u3082\u306e\u3060\uff01\u300d\u3063\u3066\u306a\u3063\u3066\u307e\u3059\u3002\n\n\u4eca\u65e5\u306fios\u30a2\u30d7\u30ea\u304b\u3089aws\u306es3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u306e\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n(cocos2d-x\u304b\u3089\u30cd\u30a4\u30c6\u30a3\u30d6\u547c\u3073\u51fa\u3057\u3057\u3066\u308b\u306e\u3067\u7d14\u7c8b\u306aios\u958b\u767a\u3068\u306f\u3061\u3087\u3063\u3068\u9055\u3046\u304b\u3082)\n\n\n```\n\n// \u307e\u305a\u306f\u30ab\u30e1\u30e9\u8d77\u52d5\u3059\u308b\u3068\u3053\u308d\u304b\u3089\n\n-(void)showUICameraPicker\n{\n    // \u30ab\u30e1\u30e9\u304c\u4f7f\u7528\u53ef\u80fd\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\n    if (![UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {\n        return;\n    }\n    \n    // UIImagePickerController\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n    UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];\n    \n    // \u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u8a2d\u5b9a\n    imagePickerController.delegate = self;\n    \n    // \u753b\u50cf\u306e\u53d6\u5f97\u5148\u3092\u30ab\u30e1\u30e9\u306b\u8a2d\u5b9a\n    imagePickerController.sourceType = UIImagePickerControllerSourceTypeCamera;\n    \n    // \u753b\u50cf\u53d6\u5f97\u5f8c\u306b\u7de8\u96c6\u3059\u308b\u304b\u3069\u3046\u304b\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNO\uff09\n    imagePickerController.allowsEditing = YES;\n    \n    // \u64ae\u5f71\u753b\u9762\u3092\u30e2\u30fc\u30c0\u30eb\u30d3\u30e5\u30fc\u3068\u3057\u3066\u8868\u793a\u3059\u308b\n    [self presentViewController:imagePickerController animated:YES completion:nil];\n}\n\n// \u3053\u3063\u3061\u306f\u30a2\u30eb\u30d0\u30e0\u547c\u3073\u51fa\u3057\n\n- (void)showUILibraryPicker\n{\n    // \u30ab\u30e1\u30e9\u304c\u4f7f\u7528\u53ef\u80fd\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\n    if (![UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera])\n    {\n        return;\n    }\n    \n    // UIImagePickerController\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n    UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];\n    \n    // \u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u8a2d\u5b9a\n    imagePickerController.delegate = self;\n    \n    // \u753b\u50cf\u306e\u53d6\u5f97\u5148\u3092\u30a2\u30eb\u30d0\u30e0\u306b\u8a2d\u5b9a\n    imagePickerController.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;\n    \n    // \u753b\u50cf\u53d6\u5f97\u5f8c\u306b\u7de8\u96c6\u3059\u308b\u304b\u3069\u3046\u304b\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNO\uff09\n    imagePickerController.allowsEditing = YES;\n    \n    // \u753b\u50cf\u9078\u629e\u753b\u9762\u3092\u30e2\u30fc\u30c0\u30eb\u30d3\u30e5\u30fc\u3068\u3057\u3066\u8868\u793a\u3059\u308b\n    [self presentViewController:imagePickerController animated:YES completion:nil];\n}\n\n// \u753b\u50cf\u9078\u629e\u5b8c\u4e86\u5f8c\u306e\u51e6\u7406(\u3053\u3053\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u52dd\u624b\u306b\u547c\u3070\u308c\u307e\u3059)\n-(void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info\n{\n    // \u30e2\u30fc\u30c0\u30eb\u30d3\u30e5\u30fc\u3092\u9589\u3058\u308b\n    [self dismissViewControllerAnimated:YES completion:nil];\n    UIImage* image = [info objectForKey:UIImagePickerControllerEditedImage];\n    // \u6e21\u3055\u308c\u3066\u304d\u305f\u753b\u50cf\u3092\u4e00\u65e6\u30a2\u30eb\u30d0\u30e0\u4ee5\u5916\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58(\u3053\u308c\u3092\u3057\u306a\u3044\u3068\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304cAsset Library\u306e\u30d1\u30b9\u3057\u304b\u53d6\u308c\u306a\u3044)\n    UIImageWriteToSavedPhotosAlbum(image, self, @selector(targetImage:didFinishSavingWithError:contextInfo:), NULL);\n    NSURL* filePath;\n    if ([info objectForKey:UIImagePickerControllerOriginalImage] != nil)\n    {\n        UIImage* tookImage = info[UIImagePickerControllerOriginalImage];\n        NSString* imagePath = NSHomeDirectory();\n        imagePath = [imagePath stringByAppendingPathComponent:@\"Documents/face.png\"];\n        NSData* imageData = UIImagePNGRepresentation(tookImage);\n        bool isSuccess = [imageData writeToFile:imagePath atomically:true];\n        if (isSuccess)\n        {\n            filePath = [NSURL fileURLWithPath:imagePath isDirectory:false];\n        }\n    }\n    // \u30c7\u30ea\u30b2\u30fc\u30c8\u5148\u304c\u3061\u3083\u3093\u3068\u300csendPhoto\u300d\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u304b?\n    if ([self.delegate respondsToSelector:@selector(sendPhoto: sendPath:)])\n    {\n        // getImage\u3092\u547c\u3073\u51fa\u3059\n        [self.delegate sendPhoto:image  sendPath:filePath];\n    }\n}\n```\n\n\u3053\u3053\u304b\u3089\u3044\u3088\u3044\u3088s3\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u51e6\u7406\u3067\u3059\u3002\n\n```\n\n// aws import\n#import <AWSCore/AWSCore.h>\n#import <AWSS3/AWSS3.h>\n\n-(void)sendPhoto:(UIImage*)photo sendPath : (NSURL*) \n{\n    native_plugin::NativeDelegate *pDelegate = (native_plugin::NativeDelegate*)object;\n    if(pDelegate != NULL)\n    {\n        NSData *imgData = UIImagePNGRepresentation(photo);\n        NSUInteger len = [imgData length];\n        Byte *byteData = (Byte*)malloc(len);\n        memcpy(byteData, [imgData bytes], len);\n        \n        // \u30d5\u30a1\u30a4\u30eb\u540d\u306e\u5148\u982d\u306e\u65e5\u6642\u3092\u4f5c\u6210\n        NSDate *nowdate = [NSDate date];\n        NSDateFormatter *formatter = [[NSDateFormatter alloc] init];\n        [formatter setDateFormat:@\"yyyyMMddHHmmss\"];\n        NSString *datamoji = [formatter stringFromDate:nowdate];\n        std::string dateStr = datamoji.UTF8String;\n        \n        // \u30d5\u30a1\u30a4\u30eb\u540d\u306e\u5f8c\u534a\u306e\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217\u3092\u4f5c\u6210\n        std::random_device rndDev;\n        std::mt19937 mt = std::mt19937(rndDev());\n        std::uniform_int_distribution<int> distribution( 0, INT_MAX ) ;\n        std::string rndStr = StringUtils::format(\"%d\", distribution(mt));\n        \n        // \u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f5c\u6210\n        NSString* fileName = [[NSString alloc] initWithFormat:@\"image/%s%s.jpg\", dateStr.c_str(), rndStr.c_str()];\n        AWSS3TransferManager *transferManager = [AWSS3TransferManager defaultS3TransferManager];\n        AWSS3TransferManagerUploadRequest *uploadRequest = [AWSS3TransferManagerUploadRequest new];\n        uploadRequest.bucket = @\"bucketName\";\t//\u3053\u3053\u306bS3\u306e\u30d0\u30b1\u30c3\u30c8\u540d\u5165\u308c\u305f\u3052\u308b\n        uploadRequest.key = fileName;\t\t\t//\u30d5\u30a1\u30a4\u30eb\u540d\n        uploadRequest.body = filePath;\t\t\t//\u7aef\u672b\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n        uploadRequest.contentLength = [NSNumber numberWithUnsignedLongLong:len];\n        \n        // \u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51e6\u7406\n        [[transferManager upload:uploadRequest] continueWithBlock:^id(AWSTask *task)\n        {\n            int errorCode = 0;\n            std::string errorMessage = \"\";\n            if(task.error.userInfo.count > 0)\n            {\n                // \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u306e\u306f\u3053\u3053\n            }\n            pDelegate->sendPhotoCallback(errorCode, errorMessage);\n            return nil;\n        }];\n    }\n}\n```\n\n\n\u3053\u308c\u3067s3\u3078\u306e\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u4e00\u5fdc\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u88ab\u3089\u306a\u3044\u3088\u3046\u306b\u65e5\u6642+\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217\u3067\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u6b21\u66f8\u304f\u3068\u304d\u306fandroid\u306e\u65b9\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\nvermuda\u3067\u306f\u30d6\u30ed\u30b0\u3082\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\u3088\u3051\u308c\u3070\u306e\u305e\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://engineer-blog.vermuda.jp/\n"}