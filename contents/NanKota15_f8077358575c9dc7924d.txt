{"context": "PowerMockRunner\u3092\u4f7f\u3044\u306a\u304c\u3089Theories\u3082\u4f7f\u3044\u305f\u3044\u3068\u304d\u306b\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u305f\u306e\u3067\u5bfe\u51e6\u30e1\u30e2\u3068\u3057\u3066\u66f8\u304d\u307e\u3059\u3002\n\u30fb\u74b0\u5883\njunt      4.10\npowermock 1.6.4\nmockito   1.10.19\n\u8a66\u3057\u306b\u4f5c\u6210\u3057\u305f\u30bd\u30fc\u30b9\u306f\u4e0b\u8a18\u306e\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\nPowerMockAndTheories.java\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.is;\n\nimport org.junit.experimental.theories.DataPoints;\nimport org.junit.experimental.theories.Theories;\nimport org.junit.experimental.theories.Theory;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\nimport org.powermock.modules.junit4.PowerMockRunnerDelegate;\n\n@RunWith(PowerMockRunner.class)\n@PowerMockRunnerDelegate(Theories.class)\n@PrepareForTest({System.class})\npublic class PowerMockAndTheories {\n\n    @DataPoints\n    public static TestFixture[] PARAMS = {\n        new TestFixture(\"A\", \"B\")\n    };\n\n    @Theory\n    public void Theories\u3092\u4f7f\u3046\u3088(TestFixture fixture) {\n        // SetUp\n        PowerMockito.mockStatic(System.class);\n        PowerMockito.when(System.getenv(fixture.input)).thenReturn(\"B\");\n\n        // Test\n        String actual = System.getenv(fixture.input);\n\n        // Verify\n        assertThat(actual, is(fixture.expected));\n        PowerMockito.verifyStatic();\n    }\n\n    static class TestFixture {\n        final String input;\n        final String expected;\n\n        public TestFixture(String input, String expected) {\n            this.input = input;\n            this.expected = expected;\n        }\n    }\n}\n\n\n\u30bd\u30fc\u30b9\u3092\u5b9f\u884c\u3059\u308b\u3068IllegalArgumentException\u306e\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\uff08\u30c6\u30b9\u30c8\u81ea\u4f53\u306f\u6210\u529f\u3057\u307e\u3059\uff09\n\njava.lang.IllegalArgumentException: Unable to determine method-name from description=Theories\u3092\u4f7f\u3046\u3088(mock.PowerMockAndTheories); - ignored\n    at org.powermock.modules.junit4.internal.impl.NotificationBuilder.determineTestMethod(NotificationBuilder.java:155)\n    at org.powermock.modules.junit4.internal.impl.NotificationBuilder.testInstanceCreated(NotificationBuilder.java:265)\n    at org.powermock.modules.junit4.internal.impl.PowerMockRunNotifier.testInstanceCreated(PowerMockRunNotifier.java:82)\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u308b\u3068\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u540d\u304c\u5909\u6570\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u3060\u3063\u305f\u306e\u3067\u3001@Theory\u306e\u4e0b\u306b@Test\u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3059\u308b\u3068\u6a19\u6e96\u30a8\u30e9\u30fc\u306f\u3067\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n    @Theory\n    @Test\n    public void Theories\u3092\u4f7f\u3046\u3088(TestFixture fixture) {\n        // SetUp\n        PowerMockito.mockStatic(System.class);\n        PowerMockito.when(System.getenv(fixture.input)).thenReturn(\"B\");\n\n\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u307e\u307e\u304c\u6c17\u306b\u306a\u308b\u65b9\u306f\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\uff08Parameterized.class\u3092\u4f7f\u3048\u3070\u3044\u3044\u3060\u3051\u306e\u8a71\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff09\nPowerMockRunner\u3092\u4f7f\u3044\u306a\u304c\u3089Theories\u3082\u4f7f\u3044\u305f\u3044\u3068\u304d\u306b\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u305f\u306e\u3067\u5bfe\u51e6\u30e1\u30e2\u3068\u3057\u3066\u66f8\u304d\u307e\u3059\u3002\n\n\u30fb\u74b0\u5883\njunt      4.10\npowermock 1.6.4\nmockito   1.10.19\n\n\u8a66\u3057\u306b\u4f5c\u6210\u3057\u305f\u30bd\u30fc\u30b9\u306f\u4e0b\u8a18\u306e\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\n```lang:PowerMockAndTheories.java\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.is;\n\nimport org.junit.experimental.theories.DataPoints;\nimport org.junit.experimental.theories.Theories;\nimport org.junit.experimental.theories.Theory;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\nimport org.powermock.modules.junit4.PowerMockRunnerDelegate;\n\n@RunWith(PowerMockRunner.class)\n@PowerMockRunnerDelegate(Theories.class)\n@PrepareForTest({System.class})\npublic class PowerMockAndTheories {\n\n    @DataPoints\n    public static TestFixture[] PARAMS = {\n        new TestFixture(\"A\", \"B\")\n    };\n\n    @Theory\n    public void Theories\u3092\u4f7f\u3046\u3088(TestFixture fixture) {\n        // SetUp\n        PowerMockito.mockStatic(System.class);\n        PowerMockito.when(System.getenv(fixture.input)).thenReturn(\"B\");\n\n        // Test\n        String actual = System.getenv(fixture.input);\n\n        // Verify\n        assertThat(actual, is(fixture.expected));\n        PowerMockito.verifyStatic();\n    }\n\n    static class TestFixture {\n        final String input;\n        final String expected;\n\n        public TestFixture(String input, String expected) {\n            this.input = input;\n            this.expected = expected;\n        }\n    }\n}\n```\n\n\u30bd\u30fc\u30b9\u3092\u5b9f\u884c\u3059\u308b\u3068IllegalArgumentException\u306e\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\uff08\u30c6\u30b9\u30c8\u81ea\u4f53\u306f\u6210\u529f\u3057\u307e\u3059\uff09\n```\njava.lang.IllegalArgumentException: Unable to determine method-name from description=Theories\u3092\u4f7f\u3046\u3088(mock.PowerMockAndTheories); - ignored\n\tat org.powermock.modules.junit4.internal.impl.NotificationBuilder.determineTestMethod(NotificationBuilder.java:155)\n\tat org.powermock.modules.junit4.internal.impl.NotificationBuilder.testInstanceCreated(NotificationBuilder.java:265)\n\tat org.powermock.modules.junit4.internal.impl.PowerMockRunNotifier.testInstanceCreated(PowerMockRunNotifier.java:82)\n```\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u308b\u3068\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u540d\u304c\u5909\u6570\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u3060\u3063\u305f\u306e\u3067\u3001@Theory\u306e\u4e0b\u306b@Test\u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3059\u308b\u3068\u6a19\u6e96\u30a8\u30e9\u30fc\u306f\u3067\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n```\n    @Theory\n    @Test\n    public void Theories\u3092\u4f7f\u3046\u3088(TestFixture fixture) {\n        // SetUp\n        PowerMockito.mockStatic(System.class);\n        PowerMockito.when(System.getenv(fixture.input)).thenReturn(\"B\");\n```\n\n\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u307e\u307e\u304c\u6c17\u306b\u306a\u308b\u65b9\u306f\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\uff08Parameterized.class\u3092\u4f7f\u3048\u3070\u3044\u3044\u3060\u3051\u306e\u8a71\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff09\n", "tags": ["Java", "JUnit", "Mockito", "PowerMock"]}