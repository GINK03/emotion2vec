{"tags": ["Python", "python3", "\u6570\u5b66", "\u6570\u5024\u8a08\u7b97", "\u7269\u7406"], "context": "\u524d\u65e5\u306e@kimh\u3055\u3093\u3068\u3044\u3044\u611f\u3058\u306b\u30cd\u30bf\u88ab\u3063\u3061\u3083\u3044\u307e\u3057\u305f. \u3054\u5bb9\u8d66...\n\n\u3042\u3089\u307e\u3057\n\u30ab\u30aa\u30b9\u3068\u304b\u30d5\u30e9\u30af\u30bf\u30eb\u3068\u304b\u3063\u3066\u898b\u3066\u308b\u3060\u3051\u3067\u697d\u3057\u3044\u3067\u3059\u3088\u306d. \u7c21\u5358\u306a\u6570\u5f0f\u3084, \u5358\u7d14\u306a\u7269\u7406\u304b\u3089\u7a81\u62cd\u5b50\u3082\u306a\u3044\u30b0\u30e9\u30d5\u304c\u51fa\u3066\u304f\u308b\u306e\u306f\u3068\u3066\u3082\u4e0d\u601d\u8b70\u3067\u3082\u3042\u308a\u307e\u3059. \u305d\u306e\u4e16\u754c\u3092\u5c11\u3057\u3060\u3051\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046. \n\u5f53\u65b9\u30ab\u30aa\u30b9\u7406\u8ad6\u304c\u5c02\u9580\u3067\u306f\u306a\u3044\u306e\u3067, \u6df1\u3044\u8a71\u306b\u306f\u7acb\u3061\u5165\u308a\u307e\u305b\u3093. \u773a\u3081\u3066\u697d\u3057\u3051\u308c\u3070\u3088\u3044\u306e\u3067\u3059. \n\n\u30ab\u30aa\u30b9\u3068\u306f\uff1f\n\u6c7a\u5b9a\u8ad6\u7684\u3067\u3042\u308b\u304c\u3057\u304b\u3057, \u975e\u5e38\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u632f\u308b\u821e\u3044\u3092\u3059\u308b\u975e\u7dda\u5f62\u529b\u5b66\u7cfb\u3092\u30ab\u30aa\u30b9\u3068\u547c\u3073\u307e\u3059. \u4e00\u756a\u306e\u7279\u5fb4\u304c\u300c\u521d\u671f\u5024\u92ed\u654f\u6027\u300d\u3068\u3044\u3046\u3082\u306e\u3067, \u521d\u671f\u5024\u3092\u307b\u3093\u306e\u3061\u3087\u3063\u3068\u5909\u3048\u305f\u3060\u3051\u3067\u5168\u304f\u7570\u306a\u308b\u8ecc\u9053\u3092\u63cf\u304d\u307e\u3059.  \u4e8c\u91cd\u632f\u308a\u5b50\u306a\u3069\u304c\u6709\u540d\u3067\u3059. \n\n\u30d5\u30e9\u30af\u30bf\u30eb\u3068\u306f\uff1f\n\u81ea\u5df1\u76f8\u4f3c\u6027\u3092\u6301\u3064\u56f3\u5f62\u306e\u3053\u3068. \u30d5\u30e9\u30af\u30bf\u30eb\u6b21\u5143\u306e\u306f\u306a\u3057\u306f\u9762\u5012\u306a\u306e\u3067\u30b9\u30eb\u30fc. \u30b3\u30c3\u30db\u66f2\u7dda\u306a\u3069\u304c\u6709\u540d\u3067\u3059. \n\n\u3081\u3056\u3059\u3068\u3053\u308d\n\u30ab\u30aa\u30b9\u3084\u30d5\u30e9\u30af\u30bf\u30eb\u306e\u3059\u3054\u3044\u3068\u3053\u308d\u306f, \u5358\u7d14\u306a\u30e2\u30c7\u30eb\u304b\u3089\u8907\u96d1\u602a\u5947\u306a\u3082\u306e\u304c\u51fa\u73fe\u3059\u308b\u3053\u3068\u3067\u3059. \u3068\u3044\u3046\u3053\u3068\u3067, \u30b7\u30f3\u30d7\u30eb\u306a\u30b3\u30fc\u30c9\u304b\u3089\u610f\u5473\u4e0d\u660e\u306a\u51fa\u529b\u3092\u5f97\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059.\n\nMandelbrot\u96c6\u5408\n\u3044\u308f\u3086\u308b, \u30d5\u30e9\u30af\u30bf\u30eb\u306e\u306f\u3057\u308a\u3067\u3059. \u30d1\u30e9\u30e1\u30fc\u30bf(x,y)(x,y)(x, y)\u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u308b\u6f38\u5316\u5f0f\n    a_{n+1} = a_n^2 - b_n^2 + x,\\hspace{1cm} b_{n+1} = 2a_nb_n + y,\\hspace{1cm} a_0 = b_0 = 0\nan+1=a2n\u2212b2n+x,bn+1=2anbn+y,a0=b0=0an+1=a2n\u2212b2n+x,bn+1=2anbn+y,a0=b0=0{    a_{n+1} = a_n^2 - b_n^2 + x,\\hspace{1cm} b_{n+1} = 2a_nb_n + y,\\hspace{1cm} a_0 = b_0 = 0\n}\n\u306b\u3064\u3044\u3066, n\u2192\u221en\u2192\u221en\\rightarrow \\infty\u3067\u3082\u767a\u6563\u3057\u306a\u3044\u3088\u3046\u306a\u70b9(x,y)(x,y)(x, y)\u306e\u96c6\u5408\u306e\u3053\u3068\u3092Mandelbrot\u96c6\u5408\u3068\u547c\u3073\u307e\u3059. Mandelbrot\u96c6\u5408\u306f\u30d5\u30e9\u30af\u30bf\u30eb\u96c6\u5408\u3067\u3059.  \u3082\u3061\u308d\u3093\u624b\u3067\u306f\u89e3\u3051\u307e\u305b\u3093\u304c, \u6f38\u5316\u5f0f\u81ea\u4f53\u306f\u5358\u7d14\u305d\u3046\u3067\u3059\u306d. \n\n\u5b9f\u88c5\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sbn\n\nN, M = 50, 500\n\ndef mandel(X, Y):\n    a, b = [0] * 2\n    for i in range(N):\n        a, b = a**2 - b**2 + X, 2 * a * b + Y\n\n    return a**2 + b**2 < 4\n\nx, y = [np.linspace(-2, 2, M)] * 2\nX, Y = np.meshgrid(x, y)\nplt.pcolor(X, Y, mandel(X, Y))\nplt.show()\n\n\u9069\u5f53\u306annn\u307e\u3067\u56de\u3057\u3066\u3042\u3052\u3066, a2+b2<4a2+b2<4a^2 + b^2 < 4\u3092\u767a\u6563\u3057\u306a\u3044\u6761\u4ef6\u3068\u3057\u3066\u3044\u307e\u3059. Python\u3067\u306fTrue\u304c1, False\u304c0\u306b\u8a55\u4fa1\u3055\u308c\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059. \n\n\u53ce\u675f\u306e\u5ea6\u5408\u3044\u3092nnn\u3067\u52d8\u5b9a\u3057\u3066\u3042\u3052\u308b\u3068\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3063\u307d\u3044\u30b0\u30e9\u30d5\u306b\u3082\u3067\u304d\u307e\u3059\u304c, \u4eca\u56de\u306f\u30b3\u30fc\u30c9\u306e\u30b7\u30f3\u30d7\u30eb\u3055\u3092\u91cd\u8996\u3057\u307e\u3057\u305f. \u3053\u308c\u304f\u3089\u3044\u7c97\u3044\u7d75\u3067\u3082\u81ea\u5df1\u76f8\u4f3c\u306e\u610f\u5473\u306f\u7406\u89e3\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u601d\u3044\u307e\u3059. \n\nLogistic\u5199\u50cf\n\u30d1\u30e9\u30e1\u30fc\u30bfxxx\u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u308b\u6f38\u5316\u5f0f\n    x_{n+1} = ax_n(1 - x_n)\nxn+1=axn(1\u2212xn)xn+1=axn(1\u2212xn){    x_{n+1} = ax_n(1 - x_n)\n}\n\u3092\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u65b9\u7a0b\u5f0f\u3068\u547c\u3073\u307e\u3059. Mandelbrot\u3088\u308a\u3055\u3089\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d. aaa\u3092\u5909\u5316\u3055\u305b\u305f\u3068\u304d\u306bxnxnx_n\u304c\u53ce\u675f(\u3082\u3057\u304f\u306f\u8907\u6570\u306e\u5024\u3092\u632f\u52d5)\u3059\u308b\u70b9\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u3044\u304f\u3068\u30ab\u30aa\u30b9\u7684\u306a\u632f\u308b\u821e\u3044\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059. \n\n\u5b9f\u88c5\ndef logistic(a):\n    x = [0.8]\n    for i in range(400):\n        x.append(a * x[-1] * (1 - x[-1]))\n    return x[-100:]\n\nfor a in np.linspace(2.0, 4.0, 1000):\n    x = logistic(a)\n    plt.plot([a]*len(x), x, \"c.\", markersize=1.7)\n\nplt.show()\n\n\u6f38\u5316\u5f0f\u3092n=400n=400n= 400\u307e\u3067\u56de\u3057\u3066\u5f8c\u308d\u306e100100100\u500b\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059. \n\n\u3044\u3044\u304b\u3093\u3058\u306b\u610f\u5473\u4e0d\u660e\u306e\u30b0\u30e9\u30d5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d. \u975e\u5468\u671f\u7684\u3067\u3042\u308b\u3068\u3044\u3046\u610f\u5473\u3067\u30ab\u30aa\u30b9\u7684\u3067\u306f\u3042\u308a\u307e\u3059\u304c, \u521d\u671f\u5024\u92ed\u654f\u6027\u306f\u7279\u306b\u898b\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f. \u3053\u308c\u306f\u751f\u7269\u306e\u500b\u4f53\u6570\u306b\u95a2\u3059\u308b\u30e2\u30c7\u30eb\u306b\u3082\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u305d\u3046\u3067\u3059. \n\nDuffing\u632f\u52d5\u5b50\n\u525b\u6027\u306e\u3042\u308b\u632f\u308a\u5b50\u306b\u6e1b\u8870\u9805\u3068\u78c1\u77f3\u306b\u3088\u308b\u5f37\u5236\u632f\u52d5\u9805\u3092\u8ffd\u52a0\u3057\u305f\u7cfb\u3067, \u57fa\u790e\u65b9\u7a0b\u5f0f\u306f\nm\\frac{d^2x}{dt^2} = -\\gamma \\frac{dx}{dt} + 2ax - 4bx^3 + F_0\\cos(\\omega t + \\delta)\nmd2xdt2=\u2212\u03b3dxdt+2ax\u22124bx3+F0cos(\u03c9t+\u03b4)md2xdt2=\u2212\u03b3dxdt+2ax\u22124bx3+F0cos(\u03c9t+\u03b4){m\\frac{d^2x}{dt^2} = -\\gamma \\frac{dx}{dt} + 2ax - 4bx^3 + F_0\\cos(\\omega t + \\delta)\n}\n\u3067\u3059. \u3053\u306e\u632f\u308a\u5b50\u306f\u30ab\u30aa\u30b9\u7684\u306b\u632f\u308b\u821e\u3044, \u304b\u3064\u305d\u306e\u76f8\u7a7a\u9593\u30922\u03c0\u03c92\u03c0\u03c9\\frac{2\\pi}{\\omega}\u306e\u5468\u671f\u3067\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u3082\u306e(Strange attractor)\u306f\u30d5\u30e9\u30af\u30bf\u30eb\u306a\u6027\u8cea\u3092\u6301\u3061\u307e\u3059. \n\n\u5b9f\u88c5\n\u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u89e3\u304d\u307e\u3059. odeint\u306b\u3064\u3044\u3066\u306f\nNumPy\u30fbSciPy\u3092\u7528\u3044\u305f\u6570\u5024\u8a08\u7b97\u306e\u9ad8\u901f\u5316 : \u5fdc\u7528\u305d\u306e1\n\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u3088\u3044\u3068\u601d\u3044\u307e\u3059. \nfrom scipy.integrate import odeint, simps\n\ndef duffing(var, t, gamma, a, b, F0, omega, delta):\n    \"\"\"\n    var = [x, p]\n    dx/dt = p\n    dp/dt = -gamma*p + 2*a*x - 4*b*x**3 + F0*cos(omega*t + delta)\n    \"\"\"\n    x_dot = var[1]\n    p_dot = -gamma * var[1] + 2 * a * var[0] - 4 * b * var[0]**3 + F0 * np.cos(omega * t + delta)\n\n    return np.array([x_dot, p_dot])\n\n# parameter\nF0, gamma, omega, delta = 10, 0.1, np.pi/3, 1.5*np.pi\na, b = 1/4, 1/2\nvar, var_lin = [[0, 1]] * 2\n\n#timescale\nt = np.arange(0, 20000, 2*np.pi/omega)\nt_lin = np.linspace(0, 100, 10000)\n\n# solve\nvar = odeint(duffing, var, t, args=(gamma, a, b, F0, omega, delta))\nvar_lin = odeint(duffing, var_lin, t_lin, args=(gamma, a, b, F0, omega, delta))\n\nx, p = var.T[0], var.T[1]\nx_lin, p_lin = var_lin.T[0], var_lin.T[1]\n\nplt.plot(x, p, \".\", markersize=4)\nplt.show()\n\n\u5c11\u3057\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u304c, \u51e6\u7406\u306e\u30e1\u30a4\u30f3\u306f\u307b\u3093\u306e\u4e00\u90e8\u3067\u6b8b\u308a\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\u3060\u3051\u3067\u3059. \n\n\u4e0d\u601d\u8b70\u306a\u3082\u306e\u304c\u51fa\u3066\u304d\u307e\u3057\u305f. \u3053\u308c\u304cStrange attractor\u3067\u3059. \u3053\u308c\u3082\u7d30\u304b\u304f\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u62e1\u5927\u3059\u308b\u3068\u81ea\u5df1\u76f8\u4f3c\u6027\u304c\u898b\u3048\u308b\u3089\u3057\u3044\u3067\u3059. \n\u632f\u308a\u5b50\u306e\u4f4d\u7f6e\u3092\u521d\u671f\u5024\u3092\u5909\u3048\u3066\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n# is chaotic?\nplt.plot(t_lin, x_lin)\nvar_lin = odeint(duffing, [0.1, 1], t_lin, args=(gamma, a, b, F0, omega, delta))\nx_lin, p_lin = var_lin.T[0], var_lin.T[1]\nplt.plot(t_lin, x_lin)\nplt.show()\n\n\n\n\u3053\u308c\u304c\u521d\u671f\u5024\u92ed\u654f\u6027\u3067\u3059. \u307b\u307c\u4e00\u81f4\u3057\u3066\u3044\u305f\u3068\u601d\u3063\u305f\u3089\u5916\u308c\u3066, \u5916\u308c\u305f\u3068\u601d\u3063\u305f\u3089\u307e\u305f\u540c\u3058\u8ecc\u9053\u3092\u63cf\u304f, \u3068\u3044\u3046\u666e\u901a\u306e\u529b\u5b66\u7cfb\u3067\u306f\u7406\u89e3\u3057\u304c\u305f\u3044\u52d5\u304d\u3092\u3057\u3066\u3044\u307e\u3059. \u307e\u3055\u306b\u30ab\u30aa\u30b9\u3067\u3059\u306d. \n\n3\u4f53\u554f\u984c\n\u6700\u5f8c\u306e\u30c8\u30ea\u3067\u3059. 2\u4f53\u904b\u52d5\u306f\u89e3\u6790\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u304c, 3\u4f53\u4ee5\u4e0a\u306e\u591a\u4f53\u554f\u984c\u306f\u305d\u306e\u9650\u308a\u3067\u306f\u3042\u308a\u307e\u305b\u3093. \u30ab\u30aa\u30b9\u3092\u6570\u5024\u8a08\u7b97\u3067\u898b\u305f\u4e16\u754c\u3067\u521d\u3081\u3066\u306e\u4f8b\u3060\u3063\u305f\u6c17\u304c\u3057\u307e\u3059. \n\u91cd\u3055\u304c3\u30fb4\u30fb5\u306e\u8cea\u70b9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u914d\u7f6e\u3057\u305f\u5e73\u9762\u3092\u8003\u3048\u307e\u3059\n\n\u3053\u306e3\u4f53\u306f\u4e92\u3044\u306b\u5f15\u529b\u76f8\u4e92\u4f5c\u7528\u3092\u6301\u3063\u3066\u3044\u307e\u3059. \u3053\u306e\u8cea\u70b9\u305f\u3061\u306e\u52d5\u304d\u3092\u6570\u5024\u8a08\u7b97\u3067\u8ffd\u3063\u3066\u307f\u307e\u3057\u3087\u3046. \u3061\u3087\u3063\u3068\u3060\u3051\u3084\u3084\u3053\u3057\u3044\u7cfb\u306a\u306e\u3067\u89e3\u6790\u529b\u5b66\u306e\u529b\u3092\u501f\u308a\u307e\u3057\u3087\u3046. \u7cfb\u306eLagrangean\u306f\nL = \\sum_i^{3, 4, 5}\\left[\\frac{\\dot{q}_i^2}{2m_i} + \\sum_{j>i}G\\frac{m_im_j}{r_{ij}}\\right], \\hspace{1cm}q_i = (x_i, y_i), \\hspace{1cm}r_{ij} = \\sqrt{(x_i - y_j)^2 - (y_i - y_j)^2}\nL=3,4,5\u2211i[\u02d9q2i2mi+\u2211j>iGmimjrij],qi=(xi,yi),rij=\u221a(xi\u2212yj)2\u2212(yi\u2212yj)2{L = \\sum_i^{3, 4, 5}\\left[\\frac{\\dot{q}_i^2}{2m_i} + \\sum_{j>i}G\\frac{m_im_j}{r_{ij}}\\right], \\hspace{1cm}q_i = (x_i, y_i), \\hspace{1cm}r_{ij} = \\sqrt{(x_i - y_j)^2 - (y_i - y_j)^2}\n}\n\u3067\u3042\u308a, \u3053\u308c\u3092Euler-Lagrange\u65b9\u7a0b\u5f0f\n\\frac{d}{dt}\\frac{\\partial L}{\\partial\\dot{q}_{i}} - \\frac{\\partial L}{\\partial q_{i}} = 0\nddt\u2202L\u2202\u02d9qi\u2212\u2202L\u2202qi=0{\\frac{d}{dt}\\frac{\\partial L}{\\partial\\dot{q}_{i}} - \\frac{\\partial L}{\\partial q_{i}} = 0\n}\n\u306b\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u8cea\u70b9ii\u306e\u904b\u52d5\u65b9\u7a0b\u5f0f\u304c\u5f97\u3089\u308c\u307e\u3059. \u305f\u3060\u5fae\u5206\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u3059\u304c, \u7b26\u53f7\u306b\u3088\u304f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044. \u5177\u4f53\u7684\u306a\u5f0f\u306f\u3053\u3053\u306b\u306f\u66f8\u304d\u307e\u305b\u3093. \u30b3\u30fc\u30c9\u3092\u898b\u3066\u304f\u3060\u3055\u3044. \n\n\u5b9f\u88c5\ndef manybody(var, t, m3, m4, m5, G):\n    \"\"\"\n    var = [x3, y3, x3_dot, y3_dot, x4, y4, x4_dot, y4_dot, x5, y5, x5_dot, y5_dot]\n    dx3/dt = p3\n    dpx3/dt = -2*G*m3*x3(m4*(r34)**-1.5 + m5*(r35)**-1.5)\n    dy3/dt = p3\n    dpy3/dt = -2*G*m3*y3(m4*(r34)**-1.5 + m5*(r35)**-1.5)\n    ...\n    \"\"\"\n\n    def r(x1, y1, x2, y2):\n        return np.sqrt((x1 - x2)**2 + (y1- y2)**2)**-3\n\n    # (x3, y3)\n    x3 = var[2]\n    px3 = -G * (m4 * r(var[0], var[1], var[4], var[5]) * (var[0] - var[4]) + m5 * r(var[0], var[1], var[8], var[9]) * (var[0] - var[8]))\n    y3 = var[3]\n    py3 = -G * (m4 * r(var[0], var[1], var[4], var[5]) * (var[1] - var[5]) + m5 * r(var[0], var[1], var[8], var[9]) * (var[1] - var[9]))\n\n\n    # (x4, y4)\n    x4 = var[6]\n    px4 = -G * (-m3 * r(var[4], var[5], var[0], var[1]) * (var[0] - var[4]) + m5 * r(var[4], var[5], var[8], var[9]) * (var[4] - var[8]))\n    y4 = var[7]\n    py4 = -G * (-m3 * r(var[4], var[5], var[0], var[1]) * (var[1] - var[5]) + m5 * r(var[4], var[5], var[8], var[9]) * (var[5] - var[9]))\n\n\n    # (x5, y5)\n    x5 = var[10]\n    px5 = -G * (-m3 * r(var[8], var[9], var[0], var[1]) * (var[0] - var[8]) - m4 * r(var[8], var[9], var[4], var[5]) * (var[4] - var[8]))\n    y5 = var[11]\n    py5 = -G * (-m3 * r(var[8], var[9], var[0], var[1]) * (var[1] - var[9]) - m4 * r(var[8], var[9], var[4], var[5]) * (var[5] - var[9]))\n\n\n    return np.array([x3, y3, px3, py3, x4, y4, px4, py4, x5, y5, px5, py5])\n\n\n\nm3, m4, m5 = 3, 4, 5\nG = 1\nvar = np.array([0, 4, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0])\nt = np.linspace(0, 70, 3e7)\n\nvar = odeint(manybody, var, t, args=(m3, m4, m5, G), full_output=False)\n\nplt.plot(var[:, 0][::1000], var[:, 1][::1000], label=\"3\")\nplt.plot(var[:, 4][::1000], var[:, 5][::1000], label=\"4\")\nplt.plot(var[:, 8][::1000], var[:, 9][::1000], label=\"5\")\nplt.show()\n\n\u5fae\u5206\u65b9\u7a0b\u5f0f\u306e\u5b9a\u7fa9\u304c\u9762\u5012\u3067\u3059\u304c, \u305d\u308c\u4ee5\u5916\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3059. \u304b\u306a\u308a\u6fc0\u3057\u304f\u5dee\u5206\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3068\u3063\u3066\u3082\u30e1\u30e2\u30ea\u3092\u98df\u3044\u307e\u3059. \u30ad\u30c4\u3044\u5834\u5408\u306f\u5dee\u5206\u5316\u3092\u7de9\u3081\u3066\u304f\u3060\u3055\u3044.\n\n\n(\u52d5\u753b\u306e\u65b9\u306f\u5dee\u5206\u5316\u3092\u7c97\u304f\u3057\u3066\u3044\u308b\u306e\u3067, \u4e0a\u306e\u30b0\u30e9\u30d5\u3068\u306f\u5c11\u3057\u9055\u3046\u52d5\u304d\u65b9\u3092\u3057\u3066\u3044\u307e\u3059)\n\u3082\u3046\u8a33\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u306d. \u3050\u3063\u3061\u3083\u3050\u3061\u3083\u304b\u3068\u601d\u3044\u304d\u3084, \u6700\u5f8c\u306f2\u3064\u304c\u4ef2\u826f\u304f\u885d\u7a81\u3057\u306a\u304c\u3089\u5439\u3063\u98db\u3093\u3067\u3044\u304d, \u6b8b\u308a\u306e1\u3064\u306f\u3072\u3068\u308a\u3067\u53cd\u5bfe\u5074\u306b\u98db\u3073\u53bb\u308a\u307e\u3059. \n\u5b9f\u306f\u3053\u308c, \u672c\u5f53\u306b\u6b63\u3057\u3044\u89e3\u3067\u306f\u306a\u3044\u3093\u3067\u3059. \u771f\u306e\u89e3\u306f\u3053\u3061\u3089\u3067\u3059. \u306a\u305c\u30ba\u30ec\u308b\u306e\u304b\u3068\u3044\u3046\u3068, \u8cea\u70b9\u540c\u58eb\u306e\u4f4d\u7f6e\u304c\u91cd\u306a\u308b\u3068\u5f15\u529b\u304c\u767a\u6563\u3057\u3066\u3057\u307e\u3046\u306e\u3067, \u305d\u3046\u3044\u3046\u70b9\u3067\u6570\u5024\u8a08\u7b97\u3067\u306f\u8aa4\u5dee\u304c\u7a4d\u307f\u91cd\u306a\u3063\u3066\u3057\u307e\u3046\u304b\u3089\u3067\u3059. \u3053\u308c\u306f\u6642\u9593\u30fb\u7a7a\u9593\u306e\u5dee\u5206\u5316\u3092\u5897\u3084\u3059\u3060\u3051\u3067\u306f\u5bfe\u5fdc\u3057\u304d\u308c\u306a\u3044\u306e\u3067, \u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u6b63\u5247\u5316\u3059\u308b\u3053\u3068\u3067\u56de\u907f\u3059\u308b\u3088\u3046\u3067\u3059\u304c, \u4eca\u56de\u306f\u305d\u306e\u304a\u8a71\u306f\u30ab\u30c3\u30c8\u3067. \u6642\u9593\u304c\u3042\u308c\u3070\u8abf\u3079\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3059. \n\n\u3055\u3044\u3054\u306b\n\u3053\u3093\u306a\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5b50\u305f\u3061\u304c\u6975\u3081\u3066\u5358\u7d14\u306a\u30e2\u30c7\u30eb\u304b\u3089\u51fa\u73fe\u3059\u308b\u306e\u306f\u697d\u3057\u3044\u3067\u3059\u306d. \n\u524d\u65e5\u306e@kimh\u3055\u3093\u3068\u3044\u3044\u611f\u3058\u306b\u30cd\u30bf\u88ab\u3063\u3061\u3083\u3044\u307e\u3057\u305f. \u3054\u5bb9\u8d66...\n# \u3042\u3089\u307e\u3057\n\u30ab\u30aa\u30b9\u3068\u304b\u30d5\u30e9\u30af\u30bf\u30eb\u3068\u304b\u3063\u3066\u898b\u3066\u308b\u3060\u3051\u3067\u697d\u3057\u3044\u3067\u3059\u3088\u306d. \u7c21\u5358\u306a\u6570\u5f0f\u3084, \u5358\u7d14\u306a\u7269\u7406\u304b\u3089\u7a81\u62cd\u5b50\u3082\u306a\u3044\u30b0\u30e9\u30d5\u304c\u51fa\u3066\u304f\u308b\u306e\u306f\u3068\u3066\u3082\u4e0d\u601d\u8b70\u3067\u3082\u3042\u308a\u307e\u3059. \u305d\u306e\u4e16\u754c\u3092\u5c11\u3057\u3060\u3051\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046. \n\n\u5f53\u65b9\u30ab\u30aa\u30b9\u7406\u8ad6\u304c\u5c02\u9580\u3067\u306f\u306a\u3044\u306e\u3067, \u6df1\u3044\u8a71\u306b\u306f\u7acb\u3061\u5165\u308a\u307e\u305b\u3093. \u773a\u3081\u3066\u697d\u3057\u3051\u308c\u3070\u3088\u3044\u306e\u3067\u3059. \n\n## \u30ab\u30aa\u30b9\u3068\u306f\uff1f\n\u6c7a\u5b9a\u8ad6\u7684\u3067\u3042\u308b\u304c\u3057\u304b\u3057, \u975e\u5e38\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u632f\u308b\u821e\u3044\u3092\u3059\u308b\u975e\u7dda\u5f62\u529b\u5b66\u7cfb\u3092\u30ab\u30aa\u30b9\u3068\u547c\u3073\u307e\u3059. \u4e00\u756a\u306e\u7279\u5fb4\u304c\u300c\u521d\u671f\u5024\u92ed\u654f\u6027\u300d\u3068\u3044\u3046\u3082\u306e\u3067, \u521d\u671f\u5024\u3092\u307b\u3093\u306e\u3061\u3087\u3063\u3068\u5909\u3048\u305f\u3060\u3051\u3067\u5168\u304f\u7570\u306a\u308b\u8ecc\u9053\u3092\u63cf\u304d\u307e\u3059.  **\u4e8c\u91cd\u632f\u308a\u5b50**\u306a\u3069\u304c\u6709\u540d\u3067\u3059. \n\n## \u30d5\u30e9\u30af\u30bf\u30eb\u3068\u306f\uff1f\n\u81ea\u5df1\u76f8\u4f3c\u6027\u3092\u6301\u3064\u56f3\u5f62\u306e\u3053\u3068. \u30d5\u30e9\u30af\u30bf\u30eb\u6b21\u5143\u306e\u306f\u306a\u3057\u306f\u9762\u5012\u306a\u306e\u3067\u30b9\u30eb\u30fc. **\u30b3\u30c3\u30db\u66f2\u7dda**\u306a\u3069\u304c\u6709\u540d\u3067\u3059. \n\n## \u3081\u3056\u3059\u3068\u3053\u308d\n\u30ab\u30aa\u30b9\u3084\u30d5\u30e9\u30af\u30bf\u30eb\u306e\u3059\u3054\u3044\u3068\u3053\u308d\u306f, **\u5358\u7d14\u306a\u30e2\u30c7\u30eb\u304b\u3089\u8907\u96d1\u602a\u5947\u306a\u3082\u306e\u304c\u51fa\u73fe\u3059\u308b\u3053\u3068\u3067\u3059.** \u3068\u3044\u3046\u3053\u3068\u3067, \u30b7\u30f3\u30d7\u30eb\u306a\u30b3\u30fc\u30c9\u304b\u3089\u610f\u5473\u4e0d\u660e\u306a\u51fa\u529b\u3092\u5f97\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059.\n\n# Mandelbrot\u96c6\u5408\n\u3044\u308f\u3086\u308b, \u30d5\u30e9\u30af\u30bf\u30eb\u306e\u306f\u3057\u308a\u3067\u3059. \u30d1\u30e9\u30e1\u30fc\u30bf$(x, y)$\u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u308b\u6f38\u5316\u5f0f\n\n```math\n\ta_{n+1} = a_n^2 - b_n^2 + x,\\hspace{1cm} b_{n+1} = 2a_nb_n + y,\\hspace{1cm} a_0 = b_0 = 0\n```\n\u306b\u3064\u3044\u3066, $n\\rightarrow \\infty$\u3067\u3082\u767a\u6563\u3057\u306a\u3044\u3088\u3046\u306a\u70b9$(x, y)$\u306e\u96c6\u5408\u306e\u3053\u3068\u3092Mandelbrot\u96c6\u5408\u3068\u547c\u3073\u307e\u3059. Mandelbrot\u96c6\u5408\u306f\u30d5\u30e9\u30af\u30bf\u30eb\u96c6\u5408\u3067\u3059.  \u3082\u3061\u308d\u3093\u624b\u3067\u306f\u89e3\u3051\u307e\u305b\u3093\u304c, \u6f38\u5316\u5f0f\u81ea\u4f53\u306f\u5358\u7d14\u305d\u3046\u3067\u3059\u306d. \n\n## \u5b9f\u88c5\n\n```py3\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sbn\n\nN, M = 50, 500\n\ndef mandel(X, Y):\n    a, b = [0] * 2\n    for i in range(N):\n        a, b = a**2 - b**2 + X, 2 * a * b + Y\n        \n    return a**2 + b**2 < 4\n        \nx, y = [np.linspace(-2, 2, M)] * 2\nX, Y = np.meshgrid(x, y)\nplt.pcolor(X, Y, mandel(X, Y))\nplt.show()\n```\n\n\u9069\u5f53\u306a$n$\u307e\u3067\u56de\u3057\u3066\u3042\u3052\u3066, $a^2 + b^2 < 4$\u3092\u767a\u6563\u3057\u306a\u3044\u6761\u4ef6\u3068\u3057\u3066\u3044\u307e\u3059. Python\u3067\u306f`True`\u304c1, `False`\u304c0\u306b\u8a55\u4fa1\u3055\u308c\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059. \n\n![figure9.png](https://qiita-image-store.s3.amazonaws.com/0/146775/141b06d1-0b69-0472-f34a-c592c5743983.png)\n\n\u53ce\u675f\u306e\u5ea6\u5408\u3044\u3092$n$\u3067\u52d8\u5b9a\u3057\u3066\u3042\u3052\u308b\u3068\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3063\u307d\u3044\u30b0\u30e9\u30d5\u306b\u3082\u3067\u304d\u307e\u3059\u304c, \u4eca\u56de\u306f\u30b3\u30fc\u30c9\u306e\u30b7\u30f3\u30d7\u30eb\u3055\u3092\u91cd\u8996\u3057\u307e\u3057\u305f. \u3053\u308c\u304f\u3089\u3044\u7c97\u3044\u7d75\u3067\u3082\u81ea\u5df1\u76f8\u4f3c\u306e\u610f\u5473\u306f\u7406\u89e3\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u601d\u3044\u307e\u3059. \n\n# Logistic\u5199\u50cf\n\u30d1\u30e9\u30e1\u30fc\u30bf$x$\u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u308b\u6f38\u5316\u5f0f\n\n```math\n\tx_{n+1} = ax_n(1 - x_n)\n```\n\u3092\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u65b9\u7a0b\u5f0f\u3068\u547c\u3073\u307e\u3059. Mandelbrot\u3088\u308a\u3055\u3089\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d. $a$\u3092\u5909\u5316\u3055\u305b\u305f\u3068\u304d\u306b$x_n$\u304c\u53ce\u675f(\u3082\u3057\u304f\u306f\u8907\u6570\u306e\u5024\u3092\u632f\u52d5)\u3059\u308b\u70b9\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u3044\u304f\u3068\u30ab\u30aa\u30b9\u7684\u306a\u632f\u308b\u821e\u3044\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059. \n\n## \u5b9f\u88c5\n\n```py3\ndef logistic(a):\n    x = [0.8]\n    for i in range(400):\n        x.append(a * x[-1] * (1 - x[-1]))\n    return x[-100:]\n\nfor a in np.linspace(2.0, 4.0, 1000):\n    x = logistic(a)\n    plt.plot([a]*len(x), x, \"c.\", markersize=1.7)\n    \nplt.show()\n```\n\n\u6f38\u5316\u5f0f\u3092$n= 400$\u307e\u3067\u56de\u3057\u3066\u5f8c\u308d\u306e$100$\u500b\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059. \n\n![figure10.png](https://qiita-image-store.s3.amazonaws.com/0/146775/c153ec8c-6d86-5ef9-b165-aa86fcbc589f.png)\n\n\u3044\u3044\u304b\u3093\u3058\u306b\u610f\u5473\u4e0d\u660e\u306e\u30b0\u30e9\u30d5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d. \u975e\u5468\u671f\u7684\u3067\u3042\u308b\u3068\u3044\u3046\u610f\u5473\u3067\u30ab\u30aa\u30b9\u7684\u3067\u306f\u3042\u308a\u307e\u3059\u304c, \u521d\u671f\u5024\u92ed\u654f\u6027\u306f\u7279\u306b\u898b\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f. \u3053\u308c\u306f\u751f\u7269\u306e\u500b\u4f53\u6570\u306b\u95a2\u3059\u308b\u30e2\u30c7\u30eb\u306b\u3082\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u305d\u3046\u3067\u3059. \n\n# Duffing\u632f\u52d5\u5b50\n\u525b\u6027\u306e\u3042\u308b\u632f\u308a\u5b50\u306b\u6e1b\u8870\u9805\u3068\u78c1\u77f3\u306b\u3088\u308b\u5f37\u5236\u632f\u52d5\u9805\u3092\u8ffd\u52a0\u3057\u305f\u7cfb\u3067, \u57fa\u790e\u65b9\u7a0b\u5f0f\u306f\n\n```math\nm\\frac{d^2x}{dt^2} = -\\gamma \\frac{dx}{dt} + 2ax - 4bx^3 + F_0\\cos(\\omega t + \\delta)\n```\n\u3067\u3059. \u3053\u306e\u632f\u308a\u5b50\u306f\u30ab\u30aa\u30b9\u7684\u306b\u632f\u308b\u821e\u3044, \u304b\u3064\u305d\u306e\u76f8\u7a7a\u9593\u3092$\\frac{2\\pi}{\\omega}$\u306e\u5468\u671f\u3067\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u3082\u306e(Strange attractor)\u306f\u30d5\u30e9\u30af\u30bf\u30eb\u306a\u6027\u8cea\u3092\u6301\u3061\u307e\u3059. \n\n## \u5b9f\u88c5\n\u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u89e3\u304d\u307e\u3059. `odeint`\u306b\u3064\u3044\u3066\u306f\n[NumPy\u30fbSciPy\u3092\u7528\u3044\u305f\u6570\u5024\u8a08\u7b97\u306e\u9ad8\u901f\u5316 : \u5fdc\u7528\u305d\u306e1](http://qiita.com/jabberwocky0139/items/a9751d11caa64bc19226)\n\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u3088\u3044\u3068\u601d\u3044\u307e\u3059. \n\n```py3\nfrom scipy.integrate import odeint, simps\n\ndef duffing(var, t, gamma, a, b, F0, omega, delta):\n    \"\"\"\n    var = [x, p]\n    dx/dt = p\n    dp/dt = -gamma*p + 2*a*x - 4*b*x**3 + F0*cos(omega*t + delta)\n    \"\"\"\n    x_dot = var[1]\n    p_dot = -gamma * var[1] + 2 * a * var[0] - 4 * b * var[0]**3 + F0 * np.cos(omega * t + delta)\n\n    return np.array([x_dot, p_dot])\n\n# parameter\nF0, gamma, omega, delta = 10, 0.1, np.pi/3, 1.5*np.pi\na, b = 1/4, 1/2\nvar, var_lin = [[0, 1]] * 2\n\n#timescale\nt = np.arange(0, 20000, 2*np.pi/omega)\nt_lin = np.linspace(0, 100, 10000)\n\n# solve\nvar = odeint(duffing, var, t, args=(gamma, a, b, F0, omega, delta))\nvar_lin = odeint(duffing, var_lin, t_lin, args=(gamma, a, b, F0, omega, delta))\n\nx, p = var.T[0], var.T[1]\nx_lin, p_lin = var_lin.T[0], var_lin.T[1]\n\nplt.plot(x, p, \".\", markersize=4)\nplt.show()\n```\n\n\u5c11\u3057\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u304c, \u51e6\u7406\u306e\u30e1\u30a4\u30f3\u306f\u307b\u3093\u306e\u4e00\u90e8\u3067\u6b8b\u308a\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\u3060\u3051\u3067\u3059. \n\n![figure11.png](https://qiita-image-store.s3.amazonaws.com/0/146775/a4765efe-b6b5-e2e1-4568-117981411610.png)\n\n\u4e0d\u601d\u8b70\u306a\u3082\u306e\u304c\u51fa\u3066\u304d\u307e\u3057\u305f. \u3053\u308c\u304cStrange attractor\u3067\u3059. \u3053\u308c\u3082\u7d30\u304b\u304f\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u62e1\u5927\u3059\u308b\u3068\u81ea\u5df1\u76f8\u4f3c\u6027\u304c\u898b\u3048\u308b\u3089\u3057\u3044\u3067\u3059. \n\u632f\u308a\u5b50\u306e\u4f4d\u7f6e\u3092\u521d\u671f\u5024\u3092\u5909\u3048\u3066\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\n```py3\n# is chaotic?\nplt.plot(t_lin, x_lin)\nvar_lin = odeint(duffing, [0.1, 1], t_lin, args=(gamma, a, b, F0, omega, delta))\nx_lin, p_lin = var_lin.T[0], var_lin.T[1]\nplt.plot(t_lin, x_lin)\nplt.show()\n\n```\n\n![figure12.png](https://qiita-image-store.s3.amazonaws.com/0/146775/6e00fa65-37c5-4174-dc91-72dc5c301748.png)\n\n\u3053\u308c\u304c\u521d\u671f\u5024\u92ed\u654f\u6027\u3067\u3059. \u307b\u307c\u4e00\u81f4\u3057\u3066\u3044\u305f\u3068\u601d\u3063\u305f\u3089\u5916\u308c\u3066, \u5916\u308c\u305f\u3068\u601d\u3063\u305f\u3089\u307e\u305f\u540c\u3058\u8ecc\u9053\u3092\u63cf\u304f, \u3068\u3044\u3046\u666e\u901a\u306e\u529b\u5b66\u7cfb\u3067\u306f\u7406\u89e3\u3057\u304c\u305f\u3044\u52d5\u304d\u3092\u3057\u3066\u3044\u307e\u3059. \u307e\u3055\u306b\u30ab\u30aa\u30b9\u3067\u3059\u306d. \n\n\n# 3\u4f53\u554f\u984c\n\u6700\u5f8c\u306e\u30c8\u30ea\u3067\u3059. 2\u4f53\u904b\u52d5\u306f\u89e3\u6790\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u304c, 3\u4f53\u4ee5\u4e0a\u306e\u591a\u4f53\u554f\u984c\u306f\u305d\u306e\u9650\u308a\u3067\u306f\u3042\u308a\u307e\u305b\u3093. \u30ab\u30aa\u30b9\u3092\u6570\u5024\u8a08\u7b97\u3067\u898b\u305f\u4e16\u754c\u3067\u521d\u3081\u3066\u306e\u4f8b\u3060\u3063\u305f\u6c17\u304c\u3057\u307e\u3059. \n\n\u91cd\u3055\u304c3\u30fb4\u30fb5\u306e\u8cea\u70b9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u914d\u7f6e\u3057\u305f\u5e73\u9762\u3092\u8003\u3048\u307e\u3059\n\n![figure14.png](https://qiita-image-store.s3.amazonaws.com/0/146775/dcef6ae7-1e48-53fe-5f57-2d7c063fa4bb.png)\n\n\u3053\u306e3\u4f53\u306f\u4e92\u3044\u306b\u5f15\u529b\u76f8\u4e92\u4f5c\u7528\u3092\u6301\u3063\u3066\u3044\u307e\u3059. \u3053\u306e\u8cea\u70b9\u305f\u3061\u306e\u52d5\u304d\u3092\u6570\u5024\u8a08\u7b97\u3067\u8ffd\u3063\u3066\u307f\u307e\u3057\u3087\u3046. \u3061\u3087\u3063\u3068\u3060\u3051\u3084\u3084\u3053\u3057\u3044\u7cfb\u306a\u306e\u3067\u89e3\u6790\u529b\u5b66\u306e\u529b\u3092\u501f\u308a\u307e\u3057\u3087\u3046. \u7cfb\u306eLagrangean\u306f\n\n```math\nL = \\sum_i^{3, 4, 5}\\left[\\frac{\\dot{q}_i^2}{2m_i} + \\sum_{j>i}G\\frac{m_im_j}{r_{ij}}\\right], \\hspace{1cm}q_i = (x_i, y_i), \\hspace{1cm}r_{ij} = \\sqrt{(x_i - y_j)^2 - (y_i - y_j)^2}\n```\n\u3067\u3042\u308a, \u3053\u308c\u3092Euler-Lagrange\u65b9\u7a0b\u5f0f\n\n```math\n\\frac{d}{dt}\\frac{\\partial L}{\\partial\\dot{q}_{i}} - \\frac{\\partial L}{\\partial q_{i}} = 0\n```\n\u306b\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u8cea\u70b9$i$\u306e\u904b\u52d5\u65b9\u7a0b\u5f0f\u304c\u5f97\u3089\u308c\u307e\u3059. \u305f\u3060\u5fae\u5206\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u3059\u304c, \u7b26\u53f7\u306b\u3088\u304f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044. \u5177\u4f53\u7684\u306a\u5f0f\u306f\u3053\u3053\u306b\u306f\u66f8\u304d\u307e\u305b\u3093. \u30b3\u30fc\u30c9\u3092\u898b\u3066\u304f\u3060\u3055\u3044. \n\n## \u5b9f\u88c5\n\n```py3\ndef manybody(var, t, m3, m4, m5, G):\n    \"\"\"\n    var = [x3, y3, x3_dot, y3_dot, x4, y4, x4_dot, y4_dot, x5, y5, x5_dot, y5_dot]\n    dx3/dt = p3\n    dpx3/dt = -2*G*m3*x3(m4*(r34)**-1.5 + m5*(r35)**-1.5)\n    dy3/dt = p3\n    dpy3/dt = -2*G*m3*y3(m4*(r34)**-1.5 + m5*(r35)**-1.5)\n    ...\n    \"\"\"\n\n    def r(x1, y1, x2, y2):\n        return np.sqrt((x1 - x2)**2 + (y1- y2)**2)**-3\n\n    # (x3, y3)\n    x3 = var[2]\n    px3 = -G * (m4 * r(var[0], var[1], var[4], var[5]) * (var[0] - var[4]) + m5 * r(var[0], var[1], var[8], var[9]) * (var[0] - var[8]))\n    y3 = var[3]\n    py3 = -G * (m4 * r(var[0], var[1], var[4], var[5]) * (var[1] - var[5]) + m5 * r(var[0], var[1], var[8], var[9]) * (var[1] - var[9]))\n    \n    \n    # (x4, y4)\n    x4 = var[6]\n    px4 = -G * (-m3 * r(var[4], var[5], var[0], var[1]) * (var[0] - var[4]) + m5 * r(var[4], var[5], var[8], var[9]) * (var[4] - var[8]))\n    y4 = var[7]\n    py4 = -G * (-m3 * r(var[4], var[5], var[0], var[1]) * (var[1] - var[5]) + m5 * r(var[4], var[5], var[8], var[9]) * (var[5] - var[9]))\n    \n\n    # (x5, y5)\n    x5 = var[10]\n    px5 = -G * (-m3 * r(var[8], var[9], var[0], var[1]) * (var[0] - var[8]) - m4 * r(var[8], var[9], var[4], var[5]) * (var[4] - var[8]))\n    y5 = var[11]\n    py5 = -G * (-m3 * r(var[8], var[9], var[0], var[1]) * (var[1] - var[9]) - m4 * r(var[8], var[9], var[4], var[5]) * (var[5] - var[9]))\n    \n\n    return np.array([x3, y3, px3, py3, x4, y4, px4, py4, x5, y5, px5, py5])\n\n\n\nm3, m4, m5 = 3, 4, 5\nG = 1\nvar = np.array([0, 4, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0])\nt = np.linspace(0, 70, 3e7)\n\nvar = odeint(manybody, var, t, args=(m3, m4, m5, G), full_output=False)\n\nplt.plot(var[:, 0][::1000], var[:, 1][::1000], label=\"3\")\nplt.plot(var[:, 4][::1000], var[:, 5][::1000], label=\"4\")\nplt.plot(var[:, 8][::1000], var[:, 9][::1000], label=\"5\")\nplt.show()\n```\n\n\u5fae\u5206\u65b9\u7a0b\u5f0f\u306e\u5b9a\u7fa9\u304c\u9762\u5012\u3067\u3059\u304c, \u305d\u308c\u4ee5\u5916\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3059. \u304b\u306a\u308a\u6fc0\u3057\u304f\u5dee\u5206\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3068\u3063\u3066\u3082\u30e1\u30e2\u30ea\u3092\u98df\u3044\u307e\u3059. \u30ad\u30c4\u3044\u5834\u5408\u306f\u5dee\u5206\u5316\u3092\u7de9\u3081\u3066\u304f\u3060\u3055\u3044.\n\n![figure13.png](https://qiita-image-store.s3.amazonaws.com/0/146775/232bea1c-94bd-2672-07a1-505d1851b60b.png)\n\n<blockquote class=\"twitter-video\" data-lang=\"ja\"><p lang=\"und\" dir=\"ltr\"><a href=\"https://t.co/hQnWrZD2Vt\">pic.twitter.com/hQnWrZD2Vt</a></p>&mdash; Jabberwocky (@jabberw75864611) <a href=\"https://twitter.com/jabberw75864611/status/812231798516129792\">2016\u5e7412\u670823\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n(\u52d5\u753b\u306e\u65b9\u306f\u5dee\u5206\u5316\u3092\u7c97\u304f\u3057\u3066\u3044\u308b\u306e\u3067, \u4e0a\u306e\u30b0\u30e9\u30d5\u3068\u306f\u5c11\u3057\u9055\u3046\u52d5\u304d\u65b9\u3092\u3057\u3066\u3044\u307e\u3059)\n\n\u3082\u3046\u8a33\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u306d. \u3050\u3063\u3061\u3083\u3050\u3061\u3083\u304b\u3068\u601d\u3044\u304d\u3084, \u6700\u5f8c\u306f2\u3064\u304c\u4ef2\u826f\u304f\u885d\u7a81\u3057\u306a\u304c\u3089\u5439\u3063\u98db\u3093\u3067\u3044\u304d, \u6b8b\u308a\u306e1\u3064\u306f\u3072\u3068\u308a\u3067\u53cd\u5bfe\u5074\u306b\u98db\u3073\u53bb\u308a\u307e\u3059. \n\n\u5b9f\u306f\u3053\u308c, \u672c\u5f53\u306b\u6b63\u3057\u3044\u89e3\u3067\u306f\u306a\u3044\u3093\u3067\u3059. \u771f\u306e\u89e3\u306f[\u3053\u3061\u3089](http://www.ucolick.org/~laugh/oxide/projects/burrau.html)\u3067\u3059. \u306a\u305c\u30ba\u30ec\u308b\u306e\u304b\u3068\u3044\u3046\u3068, \u8cea\u70b9\u540c\u58eb\u306e\u4f4d\u7f6e\u304c\u91cd\u306a\u308b\u3068\u5f15\u529b\u304c\u767a\u6563\u3057\u3066\u3057\u307e\u3046\u306e\u3067, \u305d\u3046\u3044\u3046\u70b9\u3067\u6570\u5024\u8a08\u7b97\u3067\u306f\u8aa4\u5dee\u304c\u7a4d\u307f\u91cd\u306a\u3063\u3066\u3057\u307e\u3046\u304b\u3089\u3067\u3059. \u3053\u308c\u306f\u6642\u9593\u30fb\u7a7a\u9593\u306e\u5dee\u5206\u5316\u3092\u5897\u3084\u3059\u3060\u3051\u3067\u306f\u5bfe\u5fdc\u3057\u304d\u308c\u306a\u3044\u306e\u3067, \u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u6b63\u5247\u5316\u3059\u308b\u3053\u3068\u3067\u56de\u907f\u3059\u308b\u3088\u3046\u3067\u3059\u304c, \u4eca\u56de\u306f\u305d\u306e\u304a\u8a71\u306f\u30ab\u30c3\u30c8\u3067. \u6642\u9593\u304c\u3042\u308c\u3070\u8abf\u3079\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3059. \n\n# \u3055\u3044\u3054\u306b\n\u3053\u3093\u306a\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5b50\u305f\u3061\u304c\u6975\u3081\u3066\u5358\u7d14\u306a\u30e2\u30c7\u30eb\u304b\u3089\u51fa\u73fe\u3059\u308b\u306e\u306f\u697d\u3057\u3044\u3067\u3059\u306d. \n"}