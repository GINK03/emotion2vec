{"context": "\n\nServerless Framework\u3068\u306f\n\u6700\u8fd1\u5df7\u3067\u9a12\u304c\u308c\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5bb9\u6613\u306b\u4f5c\u6210\u3001\u7ba1\u7406\u3067\u304d\u308b\u4e00\u822c\u7684\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3044\u3046\u3088\u308a\u30c4\u30fc\u30eb\u306b\u8fd1\u3044\u3082\u306e\u3002\nSeverless Framework\u306eAWS\u74b0\u5883\u306b\u304a\u3044\u3066\u306f\u3001CloudFormation\u30fbLambda\u30fbAPI Gateway\u30fbDynamoDB\u30fbS3\u30fbIAM\u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7ba1\u7406\u30fb\u69cb\u6210\u3057\u3066\u3044\u308b\u3002\n\u4eca\u56de\u306f\u3001Severless Framework\u3092\u7528\u3044\u3066Lambda\u30fbAPI Gateway\u30fbDynamoDB\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u7c21\u5358\u306aREST API\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n\u306a\u304a\u3001\u672c\u8a18\u4e8b\u3067\u306fv1.0.x\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b\u3002\nv0.x\u3068\u5927\u304d\u304f\u69cb\u6210\u30fb\u8a2d\u5b9a\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n\u74b0\u5883\n\u4eca\u56de\u306fAWS\u4e0a\u3067\u3001Severless Framework\u3092\u7528\u3044\u3066\u7c21\u5358\u306aREST API\u3092\u4f5c\u6210\u3059\u308b\u3002\nSeverless Framework\u3067\u306f\u30011.0.x\u6642\u70b9\u3067Node.js\u3001Python\u3001Java\u3001Scala\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3002\n\u4eca\u56de\u306f\u3001Node.js\u3092\u5bfe\u8c61\u3068\u3057\u3066\u9032\u3081\u3066\u3044\u304f\u3002\n\u306a\u304a\u3001JavaScript\u306b\u95a2\u3057\u3066\u306f\u3001ES6\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\n\n\nnpm\n3.10\n\n\nnode\n6.2\n\n\nServerless Framework\n1.0.3\n\n\n\n\nGitHub\nhello-serverless\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nServerless Framework\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u65e9\u901fServerless Framework\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n$ sudo npm install -g serverless\n\n\nAWS Credentials\u306e\u8a2d\u5b9a\n\u307e\u305a\u306fSeverless Framework\u3067\u4f7f\u7528\u3059\u308bIAM\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u4f5c\u6210\u306e\u4ed5\u65b9\u306f\u4e0b\u8a18\u306e\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e00\u65e6\u3053\u3053\u3067\u306f\u3001\u7ba1\u7406\u30dd\u30ea\u30b7\u30fc\u3068\u3057\u3066\u300cAdministratorAccess\u300d\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u3082\u3064\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3002\nhttp://docs.aws.amazon.com/ja_jp/IAM/latest/UserGuide/id_users_create.html\n\u6b21\u306b\u3001AWS\u30b5\u30fc\u30d3\u30b9\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9(CLI)\u306e\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066Serverless Framework\u3067\u4f7f\u7528\u3059\u308bIAM\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3002\nhttp://docs.aws.amazon.com/ja_jp/streams/latest/dev/kinesis-tutorial-cli-installation.html\n\nMac\u3067Python>=2.6.3\u306a\u65b9\u306e\u4f8b\n$ curl \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\"\n$ sudo python get-pip.py\n$ sudo pip install awscli\n\n\n\u4eca\u56de\u306f\u3001Default\u306eAWS Profiles\u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n$ aws configure\nAWS Access Key ID [None]: \u4f5c\u6210\u3057\u305fIAM\u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fcID\nAWS Secret Access Key [None]: \u4f5c\u6210\u3057\u305fIAM\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\nDefault region name [None]: ap-northeast-1\nDefault output format [None]: ENTER\n\n\u65e2\u306bDefault\u306eAWS Profiles\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u65b9\u306f\u3001\u4e0b\u8a18\u3092\u53c2\u8003\u306bProfile\u3092\u5207\u308a\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\nhttps://serverless.com/framework/docs/providers/aws/guide/credentials/\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u4eca\u56de\u306fnode.js\u3067hello\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u203bserverless\u30b3\u30de\u30f3\u30c9\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306b\u8ffd\u52a0\u3055\u308c\u308bsls\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u3063\u3066\u3044\u304f\u3002\n$ mkdir hello-serverless\n$ cd hello-serverless\n$ sls create --template aws-nodejs --name hello\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n\n\n\u30d5\u30a1\u30a4\u30eb\n\u7528\u9014\n\n\n\n\nevent.json\n\u5404Function\u306bevent\u3067\u6e21\u3055\u308c\u308b\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\n\n\nhandler.js\n\u5b9f\u969b\u306eLambda Function\u3092\u8a18\u8ff0\u3059\u308b\n\n\nserverless.yml\n\u5404\u7a2e\u8a2d\u5b9a\u3002Lambda Function\u306e\u8a2d\u5b9a\u3001\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u8a2d\u5b9a\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u306a\u3069\u3092\u8a18\u8ff0\u3059\u308b\n\n\n\n\nhandler.js\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306ehandler.js\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\nhandler.js\n'use strict';\n\nmodule.exports.hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  };\n\n  callback(null, response);\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n};\n\n\nGo Serverless v1.0! Your function executed successfully!\u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u3068event\u5185\u5bb9\u3092\u51fa\u529b\u3092JSON\u5f62\u5f0f\u3067\u8868\u793a\u3059\u308b\u7c21\u5358\u306a\u51e6\u7406\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u3053\u308c\u3089\u3092\u5b9f\u969b\u306b\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n\u30c7\u30d7\u30ed\u30a4\u5148\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u8a2d\u5b9a\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u5148\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3068\u3057\u3066es-east-1\uff08\u30d0\u30fc\u30b8\u30cb\u30a2\u5317\u90e8\uff09\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u3067ap-northeast-1\uff08\u6771\u4eac\uff09\u306b\u5909\u66f4\u3059\u308b\u3002\n\nserverless.yml\nprovider:\n  name: aws\n  runtime: nodejs4.3\n\n# you can overwrite defaults here\n  stage: dev\n  region: ap-northeast-1\n\n\n\n\u30c7\u30d7\u30ed\u30a4\n$ sls deploy -v\n\n\n\u5b9f\u884c\nsls invoke -f hello -p event.json\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3068event\u5185\u5bb9\u304c\u8868\u793a\u3055\u308c\u305f\u3060\u308d\u3046\u304b\uff1f\n\n\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b9\n\u3069\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306eLambda function\u3092\u547c\u3073\u51fa\u3059\u304b\u3092\u5b9a\u7fa9\u3059\u308b\u3002\u30a4\u30d9\u30f3\u30c8\u306e\u7a2e\u985e\u306b\u95a2\u3057\u3066\u306f\u3001AWS\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308bLambda function\u306e\u30c8\u30ea\u30ac\u30fc\u306e\u5168\u3066\u304c\u5b9a\u7fa9\u53ef\u80fd\u3002\nhttps://serverless.com/framework/docs/providers/aws/events/\n\u4eca\u56de\u306fHTTP API\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u3053\u308c\u306b\u3088\u308aAPI Gateway\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u3088\u308a\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\u3002\nevents\u3092\u8ffd\u8a18\u3059\u308b\u3002\n\nserverless.yml\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n       - http:\n           path: hello\n           method: get\n           cors: true\n\n\n\u518d\u5ea6\u30c7\u30d7\u30ed\u30a4\n$ sls deploy -v\n\nService Information\nservice: hello\nstage: dev\nregion: ap-northeast-1\napi keys:\n  None\nendpoints:\n  GET - https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev/greet\nfunctions:\n  hello-dev-hello: arn:aws:lambda:ap-northeast-1:xxxxxxxxxx:function:hello-dev-hello\n\n\u5b9f\u969b\u306b\u3001\u4e0a\u8a18endpoints\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308bAPI\u3092\u53e9\u3044\u3066\u307f\u308b\u3002\n$ curl -X GET https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev/greet\n\n\nES6\u306e\u8a2d\u5b9a\nBabel + WebPack\u3092\u7528\u3044\u3066\u3001ES6\u306e\u74b0\u5883\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ npm install --save-dev babel-core babel-loader babel-plugin-transform-runtime babel-polyfill babel-preset-es2015 babel-preset-stage-0 serverless-webpack webpack\n$ npm install --save babel-runtime babel-polyfill\n\n\nBabel\u306e\u8a2d\u5b9a\n{\n  \"plugins\": [\"transform-runtime\"],\n  \"presets\": [\"es2015\", \"stage-0\"]\n}\n\n\nwebpack\u306e\u8a2d\u5b9a\n\u4eca\u56de\u306f\u3001Babel\u3068\u30ed\u30fc\u30ab\u30eb\u306e\u5b9f\u884c\u74b0\u5883\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306bwebpack\u3092\u7528\u3044\u308b\u3002\n\nserverless.yml\nplugins:\n  - serverless-webpack\n\n\n\nwebpack.config.js\nmodule.exports = {\n  entry: './handler.js',\n  target: 'node',\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      loaders: ['babel'],\n      include: __dirname,\n      exclude: /node_modules/,\n    }]\n  },\n  externals: {\n    'aws-sdk': 'aws-sdk'\n  }\n};\n\n\n\nES6\nhandler.js\u3092\u307e\u308b\u3063\u3068ES6\u3078\n\nhandler.js\nexport const hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  }\n\n  callback(null, response)\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n}\n\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\n\u3053\u3053\u307e\u3067\u304f\u308b\u3068\u3001serverless-webpack\u306b\u3088\u308a\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u5b9f\u884c\u3082\u53ef\u80fd\u3068\u306a\u308b\u3002\n$ sls webpack serve\n\n\u8868\u793a\u3055\u308c\u305f\u30ed\u30fc\u30ab\u30eb\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306bcurl\u30b3\u30de\u30f3\u30c9\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u307f\u308b\u3002\n$ curl -X GET http://localhost:8000/hello\n\n\nDynamoDB\u306e\u8a2d\u5b9a\nAWS\u306eNoSQL\u306aDynamoDB\u3092\u4f7f\u3063\u3066\u3001\u540d\u524d\u3092\u767b\u9332\u3001Hello, {\u767b\u9332\u540d}\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u304f\u3002\n\nAPI\u6982\u8981\n\u3053\u3053\u3067\u306f\u3001\u4e0b\u8a18\u306eHTTP API\u3092\u7528\u610f\u3057\u3066\u3044\u304f\u3002\n\n\n\n\u30d1\u30b9\n\u30e1\u30bd\u30c3\u30c9\n\u30ea\u30af\u30a8\u30b9\u30c8JSON\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\u7528\u9014\n\n\n\n\n/names\nPOST\n{\"id\":ID, \"name\":\"\u767b\u9332\u540d\"}\n\u540d\u524d\u306eDynamoDB\u3078\u306e\u767b\u9332\n\n\n/hello/{id}\nGET\n\n\"Hello, {\u767b\u9332\u540d}\"\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d6\u5f97\n\n\n\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ npm install --save-dev  aws-sdk\n\n\nDynamoDB\u306e\u8a2d\u5b9a\nSeverless Framework\u3067\u306f\u3001serverless.yml\u306eresources\u3068\u3044\u3046\u9805\u76ee\u3067DynamoDB\u306f\u3058\u3081\u3001S3\u306a\u3069\u306e\u5404\u7a2e\u30ea\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u3092\u884c\u3048\u308b\u3002\u7279\u306bAWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u7528\u3044\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002\n\u4eca\u56de\u306f\u3001\u5358\u7d14\u306b\u300c\u540d\u524d\u300d\u3092\u6271\u3046id\u3068name\u30ab\u30e9\u30e0\u3092\u3082\u3064names\u30c6\u30fc\u30d6\u30eb\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3002\n\uff08name\u30ab\u30e9\u30e0\u306b\u95a2\u3057\u3066\u306f\u3053\u3053\u3067\u306f\u5b9a\u7fa9\u3057\u306a\u3044\u3053\u3068\u306b\u3059\u308b\uff09\n\nserverless.yml\n  Resources:\n    hello:\n      Type: \"AWS::DynamoDB::Table\"\n      Properties:\n        TableName: names\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: N\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n\n\n\u307e\u305f\u3001\u5408\u308f\u305b\u3066\u30c7\u30d7\u30ed\u30a4\u6642\u306bDynamoDB\u3092\u6271\u3046IAM\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306bprovider\u306bRole\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\nserverless.xml\nprovider:\n  name: aws\n  runtime: nodejs4.3\n# you can overwrite defaults here\n  stage: dev\n  region: ap-northeast-1\n  iamRoleStatements:\n    - Effect: Allow\n      Resource: \"arn:aws:dynamodb:${self:provider.region}:*:table/*\"\n      Action:\n        - \"dynamodb:*\"\n\n\n\nLambda\u51e6\u7406\nDynamoDB\u306b\u540d\u524d\u3092\u767b\u9332\u3059\u308bregist\u30e1\u30bd\u30c3\u30c9\u3068\u6307\u5b9a\u3055\u308c\u305fID\u306b\u5bfe\u3057\u3066\u3001Hello, {\u767b\u9332\u540d}\u3092\u8fd4\u3059hello\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nhandler.js\nimport AWS from 'aws-sdk'\n\nAWS.config.update({region: 'ap-northeast-1'})\n\nconst db = new AWS.DynamoDB()\n\nexport const hello = (event, context, callback) => {\n  const params = {\n    TableName: 'names',\n    Key: {\n      id: {N: event.pathParameters.id}\n    }\n  }\n\n  try {\n    db.getItem(params, (error, data) => {\n      if (error) {\n        callback(null, {statusCode: 400, body: JSON.stringify({message: 'Failed.', error: error})})\n      }\n      callback(null, {statusCode: 200, body: JSON.stringify({message: `Hello, ${data.Item.name.S}.`})});\n    })\n  } catch (error) {\n    callback(null, {statusCode: 400, body: JSON.stringify({message: 'Failed.', error: error})})\n  }\n}\n\nexport const regist = (event, context, callback) => {\n  const body = JSON.parse(event.body)\n  const params = {\n    TableName: 'names',\n    Item: {\n      id: {N: String(body.id)},\n      name: {S: body.name}\n    },\n    Expected: {\n      id: {Exists: false}\n    }\n  }\n\n\n  try {\n    db.putItem(params, (error, data) => {\n      if (error) {\n        callback(null, {statusCode: 400, body: JSON.stringify({message: 'Failed.', error: error})})\n      }\n      callback(null, {statusCode: 200, body: JSON.stringify({message: 'Succeeded!', params: params})});\n    })\n  } catch (error) {\n    callback(null, {statusCode: 400, body: JSON.stringify({message: 'Failed.', error: error})})\n  }\n}\n\n\n\n\nLambda Function\u306e\u8a2d\u5b9a\n\nserverless.xml\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n      - http:\n           path: hello/{id}\n           method: get\n           cors: true\n\n  create:\n    handler: handler.regist\n    events:\n      - http:\n           path: names\n           method: post\n           cors: true\n\n\n\n\u78ba\u8a8d\n\u30c7\u30d7\u30ed\u30a4\u3057\u3066curl\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\u307e\u305a\u306fID1\u3067Taro\u3092\u767b\u9332\u3059\u308b\u3002\n$ curl -H \"Accept: application/json\" -H \"Content-type: application/json\" -X POST -d '{\"id\":1, \"name\":\"Taro\"}'  https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev/hello\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u78ba\u8a8d\n$ curl https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev/hello/1\n\n\u30ec\u30b9\u30dd\u30f3\u30b9JSON\u306bmessage\u306bHello, Taro.\u3068\u8868\u793a\u3055\u308c\u308c\u3070ok :)\n\n\u6b21\u56de\n\u4eca\u56de\u306f\u3001Serverless Framework\u3092\u4f7f\u3063\u3066REST API\u3092\u4f5c\u6210\u3057\u305f\u3002\n\u6b21\u56de\u306f\u3001QraphQL\u306b\u5bfe\u5fdc\u3057\u3066\u307f\u308b\u3002\n\n\u6700\u5f8c\u306b\n\u30b5\u30a4\u30d0\u30fc\u30fb\u30d0\u30ba\u3067\u306f\u65b0\u3057\u3044\u3053\u3068\u306b\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3064\u3064\u30b5\u30fc\u30d3\u30b9\u3092\u3064\u304f\u3063\u3066\u3044\u304f\u30a8\u30f3\u30b8\u30cb\u30a2\u3092\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\u3002\n# Serverless Framework\u3068\u306f\n\n\u6700\u8fd1\u5df7\u3067\u9a12\u304c\u308c\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5bb9\u6613\u306b\u4f5c\u6210\u3001\u7ba1\u7406\u3067\u304d\u308b\u4e00\u822c\u7684\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3044\u3046\u3088\u308a\u30c4\u30fc\u30eb\u306b\u8fd1\u3044\u3082\u306e\u3002\n\nSeverless Framework\u306eAWS\u74b0\u5883\u306b\u304a\u3044\u3066\u306f\u3001CloudFormation\u30fbLambda\u30fbAPI Gateway\u30fbDynamoDB\u30fbS3\u30fbIAM\u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7ba1\u7406\u30fb\u69cb\u6210\u3057\u3066\u3044\u308b\u3002\n\n\u4eca\u56de\u306f\u3001Severless Framework\u3092\u7528\u3044\u3066Lambda\u30fbAPI Gateway\u30fbDynamoDB\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u7c21\u5358\u306aREST API\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n![cloudcraft - serverless.png](https://qiita-image-store.s3.amazonaws.com/0/34930/7224412a-b177-6992-0509-013bacb69d0e.png \"cloudcraft - serverless.png\")\n\n\n\u306a\u304a\u3001\u672c\u8a18\u4e8b\u3067\u306f`v1.0.x`\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b\u3002\n`v0.x`\u3068\u5927\u304d\u304f\u69cb\u6210\u30fb\u8a2d\u5b9a\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n# \u74b0\u5883\n\u4eca\u56de\u306fAWS\u4e0a\u3067\u3001Severless Framework\u3092\u7528\u3044\u3066\u7c21\u5358\u306aREST API\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nSeverless Framework\u3067\u306f\u30011.0.x\u6642\u70b9\u3067Node.js\u3001Python\u3001Java\u3001Scala\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u4eca\u56de\u306f\u3001Node.js\u3092\u5bfe\u8c61\u3068\u3057\u3066\u9032\u3081\u3066\u3044\u304f\u3002\n\u306a\u304a\u3001JavaScript\u306b\u95a2\u3057\u3066\u306f\u3001ES6\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n|\u30d1\u30c3\u30b1\u30fc\u30b8|\u30d0\u30fc\u30b8\u30e7\u30f3|\n|:--|:--|\n|npm|3.10|\n|node|6.2|\n|Serverless Framework|1.0.3|\n\n\n# GitHub\n[hello-serverless](https://github.com/hiroshik1985/hello-serverless)\n\n# \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n## Serverless Framework\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u65e9\u901fServerless Framework\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n```\n$ sudo npm install -g serverless\n```\n\n## AWS Credentials\u306e\u8a2d\u5b9a\n\n\u307e\u305a\u306fSeverless Framework\u3067\u4f7f\u7528\u3059\u308bIAM\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u4f5c\u6210\u306e\u4ed5\u65b9\u306f\u4e0b\u8a18\u306e\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e00\u65e6\u3053\u3053\u3067\u306f\u3001\u7ba1\u7406\u30dd\u30ea\u30b7\u30fc\u3068\u3057\u3066\u300cAdministratorAccess\u300d\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u3082\u3064\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nhttp://docs.aws.amazon.com/ja_jp/IAM/latest/UserGuide/id_users_create.html\n\n\n\u6b21\u306b\u3001AWS\u30b5\u30fc\u30d3\u30b9\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9(CLI)\u306e\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066Serverless Framework\u3067\u4f7f\u7528\u3059\u308bIAM\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3002\n\nhttp://docs.aws.amazon.com/ja_jp/streams/latest/dev/kinesis-tutorial-cli-installation.html\n\n``` Mac\u3067Python>=2.6.3\u306a\u65b9\u306e\u4f8b\n$ curl \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\"\n$ sudo python get-pip.py\n$ sudo pip install awscli\n```\n\n\u4eca\u56de\u306f\u3001Default\u306eAWS Profiles\u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n```\n$ aws configure\nAWS Access Key ID [None]: \u4f5c\u6210\u3057\u305fIAM\u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fcID\nAWS Secret Access Key [None]: \u4f5c\u6210\u3057\u305fIAM\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\nDefault region name [None]: ap-northeast-1\nDefault output format [None]: ENTER\n```\n\n\u65e2\u306bDefault\u306eAWS Profiles\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u65b9\u306f\u3001\u4e0b\u8a18\u3092\u53c2\u8003\u306bProfile\u3092\u5207\u308a\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\nhttps://serverless.com/framework/docs/providers/aws/guide/credentials/\n\n\n# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n\n\u4eca\u56de\u306f`node.js`\u3067`hello`\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u203b`serverless`\u30b3\u30de\u30f3\u30c9\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306b\u8ffd\u52a0\u3055\u308c\u308b`sls`\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u3063\u3066\u3044\u304f\u3002\n\n```\n$ mkdir hello-serverless\n$ cd hello-serverless\n$ sls create --template aws-nodejs --name hello\n```\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n|\u30d5\u30a1\u30a4\u30eb|\u7528\u9014|\n|:--|:--|\n|event.json|\u5404Function\u306b`event`\u3067\u6e21\u3055\u308c\u308b\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf|\n|handler.js|\u5b9f\u969b\u306eLambda Function\u3092\u8a18\u8ff0\u3059\u308b|\n|serverless.yml|\u5404\u7a2e\u8a2d\u5b9a\u3002Lambda Function\u306e\u8a2d\u5b9a\u3001\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u8a2d\u5b9a\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u306a\u3069\u3092\u8a18\u8ff0\u3059\u308b|\n\n## handler.js\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306ehandler.js\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n``` handler.js\n'use strict';\n\nmodule.exports.hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  };\n\n  callback(null, response);\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n};\n```\n\n`Go Serverless v1.0! Your function executed successfully!`\u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u3068event\u5185\u5bb9\u3092\u51fa\u529b\u3092JSON\u5f62\u5f0f\u3067\u8868\u793a\u3059\u308b\u7c21\u5358\u306a\u51e6\u7406\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u3053\u308c\u3089\u3092\u5b9f\u969b\u306b\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n\n## \u30c7\u30d7\u30ed\u30a4\u5148\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u8a2d\u5b9a\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u5148\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3068\u3057\u3066`es-east-1`\uff08\u30d0\u30fc\u30b8\u30cb\u30a2\u5317\u90e8\uff09\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u3067`ap-northeast-1`\uff08\u6771\u4eac\uff09\u306b\u5909\u66f4\u3059\u308b\u3002\n\n``` serverless.yml\nprovider:\n  name: aws\n  runtime: nodejs4.3\n\n# you can overwrite defaults here\n  stage: dev\n  region: ap-northeast-1\n```\n\n## \u30c7\u30d7\u30ed\u30a4\n\n```\n$ sls deploy -v\n```\n\n## \u5b9f\u884c\n\n```\nsls invoke -f hello -p event.json\n```\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3068event\u5185\u5bb9\u304c\u8868\u793a\u3055\u308c\u305f\u3060\u308d\u3046\u304b\uff1f\n\n## \u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b9\n\n\u3069\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306eLambda function\u3092\u547c\u3073\u51fa\u3059\u304b\u3092\u5b9a\u7fa9\u3059\u308b\u3002\u30a4\u30d9\u30f3\u30c8\u306e\u7a2e\u985e\u306b\u95a2\u3057\u3066\u306f\u3001AWS\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308bLambda function\u306e\u30c8\u30ea\u30ac\u30fc\u306e\u5168\u3066\u304c\u5b9a\u7fa9\u53ef\u80fd\u3002\n\nhttps://serverless.com/framework/docs/providers/aws/events/\n\n\u4eca\u56de\u306fHTTP API\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u3053\u308c\u306b\u3088\u308aAPI Gateway\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u3088\u308a\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\u3002\n\n\n`events`\u3092\u8ffd\u8a18\u3059\u308b\u3002\n\n``` serverless.yml\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n       - http:\n           path: hello\n           method: get\n           cors: true\n```\n\n\u518d\u5ea6\u30c7\u30d7\u30ed\u30a4\n\n```\n$ sls deploy -v\n```\n\n```\nService Information\nservice: hello\nstage: dev\nregion: ap-northeast-1\napi keys:\n  None\nendpoints:\n  GET - https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev/greet\nfunctions:\n  hello-dev-hello: arn:aws:lambda:ap-northeast-1:xxxxxxxxxx:function:hello-dev-hello\n```\n\n\u5b9f\u969b\u306b\u3001\u4e0a\u8a18endpoints\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308bAPI\u3092\u53e9\u3044\u3066\u307f\u308b\u3002\n\n```\n$ curl -X GET https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev/greet\n```\n\n#ES6\u306e\u8a2d\u5b9a\nBabel + WebPack\u3092\u7528\u3044\u3066\u3001ES6\u306e\u74b0\u5883\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n## \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```\n$ npm install --save-dev babel-core babel-loader babel-plugin-transform-runtime babel-polyfill babel-preset-es2015 babel-preset-stage-0 serverless-webpack webpack\n$ npm install --save babel-runtime babel-polyfill\n```\n\n## Babel\u306e\u8a2d\u5b9a\n\n``` .babelrc\n{\n  \"plugins\": [\"transform-runtime\"],\n  \"presets\": [\"es2015\", \"stage-0\"]\n}\n```\n\n## webpack\u306e\u8a2d\u5b9a\n\u4eca\u56de\u306f\u3001Babel\u3068\u30ed\u30fc\u30ab\u30eb\u306e\u5b9f\u884c\u74b0\u5883\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306bwebpack\u3092\u7528\u3044\u308b\u3002\n\n``` serverless.yml\nplugins:\n  - serverless-webpack\n```\n\n``` webpack.config.js\nmodule.exports = {\n  entry: './handler.js',\n  target: 'node',\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      loaders: ['babel'],\n      include: __dirname,\n      exclude: /node_modules/,\n    }]\n  },\n  externals: {\n    'aws-sdk': 'aws-sdk'\n  }\n};\n```\n\n## ES6\n\n`handler.js`\u3092\u307e\u308b\u3063\u3068ES6\u3078\n\n``` handler.js\nexport const hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  }\n\n  callback(null, response)\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n}\n```\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\n\u3053\u3053\u307e\u3067\u304f\u308b\u3068\u3001`serverless-webpack`\u306b\u3088\u308a\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u5b9f\u884c\u3082\u53ef\u80fd\u3068\u306a\u308b\u3002\n\n```\n$ sls webpack serve\n```\n\n\u8868\u793a\u3055\u308c\u305f\u30ed\u30fc\u30ab\u30eb\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306bcurl\u30b3\u30de\u30f3\u30c9\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u307f\u308b\u3002\n\n\n``` \n$ curl -X GET http://localhost:8000/hello\n```\n\n\n# DynamoDB\u306e\u8a2d\u5b9a\n\nAWS\u306eNoSQL\u306aDynamoDB\u3092\u4f7f\u3063\u3066\u3001\u540d\u524d\u3092\u767b\u9332\u3001`Hello, {\u767b\u9332\u540d}`\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u304f\u3002\n\n## API\u6982\u8981\n\n\u3053\u3053\u3067\u306f\u3001\u4e0b\u8a18\u306eHTTP API\u3092\u7528\u610f\u3057\u3066\u3044\u304f\u3002\n\n|\u30d1\u30b9|\u30e1\u30bd\u30c3\u30c9|\u30ea\u30af\u30a8\u30b9\u30c8JSON\u30d5\u30a9\u30fc\u30de\u30c3\u30c8|\u7528\u9014|\n|:--|:--|:--|:--|\n|/names|POST|{\"id\":ID, \"name\":\"\u767b\u9332\u540d\"}|\u540d\u524d\u306eDynamoDB\u3078\u306e\u767b\u9332|\n|/hello/{id}|GET||\"Hello, {\u767b\u9332\u540d}\"\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d6\u5f97|\n\n## \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ npm install --save-dev  aws-sdk\n```\n\n## DynamoDB\u306e\u8a2d\u5b9a\nSeverless Framework\u3067\u306f\u3001`serverless.yml`\u306e`resources`\u3068\u3044\u3046\u9805\u76ee\u3067DynamoDB\u306f\u3058\u3081\u3001S3\u306a\u3069\u306e\u5404\u7a2e\u30ea\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u3092\u884c\u3048\u308b\u3002\u7279\u306bAWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u7528\u3044\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002\n\n\u4eca\u56de\u306f\u3001\u5358\u7d14\u306b\u300c\u540d\u524d\u300d\u3092\u6271\u3046id\u3068name\u30ab\u30e9\u30e0\u3092\u3082\u3064names\u30c6\u30fc\u30d6\u30eb\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3002\n\uff08name\u30ab\u30e9\u30e0\u306b\u95a2\u3057\u3066\u306f\u3053\u3053\u3067\u306f\u5b9a\u7fa9\u3057\u306a\u3044\u3053\u3068\u306b\u3059\u308b\uff09\n\n``` serverless.yml\n  Resources:\n    hello:\n      Type: \"AWS::DynamoDB::Table\"\n      Properties:\n        TableName: names\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: N\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n```\n\n\u307e\u305f\u3001\u5408\u308f\u305b\u3066\u30c7\u30d7\u30ed\u30a4\u6642\u306bDynamoDB\u3092\u6271\u3046IAM\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b`provider`\u306bRole\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n``` serverless.xml\nprovider:\n  name: aws\n  runtime: nodejs4.3\n# you can overwrite defaults here\n  stage: dev\n  region: ap-northeast-1\n  iamRoleStatements:\n    - Effect: Allow\n      Resource: \"arn:aws:dynamodb:${self:provider.region}:*:table/*\"\n      Action:\n        - \"dynamodb:*\"\n```\n\n\n## Lambda\u51e6\u7406\n\nDynamoDB\u306b\u540d\u524d\u3092\u767b\u9332\u3059\u308b`regist`\u30e1\u30bd\u30c3\u30c9\u3068\u6307\u5b9a\u3055\u308c\u305fID\u306b\u5bfe\u3057\u3066\u3001`Hello, {\u767b\u9332\u540d}`\u3092\u8fd4\u3059`hello`\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n``` handler.js\nimport AWS from 'aws-sdk'\n\nAWS.config.update({region: 'ap-northeast-1'})\n\nconst db = new AWS.DynamoDB()\n\nexport const hello = (event, context, callback) => {\n  const params = {\n    TableName: 'names',\n    Key: {\n      id: {N: event.pathParameters.id}\n    }\n  }\n\n  try {\n    db.getItem(params, (error, data) => {\n      if (error) {\n        callback(null, {statusCode: 400, body: JSON.stringify({message: 'Failed.', error: error})})\n      }\n      callback(null, {statusCode: 200, body: JSON.stringify({message: `Hello, ${data.Item.name.S}.`})});\n    })\n  } catch (error) {\n    callback(null, {statusCode: 400, body: JSON.stringify({message: 'Failed.', error: error})})\n  }\n}\n\nexport const regist = (event, context, callback) => {\n  const body = JSON.parse(event.body)\n  const params = {\n    TableName: 'names',\n    Item: {\n      id: {N: String(body.id)},\n      name: {S: body.name}\n    },\n    Expected: {\n      id: {Exists: false}\n    }\n  }\n\n\n  try {\n    db.putItem(params, (error, data) => {\n      if (error) {\n        callback(null, {statusCode: 400, body: JSON.stringify({message: 'Failed.', error: error})})\n      }\n      callback(null, {statusCode: 200, body: JSON.stringify({message: 'Succeeded!', params: params})});\n    })\n  } catch (error) {\n    callback(null, {statusCode: 400, body: JSON.stringify({message: 'Failed.', error: error})})\n  }\n}\n\n```\n\n## Lambda Function\u306e\u8a2d\u5b9a\n\n``` serverless.xml\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n      - http:\n           path: hello/{id}\n           method: get\n           cors: true\n\n  create:\n    handler: handler.regist\n    events:\n      - http:\n           path: names\n           method: post\n           cors: true\n```\n\n## \u78ba\u8a8d\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u3066curl\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n\u307e\u305a\u306fID1\u3067Taro\u3092\u767b\u9332\u3059\u308b\u3002\n\n```\n$ curl -H \"Accept: application/json\" -H \"Content-type: application/json\" -X POST -d '{\"id\":1, \"name\":\"Taro\"}'  https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev/hello\n```\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u78ba\u8a8d\n\n```\n$ curl https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev/hello/1\n```\n\n\u30ec\u30b9\u30dd\u30f3\u30b9JSON\u306b`message`\u306b`Hello, Taro.`\u3068\u8868\u793a\u3055\u308c\u308c\u3070ok :)\n\n# \u6b21\u56de\n\u4eca\u56de\u306f\u3001Serverless Framework\u3092\u4f7f\u3063\u3066REST API\u3092\u4f5c\u6210\u3057\u305f\u3002\n\u6b21\u56de\u306f\u3001QraphQL\u306b\u5bfe\u5fdc\u3057\u3066\u307f\u308b\u3002\n\n# \u6700\u5f8c\u306b\n[\u30b5\u30a4\u30d0\u30fc\u30fb\u30d0\u30ba\u3067\u306f\u65b0\u3057\u3044\u3053\u3068\u306b\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3064\u3064\u30b5\u30fc\u30d3\u30b9\u3092\u3064\u304f\u3063\u3066\u3044\u304f\u30a8\u30f3\u30b8\u30cb\u30a2\u3092\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\u3002](https://www.wantedly.com/projects/57067)\n", "tags": ["serverless", "Node.js", "es6", "AWS", "webpack"]}