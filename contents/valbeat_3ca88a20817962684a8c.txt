{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nNCMB\u306eUnity SDK\u3067\u306f\u533f\u540d\u8a8d\u8a3c\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3063\u307d\u3044\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f1a\u54e1\u7ba1\u7406 (Unity) : \u533f\u540d\u8a8d\u8a3c | \u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend\n\u3068\u3044\u3063\u3066\u3082\u901a\u5e38\u306e\u8a8d\u8a3c\u3067\u3001UserID\u3092UUID\u306b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\nUnity\u5074\u3067\u751f\u6210\u3057\u305fGUID\u3092\u4f5c\u6210\u3057\u3001playerPrefs\u306b\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u3067UUID\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u5fc5\u8981\u306a\u3044\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u5171\u901a\u306e\u3082\u306e\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u901a\u5e38\u306e\u4f1a\u54e1\u767b\u9332\u30fb\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u306f\u3053\u3061\u3089\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb (Unity) : \u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\u3092\u4f5c\u308b | \u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend\n\nNCMB\u306e\u5c0e\u5165\nNCMB\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u306f\u3001\u516c\u5f0f\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3 (Unity) : \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8 | \u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend\n\nUUID\u306e\u7ba1\u7406\n\u4ee5\u524d\u4f5c\u6210\u3057\u305fSingletonMonoBehaviour\u3092\u7d99\u627f\u3057\u3066\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nMonoBehaviour\u3092\u7d99\u627f\u3057\u305f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u5b9f\u88c5 - Qiita\n\nusing UnityEngine;\nusing System;\nusing System.Collections;\n\npublic class UUIDManager : SingletonMonoBehaviour<UUIDManager> {\n    Guid guid;\n    [SerializeField]\n    string _uuid = \"\";\n    public string uuid {\n        get {\n            if ( _uuid == \"\" && HasUUID() ) {\n                Load();\n            }\n            return _uuid;\n        }\n        private set {\n            _uuid = value;\n        }\n    }\n\n    void Start () {\n        if ( !HasUUID() ) {\n            Create();\n            Save();\n        } else if (uuid == \"\")  {\n            Load();\n        }\n    }\n\n    public void Create() {\n        guid = Guid.NewGuid();\n        uuid = guid.ToString();\n    }\n\n    public void Save() {\n        PlayerPrefs.SetString(\"uuid\",uuid);\n        PlayerPrefs.Save();\n        Debug.Log(\"uuid Save\");\n    }\n\n    public void Load() {\n        uuid = PlayerPrefs.GetString(\"uuid\");\n        Debug.Log(\"uuid Load\");\n    }\n\n    public void Delete() {\n        PlayerPrefs.DeleteKey(\"uuid\");\n    }\n\n    public bool HasUUID() {\n        if (PlayerPrefs.GetString(\"uuid\").Length > 0) \n            return true;\n        return false;\n    }\n\n}\n\n\nmobile backend\u306e\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\n\u3053\u3061\u3089\u3082\u4ee5\u524d\u4f5c\u6210\u3057\u305fSingletonMonoBehaviour\u3092\u7d99\u627f\u3057\u3066\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nMonoBehaviour\u3092\u7d99\u627f\u3057\u305f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u5b9f\u88c5 - Qiita\n\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing NCMB;\n\npublic class UserAuth : SingletonMonoBehaviour<UserAuth> {\n    // \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u9069\u5f53\u306b\u8a2d\u5b9a\n    static string PASSWORD = \"zwDyWpnKZx74xdayyhs34s\"; \n\n    public void AnonymousLogin() {\n        string id = UUIDManager.Instance.uuid;\n        string pw = PASSWORD;\n        NCMBUser.LogInAsync (id, pw, (NCMBException e) => {\n            if( e == null ){\n                Debug.Log(\"anonymous login\");\n            } else if (e.ErrorCode == NCMBException.INCORRECT_PASSWORD) {\n                // \u30e6\u30fc\u30b6\u30fc\u304cDB\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u767b\u9332\u3059\u308b\n                AnonymousSignup();\n            }\n        });\n    }\n\n    public void AnonymousSignup() {\n        NCMBUser user = new NCMBUser();\n        user.UserName = UUIDManager.Instance.uuid;\n        user.Password = PASSWORD;\n        NCMBACL acl = new NCMBACL();\n        acl.SetWriteAccess(\"*\",true);\n        acl.SetReadAccess(\"*\",true);\n        user.ACL = acl;\n        user.SignUpAsync((NCMBException e) => { \n            if( e == null ){\n                Debug.Log(\"anonymous signup\");\n            }\n        });\n    }\n\n    public void Logout() {\n        NCMBUser.LogOutAsync ( (NCMBException e) => {\n            if( e == null ){\n                Debug.Log(\"logout\");\n            }\n        });\n    }\n}\n\n\n\u4f7f\u7528\u4f8b\n\u8a8d\u8a3c\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u30b7\u30fc\u30f3\u306b\u7a7a\u306eGameObject\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u307e\u3059\u3002\n\nusing UnityEngine;\nusing System.Collections;\n\npublic class LoginManager : MonoBehaviour {\n    public void Start () {\n        // \u8d77\u52d5\u6642\u306b\u533f\u540d\u30ed\u30b0\u30a4\u30f3\n        UserAuth.Instance.AnonymousLogin();\n    }\n    void OnApplicationQuit() {\n        // \u30a2\u30d7\u30ea\u7d42\u4e86\u6642\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\n        UserAuth.Instance.Logout();\n    }\n}\n\n#\u6982\u8981\nNCMB\u306eUnity SDK\u3067\u306f\u533f\u540d\u8a8d\u8a3c\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3063\u307d\u3044\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n[\u4f1a\u54e1\u7ba1\u7406 (Unity) : \u533f\u540d\u8a8d\u8a3c | \u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend](http://mb.cloud.nifty.com/doc/current/user/authorize_anonymous_unity.html#/Unity/)\n\n\u3068\u3044\u3063\u3066\u3082\u901a\u5e38\u306e\u8a8d\u8a3c\u3067\u3001UserID\u3092UUID\u306b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\nUnity\u5074\u3067\u751f\u6210\u3057\u305fGUID\u3092\u4f5c\u6210\u3057\u3001playerPrefs\u306b\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u3067UUID\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u5fc5\u8981\u306a\u3044\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u5171\u901a\u306e\u3082\u306e\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u901a\u5e38\u306e\u4f1a\u54e1\u767b\u9332\u30fb\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u306f\u3053\u3061\u3089\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n[\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb (Unity) : \u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\u3092\u4f5c\u308b | \u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend](http://mb.cloud.nifty.com/doc/current/tutorial/unity_login.html)\n\n\n#NCMB\u306e\u5c0e\u5165\nNCMB\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u306f\u3001\u516c\u5f0f\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n[\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3 (Unity) : \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8 | \u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend](http://mb.cloud.nifty.com/doc/current/introduction/quickstart_unity.html)\n\n#UUID\u306e\u7ba1\u7406\n\u4ee5\u524d\u4f5c\u6210\u3057\u305fSingletonMonoBehaviour\u3092\u7d99\u627f\u3057\u3066\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n[MonoBehaviour\u3092\u7d99\u627f\u3057\u305f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u5b9f\u88c5 - Qiita](http://qiita.com/kajitack/items/4b0175755b0cc47d4f6e)\n\n```csharp\n\nusing UnityEngine;\nusing System;\nusing System.Collections;\n\npublic class UUIDManager : SingletonMonoBehaviour<UUIDManager> {\n\tGuid guid;\n\t[SerializeField]\n\tstring _uuid = \"\";\n\tpublic string uuid {\n\t\tget {\n\t\t\tif ( _uuid == \"\" && HasUUID() ) {\n\t\t\t\tLoad();\n\t\t\t}\n\t\t\treturn _uuid;\n\t\t}\n\t\tprivate set {\n\t\t\t_uuid = value;\n\t\t}\n\t}\n\n\tvoid Start () {\n\t\tif ( !HasUUID() ) {\n\t\t\tCreate();\n\t\t\tSave();\n\t\t} else if (uuid == \"\")  {\n\t\t\tLoad();\n\t\t}\n\t}\n\n\tpublic void Create() {\n\t\tguid = Guid.NewGuid();\n\t\tuuid = guid.ToString();\n\t}\n\n\tpublic void Save() {\n\t\tPlayerPrefs.SetString(\"uuid\",uuid);\n\t\tPlayerPrefs.Save();\n\t\tDebug.Log(\"uuid Save\");\n\t}\n\n\tpublic void Load() {\n\t\tuuid = PlayerPrefs.GetString(\"uuid\");\n\t\tDebug.Log(\"uuid Load\");\n\t}\n\n\tpublic void Delete() {\n\t\tPlayerPrefs.DeleteKey(\"uuid\");\n\t}\n\n\tpublic bool HasUUID() {\n\t\tif (PlayerPrefs.GetString(\"uuid\").Length > 0) \n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n}\n```\n\n#mobile backend\u306e\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\n\n\u3053\u3061\u3089\u3082\u4ee5\u524d\u4f5c\u6210\u3057\u305fSingletonMonoBehaviour\u3092\u7d99\u627f\u3057\u3066\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n[MonoBehaviour\u3092\u7d99\u627f\u3057\u305f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u5b9f\u88c5 - Qiita](http://qiita.com/kajitack/items/4b0175755b0cc47d4f6e)\n\n```csharp\n\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing NCMB;\n\npublic class UserAuth : SingletonMonoBehaviour<UserAuth> {\n\t// \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u9069\u5f53\u306b\u8a2d\u5b9a\n\tstatic string PASSWORD = \"zwDyWpnKZx74xdayyhs34s\"; \n\t\n\tpublic void AnonymousLogin() {\n\t\tstring id = UUIDManager.Instance.uuid;\n\t\tstring pw = PASSWORD;\n\t\tNCMBUser.LogInAsync (id, pw, (NCMBException e) => {\n\t\t\tif( e == null ){\n\t\t\t\tDebug.Log(\"anonymous login\");\n\t\t\t} else if (e.ErrorCode == NCMBException.INCORRECT_PASSWORD) {\n\t\t\t\t// \u30e6\u30fc\u30b6\u30fc\u304cDB\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u767b\u9332\u3059\u308b\n\t\t\t\tAnonymousSignup();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic void AnonymousSignup() {\n\t\tNCMBUser user = new NCMBUser();\n\t\tuser.UserName = UUIDManager.Instance.uuid;\n\t\tuser.Password = PASSWORD;\n\t\tNCMBACL\tacl = new NCMBACL();\n\t\tacl.SetWriteAccess(\"*\",true);\n\t\tacl.SetReadAccess(\"*\",true);\n\t\tuser.ACL = acl;\n\t\tuser.SignUpAsync((NCMBException e) => { \n\t\t\tif( e == null ){\n\t\t\t\tDebug.Log(\"anonymous signup\");\n\t\t\t}\n\t\t});\n\t}\n\t\n\tpublic void Logout() {\n\t\tNCMBUser.LogOutAsync ( (NCMBException e) => {\n\t\t\tif( e == null ){\n\t\t\t\tDebug.Log(\"logout\");\n\t\t\t}\n\t\t});\n\t}\n}\n```\n\n# \u4f7f\u7528\u4f8b\n\u8a8d\u8a3c\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u30b7\u30fc\u30f3\u306b\u7a7a\u306eGameObject\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u307e\u3059\u3002\n\n```csharp\n\nusing UnityEngine;\nusing System.Collections;\n\npublic class LoginManager : MonoBehaviour {\n\tpublic void Start () {\n\t\t// \u8d77\u52d5\u6642\u306b\u533f\u540d\u30ed\u30b0\u30a4\u30f3\n\t\tUserAuth.Instance.AnonymousLogin();\n\t}\n\tvoid OnApplicationQuit() {\n\t\t// \u30a2\u30d7\u30ea\u7d42\u4e86\u6642\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\n        UserAuth.Instance.Logout();\n    }\n}\n```\n", "tags": ["Unity", "NCMB", "mBaas"]}