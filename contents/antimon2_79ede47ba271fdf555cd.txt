{"context": "\n\n\u524d\u7f6e\u304d\uff1a\u30c8\u30d4\u30c3\u30af\n\nJulia \u306e reinterpret() \u95a2\u6570\u306e\u7d39\u4ecb\n\nreinterpret() \u3092\u5229\u7528\u3057\u305f\u69cb\u9020\u4f53\uff08immutable \u306a Composite Type\uff09\u306e\u521d\u671f\u5316\n\nreinterpret() \u306e\u6ce8\u610f\u70b9\n\u30102016/07/14 \u7de8\u96c6\u3011v0.5.0-dev \u542b\u3080\u6700\u65b0\u306e\u60c5\u5831\u306b\u66f4\u65b0\n\n\nJulia \u306e reinterpret() \u95a2\u6570\nJulia \u306b\u306f reinterpret() \u3068\u3044\u3046\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c81\u306b\u3088\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u6a5f\u80fd\uff1a\n\nChange the type-interpretation of a block of memory.\n\n\u3064\u307e\u308a\u3001\u30e1\u30e2\u30ea\u4e0a\u306b\u4e26\u3093\u3060\u30d0\u30a4\u30c8\u5217\u3092\u5225\u306e\u578b\u306b\u518d\u89e3\u91c8\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3002\n\u4e3b\u306a\u4f7f\u3044\u65b9\u306f\u30012\u901a\u308a2\u3002\n\n\u540c\u3058\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u306e\u578b\u3069\u3046\u3057\u3092\u4e92\u3044\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3059\u308b\u3002\n\u914d\u5217\u3092\u5225\u306e\u578b\u306e\u914d\u5217\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3059\u308b\u3002\n\n\u4ee5\u4e0b\u3001\u7c21\u5358\u306a\u4f8b\u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059\u3002\u7279\u306b\u65ad\u308a\u304c\u7121\u3044\u9650\u308a\u3001Julia v0.3.x / v0.4.x / v0.5.0 \u3044\u305a\u308c\u3067\u3082\u52d5\u4f5c\u3059\u308b\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\uff08\uff1d\u3059\u3079\u3066\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\uff09\u3002\n\n1. \u540c\u3058\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u306e\u578b\u3069\u3046\u3057\u3092\u4e92\u3044\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3059\u308b\u3002\n\u307e\u305a\u306f\u898b\u3066\u3044\u305f\u3060\u3044\u305f\u65b9\u304c\u65e9\u3044\u3068\u601d\u3046\u306e\u3067\u2193\u3002\n\nisometric_types.jl\ni = convert(Int64, 1) # \u578b\u304c Int64 \u3067\u3042\u308b\u3053\u3068\u3092\u660e\u793a\u3059\u308b\u305f\u3081\u306b\u308f\u3056\u3068\u3053\u3093\u306a\u66f8\u304d\u65b9\u3057\u3066\u307f\u308b\nreinterpret(Float64, i)\n# => 5.0e-324\nrmax = realmax(Float64)\n# => 1.7976931348623157e308\uff08\u500d\u7cbe\u5ea6\u5b9f\u6570\u3067\u8868\u73fe\u3067\u304d\u308b\u6700\u5927\u306e\u6709\u9650\u5024\uff09\nunsigned(reinterpret(Int64, rmax))\n# => 0x7fefffffffffffff\uff08\u2191\u306e\u30d3\u30c3\u30c8\u8868\u73fe\u309216\u9032\u657016\u6841\u3067\u8868\u73fe\uff09\nreinterpret(Float32, '\u3042')\n# => 1.7312f-41\uff08Char \u306f Julia \u3067\u306f 4\u30d0\u30a4\u30c8\uff0832\u30d3\u30c3\u30c8\uff09\uff09\nreinterpret(Int8, true)\n# => 1\uff08Bool \u306f 1\u30d0\u30a4\u30c8\uff08\u305f\u3060\u3057\u6700\u4e0b\u4f4d\u30d3\u30c3\u30c8\u306e\u307f\u4f7f\u7528\uff09\uff09\n\n\n\u7c21\u5358\u306b\u8aac\u660e\u3057\u306a\u304a\u3059\u3068\u3001\u300c\u7b2c2\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\uff08\u6570\u5024\uff09\u3092\u3001\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u304c\u540c\u3058\u5225\u306e\u578b\u306e\u5024\u3068\u3057\u3066\u518d\u89e3\u91c8\u300d\u3002\n\u3082\u3046\u5c11\u3057\u8a73\u3057\u304f\u8a00\u3046\u3068\u3001\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3067\u304d\u308b\u5143\u306e\u578b\u3068\u5148\u306e\u578b\u306f\u3001\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u304c\u540c\u3058 Bits Type3 \u3069\u3046\u3057\u3001\u3067\u3059\u3002\n\u5143\u3068\u5148\u306e\u578b\u306e\u30b5\u30a4\u30ba\uff08sizeof() \u95a2\u6570\u3067\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\uff09\u304c\u7570\u306a\u308b\u5834\u5408\uff08\u4f8b\uff1areinterpret(Float32, convert(Int64, 1))\uff09\u3001\"ERROR: box: argument is of incorrect size\"\uff08v0.4.x \u307e\u3067\uff09\u307e\u305f\u306f \"ERROR: reinterpret: argument size does not match size of target type\"\uff08v0.5.0-dev\uff09 \u3068\u3044\u3046\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u30594\u3002\n\u307e\u305f\u305d\u3082\u305d\u3082 Bits Type \u3067\u306a\u3044\u5834\u5408\uff08\u4f8b\uff1areinterpret(Int32, \"\u3042\")\uff09\u3001\"ERROR: auto_unbox: unable to determine argument type\"\uff08v0.4.x \u307e\u3067\uff09 \u307e\u305f\u306f \"ERROR: reinterpret: expected bitstype value for second argument\"\uff08v0.5.0-dev\uff09\u3068\u3044\u3046\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u30595\u3002\n\n2. \u914d\u5217\u3092\u5225\u306e\u578b\u306e\u914d\u5217\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3059\u308b\u3002\n\u3053\u3061\u3089\u3082\u307e\u305a\u306f\u2193\u4f8b\u304b\u3089\uff1a\n\narray_reinterpret_simple.jl\n# \u4f8b1\uff1a\u540c\u3058\u30b5\u30a4\u30ba\u306e\u578b\u3069\u3046\u3057\u306e\uff08\u4e00\u62ec\uff09\u5909\u63db\nint64s = Int64[1, 2, 3, 4, 5]\n# typeof(int64s) == Array{Int64, 1}\nfs = reinterpret(Float64, int64s)\n# => Float64[5.0e-324, 1.0e-323, 1.5e-323, 2.0e-323, 2.5e-323]\n# \u4f8b2\uff1a\u5927\u304d\u3044\u30b5\u30a4\u30ba\u2192\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u306e\u578b\u3078\u306e\u5909\u63db\n# \u2191\u306eint64s\u3092\u305d\u306e\u307e\u307e\u5229\u7528\nreinterpret(Int32, int64s)\n# => Int32[1, 0, 2, 0, 3, 0, 4, 0, 5, 0]\n# \u4f8b3\uff1a\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u2192\u5927\u304d\u3044\u30b5\u30a4\u30ba\u306e\u578b\u3078\u306e\u5909\u63db\nint32s = Int32[1, 2, 3, 4, 5]\nreinterpret(Int64, int32s)\n# => Int64[8589934593, 17179869187]\nreinterpret(UInt64, int32s) # Julia v0.3.x \u306e\u5834\u5408\u306f `UInt64` \u2192 `Uint64` \n# => UInt64[0x0000000200000001, 0x0000000400000003]\n\n\n\u5c11\u3057\u89e3\u8aac\uff1a\n\n\u4f8b1\uff1a\u3042\u308b\u578b\u306e\u914d\u5217\u304b\u3089\u540c\u3058\u30b5\u30a4\u30ba\u306e\u5225\u306e\u578b\u306e\u914d\u5217\u3078\u306e\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3002\u30d1\u30bf\u30fc\u30f31\u306e\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3092\u4e00\u62ec\u3067\u884c\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3002\u3053\u308c\u3082\u305d\u3093\u306a\u306b\u96e3\u3057\u304f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4f8b2\uff1a\u5927\u304d\u3044\u30b5\u30a4\u30ba\u2192\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u306e\u578b\u3078\u306e\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3002\u3053\u306e\u5834\u5408\u3001Int64\u304c\u64c1\u3059\u308b 8Bytes \u3092\u3001\u4e0b\u4f4d\u30d0\u30a4\u30c8\u304b\u30896 4Bytes \u305a\u3064\u306b\u5206\u3051\u3066Int32\u3068\u3057\u3066\u518d\u89e3\u91c8\u3057\u3066\u3001\u518d\u3073\u914d\u5217\u3068\u3057\u3066\u518d\u69cb\u7bc9\uff08\u518d\u89e3\u91c8\u5f8c\u306e\u578b\u306fArray{Int32, 1}\uff09\u3001\u3068\u3044\u3046\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a Int64 \u306e 1\uff08==0x0000000000000001\uff09\u3092\u534a\u5206\u306b\u5272\u3063\u3066\u4e0b\u4f4d\u304b\u3089 1, 0\uff08==0x00000001, 0x00000000\uff09\u3001\u3068\u3044\u3046\u308f\u3051\u3002\n\u4f8b3\uff1a\u2191\u306e\u9006\u3002Int32\u306e1, 2\uff08==0x00000001, 0x00000002\uff09\u3092\u5148\u306e\u5024\u304c\u4e0b\u4f4d\u306b\u306a\u308b\u3088\u3046\u306b\u7e4b\u3052\u3066 8589934593\uff08==0x0000000200000001\uff09\u3001\u3068\u3044\u3046\u3053\u3068\u3002\n\u306a\u304a\u3001\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u304b\u3089\u5927\u304d\u3044\u30b5\u30a4\u30ba\u3078\u306e\u5909\u63db\u306e\u5834\u5408\u3001\u306f\u307f\u51fa\u3057\u305f\u5024\uff08\u3053\u306e\u5834\u5408\u30015\u756a\u76ee\u306e\u8981\u7d205\uff09\u306f\u5207\u308a\u6368\u3066\u3089\u308c\u307e\u3059\u30020\u3092\u88dc\u5b8c\u3057\u3066\u89e3\u91c8\u3001\u3068\u3044\u3046\u3088\u3046\u306a\u3053\u3068\u306f\u3057\u307e\u305b\u3093\u3002\n\n\u3055\u3089\u306b\u3002\n\u914d\u5217\u306e\u5909\u63db\u306e\u5834\u5408\u3001\u8981\u7d20\u306e\u578b\u306f Bits Type \u3067\u3042\u308b\u5fc5\u8981\u306f\u7121\u304f\u3001\"Plain Data\" Type\uff08\uff1disbits()7\u304c true \u3092\u8fd4\u3059\u578b\uff09\u306a\u3089OK\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u8ffd\u52a0\u4f8b\u3067\u3059\u3002\n\narray_reinterpret_complex.jl\n# \u4f8b4\uff1a\u8907\u7d20\u6570\u578b\u306e\u5b9f\u6570\u90e8\u30fb\u865a\u6570\u90e8\u3078\u306e\u5206\u89e3\nc = 1.0 + 2.0im\n# typeof(c) # => Complex{Float64}\n# isbits(c) # => true\n# sizeof(c) # => 16\nre_im = reinterpret(Float64, [c])\n# => Float64[1.0, 2.0]\n# \u53c2\u8003\uff1areim(c) # => (1.0, 2.0)\n# \u4f8b5\uff1a\u2191\u306e\u9006\u3001\u3057\u304b\u3082Int64(UInt64)\u304b\u3089Int32\u306e\u8907\u7d20\u6570\u578b\u306e\u69cb\u7bc9\nreinterpret(Complex{Int32}, [0x0000000200000001])\n# => Complex{Int32}[1+2im]\n\n\n\u3053\u308c\u3089\u306e\u7b2c2\u5f15\u6570\u3001[/]\u3092\u5916\u3059\u3068 \"ERROR: reinterpret: expected bits type as first argument\" \u3068\u3044\u3046\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u7b2c2\u5f15\u6570\u304c\u914d\u5217\u306e\u5834\u5408\u306b\u3060\u3051\u8a31\u3055\u308c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u306a\u304a\u623b\u308a\u5024\u3082\u914d\u5217\u306a\u306e\u3067\u30011\u3064\u306e\u5024\u3092\u4ed6\u306e\u578b\u306e\u5024\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001reinterpret(\u301c)[1] \u306e\u3088\u3046\u306b\u3057\u3066\u623b\u308a\u5024\u304b\u3089\u5024\u3092\u53d6\u308a\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3042\u3068\u3001v0.4.0 \u4ee5\u964d\u306f\u3001Tuple \u3068\u306e\u76f8\u4e92\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3082OK\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u2193\u3055\u3089\u306b\u8ffd\u52a0\u4f8b\uff08v0.3.x \u3067\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\uff09\u3002\n\narray_reinterpret_tuple.jl\n# \u4f8b6\uff1atuple\u306e\u914d\u5217\u304b\u3089\u6570\u5024\u578b\u3078\u306e\u5909\u63db\nt = (Int32(1),Int32(2))\n# isbits(t) # => true (on Julia v0.4.0-dev)\n# sizeof(t) # => 8\nreinterpret(UInt64, [t])\n# => UInt64[0x0000000200000001]\n# \u4f8b7\uff1a\u6570\u5024\u306e\u914d\u5217\u304b\u3089tuple\uff08\u306e\u914d\u5217\uff09\u3078\u306e\u5909\u63db\nreinterpret(NTuple{2,Int32},[0x0000000200000001])\n# => Tuple{Int32, Int32}[(1, 2)]\n\n\n\nimmutable \u306a Composite Type\nJulia \u3067\u306f\u3001\u72ec\u81ea\u306b\u5b9a\u7fa9\u3057\u305f\u578b\u3082\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u305b\u3070\u3001\"Plain Data\" Type \u306b\u306a\u308a\u307e\u3059\uff08\uff1disbits() \u304c true \u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0989\uff1a\n\n\ntype \u3067\u306f\u306a\u304f immutable \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\uff08\uff1d\u5909\u66f4\u4e0d\u53ef\u80fd\u306a\u578b\u3067\u3042\u308b\uff09\u3002\n\u8981\u7d20\u304c\u5168\u3066 isbits(\u301c) == true \u3067\u3042\u308b\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u308c\u3082 reinterpret() \u306b\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\u914d\u5217\u5229\u7528\uff09\u3002\n\u5177\u4f53\u4f8b\u3092\u6319\u3052\u3066\u307f\u307e\u3059\u3002\n\ncomposite2value.jl\n# \u3042\u308b\u30c7\u30fc\u30bf\u69cb\u9020\nimmutable CQDate\n    j::Int32\n    y::Int16\n    m::Bool\n    leap::Bool\nend\nisbits(CQDate) # => true\nsizeof(CQDate) # => 8\n# \u2191\u306e\u3042\u308b\u30c7\u30fc\u30bf\nqt = CQDate(604491, 1655, true, false)\n# \u2191\u3092Int64\u306breinterpret\nqt_i = reinterpret(Int64, [qt])[1]\n# => 288583148190027\n# \u78ba\u8a8d\uff1a\n604491 | (1655<<32) | (1<<48) | (0<<56)\n# => 288583148190027\n# \u9006\u5909\u63db\u3082\u78ba\u8a8d\nreinterpret(CQDate, [288583148190027])[1]\n# => CQDate(604491,1655,true,false)\n\n\n\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u3001\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u4e00\u62ec\u3067 Julia \u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u5909\u63db\u3067\u304d\u307e\u305910\uff1a\n\nvalues2composite.jl\n# \u3042\u308b\u30c7\u30fc\u30bf\u69cb\u9020\nimmutable CQDate\n    j::Int32\n    y::Int16\n    m::Bool\n    leap::Bool\nend\n# \u2191\u306e\u5143\u30c7\u30fc\u30bf\uff08\u629c\u7c8b\uff09\nQT_DATA = Int64[281474976710656,30,59,89,118,72057594037928084,177,207]\n# \u2193\u30c7\u30fc\u30bf\u5909\u63db\nqt = reinterpret(CQDate, QT_DATA)\n# => 8-element Array{CQDate,1}:\n#     CQDate(0,0,true,false)\n#     CQDate(30,0,false,false)\n#     CQDate(59,0,false,false)\n#     CQDate(89,0,false,false)\n#     CQDate(118,0,false,false)\n#     CQDate(148,0,false,true)\n#     CQDate(177,0,false,false)\n#     CQDate(207,0,false,false)\n\n\n\u3053\u306e\u65b9\u6cd5\u306e\u5229\u70b9\u306f\u3001\uff08\u5143\u30c7\u30fc\u30bf\u306e\u30e1\u30e2\u30ea\u30d6\u30ed\u30c3\u30af\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u30b3\u30d4\u30fc\u3057\u306a\u3044\u306e\u3067\uff09\u30e1\u30e2\u30ea\u6d88\u8cbb\u304c\u6291\u3048\u3089\u308c\u3001\u304b\u3064\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u826f\u3044\u3053\u3068\u3002\u306a\u306e\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5185\u306b\u66f8\u3051\u308b\u30ec\u30d9\u30eb\u306e\u91cf\uff08\u6570\u4e07\u4ef6\u7a0b\u5ea6\u307e\u3067\uff09\u304f\u3089\u3044\u306a\u3089\uff08\u3042\u3068\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u554f\u984c610\u304c\u89e3\u6c7a\u3067\u304d\u3066\u3044\u308c\u3070\uff09\u304b\u306a\u308a\u6709\u52b9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u6ce8\u610f\u70b9\n\uff08\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u554f\u984c\u306e\u4ed6\u306b\uff09\u3053\u306e\u65b9\u6cd5\u306f\u3001\u4e00\u3064\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\nreinterpret() \u306f\u3042\u304f\u307e\u3067\u300c\u30e1\u30e2\u30ea\u30d6\u30ed\u30c3\u30af\u306e\u518d\u89e3\u91c8\u300d\u3067\u3042\u308a\u3001\u300c\u5024\u3092\u30b3\u30d4\u30fc\u3057\u3066\u5909\u63db\u300d\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3088\u3063\u3066\u305d\u306e\u30e1\u30e2\u30ea\u5185\u5bb9\u304c\u5909\u66f4\u3055\u308c\u308b\u3068\u3001\u5909\u63db\u5f8c\uff08\u518d\u89e3\u91c8\u5f8c\uff09\u306e\u5024\u3082\u5909\u308f\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff08\u540c\u3058\u30e1\u30e2\u30ea\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u306e\u3067\uff09\u3002\n\u5177\u4f53\u4f8b\u2193\uff1a\n\ndo_not_code.jl\n# \u3042\u308b\u30c7\u30fc\u30bf\u69cb\u9020\nimmutable CQDate\n    j::Int32\n    y::Int16\n    m::Bool\n    leap::Bool\nend\n# \u2191\u306e\u5143\u30c7\u30fc\u30bf\uff08\u629c\u7c8b\uff09\nQT_DATA = Int64[281474976710656,30,59,89,118,72057594037928084,177,207]\n# \u2193\u30c7\u30fc\u30bf\u5909\u63db\nqt = reinterpret(CQDate, QT_DATA)\n# \u78ba\u8a8d\nqt[8]\n# => CQDate(207,0,false,false)\nqt[8].leap\n# => false\n\n# \u6c5a\u67d3\nQT_DATA[8] |= 1<<56\n# \u518d\u78ba\u8a8d\nqt[8]\n# => CQDate(207,0,false,true)\nqt[8].leap\n# => true\n\n\n\u3064\u307e\u308a\u3001\u6700\u5f8c\u306e\u8981\u7d20\uff08leap\uff09\u304c false \u304b\u3089 true \u306b\u5909\u308f\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002immutable \u306b\u3082\u95a2\u308f\u3089\u305a\u8981\u7d20\u306e\u5024\u304c\u5909\u66f4\u3067\u304d\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3059\uff01\n\u3053\u308c\u306f\u300c\u77e5\u3063\u3066\u3066\u3082\u3084\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u300d\u3068\u3044\u3046\u6697\u9ed9\u306e\u53d6\u308a\u6c7a\u3081\u304c\u5fc5\u8981\u3067\u3059\u306d(^-^;\n\n\u53c2\u8003\n\n\nJulia Documentation\uff08v0.4\uff09 / \uff08\u6700\u65b0\u7248\uff09\n\n\n\n\n\n\nBase.reinterpret\uff08v0.4\uff09 / \uff08\u6700\u65b0\u7248\uff09 \u53c2\u7167\u00a0\u21a9\n\n\n\u5b9f\u969b\u306b\u306f\u3053\u306e2\u901a\u308a\u306b\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u52d5\u304d\u3092\u3059\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u8a71\u304c\u3084\u3084\u3053\u3057\u304f\u306a\u308b\u306e\u3067\u3053\u3053\u3067\u306f\u89e6\u308c\u307e\u305b\u3093\u3002\u00a0\u21a9\n\n\nBits Type\uff08v0.4\uff09 / \uff08\u6700\u65b0\u7248\uff09 \u53c2\u7167\u00a0\u21a9\n\n\n\u4f8b\u5916\u3068\u3057\u3066\u3001v0.4.x \u307e\u3067\u306f\u3001\uff0816/32/64/128Bits\u306e\uff09\u6574\u6570\u5024\u304b\u3089 Bool \u3078\u306e\u518d\u89e3\u91c8\uff08\u4f8b\uff1areinterpret(Bool, 1) # => true\uff09\u304c\u8a8d\u3081\u3089\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u7d50\u679c\u306f isodd(n) \u3068\u4e00\u81f4\u3057\u307e\u3059\u3002\u3053\u306e\u6319\u52d5\u306f 0.5.0-dev \u3067\u306f\u6539\u3081\u3089\u308c\u305f\u6a21\u69d8\u3067\u3059\u3002Int8/UInt8 \u4ee5\u5916\u306e\u6570\u5024\u3092\u518d\u89e3\u91c8\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001ERROR: reinterpret: argument size does not match size of target type \u3068\u3044\u3046\u975e\u5e38\u306b\u59a5\u5f53\u306a\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u00a0\u21a9\n\n\nJulia v0.5 \u3067\u3001\u7dcf\u3058\u3066\u30a8\u30e9\u30fc\u304c refinement \u3055\u308c\u3066\u59a5\u5f53\u304b\u3064\u5206\u304b\u308a\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u5370\u8c61\u3067\u3059\u306d(^-^)\u00a0\u21a9\n\n\n\u3053\u308c\u306f Julia \u306e\u5185\u90e8\u30e1\u30e2\u30ea\u306e\u30d0\u30a4\u30c8\u30aa\u30fc\u30c0\u30fc\u304c\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3060\u304b\u3089\u8d77\u304d\u3066\u3044\u308b\u3053\u3068\u306a\u306e\u3067\u3059\u304c\u3001Julia \u304c\u3068\u3044\u3046\u3088\u308a\u5b9f\u884c\u3057\u3066\u3044\u308b\u30de\u30b7\u30f3\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u304c\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3060\u304b\u3089\u3001\u306e\u3088\u3046\u306a\u6c17\u306f\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u30d3\u30c3\u30b0\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\uff08SPARC\u3068\u304bPowerPC\u3068\u304b\uff09\u3067 Julia \u304c\u52d5\u3044\u3066\u305f\u3089\u3082\u3057\u304b\u3057\u305f\u3089\u7d50\u679c\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff08\u60c5\u5831\u52df\u96c6\uff09\u3002\u00a0\u21a9\n\n\nBase.isbits\uff08v0.4\uff09 / \uff08\u6700\u65b0\u7248\uff09 \u53c2\u7167\u00a0\u21a9\n\n\n\u3053\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3068\u304d\u3001\u305d\u306e\u578b\u306f\u53c2\u7167\u578b\u3067\u306f\u306a\u304f\u6240\u8b02\u300c\u5024\u578b\u300d\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u6a21\u69d8\u3067\u3059\u3002 \u67d0\u4ed6\u8a00\u8a9e\u3067 class \u3067\u306f\u306a\u304f struct \u3067\u5b9a\u7fa9\u3057\u305f\u578b\u304c\u6697\u9ed9\u306b Value \u3092\u7d99\u627f\u3057\u305f\u578b\u306b\u306a\u308b\u306e\u3068\u4f3c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u304b\u305f\u3076\u3093\u5185\u90e8\u3067\u540c\u3058\u3053\u3068\u304c\u8d77\u304d\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\uff08\u672a\u78ba\u8a8d\uff09\u3002\u00a0\u21a9\n\n\n\u3061\u306a\u307f\u306b\u524d\u7bc0\u3067\u89e6\u308c\u305f Complex{T} \u578b\u306f\u3001\u3053\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b Composite Type \u306e\u4f8b\u3060\u3063\u305f\u308a\u3057\u307e\u3059\uff08T\u306b\u3042\u305f\u308b\u578b\u304c isbits(T)==true \u3092\u6e80\u305f\u3059\u3053\u3068\u304c\u5fc5\u8981\uff09\u3002\u00a0\u21a9\n\n\n6\u3067\u89e6\u308c\u305f\u901a\u308a\u3001Julia \u306e\u5185\u90e8\u30e1\u30e2\u30ea\u306e\u6271\u3044\u304c\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3067\u3042\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\u3082\u3057\u30d3\u30c3\u30b0\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3060\u3063\u305f\u3089\u671f\u5f85\u901a\u308a\u52d5\u4f5c\u3057\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff08\u60c5\u5831\u52df\u96c6\uff09\u3002\u00a0\u21a9\n\n\n\n## \u524d\u7f6e\u304d\uff1a\u30c8\u30d4\u30c3\u30af\n\n+ Julia \u306e `reinterpret()` \u95a2\u6570\u306e\u7d39\u4ecb\n+ `reinterpret()` \u3092\u5229\u7528\u3057\u305f\u69cb\u9020\u4f53\uff08immutable \u306a Composite Type\uff09\u306e\u521d\u671f\u5316\n+ `reinterpret()` \u306e\u6ce8\u610f\u70b9\n+ \u30102016/07/14 \u7de8\u96c6\u3011v0.5.0-dev \u542b\u3080\u6700\u65b0\u306e\u60c5\u5831\u306b\u66f4\u65b0\n\n## Julia \u306e `reinterpret()` \u95a2\u6570\n\nJulia \u306b\u306f `reinterpret()` \u3068\u3044\u3046\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8[^1]\u306b\u3088\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u6a5f\u80fd\uff1a\n\n> Change the type-interpretation of a block of memory.\n\n\u3064\u307e\u308a\u3001\u30e1\u30e2\u30ea\u4e0a\u306b\u4e26\u3093\u3060\u30d0\u30a4\u30c8\u5217\u3092\u5225\u306e\u578b\u306b\u518d\u89e3\u91c8\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3002\n\u4e3b\u306a\u4f7f\u3044\u65b9\u306f\u30012\u901a\u308a[^2]\u3002\n\n1. \u540c\u3058\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u306e\u578b\u3069\u3046\u3057\u3092\u4e92\u3044\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3059\u308b\u3002\n2. \u914d\u5217\u3092\u5225\u306e\u578b\u306e\u914d\u5217\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3059\u308b\u3002\n\n\u4ee5\u4e0b\u3001\u7c21\u5358\u306a\u4f8b\u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059\u3002\u7279\u306b\u65ad\u308a\u304c\u7121\u3044\u9650\u308a\u3001Julia v0.3.x / v0.4.x / v0.5.0 \u3044\u305a\u308c\u3067\u3082\u52d5\u4f5c\u3059\u308b\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\uff08\uff1d\u3059\u3079\u3066\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\uff09\u3002\n\n### 1. \u540c\u3058\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u306e\u578b\u3069\u3046\u3057\u3092\u4e92\u3044\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3059\u308b\u3002\n\n\u307e\u305a\u306f\u898b\u3066\u3044\u305f\u3060\u3044\u305f\u65b9\u304c\u65e9\u3044\u3068\u601d\u3046\u306e\u3067\u2193\u3002\n\n```jl:isometric_types.jl\ni = convert(Int64, 1) # \u578b\u304c Int64 \u3067\u3042\u308b\u3053\u3068\u3092\u660e\u793a\u3059\u308b\u305f\u3081\u306b\u308f\u3056\u3068\u3053\u3093\u306a\u66f8\u304d\u65b9\u3057\u3066\u307f\u308b\nreinterpret(Float64, i)\n# => 5.0e-324\nrmax = realmax(Float64)\n# => 1.7976931348623157e308\uff08\u500d\u7cbe\u5ea6\u5b9f\u6570\u3067\u8868\u73fe\u3067\u304d\u308b\u6700\u5927\u306e\u6709\u9650\u5024\uff09\nunsigned(reinterpret(Int64, rmax))\n# => 0x7fefffffffffffff\uff08\u2191\u306e\u30d3\u30c3\u30c8\u8868\u73fe\u309216\u9032\u657016\u6841\u3067\u8868\u73fe\uff09\nreinterpret(Float32, '\u3042')\n# => 1.7312f-41\uff08Char \u306f Julia \u3067\u306f 4\u30d0\u30a4\u30c8\uff0832\u30d3\u30c3\u30c8\uff09\uff09\nreinterpret(Int8, true)\n# => 1\uff08Bool \u306f 1\u30d0\u30a4\u30c8\uff08\u305f\u3060\u3057\u6700\u4e0b\u4f4d\u30d3\u30c3\u30c8\u306e\u307f\u4f7f\u7528\uff09\uff09\n```\n\n\u7c21\u5358\u306b\u8aac\u660e\u3057\u306a\u304a\u3059\u3068\u3001\u300c\u7b2c2\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\uff08\u6570\u5024\uff09\u3092\u3001\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u304c\u540c\u3058\u5225\u306e\u578b\u306e\u5024\u3068\u3057\u3066\u518d\u89e3\u91c8\u300d\u3002\n\n\u3082\u3046\u5c11\u3057\u8a73\u3057\u304f\u8a00\u3046\u3068\u3001\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3067\u304d\u308b\u5143\u306e\u578b\u3068\u5148\u306e\u578b\u306f\u3001\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u304c\u540c\u3058 Bits Type[^3] \u3069\u3046\u3057\u3001\u3067\u3059\u3002\n\u5143\u3068\u5148\u306e\u578b\u306e\u30b5\u30a4\u30ba\uff08`sizeof()` \u95a2\u6570\u3067\u30d0\u30a4\u30c8\u30b5\u30a4\u30ba\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\uff09\u304c\u7570\u306a\u308b\u5834\u5408\uff08\u4f8b\uff1a`reinterpret(Float32, convert(Int64, 1))`\uff09\u3001\"ERROR: box: argument is of incorrect size\"\uff08v0.4.x \u307e\u3067\uff09\u307e\u305f\u306f \"ERROR: reinterpret: argument size does not match size of target type\"\uff08v0.5.0-dev\uff09 \u3068\u3044\u3046\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059[^4]\u3002\n\u307e\u305f\u305d\u3082\u305d\u3082 Bits Type \u3067\u306a\u3044\u5834\u5408\uff08\u4f8b\uff1a`reinterpret(Int32, \"\u3042\")`\uff09\u3001\"ERROR: auto_unbox: unable to determine argument type\"\uff08v0.4.x \u307e\u3067\uff09 \u307e\u305f\u306f \"ERROR: reinterpret: expected bitstype value for second argument\"\uff08v0.5.0-dev\uff09\u3068\u3044\u3046\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059[^4a]\u3002\n\n### 2. \u914d\u5217\u3092\u5225\u306e\u578b\u306e\u914d\u5217\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3059\u308b\u3002\n\n\u3053\u3061\u3089\u3082\u307e\u305a\u306f\u2193\u4f8b\u304b\u3089\uff1a\n\n```jl:array_reinterpret_simple.jl\n# \u4f8b1\uff1a\u540c\u3058\u30b5\u30a4\u30ba\u306e\u578b\u3069\u3046\u3057\u306e\uff08\u4e00\u62ec\uff09\u5909\u63db\nint64s = Int64[1, 2, 3, 4, 5]\n# typeof(int64s) == Array{Int64, 1}\nfs = reinterpret(Float64, int64s)\n# => Float64[5.0e-324, 1.0e-323, 1.5e-323, 2.0e-323, 2.5e-323]\n# \u4f8b2\uff1a\u5927\u304d\u3044\u30b5\u30a4\u30ba\u2192\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u306e\u578b\u3078\u306e\u5909\u63db\n# \u2191\u306eint64s\u3092\u305d\u306e\u307e\u307e\u5229\u7528\nreinterpret(Int32, int64s)\n# => Int32[1, 0, 2, 0, 3, 0, 4, 0, 5, 0]\n# \u4f8b3\uff1a\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u2192\u5927\u304d\u3044\u30b5\u30a4\u30ba\u306e\u578b\u3078\u306e\u5909\u63db\nint32s = Int32[1, 2, 3, 4, 5]\nreinterpret(Int64, int32s)\n# => Int64[8589934593, 17179869187]\nreinterpret(UInt64, int32s) # Julia v0.3.x \u306e\u5834\u5408\u306f `UInt64` \u2192 `Uint64` \n# => UInt64[0x0000000200000001, 0x0000000400000003]\n```\n\n\u5c11\u3057\u89e3\u8aac\uff1a\n\n+ \u4f8b1\uff1a\u3042\u308b\u578b\u306e\u914d\u5217\u304b\u3089\u540c\u3058\u30b5\u30a4\u30ba\u306e\u5225\u306e\u578b\u306e\u914d\u5217\u3078\u306e\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3002\u30d1\u30bf\u30fc\u30f31\u306e\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3092\u4e00\u62ec\u3067\u884c\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3002\u3053\u308c\u3082\u305d\u3093\u306a\u306b\u96e3\u3057\u304f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n+ \u4f8b2\uff1a\u5927\u304d\u3044\u30b5\u30a4\u30ba\u2192\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u306e\u578b\u3078\u306e\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3002\u3053\u306e\u5834\u5408\u3001`Int64`\u304c\u64c1\u3059\u308b 8Bytes \u3092\u3001\u4e0b\u4f4d\u30d0\u30a4\u30c8\u304b\u3089[^5] 4Bytes \u305a\u3064\u306b\u5206\u3051\u3066`Int32`\u3068\u3057\u3066\u518d\u89e3\u91c8\u3057\u3066\u3001\u518d\u3073\u914d\u5217\u3068\u3057\u3066\u518d\u69cb\u7bc9\uff08\u518d\u89e3\u91c8\u5f8c\u306e\u578b\u306f`Array{Int32, 1}`\uff09\u3001\u3068\u3044\u3046\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002  \n\u3064\u307e\u308a `Int64` \u306e `1`\uff08==`0x0000000000000001`\uff09\u3092\u534a\u5206\u306b\u5272\u3063\u3066\u4e0b\u4f4d\u304b\u3089 `1, 0`\uff08==`0x00000001, 0x00000000`\uff09\u3001\u3068\u3044\u3046\u308f\u3051\u3002\n+ \u4f8b3\uff1a\u2191\u306e\u9006\u3002`Int32`\u306e`1, 2`\uff08==`0x00000001, 0x00000002`\uff09\u3092\u5148\u306e\u5024\u304c\u4e0b\u4f4d\u306b\u306a\u308b\u3088\u3046\u306b\u7e4b\u3052\u3066 `8589934593`\uff08==`0x0000000200000001`\uff09\u3001\u3068\u3044\u3046\u3053\u3068\u3002  \n\u306a\u304a\u3001\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u304b\u3089\u5927\u304d\u3044\u30b5\u30a4\u30ba\u3078\u306e\u5909\u63db\u306e\u5834\u5408\u3001\u306f\u307f\u51fa\u3057\u305f\u5024\uff08\u3053\u306e\u5834\u5408\u30015\u756a\u76ee\u306e\u8981\u7d20`5`\uff09\u306f\u5207\u308a\u6368\u3066\u3089\u308c\u307e\u3059\u3002`0`\u3092\u88dc\u5b8c\u3057\u3066\u89e3\u91c8\u3001\u3068\u3044\u3046\u3088\u3046\u306a\u3053\u3068\u306f\u3057\u307e\u305b\u3093\u3002\n\n\u3055\u3089\u306b\u3002\n\u914d\u5217\u306e\u5909\u63db\u306e\u5834\u5408\u3001\u8981\u7d20\u306e\u578b\u306f Bits Type \u3067\u3042\u308b\u5fc5\u8981\u306f\u7121\u304f\u3001\"Plain Data\" Type\uff08\uff1d`isbits()`[^6]\u304c `true` \u3092\u8fd4\u3059\u578b\uff09\u306a\u3089OK\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u8ffd\u52a0\u4f8b\u3067\u3059\u3002\n\n```jl:array_reinterpret_complex.jl\n# \u4f8b4\uff1a\u8907\u7d20\u6570\u578b\u306e\u5b9f\u6570\u90e8\u30fb\u865a\u6570\u90e8\u3078\u306e\u5206\u89e3\nc = 1.0 + 2.0im\n# typeof(c) # => Complex{Float64}\n# isbits(c) # => true\n# sizeof(c) # => 16\nre_im = reinterpret(Float64, [c])\n# => Float64[1.0, 2.0]\n# \u53c2\u8003\uff1areim(c) # => (1.0, 2.0)\n# \u4f8b5\uff1a\u2191\u306e\u9006\u3001\u3057\u304b\u3082Int64(UInt64)\u304b\u3089Int32\u306e\u8907\u7d20\u6570\u578b\u306e\u69cb\u7bc9\nreinterpret(Complex{Int32}, [0x0000000200000001])\n# => Complex{Int32}[1+2im]\n```\n\n\u3053\u308c\u3089\u306e\u7b2c2\u5f15\u6570\u3001`[`/`]`\u3092\u5916\u3059\u3068 \"ERROR: reinterpret: expected bits type as first argument\" \u3068\u3044\u3046\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u7b2c2\u5f15\u6570\u304c\u914d\u5217\u306e\u5834\u5408\u306b\u3060\u3051\u8a31\u3055\u308c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u306a\u304a\u623b\u308a\u5024\u3082\u914d\u5217\u306a\u306e\u3067\u30011\u3064\u306e\u5024\u3092\u4ed6\u306e\u578b\u306e\u5024\u306b\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001`reinterpret(\u301c)[1]` \u306e\u3088\u3046\u306b\u3057\u3066\u623b\u308a\u5024\u304b\u3089\u5024\u3092\u53d6\u308a\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3042\u3068\u3001v0.4.0 \u4ee5\u964d\u306f\u3001Tuple \u3068\u306e\u76f8\u4e92\u5909\u63db\uff08\u518d\u89e3\u91c8\uff09\u3082OK\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u2193\u3055\u3089\u306b\u8ffd\u52a0\u4f8b\uff08v0.3.x \u3067\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\uff09\u3002\n\n```jl:array_reinterpret_tuple.jl\n# \u4f8b6\uff1atuple\u306e\u914d\u5217\u304b\u3089\u6570\u5024\u578b\u3078\u306e\u5909\u63db\nt = (Int32(1),Int32(2))\n# isbits(t) # => true (on Julia v0.4.0-dev)\n# sizeof(t) # => 8\nreinterpret(UInt64, [t])\n# => UInt64[0x0000000200000001]\n# \u4f8b7\uff1a\u6570\u5024\u306e\u914d\u5217\u304b\u3089tuple\uff08\u306e\u914d\u5217\uff09\u3078\u306e\u5909\u63db\nreinterpret(NTuple{2,Int32},[0x0000000200000001])\n# => Tuple{Int32, Int32}[(1, 2)]\n```\n\n## immutable \u306a Composite Type\n\nJulia \u3067\u306f\u3001\u72ec\u81ea\u306b\u5b9a\u7fa9\u3057\u305f\u578b\u3082\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u305b\u3070\u3001\"Plain Data\" Type \u306b\u306a\u308a\u307e\u3059\uff08\uff1d`isbits()` \u304c `true` \u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff09[^7][^8]\uff1a\n\n+ `type` \u3067\u306f\u306a\u304f `immutable` \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\uff08\uff1d\u5909\u66f4\u4e0d\u53ef\u80fd\u306a\u578b\u3067\u3042\u308b\uff09\u3002\n+ \u8981\u7d20\u304c\u5168\u3066 `isbits(\u301c) == true` \u3067\u3042\u308b\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u308c\u3082 `reinterpret()` \u306b\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\u914d\u5217\u5229\u7528\uff09\u3002\n\u5177\u4f53\u4f8b\u3092\u6319\u3052\u3066\u307f\u307e\u3059\u3002\n\n```jl:composite2value.jl\n# \u3042\u308b\u30c7\u30fc\u30bf\u69cb\u9020\nimmutable CQDate\n    j::Int32\n    y::Int16\n    m::Bool\n    leap::Bool\nend\nisbits(CQDate) # => true\nsizeof(CQDate) # => 8\n# \u2191\u306e\u3042\u308b\u30c7\u30fc\u30bf\nqt = CQDate(604491, 1655, true, false)\n# \u2191\u3092Int64\u306breinterpret\nqt_i = reinterpret(Int64, [qt])[1]\n# => 288583148190027\n# \u78ba\u8a8d\uff1a\n604491 | (1655<<32) | (1<<48) | (0<<56)\n# => 288583148190027\n# \u9006\u5909\u63db\u3082\u78ba\u8a8d\nreinterpret(CQDate, [288583148190027])[1]\n# => CQDate(604491,1655,true,false)\n```\n\n\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u3001\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u4e00\u62ec\u3067 Julia \u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u5909\u63db\u3067\u304d\u307e\u3059[^9]\uff1a\n\n```jl:values2composite.jl\n# \u3042\u308b\u30c7\u30fc\u30bf\u69cb\u9020\nimmutable CQDate\n    j::Int32\n    y::Int16\n    m::Bool\n    leap::Bool\nend\n# \u2191\u306e\u5143\u30c7\u30fc\u30bf\uff08\u629c\u7c8b\uff09\nQT_DATA = Int64[281474976710656,30,59,89,118,72057594037928084,177,207]\n# \u2193\u30c7\u30fc\u30bf\u5909\u63db\nqt = reinterpret(CQDate, QT_DATA)\n# => 8-element Array{CQDate,1}:\n#     CQDate(0,0,true,false)\n#     CQDate(30,0,false,false)\n#     CQDate(59,0,false,false)\n#     CQDate(89,0,false,false)\n#     CQDate(118,0,false,false)\n#     CQDate(148,0,false,true)\n#     CQDate(177,0,false,false)\n#     CQDate(207,0,false,false)\n```\n\n\u3053\u306e\u65b9\u6cd5\u306e\u5229\u70b9\u306f\u3001\uff08\u5143\u30c7\u30fc\u30bf\u306e\u30e1\u30e2\u30ea\u30d6\u30ed\u30c3\u30af\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u30b3\u30d4\u30fc\u3057\u306a\u3044\u306e\u3067\uff09\u30e1\u30e2\u30ea\u6d88\u8cbb\u304c\u6291\u3048\u3089\u308c\u3001\u304b\u3064\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u826f\u3044\u3053\u3068\u3002\u306a\u306e\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5185\u306b\u66f8\u3051\u308b\u30ec\u30d9\u30eb\u306e\u91cf\uff08\u6570\u4e07\u4ef6\u7a0b\u5ea6\u307e\u3067\uff09\u304f\u3089\u3044\u306a\u3089\uff08\u3042\u3068\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u554f\u984c[^5][^9]\u304c\u89e3\u6c7a\u3067\u304d\u3066\u3044\u308c\u3070\uff09\u304b\u306a\u308a\u6709\u52b9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n### \u6ce8\u610f\u70b9\n\n\uff08\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u554f\u984c\u306e\u4ed6\u306b\uff09\u3053\u306e\u65b9\u6cd5\u306f\u3001\u4e00\u3064\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\n`reinterpret()` \u306f\u3042\u304f\u307e\u3067\u300c\u30e1\u30e2\u30ea\u30d6\u30ed\u30c3\u30af\u306e\u518d\u89e3\u91c8\u300d\u3067\u3042\u308a\u3001\u300c\u5024\u3092\u30b3\u30d4\u30fc\u3057\u3066\u5909\u63db\u300d\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3088\u3063\u3066\u305d\u306e\u30e1\u30e2\u30ea\u5185\u5bb9\u304c\u5909\u66f4\u3055\u308c\u308b\u3068\u3001\u5909\u63db\u5f8c\uff08\u518d\u89e3\u91c8\u5f8c\uff09\u306e\u5024\u3082\u5909\u308f\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff08\u540c\u3058\u30e1\u30e2\u30ea\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u306e\u3067\uff09\u3002\n\n\u5177\u4f53\u4f8b\u2193\uff1a\n\n```jl:do_not_code.jl\n# \u3042\u308b\u30c7\u30fc\u30bf\u69cb\u9020\nimmutable CQDate\n    j::Int32\n    y::Int16\n    m::Bool\n    leap::Bool\nend\n# \u2191\u306e\u5143\u30c7\u30fc\u30bf\uff08\u629c\u7c8b\uff09\nQT_DATA = Int64[281474976710656,30,59,89,118,72057594037928084,177,207]\n# \u2193\u30c7\u30fc\u30bf\u5909\u63db\nqt = reinterpret(CQDate, QT_DATA)\n# \u78ba\u8a8d\nqt[8]\n# => CQDate(207,0,false,false)\nqt[8].leap\n# => false\n\n# \u6c5a\u67d3\nQT_DATA[8] |= 1<<56\n# \u518d\u78ba\u8a8d\nqt[8]\n# => CQDate(207,0,false,true)\nqt[8].leap\n# => true\n```\n\n\u3064\u307e\u308a\u3001\u6700\u5f8c\u306e\u8981\u7d20\uff08`leap`\uff09\u304c `false` \u304b\u3089 `true` \u306b\u5909\u308f\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002immutable \u306b\u3082\u95a2\u308f\u3089\u305a\u8981\u7d20\u306e\u5024\u304c\u5909\u66f4\u3067\u304d\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3059\uff01\n\n\u3053\u308c\u306f\u300c\u77e5\u3063\u3066\u3066\u3082\u3084\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u300d\u3068\u3044\u3046\u6697\u9ed9\u306e\u53d6\u308a\u6c7a\u3081\u304c\u5fc5\u8981\u3067\u3059\u306d(^-^;\n\n## \u53c2\u8003\n+ [Julia Documentation\uff08v0.4\uff09](http://docs.julialang.org/en/release-0.4/ \"Julia Documentation &mdash; Julia Language 0.4.7-pre documentation\") / [\uff08\u6700\u65b0\u7248\uff09](http://docs.julialang.org/en/latest/ \"Julia Documentation &mdash; Julia Language 0.5.0-dev documentation\")\n\n[^1]: [Base.reinterpret\uff08v0.4\uff09](http://docs.julialang.org/en/release-0.4/stdlib/arrays/#Base.reinterpret) / [\uff08\u6700\u65b0\u7248\uff09](http://docs.julialang.org/en/latest/stdlib/arrays/#Base.reinterpret) \u53c2\u7167\n[^2]: \u5b9f\u969b\u306b\u306f\u3053\u306e2\u901a\u308a\u306b\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u52d5\u304d\u3092\u3059\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u8a71\u304c\u3084\u3084\u3053\u3057\u304f\u306a\u308b\u306e\u3067\u3053\u3053\u3067\u306f\u89e6\u308c\u307e\u305b\u3093\u3002\n[^3]: [Bits Type\uff08v0.4\uff09](http://docs.julialang.org/en/release-0.4/manual/types/#bits-types) / [\uff08\u6700\u65b0\u7248\uff09](http://docs.julialang.org/en/latest/manual/types/#bits-types) \u53c2\u7167\n[^4]: \u4f8b\u5916\u3068\u3057\u3066\u3001v0.4.x \u307e\u3067\u306f\u3001\uff0816/32/64/128Bits\u306e\uff09\u6574\u6570\u5024\u304b\u3089 Bool \u3078\u306e\u518d\u89e3\u91c8\uff08\u4f8b\uff1a`reinterpret(Bool, 1) # => true`\uff09\u304c\u8a8d\u3081\u3089\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u7d50\u679c\u306f `isodd(n)` \u3068\u4e00\u81f4\u3057\u307e\u3059\u3002\u3053\u306e\u6319\u52d5\u306f 0.5.0-dev \u3067\u306f\u6539\u3081\u3089\u308c\u305f\u6a21\u69d8\u3067\u3059\u3002`Int8`/`UInt8` \u4ee5\u5916\u306e\u6570\u5024\u3092\u518d\u89e3\u91c8\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001`ERROR: reinterpret: argument size does not match size of target type` \u3068\u3044\u3046\u975e\u5e38\u306b\u59a5\u5f53\u306a\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n[^4a]: Julia v0.5 \u3067\u3001\u7dcf\u3058\u3066\u30a8\u30e9\u30fc\u304c refinement \u3055\u308c\u3066\u59a5\u5f53\u304b\u3064\u5206\u304b\u308a\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u5370\u8c61\u3067\u3059\u306d(^-^)\n[^5]: \u3053\u308c\u306f Julia \u306e\u5185\u90e8\u30e1\u30e2\u30ea\u306e\u30d0\u30a4\u30c8\u30aa\u30fc\u30c0\u30fc\u304c\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3060\u304b\u3089\u8d77\u304d\u3066\u3044\u308b\u3053\u3068\u306a\u306e\u3067\u3059\u304c\u3001Julia \u304c\u3068\u3044\u3046\u3088\u308a\u5b9f\u884c\u3057\u3066\u3044\u308b\u30de\u30b7\u30f3\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u304c\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3060\u304b\u3089\u3001\u306e\u3088\u3046\u306a\u6c17\u306f\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u30d3\u30c3\u30b0\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\uff08SPARC\u3068\u304bPowerPC\u3068\u304b\uff09\u3067 Julia \u304c\u52d5\u3044\u3066\u305f\u3089\u3082\u3057\u304b\u3057\u305f\u3089\u7d50\u679c\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff08\u60c5\u5831\u52df\u96c6\uff09\u3002\n[^6]: [Base.isbits\uff08v0.4\uff09](http://docs.julialang.org/en/release-0.4/stdlib/base/#Base.isbits) / [\uff08\u6700\u65b0\u7248\uff09](http://docs.julialang.org/en/latest/stdlib/base/#Base.isbits) \u53c2\u7167\n[^7]: \u3053\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3068\u304d\u3001\u305d\u306e\u578b\u306f\u53c2\u7167\u578b\u3067\u306f\u306a\u304f\u6240\u8b02\u300c\u5024\u578b\u300d\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u6a21\u69d8\u3067\u3059\u3002 \u67d0\u4ed6\u8a00\u8a9e\u3067 `class` \u3067\u306f\u306a\u304f `struct` \u3067\u5b9a\u7fa9\u3057\u305f\u578b\u304c\u6697\u9ed9\u306b `Value` \u3092\u7d99\u627f\u3057\u305f\u578b\u306b\u306a\u308b\u306e\u3068\u4f3c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u304b\u305f\u3076\u3093\u5185\u90e8\u3067\u540c\u3058\u3053\u3068\u304c\u8d77\u304d\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\uff08\u672a\u78ba\u8a8d\uff09\u3002\n[^8]: \u3061\u306a\u307f\u306b\u524d\u7bc0\u3067\u89e6\u308c\u305f `Complex{T}` \u578b\u306f\u3001\u3053\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b Composite Type \u306e\u4f8b\u3060\u3063\u305f\u308a\u3057\u307e\u3059\uff08`T`\u306b\u3042\u305f\u308b\u578b\u304c `isbits(T)==true` \u3092\u6e80\u305f\u3059\u3053\u3068\u304c\u5fc5\u8981\uff09\u3002\n[^9]: [^5]\u3067\u89e6\u308c\u305f\u901a\u308a\u3001Julia \u306e\u5185\u90e8\u30e1\u30e2\u30ea\u306e\u6271\u3044\u304c\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3067\u3042\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\u3082\u3057\u30d3\u30c3\u30b0\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3060\u3063\u305f\u3089\u671f\u5f85\u901a\u308a\u52d5\u4f5c\u3057\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff08\u60c5\u5831\u52df\u96c6\uff09\u3002\n", "tags": ["Julia0.3.12, 0.4.6, 0.5.0-dev"]}