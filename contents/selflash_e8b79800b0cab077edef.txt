{"context": " More than 1 year has passed since last update.vector<flash::DisplayObject*> children;\n\nvoid DisplayObjectContainer::swapChildren(flash::DisplayObject* child1, flash::DisplayObject* child2) {\n    int index1 = getChildIndex(child1);\n    int index2 = getChildIndex(child2);\n\n    if(index1 == -1 || index2 == -1) return;    \n    for(int i = 0; i < children.size(); i++) {\n        if(children[i] == child1 || children[i] == child2) {\n            children.erase(children.begin() + i--);\n        }\n    }\n\n    if(index1 < index2) {\n        children.insert(children.begin() + index1, child2);\n        children.insert(children.begin() + index2, child1);\n    } else {\n        children.insert(children.begin() + index2, child1);\n        children.insert(children.begin() + index1, child2);\n    }\n}\n\n\nconst int& DisplayObjectContainer::getChildIndex(flash::DisplayObject* child){\n    for(int i = 0; i < children.size(); i++){\n        if(children[i] == child) return i;\n    }\n\n    return -1;\n}\n\n\n```cpp\nvector<flash::DisplayObject*> children;\n\nvoid DisplayObjectContainer::swapChildren(flash::DisplayObject* child1, flash::DisplayObject* child2) {\n    int index1 = getChildIndex(child1);\n    int index2 = getChildIndex(child2);\n\t\n    if(index1 == -1 || index2 == -1) return;\t\n    for(int i = 0; i < children.size(); i++) {\n        if(children[i] == child1 || children[i] == child2) {\n            children.erase(children.begin() + i--);\n        }\n    }\n\t\n    if(index1 < index2) {\n        children.insert(children.begin() + index1, child2);\n        children.insert(children.begin() + index2, child1);\n    } else {\n        children.insert(children.begin() + index2, child1);\n        children.insert(children.begin() + index1, child2);\n    }\n}\n\n\nconst int& DisplayObjectContainer::getChildIndex(flash::DisplayObject* child){\n    for(int i = 0; i < children.size(); i++){\n        if(children[i] == child) return i;\n    }\n     \n    return -1;\n}\n\n```", "tags": ["openFrameworks", "C++"]}