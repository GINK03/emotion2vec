{"context": " More than 1 year has passed since last update.\u300cL\u88ab\u8986\u300d\u3092Erlang\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u4ed6\u306e\u5b9f\u88c5\u306f \u7b2c16\u56de\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\u306e\u53c2\u8003\u554f\u984c \u304b\u3089\u8fbf\u308c\u307e\u3059\u3002\n\nlcove.erl\n-module(lcove).\n-compile(export_all).\n\n%% \u89e3\u304f\nsolve(Data) ->\n  % 1\u306e\u4f4d\u306810\u306e\u4f4d\u306b\u5206\u3051\u308b\u95a2\u6570\n  F = fun(SX) -> X = list_to_integer(SX), {X div 10, X rem 10} end,\n  area([F(SX) || SX <- string:tokens(Data, \",\")]).\n\n%% L\u5b57\u578b\u306e\u9762\u7a4d\u3092\u6c42\u3081\u308b\narea(L) ->\n  % \u56db\u9685\u304b\u3089\u524a\u308c\u308b\u6700\u5927\u9762\u7a4d\u3092\u6c42\u3081\u308b\n  {_, C} = lists:foldl(fun(_, {La, Max}) ->\n    case cornerarea(La) of\n      A when A > Max -> {turnr(La), A};\n      _ -> {turnr(La), Max}\n    end\n  end, {L, 0}, [1, 2, 3, 4]),\n  % \u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n  case C of\n    0 ->                                        % \u56db\u9685\u304c\u524a\u308c\u305a\u30a8\u30ea\u30a2\u304c\u56db\u89d2\u306e\u6642\n      case {rangex(L), rangey(L)} of\n        {{0, 9}, {0, 9}} -> \"-\";                % \u76ee\u4e00\u676f\u306a\u3089\"-\"\n        _ -> integer_to_list(squarearea(L) + 1) % \u305d\u308c\u4ee5\u5916\u306a\u30891\u30de\u30b9\u98db\u3073\u51fa\u3055\u305b\u308b\n      end;\n    X -> integer_to_list(squarearea(L) - X)     % \u524a\u308c\u308b\u6642\u306f\u89d2\u3092\u524a\u3063\u305f\u5206\u3092\u5f15\u304f\n  end.\n\n%% \u5de6\u4e0a\u304b\u3089\u56db\u89d2\u304f\u524a\u308c\u308b\u6700\u5927\u9762\u7a4d\u3092\u6c42\u3081\u308b\ncornerarea(L) ->\n  {X1, X2} = rangex(L),\n  {Y1, Y2} = rangey(L),\n  F = fun(X) -> lists:foldl(fun\n    ({Xa, Ya}, Hi) when Xa =:= X -> lists:min([Ya, Hi]);\n    (_, Hi) -> Hi\n  end, Y2, L) end,\n  H2 = [F(X) - Y1 || X <- lists:seq(X1, X2 - 1)],\n  H3 = lists:zip(lists:seq(1, X2 - X1), H2),\n  {_, H4} = lists:foldl(fun({W, H}, {Hacc, Ret}) ->\n    M = lists:min([H, Hacc]),\n    {M, [{W, M} | Ret]}\n  end, {Y2 - Y1, []}, H3),\n  lists:max([W * H || {W, H} <- H4]).\n\n%% \u30c7\u30fc\u30bf\u30fc\u3092\u53f3\u307890\u5ea6\u56de\u8ee2\u3055\u305b\u308b\nturnr(L) -> [{Y, 9 - X} || {X, Y} <- L].\n\n%% \u3059\u3079\u3066\u306e\u5857\u3089\u308c\u305f\u30de\u30b9\u76ee\u3092\u542b\u3080\u56db\u89d2\u5f62\u306e\u9762\u7a4d\u3092\u8fd4\u3059\nsquarearea(L) ->\n  {X1, X2} = rangex(L),\n  {Y1, Y2} = rangey(L),\n  (X2 - X1 + 1) * (Y2 - Y1 + 1).\n\n%% \u6307\u5b9a\u3055\u308c\u305f\u5ea7\u6a19\u306e\u7bc4\u56f2\u3092\u8fd4\u3059\nrange(F, L) ->\n  Rs = [F(R) || R <- L],\n  R2 = lists:max(Rs),\n  case lists:min(Rs) of\n    R2 -> {R2 - 1, R2}; % 1\u30de\u30b9\u306e\u6642\u306f2\u30de\u30b9\u306b\u62e1\u5f35\u3059\u308b\n    R1 -> {R1, R2}\n  end.\n\n%% X\u5ea7\u6a19\u306e\u7bc4\u56f2\u3092\u8fd4\u3059\nrangex(L) -> range(fun({X, _}) -> X end, L).\n\n%% Y\u5ea7\u6a19\u306e\u7bc4\u56f2\u3092\u8fd4\u3059\nrangey(L) -> range(fun({_, Y}) -> Y end, L).\n\n%% \u30c6\u30b9\u30c8\ntest(Data, Expected) ->\n  Result = solve(Data),\n  OkNg = case Result =:= Expected of true -> ok; false -> ng end,\n  io:fwrite(\"~s: ~s -> ~s~n\", [OkNg, Data, Result]).\n\ntests() ->\n  test(\"41,33,26,55,74,58,68\", \"39\"), %0\n  test(\"00,99,09,90\", \"-\"), %1\n  test(\"09\", \"3\"), %2\n  test(\"05,05,05\", \"3\"), %3\n  test(\"45\", \"3\"), %4\n  test(\"38,39\", \"3\"), %5\n  test(\"38,47\", \"3\"), %6\n  test(\"45,66\", \"4\"), %7\n  test(\"12,34,56,78\", \"33\"), %8\n  test(\"12,34,56,78,45\", \"37\"), %9\n  test(\"00,09,00\", \"11\"), %10\n  test(\"00,90\", \"11\"), %11\n  test(\"99,09\", \"11\"), %12\n  test(\"99,90\", \"11\"), %13\n  test(\"11,12,21,22\", \"5\"), %14\n  test(\"42,45,92,95,83,62\", \"25\"), %15\n  test(\"42,45,92,83,62\", \"14\"), %16\n  test(\"34,38,78,74,56,35,77,48,54\", \"26\"), %17\n  test(\"38,78,74,56,35,77,48,54\", \"23\"), %18\n  test(\"31,41,21,71,21\", \"7\"), %19\n  test(\"46,45,42,44,45\", \"6\"), %20\n  test(\"00,99,09\", \"19\"), %21\n  test(\"99,09,90,24\", \"64\"), %22\n  test(\"99,16,61,34,17,24,42,26,18,71,19,91,81,43,33,62,52,25\", \"75\"), %23\n  test(\"55,43,16,91,61,19,24,18,33,34,71,81,42,62,52,26,17,25\", \"53\"), %24\n  test(\"71,26,81,62,17,16,25,42,33,52,19,18,91,24,61,34,43\", \"45\"), %25\n  test(\"39,49,19,93,78,58,48,91,95,29,68,92,86,87,94,77\", \"39\"), %26\n  test(\"69,89,25,26,58,12,37,36,68,24,11,13,48,14,79\", \"37\"), %27\n  test(\"58,67,92,38,83,29,91,76,84,57,75,48,85,19,66\", \"51\"), %28\n  test(\"00,83,76,85,48,19,75,29,92,57,66,67,91,58,38,84\", \"91\"), %29\n  test(\"11,92,57,38,58,66,91,67,84,48,83,19,75,85,76,29\", \"72\"), %30\n  test(\"36,07,45\", \"9\"), %31\n  test(\"57,23,24,74\", \"21\"), %32\n  test(\"92,20,32,12,65\", \"39\"), %33\n  test(\"24,54,66,48,54,15\", \"21\"), %34\n  test(\"05,17,42,20,48,22,13\", \"39\"), %35\n  test(\"53,84,55,56,25,14,84,43\", \"26\"), %36\n  test(\"06,77,56,59,15,24,09,66,71\", \"51\"), %37\n  test(\"53,36,47,45,45,67,66,46,63,75\", \"21\"), %38\n  test(\"35,53,93,33,02,84,83,48,54,32,28\", \"50\"), %39\n  test(\"55,74,32,84,41,64,24,44,15,14,26,53\", \"39\"), %40\n  test(\"47,60,34,32,19,67,24,83,94,38,47,05,79\", \"88\"), %41\n  test(\"63,32,42,74,66,64,35,41,74,25,48,62,44,54\", \"42\"), %42\n  test(\"00,86,16,19,09,92,51,10,68,23,14,63,21,46,03\", \"91\"), %43\n  test(\"56,46,54,14,15,25,53,84,58,85,44,37,54,76,26,76\", \"42\"), %44\n  test(\"71,87,39,43,76,38,91,69,98,33,43,26,56,69,73,52,89\", \"66\"), %45\n  test(\"43,26,84,64,52,48,36,23,66,53,41,57,76,36,84,57,35,41\", \"47\"), %46\n  test(\"81,02,85,93,36,46,80,27,72,28,02,99,13,41,36,40,18,97,38\", \"91\"), %47\n  test(\"63,46,75,58,42,26,58,37,14,75,35,63,32,36,52,46,85,14,48,23\", \"47\"), %48\n  test(\"66,92,64,12,17,33,10,28,75,05,81,05,42,86,52,57,56,78,87,81,10\", \"82\"), %49\n  test(\"48,25,58,76,15,74,43,44,24,62,33,67,34,34,42,48,37,33,51,43,46,67\", \"50\"). %50\n\n\n\u300c[L\u88ab\u8986](http://nabetani.sakura.ne.jp/hena/ord16lcove/)\u300d\u3092Erlang\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u4ed6\u306e\u5b9f\u88c5\u306f [\u7b2c16\u56de\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\u306e\u53c2\u8003\u554f\u984c](http://qiita.com/Nabetani/items/7be4bc2a3514bbfbfc15) \u304b\u3089\u8fbf\u308c\u307e\u3059\u3002\n\n```erlang:lcove.erl\n-module(lcove).\n-compile(export_all).\n\n%% \u89e3\u304f\nsolve(Data) ->\n  % 1\u306e\u4f4d\u306810\u306e\u4f4d\u306b\u5206\u3051\u308b\u95a2\u6570\n  F = fun(SX) -> X = list_to_integer(SX), {X div 10, X rem 10} end,\n  area([F(SX) || SX <- string:tokens(Data, \",\")]).\n\n%% L\u5b57\u578b\u306e\u9762\u7a4d\u3092\u6c42\u3081\u308b\narea(L) ->\n  % \u56db\u9685\u304b\u3089\u524a\u308c\u308b\u6700\u5927\u9762\u7a4d\u3092\u6c42\u3081\u308b\n  {_, C} = lists:foldl(fun(_, {La, Max}) ->\n    case cornerarea(La) of\n      A when A > Max -> {turnr(La), A};\n      _ -> {turnr(La), Max}\n    end\n  end, {L, 0}, [1, 2, 3, 4]),\n  % \u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n  case C of\n    0 ->                                        % \u56db\u9685\u304c\u524a\u308c\u305a\u30a8\u30ea\u30a2\u304c\u56db\u89d2\u306e\u6642\n      case {rangex(L), rangey(L)} of\n        {{0, 9}, {0, 9}} -> \"-\";                % \u76ee\u4e00\u676f\u306a\u3089\"-\"\n        _ -> integer_to_list(squarearea(L) + 1) % \u305d\u308c\u4ee5\u5916\u306a\u30891\u30de\u30b9\u98db\u3073\u51fa\u3055\u305b\u308b\n      end;\n    X -> integer_to_list(squarearea(L) - X)     % \u524a\u308c\u308b\u6642\u306f\u89d2\u3092\u524a\u3063\u305f\u5206\u3092\u5f15\u304f\n  end.\n\n%% \u5de6\u4e0a\u304b\u3089\u56db\u89d2\u304f\u524a\u308c\u308b\u6700\u5927\u9762\u7a4d\u3092\u6c42\u3081\u308b\ncornerarea(L) ->\n  {X1, X2} = rangex(L),\n  {Y1, Y2} = rangey(L),\n  F = fun(X) -> lists:foldl(fun\n    ({Xa, Ya}, Hi) when Xa =:= X -> lists:min([Ya, Hi]);\n    (_, Hi) -> Hi\n  end, Y2, L) end,\n  H2 = [F(X) - Y1 || X <- lists:seq(X1, X2 - 1)],\n  H3 = lists:zip(lists:seq(1, X2 - X1), H2),\n  {_, H4} = lists:foldl(fun({W, H}, {Hacc, Ret}) ->\n    M = lists:min([H, Hacc]),\n    {M, [{W, M} | Ret]}\n  end, {Y2 - Y1, []}, H3),\n  lists:max([W * H || {W, H} <- H4]).\n\n%% \u30c7\u30fc\u30bf\u30fc\u3092\u53f3\u307890\u5ea6\u56de\u8ee2\u3055\u305b\u308b\nturnr(L) -> [{Y, 9 - X} || {X, Y} <- L].\n\n%% \u3059\u3079\u3066\u306e\u5857\u3089\u308c\u305f\u30de\u30b9\u76ee\u3092\u542b\u3080\u56db\u89d2\u5f62\u306e\u9762\u7a4d\u3092\u8fd4\u3059\nsquarearea(L) ->\n  {X1, X2} = rangex(L),\n  {Y1, Y2} = rangey(L),\n  (X2 - X1 + 1) * (Y2 - Y1 + 1).\n\n%% \u6307\u5b9a\u3055\u308c\u305f\u5ea7\u6a19\u306e\u7bc4\u56f2\u3092\u8fd4\u3059\nrange(F, L) ->\n  Rs = [F(R) || R <- L],\n  R2 = lists:max(Rs),\n  case lists:min(Rs) of\n    R2 -> {R2 - 1, R2}; % 1\u30de\u30b9\u306e\u6642\u306f2\u30de\u30b9\u306b\u62e1\u5f35\u3059\u308b\n    R1 -> {R1, R2}\n  end.\n\n%% X\u5ea7\u6a19\u306e\u7bc4\u56f2\u3092\u8fd4\u3059\nrangex(L) -> range(fun({X, _}) -> X end, L).\n\n%% Y\u5ea7\u6a19\u306e\u7bc4\u56f2\u3092\u8fd4\u3059\nrangey(L) -> range(fun({_, Y}) -> Y end, L).\n\n%% \u30c6\u30b9\u30c8\ntest(Data, Expected) ->\n  Result = solve(Data),\n  OkNg = case Result =:= Expected of true -> ok; false -> ng end,\n  io:fwrite(\"~s: ~s -> ~s~n\", [OkNg, Data, Result]).\n\ntests() ->\n  test(\"41,33,26,55,74,58,68\", \"39\"), %0\n  test(\"00,99,09,90\", \"-\"), %1\n  test(\"09\", \"3\"), %2\n  test(\"05,05,05\", \"3\"), %3\n  test(\"45\", \"3\"), %4\n  test(\"38,39\", \"3\"), %5\n  test(\"38,47\", \"3\"), %6\n  test(\"45,66\", \"4\"), %7\n  test(\"12,34,56,78\", \"33\"), %8\n  test(\"12,34,56,78,45\", \"37\"), %9\n  test(\"00,09,00\", \"11\"), %10\n  test(\"00,90\", \"11\"), %11\n  test(\"99,09\", \"11\"), %12\n  test(\"99,90\", \"11\"), %13\n  test(\"11,12,21,22\", \"5\"), %14\n  test(\"42,45,92,95,83,62\", \"25\"), %15\n  test(\"42,45,92,83,62\", \"14\"), %16\n  test(\"34,38,78,74,56,35,77,48,54\", \"26\"), %17\n  test(\"38,78,74,56,35,77,48,54\", \"23\"), %18\n  test(\"31,41,21,71,21\", \"7\"), %19\n  test(\"46,45,42,44,45\", \"6\"), %20\n  test(\"00,99,09\", \"19\"), %21\n  test(\"99,09,90,24\", \"64\"), %22\n  test(\"99,16,61,34,17,24,42,26,18,71,19,91,81,43,33,62,52,25\", \"75\"), %23\n  test(\"55,43,16,91,61,19,24,18,33,34,71,81,42,62,52,26,17,25\", \"53\"), %24\n  test(\"71,26,81,62,17,16,25,42,33,52,19,18,91,24,61,34,43\", \"45\"), %25\n  test(\"39,49,19,93,78,58,48,91,95,29,68,92,86,87,94,77\", \"39\"), %26\n  test(\"69,89,25,26,58,12,37,36,68,24,11,13,48,14,79\", \"37\"), %27\n  test(\"58,67,92,38,83,29,91,76,84,57,75,48,85,19,66\", \"51\"), %28\n  test(\"00,83,76,85,48,19,75,29,92,57,66,67,91,58,38,84\", \"91\"), %29\n  test(\"11,92,57,38,58,66,91,67,84,48,83,19,75,85,76,29\", \"72\"), %30\n  test(\"36,07,45\", \"9\"), %31\n  test(\"57,23,24,74\", \"21\"), %32\n  test(\"92,20,32,12,65\", \"39\"), %33\n  test(\"24,54,66,48,54,15\", \"21\"), %34\n  test(\"05,17,42,20,48,22,13\", \"39\"), %35\n  test(\"53,84,55,56,25,14,84,43\", \"26\"), %36\n  test(\"06,77,56,59,15,24,09,66,71\", \"51\"), %37\n  test(\"53,36,47,45,45,67,66,46,63,75\", \"21\"), %38\n  test(\"35,53,93,33,02,84,83,48,54,32,28\", \"50\"), %39\n  test(\"55,74,32,84,41,64,24,44,15,14,26,53\", \"39\"), %40\n  test(\"47,60,34,32,19,67,24,83,94,38,47,05,79\", \"88\"), %41\n  test(\"63,32,42,74,66,64,35,41,74,25,48,62,44,54\", \"42\"), %42\n  test(\"00,86,16,19,09,92,51,10,68,23,14,63,21,46,03\", \"91\"), %43\n  test(\"56,46,54,14,15,25,53,84,58,85,44,37,54,76,26,76\", \"42\"), %44\n  test(\"71,87,39,43,76,38,91,69,98,33,43,26,56,69,73,52,89\", \"66\"), %45\n  test(\"43,26,84,64,52,48,36,23,66,53,41,57,76,36,84,57,35,41\", \"47\"), %46\n  test(\"81,02,85,93,36,46,80,27,72,28,02,99,13,41,36,40,18,97,38\", \"91\"), %47\n  test(\"63,46,75,58,42,26,58,37,14,75,35,63,32,36,52,46,85,14,48,23\", \"47\"), %48\n  test(\"66,92,64,12,17,33,10,28,75,05,81,05,42,86,52,57,56,78,87,81,10\", \"82\"), %49\n  test(\"48,25,58,76,15,74,43,44,24,62,33,67,34,34,42,48,37,33,51,43,46,67\", \"50\"). %50\n```\n", "tags": ["yhpg", "\u3069\u3046\u66f8\u304f", "Erlang"]}