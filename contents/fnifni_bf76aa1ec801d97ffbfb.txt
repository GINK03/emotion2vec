{"context": "\u3053\u3093\u306b\u3061\u306f\u3001\u3072\u308d\u304b\u305a\u3067\u3059\u3002\n\u524d\u56de\u3067\u306f\u3001Deep Security as a Service(\u4ee5\u4e0b\u3001DSaaS)\u3067\u767a\u751f\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u5168\u3066SNS\u30c8\u30d4\u30c3\u30af\u3067SQS\u3078\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u884c\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u3001\u4e3b\u306a\u9700\u8981\u306e\u3046\u3061\u3001DSaaS\u30a4\u30d9\u30f3\u30c8\u306e\u9577\u671f\u4fdd\u5b58\u306b\u3064\u3044\u3066\u4e00\u7b46\u66f8\u304d\u307e\u3059\u3002\n\n\n\u4eca\u56de\u5b9f\u88c5\u3059\u308b\u3053\u3068\n\nLambda\u3092\uff15\u5206\u6bce\u306b\u5b9a\u671f\u5b9f\u884c\u3059\u308b\u3002\nSQS\u306b\u84c4\u7a4d\u3057\u305fSNS\u30c8\u30d4\u30c3\u30af\u304b\u3089DSaaS\u30a4\u30d9\u30f3\u30c8\u60c5\u5831\u3092\u629c\u304d\u51fa\u3057\u3001S3\u3078\u4fdd\u5b58\u3059\u308b\n\u51e6\u7406\u3057\u305f\u30ad\u30e5\u30fc\u306f\u524a\u9664\u3059\u308b\u3002\n\n\n\u3056\u3063\u304f\u308a\u69cb\u6210(\u4eca\u56de\u306e\u5206)\n\n\n\u53c2\u8003\u60c5\u5831\n\u4eca\u56de\u306f\u3001\u3053\u3061\u3089\u304c\u975e\u5e38\u306b\u5f79\u306b\u7acb\u3061\u307e\u3057\u305f\u3002\nLambda(Python)\u3067SQS\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u5185\u5bb9\u3092DynamoDB\u306bPUT\u3059\u308b\n\n\u5de5\u7a0b\n\n\u683c\u7d0d\u5148\u3068\u306a\u308bs3\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\nLambda Function\u3092\u4f5c\u6210\u3059\u308b\u3002\nIAM\u6a29\u9650\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\u5b9f\u884c\u7d50\u679c\n\n\n1. \u683c\u7d0d\u5148\u3068\u306a\u308bs3\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u30d0\u30b1\u30c3\u30c8\u540d\u3092dsaas-sns\u3068\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u30ea\u30fc\u30b8\u30e7\u30f3\u306f\u3001SQS\u306e\u5834\u6240\u3068\u5408\u305b\u307e\u3057\u305f\u3002\n\n\u3067\u304d\u307e\u3057\u305f\u306d\u3002\n\n\n2. Lambda Function\u3092\u4f5c\u6210\u3059\u308b\u3002\ndsaas-sns-sqs-s3\u3068\u3044\u3046\u540d\u524d\u306eLambda Function\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5b9a\u671f\u5b9f\u884c\u8a2d\u5b9a\u306f\u3001\u30c8\u30ea\u30ac\u30fc\u753b\u9762\u3067CloudWatch Events\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306f\u3053\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\ns3\u306b\u4fdd\u5b58\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u3001DSaaS\u30a4\u30d9\u30f3\u30c8\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u8a2d\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nimport json\nimport boto3\nimport logging\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\nqueueName = 'dsaas-sns'\nmaxNumberOfMessages = 10\nAWS_S3_BUCKET_NAME = 'dsaas-sns'\n\ndef lambda_handler(event, context):\n\n    try:\n         logger.info(event)\n\n         queue = boto3.resource('sqs').get_queue_by_name(\n             QueueName = queueName\n         )\n\n         messages = queue.receive_messages(\n             MaxNumberOfMessages = maxNumberOfMessages\n         )\n\n         entries = []\n         items = []\n         for message in messages:\n              entries.append({\n                   \"Id\": message.message_id,\n                   \"ReceiptHandle\": message.receipt_handle\n              })\n              items.append({\n                   \"UnsubscribeURL\": json.loads(message.body)['UnsubscribeURL'],\n                   \"SigningCertURL\": json.loads(message.body)['SigningCertURL'],\n                   \"Signature\": json.loads(message.body)['Signature'],\n                   \"SignatureVersion\": json.loads(message.body)['SignatureVersion'],\n                   \"Timestamp\": json.loads(message.body)['Timestamp'],\n                   \"Message\": json.loads(message.body)['Message'],\n                   \"TopicArn\": json.loads(message.body)['TopicArn'],\n                   \"MessageId\": json.loads(message.body)['MessageId'],\n                   \"Type\": json.loads(message.body)['Type']\n              })\n              s3 = boto3.resource('s3')\n              bucket = s3.Bucket(AWS_S3_BUCKET_NAME)\n              for item in items:\n                   PUT_OBJECT_KEY_NAME = item['Timestamp']\n                   obj = bucket.Object(PUT_OBJECT_KEY_NAME)\n                   body = item['Message']\n\n                   response = obj.put(\n                       Body=body.encode('utf-8'),\n                       ContentEncoding='utf-8',\n                       ContentType='text/plane'\n                   )\n\n         response = {}\n         if len(entries) != 0:\n             response = queue.delete_messages(\n                  Entries = entries\n             )\n\n         logger.info(response)\n         return response\n\n    except Exception as e:\n         logger.error(e)\n         raise e\n\n\n3. IAM\u6a29\u9650\u3092\u8ffd\u52a0\u3059\u308b\u3002\nsns-sqs-s3.lambda_role\u306bSQS\u3068s3\u306e\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\n4. \u5b9f\u884c\u7d50\u679c\nSQS\u306e\u30e1\u30c8\u30ea\u30af\u30b9\u3067\u30ad\u30e5\u30fc\u304c\u9806\u8abf\u306b\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\ns3\u306b\u3082\u30a4\u30d9\u30f3\u30c8\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5185\u5bb9\u3082DSaaS\u306e\u30a4\u30d9\u30f3\u30c8\u3060\u3051\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u65e2\u5b58\u306e\u30a4\u30d9\u30f3\u30c8\u3092SNS\u30c8\u30d4\u30c3\u30af\u3068\u3057\u3066\u98db\u3070\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u5b9f\u88c5\u306b\u3088\u3063\u3066DSaaS\u4e0a\u3067\u65b0\u305f\u306b\u767a\u751f\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u306f\u5168\u3066s3\u306b\u4fdd\u5b58\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u4eca\u65e5\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\n\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\u3002\n\u3053\u3093\u306b\u3061\u306f\u3001\u3072\u308d\u304b\u305a\u3067\u3059\u3002\n[\u524d\u56de](http://qiita.com/fnifni/items/1b0a8f766576dcd4baef)\u3067\u306f\u3001Deep Security as a Service(\u4ee5\u4e0b\u3001DSaaS)\u3067\u767a\u751f\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u5168\u3066SNS\u30c8\u30d4\u30c3\u30af\u3067SQS\u3078\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u884c\u3044\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306f\u3001\u4e3b\u306a\u9700\u8981\u306e\u3046\u3061\u3001`DSaaS\u30a4\u30d9\u30f3\u30c8\u306e\u9577\u671f\u4fdd\u5b58`\u306b\u3064\u3044\u3066\u4e00\u7b46\u66f8\u304d\u307e\u3059\u3002\n![Juyo_01.png](https://qiita-image-store.s3.amazonaws.com/0/46611/3575e5de-ae74-0bf8-7163-74092dbffbd3.png \"Juyo_01.png\")\n\n#\u4eca\u56de\u5b9f\u88c5\u3059\u308b\u3053\u3068\n\n- Lambda\u3092\uff15\u5206\u6bce\u306b\u5b9a\u671f\u5b9f\u884c\u3059\u308b\u3002\n- SQS\u306b\u84c4\u7a4d\u3057\u305fSNS\u30c8\u30d4\u30c3\u30af\u304b\u3089DSaaS\u30a4\u30d9\u30f3\u30c8\u60c5\u5831\u3092\u629c\u304d\u51fa\u3057\u3001S3\u3078\u4fdd\u5b58\u3059\u308b\n- \u51e6\u7406\u3057\u305f\u30ad\u30e5\u30fc\u306f\u524a\u9664\u3059\u308b\u3002\n\n#\u3056\u3063\u304f\u308a\u69cb\u6210(\u4eca\u56de\u306e\u5206)\n![Diagram_02.png](https://qiita-image-store.s3.amazonaws.com/0/46611/38830590-b8d3-9c7c-c50a-34fc8ae87b8c.png \"Diagram_02.png\")\n\n#\u53c2\u8003\u60c5\u5831\n\u4eca\u56de\u306f\u3001\u3053\u3061\u3089\u304c\u975e\u5e38\u306b\u5f79\u306b\u7acb\u3061\u307e\u3057\u305f\u3002\n[Lambda(Python)\u3067SQS\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u5185\u5bb9\u3092DynamoDB\u306bPUT\u3059\u308b](https://cloudpack.media/16155)\n\n#\u5de5\u7a0b\n1. \u683c\u7d0d\u5148\u3068\u306a\u308bs3\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n2. Lambda Function\u3092\u4f5c\u6210\u3059\u308b\u3002\n3. IAM\u6a29\u9650\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n4. \u5b9f\u884c\u7d50\u679c\n\n#1. \u683c\u7d0d\u5148\u3068\u306a\u308bs3\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u30d0\u30b1\u30c3\u30c8\u540d\u3092`dsaas-sns`\u3068\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u30ea\u30fc\u30b8\u30e7\u30f3\u306f\u3001SQS\u306e\u5834\u6240\u3068\u5408\u305b\u307e\u3057\u305f\u3002\n![S3_01.png](https://qiita-image-store.s3.amazonaws.com/0/46611/56b8b938-37a4-f94d-0918-dccfd96f87dd.png \"S3_01.png\")\n\n\u3067\u304d\u307e\u3057\u305f\u306d\u3002\n![S3_02.png](https://qiita-image-store.s3.amazonaws.com/0/46611/b6bbd5ea-34ab-bed8-f56d-eebe0bdebdd3.png \"S3_02.png\")\n\n#2. Lambda Function\u3092\u4f5c\u6210\u3059\u308b\u3002\n`dsaas-sns-sqs-s3`\u3068\u3044\u3046\u540d\u524d\u306eLambda Function\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n![Lambda_01.png](https://qiita-image-store.s3.amazonaws.com/0/46611/477c772a-befe-ae62-45ab-b3917b0c836f.png \"Lambda_01.png\")\n\n\u5b9a\u671f\u5b9f\u884c\u8a2d\u5b9a\u306f\u3001\u30c8\u30ea\u30ac\u30fc\u753b\u9762\u3067CloudWatch Events\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n![Lambda_02.png](https://qiita-image-store.s3.amazonaws.com/0/46611/01150d6d-09c1-35db-96d8-74d634d8682e.png \"Lambda_02.png\")\n\n\u30b3\u30fc\u30c9\u306f\u3053\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\ns3\u306b\u4fdd\u5b58\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u3001DSaaS\u30a4\u30d9\u30f3\u30c8\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u8a2d\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\nimport json\nimport boto3\nimport logging\n \nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n \nqueueName = 'dsaas-sns'\nmaxNumberOfMessages = 10\nAWS_S3_BUCKET_NAME = 'dsaas-sns'\n\ndef lambda_handler(event, context):\n \n    try:\n         logger.info(event)\n \n         queue = boto3.resource('sqs').get_queue_by_name(\n             QueueName = queueName\n         )\n \n         messages = queue.receive_messages(\n             MaxNumberOfMessages = maxNumberOfMessages\n         )\n \n         entries = []\n         items = []\n         for message in messages:\n              entries.append({\n                   \"Id\": message.message_id,\n                   \"ReceiptHandle\": message.receipt_handle\n              })\n              items.append({\n                   \"UnsubscribeURL\": json.loads(message.body)['UnsubscribeURL'],\n                   \"SigningCertURL\": json.loads(message.body)['SigningCertURL'],\n                   \"Signature\": json.loads(message.body)['Signature'],\n                   \"SignatureVersion\": json.loads(message.body)['SignatureVersion'],\n                   \"Timestamp\": json.loads(message.body)['Timestamp'],\n                   \"Message\": json.loads(message.body)['Message'],\n                   \"TopicArn\": json.loads(message.body)['TopicArn'],\n                   \"MessageId\": json.loads(message.body)['MessageId'],\n                   \"Type\": json.loads(message.body)['Type']\n              })\n              s3 = boto3.resource('s3')\n              bucket = s3.Bucket(AWS_S3_BUCKET_NAME)\n              for item in items:\n                   PUT_OBJECT_KEY_NAME = item['Timestamp']\n                   obj = bucket.Object(PUT_OBJECT_KEY_NAME)\n                   body = item['Message']\n                   \n                   response = obj.put(\n                       Body=body.encode('utf-8'),\n                       ContentEncoding='utf-8',\n                       ContentType='text/plane'\n                   )\n\n         response = {}\n         if len(entries) != 0:\n             response = queue.delete_messages(\n                  Entries = entries\n             )\n \n         logger.info(response)\n         return response\n \n    except Exception as e:\n         logger.error(e)\n         raise e\n```\n\n#3. IAM\u6a29\u9650\u3092\u8ffd\u52a0\u3059\u308b\u3002\nsns-sqs-s3.lambda_role\u306bSQS\u3068s3\u306e\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n![IAM_11.png](https://qiita-image-store.s3.amazonaws.com/0/46611/27be3ca6-3b8c-15d3-140c-527b66441c1a.png \"IAM_11.png\")\n\n#4. \u5b9f\u884c\u7d50\u679c\nSQS\u306e\u30e1\u30c8\u30ea\u30af\u30b9\u3067\u30ad\u30e5\u30fc\u304c\u9806\u8abf\u306b\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n![SQS_21.png](https://qiita-image-store.s3.amazonaws.com/0/46611/2ad393ba-511b-649e-3df0-6c4247ca9e79.png \"SQS_21.png\")\n\ns3\u306b\u3082\u30a4\u30d9\u30f3\u30c8\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n![S3_11.png](https://qiita-image-store.s3.amazonaws.com/0/46611/2c8abfd1-ba21-d8a5-ffe5-8d17a63c98d5.png \"S3_11.png\")\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5185\u5bb9\u3082DSaaS\u306e\u30a4\u30d9\u30f3\u30c8\u3060\u3051\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n![S3_12.png](https://qiita-image-store.s3.amazonaws.com/0/46611/1ab7a9d5-c0b1-0084-1c43-07df5e7d34a4.png \"S3_12.png\")\n\n\n`\u65e2\u5b58\u306e\u30a4\u30d9\u30f3\u30c8\u3092SNS\u30c8\u30d4\u30c3\u30af\u3068\u3057\u3066\u98db\u3070\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001`\u3053\u306e\u5b9f\u88c5\u306b\u3088\u3063\u3066DSaaS\u4e0a\u3067\u65b0\u305f\u306b\u767a\u751f\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u306f\u5168\u3066s3\u306b\u4fdd\u5b58\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u4eca\u65e5\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\n\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\u3002\n", "tags": ["DeepSecurity", "Dsaas", "lambda", "sqs", "S3"]}