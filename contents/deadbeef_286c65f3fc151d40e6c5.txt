{"context": " More than 1 year has passed since last update.\n\nPlayframework 2.4 \u306e Compile Time DI\nPlayframework 2.4 \u306b\u304a\u3044\u3066 Compile Time DI(Dependency Injection) \u304c\u5c0e\u5165\u3055\u308c\u307e\u3057\u305f\u3002Compile Time DI \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001Mockito \u3092\u4f7f\u3046\u306e\u3088\u308a\u3082\u67d4\u8edf\u306a\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u74b0\u5883\u306b\u3088\u3063\u3066\u52d5\u4f5c\u3092\u5909\u3048\u305f\u308a\u3001\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u5dee\u3057\u66ff\u3048\u305f\u308a\u306a\u3069\u306e\u5fdc\u7528\u3082\u53ef\u80fd\u3067\u3059\u3002\u672c\u7a3f\u3067\u306f Compile Time DI \u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u30c6\u30b9\u30c8\u306e\u5b9f\u88c5\u4f8b\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u9020\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5c64\u69cb\u9020\u3092\u306a\u3059\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n+------------+\n| Controller | \u2190 \u753b\u9762\u9077\u79fb\u3092\u62c5\u5f53\u3059\u308b\n+------------+\n|  Service   | \u2190 \u30c7\u30fc\u30bf\u306e\u64cd\u4f5c\u3092\u62c5\u5f53\u3059\u308b\n+------------+\n|   Entity   | \u2190 \u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5b9a\u7fa9\u3059\u308b\n+------------+\n\nController \u306f\u3001Service \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3061\u307e\u3059\u3002\nService \u306f\u3001\u5358\u4f53\u3067\u52d5\u304f\u304b\u3001\u4ed6\u306e Service \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3061\u307e\u3059\u3002\nController \u306e\u5b9f\u88c5\u4f8b\u3067\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u63d0\u4f9b\u3059\u308b Database \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u4f55\u304b\u3057\u3089\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066 Entity \u3092\u8fd4\u3059 HogeService \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\nclass Application @Inject()(database: Database,\n                            hogeService: HogeService) extends Controller {\n  implicit val db = database\n  def index = Action {\n    Ok(views.html.index(\"Application\", \"Application\", hogeService.find))\n  }\n}\n\nroutes \u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\nGET         /                    controllers.Application.index\n\n\nApplicationLoader \u306e\u5b9f\u88c5\n\u4e0a\u8a18\u3067\u5b9a\u7fa9\u3057\u305f Application \u30af\u30e9\u30b9\u306f HogeService \u30af\u30e9\u30b9\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Play Framework \u3067\u306f\u3053\u306e\u3088\u3046\u306a Controller \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u72ec\u81ea\u306e ApplicationLoader \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\npackage app\n\nimport ...\n\nclass SimpleApplicationLoader extends ApplicationLoader {\n  def load(context: Context) = {\n    new ApplicationComponents(context).application\n  }\n}\n\nclass ApplicationComponents(context: Context) extends BuiltInComponentsFromContext(context) {\n  lazy val hogeService = new HogeService\n  lazy val database = Database.forConfig(\"slick.dbs.default.db\")\n  lazy val applicationController = new Application(database, hogeService)\n  lazy val assets = new controllers.Assets(httpErrorHandler)\n\n  override lazy val router = new router.Routes(httpErrorHandler, applicationController, assets, \"/\")\n}\n\napplication.conf \u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e ApplicationLoader \u306e\u4ee3\u308f\u308a\u306b SimpleApplicationLoader \u3092\u5229\u7528\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nplay.application.loader = \"app.SimpleApplicationLoader\"\n\n\u3055\u3089\u306b\u3001build.sbt \u306b\u4ee5\u4e0b\u306e\u884c\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\nroutesGenerator := InjectedRoutesGenerator\n\n\u4ee5\u4e0a\u306e\u5b9f\u88c5\u3068\u8a2d\u5b9a\u3067\u8d77\u52d5\u6642\u306b SimpleApplicationLoader \u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001ApplicationComponents \u3067\u5fc5\u8981\u306a\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nApplicationComponents \u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u305f\u30af\u30e9\u30b9\u306f\u307b\u307c\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u72b6\u614b\u3092\u6301\u3064\u3088\u3046\u306a\u5b9f\u88c5\u306f\u3059\u308b\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30c6\u30b9\u30c8\u7528\u306e ApplicationLoader \u306e\u5b9f\u88c5\n\u6b21\u306b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u7528\u306e ApplicationLoader \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u3053\u308c\u306f SimpleApplicationLoader \u3068\u5168\u304f\u540c\u3058\u3067\u69cb\u3044\u307e\u305b\u3093\u3002\u3053\u3053\u3067\u306f\u3001HogeService \u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\u3068\u3057\u307e\u3059\u3002\nclass TestApplicationLoader extends ApplicationLoader {\n  def load(context: Context) = {\n    new TestApplicationComponents(context).application\n  }\n}\n\nclass TestApplicationComponents(context: Context) extends BuiltInComponentsFromContext(context) {\n  lazy val hogeService: HogeService = new MockHogeService                // use Mock\n  lazy val database = Database.forDriver(org.h2.Driver.load(), \"jdbc:h2:mem:test1;MODE=MYSQL;DB_CLOSE_DELAY=-1\")\n  lazy val applicationController = new Application(database, hogeService)\n  lazy val assets = new controllers.Assets(httpErrorHandler)\n\n  override lazy val router = new router.Routes(httpErrorHandler, applicationController, assets, \"/\")\n}\n\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3067 TestApplicationLoader \u3092\u4f7f\u3046\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001WithApplicationLoader \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nclass WithTestApplication extends WithApplicationLoader(new TestApplicationLoader)\n\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n@RunWith(classOf[JUnitRunner])\nclass ApplicationSpec extends Specification with BeforeEach with AfterEach {\n\n  \"Application\" should {\n\n    \"\u6b63\u5e38\u7cfb\" in new WithTestApplication {\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(OK)\n    }\n  }\n}\n\n\n\u30c6\u30b9\u30c8\u3054\u3068\u306b\u4f7f\u7528\u3059\u308b Mock \u3092\u5909\u3048\u308b\n\u3053\u3053\u3067\u306f\u5fdc\u7528\u4f8b\u3068\u3057\u3066\u3001\u30c6\u30b9\u30c8\u3054\u3068\u306b Mock \u3092\u5909\u3048\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u78ba\u5b9f\u306b\u7570\u5e38\u7cfb\u306e\u8a66\u9a13\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u76ee\u6a19\u3068\u3057\u307e\u3059\u3002\n@RunWith(classOf[JUnitRunner])\nclass ApplicationSpec extends Specification with BeforeEach with AfterEach {\n\n  \"Application\" should {\n\n    \"\u6b63\u5e38\u7cfb\" in new WithTestApplication {\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(OK)\n    }\n    \"\u7570\u5e38\u7cfb\" in new WithTestApplication {\n      // TODO \u3069\u3046\u3057\u3088\u3046\u2026\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(BAD_REQUEST)\n    }\n  }\n}\n\nHogeService \u306e Mock \u3092\u7528\u610f\u3057\u307e\u3059\u3002\npackage test.mock\n// \u6b63\u5e38\u7cfb\nclass MockHogeService extends HogeService {...}\n// \u7570\u5e38\u7cfb\nclass IrregularMockHogeService extends HogeService {...}\n\nTestApplicationComponents \u3092\u3001\u30af\u30e9\u30b9\u540d(\u6587\u5b57\u5217)\u3067 HogeService \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u540d\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5916\u90e8\u304b\u3089\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nclass TestApplicationLoader(overrides: Map[String, String]) extends ApplicationLoader {\n  def load(context: Context) = {\n    new TestApplicationComponents(context, overrides).application\n  }\n}\n\nclass TestApplicationComponents(context: Context, overrides: Map[String, String]) extends BuiltInComponentsFromContext(context) {\n\n  lazy val defaultClasses = Map(\"hogeService\" -> \"service.HogeService\")\n  lazy val overridden = defaultClasses ++ overrides\n\n  lazy val hogeService: HogeService = construct(overridden(\"hogeService\"))\n  lazy val database = Database.forDriver(org.h2.Driver.load(), \"jdbc:h2:mem:test1;MODE=MYSQL;DB_CLOSE_DELAY=-1\")\n  lazy val applicationController = new Application(database, hogeService)\n  lazy val assets = new controllers.Assets(httpErrorHandler)\n\n  override lazy val router = new router.Routes(httpErrorHandler, applicationController, assets, \"/\")\n\n  def construct[T](className: String): T = Class.forName(className).getConstructor().newInstance().asInstanceOf[T]\n}\n\nclass WithTestApplication(overrides: Map[String, String] = Map.empty[String, String]) extends WithApplicationLoader(new TestApplicationLoader(overrides))\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n@RunWith(classOf[JUnitRunner])\nclass ApplicationSpec extends Specification with BeforeEach with AfterEach {\n\n  \"Application\" should {\n\n    \"\u6b63\u5e38\u7cfb\" in new WithTestApplication(Map(\"hogeService\" -> \"test.mock.MockHogeService\")) {\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(OK)\n    }\n    \"\u7570\u5e38\u7cfb\" in new WithTestApplication(Map(\"hogeService\" -> \"test.mock.IrregularMockHogeService\")) {\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(BAD_REQUEST)\n    }\n  }\n}\n\n\n\u53c2\u8003\n\nCompile Time Dependency Injection\n\n\nhttps://www.playframework.com/documentation/2.4.x/ScalaCompileTimeDependencyInjection\n\n\nCompile Time Dependency Injection with Play 2.4\n\n\nhttp://loicdescotte.github.io/posts/play24-compile-time-di/\n\n\n\nPlayframework 2.4 \u306e Compile Time DI\n===\n\nPlayframework 2.4 \u306b\u304a\u3044\u3066 Compile Time DI(Dependency Injection) \u304c\u5c0e\u5165\u3055\u308c\u307e\u3057\u305f\u3002Compile Time DI \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001Mockito \u3092\u4f7f\u3046\u306e\u3088\u308a\u3082\u67d4\u8edf\u306a\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u74b0\u5883\u306b\u3088\u3063\u3066\u52d5\u4f5c\u3092\u5909\u3048\u305f\u308a\u3001\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u5dee\u3057\u66ff\u3048\u305f\u308a\u306a\u3069\u306e\u5fdc\u7528\u3082\u53ef\u80fd\u3067\u3059\u3002\u672c\u7a3f\u3067\u306f Compile Time DI \u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u30c6\u30b9\u30c8\u306e\u5b9f\u88c5\u4f8b\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u9020\n---\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5c64\u69cb\u9020\u3092\u306a\u3059\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```\n+------------+\n| Controller | \u2190 \u753b\u9762\u9077\u79fb\u3092\u62c5\u5f53\u3059\u308b\n+------------+\n|  Service   | \u2190 \u30c7\u30fc\u30bf\u306e\u64cd\u4f5c\u3092\u62c5\u5f53\u3059\u308b\n+------------+\n|   Entity   | \u2190 \u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5b9a\u7fa9\u3059\u308b\n+------------+\n```\nController \u306f\u3001Service \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3061\u307e\u3059\u3002\nService \u306f\u3001\u5358\u4f53\u3067\u52d5\u304f\u304b\u3001\u4ed6\u306e Service \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3061\u307e\u3059\u3002\n\nController \u306e\u5b9f\u88c5\u4f8b\u3067\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u63d0\u4f9b\u3059\u308b Database \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u4f55\u304b\u3057\u3089\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066 Entity \u3092\u8fd4\u3059 `HogeService` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\n\n```scala\nclass Application @Inject()(database: Database,\n                            hogeService: HogeService) extends Controller {\n  implicit val db = database\n  def index = Action {\n    Ok(views.html.index(\"Application\", \"Application\", hogeService.find))\n  }\n}\n```\n\nroutes \u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n```\nGET         /                    controllers.Application.index\n```\n\n\n\n\nApplicationLoader \u306e\u5b9f\u88c5\n---\n\n\u4e0a\u8a18\u3067\u5b9a\u7fa9\u3057\u305f `Application` \u30af\u30e9\u30b9\u306f `HogeService` \u30af\u30e9\u30b9\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Play Framework \u3067\u306f\u3053\u306e\u3088\u3046\u306a Controller \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u72ec\u81ea\u306e ApplicationLoader \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```scala\npackage app\n\nimport ...\n\nclass SimpleApplicationLoader extends ApplicationLoader {\n  def load(context: Context) = {\n    new ApplicationComponents(context).application\n  }\n}\n\nclass ApplicationComponents(context: Context) extends BuiltInComponentsFromContext(context) {\n  lazy val hogeService = new HogeService\n  lazy val database = Database.forConfig(\"slick.dbs.default.db\")\n  lazy val applicationController = new Application(database, hogeService)\n  lazy val assets = new controllers.Assets(httpErrorHandler)\n\n  override lazy val router = new router.Routes(httpErrorHandler, applicationController, assets, \"/\")\n}\n```\n\napplication.conf \u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e ApplicationLoader \u306e\u4ee3\u308f\u308a\u306b `SimpleApplicationLoader` \u3092\u5229\u7528\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```\nplay.application.loader = \"app.SimpleApplicationLoader\"\n```\n\n\u3055\u3089\u306b\u3001build.sbt \u306b\u4ee5\u4e0b\u306e\u884c\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```scala\nroutesGenerator := InjectedRoutesGenerator\n```\n\n\n\u4ee5\u4e0a\u306e\u5b9f\u88c5\u3068\u8a2d\u5b9a\u3067\u8d77\u52d5\u6642\u306b `SimpleApplicationLoader` \u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001`ApplicationComponents` \u3067\u5fc5\u8981\u306a\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n`ApplicationComponents` \u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u305f\u30af\u30e9\u30b9\u306f\u307b\u307c\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u72b6\u614b\u3092\u6301\u3064\u3088\u3046\u306a\u5b9f\u88c5\u306f\u3059\u308b\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n\n\u30c6\u30b9\u30c8\u7528\u306e ApplicationLoader \u306e\u5b9f\u88c5\n---\n\n\u6b21\u306b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u7528\u306e ApplicationLoader \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u3053\u308c\u306f `SimpleApplicationLoader` \u3068\u5168\u304f\u540c\u3058\u3067\u69cb\u3044\u307e\u305b\u3093\u3002\u3053\u3053\u3067\u306f\u3001`HogeService` \u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\u3068\u3057\u307e\u3059\u3002\n\n```scala\nclass TestApplicationLoader extends ApplicationLoader {\n  def load(context: Context) = {\n    new TestApplicationComponents(context).application\n  }\n}\n\nclass TestApplicationComponents(context: Context) extends BuiltInComponentsFromContext(context) {\n  lazy val hogeService: HogeService = new MockHogeService                // use Mock\n  lazy val database = Database.forDriver(org.h2.Driver.load(), \"jdbc:h2:mem:test1;MODE=MYSQL;DB_CLOSE_DELAY=-1\")\n  lazy val applicationController = new Application(database, hogeService)\n  lazy val assets = new controllers.Assets(httpErrorHandler)\n\n  override lazy val router = new router.Routes(httpErrorHandler, applicationController, assets, \"/\")\n}\n```\n\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3067 `TestApplicationLoader` \u3092\u4f7f\u3046\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001`WithApplicationLoader` \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```scala\nclass WithTestApplication extends WithApplicationLoader(new TestApplicationLoader)\n```\n\n\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```scala\n@RunWith(classOf[JUnitRunner])\nclass ApplicationSpec extends Specification with BeforeEach with AfterEach {\n\n  \"Application\" should {\n\n    \"\u6b63\u5e38\u7cfb\" in new WithTestApplication {\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(OK)\n    }\n  }\n}\n```\n\n\n\n\u30c6\u30b9\u30c8\u3054\u3068\u306b\u4f7f\u7528\u3059\u308b Mock \u3092\u5909\u3048\u308b\n---\n\n\u3053\u3053\u3067\u306f\u5fdc\u7528\u4f8b\u3068\u3057\u3066\u3001\u30c6\u30b9\u30c8\u3054\u3068\u306b Mock \u3092\u5909\u3048\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u78ba\u5b9f\u306b\u7570\u5e38\u7cfb\u306e\u8a66\u9a13\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u76ee\u6a19\u3068\u3057\u307e\u3059\u3002\n\n```scala\n@RunWith(classOf[JUnitRunner])\nclass ApplicationSpec extends Specification with BeforeEach with AfterEach {\n\n  \"Application\" should {\n\n    \"\u6b63\u5e38\u7cfb\" in new WithTestApplication {\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(OK)\n    }\n    \"\u7570\u5e38\u7cfb\" in new WithTestApplication {\n      // TODO \u3069\u3046\u3057\u3088\u3046\u2026\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(BAD_REQUEST)\n    }\n  }\n}\n```\n\n`HogeService` \u306e Mock \u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```scala\npackage test.mock\n// \u6b63\u5e38\u7cfb\nclass MockHogeService extends HogeService {...}\n// \u7570\u5e38\u7cfb\nclass IrregularMockHogeService extends HogeService {...}\n```\n\n`TestApplicationComponents` \u3092\u3001\u30af\u30e9\u30b9\u540d(\u6587\u5b57\u5217)\u3067 `HogeService` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u540d\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5916\u90e8\u304b\u3089\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```scala\nclass TestApplicationLoader(overrides: Map[String, String]) extends ApplicationLoader {\n  def load(context: Context) = {\n    new TestApplicationComponents(context, overrides).application\n  }\n}\n\nclass TestApplicationComponents(context: Context, overrides: Map[String, String]) extends BuiltInComponentsFromContext(context) {\n\n  lazy val defaultClasses = Map(\"hogeService\" -> \"service.HogeService\")\n  lazy val overridden = defaultClasses ++ overrides\n\n  lazy val hogeService: HogeService = construct(overridden(\"hogeService\"))\n  lazy val database = Database.forDriver(org.h2.Driver.load(), \"jdbc:h2:mem:test1;MODE=MYSQL;DB_CLOSE_DELAY=-1\")\n  lazy val applicationController = new Application(database, hogeService)\n  lazy val assets = new controllers.Assets(httpErrorHandler)\n\n  override lazy val router = new router.Routes(httpErrorHandler, applicationController, assets, \"/\")\n\n  def construct[T](className: String): T = Class.forName(className).getConstructor().newInstance().asInstanceOf[T]\n}\n\nclass WithTestApplication(overrides: Map[String, String] = Map.empty[String, String]) extends WithApplicationLoader(new TestApplicationLoader(overrides))\n```\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```scala\n@RunWith(classOf[JUnitRunner])\nclass ApplicationSpec extends Specification with BeforeEach with AfterEach {\n\n  \"Application\" should {\n\n    \"\u6b63\u5e38\u7cfb\" in new WithTestApplication(Map(\"hogeService\" -> \"test.mock.MockHogeService\")) {\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(OK)\n    }\n    \"\u7570\u5e38\u7cfb\" in new WithTestApplication(Map(\"hogeService\" -> \"test.mock.IrregularMockHogeService\")) {\n      val home = route(FakeRequest(GET, \"/\")).get\n      status(home) must equalTo(BAD_REQUEST)\n    }\n  }\n}\n```\n\n\n\u53c2\u8003\n---\n\n* Compile Time Dependency Injection\n * https://www.playframework.com/documentation/2.4.x/ScalaCompileTimeDependencyInjection\n* Compile Time Dependency Injection with Play 2.4\n * http://loicdescotte.github.io/posts/play24-compile-time-di/\n", "tags": ["Scala", "PlayFramework"]}