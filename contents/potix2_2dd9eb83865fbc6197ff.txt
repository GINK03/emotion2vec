{"context": " More than 1 year has passed since last update.Apache Spark Advent Calendar 2015 20\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\uff08\u5927\u9045\u523b\u3067\u3059\u307f\u307e\u305b\u3093\u3002\u3002\u3002\uff09\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001DataFrame API\u3092\u901a\u3057\u3066\u30ab\u30b9\u30bf\u30e0DataSource\u3078\u63a5\u7d9a\u3059\u308b\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n0. \u65b0\u305f\u306aDataSource\u3092\u66f8\u304d\u59cb\u3081\u308b\u524d\u306b\n\u65e2\u306b\u5b9f\u88c5\u6e08\u307f\u306eDataSource\u3067\u306f\u306a\u3044\u304b\u78ba\u8a8d\u3059\u308b\u306e\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002Spark\u7d44\u307f\u8fbc\u307f\u306eDataSource\u3068\u3057\u3066\u4e0b\u8a18\u306e4\u3064\u304c\u3042\u308a\u307e\u3059\u3002\n\nJSON\nParquet\nJDBC/ODBC\nHive(\u4eca\u56de\u306e\u89e3\u8aac\u3068\u306f\u7570\u306a\u308b\u5b9f\u88c5)\n\nhttp://spark.apache.org/docs/latest/sql-programming-guide.html#data-sources\n\u307e\u305f\u3001spark-packages.org\u306b\u306fSpark\u30e6\u30fc\u30b6\u30fc\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u958b\u767a\u3055\u308c\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002cassandra\u3084redshift\u306a\u3069\u30ab\u30b9\u30bf\u30e0DataSource\u3082\u591a\u6570\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u5fc5\u8981\u3068\u3057\u3066\u3044\u308bDataSource\u304c\u65e2\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3092\u3053\u3053\u304b\u3089\u78ba\u8a8d\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n1. \u4f5c\u308b\u3082\u306e\u306e\u78ba\u8a8d\n\u65e2\u5b58\u306e\u5b9f\u88c5\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u81ea\u5206\u3067DataSource\u3078\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u958b\u767a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001spark-csv\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\u30ab\u30b9\u30bf\u30e0DataSource\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\nDataSource\u306e\u6307\u5b9a\u65b9\u6cd5\u306e\u304a\u3055\u3089\u3044\nparquet \u306a\u3069\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bDataSource\u306f\u3001\nval df = sqlContext.read\n    .load(\"/path/to/my.parquet\")\n\ndf.select(\"name\", \"age\").write\n    .save(\"/path/to/nameAndAge.parquet\")\n\n\u3068\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002DataSource\u3092\u660e\u793a\u3059\u308b\u5834\u5408\u306f\u3001 format()\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nval df = sqlContext.read\n    .format(\"json\")\n    .load(\"/path/to/input\")\n\ndf.select(\"name\", \"age\").write\n    .format(\"parquet\")\n    .save(\"nameAndAge.parquet\")\n\nformat()\u306e\u5f15\u6570\u306b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306eDataSource\u540d\u304b\u30ab\u30b9\u30bf\u30e0DataSource\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001spark-csv\u3092\u4f7f\u3046\u306b\u306f\nval df = sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .load(\"/path/to/my.csv\")\n\ndf.select(\"name\", \"age\").write\n    .format(\"com.databricks.spark.csv\")\n    .save(\"/path/to/nameAndAge.csv\")\n\n\u3068\u66f8\u304d\u307e\u3059\u3002\n\n2. Scala API\u306e\u5b9f\u88c5\n\u30ab\u30b9\u30bf\u30e0DataSource\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e2\u3064\u306e\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\nBaseRelation\u6d3e\u751f\u30af\u30e9\u30b9\n\nDefaultSource\u30af\u30e9\u30b9\n\nBaseRelation\u306fDataSource\u306e\u30b9\u30ad\u30fc\u30de\u4ed8\u304d\u30c7\u30fc\u30bf\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3059\u3002BaseRelation\u306e\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u306f\u30c7\u30fc\u30bf\u8aad\u8fbc\u307f\u3084\u66f8\u8fbc\u307f\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nDefaultSource\u30af\u30e9\u30b9\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u3068\u30ab\u30b9\u30bf\u30e0DataSource\u306e\u63a5\u70b9\u3068\u306a\u308a\u307e\u3059\u3002DataSource\u3078\u6e21\u3055\u308c\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3084\u30e6\u30fc\u30b6\u30fc\u6307\u5b9a\u306e\u30b9\u30ad\u30fc\u30de\u3092\u53d7\u3051\u53d6\u308a\u3001BaseRelation\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\nDefaultSource\u306e\u5b9f\u88c5\nDefaultSource\u30af\u30e9\u30b9\u306f\u3001format()\u3067\u6307\u5b9a\u3055\u308c\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u306e\u76f4\u4e0b\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002com.example.custom\u304c\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3060\u3068\u3057\u305f\u5834\u5408\u3001com.example.custom.DefaultSource\u306b\u306a\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306bDefaultSource\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\npackage com.example.custom\n\n// some import ...\n\nclass DefaultSource\n    extends RelationProvider\n    with SchemaRelationProvider\n    with CreatableRelationProvider {\n\n    // from RelationProvider\n    override def createRelation(sqlContext: SQLContext,\n                                parameters: Map[String, String]): BaseRelation = {\n        // ...\n    }\n\n    // from SchemaRelationProvider\n    override def createRelation(sqlContext: SQLContext,\n                                parameters: Map[String, String],\n                                schema: StructType): BaseRelation = {\n        // ...\n    }\n\n    // from CreatableRelationProvider\n    override def createRelation(sqlContext: SQLContext,\n                                mode: SaveMode,\n                                parameters: Map[String, String],\n                                data: DataFrame): BaseRelation = {\n        // ...\n    }\n}\n\n\n\u3053\u306e\u4f8b\u3067\u306f\u3001\n\nRelationProvider\nSchemaRelaionProvider\nCreatableRelationProvider\n\n\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002RealtionProvider\u306fDataSource\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u8fbc\u3080\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u5834\u5408\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002SchemaRelationProvider\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u6307\u5b9a\u3057\u305f\u30b9\u30ad\u30fc\u30de\u3092\u53d7\u3051\u53d6\u308c\u308b\u3053\u3068\u4ee5\u5916\u306fRelationProvider\u3068\u540c\u3058\u3067\u3059\u3002\n\nRelationProvider/SchemaRelationProvider\nRelationProvider\u3068SchemaRelationProvider\u306f\u3001org.apache.spark.sql.sources.interfaces.scala \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\ntrait RelationProvider {\n  def createRelation(\n      sqlContext: SQLContext,\n      parameters: Map[String, String]): BaseRelation\n}\n\ntrait SchemaRelationProvider {\n  def createRelation(\n      sqlContext: SQLContext,\n      parameters: Map[String, String],\n      schema: StructType): BaseRelation\n}\n\nRelationProvider\u304c\u63d0\u4f9b\u3059\u308bcreateRelation()\u306fDataSource\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\nsqlContext.read\n    .format(\"com.example.custom\")\n    .option(\"optionKey\", \"optionValue\")\n    .load(\"/path/to/datasource\")\n\n\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u3001com.example.custom.DefaultSource\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bRelationProvider\u306ecreateRelation()\u304c\u547c\u3073\u51fa\u3055\u307e\u3059\u3002parameters\u5f15\u6570\u306b\u306foption()\u3067\u6e21\u3057\u305fKey-Value\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001load()\u306e\u5f15\u6570\u306f\u3001path\u3068\u3044\u3046Key\u3067parameters\u304b\u3089\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001schema()\u3067\u30e6\u30fc\u30b6\u30fc\u6307\u5b9a\u306e\u30b9\u30ad\u30fc\u30de\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u3001SchemaRelationProvider\u304c\u63d0\u4f9b\u3059\u308bcreateRealtion()\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\nCreatableRelationProvider\nCreatableRelationProvider\u306f\u3001org.apache.spark.sql.sources.interfaces.scala \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\ntrait CreatableRelationProvider {\n  def createRelation(\n      sqlContext: SQLContext,\n      mode: SaveMode,\n      parameters: Map[String, String],\n      data: DataFrame): BaseRelation\n}\n\n\u3053\u306etrait\u3067\u306f\u3001data\u3092data source\u3078\u66f8\u8fbc\u3093\u3067BaseRelation\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002spack-csv\u3067\u306f\u3001data\u3092csv\u30d5\u30a1\u30a4\u30eb\u3078\u66f8\u304d\u8fbc\u3093\u3060\u5f8c\u306bSchemaRelationProvider\u306ecreateRelation()\u3092\u547c\u3073\u51fa\u3059\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nBaseRelation\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\nBaseRelation\u306f\u30b9\u30ad\u30fc\u30de\u4ed8\u304d\u30c7\u30fc\u30bf\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3001\u3044\u304f\u3064\u304b\u3042\u308bScan\u306etrait\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5b9f\u88c5\u53ef\u80fd\u306aScan\u30af\u30e9\u30b9\u306b\u306f\u3001\n\nTableScan\nPrunedScan\nPrunedFilteredScan\nInsertableRelation\nCatalystScan\n\n\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001spark-csv\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bTableScan\u3001PrunedScan\u3001InsertableRelation\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\nTableScan/PrunedScan\nTableScan\u3068PrunedScan\u306fdata source\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u8fbc\u307fRDD\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306eAPI\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002org.apache.spark.sql.sources.interfaces.scala \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\ntrait TableScan {\n  def buildScan(): RDD[Row]\n}\n\ntrait PrunedScan {\n  def buildScan(requiredColumns: Array[String]): RDD[Row]\n}\n\nbuildScan()\u3067\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6e21\u3055\u308c\u305f\u60c5\u5831\u3092\u3082\u3068\u306bdata source\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002PrunedScan\u306f\u4e0d\u8981\u306a\u30ab\u30e9\u30e0\u3092\u524a\u9664\u3057\u3066\u304b\u3089RDD\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306eAPI\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\nInsertableRelation\nInsertableRelation\u306fdata source\u3078\u66f8\u8fbc\u307f\u3059\u308bAPI\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002org.apache.spark.sql.sources.interfaces.scala \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\ntrait InsertableRelation {\n  def insert(data: DataFrame, overwrite: Boolean): Unit\n}\n\ninsert()\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001data\u3092data source\u3078\u66f8\u304d\u8fbc\u3080\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002overwrite\u304ctrue\u306e\u5834\u5408\u3001\u4e0a\u66f8\u304d\u3057false\u306e\u5834\u5408\u3001\u65e2\u5b58\u306e\u30c7\u30fc\u30bf\u306b\u8ffd\u8a18\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002spark-csv\u306e\u5b9f\u88c5\u3067\u306f\u3001CreatableRelationProvider\u306e\u5b9f\u88c5\u3068\u30d5\u30a1\u30a4\u30eb\u66f8\u8fbc\u307f\u306e\u51e6\u7406\u304c\u5171\u901a\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nCreatableRelationProvider\u3068InsertableRelation\u306f\u4f3c\u305f\u3088\u3046\u306atrait\u3067\u3059\u304c\u3001CreatableRelationProvider\u306fDataFrame API\u3067save()\u3057\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u3001InsertableRelation\u306fSparkSQL\u304b\u3089INSERT .. TABLE\u304c\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\ndf.write.format(\"...\").save(\"/path/to/file\")\n\n\u306e\u3088\u3046\u306aDataFrame API\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306fCreatableRelationProvider\u306ecreateRealtion()\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\nINSERT OVERWRITE TABLE sometable SELECT foo, bar, ...\n\n\u306e\u3088\u3046\u306aSparkSQL\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306f\u3001InsertableRelation\u306einsert()\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u8fba\u308a\u306f\u3001data source\u3092\u81ea\u4f5c\u3057\u305f\u969b\u306b\u975e\u5e38\u306b\u308f\u304b\u308a\u3065\u3089\u3044\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\n4. \u307e\u3068\u3081\n\u30ab\u30b9\u30bf\u30e0DataSource\u306f\u5b9f\u88c5\u3059\u308b\u3079\u304dtrait\u304c\u305d\u308c\u307b\u3069\u591a\u304f\u306a\u3044\u306e\u3067\u4ed5\u69d8\u304c\u5206\u304b\u3063\u3066\u3057\u307e\u3048\u3070\u6bd4\u8f03\u7684\u697d\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\u305f\u3060\u53c2\u8003\u306b\u3059\u308b\u30b3\u30fc\u30c9\u306b\u3088\u3063\u3066\u5b9f\u88c5\u65b9\u6cd5\uff08\u3068\u304f\u306b\u526f\u4f5c\u7528\u3092\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8d77\u3053\u3059\u304b\uff09\u304c\u307e\u3061\u307e\u3061\u3060\u3063\u305f\u308a\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u6574\u5099\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3068\u5c11\u3057\u30cf\u30fc\u30c9\u30eb\u304c\u9ad8\u3044\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306b\u3088\u3063\u3066\u3001\u65e5\u672c\u304b\u3089spark-packages.org\u3078\u767b\u9332\u3059\u308b\u4eba\u304c\u5897\u3048\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n5. \u53c2\u8003\u60c5\u5831\n\nspark-packages.org\nSpark SQL, DataFrames and Datasets Guide\nspark-csv\norg.apache.spark.sql.sources.interfaces.scala\n\n[Apache Spark Advent Calendar 2015](http://qiita.com/advent-calendar/2015/apache-spark) 20\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\uff08\u5927\u9045\u523b\u3067\u3059\u307f\u307e\u305b\u3093\u3002\u3002\u3002\uff09\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001DataFrame API\u3092\u901a\u3057\u3066\u30ab\u30b9\u30bf\u30e0DataSource\u3078\u63a5\u7d9a\u3059\u308b\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n# 0. \u65b0\u305f\u306aDataSource\u3092\u66f8\u304d\u59cb\u3081\u308b\u524d\u306b\n\n\u65e2\u306b\u5b9f\u88c5\u6e08\u307f\u306eDataSource\u3067\u306f\u306a\u3044\u304b\u78ba\u8a8d\u3059\u308b\u306e\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002Spark\u7d44\u307f\u8fbc\u307f\u306eDataSource\u3068\u3057\u3066\u4e0b\u8a18\u306e4\u3064\u304c\u3042\u308a\u307e\u3059\u3002\n\n* JSON\n* Parquet\n* JDBC/ODBC\n* Hive(\u4eca\u56de\u306e\u89e3\u8aac\u3068\u306f\u7570\u306a\u308b\u5b9f\u88c5)\n\nhttp://spark.apache.org/docs/latest/sql-programming-guide.html#data-sources\n\n\u307e\u305f\u3001[spark-packages.org](http://spark-packages.org/)\u306b\u306fSpark\u30e6\u30fc\u30b6\u30fc\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u958b\u767a\u3055\u308c\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002cassandra\u3084redshift\u306a\u3069\u30ab\u30b9\u30bf\u30e0DataSource\u3082\u591a\u6570\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u5fc5\u8981\u3068\u3057\u3066\u3044\u308bDataSource\u304c\u65e2\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3092[\u3053\u3053\u304b\u3089](http://spark-packages.org/?q=tags%3A%22Data%20Sources%22)\u78ba\u8a8d\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n# 1. \u4f5c\u308b\u3082\u306e\u306e\u78ba\u8a8d\n\n\u65e2\u5b58\u306e\u5b9f\u88c5\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u81ea\u5206\u3067DataSource\u3078\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u958b\u767a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001[`spark-csv`](https://github.com/databricks/spark-csv)\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\u30ab\u30b9\u30bf\u30e0DataSource\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n## DataSource\u306e\u6307\u5b9a\u65b9\u6cd5\u306e\u304a\u3055\u3089\u3044\n\n`parquet` \u306a\u3069\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bDataSource\u306f\u3001\n\n```scala\nval df = sqlContext.read\n    .load(\"/path/to/my.parquet\")\n\ndf.select(\"name\", \"age\").write\n    .save(\"/path/to/nameAndAge.parquet\")\n```\n\n\u3068\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002DataSource\u3092\u660e\u793a\u3059\u308b\u5834\u5408\u306f\u3001 `format()`\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```scala\nval df = sqlContext.read\n    .format(\"json\")\n    .load(\"/path/to/input\")\n\ndf.select(\"name\", \"age\").write\n    .format(\"parquet\")\n    .save(\"nameAndAge.parquet\")\n```\n\n`format()`\u306e\u5f15\u6570\u306b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306eDataSource\u540d\u304b\u30ab\u30b9\u30bf\u30e0DataSource\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001[`spark-csv`](https://github.com/databricks/spark-csv)\u3092\u4f7f\u3046\u306b\u306f\n\n```scala\nval df = sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .load(\"/path/to/my.csv\")\n\ndf.select(\"name\", \"age\").write\n    .format(\"com.databricks.spark.csv\")\n    .save(\"/path/to/nameAndAge.csv\")\n```\n\n\u3068\u66f8\u304d\u307e\u3059\u3002\n\n# 2. Scala API\u306e\u5b9f\u88c5\n\n\u30ab\u30b9\u30bf\u30e0DataSource\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e2\u3064\u306e\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n* `BaseRelation`\u6d3e\u751f\u30af\u30e9\u30b9\n* `DefaultSource`\u30af\u30e9\u30b9\n\n`BaseRelation`\u306fDataSource\u306e\u30b9\u30ad\u30fc\u30de\u4ed8\u304d\u30c7\u30fc\u30bf\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3059\u3002`BaseRelation`\u306e\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u306f\u30c7\u30fc\u30bf\u8aad\u8fbc\u307f\u3084\u66f8\u8fbc\u307f\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n`DefaultSource`\u30af\u30e9\u30b9\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u3068\u30ab\u30b9\u30bf\u30e0DataSource\u306e\u63a5\u70b9\u3068\u306a\u308a\u307e\u3059\u3002DataSource\u3078\u6e21\u3055\u308c\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3084\u30e6\u30fc\u30b6\u30fc\u6307\u5b9a\u306e\u30b9\u30ad\u30fc\u30de\u3092\u53d7\u3051\u53d6\u308a\u3001`BaseRelation`\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n## DefaultSource\u306e\u5b9f\u88c5\n\n`DefaultSource`\u30af\u30e9\u30b9\u306f\u3001`format()`\u3067\u6307\u5b9a\u3055\u308c\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u306e\u76f4\u4e0b\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002`com.example.custom`\u304c\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3060\u3068\u3057\u305f\u5834\u5408\u3001`com.example.custom.DefaultSource`\u306b\u306a\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306b`DefaultSource`\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n```scala\npackage com.example.custom\n\n// some import ...\n\nclass DefaultSource\n    extends RelationProvider\n    with SchemaRelationProvider\n    with CreatableRelationProvider {\n\n    // from RelationProvider\n    override def createRelation(sqlContext: SQLContext,\n                                parameters: Map[String, String]): BaseRelation = {\n        // ...\n    }\n\n    // from SchemaRelationProvider\n    override def createRelation(sqlContext: SQLContext,\n                                parameters: Map[String, String],\n                                schema: StructType): BaseRelation = {\n        // ...\n    }\n\n    // from CreatableRelationProvider\n    override def createRelation(sqlContext: SQLContext,\n                                mode: SaveMode,\n                                parameters: Map[String, String],\n                                data: DataFrame): BaseRelation = {\n        // ...\n    }\n}\n\n```\n\n\u3053\u306e\u4f8b\u3067\u306f\u3001\n\n* `RelationProvider`\n* `SchemaRelaionProvider`\n* `CreatableRelationProvider`\n\n\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002`RealtionProvider`\u306fDataSource\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u8fbc\u3080\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u5834\u5408\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002`SchemaRelationProvider`\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u6307\u5b9a\u3057\u305f\u30b9\u30ad\u30fc\u30de\u3092\u53d7\u3051\u53d6\u308c\u308b\u3053\u3068\u4ee5\u5916\u306f`RelationProvider`\u3068\u540c\u3058\u3067\u3059\u3002\n\n### RelationProvider/SchemaRelationProvider\n\n`RelationProvider`\u3068`SchemaRelationProvider`\u306f\u3001[`org.apache.spark.sql.sources.interfaces.scala`](https://github.com/apache/spark/blob/master/sql/core/src/main/scala/org/apache/spark/sql/sources/interfaces.scala) \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```scala\ntrait RelationProvider {\n  def createRelation(\n      sqlContext: SQLContext,\n      parameters: Map[String, String]): BaseRelation\n}\n\ntrait SchemaRelationProvider {\n  def createRelation(\n      sqlContext: SQLContext,\n      parameters: Map[String, String],\n      schema: StructType): BaseRelation\n}\n```\n\n`RelationProvider`\u304c\u63d0\u4f9b\u3059\u308b`createRelation()`\u306fDataSource\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\n\n```scala\nsqlContext.read\n    .format(\"com.example.custom\")\n    .option(\"optionKey\", \"optionValue\")\n    .load(\"/path/to/datasource\")\n```\n\n\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u3001`com.example.custom.DefaultSource`\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b`RelationProvider`\u306e`createRelation()`\u304c\u547c\u3073\u51fa\u3055\u307e\u3059\u3002`parameters`\u5f15\u6570\u306b\u306f`option()`\u3067\u6e21\u3057\u305fKey-Value\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001`load()`\u306e\u5f15\u6570\u306f\u3001`path`\u3068\u3044\u3046Key\u3067parameters\u304b\u3089\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u305f\u3001`schema()`\u3067\u30e6\u30fc\u30b6\u30fc\u6307\u5b9a\u306e\u30b9\u30ad\u30fc\u30de\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u3001`SchemaRelationProvider`\u304c\u63d0\u4f9b\u3059\u308b`createRealtion()`\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\n### CreatableRelationProvider\n\n`CreatableRelationProvider`\u306f\u3001[`org.apache.spark.sql.sources.interfaces.scala`](https://github.com/apache/spark/blob/master/sql/core/src/main/scala/org/apache/spark/sql/sources/interfaces.scala) \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```scala\ntrait CreatableRelationProvider {\n  def createRelation(\n      sqlContext: SQLContext,\n      mode: SaveMode,\n      parameters: Map[String, String],\n      data: DataFrame): BaseRelation\n}\n```\n\n\u3053\u306etrait\u3067\u306f\u3001`data`\u3092data source\u3078\u66f8\u8fbc\u3093\u3067BaseRelation\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002`spack-csv`\u3067\u306f\u3001`data`\u3092csv\u30d5\u30a1\u30a4\u30eb\u3078\u66f8\u304d\u8fbc\u3093\u3060\u5f8c\u306b`SchemaRelationProvider`\u306e`createRelation()`\u3092\u547c\u3073\u51fa\u3059\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n## BaseRelation\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\n\n`BaseRelation`\u306f\u30b9\u30ad\u30fc\u30de\u4ed8\u304d\u30c7\u30fc\u30bf\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3001\u3044\u304f\u3064\u304b\u3042\u308b`Scan`\u306etrait\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5b9f\u88c5\u53ef\u80fd\u306a`Scan`\u30af\u30e9\u30b9\u306b\u306f\u3001\n\n* TableScan\n* PrunedScan\n* PrunedFilteredScan\n* InsertableRelation\n* CatalystScan\n\n\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001`spark-csv`\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b`TableScan`\u3001`PrunedScan`\u3001`InsertableRelation`\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n### TableScan/PrunedScan\n\n`TableScan`\u3068`PrunedScan`\u306fdata source\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u8fbc\u307fRDD\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306eAPI\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002[`org.apache.spark.sql.sources.interfaces.scala`](https://github.com/apache/spark/blob/master/sql/core/src/main/scala/org/apache/spark/sql/sources/interfaces.scala) \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```scala\ntrait TableScan {\n  def buildScan(): RDD[Row]\n}\n\ntrait PrunedScan {\n  def buildScan(requiredColumns: Array[String]): RDD[Row]\n}\n```\n\n`buildScan()`\u3067\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6e21\u3055\u308c\u305f\u60c5\u5831\u3092\u3082\u3068\u306bdata source\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002`PrunedScan`\u306f\u4e0d\u8981\u306a\u30ab\u30e9\u30e0\u3092\u524a\u9664\u3057\u3066\u304b\u3089RDD\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306eAPI\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n### InsertableRelation\n\n`InsertableRelation`\u306fdata source\u3078\u66f8\u8fbc\u307f\u3059\u308bAPI\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002[`org.apache.spark.sql.sources.interfaces.scala`](https://github.com/apache/spark/blob/master/sql/core/src/main/scala/org/apache/spark/sql/sources/interfaces.scala) \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```scala\ntrait InsertableRelation {\n  def insert(data: DataFrame, overwrite: Boolean): Unit\n}\n```\n\n`insert()`\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001`data`\u3092data source\u3078\u66f8\u304d\u8fbc\u3080\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002`overwrite`\u304ctrue\u306e\u5834\u5408\u3001\u4e0a\u66f8\u304d\u3057false\u306e\u5834\u5408\u3001\u65e2\u5b58\u306e\u30c7\u30fc\u30bf\u306b\u8ffd\u8a18\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002`spark-csv`\u306e\u5b9f\u88c5\u3067\u306f\u3001`CreatableRelationProvider`\u306e\u5b9f\u88c5\u3068\u30d5\u30a1\u30a4\u30eb\u66f8\u8fbc\u307f\u306e\u51e6\u7406\u304c\u5171\u901a\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n`CreatableRelationProvider`\u3068`InsertableRelation`\u306f\u4f3c\u305f\u3088\u3046\u306atrait\u3067\u3059\u304c\u3001`CreatableRelationProvider`\u306fDataFrame API\u3067`save()`\u3057\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u3001`InsertableRelation`\u306fSparkSQL\u304b\u3089`INSERT .. TABLE`\u304c\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\n\n```scala\ndf.write.format(\"...\").save(\"/path/to/file\")\n```\n\n\u306e\u3088\u3046\u306aDataFrame API\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306f`CreatableRelationProvider`\u306e`createRealtion()`\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\n```sql\nINSERT OVERWRITE TABLE sometable SELECT foo, bar, ...\n```\n\n\u306e\u3088\u3046\u306aSparkSQL\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306f\u3001`InsertableRelation`\u306e`insert()`\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u8fba\u308a\u306f\u3001data source\u3092\u81ea\u4f5c\u3057\u305f\u969b\u306b\u975e\u5e38\u306b\u308f\u304b\u308a\u3065\u3089\u3044\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\n\n# 4. \u307e\u3068\u3081\n\n\u30ab\u30b9\u30bf\u30e0DataSource\u306f\u5b9f\u88c5\u3059\u308b\u3079\u304dtrait\u304c\u305d\u308c\u307b\u3069\u591a\u304f\u306a\u3044\u306e\u3067\u4ed5\u69d8\u304c\u5206\u304b\u3063\u3066\u3057\u307e\u3048\u3070\u6bd4\u8f03\u7684\u697d\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\u305f\u3060\u53c2\u8003\u306b\u3059\u308b\u30b3\u30fc\u30c9\u306b\u3088\u3063\u3066\u5b9f\u88c5\u65b9\u6cd5\uff08\u3068\u304f\u306b\u526f\u4f5c\u7528\u3092\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8d77\u3053\u3059\u304b\uff09\u304c\u307e\u3061\u307e\u3061\u3060\u3063\u305f\u308a\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u6574\u5099\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3068\u5c11\u3057\u30cf\u30fc\u30c9\u30eb\u304c\u9ad8\u3044\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306b\u3088\u3063\u3066\u3001\u65e5\u672c\u304b\u3089[spark-packages.org](http://spark-packages.org/)\u3078\u767b\u9332\u3059\u308b\u4eba\u304c\u5897\u3048\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n# 5. \u53c2\u8003\u60c5\u5831\n\n* [spark-packages.org](http://spark-packages.org/)\n* [Spark SQL, DataFrames and Datasets Guide](http://spark.apache.org/docs/latest/sql-programming-guide.html#data-sources)\n* [spark-csv](https://github.com/databricks/spark-csv)\n* [org.apache.spark.sql.sources.interfaces.scala](https://github.com/apache/spark/blob/master/sql/core/src/main/scala/org/apache/spark/sql/sources/interfaces.scala)\n", "tags": ["Spark", "Scala", "DataFrame"]}