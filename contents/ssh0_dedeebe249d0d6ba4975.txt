{"tags": ["Linux", "Ubuntu", "xmonad"], "context": " More than 1 year has passed since last update.(\u8ffd\u8a18\uff1a2015/03/11 \u65b0\u305f\u306b\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\u73fe\u5728\u306f\u3053\u3061\u3089\u306e\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002)\n\u4ee5\u524d\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3068\u3057\u3066\u30bf\u30a4\u30eb\u578bWM\u306eawesome\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u73fe\u5728\u306f\u540c\u3058\u304f\u30bf\u30a4\u30eb\u578b\u306eWM\u3067\u3042\u308bxmonad\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u305d\u306e\u8a2d\u5b9a\u3092\u6652\u3059\u3053\u3068\u306b\u3057\u307e\u3059\u3002\nawesome\u304b\u3089xmonad\u306b\u79fb\u884c\u3057\u305f\u7406\u7531\u306f2\u3064\u3002\n\n\u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u5bfe\u5fdc\u306e\u5dee\n\u30bf\u30a4\u30eb\u9593\u306e\u30b9\u30da\u30fc\u30b9\u8868\u793a\n\n1\u306b\u95a2\u3057\u3066\u306f\u3001\u81ea\u5206\u306e\u8a2d\u5b9a\u304c\u826f\u304f\u306a\u304b\u3063\u305f\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001awesome\u3067\u306f\u3069\u3046\u3057\u3066\u3082\u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u74b0\u5883\u3067\u3046\u307e\u304f\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u305d\u306e\u70b9xmonad\u306f\u6700\u521d\u304b\u3089\u304d\u3061\u3093\u3068\u8868\u793a\u3057\u3066\u304f\u308c\u3001\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u3053\u3068\u3082\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u826f\u3044\u3067\u3059\u3002\n2\u3067awesome\u304b\u3089xmonad\u306b\u79fb\u884c\u3057\u305f\u4eba\u306f\u591a\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059(\u7b11)\u3044\u3084\u3001\u3060\u3063\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u8272\u3005\u898b\u3066\u305f\u3089\u3001\u30bf\u30a4\u30eb\u306e\u9593\u306b\u30b9\u30da\u30fc\u30b9\u3042\u308b\u306e\u3001\u3059\u3054\u304f\u304b\u3063\u3053\u3088\u304f\u898b\u3048\u305f\u3093\u3067\u3059\u3082\u3093\u3002\u305d\u308a\u3083\u4f7f\u3044\u305f\u304f\u306a\u308a\u307e\u3059\u3088\u3002\nxmonad\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u306f\u4f55\u4eba\u304b\u306e\u65b9\u304c\u65e2\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4e00\u3064\u91cd\u306d\u3066\u6ce8\u610f\u3059\u308b\u3068\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u304b\u3089\u3068\u8a00\u3063\u3066\u3059\u3050\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u8a66\u3057\u3066\u307f\u308b\u306e\u306f\u3084\u3081\u307e\u3057\u3087\u3046\u3002\u521d\u671f\u72b6\u614b\u3067\u306f\u58c1\u7d19\u3059\u3089\u8868\u793a\u3055\u308c\u305a\u3001\u64cd\u4f5c\u65b9\u6cd5\u3082\u308f\u304b\u3089\u306a\u3044\u305f\u3081\u7d50\u5c40\u518d\u8d77\u52d5\u3055\u305b\u308b\u306f\u3081\u306b\u306a\u3063\u305f\u308a\u3057\u307e\u3059\uff08\u7d4c\u9a13\u8ac7\uff09\u3002\u9038\u308b\u6c17\u6301\u3061\u3092\u6291\u3048\u3066\u3001\u304d\u3061\u3093\u3068\u4ed6\u306e\u74b0\u5883\u3067\u8aac\u660e\u3092\u8aad\u307f\u306a\u304c\u3089\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u3082\u3057\u304f\u306f\u6700\u521d\u304b\u3089\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u3044\u3066\u304a\u3044\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u3067\u306f\u3001xmonad\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b~/.xmonad/xmonad.hs\u306e\u8a2d\u5b9a\u3068\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fcxmobar\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb~/.xmonad/xmobarrc\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nxmonad\u306e\u8a2d\u5b9a\n\n~/.xmonad/xmonad.hs\n\nimport qualified Data.Map as M\n\nimport XMonad\nimport qualified XMonad.StackSet as W  -- myManageHookShift\n\nimport Control.Monad (liftM2)          -- myManageHookShift\nimport System.IO                       -- for xmobar\n\nimport XMonad.Actions.WindowGo\nimport XMonad.Actions.CycleWS\nimport XMonad.Hooks.DynamicLog         -- for xmobar\nimport XMonad.Hooks.EwmhDesktops\nimport XMonad.Hooks.FadeWindows\nimport XMonad.Hooks.ManageDocks        -- avoid xmobar area\nimport XMonad.Hooks.Place\nimport XMonad.Layout\nimport XMonad.Layout.DragPane          -- see only two window\nimport XMonad.Layout.Gaps\nimport XMonad.Layout.IM\nimport XMonad.Layout.Magnifier         -- this makes window bigger\nimport XMonad.Layout.MultiToggle\nimport XMonad.Layout.MultiToggle.Instances\nimport XMonad.Layout.Named\nimport XMonad.Layout.NoBorders         -- In Full mode, border is no use\nimport XMonad.Layout.ResizableTile     -- Resizable Horizontal border\nimport XMonad.Layout.Spacing           -- this makes smart space around windows\nimport XMonad.Layout.Tabbed\nimport XMonad.Layout.ThreeColumns      -- for many windows\nimport XMonad.Layout.ToggleLayouts     -- Full window at any time\nimport XMonad.Util.EZConfig            -- removeKeys, additionalKeys\nimport XMonad.Util.Run(spawnPipe)      -- spawnPipe, hPutStrLn\nimport XMonad.Util.Run\n\nimport Graphics.X11.ExtraTypes.XF86\n\ntall = ResizableTall 1 (3/100) (1/2) []\n\nmyWorkspaces = [\"  main  \", \"  browser  \", \"  media  \", \"  work  \", \"  tray  \"]\nmodm = mod4Mask\n\ncolorBlue      = \"#857da9\"\ncolorGreen     = \"#88b986\"\ncolorGray      = \"#676767\"\ncolorWhite     = \"#d3d7cf\"\ncolorGrayAlt   = \"#313131\"\ncolorNormalbg  = \"#1a1e1b\"\n\n-- Define keys to remove\nkeysToRemove x =\n    [\n        -- Unused gmrun binding\n          (modm .|. shiftMask, xK_p)\n        -- Unused close window binding\n        , (modm .|. shiftMask, xK_c)\n        , (modm .|. shiftMask, xK_Return)\n    ]\n\n-- Delete the keys combinations we want to remove.\nstrippedKeys x = foldr M.delete (keys defaultConfig x) (keysToRemove x)\n\nmain :: IO ()\n\nmain = do\n    wsbar <- spawnPipe myWsBar\n    xmonad $ defaultConfig\n       { borderWidth = 2\n       , terminal = \"urxvt\"\n       , normalBorderColor = colorGray\n       , focusedBorderColor = colorGreen\n       , startupHook = myStartupHook\n       , manageHook = placeHook myPlacement <+> myManageHookShift <+> myManageHookFloat <+> manageDocks\n        -- any time Full mode, avoid xmobar area\n       , layoutHook = toggleLayouts (noBorders Full) $ avoidStruts $ myLayout\n        -- xmobar setting\n       , logHook = myLogHook wsbar\n       , handleEventHook = fadeWindowsEventHook\n       , workspaces = myWorkspaces\n       , modMask = modm }\n\n       `additionalKeys`\n       [ ((modm              , xK_f     ), sendMessage ToggleLayout)\n       , ((modm              , xK_g     ), sendMessage ToggleGaps)\n       , ((modm              , xK_l     ), sendMessage MirrorShrink)\n       , ((modm              , xK_h     ), sendMessage MirrorExpand)\n       , ((modm              , xK_Right ), nextWS ) -- go to next workspace\n       , ((modm              , xK_Left  ), prevWS ) -- go to prev workspace\n       , ((modm .|. shiftMask, xK_Right ), shiftToNext)\n       , ((modm .|. shiftMask, xK_Left  ), shiftToPrev)\n       , ((modm              , xK_comma ), sendMessage MagnifyLess)   -- smaller window\n       , ((modm              , xK_period), sendMessage MagnifyMore)  -- bigger window\n       , ((modm              , xK_j     ), windows W.focusDown)\n       , ((modm              , xK_k     ), windows W.focusUp)\n       , ((modm .|. shiftMask, xK_j     ), windows W.swapDown)\n       , ((modm .|. shiftMask, xK_k     ), windows W.swapUp)\n       , ((modm              , xK_w     ), nextScreen) ]\n\n       `additionalKeys`\n       [ ((modm .|. m, k), windows $ f i)\n         | (i, k) <- zip myWorkspaces\n                     [ xK_exclam, xK_at, xK_numbersign\n                     , xK_dollar, xK_percent, xK_asciicircum\n                     , xK_ampersand, xK_asterisk, xK_parenleft\n                     , xK_parenright\n                     ]\n       , (f, m) <- [(W.greedyView, 0), (W.shift, shiftMask)]\n       ]\n\n       `additionalKeys`\n       [ ((mod1Mask .|. controlMask, xK_l      ), spawn \"xscreensaver-command -lock\")\n       , ((modm                    , xK_Return ), spawn \"urxvt\")\n       , ((modm                    , xK_c      ), kill) -- %! Close the focused window\n       , ((modm                    , xK_p      ), spawn \"exe=`dmenu_run -nb '#1a1e1b' -nf '#d3d7cf' -sb '#88b986' -sf '#1a1e1b'` && exec $exe\")\n       , ((mod1Mask .|. controlMask, xK_f      ), spawn \"python /home/ssh0/Workspace/python/web_search/websearch.py\")\n       , ((0                       , 0x1008ff13), spawn \"amixer -D pulse set Master 5%+ && paplay /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga\")\n       , ((0                       , 0x1008ff11), spawn \"amixer -D pulse set Master 5%- && paplay /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga\")\n       , ((0                       , 0x1008ff12), spawn \"amixer -D pulse set Master toggle\")\n        -- Brightness Keys\n       , ((0                       , 0x1008FF02), spawn \"xbacklight + 10\")\n       , ((0                       , 0x1008FF03), spawn \"xbacklight - 10\")\n\n       ]\n\n-- Handle Window behaveior\nmyLayout = (spacing 18 $ ResizableTall 1 (3/100) (3/5) [])\n            |||  (spacing 2 $ (dragPane Horizontal (1/10) (1/2)))\n            |||  (dragPane Vertical   (1/10) (1/2))\n\n\n-- Start up (at xmonad beggining), like \"wallpaper\" or so on\nmyStartupHook = do\n        spawn \"gnome-settings-daemon\"\n        spawn \"nm-applet\"\n        spawn \"gnome-sound-applet\"\n        spawn \"xscreensaver -no-splash\"\n        spawn \"feh --bg-fill /media/ssh0/STOCK/Pictures/wallpapers/Abstract-gauss.jpg\"\n        spawn \"compton --config /home/ssh0/.config/compton/compton.conf -b\"\n        spawn \"/home/ssh0/.dropbox-dist/dropboxd\"\n\n-- some window must created there\nmyManageHookShift = composeAll\n            -- if you want to know className, type \"$ xprop|grep CLASS\" on shell\n            [ className =? \"Firefox\"   --> doShift \"  browser  \"\n            , className =? \"Mplayer\"   --> doShift \"  media  \"\n            ]\n--             where viewShift = doF . liftM2 (.) W.view W.shift\n\n-- new window will created in Float mode\nmyManageHookFloat = composeAll\n            [ className =? \"MPlayer\"          --> doFloat,\n              className =? \"Gimp\"             --> doFloat,\n              className =? \"Websearch.py\"     --> doFloat,\n              className =? \"Plugin-container\" --> doFloat,\n              title     =? \"Speedbar\"         --> doFloat]\n\n\nmyLogHook h = dynamicLogWithPP $ wsPP { ppOutput = hPutStrLn h }\n\nmyWsBar = \"xmobar /home/ssh0/.xmonad/xmobarrc\"\n\nwsPP = xmobarPP { ppOrder               = \\(ws:l:t:_)   -> [ws,t]\n                , ppCurrent             = xmobarColor   colorGreen       colorNormalbg\n                , ppUrgent              = xmobarColor   colorWhite       colorNormalbg\n                , ppVisible             = xmobarColor   colorWhite       colorNormalbg\n                , ppHidden              = xmobarColor   colorWhite       colorNormalbg\n                , ppHiddenNoWindows     = xmobarColor   colorGray        colorNormalbg\n                , ppTitle               = xmobarColor   colorWhite       colorNormalbg\n                , ppWsSep               = \"\"\n                , ppSep                 = \"  ::: \"\n                }\n\nmyPlacement = fixed (0.5, 0.5)\n\n\n\n\u306f\u3058\u3081\u306b\u3044\u308d\u3044\u308d\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u304b\u3089\u6301\u3063\u3066\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u591a\u5206\u3044\u3089\u306a\u3044\u5974\u305f\u304f\u3055\u3093\u5165\u3063\u3066\u307e\u3059(\u7b11)\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fAlt\u30ad\u30fc(mod1Mask)\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308bmod\u30ad\u30fc\u3092Windows\u30ad\u30fc/Super\u30ad\u30fc(mod4Mask)\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u3066\u3044\u308b\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u306f\u4ee5\u4e0b\n\n\n\u30ad\u30fc\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\n\n\nCtrl + Alt + l\n\u30b9\u30af\u30ea\u30fc\u30f3\u3092\u30ed\u30c3\u30af\n\n\nSuper + Return\n\u7aef\u672burxvt\u3092\u8d77\u52d5\n\n\nSuper + c\n\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u524a\u9664\n\n\nSuper + p\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30e9\u30f3\u30c1\u30e3\u30fcdmenu\u3092\u8d77\u52d5\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u8272\u306e\u8a2d\u5b9a\n\n\nCtrl + Alt + f\n [\u4ee5\u524d\u306b\u4f5c\u6210\u3057\u305f\u7c21\u6613\u691c\u7d22\u30d0\u30fcwebsearch.py](http://qiita.com/ssh0/items/7e70c8f72a0fa03df4b0)\u3092\u8d77\u52d5\n\n\n\u97f3\u91cf\u30a2\u30c3\u30d7\u30dc\u30bf\u30f3(0x1008ff13)\n\u97f3\u91cf\u3092\u4e0a\u3052\u3066unity\u74b0\u5883\u3068\u540c\u3058\u97f3\u3067\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\n\n\n\u97f3\u91cf\u30c0\u30a6\u30f3\u30dc\u30bf\u30f3(0x1008ff11)\n\u97f3\u91cf\u3092\u4e0b\u3052\u3066unity\u74b0\u5883\u3068\u540c\u3058\u97f3\u3067\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\n\n\n\u30df\u30e5\u30fc\u30c8\u30dc\u30bf\u30f3(0x1008ff12)\n\u97f3\u91cf\u3092\u30df\u30e5\u30fc\u30c8\n\n\n\u8f1d\u5ea6\u30a2\u30c3\u30d7\u30dc\u30bf\u30f3(0x1008FF02)\nxbacklight\u3092\u4f7f\u3063\u3066\u753b\u9762\u306e\u660e\u308b\u3055\u3092\u4e0a\u3052\u308b\n\n\n\u8f1d\u5ea6\u30c0\u30a6\u30f3\u30dc\u30bf\u30f3(0x1008FF03)\nxbacklight\u3092\u4f7f\u3063\u3066\u753b\u9762\u306e\u660e\u308b\u3055\u3092\u4e0b\u3052\u308b\n\n\nSuper + f\n\u5168\u753b\u9762\u8868\u793a\u306b\u3059\u308b\u304b\u306e\u5207\u308a\u66ff\u3048\n\n\nSuper + l\n(\u7e26\u306b\u4e26\u3093\u3060)\u30bf\u30a4\u30eb\u306e\u7e26\u65b9\u5411\u3092\u77ed\u304f\u3059\u308b\n\n\nSuper + h\n(\u7e26\u306b\u4e26\u3093\u3060)\u30bf\u30a4\u30eb\u306e\u7e26\u65b9\u5411\u3092\u9577\u304f\u3059\u308b\n\n\nSuper + Right\n\u6b21(\u53f3)\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u79fb\u52d5\u3059\u308b\n\n\nSuper + Left\n\u524d(\u5de6)\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u79fb\u52d5\u3059\u308b\n\n\nSuper + Shift + Right\n\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6b21\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u79fb\u52d5\n\n\nSuper + Shift + Left\n\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u524d\u306b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u79fb\u52d5\n\n\nSuper + j\n\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u6b21\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u79fb\u3059\n\n\nSuper + k\n\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u524d\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u79fb\u3059\n\n\nSuper + Shift + j\n\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6b21\u306e\u30bf\u30a4\u30eb\u914d\u7f6e\u306b\u79fb\u3059\n\n\nSuper + Shift + k\n\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u524d\u306e\u30bf\u30a4\u30eb\u914d\u7f6e\u306b\u79fb\u3059\n\n\nSuper + w\n\u6b21\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u79fb\u3059\n\n\n\u500b\u4eba\u7684\u306b\u597d\u304d\u306a\u30ec\u30a4\u30a2\u30a6\u30c8\nspacing 18 $ ResizableTall 1 (3/100) (3/5) []\n\n\u30bf\u30a4\u30eb\u9593\u306e\u30b9\u30da\u30fc\u30b918pt\u30012\u500b\u4ee5\u964d\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u5168\u3066\u53f3\u5074\u306b\u3002\u6a2a\u306e\u6bd4\u7387\u306f3\u5bfe2\n\u305d\u306e\u4ed6\u306bFloat\u914d\u7f6e\u306b\u3059\u308b\u3082\u306e\u3092\u6307\u5b9a\u3057\u305f\u308a\u3001\u8868\u793a\u3059\u308b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u3092\u6307\u5b9a\u3057\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\nmyStartupHook\u3067\u30ed\u30b0\u30a4\u30f3\u5f8c\u3059\u3050\u306b\u81ea\u52d5\u3067\u8d77\u52d5\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3002xscreensaver\u3068\u304bdropbox\u3068\u304b\u3002\u58c1\u7d19\u306e\u6307\u5b9a\u3082\u3053\u3053\u3067\u884c\u3044\u307e\u3059\u3002\n\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\n\n\n\nxmobar\u306e\u8a2d\u5b9a\n~/xmonad/xmonad.hs\u306emain\u306e\u5b9a\u7fa9\u306e\u4e2d\u3067\nwsbar <- spawnPipe myWsBar\nxmonad $ defaultConfig\n       {\n       ...\n        -- xmobar setting\n       , logHook = myLogHook wsbar\n       ...\n       }\n\n\u3068\u3057\u3066\u304a\u3044\u3066\u3001\u305d\u306e\u4e2d\u8eab\u306f\nmyLogHook h = dynamicLogWithPP $ wsPP { ppOutput = hPutStrLn h }\n\nmyWsBar = \"xmobar /home/ssh0/.xmonad/xmobarrc\"\n\nwsPP = xmobarPP { ppOrder               = \\(ws:l:t:_)   -> [ws,t]\n                , ppCurrent             = xmobarColor   colorGreen       colorNormalbg\n                , ppUrgent              = xmobarColor   colorWhite       colorNormalbg\n                , ppVisible             = xmobarColor   colorWhite       colorNormalbg\n                , ppHidden              = xmobarColor   colorWhite       colorNormalbg\n                , ppHiddenNoWindows     = xmobarColor   colorGray        colorNormalbg\n                , ppTitle               = xmobarColor   colorWhite       colorNormalbg\n                , ppWsSep               = \"\"\n                , ppSep                 = \"  ::: \"\n                }\n\n\u3068\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067xmobar\u306e\u8272\u3084\u8868\u793a\u3059\u308b\u8981\u7d20\u306e\u9078\u629e\u304c\u3067\u304d\u307e\u3059\u3002\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u8868\u793a\u306f\u90aa\u9b54\u306a\u306e\u3067\u6d88\u3057\u307e\u3057\u305f\u3002\n\u7d71\u4e00\u611f\u3092\u51fa\u3059\u305f\u3081\u306b\u8272\u306b\u306f\u3053\u3060\u308f\u3063\u3066\u3044\u307e\u3059\u3002\n~/.xmonad/xmobarrc\u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30d5\u30a9\u30f3\u30c8\u306f\u65e5\u672c\u8a9e\u8868\u793a\u3057\u3066\u3082\u6587\u5b57\u5316\u3051\u3057\u306a\u3044\u3088\u3046\u306bTakaoPGothic\u3002Unicode\u7d75\u6587\u5b57\u304c\u3042\u3093\u307e\u308a\u4f7f\u3048\u306a\u3044\u306e\u306f\u3057\u3087\u3046\u304c\u306a\u3044\u304b\u3002\n\u3044\u3044\u30d5\u30a9\u30f3\u30c8\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u3067\u3059\u3002\n\n~/.xmonad/xmobarrc\n-- -*- mode:haskell -*-\nConfig { font = \"xft:TakaoPGothic-9:Bold\"\n       , bgColor = \"#1a1e1b\"\n       , fgColor = \"#676767\"\n       , position = Top\n       , lowerOnStart = False\n       , commands = [ Run Network \"wlan0\" [ \"-t\"       , \" \u21e9 <rx> : \u21e7 <tx>\"\n                                          , \"-L\"       , \"40\"\n                                          , \"-H\"       , \"200\"\n                                          , \"--normal\" , \"#d3d7cf\"\n                                          , \"--high\"   , \"#88b986\"\n                                          ] 10\n\n                    , Run MultiCpu        [ \"-t\"       , \"<total0>.<total1>.<total2>.<total3>\"\n                                          , \"-L\"       , \"40\"\n                                          , \"-H\"       , \"85\"\n                                          , \"--normal\" , \"#d3d7cf\"\n                                          , \"--high\"   , \"#c16666\"\n                                          ] 50\n\n                    , Run Memory          [ \"-t\"       , \"<usedratio>%\"\n                                          , \"-L\"       , \"40\"\n                                          , \"-H\"       , \"90\"\n                                          , \"--normal\" , \"#d3d7cf\"\n                                          , \"--high\"   , \"#c16666\"\n                                          ] 10\n                    , Run BatteryP        [\"CMB1\"]\n                                          [ \"-t\"       , \"<acstatus>\"\n                                          , \"-L\"       , \"20\"\n                                          , \"-H\"       , \"80\"\n                                          , \"--low\"    , \"#c16666\"\n                                          , \"--normal\" , \"#d3d7cf\"\n                                          , \"--\"\n                                                , \"-o\" , \"<left>% (<timeleft>)\"\n                                                , \"-O\" , \"Charging <left>%\"\n                                                , \"-i\" , \"<left>%\"\n                                          ] 50\n                    , Run Date \"%a %m/%d %H:%M\" \"date\" 10\n                    , Run StdinReader\n                    ]\n       , sepChar = \"%\"\n       , alignSep = \"}{\"\n       , template = \" %StdinReader% }{\u226b%multicpu%  \u226b%memory%  \u226b%wlan0%  \u226b%battery%  <fc=#c7a273>%date%</fc> \"\n       }\n\n\n\u3053\u3046\u3059\u308b\u3068\u3001\u5de6\u5074\u306f\n\n\u306e\u3088\u3046\u306b\u3001\n\u53f3\u5074\u306f\n\n\u306e\u3088\u3046\u306b\u7dba\u9e97\u306b\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u904e\u4e0d\u8db3\u306a\u304f\u3001\u30b9\u30c3\u30ad\u30ea\u8868\u793a\u3067\u304d\u3066\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\ncompton\u3092\u4f7f\u3063\u3066\u5f71\u3092\u3064\u3051\u305f\u308a\u900f\u904e\u51e6\u7406\u3092\u5165\u308c\u308c\u3070\u3001\u3059\u3053\u3057\u30ea\u30c3\u30c1\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\nhaskell\u5168\u7136\u77e5\u3089\u306a\u3044\u3051\u3069\u3001\u306a\u3093\u3068\u304b\u306a\u3063\u305f\u3002\n\u30bf\u30a4\u30eb\u578b\u3084\u3063\u3071\u308a\u597d\u304d\n\u3042\u3046Gtk\u30c6\u30fc\u30de\u304c\u306a\u304b\u306a\u304b\u898b\u3064\u304b\u3089\u306a\u3044\n\n(\u8ffd\u8a18\uff1a2015/03/11 [\u65b0\u305f\u306b\u66f4\u65b0](http://qiita.com/ssh0/items/b92d9ab61eb5c92faa3e)\u3057\u307e\u3057\u305f\u3002\u73fe\u5728\u306f\u3053\u3061\u3089\u306e\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002)\n\n\u4ee5\u524d\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3068\u3057\u3066\u30bf\u30a4\u30eb\u578bWM\u306e[awesome\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3057\u305f](http://qiita.com/ssh0/items/c7ad3470a9852bdae3a7)\u304c\u3001\u73fe\u5728\u306f\u540c\u3058\u304f\u30bf\u30a4\u30eb\u578b\u306eWM\u3067\u3042\u308bxmonad\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u305d\u306e\u8a2d\u5b9a\u3092\u6652\u3059\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\nawesome\u304b\u3089xmonad\u306b\u79fb\u884c\u3057\u305f\u7406\u7531\u306f2\u3064\u3002\n\n1. \u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u5bfe\u5fdc\u306e\u5dee\n2. \u30bf\u30a4\u30eb\u9593\u306e\u30b9\u30da\u30fc\u30b9\u8868\u793a\n\n1\u306b\u95a2\u3057\u3066\u306f\u3001\u81ea\u5206\u306e\u8a2d\u5b9a\u304c\u826f\u304f\u306a\u304b\u3063\u305f\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001awesome\u3067\u306f\u3069\u3046\u3057\u3066\u3082\u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u74b0\u5883\u3067\u3046\u307e\u304f\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u305d\u306e\u70b9xmonad\u306f\u6700\u521d\u304b\u3089\u304d\u3061\u3093\u3068\u8868\u793a\u3057\u3066\u304f\u308c\u3001\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u3053\u3068\u3082\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u826f\u3044\u3067\u3059\u3002\n\n2\u3067awesome\u304b\u3089xmonad\u306b\u79fb\u884c\u3057\u305f\u4eba\u306f\u591a\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059(\u7b11)\u3044\u3084\u3001\u3060\u3063\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u8272\u3005\u898b\u3066\u305f\u3089\u3001\u30bf\u30a4\u30eb\u306e\u9593\u306b\u30b9\u30da\u30fc\u30b9\u3042\u308b\u306e\u3001\u3059\u3054\u304f\u304b\u3063\u3053\u3088\u304f\u898b\u3048\u305f\u3093\u3067\u3059\u3082\u3093\u3002\u305d\u308a\u3083\u4f7f\u3044\u305f\u304f\u306a\u308a\u307e\u3059\u3088\u3002\n\nxmonad\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u306f\u4f55\u4eba\u304b\u306e\u65b9\u304c\u65e2\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4e00\u3064\u91cd\u306d\u3066\u6ce8\u610f\u3059\u308b\u3068\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u304b\u3089\u3068\u8a00\u3063\u3066\u3059\u3050\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u8a66\u3057\u3066\u307f\u308b\u306e\u306f\u3084\u3081\u307e\u3057\u3087\u3046\u3002\u521d\u671f\u72b6\u614b\u3067\u306f\u58c1\u7d19\u3059\u3089\u8868\u793a\u3055\u308c\u305a\u3001\u64cd\u4f5c\u65b9\u6cd5\u3082\u308f\u304b\u3089\u306a\u3044\u305f\u3081\u7d50\u5c40\u518d\u8d77\u52d5\u3055\u305b\u308b\u306f\u3081\u306b\u306a\u3063\u305f\u308a\u3057\u307e\u3059\uff08\u7d4c\u9a13\u8ac7\uff09\u3002\u9038\u308b\u6c17\u6301\u3061\u3092\u6291\u3048\u3066\u3001\u304d\u3061\u3093\u3068\u4ed6\u306e\u74b0\u5883\u3067\u8aac\u660e\u3092\u8aad\u307f\u306a\u304c\u3089\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u3082\u3057\u304f\u306f\u6700\u521d\u304b\u3089\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u3044\u3066\u304a\u3044\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\n\n\u4ee5\u4e0b\u3067\u306f\u3001xmonad\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b~/.xmonad/xmonad.hs\u306e\u8a2d\u5b9a\u3068\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fcxmobar\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb~/.xmonad/xmobarrc\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n#xmonad\u306e\u8a2d\u5b9a\n\n```haskell:~/.xmonad/xmonad.hs\n\nimport qualified Data.Map as M\n\nimport XMonad\nimport qualified XMonad.StackSet as W  -- myManageHookShift\n\nimport Control.Monad (liftM2)          -- myManageHookShift\nimport System.IO                       -- for xmobar\n\nimport XMonad.Actions.WindowGo\nimport XMonad.Actions.CycleWS\nimport XMonad.Hooks.DynamicLog         -- for xmobar\nimport XMonad.Hooks.EwmhDesktops\nimport XMonad.Hooks.FadeWindows\nimport XMonad.Hooks.ManageDocks        -- avoid xmobar area\nimport XMonad.Hooks.Place\nimport XMonad.Layout\nimport XMonad.Layout.DragPane          -- see only two window\nimport XMonad.Layout.Gaps\nimport XMonad.Layout.IM\nimport XMonad.Layout.Magnifier         -- this makes window bigger\nimport XMonad.Layout.MultiToggle\nimport XMonad.Layout.MultiToggle.Instances\nimport XMonad.Layout.Named\nimport XMonad.Layout.NoBorders         -- In Full mode, border is no use\nimport XMonad.Layout.ResizableTile     -- Resizable Horizontal border\nimport XMonad.Layout.Spacing           -- this makes smart space around windows\nimport XMonad.Layout.Tabbed\nimport XMonad.Layout.ThreeColumns      -- for many windows\nimport XMonad.Layout.ToggleLayouts     -- Full window at any time\nimport XMonad.Util.EZConfig            -- removeKeys, additionalKeys\nimport XMonad.Util.Run(spawnPipe)      -- spawnPipe, hPutStrLn\nimport XMonad.Util.Run\n\nimport Graphics.X11.ExtraTypes.XF86\n\ntall = ResizableTall 1 (3/100) (1/2) []\n\nmyWorkspaces = [\"  main  \", \"  browser  \", \"  media  \", \"  work  \", \"  tray  \"]\nmodm = mod4Mask\n\ncolorBlue      = \"#857da9\"\ncolorGreen     = \"#88b986\"\ncolorGray      = \"#676767\"\ncolorWhite     = \"#d3d7cf\"\ncolorGrayAlt   = \"#313131\"\ncolorNormalbg  = \"#1a1e1b\"\n\n-- Define keys to remove\nkeysToRemove x =\n    [\n        -- Unused gmrun binding\n          (modm .|. shiftMask, xK_p)\n        -- Unused close window binding\n        , (modm .|. shiftMask, xK_c)\n        , (modm .|. shiftMask, xK_Return)\n    ]\n \n-- Delete the keys combinations we want to remove.\nstrippedKeys x = foldr M.delete (keys defaultConfig x) (keysToRemove x)\n\nmain :: IO ()\n\nmain = do\n    wsbar <- spawnPipe myWsBar\n    xmonad $ defaultConfig\n       { borderWidth = 2\n       , terminal = \"urxvt\"\n       , normalBorderColor = colorGray\n       , focusedBorderColor = colorGreen\n       , startupHook = myStartupHook\n       , manageHook = placeHook myPlacement <+> myManageHookShift <+> myManageHookFloat <+> manageDocks\n        -- any time Full mode, avoid xmobar area\n       , layoutHook = toggleLayouts (noBorders Full) $ avoidStruts $ myLayout\n        -- xmobar setting\n       , logHook = myLogHook wsbar\n       , handleEventHook = fadeWindowsEventHook\n       , workspaces = myWorkspaces\n       , modMask = modm }\n\n       `additionalKeys`\n       [ ((modm              , xK_f     ), sendMessage ToggleLayout)\n       , ((modm              , xK_g     ), sendMessage ToggleGaps)\n       , ((modm              , xK_l     ), sendMessage MirrorShrink)\n       , ((modm              , xK_h     ), sendMessage MirrorExpand)\n       , ((modm              , xK_Right ), nextWS ) -- go to next workspace\n       , ((modm              , xK_Left  ), prevWS ) -- go to prev workspace\n       , ((modm .|. shiftMask, xK_Right ), shiftToNext)\n       , ((modm .|. shiftMask, xK_Left  ), shiftToPrev)\n       , ((modm              , xK_comma ), sendMessage MagnifyLess)   -- smaller window\n       , ((modm              , xK_period), sendMessage MagnifyMore)  -- bigger window\n       , ((modm              , xK_j     ), windows W.focusDown)\n       , ((modm              , xK_k     ), windows W.focusUp)\n       , ((modm .|. shiftMask, xK_j     ), windows W.swapDown)\n       , ((modm .|. shiftMask, xK_k     ), windows W.swapUp)\n       , ((modm              , xK_w     ), nextScreen) ]\n\n       `additionalKeys`\n       [ ((modm .|. m, k), windows $ f i)\n         | (i, k) <- zip myWorkspaces\n                     [ xK_exclam, xK_at, xK_numbersign\n                     , xK_dollar, xK_percent, xK_asciicircum\n                     , xK_ampersand, xK_asterisk, xK_parenleft\n                     , xK_parenright\n                     ]\n       , (f, m) <- [(W.greedyView, 0), (W.shift, shiftMask)]\n       ]\n\n       `additionalKeys`\n       [ ((mod1Mask .|. controlMask, xK_l      ), spawn \"xscreensaver-command -lock\")\n       , ((modm                    , xK_Return ), spawn \"urxvt\")\n       , ((modm                    , xK_c      ), kill) -- %! Close the focused window\n       , ((modm                    , xK_p      ), spawn \"exe=`dmenu_run -nb '#1a1e1b' -nf '#d3d7cf' -sb '#88b986' -sf '#1a1e1b'` && exec $exe\")\n       , ((mod1Mask .|. controlMask, xK_f      ), spawn \"python /home/ssh0/Workspace/python/web_search/websearch.py\")\n       , ((0                       , 0x1008ff13), spawn \"amixer -D pulse set Master 5%+ && paplay /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga\")\n       , ((0                       , 0x1008ff11), spawn \"amixer -D pulse set Master 5%- && paplay /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga\")\n       , ((0                       , 0x1008ff12), spawn \"amixer -D pulse set Master toggle\")\n        -- Brightness Keys\n       , ((0                       , 0x1008FF02), spawn \"xbacklight + 10\")\n       , ((0                       , 0x1008FF03), spawn \"xbacklight - 10\")\n\n       ]\n\n-- Handle Window behaveior\nmyLayout = (spacing 18 $ ResizableTall 1 (3/100) (3/5) [])\n            |||  (spacing 2 $ (dragPane Horizontal (1/10) (1/2)))\n            |||  (dragPane Vertical   (1/10) (1/2))\n\n\n-- Start up (at xmonad beggining), like \"wallpaper\" or so on\nmyStartupHook = do\n        spawn \"gnome-settings-daemon\"\n        spawn \"nm-applet\"\n        spawn \"gnome-sound-applet\"\n        spawn \"xscreensaver -no-splash\"\n        spawn \"feh --bg-fill /media/ssh0/STOCK/Pictures/wallpapers/Abstract-gauss.jpg\"\n        spawn \"compton --config /home/ssh0/.config/compton/compton.conf -b\"\n        spawn \"/home/ssh0/.dropbox-dist/dropboxd\"\n\n-- some window must created there\nmyManageHookShift = composeAll\n            -- if you want to know className, type \"$ xprop|grep CLASS\" on shell\n            [ className =? \"Firefox\"   --> doShift \"  browser  \"\n            , className =? \"Mplayer\"   --> doShift \"  media  \"\n            ]\n--             where viewShift = doF . liftM2 (.) W.view W.shift\n\n-- new window will created in Float mode\nmyManageHookFloat = composeAll\n            [ className =? \"MPlayer\"          --> doFloat,\n              className =? \"Gimp\"             --> doFloat,\n              className =? \"Websearch.py\"     --> doFloat,\n              className =? \"Plugin-container\" --> doFloat,\n              title     =? \"Speedbar\"         --> doFloat]\n\n\nmyLogHook h = dynamicLogWithPP $ wsPP { ppOutput = hPutStrLn h }\n\nmyWsBar = \"xmobar /home/ssh0/.xmonad/xmobarrc\"\n\nwsPP = xmobarPP { ppOrder               = \\(ws:l:t:_)   -> [ws,t]\n                , ppCurrent             = xmobarColor   colorGreen       colorNormalbg\n                , ppUrgent              = xmobarColor   colorWhite       colorNormalbg\n                , ppVisible             = xmobarColor   colorWhite       colorNormalbg\n                , ppHidden              = xmobarColor   colorWhite       colorNormalbg\n                , ppHiddenNoWindows     = xmobarColor   colorGray        colorNormalbg\n                , ppTitle               = xmobarColor   colorWhite       colorNormalbg\n                , ppWsSep               = \"\"\n                , ppSep                 = \"  ::: \"\n                }\n\nmyPlacement = fixed (0.5, 0.5)\n\n```\n\n\n\u306f\u3058\u3081\u306b\u3044\u308d\u3044\u308d\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u304b\u3089\u6301\u3063\u3066\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u591a\u5206\u3044\u3089\u306a\u3044\u5974\u305f\u304f\u3055\u3093\u5165\u3063\u3066\u307e\u3059(\u7b11)\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fAlt\u30ad\u30fc(mod1Mask)\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308bmod\u30ad\u30fc\u3092Windows\u30ad\u30fc/Super\u30ad\u30fc(mod4Mask)\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u3066\u3044\u308b\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u306f\u4ee5\u4e0b\n\n<table class=\"table table-condensed table-bordered\">\n  <tr><td><Strong>\u30ad\u30fc</Strong></td><td><Strong>\u3084\u3063\u3066\u3044\u308b\u3053\u3068</Strong></td></tr>\n  <tr><td>Ctrl + Alt + l</td><td>\u30b9\u30af\u30ea\u30fc\u30f3\u3092\u30ed\u30c3\u30af</td></tr>\n  <tr><td>Super + Return</td><td>\u7aef\u672burxvt\u3092\u8d77\u52d5</td></tr>\n  <tr><td>Super + c</td><td>\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u524a\u9664</td></tr>\n  <tr><td>Super + p</td><td>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30e9\u30f3\u30c1\u30e3\u30fcdmenu\u3092\u8d77\u52d5\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u8272\u306e\u8a2d\u5b9a</td></tr>\n  <tr><td>Ctrl + Alt + f</td><td> [\u4ee5\u524d\u306b\u4f5c\u6210\u3057\u305f\u7c21\u6613\u691c\u7d22\u30d0\u30fcwebsearch.py](http://qiita.com/ssh0/items/7e70c8f72a0fa03df4b0)\u3092\u8d77\u52d5</td></tr>\n  <tr><td>\u97f3\u91cf\u30a2\u30c3\u30d7\u30dc\u30bf\u30f3(0x1008ff13)</td><td>\u97f3\u91cf\u3092\u4e0a\u3052\u3066unity\u74b0\u5883\u3068\u540c\u3058\u97f3\u3067\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af</td></tr>\n  <tr><td>\u97f3\u91cf\u30c0\u30a6\u30f3\u30dc\u30bf\u30f3(0x1008ff11)</td><td>\u97f3\u91cf\u3092\u4e0b\u3052\u3066unity\u74b0\u5883\u3068\u540c\u3058\u97f3\u3067\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af</td></tr>\n  <tr><td>\u30df\u30e5\u30fc\u30c8\u30dc\u30bf\u30f3(0x1008ff12)</td><td>\u97f3\u91cf\u3092\u30df\u30e5\u30fc\u30c8</td></tr>\n  <tr><td>\u8f1d\u5ea6\u30a2\u30c3\u30d7\u30dc\u30bf\u30f3(0x1008FF02)</td><td>xbacklight\u3092\u4f7f\u3063\u3066\u753b\u9762\u306e\u660e\u308b\u3055\u3092\u4e0a\u3052\u308b</td></tr>\n  <tr><td>\u8f1d\u5ea6\u30c0\u30a6\u30f3\u30dc\u30bf\u30f3(0x1008FF03)</td><td>xbacklight\u3092\u4f7f\u3063\u3066\u753b\u9762\u306e\u660e\u308b\u3055\u3092\u4e0b\u3052\u308b</td></tr>\n  <tr><td>Super + f</td><td>\u5168\u753b\u9762\u8868\u793a\u306b\u3059\u308b\u304b\u306e\u5207\u308a\u66ff\u3048</td></tr>\n  <tr><td>Super + l</td><td>(\u7e26\u306b\u4e26\u3093\u3060)\u30bf\u30a4\u30eb\u306e\u7e26\u65b9\u5411\u3092\u77ed\u304f\u3059\u308b</td></tr>\n  <tr><td>Super + h</td><td>(\u7e26\u306b\u4e26\u3093\u3060)\u30bf\u30a4\u30eb\u306e\u7e26\u65b9\u5411\u3092\u9577\u304f\u3059\u308b</td></tr>\n  <tr><td>Super + Right</td><td>\u6b21(\u53f3)\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u79fb\u52d5\u3059\u308b</td></tr>\n  <tr><td>Super + Left</td><td>\u524d(\u5de6)\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u79fb\u52d5\u3059\u308b</td></tr>\n  <tr><td>Super + Shift + Right</td><td>\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6b21\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u79fb\u52d5</td></tr>\n  <tr><td>Super + Shift + Left</td><td>\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u524d\u306b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u79fb\u52d5</td></tr>\n  <tr><td>Super + j</td><td>\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u6b21\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u79fb\u3059</td></tr>\n  <tr><td>Super + k</td><td>\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u524d\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u79fb\u3059</td></tr>\n  <tr><td>Super + Shift + j</td><td>\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6b21\u306e\u30bf\u30a4\u30eb\u914d\u7f6e\u306b\u79fb\u3059</td></tr>\n  <tr><td>Super + Shift + k</td><td>\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u524d\u306e\u30bf\u30a4\u30eb\u914d\u7f6e\u306b\u79fb\u3059</td></tr>\n  <tr><td>Super + w</td><td>\u6b21\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u79fb\u3059</td></tr>\n</table>\n\n\u500b\u4eba\u7684\u306b\u597d\u304d\u306a\u30ec\u30a4\u30a2\u30a6\u30c8\n\n```hs\nspacing 18 $ ResizableTall 1 (3/100) (3/5) []\n```\n\n\u30bf\u30a4\u30eb\u9593\u306e\u30b9\u30da\u30fc\u30b918pt\u30012\u500b\u4ee5\u964d\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u5168\u3066\u53f3\u5074\u306b\u3002\u6a2a\u306e\u6bd4\u7387\u306f3\u5bfe2\n\n\u305d\u306e\u4ed6\u306bFloat\u914d\u7f6e\u306b\u3059\u308b\u3082\u306e\u3092\u6307\u5b9a\u3057\u305f\u308a\u3001\u8868\u793a\u3059\u308b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u3092\u6307\u5b9a\u3057\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\n\nmyStartupHook\u3067\u30ed\u30b0\u30a4\u30f3\u5f8c\u3059\u3050\u306b\u81ea\u52d5\u3067\u8d77\u52d5\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3002xscreensaver\u3068\u304bdropbox\u3068\u304b\u3002\u58c1\u7d19\u306e\u6307\u5b9a\u3082\u3053\u3053\u3067\u884c\u3044\u307e\u3059\u3002\n\n##\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\n![browser.jpg](https://qiita-image-store.s3.amazonaws.com/0/54869/b7867343-d8a0-688c-8659-85d7e3722dd8.jpeg)\n\n![media.jpg](https://qiita-image-store.s3.amazonaws.com/0/54869/2ea0f532-ed33-6ba7-00ff-4f9b80ae7c66.jpeg)\n\n![work.jpg](https://qiita-image-store.s3.amazonaws.com/0/54869/972b4727-2c88-7d6c-da75-d5b1fedd387f.jpeg)\n\n\n#xmobar\u306e\u8a2d\u5b9a\n\n~/xmonad/xmonad.hs\u306emain\u306e\u5b9a\u7fa9\u306e\u4e2d\u3067\n\n```haskell\nwsbar <- spawnPipe myWsBar\nxmonad $ defaultConfig\n       {\n       ...\n        -- xmobar setting\n       , logHook = myLogHook wsbar\n       ...\n       }\n```\n\n\u3068\u3057\u3066\u304a\u3044\u3066\u3001\u305d\u306e\u4e2d\u8eab\u306f\n\n```\nmyLogHook h = dynamicLogWithPP $ wsPP { ppOutput = hPutStrLn h }\n\nmyWsBar = \"xmobar /home/ssh0/.xmonad/xmobarrc\"\n\nwsPP = xmobarPP { ppOrder               = \\(ws:l:t:_)   -> [ws,t]\n                , ppCurrent             = xmobarColor   colorGreen       colorNormalbg\n                , ppUrgent              = xmobarColor   colorWhite       colorNormalbg\n                , ppVisible             = xmobarColor   colorWhite       colorNormalbg\n                , ppHidden              = xmobarColor   colorWhite       colorNormalbg\n                , ppHiddenNoWindows     = xmobarColor   colorGray        colorNormalbg\n                , ppTitle               = xmobarColor   colorWhite       colorNormalbg\n                , ppWsSep               = \"\"\n                , ppSep                 = \"  ::: \"\n                }\n```\n\n\u3068\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067xmobar\u306e\u8272\u3084\u8868\u793a\u3059\u308b\u8981\u7d20\u306e\u9078\u629e\u304c\u3067\u304d\u307e\u3059\u3002\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u8868\u793a\u306f\u90aa\u9b54\u306a\u306e\u3067\u6d88\u3057\u307e\u3057\u305f\u3002\n\u7d71\u4e00\u611f\u3092\u51fa\u3059\u305f\u3081\u306b\u8272\u306b\u306f\u3053\u3060\u308f\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n~/.xmonad/xmobarrc\u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30d5\u30a9\u30f3\u30c8\u306f\u65e5\u672c\u8a9e\u8868\u793a\u3057\u3066\u3082\u6587\u5b57\u5316\u3051\u3057\u306a\u3044\u3088\u3046\u306bTakaoPGothic\u3002Unicode\u7d75\u6587\u5b57\u304c\u3042\u3093\u307e\u308a\u4f7f\u3048\u306a\u3044\u306e\u306f\u3057\u3087\u3046\u304c\u306a\u3044\u304b\u3002\n\u3044\u3044\u30d5\u30a9\u30f3\u30c8\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u3067\u3059\u3002\n\n```haskell:~/.xmonad/xmobarrc\n-- -*- mode:haskell -*-\nConfig { font = \"xft:TakaoPGothic-9:Bold\"\n       , bgColor = \"#1a1e1b\"\n       , fgColor = \"#676767\"\n       , position = Top\n       , lowerOnStart = False\n       , commands = [ Run Network \"wlan0\" [ \"-t\"       , \" \u21e9 <rx> : \u21e7 <tx>\"\n                                          , \"-L\"       , \"40\"\n                                          , \"-H\"       , \"200\"\n                                          , \"--normal\" , \"#d3d7cf\"\n                                          , \"--high\"   , \"#88b986\"\n                                          ] 10\n\n                    , Run MultiCpu        [ \"-t\"       , \"<total0>.<total1>.<total2>.<total3>\"\n                                          , \"-L\"       , \"40\"\n                                          , \"-H\"       , \"85\"\n                                          , \"--normal\" , \"#d3d7cf\"\n                                          , \"--high\"   , \"#c16666\"\n                                          ] 50\n\n                    , Run Memory          [ \"-t\"       , \"<usedratio>%\"\n                                          , \"-L\"       , \"40\"\n                                          , \"-H\"       , \"90\"\n                                          , \"--normal\" , \"#d3d7cf\"\n                                          , \"--high\"   , \"#c16666\"\n                                          ] 10\n                    , Run BatteryP        [\"CMB1\"]\n                                          [ \"-t\"       , \"<acstatus>\"\n                                          , \"-L\"       , \"20\"\n                                          , \"-H\"       , \"80\"\n                                          , \"--low\"    , \"#c16666\"\n                                          , \"--normal\" , \"#d3d7cf\"\n                                          , \"--\"\n                                                , \"-o\" , \"<left>% (<timeleft>)\"\n                                                , \"-O\" , \"Charging <left>%\"\n                                                , \"-i\" , \"<left>%\"\n                                          ] 50\n                    , Run Date \"%a %m/%d %H:%M\" \"date\" 10\n                    , Run StdinReader\n                    ]\n       , sepChar = \"%\"\n       , alignSep = \"}{\"\n       , template = \" %StdinReader% }{\u226b%multicpu%  \u226b%memory%  \u226b%wlan0%  \u226b%battery%  <fc=#c7a273>%date%</fc> \"\n       }\n```\n\n\u3053\u3046\u3059\u308b\u3068\u3001\u5de6\u5074\u306f\n![xmobar_left.jpg](https://qiita-image-store.s3.amazonaws.com/0/54869/a38905b4-0c13-dcbb-2169-581dc89f7bb9.jpeg)\n\n\u306e\u3088\u3046\u306b\u3001\n\n\u53f3\u5074\u306f\n\n![xmobar_right.jpg](https://qiita-image-store.s3.amazonaws.com/0/54869/94c396d6-3a89-e0eb-966d-cee18df69154.jpeg)\n\n\u306e\u3088\u3046\u306b\u7dba\u9e97\u306b\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u904e\u4e0d\u8db3\u306a\u304f\u3001\u30b9\u30c3\u30ad\u30ea\u8868\u793a\u3067\u304d\u3066\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\ncompton\u3092\u4f7f\u3063\u3066\u5f71\u3092\u3064\u3051\u305f\u308a\u900f\u904e\u51e6\u7406\u3092\u5165\u308c\u308c\u3070\u3001\u3059\u3053\u3057\u30ea\u30c3\u30c1\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n#\u307e\u3068\u3081\n\n- haskell\u5168\u7136\u77e5\u3089\u306a\u3044\u3051\u3069\u3001\u306a\u3093\u3068\u304b\u306a\u3063\u305f\u3002\n- \u30bf\u30a4\u30eb\u578b\u3084\u3063\u3071\u308a\u597d\u304d\n- \u3042\u3046Gtk\u30c6\u30fc\u30de\u304c\u306a\u304b\u306a\u304b\u898b\u3064\u304b\u3089\u306a\u3044\n"}