{"context": "redux-saga\u304c\u76db\u308a\u4e0a\u304c\u3063\u3066\u308b\u3089\u3057\u3044\u306e\u3067\u89e6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nyelouafi/redux-saga: An alternative side effect model for Redux apps\nredux-saga\u306fredux\u306b\u304a\u3051\u308b\u975e\u540c\u671f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u95a2\u6570\u3092\u7528\u3044\u3066\u3001\u540c\u671f\u306a\u30b9\u30bf\u30a4\u30eb\u3067\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u3059\u3002\n\u516c\u5f0f\u306b\u65e5\u672c\u8a9e\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u3042\u308a\u307e\u3059\u3002\n\u7ffb\u8a33\u3057\u3066\u304f\u308c\u305f@kuy\u3055\u3093\u306b\u611f\u8b1d\u3067\u3059\u3002\nredux-saga/README_ja.md at master \u00b7 yelouafi/redux-saga\n\u8a73\u3057\u3044\u65e5\u672c\u8a9e\u306e\u89e3\u8aac\u8a18\u4e8b\u306f\u3053\u308c\u304b\u3089\u51fa\u3066\u304f\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u89e6\u3063\u3066\u307f\u307e\u3059\u3002\nreact\u3068\u4e00\u7dd2\u306b\u4f7f\u3046\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u6700\u5c0f\u69cb\u6210\u3067\u8a66\u3057\u305f\u3044\u306e\u3067redux\u3068redux-saga\u306e\u307f\u3067node 6.1.0\u306b\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ npm init -y\n$ npm i -S redux redux-saga\n\n\nredux\u306e\u307f\u3067\u96db\u5f62\n\u30ab\u30a6\u30f3\u30bf\u30fc\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u306fredux\u306e\u307f\u3067\u57fa\u672c\u5f62\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\nindex.js\nconst {createStore} = require('redux');\n\nfunction counter(state = 0, action) {\n    switch (action.type) {\n        case 'INCREMENT':\n            return state + 1;\n        case 'DECREMENT':\n            return state - 1;\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(counter);\n\nstore.subscribe(() => {\n    console.log(store.getState());\n});\n\nconst action = type => store.dispatch({type});\n\naction('INCREMENT');\naction('INCREMENT');\naction('INCREMENT');\naction('DECREMENT');\n\n\n$ node index.js\n1\n2\n3\n2\n\n\nredux-saga\u306b\u3088\u308b\u975e\u540c\u671f\u51e6\u7406\n\u3053\u3053\u306b1\u79d2\u5f8c\u306bstate\u30921\u3064\u5897\u3084\u3059INCREMENT_ASYNC\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002\n\nindex.js\n'use strict';\nconst {createStore, applyMiddleware} = require('redux');\nconst reduxSaga = require('redux-saga');\nconst createSagaMiddleware = reduxSaga.default;\nconst {takeEvery, delay, effects} = reduxSaga;\nconst {put} = effects;\n\nfunction counter(state = 0, action) {\n    switch (action.type) {\n        case 'INCREMENT':\n            return state + 1;\n        case 'DECREMENT':\n            return state - 1;\n        default:\n            return state;\n    }\n}\n\nfunction * incrementAsync() {\n    yield delay(1000);\n    yield put({type: 'INCREMENT'});\n}\n\nfunction * watchIncrementAsync() {\n    yield * takeEvery('INCREMENT_ASYNC', incrementAsync);\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    counter,\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(watchIncrementAsync);\n\nstore.subscribe(() => {\n    console.log(store.getState());\n});\n\nconst action = type => store.dispatch({type});\n\naction('INCREMENT_ASYNC');\naction('INCREMENT');\naction('INCREMENT');\naction('INCREMENT');\naction('DECREMENT');\naction('INCREMENT_ASYNC');\n\n\n$ node index.js\n0\n1\n2\n3\n2\n2\n3\n4\n\n\u5c11\u3057\u308f\u304b\u308a\u3065\u3089\u3044\u3067\u3059\u304c\u3001INCREMENT_ASYNC\u30a2\u30af\u30b7\u30e7\u30f3\u304c\uff12\u56de\u767a\u884c\u3055\u308c\u305f\u306e\u3067\u6700\u7d42\u7684\u306bstate\u304c4\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u7c21\u5358\u306a\u89e3\u8aac\u3092\u3057\u307e\u3059\u3002\nredux-saga\u304c\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u95a2\u6570\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u540c\u671f\u51e6\u7406\u306b\u51e6\u7406\u3067\u304d\u307e\u3059\u3002\ndelay\u30671\u79d2\u5f85\u3061\u3001put\u3067\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u767a\u884c\u3067\u304d\u307e\u3059\u3002\ntakeEvery\u306fINCREMENT_ASYNC\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u304d\u305f\u3089\u3001\u4e26\u5217\u3067incrementAsync\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\n\u4ed6\u306eredux\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u540c\u69d8\u306bapplyMiddleware\u3067saga\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u767b\u9332\u3057\u3001run\u3067saga\u3092\u8d70\u3089\u305b\u307e\u3059\u3002\n\n\u8907\u6570\u306esaga\u306e\u8ffd\u52a0\n\u4eca\u306e\u307e\u307e\u3060\u3068\u30ed\u30ac\u30fc\u304c\u5fc3\u3082\u3068\u306a\u3044\u306e\u3067redux-logger\u98a8\u306e\u30ed\u30ac\u30fc\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u767a\u884c\u524d\u3068\u767a\u884c\u5f8c\u306estore\u306e\u72b6\u614b\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\nindex.js\n'use strict';\nconst {createStore, applyMiddleware} = require('redux');\nconst reduxSaga = require('redux-saga');\nconst createSagaMiddleware = reduxSaga.default;\nconst {takeEvery, delay, effects} = reduxSaga;\nconst {put, take, select, fork} = effects;\n\nfunction counter(state = 0, action) {\n    switch (action.type) {\n        case 'INCREMENT':\n            return state + 1;\n        case 'DECREMENT':\n            return state - 1;\n        default:\n            return state;\n    }\n}\n\nfunction * incrementAsync() {\n    yield delay(1000);\n    yield put({type: 'INCREMENT'});\n}\n\nfunction * watchIncrementAsync() {\n    yield * takeEvery('INCREMENT_ASYNC', incrementAsync);\n}\n\nfunction * watchAndLog() {\n    while (true) {\n        console.log('before', yield select());\n        const action = yield take('*');\n        console.log('action', action);\n        console.log('after ', yield select());\n    }\n}\n\nfunction * rootSaga() {\n    yield fork(watchAndLog);\n    yield fork(watchIncrementAsync);\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    counter,\n    applyMiddleware(sagaMiddleware)\n);\nsagaMiddleware.run(rootSaga);\n\nconst action = type => store.dispatch({type});\n\naction('INCREMENT_ASYNC');\naction('INCREMENT');\naction('INCREMENT');\naction('INCREMENT');\naction('DECREMENT');\naction('INCREMENT_ASYNC');\n\n\n$ node index.js\nbefore 0\naction { type: 'INCREMENT_ASYNC' }\nafter  0\nbefore 0\naction { type: 'INCREMENT' }\nafter  1\nbefore 1\naction { type: 'INCREMENT' }\nafter  2\nbefore 2\naction { type: 'INCREMENT' }\nafter  3\nbefore 3\naction { type: 'DECREMENT' }\nafter  2\nbefore 2\naction { type: 'INCREMENT_ASYNC' }\nafter  2\nbefore 2\naction { type: 'INCREMENT' }\nafter  3\nbefore 3\naction { type: 'INCREMENT' }\nafter  4\nbefore 4\n\nINCREMENT_ASYNC\u30a2\u30af\u30b7\u30e7\u30f3\u304c\uff12\u56de\u767a\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u6700\u5f8c\u306bINCREMENT\u30a2\u30af\u30b7\u30e7\u30f3\u304c\uff12\u56de\u767a\u884c\u3055\u308c\u3001state\u304c\u5897\u3048\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\u3055\u3066\u3001take, select, fork\u3068\u3044\u3063\u305f\u95a2\u6570\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\ntake\u306f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5f85\u3061\u53d7\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3059\u3079\u3066\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5f85\u3063\u3066\u3044\u307e\u3059\u304c\u3001take('\u30a2\u30af\u30b7\u30e7\u30f3')\u3067\u7279\u5b9a\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u304d\u305f\u3068\u304d\u306b\u4f5c\u7528\u3059\u308b\u95a2\u6570\u3092\u7c21\u6f54\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nfork\u306fsaga\u3092\u4e26\u5217\u306b\u5b9f\u884c\u3057\u3001select\u306fstate\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nredux-saga\u306f\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u95a2\u6570\u306b\u3088\u3063\u3066\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nredux-thunk\u3068\u4f7f\u3046\u72b6\u6cc1\u3067\u3042\u308c\u3070\u3001\u3053\u308c\u304b\u3089\u306f\u9593\u9055\u3044\u306a\u304fredux-saga\u3092\u4f7f\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306fgithub\u306b\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\u9593\u9055\u3063\u305f\u4f7f\u3044\u65b9\u3092\u3057\u3066\u308b\u7b49\u3042\u308c\u3070\u3001\u30a2\u30c9\u30d0\u30a4\u30b9\u3092\u304f\u3060\u3055\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\nakameco/redux-saga-example\n\n\u53c2\u8003\nyelouafi/redux-saga: An alternative side effect model for Redux apps\nredux-saga/README_ja.md at master \u00b7 yelouafi/redux-saga\nakameco/redux-saga-example\nredux-saga\u304c\u76db\u308a\u4e0a\u304c\u3063\u3066\u308b\u3089\u3057\u3044\u306e\u3067\u89e6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n[yelouafi/redux-saga: An alternative side effect model for Redux apps](https://github.com/yelouafi/redux-saga)\n\nredux-saga\u306fredux\u306b\u304a\u3051\u308b\u975e\u540c\u671f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u95a2\u6570\u3092\u7528\u3044\u3066\u3001\u540c\u671f\u306a\u30b9\u30bf\u30a4\u30eb\u3067\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u3059\u3002\n\u516c\u5f0f\u306b\u65e5\u672c\u8a9e\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u3042\u308a\u307e\u3059\u3002\n\u7ffb\u8a33\u3057\u3066\u304f\u308c\u305f@kuy\u3055\u3093\u306b\u611f\u8b1d\u3067\u3059\u3002\n\n[redux-saga/README_ja.md at master \u00b7 yelouafi/redux-saga](https://github.com/yelouafi/redux-saga/blob/master/README_ja.md)\n\n\u8a73\u3057\u3044\u65e5\u672c\u8a9e\u306e\u89e3\u8aac\u8a18\u4e8b\u306f\u3053\u308c\u304b\u3089\u51fa\u3066\u304f\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u89e6\u3063\u3066\u307f\u307e\u3059\u3002\nreact\u3068\u4e00\u7dd2\u306b\u4f7f\u3046\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u6700\u5c0f\u69cb\u6210\u3067\u8a66\u3057\u305f\u3044\u306e\u3067redux\u3068redux-saga\u306e\u307f\u3067node 6.1.0\u306b\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ npm init -y\n$ npm i -S redux redux-saga\n```\n\n## redux\u306e\u307f\u3067\u96db\u5f62\n\n\u30ab\u30a6\u30f3\u30bf\u30fc\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n\u307e\u305a\u306fredux\u306e\u307f\u3067\u57fa\u672c\u5f62\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n```js:index.js\nconst {createStore} = require('redux');\n\nfunction counter(state = 0, action) {\n\tswitch (action.type) {\n\t\tcase 'INCREMENT':\n\t\t\treturn state + 1;\n\t\tcase 'DECREMENT':\n\t\t\treturn state - 1;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst store = createStore(counter);\n\nstore.subscribe(() => {\n\tconsole.log(store.getState());\n});\n\nconst action = type => store.dispatch({type});\n\naction('INCREMENT');\naction('INCREMENT');\naction('INCREMENT');\naction('DECREMENT');\n```\n\n\n```\n$ node index.js\n1\n2\n3\n2\n```\n\n## redux-saga\u306b\u3088\u308b\u975e\u540c\u671f\u51e6\u7406\n\n\u3053\u3053\u306b1\u79d2\u5f8c\u306bstate\u30921\u3064\u5897\u3084\u3059`INCREMENT_ASYNC`\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002\n\n```index.js\n'use strict';\nconst {createStore, applyMiddleware} = require('redux');\nconst reduxSaga = require('redux-saga');\nconst createSagaMiddleware = reduxSaga.default;\nconst {takeEvery, delay, effects} = reduxSaga;\nconst {put} = effects;\n\nfunction counter(state = 0, action) {\n\tswitch (action.type) {\n\t\tcase 'INCREMENT':\n\t\t\treturn state + 1;\n\t\tcase 'DECREMENT':\n\t\t\treturn state - 1;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction * incrementAsync() {\n\tyield delay(1000);\n\tyield put({type: 'INCREMENT'});\n}\n\nfunction * watchIncrementAsync() {\n\tyield * takeEvery('INCREMENT_ASYNC', incrementAsync);\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n\tcounter,\n\tapplyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(watchIncrementAsync);\n\nstore.subscribe(() => {\n\tconsole.log(store.getState());\n});\n\nconst action = type => store.dispatch({type});\n\naction('INCREMENT_ASYNC');\naction('INCREMENT');\naction('INCREMENT');\naction('INCREMENT');\naction('DECREMENT');\naction('INCREMENT_ASYNC');\n```\n\n```\n$ node index.js\n0\n1\n2\n3\n2\n2\n3\n4\n```\n\n\u5c11\u3057\u308f\u304b\u308a\u3065\u3089\u3044\u3067\u3059\u304c\u3001INCREMENT_ASYNC\u30a2\u30af\u30b7\u30e7\u30f3\u304c\uff12\u56de\u767a\u884c\u3055\u308c\u305f\u306e\u3067\u6700\u7d42\u7684\u306bstate\u304c4\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u7c21\u5358\u306a\u89e3\u8aac\u3092\u3057\u307e\u3059\u3002\nredux-saga\u304c\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u95a2\u6570\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u540c\u671f\u51e6\u7406\u306b\u51e6\u7406\u3067\u304d\u307e\u3059\u3002\ndelay\u30671\u79d2\u5f85\u3061\u3001put\u3067\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u767a\u884c\u3067\u304d\u307e\u3059\u3002\ntakeEvery\u306f`INCREMENT_ASYNC`\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u304d\u305f\u3089\u3001\u4e26\u5217\u3067incrementAsync\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\n\n\u4ed6\u306eredux\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u540c\u69d8\u306bapplyMiddleware\u3067saga\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u767b\u9332\u3057\u3001`run`\u3067saga\u3092\u8d70\u3089\u305b\u307e\u3059\u3002\n\n## \u8907\u6570\u306esaga\u306e\u8ffd\u52a0\n\n\u4eca\u306e\u307e\u307e\u3060\u3068\u30ed\u30ac\u30fc\u304c\u5fc3\u3082\u3068\u306a\u3044\u306e\u3067redux-logger\u98a8\u306e\u30ed\u30ac\u30fc\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u767a\u884c\u524d\u3068\u767a\u884c\u5f8c\u306estore\u306e\u72b6\u614b\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n```index.js\n'use strict';\nconst {createStore, applyMiddleware} = require('redux');\nconst reduxSaga = require('redux-saga');\nconst createSagaMiddleware = reduxSaga.default;\nconst {takeEvery, delay, effects} = reduxSaga;\nconst {put, take, select, fork} = effects;\n\nfunction counter(state = 0, action) {\n\tswitch (action.type) {\n\t\tcase 'INCREMENT':\n\t\t\treturn state + 1;\n\t\tcase 'DECREMENT':\n\t\t\treturn state - 1;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction * incrementAsync() {\n\tyield delay(1000);\n\tyield put({type: 'INCREMENT'});\n}\n\nfunction * watchIncrementAsync() {\n\tyield * takeEvery('INCREMENT_ASYNC', incrementAsync);\n}\n\nfunction * watchAndLog() {\n\twhile (true) {\n\t\tconsole.log('before', yield select());\n\t\tconst action = yield take('*');\n\t\tconsole.log('action', action);\n\t\tconsole.log('after ', yield select());\n\t}\n}\n\nfunction * rootSaga() {\n\tyield fork(watchAndLog);\n\tyield fork(watchIncrementAsync);\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n\tcounter,\n\tapplyMiddleware(sagaMiddleware)\n);\nsagaMiddleware.run(rootSaga);\n\nconst action = type => store.dispatch({type});\n\naction('INCREMENT_ASYNC');\naction('INCREMENT');\naction('INCREMENT');\naction('INCREMENT');\naction('DECREMENT');\naction('INCREMENT_ASYNC');\n```\n\n```\n$ node index.js\nbefore 0\naction { type: 'INCREMENT_ASYNC' }\nafter  0\nbefore 0\naction { type: 'INCREMENT' }\nafter  1\nbefore 1\naction { type: 'INCREMENT' }\nafter  2\nbefore 2\naction { type: 'INCREMENT' }\nafter  3\nbefore 3\naction { type: 'DECREMENT' }\nafter  2\nbefore 2\naction { type: 'INCREMENT_ASYNC' }\nafter  2\nbefore 2\naction { type: 'INCREMENT' }\nafter  3\nbefore 3\naction { type: 'INCREMENT' }\nafter  4\nbefore 4\n```\n\nINCREMENT_ASYNC\u30a2\u30af\u30b7\u30e7\u30f3\u304c\uff12\u56de\u767a\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u6700\u5f8c\u306bINCREMENT\u30a2\u30af\u30b7\u30e7\u30f3\u304c\uff12\u56de\u767a\u884c\u3055\u308c\u3001state\u304c\u5897\u3048\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\n\u3055\u3066\u3001`take`, `select`, `fork`\u3068\u3044\u3063\u305f\u95a2\u6570\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\ntake\u306f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5f85\u3061\u53d7\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3059\u3079\u3066\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5f85\u3063\u3066\u3044\u307e\u3059\u304c\u3001take('\u30a2\u30af\u30b7\u30e7\u30f3')\u3067\u7279\u5b9a\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u304d\u305f\u3068\u304d\u306b\u4f5c\u7528\u3059\u308b\u95a2\u6570\u3092\u7c21\u6f54\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nfork\u306fsaga\u3092\u4e26\u5217\u306b\u5b9f\u884c\u3057\u3001select\u306fstate\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\nredux-saga\u306f\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u95a2\u6570\u306b\u3088\u3063\u3066\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nredux-thunk\u3068\u4f7f\u3046\u72b6\u6cc1\u3067\u3042\u308c\u3070\u3001\u3053\u308c\u304b\u3089\u306f\u9593\u9055\u3044\u306a\u304fredux-saga\u3092\u4f7f\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306fgithub\u306b\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\u9593\u9055\u3063\u305f\u4f7f\u3044\u65b9\u3092\u3057\u3066\u308b\u7b49\u3042\u308c\u3070\u3001\u30a2\u30c9\u30d0\u30a4\u30b9\u3092\u304f\u3060\u3055\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\n[akameco/redux-saga-example](https://github.com/akameco/redux-saga-example)\n\n## \u53c2\u8003\n[yelouafi/redux-saga: An alternative side effect model for Redux apps](https://github.com/yelouafi/redux-saga)\n[redux-saga/README_ja.md at master \u00b7 yelouafi/redux-saga](https://github.com/yelouafi/redux-saga/blob/master/README_ja.md)\n[akameco/redux-saga-example](https://github.com/akameco/redux-saga-example)\n", "tags": ["redux", "redux-saga", "Node.js"]}