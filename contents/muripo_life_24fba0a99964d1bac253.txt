{"tags": ["GLSL"], "context": "Web3D\u3082\u304f\u3082\u304f\u4f1a(WebGL,WebVR,Unity\u306a\u3069\u306a\u3069)\u3067\u3001GLSL\u3067\u30ec\u30a4\u30de\u30fc\u30c1\u30f3\u30b0\u306e\u30c7\u30e2\u3092\u66f8\u3044\u305f\u306e\u3067\u3001\u6295\u7a3f\u3057\u3066\u307f\u308b\u3002\n\u6295\u7a3f\u5148\u3001GLSLSoundBox\u306b\u6295\u7a3f\u3057\u307e\u3057\u305f\uff57\n\n\u30bd\u30fc\u30b9\u306e\u8aac\u660e\n\n\u9695\u77f3\u306e\u885d\u7a81\uff08\u7403\u4f53\u306e\u95a2\u6570\uff09\nfloat sphere(vec3 p){\n    return length(p - vec3(1.0 - 1.0 * time, 6.0 - 6.0 * time, 3.0 - 3.0 * time)) - 1.0;\n}\n\n\u5ea7\u6a19(1.0,6.0,3.0)\u304b\u3089\u7b49\u901f\u76f4\u7dda\u904b\u52d5\u3067\u66f8\u3044\u3066\u3044\u308b\u3002\n\n\u885d\u7a81\u5f8c\u306e\u76db\u308a\u4e0a\u304c\u65b9\nfloat g = 2.0 * sin(useTime) * exp(-(p.x * p.x)/(30.0*sin(useTime*0.1)) -(p.z * p.z)/(30.0*sin(useTime*0.1)));\n\n\u30ac\u30a6\u30b9\u95a2\u6570\u3092\u4f7f\u7528\n\n\u5730\u8868\u306e\u30c7\u30b3\u30dc\u30b3\u306e\u3064\u3051\u65b9\u3002\nfloat rnd(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n    vec2 v = floor(p);\n    vec2 u = fract(p);\n    u = u * u * (3.0 - 2.0 * u);\n    float r = mix(\n        mix(rnd(v), rnd(v + vec2(1.0, 0.0)), u.x),\n        mix(rnd(v + vec2(0.0, 1.0)), rnd(v + vec2(1.0, 1.0)), u.x),\n        u.y\n    );\n    return r * r;\n}\n\nfloat snoise(vec2 p){\n    float n = 0.0;\n    for(float i = 0.0; i < 4.0; ++i){\n        float v = pow(2.0, 2.0 + i);\n        float w = pow(2.0, -1.0 - i);\n        n += noise(p * v) * w;\n    }\n    return n;\n}\n\n\u3067\u3001\u30ce\u30a4\u30ba\u3092\u3064\u3051\u308b\u3002\n\u53c2\u8003:[\u9023\u8f09 GLSL \u7269\u8a9e] \u30c1\u30ab\u30e9\u304c\u6b32\u3057\u3044\u304b\u2026\u2026\uff08\u6700\u7d42\u8a71\uff09\n\n[Web3D\u3082\u304f\u3082\u304f\u4f1a(WebGL,WebVR,Unity\u306a\u3069\u306a\u3069)](https://web3dj.connpass.com/event/39687/)\u3067\u3001GLSL\u3067\u30ec\u30a4\u30de\u30fc\u30c1\u30f3\u30b0\u306e\u30c7\u30e2\u3092\u66f8\u3044\u305f\u306e\u3067\u3001\u6295\u7a3f\u3057\u3066\u307f\u308b\u3002\n\n\u6295\u7a3f\u5148\u3001[GLSLSoundBox](http://glslsandbox.com/e#37390.0)\u306b\u6295\u7a3f\u3057\u307e\u3057\u305f\uff57\n\n## \u30bd\u30fc\u30b9\u306e\u8aac\u660e\n### \u9695\u77f3\u306e\u885d\u7a81\uff08\u7403\u4f53\u306e\u95a2\u6570\uff09\n```c++\nfloat sphere(vec3 p){\n\treturn length(p - vec3(1.0 - 1.0 * time, 6.0 - 6.0 * time, 3.0 - 3.0 * time)) - 1.0;\n}\n```\n\u5ea7\u6a19(1.0,6.0,3.0)\u304b\u3089\u7b49\u901f\u76f4\u7dda\u904b\u52d5\u3067\u66f8\u3044\u3066\u3044\u308b\u3002\n\n### \u885d\u7a81\u5f8c\u306e\u76db\u308a\u4e0a\u304c\u65b9\n```c++\nfloat g = 2.0 * sin(useTime) * exp(-(p.x * p.x)/(30.0*sin(useTime*0.1)) -(p.z * p.z)/(30.0*sin(useTime*0.1)));\n```\n\n[\u30ac\u30a6\u30b9\u95a2\u6570](https://ja.wikipedia.org/wiki/%E3%82%AC%E3%82%A6%E3%82%B9%E9%96%A2%E6%95%B0)\u3092\u4f7f\u7528\n\n### \u5730\u8868\u306e\u30c7\u30b3\u30dc\u30b3\u306e\u3064\u3051\u65b9\u3002\n```c++\nfloat rnd(vec2 n) {\n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 v = floor(p);\n\tvec2 u = fract(p);\n\tu = u * u * (3.0 - 2.0 * u);\n\tfloat r = mix(\n\t\tmix(rnd(v), rnd(v + vec2(1.0, 0.0)), u.x),\n\t\tmix(rnd(v + vec2(0.0, 1.0)), rnd(v + vec2(1.0, 1.0)), u.x),\n\t\tu.y\n\t);\n\treturn r * r;\n}\n\nfloat snoise(vec2 p){\n\tfloat n = 0.0;\n\tfor(float i = 0.0; i < 4.0; ++i){\n\t\tfloat v = pow(2.0, 2.0 + i);\n\t\tfloat w = pow(2.0, -1.0 - i);\n\t\tn += noise(p * v) * w;\n\t}\n\treturn n;\n}\n```\n\n\u3067\u3001\u30ce\u30a4\u30ba\u3092\u3064\u3051\u308b\u3002\n\u53c2\u8003:[[\u9023\u8f09 GLSL \u7269\u8a9e] \u30c1\u30ab\u30e9\u304c\u6b32\u3057\u3044\u304b\u2026\u2026\uff08\u6700\u7d42\u8a71\uff09](http://qiita.com/doxas/items/9664d7f79d9caf9518b5)\n\n![inseki.PNG](https://qiita-image-store.s3.amazonaws.com/0/102634/7ad5d17e-a2c6-b3fd-617e-867840d8225a.png)\n"}