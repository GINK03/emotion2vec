{"context": "\u7c21\u5358\u306a\u6587\u5b57\u5217\u51e6\u7406\u3092\u3059\u308b\u6642\u3082\u8a00\u8a9e\u5909\u3048\u308b\u3068\u3044\u3064\u3082\u5fd8\u308c\u3066\u3057\u307e\u3046\u306e\u3067\n\u6bd4\u8f03\u7684\u826f\u304f\u4f7f\u3046\u8a00\u8a9e\u3092\u30d9\u30fc\u30b9\u306b\u6587\u5b57\u5217\u64cd\u4f5c(\u3068\u5c11\u3057\u306e\u914d\u5217\u51e6\u7406)\u306e\u4f8b\u984c\u3068\u69cb\u6587\u306e\u6bd4\u8f03\u8868\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e17\u8a00\u8a9e\u306b\u3064\u3044\u3066\u306e\u3082\u306e\u3068\u3059\u308b\u3002\nJavaScript\u3001TypeScript\u3001CoffeeScript\u3001\nC#\u3001VisualBasic.NET\u3001VBScript\u3001C++\u3001D\u8a00\u8a9e\u3001R\u8a00\u8a9e\u3001\nRuby\u3001Python\u3001Lua\u3001HotSoupProcessor\u3001\nCommonLisp\u3001Scheme\u3001EmacsLisp\u3001Clojure\n\n\u3061\u3087\u3044\u3061\u3087\u3044\u4f7f\u308f\u306a\u3044\u8a00\u8a9e\u3082\u5165\u3063\u3066\u3044\u308b\u3051\u3069\u6bd4\u8f03\u3059\u308b\u306e\u306b\u826f\u3044\u6a5f\u4f1a\u3060\u3068\u601d\u3063\u3066\u9078\u629e\u3002\nLisp4\u3064\u3082\u306f\u6b63\u76f4\u3084\u308b\u3064\u3082\u308a\u306a\u304b\u3063\u305f\u3051\u308c\u3069\u3082\u3002\nAltJS\u306f\u69cb\u6587\u5909\u308f\u3089\u306a\u3044\u3051\u3069\u304a\u307e\u3051\u3002\n\n\u6587\u5b57\u5217\u64cd\u4f5c\u4f8b\u984c\n\u521d\u3081\u306e\u6587\u5b57\u5217\"2$4$8$16\"\u304b\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\n\u51fa\u529b\n2$4$8$16\n2#4#8#16\n4\n5\n62\n2++4++8++16++32\nHoge->2++4++8++16++32\nHoge->2++4\n->2++4\n\n\n\u3053\u308c\u306f\u305d\u308c\u305e\u308c\u6b21\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u884c\u3063\u305f\u7d50\u679c\u3067\u3042\u308b\u3002\n\u305d\u308c\u3092\u5404\u8a00\u8a9e\u306b\u3066\u884c\u3046\u3002\n\n\u51fa\u529b\n\"2$4$8$16\"\n    \u2193\n\"$\"\u3092\"#\"\u306b\u7f6e\u63db\n    \u2193\n\"2#4#8#16\"\n    \u2193\n\"#\"\u3092\u533a\u5207\u308a\u6587\u5b57\u306b\u914d\u5217\u3078\u5206\u5272\n\u305d\u306e\u8981\u7d20\u6570\u3092\u8868\u793a\n    \u2193\n\"4\"\n    \u2193\n\u914d\u5217\u306b\u8981\u7d20\"32\"\u3092\u8ffd\u52a0\n\u305d\u306e\u8981\u7d20\u6570\u3092\u8868\u793a\n    \u2193\n\"5\"\n    \u2193\n\u914d\u5217\u3092\u6574\u6570\u578b\u306b\u5909\u63db\u3057\u8981\u7d20\u306e\u5408\u8a08\u5024\u3092\u7b97\u51fa\n    \u2193\n\"62\"\n    \u2193\n\u6574\u6570\u5909\u63db\u524d\u306e\u914d\u5217\u306b\"++\"\u3092\u533a\u5207\u308a\u6587\u5b57\u3068\u3057\u3001\u6587\u5b57\u5217\u3068\u3057\u3066\u7d50\u5408\n    \u2193\n\"2++4++8++16++32\"\n    \u2193\n\u6587\u5b57\u5217\"Hoge->\"\u3068\u4e0a\u8a18\u6587\u5b57\u5217\u3092\u9023\u7d50\n    \u2193\n\"Hoge->2++4++8++16++32\"\n    \u2193\n\u5de6\u304b\u308910\u6587\u5b57\u5206\u5207\u308a\u51fa\u3059\n    \u2193\n\"Hoge->2++4\"\n    \u2193\n\u53f3\u304b\u30896\u6587\u5b57\u5206\u5207\u308a\u51fa\u3059\n    \u2193\n\"->2++4\"\n\n\n\nJavaScript\nnode v6.9.1\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> node strTest.js\n\n\n\nJavaScript\n\"use strict\";   //strinc mode\n\nfunction strTest(){\n    //\u6587\u5b57\u5217\u5b9a\u7fa9\n    var strText=\"2$4$8$16\";\n    console.log(strText);\n\n    //\u6587\u5b57\u5217\u7f6e\u63db\n    strText=strText.replace(/\\$/g,\"#\");\n    console.log(strText);\n\n    //\u914d\u5217\u5206\u5272\n    var strList=strText.split(/#/);\n    console.log(strList.length);\n\n    //\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    strList.push(\"32\");\n    //strList=strList.concat(\"32\");\n    //[].push.apply(strList,[\"32\"]);\n    console.log(strList.length);\n\n    //map\u51e6\u7406\n    var intList=strList.map(val=>parseInt(val,10));\n    //var intList=strList.map(Number);\n\n    //\u8db3\u3057\u5408\u308f\u305b\n    var sum=intList.reduce((xsum,val)=>xsum+val);\n    console.log(sum);\n\n    //\u914d\u5217\u7d50\u5408\n    strText=strList.join(\"++\");\n    console.log(strText);\n\n    //\u6587\u5b57\u5217\u9023\u7d50\n    strText=\"Hoge->\"+strText;\n    console.log(strText);\n\n    //\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n    strText=strText.slice(0,10);\n    //strText=strText.substr(0,10);\n    //strText=strText.substring(0,10);\n    console.log(strText);\n\n    //\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n    strText=strText.slice(-6);\n    //strText=strText.substr(-6);\n    //strText=strText.substring(strText.length-6);\n    console.log(strText);\n\n    //\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    process.stdin.once(\"data\",process.exit);\n}\n\nstrTest();\n\n\n\nTypeScript\ntsc Version 1.8.10\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> tsc strTest.ts & node strTest.js\n\n\n\nTypeScript\nfunction strTest(){\n    //\u6587\u5b57\u5217\u5b9a\u7fa9\n    var strText:string=\"2$4$8$16\";\n    console.log(strText);\n\n    //\u6587\u5b57\u5217\u7f6e\u63db\n    strText=strText.replace(/\\$/g,\"#\");\n    console.log(strText);\n\n    //\u914d\u5217\u5206\u5272\n    var strList:string[]=strText.split(/#/);\n    console.log(strList.length);\n\n    //\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    strList.push(\"32\");\n    //strList=strList.concat(\"32\");\n    //[].push.apply(strList,[\"32\"]);\n    console.log(strList.length);\n\n    //map\u51e6\u7406\n    var intList:number[]=strList.map(val=>parseInt(val,10));\n    //var intList:number[]=strList.map(Number);\n\n    //\u8db3\u3057\u5408\u308f\u305b\n    var sum:number=intList.reduce((xsum,val)=>xsum+val);\n    console.log(sum);\n\n    //\u914d\u5217\u7d50\u5408\n    strText=strList.join(\"++\");\n    console.log(strText);\n\n    //\u6587\u5b57\u5217\u9023\u7d50\n    strText=\"Hoge->\"+strText;\n    console.log(strText);\n\n    //\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n    strText=strText.slice(0,10);\n    //strText=strText.substr(0,10);\n    //strText=strText.substring(0,10);\n    console.log(strText);\n\n    //\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n    strText=strText.slice(-6);\n    //strText=strText.substr(-6);\n    //strText=strText.substring(strText.length-6);\n    console.log(strText);\n\n    //\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    process.stdin.once(\"data\",process.exit);\n}\n\nstrTest();\n\n\n\nCoffeeScript\nCoffeeScript version 1.8.0\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> coffee strTest.coffee\n\n\n\nCoffeeScript\nstrTest=->\n    #\u6587\u5b57\u5217\u5b9a\u7fa9\n    strText=\"2$4$8$16\"\n    console.log strText\n\n    #\u6587\u5b57\u5217\u7f6e\u63db\n    strText=strText.replace /\\$/g,\"#\"\n    console.log strText\n\n    #\u914d\u5217\u5206\u5272\n    strList=strText.split /#/\n    console.log strList.length\n\n    #\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    strList.push \"32\"\n    #[].push.apply strList,[\"32\"]\n    #strList=strList.concat \"32\"\n    console.log strList.length\n\n    #map\u51e6\u7406\n    intList=strList.map (val)->parseInt val,10\n    #intList=strList.map Number\n\n    #\u8db3\u3057\u5408\u308f\u305b\n    sum=intList.reduce (xsum,val)->xsum+val\n    console.log sum\n\n    #\u914d\u5217\u7d50\u5408\n    strText=strList.join \"++\"\n    console.log strText\n\n    #\u6587\u5b57\u5217\u9023\u7d50\n    strText=\"Hoge->\"+strText\n    console.log strText\n\n    #\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n    strText=strText.slice 0,10\n    #strText=strText.substr 0,10\n    #strText=strText.substring 0,10\n    console.log strText\n\n    #\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n    strText=strText.slice -6\n    #strText=strText.substr -6\n    #strText=strText.substring strText.length-6\n    console.log strText\n\n    #\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    process.stdin.once \"data\",process.exit\n\nstrTest()\n\n\n\nVB.Net\nMicrosoft (R) Visual Basic Compiler \u30d0\u30fc\u30b8\u30e7\u30f3 1.3.1.60616\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> vbc /nologo /optimize+ strTest.vb & strTest.exe\n\n\n\nVB.net\nOption Strict On    'strict mode\n\nImports System.Console                  'WriteLine, ReadLine\nImports System.Collections.Generic      'List\nImports System.Linq                     'Select, Aggregate\nImports System.Text.RegularExpressions  'Regex\n\nModule Program\n    Sub strTest()\n        '\u6587\u5b57\u5217\u5b9a\u7fa9\n        Dim strText As String=\"2$4$8$16\"\n        WriteLine(strText)\n\n        '\u6587\u5b57\u5217\u7f6e\u63db\n        strText=strText.Replace(\"$\",\"#\")\n        'strText=Regex.Replace(strText,\"\\$\",\"#\")\n        WriteLine(strText)\n\n        '\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n        Dim strList As New List(Of String)(Split(strText,\"#\"))\n        'Dim strList As New List(Of String)(strText.Split(\"#\"))\n        'Dim strList As New List(Of String)(strText.Split({\"#\"},StringSplitOptions.None))\n        'Dim strList As New List(Of String)(New Regex(\"\\#\").Split(strText))\n        WriteLine(strList.Count)\n\n        '\u30ea\u30b9\u30c8\u8981\u7d20\u8ffd\u52a0\n        strList.Add(\"32\")\n        'strList.AddRange({\"32\"})\n        WriteLine(strList.Count)\n\n        'map\u51e6\u7406\n        Dim intList As New List(Of Integer)(strList.ConvertAll(Function(val)CInt(val)))\n        'Dim intList As New List(Of Integer)(strList.Select(Function(val)CInt(val)))\n        'Dim intList As New List(Of Integer)(strList.ConvertAll(AddressOf Integer.Parse))\n        'Dim intList As New List(Of Integer)(strList.Select(AddressOf Integer.Parse))\n\n        '\u8db3\u3057\u5408\u308f\u305b\n        Dim sum As Integer=intList.Aggregate(Function(xsum,val)xsum+val)\n        WriteLine(sum)\n\n        '\u30ea\u30b9\u30c8\u7d50\u5408\n        strText=String.Join(\"++\",strList)\n        WriteLine(strText)\n\n        '\u6587\u5b57\u5217\u9023\u7d50\n        strText=\"Hoge->\" & strText\n        WriteLine(strText)\n\n        '\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n        strText=Left(strText,10)\n        'strText=Mid(strText,1,10)\n        'strText=strText.Substring(0,10)\n        WriteLine(strText)\n\n        '\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n        strText=Right(strText,6)\n        'strText=Mid(strText,strText.Length-6+1)\n        'strText=strText.Substring(strText.Length-6)\n        WriteLine(strText)\n\n        '\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n        ReadLine()\n    End Sub\n\n    Sub Main()\n        strTest()\n    End Sub\nEnd Module\n\n\n\nVBScript\nMicrosoft (R) Windows Script Host Version 5.8\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> cscript //nologo //E:VBScript strTest.vbs\n\n\n\nWSH_VBScript\nSub strTest\n    '\u6587\u5b57\u5217\u5b9a\u7fa9\n    Dim strText\n    strText=\"2$4$8$16\"\n    WScript.Echo strText\n\n    '\u6587\u5b57\u5217\u7f6e\u63db\n    strText=Replace(strText,\"$\",\"#\")\n    WScript.Echo strText\n\n    '\u914d\u5217\u5206\u5272\n    Dim strList\n    strList=Split(strText,\"#\")\n    WScript.Echo UBound(strList)+1\n\n    '\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    ReDim Preserve strList(UBound(strList)+1)\n    strList(UBound(strList))=\"32\"\n    WScript.Echo UBound(strList)+1\n\n    'map\u51e6\u7406\n    ReDim intList(UBound(strList))\n    Dim i\n    For i=0 To UBound(intList)\n        intList(i)=CInt(strList(i))\n    Next\n\n    '\u8db3\u3057\u5408\u308f\u305b\n    Dim sum\n    sum=0\n    For Each val In intList\n        sum=sum+val\n    Next\n    WScript.Echo sum \n\n    '\u30ea\u30b9\u30c8\u7d50\u5408\n    strText=Join(strList,\"++\")\n    WScript.Echo strText \n\n    '\u6587\u5b57\u5217\u9023\u7d50\n    strText=\"Hoge->\" & strText\n    'strText=\"Hoge->\"+strText\n    WScript.Echo strText \n\n    '\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n    strText=Left(strText,10)\n    'strText=Mid(strText,1,10)\n    WScript.Echo strText\n\n    '\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n    strText=Right(strText,6)\n    'strText=Mid(strText,Len(strText)-6+1)\n    WScript.Echo strText\n\n    '\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    WScript.StdIn.ReadLine()\nEnd Sub\n\nstrTest\n\n\n\nC#\n\nMicrosoft (R) Visual C# Compiler \u30d0\u30fc\u30b8\u30e7\u30f3 1.3.1.60616\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> csc /nologo /optimize+ strTest.cs & strTest.exe\n\n\n\nC#\nusing System;                           //Console\nusing System.Collections.Generic;       //List\nusing System.Linq;                      //Select, Aggregate\nusing System.Text.RegularExpressions;   //Regex\n\nclass Program{\n    static void strTest(){\n        //\u6587\u5b57\u5217\u5b9a\u7fa9\n        string strText=\"2$4$8$16\";\n        Console.WriteLine(strText);\n\n        //\u6587\u5b57\u5217\u7f6e\u63db\n        strText=strText.Replace(\"$\",\"#\");\n        //strText=Regex.Replace(strText,\"\\\\$\",\"#\");\n        Console.WriteLine(strText);\n\n        //\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u89e3\n        List<String> strList=new List<string>(strText.Split('#'));\n        //List<String> strList=new List<string>(strText.Split(new string[]{\"#\"},StringSplitOptions.None));\n        //List<String> strList=new List<string>(new Regex(\"\\\\#\").Split(strText));\n        Console.WriteLine(strList.Count);\n\n        //\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n        strList.Add(\"32\");\n        //strList.AddRange(new string[]{\"32\"});\n        Console.WriteLine(strList.Count);\n\n        //map\n        //List<int> intList=new List<int>(strList.ConvertAll(val=>int.Parse(val)));\n        //List<int> intList=new List<int>(strList.Select(val=>int.Parse(val)));\n        //List<int> intList=new List<int>(strList.ConvertAll(int.Parse));\n        List<int> intList=new List<int>(strList.Select(int.Parse));\n\n        //\u8db3\u3057\u5408\u308f\u305b\n        int sum=intList.Aggregate((xsum,val)=>xsum+val);\n        Console.WriteLine(sum);\n\n        //\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n        strText=string.Join(\"++\",strList);\n        Console.WriteLine(strText);\n\n        //\u6587\u5b57\u5217\u9023\u7d50\n        strText=\"Hoge->\"+strText;\n        Console.WriteLine(strText);\n\n        //\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n        strText=strText.Substring(0,10);\n        Console.WriteLine(strText);\n\n        //\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n        strText=strText.Substring(strText.Length-6);\n        Console.WriteLine(strText);\n\n        //\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n        Console.ReadLine();\n    }\n\n    static void Main(){\n        strTest();\n    }\n}\n\n\n\nC++\ng++ (GCC) 4.9.3\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> g++ -std=c++11 strTest.cpp & strTest.exe\n\n\n\nC++\n#include <stdio.h>      //getchar\n#include <stdlib.h>     //atoi\n#include <iostream>     //cout<<\n#include <string>       //string, c_str\n#include <vector>       //vector\n#include <algorithm>    //replace\n#include <sstream>      //stringstream\nusing namespace std;    //std:: \u540d\u524d\u7a7a\u9593\u306e\u8a18\u8ff0\u7701\u7565\n\nvoid strTest(){\n    //\u6587\u5b57\u5217\u5b9a\u7fa9\n    string strText=\"2$4$8$16\";\n    cout<<strText<<endl;\n\n    //\u6587\u5b57\u5217\u7f6e\u63db\n    replace(strText.begin(),strText.end(),'$','#');\n    //\u6587\u5b57\u5217\u306e\u7f6e\u63db\u306f\u4e0d\u53ef(char\u578b\u306e\u307f)\n    cout<<strText<<endl;\n\n    //\u914d\u5217\u5206\u5272\n    vector<string> strList;\n    stringstream ss(strText);\n    string val;\n    while(getline(ss,val,'#')){\n        strList.push_back(val);\n    }\n    cout<<strList.size()<<endl;\n\n    //\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    strList.push_back(\"32\");\n    cout<<strList.size()<<endl;\n\n    //map\u51e6\u7406\n    vector<int> intList;\n    for(string val:strList){\n        intList.push_back(stoi(val));\n        //intList.push_back(atoi(val.c_str()));\n    }\n\n    //\u8db3\u3057\u5408\u308f\u305b\n    int sum=0;\n    for(int val:intList){\n        sum+=val;\n    }\n    cout<<sum<<endl;\n\n    //\u914d\u5217\u7d50\u5408\n    strText=\"\";\n    for(string val:strList){\n        if(strText!=\"\"){strText+=\"++\";}\n        strText+=val;\n    }\n    cout<<strText<<endl;\n\n    //\u6587\u5b57\u5217\u9023\u7d50\n    strText=\"hoge<-\"+strText;\n    cout<<strText<<endl;\n\n    //\u6587\u5b57\u5217\u5207\u308a\u53d6\u308a\u5de6\n    strText=strText.substr(0,10);\n    cout<<strText<<endl;\n\n    //\u6587\u5b57\u5217\u5207\u308a\u53d6\u308a\u53f3\n    strText=strText.substr(strText.size()-6);\n    cout<<strText<<endl;\n\n    //\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    getchar();\n}\n\nint main(){\n    strTest();\n    return 0;\n}\n\n\n\nD\u8a00\u8a9e\nDMD32 D Compiler v2.066.1\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> dmd strTest.d & strTest.exe\n\n\n\nD\u8a00\u8a9e\nimport std.stdio;       //writeln, readln\nimport std.string;      //replace, split\nimport std.array;       //array\nimport std.regex;       //regex\nimport std.conv;        //to!\nimport std.algorithm;   //map!, reduce!\n\nvoid strTest(){\n    //\u6587\u5b57\u5217\u5b9a\u7fa9\n    string strText=\"2$4$8$16\";\n    writeln(strText);\n\n    //\u6587\u5b57\u5217\u7f6e\u63db\n    strText=replace(strText,\"$\",\"#\");\n    //strText=replace(strText,regex(r\"\\$\",\"g\"),\"#\");\n    writeln(strText);\n\n    //\u914d\u5217\u5206\u5272\n    string[] strList=split(strText,\"#\");\n    //string[] strList=split(strText,regex(r\"\\#\",\"g\"));\n    //string[] strList=array(splitter(strText,\"#\"));\n    //string[] strList=array(splitter(strText,regex(r\"\\#\",\"g\")));\n    writeln(strList.length);\n\n    //\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    strList~=\"32\";\n    writeln(strList.length);\n\n    //map\u51e6\u7406\n    int[] intList=array(map!(\"to!int(a)\")(strList));\n    //int[] intList=array(map!(val=>to!int(val))(strList));\n    //int[] intList=array(map!(to!int)(strList));\n\n    //\u8db3\u3057\u5408\u308f\u305b\n    int sum=reduce!(\"a+b\")(intList);\n    //int sum=reduce!((xsum,val)=>xsum+val)(intList);\n    writeln(sum);\n\n    //\u914d\u5217\u7d50\u5408\n    strText=strList.join(\"++\");\n    writeln(strText);\n\n    //\u6587\u5b57\u5217\u9023\u7d50\n    strText=\"Hoge->\"~strText;\n    writeln(strText);\n\n    //\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n    strText=strText[0..10];\n    writeln(strText);\n\n    //\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n    strText=strText[$-6..$];\n    writeln(strText);\n\n    //\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    readln();\n}\n\nvoid main(){\n    strTest();\n}\n\n\n\nHSP\nHSP : Hot Soup Processor ver3.4\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\n::\u30a8\u30c7\u30a3\u30bf\u304b\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\nC:\\> C:\\hsp34\\hsed3\n\n\n\nHSP\n#runtime \"hsp3cl\"   ;\u30b3\u30f3\u30bd\u30fc\u30eb\n#cmpopt varinit 1   ;strict mode\n\n#module\n    #deffunc strTest\n        ;\u6587\u5b57\u5217\u5b9a\u7fa9\n        strText=\"2$4$8$16\"\n        mes strText\n\n        ;\u6587\u5b57\u5217\u7f6e\u63db\n        strrep strText,\"$\",\"#\"\n        mes strText\n\n        ;\u914d\u5217\u5206\u5272\n        sdim strList\n        split strText,\"#\",strList\n        mes length(strList)\n\n        ;\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n        strList.length(strList)=\"32\"\n        mes length(strList)\n\n        ;map\u51e6\u7406\n        dim intList,length(strList)\n        #define map(%1,%2,%3,%4) foreach %1:%3=%1(cnt):%2(cnt)=%4:loop\n        map strList,intList,val,int(val)\n\n        ;\u8db3\u3057\u5408\u308f\u305b\n        #define reduce(%1,%2,%3,%4) %2=%1(0):repeat length(%1)-1:%3=%1(cnt+1):%2=%4:loop\n        reduce intList,sum,val,sum+val\n        mes sum\n\n        ;\u914d\u5217\u7d50\u5408\n        strText=\"\"\n        foreach strList\n            if cnt!=0: strText+=\"++\"\n            strText+=strList(cnt)\n        loop\n        mes strText\n\n        ;\u6587\u5b57\u5217\u9023\u7d50\n        strText=\"Hoge->\"+strText\n        mes strText\n\n        ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n        strText=strmid(strText,0,10)\n        mes strText\n\n        ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n        strText=strmid(strText,-1,6)\n        mes strText\n\n        ;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n        dim exit:input exit,,1\n    return\n#global\n\nstrTest\n\n\n\nRuby\nruby 2.0.0p481 (2014-05-08) [i386-mingw32]\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> ruby strTest.rb\n\n\n\nRuby\ndef strTest\n    #\u6587\u5b57\u5217\u5b9a\u7fa9\n    strText=\"2$4$8$16\"\n    puts strText\n\n    #\u6587\u5b57\u5217\u7f6e\u63db\n    strText=strText.gsub /\\$/,\"#\"\n    puts strText\n\n    #\u914d\u5217\u5206\u5272\n    strList=strText.split /#/\n    puts strList.length\n\n    #\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    strList.push \"32\"\n    #strList=strList.clone.push \"32\"\n    #strList << \"32\"\n    #strList.concat [\"32\"]\n    #strList=strList.dup.concat [\"32\"]\n    #strList+=[\"32\"]\n    puts strList.length\n\n    #map\u51e6\u7406\n    intList=strList.map{|val| val.to_i}\n    #intList=strList.collect{|val| val.to_i}\n\n    #\u8db3\u3057\u5408\u308f\u305b\n    sum=intList.reduce{|xsum,val| xsum+val}\n    #sum=intList.inject{|xsum,val| xsum+val}\n    puts sum\n\n    #\u914d\u5217\u7d50\u5408\n    strText=strList.join \"++\"\n    puts strText\n\n    #\u6587\u5b57\u5217\u9023\u7d50\n    strText=\"Hoge->\" << strText\n    #strText=\"Hoge->\" + strText\n    puts strText\n\n    #\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n    strText=strText[0,10]\n    #strText=strText[0..10-1]\n    #strText=strText.slice 0,10\n    #strText=strText.slice 0..10-1\n    puts strText\n\n    #\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n    strText=strText[-6..-1]\n    #strText=strText[strText.length-6,strText.length]\n    #strText=strText.slice -6..-1\n    #strText=strText.slice strText.length-6,strText.length\n    puts strText\n\n    #\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    STDIN.gets\nend\n\nstrTest\n\n\n\nPython\nPython 3.4.1 (v3.4.1:c0e311e010fc, May 18 2014, 10:38:22) [MSC v.1600 32 bit (Intel)] on win32\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> py -3 strTest.py\n\n\n\nPython\nimport functools    #reduce\n\ndef strTest():\n    #\u6587\u5b57\u5217\u5b9a\u7fa9\n    strText=\"2$4$8$16\"\n    print(strText)\n\n    #\u6587\u5b57\u5217\u7f6e\u63db\n    strText=strText.replace(\"$\",\"#\")\n    print(strText)\n\n    #\u914d\u5217\u5206\u5272\n    strList=strText.split(\"#\")\n    print(len(strList))\n\n    #\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    strList.append(\"32\")\n    print(len(strList))\n\n    #map\u51e6\u7406\n    intList=map(lambda val:int(val),strList)\n    #intList=map(int,strList)\n\n    #\u8db3\u3057\u5408\u308f\u305b\n    sum=functools.reduce(lambda xsum,val:xsum+val,intList)\n    print(sum)\n\n    #\u914d\u5217\u7d50\u5408\n    strText=\"++\".join(strList)\n    print(strText)\n\n    #\u6587\u5b57\u5217\u9023\u7d50\n    strText=\"Hoge->\"+strText\n    print(strText)\n\n    #\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n    strText=strText[0:10]\n    print(strText)\n\n    #\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n    strText=strText[-6:]\n    print(strText)\n\n    #\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    input()\n\nstrTest()\n\n\n\nLua\nLua 5.3.3\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> lua strTest.lua\n\n\n\nLua\nfunction strTest()\n    --\u6587\u5b57\u5217\u5b9a\u7fa9\n    local strText=\"2$4$8$16\"\n    print(strText)\n\n    --\u6587\u5b57\u5217\u7f6e\u63db\n    strText=string.gsub(strText,\"%$\",\"#\")\n    print(strText)\n\n    --\u914d\u5217\u5206\u5272\n    --Lua\u306bsplit\u306f\u5b58\u5728\u3057\u306a\u3044\n    local strList=((function(data,sepa)\n        local result={}\n        for chank in string.gmatch(data..sepa,\"(.-)\"..sepa) do\n            table.insert(result,chank)\n        end\n        return result\n    end)(strText,\"#\"))\n    print(#strList)\n\n    --\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    table.insert(strList,\"32\")\n    print(#strList)\n\n    --map\u51e6\u7406\n    local intList={}\n    for i,val in ipairs(strList) do\n        intList[i]=tonumber(val)\n    end\n\n    --\u8db3\u3057\u5408\u308f\u305b\n    sum=0\n    for i,val in ipairs(intList) do\n        sum=sum+val\n    end\n    print(sum)\n\n    --\u914d\u5217\u7d50\u5408\n    strText=\"\"\n    for i,val in ipairs(strList) do\n        if strText~=\"\" then\n            strText=strText..\"++\"\n        end\n        strText=strText..val\n    end\n    print(strText)\n\n    --\u6587\u5b57\u5217\u9023\u7d50\n    strText=\"Hoge->\"..strText\n    print(strText)\n\n    --\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n    strText=string.sub(strText,1,10)\n    print(strText)\n\n    --\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n    strText=string.sub(strText,-6)\n    print(strText)\n\n    --\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    io.read()\nend\n\nstrTest()\n\n\n\nR\u8a00\u8a9e\nR scripting front-end version 3.3.0 (2016-05-03)\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> rscript strTest.r\n\n\n\nR\u8a00\u8a9e\nstrTest<-function(){\n    #\u6587\u5b57\u5217\u5b9a\u7fa9\n    strText<-\"2$4$8$16\"\n    cat(strText,\"\\n\")\n\n    #\u6587\u5b57\u5217\u7f6e\u63db\n    strText<-gsub(\"\\\\$\",\"#\",strText)\n    cat(strText,\"\\n\")\n\n    #\u914d\u5217\u5206\u5272\n    strList<-unlist(strsplit(strText,\"#\"))\n    cat(length(strList),\"\\n\")\n\n    #\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n    strList<-c(strList,\"32\")\n    cat(length(strList),\"\\n\")\n\n    #map\u51e6\u7406\n    intList<-Map(function(val){as.integer(val)},strList)\n    #intList<-(function(val){as.integer(val)})(strList)\n    #intList<-Map(as.integer,strList)\n\n    #\u8db3\u3057\u5408\u308f\u305b\n    sum<-Reduce(function(xsum,val){xsum+val},intList)\n    cat(sum,\"\\n\")\n\n    #\u914d\u5217\u7d50\u5408\n    strText<-\"\"\n    for(val in strList){\n        if(strText!=\"\"){\n            strText<-paste(strText,\"++\",sep=\"\")\n        }\n        strText<-paste(strText,val,sep=\"\")\n    }\n    cat(strText,\"\\n\")\n\n    #\u6587\u5b57\u5217\u9023\u7d50\n    strText<-sprintf(\"Hoge->%s\",strText)\n    cat(strText,\"\\n\")\n\n    #\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n    strText<-substr(strText,1,10)\n    cat(strText,\"\\n\")\n\n    #\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n    strText<-substr(strText,nchar(strText)-6+1,nchar(strText))\n    cat(strText,\"\\n\")\n\n    #\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    readLines(file(\"stdin\"), n <- 1L)\n}\n\nstrTest()\n\n\n\nCommonLisp\nSBCL 1.3.5\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> sbcl --script strTest.lisp\n\n\n\nCommonLisp\n(defun strTest()\n    (let (\n        ;\u6587\u5b57\u5217\u5b9a\u7fa9(\u675f\u7e1b)\n        (strText \"2$4$8$16\")\n        strList intList\n        (sum 0)\n    )\n        (format t \"~A~%\" strText)\n\n        ;\u6587\u5b57\u5217\u7f6e\u63db\n        (setf strText (substitute #\\# #\\$ strText))\n        ;\u6587\u5b57\u5217\u306e\u7f6e\u63db\u306f\u4e0d\u53ef(char\u578b\u306e\u307f)\n        (format t \"~A~%\" strText)\n\n        ;\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n        ;CommonLisp\u306bsplit\u306f\u5b58\u5728\u3057\u306a\u3044\n        (setf strList ((lambda (data sepa)\n            (let ((result '()) (now1 0) now2)\n                (loop\n                    (setf now2 (search sepa data :start2 now1))\n                    (setf result (append result `(,(subseq data now1 now2))))\n                    (if (not now2)\n                        (return result)\n                        (setf now1 (+ now2 (length sepa)))\n                    )\n                )\n            )\n        ) strText \"#\"))\n        (format t \"~d~%\" (length strList))\n\n        ;\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n        (setf strList (append strList '(\"32\")))\n        (format t \"~d~%\" (length strList))\n\n        ;map\u51e6\u7406\n        (setf intList (mapcar #'(lambda(val)(parse-integer val)) strList))\n        ;(setf intList (mapcar 'parse-integer strList))\n\n        ;\u8db3\u3057\u5408\u308f\u305b\n        (setf sum (apply '+ intList))\n        ;(setf sum (reduce '+ intList))\n        (format t \"~d~%\" sum)\n\n        ;\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n        (setf strText (format nil \"~{~A~^++~}\" strList))\n        (format t \"~A~%\" strText)\n\n        ;\u6587\u5b57\u5217\u9023\u7d50\n        (setf strText (format nil \"Hoge->~A\" strText))\n        ;(concatenate 'string \"Hoge->\" strText)\n        (format t \"~A~%\" strText)\n\n        ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n        (setf strText (subseq strText 0 10))\n        (format t \"~A~%\" strText)\n\n        ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n        (setf strText (subseq strText (- (length strText) 6)))\n        (format t \"~A~%\" strText)\n\n        ;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n        (read-line)\n    )\n)\n\n(strTest)\n\n\n\nEmacsLisp\nGNU Emacs 24.5.1 (i686-pc-mingw32)\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> emacs -Q --script strTest.el\n\n\n\nEmacsLisp\n(defun strTest()\n    (let (\n        ;\u6587\u5b57\u5217\u5b9a\u7fa9(\u675f\u7e1b)\n        (strText \"2$4$8$16\")\n        strList intList\n        (sum 0)\n    )\n        (princ (format \"%s\\n\" strText))\n\n        ;\u6587\u5b57\u5217\u7f6e\u63db\n        (setf strText (replace-regexp-in-string \"\\\\$\" \"#\" strText))\n        (princ (format \"%s\\n\" strText))\n\n        ;\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n        (setf strList (split-string strText \"#\"))\n        (princ (format \"%d\\n\" (length strList)))\n\n        ;\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n        (setf strList (append strList '(\"32\")))\n        (princ (format \"%d\\n\" (length strList)))\n\n        ;map\u51e6\u7406\n        (setf intList (mapcar #'(lambda(val)(string-to-number val)) strList))\n        ;(setf intList (mapcar 'string-to-number strList))\n\n        ;\u8db3\u3057\u5408\u308f\u305b\n        (setf sum (apply '+ intList))\n        (princ (format \"%d\\n\" sum))\n\n        ;\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n        (setf strText (mapconcat 'identity strList \"++\"))\n        (princ (format \"%s\\n\" strText))\n\n        ;\u6587\u5b57\u5217\u9023\u7d50\n        (setf strText (concat \"Hoge->\" strText))\n        (princ (format \"%s\\n\" strText))\n\n        ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n        (setf strText (substring strText 0 10))\n        (princ (format \"%s\\n\" strText))\n\n        ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n        (setf strText (substring strText -6))\n        (princ (format \"%s\\n\" strText))\n\n        ;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n        (read-string \"\")\n    )\n)\n\n(strTest)\n\n\n\nScheme\nGauche scheme shell, version 0.9.4 [utf-8,wthreads], i686-pc-mingw32\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> gosh strTest.scm\n\n\n\nScheme\n(define (strTest)\n    (let (\n        ;\u6587\u5b57\u5217\u5b9a\u7fa9(\u675f\u7e1b)\n        (strText \"2$4$8$16\")\n        (strList '())\n        (intList '())\n        (sum 0)\n    )\n        (format #t \"~A\\n\" strText)\n\n        ;\u6587\u5b57\u5217\u7f6e\u63db\n        (set! strText (regexp-replace-all #/\\$/ strText \"#\"))\n        (format #t \"~A\\n\" strText)\n\n        ;\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n        (set! strList (string-split strText \"#\"))\n        (format #t \"~d\\n\" (length strList))\n\n        ;\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n        (set! strList (append strList '(\"32\")))\n        (format #t \"~d\\n\" (length strList))\n\n        ;map\u51e6\u7406\n        (set! intList (map (lambda (val) (string->number val)) strList))\n        ;(set! intList (map string->number strList))\n\n        ;\u8db3\u3057\u5408\u308f\u305b\n        (set! sum (apply + intList))\n        ;(set! sum (fold + 0 intList))\n        (format #t \"~d\\n\" sum)\n\n        ;\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n        (set! strText (string-join strList \"++\"))\n        (format #t \"~A\\n\" strText)\n\n        ;\u6587\u5b57\u5217\u9023\u7d50\n        (set! strText (string-append \"Hoge->\" strText))\n        (format #t \"~A\\n\" strText)\n\n        ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n        (set! strText (substring strText 0 10))\n        (format #t \"~A\\n\" strText)\n\n        ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n        (set! strText (substring strText (- (string-length strText) 6) -1))\n        (format #t \"~A\\n\" strText)\n\n        ;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n        (read-line)\n    )\n)\n\n(strTest)\n\n\n\nClojure\nClojure 1.8.0 (CLR)\n\n\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> Clojure.Main strTest.clj\n\n\n\nclojure\n(require '[clojure.string :as string])\n\n(defn strTest[]\n    ;\u6587\u5b57\u5217\u5b9a\u7fa9(\u675f\u7e1b)\n    (let [strText \"2$4$8$16\"]\n        (println strText)\n\n        ;\u6587\u5b57\u5217\u7f6e\u63db\n        (let [strText (string/replace strText \"$\" \"#\")]\n            (println strText)\n\n            ;\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n            (let [strList (string/split strText #\"\\#\")]\n                (println (count strList))\n\n                ;\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n                (let [strList (conj strList \"32\")]\n                    (println (count strList))\n\n                    ;map\u51e6\u7406\n                    (let [intList (map (fn [val] (int val)) strList)]\n                    ;(let [intList (map int strList)]\n\n                        ;\u8db3\u3057\u5408\u308f\u305b\n                        (let [sum (apply + intList)]\n                            (println sum)\n                        )\n                    )\n\n                    ;\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n                    (let [strText (string/join \"++\" strList)]\n                        (println strText)\n\n                        ;\u6587\u5b57\u5217\u9023\u7d50\n                        (let [strText (str \"Hoge->\" strText)]\n                            (println strText)\n\n                            ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n                            (let [strText (subs strText 0 10)]\n                                (println strText)\n\n                                ;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n                                (let [strText (subs strText (- (count strText) 6))]\n                                    (println strText)\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n    )\n\n    ;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n    (read-line)\n)\n(strTest)\n\n\n\n\u307e\u3068\u3081\n\n\n\n\u8a00\u8a9e\n\u6587\u5b57\u5217\u7f6e\u63db\n\u6587\u5b57\u5217\u5206\u5272\n\u6587\u5b57\u5217\u9023\u7d50\n\u914d\u5217\u7d50\u5408\n\n\n\n\nJavaScriptTypeScriptCoffeeScript\nreplace\nsplit\n+\u6f14\u7b97\u5b50\njoin\n\n\nVB.Net\nReplace\nSplit\n&\u6f14\u7b97\u5b50+\u6f14\u7b97\u5b50\nJoin\n\n\nVBScript\nReplace\nSplit\n&\u6f14\u7b97\u5b50+\u6f14\u7b97\u5b50\nJoin\n\n\nC#\nReplace\nSplit\n+\u6f14\u7b97\u5b50\nJoin\n\n\nC++\nreplace \u203bchar\u578b\u306e\u307f\n\u7121\u3057\n+\u6f14\u7b97\u5b50\n\u7121\u3057\n\n\nD\u8a00\u8a9e\nreplace\nsplitsplitter\n~\u6f14\u7b97\u5b50\njoin\n\n\nHSP\nstrrep \u203b\u7834\u58ca\nsplit\n+\u6f14\u7b97\u5b50\n\u7121\u3057\n\n\nRuby\ngsub\nsplit\n<<\u6f14\u7b97\u5b50+\u6f14\u7b97\u5b50\njoin\n\n\nPython\nreplace\nsplit\n+\u6f14\u7b97\u5b50\njoin\n\n\nLua\nstring.gsub\n\u7121\u3057\n..\u6f14\u7b97\u5b50\n\u7121\u3057\n\n\nR\u8a00\u8a9e\ngsub\nstrsplit\npastesprintf \u7b49\npaste\n\n\nCommonLisp\nsubstitute\u203bchar\u578b\u306e\u307f\n\u7121\u3057\nformat nilconcatenate 'string \u7b49\nformat nil\n\n\nEmacsLisp\nreplace-regexp-in-string\nsplit-string\nconcat\nmapconcat 'identity\n\n\nScheme\nregexp-replace-all\u203bGauche\u62e1\u5f35\nstring-split\u203bGauche\u62e1\u5f35\nstring-append\nstring-join\u203bGauche\u62e1\u5f35\n\n\nClojure\nstring/replace\nstring/split\nstr\nstring/join\n\n\n\n\n\n\n\n\n\n\u8a00\u8a9e\n\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\n\u914d\u5217\u8981\u7d20\u8ffd\u52a0\nmap\u95a2\u6570\nreduce\u95a2\u6570\n\n\nJavaScriptTypeScriptCoffeeScript\nslicesubstrsubstring\npush \u203b\u7834\u58caconcatpush.apply \u203b\u7834\u58ca\nmap\nreduce\n\n\nVB.Net\nLeftRightMidSubstring\nAdd \u203b\u7834\u58caAddRange \u203b\u7834\u58ca\nConvertAllSelect\nAggregate\n\n\nVBScript\nLeftRightMid\n\u7121\u3057\n\u7121\u3057\n\u7121\u3057\n\n\nC#\nSubstring\nAdd \u203b\u7834\u58caAddRange \u203b\u7834\u58ca\nConvertAllSelect\nAggregate\n\n\nC++\nsubstr\npush_back\n\u7121\u3057\n\u7121\u3057\n\n\nD\u8a00\u8a9e\n[a..b][$a..b$]\n~\u6f14\u7b97\u5b50\nmap!\nreduce!\n\n\nHSP\nstrmid\na(length(a))=ba.length(a)=b\n\u7121\u3057\n\u7121\u3057\n\n\nRuby\n[a,b][a..b]slice\npush \u203b\u7834\u58ca<<\u6f14\u7b97\u5b50 \u203b\u7834\u58caconcat \u203b\u7834\u58ca+\u6f14\u7b97\u5b50\nmapcollect\nreduceinject\n\n\nPython\n[a:b]\nappend \u203b\u7834\u58ca\nmap\nfunctools.reduce\n\n\nLua\nstring.sub\ntable.insert \u203b\u7834\u58ca\n\u7121\u3057\n\u7121\u3057\n\n\nR\u8a00\u8a9e\nsubstr\nc \u203b\u7834\u58ca\nMap\nReduce\n\n\nCommonLisp\nsubseq\nappend\nmapcarmap 'list\nreduce\n\n\nEmacsLisp\nsubstring\nappend\nmapcar\n\u7121\u3057\n\n\nScheme\nsubstring\nappend\nmapmap-to\nfold\n\n\nClojure\nsubs\nconj\nmap\nreduce\n\n\n\n\u203b1 .NET\u8a00\u8a9e\u306e\u914d\u5217\u306fList<T>\u578b\u3067\u3042\u308b\u3053\u3068\u3068\u3059\u308b\u3002\n\u203b2 C++\u306e\u914d\u5217\u306fvector<T>\u578b\u3067\u3042\u308b\u3053\u3068\u3068\u3059\u308b\u3002\n\u203b3 HSP\u306e\u914d\u5217\u81ea\u52d5\u62e1\u5f35\u306f\u884c\u3046\u305f\u3073\u306b\u65b0\u3057\u3044\u914d\u5217\u3092\u4f5c\u308a\u76f4\u3059\u305f\u3081\u3001\u591a\u7528\u3059\u308b\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3059\u308b\u3002\n\u203b4 Ruby\u306e\u7834\u58ca\u30e1\u30bd\u30c3\u30c9\u306fhoge.clone.push\u3084hoge.dub.push\u306e\u3088\u3046\u306bclone\u304bdub\u3092\u30c1\u30a7\u30fc\u30f3\u3067\u7e4b\u3052\u308b\u3053\u3068\u3067\u975e\u7834\u58ca\u30e1\u30bd\u30c3\u30c9\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u203b5 Lisp\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bapply\u306f\u30ea\u30b9\u30c8\u3092\u5f15\u6570\u306b\u5206\u5272\u3057\u3066\u4efb\u610f\u306e\u95a2\u6570\u306b\u6e21\u305b\u308b\u95a2\u6570\u3002reduce\u3068apply\u306f\u672c\u6765\u306e\u7528\u9014\u304c\u7570\u306a\u308b\u3002\n\n\u3042\u3068\u304c\u304d\n\u307e\u3068\u3081\u3066\u307f\u3066\u601d\u3063\u305f\u3051\u3069\u3001\u69cb\u6587\u540d\u4ee5\u5916\u306b\u3082\u4f7f\u3044\u65b9\u3082\u7d50\u69cb\u5909\u308f\u3063\u3066\u304f\u308b\u306e\u304c\u8f9b\u3044\u3068\u601d\u3063\u305f\u3002\n\u5177\u4f53\u7684\u306b\u306f\u95a2\u6570\u30c1\u30a7\u30fc\u30f3\u306e\u6709\u7121\u3001\u5f15\u6570\u306e\u9806\u5e8f\u3001\u6b63\u898f\u8868\u73fe\u3042\u305f\u308a\u3002\n\u7279\u306b$\u306e\u6b63\u898f\u8868\u73fe\u306f\u4f55\u7a2e\u985e\u304b\u3042\u3063\u3066\u30cf\u30de\u308a\u304b\u3051\u305f\u3082\u306e\u3082\u3042\u3063\u305f\u3002\n\u3042\u3068\u306fCommonLisp\u306e\u6587\u5b57\u5217\u51e6\u7406\u304c\u3082\u3046\u5c11\u3057\u512a\u79c0\u3067\u3042\u3063\u3066\u304f\u308c\u3055\u3048\u3059\u308c\u3070\u3001\n\u6050\u3089\u304fLisp4\u3064\u3082\u3084\u308b\u3053\u3068\u306b\u306f\u306a\u3089\u306a\u304b\u3063\u305f\u3002\nEmacsLisp\u306e\u6587\u5b57\u5217\u64cd\u4f5c\u306f\u7d50\u69cb\u512a\u79c0\u3060\u3002\nScheme\u306f\u51e6\u7406\u7cfb\u4f9d\u5b58\u591a\u3059\u304e\u306a\u306e\u3067\u306a\u3093\u3068\u3082\u8a00\u3048\u306a\u3044\u3002\n\n\u8ffd\u8a18\n\u30b3\u30e1\u30f3\u30c8\u9802\u3044\u3066\u3001map\u306b\u6e21\u3059\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u30e9\u30e0\u30c0\u5f62\u5f0f\u3068\u95a2\u6570\u540d\u6307\u5b9a\u3067\u4f75\u8a18\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u305d\u308c\u4ee5\u5916\u306b\u3082\u3001\u540c\u3058\u52d5\u4f5c\u306e\u51e6\u7406\u3092\u884c\u3048\u308b\u69cb\u6587\u306f\u30b3\u30e1\u30f3\u30c8\u3067\u57cb\u3081\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n(Ruby\u304c\u3082\u306e\u3059\u3054\u3044\u5897\u3048\u305f\u2026)\n\n\nC++\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u4f55\u3092\u3059\u308b\u306b\u3082\u7121\u3044\u7121\u3044\u5c3d\u304f\u3057\u3067\u304b\u306a\u308a\u3057\u3093\u3069\u304b\u3063\u305f\u2026\nC++\u306b\u306f\u6587\u5b57\u5217\u64cd\u4f5c\u3092\u3055\u305b\u308b\u3079\u304d\u3067\u306a\u3044\u3002\n\n\n\n\u7c21\u5358\u306a\u6587\u5b57\u5217\u51e6\u7406\u3092\u3059\u308b\u6642\u3082\u8a00\u8a9e\u5909\u3048\u308b\u3068\u3044\u3064\u3082\u5fd8\u308c\u3066\u3057\u307e\u3046\u306e\u3067\n\u6bd4\u8f03\u7684\u826f\u304f\u4f7f\u3046\u8a00\u8a9e\u3092\u30d9\u30fc\u30b9\u306b\u6587\u5b57\u5217\u64cd\u4f5c(\u3068\u5c11\u3057\u306e\u914d\u5217\u51e6\u7406)\u306e\u4f8b\u984c\u3068\u69cb\u6587\u306e\u6bd4\u8f03\u8868\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e17\u8a00\u8a9e\u306b\u3064\u3044\u3066\u306e\u3082\u306e\u3068\u3059\u308b\u3002\n\n```text: \nJavaScript\u3001TypeScript\u3001CoffeeScript\u3001\nC#\u3001VisualBasic.NET\u3001VBScript\u3001C++\u3001D\u8a00\u8a9e\u3001R\u8a00\u8a9e\u3001\nRuby\u3001Python\u3001Lua\u3001HotSoupProcessor\u3001\nCommonLisp\u3001Scheme\u3001EmacsLisp\u3001Clojure\n```\n\u3061\u3087\u3044\u3061\u3087\u3044\u4f7f\u308f\u306a\u3044\u8a00\u8a9e\u3082\u5165\u3063\u3066\u3044\u308b\u3051\u3069\u6bd4\u8f03\u3059\u308b\u306e\u306b\u826f\u3044\u6a5f\u4f1a\u3060\u3068\u601d\u3063\u3066\u9078\u629e\u3002\nLisp4\u3064\u3082\u306f\u6b63\u76f4\u3084\u308b\u3064\u3082\u308a\u306a\u304b\u3063\u305f\u3051\u308c\u3069\u3082\u3002\nAltJS\u306f\u69cb\u6587\u5909\u308f\u3089\u306a\u3044\u3051\u3069\u304a\u307e\u3051\u3002\n\n# \u6587\u5b57\u5217\u64cd\u4f5c\u4f8b\u984c\n\u521d\u3081\u306e\u6587\u5b57\u5217\"2\\$4\\$8\\$16\"\u304b\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\n```text:\u51fa\u529b\n2$4$8$16\n2#4#8#16\n4\n5\n62\n2++4++8++16++32\nHoge->2++4++8++16++32\nHoge->2++4\n->2++4\n```\n\u3053\u308c\u306f\u305d\u308c\u305e\u308c\u6b21\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u884c\u3063\u305f\u7d50\u679c\u3067\u3042\u308b\u3002\n\u305d\u308c\u3092\u5404\u8a00\u8a9e\u306b\u3066\u884c\u3046\u3002\n\n```bat:\u51fa\u529b\n\"2$4$8$16\"\n\t\u2193\n\"$\"\u3092\"#\"\u306b\u7f6e\u63db\n\t\u2193\n\"2#4#8#16\"\n\t\u2193\n\"#\"\u3092\u533a\u5207\u308a\u6587\u5b57\u306b\u914d\u5217\u3078\u5206\u5272\n\u305d\u306e\u8981\u7d20\u6570\u3092\u8868\u793a\n\t\u2193\n\"4\"\n\t\u2193\n\u914d\u5217\u306b\u8981\u7d20\"32\"\u3092\u8ffd\u52a0\n\u305d\u306e\u8981\u7d20\u6570\u3092\u8868\u793a\n\t\u2193\n\"5\"\n\t\u2193\n\u914d\u5217\u3092\u6574\u6570\u578b\u306b\u5909\u63db\u3057\u8981\u7d20\u306e\u5408\u8a08\u5024\u3092\u7b97\u51fa\n\t\u2193\n\"62\"\n\t\u2193\n\u6574\u6570\u5909\u63db\u524d\u306e\u914d\u5217\u306b\"++\"\u3092\u533a\u5207\u308a\u6587\u5b57\u3068\u3057\u3001\u6587\u5b57\u5217\u3068\u3057\u3066\u7d50\u5408\n\t\u2193\n\"2++4++8++16++32\"\n\t\u2193\n\u6587\u5b57\u5217\"Hoge->\"\u3068\u4e0a\u8a18\u6587\u5b57\u5217\u3092\u9023\u7d50\n\t\u2193\n\"Hoge->2++4++8++16++32\"\n\t\u2193\n\u5de6\u304b\u308910\u6587\u5b57\u5206\u5207\u308a\u51fa\u3059\n\t\u2193\n\"Hoge->2++4\"\n\t\u2193\n\u53f3\u304b\u30896\u6587\u5b57\u5206\u5207\u308a\u51fa\u3059\n\t\u2193\n\"->2++4\"\n```\n\n## JavaScript\nnode v6.9.1\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> node strTest.js\n```\n\n```js:JavaScript\n\"use strict\";\t//strinc mode\n\nfunction strTest(){\n\t//\u6587\u5b57\u5217\u5b9a\u7fa9\n\tvar strText=\"2$4$8$16\";\n\tconsole.log(strText);\n\n\t//\u6587\u5b57\u5217\u7f6e\u63db\n\tstrText=strText.replace(/\\$/g,\"#\");\n\tconsole.log(strText);\n\n\t//\u914d\u5217\u5206\u5272\n\tvar strList=strText.split(/#/);\n\tconsole.log(strList.length);\n\n\t//\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\tstrList.push(\"32\");\n\t//strList=strList.concat(\"32\");\n\t//[].push.apply(strList,[\"32\"]);\n\tconsole.log(strList.length);\n\n\t//map\u51e6\u7406\n\tvar intList=strList.map(val=>parseInt(val,10));\n\t//var intList=strList.map(Number);\n\n\t//\u8db3\u3057\u5408\u308f\u305b\n\tvar sum=intList.reduce((xsum,val)=>xsum+val);\n\tconsole.log(sum);\n\n\t//\u914d\u5217\u7d50\u5408\n\tstrText=strList.join(\"++\");\n\tconsole.log(strText);\n\n\t//\u6587\u5b57\u5217\u9023\u7d50\n\tstrText=\"Hoge->\"+strText;\n\tconsole.log(strText);\n\n\t//\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\tstrText=strText.slice(0,10);\n\t//strText=strText.substr(0,10);\n\t//strText=strText.substring(0,10);\n\tconsole.log(strText);\n\n\t//\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\tstrText=strText.slice(-6);\n\t//strText=strText.substr(-6);\n\t//strText=strText.substring(strText.length-6);\n\tconsole.log(strText);\n\n\t//\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\tprocess.stdin.once(\"data\",process.exit);\n}\n\nstrTest();\n```\n\n## TypeScript\ntsc Version 1.8.10\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> tsc strTest.ts & node strTest.js\n```\n\n```ts:TypeScript\nfunction strTest(){\n\t//\u6587\u5b57\u5217\u5b9a\u7fa9\n\tvar strText:string=\"2$4$8$16\";\n\tconsole.log(strText);\n\n\t//\u6587\u5b57\u5217\u7f6e\u63db\n\tstrText=strText.replace(/\\$/g,\"#\");\n\tconsole.log(strText);\n\n\t//\u914d\u5217\u5206\u5272\n\tvar strList:string[]=strText.split(/#/);\n\tconsole.log(strList.length);\n\n\t//\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\tstrList.push(\"32\");\n\t//strList=strList.concat(\"32\");\n\t//[].push.apply(strList,[\"32\"]);\n\tconsole.log(strList.length);\n\n\t//map\u51e6\u7406\n\tvar intList:number[]=strList.map(val=>parseInt(val,10));\n\t//var intList:number[]=strList.map(Number);\n\n\t//\u8db3\u3057\u5408\u308f\u305b\n\tvar sum:number=intList.reduce((xsum,val)=>xsum+val);\n\tconsole.log(sum);\n\n\t//\u914d\u5217\u7d50\u5408\n\tstrText=strList.join(\"++\");\n\tconsole.log(strText);\n\n\t//\u6587\u5b57\u5217\u9023\u7d50\n\tstrText=\"Hoge->\"+strText;\n\tconsole.log(strText);\n\n\t//\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\tstrText=strText.slice(0,10);\n\t//strText=strText.substr(0,10);\n\t//strText=strText.substring(0,10);\n\tconsole.log(strText);\n\n\t//\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\tstrText=strText.slice(-6);\n\t//strText=strText.substr(-6);\n\t//strText=strText.substring(strText.length-6);\n\tconsole.log(strText);\n\n\t//\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\tprocess.stdin.once(\"data\",process.exit);\n}\n\nstrTest();\n```\n\n## CoffeeScript\nCoffeeScript version 1.8.0\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> coffee strTest.coffee\n```\n\n```coffee:CoffeeScript\nstrTest=->\n\t#\u6587\u5b57\u5217\u5b9a\u7fa9\n\tstrText=\"2$4$8$16\"\n\tconsole.log strText\n\n\t#\u6587\u5b57\u5217\u7f6e\u63db\n\tstrText=strText.replace /\\$/g,\"#\"\n\tconsole.log strText\n\n\t#\u914d\u5217\u5206\u5272\n\tstrList=strText.split /#/\n\tconsole.log strList.length\n\n\t#\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\tstrList.push \"32\"\n\t#[].push.apply strList,[\"32\"]\n\t#strList=strList.concat \"32\"\n\tconsole.log strList.length\n\n\t#map\u51e6\u7406\n\tintList=strList.map (val)->parseInt val,10\n\t#intList=strList.map Number\n\n\t#\u8db3\u3057\u5408\u308f\u305b\n\tsum=intList.reduce (xsum,val)->xsum+val\n\tconsole.log sum\n\n\t#\u914d\u5217\u7d50\u5408\n\tstrText=strList.join \"++\"\n\tconsole.log strText\n\n\t#\u6587\u5b57\u5217\u9023\u7d50\n\tstrText=\"Hoge->\"+strText\n\tconsole.log strText\n\n\t#\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\tstrText=strText.slice 0,10\n\t#strText=strText.substr 0,10\n\t#strText=strText.substring 0,10\n\tconsole.log strText\n\n\t#\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\tstrText=strText.slice -6\n\t#strText=strText.substr -6\n\t#strText=strText.substring strText.length-6\n\tconsole.log strText\n\n\t#\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\tprocess.stdin.once \"data\",process.exit\n\nstrTest()\n```\n\n## VB.Net\nMicrosoft (R) Visual Basic Compiler \u30d0\u30fc\u30b8\u30e7\u30f3 1.3.1.60616\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> vbc /nologo /optimize+ strTest.vb & strTest.exe\n```\n\n```vbnet:VB.net\nOption Strict On\t'strict mode\n\nImports System.Console\t\t\t\t\t'WriteLine, ReadLine\nImports System.Collections.Generic\t\t'List\nImports System.Linq\t\t\t\t\t\t'Select, Aggregate\nImports System.Text.RegularExpressions\t'Regex\n\nModule Program\n\tSub strTest()\n\t\t'\u6587\u5b57\u5217\u5b9a\u7fa9\n\t\tDim strText As String=\"2$4$8$16\"\n\t\tWriteLine(strText)\n\n\t\t'\u6587\u5b57\u5217\u7f6e\u63db\n\t\tstrText=strText.Replace(\"$\",\"#\")\n\t\t'strText=Regex.Replace(strText,\"\\$\",\"#\")\n\t\tWriteLine(strText)\n\n\t\t'\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n\t\tDim strList As New List(Of String)(Split(strText,\"#\"))\n\t\t'Dim strList As New List(Of String)(strText.Split(\"#\"))\n\t\t'Dim strList As New List(Of String)(strText.Split({\"#\"},StringSplitOptions.None))\n\t\t'Dim strList As New List(Of String)(New Regex(\"\\#\").Split(strText))\n\t\tWriteLine(strList.Count)\n\n\t\t'\u30ea\u30b9\u30c8\u8981\u7d20\u8ffd\u52a0\n\t\tstrList.Add(\"32\")\n\t\t'strList.AddRange({\"32\"})\n\t\tWriteLine(strList.Count)\n\n\t\t'map\u51e6\u7406\n\t\tDim intList As New List(Of Integer)(strList.ConvertAll(Function(val)CInt(val)))\n\t\t'Dim intList As New List(Of Integer)(strList.Select(Function(val)CInt(val)))\n\t\t'Dim intList As New List(Of Integer)(strList.ConvertAll(AddressOf Integer.Parse))\n\t\t'Dim intList As New List(Of Integer)(strList.Select(AddressOf Integer.Parse))\n\n\t\t'\u8db3\u3057\u5408\u308f\u305b\n\t\tDim sum As Integer=intList.Aggregate(Function(xsum,val)xsum+val)\n\t\tWriteLine(sum)\n\n\t\t'\u30ea\u30b9\u30c8\u7d50\u5408\n\t\tstrText=String.Join(\"++\",strList)\n\t\tWriteLine(strText)\n\n\t\t'\u6587\u5b57\u5217\u9023\u7d50\n\t\tstrText=\"Hoge->\" & strText\n\t\tWriteLine(strText)\n\n\t\t'\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\t\tstrText=Left(strText,10)\n\t\t'strText=Mid(strText,1,10)\n\t\t'strText=strText.Substring(0,10)\n\t\tWriteLine(strText)\n\n\t\t'\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\t\tstrText=Right(strText,6)\n\t\t'strText=Mid(strText,strText.Length-6+1)\n\t\t'strText=strText.Substring(strText.Length-6)\n\t\tWriteLine(strText)\n\n\t\t'\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\t\tReadLine()\n\tEnd Sub\n\n\tSub Main()\n\t\tstrTest()\n\tEnd Sub\nEnd Module\n```\n\n## VBScript\nMicrosoft (R) Windows Script Host Version 5.8\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> cscript //nologo //E:VBScript strTest.vbs\n```\n\n```vbnet:WSH_VBScript\nSub strTest\n\t'\u6587\u5b57\u5217\u5b9a\u7fa9\n\tDim strText\n\tstrText=\"2$4$8$16\"\n\tWScript.Echo strText\n\n\t'\u6587\u5b57\u5217\u7f6e\u63db\n\tstrText=Replace(strText,\"$\",\"#\")\n\tWScript.Echo strText\n\n\t'\u914d\u5217\u5206\u5272\n\tDim strList\n\tstrList=Split(strText,\"#\")\n\tWScript.Echo UBound(strList)+1\n\n\t'\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\tReDim Preserve strList(UBound(strList)+1)\n\tstrList(UBound(strList))=\"32\"\n\tWScript.Echo UBound(strList)+1\n\n\t'map\u51e6\u7406\n\tReDim intList(UBound(strList))\n\tDim i\n\tFor i=0 To UBound(intList)\n\t\tintList(i)=CInt(strList(i))\n\tNext\n\n\t'\u8db3\u3057\u5408\u308f\u305b\n\tDim sum\n\tsum=0\n\tFor Each val In intList\n\t\tsum=sum+val\n\tNext\n\tWScript.Echo sum \n\n\t'\u30ea\u30b9\u30c8\u7d50\u5408\n\tstrText=Join(strList,\"++\")\n\tWScript.Echo strText \n\n\t'\u6587\u5b57\u5217\u9023\u7d50\n\tstrText=\"Hoge->\" & strText\n\t'strText=\"Hoge->\"+strText\n\tWScript.Echo strText \n\n\t'\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\tstrText=Left(strText,10)\n\t'strText=Mid(strText,1,10)\n\tWScript.Echo strText\n\n\t'\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\tstrText=Right(strText,6)\n\t'strText=Mid(strText,Len(strText)-6+1)\n\tWScript.Echo strText\n\n\t'\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\tWScript.StdIn.ReadLine()\nEnd Sub\n\nstrTest\n```\n\n## C<span>#</span>\nMicrosoft (R) Visual C\\# Compiler \u30d0\u30fc\u30b8\u30e7\u30f3 1.3.1.60616\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> csc /nologo /optimize+ strTest.cs & strTest.exe\n```\n\n```csharp:C#\nusing System;\t\t\t\t\t\t\t//Console\nusing System.Collections.Generic;\t\t//List\nusing System.Linq;\t\t\t\t\t\t//Select, Aggregate\nusing System.Text.RegularExpressions;\t//Regex\n\nclass Program{\n\tstatic void strTest(){\n\t\t//\u6587\u5b57\u5217\u5b9a\u7fa9\n\t\tstring strText=\"2$4$8$16\";\n\t\tConsole.WriteLine(strText);\n\n\t\t//\u6587\u5b57\u5217\u7f6e\u63db\n\t\tstrText=strText.Replace(\"$\",\"#\");\n\t\t//strText=Regex.Replace(strText,\"\\\\$\",\"#\");\n\t\tConsole.WriteLine(strText);\n\n\t\t//\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u89e3\n\t\tList<String> strList=new List<string>(strText.Split('#'));\n\t\t//List<String> strList=new List<string>(strText.Split(new string[]{\"#\"},StringSplitOptions.None));\n\t\t//List<String> strList=new List<string>(new Regex(\"\\\\#\").Split(strText));\n\t\tConsole.WriteLine(strList.Count);\n\n\t\t//\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n\t\tstrList.Add(\"32\");\n\t\t//strList.AddRange(new string[]{\"32\"});\n\t\tConsole.WriteLine(strList.Count);\n\n\t\t//map\n\t\t//List<int> intList=new List<int>(strList.ConvertAll(val=>int.Parse(val)));\n\t\t//List<int> intList=new List<int>(strList.Select(val=>int.Parse(val)));\n\t\t//List<int> intList=new List<int>(strList.ConvertAll(int.Parse));\n\t\tList<int> intList=new List<int>(strList.Select(int.Parse));\n\n\t\t//\u8db3\u3057\u5408\u308f\u305b\n\t\tint sum=intList.Aggregate((xsum,val)=>xsum+val);\n\t\tConsole.WriteLine(sum);\n\n\t\t//\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n\t\tstrText=string.Join(\"++\",strList);\n\t\tConsole.WriteLine(strText);\n\n\t\t//\u6587\u5b57\u5217\u9023\u7d50\n\t\tstrText=\"Hoge->\"+strText;\n\t\tConsole.WriteLine(strText);\n\n\t\t//\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\t\tstrText=strText.Substring(0,10);\n\t\tConsole.WriteLine(strText);\n\n\t\t//\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\t\tstrText=strText.Substring(strText.Length-6);\n\t\tConsole.WriteLine(strText);\n\n\t\t//\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\t\tConsole.ReadLine();\n\t}\n\n\tstatic void Main(){\n\t\tstrTest();\n\t}\n}\n```\n\n## C++\ng++ (GCC) 4.9.3\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> g++ -std=c++11 strTest.cpp & strTest.exe\n```\n\n```cpp:C++\n#include <stdio.h>\t\t//getchar\n#include <stdlib.h>\t\t//atoi\n#include <iostream>\t\t//cout<<\n#include <string>\t\t//string, c_str\n#include <vector>\t\t//vector\n#include <algorithm>\t//replace\n#include <sstream>\t\t//stringstream\nusing namespace std;\t//std:: \u540d\u524d\u7a7a\u9593\u306e\u8a18\u8ff0\u7701\u7565\n\nvoid strTest(){\n\t//\u6587\u5b57\u5217\u5b9a\u7fa9\n\tstring strText=\"2$4$8$16\";\n\tcout<<strText<<endl;\n\n\t//\u6587\u5b57\u5217\u7f6e\u63db\n\treplace(strText.begin(),strText.end(),'$','#');\n\t//\u6587\u5b57\u5217\u306e\u7f6e\u63db\u306f\u4e0d\u53ef(char\u578b\u306e\u307f)\n\tcout<<strText<<endl;\n\n\t//\u914d\u5217\u5206\u5272\n\tvector<string> strList;\n\tstringstream ss(strText);\n\tstring val;\n\twhile(getline(ss,val,'#')){\n\t\tstrList.push_back(val);\n\t}\n\tcout<<strList.size()<<endl;\n\n\t//\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\tstrList.push_back(\"32\");\n\tcout<<strList.size()<<endl;\n\n\t//map\u51e6\u7406\n\tvector<int> intList;\n\tfor(string val:strList){\n\t\tintList.push_back(stoi(val));\n\t\t//intList.push_back(atoi(val.c_str()));\n\t}\n\n\t//\u8db3\u3057\u5408\u308f\u305b\n\tint sum=0;\n\tfor(int val:intList){\n\t\tsum+=val;\n\t}\n\tcout<<sum<<endl;\n\n\t//\u914d\u5217\u7d50\u5408\n\tstrText=\"\";\n\tfor(string val:strList){\n\t\tif(strText!=\"\"){strText+=\"++\";}\n\t\tstrText+=val;\n\t}\n\tcout<<strText<<endl;\n\n\t//\u6587\u5b57\u5217\u9023\u7d50\n\tstrText=\"hoge<-\"+strText;\n\tcout<<strText<<endl;\n\n\t//\u6587\u5b57\u5217\u5207\u308a\u53d6\u308a\u5de6\n\tstrText=strText.substr(0,10);\n\tcout<<strText<<endl;\n\n\t//\u6587\u5b57\u5217\u5207\u308a\u53d6\u308a\u53f3\n\tstrText=strText.substr(strText.size()-6);\n\tcout<<strText<<endl;\n\n\t//\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\tgetchar();\n}\n\nint main(){\n\tstrTest();\n\treturn 0;\n}\n```\n\n## D\u8a00\u8a9e\nDMD32 D Compiler v2.066.1\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> dmd strTest.d & strTest.exe\n```\n\n```d:D\u8a00\u8a9e\nimport std.stdio;\t\t//writeln, readln\nimport std.string;\t\t//replace, split\nimport std.array;\t\t//array\nimport std.regex;\t\t//regex\nimport std.conv;\t\t//to!\nimport std.algorithm;\t//map!, reduce!\n\nvoid strTest(){\n\t//\u6587\u5b57\u5217\u5b9a\u7fa9\n\tstring strText=\"2$4$8$16\";\n\twriteln(strText);\n\n\t//\u6587\u5b57\u5217\u7f6e\u63db\n\tstrText=replace(strText,\"$\",\"#\");\n\t//strText=replace(strText,regex(r\"\\$\",\"g\"),\"#\");\n\twriteln(strText);\n\n\t//\u914d\u5217\u5206\u5272\n\tstring[] strList=split(strText,\"#\");\n\t//string[] strList=split(strText,regex(r\"\\#\",\"g\"));\n\t//string[] strList=array(splitter(strText,\"#\"));\n\t//string[] strList=array(splitter(strText,regex(r\"\\#\",\"g\")));\n\twriteln(strList.length);\n\n\t//\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\tstrList~=\"32\";\n\twriteln(strList.length);\n\n\t//map\u51e6\u7406\n\tint[] intList=array(map!(\"to!int(a)\")(strList));\n\t//int[] intList=array(map!(val=>to!int(val))(strList));\n\t//int[] intList=array(map!(to!int)(strList));\n\n\t//\u8db3\u3057\u5408\u308f\u305b\n\tint sum=reduce!(\"a+b\")(intList);\n\t//int sum=reduce!((xsum,val)=>xsum+val)(intList);\n\twriteln(sum);\n\n\t//\u914d\u5217\u7d50\u5408\n\tstrText=strList.join(\"++\");\n\twriteln(strText);\n\n\t//\u6587\u5b57\u5217\u9023\u7d50\n\tstrText=\"Hoge->\"~strText;\n\twriteln(strText);\n\n\t//\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\tstrText=strText[0..10];\n\twriteln(strText);\n\n\t//\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\tstrText=strText[$-6..$];\n\twriteln(strText);\n\n\t//\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\treadln();\n}\n\nvoid main(){\n\tstrTest();\n}\n```\n\n## HSP\nHSP : Hot Soup Processor ver3.4\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\n::\u30a8\u30c7\u30a3\u30bf\u304b\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\nC:\\> C:\\hsp34\\hsed3\n```\n\n```clj:HSP\n#runtime \"hsp3cl\"   ;\u30b3\u30f3\u30bd\u30fc\u30eb\n#cmpopt varinit 1\t;strict mode\n\n#module\n\t#deffunc strTest\n\t\t;\u6587\u5b57\u5217\u5b9a\u7fa9\n\t\tstrText=\"2$4$8$16\"\n\t\tmes strText\n\n\t\t;\u6587\u5b57\u5217\u7f6e\u63db\n\t\tstrrep strText,\"$\",\"#\"\n\t\tmes strText\n\n\t\t;\u914d\u5217\u5206\u5272\n\t\tsdim strList\n\t\tsplit strText,\"#\",strList\n\t\tmes length(strList)\n\n\t\t;\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\t\tstrList.length(strList)=\"32\"\n\t\tmes length(strList)\n\n\t\t;map\u51e6\u7406\n\t\tdim intList,length(strList)\n\t\t#define map(%1,%2,%3,%4) foreach %1:%3=%1(cnt):%2(cnt)=%4:loop\n\t\tmap strList,intList,val,int(val)\n\n\t\t;\u8db3\u3057\u5408\u308f\u305b\n\t\t#define reduce(%1,%2,%3,%4) %2=%1(0):repeat length(%1)-1:%3=%1(cnt+1):%2=%4:loop\n\t\treduce intList,sum,val,sum+val\n\t\tmes sum\n\n\t\t;\u914d\u5217\u7d50\u5408\n\t\tstrText=\"\"\n\t\tforeach strList\n\t\t\tif cnt!=0: strText+=\"++\"\n\t\t\tstrText+=strList(cnt)\n\t\tloop\n\t\tmes strText\n\n\t\t;\u6587\u5b57\u5217\u9023\u7d50\n\t\tstrText=\"Hoge->\"+strText\n\t\tmes strText\n\n\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\t\tstrText=strmid(strText,0,10)\n\t\tmes strText\n\n\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\t\tstrText=strmid(strText,-1,6)\n\t\tmes strText\n\n\t\t;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\t\tdim exit:input exit,,1\n\treturn\n#global\n\nstrTest\n```\n\n## Ruby\nruby 2.0.0p481 (2014-05-08) [i386-mingw32]\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> ruby strTest.rb\n```\n\n```rb:Ruby\ndef strTest\n\t#\u6587\u5b57\u5217\u5b9a\u7fa9\n\tstrText=\"2$4$8$16\"\n\tputs strText\n\n\t#\u6587\u5b57\u5217\u7f6e\u63db\n\tstrText=strText.gsub /\\$/,\"#\"\n\tputs strText\n\n\t#\u914d\u5217\u5206\u5272\n\tstrList=strText.split /#/\n\tputs strList.length\n\n\t#\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\tstrList.push \"32\"\n\t#strList=strList.clone.push \"32\"\n\t#strList << \"32\"\n\t#strList.concat [\"32\"]\n\t#strList=strList.dup.concat [\"32\"]\n\t#strList+=[\"32\"]\n\tputs strList.length\n\n\t#map\u51e6\u7406\n\tintList=strList.map{|val| val.to_i}\n\t#intList=strList.collect{|val| val.to_i}\n\n\t#\u8db3\u3057\u5408\u308f\u305b\n\tsum=intList.reduce{|xsum,val| xsum+val}\n\t#sum=intList.inject{|xsum,val| xsum+val}\n\tputs sum\n\n\t#\u914d\u5217\u7d50\u5408\n\tstrText=strList.join \"++\"\n\tputs strText\n\n\t#\u6587\u5b57\u5217\u9023\u7d50\n\tstrText=\"Hoge->\" << strText\n\t#strText=\"Hoge->\" + strText\n\tputs strText\n\n\t#\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\tstrText=strText[0,10]\n\t#strText=strText[0..10-1]\n\t#strText=strText.slice 0,10\n\t#strText=strText.slice 0..10-1\n\tputs strText\n\n\t#\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\tstrText=strText[-6..-1]\n\t#strText=strText[strText.length-6,strText.length]\n\t#strText=strText.slice -6..-1\n\t#strText=strText.slice strText.length-6,strText.length\n\tputs strText\n\n\t#\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\tSTDIN.gets\nend\n\nstrTest\n```\n\n## Python\nPython 3.4.1 (v3.4.1:c0e311e010fc, May 18 2014, 10:38:22) [MSC v.1600 32 bit (Intel)] on win32\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> py -3 strTest.py\n```\n\n```py3:Python\nimport functools\t#reduce\n\ndef strTest():\n\t#\u6587\u5b57\u5217\u5b9a\u7fa9\n\tstrText=\"2$4$8$16\"\n\tprint(strText)\n\n\t#\u6587\u5b57\u5217\u7f6e\u63db\n\tstrText=strText.replace(\"$\",\"#\")\n\tprint(strText)\n\n\t#\u914d\u5217\u5206\u5272\n\tstrList=strText.split(\"#\")\n\tprint(len(strList))\n\n\t#\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\tstrList.append(\"32\")\n\tprint(len(strList))\n\n\t#map\u51e6\u7406\n\tintList=map(lambda val:int(val),strList)\n\t#intList=map(int,strList)\n\n\t#\u8db3\u3057\u5408\u308f\u305b\n\tsum=functools.reduce(lambda xsum,val:xsum+val,intList)\n\tprint(sum)\n\n\t#\u914d\u5217\u7d50\u5408\n\tstrText=\"++\".join(strList)\n\tprint(strText)\n\n\t#\u6587\u5b57\u5217\u9023\u7d50\n\tstrText=\"Hoge->\"+strText\n\tprint(strText)\n\n\t#\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\tstrText=strText[0:10]\n\tprint(strText)\n\n\t#\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\tstrText=strText[-6:]\n\tprint(strText)\n\n\t#\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\tinput()\n\nstrTest()\n```\n\n## Lua\nLua 5.3.3\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> lua strTest.lua\n```\n\n```lua:Lua\nfunction strTest()\n\t--\u6587\u5b57\u5217\u5b9a\u7fa9\n\tlocal strText=\"2$4$8$16\"\n\tprint(strText)\n\n\t--\u6587\u5b57\u5217\u7f6e\u63db\n\tstrText=string.gsub(strText,\"%$\",\"#\")\n\tprint(strText)\n\n\t--\u914d\u5217\u5206\u5272\n\t--Lua\u306bsplit\u306f\u5b58\u5728\u3057\u306a\u3044\n\tlocal strList=((function(data,sepa)\n\t\tlocal result={}\n\t\tfor chank in string.gmatch(data..sepa,\"(.-)\"..sepa) do\n\t\t\ttable.insert(result,chank)\n\t\tend\n\t\treturn result\n\tend)(strText,\"#\"))\n\tprint(#strList)\n\n\t--\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\ttable.insert(strList,\"32\")\n\tprint(#strList)\n\n\t--map\u51e6\u7406\n\tlocal intList={}\n\tfor i,val in ipairs(strList) do\n\t\tintList[i]=tonumber(val)\n\tend\n\n\t--\u8db3\u3057\u5408\u308f\u305b\n\tsum=0\n\tfor i,val in ipairs(intList) do\n\t\tsum=sum+val\n\tend\n\tprint(sum)\n\n\t--\u914d\u5217\u7d50\u5408\n\tstrText=\"\"\n\tfor i,val in ipairs(strList) do\n\t\tif strText~=\"\" then\n\t\t\tstrText=strText..\"++\"\n\t\tend\n\t\tstrText=strText..val\n\tend\n\tprint(strText)\n\n\t--\u6587\u5b57\u5217\u9023\u7d50\n\tstrText=\"Hoge->\"..strText\n\tprint(strText)\n\n\t--\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\tstrText=string.sub(strText,1,10)\n\tprint(strText)\n\n\t--\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\tstrText=string.sub(strText,-6)\n\tprint(strText)\n\n\t--\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\tio.read()\nend\n\nstrTest()\n```\n\n## R\u8a00\u8a9e\nR scripting front-end version 3.3.0 (2016-05-03)\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> rscript strTest.r\n```\n\n```r:R\u8a00\u8a9e\nstrTest<-function(){\n\t#\u6587\u5b57\u5217\u5b9a\u7fa9\n\tstrText<-\"2$4$8$16\"\n\tcat(strText,\"\\n\")\n\n\t#\u6587\u5b57\u5217\u7f6e\u63db\n\tstrText<-gsub(\"\\\\$\",\"#\",strText)\n\tcat(strText,\"\\n\")\n\n\t#\u914d\u5217\u5206\u5272\n\tstrList<-unlist(strsplit(strText,\"#\"))\n\tcat(length(strList),\"\\n\")\n\n\t#\u914d\u5217\u8981\u7d20\u8ffd\u52a0\n\tstrList<-c(strList,\"32\")\n\tcat(length(strList),\"\\n\")\n\n\t#map\u51e6\u7406\n\tintList<-Map(function(val){as.integer(val)},strList)\n\t#intList<-(function(val){as.integer(val)})(strList)\n\t#intList<-Map(as.integer,strList)\n\n\t#\u8db3\u3057\u5408\u308f\u305b\n\tsum<-Reduce(function(xsum,val){xsum+val},intList)\n\tcat(sum,\"\\n\")\n\n\t#\u914d\u5217\u7d50\u5408\n\tstrText<-\"\"\n\tfor(val in strList){\n\t\tif(strText!=\"\"){\n\t\t\tstrText<-paste(strText,\"++\",sep=\"\")\n\t\t}\n\t\tstrText<-paste(strText,val,sep=\"\")\n\t}\n\tcat(strText,\"\\n\")\n\n\t#\u6587\u5b57\u5217\u9023\u7d50\n\tstrText<-sprintf(\"Hoge->%s\",strText)\n\tcat(strText,\"\\n\")\n\n\t#\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\tstrText<-substr(strText,1,10)\n\tcat(strText,\"\\n\")\n\n\t#\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\tstrText<-substr(strText,nchar(strText)-6+1,nchar(strText))\n\tcat(strText,\"\\n\")\n\n\t#\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\treadLines(file(\"stdin\"), n <- 1L)\n}\n\nstrTest()\n```\n\n## CommonLisp\nSBCL 1.3.5\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> sbcl --script strTest.lisp\n```\n\n```cl:CommonLisp\n(defun strTest()\n\t(let (\n\t\t;\u6587\u5b57\u5217\u5b9a\u7fa9(\u675f\u7e1b)\n\t\t(strText \"2$4$8$16\")\n\t\tstrList intList\n\t\t(sum 0)\n\t)\n\t\t(format t \"~A~%\" strText)\n\n\t\t;\u6587\u5b57\u5217\u7f6e\u63db\n\t\t(setf strText (substitute #\\# #\\$ strText))\n\t\t;\u6587\u5b57\u5217\u306e\u7f6e\u63db\u306f\u4e0d\u53ef(char\u578b\u306e\u307f)\n\t\t(format t \"~A~%\" strText)\n\n\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n\t\t;CommonLisp\u306bsplit\u306f\u5b58\u5728\u3057\u306a\u3044\n\t\t(setf strList ((lambda (data sepa)\n\t\t\t(let ((result '()) (now1 0) now2)\n\t\t\t\t(loop\n\t\t\t\t\t(setf now2 (search sepa data :start2 now1))\n\t\t\t\t\t(setf result (append result `(,(subseq data now1 now2))))\n\t\t\t\t\t(if (not now2)\n\t\t\t\t\t\t(return result)\n\t\t\t\t\t\t(setf now1 (+ now2 (length sepa)))\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t) strText \"#\"))\n\t\t(format t \"~d~%\" (length strList))\n\n\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n\t\t(setf strList (append strList '(\"32\")))\n\t\t(format t \"~d~%\" (length strList))\n\n\t\t;map\u51e6\u7406\n\t\t(setf intList (mapcar #'(lambda(val)(parse-integer val)) strList))\n\t\t;(setf intList (mapcar 'parse-integer strList))\n\t\t\n\t\t;\u8db3\u3057\u5408\u308f\u305b\n\t\t(setf sum (apply '+ intList))\n\t\t;(setf sum (reduce '+ intList))\n\t\t(format t \"~d~%\" sum)\n\n\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n\t\t(setf strText (format nil \"~{~A~^++~}\" strList))\n\t\t(format t \"~A~%\" strText)\n\n\t\t;\u6587\u5b57\u5217\u9023\u7d50\n\t\t(setf strText (format nil \"Hoge->~A\" strText))\n\t\t;(concatenate 'string \"Hoge->\" strText)\n\t\t(format t \"~A~%\" strText)\n\n\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\t\t(setf strText (subseq strText 0 10))\n\t\t(format t \"~A~%\" strText)\n\n\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\t\t(setf strText (subseq strText (- (length strText) 6)))\n\t\t(format t \"~A~%\" strText)\n\n\t\t;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\t\t(read-line)\n\t)\n)\n\n(strTest)\n```\n\n## EmacsLisp\nGNU Emacs 24.5.1 (i686-pc-mingw32)\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> emacs -Q --script strTest.el\n```\n\n```el:EmacsLisp\n(defun strTest()\n\t(let (\n\t\t;\u6587\u5b57\u5217\u5b9a\u7fa9(\u675f\u7e1b)\n\t\t(strText \"2$4$8$16\")\n\t\tstrList intList\n\t\t(sum 0)\n\t)\n\t\t(princ (format \"%s\\n\" strText))\n\n\t\t;\u6587\u5b57\u5217\u7f6e\u63db\n\t\t(setf strText (replace-regexp-in-string \"\\\\$\" \"#\" strText))\n\t\t(princ (format \"%s\\n\" strText))\n\n\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n\t\t(setf strList (split-string strText \"#\"))\n\t\t(princ (format \"%d\\n\" (length strList)))\n\n\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n\t\t(setf strList (append strList '(\"32\")))\n\t\t(princ (format \"%d\\n\" (length strList)))\n\n\t\t;map\u51e6\u7406\n\t\t(setf intList (mapcar #'(lambda(val)(string-to-number val)) strList))\n\t\t;(setf intList (mapcar 'string-to-number strList))\n\n\t\t;\u8db3\u3057\u5408\u308f\u305b\n\t\t(setf sum (apply '+ intList))\n\t\t(princ (format \"%d\\n\" sum))\n\n\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n\t\t(setf strText (mapconcat 'identity strList \"++\"))\n\t\t(princ (format \"%s\\n\" strText))\n\n\t\t;\u6587\u5b57\u5217\u9023\u7d50\n\t\t(setf strText (concat \"Hoge->\" strText))\n\t\t(princ (format \"%s\\n\" strText))\n\n\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\t\t(setf strText (substring strText 0 10))\n\t\t(princ (format \"%s\\n\" strText))\n\n\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\t\t(setf strText (substring strText -6))\n\t\t(princ (format \"%s\\n\" strText))\n\n\t\t;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\t\t(read-string \"\")\n\t)\n)\n\n(strTest)\n```\n\n## Scheme\nGauche scheme shell, version 0.9.4 [utf-8,wthreads], i686-pc-mingw32\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> gosh strTest.scm\n```\n\n```scm:Scheme\n(define (strTest)\n\t(let (\n\t\t;\u6587\u5b57\u5217\u5b9a\u7fa9(\u675f\u7e1b)\n\t\t(strText \"2$4$8$16\")\n\t\t(strList '())\n\t\t(intList '())\n\t\t(sum 0)\n\t)\n\t\t(format #t \"~A\\n\" strText)\n\n\t\t;\u6587\u5b57\u5217\u7f6e\u63db\n\t\t(set! strText (regexp-replace-all #/\\$/ strText \"#\"))\n\t\t(format #t \"~A\\n\" strText)\n\n\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n\t\t(set! strList (string-split strText \"#\"))\n\t\t(format #t \"~d\\n\" (length strList))\n\n\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n\t\t(set! strList (append strList '(\"32\")))\n\t\t(format #t \"~d\\n\" (length strList))\n\n\t\t;map\u51e6\u7406\n\t\t(set! intList (map (lambda (val) (string->number val)) strList))\n\t\t;(set! intList (map string->number strList))\n\n\t\t;\u8db3\u3057\u5408\u308f\u305b\n\t\t(set! sum (apply + intList))\n\t\t;(set! sum (fold + 0 intList))\n\t\t(format #t \"~d\\n\" sum)\n\n\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n\t\t(set! strText (string-join strList \"++\"))\n\t\t(format #t \"~A\\n\" strText)\n\n\t\t;\u6587\u5b57\u5217\u9023\u7d50\n\t\t(set! strText (string-append \"Hoge->\" strText))\n\t\t(format #t \"~A\\n\" strText)\n\n\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\t\t(set! strText (substring strText 0 10))\n\t\t(format #t \"~A\\n\" strText)\n\n\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\t\t(set! strText (substring strText (- (string-length strText) 6) -1))\n\t\t(format #t \"~A\\n\" strText)\n\n\t\t;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\t\t(read-line)\n\t)\n)\n\n(strTest)\n```\n\n## Clojure\nClojure 1.8.0 (CLR)\n\n```text:\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\nC:\\> Clojure.Main strTest.clj\n```\n\n```clj:clojure\n(require '[clojure.string :as string])\n\n(defn strTest[]\n\t;\u6587\u5b57\u5217\u5b9a\u7fa9(\u675f\u7e1b)\n\t(let [strText \"2$4$8$16\"]\n\t\t(println strText)\n\n\t\t;\u6587\u5b57\u5217\u7f6e\u63db\n\t\t(let [strText (string/replace strText \"$\" \"#\")]\n\t\t\t(println strText)\n\n\t\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u5206\u5272\n\t\t\t(let [strList (string/split strText #\"\\#\")]\n\t\t\t\t(println (count strList))\n\n\t\t\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u8981\u7d20\u8ffd\u52a0\n\t\t\t\t(let [strList (conj strList \"32\")]\n\t\t\t\t\t(println (count strList))\n\n\t\t\t\t\t;map\u51e6\u7406\n\t\t\t\t\t(let [intList (map (fn [val] (int val)) strList)]\n\t\t\t\t\t;(let [intList (map int strList)]\n\n\t\t\t\t\t\t;\u8db3\u3057\u5408\u308f\u305b\n\t\t\t\t\t\t(let [sum (apply + intList)]\n\t\t\t\t\t\t\t(println sum)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\n\t\t\t\t\t;\u914d\u5217(\u30ea\u30b9\u30c8)\u7d50\u5408\n\t\t\t\t\t(let [strText (string/join \"++\" strList)]\n\t\t\t\t\t\t(println strText)\n\n\t\t\t\t\t\t;\u6587\u5b57\u5217\u9023\u7d50\n\t\t\t\t\t\t(let [strText (str \"Hoge->\" strText)]\n\t\t\t\t\t\t\t(println strText)\n\n\t\t\t\t\t\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u5de6\n\t\t\t\t\t\t\t(let [strText (subs strText 0 10)]\n\t\t\t\t\t\t\t\t(println strText)\n\n\t\t\t\t\t\t\t\t;\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057\u53f3\n\t\t\t\t\t\t\t\t(let [strText (subs strText (- (count strText) 6))]\n\t\t\t\t\t\t\t\t\t(println strText)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n\n\t;\u30b3\u30f3\u30bd\u30fc\u30eb\u505c\u6b62\n\t(read-line)\n)\n(strTest)\n```\n\n# \u307e\u3068\u3081\n| **\u8a00\u8a9e**\t\t\t\t\t\t\t\t\t\t| **\u6587\u5b57\u5217\u7f6e\u63db**\t\t\t\t\t|  **\u6587\u5b57\u5217\u5206\u5272**\t\t\t\t\t\t\t\t\t\t\t\t\t| **\u6587\u5b57\u5217\u9023\u7d50** \t\t\t\t\t\t| **\u914d\u5217\u7d50\u5408**\t\t\t\t\t|\n|:---------------------------------------------:|:----------------------------------|:------------------------------------------------------------------|:--------------------------------------|:------------------------------|\n| **JavaScript<br>TypeScript<br>CoffeeScript**\t| replace\t\t\t\t\t\t\t| split\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| +\u6f14\u7b97\u5b50\t\t\t\t\t\t\t\t| join\t\t\t\t\t\t\t|\n| **VB.Net**\t\t\t\t\t\t\t\t\t| Replace\t\t\t\t\t\t\t| Split\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| &\u6f14\u7b97\u5b50<br>+\u6f14\u7b97\u5b50\t\t\t\t\t| Join\t\t\t\t\t\t\t|\n| **VBScript**\t\t\t\t\t\t\t\t\t| Replace\t\t\t\t\t\t\t| Split\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| &\u6f14\u7b97\u5b50<br>+\u6f14\u7b97\u5b50\t\t\t\t\t| Join\t\t\t\t\t\t\t|\n| **C#**\t\t\t\t\t\t\t\t\t\t| Replace\t\t\t\t\t\t\t| Split\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| +\u6f14\u7b97\u5b50\t\t\t\t\t\t\t\t| Join\t\t\t\t\t\t\t|\n| **C++**\t\t\t\t\t\t\t\t\t\t| replace <br>\u203bchar\u578b\u306e\u307f\t\t\t| \u7121\u3057\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| +\u6f14\u7b97\u5b50\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t|\n| **D\u8a00\u8a9e**\t\t\t\t\t\t\t\t\t\t| replace\t\t\t\t\t\t\t| split<br>splitter\t\t\t\t\t\t\t\t\t\t\t\t\t| ~\u6f14\u7b97\u5b50\t\t\t\t\t\t\t\t| join\t\t\t\t\t\t\t|\n| **HSP**\t\t\t\t\t\t\t\t\t\t| strrep \u203b\u7834\u58ca\t\t\t\t\t\t| split\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| +\u6f14\u7b97\u5b50\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t|\n| **Ruby**\t\t\t\t\t\t\t\t\t\t| gsub\t\t\t\t\t\t\t\t| split\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| <<\u6f14\u7b97\u5b50<br>+\u6f14\u7b97\u5b50\t\t\t\t\t| join\t\t\t\t\t\t\t|\n| **Python**\t\t\t\t\t\t\t\t\t| replace\t\t\t\t\t\t\t| split\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| +\u6f14\u7b97\u5b50\t\t\t\t\t\t\t\t| join\t\t\t\t\t\t\t|\n| **Lua**\t\t\t\t\t\t\t\t\t\t| string.gsub\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| ..\u6f14\u7b97\u5b50\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t|\n| **R\u8a00\u8a9e**\t\t\t\t\t\t\t\t\t\t| gsub\t\t\t\t\t\t\t\t| strsplit\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| paste<br>sprintf \u7b49\t\t\t\t\t| paste\t\t\t\t\t\t\t|\n| **CommonLisp**\t\t\t\t\t\t\t\t| substitute<br>\u203bchar\u578b\u306e\u307f\t\t| \u7121\u3057\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| format nil<br>concatenate 'string \u7b49\t| format nil\t\t\t\t\t|\n| **EmacsLisp**\t\t\t\t\t\t\t\t\t| replace-regexp-in-string\t\t\t| split-string\t\t\t\t\t\t\t\t\t\t\t\t\t\t| concat\t\t\t\t\t\t\t\t| mapconcat 'identity\t\t\t|\n| **Scheme**\t\t\t\t\t\t\t\t\t| regexp-replace-all<br>\u203bGauche\u62e1\u5f35| string-split<br>\u203bGauche\u62e1\u5f35\t\t\t\t\t\t\t\t\t\t| string-append\t\t\t\t\t\t\t| string-join<br>\u203bGauche\u62e1\u5f35\t|\n| **Clojure**\t\t\t\t\t\t\t\t\t| string/replace\t\t\t\t\t| string/split\t\t\t\t\t\t\t\t\t\t\t\t\t\t| str \t\t\t\t\t\t\t\t\t| string/join\t\t\t\t\t|\n|\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t|\n| **\u8a00\u8a9e**\t\t\t\t\t\t\t\t\t\t| **\u6587\u5b57\u5217\u5207\u308a\u51fa\u3057**\t\t\t\t|  **\u914d\u5217\u8981\u7d20\u8ffd\u52a0**\t\t\t\t\t\t\t\t\t\t\t\t\t| **map\u95a2\u6570** \t\t\t\t\t\t\t| **reduce\u95a2\u6570**\t\t\t\t|\n| **JavaScript<br>TypeScript<br>CoffeeScript**\t| slice<br>substr<br>substring\t\t| push \u203b\u7834\u58ca<br>concat<br>push.apply \u203b\u7834\u58ca\t\t\t\t\t\t| map\t\t\t\t\t\t\t\t\t| reduce\t\t\t\t\t\t|\n| **VB.Net**\t\t\t\t\t\t\t\t\t| Left<br>Right<br>Mid<br>Substring\t| Add \u203b\u7834\u58ca<br>AddRange \u203b\u7834\u58ca\t\t\t\t\t\t\t\t\t\t| ConvertAll<br>Select\t\t\t\t\t| Aggregate\t\t\t\t\t\t|\n| **VBScript**\t\t\t\t\t\t\t\t\t| Left<br>Right<br>Mid\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t|\n| **C#**\t\t\t\t\t\t\t\t\t\t| Substring\t\t\t\t\t\t\t| Add \u203b\u7834\u58ca<br>AddRange \u203b\u7834\u58ca\t\t\t\t\t\t\t\t\t\t| ConvertAll<br>Select\t\t\t\t\t| Aggregate\t\t\t\t\t\t|\n| **C++**\t\t\t\t\t\t\t\t\t\t| substr\t\t\t\t\t\t\t| push_back\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t|\n| **D\u8a00\u8a9e**\t\t\t\t\t\t\t\t\t\t| [a..b]<br>[\\$a..b\\$]\t\t\t\t| ~\u6f14\u7b97\u5b50\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| map!\t\t\t\t\t\t\t\t\t| reduce!\t\t\t\t\t\t|\n| **HSP**\t\t\t\t\t\t\t\t\t\t| strmid\t\t\t\t\t\t\t| a(length(a))=b<br>a.length(a)=b\t\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t|\n| **Ruby**\t\t\t\t\t\t\t\t\t\t| [a,b]<br>[a..b]<br>slice\t\t\t| push \u203b\u7834\u58ca<br><<\u6f14\u7b97\u5b50 \u203b\u7834\u58ca<br>concat \u203b\u7834\u58ca<br>+\u6f14\u7b97\u5b50\t\t| map<br>collect\t\t\t\t\t\t| reduce<br>inject\t\t\t\t|\n| **Python**\t\t\t\t\t\t\t\t\t| [a:b]\t\t\t\t\t\t\t\t| append \u203b\u7834\u58ca\t\t\t\t\t\t\t\t\t\t\t\t\t\t| map\t\t\t\t\t\t\t\t\t| functools.reduce\t\t\t\t|\n| **Lua**\t\t\t\t\t\t\t\t\t\t| string.sub\t\t\t\t\t\t| table.insert \u203b\u7834\u58ca\t\t\t\t\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t|\n| **R\u8a00\u8a9e**\t\t\t\t\t\t\t\t\t\t| substr\t\t\t\t\t\t\t| c \u203b\u7834\u58ca\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Map\t\t\t\t\t\t\t\t\t| Reduce\t\t\t\t\t\t|\n| **CommonLisp**\t\t\t\t\t\t\t\t| subseq\t\t\t\t\t\t\t| append\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| mapcar<br>map 'list\t\t\t\t\t| reduce\t\t\t\t\t\t|\n| **EmacsLisp**\t\t\t\t\t\t\t\t\t| substring\t\t\t\t\t\t\t| append\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| mapcar\t\t\t\t\t\t\t\t| \u7121\u3057\t\t\t\t\t\t\t|\n| **Scheme**\t\t\t\t\t\t\t\t\t| substring\t\t\t\t\t\t\t| append\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| map<br>map-to\t\t\t\t\t\t\t| fold\t\t\t\t\t\t\t|\n| **Clojure**\t\t\t\t\t\t\t\t\t| subs\t\t\t\t\t\t\t\t| conj\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| map\t\t\t\t\t\t\t\t\t| reduce\t\t\t\t\t\t|\n\u203b1 .NET\u8a00\u8a9e\u306e\u914d\u5217\u306fList\\<T>\u578b\u3067\u3042\u308b\u3053\u3068\u3068\u3059\u308b\u3002\n\u203b2 C++\u306e\u914d\u5217\u306fvector\\<T>\u578b\u3067\u3042\u308b\u3053\u3068\u3068\u3059\u308b\u3002\n\u203b3 HSP\u306e\u914d\u5217\u81ea\u52d5\u62e1\u5f35\u306f\u884c\u3046\u305f\u3073\u306b\u65b0\u3057\u3044\u914d\u5217\u3092\u4f5c\u308a\u76f4\u3059\u305f\u3081\u3001\u591a\u7528\u3059\u308b\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3059\u308b\u3002\n\u203b4 Ruby\u306e\u7834\u58ca\u30e1\u30bd\u30c3\u30c9\u306fhoge.clone.push\u3084hoge.dub.push\u306e\u3088\u3046\u306bclone\u304bdub\u3092\u30c1\u30a7\u30fc\u30f3\u3067\u7e4b\u3052\u308b\u3053\u3068\u3067\u975e\u7834\u58ca\u30e1\u30bd\u30c3\u30c9\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u203b5 Lisp\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bapply\u306f\u30ea\u30b9\u30c8\u3092\u5f15\u6570\u306b\u5206\u5272\u3057\u3066\u4efb\u610f\u306e\u95a2\u6570\u306b\u6e21\u305b\u308b\u95a2\u6570\u3002reduce\u3068apply\u306f\u672c\u6765\u306e\u7528\u9014\u304c\u7570\u306a\u308b\u3002\n\n# \u3042\u3068\u304c\u304d\n\u307e\u3068\u3081\u3066\u307f\u3066\u601d\u3063\u305f\u3051\u3069\u3001\u69cb\u6587\u540d\u4ee5\u5916\u306b\u3082\u4f7f\u3044\u65b9\u3082\u7d50\u69cb\u5909\u308f\u3063\u3066\u304f\u308b\u306e\u304c\u8f9b\u3044\u3068\u601d\u3063\u305f\u3002\n\u5177\u4f53\u7684\u306b\u306f\u95a2\u6570\u30c1\u30a7\u30fc\u30f3\u306e\u6709\u7121\u3001\u5f15\u6570\u306e\u9806\u5e8f\u3001\u6b63\u898f\u8868\u73fe\u3042\u305f\u308a\u3002\n\u7279\u306b\\$\u306e\u6b63\u898f\u8868\u73fe\u306f\u4f55\u7a2e\u985e\u304b\u3042\u3063\u3066\u30cf\u30de\u308a\u304b\u3051\u305f\u3082\u306e\u3082\u3042\u3063\u305f\u3002\n\n\u3042\u3068\u306fCommonLisp\u306e\u6587\u5b57\u5217\u51e6\u7406\u304c\u3082\u3046\u5c11\u3057\u512a\u79c0\u3067\u3042\u3063\u3066\u304f\u308c\u3055\u3048\u3059\u308c\u3070\u3001\n\u6050\u3089\u304fLisp4\u3064\u3082\u3084\u308b\u3053\u3068\u306b\u306f\u306a\u3089\u306a\u304b\u3063\u305f\u3002\nEmacsLisp\u306e\u6587\u5b57\u5217\u64cd\u4f5c\u306f\u7d50\u69cb\u512a\u79c0\u3060\u3002\nScheme\u306f\u51e6\u7406\u7cfb\u4f9d\u5b58\u591a\u3059\u304e\u306a\u306e\u3067\u306a\u3093\u3068\u3082\u8a00\u3048\u306a\u3044\u3002\n\n* \u8ffd\u8a18  \n  \u30b3\u30e1\u30f3\u30c8\u9802\u3044\u3066\u3001map\u306b\u6e21\u3059\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u30e9\u30e0\u30c0\u5f62\u5f0f\u3068\u95a2\u6570\u540d\u6307\u5b9a\u3067\u4f75\u8a18\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002  \n  \u305d\u308c\u4ee5\u5916\u306b\u3082\u3001\u540c\u3058\u52d5\u4f5c\u306e\u51e6\u7406\u3092\u884c\u3048\u308b\u69cb\u6587\u306f\u30b3\u30e1\u30f3\u30c8\u3067\u57cb\u3081\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002  \n  (Ruby\u304c\u3082\u306e\u3059\u3054\u3044\u5897\u3048\u305f\u2026)\n  * C++\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002  \n    \u4f55\u3092\u3059\u308b\u306b\u3082\u7121\u3044\u7121\u3044\u5c3d\u304f\u3057\u3067\u304b\u306a\u308a\u3057\u3093\u3069\u304b\u3063\u305f\u2026  \n    C++\u306b\u306f\u6587\u5b57\u5217\u64cd\u4f5c\u3092\u3055\u305b\u308b\u3079\u304d\u3067\u306a\u3044\u3002\n", "tags": ["\u6587\u5b57\u5217\u64cd\u4f5c", "\u69cb\u6587\u6bd4\u8f03", "JavaScript", ".NET", "lisp"]}