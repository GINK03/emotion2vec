{"context": "\n\n\u6982\u8981\n\u300cRuby \u306e retry-handler \u304c\u6fc0\u3057\u304f\u4fbf\u5229\u305d\u3046\u306a\u306e\u3067 Java \u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u300d\u3092\u8aad\u3093\u3067\u3001\u305d\u3046\u3044\u3046\u4fbf\u5229\u306a\u3082\u306e\u304c\u3042\u308b\u3068\u77e5\u308a\u307e\u3057\u305f\u3002\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001\u79c1\u3082\u52c9\u5f37\u3092\u517c\u306d\u3066\u898b\u3088\u3046\u898b\u307e\u306d\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30ea\u30c8\u30e9\u30a4\u30cf\u30f3\u30c9\u30e9\u306e\u6a5f\u80fd\n\u4f8b\u5916\u304c\u767a\u751f\u3057\u3046\u308b\u51e6\u7406\u3092x\u56de\u8a66\u884c\u3057\u307e\u3059\u3002\u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u3051\u308c\u30701\u56de\u3067\u7d42\u4e86\u3057\u3001\u767a\u751f\u3057\u305f\u5834\u5408\u306f\u6700\u5927\u6307\u5b9a\u56de\u6570\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\nHTTP \u30a2\u30af\u30bb\u30b9\u7b49\u306e\u3001\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3082\u6210\u529f\u3059\u308b\u307e\u3067\u4f55\u56de\u304b\u7e70\u308a\u8fd4\u3057\u3066\u307b\u3057\u3044\u51e6\u7406\u3067\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\n\n\n\u5b9f\u88c5\nGitHub repository\nCommand \u3092\u53d7\u3051\u53d6\u308b\u3060\u3051\u306e interface \u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nAction\npublic interface Action {\n    public void action(int retrying);\n}\n\n\n\u547c\u3073\u51fa\u3057\u5074\u3067\u306f\u7e70\u308a\u8fd4\u3057\u305f\u3044\u51e6\u7406\u3092 Action \u306e action \u30e1\u30bd\u30c3\u30c9\u5185\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30d5\u30a7\u30a4\u30b9\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u3067 Lambda \u5f0f\u3092\u4f7f\u3063\u3066\u8a18\u8ff0\u53ef\u80fd\u3067\u3059\u3002\n\nattempt()\npublic void attempt() {\n    for (int i = 0; i < maxRetry; i++) {\n        try {\n            action.action(i);\n            return;\n        } catch (final Exception e) {\n            if (!suppressWarning) {\n                e.printStackTrace();\n            }\n            sleep();\n        }\n    }\n}\n\n\nattempt() \u30e1\u30bd\u30c3\u30c9\u3067\u306f\u53d7\u3051\u53d6\u3063\u305f Command \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4f55\u3082\u8d77\u3053\u3089\u306a\u3051\u308c\u3070\u8a66\u884c\u3092\u7d42\u4e86\u3057\u3001\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u305f\u3089 intervalMs \u3067\u6307\u5b9a\u3057\u305f\u30df\u30ea\u79d2\u5206\u505c\u6b62\u3057\u3066\u518d\u5ea6\u306e\u8a66\u884c\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\n\n\u4f7f\u3044\u65b9\n\ngit clone & gradle jar\n$ git clone https://github.com/toastkidjp/retry_handler.git\n\n$ gradle jar\n$ mv build/libs/retry_handler-0.0.1.jar\n\n\n\u30d3\u30eb\u30c9\u30d1\u30b9\u306b\u300cretry_handler-0.0.1.jar\u300d\u3092\u542b\u3081\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e0a\u3067 import \u3059\u308b\nimport jp.toastkid.libs.retry.Retry;\n\n\n\u4f7f\u3046\nstatic \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u65b9\u6cd5\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u4f7f\u3046\u65b9\u6cd5\u3068\u30012\u7a2e\u985e\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\nstatic \u30e1\u30bd\u30c3\u30c9\u3067\u4f7f\u3046\n\nuse_static\nRetry.attempt((i) -> {/* \u7e70\u308a\u8fd4\u3057\u305f\u3044\u51e6\u7406 */}, 2, 1000L);\n\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u4f7f\u3046\n\u3042\u308a\u304c\u3061\u3067\u3059\u304c build() \u3057\u3066\u304b\u3089 attempt() \u3092\u547c\u3073\u51fa\u3059\u306e\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\nuse_by_instance\nnew Retry.Builder()\n    .setAction((i) -> {/* \u7e70\u308a\u8fd4\u3057\u305f\u3044\u51e6\u7406 */)\n    .setMaxRetry(3)\n    .setIntervalMs(1000L)\n    .build()\n    .attempt();\n\n\n\n\n\u611f\u60f3\n\u5143\u306e\u8a18\u4e8b\u306e\u3088\u3046\u306b Runnable \u3067\u5b9f\u88c5\u3057\u305f\u65b9\u304c\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u306e\u5b9f\u884c\u7b49\u306e\u62e1\u5f35\u304c\u3084\u308a\u3084\u3059\u304f\u306a\u3063\u3066\u3088\u304b\u3063\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n# \u6982\u8981\n\u300c[Ruby \u306e retry-handler \u304c\u6fc0\u3057\u304f\u4fbf\u5229\u305d\u3046\u306a\u306e\u3067 Java \u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f](http://yoshiori.hatenablog.com/entry/20120315/1331825419)\u300d\u3092\u8aad\u3093\u3067\u3001\u305d\u3046\u3044\u3046\u4fbf\u5229\u306a\u3082\u306e\u304c\u3042\u308b\u3068\u77e5\u308a\u307e\u3057\u305f\u3002\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001\u79c1\u3082\u52c9\u5f37\u3092\u517c\u306d\u3066\u898b\u3088\u3046\u898b\u307e\u306d\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u30ea\u30c8\u30e9\u30a4\u30cf\u30f3\u30c9\u30e9\u306e\u6a5f\u80fd\n\u4f8b\u5916\u304c\u767a\u751f\u3057\u3046\u308b\u51e6\u7406\u3092x\u56de\u8a66\u884c\u3057\u307e\u3059\u3002\u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u3051\u308c\u30701\u56de\u3067\u7d42\u4e86\u3057\u3001\u767a\u751f\u3057\u305f\u5834\u5408\u306f\u6700\u5927\u6307\u5b9a\u56de\u6570\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\nHTTP \u30a2\u30af\u30bb\u30b9\u7b49\u306e\u3001\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3082\u6210\u529f\u3059\u308b\u307e\u3067\u4f55\u56de\u304b\u7e70\u308a\u8fd4\u3057\u3066\u307b\u3057\u3044\u51e6\u7406\u3067\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\n\n---\n# \u5b9f\u88c5\n[GitHub repository](https://github.com/toastkidjp/retry_handler/tree/73e0f1020729981d8113b60b35d81f3d54b54339)\n\nCommand \u3092\u53d7\u3051\u53d6\u308b\u3060\u3051\u306e interface \u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```java:Action\npublic interface Action {\n    public void action(int retrying);\n}\n```\n\n\u547c\u3073\u51fa\u3057\u5074\u3067\u306f\u7e70\u308a\u8fd4\u3057\u305f\u3044\u51e6\u7406\u3092 Action \u306e action \u30e1\u30bd\u30c3\u30c9\u5185\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30d5\u30a7\u30a4\u30b9\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u3067 Lambda \u5f0f\u3092\u4f7f\u3063\u3066\u8a18\u8ff0\u53ef\u80fd\u3067\u3059\u3002\n\n```java:attempt()\npublic void attempt() {\n    for (int i = 0; i < maxRetry; i++) {\n        try {\n            action.action(i);\n            return;\n        } catch (final Exception e) {\n            if (!suppressWarning) {\n                e.printStackTrace();\n            }\n            sleep();\n        }\n    }\n}\n```\n\nattempt() \u30e1\u30bd\u30c3\u30c9\u3067\u306f\u53d7\u3051\u53d6\u3063\u305f Command \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4f55\u3082\u8d77\u3053\u3089\u306a\u3051\u308c\u3070\u8a66\u884c\u3092\u7d42\u4e86\u3057\u3001\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u305f\u3089 intervalMs \u3067\u6307\u5b9a\u3057\u305f\u30df\u30ea\u79d2\u5206\u505c\u6b62\u3057\u3066\u518d\u5ea6\u306e\u8a66\u884c\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\n---\n# \u4f7f\u3044\u65b9\n## git clone & gradle jar\n```cmd\n$ git clone https://github.com/toastkidjp/retry_handler.git\n\n$ gradle jar\n$ mv build/libs/retry_handler-0.0.1.jar\n```\n\n## \u30d3\u30eb\u30c9\u30d1\u30b9\u306b\u300cretry_handler-0.0.1.jar\u300d\u3092\u542b\u3081\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e0a\u3067 import \u3059\u308b\n```java\nimport jp.toastkid.libs.retry.Retry;\n```\n\n## \u4f7f\u3046\nstatic \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u65b9\u6cd5\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u4f7f\u3046\u65b9\u6cd5\u3068\u30012\u7a2e\u985e\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n### static \u30e1\u30bd\u30c3\u30c9\u3067\u4f7f\u3046\n\n```java:use_static\nRetry.attempt((i) -> {/* \u7e70\u308a\u8fd4\u3057\u305f\u3044\u51e6\u7406 */}, 2, 1000L);\n```\n\n### \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u4f7f\u3046\n\u3042\u308a\u304c\u3061\u3067\u3059\u304c build() \u3057\u3066\u304b\u3089 attempt() \u3092\u547c\u3073\u51fa\u3059\u306e\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\n```java:use_by_instance\nnew Retry.Builder()\n    .setAction((i) -> {/* \u7e70\u308a\u8fd4\u3057\u305f\u3044\u51e6\u7406 */)\n    .setMaxRetry(3)\n    .setIntervalMs(1000L)\n    .build()\n    .attempt();\n```\n\n---\n\n# \u611f\u60f3\n\u5143\u306e\u8a18\u4e8b\u306e\u3088\u3046\u306b Runnable \u3067\u5b9f\u88c5\u3057\u305f\u65b9\u304c\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u306e\u5b9f\u884c\u7b49\u306e\u62e1\u5f35\u304c\u3084\u308a\u3084\u3059\u304f\u306a\u3063\u3066\u3088\u304b\u3063\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n", "tags": ["Java", "java8"]}