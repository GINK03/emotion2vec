{"context": "\n\n\u5b8c\u6210\u4e88\u60f3\u56f3\n\nTHE\u96d1\u3067\u3059\u304cGitHub\u306b\u4eca\u56de\u4f5c\u6210\u3057\u305f\u30bd\u30fc\u30b9\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304d\u307e\u3057\u305f\nhttps://github.com/nnsnodnb/XML-Parser-sample\n\n\u4f5c\u696d\u74b0\u5883\n\nOSX 10.11.6\nXcode7.3.1\nObjective-C\nCocoaPods 0.39.0\n\n\nAFNetworking 3.1.0\n\n\n\n\n\u6e96\u5099\n\n\u3053\u3053\u307e\u3067\u6e96\u5099\u3092\u3057\u3066\u304b\u3089\u59cb\u3081\u307e\u3059\u3002\n\u9762\u5012\u306a\u306e\u3067MVC\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\n\u30b5\u30f3\u30d7\u30eb XML \u30d5\u30a1\u30a4\u30eb (books.xml) | MicroSoft\n\u4e0a\u8a18\u30c7\u30fc\u30bf\u3092\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\uff01\uff01\n\u307e\u305f\u3001\u30c7\u30fc\u30bf\u306f\u79c1\u306e\u30b5\u30fc\u30d0\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b\u306e\u3067\u4f7f\u3044\u305f\u3044\u65b9\u306f\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\uff01\nhttps://dl.nnsnodnb.moe/ios-app/sample.xml\ncatalog\n\u2192book\n\u2192\u2192author\n\u2192\u2192title\n\u2192\u2192genre\n\u2192\u2192price\n\u2192\u2192publish_date\n\u2192\u2192description\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067TableView\u306b\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3055\u305b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\uff01\n(\u77e2\u5370\u304c\u5165\u308c\u5b50)\n\n\u5b9f\u88c5\n\nXML\u6574\u5f62\u30e9\u30a4\u30d6\u30e9\u30ea\n\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\uff1f\nhttps://github.com/nnsnodnb/XML-to-NSDictionary\n\u2192 \u672c\u5bb6\n\u81ea\u5206\u306a\u308a\u306bARC\u306b\u5bfe\u5fdc\u3055\u305b\u307e\u3057\u305f\u3002\u958b\u767a\u304c\u3059\u3067\u306b\u6b62\u307e\u3063\u3066\u3044\u308b\u306e\u3067PR\u3092\u51fa\u3057\u3066\u3082\u30de\u30fc\u30b8\u3055\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\uff01\nvender \u30d5\u30a9\u30eb\u30c0\u306b XmlReader.h \u53ca\u3073 XmlReader.m \u3092\u7a81\u3063\u8fbc\u3093\u3067\u304a\u304f\uff01\n\nModel Object\n\nBook\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u304a\u304f\u3002\u4e2d\u8eab\u306f\u4ee5\u4e0b\n\nBook.h\n#import <Foundation/Foundation.h>\n\n@interface Book : NSObject\n\n@property (nonatomic) NSString *author;\n@property (nonatomic) NSString *title;\n@property (nonatomic) NSString *genre;\n@property (nonatomic) NSString *price;\n@property (nonatomic) NSString *publishDate;\n@property (nonatomic) NSString *bookDescription;\n\n@end\n\n\ndescription \u306b\u95a2\u3057\u3066\u306f\u4e88\u7d04\u8a9e\u306a\u306e\u3067 bookDescription \u3068\u3057\u305f\n\nTableViewCell \u30af\u30e9\u30b9\n\nTableViewCell.h\n#import <UIKit/UIKit.h>\n#import \"Book.h\"\n\n@interface TableViewCell : UITableViewCell\n\n@property (weak, nonatomic) IBOutlet UILabel *authorLabel;\n@property (weak, nonatomic) IBOutlet UILabel *titleLabel;\n@property (weak, nonatomic) IBOutlet UILabel *genreLabel;\n@property (weak, nonatomic) IBOutlet UILabel *priceLabel;\n@property (weak, nonatomic) IBOutlet UILabel *publicDateLabel;\n@property (weak, nonatomic) IBOutlet UILabel *descriptionLabel;\n\n- (void)setConfigure:(Book *)model;\n\n@end\n\n\n\nTableViewCell.m\n\n#import \"TableViewCell.h\"\n\n@implementation TableViewCell\n\n- (void)awakeFromNib {\n    [super awakeFromNib];\n}\n\n- (void)setSelected:(BOOL)selected animated:(BOOL)animated {\n    [super setSelected:selected animated:animated];\n}\n\n- (void)setConfigure:(Book *)model {\n    self.authorLabel.text = [model.author stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.titleLabel.text = [model.title stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.genreLabel.text = [model.genre stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.priceLabel.text = [model.price stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.publicDateLabel.text = [model.publishDate stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.descriptionLabel.text = [model.bookDescription stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n}\n\n@end\n\n\n\u6539\u884c\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u306e\u3067\u6539\u884c\u3092\u524a\u9664\u3059\u308b\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5f53\u305f\u308a\u524d\u306a\u3068\u3053\u308d\u306f\u7aef\u6298\u308a\u306a\u304c\u3089\u3084\u308a\u307e\u3059\uff01\n\n\u30c7\u30b6\u30a4\u30f3\u6027\u306b\u6b20\u3051\u3066\u3044\u307e\u3059\u304c\u3068\u308a\u3042\u3048\u305a\u3053\u3093\u306a\u611f\u3058\u3067storyboard\u3092\u7de8\u96c6\nDescription\u306fLine\u30920\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nXML\u6574\u5f62\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u88dc\u8db3\n\u306a\u3093\u304bkey\u306e\u4e2d\u306b\u66f4\u306bkey\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u8b0e\u4ed5\u69d8\uff57\uff57\n\nAFNetworking\u5f53\u305f\u308a\u306e\u304a\u4ed5\u4e8b\n\nGetXmlData.h\n#import <Foundation/Foundation.h>\n#import \"Book.h\"\n\n@protocol CallBackDelegate <NSObject>\n\n- (void)callbackWithError;\n\n@end\n\ntypedef void (^Callback)(NSArray<Book *>* dataSource);\n\n@interface GetXmlData : NSObject\n\n@property (weak, nonatomic) id<CallBackDelegate> delegate;\n- (void)requestXmlDataWithCallback:(Callback)callback;\n\n@end\n\n\n\nGetXmlData.m\n#import \"GetXmlData.h\"\n#import \"XMLReader.h\"\n#import <AFNetworking/AFNetworking.h>\n\nstatic NSString *const accessUrl = @\"https://dl.nnsnodnb.moe/ios-app/sample.xml\";\n\n@implementation GetXmlData\n\n- (void)requestXmlDataWithCallback:(Callback)callback {\n    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];\n    AFHTTPRequestSerializer * requestSerializer = [AFHTTPRequestSerializer serializer];\n    AFHTTPResponseSerializer * responseSerializer = [AFHTTPResponseSerializer serializer];\n    responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@\"text/xml\", nil];\n    manager.responseSerializer = responseSerializer;\n    manager.requestSerializer = requestSerializer;\n\n    NSMutableArray<Book *> *dataSource = [NSMutableArray array];\n    __weak typeof (self) wself = self;\n\n    [manager GET:accessUrl\n      parameters:nil\n        progress:nil\n         success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {\n             NSData *data = (NSData *)responseObject;\n             NSDictionary<NSString *, NSDictionary *> *dictionary = [XMLReader dictionaryForXMLData:data\n                                                                                              error:nil];\n             NSDictionary<NSString *, NSDictionary *> *category = dictionary[@\"catalog\"];\n             for (NSDictionary<NSString *, NSDictionary *> *book in category[@\"book\"]) {\n                 Book *model = [Book new];\n                 model.author = book[@\"author\"][@\"text\"];\n                 model.title = book[@\"title\"][@\"text\"];\n                 model.genre = book[@\"genre\"][@\"text\"];\n                 model.price = book[@\"price\"][@\"text\"];\n                 model.publishDate = book[@\"publish_date\"][@\"text\"];\n                 model.bookDescription = book[@\"description\"][@\"text\"];\n\n                 [dataSource addObject:model];\n             }\n             callback(dataSource);\n         } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {\n             if ([wself.delegate respondsToSelector:@selector(callbackWithError)]) {\n                 [wself.delegate callbackWithError];\n             }\n         }];\n}\n\n@end\n\n\n+ (NSDictionary *)dictionaryForXMLData:(NSData *)data error:(NSError *)error;\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067 responseObject \u3092NSData\u306b\u5909\u63db\u3057\u3066\u3042\u3052\u3066\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u5f53\u3066\u3066\u3042\u3052\u308b\u3068\u30b0\u30c1\u30e3\u30b0\u30c1\u30e3\u306aNSDictionary\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff01\uff01\n\u3053\u3093\u306a\u3082\u306e\u304b\u3002\n\nViewController\u306f\uff1f\n\nViewController.m\n#import \"Book.h\"\n#import \"GetXmlData.h\"\n#import \"TableViewCell.h\"\n#import \"ViewController.h\"\n\n@interface ViewController () <UITableViewDataSource, UITableViewDelegate, CallBackDelegate>\n\n@property (weak, nonatomic) IBOutlet UITableView *tableView;\n@property (nonatomic) NSArray<Book *> *dataSource;\n@property (nonatomic) GetXmlData *getXmlData;\n\n@end\n\n@implementation ViewController\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    self.dataSource = [NSArray array];\n    self.tableView.dataSource = self;\n    self.tableView.delegate = self;\n\n    self.getXmlData = [GetXmlData new];\n    self.getXmlData.delegate = self;\n\n    __weak typeof (self) wself = self;\n    [self.getXmlData requestXmlDataWithCallback:^(NSArray<Book *> *dataSource) {\n        wself.dataSource = dataSource;\n        [wself.tableView reloadData];\n    }];\n}\n\n- (void)didReceiveMemoryWarning {\n    [super didReceiveMemoryWarning];\n}\n\n#pragma mark - UITableViewDataSource\n\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {\n    return self.dataSource.count;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    TableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@\"Cell\"\n                                                          forIndexPath:indexPath];\n    [cell setConfigure:self.dataSource[indexPath.row]];\n\n    return cell;\n}\n\n\n#pragma mark - UITableViewDelegate\n\n- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {\n    [tableView deselectRowAtIndexPath:indexPath animated:YES];\n}\n\n#pragma mark - CallBackDelegate\n\n- (void)callbackWithError {\n    NSLog(@\"Error\");\n}\n\n@end\n\n\n\n\u6700\u5f8c\u306b\n\u306a\u3093\u304b\u6700\u5f8c\u306f\u3076\u3063\u98db\u3070\u3057\u3067\u884c\u304d\u307e\u3057\u305f\u304c\u3001\u306a\u3093\u3068\u304b\u306a\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u304c\u60aa\u304b\u3063\u305f\u306e\u304b\u306a\u3093\u304b\u3061\u3087\u3063\u3068\u6642\u9593\u3092\u304b\u3051\u3059\u304e\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n## \u5b8c\u6210\u4e88\u60f3\u56f3\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c11.41.29.png](https://qiita-image-store.s3.amazonaws.com/0/97280/1ae2ba3b-ebb6-0d0b-1762-66dbf8724eaa.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c11.41.29.png\")\n\nTHE\u96d1\u3067\u3059\u304cGitHub\u306b\u4eca\u56de\u4f5c\u6210\u3057\u305f\u30bd\u30fc\u30b9\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304d\u307e\u3057\u305f\n\nhttps://github.com/nnsnodnb/XML-Parser-sample\n\n## \u4f5c\u696d\u74b0\u5883\n\n- OSX 10.11.6\n- Xcode7.3.1\n- Objective-C\n- CocoaPods 0.39.0\n  - AFNetworking 3.1.0\n\n## \u6e96\u5099\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c9.53.03.png](https://qiita-image-store.s3.amazonaws.com/0/97280/f0c361da-ef02-2fdf-39f5-eaf4377d731a.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c9.53.03.png\")\n\n\u3053\u3053\u307e\u3067\u6e96\u5099\u3092\u3057\u3066\u304b\u3089\u59cb\u3081\u307e\u3059\u3002\n\n\u9762\u5012\u306a\u306e\u3067MVC\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n## \u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\n\n[\u30b5\u30f3\u30d7\u30eb XML \u30d5\u30a1\u30a4\u30eb (books.xml) | MicroSoft](https://msdn.microsoft.com/ja-jp/library/ms762271(v=vs.85).aspx)\n\n\u4e0a\u8a18\u30c7\u30fc\u30bf\u3092\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\uff01\uff01\n\u307e\u305f\u3001\u30c7\u30fc\u30bf\u306f\u79c1\u306e\u30b5\u30fc\u30d0\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b\u306e\u3067\u4f7f\u3044\u305f\u3044\u65b9\u306f\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\uff01\n\nhttps://dl.nnsnodnb.moe/ios-app/sample.xml\n\ncatalog\n\u2192book\n\u2192\u2192author\n\u2192\u2192title\n\u2192\u2192genre\n\u2192\u2192price\n\u2192\u2192publish_date\n\u2192\u2192description\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067TableView\u306b\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3055\u305b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\uff01\n(\u77e2\u5370\u304c\u5165\u308c\u5b50)\n\n## \u5b9f\u88c5\n\n\n### XML\u6574\u5f62\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\uff1f\nhttps://github.com/nnsnodnb/XML-to-NSDictionary\n\u2192 [\u672c\u5bb6](https://github.com/bcaccinolo/XML-to-NSDictionary)\n\n\u81ea\u5206\u306a\u308a\u306bARC\u306b\u5bfe\u5fdc\u3055\u305b\u307e\u3057\u305f\u3002\u958b\u767a\u304c\u3059\u3067\u306b\u6b62\u307e\u3063\u3066\u3044\u308b\u306e\u3067PR\u3092\u51fa\u3057\u3066\u3082\u30de\u30fc\u30b8\u3055\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\uff01\n\n`vender` \u30d5\u30a9\u30eb\u30c0\u306b `XmlReader.h` \u53ca\u3073 `XmlReader.m` \u3092\u7a81\u3063\u8fbc\u3093\u3067\u304a\u304f\uff01\n\n### Model Object\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c10.12.25.png](https://qiita-image-store.s3.amazonaws.com/0/97280/d8bead9b-39e4-2f7e-0350-67175133953a.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c10.12.25.png\")\n\nBook\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u304a\u304f\u3002\u4e2d\u8eab\u306f\u4ee5\u4e0b\n\n```obj-c:Book.h\n#import <Foundation/Foundation.h>\n\n@interface Book : NSObject\n\n@property (nonatomic) NSString *author;\n@property (nonatomic) NSString *title;\n@property (nonatomic) NSString *genre;\n@property (nonatomic) NSString *price;\n@property (nonatomic) NSString *publishDate;\n@property (nonatomic) NSString *bookDescription;\n\n@end\n```\n\n`description` \u306b\u95a2\u3057\u3066\u306f\u4e88\u7d04\u8a9e\u306a\u306e\u3067 `bookDescription` \u3068\u3057\u305f\n\n### TableViewCell \u30af\u30e9\u30b9\n\n```obj-c:TableViewCell.h\n#import <UIKit/UIKit.h>\n#import \"Book.h\"\n\n@interface TableViewCell : UITableViewCell\n\n@property (weak, nonatomic) IBOutlet UILabel *authorLabel;\n@property (weak, nonatomic) IBOutlet UILabel *titleLabel;\n@property (weak, nonatomic) IBOutlet UILabel *genreLabel;\n@property (weak, nonatomic) IBOutlet UILabel *priceLabel;\n@property (weak, nonatomic) IBOutlet UILabel *publicDateLabel;\n@property (weak, nonatomic) IBOutlet UILabel *descriptionLabel;\n\n- (void)setConfigure:(Book *)model;\n\n@end\n```\n\n```obj-c:TableViewCell.m\n\n#import \"TableViewCell.h\"\n\n@implementation TableViewCell\n\n- (void)awakeFromNib {\n    [super awakeFromNib];\n}\n\n- (void)setSelected:(BOOL)selected animated:(BOOL)animated {\n    [super setSelected:selected animated:animated];\n}\n\n- (void)setConfigure:(Book *)model {\n    self.authorLabel.text = [model.author stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.titleLabel.text = [model.title stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.genreLabel.text = [model.genre stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.priceLabel.text = [model.price stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.publicDateLabel.text = [model.publishDate stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n    self.descriptionLabel.text = [model.bookDescription stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n}\n\n@end\n```\n\n\u6539\u884c\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u306e\u3067\u6539\u884c\u3092\u524a\u9664\u3059\u308b\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c10.17.09.png](https://qiita-image-store.s3.amazonaws.com/0/97280/9d1b69c7-3880-43df-a8c8-48255b68988c.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c10.17.09.png\")\n\n\u5f53\u305f\u308a\u524d\u306a\u3068\u3053\u308d\u306f\u7aef\u6298\u308a\u306a\u304c\u3089\u3084\u308a\u307e\u3059\uff01\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c10.21.23.png](https://qiita-image-store.s3.amazonaws.com/0/97280/c6d5f863-ce6a-3b18-f89b-6b7cca64bb78.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-15 \u5348\u5f8c10.21.23.png\")\n\n\u30c7\u30b6\u30a4\u30f3\u6027\u306b\u6b20\u3051\u3066\u3044\u307e\u3059\u304c\u3068\u308a\u3042\u3048\u305a\u3053\u3093\u306a\u611f\u3058\u3067storyboard\u3092\u7de8\u96c6\n\nDescription\u306fLine\u30920\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n### XML\u6574\u5f62\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u88dc\u8db3\n\u306a\u3093\u304bkey\u306e\u4e2d\u306b\u66f4\u306bkey\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u8b0e\u4ed5\u69d8\uff57\uff57\n\n### AFNetworking\u5f53\u305f\u308a\u306e\u304a\u4ed5\u4e8b\n\n```obj-c:GetXmlData.h\n#import <Foundation/Foundation.h>\n#import \"Book.h\"\n\n@protocol CallBackDelegate <NSObject>\n\n- (void)callbackWithError;\n\n@end\n\ntypedef void (^Callback)(NSArray<Book *>* dataSource);\n\n@interface GetXmlData : NSObject\n\n@property (weak, nonatomic) id<CallBackDelegate> delegate;\n- (void)requestXmlDataWithCallback:(Callback)callback;\n\n@end\n```\n\n```obj-c:GetXmlData.m\n#import \"GetXmlData.h\"\n#import \"XMLReader.h\"\n#import <AFNetworking/AFNetworking.h>\n\nstatic NSString *const accessUrl = @\"https://dl.nnsnodnb.moe/ios-app/sample.xml\";\n\n@implementation GetXmlData\n\n- (void)requestXmlDataWithCallback:(Callback)callback {\n    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];\n    AFHTTPRequestSerializer * requestSerializer = [AFHTTPRequestSerializer serializer];\n    AFHTTPResponseSerializer * responseSerializer = [AFHTTPResponseSerializer serializer];\n    responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@\"text/xml\", nil];\n    manager.responseSerializer = responseSerializer;\n    manager.requestSerializer = requestSerializer;\n    \n    NSMutableArray<Book *> *dataSource = [NSMutableArray array];\n    __weak typeof (self) wself = self;\n    \n    [manager GET:accessUrl\n      parameters:nil\n        progress:nil\n         success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {\n             NSData *data = (NSData *)responseObject;\n             NSDictionary<NSString *, NSDictionary *> *dictionary = [XMLReader dictionaryForXMLData:data\n                                                                                              error:nil];\n             NSDictionary<NSString *, NSDictionary *> *category = dictionary[@\"catalog\"];\n             for (NSDictionary<NSString *, NSDictionary *> *book in category[@\"book\"]) {\n                 Book *model = [Book new];\n                 model.author = book[@\"author\"][@\"text\"];\n                 model.title = book[@\"title\"][@\"text\"];\n                 model.genre = book[@\"genre\"][@\"text\"];\n                 model.price = book[@\"price\"][@\"text\"];\n                 model.publishDate = book[@\"publish_date\"][@\"text\"];\n                 model.bookDescription = book[@\"description\"][@\"text\"];\n                 \n                 [dataSource addObject:model];\n             }\n             callback(dataSource);\n         } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {\n             if ([wself.delegate respondsToSelector:@selector(callbackWithError)]) {\n                 [wself.delegate callbackWithError];\n             }\n         }];\n}\n\n@end\n```\n\n`+ (NSDictionary *)dictionaryForXMLData:(NSData *)data error:(NSError *)error;`\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067 `responseObject` \u3092NSData\u306b\u5909\u63db\u3057\u3066\u3042\u3052\u3066\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u5f53\u3066\u3066\u3042\u3052\u308b\u3068\u30b0\u30c1\u30e3\u30b0\u30c1\u30e3\u306aNSDictionary\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff01\uff01\n\u3053\u3093\u306a\u3082\u306e\u304b\u3002\n\n### ViewController\u306f\uff1f\n\n```obj-c:ViewController.m\n#import \"Book.h\"\n#import \"GetXmlData.h\"\n#import \"TableViewCell.h\"\n#import \"ViewController.h\"\n\n@interface ViewController () <UITableViewDataSource, UITableViewDelegate, CallBackDelegate>\n\n@property (weak, nonatomic) IBOutlet UITableView *tableView;\n@property (nonatomic) NSArray<Book *> *dataSource;\n@property (nonatomic) GetXmlData *getXmlData;\n\n@end\n\n@implementation ViewController\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    self.dataSource = [NSArray array];\n    self.tableView.dataSource = self;\n    self.tableView.delegate = self;\n    \n    self.getXmlData = [GetXmlData new];\n    self.getXmlData.delegate = self;\n    \n    __weak typeof (self) wself = self;\n    [self.getXmlData requestXmlDataWithCallback:^(NSArray<Book *> *dataSource) {\n        wself.dataSource = dataSource;\n        [wself.tableView reloadData];\n    }];\n}\n\n- (void)didReceiveMemoryWarning {\n    [super didReceiveMemoryWarning];\n}\n\n#pragma mark - UITableViewDataSource\n\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {\n    return self.dataSource.count;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    TableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@\"Cell\"\n                                                          forIndexPath:indexPath];\n    [cell setConfigure:self.dataSource[indexPath.row]];\n    \n    return cell;\n}\n\n\n#pragma mark - UITableViewDelegate\n\n- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {\n    [tableView deselectRowAtIndexPath:indexPath animated:YES];\n}\n\n#pragma mark - CallBackDelegate\n\n- (void)callbackWithError {\n    NSLog(@\"Error\");\n}\n\n@end\n```\n\n## \u6700\u5f8c\u306b\n\n\u306a\u3093\u304b\u6700\u5f8c\u306f\u3076\u3063\u98db\u3070\u3057\u3067\u884c\u304d\u307e\u3057\u305f\u304c\u3001\u306a\u3093\u3068\u304b\u306a\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u304c\u60aa\u304b\u3063\u305f\u306e\u304b\u306a\u3093\u304b\u3061\u3087\u3063\u3068\u6642\u9593\u3092\u304b\u3051\u3059\u304e\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n", "tags": ["afnetworking", "Xcode", "iOS", "Objective-C", "XML"]}