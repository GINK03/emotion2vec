{"context": " More than 1 year has passed since last update.\u203b\u81ea\u5206\u306e\u5b66\u7fd2\u7528\u306e\u30e1\u30e2\u3067\u3059\u3002\n\n\u306a\u306b\u3092\u3084\u308a\u305f\u3044\u306e\u304b\n\u3053\u3053\u3067\u306f\u3001\u30d4\u30af\u30bb\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u5143\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u3092\u8aad\u307f\u8fbc\u3080 \u2192 \u52a0\u5de5\u3059\u308b \u2192 \u52a0\u5de5\u3057\u305f\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080\n\u3068\u3044\u3063\u305f\u624b\u9806\u306b\u306a\u308a\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001\u30d4\u30af\u30bb\u30eb\u3092\u8aad\u307f\u8fbc\u3080 \u2192 \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db \u2192 \u30bb\u30d4\u30a2\u8abf\u306e\u8272\u5408\u3044\u306b\u306b\u5909\u63db \u2192 \u30d4\u30af\u30bb\u30eb\u3092\u66f8\u304d\u8fbc\u3080\n\u3068\u3044\u3046\u51e6\u7406\u3092\u3001\u3072\u3068\u3064\u3065\u3064\u3001\u5168\u3066\u306e\u30d4\u30af\u30bb\u30eb\u306b\u884c\u3044\u307e\u3059\u3002\n\u3088\u308a\u52b9\u7387\u7684\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3053\u3068\u306f\u77e5\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\n\u5143\u753b\u50cf\n\n\u5b9f\u884c\u7d50\u679c\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\nPython 2.7\u3067\u5b9f\u884c\u3002\u307e\u3060PIL\u306fPython 3\u7cfb\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3082\u3088\u3046\u3002\n\nimage-sepia.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n'''\n\u753b\u50cf\u3092\u30bb\u30d4\u30a2\u8abf\u306b\u5909\u63db\u3059\u308b\u30d5\u30a3\u30eb\u30bf\n\n\u7b2c\u4e00\u5f15\u6570 : \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n\u7b2c\u30cb\u5f15\u6570 : \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\uff08\u7701\u7565\u53ef\uff09\n\n\u30bb\u30d4\u30a2\u3068\u306f\u30a4\u30ab\u58a8\u304b\u3089\u4f5c\u3089\u308c\u308b\u9ed2\u8336\u8272\u306e\u7d75\u306e\u5177\u306e\u3053\u3068\u3067\u3001\u753b\u50cf\u3092\u30bb\u30d4\u30a2\u8abf\u306b\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u3053\u308c\u3067\u63cf\u304b\u308c\u305f\u3088\u3046\u306b\u898b\u305b\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002 \n- \u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8f1d\u5ea6\u60c5\u5831\u3092\u53d6\u308a\u51fa\u3059\n- \u5168\u4f53\u3092\u8336\u8272\u3063\u307d\u304f\u5909\u63db\n'''\nimport sys\nimport Image\n\ndef grayscale(r,g,b):\n    '''\n    RGB\u5024\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\uff08\u767d\u9ed2\uff09\u306b\u5909\u63db\u3059\u308b\n    '''\n    # NTSC \u7cfb\u52a0\u91cd\u5e73\u5747\u6cd5\n    gray = int(r * 0.298912 + g * 0.586611 + b * 0.114478)\n    # \u5358\u7d14\u5e73\u5747\u6cd5\n    #gray = int((r+g+b)/3)\n    return gray\n\ndef sepiatone(r,g,b):\n    '''\n    RGB\u5024\u3092\u30bb\u30d4\u30a2\u8abf\u306b\u5909\u63db\u3059\u308b\n    \u30bb\u30d4\u30a2\u8abf\u306b\u5909\u63db\u3059\u308b\u6c7a\u307e\u308a\u4e8b\u306f\u306a\u3044\u307f\u305f\u3044\u306a\u306e\u3067\u3001\u305d\u308c\u3063\u307d\u304f\u306a\u308c\u3070 OK.\n    '''\n    gray = grayscale(r,g,b)\n    #sr = int(gray * 0.9);sg = int(gray * 0.7);sb = int(gray * 0.4)\n    #sr = gray; sg = int(gray * 0.8);sb = int(gray * 0.6)\n    sr = int(gray * 0.8 + 2); sg = int(gray * 0.6 + 2);sb = int(gray * 0.4 + 2)\n    return sr,sg,sb\n\ndef make_image(infile, outfile):\n    '''\n    \u753b\u50cf\u3092\u30bb\u30d4\u30a2\u8abf\u306b\u5909\u63db\u3059\u308b\n    '''\n    img = Image.open(infile)\n    img = img.convert(\"RGB\")\n    x,y = img.size\n    for ly in range( y):\n        for lx in range( x):\n            r,g,b = img.getpixel((lx, ly))\n            sr,sg,sb = sepiatone(r,g,b)\n            img.putpixel((lx,ly), (sr,sg,sb))\n            # \u2193\u3084\u3084\u8272\u3042\u305b\u305f\u611f\u3058\u306b\u3057\u305f\u3044\u5834\u5408\n            #img.putpixel((lx,ly), ((r+sr)/2,(g+sg)/2,(b+sb)/2))\n    img.save(outfile)\n    return\n\ndef usage():\n    sys.stderr.write(\"Usage: %s infile [outfile] \\n\" % sys.argv[0])\n    return\n\nif __name__ == '__main__':\n    argvs = sys.argv\n    argc = len(argvs)\n    # \u5f15\u6570\u30c1\u30a7\u30c3\u30af\n    if ((argc == 1 ) or (argc > 3)):\n        usage()\n        sys.exit(1)\n    if (argc > 2):\n        outfile = argvs[2]\n    else:\n        outfile = \"output.png\"\n\n    infile = argvs[1]\n\n    make_image(infile , outfile)\n\n# EOF\n\n\n\u203b\u81ea\u5206\u306e\u5b66\u7fd2\u7528\u306e\u30e1\u30e2\u3067\u3059\u3002\n\n## \u306a\u306b\u3092\u3084\u308a\u305f\u3044\u306e\u304b\n\n\u3053\u3053\u3067\u306f\u3001\u30d4\u30af\u30bb\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n\u5143\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u3092\u8aad\u307f\u8fbc\u3080 \u2192 \u52a0\u5de5\u3059\u308b \u2192 \u52a0\u5de5\u3057\u305f\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080\n\u3068\u3044\u3063\u305f\u624b\u9806\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5177\u4f53\u7684\u306b\u306f\u3001\u30d4\u30af\u30bb\u30eb\u3092\u8aad\u307f\u8fbc\u3080 \u2192 \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db \u2192 \u30bb\u30d4\u30a2\u8abf\u306e\u8272\u5408\u3044\u306b\u306b\u5909\u63db \u2192 \u30d4\u30af\u30bb\u30eb\u3092\u66f8\u304d\u8fbc\u3080\n\u3068\u3044\u3046\u51e6\u7406\u3092\u3001\u3072\u3068\u3064\u3065\u3064\u3001\u5168\u3066\u306e\u30d4\u30af\u30bb\u30eb\u306b\u884c\u3044\u307e\u3059\u3002\n\n\u3088\u308a\u52b9\u7387\u7684\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3053\u3068\u306f\u77e5\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u5b9f\u884c\u7d50\u679c\n\n\u5143\u753b\u50cf\n![haku12.png](https://qiita-image-store.s3.amazonaws.com/0/26107/26dc00a4-db10-9b9c-e0a7-56b71348eef4.png)\n\n\u5b9f\u884c\u7d50\u679c\n![haku12sepia.png](https://qiita-image-store.s3.amazonaws.com/0/26107/612ee19a-97d3-e1c6-68bd-6798494a37e3.png)\n\n## \u30b9\u30af\u30ea\u30d7\u30c8\nPython 2.7\u3067\u5b9f\u884c\u3002\u307e\u3060PIL\u306fPython 3\u7cfb\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3082\u3088\u3046\u3002\n\n```python:image-sepia.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n'''\n\u753b\u50cf\u3092\u30bb\u30d4\u30a2\u8abf\u306b\u5909\u63db\u3059\u308b\u30d5\u30a3\u30eb\u30bf\n\n\u7b2c\u4e00\u5f15\u6570 : \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n\u7b2c\u30cb\u5f15\u6570 : \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\uff08\u7701\u7565\u53ef\uff09\n\n\u30bb\u30d4\u30a2\u3068\u306f\u30a4\u30ab\u58a8\u304b\u3089\u4f5c\u3089\u308c\u308b\u9ed2\u8336\u8272\u306e\u7d75\u306e\u5177\u306e\u3053\u3068\u3067\u3001\u753b\u50cf\u3092\u30bb\u30d4\u30a2\u8abf\u306b\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u3053\u308c\u3067\u63cf\u304b\u308c\u305f\u3088\u3046\u306b\u898b\u305b\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002 \n- \u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8f1d\u5ea6\u60c5\u5831\u3092\u53d6\u308a\u51fa\u3059\n- \u5168\u4f53\u3092\u8336\u8272\u3063\u307d\u304f\u5909\u63db\n'''\nimport sys\nimport Image\n\ndef grayscale(r,g,b):\n    '''\n    RGB\u5024\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\uff08\u767d\u9ed2\uff09\u306b\u5909\u63db\u3059\u308b\n    '''\n    # NTSC \u7cfb\u52a0\u91cd\u5e73\u5747\u6cd5\n    gray = int(r * 0.298912 + g * 0.586611 + b * 0.114478)\n    # \u5358\u7d14\u5e73\u5747\u6cd5\n    #gray = int((r+g+b)/3)\n    return gray\n\ndef sepiatone(r,g,b):\n    '''\n    RGB\u5024\u3092\u30bb\u30d4\u30a2\u8abf\u306b\u5909\u63db\u3059\u308b\n    \u30bb\u30d4\u30a2\u8abf\u306b\u5909\u63db\u3059\u308b\u6c7a\u307e\u308a\u4e8b\u306f\u306a\u3044\u307f\u305f\u3044\u306a\u306e\u3067\u3001\u305d\u308c\u3063\u307d\u304f\u306a\u308c\u3070 OK.\n    '''\n    gray = grayscale(r,g,b)\n    #sr = int(gray * 0.9);sg = int(gray * 0.7);sb = int(gray * 0.4)\n    #sr = gray; sg = int(gray * 0.8);sb = int(gray * 0.6)\n    sr = int(gray * 0.8 + 2); sg = int(gray * 0.6 + 2);sb = int(gray * 0.4 + 2)\n    return sr,sg,sb\n\ndef make_image(infile, outfile):\n    '''\n    \u753b\u50cf\u3092\u30bb\u30d4\u30a2\u8abf\u306b\u5909\u63db\u3059\u308b\n    '''\n    img = Image.open(infile)\n    img = img.convert(\"RGB\")\n    x,y = img.size\n    for ly in range( y):\n        for lx in range( x):\n            r,g,b = img.getpixel((lx, ly))\n            sr,sg,sb = sepiatone(r,g,b)\n            img.putpixel((lx,ly), (sr,sg,sb))\n            # \u2193\u3084\u3084\u8272\u3042\u305b\u305f\u611f\u3058\u306b\u3057\u305f\u3044\u5834\u5408\n            #img.putpixel((lx,ly), ((r+sr)/2,(g+sg)/2,(b+sb)/2))\n    img.save(outfile)\n    return\n\ndef usage():\n    sys.stderr.write(\"Usage: %s infile [outfile] \\n\" % sys.argv[0])\n    return\n\nif __name__ == '__main__':\n    argvs = sys.argv\n    argc = len(argvs)\n    # \u5f15\u6570\u30c1\u30a7\u30c3\u30af\n    if ((argc == 1 ) or (argc > 3)):\n        usage()\n        sys.exit(1)\n    if (argc > 2):\n        outfile = argvs[2]\n    else:\n        outfile = \"output.png\"\n\n    infile = argvs[1]\n\n    make_image(infile , outfile)\n\n# EOF\n```\n", "tags": ["Python", "PIL"]}