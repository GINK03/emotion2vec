{"context": " More than 1 year has passed since last update.\u73fe\u5728spritkit\u3067\u30b2\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u3067\u3059\u3002\n\u753b\u9762\u3092\u30bf\u30c3\u30d7\u3001\u9023\u6253\u3059\u308b\u3068\u5730\u9762\uff08\u4e0b\uff09\u306b\u7acb\u3063\u3066\u3044\u305f\n\u30ad\u30e3\u30e9\u30af\u30bf\u30fc(\u30e1\u30fc\u30bf\u30fc\u306e\u4ee3\u308f\u308a)\u304c\u91cd\u529b\u306b\u9006\u3089\u3044\n\u4e0a\u306b\u3042\u304c\u308a\u3001\u30e1\u30fc\u30bf\u30fc\u306e\u4e0a\u90e8\uff08\u8a2d\u7f6e\u3057\u305f\u5929\u4e95\uff09\u306b\u30e1\u30e2\u30ea\u304c\u885d\u7a81\u3059\u308b\u3068\n\u5f97\u70b9\u306b\u306a\u308a\uff08\u30b2\u30fc\u30b8\u304c\uff11\u305f\u307e\u308a\uff09\u3001\u305d\u306e\u5f8c\u307e\u305f\u540c\u3058\u3053\u3068\u3092\u7e70\u308a\u8fd4\u3059\u3088\u3046\u306b\u30ea\u30bb\u30c3\u30c8\u3088\u3046\u306b\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u56f0\u3063\u3066\u3044\u307e\u3059\u3002\uff08\u5f97\u70b9\u306f\u5f15\u304d\u7d99\u304e\u3067\u4f55\u70b9\u53d6\u308c\u308b\u304b\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u30b2\u30fc\u30e0\u3067\u3059\u3002\uff09\n\u4ee5\u524d\u4f5c\u3063\u305f\u30a2\u30f3\u30b0\u30ea\u30fc\u30d0\u30fc\u30c9\uff1f\u306e\u3088\u3046\u306a\u30b2\u30fc\u30e0\u3092\u57fa\u306b\u3057\u3066\u4f5c\u308d\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u3067\u304d\u306a\u3044\u306e\u304c\u3001\u4e0a\u306e\u5929\u4e95\uff08\u8a2d\u7f6e\u3057\u305f\u3082\u306e\uff09\u306b\u5f53\u305f\u3063\u305f\u969b\u3001\u5f97\u70b9\u3092\u52a0\u7b97\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u3042\u305f\u308a\u5224\u5b9a\u304c\u3046\u307e\u304f\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u4f55\u304b\u30d2\u30f3\u30c8\u3092\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\nimport SpriteKit\n\nclass GameScene: SKScene, SKPhysicsContactDelegate {\n    // MARK: - \u5b9a\u6570\u5b9a\u7fa9\n    /// \u5b9a\u6570\n    struct Constants {\n        /// Player\u753b\u50cf\n        static let PlayerImages = [\"shrimp01\", \"shrimp02\", \"shrimp03\", \"shrimp04\"]\n    }\n\n\n    /// \u885d\u7a81\u306e\u5224\u5b9a\u306b\u3064\u304b\u3046BitMask\n    struct ColliderType {\n        /// \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let Player: UInt32 = (1 << 0)\n        /// \u5929\u4e95\u30fb\u5730\u9762\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let World: UInt32  = (1 << 1)\n        /// \u30b5\u30f3\u30b4\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let Coral: UInt32  = (1 << 2)\n        /// \u30b9\u30b3\u30a2\u52a0\u7b97\u7528SKNode\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let Score: UInt32  = (1 << 3)\n        /// \u30b9\u30b3\u30a2\u52a0\u7b97\u7528SKNode\u306b\u885d\u7a81\u3057\u305f\u969b\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let None: UInt32   = (1 << 4)\n    }\n\n    // MARK: - \u5909\u6570\u5b9a\u7fa9\n    /// \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u4ee5\u5916\u306e\u79fb\u52d5\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u7a7a\u30ce\u30fc\u30c9\n    var baseNode: SKNode!\n    /// \u30b5\u30f3\u30b4\u95a2\u9023\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u7a7a\u30ce\u30fc\u30c9(\u30ea\u30b9\u30bf\u30fc\u30c8\u6642\u306b\u6d3b\u7528)\n    var coralNode: SKNode!\n\n    /// \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\n    var player: SKSpriteNode!\n\n    /// \u30b9\u30b3\u30a2\u3092\u8868\u793a\u3059\u308b\u30e9\u30d9\u30eb\n    var scoreLabelNode: SKLabelNode!\n    /// \u30b9\u30b3\u30a2\u306e\u5185\u90e8\u5909\u6570\n    var score: UInt32!\n\n    // MARK: - \u95a2\u6570\u5b9a\u7fa9\n\n    override func didMoveToView(view: SKView) {\n        // \u5909\u6570\u306e\u521d\u671f\u5316\n        score = 0\n\n        // \u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        self.physicsWorld.gravity = CGVector(dx: 0.0, dy: -2.0)\n        self.physicsWorld.contactDelegate = self\n\n        // \u5168\u30ce\u30fc\u30c9\u306e\u89aa\u3068\u306a\u308b\u30ce\u30fc\u30c9\u3092\u751f\u6210\n        baseNode = SKNode()\n        baseNode.speed = 1.0\n        self.addChild(baseNode)\n\n        // \u969c\u5bb3\u7269\u3092\u8ffd\u52a0\u3059\u308b\u30ce\u30fc\u30c9\u3092\u751f\u6210\n        coralNode = SKNode()\n        baseNode.addChild(coralNode)\n\n\n\n        // \u5929\u4e95\u3068\u5730\u9762\u3092\u69cb\u7bc9\n        self.setupCeilingAndLand()\n        // \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u3092\u69cb\u7bc9\n        self.setupPlayer()\n        // \u969c\u5bb3\u7269\u306e\u30b5\u30f3\u30b4\u3092\u69cb\u7bc9\n        self.setupCoral()\n        // \u30b9\u30b3\u30a2\u30e9\u30d9\u30eb\u306e\u69cb\u7bc9\n        self.setupScoreLabel()\n    }\n\n\n\n    /// \u5929\u4e95\u3068\u5730\u9762\u3092\u69cb\u7bc9\n    func setupCeilingAndLand() {\n        // \u5730\u9762\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n        let land = SKTexture(imageNamed: \"land\")\n        land.filteringMode = .Nearest\n\n        // \u5fc5\u8981\u306a\u753b\u50cf\u679a\u6570\u3092\u7b97\u51fa\n        var needNumber = 2.0 + (self.frame.size.width / land.size().width)\n\n        // \u5de6\u306b\u753b\u50cf\u4e00\u679a\u5206\u79fb\u52d5\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let moveLandAnim = SKAction.moveByX(-land.size().width, y: 0.0, duration:NSTimeInterval(land.size().width / 100.0))\n        // \u5143\u306e\u4f4d\u7f6e\u306b\u623b\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let resetLandAnim = SKAction.moveByX(land.size().width, y: 0.0, duration: 0.0)\n        // \u79fb\u52d5\u3057\u3066\u5143\u306b\u623b\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u7e70\u308a\u8fd4\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let repeatForeverLandAnim = SKAction.repeatActionForever(SKAction.sequence([moveLandAnim, resetLandAnim]))\n\n\n\n        // \u753b\u50cf\u306e\u914d\u7f6e\u3068\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        for var i:CGFloat = 0.0; i < needNumber; ++i {\n            // SKTexture\u304b\u3089SKSpriteNode\u3092\u4f5c\u6210\n            let sprite = SKSpriteNode(texture: land)\n            // \u753b\u50cf\u306e\u521d\u671f\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n            sprite.position = CGPoint(x: i * sprite.size.width, y: sprite.size.height / 2.0)\n\n            // \u753b\u50cf\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            sprite.physicsBody = SKPhysicsBody(texture: land, size: land.size())\n            sprite.physicsBody?.dynamic = false\n            sprite.physicsBody?.categoryBitMask = ColliderType.World\n\n            // \u30b9\u30b3\u30a2\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\n            let scoreNode = SKNode()\n            scoreNode.position = CGPoint(x: self.size.width , y: self.size.height / 2.0)\n\n            // \u30b9\u30b3\u30a2\u30ce\u30fc\u30c9\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            scoreNode.physicsBody = SKPhysicsBody(rectangleOfSize: CGSize(width: 10.0, height: self.frame.size.height))\n            scoreNode.physicsBody?.dynamic = false\n            scoreNode.physicsBody?.categoryBitMask = ColliderType.Score\n            scoreNode.physicsBody?.contactTestBitMask = ColliderType.Player\n            ceiling.addChild(scoreNode)\n            ceiling.runAction(coralAnim)\n\n            self.coralNode.addChild(coral)            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            sprite.runAction(repeatForeverLandAnim)\n            // \u89aa\u30ce\u30fc\u30c9\u306b\u8ffd\u52a0\n            baseNode.addChild(sprite)\n        }\n\n        // \u5929\u4e95\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n        let ceiling = SKTexture(imageNamed: \"ceiling\")\n        ceiling.filteringMode = .Nearest\n\n        // \u5fc5\u8981\u306a\u753b\u50cf\u679a\u6570\u3092\u7b97\u51fa\n        needNumber = 2.0 + self.frame.size.width / ceiling.size().width\n\n        // \u753b\u50cf\u306e\u914d\u7f6e\u3068\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        for var i:CGFloat = 0.0; i < needNumber; i++ {\n            // SKTexture\u304b\u3089SKSpriteNode\u3092\u4f5c\u6210\n            let sprite = SKSpriteNode(texture: ceiling)\n            // \u753b\u50cf\u306e\u521d\u671f\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n            sprite.position = CGPoint(x: i * sprite.size.width, y: self.frame.size.height - sprite.size.height / 2.0)\n\n            // \u753b\u50cf\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            sprite.physicsBody = SKPhysicsBody(texture: ceiling, size: ceiling.size())\n            sprite.physicsBody?.dynamic = false\n            sprite.physicsBody?.categoryBitMask = ColliderType.World\n\n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            sprite.runAction(repeatForeverLandAnim)\n            // \u89aa\u30ce\u30fc\u30c9\u306b\u8ffd\u52a0\n            baseNode.addChild(sprite)\n\n\n\n\n        }\n\n\n    }\n\n    /// \u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u69cb\u7bc9\n    func setupPlayer() {\n        // Player\u306e\u30d1\u30e9\u30d1\u30e9\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u306b\u5fc5\u8981\u306aSKTexture\u30af\u30e9\u30b9\u306e\u914d\u5217\u3092\u5b9a\u7fa9\n        var playerTexture = [SKTexture]()\n\n        // \u30d1\u30e9\u30d1\u30e9\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u5fc5\u8981\u306a\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n        for imageName in Constants.PlayerImages {\n            let texture = SKTexture(imageNamed: imageName)\n            texture.filteringMode = .Linear\n            playerTexture.append(texture)\n        }\n\n        // \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u30d1\u30e9\u30d1\u30e9\u6f2b\u753b\u306e\u3088\u3046\u306b\u5207\u308a\u66ff\u3048\u308b\n        let playerAnimation = SKAction.animateWithTextures(playerTexture, timePerFrame: 0.2)\n        // \u30d1\u30e9\u30d1\u30e9\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u30eb\u30fc\u30d7\u3055\u305b\u308b\n        let loopAnimation = SKAction.repeatActionForever(playerAnimation)\n\n        // \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3092\u751f\u6210\n        player = SKSpriteNode(texture: playerTexture[0])\n        // \u521d\u671f\u8868\u793a\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n        player.position = CGPoint(x: self.frame.size.width * 0.35, y: self.frame.size.height * 0.6)\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        player.runAction(loopAnimation)\n\n        // \u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        player.physicsBody = SKPhysicsBody(texture: playerTexture[0], size: playerTexture[0].size())\n        player.physicsBody?.dynamic = true\n        player.physicsBody?.allowsRotation = false\n\n        // \u81ea\u5206\u81ea\u8eab\u306bPlayer\u30ab\u30c6\u30b4\u30ea\u3092\u8a2d\u5b9a\n        player.physicsBody?.categoryBitMask = ColliderType.Player\n        // \u885d\u7a81\u5224\u5b9a\u76f8\u624b\u306bWorld\u3068Coral\u3092\u8a2d\u5b9a\n        player.physicsBody?.collisionBitMask = ColliderType.World | ColliderType.Coral\n        player.physicsBody?.contactTestBitMask = ColliderType.World | ColliderType.Coral\n\n\n        self.addChild(player)\n    }\n\n    ///  \u969c\u5bb3\u7269\u306e\u30b5\u30f3\u30b4\u3092\u69cb\u7bc9\n    func setupCoral() {\n        // \u30b5\u30f3\u30b4\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n        let coralUnder = SKTexture(imageNamed: \"coral_under\")\n        coralUnder.filteringMode = .Linear\n        let coralAbove = SKTexture(imageNamed: \"coral_above\")\n        coralAbove.filteringMode = .Linear\n\n        // \u79fb\u52d5\u3059\u308b\u8ddd\u96e2\u3092\u7b97\u51fa\n        let distanceToMove = CGFloat(self.frame.size.width + 2.0 * coralUnder.size().width)\n\n        // \u753b\u9762\u5916\u307e\u3067\u79fb\u52d5\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let moveAnim = SKAction.moveByX(-distanceToMove, y: 0.0, duration:NSTimeInterval(distanceToMove / 100.0))\n        // \u81ea\u8eab\u3092\u53d6\u308a\u9664\u304f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let removeAnim = SKAction.removeFromParent()\n        // 2\u3064\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u9806\u306b\u5b9f\u884c\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let coralAnim = SKAction.sequence([moveAnim, removeAnim])\n\n        // \u30b5\u30f3\u30b4\u3092\u751f\u6210\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let newCoralAnim = SKAction.runBlock({\n            // \u30b5\u30f3\u30b4\u306b\u95a2\u3059\u308b\u30ce\u30fc\u30c9\u3092\u4e57\u305b\u308b\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\n            let coral = SKNode()\n            coral.position = CGPoint(x: self.frame.size.width + coralUnder.size().width * 2, y: 0.0)\n            coral.zPosition = -40.0\n\n            // \u5730\u9762\u304b\u3089\u4f38\u3073\u308b\u30b5\u30f3\u30b4\u306ey\u5ea7\u6a19\u3092\u7b97\u51fa\n            let height = UInt32(self.frame.size.height / 12)\n            let y = CGFloat(arc4random_uniform(height * 2) + height)\n\n            // \u5730\u9762\u304b\u3089\u4f38\u3073\u308b\u30b5\u30f3\u30b4\u3092\u4f5c\u6210\n            let under = SKSpriteNode(texture: coralUnder)\n            under.position = CGPoint(x: 0.0, y: y)\n\n            // \u30b5\u30f3\u30b4\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            under.physicsBody = SKPhysicsBody(texture: coralUnder, size: under.size)\n            under.physicsBody?.dynamic = false\n            under.physicsBody?.categoryBitMask = ColliderType.Coral\n            under.physicsBody?.contactTestBitMask = ColliderType.Player\n            coral.addChild(under)\n\n            // \u5929\u4e95\u304b\u3089\u4f38\u3073\u308b\u30b5\u30f3\u30b4\u3092\u4f5c\u6210\n            let above = SKSpriteNode(texture: coralAbove)\n            above.position = CGPoint(x: 0.0, y: y + (under.size.height / 2.0) + 160.0 + (above.size.height / 2.0))\n\n            // \u30b5\u30f3\u30b4\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            above.physicsBody = SKPhysicsBody(texture: coralAbove, size: above.size)\n            above.physicsBody?.dynamic = false\n            above.physicsBody?.categoryBitMask = ColliderType.Coral\n            above.physicsBody?.contactTestBitMask = ColliderType.Player\n            coral.addChild(above)\n\n            // \u30b9\u30b3\u30a2\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\n            let scoreNode = SKNode()\n            scoreNode.position = CGPoint(x: (above.size.width / 2.0) + 5.0, y: self.frame.height / 2.0)\n\n            // \u30b9\u30b3\u30a2\u30ce\u30fc\u30c9\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            scoreNode.physicsBody = SKPhysicsBody(rectangleOfSize: CGSize(width: 10.0, height: self.frame.size.height))\n            scoreNode.physicsBody?.dynamic = false\n            scoreNode.physicsBody?.categoryBitMask = ColliderType.Score\n            scoreNode.physicsBody?.contactTestBitMask = ColliderType.Player\n            coral.addChild(scoreNode)\n            coral.runAction(coralAnim)\n\n            self.coralNode.addChild(coral)\n        })\n        // \u4e00\u5b9a\u9593\u9694\u5f85\u3064\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let delayAnim = SKAction.waitForDuration(2.5)\n        // \u4e0a\u8a182\u3064\u3092\u6c38\u9060\u3068\u7e70\u308a\u8fd4\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let repeatForeverAnim = SKAction.repeatActionForever(SKAction.sequence([newCoralAnim, delayAnim]))\n        // \u3053\u306e\u753b\u9762\u3067\u5b9f\u884c\n        self.runAction(repeatForeverAnim)\n    }\n\n    /// \u30b9\u30b3\u30a2\u30e9\u30d9\u30eb\u3092\u69cb\u7bc9\n    func setupScoreLabel() {\n        // \u30d5\u30a9\u30f3\u30c8\u540d\"Arial Bold\"\u3067\u30e9\u30d9\u30eb\u3092\u4f5c\u6210\n        scoreLabelNode = SKLabelNode(fontNamed: \"Arial Bold\")\n        // \u30d5\u30a9\u30f3\u30c8\u8272\u3092\u9ec4\u8272\u306b\u8a2d\u5b9a\n        scoreLabelNode.fontColor = UIColor.blackColor()\n        // \u8868\u793a\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n        scoreLabelNode.position = CGPoint(x: self.frame.width / 2.0, y: self.frame.size.height * 0.9)\n        // \u6700\u524d\u9762\u306b\u8868\u793a\n        scoreLabelNode.zPosition = 100.0\n        // \u30b9\u30b3\u30a2\u3092\u8868\u793a\n        scoreLabelNode.text = String(score)\n\n        self.addChild(scoreLabelNode)\n    }\n\n\n    override func touchesBegan(touches: Set<UITouch>, withEvent event: UIEvent?) {\n\n\n    override func touchesBegan(touches: Set<UITouch>, withEvent event: UIEvent?) {\n        // \u30b2\u30fc\u30e0\u9032\u884c\u4e2d\u306e\u3068\u304d\n        if 0.0 < baseNode.speed {\n            for touch in touches {\n                _ = touch.locationInNode(self)\n                // \u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u52a0\u3048\u3089\u308c\u3066\u3044\u308b\u529b\u3092\u30bc\u30ed\u306b\u3059\u308b\n                player.physicsBody?.velocity = CGVector.zero\n                // \u30d7\u30ec\u30a4\u30e4\u30fc\u306by\u8ef8\u65b9\u5411\u3078\u529b\u3092\u52a0\u3048\u308b\n                player.physicsBody?.applyImpulse(CGVector(dx: 0.0, dy: 23.0))\n            }\n        } else if baseNode.speed == 0.0 && player.speed == 0.0 {\n            // \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u6642\u306f\u30ea\u30b9\u30bf\u30fc\u30c8\n            // \u969c\u5bb3\u7269\u3092\u5168\u3066\u53d6\u308a\u9664\u304f\n            coralNode.removeAllChildren()\n\n            // \u30b9\u30b3\u30a2\u3092\u30ea\u30bb\u30c3\u30c8\n            score = 0\n            scoreLabelNode.text = String(score)\n\n            // \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u3092\u518d\u914d\u7f6e\n            player.position = CGPoint(x: self.frame.size.width * 0.35, y: self.frame.size.height * 0.6)\n            player.physicsBody?.velocity = CGVector.zero\n            player.physicsBody?.collisionBitMask = ColliderType.World | ColliderType.Coral\n            player.zRotation = 0.0\n\n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u59cb\n            player.speed = 1.0\n            baseNode.speed = 1.0\n        }\n    }\n\n    override func update(currentTime: CFTimeInterval) {\n        /* Called before each frame is rendered */\n    }\n\n    // MARK: - SKPhysicsContactDelegate\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u5b9f\u88c5\n    /// \u885d\u7a81\u958b\u59cb\u6642\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\n    func didBeginContact(contact: SKPhysicsContact) {\n        // \u65e2\u306b\u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u72b6\u614b\u306e\u5834\u5408\n        if baseNode.speed <= 0.0 {\n            return\n        }\n\n        let rawScoreType = ColliderType.Score\n        let rawNoneType = ColliderType.None\n\n        if (contact.bodyA.categoryBitMask & rawScoreType) == rawScoreType ||\n            (contact.bodyB.categoryBitMask & rawScoreType) == rawScoreType {\n                // \u30b9\u30b3\u30a2\u3092\u52a0\u7b97\u3057\u30e9\u30d9\u30eb\u306b\u53cd\u6620\n                score = score + 1\n                scoreLabelNode.text = String(score)\n\n                // \u30b9\u30b3\u30a2\u30e9\u30d9\u30eb\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n                let scaleUpAnim = SKAction.scaleTo(1.5, duration: 0.1)\n                let scaleDownAnim = SKAction.scaleTo(1.0, duration: 0.1)\n                scoreLabelNode.runAction(SKAction.sequence([scaleUpAnim, scaleDownAnim]))\n\n                // \u30b9\u30b3\u30a2\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308bcontactTestBitMask\u3092\u5909\u66f4\n                if (contact.bodyA.categoryBitMask & rawScoreType) == rawScoreType {\n                    contact.bodyA.categoryBitMask = ColliderType.None\n                    contact.bodyA.contactTestBitMask = ColliderType.None\n                } else {\n                    contact.bodyB.categoryBitMask = ColliderType.None\n                    contact.bodyB.contactTestBitMask = ColliderType.None\n                }\n        } else if (contact.bodyA.categoryBitMask & rawNoneType) == rawNoneType ||\n            (contact.bodyB.categoryBitMask & rawNoneType) == rawNoneType {\n                // \u306a\u306b\u3082\u3057\u306a\u3044\n        } else {\n            // baseNode\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3082\u306e\u3059\u3079\u3066\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\n            baseNode.speed = 0.0\n\n            // \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u306eBitMask\u3092\u5909\u66f4\n            player.physicsBody?.collisionBitMask = ColliderType.World\n            // \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u306b\u56de\u8ee2\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n            let rolling = SKAction.rotateByAngle(CGFloat(M_PI) * player.position.y * 0.01, duration: 1.0)\n            player.runAction(rolling, completion:{\n                // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u6642\u306b\u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\n                self.player.speed = 0.0\n            })\n        }\n    }\n\n}\n\n\u73fe\u5728spritkit\u3067\u30b2\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u3067\u3059\u3002\n\n\u753b\u9762\u3092\u30bf\u30c3\u30d7\u3001\u9023\u6253\u3059\u308b\u3068\u5730\u9762\uff08\u4e0b\uff09\u306b\u7acb\u3063\u3066\u3044\u305f\n\u30ad\u30e3\u30e9\u30af\u30bf\u30fc(\u30e1\u30fc\u30bf\u30fc\u306e\u4ee3\u308f\u308a)\u304c\u91cd\u529b\u306b\u9006\u3089\u3044\n\u4e0a\u306b\u3042\u304c\u308a\u3001\u30e1\u30fc\u30bf\u30fc\u306e\u4e0a\u90e8\uff08\u8a2d\u7f6e\u3057\u305f\u5929\u4e95\uff09\u306b\u30e1\u30e2\u30ea\u304c\u885d\u7a81\u3059\u308b\u3068\n\u5f97\u70b9\u306b\u306a\u308a\uff08\u30b2\u30fc\u30b8\u304c\uff11\u305f\u307e\u308a\uff09\u3001\u305d\u306e\u5f8c\u307e\u305f\u540c\u3058\u3053\u3068\u3092\u7e70\u308a\u8fd4\u3059\u3088\u3046\u306b\u30ea\u30bb\u30c3\u30c8\u3088\u3046\u306b\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u56f0\u3063\u3066\u3044\u307e\u3059\u3002\uff08\u5f97\u70b9\u306f\u5f15\u304d\u7d99\u304e\u3067\u4f55\u70b9\u53d6\u308c\u308b\u304b\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u30b2\u30fc\u30e0\u3067\u3059\u3002\uff09\n\n\u4ee5\u524d\u4f5c\u3063\u305f\u30a2\u30f3\u30b0\u30ea\u30fc\u30d0\u30fc\u30c9\uff1f\u306e\u3088\u3046\u306a\u30b2\u30fc\u30e0\u3092\u57fa\u306b\u3057\u3066\u4f5c\u308d\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u3067\u304d\u306a\u3044\u306e\u304c\u3001\u4e0a\u306e\u5929\u4e95\uff08\u8a2d\u7f6e\u3057\u305f\u3082\u306e\uff09\u306b\u5f53\u305f\u3063\u305f\u969b\u3001\u5f97\u70b9\u3092\u52a0\u7b97\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u3042\u305f\u308a\u5224\u5b9a\u304c\u3046\u307e\u304f\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u4f55\u304b\u30d2\u30f3\u30c8\u3092\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n```\nimport SpriteKit\n\nclass GameScene: SKScene, SKPhysicsContactDelegate {\n    // MARK: - \u5b9a\u6570\u5b9a\u7fa9\n    /// \u5b9a\u6570\n    struct Constants {\n        /// Player\u753b\u50cf\n        static let PlayerImages = [\"shrimp01\", \"shrimp02\", \"shrimp03\", \"shrimp04\"]\n    }\n    \n    \n    /// \u885d\u7a81\u306e\u5224\u5b9a\u306b\u3064\u304b\u3046BitMask\n    struct ColliderType {\n        /// \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let Player: UInt32 = (1 << 0)\n        /// \u5929\u4e95\u30fb\u5730\u9762\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let World: UInt32  = (1 << 1)\n        /// \u30b5\u30f3\u30b4\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let Coral: UInt32  = (1 << 2)\n        /// \u30b9\u30b3\u30a2\u52a0\u7b97\u7528SKNode\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let Score: UInt32  = (1 << 3)\n        /// \u30b9\u30b3\u30a2\u52a0\u7b97\u7528SKNode\u306b\u885d\u7a81\u3057\u305f\u969b\u306b\u8a2d\u5b9a\u3059\u308b\u30ab\u30c6\u30b4\u30ea\n        static let None: UInt32   = (1 << 4)\n    }\n    \n    // MARK: - \u5909\u6570\u5b9a\u7fa9\n    /// \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u4ee5\u5916\u306e\u79fb\u52d5\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u7a7a\u30ce\u30fc\u30c9\n    var baseNode: SKNode!\n    /// \u30b5\u30f3\u30b4\u95a2\u9023\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u7a7a\u30ce\u30fc\u30c9(\u30ea\u30b9\u30bf\u30fc\u30c8\u6642\u306b\u6d3b\u7528)\n    var coralNode: SKNode!\n    \n    /// \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\n    var player: SKSpriteNode!\n    \n    /// \u30b9\u30b3\u30a2\u3092\u8868\u793a\u3059\u308b\u30e9\u30d9\u30eb\n    var scoreLabelNode: SKLabelNode!\n    /// \u30b9\u30b3\u30a2\u306e\u5185\u90e8\u5909\u6570\n    var score: UInt32!\n    \n    // MARK: - \u95a2\u6570\u5b9a\u7fa9\n    \n    override func didMoveToView(view: SKView) {\n        // \u5909\u6570\u306e\u521d\u671f\u5316\n        score = 0\n        \n        // \u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        self.physicsWorld.gravity = CGVector(dx: 0.0, dy: -2.0)\n        self.physicsWorld.contactDelegate = self\n        \n        // \u5168\u30ce\u30fc\u30c9\u306e\u89aa\u3068\u306a\u308b\u30ce\u30fc\u30c9\u3092\u751f\u6210\n        baseNode = SKNode()\n        baseNode.speed = 1.0\n        self.addChild(baseNode)\n        \n        // \u969c\u5bb3\u7269\u3092\u8ffd\u52a0\u3059\u308b\u30ce\u30fc\u30c9\u3092\u751f\u6210\n        coralNode = SKNode()\n        baseNode.addChild(coralNode)\n        \n        \n        \n        // \u5929\u4e95\u3068\u5730\u9762\u3092\u69cb\u7bc9\n        self.setupCeilingAndLand()\n        // \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u3092\u69cb\u7bc9\n        self.setupPlayer()\n        // \u969c\u5bb3\u7269\u306e\u30b5\u30f3\u30b4\u3092\u69cb\u7bc9\n        self.setupCoral()\n        // \u30b9\u30b3\u30a2\u30e9\u30d9\u30eb\u306e\u69cb\u7bc9\n        self.setupScoreLabel()\n    }\n    \n    \n    \n    /// \u5929\u4e95\u3068\u5730\u9762\u3092\u69cb\u7bc9\n    func setupCeilingAndLand() {\n        // \u5730\u9762\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n        let land = SKTexture(imageNamed: \"land\")\n        land.filteringMode = .Nearest\n        \n        // \u5fc5\u8981\u306a\u753b\u50cf\u679a\u6570\u3092\u7b97\u51fa\n        var needNumber = 2.0 + (self.frame.size.width / land.size().width)\n        \n        // \u5de6\u306b\u753b\u50cf\u4e00\u679a\u5206\u79fb\u52d5\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let moveLandAnim = SKAction.moveByX(-land.size().width, y: 0.0, duration:NSTimeInterval(land.size().width / 100.0))\n        // \u5143\u306e\u4f4d\u7f6e\u306b\u623b\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let resetLandAnim = SKAction.moveByX(land.size().width, y: 0.0, duration: 0.0)\n        // \u79fb\u52d5\u3057\u3066\u5143\u306b\u623b\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u7e70\u308a\u8fd4\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let repeatForeverLandAnim = SKAction.repeatActionForever(SKAction.sequence([moveLandAnim, resetLandAnim]))\n        \n        \n        \n        // \u753b\u50cf\u306e\u914d\u7f6e\u3068\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        for var i:CGFloat = 0.0; i < needNumber; ++i {\n            // SKTexture\u304b\u3089SKSpriteNode\u3092\u4f5c\u6210\n            let sprite = SKSpriteNode(texture: land)\n            // \u753b\u50cf\u306e\u521d\u671f\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n            sprite.position = CGPoint(x: i * sprite.size.width, y: sprite.size.height / 2.0)\n            \n            // \u753b\u50cf\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            sprite.physicsBody = SKPhysicsBody(texture: land, size: land.size())\n            sprite.physicsBody?.dynamic = false\n            sprite.physicsBody?.categoryBitMask = ColliderType.World\n            \n            // \u30b9\u30b3\u30a2\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\n            let scoreNode = SKNode()\n            scoreNode.position = CGPoint(x: self.size.width , y: self.size.height / 2.0)\n            \n            // \u30b9\u30b3\u30a2\u30ce\u30fc\u30c9\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            scoreNode.physicsBody = SKPhysicsBody(rectangleOfSize: CGSize(width: 10.0, height: self.frame.size.height))\n            scoreNode.physicsBody?.dynamic = false\n            scoreNode.physicsBody?.categoryBitMask = ColliderType.Score\n            scoreNode.physicsBody?.contactTestBitMask = ColliderType.Player\n            ceiling.addChild(scoreNode)\n            ceiling.runAction(coralAnim)\n            \n            self.coralNode.addChild(coral)            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            sprite.runAction(repeatForeverLandAnim)\n            // \u89aa\u30ce\u30fc\u30c9\u306b\u8ffd\u52a0\n            baseNode.addChild(sprite)\n        }\n        \n        // \u5929\u4e95\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n        let ceiling = SKTexture(imageNamed: \"ceiling\")\n        ceiling.filteringMode = .Nearest\n        \n        // \u5fc5\u8981\u306a\u753b\u50cf\u679a\u6570\u3092\u7b97\u51fa\n        needNumber = 2.0 + self.frame.size.width / ceiling.size().width\n        \n        // \u753b\u50cf\u306e\u914d\u7f6e\u3068\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        for var i:CGFloat = 0.0; i < needNumber; i++ {\n            // SKTexture\u304b\u3089SKSpriteNode\u3092\u4f5c\u6210\n            let sprite = SKSpriteNode(texture: ceiling)\n            // \u753b\u50cf\u306e\u521d\u671f\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n            sprite.position = CGPoint(x: i * sprite.size.width, y: self.frame.size.height - sprite.size.height / 2.0)\n            \n            // \u753b\u50cf\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            sprite.physicsBody = SKPhysicsBody(texture: ceiling, size: ceiling.size())\n            sprite.physicsBody?.dynamic = false\n            sprite.physicsBody?.categoryBitMask = ColliderType.World\n            \n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            sprite.runAction(repeatForeverLandAnim)\n            // \u89aa\u30ce\u30fc\u30c9\u306b\u8ffd\u52a0\n            baseNode.addChild(sprite)\n            \n            \n            \n            \n        }\n        \n        \n    }\n    \n    /// \u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u69cb\u7bc9\n    func setupPlayer() {\n        // Player\u306e\u30d1\u30e9\u30d1\u30e9\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u306b\u5fc5\u8981\u306aSKTexture\u30af\u30e9\u30b9\u306e\u914d\u5217\u3092\u5b9a\u7fa9\n        var playerTexture = [SKTexture]()\n        \n        // \u30d1\u30e9\u30d1\u30e9\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u5fc5\u8981\u306a\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n        for imageName in Constants.PlayerImages {\n            let texture = SKTexture(imageNamed: imageName)\n            texture.filteringMode = .Linear\n            playerTexture.append(texture)\n        }\n        \n        // \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u30d1\u30e9\u30d1\u30e9\u6f2b\u753b\u306e\u3088\u3046\u306b\u5207\u308a\u66ff\u3048\u308b\n        let playerAnimation = SKAction.animateWithTextures(playerTexture, timePerFrame: 0.2)\n        // \u30d1\u30e9\u30d1\u30e9\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u30eb\u30fc\u30d7\u3055\u305b\u308b\n        let loopAnimation = SKAction.repeatActionForever(playerAnimation)\n        \n        // \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3092\u751f\u6210\n        player = SKSpriteNode(texture: playerTexture[0])\n        // \u521d\u671f\u8868\u793a\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n        player.position = CGPoint(x: self.frame.size.width * 0.35, y: self.frame.size.height * 0.6)\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        player.runAction(loopAnimation)\n        \n        // \u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n        player.physicsBody = SKPhysicsBody(texture: playerTexture[0], size: playerTexture[0].size())\n        player.physicsBody?.dynamic = true\n        player.physicsBody?.allowsRotation = false\n        \n        // \u81ea\u5206\u81ea\u8eab\u306bPlayer\u30ab\u30c6\u30b4\u30ea\u3092\u8a2d\u5b9a\n        player.physicsBody?.categoryBitMask = ColliderType.Player\n        // \u885d\u7a81\u5224\u5b9a\u76f8\u624b\u306bWorld\u3068Coral\u3092\u8a2d\u5b9a\n        player.physicsBody?.collisionBitMask = ColliderType.World | ColliderType.Coral\n        player.physicsBody?.contactTestBitMask = ColliderType.World | ColliderType.Coral\n        \n        \n        self.addChild(player)\n    }\n    \n    ///  \u969c\u5bb3\u7269\u306e\u30b5\u30f3\u30b4\u3092\u69cb\u7bc9\n    func setupCoral() {\n        // \u30b5\u30f3\u30b4\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n        let coralUnder = SKTexture(imageNamed: \"coral_under\")\n        coralUnder.filteringMode = .Linear\n        let coralAbove = SKTexture(imageNamed: \"coral_above\")\n        coralAbove.filteringMode = .Linear\n        \n        // \u79fb\u52d5\u3059\u308b\u8ddd\u96e2\u3092\u7b97\u51fa\n        let distanceToMove = CGFloat(self.frame.size.width + 2.0 * coralUnder.size().width)\n        \n        // \u753b\u9762\u5916\u307e\u3067\u79fb\u52d5\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let moveAnim = SKAction.moveByX(-distanceToMove, y: 0.0, duration:NSTimeInterval(distanceToMove / 100.0))\n        // \u81ea\u8eab\u3092\u53d6\u308a\u9664\u304f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let removeAnim = SKAction.removeFromParent()\n        // 2\u3064\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u9806\u306b\u5b9f\u884c\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let coralAnim = SKAction.sequence([moveAnim, removeAnim])\n        \n        // \u30b5\u30f3\u30b4\u3092\u751f\u6210\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let newCoralAnim = SKAction.runBlock({\n            // \u30b5\u30f3\u30b4\u306b\u95a2\u3059\u308b\u30ce\u30fc\u30c9\u3092\u4e57\u305b\u308b\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\n            let coral = SKNode()\n            coral.position = CGPoint(x: self.frame.size.width + coralUnder.size().width * 2, y: 0.0)\n            coral.zPosition = -40.0\n            \n            // \u5730\u9762\u304b\u3089\u4f38\u3073\u308b\u30b5\u30f3\u30b4\u306ey\u5ea7\u6a19\u3092\u7b97\u51fa\n            let height = UInt32(self.frame.size.height / 12)\n            let y = CGFloat(arc4random_uniform(height * 2) + height)\n            \n            // \u5730\u9762\u304b\u3089\u4f38\u3073\u308b\u30b5\u30f3\u30b4\u3092\u4f5c\u6210\n            let under = SKSpriteNode(texture: coralUnder)\n            under.position = CGPoint(x: 0.0, y: y)\n            \n            // \u30b5\u30f3\u30b4\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            under.physicsBody = SKPhysicsBody(texture: coralUnder, size: under.size)\n            under.physicsBody?.dynamic = false\n            under.physicsBody?.categoryBitMask = ColliderType.Coral\n            under.physicsBody?.contactTestBitMask = ColliderType.Player\n            coral.addChild(under)\n            \n            // \u5929\u4e95\u304b\u3089\u4f38\u3073\u308b\u30b5\u30f3\u30b4\u3092\u4f5c\u6210\n            let above = SKSpriteNode(texture: coralAbove)\n            above.position = CGPoint(x: 0.0, y: y + (under.size.height / 2.0) + 160.0 + (above.size.height / 2.0))\n            \n            // \u30b5\u30f3\u30b4\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            above.physicsBody = SKPhysicsBody(texture: coralAbove, size: above.size)\n            above.physicsBody?.dynamic = false\n            above.physicsBody?.categoryBitMask = ColliderType.Coral\n            above.physicsBody?.contactTestBitMask = ColliderType.Player\n            coral.addChild(above)\n            \n            // \u30b9\u30b3\u30a2\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\n            let scoreNode = SKNode()\n            scoreNode.position = CGPoint(x: (above.size.width / 2.0) + 5.0, y: self.frame.height / 2.0)\n            \n            // \u30b9\u30b3\u30a2\u30ce\u30fc\u30c9\u306b\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n            scoreNode.physicsBody = SKPhysicsBody(rectangleOfSize: CGSize(width: 10.0, height: self.frame.size.height))\n            scoreNode.physicsBody?.dynamic = false\n            scoreNode.physicsBody?.categoryBitMask = ColliderType.Score\n            scoreNode.physicsBody?.contactTestBitMask = ColliderType.Player\n            coral.addChild(scoreNode)\n            coral.runAction(coralAnim)\n            \n            self.coralNode.addChild(coral)\n        })\n        // \u4e00\u5b9a\u9593\u9694\u5f85\u3064\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let delayAnim = SKAction.waitForDuration(2.5)\n        // \u4e0a\u8a182\u3064\u3092\u6c38\u9060\u3068\u7e70\u308a\u8fd4\u3059\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n        let repeatForeverAnim = SKAction.repeatActionForever(SKAction.sequence([newCoralAnim, delayAnim]))\n        // \u3053\u306e\u753b\u9762\u3067\u5b9f\u884c\n        self.runAction(repeatForeverAnim)\n    }\n    \n    /// \u30b9\u30b3\u30a2\u30e9\u30d9\u30eb\u3092\u69cb\u7bc9\n    func setupScoreLabel() {\n        // \u30d5\u30a9\u30f3\u30c8\u540d\"Arial Bold\"\u3067\u30e9\u30d9\u30eb\u3092\u4f5c\u6210\n        scoreLabelNode = SKLabelNode(fontNamed: \"Arial Bold\")\n        // \u30d5\u30a9\u30f3\u30c8\u8272\u3092\u9ec4\u8272\u306b\u8a2d\u5b9a\n        scoreLabelNode.fontColor = UIColor.blackColor()\n        // \u8868\u793a\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n        scoreLabelNode.position = CGPoint(x: self.frame.width / 2.0, y: self.frame.size.height * 0.9)\n        // \u6700\u524d\u9762\u306b\u8868\u793a\n        scoreLabelNode.zPosition = 100.0\n        // \u30b9\u30b3\u30a2\u3092\u8868\u793a\n        scoreLabelNode.text = String(score)\n        \n        self.addChild(scoreLabelNode)\n    }\n    \n    \n    override func touchesBegan(touches: Set<UITouch>, withEvent event: UIEvent?) {\n        \n    \n    override func touchesBegan(touches: Set<UITouch>, withEvent event: UIEvent?) {\n        // \u30b2\u30fc\u30e0\u9032\u884c\u4e2d\u306e\u3068\u304d\n        if 0.0 < baseNode.speed {\n            for touch in touches {\n                _ = touch.locationInNode(self)\n                // \u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u52a0\u3048\u3089\u308c\u3066\u3044\u308b\u529b\u3092\u30bc\u30ed\u306b\u3059\u308b\n                player.physicsBody?.velocity = CGVector.zero\n                // \u30d7\u30ec\u30a4\u30e4\u30fc\u306by\u8ef8\u65b9\u5411\u3078\u529b\u3092\u52a0\u3048\u308b\n                player.physicsBody?.applyImpulse(CGVector(dx: 0.0, dy: 23.0))\n            }\n        } else if baseNode.speed == 0.0 && player.speed == 0.0 {\n            // \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u6642\u306f\u30ea\u30b9\u30bf\u30fc\u30c8\n            // \u969c\u5bb3\u7269\u3092\u5168\u3066\u53d6\u308a\u9664\u304f\n            coralNode.removeAllChildren()\n            \n            // \u30b9\u30b3\u30a2\u3092\u30ea\u30bb\u30c3\u30c8\n            score = 0\n            scoreLabelNode.text = String(score)\n            \n            // \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u3092\u518d\u914d\u7f6e\n            player.position = CGPoint(x: self.frame.size.width * 0.35, y: self.frame.size.height * 0.6)\n            player.physicsBody?.velocity = CGVector.zero\n            player.physicsBody?.collisionBitMask = ColliderType.World | ColliderType.Coral\n            player.zRotation = 0.0\n            \n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u59cb\n            player.speed = 1.0\n            baseNode.speed = 1.0\n        }\n    }\n    \n    override func update(currentTime: CFTimeInterval) {\n        /* Called before each frame is rendered */\n    }\n    \n    // MARK: - SKPhysicsContactDelegate\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u5b9f\u88c5\n    /// \u885d\u7a81\u958b\u59cb\u6642\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\n    func didBeginContact(contact: SKPhysicsContact) {\n        // \u65e2\u306b\u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u72b6\u614b\u306e\u5834\u5408\n        if baseNode.speed <= 0.0 {\n            return\n        }\n        \n        let rawScoreType = ColliderType.Score\n        let rawNoneType = ColliderType.None\n        \n        if (contact.bodyA.categoryBitMask & rawScoreType) == rawScoreType ||\n            (contact.bodyB.categoryBitMask & rawScoreType) == rawScoreType {\n                // \u30b9\u30b3\u30a2\u3092\u52a0\u7b97\u3057\u30e9\u30d9\u30eb\u306b\u53cd\u6620\n                score = score + 1\n                scoreLabelNode.text = String(score)\n                \n                // \u30b9\u30b3\u30a2\u30e9\u30d9\u30eb\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n                let scaleUpAnim = SKAction.scaleTo(1.5, duration: 0.1)\n                let scaleDownAnim = SKAction.scaleTo(1.0, duration: 0.1)\n                scoreLabelNode.runAction(SKAction.sequence([scaleUpAnim, scaleDownAnim]))\n                \n                // \u30b9\u30b3\u30a2\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308bcontactTestBitMask\u3092\u5909\u66f4\n                if (contact.bodyA.categoryBitMask & rawScoreType) == rawScoreType {\n                    contact.bodyA.categoryBitMask = ColliderType.None\n                    contact.bodyA.contactTestBitMask = ColliderType.None\n                } else {\n                    contact.bodyB.categoryBitMask = ColliderType.None\n                    contact.bodyB.contactTestBitMask = ColliderType.None\n                }\n        } else if (contact.bodyA.categoryBitMask & rawNoneType) == rawNoneType ||\n            (contact.bodyB.categoryBitMask & rawNoneType) == rawNoneType {\n                // \u306a\u306b\u3082\u3057\u306a\u3044\n        } else {\n            // baseNode\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3082\u306e\u3059\u3079\u3066\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\n            baseNode.speed = 0.0\n            \n            // \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u306eBitMask\u3092\u5909\u66f4\n            player.physicsBody?.collisionBitMask = ColliderType.World\n            // \u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u306b\u56de\u8ee2\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n            let rolling = SKAction.rotateByAngle(CGFloat(M_PI) * player.position.y * 0.01, duration: 1.0)\n            player.runAction(rolling, completion:{\n                // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u6642\u306b\u30d7\u30ec\u30a4\u30ad\u30e3\u30e9\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\n                self.player.speed = 0.0\n            })\n        }\n    }\n    \n}\n", "tags": ["SpriteKit", "iOS", "Swift", "Swift2.0", "Xcode"]}