{"context": " More than 1 year has passed since last update.ClojureScript\u3084\u305d\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306f\u7d76\u8cdb\u958b\u767a\u4e2d\u306e\u305f\u3081\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u66f4\u65b0\u304c\u3068\u3066\u3082\u76db\u3093\u306b\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u30022015\u5e74\u306b\u51fa\u7248\u3055\u308c\u3066\u3044\u308b\u82f1\u8a9e\u306e\u66f8\u7c4d\u3067\u3082\u3059\u3067\u306b\u60c5\u5831\u304c\u53e4\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6700\u65b0\u306e\u60c5\u5831\u3092\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u3066\u3082\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u9055\u3046\u3068\u5185\u5bb9\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u81ea\u5206\u3067\u624b\u3092\u52d5\u304b\u3057\u3066\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Figwheel\u306eQuick Start\u3092\u4f8b\u306b\u3057\u3066\u6700\u65b0\u306eClojureScript\u306e\u958b\u767a\u65b9\u6cd5\u3092\u52c9\u5f37\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nFigwheel\nFigwheel\u306fClojureScrit\u306e\u30b3\u30fc\u30c9\u3092\u30ed\u30fc\u30ab\u30eb\u3067\u7de8\u96c6\u3059\u308b\u3068\u30d6\u30e9\u30a6\u30b6\u306b\u81ea\u52d5\u7684\u306b\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u6700\u65b0\u306e\u72b6\u614b\u306b\u3057\u3066\u304f\u308c\u308bLeiningen\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u3059\u3002\u6700\u8fd1\u306fREPL\u6a5f\u80fd\u3082\u6301\u3064\u3088\u3046\u306b\u306a\u3063\u3066\u3055\u3089\u306b\u4fbf\u5229\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nfigwheel template\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nlein new\u30b3\u30de\u30f3\u30c9\u3067figwheel template\u3092\u4f7f\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ lein new figwheel hello-cljs\n\ntemplate\u3067\u4f5c\u6210\u3055\u308c\u308bproject.clj\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Quick Start\u3082\u73fe\u5728\u6700\u65b0\u7248\u306b\u4fee\u6b63\u4e2d\u306e\u3088\u3046\u3067\u3059\u304c\u5185\u5bb9\u304c\u53e4\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n~/clojure_apps/hello-cljs/project.clj\n(defproject hello-cljs \"0.1.0-SNAPSHOT\"\n  :description \"FIXME: write this!\"\n  :url \"http://example.com/FIXME\"\n  :license {:name \"Eclipse Public License\"\n            :url \"http://www.eclipse.org/legal/epl-v10.html\"}\n\n  :dependencies [[org.clojure/clojure \"1.6.0\"]\n                 [org.clojure/clojurescript \"0.0-3211\"]\n                 [org.clojure/core.async \"0.1.346.0-17112a-alpha\"]]\n\n  :plugins [[lein-cljsbuild \"1.0.5\"]\n            [lein-figwheel \"0.3.1\"]]\n\n  :source-paths [\"src\"]\n\n  :clean-targets ^{:protect false} [\"resources/public/js/compiled\" \"target\"]\n\n  :cljsbuild {\n    :builds [{:id \"dev\"\n              :source-paths [\"src\"]\n              :figwheel { :on-jsload \"hello-cljs.core/on-js-reload\" }\n\n              :compiler {:main hello-cljs.core\n                         :asset-path \"js/compiled/out\"\n                         :output-to \"resources/public/js/compiled/hello_cljs.js\"\n                         :output-dir \"resources/public/js/compiled/out\"\n                         :source-map-timestamp true }}\n             {:id \"min\"\n              :source-paths [\"src\"]\n              :compiler {:output-to \"resources/public/js/compiled/hello_cljs.js\"\n                         :main hello-cljs.core\n                         :optimizations :advanced\n                         :pretty-print false}}]}\n  :figwheel {\n             ;; :http-server-root \"public\" ;; default and assumes \"resources\"\n             ;; :server-port 3449 ;; default\n             :css-dirs [\"resources/public/css\"] ;; watch and update CSS\n             })\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0a\u3052\u307e\u3059\u3002\u7279\u306bFailed When Compiling by Using Cljs 0.0-3255 #393\u306b\u3042\u308bissue\u306e\u3088\u3046\u306b\u3001ClojureScript\uff4d\u306e0.0-3255\u4ee5\u964d\u3067\u306fClojure\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.7.0-beta2\u4ee5\u964d\u304c\u5fc5\u8981\u3067\u3059\u3002\n:cljsbuild\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3067\u306f\u30af\u30e9\u30a6\u30c9\u4e0a\u306e\u958b\u767a\u74b0\u5883\u306b\u30ed\u30fc\u30ab\u30eb\u306e\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u63a5\u7d9a\u3067\u304d\u308b\u3088\u3046\u306bWebSocket\u306e\u30db\u30b9\u30c8\u3092\u30d1\u30d6\u30ea\u30c3\u30afIP\u30a2\u30c9\u30ec\u30b9\u306b\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n~/clojure_apps/hello-cljs/project.clj\n...\n  :dependencies [[org.clojure/clojure \"1.7.0-beta3\"]\n                 [org.clojure/clojurescript \"0.0-3269\"]\n                 [org.clojure/core.async \"0.1.346.0-17112a-alpha\"]]\n\n  :plugins [[lein-cljsbuild \"1.0.5\"]\n            [lein-figwheel \"0.3.3\"]]\n...\n  :cljsbuild {\n    :builds [{:id \"dev\"\n              :source-paths [\"src\"]\n\n              :figwheel { :on-jsload \"hello-cljs.core/on-js-reload\"\n                          :websocket-host \"210.xxx.xxx.xxx\"}\n\n\n\nFigwheel\u306eWeb\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\nlein figwheel\u30b3\u30de\u30f3\u30c9\u3067\u306eWeb\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ lein figwheel\nFigwheel: Starting server at http://localhost:3449\nFocusing on build ids: dev\nCompiling \"resources/public/js/compiled/hello_cljs.js\" from [\"src\"]...\nSuccessfully compiled \"resources/public/js/compiled/hello_cljs.js\" in 14.0 seconds.\nStarted Figwheel autobuilder\n\nLaunching ClojureScript REPL for build: dev\nFigwheel Controls:\n          (stop-autobuild)                ;; stops Figwheel autobuilder\n          (start-autobuild [id ...])      ;; starts autobuilder focused on optional ids\n          (switch-to-build id ...)        ;; switches autobuilder to different build\n          (reset-autobuild)               ;; stops, cleans, and starts autobuilder\n          (build-once [id ...])           ;; builds source one time\n          (clean-builds [id ..])          ;; deletes compiled cljs target files\n          (fig-status)                    ;; displays current state of system\n          (add-dep [org.om/om \"0.8.1\"]) ;; add a dependency. very experimental\n  Switch REPL build focus:\n          :cljs/quit                      ;; allows you to switch REPL to another build\n    Docs: (doc function-name-here)\n    Exit: Control+C or :cljs/quit\n Results: Stored in vars *1, *2, *3, *e holds last exception object\nPrompt will show when figwheel connects to your application\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u30d6\u30e9\u30a6\u30b6\u3067Figwheel\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u78ba\u8a8d\u3057\u307e\u3059\u3002\nhttp://210.xxx.xxx.xxx:3449/\n\nREPL\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089WebSocket\u306e\u63a5\u7d9a\u304c\u3067\u304d\u308b\u3068REPL\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nPrompt will show when figwheel connects to your application\n\nTo quit, type: :cljs/quit\ncljs.user=> cljs.user=>\n\nJavaScript\u306eDate\u95a2\u6570\u3092new\u3057\u3066\u307f\u307e\u3059\u3002\ncljs.user=> (js/Date.)\n#inst \"2015-05-24T13:20:18.481-00:00\"\n\nLinux\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308bREPL\u304b\u3089JavaScript\u306e\u30a2\u30e9\u30fc\u30c8\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u8868\u793a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\ncljs.user=> (js/alert \"browser\u306b\u30a2\u30e9\u30fc\u30c8\u304c\u3067\u307e\u3059\u3002\")\n\n\u305f\u3060\u3057REPL\u306freadline\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u4e0a\u30a2\u30ed\u30fc\u30ad\u30fc\u3084C-p\u3067\u30d2\u30b9\u30c8\u30ea\u30fc\u30d0\u30c3\u30af\u304c\u52b9\u304d\u307e\u305b\u3093\u3002rlwrap\u3067lein\u30b3\u30de\u30f3\u30c9\u3092\u30e9\u30c3\u30d7\u3059\u308b\u3068\u826f\u3044\u3089\u3057\u3044\u3067\u3059\u304c\u3001Docker Compose\u3067\u5b9f\u884c\u3059\u308b\u3068\u3046\u307e\u304f\u52d5\u4f5c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n$ docker-compose run --rm --service-ports lein figwheel\nrlwrap: error: My terminal reports width=0 (is it emacs?)  I can't handle this, sorry!\nRemoving clojureapps_lein_run_1...\n\n\nQuick Start\u3068\u9055\u3046\u3068\u3053\u308d\nfigwheel template\u3067\u4f5c\u6210\u3055\u308c\u308bcore.cljs\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3002\n\n~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(ns ^:figwheel-always hello-cljs.core\n    (:require))\n\n(enable-console-print!)\n\n(println \"Edits to this text should show up in your developer console.\")\n\n;; define your app data so that it doesn't get over-written on reload\n\n(defonce app-state (atom {:text \"Hello world!\"}))\n\n\n(defn on-js-reload []\n  ;; optionally touch your app-state to force rerendering depending on\n  ;; your application\n  ;; (swap! app-state update-in [:__figwheel_counter] inc)\n)\n\n\n\n(enable-console-print!)\nQuick Start\u3067\u306fJavaScript\u306econsole\u3092\u4f7f\u3046\u4f8b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n(.log js/console \"Hey Seymore! wts goin' on?\")\n\nfigwheel template\u3067\u306f(enable-console-print!)\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002ClojureScript\u306ecore.cljs\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3067\u3059\u3002\n(defn enable-console-print!\n  \"Set *print-fn* to console.log\"\n  []\n  (set! *print-newline* false)\n  (set! *print-fn*\n    (fn [& args]\n      (.apply (.-log js/console) js/console (into-array args)))))\n\n\u3061\u306a\u307f\u306b\u30b9\u30ec\u30c3\u30c9\u6bce\u306b\u52d5\u7684\u675f\u7e1b\u304c\u4f7f\u3048\u308b\u306a\u5909\u6570\u3092\u30a2\u30b9\u30bf\u30ea\u30b9\u30af\u3067\u56f2\u3046\u3053\u3068\u3092earmuff\u3068\u547c\u3076\u305d\u3046\u3067\u3059\u3002\u304b\u308f\u3044\u3044\u3002\u3002\nprintln\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30d6\u30e9\u30a6\u30b6\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u3092\u51fa\u529b\u3057\u3066\u307f\u307e\u3059\u3002\n\n~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(ns ^:figwheel-always hello-cljs.core\n    (:require))\n\n(enable-console-print!)\n(println \"enable-console-print!\u3092\u5b9f\u884c\u3059\u308b\u3068println\u304c\u4f7f\u3048\u307e\u3059\")\n)\n\n\n\n\non-js-reload\u95a2\u6570\non-js-reload\u95a2\u6570\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068\u30d5\u30c3\u30af\u304c\u547c\u3070\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n(defn on-js-reload []\n  ;; optionally touch your app-state to force rerendering depending on\n  ;; your application\n  ;; (swap! app-state update-in [:__figwheel_counter] inc)\n)\n\n\u30d6\u30e9\u30a6\u30b6\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u6bce\u56de\u30ed\u30b0\u304c\u3067\u308b\u306e\u3067\u6b8b\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\nFigwheel: :on-jsload hook 'hello-cljs.core/on-js-reload' is missing\n\n\nindex.html\nfigwheel template\u3067\u306fid=\"app\"\u3068CSS\u306e\u8aad\u307f\u8fbc\u307f\u304c\u3059\u3067\u306b\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n~/clojure_apps/hello-cljs/resources/public/index.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\">\n  </head>\n  <body>\n    <div id=\"app\">\n      <h2>Figwheel template</h2>\n      <p>Checkout your developer console.</p>\n    </div>\n    <script src=\"js/compiled/hello_cljs.js\" type=\"text/javascript\"></script>\n  </body>\n</html>\n\n\n\nQuick Start\u3057\u3066\u307f\u308b\nQuick Start\u306e\u624b\u9806\u306b\u3057\u305f\u304c\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4fee\u6b63\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nSablono\nproject.clj\u306bSablono\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002Sablono\u306fHiccup\u98a8\u306b\u8a18\u8ff0\u3057\u3066React\u7528\u306eHTML\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u304d\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002Om\n\n~/clojure_apps/hello-cljs/project.clj\n  :dependencies [[org.clojure/clojure \"1.7.0-beta3\"]\n                 [org.clojure/clojurescript \"0.0-3269\"]\n                 [org.clojure/core.async \"0.1.346.0-17112a-alpha\"]\n                 [sablono \"0.3.4\"]]\n\n\nlein clean\u3092\u3057\u3066\u304b\u3089\u4f9d\u5b58\u95a2\u4fc2\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n$ lein clean\n$ lein figwheel\nRetrieving sablono/sablono/0.3.4/sablono-0.3.4.pom from clojars\nRetrieving sablono/sablono/0.3.4/sablono-0.3.4.jar from clojars\n\n\ndefonce\nQuick Start\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6700\u521d\u306fdef\u3067\u5b9a\u7fa9\u3057\u3066\u30d6\u30e9\u30a6\u30b6\u3067\u30ea\u30ed\u30fc\u30c9\u3059\u308b\u3068state\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u4f8b\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002defonce\u306b\u5909\u66f4\u3057\u3066\u72b6state\u3092\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n(def app-state (atom { :likes 0 }))\n\nfigwheel template\u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067defonce\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(defonce app-state (atom {:text \"Hello world!\"}))\n\n\nQuick Start\u306e\u3088\u3046\u306batom\u306e\u5909\u66f4\u3057\u3066:links\u30ad\u30fc\u3092\u6301\u3064\u30de\u30c3\u30d7\u306b\u3057\u307e\u3059\u3002\n\n~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(defonce app-state (atom {:likes 0}))\n\n\ndefonce\u306fcore.clj\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30de\u30af\u30ed\u3067\u3059\u3002\u3053\u306e\u8fba\u308a\u304cClojure\u3089\u3057\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n(defmacro defonce [x init]\n  `(when-not (exists? ~x)\n     (def ~x ~init)))\n\ncore.cljs\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(ns ^:figwheel-always hello-cljs.core\n    (:require [sablono.core :as sab]\n              [hello-cljs.components :refer [like-seymore]]))\n\n(enable-console-print!)\n(println \"enable-console-print!\u3092\u5b9f\u884c\u3059\u308b\u3068println\u304c\u4f7f\u3048\u307e\u3059\")\n\n(defonce app-state (atom {:likes 0}))\n\n(defn like-seymore [data]\n  (sab/html [:div\n             [:h1 \"\u3044\u3044\u306d!\u306e\u6570: \" (:links @data)]\n             [:div [:a {:href \"#\"\n                        :onClick #(swap! data update-in [:links] inc)}\n                    \"\u3044\u3044\u306d!\"]]]))\n\n(defn render! []\n  (.render js/React\n           (like-seymore app-state)\n           (.getElementById js/document \"app\")))\n(add-watch app-state :on-change (fn [_ _ _ _ ] (render!)))\n\n(render!)\n\n(defn on-js-reload [])\n\n\n\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u304d\u3001\u3044\u3044\u306d!\u306e\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002cljs\u3092\u7de8\u96c6\u3057\u3066\u30b3\u30fc\u30c9\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u3082state\u306f\u4fdd\u6301\u3055\u308c\u308b\u306e\u30670\u306b\u623b\u308a\u307e\u305b\u3093\u3002\n\n\n\u81ea\u52d5\u30ea\u30ed\u30fc\u30c9\u306e\u8a2d\u5b9a\n\n^:figwheel-always\n\u81ea\u52d5\u30ea\u30ed\u30fc\u30c9\u306e\u4f7f\u3044\u65b9\u3082Quick Start\u3068template\u3067\u306f\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306fcore.cljs\u306ens\u306e\u5148\u982d\u306b^:figwheel-always\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(ns ^:figwheel-always hello-seymore.core\n  (:require [sablono.core :as sab]\n            [hello-seymore.components :refer [like-seymore]]))\n\n\n^:figwheel-always\u3092ns\u306e\u5148\u982d\u306b\u8a18\u8ff0\u3059\u308b\u3068cljs\u306b\u5909\u66f4\u304c\u3042\u308b\u3068namespace\u306e\u30ea\u30ed\u30fc\u30c9\u5bfe\u8c61\u306b\u306a\u308a\u307e\u3059\u3002\n\ncljs\u306e\u5206\u5272\nlike-saymore\u95a2\u6570\u3092\u5207\u308a\u51fa\u3057\u3066components.cljs\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002ns\u95a2\u6570\u306b^:figwheel-always\u3092\u8ffd\u52a0\u3057\u3066\u30ea\u30ed\u30fc\u30c9\u306e\u5bfe\u8c61\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n~/clojure_apps/hello-cljs/src/hello_cljs/components.cljs\n(ns ^:figwheel-always hello-cljs.components\n    (:require [sablono.core :as sab]))\n\n(defn like-seymore [data]\n  (sab/html [:div\n             [:h1 \"\u3044\u3044\u306d!\u306e\u6570: \" (:links @data)]\n             [:div [:a {:href \"#\"\n                        :onClick #(swap! data update-in [:links] inc)}\n                    \"\u3044\u3044\u306d!\"]]]))\n\n\n^:figwheel-always\u3092\u4f7f\u3046\u3068components.cljs\u3092\u7de8\u96c6\u3057\u305f\u3060\u3051\u3067\u3082core.js\u3082\u30ea\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002namespace\u5168\u4f53\u304c\u30ea\u30ed\u30fc\u30c9\u3055\u308c\u308b\u306e\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5927\u304d\u304f\u306a\u3063\u305f\u6642\u306b\u306f\u9045\u304f\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n(\"hello_cljs/components.js\" \"hello_cljs/core.js\")\n\n\nCSS\u306e\u30ea\u30ed\u30fc\u30c9\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e\u30a2\u30bb\u30c3\u30c8\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e\u30a2\u30bb\u30c3\u30c8\u3092resources/public\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u30b5\u30fc\u30d6\u3057\u307e\u3059\u3002\u3042\u308f\u305b\u3066CSS\u3092\u4fee\u6b63\u3057\u3066\u3082\u81ea\u52d5\u30ea\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3053\u3061\u3089\u3082\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067project.clj\u306b\u8a2d\u5b9a\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nasset-path\u3001outputo-to\u3001output-dir\u306e\u6307\u5b9a\nclean-targets\u306e\u6307\u5b9a\n\n\n~/clojure_apps/hello-cljs/project.clj\n...\n  :clean-targets ^{:protect false} [\"resources/public/js/compiled\" \"target\"]\n\n  :cljsbuild {\n    :builds [{:id \"dev\"\n              :source-paths [\"src\"]\n\n              :figwheel { :on-jsload \"test.core/on-js-reload\" }\n\n              :compiler {:main test.core\n                         :asset-path \"js/compiled/out\"\n                         :output-to \"resources/public/js/compiled/test.js\"\n                         :output-dir \"resources/public/js/compiled/out\"\n                         :source-map-timestamp true }}\n  :figwheel {\n             :css-dirs [\"resources/public/css\"] ;; watch and update CSS\n  }\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306bCSS\u3092\u8a18\u8ff0\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b\u5909\u66f4\u304c\u30d6\u30e9\u30a6\u30b6\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\n\nclojure_apps/hello-cljs/resources/public/css/style.css\nbody {\n    background-color: yellow;\n}\n\n\nClojureScript\u3084\u305d\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306f\u7d76\u8cdb\u958b\u767a\u4e2d\u306e\u305f\u3081\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u66f4\u65b0\u304c\u3068\u3066\u3082\u76db\u3093\u306b\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u30022015\u5e74\u306b\u51fa\u7248\u3055\u308c\u3066\u3044\u308b\u82f1\u8a9e\u306e\u66f8\u7c4d\u3067\u3082\u3059\u3067\u306b\u60c5\u5831\u304c\u53e4\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6700\u65b0\u306e\u60c5\u5831\u3092\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u3066\u3082\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u9055\u3046\u3068\u5185\u5bb9\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u81ea\u5206\u3067\u624b\u3092\u52d5\u304b\u3057\u3066\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002[Figwheel](https://github.com/bhauman/lein-figwheel)\u306e[Quick Start](https://github.com/bhauman/lein-figwheel/wiki/Quick-Start)\u3092\u4f8b\u306b\u3057\u3066\u6700\u65b0\u306eClojureScript\u306e\u958b\u767a\u65b9\u6cd5\u3092\u52c9\u5f37\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n## Figwheel\n\n[Figwheel](https://github.com/bhauman/lein-figwheel)\u306fClojureScrit\u306e\u30b3\u30fc\u30c9\u3092\u30ed\u30fc\u30ab\u30eb\u3067\u7de8\u96c6\u3059\u308b\u3068\u30d6\u30e9\u30a6\u30b6\u306b\u81ea\u52d5\u7684\u306b\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u6700\u65b0\u306e\u72b6\u614b\u306b\u3057\u3066\u304f\u308c\u308b[Leiningen](http://leiningen.org/)\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u3059\u3002\u6700\u8fd1\u306fREPL\u6a5f\u80fd\u3082\u6301\u3064\u3088\u3046\u306b\u306a\u3063\u3066\u3055\u3089\u306b\u4fbf\u5229\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n### figwheel template\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n`lein new`\u30b3\u30de\u30f3\u30c9\u3067figwheel template\u3092\u4f7f\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n``` bash\n$ lein new figwheel hello-cljs\n```\n\ntemplate\u3067\u4f5c\u6210\u3055\u308c\u308bproject.clj\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002[Quick Start](https://github.com/bhauman/lein-figwheel/wiki/Quick-Start)\u3082\u73fe\u5728\u6700\u65b0\u7248\u306b\u4fee\u6b63\u4e2d\u306e\u3088\u3046\u3067\u3059\u304c\u5185\u5bb9\u304c\u53e4\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```clj:~/clojure_apps/hello-cljs/project.clj\n(defproject hello-cljs \"0.1.0-SNAPSHOT\"\n  :description \"FIXME: write this!\"\n  :url \"http://example.com/FIXME\"\n  :license {:name \"Eclipse Public License\"\n            :url \"http://www.eclipse.org/legal/epl-v10.html\"}\n\n  :dependencies [[org.clojure/clojure \"1.6.0\"]\n                 [org.clojure/clojurescript \"0.0-3211\"]\n                 [org.clojure/core.async \"0.1.346.0-17112a-alpha\"]]\n\n  :plugins [[lein-cljsbuild \"1.0.5\"]\n            [lein-figwheel \"0.3.1\"]]\n\n  :source-paths [\"src\"]\n\n  :clean-targets ^{:protect false} [\"resources/public/js/compiled\" \"target\"]\n\n  :cljsbuild {\n    :builds [{:id \"dev\"\n              :source-paths [\"src\"]\n              :figwheel { :on-jsload \"hello-cljs.core/on-js-reload\" }\n\n              :compiler {:main hello-cljs.core\n                         :asset-path \"js/compiled/out\"\n                         :output-to \"resources/public/js/compiled/hello_cljs.js\"\n                         :output-dir \"resources/public/js/compiled/out\"\n                         :source-map-timestamp true }}\n             {:id \"min\"\n              :source-paths [\"src\"]\n              :compiler {:output-to \"resources/public/js/compiled/hello_cljs.js\"\n                         :main hello-cljs.core\n                         :optimizations :advanced\n                         :pretty-print false}}]}\n  :figwheel {\n             ;; :http-server-root \"public\" ;; default and assumes \"resources\"\n             ;; :server-port 3449 ;; default\n             :css-dirs [\"resources/public/css\"] ;; watch and update CSS\n             })\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0a\u3052\u307e\u3059\u3002\u7279\u306b[Failed When Compiling by Using Cljs 0.0-3255 #393](https://github.com/emezeske/lein-cljsbuild/issues/393)\u306b\u3042\u308bissue\u306e\u3088\u3046\u306b\u3001ClojureScript\uff4d\u306e`0.0-3255`\u4ee5\u964d\u3067\u306fClojure\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f`1.7.0-beta2`\u4ee5\u964d\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n`:cljsbuild`\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3067\u306f\u30af\u30e9\u30a6\u30c9\u4e0a\u306e\u958b\u767a\u74b0\u5883\u306b\u30ed\u30fc\u30ab\u30eb\u306e\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u63a5\u7d9a\u3067\u304d\u308b\u3088\u3046\u306bWebSocket\u306e\u30db\u30b9\u30c8\u3092\u30d1\u30d6\u30ea\u30c3\u30afIP\u30a2\u30c9\u30ec\u30b9\u306b\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```clj:~/clojure_apps/hello-cljs/project.clj\n...\n  :dependencies [[org.clojure/clojure \"1.7.0-beta3\"]\n                 [org.clojure/clojurescript \"0.0-3269\"]\n                 [org.clojure/core.async \"0.1.346.0-17112a-alpha\"]]\n\n  :plugins [[lein-cljsbuild \"1.0.5\"]\n            [lein-figwheel \"0.3.3\"]]\n...\n  :cljsbuild {\n    :builds [{:id \"dev\"\n              :source-paths [\"src\"]\n\n              :figwheel { :on-jsload \"hello-cljs.core/on-js-reload\"\n                          :websocket-host \"210.xxx.xxx.xxx\"}\n```\n\n### Figwheel\u306eWeb\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\n\n`lein figwheel`\u30b3\u30de\u30f3\u30c9\u3067\u306eWeb\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```bash\n$ lein figwheel\nFigwheel: Starting server at http://localhost:3449\nFocusing on build ids: dev\nCompiling \"resources/public/js/compiled/hello_cljs.js\" from [\"src\"]...\nSuccessfully compiled \"resources/public/js/compiled/hello_cljs.js\" in 14.0 seconds.\nStarted Figwheel autobuilder\n\nLaunching ClojureScript REPL for build: dev\nFigwheel Controls:\n          (stop-autobuild)                ;; stops Figwheel autobuilder\n          (start-autobuild [id ...])      ;; starts autobuilder focused on optional ids\n          (switch-to-build id ...)        ;; switches autobuilder to different build\n          (reset-autobuild)               ;; stops, cleans, and starts autobuilder\n          (build-once [id ...])           ;; builds source one time\n          (clean-builds [id ..])          ;; deletes compiled cljs target files\n          (fig-status)                    ;; displays current state of system\n          (add-dep [org.om/om \"0.8.1\"]) ;; add a dependency. very experimental\n  Switch REPL build focus:\n          :cljs/quit                      ;; allows you to switch REPL to another build\n    Docs: (doc function-name-here)\n    Exit: Control+C or :cljs/quit\n Results: Stored in vars *1, *2, *3, *e holds last exception object\nPrompt will show when figwheel connects to your application\n```\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u30d6\u30e9\u30a6\u30b6\u3067Figwheel\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\nhttp://210.xxx.xxx.xxx:3449/\n\n\n### REPL\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089WebSocket\u306e\u63a5\u7d9a\u304c\u3067\u304d\u308b\u3068REPL\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n``` bash\nPrompt will show when figwheel connects to your application\n\nTo quit, type: :cljs/quit\ncljs.user=> cljs.user=>\n```\n\nJavaScript\u306eDate\u95a2\u6570\u3092new\u3057\u3066\u307f\u307e\u3059\u3002\n\n``` clj\ncljs.user=> (js/Date.)\n#inst \"2015-05-24T13:20:18.481-00:00\"\n```\n\nLinux\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308bREPL\u304b\u3089JavaScript\u306e\u30a2\u30e9\u30fc\u30c8\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u8868\u793a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n``` clj\ncljs.user=> (js/alert \"browser\u306b\u30a2\u30e9\u30fc\u30c8\u304c\u3067\u307e\u3059\u3002\")\n```\n\n\u305f\u3060\u3057REPL\u306freadline\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u4e0a\u30a2\u30ed\u30fc\u30ad\u30fc\u3084`C-p`\u3067\u30d2\u30b9\u30c8\u30ea\u30fc\u30d0\u30c3\u30af\u304c\u52b9\u304d\u307e\u305b\u3093\u3002[rlwrap](https://github.com/hanslub42/rlwrap)\u3067lein\u30b3\u30de\u30f3\u30c9\u3092\u30e9\u30c3\u30d7\u3059\u308b\u3068\u826f\u3044\u3089\u3057\u3044\u3067\u3059\u304c\u3001Docker Compose\u3067\u5b9f\u884c\u3059\u308b\u3068\u3046\u307e\u304f\u52d5\u4f5c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n```bash\n$ docker-compose run --rm --service-ports lein figwheel\nrlwrap: error: My terminal reports width=0 (is it emacs?)  I can't handle this, sorry!\nRemoving clojureapps_lein_run_1...\n```\n\n## Quick Start\u3068\u9055\u3046\u3068\u3053\u308d\n\nfigwheel template\u3067\u4f5c\u6210\u3055\u308c\u308bcore.cljs\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3002\n\n```clj:~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(ns ^:figwheel-always hello-cljs.core\n    (:require))\n\n(enable-console-print!)\n\n(println \"Edits to this text should show up in your developer console.\")\n\n;; define your app data so that it doesn't get over-written on reload\n\n(defonce app-state (atom {:text \"Hello world!\"}))\n\n\n(defn on-js-reload []\n  ;; optionally touch your app-state to force rerendering depending on\n  ;; your application\n  ;; (swap! app-state update-in [:__figwheel_counter] inc)\n)\n```\n\n### (enable-console-print!)\n\nQuick Start\u3067\u306fJavaScript\u306econsole\u3092\u4f7f\u3046\u4f8b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```clj\n(.log js/console \"Hey Seymore! wts goin' on?\")\n```\n\nfigwheel template\u3067\u306f`(enable-console-print!)`\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002ClojureScript\u306e[core.cljs](https://github.com/clojure/clojurescript/blob/master/src/main/cljs/cljs/core.cljs#L110)\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3067\u3059\u3002\n\n```clj\n(defn enable-console-print!\n  \"Set *print-fn* to console.log\"\n  []\n  (set! *print-newline* false)\n  (set! *print-fn*\n    (fn [& args]\n      (.apply (.-log js/console) js/console (into-array args)))))\n```\n\n\u3061\u306a\u307f\u306b\u30b9\u30ec\u30c3\u30c9\u6bce\u306b\u52d5\u7684\u675f\u7e1b\u304c\u4f7f\u3048\u308b\u306a\u5909\u6570\u3092\u30a2\u30b9\u30bf\u30ea\u30b9\u30af\u3067\u56f2\u3046\u3053\u3068\u3092`earmuff`\u3068\u547c\u3076\u305d\u3046\u3067\u3059\u3002\u304b\u308f\u3044\u3044\u3002\u3002\n\nprintln\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30d6\u30e9\u30a6\u30b6\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u3092\u51fa\u529b\u3057\u3066\u307f\u307e\u3059\u3002\n\n```clj:~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(ns ^:figwheel-always hello-cljs.core\n    (:require))\n\n(enable-console-print!)\n(println \"enable-console-print!\u3092\u5b9f\u884c\u3059\u308b\u3068println\u304c\u4f7f\u3048\u307e\u3059\")\n)\n```\n\n![figwheel-println.png](https://qiita-image-store.s3.amazonaws.com/0/43745/1acda305-99da-6152-9ffa-430415576e51.png)\n\n\n### on-js-reload\u95a2\u6570\n\non-js-reload\u95a2\u6570\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068\u30d5\u30c3\u30af\u304c\u547c\u3070\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n```clj\n(defn on-js-reload []\n  ;; optionally touch your app-state to force rerendering depending on\n  ;; your application\n  ;; (swap! app-state update-in [:__figwheel_counter] inc)\n)\n```\n\n\u30d6\u30e9\u30a6\u30b6\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u6bce\u56de\u30ed\u30b0\u304c\u3067\u308b\u306e\u3067\u6b8b\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\n```\nFigwheel: :on-jsload hook 'hello-cljs.core/on-js-reload' is missing\n```\n\n### index.html\n\nfigwheel template\u3067\u306f`id=\"app\"`\u3068CSS\u306e\u8aad\u307f\u8fbc\u307f\u304c\u3059\u3067\u306b\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```html:~/clojure_apps/hello-cljs/resources/public/index.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\">\n  </head>\n  <body>\n    <div id=\"app\">\n      <h2>Figwheel template</h2>\n      <p>Checkout your developer console.</p>\n    </div>\n    <script src=\"js/compiled/hello_cljs.js\" type=\"text/javascript\"></script>\n  </body>\n</html>\n```\n\n\n## Quick Start\u3057\u3066\u307f\u308b\n\n[Quick Start](https://github.com/bhauman/lein-figwheel/wiki/Quick-Start)\u306e\u624b\u9806\u306b\u3057\u305f\u304c\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4fee\u6b63\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n### Sablono\n\nproject.clj\u306b[Sablono](https://github.com/r0man/sablono)\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002Sablono\u306f[Hiccup](https://github.com/weavejester/hiccup)\u98a8\u306b\u8a18\u8ff0\u3057\u3066[React](https://facebook.github.io/react/)\u7528\u306eHTML\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u304d\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002[Om]()\n\n```clj:~/clojure_apps/hello-cljs/project.clj\n  :dependencies [[org.clojure/clojure \"1.7.0-beta3\"]\n                 [org.clojure/clojurescript \"0.0-3269\"]\n                 [org.clojure/core.async \"0.1.346.0-17112a-alpha\"]\n                 [sablono \"0.3.4\"]]\n```\n\n`lein clean`\u3092\u3057\u3066\u304b\u3089\u4f9d\u5b58\u95a2\u4fc2\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n```bash\n$ lein clean\n$ lein figwheel\nRetrieving sablono/sablono/0.3.4/sablono-0.3.4.pom from clojars\nRetrieving sablono/sablono/0.3.4/sablono-0.3.4.jar from clojars\n```\n\n### defonce\n\nQuick Start\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6700\u521d\u306f`def`\u3067\u5b9a\u7fa9\u3057\u3066\u30d6\u30e9\u30a6\u30b6\u3067\u30ea\u30ed\u30fc\u30c9\u3059\u308b\u3068state\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u4f8b\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002`defonce`\u306b\u5909\u66f4\u3057\u3066\u72b6state\u3092\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```clj\n(def app-state (atom { :likes 0 }))\n```\n\nfigwheel template\u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067`defonce`\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n```clj:~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(defonce app-state (atom {:text \"Hello world!\"}))\n```\n\nQuick Start\u306e\u3088\u3046\u306batom\u306e\u5909\u66f4\u3057\u3066`:links`\u30ad\u30fc\u3092\u6301\u3064\u30de\u30c3\u30d7\u306b\u3057\u307e\u3059\u3002\n\n```clj:~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(defonce app-state (atom {:likes 0}))\n```\n\n`defonce`\u306f[core.clj](https://github.com/clojure/clojurescript/blob/master/src/main/clojure/cljs/core.clj#L135)\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30de\u30af\u30ed\u3067\u3059\u3002\u3053\u306e\u8fba\u308a\u304cClojure\u3089\u3057\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n```clj\n(defmacro defonce [x init]\n  `(when-not (exists? ~x)\n     (def ~x ~init)))\n```\n\ncore.cljs\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```clj:~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(ns ^:figwheel-always hello-cljs.core\n    (:require [sablono.core :as sab]\n              [hello-cljs.components :refer [like-seymore]]))\n\n(enable-console-print!)\n(println \"enable-console-print!\u3092\u5b9f\u884c\u3059\u308b\u3068println\u304c\u4f7f\u3048\u307e\u3059\")\n\n(defonce app-state (atom {:likes 0}))\n\n(defn like-seymore [data]\n  (sab/html [:div\n             [:h1 \"\u3044\u3044\u306d!\u306e\u6570: \" (:links @data)]\n             [:div [:a {:href \"#\"\n                        :onClick #(swap! data update-in [:links] inc)}\n                    \"\u3044\u3044\u306d!\"]]]))\n\n(defn render! []\n  (.render js/React\n           (like-seymore app-state)\n           (.getElementById js/document \"app\")))\n(add-watch app-state :on-change (fn [_ _ _ _ ] (render!)))\n\n(render!)\n\n(defn on-js-reload [])\n```\n\n\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u304d\u3001`\u3044\u3044\u306d!`\u306e\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002cljs\u3092\u7de8\u96c6\u3057\u3066\u30b3\u30fc\u30c9\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u3082state\u306f\u4fdd\u6301\u3055\u308c\u308b\u306e\u30670\u306b\u623b\u308a\u307e\u305b\u3093\u3002\n\n![5times.png](https://qiita-image-store.s3.amazonaws.com/0/43745/d32d4ac1-b9a3-2902-1266-eb962efd9852.png)\n\n## \u81ea\u52d5\u30ea\u30ed\u30fc\u30c9\u306e\u8a2d\u5b9a\n\n### ^:figwheel-always\n\n\u81ea\u52d5\u30ea\u30ed\u30fc\u30c9\u306e\u4f7f\u3044\u65b9\u3082Quick Start\u3068template\u3067\u306f\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306fcore.cljs\u306ens\u306e\u5148\u982d\u306b`^:figwheel-always`\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n```clj:~/clojure_apps/hello-cljs/src/hello_cljs/core.cljs\n(ns ^:figwheel-always hello-seymore.core\n  (:require [sablono.core :as sab]\n            [hello-seymore.components :refer [like-seymore]]))\n```\n\n`^:figwheel-always`\u3092ns\u306e\u5148\u982d\u306b\u8a18\u8ff0\u3059\u308b\u3068cljs\u306b\u5909\u66f4\u304c\u3042\u308b\u3068namespace\u306e\u30ea\u30ed\u30fc\u30c9\u5bfe\u8c61\u306b\u306a\u308a\u307e\u3059\u3002\n\n### cljs\u306e\u5206\u5272\n\nlike-saymore\u95a2\u6570\u3092\u5207\u308a\u51fa\u3057\u3066components.cljs\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002ns\u95a2\u6570\u306b`^:figwheel-always`\u3092\u8ffd\u52a0\u3057\u3066\u30ea\u30ed\u30fc\u30c9\u306e\u5bfe\u8c61\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```clj:~/clojure_apps/hello-cljs/src/hello_cljs/components.cljs\n(ns ^:figwheel-always hello-cljs.components\n    (:require [sablono.core :as sab]))\n\n(defn like-seymore [data]\n  (sab/html [:div\n             [:h1 \"\u3044\u3044\u306d!\u306e\u6570: \" (:links @data)]\n             [:div [:a {:href \"#\"\n                        :onClick #(swap! data update-in [:links] inc)}\n                    \"\u3044\u3044\u306d!\"]]]))\n```\n\n\n\n`^:figwheel-always`\u3092\u4f7f\u3046\u3068components.cljs\u3092\u7de8\u96c6\u3057\u305f\u3060\u3051\u3067\u3082core.js\u3082\u30ea\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002namespace\u5168\u4f53\u304c\u30ea\u30ed\u30fc\u30c9\u3055\u308c\u308b\u306e\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5927\u304d\u304f\u306a\u3063\u305f\u6642\u306b\u306f\u9045\u304f\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```\n(\"hello_cljs/components.js\" \"hello_cljs/core.js\")\n```\n\n### CSS\u306e\u30ea\u30ed\u30fc\u30c9\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e\u30a2\u30bb\u30c3\u30c8\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e\u30a2\u30bb\u30c3\u30c8\u3092`resources/public`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u30b5\u30fc\u30d6\u3057\u307e\u3059\u3002\u3042\u308f\u305b\u3066CSS\u3092\u4fee\u6b63\u3057\u3066\u3082\u81ea\u52d5\u30ea\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3053\u3061\u3089\u3082\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067project.clj\u306b\u8a2d\u5b9a\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n* asset-path\u3001outputo-to\u3001output-dir\u306e\u6307\u5b9a\n* clean-targets\u306e\u6307\u5b9a\n\n```clj:~/clojure_apps/hello-cljs/project.clj\n...\n  :clean-targets ^{:protect false} [\"resources/public/js/compiled\" \"target\"]\n\n  :cljsbuild {\n    :builds [{:id \"dev\"\n              :source-paths [\"src\"]\n\n              :figwheel { :on-jsload \"test.core/on-js-reload\" }\n\n              :compiler {:main test.core\n                         :asset-path \"js/compiled/out\"\n                         :output-to \"resources/public/js/compiled/test.js\"\n                         :output-dir \"resources/public/js/compiled/out\"\n                         :source-map-timestamp true }}\n  :figwheel {\n             :css-dirs [\"resources/public/css\"] ;; watch and update CSS\n  }\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306bCSS\u3092\u8a18\u8ff0\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b\u5909\u66f4\u304c\u30d6\u30e9\u30a6\u30b6\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\n\n```css:clojure_apps/hello-cljs/resources/public/css/style.css\nbody {\n    background-color: yellow;\n}\n```\n", "tags": ["ClojureScript", "Figwheel", "Clojure", "docker-compose", "reactjs"]}