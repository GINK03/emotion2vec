{"context": "ESP8266\u3067\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3001\u3057\u3070\u3057\u3070\u3053\u3093\u306a\u6587\u5b57\u5217\u304c\u30b7\u30ea\u30a2\u30eb\u306b\u5410\u304d\u51fa\u3055\u308c\u3066\u30ea\u30bb\u30c3\u30c8\u304c\u304b\u304b\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u306b\u304c\u8d77\u3053\u3063\u305f\u304b\u3002\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n0. ESPExceptionDecoder \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\nhttps://github.com/me-no-dev/EspExceptionDecoder/releases \u304b\u3089 EspExceptionDecoder-1.0.4.zip \u3092\u6301\u3063\u3066\u304d\u3066\u5c55\u958b\u3059\u308b\u3002\n\u30b9\u30b1\u30c3\u30c1\u30d6\u30c3\u30af\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b tools \u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u306a\u304b\u306b\u683c\u7d0d\u3059\u308b\u3002\n\nArdionoIDE\u3092\u518d\u8d77\u52d5\u3059\u308b\u3002\n\u30b9\u30b1\u30c3\u30c1\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3002\n\n\n\u4f8b1: Soft WDT Reset\n\nASCIITable.ino\nSoft WDT reset\n\nctx: cont \nsp: 3ffef2b0 end: 3ffef490 offset: 01b0\n\n>>>stack>>>\n3ffef460:  00000000 3ffe835c 3ffee444 40201c94  \n3ffef470:  3fffdad0 00000000 3ffee460 402021e8  \n3ffef480:  feefeffe feefeffe 3ffee470 40100114  \n<<<stack<<<\n\n\n\n\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u307f\u308b\n\u3053\u306e\u5834\u5408\u306f\u3001\u8d77\u3053\u3063\u305f\u3053\u3068\u306f Soft WDT Reset \u3067\u3042\u308b\u3002WDT\u3001\u3064\u307e\u308a\u5b9a\u671f\u7684\u306b\u5b9f\u884c\u3059\u3079\u304d ESP.WdtFeed(); \u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u307e\u307e\u6642\u9593\u5207\u308c\u306b\u306a\u3063\u305f\u3002\n\u30c4\u30fc\u30eb\u30e1\u30cb\u30e5\u30fc\u306b\u767b\u5834\u3057\u305f\u300cESP Exception Decoder\u300d\u3092\u9078\u3076\u3068\u5225\u753b\u9762\u304c\u958b\u304f\u3002\n\u30b7\u30ea\u30a2\u30eb\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u5410\u304d\u51fa\u3055\u308c\u305f\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4e0a\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3068\u3001\u4e0b\u306b\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n\u3064\u307e\u308a\u3001WDT Reset \u304c\u767a\u751f\u3057\u305f\u5834\u6240\u306f\u300cASCIITable.ino \u306e 70\u884c\u76ee\u306b\u3042\u308bloop\u30e1\u30bd\u30c3\u30c9\u5185\u300d\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\n\n\u4f8b2 Exception\n\nRecorder.ino\n\nException (29):\nepc1=0x4000e1b2 epc2=0x00000000 epc3=0x00000000 excvaddr=0x00000000 depc=0x00000000\n\nctx: cont \nsp: 3fff3c10 end: 3fff4280 offset: 01a0\n\n>>>stack>>>\n3fff3db0:  00000040 00000082 3fffb9cc 4022d44d  \n3fff3dc0:  3fff9794 02b12719 00000000 00000041  \n3fff3dd0:  00000040 0000003f 00000000 00000041  \n3fff3de0:  3fffbc04 3fff9224 3fffb17c 3fff9774  \n3fff3df0:  3fffbd00 3fffb19c 3fff9224 3fff9224  \n3fff3e00:  00000040 3fff9224 3fffb9cc 3fff9224  \n3fff3e10:  00000040 3fff9224 3fffb9cc 4022df82  \n3fff3e20:  3fff92d4 0000003f 2382a609 00000020  \n3fff3e30:  3fffb1fc 3fff9224 3fff955c 00000020  \n3fff3e40:  3fffb1fc 3fff9224 00000010 4022e268  \n3fff3e50:  3fff6ddc 3fff953c 3fff955c 00000001  \n3fff3e60:  00000001 3fff955c 3fff70ec 4022d040  \n3fff3e70:  00000100 3fff929c 3fff7077 00000000  \n3fff3e80:  00000100 3fff929c 3fff7077 4022f269  \n3fff3e90:  3fff3ec0 00000000 000000d0 00000030  \n3fff3ea0:  1df1e22e 181a0000 3fff6c64 00000004  \n3fff3eb0:  00000004 3fff6fa4 3fff7071 4022b374  \n3fff3ec0:  2c6c0203 48176945 43e1e0d2 4583a3ad  \n3fff3ed0:  b0d7527d 2e16fe31 366c90ca 91a401ee  \n3fff3ee0:  a5a61010 cc77bb70 46884f03 e22eda52  \n3fff3ef0:  00000004 3fff7071 3fff6fa4 4022b775  \n3fff3f00:  00000000 600011f0 3fff6c64 3fff6aec  \n3fff3f10:  3fff3f30 3fff3f30 00000004 4022992d  \n3fff3f20:  3ffe85e8 3fff7071 3fff8b64 00000c40  \n3fff3f30:  3ffe9bd0 3ffebc80 00000000 00000004  \n3fff3f40:  3fff6fa4 3fff7071 00000004 00000004  \n3fff3f50:  00000004 3fff7071 3fff6fa4 4022b16c  \n   : <\u9014\u4e2d\u7701\u7565>\n3fff4270:  feefeffe feefeffe 3fff3260 40100970  \n<<<stack<<<\n\n ets Jan  8 2013,rst cause:2, boot mode:(3,6)\n\nload 0x4010f000, len 1384, room 16 \ntail 8\nchksum 0x2d\ncsum 0x2d\nv40106e40\n~ld\nReset by Exception\n\n\n\n\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u307f\u308b\nESP Exception Decoder \u306b\u8cbc\u308a\u4ed8\u3051\u3066\u5f97\u3089\u308c\u305f\u306e\u304c\u3053\u308c\u3002wpa_cipher_to_suite \u306e\u306a\u304b\u3067Exception(29)\u304c\u8d77\u3053\u3063\u305f\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30c7\u30d0\u30c3\u30b0\u30b7\u30f3\u30dc\u30eb\u304c\u624b\u306b\u5165\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u884c\u756a\u53f7\u307e\u3067\u306f\u308f\u304b\u3089\u306a\u3044\u3002TODO: \u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u306e\u5165\u624b\u65b9\u6cd5\u3092\u8abf\u3079\u308b\nDecoding 46 results\n0x4022d44d: wpa_cipher_to_suite at ?? line ?\n0x4022df82: rijndaelEncrypt at ?? line ?\n0x4022e268: rijndaelEncrypt at ?? line ?\n0x4022d040: wpa_parse_wpa_ie_rsn at ?? line ?\n0x4022f269: lwip_standard_chksum at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/ipv4/inet_chksum.c line 151\n0x4022b374: wpa_auth_sm_event at ?? line ?\n0x4022b775: wpa_validate_wpa_ie at ?? line ?\n0x4022992d: wpa_auth_for_each_sta at ?? line ?\n0x4022b16c: wpa_auth_sm_event at ?? line ?\n0x4022b514: wpa_write_rsn_ie at ?? line ?\n0x401006f0: _umm_malloc at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266\\umm_malloc/umm_malloc.c line 1441\n0x4022b2c4: wpa_auth_sm_event at ?? line ?\n0x402096b8: dhcp_reboot at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/dhcp.c line 1213\n0x40209df5: dhcp_handle_nak at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/dhcp.c line 196\n:  (inlined by) dhcp_recv at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/dhcp.c line 1665\n0x40208f4a: espconn_tcp_client at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/app/espconn_tcp.c line 946\n0x4020a2c1: dhcp_release at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/dhcp.c line 1279 (discriminator 3)\n0x40207cd9: wifi_softap_dhcps_client_update at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/app/dhcpserver.c line 1125\n0x4020e902: ip_route at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/ipv4/ip.c line 147\n0x40208609: espconn_client_connect at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/app/espconn_tcp.c line 853\n  : <\u5f8c\u7565>\n\n\nException(29) \u3063\u3066\u306a\u306b\nhttps://github.com/esp8266/Arduino/blob/master/doc/exception_causes.md \u306b\u3088\u308c\u3070\n\n29    StoreProhibitedCause:   A store referenced a page mapped with an attribute that does not permit stores  Region Protection or MMU\n\n\u3042\u3042\u3042\u3002\u66f8\u304d\u8fbc\u3093\u3067\u306f\u3044\u3051\u306a\u3044\u9818\u57df\u306b\u66f8\u304d\u8fbc\u3082\u3046\u3068\u3057\u305f\u307f\u305f\u3044\u3067\u3059\u306d\u3002\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u304b\n\nwpa_common.c\nint wpa_cipher_put_suites(u8 *pos, int ciphers)\n{\n    int num_suites = 0;\n\n    if (ciphers & WPA_CIPHER_CCMP) {\n        RSN_SELECTOR_PUT(pos, WPA_CIPHER_SUITE_CCMP);\n        pos += WPA_SELECTOR_LEN;\n        num_suites++;\n    }\n    if (ciphers & WPA_CIPHER_TKIP) {\n        RSN_SELECTOR_PUT(pos, WPA_CIPHER_SUITE_TKIP);\n        pos += WPA_SELECTOR_LEN;\n        num_suites++;\n    }\n    if (ciphers & WPA_CIPHER_NONE) {\n        RSN_SELECTOR_PUT(pos, WPA_CIPHER_SUITE_NONE);\n        pos += WPA_SELECTOR_LEN;\n        num_suites++;\n    }\n\n    return num_suites;\n}\n\n\npos\u306bnull\u3067\u3082\u6e21\u3055\u308c\u3066\u308b\u3093\u3067\u3057\u3087\u3046\u304b\u306d\u2026\u2026\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u4e2d\u306b dhcp_reboot \u3068\u304b\u3084\u3063\u3066\u308b\u306e\u3067\u3001\u56fa\u5b9aIP\u3092\u5272\u308a\u632f\u3063\u305f\u3089\u89e3\u6d88\u3059\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u4f8b3: Exception\n\u5225\u306e\u304c\u63a1\u308c\u307e\u3057\u305f\u3002\nException (29):\nepc1=0x4000e1b2 epc2=0x00000000 epc3=0x00000000 excvaddr=0x00000004 depc=0x00000000\n\nctx: cont \nsp: 3fff3be0 end: 3fff4280 offset: 01a0\n\n>>>stack>>>\n3fff3d80:  00410000 00000041 3fff8f64 4022cfdb  \n3fff3d90:  00000001 3fff9104 3fff8f64 4022d174  \n3fff3da0:  0000020c 3fff9104 3fff3174 3fffb044  \n3fff3db0:  00000041 00000041 3fffb894 4022d426  \n3fff3dc0:  3fff9778 ffffffc0 00000041 00000001  \n3fff3dd0:  00000041 00000000 3fffbacc 00000040  \n3fff3de0:  3fff6964 00000000 3fffb044 3fff91b4  \n3fff3df0:  3fffbbd0 3fffb044 3fff9104 00000000  \n3fff3e00:  00000040 3fff9104 3fffb894 3fffb044  \n3fff3e10:  00000041 3fff9104 3fffb894 4022dfaa  \n3fff3e20:  3fff91b4 0000003f b5a3d2ec 00000020  \n3fff3e30:  3fffb0c4 3fff9104 3fff943c 00000000  \n3fff3e40:  00000010 3fff9104 00000010 4022e178  \n3fff3e50:  3fff8f64 3fff941c 0000000f 00000001  \n3fff3e60:  00000001 3fff943c 3fff6ff1 4022d040  \n3fff3e70:  00000100 3fff917c 3fff6f2f 00000000  \n3fff3e80:  00000100 3fff917c 3fff6f2f 4022f269  \n3fff3e90:  3fff3ec0 00000000 000000d0 00000030  \n3fff3ea0:  39b9e749 981b0000 3fff6abc 00000004  \n3fff3eb0:  00000004 3fff6e5c 3fff6f29 4022b374  \n3fff3ec0:  08180203 fe1ac7d2 8d4d8bcb a76a4af7  \n3fff3ed0:  ae94c76e db27423a a41ccb78 24bdbe5e  \n3fff3ee0:  829c9f4b b994316d 0bcaf416 e749c51e  \n3fff3ef0:  00000004 3fff6f29 3fff6e5c 4022b775  \n3fff3f00:  00000000 600011f0 3fff6abc 3fff6b7c  \n3fff3f10:  3fff3f30 3fff3f30 00000004 4022992d  \n3fff3f20:  3ffe85e8 3fff6f29 3fff8a1c 00000c40  \n3fff3f30:  3ffe9bd0 3ffebc80 00000000 00000004  \n3fff3f40:  3fff6e5c 3fff6f29 00000004 00000004  \n3fff3f50:  00000004 3fff6f29 3fff6e5c 4022b16c  \n3fff3f60:  00000000 3fff6f29 3fff6e5c 4022b514  \n3fff3f70:  00000019 3fff66f4 00000026 401006f0  \n3fff3f80:  3fff3fd0 0000000e 00000010 00000000  \n3fff3f90:  3fff6bd4 3fff66f4 3fff6e5c 01000000  \n3fff3fa0:  3fff3fd0 3fff685c 3fff6e5c 4022b2c4  \n3fff3fb0:  402096b8 312e3538 3fff66f4 00001387  \n3fff3fc0:  0001e677 3fff685c 3fff6bb4 40209df5  \n3fff3fd0:  000001bb 3fff685c 3fff6abc 40208f4a  \n3fff3fe0:  5e84559e 3fff681c 00000028 00000000  \n3fff3ff0:  000001bb 3fff685c 3fff66f4 4020a2c1  \n3fff4000:  3ffeaa78 5e84559e 3ffeaa78 5e84559e  \n3fff4010:  3fff3198 3fff681c 3fff40b0 40207cd9  \n3fff4020:  00000000 3f000a36 3fff4070 4020e902  \n3fff4030:  00000000 00000000 00000000 3fff4120  \n3fff4040:  0001382c 3ffe912c 3fff40b0 40208609  \n3fff4050:  3fff4090 3fff4060 00000008 3ffebaa8  \n3fff4060:  3fff42a4 00000001 0001382c 3fff6954  \n3fff4070:  000000b5 0001382c 00000001 00000000  \n3fff4080:  3ffe9118 00000001 3fff4060 3fff4090  \n3fff4090:  3ffe90ec 00000001 3fff3198 4020af84  \n3fff40a0:  0001382c 00000001 3fff3198 40207207  \n3fff40b0:  3fff681c 3fff685c 3fff66f4 0000001f  \n3fff40c0:  00000019 3f0001bb 3f001388 3fff6c7c  \n3fff40d0:  0000003f 0000003d 3fff683c 0000000f  \n3fff40e0:  00000005 3fff690c 0000001f 00000019  \n3fff40f0:  3fff68dc 0000001f 00000011 3fff6d7c  \n3fff4100:  0000004f 00000044 00000000 00000000  \n3fff4110:  00000000 ffffffff 00000000 00000000  \n3fff4120:  3ffeaa10 00000000 000003e8 4020d424  \n3fff4130:  3fff6d1c 3fff693c 00000000 00000000  \n3fff4140:  00000000 3fff6a0c 0000009f 00000090  \n3fff4150:  00000001 00000001 3fff644c 4020f212  \n3fff4160:  00000000 00000001 3fff4180 4020af7a  \n3fff4170:  3fff644c 3fff27b0 3fff644c 4020afb6  \n3fff4180:  00000000 00000000 00000000 4020d5d4  \n3fff4190:  3fff644c 3fff27b0 3fff2770 4020b04d  \n3fff41a0:  3fff66d4 0000000f 0000000a 3fff3260  \n3fff41b0:  3fff27b0 00000002 3fff3260 00000001  \n3fff41c0:  00000001 4020a5ac 0000000f 3fff3260  \n3fff41d0:  00000000 4020f21c 3fff2770 3ffe900c  \n3fff41e0:  00000001 3fff2794 3fff2770 4020b257  \n3fff41f0:  3ffe9f28 00000000 000003e8 4020cfac  \n3fff4200:  00000000 3fff68a4 3fff3198 4020cff8  \n3fff4210:  4020f208 4020f21c 3fff2770 40207004  \n3fff4220:  40206c2c 00000000 4020f21c 4020f208  \n3fff4230:  3ffeaa78 2100a8c0 00001388 3fff3254  \n3fff4240:  3fffdad0 00000000 3fff3198 40207083  \n3fff4250:  00000000 00000000 00000000 feefeffe  \n3fff4260:  feefeffe feefeffe 3fff324c 4020dffb  \n3fff4270:  feefeffe feefeffe 3fff3260 40100970  \n<<<stack<<<\n\nDecoding 44 results\n0x4022cfdb: more_comps at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1072\n0x4022d174: alloc at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1106\n0x4022d426: regular_multiply at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 822\n0x4022dfaa: bi_barrett at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1293\n0x4022e178: bi_mod_power at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1400\n0x4022d040: trim at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1197\n0x4022f269: RSA_public at /Users/igrokhotkov/e/axtls/e1/crypto/rsa.c line 242\n:  (inlined by) RSA_encrypt at /Users/igrokhotkov/e/axtls/e1/crypto/rsa.c line 276\n0x4022b374: send_client_key_xchg at /Users/igrokhotkov/e/axtls/e1/ssl/tls1_clnt.c line 352\n0x4022b775: do_clnt_handshake at /Users/igrokhotkov/e/axtls/e1/ssl/tls1_clnt.c line 109\n0x4022992d: DISPLAY_STATE at /Users/igrokhotkov/e/axtls/e1/ssl/tls1.c line 2047\n0x4022b16c: do_handshake at /Users/igrokhotkov/e/axtls/e1/ssl/tls1.c line 1481\n:  (inlined by) basic_read at /Users/igrokhotkov/e/axtls/e1/ssl/tls1.c line 1357\n0x4022b514: do_client_connect at /Users/igrokhotkov/e/axtls/e1/ssl/tls1_clnt.c line 154\n0x401006f0: malloc at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266\\umm_malloc/umm_malloc.c line 1664\n0x4022b2c4: ssl_read at /Users/igrokhotkov/e/axtls/e1/ssl/tls1.c line 265\n0x402096b8: WiFiClient::_s_connected(void*, void*, signed char) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClient.cpp line 327\n0x40209df5: SSLContext::connect(ClientContext*, char const*, unsigned int) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClientSecure.cpp line 517\n:  (inlined by) WiFiClientSecure::_connectSSL(char const*) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClientSecure.cpp line 279\n0x40208f4a: WiFiClient::connect(IPAddress, unsigned short) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClient.cpp line 327\n0x4020a2c1: WiFiClientSecure::connect(char const*, unsigned short) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClientSecure.cpp line 269\n0x40207cd9: HTTPClient::connect() at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266HTTPClient\\src/ESP8266HTTPClient.cpp line 130\n0x4020e902: SPIFFSImpl::open(char const*, fs::OpenMode, fs::AccessMode) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/spiffs_api.cpp line 53\n0x40208609: HTTPClient::sendRequest(char const*, Stream*, unsigned int) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266HTTPClient\\src/ESP8266HTTPClient.cpp line 130\n0x4020af84: FunctionRequestHandler::handle(ESP8266WebServer&, HTTPMethod, String) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x40207207: https_connect() at C:\\Users\\matobaa\\Documents\\Arduino\\SpeechRecognitionByESP8266/SpeechRecognitionByESP8266.ino line 260\n0x4020d424: String::changeBuffer(unsigned int) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/WString.cpp line 519\n0x4020f212: std::_Function_handler ::_M_invoke(std::_Any_data const&) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 2073\n0x4020af7a: std::function ::operator()() const at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020afb6: FunctionRequestHandler::handle(ESP8266WebServer&, HTTPMethod, String) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020d5d4: String::String(String const&) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/WString.cpp line 519\n0x4020b04d: ESP8266WebServer::_handleRequest() at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020a5ac: FunctionRequestHandler::canHandle(HTTPMethod, String) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020f21c: std::_Function_base::_Base_manager ::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 1934\n0x4020b257: ESP8266WebServer::handleClient() at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020cfac: Print::println() at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/Print.cpp line 76\n0x4020cff8: Print::println(char const*) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/Print.cpp line 76\n0x4020f208: std::_Function_handler ::_M_invoke(std::_Any_data const&) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 2069\n0x4020f21c: std::_Function_base::_Base_manager ::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 1934\n0x40207004: webserver() at C:\\Users\\matobaa\\Documents\\Arduino\\SpeechRecognitionByESP8266/SpeechRecognitionByESP8266.ino line 260\n0x40206c2c: doPost() at C:\\Users\\matobaa\\Documents\\Arduino\\SpeechRecognitionByESP8266/SpeechRecognitionByESP8266.ino line 260\n0x4020f21c: std::_Function_base::_Base_manager ::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 1934\n0x4020f208: std::_Function_handler ::_M_invoke(std::_Any_data const&) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 2069\n0x40207083: setup at C:\\Users\\matobaa\\Documents\\Arduino\\SpeechRecognitionByESP8266/SpeechRecognitionByESP8266.ino line 260\n0x4020dffb: loop_wrapper at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/core_esp8266_main.cpp line 56\n0x40100970: cont_norm at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/cont.S line 109\n\nhttps://sourceforge.net/p/axtls/code/HEAD/tree/trunk/crypto/bigint.c#l1072 \u3092\u898b\u3066\u307f\u307e\u3059:\nstatic void more_comps(bigint *bi, int n)\n{\n    if (n > bi->max_comps)\n    {\n        bi->max_comps = max(bi->max_comps * 2, n);\n        bi->comps = (comp*)realloc(bi->comps, bi->max_comps * COMP_BYTE_SIZE);\n    }\n\n    if (n > bi->size)\n    {\n        memset(&bi->comps[bi->size], 0, (n-bi->size)*COMP_BYTE_SIZE);\n    }\n\n    bi->size = n;\n}\n\n\u3042\u3089\u3089\u3002realloc\u306b\u5931\u6557\u3059\u308b\u3068 bi->comps \u306b null \u304c\u5165\u3063\u3066\u3001\u305d\u306e\u3042\u3068if\u6587\u5185\u306b\u5165\u308b\u3068memset\u3067SEGV\u3067\u3061\u3083\u3044\u307e\u3059\u306d\u3002\u304a\u898b\u4e8b\u3067\u3057\u305f\u3002\nESP8266\u3067\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3001\u3057\u3070\u3057\u3070\u3053\u3093\u306a\u6587\u5b57\u5217\u304c\u30b7\u30ea\u30a2\u30eb\u306b\u5410\u304d\u51fa\u3055\u308c\u3066\u30ea\u30bb\u30c3\u30c8\u304c\u304b\u304b\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u306b\u304c\u8d77\u3053\u3063\u305f\u304b\u3002\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\n## 0. ESPExceptionDecoder \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n1. https://github.com/me-no-dev/EspExceptionDecoder/releases \u304b\u3089 `EspExceptionDecoder-1.0.4.zip` \u3092\u6301\u3063\u3066\u304d\u3066\u5c55\u958b\u3059\u308b\u3002\n2. \u30b9\u30b1\u30c3\u30c1\u30d6\u30c3\u30af\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b tools \u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u306a\u304b\u306b\u683c\u7d0d\u3059\u308b\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/61810/8e08ac2d-1160-f3c9-2dbc-51739311d8d7.png)\n\n3. ArdionoIDE\u3092\u518d\u8d77\u52d5\u3059\u308b\u3002\n4. \u30b9\u30b1\u30c3\u30c1\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3002\n\n# \u4f8b1: Soft WDT Reset\n\n```ASCIITable.ino\nSoft WDT reset\n\nctx: cont \nsp: 3ffef2b0 end: 3ffef490 offset: 01b0\n\n>>>stack>>>\n3ffef460:  00000000 3ffe835c 3ffee444 40201c94  \n3ffef470:  3fffdad0 00000000 3ffee460 402021e8  \n3ffef480:  feefeffe feefeffe 3ffee470 40100114  \n<<<stack<<<\n```\n\n## \u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u307f\u308b\n\u3053\u306e\u5834\u5408\u306f\u3001\u8d77\u3053\u3063\u305f\u3053\u3068\u306f Soft WDT Reset \u3067\u3042\u308b\u3002WDT\u3001\u3064\u307e\u308a\u5b9a\u671f\u7684\u306b\u5b9f\u884c\u3059\u3079\u304d `ESP.WdtFeed();` \u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u307e\u307e\u6642\u9593\u5207\u308c\u306b\u306a\u3063\u305f\u3002\n\n\u30c4\u30fc\u30eb\u30e1\u30cb\u30e5\u30fc\u306b\u767b\u5834\u3057\u305f\u300cESP Exception Decoder\u300d\u3092\u9078\u3076\u3068\u5225\u753b\u9762\u304c\u958b\u304f\u3002\n\u30b7\u30ea\u30a2\u30eb\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u5410\u304d\u51fa\u3055\u308c\u305f\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4e0a\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3068\u3001\u4e0b\u306b\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/61810/630a44dd-1283-c23e-85f8-217675724fef.png)\n\n\u3064\u307e\u308a\u3001WDT Reset \u304c\u767a\u751f\u3057\u305f\u5834\u6240\u306f\u300cASCIITable.ino \u306e 70\u884c\u76ee\u306b\u3042\u308bloop\u30e1\u30bd\u30c3\u30c9\u5185\u300d\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\n\n# \u4f8b2 Exception \n\n```Recorder.ino\n\nException (29):\nepc1=0x4000e1b2 epc2=0x00000000 epc3=0x00000000 excvaddr=0x00000000 depc=0x00000000\n\nctx: cont \nsp: 3fff3c10 end: 3fff4280 offset: 01a0\n\n>>>stack>>>\n3fff3db0:  00000040 00000082 3fffb9cc 4022d44d  \n3fff3dc0:  3fff9794 02b12719 00000000 00000041  \n3fff3dd0:  00000040 0000003f 00000000 00000041  \n3fff3de0:  3fffbc04 3fff9224 3fffb17c 3fff9774  \n3fff3df0:  3fffbd00 3fffb19c 3fff9224 3fff9224  \n3fff3e00:  00000040 3fff9224 3fffb9cc 3fff9224  \n3fff3e10:  00000040 3fff9224 3fffb9cc 4022df82  \n3fff3e20:  3fff92d4 0000003f 2382a609 00000020  \n3fff3e30:  3fffb1fc 3fff9224 3fff955c 00000020  \n3fff3e40:  3fffb1fc 3fff9224 00000010 4022e268  \n3fff3e50:  3fff6ddc 3fff953c 3fff955c 00000001  \n3fff3e60:  00000001 3fff955c 3fff70ec 4022d040  \n3fff3e70:  00000100 3fff929c 3fff7077 00000000  \n3fff3e80:  00000100 3fff929c 3fff7077 4022f269  \n3fff3e90:  3fff3ec0 00000000 000000d0 00000030  \n3fff3ea0:  1df1e22e 181a0000 3fff6c64 00000004  \n3fff3eb0:  00000004 3fff6fa4 3fff7071 4022b374  \n3fff3ec0:  2c6c0203 48176945 43e1e0d2 4583a3ad  \n3fff3ed0:  b0d7527d 2e16fe31 366c90ca 91a401ee  \n3fff3ee0:  a5a61010 cc77bb70 46884f03 e22eda52  \n3fff3ef0:  00000004 3fff7071 3fff6fa4 4022b775  \n3fff3f00:  00000000 600011f0 3fff6c64 3fff6aec  \n3fff3f10:  3fff3f30 3fff3f30 00000004 4022992d  \n3fff3f20:  3ffe85e8 3fff7071 3fff8b64 00000c40  \n3fff3f30:  3ffe9bd0 3ffebc80 00000000 00000004  \n3fff3f40:  3fff6fa4 3fff7071 00000004 00000004  \n3fff3f50:  00000004 3fff7071 3fff6fa4 4022b16c  \n   : <\u9014\u4e2d\u7701\u7565>\n3fff4270:  feefeffe feefeffe 3fff3260 40100970  \n<<<stack<<<\n\n ets Jan  8 2013,rst cause:2, boot mode:(3,6)\n\nload 0x4010f000, len 1384, room 16 \ntail 8\nchksum 0x2d\ncsum 0x2d\nv40106e40\n~ld\nReset by Exception\n```\n\n# \u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u307f\u308b\n\nESP Exception Decoder \u306b\u8cbc\u308a\u4ed8\u3051\u3066\u5f97\u3089\u308c\u305f\u306e\u304c\u3053\u308c\u3002wpa_cipher_to_suite \u306e\u306a\u304b\u3067Exception(29)\u304c\u8d77\u3053\u3063\u305f\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30c7\u30d0\u30c3\u30b0\u30b7\u30f3\u30dc\u30eb\u304c\u624b\u306b\u5165\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u884c\u756a\u53f7\u307e\u3067\u306f\u308f\u304b\u3089\u306a\u3044\u3002**TODO: \u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u306e\u5165\u624b\u65b9\u6cd5\u3092\u8abf\u3079\u308b**\n\n```\nDecoding 46 results\n0x4022d44d: wpa_cipher_to_suite at ?? line ?\n0x4022df82: rijndaelEncrypt at ?? line ?\n0x4022e268: rijndaelEncrypt at ?? line ?\n0x4022d040: wpa_parse_wpa_ie_rsn at ?? line ?\n0x4022f269: lwip_standard_chksum at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/ipv4/inet_chksum.c line 151\n0x4022b374: wpa_auth_sm_event at ?? line ?\n0x4022b775: wpa_validate_wpa_ie at ?? line ?\n0x4022992d: wpa_auth_for_each_sta at ?? line ?\n0x4022b16c: wpa_auth_sm_event at ?? line ?\n0x4022b514: wpa_write_rsn_ie at ?? line ?\n0x401006f0: _umm_malloc at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266\\umm_malloc/umm_malloc.c line 1441\n0x4022b2c4: wpa_auth_sm_event at ?? line ?\n0x402096b8: dhcp_reboot at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/dhcp.c line 1213\n0x40209df5: dhcp_handle_nak at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/dhcp.c line 196\n:  (inlined by) dhcp_recv at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/dhcp.c line 1665\n0x40208f4a: espconn_tcp_client at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/app/espconn_tcp.c line 946\n0x4020a2c1: dhcp_release at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/dhcp.c line 1279 (discriminator 3)\n0x40207cd9: wifi_softap_dhcps_client_update at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/app/dhcpserver.c line 1125\n0x4020e902: ip_route at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/core/ipv4/ip.c line 147\n0x40208609: espconn_client_connect at /Users/igrokhotkov/espressif/arduino/tools/sdk/lwip/src/app/espconn_tcp.c line 853\n  : <\u5f8c\u7565>\n```\n\n## Exception(29) \u3063\u3066\u306a\u306b\n\nhttps://github.com/esp8266/Arduino/blob/master/doc/exception_causes.md \u306b\u3088\u308c\u3070\n\n> 29\tStoreProhibitedCause:\tA store referenced a page mapped with an attribute that does not permit stores\tRegion Protection or MMU\n\n\u3042\u3042\u3042\u3002\u66f8\u304d\u8fbc\u3093\u3067\u306f\u3044\u3051\u306a\u3044\u9818\u57df\u306b\u66f8\u304d\u8fbc\u3082\u3046\u3068\u3057\u305f\u307f\u305f\u3044\u3067\u3059\u306d\u3002[\u30bd\u30fc\u30b9](https://github.com/apc-io/Vixen-external_wpa_supplicant_8_eagle/blob/master/src/common/wpa_common.c#L1189)\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u304b\n\n```wpa_common.c\nint wpa_cipher_put_suites(u8 *pos, int ciphers)\n{\n\tint num_suites = 0;\n\n\tif (ciphers & WPA_CIPHER_CCMP) {\n\t\tRSN_SELECTOR_PUT(pos, WPA_CIPHER_SUITE_CCMP);\n\t\tpos += WPA_SELECTOR_LEN;\n\t\tnum_suites++;\n\t}\n\tif (ciphers & WPA_CIPHER_TKIP) {\n\t\tRSN_SELECTOR_PUT(pos, WPA_CIPHER_SUITE_TKIP);\n\t\tpos += WPA_SELECTOR_LEN;\n\t\tnum_suites++;\n\t}\n\tif (ciphers & WPA_CIPHER_NONE) {\n\t\tRSN_SELECTOR_PUT(pos, WPA_CIPHER_SUITE_NONE);\n\t\tpos += WPA_SELECTOR_LEN;\n\t\tnum_suites++;\n\t}\n\n\treturn num_suites;\n}\n```\n\npos\u306bnull\u3067\u3082\u6e21\u3055\u308c\u3066\u308b\u3093\u3067\u3057\u3087\u3046\u304b\u306d\u2026\u2026\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u4e2d\u306b dhcp_reboot \u3068\u304b\u3084\u3063\u3066\u308b\u306e\u3067\u3001\u56fa\u5b9aIP\u3092\u5272\u308a\u632f\u3063\u305f\u3089\u89e3\u6d88\u3059\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n# \u4f8b3: Exception\n\n\u5225\u306e\u304c\u63a1\u308c\u307e\u3057\u305f\u3002\n\n```\nException (29):\nepc1=0x4000e1b2 epc2=0x00000000 epc3=0x00000000 excvaddr=0x00000004 depc=0x00000000\n\nctx: cont \nsp: 3fff3be0 end: 3fff4280 offset: 01a0\n\n>>>stack>>>\n3fff3d80:  00410000 00000041 3fff8f64 4022cfdb  \n3fff3d90:  00000001 3fff9104 3fff8f64 4022d174  \n3fff3da0:  0000020c 3fff9104 3fff3174 3fffb044  \n3fff3db0:  00000041 00000041 3fffb894 4022d426  \n3fff3dc0:  3fff9778 ffffffc0 00000041 00000001  \n3fff3dd0:  00000041 00000000 3fffbacc 00000040  \n3fff3de0:  3fff6964 00000000 3fffb044 3fff91b4  \n3fff3df0:  3fffbbd0 3fffb044 3fff9104 00000000  \n3fff3e00:  00000040 3fff9104 3fffb894 3fffb044  \n3fff3e10:  00000041 3fff9104 3fffb894 4022dfaa  \n3fff3e20:  3fff91b4 0000003f b5a3d2ec 00000020  \n3fff3e30:  3fffb0c4 3fff9104 3fff943c 00000000  \n3fff3e40:  00000010 3fff9104 00000010 4022e178  \n3fff3e50:  3fff8f64 3fff941c 0000000f 00000001  \n3fff3e60:  00000001 3fff943c 3fff6ff1 4022d040  \n3fff3e70:  00000100 3fff917c 3fff6f2f 00000000  \n3fff3e80:  00000100 3fff917c 3fff6f2f 4022f269  \n3fff3e90:  3fff3ec0 00000000 000000d0 00000030  \n3fff3ea0:  39b9e749 981b0000 3fff6abc 00000004  \n3fff3eb0:  00000004 3fff6e5c 3fff6f29 4022b374  \n3fff3ec0:  08180203 fe1ac7d2 8d4d8bcb a76a4af7  \n3fff3ed0:  ae94c76e db27423a a41ccb78 24bdbe5e  \n3fff3ee0:  829c9f4b b994316d 0bcaf416 e749c51e  \n3fff3ef0:  00000004 3fff6f29 3fff6e5c 4022b775  \n3fff3f00:  00000000 600011f0 3fff6abc 3fff6b7c  \n3fff3f10:  3fff3f30 3fff3f30 00000004 4022992d  \n3fff3f20:  3ffe85e8 3fff6f29 3fff8a1c 00000c40  \n3fff3f30:  3ffe9bd0 3ffebc80 00000000 00000004  \n3fff3f40:  3fff6e5c 3fff6f29 00000004 00000004  \n3fff3f50:  00000004 3fff6f29 3fff6e5c 4022b16c  \n3fff3f60:  00000000 3fff6f29 3fff6e5c 4022b514  \n3fff3f70:  00000019 3fff66f4 00000026 401006f0  \n3fff3f80:  3fff3fd0 0000000e 00000010 00000000  \n3fff3f90:  3fff6bd4 3fff66f4 3fff6e5c 01000000  \n3fff3fa0:  3fff3fd0 3fff685c 3fff6e5c 4022b2c4  \n3fff3fb0:  402096b8 312e3538 3fff66f4 00001387  \n3fff3fc0:  0001e677 3fff685c 3fff6bb4 40209df5  \n3fff3fd0:  000001bb 3fff685c 3fff6abc 40208f4a  \n3fff3fe0:  5e84559e 3fff681c 00000028 00000000  \n3fff3ff0:  000001bb 3fff685c 3fff66f4 4020a2c1  \n3fff4000:  3ffeaa78 5e84559e 3ffeaa78 5e84559e  \n3fff4010:  3fff3198 3fff681c 3fff40b0 40207cd9  \n3fff4020:  00000000 3f000a36 3fff4070 4020e902  \n3fff4030:  00000000 00000000 00000000 3fff4120  \n3fff4040:  0001382c 3ffe912c 3fff40b0 40208609  \n3fff4050:  3fff4090 3fff4060 00000008 3ffebaa8  \n3fff4060:  3fff42a4 00000001 0001382c 3fff6954  \n3fff4070:  000000b5 0001382c 00000001 00000000  \n3fff4080:  3ffe9118 00000001 3fff4060 3fff4090  \n3fff4090:  3ffe90ec 00000001 3fff3198 4020af84  \n3fff40a0:  0001382c 00000001 3fff3198 40207207  \n3fff40b0:  3fff681c 3fff685c 3fff66f4 0000001f  \n3fff40c0:  00000019 3f0001bb 3f001388 3fff6c7c  \n3fff40d0:  0000003f 0000003d 3fff683c 0000000f  \n3fff40e0:  00000005 3fff690c 0000001f 00000019  \n3fff40f0:  3fff68dc 0000001f 00000011 3fff6d7c  \n3fff4100:  0000004f 00000044 00000000 00000000  \n3fff4110:  00000000 ffffffff 00000000 00000000  \n3fff4120:  3ffeaa10 00000000 000003e8 4020d424  \n3fff4130:  3fff6d1c 3fff693c 00000000 00000000  \n3fff4140:  00000000 3fff6a0c 0000009f 00000090  \n3fff4150:  00000001 00000001 3fff644c 4020f212  \n3fff4160:  00000000 00000001 3fff4180 4020af7a  \n3fff4170:  3fff644c 3fff27b0 3fff644c 4020afb6  \n3fff4180:  00000000 00000000 00000000 4020d5d4  \n3fff4190:  3fff644c 3fff27b0 3fff2770 4020b04d  \n3fff41a0:  3fff66d4 0000000f 0000000a 3fff3260  \n3fff41b0:  3fff27b0 00000002 3fff3260 00000001  \n3fff41c0:  00000001 4020a5ac 0000000f 3fff3260  \n3fff41d0:  00000000 4020f21c 3fff2770 3ffe900c  \n3fff41e0:  00000001 3fff2794 3fff2770 4020b257  \n3fff41f0:  3ffe9f28 00000000 000003e8 4020cfac  \n3fff4200:  00000000 3fff68a4 3fff3198 4020cff8  \n3fff4210:  4020f208 4020f21c 3fff2770 40207004  \n3fff4220:  40206c2c 00000000 4020f21c 4020f208  \n3fff4230:  3ffeaa78 2100a8c0 00001388 3fff3254  \n3fff4240:  3fffdad0 00000000 3fff3198 40207083  \n3fff4250:  00000000 00000000 00000000 feefeffe  \n3fff4260:  feefeffe feefeffe 3fff324c 4020dffb  \n3fff4270:  feefeffe feefeffe 3fff3260 40100970  \n<<<stack<<<\n```\n\n```\nDecoding 44 results\n0x4022cfdb: more_comps at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1072\n0x4022d174: alloc at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1106\n0x4022d426: regular_multiply at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 822\n0x4022dfaa: bi_barrett at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1293\n0x4022e178: bi_mod_power at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1400\n0x4022d040: trim at /Users/igrokhotkov/e/axtls/e1/crypto/bigint.c line 1197\n0x4022f269: RSA_public at /Users/igrokhotkov/e/axtls/e1/crypto/rsa.c line 242\n:  (inlined by) RSA_encrypt at /Users/igrokhotkov/e/axtls/e1/crypto/rsa.c line 276\n0x4022b374: send_client_key_xchg at /Users/igrokhotkov/e/axtls/e1/ssl/tls1_clnt.c line 352\n0x4022b775: do_clnt_handshake at /Users/igrokhotkov/e/axtls/e1/ssl/tls1_clnt.c line 109\n0x4022992d: DISPLAY_STATE at /Users/igrokhotkov/e/axtls/e1/ssl/tls1.c line 2047\n0x4022b16c: do_handshake at /Users/igrokhotkov/e/axtls/e1/ssl/tls1.c line 1481\n:  (inlined by) basic_read at /Users/igrokhotkov/e/axtls/e1/ssl/tls1.c line 1357\n0x4022b514: do_client_connect at /Users/igrokhotkov/e/axtls/e1/ssl/tls1_clnt.c line 154\n0x401006f0: malloc at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266\\umm_malloc/umm_malloc.c line 1664\n0x4022b2c4: ssl_read at /Users/igrokhotkov/e/axtls/e1/ssl/tls1.c line 265\n0x402096b8: WiFiClient::_s_connected(void*, void*, signed char) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClient.cpp line 327\n0x40209df5: SSLContext::connect(ClientContext*, char const*, unsigned int) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClientSecure.cpp line 517\n:  (inlined by) WiFiClientSecure::_connectSSL(char const*) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClientSecure.cpp line 279\n0x40208f4a: WiFiClient::connect(IPAddress, unsigned short) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClient.cpp line 327\n0x4020a2c1: WiFiClientSecure::connect(char const*, unsigned short) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WiFi\\src/WiFiClientSecure.cpp line 269\n0x40207cd9: HTTPClient::connect() at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266HTTPClient\\src/ESP8266HTTPClient.cpp line 130\n0x4020e902: SPIFFSImpl::open(char const*, fs::OpenMode, fs::AccessMode) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/spiffs_api.cpp line 53\n0x40208609: HTTPClient::sendRequest(char const*, Stream*, unsigned int) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266HTTPClient\\src/ESP8266HTTPClient.cpp line 130\n0x4020af84: FunctionRequestHandler::handle(ESP8266WebServer&, HTTPMethod, String) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x40207207: https_connect() at C:\\Users\\matobaa\\Documents\\Arduino\\SpeechRecognitionByESP8266/SpeechRecognitionByESP8266.ino line 260\n0x4020d424: String::changeBuffer(unsigned int) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/WString.cpp line 519\n0x4020f212: std::_Function_handler ::_M_invoke(std::_Any_data const&) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 2073\n0x4020af7a: std::function ::operator()() const at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020afb6: FunctionRequestHandler::handle(ESP8266WebServer&, HTTPMethod, String) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020d5d4: String::String(String const&) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/WString.cpp line 519\n0x4020b04d: ESP8266WebServer::_handleRequest() at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020a5ac: FunctionRequestHandler::canHandle(HTTPMethod, String) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020f21c: std::_Function_base::_Base_manager ::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 1934\n0x4020b257: ESP8266WebServer::handleClient() at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\libraries\\ESP8266WebServer\\src\\detail/RequestHandlersImpl.h line 53\n0x4020cfac: Print::println() at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/Print.cpp line 76\n0x4020cff8: Print::println(char const*) at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/Print.cpp line 76\n0x4020f208: std::_Function_handler ::_M_invoke(std::_Any_data const&) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 2069\n0x4020f21c: std::_Function_base::_Base_manager ::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 1934\n0x40207004: webserver() at C:\\Users\\matobaa\\Documents\\Arduino\\SpeechRecognitionByESP8266/SpeechRecognitionByESP8266.ino line 260\n0x40206c2c: doPost() at C:\\Users\\matobaa\\Documents\\Arduino\\SpeechRecognitionByESP8266/SpeechRecognitionByESP8266.ino line 260\n0x4020f21c: std::_Function_base::_Base_manager ::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 1934\n0x4020f208: std::_Function_handler ::_M_invoke(std::_Any_data const&) at c:\\users\\matobaa\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\1.20.0-26-gb404fb9-2\\xtensa-lx106-elf\\include\\c++\\4.8.2/functional line 2069\n0x40207083: setup at C:\\Users\\matobaa\\Documents\\Arduino\\SpeechRecognitionByESP8266/SpeechRecognitionByESP8266.ino line 260\n0x4020dffb: loop_wrapper at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/core_esp8266_main.cpp line 56\n0x40100970: cont_norm at C:\\Users\\matobaa\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.3.0\\cores\\esp8266/cont.S line 109\n```\n\nhttps://sourceforge.net/p/axtls/code/HEAD/tree/trunk/crypto/bigint.c#l1072 \u3092\u898b\u3066\u307f\u307e\u3059:\n\n```c\nstatic void more_comps(bigint *bi, int n)\n{\n    if (n > bi->max_comps)\n    {\n        bi->max_comps = max(bi->max_comps * 2, n);\n        bi->comps = (comp*)realloc(bi->comps, bi->max_comps * COMP_BYTE_SIZE);\n    }\n\n    if (n > bi->size)\n    {\n        memset(&bi->comps[bi->size], 0, (n-bi->size)*COMP_BYTE_SIZE);\n    }\n\n    bi->size = n;\n}\n```\n\n\u3042\u3089\u3089\u3002realloc\u306b\u5931\u6557\u3059\u308b\u3068 bi->comps \u306b null \u304c\u5165\u3063\u3066\u3001\u305d\u306e\u3042\u3068if\u6587\u5185\u306b\u5165\u308b\u3068memset\u3067SEGV\u3067\u3061\u3083\u3044\u307e\u3059\u306d\u3002\u304a\u898b\u4e8b\u3067\u3057\u305f\u3002\n", "tags": ["ESP8266", "ESP-WROOM-02", "debug"]}