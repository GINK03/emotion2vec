{"tags": ["docker", "swarm", "docker-compose"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306fCrowdWorks Advent Calendar 2016 \u306e1\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002CrowdWorks\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u304c\u6bce\u65e5\u306a\u306b\u304b\u3092\u66f8\u304d\u307e\u3059\u3002\nDocker 1.13\u304c\u305d\u308d\u305d\u308d\u51fa\u305d\u3046\u3067\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u308b\u6642\u70b9\u3067\u306f\u307e\u3060RC\u7248\u3067\u3059\u304c\u3001\u6b63\u5f0f\u7248\u306e\u30ea\u30ea\u30fc\u30b9\u306f2016/12/8\u9803\u306e\u4e88\u5b9a\u3068\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002(\u203b2017/01/20\u8ffd\u8a18\uff1a\u5f53\u521d\u4e88\u5b9a\u3088\u308a\uff11\u30f6\u6708\u3061\u3087\u3063\u3068\u9045\u5ef6\u3057\u3066\u6700\u7d42\u7684\u306b2017/01/18\u306b\u6b63\u5f0f\u7248\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002)\nDocker 1.12\u3067\u306fDocker\u30af\u30e9\u30b9\u30bf\u3092\u7ba1\u7406\u3059\u308bswarm\u304cDocker Engine\u672c\u4f53\u306b\u7d71\u5408\u3055\u308c\u307e\u3057\u305f\u304c\u3001Docker 1.13\u3067\u306f\u305d\u306eswarm\u95a2\u9023\u306e\u591a\u304f\u306e\u6539\u5584\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\u7279\u306b\u6ce8\u76ee\u3059\u3079\u304d\u306fswarm\u30af\u30e9\u30b9\u30bf\u306b\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u307e\u3068\u3081\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b docker stack \u30b3\u30de\u30f3\u30c9\u7fa4\u306eExperimental\u6307\u5b9a\u304c\u5916\u308c\u305f\u3053\u3068\u3068\u3001docker stack deploy --compose-file \u3067 docker-compose.yml \u3092\u76f4\u63a5\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3058\u3083\u306a\u3044\u304b\u306a\u30fc\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u6c17\u306b\u306a\u308b\u5909\u66f4\u70b9\u3068\u65b0\u6a5f\u80fd\u3092\u773a\u3081\u3064\u3064\u3001\u305d\u306e\u3046\u3061\u306e\u4e00\u90e8\u3001\u4e3b\u306bswarm\u95a2\u9023\u3092\u5b9f\u969b\u306b\u8a66\u3057\u3066\u307f\u305f\u3002\n\n\u6c17\u306b\u306a\u308b\u5909\u66f4\u70b9\u3068\u65b0\u6a5f\u80fd\nDocker1.13\u306b\u306f\u591a\u304f\u306e\u5909\u66f4\u70b9\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u5909\u66f4\u70b9\u306f CHANGELOG \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u4ee5\u4e0b\u3067\u306f\u500b\u4eba\u7684\u306b\u6c17\u306b\u306a\u308b\u3082\u306e\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\n\u5206\u985e\u306fCHANGELOG\u306b\u5408\u308f\u305b\u3066\u3044\u307e\u3059\u304c\u3001\u4e26\u3073\u9806\u306f\u82e5\u5e72\u7570\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f1.13.0-rc2\u7248\u6642\u70b9\u306e\u60c5\u5831\u3067\u3042\u308b\u305f\u3081\u3001\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u6642\u70b9\u3067\u306f\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u4e88\u3081\u3054\u627f\u77e5\u304a\u304d\u304f\u3060\u3055\u3044\u3002\n\nRemote API(v1.25)&Client\n\nSupport docker stack deploy from a Compose file #27998\n\nswarm\u30af\u30e9\u30b9\u30bf\u306b docker-compose.yml \u3092\u76f4\u63a5\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nDocker 1.12\u3067docker-compose.yml\u3092swarm\u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306b\u306f\u3001 DAB (Distributed Application Bundle) \u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3001 docker-compose.yml \u3092\u4e00\u65e6 docker-compose bundle \u3067 .dab \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u304b\u3089 docker stack deploy \u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3093\u3060\u3051\u3069\u3001Docker 1.13\u304b\u3089 docker-compose \u30b3\u30de\u30f3\u30c9\u3078\u306e\u4f9d\u5b58\u304c\u306a\u304f\u306a\u308a\u3001\u4e2d\u9593\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306a\u304f docker-compose.yml \u3092\u76f4\u63a5\u8aad\u307f\u8fbc\u3093\u3067swarm\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u305f\u3060build\u306f\u4f7f\u3048\u306a\u304b\u3063\u305f\u308a\u3068\u304b\u73fe\u72b6\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u547d\u4ee4\u306f\u4e00\u90e8\u3067\u9650\u5b9a\u7684\u306a\u306e\u3067\u3001\u65e2\u5b58\u306e\u30ed\u30fc\u30ab\u30eb\u3067\u4f7f\u3063\u3066\u305fdocker-compose.yml\u304c\u306a\u3093\u3067\u3082\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3002build\u306fservice create\u3059\u308b\u524d\u306b\u3069\u3053\u304b\u306bpush\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3057\u3001\u307e\u3041\u69cb\u9020\u4e0a\u3069\u3046\u8003\u3048\u3066\u3082\u96e3\u3057\u3044\u3088\u306d\u3002\n\n\nAdd --env-file flag to docker create service #24844\n\n\ndocker service create \u3067 --env-file \u304c\u6e21\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u9811\u5f35\u3063\u3066bash\u3067\u30eb\u30fc\u30d7\u3057\u3066 -e \u3057\u306a\u304f\u3066\u6e08\u3080\u3002\n\n\nAdd --no-trunc to service/node/stack ps output #25337\n\n\ndocker service ps \u3068\u304b\u3067\u898b\u305f\u3068\u304d\u306b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9014\u4e2d\u3067\u5207\u308c\u3066\u3066inspect\u3057\u306a\u3044\u3068\u5168\u6587\u898b\u3048\u306a\u304b\u3063\u305f\u306e\u304c\u3001--no-trunc \u6307\u5b9a\u3059\u308b\u3068\u7701\u7565\u305b\u305a\u306b\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u30c7\u30d0\u30c3\u30b0\u6357\u308b\u3002\n\n\nAllow client to talk to an older server #27745\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u65b9\u304c\u30b5\u30fc\u30d0\u3088\u308a\u3082API\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u65b0\u3057\u3044\u5834\u5408\u3067\u3082\u3001\u4e92\u63db\u6027\u306e\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u30c0\u30a6\u30f3\u30b0\u30ec\u30fc\u30c9\u3055\u305b\u3066\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u4ed5\u7d44\u307f\u306e\u5c0e\u5165\u3002\u3053\u306e\u6a5f\u80fd\u81ea\u4f53\u304c\u30b5\u30fc\u30d0\u5074\u306b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u3059\u3050\u306b\u306f\u6069\u6075\u306f\u53d7\u3051\u3089\u308c\u306a\u3044\u3051\u3069\u4eca\u5f8c\u306e\u5e03\u77f3\u3002\n\n\n(experimental) Implement checkpoint and restore #22049\n\n\u7a3c\u50cd\u4e2d\u306e\u30b3\u30f3\u30c6\u30ca\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u30ea\u30b9\u30c8\u30a2\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5b9f\u9a13\u3002\u540c\u4e00\u30db\u30b9\u30c8\u5185\u306e\u307f\u3067\u3001\u3044\u308f\u3086\u308blive migration\u7684\u306a\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u307f\u305f\u3044\u3002\n\n\n\n\nSwarm Mode\n\n(experimental) Add docker service logs command to view logs for a service #28089\n\n\u30b5\u30fc\u30d3\u30b9\u5358\u4f4d\u3067docker logs\u3092\u898b\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002fluent\u306a\u3069\u3067\u30ed\u30b0\u96c6\u7d04\u3057\u3066\u306a\u3044\u7d20\u306e\u72b6\u614b\u3060\u3068\u30b3\u30f3\u30c6\u30ca\u5358\u4f4d\u3067docker logs\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304f\u3066\u3081\u3093\u3069\u304f\u3055\u304b\u3063\u305f\u306e\u3060\u3051\u3069\u3001\u30b5\u30fc\u30d3\u30b9\u5358\u4f4d\u3067\u898b\u308c\u308b\u3068\u5730\u5473\u306b\u4fbf\u5229\u3002\n\n\nAdd --force to docker service update #27596\n\n\ndocker service update \u3067\u8a2d\u5b9a\u306b\u4f55\u3082\u5909\u66f4\u304c\u306a\u304f\u3066\u3082 --force \u3067\u8aad\u307f\u8fbc\u307f\u76f4\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u30ea\u30d0\u30e9\u30f3\u30b9\u3055\u305b\u305f\u308a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\nPin images by digest for docker service create and update #28173\n\nlatest\u30bf\u30b0\u306a\u3069\u306e\u52d5\u7684\u306b\u5909\u308f\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u30a4\u30e1\u30fc\u30b8\u304c\u3001\u30b5\u30fc\u30d3\u30b9\u5185\u306e\u30b3\u30f3\u30c6\u30ca\u9593\u3067\u540c\u4e00\u306e\u3082\u306e\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u3001service create/update\u6642\u306e\u30a4\u30e1\u30fc\u30b8\u306e\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u3067\u56fa\u5b9a\u3059\u308b\u3002\u6700\u65b0\u3092pull\u3057\u306a\u304a\u3057\u3066\u66f4\u65b0\u3057\u305f\u3044\u5834\u5408\u306f docker service update --image \u3059\u308c\u3070\u3088\u3044\u307f\u305f\u3044\u3002\n\n\nAdd secret management #27794\n\n\u30b3\u30f3\u30c6\u30ca\u5185\u306b\u79d8\u533f\u60c5\u5831\u3092\u6e21\u3059\u306e\u306b docker secret \u3068\u3044\u3046\u4ed5\u7d44\u307f\u304c\u3067\u304d\u305f\u3002\u5185\u90e8\u7684\u306bswarmkit\u306esecret API\u3092\u4f7f\u3063\u3066\u308b\u306e\u3067\u3001swarm mode\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044\u3088\u3046\u3002\n\n\n\n\nNetworking\n\nAdd --attachable network support to enable docker run to work in swarm-mode overlay network #25962\n\n\ndocker run \u3067\u3082swarm\u306eoverlay network\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u4f55\u304c\u3046\u308c\u3057\u3044\u304b\u3068\u3044\u3046\u3068swarm\u306eservice\u306f\u5e38\u99d0\u3092\u524d\u63d0\u306b\u3057\u3066\u308b\u306e\u3067\u3001\u5358\u767a\u30bf\u30b9\u30af\u3068\u7d44\u307f\u5408\u308f\u305b\u3067\u304d\u306a\u304f\u3066\u4e0d\u4fbf\u3060\u3063\u305f\u306e\u304c\u3001\u3053\u308c\u306b\u3088\u308aoverlay network\u5185\u3067\u5e38\u99d0\u3057\u306a\u3044\u5358\u767a\u30bf\u30b9\u30af\u306f docker run \u3067\u6df7\u305c\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\n\n\nRuntime\n\nAdd --experimental daemon flag to enable experimental features, instead of shipping them in a separate build #27223\n\n\u4ee5\u524d\u306fExperimental\u7248\u306f\u5225\u306e\u30d0\u30a4\u30ca\u30ea\u3068\u3057\u3066\u914d\u5e03\u3055\u308c\u3066\u3044\u305f\u304c\u3001\u540c\u4e00\u30d0\u30a4\u30ca\u30ea\u3068\u306a\u308adockerd\u8d77\u52d5\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5207\u308a\u66ff\u3048\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002Experimental\u306a\u65b0\u6a5f\u80fd\u304c\u8a66\u3057\u3084\u3059\u304f\u306a\u308b\u3002\n\n\nAdd new docker system command with df and prune subcommands for system resource management, as well as docker {container,image,volume,network} prune subcommands #26108 #27525\n\n\ndocker system df \u3068\u3044\u3046\u30c7\u30a3\u30b9\u30af\u4f7f\u7528\u91cf\u306a\u3069\u3092\u7c21\u5358\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u30b3\u30de\u30f3\u30c9\u304c\u3067\u304d\u305f\u3002\n\ndocker system prune \u3068\u3044\u3046\u30b4\u30df\u6d88\u3057\u30b3\u30de\u30f3\u30c9\u304c\u3067\u304d\u305f\u3002docker run\u3067\u3000--rm \u4ed8\u3051\u5fd8\u308c\u3066\u6b8b\u3063\u3061\u3083\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3068\u304b\u3001\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3044Image\u3084Volume\u3001\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044Network\u306a\u3069\u3092\u4e00\u62ec\u3067\u304a\u6383\u9664\u3057\u3066\u304f\u308c\u308b\u3002\u3044\u3044\u304b\u3093\u3058\u306e\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u66f8\u304b\u306a\u304f\u3066\u3088\u304f\u306a\u3063\u305f\u3002\n\n\n\n\nBuilder\n\nAdd capability to specify images used as a cache source on build. These images do not need to have local parent chain and can be pulled from other registries #26839\n\n\ndocker build --cache-from \u3067\u30ed\u30fc\u30ab\u30eb\u306b\u306a\u3044\u30d3\u30eb\u30c9\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30ea\u30e2\u30fc\u30c8\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\n(experimental) Add option to squash image layers to the FROM image after successful builds #22641\n\n\ndocker build --squash \u3067\u30d3\u30eb\u30c9\u6642\u306e\u30a4\u30e1\u30fc\u30b8\u30ec\u30a4\u30e4\u3092\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\n\n\nDEPRECATION\n\nDeprecate MAINTAINER in Dockerfile #25466\n\nDockerfile\u306e MAINTAINER \u547d\u4ee4\u304c\u975e\u63a8\u5968\u306b\u306a\u308a\u307e\u3059\u3002\u3088\u308a\u6c4e\u7528\u7684\u306a LABEL \u3092\u4f7f\u3048\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u3002\u7279\u306b\u8b66\u544a\u304c\u51fa\u305f\u308a\u306f\u3057\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u65e2\u5b58\u306eDockerfile\u306b\u3059\u3050\u306b\u5f71\u97ff\u306f\u306a\u3055\u305d\u3046\u3060\u3051\u3069\u3001\u5c11\u306a\u304f\u3068\u3082\u65b0\u898f\u306bDockerfile\u3092\u66f8\u304f\u5834\u5408\u306f MAINTAINER \u3092\u4f7f\u3046\u306e\u306f\u3084\u3081\u3088\u3046\u3002\n\n\n\n\nCHAGELOG\u306b\u66f8\u3044\u3066\u306a\u3044\u3051\u3069\n\nMove docker stack out of experimental #28677\n\n\ndocker stack \u30b3\u30de\u30f3\u30c9\u7fa4\u304cExperimental\u3067\u306f\u306a\u304f\u306a\u3063\u305f\nrc1\u304b\u3089rc2\u306e\u9593\u306b\u30de\u30fc\u30b8\u3055\u308c\u305f\u304b\u3089\u304b(?)\u73fe\u6642\u70b9\u307e\u3060CHANGELOG\u306b\u66f8\u3044\u3066\u306a\u3044\u3051\u3069\u3001\u4e00\u5fdc\u3053\u3053\u306b\u8f09\u305b\u3066\u304a\u304f\u3002\n\n\n\n\n\u691c\u8a3c\n\u3068\u3044\u3046\u308f\u3051\u3067\u3055\u3063\u305d\u304f\u4e00\u90e8\u306e\u6a5f\u80fd\u3092\u8a66\u3057\u3066\u307f\u305f\u3002\u4e3b\u306bswarm\u95a2\u9023\u306e\u3082\u306e\u3092\u4e2d\u5fc3\u306b\u3002\n\n\u691c\u8a3c\u74b0\u5883\n\u691c\u8a3c\u7528\u306bAWS EC2\u4e0a\u306b Ubuntu 16.04 \u30922\u53f0\u7acb\u3066\u3001node1\u3092swarm\u306emanager\u3001node2\u3092worker\u3068\u3057\u3066\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u88dc\u8db3\u3068\u3057\u3066swarm\u30ce\u30fc\u30c9\u9593\u3067\u4ee5\u4e0b\u306e\u901a\u4fe1\u8a31\u53ef\u304c\u5fc5\u8981\u3067\u3059\u3002\n\nTCP(2377): cluster management communications\nTCP/UDP(7946): communication among nodes\nTCP/UDP(4789): overlay network traffic\n\n\u691c\u8a3c\u6642\u70b9\u306eDocker\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.13.0-rc2\u3067\u3059\u3002\n\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u7248\u3067\u306f\u52d5\u4f5c\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u4e88\u3081\u3054\u627f\u77e5\u304a\u304d\u304f\u3060\u3055\u3044\u3002\nroot@node1:~# cat /etc/lsb-release\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=16.04\nDISTRIB_CODENAME=xenial\nDISTRIB_DESCRIPTION=\"Ubuntu 16.04.1 LTS\"\n\nroot@node1:~# uname -a\nLinux node1 4.4.0-45-generic #66-Ubuntu SMP Wed Oct 19 14:12:37 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n\n\nRC\u7248\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u524d\u306eRC\u7248\u306f test.docker.com \u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \n\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308c\u3070get.docker.com \u304b\u3089\u914d\u5e03\u3055\u308c\u307e\u3059\u3002\nroot@node1:~# curl -fsSL https://test.docker.com/ | sh\n\nroot@node1:~# docker version\nClient:\n Version:      1.13.0-rc2\n API version:  1.25\n Go version:   go1.7.3\n Git commit:   1f9b3ef\n Built:        Wed Nov 23 06:32:39 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:             1.13.0-rc2\n API version:         1.25\n Minimum API version: 1.12\n Go version:          go1.7.3\n Git commit:          1f9b3ef\n Built:               Wed Nov 23 06:32:39 2016\n OS/Arch:             linux/amd64\n Experimental:        false\n\nnode2\u3082\u540c\u69d8\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\nExperimental\u30e2\u30fc\u30c9\u306e\u6709\u52b9\u5316\n\u4e00\u90e8\u306e\u6a5f\u80fd\u306f\u307e\u3060Experimental\u6271\u3044\u3067\u901a\u5e38\u30e2\u30fc\u30c9\u3067\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\u5168\u6a5f\u80fd\u3092\u4f7f\u3046\u306b\u306fExperimental\u30d5\u30e9\u30b0\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\nDocker 1.12\u307e\u3067\u306fExperimental\u7248\u306f\u5225\u306e\u30d0\u30a4\u30ca\u30ea\u3068\u3057\u3066\u914d\u5e03\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\nDocker 1.13\u304b\u3089\u540c\u4e00\u30d0\u30a4\u30ca\u30ea\u3068\u306a\u308adockerd\u8d77\u52d5\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5207\u308a\u66ff\u3048\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nroot@node1:~# vi /etc/docker/daemon.json\nroot@node1:~# cat /etc/docker/daemon.json\n{\n  \"experimental\": true\n}\nroot@node1:~# systemctl restart docker.service\nroot@node1:~# docker version\nClient:\n Version:      1.13.0-rc2\n API version:  1.25\n Go version:   go1.7.3\n Git commit:   1f9b3ef\n Built:        Wed Nov 23 06:32:39 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:             1.13.0-rc2\n API version:         1.25\n Minimum API version: 1.12\n Go version:          go1.7.3\n Git commit:          1f9b3ef\n Built:               Wed Nov 23 06:32:39 2016\n OS/Arch:             linux/amd64\n Experimental:        true\n\nnode2\u3082\u540c\u69d8\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\nswarm\u30af\u30e9\u30b9\u30bf\u306e\u521d\u671f\u5316\nnode1\u3092manager\u3068\u3057\u3066swarm\u30af\u30e9\u30b9\u30bf\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\nroot@node1:~# docker swarm init\nSwarm initialized: current node (emit8i9n4tplyd29ewvta2usy) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join \\\n    --token SWMTKN-1-3u4ig055yrxmyy1apjl1860gstbbaxng6xjiwpjnet6bv0ur2t-56l28ag60taqjsimnybyd0stx \\\n    172.31.9.117:2377\n\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n\nnode2\u3067worker\u3068\u3057\u3066swarm\u30af\u30e9\u30b9\u30bf\u306b\u53c2\u52a0\u3057\u307e\u3059\u3002\nroot@node2:~# docker swarm join \\\n>     --token SWMTKN-1-3u4ig055yrxmyy1apjl1860gstbbaxng6xjiwpjnet6bv0ur2t-56l28ag60taqjsimnybyd0stx \\\n>     172.31.9.117:2377\nThis node joined a swarm as a worker.\n\n\u30af\u30e9\u30b9\u30bf\u306e\u521d\u671f\u5316\u3055\u308c\u3001node1\u304cmanager\u3001node2\u304cworker\u306b\u306a\u3063\u3066\u307e\u3059\u3002\nroot@node1:~# docker node ls\nID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\nb57tzjj8jytnhmw32sy277i70    node2     Ready   Active\nemit8i9n4tplyd29ewvta2usy *  node1     Ready   Active        Leader\n\n\ndocker stack deploy --compose-file\n\u9069\u5f53\u306adocker-compose.yml\u3092\u7528\u610f\u3057\u3066 version: \"3\" \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nroot@node1:~# vi docker-compose.yml\nroot@node1:~# cat docker-compose.yml\nversion: '3'\n\nservices:\n  client:\n    image: tutum/curl\n    command: \"tail -f /dev/null\"\n\n  web:\n    image: nginx\n    ports:\n      - 80\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3059\u3002\nroot@node1:~# docker stack deploy --compose-file ./docker-compose.yml hoge\nCreating network hoge_default\nCreating service hoge_web\nCreating service hoge_client\n\noverlay network\u304c\u4f5c\u6210\u3055\u308c\u3001service\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\nroot@node1:~# docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\nfcbbde5d9b68        bridge              bridge              local\n3c7c466d2a90        docker_gwbridge     bridge              local\n165zncwuahxl        hoge_default        overlay             swarm\n3cfe33f4ace7        host                host                local\nn400ahliwjq2        ingress             overlay             swarm\nee7989b6aa25        none                null                local\n\nroot@node1:~# docker service ls\nID            NAME         MODE        REPLICAS  IMAGE\nil98obja9tu9  hoge_client  replicated  1/1       tutum/curl:latest\nv8ra4btbvlxd  hoge_web     replicated  1/1       nginx:latest\n\nswarm\u30af\u30e9\u30b9\u30bf\u5185\u306emanager\u3068worker\u306b\u5206\u6563\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\nroot@node1:~# docker service ps hoge_client\nNAME                        IMAGE              NODE   DESIRED STATE  CURRENT STATE               ERROR  PORTS\nhoge_client.1.16kh4m2yq51s  tutum/curl:latest  node2  Running        Running about a minute ago\nroot@node1:~# docker service ps hoge_web\nNAME                     IMAGE         NODE   DESIRED STATE  CURRENT STATE               ERROR  PORTS\nhoge_web.1.ns6p315r7w86  nginx:latest  node1  Running        Running about a minute ago\n\n\u3061\u3087\u3063\u3068\u30b3\u30f3\u30c6\u30ca\u5185\u304b\u3089curl\u3092\u6253\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nroot@node2:~# docker ps\nCONTAINER ID        IMAGE                                                                                COMMAND               CREATED             STATUS              PORTS               NAMES\n5c318bb7d464        tutum/curl@sha256:b6f16e88387acd4e6326176b212b3dae63f5b2134e69560d0b0673cfb0fb976f   \"tail -f /dev/null\"   3 minutes ago       Up 3 minutes                            hoge_client.1.16kh4m2yq51styx54ol4efm7a\nroot@node2:~# docker exec -it 5c318bb7d464 /bin/bash\nroot@5c318bb7d464:/# curl http://web/\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n\n\u3061\u3083\u3093\u3068\u30ce\u30fc\u30c9\u3092\u307e\u305f\u3044\u3067\u30af\u30e9\u30b9\u30bf\u5185\u3067\u901a\u4fe1\u3067\u304d\u3066\u307e\u3059\u306d\u3002\n\u3053\u306e version: \"3\" \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3060\u3051\u3069\u3001 \u8a66\u3057\u306b build \u3068\u304b\u6307\u5b9a\u3059\u308b\u3068\u3053\u3093\u306a\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u3066\u3001\nIgnoring unsupported options: build\n\n\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u306a\u3044\u3082\u306e\u3092\u6307\u5b9a\u3059\u308b\u3068\u6012\u3089\u308c\u308b\u3088\u3046\u3002\n\u3053\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5410\u3044\u3066\u308b\u306e\u306f\u30b3\u30fc\u30c9\u3092\u773a\u3081\u3066\u307f\u308b\u3068\u3053\u306e\u8fba\u3067\u3001\nhttps://github.com/docker/docker/blob/1f9b3ef9e9c74c2905780ac5347d018646a20022/cli/command/stack/deploy.go#L92\n\u30b3\u30fc\u30c9\u3092\u8fbf\u3063\u3066\u3044\u304f\u3068\u3053\u306e\u8fba\u304c\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u3093\u3060\u3051\u3069\u3001\nhttps://github.com/docker/docker/blob/1f9b3ef9e9c74c2905780ac5347d018646a20022/vendor/github.com/aanand/compose-file/types/types.go#L7-L44\n\u73fe\u72b6\u4f55\u304c\u4f7f\u3048\u3066\u4f55\u304c\u4f7f\u3048\u306a\u3044\u306e\u304b\u306f\u3001\u305d\u306e\u3046\u3061\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3061\u3083\u3093\u3068\u6574\u5099\u3055\u308c\u308b\u3093\u3058\u3083\u306a\u304b\u308d\u3046\u304b\u3002\n\u307e\u3060\u51fa\u6765\u305f\u3066\u30db\u30e4\u30db\u30e4\u611f\u304c\u3042\u308a\u307e\u3059\u306d\u3002\n(\u203b2017/01/20\u8ffd\u8a18\uff1acompose\u306ev3\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3082\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u3055\u308c\u307e\u3057\u305f)\n\ndocker service logs\nDocker1.12\u307e\u3067\u306f\u30b3\u30f3\u30c6\u30ca\u5358\u4f4ddocker logs\u3059\u308b\u3057\u304b\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u30b5\u30fc\u30d3\u30b9\u5358\u4f4d\u3067\u30ed\u30b0\u304c\u898b\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u5730\u5473\u306b\u3046\u308c\u3057\u3044\u3002\nroot@node1:~# docker service logs -f hoge_web\nhoge_web.1.ns6p315r7w86@node1    | 10.0.0.5 - - [26/Nov/2016:04:14:28 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.35.0\" \"-\"\n\n\ndocker network create --attachable\ndocker run\u3067\u5148\u7a0b\u306eoverlay network\u306b\u63a5\u7d9a\u3057\u3088\u3046\u3068\u3001\u3068\u308a\u3042\u3048\u305a\u8a66\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u6709\u52b9\u3067\u306f\u306a\u304b\u3063\u305f\u3002\nroot@node1:~# docker run -it --rm --net hoge_default tutum/curl curl http://web/\ndocker: Error response from daemon: Could not attach to network hoge_default: rpc error: code = 7 desc = network hoge_default not manually attachable.\n\n\u3069\u3046\u3084\u3089 docker network create \u3059\u308b\u3068\u304d --attachable \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3068\u3001\u901a\u5e38\u306edocker run\u3067\u3082\u63a5\u7d9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3055\u3063\u304d\u4f5c\u3063\u305fnetwork\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Attachable: false \u306b\u306a\u3063\u3066\u3044\u3066\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002 \nroot@node1:~# docker network inspect --format=\"{{ .Attachable }}\" hoge_default\nfalse\n\ndocker network update \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u306f\u73fe\u72b6\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u691c\u8a3c\u7528\u306b\u5225\u306enetwork\u3092\u4f5c\u3063\u3066\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nroot@node1:~# docker network create --driver overlay fuga --attachable\n4gu9jty5f5mib3m8zeab7bel2\nroot@node1:~# docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\nfcbbde5d9b68        bridge              bridge              local\n3c7c466d2a90        docker_gwbridge     bridge              local\n4gu9jty5f5mi        fuga                overlay             swarm\n165zncwuahxl        hoge_default        overlay             swarm\n3cfe33f4ace7        host                host                local\nn400ahliwjq2        ingress             overlay             swarm\nee7989b6aa25        none                null                local\nroot@node1:~# docker service create --network fuga -p 80 --name fuga_nginx nginx\nvg7dmcl1a3ty633lhatyakypp\nroot@node1:~# docker service ps fuga_nginx\nNAME                       IMAGE         NODE   DESIRED STATE  CURRENT STATE           ERROR  PORTS\nfuga_nginx.1.itkn421x5dt0  nginx:latest  node1  Running        Running 15 seconds ago\n\n\u4f5c\u3063\u305foverlay network\u4e0a\u3067docker run\u3057\u3066\u307f\u307e\u3059\u3002\nroot@node1:~# docker run -it --rm --net fuga tutum/curl curl http://fuga_nginx/\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n\ndocker run\u3067\u3082overlay network\u306b\u63a5\u7d9a\u3067\u304d\u3066\u307e\u3059\u306d\u3002\n\ndocker service update --force\n\u9069\u5f53\u306a\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u6570\u30922\u500b\u306b\u3057\u307e\u3059\u3002\nroot@node1:~# docker service create --replicas 2 --name test nginx\nb9pfgwe8o0o0jav7acqywj78q\nroot@node1:~# docker service ls\nID            NAME  MODE        REPLICAS  IMAGE\nb9pfgwe8o0o0  test  replicated  2/2       nginx:latest\n\nnode1/node2\u306b\u305d\u308c\u305e\u308c\u5206\u6563\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nroot@node1:~# docker service ps test\nNAME                 IMAGE         NODE   DESIRED STATE  CURRENT STATE          ERROR  PORTS\ntest.1.gqik60uihoh2  nginx:latest  node1  Running        Running 9 seconds ago\ntest.2.ttfi9a0bsh9n  nginx:latest  node2  Running        Running 9 seconds ago\n\n\u308f\u3056\u3068\u30d0\u30e9\u30f3\u30b9\u3092\u5d29\u3059\u305f\u3081\u306b\u4e00\u6642\u7684\u306bnode2\u3092drain\u3057\u3066active\u306b\u623b\u3057\u307e\u3059\u3002\nroot@node1:~# docker node update --availability drain node2\nnode2\nroot@node1:~# docker node ls\nID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\nb57tzjj8jytnhmw32sy277i70    node2     Ready   Drain\nemit8i9n4tplyd29ewvta2usy *  node1     Ready   Active        Leader\nroot@node1:~# docker node update --availability active node2\nnode2\nroot@node1:~# docker node ls\nID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\nb57tzjj8jytnhmw32sy277i70    node2     Ready   Active\nemit8i9n4tplyd29ewvta2usy *  node1     Ready   Active        Leader\n\nnode1\u306b\u504f\u3063\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3057\u305f\nroot@node1:~# docker service ps test\nNAME                 IMAGE         NODE   DESIRED STATE  CURRENT STATE           ERROR  PORTS\ntest.1.gqik60uihoh2  nginx:latest  node1  Running        Running 2 minutes ago\ntest.2.plgci5ln455x  nginx:latest  node1  Running        Running 36 seconds ago\n\nservice update --force \u3067\u30ea\u30d5\u30c3\u30b7\u30e5\u3057\u3066\u30ea\u30d0\u30e9\u30f3\u30b9\u3055\u305b\u3066\u307f\u307e\u3059\u3002\nroot@node1:~# docker service update --force test\ntest\nroot@node1:~# docker service ps test\nNAME                 IMAGE         NODE   DESIRED STATE  CURRENT STATE          ERROR  PORTS\ntest.1.k4x3elvgegab  nginx:latest  node1  Running        Running 7 seconds ago\ntest.2.kx1kk3zehvaq  nginx:latest  node2  Running        Running 8 seconds ago\n\nnode1/node2\u306b\u30ea\u30d0\u30e9\u30f3\u30b9\u3057\u3066\u307e\u3059\u306d\u3002\n\ndocker service create --env-file\n\u9069\u5f53\u306aenv\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\nroot@node1:~# vi test.env\nroot@node1:~# cat test.env\nHOGE=hoge\nFUGA=fuga\n\n--env-file \u3092\u6307\u5b9a\u3057\u3066service\u3092\u4f5c\u308a\u307e\u3059\u3002\nroot@node1:~#  docker service create --env-file test.env --name env_test nginx\n3bfwb56dkfjsvahvkeehlo6kv\nroot@node1:~# docker service ps env_test\nNAME                     IMAGE         NODE   DESIRED STATE  CURRENT STATE         ERROR  PORTS\nenv_test.1.08pyx4dkwe6c  nginx:latest  node2  Running        Running 1 second ago\n\n\u3061\u3087\u3063\u3068\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u74b0\u5883\u5909\u6570\u3092\u898b\u3066\u307f\u307e\u3059\u3002\nroot@node2:~# docker ps\nCONTAINER ID        IMAGE                                                                                COMMAND                  CREATED             STATUS              PORTS               NAMES\n7c20ef03306e        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639        \"nginx -g 'daemon ...\"   10 seconds ago      Up 9 seconds        80/tcp, 443/tcp     env_test.1.08pyx4dkwe6cr45ik2rab07s3\nroot@node2:~# docker exec -it 7c20ef03306e /bin/bash\nroot@7c20ef03306e:/# echo $HOGE\nhoge\nroot@7c20ef03306e:/# echo $FUGA\nfuga\n\n\u3061\u3083\u3093\u3068\u6e21\u3055\u308c\u3066\u307e\u3059\u306d\u3002\n\ndocker service ps --no-trunc\n\u3061\u3087\u3063\u3068\u308f\u3056\u3068\u5b58\u5728\u3057\u306a\u3044\u30a4\u30e1\u30fc\u30b8\u540d\u3092\u6307\u5b9a\u3057\u3066service create\u3057\u3066\u307f\u307e\u3059\u3002\nroot@node1:~# docker service create --name piyo minamijoyo/hoge:latest\nunable to pin image minamijoyo/hoge:latest to digest: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n\n7cpsarjquhz6crpabjnq3jotp\n\n\u306a\u3093\u3060\u304b\u8a8d\u8a3c\u30a8\u30e9\u30fc\u3063\u307d\u3044\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3057\u305f\u3002 \ndocker service ps \u3067\u898b\u308b\u3068\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9014\u4e2d\u3067\u5207\u308c\u3066\u3044\u307e\u3059\u3002\nroot@node1:~# docker service ps -a piyo\nNAME                     IMAGE                   NODE   DESIRED STATE  CURRENT STATE                    ERROR                             PORTS\npiyo.1.w2p0hsgdumgg      minamijoyo/hoge:latest  node1  Ready          Rejected less than a second ago  \"No such image: minamijoyo/hog\u2026\"\n \\_ piyo.1.pp9ngzgjn6li  minamijoyo/hoge:latest  node1  Shutdown       Rejected 5 seconds ago           \"No such image: minamijoyo/hog\u2026\"\n \\_ piyo.1.45el83wvoqm8  minamijoyo/hoge:latest  node1  Shutdown       Rejected 10 seconds ago          \"No such image: minamijoyo/hog\u2026\"\n \\_ piyo.1.3cl1epnuoman  minamijoyo/hoge:latest  node2  Shutdown       Rejected 15 seconds ago          \"No such image: minamijoyo/hog\u2026\"\n \\_ piyo.1.rk9u5u86pwjh  minamijoyo/hoge:latest  node1  Shutdown       Rejected 20 seconds ago          \"No such image: minamijoyo/hog\u2026\"\n\n\u3053\u306e\u4f8b\u3060\u3068\u5148\u982d\u306e No such image: minamijoyo/hog\u2026 \u3067\u306a\u3093\u3068\u306a\u304f\u96f0\u56f2\u6c17\u308f\u304b\u308a\u307e\u3059\u304c\u3001\u5168\u6587\u3092\u898b\u308b\u306b\u306f\u500b\u5225\u306b docker inspect \u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3053\u308c\u304c\u3001 --no-trunc \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3068\u30a8\u30e9\u30fc\u306e\u5168\u6587 No such image: minamijoyo/hoge:latest \u304c\u898b\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3061\u3087\u3063\u3068\u3053\u306e\u4f8b\u3060\u3068\u5206\u304b\u308a\u3065\u3089\u304b\u3063\u305f\u3067\u3059\u304c\u3001service\u304c\u3046\u307e\u304f\u8d77\u52d5\u3067\u304d\u306a\u3044\u3068\u304d\u306b\u30c7\u30d0\u30c3\u30b0\u304c\u6357\u308b\u306e\u3067\u3001\u5730\u5473\u3060\u3051\u3069\u3046\u308c\u3057\u3044\u3002\nroot@node1:~# docker service ps -a --no-trunc piyo\nNAME                     IMAGE                   NODE   DESIRED STATE  CURRENT STATE                    ERROR                                    PORTS\npiyo.1.i3k9hy34f8kk      minamijoyo/hoge:latest  node2  Ready          Assigned less than a second ago                 \n \\_ piyo.1.i12rv7ce5exx  minamijoyo/hoge:latest  node2  Shutdown       Rejected 3 seconds ago           \"No such image: minamijoyo/hoge:latest\"\n \\_ piyo.1.w2p0hsgdumgg  minamijoyo/hoge:latest  node1  Shutdown       Rejected 8 seconds ago           \"No such image: minamijoyo/hoge:latest\"\n \\_ piyo.1.pp9ngzgjn6li  minamijoyo/hoge:latest  node1  Shutdown       Rejected 13 seconds ago          \"No such image: minamijoyo/hoge:latest\"\n \\_ piyo.1.45el83wvoqm8  minamijoyo/hoge:latest  node1  Shutdown       Rejected 18 seconds ago          \"No such image: minamijoyo/hoge:latest\"\n \\_ piyo.1.3cl1epnuoman  minamijoyo/hoge:latest  node2  Shutdown       Rejected 23 seconds ago          \"No such image: minamijoyo/hoge:latest\"\n\n\ndocker system df\ndocker system df \u3068\u3044\u3046\u30c7\u30a3\u30b9\u30af\u4f7f\u7528\u91cf\u3092\u7c21\u5358\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u30b3\u30de\u30f3\u30c9\u304c\u5897\u3048\u307e\u3057\u305f\u3002\nroot@node1:~# docker system df\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              3                   2                   410.7 MB            224.4 MB (54%)\nContainers          8                   1                   2 B                 0 B (0%)\nLocal Volumes       0                   0                   0 B                 0 B\n\n\u5185\u8a33\u3092\u51fa\u3059\u306b\u306f -v \u3092\u3064\u3051\u308b\nroot@node1:~# docker system df -v\nImages space usage:\n\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE                SHARED SIZE         UNIQUE SIZE         CONTAINERS\nnginx               latest              05a60462f8ba        2 weeks ago         181.5 MB            0 B                 181.5 MB            4\nalpine              latest              baa5d63471ea        5 weeks ago         4.803 MB            0 B                 4.803 MB            4\ntutum/curl          latest              01176385d84a        2 years ago         224.4 MB            0 B                 224.4 MB            0\n\nContainers space usage:\n\nCONTAINER ID        IMAGE                                                                           COMMAND                  LOCAL VOLUMES       SIZE                CREATED              STATUS                          NAMES\n1b00b00dab7c        alpine                                                                          \"echo hoge\"              0                   0 B                 17 seconds ago       Exited (0) 17 seconds ago       admiring_einstein\nc1524ac0883b        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639   \"nginx -g 'daemon ...\"   0                   2 B                 About a minute ago   Up About a minute               hoge_web.1.tyepsp0wz953ng4a7yxd0zc7f\n72b55401186a        nginx                                                                           \"nginx -V\"               0                   0 B                 5 minutes ago        Created                         small_ptolemy\ne9b699272ec0        nginx                                                                           \"nginx -V\"               0                   0 B                 7 minutes ago        Created                         furious_lalande\nf4af143e3c9d        alpine                                                                          \"/bin/sh\"                0                   0 B                 8 minutes ago        Created                         serene_lewin\nfbf1ca0e64aa        alpine                                                                          \"echo hoge\"              0                   0 B                 9 minutes ago        Created                         evil_jang\nad5655d62262        alpine                                                                          \"echo hoge\"              0                   0 B                 9 minutes ago        Created                         drunk_curie\ne53936b3beee        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639   \"nginx -g 'daemon ...\"   0                   0 B                 5 hours ago          Exited (0) About a minute ago   hoge_web.1.ns6p315r7w86yri20wuoyy948\n\nLocal Volumes space usage:\n\nVOLUME NAME         LINKS               SIZE\n\n\ndocker system prune\ndocker run\u3067\u3000--rm \u4ed8\u3051\u5fd8\u308c\u3066\u6b8b\u3063\u3061\u3083\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3068\u304b\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3044Image\u3084Volume\u3001\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044Network\u306a\u3069\u3092\u4e00\u62ec\u3067\u304a\u6383\u9664\u3057\u3066\u304f\u308c\u308b docker system prune \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u304c\u3067\u304d\u307e\u3057\u305f\u3002\nroot@node1:~# docker system df\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              3                   2                   410.7 MB            224.4 MB (54%)\nContainers          8                   1                   2 B                 0 B (0%)\nLocal Volumes       0                   0                   0 B                 0 B\n\nroot@node1:~# docker system prune\nWARNING! This will remove:\n        - all stopped containers\n        - all volumes not used by at least one container\n        - all networks not used by at least one container\n        - all dangling images\nAre you sure you want to continue? [y/N] y\nDeleted Containers:\n1b00b00dab7c1d39821bf35f653cb34be4e560dcb52ad426decb94c80a2e7a21\n72b55401186aaf0283653227c66eaa2f3c5ba0885fb05a78b88b249c72203e6b\ne9b699272ec03d65a6831d80049e5d72aa1ed7d6de0b9211e015c1d30ccfd637\nf4af143e3c9d987b92128659f0a9070e0470905fb1fa7f66396fa19ca0bad06f\nfbf1ca0e64aae36b37706768eb6c0613ff98862e841fdf5fcffc38f594ecff7c\nad5655d6226234676694450f24047e3f7b874e139dbfac3833e3f20074c12474\ne53936b3beeee06ae464ca625f42d81064c2d45e8dfdcf7e064722c848a66032\n\nDeleted Networks:\nfuga\n\nTotal reclaimed space: 0 B\n\nroot@node1:~# docker system df\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              3                   1                   410.7 MB            229.2 MB (55%)\nContainers          1                   1                   2 B                 0 B (0%)\nLocal Volumes       0                   0                   0 B                 0 B\n\n\u305d\u308c\u305e\u308c\u500b\u5225\u306b\u524a\u9664\u3059\u308b docker {container,image,volume,network} prune \u30b3\u30de\u30f3\u30c9\u3082\u3042\u308b\u3002\n\ndocker secret\n\u6a5f\u5bc6\u60c5\u5831\u3092\u30b3\u30f3\u30c6\u30ca\u5185\u306b\u5b89\u5168\u306b\u53d7\u3051\u6e21\u3057\u3059\u308b\u305f\u3081\u306b docker secret \u3068\u3044\u3046\u4ed5\u7d44\u307f\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u74b0\u5883\u5909\u6570\u3060\u3068inspect\u3059\u308b\u3068\u898b\u3048\u3061\u3083\u3046\u3057\u306d\u3002\u5185\u90e8\u7684\u306b\u306f\u73fe\u72b6swarm\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u306e\u3067\u4eca\u306e\u3068\u3053\u308dswarm mode\u4ee5\u5916\u3067\u306f\u4f7f\u3048\u306a\u3044\u3088\u3046\u3067\u3059\u3002\ndocker secret create \u3067\u4f5c\u308a\u307e\u3059\u3002\nroot@node1:~# echo \"top_secret\" | docker secret create ssh-dev\nhebw7cvza4lk2gzprdljmvvhv\n\ndocker service create --secret \u3067\u6e21\u3059\u3002\nroot@node1:~# docker service create --name nginx --secret ssh-dev nginx\n5sn2d8c0aljkxwfg0antdntf4\n\n\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u898b\u3066\u307f\u308b\u3002\nroot@node1:~# docker ps\nCONTAINER ID        IMAGE                                                                           COMMAND                  CREATED             STATUS              PORTS               NAMES\nf9ff7e041386        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639   \"nginx -g 'daemon ...\"   39 seconds ago      Up 33 seconds       80/tcp, 443/tcp     nginx.1.l4l7c0s1efvb0aj5q4iudb8sx\nroot@node1:~# docker exec -it f9ff7e041386 /bin/bash\nroot@f9ff7e041386:/# cat /run/secrets/ssh-dev\ntop_secret\n\n\u914d\u7f6e\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001 --secret \u3067\u6e21\u3059\u3068\u304d\u306b target= \u3067\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\nroot@node1:~# docker service create --name nginx --secret source=ssh-dev,target=id_rsa,uid=1000,gid=1000,mode=0400 nginx\n5jsuv5e89crc4esafsh948gjn\n\nroot@node2:~# docker ps\nCONTAINER ID        IMAGE                                                                                COMMAND                  CREATED             STATUS              PORTS               NAMES\n0e3fc7cf18bd        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639        \"nginx -g 'daemon ...\"   12 seconds ago      Up 11 seconds       80/tcp, 443/tcp     nginx.1.z2mw5h7y7olfbl7hsh2ybw5hm\nroot@node2:~# docker exec -it 0e3fc7cf18bd /bin/bash\nroot@0e3fc7cf18bd:/# cat /run/secrets/id_rsa\ntop_secret\n\n\n\u307e\u3068\u3081\n\u3056\u30fc\u3063\u3068\u6c17\u306b\u306a\u308b\u5909\u66f4\u70b9\u3068\u65b0\u6a5f\u80fd\u3092\u898b\u3066\u304d\u307e\u3057\u305f\u304c\u3001Docker1.13\u306b\u306f\u75d2\u3044\u3068\u3053\u308d\u306b\u624b\u304c\u5c4a\u304f\u591a\u304f\u306e\u6539\u5584\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002swarm\u306edocker-compose.yml\u5bfe\u5fdc\u306f\u307e\u3060\u51fa\u6765\u305f\u3066\u30db\u30e4\u30db\u30e4\u611f\u304c\u3042\u308a\u307e\u3059\u304c\u3001Docker\u672c\u4f53\u306b\u30af\u30e9\u30b9\u30bf\u3092\u7ba1\u7406\u3059\u308b\u4ed5\u7d44\u307f\u304c\u3069\u3093\u3069\u3093\u62e1\u5145\u3055\u308c\u3066\u304d\u3066\u4eca\u5f8c\u304c\u697d\u3057\u307f\u3067\u4ed5\u65b9\u304c\u306a\u3044\u3002\n\u3053\u306e\u8a18\u4e8b\u306fCrowdWorks Advent Calendar 2016 \u306e1\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3057\u305f\u3002\u660e\u65e5\u306f@h3_poteto\u306e\u300cDocker swarm\u3067\u69cb\u7bc9\u3059\u308b\u793e\u5185heroku: yadockeri\u300d\u306e\u4e88\u5b9a\u3067\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f[CrowdWorks Advent Calendar 2016](http://qiita.com/advent-calendar/2016/crowdworks) \u306e1\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002[CrowdWorks](https://crowdworks.jp)\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u304c\u6bce\u65e5\u306a\u306b\u304b\u3092\u66f8\u304d\u307e\u3059\u3002\n\nDocker 1.13\u304c\u305d\u308d\u305d\u308d\u51fa\u305d\u3046\u3067\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u308b\u6642\u70b9\u3067\u306f\u307e\u3060RC\u7248\u3067\u3059\u304c\u3001\u6b63\u5f0f\u7248\u306e\u30ea\u30ea\u30fc\u30b9\u306f[2016/12/8\u9803\u306e\u4e88\u5b9a](https://github.com/docker/docker/blob/master/CHANGELOG.md#1130-2016-12-08)\u3068\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002(\u203b2017/01/20\u8ffd\u8a18\uff1a\u5f53\u521d\u4e88\u5b9a\u3088\u308a\uff11\u30f6\u6708\u3061\u3087\u3063\u3068\u9045\u5ef6\u3057\u3066\u6700\u7d42\u7684\u306b2017/01/18\u306b\u6b63\u5f0f\u7248\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002)\n\nDocker 1.12\u3067\u306fDocker\u30af\u30e9\u30b9\u30bf\u3092\u7ba1\u7406\u3059\u308bswarm\u304cDocker Engine\u672c\u4f53\u306b\u7d71\u5408\u3055\u308c\u307e\u3057\u305f\u304c\u3001Docker 1.13\u3067\u306f\u305d\u306eswarm\u95a2\u9023\u306e\u591a\u304f\u306e\u6539\u5584\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\u7279\u306b\u6ce8\u76ee\u3059\u3079\u304d\u306fswarm\u30af\u30e9\u30b9\u30bf\u306b\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u307e\u3068\u3081\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b `docker stack` \u30b3\u30de\u30f3\u30c9\u7fa4\u306eExperimental\u6307\u5b9a\u304c\u5916\u308c\u305f\u3053\u3068\u3068\u3001`docker stack deploy --compose-file` \u3067 `docker-compose.yml` \u3092\u76f4\u63a5\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3058\u3083\u306a\u3044\u304b\u306a\u30fc\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u6c17\u306b\u306a\u308b\u5909\u66f4\u70b9\u3068\u65b0\u6a5f\u80fd\u3092\u773a\u3081\u3064\u3064\u3001\u305d\u306e\u3046\u3061\u306e\u4e00\u90e8\u3001\u4e3b\u306bswarm\u95a2\u9023\u3092\u5b9f\u969b\u306b\u8a66\u3057\u3066\u307f\u305f\u3002\n\n# \u6c17\u306b\u306a\u308b\u5909\u66f4\u70b9\u3068\u65b0\u6a5f\u80fd\nDocker1.13\u306b\u306f\u591a\u304f\u306e\u5909\u66f4\u70b9\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u5909\u66f4\u70b9\u306f [CHANGELOG](https://github.com/docker/docker/blob/master/CHANGELOG.md#1130-2016-12-08) \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u4ee5\u4e0b\u3067\u306f\u500b\u4eba\u7684\u306b\u6c17\u306b\u306a\u308b\u3082\u306e\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\n\u5206\u985e\u306fCHANGELOG\u306b\u5408\u308f\u305b\u3066\u3044\u307e\u3059\u304c\u3001\u4e26\u3073\u9806\u306f\u82e5\u5e72\u7570\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f1.13.0-rc2\u7248\u6642\u70b9\u306e\u60c5\u5831\u3067\u3042\u308b\u305f\u3081\u3001\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u6642\u70b9\u3067\u306f\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u4e88\u3081\u3054\u627f\u77e5\u304a\u304d\u304f\u3060\u3055\u3044\u3002\n\n## Remote API(v1.25)&Client\n* Support `docker stack deploy` from a Compose file [#27998](https://github.com/docker/docker/pull/27998)\n    * swarm\u30af\u30e9\u30b9\u30bf\u306b `docker-compose.yml` \u3092\u76f4\u63a5\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n    * Docker 1.12\u3067docker-compose.yml\u3092swarm\u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306b\u306f\u3001 [DAB (Distributed Application Bundle)](https://blog.docker.com/2016/06/docker-app-bundle/) \u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3001 `docker-compose.yml` \u3092\u4e00\u65e6 `docker-compose bundle` \u3067 `.dab` \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u304b\u3089 `docker stack deploy` \u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3093\u3060\u3051\u3069\u3001Docker 1.13\u304b\u3089 `docker-compose` \u30b3\u30de\u30f3\u30c9\u3078\u306e\u4f9d\u5b58\u304c\u306a\u304f\u306a\u308a\u3001\u4e2d\u9593\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306a\u304f `docker-compose.yml` \u3092\u76f4\u63a5\u8aad\u307f\u8fbc\u3093\u3067swarm\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n    * \u305f\u3060build\u306f\u4f7f\u3048\u306a\u304b\u3063\u305f\u308a\u3068\u304b\u73fe\u72b6\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u547d\u4ee4\u306f\u4e00\u90e8\u3067\u9650\u5b9a\u7684\u306a\u306e\u3067\u3001\u65e2\u5b58\u306e\u30ed\u30fc\u30ab\u30eb\u3067\u4f7f\u3063\u3066\u305fdocker-compose.yml\u304c\u306a\u3093\u3067\u3082\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3002build\u306fservice create\u3059\u308b\u524d\u306b\u3069\u3053\u304b\u306bpush\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3057\u3001\u307e\u3041\u69cb\u9020\u4e0a\u3069\u3046\u8003\u3048\u3066\u3082\u96e3\u3057\u3044\u3088\u306d\u3002\n* Add --env-file flag to docker create service [#24844](https://github.com/docker/docker/pull/24844)\n    * `docker service create` \u3067 `--env-file` \u304c\u6e21\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u9811\u5f35\u3063\u3066bash\u3067\u30eb\u30fc\u30d7\u3057\u3066 `-e` \u3057\u306a\u304f\u3066\u6e08\u3080\u3002\n* Add --no-trunc to service/node/stack ps output [#25337](https://github.com/docker/docker/pull/25337)\n    * `docker service ps` \u3068\u304b\u3067\u898b\u305f\u3068\u304d\u306b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9014\u4e2d\u3067\u5207\u308c\u3066\u3066inspect\u3057\u306a\u3044\u3068\u5168\u6587\u898b\u3048\u306a\u304b\u3063\u305f\u306e\u304c\u3001`--no-trunc` \u6307\u5b9a\u3059\u308b\u3068\u7701\u7565\u305b\u305a\u306b\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u30c7\u30d0\u30c3\u30b0\u6357\u308b\u3002\n* Allow client to talk to an older server [#27745](https://github.com/docker/docker/pull/27745)\n    * \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u65b9\u304c\u30b5\u30fc\u30d0\u3088\u308a\u3082API\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u65b0\u3057\u3044\u5834\u5408\u3067\u3082\u3001\u4e92\u63db\u6027\u306e\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u30c0\u30a6\u30f3\u30b0\u30ec\u30fc\u30c9\u3055\u305b\u3066\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u4ed5\u7d44\u307f\u306e\u5c0e\u5165\u3002\u3053\u306e\u6a5f\u80fd\u81ea\u4f53\u304c\u30b5\u30fc\u30d0\u5074\u306b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u3059\u3050\u306b\u306f\u6069\u6075\u306f\u53d7\u3051\u3089\u308c\u306a\u3044\u3051\u3069\u4eca\u5f8c\u306e\u5e03\u77f3\u3002\n* (experimental) Implement checkpoint and restore [#22049](https://github.com/docker/docker/pull/22049)\n    * \u7a3c\u50cd\u4e2d\u306e\u30b3\u30f3\u30c6\u30ca\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u30ea\u30b9\u30c8\u30a2\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5b9f\u9a13\u3002\u540c\u4e00\u30db\u30b9\u30c8\u5185\u306e\u307f\u3067\u3001\u3044\u308f\u3086\u308blive migration\u7684\u306a\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u307f\u305f\u3044\u3002\n\n## Swarm Mode\n* (experimental) Add docker service logs command to view logs for a service [#28089](https://github.com/docker/docker/pull/28089)\n    * \u30b5\u30fc\u30d3\u30b9\u5358\u4f4d\u3067docker logs\u3092\u898b\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002fluent\u306a\u3069\u3067\u30ed\u30b0\u96c6\u7d04\u3057\u3066\u306a\u3044\u7d20\u306e\u72b6\u614b\u3060\u3068\u30b3\u30f3\u30c6\u30ca\u5358\u4f4d\u3067docker logs\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304f\u3066\u3081\u3093\u3069\u304f\u3055\u304b\u3063\u305f\u306e\u3060\u3051\u3069\u3001\u30b5\u30fc\u30d3\u30b9\u5358\u4f4d\u3067\u898b\u308c\u308b\u3068\u5730\u5473\u306b\u4fbf\u5229\u3002\n* Add --force to docker service update [#27596](https://github.com/docker/docker/pull/27596)\n    * `docker service update` \u3067\u8a2d\u5b9a\u306b\u4f55\u3082\u5909\u66f4\u304c\u306a\u304f\u3066\u3082 `--force` \u3067\u8aad\u307f\u8fbc\u307f\u76f4\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u30ea\u30d0\u30e9\u30f3\u30b9\u3055\u305b\u305f\u308a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n* Pin images by digest for docker service create and update [#28173](https://github.com/docker/docker/pull/28173)\n    * latest\u30bf\u30b0\u306a\u3069\u306e\u52d5\u7684\u306b\u5909\u308f\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u30a4\u30e1\u30fc\u30b8\u304c\u3001\u30b5\u30fc\u30d3\u30b9\u5185\u306e\u30b3\u30f3\u30c6\u30ca\u9593\u3067\u540c\u4e00\u306e\u3082\u306e\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u3001service create/update\u6642\u306e\u30a4\u30e1\u30fc\u30b8\u306e\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u3067\u56fa\u5b9a\u3059\u308b\u3002\u6700\u65b0\u3092pull\u3057\u306a\u304a\u3057\u3066\u66f4\u65b0\u3057\u305f\u3044\u5834\u5408\u306f `docker service update --image` \u3059\u308c\u3070\u3088\u3044\u307f\u305f\u3044\u3002\n* Add secret management [#27794](https://github.com/docker/docker/pull/27794)\n    * \u30b3\u30f3\u30c6\u30ca\u5185\u306b\u79d8\u533f\u60c5\u5831\u3092\u6e21\u3059\u306e\u306b `docker secret` \u3068\u3044\u3046\u4ed5\u7d44\u307f\u304c\u3067\u304d\u305f\u3002\u5185\u90e8\u7684\u306bswarmkit\u306esecret API\u3092\u4f7f\u3063\u3066\u308b\u306e\u3067\u3001swarm mode\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044\u3088\u3046\u3002\n\n## Networking\n* Add --attachable network support to enable docker run to work in swarm-mode overlay network [#25962](https://github.com/docker/docker/pull/25962)\n    * `docker run` \u3067\u3082swarm\u306eoverlay network\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u4f55\u304c\u3046\u308c\u3057\u3044\u304b\u3068\u3044\u3046\u3068swarm\u306eservice\u306f\u5e38\u99d0\u3092\u524d\u63d0\u306b\u3057\u3066\u308b\u306e\u3067\u3001\u5358\u767a\u30bf\u30b9\u30af\u3068\u7d44\u307f\u5408\u308f\u305b\u3067\u304d\u306a\u304f\u3066\u4e0d\u4fbf\u3060\u3063\u305f\u306e\u304c\u3001\u3053\u308c\u306b\u3088\u308aoverlay network\u5185\u3067\u5e38\u99d0\u3057\u306a\u3044\u5358\u767a\u30bf\u30b9\u30af\u306f `docker run` \u3067\u6df7\u305c\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n## Runtime\n* Add --experimental daemon flag to enable experimental features, instead of shipping them in a separate build [#27223](https://github.com/docker/docker/pull/27223)\n    * \u4ee5\u524d\u306fExperimental\u7248\u306f\u5225\u306e\u30d0\u30a4\u30ca\u30ea\u3068\u3057\u3066\u914d\u5e03\u3055\u308c\u3066\u3044\u305f\u304c\u3001\u540c\u4e00\u30d0\u30a4\u30ca\u30ea\u3068\u306a\u308adockerd\u8d77\u52d5\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5207\u308a\u66ff\u3048\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002Experimental\u306a\u65b0\u6a5f\u80fd\u304c\u8a66\u3057\u3084\u3059\u304f\u306a\u308b\u3002\n* Add new docker system command with df and prune subcommands for system resource management, as well as docker {container,image,volume,network} prune subcommands [#26108](https://github.com/docker/docker/pull/26108) [#27525](https://github.com/docker/docker/pull/27525)\n    * `docker system df` \u3068\u3044\u3046\u30c7\u30a3\u30b9\u30af\u4f7f\u7528\u91cf\u306a\u3069\u3092\u7c21\u5358\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u30b3\u30de\u30f3\u30c9\u304c\u3067\u304d\u305f\u3002\n    * `docker system prune` \u3068\u3044\u3046\u30b4\u30df\u6d88\u3057\u30b3\u30de\u30f3\u30c9\u304c\u3067\u304d\u305f\u3002docker run\u3067\u3000`--rm` \u4ed8\u3051\u5fd8\u308c\u3066\u6b8b\u3063\u3061\u3083\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3068\u304b\u3001\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3044Image\u3084Volume\u3001\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044Network\u306a\u3069\u3092\u4e00\u62ec\u3067\u304a\u6383\u9664\u3057\u3066\u304f\u308c\u308b\u3002\u3044\u3044\u304b\u3093\u3058\u306e\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u66f8\u304b\u306a\u304f\u3066\u3088\u304f\u306a\u3063\u305f\u3002\n\n## Builder\n* Add capability to specify images used as a cache source on build. These images do not need to have local parent chain and can be pulled from other registries [#26839](https://github.com/docker/docker/pull/26839)\n    * `docker build --cache-from` \u3067\u30ed\u30fc\u30ab\u30eb\u306b\u306a\u3044\u30d3\u30eb\u30c9\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30ea\u30e2\u30fc\u30c8\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n* (experimental) Add option to squash image layers to the FROM image after successful builds [#22641](https://github.com/docker/docker/pull/22641)\n    * `docker build --squash` \u3067\u30d3\u30eb\u30c9\u6642\u306e\u30a4\u30e1\u30fc\u30b8\u30ec\u30a4\u30e4\u3092\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n## DEPRECATION\n* Deprecate MAINTAINER in Dockerfile [#25466](https://github.com/docker/docker/pull/25466)\n    * Dockerfile\u306e `MAINTAINER` \u547d\u4ee4\u304c\u975e\u63a8\u5968\u306b\u306a\u308a\u307e\u3059\u3002\u3088\u308a\u6c4e\u7528\u7684\u306a `LABEL` \u3092\u4f7f\u3048\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u3002\u7279\u306b\u8b66\u544a\u304c\u51fa\u305f\u308a\u306f\u3057\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u65e2\u5b58\u306eDockerfile\u306b\u3059\u3050\u306b\u5f71\u97ff\u306f\u306a\u3055\u305d\u3046\u3060\u3051\u3069\u3001\u5c11\u306a\u304f\u3068\u3082\u65b0\u898f\u306bDockerfile\u3092\u66f8\u304f\u5834\u5408\u306f `MAINTAINER` \u3092\u4f7f\u3046\u306e\u306f\u3084\u3081\u3088\u3046\u3002\n\n## CHAGELOG\u306b\u66f8\u3044\u3066\u306a\u3044\u3051\u3069\n* Move `docker stack` out of experimental [#28677](https://github.com/docker/docker/pull/28677)\n    * `docker stack` \u30b3\u30de\u30f3\u30c9\u7fa4\u304cExperimental\u3067\u306f\u306a\u304f\u306a\u3063\u305f\n    * rc1\u304b\u3089rc2\u306e\u9593\u306b\u30de\u30fc\u30b8\u3055\u308c\u305f\u304b\u3089\u304b(?)\u73fe\u6642\u70b9\u307e\u3060CHANGELOG\u306b\u66f8\u3044\u3066\u306a\u3044\u3051\u3069\u3001\u4e00\u5fdc\u3053\u3053\u306b\u8f09\u305b\u3066\u304a\u304f\u3002\n\n# \u691c\u8a3c\n\u3068\u3044\u3046\u308f\u3051\u3067\u3055\u3063\u305d\u304f\u4e00\u90e8\u306e\u6a5f\u80fd\u3092\u8a66\u3057\u3066\u307f\u305f\u3002\u4e3b\u306bswarm\u95a2\u9023\u306e\u3082\u306e\u3092\u4e2d\u5fc3\u306b\u3002\n\n## \u691c\u8a3c\u74b0\u5883\n\u691c\u8a3c\u7528\u306bAWS EC2\u4e0a\u306b Ubuntu 16.04 \u30922\u53f0\u7acb\u3066\u3001node1\u3092swarm\u306emanager\u3001node2\u3092worker\u3068\u3057\u3066\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u88dc\u8db3\u3068\u3057\u3066swarm\u30ce\u30fc\u30c9\u9593\u3067\u4ee5\u4e0b\u306e\u901a\u4fe1\u8a31\u53ef\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n* TCP(2377): cluster management communications\n* TCP/UDP(7946): communication among nodes\n* TCP/UDP(4789): overlay network traffic\n \n\u691c\u8a3c\u6642\u70b9\u306eDocker\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.13.0-rc2\u3067\u3059\u3002\n\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u7248\u3067\u306f\u52d5\u4f5c\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u4e88\u3081\u3054\u627f\u77e5\u304a\u304d\u304f\u3060\u3055\u3044\u3002\n\n```\nroot@node1:~# cat /etc/lsb-release\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=16.04\nDISTRIB_CODENAME=xenial\nDISTRIB_DESCRIPTION=\"Ubuntu 16.04.1 LTS\"\n\nroot@node1:~# uname -a\nLinux node1 4.4.0-45-generic #66-Ubuntu SMP Wed Oct 19 14:12:37 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n## RC\u7248\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u524d\u306eRC\u7248\u306f `test.docker.com` \u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \n\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308c\u3070`get.docker.com` \u304b\u3089\u914d\u5e03\u3055\u308c\u307e\u3059\u3002\n\n```\nroot@node1:~# curl -fsSL https://test.docker.com/ | sh\n```\n\n```\nroot@node1:~# docker version\nClient:\n Version:      1.13.0-rc2\n API version:  1.25\n Go version:   go1.7.3\n Git commit:   1f9b3ef\n Built:        Wed Nov 23 06:32:39 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:             1.13.0-rc2\n API version:         1.25\n Minimum API version: 1.12\n Go version:          go1.7.3\n Git commit:          1f9b3ef\n Built:               Wed Nov 23 06:32:39 2016\n OS/Arch:             linux/amd64\n Experimental:        false\n```\n\nnode2\u3082\u540c\u69d8\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\n## Experimental\u30e2\u30fc\u30c9\u306e\u6709\u52b9\u5316\n\n\u4e00\u90e8\u306e\u6a5f\u80fd\u306f\u307e\u3060Experimental\u6271\u3044\u3067\u901a\u5e38\u30e2\u30fc\u30c9\u3067\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\u5168\u6a5f\u80fd\u3092\u4f7f\u3046\u306b\u306fExperimental\u30d5\u30e9\u30b0\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\nDocker 1.12\u307e\u3067\u306fExperimental\u7248\u306f\u5225\u306e\u30d0\u30a4\u30ca\u30ea\u3068\u3057\u3066\u914d\u5e03\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\nDocker 1.13\u304b\u3089\u540c\u4e00\u30d0\u30a4\u30ca\u30ea\u3068\u306a\u308adockerd\u8d77\u52d5\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5207\u308a\u66ff\u3048\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```\nroot@node1:~# vi /etc/docker/daemon.json\nroot@node1:~# cat /etc/docker/daemon.json\n{\n  \"experimental\": true\n}\nroot@node1:~# systemctl restart docker.service\nroot@node1:~# docker version\nClient:\n Version:      1.13.0-rc2\n API version:  1.25\n Go version:   go1.7.3\n Git commit:   1f9b3ef\n Built:        Wed Nov 23 06:32:39 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:             1.13.0-rc2\n API version:         1.25\n Minimum API version: 1.12\n Go version:          go1.7.3\n Git commit:          1f9b3ef\n Built:               Wed Nov 23 06:32:39 2016\n OS/Arch:             linux/amd64\n Experimental:        true\n```\n\nnode2\u3082\u540c\u69d8\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n## swarm\u30af\u30e9\u30b9\u30bf\u306e\u521d\u671f\u5316\n\nnode1\u3092manager\u3068\u3057\u3066swarm\u30af\u30e9\u30b9\u30bf\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\n\n```\nroot@node1:~# docker swarm init\nSwarm initialized: current node (emit8i9n4tplyd29ewvta2usy) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join \\\n    --token SWMTKN-1-3u4ig055yrxmyy1apjl1860gstbbaxng6xjiwpjnet6bv0ur2t-56l28ag60taqjsimnybyd0stx \\\n    172.31.9.117:2377\n\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n```\n\nnode2\u3067worker\u3068\u3057\u3066swarm\u30af\u30e9\u30b9\u30bf\u306b\u53c2\u52a0\u3057\u307e\u3059\u3002\n\n```\nroot@node2:~# docker swarm join \\\n>     --token SWMTKN-1-3u4ig055yrxmyy1apjl1860gstbbaxng6xjiwpjnet6bv0ur2t-56l28ag60taqjsimnybyd0stx \\\n>     172.31.9.117:2377\nThis node joined a swarm as a worker.\n```\n\n\u30af\u30e9\u30b9\u30bf\u306e\u521d\u671f\u5316\u3055\u308c\u3001node1\u304cmanager\u3001node2\u304cworker\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\n```\nroot@node1:~# docker node ls\nID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\nb57tzjj8jytnhmw32sy277i70    node2     Ready   Active\nemit8i9n4tplyd29ewvta2usy *  node1     Ready   Active        Leader\n```\n\n## docker stack deploy --compose-file\n\u9069\u5f53\u306adocker-compose.yml\u3092\u7528\u610f\u3057\u3066 `version: \"3\"` \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```\nroot@node1:~# vi docker-compose.yml\nroot@node1:~# cat docker-compose.yml\nversion: '3'\n\nservices:\n  client:\n    image: tutum/curl\n    command: \"tail -f /dev/null\"\n\n  web:\n    image: nginx\n    ports:\n      - 80\n```\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\nroot@node1:~# docker stack deploy --compose-file ./docker-compose.yml hoge\nCreating network hoge_default\nCreating service hoge_web\nCreating service hoge_client\n```\n\noverlay network\u304c\u4f5c\u6210\u3055\u308c\u3001service\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n```\nroot@node1:~# docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\nfcbbde5d9b68        bridge              bridge              local\n3c7c466d2a90        docker_gwbridge     bridge              local\n165zncwuahxl        hoge_default        overlay             swarm\n3cfe33f4ace7        host                host                local\nn400ahliwjq2        ingress             overlay             swarm\nee7989b6aa25        none                null                local\n\nroot@node1:~# docker service ls\nID            NAME         MODE        REPLICAS  IMAGE\nil98obja9tu9  hoge_client  replicated  1/1       tutum/curl:latest\nv8ra4btbvlxd  hoge_web     replicated  1/1       nginx:latest\n```\n\nswarm\u30af\u30e9\u30b9\u30bf\u5185\u306emanager\u3068worker\u306b\u5206\u6563\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```\nroot@node1:~# docker service ps hoge_client\nNAME                        IMAGE              NODE   DESIRED STATE  CURRENT STATE               ERROR  PORTS\nhoge_client.1.16kh4m2yq51s  tutum/curl:latest  node2  Running        Running about a minute ago\nroot@node1:~# docker service ps hoge_web\nNAME                     IMAGE         NODE   DESIRED STATE  CURRENT STATE               ERROR  PORTS\nhoge_web.1.ns6p315r7w86  nginx:latest  node1  Running        Running about a minute ago\n```\n\n\u3061\u3087\u3063\u3068\u30b3\u30f3\u30c6\u30ca\u5185\u304b\u3089curl\u3092\u6253\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\nroot@node2:~# docker ps\nCONTAINER ID        IMAGE                                                                                COMMAND               CREATED             STATUS              PORTS               NAMES\n5c318bb7d464        tutum/curl@sha256:b6f16e88387acd4e6326176b212b3dae63f5b2134e69560d0b0673cfb0fb976f   \"tail -f /dev/null\"   3 minutes ago       Up 3 minutes                            hoge_client.1.16kh4m2yq51styx54ol4efm7a\nroot@node2:~# docker exec -it 5c318bb7d464 /bin/bash\nroot@5c318bb7d464:/# curl http://web/\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n```\n\n\u3061\u3083\u3093\u3068\u30ce\u30fc\u30c9\u3092\u307e\u305f\u3044\u3067\u30af\u30e9\u30b9\u30bf\u5185\u3067\u901a\u4fe1\u3067\u304d\u3066\u307e\u3059\u306d\u3002\n\n\u3053\u306e `version: \"3\"` \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3060\u3051\u3069\u3001 \u8a66\u3057\u306b `build` \u3068\u304b\u6307\u5b9a\u3059\u308b\u3068\u3053\u3093\u306a\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u3066\u3001\n\n```\nIgnoring unsupported options: build\n```\n\n\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u306a\u3044\u3082\u306e\u3092\u6307\u5b9a\u3059\u308b\u3068\u6012\u3089\u308c\u308b\u3088\u3046\u3002\n\n\u3053\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5410\u3044\u3066\u308b\u306e\u306f\u30b3\u30fc\u30c9\u3092\u773a\u3081\u3066\u307f\u308b\u3068\u3053\u306e\u8fba\u3067\u3001\nhttps://github.com/docker/docker/blob/1f9b3ef9e9c74c2905780ac5347d018646a20022/cli/command/stack/deploy.go#L92\n\n\u30b3\u30fc\u30c9\u3092\u8fbf\u3063\u3066\u3044\u304f\u3068\u3053\u306e\u8fba\u304c\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u3093\u3060\u3051\u3069\u3001\nhttps://github.com/docker/docker/blob/1f9b3ef9e9c74c2905780ac5347d018646a20022/vendor/github.com/aanand/compose-file/types/types.go#L7-L44\n\n\u73fe\u72b6\u4f55\u304c\u4f7f\u3048\u3066\u4f55\u304c\u4f7f\u3048\u306a\u3044\u306e\u304b\u306f\u3001\u305d\u306e\u3046\u3061\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3061\u3083\u3093\u3068\u6574\u5099\u3055\u308c\u308b\u3093\u3058\u3083\u306a\u304b\u308d\u3046\u304b\u3002\n\u307e\u3060\u51fa\u6765\u305f\u3066\u30db\u30e4\u30db\u30e4\u611f\u304c\u3042\u308a\u307e\u3059\u306d\u3002\n\n(\u203b2017/01/20\u8ffd\u8a18\uff1acompose\u306ev3\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3082[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://docs.docker.com/compose/compose-file/)\u306b\u8a18\u8f09\u3055\u308c\u307e\u3057\u305f)\n\n## docker service logs\n\nDocker1.12\u307e\u3067\u306f\u30b3\u30f3\u30c6\u30ca\u5358\u4f4ddocker logs\u3059\u308b\u3057\u304b\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u30b5\u30fc\u30d3\u30b9\u5358\u4f4d\u3067\u30ed\u30b0\u304c\u898b\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u5730\u5473\u306b\u3046\u308c\u3057\u3044\u3002\n\n```\nroot@node1:~# docker service logs -f hoge_web\nhoge_web.1.ns6p315r7w86@node1    | 10.0.0.5 - - [26/Nov/2016:04:14:28 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.35.0\" \"-\"\n```\n\n## docker network create --attachable\ndocker run\u3067\u5148\u7a0b\u306eoverlay network\u306b\u63a5\u7d9a\u3057\u3088\u3046\u3068\u3001\u3068\u308a\u3042\u3048\u305a\u8a66\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u6709\u52b9\u3067\u306f\u306a\u304b\u3063\u305f\u3002\n\n```\nroot@node1:~# docker run -it --rm --net hoge_default tutum/curl curl http://web/\ndocker: Error response from daemon: Could not attach to network hoge_default: rpc error: code = 7 desc = network hoge_default not manually attachable.\n```\n\n\u3069\u3046\u3084\u3089 `docker network create` \u3059\u308b\u3068\u304d `--attachable` \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3068\u3001\u901a\u5e38\u306edocker run\u3067\u3082\u63a5\u7d9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3055\u3063\u304d\u4f5c\u3063\u305fnetwork\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f `Attachable: false` \u306b\u306a\u3063\u3066\u3044\u3066\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002 \n\n```\nroot@node1:~# docker network inspect --format=\"{{ .Attachable }}\" hoge_default\nfalse\n```\n\n`docker network update` \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u306f\u73fe\u72b6\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u691c\u8a3c\u7528\u306b\u5225\u306enetwork\u3092\u4f5c\u3063\u3066\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\nroot@node1:~# docker network create --driver overlay fuga --attachable\n4gu9jty5f5mib3m8zeab7bel2\nroot@node1:~# docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\nfcbbde5d9b68        bridge              bridge              local\n3c7c466d2a90        docker_gwbridge     bridge              local\n4gu9jty5f5mi        fuga                overlay             swarm\n165zncwuahxl        hoge_default        overlay             swarm\n3cfe33f4ace7        host                host                local\nn400ahliwjq2        ingress             overlay             swarm\nee7989b6aa25        none                null                local\nroot@node1:~# docker service create --network fuga -p 80 --name fuga_nginx nginx\nvg7dmcl1a3ty633lhatyakypp\nroot@node1:~# docker service ps fuga_nginx\nNAME                       IMAGE         NODE   DESIRED STATE  CURRENT STATE           ERROR  PORTS\nfuga_nginx.1.itkn421x5dt0  nginx:latest  node1  Running        Running 15 seconds ago\n```\n\n\u4f5c\u3063\u305foverlay network\u4e0a\u3067docker run\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\nroot@node1:~# docker run -it --rm --net fuga tutum/curl curl http://fuga_nginx/\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n```\n\ndocker run\u3067\u3082overlay network\u306b\u63a5\u7d9a\u3067\u304d\u3066\u307e\u3059\u306d\u3002\n\n## docker service update --force\n\n\u9069\u5f53\u306a\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u6570\u30922\u500b\u306b\u3057\u307e\u3059\u3002\n\n```\nroot@node1:~# docker service create --replicas 2 --name test nginx\nb9pfgwe8o0o0jav7acqywj78q\nroot@node1:~# docker service ls\nID            NAME  MODE        REPLICAS  IMAGE\nb9pfgwe8o0o0  test  replicated  2/2       nginx:latest\n```\n\nnode1/node2\u306b\u305d\u308c\u305e\u308c\u5206\u6563\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\nroot@node1:~# docker service ps test\nNAME                 IMAGE         NODE   DESIRED STATE  CURRENT STATE          ERROR  PORTS\ntest.1.gqik60uihoh2  nginx:latest  node1  Running        Running 9 seconds ago\ntest.2.ttfi9a0bsh9n  nginx:latest  node2  Running        Running 9 seconds ago\n```\n\n\u308f\u3056\u3068\u30d0\u30e9\u30f3\u30b9\u3092\u5d29\u3059\u305f\u3081\u306b\u4e00\u6642\u7684\u306bnode2\u3092drain\u3057\u3066active\u306b\u623b\u3057\u307e\u3059\u3002\n\n```\nroot@node1:~# docker node update --availability drain node2\nnode2\nroot@node1:~# docker node ls\nID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\nb57tzjj8jytnhmw32sy277i70    node2     Ready   Drain\nemit8i9n4tplyd29ewvta2usy *  node1     Ready   Active        Leader\nroot@node1:~# docker node update --availability active node2\nnode2\nroot@node1:~# docker node ls\nID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\nb57tzjj8jytnhmw32sy277i70    node2     Ready   Active\nemit8i9n4tplyd29ewvta2usy *  node1     Ready   Active        Leader\n```\n\nnode1\u306b\u504f\u3063\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3057\u305f\n\n```\nroot@node1:~# docker service ps test\nNAME                 IMAGE         NODE   DESIRED STATE  CURRENT STATE           ERROR  PORTS\ntest.1.gqik60uihoh2  nginx:latest  node1  Running        Running 2 minutes ago\ntest.2.plgci5ln455x  nginx:latest  node1  Running        Running 36 seconds ago\n```\n\n`service update --force` \u3067\u30ea\u30d5\u30c3\u30b7\u30e5\u3057\u3066\u30ea\u30d0\u30e9\u30f3\u30b9\u3055\u305b\u3066\u307f\u307e\u3059\u3002\n\n```\nroot@node1:~# docker service update --force test\ntest\nroot@node1:~# docker service ps test\nNAME                 IMAGE         NODE   DESIRED STATE  CURRENT STATE          ERROR  PORTS\ntest.1.k4x3elvgegab  nginx:latest  node1  Running        Running 7 seconds ago\ntest.2.kx1kk3zehvaq  nginx:latest  node2  Running        Running 8 seconds ago\n```\n\nnode1/node2\u306b\u30ea\u30d0\u30e9\u30f3\u30b9\u3057\u3066\u307e\u3059\u306d\u3002\n\n## docker service create --env-file\n\n\u9069\u5f53\u306aenv\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```\nroot@node1:~# vi test.env\nroot@node1:~# cat test.env\nHOGE=hoge\nFUGA=fuga\n```\n\n`--env-file` \u3092\u6307\u5b9a\u3057\u3066service\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```\nroot@node1:~#  docker service create --env-file test.env --name env_test nginx\n3bfwb56dkfjsvahvkeehlo6kv\nroot@node1:~# docker service ps env_test\nNAME                     IMAGE         NODE   DESIRED STATE  CURRENT STATE         ERROR  PORTS\nenv_test.1.08pyx4dkwe6c  nginx:latest  node2  Running        Running 1 second ago\n```\n\n\u3061\u3087\u3063\u3068\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u74b0\u5883\u5909\u6570\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```\nroot@node2:~# docker ps\nCONTAINER ID        IMAGE                                                                                COMMAND                  CREATED             STATUS              PORTS               NAMES\n7c20ef03306e        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639        \"nginx -g 'daemon ...\"   10 seconds ago      Up 9 seconds        80/tcp, 443/tcp     env_test.1.08pyx4dkwe6cr45ik2rab07s3\nroot@node2:~# docker exec -it 7c20ef03306e /bin/bash\nroot@7c20ef03306e:/# echo $HOGE\nhoge\nroot@7c20ef03306e:/# echo $FUGA\nfuga\n```\n\n\u3061\u3083\u3093\u3068\u6e21\u3055\u308c\u3066\u307e\u3059\u306d\u3002\n\n## docker service ps --no-trunc\n\u3061\u3087\u3063\u3068\u308f\u3056\u3068\u5b58\u5728\u3057\u306a\u3044\u30a4\u30e1\u30fc\u30b8\u540d\u3092\u6307\u5b9a\u3057\u3066service create\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\nroot@node1:~# docker service create --name piyo minamijoyo/hoge:latest\nunable to pin image minamijoyo/hoge:latest to digest: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n\n7cpsarjquhz6crpabjnq3jotp\n```\n\n\u306a\u3093\u3060\u304b\u8a8d\u8a3c\u30a8\u30e9\u30fc\u3063\u307d\u3044\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3057\u305f\u3002 \n`docker service ps` \u3067\u898b\u308b\u3068\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9014\u4e2d\u3067\u5207\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\nroot@node1:~# docker service ps -a piyo\nNAME                     IMAGE                   NODE   DESIRED STATE  CURRENT STATE                    ERROR                             PORTS\npiyo.1.w2p0hsgdumgg      minamijoyo/hoge:latest  node1  Ready          Rejected less than a second ago  \"No such image: minamijoyo/hog\u2026\"\n \\_ piyo.1.pp9ngzgjn6li  minamijoyo/hoge:latest  node1  Shutdown       Rejected 5 seconds ago           \"No such image: minamijoyo/hog\u2026\"\n \\_ piyo.1.45el83wvoqm8  minamijoyo/hoge:latest  node1  Shutdown       Rejected 10 seconds ago          \"No such image: minamijoyo/hog\u2026\"\n \\_ piyo.1.3cl1epnuoman  minamijoyo/hoge:latest  node2  Shutdown       Rejected 15 seconds ago          \"No such image: minamijoyo/hog\u2026\"\n \\_ piyo.1.rk9u5u86pwjh  minamijoyo/hoge:latest  node1  Shutdown       Rejected 20 seconds ago          \"No such image: minamijoyo/hog\u2026\"\n```\n\n\u3053\u306e\u4f8b\u3060\u3068\u5148\u982d\u306e `No such image: minamijoyo/hog\u2026` \u3067\u306a\u3093\u3068\u306a\u304f\u96f0\u56f2\u6c17\u308f\u304b\u308a\u307e\u3059\u304c\u3001\u5168\u6587\u3092\u898b\u308b\u306b\u306f\u500b\u5225\u306b `docker inspect` \u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u3053\u308c\u304c\u3001 `--no-trunc` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3068\u30a8\u30e9\u30fc\u306e\u5168\u6587 `No such image: minamijoyo/hoge:latest` \u304c\u898b\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3061\u3087\u3063\u3068\u3053\u306e\u4f8b\u3060\u3068\u5206\u304b\u308a\u3065\u3089\u304b\u3063\u305f\u3067\u3059\u304c\u3001service\u304c\u3046\u307e\u304f\u8d77\u52d5\u3067\u304d\u306a\u3044\u3068\u304d\u306b\u30c7\u30d0\u30c3\u30b0\u304c\u6357\u308b\u306e\u3067\u3001\u5730\u5473\u3060\u3051\u3069\u3046\u308c\u3057\u3044\u3002\n\n```\nroot@node1:~# docker service ps -a --no-trunc piyo\nNAME                     IMAGE                   NODE   DESIRED STATE  CURRENT STATE                    ERROR                                    PORTS\npiyo.1.i3k9hy34f8kk      minamijoyo/hoge:latest  node2  Ready          Assigned less than a second ago                 \n \\_ piyo.1.i12rv7ce5exx  minamijoyo/hoge:latest  node2  Shutdown       Rejected 3 seconds ago           \"No such image: minamijoyo/hoge:latest\"\n \\_ piyo.1.w2p0hsgdumgg  minamijoyo/hoge:latest  node1  Shutdown       Rejected 8 seconds ago           \"No such image: minamijoyo/hoge:latest\"\n \\_ piyo.1.pp9ngzgjn6li  minamijoyo/hoge:latest  node1  Shutdown       Rejected 13 seconds ago          \"No such image: minamijoyo/hoge:latest\"\n \\_ piyo.1.45el83wvoqm8  minamijoyo/hoge:latest  node1  Shutdown       Rejected 18 seconds ago          \"No such image: minamijoyo/hoge:latest\"\n \\_ piyo.1.3cl1epnuoman  minamijoyo/hoge:latest  node2  Shutdown       Rejected 23 seconds ago          \"No such image: minamijoyo/hoge:latest\"\n```\n\n## docker system df\n\n`docker system df` \u3068\u3044\u3046\u30c7\u30a3\u30b9\u30af\u4f7f\u7528\u91cf\u3092\u7c21\u5358\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u30b3\u30de\u30f3\u30c9\u304c\u5897\u3048\u307e\u3057\u305f\u3002\n\n```\nroot@node1:~# docker system df\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              3                   2                   410.7 MB            224.4 MB (54%)\nContainers          8                   1                   2 B                 0 B (0%)\nLocal Volumes       0                   0                   0 B                 0 B\n```\n\n\u5185\u8a33\u3092\u51fa\u3059\u306b\u306f `-v` \u3092\u3064\u3051\u308b\n\n```\nroot@node1:~# docker system df -v\nImages space usage:\n\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE                SHARED SIZE         UNIQUE SIZE         CONTAINERS\nnginx               latest              05a60462f8ba        2 weeks ago         181.5 MB            0 B                 181.5 MB            4\nalpine              latest              baa5d63471ea        5 weeks ago         4.803 MB            0 B                 4.803 MB            4\ntutum/curl          latest              01176385d84a        2 years ago         224.4 MB            0 B                 224.4 MB            0\n\nContainers space usage:\n\nCONTAINER ID        IMAGE                                                                           COMMAND                  LOCAL VOLUMES       SIZE                CREATED              STATUS                          NAMES\n1b00b00dab7c        alpine                                                                          \"echo hoge\"              0                   0 B                 17 seconds ago       Exited (0) 17 seconds ago       admiring_einstein\nc1524ac0883b        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639   \"nginx -g 'daemon ...\"   0                   2 B                 About a minute ago   Up About a minute               hoge_web.1.tyepsp0wz953ng4a7yxd0zc7f\n72b55401186a        nginx                                                                           \"nginx -V\"               0                   0 B                 5 minutes ago        Created                         small_ptolemy\ne9b699272ec0        nginx                                                                           \"nginx -V\"               0                   0 B                 7 minutes ago        Created                         furious_lalande\nf4af143e3c9d        alpine                                                                          \"/bin/sh\"                0                   0 B                 8 minutes ago        Created                         serene_lewin\nfbf1ca0e64aa        alpine                                                                          \"echo hoge\"              0                   0 B                 9 minutes ago        Created                         evil_jang\nad5655d62262        alpine                                                                          \"echo hoge\"              0                   0 B                 9 minutes ago        Created                         drunk_curie\ne53936b3beee        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639   \"nginx -g 'daemon ...\"   0                   0 B                 5 hours ago          Exited (0) About a minute ago   hoge_web.1.ns6p315r7w86yri20wuoyy948\n\nLocal Volumes space usage:\n\nVOLUME NAME         LINKS               SIZE\n```\n\n## docker system prune\n\ndocker run\u3067\u3000`--rm` \u4ed8\u3051\u5fd8\u308c\u3066\u6b8b\u3063\u3061\u3083\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3068\u304b\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3044Image\u3084Volume\u3001\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044Network\u306a\u3069\u3092\u4e00\u62ec\u3067\u304a\u6383\u9664\u3057\u3066\u304f\u308c\u308b `docker system prune` \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n```\nroot@node1:~# docker system df\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              3                   2                   410.7 MB            224.4 MB (54%)\nContainers          8                   1                   2 B                 0 B (0%)\nLocal Volumes       0                   0                   0 B                 0 B\n```\n\n```\nroot@node1:~# docker system prune\nWARNING! This will remove:\n        - all stopped containers\n        - all volumes not used by at least one container\n        - all networks not used by at least one container\n        - all dangling images\nAre you sure you want to continue? [y/N] y\nDeleted Containers:\n1b00b00dab7c1d39821bf35f653cb34be4e560dcb52ad426decb94c80a2e7a21\n72b55401186aaf0283653227c66eaa2f3c5ba0885fb05a78b88b249c72203e6b\ne9b699272ec03d65a6831d80049e5d72aa1ed7d6de0b9211e015c1d30ccfd637\nf4af143e3c9d987b92128659f0a9070e0470905fb1fa7f66396fa19ca0bad06f\nfbf1ca0e64aae36b37706768eb6c0613ff98862e841fdf5fcffc38f594ecff7c\nad5655d6226234676694450f24047e3f7b874e139dbfac3833e3f20074c12474\ne53936b3beeee06ae464ca625f42d81064c2d45e8dfdcf7e064722c848a66032\n\nDeleted Networks:\nfuga\n\nTotal reclaimed space: 0 B\n```\n\n```\nroot@node1:~# docker system df\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              3                   1                   410.7 MB            229.2 MB (55%)\nContainers          1                   1                   2 B                 0 B (0%)\nLocal Volumes       0                   0                   0 B                 0 B\n```\n\n\u305d\u308c\u305e\u308c\u500b\u5225\u306b\u524a\u9664\u3059\u308b `docker {container,image,volume,network} prune` \u30b3\u30de\u30f3\u30c9\u3082\u3042\u308b\u3002\n\n## docker secret\n\n\u6a5f\u5bc6\u60c5\u5831\u3092\u30b3\u30f3\u30c6\u30ca\u5185\u306b\u5b89\u5168\u306b\u53d7\u3051\u6e21\u3057\u3059\u308b\u305f\u3081\u306b `docker secret` \u3068\u3044\u3046\u4ed5\u7d44\u307f\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u74b0\u5883\u5909\u6570\u3060\u3068inspect\u3059\u308b\u3068\u898b\u3048\u3061\u3083\u3046\u3057\u306d\u3002\u5185\u90e8\u7684\u306b\u306f\u73fe\u72b6swarm\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u306e\u3067\u4eca\u306e\u3068\u3053\u308dswarm mode\u4ee5\u5916\u3067\u306f\u4f7f\u3048\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n`docker secret create` \u3067\u4f5c\u308a\u307e\u3059\u3002\n\n```\nroot@node1:~# echo \"top_secret\" | docker secret create ssh-dev\nhebw7cvza4lk2gzprdljmvvhv\n```\n\n`docker service create --secret` \u3067\u6e21\u3059\u3002\n\n```\nroot@node1:~# docker service create --name nginx --secret ssh-dev nginx\n5sn2d8c0aljkxwfg0antdntf4\n```\n\n\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u898b\u3066\u307f\u308b\u3002\n\n```\nroot@node1:~# docker ps\nCONTAINER ID        IMAGE                                                                           COMMAND                  CREATED             STATUS              PORTS               NAMES\nf9ff7e041386        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639   \"nginx -g 'daemon ...\"   39 seconds ago      Up 33 seconds       80/tcp, 443/tcp     nginx.1.l4l7c0s1efvb0aj5q4iudb8sx\nroot@node1:~# docker exec -it f9ff7e041386 /bin/bash\nroot@f9ff7e041386:/# cat /run/secrets/ssh-dev\ntop_secret\n```\n\n\u914d\u7f6e\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001 `--secret` \u3067\u6e21\u3059\u3068\u304d\u306b `target=` \u3067\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```\nroot@node1:~# docker service create --name nginx --secret source=ssh-dev,target=id_rsa,uid=1000,gid=1000,mode=0400 nginx\n5jsuv5e89crc4esafsh948gjn\n```\n\n```\nroot@node2:~# docker ps\nCONTAINER ID        IMAGE                                                                                COMMAND                  CREATED             STATUS              PORTS               NAMES\n0e3fc7cf18bd        nginx@sha256:9038d5645fa5fcca445d12e1b8979c87f46ca42cfb17beb1e5e093785991a639        \"nginx -g 'daemon ...\"   12 seconds ago      Up 11 seconds       80/tcp, 443/tcp     nginx.1.z2mw5h7y7olfbl7hsh2ybw5hm\nroot@node2:~# docker exec -it 0e3fc7cf18bd /bin/bash\nroot@0e3fc7cf18bd:/# cat /run/secrets/id_rsa\ntop_secret\n```\n\n# \u307e\u3068\u3081\n\u3056\u30fc\u3063\u3068\u6c17\u306b\u306a\u308b\u5909\u66f4\u70b9\u3068\u65b0\u6a5f\u80fd\u3092\u898b\u3066\u304d\u307e\u3057\u305f\u304c\u3001Docker1.13\u306b\u306f\u75d2\u3044\u3068\u3053\u308d\u306b\u624b\u304c\u5c4a\u304f\u591a\u304f\u306e\u6539\u5584\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002swarm\u306edocker-compose.yml\u5bfe\u5fdc\u306f\u307e\u3060\u51fa\u6765\u305f\u3066\u30db\u30e4\u30db\u30e4\u611f\u304c\u3042\u308a\u307e\u3059\u304c\u3001Docker\u672c\u4f53\u306b\u30af\u30e9\u30b9\u30bf\u3092\u7ba1\u7406\u3059\u308b\u4ed5\u7d44\u307f\u304c\u3069\u3093\u3069\u3093\u62e1\u5145\u3055\u308c\u3066\u304d\u3066\u4eca\u5f8c\u304c\u697d\u3057\u307f\u3067\u4ed5\u65b9\u304c\u306a\u3044\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306f[CrowdWorks Advent Calendar 2016](http://qiita.com/advent-calendar/2016/crowdworks) \u306e1\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3057\u305f\u3002\u660e\u65e5\u306f[@h3_poteto](http://qiita.com/h3_poteto)\u306e\u300cDocker swarm\u3067\u69cb\u7bc9\u3059\u308b\u793e\u5185heroku: yadockeri\u300d\u306e\u4e88\u5b9a\u3067\u3059\u3002\n"}