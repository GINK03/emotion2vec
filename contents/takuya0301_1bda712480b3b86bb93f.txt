{"tags": ["Ruby", "Rails", "DynamoDB"], "context": "DynamoDB \u30c6\u30fc\u30d6\u30eb\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30af\u30e9\u30b9\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b Aws::Record \u3092\u4f7f\u7528\u3057\u3066 DynamoDB \u3092 Ruby on Rails \u304b\u3089\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u3092\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u98a8\u306b\u30e1\u30e2\u3063\u3068\u304f\u3002\nJava \u3084 C# \u5411\u3051\u306b\u306f\u9ad8\u30ec\u30d9\u30eb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u516c\u5f0f\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\u3057\u304b\u3057\u3001\u516c\u5f0f\u306a Ruby \u5411\u3051\u306e\u9ad8\u30ec\u30d9\u30eb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306e Aws::Record \u306f2016\u5e748\u6708\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3070\u304b\u308a\u3067\u3001\u958b\u767a\u8005\u30ac\u30a4\u30c9\u306b\u3082\u8a73\u7d30\u306a\u8a18\u8f09\u306f\u306a\u3044\u3002\uff08AWS SDK for Ruby \u30d0\u30fc\u30b8\u30e7\u30f31\u306b\u306f\u4f3c\u305f\u3088\u3046\u306a\u6a5f\u80fd\u304c\u642d\u8f09\u3055\u308c\u3066\u3044\u305f\u304c\u3001AWS SDK for Ruby \u30d0\u30fc\u30b8\u30e7\u30f32\u306b\u306f\u642d\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u3002\uff09\u3053\u306e\u8a18\u4e8b\u3067\u306f Aws::Record \u3068 Ruby on Rails \u3092\u4f7f\u7528\u3057\u3066 Amazon DynamoDB \u5165\u9580\u30ac\u30a4\u30c9\u306e Ruby \u304a\u3088\u3073 DynamoDB \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u518d\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\n\u4e8b\u524d\u6e96\u5099\nRuby \u3068 Ruby on Rails \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3053\u3068\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f Ruby 2.3.1 \u3068 Ruby on Rails 5.0.0.1 \u3092\u5bfe\u8c61\u3068\u3059\u308b\u3002\nDynamoDB Local \u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u8d77\u52d5\u3057\u3066\u304a\u304f\u3002OS X \u3067\u3042\u308c\u3070 OS X \u306b DynamoDB Local \u3092 Homebrew \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066 brew services \u3067\u8d77\u52d5\u3059\u308b\u3092\u53c2\u8003\u306b\u3057\u3066\u307b\u3057\u3044\u3002\n\nRails \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\nRails \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9069\u5f53\u306a\u540d\u524d\u3067\u4f5c\u6210\u3059\u308b\u3002\u4ee5\u964d\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3059\u308b\u3002\n$ rails new dynamodb-tutorial\n$ cd dynamodb-tutorial\n\n\nRails \u7528\u306e AWS SDK for Ruby \u3068 Aws::Record \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\nGemfile \u306b aws-sdk-rails \u3068 aws-record \u3092\u8ffd\u52a0\u3059\u308b\u3002\n\nGemfile\n@@ -26,6 +26,10 @@ gem 'jbuilder', '~> 2.5'\n # gem 'redis', '~> 3.0'\n # Use ActiveModel has_secure_password\n # gem 'bcrypt', '~> 3.1.7'\n+# Use AWS SDK for Ruby\n+gem 'aws-sdk-rails'\n+# Use Aws::Record as a data mapping abstraction for Amazon DynamoDB\n+gem 'aws-record'\n\n # Use Capistrano for deployment\n # gem 'capistrano-rails', group: :development\n\n\nbundle \u3092\u5b9f\u884c\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n$ bundle\n\n\nAWS SDK for Ruby \u3092\u8a2d\u5b9a\u3059\u308b\nAWS SDK for Ruby \u7528\u306b\u74b0\u5883\u5225\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u3002\u306a\u304a\u3001\u30a2\u30af\u30bb\u30b9\u30ad\u30fc ID \u304c\u63a5\u7d9a\u5148\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b1\u5bfe1\u306b\u5bfe\u5fdc\u3059\u308b\u306e\u3067\u3001DynamoDB JavaScript Shell \u306a\u3069\u3067 DynamoDB \u3092\u95b2\u89a7\u3059\u308b\u3068\u304d\u306f\u30a2\u30af\u30bb\u30b9\u30ad\u30fc ID \u3092\u4e00\u81f4\u3055\u305b\u308b\u3002\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3068\u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u8a2d\u5b9a\u3082\u5fc5\u9808\u3002DynamoDB JavaScript Shell \u304b\u3089\u95b2\u89a7\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u30ea\u30fc\u30b8\u30e7\u30f3\u306f us-west-2 \u306b\u8a2d\u5b9a\u3059\u308b\u3002\u307e\u305f\u3001\u958b\u767a\u3084\u30c6\u30b9\u30c8\u3067\u306f DynamoDB Local \u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092 http://localhost:8000 \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\nconfig/aws.yml\ndevelopment:\n  access_key_id: DynamodbTutorialDevelopment\n  secret_access_key: DynamodbTutorialDevelopmentSecret\n  region: us-west-2\n  endpoint: http://localhost:8000\n\ntest:\n  access_key_id: DynamodbTutorialTest\n  secret_access_key: DynamodbTutorialTestSecret\n  region: us-west-2\n  endpoint: http://localhost:8000\n\nproduction:\n  access_key_id: <%= ENV[\"AWS_ACCESS_KEY_ID\"] %>\n  secret_access_key: <%= ENV[\"AWS_SECRET_ACCESS_KEY\"] %>\n  region: <%= ENV[\"AWS_REGION\"] %>\n\n\n\nconfig/initializers/aws.rb\n# Be sure to restart your server when you modify this file.\n\n# Configure AWS SDK for Ruby.\nAws.config.update(Rails.application.config_for(:aws).symbolize_keys)\n\n\n\u3053\u306e\u8a2d\u5b9a\u306e\u8a73\u7d30\u306f Rails \u3067 AWS SDK for Ruby \u306e Aws.config \u3092\u74b0\u5883\u5225\u306b\u8a2d\u5b9a\u3059\u308b\u3092\u898b\u3066\u307b\u3057\u3044\u3002\n\nStep 1: \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\n\u3053\u3053\u304b\u3089\u306f Amazon DynamoDB \u5165\u9580\u30ac\u30a4\u30c9\u306e Ruby \u304a\u3088\u3073 DynamoDB \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u6cbf\u3063\u3066\u5b9f\u88c5\u3057\u3066\u3044\u304f\u3002\n\u307e\u305a\u306f Movies \u3068\u3044\u3046\u540d\u524d\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\nMovie \u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\n\u307e\u305a\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b Movie \u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002Aws::Record \u306f\u30e2\u30c7\u30eb\u304b\u3089\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u3060\u3002\n\napp/models/movie.rb\nclass Movie\n  include Aws::Record\n\n  integer_attr :year,  hash_key: true\n  string_attr  :title, range_key: true\n  map_attr     :info\nend\n\n\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\n\u6b21\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u3002\n$ rails g migration create_movies\n\n\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3002provisioned_throughput \u306f DynamoDB Local \u3067\u306f\u7121\u8996\u3055\u308c\u308b\u3002\u672c\u756a\u74b0\u5883\u306e DynamoDB \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u6700\u5c0f\u5024\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u306e\u304c\u7121\u96e3\u304b\u306a\u3002\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u306b down \u30e1\u30bd\u30c3\u30c9\u3067 ActiveRecord::IrreversibleMigration \u4f8b\u5916\u3092\u6295\u3052\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\u30c6\u30fc\u30d6\u30eb\u306e\u524a\u9664\u306b\u3064\u3044\u3066\u306f\u8a18\u4e8b\u306e\u7d42\u308f\u308a\u306e\u65b9\u3092\u898b\u3066\u307b\u3057\u3044\u3002\n\n20161105093705_create_movies.rb\nclass CreateMovies < ActiveRecord::Migration[5.0]\n  def up\n    migration = Aws::Record::TableMigration.new(Movie)\n    migration.create!(\n      provisioned_throughput: {\n        read_capacity_units: 1,\n        write_capacity_units: 1\n      }\n    )\n    migration.wait_until_available\n  end\n\n  def down\n    raise ActiveRecord::IrreversibleMigration\n  end\nend\n\n\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\n$ rails db:migrate\n\n\u306a\u304a\u3001\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u30c6\u30fc\u30d6\u30eb\u306f SQLite \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4f5c\u6210\u3055\u308c\u308b\u3002DynamoDB \u306e\u307f\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5834\u5408\u306f Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u30c6\u30fc\u30d6\u30eb\u3092\u3069\u3046\u3059\u308b\u304b\u8003\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u306a\u3044\u3068\u3044\u3046\u306e\u3082\u3072\u3068\u3064\u306e\u89e3\u6c7a\u7b56\u304b\u3068\u601d\u3046\u3002\n\nMovie \u30c6\u30fc\u30d6\u30eb\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308b\nRails \u30b3\u30f3\u30bd\u30fc\u30eb\u3067 Movie \u30c6\u30fc\u30d6\u30eb\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308b\u3002\n$ rails c\n>  Movie.table_exists?\n[Aws::DynamoDB::Client 200 0.211896 0 retries] describe_table(table_name:\"Movie\")  \n\n=> true\n> exit\n\n\nStep 2: \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\n\u6620\u753b\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092 DynamoDB \u306b\u30ed\u30fc\u30c9\u3059\u308b\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f Rails \u306e\u30b7\u30fc\u30c9\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066 db/moviedata.json \u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u3002\n$ curl -O http://docs.aws.amazon.com/ja_jp/amazondynamodb/latest/gettingstartedguide/samples/moviedata.zip\n$ unzip moviedata.zip\n$ mv moviedata.json db\n$ rm moviedata.zip\n\n\nMovie \u30c6\u30fc\u30d6\u30eb\u306b\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\ndb/moviedata.json \u306e\u5185\u5bb9\u3092 DynamoDB \u306b\u4fdd\u5b58\u3059\u308b\u30b3\u30fc\u30c9\u3092\u30b7\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3059\u308b\u3002\n\ndb/seeds.rb\n# This file should contain all the record creation needed to seed the database with its default values.\n# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).\n#\n# Examples:\n#\n#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])\n#   Character.create(name: 'Luke', movie: movies.first)\n\n# Load movies\nfile = File.read('db/moviedata.json')\nmovies = JSON.parse(file)\nmovies.each do |movie|\n  Movie.new(movie).save!\nend\n\n\n\u30b7\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3002\u3053\u306e\u5b9f\u884c\u306b\u306f\u6570\u5341\u79d2\u7a0b\u5ea6\u306e\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u5c11\u3057\u5f85\u3068\u3046\u3002\n$ rails db:seed\n\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u30ed\u30fc\u30c9\u3092\u78ba\u8a8d\u3059\u308b\nRails \u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308b\u3002\n$ rails c\n> Movie.find(year: 2013, title: 'Rush')\n[Aws::DynamoDB::Client 200 0.051161 0 retries] get_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2013\"},\"title\"=>{s:\"Rush\"}})  \n\n=> #<Movie:0x007fe09d5a1268 @data=#<Aws::Record::ItemData:0x007fe09d58add8 @data={:year=>#<BigDecimal:7fe09d5a2410,'0.2013E4',9(18)>, :title=>\"Rush\", :info=>{\"actors\"=>[\"Daniel Bruhl\", \"Chris Hemsworth\", \"Olivia Wilde\"], \"release_date\"=>\"2013-09-02T00:00:00Z\", \"plot\"=>\"A re-creation of the merciless 1970s rivalry between Formula One rivals James Hunt and Niki Lauda.\", \"genres\"=>[\"Action\", \"Biography\", \"Drama\", \"Sport\"], \"image_url\"=>\"http://ia.media-imdb.com/images/M/MV5BMTQyMDE0MTY0OV5BMl5BanBnXkFtZTcwMjI2OTI0OQ@@._V1_SX400_.jpg\", \"directors\"=>[\"Ron Howard\"], \"rating\"=>#<BigDecimal:7fe09d5a16f0,'0.83E1',18(18)>, \"rank\"=>#<BigDecimal:7fe09d5a15b0,'0.2E1',9(18)>, \"running_time_secs\"=>#<BigDecimal:7fe09d5a1470,'0.738E4',9(18)>}}, @clean_copies={:year=>2013, :title=>\"Rush\", :info=>{\"actors\"=>[\"Daniel Bruhl\", \"Chris Hemsworth\", \"Olivia Wilde\"], \"release_date\"=>\"2013-09-02T00:00:00Z\", \"plot\"=>\"A re-creation of the merciless 1970s rivalry between Formula One rivals James Hunt and Niki Lauda.\", \"genres\"=>[\"Action\", \"Biography\", \"Drama\", \"Sport\"], \"image_url\"=>\"http://ia.media-imdb.com/images/M/MV5BMTQyMDE0MTY0OV5BMl5BanBnXkFtZTcwMjI2OTI0OQ@@._V1_SX400_.jpg\", \"directors\"=>[\"Ron Howard\"], \"rating\"=>#<BigDecimal:7fe09d589e60,'0.83E1',18(18)>, \"rank\"=>#<BigDecimal:7fe09d589d98,'0.2E1',9(18)>, \"running_time_secs\"=>#<BigDecimal:7fe09d589cd0,'0.738E4',9(18)>}}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fe09ac7f3d0 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fe09ac4de98 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fe09ac572b8>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fe09ac45e28 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fe09ac45ec8>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fe09d2c8de8 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fe09d2c8ed8>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n\n\nStep 3: \u9805\u76ee\u3092\u4f5c\u6210\u30fb\u53d6\u5f97\u30fb\u66f4\u65b0\u30fb\u524a\u9664\u3059\u308b\nAws::Record \u3092\u4f7f\u7528\u3057\u3066\u9805\u76ee\u306e\u4f5c\u6210\u30fb\u8aad\u307f\u8fbc\u307f\u30fb\u66f4\u65b0\u30fb\u524a\u9664\u3092 Rails \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002Rails \u3067\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3057\u305f Web \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304b\u3089\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u304b\u3068\u8003\u3048\u305f\u306e\u3060\u3051\u3069\u3001\u8907\u5408\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3060\u3063\u305f\u308a\u3001\u5168\u4ef6\u8868\u793a\u3059\u308b\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3067\u3082\u306a\u304b\u3063\u305f\u308a\u3001info \u304c\u8907\u96d1\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u8ae6\u3081\u305f\u3002\u5143\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3082\u305d\u3053\u307e\u3067\u3084\u3063\u3066\u306a\u3044\u3057\u306d\u3002\n\n\u65b0\u3057\u3044\u9805\u76ee\u3092\u4f5c\u6210\u3059\u308b\n\u65b0\u3057\u3044\u9805\u76ee\u306f ActiveRecord \u306e\u3088\u3046\u306b\u4f5c\u6210\u3067\u304d\u308b\u3002\n$ rails c\n> movie = Movie.new(year: 2015, title: 'The Big New Movie', info: { plot: 'Nothing happens at all.', rating: 0 })\n> movie.save!\n[Aws::DynamoDB::Client 200 0.18404 0 retries] put_item(table_name:\"Movie\",item:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"},\"info\"=>{m:{\"plot\"=>{s:\"Nothing happens at all.\"},\"rating\"=>{n:\"0\"}}}},condition_expression:\"attribute_not_exists(#H) and attribute_not_exists(#R)\",expression_attribute_names:{\"#H\"=>\"year\",\"#R\"=>\"title\"})  \n\n=> #<struct Aws::DynamoDB::Types::PutItemOutput attributes=nil, consumed_capacity=nil, item_collection_metrics=nil>\n\n\n\u9805\u76ee\u3092\u53d6\u5f97\u3059\u308b\n\u9805\u76ee\u306e\u53d6\u5f97\u3067\u306f\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3092\u30cf\u30c3\u30b7\u30e5\u5f62\u5f0f\u3067\u6307\u5b9a\u3059\u308b\u3002Movie \u30e2\u30c7\u30eb\u306e\u3088\u3046\u306b\u8907\u5408\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u306e\u5834\u5408\u306f\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\uff08\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\uff09\u3068\u30bd\u30fc\u30c8\u30ad\u30fc\uff08\u30ec\u30f3\u30b8\u30ad\u30fc\uff09\u306e\u4e21\u65b9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n$ rails c\n> Movie.find(year: 2015, title: 'The Big New Movie')\n[Aws::DynamoDB::Client 200 0.081038 0 retries] get_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> #<Movie:0x007fe09d4726a8 @data=#<Aws::Record::ItemData:0x007fe09d4725e0 @data={:year=>#<BigDecimal:7fe09d473210,'0.2015E4',9(18)>, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09d472bf8,'0.0',9(18)>, \"plot\"=>\"Nothing happens at all.\"}}, @clean_copies={:year=>2015, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09d472018,'0.0',9(18)>, \"plot\"=>\"Nothing happens at all.\"}}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fe09d2632b8 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fe09d2390a8 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fe09d242b58>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fe09ab7c618 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fe09ab7c6b8>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fe09ab6e8d8 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fe09ab6e978>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n\n\n\u9805\u76ee\u3092\u66f4\u65b0\u3059\u308b\n\u9805\u76ee\u306e\u66f4\u65b0\u3067\u306f\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3068\u5909\u66f4\u3059\u308b\u5c5e\u6027\u3092\u30cf\u30c3\u30b7\u30e5\u5f62\u5f0f\u3067\u6307\u5b9a\u3059\u308b\u3002\n$ rails c\n> Movie.update(year: 2015, title: 'The Big New Movie', info: { plot: 'Everything happens all at once.', rating: 5.5, actors: [\"Larry\", \"Moe\", \"Curly\"] })\n[Aws::DynamoDB::Client 200 0.042996 0 retries] update_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}},update_expression:\"SET #UE_A = :ue_a\",expression_attribute_names:{\"#UE_A\"=>\"info\"},expression_attribute_values:{\":ue_a\"=>{m:{\"plot\"=>{s:\"Everything happens all at once.\"},\"rating\"=>{n:\"5.5\"},\"actors\"=>{l:[{s:\"Larry\"},{s:\"Moe\"},{s:\"Curly\"}]}}}})  \n\n=> #<struct Aws::DynamoDB::Types::UpdateItemOutput attributes=nil, consumed_capacity=nil, item_collection_metrics=nil>\n\n\u307e\u305f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u9805\u76ee\u3092\u53d6\u5f97\u3057\u3066\u304b\u3089\u7de8\u96c6\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3082\u3044\u3044\u3002\n$ rails c\n> movie = Movie.find(year: 2015, title: 'The Big New Movie')\n[Aws::DynamoDB::Client 200 0.102433 0 retries] get_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> #<Movie:0x007fe09ac256a0 @data=#<Aws::Record::ItemData:0x007fe09ac25628 @data={:year=>#<BigDecimal:7fe09ac262d0,'0.2015E4',9(18)>, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09ac25f10,'0.55E1',18(18)>, \"plot\"=>\"Everything happens all at once.\", \"actors\"=>[\"Larry\", \"Moe\", \"Curly\"]}}, @clean_copies={:year=>2015, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09ac24f70,'0.55E1',18(18)>, \"plot\"=>\"Everything happens all at once.\", \"actors\"=>[\"Larry\", \"Moe\", \"Curly\"]}}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fe09d2632b8 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fe09d2390a8 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fe09d242b58>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fe09ab7c618 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fe09ab7c6b8>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fe09ab6e8d8 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fe09ab6e978>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n> movie.info['rating'] += 1\n=> #<BigDecimal:7fe09ab3baa0,'0.65E1',18(27)>\n> movie.save!\n[Aws::DynamoDB::Client 200 0.029221 0 retries] update_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}},update_expression:\"SET #UE_A = :ue_a\",expression_attribute_names:{\"#UE_A\"=>\"info\"},expression_attribute_values:{\":ue_a\"=>{m:{\"rating\"=>{n:\"6.5\"},\"plot\"=>{s:\"Everything happens all at once.\"},\"actors\"=>{l:[{s:\"Larry\"},{s:\"Moe\"},{s:\"Curly\"}]}}}})  \n\n=> #<struct Aws::DynamoDB::Types::UpdateItemOutput attributes=nil, consumed_capacity=nil, item_collection_metrics=nil>\n\n\n\u9805\u76ee\u3092\u524a\u9664\u3059\u308b\n\u9805\u76ee\u306e\u524a\u9664\u3067\u306f\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u305f\u9805\u76ee\u3092\u4f5c\u6210\u3057\u3066\u524a\u9664\u3059\u308b\u3002\u524a\u9664\u5bfe\u8c61\u306e\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u304c\u5224\u660e\u3057\u3066\u3044\u308c\u3070\u3053\u306e\u65b9\u6cd5\u3067\u3044\u3044\u3002\n> movie = Movie.new(year: 2015, title: 'The Big New Movie')\n=> #<Movie:0x007fd6a23a9eb0 @data=#<Aws::Record::ItemData:0x007fd6a23a9e60 @data={:year=>2015, :title=>\"The Big New Movie\"}, @clean_copies={}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fd6a217a1a8 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fd6a20d35b0 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fd69fe628a0>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fd6a20c10b8 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fd6a20c1158>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fd6a20b09c0 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fd6a20b0a60>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n> movie.delete!\n[Aws::DynamoDB::Client 200 0.032924 0 retries] delete_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> true\n\n\u307e\u305f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u9805\u76ee\u3092\u53d6\u5f97\u3057\u3066\u304b\u3089\u524a\u9664\u3057\u3066\u3082\u3044\u3044\u3002\u8aad\u307f\u53d6\u308a\u3068\u66f8\u304d\u8fbc\u307f\u306e2\u3064\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u524d\u8ff0\u306e\u65b9\u6cd5\u3088\u308a\u7121\u99c4\u304c\u3042\u308b\u3002\n$ rails c\n> movie = Movie.find(year: 2015, title: 'The Big New Movie')\n[Aws::DynamoDB::Client 200 0.062304 0 retries] get_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> #<Movie:0x007fe09d041980 @data=#<Aws::Record::ItemData:0x007fe09d041868 @data={:year=>#<BigDecimal:7fe09d042b78,'0.2015E4',9(18)>, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09d042498,'0.65E1',18(18)>, \"plot\"=>\"Everything happens all at once.\", \"actors\"=>[\"Larry\", \"Moe\", \"Curly\"]}}, @clean_copies={:year=>2015, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09d040c88,'0.65E1',18(18)>, \"plot\"=>\"Everything happens all at once.\", \"actors\"=>[\"Larry\", \"Moe\", \"Curly\"]}}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fe09d2632b8 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fe09d2390a8 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fe09d242b58>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fe09ab7c618 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fe09ab7c6b8>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fe09ab6e8d8 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fe09ab6e978>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n> movie.delete!\n[Aws::DynamoDB::Client 200 0.027339 0 retries] delete_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> true\n\n\nStep 4: \u30c7\u30fc\u30bf\u3092\u30af\u30a8\u30ea\u304a\u3088\u3073\u30b9\u30ad\u30e3\u30f3\u3059\u308b\nDynamoDB \u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b\u30af\u30a8\u30ea\u3068\u30b9\u30ad\u30e3\u30f3\u3092 Rails \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\n\u30af\u30a8\u30ea\u30671\u5e74\u9593\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u6620\u753b\u3092\u53d6\u5f97\u3059\u308b\n1985\u5e74\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u6620\u753b\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\u5e74\u3092\u8868\u73fe\u3059\u308b\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u304c1985\u3067\u3042\u308b\u9805\u76ee\u3092\u30af\u30a8\u30ea\u3067\u53d6\u5f97\u3059\u308b\u3002\u73fe\u6642\u70b9\u3067\u306e Aws::Record \u306e\u30af\u30a8\u30ea\u306f AWS SDK for Ruby \u306e\u30af\u30a8\u30ea\u3092\u30c6\u30fc\u30d6\u30eb\u540d\u3092\u88dc\u5b8c\u3057\u3066\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u5f15\u6570\u306f\u540c\u3058\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306a\u308b\u3002\n$ rails c\n> movies = Movie.query(\n    key_condition_expression: '#yr = :yyyy',\n    expression_attribute_names: { '#yr' => 'year' },\n    expression_attribute_values: { ':yyyy' => 1985 })\n=> #<Aws::Record::ItemCollection:0x007fe09ae542f0 @search_method=:query, @search_params={:key_condition_expression=>\"#yr = :yyyy\", :expression_attribute_names=>{\"#yr\"=>\"year\"}, :expression_attribute_values=>{\":yyyy\"=>1985}, :table_name=>\"Movie\"}, @model=Movie, @client=#<Aws::DynamoDB::Client>>\n> movies.each do |movie|\n    puts \"#{movie.year.to_i} #{movie.title}\"\n  end\n[Aws::DynamoDB::Client 200 0.134007 0 retries] query(key_condition_expression:\"#yr = :yyyy\",expression_attribute_names:{\"#yr\"=>\"year\"},expression_attribute_values:{\":yyyy\"=>{n:\"1985\"}},table_name:\"Movie\")  \n\n1985 A Nightmare on Elm Street Part 2: Freddy's Revenge\n1985 A Room with a View\n1985 A View to a Kill\n.\n.\n.\n1985 The Return of the Living Dead\n1985 Weird Science\n1985 Witness\n=> nil\n\n\n\u30af\u30a8\u30ea\u30671\u5e74\u9593\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u7279\u5b9a\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u6301\u3064\u3059\u3079\u3066\u306e\u6620\u753b\u3092\u53d6\u5f97\u3059\u308b\n1992\u5e74\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u6620\u753b\u304b\u3089\u3001\u6587\u5b57 A \u304b\u3089\u6587\u5b57 L \u307e\u3067\u3067\u59cb\u307e\u308b\u6620\u753b\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\u984c\u540d\u3092\u8868\u73fe\u3059\u308b\u30bd\u30fc\u30c8\u30ad\u30fc\u3067\u7bc4\u56f2\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n$ rails c\n> movies = Movie.query(\n    projection_expression: '#yr, title, info.genres, info.actors[0]',\n    key_condition_expression: '#yr = :yyyy and title between :letter1 and :letter2',\n    expression_attribute_names: { '#yr' => 'year' },\n    expression_attribute_values: { ':yyyy' => 1992, ':letter1' => 'A', ':letter2' => 'L' })\n> movies.each do |movie|\n    print \"#{movie.year.to_i}: #{movie.title} ... \"\n\n    movie.info['genres'].each do |gen|\n      print gen + ' '\n    end\n\n    print \" ... #{movie.info['actors'][0]}\\n\"\n  end\n1992: A Few Good Men ... Crime Drama Mystery Thriller  ... Tom Cruise\n1992: A League of Their Own ... Comedy Drama Sport  ... Tom Hanks\n1992: A River Runs Through It ... Drama  ... Craig Sheffer\n.\n.\n.\n1992: Howards End ... Drama Romance  ... Anthony Hopkins\n1992: Jennifer Eight ... Crime Drama Mystery Thriller  ... Andy Garcia\n1992: Juice ... Crime Drama Thriller  ... Omar Epps\n=> nil\n\n\n\u30b9\u30ad\u30e3\u30f3\u3068\u30d5\u30a3\u30eb\u30bf\u30fc\u30671950\u5e74\u4ee3\u306e\u6620\u753b\u3092\u53d6\u5f97\u3059\u308b\n1950\u5e74\u4ee3\u3001\u3064\u307e\u308a1950\u5e74\u304b\u30891959\u5e74\u307e\u3067\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u6620\u753b\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306b\u3064\u3044\u3066\u306e\u7bc4\u56f2\u6307\u5b9a\u306b\u306a\u308b\u305f\u3081\u30af\u30a8\u30ea\u304c\u4f7f\u3048\u306a\u3044\u306e\u3067\u30b9\u30ad\u30e3\u30f3\u3068\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u3053\u306e\u30b9\u30ad\u30e3\u30f3\u306e\u7d50\u679c\u30bb\u30c3\u30c8\u306f 1 MB \u3092\u8d85\u3048\u308b\u305f\u3081\u30da\u30fc\u30b8\u5206\u5272\u304c\u767a\u751f\u3059\u308b\u306e\u3060\u304c\u3001\u6b21\u306e\u30da\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092 Aws::Record \u304c\u81ea\u52d5\u7684\u306b\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u3002\n$ rails c\n> movies = Movie.scan(\n    projection_expression: '#yr, title, info.rating',\n    filter_expression: '#yr between :start_yr and :end_yr',\n    expression_attribute_names: { '#yr' => 'year' },\n    expression_attribute_values: { ':start_yr' => 1950, ':end_yr' => 1959 })\n=> #<Aws::Record::ItemCollection:0x007fd69ff708a0 @search_method=:scan, @search_params={:projection_expression=>\"#yr, title, info.rating\", :filter_expression=>\"#yr between :start_yr and :end_yr\", :expression_attribute_names=>{\"#yr\"=>\"year\"}, :expression_attribute_values=>{\":start_yr\"=>1950, \":end_yr\"=>1959}, :table_name=>\"Movie\"}, @model=Movie, @client=#<Aws::DynamoDB::Client>>\n> movies.each do |movie|\n    puts \"#{movie.year.to_i}: #{movie.title} ... #{movie.info['rating'].to_f}\"\n  end\n[Aws::DynamoDB::Client 200 0.296593 0 retries] scan(projection_expression:\"#yr, title, info.rating\",filter_expression:\"#yr between :start_yr and :end_yr\",expression_attribute_names:{\"#yr\"=>\"year\"},expression_attribute_values:{\":start_yr\"=>{n:\"1950\"},\":end_yr\"=>{n:\"1959\"}},table_name:\"Movie\")  \n\n1952: High Noon ... 8.2\n1952: Singin' in the Rain ... 8.4\n1952: The Member of the Wedding ... 6.8\n.\n.\n.\n1951: The Day the Earth Stood Still ... 7.9\n[Aws::DynamoDB::Client 200 0.124166 0 retries] scan(projection_expression:\"#yr, title, info.rating\",filter_expression:\"#yr between :start_yr and :end_yr\",expression_attribute_names:{\"#yr\"=>\"year\"},expression_attribute_values:{\":start_yr\"=>{n:\"1950\"},\":end_yr\"=>{n:\"1959\"}},table_name:\"Movie\",exclusive_start_key:{\"title\"=>{s:\"Iron Man 2\"},\"year\"=>{n:\"2010.0\"}})  \n\n1955: East of Eden ... 8.0\n.\n.\n.\n1950: Rashomon ... 8.4\n1950: Sunset Blvd. ... 8.6\n1950: Tea for Two ... 6.4\n=> nil\n\n\nStep 5: \u30c6\u30fc\u30d6\u30eb\u3092\u524a\u9664\u3059\u308b\n\u6700\u5f8c\u306b Movies \u30c6\u30fc\u30d6\u30eb\u3092\u524a\u9664\u3059\u308b\u3002\u3053\u308c\u306f Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3059\u308b\u3002\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3059\u308b\ndown \u30e1\u30bd\u30c3\u30c9\u306e\u5185\u5bb9\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4fee\u6b63\u3059\u308b\u3002\n\n20161105093705_create_movies.rb\n@@ -11,6 +11,7 @@ class CreateMovies < ActiveRecord::Migration[5.0]\n   end\n\n   def down\n-    raise ActiveRecord::IrreversibleMigration\n+    migration = Aws::Record::TableMigration.new(Movie)\n+    migration.delete!\n   end\n end\n\n\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\u3002\n$ rails db:rollback\n\n\nMovie \u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\nRails \u30b3\u30f3\u30bd\u30fc\u30eb\u3067 Movie \u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n$ rails c\n>  Movie.table_exists?\n[Aws::DynamoDB::Client 400 0.06534 0 retries] describe_table(table_name:\"Movie\") Aws::DynamoDB::Errors::ResourceNotFoundException Cannot do operations on a non-existent table\n\n=> false\n> exit\n\n\nAws::Record \u3092\u4f7f\u7528\u3057\u3066 DynamoDB \u306e\u30c6\u30fc\u30d6\u30eb\u3092 Ruby on Rails \u304b\u3089\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u3092\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u98a8\u306b\u8aac\u660e\u3057\u305f\u3002AWS SDK for Ruby \u3067 DynamoDB \u3092\u64cd\u4f5c\u3059\u308b\u3088\u308a\u306f\u4fbf\u5229\u306a\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3002\u305c\u3072 DynamoDB \u3092\u4f7f\u7528\u3057\u305f Rails \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6311\u6226\u3057\u3066\u307f\u3066\u306d\u3002\n\n\u95a2\u9023\u8a18\u4e8b\nOS X \u306b DynamoDB Local \u3092 Homebrew \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066 brew services \u3067\u8d77\u52d5\u3059\u308b\nRails \u3067 AWS SDK for Ruby \u306e Aws.config \u3092\u74b0\u5883\u5225\u306b\u8a2d\u5b9a\u3059\u308b\n\n\u53c2\u8003\u6587\u732e\nhttp://docs.aws.amazon.com/ja_jp/amazondynamodb/latest/gettingstartedguide/GettingStarted.Ruby.html\nhttps://aws.amazon.com/jp/blogs/developer/general-availability-release-of-the-aws-record-gem/\nhttp://docs.aws.amazon.com/awssdkrubyrecord/api/index.html\nDynamoDB \u30c6\u30fc\u30d6\u30eb\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30af\u30e9\u30b9\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b [Aws::Record](https://github.com/aws/aws-sdk-ruby-record) \u3092\u4f7f\u7528\u3057\u3066 DynamoDB \u3092 Ruby on Rails \u304b\u3089\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u3092\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u98a8\u306b\u30e1\u30e2\u3063\u3068\u304f\u3002\n\nJava \u3084 C# \u5411\u3051\u306b\u306f\u9ad8\u30ec\u30d9\u30eb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u516c\u5f0f\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\u3057\u304b\u3057\u3001\u516c\u5f0f\u306a Ruby \u5411\u3051\u306e\u9ad8\u30ec\u30d9\u30eb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306e Aws::Record \u306f2016\u5e748\u6708\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3070\u304b\u308a\u3067\u3001\u958b\u767a\u8005\u30ac\u30a4\u30c9\u306b\u3082\u8a73\u7d30\u306a\u8a18\u8f09\u306f\u306a\u3044\u3002\uff08AWS SDK for Ruby \u30d0\u30fc\u30b8\u30e7\u30f31\u306b\u306f\u4f3c\u305f\u3088\u3046\u306a\u6a5f\u80fd\u304c\u642d\u8f09\u3055\u308c\u3066\u3044\u305f\u304c\u3001AWS SDK for Ruby \u30d0\u30fc\u30b8\u30e7\u30f32\u306b\u306f\u642d\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u3002\uff09\u3053\u306e\u8a18\u4e8b\u3067\u306f Aws::Record \u3068 Ruby on Rails \u3092\u4f7f\u7528\u3057\u3066 Amazon DynamoDB \u5165\u9580\u30ac\u30a4\u30c9\u306e [Ruby \u304a\u3088\u3073 DynamoDB](http://docs.aws.amazon.com/ja_jp/amazondynamodb/latest/gettingstartedguide/GettingStarted.Ruby.html) \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u518d\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\n# \u4e8b\u524d\u6e96\u5099\n\nRuby \u3068 Ruby on Rails \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3053\u3068\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f Ruby 2.3.1 \u3068 Ruby on Rails 5.0.0.1 \u3092\u5bfe\u8c61\u3068\u3059\u308b\u3002\n\nDynamoDB Local \u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u8d77\u52d5\u3057\u3066\u304a\u304f\u3002OS X \u3067\u3042\u308c\u3070 [OS X \u306b DynamoDB Local \u3092 Homebrew \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066 brew services \u3067\u8d77\u52d5\u3059\u308b](http://qiita.com/takuya0301/items/1718d6b9e3a3c31aefcf)\u3092\u53c2\u8003\u306b\u3057\u3066\u307b\u3057\u3044\u3002\n\n# Rails \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n\nRails \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9069\u5f53\u306a\u540d\u524d\u3067\u4f5c\u6210\u3059\u308b\u3002\u4ee5\u964d\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3059\u308b\u3002\n\n```shell-session\n$ rails new dynamodb-tutorial\n$ cd dynamodb-tutorial\n```\n\n# Rails \u7528\u306e AWS SDK for Ruby \u3068 Aws::Record \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\nGemfile \u306b `aws-sdk-rails` \u3068 `aws-record` \u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n```diff:Gemfile\n@@ -26,6 +26,10 @@ gem 'jbuilder', '~> 2.5'\n # gem 'redis', '~> 3.0'\n # Use ActiveModel has_secure_password\n # gem 'bcrypt', '~> 3.1.7'\n+# Use AWS SDK for Ruby\n+gem 'aws-sdk-rails'\n+# Use Aws::Record as a data mapping abstraction for Amazon DynamoDB\n+gem 'aws-record'\n \n # Use Capistrano for deployment\n # gem 'capistrano-rails', group: :development\n```\n\n`bundle` \u3092\u5b9f\u884c\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n```shell-session\n$ bundle\n```\n\n# AWS SDK for Ruby \u3092\u8a2d\u5b9a\u3059\u308b\n\nAWS SDK for Ruby \u7528\u306b\u74b0\u5883\u5225\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u3002\u306a\u304a\u3001\u30a2\u30af\u30bb\u30b9\u30ad\u30fc ID \u304c\u63a5\u7d9a\u5148\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b1\u5bfe1\u306b\u5bfe\u5fdc\u3059\u308b\u306e\u3067\u3001DynamoDB JavaScript Shell \u306a\u3069\u3067 DynamoDB \u3092\u95b2\u89a7\u3059\u308b\u3068\u304d\u306f\u30a2\u30af\u30bb\u30b9\u30ad\u30fc ID \u3092\u4e00\u81f4\u3055\u305b\u308b\u3002\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3068\u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u8a2d\u5b9a\u3082\u5fc5\u9808\u3002DynamoDB JavaScript Shell \u304b\u3089\u95b2\u89a7\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u30ea\u30fc\u30b8\u30e7\u30f3\u306f us-west-2 \u306b\u8a2d\u5b9a\u3059\u308b\u3002\u307e\u305f\u3001\u958b\u767a\u3084\u30c6\u30b9\u30c8\u3067\u306f DynamoDB Local \u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092 `http://localhost:8000` \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\n```yaml:config/aws.yml\ndevelopment:\n  access_key_id: DynamodbTutorialDevelopment\n  secret_access_key: DynamodbTutorialDevelopmentSecret\n  region: us-west-2\n  endpoint: http://localhost:8000\n\ntest:\n  access_key_id: DynamodbTutorialTest\n  secret_access_key: DynamodbTutorialTestSecret\n  region: us-west-2\n  endpoint: http://localhost:8000\n\nproduction:\n  access_key_id: <%= ENV[\"AWS_ACCESS_KEY_ID\"] %>\n  secret_access_key: <%= ENV[\"AWS_SECRET_ACCESS_KEY\"] %>\n  region: <%= ENV[\"AWS_REGION\"] %>\n```\n\n```rb:config/initializers/aws.rb\n# Be sure to restart your server when you modify this file.\n\n# Configure AWS SDK for Ruby.\nAws.config.update(Rails.application.config_for(:aws).symbolize_keys)\n```\n\n\u3053\u306e\u8a2d\u5b9a\u306e\u8a73\u7d30\u306f [Rails \u3067 AWS SDK for Ruby \u306e Aws.config \u3092\u74b0\u5883\u5225\u306b\u8a2d\u5b9a\u3059\u308b](http://qiita.com/takuya0301/items/9a5d7a4539ad56cc5d56)\u3092\u898b\u3066\u307b\u3057\u3044\u3002\n\n# Step 1: \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\n\n\u3053\u3053\u304b\u3089\u306f Amazon DynamoDB \u5165\u9580\u30ac\u30a4\u30c9\u306e [Ruby \u304a\u3088\u3073 DynamoDB](http://docs.aws.amazon.com/ja_jp/amazondynamodb/latest/gettingstartedguide/GettingStarted.Ruby.html) \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u6cbf\u3063\u3066\u5b9f\u88c5\u3057\u3066\u3044\u304f\u3002\n\n\u307e\u305a\u306f Movies \u3068\u3044\u3046\u540d\u524d\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\n## Movie \u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\n\n\u307e\u305a\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b Movie \u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002Aws::Record \u306f\u30e2\u30c7\u30eb\u304b\u3089\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u3060\u3002\n\n```rb:app/models/movie.rb\nclass Movie\n  include Aws::Record\n\n  integer_attr :year,  hash_key: true\n  string_attr  :title, range_key: true\n  map_attr     :info\nend\n```\n\n## \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\n\n\u6b21\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u3002\n\n```shell-session\n$ rails g migration create_movies\n```\n\n\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3002`provisioned_throughput` \u306f DynamoDB Local \u3067\u306f\u7121\u8996\u3055\u308c\u308b\u3002\u672c\u756a\u74b0\u5883\u306e DynamoDB \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u6700\u5c0f\u5024\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u306e\u304c\u7121\u96e3\u304b\u306a\u3002\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u306b `down` \u30e1\u30bd\u30c3\u30c9\u3067 `ActiveRecord::IrreversibleMigration` \u4f8b\u5916\u3092\u6295\u3052\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\u30c6\u30fc\u30d6\u30eb\u306e\u524a\u9664\u306b\u3064\u3044\u3066\u306f\u8a18\u4e8b\u306e\u7d42\u308f\u308a\u306e\u65b9\u3092\u898b\u3066\u307b\u3057\u3044\u3002\n\n```rb:20161105093705_create_movies.rb\nclass CreateMovies < ActiveRecord::Migration[5.0]\n  def up\n    migration = Aws::Record::TableMigration.new(Movie)\n    migration.create!(\n      provisioned_throughput: {\n        read_capacity_units: 1,\n        write_capacity_units: 1\n      }\n    )\n    migration.wait_until_available\n  end\n\n  def down\n    raise ActiveRecord::IrreversibleMigration\n  end\nend\n```\n\n## \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n```shell-session\n$ rails db:migrate\n```\n\n\u306a\u304a\u3001\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u30c6\u30fc\u30d6\u30eb\u306f SQLite \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4f5c\u6210\u3055\u308c\u308b\u3002DynamoDB \u306e\u307f\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5834\u5408\u306f Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u30c6\u30fc\u30d6\u30eb\u3092\u3069\u3046\u3059\u308b\u304b\u8003\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u306a\u3044\u3068\u3044\u3046\u306e\u3082\u3072\u3068\u3064\u306e\u89e3\u6c7a\u7b56\u304b\u3068\u601d\u3046\u3002\n\n## Movie \u30c6\u30fc\u30d6\u30eb\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308b\n\nRails \u30b3\u30f3\u30bd\u30fc\u30eb\u3067 Movie \u30c6\u30fc\u30d6\u30eb\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n```shell-session\n$ rails c\n>  Movie.table_exists?\n[Aws::DynamoDB::Client 200 0.211896 0 retries] describe_table(table_name:\"Movie\")  \n\n=> true\n> exit\n```\n\n# Step 2: \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\n\n\u6620\u753b\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092 DynamoDB \u306b\u30ed\u30fc\u30c9\u3059\u308b\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f Rails \u306e\u30b7\u30fc\u30c9\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066 `db/moviedata.json` \u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u3002\n\n```shell-session\n$ curl -O http://docs.aws.amazon.com/ja_jp/amazondynamodb/latest/gettingstartedguide/samples/moviedata.zip\n$ unzip moviedata.zip\n$ mv moviedata.json db\n$ rm moviedata.zip\n```\n\n## Movie \u30c6\u30fc\u30d6\u30eb\u306b\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\n\n`db/moviedata.json` \u306e\u5185\u5bb9\u3092 DynamoDB \u306b\u4fdd\u5b58\u3059\u308b\u30b3\u30fc\u30c9\u3092\u30b7\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3059\u308b\u3002\n\n```rb:db/seeds.rb\n# This file should contain all the record creation needed to seed the database with its default values.\n# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).\n#\n# Examples:\n#\n#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])\n#   Character.create(name: 'Luke', movie: movies.first)\n\n# Load movies\nfile = File.read('db/moviedata.json')\nmovies = JSON.parse(file)\nmovies.each do |movie|\n  Movie.new(movie).save!\nend\n```\n\n\u30b7\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3002\u3053\u306e\u5b9f\u884c\u306b\u306f\u6570\u5341\u79d2\u7a0b\u5ea6\u306e\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u5c11\u3057\u5f85\u3068\u3046\u3002\n\n```shell-session\n$ rails db:seed\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u30ed\u30fc\u30c9\u3092\u78ba\u8a8d\u3059\u308b\n\nRails \u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n```shell-session\n$ rails c\n> Movie.find(year: 2013, title: 'Rush')\n[Aws::DynamoDB::Client 200 0.051161 0 retries] get_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2013\"},\"title\"=>{s:\"Rush\"}})  \n\n=> #<Movie:0x007fe09d5a1268 @data=#<Aws::Record::ItemData:0x007fe09d58add8 @data={:year=>#<BigDecimal:7fe09d5a2410,'0.2013E4',9(18)>, :title=>\"Rush\", :info=>{\"actors\"=>[\"Daniel Bruhl\", \"Chris Hemsworth\", \"Olivia Wilde\"], \"release_date\"=>\"2013-09-02T00:00:00Z\", \"plot\"=>\"A re-creation of the merciless 1970s rivalry between Formula One rivals James Hunt and Niki Lauda.\", \"genres\"=>[\"Action\", \"Biography\", \"Drama\", \"Sport\"], \"image_url\"=>\"http://ia.media-imdb.com/images/M/MV5BMTQyMDE0MTY0OV5BMl5BanBnXkFtZTcwMjI2OTI0OQ@@._V1_SX400_.jpg\", \"directors\"=>[\"Ron Howard\"], \"rating\"=>#<BigDecimal:7fe09d5a16f0,'0.83E1',18(18)>, \"rank\"=>#<BigDecimal:7fe09d5a15b0,'0.2E1',9(18)>, \"running_time_secs\"=>#<BigDecimal:7fe09d5a1470,'0.738E4',9(18)>}}, @clean_copies={:year=>2013, :title=>\"Rush\", :info=>{\"actors\"=>[\"Daniel Bruhl\", \"Chris Hemsworth\", \"Olivia Wilde\"], \"release_date\"=>\"2013-09-02T00:00:00Z\", \"plot\"=>\"A re-creation of the merciless 1970s rivalry between Formula One rivals James Hunt and Niki Lauda.\", \"genres\"=>[\"Action\", \"Biography\", \"Drama\", \"Sport\"], \"image_url\"=>\"http://ia.media-imdb.com/images/M/MV5BMTQyMDE0MTY0OV5BMl5BanBnXkFtZTcwMjI2OTI0OQ@@._V1_SX400_.jpg\", \"directors\"=>[\"Ron Howard\"], \"rating\"=>#<BigDecimal:7fe09d589e60,'0.83E1',18(18)>, \"rank\"=>#<BigDecimal:7fe09d589d98,'0.2E1',9(18)>, \"running_time_secs\"=>#<BigDecimal:7fe09d589cd0,'0.738E4',9(18)>}}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fe09ac7f3d0 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fe09ac4de98 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fe09ac572b8>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fe09ac45e28 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fe09ac45ec8>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fe09d2c8de8 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fe09d2c8ed8>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n```\n\n# Step 3: \u9805\u76ee\u3092\u4f5c\u6210\u30fb\u53d6\u5f97\u30fb\u66f4\u65b0\u30fb\u524a\u9664\u3059\u308b\n\nAws::Record \u3092\u4f7f\u7528\u3057\u3066\u9805\u76ee\u306e\u4f5c\u6210\u30fb\u8aad\u307f\u8fbc\u307f\u30fb\u66f4\u65b0\u30fb\u524a\u9664\u3092 Rails \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002Rails \u3067\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3057\u305f Web \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304b\u3089\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u304b\u3068\u8003\u3048\u305f\u306e\u3060\u3051\u3069\u3001\u8907\u5408\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3060\u3063\u305f\u308a\u3001\u5168\u4ef6\u8868\u793a\u3059\u308b\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3067\u3082\u306a\u304b\u3063\u305f\u308a\u3001info \u304c\u8907\u96d1\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u8ae6\u3081\u305f\u3002\u5143\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3082\u305d\u3053\u307e\u3067\u3084\u3063\u3066\u306a\u3044\u3057\u306d\u3002\n\n## \u65b0\u3057\u3044\u9805\u76ee\u3092\u4f5c\u6210\u3059\u308b\n\n\u65b0\u3057\u3044\u9805\u76ee\u306f ActiveRecord \u306e\u3088\u3046\u306b\u4f5c\u6210\u3067\u304d\u308b\u3002\n\n```shell-session\n$ rails c\n> movie = Movie.new(year: 2015, title: 'The Big New Movie', info: { plot: 'Nothing happens at all.', rating: 0 })\n> movie.save!\n[Aws::DynamoDB::Client 200 0.18404 0 retries] put_item(table_name:\"Movie\",item:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"},\"info\"=>{m:{\"plot\"=>{s:\"Nothing happens at all.\"},\"rating\"=>{n:\"0\"}}}},condition_expression:\"attribute_not_exists(#H) and attribute_not_exists(#R)\",expression_attribute_names:{\"#H\"=>\"year\",\"#R\"=>\"title\"})  \n\n=> #<struct Aws::DynamoDB::Types::PutItemOutput attributes=nil, consumed_capacity=nil, item_collection_metrics=nil>\n```\n\n## \u9805\u76ee\u3092\u53d6\u5f97\u3059\u308b\n\n\u9805\u76ee\u306e\u53d6\u5f97\u3067\u306f\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3092\u30cf\u30c3\u30b7\u30e5\u5f62\u5f0f\u3067\u6307\u5b9a\u3059\u308b\u3002Movie \u30e2\u30c7\u30eb\u306e\u3088\u3046\u306b\u8907\u5408\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u306e\u5834\u5408\u306f\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\uff08\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\uff09\u3068\u30bd\u30fc\u30c8\u30ad\u30fc\uff08\u30ec\u30f3\u30b8\u30ad\u30fc\uff09\u306e\u4e21\u65b9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```shell-session\n$ rails c\n> Movie.find(year: 2015, title: 'The Big New Movie')\n[Aws::DynamoDB::Client 200 0.081038 0 retries] get_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> #<Movie:0x007fe09d4726a8 @data=#<Aws::Record::ItemData:0x007fe09d4725e0 @data={:year=>#<BigDecimal:7fe09d473210,'0.2015E4',9(18)>, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09d472bf8,'0.0',9(18)>, \"plot\"=>\"Nothing happens at all.\"}}, @clean_copies={:year=>2015, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09d472018,'0.0',9(18)>, \"plot\"=>\"Nothing happens at all.\"}}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fe09d2632b8 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fe09d2390a8 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fe09d242b58>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fe09ab7c618 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fe09ab7c6b8>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fe09ab6e8d8 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fe09ab6e978>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n```\n\n## \u9805\u76ee\u3092\u66f4\u65b0\u3059\u308b\n\n\u9805\u76ee\u306e\u66f4\u65b0\u3067\u306f\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3068\u5909\u66f4\u3059\u308b\u5c5e\u6027\u3092\u30cf\u30c3\u30b7\u30e5\u5f62\u5f0f\u3067\u6307\u5b9a\u3059\u308b\u3002\n\n```shell-session\n$ rails c\n> Movie.update(year: 2015, title: 'The Big New Movie', info: { plot: 'Everything happens all at once.', rating: 5.5, actors: [\"Larry\", \"Moe\", \"Curly\"] })\n[Aws::DynamoDB::Client 200 0.042996 0 retries] update_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}},update_expression:\"SET #UE_A = :ue_a\",expression_attribute_names:{\"#UE_A\"=>\"info\"},expression_attribute_values:{\":ue_a\"=>{m:{\"plot\"=>{s:\"Everything happens all at once.\"},\"rating\"=>{n:\"5.5\"},\"actors\"=>{l:[{s:\"Larry\"},{s:\"Moe\"},{s:\"Curly\"}]}}}})  \n\n=> #<struct Aws::DynamoDB::Types::UpdateItemOutput attributes=nil, consumed_capacity=nil, item_collection_metrics=nil>\n```\n\n\u307e\u305f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u9805\u76ee\u3092\u53d6\u5f97\u3057\u3066\u304b\u3089\u7de8\u96c6\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3082\u3044\u3044\u3002\n\n```shell-session\n$ rails c\n> movie = Movie.find(year: 2015, title: 'The Big New Movie')\n[Aws::DynamoDB::Client 200 0.102433 0 retries] get_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> #<Movie:0x007fe09ac256a0 @data=#<Aws::Record::ItemData:0x007fe09ac25628 @data={:year=>#<BigDecimal:7fe09ac262d0,'0.2015E4',9(18)>, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09ac25f10,'0.55E1',18(18)>, \"plot\"=>\"Everything happens all at once.\", \"actors\"=>[\"Larry\", \"Moe\", \"Curly\"]}}, @clean_copies={:year=>2015, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09ac24f70,'0.55E1',18(18)>, \"plot\"=>\"Everything happens all at once.\", \"actors\"=>[\"Larry\", \"Moe\", \"Curly\"]}}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fe09d2632b8 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fe09d2390a8 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fe09d242b58>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fe09ab7c618 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fe09ab7c6b8>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fe09ab6e8d8 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fe09ab6e978>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n> movie.info['rating'] += 1\n=> #<BigDecimal:7fe09ab3baa0,'0.65E1',18(27)>\n> movie.save!\n[Aws::DynamoDB::Client 200 0.029221 0 retries] update_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}},update_expression:\"SET #UE_A = :ue_a\",expression_attribute_names:{\"#UE_A\"=>\"info\"},expression_attribute_values:{\":ue_a\"=>{m:{\"rating\"=>{n:\"6.5\"},\"plot\"=>{s:\"Everything happens all at once.\"},\"actors\"=>{l:[{s:\"Larry\"},{s:\"Moe\"},{s:\"Curly\"}]}}}})  \n\n=> #<struct Aws::DynamoDB::Types::UpdateItemOutput attributes=nil, consumed_capacity=nil, item_collection_metrics=nil>\n```\n\n## \u9805\u76ee\u3092\u524a\u9664\u3059\u308b\n\n\u9805\u76ee\u306e\u524a\u9664\u3067\u306f\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u305f\u9805\u76ee\u3092\u4f5c\u6210\u3057\u3066\u524a\u9664\u3059\u308b\u3002\u524a\u9664\u5bfe\u8c61\u306e\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u304c\u5224\u660e\u3057\u3066\u3044\u308c\u3070\u3053\u306e\u65b9\u6cd5\u3067\u3044\u3044\u3002\n\n```shell-session\n> movie = Movie.new(year: 2015, title: 'The Big New Movie')\n=> #<Movie:0x007fd6a23a9eb0 @data=#<Aws::Record::ItemData:0x007fd6a23a9e60 @data={:year=>2015, :title=>\"The Big New Movie\"}, @clean_copies={}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fd6a217a1a8 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fd6a20d35b0 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fd69fe628a0>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fd6a20c10b8 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fd6a20c1158>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fd6a20b09c0 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fd6a20b0a60>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n> movie.delete!\n[Aws::DynamoDB::Client 200 0.032924 0 retries] delete_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> true\n```\n\n\u307e\u305f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u9805\u76ee\u3092\u53d6\u5f97\u3057\u3066\u304b\u3089\u524a\u9664\u3057\u3066\u3082\u3044\u3044\u3002\u8aad\u307f\u53d6\u308a\u3068\u66f8\u304d\u8fbc\u307f\u306e2\u3064\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u524d\u8ff0\u306e\u65b9\u6cd5\u3088\u308a\u7121\u99c4\u304c\u3042\u308b\u3002\n\n```shell-session\n$ rails c\n> movie = Movie.find(year: 2015, title: 'The Big New Movie')\n[Aws::DynamoDB::Client 200 0.062304 0 retries] get_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> #<Movie:0x007fe09d041980 @data=#<Aws::Record::ItemData:0x007fe09d041868 @data={:year=>#<BigDecimal:7fe09d042b78,'0.2015E4',9(18)>, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09d042498,'0.65E1',18(18)>, \"plot\"=>\"Everything happens all at once.\", \"actors\"=>[\"Larry\", \"Moe\", \"Curly\"]}}, @clean_copies={:year=>2015, :title=>\"The Big New Movie\", :info=>{\"rating\"=>#<BigDecimal:7fe09d040c88,'0.65E1',18(18)>, \"plot\"=>\"Everything happens all at once.\", \"actors\"=>[\"Larry\", \"Moe\", \"Curly\"]}}, @dirty_flags={}, @model_attributes=#<Aws::Record::ModelAttributes:0x007fe09d2632b8 @model_class=Aws::Record::Attributes, @attributes={:year=>#<Aws::Record::Attribute:0x007fe09d2390a8 @name=:year, @database_name=\"year\", @dynamodb_type=\"N\", @marshaler=#<Aws::Record::Marshalers::IntegerMarshaler:0x007fe09d242b58>, @persist_nil=nil>, :title=>#<Aws::Record::Attribute:0x007fe09ab7c618 @name=:title, @database_name=\"title\", @dynamodb_type=\"S\", @marshaler=#<Aws::Record::Marshalers::StringMarshaler:0x007fe09ab7c6b8>, @persist_nil=nil>, :info=>#<Aws::Record::Attribute:0x007fe09ab6e8d8 @name=:info, @database_name=\"info\", @dynamodb_type=\"M\", @marshaler=#<Aws::Record::Marshalers::MapMarshaler:0x007fe09ab6e978>, @persist_nil=nil>}, @storage_attributes={\"year\"=>:year, \"title\"=>:title, \"info\"=>:info}>, @track_mutations=true>>\n> movie.delete!\n[Aws::DynamoDB::Client 200 0.027339 0 retries] delete_item(table_name:\"Movie\",key:{\"year\"=>{n:\"2015\"},\"title\"=>{s:\"The Big New Movie\"}})  \n\n=> true\n```\n\n# Step 4: \u30c7\u30fc\u30bf\u3092\u30af\u30a8\u30ea\u304a\u3088\u3073\u30b9\u30ad\u30e3\u30f3\u3059\u308b\n\nDynamoDB \u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b\u30af\u30a8\u30ea\u3068\u30b9\u30ad\u30e3\u30f3\u3092 Rails \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\n## \u30af\u30a8\u30ea\u30671\u5e74\u9593\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u6620\u753b\u3092\u53d6\u5f97\u3059\u308b\n\n1985\u5e74\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u6620\u753b\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\u5e74\u3092\u8868\u73fe\u3059\u308b\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u304c1985\u3067\u3042\u308b\u9805\u76ee\u3092\u30af\u30a8\u30ea\u3067\u53d6\u5f97\u3059\u308b\u3002\u73fe\u6642\u70b9\u3067\u306e Aws::Record \u306e\u30af\u30a8\u30ea\u306f AWS SDK for Ruby \u306e\u30af\u30a8\u30ea\u3092\u30c6\u30fc\u30d6\u30eb\u540d\u3092\u88dc\u5b8c\u3057\u3066\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u5f15\u6570\u306f\u540c\u3058\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306a\u308b\u3002\n\n```shell-session\n$ rails c\n> movies = Movie.query(\n    key_condition_expression: '#yr = :yyyy',\n    expression_attribute_names: { '#yr' => 'year' },\n    expression_attribute_values: { ':yyyy' => 1985 })\n=> #<Aws::Record::ItemCollection:0x007fe09ae542f0 @search_method=:query, @search_params={:key_condition_expression=>\"#yr = :yyyy\", :expression_attribute_names=>{\"#yr\"=>\"year\"}, :expression_attribute_values=>{\":yyyy\"=>1985}, :table_name=>\"Movie\"}, @model=Movie, @client=#<Aws::DynamoDB::Client>>\n> movies.each do |movie|\n    puts \"#{movie.year.to_i} #{movie.title}\"\n  end\n[Aws::DynamoDB::Client 200 0.134007 0 retries] query(key_condition_expression:\"#yr = :yyyy\",expression_attribute_names:{\"#yr\"=>\"year\"},expression_attribute_values:{\":yyyy\"=>{n:\"1985\"}},table_name:\"Movie\")  \n\n1985 A Nightmare on Elm Street Part 2: Freddy's Revenge\n1985 A Room with a View\n1985 A View to a Kill\n.\n.\n.\n1985 The Return of the Living Dead\n1985 Weird Science\n1985 Witness\n=> nil\n```\n\n## \u30af\u30a8\u30ea\u30671\u5e74\u9593\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u7279\u5b9a\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u6301\u3064\u3059\u3079\u3066\u306e\u6620\u753b\u3092\u53d6\u5f97\u3059\u308b\n\n1992\u5e74\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u6620\u753b\u304b\u3089\u3001\u6587\u5b57 A \u304b\u3089\u6587\u5b57 L \u307e\u3067\u3067\u59cb\u307e\u308b\u6620\u753b\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\u984c\u540d\u3092\u8868\u73fe\u3059\u308b\u30bd\u30fc\u30c8\u30ad\u30fc\u3067\u7bc4\u56f2\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n```shell-session\n$ rails c\n> movies = Movie.query(\n    projection_expression: '#yr, title, info.genres, info.actors[0]',\n    key_condition_expression: '#yr = :yyyy and title between :letter1 and :letter2',\n    expression_attribute_names: { '#yr' => 'year' },\n    expression_attribute_values: { ':yyyy' => 1992, ':letter1' => 'A', ':letter2' => 'L' })\n> movies.each do |movie|\n    print \"#{movie.year.to_i}: #{movie.title} ... \"\n\n    movie.info['genres'].each do |gen|\n      print gen + ' '\n    end\n\n    print \" ... #{movie.info['actors'][0]}\\n\"\n  end\n1992: A Few Good Men ... Crime Drama Mystery Thriller  ... Tom Cruise\n1992: A League of Their Own ... Comedy Drama Sport  ... Tom Hanks\n1992: A River Runs Through It ... Drama  ... Craig Sheffer\n.\n.\n.\n1992: Howards End ... Drama Romance  ... Anthony Hopkins\n1992: Jennifer Eight ... Crime Drama Mystery Thriller  ... Andy Garcia\n1992: Juice ... Crime Drama Thriller  ... Omar Epps\n=> nil\n```\n\n## \u30b9\u30ad\u30e3\u30f3\u3068\u30d5\u30a3\u30eb\u30bf\u30fc\u30671950\u5e74\u4ee3\u306e\u6620\u753b\u3092\u53d6\u5f97\u3059\u308b\n\n1950\u5e74\u4ee3\u3001\u3064\u307e\u308a1950\u5e74\u304b\u30891959\u5e74\u307e\u3067\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u6620\u753b\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306b\u3064\u3044\u3066\u306e\u7bc4\u56f2\u6307\u5b9a\u306b\u306a\u308b\u305f\u3081\u30af\u30a8\u30ea\u304c\u4f7f\u3048\u306a\u3044\u306e\u3067\u30b9\u30ad\u30e3\u30f3\u3068\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u3053\u306e\u30b9\u30ad\u30e3\u30f3\u306e\u7d50\u679c\u30bb\u30c3\u30c8\u306f 1 MB \u3092\u8d85\u3048\u308b\u305f\u3081\u30da\u30fc\u30b8\u5206\u5272\u304c\u767a\u751f\u3059\u308b\u306e\u3060\u304c\u3001\u6b21\u306e\u30da\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092 Aws::Record \u304c\u81ea\u52d5\u7684\u306b\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u3002\n\n```shell-session\n$ rails c\n> movies = Movie.scan(\n    projection_expression: '#yr, title, info.rating',\n    filter_expression: '#yr between :start_yr and :end_yr',\n    expression_attribute_names: { '#yr' => 'year' },\n    expression_attribute_values: { ':start_yr' => 1950, ':end_yr' => 1959 })\n=> #<Aws::Record::ItemCollection:0x007fd69ff708a0 @search_method=:scan, @search_params={:projection_expression=>\"#yr, title, info.rating\", :filter_expression=>\"#yr between :start_yr and :end_yr\", :expression_attribute_names=>{\"#yr\"=>\"year\"}, :expression_attribute_values=>{\":start_yr\"=>1950, \":end_yr\"=>1959}, :table_name=>\"Movie\"}, @model=Movie, @client=#<Aws::DynamoDB::Client>>\n> movies.each do |movie|\n    puts \"#{movie.year.to_i}: #{movie.title} ... #{movie.info['rating'].to_f}\"\n  end\n[Aws::DynamoDB::Client 200 0.296593 0 retries] scan(projection_expression:\"#yr, title, info.rating\",filter_expression:\"#yr between :start_yr and :end_yr\",expression_attribute_names:{\"#yr\"=>\"year\"},expression_attribute_values:{\":start_yr\"=>{n:\"1950\"},\":end_yr\"=>{n:\"1959\"}},table_name:\"Movie\")  \n\n1952: High Noon ... 8.2\n1952: Singin' in the Rain ... 8.4\n1952: The Member of the Wedding ... 6.8\n.\n.\n.\n1951: The Day the Earth Stood Still ... 7.9\n[Aws::DynamoDB::Client 200 0.124166 0 retries] scan(projection_expression:\"#yr, title, info.rating\",filter_expression:\"#yr between :start_yr and :end_yr\",expression_attribute_names:{\"#yr\"=>\"year\"},expression_attribute_values:{\":start_yr\"=>{n:\"1950\"},\":end_yr\"=>{n:\"1959\"}},table_name:\"Movie\",exclusive_start_key:{\"title\"=>{s:\"Iron Man 2\"},\"year\"=>{n:\"2010.0\"}})  \n\n1955: East of Eden ... 8.0\n.\n.\n.\n1950: Rashomon ... 8.4\n1950: Sunset Blvd. ... 8.6\n1950: Tea for Two ... 6.4\n=> nil\n```\n\n# Step 5: \u30c6\u30fc\u30d6\u30eb\u3092\u524a\u9664\u3059\u308b\n\n\u6700\u5f8c\u306b Movies \u30c6\u30fc\u30d6\u30eb\u3092\u524a\u9664\u3059\u308b\u3002\u3053\u308c\u306f Rails \u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3059\u308b\u3002\n\n# \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3059\u308b\n\n`down` \u30e1\u30bd\u30c3\u30c9\u306e\u5185\u5bb9\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4fee\u6b63\u3059\u308b\u3002\n\n```diff:20161105093705_create_movies.rb\n@@ -11,6 +11,7 @@ class CreateMovies < ActiveRecord::Migration[5.0]\n   end\n \n   def down\n-    raise ActiveRecord::IrreversibleMigration\n+    migration = Aws::Record::TableMigration.new(Movie)\n+    migration.delete!\n   end\n end\n```\n\n## \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n```shell-session\n$ rails db:rollback\n```\n\n## Movie \u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n\nRails \u30b3\u30f3\u30bd\u30fc\u30eb\u3067 Movie \u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n```shell-session\n$ rails c\n>  Movie.table_exists?\n[Aws::DynamoDB::Client 400 0.06534 0 retries] describe_table(table_name:\"Movie\") Aws::DynamoDB::Errors::ResourceNotFoundException Cannot do operations on a non-existent table\n\n=> false\n> exit\n```\n\n---\n\nAws::Record \u3092\u4f7f\u7528\u3057\u3066 DynamoDB \u306e\u30c6\u30fc\u30d6\u30eb\u3092 Ruby on Rails \u304b\u3089\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u3092\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u98a8\u306b\u8aac\u660e\u3057\u305f\u3002AWS SDK for Ruby \u3067 DynamoDB \u3092\u64cd\u4f5c\u3059\u308b\u3088\u308a\u306f\u4fbf\u5229\u306a\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3002\u305c\u3072 DynamoDB \u3092\u4f7f\u7528\u3057\u305f Rails \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6311\u6226\u3057\u3066\u307f\u3066\u306d\u3002\n\n# \u95a2\u9023\u8a18\u4e8b\n\n[OS X \u306b DynamoDB Local \u3092 Homebrew \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066 brew services \u3067\u8d77\u52d5\u3059\u308b](http://qiita.com/takuya0301/items/1718d6b9e3a3c31aefcf)\n[Rails \u3067 AWS SDK for Ruby \u306e Aws.config \u3092\u74b0\u5883\u5225\u306b\u8a2d\u5b9a\u3059\u308b](http://qiita.com/takuya0301/items/9a5d7a4539ad56cc5d56)\n\n# \u53c2\u8003\u6587\u732e\n\nhttp://docs.aws.amazon.com/ja_jp/amazondynamodb/latest/gettingstartedguide/GettingStarted.Ruby.html\nhttps://aws.amazon.com/jp/blogs/developer/general-availability-release-of-the-aws-record-gem/\nhttp://docs.aws.amazon.com/awssdkrubyrecord/api/index.html\n"}