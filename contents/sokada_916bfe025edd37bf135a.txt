{"context": " More than 1 year has passed since last update.\n\nExample vimrc\nFrom vim.wikia.com\n\nMy vimrc\nif has('vim_starting')\n  set nocompatible               \" Be iMproved\n  set runtimepath+=~/.vim/bundle/neobundle.vim/\nendif\n\ncall neobundle#rc(expand('~/.vim/bundle/'))\n\n\" Let NeoBundle manage NeoBundle\nNeoBundleFetch 'Shougo/neobundle.vim'\n\n\n\" My Bundles here:\n\nNeoBundle 'Shougo/neobundle.vim'\nNeoBundle 'scrooloose/nerdtree'\nNeoBundle 'tpope/vim-unimpaired'\nNeoBundle 'tpope/vim-fugitive' \nNeoBundle 'gregsexton/gitv'\nNeoBundle 'SirVer/ultisnips'\nNeoBundle 'tyru/open-browser.vim'\nNeoBundle 'Trevoke/ultisnips-rspec'\nNeoBundle 'Shougo/vimshell'\nNeoBundle 'Shougo/unite.vim'\nNeoBundle 'itchyny/lightline.vim'\nNeoBundle 'suan/vim-instant-markdown'\nNeoBundle 'shinokada/autoswap_mac'\nNeoBundle 'shinokada/listtrans.vim'\nNeoBundle 'shinokada/SWTC.vim'\nNeoBundle 'shinokada/dragvisuals.vim'\n\n filetype plugin indent on     \" Required!\n \"\n \" Brief help\n \" :NeoBundleList          - list configured bundles\n \" :NeoBundleInstall(!)    - install(update) bundles\n \" :NeoBundleClean(!)      - confirm(or auto-approve) removal of unused bundles\n\n \" Installation check.\n NeoBundleCheck\n\n\" to turn syntax on\nsyntax on\n\n\" Use zsh for bash\n\" set shell=/bin/zsh\n\" for vim-instant-markdown\nset shell=bash\\ -i \n\n\" tab setting\nset noeb vb t_vb=\nset expandtab\nset shiftwidth=2\nset softtabstop=2\n\n\" for UltiSnips\nlet g:UltiSnipsSnippetsDir =\"/Users/teacher/.vim/bundle/ultisnips-master/UltiSnips\"\nlet g:UltiSnipsEditSplit = \"vertical\" \nlet g:UltiSnipsListSnippets = \"<C-tab>\"\n\n\" NERDTree, Use F3 for toggle NERDTree\nnmap <silent> <F3> :NERDTreeToggle<CR>\n\n\" for backspace key to be used\n:set backspace=2\n\n\" For mouse click in NERDTree\n:set mouse=a\nlet g:NERDTreeMouseMode=3 \n\n\" Use esc to noh(nohighlight) the searched words\n\" nnoremap <esc> :noh<return><esc> \" this creates a problem for down/up/right/left to insert A B C D\n\n\" Indentation\nset autoindent\n\n\" load indent file for the current filetype\nfiletype indent on\n\n\" to avoid removing indent when typing #\n:inoremap # X<BS>#\n\n\" colorscheme\n\" colorscheme darkblue\n\n\" Adding cursor color \nset cursorline\nhi Comment ctermfg=103\nhi CursorLine term=none cterm=none ctermbg=17 guibg=236\n\n\" Adding highlight for search\nset hlsearch\n\n\" set line numbers\nset number\n\n\" word wrapping and inserted line breakes only when Enter key is hit\nset wrap\nset linebreak\nset nolist  \" list disables linebreak\nset textwidth=0\nset wrapmargin=0\n\n\" this auto-reload .vimrc when saved\naugroup myvimrchooks\n    au!\n    autocmd bufwritepost .vimrc source ~/.vimrc\naugroup END\n\n\" for printing to html\n\" not printing number lines\n:let g:html_number_lines = 0\n\n\" For spell checking \nset spelllang=en_us\n\n\" for itchyne/lightline\nif !has('gui_running')\n  set t_Co=256\nendif\nset laststatus=2\n\nlet g:Powerline_symbols = 'fancy'\nlet g:lightline = {\n      \\ 'colorscheme': 'wombat',\n      \\ 'component': {\n      \\   'readonly': '%{&readonly?\"\ue0a0\":\"\"}',\n      \\ },\n      \\ 'separator': { 'left': '\ue0b0', 'right': '\ue0b2' },\n      \\ 'subseparator': { 'left': '\ue0b1', 'right': '\ue0b3' }\n      \\ }\n\n\"==========[ Damian Conway OSCON 2013: More Instantly Better Vim\"]============\n\n\"====[ Make the 81st column stand out ]====================\n\n    \" just the 81st column of wide lines...\n    highlight ColorColumn ctermbg=magenta\n    call matchadd('ColorColumn', '\\%81v', 100)\n\n\n\"====[ Make tabs, trailing whitespace, and non-breaking spaces visible ]======\n\n    exec \"set listchars=tab:\\uBB\\uBB,trail:\\uB7,nbsp:~\"\n    set list\n\n\n\"====[ Swap : and ; to make colon commands easier to type ]======\n\n\"    nnoremap  ;  :\n\"    nnoremap  :  ;\n\n\n\"====[ Always turn on syntax highlighting for diffs ]=========================\n\n    \" EITHER select by the file-suffix directly...\n    augroup PatchDiffHighlight\n        autocmd!\n        autocmd BufEnter  *.patch,*.rej,*.diff   syntax enable\n    augroup END\n\n\n\n\"====[ autoswap_mac.vim ]============\n\nset title titlestring=\n\n\"====[ listtrans.vim ]==========\n\nnmap  ;l   :call ListTrans_toggle_format()<CR>\nvmap  ;l   :call ListTrans_toggle_format('visual')<CR>\n\n\"====[ dragvisulas.vim ]=========\n\nruntime plugin/dragvisuals.vim\n\nvmap  <expr>  h        DVB_Drag('left')\nvmap  <expr>  l        DVB_Drag('right')\nvmap  <expr>  j        DVB_Drag('down')\nvmap  <expr>  k        DVB_Drag('up')\n\n\" Remove any introduced trailing whitespace after moving... \nlet g:DVB_TrimWS = 1\n\n\n## Example vimrc\n\n[From vim.wikia.com](http://vim.wikia.com/wiki/Example_vimrc)\n\n## My vimrc\n\n```.vimrc\nif has('vim_starting')\n  set nocompatible               \" Be iMproved\n  set runtimepath+=~/.vim/bundle/neobundle.vim/\nendif\n\ncall neobundle#rc(expand('~/.vim/bundle/'))\n\n\" Let NeoBundle manage NeoBundle\nNeoBundleFetch 'Shougo/neobundle.vim'\n\n\n\" My Bundles here:\n\nNeoBundle 'Shougo/neobundle.vim'\nNeoBundle 'scrooloose/nerdtree'\nNeoBundle 'tpope/vim-unimpaired'\nNeoBundle 'tpope/vim-fugitive' \nNeoBundle 'gregsexton/gitv'\nNeoBundle 'SirVer/ultisnips'\nNeoBundle 'tyru/open-browser.vim'\nNeoBundle 'Trevoke/ultisnips-rspec'\nNeoBundle 'Shougo/vimshell'\nNeoBundle 'Shougo/unite.vim'\nNeoBundle 'itchyny/lightline.vim'\nNeoBundle 'suan/vim-instant-markdown'\nNeoBundle 'shinokada/autoswap_mac'\nNeoBundle 'shinokada/listtrans.vim'\nNeoBundle 'shinokada/SWTC.vim'\nNeoBundle 'shinokada/dragvisuals.vim'\n\n filetype plugin indent on     \" Required!\n \"\n \" Brief help\n \" :NeoBundleList          - list configured bundles\n \" :NeoBundleInstall(!)    - install(update) bundles\n \" :NeoBundleClean(!)      - confirm(or auto-approve) removal of unused bundles\n\n \" Installation check.\n NeoBundleCheck\n\n\" to turn syntax on\nsyntax on\n\n\" Use zsh for bash\n\" set shell=/bin/zsh\n\" for vim-instant-markdown\nset shell=bash\\ -i \n\n\" tab setting\nset noeb vb t_vb=\nset expandtab\nset shiftwidth=2\nset softtabstop=2\n\n\" for UltiSnips\nlet g:UltiSnipsSnippetsDir =\"/Users/teacher/.vim/bundle/ultisnips-master/UltiSnips\"\nlet g:UltiSnipsEditSplit = \"vertical\" \nlet g:UltiSnipsListSnippets = \"<C-tab>\"\n\n\" NERDTree, Use F3 for toggle NERDTree\nnmap <silent> <F3> :NERDTreeToggle<CR>\n\n\" for backspace key to be used\n:set backspace=2\n\n\" For mouse click in NERDTree\n:set mouse=a\nlet g:NERDTreeMouseMode=3 \n\n\" Use esc to noh(nohighlight) the searched words\n\" nnoremap <esc> :noh<return><esc> \" this creates a problem for down/up/right/left to insert A B C D\n\n\" Indentation\nset autoindent\n\n\" load indent file for the current filetype\nfiletype indent on\n\n\" to avoid removing indent when typing #\n:inoremap # X<BS>#\n\n\" colorscheme\n\" colorscheme darkblue\n\n\" Adding cursor color \nset cursorline\nhi Comment ctermfg=103\nhi CursorLine term=none cterm=none ctermbg=17 guibg=236\n\n\" Adding highlight for search\nset hlsearch\n\n\" set line numbers\nset number\n\n\" word wrapping and inserted line breakes only when Enter key is hit\nset wrap\nset linebreak\nset nolist  \" list disables linebreak\nset textwidth=0\nset wrapmargin=0\n\n\" this auto-reload .vimrc when saved\naugroup myvimrchooks\n    au!\n    autocmd bufwritepost .vimrc source ~/.vimrc\naugroup END\n\n\" for printing to html\n\" not printing number lines\n:let g:html_number_lines = 0\n\n\" For spell checking \nset spelllang=en_us\n\n\" for itchyne/lightline\nif !has('gui_running')\n  set t_Co=256\nendif\nset laststatus=2\n\nlet g:Powerline_symbols = 'fancy'\nlet g:lightline = {\n      \\ 'colorscheme': 'wombat',\n      \\ 'component': {\n      \\   'readonly': '%{&readonly?\"\ue0a0\":\"\"}',\n      \\ },\n      \\ 'separator': { 'left': '\ue0b0', 'right': '\ue0b2' },\n      \\ 'subseparator': { 'left': '\ue0b1', 'right': '\ue0b3' }\n      \\ }\n\n\"==========[ Damian Conway OSCON 2013: More Instantly Better Vim\"]============\n\n\"====[ Make the 81st column stand out ]====================\n\n    \" just the 81st column of wide lines...\n    highlight ColorColumn ctermbg=magenta\n    call matchadd('ColorColumn', '\\%81v', 100)\n\n\n\"====[ Make tabs, trailing whitespace, and non-breaking spaces visible ]======\n\n    exec \"set listchars=tab:\\uBB\\uBB,trail:\\uB7,nbsp:~\"\n    set list\n\n\n\"====[ Swap : and ; to make colon commands easier to type ]======\n\n\"    nnoremap  ;  :\n\"    nnoremap  :  ;\n\n\n\"====[ Always turn on syntax highlighting for diffs ]=========================\n\n    \" EITHER select by the file-suffix directly...\n    augroup PatchDiffHighlight\n        autocmd!\n        autocmd BufEnter  *.patch,*.rej,*.diff   syntax enable\n    augroup END\n\n\n\n\"====[ autoswap_mac.vim ]============\n\nset title titlestring=\n\n\"====[ listtrans.vim ]==========\n\nnmap  ;l   :call ListTrans_toggle_format()<CR>\nvmap  ;l   :call ListTrans_toggle_format('visual')<CR>\n\n\"====[ dragvisulas.vim ]=========\n\nruntime plugin/dragvisuals.vim\n\nvmap  <expr>  h        DVB_Drag('left')\nvmap  <expr>  l        DVB_Drag('right')\nvmap  <expr>  j        DVB_Drag('down')\nvmap  <expr>  k        DVB_Drag('up')\n\n\" Remove any introduced trailing whitespace after moving... \nlet g:DVB_TrimWS = 1\n```\n", "tags": ["Vim", "vimrc"]}