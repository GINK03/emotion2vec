{"context": " More than 1 year has passed since last update.github\u3067\u4f7f\u3048\u308b\u7d75\u6587\u5b57\u306emarkdown\u5f62\u5f0f\u3067\u30b5\u30b8\u30a7\u30b9\u30c8\uff1f\u3057\u3066\u304f\u308c\u308b\u3001\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\u304f\u305d\u307f\u305f\u3044\u306a\u30b9\u30af\u30ea\u30d7\u30c8\n\u4f5c\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3067\u53d6\u308a\u8fbc\u3081\u3070\"\u3048\u3058\"\u3067\u5909\u63db\u3059\u308b\u3068:hoge:\u307f\u305f\u3044\u306a\u611f\u3058\u3067github\u3067\u4f7f\u3048\u308b\u7d75\u6587\u5b57\u304c\u3067\u3066\u304f\u308c\u307e\u3059\u3002\nhttp://www.emoji-cheat-sheet.com\n\u304b\u3089\u7d75\u6587\u5b57\u3092\u6301\u3063\u3066\u304d\u3066\u307e\u3059\u3002\n\ncreate_emoji_dictionary.sh\n#!/bin/sh\nEMOJI_DIR=/tmp/emoji_`date +\"%Y%m%d_%H%M%S\"`\nmkdir -p $EMOJI_DIR\npython emoji_to_dic.py > $EMOJI_DIR/mardkdown_utf8.txt\niconv -f utf-8 -t utf-16 $EMOJI_DIR/mardkdown_utf8.txt > $EMOJI_DIR/mardkdown.txt\nopen $EMOJI_DIR\n\n\nemoji_to_dic.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nimport argparse\nimport codecs\nimport sys\nimport urllib\nfrom HTMLParser import HTMLParser\n\n'''\nFixed variables\n'''\nurl = 'http://www.emoji-cheat-sheet.com/'\n\n'''\nParser\n'''\nclass EmojiParser(HTMLParser):\n  def __init__(self):\n    HTMLParser.__init__(self)\n    self.isToken = False\n    self.token = ''\n\n    '''\n    ' Find software version tag.\n    '''\n  def handle_starttag(self, tag, attrs):\n    self.isToken = False \n    attrs = dict(attrs)\n    if tag != 'span':\n      return\n    if 'class' not in attrs:\n      return\n    if attrs['class'] != 'name':\n      return\n    self.isToken = True\n\n  '''\n  ' Extraction version data.\n  '''\n  def handle_data(self, data):\n    data = data.strip('\\ \\n:')\n    if not self.isToken:\n      return\n    if not data:\n      return\n    print u'\"\u3048\u3058\",\":' + data + u':\",\"\u666e\u901a\u540d\u8a5e\"'\n\ndef GetParser():\n  return EmojiParser()\n\n'''\nMain.\n'''\nif __name__ == \"__main__\":\n  parser = GetParser()\n  if not parser:\n    print 'none parser.'\n    sys.exit(1)\n  sys.stdout = codecs.getwriter('utf_8')(sys.stdout)\n  parser.feed(urllib.urlopen(url).read())\n\ngithub\u3067\u4f7f\u3048\u308b\u7d75\u6587\u5b57\u306emarkdown\u5f62\u5f0f\u3067\u30b5\u30b8\u30a7\u30b9\u30c8\uff1f\u3057\u3066\u304f\u308c\u308b\u3001\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\u304f\u305d\u307f\u305f\u3044\u306a\u30b9\u30af\u30ea\u30d7\u30c8\n\u4f5c\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3067\u53d6\u308a\u8fbc\u3081\u3070\"\u3048\u3058\"\u3067\u5909\u63db\u3059\u308b\u3068:hoge:\u307f\u305f\u3044\u306a\u611f\u3058\u3067github\u3067\u4f7f\u3048\u308b\u7d75\u6587\u5b57\u304c\u3067\u3066\u304f\u308c\u307e\u3059\u3002\n\nhttp://www.emoji-cheat-sheet.com\n\u304b\u3089\u7d75\u6587\u5b57\u3092\u6301\u3063\u3066\u304d\u3066\u307e\u3059\u3002\n\n#### create_emoji_dictionary.sh\n```bash\n#!/bin/sh\nEMOJI_DIR=/tmp/emoji_`date +\"%Y%m%d_%H%M%S\"`\nmkdir -p $EMOJI_DIR\npython emoji_to_dic.py > $EMOJI_DIR/mardkdown_utf8.txt\niconv -f utf-8 -t utf-16 $EMOJI_DIR/mardkdown_utf8.txt > $EMOJI_DIR/mardkdown.txt\nopen $EMOJI_DIR\n```\n\n#### emoji_to_dic.py\n```py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nimport argparse\nimport codecs\nimport sys\nimport urllib\nfrom HTMLParser import HTMLParser\n\n'''\nFixed variables\n'''\nurl = 'http://www.emoji-cheat-sheet.com/'\n\n'''\nParser\n'''\nclass EmojiParser(HTMLParser):\n  def __init__(self):\n    HTMLParser.__init__(self)\n    self.isToken = False\n    self.token = ''\n\n    '''\n    ' Find software version tag.\n    '''\n  def handle_starttag(self, tag, attrs):\n    self.isToken = False \n    attrs = dict(attrs)\n    if tag != 'span':\n      return\n    if 'class' not in attrs:\n      return\n    if attrs['class'] != 'name':\n      return\n    self.isToken = True\n\n  '''\n  ' Extraction version data.\n  '''\n  def handle_data(self, data):\n    data = data.strip('\\ \\n:')\n    if not self.isToken:\n      return\n    if not data:\n      return\n    print u'\"\u3048\u3058\",\":' + data + u':\",\"\u666e\u901a\u540d\u8a5e\"'\n\ndef GetParser():\n  return EmojiParser()\n\n'''\nMain.\n'''\nif __name__ == \"__main__\":\n  parser = GetParser()\n  if not parser:\n    print 'none parser.'\n    sys.exit(1)\n  sys.stdout = codecs.getwriter('utf_8')(sys.stdout)\n  parser.feed(urllib.urlopen(url).read())\n```\n", "tags": ["GitHub", "Markdown", "Python"]}