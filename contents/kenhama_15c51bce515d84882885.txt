{"context": " More than 1 year has passed since last update.\u5148\u65e5\u306eyidev@\u6075\u6bd4\u5bff\u52c9\u5f37\u4f1a\u53c2\u52a0\u3055\u305b\u3066\u9802\u304d\u3001\u305d\u306e\u969b\u306e@dealforest\u3055\u3093\u306e\u767a\u8868\u3067facebook/chisel\u3068\u3044\u3046\u30c4\u30fc\u30eb\u3092\u77e5\u308a\u307e\u3057\u305f\u3002\n\u3053\u308c\u304c\u306a\u304b\u306a\u304b\u4fbf\u5229\u305d\u3046\u306a\u306e\u3067\u3001\u7d39\u4ecb\u3057\u307e\u3059\u3002\n@dealforest \u3055\u3093\u306eblog\u30a8\u30f3\u30c8\u30ea\n yidev@\u6075\u6bd4\u5bff\u52c9\u5f37\u4f1a \u3067 chisel \u306b\u3064\u3044\u3066\u767a\u8868\u3057\u3066\u304d\u305f (\u52d5\u753b\u4ed8\u304d)\nchisel\u306f\u3001LLDB\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089pythos\u30b9\u30af\u30ea\u30d7\u30c8\u3067lldb\u306e\u6a5f\u80fd\u3092\u30e9\u30c3\u30d7\u3057\u3066\u4fbf\u5229\u306b\u4f7f\u3046\u30b3\u30de\u30f3\u30c9\u7fa4\u306e\u3088\u3046\u3067\u3059\u3002\n\u305d\u3082\u305d\u3082\u79c1\u306fLLDB\u3092\u307e\u3063\u305f\u304f\u4f7f\u3063\u3066\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\uff08\u6c57\uff09\u3001\u3053\u308c\u3067NSLog\u5dee\u3057\u8fbc\u307f\u304c\u6e1b\u3063\u3066\u697d\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nbrew install chisel \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n~/.lldbinit-Xcode\u306b\u3001\u4ee5\u4e0b\u3092\u8a18\u8f09\uff08fblldb.py\u306e\u30d1\u30b9\u306f\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a18\u8f09\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n\n\n~/.lldbinit-Xcode\ncommand script import /usr/local/Cellar/chisel/1.1.0/libexec/fblldb.py\n\n\n(.lldbinit \u3060\u3068\u3001Xcode\u304b\u3089\u8d77\u52d5\u3057\u305fLLDB\u3067\u306f\u547c\u3070\u308c\u306a\u3044\u306e\u3067\u6ce8\u610f\u3002)\nXcode\u306elldb\u30d7\u30ed\u30f3\u30d7\u30c8\u3067\u3001help\u3068\u305f\u305f\u304f\u3068\u3001chisel\u3067\u4f7f\u3048\u308b\u30b3\u30de\u30f3\u30c9\u7fa4\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3055\u3089\u306bhelp <command> \u3067\u3001\u30b3\u30de\u30f3\u30c9\u306e\u8a73\u7d30\u8aac\u660e\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\nlldb\n(lldb) help\nThe following is a list of built-in, permanent debugger commands:\n\u301c\u7565\u301c\npca -- Run Python function __FBPrintCommands_pca\npcells -- Run Python function __FBPrintCommands_pcells\npclass -- Run Python function __FBPrintCommands_pclass\npinternals -- Run Python function __FBPrintCommands_pinternals\npinvocation -- Run Python function __FBInvocationCommands_pinvocation\npivar -- Run Python function __FBPrintCommands_pivar\npresponder -- Run Python function __FBPrintCommands_presponder\nptv -- Run Python function __FBPrintCommands_ptv\npvc -- Run Python function __FBPrintCommands_pvc\npviews -- Run Python function __FBPrintCommands_pviews\nshow -- Run Python function __FBDisplayCommands_show\ntaplog -- Run Python function __FBFindCommands_taplog\nunborder -- Run Python function __FBDisplayCommands_unborder\nunmask -- Run Python function __FBDisplayCommands_unmask\nvisualize -- Run Python function __FBVisualizationCommands_visualize\nvs -- Run Python function __FBFlickerCommands_vs\nwivar -- Run Python function __FBDebugCommands_wivarFor more information on any particular command, try 'help '.\n(lldb) help pvc\nPrint the recursion description of <aViewController>.\n\nArguments:\n  <aViewController>; Type: UIViewController*; The view controller to print the description of.\n\nSyntax: pvc <aViewController>\n\nThis command is implemented as FBPrintViewControllerHierarchyCommand in /usr/local/Cellar/chisel/1.1.0/libexec/commands/FBPrintCommands.py.\n\n(LLDB adds the next line, sorry...)\nSyntax: pvc\n(lldb)\n\n\n\n\u4fbf\u5229\u306a\u30b3\u30de\u30f3\u30c9\u305f\u3061\n\npvc\nViewController\u306e\u968e\u5c64\u69cb\u9020\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\npvc <viewController> \u3067\u3001\u6307\u5b9a\u3057\u305fViewController\u914d\u4e0b\u306e\u968e\u5c64\u69cb\u9020\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n(lldb) pvc\n <UINavigationController: 0x109268650; view = <UILayoutContainerView; 0x109419100>; frame = (0, 0; 320, 568)>\n | <KJMasterViewController: 0x109410ec0; view = <UITableView; 0x10a82fc00>; frame = (0, 0; 320, 568)>\n\n(lldb) pvc 0x109410ec0\n <KJMasterViewController: 0x109410ec0; view = <UITableView; 0x10a82fc00>; frame = (0, 0; 320, 568)>\n pviews\n <UIWindow: 0x109319480; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x109319d80>; layer = <UIWindowLayer: 0x109318560>>\n | <UILayoutContainerView: 0x109419100; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x10931bfa0>; layer = <CALayer: 0x109419320>>\n | | <UINavigationTransitionView: 0x10931b970; frame = (0 0; 320 568); clipsToBounds = YES; autoresize = W+H; layer = <CALayer: 0x109259740>>\n | | | <UIViewControllerWrapperView: 0x109527b30; frame = (0 0; 320 568); autoresize = W+H; layer = <CALayer: 0x109530800>>\n | | | | <UITableView: 0x10a82fc00; frame = (0 0; 320 568); clipsToBounds = YES; opaque = NO; autoresize = W+H; gestureRecognizers = <NSArray: 0x109266c80>; layer = <CALayer: 0x1095310c0>; contentOffset: {0, -64}>\n \u301c\u7565\u301c\n\n\npviews\nview\u306e\u968e\u5c64\u69cb\u9020\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u5f15\u6570\u3067view\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305fview\u914d\u4e0b\u306e\u968e\u5c64\u69cb\u9020\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n(lldb) pviews\n<UIWindow: 0x109319480; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x109319d80>; layer = <UIWindowLayer: 0x109318560>>\n| <UILayoutContainerView: 0x109419100; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x10931bfa0>; layer = <CALayer: 0x109419320>>\n|\u00a0 \u00a0 | <UINavigationTransitionView: 0x10931b970; frame = (0 0; 320 568); clipsToBounds = YES; autoresize = W+H; layer = <CALayer: 0x109259740>>\n|\u00a0 \u00a0 |\u00a0 \u00a0 | <UIViewControllerWrapperView: 0x109527b30; frame = (0 0; 320 568); autoresize = W+H; layer = <CALayer: 0x109530800>>\n|\u00a0 \u00a0 |\u00a0 \u00a0 |\u00a0 \u00a0 | <UITableView: 0x10a82fc00; frame = (0 0; 320 568); clipsToBounds = YES; opaque = NO; autoresize = W+H; gestureRecognizers = <NSArray: 0x109266c80>; layer = <CALayer: 0x1095310c0>; contentOffset: {0, -64}>\n\u301c\u7565\u301c\n\n\npcells\ntableView\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30bb\u30eb\u306e\u4e00\u89a7\u3092\u8868\u793a\n\npresponder\n\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u30ec\u30b9\u30dd\u30f3\u30c0\u30fc\u30c1\u30a7\u30a4\u30f3\u3092\u8868\u793a\n(lldb) pcells\n <__NSArrayI 0x109422590>(\n <UITableViewCell: 0x10928e800; frame = (0 0; 320 44); text = '2014-04-27 14:13:37 +0000'; autoresize = W; layer = <CALayer: 0x10928b300>>,\n <UITableViewCell: 0x10933ada0; frame = (0 44; 320 44); text = '2014-04-27 14:13:35 +0000'; autoresize = W; layer = <CALayer: 0x10933b090>>,\n <UITableViewCell: 0x10932fd10; frame = (0 88; 320 44); text = '2014-04-27 14:12:38 +0000'; autoresize = W; layer = <CALayer: 0x109322c00>>,\n <UITableViewCell: 0x109273a10; frame = (0 132; 320 44); text = '2014-04-27 14:11:32 +0000'; autoresize = W; layer = <CALayer: 0x10925d540>>\n )\n\n(lldb) presponder 0x10933ada0\n <UITableViewCell: 0x10933ada0; frame = (0 44; 320 44); text = '2014-04-27 14:13:35 +0000'; autoresize = W; layer = <CALayer: 0x10933b090>>\n | <UITableViewWrapperView: 0x10926ae50; frame = (0 0; 320 568); autoresize = W+H; layer = <CALayer: 0x10926b050>>\n | | <UITableView: 0x10a82fc00; frame = (0 0; 320 568); clipsToBounds = YES; opaque = NO; autoresize = W+H; gestureRecognizers = <NSArray: 0x109266c80>; layer = <CALayer: 0x1095310c0>; contentOffset: {0, -64}>\n | | | <KJMasterViewController: 0x109410ec0>\n | | | | <UIViewControllerWrapperView: 0x109527b30; frame = (0 0; 320 568); autoresize = W+H; layer = <CALayer: 0x109530800>>\n | | | | | <UINavigationTransitionView: 0x10931b970; frame = (0 0; 320 568); clipsToBounds = YES; autoresize = W+H; layer = <CALayer: 0x109259740>>\n | | | | | | <UILayoutContainerView: 0x109419100; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x10931bfa0>; layer = <CALayer: 0x109419320>>\n | | | | | | | <UINavigationController: 0x109268650>\n | | | | | | | | <UIWindow: 0x109319480; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x109319d80>; layer = <UIWindowLayer: 0x109318560>>\n | | | | | | | | | <UIApplication: 0x109308360>\n | | | | | | | | | | <KJAppDelegate: 0x10921a1e0>\n\n\u307e\u305f\u3001\u5bfe\u8c61\u306eview\u3092\u30a2\u30d7\u30ea\u4e0a\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u7279\u5b9a\u3059\u308b\u305f\u3081\u306e\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\ntaplog\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u30a2\u30d7\u30ea\uff08\u30b7\u30df\u30e5\u30ec\u30fc\u30bfor\u5b9f\u6a5f)\u306b\u623b\u308a\u3001\u753b\u9762\u3092tap\u3059\u308b\u3068\u3001tap\u3057\u305fview\u306e\u60c5\u5831\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\nvs\n\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u3001view\u306e\u9078\u629e/\u30b5\u30fc\u30c1\u304c\u3067\u304d\u308b\u3002\u5b9f\u884c\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305fView\u304c\u70b9\u706f\u8868\u793a\u3055\u308c\u3001\u4ee5\u4e0b\u306e\u30ad\u30fc\u5165\u529b\uff08\uff0b\u30ea\u30bf\u30fc\u30f3\uff09\u3067\u3001\u5bfe\u8c61view\u304c\u9077\u79fb\u3057\u307e\u3059\u3002\n(w) superview\u3078\u79fb\u52d5\n(s) \u6700\u521d\u306esubview\u3078\u79fb\u52d5\n(a) \u540c\u968e\u5c64\u306e\u4e00\u3064\u524d\u306eview\u3078\u79fb\u52d5\n(d) \u540c\u968e\u5c64\u306e\u6b21\u306eview\u3078\u79fb\u52d5\n(p) \u968e\u5c64\u3092\u8868\u793a\n(q) \u7d42\u4e86\n\n\npclass\n\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7d99\u627f\u3092\u8868\u793a\n\nfv\nview\u30af\u30e9\u30b9\u540d\u306e\u6b63\u898f\u8868\u73fe\u5f15\u6570\u6307\u5b9a\u3059\u308b\u3068\u3001\u8a72\u5f53\u3059\u308bview\u3092\u8868\u793a\u3002\n\nfvc\nviewController\u30af\u30e9\u30b9\u540d\u306e\u6b63\u898f\u8868\u73fe\u5f15\u6570\u6307\u5b9a\u3059\u308b\u3068\u3001\u8a72\u5f53\u3059\u308bviewController\u3092\u8868\u793a\u3002\n\n\u6700\u5f8c\u306b\n\u30b3\u30ec\u4ee5\u5916\u306b\u3082\u3001\u6307\u5b9a\u3057\u305fView\u3092\u30a2\u30d7\u30ea\u4e0a\u3067\u30de\u30fc\u30ad\u30f3\u30b0\u3057\u305f\u308a\u3001\u6307\u5b9a\u3057\u305fView\u3092\u30de\u30fc\u30ad\u30f3\u30b0\u3057\u305f\u308a\u975e\u8868\u793a\u306b\u3057\u305f\u308a\u3001osx\u4e0a\u306b\u30a4\u30e1\u30fc\u30b8\u51fa\u529b\u3057\u305f\u308a\u3068\u3001\u8272\u3005\u3068\u4fbf\u5229\u306a\u6a5f\u80fd\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u8a66\u3057\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\n@takayama\u3055\u3093yidev\u904b\u55b6\u3054\u304f\u308d\u3046\u3055\u307e\u3067\u3057\u305f\u3002\n\u5148\u65e5\u306e<a href=\"http://atnd.org/events/49477\">yidev@\u6075\u6bd4\u5bff\u52c9\u5f37\u4f1a</a>\u53c2\u52a0\u3055\u305b\u3066\u9802\u304d\u3001\u305d\u306e\u969b\u306e@dealforest\u3055\u3093\u306e\u767a\u8868\u3067<a href=\"https://github.com/facebook/chisel\">facebook/chisel</a>\u3068\u3044\u3046\u30c4\u30fc\u30eb\u3092\u77e5\u308a\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u304c\u306a\u304b\u306a\u304b\u4fbf\u5229\u305d\u3046\u306a\u306e\u3067\u3001\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n@dealforest \u3055\u3093\u306eblog\u30a8\u30f3\u30c8\u30ea\n<a href=\"http://blog.dealforest.net/2014/04/presente_chisel_in_yidev_ebisu/\"> yidev@\u6075\u6bd4\u5bff\u52c9\u5f37\u4f1a \u3067 chisel \u306b\u3064\u3044\u3066\u767a\u8868\u3057\u3066\u304d\u305f (\u52d5\u753b\u4ed8\u304d)</a>\n\nchisel\u306f\u3001LLDB\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089pythos\u30b9\u30af\u30ea\u30d7\u30c8\u3067lldb\u306e\u6a5f\u80fd\u3092\u30e9\u30c3\u30d7\u3057\u3066\u4fbf\u5229\u306b\u4f7f\u3046\u30b3\u30de\u30f3\u30c9\u7fa4\u306e\u3088\u3046\u3067\u3059\u3002\n\n\u305d\u3082\u305d\u3082\u79c1\u306fLLDB\u3092\u307e\u3063\u305f\u304f\u4f7f\u3063\u3066\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\uff08\u6c57\uff09\u3001\u3053\u308c\u3067NSLog\u5dee\u3057\u8fbc\u307f\u304c\u6e1b\u3063\u3066\u697d\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n1. brew install chisel \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n2. ~/.lldbinit-Xcode\u306b\u3001\u4ee5\u4e0b\u3092\u8a18\u8f09\uff08fblldb.py\u306e\u30d1\u30b9\u306f\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a18\u8f09\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n\n```bash:~/.lldbinit-Xcode\ncommand script import /usr/local/Cellar/chisel/1.1.0/libexec/fblldb.py\n```\n\n(.lldbinit \u3060\u3068\u3001Xcode\u304b\u3089\u8d77\u52d5\u3057\u305fLLDB\u3067\u306f\u547c\u3070\u308c\u306a\u3044\u306e\u3067\u6ce8\u610f\u3002)\n\nXcode\u306elldb\u30d7\u30ed\u30f3\u30d7\u30c8\u3067\u3001help\u3068\u305f\u305f\u304f\u3068\u3001chisel\u3067\u4f7f\u3048\u308b\u30b3\u30de\u30f3\u30c9\u7fa4\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3055\u3089\u306bhelp &lt;command&gt; \u3067\u3001\u30b3\u30de\u30f3\u30c9\u306e\u8a73\u7d30\u8aac\u660e\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```objectivec:lldb\n(lldb) help\nThe following is a list of built-in, permanent debugger commands:\n\u301c\u7565\u301c\npca -- Run Python function __FBPrintCommands_pca\npcells -- Run Python function __FBPrintCommands_pcells\npclass -- Run Python function __FBPrintCommands_pclass\npinternals -- Run Python function __FBPrintCommands_pinternals\npinvocation -- Run Python function __FBInvocationCommands_pinvocation\npivar -- Run Python function __FBPrintCommands_pivar\npresponder -- Run Python function __FBPrintCommands_presponder\nptv -- Run Python function __FBPrintCommands_ptv\npvc -- Run Python function __FBPrintCommands_pvc\npviews -- Run Python function __FBPrintCommands_pviews\nshow -- Run Python function __FBDisplayCommands_show\ntaplog -- Run Python function __FBFindCommands_taplog\nunborder -- Run Python function __FBDisplayCommands_unborder\nunmask -- Run Python function __FBDisplayCommands_unmask\nvisualize -- Run Python function __FBVisualizationCommands_visualize\nvs -- Run Python function __FBFlickerCommands_vs\nwivar -- Run Python function __FBDebugCommands_wivarFor more information on any particular command, try 'help '.\n(lldb) help pvc\nPrint the recursion description of <aViewController>.\n\nArguments:\n  <aViewController>; Type: UIViewController*; The view controller to print the description of.\n\nSyntax: pvc <aViewController>\n\nThis command is implemented as FBPrintViewControllerHierarchyCommand in /usr/local/Cellar/chisel/1.1.0/libexec/commands/FBPrintCommands.py.\n\n(LLDB adds the next line, sorry...)\nSyntax: pvc\n(lldb)\n```\n\n# \u4fbf\u5229\u306a\u30b3\u30de\u30f3\u30c9\u305f\u3061\n##pvc\nViewController\u306e\u968e\u5c64\u69cb\u9020\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\npvc &lt;viewController&gt; \u3067\u3001\u6307\u5b9a\u3057\u305fViewController\u914d\u4e0b\u306e\u968e\u5c64\u69cb\u9020\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n```\n(lldb) pvc\n <UINavigationController: 0x109268650; view = <UILayoutContainerView; 0x109419100>; frame = (0, 0; 320, 568)>\n | <KJMasterViewController: 0x109410ec0; view = <UITableView; 0x10a82fc00>; frame = (0, 0; 320, 568)>\n\n(lldb) pvc 0x109410ec0\n <KJMasterViewController: 0x109410ec0; view = <UITableView; 0x10a82fc00>; frame = (0, 0; 320, 568)>\n pviews\n <UIWindow: 0x109319480; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x109319d80>; layer = <UIWindowLayer: 0x109318560>>\n | <UILayoutContainerView: 0x109419100; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x10931bfa0>; layer = <CALayer: 0x109419320>>\n | | <UINavigationTransitionView: 0x10931b970; frame = (0 0; 320 568); clipsToBounds = YES; autoresize = W+H; layer = <CALayer: 0x109259740>>\n | | | <UIViewControllerWrapperView: 0x109527b30; frame = (0 0; 320 568); autoresize = W+H; layer = <CALayer: 0x109530800>>\n | | | | <UITableView: 0x10a82fc00; frame = (0 0; 320 568); clipsToBounds = YES; opaque = NO; autoresize = W+H; gestureRecognizers = <NSArray: 0x109266c80>; layer = <CALayer: 0x1095310c0>; contentOffset: {0, -64}>\n \u301c\u7565\u301c\n```\n\n## pviews\nview\u306e\u968e\u5c64\u69cb\u9020\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u5f15\u6570\u3067view\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305fview\u914d\u4e0b\u306e\u968e\u5c64\u69cb\u9020\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```\n(lldb) pviews\n<UIWindow: 0x109319480; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x109319d80>; layer = <UIWindowLayer: 0x109318560>>\n| <UILayoutContainerView: 0x109419100; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x10931bfa0>; layer = <CALayer: 0x109419320>>\n|\u00a0 \u00a0 | <UINavigationTransitionView: 0x10931b970; frame = (0 0; 320 568); clipsToBounds = YES; autoresize = W+H; layer = <CALayer: 0x109259740>>\n|\u00a0 \u00a0 |\u00a0 \u00a0 | <UIViewControllerWrapperView: 0x109527b30; frame = (0 0; 320 568); autoresize = W+H; layer = <CALayer: 0x109530800>>\n|\u00a0 \u00a0 |\u00a0 \u00a0 |\u00a0 \u00a0 | <UITableView: 0x10a82fc00; frame = (0 0; 320 568); clipsToBounds = YES; opaque = NO; autoresize = W+H; gestureRecognizers = <NSArray: 0x109266c80>; layer = <CALayer: 0x1095310c0>; contentOffset: {0, -64}>\n\u301c\u7565\u301c\n```\n\n## pcells\ntableView\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30bb\u30eb\u306e\u4e00\u89a7\u3092\u8868\u793a\n\n## presponder\n\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u30ec\u30b9\u30dd\u30f3\u30c0\u30fc\u30c1\u30a7\u30a4\u30f3\u3092\u8868\u793a\n\n```\n(lldb) pcells\n <__NSArrayI 0x109422590>(\n <UITableViewCell: 0x10928e800; frame = (0 0; 320 44); text = '2014-04-27 14:13:37 +0000'; autoresize = W; layer = <CALayer: 0x10928b300>>,\n <UITableViewCell: 0x10933ada0; frame = (0 44; 320 44); text = '2014-04-27 14:13:35 +0000'; autoresize = W; layer = <CALayer: 0x10933b090>>,\n <UITableViewCell: 0x10932fd10; frame = (0 88; 320 44); text = '2014-04-27 14:12:38 +0000'; autoresize = W; layer = <CALayer: 0x109322c00>>,\n <UITableViewCell: 0x109273a10; frame = (0 132; 320 44); text = '2014-04-27 14:11:32 +0000'; autoresize = W; layer = <CALayer: 0x10925d540>>\n )\n\n(lldb) presponder 0x10933ada0\n <UITableViewCell: 0x10933ada0; frame = (0 44; 320 44); text = '2014-04-27 14:13:35 +0000'; autoresize = W; layer = <CALayer: 0x10933b090>>\n | <UITableViewWrapperView: 0x10926ae50; frame = (0 0; 320 568); autoresize = W+H; layer = <CALayer: 0x10926b050>>\n | | <UITableView: 0x10a82fc00; frame = (0 0; 320 568); clipsToBounds = YES; opaque = NO; autoresize = W+H; gestureRecognizers = <NSArray: 0x109266c80>; layer = <CALayer: 0x1095310c0>; contentOffset: {0, -64}>\n | | | <KJMasterViewController: 0x109410ec0>\n | | | | <UIViewControllerWrapperView: 0x109527b30; frame = (0 0; 320 568); autoresize = W+H; layer = <CALayer: 0x109530800>>\n | | | | | <UINavigationTransitionView: 0x10931b970; frame = (0 0; 320 568); clipsToBounds = YES; autoresize = W+H; layer = <CALayer: 0x109259740>>\n | | | | | | <UILayoutContainerView: 0x109419100; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x10931bfa0>; layer = <CALayer: 0x109419320>>\n | | | | | | | <UINavigationController: 0x109268650>\n | | | | | | | | <UIWindow: 0x109319480; frame = (0 0; 320 568); autoresize = W+H; gestureRecognizers = <NSArray: 0x109319d80>; layer = <UIWindowLayer: 0x109318560>>\n | | | | | | | | | <UIApplication: 0x109308360>\n | | | | | | | | | | <KJAppDelegate: 0x10921a1e0>\n```\n\n\u307e\u305f\u3001\u5bfe\u8c61\u306eview\u3092\u30a2\u30d7\u30ea\u4e0a\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u7279\u5b9a\u3059\u308b\u305f\u3081\u306e\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n## taplog\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u30a2\u30d7\u30ea\uff08\u30b7\u30df\u30e5\u30ec\u30fc\u30bfor\u5b9f\u6a5f)\u306b\u623b\u308a\u3001\u753b\u9762\u3092tap\u3059\u308b\u3068\u3001tap\u3057\u305fview\u306e\u60c5\u5831\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n## vs\n\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u3001view\u306e\u9078\u629e/\u30b5\u30fc\u30c1\u304c\u3067\u304d\u308b\u3002\u5b9f\u884c\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305fView\u304c\u70b9\u706f\u8868\u793a\u3055\u308c\u3001\u4ee5\u4e0b\u306e\u30ad\u30fc\u5165\u529b\uff08\uff0b\u30ea\u30bf\u30fc\u30f3\uff09\u3067\u3001\u5bfe\u8c61view\u304c\u9077\u79fb\u3057\u307e\u3059\u3002\n\n```\n(w) superview\u3078\u79fb\u52d5\n(s) \u6700\u521d\u306esubview\u3078\u79fb\u52d5\n(a) \u540c\u968e\u5c64\u306e\u4e00\u3064\u524d\u306eview\u3078\u79fb\u52d5\n(d) \u540c\u968e\u5c64\u306e\u6b21\u306eview\u3078\u79fb\u52d5\n(p) \u968e\u5c64\u3092\u8868\u793a\n(q) \u7d42\u4e86\n```\n\n## pclass\n\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7d99\u627f\u3092\u8868\u793a\n\n## fv\nview\u30af\u30e9\u30b9\u540d\u306e\u6b63\u898f\u8868\u73fe\u5f15\u6570\u6307\u5b9a\u3059\u308b\u3068\u3001\u8a72\u5f53\u3059\u308bview\u3092\u8868\u793a\u3002\n\n## fvc\nviewController\u30af\u30e9\u30b9\u540d\u306e\u6b63\u898f\u8868\u73fe\u5f15\u6570\u6307\u5b9a\u3059\u308b\u3068\u3001\u8a72\u5f53\u3059\u308bviewController\u3092\u8868\u793a\u3002\n\n## \u6700\u5f8c\u306b\n\n\u30b3\u30ec\u4ee5\u5916\u306b\u3082\u3001\u6307\u5b9a\u3057\u305fView\u3092\u30a2\u30d7\u30ea\u4e0a\u3067\u30de\u30fc\u30ad\u30f3\u30b0\u3057\u305f\u308a\u3001\u6307\u5b9a\u3057\u305fView\u3092\u30de\u30fc\u30ad\u30f3\u30b0\u3057\u305f\u308a\u975e\u8868\u793a\u306b\u3057\u305f\u308a\u3001osx\u4e0a\u306b\u30a4\u30e1\u30fc\u30b8\u51fa\u529b\u3057\u305f\u308a\u3068\u3001\u8272\u3005\u3068\u4fbf\u5229\u306a\u6a5f\u80fd\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u8a66\u3057\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\n\n@takayama\u3055\u3093yidev\u904b\u55b6\u3054\u304f\u308d\u3046\u3055\u307e\u3067\u3057\u305f\u3002\n\n\n", "tags": ["Xcode", "LLDB", "iOS", "Objective-C"]}