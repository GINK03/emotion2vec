{"context": "\n\n\u306f\u3058\u3081\u306b\nPriority Encoder \u3068\u306f\u3001\u3042\u308b\u30d3\u30c3\u30c8\u5217\u304c\u4e0e\u3048\u3089\u308c\u3066\u3001\u305d\u306e\u30d3\u30c3\u30c8\u5217\u3092LSB(\u307e\u305f\u306fMSB)\u304b\u3089\u63a2\u7d22\u3057\u3066\u6700\u521d\u306b1\u3060\u3063\u305f\u3068\u3053\u308d\u3092\u898b\u3064\u3051\u307e\u3059\u3002\u898b\u3064\u304b\u3063\u305f\u4f4d\u7f6e\u3092\u6570\u5b57(Binary Integer)\u3067\u8fd4\u3059\u3082\u306e\u3092 Priority Encoder \u3068\u8a00\u3044\u307e\u3059\u3002\n\nFig.1 Primary (Binary Integer) Encoder\n\n\u307e\u305f\u3001\u6570\u5b57\u3067\u8fd4\u3055\u305a\u306b\u3001\u5165\u529b\u3055\u308c\u305f\u30d3\u30c3\u30c8\u5217\u306e\u3046\u3061\u3001\u6700\u521d\u306b1\u3060\u3063\u305f\u3068\u3053\u308d\u306e\u307f1\u306b\u3057\u3066\u5f8c\u306f\u5168\u90e80\u306b\u3057\u3066\u8fd4\u3059\u5834\u5408(One Hot)\u3082\u3042\u308a\u307e\u3059\u3002\n\nFig.2 Primary (One Hot) Encoder\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u3053\u306ePriority (One Hot) Encoder \u306e\u30d3\u30c3\u30c8\u5217\u306e\u5927\u304d\u3055\u304c Generic \u5909\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\uff11\u30d3\u30c3\u30c8\u301c1024\u30d3\u30c3\u30c8\u8d85\u306e\u53ef\u5909\u5024\u3068\u3057\u305f\u6642\u306eVHDL \u306e\u8a18\u8ff0\u65b9\u6cd5\u3068\u3001\u305d\u308c\u3092\u8ad6\u7406\u5408\u6210\u3057\u305f\u6642\u306e\u7d50\u679c\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\n\u4e8c\u6761\u9805BSD\u30e9\u30a4\u30bb\u30f3\u30b9 (2-clause BSD license) \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\nAlgorithm\n\n1. For-loop with exit\nVHDL \u306e For-loop \u306f exit \u6587\u3067\u30eb\u30fc\u30d7\u3092\u8131\u51fa\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3063\u3066\u8a18\u8ff0\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\nsample1.vhd\n     procedure Priority_Encode_To_OneHot_Use_Exit(\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        variable result      :     std_logic_vector(Data'range);\n    begin\n        result := (others => '0');\n        for i in Data'low to Data'high loop\n            result(i) := Data(i);\n            exit when (Data(i) = '1');\n        end loop;\n        Output := result;\n        Valid  := or_reduce(Data);\n    end procedure;\n\n\n\n\u3053\u3093\u306a\u306e\u8ad6\u7406\u5408\u6210\u51fa\u6765\u308b\u306e\uff1f\u3000\u3068\u3044\u3046\u7591\u554f\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u610f\u5916\u3068\u51fa\u6765\u305f\u308a\u3057\u307e\u3059\u3002\u305f\u3060\u3001STARC \u306e \u300eRTL \u8a2d\u8a08\u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9\u300f\u3067\u306f\u300cfor-loop \u6587\u5185\u3067 exit,next \u306f\u4f7f\u7528\u3057\u306a\u3044\u300d\u306e\u304c\u5fc5\u9808\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u7406\u7531\u306f\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u304c\u751f\u6210\u3059\u308bRTL\u306e\u30a4\u30e1\u30fc\u30b8\u304c\u63b4\u307f\u306b\u304f\u3044\u304b\u3089\u3067\u3059\u304c\u3001\u5b9f\u306f\u305d\u306e\u901a\u308a\u3067\u3001\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u306b\u3088\u3063\u3066\u751f\u6210\u3059\u308b\u56de\u8def\u304c\u7570\u306a\u308a\u307e\u3059\u3002\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30d3\u30c3\u30c8\u6570\u304c\u6570\u30d3\u30c3\u30c8\u306e\u5834\u5408\u306f\u3001\u3053\u306e\u8a18\u8ff0\u65b9\u6cd5\u3067\u3082\u7279\u306b\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u6570\u5341\u30d3\u30c3\u30c8\u4ee5\u4e0a\u306b\u306a\u308b\u3068\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u306e\u51fa\u6765\u6b21\u7b2c\u307f\u305f\u3044\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u306e\u3067\u4f7f\u7528\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n2. For-loop with found flag\n\u30d5\u30e9\u30b0\u3092\u4f7f\u3063\u3066\u5024\u3092\u751f\u6210\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002found_1 \u30d5\u30e9\u30b0\u306f false \u306b\u521d\u671f\u5316\u3057\u3066\u304a\u304d\u3001\u30eb\u30fc\u30d7\u3092\u4f7f\u3063\u3066\u5165\u529b\u30c7\u30fc\u30bf\u3092\u63a2\u7d22\u3057\u3001\u6700\u521d\u306b1\u3092\u898b\u3064\u3051\u305f\u3089 found_1 \u30d5\u30e9\u30b0\u3092\u30bb\u30c3\u30c8\u3057\u3066\u305d\u308c\u4ee5\u964d\u306f\u5168\u30660\u306b\u3057\u307e\u3059\u3002\n\nsample2.vhd\n    procedure Priority_Encode_To_OneHot_Use_Flag(\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        variable result      :     std_logic_vector(Data'range);\n        variable found_1     :     boolean;\n    begin\n        found_1 := false;\n        for i in Data'low to Data'high loop\n            if found_1 = false then\n                result(i) := Data(i);\n                found_1   := (Data(i) = '1');\n            else\n                result(i) := '0';\n            end if;\n        end loop;\n        Output := result;\n        Valid  := or_reduce(Data);\n    end procedure;\n\n\n\n\n3. For-loop with or-reduce\n\u51fa\u529b\u3059\u308b\u30d3\u30c3\u30c8\u5217\u306e\u500b\u3005\u306e\u30d3\u30c3\u30c8\u306e\u7acb\u5834\u306b\u306a\u3063\u3066\u3001\u81ea\u5206\u306e\u30d3\u30c3\u30c8\u306b1\u304c\u7acb\u3064\u6761\u4ef6\u3092\u8003\u3048\u3066\u307f\u308b\u3068\u3001\u305d\u308c\u306f\u6b21\u306e\u4e8c\u3064\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u5834\u5408\u3067\u3042\u308b\u3053\u3068\u304c\u5224\u308a\u307e\u3059\u3002\n\n\u5165\u529b\u30c7\u30fc\u30bf\u306e\u81ea\u5206\u3068\u540c\u3058\u4f4d\u7f6e\u306b\u3042\u308b\u30d3\u30c3\u30c8\u304c1\u306e\u5834\u5408\n\u5165\u529b\u30c7\u30fc\u30bf\u306e\u81ea\u5206\u3088\u308a\u524d\u306e\u4f4d\u7f6e\u306e\u30d3\u30c3\u30c8\u304c\u5168\u30660\u306e\u5834\u5408\n\n\nFig.3 For-loop with or-reduce \n\u4e0a\u306e\u6761\u4ef6\u901a\u308a\u306b VHDL \u3092\u8a18\u8ff0\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nsample3.vhd\n    procedure Priority_Encode_To_OneHot_Use_OrReduce(\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        variable result      :     std_logic_vector(Data'range);\n    begin\n        for i in Data'range loop\n            if (i = Data'low) then\n                result(i) := Data(i);\n            else\n                result(i) := Data(i) and (not or_reduce(Data(i-1 downto Data'low)));\n            end if;\n        end loop;\n        Output := result;\n        Valid  := or_reduce(Data);\n    end procedure;\n\n\n\n\u3061\u306a\u307f\u306b or_reduce \u3068\u306f\u4e0e\u3048\u3089\u308c\u305f\u30d3\u30c3\u30c8\u3059\u3079\u3066\u306eor(\u8ad6\u7406\u548c)\u3092\u3068\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u30d3\u30c3\u30c8\u306e\u3069\u308c\u304b\u304c1\u306e\u5834\u5408\u306b1\u306b\u306a\u308a\u307e\u3059\u3002or_reduce \u306e not(\u5426\u5b9a)\u306f\u30d3\u30c3\u30c8\u306e\u5168\u3066\u304c0\u306e\u5834\u5408\u306b1\u306b\u306a\u308a\u307e\u3059\u3002\n\n4. Use Decrement\n\u3053\u308c\u306f For-loop \u3092\u4f7f\u308f\u305a\u306b\u52a0\u7b97\u5668(\u6e1b\u7b97\u5668)\u3092\u4f7f\u3063\u3066\u8a72\u5f53\u3059\u308b\u30d3\u30c3\u30c8\u306e\u307f1\u306b\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\nsample4.vhd\n    procedure Priority_Encode_To_OneHot_Use_Decrement(\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        variable i_data      :     std_logic_vector(Data'length-1 downto 0);\n        variable t_data      :     std_logic_vector(Data'length   downto 0);\n        variable d_data      :     std_logic_vector(Data'length   downto 0);\n        variable r_data      :     std_logic_vector(Data'length-1 downto 0);\n        variable o_data      :     std_logic_vector(Data'range);\n    begin\n        i_data := Data;\n        t_data := \"0\" & i_data;\n        d_data := std_logic_vector(unsigned(t_data) - 1);\n        r_data := i_data and not d_data(i_data'range);\n        o_data := r_data;\n        Valid  := or_reduce(i_data);\n        Output := o_data;\n    end procedure;\n\n\n\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u30eb\u30fc\u30d7\u3092\u307e\u308f\u3055\u306a\u3044\u306e\u3067\u4e00\u898b\u826f\u3055\u305d\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u306f\u30eb\u30fc\u30d7\u3092\u56de\u3059\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u6bd4\u3079\u3066\u9ad8\u901f\u306b\u6f14\u7b97\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u305d\u308c\u306f\u3042\u304f\u307e\u3067\u3082\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306e\u5834\u5408\u3067\u3042\u3063\u3066\u3001FPGA\u306a\u3069\u306e\u8ad6\u7406\u56de\u8def\u306e\u5834\u5408\u306f\u610f\u5916\u3068\u4f4e\u901f\u3067\u3059\u3002\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306b\u3068\u3063\u3066\u826f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8ad6\u7406\u56de\u8def\u306b\u3068\u3063\u3066\u306f\u5fc5\u305a\u3057\u3082\u305d\u3046\u3067\u306f\u7121\u3044\u3068\u3044\u3046\u5178\u578b\u7684\u306a\u4f8b\u3068\u8a00\u3048\u307e\u3059\u3002\n\n5. Parallel and Recursive\n1\u301c4\u3067\u8aac\u660e\u3057\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u3044\u305a\u308c\u3082\u3001\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30d3\u30c3\u30c8\u9577\u304c\u5927\u304d\u3044\u3068\u3001\u305d\u308c\u3060\u3051\u4f4e\u901f\u306b\u306a\u308a\u307e\u3059\u3002\u4f55\u6545\u306a\u3089\u3001for-loop \u3067\u56de\u3059\u306b\u3057\u3066\u3082\u52a0\u7b97\u5668\u3092\u4f7f\u3046\u306b\u3057\u3066\u3082\u3001\u6700\u4e0a\u4f4d\u30d3\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u5165\u529b\u30c7\u30fc\u30bf\u306e\u6700\u4e0b\u4f4d\u30d3\u30c3\u30c8\u306e\u60c5\u5831\u3092\u4f1d\u642c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u30d3\u30c3\u30c8\u9577\u304c\u3042\u308b\u7a0b\u5ea6\u5927\u304d\u3044\u5834\u5408\u3092\u60f3\u5b9a\u3057\u3066\u3001\u4e26\u5217\u51e6\u7406\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3057\u3087\u3046\u3002\u4e3b\u306a\u8003\u3048\u65b9\u306f\u6b21\u306e\u56f3\u306e\u901a\u308a\u3067\u3059\u3002\n\nFig.4 Parallel and Recursive Priority Encoder Diagram\n\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306f\u3001\u5165\u529b\u30d3\u30c3\u30c8\u3092\u30b0\u30eb\u30fc\u30d7\u6bce\u306b\u500b\u5225\u304b\u3064\u4e26\u5217\u306bpriority encode \u3057\u307e\u3059\u3002\u307e\u305f\u3001priority encode \u3092\u518d\u5e30\u7684\u306b\u51e6\u7406\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092 VHDL \u3067\u8a18\u8ff0\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nsample5.vhd\n    procedure Priority_Encode_To_OneHot_Selectable(\n                 Min_Dec_Len : in  integer;\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n    begin\n        if Data'length >= Min_Dec_Len then\n            Priority_Encode_To_OneHot_Use_Decrement(Data,Output,Valid);\n        else\n            Priority_Encode_To_OneHot_Use_OrReduce(Data,Output,Valid);\n        end if;\n    end procedure;\n    procedure Priority_Encode_To_OneHot_Use_RecursiveCall(\n                 Min_Dec_Len : in  integer;\n                 Max_Dec_Len : in  integer;\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        constant Dec_Num     :     integer := (Data'length+Max_Dec_Len-1)/Max_Dec_Len;\n        constant Dec_Bits    :     integer := (Data'length+Dec_Num-1)/Dec_Num;\n        variable result      :     std_logic_vector(Data'range);\n        alias    i_data      :     std_logic_vector(Data'length-1 downto 0) is Data;\n        variable o_data      :     std_logic_vector(Data'length-1 downto 0);\n        variable o_valid     :     std_logic_vector(Dec_Num-1 downto 0);\n        variable onehot      :     std_logic_vector(Dec_Num-1 downto 0);\n    begin\n        for i in 0 to Dec_Num-1 loop\n            Priority_Encode_To_OneHot_Selectable(\n                Min_Dec_Len => Min_Dec_Len,\n                Data        => i_data(minimum(i_data'left, (i+1)*Dec_Bits-1) downto i*Dec_Bits),\n                Output      => o_data(minimum(i_data'left, (i+1)*Dec_Bits-1) downto i*Dec_Bits),\n                Valid       => o_valid(i)\n            );\n        end loop;\n        if (Dec_Num > 1) then\n            Priority_Encode_To_OneHot_Use_RecursiveCall(\n                Min_Dec_Len => Min_Dec_Len,\n                Max_Dec_Len => Max_Dec_Len,\n                Data        => o_valid,\n                Output      => onehot,\n                Valid       => Valid\n            );\n            for i in 1 to Dec_Num-1 loop\n                if (onehot(i) = '0') then\n                    if (i = Dec_Num-1) then\n                        o_data(o_data'left      downto i*Dec_Bits) := (others => '0');\n                    else\n                        o_data((i+1)*Dec_Bits-1 downto i*Dec_Bits) := (others => '0');\n                    end if;\n                end if;\n            end loop;\n        else\n            Valid := o_valid(0);\n        end if;\n        Output := o_data;\n    end procedure;\n\n\n\n\nPerformance and Resource\n\nVivado\n\nPerformance\nXilinx\u793e\u306e Vivado(2015.4)\u3067\u8ad6\u7406\u5408\u6210\uff06\u914d\u7f6e\u914d\u7dda\u3057\u305f\u6642\u306e\u6027\u80fd\u3092\u9045\u5ef6\u6642\u9593\u3067\u793a\u3057\u307e\u3059\u3002\u9045\u5ef6\u6642\u9593\u304c\u5927\u304d\u3044\u307b\u3069\u9045\u3044\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\n\u30d3\u30c3\u30c8\u5e45\u304c64\u30d3\u30c3\u30c8\u4ee5\u5185\u3067\u3042\u308c\u3070\u3001\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u9055\u3044\u306f\u305d\u308c\u307b\u3069\u3042\u308a\u307e\u305b\u3093\u3002\u30d3\u30c3\u30c8\u5e45\u304c\u305d\u308c\u4ee5\u4e0a\u306b\u306a\u308b\u3068\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306e\u9055\u3044\u304c\u9855\u8457\u306b\u306a\u308a\u307e\u3059\u3002\nTable.1 Performance (Vivado 2015.4)\n\n\nDevice\nParameter\nData Path Delay [nsec]\n\n\nAlgorithm\n\n\nFamily\nSpeed\nWIDTH\n1\n2\n3\n4\n5\n\n\nZynq-7010\n1\n4\n1.335\n1.470\n1.435\n1.435\n1.435\n\n\n8\n1.901\n1.882\n1.882\n1.882\n1.882\n\n\n12\n1.975\n1.975\n1.975\n2.436\n1.975\n\n\n16\n2.117\n2.154\n1.989\n2.565\n1.989\n\n\n32\n2.848\n2.641\n2.690\n3.184\n3.184\n\n\n48\n3.024\n2.880\n3.133\n3.676\n3.676\n\n\n64\n3.315\n3.743\n3.307\n3.949\n3.949\n\n\n96\n4.595\n5.442\n3.622\n4.844\n3.518\n\n\n128\n4.548\n4.472\n4.628\n6.100\n4.488\n\n\n160\n4.671\n4.697\n4.756\n7.041\n4.642\n\n\n192\n5.624\n4.857\n4.976\n7.971\n4.757\n\n\n224\n5.433\n5.075\n4.928\n8.803\n4.907\n\n\n256\n5.974\n5.096\n5.020\n9.542\n4.954\n\n\n384\n6.512\n5.188\n5.648\n13.336\n5.340\n\n\n512\n7.844\n5.909\n6.125\n20.222\n5.795\n\n\n1024\n12.376\n8.383\n7.730\n38.619\n7.830\n\n\n2048\n25.479\n9.306\n-\n77.770\n8.765\n\n\n3072\n30.839\n9.630\n-\n115.989\n9.037\n\n\n4096\n43.213\n9.746\n-\n156.031\n9.333\n\n\n\nResource\nTable.2 Resource (Vivado 2015.4)\n\n\nDevice\nParameter\nResource [LUTs]\n\n\nAlgorithm\n\n\nFamily\nSpeed\nWIDTH\n1\n2\n3\n4\n5\n\n\nZynq-7010\n1\n4\n8\n8\n8\n8\n8\n\n\n8\n17\n17\n17\n17\n17\n\n\n12\n26\n26\n26\n37\n26\n\n\n16\n38\n40\n38\n48\n38\n\n\n32\n79\n82\n82\n101\n101\n\n\n48\n122\n125\n134\n152\n152\n\n\n64\n162\n165\n207\n203\n203\n\n\n96\n225\n251\n330\n305\n311\n\n\n128\n223\n226\n358\n333\n349\n\n\n160\n380\n290\n493\n403\n440\n\n\n192\n329\n338\n622\n474\n533\n\n\n224\n519\n426\n760\n544\n626\n\n\n256\n455\n512\n882\n614\n711\n\n\n384\n669\n703\n1665\n896\n1069\n\n\n512\n974\n903\n3023\n1248\n1426\n\n\n1024\n1823\n1870\n13542\n2408\n1987\n\n\n2048\n3531\n3415\n-\n4715\n3612\n\n\n3072\n5293\n5050\n-\n7029\n5424\n\n\n4096\n6949\n6775\n-\n9349\n7271\n\n\n\n1. For-loop with exit\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30d3\u30c3\u30c8\u5e45\u304c256\u30d3\u30c3\u30c8\u4ee5\u5185\u3067\u3042\u308c\u3070\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u305d\u308c\u307b\u3069\u905c\u8272\u306a\u3044\u7d50\u679c\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u4ee5\u4e0a\u306e\u30d3\u30c3\u30c8\u5e45\u3067\u306f\u30d3\u30c3\u30c8\u5e45\u304c\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u3001\u6025\u901f\u306b\u60aa\u5316\u3057\u3066\u3044\u307e\u3059\u3002\n\n2. For-loop with found flag\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u3001\u610f\u5916\u3068\u5065\u95d8\u3057\u3066\u3044\u307e\u3059\u3002\u6027\u80fd\u3084\u5bb9\u91cf\u306e\u3069\u3061\u3089\u3092\u307f\u3066\u3082\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3088\u308a\u3082\u826f\u3044\u7d50\u679c\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u30825\u306e\u4e26\u5217\u5316\u3057\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u905c\u8272\u306a\u3044\u7d50\u679c\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u6c17\u5408\u3044\u5165\u308c\u3066\u4e26\u5217\u5316\u3057\u305f\u8a18\u8ff0\u3092\u3057\u305f\u8eab\u3068\u3057\u3066\u306f\u3001\u3061\u3087\u3063\u3068\u304c\u3063\u304b\u308a\u306a\u307b\u3069\u3067\u3059\u3002\n\n3. For-loop with or-reduce\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u5b9f\u306f\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30d3\u30c3\u30c8\u6570\u304c2048\u30d3\u30c3\u30c8\u3092\u8d85\u3048\u308b\u3068\u3001 Vivado \u306e\u8ad6\u7406\u5408\u6210\u304c\u7d42\u4e86\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3069\u3046\u3084\u3089\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f \u3000Vivado \u306f\u4e0d\u5f97\u610f\u306a\u3088\u3046\u3067\u3001\u6700\u9069\u5316\u306b\u82e6\u52b4\u3059\u308b\u3088\u3046\u3067\u3059\u3002\u3057\u304b\u3057\u30d3\u30c3\u30c8\u6570\u304c\u5c0f\u3055\u3044\u5834\u5408\u306f\u6700\u9069\u5316\u304c\u52b9\u304f\u3089\u3057\u304f\u305d\u308c\u306a\u308a\u306e\u7d50\u679c\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n4. Use Decrement\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001Xilinx \u306e FPGA \u3067\u306f\u3042\u307e\u308a\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3082\u3068\u3082\u3068 FPGA \u306e\u52a0\u7b97\u5668\u306f\u30ad\u30e3\u30ea\u30fc\u3092\u4f1d\u642c\u3059\u308b\u65b9\u5f0f\u3067\u3059\u3002Xilinx \u306e FPGA \u306b\u306f\u3001\u30ad\u30e3\u30ea\u30fc\u4f1d\u642c\u7528\u306e\u56de\u8def\u3068\u914d\u7dda\u306f\u5c02\u7528\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u305d\u308c\u306a\u308a\u306b\u9ad8\u901f\u306a\u306e\u3067\u3059\u304c\u3001\u7dcf\u9045\u5ef6\u6642\u9593\u306f\u30d3\u30c3\u30c8\u6570\u306b\u6bd4\u4f8b\u3059\u308b\u306e\u3067\u3001\u30d3\u30c3\u30c8\u6570\u304c\u5927\u304d\u3044\u3068\u3001\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u6bd4\u3079\u3066\u76ee\u306b\u898b\u3048\u3066\u9045\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u7e70\u308a\u8fd4\u3057\u307e\u3059\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306b\u3068\u3063\u3066\u826f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8ad6\u7406\u56de\u8def\u306b\u3068\u3063\u3066\u306f\u5fc5\u305a\u3057\u3082\u305d\u3046\u3067\u306f\u7121\u3044\u3068\u3044\u3046\u5178\u578b\u7684\u306a\u4f8b\u3068\u8a00\u3048\u307e\u3059\u3002\n\n5. Parallel and Recursive\n2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u305d\u308c\u307b\u3069\u5909\u308f\u3089\u306a\u3044\u7d50\u679c\u3067\u3057\u305f\u3002\u4e00\u5fdc\u3001\u6700\u901f\u306a\u7d50\u679c\u304c\u51fa\u3066\u307e\u3059\u304c\u3001\u82e6\u52b4\u3057\u305f\u5272\u308a\u306b\u306f\u611f\u6e80\u8f09\u3067\u3059\u3002\n\nQuartus\nAltera\u793e\u306e Quartus Prime (15.1) Light Editiion\u3067\u8ad6\u7406\u5408\u6210\uff06\u914d\u7f6e\u914d\u7dda\u3057\u305f\u6642\u306e\u6027\u80fd\u3092\u52d5\u4f5c\u5468\u6ce2\u6570\u3067\u793a\u3057\u307e\u3059\u3002\u52d5\u4f5c\u5468\u6ce2\u6570\u304c\u5927\u304d\u3044\u307b\u3069\u901f\u3044\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\nTable.3 Performance (Quartus Prime 15.1 Light Edition)\n\n\nDevice\nParameter\nFmax(MHz) Slow 1100mV 85C Model\n\n\nAlgorithm\n\n\nFamily\nSpeed\nWIDTH\n1\n2\n3\n4\n5\n\n\nCyclone V\n\n4\n811.69\n811.69\n811.69\n811.69\n811.69\n\n\n8\n\n647.25\n647.25\n430.48\n647.25\n\n\n12\n528.54\n528.54\n528.54\n431.48\n528.54\n\n\n16\n460.41\n460.41\n460.41\n360.36\n460.41\n\n\n32\n318.98\n318.98\n311.92\n287.69\n287.69\n\n\n48\n240.96\n240.96\n239.41\n224.62\n224.62\n\n\n64\n175.38\n175.38\n193.27\n245.58\n245.58\n\n\n96\n141.00\n141.00\n133.74\n187.41\n186.12\n\n\n128\n105.21\n105.21\n101.00\n169.89\n177.71\n\n\n160\n86.09\n86.09\n85.46\n145.84\n190.55\n\n\n192\n72.49\n72.49\n72.10\n132.40\n174.00\n\n\n224\n61.56\n64.06\n61.56\n111.42\n168.18\n\n\n256\n55.28\n54.06\n55.28\n102.15\n157.88\n\n\n384\n36.19\n36.79\n36.19\n74.64\n153.14\n\n\n512\n27.85\n27.42\n27.85\n60.28\n149.68\n\n\n1024\n13.80\n14.14\n-\n32.07\n129.85\n\n\n2048\n7.08\n7.09\n-\n-\n113.57\n\n\n3072\n4.62\n-\n-\n-\n-\n\n\nTable.4 Resource (Quartus Prime 15.1 Light Edition)\n\n\nDevice\nParameter\nResource [ALMs]\n\n\nAlgorithm\n\n\nFamily\nSpeed\nWIDTH\n1\n2\n3\n4\n5\n\n\nCyclone V\n\n4\n1.8\n1.8\n1.8\n1.8\n1.8\n\n\n8\n\n5.3\n5.3\n9.8\n5.3\n\n\n12\n9.3\n9.3\n9.3\n14.2\n9.3\n\n\n16\n12.0\n12.0\n12.0\n19.1\n12.0\n\n\n32\n27.5\n27.5\n27.5\n38.5\n38.5\n\n\n48\n40.2\n40.2\n39.2\n57.8\n57.8\n\n\n64\n56.0\n56.0\n54.7\n78.6\n78.6\n\n\n96\n84.9\n84.9\n83.4\n119.8\n114.8\n\n\n128\n113.5\n113.5\n112.2\n158.6\n153.8\n\n\n160\n141.6\n141.6\n140.2\n199.2\n193.2\n\n\n192\n175.5\n175.5\n175.3\n240.3\n230.5\n\n\n224\n232.6\n204.5\n232.6\n281.1\n273.2\n\n\n256\n266.4\n233.7\n266.4\n322.7\n307.0\n\n\n384\n408.7\n348.8\n408.7\n483.8\n473.8\n\n\n512\n552.3\n464.3\n552.3\n648.2\n611.5\n\n\n1024\n1066.3\n921.7\n41690.5\n1309.6\n1244.8\n\n\n2048\n2120.0\n1836.7\n-\n2313.7\n2479.7\n\n\n3072\n3169.4\n-\n-\n-\n-\n\n\n\n1. For-loop with exit\n\n2. For-loop with found flag\n\n3. For-loop with or-reduce\nQuartus \u3067\u306f\u3001\u4e0a\u306e3\u3064\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306e\u9055\u3044\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u30d3\u30c3\u30c8\u5e45\u304c\u5927\u304d\u304f\u306a\u308b\u306e\u3068\u6bd4\u4f8b\u3057\u3066\u9045\u5ef6\u6642\u9593\u304c\u5897\u3048\u3066\u3044\u307e\u3059\u3002\u304a\u305d\u3089\u304f\u3001Quartus \u306f\u3042\u307e\u308a\u3053\u306e\u624b\u306e For-loop \u306e\u6700\u9069\u5316\u304c Vivado \u306b\u6bd4\u3079\u3066\u4e0a\u624b\u304f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n4. Use Decrement\nAltera \u306e FPGA \u3082\u30ad\u30e3\u30ea\u30fc\u4f1d\u642c\u65b9\u5f0f\u306e\u52a0\u7b97\u5668\u3067\u3059\u3002\u30ad\u30e3\u30ea\u30fc\u4f1d\u642c\u7528\u306e\u56de\u8def\u3068\u914d\u7dda\u306f\u5c02\u7528\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u305d\u308c\u306a\u308a\u306b\u9ad8\u901f\u306a\u306e\u3067\u3059\u304c\u3001\u7dcf\u9045\u5ef6\u6642\u9593\u306f\u30d3\u30c3\u30c8\u6570\u306b\u6bd4\u4f8b\u3059\u308b\u306e\u3067\u3001\u30d3\u30c3\u30c8\u6570\u304c\u5927\u304d\u3044\u3068\u305d\u308c\u306b\u6bd4\u4f8b\u3057\u3066\u9045\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001Xilinx \u306e Vivado \u306e\u5834\u5408\u3068\u7570\u306a\u308a\u3001For-loop \u306e\u6700\u9069\u5316\u304c\u30c0\u30e1\u30c0\u30e1\u306a\u306e\u3067\u3001\u305d\u308c\u306b\u6bd4\u8f03\u3059\u308b\u3068\u30de\u30b7\u306a\u7d50\u679c\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n5. Parallel and Recursive\nAltera \u306e\u5834\u5408\u306f\u3001\u4e26\u5217\u5316\u306e\u8a18\u8ff0\u304c\u3088\u304f\u52b9\u304d\u307e\u3057\u305f\u3002\u9811\u5f35\u3063\u3066\u66f8\u3044\u305f\u7532\u6590\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\nComment\n\u3053\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u56de\u8def\u3067\u3082\u3001\u8a18\u8ff0\u65b9\u6cd5\u306b\u3088\u3063\u3066\u3001\u307e\u305f\u4f7f\u7528\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u3084\u30c4\u30fc\u30eb\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u7d50\u679c\u304c\u3067\u307e\u3057\u305f\u3002\u3069\u308c\u304b\u4e00\u3064\u306b\u7d5e\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u7528\u9014\u306b\u5fdc\u3058\u3066\u8a18\u8ff0\u65b9\u6cd5\u3092\u5909\u3048\u308b\u304f\u3089\u3044\u306e\u5de5\u592b\u304c\u5fc5\u8981\u3067\u3057\u3087\u3046\u3002\n\nReference\n\u3053\u3053\u3067\u8aac\u660e\u3057\u305f VHDL \u306e\u30b3\u30fc\u30c9\u3068\u3001\u8ad6\u7406\u5408\u6210\u6642\u306b\u4f7f\u7528\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u4ee5\u4e0b\u306e\u3068\u3053\u308d\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/ikwzm/Generic_Priority_Encoder\n\u307e\u305f\u3001\u3053\u3053\u3067\u8aac\u660e\u3057\u305f VHDL \u306e\u30b3\u30fc\u30c9\u3092\u4ed6\u304b\u3089\u3082\u5229\u7528\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3057\u305f\u3082\u306e\u304c\u3001\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/ikwzm/PipeWork/blob/master/src/components/priority_encoder_procedures.vhd\n# \u306f\u3058\u3081\u306b\n\nPriority Encoder \u3068\u306f\u3001\u3042\u308b\u30d3\u30c3\u30c8\u5217\u304c\u4e0e\u3048\u3089\u308c\u3066\u3001\u305d\u306e\u30d3\u30c3\u30c8\u5217\u3092LSB(\u307e\u305f\u306fMSB)\u304b\u3089\u63a2\u7d22\u3057\u3066\u6700\u521d\u306b1\u3060\u3063\u305f\u3068\u3053\u308d\u3092\u898b\u3064\u3051\u307e\u3059\u3002\u898b\u3064\u304b\u3063\u305f\u4f4d\u7f6e\u3092\u6570\u5b57(Binary Integer)\u3067\u8fd4\u3059\u3082\u306e\u3092 Priority Encoder \u3068\u8a00\u3044\u307e\u3059\u3002\n\n\n![Fig.1 Primary (Binary Integer) Encoder](https://qiita-image-store.s3.amazonaws.com/0/24981/0cb3bd73-db26-def7-2728-2bdd7d1e7278.jpeg)\n\nFig.1 Primary (Binary Integer) Encoder\n\n<br />\n\n\n\n\u307e\u305f\u3001\u6570\u5b57\u3067\u8fd4\u3055\u305a\u306b\u3001\u5165\u529b\u3055\u308c\u305f\u30d3\u30c3\u30c8\u5217\u306e\u3046\u3061\u3001\u6700\u521d\u306b1\u3060\u3063\u305f\u3068\u3053\u308d\u306e\u307f1\u306b\u3057\u3066\u5f8c\u306f\u5168\u90e80\u306b\u3057\u3066\u8fd4\u3059\u5834\u5408(One Hot)\u3082\u3042\u308a\u307e\u3059\u3002\n\n\n![Fig.2 Primary (One Hot) Encoder](https://qiita-image-store.s3.amazonaws.com/0/24981/d1fc7683-8781-93a6-0aeb-84dbc15c080f.jpeg)\n\nFig.2 Primary (One Hot) Encoder\n\n<br />\n\n\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u3053\u306ePriority (One Hot) Encoder \u306e\u30d3\u30c3\u30c8\u5217\u306e\u5927\u304d\u3055\u304c Generic \u5909\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\uff11\u30d3\u30c3\u30c8\u301c1024\u30d3\u30c3\u30c8\u8d85\u306e\u53ef\u5909\u5024\u3068\u3057\u305f\u6642\u306eVHDL \u306e\u8a18\u8ff0\u65b9\u6cd5\u3068\u3001\u305d\u308c\u3092\u8ad6\u7406\u5408\u6210\u3057\u305f\u6642\u306e\u7d50\u679c\u3092\u793a\u3057\u307e\u3059\u3002\n\n\n# \u30e9\u30a4\u30bb\u30f3\u30b9\n\n\n\u4e8c\u6761\u9805BSD\u30e9\u30a4\u30bb\u30f3\u30b9 (2-clause BSD license) \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n# Algorithm\n\n\n\n## 1. For-loop with exit\n\n\nVHDL \u306e For-loop \u306f exit \u6587\u3067\u30eb\u30fc\u30d7\u3092\u8131\u51fa\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3063\u3066\u8a18\u8ff0\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\n\n```VHDL:sample1.vhd\n     procedure Priority_Encode_To_OneHot_Use_Exit(\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        variable result      :     std_logic_vector(Data'range);\n    begin\n        result := (others => '0');\n        for i in Data'low to Data'high loop\n            result(i) := Data(i);\n            exit when (Data(i) = '1');\n        end loop;\n        Output := result;\n        Valid  := or_reduce(Data);\n    end procedure;\n\n```\n\n\n\u3053\u3093\u306a\u306e\u8ad6\u7406\u5408\u6210\u51fa\u6765\u308b\u306e\uff1f\u3000\u3068\u3044\u3046\u7591\u554f\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u610f\u5916\u3068\u51fa\u6765\u305f\u308a\u3057\u307e\u3059\u3002\u305f\u3060\u3001STARC \u306e \u300eRTL \u8a2d\u8a08\u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9\u300f\u3067\u306f\u300cfor-loop \u6587\u5185\u3067 exit,next \u306f\u4f7f\u7528\u3057\u306a\u3044\u300d\u306e\u304c\u5fc5\u9808\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u7406\u7531\u306f\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u304c\u751f\u6210\u3059\u308bRTL\u306e\u30a4\u30e1\u30fc\u30b8\u304c\u63b4\u307f\u306b\u304f\u3044\u304b\u3089\u3067\u3059\u304c\u3001\u5b9f\u306f\u305d\u306e\u901a\u308a\u3067\u3001\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u306b\u3088\u3063\u3066\u751f\u6210\u3059\u308b\u56de\u8def\u304c\u7570\u306a\u308a\u307e\u3059\u3002\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30d3\u30c3\u30c8\u6570\u304c\u6570\u30d3\u30c3\u30c8\u306e\u5834\u5408\u306f\u3001\u3053\u306e\u8a18\u8ff0\u65b9\u6cd5\u3067\u3082\u7279\u306b\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u6570\u5341\u30d3\u30c3\u30c8\u4ee5\u4e0a\u306b\u306a\u308b\u3068\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u306e\u51fa\u6765\u6b21\u7b2c\u307f\u305f\u3044\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u306e\u3067\u4f7f\u7528\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\n\n\n## 2. For-loop with found flag\n\n\n\u30d5\u30e9\u30b0\u3092\u4f7f\u3063\u3066\u5024\u3092\u751f\u6210\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002found_1 \u30d5\u30e9\u30b0\u306f false \u306b\u521d\u671f\u5316\u3057\u3066\u304a\u304d\u3001\u30eb\u30fc\u30d7\u3092\u4f7f\u3063\u3066\u5165\u529b\u30c7\u30fc\u30bf\u3092\u63a2\u7d22\u3057\u3001\u6700\u521d\u306b1\u3092\u898b\u3064\u3051\u305f\u3089 found_1 \u30d5\u30e9\u30b0\u3092\u30bb\u30c3\u30c8\u3057\u3066\u305d\u308c\u4ee5\u964d\u306f\u5168\u30660\u306b\u3057\u307e\u3059\u3002\n\n\n```VHDL:sample2.vhd\n    procedure Priority_Encode_To_OneHot_Use_Flag(\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        variable result      :     std_logic_vector(Data'range);\n        variable found_1     :     boolean;\n    begin\n        found_1 := false;\n        for i in Data'low to Data'high loop\n            if found_1 = false then\n                result(i) := Data(i);\n                found_1   := (Data(i) = '1');\n            else\n                result(i) := '0';\n            end if;\n        end loop;\n        Output := result;\n        Valid  := or_reduce(Data);\n    end procedure;\n\n```\n\n\n\n\n\n## 3. For-loop with or-reduce\n\n\n\u51fa\u529b\u3059\u308b\u30d3\u30c3\u30c8\u5217\u306e\u500b\u3005\u306e\u30d3\u30c3\u30c8\u306e\u7acb\u5834\u306b\u306a\u3063\u3066\u3001\u81ea\u5206\u306e\u30d3\u30c3\u30c8\u306b1\u304c\u7acb\u3064\u6761\u4ef6\u3092\u8003\u3048\u3066\u307f\u308b\u3068\u3001\u305d\u308c\u306f\u6b21\u306e\u4e8c\u3064\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u5834\u5408\u3067\u3042\u308b\u3053\u3068\u304c\u5224\u308a\u307e\u3059\u3002\n\n\n\n1. \u5165\u529b\u30c7\u30fc\u30bf\u306e\u81ea\u5206\u3068\u540c\u3058\u4f4d\u7f6e\u306b\u3042\u308b\u30d3\u30c3\u30c8\u304c1\u306e\u5834\u5408\n2. \u5165\u529b\u30c7\u30fc\u30bf\u306e\u81ea\u5206\u3088\u308a\u524d\u306e\u4f4d\u7f6e\u306e\u30d3\u30c3\u30c8\u304c\u5168\u30660\u306e\u5834\u5408\n\n\n![Fig.3 For-loop with or-reduce ](https://qiita-image-store.s3.amazonaws.com/0/24981/dea3e679-ecde-07aa-97dc-518a0f407519.jpeg)\n\nFig.3 For-loop with or-reduce \n\n\n\u4e0a\u306e\u6761\u4ef6\u901a\u308a\u306b VHDL \u3092\u8a18\u8ff0\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```VHDL:sample3.vhd\n    procedure Priority_Encode_To_OneHot_Use_OrReduce(\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        variable result      :     std_logic_vector(Data'range);\n    begin\n        for i in Data'range loop\n            if (i = Data'low) then\n                result(i) := Data(i);\n            else\n                result(i) := Data(i) and (not or_reduce(Data(i-1 downto Data'low)));\n            end if;\n        end loop;\n        Output := result;\n        Valid  := or_reduce(Data);\n    end procedure;\n\n```\n\n\n\u3061\u306a\u307f\u306b or_reduce \u3068\u306f\u4e0e\u3048\u3089\u308c\u305f\u30d3\u30c3\u30c8\u3059\u3079\u3066\u306eor(\u8ad6\u7406\u548c)\u3092\u3068\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u30d3\u30c3\u30c8\u306e\u3069\u308c\u304b\u304c1\u306e\u5834\u5408\u306b1\u306b\u306a\u308a\u307e\u3059\u3002or_reduce \u306e not(\u5426\u5b9a)\u306f\u30d3\u30c3\u30c8\u306e\u5168\u3066\u304c0\u306e\u5834\u5408\u306b1\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n\n## 4. Use Decrement\n\n\n\u3053\u308c\u306f For-loop \u3092\u4f7f\u308f\u305a\u306b\u52a0\u7b97\u5668(\u6e1b\u7b97\u5668)\u3092\u4f7f\u3063\u3066\u8a72\u5f53\u3059\u308b\u30d3\u30c3\u30c8\u306e\u307f1\u306b\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\n\n```VHDL:sample4.vhd\n    procedure Priority_Encode_To_OneHot_Use_Decrement(\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        variable i_data      :     std_logic_vector(Data'length-1 downto 0);\n        variable t_data      :     std_logic_vector(Data'length   downto 0);\n        variable d_data      :     std_logic_vector(Data'length   downto 0);\n        variable r_data      :     std_logic_vector(Data'length-1 downto 0);\n        variable o_data      :     std_logic_vector(Data'range);\n    begin\n        i_data := Data;\n        t_data := \"0\" & i_data;\n        d_data := std_logic_vector(unsigned(t_data) - 1);\n        r_data := i_data and not d_data(i_data'range);\n        o_data := r_data;\n        Valid  := or_reduce(i_data);\n        Output := o_data;\n    end procedure;\n    \n```\n\n\n\n\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u30eb\u30fc\u30d7\u3092\u307e\u308f\u3055\u306a\u3044\u306e\u3067\u4e00\u898b\u826f\u3055\u305d\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u306f\u30eb\u30fc\u30d7\u3092\u56de\u3059\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u6bd4\u3079\u3066\u9ad8\u901f\u306b\u6f14\u7b97\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u305d\u308c\u306f\u3042\u304f\u307e\u3067\u3082\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306e\u5834\u5408\u3067\u3042\u3063\u3066\u3001FPGA\u306a\u3069\u306e\u8ad6\u7406\u56de\u8def\u306e\u5834\u5408\u306f\u610f\u5916\u3068\u4f4e\u901f\u3067\u3059\u3002\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306b\u3068\u3063\u3066\u826f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8ad6\u7406\u56de\u8def\u306b\u3068\u3063\u3066\u306f\u5fc5\u305a\u3057\u3082\u305d\u3046\u3067\u306f\u7121\u3044\u3068\u3044\u3046\u5178\u578b\u7684\u306a\u4f8b\u3068\u8a00\u3048\u307e\u3059\u3002\n\n\n\n\n## 5. Parallel and Recursive\n\n\n1\u301c4\u3067\u8aac\u660e\u3057\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u3044\u305a\u308c\u3082\u3001\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30d3\u30c3\u30c8\u9577\u304c\u5927\u304d\u3044\u3068\u3001\u305d\u308c\u3060\u3051\u4f4e\u901f\u306b\u306a\u308a\u307e\u3059\u3002\u4f55\u6545\u306a\u3089\u3001for-loop \u3067\u56de\u3059\u306b\u3057\u3066\u3082\u52a0\u7b97\u5668\u3092\u4f7f\u3046\u306b\u3057\u3066\u3082\u3001\u6700\u4e0a\u4f4d\u30d3\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u5165\u529b\u30c7\u30fc\u30bf\u306e\u6700\u4e0b\u4f4d\u30d3\u30c3\u30c8\u306e\u60c5\u5831\u3092\u4f1d\u642c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u30d3\u30c3\u30c8\u9577\u304c\u3042\u308b\u7a0b\u5ea6\u5927\u304d\u3044\u5834\u5408\u3092\u60f3\u5b9a\u3057\u3066\u3001\u4e26\u5217\u51e6\u7406\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3057\u3087\u3046\u3002\u4e3b\u306a\u8003\u3048\u65b9\u306f\u6b21\u306e\u56f3\u306e\u901a\u308a\u3067\u3059\u3002\n\n\n![Fig.4 Parallel and Recursive Priority Encoder Diagram](https://qiita-image-store.s3.amazonaws.com/0/24981/b47d9249-e447-aaa6-6e4f-d532ae5a7d5b.jpeg)\n\n\nFig.4 Parallel and Recursive Priority Encoder Diagram\n\n<br />\n\n\n\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306f\u3001\u5165\u529b\u30d3\u30c3\u30c8\u3092\u30b0\u30eb\u30fc\u30d7\u6bce\u306b\u500b\u5225\u304b\u3064\u4e26\u5217\u306bpriority encode \u3057\u307e\u3059\u3002\u307e\u305f\u3001priority encode \u3092\u518d\u5e30\u7684\u306b\u51e6\u7406\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3092 VHDL \u3067\u8a18\u8ff0\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n\n```VHDL:sample5.vhd\n    procedure Priority_Encode_To_OneHot_Selectable(\n                 Min_Dec_Len : in  integer;\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n    begin\n        if Data'length >= Min_Dec_Len then\n            Priority_Encode_To_OneHot_Use_Decrement(Data,Output,Valid);\n        else\n            Priority_Encode_To_OneHot_Use_OrReduce(Data,Output,Valid);\n        end if;\n    end procedure;\n    procedure Priority_Encode_To_OneHot_Use_RecursiveCall(\n                 Min_Dec_Len : in  integer;\n                 Max_Dec_Len : in  integer;\n                 Data        : in  std_logic_vector;\n        variable Output      : out std_logic_vector;\n        variable Valid       : out std_logic\n    ) is\n        constant Dec_Num     :     integer := (Data'length+Max_Dec_Len-1)/Max_Dec_Len;\n        constant Dec_Bits    :     integer := (Data'length+Dec_Num-1)/Dec_Num;\n        variable result      :     std_logic_vector(Data'range);\n        alias    i_data      :     std_logic_vector(Data'length-1 downto 0) is Data;\n        variable o_data      :     std_logic_vector(Data'length-1 downto 0);\n        variable o_valid     :     std_logic_vector(Dec_Num-1 downto 0);\n        variable onehot      :     std_logic_vector(Dec_Num-1 downto 0);\n    begin\n        for i in 0 to Dec_Num-1 loop\n            Priority_Encode_To_OneHot_Selectable(\n                Min_Dec_Len => Min_Dec_Len,\n                Data        => i_data(minimum(i_data'left, (i+1)*Dec_Bits-1) downto i*Dec_Bits),\n                Output      => o_data(minimum(i_data'left, (i+1)*Dec_Bits-1) downto i*Dec_Bits),\n                Valid       => o_valid(i)\n            );\n        end loop;\n        if (Dec_Num > 1) then\n            Priority_Encode_To_OneHot_Use_RecursiveCall(\n                Min_Dec_Len => Min_Dec_Len,\n                Max_Dec_Len => Max_Dec_Len,\n                Data        => o_valid,\n                Output      => onehot,\n                Valid       => Valid\n            );\n            for i in 1 to Dec_Num-1 loop\n                if (onehot(i) = '0') then\n                    if (i = Dec_Num-1) then\n                        o_data(o_data'left      downto i*Dec_Bits) := (others => '0');\n                    else\n                        o_data((i+1)*Dec_Bits-1 downto i*Dec_Bits) := (others => '0');\n                    end if;\n                end if;\n            end loop;\n        else\n            Valid := o_valid(0);\n        end if;\n        Output := o_data;\n    end procedure;\n    \n```\n\n\n\n# Performance and Resource\n\n\n\n## Vivado\n\n\n\n### Performance\n\n\nXilinx\u793e\u306e Vivado(2015.4)\u3067\u8ad6\u7406\u5408\u6210\uff06\u914d\u7f6e\u914d\u7dda\u3057\u305f\u6642\u306e\u6027\u80fd\u3092\u9045\u5ef6\u6642\u9593\u3067\u793a\u3057\u307e\u3059\u3002\u9045\u5ef6\u6642\u9593\u304c\u5927\u304d\u3044\u307b\u3069\u9045\u3044\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u30d3\u30c3\u30c8\u5e45\u304c64\u30d3\u30c3\u30c8\u4ee5\u5185\u3067\u3042\u308c\u3070\u3001\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u9055\u3044\u306f\u305d\u308c\u307b\u3069\u3042\u308a\u307e\u305b\u3093\u3002\u30d3\u30c3\u30c8\u5e45\u304c\u305d\u308c\u4ee5\u4e0a\u306b\u306a\u308b\u3068\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306e\u9055\u3044\u304c\u9855\u8457\u306b\u306a\u308a\u307e\u3059\u3002\n\nTable.1 Performance (Vivado 2015.4)\n\n<table border=\"2\">\n  <tr>\n    <td align=\"center\" colspan=\"2\" rowspan=\"2\">Device</td>\n    <td align=\"center\" rowspan=\"2\">Parameter</td>\n    <td align=\"center\" colspan=\"5\">Data Path Delay [nsec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\" colspan=\"5\">Algorithm</td>\n  </tr>\n  <tr>\n    <td align=\"center\">Family</td>\n    <td align=\"center\">Speed</td>\n    <td align=\"center\">WIDTH</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">2</td>\n    <td align=\"center\">3</td>\n    <td align=\"center\">4</td>\n    <td align=\"center\">5</td>\n  </tr>\n  <tr>\n    <td rowspan=\"19\">Zynq-7010</td>\n    <td align=\"center\" rowspan=\"19\">1</td>\n    <td align=\"center\">4</td>\n    <td align=\"right\">1.335</td>\n    <td align=\"right\">1.470</td>\n    <td align=\"right\">1.435</td>\n    <td align=\"right\">1.435</td>\n    <td align=\"right\">1.435</td>\n  </tr>\n  <tr>\n    <td align=\"center\">8</td>\n    <td align=\"right\">1.901</td>\n    <td align=\"right\">1.882</td>\n    <td align=\"right\">1.882</td>\n    <td align=\"right\">1.882</td>\n    <td align=\"right\">1.882</td>\n  </tr>\n  <tr>\n    <td align=\"center\">12</td>\n    <td align=\"right\">1.975</td>\n    <td align=\"right\">1.975</td>\n    <td align=\"right\">1.975</td>\n    <td align=\"right\">2.436</td>\n    <td align=\"right\">1.975</td>\n  </tr>\n  <tr>\n    <td align=\"center\">16</td>\n    <td align=\"right\">2.117</td>\n    <td align=\"right\">2.154</td>\n    <td align=\"right\">1.989</td>\n    <td align=\"right\">2.565</td>\n    <td align=\"right\">1.989</td>\n  </tr>\n  <tr>\n    <td align=\"center\">32</td>\n    <td align=\"right\">2.848</td>\n    <td align=\"right\">2.641</td>\n    <td align=\"right\">2.690</td>\n    <td align=\"right\">3.184</td>\n    <td align=\"right\">3.184</td>\n  </tr>\n  <tr>\n    <td align=\"center\">48</td>\n    <td align=\"right\">3.024</td>\n    <td align=\"right\">2.880</td>\n    <td align=\"right\">3.133</td>\n    <td align=\"right\">3.676</td>\n    <td align=\"right\">3.676</td>\n  </tr>\n  <tr>\n    <td align=\"center\">64</td>\n    <td align=\"right\">3.315</td>\n    <td align=\"right\">3.743</td>\n    <td align=\"right\">3.307</td>\n    <td align=\"right\">3.949</td>\n    <td align=\"right\">3.949</td>\n  </tr>\n  <tr>\n    <td align=\"center\">96</td>\n    <td align=\"right\">4.595</td>\n    <td align=\"right\">5.442</td>\n    <td align=\"right\">3.622</td>\n    <td align=\"right\">4.844</td>\n    <td align=\"right\">3.518</td>\n  </tr>\n  <tr>\n    <td align=\"center\">128</td>\n    <td align=\"right\">4.548</td>\n    <td align=\"right\">4.472</td>\n    <td align=\"right\">4.628</td>\n    <td align=\"right\">6.100</td>\n    <td align=\"right\">4.488</td>\n  </tr>\n  <tr>\n    <td align=\"center\">160</td>\n    <td align=\"right\">4.671</td>\n    <td align=\"right\">4.697</td>\n    <td align=\"right\">4.756</td>\n    <td align=\"right\">7.041</td>\n    <td align=\"right\">4.642</td>\n  </tr>\n  <tr>\n    <td align=\"center\">192</td>\n    <td align=\"right\">5.624</td>\n    <td align=\"right\">4.857</td>\n    <td align=\"right\">4.976</td>\n    <td align=\"right\">7.971</td>\n    <td align=\"right\">4.757</td>\n  </tr>\n  <tr>\n    <td align=\"center\">224</td>\n    <td align=\"right\">5.433</td>\n    <td align=\"right\">5.075</td>\n    <td align=\"right\">4.928</td>\n    <td align=\"right\">8.803</td>\n    <td align=\"right\">4.907</td>\n  </tr>\n  <tr>\n    <td align=\"center\">256</td>\n    <td align=\"right\">5.974</td>\n    <td align=\"right\">5.096</td>\n    <td align=\"right\">5.020</td>\n    <td align=\"right\">9.542</td>\n    <td align=\"right\">4.954</td>\n  </tr>\n  <tr>\n    <td align=\"center\">384</td>\n    <td align=\"right\">6.512</td>\n    <td align=\"right\">5.188</td>\n    <td align=\"right\">5.648</td>\n    <td align=\"right\">13.336</td>\n    <td align=\"right\">5.340</td>\n  </tr>\n  <tr>\n    <td align=\"center\">512</td>\n    <td align=\"right\">7.844</td>\n    <td align=\"right\">5.909</td>\n    <td align=\"right\">6.125</td>\n    <td align=\"right\">20.222</td>\n    <td align=\"right\">5.795</td>\n  </tr>\n  <tr>\n    <td align=\"center\">1024</td>\n    <td align=\"right\">12.376</td>\n    <td align=\"right\">8.383</td>\n    <td align=\"right\">7.730</td>\n    <td align=\"right\">38.619</td>\n    <td align=\"right\">7.830</td>\n  </tr>\n  <tr>\n    <td align=\"center\">2048</td>\n    <td align=\"right\">25.479</td>\n    <td align=\"right\">9.306</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">77.770</td>\n    <td align=\"right\">8.765</td>\n  </tr>\n  <tr>\n    <td align=\"center\">3072</td>\n    <td align=\"right\">30.839</td>\n    <td align=\"right\">9.630</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">115.989</td>\n    <td align=\"right\">9.037</td>\n  </tr>\n  <tr>\n    <td align=\"center\">4096</td>\n    <td align=\"right\">43.213</td>\n    <td align=\"right\">9.746</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">156.031</td>\n    <td align=\"right\">9.333</td>\n  </tr>\n</table>\n\n\n\n\n\n\n\n\n### Resource\n\n\nTable.2 Resource (Vivado 2015.4)\n\n<table border=\"2\">\n  <tr>\n    <td align=\"center\" colspan=\"2\" rowspan=\"2\">Device</td>\n    <td align=\"center\" rowspan=\"2\">Parameter</td>\n    <td align=\"center\" colspan=\"5\">Resource [LUTs]</td>\n  </tr>\n  <tr>\n    <td align=\"center\" colspan=\"5\">Algorithm</td>\n  </tr>\n  <tr>\n    <td align=\"center\">Family</td>\n    <td align=\"center\">Speed</td>\n    <td align=\"center\">WIDTH</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">2</td>\n    <td align=\"center\">3</td>\n    <td align=\"center\">4</td>\n    <td align=\"center\">5</td>\n  </tr>\n  <tr>\n    <td rowspan=\"19\">Zynq-7010</td>\n    <td align=\"center\" rowspan=\"19\">1</td>\n    <td align=\"center\">4</td>\n    <td align=\"right\">8</td>\n    <td align=\"right\">8</td>\n    <td align=\"right\">8</td>\n    <td align=\"right\">8</td>\n    <td align=\"right\">8</td>\n  </tr>\n  <tr>\n    <td align=\"center\">8</td>\n    <td align=\"right\">17</td>\n    <td align=\"right\">17</td>\n    <td align=\"right\">17</td>\n    <td align=\"right\">17</td>\n    <td align=\"right\">17</td>\n  </tr>\n  <tr>\n    <td align=\"center\">12</td>\n    <td align=\"right\">26</td>\n    <td align=\"right\">26</td>\n    <td align=\"right\">26</td>\n    <td align=\"right\">37</td>\n    <td align=\"right\">26</td>\n  </tr>\n  <tr>\n    <td align=\"center\">16</td>\n    <td align=\"right\">38</td>\n    <td align=\"right\">40</td>\n    <td align=\"right\">38</td>\n    <td align=\"right\">48</td>\n    <td align=\"right\">38</td>\n  </tr>\n  <tr>\n    <td align=\"center\">32</td>\n    <td align=\"right\">79</td>\n    <td align=\"right\">82</td>\n    <td align=\"right\">82</td>\n    <td align=\"right\">101</td>\n    <td align=\"right\">101</td>\n  </tr>\n  <tr>\n    <td align=\"center\">48</td>\n    <td align=\"right\">122</td>\n    <td align=\"right\">125</td>\n    <td align=\"right\">134</td>\n    <td align=\"right\">152</td>\n    <td align=\"right\">152</td>\n  </tr>\n  <tr>\n    <td align=\"center\">64</td>\n    <td align=\"right\">162</td>\n    <td align=\"right\">165</td>\n    <td align=\"right\">207</td>\n    <td align=\"right\">203</td>\n    <td align=\"right\">203</td>\n  </tr>\n  <tr>\n    <td align=\"center\">96</td>\n    <td align=\"right\">225</td>\n    <td align=\"right\">251</td>\n    <td align=\"right\">330</td>\n    <td align=\"right\">305</td>\n    <td align=\"right\">311</td>\n  </tr>\n  <tr>\n    <td align=\"center\">128</td>\n    <td align=\"right\">223</td>\n    <td align=\"right\">226</td>\n    <td align=\"right\">358</td>\n    <td align=\"right\">333</td>\n    <td align=\"right\">349</td>\n  </tr>\n  <tr>\n    <td align=\"center\">160</td>\n    <td align=\"right\">380</td>\n    <td align=\"right\">290</td>\n    <td align=\"right\">493</td>\n    <td align=\"right\">403</td>\n    <td align=\"right\">440</td>\n  </tr>\n  <tr>\n    <td align=\"center\">192</td>\n    <td align=\"right\">329</td>\n    <td align=\"right\">338</td>\n    <td align=\"right\">622</td>\n    <td align=\"right\">474</td>\n    <td align=\"right\">533</td>\n  </tr>\n  <tr>\n    <td align=\"center\">224</td>\n    <td align=\"right\">519</td>\n    <td align=\"right\">426</td>\n    <td align=\"right\">760</td>\n    <td align=\"right\">544</td>\n    <td align=\"right\">626</td>\n  </tr>\n  <tr>\n    <td align=\"center\">256</td>\n    <td align=\"right\">455</td>\n    <td align=\"right\">512</td>\n    <td align=\"right\">882</td>\n    <td align=\"right\">614</td>\n    <td align=\"right\">711</td>\n  </tr>\n  <tr>\n    <td align=\"center\">384</td>\n    <td align=\"right\">669</td>\n    <td align=\"right\">703</td>\n    <td align=\"right\">1665</td>\n    <td align=\"right\">896</td>\n    <td align=\"right\">1069</td>\n  </tr>\n  <tr>\n    <td align=\"center\">512</td>\n    <td align=\"right\">974</td>\n    <td align=\"right\">903</td>\n    <td align=\"right\">3023</td>\n    <td align=\"right\">1248</td>\n    <td align=\"right\">1426</td>\n  </tr>\n  <tr>\n    <td align=\"center\">1024</td>\n    <td align=\"right\">1823</td>\n    <td align=\"right\">1870</td>\n    <td align=\"right\">13542</td>\n    <td align=\"right\">2408</td>\n    <td align=\"right\">1987</td>\n  </tr>\n  <tr>\n    <td align=\"center\">2048</td>\n    <td align=\"right\">3531</td>\n    <td align=\"right\">3415</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">4715</td>\n    <td align=\"right\">3612</td>\n  </tr>\n  <tr>\n    <td align=\"center\">3072</td>\n    <td align=\"right\">5293</td>\n    <td align=\"right\">5050</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">7029</td>\n    <td align=\"right\">5424</td>\n  </tr>\n  <tr>\n    <td align=\"center\">4096</td>\n    <td align=\"right\">6949</td>\n    <td align=\"right\">6775</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">9349</td>\n    <td align=\"right\">7271</td>\n  </tr>\n</table>\n\n\n\n\n### 1. For-loop with exit\n\n\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30d3\u30c3\u30c8\u5e45\u304c256\u30d3\u30c3\u30c8\u4ee5\u5185\u3067\u3042\u308c\u3070\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u305d\u308c\u307b\u3069\u905c\u8272\u306a\u3044\u7d50\u679c\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u4ee5\u4e0a\u306e\u30d3\u30c3\u30c8\u5e45\u3067\u306f\u30d3\u30c3\u30c8\u5e45\u304c\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u3001\u6025\u901f\u306b\u60aa\u5316\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n### 2. For-loop with found flag\n\n\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u3001\u610f\u5916\u3068\u5065\u95d8\u3057\u3066\u3044\u307e\u3059\u3002\u6027\u80fd\u3084\u5bb9\u91cf\u306e\u3069\u3061\u3089\u3092\u307f\u3066\u3082\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3088\u308a\u3082\u826f\u3044\u7d50\u679c\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u30825\u306e\u4e26\u5217\u5316\u3057\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u905c\u8272\u306a\u3044\u7d50\u679c\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u6c17\u5408\u3044\u5165\u308c\u3066\u4e26\u5217\u5316\u3057\u305f\u8a18\u8ff0\u3092\u3057\u305f\u8eab\u3068\u3057\u3066\u306f\u3001\u3061\u3087\u3063\u3068\u304c\u3063\u304b\u308a\u306a\u307b\u3069\u3067\u3059\u3002\n\n\n\n\n### 3. For-loop with or-reduce\n\n\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u5b9f\u306f\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30d3\u30c3\u30c8\u6570\u304c2048\u30d3\u30c3\u30c8\u3092\u8d85\u3048\u308b\u3068\u3001 Vivado \u306e\u8ad6\u7406\u5408\u6210\u304c\u7d42\u4e86\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3069\u3046\u3084\u3089\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f \u3000Vivado \u306f\u4e0d\u5f97\u610f\u306a\u3088\u3046\u3067\u3001\u6700\u9069\u5316\u306b\u82e6\u52b4\u3059\u308b\u3088\u3046\u3067\u3059\u3002\u3057\u304b\u3057\u30d3\u30c3\u30c8\u6570\u304c\u5c0f\u3055\u3044\u5834\u5408\u306f\u6700\u9069\u5316\u304c\u52b9\u304f\u3089\u3057\u304f\u305d\u308c\u306a\u308a\u306e\u7d50\u679c\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n### 4. Use Decrement\n\n\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001Xilinx \u306e FPGA \u3067\u306f\u3042\u307e\u308a\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3082\u3068\u3082\u3068 FPGA \u306e\u52a0\u7b97\u5668\u306f\u30ad\u30e3\u30ea\u30fc\u3092\u4f1d\u642c\u3059\u308b\u65b9\u5f0f\u3067\u3059\u3002Xilinx \u306e FPGA \u306b\u306f\u3001\u30ad\u30e3\u30ea\u30fc\u4f1d\u642c\u7528\u306e\u56de\u8def\u3068\u914d\u7dda\u306f\u5c02\u7528\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u305d\u308c\u306a\u308a\u306b\u9ad8\u901f\u306a\u306e\u3067\u3059\u304c\u3001\u7dcf\u9045\u5ef6\u6642\u9593\u306f\u30d3\u30c3\u30c8\u6570\u306b\u6bd4\u4f8b\u3059\u308b\u306e\u3067\u3001\u30d3\u30c3\u30c8\u6570\u304c\u5927\u304d\u3044\u3068\u3001\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u6bd4\u3079\u3066\u76ee\u306b\u898b\u3048\u3066\u9045\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u7e70\u308a\u8fd4\u3057\u307e\u3059\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306b\u3068\u3063\u3066\u826f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8ad6\u7406\u56de\u8def\u306b\u3068\u3063\u3066\u306f\u5fc5\u305a\u3057\u3082\u305d\u3046\u3067\u306f\u7121\u3044\u3068\u3044\u3046\u5178\u578b\u7684\u306a\u4f8b\u3068\u8a00\u3048\u307e\u3059\u3002\n\n\n\n\n### 5. Parallel and Recursive\n\n\n2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u305d\u308c\u307b\u3069\u5909\u308f\u3089\u306a\u3044\u7d50\u679c\u3067\u3057\u305f\u3002\u4e00\u5fdc\u3001\u6700\u901f\u306a\u7d50\u679c\u304c\u51fa\u3066\u307e\u3059\u304c\u3001\u82e6\u52b4\u3057\u305f\u5272\u308a\u306b\u306f\u611f\u6e80\u8f09\u3067\u3059\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n## Quartus\n\n\nAltera\u793e\u306e Quartus Prime (15.1) Light Editiion\u3067\u8ad6\u7406\u5408\u6210\uff06\u914d\u7f6e\u914d\u7dda\u3057\u305f\u6642\u306e\u6027\u80fd\u3092\u52d5\u4f5c\u5468\u6ce2\u6570\u3067\u793a\u3057\u307e\u3059\u3002\u52d5\u4f5c\u5468\u6ce2\u6570\u304c\u5927\u304d\u3044\u307b\u3069\u901f\u3044\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\n\nTable.3 Performance (Quartus Prime 15.1 Light Edition)\n\n<table border=\"2\">\n  <tr>\n    <td align=\"center\" colspan=\"2\" rowspan=\"2\">Device</td>\n    <td align=\"center\" rowspan=\"2\">Parameter</td>\n    <td align=\"center\" colspan=\"5\">Fmax(MHz) Slow 1100mV 85C Model</td>\n  </tr>\n  <tr>\n    <td align=\"center\" colspan=\"5\">Algorithm</td>\n  </tr>\n  <tr>\n    <td align=\"center\">Family</td>\n    <td align=\"center\">Speed</td>\n    <td align=\"center\">WIDTH</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">2</td>\n    <td align=\"center\">3</td>\n    <td align=\"center\">4</td>\n    <td align=\"center\">5</td>\n  </tr>\n  <tr>\n    <td rowspan=\"18\">Cyclone V</td>\n    <td align=\"center\" rowspan=\"18\"></td>\n    <td align=\"center\">4</td>\n    <td align=\"right\">811.69</td>\n    <td align=\"right\">811.69</td>\n    <td align=\"right\">811.69</td>\n    <td align=\"right\">811.69</td>\n    <td align=\"right\">811.69</td>\n  </tr>\n  <tr>\n    <td align=\"center\">8</td>\n    <td align=\"right\"></td>\n    <td align=\"right\">647.25</td>\n    <td align=\"right\">647.25</td>\n    <td align=\"right\">430.48</td>\n    <td align=\"right\">647.25</td>\n  </tr>\n  <tr>\n    <td align=\"center\">12</td>\n    <td align=\"right\">528.54</td>\n    <td align=\"right\">528.54</td>\n    <td align=\"right\">528.54</td>\n    <td align=\"right\">431.48</td>\n    <td align=\"right\">528.54</td>\n  </tr>\n  <tr>\n    <td align=\"center\">16</td>\n    <td align=\"right\">460.41</td>\n    <td align=\"right\">460.41</td>\n    <td align=\"right\">460.41</td>\n    <td align=\"right\">360.36</td>\n    <td align=\"right\">460.41</td>\n  </tr>\n  <tr>\n    <td align=\"center\">32</td>\n    <td align=\"right\">318.98</td>\n    <td align=\"right\">318.98</td>\n    <td align=\"right\">311.92</td>\n    <td align=\"right\">287.69</td>\n    <td align=\"right\">287.69</td>\n  </tr>\n  <tr>\n    <td align=\"center\">48</td>\n    <td align=\"right\">240.96</td>\n    <td align=\"right\">240.96</td>\n    <td align=\"right\">239.41</td>\n    <td align=\"right\">224.62</td>\n    <td align=\"right\">224.62</td>\n  </tr>\n  <tr>\n    <td align=\"center\">64</td>\n    <td align=\"right\">175.38</td>\n    <td align=\"right\">175.38</td>\n    <td align=\"right\">193.27</td>\n    <td align=\"right\">245.58</td>\n    <td align=\"right\">245.58</td>\n  </tr>\n  <tr>\n    <td align=\"center\">96</td>\n    <td align=\"right\">141.00</td>\n    <td align=\"right\">141.00</td>\n    <td align=\"right\">133.74</td>\n    <td align=\"right\">187.41</td>\n    <td align=\"right\">186.12</td>\n  </tr>\n  <tr>\n    <td align=\"center\">128</td>\n    <td align=\"right\">105.21</td>\n    <td align=\"right\">105.21</td>\n    <td align=\"right\">101.00</td>\n    <td align=\"right\">169.89</td>\n    <td align=\"right\">177.71</td>\n  </tr>\n  <tr>\n    <td align=\"center\">160</td>\n    <td align=\"right\">86.09</td>\n    <td align=\"right\">86.09</td>\n    <td align=\"right\">85.46</td>\n    <td align=\"right\">145.84</td>\n    <td align=\"right\">190.55</td>\n  </tr>\n  <tr>\n    <td align=\"center\">192</td>\n    <td align=\"right\">72.49</td>\n    <td align=\"right\">72.49</td>\n    <td align=\"right\">72.10</td>\n    <td align=\"right\">132.40</td>\n    <td align=\"right\">174.00</td>\n  </tr>\n  <tr>\n    <td align=\"center\">224</td>\n    <td align=\"right\">61.56</td>\n    <td align=\"right\">64.06</td>\n    <td align=\"right\">61.56</td>\n    <td align=\"right\">111.42</td>\n    <td align=\"right\">168.18</td>\n  </tr>\n  <tr>\n    <td align=\"center\">256</td>\n    <td align=\"right\">55.28</td>\n    <td align=\"right\">54.06</td>\n    <td align=\"right\">55.28</td>\n    <td align=\"right\">102.15</td>\n    <td align=\"right\">157.88</td>\n  </tr>\n  <tr>\n    <td align=\"center\">384</td>\n    <td align=\"right\">36.19</td>\n    <td align=\"right\">36.79</td>\n    <td align=\"right\">36.19</td>\n    <td align=\"right\">74.64</td>\n    <td align=\"right\">153.14</td>\n  </tr>\n  <tr>\n    <td align=\"center\">512</td>\n    <td align=\"right\">27.85</td>\n    <td align=\"right\">27.42</td>\n    <td align=\"right\">27.85</td>\n    <td align=\"right\">60.28</td>\n    <td align=\"right\">149.68</td>\n  </tr>\n  <tr>\n    <td align=\"center\">1024</td>\n    <td align=\"right\">13.80</td>\n    <td align=\"right\">14.14</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">32.07</td>\n    <td align=\"right\">129.85</td>\n  </tr>\n  <tr>\n    <td align=\"center\">2048</td>\n    <td align=\"right\">7.08</td>\n    <td align=\"right\">7.09</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">113.57</td>\n  </tr>\n  <tr>\n    <td align=\"center\">3072</td>\n    <td align=\"right\">4.62</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">-</td>\n  </tr>\n</table>\n\n\n\n\n\nTable.4 Resource (Quartus Prime 15.1 Light Edition)\n\n<table border=\"2\">\n  <tr>\n    <td align=\"center\" colspan=\"2\" rowspan=\"2\">Device</td>\n    <td align=\"center\" rowspan=\"2\">Parameter</td>\n    <td align=\"center\" colspan=\"5\">Resource [ALMs]</td>\n  </tr>\n  <tr>\n    <td align=\"center\" colspan=\"5\">Algorithm</td>\n  </tr>\n  <tr>\n    <td align=\"center\">Family</td>\n    <td align=\"center\">Speed</td>\n    <td align=\"center\">WIDTH</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">2</td>\n    <td align=\"center\">3</td>\n    <td align=\"center\">4</td>\n    <td align=\"center\">5</td>\n  </tr>\n  <tr>\n    <td rowspan=\"18\">Cyclone V</td>\n    <td align=\"center\" rowspan=\"18\"></td>\n    <td align=\"center\">4</td>\n    <td align=\"right\">1.8</td>\n    <td align=\"right\">1.8</td>\n    <td align=\"right\">1.8</td>\n    <td align=\"right\">1.8</td>\n    <td align=\"right\">1.8</td>\n  </tr>\n  <tr>\n    <td align=\"center\">8</td>\n    <td align=\"right\"></td>\n    <td align=\"right\">5.3</td>\n    <td align=\"right\">5.3</td>\n    <td align=\"right\">9.8</td>\n    <td align=\"right\">5.3</td>\n  </tr>\n  <tr>\n    <td align=\"center\">12</td>\n    <td align=\"right\">9.3</td>\n    <td align=\"right\">9.3</td>\n    <td align=\"right\">9.3</td>\n    <td align=\"right\">14.2</td>\n    <td align=\"right\">9.3</td>\n  </tr>\n  <tr>\n    <td align=\"center\">16</td>\n    <td align=\"right\">12.0</td>\n    <td align=\"right\">12.0</td>\n    <td align=\"right\">12.0</td>\n    <td align=\"right\">19.1</td>\n    <td align=\"right\">12.0</td>\n  </tr>\n  <tr>\n    <td align=\"center\">32</td>\n    <td align=\"right\">27.5</td>\n    <td align=\"right\">27.5</td>\n    <td align=\"right\">27.5</td>\n    <td align=\"right\">38.5</td>\n    <td align=\"right\">38.5</td>\n  </tr>\n  <tr>\n    <td align=\"center\">48</td>\n    <td align=\"right\">40.2</td>\n    <td align=\"right\">40.2</td>\n    <td align=\"right\">39.2</td>\n    <td align=\"right\">57.8</td>\n    <td align=\"right\">57.8</td>\n  </tr>\n  <tr>\n    <td align=\"center\">64</td>\n    <td align=\"right\">56.0</td>\n    <td align=\"right\">56.0</td>\n    <td align=\"right\">54.7</td>\n    <td align=\"right\">78.6</td>\n    <td align=\"right\">78.6</td>\n  </tr>\n  <tr>\n    <td align=\"center\">96</td>\n    <td align=\"right\">84.9</td>\n    <td align=\"right\">84.9</td>\n    <td align=\"right\">83.4</td>\n    <td align=\"right\">119.8</td>\n    <td align=\"right\">114.8</td>\n  </tr>\n  <tr>\n    <td align=\"center\">128</td>\n    <td align=\"right\">113.5</td>\n    <td align=\"right\">113.5</td>\n    <td align=\"right\">112.2</td>\n    <td align=\"right\">158.6</td>\n    <td align=\"right\">153.8</td>\n  </tr>\n  <tr>\n    <td align=\"center\">160</td>\n    <td align=\"right\">141.6</td>\n    <td align=\"right\">141.6</td>\n    <td align=\"right\">140.2</td>\n    <td align=\"right\">199.2</td>\n    <td align=\"right\">193.2</td>\n  </tr>\n  <tr>\n    <td align=\"center\">192</td>\n    <td align=\"right\">175.5</td>\n    <td align=\"right\">175.5</td>\n    <td align=\"right\">175.3</td>\n    <td align=\"right\">240.3</td>\n    <td align=\"right\">230.5</td>\n  </tr>\n  <tr>\n    <td align=\"center\">224</td>\n    <td align=\"right\">232.6</td>\n    <td align=\"right\">204.5</td>\n    <td align=\"right\">232.6</td>\n    <td align=\"right\">281.1</td>\n    <td align=\"right\">273.2</td>\n  </tr>\n  <tr>\n    <td align=\"center\">256</td>\n    <td align=\"right\">266.4</td>\n    <td align=\"right\">233.7</td>\n    <td align=\"right\">266.4</td>\n    <td align=\"right\">322.7</td>\n    <td align=\"right\">307.0</td>\n  </tr>\n  <tr>\n    <td align=\"center\">384</td>\n    <td align=\"right\">408.7</td>\n    <td align=\"right\">348.8</td>\n    <td align=\"right\">408.7</td>\n    <td align=\"right\">483.8</td>\n    <td align=\"right\">473.8</td>\n  </tr>\n  <tr>\n    <td align=\"center\">512</td>\n    <td align=\"right\">552.3</td>\n    <td align=\"right\">464.3</td>\n    <td align=\"right\">552.3</td>\n    <td align=\"right\">648.2</td>\n    <td align=\"right\">611.5</td>\n  </tr>\n  <tr>\n    <td align=\"center\">1024</td>\n    <td align=\"right\">1066.3</td>\n    <td align=\"right\">921.7</td>\n    <td align=\"right\">41690.5</td>\n    <td align=\"right\">1309.6</td>\n    <td align=\"right\">1244.8</td>\n  </tr>\n  <tr>\n    <td align=\"center\">2048</td>\n    <td align=\"right\">2120.0</td>\n    <td align=\"right\">1836.7</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">2313.7</td>\n    <td align=\"right\">2479.7</td>\n  </tr>\n  <tr>\n    <td align=\"center\">3072</td>\n    <td align=\"right\">3169.4</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">-</td>\n    <td align=\"right\">-</td>\n  </tr>\n</table>\n\n\n\n\n\n\n### 1. For-loop with exit\n\n\n\n### 2. For-loop with found flag\n\n\n\n### 3. For-loop with or-reduce\n\n\nQuartus \u3067\u306f\u3001\u4e0a\u306e3\u3064\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306e\u9055\u3044\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u30d3\u30c3\u30c8\u5e45\u304c\u5927\u304d\u304f\u306a\u308b\u306e\u3068\u6bd4\u4f8b\u3057\u3066\u9045\u5ef6\u6642\u9593\u304c\u5897\u3048\u3066\u3044\u307e\u3059\u3002\u304a\u305d\u3089\u304f\u3001Quartus \u306f\u3042\u307e\u308a\u3053\u306e\u624b\u306e For-loop \u306e\u6700\u9069\u5316\u304c Vivado \u306b\u6bd4\u3079\u3066\u4e0a\u624b\u304f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\n\n\n### 4. Use Decrement\n\n\nAltera \u306e FPGA \u3082\u30ad\u30e3\u30ea\u30fc\u4f1d\u642c\u65b9\u5f0f\u306e\u52a0\u7b97\u5668\u3067\u3059\u3002\u30ad\u30e3\u30ea\u30fc\u4f1d\u642c\u7528\u306e\u56de\u8def\u3068\u914d\u7dda\u306f\u5c02\u7528\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u305d\u308c\u306a\u308a\u306b\u9ad8\u901f\u306a\u306e\u3067\u3059\u304c\u3001\u7dcf\u9045\u5ef6\u6642\u9593\u306f\u30d3\u30c3\u30c8\u6570\u306b\u6bd4\u4f8b\u3059\u308b\u306e\u3067\u3001\u30d3\u30c3\u30c8\u6570\u304c\u5927\u304d\u3044\u3068\u305d\u308c\u306b\u6bd4\u4f8b\u3057\u3066\u9045\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u305f\u3060\u3001Xilinx \u306e Vivado \u306e\u5834\u5408\u3068\u7570\u306a\u308a\u3001For-loop \u306e\u6700\u9069\u5316\u304c\u30c0\u30e1\u30c0\u30e1\u306a\u306e\u3067\u3001\u305d\u308c\u306b\u6bd4\u8f03\u3059\u308b\u3068\u30de\u30b7\u306a\u7d50\u679c\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\n\n### 5. Parallel and Recursive\n\n\nAltera \u306e\u5834\u5408\u306f\u3001\u4e26\u5217\u5316\u306e\u8a18\u8ff0\u304c\u3088\u304f\u52b9\u304d\u307e\u3057\u305f\u3002\u9811\u5f35\u3063\u3066\u66f8\u3044\u305f\u7532\u6590\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\n\n\n# Comment\n\n\n\n\n\u3053\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u56de\u8def\u3067\u3082\u3001\u8a18\u8ff0\u65b9\u6cd5\u306b\u3088\u3063\u3066\u3001\u307e\u305f\u4f7f\u7528\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u3084\u30c4\u30fc\u30eb\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u7d50\u679c\u304c\u3067\u307e\u3057\u305f\u3002\u3069\u308c\u304b\u4e00\u3064\u306b\u7d5e\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u7528\u9014\u306b\u5fdc\u3058\u3066\u8a18\u8ff0\u65b9\u6cd5\u3092\u5909\u3048\u308b\u304f\u3089\u3044\u306e\u5de5\u592b\u304c\u5fc5\u8981\u3067\u3057\u3087\u3046\u3002\n\n\n# Reference\n\n\u3053\u3053\u3067\u8aac\u660e\u3057\u305f VHDL \u306e\u30b3\u30fc\u30c9\u3068\u3001\u8ad6\u7406\u5408\u6210\u6642\u306b\u4f7f\u7528\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u4ee5\u4e0b\u306e\u3068\u3053\u308d\u306b\u3042\u308a\u307e\u3059\u3002\n\n[https://github.com/ikwzm/Generic_Priority_Encoder](https://github.com/ikwzm/Generic_Priority_Encoder)\n\n\u307e\u305f\u3001\u3053\u3053\u3067\u8aac\u660e\u3057\u305f VHDL \u306e\u30b3\u30fc\u30c9\u3092\u4ed6\u304b\u3089\u3082\u5229\u7528\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3057\u305f\u3082\u306e\u304c\u3001\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\n\n[https://github.com/ikwzm/PipeWork/blob/master/src/components/priority_encoder_procedures.vhd](https://github.com/ikwzm/PipeWork/blob/master/src/components/priority_encoder_procedures.vhd)\n\n\n", "tags": ["VHDL", "FPGA", "Vivado", "quartus"]}