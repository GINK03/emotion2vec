{"context": " More than 1 year has passed since last update.\n\n\u30d7\u30ec\u30d3\u30e5\u30fc\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u4e0b\u8a18\u306eChapter4\u3092\u53c2\u8003\u306b\nSwift2 iOS\u7248\u306b\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\nhttp://scenekitbook.com/sampleCode.html\nSceneKit\u3092\u5229\u7528\u3057\u3066\uff13D\u30e2\u30c7\u30eb\u306e\u63cf\u753b\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u80cc\u666f\u306f\u30ab\u30e1\u30e9\u306e\u753b\u50cf\u3067\u3059\u3002\n\nViewController.swift\nimport UIKit\nimport SceneKit\nimport AVFoundation\n\nclass ViewController: UIViewController {\n\n    @IBOutlet weak var sceneView: SCNView!\n    var ShouldUseVideoFromDevicesCamera = true; // Change to YES to enable video \n    var mySession : AVCaptureSession!\n    var myDevice : AVCaptureDevice!\n    var myImageOutput : AVCaptureStillImageOutput!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n\n        sceneView.autoenablesDefaultLighting = true\n        sceneView.allowsCameraControl = true\n        sceneView.backgroundColor = UIColor.clearColor()\n\n        // \u52d5\u7684\u306b\u30b7\u30fc\u30f3\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\n        //sceneView.scene = SCNScene(named: \"Spaceship.dae\")\n\n        // Do any additional setup after loading the view, typically from a nib.\n\n        // Insert code here to initialize your application\n        let spaceship = self.sceneView.scene?.rootNode.childNodeWithName(\"Spaceship\", recursively: true)\n\n\n        let shipMaterial = SCNMaterial()\n\n        // UIImage objects\n        shipMaterial.diffuse.contents  = NSBundle.mainBundle().pathForResource(\"diffuse\", ofType: \"png\")\n        shipMaterial.specular.contents = NSBundle.mainBundle().pathForResource(\"specular\", ofType: \"png\")\n\n        // CGImageRefs\n        let normalImageURL = NSBundle.mainBundle().URLForResource(\"normal\", withExtension: \"png\")\n        let imageData = NSData(contentsOfURL: normalImageURL!)\n        let imageDataProvider = CGDataProviderCreateWithCFData(imageData)\n        let normalCGImage = CGImageCreateWithPNGDataProvider(imageDataProvider, nil, true,CGColorRenderingIntent.RenderingIntentDefault);\n\n        shipMaterial.normal.contents = normalCGImage;\n\n\n        shipMaterial.emission.contents = NSBundle.mainBundle().pathForResource(\"emission\", ofType: \"png\")\n\n        shipMaterial.multiply.contents = NSBundle.mainBundle().pathForResource(\"multiply\", ofType: \"png\")\n\n\n\n        // Layers\n        if (ShouldUseVideoFromDevicesCamera) {\n            videoPreviewLayer()\n            // \u63cf\u753b\u9806\u756a\u3092\u5909\u3048\u308b\n            self.view.addSubview(sceneView)\n\n        }\n\n\n        spaceship!.geometry!.materials = [shipMaterial];\n\n        /*\n        // \u30b7\u30fc\u30f3\u5185\u306e\u30ab\u30e1\u30e9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\n        let nodCamera = self.sceneView.scene?.rootNode.childNodeWithName(\"Camera\", recursively: true)\n        nodCamera!.position = SCNVector3(x: 0, y: 0, z: 300)\n        //nodCamera!.rotation = SCNVector4(x:0,y:0,z:0,w:0)\n        self.sceneView.scene?.rootNode.addChildNode(nodCamera!)\n        */\n    }\n\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n\n    func videoPreviewLayer() -> CALayer? {\n\n        // \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4f5c\u6210.\n        mySession = AVCaptureSession()\n\n        // \u30c7\u30d0\u30a4\u30b9\u4e00\u89a7\u306e\u53d6\u5f97.\n        let devices = AVCaptureDevice.devices()\n\n        // \u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u3092myDevice\u306b\u683c\u7d0d.\n        for device in devices{\n            if(device.position == AVCaptureDevicePosition.Back){\n                myDevice = device as! AVCaptureDevice\n            }\n        }\n\n        do {\n            // \u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u304b\u3089VideoInput\u3092\u53d6\u5f97.\n            let videoInput = try AVCaptureDeviceInput(device: myDevice)\n\n            // \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0.\n            mySession.addInput(videoInput)\n\n            // \u51fa\u529b\u5148\u3092\u751f\u6210.\n            myImageOutput = AVCaptureStillImageOutput()\n\n            // \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0.\n            mySession.addOutput(myImageOutput)\n\n            // \u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u30ec\u30a4\u30e4\u30fc\u3092\u751f\u6210.\n            let myVideoLayer = AVCaptureVideoPreviewLayer(session:mySession)\n            myVideoLayer.frame = self.view.bounds\n            myVideoLayer.videoGravity = AVLayerVideoGravityResizeAspectFill\n\n            // View\u306b\u8ffd\u52a0.\n            self.view.layer.addSublayer(myVideoLayer)\n\n            // \u30bb\u30c3\u30b7\u30e7\u30f3\u958b\u59cb.\n            mySession.startRunning()\n\n            return myVideoLayer\n\n        }catch{\n            return nil\n        }\n\n\n    }\n\n    override func shouldAutorotate() -> Bool{\n        return false\n    }\n\n}\n\n\n\n\u30ea\u30bd\u30fc\u30b9\n\u30ea\u30bd\u30fc\u30b9\u306f\u4e0b\u8a18Chapter4\u306e\u3082\u306e\u3092\u304a\u501f\u308a\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/d-ronnqvist/SCNBook-code/tree/master/Chapter%2004%20-%20Adding%20Detail%20with%20Images/Assets\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u4e0b\u8a18\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\n\u30fbSpaceship.dae:COLLADA 3D\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb(.dae)\n\u30fbdiffuse.png:\u30ab\u30e9\u30fc\u30de\u30c3\u30d7\n\u30fbnormal.png:\u6cd5\u7dda\u30de\u30c3\u30d7\uff08\u51f8\u51f9\u8868\u73fe\u7528\uff09\n\u30fbspecular.png:\u30b9\u30da\u30ad\u30e5\u30e9\u30fc\u30de\u30c3\u30d7\uff08\u91d1\u5c5e\u306e\u5149\u6ca2\u8868\u73fe\u7528\uff09\n\u30fbemission.png:\u767a\u5149\u30de\u30c3\u30d7\uff08\u6a5f\u4f53\u306e\u30e9\u30a4\u30c8\u90e8\u5206\u3092\u8868\u73fe\uff09\n\u30fbmultiply.png\uff1a\u4e57\u7b97\u30de\u30c3\u30d7\uff08\u5f71\u306e\u8ffd\u52a0\u8868\u73fe\u7528\uff09\n\n\n\u30b9\u30c8\u30fc\u30ea\u30fc\u30dc\u30fc\u30c9\nSceneView\u3092\u4e00\u3064\u914d\u7f6e\u3057\u307e\u3059\u3002\nScene\u306b\u306f\u8aad\u307f\u8fbc\u3080\u30b7\u30fc\u30f3\u3067\u3042\u308bSpaceship.dae\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nReferencing Outlets\u306bSCNView\u3092\u7d10\u4ed8\u3051\u3057\u307e\u3059\u3002\n\n\n\n\u30ab\u30e1\u30e9\u80cc\u666f\u5408\u6210\u306b\u3064\u3044\u3066\n\u30b7\u30fc\u30f3\u30d3\u30e5\u30fc\u306e\u80cc\u666f\u3092\u900f\u904e\u3057\u3066\n\u30ab\u30e1\u30e9\u80cc\u666f\u3092view\u306eaddSubLayer\u306b\u8ffd\u52a0\n\u305d\u306e\u5f8c\u3001SCNView\u304c\u624b\u524d\u306b\u306a\u308b\u3088\u3046\u306b\u63cf\u753b\u9806\u756a\u3092\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n// \u30b7\u30fc\u30f3\u30d3\u30e5\u30fc\u306e\u80cc\u666f\u900f\u904e\nsceneView.backgroundColor = UIColor.clearColor()\n// \u30ab\u30e1\u30e9\u30ec\u30a4\u30e4\u30fc\u3092\u30e1\u30a4\u30f3View\u306b\u8ffd\u52a0\nself.view.layer.addSublayer(myVideoLayer)\n// \u30b7\u30fc\u30f3\u30d3\u30e5\u30fc\u3092\u624b\u524d\u306b\nself.view.addSubview(sceneView)            \n\n\n\u30b7\u30fc\u30f3\u5185\u30ab\u30e1\u30e9\u306b\u3064\u3044\u3066\nCOLLADA\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u306f\u8907\u6570\u306e\uff13D\u30e2\u30c7\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3084\n\u30ab\u30e1\u30e9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u307e\u3068\u3081\u3066\u30b7\u30fc\u30f3\u3068\u3057\u3066\u4fdd\u5b58\u3067\u304d\u308b\uff13D\u30e2\u30c7\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3059\u3002\nXML\u5f62\u5f0f\u3067\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u8a73\u3057\u3044\u30e2\u30c7\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u95a2\u3057\u3066\u306f\u516c\u5f0f\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\nhttps://www.khronos.org/files/collada_spec_1_5.pdf\n\u30ab\u30e1\u30e9\u306e\u521d\u671f\u8a2d\u5b9a\u3092\u5909\u3048\u308b\u305f\u3081\u306bCOLLADA\u30e2\u30c7\u30eb\u3092\u958b\u3044\u3066\u307f\u307e\u3059\u3002\n\n\u30ab\u30e1\u30e9\u306e\u898b\u3048\u308b\u7bc4\u56f2\u3001\u8996\u91ce\u89d2\u3084\u5965\u884c\u304d\u306e\u8a2d\u5b9a\uff08\u5c04\u5f71\u5909\u63db\u884c\u5217\uff09\u306f\u4e0b\u8a18\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\n\n\u30ab\u30e1\u30e9\u306e\u521d\u671f\u8996\u70b9\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\uff08\u30d3\u30e5\u30fc\u5909\u63db\u884c\u5217\uff09\n\n\u4e0a\u8a18\u3067Camera\u304cname=\"Camera\"\u3067\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306bCamera\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n// \u30b7\u30fc\u30f3\u5185\u306e\u30ab\u30e1\u30e9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\nlet nodCamera = self.sceneView.scene?.rootNode.childNodeWithName(\"Camera\", recursively: true)\nnodCamera!.position = SCNVector3(x: 0, y: 0, z: 300)\nself.sceneView.scene?.rootNode.addChildNode(nodCamera!)\n\n\u307e\u305f\u3001SCNView\u306eallowsCameraControl\u30d7\u30ed\u30d1\u30c6\u30a3\u3092true\u306b\u3059\u308b\u3053\u3068\u3067\u30bf\u30c3\u30c1\u306e\u30d4\u30f3\u30c1\u3084\u30b9\u30ef\u30a4\u30d7\u306a\u3069\u3067\u30ab\u30e1\u30e9\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\uff08\u9006\u306b\u30e6\u30fc\u30b6\u64cd\u4f5c\u3067\u52d5\u304b\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306ffalse\u306b\u3057\u307e\u3059\uff09\nsceneView.allowsCameraControl = true\n\n#\u30d7\u30ec\u30d3\u30e5\u30fc\n![IMG_0759.PNG](https://qiita-image-store.s3.amazonaws.com/0/55077/f102218d-64f0-9528-d5bc-5dd4df51bd2b.png)\n\n#\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u4e0b\u8a18\u306eChapter4\u3092\u53c2\u8003\u306b\nSwift2 iOS\u7248\u306b\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\nhttp://scenekitbook.com/sampleCode.html\n\nSceneKit\u3092\u5229\u7528\u3057\u3066\uff13D\u30e2\u30c7\u30eb\u306e\u63cf\u753b\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u80cc\u666f\u306f\u30ab\u30e1\u30e9\u306e\u753b\u50cf\u3067\u3059\u3002\n\n```ViewController.swift\nimport UIKit\nimport SceneKit\nimport AVFoundation\n\nclass ViewController: UIViewController {\n\n    @IBOutlet weak var sceneView: SCNView!\n    var ShouldUseVideoFromDevicesCamera = true; // Change to YES to enable video \n    var mySession : AVCaptureSession!\n    var myDevice : AVCaptureDevice!\n    var myImageOutput : AVCaptureStillImageOutput!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        \n        sceneView.autoenablesDefaultLighting = true\n        sceneView.allowsCameraControl = true\n        sceneView.backgroundColor = UIColor.clearColor()\n\n        // \u52d5\u7684\u306b\u30b7\u30fc\u30f3\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\n        //sceneView.scene = SCNScene(named: \"Spaceship.dae\")\n\n        // Do any additional setup after loading the view, typically from a nib.\n        \n        // Insert code here to initialize your application\n        let spaceship = self.sceneView.scene?.rootNode.childNodeWithName(\"Spaceship\", recursively: true)\n        \n        \n        let shipMaterial = SCNMaterial()\n        \n        // UIImage objects\n        shipMaterial.diffuse.contents  = NSBundle.mainBundle().pathForResource(\"diffuse\", ofType: \"png\")\n        shipMaterial.specular.contents = NSBundle.mainBundle().pathForResource(\"specular\", ofType: \"png\")\n        \n        // CGImageRefs\n        let normalImageURL = NSBundle.mainBundle().URLForResource(\"normal\", withExtension: \"png\")\n        let imageData = NSData(contentsOfURL: normalImageURL!)\n        let imageDataProvider = CGDataProviderCreateWithCFData(imageData)\n        let normalCGImage = CGImageCreateWithPNGDataProvider(imageDataProvider, nil, true,CGColorRenderingIntent.RenderingIntentDefault);\n        \n        shipMaterial.normal.contents = normalCGImage;\n        \n        \n        shipMaterial.emission.contents = NSBundle.mainBundle().pathForResource(\"emission\", ofType: \"png\")\n        \n        shipMaterial.multiply.contents = NSBundle.mainBundle().pathForResource(\"multiply\", ofType: \"png\")\n        \n        \n        \n        // Layers\n        if (ShouldUseVideoFromDevicesCamera) {\n            videoPreviewLayer()\n            // \u63cf\u753b\u9806\u756a\u3092\u5909\u3048\u308b\n            self.view.addSubview(sceneView)\n           \n        }\n        \n        \n        spaceship!.geometry!.materials = [shipMaterial];\n\n        /*\n        // \u30b7\u30fc\u30f3\u5185\u306e\u30ab\u30e1\u30e9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\n        let nodCamera = self.sceneView.scene?.rootNode.childNodeWithName(\"Camera\", recursively: true)\n        nodCamera!.position = SCNVector3(x: 0, y: 0, z: 300)\n        //nodCamera!.rotation = SCNVector4(x:0,y:0,z:0,w:0)\n        self.sceneView.scene?.rootNode.addChildNode(nodCamera!)\n        */\n    }\n    \n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n    \n    func videoPreviewLayer() -> CALayer? {\n        \n        // \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4f5c\u6210.\n        mySession = AVCaptureSession()\n        \n        // \u30c7\u30d0\u30a4\u30b9\u4e00\u89a7\u306e\u53d6\u5f97.\n        let devices = AVCaptureDevice.devices()\n        \n        // \u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u3092myDevice\u306b\u683c\u7d0d.\n        for device in devices{\n            if(device.position == AVCaptureDevicePosition.Back){\n                myDevice = device as! AVCaptureDevice\n            }\n        }\n        \n        do {\n            // \u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u304b\u3089VideoInput\u3092\u53d6\u5f97.\n            let videoInput = try AVCaptureDeviceInput(device: myDevice)\n            \n            // \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0.\n            mySession.addInput(videoInput)\n            \n            // \u51fa\u529b\u5148\u3092\u751f\u6210.\n            myImageOutput = AVCaptureStillImageOutput()\n            \n            // \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0.\n            mySession.addOutput(myImageOutput)\n            \n            // \u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u30ec\u30a4\u30e4\u30fc\u3092\u751f\u6210.\n            let myVideoLayer = AVCaptureVideoPreviewLayer(session:mySession)\n            myVideoLayer.frame = self.view.bounds\n            myVideoLayer.videoGravity = AVLayerVideoGravityResizeAspectFill\n            \n            // View\u306b\u8ffd\u52a0.\n            self.view.layer.addSublayer(myVideoLayer)\n            \n            // \u30bb\u30c3\u30b7\u30e7\u30f3\u958b\u59cb.\n            mySession.startRunning()\n            \n            return myVideoLayer\n        \n        }catch{\n            return nil\n        }\n        \n        \n    }\n    \n    override func shouldAutorotate() -> Bool{\n        return false\n    }\n    \n}\n```\n\n#\u30ea\u30bd\u30fc\u30b9\n\u30ea\u30bd\u30fc\u30b9\u306f\u4e0b\u8a18Chapter4\u306e\u3082\u306e\u3092\u304a\u501f\u308a\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/d-ronnqvist/SCNBook-code/tree/master/Chapter%2004%20-%20Adding%20Detail%20with%20Images/Assets\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u4e0b\u8a18\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\n\u30fbSpaceship.dae:COLLADA 3D\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb(.dae)\n\u30fbdiffuse.png:\u30ab\u30e9\u30fc\u30de\u30c3\u30d7\n\u30fbnormal.png:\u6cd5\u7dda\u30de\u30c3\u30d7\uff08\u51f8\u51f9\u8868\u73fe\u7528\uff09\n\u30fbspecular.png:\u30b9\u30da\u30ad\u30e5\u30e9\u30fc\u30de\u30c3\u30d7\uff08\u91d1\u5c5e\u306e\u5149\u6ca2\u8868\u73fe\u7528\uff09\n\u30fbemission.png:\u767a\u5149\u30de\u30c3\u30d7\uff08\u6a5f\u4f53\u306e\u30e9\u30a4\u30c8\u90e8\u5206\u3092\u8868\u73fe\uff09\n\u30fbmultiply.png\uff1a\u4e57\u7b97\u30de\u30c3\u30d7\uff08\u5f71\u306e\u8ffd\u52a0\u8868\u73fe\u7528\uff09\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-14 18.15.50.png](https://qiita-image-store.s3.amazonaws.com/0/55077/7628883d-da9a-a2b8-026f-5dc634ea6f6c.png)\n\n#\u30b9\u30c8\u30fc\u30ea\u30fc\u30dc\u30fc\u30c9\nSceneView\u3092\u4e00\u3064\u914d\u7f6e\u3057\u307e\u3059\u3002\nScene\u306b\u306f\u8aad\u307f\u8fbc\u3080\u30b7\u30fc\u30f3\u3067\u3042\u308bSpaceship.dae\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-14 18.24.30.png](https://qiita-image-store.s3.amazonaws.com/0/55077/12d15ca9-6599-f33c-19d4-bb26f33e38ee.png)\n\n\nReferencing Outlets\u306bSCNView\u3092\u7d10\u4ed8\u3051\u3057\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-14 18.24.37.png](https://qiita-image-store.s3.amazonaws.com/0/55077/22b420ec-a631-7510-b9af-44981c89b0c8.png)\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-14 18.25.15.png](https://qiita-image-store.s3.amazonaws.com/0/55077/44479708-d9d8-2277-952c-52e3e7a5fd18.png)\n\n#\u30ab\u30e1\u30e9\u80cc\u666f\u5408\u6210\u306b\u3064\u3044\u3066\n\u30b7\u30fc\u30f3\u30d3\u30e5\u30fc\u306e\u80cc\u666f\u3092\u900f\u904e\u3057\u3066\n\u30ab\u30e1\u30e9\u80cc\u666f\u3092view\u306eaddSubLayer\u306b\u8ffd\u52a0\n\u305d\u306e\u5f8c\u3001SCNView\u304c\u624b\u524d\u306b\u306a\u308b\u3088\u3046\u306b\u63cf\u753b\u9806\u756a\u3092\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n// \u30b7\u30fc\u30f3\u30d3\u30e5\u30fc\u306e\u80cc\u666f\u900f\u904e\nsceneView.backgroundColor = UIColor.clearColor()\n// \u30ab\u30e1\u30e9\u30ec\u30a4\u30e4\u30fc\u3092\u30e1\u30a4\u30f3View\u306b\u8ffd\u52a0\nself.view.layer.addSublayer(myVideoLayer)\n// \u30b7\u30fc\u30f3\u30d3\u30e5\u30fc\u3092\u624b\u524d\u306b\nself.view.addSubview(sceneView)            \n```\n\n#\u30b7\u30fc\u30f3\u5185\u30ab\u30e1\u30e9\u306b\u3064\u3044\u3066\nCOLLADA\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u306f\u8907\u6570\u306e\uff13D\u30e2\u30c7\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3084\n\u30ab\u30e1\u30e9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u307e\u3068\u3081\u3066\u30b7\u30fc\u30f3\u3068\u3057\u3066\u4fdd\u5b58\u3067\u304d\u308b\uff13D\u30e2\u30c7\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3059\u3002\nXML\u5f62\u5f0f\u3067\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u8a73\u3057\u3044\u30e2\u30c7\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u95a2\u3057\u3066\u306f\u516c\u5f0f\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\nhttps://www.khronos.org/files/collada_spec_1_5.pdf\n\n\u30ab\u30e1\u30e9\u306e\u521d\u671f\u8a2d\u5b9a\u3092\u5909\u3048\u308b\u305f\u3081\u306bCOLLADA\u30e2\u30c7\u30eb\u3092\u958b\u3044\u3066\u307f\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-14 22.24.31.png](https://qiita-image-store.s3.amazonaws.com/0/55077/f814a7e0-5d53-e297-6b8d-454c9cf9c10c.png)\n\n\u30ab\u30e1\u30e9\u306e\u898b\u3048\u308b\u7bc4\u56f2\u3001\u8996\u91ce\u89d2\u3084\u5965\u884c\u304d\u306e\u8a2d\u5b9a\uff08\u5c04\u5f71\u5909\u63db\u884c\u5217\uff09\u306f\u4e0b\u8a18\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-14 22.29.48.png](https://qiita-image-store.s3.amazonaws.com/0/55077/b8b0903b-3db6-47d4-7414-4ee3f6ed84f2.png)\n\n\u30ab\u30e1\u30e9\u306e\u521d\u671f\u8996\u70b9\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\uff08\u30d3\u30e5\u30fc\u5909\u63db\u884c\u5217\uff09\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-14 22.25.00.png](https://qiita-image-store.s3.amazonaws.com/0/55077/53381a60-fde1-3688-7ec0-e7ce1896703e.png)\n\n\u4e0a\u8a18\u3067Camera\u304cname=\"Camera\"\u3067\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306bCamera\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```\n// \u30b7\u30fc\u30f3\u5185\u306e\u30ab\u30e1\u30e9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\nlet nodCamera = self.sceneView.scene?.rootNode.childNodeWithName(\"Camera\", recursively: true)\nnodCamera!.position = SCNVector3(x: 0, y: 0, z: 300)\nself.sceneView.scene?.rootNode.addChildNode(nodCamera!)\n```\n\n\u307e\u305f\u3001SCNView\u306eallowsCameraControl\u30d7\u30ed\u30d1\u30c6\u30a3\u3092true\u306b\u3059\u308b\u3053\u3068\u3067\u30bf\u30c3\u30c1\u306e\u30d4\u30f3\u30c1\u3084\u30b9\u30ef\u30a4\u30d7\u306a\u3069\u3067\u30ab\u30e1\u30e9\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\uff08\u9006\u306b\u30e6\u30fc\u30b6\u64cd\u4f5c\u3067\u52d5\u304b\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306ffalse\u306b\u3057\u307e\u3059\uff09\n\n```\nsceneView.allowsCameraControl = true\n```\n\n", "tags": ["SceneKit", "iOS9", "XCode7", "Swift2.0", "Swift2"]}