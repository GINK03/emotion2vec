{"tags": ["Go", "echo", "Symfony2", "laravel"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u3072\u3087\u3093\u306a\u3053\u3068\u304b\u3089\u3001\u8077\u5834\u3067Go\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u306f\u3058\u3081\u308b\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\nAPI\u30b5\u30fc\u30d0\u30fc\u3060\u3051\u306a\u306e\u3067\u3001\u306a\u3093\u3068\u304b\u306a\u308b\u3068\u4fe1\u3058\u3066\u3044\u307e\u3059\u3002\n\u5c0f\u751f\u3001\u751f\u7c8b\u306ePHPer(Symfony2\u30e1\u30a4\u30f3)\u3067\u3059\u3002\nPHP\u306e\u77e5\u898b\u3092\u30d5\u30eb\u6d3b\u7528\u3059\u308b\u3079\u304f\u3001PHP\u30e9\u30a4\u30af\u306a\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u306fGithub\u306b\u3042\u3052\u3066\u307e\u3059\u3002\n\nGo\u306e\u6587\u6cd5\u306a\u3069\nGo\u8a00\u8a9e\u306e\u521d\u5fc3\u8005\u304c\u898b\u308b\u3068\u5e78\u305b\u306b\u306a\u308c\u308b\u5834\u6240\u3000#golang\u304c\u826f\u8a18\u4e8b\u3067\u3059\u3002\u719f\u8aad\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u306f\u3058\u3081\u3066\u306eGo\u306f\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\n\u5404\u7a2e\u9078\u5b9a\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u77e5\u8b58\u304c\u307b\u307c\u30bc\u30ed\u306a\u306e\u3067\u3001\u9078\u5b9a\u306f\u30ab\u30f3\u3068Google\u5148\u751f\u983c\u308a\u3067\u3059\u3002\n\nGo\u81ea\u4f53\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nMac\u306a\u306e\u3067\u3001Homebrew\u3067\u30ab\u30f3\u30bf\u30f3\u3002Windows? \u77e5\u3089\u306a\u3044\u5b50\u3067\u3059\u306d\u3002\n$ brew install go\n\n\nIDE\nPHPStorm\u306e\u7f6e\u63db\u306b\u6163\u308c\u304d\u3063\u3066\u3044\u308b\u306e\u3067\u3001Go language plugin\u3092\u4f7f\u3044\u307e\u3059\u3002\nIntelliJ IDEA\u3067Go\u8a00\u8a9e\u3092\u66f8\u304f(golang plugin alpha)\u306b\u8a73\u7d30\u306a\u3084\u308a\u304b\u305f\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u306e\u901a\u308a\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u7ba1\u7406\nComposer\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u7ba1\u7406\u306e\u4ed5\u7d44\u307f\u306f\u3001Go\u6a19\u6e96\u306e\u3082\u306e\u3084\u30d9\u30f3\u30c0\u30fc\u30c4\u30fc\u30eb\u7b49\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u3002\n\u79c1\u306fYaml\u30b9\u30ad\u30fc\u306a\u306e\u3067\u3001glide\u306b\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u3082Homebrew\u3067\u30e9\u30af\u30e9\u30af\u3002Win(ry\n$ brew install glide\n\n\nWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\necho\u306b\u3057\u307e\u3057\u305f\u3002Google Trends \u306b\u3088\u308b\u3068\u3001\u6700\u8fd1\u4eba\u6c17\u304c\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3002\u305d\u308c\u4ee5\u4e0a\u306e\u7406\u7531\u306f\u3042\u308a\u307e\u305b\u3093\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u3002 \n\u3056\u3063\u3068\u898b\u3001Laravel\u3068\u3044\u3046\u304b\u3001Rumen\u30c1\u30c3\u30af\u3067\u3059\u306d\u3002\n\u30de\u30a4\u30af\u30ed\u3067\u306f\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u5de5\u592b\u3059\u308c\u3070\u3044\u308d\u3044\u308d\u6a5f\u80fd\u3092\u76db\u308c\u305d\u3046\u3067\u3059\u3002\n\u305d\u3057\u3066\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u82f1\u8a9e\u3060\u3051\u3067\u3059\u3002\n\nSymfony\u3092\u4f7f\u3046\u304f\u3089\u3044\u30ea\u30c6\u30e9\u30b7\u30fc\u306e\u3042\u308b\u4eba\u306f\u3001\u82f1\u8a9e\u304f\u3089\u3044\u8aad\u3081\u308b\u3063\u3057\u3087www\nby Symfony\u30e6\u30fc\u30b6\u30fc\u4f1a\u306e\u3059\u3054\u3044\u3072\u3068\n\n\u30a2\u30c3\u30cf\u30a4\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u7b49\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\u30d5\u30a1\u30a4\u30eb\necho\u306b\u306f\u74b0\u5883\u5225\u8a2d\u5b9a\u7ba1\u7406\u306e\u6a5f\u80fd\u304c\u306a\u3044...\u3060\u3068...\nDB\u306eID/Pass\u3068\u304b\u3069\u3046\u3059\u3093\u306d\u3093\uff01 \u3068\u3044\u3046\u308f\u3051\u3067\u3001\u7528\u610f\u3057\u307e\u3059\u3002\nyaml\u3092\u98df\u3079\u308b\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u306e\u3082\u624b\u3067\u3059\u304c\u3001Heroku\u3067\u52d5\u304b\u3059\u4e88\u5b9a\u306a\u306e\u3067\n\u74b0\u5883\u5909\u6570\u3067\u6307\u5b9a\u3067\u304d\u308b\u307b\u3046\u304c\u4fbf\u5229\u305d\u3046\u3067\u3059\u3002\n\u958b\u767a\u74b0\u5883\u3067\u306fdirenv\u3092\u4f7f\u3044\u307e\u3059\u3002\n${projectRoot}/.envrc \u306b\u66f8\u3051\u3070\u3001\u3088\u3057\u306a\u306b\u74b0\u5883\u5909\u6570\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nGo\u306e\u30a2\u30d7\u30ea\u306f\u74b0\u5883\u5909\u6570\u3092\u98df\u3079\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n\u3053\u308c\u3082Homebrew\u3067(ry\n$ brew install direnv\n\n\nDI\u30b3\u30f3\u30c6\u30ca\necho\u306b\u306fDI\u30b3\u30f3\u30c6\u30ca\u304c\u306a\u3044...\u3060\u3068...\n\u30c0\u30e1\u3067\u3059\u3002\u305d\u3093\u306a\u4eba\u751f\u306f\u8010\u3048\u3089\u308c\u307e\u305b\u3093\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067Google\u5148\u751f\u306b\u304d\u3044\u305f\u3068\u3053\u308d\u3001goldi\u304c\u30d2\u30c3\u30c8\u3002\n\nIf you are used to frameworks like Symfony you might want to define your types in an easy to maintain yaml file.You can do this using goldigen.\nSymfony\u3068\u304b\u4f7f\u3063\u3066\u305f\u3093\u306a\u3089\u3001yaml\u3067\u30b5\u30fc\u30d3\u30b9\u3068\u304b\u7ba1\u7406\u3057\u305f\u3044\u3063\u3057\u3087\uff1f goldigen \u3063\u3066\u3044\u3046\u3084\u3064\u4f7f\u3048\u3070\u3067\u304d\u308b\u304b\u3089\u3002(\u4e71\u66b4\u8a33)\n\n\u306f\u3044\u5148\u751f\uff01\u3000\u305d\u308c\u79c1\u306e\u3053\u3068\u3067\u3059\uff01\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u4e00\u3082\u4e8c\u3082\u306a\u304f\u63a1\u7528\u3002\n\nORM etc...\n\u73fe\u5728\u306e\u3068\u3053\u308dDB\u306f\u4f7f\u3046\u4e88\u5b9a\u304c\u306a\u3044\u306e\u3067\u5272\u611b\u3002\nGORM\u3068\u304b\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u306d\u3001\u540d\u524d\u304c\u30b7\u30f3\u30d7\u30eb\u3067\u3002\n\n\u74b0\u5883\u5909\u6570\u307e\u308f\u308a\n$ vi ~/.bash_profile\n------\nexport GOPATH=$HOME/_go       #\u4eee\u306eGOPATH\u304c\u5fc5\u8981\u3089\u3057\u3044\nexport PATH=$PATH:$GOPATH/bin #PATH\u3092\u901a\u3059\nexport EDITOR=/usr/bin/vi     #direnv edit\u30b3\u30de\u30f3\u30c9\u304b\u3089\u547c\u3070\u308c\u308b\u30a8\u30c7\u30a3\u30bf\neval \"$(direnv hook bash)\"    #direnv\u3092\u6709\u52b9\u306b\u3059\u308b\u304a\u307e\u3058\u306a\u3044\n------\n\n# \u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080\n$ source ~/.bash_profile \n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308b\n$ mkdir ${projectRoot}\n$ cd ${projectRoot}\n$ vi .envrc\n------\nexport GOPATH=`pwd`    # GOPATH\u306f\"\u3053\u3053\"\uff01\nexport TEST_PARAM=test # \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u305b\u308b\u304b\u30c6\u30b9\u30c8\u7528\n------\n\n# DI\u306e\u8a2d\u5b9a\u3092\u30d1\u30fc\u30b9\u3057\u3066\u304f\u308c\u308b\u304f\u3093\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ go get github.com/fgrosse/goldi/goldigen\n\n# DI\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u7f6e\u304d\u5834\n$ mkdir -p src/app/config\n\n# DI\u306e\u8a2d\u5b9a\u30d1\u30fc\u30b9\u5f8c\u30d5\u30a1\u30a4\u30eb\u7f6e\u304d\u5834\n$ mkdir src/app/lib\n\n$ cd src/app\n\n# echo \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ glide get github.com/labstack/echo#~3.0 \n\n# goldi \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ glide get github.com/fgrosse/goldi#~1.0\n\n\nIntelliJ IDEA(PHPStorm)\u5074\u8a2d\u5b9a\nIntelliJ IDEA\u3067Go\u8a00\u8a9e\u3092\u66f8\u304f(golang plugin alpha)\u306b\u5f93\u3063\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308c\u3070\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\u305f\u3060\u3001\u4e0b\u8a182\u70b9\u306f\u6ce8\u610f\u3002\n\n1. vendor\u7cfb\u306e\u88dc\u5b8c\u304c\u304d\u304b\u306a\u3044\u3088\u554f\u984c\nPreferences > Directories \u3067\u3001Excluded Folder\u306b${projectRoot}/src/app/vendor\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u88dc\u5b8c\u304c\u304d\u304b\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u3002\nExcluded Folder\u304b\u3089\u5916\u3057\u3066\u3001Preferences > Languages & Frameworks > Go Libraries \u3067\u3001Project libraries \u306b ${projectRoot}/src/app/vendor\u3092\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002\n\n2. IntelliJ IDEA\u306fdirenv\u3092\u7121\u8996\u3059\u308b\uff1f \u554f\u984c\nGOPATH\u304c${projectRoot}\u306b\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067\u3001\u8a2d\u5b9a\u3002\nPreferences > Languages & Frameworks > Go Libraries \u3067\u3001Global libraries \u306b${projectRoot}\u3092\u8ffd\u52a0\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\u3084\u3063\u3068Go\u3092\u66f8\u304d\u59cb\u3081\u3089\u308c\u308b\u74b0\u5883\u304c\u6574\u3044\u307e\u3057\u305f\uff01\nDI\u307e\u308f\u308a\u306e\u8a2d\u5b9a\u304c\u4e0d\u5b89\u306a\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u5b9f\u9a13\u3057\u307e\u3059\u3002\n\n\u6ce8\u5165\u3059\u308b\u30b5\u30fc\u30d3\u30b9\n\nsrc/app/service/injected.go\npackage service\n\ntype Injected struct{}\n\nfunc (Injected) Call(arg string) string {\n    return \"injected!\"\n}\n\n\n\n\u6ce8\u5165\u3055\u308c\u308b\u30b5\u30fc\u30d3\u30b9\n\nsrc/app/service/service.go\npackage service\n\ntype Service interface {\n    Call(arg string) string\n}\n\ntype ServiceImpl struct {\n    Injected *Injected // \u3053\u3053\u306b\u6ce8\u5165\u3055\u308c\u308b\u4e88\u5b9a\n}\n\nfunc (s *ServiceImpl) Call(arg string) string {\n    return \"mainServie \" + arg + \" \" + s.Injected.Call(\"dummy\")\n}\n\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\nsrc/app/config/types.yml\ntypes:\n    injected:                 # \u30b5\u30fc\u30d3\u30b9\u540d\n        package: app/service  # \u30bd\u30fc\u30b9\u306epackage\u7bc0\n        type: Injected        # \u69cb\u9020\u4f53(Class\u7684\u306a\u3084\u3064\u306eGo\u7248)\u306e\u540d\u524d\n    service:\n        package: app/service\n        type: ServiceImpl\n        arguments:            # Symfony2\u3068\u540c\u3058\u8a18\u6cd5(\uff01)\u3067\u5f15\u6570\u3092\u5b9a\u7fa9\n            - \"@injected\"     # \u5f15\u6570\u306b\u6e21\u3059\u30b5\u30fc\u30d3\u30b9\u540d\u3002%parameter_name%\u3067\u5024\u3082\u6e21\u305b\u308b\u3089\u3057\u3044\n\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092Go\u30bd\u30fc\u30b9\u306b\u5909\u63db\n$ cd ${projectRoot}/src/app\n$ ../../bin/goldigen --in config/types.yml --out lib/dependency_injection.go\n\n\u3067\u3001${projectRoot}/src/app/lib/dependency_injection.go\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3059\u308b\u305f\u3073\u306b\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nbootstrap\u30d5\u30a1\u30a4\u30eb\n\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308b\u90e8\u5206\u3092\u5916\u51fa\u3057\u3057\u307e\u3059\u3002\n\nsrc/app/lib/bootstrap.go\n// Bootstrap file.\n// Ready container.\n\npackage lib\n\nimport (\n    \"github.com/fgrosse/goldi\"\n    \"github.com/fgrosse/goldi/validation\"\n    \"os\"\n    \"strings\"\n    \"regexp\"\n)\n\nfunc Bootstrap(envPrefix string) *goldi.Container {\n    registry := goldi.NewTypeRegistry()\n    RegisterTypes(registry)\n\n    config := generateConfig(envPrefix)\n\n    container := goldi.NewContainer(registry, config)\n    validator := validation.NewContainerValidator()\n    validator.MustValidate(container)\n\n    return container\n}\n\nfunc generateConfig(envPrefix string) map[string]interface{} {\n    reg, _ := regexp.Compile(\"^\" + envPrefix + \"(.+)$\")\n    config := map[string]interface{}{}\n\n    for _, e := range os.Environ() {\n        pair := strings.Split(e, \"=\")\n\n        if len(pair) == 2 && reg.MatchString(pair[0]) {\n            // Removing prefix from the key.\n            key := reg.ReplaceAllString(pair[0], \"$1\")\n            config[key] = pair[1]\n        }\n    }\n\n    return config\n}\n\n\n\n\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\n\nsrc/app/server.go\npackage main\n\nimport (\n    \"net/http\"\n\n    \"github.com/labstack/echo\"\n    \"app/lib\"\n    \"app/service\"\n)\n\n// \u98df\u3079\u3055\u305b\u308b\u74b0\u5883\u5909\u6570\u306e\u63a5\u982d\u8a9e\nvar envPrefix string = \"TEST_\"\nfunc main() {\n    container := lib.Bootstrap(envPrefix)\n\n    e := echo.New()\n    e.GET(\"/\", func(c echo.Context) error {\n        // \u30b5\u30fc\u30d3\u30b9\u3092\u3068\u3063\u3066\u304d\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u53e9\u3044\u3066\u307f\u308b\n        service := container.MustGet(\"service\").(service.Service)\n        str := container.Config[\"PARAM\"].(string) + \"!\"\n        return c.String(http.StatusOK, service.Call(str))\n    })\n    e.Logger.Fatal(e.Start(\":1323\"))\n}\n\n\n\u305d\u306e\u5f8c\u3001\u4e0b\u8a18\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u3002\n$ cd ${projectRoot}/src/app\n$ go run server.go\n\n\u3067\u3001 http://localhost::1323 \u306b\u30a2\u30af\u30bb\u30b9\u3002\n\n\u3068\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\u7e70\u308a\u8fd4\u3057\u3067\u3059\u304c\u3001\u30bd\u30fc\u30b9\u306fGithub\u306b\u3042\u3052\u3066\u307e\u3059\u3002\n\nToDo\n\n\n\u3000\u74b0\u5883\u5909\u6570\u3092\u307e\u3068\u3081\u3066DI\u30b3\u30f3\u30c6\u30ca\u306b\u3064\u3081\u308b\u306e\u3092\u4f5c\u308b\u3002 Done!\n\u3055\u3063\u3055\u3068API\u3092\u3064\u304f\u308b\u3002\n\u793e\u5185\u3067\u5e03\u6559\u3059\u308b\u3002\n\n## \u306f\u3058\u3081\u306b\n\n\u3072\u3087\u3093\u306a\u3053\u3068\u304b\u3089\u3001\u8077\u5834\u3067Go\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u306f\u3058\u3081\u308b\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\nAPI\u30b5\u30fc\u30d0\u30fc\u3060\u3051\u306a\u306e\u3067\u3001\u306a\u3093\u3068\u304b\u306a\u308b\u3068\u4fe1\u3058\u3066\u3044\u307e\u3059\u3002\n\n\u5c0f\u751f\u3001\u751f\u7c8b\u306ePHPer(Symfony2\u30e1\u30a4\u30f3)\u3067\u3059\u3002\nPHP\u306e\u77e5\u898b\u3092\u30d5\u30eb\u6d3b\u7528\u3059\u308b\u3079\u304f\u3001PHP\u30e9\u30a4\u30af\u306a\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u306f[Github](https://github.com/tarokamikaze/PHPerGo)\u306b\u3042\u3052\u3066\u307e\u3059\u3002\n\n## Go\u306e\u6587\u6cd5\u306a\u3069\n\n[Go\u8a00\u8a9e\u306e\u521d\u5fc3\u8005\u304c\u898b\u308b\u3068\u5e78\u305b\u306b\u306a\u308c\u308b\u5834\u6240\u3000#golang](http://qiita.com/tenntenn/items/0e33a4959250d1a55045)\u304c\u826f\u8a18\u4e8b\u3067\u3059\u3002\u719f\u8aad\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n[\u306f\u3058\u3081\u3066\u306eGo](http://gihyo.jp/dev/feature/01/go_4beginners)\u306f\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\n## \u5404\u7a2e\u9078\u5b9a\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u77e5\u8b58\u304c\u307b\u307c\u30bc\u30ed\u306a\u306e\u3067\u3001\u9078\u5b9a\u306f\u30ab\u30f3\u3068Google\u5148\u751f\u983c\u308a\u3067\u3059\u3002\n\n### Go\u81ea\u4f53\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nMac\u306a\u306e\u3067\u3001Homebrew\u3067\u30ab\u30f3\u30bf\u30f3\u3002Windows? \u77e5\u3089\u306a\u3044\u5b50\u3067\u3059\u306d\u3002\n\n```\n$ brew install go\n```\n\n### IDE\n\nPHPStorm\u306e\u7f6e\u63db\u306b\u6163\u308c\u304d\u3063\u3066\u3044\u308b\u306e\u3067\u3001[Go language plugin](https://github.com/go-lang-plugin-org/go-lang-idea-plugin)\u3092\u4f7f\u3044\u307e\u3059\u3002\n[IntelliJ IDEA\u3067Go\u8a00\u8a9e\u3092\u66f8\u304f(golang plugin alpha)](http://yutaszk23.hatenadiary.jp/entry/2015/04/24/163541)\u306b\u8a73\u7d30\u306a\u3084\u308a\u304b\u305f\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u306e\u901a\u308a\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n### \u30e9\u30a4\u30d6\u30e9\u30ea\u7ba1\u7406\n\nComposer\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u7ba1\u7406\u306e\u4ed5\u7d44\u307f\u306f\u3001Go\u6a19\u6e96\u306e\u3082\u306e\u3084\u30d9\u30f3\u30c0\u30fc\u30c4\u30fc\u30eb\u7b49\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u3002\n\u79c1\u306fYaml\u30b9\u30ad\u30fc\u306a\u306e\u3067\u3001[glide](https://github.com/Masterminds/glide)\u306b\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u3082Homebrew\u3067\u30e9\u30af\u30e9\u30af\u3002Win(ry\n\n```\n$ brew install glide\n```\n\n### Web\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n\n[echo](https://echo.labstack.com/)\u306b\u3057\u307e\u3057\u305f\u3002Google Trends \u306b\u3088\u308b\u3068\u3001\u6700\u8fd1\u4eba\u6c17\u304c\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3002\u305d\u308c\u4ee5\u4e0a\u306e\u7406\u7531\u306f\u3042\u308a\u307e\u305b\u3093\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u3002 ![trends.png](https://qiita-image-store.s3.amazonaws.com/0/103900/c566b775-738f-f16b-d5fa-a7abeeec9bf5.png)\n\n\u3056\u3063\u3068\u898b\u3001Laravel\u3068\u3044\u3046\u304b\u3001Rumen\u30c1\u30c3\u30af\u3067\u3059\u306d\u3002\n\u30de\u30a4\u30af\u30ed\u3067\u306f\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u5de5\u592b\u3059\u308c\u3070\u3044\u308d\u3044\u308d\u6a5f\u80fd\u3092\u76db\u308c\u305d\u3046\u3067\u3059\u3002\n\n\u305d\u3057\u3066\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u82f1\u8a9e\u3060\u3051\u3067\u3059\u3002\n\n> Symfony\u3092\u4f7f\u3046\u304f\u3089\u3044\u30ea\u30c6\u30e9\u30b7\u30fc\u306e\u3042\u308b\u4eba\u306f\u3001\u82f1\u8a9e\u304f\u3089\u3044\u8aad\u3081\u308b\u3063\u3057\u3087www\n> by Symfony\u30e6\u30fc\u30b6\u30fc\u4f1a\u306e\u3059\u3054\u3044\u3072\u3068\n\n\u30a2\u30c3\u30cf\u30a4\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u7b49\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n### \u74b0\u5883\u30d5\u30a1\u30a4\u30eb\n\necho\u306b\u306f\u74b0\u5883\u5225\u8a2d\u5b9a\u7ba1\u7406\u306e\u6a5f\u80fd\u304c\u306a\u3044...\u3060\u3068...\nDB\u306eID/Pass\u3068\u304b\u3069\u3046\u3059\u3093\u306d\u3093\uff01 \u3068\u3044\u3046\u308f\u3051\u3067\u3001\u7528\u610f\u3057\u307e\u3059\u3002\n\nyaml\u3092\u98df\u3079\u308b\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u306e\u3082\u624b\u3067\u3059\u304c\u3001Heroku\u3067\u52d5\u304b\u3059\u4e88\u5b9a\u306a\u306e\u3067\n\u74b0\u5883\u5909\u6570\u3067\u6307\u5b9a\u3067\u304d\u308b\u307b\u3046\u304c\u4fbf\u5229\u305d\u3046\u3067\u3059\u3002\n\n\u958b\u767a\u74b0\u5883\u3067\u306f[direnv](https://github.com/direnv/direnv)\u3092\u4f7f\u3044\u307e\u3059\u3002\n${projectRoot}/.envrc \u306b\u66f8\u3051\u3070\u3001\u3088\u3057\u306a\u306b\u74b0\u5883\u5909\u6570\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nGo\u306e\u30a2\u30d7\u30ea\u306f\u74b0\u5883\u5909\u6570\u3092\u98df\u3079\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3082Homebrew\u3067(ry\n\n```\n$ brew install direnv\n```\n\n### DI\u30b3\u30f3\u30c6\u30ca\n\necho\u306b\u306fDI\u30b3\u30f3\u30c6\u30ca\u304c\u306a\u3044...\u3060\u3068...\n\n\u30c0\u30e1\u3067\u3059\u3002\u305d\u3093\u306a\u4eba\u751f\u306f\u8010\u3048\u3089\u308c\u307e\u305b\u3093\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067Google\u5148\u751f\u306b\u304d\u3044\u305f\u3068\u3053\u308d\u3001[goldi](https://github.com/fgrosse/goldi)\u304c\u30d2\u30c3\u30c8\u3002\n\n> If you are used to frameworks like Symfony you might want to define your types in an easy to maintain yaml file.You can do this using goldigen.\n> Symfony\u3068\u304b\u4f7f\u3063\u3066\u305f\u3093\u306a\u3089\u3001yaml\u3067\u30b5\u30fc\u30d3\u30b9\u3068\u304b\u7ba1\u7406\u3057\u305f\u3044\u3063\u3057\u3087\uff1f goldigen \u3063\u3066\u3044\u3046\u3084\u3064\u4f7f\u3048\u3070\u3067\u304d\u308b\u304b\u3089\u3002(\u4e71\u66b4\u8a33)\n\n**\u306f\u3044\u5148\u751f\uff01\u3000\u305d\u308c\u79c1\u306e\u3053\u3068\u3067\u3059\uff01**\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u4e00\u3082\u4e8c\u3082\u306a\u304f\u63a1\u7528\u3002\n\n### ORM etc...\n\n\u73fe\u5728\u306e\u3068\u3053\u308dDB\u306f\u4f7f\u3046\u4e88\u5b9a\u304c\u306a\u3044\u306e\u3067\u5272\u611b\u3002\n[GORM](http://jinzhu.me/gorm/)\u3068\u304b\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u306d\u3001\u540d\u524d\u304c\u30b7\u30f3\u30d7\u30eb\u3067\u3002\n\n## \u74b0\u5883\u5909\u6570\u307e\u308f\u308a\n\n```\n$ vi ~/.bash_profile\n------\nexport GOPATH=$HOME/_go       #\u4eee\u306eGOPATH\u304c\u5fc5\u8981\u3089\u3057\u3044\nexport PATH=$PATH:$GOPATH/bin #PATH\u3092\u901a\u3059\nexport EDITOR=/usr/bin/vi     #direnv edit\u30b3\u30de\u30f3\u30c9\u304b\u3089\u547c\u3070\u308c\u308b\u30a8\u30c7\u30a3\u30bf\neval \"$(direnv hook bash)\"    #direnv\u3092\u6709\u52b9\u306b\u3059\u308b\u304a\u307e\u3058\u306a\u3044\n------\n\n# \u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080\n$ source ~/.bash_profile \n```\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308b\n\n```\n$ mkdir ${projectRoot}\n$ cd ${projectRoot}\n$ vi .envrc\n------\nexport GOPATH=`pwd`    # GOPATH\u306f\"\u3053\u3053\"\uff01\nexport TEST_PARAM=test # \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u305b\u308b\u304b\u30c6\u30b9\u30c8\u7528\n------\n\n# DI\u306e\u8a2d\u5b9a\u3092\u30d1\u30fc\u30b9\u3057\u3066\u304f\u308c\u308b\u304f\u3093\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ go get github.com/fgrosse/goldi/goldigen\n\n# DI\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u7f6e\u304d\u5834\n$ mkdir -p src/app/config\n\n# DI\u306e\u8a2d\u5b9a\u30d1\u30fc\u30b9\u5f8c\u30d5\u30a1\u30a4\u30eb\u7f6e\u304d\u5834\n$ mkdir src/app/lib\n\n$ cd src/app\n\n# echo \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ glide get github.com/labstack/echo#~3.0 \n\n# goldi \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ glide get github.com/fgrosse/goldi#~1.0\n```\n\n## IntelliJ IDEA(PHPStorm)\u5074\u8a2d\u5b9a\n\n[IntelliJ IDEA\u3067Go\u8a00\u8a9e\u3092\u66f8\u304f(golang plugin alpha)](http://yutaszk23.hatenadiary.jp/entry/2015/04/24/163541)\u306b\u5f93\u3063\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308c\u3070\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u305f\u3060\u3001\u4e0b\u8a182\u70b9\u306f\u6ce8\u610f\u3002\n\n### 1. vendor\u7cfb\u306e\u88dc\u5b8c\u304c\u304d\u304b\u306a\u3044\u3088\u554f\u984c\n\nPreferences > Directories \u3067\u3001Excluded Folder\u306b``${projectRoot}/src/app/vendor``\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u88dc\u5b8c\u304c\u304d\u304b\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u3002\nExcluded Folder\u304b\u3089\u5916\u3057\u3066\u3001Preferences > Languages & Frameworks > Go Libraries \u3067\u3001Project libraries \u306b ``${projectRoot}/src/app/vendor``\u3092\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002\n\n### 2. IntelliJ IDEA\u306fdirenv\u3092\u7121\u8996\u3059\u308b\uff1f \u554f\u984c\n\nGOPATH\u304c${projectRoot}\u306b\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067\u3001\u8a2d\u5b9a\u3002\nPreferences > Languages & Frameworks > Go Libraries \u3067\u3001Global libraries \u306b``${projectRoot}``\u3092\u8ffd\u52a0\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n\u3084\u3063\u3068Go\u3092\u66f8\u304d\u59cb\u3081\u3089\u308c\u308b\u74b0\u5883\u304c\u6574\u3044\u307e\u3057\u305f\uff01\nDI\u307e\u308f\u308a\u306e\u8a2d\u5b9a\u304c\u4e0d\u5b89\u306a\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u5b9f\u9a13\u3057\u307e\u3059\u3002\n\n### \u6ce8\u5165\u3059\u308b\u30b5\u30fc\u30d3\u30b9\n```go:src/app/service/injected.go\npackage service\n\ntype Injected struct{}\n\nfunc (Injected) Call(arg string) string {\n\treturn \"injected!\"\n}\n```\n\n### \u6ce8\u5165\u3055\u308c\u308b\u30b5\u30fc\u30d3\u30b9\n```go:src/app/service/service.go\npackage service\n\ntype Service interface {\n\tCall(arg string) string\n}\n\ntype ServiceImpl struct {\n\tInjected *Injected // \u3053\u3053\u306b\u6ce8\u5165\u3055\u308c\u308b\u4e88\u5b9a\n}\n\nfunc (s *ServiceImpl) Call(arg string) string {\n\treturn \"mainServie \" + arg + \" \" + s.Injected.Call(\"dummy\")\n}\n```\n\n### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\n```yaml:src/app/config/types.yml \ntypes:\n    injected:                 # \u30b5\u30fc\u30d3\u30b9\u540d\n        package: app/service  # \u30bd\u30fc\u30b9\u306epackage\u7bc0\n        type: Injected        # \u69cb\u9020\u4f53(Class\u7684\u306a\u3084\u3064\u306eGo\u7248)\u306e\u540d\u524d\n    service:\n        package: app/service\n        type: ServiceImpl\n        arguments:            # Symfony2\u3068\u540c\u3058\u8a18\u6cd5(\uff01)\u3067\u5f15\u6570\u3092\u5b9a\u7fa9\n            - \"@injected\"     # \u5f15\u6570\u306b\u6e21\u3059\u30b5\u30fc\u30d3\u30b9\u540d\u3002%parameter_name%\u3067\u5024\u3082\u6e21\u305b\u308b\u3089\u3057\u3044\n```\n\n### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092Go\u30bd\u30fc\u30b9\u306b\u5909\u63db\n\n```\n$ cd ${projectRoot}/src/app\n$ ../../bin/goldigen --in config/types.yml --out lib/dependency_injection.go\n```\n\n\u3067\u3001``${projectRoot}/src/app/lib/dependency_injection.go``\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3059\u308b\u305f\u3073\u306b\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### bootstrap\u30d5\u30a1\u30a4\u30eb\n\n\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308b\u90e8\u5206\u3092\u5916\u51fa\u3057\u3057\u307e\u3059\u3002\n\n```go:src/app/lib/bootstrap.go\n// Bootstrap file.\n// Ready container.\n\npackage lib\n\nimport (\n\t\"github.com/fgrosse/goldi\"\n\t\"github.com/fgrosse/goldi/validation\"\n\t\"os\"\n\t\"strings\"\n\t\"regexp\"\n)\n\nfunc Bootstrap(envPrefix string) *goldi.Container {\n\tregistry := goldi.NewTypeRegistry()\n\tRegisterTypes(registry)\n\n\tconfig := generateConfig(envPrefix)\n\n\tcontainer := goldi.NewContainer(registry, config)\n\tvalidator := validation.NewContainerValidator()\n\tvalidator.MustValidate(container)\n\n\treturn container\n}\n\nfunc generateConfig(envPrefix string) map[string]interface{} {\n\treg, _ := regexp.Compile(\"^\" + envPrefix + \"(.+)$\")\n\tconfig := map[string]interface{}{}\n\n\tfor _, e := range os.Environ() {\n\t\tpair := strings.Split(e, \"=\")\n\n\t\tif len(pair) == 2 && reg.MatchString(pair[0]) {\n\t\t\t// Removing prefix from the key.\n\t\t\tkey := reg.ReplaceAllString(pair[0], \"$1\")\n\t\t\tconfig[key] = pair[1]\n\t\t}\n\t}\n\n\treturn config\n}\n```\n\n### \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\n\n```go:src/app/server.go\npackage main\n\nimport (\n\t\"net/http\"\n\n\t\"github.com/labstack/echo\"\n\t\"app/lib\"\n\t\"app/service\"\n)\n\n// \u98df\u3079\u3055\u305b\u308b\u74b0\u5883\u5909\u6570\u306e\u63a5\u982d\u8a9e\nvar envPrefix string = \"TEST_\"\nfunc main() {\n\tcontainer := lib.Bootstrap(envPrefix)\n\n\te := echo.New()\n\te.GET(\"/\", func(c echo.Context) error {\n\t\t// \u30b5\u30fc\u30d3\u30b9\u3092\u3068\u3063\u3066\u304d\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u53e9\u3044\u3066\u307f\u308b\n\t\tservice := container.MustGet(\"service\").(service.Service)\n\t\tstr := container.Config[\"PARAM\"].(string) + \"!\"\n\t\treturn c.String(http.StatusOK, service.Call(str))\n\t})\n\te.Logger.Fatal(e.Start(\":1323\"))\n}\n```\n\n\u305d\u306e\u5f8c\u3001\u4e0b\u8a18\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u3002\n\n```\n$ cd ${projectRoot}/src/app\n$ go run server.go\n```\n\n\u3067\u3001 http://localhost::1323 \u306b\u30a2\u30af\u30bb\u30b9\u3002\n\n![test.png](https://qiita-image-store.s3.amazonaws.com/0/103900/21063c1a-15ef-8013-b263-c4e38c1d1b55.png)\n\n\u3068\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\u7e70\u308a\u8fd4\u3057\u3067\u3059\u304c\u3001\u30bd\u30fc\u30b9\u306f[Github](https://github.com/tarokamikaze/PHPerGo)\u306b\u3042\u3052\u3066\u307e\u3059\u3002\n\n## ToDo\n\n* ~~\u3000\u74b0\u5883\u5909\u6570\u3092\u307e\u3068\u3081\u3066DI\u30b3\u30f3\u30c6\u30ca\u306b\u3064\u3081\u308b\u306e\u3092\u4f5c\u308b\u3002~~ Done!\n* \u3055\u3063\u3055\u3068API\u3092\u3064\u304f\u308b\u3002\n* \u793e\u5185\u3067\u5e03\u6559\u3059\u308b\u3002\n"}