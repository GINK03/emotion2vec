{"context": " More than 1 year has passed since last update.http://qiita.com/Nabetani/items/709d61dff282cff7a890\nhttp://nabetani.sakura.ne.jp/hena/ord8biboma/\n\u300c\u30d3\u30c3\u30c8\u30dc\u30f3\u30d0\u30fc\u30de\u30f3\u300d\u3092Erlang\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u30d3\u30c3\u30c8\u6f14\u7b97\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u6570\u5024\u30c7\u30fc\u30bf\u30fc\u305d\u306e\u307e\u307e\u3001\u7206\u5f3e\u3092\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8\u3055\u305b\u306a\u304c\u3089\u58c1\u306e0\u30681\u3092\u53cd\u8ee2\u3057\u305f\u3082\u306e\u3068AND\u6f14\u7b97\u3092\u3059\u308b\u3053\u3068\u3067\u3001\u7206\u98a8\u304c\u58c1\u3067\u6b62\u307e\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8\u306e\u65b9\u5411\u306f-6\u304c\u4e0a\u3001-1\u304c\u5de6\u3001+1\u304c\u53f3\u3001+6\u304c\u4e0b\u3067\u3059\u3002\u4e0a\u4e0b\u5de6\u53f3\u306b\u306f\u307f\u51fa\u3055\u306a\u3044\u3088\u3046\u306b\u3001\u30b7\u30d5\u30c8\u524d\u306b\u30de\u30b9\u30af\u3068AND\u3092\u3068\u3063\u3066\u3044\u307e\u3059\u3002\n\nbitbomb.erl\n-module(bitbomb).\n-compile(export_all).\n\n%% \u554f\u984c\u3092\u89e3\u304f\nsolve(Data) ->\n  {Wall, Bomb} = list_to_tuple([list_to_integer(X, 16)\n    || X <- string:tokens(Data, \"/\")]),\n  DirInfo = [ % \u30b7\u30d5\u30c8\u65b9\u5411\u3068\u30b7\u30d5\u30c8\u6642\u30de\u30b9\u30af\u306e\u30c7\u30fc\u30bf\u30fc\n    {-6, 2#00000011111111111111111111111100},  % \u4e0a\n    {-1, 2#01111101111101111101111101111100},  % \u5de6\n    {+1, 2#11111011111011111011111011111000},  % \u53f3\n    {+6, 2#11111111111111111111111100000000}], % \u4e0b\n  AllFlare = lists:foldl(fun(XDir, Acc) ->\n      Acc bor flare(Wall, Bomb, XDir) end, 0, DirInfo),\n  lists:flatten(io_lib:format(\"~8.16.0b\", [AllFlare])).\n\n%% \u58c1\u3001\u7206\u5f3e\u3001\u7206\u98a8\u65b9\u5411\u304b\u3089\u7206\u98a8\u306e\u8ecc\u8de1\u3092\u8fd4\u3059\nflare(Wall, Bomb, {Dir, DirMask}) ->\n  WallMask = 16#FFFFFFFC - Wall,\n  {_Flare, FlareTrail} = times(6, fun({Flare, FlareTrail}) ->\n    WalledFlair = WallMask band Flare,\n    NextFlair = (WalledFlair band DirMask) bsr Dir,\n    {NextFlair, WalledFlair bor FlareTrail}\n  end, {Bomb, 0}),\n  FlareTrail.\n\n%% \u95a2\u6570\u3092\u6307\u5b9a\u56de\u6570\u7e70\u308a\u8fd4\u3059\ntimes(0, _Fun, Acc) -> Acc;\ntimes(N, Fun, Acc) -> times(N - 1, Fun, Fun(Acc)).\n\n%% \u30de\u30c3\u30d7\u3092\u8868\u793a\u3059\u308b (\u30c7\u30d0\u30c3\u30b0\u7528)\nshow_map(X) ->\n  Show = fun\n    (_F, []) -> ok;\n    (F, S) ->\n      io:fwrite(\"~s~n\", [string:left(S, 6)]),\n      F(F, lists:nthtail(6, S))\n  end,\n  Show(Show, string:right(string:chars($0, 30)\n    ++ integer_to_list(X div 4, 2), 30)).\n\ntest(Data, Expected) ->\n  Result = solve(Data),\n  OkNg = case Result =:= Expected of true -> ok; false -> ng end,\n  io:fwrite(\"~s: ~s -> ~s~n\", [OkNg, Data, Result]).\n\ntests() ->\n  test(\"802b1200/01400c20\", \"53c40cfc\"), %0\n  test(\"28301068/84080504\", \"d64fef94\"), %1\n  test(\"100a4010/80010004\", \"e241850c\"), %2\n  test(\"81020400/000000fc\", \"0e3cfbfc\"), %3\n  test(\"80225020/7e082080\", \"7fdd24d0\"), %4\n  test(\"01201200/40102008\", \"fe1861fc\"), %5\n  test(\"00201000/01000200\", \"43c48f08\"), %6\n  test(\"00891220/81020408\", \"ff060c1c\"), %7\n  test(\"410033c0/0c300000\", \"3cf0c000\"), %8\n  test(\"00000000/01400a00\", \"7bf7bf78\"), %9\n  test(\"00000000/20000a00\", \"fca2bf28\"), %10\n  test(\"00000000/00000000\", \"00000000\"), %11\n  test(\"00cafe00/00000000\", \"00000000\"), %12\n  test(\"aaabaaaa/50000000\", \"51441040\"), %13\n  test(\"a95a95a8/56a56a54\", \"56a56a54\"), %14\n  test(\"104fc820/80201010\", \"ea30345c\"), %15\n  test(\"4a940214/05000008\", \"05000008\"), %16\n  test(\"00908000/05000200\", \"ff043f48\"), %17\n  test(\"00c48c00/fe1861fc\", \"ff3873fc\"), %18\n  test(\"00000004/81020400\", \"fffffff0\"), %19\n  test(\"111028b0/40021100\", \"e08fd744\"), %20\n  test(\"6808490c/01959000\", \"17f7b650\"), %21\n  test(\"30821004/81014040\", \"c75de5f8\"), %22\n  test(\"0004c810/10003100\", \"fe4937c4\"), %23\n  test(\"12022020/88200000\", \"edf08208\"), %24\n  test(\"2aa92098/01160000\", \"45165964\"), %25\n  test(\"00242940/10010004\", \"fc43c43c\"), %26\n  test(\"483c2120/11004c00\", \"33c3de10\"), %27\n  test(\"10140140/44004a04\", \"eda3fe3c\"), %28\n  test(\"0c901d38/72602200\", \"f36da280\"). %29\n\n\n\u7d50\u679c\u306e\u4e00\u90e8:\nok: 802b1200/01400c20 -> 53c40cfc\nok: 28301068/84080504 -> d64fef94\nok: 100a4010/80010004 -> e241850c\nok: 81020400/000000fc -> 0e3cfbfc\n...\n\nErlang\u306e\u52c9\u5f37\u3092\u517c\u306d\u3066\u306e\u3093\u3073\u308a\u3068\u3084\u3063\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u65b0\u305f\u306b\u77e5\u3063\u305f\u3053\u3068\u304c\u3044\u304f\u3064\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u65b0\u305f\u306b\u77e5\u3063\u305f\u3053\u3068\n\n1. \u30d3\u30c3\u30c8\u6f14\u7b97\u5b50\u306f\u982d\u306b\u300cb\u300d\nband (bit AND), bor (bit OR), bsr (bit shift right)\u306a\u3069\u3001Erlang\u306e\u30d3\u30c3\u30c8\u6f14\u7b97\u5b50\u306b\u306f\u982d\u306b\u300cb\u300d\u304c\u4ed8\u304d\u307e\u3059\u3002\n\n2. sprintf\u306b\u76f8\u5f53\u3059\u308b\u306e\u306fio_lib:format\nio:format\u95a2\u6570\u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u753b\u9762\u51fa\u529b\u3057\u307e\u3059\u304c\u3001io_lib:format\u95a2\u6570\u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u305f\u6587\u5b57\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002C\u8a00\u8a9e\u3067\u3044\u3046\u3068printf\u304cio:format, sprintf\u304cio_lib:format\u3067\u3059\u3002\u305f\u3060\u3057io_lib:format\u306e\u7d50\u679c\u306f\u30ea\u30b9\u30c8\u306e\u30ea\u30b9\u30c8\u3067\u8fd4\u3063\u3066\u304d\u305f\u308a\u3059\u308b\u306e\u3067\u3001lists:flatten\u3092\u304b\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n3. \u7121\u540d\u95a2\u6570\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\nErlang\u3067\u306f\u95a2\u6570\u5b9a\u7fa9\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u4f7f\u3048\u307e\u3059\u3002\u305f\u3068\u3048\u3070\nf(1) -> 1;\nf(2) -> 2;\nf(3) -> \"\u3055\u3041\u3093\uff01\".\n\n\u3068\u66f8\u304f\u3053\u3068\u3067\u30013\u306e\u6642\u3060\u3051\u30a2\u30db\u306b\u306a\u308b\u3088\u3046\u306a\u95a2\u6570f\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3067\u3001\u7121\u540d\u95a2\u6570\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nAHO = fun\n  (1) -> 1;\n  (2) -> 2;\n  (3) -> \"\u3055\u3041\u3093\uff01\"\nend.\n\n\u3053\u308c\u30673\u306e\u6642\u3060\u3051\u30a2\u30db\u306b\u306a\u308b\u3088\u3046\u306a\u95a2\u6570(\u7121\u540d\u95a2\u6570)\u304c\u5909\u6570AHO\u306b\u683c\u7d0d(\u30d0\u30a4\u30f3\u30c9)\u3055\u308c\u307e\u3057\u305f\u3002\n\u7121\u540d\u95a2\u6570\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306fshow_map\u95a2\u6570\u95a2\u6570\u3067\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n4. \u7121\u540d\u95a2\u6570\u3067\u518d\u5e30\n\u547c\u3073\u51fa\u3059\u969b\u306b\u5f15\u6570\u306b\u95a2\u6570\u81ea\u4f53\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u7121\u540d\u95a2\u6570\u3067\u518d\u5e30\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u968e\u4e57n!\u306e\u8a08\u7b97\u306f\nfactorial(0) -> 1;\nfactorial(N) -> N * factorial(N - 1).\n\n\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u7121\u540d\u95a2\u6570\u3067\u66f8\u304f\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nFACT = fun\n  (_, 0) -> 1;\n  (F, N) -> N * F(F, N - 1)\nend.\n\n\u547c\u3073\u51fa\u3059\u6642\u306b\u306f\u5f15\u6570\u306bFACT\u3082\u6e21\u3057\u3066\u3084\u308a\u307e\u3059\u3002\nFACT(FACT, 3). % --> 6\n\n\u7121\u540d\u95a2\u6570\u306e\u518d\u5e30\u3082show_map\u95a2\u6570\u95a2\u6570\u3067\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/Nabetani/items/709d61dff282cff7a890\nhttp://nabetani.sakura.ne.jp/hena/ord8biboma/\n\u300c\u30d3\u30c3\u30c8\u30dc\u30f3\u30d0\u30fc\u30de\u30f3\u300d\u3092Erlang\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30d3\u30c3\u30c8\u6f14\u7b97\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u6570\u5024\u30c7\u30fc\u30bf\u30fc\u305d\u306e\u307e\u307e\u3001\u7206\u5f3e\u3092\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8\u3055\u305b\u306a\u304c\u3089\u58c1\u306e0\u30681\u3092\u53cd\u8ee2\u3057\u305f\u3082\u306e\u3068AND\u6f14\u7b97\u3092\u3059\u308b\u3053\u3068\u3067\u3001\u7206\u98a8\u304c\u58c1\u3067\u6b62\u307e\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8\u306e\u65b9\u5411\u306f-6\u304c\u4e0a\u3001-1\u304c\u5de6\u3001+1\u304c\u53f3\u3001+6\u304c\u4e0b\u3067\u3059\u3002\u4e0a\u4e0b\u5de6\u53f3\u306b\u306f\u307f\u51fa\u3055\u306a\u3044\u3088\u3046\u306b\u3001\u30b7\u30d5\u30c8\u524d\u306b\u30de\u30b9\u30af\u3068AND\u3092\u3068\u3063\u3066\u3044\u307e\u3059\u3002\n\n```erlang:bitbomb.erl\n-module(bitbomb).\n-compile(export_all).\n\n%% \u554f\u984c\u3092\u89e3\u304f\nsolve(Data) ->\n  {Wall, Bomb} = list_to_tuple([list_to_integer(X, 16)\n    || X <- string:tokens(Data, \"/\")]),\n  DirInfo = [ % \u30b7\u30d5\u30c8\u65b9\u5411\u3068\u30b7\u30d5\u30c8\u6642\u30de\u30b9\u30af\u306e\u30c7\u30fc\u30bf\u30fc\n    {-6, 2#00000011111111111111111111111100},  % \u4e0a\n    {-1, 2#01111101111101111101111101111100},  % \u5de6\n    {+1, 2#11111011111011111011111011111000},  % \u53f3\n    {+6, 2#11111111111111111111111100000000}], % \u4e0b\n  AllFlare = lists:foldl(fun(XDir, Acc) ->\n      Acc bor flare(Wall, Bomb, XDir) end, 0, DirInfo),\n  lists:flatten(io_lib:format(\"~8.16.0b\", [AllFlare])).\n\n%% \u58c1\u3001\u7206\u5f3e\u3001\u7206\u98a8\u65b9\u5411\u304b\u3089\u7206\u98a8\u306e\u8ecc\u8de1\u3092\u8fd4\u3059\nflare(Wall, Bomb, {Dir, DirMask}) ->\n  WallMask = 16#FFFFFFFC - Wall,\n  {_Flare, FlareTrail} = times(6, fun({Flare, FlareTrail}) ->\n    WalledFlair = WallMask band Flare,\n    NextFlair = (WalledFlair band DirMask) bsr Dir,\n    {NextFlair, WalledFlair bor FlareTrail}\n  end, {Bomb, 0}),\n  FlareTrail.\n\n%% \u95a2\u6570\u3092\u6307\u5b9a\u56de\u6570\u7e70\u308a\u8fd4\u3059\ntimes(0, _Fun, Acc) -> Acc;\ntimes(N, Fun, Acc) -> times(N - 1, Fun, Fun(Acc)).\n\n%% \u30de\u30c3\u30d7\u3092\u8868\u793a\u3059\u308b (\u30c7\u30d0\u30c3\u30b0\u7528)\nshow_map(X) ->\n  Show = fun\n    (_F, []) -> ok;\n    (F, S) ->\n      io:fwrite(\"~s~n\", [string:left(S, 6)]),\n      F(F, lists:nthtail(6, S))\n  end,\n  Show(Show, string:right(string:chars($0, 30)\n    ++ integer_to_list(X div 4, 2), 30)).\n\ntest(Data, Expected) ->\n  Result = solve(Data),\n  OkNg = case Result =:= Expected of true -> ok; false -> ng end,\n  io:fwrite(\"~s: ~s -> ~s~n\", [OkNg, Data, Result]).\n\ntests() ->\n  test(\"802b1200/01400c20\", \"53c40cfc\"), %0\n  test(\"28301068/84080504\", \"d64fef94\"), %1\n  test(\"100a4010/80010004\", \"e241850c\"), %2\n  test(\"81020400/000000fc\", \"0e3cfbfc\"), %3\n  test(\"80225020/7e082080\", \"7fdd24d0\"), %4\n  test(\"01201200/40102008\", \"fe1861fc\"), %5\n  test(\"00201000/01000200\", \"43c48f08\"), %6\n  test(\"00891220/81020408\", \"ff060c1c\"), %7\n  test(\"410033c0/0c300000\", \"3cf0c000\"), %8\n  test(\"00000000/01400a00\", \"7bf7bf78\"), %9\n  test(\"00000000/20000a00\", \"fca2bf28\"), %10\n  test(\"00000000/00000000\", \"00000000\"), %11\n  test(\"00cafe00/00000000\", \"00000000\"), %12\n  test(\"aaabaaaa/50000000\", \"51441040\"), %13\n  test(\"a95a95a8/56a56a54\", \"56a56a54\"), %14\n  test(\"104fc820/80201010\", \"ea30345c\"), %15\n  test(\"4a940214/05000008\", \"05000008\"), %16\n  test(\"00908000/05000200\", \"ff043f48\"), %17\n  test(\"00c48c00/fe1861fc\", \"ff3873fc\"), %18\n  test(\"00000004/81020400\", \"fffffff0\"), %19\n  test(\"111028b0/40021100\", \"e08fd744\"), %20\n  test(\"6808490c/01959000\", \"17f7b650\"), %21\n  test(\"30821004/81014040\", \"c75de5f8\"), %22\n  test(\"0004c810/10003100\", \"fe4937c4\"), %23\n  test(\"12022020/88200000\", \"edf08208\"), %24\n  test(\"2aa92098/01160000\", \"45165964\"), %25\n  test(\"00242940/10010004\", \"fc43c43c\"), %26\n  test(\"483c2120/11004c00\", \"33c3de10\"), %27\n  test(\"10140140/44004a04\", \"eda3fe3c\"), %28\n  test(\"0c901d38/72602200\", \"f36da280\"). %29\n```\n\n\u7d50\u679c\u306e\u4e00\u90e8:\n\n<pre>\nok: 802b1200/01400c20 -> 53c40cfc\nok: 28301068/84080504 -> d64fef94\nok: 100a4010/80010004 -> e241850c\nok: 81020400/000000fc -> 0e3cfbfc\n...\n</pre>\n\nErlang\u306e\u52c9\u5f37\u3092\u517c\u306d\u3066\u306e\u3093\u3073\u308a\u3068\u3084\u3063\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u65b0\u305f\u306b\u77e5\u3063\u305f\u3053\u3068\u304c\u3044\u304f\u3064\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\n# \u65b0\u305f\u306b\u77e5\u3063\u305f\u3053\u3068\n\n## 1. \u30d3\u30c3\u30c8\u6f14\u7b97\u5b50\u306f\u982d\u306b\u300cb\u300d\n\nband (bit AND), bor (bit OR), bsr (bit shift right)\u306a\u3069\u3001Erlang\u306e\u30d3\u30c3\u30c8\u6f14\u7b97\u5b50\u306b\u306f\u982d\u306b\u300cb\u300d\u304c\u4ed8\u304d\u307e\u3059\u3002\n\n## 2. sprintf\u306b\u76f8\u5f53\u3059\u308b\u306e\u306fio_lib:format\n\nio:format\u95a2\u6570\u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u753b\u9762\u51fa\u529b\u3057\u307e\u3059\u304c\u3001io_lib:format\u95a2\u6570\u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u305f\u6587\u5b57\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002C\u8a00\u8a9e\u3067\u3044\u3046\u3068printf\u304cio:format, sprintf\u304cio_lib:format\u3067\u3059\u3002\u305f\u3060\u3057io_lib:format\u306e\u7d50\u679c\u306f\u30ea\u30b9\u30c8\u306e\u30ea\u30b9\u30c8\u3067\u8fd4\u3063\u3066\u304d\u305f\u308a\u3059\u308b\u306e\u3067\u3001lists:flatten\u3092\u304b\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## 3. \u7121\u540d\u95a2\u6570\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\n\nErlang\u3067\u306f\u95a2\u6570\u5b9a\u7fa9\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u4f7f\u3048\u307e\u3059\u3002\u305f\u3068\u3048\u3070\n\n<pre>\nf(1) -> 1;\nf(2) -> 2;\nf(3) -> \"\u3055\u3041\u3093\uff01\".\n</pre>\n\n\u3068\u66f8\u304f\u3053\u3068\u3067\u30013\u306e\u6642\u3060\u3051\u30a2\u30db\u306b\u306a\u308b\u3088\u3046\u306a\u95a2\u6570f\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\n\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3067\u3001\u7121\u540d\u95a2\u6570\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n<pre>\nAHO = fun\n  (1) -> 1;\n  (2) -> 2;\n  (3) -> \"\u3055\u3041\u3093\uff01\"\nend.\n</pre>\n\n\u3053\u308c\u30673\u306e\u6642\u3060\u3051\u30a2\u30db\u306b\u306a\u308b\u3088\u3046\u306a\u95a2\u6570(\u7121\u540d\u95a2\u6570)\u304c\u5909\u6570AHO\u306b\u683c\u7d0d(\u30d0\u30a4\u30f3\u30c9)\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u7121\u540d\u95a2\u6570\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306fshow_map\u95a2\u6570\u95a2\u6570\u3067\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n## 4. \u7121\u540d\u95a2\u6570\u3067\u518d\u5e30\n\n\u547c\u3073\u51fa\u3059\u969b\u306b\u5f15\u6570\u306b\u95a2\u6570\u81ea\u4f53\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u7121\u540d\u95a2\u6570\u3067\u518d\u5e30\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u968e\u4e57n!\u306e\u8a08\u7b97\u306f\n\n<pre>\nfactorial(0) -> 1;\nfactorial(N) -> N * factorial(N - 1).\n</pre>\n\n\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u7121\u540d\u95a2\u6570\u3067\u66f8\u304f\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n<pre>\nFACT = fun\n  (_, 0) -> 1;\n  (F, N) -> N * F(F, N - 1)\nend.\n</pre>\n\n\u547c\u3073\u51fa\u3059\u6642\u306b\u306f\u5f15\u6570\u306bFACT\u3082\u6e21\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\n<pre>\nFACT(FACT, 3). % --> 6\n</pre>\n\n\u7121\u540d\u95a2\u6570\u306e\u518d\u5e30\u3082show_map\u95a2\u6570\u95a2\u6570\u3067\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n", "tags": ["Erlang", "yhpg", "\u3069\u3046\u66f8\u304f"]}