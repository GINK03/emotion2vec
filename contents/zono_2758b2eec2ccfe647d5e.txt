{"context": " More than 1 year has passed since last update.\u30d3\u30fc\u30b3\u30f3\u306eMajor\u5024\u3092\u5834\u6240\u3001Minor\u5024\u3092\u6e29\u5ea6\u306e\u5024\u3068\u3057\u3066\u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u3057\u3066\u3001\n\u305d\u308c\u3092\u53d7\u4fe1\u3059\u308b\u6e29\u5ea6\u7ba1\u7406\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u307e\u3067\u306e\u30e1\u30e2\u3002\n\u4eca\u56de\u306f\u3001\u6e29\u5ea6\u53d6\u5f97\u306e\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u308b\n\n\u53c2\u8003\nBLE112\u306b\u95a2\u3059\u308b\u5404\u7a2e\u60c5\u5831\u3002\u5b9f\u88c5\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306f\u307b\u307c\u3053\u3053\u306b\u3042\u308b\u3002iOS\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3082\u3042\u308b\u3002 BLE112 Bluetooth Smart Module\nBGScript\u306e\u30bd\u30fc\u30b9\u306f\u8ab0\u304b\u304cGithub\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b Github scott-42/BLE112Examples\n\n\u8abf\u67fb\n\u4eca\u56de\u3082\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u308b\u3002\n\nhardware.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n\n<hardware>\n    <!\u2014- \u5fc5\u9808\u3002BLE112\u306e\u5834\u5408\u306f\u3053\u306e\u8a2d\u5b9a\u306e\u307e\u307e\u5909\u66f4\u3057\u306a\u3044 -\u2014>\n    <sleeposc enable=\"true\" ppm=\"30\" />\n\n    <!\u2014- BLE112\u306e\u5834\u5408\u306f\u5e38\u306bfalse\u3002USB\u306fBGAPI\u30d7\u30ed\u30c8\u30b3\u30eb\u7528\u306b\u4f7f\u7528\uff08?\uff09 -\u2014>\n    <usb enable=\"false\" endpoint=\"api\"/>\n\n    <!\u2014- BLE112\u306e\u5834\u5408\u306f15\u304cMAX\u3002bias\u306f\u5e38\u306b5\u3092\u8a2d\u5b9a\u3059\u308b -\u2014>    \n    <txpower power=\"15\" bias=\"5\" />\n\n    <!\u2014- \u3088\u304f\u308f\u304b\u3089\u3093\u2026 -\u2014>    \n    <usart channel=\"0\" mode=\"spi_master\" alternate=\"2\" polarity=\"positive\" phase=\"1\" endianness=\"msb\" baud=\"57600\" endpoint=\"none\" />\n\n    <!\u2014- BGScript\u3068VM\u3092\u6709\u52b9\u306b\u3059\u308b(\u3069\u3046\u3044\u3046\u30bf\u30a4\u30df\u30f3\u30b0\u3067false\u306b\u3059\u308b\u3093\u3060..?) -\u2014>    \n    <script enable=\"true\" />\n\n    <!\u2014- \u96fb\u6e90\u95a2\u4fc2? DKBLE112\u306e\u5834\u5408\u306f7 -\u2014>    \n    <pmux regulator_pin=\"7\" />\n</hardware>\n\n\n\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\u30d4\u30f3\u756a\u53f7\u3092hardware.xml\u3067\u53d7\u3051\u53d6\u308b\u3068\u601d\u3063\u305f\u3051\u3069\u3053\u3053\u3067\u306f\u306a\u3055\u305d\u3046\u3002\n\ngatt.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<configuration>\n\n    <service uuid=\"1800\">\n      <description>Generic Access Profile</description>\n\n      <characteristic uuid=\"2a00\">\n        <properties read=\"true\" const=\"true\" />\n        <value>Thermometer</value>\n      </characteristic>\n\n      <characteristic uuid=\"2a01\">\n        <properties read=\"true\" const=\"true\" />\n        <value type=\"hex\">4142</value>\n      </characteristic>\n    </service>\n\n    <!\u2014- \u30c7\u30d5\u30a9\u30eb\u30c8\u306ftype=\u201dprimary\u201d\u3002primary\u306e\u5834\u5408\u3001\u5916\u90e8\u306b\u516c\u958b\u3055\u308c\u308b\u3068\u601d\u3046\u3051\u3069 \u201dAt the moment the type feature does not have any meaningful use.\u201d\u3068\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u66f8\u3044\u3066\u308b\u2026 ? -\u2014>    \n    <service type=\"primary\" uuid=\"180A\" id=\"manufacturer\">\n\n         <!\u2014- \u30b7\u30ea\u30a2\u30eb\u30ca\u30f3\u30d0\u30fc -\u2014>  \n        <characteristic uuid=\"2A25\">\n            <properties read=\"true\" const=\"true\" />\n            <value type=\"hex\">000780c0ffeef00d</value>\n        </characteristic>\n        <characteristic uuid=\"2A24\">\n            <properties read=\"true\" const=\"true\" />\n            <value>modelnumber</value>\n        </characteristic>\n        <characteristic uuid=\"2A29\">\n            <properties read=\"true\" const=\"true\" />\n            <value>Bluegiga</value>\n        </characteristic>\n    </service>\n\n    <!\u2014- \u6a19\u6e96\u30b5\u30fc\u30d3\u30b9UUID\u3002Health Thermometer -\u2014>  \n    <service uuid=\"1809\">\n        <uri>org.bluetooth.service.health_thermometer</uri>\n\n       <!\u2014- \u5225\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3002(\u8a2d\u5b9a\u3092\u898b\u305f\u3044\u306e\u3060\u304c\u3069\u3053\u306b\u3042\u308b\u2026?) -\u2014>  \n        <include id=\"manufacturer\" />\n        <description>Health Thermometer Service</description>\n\n       <!\u2014- \u6a19\u6e96\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30afUUID\u3002Temperature Measurement -\u2014>  \n       <characteristic uuid=\"2a1c\" id=\"xgatt_temperature_celsius\">\n            <description>Celsius temperature</description>\n\n           <!\u2014- Characteristic value can be indicated. Indication is confirmed. \u3053\u3053\u3067\u306eindicated\u306e\u610f\u5473\u304c\u4e0d\u660e\u2026 -\u2014>  \n           <properties indicate=\"true\"/>\n           <value type=\"hex\">0000000000</value>\n        </characteristic>\n    </service>\n</configuration>\n\n\n\n\ntempservice.bgs\ndim tmp(5)\ndim ascii(6)\ndim celsius\ndim offset\ndim a\ndim b\ndim c\n\nsystem_boot(major ,minor ,patch ,build ,ll_version ,protocol_version ,hw )\n\n    # \u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u6709\u52b9\u3001\u30da\u30a2\u30ea\u30f3\u30b0\u6709\u52b9\u72b6\u614b\u306b\u3059\u308b\n    gap_set_mode(gap_general_discoverable,gap_undirected_connectable)\n\n    # \u30da\u30a2\u30ea\u30f3\u30b0\u6709\u52b9\n    call sm_set_bondable_mode(1)\n\n    # \u4e00\u79d2\u6bce\u306bhardware_set_soft_timer\u30a4\u30d9\u30f3\u30c8\u3092\u547c\u3073\u51fa\u3059\n    call hardware_set_soft_timer(32768,0,0)\n\n    # \u30dd\u30fc\u30c8\u6709\u52b9\u5316(1,$7\u3063\u3066\u3069\u306e\u30d4\u30f3\u2026? \u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u3053\u3068\u304b\u2026)\n    call hardware_io_port_write(1,$7,$1)\n\n    # 1, $7\u3092\u51fa\u529b\u5148\u3068\u3057\u3066\u8a2d\u5b9a\n    call hardware_io_port_config_direction(1,$7)\n\n    # SPI\u306b11Bytes\u51fa\u529b\u3002SPI\u306b\u51fa\u529b\u3059\u308b\u305f\u3081\u306b\u306f\u3001hardware.xml\u306busart\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3002\n    call hardware_spi_transfer(0,11,\"\\x30\\x30\\x30\\x39\\x14\\x56\\x6d\\x70\\x0c\\x06\\x01\")\n\n    # Change display cursor pos\n    call hardware_spi_transfer(0,1,\"\\x80\")\n\n    # set the display to data mode\n    call hardware_io_port_write(1,$7,$3)\n\n    # Write temperature to display\n    call hardware_spi_transfer(0,16,\"  Temp Service  \")\n\n    #set the display to command mode\n    call hardware_io_port_write(1,$7,$1)\n\n    # Change display cursor pos\n    call hardware_spi_transfer(0,1,\"\\xc0\")\n\n    #set the display to data mode\n    call hardware_io_port_write(1,$7,$3)\n\n    #Write temperature to display\n    call hardware_spi_transfer(0,16,\"Temp:           \")\nend\n\n# \u30bf\u30a4\u30de\u30fc\u30a4\u30d9\u30f3\u30c8\nevent hardware_soft_timer(handle)\n\n   # BLE112\u5185\u90e8\u306e\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u6e29\u5ea6\u3092\u53d6\u5f97\n   #\n   # Call ADC read\n   # 14 = internal temperature sensor\n   # 3 = 12 effective bits\n   # 0 = Internal 1.24V reference\n   call hardware_adc_read(14,3,0)\nend\n\n# ADC\u306e\u7d50\u679c\u3092\u53d6\u5f97\u3057\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\nevent hardware_adc_result(input,value)\n    offset=-1500\n\n    # ADC value is 12 MSB\n    celsius = value / 16\n\n    # Calculate temperature\n    # ADC*V_ref/ADC_max / T_coeff + offset\n    celsius = (10*celsius*1150/2047) * 10/45 + offset\n\n    #set flags\n    tmp(0:1)=0\n\n    #set as float\n    tmp(1:4)=float(celsius, -1)\n\n    #write the temperature information to the GATT database\n    call attributes_write(xgatt_temperature_celsius,0,5,tmp(0:5))\n\n    #Extracting desimals from integer\n    a = (celsius / 100)                     #2X.X\n    b = (celsius / 10) + (a*-10)            #X4.X\n    c = (celsius)      + (a*-100) + (b*-10) #XX.8\n\n    #+48 is for desimal -> ascii\n    ascii(0:1) = a + 48 #\"2\"\n    ascii(1:1) = b + 48 #\"4\"\n    ascii(2:1) = 46     #\".\"\n    ascii(3:1) = c + 48 #\"8\"\n    ascii(4:1) = $df    #\"deg\"\n    ascii(5:1) = 67     #\"C\"\n\n    #set the display to command mode\n    call hardware_io_port_write(1,$7,$1)\n\n    # Change display cursor pos\n    call hardware_spi_transfer(0,1,\"\\xc6\")\n\n    #set the display to data mode\n    call hardware_io_port_write(1,$7,$3)\n\n    #Write temperature to display\n    call hardware_spi_transfer(0,6,ascii(0:6))\n\n    #set the advertising data\n    call gap_set_adv_data(0, 6, ascii(0:6))\nend\n\nevent connection_disconnected(handle,result)\n    # in case if disconnect, return to advertisement mode\n    call gap_set_mode(gap_general_discoverable,gap_undirected_connectable)\nend\n\n\n\n\u308f\u304b\u3063\u305f\u3053\u3068\n\u305f\u3076\u3093\u3001\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u306fBLE112\u306e\u5185\u90e8\u30bb\u30f3\u30b5\u30fc\u3092\u5229\u7528\u3057\u3066\u304a\u308a\u3001\u6570\u5024\u3082\u3060\u3044\u305f\u3044\u3042\u3063\u3066\u3044\u308b\u3002\n\u6b21\u56de\u306f\u53d6\u5f97\u3057\u305f\u6e29\u5ea6\u3092iBeacon\u306eminor\u5024\u306b\u30bb\u30c3\u30c8\u3057\u305f\u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u3057\u3066\u307f\u308b\u3002\n\n\u30d3\u30fc\u30b3\u30f3\u306eMajor\u5024\u3092\u5834\u6240\u3001Minor\u5024\u3092\u6e29\u5ea6\u306e\u5024\u3068\u3057\u3066\u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u3057\u3066\u3001\n\u305d\u308c\u3092\u53d7\u4fe1\u3059\u308b\u6e29\u5ea6\u7ba1\u7406\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u307e\u3067\u306e\u30e1\u30e2\u3002\n\n\u4eca\u56de\u306f\u3001\u6e29\u5ea6\u53d6\u5f97\u306e\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u308b\n\n## \u53c2\u8003\n\nBLE112\u306b\u95a2\u3059\u308b\u5404\u7a2e\u60c5\u5831\u3002\u5b9f\u88c5\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306f\u307b\u307c\u3053\u3053\u306b\u3042\u308b\u3002iOS\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3082\u3042\u308b\u3002 [BLE112 Bluetooth Smart Module](https://www.bluegiga.com/en-US/products/bluetooth-4.0-modules/ble112-bluetooth--smart-module/documentation/)\n\nBGScript\u306e\u30bd\u30fc\u30b9\u306f\u8ab0\u304b\u304cGithub\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b [Github scott-42/BLE112Examples](https://github.com/scott-42/BLE112Examples)\n\n## \u8abf\u67fb\n\n\u4eca\u56de\u3082\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u308b\u3002\n\n```hardware.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n\n<hardware>\n    <!\u2014- \u5fc5\u9808\u3002BLE112\u306e\u5834\u5408\u306f\u3053\u306e\u8a2d\u5b9a\u306e\u307e\u307e\u5909\u66f4\u3057\u306a\u3044 -\u2014>\n    <sleeposc enable=\"true\" ppm=\"30\" />\n    \n\t<!\u2014- BLE112\u306e\u5834\u5408\u306f\u5e38\u306bfalse\u3002USB\u306fBGAPI\u30d7\u30ed\u30c8\u30b3\u30eb\u7528\u306b\u4f7f\u7528\uff08?\uff09 -\u2014>\n    <usb enable=\"false\" endpoint=\"api\"/>\n\n\t<!\u2014- BLE112\u306e\u5834\u5408\u306f15\u304cMAX\u3002bias\u306f\u5e38\u306b5\u3092\u8a2d\u5b9a\u3059\u308b -\u2014>    \n\t<txpower power=\"15\" bias=\"5\" />\n\n\t<!\u2014- \u3088\u304f\u308f\u304b\u3089\u3093\u2026 -\u2014>    \n\t<usart channel=\"0\" mode=\"spi_master\" alternate=\"2\" polarity=\"positive\" phase=\"1\" endianness=\"msb\" baud=\"57600\" endpoint=\"none\" />\n\t\n\t<!\u2014- BGScript\u3068VM\u3092\u6709\u52b9\u306b\u3059\u308b(\u3069\u3046\u3044\u3046\u30bf\u30a4\u30df\u30f3\u30b0\u3067false\u306b\u3059\u308b\u3093\u3060..?) -\u2014>    \n\t<script enable=\"true\" />\n\t\n\t<!\u2014- \u96fb\u6e90\u95a2\u4fc2? DKBLE112\u306e\u5834\u5408\u306f7 -\u2014>    \n\t<pmux regulator_pin=\"7\" />\n</hardware>\n```\n\n\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\u30d4\u30f3\u756a\u53f7\u3092hardware.xml\u3067\u53d7\u3051\u53d6\u308b\u3068\u601d\u3063\u305f\u3051\u3069\u3053\u3053\u3067\u306f\u306a\u3055\u305d\u3046\u3002\n\n```gatt.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<configuration>\n\n    <service uuid=\"1800\">\n      <description>Generic Access Profile</description>\n\n      <characteristic uuid=\"2a00\">\n        <properties read=\"true\" const=\"true\" />\n        <value>Thermometer</value>\n      </characteristic>\n\n      <characteristic uuid=\"2a01\">\n        <properties read=\"true\" const=\"true\" />\n        <value type=\"hex\">4142</value>\n      </characteristic>\n    </service>\n\n\t<!\u2014- \u30c7\u30d5\u30a9\u30eb\u30c8\u306ftype=\u201dprimary\u201d\u3002primary\u306e\u5834\u5408\u3001\u5916\u90e8\u306b\u516c\u958b\u3055\u308c\u308b\u3068\u601d\u3046\u3051\u3069 \u201dAt the moment the type feature does not have any meaningful use.\u201d\u3068\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u66f8\u3044\u3066\u308b\u2026 ? -\u2014>    \n    <service type=\"primary\" uuid=\"180A\" id=\"manufacturer\">\n\n\t\t <!\u2014- \u30b7\u30ea\u30a2\u30eb\u30ca\u30f3\u30d0\u30fc -\u2014>  \n        <characteristic uuid=\"2A25\">\n            <properties read=\"true\" const=\"true\" />\n            <value type=\"hex\">000780c0ffeef00d</value>\n        </characteristic>\n        <characteristic uuid=\"2A24\">\n            <properties read=\"true\" const=\"true\" />\n            <value>modelnumber</value>\n        </characteristic>\n        <characteristic uuid=\"2A29\">\n            <properties read=\"true\" const=\"true\" />\n            <value>Bluegiga</value>\n        </characteristic>\n    </service>\n\n\t<!\u2014- \u6a19\u6e96\u30b5\u30fc\u30d3\u30b9UUID\u3002Health Thermometer -\u2014>  \n    <service uuid=\"1809\">\n\t\t<uri>org.bluetooth.service.health_thermometer</uri>\n\t\t\n       <!\u2014- \u5225\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3002(\u8a2d\u5b9a\u3092\u898b\u305f\u3044\u306e\u3060\u304c\u3069\u3053\u306b\u3042\u308b\u2026?) -\u2014>  \n\t\t<include id=\"manufacturer\" />\n\t\t<description>Health Thermometer Service</description>\n\t\t\n       <!\u2014- \u6a19\u6e96\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30afUUID\u3002Temperature Measurement -\u2014>  \n       <characteristic uuid=\"2a1c\" id=\"xgatt_temperature_celsius\">\n\t\t\t<description>Celsius temperature</description>\n\t\t\t\n           <!\u2014- Characteristic value can be indicated. Indication is confirmed. \u3053\u3053\u3067\u306eindicated\u306e\u610f\u5473\u304c\u4e0d\u660e\u2026 -\u2014>  \n           <properties indicate=\"true\"/>\n           <value type=\"hex\">0000000000</value>\n\t\t</characteristic>\n\t</service>\n</configuration>\n\n```\n\n```tempservice.bgs\ndim tmp(5)\ndim ascii(6)\ndim celsius\ndim offset\ndim a\ndim b\ndim c\n\nsystem_boot(major ,minor ,patch ,build ,ll_version ,protocol_version ,hw )\n\n\t# \u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u6709\u52b9\u3001\u30da\u30a2\u30ea\u30f3\u30b0\u6709\u52b9\u72b6\u614b\u306b\u3059\u308b\n    gap_set_mode(gap_general_discoverable,gap_undirected_connectable)\n\t\n    # \u30da\u30a2\u30ea\u30f3\u30b0\u6709\u52b9\n\tcall sm_set_bondable_mode(1)\n\t\n    # \u4e00\u79d2\u6bce\u306bhardware_set_soft_timer\u30a4\u30d9\u30f3\u30c8\u3092\u547c\u3073\u51fa\u3059\n\tcall hardware_set_soft_timer(32768,0,0)\n\t\n\t# \u30dd\u30fc\u30c8\u6709\u52b9\u5316(1,$7\u3063\u3066\u3069\u306e\u30d4\u30f3\u2026? \u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u3053\u3068\u304b\u2026)\n\tcall hardware_io_port_write(1,$7,$1)\n\t\n\t# 1, $7\u3092\u51fa\u529b\u5148\u3068\u3057\u3066\u8a2d\u5b9a\n    call hardware_io_port_config_direction(1,$7)\n\t\n    # SPI\u306b11Bytes\u51fa\u529b\u3002SPI\u306b\u51fa\u529b\u3059\u308b\u305f\u3081\u306b\u306f\u3001hardware.xml\u306busart\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3002\n\tcall hardware_spi_transfer(0,11,\"\\x30\\x30\\x30\\x39\\x14\\x56\\x6d\\x70\\x0c\\x06\\x01\")\n\n\t# Change display cursor pos\n\tcall hardware_spi_transfer(0,1,\"\\x80\")\n\n\t# set the display to data mode\n\tcall hardware_io_port_write(1,$7,$3)\n\n\t# Write temperature to display\n\tcall hardware_spi_transfer(0,16,\"  Temp Service  \")\n\t\n\t#set the display to command mode\n\tcall hardware_io_port_write(1,$7,$1)\n\n\t# Change display cursor pos\n\tcall hardware_spi_transfer(0,1,\"\\xc0\")\n\n\t#set the display to data mode\n\tcall hardware_io_port_write(1,$7,$3)\n\n\t#Write temperature to display\n\tcall hardware_spi_transfer(0,16,\"Temp:           \")\nend\n\n# \u30bf\u30a4\u30de\u30fc\u30a4\u30d9\u30f3\u30c8\nevent hardware_soft_timer(handle)\n\n   # BLE112\u5185\u90e8\u306e\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u6e29\u5ea6\u3092\u53d6\u5f97\n   #\n   # Call ADC read\n   # 14 = internal temperature sensor\n   # 3 = 12 effective bits\n   # 0 = Internal 1.24V reference\n   call hardware_adc_read(14,3,0)\nend\n\n# ADC\u306e\u7d50\u679c\u3092\u53d6\u5f97\u3057\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\nevent hardware_adc_result(input,value)\n\toffset=-1500\n\n\t# ADC value is 12 MSB\n\tcelsius = value / 16\n\n\t# Calculate temperature\n\t# ADC*V_ref/ADC_max / T_coeff + offset\n\tcelsius = (10*celsius*1150/2047) * 10/45 + offset\n\n\t#set flags\n\ttmp(0:1)=0\n\t\n\t#set as float\n\ttmp(1:4)=float(celsius, -1)\n\t\n\t#write the temperature information to the GATT database\n\tcall attributes_write(xgatt_temperature_celsius,0,5,tmp(0:5))\n\t\n\t#Extracting desimals from integer\n\ta = (celsius / 100)\t\t\t\t\t\t#2X.X\n\tb = (celsius / 10) + (a*-10)\t\t\t#X4.X\n\tc = (celsius)      + (a*-100) + (b*-10)\t#XX.8\n\t\n\t#+48 is for desimal -> ascii\n\tascii(0:1) = a + 48 #\"2\"\n\tascii(1:1) = b + 48 #\"4\"\n\tascii(2:1) = 46\t    #\".\"\n\tascii(3:1) = c + 48 #\"8\"\n\tascii(4:1) = $df    #\"deg\"\n\tascii(5:1) = 67\t    #\"C\"\n\t\n\t#set the display to command mode\n\tcall hardware_io_port_write(1,$7,$1)\n\n\t# Change display cursor pos\n\tcall hardware_spi_transfer(0,1,\"\\xc6\")\n\n\t#set the display to data mode\n\tcall hardware_io_port_write(1,$7,$3)\n\n\t#Write temperature to display\n\tcall hardware_spi_transfer(0,6,ascii(0:6))\n\t\n\t#set the advertising data\n\tcall gap_set_adv_data(0, 6, ascii(0:6))\nend\n\nevent connection_disconnected(handle,result)\n\t# in case if disconnect, return to advertisement mode\n    call gap_set_mode(gap_general_discoverable,gap_undirected_connectable)\nend\n```\n\n## \u308f\u304b\u3063\u305f\u3053\u3068\n\n\u305f\u3076\u3093\u3001\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u306fBLE112\u306e\u5185\u90e8\u30bb\u30f3\u30b5\u30fc\u3092\u5229\u7528\u3057\u3066\u304a\u308a\u3001\u6570\u5024\u3082\u3060\u3044\u305f\u3044\u3042\u3063\u3066\u3044\u308b\u3002\n\n\u6b21\u56de\u306f\u53d6\u5f97\u3057\u305f\u6e29\u5ea6\u3092iBeacon\u306eminor\u5024\u306b\u30bb\u30c3\u30c8\u3057\u305f\u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u3057\u3066\u307f\u308b\u3002\n", "tags": ["bluetooth", "BGScript"]}