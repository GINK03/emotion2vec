{"context": "\n\n\u306f\u3058\u3081\u306b\n\u7d44\u5408\u305b\u6700\u9069\u5316(\u3044\u308f\u3086\u308b\u6df7\u5408\u6574\u6570\u6700\u9069\u5316)\u3067\u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30eb\u30fc\u30eb\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u30d1\u30ba\u30eb\u3092\u4f8b\u984c\u306b\u3001\u3044\u304f\u3064\u304b\u306e\u30c6\u30af\u30cb\u30c3\u30af\u3092\u7c21\u5358\u306b\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u30c6\u30af\u30cb\u30c3\u30af\u306e\u3044\u304f\u3064\u304b\u306f\u3001Python\u306b\u3088\u308b\u90e8\u5206\u3082\u3042\u308a\u307e\u3059\u3002\u6570\u7406\u6700\u9069\u5316\u306e\u30e2\u30c7\u30eb\u5316\u306b\u304a\u3044\u3066Python\u306f\u76f8\u6027\u304c\u3088\u3044\u3068\u3044\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u74b0\u5883\u69cb\u7bc9\n\n\u30b5\u30af\u30c3\u3068\u8a66\u3057\u305f\u3044\u5834\u5408\uff1aBinder\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308a\u3001\u30d6\u30e9\u30a6\u30b6\u3060\u3051\u3067\u8a66\u305b\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u3001\u7121\u6599Jupyter\u30b5\u30fc\u30d3\u30b9\u306eBinder\u306e\u7d39\u4ecb\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\u304d\u3061\u3093\u3068\u8a66\u3057\u305f\u3044\u5834\u5408\uff1aAnaconda\u3092\u5c0e\u5165\u5f8c\u3001\u4e0b\u8a18\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\npip install pulp ortoolpy unionfind more_itertools\n\n\n\u6e96\u5099\n\u30e2\u30c7\u30e9\u30fc\u3068\u3057\u3066\u306f\u3001PuLP\u3092\u7528\u3044\u307e\u3059\u3002(PuLP\u306b\u3064\u3044\u3066)\n\u5f8c\u8ff0\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u306f\u3001\u4e0b\u8a18\u3092\u7701\u7565\u3057\u307e\u3059\u3002\n\npython\n%matplotlib inline\nimport numpy as np, matplotlib.pyplot as plt\nfrom itertools import groupby\nfrom pulp import *\nfrom unionfind import unionfind\nfrom ortoolpy import addvar, addvars, addbinvar, addbinvars\nm = LpProblem()\n\n\n\n\n\n\u30e1\u30bd\u30c3\u30c9\n\u8aac\u660e\n\n\n\n\ngroupby\n\u30ad\u30fc\u304c\u540c\u3058\u3082\u306e\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\n\n\nunionfind\n\n\u7d20\u96c6\u5408\u30c7\u30fc\u30bf\u69cb\u9020\u7528\u306e\u30af\u30e9\u30b9\n\n\naddvar\n\u5909\u6570\u30921\u3064\u4f5c\u6210\n\n\naddvars\n\u5909\u6570\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n\n\naddbinvar\n0-1\u5909\u6570\u30921\u3064\u4f5c\u6210\n\n\naddbinvars\n0-1\u5909\u6570\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n\n\nLpProblem\nPuLP\u306e\u6570\u7406\u6700\u9069\u5316\u30e2\u30c7\u30eb\n\n\n\n\n\u5bfe\u8c61\u30d1\u30ba\u30eb\nTsutomu-KKE/OptForPuzzle\u306b\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n\u30c6\u30af\u30cb\u30c3\u30af\n\n\u5909\u6570\u3092np.array\u3067\u4f5c\u6210\n\u52b9\u7528\uff1a\u6f14\u7b97\u306e\u9ad8\u901f\u5316\u3001\u591a\u5f69\u306a\u30a2\u30af\u30bb\u30b9\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u6570\u72ec\u300d\u306a\u3069\n\u4f8b\uff1a\n\npython\nv = np.array(addbinvars(9, 9, 9)) # (1)\nm += lpSum(v[i,:,k]) == 1 # (2)\nm += lpSum(v[i:i+3,j:j+3,k]) == 1 # (3)\nw = addvars(9, 9) # (4)\nm += lpDot(range(9), v[i,j])+1 == r[i][j] # (4)\n\n\n\n(1)\u3067\u306f\u30019x9x9\u306e\u591a\u6b21\u5143\u914d\u5217\u306e0-1\u5909\u6570\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u6b21\u5143\u306f\u3001\u884c\u3001\u5217\u3001\u6570\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n(2)\u3067\u306f\u3001$i$\u884c\u76ee\u306b\u6570\u5b57$k+1$\u304c1\u3064\u3060\u3051\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002\n(3)\u3067\u306f\u3001\u5de6\u4e0a\u304c$(i,j)$\u3068\u306a\u308b3x3\u306e\u9818\u57df\u3067\u3001\u6570\u5b57$k+1$\u304c1\u3064\u3060\u3051\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u3053\u306e$v$\u3092\u4f7f\u3046\u3068\u3001(4)\u306e\u3088\u3046\u306b\u3001\u30de\u30b9$(i,j)$\u306e\u6570\u5b57\u3092\u5909\u6570$w_{ij}$\u306e\u3088\u3046\u306b\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\n\u7d50\u679c\u3092np.vectorize\u3067\u53d6\u5f97\n\u52b9\u7528\uff1a\u6f14\u7b97\u306e\u9ad8\u901f\u5316\u3001\u591a\u5f69\u306a\u30a2\u30af\u30bb\u30b9\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u6570\u72ec\u300d\u306a\u3069(\u53ef\u8996\u5316\u306f\u300c\u9ed2\u3069\u3053\u300d\u306a\u3069)\n\u4f8b\uff1a\n\npython\nr = np.vectorize(value)(v).astype(int) # (1)\nplt.imshow(1-r, cmap='gray', interpolation='none') # (2)\n\n\n\u5909\u6570\u3092np.array\u3067\u4f5c\u6210\u3057\u6700\u9069\u5316\u3092\u89e3\u3044\u305f\u7d50\u679c\u306f\u3001\u4e0a\u8a18\u306e(1)\u306e\u3088\u3046\u306b\u7d50\u679c$r$\u3092\u53d6\u5f97\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u3001\u9ad8\u901f\u306b\u7c21\u5358\u306b\u7d50\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u3055\u3089\u306bnumpy\u306e\u591a\u5f69\u306a\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3092\u7d9a\u3051\u3089\u308c\u307e\u3059\u3002\n2\u6b21\u5143\u306e\u767d\u9ed2\u306e\u7d50\u679c\u3092\u56f3\u3068\u3057\u3066\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001(2)\u306e\u3088\u3046\u306bmatplotlib\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u53ef\u8996\u5316\u3067\u304d\u307e\u3059\u3002\n\u306a\u304a\u3001\u5909\u6570\u3092pandas\u306eDataFrame\u306eSeries\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u3068\u304d\u306f\u3001apply\u3067\u540c\u69d8\u306b\u3067\u304d\u307e\u3059\u3002\n\n\u3059\u3079\u3066\u540c\u3058\n\u52b9\u7528\uff1a\u52b9\u7387\u7684\u306a\u30e2\u30c7\u30eb\u5316\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u30da\u30a4\u30f3\u30c8\u30a8\u30ea\u30a2\u300d\u306a\u3069\n\u4f8b\uff1a\n\npython\nfor vi, vj in zip(v, v[1:]):\n    m += vi == vj\n\n\n\u5909\u6570\u306e1\u6b21\u5143\u914d\u5217$v$\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u540c\u3058\u5024\u3092\u53d6\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u5834\u5408\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n(\u5909\u6570\u305d\u306e\u3082\u306e\u3092\u7f6e\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059)\n\n\u5468\u308a\u306e\u6570\n\u52b9\u7528\uff1a\u52b9\u7387\u7684\u306a\u30e2\u30c7\u30eb\u5316\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u30af\u30ea\u30fc\u30af\u300d\u300c\u30b7\u30e3\u30ab\u30b7\u30e3\u30ab\u300d\u300c\u6570\u30b3\u30ed\u300d\u300c\u306e\u308a\u306e\u308a\u300d\u300c\u30da\u30a4\u30f3\u30c8\u30a8\u30ea\u30a2\u300d\u300c\u30dc\u30f3\u30d0\u30fc\u30d1\u30ba\u30eb\u300d\n\u30de\u30b9\u306e\u5909\u6570$v[i,j]$\u306e\u4e0a\u4e0b\u5de6\u53f3\u306e\u5909\u6570\u306e\u548c\u3092\u4f7f\u3044\u305f\u3044\u3068\u304d\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b$w$\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308a\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\uff1a\n\npython\nu = np.zeros((nh+2, nw+2), dtype=object)\nv = u[1:-1,1:-1] = np.array(addbinvars(nh, nw))\nw = u[:-2,1:-1]+u[2:,1:-1]+u[1:-1,:-2]+u[1:-1,2:]\n\n\n\u3053\u308c\u306f\u3001v\u306e\u5468\u308a\u306b1\u5468\u591a\u3044\u914d\u5217$u$\u3092\u7528\u610f\u3057\u3001\u3046\u307e\u304f\u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3063\u305f\u4f8b\u3067\u3059\u3002\n\nIF\u5236\u7d04\n\u52b9\u7528\uff1a\u6761\u4ef6\u306b\u3088\u3063\u3066\u6210\u308a\u7acb\u3064\u5834\u5408\u3092\u8868\u73fe\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u30ab\u30ca\u30aa\u30ec\u300d\u306a\u3069\n\u5909\u6570$x,y$\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u300c$x == 1$\u300d\u306a\u3089\u3070\u300c$y \\le a$\u300d\u3068\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u5341\u5206\u306b\u5927\u304d\u306a\u6570$M$\u3092\u4f7f\u7528\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\uff1a\n\npython\nm += y <= a + M(1-x)\n\n\n\u307e\u305f\u3001\u300c$x==1$\u300d\u306a\u3089\u3070\u300c$y=a$\u300d\u3068\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\uff1a\n\npython\nm += y <= a + M(1-x)\nm += y >= a - M(1-x)\n\n\n\n\u9023\u7d50\u5236\u7d04\n\u52b9\u7528\uff1a\u7c21\u5358\u306a\u30e2\u30c7\u30eb\u5316\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u9ed2\u3069\u3053\u300d\u306a\u3069\n\u300c\u9ed2\u3069\u3053\u300d\u306e\u3088\u3046\u306b\u300c\u5168\u3066\u306e\u767d\u30de\u30b9\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3053\u3068\u300d\u3068\u3044\u3046\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5236\u7d04\u3092\u6570\u5f0f\u3067\u8868\u305d\u3046\u3068\u3059\u308b\u3068\u3001\u7d50\u69cb\u5927\u5909\u3060\u3063\u305f\u308a\u3057\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u4e00\u65e6\u7121\u8996\u3057\u3066\u3001\u63a5\u7d9a\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u3001\u305d\u306e\u89e3\u3092\u7981\u6b62\u3057\u3066\u89e3\u304d\u306a\u304a\u3059\u3084\u308a\u65b9\u304c\u3042\u308a\u307e\u3059\u3002\n\u4f8b\uff1a\u9023\u7d50\u6027\u306e\u78ba\u8a8d\n\npython\nfrom unionfind import unionfind\nr = np.array(\n    [[0,0,0],\n     [1,1,1],\n     [0,0,0]])\nprint(unionfind.isconnected(1-r))\nr[1][1] = 0\nprint(unionfind.isconnected(1-r))\n>>>\nFalse\nTrue\n\n\n\u7d50\u679c\u306e$r$\u306f\u30010:\u767d\u30011:\u9ed2\u3092\u8868\u3057\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002unionfind.isconnected(1-r) \u3067\u767d\u304c\u9023\u7d50\u3057\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066\u9023\u7d50\u306b\u306a\u308b\u307e\u3067\u3001\u30e2\u30c7\u30eb\u3092\u5909\u66f4\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\npython\nwhile True:\n    m.solve()\n    r = np.vectorize(value)(v).astype(int)\n    if unionfind.isconnected(1-r):\n        break\n    m += lpSum(v[r==1]) <= r.sum() - 1\n\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001\u30d1\u30ba\u30eb\u306b\u3088\u3063\u3066\u306f\u7e70\u308a\u8fd4\u3057\u304c\u9577\u304f\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u300c\u7d50\u679c\u306e\u5168\u9ed2\u30de\u30b9\u3092\u7981\u6b62\u300d\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u9ed2\u30de\u30b9\u3067\u5206\u65ad\u3055\u308c\u305f\u767d\u306e\u30a8\u30ea\u30a2\u3054\u3068\u306b\u300c\u305d\u306e\u767d\u3092\u56f2\u3063\u3066\u3044\u308b\u9ed2\u30de\u30b9\u3092\u7981\u6b62\u300d\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u52b9\u7387\u3088\u304f\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30a8\u30ea\u30a2(\u90e8\u5c4b\u3084\u56fd)\u3054\u3068\u306e\u51e6\u7406\n\u52b9\u7528\uff1a\u30b7\u30f3\u30d7\u30eb\u306a\u5165\u529b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u56e0\u5b50\u306e\u90e8\u5c4b\u300d\u300c\u30ab\u30f3\u30c8\u30ea\u30fc\u30ed\u30fc\u30c9\u300d\u300c\u3055\u3068\u304c\u3048\u308a\u300d\u300c\u30b9\u30bf\u30fc\u30d0\u30c8\u30eb\u300d\u300c\u30bf\u30a4\u30eb\u30da\u30a4\u30f3\u30c8\u300d\u300c\u30c1\u30e7\u30b3\u30ca\u300d\u300c\u306e\u308a\u306e\u308a\u300d\u300c\u3078\u3084\u308f\u3051\u300d\u300c\u30da\u30a4\u30f3\u30c8\u30a8\u30ea\u30a2\u300d\n\u4f8b\uff1a\n\npython\ndata = \"\"\"\\\nAABBB\nAABCC\nADDDC\nDDECC\nEEEEC\"\"\".split()\nv = np.array(addbinvars(nn, nn))\nfor _, d in groupby(sorted(zip(''.join(data), v.flat)), lambda x:x[0]):\n    m += lpSum(c[1] for c in d) == 1\n\n\n2\u6b21\u5143\u306e\u30de\u30b9\u306e\u8868\u304c\u4e0a\u8a18 data \u306e\u3088\u3046\u306b\u3001\u90e8\u5c4b\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u300c\u5404\u90e8\u5c4b\u306e\u4e2d\u3067\u9ed2\u30de\u30b9\u306f1\u3064\u300d\u3068\u3044\u3046\u6761\u4ef6\u306f\u3001groupby\u3092\u4f7f\u3046\u3068\u4e0a\u8a18\u306e\u3088\u3046\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u307e\u3059\u3002\n\n\u5019\u88dc\u304b\u3089\u9078\u629e\n\u52b9\u7528\uff1a\u7c21\u5358\u306a\u30e2\u30c7\u30eb\u5316\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u30ab\u30ca\u30aa\u30ec]\u300c\u3055\u3068\u304c\u3048\u308a]\u300c\u56db\u89d2\u306b\u5207\u308c]\u300c\u306c\u308a\u304b\u3079]\u300c\u306e\u306e\u3050\u3089\u3080]\u300c\u30d5\u30a3\u30eb\u30de\u30c3\u30c8]\u300c\u30d6\u30ed\u30c3\u30af\u30d1\u30ba\u30eb]\u300c\u30db\u30bf\u30eb\u30d3\u30fc\u30e0]\n2\u3064\u306e0-1\u5909\u6570$x,y$\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u591a\u304f\u3066\u3082\u3069\u3061\u3089\u304b1\u65b9\u3060\u3051\u6210\u308a\u7acb\u3064(=1)\u3088\u3046\u306b\u3057\u305f\u3051\u308c\u3070\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002\n\u4f8b\uff1a\n\npython\nm += x + y <= 1\n\n\n\u30d1\u30ba\u30eb\u306e\u30eb\u30fc\u30eb\u3092\u6570\u5f0f\u3067\u8868\u3059\u3053\u3068\u304c\u56f0\u96e3\u306a\u5834\u5408\u3001\u30eb\u30fc\u30eb\u3092\u6e80\u305f\u3059\u7d44\u5408\u305b\u3092\u5217\u6319\u3057\u3001\u305d\u306e\u4e2d\u304b\u3089\u9078\u3070\u305b\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u30e2\u30c7\u30eb\u5316\u3067\u304d\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5b9a\u5f0f\u5316\u306f\u6a19\u6e96\u554f\u984c\u306e\u96c6\u5408\u5206\u5272\u554f\u984c\u306b\u3042\u305f\u308a\u307e\u3059\u3002\n\u300c\u30ab\u30ca\u30aa\u30ec\u300d\u306e\u5019\u88dc\u306e\u4f5c\u6210\u95a2\u6570\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4f8b\uff1a\n\npython\ndef makecand(lst, y, x, d, l, p, u):\n    yy, xx = y+[0, -1, 0, 1][d], x+[-1, 0, 1, 0][d] # (1)\n    if 0 <= yy < nh and 0 <= xx < nw and (yy,xx) not in u:\n        if p == l - 1:\n            lst.append(u + [(yy, xx)])\n            return\n        for k in range(4):\n            makecand(lst, yy, xx, k, l, p + 1, u + [(yy,xx)])\n\n\n\u5f15\u6570\u306ed\u304c\u65b9\u5411\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002(1)\u3067 1\u30de\u30b9\u8ffd\u52a0\u3057\u3001p\u304c\u9577\u3055\u304c\u9054\u3057\u305f\u3089lst\u306b\u8ffd\u52a0\u3057\u3066\u7d42\u4e86\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u30014\u65b9\u5411\u306b\u63a2\u7d22\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\u300c\u30ab\u30ca\u30aa\u30ec\u300d\u3092\u3053\u306e\u3088\u3046\u306a\u65b9\u6cd5\u4ee5\u5916\u3067\u30e2\u30c7\u30eb\u5316\u3059\u308b\u306e\u306f\u3001\u56f0\u96e3\u3067\u3057\u3087\u3046\u3002\nAMPL\u306a\u3069\u306e\u30e2\u30c7\u30ea\u30f3\u30b0\u8a00\u8a9e\u3067\u306f\u3001\u67d4\u8edf\u306a\u8a18\u8ff0\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306b\u30e2\u30c7\u30eb\u5316\u3067Python\u3092\u4f7f\u3046\u306e\u306f\u3001\u975e\u5e38\u306b\u6709\u7528\u3068\u3044\u3048\u307e\u3059\u3002\n\u4ee5\u4e0a\n# \u306f\u3058\u3081\u306b\n[\u7d44\u5408\u305b\u6700\u9069\u5316](http://qiita.com/Tsutomu-KKE@github/items/bfbf4c185ed7004b5721)(\u3044\u308f\u3086\u308b\u6df7\u5408\u6574\u6570\u6700\u9069\u5316)\u3067\u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30eb\u30fc\u30eb\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u30d1\u30ba\u30eb\u3092\u4f8b\u984c\u306b\u3001\u3044\u304f\u3064\u304b\u306e\u30c6\u30af\u30cb\u30c3\u30af\u3092\u7c21\u5358\u306b\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u30c6\u30af\u30cb\u30c3\u30af\u306e\u3044\u304f\u3064\u304b\u306f\u3001Python\u306b\u3088\u308b\u90e8\u5206\u3082\u3042\u308a\u307e\u3059\u3002\u6570\u7406\u6700\u9069\u5316\u306e\u30e2\u30c7\u30eb\u5316\u306b\u304a\u3044\u3066Python\u306f\u76f8\u6027\u304c\u3088\u3044\u3068\u3044\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n## \u74b0\u5883\u69cb\u7bc9\n- \u30b5\u30af\u30c3\u3068\u8a66\u3057\u305f\u3044\u5834\u5408\uff1aBinder\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308a\u3001\u30d6\u30e9\u30a6\u30b6\u3060\u3051\u3067\u8a66\u305b\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u3001[\u7121\u6599Jupyter\u30b5\u30fc\u30d3\u30b9\u306eBinder\u306e\u7d39\u4ecb](http://qiita.com/Tsutomu-KKE@github/items/821ebd608c412e57382d)\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n- \u304d\u3061\u3093\u3068\u8a66\u3057\u305f\u3044\u5834\u5408\uff1a[Anaconda](https://www.continuum.io/downloads)\u3092\u5c0e\u5165\u5f8c\u3001\u4e0b\u8a18\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\npip install pulp ortoolpy unionfind more_itertools\n```\n\n## \u6e96\u5099\n\u30e2\u30c7\u30e9\u30fc\u3068\u3057\u3066\u306f\u3001PuLP\u3092\u7528\u3044\u307e\u3059\u3002([PuLP\u306b\u3064\u3044\u3066](http://qiita.com/Tsutomu-KKE@github/items/070ca9cb37c6b2b492f0))\n\u5f8c\u8ff0\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u306f\u3001\u4e0b\u8a18\u3092\u7701\u7565\u3057\u307e\u3059\u3002\n\n```py3:python\n%matplotlib inline\nimport numpy as np, matplotlib.pyplot as plt\nfrom itertools import groupby\nfrom pulp import *\nfrom unionfind import unionfind\nfrom ortoolpy import addvar, addvars, addbinvar, addbinvars\nm = LpProblem()\n```\n\n\u30e1\u30bd\u30c3\u30c9|\u8aac\u660e\n:--|:--\ngroupby|\u30ad\u30fc\u304c\u540c\u3058\u3082\u306e\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\nunionfind|[\u7d20\u96c6\u5408\u30c7\u30fc\u30bf\u69cb\u9020](https://ja.wikipedia.org/wiki/%E7%B4%A0%E9%9B%86%E5%90%88%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0)\u7528\u306e\u30af\u30e9\u30b9\naddvar|\u5909\u6570\u30921\u3064\u4f5c\u6210\naddvars|\u5909\u6570\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\naddbinvar|0-1\u5909\u6570\u30921\u3064\u4f5c\u6210\naddbinvars|0-1\u5909\u6570\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\nLpProblem|PuLP\u306e\u6570\u7406\u6700\u9069\u5316\u30e2\u30c7\u30eb\n\n## \u5bfe\u8c61\u30d1\u30ba\u30eb\n[Tsutomu-KKE/OptForPuzzle](https://github.com/Tsutomu-KKE/OptForPuzzle)\u306b\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n# \u30c6\u30af\u30cb\u30c3\u30af\n\n## \u5909\u6570\u3092np.array\u3067\u4f5c\u6210\n\u52b9\u7528\uff1a\u6f14\u7b97\u306e\u9ad8\u901f\u5316\u3001\u591a\u5f69\u306a\u30a2\u30af\u30bb\u30b9\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u6570\u72ec\u300d\u306a\u3069\n\u4f8b\uff1a\n\n```py3:python\nv = np.array(addbinvars(9, 9, 9)) # (1)\nm += lpSum(v[i,:,k]) == 1 # (2)\nm += lpSum(v[i:i+3,j:j+3,k]) == 1 # (3)\nw = addvars(9, 9) # (4)\nm += lpDot(range(9), v[i,j])+1 == r[i][j] # (4)\n```\n\n- (1)\u3067\u306f\u30019x9x9\u306e\u591a\u6b21\u5143\u914d\u5217\u306e0-1\u5909\u6570\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u6b21\u5143\u306f\u3001\u884c\u3001\u5217\u3001\u6570\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n- (2)\u3067\u306f\u3001$i$\u884c\u76ee\u306b\u6570\u5b57$k+1$\u304c1\u3064\u3060\u3051\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002\n- (3)\u3067\u306f\u3001\u5de6\u4e0a\u304c$(i,j)$\u3068\u306a\u308b3x3\u306e\u9818\u57df\u3067\u3001\u6570\u5b57$k+1$\u304c1\u3064\u3060\u3051\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002\n- \u307e\u305f\u3001\u3053\u306e$v$\u3092\u4f7f\u3046\u3068\u3001(4)\u306e\u3088\u3046\u306b\u3001\u30de\u30b9$(i,j)$\u306e\u6570\u5b57\u3092\u5909\u6570$w_{ij}$\u306e\u3088\u3046\u306b\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\n## \u7d50\u679c\u3092np.vectorize\u3067\u53d6\u5f97\n\u52b9\u7528\uff1a\u6f14\u7b97\u306e\u9ad8\u901f\u5316\u3001\u591a\u5f69\u306a\u30a2\u30af\u30bb\u30b9\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u6570\u72ec\u300d\u306a\u3069(\u53ef\u8996\u5316\u306f\u300c\u9ed2\u3069\u3053\u300d\u306a\u3069)\n\u4f8b\uff1a\n\n```py3:python\nr = np.vectorize(value)(v).astype(int) # (1)\nplt.imshow(1-r, cmap='gray', interpolation='none') # (2)\n```\n\n\u5909\u6570\u3092np.array\u3067\u4f5c\u6210\u3057\u6700\u9069\u5316\u3092\u89e3\u3044\u305f\u7d50\u679c\u306f\u3001\u4e0a\u8a18\u306e(1)\u306e\u3088\u3046\u306b\u7d50\u679c$r$\u3092\u53d6\u5f97\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u3001\u9ad8\u901f\u306b\u7c21\u5358\u306b\u7d50\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u3055\u3089\u306bnumpy\u306e\u591a\u5f69\u306a\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3092\u7d9a\u3051\u3089\u308c\u307e\u3059\u3002\n2\u6b21\u5143\u306e\u767d\u9ed2\u306e\u7d50\u679c\u3092\u56f3\u3068\u3057\u3066\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001(2)\u306e\u3088\u3046\u306bmatplotlib\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u53ef\u8996\u5316\u3067\u304d\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u5909\u6570\u3092pandas\u306eDataFrame\u306eSeries\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u3068\u304d\u306f\u3001apply\u3067\u540c\u69d8\u306b\u3067\u304d\u307e\u3059\u3002\n\n## \u3059\u3079\u3066\u540c\u3058\n\u52b9\u7528\uff1a\u52b9\u7387\u7684\u306a\u30e2\u30c7\u30eb\u5316\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u30da\u30a4\u30f3\u30c8\u30a8\u30ea\u30a2\u300d\u306a\u3069\n\u4f8b\uff1a\n\n```py3:python\nfor vi, vj in zip(v, v[1:]):\n    m += vi == vj\n```\n\n\u5909\u6570\u306e1\u6b21\u5143\u914d\u5217$v$\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u540c\u3058\u5024\u3092\u53d6\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u5834\u5408\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n(\u5909\u6570\u305d\u306e\u3082\u306e\u3092\u7f6e\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059)\n\n## \u5468\u308a\u306e\u6570\n\u52b9\u7528\uff1a\u52b9\u7387\u7684\u306a\u30e2\u30c7\u30eb\u5316\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u30af\u30ea\u30fc\u30af\u300d\u300c\u30b7\u30e3\u30ab\u30b7\u30e3\u30ab\u300d\u300c\u6570\u30b3\u30ed\u300d\u300c\u306e\u308a\u306e\u308a\u300d\u300c\u30da\u30a4\u30f3\u30c8\u30a8\u30ea\u30a2\u300d\u300c\u30dc\u30f3\u30d0\u30fc\u30d1\u30ba\u30eb\u300d\n\n\u30de\u30b9\u306e\u5909\u6570$v[i,j]$\u306e\u4e0a\u4e0b\u5de6\u53f3\u306e\u5909\u6570\u306e\u548c\u3092\u4f7f\u3044\u305f\u3044\u3068\u304d\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b$w$\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308a\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\uff1a\n\n```py3:python\nu = np.zeros((nh+2, nw+2), dtype=object)\nv = u[1:-1,1:-1] = np.array(addbinvars(nh, nw))\nw = u[:-2,1:-1]+u[2:,1:-1]+u[1:-1,:-2]+u[1:-1,2:]\n```\n\n\u3053\u308c\u306f\u3001v\u306e\u5468\u308a\u306b1\u5468\u591a\u3044\u914d\u5217$u$\u3092\u7528\u610f\u3057\u3001\u3046\u307e\u304f\u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3063\u305f\u4f8b\u3067\u3059\u3002\n\n\n## IF\u5236\u7d04\n\u52b9\u7528\uff1a\u6761\u4ef6\u306b\u3088\u3063\u3066\u6210\u308a\u7acb\u3064\u5834\u5408\u3092\u8868\u73fe\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u30ab\u30ca\u30aa\u30ec\u300d\u306a\u3069\n\u5909\u6570$x,y$\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u300c$x == 1$\u300d\u306a\u3089\u3070\u300c$y \\le a$\u300d\u3068\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u5341\u5206\u306b\u5927\u304d\u306a\u6570$M$\u3092\u4f7f\u7528\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\uff1a\n\n```py3:python\nm += y <= a + M(1-x)\n```\n\n\u307e\u305f\u3001\u300c$x==1$\u300d\u306a\u3089\u3070\u300c$y=a$\u300d\u3068\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\uff1a\n\n```py3:python\nm += y <= a + M(1-x)\nm += y >= a - M(1-x)\n```\n\n## \u9023\u7d50\u5236\u7d04\n\u52b9\u7528\uff1a\u7c21\u5358\u306a\u30e2\u30c7\u30eb\u5316\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u9ed2\u3069\u3053\u300d\u306a\u3069\n\n\u300c\u9ed2\u3069\u3053\u300d\u306e\u3088\u3046\u306b\u300c\u5168\u3066\u306e\u767d\u30de\u30b9\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3053\u3068\u300d\u3068\u3044\u3046\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5236\u7d04\u3092\u6570\u5f0f\u3067\u8868\u305d\u3046\u3068\u3059\u308b\u3068\u3001\u7d50\u69cb\u5927\u5909\u3060\u3063\u305f\u308a\u3057\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u4e00\u65e6\u7121\u8996\u3057\u3066\u3001\u63a5\u7d9a\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u3001\u305d\u306e\u89e3\u3092\u7981\u6b62\u3057\u3066\u89e3\u304d\u306a\u304a\u3059\u3084\u308a\u65b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4f8b\uff1a\u9023\u7d50\u6027\u306e\u78ba\u8a8d\n\n```py3:python\nfrom unionfind import unionfind\nr = np.array(\n    [[0,0,0],\n     [1,1,1],\n     [0,0,0]])\nprint(unionfind.isconnected(1-r))\nr[1][1] = 0\nprint(unionfind.isconnected(1-r))\n>>>\nFalse\nTrue\n```\n\n\u7d50\u679c\u306e$r$\u306f\u30010:\u767d\u30011:\u9ed2\u3092\u8868\u3057\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002unionfind.isconnected(1-r) \u3067\u767d\u304c\u9023\u7d50\u3057\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066\u9023\u7d50\u306b\u306a\u308b\u307e\u3067\u3001\u30e2\u30c7\u30eb\u3092\u5909\u66f4\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nwhile True:\n    m.solve()\n    r = np.vectorize(value)(v).astype(int)\n    if unionfind.isconnected(1-r):\n        break\n    m += lpSum(v[r==1]) <= r.sum() - 1\n```\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001\u30d1\u30ba\u30eb\u306b\u3088\u3063\u3066\u306f\u7e70\u308a\u8fd4\u3057\u304c\u9577\u304f\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u300c\u7d50\u679c\u306e\u5168\u9ed2\u30de\u30b9\u3092\u7981\u6b62\u300d\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u9ed2\u30de\u30b9\u3067\u5206\u65ad\u3055\u308c\u305f\u767d\u306e\u30a8\u30ea\u30a2\u3054\u3068\u306b\u300c\u305d\u306e\u767d\u3092\u56f2\u3063\u3066\u3044\u308b\u9ed2\u30de\u30b9\u3092\u7981\u6b62\u300d\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u52b9\u7387\u3088\u304f\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u30a8\u30ea\u30a2(\u90e8\u5c4b\u3084\u56fd)\u3054\u3068\u306e\u51e6\u7406\n\u52b9\u7528\uff1a\u30b7\u30f3\u30d7\u30eb\u306a\u5165\u529b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u56e0\u5b50\u306e\u90e8\u5c4b\u300d\u300c\u30ab\u30f3\u30c8\u30ea\u30fc\u30ed\u30fc\u30c9\u300d\u300c\u3055\u3068\u304c\u3048\u308a\u300d\u300c\u30b9\u30bf\u30fc\u30d0\u30c8\u30eb\u300d\u300c\u30bf\u30a4\u30eb\u30da\u30a4\u30f3\u30c8\u300d\u300c\u30c1\u30e7\u30b3\u30ca\u300d\u300c\u306e\u308a\u306e\u308a\u300d\u300c\u3078\u3084\u308f\u3051\u300d\u300c\u30da\u30a4\u30f3\u30c8\u30a8\u30ea\u30a2\u300d\n\u4f8b\uff1a\n\n```py3:python\ndata = \"\"\"\\\nAABBB\nAABCC\nADDDC\nDDECC\nEEEEC\"\"\".split()\nv = np.array(addbinvars(nn, nn))\nfor _, d in groupby(sorted(zip(''.join(data), v.flat)), lambda x:x[0]):\n    m += lpSum(c[1] for c in d) == 1\n```\n\n2\u6b21\u5143\u306e\u30de\u30b9\u306e\u8868\u304c\u4e0a\u8a18 data \u306e\u3088\u3046\u306b\u3001\u90e8\u5c4b\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u300c\u5404\u90e8\u5c4b\u306e\u4e2d\u3067\u9ed2\u30de\u30b9\u306f1\u3064\u300d\u3068\u3044\u3046\u6761\u4ef6\u306f\u3001groupby\u3092\u4f7f\u3046\u3068\u4e0a\u8a18\u306e\u3088\u3046\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u307e\u3059\u3002\n\n## \u5019\u88dc\u304b\u3089\u9078\u629e\n\u52b9\u7528\uff1a\u7c21\u5358\u306a\u30e2\u30c7\u30eb\u5316\n\u5bfe\u8c61\u30d1\u30ba\u30eb\uff1a\u300c\u30ab\u30ca\u30aa\u30ec]\u300c\u3055\u3068\u304c\u3048\u308a]\u300c\u56db\u89d2\u306b\u5207\u308c]\u300c\u306c\u308a\u304b\u3079]\u300c\u306e\u306e\u3050\u3089\u3080]\u300c\u30d5\u30a3\u30eb\u30de\u30c3\u30c8]\u300c\u30d6\u30ed\u30c3\u30af\u30d1\u30ba\u30eb]\u300c\u30db\u30bf\u30eb\u30d3\u30fc\u30e0]\n\n2\u3064\u306e0-1\u5909\u6570$x,y$\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u591a\u304f\u3066\u3082\u3069\u3061\u3089\u304b1\u65b9\u3060\u3051\u6210\u308a\u7acb\u3064(=1)\u3088\u3046\u306b\u3057\u305f\u3051\u308c\u3070\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002\n\n\u4f8b\uff1a\n\n```py3:python\nm += x + y <= 1\n```\n\n\u30d1\u30ba\u30eb\u306e\u30eb\u30fc\u30eb\u3092\u6570\u5f0f\u3067\u8868\u3059\u3053\u3068\u304c\u56f0\u96e3\u306a\u5834\u5408\u3001\u30eb\u30fc\u30eb\u3092\u6e80\u305f\u3059\u7d44\u5408\u305b\u3092\u5217\u6319\u3057\u3001\u305d\u306e\u4e2d\u304b\u3089\u9078\u3070\u305b\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u30e2\u30c7\u30eb\u5316\u3067\u304d\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5b9a\u5f0f\u5316\u306f[\u6a19\u6e96\u554f\u984c](http://qiita.com/Tsutomu-KKE@github/items/0f6c1a4415d196e64314)\u306e[\u96c6\u5408\u5206\u5272\u554f\u984c](http://qiita.com/Tsutomu-KKE@github/items/22ec0e42999141a0ba1e)\u306b\u3042\u305f\u308a\u307e\u3059\u3002\n\n\u300c\u30ab\u30ca\u30aa\u30ec\u300d\u306e\u5019\u88dc\u306e\u4f5c\u6210\u95a2\u6570\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4f8b\uff1a\n\n```py3:python\ndef makecand(lst, y, x, d, l, p, u):\n    yy, xx = y+[0, -1, 0, 1][d], x+[-1, 0, 1, 0][d] # (1)\n    if 0 <= yy < nh and 0 <= xx < nw and (yy,xx) not in u:\n        if p == l - 1:\n            lst.append(u + [(yy, xx)])\n            return\n        for k in range(4):\n            makecand(lst, yy, xx, k, l, p + 1, u + [(yy,xx)])\n```\n\n\u5f15\u6570\u306ed\u304c\u65b9\u5411\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002(1)\u3067 1\u30de\u30b9\u8ffd\u52a0\u3057\u3001p\u304c\u9577\u3055\u304c\u9054\u3057\u305f\u3089lst\u306b\u8ffd\u52a0\u3057\u3066\u7d42\u4e86\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u30014\u65b9\u5411\u306b\u63a2\u7d22\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\u300c\u30ab\u30ca\u30aa\u30ec\u300d\u3092\u3053\u306e\u3088\u3046\u306a\u65b9\u6cd5\u4ee5\u5916\u3067\u30e2\u30c7\u30eb\u5316\u3059\u308b\u306e\u306f\u3001\u56f0\u96e3\u3067\u3057\u3087\u3046\u3002\nAMPL\u306a\u3069\u306e\u30e2\u30c7\u30ea\u30f3\u30b0\u8a00\u8a9e\u3067\u306f\u3001\u67d4\u8edf\u306a\u8a18\u8ff0\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306b\u30e2\u30c7\u30eb\u5316\u3067Python\u3092\u4f7f\u3046\u306e\u306f\u3001\u975e\u5e38\u306b\u6709\u7528\u3068\u3044\u3048\u307e\u3059\u3002\n\n\u4ee5\u4e0a\n", "tags": ["Python", "\u7d44\u5408\u305b\u6700\u9069\u5316", "\u6700\u9069\u5316", "\u6570\u5b66", "\u30d1\u30ba\u30eb"]}