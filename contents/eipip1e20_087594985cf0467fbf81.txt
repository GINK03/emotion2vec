{"context": "\n\nCentOS-7-x86_64-Minimal-1511.iso \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u9014\u4e2d\u3067 root \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u8a2d\u5b9a\u3068\u7ba1\u7406\u8005\u30e6\u30fc\u30b6\uff08madoka\uff09\u3092\u4f5c\u6210\n \u4ee5\u5f8c\u3001\n\n# \u306f Linux\uff08\u30b5\u30fc\u30d0 : server.com\uff09\u3067\u306e root \u306e\u4f5c\u696d\n% \u306f Mac\uff08\u30ed\u30fc\u30ab\u30eb\uff09\u3067\u306e madoka \u306e\u4f5c\u696d\n$ \u306f Linux\uff08\u30b5\u30fc\u30d0 : server.com\uff09\u3067\u306e madoka \u306e\u4f5c\u696d\n\n\u3068\u3059\u308b\u3002\n\nLinux \u3092\u6700\u65b0\u306e\u72b6\u614b\u306b\n% ssh madoka@server\n$ sudo yum -y update\n\n\nuser \u306e skel \u306e\u4f5c\u6210\n% ssh madoka@server\n$ sudo mkdir /etc/skel/.ssh\n$ sudo chmod 700 /etc/skel/.ssh\n$ sudo touch /etc/skel/.ssh/authorized_keys\n$ sudo chmod 600 /etc/skel/.ssh/authorized_keys\n\n\n\u7ba1\u7406\u8005\u30e6\u30fc\u30b6\uff08madoka\uff09\u306e\u8a2d\u5b9a\n\n\u30d1\u30b9\u30b3\u30fc\u30c9\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\n% scp ~/.ssh/id_rsa.pub madoka@server:~/\n% ssh madoka@server\n$ cat id_rsa.pub >> .ssh/authorized_keys\n$ rm id_rsa.pub\n\n\nmadoka \u306e\u30b7\u30a7\u30eb\u3092\u5909\u66f4\uff08\u5404\u81ea\u306e\u74b0\u5883\uff08\u597d\u307f\uff09\u306b\u5408\u308f\u305b\u3066\u9069\u5b9c\u4fee\u6b63\uff09\n% scp ~/.tcshrc madoka@server:~/\n% ssh madoka@server\n$ chsh\n\u65b0\u3057\u3044\u30b7\u30a7\u30eb [/bin/bash]: /bin/tcsh\n\u30d1\u30b9\u30ef\u30fc\u30c9:\n\u30b7\u30a7\u30eb\u3092\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\n\n\u5404\u7a2e\u8a2d\u5b9a\n\nSELinux \u95a2\u4fc2\u306e\u30bd\u30d5\u30c8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n% ssh madoka@server\n$ sudo yum -y install policycoreutils-gui\n$ sudo yum -y install policycoreutils-restorecond\n$ sudo yum -y install star\n$ sudo yum -y install selinux-policy-minimum\n$ sudo yum -y install selinux-policy-mls\n$ sudo yum -y install iptstate\n$ sudo yum -y install firewalld\n$ sudo yum -y install setools\n\nstar \u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3082\u4fdd\u5b58\u3067\u304d\u308b\uff08tar \u306f\u3067\u304d\u306a\u3044\uff09\n$ star -H=exustar -xattr -cvz -f /tmp/log.tar gz var/log/maillog*\n\ncp \u3067\u306f --preserve=context \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\n$ cp --preserve=context /etc/passowrd .\n\n\nssh \u306e\u8a2d\u5b9a\n\n\u30dd\u30fc\u30c8\u306e\u78ba\u8a8d\n\n$ sudo semanage port -l | grep ssh\n\n\nssh \u3067 22 \u756a\u30dd\u30fc\u30c8\u4ee5\u5916\u3092\u4f7f\u3046\u5834\u5408\n\n$ sudo semanage port -a -t ssh_port_t -p tcp 9022\n\n\n\u30dd\u30fc\u30c8\u3092\u524a\u9664\u3059\u308b\u5834\u5408\n\n$ sudo semanage port -d -t ssh_port_t -p tcp 9022\n\n\nssh \u3067\u306e\u8a8d\u8a3c\u306e\u4fee\u6b63\n\n$ sudo vi /etc/ssh/sshd_config\nPermitRootLogin no          # root \u3067\u306e\u30ed\u30b0\u30a4\u30f3\u306f\u4e0d\u53ef\nPasswordAuthentication no   # password \u306b\u3088\u308b\u8a8d\u8a3c\u306f\u4e0d\u53ef\n\n\n\u6642\u523b\u540c\u671f\uff08\u521d\u671f\u6bb5\u968e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\uff09\nntpd \u306f obsolete\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\n\n$ sudo yum -y install chrony\n\n\n\u624b\u52d5\u3067\u8d77\u52d5\u3059\u308b\u5834\u5408\n\n$ sudo systemctl start chronyd\n\n\n\u81ea\u52d5\u8a2d\u5b9a\n\n$ sudo systemctl enable chronyd\n$ systemctl list-unit-files -t service | grep chronyd\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\n$ sudo chronyc sources\n\n\n\u5404\u7a2e\u30b3\u30de\u30f3\u30c9\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo yum -y install screen wget git emacs\n$ sudo yum -y groupinstall \"Development Tools\"\n$ sudo yum install -y openssl-devel readline-devel zlib-devel mysql-devel\n\n\nopen-vm-tools \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08server.com \u3092 VMWare \u3067\u904b\u7528\u3057\u3066\u3044\u308b\u5834\u5408\uff09\nVMwareTools \u306f\u975e\u63a8\u5968\u306b\u306a\u3063\u305f\n$ sudo yum -y install open-vm-tools\n$ sudo reboot\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\n$ ps -ef | grep vmtools\n$ systemctl status vmtoolsd.service\n\n\nmadoka \u30e6\u30fc\u30b6\u306e git \u306e\u8a2d\u5b9a\n$ git config --global user.name \"Kaname Madoka\"\n$ git config --global user.email \"madoka@mitakihara.com\"\n$ git config --global core.editor \"emacs\"\n$ git config --global color.ui auto\n$ git config --global core.excludesfile ~/.gitignore_global\n\n\n\u6539\u884c\u30b3\u30fc\u30c9\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\n\n\u30b3\u30df\u30c3\u30c8\u6642\u306e CRLF \u304b\u3089 LF \u3078\u306e\u5909\u63db\u306f\u3055\u305b\u305f\u3044\u3051\u308c\u3069\u3082\u305d\u308c\u4ee5\u5916\u306e\u81ea\u52d5\u5909\u63db\u304c\u4e0d\u8981\u306a\u5834\u5408 input\n$ git config --global core.autocrlf input\n$ emacs ~/.gitignore_global\n.zip\n.DS_Store\nThumbs.db\n/nbproject/\n\n\nNginx \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nepel \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8a2d\u5b9a\n$ sudo yum -y install epel-release\n$ sudo vi /etc/yum.repos.d/epel.repo\n[epel]\u90e8\u5206\u306e\u300cenabled=1\u300d\u3092\u300cenabled=0\u300d\u306b\u5909\u66f4\n\n\nNginx \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo yum -y install --enablerepo=epel nginx\n\n\n\u30b5\u30fc\u30d3\u30b9\u767b\u9332\n\n\u30b5\u30fc\u30d3\u30b9\u306e\u78ba\u8a8d\n\n$ systemctl list-unit-files -t service | grep nginx\nnginx.service                               disabled\n\n\n\u81ea\u52d5\u8d77\u52d5\u306e\u305f\u3081\u306e\u8a2d\u5b9a\n\n$ sudo systemctl enable nginx\nCreated symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.\n$ systemctl list-unit-files -t service | grep nginx\nnginx.service                               enabled\n\n\n\u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\n$ sudo systemctl start nginx\n$ systemctl -l status nginx\n\u25cf nginx.service - The nginx HTTP and reverse proxy server\n   Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)\n   Active: active (running) since \u6708 2016-05-16 19:21:17 JST; 31s ago\n  Process: 1741 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)\n  Process: 1739 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)\n  Process: 1737 ExecStartPre=/usr/bin/rm -f /run/nginx.pid (code=exited, status=0/SUCCESS)\n Main PID: 1744 (nginx)\n   CGroup: /system.slice/nginx.service\n           \u251c\u25001744 nginx: master process /usr/sbin/ngin\n           \u2514\u25001745 nginx: worker proces\n\n 5\u6708 16 19:21:17 server.com systemd[1]: Starting The nginx HTTP and reverse proxy server...\n 5\u6708 16 19:21:17 server.com nginx[1739]: nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\n 5\u6708 16 19:21:17 server.com nginx[1739]: nginx: configuration file /etc/nginx/nginx.conf test is successful\n 5\u6708 16 19:21:17 server.com systemd[1]: Failed to read PID from file /run/nginx.pid: Invalid argument\n 5\u6708 16 19:21:17 server.com systemd[1]: Started The nginx HTTP and reverse proxy server.\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\n$ ps -ef | grep nginx\nroot       1744      1  0 19:21 ?        00:00:00 nginx: master process /usr/sbin/nginx\nnginx      1745   1744  0 19:21 ?        00:00:00 nginx: worker process\n\n\nfirewall \u306e\u8a2d\u5b9a\n$ sudo firewall-cmd --get-default-zone\npublic\n\n$ sudo firewall-cmd --list-services --zone=public\ndhcpv6-client ssh\n\n$ sudo firewall-cmd --add-service http --zone=public --permanent\nsuccess\n\n$ sudo firewall-cmd --add-service https --zone=public --permanent\nsuccess\n\n$ sudo firewall-cmd --reload\nsuccess\n\n$ sudo firewall-cmd --list-services --zone=public\ndhcpv6-client http ssh\n\n\n\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\n$ wget -O - -q http://localhost\n% wget -O - -q http://server.com\n\n\nnginx \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u72b6\u6cc1\u3092\u78ba\u8a8d\n$ sudo semanage fcontext -l | grep nginx\n/etc/nginx(/.*)?                                   all files          system_u:object_r:httpd_config_t:s0\n/var/run/nginx.*                                   all files          system_u:object_r:httpd_var_run_t:s0\n/var/lib/nginx(/.*)?                               all files          system_u:object_r:httpd_var_lib_t:s0\n/var/log/nginx(/.*)?                               all files          system_u:object_r:httpd_log_t:s0\n/var/opt/rh/rh-nginx18/log(/.*)?                   all files          system_u:object_r:httpd_log_t:s0\n/etc/opt/rh/rh-nginx18/nginx(/.*)?                 all files          system_u:object_r:httpd_config_t:s0\n/usr/lib/systemd/system/nginx.*                    regular file       system_u:object_r:httpd_unit_file_t:s0\n/var/opt/rh/rh-nginx18/lib/nginx(/.*)?             all files          system_u:object_r:httpd_var_lib_t:s0\n/var/opt/rh/rh-nginx18/run/nginx(/.*)?             all files          system_u:object_r:httpd_var_run_t:s0\n/usr/sbin/nginx                                    regular file       system_u:object_r:httpd_exec_t:s0\n\n$ cd /etc/nginx\n$ ls -lZ\ndrwxr-xr-x. root root system_u:object_r:httpd_config_t:s0 conf.d\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 fastcgi_params\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 koi-utf\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 koi-win\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 mime.types\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 nginx.conf\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 scgi_params\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 uwsgi_params\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 win-utf\n\n\nnginx.conf \u3092\u4fee\u6b63\n\u30d0\u30fc\u30c1\u30e3\u30eb\u30db\u30b9\u30c8\u306e\u8a2d\u5b9a\u306f /etc/nginx/conf.d/*.conf \u306b\u500b\u5225\u306b\u683c\u7d0d\u3059\u308b\u3002\n\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u62e1\u5f35\u5b50\u3092 *.stop \u306a\u3069\u306b\u5909\u66f4\u3059\u308b\u3002\n\n/etc/nginx/nginx.conf\nFile Edit Options Buffers Tools Conf Help\n# For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    # for more information.\n    include /etc/nginx/conf.d/*.conf;\n}\n\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u69cb\u6587\u30c1\u30a7\u30c3\u30af\n$ sudo nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n\n\nnginx \u306e\u8d77\u52d5\u306e\u78ba\u8a8d\n$ sudo systemctl restart nginx\n$ systemctl status nginx\n\n\n\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\n$ wget -O - -q http://localhost\n% wget -O - -q http://server.com\n\n\nMariaDB \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8a2d\u5b9a\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo yum -y install mariadb-server mariadb\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4fee\u6b63\n\n/etc/my.cnf\n[mysqld]\nmax_allowed_packet = 128M\n\n\n\u3053\u308c\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u30011M \u304f\u3089\u3044\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u3084\u308a\u53d6\u308a\u3067\u3001MySQL \u304c\u30a8\u30e9\u30fc\u3092\u51fa\u3057\u3066\u306f\u307e\u308b orz\n\n/etc/my.cnf.d/server.cnf\n[mysqld]\ncharacter-set-server = utf8\n\n\n\n/etc/my.cnf.d/mysql-clients.cnf\n[mysql]\ndefault-character-set = utf8\nshow-warnings\n\n\n\n\u8d77\u52d5\u306e\u78ba\u8a8d\n$ sudo systemctl start mariadb.service\n$ systemctl status mariadb\n\n\n\u81ea\u52d5\u8d77\u52d5\u306e\u8a2d\u5b9a\n$ sudo systemctl enable mariadb.service\n$ systemctl list-unit-files -t service | grep mariadb\nmariadb.service                             enabled\n\n\nmysql_secure_installation \u306e\u5b9f\u884c\n$ sudo mysql_secure_installation\n...\nEnter current password for root (enter for none):  [enter]\n...\nSet root password? [Y/n] [Y]\nNew password: \nRe-enter new password: \n...\nRemove anonymous users? [Y/n] [Y]\n...\nDisallow root login remotely? [Y/n] [Y]\n...\nRemove test database and access to it? [Y/n] [Y]\n...\nReload privilege tables now? [Y/n] [Y]\n\n\n## CentOS-7-x86_64-Minimal-1511.iso \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n \u9014\u4e2d\u3067 root \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u8a2d\u5b9a\u3068\u7ba1\u7406\u8005\u30e6\u30fc\u30b6\uff08madoka\uff09\u3092\u4f5c\u6210\n \u4ee5\u5f8c\u3001\n\n * \\# \u306f Linux\uff08\u30b5\u30fc\u30d0 : server.com\uff09\u3067\u306e root \u306e\u4f5c\u696d\n\n * % \u306f Mac\uff08\u30ed\u30fc\u30ab\u30eb\uff09\u3067\u306e madoka \u306e\u4f5c\u696d\n\n * $ \u306f Linux\uff08\u30b5\u30fc\u30d0 : server.com\uff09\u3067\u306e madoka \u306e\u4f5c\u696d\n\n \u3068\u3059\u308b\u3002\n\n## Linux \u3092\u6700\u65b0\u306e\u72b6\u614b\u306b\n\n ```\n% ssh madoka@server\n$ sudo yum -y update\n ```\n\n## user \u306e skel \u306e\u4f5c\u6210\n\n ```\n% ssh madoka@server\n$ sudo mkdir /etc/skel/.ssh\n$ sudo chmod 700 /etc/skel/.ssh\n$ sudo touch /etc/skel/.ssh/authorized_keys\n$ sudo chmod 600 /etc/skel/.ssh/authorized_keys\n ```\n\n## \u7ba1\u7406\u8005\u30e6\u30fc\u30b6\uff08madoka\uff09\u306e\u8a2d\u5b9a\n\n### \u30d1\u30b9\u30b3\u30fc\u30c9\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\n\n```\n% scp ~/.ssh/id_rsa.pub madoka@server:~/\n% ssh madoka@server\n$ cat id_rsa.pub >> .ssh/authorized_keys\n$ rm id_rsa.pub\n```\n\n### madoka \u306e\u30b7\u30a7\u30eb\u3092\u5909\u66f4\uff08\u5404\u81ea\u306e\u74b0\u5883\uff08\u597d\u307f\uff09\u306b\u5408\u308f\u305b\u3066\u9069\u5b9c\u4fee\u6b63\uff09\n\n```\n% scp ~/.tcshrc madoka@server:~/\n% ssh madoka@server\n$ chsh\n\u65b0\u3057\u3044\u30b7\u30a7\u30eb [/bin/bash]: /bin/tcsh\n\u30d1\u30b9\u30ef\u30fc\u30c9:\n\u30b7\u30a7\u30eb\u3092\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n```\n\n## \u5404\u7a2e\u8a2d\u5b9a\n\n### SELinux \u95a2\u4fc2\u306e\u30bd\u30d5\u30c8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n% ssh madoka@server\n$ sudo yum -y install policycoreutils-gui\n$ sudo yum -y install policycoreutils-restorecond\n$ sudo yum -y install star\n$ sudo yum -y install selinux-policy-minimum\n$ sudo yum -y install selinux-policy-mls\n$ sudo yum -y install iptstate\n$ sudo yum -y install firewalld\n$ sudo yum -y install setools\n```\n\nstar \u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3082\u4fdd\u5b58\u3067\u304d\u308b\uff08tar \u306f\u3067\u304d\u306a\u3044\uff09\n\n```\n$ star -H=exustar -xattr -cvz -f /tmp/log.tar gz var/log/maillog*\n```\n\ncp \u3067\u306f --preserve=context \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\n\n```\n$ cp --preserve=context /etc/passowrd .\n```\n\n### ssh \u306e\u8a2d\u5b9a\n\n* \u30dd\u30fc\u30c8\u306e\u78ba\u8a8d\n\n ```\n$ sudo semanage port -l | grep ssh\n ```\n \n* ssh \u3067 22 \u756a\u30dd\u30fc\u30c8\u4ee5\u5916\u3092\u4f7f\u3046\u5834\u5408\n\n ```\n$ sudo semanage port -a -t ssh_port_t -p tcp 9022\n ```\n\n* \u30dd\u30fc\u30c8\u3092\u524a\u9664\u3059\u308b\u5834\u5408\n\n ```\n$ sudo semanage port -d -t ssh_port_t -p tcp 9022\n ```\n\n* ssh \u3067\u306e\u8a8d\u8a3c\u306e\u4fee\u6b63\n\n ```\n$ sudo vi /etc/ssh/sshd_config\nPermitRootLogin no          # root \u3067\u306e\u30ed\u30b0\u30a4\u30f3\u306f\u4e0d\u53ef\nPasswordAuthentication no   # password \u306b\u3088\u308b\u8a8d\u8a3c\u306f\u4e0d\u53ef\n ```\n\n### \u6642\u523b\u540c\u671f\uff08\u521d\u671f\u6bb5\u968e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\uff09\n\nntpd \u306f obsolete\n\n* \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\n\n ```\n$ sudo yum -y install chrony\n ```\n\n* \u624b\u52d5\u3067\u8d77\u52d5\u3059\u308b\u5834\u5408\n\n ```\n$ sudo systemctl start chronyd\n ```\n\n* \u81ea\u52d5\u8a2d\u5b9a\n\n ```\n$ sudo systemctl enable chronyd\n$ systemctl list-unit-files -t service | grep chronyd\n ```\n\n* \u52d5\u4f5c\u78ba\u8a8d\n\n ```\n$ sudo chronyc sources\n ```\n\n### \u5404\u7a2e\u30b3\u30de\u30f3\u30c9\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ sudo yum -y install screen wget git emacs\n$ sudo yum -y groupinstall \"Development Tools\"\n$ sudo yum install -y openssl-devel readline-devel zlib-devel mysql-devel\n```\n\n### open-vm-tools \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08server.com \u3092 VMWare \u3067\u904b\u7528\u3057\u3066\u3044\u308b\u5834\u5408\uff09\n\nVMwareTools \u306f\u975e\u63a8\u5968\u306b\u306a\u3063\u305f\n\n```\n$ sudo yum -y install open-vm-tools\n$ sudo reboot\n```\n\n* \u52d5\u4f5c\u78ba\u8a8d\n\n ```\n$ ps -ef | grep vmtools\n$ systemctl status vmtoolsd.service\n ```\n\n### madoka \u30e6\u30fc\u30b6\u306e git \u306e\u8a2d\u5b9a\n\n```\n$ git config --global user.name \"Kaname Madoka\"\n$ git config --global user.email \"madoka@mitakihara.com\"\n$ git config --global core.editor \"emacs\"\n$ git config --global color.ui auto\n$ git config --global core.excludesfile ~/.gitignore_global\n```\n\n* \u6539\u884c\u30b3\u30fc\u30c9\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\n \n \u30b3\u30df\u30c3\u30c8\u6642\u306e CRLF \u304b\u3089 LF \u3078\u306e\u5909\u63db\u306f\u3055\u305b\u305f\u3044\u3051\u308c\u3069\u3082\u305d\u308c\u4ee5\u5916\u306e\u81ea\u52d5\u5909\u63db\u304c\u4e0d\u8981\u306a\u5834\u5408 input\n\n ```\n$ git config --global core.autocrlf input\n$ emacs ~/.gitignore_global\n.zip\n.DS_Store\nThumbs.db\n/nbproject/\n ```\n\n## Nginx \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n### epel \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8a2d\u5b9a\n\n```\n$ sudo yum -y install epel-release\n$ sudo vi /etc/yum.repos.d/epel.repo\n[epel]\u90e8\u5206\u306e\u300cenabled=1\u300d\u3092\u300cenabled=0\u300d\u306b\u5909\u66f4\n```\n\n### Nginx \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ sudo yum -y install --enablerepo=epel nginx\n```\n\n### \u30b5\u30fc\u30d3\u30b9\u767b\u9332\n\n* \u30b5\u30fc\u30d3\u30b9\u306e\u78ba\u8a8d\n\n ```\n$ systemctl list-unit-files -t service | grep nginx\nnginx.service                               disabled\n ```\n\n* \u81ea\u52d5\u8d77\u52d5\u306e\u305f\u3081\u306e\u8a2d\u5b9a\n\n ```\n$ sudo systemctl enable nginx\nCreated symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.\n$ systemctl list-unit-files -t service | grep nginx\nnginx.service                               enabled\n ```\n\n### \u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\n\n```\n$ sudo systemctl start nginx\n$ systemctl -l status nginx\n\u25cf nginx.service - The nginx HTTP and reverse proxy server\n   Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)\n   Active: active (running) since \u6708 2016-05-16 19:21:17 JST; 31s ago\n  Process: 1741 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)\n  Process: 1739 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)\n  Process: 1737 ExecStartPre=/usr/bin/rm -f /run/nginx.pid (code=exited, status=0/SUCCESS)\n Main PID: 1744 (nginx)\n   CGroup: /system.slice/nginx.service\n           \u251c\u25001744 nginx: master process /usr/sbin/ngin\n           \u2514\u25001745 nginx: worker proces\n\n 5\u6708 16 19:21:17 server.com systemd[1]: Starting The nginx HTTP and reverse proxy server...\n 5\u6708 16 19:21:17 server.com nginx[1739]: nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\n 5\u6708 16 19:21:17 server.com nginx[1739]: nginx: configuration file /etc/nginx/nginx.conf test is successful\n 5\u6708 16 19:21:17 server.com systemd[1]: Failed to read PID from file /run/nginx.pid: Invalid argument\n 5\u6708 16 19:21:17 server.com systemd[1]: Started The nginx HTTP and reverse proxy server.\n```\n\n* \u52d5\u4f5c\u78ba\u8a8d\n\n ```\n$ ps -ef | grep nginx\nroot       1744      1  0 19:21 ?        00:00:00 nginx: master process /usr/sbin/nginx\nnginx      1745   1744  0 19:21 ?        00:00:00 nginx: worker process\n ```\n\n### firewall \u306e\u8a2d\u5b9a\n\n```\n$ sudo firewall-cmd --get-default-zone\npublic\n\n$ sudo firewall-cmd --list-services --zone=public\ndhcpv6-client ssh\n\n$ sudo firewall-cmd --add-service http --zone=public --permanent\nsuccess\n\n$ sudo firewall-cmd --add-service https --zone=public --permanent\nsuccess\n\n$ sudo firewall-cmd --reload\nsuccess\n\n$ sudo firewall-cmd --list-services --zone=public\ndhcpv6-client http ssh\n```\n\n### \u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\n\n```\n$ wget -O - -q http://localhost\n% wget -O - -q http://server.com\n```\n\n### nginx \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u72b6\u6cc1\u3092\u78ba\u8a8d\n \n```\n$ sudo semanage fcontext -l | grep nginx\n/etc/nginx(/.*)?                                   all files          system_u:object_r:httpd_config_t:s0\n/var/run/nginx.*                                   all files          system_u:object_r:httpd_var_run_t:s0\n/var/lib/nginx(/.*)?                               all files          system_u:object_r:httpd_var_lib_t:s0\n/var/log/nginx(/.*)?                               all files          system_u:object_r:httpd_log_t:s0\n/var/opt/rh/rh-nginx18/log(/.*)?                   all files          system_u:object_r:httpd_log_t:s0\n/etc/opt/rh/rh-nginx18/nginx(/.*)?                 all files          system_u:object_r:httpd_config_t:s0\n/usr/lib/systemd/system/nginx.*                    regular file       system_u:object_r:httpd_unit_file_t:s0\n/var/opt/rh/rh-nginx18/lib/nginx(/.*)?             all files          system_u:object_r:httpd_var_lib_t:s0\n/var/opt/rh/rh-nginx18/run/nginx(/.*)?             all files          system_u:object_r:httpd_var_run_t:s0\n/usr/sbin/nginx                                    regular file       system_u:object_r:httpd_exec_t:s0\n\n$ cd /etc/nginx\n$ ls -lZ\ndrwxr-xr-x. root root system_u:object_r:httpd_config_t:s0 conf.d\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 fastcgi_params\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 koi-utf\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 koi-win\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 mime.types\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 nginx.conf\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 scgi_params\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 uwsgi_params\n-rw-r--r--. root root system_u:object_r:httpd_config_t:s0 win-utf\n```\n\n### nginx.conf \u3092\u4fee\u6b63\n \n\u30d0\u30fc\u30c1\u30e3\u30eb\u30db\u30b9\u30c8\u306e\u8a2d\u5b9a\u306f /etc/nginx/conf.d/*.conf \u306b\u500b\u5225\u306b\u683c\u7d0d\u3059\u308b\u3002\n\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u62e1\u5f35\u5b50\u3092 *.stop \u306a\u3069\u306b\u5909\u66f4\u3059\u308b\u3002\n\n```nginx:/etc/nginx/nginx.conf\nFile Edit Options Buffers Tools Conf Help\n# For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    # for more information.\n    include /etc/nginx/conf.d/*.conf;\n}\n```\n\n### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u69cb\u6587\u30c1\u30a7\u30c3\u30af\n\n```\n$ sudo nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n```\n\n### nginx \u306e\u8d77\u52d5\u306e\u78ba\u8a8d\n\n```\n$ sudo systemctl restart nginx\n$ systemctl status nginx\n```\n\n### \u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\n\n```\n$ wget -O - -q http://localhost\n% wget -O - -q http://server.com\n```\n\n## MariaDB \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8a2d\u5b9a\n\n### \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ sudo yum -y install mariadb-server mariadb\n```\n\n### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4fee\u6b63\n\n```:/etc/my.cnf\n[mysqld]\nmax_allowed_packet = 128M\n```\n\n\u3053\u308c\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u30011M \u304f\u3089\u3044\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u3084\u308a\u53d6\u308a\u3067\u3001MySQL \u304c\u30a8\u30e9\u30fc\u3092\u51fa\u3057\u3066\u306f\u307e\u308b orz\n\n```:/etc/my.cnf.d/server.cnf\n[mysqld]\ncharacter-set-server = utf8\n```\n\n```/etc/my.cnf.d/mysql-clients.cnf\n[mysql]\ndefault-character-set = utf8\nshow-warnings\n```\n\n### \u8d77\u52d5\u306e\u78ba\u8a8d\n\n```\n$ sudo systemctl start mariadb.service\n$ systemctl status mariadb\n```\n\n### \u81ea\u52d5\u8d77\u52d5\u306e\u8a2d\u5b9a\n\n```\n$ sudo systemctl enable mariadb.service\n$ systemctl list-unit-files -t service | grep mariadb\nmariadb.service                             enabled\n```\n\n### mysql_secure_installation \u306e\u5b9f\u884c\n\n```\n$ sudo mysql_secure_installation\n...\nEnter current password for root (enter for none):  [enter]\n...\nSet root password? [Y/n] [Y]\nNew password: \nRe-enter new password: \n...\nRemove anonymous users? [Y/n] [Y]\n...\nDisallow root login remotely? [Y/n] [Y]\n...\nRemove test database and access to it? [Y/n] [Y]\n...\nReload privilege tables now? [Y/n] [Y]\n```\n\n", "tags": ["Rails", "nginx", "centos7", "mariadb"]}