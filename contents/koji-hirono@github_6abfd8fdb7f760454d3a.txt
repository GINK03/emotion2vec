{"context": " More than 1 year has passed since last update.http://qiita.com/items/1a35b75f5bd760cb40f8\nhttp://projecteuler.net/problem=15\n\u3053\u306e\u554f\u984c\u3092C\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n40 C 20 \u3092\u6c42\u3081\u308c\u3070\u3088\u3044\u306e\u3067\u3001\u7d20\u6570\u306e\u30ea\u30b9\u30c8\u3092\u56fa\u5b9a\u306b\u3057\u3066\u3082\u3088\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30a8\u30e9\u30c8\u30b9\u30c6\u30cd\u30b9\u306e\u7be9\u3067\u52d5\u7684\u306b\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n#include <inttypes.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nvoid sieve_prime(int *isprime, int n)\n{\n    int i, j;\n\n    isprime[0] = 0;\n    for (i = 1; i < n; i++)\n        isprime[i] = 1;\n\n    for (i = 1; i * i <= n; i++)\n        if (isprime[i])\n            for (j = i + 1; (i + 1) * j <= n; j++)\n                isprime[(i + 1) * j - 1] = 0;\n}\n\nint f_prime(int n, int p)\n{\n    int s;\n\n    for (s = 0; n /= p; s += n)\n            ;\n\n    return s;\n}\n\nuint64_t comb(int n, int m)\n{\n    int isprime[n];\n    uint64_t v;\n    int p;\n\n    sieve_prime(isprime, n);\n\n    v = 1;\n    for (p = 2; p <= n; p++)\n        if (isprime[p - 1])\n            v *= pow(p, f_prime(n, p) - f_prime(m, p) - f_prime(n - m, p));\n\n    return v;\n}\n\nint main(void)\n{\n    printf(\"%\"PRIu64\"\\n\", comb(40, 20));\n\n    return 0;\n}\n\nhttp://qiita.com/items/1a35b75f5bd760cb40f8\n\nhttp://projecteuler.net/problem=15\n\n\u3053\u306e\u554f\u984c\u3092C\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n40 C 20 \u3092\u6c42\u3081\u308c\u3070\u3088\u3044\u306e\u3067\u3001\u7d20\u6570\u306e\u30ea\u30b9\u30c8\u3092\u56fa\u5b9a\u306b\u3057\u3066\u3082\u3088\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30a8\u30e9\u30c8\u30b9\u30c6\u30cd\u30b9\u306e\u7be9\u3067\u52d5\u7684\u306b\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n```c\n#include <inttypes.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nvoid sieve_prime(int *isprime, int n)\n{\n    int i, j;\n\n    isprime[0] = 0;\n    for (i = 1; i < n; i++)\n        isprime[i] = 1;\n\n    for (i = 1; i * i <= n; i++)\n        if (isprime[i])\n            for (j = i + 1; (i + 1) * j <= n; j++)\n                isprime[(i + 1) * j - 1] = 0;\n}\n\nint f_prime(int n, int p)\n{\n    int s;\n\n    for (s = 0; n /= p; s += n)\n            ;\n\n    return s;\n}\n\nuint64_t comb(int n, int m)\n{\n    int isprime[n];\n    uint64_t v;\n    int p;\n\n    sieve_prime(isprime, n);\n\n    v = 1;\n    for (p = 2; p <= n; p++)\n        if (isprime[p - 1])\n            v *= pow(p, f_prime(n, p) - f_prime(m, p) - f_prime(n - m, p));\n\n    return v;\n}\n\nint main(void)\n{\n    printf(\"%\"PRIu64\"\\n\", comb(40, 20));\n\n    return 0;\n}\n```\n", "tags": ["C", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]}