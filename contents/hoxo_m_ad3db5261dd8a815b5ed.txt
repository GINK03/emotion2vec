{"tags": ["R", "\u6b63\u898f\u8868\u73fe"], "context": "\u3042\u308b\u6587\u5b57\u5217 x \u4e2d\u306b\u6587\u5b57\u5217\u30d9\u30af\u30c8\u30eb vec \u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u5217\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u306e\u6587\u5b57\u5217\u306b\u30d7\u30ec\u30d5\u30a3\u30af\u30b9\u3092\u3064\u3051\u305f\u3044\u3002\n\nR\nx <- \"hoge fuga hoge piyo\"\nvec <- c(\"fuga\", \"piyo\")\nprefix <- \"PREFIX.\"\n\nf(x, vec, prefix)\n#> \"hoge PREFIX.fuga hoge PREFIX.piyo\"\n\n\n\u3053\u308c\u3092\u884c\u3046\u65b9\u6cd5\u3068\u3057\u3066\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3046\u3068\u697d\u3067\u3042\u308b\u3002\n\nR\nf1 <- function(x, vec, prefix) {\n  pattern <- sprintf(\"(%s)\", paste(vec, collapse = \"|\"))\n  #> \"(fuga|piyo)\"\n  replacement <- sprintf(\"%s\\\\1\", prefix)\n  #> \"PREFIX.\\\\1\"\n  gsub(pattern, replacement, x)\n}\n\nf1(x, vec, prefix)\n#> \"hoge PREFIX.fuga hoge PREFIX.piyo\"\n\n\n\u3053\u306e\u6b63\u898f\u8868\u73fe\u306f vec \u3092\u4e00\u5ea6\u306b\u7f6e\u63db\u3067\u304d\u308b\u304c\u3001\u6b21\u306e\u3088\u3046\u306b vec\u5185\u306e\u6587\u5b57\u5217\u3072\u3068\u3064\u3072\u3068\u3064\u306b\u5bfe\u3057\u3066\u3053\u306e\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u305f\u7f6e\u63db\u3092 for \u3067\u56de\u3057\u3066\u3082\u826f\u3044\u3002\n\nR\nf2 <- function(x, vec, prefix) {\n  result <- x\n  replacement <- sprintf(\"%s\\\\1\", prefix)\n  for (item in vec) {\n    pattern <- sprintf(\"(%s)\", item)\n    result <- gsub(pattern, replacement, result)\n  }\n  result\n}\n\nf2(x, vec, prefix)\n#> \"hoge PREFIX.fuga hoge PREFIX.piyo\"\n\n\n\u4e00\u898b\u3001\u6b63\u898f\u8868\u73fe\u3067\u4e00\u767a\u3067\u7f6e\u63db\u3057\u305f\u65b9\u304c\u901f\u305d\u3046\u3060\u304c\u3001\u79c1\u304c\u4f7f\u3044\u305f\u3044\u306e\u306f vec \u306e\u30b5\u30a4\u30ba\u304c 800 \u301c 8000 \u7a0b\u5ea6\u306e\u5834\u5408\u3067\u3042\u308b\u3002\n\u901f\u5ea6\u6bd4\u8f03\u3057\u3066\u307f\u305f\u3002\n\nR\nlibrary(microbenchmark)\nset.seed(71)\n\nresult <- data.frame()\nfor (N in seq(100, 900, by = 100)) {\n  cat(N, \" \")\n  vec <- replicate(N, paste0(sample(letters, 10, replace = TRUE), collapse = \"\"))\n  x <- sprintf(\"hoge %s hoge %s\", sample(vec, 1), sample(vec, 1))\n  prefix <- \"PREFIX.\"\n\n  microbenchmark(\n    only_regex = f1(x, vec, prefix),\n    use_for = f2(x, vec, prefix)\n  ) -> res_bench\n\n  result <- rbind(result, data.frame(N, res_bench))\n}\n\nlibrary(ggplot2)\nggplot(result, aes(x = factor(N), y = time)) + \n  geom_boxplot(aes(fill=expr)) + ylim(0, 6e7)\n\n\n\n\u7d50\u679c\u306f\u3001vec \u306e\u9577\u3055\u304c 400 \u3092\u5883\u306b for \u3067\u56de\u3057\u305f\u65b9\u304c\u901f\u304f\u306a\u3063\u305f\u3002\n\u79c1\u306e\u4f7f\u7528\u7528\u9014\u306e\u5834\u5408\u306f for \u3092\u4f7f\u3063\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\u3060\u3002\nEnjoy!\n\n\u88dc\u8db3\n\u3061\u306a\u307f\u306b vec \u304c 1000 \u3092\u8d85\u3048\u308b\u3068\u4e00\u767a\u7f6e\u63db\u306e\u65b9\u306f\u30a8\u30e9\u30fc\u3068\u306a\u3063\u305f\u3002\n\nR\nN <- 1000\nvec <- replicate(N, paste0(sample(letters, 10, replace = TRUE), collapse = \"\"))\nx <- sprintf(\"hoge %s hoge %s\", sample(vec, 1), sample(vec, 1))\nprefix <- \"PREFIX.\"\n\npattern <- sprintf(\"(%s)\", paste(vec, collapse = \"|\"))\nreplacement <- sprintf(\"%s\\\\1\", prefix)\ngsub(pattern, replacement, x)\n\n\n\n\u7d50\u679c\n gsub(pattern, replacement, x) \u3067\u30a8\u30e9\u30fc: \n  assertion 'tree->num_tags == num_tags' failed in executing regexp: \n  file 'R-3.3.2/src/extra/tre/tre-compile.c', line 634\n\n\n\n\u8ffd\u8a18\n\n\u307b\u3080\u2026gsub\u304c\u91cd\u305f\u304f\u3066\u9045\u3044\u3063\u3066\u3053\u3068\u306a\u306e\u304b\u306a\uff1f \u3066\u3053\u3068\u306fstringr\u306estr_replace_all\u3067\u306f\u5909\u308f\u3063\u3066\u304f\u308b\u306e\u304b\u306a\uff1f\u2014 kazutan v3.3.2 (@kazutan) 2017\u5e741\u670812\u65e5\n\nstringr \u3092\u4f7f\u3046\u3068\u3069\u3046\u306a\u308b\u304b\u3060\u3063\u3066\uff1f \u3084\u3063\u3066\u307f\u3088\u3046\u3002\n\nR\nlibrary(stringr)\n\nf3 <- function(x, vec, prefix) {\n  pattern <- sprintf(\"(%s)\", paste(vec, collapse = \"|\"))\n  replacement <- sprintf(\"%s\\\\1\", prefix)\n  str_replace_all(x, pattern, replacement)\n}\nf3(x, vec, prefix)\n\n\n\n\u3061\u3087\u3063\u3071\u3084\u3060\u3063\u305f\u3002\nEnjoy!\n\u3042\u308b\u6587\u5b57\u5217 `x` \u4e2d\u306b\u6587\u5b57\u5217\u30d9\u30af\u30c8\u30eb `vec` \u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u5217\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u306e\u6587\u5b57\u5217\u306b\u30d7\u30ec\u30d5\u30a3\u30af\u30b9\u3092\u3064\u3051\u305f\u3044\u3002\n\n```r:R\nx <- \"hoge fuga hoge piyo\"\nvec <- c(\"fuga\", \"piyo\")\nprefix <- \"PREFIX.\"\n\nf(x, vec, prefix)\n#> \"hoge PREFIX.fuga hoge PREFIX.piyo\"\n```\n\n\u3053\u308c\u3092\u884c\u3046\u65b9\u6cd5\u3068\u3057\u3066\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3046\u3068\u697d\u3067\u3042\u308b\u3002\n\n```r:R\nf1 <- function(x, vec, prefix) {\n  pattern <- sprintf(\"(%s)\", paste(vec, collapse = \"|\"))\n  #> \"(fuga|piyo)\"\n  replacement <- sprintf(\"%s\\\\1\", prefix)\n  #> \"PREFIX.\\\\1\"\n  gsub(pattern, replacement, x)\n}\n\nf1(x, vec, prefix)\n#> \"hoge PREFIX.fuga hoge PREFIX.piyo\"\n```\n\n\u3053\u306e\u6b63\u898f\u8868\u73fe\u306f `vec` \u3092\u4e00\u5ea6\u306b\u7f6e\u63db\u3067\u304d\u308b\u304c\u3001\u6b21\u306e\u3088\u3046\u306b `vec`\u5185\u306e\u6587\u5b57\u5217\u3072\u3068\u3064\u3072\u3068\u3064\u306b\u5bfe\u3057\u3066\u3053\u306e\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u305f\u7f6e\u63db\u3092 `for` \u3067\u56de\u3057\u3066\u3082\u826f\u3044\u3002\n\n```r:R\nf2 <- function(x, vec, prefix) {\n  result <- x\n  replacement <- sprintf(\"%s\\\\1\", prefix)\n  for (item in vec) {\n    pattern <- sprintf(\"(%s)\", item)\n    result <- gsub(pattern, replacement, result)\n  }\n  result\n}\n\nf2(x, vec, prefix)\n#> \"hoge PREFIX.fuga hoge PREFIX.piyo\"\n```\n\n\u4e00\u898b\u3001\u6b63\u898f\u8868\u73fe\u3067\u4e00\u767a\u3067\u7f6e\u63db\u3057\u305f\u65b9\u304c\u901f\u305d\u3046\u3060\u304c\u3001\u79c1\u304c\u4f7f\u3044\u305f\u3044\u306e\u306f `vec` \u306e\u30b5\u30a4\u30ba\u304c 800 \u301c 8000 \u7a0b\u5ea6\u306e\u5834\u5408\u3067\u3042\u308b\u3002\n\n\u901f\u5ea6\u6bd4\u8f03\u3057\u3066\u307f\u305f\u3002\n\n```r:R\nlibrary(microbenchmark)\nset.seed(71)\n\nresult <- data.frame()\nfor (N in seq(100, 900, by = 100)) {\n  cat(N, \" \")\n  vec <- replicate(N, paste0(sample(letters, 10, replace = TRUE), collapse = \"\"))\n  x <- sprintf(\"hoge %s hoge %s\", sample(vec, 1), sample(vec, 1))\n  prefix <- \"PREFIX.\"\n\n  microbenchmark(\n    only_regex = f1(x, vec, prefix),\n    use_for = f2(x, vec, prefix)\n  ) -> res_bench\n  \n  result <- rbind(result, data.frame(N, res_bench))\n}\n\nlibrary(ggplot2)\nggplot(result, aes(x = factor(N), y = time)) + \n  geom_boxplot(aes(fill=expr)) + ylim(0, 6e7)\n```\n\n![](https://qiita-image-store.s3.amazonaws.com/0/2570/edcc7f28-3355-b7cf-1a0a-1a6804f38ec1.png)\n\n\u7d50\u679c\u306f\u3001`vec` \u306e\u9577\u3055\u304c 400 \u3092\u5883\u306b `for` \u3067\u56de\u3057\u305f\u65b9\u304c\u901f\u304f\u306a\u3063\u305f\u3002\n\n\u79c1\u306e\u4f7f\u7528\u7528\u9014\u306e\u5834\u5408\u306f `for` \u3092\u4f7f\u3063\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\u3060\u3002\n\nEnjoy!\n\n## \u88dc\u8db3\n\n\u3061\u306a\u307f\u306b `vec` \u304c 1000 \u3092\u8d85\u3048\u308b\u3068\u4e00\u767a\u7f6e\u63db\u306e\u65b9\u306f\u30a8\u30e9\u30fc\u3068\u306a\u3063\u305f\u3002\n\n```r:R\nN <- 1000\nvec <- replicate(N, paste0(sample(letters, 10, replace = TRUE), collapse = \"\"))\nx <- sprintf(\"hoge %s hoge %s\", sample(vec, 1), sample(vec, 1))\nprefix <- \"PREFIX.\"\n\npattern <- sprintf(\"(%s)\", paste(vec, collapse = \"|\"))\nreplacement <- sprintf(\"%s\\\\1\", prefix)\ngsub(pattern, replacement, x)\n```\n\n```:\u7d50\u679c\n gsub(pattern, replacement, x) \u3067\u30a8\u30e9\u30fc: \n  assertion 'tree->num_tags == num_tags' failed in executing regexp: \n  file 'R-3.3.2/src/extra/tre/tre-compile.c', line 634\n```\n\n## \u8ffd\u8a18\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">\u307b\u3080\u2026gsub\u304c\u91cd\u305f\u304f\u3066\u9045\u3044\u3063\u3066\u3053\u3068\u306a\u306e\u304b\u306a\uff1f \u3066\u3053\u3068\u306fstringr\u306estr_replace_all\u3067\u306f\u5909\u308f\u3063\u3066\u304f\u308b\u306e\u304b\u306a\uff1f</p>&mdash; kazutan v3.3.2 (@kazutan) <a href=\"https://twitter.com/kazutan/status/819684375402926080\">2017\u5e741\u670812\u65e5</a></blockquote> <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n**stringr** \u3092\u4f7f\u3046\u3068\u3069\u3046\u306a\u308b\u304b\u3060\u3063\u3066\uff1f \u3084\u3063\u3066\u307f\u3088\u3046\u3002\n\n```r:R\nlibrary(stringr)\n\nf3 <- function(x, vec, prefix) {\n  pattern <- sprintf(\"(%s)\", paste(vec, collapse = \"|\"))\n  replacement <- sprintf(\"%s\\\\1\", prefix)\n  str_replace_all(x, pattern, replacement)\n}\nf3(x, vec, prefix)\n```\n\n![](https://qiita-image-store.s3.amazonaws.com/0/2570/bfa47b78-d77b-ffa6-2992-a221620ddbc6.png)\n\n\u3061\u3087\u3063\u3071\u3084\u3060\u3063\u305f\u3002\n\nEnjoy!\n"}