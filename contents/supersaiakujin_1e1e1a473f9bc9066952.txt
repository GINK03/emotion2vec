{"context": " More than 1 year has passed since last update.\n\nImage Filtering\n\nblur\n\ncv2.blur(src, ksize[, dst[, anchor[, borderType]]]) \n\nGaussianBlur\n\ncv2.GaussianBlur(src, ksize, sigmaX[, dst[, sigmaY[, borderType]]])\n\nmedianBlur\n\ncv2.medianBlur(src, ksize[, dst]) \n\nbilateralFilter\n\ncv2.bilateralFilter(src, d, sigmaColor, sigmaSpace[, dst[, borderType]])\n\n\npython\nimport cv2\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nI = cv2.imread('./data/SIDBA/Lenna.bmp')\n\n# blur\nIb = cv2.blur(I, ksize=(5,5))\n# Gaussian\nIg = cv2.GaussianBlur(I, ksize=(5,5),sigmaX=2)\n# median\nIm = cv2.medianBlur(I, ksize=5)\n# bilateral\nIbi = cv2.bilateralFilter(I, d=5, sigmaColor=5, sigmaSpace=2)\n\nfig, axes = plt.subplots(nrows=2, ncols=3, figsize=(15,10))\n\naxes[0,0].imshow(cv2.cvtColor(I, cv2.COLOR_BGR2RGB))\naxes[0,0].set_title('original')\naxes[0,0].set(adjustable='box-forced',aspect='equal')\naxes[0,0].get_xaxis().set_visible(False)\naxes[0,0].get_yaxis().set_visible(False)\n\naxes[0,1].imshow(cv2.cvtColor(Ib, cv2.COLOR_BGR2RGB))\naxes[0,1].set_title('blur')\naxes[0,1].set(adjustable='box-forced',aspect='equal')\naxes[0,1].get_xaxis().set_visible(False)\naxes[0,1].get_yaxis().set_visible(False)\n\naxes[0,2].imshow(cv2.cvtColor(Ig, cv2.COLOR_BGR2RGB))\naxes[0,2].set_title('GaussianBlur')\naxes[0,2].set(adjustable='box-forced',aspect='equal')\naxes[0,2].get_xaxis().set_visible(False)\naxes[0,2].get_yaxis().set_visible(False)\n\naxes[1,0].imshow(cv2.cvtColor(Im, cv2.COLOR_BGR2RGB))\naxes[1,0].set_title('medianBlur')\naxes[1,0].set(adjustable='box-forced',aspect='equal')\naxes[1,0].get_xaxis().set_visible(False)\naxes[1,0].get_yaxis().set_visible(False)\n\naxes[1,1].imshow(cv2.cvtColor(Ibi, cv2.COLOR_BGR2RGB))\naxes[1,1].set_title('bilateralFilter')\naxes[1,1].set(adjustable='box-forced',aspect='equal')\naxes[1,1].get_xaxis().set_visible(False)\naxes[1,1].get_yaxis().set_visible(False)\n\nfig.delaxes(axes[1,2])\nfig.show()\n\n\n\n# Image Filtering\n\n#### [blur](http://docs.opencv.org/3.0-last-rst/modules/imgproc/doc/filtering.html#blur)\ncv2.blur(src, ksize[, dst[, anchor[, borderType]]]) \n\n#### [GaussianBlur](http://docs.opencv.org/3.0-last-rst/modules/imgproc/doc/filtering.html#gaussianblur)\ncv2.GaussianBlur(src, ksize, sigmaX[, dst[, sigmaY[, borderType]]])\n\n#### [medianBlur](http://docs.opencv.org/3.0-last-rst/modules/imgproc/doc/filtering.html#medianblur)\ncv2.medianBlur(src, ksize[, dst]) \n\n#### [bilateralFilter](http://docs.opencv.org/3.0-last-rst/modules/imgproc/doc/filtering.html#bilateralfilter)\ncv2.bilateralFilter(src, d, sigmaColor, sigmaSpace[, dst[, borderType]])\n\n\n![filter.png](https://qiita-image-store.s3.amazonaws.com/0/100523/41f309fc-b7a4-abc4-6a3e-f148600dccb8.png)\n\n```lang:python\nimport cv2\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nI = cv2.imread('./data/SIDBA/Lenna.bmp')\n\n# blur\nIb = cv2.blur(I, ksize=(5,5))\n# Gaussian\nIg = cv2.GaussianBlur(I, ksize=(5,5),sigmaX=2)\n# median\nIm = cv2.medianBlur(I, ksize=5)\n# bilateral\nIbi = cv2.bilateralFilter(I, d=5, sigmaColor=5, sigmaSpace=2)\n\nfig, axes = plt.subplots(nrows=2, ncols=3, figsize=(15,10))\n\naxes[0,0].imshow(cv2.cvtColor(I, cv2.COLOR_BGR2RGB))\naxes[0,0].set_title('original')\naxes[0,0].set(adjustable='box-forced',aspect='equal')\naxes[0,0].get_xaxis().set_visible(False)\naxes[0,0].get_yaxis().set_visible(False)\n\naxes[0,1].imshow(cv2.cvtColor(Ib, cv2.COLOR_BGR2RGB))\naxes[0,1].set_title('blur')\naxes[0,1].set(adjustable='box-forced',aspect='equal')\naxes[0,1].get_xaxis().set_visible(False)\naxes[0,1].get_yaxis().set_visible(False)\n\naxes[0,2].imshow(cv2.cvtColor(Ig, cv2.COLOR_BGR2RGB))\naxes[0,2].set_title('GaussianBlur')\naxes[0,2].set(adjustable='box-forced',aspect='equal')\naxes[0,2].get_xaxis().set_visible(False)\naxes[0,2].get_yaxis().set_visible(False)\n\naxes[1,0].imshow(cv2.cvtColor(Im, cv2.COLOR_BGR2RGB))\naxes[1,0].set_title('medianBlur')\naxes[1,0].set(adjustable='box-forced',aspect='equal')\naxes[1,0].get_xaxis().set_visible(False)\naxes[1,0].get_yaxis().set_visible(False)\n\naxes[1,1].imshow(cv2.cvtColor(Ibi, cv2.COLOR_BGR2RGB))\naxes[1,1].set_title('bilateralFilter')\naxes[1,1].set(adjustable='box-forced',aspect='equal')\naxes[1,1].get_xaxis().set_visible(False)\naxes[1,1].get_yaxis().set_visible(False)\n\nfig.delaxes(axes[1,2])\nfig.show()\n```\n", "tags": ["Python", "OpenCV"]}