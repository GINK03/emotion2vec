{"context": "React \u306f Flux \u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u5229\u7528\u3059\u308b\u3068\u52b9\u679c\u7684\u3067\u3059\u3002\nRedux \u306f Flux \u3092\u53c2\u8003\u306b 3\u3064\u306e\u539f\u5247 \u3092\u5f37\u8abf\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u524d\u56de \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b Redux \u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nLearning\n\nRedux \u306e Action, Reducer, Store \u306e Data Flow \u3092\u5229\u7528\u3059\u308b\u3002\nReact \u3068 Redux \u3067\u9023\u643a connect \u3092\u5229\u7528\u3059\u308b\u3002\n\n\nEnvironment\n\nnode: v4.4.5\nnpm: v3.9.6\n\n\nComment Box Form\n\n\u5b8c\u6210\u3055\u308c\u308b Source Code \u306e\u30d5\u30a1\u30a4\u30eb\u30ea\u30b9\u30c8\u3067\u3059\u3002\n\n$ tree -a -I node_modules\n.\n\u251c\u2500\u2500 .babelrc\n\u251c\u2500\u2500 app.js\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 index.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 style.css\n\u2514\u2500\u2500 webpack.config.js\n\nLet's hands-on\n\nSetup application\n\n\ngit clone \u30b3\u30de\u30f3\u30c9\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nnpm install \u30b3\u30de\u30f3\u30c9\u3067\u4f9d\u5b58\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n$ git clone https://github.com/ogom/react-comment-box-example.git\n$ cd react-comment-box-example\n$ git checkout react\n$ npm install\n\n\nStart HTTP Server\n\n\nnpm start \u30b3\u30de\u30f3\u30c9\u3067 Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u30d6\u30e9\u30a6\u30b6\u3067 http://localhost:4000 \u3092\u30ed\u30fc\u30c9\u3059\u308b\u3068 Comment Box Example \u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n$ npm start\n$ open http://localhost:4000\n\n(API Server \u306f React Tutorial Example (Express) \u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002)\n\nAdd Redux package\n\nRedux \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n$ npm install redux --save-dev\n\n\nAdd Redux\n\n\ncreateStore() \u3067 Reducer \u3092\u8a2d\u5b9a\u3057\u3066 Store \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\n\nstore.dispatch() \u3067 Acstion \u3092\u5b9f\u884c\u3059\u308b\u3068 State \u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\n\n\n\n\nindex.js\n+var Redux = require('redux');\n+var createStore = Redux.createStore;\n+var store = createStore(function(state, action) {\n+  if (state === undefined) {\n+    return [];\n+  }\n+\n+  switch (action.type) {\n+  case 'show_comments':\n+    return action.comments;\n+  case 'add_comment':\n+    return state.concat([action.comment]);\n+  default:\n+    return state;\n+  }\n+});\n+store.subscribe(function () {\n+  return console.log(store.getState());\n+});\n+store.dispatch({type: 'show_comments', comments: data});\n+store.dispatch({type: 'add_comment', comment: {author: \"foo\", text: \"*bar*\"}});\n\n\n\n\nstore.getState() \u3092 console.log \u3067\u51fa\u529b\u3059\u308b\u3068 State \u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\nAdd React Redux package\n\nReactRedux \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n$ npm install react-redux --save-dev\n\n\nAdd Provider\n\n\nProvider \u306b store \u3092\u8a2d\u5b9a\u3057\u3066 React \u3068 Redux \u3092\u9023\u643a\u3057\u307e\u3059\u3002\n\n\nindex.js\n-var data = [\n-  {id: 1, author: \"Pete Hunt\", text: \"This is one comment\"},\n-  {id: 2, author: \"Jordan Walke\", text: \"This is *another* comment\"}\n-];\n-\n-store.subscribe(function () {\n-  return console.log(store.getState());\n-});\n-store.dispatch({type: 'show_comments', comments: data});\n-store.dispatch({type: 'add_comment', comment: {author: \"foo\", text: \"*bar*\"}});\n+\n+var ReactRedux = require('react-redux');\n+var Provider = ReactRedux.Provider;\n\n ReactDOM.render(\n-  <CommentBox url=\"http://localhost:3000/api/comments\" pollInterval={2000} />,\n+  <Provider store={store}>\n+    <CommentBox url=\"http://localhost:3000/api/comments\" pollInterval={2000} />\n+  </Provider>,\n   document.getElementById('content')\n );\n\n\n\nAdd Connect\n\n\nmapStateToProps \u3067 state \u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\n\nmapDispatchToProps \u3067 dispatch \u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\n\nconnect() \u3067\u30de\u30c3\u30d4\u30f3\u30b0\u3068\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n\napp.js\n-module.exports = CommentBox;\n+var ReactRedux = require('react-redux');\n+var connect = ReactRedux.connect;\n+\n+var mapStateToProps = function(state) {\n+  return {data: state};\n+};\n+\n+var mapDispatchToProps = function(dispatch) {\n+  return {\n+    showComments: function(comments) {\n+      dispatch({type: 'show_comments', comments: comments});\n+    },\n+    addComment: function(comment) {\n+      dispatch({type: 'add_comment', comment: comment});\n+    }\n+  };\n+};\n+\n+module.exports = connect(mapStateToProps, mapDispatchToProps)(CommentBox);\n\n\n\nChange Show Comments\n\n\nsuccess \u306e this.setState \u3092 this.props.showComments \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\nrender \u306e this.state.data \u3092 this.props.data \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n\napp.js\n var CommentBox = React.createClass({\n   loadCommentsFromServer: function() {\n     $.ajax({\n       url: this.props.url,\n       dataType: 'json',\n       cache: false,\n       success: function(data) {\n-        this.setState({data: data});\n+        this.props.showComments(data);\n       }.bind(this),\n       error: function(xhr, status, err) {\n         console.error(this.props.url, status, err.toString());\n       }.bind(this)\n     });\n   },\n   render: function() {\n     return (\n       <div className=\"commentBox\">\n         <h1>Comments</h1>\n-        <CommentList data={this.state.data} />\n+        <CommentList data={this.props.data} />\n         <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n       </div>\n     );\n   }\n });\n\n\n\nChange Add Comment\n\n\nnewComments \u306e this.setState \u3092 this.props.addComment \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\nsuccess \u306e this.setState \u3092 this.props.showComments \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\nerror \u306e this.setState \u3082 this.props.showComments \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n\napp.js\n var CommentBox = React.createClass({\n     // id generated by the server. In a production application you would likely\n     // not use Date.now() for this and would have a more robust system in place.\n     comment.id = Date.now();\n-    var newComments = comments.concat([comment]);\n-    this.setState({data: newComments});\n+    this.props.addComment(comment);\n     $.ajax({\n       url: this.props.url,\n       dataType: 'json',\n       type: 'POST',\n       data: comment,\n       success: function(data) {\n-        this.setState({data: data});\n+        this.props.showComments(data);\n       }.bind(this),\n       error: function(xhr, status, err) {\n-        this.setState({data: comments});\n+        this.props.showComments(comments);\n         console.error(this.props.url, status, err.toString());\n       }.bind(this)\n     });\n\n\nCongrats!\n\nRedux Source\nRedux \u306f Data Flow \u3092 Action, Reducer, Store \u306b\u8cac\u52d9\u3092\u5206\u96e2\u3059\u308b\u30d1\u30e9\u30c0\u30a4\u30e0\u3067\u3059\u3002\ncreateStore \u306e Source code \u3092\u8aad\u3080\u3068\u3001\u3060\u3044\u305f\u3044\u306e\u6d41\u308c\u304c\u30a4\u30e1\u30fc\u30b8\u3067\u304d\u307e\u3059\u3002\n\nExample\nRedux \u306f React \u304c\u306a\u304f\u3066\u3082\u5358\u72ec\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nJS Bin \u3067\u52d5\u4f5c\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\nHTML\n\n\ncdnjs.cloudflare.com \u306e redux \u3092\u53c2\u7167\u3057\u307e\u3059\u3002\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>JS Bin</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/3.5.2/redux.min.js\"></script>\n  </head>\n  <body>\n  </body>\n</html>\n\n\nJavaScrit\n\n\nvar store = createStore() \u306e \u5f15\u6570\u304c reducer \u3067\u3059\u3002\n\nhttps://github.com/reactjs/redux/blob/v3.5.2/src/createStore.js#L39\n\n\n\nstore.dispatch() \u306e \u5f15\u6570\u304c action \u3067\u3059\u3002\n\nhttps://github.com/reactjs/redux/blob/v3.5.2/src/createStore.js#L149\n\n\n\nvar createStore = Redux.createStore;\nvar store = createStore(function(state, action) {\n  if (state === undefined) {\n    return 0;\n  }\n\n  switch (action.type) {\n  case 'PLUS':\n    return state + action.number;\n  case 'MINUS':\n    return state - action.number;\n  default:\n    return state;\n  }\n});\n\nstore.subscribe(function () {\n  return console.log(store.getState());\n});\n\nstore.dispatch({type: 'PLUS', number: 2});\nstore.dispatch({type: 'PLUS', number: 3});\nstore.dispatch({type: 'MINUS', number: 4});\nstore.dispatch({type: 'DEFAULT'});\n\n\nConsole\n\n\u6570\u5024\u304c\u5897\u52a0\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3084\u6e1b\u5c11\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3067 State \u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\nECMAScript 2015\nECMAScript 2015 \u306a\u3089\u3082\u3063\u3068\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nimport {createStore} from 'redux'\nconst store = createStore((state = 1, action) => action.type === 'PLUS' ? state + 1 : state - 1)\nstore.subscribe(() => console.log(store.getState()))\nstore.dispatch({type: 'PLUS'})\n\n\nData Flow \u3092 Action, Reducer, Store \u306b\u5206\u96e2\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306f React tutorial \u3067 ECMAScript 2015 \u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\uff01\n[React](https://facebook.github.io/react/) \u306f [Flux](http://facebook.github.io/flux/) \u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u5229\u7528\u3059\u308b\u3068\u52b9\u679c\u7684\u3067\u3059\u3002\n[Redux](http://redux.js.org/) \u306f *Flux* \u3092\u53c2\u8003\u306b [3\u3064\u306e\u539f\u5247](http://redux.js.org/docs/introduction/ThreePrinciples.html) \u3092\u5f37\u8abf\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n[\u524d\u56de](http://qiita.com/ogomr/items/9eb64ff5f7d4fcd08514) \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b *Redux* \u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## Learning\n\n* Redux \u306e *Action, Reducer, Store* \u306e *Data Flow* \u3092\u5229\u7528\u3059\u308b\u3002\n* React \u3068 Redux \u3067\u9023\u643a *connect* \u3092\u5229\u7528\u3059\u308b\u3002\n\n## Environment\n\n* node: v4.4.5\n* npm: v3.9.6\n\n## Comment Box Form\n\n* \u5b8c\u6210\u3055\u308c\u308b [Source Code](https://github.com/ogom/react-comment-box-example/tree/redux) \u306e\u30d5\u30a1\u30a4\u30eb\u30ea\u30b9\u30c8\u3067\u3059\u3002\n\n```bash\n$ tree -a -I node_modules\n.\n\u251c\u2500\u2500 .babelrc\n\u251c\u2500\u2500 app.js\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 index.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 style.css\n\u2514\u2500\u2500 webpack.config.js\n```\n\n*Let's hands-on*\n\n### Setup application\n\n* `git clone` \u30b3\u30de\u30f3\u30c9\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n* `npm install` \u30b3\u30de\u30f3\u30c9\u3067\u4f9d\u5b58\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash\n$ git clone https://github.com/ogom/react-comment-box-example.git\n$ cd react-comment-box-example\n$ git checkout react\n$ npm install\n```\n\n### Start HTTP Server\n\n* `npm start` \u30b3\u30de\u30f3\u30c9\u3067 *Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3* \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n* \u30d6\u30e9\u30a6\u30b6\u3067 http://localhost:4000 \u3092\u30ed\u30fc\u30c9\u3059\u308b\u3068 **Comment Box Example** \u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ npm start\n$ open http://localhost:4000\n```\n\n(API Server \u306f [React Tutorial Example (Express)](http://qiita.com/ogomr/items/b90c68764c3c75cf501e) \u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002)\n\n### Add Redux package\n\n* Redux \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash\n$ npm install redux --save-dev\n```\n\n### Add Redux\n\n* `createStore()` \u3067 *Reducer* \u3092\u8a2d\u5b9a\u3057\u3066 *Store* \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n  * `store.dispatch()` \u3067 *Acstion* \u3092\u5b9f\u884c\u3059\u308b\u3068 *State* \u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\n\n```diff:index.js\n+var Redux = require('redux');\n+var createStore = Redux.createStore;\n+var store = createStore(function(state, action) {\n+  if (state === undefined) {\n+    return [];\n+  }\n+\n+  switch (action.type) {\n+  case 'show_comments':\n+    return action.comments;\n+  case 'add_comment':\n+    return state.concat([action.comment]);\n+  default:\n+    return state;\n+  }\n+});\n+store.subscribe(function () {\n+  return console.log(store.getState());\n+});\n+store.dispatch({type: 'show_comments', comments: data});\n+store.dispatch({type: 'add_comment', comment: {author: \"foo\", text: \"*bar*\"}});\n```\n\n* `store.getState()` \u3092 `console.log` \u3067\u51fa\u529b\u3059\u308b\u3068 *State* \u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![redux_comment](https://dl.dropboxusercontent.com/u/14690051/images/notes/lang/node/comment-box/redux_comment.png)\n\n### Add React Redux package\n\n* ReactRedux \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash\n$ npm install react-redux --save-dev\n```\n\n### Add Provider\n\n* `Provider` \u306b `store` \u3092\u8a2d\u5b9a\u3057\u3066 *React* \u3068 *Redux* \u3092\u9023\u643a\u3057\u307e\u3059\u3002\n\n```diff:index.js\n-var data = [\n-  {id: 1, author: \"Pete Hunt\", text: \"This is one comment\"},\n-  {id: 2, author: \"Jordan Walke\", text: \"This is *another* comment\"}\n-];\n-\n-store.subscribe(function () {\n-  return console.log(store.getState());\n-});\n-store.dispatch({type: 'show_comments', comments: data});\n-store.dispatch({type: 'add_comment', comment: {author: \"foo\", text: \"*bar*\"}});\n+\n+var ReactRedux = require('react-redux');\n+var Provider = ReactRedux.Provider;\n\n ReactDOM.render(\n-  <CommentBox url=\"http://localhost:3000/api/comments\" pollInterval={2000} />,\n+  <Provider store={store}>\n+    <CommentBox url=\"http://localhost:3000/api/comments\" pollInterval={2000} />\n+  </Provider>,\n   document.getElementById('content')\n );\n```\n\n### Add Connect\n\n* `mapStateToProps` \u3067 `state` \u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\n* `mapDispatchToProps` \u3067 `dispatch` \u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\n* `connect()` \u3067\u30de\u30c3\u30d4\u30f3\u30b0\u3068\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n```diff:app.js\n-module.exports = CommentBox;\n+var ReactRedux = require('react-redux');\n+var connect = ReactRedux.connect;\n+\n+var mapStateToProps = function(state) {\n+  return {data: state};\n+};\n+\n+var mapDispatchToProps = function(dispatch) {\n+  return {\n+    showComments: function(comments) {\n+      dispatch({type: 'show_comments', comments: comments});\n+    },\n+    addComment: function(comment) {\n+      dispatch({type: 'add_comment', comment: comment});\n+    }\n+  };\n+};\n+\n+module.exports = connect(mapStateToProps, mapDispatchToProps)(CommentBox);\n```\n\n### Change Show Comments\n\n* `success` \u306e `this.setState` \u3092 `this.props.showComments` \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n* `render` \u306e `this.state.data` \u3092 `this.props.data` \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n```diff:app.js\n var CommentBox = React.createClass({\n   loadCommentsFromServer: function() {\n     $.ajax({\n       url: this.props.url,\n       dataType: 'json',\n       cache: false,\n       success: function(data) {\n-        this.setState({data: data});\n+        this.props.showComments(data);\n       }.bind(this),\n       error: function(xhr, status, err) {\n         console.error(this.props.url, status, err.toString());\n       }.bind(this)\n     });\n   },\n   render: function() {\n     return (\n       <div className=\"commentBox\">\n         <h1>Comments</h1>\n-        <CommentList data={this.state.data} />\n+        <CommentList data={this.props.data} />\n         <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n       </div>\n     );\n   }\n });\n```\n\n### Change Add Comment\n\n* `newComments` \u306e `this.setState` \u3092 `this.props.addComment` \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n* `success` \u306e `this.setState` \u3092 `this.props.showComments` \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n* `error` \u306e `this.setState` \u3082 `this.props.showComments` \u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n```diff:app.js\n var CommentBox = React.createClass({\n     // id generated by the server. In a production application you would likely\n     // not use Date.now() for this and would have a more robust system in place.\n     comment.id = Date.now();\n-    var newComments = comments.concat([comment]);\n-    this.setState({data: newComments});\n+    this.props.addComment(comment);\n     $.ajax({\n       url: this.props.url,\n       dataType: 'json',\n       type: 'POST',\n       data: comment,\n       success: function(data) {\n-        this.setState({data: data});\n+        this.props.showComments(data);\n       }.bind(this),\n       error: function(xhr, status, err) {\n-        this.setState({data: comments});\n+        this.props.showComments(comments);\n         console.error(this.props.url, status, err.toString());\n       }.bind(this)\n     });\n```\n\n*Congrats!*\n\n## Redux Source\n\nRedux \u306f *Data Flow* \u3092 **Action**, **Reducer**, **Store** \u306b\u8cac\u52d9\u3092\u5206\u96e2\u3059\u308b\u30d1\u30e9\u30c0\u30a4\u30e0\u3067\u3059\u3002\n`createStore` \u306e Source code \u3092\u8aad\u3080\u3068\u3001\u3060\u3044\u305f\u3044\u306e\u6d41\u308c\u304c\u30a4\u30e1\u30fc\u30b8\u3067\u304d\u307e\u3059\u3002\n\n### Example\n\nRedux \u306f React \u304c\u306a\u304f\u3066\u3082\u5358\u72ec\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n[JS Bin](http://jsbin.com) \u3067\u52d5\u4f5c\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n#### HTML\n\n* `cdnjs.cloudflare.com` \u306e `redux` \u3092\u53c2\u7167\u3057\u307e\u3059\u3002\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>JS Bin</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/3.5.2/redux.min.js\"></script>\n  </head>\n  <body>\n  </body>\n</html>\n```\n\n#### JavaScrit\n\n* `var store = createStore()` \u306e \u5f15\u6570\u304c `reducer` \u3067\u3059\u3002\n  * https://github.com/reactjs/redux/blob/v3.5.2/src/createStore.js#L39\n\n* `store.dispatch()` \u306e \u5f15\u6570\u304c `action` \u3067\u3059\u3002\n  * https://github.com/reactjs/redux/blob/v3.5.2/src/createStore.js#L149\n\n```js\nvar createStore = Redux.createStore;\nvar store = createStore(function(state, action) {\n  if (state === undefined) {\n    return 0;\n  }\n\n  switch (action.type) {\n  case 'PLUS':\n    return state + action.number;\n  case 'MINUS':\n    return state - action.number;\n  default:\n    return state;\n  }\n});\n\nstore.subscribe(function () {\n  return console.log(store.getState());\n});\n\nstore.dispatch({type: 'PLUS', number: 2});\nstore.dispatch({type: 'PLUS', number: 3});\nstore.dispatch({type: 'MINUS', number: 4});\nstore.dispatch({type: 'DEFAULT'});\n```\n\n#### Console\n\n* \u6570\u5024\u304c\u5897\u52a0\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3084\u6e1b\u5c11\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3067 **State** \u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n![redux_number](https://dl.dropboxusercontent.com/u/14690051/images/notes/lang/node/comment-box/redux_number.png)\n\n#### ECMAScript 2015\n\nECMAScript 2015 \u306a\u3089\u3082\u3063\u3068\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```js\nimport {createStore} from 'redux'\nconst store = createStore((state = 1, action) => action.type === 'PLUS' ? state + 1 : state - 1)\nstore.subscribe(() => console.log(store.getState()))\nstore.dispatch({type: 'PLUS'})\n```\n\n----\n\n*Data Flow* \u3092 **Action**, **Reducer**, **Store** \u306b\u5206\u96e2\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306f [React tutorial \u3067 ECMAScript 2015](http://qiita.com/ogomr/items/3f0d7a35d5d0184db019) \u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\uff01\n", "tags": ["Node.js", "redux", "reactjs"]}