{"context": "Flow[T].statefulMapConcat \u3092\u4f7f\u3046\u3002\u72b6\u614b\u3092\u6301\u3063\u305fActor\u3092Stream\u3067\u66f8\u304d\u76f4\u3057\u305f\u3044\u3068\u304d\u306b\u826f\u3055\u305d\u3046\u3002\nimport akka.actor.ActorSystem\nimport akka.stream.ActorMaterializer\nimport akka.stream.scaladsl.{ Flow, Source }\n\nimplicit val system = ActorSystem()\nimplicit val executor = system.dispatcher\nimplicit val materializer = ActorMaterializer()\n\nval flow1: Flow[Int, Int, NotUsed] = Flow[Int].map(_ * 10)\nval flow2: Flow[Int, Int, NotUsed] = Flow[Int].filter(_ % 3 == 0)\nval flow3: Flow[Int, Int, NotUsed] = Flow[Int].statefulMapConcat { () =>\n  var sequence = 0\n  i =>\n    sequence = sequence + i\n    List(sequence)\n}\n\nSource(1 to 10)\n  .via(flow1)\n  .via(flow2)\n  .via(flow3)\n  .runForeach(println)\n\n\n\u7d50\u679c\n30\n90\n180\n\n\n`Flow[T].statefulMapConcat` \u3092\u4f7f\u3046\u3002\u72b6\u614b\u3092\u6301\u3063\u305fActor\u3092Stream\u3067\u66f8\u304d\u76f4\u3057\u305f\u3044\u3068\u304d\u306b\u826f\u3055\u305d\u3046\u3002\n\n```scala\nimport akka.actor.ActorSystem\nimport akka.stream.ActorMaterializer\nimport akka.stream.scaladsl.{ Flow, Source }\n\nimplicit val system = ActorSystem()\nimplicit val executor = system.dispatcher\nimplicit val materializer = ActorMaterializer()\n\nval flow1: Flow[Int, Int, NotUsed] = Flow[Int].map(_ * 10)\nval flow2: Flow[Int, Int, NotUsed] = Flow[Int].filter(_ % 3 == 0)\nval flow3: Flow[Int, Int, NotUsed] = Flow[Int].statefulMapConcat { () =>\n  var sequence = 0\n  i =>\n    sequence = sequence + i\n    List(sequence)\n}\n\nSource(1 to 10)\n  .via(flow1)\n  .via(flow2)\n  .via(flow3)\n  .runForeach(println)\n```\n\n```plain:\u7d50\u679c\n30\n90\n180\n```\n", "tags": ["Scala", "Akka2.4.10", "Akka-Stream"]}