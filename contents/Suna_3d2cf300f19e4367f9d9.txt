{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\n\u81ea\u5206\u3067\u66f8\u3044\u3066\u304a\u3044\u3066\u306a\u3093\u3067\u3059\u304c\u3001\u307e\u3060\u3075\u308f\u3075\u308f\u3068\u3057\u305f\u7406\u89e3\u306a\u305f\u3081\u3001\u30bf\u30a4\u30c8\u30eb\u306f\u3053\u308c\u3067\u5927\u4e08\u592b\u3060\u308d\u3046\u304b\uff1f\u3068\u4e0d\u5b89\u3067\u3059\u3002\n\u53d6\u308a\u6025\u304e\u3001ALMemory\u306e\u30a4\u30d9\u30f3\u30c8\u306b\u95a2\u3057\u3066\u3001\u8a66\u3057\u3066\u307f\u305f\u5185\u5bb9\u3092\u8a18\u9332\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n\u5404\u30c4\u30fc\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\n\n\u30c4\u30fc\u30eb\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\n\n\nC++ SDK\nnaoqi-sdk-2.0.5.3\n\n\nPython SDK\npynaoqi-python2.7-2.0.5.3\n\n\nChoregraphe\n2.1.2.17\n\n\n\n\n\u72ec\u81eaALMemory\u30a4\u30d9\u30f3\u30c8\u306e\u4f5c\u6210\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f5c\u6210\n$ qisrc create HelloEventModule\n\n\n\u30b3\u30fc\u30c9\u306e\u4fee\u6b63\n\nhelloevent.h\n\nhelloevent.h\n#ifndef HELLO_EVENT_H\n#define HELLO_EVENT_H\n\n#define BOOST_SIGNALS_NO_DEPRECATION_WARNING\n\n#include <boost/shared_ptr.hpp>\n#include <alcommon/almodule.h>\n#include <alproxies/almemoryproxy.h>\n\nnamespace AL\n{\n  class ALBroker;\n}\n\nclass HelloEvent : public AL::ALModule\n{\n public:\n  HelloEvent(boost::shared_ptr<AL::ALBroker> broker, const std::string& name);\n  virtual ~HelloEvent();\n\n  virtual void init();\n\n  void callback(const std::string &key, const AL::ALValue &value, const AL::ALValue &msg);\n\n private:\n  AL::ALMemoryProxy fMemoryProxy;\n};\n\n#endif // HELLO_EVENT_H\n\n\n\nhelloevent.cpp\n\nhelloevent.cpp\n#include \"helloevent.h\"\n\n#include <alvalue/alvalue.h>\n#include <alcommon/alproxy.h>\n#include <alcommon/albroker.h>\n#include <qi/log.hpp>\n\nHelloEvent::HelloEvent(boost::shared_ptr<AL::ALBroker> broker, const std::string& name):\n  AL::ALModule(broker, name), fMemoryProxy(getParentBroker())\n{\n  setModuleDescription(\"\");\n\n  functionName(\"callback\", getName(), \"callback\");\n  BIND_METHOD(HelloEvent::callback);\n}\n\nHelloEvent::~HelloEvent()\n{\n  fMemoryProxy.unsubscribeToEvent(\"HelloEvent\", \"HelloEvent\");\n  fMemoryProxy.unsubscribeToMicroEvent(\"HelloMicroEvent\", \"HelloEvent\");\n}\n\nvoid HelloEvent::init()\n{\n  fMemoryProxy.subscribeToEvent(\"HelloEvent\", \"HelloEventModule\", \"callback\");\n  fMemoryProxy.subscribeToMicroEvent(\"HelloMicroEvent\", \"HelloEventModule\", \"subscribe message\", \"callback\");\n}\n\nvoid HelloEvent::callback(const std::string &key, const AL::ALValue &value, const AL::ALValue &msg)\n{\n  qiLogInfo(\"HelloEvent\") << \"Callback:\" << key << std::endl;\n  qiLogInfo(\"HelloEvent\") << \"Value   :\" << value << std::endl;\n  qiLogInfo(\"HelloEvent\") << \"Msg     :\" << msg << std::endl;\n}\n\n\n\nmain.cpp\n\nmain.cpp\n#include \"helloevent.h\"\n#include <boost/shared_ptr.hpp>\n#include <alcommon/albroker.h>\n#include <alcommon/almodule.h>\n#include <alcommon/albrokermanager.h>\n\nextern \"C\"\n{\n  int _createModule(boost::shared_ptr<AL::ALBroker> pBroker)\n  {\n    AL::ALBrokerManager::setInstance(pBroker->fBrokerManager.lock());\n    AL::ALBrokerManager::getInstance()->addBroker(pBroker);\n\n    AL::ALModule::createModule<HelloEvent>(pBroker, \"HelloEventModule\");\n\n    return 0;\n  }\n\n  int _closeModule()\n  {\n    return 0;\n  }\n}\n\n\n\nCMakeLists.txt\ncmake_minimum_required(VERSION 2.8)\nproject(HelloEventModule)\n\nfind_package(qibuild)\n\nset(CMAKE_CXX_FLAGS \"-stdlib=libstdc++\")\n\nset(_srcs\n  main.cpp\n  helloevent.h\n  helloevent.cpp\n)\n\nqi_create_lib(HelloEventModule SHARED ${_srcs} SUBFOLDER naoqi)\n\nqi_use_lib(HelloEventModule ALCOMMON ALPROXIES)\n\n\n\nconfigure & make\n$ qibuild configure -c mytoolchain\n$ qibuild make -c mytoolchain\n\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ export NAOQI_RUNTIME=/path/to/Choregraphe.app/Contents/Resources\n\n$ vi $NAOQI_RUNTIME/etc/naoqi/autoload.ini\n$ tail $NAOQI_RUNTIME/etc/naoqi/autoload.ini\nalvisualcompass\nallocalization\nalpanoramacompass\n\nautonomouslife\n\ndialog\n\nHelloEventModule\n\n$ cp -p build-mytoolchain/sdk/lib/naoqi/libHelloEventModule.dylib $NAOQI_RUNTIME/lib/naoqi/\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nChoregraphe \u3067\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u308b\u90e8\u5206\u3092\u4f5c\u6210\n\u307e\u305a\u306f\u30c0\u30a4\u30e4\u30b0\u30e9\u30e0\u306e\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30dc\u30c3\u30af\u30b9\u5185\u306b\u5165\u308a\u3001\u300cALMemory\u304b\u3089\u306e\u30a4\u30d9\u30f3\u30c8\u306e\u8ffd\u52a0\u300d\u3092\u62bc\u4e0b\u3057\u3001\u300cHelloEvent\u300d\u300cHelloMicroEvent\u300d\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nLog \u30dc\u30c3\u30af\u30b9\u3092\u914d\u7f6e\u3057\u3001\u8ffd\u52a0\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u304b\u3089\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n\nPython \u304b\u3089\u30a4\u30d9\u30f3\u30c8\u767a\u884c\n$ /usr/bin/python\nPython 2.7.6 (default, Sep  9 2014, 15:04:36)\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.39)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n>>> from naoqi import ALProxy\n\n>>> m = ALProxy(\"ALMemory\", \"localhost\", 59350)\n[I] 3343 qi.eventloop: Creating event loop while no qi::Application() is running\n[I] 3343 qimessaging.session: Session listener created on tcp://0.0.0.0:0\n[I] 3343 qimessaging.transportserver: TransportServer will listen on: tcp://192.168.1.6:59389\n[I] 3343 qimessaging.transportserver: TransportServer will listen on: tcp://127.0.0.1:59389\n\n>>> m.raiseEvent(\"HelloEvent\", \"test\")\n>>> m.raiseEvent(\"HelloMicroEvent\", \"test2\")\n\n\n\u7d50\u679c\u78ba\u8a8d\n\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u304b\u3089\u51fa\u3057\u3066\u3044\u308b\u30ed\u30b0\u3068\u3001log \u30dc\u30c3\u30af\u30b9\u304b\u3089\u306e\u30ed\u30b0\u304c\u30ed\u30b0\u30d3\u30e5\u30fc\u30a2\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n\u611f\u60f3\n\n\u9577\u3005\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u300cSubscribe to Event\u300d\u300cRaise Event\u300d\u30dc\u30c3\u30af\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3067\u304d\u308b\u5185\u5bb9\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nEvent \u3068 MicroEvent \u306e\u9055\u3044\u304c\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\n## \u306f\u3058\u3081\u306b\n\n* \u81ea\u5206\u3067\u66f8\u3044\u3066\u304a\u3044\u3066\u306a\u3093\u3067\u3059\u304c\u3001\u307e\u3060\u3075\u308f\u3075\u308f\u3068\u3057\u305f\u7406\u89e3\u306a\u305f\u3081\u3001\u30bf\u30a4\u30c8\u30eb\u306f\u3053\u308c\u3067\u5927\u4e08\u592b\u3060\u308d\u3046\u304b\uff1f\u3068\u4e0d\u5b89\u3067\u3059\u3002\n* \u53d6\u308a\u6025\u304e\u3001ALMemory\u306e\u30a4\u30d9\u30f3\u30c8\u306b\u95a2\u3057\u3066\u3001\u8a66\u3057\u3066\u307f\u305f\u5185\u5bb9\u3092\u8a18\u9332\u3057\u3066\u307f\u307e\u3059\u3002\n\n## \u5404\u30c4\u30fc\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n| \u30c4\u30fc\u30eb                     | \u30d0\u30fc\u30b8\u30e7\u30f3                  |\n|:--------------------------|:--------------------------|\n| C++ SDK                   | naoqi-sdk-2.0.5.3         |\n| Python SDK                | pynaoqi-python2.7-2.0.5.3 |\n| Choregraphe               | 2.1.2.17                  |\n\n## \u72ec\u81eaALMemory\u30a4\u30d9\u30f3\u30c8\u306e\u4f5c\u6210\n\n### \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f5c\u6210\n\n```bash\n$ qisrc create HelloEventModule\n```\n\n### \u30b3\u30fc\u30c9\u306e\u4fee\u6b63\n\n#### helloevent.h\n\n```helloevent.h\n#ifndef HELLO_EVENT_H\n#define HELLO_EVENT_H\n\n#define BOOST_SIGNALS_NO_DEPRECATION_WARNING\n\n#include <boost/shared_ptr.hpp>\n#include <alcommon/almodule.h>\n#include <alproxies/almemoryproxy.h>\n\nnamespace AL\n{\n  class ALBroker;\n}\n\nclass HelloEvent : public AL::ALModule\n{\n public:\n  HelloEvent(boost::shared_ptr<AL::ALBroker> broker, const std::string& name);\n  virtual ~HelloEvent();\n\n  virtual void init();\n\n  void callback(const std::string &key, const AL::ALValue &value, const AL::ALValue &msg);\n\n private:\n  AL::ALMemoryProxy fMemoryProxy;\n};\n\n#endif // HELLO_EVENT_H\n```\n\n#### helloevent.cpp\n\n```helloevent.cpp\n#include \"helloevent.h\"\n\n#include <alvalue/alvalue.h>\n#include <alcommon/alproxy.h>\n#include <alcommon/albroker.h>\n#include <qi/log.hpp>\n\nHelloEvent::HelloEvent(boost::shared_ptr<AL::ALBroker> broker, const std::string& name):\n  AL::ALModule(broker, name), fMemoryProxy(getParentBroker())\n{\n  setModuleDescription(\"\");\n\n  functionName(\"callback\", getName(), \"callback\");\n  BIND_METHOD(HelloEvent::callback);\n}\n\nHelloEvent::~HelloEvent()\n{\n  fMemoryProxy.unsubscribeToEvent(\"HelloEvent\", \"HelloEvent\");\n  fMemoryProxy.unsubscribeToMicroEvent(\"HelloMicroEvent\", \"HelloEvent\");\n}\n\nvoid HelloEvent::init()\n{\n  fMemoryProxy.subscribeToEvent(\"HelloEvent\", \"HelloEventModule\", \"callback\");\n  fMemoryProxy.subscribeToMicroEvent(\"HelloMicroEvent\", \"HelloEventModule\", \"subscribe message\", \"callback\");\n}\n\nvoid HelloEvent::callback(const std::string &key, const AL::ALValue &value, const AL::ALValue &msg)\n{\n  qiLogInfo(\"HelloEvent\") << \"Callback:\" << key << std::endl;\n  qiLogInfo(\"HelloEvent\") << \"Value   :\" << value << std::endl;\n  qiLogInfo(\"HelloEvent\") << \"Msg     :\" << msg << std::endl;\n}\n```\n\n#### main.cpp\n\n```main.cpp\n#include \"helloevent.h\"\n#include <boost/shared_ptr.hpp>\n#include <alcommon/albroker.h>\n#include <alcommon/almodule.h>\n#include <alcommon/albrokermanager.h>\n\nextern \"C\"\n{\n  int _createModule(boost::shared_ptr<AL::ALBroker> pBroker)\n  {\n    AL::ALBrokerManager::setInstance(pBroker->fBrokerManager.lock());\n    AL::ALBrokerManager::getInstance()->addBroker(pBroker);\n\n    AL::ALModule::createModule<HelloEvent>(pBroker, \"HelloEventModule\");\n\n    return 0;\n  }\n\n  int _closeModule()\n  {\n    return 0;\n  }\n}\n```\n\n```CMakeLists.txt\ncmake_minimum_required(VERSION 2.8)\nproject(HelloEventModule)\n\nfind_package(qibuild)\n\nset(CMAKE_CXX_FLAGS \"-stdlib=libstdc++\")\n\nset(_srcs\n  main.cpp\n  helloevent.h\n  helloevent.cpp\n)\n\nqi_create_lib(HelloEventModule SHARED ${_srcs} SUBFOLDER naoqi)\n\nqi_use_lib(HelloEventModule ALCOMMON ALPROXIES)\n```\n\n### configure & make\n\n```bash\n$ qibuild configure -c mytoolchain\n$ qibuild make -c mytoolchain\n```\n\n### \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash\n$ export NAOQI_RUNTIME=/path/to/Choregraphe.app/Contents/Resources\n```\n\n```bash\n$ vi $NAOQI_RUNTIME/etc/naoqi/autoload.ini\n$ tail $NAOQI_RUNTIME/etc/naoqi/autoload.ini\nalvisualcompass\nallocalization\nalpanoramacompass\n\nautonomouslife\n\ndialog\n\nHelloEventModule\n```\n\n```bash\n$ cp -p build-mytoolchain/sdk/lib/naoqi/libHelloEventModule.dylib $NAOQI_RUNTIME/lib/naoqi/\n```\n\n### \u52d5\u4f5c\u78ba\u8a8d\n\n#### Choregraphe \u3067\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u308b\u90e8\u5206\u3092\u4f5c\u6210\n\n\u307e\u305a\u306f\u30c0\u30a4\u30e4\u30b0\u30e9\u30e0\u306e\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n![2015011201.png](https://qiita-image-store.s3.amazonaws.com/0/20418/9493af98-6bd9-6e03-1eca-81e033840a38.png \"2015011201.png\")\n\n\u30dc\u30c3\u30af\u30b9\u5185\u306b\u5165\u308a\u3001\u300cALMemory\u304b\u3089\u306e\u30a4\u30d9\u30f3\u30c8\u306e\u8ffd\u52a0\u300d\u3092\u62bc\u4e0b\u3057\u3001\u300cHelloEvent\u300d\u300cHelloMicroEvent\u300d\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n![2015011202.png](https://qiita-image-store.s3.amazonaws.com/0/20418/b875823c-c3b8-f227-928a-955031ecaf9d.png \"2015011202.png\")\n\nLog \u30dc\u30c3\u30af\u30b9\u3092\u914d\u7f6e\u3057\u3001\u8ffd\u52a0\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u304b\u3089\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n![2015011203.png](https://qiita-image-store.s3.amazonaws.com/0/20418/ddca6f2f-8ce8-b3ba-54df-1ddad2887e00.png \"2015011203.png\")\n\n#### Python \u304b\u3089\u30a4\u30d9\u30f3\u30c8\u767a\u884c\n\n```bash\n$ /usr/bin/python\nPython 2.7.6 (default, Sep  9 2014, 15:04:36)\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.39)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n>>> from naoqi import ALProxy\n\n>>> m = ALProxy(\"ALMemory\", \"localhost\", 59350)\n[I] 3343 qi.eventloop: Creating event loop while no qi::Application() is running\n[I] 3343 qimessaging.session: Session listener created on tcp://0.0.0.0:0\n[I] 3343 qimessaging.transportserver: TransportServer will listen on: tcp://192.168.1.6:59389\n[I] 3343 qimessaging.transportserver: TransportServer will listen on: tcp://127.0.0.1:59389\n\n>>> m.raiseEvent(\"HelloEvent\", \"test\")\n>>> m.raiseEvent(\"HelloMicroEvent\", \"test2\")\n```\n\n#### \u7d50\u679c\u78ba\u8a8d\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u304b\u3089\u51fa\u3057\u3066\u3044\u308b\u30ed\u30b0\u3068\u3001log \u30dc\u30c3\u30af\u30b9\u304b\u3089\u306e\u30ed\u30b0\u304c\u30ed\u30b0\u30d3\u30e5\u30fc\u30a2\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n![2015011206.png](https://qiita-image-store.s3.amazonaws.com/0/20418/011aa23e-2037-7a1b-dd8d-93aa01dbedbe.png \"2015011206.png\")\n\n## \u611f\u60f3\n\n* \u9577\u3005\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u300cSubscribe to Event\u300d\u300cRaise Event\u300d\u30dc\u30c3\u30af\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3067\u304d\u308b\u5185\u5bb9\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n* Event \u3068 MicroEvent \u306e\u9055\u3044\u304c\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n", "tags": ["Choregraphe", "NAOqi", "C++", "Pepper"]}