{"context": " More than 1 year has passed since last update.\nC\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nstruct s_hands\n{\n    int suit;\n    int num;\n    int cnt;\n};\n\nstruct s_num\n{\n    char n[16][4];\n};\n\nstruct s_hands check_st_cnt(const char * input, const struct s_num c_num )\n{\n    int i = 0;\n    int cnt = 0;\n    struct s_hands hd = {0};\n    for( i = 0; strcmp(c_num.n[i],\"\\0\") != 0; i++ )\n    {\n        cnt++;\n        if( strstr( input, c_num.n[i] ) == NULL )\n            cnt = 0;\n        if( hd.cnt < cnt )\n        {\n            hd.cnt = cnt;\n            hd.num = i;\n        }\n    }\n    return hd;\n}\n\nstruct s_hands check_fl_cnt(const char * input, const char c_suit[][3])\n{\n    int i = 0;\n    int j = 0;\n    int cnt = 0;\n    struct s_hands hd = {0};\n    for( i = 0; strcmp(c_suit[i], \"\\0\") != 0; i++ )\n    {\n        cnt = 0;\n        for( j = 0; j < strlen(input); j++ )\n            if( input[j] == c_suit[i][0] ) cnt++;\n        if( hd.cnt < cnt )\n        {\n            hd.suit = i;\n            hd.cnt = cnt;\n        }\n    }\n    return hd;  \n}\n\nvoid test (const char * input, const char * ans)\n{\n    enum e_hands { ST, FL, SF };\n    const char c_suit[][3] = {\"a\",\"s\",\"h\",\"d\",\"c\",\"\\0\"};\n    const struct s_num c_num = { {\"0\",\"A\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"J\",\"Q\",\"K\",\"A\",\"\\0\"} };\n    struct s_num num = {0};\n    char str[4] = \"-\";\n    int i = 0;\n    struct s_hands hd[3] = {0};\n\n    hd[ST] = check_st_cnt(input, c_num );\n    hd[FL] = check_fl_cnt(input, c_suit);\n    num = c_num;\n    for( i = 0; strcmp(c_num.n[i],\"\\0\") != 0; i++ )\n        strcat(num.n[i], c_suit[hd[FL].suit]);\n    hd[SF] = check_st_cnt(input, num );\n\n    //printf(\"num=%d, suit=%d, cnt=%d\\n\", hd[0].num, hd[0].suit, hd[0].cnt);\n    //printf(\"num=%d, suit=%d, cnt=%d\\n\", hd[1].num, hd[1].suit, hd[1].cnt);\n    //printf(\"num=%d, suit=%d, cnt=%d\\n\", hd[2].num, hd[2].suit, hd[2].cnt);\n\n    strcpy(str, (hd[SF].cnt == 5 && hd[SF].num == 14) ? \"RF\"\n           : (hd[SF].cnt == 5) ? \"SF\"\n           : (hd[FL].cnt == 5) ? \"FL\"\n           : (hd[ST].cnt == 5) ? \"ST\"\n           : (hd[SF].cnt == 4) ? \"4SF\"\n           : (hd[FL].cnt == 4) ? \"4F\"\n           : (hd[ST].cnt == 4) ? \"4S\"\n           : \"-\" );\n    printf(\"%s:%s\\n\", (strcmp(ans,str) == 0) ? \"ooooo GOOD ooooo\": \"xxxxx BAD xxxxx\", str);\n}\n\nint main (void)\n{\n/*0*/ test( \"Qs9s3dJd10h\", \"4S\" );\n/*1*/ test( \"KdAdJd10dQd\", \"RF\" );\n/*2*/ test( \"QhJhKhAh10h\", \"RF\" );\n/*3*/ test( \"10dAdJsQdKd\", \"ST\" );\n/*4*/ test( \"Kd10dAdJd3d\", \"FL\" );\n/*5*/ test( \"4d3d2dAd5d\", \"SF\" );\n/*6*/ test( \"5d5d2d3dAd\", \"FL\" );\n/*7*/ test( \"4d2sAd5d3d\", \"ST\" );\n/*8*/ test( \"As10dJdQdKd\", \"ST\" );\n/*9*/ test( \"10d10dQdAsJd\", \"4F\" );\n/*10*/ test( \"AcJd10dQdKd\", \"ST\" );\n/*11*/ test( \"Kd2sJdAdQd\", \"4SF\" );\n/*12*/ test( \"JdAdQcKd2s\", \"4S\" );\n/*13*/ test( \"KdAdKdJd2s\", \"4F\" );\n/*14*/ test( \"As2dKdQdJd\", \"4F\" );\n/*15*/ test( \"AsKdQd2dJh\", \"4S\" );\n/*16*/ test( \"QhAd2s3dKd\", \"-\" );\n/*17*/ test( \"Ad4dKh3s2d\", \"4S\" );\n/*18*/ test( \"3d2dAh5d4s\", \"ST\" );\n/*19*/ test( \"QcKdAs2dJd\", \"4S\" );\n/*20*/ test( \"2dQcJdAs10d\", \"-\" );\n/*21*/ test( \"4d7d5s3c2d\", \"4S\" );\n/*22*/ test( \"7d5s4dAd3c\", \"-\" );\n/*23*/ test( \"3s8s10sQs6s\", \"FL\" );\n/*24*/ test( \"6hAh3h2h8h\", \"FL\" );\n/*25*/ test( \"3h4hJh9hQh\", \"FL\" );\n/*26*/ test( \"3s6s5s2sQs\", \"FL\" );\n/*27*/ test( \"9d3cKdQc2c\", \"-\" );\n/*28*/ test( \"5sKs7hQcKh\", \"-\" );\n/*29*/ test( \"Ad6d7h7c9h\", \"-\" );\n/*30*/ test( \"10h4cAh6s10c\", \"-\" );\n/*31*/ test( \"9sKsJcQs10d\", \"ST\" );\n/*32*/ test( \"5d3c2cAs4c\", \"ST\" );\n/*33*/ test( \"KcQs9c10sJs\", \"ST\" );\n/*34*/ test( \"9d8s10hJdQd\", \"ST\" );\n/*35*/ test( \"6c5s10h7d4c\", \"4S\" );\n/*36*/ test( \"QhJcKsAh8c\", \"4S\" );\n/*37*/ test( \"JsQc3h10cKs\", \"4S\" );\n/*38*/ test( \"10c9h7hAd8d\", \"4S\" );\n/*39*/ test( \"3d4dKd8d5c\", \"4F\" );\n/*40*/ test( \"10h3hQh9h2s\", \"4F\" );\n/*41*/ test( \"Qh5h7h9h6c\", \"4F\" );\n/*42*/ test( \"6s8s7s3sKc\", \"4F\" );\n/*43*/ test( \"10h8h9hJhQh\", \"SF\" );\n/*44*/ test( \"10h9hQhKhJh\", \"SF\" );\n/*45*/ test( \"6d4d7d5d3d\", \"SF\" );\n/*46*/ test( \"6h9h7h5h8h\", \"SF\" );\n/*47*/ test( \"Ac6s4s3s5s\", \"4SF\" );\n/*48*/ test( \"3c9d2c5c4c\", \"4SF\" );\n/*49*/ test( \"Kh2sQh10hJh\", \"4SF\" );\n/*50*/ test( \"4h5h2h3h4s\", \"4SF\" );\n/*51*/ test( \"Js10sAsQsKs\", \"RF\" );\n/*52*/ test( \"10dKdQdAdJd\", \"RF\" );\n    return 0;\n}\n\n\n``` c:C\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nstruct s_hands\n{\n\tint suit;\n\tint num;\n\tint cnt;\n};\n\nstruct s_num\n{\n\tchar n[16][4];\n};\n\nstruct s_hands check_st_cnt(const char * input, const struct s_num c_num )\n{\n\tint i = 0;\n\tint cnt = 0;\n\tstruct s_hands hd = {0};\n\tfor( i = 0; strcmp(c_num.n[i],\"\\0\") != 0; i++ )\n\t{\n\t\tcnt++;\n\t\tif( strstr( input, c_num.n[i] ) == NULL )\n\t\t\tcnt = 0;\n\t\tif( hd.cnt < cnt )\n\t\t{\n\t\t\thd.cnt = cnt;\n\t\t\thd.num = i;\n\t\t}\n\t}\n\treturn hd;\n}\n\nstruct s_hands check_fl_cnt(const char * input, const char c_suit[][3])\n{\n\tint i = 0;\n\tint j = 0;\n\tint cnt = 0;\n\tstruct s_hands hd = {0};\n\tfor( i = 0; strcmp(c_suit[i], \"\\0\") != 0; i++ )\n\t{\n\t\tcnt = 0;\n\t\tfor( j = 0; j < strlen(input); j++ )\n       \t\tif( input[j] == c_suit[i][0] ) cnt++;\n\t\tif( hd.cnt < cnt )\n\t\t{\n\t\t\thd.suit = i;\n\t\t\thd.cnt = cnt;\n\t\t}\n\t}\n\treturn hd;\t\n}\n\nvoid test (const char * input, const char * ans)\n{\n\tenum e_hands { ST, FL, SF };\n\tconst char c_suit[][3] = {\"a\",\"s\",\"h\",\"d\",\"c\",\"\\0\"};\n\tconst struct s_num c_num = { {\"0\",\"A\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"J\",\"Q\",\"K\",\"A\",\"\\0\"} };\n\tstruct s_num num = {0};\n\tchar str[4] = \"-\";\n\tint i = 0;\n\tstruct s_hands hd[3] = {0};\n\n\thd[ST] = check_st_cnt(input, c_num );\n\thd[FL] = check_fl_cnt(input, c_suit);\n\tnum = c_num;\n\tfor( i = 0; strcmp(c_num.n[i],\"\\0\") != 0; i++ )\n\t\tstrcat(num.n[i], c_suit[hd[FL].suit]);\n\thd[SF] = check_st_cnt(input, num );\n\n\t//printf(\"num=%d, suit=%d, cnt=%d\\n\", hd[0].num, hd[0].suit, hd[0].cnt);\n\t//printf(\"num=%d, suit=%d, cnt=%d\\n\", hd[1].num, hd[1].suit, hd[1].cnt);\n\t//printf(\"num=%d, suit=%d, cnt=%d\\n\", hd[2].num, hd[2].suit, hd[2].cnt);\n\n\tstrcpy(str, (hd[SF].cnt == 5 && hd[SF].num == 14) ? \"RF\"\n\t\t   : (hd[SF].cnt == 5) ? \"SF\"\n\t\t   : (hd[FL].cnt == 5) ? \"FL\"\n\t\t   : (hd[ST].cnt == 5) ? \"ST\"\n\t\t   : (hd[SF].cnt == 4) ? \"4SF\"\n\t\t   : (hd[FL].cnt == 4) ? \"4F\"\n\t\t   : (hd[ST].cnt == 4) ? \"4S\"\n\t\t   : \"-\" );\n\tprintf(\"%s:%s\\n\", (strcmp(ans,str) == 0) ? \"ooooo GOOD ooooo\": \"xxxxx BAD xxxxx\", str);\n}\n\nint main (void)\n{\n/*0*/ test( \"Qs9s3dJd10h\", \"4S\" );\n/*1*/ test( \"KdAdJd10dQd\", \"RF\" );\n/*2*/ test( \"QhJhKhAh10h\", \"RF\" );\n/*3*/ test( \"10dAdJsQdKd\", \"ST\" );\n/*4*/ test( \"Kd10dAdJd3d\", \"FL\" );\n/*5*/ test( \"4d3d2dAd5d\", \"SF\" );\n/*6*/ test( \"5d5d2d3dAd\", \"FL\" );\n/*7*/ test( \"4d2sAd5d3d\", \"ST\" );\n/*8*/ test( \"As10dJdQdKd\", \"ST\" );\n/*9*/ test( \"10d10dQdAsJd\", \"4F\" );\n/*10*/ test( \"AcJd10dQdKd\", \"ST\" );\n/*11*/ test( \"Kd2sJdAdQd\", \"4SF\" );\n/*12*/ test( \"JdAdQcKd2s\", \"4S\" );\n/*13*/ test( \"KdAdKdJd2s\", \"4F\" );\n/*14*/ test( \"As2dKdQdJd\", \"4F\" );\n/*15*/ test( \"AsKdQd2dJh\", \"4S\" );\n/*16*/ test( \"QhAd2s3dKd\", \"-\" );\n/*17*/ test( \"Ad4dKh3s2d\", \"4S\" );\n/*18*/ test( \"3d2dAh5d4s\", \"ST\" );\n/*19*/ test( \"QcKdAs2dJd\", \"4S\" );\n/*20*/ test( \"2dQcJdAs10d\", \"-\" );\n/*21*/ test( \"4d7d5s3c2d\", \"4S\" );\n/*22*/ test( \"7d5s4dAd3c\", \"-\" );\n/*23*/ test( \"3s8s10sQs6s\", \"FL\" );\n/*24*/ test( \"6hAh3h2h8h\", \"FL\" );\n/*25*/ test( \"3h4hJh9hQh\", \"FL\" );\n/*26*/ test( \"3s6s5s2sQs\", \"FL\" );\n/*27*/ test( \"9d3cKdQc2c\", \"-\" );\n/*28*/ test( \"5sKs7hQcKh\", \"-\" );\n/*29*/ test( \"Ad6d7h7c9h\", \"-\" );\n/*30*/ test( \"10h4cAh6s10c\", \"-\" );\n/*31*/ test( \"9sKsJcQs10d\", \"ST\" );\n/*32*/ test( \"5d3c2cAs4c\", \"ST\" );\n/*33*/ test( \"KcQs9c10sJs\", \"ST\" );\n/*34*/ test( \"9d8s10hJdQd\", \"ST\" );\n/*35*/ test( \"6c5s10h7d4c\", \"4S\" );\n/*36*/ test( \"QhJcKsAh8c\", \"4S\" );\n/*37*/ test( \"JsQc3h10cKs\", \"4S\" );\n/*38*/ test( \"10c9h7hAd8d\", \"4S\" );\n/*39*/ test( \"3d4dKd8d5c\", \"4F\" );\n/*40*/ test( \"10h3hQh9h2s\", \"4F\" );\n/*41*/ test( \"Qh5h7h9h6c\", \"4F\" );\n/*42*/ test( \"6s8s7s3sKc\", \"4F\" );\n/*43*/ test( \"10h8h9hJhQh\", \"SF\" );\n/*44*/ test( \"10h9hQhKhJh\", \"SF\" );\n/*45*/ test( \"6d4d7d5d3d\", \"SF\" );\n/*46*/ test( \"6h9h7h5h8h\", \"SF\" );\n/*47*/ test( \"Ac6s4s3s5s\", \"4SF\" );\n/*48*/ test( \"3c9d2c5c4c\", \"4SF\" );\n/*49*/ test( \"Kh2sQh10hJh\", \"4SF\" );\n/*50*/ test( \"4h5h2h3h4s\", \"4SF\" );\n/*51*/ test( \"Js10sAsQsKs\", \"RF\" );\n/*52*/ test( \"10dKdQdAdJd\", \"RF\" );\n\treturn 0;\n}\n```", "tags": ["yhpg", "\u3069\u3046\u66f8\u304f", "C"]}