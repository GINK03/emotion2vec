{"context": " More than 1 year has passed since last update.\u524d\u56de\u306eLivet\u3068\u304bReactiveCommand\u3092\u99c6\u4f7f\u3057\u305fMVVM\u98a8\u30a2\u30d7\u30ea\u4f5c\u6210\u306e\u30e1\u30e2\n\u306e\u7d9a\u304d\u304b\u3089\u59cb\u3081\u308b\u3002\n\u753b\u9762\u30ec\u30a4\u30a2\u30a6\u30c8\u3092WPF\u306eDocking\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3068\u3053\u308d\u306eAvalonDock\u306b\u4e57\u305b\u63db\u3048\u308b\u3002\n\u3042\u3068\u3001MVVM\u7248\u306f\u5225\u7269\u306b\u306a\u308b\u3053\u3068\u304c\u5224\u660e\u3057\u305f\u306e\u3067\u8a18\u4e8b\u3092\u5206\u5272\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\nSampleCode\n\u3042\u3068\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u30d6\u30e9\u30f3\u30c1\u3068\u304b\u6b62\u3081\u305f\u65b9\u304c\u3044\u3044\u30c7\u30b9\u3002\n\u9055\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5207\u3063\u3066\u3044\u304f\u65b9\u304c\u3084\u308a\u3084\u3059\u3044\u3002\n\n\u66f4\u65b0\u30e1\u30e2\n\nMVVM\u306f\u5225\u8a18\u4e8b\u306b\u3059\u308b\u3053\u3068\u306b\u3057\u3066\u4fee\u6b63\n\n\n\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\u7de8\u96c6\u3092\u7d9a\u3051\u308b\u306e\u3092\u3084\u3081\u3066\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u305d\u306e\u305f\u3081\u306bViewModel\u3092\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5206\u96e2\u3057\u305f\u3002\n\u524d\u56de\u306eViewModel\u3078\u306e\u53c2\u7167\u3092\u8ffd\u52a0\u3059\u308b\u3002\nnuget\u3067Livet\u3078\u306e\u53c2\u7167\u3092\u4f7f\u3044\u3059\u308b\u3002\n\nAvalonDock\u5c0e\u5165\nWPF\u3067\u30c9\u30c3\u30ad\u30f3\u30b0\u30a6\u30a3\u30f3\u30c9\u30a6(AvalonDock) \u4f7f\u3044\u65b9 \u305d\u306e1 - \u5c0e\u5165\u3092\u53c2\u8003\u306b\u5c0e\u5165\u3002\nnuget\u3067AvalonDock\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n\u524d\u56de\u306examl\u3092\u30b3\u30d4\u30da\u3057\u3066ListBox\u56de\u308a\u3092AvalonDock\u3067\u56f2\u3046\u3002\n\nxaml\u306e\u524d\u3068\u9055\u3046\u3068\u3053\u308d\u629c\u7c8b\nxmlns:avalonDock=\"http://schemas.xceed.com/wpf/xaml/avalondock\"        \n\n        <avalonDock:DockingManager x:Name=\"_dockingManager\">\n            <avalonDock:LayoutRoot>\n                <avalonDock:LayoutPanel Orientation=\"Horizontal\">\n                    <avalonDock:LayoutDocumentPane>\n                        <!-- \u30c9\u30ad\u30e5\u30e1\u30f3\u30c81 -->\n                        <avalonDock:LayoutDocument Title=\"Document1\">\n                            <ListBox ItemsSource=\"{Binding Items}\"\n                             SelectedItem=\"{Binding SelectedItem, Mode=TwoWay}\"\n                             >\n                            </ListBox>\n                        </avalonDock:LayoutDocument>\n                    </avalonDock:LayoutDocumentPane>\n                    <avalonDock:LayoutAnchorablePane DockWidth=\"150\">\n                        <!-- \u30c4\u30fc\u30eb\u30a6\u30a3\u30f3\u30c9\u30a61 -->\n                        <avalonDock:LayoutAnchorable Title=\"ToolWindow1\">\n                            <StackPanel>\n                                <StackPanel DockPanel.Dock=\"Top\" Orientation=\"Horizontal\">\n                                    <Button Command=\"{Binding RemoveSelectedItemCommand}\"\n                                            IsEnabled=\"{Binding SelectedItem, Converter={StaticResource NullToFalseConverter}}\" \n                                            >Remove</Button>\n                                    <Button Command=\"{Binding ClearItemsCommand}\"\n                                            IsEnabled=\"{Binding HasAnyItem}\"\n                                            >Clear</Button>                                   \n                                </StackPanel>\n                            </StackPanel>\n                        </avalonDock:LayoutAnchorable>\n                    </avalonDock:LayoutAnchorablePane>\n                </avalonDock:LayoutPanel>\n            </avalonDock:LayoutRoot>\n        </avalonDock:DockingManager>\n\n\navalonDock:LayoutRoot\u4ee5\u4e0b\u304c\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u6728\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\nDocument\u306ex\u30dc\u30bf\u30f3\u3092\u524a\u9664\u3057\u3066\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u6d88\u3057\u305fPane\u3092\u5fa9\u6d3b\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\u3053\u308c\u3060\u3051\u3060\u3068x\u62bc\u3057\u3066\u6d88\u3057\u305f\u30d1\u30fc\u30c4\u304c\u884c\u65b9\u4e0d\u660e\u306b\u306a\u308b\u306e\u3067\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u8868\u793a\u3092\u5fa9\u65e7\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nWPF\u3067\u30c9\u30c3\u30ad\u30f3\u30b0\u30a6\u30a3\u30f3\u30c9\u30a6(AvalonDock) \u4f7f\u3044\u65b9 \u305d\u306e1 - \u5c0e\u5165\n\u306b\u3042\u308b\u3068\u304a\u308a\u3002\n\nxaml\u5dee\u5206\n\n            <MenuItem Header=\"\u8868\u793a\">\n                <MenuItem \n                    Header=\"ToolWindow1\"\n                    IsCheckable=\"True\"\n                    IsChecked=\"{Binding IsVisible, ElementName=_toolWindow1}\" />\n            </MenuItem>\n\n    <avalonDock:LayoutDocument Title=\"Document1\" CanClose=\"False\" CanFloat=\"False\">\n\n    <avalonDock:LayoutAnchorable x:Name=\"_toolWindow1\" Title=\"ToolWindow1\">\n\n\n\u3053\u3053\u307e\u3067\u3067\u3001\nGrid\u30d1\u30cd\u30eb + Splitter\u306e\u66ff\u308f\u308a\u7684\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u4fdd\u5b58\u30fb\u5fa9\u5e30\nhttps://avalondock.codeplex.com/SourceControl/latest#Version2.0/AvalonDock.TestApp/MainWindow.xaml.cs\n\u306e\u901a\u308a\u306b\u3084\u3063\u3066\u307f\u305f\u3002\n\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u51fa\u305f\u306e\u3067\u7d99\u627f\u3002\n\nLayout\u306e\u5fa9\u6d3b\u3001\u5fa9\u65e7\n    public class MainWindowViewModel: UriListViewModel.UriListViewModel\n    {\n        String LayoutFile\n        {\n            get\n            {\n                return System.IO.Path.ChangeExtension(\n                    Environment.GetCommandLineArgs()[0]\n                    , \".AvalonDock.config\"\n                    );\n            }\n        }\n\n        public void LoadLayout(DockingManager dockManager)\n        {\n            // restore layout\n            Byte[] bytes;\n            try\n            {\n                bytes = System.IO.File.ReadAllBytes(LayoutFile);\n            }\n            catch (FileNotFoundException ex)\n            {\n                return;\n            }\n\n            if(!LoadLayout(dockManager, bytes)){\n                return;\n            }\n        }\n\n        bool LoadLayout(DockingManager dockManager, Byte[] bytes)\n        {           \n            var serializer = new XmlLayoutSerializer(dockManager);\n\n            try\n            {\n                using (var stream = new MemoryStream(bytes))\n                {\n                    serializer.Deserialize(stream);\n                }\n                return true;\n            }\n            catch (Exception ex)\n            {\n                ErrorDialog(ex);\n                return false;\n            }\n        }\n\n        public void SaveLayout(DockingManager dockManager)\n        {\n            var serializer = new XmlLayoutSerializer(dockManager);\n            var doc=new XmlDocument();\n            using (var stream = new MemoryStream())\n            {\n                serializer.Serialize(stream);\n                stream.Position = 0;\n                doc.Load(stream);\n            }\n        }\n    }\n\n\n\u3053\u308c\u3089\u306e\u30b3\u30de\u30f3\u30c9\u3092Loaded, Unloaded\u30a4\u30d9\u30f3\u30c8\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306bxaml\u3092\u5909\u66f4\u3002\nLivet\u529b\u304c\u4e0a\u304c\u3063\u3066LivetCallMethodAction\u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\nxaml\u5dee\u5206\n        <local:MainWindowViewModel x:Key=\"ViewModel\" />\n\n        <i:EventTrigger EventName=\"Closed\">\n<!-- Dispose\u3088\u308a\u5148\u306b -->\n            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"SaveLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\"/>\n            <l:DataContextDisposeAction />\n        </i:EventTrigger>\n        <i:EventTrigger EventName=\"Loaded\">\n            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"LoadLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\"/>\n        </i:EventTrigger>\n\n<!-- \u5404Pane\u306bContentID\u3092\u6307\u5b9a -->\n                        <avalonDock:LayoutDocument Title=\"Document1\" CanClose=\"False\" CanFloat=\"False\" ContentId=\"Document\">\n                        <avalonDock:LayoutAnchorable x:Name=\"_toolWindow1\" Title=\"ToolWindow1\" ContentId=\"Tool\">\n\n\n\u4fdd\u5b58\u3055\u308c\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\n\nAvalonDock\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LayoutRoot xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n  <RootPanel Orientation=\"Vertical\">\n    <LayoutPanel Orientation=\"Horizontal\" DockHeight=\"1.41901569404236*\">\n      <LayoutDocumentPane>\n        <LayoutDocument Title=\"Document1\" IsSelected=\"True\" IsLastFocusedDocument=\"True\" ContentId=\"Document\" CanClose=\"False\" CanFloat=\"False\" LastActivationTimeStamp=\"02/12/2015 12:31:51\" />\n      </LayoutDocumentPane>\n    </LayoutPanel>\n    <LayoutAnchorablePaneGroup Orientation=\"Horizontal\" DockWidth=\"150\" DockHeight=\"76.26\" FloatingWidth=\"150\" FloatingHeight=\"269\" FloatingLeft=\"429\" FloatingTop=\"545\">\n      <LayoutAnchorablePane DockHeight=\"76.26\" FloatingWidth=\"150\" FloatingHeight=\"269\" FloatingLeft=\"429\" FloatingTop=\"545\">\n        <LayoutAnchorable AutoHideMinWidth=\"100\" AutoHideMinHeight=\"100\" Title=\"ToolWindow1\" IsSelected=\"True\" ContentId=\"Tool\" FloatingLeft=\"429\" FloatingTop=\"545\" FloatingWidth=\"150\" FloatingHeight=\"269\" LastActivationTimeStamp=\"02/12/2015 12:31:51\" />\n      </LayoutAnchorablePane>\n    </LayoutAnchorablePaneGroup>\n  </RootPanel>\n  <TopSide />\n  <RightSide />\n  <LeftSide />\n  <BottomSide />\n  <FloatingWindows />\n  <Hidden />\n</LayoutRoot>\n\n\nContentID\u304cLayoutDocument\u3068LayoutAnchorable\u306e\u884c\u5148\u3092\u793a\u3057\u3066\u3044\u308b\u3002\n\n\u78ba\u304b\u306b\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u5fa9\u65e7\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u3057\u304b\u3057\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u306eDeserialize\u304c\u8d70\u3063\u305f\u3068\u3053\u308d\u3067\u30e1\u30cb\u30e5\u30fc\u306e\u8868\u793a\u30fb\u975e\u8868\u793a\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\n\n\u3053\u308c\n               <MenuItem \n                    Header=\"ToolWindow1\"\n                    IsCheckable=\"True\"\n                    IsChecked=\"{Binding IsVisible, ElementName=_toolWindow1}\" />\n\n\n\u304c\u7121\u52b9\u306b\u306a\u308b\u3053\u3068\u304c\u5224\u660e\u3002\u304a\u305d\u3089\u304f\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067LayoutAnchorable\u304c\u65b0\u898f\u306b\u4f5c\u308a\u76f4\u3055\u308c\u308b\u305f\u3081\u3002\n\u7121\u7406\u3084\u308a\u5bfe\u7b56\u3057\u305f\u3002\n\n\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067LayoutAnchorable\u304c\u884c\u65b9\u4e0d\u660e\u306b\u306a\u308b\u4ef6\u306e\u5bfe\u7b56\n\n            serializer.LayoutSerializationCallback += (o, e) =>\n            {\n                if (e.Model.ContentId == \"Tool\")\n                {\n                    // \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u3066\u65b0\u3057\u304f\u3067\u304d\u305fLayoutAnchorable\u3092\u4fdd\u5b58\u3057\u3068\u304f\n                    Tool = (LayoutAnchorable)e.Model;\n                }\n            };\n\n\n\u3053\u3044\u3064\u3068\u30e1\u30cb\u30e5\u30fc\u3092\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u3002\n\n                <MenuItem \n                    Header=\"ToolWindow1\"\n                    IsCheckable=\"True\"\n                    IsChecked=\"{Binding Tool.IsVisible, Mode=TwoWay}\" />\n                <Separator/>\n\n\n\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u3002\n\n\u30ec\u30a4\u30a2\u30a6\u30c8\u30c7\u30fc\u30bf\u3092\u6539\u9020\u3057\u3066\u6700\u5f8c\u306b\u958b\u3044\u3066\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u3066\u307f\u308b\n\n\u30ec\u30a4\u30a2\u30a6\u30c8xml\u3092\u6539\u9020\u3059\u308b\n        public void LoadLayout(DockingManager dockManager)\n        {\n            var bytes = System.IO.File.ReadAllBytes(LayoutFile);\n\n            var serializer = new XmlLayoutSerializer(dockManager);\n            try\n            {\n                using (var stream = new MemoryStream(bytes))\n                {\n                    serializer.Deserialize(stream);\n                }\n            }\n            catch (FileNotFoundException ex)\n            {\n\n            }\n            catch (Exception ex)\n            {\n                ErrorDialog(ex);\n            }\n\n            // \u72ec\u81ea\u306bxml\u3092\u89e3\u6790\u3059\u308b\n            using (var stream = new MemoryStream(bytes))\n            {\n                var doc = new XmlDocument();\n                doc.Load(stream);\n                // ContentID\u304c\"Document\"\u306eID\u3092\u63a2\u3059\n                var documents = doc.SelectNodes(\"//*[@ContentId=\\\"Document\\\"]\");\n                if (documents.Count > 0)\n                {\n                    var document = documents[0];\n                    foreach (XmlAttribute attrib in document.Attributes)\n                    {\n                        if (attrib.Name == \"FilePath\")\n                        {\n                            Path = attrib.Value;\n                            Load();\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        public void SaveLayout(DockingManager dockManager)\n        {\n            var serializer = new XmlLayoutSerializer(dockManager);\n            var doc=new XmlDocument();\n            using (var stream = new MemoryStream())\n            {\n                serializer.Serialize(stream);\n                stream.Position = 0;\n                doc.Load(stream);\n            }\n\n            if(!String.IsNullOrEmpty(Path)){\n                // ContentID\u304c\"Document\"\u306eID\u3092\u63a2\u3059\n                var documents=doc.SelectNodes(\"//*[@ContentId=\\\"Document\\\"]\");\n                if (documents.Count > 0)\n                {\n                    // document\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u8a18\u3059\u308b\n                    var document = documents[0];\n\n                    var attrib=doc.CreateAttribute(\"FilePath\");\n                    attrib.Value=Path;\n                    document.Attributes.Append(attrib);\n                }\n            }           \n\n            using (var stream = new FileStream(LayoutFile, FileMode.Create))\n            {\n                doc.Save(stream);\n            }\n        }\n\n\n\n\u3044\u3044\u611f\u3058\u306b\u306a\u3063\u305f\u3002\n\n\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\n\u3053\u308c\u3082\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u6c17\u5473\u3002\n\n\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5fa9\u65e7\u3059\u308b\u524d\u306b\u4e00\u56de\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\n            // backup default layout\n            using (var ms = new MemoryStream())\n            {\n                var serializer = new XmlLayoutSerializer(dockManager);\n                serializer.Serialize(ms);\n                m_defaultLayout = ms.ToArray();\n            }\n\n\n\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u8aad\u307f\u66f8\u304d\u3092\u5165\u308c\u308b\u3068\u6025\u306b\u6271\u3044\u8f9b\u304f\u306a\u3063\u305f\u611f\u304c\u3042\u308b\u3002\n\u30ec\u30a4\u30a2\u30a6\u30c8\u306eDeserialize\u3067\u56f0\u3063\u305f\u5834\u5408\u306f\u3001LayoutSerializationCallback\u3067\u9811\u5f35\u308c\u3070\u4f55\u3068\u304b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u898f\u6a21\u306e\u5c0f\u3055\u3044\u30a2\u30d7\u30ea\u306a\u3089\u7121\u7406\u306bMVVM\u306b\u3057\u306a\u3044\u65b9\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u540c\u6642\u306b\u8907\u6570\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u958b\u304f\u3001\u30b5\u30d6\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u7a2e\u985e\u304c\u305f\u304f\u3055\u3093\u3042\u308b\u3068\u304b\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u62e1\u5f35\u3059\u308b\u306a\u3069\u304c\u3042\u308b\u306a\u3089MVVM\u306b\u3059\u308b\u5fc5\u8981\u6027\u304c\u3042\u308b\u3002\n\u6b21\u56de\u3001AvalonDockMVVM\u306b\u7d9a\u304f\u3002\n\u524d\u56de\u306e[Livet\u3068\u304bReactiveCommand\u3092\u99c6\u4f7f\u3057\u305fMVVM\u98a8\u30a2\u30d7\u30ea\u4f5c\u6210\u306e\u30e1\u30e2](http://qiita.com/ousttrue/items/23e2ea3ed3d8a82ec882)\n\u306e\u7d9a\u304d\u304b\u3089\u59cb\u3081\u308b\u3002\n\u753b\u9762\u30ec\u30a4\u30a2\u30a6\u30c8\u3092WPF\u306eDocking\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3068\u3053\u308d\u306e[AvalonDock](https://avalondock.codeplex.com/)\u306b\u4e57\u305b\u63db\u3048\u308b\u3002\n\u3042\u3068\u3001MVVM\u7248\u306f\u5225\u7269\u306b\u306a\u308b\u3053\u3068\u304c\u5224\u660e\u3057\u305f\u306e\u3067\u8a18\u4e8b\u3092\u5206\u5272\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n[SampleCode](https://github.com/ousttrue/WpfSample)\n\n\u3042\u3068\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u30d6\u30e9\u30f3\u30c1\u3068\u304b\u6b62\u3081\u305f\u65b9\u304c\u3044\u3044\u30c7\u30b9\u3002\n\u9055\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5207\u3063\u3066\u3044\u304f\u65b9\u304c\u3084\u308a\u3084\u3059\u3044\u3002\n\n#\u66f4\u65b0\u30e1\u30e2\n* MVVM\u306f\u5225\u8a18\u4e8b\u306b\u3059\u308b\u3053\u3068\u306b\u3057\u3066\u4fee\u6b63\n\n#\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\u7de8\u96c6\u3092\u7d9a\u3051\u308b\u306e\u3092\u3084\u3081\u3066\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u305d\u306e\u305f\u3081\u306bViewModel\u3092\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5206\u96e2\u3057\u305f\u3002\n\u524d\u56de\u306eViewModel\u3078\u306e\u53c2\u7167\u3092\u8ffd\u52a0\u3059\u308b\u3002\nnuget\u3067Livet\u3078\u306e\u53c2\u7167\u3092\u4f7f\u3044\u3059\u308b\u3002\n\n# AvalonDock\u5c0e\u5165\n\n[WPF\u3067\u30c9\u30c3\u30ad\u30f3\u30b0\u30a6\u30a3\u30f3\u30c9\u30a6(AvalonDock) \u4f7f\u3044\u65b9 \u305d\u306e1 - \u5c0e\u5165](http://lriki.hatenablog.com/entry/2014/12/01/235751)\u3092\u53c2\u8003\u306b\u5c0e\u5165\u3002\n\nnuget\u3067AvalonDock\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n![ss06.png](https://qiita-image-store.s3.amazonaws.com/0/59664/4949d17b-67c2-4557-fb30-fac76f87e1bc.png)\n\n\u524d\u56de\u306examl\u3092\u30b3\u30d4\u30da\u3057\u3066ListBox\u56de\u308a\u3092AvalonDock\u3067\u56f2\u3046\u3002\n\n```xml:xaml\u306e\u524d\u3068\u9055\u3046\u3068\u3053\u308d\u629c\u7c8b\nxmlns:avalonDock=\"http://schemas.xceed.com/wpf/xaml/avalondock\"        \n\n        <avalonDock:DockingManager x:Name=\"_dockingManager\">\n            <avalonDock:LayoutRoot>\n                <avalonDock:LayoutPanel Orientation=\"Horizontal\">\n                    <avalonDock:LayoutDocumentPane>\n                        <!-- \u30c9\u30ad\u30e5\u30e1\u30f3\u30c81 -->\n                        <avalonDock:LayoutDocument Title=\"Document1\">\n                            <ListBox ItemsSource=\"{Binding Items}\"\n                             SelectedItem=\"{Binding SelectedItem, Mode=TwoWay}\"\n                             >\n                            </ListBox>\n                        </avalonDock:LayoutDocument>\n                    </avalonDock:LayoutDocumentPane>\n                    <avalonDock:LayoutAnchorablePane DockWidth=\"150\">\n                        <!-- \u30c4\u30fc\u30eb\u30a6\u30a3\u30f3\u30c9\u30a61 -->\n                        <avalonDock:LayoutAnchorable Title=\"ToolWindow1\">\n                            <StackPanel>\n                                <StackPanel DockPanel.Dock=\"Top\" Orientation=\"Horizontal\">\n                                    <Button Command=\"{Binding RemoveSelectedItemCommand}\"\n                                            IsEnabled=\"{Binding SelectedItem, Converter={StaticResource NullToFalseConverter}}\" \n                                            >Remove</Button>\n                                    <Button Command=\"{Binding ClearItemsCommand}\"\n                                            IsEnabled=\"{Binding HasAnyItem}\"\n                                            >Clear</Button>                                   \n                                </StackPanel>\n                            </StackPanel>\n                        </avalonDock:LayoutAnchorable>\n                    </avalonDock:LayoutAnchorablePane>\n                </avalonDock:LayoutPanel>\n            </avalonDock:LayoutRoot>\n        </avalonDock:DockingManager>\n```\n\navalonDock:LayoutRoot\u4ee5\u4e0b\u304c\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u6728\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n![ss07.png](https://qiita-image-store.s3.amazonaws.com/0/59664/5440468a-3221-10e2-997e-0f2f5f28afdf.png)\n\n#Document\u306ex\u30dc\u30bf\u30f3\u3092\u524a\u9664\u3057\u3066\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u6d88\u3057\u305fPane\u3092\u5fa9\u6d3b\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\u3053\u308c\u3060\u3051\u3060\u3068x\u62bc\u3057\u3066\u6d88\u3057\u305f\u30d1\u30fc\u30c4\u304c\u884c\u65b9\u4e0d\u660e\u306b\u306a\u308b\u306e\u3067\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u8868\u793a\u3092\u5fa9\u65e7\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n[WPF\u3067\u30c9\u30c3\u30ad\u30f3\u30b0\u30a6\u30a3\u30f3\u30c9\u30a6(AvalonDock) \u4f7f\u3044\u65b9 \u305d\u306e1 - \u5c0e\u5165](http://lriki.hatenablog.com/entry/2014/12/01/235751)\n\u306b\u3042\u308b\u3068\u304a\u308a\u3002\n\n```xml:xaml\u5dee\u5206\n\n            <MenuItem Header=\"\u8868\u793a\">\n                <MenuItem \n                    Header=\"ToolWindow1\"\n                    IsCheckable=\"True\"\n                    IsChecked=\"{Binding IsVisible, ElementName=_toolWindow1}\" />\n            </MenuItem>\n\n    <avalonDock:LayoutDocument Title=\"Document1\" CanClose=\"False\" CanFloat=\"False\">\n\n    <avalonDock:LayoutAnchorable x:Name=\"_toolWindow1\" Title=\"ToolWindow1\">\n```\n\n\u3053\u3053\u307e\u3067\u3067\u3001\nGrid\u30d1\u30cd\u30eb + Splitter\u306e\u66ff\u308f\u308a\u7684\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n# \u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u4fdd\u5b58\u30fb\u5fa9\u5e30\n<https://avalondock.codeplex.com/SourceControl/latest#Version2.0/AvalonDock.TestApp/MainWindow.xaml.cs>\n\u306e\u901a\u308a\u306b\u3084\u3063\u3066\u307f\u305f\u3002\n\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u51fa\u305f\u306e\u3067\u7d99\u627f\u3002\n\n```csharp:Layout\u306e\u5fa9\u6d3b\u3001\u5fa9\u65e7\n    public class MainWindowViewModel: UriListViewModel.UriListViewModel\n    {\n        String LayoutFile\n        {\n            get\n            {\n                return System.IO.Path.ChangeExtension(\n                    Environment.GetCommandLineArgs()[0]\n                    , \".AvalonDock.config\"\n                    );\n            }\n        }\n\n        public void LoadLayout(DockingManager dockManager)\n        {\n            // restore layout\n            Byte[] bytes;\n            try\n            {\n                bytes = System.IO.File.ReadAllBytes(LayoutFile);\n            }\n            catch (FileNotFoundException ex)\n            {\n                return;\n            }\n\n            if(!LoadLayout(dockManager, bytes)){\n                return;\n            }\n        }\n\n        bool LoadLayout(DockingManager dockManager, Byte[] bytes)\n        {           \n            var serializer = new XmlLayoutSerializer(dockManager);\n\n            try\n            {\n                using (var stream = new MemoryStream(bytes))\n                {\n                    serializer.Deserialize(stream);\n                }\n                return true;\n            }\n            catch (Exception ex)\n            {\n                ErrorDialog(ex);\n                return false;\n            }\n        }\n\n        public void SaveLayout(DockingManager dockManager)\n        {\n            var serializer = new XmlLayoutSerializer(dockManager);\n            var doc=new XmlDocument();\n            using (var stream = new MemoryStream())\n            {\n                serializer.Serialize(stream);\n                stream.Position = 0;\n                doc.Load(stream);\n            }\n        }\n    }\n```\n\n\u3053\u308c\u3089\u306e\u30b3\u30de\u30f3\u30c9\u3092Loaded, Unloaded\u30a4\u30d9\u30f3\u30c8\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306bxaml\u3092\u5909\u66f4\u3002\nLivet\u529b\u304c\u4e0a\u304c\u3063\u3066LivetCallMethodAction\u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n```xml:xaml\u5dee\u5206\n        <local:MainWindowViewModel x:Key=\"ViewModel\" />\n\n        <i:EventTrigger EventName=\"Closed\">\n<!-- Dispose\u3088\u308a\u5148\u306b -->\n            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"SaveLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\"/>\n            <l:DataContextDisposeAction />\n        </i:EventTrigger>\n        <i:EventTrigger EventName=\"Loaded\">\n            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"LoadLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\"/>\n        </i:EventTrigger>\n\n<!-- \u5404Pane\u306bContentID\u3092\u6307\u5b9a -->\n                        <avalonDock:LayoutDocument Title=\"Document1\" CanClose=\"False\" CanFloat=\"False\" ContentId=\"Document\">\n                        <avalonDock:LayoutAnchorable x:Name=\"_toolWindow1\" Title=\"ToolWindow1\" ContentId=\"Tool\">\n```\n\n\u4fdd\u5b58\u3055\u308c\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\n\n```xml:AvalonDock\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LayoutRoot xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n  <RootPanel Orientation=\"Vertical\">\n    <LayoutPanel Orientation=\"Horizontal\" DockHeight=\"1.41901569404236*\">\n      <LayoutDocumentPane>\n        <LayoutDocument Title=\"Document1\" IsSelected=\"True\" IsLastFocusedDocument=\"True\" ContentId=\"Document\" CanClose=\"False\" CanFloat=\"False\" LastActivationTimeStamp=\"02/12/2015 12:31:51\" />\n      </LayoutDocumentPane>\n    </LayoutPanel>\n    <LayoutAnchorablePaneGroup Orientation=\"Horizontal\" DockWidth=\"150\" DockHeight=\"76.26\" FloatingWidth=\"150\" FloatingHeight=\"269\" FloatingLeft=\"429\" FloatingTop=\"545\">\n      <LayoutAnchorablePane DockHeight=\"76.26\" FloatingWidth=\"150\" FloatingHeight=\"269\" FloatingLeft=\"429\" FloatingTop=\"545\">\n        <LayoutAnchorable AutoHideMinWidth=\"100\" AutoHideMinHeight=\"100\" Title=\"ToolWindow1\" IsSelected=\"True\" ContentId=\"Tool\" FloatingLeft=\"429\" FloatingTop=\"545\" FloatingWidth=\"150\" FloatingHeight=\"269\" LastActivationTimeStamp=\"02/12/2015 12:31:51\" />\n      </LayoutAnchorablePane>\n    </LayoutAnchorablePaneGroup>\n  </RootPanel>\n  <TopSide />\n  <RightSide />\n  <LeftSide />\n  <BottomSide />\n  <FloatingWindows />\n  <Hidden />\n</LayoutRoot>\n```\n\nContentID\u304cLayoutDocument\u3068LayoutAnchorable\u306e\u884c\u5148\u3092\u793a\u3057\u3066\u3044\u308b\u3002\n\n![ss08.png](https://qiita-image-store.s3.amazonaws.com/0/59664/e119be8f-3022-9bab-ee75-e9579c4815eb.png)\n\n\u78ba\u304b\u306b\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u5fa9\u65e7\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u3057\u304b\u3057\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u306eDeserialize\u304c\u8d70\u3063\u305f\u3068\u3053\u308d\u3067\u30e1\u30cb\u30e5\u30fc\u306e\u8868\u793a\u30fb\u975e\u8868\u793a\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\n\n```xml:\u3053\u308c\n               <MenuItem \n                    Header=\"ToolWindow1\"\n                    IsCheckable=\"True\"\n                    IsChecked=\"{Binding IsVisible, ElementName=_toolWindow1}\" />\n```\n\n\u304c\u7121\u52b9\u306b\u306a\u308b\u3053\u3068\u304c\u5224\u660e\u3002\u304a\u305d\u3089\u304f\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067LayoutAnchorable\u304c\u65b0\u898f\u306b\u4f5c\u308a\u76f4\u3055\u308c\u308b\u305f\u3081\u3002\n\u7121\u7406\u3084\u308a\u5bfe\u7b56\u3057\u305f\u3002\n\n## \u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067LayoutAnchorable\u304c\u884c\u65b9\u4e0d\u660e\u306b\u306a\u308b\u4ef6\u306e\u5bfe\u7b56\n\n```csharp\n\n            serializer.LayoutSerializationCallback += (o, e) =>\n            {\n                if (e.Model.ContentId == \"Tool\")\n                {\n                    // \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u3066\u65b0\u3057\u304f\u3067\u304d\u305fLayoutAnchorable\u3092\u4fdd\u5b58\u3057\u3068\u304f\n                    Tool = (LayoutAnchorable)e.Model;\n                }\n            };\n\n```\n\n\u3053\u3044\u3064\u3068\u30e1\u30cb\u30e5\u30fc\u3092\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u3002\n\n```xml\n\n                <MenuItem \n                    Header=\"ToolWindow1\"\n                    IsCheckable=\"True\"\n                    IsChecked=\"{Binding Tool.IsVisible, Mode=TwoWay}\" />\n                <Separator/>\n\n```\n\n\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u3002\n\n# \u30ec\u30a4\u30a2\u30a6\u30c8\u30c7\u30fc\u30bf\u3092\u6539\u9020\u3057\u3066\u6700\u5f8c\u306b\u958b\u3044\u3066\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u3066\u307f\u308b\n\n```csharp:\u30ec\u30a4\u30a2\u30a6\u30c8xml\u3092\u6539\u9020\u3059\u308b\n        public void LoadLayout(DockingManager dockManager)\n        {\n            var bytes = System.IO.File.ReadAllBytes(LayoutFile);\n            \n            var serializer = new XmlLayoutSerializer(dockManager);\n            try\n            {\n                using (var stream = new MemoryStream(bytes))\n                {\n                    serializer.Deserialize(stream);\n                }\n            }\n            catch (FileNotFoundException ex)\n            {\n\n            }\n            catch (Exception ex)\n            {\n                ErrorDialog(ex);\n            }\n\n            // \u72ec\u81ea\u306bxml\u3092\u89e3\u6790\u3059\u308b\n            using (var stream = new MemoryStream(bytes))\n            {\n                var doc = new XmlDocument();\n                doc.Load(stream);\n                // ContentID\u304c\"Document\"\u306eID\u3092\u63a2\u3059\n                var documents = doc.SelectNodes(\"//*[@ContentId=\\\"Document\\\"]\");\n                if (documents.Count > 0)\n                {\n                    var document = documents[0];\n                    foreach (XmlAttribute attrib in document.Attributes)\n                    {\n                        if (attrib.Name == \"FilePath\")\n                        {\n                            Path = attrib.Value;\n                            Load();\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        public void SaveLayout(DockingManager dockManager)\n        {\n            var serializer = new XmlLayoutSerializer(dockManager);\n            var doc=new XmlDocument();\n            using (var stream = new MemoryStream())\n            {\n                serializer.Serialize(stream);\n                stream.Position = 0;\n                doc.Load(stream);\n            }\n\n            if(!String.IsNullOrEmpty(Path)){\n                // ContentID\u304c\"Document\"\u306eID\u3092\u63a2\u3059\n                var documents=doc.SelectNodes(\"//*[@ContentId=\\\"Document\\\"]\");\n                if (documents.Count > 0)\n                {\n                    // document\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u8a18\u3059\u308b\n                    var document = documents[0];\n\n                    var attrib=doc.CreateAttribute(\"FilePath\");\n                    attrib.Value=Path;\n                    document.Attributes.Append(attrib);\n                }\n            }           \n\n            using (var stream = new FileStream(LayoutFile, FileMode.Create))\n            {\n                doc.Save(stream);\n            }\n        }\n```\n\n![ss09.png](https://qiita-image-store.s3.amazonaws.com/0/59664/034309a9-867b-e10d-0154-96e52761b9e3.png)\n\n\u3044\u3044\u611f\u3058\u306b\u306a\u3063\u305f\u3002\n\n#\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\n\u3053\u308c\u3082\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u6c17\u5473\u3002\n\n```csharp:\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5fa9\u65e7\u3059\u308b\u524d\u306b\u4e00\u56de\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\n            // backup default layout\n            using (var ms = new MemoryStream())\n            {\n                var serializer = new XmlLayoutSerializer(dockManager);\n                serializer.Serialize(ms);\n                m_defaultLayout = ms.ToArray();\n            }\n```\n\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u8aad\u307f\u66f8\u304d\u3092\u5165\u308c\u308b\u3068\u6025\u306b\u6271\u3044\u8f9b\u304f\u306a\u3063\u305f\u611f\u304c\u3042\u308b\u3002\n\u30ec\u30a4\u30a2\u30a6\u30c8\u306eDeserialize\u3067\u56f0\u3063\u305f\u5834\u5408\u306f\u3001LayoutSerializationCallback\u3067\u9811\u5f35\u308c\u3070\u4f55\u3068\u304b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u898f\u6a21\u306e\u5c0f\u3055\u3044\u30a2\u30d7\u30ea\u306a\u3089\u7121\u7406\u306bMVVM\u306b\u3057\u306a\u3044\u65b9\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u540c\u6642\u306b\u8907\u6570\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u958b\u304f\u3001\u30b5\u30d6\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u7a2e\u985e\u304c\u305f\u304f\u3055\u3093\u3042\u308b\u3068\u304b\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u62e1\u5f35\u3059\u308b\u306a\u3069\u304c\u3042\u308b\u306a\u3089MVVM\u306b\u3059\u308b\u5fc5\u8981\u6027\u304c\u3042\u308b\u3002\n\n\u6b21\u56de\u3001AvalonDockMVVM\u306b\u7d9a\u304f\u3002\n", "tags": ["C#", "WPF"]}