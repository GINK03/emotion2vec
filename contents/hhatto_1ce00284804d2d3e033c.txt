{"context": " More than 1 year has passed since last update.\n\n\u524d\u63d0\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nOS\nMacOSX Yosemite 10.11.2\n\n\nRust\n1.5.0\n\n\n\u691c\u8a3c\u65e5\u6642\n2016.01.05\n\n\n\n\nCrate\nssh2-rs\u3092\u4f7f\u3046\nhttps://github.com/alexcrichton/ssh2-rs\n\n\u30ea\u30e2\u30fc\u30c8\u30db\u30b9\u30c8\u3067ls\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u30b3\u30fc\u30c9\u4f8b\nextern crate ssh2;\nuse ssh2::Session;\nuse std::io::prelude::*;\nuse std::net::TcpStream;\nuse std::env;\n\nstatic USERNAME: &'static str = \"username\";\nstatic REMOTE_ADDRESS: &'static str = \"127.0.0.1:22\";\n\nfn main() {\n    let tcp = TcpStream::connect(REMOTE_ADDRESS).unwrap();\n    let mut session = Session::new().unwrap();\n    session.handshake(&tcp).unwrap();\n    let privatekey_filepath = env::home_dir().unwrap().join(\".ssh/id_rsa\");\n    session.userauth_pubkey_file(USERNAME, None, privatekey_filepath.as_path(), None).unwrap();\n\n    assert!(session.authenticated());\n\n    let mut chan = session.channel_session().unwrap();\n    chan.exec(\"ls\").unwrap();\n    let mut s = String::new();\n    chan.read_to_string(&mut s).unwrap();\n    println!(\"{}\", s);\n}\n\n\nscp\u306e\u30b3\u30fc\u30c9\u4f8b\nextern crate ssh2;\nuse ssh2::Session;\nuse std::io::prelude::*;\nuse std::net::TcpStream;\nuse std::env;\nuse std::path::Path;\n\nstatic USERNAME: &'static str = \"username\";\nstatic REMOTE_ADDRESS: &'static str = \"127.0.0.1:22\";\nstatic REMOTE_FILE: &'static str = \"/path/to/remote\";\nstatic NEW_REMOTE_FILE: &'static str = \"/path/to/remote.new\";\n\nfn main() {\n    let tcp = TcpStream::connect(REMOTE_ADDRESS).unwrap();\n    let mut session = Session::new().unwrap();\n    session.handshake(&tcp).unwrap();\n    let privatekey_filepath = env::home_dir().unwrap().join(\".ssh/id_rsa\");\n    session.userauth_pubkey_file(USERNAME, None, privatekey_filepath.as_path(), None).unwrap();\n\n    let (mut remote_file, stat) = session.scp_recv(Path::new(REMOTE_FILE))\n                                         .unwrap();\n    println!(\"remote file stat: {}\", stat.size());\n\n    let mut contents = Vec::new();\n    remote_file.read_to_end(&mut contents).unwrap();\n\n    let mut new_remote_file = session.scp_send(Path::new(NEW_REMOTE_FILE),\n                                               0o644,\n                                               stat.size(),\n                                               None)\n                                     .unwrap();\n    new_remote_file.write_all(&contents).unwrap();\n}\n\n\n\u6ce8\u610f\u70b9\nTcpStream\u3084Session\u3092\u3064\u304f\u3063\u3066\u8a8d\u8a3c\u3059\u308b\u3068\u3053\u308d\u3092lib.rs\u306b\u5207\u308a\u51fa\u3057\u3066\u5171\u901a\u5316(\u30e2\u30b8\u30e5\u30fc\u30eb\u4f5c\u3063\u3066get_session\u7684\u306a\u95a2\u6570\u306b)\u3057\u3088\u3046\u3068\u3057\u305f\u304c\u3001TCP\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u304c\u95a2\u6570\u5185\u3057\u304b\u4fdd\u6301\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u53f6\u308f\u306c\u5922\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\u826f\u3044\u65b9\u6cd5\u3092\u3054\u5b58\u77e5\u306e\u65b9\u3044\u308c\u3070\u6559\u3048\u3066\u3044\u305f\u3060\u304d\u305f\u304f\u3002\n[2016.01.06\u8ffd\u8a18]\n\nTCP\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u304c\u95a2\u6570\u5185\u3057\u304b\u4fdd\u6301\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u53f6\u308f\u306c\u5922\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\n\u3053\u3053\u306f\u79c1\u306e\u7406\u89e3\u4e0d\u8db3\u3067\u3001TcpStream\u3092\u3082\u3063\u305f\u5909\u6570(\u30b5\u30f3\u30d7\u30eb\u5185\u306etcp\u306b\u3042\u305f\u308b\u3082\u306e)\u306e\u5bff\u547d\u3092\u8003\u616e\u3067\u304d\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u539f\u56e0\u3067\u3057\u305f\u3002\n## \u524d\u63d0\n| \u9805\u76ee | \u8aac\u660e |\n|----|-------------------------|\n| OS | MacOSX Yosemite 10.11.2 |\n| Rust | 1.5.0 |\n| \u691c\u8a3c\u65e5\u6642 | 2016.01.05              |\n\n\n## Crate\n[ssh2-rs](http://alexcrichton.com/ssh2-rs/ssh2/index.html)\u3092\u4f7f\u3046\nhttps://github.com/alexcrichton/ssh2-rs\n\n## \u30ea\u30e2\u30fc\u30c8\u30db\u30b9\u30c8\u3067ls\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u30b3\u30fc\u30c9\u4f8b\n```rust\nextern crate ssh2;\nuse ssh2::Session;\nuse std::io::prelude::*;\nuse std::net::TcpStream;\nuse std::env;\n\nstatic USERNAME: &'static str = \"username\";\nstatic REMOTE_ADDRESS: &'static str = \"127.0.0.1:22\";\n\nfn main() {\n    let tcp = TcpStream::connect(REMOTE_ADDRESS).unwrap();\n    let mut session = Session::new().unwrap();\n    session.handshake(&tcp).unwrap();\n    let privatekey_filepath = env::home_dir().unwrap().join(\".ssh/id_rsa\");\n    session.userauth_pubkey_file(USERNAME, None, privatekey_filepath.as_path(), None).unwrap();\n\n    assert!(session.authenticated());\n\n    let mut chan = session.channel_session().unwrap();\n    chan.exec(\"ls\").unwrap();\n    let mut s = String::new();\n    chan.read_to_string(&mut s).unwrap();\n    println!(\"{}\", s);\n}\n```\n\n## scp\u306e\u30b3\u30fc\u30c9\u4f8b\n```rust\nextern crate ssh2;\nuse ssh2::Session;\nuse std::io::prelude::*;\nuse std::net::TcpStream;\nuse std::env;\nuse std::path::Path;\n\nstatic USERNAME: &'static str = \"username\";\nstatic REMOTE_ADDRESS: &'static str = \"127.0.0.1:22\";\nstatic REMOTE_FILE: &'static str = \"/path/to/remote\";\nstatic NEW_REMOTE_FILE: &'static str = \"/path/to/remote.new\";\n\nfn main() {\n    let tcp = TcpStream::connect(REMOTE_ADDRESS).unwrap();\n    let mut session = Session::new().unwrap();\n    session.handshake(&tcp).unwrap();\n    let privatekey_filepath = env::home_dir().unwrap().join(\".ssh/id_rsa\");\n    session.userauth_pubkey_file(USERNAME, None, privatekey_filepath.as_path(), None).unwrap();\n\n    let (mut remote_file, stat) = session.scp_recv(Path::new(REMOTE_FILE))\n                                         .unwrap();\n    println!(\"remote file stat: {}\", stat.size());\n\n    let mut contents = Vec::new();\n    remote_file.read_to_end(&mut contents).unwrap();\n\n    let mut new_remote_file = session.scp_send(Path::new(NEW_REMOTE_FILE),\n                                               0o644,\n                                               stat.size(),\n                                               None)\n                                     .unwrap();\n    new_remote_file.write_all(&contents).unwrap();\n}\n```\n\n## \u6ce8\u610f\u70b9\n`TcpStream`\u3084`Session`\u3092\u3064\u304f\u3063\u3066\u8a8d\u8a3c\u3059\u308b\u3068\u3053\u308d\u3092`lib.rs`\u306b\u5207\u308a\u51fa\u3057\u3066\u5171\u901a\u5316(\u30e2\u30b8\u30e5\u30fc\u30eb\u4f5c\u3063\u3066`get_session`\u7684\u306a\u95a2\u6570\u306b)\u3057\u3088\u3046\u3068\u3057\u305f\u304c\u3001TCP\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u304c\u95a2\u6570\u5185\u3057\u304b\u4fdd\u6301\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u53f6\u308f\u306c\u5922\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\u826f\u3044\u65b9\u6cd5\u3092\u3054\u5b58\u77e5\u306e\u65b9\u3044\u308c\u3070\u6559\u3048\u3066\u3044\u305f\u3060\u304d\u305f\u304f\u3002\n\n[2016.01.06\u8ffd\u8a18]\n\n> TCP\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u304c\u95a2\u6570\u5185\u3057\u304b\u4fdd\u6301\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u53f6\u308f\u306c\u5922\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\n\u3053\u3053\u306f\u79c1\u306e\u7406\u89e3\u4e0d\u8db3\u3067\u3001`TcpStream`\u3092\u3082\u3063\u305f\u5909\u6570(\u30b5\u30f3\u30d7\u30eb\u5185\u306e`tcp`\u306b\u3042\u305f\u308b\u3082\u306e)\u306e\u5bff\u547d\u3092\u8003\u616e\u3067\u304d\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u539f\u56e0\u3067\u3057\u305f\u3002\n", "tags": ["rust", "SSH"]}