{"context": " More than 1 year has passed since last update.\u753b\u50cf\u3084\u30e0\u30fc\u30d3\u30fc\u7d20\u6750\u3092\u80cc\u666f\u306b\u5408\u6210\u3057\u3066\u8868\u793a\u3057\u305f\u3044\u5834\u5408\u3001\u3082\u3068\u306e\u7d20\u6750\u304cPNG\u5f62\u5f0f\u306a\u3069\u3067\u30a2\u30eb\u30d5\u30a1\u5024\u3067\u900f\u660e\u5ea6\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u554f\u984c\u306a\u3044\u306e\u3060\u3051\u308c\u3069\u3001\u80cc\u666f\u304c\u9ed2\u3084\u7dd1\u306a\u3069\u306e\u5358\u8272\u30d9\u30bf\u5857\u308a\u306b\u306a\u3063\u3066\u3044\u305f\u3068\u304d\u306b\u306f\u3001\u3044\u308f\u3086\u308b\u300c\u30af\u30ed\u30de\u30ad\u30fc\u300d\u7684\u306a\u51e6\u7406\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nShader(GLSL)\u3092\u77e5\u3089\u306a\u304b\u3063\u305f\u9803\u306f\u3001\u753b\u50cf\u306e\u5168\u3066\u306ePixel\u60c5\u5831\u3092\u3068\u308a\u51fa\u3057\u3066\u3001\u7279\u5b9a\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u63cf\u753b\u3057\u306a\u3044\u306a\u3069\u306e\u529b\u6280\u3067\u3084\u308d\u3046\u3068\u3057\u3066\u307f\u305f\u3051\u3069\u3001CPU\u3078\u306e\u8ca0\u8377\u304c\u5c0b\u5e38\u3067\u306a\u3044\u306e\u3067\u3001\u5927\u304d\u306a\u753b\u50cf\u7d20\u6750\u3067\u306f\u73fe\u5b9f\u7684\u3067\u306f\u306a\u3044\u3002\n\u305d\u3053\u3067\u3001openFrameworks + GLSL\u3067\u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210\u3092\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u307f\u305f\u3002\nWebGL\u7528\u306b\u5b9f\u73fe\u3057\u3066\u3044\u308b\u30d6\u30ed\u30b0\u304c\u3068\u3066\u3082\u308f\u304b\u308a\u6613\u304f\u7406\u89e3\u3067\u304d\u305f\u3002\n\nwgld.org | \u52d5\u753b\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210\n\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3001openFrameworks\u7528\u306b\u79fb\u690d\u3057\u3066\u307f\u305f\u3002\n\u307e\u305a\u306fShader\u306e\u30bd\u30fc\u30b9\u3002vertex shader\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u3002\n\nchromaKey.vert\n\n#version 120\n\nvarying vec2 texCoordVarying;\n\nvoid main()\n{\n  texCoordVarying = gl_MultiTexCoord0.xy;\n  gl_Position = ftransform();\n}\n\n\u3053\u3061\u3089\u306f\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u306e\u60c5\u5831\u3092fragment shader\u306b\u6e21\u3057\u3066\u308b\u3060\u3051\u3002\n\u6b21\u306bfragment shader\u3002\n\nchromaKey.frag\n\n#version 120\n\nuniform sampler2DRect tex0;     // \u30bd\u30fc\u30b9\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nuniform float threshold;        // \u95be\u5024\nuniform vec3 chromaKeyColor;    // \u30ad\u30fc\u306e\u8272\nvarying vec2 texCoordVarying;\n\nvoid main()\n{\n    // \u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u306e\u8272\u3092\u53d6\u5f97\n    vec4 texel0 = texture2DRect(tex0, texCoordVarying);\n    // \u30ad\u30fc\u306e\u8272\u3068\u306e\u5dee\u5206\u3092\u8a08\u7b97\n    float diff = length(chromaKeyColor - texel0.rgb);\n    if(diff < threshold){\n        // \u3082\u3057\u30ad\u30fc\u306e\u8272\u3088\u308a\u5dee\u5206\u304c\u5c11\u306a\u304b\u3063\u305f\u3089\u63cf\u753b\u3057\u306a\u3044\n        discard;\n    }else{\n        // \u30ad\u30fc\u306e\u8272\u3088\u308a\u5dee\u5206\u304c\u591a\u304b\u3063\u305f\u3089\u3001\u305d\u306e\u307e\u307e\u63cf\u753b\n        gl_FragColor = texel0;\n    }\n}\n\n\u30ad\u30fc\u306e\u8272\u3068\u95be\u5024\u3092uniform\u306b\u3057\u3066\u3001\u5916\u90e8\u304b\u3089\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\u3053\u308c\u3067\u6c4e\u7528\u6027\u306e\u3042\u308b\u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210\u7528Shader\u3068\u3057\u3066\u6d3b\u7528\u3067\u304d\u308b\u3002\n\u3053\u308c\u3092openFrameworks\u5074\u3067\u5229\u7528\u3059\u308b\u65b9\u6cd5\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\nofApp.h\n\n#pragma once\n#include \"ofMain.h\"\n\nclass ofApp : public ofBaseApp{\n\npublic:\n    void setup();\n    void update();\n    void draw();\n\n    ofShader shader; // \u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210Shader\n    ofImage image; // \u30bd\u30fc\u30b9\u306e\u30a4\u30e1\u30fc\u30b8\n};\n\n\nofApp.cpp\n\n#include \"ofApp.h\"\n\nvoid ofApp::setup(){\n    image.load(\"source.jpg\"); // \u30bd\u30fc\u30b9\u753b\u50cf\n    shader.load(\"shader/chromaKey\"); // \u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210GLSL\n}\n\nvoid ofApp::update(){\n\n}\n\nvoid ofApp::draw(){\n    ofBackgroundGradient(ofColor(128), ofColor(31), OF_GRADIENT_LINEAR);\n\n    // \u30de\u30a6\u30b9\u306eX\u5ea7\u6a19\u3067\u95be\u5024\u3092\u8a2d\u5b9a\n    float threshold = ofMap(mouseX, 0, ofGetWidth(), 0.0, 2.0);\n\n    shader.begin();\n    // \u30ad\u30fc\u306e\u8272\u3092\u8a2d\u5b9a(green)\n    shader.setUniform3f(\"chromaKeyColor\", ofVec3f(0.0, 1.0, 0.0));\n    // \u95be\u5024\u8a2d\u5b9a\n    shader.setUniform1f(\"threshold\", threshold);\n    // \u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210\u3059\u308b\u753b\u50cf\u3092\u63cf\u753b\n    image.draw(0, 0);\n    shader.end();\n\n    ofDrawBitmapString(\"difference = \" + ofToString(difference), 20, 20);\n}\n\n\u95be\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u4f8b\u3048\u3070\u3061\u3087\u3063\u3068\u80cc\u666f\u3068\u306e\u5883\u754c\u304c\u30dc\u30b1\u3066\u3044\u308b\u753b\u50cf\u3067\u3082\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u304d\u308c\u306b\u5408\u6210\u3067\u304d\u308b!\n\n\u3082\u3061\u308d\u3093\u52d5\u753b\u3067\u3082\u7c21\u5358!\n\nofApp.h\n\n#pragma once\n#include \"ofMain.h\"\n\nclass ofApp : public ofBaseApp{\n\npublic:\n    void setup();\n    void update();\n    void draw();\n\n    ofShader shader;\n    ofVideoPlayer video;\n};\n\n\nofApp.cpp\n\n#include \"ofApp.h\"\n\nvoid ofApp::setup(){\n    video.load(\"source.mp4\");\n    video.play();\n    shader.load(\"shader/chromaKey\");\n}\n\nvoid ofApp::update(){\n    video.update();\n}\n\nvoid ofApp::draw(){\n    ofBackgroundGradient(ofColor(128), ofColor(31), OF_GRADIENT_LINEAR);\n    float threshold = ofMap(mouseX, 0, ofGetWidth(), 0.0, 2.0);\n    shader.begin();\n    shader.setUniform3f(\"chromaKeyColor\", ofVec3f(0.0, 1.0, 0.0));\n    shader.setUniform1f(\"threshold\", threshold);\n    video.draw(0, 0);\n    shader.end();\n}\n\n\u7206\u767a\u3082\u304d\u308c\u3044\u306b\u5408\u6210\u3067\u304d\u307e\u3057\u305f!\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 (openFrameworks 0.9.0)\n\n\naddon\u7248 - ofxChromaKey\n\u3059\u3050\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u3001addon\u5316\u3057\u3066\u307f\u305f! (openFrameworks 0.9.0 \u301c)\n\nofxChromaKey on github\n\n\u753b\u50cf\u3084\u30e0\u30fc\u30d3\u30fc\u7d20\u6750\u3092\u80cc\u666f\u306b\u5408\u6210\u3057\u3066\u8868\u793a\u3057\u305f\u3044\u5834\u5408\u3001\u3082\u3068\u306e\u7d20\u6750\u304cPNG\u5f62\u5f0f\u306a\u3069\u3067\u30a2\u30eb\u30d5\u30a1\u5024\u3067\u900f\u660e\u5ea6\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u554f\u984c\u306a\u3044\u306e\u3060\u3051\u308c\u3069\u3001\u80cc\u666f\u304c\u9ed2\u3084\u7dd1\u306a\u3069\u306e\u5358\u8272\u30d9\u30bf\u5857\u308a\u306b\u306a\u3063\u3066\u3044\u305f\u3068\u304d\u306b\u306f\u3001\u3044\u308f\u3086\u308b\u300c[\u30af\u30ed\u30de\u30ad\u30fc](https://ja.wikipedia.org/wiki/%E3%82%AF%E3%83%AD%E3%83%9E%E3%82%AD%E3%83%BC)\u300d\u7684\u306a\u51e6\u7406\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nShader(GLSL)\u3092\u77e5\u3089\u306a\u304b\u3063\u305f\u9803\u306f\u3001\u753b\u50cf\u306e\u5168\u3066\u306ePixel\u60c5\u5831\u3092\u3068\u308a\u51fa\u3057\u3066\u3001\u7279\u5b9a\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u63cf\u753b\u3057\u306a\u3044\u306a\u3069\u306e\u529b\u6280\u3067\u3084\u308d\u3046\u3068\u3057\u3066\u307f\u305f\u3051\u3069\u3001CPU\u3078\u306e\u8ca0\u8377\u304c\u5c0b\u5e38\u3067\u306a\u3044\u306e\u3067\u3001\u5927\u304d\u306a\u753b\u50cf\u7d20\u6750\u3067\u306f\u73fe\u5b9f\u7684\u3067\u306f\u306a\u3044\u3002\n\n\u305d\u3053\u3067\u3001openFrameworks + GLSL\u3067\u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210\u3092\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u307f\u305f\u3002\n\nWebGL\u7528\u306b\u5b9f\u73fe\u3057\u3066\u3044\u308b\u30d6\u30ed\u30b0\u304c\u3068\u3066\u3082\u308f\u304b\u308a\u6613\u304f\u7406\u89e3\u3067\u304d\u305f\u3002\n\n- [wgld.org | \u52d5\u753b\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210](https://wgld.org/d/webgl/w080.html)\n\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3001openFrameworks\u7528\u306b\u79fb\u690d\u3057\u3066\u307f\u305f\u3002\n\n\u307e\u305a\u306fShader\u306e\u30bd\u30fc\u30b9\u3002vertex shader\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u3002\n\n- chromaKey.vert\n\n<pre>\n#version 120\n\nvarying vec2 texCoordVarying;\n\nvoid main()\n{\n  texCoordVarying = gl_MultiTexCoord0.xy;\n  gl_Position = ftransform();\n}\n</pre>\n\n\u3053\u3061\u3089\u306f\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u306e\u60c5\u5831\u3092fragment shader\u306b\u6e21\u3057\u3066\u308b\u3060\u3051\u3002\n\n\u6b21\u306bfragment shader\u3002\n\n- chromaKey.frag\n\n```glsl\n#version 120\n\nuniform sampler2DRect tex0;     // \u30bd\u30fc\u30b9\u306e\u30c6\u30af\u30b9\u30c1\u30e3\nuniform float threshold;        // \u95be\u5024\nuniform vec3 chromaKeyColor;    // \u30ad\u30fc\u306e\u8272\nvarying vec2 texCoordVarying;\n\nvoid main()\n{\n    // \u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u306e\u8272\u3092\u53d6\u5f97\n    vec4 texel0 = texture2DRect(tex0, texCoordVarying);\n    // \u30ad\u30fc\u306e\u8272\u3068\u306e\u5dee\u5206\u3092\u8a08\u7b97\n    float diff = length(chromaKeyColor - texel0.rgb);\n    if(diff < threshold){\n        // \u3082\u3057\u30ad\u30fc\u306e\u8272\u3088\u308a\u5dee\u5206\u304c\u5c11\u306a\u304b\u3063\u305f\u3089\u63cf\u753b\u3057\u306a\u3044\n        discard;\n    }else{\n        // \u30ad\u30fc\u306e\u8272\u3088\u308a\u5dee\u5206\u304c\u591a\u304b\u3063\u305f\u3089\u3001\u305d\u306e\u307e\u307e\u63cf\u753b\n        gl_FragColor = texel0;\n    }\n}\n```\n\u30ad\u30fc\u306e\u8272\u3068\u95be\u5024\u3092uniform\u306b\u3057\u3066\u3001\u5916\u90e8\u304b\u3089\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\u3053\u308c\u3067\u6c4e\u7528\u6027\u306e\u3042\u308b\u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210\u7528Shader\u3068\u3057\u3066\u6d3b\u7528\u3067\u304d\u308b\u3002\n\n\u3053\u308c\u3092openFrameworks\u5074\u3067\u5229\u7528\u3059\u308b\u65b9\u6cd5\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n- ofApp.h\n\n```cpp\n#pragma once\n#include \"ofMain.h\"\n\nclass ofApp : public ofBaseApp{\n\npublic:\n    void setup();\n    void update();\n    void draw();\n\n    ofShader shader; // \u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210Shader\n    ofImage image; // \u30bd\u30fc\u30b9\u306e\u30a4\u30e1\u30fc\u30b8\n};\n```\n\n- ofApp.cpp\n\n```cpp\n#include \"ofApp.h\"\n\nvoid ofApp::setup(){\n    image.load(\"source.jpg\"); // \u30bd\u30fc\u30b9\u753b\u50cf\n    shader.load(\"shader/chromaKey\"); // \u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210GLSL\n}\n\nvoid ofApp::update(){\n\n}\n\nvoid ofApp::draw(){\n    ofBackgroundGradient(ofColor(128), ofColor(31), OF_GRADIENT_LINEAR);\n\n    // \u30de\u30a6\u30b9\u306eX\u5ea7\u6a19\u3067\u95be\u5024\u3092\u8a2d\u5b9a\n    float threshold = ofMap(mouseX, 0, ofGetWidth(), 0.0, 2.0);\n\n    shader.begin();\n    // \u30ad\u30fc\u306e\u8272\u3092\u8a2d\u5b9a(green)\n    shader.setUniform3f(\"chromaKeyColor\", ofVec3f(0.0, 1.0, 0.0));\n    // \u95be\u5024\u8a2d\u5b9a\n    shader.setUniform1f(\"threshold\", threshold);\n    // \u30af\u30ed\u30de\u30ad\u30fc\u5408\u6210\u3059\u308b\u753b\u50cf\u3092\u63cf\u753b\n    image.draw(0, 0);\n    shader.end();\n\n    ofDrawBitmapString(\"difference = \" + ofToString(difference), 20, 20);\n}\n```\n\n\u95be\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u4f8b\u3048\u3070\u3061\u3087\u3063\u3068\u80cc\u666f\u3068\u306e\u5883\u754c\u304c\u30dc\u30b1\u3066\u3044\u308b\u753b\u50cf\u3067\u3082\u3002\n\n<a href=\"http://yoppa.org/wp-content/uploads/2016/02/source.jpg\" rel=\"attachment wp-att-6707\"><img src=\"http://yoppa.org/wp-content/uploads/2016/02/source-300x169.jpg\" alt=\"source\" width=\"300\" height=\"169\" class=\"alignleft size-medium wp-image-6707\" /></a>\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u304d\u308c\u306b\u5408\u6210\u3067\u304d\u308b!\n\n<a href=\"http://yoppa.org/wp-content/uploads/2016/02/screenshot_198.jpg\" rel=\"attachment wp-att-6709\"><img src=\"http://yoppa.org/wp-content/uploads/2016/02/screenshot_198-300x174.jpg\" alt=\"screenshot_198\" width=\"300\" height=\"174\" class=\"alignleft size-medium wp-image-6709\" /></a>\n\n\u3082\u3061\u308d\u3093\u52d5\u753b\u3067\u3082\u7c21\u5358!\n\n- ofApp.h\n\n```cpp \n#pragma once\n#include \"ofMain.h\"\n\nclass ofApp : public ofBaseApp{\n\npublic:\n    void setup();\n    void update();\n    void draw();\n\n    ofShader shader;\n    ofVideoPlayer video;\n};\n```\n\n- ofApp.cpp\n\n```cpp\n#include \"ofApp.h\"\n\nvoid ofApp::setup(){\n    video.load(\"source.mp4\");\n    video.play();\n    shader.load(\"shader/chromaKey\");\n}\n\nvoid ofApp::update(){\n    video.update();\n}\n\nvoid ofApp::draw(){\n    ofBackgroundGradient(ofColor(128), ofColor(31), OF_GRADIENT_LINEAR);\n    float threshold = ofMap(mouseX, 0, ofGetWidth(), 0.0, 2.0);\n    shader.begin();\n    shader.setUniform3f(\"chromaKeyColor\", ofVec3f(0.0, 1.0, 0.0));\n    shader.setUniform1f(\"threshold\", threshold);\n    video.draw(0, 0);\n    shader.end();\n}\n```\n\n\u7206\u767a\u3082\u304d\u308c\u3044\u306b\u5408\u6210\u3067\u304d\u307e\u3057\u305f!\n\n<img src=\"http://yoppa.org/wp-content/uploads/2016/02/screenshot_199-1024x594.jpg\" alt=\"screenshot_199\" width=\"1024\" height=\"594\" class=\"alignleft size-large wp-image-6712\" />\n\n- [\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 (openFrameworks 0.9.0)](https://drive.google.com/open?id=0BzyVHU69QO3mR1k3VGl6dFdnLTA)\n\n### addon\u7248 - ofxChromaKey\n\n\u3059\u3050\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u3001addon\u5316\u3057\u3066\u307f\u305f! (openFrameworks 0.9.0 \u301c)\n\n- [ofxChromaKey on github](https://github.com/tado/ofxChromaKey)\n", "tags": ["openFrameworks", "GLSL"]}