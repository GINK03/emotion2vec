{"context": " More than 1 year has passed since last update.\n\nD\u8a00\u8a9e\u3092\u4f7f\u3046\u7406\u7531\u3068\u3053\u306e\u8a18\u4e8b\u306e\u8da3\u65e8\n\u306a\u3093\u304bC++\u304c\u3060\u308b\u304f\u306a\u3063\u305f\u304b\u3089\u30fc\u3002\n\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210\u3092\u30e1\u30a4\u30f3\u306b\u8da3\u5473\u3092\u3057\u3066\u3044\u308b\u3068C++\u3067\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u6210\u306b\u3064\u3089\u307f\u304c\u51fa\u3066\u304f\u308b\u3002\u3088\u3044\u8a00\u8a9e\u306f\u306a\u3044\u304b\u3068\u63a2\u3057\u3066\u3044\u3066D\u8a00\u8a9e\u306b\u884c\u304d\u5f53\u305f\u3063\u305f\u3002\nD\u8a00\u8a9e\u3092\u52c9\u5f37\u3057\u3066\u3044\u3066\u300c\u3053\u308c\u306f\u4fbf\u5229\uff01\u697d\uff01\u306a\u3093\u3067C++\u306f\u3053\u3046\u306a\u3063\u3066\u3044\u306a\u3044\u3093\u3060\uff01\u300d\u3068\u3044\u3046\u8a00\u8a9e\u6a5f\u80fd\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u305f\u306e\u3067\u3001C++\u51fa\u8eab\u306e\u4eba\u9593\u304b\u3089\u307f\u305fD\u8a00\u8a9e\u306e\u826f\u3044\u3068\u3053\u308d\u3092\u307e\u3068\u3081\u3066\u307f\u308b\u3002\n\u500b\u4eba\u306e\u611f\u60f3\u306a\u306e\u3067\u4ed6\u306b\u3082\u307e\u3060\u307e\u3060D\u8a00\u8a9e\u306e\u6a5f\u80fd\u306f\u3042\u308b\u3002\nD\u8a00\u8a9e\u306e\u4e16\u754c\u3078\u3088\u3046\u3053\u305d\u3002\n\n\u57fa\u672c\u30c7\u30fc\u30bf\u578b : \u30b5\u30a4\u30ba\u306f\u8a00\u8a9e\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\nTypes\nint, short, double\u306a\u3069\u3002\nD\u3067\u306f\u3053\u308c\u3089\u306e\u57fa\u672c\u30c7\u30fc\u30bf\u578b\u306e\u30d0\u30a4\u30c8\u9577\u306f\u8a00\u8a9e\u4f7f\u7528\u306b\u3088\u308a\u5b9a\u3081\u3089\u308c\u3066\u3044\u308b\u3002C/C++\u3067\u306f\u57fa\u672c\u30c7\u30fc\u30bf\u578b\u306e\u30d0\u30a4\u30c8\u9577\u306f\u51e6\u7406\u7cfb\u4f9d\u5b58\u3067\u3042\u308a\u3001\u6307\u5b9a\u9577\u306e\u578b\u3092\u4f7f\u3046\u306b\u306f stdint.h/cstdint \u3092 include \u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3089\u3076\u308a\u30fc\u3002\n\nalias, alias this : \u3044\u308d\u3044\u308d\u306a\u3082\u306e\u306b\u5225\u540d\u3092\u3064\u3051\u308b\nDeclarations / Alias Declarations\nClasses / Alias This\n\u30b7\u30f3\u30dc\u30eb\u306b\u5225\u540d\u3092\u3064\u3051\u308b\u6a5f\u80fd\u3002typedef\u306e\u3088\u3046\u306b\u3082\u4f7f\u3048\u308b\u304c\u3001\u5909\u6570\u3001\u95a2\u6570\u3001\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u3055\u3059\u3082\u306e\uff08this\uff09\u306b\u5225\u540d\u304c\u3064\u3051\u3089\u308c\u308b\u3002\n\u30e1\u30f3\u30d0\u5909\u6570\u306b\u5225\u540d\u3092\u3064\u3051\u305f\u308a\u30fb\u30fb\u30fb\nimport std.stdio;\n\nclass Matrix\n{\npublic:\n    this(int c, int r)\n    {\n        cols = c;\n        rows = r;\n    }\n\n    double data[]; // ...\n\n    int cols;\n    int rows;\n\n    alias width = cols;\n    alias height = rows;\n}\n\nvoid main()\n{\n    auto m = new Matrix(3,5);\n    // Matrix\u306e\u30e1\u30f3\u30d0cols, rows\u306b\u5225\u540dwidth, height\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n    // C++\u3067\u3042\u308c\u3070 inline \u306e\u53c2\u7167\u8fd4\u3057\u3067\u6700\u9069\u5316\u3055\u308c\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u4ee5\u5916\u306b\n    // \u540c\u69d8\u306e\u5225\u540d\u306e\u4ed8\u4e0e\u306f\u3067\u304d\u306a\u3044\u3002\n    writeln(\n        m.cols, \", \", m.rows, \", \", m.width, \", \", m.height);\n}\n\nalias this \u3067this\u3067\u30e1\u30f3\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u308a\u3068\u304b\u3067\u304d\u308b\u3002\nimport std.stdio;\n\nclass SuperArray\n{\npublic:\n    int data[10];\n    alias data this;\n\n    int sum()\n    {\n        int r = 0;\n        foreach(int i; 0 .. 10)\n        {\n            r += data[r];\n        }\n        return r;\n    }\n}\n\nvoid main()\n{\n    auto a = new SuperArray();\n    writeln(a.length, \", \", a.sum()); // \u30e1\u30f3\u30d0\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u81ea\u8eab\u306e\u3088\u3046\u306b\u4f7f\u7528\u3067\u304d\u308b\u3002\n}\n\n\u3089\u3076\u308a\u30fc\u3002\n\nwith : \u30b3\u30fc\u30c9\u4e0a\u3067\u96c6\u4e2d\u3057\u3066\u3044\u308b\u3082\u306e\u306b\u96c6\u4e2d\u3059\u308b\nStatements / With Statement\nVisualBasic \u306e with \u3068\u540c\u3058\u3088\u3046\u306a\u3082\u306e\u3002C\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u69cb\u9020\u4f53\u3092\u3044\u3058\u3063\u305f\u308a\u3059\u308b\u6642\u306b\u3068\u3066\u3082\u4fbf\u5229\u3002\nimport std.stdio;\n\nstruct Point\n{\n    int x;\n    int y;\n}\n\nvoid main()\n{\n    Point p = {3,4};\n\n    with(p)\n    {\n        writeln(x);\n        writeln(y);\n    }\n}\n\n\nforeach, foreach_reverse : \u4fbf\u5229\u306a\u30eb\u30fc\u30d7\nStatements / For Statement\nStatements / Foreach Statement\nStatements / Foreach Range Statement\nC++11\u304b\u3089 for \u306e\u8a18\u8ff0\u306e\u67d4\u8edf\u6027\u304c\u5897\u3057\u305f\u304c\u3001D\u8a00\u8a9e\u3067\u3082\u30eb\u30fc\u30d7\u306e\u8a18\u8ff0\u306b\u540c\u7b49\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002\nimport std.stdio;\n\nvoid main()\n{\n    // C++11 \u306e range based for \u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u3067\u304d\u308b\n    string text = \"this is a pen.\";\n    foreach(char c; text)\n    {\n        write(c, \"|\");\n    }\n    writeln();\n\n    // int \u3092\u4f34\u3046\u3053\u3068\u3067 index \u3092\u540c\u6642\u306b\u53d6\u5f97\u3059\u308b\u66f8\u304d\u65b9\u3082\u3067\u304d\u308b\n    foreach(int i, char c; text)\n    {\n        writeln(i, \": \", c);\n    }\n\n    // foreach_reverse \u3067\u9006\u9806\u306b\u30eb\u30fc\u30d7\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n    foreach_reverse(char c; text)\n    {\n        write(c);\n    }\n    writeln();\n\n    // foreach range \u6587\u3067\u7bc4\u56f2\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n    foreach(int i; 0 .. 10)\n    {\n        write(i, \" \");\n    }\n    writeln();\n}\n\n\nswitch : \u67d4\u8edf\u306aswitch\nStatements / Switch Statement\nC++\u3088\u308a\u5c11\u3057\u3060\u3051\u512a\u3057\u3044\u3093\u3058\u3083\u3002\nimport std.stdio;\n\nvoid main()\n{\n    {\n        int a = 4;\n        int c1 = 3, c2 = 4, c3 = 5;\n\n        switch(a)\n        {\n        case c1: // \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5024\u3092\u6c7a\u5b9a\u3067\u304d\u308c\u3070case\u306b\u4f7f\u7528\u3067\u304d\u308b\n            writeln(\"a is c1.\");\n            break;\n        case c2, c3:\n            writeln(\"a is c2 or c3.\");\n            break;\n        default:\n            writeln(\"default!\");\n            break;\n        }\n    }\n\n    {\n        switch(a)\n        {\n        case \"your text\": // \u6587\u5b57\u5217\u3092case\u306b\u4f7f\u7528\u3067\u304d\u308b\n            writeln(\"a is c1.\");\n            break;\n        case \"my text\", \"her text\":\n            writeln(\"a is c2 or c3.\");\n            break;\n        default:\n            writeln(\"default!\");\n            break;\n        }\n    }\n}\n\n\nauto : \u304a\u306a\u3058\u307f\u306eauto\nDeclarations / Implicit Type Inference\n\u8aac\u660e\u4e0d\u8981\u3002C++11 ~ \u3068\u540c\u69d8\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nimport std.stdio;\n\nvoid main()\n{\n    auto i = 1;\n    auto s = \"my string\";\n\n    writeln(typeof(i).stringof);\n    writeln(typeof(s).stringof);\n}\n\n\nimport expression : \u30d5\u30a1\u30a4\u30eb\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8aad\u307f\u8fbc\u307f\nExpressions / Import Expressions\ndub\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c4\u30ea\u30fc\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u308b\u3002\n.\n\u251c\u2500\u2500 dub.json\n\u251c\u2500\u2500 resources\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 my_text.txt\n\u2514\u2500\u2500 source\n    \u2514\u2500\u2500 app.d\n\n2 directories, 3 files\n\ndub.json \u306b stringImportPaths \u3092\u8a18\u8ff0\u3059\u308b\u3002\n{\n    \"name\": \"garage\",\n    \"description\": \"A minimal D application.\",\n    \"copyright\": \"Copyright \u00a9 2014, yusuke\",\n    \"authors\": [\"yusuke\"],\n    \"dependencies\": {\n    },\n    \"stringImportPaths\" : [\"resources\"]\n}\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 my_text.txt \u306e\u5185\u5bb9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b string \u3067\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nimport std.stdio;\n\nvoid main()\n{\n    auto str = import(\"my_text.txt\");\n    writeln(str);\n}\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u306b\u4fbf\u5229\u3002vibe.d \u306f\u3053\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u3002\n\nproperty : \u4fbf\u5229\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\nProperties\nEnums enum \u306b\u3082\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u3042\u308b\nC++\u3067\u3042\u308c\u3070\u578b\u306b\u95a2\u3059\u308b\u60c5\u5831\u306f limits \u306a\u3069\u3067\u500b\u5225\u306b\u7570\u306a\u308b\u8a18\u6cd5\u3067\u53d6\u5f97\u3059\u308b\u304c\u3001D\u8a00\u8a9e\u3067\u306f\u7d71\u4e00\u7684\u306a\u66f8\u304d\u65b9\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u307e\u305fEnum\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u305f\u3068\u3048\u3070 T.max \u3092\u5f97\u305f\u3068\u304d\u306b\u5143\u3068\u306a\u308b\u6574\u6570\u578b\u306e\u6700\u5927\u5024\u3067\u306f\u306a\u304f\u305d\u306eEnum\u578b\u304c\u3068\u308a\u3046\u308b\u6700\u5927\u306e\u30e1\u30f3\u30d0\u30fc\u3092\u8fd4\u3059\u306a\u3069\u3001Enum\u578b\u306b\u7279\u5316\u3057\u305f\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u4fbf\u5229\u3002\nimport std.stdio;\n\n// \u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001\u6574\u6570\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4e00\u90e8\u3092\u8868\u793a\u3059\u308b\nvoid printProperties(T)()\n    if( __traits(isIntegral, T) && !is(T == enum) )\n{\n    writeln(\"T.stringof: \", T.stringof);\n    writeln(\"T.sizeof: \", T.sizeof);\n    writeln(\"T.init: \", T.init);\n    writeln(\"T.min: \", T.min);\n    writeln(\"T.max: \", T.max);\n    // \u306a\u3069\u306a\u3069\n}\n\n// \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4e00\u90e8\u3092\u8868\u793a\u3059\u308b\nvoid printProperties(T)()\n    if( __traits(isFloating, T) )\n{\n    writeln(\"T.stringof: \", T.stringof);\n    writeln(\"T.sizeof: \", T.sizeof);\n    writeln(\"T.init: \", T.init);\n    writeln(\"T.min: \", T.min_normal);\n    writeln(\"T.max: \", T.max);\n    writeln(\"T.infinity: \", T.infinity);\n    writeln(\"T.nan: \", T.nan);\n    writeln(\"T.epsilon: \", T.epsilon);\n    // \u306a\u3069\u306a\u3069\n}\n\n// Enum\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8868\u793a\u3059\u308b\nvoid printProperties(T)()\n    if( is(T == enum) )\n{\n    writeln(\"T.stringof: \", T.stringof);\n    writeln(\"T.sizeof: \", T.sizeof);\n    writeln(\"T.init: \", T.init);\n    writeln(\"T.min: \", T.min);\n    writeln(\"T.max: \", T.max);\n}\n\nenum Jobs\n{\n    worker,\n    expert,\n    exective\n}\n\nvoid main()\n{\n    printProperties!(int);\n    printProperties!(double);\n    printProperties!(Jobs);\n}\n\n\u51fa\u529b\nT.stringof: int\nT.sizeof: 4\nT.init: 0\nT.min: -2147483648\nT.max: 2147483647\nT.stringof: double\nT.sizeof: 8\nT.init: nan\nT.min: 2.22507e-308\nT.max: 1.79769e+308\nT.infinity: inf\nT.nan: nan\nT.epsilon: 2.22045e-16\nT.stringof: Jobs\nT.sizeof: 4\nT.init: 0\nT.min: 0\nT.max: 2\n\n\nin, out, body / unittest : \u30c6\u30b9\u30c8\u306e\u8a18\u8ff0\u306e\u6a19\u6e96\n\nin, out, body\nContract Programming\nD\u8a00\u8a9e\u3067\u306f\u95a2\u6570\u3092in, out, body\u306e\u30d6\u30ed\u30c3\u30af\u306b\u5206\u3051\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002in\u3068body\u306e\u307f\u3001out\u3068body\u306e\u307f\u3001body\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u7528\u305b\u305a\u306b\u4e00\u822c\u7684\u306a\u5b9a\u7fa9\u306e\u307f\u3092\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\nin\u30d6\u30ed\u30c3\u30af\u3001out\u30d6\u30ed\u30c3\u30af\u306b\u8a18\u8ff0\u3055\u308c\u305f\u5b9a\u7fa9\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306edebug\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3001release\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u306f\u30b3\u30fc\u30c9\u306f\u7121\u8996\u3055\u308c\u308b\u3002in\u30d6\u30ed\u30c3\u30af\u306f\u4e8b\u524d\u6761\u4ef6\u306e\u8a18\u8ff0\u3067\u3042\u308a\u5f15\u6570\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3002body\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002out\u30d6\u30ed\u30c3\u30af\u306f\u4e8b\u5f8c\u6761\u4ef6\u306e\u8a18\u8ff0\u3067\u3042\u308a\u623b\u308a\u5024\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3002body\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u305f\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u8a18\u8ff0\u4f4d\u7f6e\u304c\u30d1\u30bf\u30fc\u30f3\u5316\u3055\u308c\u305f\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3068\u8003\u3048\u308c\u3070\u3088\u3044\u3002\u3053\u306e\u6a5f\u80fd\u306f\u5951\u7d04\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308b\u304c\u3001\u3042\u307e\u308a\u6c17\u306b\u305b\u305a\u4fbf\u5229\u306b\u5b89\u5168\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u306b\u4f7f\u3048\u3070\u3088\u3044\u3068\u601d\u3046\u3002\n\u5951\u7d04\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u306b\u306f\u4ed6\u306b\u4e0d\u5909\u6761\u4ef6\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b invariant() \u304c\u3042\u308b\u3002\nimport std.math;\nimport std.stdio;\n\ndouble someFunction(double d1, double d2)\nin\n{\n    // \u4e8b\u524d\u6761\u4ef6\u306e\u8a18\u8ff0\n    assert(d1 >= 0);\n    assert(d2 >= 0);\n}\nout(r)\n{\n    // \u4e8b\u5f8c\u6761\u4ef6\u306e\u8a18\u8ff0\n    // \u95a2\u6570\u306e\u623b\u308a\u5024\u3092r\u3068\u3057\u3066\u3001\u305d\u306e\u5185\u5bb9\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n    assert(r != double.nan && r != double.infinity);\n}\nbody\n{\n    // \u95a2\u6570\u306e\u672c\u4f53\n    return sqrt(d1) + sqrt(d2);\n}\n\nvoid main()\n{\n    writeln(someFunction(1,2));\n    writeln(someFunction(-1,2));\n}\n\n\nunittest\nUnit Tests\nD\u8a00\u8a9e\u3067\u306f\u30b3\u30fc\u30c9\u306e\u3055\u307e\u3056\u307e\u306a\u5834\u6240\u306b unittest \u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002unittest \u5185\u306e\u30b3\u30fc\u30c9\u306f\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u306e\u9759\u7684\u521d\u671f\u5316\u304c\u5b9f\u884c\u3055\u308c\u305f\u5f8c\u3001 main() \u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u500b\u3005\u306e unittest \u306e\u5b9f\u884c\u9806\u306f\nunittest \u3092\u5b9f\u884c\u3059\u308b\u306b\u306f dub \u306b\u304a\u3044\u3066\u306f targetType \u3092 executable \u306b\u3057\u3066\u3001 dub build --build=unittests \u3092\u5b9f\u884c\u3059\u308b\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u958b\u767a\u306b\u304a\u3044\u3066\u306f\u4eee\u306e main() \u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u3001main()\u3068unittest\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3067\u3042\u308b\u3002\nimport std.stdio;\n\nint add(int i1, int i2)\n{\n    // \u30d0\u30b0\u306e\u3042\u308b\u95a2\u6570\n    return i1 + i2 + 1;\n}\n\nvoid main()\n{\n    // \u672c\u6765\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u3068\u72ec\u7acb\u3057\u3066\u7c21\u5358\u306a\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3067\u304d\u308b\n}\n\nunittest\n{\n    // \u3053\u306e\u30b3\u30fc\u30c9\u306funittest\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u6642\u306e\u307f\u5b9f\u884c\u3055\u308c\u308b\n    writeln(\"this is unittest code\");\n    assert(add(1,2) == 3); // error\n    writeln(\"test clear\");\n}\n\n\n\u4eca\u56de\u66f8\u304b\u306a\u304b\u3063\u305f\u3053\u3068\n\u4eca\u56de\u306fD\u8a00\u8a9e\u3092\u52c9\u5f37\u3057\u3066\u3044\u3066\u300c\u3042\u3001\u3053\u308c\u4fbf\u5229\u3060\u306a\u3001C++\u3088\u308a\u306c\u308b\u304f\u3066\u3044\u3044\u306a\u300d\u3068\u3044\u3046\u8a00\u8a9e\u6a5f\u80fd\u3092\u4e26\u3079\u3066\u307f\u305f\u3002\u4e0a\u306b\u6319\u3052\u305f\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u306f\u4ed6\u306b\u3082\u3055\u307e\u3056\u307e\u306a\u6a5f\u80fd\u304c\u3042\u308b\u3057\u3001\u6319\u3052\u3066\u3044\u306a\u3044\u6a5f\u80fd\u3082\u305f\u304f\u3055\u3093\u3042\u308b\u3002\n\u7279\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u9023\u306e\u6a5f\u80fd\u306f\u305d\u308c\u3067\u4e00\u672c\u30d6\u30ed\u30b0\u304c\u66f8\u3051\u3066\u3057\u307e\u3046\u306e\u3067\u307e\u308b\u307e\u308b\u7701\u7565\u3057\u305f\u3002\u7279\u306btraits\u95a2\u4fc2\u306e\u30b3\u30a2\u6a5f\u80fd\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5145\u5b9f\u3057\u3066\u3044\u308b\u3053\u3068\u3001\u7279\u6b8a\u5316\u306e\u8a18\u8ff0\u304c\u4fbf\u5229\u3067\u3042\u308b\u3053\u3068\u304cD\u8a00\u8a9e\u306e\u7279\u5fb4\u3067\u3042\u308b\u3068\u601d\u3046\u3002\n\u305c\u3072\u3068\u3082D\u8a00\u8a9e\u3092\u52c9\u5f37\u3057\u3066C++\u306e\u82e6\u884c\u304b\u3089\u8131\u3057\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u3002\n\n# D\u8a00\u8a9e\u3092\u4f7f\u3046\u7406\u7531\u3068\u3053\u306e\u8a18\u4e8b\u306e\u8da3\u65e8\n\n\u306a\u3093\u304bC++\u304c\u3060\u308b\u304f\u306a\u3063\u305f\u304b\u3089\u30fc\u3002\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210\u3092\u30e1\u30a4\u30f3\u306b\u8da3\u5473\u3092\u3057\u3066\u3044\u308b\u3068C++\u3067\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u6210\u306b\u3064\u3089\u307f\u304c\u51fa\u3066\u304f\u308b\u3002\u3088\u3044\u8a00\u8a9e\u306f\u306a\u3044\u304b\u3068\u63a2\u3057\u3066\u3044\u3066D\u8a00\u8a9e\u306b\u884c\u304d\u5f53\u305f\u3063\u305f\u3002\n\nD\u8a00\u8a9e\u3092\u52c9\u5f37\u3057\u3066\u3044\u3066\u300c\u3053\u308c\u306f\u4fbf\u5229\uff01\u697d\uff01\u306a\u3093\u3067C++\u306f\u3053\u3046\u306a\u3063\u3066\u3044\u306a\u3044\u3093\u3060\uff01\u300d\u3068\u3044\u3046\u8a00\u8a9e\u6a5f\u80fd\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u305f\u306e\u3067\u3001C++\u51fa\u8eab\u306e\u4eba\u9593\u304b\u3089\u307f\u305fD\u8a00\u8a9e\u306e\u826f\u3044\u3068\u3053\u308d\u3092\u307e\u3068\u3081\u3066\u307f\u308b\u3002\n\n\u500b\u4eba\u306e\u611f\u60f3\u306a\u306e\u3067\u4ed6\u306b\u3082\u307e\u3060\u307e\u3060D\u8a00\u8a9e\u306e\u6a5f\u80fd\u306f\u3042\u308b\u3002\n\nD\u8a00\u8a9e\u306e\u4e16\u754c\u3078\u3088\u3046\u3053\u305d\u3002\n\n# \u57fa\u672c\u30c7\u30fc\u30bf\u578b : \u30b5\u30a4\u30ba\u306f\u8a00\u8a9e\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\n\n[Types](http://dlang.org/type.html)\n\nint, short, double\u306a\u3069\u3002\n\nD\u3067\u306f\u3053\u308c\u3089\u306e\u57fa\u672c\u30c7\u30fc\u30bf\u578b\u306e\u30d0\u30a4\u30c8\u9577\u306f\u8a00\u8a9e\u4f7f\u7528\u306b\u3088\u308a\u5b9a\u3081\u3089\u308c\u3066\u3044\u308b\u3002C/C++\u3067\u306f\u57fa\u672c\u30c7\u30fc\u30bf\u578b\u306e\u30d0\u30a4\u30c8\u9577\u306f\u51e6\u7406\u7cfb\u4f9d\u5b58\u3067\u3042\u308a\u3001\u6307\u5b9a\u9577\u306e\u578b\u3092\u4f7f\u3046\u306b\u306f stdint.h/cstdint \u3092 include \u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u3089\u3076\u308a\u30fc\u3002\n\n# alias, alias this : \u3044\u308d\u3044\u308d\u306a\u3082\u306e\u306b\u5225\u540d\u3092\u3064\u3051\u308b\n\n[Declarations / Alias Declarations](http://dlang.org/declaration.html#AliasDeclaration)\n[Classes / Alias This](http://dlang.org/class.html#alias-this)\n\n\u30b7\u30f3\u30dc\u30eb\u306b\u5225\u540d\u3092\u3064\u3051\u308b\u6a5f\u80fd\u3002typedef\u306e\u3088\u3046\u306b\u3082\u4f7f\u3048\u308b\u304c\u3001\u5909\u6570\u3001\u95a2\u6570\u3001\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u3055\u3059\u3082\u306e\uff08this\uff09\u306b\u5225\u540d\u304c\u3064\u3051\u3089\u308c\u308b\u3002\n\n\u30e1\u30f3\u30d0\u5909\u6570\u306b\u5225\u540d\u3092\u3064\u3051\u305f\u308a\u30fb\u30fb\u30fb\n\n```d\nimport std.stdio;\n\nclass Matrix\n{\npublic:\n\tthis(int c, int r)\n\t{\n\t\tcols = c;\n\t\trows = r;\n\t}\n\n\tdouble data[]; // ...\n\n\tint cols;\n\tint rows;\n\n\talias width = cols;\n\talias height = rows;\n}\n\nvoid main()\n{\n\tauto m = new Matrix(3,5);\n\t// Matrix\u306e\u30e1\u30f3\u30d0cols, rows\u306b\u5225\u540dwidth, height\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\t// C++\u3067\u3042\u308c\u3070 inline \u306e\u53c2\u7167\u8fd4\u3057\u3067\u6700\u9069\u5316\u3055\u308c\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u4ee5\u5916\u306b\n\t// \u540c\u69d8\u306e\u5225\u540d\u306e\u4ed8\u4e0e\u306f\u3067\u304d\u306a\u3044\u3002\n\twriteln(\n\t\tm.cols, \", \", m.rows, \", \", m.width, \", \", m.height);\n}\n```\n\nalias this \u3067this\u3067\u30e1\u30f3\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u308a\u3068\u304b\u3067\u304d\u308b\u3002\n\n```d\nimport std.stdio;\n\nclass SuperArray\n{\npublic:\n\tint data[10];\n\talias data this;\n\n\tint sum()\n\t{\n\t\tint r = 0;\n\t\tforeach(int i; 0 .. 10)\n\t\t{\n\t\t\tr += data[r];\n\t\t}\n\t\treturn r;\n\t}\n}\n\nvoid main()\n{\n\tauto a = new SuperArray();\n\twriteln(a.length, \", \", a.sum()); // \u30e1\u30f3\u30d0\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u81ea\u8eab\u306e\u3088\u3046\u306b\u4f7f\u7528\u3067\u304d\u308b\u3002\n}\n```\n\n\u3089\u3076\u308a\u30fc\u3002\n\n# with : \u30b3\u30fc\u30c9\u4e0a\u3067\u96c6\u4e2d\u3057\u3066\u3044\u308b\u3082\u306e\u306b\u96c6\u4e2d\u3059\u308b\n\n[Statements / With Statement](http://dlang.org/statement.html#WithStatement)\n\nVisualBasic \u306e with \u3068\u540c\u3058\u3088\u3046\u306a\u3082\u306e\u3002C\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u69cb\u9020\u4f53\u3092\u3044\u3058\u3063\u305f\u308a\u3059\u308b\u6642\u306b\u3068\u3066\u3082\u4fbf\u5229\u3002\n\n```d\nimport std.stdio;\n\nstruct Point\n{\n\tint x;\n\tint y;\n}\n\nvoid main()\n{\n\tPoint p = {3,4};\n\n\twith(p)\n\t{\n\t\twriteln(x);\n\t\twriteln(y);\n\t}\n}\n```\n\n\n# foreach, foreach_reverse : \u4fbf\u5229\u306a\u30eb\u30fc\u30d7\n\n[Statements / For Statement](http://dlang.org/statement.html#ForStatement)\n[Statements / Foreach Statement](http://dlang.org/statement.html#ForeachStatement)\n[Statements / Foreach Range Statement](http://dlang.org/statement.html#ForeachRangeStatement)\n\nC++11\u304b\u3089 for \u306e\u8a18\u8ff0\u306e\u67d4\u8edf\u6027\u304c\u5897\u3057\u305f\u304c\u3001D\u8a00\u8a9e\u3067\u3082\u30eb\u30fc\u30d7\u306e\u8a18\u8ff0\u306b\u540c\u7b49\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002\n\n```d\nimport std.stdio;\n\nvoid main()\n{\n\t// C++11 \u306e range based for \u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u3067\u304d\u308b\n\tstring text = \"this is a pen.\";\n\tforeach(char c; text)\n\t{\n\t\twrite(c, \"|\");\n\t}\n\twriteln();\n\n\t// int \u3092\u4f34\u3046\u3053\u3068\u3067 index \u3092\u540c\u6642\u306b\u53d6\u5f97\u3059\u308b\u66f8\u304d\u65b9\u3082\u3067\u304d\u308b\n\tforeach(int i, char c; text)\n\t{\n\t\twriteln(i, \": \", c);\n\t}\n\n\t// foreach_reverse \u3067\u9006\u9806\u306b\u30eb\u30fc\u30d7\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\tforeach_reverse(char c; text)\n\t{\n\t\twrite(c);\n\t}\n\twriteln();\n\n\t// foreach range \u6587\u3067\u7bc4\u56f2\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\tforeach(int i; 0 .. 10)\n\t{\n\t\twrite(i, \" \");\n\t}\n\twriteln();\n}\n```\n\n# switch : \u67d4\u8edf\u306aswitch\n\n[Statements / Switch Statement](http://dlang.org/statement.html#SwitchStatement)\n\nC++\u3088\u308a\u5c11\u3057\u3060\u3051\u512a\u3057\u3044\u3093\u3058\u3083\u3002\n\n```d\nimport std.stdio;\n\nvoid main()\n{\n\t{\n\t\tint a = 4;\n\t\tint c1 = 3, c2 = 4, c3 = 5;\n\n\t\tswitch(a)\n\t\t{\n\t\tcase c1: // \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5024\u3092\u6c7a\u5b9a\u3067\u304d\u308c\u3070case\u306b\u4f7f\u7528\u3067\u304d\u308b\n\t\t\twriteln(\"a is c1.\");\n\t\t\tbreak;\n\t\tcase c2, c3:\n\t\t\twriteln(\"a is c2 or c3.\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\twriteln(\"default!\");\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t{\n\t\tswitch(a)\n\t\t{\n\t\tcase \"your text\": // \u6587\u5b57\u5217\u3092case\u306b\u4f7f\u7528\u3067\u304d\u308b\n\t\t\twriteln(\"a is c1.\");\n\t\t\tbreak;\n\t\tcase \"my text\", \"her text\":\n\t\t\twriteln(\"a is c2 or c3.\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\twriteln(\"default!\");\n\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n\n# auto : \u304a\u306a\u3058\u307f\u306eauto\n\n[Declarations / Implicit Type Inference](http://dlang.org/declaration.html#AutoDeclaration)\n\n\u8aac\u660e\u4e0d\u8981\u3002C++11 ~ \u3068\u540c\u69d8\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```d\nimport std.stdio;\n\nvoid main()\n{\n\tauto i = 1;\n\tauto s = \"my string\";\n\n\twriteln(typeof(i).stringof);\n\twriteln(typeof(s).stringof);\n}\n```\n\n# import expression : \u30d5\u30a1\u30a4\u30eb\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8aad\u307f\u8fbc\u307f\n\n[Expressions / Import Expressions](http://dlang.org/expression.html#ImportExpression)\n\ndub\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c4\u30ea\u30fc\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u308b\u3002\n\n```text\n.\n\u251c\u2500\u2500 dub.json\n\u251c\u2500\u2500 resources\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 my_text.txt\n\u2514\u2500\u2500 source\n    \u2514\u2500\u2500 app.d\n\n2 directories, 3 files\n```\n\ndub.json \u306b stringImportPaths \u3092\u8a18\u8ff0\u3059\u308b\u3002\n\n```json\n{\n\t\"name\": \"garage\",\n\t\"description\": \"A minimal D application.\",\n\t\"copyright\": \"Copyright \u00a9 2014, yusuke\",\n\t\"authors\": [\"yusuke\"],\n\t\"dependencies\": {\n\t},\n\t\"stringImportPaths\" : [\"resources\"]\n}\n```\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 my_text.txt \u306e\u5185\u5bb9\u3092**\u30b3\u30f3\u30d1\u30a4\u30eb\u6642**\u306b string \u3067\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```d\nimport std.stdio;\n\nvoid main()\n{\n\tauto str = import(\"my_text.txt\");\n\twriteln(str);\n}\n```\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u306b\u4fbf\u5229\u3002vibe.d \u306f\u3053\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u3002\n\n# property : \u4fbf\u5229\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\n\n[Properties](http://dlang.org/property.html)\n[Enums](http://dlang.org/enum.html) enum \u306b\u3082\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u3042\u308b\n\nC++\u3067\u3042\u308c\u3070\u578b\u306b\u95a2\u3059\u308b\u60c5\u5831\u306f limits \u306a\u3069\u3067\u500b\u5225\u306b\u7570\u306a\u308b\u8a18\u6cd5\u3067\u53d6\u5f97\u3059\u308b\u304c\u3001D\u8a00\u8a9e\u3067\u306f\u7d71\u4e00\u7684\u306a\u66f8\u304d\u65b9\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u307e\u305fEnum\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u305f\u3068\u3048\u3070 T.max \u3092\u5f97\u305f\u3068\u304d\u306b\u5143\u3068\u306a\u308b\u6574\u6570\u578b\u306e\u6700\u5927\u5024\u3067\u306f\u306a\u304f\u305d\u306eEnum\u578b\u304c\u3068\u308a\u3046\u308b\u6700\u5927\u306e\u30e1\u30f3\u30d0\u30fc\u3092\u8fd4\u3059\u306a\u3069\u3001Enum\u578b\u306b\u7279\u5316\u3057\u305f\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u4fbf\u5229\u3002\n\n```d\nimport std.stdio;\n\n// \u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001\u6574\u6570\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4e00\u90e8\u3092\u8868\u793a\u3059\u308b\nvoid printProperties(T)()\n\tif( __traits(isIntegral, T) && !is(T == enum) )\n{\n\twriteln(\"T.stringof: \", T.stringof);\n\twriteln(\"T.sizeof: \", T.sizeof);\n\twriteln(\"T.init: \", T.init);\n\twriteln(\"T.min: \", T.min);\n\twriteln(\"T.max: \", T.max);\n\t// \u306a\u3069\u306a\u3069\n}\n\n// \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4e00\u90e8\u3092\u8868\u793a\u3059\u308b\nvoid printProperties(T)()\n\tif( __traits(isFloating, T) )\n{\n\twriteln(\"T.stringof: \", T.stringof);\n\twriteln(\"T.sizeof: \", T.sizeof);\n\twriteln(\"T.init: \", T.init);\n\twriteln(\"T.min: \", T.min_normal);\n\twriteln(\"T.max: \", T.max);\n\twriteln(\"T.infinity: \", T.infinity);\n\twriteln(\"T.nan: \", T.nan);\n\twriteln(\"T.epsilon: \", T.epsilon);\n\t// \u306a\u3069\u306a\u3069\n}\n\n// Enum\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8868\u793a\u3059\u308b\nvoid printProperties(T)()\n\tif( is(T == enum) )\n{\n\twriteln(\"T.stringof: \", T.stringof);\n\twriteln(\"T.sizeof: \", T.sizeof);\n\twriteln(\"T.init: \", T.init);\n\twriteln(\"T.min: \", T.min);\n\twriteln(\"T.max: \", T.max);\n}\n\nenum Jobs\n{\n\tworker,\n\texpert,\n\texective\n}\n\nvoid main()\n{\n\tprintProperties!(int);\n\tprintProperties!(double);\n\tprintProperties!(Jobs);\n}\n```\n\n\u51fa\u529b\n\n```text\nT.stringof: int\nT.sizeof: 4\nT.init: 0\nT.min: -2147483648\nT.max: 2147483647\nT.stringof: double\nT.sizeof: 8\nT.init: nan\nT.min: 2.22507e-308\nT.max: 1.79769e+308\nT.infinity: inf\nT.nan: nan\nT.epsilon: 2.22045e-16\nT.stringof: Jobs\nT.sizeof: 4\nT.init: 0\nT.min: 0\nT.max: 2\n```\n\n# in, out, body / unittest : \u30c6\u30b9\u30c8\u306e\u8a18\u8ff0\u306e\u6a19\u6e96\n\n## in, out, body\n\n[Contract Programming](http://dlang.org/contracts.html)\n\nD\u8a00\u8a9e\u3067\u306f\u95a2\u6570\u3092in, out, body\u306e\u30d6\u30ed\u30c3\u30af\u306b\u5206\u3051\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002in\u3068body\u306e\u307f\u3001out\u3068body\u306e\u307f\u3001body\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u7528\u305b\u305a\u306b\u4e00\u822c\u7684\u306a\u5b9a\u7fa9\u306e\u307f\u3092\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\nin\u30d6\u30ed\u30c3\u30af\u3001out\u30d6\u30ed\u30c3\u30af\u306b\u8a18\u8ff0\u3055\u308c\u305f\u5b9a\u7fa9\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306edebug\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3001release\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u306f\u30b3\u30fc\u30c9\u306f\u7121\u8996\u3055\u308c\u308b\u3002in\u30d6\u30ed\u30c3\u30af\u306f\u4e8b\u524d\u6761\u4ef6\u306e\u8a18\u8ff0\u3067\u3042\u308a\u5f15\u6570\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3002body\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002out\u30d6\u30ed\u30c3\u30af\u306f\u4e8b\u5f8c\u6761\u4ef6\u306e\u8a18\u8ff0\u3067\u3042\u308a\u623b\u308a\u5024\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3002body\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u305f\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\u8a18\u8ff0\u4f4d\u7f6e\u304c\u30d1\u30bf\u30fc\u30f3\u5316\u3055\u308c\u305f\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3068\u8003\u3048\u308c\u3070\u3088\u3044\u3002\u3053\u306e\u6a5f\u80fd\u306f\u5951\u7d04\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308b\u304c\u3001\u3042\u307e\u308a\u6c17\u306b\u305b\u305a\u4fbf\u5229\u306b\u5b89\u5168\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u306b\u4f7f\u3048\u3070\u3088\u3044\u3068\u601d\u3046\u3002\n\n\u5951\u7d04\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u306b\u306f\u4ed6\u306b\u4e0d\u5909\u6761\u4ef6\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b invariant() \u304c\u3042\u308b\u3002\n\n```d\nimport std.math;\nimport std.stdio;\n\ndouble someFunction(double d1, double d2)\nin\n{\n\t// \u4e8b\u524d\u6761\u4ef6\u306e\u8a18\u8ff0\n\tassert(d1 >= 0);\n\tassert(d2 >= 0);\n}\nout(r)\n{\n\t// \u4e8b\u5f8c\u6761\u4ef6\u306e\u8a18\u8ff0\n\t// \u95a2\u6570\u306e\u623b\u308a\u5024\u3092r\u3068\u3057\u3066\u3001\u305d\u306e\u5185\u5bb9\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\tassert(r != double.nan && r != double.infinity);\n}\nbody\n{\n\t// \u95a2\u6570\u306e\u672c\u4f53\n\treturn sqrt(d1) + sqrt(d2);\n}\n\nvoid main()\n{\n\twriteln(someFunction(1,2));\n\twriteln(someFunction(-1,2));\n}\n```\n\n## unittest\n\n[Unit Tests](http://dlang.org/unittest.html)\n\nD\u8a00\u8a9e\u3067\u306f\u30b3\u30fc\u30c9\u306e\u3055\u307e\u3056\u307e\u306a\u5834\u6240\u306b unittest \u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002unittest \u5185\u306e\u30b3\u30fc\u30c9\u306f\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u306e\u9759\u7684\u521d\u671f\u5316\u304c\u5b9f\u884c\u3055\u308c\u305f\u5f8c\u3001 main() \u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\u500b\u3005\u306e unittest \u306e\u5b9f\u884c\u9806\u306f\n\nunittest \u3092\u5b9f\u884c\u3059\u308b\u306b\u306f dub \u306b\u304a\u3044\u3066\u306f targetType \u3092 executable \u306b\u3057\u3066\u3001 dub build --build=unittests \u3092\u5b9f\u884c\u3059\u308b\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u958b\u767a\u306b\u304a\u3044\u3066\u306f\u4eee\u306e main() \u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u3001main()\u3068unittest\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3067\u3042\u308b\u3002\n\n```d\nimport std.stdio;\n\nint add(int i1, int i2)\n{\n\t// \u30d0\u30b0\u306e\u3042\u308b\u95a2\u6570\n\treturn i1 + i2 + 1;\n}\n\nvoid main()\n{\n\t// \u672c\u6765\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u3068\u72ec\u7acb\u3057\u3066\u7c21\u5358\u306a\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3067\u304d\u308b\n}\n\nunittest\n{\n\t// \u3053\u306e\u30b3\u30fc\u30c9\u306funittest\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u6642\u306e\u307f\u5b9f\u884c\u3055\u308c\u308b\n\twriteln(\"this is unittest code\");\n\tassert(add(1,2) == 3); // error\n\twriteln(\"test clear\");\n}\n```\n\n# \u4eca\u56de\u66f8\u304b\u306a\u304b\u3063\u305f\u3053\u3068\n\n\u4eca\u56de\u306fD\u8a00\u8a9e\u3092\u52c9\u5f37\u3057\u3066\u3044\u3066\u300c\u3042\u3001\u3053\u308c\u4fbf\u5229\u3060\u306a\u3001C++\u3088\u308a\u306c\u308b\u304f\u3066\u3044\u3044\u306a\u300d\u3068\u3044\u3046\u8a00\u8a9e\u6a5f\u80fd\u3092\u4e26\u3079\u3066\u307f\u305f\u3002\u4e0a\u306b\u6319\u3052\u305f\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u306f\u4ed6\u306b\u3082\u3055\u307e\u3056\u307e\u306a\u6a5f\u80fd\u304c\u3042\u308b\u3057\u3001\u6319\u3052\u3066\u3044\u306a\u3044\u6a5f\u80fd\u3082\u305f\u304f\u3055\u3093\u3042\u308b\u3002\n\n\u7279\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u9023\u306e\u6a5f\u80fd\u306f\u305d\u308c\u3067\u4e00\u672c\u30d6\u30ed\u30b0\u304c\u66f8\u3051\u3066\u3057\u307e\u3046\u306e\u3067\u307e\u308b\u307e\u308b\u7701\u7565\u3057\u305f\u3002\u7279\u306btraits\u95a2\u4fc2\u306e\u30b3\u30a2\u6a5f\u80fd\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5145\u5b9f\u3057\u3066\u3044\u308b\u3053\u3068\u3001\u7279\u6b8a\u5316\u306e\u8a18\u8ff0\u304c\u4fbf\u5229\u3067\u3042\u308b\u3053\u3068\u304cD\u8a00\u8a9e\u306e\u7279\u5fb4\u3067\u3042\u308b\u3068\u601d\u3046\u3002\n\n\u305c\u3072\u3068\u3082D\u8a00\u8a9e\u3092\u52c9\u5f37\u3057\u3066C++\u306e\u82e6\u884c\u304b\u3089\u8131\u3057\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u3002\n", "tags": ["dlang"]}