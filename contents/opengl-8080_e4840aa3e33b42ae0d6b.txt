{"context": " More than 1 year has passed since last update.\u74b0\u5883\u69cb\u7bc9\n\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u8a71\nJPQL \u306e\u8a71\nCriteria API \u306e\u8a71\n\u30b3\u30fc\u30c9\n\nJPA \u3068\u306f\nJava Persistence API \u306e\u7565\u3002\nO/R \u30de\u30c3\u30d1\u30fc\u3002\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u306b\u95a2\u3059\u308b\u591a\u304f\u306e\u51e6\u7406\u304c\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u3066\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e16\u754c\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a71\u304c\u5165\u308a\u8fbc\u307e\u306a\u3044\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u5370\u8c61\u3002\n\u305d\u308c\u3086\u3048\u306b\u3001\u30af\u30e9\u30b9\u3068\u30c6\u30fc\u30d6\u30eb\u3092\uff11\u5bfe\uff11\u3067\u5bfe\u5fdc\u3055\u305b\u305f\u308a\u3001\u751f SQL \u3092\u76f4\u63a5\u8a18\u8ff0\u3057\u305f\u308a\u3068\u3044\u3063\u305f\u5b9f\u88c5\u3092\u3057\u3066\u3044\u305f\u4eba\u306b\u306f\u53d6\u3063\u4ed8\u304d\u306b\u304f\u3044\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3060\u3068\u601d\u3046\u3002\n\u3057\u304b\u3057\u3001\u300c\u30a8\u30ea\u30c3\u30af\u30fb\u30a8\u30f4\u30a1\u30f3\u30b9\u306e\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u300d\u306e\uff15\u7ae0\u3001\uff16\u7ae0\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\uff08Entity, Value Object, Repository, Aggregate\uff09\u3092\u5b88\u308d\u3046\u3068\u3059\u308b\u3068\u3001 JPA \u306e\u6301\u3064\u6a5f\u80fd\u306f\u7d50\u69cb\u91cd\u8981\u306b\u306a\u308b\u3068\u601d\u3063\u3066\u3044\u308b\uff08\u7279\u306b\u30c6\u30fc\u30d6\u30eb\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\uff09\u3002\n\nHello World\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30eb\u30fc\u30c8\u304c jpa \u306b\u306a\u308b\u3088\u3046\u306b NetBeans \u3067 Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u7528\u610f\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f MySQL \u3092\u4f7f\u7528\u3059\u308b\u3002\n\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n\n\n\u9805\u76ee\n\u5024\n\n\n\n\n\u30b5\u30fc\u30d0\u30fc\nlocalhost\n\n\n\u30dd\u30fc\u30c8\n3306(\u30c7\u30d5\u30a9\u30eb\u30c8)\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\ntest\n\n\n\u30e6\u30fc\u30b6\ntest\n\n\n\n\u4ee5\u4e0b DDL \u3067 sample_table \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\nCREATE TABLE `sample_table` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `value` varchar(45) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n\n\u4ee5\u4e0b\u306e SQL \u3067\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3059\u308b\u3002\nINSERT INTO `test`.`sample_table` (`value`) VALUES ('hoge');\nINSERT INTO `test`.`sample_table` (`value`) VALUES ('fuga');\nINSERT INTO `test`.`sample_table` (`value`) VALUES ('piyo');\n\n\n\n\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092 GlassFish \u306b\u767b\u9332\u3059\u308b\n\u3053\u3061\u3089 \u3092\u53c2\u7167\u3002\nJNDI \u540d\u306f jdbc/Local_MySQL_test \u3067\u767b\u9332\u3057\u3066\u304a\u304f\u3002\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\u3059\u308b\n\nSample.java\npackage sample.javaee.jpa.entity;\n\nimport java.io.Serializable;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"sample_table\")\npublic class Sample implements Serializable {\n    @Id\n    private Long id;\n    private String value;\n\n    public void setValue(String value) {\n        this.value = value;\n    }\n\n    @Override\n    public String toString() {\n        return \"Sample{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\n\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\n\nNetBeans \u4e0a\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066 [\u65b0\u898f] \u2192 [\u305d\u306e\u4ed6] \u3092\u9078\u629e\u3002\n[\u30ab\u30c6\u30b4\u30ea] \u3067 \"\u6301\u7d9a\u6027\" \u3092\u9078\u629e\u3057\u3001 [\u30d5\u30a1\u30a4\u30eb\u30fb\u30bf\u30a4\u30d7] \u3067 \"\u6301\u7d9a\u6027\u30e6\u30cb\u30c3\u30c8\" \u3092\u9078\u629e\u3057 [\u6b21\u3078] \u3092\u30af\u30ea\u30c3\u30af\u3002\n[\u63a5\u7d9a\u6027\u30e6\u30cb\u30c3\u30c8\u540d] \u306b SampleUnit \u3068\u5165\u529b\u3002\n[\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9] \u306b\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f MySQL \u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\uff08jdbc/Local_MySQL_test\uff09\u3092\u9078\u629e\u3057\u3001 [\u7d42\u4e86] \u3092\u30af\u30ea\u30c3\u30af\u3002\n\nsrc/conf \u306e\u4e0b\u306b persistence.xml \u304c\u51fa\u529b\u3055\u308c\u308b\uff08NetBeans \u4e0a\u306f\u3001\u300c\u69cb\u6210\u30d5\u30a1\u30a4\u30eb\u300d\u306b\u8868\u793a\u3055\u308c\u308b\uff09\u3002\n\u4e0d\u8981\u306a\u8a18\u8ff0\u306a\u3069\u3092\u524a\u9664\u3057\u3066\u3001\u6574\u5f62\u3059\u308b\u3002 \n\n\npersistence.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.1\"\n             xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n             xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence\n                                 http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n\n  <persistence-unit name=\"SampleUnit\">\n    <jta-data-source>jdbc/Local_MySQL_test</jta-data-source>\n  </persistence-unit>\n\n</persistence>\n\n\n\n\u3053\u306e\u307e\u307e\u3060\u3068 war \u306b\u3057\u305f\u3068\u304d\u306b persistence.xml \u304c\u65e2\u5b9a\u306e\u5834\u6240\uff08WEB-INF/classes/META-INF/\uff09\u306b\u914d\u7f6e\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3092\u4fee\u6b63\u3059\u308b\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 [\u30d7\u30ed\u30d1\u30c6\u30a3] \u3092\u9078\u629e\u3002\n[\u30ab\u30c6\u30b4\u30ea] \u3067 \"\u30bd\u30fc\u30b9\" \u3092\u9078\u629e\u3002\n[\u30bd\u30fc\u30b9\u30fb\u30d1\u30c3\u30b1\u30fc\u30b8\u30fb\u30d5\u30a9\u30eb\u30c0] \u306e [\u30d5\u30a9\u30eb\u30c0\u306e\u8ffd\u52a0] \u3092\u9078\u629e\u3002\n\nsrc/conf \u3092\u9078\u629e\u3057\u3066 [\u958b\u304f] \u3092\u30af\u30ea\u30c3\u30af\u3002\n\n\n\n\u3053\u308c\u3067\u3001 persistence.xml \u304c WEB-INF/classes/META-INF/ \u306e\u4e0b\u306b\u914d\u5099\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\nDB\u30a2\u30af\u30bb\u30b9\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\n\nHelloJpaServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.HelloJpaEjb;\n\n@WebServlet(\"/hello/*\")\npublic class HelloJpaServlet extends HttpServlet {\n\n    @EJB\n    private HelloJpaEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        if (path.endsWith(\"/persist\")) {\n            this.ejb.persist(req.getParameter(\"value\"));\n\n        } else if (path.endsWith(\"/remove\")) {\n            this.ejb.remove(this.getId(req));\n\n        } else {\n            this.ejb.print(this.getId(req));\n\n        }\n    }\n\n    private long getId(HttpServletRequest req) {\n        return Long.parseLong(req.getParameter(\"id\"));\n    }\n}\n\n\n\nHelloJpaEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class HelloJpaEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void persist(String value) {\n        Sample sample = new Sample();\n        sample.setValue(value);\n\n        this.em.persist(sample);\n\n        System.out.println(\"persist : \" + sample);\n    }\n\n    public void remove(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n        this.em.remove(sample);\n\n        System.out.println(\"remove : \" + sample);\n    }\n\n    public void print(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n\n        System.out.println(sample);\n    }\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\nhttp://localhost:8080/jpa/hello/persist?value=HelloJPA!! \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: persist : Sample{id=null, value=HelloJPA!!}\n\n\nsample_table \u306e\u4e2d\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\nhttp://localhost:8080/jpa/hello?id=4 \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: Sample{id=4, value=HelloJPA!!}\n\n\nhttp://localhost:8080/jpa/hello/remove?id=4 \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: remove : Sample{id=4, value=HelloJPA!!}\n\n\nsample_table \u306e\u4e2d\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n\n\u8aac\u660e\n\n\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\n\npersistence.xml\n  <persistence-unit name=\"SampleUnit\">\n    <jta-data-source>jdbc/Local_MySQL_test</jta-data-source>\n  </persistence-unit>\n\n\n\nJPA \u3067\u306f\u3001\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\uff08<persistence-unit> \u30bf\u30b0\uff09\u3068\u3044\u3046\u5358\u4f4d\u3067 DB \u63a5\u7d9a\u306e\u8a2d\u5b9a\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n\n\nname \u5c5e\u6027\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b\u3002\n\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u306f\u8907\u6570\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u3067\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u4efb\u305b\u308b\u304b\u3001\u81ea\u529b\u3067\u5236\u5fa1\u3059\u308b\u304b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\nJava EE \u30b5\u30fc\u30d0\u30fc\u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5834\u5408\u306f\u3001\u7279\u306b\u6307\u5b9a\u3092\u3057\u306a\u3044\u9650\u308a\u30b3\u30f3\u30c6\u30ca\u304c\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3059\u308b\uff08JTA \u304c\u63a1\u7528\u3055\u308c\u308b\uff09\u3002\n\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001 <persistence-unit> \u30bf\u30b0\u306b transaction-type \u5c5e\u6027\u3092\u8ffd\u52a0\u3057\u3066\u6307\u5b9a\u3059\u308b\uff08JTA or RESOURCE_LOCAL\uff09\u3002\n\n\n\n<jta-data-source> \u30bf\u30b0\u3067\u306f\u3001\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306e JNDI \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n\npersistence.xml \u306e\u914d\u7f6e\u5834\u6240\npersistence.xml \u306f\u3001\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u5834\u6240\u306b\u914d\u7f6e\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n\n\n\u30b1\u30fc\u30b9\n\u914d\u7f6e\u5834\u6240\n\n\n\n\npersistence.xml \u3092 war \u30d5\u30a1\u30a4\u30eb\u306b\u307e\u3068\u3081\u308b\u5834\u5408\nWEB-INF/classes/META-INF/persistence.xml\n\n\npersistence.xml \u3092 war \u3068\u306f\u5225\u306e jar \u306b\u68b1\u5305\u3059\u308b\u5834\u5408\n<jar \u30d5\u30a1\u30a4\u30eb>/META-INF/persistence.xml\n\n\n\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\nSample.java\npackage sample.javaee.jpa.entity;\n\nimport java.io.Serializable;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"sample_table\")\npublic class Sample implements Serializable {\n    @Id\n    private Long id;\n    private String value;\n\n}\n\n\n\nJPA \u3067\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u3068\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u30af\u30e9\u30b9\u306e\u3053\u3068\u3092\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u547c\u3076\u3002\n\nJava EE \u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u3042\u308c\u3070\u3001\u30af\u30e9\u30b9\u3092 @Entity \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3067\u81ea\u52d5\u3067\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u3057\u3066\u767b\u9332\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\nJava EE \u74b0\u5883\u4ee5\u5916\u3067 Eclipse Link \u306a\u3069\u3092\u81ea\u529b\u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u81ea\u52d5\u767b\u9332\u3055\u308c\u306a\u3044\u3002\n\u305d\u306e\u5834\u5408\u306f\u3001 persistence.xml \u306b <class> \u30bf\u30b0\u3084 <jar-file> \u30bf\u30b0\u3092\u4f7f\u3063\u3066\u624b\u52d5\u3067\u767b\u9332\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n\nDB \u306e\u30c6\u30fc\u30d6\u30eb\u540d\u304c\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30af\u30e9\u30b9\u540d\u3068\u7570\u306a\u308b\u5834\u5408\u306f\u3001 @Table \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n\nEntityManager\n\nHelloJpaEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class HelloJpaEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void persist(String value) {\n        Sample sample = new Sample();\n        sample.setValue(value);\n\n        this.em.persist(sample);\n\n        System.out.println(\"persist : \" + sample);\n    }\n\n    public void remove(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n        this.em.remove(sample);\n\n        System.out.println(\"remove : \" + sample);\n    }\n\n    public void print(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n\n        System.out.println(sample);\n    }\n}\n\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306f\u3001 EntityManager \u3092\u4f7f\u7528\u3059\u308b\u3002\n\nEntityManager \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001 @PersistenceContext \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u3067\u30b3\u30f3\u30c6\u30ca\u304c\u7ba1\u7406\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\nEJB \u3060\u3051\u3067\u306a\u304f\u3001 Servlet \u306b\u3082\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067\u304d\u308b\u3002\n\n\n\n@PersistenceContext \u306e name \u5c5e\u6027\u3067\u3001\u4f7f\u7528\u3059\u308b\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002\n\nEntityManager \u306b\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e CRUD \u64cd\u4f5c\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u53d6\u5f97\u3001\u767b\u9332\u3001\u524a\u9664\u306a\u3069\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\nEntityManager#find(Class, Object) \u3067\u3001\u30ad\u30fc\u60c5\u5831\u3092\u4f7f\u3063\u3066\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u53d6\u5f97\u3059\u308b\u3002\n\nEntityManager#persist(Object) \u3067\u3001\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u30c6\u30fc\u30d6\u30eb\u306b\u767b\u9332\u3059\u308b\u3002\n\nEntityManager#remove(Object) \u3067\u3001\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u524a\u9664\u3059\u308b\u3002\n\n\n\n\n\u30ec\u30b3\u30fc\u30c9\u306e\u66f4\u65b0\n\nHelloJpaEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class HelloJpaEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void persist(String value) {\n        Sample sample = new Sample();\n        sample.setValue(value);\n\n        this.em.persist(sample);\n\n        System.out.println(\"persist : \" + sample);\n    }\n\n    public void remove(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n        this.em.remove(sample);\n\n        System.out.println(\"remove : \" + sample);\n    }\n\n    public void print(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n\n        System.out.println(sample);\n    }\n\n+   public void update(long id, String value) {\n+       Sample sample = this.em.find(Sample.class, id);\n+       sample.setValue(value);\n+       \n+       System.out.println(\"update : \" + sample);\n+   }\n}\n\n\n\nHelloJpaServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.HelloJpaEjb;\n\n@WebServlet(\"/hello/*\")\npublic class HelloJpaServlet extends HttpServlet {\n\n    @EJB\n    private HelloJpaEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        if (path.endsWith(\"/persist\")) {\n-           this.ejb.persist(req.getParameter(\"value\"));\n+           this.ejb.persist(this.getValue(req));\n\n        } else if (path.endsWith(\"/remove\")) {\n            this.ejb.remove(this.getId(req));\n\n+       } else if (path.endsWith(\"/update\")) {\n+           this.ejb.update(this.getId(req), this.getValue(req));\n+           \n        } else {\n            this.ejb.print(this.getId(req));\n\n        }\n    }\n\n+   private String getValue(HttpServletRequest req) {\n+       return req.getParameter(\"value\");\n+   }\n\n    private long getId(HttpServletRequest req) {\n        return Long.parseLong(req.getParameter(\"id\"));\n    }\n}\n\n\nhttp://localhost:8080/jpa/hello?id=2 \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: Sample{id=2, value=fuga}\n\n\nhttp://localhost:8080/jpa/hello/update?id=2&value=UpdateValue \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: update : Sample{id=2, value=UpdateValue}\n\n\nhttp://localhost:8080/jpa/hello?id=2 \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: Sample{id=2, value=UpdateValue}\n\n\nJPA \u3067\u306f\u3001 DB \u306e\u30ec\u30b3\u30fc\u30c9\u3092\u66f4\u65b0\u3059\u308b\u305f\u3081\u306b UPDATE \u6587\u3092\u660e\u793a\u7684\u306b\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3002\nJPA \u3067\u306e\u30ec\u30b3\u30fc\u30c9\u306e\u66f4\u65b0\u306f\u3001 find() \u3067\u53d6\u5f97\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u3067\u3044\u3044\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001 EntityManager \u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5909\u66f4\u3092\u53cd\u6620\u3057\u3066\u304f\u308c\u308b\u3002\n\u305f\u3076\u3093\u3001 SQL \u3092\u30ac\u30ea\u30ac\u30ea\u66f8\u304f\u5b9f\u88c5\u3092\u3057\u3066\u3044\u305f\u4eba\u304c JPA \u3092\u3084\u308a\u59cb\u3081\u3066\u3001\u4e00\u756a\u6700\u521d\u306b\u9762\u98df\u3089\u3046\u4ed5\u69d8\u3060\u3068\u601d\u3046\u3002\n\u6700\u521d\u306f\u3001\u3061\u3087\u3063\u3068\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5909\u66f4\u3057\u305f\u3060\u3051\u3067 DB \u306b\u53cd\u6620\u3055\u308c\u308b\u3053\u3068\u306b\u5bfe\u3059\u308b\u4e0d\u5b89\u611f\u3084\u4e0d\u4fe1\u611f\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u3057\u304b\u3057\u3001\u3053\u306e\u4ed5\u7d44\u307f\u304c\u3042\u308b\u3068\u5b9f\u88c5\u304b\u3089\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\uff08\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\uff09\u306b\u95a2\u3059\u308b\u51e6\u7406\u3092\u53d6\u308a\u9664\u304f\u3053\u3068\u304c\u3067\u304d\u3001\u3088\u308a\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306b\u96c6\u4e2d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff08\u306f\u305a\uff09\u3002\n\u305f\u3060\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306b\u91cd\u304d\u3092\u304a\u304f\u3053\u3068\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306a\u90e8\u5206\u3082\u3042\u308b\u3002\nO/R \u30de\u30c3\u30d1\u30fc\u306b\u95a2\u3059\u308b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u554f\u984c\u3068\u305d\u306e\u5bfe\u7b56\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u30b9\u30e9\u30a4\u30c9\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\nO/R\u30de\u30c3\u30d1\u30fc\u306b\u3088\u308b\u30c8\u30e9\u30d6\u30eb\u3092\u672a\u7136\u306b\u9632\u3050\n\n\nEntityManager \u306b\u3088\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7ba1\u7406\nJPA \u3067\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u72b6\u614b\u304c EntityManager \u306b\u3088\u3063\u3066\u7ba1\u7406\u30fb\u76e3\u8996\u3055\u308c\u3066\u3044\u308b\u3002\nEntityManager \u304c\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u76e3\u8996\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3001\u524d\u8ff0\u306e\u3088\u3046\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f8\u304d\u63db\u3048\u305f\u3060\u3051\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3044\u308b\u3002\n\u9006\u306b\u3044\u3046\u3068\u3001 EntityManager \u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u306a\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5909\u66f4\u3057\u3066\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u53cd\u6620\u3055\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3002\nJPA \u3067\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c EntityManager \u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3001\u3068\u3044\u3046\u306e\u3092\u610f\u8b58\u3059\u308b\u306e\u304c\u91cd\u8981\u306b\u306a\u308b\u3002\n\n\u65b0\u3057\u3044\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n\nEntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    public void test() {\n        Sample sample = new Sample();\n    }\n}\n\n\n\n\u666e\u901a\u306b new \u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u5f53\u7136 EntityManager \u306b\u306f\u7ba1\u7406\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\u3053\u306e\u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3001 NEW \u72b6\u614b \u3068\u547c\u3076\u3002\n\n\nNEW \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 EntityManager \u306e\u7ba1\u7406\u4e0b\u306b\u7f6e\u304f\n\nEntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\n+ import javax.persistence.EntityManager;\n+ import javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n+   @PersistenceContext(unitName=\"SampleUnit\")\n+   private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n+       \n+       this.em.persist(sample);\n    }\n}\n\n\n\n\nEntityManager#persist(Object) \u306b\u3088\u3063\u3066\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 EntityManager \u306e\u7ba1\u7406\u4e0b\u306b\u7f6e\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u3053\u306e\u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 MANAGED \u72b6\u614b \u3068\u547c\u3076\u3002\nMANAGED \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001 DB \u306e\u30ec\u30b3\u30fc\u30c9\u3068\u540c\u671f\u304c\u3068\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\nNEW \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c MANAGED \u72b6\u614b\u306b\u306a\u3063\u305f\u5834\u5408\u3001 DB \u3068\u540c\u671f\u3092\u3068\u308b\u305f\u3081\u30ec\u30b3\u30fc\u30c9\u304c\u65b0\u898f\u306b\u767b\u9332\u3055\u308c\u308b\u3002\n\u3053\u306e\u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5909\u66f4\u3055\u308c\u308b\u3068\u3001 DB \u3068\u540c\u671f\u3092\u3068\u308b\u305f\u3081 UPDATE \u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u203b\u5b9f\u969b\u306b\u540c\u671f\u304c\u3068\u3089\u308c\u308b\u306e\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3068\u304d\u3002\n\n\n\u65e2\u306b DB \u306b\u5b58\u5728\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u53d6\u5f97\u3057\u3001 EntityManager \u306e\u7ba1\u7406\u4e0b\u306b\u7f6e\u304d\u305f\u3044\u5834\u5408\u306f\u3001 EntityManager#find(Class, Object) \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\nDB \u306b\u8a18\u9332\u3055\u308c\u3066\u3044\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u60c5\u5831\u3092\u7834\u68c4\u3059\u308b\n\nEntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n+       this.em.remove(sample);\n    }\n}\n\n\n\n\nEntityManger#remove(Object) \u30e1\u30bd\u30c3\u30c9\u306b MANAGED \u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092 DB \u304b\u3089\u7834\u68c4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u203b\u5b9f\u969b\u306b\u7834\u68c4\u3055\u308c\u308b\u306e\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3068\u304d\u3002\n\n\n\u3053\u306e\u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 REMOVED \u72b6\u614b \u3068\u547c\u3076\u3002\nREMOVED \u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u518d\u3073 MANAGED \u72b6\u614b\u306b\u623b\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u518d\u5ea6 persist() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\nEntityManager \u306e\u7ba1\u7406\u4e0b\u304b\u3089\u5916\u3059\n\nEntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n-       this.em.remove(sample);\n+       this.em.clear();\n    }\n}\n\n\n\n\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3068\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f EntityManager \u306e\u7ba1\u7406\u4e0b\u304b\u3089\u5916\u3055\u308c\u308b\u3002\n\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3002\n\nEntityManager#clear() \u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\n\u3053\u306e\u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 DETACHED \u72b6\u614b \u3068\u547c\u3076\u3002\nDETACHED \u72b6\u614b\u306b\u306a\u3063\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001 DB \u306b\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\u3002\n\n\n\u4e0a\u8a18\u5b9f\u88c5\u306e\u5834\u5408\u3001 persist() \u3057\u3066\u3044\u308b\u304c\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u524d\u306b clear() \u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f DB \u3068\u540c\u671f\u3055\u308c\u305a\u3001\u30ec\u30b3\u30fc\u30c9\u306f\u767b\u9332\u3055\u308c\u306a\u3044\u3002\n\n\n\n\n\u624b\u52d5\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5909\u66f4\u3092\u53cd\u6620\u3055\u305b\u308b\n\nEntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n+       this.em.flush();\n\n        this.em.clear();\n    }\n}\n\n\n\n\nEntityManager#flush() \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u660e\u793a\u7684\u306b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u72b6\u614b\u3092 DB \u306b\u53cd\u6620\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u4e0a\u8a18\u306e\u5834\u5408\u3001 clear() \u306e\u524d\u306b flush() \u304c\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u3001 DB \u306b\u30ec\u30b3\u30fc\u30c9\u304c\u767b\u9332\u3055\u308c\u308b\u3002\n\n\nDETACHED \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 MANAGED \u72b6\u614b\u306b\u623b\u3059\n\nEntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n        this.em.flush();\n\n        this.em.clear();\n\n+       Sample managed = this.em.merge(sample);\n+       managed.setValue(\"\u3053\u3061\u3089\u306e\u5024\u304c\u53cd\u6620\u3055\u308c\u308b\");\n+       sample.setValue(\"\u3053\u3061\u3089\u306e\u5024\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\");\n    }\n}\n\n\n\n\n\nEntityManager#merge(Object) \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001 DETACHED \u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 MANAGED \u72b6\u614b\u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nNEW \u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u3001\u305d\u306e\u5834\u5408\u306f\u30ec\u30b3\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u3002\n\u5f15\u6570\u3067\u6e21\u3057\u305f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f MANAGED \u72b6\u614b\u306b\u306a\u3089\u306a\u3044\u3002\n\n\n\u4ee3\u308f\u308a\u306b\u3001\u623b\u308a\u5024\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c MANAGED \u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\uff08\u3053\u3061\u3089\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u3068\u3001 DB \u306b\u53cd\u6620\u3055\u308c\u308b\uff09\u3002\n\u623b\u308a\u5024\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u5f15\u6570\u3067\u6e21\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30d4\u30fc\u3002\n\n\n\n\nMANAGED \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 DB \u306e\u6700\u65b0\u306e\u72b6\u614b\u3067\u66f4\u65b0\u3059\u308b\n\nEntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.LockModeType;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n        this.em.flush();\n\n        this.em.clear();\n\n        Sample managed = this.em.merge(sample);\n        managed.setValue(\"\u3053\u3061\u3089\u306e\u5024\u304c\u53cd\u6620\u3055\u308c\u308b\");\n        sample.setValue(\"\u3053\u3061\u3089\u306e\u5024\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\");\n\n+       Sample hoge = this.em.find(Sample.class, 1L);\n+       hoge.setValue(\"test\");\n+       \n+       this.em.refresh(hoge);\n+       \n+       System.out.println(\"hoge=\" + hoge);\n    }\n}\n\n\nhttp://localhost:8080/jpa/state \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: hoge=Sample{id=1, value=hoge}\n\n\n\n\nEntityManager#refresh(Object) \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u72b6\u614b\u3092\u3001\u73fe\u5728\u306e DB \u306e\u72b6\u614b\u3067\u540c\u671f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u307e\u3068\u3081\n                    \u25cb      \u25ce\n                new |      ^ GC\n                    v      |\n                   +---------+\n                   |   NEW   | <--------------+\n                   +---------+                |\n   find/JPQL             |                    |\n\u25cb----------------------+ |                    |\n                       | | persist            |\n                       v v                    |\n+---------+  merge   +---------+  remove   +---------+\n|         | -------> |         | --------> |         |\n|DETACHED | <------- | MANAGED |           | REMOVED |\n|         |  clear   |         | <-+       |         |\n+---------+  detach  +---------+   |       +---------+\n                       ^    |      |\n                       |    +------+\n                       |      refresh\n                       |      setter\n                       v\n                    +-------------+\n                    +-------------+\n                    |   Database  |\n                    +-------------+\n\n\u5143\u30cd\u30bf\uff1aJPA\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u66f8\u3044\u3066\u307f\u305f - Qiita\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5236\u5fa1\nJava EE \u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30bf\u30a4\u30d7\u304c JTA \u306e\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5236\u5fa1\u306f EJB \u30b3\u30f3\u30c6\u30ca\u306b\u4efb\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nEJB \u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001 EJB \u30b3\u30f3\u30c6\u30ca\u306f\u81ea\u52d5\u3067\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u5f8c\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u3092\u8a2d\u3051\u308b\u3002\n\u3064\u307e\u308a\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u958b\u59cb\u524d\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u7d42\u4e86\u3059\u308b\u3068\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3002\n\u3053\u306e\u52d5\u4f5c\u306f\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u7d30\u304b\u304f\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u8abf\u6574\u3059\u308b\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u304d\n\nTransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.annotation.Resource;\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.javaee.jpa.ejb.TransactionEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n\n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        }\n    }\n}\n\n\n\nTransactionEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.EJB;\nimport javax.ejb.Stateless;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class TransactionEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    @EJB\n    private DefaultTxEjb defaultTxEjb;\n\n    public void defaultTransactionManagement() {\n        System.out.println(\"[TransactionEjb] tx.key=\" + tx.getTransactionKey());\n        this.defaultTxEjb.method();\n    }\n}\n\n\n\nDefaultTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class DefaultTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void method() {\n        System.out.println(\"[DefaultTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n\n\nhttp://localhost:8080/jpa/transaction/default \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=9 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@1e8e0a9]\n\u60c5\u5831: [DefaultTxEjb] tx.key=JavaEETransactionImpl: txId=9 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@1e8e0a9]\n\n\n\n\ntxId \u3067\u3001\u73fe\u5728\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u7d10\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u8b58\u5225\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nEJB \u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u70b9\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u81ea\u52d5\u3067\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u3002\nEJB \u5185\u304b\u3089\u5225\u306e EJB \u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u3001\u540c\u3058\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u5f15\u304d\u7d99\u304c\u308c\u3066\u3044\u308b\u3002\n\n\n\u5e38\u306b\u65b0\u3057\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3055\u305b\u308b\n\nRequiresNewTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)\npublic class RequiresNewTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void method() {\n        System.out.println(\"[RequiresNewTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n\n\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.EJB;\nimport javax.ejb.Stateless;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class TransactionEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    @EJB\n    private DefaultTxEjb defaultTxEjb;\n+   @EJB\n+   private RequiresNewTxEjb requiresNewTxEjb;\n\n    public void defaultTransactionManagement() {\n-       System.out.println(\"[TransactionEjb] tx.key=\" + tx.getTransactionKey());\n+       this.printTxId();\n        this.defaultTxEjb.method();\n    }\n\n+   public void requiresNew() {\n+       this.printTxId();\n+       this.requiresNewTxEjb.method();\n+   }\n+  \n+   private void printTxId() {\n+       System.out.println(\"[TransactionEjb] tx.key=\" + tx.getTransactionKey());\n+   }\n}\n\n\nTransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n\n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n+       } else if (path.endsWith(\"/requires-new\")) {\n+           this.ejb.requiresNew();\n        }\n    }\n}\n\n\nhttp://localhost:8080/jpa/transaction/requires-new \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=10 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@3593ef74]\n\u60c5\u5831: [RequiresNewTxEjb] tx.key=JavaEETransactionImpl: txId=11 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@9c5c512]\n\n\n\n\n@TransactionAttribute \u3067\u30af\u30e9\u30b9\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u3001 TransactionAttributeType.REQUIRES_NEW \u3092\u6307\u5b9a\u3059\u308b\u3002\n\n\n\u30e1\u30bd\u30c3\u30c9\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u3001 TransactionAttributeType.REQUIRED \u3092\u6307\u5b9a\u3057\u305f\u306e\u3068\u540c\u3058\u306b\u306a\u308b\u3002\n\n\n\u3059\u308b\u3068\u3001\u305d\u306e EJB \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u5e38\u306b\u65b0\u3057\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\ntxId=10 \u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u4e00\u6642\u4e2d\u65ad\u3055\u308c\u3066\u3044\u3066\u3001 txId=11 \u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3057\u305f\u3042\u3068\u306b\u518d\u958b\u3055\u308c\u308b\u3002\n\n\n\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5f15\u304d\u7d99\u3050\n\n\u958b\u59cb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u306a\u3044\n\nSupportsTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.SUPPORTS)\npublic class SupportsTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void method() {\n        System.out.println(\"[SupportsTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n\n\n\nTransactionEjb.java\uff08\u8ffd\u52a0\u5206\u306e\u307f\uff09\n+   @EJB\n+   private SupportsTxEjb supportsTxEjb;\n\n+   public void supports() {\n+       this.printTxId();\n+       this.supportsTxEjb.method();\n+   }\n\n\n\nTransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n+ import sample.javaee.jpa.ejb.SupportsTxEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n+   @EJB\n+   private SupportsTxEjb supportsTxEjb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n\n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        } else if (path.endsWith(\"/requires-new\")) {\n            this.ejb.requiresNew();\n+       } else if (path.endsWith(\"/supports\")) {\n+           this.ejb.supports();\n+           this.supportsTxEjb.method();\n        }\n    }\n}\n\n\nhttp://localhost:8080/jpa/transaction/supports \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=13 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@1f631ce3]\n\u60c5\u5831: [SupportsTxEjb] tx.key=JavaEETransactionImpl: txId=13 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@1f631ce3]\n\u60c5\u5831: [SupportsTxEjb] tx.key=null\n\n\n\n\nSUPPORTS \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5f15\u304d\u7d99\u3050\u3002\n\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u305b\u305a\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n\n\u958b\u59cb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3055\u305b\u308b\n\nMandatoryTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.MANDATORY)\npublic class MandatoryTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void method() {\n        System.out.println(\"[MandatoryTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n\n\n\nTransactionEjb.java\uff08\u8ffd\u52a0\u5206\u306e\u307f\uff09\n+ @EJB\n+ private MandatoryTxEjb mandatoryTxEjb;\n\n+ public void mandatory() {\n+    this.printTxId();\n+    this.mandatoryTxEjb.method();\n+ }\n\n\n\nTransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n+ import sample.javaee.jpa.ejb.MandatoryTxEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n    @EJB\n    private SupportsTxEjb supportsTxEjb;\n+   @EJB\n+   private MandatoryTxEjb mandatoryTxEjb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n\n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        } else if (path.endsWith(\"/requires-new\")) {\n            this.ejb.requiresNew();\n        } else if (path.endsWith(\"/supports\")) {\n            this.ejb.supports();\n            this.supportsTxEjb.method();\n+       } else if (path.endsWith(\"/mandatory\")) {\n+           this.ejb.mandatory();\n+           this.mandatoryTxEjb.method();\n        }\n    }\n}\n\n\nhttp://localhost:8080/jpa/transaction/mandatory \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=14 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@2fc0f5a4]\n\u60c5\u5831: [MandatoryTxEjb] tx.key=JavaEETransactionImpl: txId=14 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@2fc0f5a4]\n\u8b66\u544a: A system exception occurred during an invocation on EJB MandatoryTxEjb, method: public void sample.javaee.jpa.ejb.MandatoryTxEjb.method()\n\u8b66\u544a: javax.ejb.TransactionRequiredLocalException\n   at com.sun.ejb.containers.EJBContainerTransactionManager.preInvokeTx(EJBContainerTransactionManager.java:235)\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\n\n\nMANDATORY \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3055\u305b\u308b\n\nNeverTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.NEVER)\npublic class NeverTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void method() {\n        System.out.println(\"[NeverTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n\n\n\nTransactionEjb.java\uff08\u8ffd\u52a0\u5206\u306e\u307f\uff09\n+   @EJB\n+   private NeverTxEjb neverTxEjb;\n\n+   public void never() {\n+       this.printTxId();\n+       this.neverTxEjb.method();\n+   }\n\n\n\nTransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n+ import sample.javaee.jpa.ejb.NeverTxEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n    @EJB\n    private SupportsTxEjb supportsTxEjb;\n    @EJB\n    private MandatoryTxEjb mandatoryTxEjb;\n+   @EJB\n+   private NeverTxEjb neverTxEjb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n\n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        } else if (path.endsWith(\"/requires-new\")) {\n            this.ejb.requiresNew();\n        } else if (path.endsWith(\"/supports\")) {\n            this.ejb.supports();\n            this.supportsTxEjb.method();\n        } else if (path.endsWith(\"/mandatory\")) {\n            this.ejb.mandatory();\n            this.mandatoryTxEjb.method();\n+       } else if (path.endsWith(\"/never\")) {\n+           this.neverTxEjb.method();\n+           this.ejb.never();\n        }\n    }\n}\n\n\nhttp://localhost:8080/jpa/transaction/never \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [NeverTxEjb] tx.key=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=17 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@59f0d1fa]\n\u8b66\u544a: A system exception occurred during an invocation on EJB NeverTxEjb, method: public void sample.javaee.jpa.ejb.NeverTxEjb.method()\n\u8b66\u544a: javax.ejb.EJBException: EJB cannot be invoked in global transaction\n   at com.sun.ejb.containers.EJBContainerTransactionManager.preInvokeTx(EJBContainerTransactionManager.java:277)\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\n\n\nNEVER \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u3068\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4e00\u5207\u4f7f\u7528\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n\nNotSupportedTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.NOT_SUPPORTED)\npublic class NotSupportedTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void method() {\n        System.out.println(\"[NotSupportedTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n\n\n\nTransactionEjb.java\uff08\u8ffd\u52a0\u5206\u306e\u307f\uff09\n+   @EJB\n+   private NotSupportedTxEjb notSupportedTxEjb;\n\n+   public void notSupported() {\n+       this.printTxId();\n+       this.notSupportedTxEjb.method();\n+   }\n\n\n\nTransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n+ import sample.javaee.jpa.ejb.NotSupportedTxEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n    @EJB\n    private SupportsTxEjb supportsTxEjb;\n    @EJB\n    private MandatoryTxEjb mandatoryTxEjb;\n    @EJB\n    private NeverTxEjb neverTxEjb;\n+   @EJB\n+   private NotSupportedTxEjb notSupportedTxEjb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n\n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        } else if (path.endsWith(\"/requires-new\")) {\n            this.ejb.requiresNew();\n        } else if (path.endsWith(\"/supports\")) {\n            this.ejb.supports();\n            this.supportsTxEjb.method();\n        } else if (path.endsWith(\"/mandatory\")) {\n            this.ejb.mandatory();\n            this.mandatoryTxEjb.method();\n        } else if (path.endsWith(\"/never\")) {\n            this.neverTxEjb.method();\n            this.ejb.never();\n+       } else if (path.endsWith(\"/not-supported\")) {\n+           this.ejb.notSupported();\n+           this.notSupportedTxEjb.method();\n        }\n    }\n}\n\n\nhttp://localhost:8080/jpa/transaction/not-supported \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=15 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@43def44e]\n\u60c5\u5831: [NotSupportedTxEjb] tx.key=null\n\u60c5\u5831: [NotSupportedTxEjb] tx.key=null\n\n\n\n\nNOT_SUPPORTED \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u65e2\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4e2d\u65ad\u3055\u305b\u3066\u304b\u3089\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\n\nNOT_SUPPORTED \u304c\u9069\u7528\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u7d42\u4e86\u3057\u305f\u5f8c\u3067\u3001\u4e2d\u65ad\u3055\u308c\u3066\u3044\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u518d\u958b\u3055\u308c\u308b\u3002\n\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u305d\u306e\u307e\u307e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\n\u307e\u3068\u3081\n\n\n\n\u547c\u3073\u51fa\u3057\u5143\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u2192\n\u306a\u3057\n\u3042\u308a\n\n\n\n\nREQUIRED\nTx \u958b\u59cb\n\u5f15\u304d\u7d99\u3050\n\n\nREQUIRES_NEW\nTx \u958b\u59cb\nTx \u958b\u59cb\n\n\nSUPPORTES\nTx \u306a\u3057\n\u5f15\u304d\u7d99\u3050\n\n\nMANDATORY\n\u4f8b\u5916\n\u5f15\u304d\u7d99\u3050\n\n\nNEVER\nTx \u306a\u3057\n\u4f8b\u5916\n\n\nNOT_SUPPORTED\nTx \u306a\u3057\nTx \u306a\u3057\uff08\u4e2d\u65ad\uff09\n\n\n\n\n\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n\n\u4f8b\u5916\u306b\u3088\u308b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n\nMyRollbackException.java\npackage sample.javaee.jpa.exception;\n\nimport javax.ejb.ApplicationException;\n\n@ApplicationException(rollback=true)\npublic class MyRollbackException extends Exception {\n}\n\n\n\nExceptionRollbackEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\nimport sample.javaee.jpa.exception.MyRollbackException;\n\n@Stateless\npublic class ExceptionRollbackEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void throwException() throws Exception {\n        this.insertEntity(\"exception\");\n        throw new Exception(\"test exception\");\n    }\n\n    public void throwRuntimeException() {\n        this.insertEntity(\"runtime exception\");\n        throw new RuntimeException(\"test runtime exception\");\n    }\n\n    public void throwMyRollbackException() throws MyRollbackException {\n        this.insertEntity(\"my rollback exception\");\n        throw new MyRollbackException();\n    }\n\n    private void insertEntity(String value) {\n        Sample sample = new Sample();\n        sample.setValue(value);\n        this.em.persist(sample);\n    }\n}\n\n\n\nExceptionRollbackServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.ExceptionRollbackEjb;\n\n@WebServlet(\"/ex-rollback/*\")\npublic class ExceptionRollbackServlet extends HttpServlet {\n\n    @EJB\n    private ExceptionRollbackEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        try {\n            if (path.endsWith(\"/runtime\")) {\n                this.ejb.throwRuntimeException();\n            } else if (path.endsWith(\"/my-exception\")) {\n                this.ejb.throwMyRollbackException();\n            } else {\n                this.ejb.throwException();\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n\nhttp://localhost:8080/jpa/ex-rollback \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u91cd\u5927: java.lang.Exception: test exception\n   at sample.javaee.jpa.ejb.ExceptionRollbackEjb.throwException(ExceptionRollbackEjb.java:16)\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\nsample_table \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\u30ec\u30b3\u30fc\u30c9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3002\nhttp://localhost:8080/jpa/ex-rollback/runtime \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u8b66\u544a: javax.ejb.EJBException\n   at com.sun.ejb.containers.EJBContainerTransactionManager.processSystemException(EJBContainerTransactionManager.java:748)\n\uff08\u4e2d\u7565\uff09\nCaused by: java.lang.RuntimeException: test runtime exception\n   at sample.javaee.jpa.ejb.ExceptionRollbackEjb.throwRuntimeException(ExceptionRollbackEjb.java:21)\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\nsample_table \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\u30ec\u30b3\u30fc\u30c9\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u3002\nhttp://localhost:8080/jpa/ex-rollback/my-exception \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u91cd\u5927: sample.javaee.jpa.exception.MyRollbackException\n   at sample.javaee.jpa.ejb.ExceptionRollbackEjb.throwMyRollbackException(ExceptionRollbackEjb.java:27)\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\nsample_table \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\u30ec\u30b3\u30fc\u30c9\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\n\nException \u3092\u7d99\u627f\u3057\u305f\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u306a\u3044\u3002\n\n\n\n@ApplicationException \u3067\u4f8b\u5916\u30af\u30e9\u30b9\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3057 rollback=true \u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\nRuntimeException \u3092\u7d99\u627f\u3057\u305f\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002\n\n\n\u624b\u52d5\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n\nManualRollbackEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.SessionContext;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class ManualRollbackEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n    @Resource\n    private SessionContext context;\n\n    public void method() {\n        Sample sample = this.em.find(Sample.class, 2L);\n        sample.setValue(\"update\");\n\n        this.context.setRollbackOnly();\n    }\n}\n\n\n\nManualRollbackServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.ManualRollbackEjb;\n\n@WebServlet(\"/manual-rollback\")\npublic class ManualRollbackServlet extends HttpServlet {\n\n    @EJB\n    private ManualRollbackEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        this.ejb.method();\n    }\n}\n\n\nhttp://localhost:8080/jpa/manual-rollback \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\nsample_table \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\n\nSessionContext#setRollbackOnly() \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u73fe\u5728\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5fc5\u305a\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u305b\u308b\u3088\u3046\u306b\u6307\u5b9a\u3067\u304d\u308b\u3002\n\nSessionContext \u306f\u3001 @Resource \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066 EJB \u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3002\n\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u624b\u52d5\u3067\u7ba1\u7406\u3059\u308b\n\nBeanManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionManagement;\nimport javax.ejb.TransactionManagementType;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport javax.transaction.HeuristicMixedException;\nimport javax.transaction.HeuristicRollbackException;\nimport javax.transaction.NotSupportedException;\nimport javax.transaction.RollbackException;\nimport javax.transaction.SystemException;\nimport javax.transaction.UserTransaction;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\n@TransactionManagement(TransactionManagementType.BEAN)\npublic class BeanManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n    @Resource\n    private UserTransaction tx;\n\n    public void method(boolean rollback) {\n        try {\n            this.tx.begin();\n\n            Sample sample = new Sample();\n            sample.setValue(\"BMT\");\n\n            this.em.persist(sample);\n\n            if (rollback) {\n                this.tx.rollback();\n                System.out.println(\"rollback\");\n            } else {\n                this.tx.commit();\n                System.out.println(\"commit\");\n            }\n        } catch (NotSupportedException\n                 | SystemException\n                 | RollbackException\n                 | HeuristicMixedException\n                 | HeuristicRollbackException ex) {\n            ex.printStackTrace();\n        }\n    }\n}\n\n\n\nBeanManagementServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.BeanManagementEjb;\n\n@WebServlet(\"/bmt\")\npublic class BeanManagementServlet extends HttpServlet {\n\n    @EJB\n    private BeanManagementEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        this.ejb.method(Boolean.valueOf(req.getParameter(\"rollback\")));\n    }\n}\n\n\nhttp://localhost:8080/jpa/bmt?rollback=false \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\nsample_table \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\nhttp://localhost:8080/jpa/bmt?rollback=true \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\nsample_table \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\n\n@TransactionManagement \u3067 EJB \u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u3066\u3001 TransactionManagementType.BEAN \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u3092\u5168\u3066\u624b\u52d5\u3067\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n\u3053\u306e\u72b6\u614b\u3092\u3001BMT (Bean Management Transaction) \u3068\u547c\u3076\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u7ba1\u7406\u3057\u3066\u3044\u308b\u72b6\u614b\u3092 CMT (Container Management Transaction) \u3068\u547c\u3076\u3002\n\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5236\u5fa1\u306b\u306f UserTransaction \u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\n\nUserTransaction \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001 @Resource \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067 EJB \u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067\u304d\u308b\u3002\n\n\n\n\n\u30ed\u30c3\u30af\n\n\u697d\u89b3\u7684\u30ed\u30c3\u30af\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\n\nOptimisticLockEntity.java\npackage sample.javaee.jpa.entity;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\nimport javax.persistence.Version;\n\n@Entity\n@Table(name = \"optimistick_lock_entity\")\npublic class OptimisticLockEntity {\n    @Id\n    private Long id;\n    @Version\n    private Long version;\n    private String value;\n\n    public void setValue(String value) {\n        this.value = value;\n    }\n\n    @Override\n    public String toString() {\n        return \"OptimisticLockEntity{\" + \"id=\" + id + \", version=\" + version + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n\nCREATE TABLE `optimistick_lock_entity` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `value` varchar(45) DEFAULT NULL,\n    `version` int(11) NOT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nOptimisticLockEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.OptimisticLockEntity;\n\n@Stateless\npublic class OptimisticLockEjb {\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void update(String value) {\n        OptimisticLockEntity entity = this.em.find(OptimisticLockEntity.class, 1L);\n        entity.setValue(value);\n    }\n}\n\n\n\nOptimisticLockServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.OptimisticLockEjb;\n\n@WebServlet(\"/optimistic-lock/*\")\npublic class OptimisticLockServlet extends HttpServlet {\n\n    @EJB\n    private OptimisticLockEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        this.ejb.update(req.getParameter(\"value\"));\n    }\n}\n\n\nhttp://localhost:8080/jpa/optimistic-lock?value=update \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c6\u30fc\u30d6\u30eb\u306b\u3001\u66f4\u65b0\u56de\u6570\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u5c02\u7528\u306e\u9805\u76ee\u3092\u7528\u610f\u3059\u308b\uff08version\uff09\u3002\n\n\n\u6570\u5024\u578b\u3060\u3051\u3067\u306a\u304f\u3001\u65e5\u4ed8\u578b\u3082\u53ef\u80fd\u3002\n\n\n\u305d\u3057\u3066\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5f53\u8a72\u30d5\u30a3\u30fc\u30eb\u30c9\u3092 @Version \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u697d\u89b3\u7684\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n@Version \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5b58\u5728\u3059\u308b\u3068\u3001\u305d\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u304d\u306b JPA \u304c\u81ea\u52d5\u3067\u5024\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u304c\u7570\u306a\u308b\u3068\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\n\nOptimisticLockEjb.java\npackage sample.javaee.jpa.ejb;\n\n+ import javax.ejb.Asynchronous;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.OptimisticLockEntity;\n\n@Stateless\npublic class OptimisticLockEjb {\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n+   @Asynchronous\n-   public void update(String value) {\n+   public void update(String value, long time) {\n        OptimisticLockEntity entity = this.em.find(OptimisticLockEntity.class, 1L);\n        entity.setValue(value);\n+       \n+       try {\n+           Thread.sleep(time);\n+       } catch (InterruptedException ex) {}\n    }\n}\n\n\n\nEJB \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u975e\u540c\u671f\u51e6\u7406\u306b\u3057\u3066\u3001 Thread.sleep() \u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5b8c\u4e86\u3092\u9045\u3089\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n\nOptimisticLockServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.OptimisticLockEjb;\n\n@WebServlet(\"/optimistic-lock/*\")\npublic class OptimisticLockServlet extends HttpServlet {\n\n    @EJB\n    private OptimisticLockEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n-       this.ejb.update(req.getParameter(\"value\"));\n+       this.ejb.update(req.getParameter(\"value\") + \"_first\", 100);\n+       this.ejb.update(req.getParameter(\"value\") + \"_second\", 10);\n    }\n}\n\n\nhttp://localhost:8080/jpa/optimistic-lock?value=test \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\nException Description: The object [OptimisticLockEntity{id=1, version=2, value=test_first}] cannot be updated because it has changed or been deleted since it was last read.\nClass> sample.javaee.jpa.entity.OptimisticLockEntity Primary Key> 1\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3002\n\n\n\uff11\u56de\u76ee\u306e update() \u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u524d\u306b\uff12\u56de\u76ee\u306e update() \u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3002\n\u3053\u306e\u305f\u3081\u3001\uff11\u56de\u76ee\u306e update() \u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u6642\u70b9\u3067\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u6301\u3064 version \u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e version \u306b\u9f5f\u9f6c\u304c\u751f\u307e\u308c\u3001 OptimisticLockException \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n\n\n\u60b2\u89b3\u7684\u30ed\u30c3\u30af\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\n\nPessimisticLockEntity.java\npackage sample.javaee.jpa.entity;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"pessimistic_lock_entity\")\npublic class PessimisticLockEntity {\n    @Id\n    private Long id;\n    private String value;\n\n    public void setValue(String value) {\n        this.value = value;\n    }\n\n    @Override\n    public String toString() {\n        return \"PessimisticLockEntity{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n\nCREATE TABLE `pessimistic_lock_entity` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `value` varchar(45) DEFAULT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nPessimisticLockEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Asynchronous;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.LockModeType;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.PessimisticLockEntity;\n\n@Stateless\npublic class PessimisticLockEjb {\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    @Asynchronous\n    public void update(String value) {\n        System.out.println(\"start update(\" + value + \")\");\n\n        PessimisticLockEntity entity = this.em.find(PessimisticLockEntity.class, 1L, LockModeType.PESSIMISTIC_READ);\n\n        System.out.println(\"found entity : \" + value);\n\n        entity.setValue(value);\n\n        System.out.println(\"end update(\" + value + \")\");\n    }\n}\n\n\n\nPessimisticLockServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.PessimisticLockEjb;\n\n@WebServlet(\"/pessimistic-lock\")\npublic class PessimisticLockServlet extends HttpServlet {\n\n    @EJB\n    private PessimisticLockEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        this.ejb.update(req.getParameter(\"value\") + \"_first\");\n        this.ejb.update(req.getParameter(\"value\") + \"_second\");\n    }\n}\n\n\nhttp://localhost:8080/jpa/pessimistic-lock?value=update \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: start update(update_first)\n\u60c5\u5831: start update(update_second)\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?) FOR UPDATE\n   bind => [1]\n\u60c5\u5831: found entity : update_second\n\u60c5\u5831: end update(update_second)\n\u666e\u901a: UPDATE pessimistic_lock_entity SET VALUE = ? WHERE (ID = ?)\n   bind => [update_second, 1]\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?) FOR UPDATE\n   bind => [1]\n\u60c5\u5831: found entity : update_first\n\u60c5\u5831: end update(update_first)\n\u666e\u901a: UPDATE pessimistic_lock_entity SET VALUE = ? WHERE (ID = ?)\n   bind => [update_first, 1]\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3002\n\n\nSELECT \u306b FOR UPDATE \u304c\u8ffd\u52a0\u3055\u308c\u3001\u60b2\u89b3\u7684\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\uff08update_first \u306f update_second \u306e\u7d42\u4e86\u3092\u5f85\u6a5f\u3057\u3066\u3044\u308b\uff09\u3002\n\nEntityManager.find() \u306e\u3068\u304d\u306b\u3001\u5f15\u6570\u3067 LockModeType \u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30ed\u30c3\u30af\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\nLockModeType.PESSIMISTIC_READ \u306f\u5171\u6709\u30ed\u30c3\u30af\u3067\u3001 LockModeType.PESSIMISTIC_WRITE \u306f\u6392\u4ed6\u30ed\u30c3\u30af\u3002\n\u3067\u3082\u3001\u5b9f\u969b\u306b\u8a66\u3057\u305f\u3089\u3001\u3069\u3061\u3089\u3082 FOR UPDATE \uff08\u6392\u4ed6\u30ed\u30c3\u30af\uff09\u306b\u306a\u3063\u305f\u3002\u3002\u3002\u3000\u539f\u56e0\u306f\u4e0d\u660e\u3002\n\n\n\nLockModeType.PESSIMISTIC_FORCE_INCREMENT \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u6392\u4ed6\u30ed\u30c3\u30af\u3092\u3068\u308a\u3064\u3064 @Version \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3057\u3066\u304f\u308c\u308b\u3002\n\n\n\u3082\u3057\u3001\u540c\u3058\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u5bfe\u3057\u3066\u697d\u89b3\u7684\u30ed\u30c3\u30af\u3068\u60b2\u89b3\u7684\u30ed\u30c3\u30af\u306e\u4e21\u65b9\u3092\u4f7f\u3046\u3053\u3068\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u65b9\u6cd5\u3067\u60b2\u89b3\u7684\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\u306a\u3041\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n\n\n\u697d\u89b3\u7684\u30ed\u30c3\u30af\u306e\u3068\u304d\u306f\u7701\u7565\u3057\u3066\u3044\u305f\u304c\u3001 LockModeType.OPTIMISTIC \u3092\u6307\u5b9a\u3059\u308c\u3070\u660e\u793a\u7684\u306b\u697d\u89b3\u7684\u30ed\u30c3\u30af\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\n\nPessimisticLockEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Asynchronous;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.LockModeType;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.PessimisticLockEntity;\n\n@Stateless\npublic class PessimisticLockEjb {\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    @Asynchronous\n    public void update(String value) {\n        System.out.println(\"start update(\" + value + \")\");\n\n-       PessimisticLockEntity entity = this.em.find(PessimisticLockEntity.class, 1L, LockModeType.PESSIMISTIC_READ);\n+       PessimisticLockEntity entity = this.em.find(PessimisticLockEntity.class, 1L);\n\n        System.out.println(\"found entity : \" + value);\n\n+       this.em.lock(entity, LockModeType.PESSIMISTIC_READ);\n+      \n+       System.out.println(\"lock entity : \" + value);\n\n        entity.setValue(value);\n\n        System.out.println(\"end update(\" + value + \")\");\n    }\n}\n\n\nhttp://localhost:8080/jpa/pessimistic-lock?value=UPDATE \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: start update(UPDATE_second)\n\u60c5\u5831: start update(UPDATE_first)\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?)\n   bind => [1]\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?)\n   bind => [1]\n\u60c5\u5831: found entity : UPDATE_second\n\u60c5\u5831: found entity : UPDATE_first\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?) FOR UPDATE\n   bind => [1]\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?) FOR UPDATE\n   bind => [1]\n\u60c5\u5831: lock entity : UPDATE_second\n\u60c5\u5831: end update(UPDATE_second)\n\u666e\u901a: UPDATE pessimistic_lock_entity SET VALUE = ? WHERE (ID = ?)\n   bind => [UPDATE_second, 1]\n\u60c5\u5831: lock entity : UPDATE_first\n\u60c5\u5831: end update(UPDATE_first)\n\u666e\u901a: UPDATE pessimistic_lock_entity SET VALUE = ? WHERE (ID = ?)\n   bind => [UPDATE_first, 1]\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3002\n\n\n\nEntityManager#lock(Object, LockModeType) \u3092\u4f7f\u3048\u3070\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u767a\u884c\u3055\u308c\u308b SQL \u3092\u30ed\u30b0\u306b\u51fa\u529b\u3055\u305b\u308b\nJPA \u306e\u5b9f\u88c5\u304c\u5b9f\u969b\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767a\u884c\u3057\u3066\u3044\u308b SQL \u3092\u78ba\u8a8d\u3057\u305f\u304f\u306a\u308b\u3068\u304d\u304c\u3042\u308b\uff08\u4e3b\u306b\u30c7\u30d0\u30c3\u30b0\u6642\uff09\u3002\nGlassFish 4.1 \u306f\u3001 JPA \u306e\u5b9f\u88c5\u3068\u3057\u3066\u3000EclipseLink \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002 EclipseLink \u3067 SQL \u3092\u30ed\u30b0\u306b\u51fa\u529b\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001 persistence.xml \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u8a18\u8ff0\u3059\u308b\u3002\n\npersistence.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n\n  <persistence-unit name=\"SampleUnit\">\n  <jta-data-source>jdbc/Local_MySQL_test</jta-data-source>\n+   <properties>\n+   <property name=\"eclipselink.logging.level\" value=\"FINE\" />\n+   <property name=\"eclipselink.logging.parameters\" value=\"true\" />\n+   </properties>\n  </persistence-unit>\n</persistence>\n\n\n\n\n<properties> \u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u3001 eclipselink.logging.level \u3068 eclipselink.logging.parameters \u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3002\n\u524d\u8005\u306f SQL \u306e\u30ed\u30b0\u51fa\u529b\u3067\u3001\u5f8c\u8005\u306f\u30d0\u30a4\u30f3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5177\u4f53\u5024\u306e\u51fa\u529b\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\nhttp://localhost:8080/jpa/hello?id=2 \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\n\u666e\u901a: SELECT ID, VALUE FROM sample_table WHERE (ID = ?)\n   bind => [2]\n\n\n\u53c2\u8003\n\nAmazon.co.jp\uff1a Beginning Java EE 6 GlassFish 3\u3067\u59cb\u3081\u308b\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30baJava (Programmer\u2019s SELECTION): Antonio Goncalves, \u65e5\u672c\u30aa\u30e9\u30af\u30eb\u682a\u5f0f\u4f1a\u793e, \u682a\u5f0f\u4f1a\u793e\u30d7\u30ed\u30b7\u30b9\u30c6\u30e0\u30a8\u30eb\u30aa\u30fc\u30b7\u30fc: \u672c\nAmazon.co.jp\uff1a Enterprise JavaBeans 3.1 \u7b2c6\u7248: Andrew Lee Rubinger, Bill Burke, \u4f50\u85e4 \u76f4\u751f, \u6728\u4e0b \u54f2\u4e5f: \u672c\nJava Persistence API - Wikipedia\n\n[\u74b0\u5883\u69cb\u7bc9](http://qiita.com/opengl-8080/items/aeda0d8bad42af3113bd)\n[\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u8a71](http://qiita.com/opengl-8080/items/265f9f66a65e966678cb)\n[JPQL \u306e\u8a71](http://qiita.com/opengl-8080/items/e074330b5f4862d9995f)\n[Criteria API \u306e\u8a71](http://qiita.com/opengl-8080/items/6e3e03e4c90cd3d5e211)\n\n[\u30b3\u30fc\u30c9](https://github.com/opengl8080-javaee-samples/jpa)\n\n\n#JPA \u3068\u306f\nJava Persistence API \u306e\u7565\u3002\n\nO/R \u30de\u30c3\u30d1\u30fc\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u306b\u95a2\u3059\u308b\u591a\u304f\u306e\u51e6\u7406\u304c\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u3066\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e16\u754c\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a71\u304c\u5165\u308a\u8fbc\u307e\u306a\u3044\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u5370\u8c61\u3002\n\u305d\u308c\u3086\u3048\u306b\u3001\u30af\u30e9\u30b9\u3068\u30c6\u30fc\u30d6\u30eb\u3092\uff11\u5bfe\uff11\u3067\u5bfe\u5fdc\u3055\u305b\u305f\u308a\u3001\u751f SQL \u3092\u76f4\u63a5\u8a18\u8ff0\u3057\u305f\u308a\u3068\u3044\u3063\u305f\u5b9f\u88c5\u3092\u3057\u3066\u3044\u305f\u4eba\u306b\u306f\u53d6\u3063\u4ed8\u304d\u306b\u304f\u3044\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3060\u3068\u601d\u3046\u3002\n\n\u3057\u304b\u3057\u3001\u300c\u30a8\u30ea\u30c3\u30af\u30fb\u30a8\u30f4\u30a1\u30f3\u30b9\u306e\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u300d\u306e\uff15\u7ae0\u3001\uff16\u7ae0\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\uff08Entity, Value Object, Repository, Aggregate\uff09\u3092\u5b88\u308d\u3046\u3068\u3059\u308b\u3068\u3001 JPA \u306e\u6301\u3064\u6a5f\u80fd\u306f\u7d50\u69cb\u91cd\u8981\u306b\u306a\u308b\u3068\u601d\u3063\u3066\u3044\u308b\uff08\u7279\u306b\u30c6\u30fc\u30d6\u30eb\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\uff09\u3002\n\n#Hello World\n##\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30eb\u30fc\u30c8\u304c `jpa` \u306b\u306a\u308b\u3088\u3046\u306b NetBeans \u3067 Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n##\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u7528\u610f\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f MySQL \u3092\u4f7f\u7528\u3059\u308b\u3002\n\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n| \u9805\u76ee         | \u5024               |\n| :--          | :--              |\n| \u30b5\u30fc\u30d0\u30fc     | localhost        |\n| \u30dd\u30fc\u30c8       | 3306(\u30c7\u30d5\u30a9\u30eb\u30c8) |\n| \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | test             |\n| \u30e6\u30fc\u30b6       | test             |\n\n\u4ee5\u4e0b DDL \u3067 `sample_table` \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```sql:\nCREATE TABLE `sample_table` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `value` varchar(45) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n```\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/64a92272-f403-b0bf-5a64-cb9f8e3825b3.jpeg)\n\n\u4ee5\u4e0b\u306e SQL \u3067\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3059\u308b\u3002\n\n```sql:\nINSERT INTO `test`.`sample_table` (`value`) VALUES ('hoge');\nINSERT INTO `test`.`sample_table` (`value`) VALUES ('fuga');\nINSERT INTO `test`.`sample_table` (`value`) VALUES ('piyo');\n```\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a1f7768d-0447-43d1-2342-ceb6bac2382b.jpeg)\n\n##\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092 GlassFish \u306b\u767b\u9332\u3059\u308b\n[\u3053\u3061\u3089](http://qiita.com/opengl-8080/items/7d51351cb540269e1d05#jdbc-connection-pool-%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B) \u3092\u53c2\u7167\u3002\n\nJNDI \u540d\u306f `jdbc/Local_MySQL_test` \u3067\u767b\u9332\u3057\u3066\u304a\u304f\u3002\n\n##\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\u3059\u308b\n```java:Sample.java\npackage sample.javaee.jpa.entity;\n\nimport java.io.Serializable;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"sample_table\")\npublic class Sample implements Serializable {\n    @Id\n    private Long id;\n    private String value;\n\n    public void setValue(String value) {\n        this.value = value;\n    }\n\n    @Override\n    public String toString() {\n        return \"Sample{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n##\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\n- NetBeans \u4e0a\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066 [\u65b0\u898f] \u2192 [\u305d\u306e\u4ed6] \u3092\u9078\u629e\u3002\n- [\u30ab\u30c6\u30b4\u30ea] \u3067 \"\u6301\u7d9a\u6027\" \u3092\u9078\u629e\u3057\u3001 [\u30d5\u30a1\u30a4\u30eb\u30fb\u30bf\u30a4\u30d7] \u3067 \"\u6301\u7d9a\u6027\u30e6\u30cb\u30c3\u30c8\" \u3092\u9078\u629e\u3057 [\u6b21\u3078] \u3092\u30af\u30ea\u30c3\u30af\u3002\n- [\u63a5\u7d9a\u6027\u30e6\u30cb\u30c3\u30c8\u540d] \u306b `SampleUnit` \u3068\u5165\u529b\u3002\n- [\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9] \u306b\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f MySQL \u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\uff08`jdbc/Local_MySQL_test`\uff09\u3092\u9078\u629e\u3057\u3001 [\u7d42\u4e86] \u3092\u30af\u30ea\u30c3\u30af\u3002\n- `src/conf` \u306e\u4e0b\u306b `persistence.xml` \u304c\u51fa\u529b\u3055\u308c\u308b\uff08NetBeans \u4e0a\u306f\u3001\u300c\u69cb\u6210\u30d5\u30a1\u30a4\u30eb\u300d\u306b\u8868\u793a\u3055\u308c\u308b\uff09\u3002\n- \u4e0d\u8981\u306a\u8a18\u8ff0\u306a\u3069\u3092\u524a\u9664\u3057\u3066\u3001\u6574\u5f62\u3059\u308b\u3002 \n\n```xml:persistence.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.1\"\n             xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n             xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence\n                                 http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n  \n  <persistence-unit name=\"SampleUnit\">\n    <jta-data-source>jdbc/Local_MySQL_test</jta-data-source>\n  </persistence-unit>\n  \n</persistence>\n```\n\n- \u3053\u306e\u307e\u307e\u3060\u3068 war \u306b\u3057\u305f\u3068\u304d\u306b `persistence.xml` \u304c\u65e2\u5b9a\u306e\u5834\u6240\uff08`WEB-INF/classes/META-INF/`\uff09\u306b\u914d\u7f6e\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3092\u4fee\u6b63\u3059\u308b\u3002\n- \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 [\u30d7\u30ed\u30d1\u30c6\u30a3] \u3092\u9078\u629e\u3002\n- [\u30ab\u30c6\u30b4\u30ea] \u3067 \"\u30bd\u30fc\u30b9\" \u3092\u9078\u629e\u3002\n- [\u30bd\u30fc\u30b9\u30fb\u30d1\u30c3\u30b1\u30fc\u30b8\u30fb\u30d5\u30a9\u30eb\u30c0] \u306e [\u30d5\u30a9\u30eb\u30c0\u306e\u8ffd\u52a0] \u3092\u9078\u629e\u3002\n- `src/conf` \u3092\u9078\u629e\u3057\u3066 [\u958b\u304f] \u3092\u30af\u30ea\u30c3\u30af\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/2fff658d-5ec1-c3a4-1688-00f8645e0b4a.jpeg)\n\n- \u3053\u308c\u3067\u3001 `persistence.xml` \u304c `WEB-INF/classes/META-INF/` \u306e\u4e0b\u306b\u914d\u5099\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n##DB\u30a2\u30af\u30bb\u30b9\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\n```java:HelloJpaServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.HelloJpaEjb;\n\n@WebServlet(\"/hello/*\")\npublic class HelloJpaServlet extends HttpServlet {\n\n    @EJB\n    private HelloJpaEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        if (path.endsWith(\"/persist\")) {\n            this.ejb.persist(req.getParameter(\"value\"));\n\n        } else if (path.endsWith(\"/remove\")) {\n            this.ejb.remove(this.getId(req));\n\n        } else {\n            this.ejb.print(this.getId(req));\n\n        }\n    }\n\n    private long getId(HttpServletRequest req) {\n        return Long.parseLong(req.getParameter(\"id\"));\n    }\n}\n```\n\n```java:HelloJpaEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class HelloJpaEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void persist(String value) {\n        Sample sample = new Sample();\n        sample.setValue(value);\n\n        this.em.persist(sample);\n\n        System.out.println(\"persist : \" + sample);\n    }\n\n    public void remove(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n        this.em.remove(sample);\n\n        System.out.println(\"remove : \" + sample);\n    }\n\n    public void print(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n\n        System.out.println(sample);\n    }\n}\n```\n\n##\u52d5\u4f5c\u78ba\u8a8d\n`http://localhost:8080/jpa/hello/persist?value=HelloJPA!!` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: persist : Sample{id=null, value=HelloJPA!!}\n```\n\n`sample_table` \u306e\u4e2d\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/03daeb30-d7ee-471c-e516-a4e690908e58.jpeg)\n\n`http://localhost:8080/jpa/hello?id=4` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: Sample{id=4, value=HelloJPA!!}\n```\n\n`http://localhost:8080/jpa/hello/remove?id=4` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: remove : Sample{id=4, value=HelloJPA!!}\n```\n\n`sample_table` \u306e\u4e2d\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/3e12fe54-5d41-3930-d799-78ad0d698db6.jpeg)\n\n\n##\u8aac\u660e\n###\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\n```xml:persistence.xml\n  <persistence-unit name=\"SampleUnit\">\n    <jta-data-source>jdbc/Local_MySQL_test</jta-data-source>\n  </persistence-unit>\n```\n\n- JPA \u3067\u306f\u3001\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\uff08`<persistence-unit>` \u30bf\u30b0\uff09\u3068\u3044\u3046\u5358\u4f4d\u3067 DB \u63a5\u7d9a\u306e\u8a2d\u5b9a\u3092\u4f5c\u6210\u3059\u308b\u3002\n    - `name` \u5c5e\u6027\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b\u3002\n    - \u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u306f\u8907\u6570\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u3067\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u4efb\u305b\u308b\u304b\u3001\u81ea\u529b\u3067\u5236\u5fa1\u3059\u308b\u304b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    - Java EE \u30b5\u30fc\u30d0\u30fc\u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5834\u5408\u306f\u3001\u7279\u306b\u6307\u5b9a\u3092\u3057\u306a\u3044\u9650\u308a\u30b3\u30f3\u30c6\u30ca\u304c\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3059\u308b\uff08`JTA` \u304c\u63a1\u7528\u3055\u308c\u308b\uff09\u3002\n    - \u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001 `<persistence-unit>` \u30bf\u30b0\u306b `transaction-type` \u5c5e\u6027\u3092\u8ffd\u52a0\u3057\u3066\u6307\u5b9a\u3059\u308b\uff08`JTA` or `RESOURCE_LOCAL`\uff09\u3002\n- `<jta-data-source>` \u30bf\u30b0\u3067\u306f\u3001\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306e JNDI \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n####persistence.xml \u306e\u914d\u7f6e\u5834\u6240\n`persistence.xml` \u306f\u3001\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u5834\u6240\u306b\u914d\u7f6e\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n| \u30b1\u30fc\u30b9 | \u914d\u7f6e\u5834\u6240 |\n| :-- | :-- |\n| persistence.xml \u3092 war \u30d5\u30a1\u30a4\u30eb\u306b\u307e\u3068\u3081\u308b\u5834\u5408 | WEB-INF/classes/META-INF/persistence.xml |\n| persistence.xml \u3092 war \u3068\u306f\u5225\u306e jar \u306b\u68b1\u5305\u3059\u308b\u5834\u5408 | &lt;jar \u30d5\u30a1\u30a4\u30eb&gt;/META-INF/persistence.xml |\n\n###\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n```java:Sample.java\npackage sample.javaee.jpa.entity;\n\nimport java.io.Serializable;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"sample_table\")\npublic class Sample implements Serializable {\n    @Id\n    private Long id;\n    private String value;\n\n}\n```\n\n- JPA \u3067\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u3068\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u30af\u30e9\u30b9\u306e\u3053\u3068\u3092**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3**\u3068\u547c\u3076\u3002\n- **Java EE \u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u3042\u308c\u3070**\u3001\u30af\u30e9\u30b9\u3092 `@Entity` \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3067\u81ea\u52d5\u3067\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u3057\u3066\u767b\u9332\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    - Java EE \u74b0\u5883\u4ee5\u5916\u3067 Eclipse Link \u306a\u3069\u3092\u81ea\u529b\u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u81ea\u52d5\u767b\u9332\u3055\u308c\u306a\u3044\u3002\n    - \u305d\u306e\u5834\u5408\u306f\u3001 `persistence.xml` \u306b `<class>` \u30bf\u30b0\u3084 `<jar-file>` \u30bf\u30b0\u3092\u4f7f\u3063\u3066\u624b\u52d5\u3067\u767b\u9332\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n- DB \u306e\u30c6\u30fc\u30d6\u30eb\u540d\u304c\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30af\u30e9\u30b9\u540d\u3068\u7570\u306a\u308b\u5834\u5408\u306f\u3001 `@Table` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n###EntityManager\n```java:HelloJpaEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class HelloJpaEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void persist(String value) {\n        Sample sample = new Sample();\n        sample.setValue(value);\n\n        this.em.persist(sample);\n\n        System.out.println(\"persist : \" + sample);\n    }\n\n    public void remove(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n        this.em.remove(sample);\n\n        System.out.println(\"remove : \" + sample);\n    }\n\n    public void print(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n\n        System.out.println(sample);\n    }\n}\n```\n\n- \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306f\u3001 `EntityManager` \u3092\u4f7f\u7528\u3059\u308b\u3002\n- `EntityManager` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001 `@PersistenceContext` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u3067\u30b3\u30f3\u30c6\u30ca\u304c\u7ba1\u7406\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    - EJB \u3060\u3051\u3067\u306a\u304f\u3001 Servlet \u306b\u3082\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067\u304d\u308b\u3002\n- `@PersistenceContext` \u306e `name` \u5c5e\u6027\u3067\u3001\u4f7f\u7528\u3059\u308b\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002\n- `EntityManager` \u306b\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e CRUD \u64cd\u4f5c\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u53d6\u5f97\u3001\u767b\u9332\u3001\u524a\u9664\u306a\u3069\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    - `EntityManager#find(Class, Object)` \u3067\u3001\u30ad\u30fc\u60c5\u5831\u3092\u4f7f\u3063\u3066\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u53d6\u5f97\u3059\u308b\u3002\n    - `EntityManager#persist(Object)` \u3067\u3001\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u30c6\u30fc\u30d6\u30eb\u306b\u767b\u9332\u3059\u308b\u3002\n    - `EntityManager#remove(Object)` \u3067\u3001\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u524a\u9664\u3059\u308b\u3002\n\n#\u30ec\u30b3\u30fc\u30c9\u306e\u66f4\u65b0\n```diff:HelloJpaEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class HelloJpaEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void persist(String value) {\n        Sample sample = new Sample();\n        sample.setValue(value);\n\n        this.em.persist(sample);\n\n        System.out.println(\"persist : \" + sample);\n    }\n\n    public void remove(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n        this.em.remove(sample);\n\n        System.out.println(\"remove : \" + sample);\n    }\n\n    public void print(long id) {\n        Sample sample = this.em.find(Sample.class, id);\n\n        System.out.println(sample);\n    }\n\n+   public void update(long id, String value) {\n+       Sample sample = this.em.find(Sample.class, id);\n+       sample.setValue(value);\n+       \n+       System.out.println(\"update : \" + sample);\n+   }\n}\n```\n\n```diff:HelloJpaServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.HelloJpaEjb;\n\n@WebServlet(\"/hello/*\")\npublic class HelloJpaServlet extends HttpServlet {\n\n    @EJB\n    private HelloJpaEjb ejb;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n\n        if (path.endsWith(\"/persist\")) {\n-           this.ejb.persist(req.getParameter(\"value\"));\n+           this.ejb.persist(this.getValue(req));\n\n        } else if (path.endsWith(\"/remove\")) {\n            this.ejb.remove(this.getId(req));\n\n+       } else if (path.endsWith(\"/update\")) {\n+           this.ejb.update(this.getId(req), this.getValue(req));\n+           \n        } else {\n            this.ejb.print(this.getId(req));\n\n        }\n    }\n\n+   private String getValue(HttpServletRequest req) {\n+       return req.getParameter(\"value\");\n+   }\n\n    private long getId(HttpServletRequest req) {\n        return Long.parseLong(req.getParameter(\"id\"));\n    }\n}\n```\n\n`http://localhost:8080/jpa/hello?id=2` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: Sample{id=2, value=fuga}\n```\n\n`http://localhost:8080/jpa/hello/update?id=2&value=UpdateValue` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: update : Sample{id=2, value=UpdateValue}\n```\n\n`http://localhost:8080/jpa/hello?id=2` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: Sample{id=2, value=UpdateValue}\n```\n\n\nJPA \u3067\u306f\u3001 DB \u306e\u30ec\u30b3\u30fc\u30c9\u3092\u66f4\u65b0\u3059\u308b\u305f\u3081\u306b UPDATE \u6587\u3092\u660e\u793a\u7684\u306b\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3002\n\nJPA \u3067\u306e\u30ec\u30b3\u30fc\u30c9\u306e\u66f4\u65b0\u306f\u3001 `find()` \u3067\u53d6\u5f97\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u3067\u3044\u3044\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001 EntityManager \u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5909\u66f4\u3092\u53cd\u6620\u3057\u3066\u304f\u308c\u308b\u3002\n\n\u305f\u3076\u3093\u3001 SQL \u3092\u30ac\u30ea\u30ac\u30ea\u66f8\u304f\u5b9f\u88c5\u3092\u3057\u3066\u3044\u305f\u4eba\u304c JPA \u3092\u3084\u308a\u59cb\u3081\u3066\u3001\u4e00\u756a\u6700\u521d\u306b\u9762\u98df\u3089\u3046\u4ed5\u69d8\u3060\u3068\u601d\u3046\u3002\n\n\u6700\u521d\u306f\u3001\u3061\u3087\u3063\u3068\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5909\u66f4\u3057\u305f\u3060\u3051\u3067 DB \u306b\u53cd\u6620\u3055\u308c\u308b\u3053\u3068\u306b\u5bfe\u3059\u308b\u4e0d\u5b89\u611f\u3084\u4e0d\u4fe1\u611f\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u3057\u304b\u3057\u3001\u3053\u306e\u4ed5\u7d44\u307f\u304c\u3042\u308b\u3068\u5b9f\u88c5\u304b\u3089\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\uff08\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\uff09\u306b\u95a2\u3059\u308b\u51e6\u7406\u3092\u53d6\u308a\u9664\u304f\u3053\u3068\u304c\u3067\u304d\u3001\u3088\u308a\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306b\u96c6\u4e2d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff08\u306f\u305a\uff09\u3002\n\n\u305f\u3060\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306b\u91cd\u304d\u3092\u304a\u304f\u3053\u3068\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306a\u90e8\u5206\u3082\u3042\u308b\u3002\nO/R \u30de\u30c3\u30d1\u30fc\u306b\u95a2\u3059\u308b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u554f\u984c\u3068\u305d\u306e\u5bfe\u7b56\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u30b9\u30e9\u30a4\u30c9\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n- [O/R\u30de\u30c3\u30d1\u30fc\u306b\u3088\u308b\u30c8\u30e9\u30d6\u30eb\u3092\u672a\u7136\u306b\u9632\u3050](http://www.slideshare.net/kwatch/how-topreventorm-troubles)\n\n#EntityManager \u306b\u3088\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7ba1\u7406\nJPA \u3067\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u72b6\u614b\u304c EntityManager \u306b\u3088\u3063\u3066\u7ba1\u7406\u30fb\u76e3\u8996\u3055\u308c\u3066\u3044\u308b\u3002\n\nEntityManager \u304c\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u76e3\u8996\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3001\u524d\u8ff0\u306e\u3088\u3046\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f8\u304d\u63db\u3048\u305f\u3060\u3051\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3044\u308b\u3002\n\u9006\u306b\u3044\u3046\u3068\u3001 EntityManager \u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u306a\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5909\u66f4\u3057\u3066\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u53cd\u6620\u3055\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3002\n\nJPA \u3067\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c EntityManager \u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3001\u3068\u3044\u3046\u306e\u3092\u610f\u8b58\u3059\u308b\u306e\u304c\u91cd\u8981\u306b\u306a\u308b\u3002\n\n##\u65b0\u3057\u3044\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n```java:EntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    public void test() {\n        Sample sample = new Sample();\n    }\n}\n```\n\n- \u666e\u901a\u306b `new` \u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u5f53\u7136 EntityManager \u306b\u306f\u7ba1\u7406\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n- \u3053\u306e\u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3001 **NEW \u72b6\u614b** \u3068\u547c\u3076\u3002\n\n##NEW \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 EntityManager \u306e\u7ba1\u7406\u4e0b\u306b\u7f6e\u304f\n```diff:EntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\n+ import javax.persistence.EntityManager;\n+ import javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n+   @PersistenceContext(unitName=\"SampleUnit\")\n+   private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n+       \n+       this.em.persist(sample);\n    }\n}\n```\n\n- `EntityManager#persist(Object)` \u306b\u3088\u3063\u3066\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 EntityManager \u306e\u7ba1\u7406\u4e0b\u306b\u7f6e\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u3053\u306e\u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 **MANAGED \u72b6\u614b** \u3068\u547c\u3076\u3002\n- MANAGED \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001 DB \u306e\u30ec\u30b3\u30fc\u30c9\u3068\u540c\u671f\u304c\u3068\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n    - NEW \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c MANAGED \u72b6\u614b\u306b\u306a\u3063\u305f\u5834\u5408\u3001 DB \u3068\u540c\u671f\u3092\u3068\u308b\u305f\u3081\u30ec\u30b3\u30fc\u30c9\u304c\u65b0\u898f\u306b\u767b\u9332\u3055\u308c\u308b\u3002\n    - \u3053\u306e\u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5909\u66f4\u3055\u308c\u308b\u3068\u3001 DB \u3068\u540c\u671f\u3092\u3068\u308b\u305f\u3081 UPDATE \u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n    - \u203b\u5b9f\u969b\u306b\u540c\u671f\u304c\u3068\u3089\u308c\u308b\u306e\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3068\u304d\u3002\n- \u65e2\u306b DB \u306b\u5b58\u5728\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u53d6\u5f97\u3057\u3001 EntityManager \u306e\u7ba1\u7406\u4e0b\u306b\u7f6e\u304d\u305f\u3044\u5834\u5408\u306f\u3001 `EntityManager#find(Class, Object)` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n##DB \u306b\u8a18\u9332\u3055\u308c\u3066\u3044\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u60c5\u5831\u3092\u7834\u68c4\u3059\u308b\n```diff:EntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n+       this.em.remove(sample);\n    }\n}\n```\n\n- `EntityManger#remove(Object)` \u30e1\u30bd\u30c3\u30c9\u306b MANAGED \u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092 DB \u304b\u3089\u7834\u68c4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    - \u203b\u5b9f\u969b\u306b\u7834\u68c4\u3055\u308c\u308b\u306e\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3068\u304d\u3002\n- \u3053\u306e\u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 **REMOVED \u72b6\u614b** \u3068\u547c\u3076\u3002\n- REMOVED \u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u518d\u3073 MANAGED \u72b6\u614b\u306b\u623b\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u518d\u5ea6 `persist()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n##EntityManager \u306e\u7ba1\u7406\u4e0b\u304b\u3089\u5916\u3059\n```diff:EntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n-       this.em.remove(sample);\n+       this.em.clear();\n    }\n}\n```\n\n- \u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3068\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f EntityManager \u306e\u7ba1\u7406\u4e0b\u304b\u3089\u5916\u3055\u308c\u308b\u3002\n    - \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3002\n    - `EntityManager#clear()` \u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n- \u3053\u306e\u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 **DETACHED \u72b6\u614b** \u3068\u547c\u3076\u3002\n- DETACHED \u72b6\u614b\u306b\u306a\u3063\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001 DB \u306b\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\u3002\n    - \u4e0a\u8a18\u5b9f\u88c5\u306e\u5834\u5408\u3001 `persist()` \u3057\u3066\u3044\u308b\u304c\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u524d\u306b `clear()` \u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f DB \u3068\u540c\u671f\u3055\u308c\u305a\u3001\u30ec\u30b3\u30fc\u30c9\u306f\u767b\u9332\u3055\u308c\u306a\u3044\u3002\n\n##\u624b\u52d5\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5909\u66f4\u3092\u53cd\u6620\u3055\u305b\u308b\n```diff:EntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n+       this.em.flush();\n\n        this.em.clear();\n    }\n}\n```\n\n- `EntityManager#flush()` \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u660e\u793a\u7684\u306b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u72b6\u614b\u3092 DB \u306b\u53cd\u6620\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u4e0a\u8a18\u306e\u5834\u5408\u3001 `clear()` \u306e\u524d\u306b `flush()` \u304c\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u3001 DB \u306b\u30ec\u30b3\u30fc\u30c9\u304c\u767b\u9332\u3055\u308c\u308b\u3002\n\n##DETACHED \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 MANAGED \u72b6\u614b\u306b\u623b\u3059\n```diff:EntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n        this.em.flush();\n\n        this.em.clear();\n\n+       Sample managed = this.em.merge(sample);\n+       managed.setValue(\"\u3053\u3061\u3089\u306e\u5024\u304c\u53cd\u6620\u3055\u308c\u308b\");\n+       sample.setValue(\"\u3053\u3061\u3089\u306e\u5024\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\");\n    }\n}\n```\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/6da5a79a-0c9b-dca3-24b8-69ce38ab5543.jpeg)\n\n- `EntityManager#merge(Object)` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001 DETACHED \u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 MANAGED \u72b6\u614b\u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- NEW \u72b6\u614b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u3001\u305d\u306e\u5834\u5408\u306f\u30ec\u30b3\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u3002\n- \u5f15\u6570\u3067\u6e21\u3057\u305f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f MANAGED \u72b6\u614b\u306b\u306a\u3089\u306a\u3044\u3002\n    - \u4ee3\u308f\u308a\u306b\u3001\u623b\u308a\u5024\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c MANAGED \u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\uff08\u3053\u3061\u3089\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u3068\u3001 DB \u306b\u53cd\u6620\u3055\u308c\u308b\uff09\u3002\n    - \u623b\u308a\u5024\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u5f15\u6570\u3067\u6e21\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30d4\u30fc\u3002\n\n##MANAGED \u72b6\u614b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 DB \u306e\u6700\u65b0\u306e\u72b6\u614b\u3067\u66f4\u65b0\u3059\u308b\n```diff:EntityStateManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.LockModeType;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class EntityStateManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n\n    public void test() {\n        Sample sample = new Sample();\n\n        this.em.persist(sample);\n\n        this.em.flush();\n\n        this.em.clear();\n\n        Sample managed = this.em.merge(sample);\n        managed.setValue(\"\u3053\u3061\u3089\u306e\u5024\u304c\u53cd\u6620\u3055\u308c\u308b\");\n        sample.setValue(\"\u3053\u3061\u3089\u306e\u5024\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\");\n\n+       Sample hoge = this.em.find(Sample.class, 1L);\n+       hoge.setValue(\"test\");\n+       \n+       this.em.refresh(hoge);\n+       \n+       System.out.println(\"hoge=\" + hoge);\n    }\n}\n```\n\n`http://localhost:8080/jpa/state` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: hoge=Sample{id=1, value=hoge}\n```\n\n- `EntityManager#refresh(Object)` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u72b6\u614b\u3092\u3001\u73fe\u5728\u306e DB \u306e\u72b6\u614b\u3067\u540c\u671f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n##\u307e\u3068\u3081\n```text:\n                    \u25cb      \u25ce\n                new |      ^ GC\n                    v      |\n                   +---------+\n                   |   NEW   | <--------------+\n                   +---------+                |\n   find/JPQL             |                    |\n\u25cb----------------------+ |                    |\n                       | | persist            |\n                       v v                    |\n+---------+  merge   +---------+  remove   +---------+\n|         | -------> |         | --------> |         |\n|DETACHED | <------- | MANAGED |           | REMOVED |\n|         |  clear   |         | <-+       |         |\n+---------+  detach  +---------+   |       +---------+\n                       ^    |      |\n                       |    +------+\n                       |      refresh\n                       |      setter\n                       v\n                    +-------------+\n                    +-------------+\n                    |   Database  |\n                    +-------------+\n```\n\n\u5143\u30cd\u30bf\uff1a[JPA\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u66f8\u3044\u3066\u307f\u305f - Qiita][]\n\n[JPA\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u66f8\u3044\u3066\u307f\u305f - Qiita]: http://qiita.com/making@github/items/f87a21f9e5a5d6544138\n\n\n#\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5236\u5fa1\nJava EE \u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30bf\u30a4\u30d7\u304c JTA \u306e\u6c38\u7d9a\u30e6\u30cb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5236\u5fa1\u306f EJB \u30b3\u30f3\u30c6\u30ca\u306b\u4efb\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nEJB \u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001 EJB \u30b3\u30f3\u30c6\u30ca\u306f\u81ea\u52d5\u3067\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u5f8c\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u3092\u8a2d\u3051\u308b\u3002\n\u3064\u307e\u308a\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u958b\u59cb\u524d\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u7d42\u4e86\u3059\u308b\u3068\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3002\n\n\u3053\u306e\u52d5\u4f5c\u306f\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u7d30\u304b\u304f\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n##\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u8abf\u6574\u3059\u308b\n###\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u304d\n```java:TransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.annotation.Resource;\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.javaee.jpa.ejb.TransactionEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n   \n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n       \n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n       \n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        }\n    }\n}\n```\n\n```java:TransactionEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.EJB;\nimport javax.ejb.Stateless;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class TransactionEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    @EJB\n    private DefaultTxEjb defaultTxEjb;\n   \n    public void defaultTransactionManagement() {\n        System.out.println(\"[TransactionEjb] tx.key=\" + tx.getTransactionKey());\n        this.defaultTxEjb.method();\n    }\n}\n```\n\n```java:DefaultTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class DefaultTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    public void method() {\n        System.out.println(\"[DefaultTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n```\n\n`http://localhost:8080/jpa/transaction/default` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=9 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@1e8e0a9]\n\u60c5\u5831: [DefaultTxEjb] tx.key=JavaEETransactionImpl: txId=9 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@1e8e0a9]\n```\n\n- `txId` \u3067\u3001\u73fe\u5728\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u7d10\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u8b58\u5225\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- EJB \u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u70b9\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u81ea\u52d5\u3067\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u3002\n- EJB \u5185\u304b\u3089\u5225\u306e EJB \u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u3001\u540c\u3058\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u5f15\u304d\u7d99\u304c\u308c\u3066\u3044\u308b\u3002\n\n###\u5e38\u306b\u65b0\u3057\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3055\u305b\u308b\n```java:RequiresNewTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)\npublic class RequiresNewTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    public void method() {\n        System.out.println(\"[RequiresNewTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n```\n\n```diff:\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.EJB;\nimport javax.ejb.Stateless;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class TransactionEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    @EJB\n    private DefaultTxEjb defaultTxEjb;\n+   @EJB\n+   private RequiresNewTxEjb requiresNewTxEjb;\n\n    public void defaultTransactionManagement() {\n-       System.out.println(\"[TransactionEjb] tx.key=\" + tx.getTransactionKey());\n+       this.printTxId();\n        this.defaultTxEjb.method();\n    }\n\n+   public void requiresNew() {\n+       this.printTxId();\n+       this.requiresNewTxEjb.method();\n+   }\n+  \n+   private void printTxId() {\n+       System.out.println(\"[TransactionEjb] tx.key=\" + tx.getTransactionKey());\n+   }\n}\n```\n\n```diff:TransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n   \n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n       \n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n   \n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n+       } else if (path.endsWith(\"/requires-new\")) {\n+           this.ejb.requiresNew();\n        }\n    }\n}\n```\n\n`http://localhost:8080/jpa/transaction/requires-new` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=10 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@3593ef74]\n\u60c5\u5831: [RequiresNewTxEjb] tx.key=JavaEETransactionImpl: txId=11 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@9c5c512]\n```\n\n- `@TransactionAttribute` \u3067\u30af\u30e9\u30b9\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u3001 `TransactionAttributeType.REQUIRES_NEW` \u3092\u6307\u5b9a\u3059\u308b\u3002\n    - \u30e1\u30bd\u30c3\u30c9\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\n    - \u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u3001 `TransactionAttributeType.REQUIRED` \u3092\u6307\u5b9a\u3057\u305f\u306e\u3068\u540c\u3058\u306b\u306a\u308b\u3002\n- \u3059\u308b\u3068\u3001\u305d\u306e EJB \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u5e38\u306b\u65b0\u3057\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n- `txId=10` \u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u4e00\u6642\u4e2d\u65ad\u3055\u308c\u3066\u3044\u3066\u3001 `txId=11` \u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3057\u305f\u3042\u3068\u306b\u518d\u958b\u3055\u308c\u308b\u3002\n\n###\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5f15\u304d\u7d99\u3050\n####\u958b\u59cb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u306a\u3044\n```java:SupportsTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.SUPPORTS)\npublic class SupportsTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    public void method() {\n        System.out.println(\"[SupportsTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n```\n\n```diff:TransactionEjb.java\uff08\u8ffd\u52a0\u5206\u306e\u307f\uff09\n+   @EJB\n+   private SupportsTxEjb supportsTxEjb;\n  \n+   public void supports() {\n+       this.printTxId();\n+       this.supportsTxEjb.method();\n+   }\n```\n\n```diff:TransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n+ import sample.javaee.jpa.ejb.SupportsTxEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n+   @EJB\n+   private SupportsTxEjb supportsTxEjb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n       \n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n       \n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        } else if (path.endsWith(\"/requires-new\")) {\n            this.ejb.requiresNew();\n+       } else if (path.endsWith(\"/supports\")) {\n+           this.ejb.supports();\n+           this.supportsTxEjb.method();\n        }\n    }\n}\n```\n\n`http://localhost:8080/jpa/transaction/supports` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=13 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@1f631ce3]\n\u60c5\u5831: [SupportsTxEjb] tx.key=JavaEETransactionImpl: txId=13 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@1f631ce3]\n\u60c5\u5831: [SupportsTxEjb] tx.key=null\n```\n\n- `SUPPORTS` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5f15\u304d\u7d99\u3050\u3002\n- \u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u305b\u305a\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n####\u958b\u59cb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3055\u305b\u308b\n```java:MandatoryTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.MANDATORY)\npublic class MandatoryTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    public void method() {\n        System.out.println(\"[MandatoryTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n```\n\n```diff:TransactionEjb.java\uff08\u8ffd\u52a0\u5206\u306e\u307f\uff09\n+ @EJB\n+ private MandatoryTxEjb mandatoryTxEjb;\n\n+ public void mandatory() {\n+    this.printTxId();\n+    this.mandatoryTxEjb.method();\n+ }\n```\n\n```diff:TransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n+ import sample.javaee.jpa.ejb.MandatoryTxEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n    @EJB\n    private SupportsTxEjb supportsTxEjb;\n+   @EJB\n+   private MandatoryTxEjb mandatoryTxEjb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n       \n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n   \n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        } else if (path.endsWith(\"/requires-new\")) {\n            this.ejb.requiresNew();\n        } else if (path.endsWith(\"/supports\")) {\n            this.ejb.supports();\n            this.supportsTxEjb.method();\n+       } else if (path.endsWith(\"/mandatory\")) {\n+           this.ejb.mandatory();\n+           this.mandatoryTxEjb.method();\n        }\n    }\n}\n```\n\n`http://localhost:8080/jpa/transaction/mandatory` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=14 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@2fc0f5a4]\n\u60c5\u5831: [MandatoryTxEjb] tx.key=JavaEETransactionImpl: txId=14 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@2fc0f5a4]\n\u8b66\u544a: A system exception occurred during an invocation on EJB MandatoryTxEjb, method: public void sample.javaee.jpa.ejb.MandatoryTxEjb.method()\n\u8b66\u544a: javax.ejb.TransactionRequiredLocalException\n   at com.sun.ejb.containers.EJBContainerTransactionManager.preInvokeTx(EJBContainerTransactionManager.java:235)\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n- `MANDATORY` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n####\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3055\u305b\u308b\n```java:NeverTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.NEVER)\npublic class NeverTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    public void method() {\n        System.out.println(\"[NeverTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n```\n\n```diff:TransactionEjb.java\uff08\u8ffd\u52a0\u5206\u306e\u307f\uff09\n+   @EJB\n+   private NeverTxEjb neverTxEjb;\n  \n+   public void never() {\n+       this.printTxId();\n+       this.neverTxEjb.method();\n+   }\n```\n\n```diff:TransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n+ import sample.javaee.jpa.ejb.NeverTxEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n    @EJB\n    private SupportsTxEjb supportsTxEjb;\n    @EJB\n    private MandatoryTxEjb mandatoryTxEjb;\n+   @EJB\n+   private NeverTxEjb neverTxEjb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n       \n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n   \n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        } else if (path.endsWith(\"/requires-new\")) {\n            this.ejb.requiresNew();\n        } else if (path.endsWith(\"/supports\")) {\n            this.ejb.supports();\n            this.supportsTxEjb.method();\n        } else if (path.endsWith(\"/mandatory\")) {\n            this.ejb.mandatory();\n            this.mandatoryTxEjb.method();\n+       } else if (path.endsWith(\"/never\")) {\n+           this.neverTxEjb.method();\n+           this.ejb.never();\n        }\n    }\n}\n```\n\n`http://localhost:8080/jpa/transaction/never` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [NeverTxEjb] tx.key=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=17 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@59f0d1fa]\n\u8b66\u544a: A system exception occurred during an invocation on EJB NeverTxEjb, method: public void sample.javaee.jpa.ejb.NeverTxEjb.method()\n\u8b66\u544a: javax.ejb.EJBException: EJB cannot be invoked in global transaction\n   at com.sun.ejb.containers.EJBContainerTransactionManager.preInvokeTx(EJBContainerTransactionManager.java:277)\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n- `NEVER` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u5143\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u3068\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n###\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4e00\u5207\u4f7f\u7528\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n```java:NotSupportedTxEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.NOT_SUPPORTED)\npublic class NotSupportedTxEjb {\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    public void method() {\n        System.out.println(\"[NotSupportedTxEjb] tx.key=\" + tx.getTransactionKey());\n    }\n}\n```\n\n```diff:TransactionEjb.java\uff08\u8ffd\u52a0\u5206\u306e\u307f\uff09\n+   @EJB\n+   private NotSupportedTxEjb notSupportedTxEjb;\n  \n+   public void notSupported() {\n+       this.printTxId();\n+       this.notSupportedTxEjb.method();\n+   }\n```\n\n```diff:TransactionServlet.java\npackage sample.javaee.jpa.servlet;\n\n\uff08\u7565\uff09\n+ import sample.javaee.jpa.ejb.NotSupportedTxEjb;\n\n@WebServlet(\"/transaction/*\")\npublic class TransactionServlet extends HttpServlet {\n\n    @EJB\n    private TransactionEjb ejb;\n    @EJB\n    private SupportsTxEjb supportsTxEjb;\n    @EJB\n    private MandatoryTxEjb mandatoryTxEjb;\n    @EJB\n    private NeverTxEjb neverTxEjb;\n+   @EJB\n+   private NotSupportedTxEjb notSupportedTxEjb;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n   \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n   \n        System.out.println(\"[TransactionServlet] tx.id=\" + this.tx.getTransactionKey());\n   \n        if (path.endsWith(\"/default\")) {\n            this.ejb.defaultTransactionManagement();\n        } else if (path.endsWith(\"/requires-new\")) {\n            this.ejb.requiresNew();\n        } else if (path.endsWith(\"/supports\")) {\n            this.ejb.supports();\n            this.supportsTxEjb.method();\n        } else if (path.endsWith(\"/mandatory\")) {\n            this.ejb.mandatory();\n            this.mandatoryTxEjb.method();\n        } else if (path.endsWith(\"/never\")) {\n            this.neverTxEjb.method();\n            this.ejb.never();\n+       } else if (path.endsWith(\"/not-supported\")) {\n+           this.ejb.notSupported();\n+           this.notSupportedTxEjb.method();\n        }\n    }\n}\n```\n\n`http://localhost:8080/jpa/transaction/not-supported` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: [TransactionServlet] tx.id=null\n\u60c5\u5831: [TransactionEjb] tx.key=JavaEETransactionImpl: txId=15 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[com.sun.ejb.containers.ContainerSynchronization@43def44e]\n\u60c5\u5831: [NotSupportedTxEjb] tx.key=null\n\u60c5\u5831: [NotSupportedTxEjb] tx.key=null\n```\n\n- `NOT_SUPPORTED` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u65e2\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4e2d\u65ad\u3055\u305b\u3066\u304b\u3089\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n    - `NOT_SUPPORTED` \u304c\u9069\u7528\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u7d42\u4e86\u3057\u305f\u5f8c\u3067\u3001\u4e2d\u65ad\u3055\u308c\u3066\u3044\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u518d\u958b\u3055\u308c\u308b\u3002\n- \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u958b\u59cb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u305d\u306e\u307e\u307e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n###\u307e\u3068\u3081\n| \u547c\u3073\u51fa\u3057\u5143\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u2192 | \u306a\u3057 | \u3042\u308a |\n|-------------------------------|:-------:|:---------------:|\n| REQUIRED | Tx \u958b\u59cb | \u5f15\u304d\u7d99\u3050 |\n| REQUIRES_NEW | Tx \u958b\u59cb | Tx \u958b\u59cb |\n| SUPPORTES | Tx \u306a\u3057 | \u5f15\u304d\u7d99\u3050 |\n| MANDATORY | \u4f8b\u5916 | \u5f15\u304d\u7d99\u3050 |\n| NEVER | Tx \u306a\u3057 | \u4f8b\u5916 |\n| NOT_SUPPORTED | Tx \u306a\u3057 | Tx \u306a\u3057\uff08\u4e2d\u65ad\uff09 |\n\n##\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n###\u4f8b\u5916\u306b\u3088\u308b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n```java:MyRollbackException.java\npackage sample.javaee.jpa.exception;\n\nimport javax.ejb.ApplicationException;\n\n@ApplicationException(rollback=true)\npublic class MyRollbackException extends Exception {\n}\n```\n\n```java:ExceptionRollbackEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\nimport sample.javaee.jpa.exception.MyRollbackException;\n\n@Stateless\npublic class ExceptionRollbackEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n   \n    public void throwException() throws Exception {\n        this.insertEntity(\"exception\");\n        throw new Exception(\"test exception\");\n    }\n   \n    public void throwRuntimeException() {\n        this.insertEntity(\"runtime exception\");\n        throw new RuntimeException(\"test runtime exception\");\n    }\n   \n    public void throwMyRollbackException() throws MyRollbackException {\n        this.insertEntity(\"my rollback exception\");\n        throw new MyRollbackException();\n    }\n   \n    private void insertEntity(String value) {\n        Sample sample = new Sample();\n        sample.setValue(value);\n        this.em.persist(sample);\n    }\n}\n```\n\n```java:ExceptionRollbackServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.ExceptionRollbackEjb;\n\n@WebServlet(\"/ex-rollback/*\")\npublic class ExceptionRollbackServlet extends HttpServlet {\n\n    @EJB\n    private ExceptionRollbackEjb ejb;\n   \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        String path = req.getRequestURI();\n   \n        try {\n            if (path.endsWith(\"/runtime\")) {\n                this.ejb.throwRuntimeException();\n            } else if (path.endsWith(\"/my-exception\")) {\n                this.ejb.throwMyRollbackException();\n            } else {\n                this.ejb.throwException();\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n`http://localhost:8080/jpa/ex-rollback` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u91cd\u5927: java.lang.Exception: test exception\n   at sample.javaee.jpa.ejb.ExceptionRollbackEjb.throwException(ExceptionRollbackEjb.java:16)\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n`sample_table` \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/bfd68c87-c7ef-2521-c8ee-faea2748f1d9.jpeg)\n\n\u30ec\u30b3\u30fc\u30c9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3002\n\n`http://localhost:8080/jpa/ex-rollback/runtime` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u8b66\u544a: javax.ejb.EJBException\n   at com.sun.ejb.containers.EJBContainerTransactionManager.processSystemException(EJBContainerTransactionManager.java:748)\n\uff08\u4e2d\u7565\uff09\nCaused by: java.lang.RuntimeException: test runtime exception\n   at sample.javaee.jpa.ejb.ExceptionRollbackEjb.throwRuntimeException(ExceptionRollbackEjb.java:21)\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n`sample_table` \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/fa8ef31c-cf8b-2447-579e-bb5d87a57376.jpeg)\n\n\u30ec\u30b3\u30fc\u30c9\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\n`http://localhost:8080/jpa/ex-rollback/my-exception` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u91cd\u5927: sample.javaee.jpa.exception.MyRollbackException\n   at sample.javaee.jpa.ejb.ExceptionRollbackEjb.throwMyRollbackException(ExceptionRollbackEjb.java:27)\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n`sample_table` \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/14b06943-8bb9-ff3d-4e73-bdb3c0b0a7eb.jpeg)\n\n\u30ec\u30b3\u30fc\u30c9\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\n- `Exception` \u3092\u7d99\u627f\u3057\u305f\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af**\u3055\u308c\u306a\u3044**\u3002\n    - `@ApplicationException` \u3067\u4f8b\u5916\u30af\u30e9\u30b9\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3057 `rollback=true` \u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- `RuntimeException` \u3092\u7d99\u627f\u3057\u305f\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002\n\n###\u624b\u52d5\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n```java:ManualRollbackEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.SessionContext;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\npublic class ManualRollbackEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n    @Resource\n    private SessionContext context;\n   \n    public void method() {\n        Sample sample = this.em.find(Sample.class, 2L);\n        sample.setValue(\"update\");\n       \n        this.context.setRollbackOnly();\n    }\n}\n```\n\n```java:ManualRollbackServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.ManualRollbackEjb;\n\n@WebServlet(\"/manual-rollback\")\npublic class ManualRollbackServlet extends HttpServlet {\n\n    @EJB\n    private ManualRollbackEjb ejb;\n  \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        this.ejb.method();\n    }\n}\n```\n\n`http://localhost:8080/jpa/manual-rollback` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n`sample_table` \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/55d686b0-8f33-b717-1303-4e03eda30a87.jpeg)\n\n- `SessionContext#setRollbackOnly()` \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u73fe\u5728\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5fc5\u305a\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u305b\u308b\u3088\u3046\u306b\u6307\u5b9a\u3067\u304d\u308b\u3002\n- `SessionContext` \u306f\u3001 `@Resource` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066 EJB \u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3002\n\n##\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u624b\u52d5\u3067\u7ba1\u7406\u3059\u308b\n```java:BeanManagementEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionManagement;\nimport javax.ejb.TransactionManagementType;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport javax.transaction.HeuristicMixedException;\nimport javax.transaction.HeuristicRollbackException;\nimport javax.transaction.NotSupportedException;\nimport javax.transaction.RollbackException;\nimport javax.transaction.SystemException;\nimport javax.transaction.UserTransaction;\nimport sample.javaee.jpa.entity.Sample;\n\n@Stateless\n@TransactionManagement(TransactionManagementType.BEAN)\npublic class BeanManagementEjb {\n\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n    @Resource\n    private UserTransaction tx;\n    \n    public void method(boolean rollback) {\n        try {\n            this.tx.begin();\n           \n            Sample sample = new Sample();\n            sample.setValue(\"BMT\");\n           \n            this.em.persist(sample);\n           \n            if (rollback) {\n                this.tx.rollback();\n                System.out.println(\"rollback\");\n            } else {\n                this.tx.commit();\n                System.out.println(\"commit\");\n            }\n        } catch (NotSupportedException\n                 | SystemException\n                 | RollbackException\n                 | HeuristicMixedException\n                 | HeuristicRollbackException ex) {\n            ex.printStackTrace();\n        }\n    }\n}\n```\n\n```java:BeanManagementServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.BeanManagementEjb;\n\n@WebServlet(\"/bmt\")\npublic class BeanManagementServlet extends HttpServlet {\n\n    @EJB\n    private BeanManagementEjb ejb;\n   \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        this.ejb.method(Boolean.valueOf(req.getParameter(\"rollback\")));\n    }\n}\n```\n\n`http://localhost:8080/jpa/bmt?rollback=false` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n`sample_table` \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/265aad6c-6579-3918-4dbd-fe7f4c2667a2.jpeg)\n\n\n`http://localhost:8080/jpa/bmt?rollback=true` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n`sample_table` \u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/0e0427b2-8d25-d4bd-0fea-20a8f871103d.jpeg)\n\n- `@TransactionManagement` \u3067 EJB \u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u3066\u3001 `TransactionManagementType.BEAN` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u3092\u5168\u3066\u624b\u52d5\u3067\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n    - \u3053\u306e\u72b6\u614b\u3092\u3001BMT (Bean Management Transaction) \u3068\u547c\u3076\u3002\n    - \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u7ba1\u7406\u3057\u3066\u3044\u308b\u72b6\u614b\u3092 CMT (Container Management Transaction) \u3068\u547c\u3076\u3002\n- \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5236\u5fa1\u306b\u306f `UserTransaction` \u3092\u4f7f\u7528\u3059\u308b\u3002\n    - `UserTransaction` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001 `@Resource` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067 EJB \u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067\u304d\u308b\u3002\n\n#\u30ed\u30c3\u30af\n##\u697d\u89b3\u7684\u30ed\u30c3\u30af\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3**\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/05dd353e-ac14-cfc5-0ab2-0a1297666a35.jpeg)\n\n```java:OptimisticLockEntity.java\npackage sample.javaee.jpa.entity;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\nimport javax.persistence.Version;\n\n@Entity\n@Table(name = \"optimistick_lock_entity\")\npublic class OptimisticLockEntity {\n    @Id\n    private Long id;\n    @Version\n    private Long version;\n    private String value;\n   \n    public void setValue(String value) {\n        this.value = value;\n    }\n   \n    @Override\n    public String toString() {\n        return \"OptimisticLockEntity{\" + \"id=\" + id + \", version=\" + version + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9**\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/03c79a5f-da46-480a-0be8-84c6d525ad83.jpeg)\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/ee687b6b-008c-4f0e-4cb7-425a89ff411a.jpeg)\n\n```sql:\nCREATE TABLE `optimistick_lock_entity` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `value` varchar(45) DEFAULT NULL,\n    `version` int(11) NOT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:OptimisticLockEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.OptimisticLockEntity;\n\n@Stateless\npublic class OptimisticLockEjb {\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n   \n    public void update(String value) {\n        OptimisticLockEntity entity = this.em.find(OptimisticLockEntity.class, 1L);\n        entity.setValue(value);\n    }\n}\n```\n\n```java:OptimisticLockServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.OptimisticLockEjb;\n\n@WebServlet(\"/optimistic-lock/*\")\npublic class OptimisticLockServlet extends HttpServlet {\n\n    @EJB\n    private OptimisticLockEjb ejb;\n  \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        this.ejb.update(req.getParameter(\"value\"));\n    }\n}\n```\n\n`http://localhost:8080/jpa/optimistic-lock?value=update` \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/af48154e-5c3b-62e6-6f96-f25d76745cf1.jpeg)\n\n- \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c6\u30fc\u30d6\u30eb\u306b\u3001\u66f4\u65b0\u56de\u6570\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u5c02\u7528\u306e\u9805\u76ee\u3092\u7528\u610f\u3059\u308b\uff08`version`\uff09\u3002\n    - \u6570\u5024\u578b\u3060\u3051\u3067\u306a\u304f\u3001\u65e5\u4ed8\u578b\u3082\u53ef\u80fd\u3002\n- \u305d\u3057\u3066\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5f53\u8a72\u30d5\u30a3\u30fc\u30eb\u30c9\u3092 `@Version` \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u697d\u89b3\u7684\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n- `@Version` \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5b58\u5728\u3059\u308b\u3068\u3001\u305d\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u304d\u306b JPA \u304c\u81ea\u52d5\u3067\u5024\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n###\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u304c\u7570\u306a\u308b\u3068\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\n\n```diff:OptimisticLockEjb.java\npackage sample.javaee.jpa.ejb;\n\n+ import javax.ejb.Asynchronous;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.OptimisticLockEntity;\n\n@Stateless\npublic class OptimisticLockEjb {\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n    \n+   @Asynchronous\n-   public void update(String value) {\n+   public void update(String value, long time) {\n        OptimisticLockEntity entity = this.em.find(OptimisticLockEntity.class, 1L);\n        entity.setValue(value);\n+       \n+       try {\n+           Thread.sleep(time);\n+       } catch (InterruptedException ex) {}\n    }\n}\n```\n\n- EJB \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u975e\u540c\u671f\u51e6\u7406\u306b\u3057\u3066\u3001 `Thread.sleep()` \u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5b8c\u4e86\u3092\u9045\u3089\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n```diff:OptimisticLockServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.OptimisticLockEjb;\n\n@WebServlet(\"/optimistic-lock/*\")\npublic class OptimisticLockServlet extends HttpServlet {\n\n    @EJB\n    private OptimisticLockEjb ejb;\n   \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n-       this.ejb.update(req.getParameter(\"value\"));\n+       this.ejb.update(req.getParameter(\"value\") + \"_first\", 100);\n+       this.ejb.update(req.getParameter(\"value\") + \"_second\", 10);\n    }\n}\n```\n\n`http://localhost:8080/jpa/optimistic-lock?value=test` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\nException Description: The object [OptimisticLockEntity{id=1, version=2, value=test_first}] cannot be updated because it has changed or been deleted since it was last read.\nClass> sample.javaee.jpa.entity.OptimisticLockEntity Primary Key> 1\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/2f30705b-4716-f803-6ffa-d764b1d7b0db.jpeg)\n\n- \uff11\u56de\u76ee\u306e `update()` \u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u524d\u306b\uff12\u56de\u76ee\u306e `update()` \u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3002\n- \u3053\u306e\u305f\u3081\u3001\uff11\u56de\u76ee\u306e `update()` \u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u6642\u70b9\u3067\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u6301\u3064 `version` \u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e `version` \u306b\u9f5f\u9f6c\u304c\u751f\u307e\u308c\u3001 `OptimisticLockException` \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n\n##\u60b2\u89b3\u7684\u30ed\u30c3\u30af\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3**\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/5b106ee8-f8a5-c822-2f92-877d75c3bdb0.jpeg)\n\n```java:PessimisticLockEntity.java\npackage sample.javaee.jpa.entity;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"pessimistic_lock_entity\")\npublic class PessimisticLockEntity {\n    @Id\n    private Long id;\n    private String value;\n   \n    public void setValue(String value) {\n        this.value = value;\n    }\n   \n    @Override\n    public String toString() {\n        return \"PessimisticLockEntity{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9**\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/7d85db69-f541-a7c5-f53c-3a20400ea7e2.jpeg)\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a2ced598-a14b-456d-5e5c-092503a019bc.jpeg)\n\n```sql:\nCREATE TABLE `pessimistic_lock_entity` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `value` varchar(45) DEFAULT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:PessimisticLockEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Asynchronous;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.LockModeType;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.PessimisticLockEntity;\n\n@Stateless\npublic class PessimisticLockEjb {\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n   \n    @Asynchronous\n    public void update(String value) {\n        System.out.println(\"start update(\" + value + \")\");\n       \n        PessimisticLockEntity entity = this.em.find(PessimisticLockEntity.class, 1L, LockModeType.PESSIMISTIC_READ);\n       \n        System.out.println(\"found entity : \" + value);\n       \n        entity.setValue(value);\n       \n        System.out.println(\"end update(\" + value + \")\");\n    }\n}\n```\n\n```java:PessimisticLockServlet.java\npackage sample.javaee.jpa.servlet;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport sample.javaee.jpa.ejb.PessimisticLockEjb;\n\n@WebServlet(\"/pessimistic-lock\")\npublic class PessimisticLockServlet extends HttpServlet {\n\n    @EJB\n    private PessimisticLockEjb ejb;\n   \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n        this.ejb.update(req.getParameter(\"value\") + \"_first\");\n        this.ejb.update(req.getParameter(\"value\") + \"_second\");\n    }\n}\n```\n\n`http://localhost:8080/jpa/pessimistic-lock?value=update` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: start update(update_first)\n\u60c5\u5831: start update(update_second)\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?) FOR UPDATE\n   bind => [1]\n\u60c5\u5831: found entity : update_second\n\u60c5\u5831: end update(update_second)\n\u666e\u901a: UPDATE pessimistic_lock_entity SET VALUE = ? WHERE (ID = ?)\n   bind => [update_second, 1]\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?) FOR UPDATE\n   bind => [1]\n\u60c5\u5831: found entity : update_first\n\u60c5\u5831: end update(update_first)\n\u666e\u901a: UPDATE pessimistic_lock_entity SET VALUE = ? WHERE (ID = ?)\n   bind => [update_first, 1]\n```\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/4a156da8-9fd6-5a95-8250-90d76c37cc29.jpeg)\n\n\n- SELECT \u306b `FOR UPDATE` \u304c\u8ffd\u52a0\u3055\u308c\u3001\u60b2\u89b3\u7684\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\uff08`update_first` \u306f `update_second` \u306e\u7d42\u4e86\u3092\u5f85\u6a5f\u3057\u3066\u3044\u308b\uff09\u3002\n- `EntityManager.find()` \u306e\u3068\u304d\u306b\u3001\u5f15\u6570\u3067 `LockModeType` \u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30ed\u30c3\u30af\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    - `LockModeType.PESSIMISTIC_READ` \u306f\u5171\u6709\u30ed\u30c3\u30af\u3067\u3001 `LockModeType.PESSIMISTIC_WRITE` \u306f\u6392\u4ed6\u30ed\u30c3\u30af\u3002\n    - \u3067\u3082\u3001\u5b9f\u969b\u306b\u8a66\u3057\u305f\u3089\u3001\u3069\u3061\u3089\u3082 `FOR UPDATE` \uff08\u6392\u4ed6\u30ed\u30c3\u30af\uff09\u306b\u306a\u3063\u305f\u3002\u3002\u3002\u3000\u539f\u56e0\u306f\u4e0d\u660e\u3002\n- `LockModeType.PESSIMISTIC_FORCE_INCREMENT` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u6392\u4ed6\u30ed\u30c3\u30af\u3092\u3068\u308a\u3064\u3064 `@Version` \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3057\u3066\u304f\u308c\u308b\u3002\n    - \u3082\u3057\u3001\u540c\u3058\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u5bfe\u3057\u3066\u697d\u89b3\u7684\u30ed\u30c3\u30af\u3068\u60b2\u89b3\u7684\u30ed\u30c3\u30af\u306e\u4e21\u65b9\u3092\u4f7f\u3046\u3053\u3068\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u65b9\u6cd5\u3067\u60b2\u89b3\u7684\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\u306a\u3041\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n- \u697d\u89b3\u7684\u30ed\u30c3\u30af\u306e\u3068\u304d\u306f\u7701\u7565\u3057\u3066\u3044\u305f\u304c\u3001 `LockModeType.OPTIMISTIC` \u3092\u6307\u5b9a\u3059\u308c\u3070\u660e\u793a\u7684\u306b\u697d\u89b3\u7684\u30ed\u30c3\u30af\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n###\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\n```diff:PessimisticLockEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport javax.ejb.Asynchronous;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.LockModeType;\nimport javax.persistence.PersistenceContext;\nimport sample.javaee.jpa.entity.PessimisticLockEntity;\n\n@Stateless\npublic class PessimisticLockEjb {\n    @PersistenceContext(unitName=\"SampleUnit\")\n    private EntityManager em;\n   \n    @Asynchronous\n    public void update(String value) {\n        System.out.println(\"start update(\" + value + \")\");\n    \n-       PessimisticLockEntity entity = this.em.find(PessimisticLockEntity.class, 1L, LockModeType.PESSIMISTIC_READ);\n+       PessimisticLockEntity entity = this.em.find(PessimisticLockEntity.class, 1L);\n    \n        System.out.println(\"found entity : \" + value);\n    \n+       this.em.lock(entity, LockModeType.PESSIMISTIC_READ);\n+      \n+       System.out.println(\"lock entity : \" + value);\n    \n        entity.setValue(value);\n       \n        System.out.println(\"end update(\" + value + \")\");\n    }\n}\n```\n\n`http://localhost:8080/jpa/pessimistic-lock?value=UPDATE` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831: start update(UPDATE_second)\n\u60c5\u5831: start update(UPDATE_first)\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?)\n   bind => [1]\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?)\n   bind => [1]\n\u60c5\u5831: found entity : UPDATE_second\n\u60c5\u5831: found entity : UPDATE_first\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?) FOR UPDATE\n   bind => [1]\n\u666e\u901a: SELECT ID, VALUE FROM pessimistic_lock_entity WHERE (ID = ?) FOR UPDATE\n   bind => [1]\n\u60c5\u5831: lock entity : UPDATE_second\n\u60c5\u5831: end update(UPDATE_second)\n\u666e\u901a: UPDATE pessimistic_lock_entity SET VALUE = ? WHERE (ID = ?)\n   bind => [UPDATE_second, 1]\n\u60c5\u5831: lock entity : UPDATE_first\n\u60c5\u5831: end update(UPDATE_first)\n\u666e\u901a: UPDATE pessimistic_lock_entity SET VALUE = ? WHERE (ID = ?)\n   bind => [UPDATE_first, 1]\n```\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3002\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a00ee113-fab8-d499-11b3-ed1752d03911.jpeg)\n\n- `EntityManager#lock(Object, LockModeType)` \u3092\u4f7f\u3048\u3070\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n#\u767a\u884c\u3055\u308c\u308b SQL \u3092\u30ed\u30b0\u306b\u51fa\u529b\u3055\u305b\u308b\nJPA \u306e\u5b9f\u88c5\u304c\u5b9f\u969b\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767a\u884c\u3057\u3066\u3044\u308b SQL \u3092\u78ba\u8a8d\u3057\u305f\u304f\u306a\u308b\u3068\u304d\u304c\u3042\u308b\uff08\u4e3b\u306b\u30c7\u30d0\u30c3\u30b0\u6642\uff09\u3002\n\nGlassFish 4.1 \u306f\u3001 JPA \u306e\u5b9f\u88c5\u3068\u3057\u3066\u3000EclipseLink \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002 EclipseLink \u3067 SQL \u3092\u30ed\u30b0\u306b\u51fa\u529b\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001 `persistence.xml` \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u8a18\u8ff0\u3059\u308b\u3002\n\n```diff:persistence.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n\n  <persistence-unit name=\"SampleUnit\">\n  <jta-data-source>jdbc/Local_MySQL_test</jta-data-source>\n+   <properties>\n+   <property name=\"eclipselink.logging.level\" value=\"FINE\" />\n+   <property name=\"eclipselink.logging.parameters\" value=\"true\" />\n+   </properties>\n  </persistence-unit>\n</persistence>\n```\n\n- `<properties>` \u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u3001 `eclipselink.logging.level` \u3068 `eclipselink.logging.parameters` \u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3002\n- \u524d\u8005\u306f SQL \u306e\u30ed\u30b0\u51fa\u529b\u3067\u3001\u5f8c\u8005\u306f\u30d0\u30a4\u30f3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5177\u4f53\u5024\u306e\u51fa\u529b\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n`http://localhost:8080/jpa/hello?id=2` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\n\n```text:\n\u666e\u901a: SELECT ID, VALUE FROM sample_table WHERE (ID = ?)\n   bind => [2]\n```\n\n\n#\u53c2\u8003\n- [Amazon.co.jp\uff1a Beginning Java EE 6 GlassFish 3\u3067\u59cb\u3081\u308b\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30baJava (Programmer\u2019s SELECTION): Antonio Goncalves, \u65e5\u672c\u30aa\u30e9\u30af\u30eb\u682a\u5f0f\u4f1a\u793e, \u682a\u5f0f\u4f1a\u793e\u30d7\u30ed\u30b7\u30b9\u30c6\u30e0\u30a8\u30eb\u30aa\u30fc\u30b7\u30fc: \u672c][]\n- [Amazon.co.jp\uff1a Enterprise JavaBeans 3.1 \u7b2c6\u7248: Andrew Lee Rubinger, Bill Burke, \u4f50\u85e4 \u76f4\u751f, \u6728\u4e0b \u54f2\u4e5f: \u672c][]\n- [Java Persistence API - Wikipedia](http://ja.wikipedia.org/wiki/Java_Persistence_API)\n\n[Amazon.co.jp\uff1a Enterprise JavaBeans 3.1 \u7b2c6\u7248: Andrew Lee Rubinger, Bill Burke, \u4f50\u85e4 \u76f4\u751f, \u6728\u4e0b \u54f2\u4e5f: \u672c]: http://www.amazon.co.jp/Enterprise-JavaBeans-3-1-Andrew-Rubinger/dp/4873115086/ref=sr_1_1?s=books&ie=UTF8&qid=1423309914&sr=1-1&keywords=enterprise+javabeans+3.1\n[Amazon.co.jp\uff1a Beginning Java EE 6 GlassFish 3\u3067\u59cb\u3081\u308b\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30baJava (Programmer\u2019s SELECTION): Antonio Goncalves, \u65e5\u672c\u30aa\u30e9\u30af\u30eb\u682a\u5f0f\u4f1a\u793e, \u682a\u5f0f\u4f1a\u793e\u30d7\u30ed\u30b7\u30b9\u30c6\u30e0\u30a8\u30eb\u30aa\u30fc\u30b7\u30fc: \u672c]: http://www.amazon.co.jp/Beginning-GlassFish-3%E3%81%A7%E5%A7%8B%E3%82%81%E3%82%8B%E3%82%A8%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%97%E3%83%A9%E3%82%A4%E3%82%BAJava-Programmer%E2%80%99s-SELECTION/dp/4798124605\n", "tags": ["jpa", "JavaEE7", "Java1.8", "glassfish"]}