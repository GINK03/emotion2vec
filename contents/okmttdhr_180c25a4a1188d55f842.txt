{"tags": ["reactjs", "JavaScript", "flux", "redux"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6982\u8981\n\nReact\u3067\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u3057\u305f\u304f\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30c6\u30b9\u30c8\u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u69d8\u306a\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3067\u304d\u305d\u3046\u3060\u304c\u3001Flux\u3092\u3064\u304b\u3063\u305f\u30a2\u30d7\u30ea\u3067\u3001Action\u3084Dispatcher\u306b\u30ed\u30b8\u30c3\u30af\u304c\u3042\u308b\u6642\u306b\u306f\u3001\u305d\u308c\u3067\u306f\u5341\u5206\u3067\u7121\u3044\u3068\u8003\u3048\u305f\u3002\n\nReact.js + Jest - Qiita\n\n\u4eca\u56de\u306fReact+Redux\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001Action\u3001Reducer\u3092\u500b\u5225\u306b\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u91dd\u3092\u8003\u3048\u305f\u3002\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3001karma+jasmine\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002\n\nAction\n\n\u30c6\u30b9\u30c8\u3059\u308baction\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u3082\u306e\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002\u5358\u7d14\u306bAPI\u3092\u53e9\u3044\u3066res\u3092\u5f97\u308b\u3068\u3044\u3046\u3082\u306e\u3002\n\naction.js\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\n\n// \u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u306fsuperagent\nimport request from 'superagent';\n\nfunction request() {\n  return {\n    type: REQUEST,\n  };\n}\n\nfunction requestSuccess(items) {\n  return {\n    type: REQUEST_SUCCESS,\n    items: items,\n  };\n}\n\n// \u3053\u306e\u95a2\u6570\u3092\u30d3\u30e5\u30fc\u3067\u547c\u3073\u51fa\u3059\u60f3\u5b9a\nexport function fetchSomeResource() {\n  // redux-thunk\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\n  return (dispatch, getState) => {\n    dispatch(request());\n    request\n      .get('http://apiserver.com/someuri')\n      .end(function(err, res) {\n        return dispatch(requestSuccess(res.body.items));\n      });\n  };\n}\n\n\n\u3053\u306eaction\u306e\u30c6\u30b9\u30c8\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u305f\u3002reducer\u3092\u30e2\u30c3\u30af\u3057\u3066\u3001action\u306e\u52d5\u4f5c\u306e\u307f\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\naction.spec.js\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\nimport { createReducer } from 'utils';\nimport { fetchSomeResource } from './action.js';\n\ndescribe('Action\u306e\u30c6\u30b9\u30c8', function() {\n  let actionType = '';\n  const middleware = [thunk];\n\n  const initialState = {\n    items: [],\n    isFetching: false,\n  };\n\n  const mockStore = {\n    SomeState: initialState,\n  };\n\n  // action\u306e\u30c6\u30b9\u30c8\u306e\u307f\u5b9f\u88c5\u3057\u305f\u304f\u3001action\u306e\u5f79\u5272\u306f\u3001dispatch\u3059\u308b\u307e\u3067\u306a\u306e\u3067\u3001reducer\u306f\u30e2\u30c3\u30af\u3059\u308b\n  // createReducer\u306f\u4ee5\u4e0b\u306e\u69d8\u306autil\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u304a\u304f\n  // export function createReducer (initialState, reducerMap) {\n  //   return (state = initialState, action) => {\n  //     const reducer = reducerMap[action.type];\n  //     return reducer ? reducer(state, action.payload) : state;\n  //   };\n  // }\n  const SomeState = createReducer(initialState, {\n    [REQUEST]: (state) => {\n      actionType = 'REQUEST';\n      return state;\n    },\n    [REQUEST_SUCCESS]: (state) => {\n      actionType = 'REQUEST_SUCCESS';\n      return state;\n    },\n  });\n\n  const rootReducer = combineReducers({\n    SomeState,\n  });\n\n  const createStoreWithMiddleware = applyMiddleware(...middleware)(createStore);\n\n  // action\u306e\u30c6\u30b9\u30c8\u306a\u306e\u3067\u3001\u30d3\u30e5\u30fc\u3092\u4f5c\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001store\u307e\u3067\u3067\u3088\u3044\n  const store = createStoreWithMiddleware(rootReducer, mockStore);\n\n  it('REQUEST, REQUEST_SUCCESS \u304c disapatch \u3055\u308c\u308b\u3053\u3068', (done) => {\n    store.dispatch(fetchSomeResource());\n\n    // \u6b63\u5e38\u306baction\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u3001\u30e2\u30c3\u30af\u3057\u305freducer\u306e\u4e2d\u3067\u3001actionType\u304c\u66f4\u65b0\u3055\u308c\u308b\n    expect(actionType).toBe('REQUEST');\n\n    setTimeout(function () {\n\n      // \u6b63\u5e38\u306baction\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u3001\u30e2\u30c3\u30af\u3057\u305freducer\u306e\u4e2d\u3067\u3001actionType\u304c\u66f4\u65b0\u3055\u308c\u308b\n      expect(actionType).toBe('REQUEST_SUCCESS');\n\n      done();\n    }, 2000);\n  });\n});\n\n\n\nReducer\n\n\u4ee5\u4e0b\u306e\u69d8\u306a\u30b7\u30f3\u30d7\u30eb\u306areducer\u3092\u60f3\u5b9a\u3002\n\nreducer.js\n\n// createReducer\u306f\u4ee5\u4e0b\u306e\u69d8\u306autil\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u304a\u304f\n// export function createReducer (initialState, reducerMap) {\n//   return (state = initialState, action) => {\n//     const reducer = reducerMap[action.type];\n//     return reducer ? reducer(state, action.payload) : state;\n//   };\n// }\nimport { createReducer } from 'utils';\n\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\n\nconst initialState = {\n  items: [],\n  isFetching: false,\n};\n\nexport default createReducer(initialState, {\n  [REQUEST]: (state) => {\n    return {\n      ...state,\n      isFetching: true,\n    };\n  },\n  [REQUEST_SUCCESS]: (state, action) => {\n    return {\n      ...state,\n      items: action.items,\n      isFetching: false,\n    };\n  },\n});\n\n\n\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002action\u306e\u30c6\u30b9\u30c8\u3068\u306f\u53cd\u5bfe\u306b\u3001action\u304b\u3089dispatch\u3059\u308b\u5fc5\u8981\u304c\u7121\u304f\u3001reducer\u306e\u30ed\u30b8\u30c3\u30af\u306e\u307f\u306b\u96c6\u4e2d\u3067\u304d\u308b\u3002\n\nreducer.spec.js\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\nimport SomeReducer from './reducer.js';\n\ndescribe('Reducer\u306e\u30c6\u30b9\u30c8', function() {\n  const middleware = [thunk];\n\n  const initialState = {\n    items: [],\n    isFetching: false,\n  };\n\n  const mockStore = {\n    SomeState: initialState,\n  };\n\n  const rootReducer = combineReducers({\n    SomeState: SomeReducer,\n  });\n\n  const createStoreWithMiddleware = applyMiddleware(...middleware)(createStore);\n  const store = createStoreWithMiddleware(rootReducer, mockStore);\n\n  it('REQUEST', (done) => {\n    // reducer\u306e\u30c6\u30b9\u30c8\u306a\u306e\u3067\u3001action\u304b\u3089dispatch\u3059\u308b\u5fc5\u8981\u304c\u7121\u3044\u3002\n    store.dispatch({ type: REQUEST });\n\n    setTimeout(function () {\n      // state\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306b\u306fgetState()\u3092\u4f7f\u3046\n      const { SomeState } = store.getState();\n      expect(SomeState.isFetching).toBe(true);\n      done();\n    }, 1000);\n  });\n\n  it('REQUEST_SUCCESS', (done) => {\n    const items = [\n      { 'id': 1,\n        'name': 'aaa',\n      },\n      { 'id': 2,\n        'name': 'bbb',\n      },\n    ];\n\n    store.dispatch({\n      type: REQUEST_SUCCESS,\n      items: items,\n    });\n\n    setTimeout(function () {\n      const { SomeState } = store.getState();\n      expect(SomeState.isFetching).toBe(false);\n      expect(SomeState.items).toBe(items);\n      done();\n    }, 1000);\n  });\n});\n\n\n\n\u8ffd\u8a18\n\n\u203b\u65b9\u91dd\u3092\u5909\u3048\u307e\u3057\u305f\n\nReact+Redux\u3067async\u306aaction\u3092\u30c6\u30b9\u30c8\u3059\u308b - Qiita\nReact+Redux\u3067reducer\u306e\u30c6\u30b9\u30c8 - Qiita\n\n\n\u53c2\u8003\n\nTesting React and Flux applications with Karma and Webpack\n\n\n##**\u6982\u8981**\n\nReact\u3067\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u3057\u305f\u304f\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30c6\u30b9\u30c8\u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u69d8\u306a\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3067\u304d\u305d\u3046\u3060\u304c\u3001Flux\u3092\u3064\u304b\u3063\u305f\u30a2\u30d7\u30ea\u3067\u3001Action\u3084Dispatcher\u306b\u30ed\u30b8\u30c3\u30af\u304c\u3042\u308b\u6642\u306b\u306f\u3001\u305d\u308c\u3067\u306f\u5341\u5206\u3067\u7121\u3044\u3068\u8003\u3048\u305f\u3002\n\n* <a href=\"http://qiita.com/koba04/items/2f97904b3ca247fc1917\" target=\"_blank\">React.js + Jest - Qiita</a>\n\n\u4eca\u56de\u306fReact+Redux\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001Action\u3001Reducer\u3092\u500b\u5225\u306b\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u91dd\u3092\u8003\u3048\u305f\u3002\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3001karma+jasmine\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002\n\n##**Action**\n\n\u30c6\u30b9\u30c8\u3059\u308baction\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u3082\u306e\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002\u5358\u7d14\u306bAPI\u3092\u53e9\u3044\u3066res\u3092\u5f97\u308b\u3068\u3044\u3046\u3082\u306e\u3002\n\n```action.js\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\n\n// \u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u306fsuperagent\nimport request from 'superagent';\n\nfunction request() {\n  return {\n    type: REQUEST,\n  };\n}\n\nfunction requestSuccess(items) {\n  return {\n    type: REQUEST_SUCCESS,\n    items: items,\n  };\n}\n\n// \u3053\u306e\u95a2\u6570\u3092\u30d3\u30e5\u30fc\u3067\u547c\u3073\u51fa\u3059\u60f3\u5b9a\nexport function fetchSomeResource() {\n  // redux-thunk\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\n  return (dispatch, getState) => {\n    dispatch(request());\n    request\n      .get('http://apiserver.com/someuri')\n      .end(function(err, res) {\n        return dispatch(requestSuccess(res.body.items));\n      });\n  };\n}\n```\n\n\u3053\u306eaction\u306e\u30c6\u30b9\u30c8\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u305f\u3002reducer\u3092\u30e2\u30c3\u30af\u3057\u3066\u3001action\u306e\u52d5\u4f5c\u306e\u307f\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n```action.spec.js\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\nimport { createReducer } from 'utils';\nimport { fetchSomeResource } from './action.js';\n\ndescribe('Action\u306e\u30c6\u30b9\u30c8', function() {\n  let actionType = '';\n  const middleware = [thunk];\n\n  const initialState = {\n    items: [],\n    isFetching: false,\n  };\n\n  const mockStore = {\n    SomeState: initialState,\n  };\n\n  // action\u306e\u30c6\u30b9\u30c8\u306e\u307f\u5b9f\u88c5\u3057\u305f\u304f\u3001action\u306e\u5f79\u5272\u306f\u3001dispatch\u3059\u308b\u307e\u3067\u306a\u306e\u3067\u3001reducer\u306f\u30e2\u30c3\u30af\u3059\u308b\n  // createReducer\u306f\u4ee5\u4e0b\u306e\u69d8\u306autil\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u304a\u304f\n  // export function createReducer (initialState, reducerMap) {\n  //   return (state = initialState, action) => {\n  //     const reducer = reducerMap[action.type];\n  //     return reducer ? reducer(state, action.payload) : state;\n  //   };\n  // }\n  const SomeState = createReducer(initialState, {\n    [REQUEST]: (state) => {\n      actionType = 'REQUEST';\n      return state;\n    },\n    [REQUEST_SUCCESS]: (state) => {\n      actionType = 'REQUEST_SUCCESS';\n      return state;\n    },\n  });\n\n  const rootReducer = combineReducers({\n    SomeState,\n  });\n\n  const createStoreWithMiddleware = applyMiddleware(...middleware)(createStore);\n\n  // action\u306e\u30c6\u30b9\u30c8\u306a\u306e\u3067\u3001\u30d3\u30e5\u30fc\u3092\u4f5c\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001store\u307e\u3067\u3067\u3088\u3044\n  const store = createStoreWithMiddleware(rootReducer, mockStore);\n\n  it('REQUEST, REQUEST_SUCCESS \u304c disapatch \u3055\u308c\u308b\u3053\u3068', (done) => {\n    store.dispatch(fetchSomeResource());\n\n    // \u6b63\u5e38\u306baction\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u3001\u30e2\u30c3\u30af\u3057\u305freducer\u306e\u4e2d\u3067\u3001actionType\u304c\u66f4\u65b0\u3055\u308c\u308b\n    expect(actionType).toBe('REQUEST');\n\n    setTimeout(function () {\n\n      // \u6b63\u5e38\u306baction\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u3001\u30e2\u30c3\u30af\u3057\u305freducer\u306e\u4e2d\u3067\u3001actionType\u304c\u66f4\u65b0\u3055\u308c\u308b\n      expect(actionType).toBe('REQUEST_SUCCESS');\n\n      done();\n    }, 2000);\n  });\n});\n```\n\n\n##**Reducer**\n\n\u4ee5\u4e0b\u306e\u69d8\u306a\u30b7\u30f3\u30d7\u30eb\u306areducer\u3092\u60f3\u5b9a\u3002\n\n```js:reducer.js\n\n// createReducer\u306f\u4ee5\u4e0b\u306e\u69d8\u306autil\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u304a\u304f\n// export function createReducer (initialState, reducerMap) {\n//   return (state = initialState, action) => {\n//     const reducer = reducerMap[action.type];\n//     return reducer ? reducer(state, action.payload) : state;\n//   };\n// }\nimport { createReducer } from 'utils';\n\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\n\nconst initialState = {\n  items: [],\n  isFetching: false,\n};\n\nexport default createReducer(initialState, {\n  [REQUEST]: (state) => {\n    return {\n      ...state,\n      isFetching: true,\n    };\n  },\n  [REQUEST_SUCCESS]: (state, action) => {\n    return {\n      ...state,\n      items: action.items,\n      isFetching: false,\n    };\n  },\n});\n```\n\n\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002action\u306e\u30c6\u30b9\u30c8\u3068\u306f\u53cd\u5bfe\u306b\u3001action\u304b\u3089dispatch\u3059\u308b\u5fc5\u8981\u304c\u7121\u304f\u3001reducer\u306e\u30ed\u30b8\u30c3\u30af\u306e\u307f\u306b\u96c6\u4e2d\u3067\u304d\u308b\u3002\n\n```js:reducer.spec.js\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\nimport SomeReducer from './reducer.js';\n\ndescribe('Reducer\u306e\u30c6\u30b9\u30c8', function() {\n  const middleware = [thunk];\n\n  const initialState = {\n    items: [],\n    isFetching: false,\n  };\n\n  const mockStore = {\n    SomeState: initialState,\n  };\n\n  const rootReducer = combineReducers({\n    SomeState: SomeReducer,\n  });\n\n  const createStoreWithMiddleware = applyMiddleware(...middleware)(createStore);\n  const store = createStoreWithMiddleware(rootReducer, mockStore);\n\n  it('REQUEST', (done) => {\n    // reducer\u306e\u30c6\u30b9\u30c8\u306a\u306e\u3067\u3001action\u304b\u3089dispatch\u3059\u308b\u5fc5\u8981\u304c\u7121\u3044\u3002\n    store.dispatch({ type: REQUEST });\n\n    setTimeout(function () {\n      // state\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306b\u306fgetState()\u3092\u4f7f\u3046\n      const { SomeState } = store.getState();\n      expect(SomeState.isFetching).toBe(true);\n      done();\n    }, 1000);\n  });\n\n  it('REQUEST_SUCCESS', (done) => {\n    const items = [\n      { 'id': 1,\n        'name': 'aaa',\n      },\n      { 'id': 2,\n        'name': 'bbb',\n      },\n    ];\n\n    store.dispatch({\n      type: REQUEST_SUCCESS,\n      items: items,\n    });\n\n    setTimeout(function () {\n      const { SomeState } = store.getState();\n      expect(SomeState.isFetching).toBe(false);\n      expect(SomeState.items).toBe(items);\n      done();\n    }, 1000);\n  });\n});\n```\n\n##**\u8ffd\u8a18**\n\n\u203b\u65b9\u91dd\u3092\u5909\u3048\u307e\u3057\u305f\n\n* <a href=\"http://qiita.com/okmttdhr/items/decedca042e161980220\" target=\"_blank\">React+Redux\u3067async\u306aaction\u3092\u30c6\u30b9\u30c8\u3059\u308b - Qiita</a>\n* <a href=\"http://qiita.com/okmttdhr/items/d5fcea3a54b4ad15e145\" target=\"_blank\">React+Redux\u3067reducer\u306e\u30c6\u30b9\u30c8 - Qiita</a>\n\n##**\u53c2\u8003**\n\n<a href=\"http://kentor.me/posts/testing-react-and-flux-applications-with-karma-and-webpack/\" target=\"_blank\">Testing React and Flux applications with Karma and Webpack</a>\n"}