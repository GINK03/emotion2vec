{"context": " More than 1 year has passed since last update.GLFW3\u3092\u4f7f\u3063\u3066OpenGL\u306e\u52c9\u5f37\u3092\u59cb\u3081\u305f\u306e\u3067\u3001\u305d\u306e\u5099\u5fd8\u9332\u7684\u306a\u3082\u306e\u3067\u3059\u3002\n\u3061\u306a\u307f\u306bC++\u3082\u52c9\u5f37\u4e2d\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306b\u5bfe\u3059\u308b\u30c4\u30c3\u30b3\u30df\u306f\u6b53\u8fce\u3057\u3066\u3044\u307e\u3059\u3002\nGLFW3\u306e\u95a2\u6570\u306b\u3064\u3044\u3066\u82f1\u8a9e\u3067\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u3089\u306f glfw3.h File Reference \u3053\u3061\u3089\u304b\u3089\u306e\u5f15\u7528\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u65e5\u672c\u8a9e\u306e\u30b3\u30e1\u30f3\u30c8\u306f\u79c1\u304c\u52dd\u624b\u306b\u89e3\u91c8\u3057\u3066\u4ed8\u3051\u3066\u3044\u308b\u306e\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u30c4\u30c3\u30b3\u30df\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n$ g++ --version\ng++ (Debian 4.7.2-5) 4.7.2\n...\n\n\n\nHello, OpenGL\nGLFW3\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u4f5c\u6210\u3001\u8868\u793a\u3057\u307e\u3059\u3002\nGLU\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u53d6\u308a\u8fbc\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\u306b\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\u3088\u304f\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u65b9\u6cd5\u3092\u5fd8\u308c\u308b\u306e\u3067\u3001\u6697\u8a18\u3092\u76ee\u7684\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\nGLU\u3082\u542b\u3081\u305fGLFW3\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3002\n\u8907\u6570\u306e\u30bd\u30fc\u30b9\u3067\u306f\u3001\u3053\u306e\u30de\u30af\u30ed\u3092 Main \u306b\u76f8\u5f53\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u3067\u5b9a\u7fa9\u3002\n\u305d\u306e\u4ed6\u306e\u30bd\u30fc\u30b9\u3067\u306f\u30de\u30af\u30ed\u3092\u66f8\u304f\u5fc5\u8981\u306f\u306a\u3057\u3002\n\nmemo\n#define GLFW_INCLUDE_GLU\n#include <GLFW/glfw3.h>\n\n\n\n\n01-hello.cpp\n\n#define GLFW_INCLUDE_GLU\n#include <GLFW/glfw3.h>\n#include <iostream>\n#include <cstdlib>\n#include <string>\n\nstatic GLFWwindow*  aWindow;\nstatic int          aWidth = 640;\nstatic int          aHeight = 480;\nstatic std::string  aTitle = \"Hello, OpenGL\";\n\nint main()\n{\n    // Initializes the GLFW library.\n    if(! glfwInit() )\n    {\n        std::cerr << \"glfwInit failed.\" << std::endl;\n        exit( EXIT_FAILURE );\n    }\n    // Creates a window and its associated context.\n    aWindow = glfwCreateWindow( aWidth, aHeight, aTitle.c_str(), nullptr, nullptr );\n    if(! aWindow )\n    {\n        std::cerr << \"glfwCreateWindow failed.\" << std::endl;\n        glfwTerminate();\n        exit( EXIT_FAILURE );\n    }\n    // Makes the context of the specified window current for the calling thread.\n    glfwMakeContextCurrent( aWindow );\n    // Returns a string describing the compile-time configuration.\n    std::cout << glfwGetVersionString() << std::endl;\n    // glClear() \u3067\u4f7f\u7528\u3059\u308b\u8272\uff08RGBA\uff09\n    glClearColor( 1, 1, 1, 1 );\n\n    // Checks the close flag of the specified window.\n    while(! glfwWindowShouldClose( aWindow ))\n    {\n        // \u753b\u9762\u3092\u30af\u30ea\u30a2\u3002\n        glClear( GL_COLOR_BUFFER_BIT );\n\n        // Swaps the front and back buffers of the specified window.\n        glfwSwapBuffers( aWindow );\n        // Processes all pending events.\n        // \u30de\u30a6\u30b9\u3084\u30ad\u30fc\u5165\u529b\u306e\u30a4\u30d9\u30f3\u30c8\u306f\u3053\u306e\u95a2\u6570\u3067\u76e3\u8996\u3059\u308b\u3002\n        glfwPollEvents();\n    }\n    // Terminates the GLFW library.\n    glfwTerminate();\n\n    return EXIT_SUCCESS;\n}\n\n\n\n\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ g++ -std=c++11 -Wall 01-hello.cpp -lglfw -lGLU\n$ ./a.out \n3.1.0 X11 GLX glXGetProcAddress clock_gettime /dev/js shared\n\n\n\nGLFW3\u3092\u4f7f\u3063\u3066OpenGL\u306e\u52c9\u5f37\u3092\u59cb\u3081\u305f\u306e\u3067\u3001\u305d\u306e\u5099\u5fd8\u9332\u7684\u306a\u3082\u306e\u3067\u3059\u3002\n\u3061\u306a\u307f\u306bC++\u3082\u52c9\u5f37\u4e2d\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306b\u5bfe\u3059\u308b\u30c4\u30c3\u30b3\u30df\u306f\u6b53\u8fce\u3057\u3066\u3044\u307e\u3059\u3002\n\nGLFW3\u306e\u95a2\u6570\u306b\u3064\u3044\u3066\u82f1\u8a9e\u3067\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u3089\u306f [glfw3.h File Reference](http://www.glfw.org/docs/latest/glfw3_8h.html) \u3053\u3061\u3089\u304b\u3089\u306e\u5f15\u7528\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u65e5\u672c\u8a9e\u306e\u30b3\u30e1\u30f3\u30c8\u306f\u79c1\u304c\u52dd\u624b\u306b\u89e3\u91c8\u3057\u3066\u4ed8\u3051\u3066\u3044\u308b\u306e\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u30c4\u30c3\u30b3\u30df\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n```:\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n$ g++ --version\ng++ (Debian 4.7.2-5) 4.7.2\n...\n```\n\n#Hello, OpenGL\n\nGLFW3\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u4f5c\u6210\u3001\u8868\u793a\u3057\u307e\u3059\u3002\nGLU\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u53d6\u308a\u8fbc\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\u306b\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\u3088\u304f\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u65b9\u6cd5\u3092\u5fd8\u308c\u308b\u306e\u3067\u3001\u6697\u8a18\u3092\u76ee\u7684\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\nGLU\u3082\u542b\u3081\u305fGLFW3\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3002\n\u8907\u6570\u306e\u30bd\u30fc\u30b9\u3067\u306f\u3001\u3053\u306e\u30de\u30af\u30ed\u3092 Main \u306b\u76f8\u5f53\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u3067\u5b9a\u7fa9\u3002\n\u305d\u306e\u4ed6\u306e\u30bd\u30fc\u30b9\u3067\u306f\u30de\u30af\u30ed\u3092\u66f8\u304f\u5fc5\u8981\u306f\u306a\u3057\u3002\n\n```cpp:memo\n#define GLFW_INCLUDE_GLU\n#include <GLFW/glfw3.h>\n\n```\n\n```cpp:01-hello.cpp\n\n#define GLFW_INCLUDE_GLU\n#include <GLFW/glfw3.h>\n#include <iostream>\n#include <cstdlib>\n#include <string>\n\nstatic GLFWwindow* \taWindow;\nstatic int \t\t\taWidth = 640;\nstatic int \t\t\taHeight = 480;\nstatic std::string\taTitle = \"Hello, OpenGL\";\n\nint main()\n{\n\t// Initializes the GLFW library.\n\tif(! glfwInit() )\n\t{\n\t\tstd::cerr << \"glfwInit failed.\" << std::endl;\n\t\texit( EXIT_FAILURE );\n\t}\n\t// Creates a window and its associated context.\n\taWindow = glfwCreateWindow( aWidth, aHeight, aTitle.c_str(), nullptr, nullptr );\n\tif(! aWindow )\n\t{\n\t\tstd::cerr << \"glfwCreateWindow failed.\" << std::endl;\n\t\tglfwTerminate();\n\t\texit( EXIT_FAILURE );\n\t}\n\t// Makes the context of the specified window current for the calling thread.\n\tglfwMakeContextCurrent( aWindow );\n\t// Returns a string describing the compile-time configuration.\n\tstd::cout << glfwGetVersionString() << std::endl;\n\t// glClear() \u3067\u4f7f\u7528\u3059\u308b\u8272\uff08RGBA\uff09\n\tglClearColor( 1, 1, 1, 1 );\n\t\n\t// Checks the close flag of the specified window.\n\twhile(! glfwWindowShouldClose( aWindow ))\n\t{\n\t\t// \u753b\u9762\u3092\u30af\u30ea\u30a2\u3002\n\t\tglClear( GL_COLOR_BUFFER_BIT );\n\t\t\n\t\t// Swaps the front and back buffers of the specified window.\n\t\tglfwSwapBuffers( aWindow );\n\t\t// Processes all pending events.\n\t\t// \u30de\u30a6\u30b9\u3084\u30ad\u30fc\u5165\u529b\u306e\u30a4\u30d9\u30f3\u30c8\u306f\u3053\u306e\u95a2\u6570\u3067\u76e3\u8996\u3059\u308b\u3002\n\t\tglfwPollEvents();\n\t}\n\t// Terminates the GLFW library.\n\tglfwTerminate();\n\t\n\treturn EXIT_SUCCESS;\n}\n\n```\n\n```:\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ g++ -std=c++11 -Wall 01-hello.cpp -lglfw -lGLU\n$ ./a.out \n3.1.0 X11 GLX glXGetProcAddress clock_gettime /dev/js shared\n```\n![01-hello.png](https://qiita-image-store.s3.amazonaws.com/0/41479/a1dd0d5f-86ce-413f-9eb2-2ae00de2459d.png)\n", "tags": ["OpenGL", "C++", "GLFW"]}