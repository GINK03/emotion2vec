{"context": " More than 1 year has passed since last update.\u307f\u306a\u3055\u30fc\u3093\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u77f3\u5ddd\u67d0\u304f\u3093\u306f\u3044\u3064\u3082\u30c7\u30b9\u30de\u306b\u306f\u307e\u3063\u3066\u3044\u3066\u3044\u3064JIT\u306e\u52c9\u5f37\u3057\u3066\u3044\u308b\u3093\u3060\u308d\u3068\u601d\u3063\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\u305d\u306e\u79d8\u5bc6\u306f\u3001mruby-meta-circular\u3002C\u3082\u6a5f\u68b0\u8a9e\u3082\u4f7f\u3044\u307e\u305b\u3093\u3002\u3060\u304b\u3089\u3001\u5fd9\u3057\u3044\u67d0\u541b\u306b\u3082\u3067\u304d\u308b\u306e\u3067\u3059\u3002\u30b5\u30f3\u30d7\u30ebCoDe\u3092\u7121\u6599\u3067\u9001\u308a\u307e\u3059\u3002\u7d9a\u304d\u306fWeb\u3067\n\u3068\u3044\u3046\u308f\u3051\u3067(\u3069\u3046\u3044\u3046\u308f\u3051\u3060(\u5b9a\u756a\u306e\u7a81\u3063\u8fbc\u307f))\u3001mruby\u3068mruby\u306eVM\u3067\u3042\u308bRITE VM\u306e\u547d\u4ee4\u3060\u3051\u3067Tracing JIT\u306e\u4ed5\u7d44\u307f\u3092\u89e3\u8aac\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\nmruby\u306eJIT\u3068\u57fa\u672c\u7684\u306a\u69cb\u9020\u306f\u5927\u4f53\u540c\u3058\u3067\u3059\u3002\n\n\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\n\u521d\u3081\u306b\u30d9\u30fc\u30b9\u306b\u306a\u308bVM\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u304a\u305d\u3089\u304f\u4e16\u306e\u4e2d\u30672\u756a\u76ee\u306b\u305f\u304f\u3055\u3093\u4f5c\u3089\u308c\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u7d1a\u6570\u305d\u308c\u3060\u3051\u304c\u52d5\u304f\u3088\u3046\u6ce8\u610f\u6df1\u304f\u547d\u4ee4\u30bb\u30c3\u30c8\u304c\u9078\u3070\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304b\u3089\u5148\u3001\u3053\u306eVM\u3092FibVM\u3068\u547c\u3073\u307e\u3059\u3002\u307e\u305f\u3001mruby\u306eVM\u306fRITE VM\u3067\u3059\u3002\n\u3053\u306e2\u3064\u3092\u533a\u5225\u3059\u308b\u3053\u3068\u304c\u975e\u5e38\u306b\u91cd\u8981\u3067\u3059\u3002\n\njit-1.rb\nclass FibVM\n  include RiteOpcodeUtil\n  OPTABLE_CODE = Irep::OPTABLE_CODE\n  OPTABLE_SYM = Irep::OPTABLE_SYM\n\n  def initialize\n    # For Interpriter\n    @stack = []                 # \u30b9\u30bf\u30c3\u30af(@sp\u3088\u308a\u4e0a\u4f4d\u3092\u30ec\u30b8\u30b9\u30bf\u3068\u3057\u3066\u6271\u3046)\n    @callinfo = []              # \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3067\u547c\u3073\u51fa\u3057\u5143\u306e\u60c5\u5831\u3092\u683c\u7d0d\n    @pc = 0                     # \u5b9f\u884c\u3059\u308b\u547d\u4ee4\u306e\u4f4d\u7f6e\n    @sp = 0                     # \u30b9\u30bf\u30c3\u30af\u30dd\u30a4\u30f3\u30bf\n    @cp = 0                     # callinfo\u306e\u30dd\u30a4\u30f3\u30bf\n    @irep = nil                 # \u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u547d\u4ee4\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    @irepid =nil                # \u547d\u4ee4\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eid(JIT\u7528)\n  end\n\n  def eval(irep)\n    @irep = irep\n    @irepid = @irep.id\n    while true\n      #\u3000\u547d\u4ee4\u30b3\u30fc\u30c9\u306e\u53d6\u308a\u51fa\u3057\n      cop = @irep.iseq[@pc]\n\n      case OPTABLE_SYM[get_opcode(cop)]\n        # \u4f55\u3082\u3057\u306a\u3044\n      when :NOP\n\n        # MOVE Ra, Rb\u3067\u30ec\u30b8\u30b9\u30bfRa\u306b\u30ec\u30b8\u30b9\u30bfRb\u306e\u5185\u5bb9\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :MOVE\n        @stack[@sp + getarg_a(cop)] = @stack[@sp + getarg_b(cop)]\n\n        # LOADL Ra, pb \u3067\u30ec\u30b8\u30b9\u30bfRa\u306b\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb(pool)\u306epb\u756a\u76ee\u306e\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :LOADL\n        @stack[@sp + getarg_a(cop)] = @irep.pool[getarg_bx(cop)]\n\n        # LOADI Ra, n \u3067\u30ec\u30b8\u30b9\u30bfRa\u306bFixnum\u306e\u5024 n\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :LOADI\n        @stack[@sp + getarg_a(cop)] = getarg_sbx(cop)\n\n        # LOADSELF Ra \u3067\u30ec\u30b8\u30b9\u30bfRa\u306b\u73fe\u5728\u306eself\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :LOADSELF\n        @stack[@sp + getarg_a(cop)] = @stack[@sp]\n\n        # ADD Ra, Rb \u3067\u30ec\u30b8\u30b9\u30bfRa\u306bRa+Rb\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :ADD\n        @stack[@sp + getarg_a(cop)] += @stack[@sp + getarg_a(cop) + 1]\n\n        # SUB Ra, n \u3067\u30ec\u30b8\u30b9\u30bfRa\u306bRa-n\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :SUBI\n        @stack[@sp + getarg_a(cop)] -= getarg_c(cop)\n\n        # EQ Ra \u3067Ra\u3068R(a+1)\u3092\u6bd4\u3079\u3066\u540c\u3058\u306a\u3089true, \u9055\u3046\u306a\u3089false\u3092Ra\u306b\u30bb\u30c3\u30c8\u3059\u308b\n      when :EQ\n        val = (@stack[@sp + getarg_a(cop)] == @stack[@sp + getarg_a(cop) + 1])\n        @stack[@sp + getarg_a(cop)] = val\n\n        # JMP n\u3067pc\u3092n\u3060\u3051\u5897\u3084\u3059\u3002\u305f\u3060\u3057\u3001n\u306f\u7b26\u53f7\u4ed8\u304d\n      when :JMP\n        @pc = @pc + getarg_sbx(cop)\n        next\n\n        # JMPNOT Ra, n\u3067\u3082\u3057Ra\u304cnil\u304bfalse\u306a\u3089pc\u3092n\u3060\u3051\u5897\u3084\u3059\u3002\u305f\u3060\u3057\u3001n\u306f\u7b26\u53f7\u4ed8\u304d\n      when :JMPNOT\n        if !@stack[@sp + getarg_a(cop)] then\n          @pc = @pc + getarg_sbx(cop)\n          next\n        end\n\n        # \u30e1\u30bd\u30c3\u30c9\u306e\u5148\u982d\u3067\u5f15\u6570\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u547d\u4ee4\u3002\u9762\u5012\u306a\u306e\u3067\u8a73\u7d30\u306f\u7701\u7565\n      when :ENTER\n\n        # SEND Ra, mid, anum\u3067Ra\u3092\u30ec\u30b7\u30fc\u30d0\u306b\u3057\u3066\u30b7\u30f3\u30dc\u30ebmid\u306e\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\n        # \u547c\u3073\u51fa\u3059\u3002\u305f\u3060\u3057\u3001\u5f15\u6570\u306fanum\u500b\u3042\u308a\u3001R(a+1), R(a+2)... R(a+anum)\u304c\u5f15\u6570\n      when :SEND\n        a = getarg_a(cop)\n        mid = @irep.syms[getarg_b(cop)]\n        n = getarg_c(cop)\n        newirep = Irep::get_irep(@stack[@sp + a], mid)\n        if newirep then\n          @callinfo[@cp] = @sp\n          @cp += 1\n          @callinfo[@cp] = @pc\n          @cp += 1\n          @callinfo[@cp] = @irep\n          @cp += 1\n          @sp += a\n          @pc = 0\n          @irep = newirep\n          @irepid = @irep.id\n\n          next\n        else\n          args = []\n          n.times do |i|\n            args.push @stack[@sp + a + i + 1]\n          end\n\n          @stack[@sp + a] = @stack[@sp + a].send(mid, *args)\n        end\n\n        # RETURN Ra\u3067\u547c\u3073\u51fa\u3057\u5143\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u623b\u308b\u3002Ra\u304c\u623b\u308a\u5024\u306b\u306a\u308b\n      when :RETURN\n        if @cp == 0 then\n          return @stack[@sp + getarg_a(cop)]\n        else\n          @stack[@sp] = @stack[@sp + getarg_a(cop)]\n          @cp -= 1\n          @irep = @callinfo[@cp]\n          @irepid = @irep.id\n          @cp -= 1\n          @pc = @callinfo[@cp]\n          @cp -= 1\n          @sp = @callinfo[@cp]\n        end\n      else\n        printf(\"Unkown code %s \\n\", OPTABLE_SYM[get_opcode(cop)])\n      end\n\n      @pc = @pc + 1\n    end\n  end\nend\n\n\nVM\u306e\u30ec\u30b8\u30b9\u30bf\u306f@stack\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u5c65\u6b74\u306f@callinfo\u306b\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30ab\u30a6\u30f3\u30bf\u306f@pc\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002mruby\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306esrc/vm.c\u3067mrb_context_run\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bRITE VM\u306e\u3068\u6bd4\u3079\u308b\u3068\u3088\u304f\u4f3c\u3066\u3044\u308b\u3068\u611f\u3058\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3067\u306f\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\njit-1.rb\ndef fib(n)\n  if n == 1 then\n    1\n  elsif n == 0 then\n    1\n  else\n    fib(n - 1) + fib(n - 2)\n  end\nend\n\ndef fibt\n  fib(20)\nend\n\na = Irep::get_irep(self, :fibt)\nvm = FibVM.new\np vm.eval(a)\np fibt\n\n\n$ time ../../mruby/bin/mruby jit-1.rb\n10946\n10946\n\nreal    0m0.630s\nuser    0m0.592s\nsys     0m0.016s\n\nTracing JIT\u306f\u547d\u4ee4\u306e\u5b9f\u884c\u3068\u540c\u6642\u306b\u305d\u308c\u306b\u5bfe\u3059\u308b\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u4eca\u56de\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3068\u3044\u3063\u3066\u3082x86\u7b49\u306e\u6a5f\u68b0\u8a9e\u3067\u306f\u306a\u304f\u3001RITE VM\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5b9f\u884c\u56de\u6570\u3092\u6570\u3048\u308b\u30b3\u30fc\u30c9\u3092\u4ed8\u3051\u52a0\u3048\u308b\n\u4e16\u306e\u4e2d\u306b\u306f\u30d1\u30ec\u30fc\u30c8\u306e\u6cd5\u5247\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u3063\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e2\u5272\u304c8\u5272\u306e\u5b9f\u884c\u6642\u9593\u3092\u8cbb\u3084\u3057\u3066\u3044\u308b\u306e\u3060\u305d\u3046\u3067\u3059\u3002\u307e\u3042\u3001\u305d\u3093\u306a\u611f\u3058\u3082\u3059\u308b\u306a\u30fc\u3068\u601d\u3044\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u751f\u6210\u306f\u305d\u308c\u306a\u308a\u306b\u91cd\u3044\u51e6\u7406\u306a\u306e\u3067\u3001\u5168\u90e8\u306e\u547d\u4ee4\u306b\u5bfe\u3057\u3066\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306e\u306f\u3042\u307b\u3089\u3057\u3044\u3067\u3059\u3002\u305d\u3046\u3044\u3046\u3053\u3068\u3067\u3001\u547d\u4ee4\u306e\u5b9f\u884c\u56de\u6570\u3092\u6e2c\u3063\u3066\u305f\u304f\u3055\u3093\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306a\u3089\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u547d\u4ee4\u306e\u5b9f\u884c\u56de\u6570\u306b\u3088\u3063\u3066\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u306a\u3044\u3053\u3068\u304b\u3089\u52d8\u306e\u3044\u3044\u65b9\u306f\u6c17\u3065\u304b\u308c\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001Tracing JIT\u3067\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u5f8c\u3082\u3059\u3079\u3066\u304c\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3067\u5b9f\u884c\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066VM(\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf)\u306b\u623b\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u304b\u3089\u3001\u30b3\u30fc\u30c9\u751f\u6210\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u306a\u3044\u547d\u4ee4\u304c\u3042\u3063\u3066\u3082\u826f\u304b\u3063\u305f\u308a\u3001\u5927\u80c6\u306a\u6700\u9069\u5316\u3092\u3057\u3066\u6761\u4ef6\u306b\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u5834\u5408\u306f\u3001VM\u3067\u5b9f\u884c\u3059\u308b\u306a\u3093\u3066\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001VM\u306b\u623b\u308b\u5834\u5408\u306fVM\u5074\u306e\u72b6\u614b\u3092\u6b63\u3057\u304f\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u901f\u3044\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u5927\u5909\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305aVM\u3068\u5168\u304f\u540c\u3058\u50cd\u304d\u3092\u3059\u308b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u52dd\u624b\u306bVM\u5074\u306e\u72b6\u614b\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u7c21\u5358\u3067\u3059\u3002\u5177\u4f53\u4f8b\u306f\u3042\u3068\u304b\u3089\u304a\u898b\u305b\u3057\u307e\u3059\u3002\nVM\u306bJIT\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u4ed8\u3051\u52a0\u3048\u308b\u524d\u6bb5\u968e\u3068\u3057\u3066\u3001\u5b9f\u884c\u56de\u6570\u3092\u6570\u3048\u308b\u51e6\u7406\u3068JIT\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u4f7f\u3046\u5909\u6570\u3092\u4ed8\u3051\u52a0\u3048\u307e\u3059\u3002\u3053\u3093\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\njit-1.rb\nclass FibVM\n  include RiteOpcodeUtil\n  OPTABLE_CODE = Irep::OPTABLE_CODE\n  OPTABLE_SYM = Irep::OPTABLE_SYM\n\n  def initialize\n    # For Interpriter\n    @stack = []\n    @callinfo = []\n    @pc = 0\n    @sp = 0\n    @bp = 0\n    @cp = 0\n    @irep = nil\n    @irepid =nil\n\n    # For JIT\n    @prof_info = {}             # \u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u7528\n    @proc_tab = {}              # \u751f\u6210\u3057\u305fProc\u3092\u5165\u308c\u3066\u304a\u304f\n    @entry = nil                # \u73fe\u5728\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306e\u30b3\u30fc\u30c9\u306e\u5148\u982d(RITE\u306e\u30b3\u30fc\u30c9)\n                                # \u73fe\u5728\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u304b\u306e\u30d5\u30e9\u30b0\u3082\u517c\u306d\u308b\n    @max_using_reg = 2          # \u73fe\u5728\u4f7f\u7528\u3057\u3066\u3044\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u6700\u5927\u756a\u53f7\n    @code = []                  # \u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\n    @pool = []                  # \u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u751f\u6210\u3055\u308c\u305f\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb\n  end\n\n  def eval(irep)\n    @irep = irep\n\n    # \u547d\u4ee4\u5217\u306e\u751f\u30a2\u30c9\u30ec\u30b9\u3092\u5f97\u308b\n    @irepid = @irep.id\n\n    # irep\u3054\u3068\u306b\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u4f5c\u6210\u3059\u308b\n    @prof_info[@irepid] ||= []\n    @proc_tab [@irepid] ||= []\n    while true\n      # \u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u306e\u5b9f\u884c(\u5f53\u7136\u4eca\u306f\u306a\u3044)\n\n      cop = @irep.iseq[@pc]\n\n      #\u3000@pc\u306b\u5bfe\u5fdc\u3059\u308bRITE VM\u30b3\u30fc\u30c9\u304c\u306a\u3044\u5834\u5408\n      # (\u4eca\u306f\u307e\u3060\u30b3\u30fc\u30c9\u751f\u6210\u3057\u306a\u3044\u304b\u3089\u5e38\u306b\u7121\u3044)\n      if !@proc_tab[@irepid][@pc] then\n        # \u4eca\u306epc\u306e\u547d\u4ee4\u306e\u5b9f\u884c\u56de\u6570\uff11\u56de\u5897\u3084\u3059\n        @prof_info[@irepid][@pc] ||= 0\n        @prof_info[@irepid][@pc] += 1\n\n        times = @prof_info[@irepid][@pc]\n        if times  > 20 then\n          #\u3000\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5b9d\u77f3\u7bb1\u3084\n        end\n      end\n\n      case OPTABLE_SYM[get_opcode(cop)]\n      when :NOP\n\n\u4ee5\u4e0b\u540c\u6587\n\n\nmruby\u3067\u306f\u5b9f\u884c\u4e2d\u306e\u547d\u4ee4\u3092\u6307\u3057\u793a\u3059\u306b\u306f\u6b21\u306e\uff12\u3064\u306e\u30c7\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\nirep   \u547d\u4ee4\u5217\u3001\u30e1\u30bd\u30c3\u30c9\u30fb\u30d6\u30ed\u30c3\u30af\u3054\u3068\u306b1\u3064\u3065\u305a\u3042\u308b\npc    \u3000irep\u4e2d\u306e\u3069\u306e\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u304b\u793a\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u3001\u5b9f\u884c\u56de\u6570\u3092\u8a18\u61b6\u3059\u308bprof_info\u306firep\u3068pc\u306e2\u3064\u306e\u8981\u7d20\u3092\u3068\u308b2\u6b21\u5143\u914d\u5217\u3067\u3059\u3002(\u6b63\u78ba\u306b\u306f\u914d\u5217\u3092\u8981\u7d20\u3068\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3067\u3059\u3002)\u3069\u3046\u3044\u3063\u305firep\u3084pc\u304c\u6765\u308b\u304b\u3042\u3089\u304b\u3058\u3081\u308f\u304b\u3089\u306a\u3044\u304b\u3089\u3001\u305d\u306e\u90fd\u5ea6\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8981\u7d20\u3092\u5897\u3084\u3057\u3066\u3044\u307e\u3059\u3002@prof_info[@irepid] ||= []\u306fRuby\u306e\u6163\u7528\u53e5\u3067\u3001@prof_info[@irepid]\u304c\u7a7a(nil)\u306e\u6642\u3001\u914d\u5217\u3067\u521d\u671f\u5316\u3057\u307e\u3059\u3002\n@irep\u3068@irepid\u306e\u9055\u3044\u3092\u8aac\u660e\u3057\u307e\u3059\u3002@irep\u306fmruby\u306eIREP\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5316\u3057\u305f\u3082\u306e\u3067\u3059\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6271\u3046\u305f\u3081\u30d8\u30c3\u30c0\u304c\u5916\u5074\u306b\u3042\u308a\u3001\u540c\u3058IREP\u3067\u3082\u30a2\u30c9\u30ec\u30b9\u304c\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001IREP\u306e\u751f\u30a2\u30c9\u30ec\u30b9\u3092Irep#id\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3067\u5f97\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u3001IREP\u304c\u540c\u3058\u304b\u3069\u3046\u304b\u3092\u53b3\u5bc6\u306b\u5224\u65ad\u3057\u305f\u3044\u5834\u5408\u306f\u305d\u3061\u3089\u3092\u4f7f\u3044\u307e\u3059\u3002@irepid\u306f@irep.id\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5b9d\u77f3\u7bb1\n\u3000\u5148\u307b\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u306e\u30b3\u30e1\u30f3\u30c8\u300c\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5b9d\u77f3\u7bb1\u3084\u300d\u3068\u66f8\u3044\u305f\u3068\u3053\u308d\u306e\u8a73\u7d30\u3092\u898b\u3066\u307f\u307e\u3059\u3002\u3053\u3053\u306f\u3001\u30b3\u30fc\u30c9\u751f\u6210\u306e\u5fc3\u81d3\u90e8\u3067\u3059\u3002\n\njit-3.rb\n          if @entry == nil then\n            @entry = @pc\n            @code.push mkop_AB(OPTABLE_CODE[:MOVE], 0, 1)\n          end\n\n          case OPTABLE_SYM[get_opcode(cop)]\n          when :NOP\n\n          when :MOVE\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp, getarg_b(cop))\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n          when :LOADL\n            sidx = add_pool(@irep.pool[getarg_bx(cop)])\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code.push mkop_ABx(OPTABLE_CODE[:LOADL], tmp, sidx)\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n          when :LOADI\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code.push mkop_AsBx(OPTABLE_CODE[:LOADI], tmp, getarg_sbx(cop))\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n          when :LOADSELF\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp, 0)\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n          when :ADD\n            tmp0 = @max_using_reg\n            tmp1 = tmp0 + 1\n            @max_using_reg += 2\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            @code += gen_get_reg(tmp1, getarg_a(cop) + 1)\n            @code.push mkop_ABC(OPTABLE_CODE[:ADD], tmp0, ADD_SYM, 1)\n            @code += gen_set_reg(getarg_a(cop), tmp0)\n            @max_using_reg -= 2\n\n          when :SUBI\n            tmp0 = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            @code.push mkop_ABC(OPTABLE_CODE[:SUBI], tmp0, SUB_SYM, getarg_c(cop))\n            @code += gen_set_reg(getarg_a(cop), tmp0)\n            @max_using_reg -= 1\n\n          when :EQ\n            tmp0 = @max_using_reg\n            tmp1 = tmp0 + 1\n            @max_using_reg += 2\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            @code += gen_get_reg(tmp1, getarg_a(cop) + 1)\n            @code.push mkop_ABC(OPTABLE_CODE[:EQ], tmp0, EQ_SYM, 1)\n            @code += gen_set_reg(getarg_a(cop), tmp0)\n            @max_using_reg -= 2\n\n          when :ENTER\n            # Do nothing\n\n          when :JMP\n            # Do nothing\n\n          when :JMPNOT\n            exit_code = gen_exit(0)\n            tmp0 = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            off = exit_code.size\n            if @stack[@sp + getarg_a(cop)] then\n              @code.push mkop_AsBx(OPTABLE_CODE[:JMPNOT], tmp0, off)\n              @code += exit_code\n            else\n              @code.push mkop_AsBx(OPTABLE_CODE[:JMPIF], tmp0, off)\n              @code += exit_code\n            end\n            @max_using_reg -= 1\n\n          else\n            # \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u547d\u4ee4\n            stop_compile\n          end\n\n\n\u533a\u5207\u3063\u3066\u8a73\u7d30\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306e\u5148\u982d\n\njit-3.rb\n          if @entry == nil then\n            @entry = @pc\n        # You are not expected to understand this\n            @code.push mkop_AB(OPTABLE_CODE[:MOVE], 0, 1)\n          end\n\n\n@entry\u306f\u73fe\u5728\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306e\u30b3\u30fc\u30c9\u306e\u5148\u982d\u306e@pc\u306e\u5024\u304c\u5165\u308a\u307e\u3059\u3002\u3053\u308c\u304cnil\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002\u3064\u307e\u308a\u3001@entry\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u304b\u3069\u3046\u304b\u306e\u30d5\u30e9\u30b0\u3082\u517c\u306d\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306eMOVE\u547d\u4ee4\u306f\u3061\u3087\u3063\u3068\u96e3\u3057\u3044\u3067\u3059\u3002@pc\u3084@stack\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306b\u3001self(R0)\u3092\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u305fcaller\u306eself(\u3053\u308c\u306fR1\u306b\u683c\u7d0d\u3055\u308c\u308b)\u3067\u66f8\u304d\u63db\u3048\u307e\u3059\u3002Ruby\u30ec\u30d9\u30eb\u3067\u306fself\u3092\u66f8\u304d\u304b\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001RITE\u30ec\u30d9\u30eb\u3067\u306f\u5e73\u6c17\u3067\u51fa\u6765\u308b\u306e\u3067\u3059\u3002\n\nMOVE\u547d\u4ee4\n\njit-3.rb\n          when :MOVE\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp, getarg_b(cop))\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n\nMOVE\u547d\u4ee4\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u3001NOP\u547d\u4ee4\u306f\u3084\u306f\u308a\u4f55\u3082\u30b3\u30fc\u30c9\u3092\u51fa\u3057\u307e\u305b\u3093\u3002\ngen_get_reg, gen_set_reg\u306fCodeGen\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3001FibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306e\u8aad\u307f\u66f8\u304d\u3092\u884c\u3044\u307e\u3059\u3002CodeGen\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30b3\u30fc\u30c9\u751f\u6210\u6642\u306b\u3088\u304f\u4f7f\u3046\u751f\u6210\u30d1\u30bf\u30fc\u30f3\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u307e\u3068\u3081\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\u8a73\u3057\u304f\u306f\u5f8c\u304b\u3089\u8aac\u660e\u3057\u307e\u3059\u3002\n\u3053\u306e\u8fba\u304b\u3089\u4eca\u66f8\u3044\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306fRITE VM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u306e\u304b\u3001FibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u306e\u304b\u610f\u8b58\u3057\u3066\u3044\u306a\u3044\u3068\u6df7\u4e71\u3057\u307e\u3059\u3002\n@max_using_reg\u306f\u73fe\u5728\u5024\u304c\u5165\u3063\u3066\u3044\u308b\u3082\u3063\u3068\u3082\u5927\u304d\u306a\u30ec\u30b8\u30b9\u30bf\u306e\u756a\u53f7\u3067\u305d\u308c\u3088\u308a\u5927\u304d\u306a\u756a\u53f7\u306e\u30ec\u30b8\u30b9\u30bf\u3092gen_get_reg\u306a\u3069\u3067\u4f5c\u696d\u7528\u30ec\u30b8\u30b9\u30bf\u3068\u3057\u3066\u4f7f\u304a\u3046\u3068\u3044\u3046\u9b42\u80c6\u3067\u3059\u3002\u3064\u307e\u308a\u3001RITE VM\u306f\u30ec\u30b8\u30b9\u30bf\u30de\u30b7\u30f3\u3067\u3059\u304c\u3001\u30b9\u30bf\u30c3\u30af\u30de\u30b7\u30f3\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002RITE\u3000VM\u304c\u30b9\u30bf\u30c3\u30af\u30de\u30b7\u30f3\u3060\u3068\u3059\u308b\u3068@max_using_reg\u306f\u30b9\u30bf\u30c3\u30af\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\n\nLOADL\u547d\u4ee4(\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb\u306e\u751f\u6210)\n\njit-3.rb\n          when :LOADL\n            sidx = add_pool(@irep.pool[getarg_bx(cop)])\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code.push mkop_ABx(OPTABLE_CODE[:LOADL], tmp, sidx)\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n\nadd_pool\u306f\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb(pool)\u306b\u5024\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306eCodeGen\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u30d7\u30fc\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\u3082\u3057\u3001\u3059\u3067\u306b\u540c\u3058\u5024\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u304c\u3042\u308c\u3070\u518d\u5229\u7528\u3057\u307e\u3059\u3002\nadd_pool\u306f\u3053\u3093\u306a\u611f\u3058\u306e\u5b9a\u7fa9\u3067\u3059\u3002\n\njit-3.rb\n  # \u5b9a\u6570\u30c6\u30fc\u30d6\u30eb\u306b\u5b9a\u6570\u3092\u8ffd\u52a0\u3059\u308b\u3002\u3059\u3067\u306b\u3042\u308b\u5834\u5408\u306f\u518d\u5229\u7528\u3059\u308b\n  def add_pool(val)\n    if idx = @pool.index(val) then\n      return idx\n    else\n      idx = @pool.size\n      @pool.push val\n      return idx\n    end\n  end\n\n\n\nJMP\u547d\u4ee4\u3001JMPNOT\u547d\u4ee4\u3000\u3068\u3000\u30ac\u30fc\u30c9\n\njit-3.rb\n          when :JMP\n            # Do nothing\n\n          when :JMPNOT\n            exit_code = gen_exit(0)\n            tmp0 = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            off = exit_code.size\n            if @stack[@sp + getarg_a(cop)] then\n              @code.push mkop_AsBx(OPTABLE_CODE[:JMPNOT], tmp0, off)\n              @code += exit_code\n            else\n              @code.push mkop_AsBx(OPTABLE_CODE[:JMPIF], tmp0, off)\n              @code += exit_code\n            end\n            @max_using_reg -= 1\n\n\nJMP\u547d\u4ee4\u306f\u4f55\u3082\u547d\u4ee4\u3092\u751f\u6210\u3057\u306a\u3044\u306e\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002Tracing JIT\u306f\u9806\u756a\u306b\u5b9f\u884c\u3057\u305f\u547d\u4ee4\u3092\u4e26\u3079\u308b\u3060\u3051\u306a\u306e\u3067\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4\u306f\u610f\u5473\u304c\u306a\u3044\u306e\u3067\u3059\u3002\n\u7121\u6761\u4ef6\u5206\u5c90\u306f\u7121\u8996\u3057\u3066\u3082\u3044\u3044\u3067\u3059\u304c\u3001\u6761\u4ef6\u5206\u5c90\u306f\u7121\u8996\u3067\u304d\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001\u901a\u5e38\u306e\u6761\u4ef6\u5206\u5c90\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u3067\u3059\u3002JMPNOT\u3067\u306fFibVM\u306e\u771f\u507d\u3092\u6c7a\u3081\u308b\u30ec\u30b8\u30b9\u30bf@stack[@sp + getarg_a(cop)]\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u5024\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305fRITE VM\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306e\u771f\u507d\u3092\u6c7a\u3081\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u5024\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\u3053\u306e\u5024\u304c\u540c\u3058\u306a\u3089\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u5f15\u304d\u7d9a\u304d\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\u3082\u3057\u3001\u7570\u306a\u308c\u3070\u3053\u306e\u5148\u306e\u30b3\u30fc\u30c9\u306f\u5b9f\u884c\u3059\u308b\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u306a\u3044\u306e\u3067FibVM\u306b\u623b\u308b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\ngen_exit\u306fCodeGen\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3067FibVM\u306b\u623b\u308b\u547d\u4ee4\u5217\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u3001\u30ec\u30b8\u30b9\u30bf\u306a\u3069\u306e\u5024\u304c\u671f\u5f85\u3055\u308c\u305f\u5024\u304b\u8abf\u3079\u3066\u3001\u671f\u5f85\u5916\u308c\u306a\u3089FibVM(\u3088\u308a\u4e0a\u306e\u30ec\u30d9\u30eb\u306eVM)\u306b\u623b\u308b\u3088\u3046\u306b\u3059\u308b\u4ed5\u7d44\u307f\u306e\u3053\u3068\u3092\u30ac\u30fc\u30c9\u3068\u8a00\u3044\u307e\u3059\u3002\u30ac\u30fc\u30c9\u306f\u6761\u4ef6\u5206\u5c90\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u8db3\u3057\u7b97\u3067\u578b\u304c\u6574\u6570\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u304b\u3044\u308d\u3044\u308d\u306a\u3068\u3053\u308d\u3067\u4f7f\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u793a\u3057\u305fADD\u547d\u4ee4\u306e\u30b3\u30fc\u30c9\u751f\u6210\u306f\u672c\u5f53\u306f\u578b\u30c1\u30a7\u30c3\u30af\u306e\u30ac\u30fc\u30c9\u3092\u5165\u308c\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u30b5\u30dc\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306e\u7d42\u308f\u308a\n\njit-3.rb\n          else\n            # \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u547d\u4ee4\n            stop_compile\n          end\n\n\n\u547d\u4ee4\u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u5bfe\u5fdc\u3059\u308b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3068\u8aac\u660e\u3057\u307e\u3057\u305f\u304c\u3001\u3044\u3064\u307e\u3067\u751f\u6210\u3059\u308b\u304b\u8aac\u660e\u3057\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3044\u3064\u307e\u3067\u304b\uff1f\u3001\u3053\u3093\u306a\u5834\u5408\u3067\u3059\n\n\u30b3\u30fc\u30c9\u751f\u6210\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u305f\u3002SEND/RETURN\u547d\u4ee4\u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u7406\u7531\u306f\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u304b\u3089\u3067\u3059\u3002\n\u4f7f\u7528\u983b\u5ea6\u304c\u4f4e\u3044\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u305f\n\u305d\u306e\u547d\u4ee4\u306e\u30b3\u30fc\u30c9\u304c\u3059\u3067\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u305f\n\n\u3053\u3046\u3044\u3046\u5834\u5408\u3001\u3061\u3087\u3046\u3069\u30ac\u30fc\u30c9\u304c\u5931\u6557\u3057\u305f\u3068\u304d\u306e\u3088\u3046\u306bFibVM\u306b\u623b\u308b\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305d\u308c\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u4f7f\u3063\u305f\u5404\u7a2e\u5909\u6570\u306e\u30ea\u30bb\u30c3\u30c8\u3082\u884c\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\njit-3.rb\n  def stop_compile\n    if @code.size > 1 then\n      @code += gen_exit(0)\n      @proc_tab[@irepid][@entry] = Irep.new_irep(@code, @pool, CodeGen::SYMS, 10, 2).to_proc\n    end\n\n    # Reset working\n    @entry = nil\n    @max_using_reg = 2\n    @code = []\n    @pool = []\n  end\n\n\nIrep.new_irep(@code, @pool, CodeGen::SYMS, 10, 2).to_proc\u3067\u3001\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3001\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb\u7b49\u304b\u3089\u3001Proc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3066call\u30e1\u30bd\u30c3\u30c9\u3067\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\njit-3.rb\n      # \u3082\u3057\u73fe\u5728\u306ePC\u306e\u547d\u4ee4\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30b3\u30fc\u30c9\u304c\u5b58\u5728\u3057\u305f\u3089\n      a = @proc_tab[@irepid][@pc]\n      if a then\n        if @entry then\n          # \u3082\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306a\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u4e2d\u6b62\u3059\u308b\n          stop_compile\n        end\n        # \u30b3\u30fc\u30c9\u5b9f\u884c\n        @proc_tab[@irepid][@pc].call(self)\n      end\n\n      # \u30b3\u30fc\u30c9\u3092\u53d6\u308a\u8fbc\u3080\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068@pc\u304c\u5909\u5316\u3059\u308b\n      # \u53ef\u80fd\u6027\u306e\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\n      cop = @irep.iseq[@pc]\n\n\n\u30b3\u30fc\u30c9\u751f\u6210\u3001\u30b3\u30fc\u30c9\u89e3\u91c8\u306b\u5148\u3060\u3063\u3066\u3001\u73fe\u5728\u306e\u547d\u4ee4\u304c\u3059\u3067\u306b\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u73fe\u5728\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u304b\u3082\u8abf\u3079\u3001\u3082\u3057\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306a\u3089\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5373\u5ea7\u306b\u7d42\u4e86\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9(\u6b63\u78ba\u306b\u306f\u305d\u308c\u3092Proc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5316\u3057\u305f\u3082\u306e)\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u5b9f\u884c\u306e\u305f\u3081\u306ecall\u547d\u4ee4\u306b\u306fself(FibVM\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)\u306e\u5f15\u6570\u30921\u3064\u6e21\u3057\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u623b\u3063\u3066\u304f\u308b\u3068@pc\u3084@irep\u3082\u6b21\u5b9f\u884c\u3059\u3079\u304d\u547d\u4ee4\u306b\u3061\u3083\u3093\u3068\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u307e\u307e\u547d\u4ee4\u3092\u30d5\u30a7\u30c3\u30c1\u3057\u3066\u30b3\u30fc\u30c9\u751f\u6210\u30fb\u30b3\u30fc\u30c9\u89e3\u91c8\u3092\u304a\u3053\u306a\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u751f\u6210\u30b3\u30fc\u30c9\u30e9\u30a4\u30d6\u30e9\u30ea\n\njit-3.rb\nmodule CodeGen\n  include RiteOpcodeUtil\n  # Reg Mapping\n  #   R0  SELF\n  #   R1  SP\n  #   R2  WORKING\n  #      :\n  #   @max_using_reg\n\n  SYMS = [:@stack, :@sp, :@pc, :+, :-, :[], :[]=, :p, :==]\n  STACK_SYM = 0\n  SP_SYM = 1\n  PC_SYM = 2\n  ADD_SYM = 3\n  SUB_SYM = 4\n  AREF_SYM = 5\n  ASET_SYM = 6\n  P_SYM = 7\n  EQ_SYM = 8\n  OPTABLE_CODE = Irep::OPTABLE_CODE\n  OPTABLE_SYM = Irep::OPTABLE_SYM\n\n  #\u3000FibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306e\u5185\u5bb9\u3092RITE VM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u683c\u7d0d\u3059\u308b\n  def gen_get_reg(dst, src)\n    tmp0 = @max_using_reg\n    tmp1 = tmp0 + 1\n    tmp2 = tmp1 + 1\n    [\n      mkop_ABx(OPTABLE_CODE[:GETIV], tmp0, STACK_SYM),\n      mkop_AsBx(OPTABLE_CODE[:LOADI], tmp1, src),\n      mkop_ABx(OPTABLE_CODE[:GETIV], tmp2, SP_SYM),\n      mkop_ABC(OPTABLE_CODE[:ADD], tmp1, ADD_SYM, 1),\n      mkop_ABC(OPTABLE_CODE[:SEND], tmp0, AREF_SYM, 1),\n      mkop_AB(OPTABLE_CODE[:MOVE], dst, tmp0),\n    ]\n  end\n\n  #\u3000RITE VM\u306e\u30ec\u30b8\u30b9\u30bf\u306e\u5185\u5bb9\u3092FibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u683c\u7d0d\u3059\u308b\n  def gen_set_reg(dst, val)\n    tmp0 = @max_using_reg\n    tmp1 = tmp0 + 1\n    tmp2 = tmp1 + 1\n    [\n      mkop_ABx(OPTABLE_CODE[:GETIV], tmp0, STACK_SYM),\n      mkop_AsBx(OPTABLE_CODE[:LOADI], tmp1, dst),\n      mkop_ABx(OPTABLE_CODE[:GETIV], tmp2, SP_SYM),\n      mkop_ABC(OPTABLE_CODE[:ADD], tmp1, ADD_SYM, 1),\n      mkop_AB(OPTABLE_CODE[:MOVE], tmp2, val),\n      mkop_ABC(OPTABLE_CODE[:SEND], tmp0, ASET_SYM, 2),\n    ]\n  end\n\n  #\u3000RITE VM\u306b\u623b\u308b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\n  def gen_exit(rreg)\n    code = []\n    tmp0 = @max_using_reg\n    @max_using_reg += 1\n    # @pc\u3092\u8a2d\u5b9a\u3059\u308b\u30b3\u30fc\u30c9\n    code += [\n      mkop_AsBx(OPTABLE_CODE[:LOADI], tmp0, @pc),\n      mkop_ABx(OPTABLE_CODE[:SETIV], tmp0, PC_SYM),\n    ]\n    #\u3000\u623b\u308a\u5024\u306e\u8a2d\u5b9a(\u623b\u308a\u5024\u306fFibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u5165\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f)\n    code += gen_get_reg(tmp0, rreg)\n    # \u623b\u308b\n    code.push mkop_A(OPTABLE_CODE[:RETURN], tmp0)\n    @max_using_reg -= 1\n\n    code\n  end\nend\n\n\n\u30b3\u30fc\u30c9\u751f\u6210\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u75b2\u308c\u305f\u306e\u3067\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3067\u3082JIT\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u7406\u89e3\u306b\u306f\u5f71\u97ff\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u7d50\u679c\n$ time ../../mruby/bin/mruby jit-1.rb\n10946\n10946\n\nreal    0m0.630s\nuser    0m0.592s\nsys     0m0.016s\n\n$ time ../../mruby/bin/mruby jit-3.rb\n10946\n10946\n\nreal    0m0.550s\nuser    0m0.483s\nsys     0m0.046s\n\n0.1\u79d2\u307b\u3069\u901f\u304f\u306a\u3063\u3066\u308b\u3002\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\n\u3068\u601d\u3063\u305f\u3089\u3001\u3053\u308c\u306fmruby\u306eJIT\u306e\u7d50\u679c\u3067\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306emruby\u3067\u306f\u3053\u306e\u901a\u308a\n$ time bin/mruby ../../work/mruby-meta-circular/sample/jit-1.rb\n10946\n10946\n\nreal    0m0.890s\nuser    0m0.842s\nsys     0m0.030s\n\n$ time bin/mruby ../../work/mruby-meta-circular/sample/jit-3.rb\n10946\n10946\n\nreal    0m0.940s\nuser    0m0.919s\nsys     0m0.015s\n\nJIT\u7248\u306e\u65b9\u304c\u9045\u3044\u2026\n\u52d5\u304b\u3057\u305f\u3044\u3001\u3068\u3044\u3046\u9154\u72c2\u306a\u65b9\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\nJIT\u306a\u3057  https://github.com/miura1729/mruby-meta-circular/blob/master/sample/jit-1.rb\nJIT\u3042\u308a  https://github.com/miura1729/mruby-meta-circular/blob/master/sample/jit-1.rb\n\u305f\u3060\u3057\u3001mruby-meta-circular\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u306a\u3044\u3068\u52d5\u304d\u307e\u305b\u3093\n\n\u304a\u307e\u3051(\u7df4\u7fd2\u554f\u984c)\n\u3000\u5b9f\u306f\u3053\u3053\u3067\u8aac\u660e\u3057\u305fJIT\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u5c11\u306a\u304f\u3068\u3082\uff11\u3064\u30d0\u30b0\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f\u306a\u3093\u3067\u3057\u3087\u3046\uff1f\u3082\u3061\u308d\u3093\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u306f\u305d\u306e\u30d0\u30b0\u3092\u8e0f\u307f\u307e\u305b\u3093\u3002\n\u6b63\u89e3\u8005\u306f\u3082\u308c\u306a\u304f\u3044\u3061\u65e9\u304f\u7b54\u3048\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059(\u3064\u307e\u308a\u8cde\u54c1\u306e\u985e\u306f\u306a\u3044\u3067\u3059)\u3002\u7b54\u3048\u306f\u30af\u30ea\u30b9\u30de\u30b9\u660e\u3051\u306b\u3067\u3082\u66f8\u304d\u307e\u3059\u3002\n\u3082\u3063\u3068\u4f59\u88d5\u306e\u3042\u308b\u65b9\u306f\u3001SEND/RETURN\u547d\u4ee4\u3082\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b\u3068\u9762\u767d\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u308c\u306e\u6b63\u89e3\u306f\u66f8\u304f\u4e88\u5b9a\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u307f\u306a\u3055\u30fc\u3093\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u77f3\u5ddd\u67d0\u304f\u3093\u306f\u3044\u3064\u3082\u30c7\u30b9\u30de\u306b\u306f\u307e\u3063\u3066\u3044\u3066\u3044\u3064JIT\u306e\u52c9\u5f37\u3057\u3066\u3044\u308b\u3093\u3060\u308d\u3068\u601d\u3063\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\u305d\u306e\u79d8\u5bc6\u306f\u3001[mruby-meta-circular](https://github.com/miura1729/mruby-meta-circular)\u3002C\u3082\u6a5f\u68b0\u8a9e\u3082\u4f7f\u3044\u307e\u305b\u3093\u3002\u3060\u304b\u3089\u3001\u5fd9\u3057\u3044\u67d0\u541b\u306b\u3082\u3067\u304d\u308b\u306e\u3067\u3059\u3002\u30b5\u30f3\u30d7\u30ebCoDe\u3092\u7121\u6599\u3067\u9001\u308a\u307e\u3059\u3002\u7d9a\u304d\u306fWeb\u3067\n\n\u3068\u3044\u3046\u308f\u3051\u3067(\u3069\u3046\u3044\u3046\u308f\u3051\u3060(\u5b9a\u756a\u306e\u7a81\u3063\u8fbc\u307f))\u3001mruby\u3068mruby\u306eVM\u3067\u3042\u308bRITE VM\u306e\u547d\u4ee4\u3060\u3051\u3067Tracing JIT\u306e\u4ed5\u7d44\u307f\u3092\u89e3\u8aac\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n[mruby\u306eJIT](https://github.com/miura1729/mruby)\u3068\u57fa\u672c\u7684\u306a\u69cb\u9020\u306f\u5927\u4f53\u540c\u3058\u3067\u3059\u3002\n\n# \u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\n\n\u521d\u3081\u306b\u30d9\u30fc\u30b9\u306b\u306a\u308bVM\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u304a\u305d\u3089\u304f\u4e16\u306e\u4e2d\u30672\u756a\u76ee\u306b\u305f\u304f\u3055\u3093\u4f5c\u3089\u308c\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u7d1a\u6570\u305d\u308c\u3060\u3051\u304c\u52d5\u304f\u3088\u3046\u6ce8\u610f\u6df1\u304f\u547d\u4ee4\u30bb\u30c3\u30c8\u304c\u9078\u3070\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304b\u3089\u5148\u3001\u3053\u306eVM\u3092FibVM\u3068\u547c\u3073\u307e\u3059\u3002\u307e\u305f\u3001mruby\u306eVM\u306fRITE VM\u3067\u3059\u3002\n\u3053\u306e2\u3064\u3092\u533a\u5225\u3059\u308b\u3053\u3068\u304c\u975e\u5e38\u306b\u91cd\u8981\u3067\u3059\u3002\n\n```ruby:jit-1.rb\nclass FibVM\n  include RiteOpcodeUtil\n  OPTABLE_CODE = Irep::OPTABLE_CODE\n  OPTABLE_SYM = Irep::OPTABLE_SYM\n\n  def initialize\n    # For Interpriter\n    @stack = []                 # \u30b9\u30bf\u30c3\u30af(@sp\u3088\u308a\u4e0a\u4f4d\u3092\u30ec\u30b8\u30b9\u30bf\u3068\u3057\u3066\u6271\u3046)\n    @callinfo = []              # \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3067\u547c\u3073\u51fa\u3057\u5143\u306e\u60c5\u5831\u3092\u683c\u7d0d\n    @pc = 0                     # \u5b9f\u884c\u3059\u308b\u547d\u4ee4\u306e\u4f4d\u7f6e\n    @sp = 0                     # \u30b9\u30bf\u30c3\u30af\u30dd\u30a4\u30f3\u30bf\n    @cp = 0                     # callinfo\u306e\u30dd\u30a4\u30f3\u30bf\n    @irep = nil                 # \u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u547d\u4ee4\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    @irepid =nil                # \u547d\u4ee4\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eid(JIT\u7528)\n  end\n\n  def eval(irep)\n    @irep = irep\n    @irepid = @irep.id\n    while true\n      #\u3000\u547d\u4ee4\u30b3\u30fc\u30c9\u306e\u53d6\u308a\u51fa\u3057\n      cop = @irep.iseq[@pc]\n\n      case OPTABLE_SYM[get_opcode(cop)]\n        # \u4f55\u3082\u3057\u306a\u3044\n      when :NOP\n\n        # MOVE Ra, Rb\u3067\u30ec\u30b8\u30b9\u30bfRa\u306b\u30ec\u30b8\u30b9\u30bfRb\u306e\u5185\u5bb9\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :MOVE\n        @stack[@sp + getarg_a(cop)] = @stack[@sp + getarg_b(cop)]\n\n        # LOADL Ra, pb \u3067\u30ec\u30b8\u30b9\u30bfRa\u306b\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb(pool)\u306epb\u756a\u76ee\u306e\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :LOADL\n        @stack[@sp + getarg_a(cop)] = @irep.pool[getarg_bx(cop)]\n\n        # LOADI Ra, n \u3067\u30ec\u30b8\u30b9\u30bfRa\u306bFixnum\u306e\u5024 n\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :LOADI\n        @stack[@sp + getarg_a(cop)] = getarg_sbx(cop)\n\n        # LOADSELF Ra \u3067\u30ec\u30b8\u30b9\u30bfRa\u306b\u73fe\u5728\u306eself\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :LOADSELF\n        @stack[@sp + getarg_a(cop)] = @stack[@sp]\n\n        # ADD Ra, Rb \u3067\u30ec\u30b8\u30b9\u30bfRa\u306bRa+Rb\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :ADD\n        @stack[@sp + getarg_a(cop)] += @stack[@sp + getarg_a(cop) + 1]\n\n        # SUB Ra, n \u3067\u30ec\u30b8\u30b9\u30bfRa\u306bRa-n\u3092\u30bb\u30c3\u30c8\u3059\u308b\n      when :SUBI\n        @stack[@sp + getarg_a(cop)] -= getarg_c(cop)\n\n        # EQ Ra \u3067Ra\u3068R(a+1)\u3092\u6bd4\u3079\u3066\u540c\u3058\u306a\u3089true, \u9055\u3046\u306a\u3089false\u3092Ra\u306b\u30bb\u30c3\u30c8\u3059\u308b\n      when :EQ\n        val = (@stack[@sp + getarg_a(cop)] == @stack[@sp + getarg_a(cop) + 1])\n        @stack[@sp + getarg_a(cop)] = val\n\n        # JMP n\u3067pc\u3092n\u3060\u3051\u5897\u3084\u3059\u3002\u305f\u3060\u3057\u3001n\u306f\u7b26\u53f7\u4ed8\u304d\n      when :JMP\n        @pc = @pc + getarg_sbx(cop)\n        next\n\n        # JMPNOT Ra, n\u3067\u3082\u3057Ra\u304cnil\u304bfalse\u306a\u3089pc\u3092n\u3060\u3051\u5897\u3084\u3059\u3002\u305f\u3060\u3057\u3001n\u306f\u7b26\u53f7\u4ed8\u304d\n      when :JMPNOT\n        if !@stack[@sp + getarg_a(cop)] then\n          @pc = @pc + getarg_sbx(cop)\n          next\n        end\n\n        # \u30e1\u30bd\u30c3\u30c9\u306e\u5148\u982d\u3067\u5f15\u6570\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u547d\u4ee4\u3002\u9762\u5012\u306a\u306e\u3067\u8a73\u7d30\u306f\u7701\u7565\n      when :ENTER\n\n        # SEND Ra, mid, anum\u3067Ra\u3092\u30ec\u30b7\u30fc\u30d0\u306b\u3057\u3066\u30b7\u30f3\u30dc\u30ebmid\u306e\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\n        # \u547c\u3073\u51fa\u3059\u3002\u305f\u3060\u3057\u3001\u5f15\u6570\u306fanum\u500b\u3042\u308a\u3001R(a+1), R(a+2)... R(a+anum)\u304c\u5f15\u6570\n      when :SEND\n        a = getarg_a(cop)\n        mid = @irep.syms[getarg_b(cop)]\n        n = getarg_c(cop)\n        newirep = Irep::get_irep(@stack[@sp + a], mid)\n        if newirep then\n          @callinfo[@cp] = @sp\n          @cp += 1\n          @callinfo[@cp] = @pc\n          @cp += 1\n          @callinfo[@cp] = @irep\n          @cp += 1\n          @sp += a\n          @pc = 0\n          @irep = newirep\n          @irepid = @irep.id\n\n          next\n        else\n          args = []\n          n.times do |i|\n            args.push @stack[@sp + a + i + 1]\n          end\n\n          @stack[@sp + a] = @stack[@sp + a].send(mid, *args)\n        end\n\n        # RETURN Ra\u3067\u547c\u3073\u51fa\u3057\u5143\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u623b\u308b\u3002Ra\u304c\u623b\u308a\u5024\u306b\u306a\u308b\n      when :RETURN\n        if @cp == 0 then\n          return @stack[@sp + getarg_a(cop)]\n        else\n          @stack[@sp] = @stack[@sp + getarg_a(cop)]\n          @cp -= 1\n          @irep = @callinfo[@cp]\n          @irepid = @irep.id\n          @cp -= 1\n          @pc = @callinfo[@cp]\n          @cp -= 1\n          @sp = @callinfo[@cp]\n        end\n      else\n        printf(\"Unkown code %s \\n\", OPTABLE_SYM[get_opcode(cop)])\n      end\n\n      @pc = @pc + 1\n    end\n  end\nend\n```\n\nVM\u306e\u30ec\u30b8\u30b9\u30bf\u306f@stack\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u5c65\u6b74\u306f@callinfo\u306b\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30ab\u30a6\u30f3\u30bf\u306f@pc\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002mruby\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306esrc/vm.c\u3067mrb_context_run\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bRITE VM\u306e\u3068\u6bd4\u3079\u308b\u3068\u3088\u304f\u4f3c\u3066\u3044\u308b\u3068\u611f\u3058\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3067\u306f\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\n```ruby:jit-1.rb\ndef fib(n)\n  if n == 1 then\n    1\n  elsif n == 0 then\n    1\n  else\n    fib(n - 1) + fib(n - 2)\n  end\nend\n\ndef fibt\n  fib(20)\nend\n\na = Irep::get_irep(self, :fibt)\nvm = FibVM.new\np vm.eval(a)\np fibt\n```\n\n```\n$ time ../../mruby/bin/mruby jit-1.rb\n10946\n10946\n\nreal    0m0.630s\nuser    0m0.592s\nsys     0m0.016s\n```\n\nTracing JIT\u306f\u547d\u4ee4\u306e\u5b9f\u884c\u3068\u540c\u6642\u306b\u305d\u308c\u306b\u5bfe\u3059\u308b\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u4eca\u56de\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3068\u3044\u3063\u3066\u3082x86\u7b49\u306e\u6a5f\u68b0\u8a9e\u3067\u306f\u306a\u304f\u3001RITE VM\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u5b9f\u884c\u56de\u6570\u3092\u6570\u3048\u308b\u30b3\u30fc\u30c9\u3092\u4ed8\u3051\u52a0\u3048\u308b\n\n\u4e16\u306e\u4e2d\u306b\u306f[\u30d1\u30ec\u30fc\u30c8\u306e\u6cd5\u5247](http://ja.wikipedia.org/wiki/%E3%83%91%E3%83%AC%E3%83%BC%E3%83%88%E3%81%AE%E6%B3%95%E5%89%87)\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u3063\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e2\u5272\u304c8\u5272\u306e\u5b9f\u884c\u6642\u9593\u3092\u8cbb\u3084\u3057\u3066\u3044\u308b\u306e\u3060\u305d\u3046\u3067\u3059\u3002\u307e\u3042\u3001\u305d\u3093\u306a\u611f\u3058\u3082\u3059\u308b\u306a\u30fc\u3068\u601d\u3044\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u751f\u6210\u306f\u305d\u308c\u306a\u308a\u306b\u91cd\u3044\u51e6\u7406\u306a\u306e\u3067\u3001\u5168\u90e8\u306e\u547d\u4ee4\u306b\u5bfe\u3057\u3066\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306e\u306f\u3042\u307b\u3089\u3057\u3044\u3067\u3059\u3002\u305d\u3046\u3044\u3046\u3053\u3068\u3067\u3001\u547d\u4ee4\u306e\u5b9f\u884c\u56de\u6570\u3092\u6e2c\u3063\u3066\u305f\u304f\u3055\u3093\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306a\u3089\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u547d\u4ee4\u306e\u5b9f\u884c\u56de\u6570\u306b\u3088\u3063\u3066\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u306a\u3044\u3053\u3068\u304b\u3089\u52d8\u306e\u3044\u3044\u65b9\u306f\u6c17\u3065\u304b\u308c\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001Tracing JIT\u3067\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u5f8c\u3082\u3059\u3079\u3066\u304c\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3067\u5b9f\u884c\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066VM(\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf)\u306b\u623b\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u304b\u3089\u3001\u30b3\u30fc\u30c9\u751f\u6210\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u306a\u3044\u547d\u4ee4\u304c\u3042\u3063\u3066\u3082\u826f\u304b\u3063\u305f\u308a\u3001\u5927\u80c6\u306a\u6700\u9069\u5316\u3092\u3057\u3066\u6761\u4ef6\u306b\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u5834\u5408\u306f\u3001VM\u3067\u5b9f\u884c\u3059\u308b\u306a\u3093\u3066\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001VM\u306b\u623b\u308b\u5834\u5408\u306fVM\u5074\u306e\u72b6\u614b\u3092\u6b63\u3057\u304f\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u901f\u3044\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u5927\u5909\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305aVM\u3068\u5168\u304f\u540c\u3058\u50cd\u304d\u3092\u3059\u308b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u52dd\u624b\u306bVM\u5074\u306e\u72b6\u614b\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u7c21\u5358\u3067\u3059\u3002\u5177\u4f53\u4f8b\u306f\u3042\u3068\u304b\u3089\u304a\u898b\u305b\u3057\u307e\u3059\u3002\n\nVM\u306bJIT\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u4ed8\u3051\u52a0\u3048\u308b\u524d\u6bb5\u968e\u3068\u3057\u3066\u3001\u5b9f\u884c\u56de\u6570\u3092\u6570\u3048\u308b\u51e6\u7406\u3068JIT\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u4f7f\u3046\u5909\u6570\u3092\u4ed8\u3051\u52a0\u3048\u307e\u3059\u3002\u3053\u3093\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```ruby:jit-1.rb\nclass FibVM\n  include RiteOpcodeUtil\n  OPTABLE_CODE = Irep::OPTABLE_CODE\n  OPTABLE_SYM = Irep::OPTABLE_SYM\n\n  def initialize\n    # For Interpriter\n    @stack = []\n    @callinfo = []\n    @pc = 0\n    @sp = 0\n    @bp = 0\n    @cp = 0\n    @irep = nil\n    @irepid =nil\n\n    # For JIT\n    @prof_info = {}             # \u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u7528\n    @proc_tab = {}              # \u751f\u6210\u3057\u305fProc\u3092\u5165\u308c\u3066\u304a\u304f\n    @entry = nil                # \u73fe\u5728\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306e\u30b3\u30fc\u30c9\u306e\u5148\u982d(RITE\u306e\u30b3\u30fc\u30c9)\n                                # \u73fe\u5728\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u304b\u306e\u30d5\u30e9\u30b0\u3082\u517c\u306d\u308b\n    @max_using_reg = 2          # \u73fe\u5728\u4f7f\u7528\u3057\u3066\u3044\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u6700\u5927\u756a\u53f7\n    @code = []                  # \u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\n    @pool = []                  # \u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u751f\u6210\u3055\u308c\u305f\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb\n  end\n\n  def eval(irep)\n    @irep = irep\n\n    # \u547d\u4ee4\u5217\u306e\u751f\u30a2\u30c9\u30ec\u30b9\u3092\u5f97\u308b\n    @irepid = @irep.id\n\n    # irep\u3054\u3068\u306b\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u4f5c\u6210\u3059\u308b\n    @prof_info[@irepid] ||= []\n    @proc_tab [@irepid] ||= []\n    while true\n      # \u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u306e\u5b9f\u884c(\u5f53\u7136\u4eca\u306f\u306a\u3044)\n\n      cop = @irep.iseq[@pc]\n\n      #\u3000@pc\u306b\u5bfe\u5fdc\u3059\u308bRITE VM\u30b3\u30fc\u30c9\u304c\u306a\u3044\u5834\u5408\n      # (\u4eca\u306f\u307e\u3060\u30b3\u30fc\u30c9\u751f\u6210\u3057\u306a\u3044\u304b\u3089\u5e38\u306b\u7121\u3044)\n      if !@proc_tab[@irepid][@pc] then\n        # \u4eca\u306epc\u306e\u547d\u4ee4\u306e\u5b9f\u884c\u56de\u6570\uff11\u56de\u5897\u3084\u3059\n        @prof_info[@irepid][@pc] ||= 0\n        @prof_info[@irepid][@pc] += 1\n\n        times = @prof_info[@irepid][@pc]\n        if times  > 20 then\n          #\u3000\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5b9d\u77f3\u7bb1\u3084\n        end\n      end\n\n      case OPTABLE_SYM[get_opcode(cop)]\n      when :NOP\n\n\u4ee5\u4e0b\u540c\u6587\n```\nmruby\u3067\u306f\u5b9f\u884c\u4e2d\u306e\u547d\u4ee4\u3092\u6307\u3057\u793a\u3059\u306b\u306f\u6b21\u306e\uff12\u3064\u306e\u30c7\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n+ irep   \u547d\u4ee4\u5217\u3001\u30e1\u30bd\u30c3\u30c9\u30fb\u30d6\u30ed\u30c3\u30af\u3054\u3068\u306b1\u3064\u3065\u305a\u3042\u308b\n+ pc    \u3000irep\u4e2d\u306e\u3069\u306e\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u304b\u793a\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u3001\u5b9f\u884c\u56de\u6570\u3092\u8a18\u61b6\u3059\u308bprof_info\u306firep\u3068pc\u306e2\u3064\u306e\u8981\u7d20\u3092\u3068\u308b2\u6b21\u5143\u914d\u5217\u3067\u3059\u3002(\u6b63\u78ba\u306b\u306f\u914d\u5217\u3092\u8981\u7d20\u3068\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3067\u3059\u3002)\u3069\u3046\u3044\u3063\u305firep\u3084pc\u304c\u6765\u308b\u304b\u3042\u3089\u304b\u3058\u3081\u308f\u304b\u3089\u306a\u3044\u304b\u3089\u3001\u305d\u306e\u90fd\u5ea6\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8981\u7d20\u3092\u5897\u3084\u3057\u3066\u3044\u307e\u3059\u3002@prof_info[@irepid] ||= []\u306fRuby\u306e\u6163\u7528\u53e5\u3067\u3001@prof_info[@irepid]\u304c\u7a7a(nil)\u306e\u6642\u3001\u914d\u5217\u3067\u521d\u671f\u5316\u3057\u307e\u3059\u3002\n\n@irep\u3068@irepid\u306e\u9055\u3044\u3092\u8aac\u660e\u3057\u307e\u3059\u3002@irep\u306fmruby\u306eIREP\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5316\u3057\u305f\u3082\u306e\u3067\u3059\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6271\u3046\u305f\u3081\u30d8\u30c3\u30c0\u304c\u5916\u5074\u306b\u3042\u308a\u3001\u540c\u3058IREP\u3067\u3082\u30a2\u30c9\u30ec\u30b9\u304c\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001IREP\u306e\u751f\u30a2\u30c9\u30ec\u30b9\u3092Irep#id\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3067\u5f97\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u3001IREP\u304c\u540c\u3058\u304b\u3069\u3046\u304b\u3092\u53b3\u5bc6\u306b\u5224\u65ad\u3057\u305f\u3044\u5834\u5408\u306f\u305d\u3061\u3089\u3092\u4f7f\u3044\u307e\u3059\u3002@irepid\u306f@irep.id\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n# \u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5b9d\u77f3\u7bb1\n\n\u3000\u5148\u307b\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u306e\u30b3\u30e1\u30f3\u30c8\u300c\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5b9d\u77f3\u7bb1\u3084\u300d\u3068\u66f8\u3044\u305f\u3068\u3053\u308d\u306e\u8a73\u7d30\u3092\u898b\u3066\u307f\u307e\u3059\u3002\u3053\u3053\u306f\u3001\u30b3\u30fc\u30c9\u751f\u6210\u306e\u5fc3\u81d3\u90e8\u3067\u3059\u3002\n\n```ruby:jit-3.rb\n          if @entry == nil then\n            @entry = @pc\n            @code.push mkop_AB(OPTABLE_CODE[:MOVE], 0, 1)\n          end\n\n          case OPTABLE_SYM[get_opcode(cop)]\n          when :NOP\n\n          when :MOVE\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp, getarg_b(cop))\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n          when :LOADL\n            sidx = add_pool(@irep.pool[getarg_bx(cop)])\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code.push mkop_ABx(OPTABLE_CODE[:LOADL], tmp, sidx)\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n          when :LOADI\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code.push mkop_AsBx(OPTABLE_CODE[:LOADI], tmp, getarg_sbx(cop))\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n          when :LOADSELF\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp, 0)\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n\n          when :ADD\n            tmp0 = @max_using_reg\n            tmp1 = tmp0 + 1\n            @max_using_reg += 2\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            @code += gen_get_reg(tmp1, getarg_a(cop) + 1)\n            @code.push mkop_ABC(OPTABLE_CODE[:ADD], tmp0, ADD_SYM, 1)\n            @code += gen_set_reg(getarg_a(cop), tmp0)\n            @max_using_reg -= 2\n\n          when :SUBI\n            tmp0 = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            @code.push mkop_ABC(OPTABLE_CODE[:SUBI], tmp0, SUB_SYM, getarg_c(cop))\n            @code += gen_set_reg(getarg_a(cop), tmp0)\n            @max_using_reg -= 1\n\n          when :EQ\n            tmp0 = @max_using_reg\n            tmp1 = tmp0 + 1\n            @max_using_reg += 2\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            @code += gen_get_reg(tmp1, getarg_a(cop) + 1)\n            @code.push mkop_ABC(OPTABLE_CODE[:EQ], tmp0, EQ_SYM, 1)\n            @code += gen_set_reg(getarg_a(cop), tmp0)\n            @max_using_reg -= 2\n\n          when :ENTER\n            # Do nothing\n\n          when :JMP\n            # Do nothing\n\n          when :JMPNOT\n            exit_code = gen_exit(0)\n            tmp0 = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            off = exit_code.size\n            if @stack[@sp + getarg_a(cop)] then\n              @code.push mkop_AsBx(OPTABLE_CODE[:JMPNOT], tmp0, off)\n              @code += exit_code\n            else\n              @code.push mkop_AsBx(OPTABLE_CODE[:JMPIF], tmp0, off)\n              @code += exit_code\n            end\n            @max_using_reg -= 1\n\n          else\n            # \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u547d\u4ee4\n            stop_compile\n          end\n```\n\n\u533a\u5207\u3063\u3066\u8a73\u7d30\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n## \u30b3\u30fc\u30c9\u306e\u5148\u982d\n\n```ruby:jit-3.rb\n          if @entry == nil then\n            @entry = @pc\n\t    # You are not expected to understand this\n            @code.push mkop_AB(OPTABLE_CODE[:MOVE], 0, 1)\n          end\n```\n\n@entry\u306f\u73fe\u5728\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306e\u30b3\u30fc\u30c9\u306e\u5148\u982d\u306e@pc\u306e\u5024\u304c\u5165\u308a\u307e\u3059\u3002\u3053\u308c\u304cnil\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002\u3064\u307e\u308a\u3001@entry\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u304b\u3069\u3046\u304b\u306e\u30d5\u30e9\u30b0\u3082\u517c\u306d\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306eMOVE\u547d\u4ee4\u306f\u3061\u3087\u3063\u3068\u96e3\u3057\u3044\u3067\u3059\u3002@pc\u3084@stack\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306b\u3001self(R0)\u3092\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u305fcaller\u306eself(\u3053\u308c\u306fR1\u306b\u683c\u7d0d\u3055\u308c\u308b)\u3067\u66f8\u304d\u63db\u3048\u307e\u3059\u3002Ruby\u30ec\u30d9\u30eb\u3067\u306fself\u3092\u66f8\u304d\u304b\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001RITE\u30ec\u30d9\u30eb\u3067\u306f\u5e73\u6c17\u3067\u51fa\u6765\u308b\u306e\u3067\u3059\u3002\n\n## MOVE\u547d\u4ee4\n\n```ruby:jit-3.rb\n          when :MOVE\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp, getarg_b(cop))\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n```\n\nMOVE\u547d\u4ee4\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u3001NOP\u547d\u4ee4\u306f\u3084\u306f\u308a\u4f55\u3082\u30b3\u30fc\u30c9\u3092\u51fa\u3057\u307e\u305b\u3093\u3002\ngen_get_reg, gen_set_reg\u306fCodeGen\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3001FibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306e\u8aad\u307f\u66f8\u304d\u3092\u884c\u3044\u307e\u3059\u3002CodeGen\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30b3\u30fc\u30c9\u751f\u6210\u6642\u306b\u3088\u304f\u4f7f\u3046\u751f\u6210\u30d1\u30bf\u30fc\u30f3\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u307e\u3068\u3081\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\u8a73\u3057\u304f\u306f\u5f8c\u304b\u3089\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u8fba\u304b\u3089\u4eca\u66f8\u3044\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306fRITE VM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u306e\u304b\u3001FibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u306e\u304b\u610f\u8b58\u3057\u3066\u3044\u306a\u3044\u3068\u6df7\u4e71\u3057\u307e\u3059\u3002\n\n@max_using_reg\u306f\u73fe\u5728\u5024\u304c\u5165\u3063\u3066\u3044\u308b\u3082\u3063\u3068\u3082\u5927\u304d\u306a\u30ec\u30b8\u30b9\u30bf\u306e\u756a\u53f7\u3067\u305d\u308c\u3088\u308a\u5927\u304d\u306a\u756a\u53f7\u306e\u30ec\u30b8\u30b9\u30bf\u3092gen_get_reg\u306a\u3069\u3067\u4f5c\u696d\u7528\u30ec\u30b8\u30b9\u30bf\u3068\u3057\u3066\u4f7f\u304a\u3046\u3068\u3044\u3046\u9b42\u80c6\u3067\u3059\u3002\u3064\u307e\u308a\u3001RITE VM\u306f\u30ec\u30b8\u30b9\u30bf\u30de\u30b7\u30f3\u3067\u3059\u304c\u3001\u30b9\u30bf\u30c3\u30af\u30de\u30b7\u30f3\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002RITE\u3000VM\u304c\u30b9\u30bf\u30c3\u30af\u30de\u30b7\u30f3\u3060\u3068\u3059\u308b\u3068@max_using_reg\u306f\u30b9\u30bf\u30c3\u30af\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\n\n## LOADL\u547d\u4ee4(\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb\u306e\u751f\u6210)\n\n```ruby:jit-3.rb\n          when :LOADL\n            sidx = add_pool(@irep.pool[getarg_bx(cop)])\n            tmp = @max_using_reg\n            @max_using_reg += 1\n            @code.push mkop_ABx(OPTABLE_CODE[:LOADL], tmp, sidx)\n            @code += gen_set_reg(getarg_a(cop), tmp)\n            @max_using_reg -= 1\n```\n\nadd_pool\u306f\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb(pool)\u306b\u5024\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306eCodeGen\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u30d7\u30fc\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\u3082\u3057\u3001\u3059\u3067\u306b\u540c\u3058\u5024\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u304c\u3042\u308c\u3070\u518d\u5229\u7528\u3057\u307e\u3059\u3002\nadd_pool\u306f\u3053\u3093\u306a\u611f\u3058\u306e\u5b9a\u7fa9\u3067\u3059\u3002\n\n```ruby:jit-3.rb\n  # \u5b9a\u6570\u30c6\u30fc\u30d6\u30eb\u306b\u5b9a\u6570\u3092\u8ffd\u52a0\u3059\u308b\u3002\u3059\u3067\u306b\u3042\u308b\u5834\u5408\u306f\u518d\u5229\u7528\u3059\u308b\n  def add_pool(val)\n    if idx = @pool.index(val) then\n      return idx\n    else\n      idx = @pool.size\n      @pool.push val\n      return idx\n    end\n  end\n```\n\n## JMP\u547d\u4ee4\u3001JMPNOT\u547d\u4ee4\u3000\u3068\u3000\u30ac\u30fc\u30c9\n\n```ruby:jit-3.rb\n          when :JMP\n            # Do nothing\n\n          when :JMPNOT\n            exit_code = gen_exit(0)\n            tmp0 = @max_using_reg\n            @max_using_reg += 1\n            @code += gen_get_reg(tmp0, getarg_a(cop))\n            off = exit_code.size\n            if @stack[@sp + getarg_a(cop)] then\n              @code.push mkop_AsBx(OPTABLE_CODE[:JMPNOT], tmp0, off)\n              @code += exit_code\n            else\n              @code.push mkop_AsBx(OPTABLE_CODE[:JMPIF], tmp0, off)\n              @code += exit_code\n            end\n            @max_using_reg -= 1\n```\n\nJMP\u547d\u4ee4\u306f\u4f55\u3082\u547d\u4ee4\u3092\u751f\u6210\u3057\u306a\u3044\u306e\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002Tracing JIT\u306f\u9806\u756a\u306b\u5b9f\u884c\u3057\u305f\u547d\u4ee4\u3092\u4e26\u3079\u308b\u3060\u3051\u306a\u306e\u3067\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4\u306f\u610f\u5473\u304c\u306a\u3044\u306e\u3067\u3059\u3002\n\n\u7121\u6761\u4ef6\u5206\u5c90\u306f\u7121\u8996\u3057\u3066\u3082\u3044\u3044\u3067\u3059\u304c\u3001\u6761\u4ef6\u5206\u5c90\u306f\u7121\u8996\u3067\u304d\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001\u901a\u5e38\u306e\u6761\u4ef6\u5206\u5c90\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u3067\u3059\u3002JMPNOT\u3067\u306fFibVM\u306e\u771f\u507d\u3092\u6c7a\u3081\u308b\u30ec\u30b8\u30b9\u30bf@stack[@sp + getarg_a(cop)]\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u5024\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305fRITE VM\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306e\u771f\u507d\u3092\u6c7a\u3081\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u5024\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\u3053\u306e\u5024\u304c\u540c\u3058\u306a\u3089\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u5f15\u304d\u7d9a\u304d\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\u3082\u3057\u3001\u7570\u306a\u308c\u3070\u3053\u306e\u5148\u306e\u30b3\u30fc\u30c9\u306f\u5b9f\u884c\u3059\u308b\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u306a\u3044\u306e\u3067FibVM\u306b\u623b\u308b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\ngen_exit\u306fCodeGen\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3067FibVM\u306b\u623b\u308b\u547d\u4ee4\u5217\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u30ec\u30b8\u30b9\u30bf\u306a\u3069\u306e\u5024\u304c\u671f\u5f85\u3055\u308c\u305f\u5024\u304b\u8abf\u3079\u3066\u3001\u671f\u5f85\u5916\u308c\u306a\u3089FibVM(\u3088\u308a\u4e0a\u306e\u30ec\u30d9\u30eb\u306eVM)\u306b\u623b\u308b\u3088\u3046\u306b\u3059\u308b\u4ed5\u7d44\u307f\u306e\u3053\u3068\u3092\u30ac\u30fc\u30c9\u3068\u8a00\u3044\u307e\u3059\u3002\u30ac\u30fc\u30c9\u306f\u6761\u4ef6\u5206\u5c90\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u8db3\u3057\u7b97\u3067\u578b\u304c\u6574\u6570\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u304b\u3044\u308d\u3044\u308d\u306a\u3068\u3053\u308d\u3067\u4f7f\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u793a\u3057\u305fADD\u547d\u4ee4\u306e\u30b3\u30fc\u30c9\u751f\u6210\u306f\u672c\u5f53\u306f\u578b\u30c1\u30a7\u30c3\u30af\u306e\u30ac\u30fc\u30c9\u3092\u5165\u308c\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u30b5\u30dc\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u30b3\u30fc\u30c9\u306e\u7d42\u308f\u308a\n\n```ruby:jit-3.rb\n          else\n            # \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u547d\u4ee4\n            stop_compile\n          end\n```\n\n\u547d\u4ee4\u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u5bfe\u5fdc\u3059\u308b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3068\u8aac\u660e\u3057\u307e\u3057\u305f\u304c\u3001\u3044\u3064\u307e\u3067\u751f\u6210\u3059\u308b\u304b\u8aac\u660e\u3057\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3044\u3064\u307e\u3067\u304b\uff1f\u3001\u3053\u3093\u306a\u5834\u5408\u3067\u3059\n\n+ \u30b3\u30fc\u30c9\u751f\u6210\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u305f\u3002SEND/RETURN\u547d\u4ee4\u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u7406\u7531\u306f\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u304b\u3089\u3067\u3059\u3002\n+ \u4f7f\u7528\u983b\u5ea6\u304c\u4f4e\u3044\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u305f\n+ \u305d\u306e\u547d\u4ee4\u306e\u30b3\u30fc\u30c9\u304c\u3059\u3067\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u305f\n\n\u3053\u3046\u3044\u3046\u5834\u5408\u3001\u3061\u3087\u3046\u3069\u30ac\u30fc\u30c9\u304c\u5931\u6557\u3057\u305f\u3068\u304d\u306e\u3088\u3046\u306bFibVM\u306b\u623b\u308b\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305d\u308c\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u4f7f\u3063\u305f\u5404\u7a2e\u5909\u6570\u306e\u30ea\u30bb\u30c3\u30c8\u3082\u884c\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```ruby:jit-3.rb\n  def stop_compile\n    if @code.size > 1 then\n      @code += gen_exit(0)\n      @proc_tab[@irepid][@entry] = Irep.new_irep(@code, @pool, CodeGen::SYMS, 10, 2).to_proc\n    end\n\n    # Reset working\n    @entry = nil\n    @max_using_reg = 2\n    @code = []\n    @pool = []\n  end\n```\n\nIrep.new_irep(@code, @pool, CodeGen::SYMS, 10, 2).to_proc\u3067\u3001\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3001\u5b9a\u6570\u30c6\u30fc\u30d6\u30eb\u7b49\u304b\u3089\u3001Proc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3066call\u30e1\u30bd\u30c3\u30c9\u3067\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\n```ruby:jit-3.rb\n      # \u3082\u3057\u73fe\u5728\u306ePC\u306e\u547d\u4ee4\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30b3\u30fc\u30c9\u304c\u5b58\u5728\u3057\u305f\u3089\n      a = @proc_tab[@irepid][@pc]\n      if a then\n        if @entry then\n          # \u3082\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306a\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u4e2d\u6b62\u3059\u308b\n          stop_compile\n        end\n        # \u30b3\u30fc\u30c9\u5b9f\u884c\n        @proc_tab[@irepid][@pc].call(self)\n      end\n\n      # \u30b3\u30fc\u30c9\u3092\u53d6\u308a\u8fbc\u3080\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068@pc\u304c\u5909\u5316\u3059\u308b\n      # \u53ef\u80fd\u6027\u306e\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\n      cop = @irep.iseq[@pc]\n```\n\n\u30b3\u30fc\u30c9\u751f\u6210\u3001\u30b3\u30fc\u30c9\u89e3\u91c8\u306b\u5148\u3060\u3063\u3066\u3001\u73fe\u5728\u306e\u547d\u4ee4\u304c\u3059\u3067\u306b\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u73fe\u5728\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u304b\u3082\u8abf\u3079\u3001\u3082\u3057\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306a\u3089\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5373\u5ea7\u306b\u7d42\u4e86\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9(\u6b63\u78ba\u306b\u306f\u305d\u308c\u3092Proc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5316\u3057\u305f\u3082\u306e)\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u5b9f\u884c\u306e\u305f\u3081\u306ecall\u547d\u4ee4\u306b\u306fself(FibVM\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)\u306e\u5f15\u6570\u30921\u3064\u6e21\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u623b\u3063\u3066\u304f\u308b\u3068@pc\u3084@irep\u3082\u6b21\u5b9f\u884c\u3059\u3079\u304d\u547d\u4ee4\u306b\u3061\u3083\u3093\u3068\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u307e\u307e\u547d\u4ee4\u3092\u30d5\u30a7\u30c3\u30c1\u3057\u3066\u30b3\u30fc\u30c9\u751f\u6210\u30fb\u30b3\u30fc\u30c9\u89e3\u91c8\u3092\u304a\u3053\u306a\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n# \u751f\u6210\u30b3\u30fc\u30c9\u30e9\u30a4\u30d6\u30e9\u30ea\n\n```ruby:jit-3.rb\nmodule CodeGen\n  include RiteOpcodeUtil\n  # Reg Mapping\n  #   R0  SELF\n  #   R1  SP\n  #   R2  WORKING\n  #      :\n  #   @max_using_reg\n\n  SYMS = [:@stack, :@sp, :@pc, :+, :-, :[], :[]=, :p, :==]\n  STACK_SYM = 0\n  SP_SYM = 1\n  PC_SYM = 2\n  ADD_SYM = 3\n  SUB_SYM = 4\n  AREF_SYM = 5\n  ASET_SYM = 6\n  P_SYM = 7\n  EQ_SYM = 8\n  OPTABLE_CODE = Irep::OPTABLE_CODE\n  OPTABLE_SYM = Irep::OPTABLE_SYM\n\n  #\u3000FibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306e\u5185\u5bb9\u3092RITE VM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u683c\u7d0d\u3059\u308b\n  def gen_get_reg(dst, src)\n    tmp0 = @max_using_reg\n    tmp1 = tmp0 + 1\n    tmp2 = tmp1 + 1\n    [\n      mkop_ABx(OPTABLE_CODE[:GETIV], tmp0, STACK_SYM),\n      mkop_AsBx(OPTABLE_CODE[:LOADI], tmp1, src),\n      mkop_ABx(OPTABLE_CODE[:GETIV], tmp2, SP_SYM),\n      mkop_ABC(OPTABLE_CODE[:ADD], tmp1, ADD_SYM, 1),\n      mkop_ABC(OPTABLE_CODE[:SEND], tmp0, AREF_SYM, 1),\n      mkop_AB(OPTABLE_CODE[:MOVE], dst, tmp0),\n    ]\n  end\n\n  #\u3000RITE VM\u306e\u30ec\u30b8\u30b9\u30bf\u306e\u5185\u5bb9\u3092FibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u683c\u7d0d\u3059\u308b\n  def gen_set_reg(dst, val)\n    tmp0 = @max_using_reg\n    tmp1 = tmp0 + 1\n    tmp2 = tmp1 + 1\n    [\n      mkop_ABx(OPTABLE_CODE[:GETIV], tmp0, STACK_SYM),\n      mkop_AsBx(OPTABLE_CODE[:LOADI], tmp1, dst),\n      mkop_ABx(OPTABLE_CODE[:GETIV], tmp2, SP_SYM),\n      mkop_ABC(OPTABLE_CODE[:ADD], tmp1, ADD_SYM, 1),\n      mkop_AB(OPTABLE_CODE[:MOVE], tmp2, val),\n      mkop_ABC(OPTABLE_CODE[:SEND], tmp0, ASET_SYM, 2),\n    ]\n  end\n\n  #\u3000RITE VM\u306b\u623b\u308b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\n  def gen_exit(rreg)\n    code = []\n    tmp0 = @max_using_reg\n    @max_using_reg += 1\n    # @pc\u3092\u8a2d\u5b9a\u3059\u308b\u30b3\u30fc\u30c9\n    code += [\n      mkop_AsBx(OPTABLE_CODE[:LOADI], tmp0, @pc),\n      mkop_ABx(OPTABLE_CODE[:SETIV], tmp0, PC_SYM),\n    ]\n    #\u3000\u623b\u308a\u5024\u306e\u8a2d\u5b9a(\u623b\u308a\u5024\u306fFibVM\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u5165\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f)\n    code += gen_get_reg(tmp0, rreg)\n    # \u623b\u308b\n    code.push mkop_A(OPTABLE_CODE[:RETURN], tmp0)\n    @max_using_reg -= 1\n\n    code\n  end\nend\n```\n\n\u30b3\u30fc\u30c9\u751f\u6210\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u75b2\u308c\u305f\u306e\u3067\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3067\u3082JIT\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u7406\u89e3\u306b\u306f\u5f71\u97ff\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u7d50\u679c\n\n```\n$ time ../../mruby/bin/mruby jit-1.rb\n10946\n10946\n\nreal    0m0.630s\nuser    0m0.592s\nsys     0m0.016s\n\n$ time ../../mruby/bin/mruby jit-3.rb\n10946\n10946\n\nreal    0m0.550s\nuser    0m0.483s\nsys     0m0.046s\n```\n\n0.1\u79d2\u307b\u3069\u901f\u304f\u306a\u3063\u3066\u308b\u3002\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\n\u3068\u601d\u3063\u305f\u3089\u3001\u3053\u308c\u306fmruby\u306eJIT\u306e\u7d50\u679c\u3067\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306emruby\u3067\u306f\u3053\u306e\u901a\u308a\n\n```\n$ time bin/mruby ../../work/mruby-meta-circular/sample/jit-1.rb\n10946\n10946\n\nreal    0m0.890s\nuser    0m0.842s\nsys     0m0.030s\n\n$ time bin/mruby ../../work/mruby-meta-circular/sample/jit-3.rb\n10946\n10946\n\nreal    0m0.940s\nuser    0m0.919s\nsys     0m0.015s\n```\n\nJIT\u7248\u306e\u65b9\u304c\u9045\u3044\u2026\n\n\u52d5\u304b\u3057\u305f\u3044\u3001\u3068\u3044\u3046\u9154\u72c2\u306a\u65b9\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\n\nJIT\u306a\u3057  https://github.com/miura1729/mruby-meta-circular/blob/master/sample/jit-1.rb\nJIT\u3042\u308a  https://github.com/miura1729/mruby-meta-circular/blob/master/sample/jit-1.rb\n\u305f\u3060\u3057\u3001[mruby-meta-circular](https://github.com/miura1729/mruby-meta-circular)\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u306a\u3044\u3068\u52d5\u304d\u307e\u305b\u3093\n\n# \u304a\u307e\u3051(\u7df4\u7fd2\u554f\u984c)\n\n\u3000\u5b9f\u306f\u3053\u3053\u3067\u8aac\u660e\u3057\u305fJIT\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u5c11\u306a\u304f\u3068\u3082\uff11\u3064\u30d0\u30b0\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f\u306a\u3093\u3067\u3057\u3087\u3046\uff1f\u3082\u3061\u308d\u3093\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u306f\u305d\u306e\u30d0\u30b0\u3092\u8e0f\u307f\u307e\u305b\u3093\u3002\n\u6b63\u89e3\u8005\u306f\u3082\u308c\u306a\u304f\u3044\u3061\u65e9\u304f\u7b54\u3048\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059(\u3064\u307e\u308a\u8cde\u54c1\u306e\u985e\u306f\u306a\u3044\u3067\u3059)\u3002\u7b54\u3048\u306f\u30af\u30ea\u30b9\u30de\u30b9\u660e\u3051\u306b\u3067\u3082\u66f8\u304d\u307e\u3059\u3002\n\n \u3082\u3063\u3068\u4f59\u88d5\u306e\u3042\u308b\u65b9\u306f\u3001SEND/RETURN\u547d\u4ee4\u3082\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b\u3068\u9762\u767d\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u308c\u306e\u6b63\u89e3\u306f\u66f8\u304f\u4e88\u5b9a\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n", "tags": ["mruby", "jit", "compiler"]}