{"context": " More than 1 year has passed since last update.\u5148\u65e5\u300egcc\u3068clang\u306e\u30e9\u30e0\u30c0\u5f0f\u306b\u95a2\u3059\u308b\u6700\u9069\u5316\u5177\u5408\u306e\u9055\u3044\u300f\u3068\u3044\u3046\u306e\u3092\u898b\u3064\u3051\u305f\u3070\u304b\u308a\u3067\u3059\u304c\uff08\u7d50\u679c\u7684\u306b\u30e9\u30e0\u30c0\u5f0f\u3068\u3044\u3046\u3088\u308a\u306f\u53c2\u7167\u306b\u95a2\u3059\u308b\u6700\u9069\u5316\u306b\u8fd1\u304b\u3063\u305f\u3067\u3059\u304c\uff09\u3001\u4eca\u5ea6\u306f\u9855\u8457\u306b\u5b9f\u884c\u6642\u9593\u304c1.5\u500d\u4ee5\u4e0a\u9055\u3046\uff08clang\u306e\u65b9\u304c1.5\u500d\u901f\u3044\uff09\u7d50\u679c\u304c\u51fa\u305f\u306e\u3067\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\u5b9f\u884c\u53ef\u80fd\u306a\u30b3\u30fc\u30c9\u306fbitbucket\u306b\u3042\u308b\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff08\u666e\u901a\u306emake\u3060\u3068gcc\u3001make -f Makefile_clang\u3067clang\u306b\u306a\u308a\u307e\u3059\uff09\u3002\n\u79c1\u306e\u4ee5\u4e0b\u306e\u74b0\u5883\u3060\u3068\u3001gcc\u304c\u7d045.1[s]\u3067\u3001clang\u304c\u7d043.4[s]\u3067\u3057\u305f\u3002\n\nUbuntu 15.04 (GNU/Linux 3.19.0-26-generic x86_64)\nIntel(R) Core(TM) i7-3770K CPU @ 3.50GHz\nDDR3-1600 4GBx2\ngcc (Ubuntu 4.9.2-10ubuntu13) 4.9.2\nclang version 3.6.0-2ubuntu1 (tags/RELEASE_360/final) (based on LLVM 3.6.0)\n\n\u3053\u308c\u3060\u3068\u3088\u304f\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u8272\u3005\u3068\u524a\u3063\u3066\u3044\u304f\u3068\u3001\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30fc\u30c9\n\nforce.cpp\n#include <cmath>\n\nstruct Vector4\n{\n    double data[4];\n};\n\nvoid Force(const Vector4 x[], Vector4 f[], const std::size_t n)\n{\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n; j++)\n        {\n            if (i != j)\n            {\n                const double x0 = x[i].data[0];\n                const double x1 = x[i].data[1];\n                const double x2 = x[i].data[2];\n                const double x3 = x[i].data[3];\n                const double r2 = (x0*x0 + x1*x1) + (x2*x2 + x3*x3);\n\n                const double f0 = f[i].data[0] + x0/r2;\n                const double f1 = f[i].data[1] + x1/r2;\n                const double f2 = f[i].data[2] + x2/r2;\n                const double f3 = f[i].data[3] + x3/r2;\n                f[i].data[0] = f0;\n                f[i].data[1] = f1;\n                f[i].data[2] = f2;\n                f[i].data[3] = f3;\n            }\n        }\n    }\n}\n\n\n\n\u3092\u3001\n\ng++ -c -O3 force.cpp && objdump -M intel -S force.o\nclang++ -c -O3 force.cpp && objdump -M intel -S force.o\n\n\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u4e2d\u8eab\u3092\u8997\u3044\u3066\u307f\u308b\u3068\u3001\n\ngcc.txt\n   0:   48 85 d2                test   rdx,rdx\n   3:   0f 84 a2 00 00 00       je     ab <_Z6NormalPK7Vector4PS_m+0xab>\n   9:   31 c9                   xor    ecx,ecx\n   b:   0f 1f 44 00 00          nop    DWORD PTR [rax+rax*1+0x0]\n  10:   31 c0                   xor    eax,eax\n  12:   66 0f 1f 44 00 00       nop    WORD PTR [rax+rax*1+0x0]\n  18:   39 c1                   cmp    ecx,eax\n  1a:   74 75                   je     91 <_Z6NormalPK7Vector4PS_m+0x91>\n  1c:   f2 0f 10 2f             movsd  xmm5,QWORD PTR [rdi]\n  20:   f2 0f 10 67 08          movsd  xmm4,QWORD PTR [rdi+0x8]\n  25:   66 0f 28 f5             movapd xmm6,xmm5\n  29:   f2 0f 10 5f 10          movsd  xmm3,QWORD PTR [rdi+0x10]\n  2e:   66 0f 28 c4             movapd xmm0,xmm4\n  32:   f2 0f 59 f5             mulsd  xmm6,xmm5\n  36:   f2 0f 59 c4             mulsd  xmm0,xmm4\n  3a:   f2 0f 10 57 18          movsd  xmm2,QWORD PTR [rdi+0x18]\n  3f:   66 0f 28 ca             movapd xmm1,xmm2\n  43:   f2 0f 58 f0             addsd  xmm6,xmm0\n  47:   66 0f 28 c3             movapd xmm0,xmm3\n  4b:   f2 0f 59 ca             mulsd  xmm1,xmm2\n  4f:   f2 0f 59 c3             mulsd  xmm0,xmm3\n  53:   f2 0f 58 c1             addsd  xmm0,xmm1\n  57:   f2 0f 58 c6             addsd  xmm0,xmm6\n  5b:   f2 0f 5e e0             divsd  xmm4,xmm0\n  5f:   f2 0f 5e d8             divsd  xmm3,xmm0\n  63:   f2 0f 58 66 08          addsd  xmm4,QWORD PTR [rsi+0x8]\n  68:   f2 0f 11 66 08          movsd  QWORD PTR [rsi+0x8],xmm4\n  6d:   f2 0f 5e d0             divsd  xmm2,xmm0\n  71:   f2 0f 58 5e 10          addsd  xmm3,QWORD PTR [rsi+0x10]\n  76:   f2 0f 11 5e 10          movsd  QWORD PTR [rsi+0x10],xmm3\n  7b:   f2 0f 5e e8             divsd  xmm5,xmm0\n  7f:   f2 0f 58 56 18          addsd  xmm2,QWORD PTR [rsi+0x18]\n  84:   f2 0f 11 56 18          movsd  QWORD PTR [rsi+0x18],xmm2\n  89:   f2 0f 58 2e             addsd  xmm5,QWORD PTR [rsi]\n  8d:   f2 0f 11 2e             movsd  QWORD PTR [rsi],xmm5\n  91:   83 c0 01                add    eax,0x1\n  94:   39 d0                   cmp    eax,edx\n  96:   75 80                   jne    18 <_Z6NormalPK7Vector4PS_m+0x18>\n  98:   83 c1 01                add    ecx,0x1\n  9b:   48 83 c7 20             add    rdi,0x20\n  9f:   48 83 c6 20             add    rsi,0x20\n  a3:   39 d1                   cmp    ecx,edx\n  a5:   0f 85 65 ff ff ff       jne    10 <_Z6NormalPK7Vector4PS_m+0x10>\n  ab:   f3 c3                   repz ret\n\n\n\nclang.txt\n   0:   53                      push   rbx\n   1:   48 85 d2                test   rdx,rdx\n   4:   0f 84 a4 00 00 00       je     ae <_Z6NormalPK7Vector4PS_m+0xae>\n   a:   4c 8d 42 ff             lea    r8,[rdx-0x1]\n   e:   31 c9                   xor    ecx,ecx\n  10:   48 89 c8                mov    rax,rcx\n  13:   48 c1 e0 05             shl    rax,0x5\n  17:   4c 8d 0c 07             lea    r9,[rdi+rax*1]\n  1b:   4c 8d 54 07 10          lea    r10,[rdi+rax*1+0x10]\n  20:   4c 8d 1c 06             lea    r11,[rsi+rax*1]\n  24:   48 8d 44 06 10          lea    rax,[rsi+rax*1+0x10]\n  29:   31 db                   xor    ebx,ebx\n  2b:   0f 1f 44 00 00          nop    DWORD PTR [rax+rax*1+0x0]\n  30:   39 d9                   cmp    ecx,ebx\n  32:   74 65                   je     99 <_Z6NormalPK7Vector4PS_m+0x99>\n  34:   66 41 0f 10 01          movupd xmm0,XMMWORD PTR [r9]\n  39:   66 41 0f 10 0a          movupd xmm1,XMMWORD PTR [r10]\n  3e:   66 0f 28 d0             movapd xmm2,xmm0\n  42:   f2 0f 59 d2             mulsd  xmm2,xmm2\n  46:   66 0f 28 d8             movapd xmm3,xmm0\n  4a:   66 0f c6 db 01          shufpd xmm3,xmm3,0x1\n  4f:   f2 0f 59 db             mulsd  xmm3,xmm3\n  53:   f2 0f 58 da             addsd  xmm3,xmm2\n  57:   66 0f 28 d1             movapd xmm2,xmm1\n  5b:   f2 0f 59 d2             mulsd  xmm2,xmm2\n  5f:   66 0f 28 e1             movapd xmm4,xmm1\n  63:   66 0f c6 e4 01          shufpd xmm4,xmm4,0x1\n  68:   f2 0f 59 e4             mulsd  xmm4,xmm4\n  6c:   f2 0f 58 e2             addsd  xmm4,xmm2\n  70:   f2 0f 58 e3             addsd  xmm4,xmm3\n  74:   66 41 0f 10 13          movupd xmm2,XMMWORD PTR [r11]\n  79:   0f 16 e4                movlhps xmm4,xmm4\n  7c:   66 0f 5e c4             divpd  xmm0,xmm4\n  80:   66 0f 58 c2             addpd  xmm0,xmm2\n  84:   66 0f 10 10             movupd xmm2,XMMWORD PTR [rax]\n  88:   66 0f 5e cc             divpd  xmm1,xmm4\n  8c:   66 0f 58 ca             addpd  xmm1,xmm2\n  90:   66 41 0f 11 03          movupd XMMWORD PTR [r11],xmm0\n  95:   66 0f 11 08             movupd XMMWORD PTR [rax],xmm1\n  99:   48 ff c3                inc    rbx\n  9c:   48 39 da                cmp    rdx,rbx\n  9f:   75 8f                   jne    30 <_Z6NormalPK7Vector4PS_m+0x30>\n  a1:   4c 39 c1                cmp    rcx,r8\n  a4:   48 8d 49 01             lea    rcx,[rcx+0x1]\n  a8:   0f 85 62 ff ff ff       jne    10 <_Z6NormalPK7Vector4PS_m+0x10>\n  ae:   5b                      pop    rbx\n  af:   c3                      ret\n\n\n\u3068\u306a\u3063\u3066\u307e\u3057\u305f\u3002\n\u6ce8\u76ee\u3059\u3079\u304d\u306f\u3001\u771f\u3093\u4e2d\u3042\u305f\u308a\u306eje     99 <_Z6NormalPK7Vector4PS_m+0x99>\u304b\u3089\u6b21\u306ejne    30 <_Z6NormalPK7Vector4PS_m+0x30>\u3042\u305f\u308a\u306exmm\u30ec\u30b8\u30b9\u30bf\u3092\u64cd\u4f5c\u3057\u3066\u308b\u8fba\u308a\u3002\n\u3053\u306e\u8fba\u308a\u304c\u30b3\u30fc\u30c9\u4e0a\u3067\u51e6\u7406\u672c\u4f53\u306b\u306a\u308b\nconst double x0 = x[i].data[0];\nconst double x1 = x[i].data[1];\nconst double x2 = x[i].data[2];\nconst double x3 = x[i].data[3];\nconst double r2 = (x0*x0 + x1*x1) + (x2*x2 + x3*x3);\n\nconst double f0 = f[i].data[0] + x0/r2;\nconst double f1 = f[i].data[1] + x1/r2;\nconst double f2 = f[i].data[2] + x2/r2;\nconst double f3 = f[i].data[3] + x3/r2;\nf[i].data[0] = f0;\nf[i].data[1] = f1;\nf[i].data[2] = f2;\nf[i].data[3] = f3;\n\n\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u304c\u3001gcc\u306f\u307b\u307c*sd\u547d\u4ee4\u3067\u5358\u767a\u5b9f\u884c\uff08movapd\u3092\u9664\u304f\uff09\u306a\u306e\u306b\u5bfe\u3057\u3066\u3001clang\u306f*pd\u547d\u4ee4\u3082\u4f7f\u3063\u3066SSE2\u3067SIMD\u5316\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\u4f8b\u3048\u3070x/r2\u306f\u3001gcc\u3060\u3068divsd\u30924\u56de\u3067\u5fe0\u5b9f\u306b\u66f8\u3044\u3066\u307e\u3059\u304c\u3001clang\u306fdivpd\u30922\u56de\u306b\u30d1\u30c3\u30af\u3057\u3066\u307e\u3059\u3002\n\u3088\u304f\u3088\u304f\u898b\u3066\u307f\u308b\u3068\u3001*pd\u306b\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306f\u3001\u5f8c\u6bb5\u306ef\u306e\u8a08\u7b97\u90e8\u5206\u3067\u3059\u3002\u3053\u3053\u304cSIMD\u30672\u8981\u7d20\u540c\u6642\u5b9f\u884c\u3067\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u5b9f\u884c\u6642\u9593\u306f\u534a\u5206\u304c\u534a\u5206\u306b\u306a\u3063\u30663/4\uff08\u3064\u307e\u308a1.5\u500d\u306e\u901f\u5ea6\uff09\u3068\u3044\u3046\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u307b\u3093\u3068\u306f\u524d\u6bb5\u306er2\u306e\u8a08\u7b97\u3082\u81ea\u52d5\u30d9\u30af\u30c8\u30eb\u5316\uff08SIMD\u5316\uff09\u3057\u3066mulpd\u304c\u307b\u3057\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u3046\u307e\u304f\u30b3\u30fc\u30c9\u304c\u51fa\u3066\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3046\u30fc\u3093\u30fb\u30fb\u30fb\u3002\n\u307e\u3041\u3068\u306b\u304b\u304f\u3001clang\u3092\u4f7f\u3046\u3068\u81ea\u52d5\u30d9\u30af\u30c8\u30eb\u5316\u3067\u304d\u3066\u3001gcc\u3060\u3068\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u4f8b\u3067\u3057\u305f\u3002\n\u5148\u65e5\u306e\u4ef6\u3082\u8003\u3048\u308b\u3068\u3001\u7279\u306b\u3053\u3060\u308f\u308a\u304c\u306a\u3044\u306a\u3089gcc\u3088\u308aclang\u4f7f\u3063\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\u5148\u65e5\u300e[gcc\u3068clang\u306e\u30e9\u30e0\u30c0\u5f0f\u306b\u95a2\u3059\u308b\u6700\u9069\u5316\u5177\u5408\u306e\u9055\u3044](http://qiita.com/aokomoriuta/items/517bf29f0cb62940fb31)\u300f\u3068\u3044\u3046\u306e\u3092\u898b\u3064\u3051\u305f\u3070\u304b\u308a\u3067\u3059\u304c\uff08\u7d50\u679c\u7684\u306b\u30e9\u30e0\u30c0\u5f0f\u3068\u3044\u3046\u3088\u308a\u306f\u53c2\u7167\u306b\u95a2\u3059\u308b\u6700\u9069\u5316\u306b\u8fd1\u304b\u3063\u305f\u3067\u3059\u304c\uff09\u3001\u4eca\u5ea6\u306f\u9855\u8457\u306b\u5b9f\u884c\u6642\u9593\u304c1.5\u500d\u4ee5\u4e0a\u9055\u3046\uff08clang\u306e\u65b9\u304c1.5\u500d\u901f\u3044\uff09\u7d50\u679c\u304c\u51fa\u305f\u306e\u3067\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5b9f\u884c\u53ef\u80fd\u306a\u30b3\u30fc\u30c9\u306f[bitbucket](https://bitbucket.org/aokomoriuta/simd/src/simple/cpp/simd/simd.cpp)\u306b\u3042\u308b\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff08\u666e\u901a\u306e``make``\u3060\u3068gcc\u3001``make -f Makefile_clang``\u3067clang\u306b\u306a\u308a\u307e\u3059\uff09\u3002\n\u79c1\u306e\u4ee5\u4e0b\u306e\u74b0\u5883\u3060\u3068\u3001gcc\u304c\u7d045.1[s]\u3067\u3001clang\u304c\u7d043.4[s]\u3067\u3057\u305f\u3002\n\n* Ubuntu 15.04 (GNU/Linux 3.19.0-26-generic x86_64)\n* Intel(R) Core(TM) i7-3770K CPU @ 3.50GHz\n* DDR3-1600 4GBx2\n* gcc (Ubuntu 4.9.2-10ubuntu13) 4.9.2\n* clang version 3.6.0-2ubuntu1 (tags/RELEASE_360/final) (based on LLVM 3.6.0)\n\n\u3053\u308c\u3060\u3068\u3088\u304f\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u8272\u3005\u3068\u524a\u3063\u3066\u3044\u304f\u3068\u3001\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30fc\u30c9\n\n```force.cpp\n#include <cmath>\n\nstruct Vector4\n{\n\tdouble data[4];\n};\n\nvoid Force(const Vector4 x[], Vector4 f[], const std::size_t n)\n{\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tif (i != j)\n\t\t\t{\n\t\t\t\tconst double x0 = x[i].data[0];\n\t\t\t\tconst double x1 = x[i].data[1];\n\t\t\t\tconst double x2 = x[i].data[2];\n\t\t\t\tconst double x3 = x[i].data[3];\n\t\t\t\tconst double r2 = (x0*x0 + x1*x1) + (x2*x2 + x3*x3);\n\n\t\t\t\tconst double f0 = f[i].data[0] + x0/r2;\n\t\t\t\tconst double f1 = f[i].data[1] + x1/r2;\n\t\t\t\tconst double f2 = f[i].data[2] + x2/r2;\n\t\t\t\tconst double f3 = f[i].data[3] + x3/r2;\n\t\t\t\tf[i].data[0] = f0;\n\t\t\t\tf[i].data[1] = f1;\n\t\t\t\tf[i].data[2] = f2;\n\t\t\t\tf[i].data[3] = f3;\n\t\t\t}\n\t\t}\n\t}\n}\n\n```\n\n\u3092\u3001\n\n- ``g++ -c -O3 force.cpp && objdump -M intel -S force.o``\n- ``clang++ -c -O3 force.cpp && objdump -M intel -S force.o``\n\n\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u4e2d\u8eab\u3092\u8997\u3044\u3066\u307f\u308b\u3068\u3001\n\n\n```cpp-objdump:gcc.txt\n   0:   48 85 d2                test   rdx,rdx\n   3:   0f 84 a2 00 00 00       je     ab <_Z6NormalPK7Vector4PS_m+0xab>\n   9:   31 c9                   xor    ecx,ecx\n   b:   0f 1f 44 00 00          nop    DWORD PTR [rax+rax*1+0x0]\n  10:   31 c0                   xor    eax,eax\n  12:   66 0f 1f 44 00 00       nop    WORD PTR [rax+rax*1+0x0]\n  18:   39 c1                   cmp    ecx,eax\n  1a:   74 75                   je     91 <_Z6NormalPK7Vector4PS_m+0x91>\n  1c:   f2 0f 10 2f             movsd  xmm5,QWORD PTR [rdi]\n  20:   f2 0f 10 67 08          movsd  xmm4,QWORD PTR [rdi+0x8]\n  25:   66 0f 28 f5             movapd xmm6,xmm5\n  29:   f2 0f 10 5f 10          movsd  xmm3,QWORD PTR [rdi+0x10]\n  2e:   66 0f 28 c4             movapd xmm0,xmm4\n  32:   f2 0f 59 f5             mulsd  xmm6,xmm5\n  36:   f2 0f 59 c4             mulsd  xmm0,xmm4\n  3a:   f2 0f 10 57 18          movsd  xmm2,QWORD PTR [rdi+0x18]\n  3f:   66 0f 28 ca             movapd xmm1,xmm2\n  43:   f2 0f 58 f0             addsd  xmm6,xmm0\n  47:   66 0f 28 c3             movapd xmm0,xmm3\n  4b:   f2 0f 59 ca             mulsd  xmm1,xmm2\n  4f:   f2 0f 59 c3             mulsd  xmm0,xmm3\n  53:   f2 0f 58 c1             addsd  xmm0,xmm1\n  57:   f2 0f 58 c6             addsd  xmm0,xmm6\n  5b:   f2 0f 5e e0             divsd  xmm4,xmm0\n  5f:   f2 0f 5e d8             divsd  xmm3,xmm0\n  63:   f2 0f 58 66 08          addsd  xmm4,QWORD PTR [rsi+0x8]\n  68:   f2 0f 11 66 08          movsd  QWORD PTR [rsi+0x8],xmm4\n  6d:   f2 0f 5e d0             divsd  xmm2,xmm0\n  71:   f2 0f 58 5e 10          addsd  xmm3,QWORD PTR [rsi+0x10]\n  76:   f2 0f 11 5e 10          movsd  QWORD PTR [rsi+0x10],xmm3\n  7b:   f2 0f 5e e8             divsd  xmm5,xmm0\n  7f:   f2 0f 58 56 18          addsd  xmm2,QWORD PTR [rsi+0x18]\n  84:   f2 0f 11 56 18          movsd  QWORD PTR [rsi+0x18],xmm2\n  89:   f2 0f 58 2e             addsd  xmm5,QWORD PTR [rsi]\n  8d:   f2 0f 11 2e             movsd  QWORD PTR [rsi],xmm5\n  91:   83 c0 01                add    eax,0x1\n  94:   39 d0                   cmp    eax,edx\n  96:   75 80                   jne    18 <_Z6NormalPK7Vector4PS_m+0x18>\n  98:   83 c1 01                add    ecx,0x1\n  9b:   48 83 c7 20             add    rdi,0x20\n  9f:   48 83 c6 20             add    rsi,0x20\n  a3:   39 d1                   cmp    ecx,edx\n  a5:   0f 85 65 ff ff ff       jne    10 <_Z6NormalPK7Vector4PS_m+0x10>\n  ab:   f3 c3                   repz ret\n```\n\n```cpp-objdump:clang.txt\n   0:   53                      push   rbx\n   1:   48 85 d2                test   rdx,rdx\n   4:   0f 84 a4 00 00 00       je     ae <_Z6NormalPK7Vector4PS_m+0xae>\n   a:   4c 8d 42 ff             lea    r8,[rdx-0x1]\n   e:   31 c9                   xor    ecx,ecx\n  10:   48 89 c8                mov    rax,rcx\n  13:   48 c1 e0 05             shl    rax,0x5\n  17:   4c 8d 0c 07             lea    r9,[rdi+rax*1]\n  1b:   4c 8d 54 07 10          lea    r10,[rdi+rax*1+0x10]\n  20:   4c 8d 1c 06             lea    r11,[rsi+rax*1]\n  24:   48 8d 44 06 10          lea    rax,[rsi+rax*1+0x10]\n  29:   31 db                   xor    ebx,ebx\n  2b:   0f 1f 44 00 00          nop    DWORD PTR [rax+rax*1+0x0]\n  30:   39 d9                   cmp    ecx,ebx\n  32:   74 65                   je     99 <_Z6NormalPK7Vector4PS_m+0x99>\n  34:   66 41 0f 10 01          movupd xmm0,XMMWORD PTR [r9]\n  39:   66 41 0f 10 0a          movupd xmm1,XMMWORD PTR [r10]\n  3e:   66 0f 28 d0             movapd xmm2,xmm0\n  42:   f2 0f 59 d2             mulsd  xmm2,xmm2\n  46:   66 0f 28 d8             movapd xmm3,xmm0\n  4a:   66 0f c6 db 01          shufpd xmm3,xmm3,0x1\n  4f:   f2 0f 59 db             mulsd  xmm3,xmm3\n  53:   f2 0f 58 da             addsd  xmm3,xmm2\n  57:   66 0f 28 d1             movapd xmm2,xmm1\n  5b:   f2 0f 59 d2             mulsd  xmm2,xmm2\n  5f:   66 0f 28 e1             movapd xmm4,xmm1\n  63:   66 0f c6 e4 01          shufpd xmm4,xmm4,0x1\n  68:   f2 0f 59 e4             mulsd  xmm4,xmm4\n  6c:   f2 0f 58 e2             addsd  xmm4,xmm2\n  70:   f2 0f 58 e3             addsd  xmm4,xmm3\n  74:   66 41 0f 10 13          movupd xmm2,XMMWORD PTR [r11]\n  79:   0f 16 e4                movlhps xmm4,xmm4\n  7c:   66 0f 5e c4             divpd  xmm0,xmm4\n  80:   66 0f 58 c2             addpd  xmm0,xmm2\n  84:   66 0f 10 10             movupd xmm2,XMMWORD PTR [rax]\n  88:   66 0f 5e cc             divpd  xmm1,xmm4\n  8c:   66 0f 58 ca             addpd  xmm1,xmm2\n  90:   66 41 0f 11 03          movupd XMMWORD PTR [r11],xmm0\n  95:   66 0f 11 08             movupd XMMWORD PTR [rax],xmm1\n  99:   48 ff c3                inc    rbx\n  9c:   48 39 da                cmp    rdx,rbx\n  9f:   75 8f                   jne    30 <_Z6NormalPK7Vector4PS_m+0x30>\n  a1:   4c 39 c1                cmp    rcx,r8\n  a4:   48 8d 49 01             lea    rcx,[rcx+0x1]\n  a8:   0f 85 62 ff ff ff       jne    10 <_Z6NormalPK7Vector4PS_m+0x10>\n  ae:   5b                      pop    rbx\n  af:   c3                      ret\n```\n\n\u3068\u306a\u3063\u3066\u307e\u3057\u305f\u3002\n\n\u6ce8\u76ee\u3059\u3079\u304d\u306f\u3001\u771f\u3093\u4e2d\u3042\u305f\u308a\u306e``je     99 <_Z6NormalPK7Vector4PS_m+0x99>``\u304b\u3089\u6b21\u306e``jne    30 <_Z6NormalPK7Vector4PS_m+0x30>``\u3042\u305f\u308a\u306exmm\u30ec\u30b8\u30b9\u30bf\u3092\u64cd\u4f5c\u3057\u3066\u308b\u8fba\u308a\u3002\n\u3053\u306e\u8fba\u308a\u304c\u30b3\u30fc\u30c9\u4e0a\u3067\u51e6\u7406\u672c\u4f53\u306b\u306a\u308b\n\n```cpp\nconst double x0 = x[i].data[0];\nconst double x1 = x[i].data[1];\nconst double x2 = x[i].data[2];\nconst double x3 = x[i].data[3];\nconst double r2 = (x0*x0 + x1*x1) + (x2*x2 + x3*x3);\n\nconst double f0 = f[i].data[0] + x0/r2;\nconst double f1 = f[i].data[1] + x1/r2;\nconst double f2 = f[i].data[2] + x2/r2;\nconst double f3 = f[i].data[3] + x3/r2;\nf[i].data[0] = f0;\nf[i].data[1] = f1;\nf[i].data[2] = f2;\nf[i].data[3] = f3;\n```\n\n\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u304c\u3001**gcc\u306f\u307b\u307c*sd\u547d\u4ee4\u3067\u5358\u767a\u5b9f\u884c**\uff08``movapd``\u3092\u9664\u304f\uff09\u306a\u306e\u306b\u5bfe\u3057\u3066\u3001**clang\u306f*pd\u547d\u4ee4\u3082\u4f7f\u3063\u3066SSE2\u3067SIMD\u5316\u3057\u3066\u3044\u308b**\u3068\u3053\u308d\u3067\u3059\u3002\n\u4f8b\u3048\u3070``x/r2``\u306f\u3001gcc\u3060\u3068divsd\u30924\u56de\u3067\u5fe0\u5b9f\u306b\u66f8\u3044\u3066\u307e\u3059\u304c\u3001clang\u306fdivpd\u30922\u56de\u306b\u30d1\u30c3\u30af\u3057\u3066\u307e\u3059\u3002\n\u3088\u304f\u3088\u304f\u898b\u3066\u307f\u308b\u3068\u3001*pd\u306b\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306f\u3001\u5f8c\u6bb5\u306e``f``\u306e\u8a08\u7b97\u90e8\u5206\u3067\u3059\u3002\u3053\u3053\u304cSIMD\u30672\u8981\u7d20\u540c\u6642\u5b9f\u884c\u3067\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u5b9f\u884c\u6642\u9593\u306f\u534a\u5206\u304c\u534a\u5206\u306b\u306a\u3063\u30663/4\uff08\u3064\u307e\u308a1.5\u500d\u306e\u901f\u5ea6\uff09\u3068\u3044\u3046\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u307b\u3093\u3068\u306f\u524d\u6bb5\u306e``r2``\u306e\u8a08\u7b97\u3082\u81ea\u52d5\u30d9\u30af\u30c8\u30eb\u5316\uff08SIMD\u5316\uff09\u3057\u3066``mulpd``\u304c\u307b\u3057\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u3046\u307e\u304f\u30b3\u30fc\u30c9\u304c\u51fa\u3066\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3046\u30fc\u3093\u30fb\u30fb\u30fb\u3002\n\n\u307e\u3041\u3068\u306b\u304b\u304f\u3001**clang\u3092\u4f7f\u3046\u3068\u81ea\u52d5\u30d9\u30af\u30c8\u30eb\u5316\u3067\u304d\u3066\u3001gcc\u3060\u3068\u3067\u304d\u306a\u3044**\u3068\u3044\u3046\u4f8b\u3067\u3057\u305f\u3002\n\u5148\u65e5\u306e\u4ef6\u3082\u8003\u3048\u308b\u3068\u3001\u7279\u306b\u3053\u3060\u308f\u308a\u304c\u306a\u3044\u306a\u3089gcc\u3088\u308aclang\u4f7f\u3063\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n", "tags": ["C++", "GCC", "clang"]}