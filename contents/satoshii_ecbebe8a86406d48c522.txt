{"context": "\n\n\u3084\u308a\u304b\u305f\n\u4f8b\u3068\u3057\u3066 Files#write(Path, Iterable<? extends CharSequence> lines, OpenOption...) \u3092\u4f7f\u3044\u307e\u3059\u3002\nStream<String> stream = Stream.of(\"foo\", \"bar\", \"buzz\");\nIterable<String> iterable = stream::iterator;\nFiles.write(Paths.get(\"test.txt\"), iterable);\n\n\u3042\u308b\u3044\u306f\nStream<CharSequence> stream = Stream.of(\"foo\", \"bar\", \"buzz\");\nFiles.write(Paths.get(\"test.txt\"), stream::iterator);\n\n\u3061\u306a\u307f\u306b\nStream<String> stream = Stream.of(\"foo\", \"bar\", \"buzz\");\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\nFiles.write(Paths.get(\"test.txt\"), stream::iterator);\n// \u3053\u308c\u306a\u3089\u901a\u308b\nFiles.write(Paths.get(\"test.txt\"), (Iterable<String>)stream::iterator);\n\n\n\u80cc\u666f\u3068\u6ce8\u610f\u70b9\nStream/BaseStream \u306f iterator() \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3061\u307e\u3059\u304c Iterable \u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u305b\u3093\u3002Iterable#iterator() \u306f\u7e70\u308a\u8fd4\u3057\u547c\u3070\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u3044\u3046\u306e\u304c\u7406\u7531\u3089\u3057\u3044\u3067\u3059\u3002\nIterable#iterator()  \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3059\u3068\u3044\u3046\u3053\u3068\u3057\u304b\u66f8\u304b\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001BaseStream#iterator() \u306b\u306f\u7d42\u7aef\u64cd\u4f5c\u3067\u3042\u308b\u65e8\u304c\u660e\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u53c2\u8003: Why is Stream not an Iterable ? \n\u3057\u305f\u304c\u3063\u3066\u3001\u524d\u63b2\u306e\u65b9\u6cd5\u3067\u5909\u63db\u3057\u305f\u3082\u306e\u3092\u5b89\u6613\u306b Iterable \u3092\u4f7f\u7528\u3059\u308b\u30af\u30e9\u30b9\u306b\u6e21\u3059\u3068\u3001\u5b9f\u88c5\u306b\u3088\u3063\u3066\u306f RuntimeException \u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u8003\u616e\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\n# \u3084\u308a\u304b\u305f\n\u4f8b\u3068\u3057\u3066 `Files#write(Path, Iterable<? extends CharSequence> lines, OpenOption...)` \u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```java\nStream<String> stream = Stream.of(\"foo\", \"bar\", \"buzz\");\nIterable<String> iterable = stream::iterator;\nFiles.write(Paths.get(\"test.txt\"), iterable);\n```\n\n\u3042\u308b\u3044\u306f\n\n```java\nStream<CharSequence> stream = Stream.of(\"foo\", \"bar\", \"buzz\");\nFiles.write(Paths.get(\"test.txt\"), stream::iterator);\n```\n\n\u3061\u306a\u307f\u306b\n\n```java\nStream<String> stream = Stream.of(\"foo\", \"bar\", \"buzz\");\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\nFiles.write(Paths.get(\"test.txt\"), stream::iterator);\n// \u3053\u308c\u306a\u3089\u901a\u308b\nFiles.write(Paths.get(\"test.txt\"), (Iterable<String>)stream::iterator);\n```\n\n# \u80cc\u666f\u3068\u6ce8\u610f\u70b9\nStream/BaseStream \u306f `iterator()` \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3061\u307e\u3059\u304c Iterable \u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u305b\u3093\u3002`Iterable#iterator()` \u306f\u7e70\u308a\u8fd4\u3057\u547c\u3070\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u3044\u3046\u306e\u304c\u7406\u7531\u3089\u3057\u3044\u3067\u3059\u3002\n[`Iterable#iterator()`](https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Iterable.html#iterator--)  \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3059\u3068\u3044\u3046\u3053\u3068\u3057\u304b\u66f8\u304b\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001[`BaseStream#iterator()`](https://docs.oracle.com/javase/jp/8/docs/api/java/util/stream/BaseStream.html#iterator--) \u306b\u306f\u7d42\u7aef\u64cd\u4f5c\u3067\u3042\u308b\u65e8\u304c\u660e\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u53c2\u8003: [Why is Stream<T> not an Iterable<T> ? ](http://mail.openjdk.java.net/pipermail/lambda-dev/2013-March/thread.html#8876)\n\n\u3057\u305f\u304c\u3063\u3066\u3001\u524d\u63b2\u306e\u65b9\u6cd5\u3067\u5909\u63db\u3057\u305f\u3082\u306e\u3092\u5b89\u6613\u306b Iterable \u3092\u4f7f\u7528\u3059\u308b\u30af\u30e9\u30b9\u306b\u6e21\u3059\u3068\u3001\u5b9f\u88c5\u306b\u3088\u3063\u3066\u306f RuntimeException \u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u8003\u616e\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\n", "tags": ["Java", "java8"]}