{"context": " More than 1 year has passed since last update.\n\nWAL (Write-Ahead Logging)\n\u307b\u3068\u3093\u3069\u4f7f\u3063\u305f\u3053\u3068\u306e\u306a\u3044sqlite3\u3067\u3059\u304c\u3001\u30d0\u30fc\u30b8\u30e7\u30f33.7\u304b\u3089 WAL(Write-Ahead Logging)\u304c\u4f7f\u7528\u3067\u304d\u308b\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nWAL\u306f\u8aac\u660e\u306f https://www.postgresql.jp/document/8.0/html/wal.html \u3092\u53c2\u7167\u3002\n\nmy_create_table.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sqlite3.h>\n\n#define DBNAME  \"test.db\"\n\nconst char *family[][2] = {\n    {\"Sazae\", \"24\"},\n    {\"Namihei\", \"54\"},\n    {\"Fune\", \"50\"},\n    {\"Masuo\", \"28\"},\n    {\"Katsuo\", \"11\"},\n    {\"Wakame\", \"9\"},\n    {\"Tarao\", \"3\"},\n    {\"Tama\", \"1\"},\n};\n\nint main(int argc, char* argv[])\n{\n   sqlite3 *db;\n   int rc, i, num;\n   char *sql;\n   char *msg = 0;\n\n   /* Open database */\n   rc = sqlite3_open(DBNAME, &db);\n   if( rc ){\n      fprintf(stderr, \"Can't open database: %s\\n\", sqlite3_errmsg(db));\n      exit(1);\n   }\n\n   /* Create SQL statement */\n   sql = sqlite3_mprintf(\"create table if not exists family(name text not null, age int not null)\");\n   /* Execute SQL statement */\n   rc = sqlite3_exec(db, sql, NULL, NULL, NULL);\n\n   /* Write Ahead Logging */\n   sqlite3_exec(db, \"PRAGMA journal_mode = WAL;\", NULL, NULL, NULL);\n\n   /* transaction */\n   sqlite3_exec(db, \"begin\", NULL, NULL, NULL);\n\n   num = (sizeof(family) / sizeof(family[0]));\n   for(i = 0; i < num; i++) {\n       sql = sqlite3_mprintf(\n            \"insert into family (name, age) values ('%s', %d)\",\n            family[i][0],\n            atoi(family[i][1])\n       );\n\n       /* Execute SQL statement */\n       //rc = sqlite3_exec(db, sql, callback, 0, &msg);\n       rc = sqlite3_exec(db, sql, 0, 0, &msg);\n       if( rc != SQLITE_OK ){\n          fprintf(stderr, \"SQL error: %s\\n\", msg);\n          sqlite3_free(msg);\n       }else{\n          fprintf(stdout, \"Records created successfully\\n\");\n       }\n    }\n    sqlite3_exec(db, \"COMMIT\", NULL, NULL, NULL);\n    sqlite3_close(db);\n    return 0;\n}\n\n\n# WAL (Write-Ahead Logging)\n\n\u307b\u3068\u3093\u3069\u4f7f\u3063\u305f\u3053\u3068\u306e\u306a\u3044sqlite3\u3067\u3059\u304c\u3001\u30d0\u30fc\u30b8\u30e7\u30f33.7\u304b\u3089 WAL(Write-Ahead Logging)\u304c\u4f7f\u7528\u3067\u304d\u308b\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nWAL\u306f\u8aac\u660e\u306f https://www.postgresql.jp/document/8.0/html/wal.html \u3092\u53c2\u7167\u3002\n\n```c:my_create_table.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sqlite3.h>\n\n#define DBNAME  \"test.db\"\n\nconst char *family[][2] = {\n    {\"Sazae\", \"24\"},\n    {\"Namihei\", \"54\"},\n    {\"Fune\", \"50\"},\n    {\"Masuo\", \"28\"},\n    {\"Katsuo\", \"11\"},\n    {\"Wakame\", \"9\"},\n    {\"Tarao\", \"3\"},\n    {\"Tama\", \"1\"},\n};\n\nint main(int argc, char* argv[])\n{\n   sqlite3 *db;\n   int rc, i, num;\n   char *sql;\n   char *msg = 0;\n\n   /* Open database */\n   rc = sqlite3_open(DBNAME, &db);\n   if( rc ){\n      fprintf(stderr, \"Can't open database: %s\\n\", sqlite3_errmsg(db));\n      exit(1);\n   }\n\n   /* Create SQL statement */\n   sql = sqlite3_mprintf(\"create table if not exists family(name text not null, age int not null)\");\n   /* Execute SQL statement */\n   rc = sqlite3_exec(db, sql, NULL, NULL, NULL);\n\n   /* Write Ahead Logging */\n   sqlite3_exec(db, \"PRAGMA journal_mode = WAL;\", NULL, NULL, NULL);\n\n   /* transaction */\n   sqlite3_exec(db, \"begin\", NULL, NULL, NULL);\n\n   num = (sizeof(family) / sizeof(family[0]));\n   for(i = 0; i < num; i++) {\n       sql = sqlite3_mprintf(\n            \"insert into family (name, age) values ('%s', %d)\",\n            family[i][0],\n            atoi(family[i][1])\n       );\n\n       /* Execute SQL statement */\n       //rc = sqlite3_exec(db, sql, callback, 0, &msg);\n       rc = sqlite3_exec(db, sql, 0, 0, &msg);\n       if( rc != SQLITE_OK ){\n          fprintf(stderr, \"SQL error: %s\\n\", msg);\n          sqlite3_free(msg);\n       }else{\n          fprintf(stdout, \"Records created successfully\\n\");\n       }\n    }\n    sqlite3_exec(db, \"COMMIT\", NULL, NULL, NULL);\n    sqlite3_close(db);\n    return 0;\n}\n```\n", "tags": ["SQLite3", "sqlite", "C"]}