{"tags": ["Ruby", "Rails", "CentOS", "nginx", "puma"], "context": "\u5fd8\u308c\u3061\u3083\u3046\u3093\u3067\u30e1\u30e2\n\n\u69cb\u6210\nruby 2.3.1\nrails 5.0.1\nnginx\ncapistrano\npuma\nconoha - centOS 6.7 64bit\n\n\u76ee\u6b21\n\nVPS\nvps\u306f\u691c\u8a0e\u306e\u672bconoha\u306evps\u3092\u4f7f\u7528\nssh\u63a5\u7d9a\u306e\u305f\u3081\u306e\u63a5\u7d9a\u7b49\u306f\u7701\u7565\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305aroot\u3067\u30ed\u30b0\u30a4\u30f3\n\n\u30ed\u30b0\u30a4\u30f3\nssh root@xxx.xxx.xx.xx (xxx.xxx.xx.xx\u306f\u30b5\u30fc\u30d0\u306eIP\u30a2\u30c9\u30ec\u30b9\uff09\n\n\nrbenv\u3092install\nruby\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306brbenv\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nrbenv\u3092install\u3092\u3057\u3066PATH\u3092\u901a\u3059\n$ rbenv install 2.3.1\n$ rbenv rehash\n$ rbenv global 2.3.1\n\n\n\u74b0\u5883\u8a2d\u5b9a\u306e\u672b\u884c\u306b\u8ffd\u8a18\u3059\u308b(server\u5074)\n#~/.bash_profile\n\nexport PATH=\"~/.rbenv/bin:$PATH\"\neval \"$(rbenv init -)\"\n\n~/.bash_profile\u3092\u518d\u8aad\u307f\u8fbc\u307f\n$ source .bash_profile\n\n\nnginx\u3092install\u53ca\u3073\u8a2d\u5b9a\nyum \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3081\u3001yum\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u767b\u9332\nsudo rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm\n\nMainline\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3044\u306e\u3067\u3001\u300c/etc/yum.repos.d/nginx.repo \u300d\u3092\u4fee\u6b63\nstable \u306e\u5834\u5408 nginx.repo \u306f\u4fee\u6b63\u3057\u306a\u304f\u3066\u826f\u3044\u3089\u3057\u3044\u3002\n\u53c2\u7167\uff1ahttp://qiita.com/ymaru/items/4a56f1619c960981180f\n# vim /etc/yum.repos.d/nginx.repo\n\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/mainline/centos/6/$basearch/\ngpgcheck=0\nenabled=1\n\ninstall\u3059\u308b\nsudo yum install nginx\n\n#/etc/nginx/conf.d/hoge.conf\n\nupstream #{app_name} {\n  # uncomment the following line if multiple application servers are used.\n  # this will force nginx to send requests from the same client to the same\n  # application server.\n  # ip_hash;\n  server unix:/var/www/#{app_name}/shared/tmp/sockets/puma.sock fail_timeout=0;\n}\n\nserver {\n  listen 80 default deferred;\n  server_name colors-link.com;\n  root /var/www/#{app_name}/current/public;\n  access_log /var/www/#{app_name}/current/log/nginx.access.log;\n  error_log /var/www/#{app_name}/current/log/production.log;\n\n  location ^~ /assets/ {\n    # gzip_static on;\n    expires max;\n    add_header Cache-Control public;\n  }\n\n  try_files $uri/index.html $uri @#{app_name};\n  location @#{app_name} {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $http_host;\n    proxy_redirect off;\n    proxy_pass http://#{app_name};\n  }\n\n  error_page 500 502 503 504 /500.html;\n  client_max_body_size 4G;\n  keepalive_timeout 10;\n}\n\n\u8d77\u52d5\u3059\u308b\nsudo service nginx start\n\n\n\u3061\u3087\u3044\u30cf\u30de\u3063\u305f\u3068\u3053\u308d\n\n\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u305f\u3089restart\u3059\u308b\nserver unix:\nserver_name\n\n# nginx\u3092restart\u3059\u308b\n$ sudo service nginx restart\n\n\nCapistrano\u3067\u30c7\u30d7\u30ed\u30a4\n\nCapistrano\u8a2d\u5b9a\n#Gemfile\n\ngroup :development do\n  gem 'capistrano'\n  gem 'capistrano-rails'\n  gem 'capistrano3-puma'\n  gem 'capistrano-rbenv'\n  gem 'capistrano-rbenv-vars'\n  gem 'capistrano-bundler'\nend\n\nbundle install\nbundle exec cap install\n\n#Capfile\n\nrequire 'capistrano/setup'\nrequire 'capistrano/deploy'\nrequire 'capistrano/rails'\nrequire 'capistrano/rbenv'\nrequire 'capistrano/bundler'\nrequire 'capistrano/puma'\n\n# Load custom tasks from `lib/capistrano/tasks` if you have any defined\nDir.glob(\"lib/capistrano/tasks/*.rake\").each { |r| import r }\n\nrequire \"capistrano/scm/git\"\ninstall_plugin Capistrano::SCM::Git\n\n\n#deploy.rb\n\n# config valid only for current version of Capistrano\nlock '3.7.1'\n\nserver \"#{ip_address}\", user: 'root', roles: %w{app db web}\n\nset :application, '#{app_name}'\nset :repo_url, 'git@bitbucket.org:shotay/#{app_name}.git'\n\nset :pty, true\n# rbenv\u306e\u8a2d\u5b9a\nset :rbenv_type, :user\nset :rbenv_ruby, '2.3.1'\n# set :rbenv_prefix, \"RBENV_ROOT=#{fetch(:rbenv_path)} RBENV_VERSION=#{fetch(:rbenv_ruby)} #{fetch(:rbenv_path)}/bin/rbenv exec\"\nset :rbenv_map_bins, %w{rake gem bundle ruby rails}\nset :rbenv_roles, :all\n\nset :deploy_to, '/var/www/#{app_name}'\nset :puma_rackup, -> { File.join(current_path, 'config.ru') }\nset :puma_state, \"#{shared_path}/tmp/pids/puma.state\"\nset :puma_pid, \"#{shared_path}/tmp/pids/puma.pid\"\nset :puma_bind, \"unix:#{shared_path}/tmp/sockets/puma.sock\"\nset :puma_conf, \"#{shared_path}/puma.rb\"\nset :puma_access_log, \"#{shared_path}/log/puma_error.log\"\nset :puma_error_log, \"#{shared_path}/log/puma_access.log\"\nset :puma_role, :app\nset :puma_env, fetch(:rack_env, fetch(:rails_env, 'production'))\nset :puma_threads, [0, 16]\nset :puma_workers, 0\nset :puma_init_active_record, true\nset :puma_preload_app, true\n\n\n# Default branch is :master\n# ask :branch, `git rev-parse --abbrev-ref HEAD`.chomp\n\n# Default deploy_to directory is /var/www/my_app_name\n\n\n# Default value for :scm is :git\n# set :scm, :git\n\n# Default value for :format is :pretty\n# set :format, :pretty\n\n# Default value for :log_level is :debug\nset :log_level, :warn\n\n# Default value for :pty is false\n# set :pty, true\n\n# Default value for :linked_files is []\n# set :linked_files, fetch(:linked_files, []).push('config/database.yml', 'config/secrets.yml')\n\n# Default value for linked_dirs is []\nset :linked_dirs, fetch(:linked_dirs, []).push('log', 'tmp/pids', 'tmp/cache', 'tmp/sockets', 'vendor/bundle', 'public/system')\n\n# Default value for default_env is {}\n# set :default_env, { path: \"/opt/ruby/bin:$PATH\" }\n\n# Default value for keep_releases is 5\nset :keep_releases, 3\n\nnamespace :puma do\n  desc 'Create Directories for Puma Pids and Socket'\n  task :make_dirs do\n    on roles(:app) do\n      execute \"mkdir /var/www/#{app_name}/shared/tmp/sockets -p\"\n      execute \"mkdir /var/www/#{app_name}/shared/tmp/pids -p\"\n    end\n  end\n  before :start, :make_dirs\nend\n\nnamespace :deploy do\n  desc \"Make sure local git is in sync with remote.\"\n  task :check_revision do\n    on roles(:app) do\n      unless `git rev-parse HEAD` == `git rev-parse origin/master`\n        puts \"WARNING: HEAD is not the same as origin/master\"\n        puts \"Run `git push` to sync changes.\"\n        exit\n      end\n    end\n  end\n\n  desc 'Initial Deploy'\n  task :initial do\n    on roles(:app) do\n      before 'deploy:restart', 'puma:start'\n      invoke 'deploy'\n    end\n  end\n\n  desc 'Restart application'\n  task :restart do\n    on roles(:app), in: :sequence, wait: 5 do\n      invoke 'puma:restart'\n    end\n  end\n\n  before :starting,     :check_revision\n  after  :finishing,    :compile_assets\n  after  :finishing,    :cleanup\nend\n\n\n\n\n$ bundle exec cap production deploy:initial\n\n\n\u3061\u3087\u3044\u30cf\u30de\u3063\u305f\u3068\u3053\u308d\n\nbundle install\u306e\u90e8\u5206\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u6642\u4e0b\u8a18\u4e8c\u3064\u5b9f\u884c\n\n\nyum install gcc-c++\nyum install mysql-devel\n\n\n\u4ed6\u306e\u89e3\u8aac\u3067\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u305fset :scm, :git\u3092\u4f7f\u7528\u3059\u308b\u3068\u4e0a\u624b\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u305f\u3081\u3001Capfile\u306b\u4e0b\u8a18\u3092\u8ffd\u52a0\u3057\u305f\n\nrequire \"capistrano/scm/git\"\ninstall_plugin Capistrano::SCM::Git\n\n\n\u30ed\u30b0\u306e\u78ba\u8a8d\n$ tail -f /var/www/#{app_name}/shared/log/production.log\n\n\n\u307e\u3068\u3081\nVPS\u3092\u501f\u308a\u3066\u306e\u69cb\u7bc9\u304c\u521d\u3081\u3066\u3060\u3063\u305f\u306e\u3067\u7d50\u69cb\u30cf\u30de\u3063\u305f\u3002\n\u5fd8\u308c\u3061\u3083\u3046\u3093\u3067\u30e1\u30e2\n\n#\u69cb\u6210\nruby 2.3.1\nrails 5.0.1\nnginx\ncapistrano\npuma\nconoha - centOS 6.7 64bit\n#\u76ee\u6b21\n\n##VPS\nvps\u306f\u691c\u8a0e\u306e\u672bconoha\u306evps\u3092\u4f7f\u7528\nssh\u63a5\u7d9a\u306e\u305f\u3081\u306e\u63a5\u7d9a\u7b49\u306f\u7701\u7565\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305aroot\u3067\u30ed\u30b0\u30a4\u30f3\n\n###\u30ed\u30b0\u30a4\u30f3\n```\nssh root@xxx.xxx.xx.xx (xxx.xxx.xx.xx\u306f\u30b5\u30fc\u30d0\u306eIP\u30a2\u30c9\u30ec\u30b9\uff09\n```\n\n##rbenv\u3092install\n\nruby\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306brbenv\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nrbenv\u3092install\u3092\u3057\u3066PATH\u3092\u901a\u3059\n\n```\n$ rbenv install 2.3.1\n$ rbenv rehash\n$ rbenv global 2.3.1\n```\n\n###\u74b0\u5883\u8a2d\u5b9a\u306e\u672b\u884c\u306b\u8ffd\u8a18\u3059\u308b(server\u5074)\n\n```\n#~/.bash_profile\n\nexport PATH=\"~/.rbenv/bin:$PATH\"\neval \"$(rbenv init -)\"\n```\n\n~/.bash_profile\u3092\u518d\u8aad\u307f\u8fbc\u307f\n\n```\n$ source .bash_profile\n```\n\n##nginx\u3092install\u53ca\u3073\u8a2d\u5b9a\nyum \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3081\u3001yum\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u767b\u9332\n\n```\nsudo rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm\n```\n\nMainline\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3044\u306e\u3067\u3001\u300c/etc/yum.repos.d/nginx.repo \u300d\u3092\u4fee\u6b63\nstable \u306e\u5834\u5408 nginx.repo \u306f\u4fee\u6b63\u3057\u306a\u304f\u3066\u826f\u3044\u3089\u3057\u3044\u3002\n\u53c2\u7167\uff1ahttp://qiita.com/ymaru/items/4a56f1619c960981180f\n\n```\n# vim /etc/yum.repos.d/nginx.repo\n\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/mainline/centos/6/$basearch/\ngpgcheck=0\nenabled=1\n```\n\ninstall\u3059\u308b\n\n```\nsudo yum install nginx\n```\n\n```\n#/etc/nginx/conf.d/hoge.conf\n\nupstream #{app_name} {\n  # uncomment the following line if multiple application servers are used.\n  # this will force nginx to send requests from the same client to the same\n  # application server.\n  # ip_hash;\n  server unix:/var/www/#{app_name}/shared/tmp/sockets/puma.sock fail_timeout=0;\n}\n\nserver {\n  listen 80 default deferred;\n  server_name colors-link.com;\n  root /var/www/#{app_name}/current/public;\n  access_log /var/www/#{app_name}/current/log/nginx.access.log;\n  error_log /var/www/#{app_name}/current/log/production.log;\n\n  location ^~ /assets/ {\n    # gzip_static on;\n    expires max;\n    add_header Cache-Control public;\n  }\n\n  try_files $uri/index.html $uri @#{app_name};\n  location @#{app_name} {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $http_host;\n    proxy_redirect off;\n    proxy_pass http://#{app_name};\n  }\n\n  error_page 500 502 503 504 /500.html;\n  client_max_body_size 4G;\n  keepalive_timeout 10;\n}\n```\n\n\u8d77\u52d5\u3059\u308b\n\n```\nsudo service nginx start\n```\n\n####\u3061\u3087\u3044\u30cf\u30de\u3063\u305f\u3068\u3053\u308d\n- \u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u305f\u3089restart\u3059\u308b\n- server unix:\n- server_name\n\n```\n# nginx\u3092restart\u3059\u308b\n$ sudo service nginx restart\n```\n\n##Capistrano\u3067\u30c7\u30d7\u30ed\u30a4\n\n###Capistrano\u8a2d\u5b9a\n```ruby\n#Gemfile\n\ngroup :development do\n  gem 'capistrano'\n  gem 'capistrano-rails'\n  gem 'capistrano3-puma'\n  gem 'capistrano-rbenv'\n  gem 'capistrano-rbenv-vars'\n  gem 'capistrano-bundler'\nend\n```\n\n```\nbundle install\nbundle exec cap install\n```\n\n```ruby\n#Capfile\n\nrequire 'capistrano/setup'\nrequire 'capistrano/deploy'\nrequire 'capistrano/rails'\nrequire 'capistrano/rbenv'\nrequire 'capistrano/bundler'\nrequire 'capistrano/puma'\n\n# Load custom tasks from `lib/capistrano/tasks` if you have any defined\nDir.glob(\"lib/capistrano/tasks/*.rake\").each { |r| import r }\n\nrequire \"capistrano/scm/git\"\ninstall_plugin Capistrano::SCM::Git\n\n```\n\n```ruby\n#deploy.rb\n\n# config valid only for current version of Capistrano\nlock '3.7.1'\n\nserver \"#{ip_address}\", user: 'root', roles: %w{app db web}\n\nset :application, '#{app_name}'\nset :repo_url, 'git@bitbucket.org:shotay/#{app_name}.git'\n\nset :pty, true\n# rbenv\u306e\u8a2d\u5b9a\nset :rbenv_type, :user\nset :rbenv_ruby, '2.3.1'\n# set :rbenv_prefix, \"RBENV_ROOT=#{fetch(:rbenv_path)} RBENV_VERSION=#{fetch(:rbenv_ruby)} #{fetch(:rbenv_path)}/bin/rbenv exec\"\nset :rbenv_map_bins, %w{rake gem bundle ruby rails}\nset :rbenv_roles, :all\n\nset :deploy_to, '/var/www/#{app_name}'\nset :puma_rackup, -> { File.join(current_path, 'config.ru') }\nset :puma_state, \"#{shared_path}/tmp/pids/puma.state\"\nset :puma_pid, \"#{shared_path}/tmp/pids/puma.pid\"\nset :puma_bind, \"unix:#{shared_path}/tmp/sockets/puma.sock\"\nset :puma_conf, \"#{shared_path}/puma.rb\"\nset :puma_access_log, \"#{shared_path}/log/puma_error.log\"\nset :puma_error_log, \"#{shared_path}/log/puma_access.log\"\nset :puma_role, :app\nset :puma_env, fetch(:rack_env, fetch(:rails_env, 'production'))\nset :puma_threads, [0, 16]\nset :puma_workers, 0\nset :puma_init_active_record, true\nset :puma_preload_app, true\n\n\n# Default branch is :master\n# ask :branch, `git rev-parse --abbrev-ref HEAD`.chomp\n\n# Default deploy_to directory is /var/www/my_app_name\n\n\n# Default value for :scm is :git\n# set :scm, :git\n\n# Default value for :format is :pretty\n# set :format, :pretty\n\n# Default value for :log_level is :debug\nset :log_level, :warn\n\n# Default value for :pty is false\n# set :pty, true\n\n# Default value for :linked_files is []\n# set :linked_files, fetch(:linked_files, []).push('config/database.yml', 'config/secrets.yml')\n\n# Default value for linked_dirs is []\nset :linked_dirs, fetch(:linked_dirs, []).push('log', 'tmp/pids', 'tmp/cache', 'tmp/sockets', 'vendor/bundle', 'public/system')\n\n# Default value for default_env is {}\n# set :default_env, { path: \"/opt/ruby/bin:$PATH\" }\n\n# Default value for keep_releases is 5\nset :keep_releases, 3\n\nnamespace :puma do\n  desc 'Create Directories for Puma Pids and Socket'\n  task :make_dirs do\n    on roles(:app) do\n      execute \"mkdir /var/www/#{app_name}/shared/tmp/sockets -p\"\n      execute \"mkdir /var/www/#{app_name}/shared/tmp/pids -p\"\n    end\n  end\n  before :start, :make_dirs\nend\n\nnamespace :deploy do\n  desc \"Make sure local git is in sync with remote.\"\n  task :check_revision do\n    on roles(:app) do\n      unless `git rev-parse HEAD` == `git rev-parse origin/master`\n        puts \"WARNING: HEAD is not the same as origin/master\"\n        puts \"Run `git push` to sync changes.\"\n        exit\n      end\n    end\n  end\n\n  desc 'Initial Deploy'\n  task :initial do\n    on roles(:app) do\n      before 'deploy:restart', 'puma:start'\n      invoke 'deploy'\n    end\n  end\n\n  desc 'Restart application'\n  task :restart do\n    on roles(:app), in: :sequence, wait: 5 do\n      invoke 'puma:restart'\n    end\n  end\n\n  before :starting,     :check_revision\n  after  :finishing,    :compile_assets\n  after  :finishing,    :cleanup\nend\n\n\n\n```\n\n\n```\n$ bundle exec cap production deploy:initial\n```\n\n\n####\u3061\u3087\u3044\u30cf\u30de\u3063\u305f\u3068\u3053\u308d\n- bundle install\u306e\u90e8\u5206\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u6642\u4e0b\u8a18\u4e8c\u3064\u5b9f\u884c  \n\n```\nyum install gcc-c++\nyum install mysql-devel\n```\n\n- \u4ed6\u306e\u89e3\u8aac\u3067\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u305fset :scm, :git\u3092\u4f7f\u7528\u3059\u308b\u3068\u4e0a\u624b\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u305f\u3081\u3001Capfile\u306b\u4e0b\u8a18\u3092\u8ffd\u52a0\u3057\u305f\n\n```\nrequire \"capistrano/scm/git\"\ninstall_plugin Capistrano::SCM::Git\n```\n\n###\u30ed\u30b0\u306e\u78ba\u8a8d\n```\n$ tail -f /var/www/#{app_name}/shared/log/production.log\n```\n\n##\u307e\u3068\u3081\nVPS\u3092\u501f\u308a\u3066\u306e\u69cb\u7bc9\u304c\u521d\u3081\u3066\u3060\u3063\u305f\u306e\u3067\u7d50\u69cb\u30cf\u30de\u3063\u305f\u3002\n"}