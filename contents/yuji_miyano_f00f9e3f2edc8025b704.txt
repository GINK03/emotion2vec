{"context": "\n\n1. \u6982\u8981\n\u8907\u6570\u306e\u7269\u4f53\u3092\u533a\u5225\u3059\u308b\u305f\u3081\u306bNFC\u30bf\u30b0\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nNFC\u30bf\u30b0\u306e\u30b7\u30fc\u30eb\u304c10\u679a1000\u5186\u7a0b\u5ea6\u3067\u8ca9\u58f2\u3055\u308c\u3066\u304a\u308a\u6bd4\u8f03\u7684\u5b89\u4fa1\u306a\u306e\u3068\u3001\u96fb\u6c60\u4ea4\u63db\u306a\u3069\u306e\u624b\u9593\u304c\u4e0d\u8981\u306a\u305f\u3081\u63a1\u7528\u3057\u307e\u3057\u305f\u3002\nNFC\u30bf\u30b0\u3092\u8a8d\u8b58\u3059\u308b\u3068LED\u304c\u5149\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\u306f\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u8907\u6570\u306e\u30bf\u30b0\u3092\u8a8d\u8b58\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u624b\u3092\u52a0\u3048\u3066\u307f\u307e\u3057\u305f\u3002\nNFC\u30bf\u30b0\u3078\u306e\u66f8\u304d\u8fbc\u307f\u304c\u4e0a\u624b\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u6700\u521d\u304b\u3089\u5165\u3063\u3066\u3044\u308b\u60c5\u5831\u3092\u4f7f\u3063\u3066\u8b58\u5225\u3057\u3066\u3044\u307e\u3059\u304c\u3001Android\u30a2\u30d7\u30ea\u306a\u3069\u3067\u66f8\u304d\u8fbc\u307f\u304c\u3067\u304d\u308c\u3070\u3082\u3063\u3068\u697d\u306b\u3067\u304d\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n2. \u7528\u610f\u3059\u308b\u3082\u306e\n\n\u30b5\u30f3\u30ef\u30b5\u30d7\u30e9\u30a4-NFC\u30bf\u30b0-10\u679a\u5165\u308a-\u767d-MM-NFCT\nRFID-RC522 Amazon \u691c\u7d22:RC522\n\n\u5b89\u3044\u3082\u306e\u306f\u6d77\u5916\u767a\u9001\u306e\u3082\u306e\u3082\u3042\u308b\u305f\u3081\u90f5\u9001\u306b\u6642\u9593\u304c\u639b\u304b\u308a\u307e\u3059\n\n\nArduino UNO\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3001\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4(\u5fc5\u8981\u306b\u5fdc\u3058\u3066)\n\n\n3. \u4f5c\u696d\u74b0\u5883\n\nMacBook Air (13-inch, Mid 2012) & Mac OS 10.11.4\nArduino IDE 1.6.5\n\n\n4. \u53c2\u8003\u30b5\u30a4\u30c8\n\nArduino\u3067\u8fd1\u8ddd\u96e2\u7121\u7dda\u901a\u4fe1 RFID-RC522 NFC by \u30dc\u30af\u306b\u3082\u308f\u304b\u308b\u5730\u4e0a\u30c7\u30b8\u30bf\u30eb\n\nESP-WROOM-02\u3068RFID-RC522\u3067\u975e\u63a5\u89e6L\u30c1\u30ab - Qiita\nmiguelbalboa/rfid: Arduino RFID Library for MFRC522\n\n\n5. \u914d\u7dda\n\n\u4e0a\u8a18\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u8a18\u8f09\u306e\u901a\u308a\u306b\u63a5\u7d9a\u3059\u308b\n3.3V\u3068GND\u3082\u63a5\u7d9a\n\n\n\n\nSignal\nMFRC522 Reader/PCD Pin\nArduino Uno Pin\n\n\n\n\nRST/Reset\nRST\n9\n\n\nSPI SS\nSDA(SS)\n10\n\n\nSPI MOSI\nMOSI\n11 / ICSP-4\n\n\nSPI MISO\nMISO\n12 / ICSP-1\n\n\nSPI SCK\nSCK\n13 / ICSP-3\n\n\n\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3068\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\u3092\u4f7f\u3063\u3066\u914d\u7dda\u3057\u305f\u4f8b(\u5199\u771f\u3067\u306fRST\u304cArduino Uno\u306e5\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u307e\u3059\u304c9\u306b\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044)\n\n\n\n\n6. \u30d7\u30ed\u30b0\u30e9\u30e0\n\n6.1 MFRC552\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5c0e\u5165\n\n\u3053\u3061\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u307e\u3059\u3002\nmiguelbalboa/rfid: Arduino RFID Library for MFRC522\n\n\n6.1.1 Library Manager\u3092\u958b\u304f\n\n\n6.1.2 \u300cMFRC522\u300d\u3067\u691c\u7d22\u3057\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb(\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306e\u3082\u306e)\n\n\n6.2 \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u52d5\u304b\u3057\u3066\u30bf\u30b0\u306e\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\n\nrfid/DumpInfo.ino at master \u00b7 miguelbalboa/rfid\n\u5b9f\u884c\u3057\u3066\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u7acb\u3061\u4e0a\u3052\u3001NFC\u30bf\u30b0\u3092\u30ea\u30fc\u30c0\u30fc\u306b\u8fd1\u3065\u3051\u308b\u3068\u60c5\u5831\u304c\u8868\u793a\u3055\u308c\u308b\u3002(\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3067\u306f\u4e00\u5fdc\u6d88\u3057\u3066\u3044\u307e\u3059)\nCard UID\u304cNFC\u30bf\u30b0\u3054\u3068\u306b\u7570\u306a\u308b\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304f\n\n\n\n6.3 \u6307\u5b9a\u3057\u305f\u30bf\u30b0\u3092\u8a8d\u8b58\u3057\u3066\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306b\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\n\nDumpInfo.ino\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nDumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fCard ID\u3092#define UIDx \"xx xx xx xx xx xx xx\"\u306e\u3068\u3053\u308d\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\nNFC\u30bf\u30b0\u306eUID\u30922\u6841\u305a\u3064\u8aad\u307f\u53d6\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u9023\u7d50\u3057\u3066\"xx xx xx xx xx xx xx\"\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3066\u8a72\u5f53\u3059\u308bUID\u3068\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u3002 \n\n\nNFC_test.ino\n\n#include <SPI.h>\n#include <MFRC522.h>\n\n#define RST_PIN         9          // Configurable, see typical pin layout above\n#define SS_PIN          10         // Configurable, see typical pin layout above\n\n#define UID1 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID2 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID3 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID4 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID5 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID6 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID7 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n\nMFRC522 mfrc522(SS_PIN, RST_PIN);  // Create MFRC522 instance\n\nMFRC522::MIFARE_Key key;\n\nvoid setup() {\n  Serial.begin(9600);   // Initialize serial communications with the PC\n  while (!Serial);    // Do nothing if no serial port is opened (added for Arduinos based on ATMEGA32U4)\n  SPI.begin();      // Init SPI bus\n  mfrc522.PCD_Init();   // Init MFRC522\n  mfrc522.PCD_DumpVersionToSerial();  // Show details of PCD - MFRC522 Card Reader details\n  Serial.println(F(\"Scan PICC to see UID, SAK, type, and data blocks...\"));\n\n  dump_byte_array(key.keyByte, MFRC522::MF_KEY_SIZE);\n}\n\nvoid loop() {\n  // Look for new cards\n  if ( ! mfrc522.PICC_IsNewCardPresent()) {\n    return;\n  }\n\n  // Select one of the cards\n  if ( ! mfrc522.PICC_ReadCardSerial()) {\n    return;\n  }\n\n    String strBuf[mfrc522.uid.size];\n    for (byte i = 0; i < mfrc522.uid.size; i++) {\n      strBuf[i] =  String(mfrc522.uid.uidByte[i], HEX);  // (E)using a constant integer\n      if(strBuf[i].length() == 1){  // 1\u6841\u306e\u5834\u5408\u306f\u5148\u982d\u306b0\u3092\u8ffd\u52a0\n        strBuf[i] = \"0\" + strBuf[i];\n      }\n    }\n\n    String strUID = strBuf[0] + \" \" + strBuf[1] + \" \" + strBuf[2] + \" \" + strBuf[3] + \" \" + strBuf[4] + \" \" + strBuf[5] + \" \" + strBuf[6];\n    if ( strUID.equalsIgnoreCase(UID1) ){  // \u5927\u6587\u5b57\u5c0f\u6587\u5b57\u95a2\u4fc2\u306a\u304f\u6bd4\u8f03\n      Serial.println(\"1\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID2) ){\n      Serial.println(\"2\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID3) ){\n      Serial.println(\"3\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID4) ){\n      Serial.println(\"4\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID5) ){\n      Serial.println(\"5\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID6) ){\n      Serial.println(\"6\");\n    }\n    else if (strUID.equalsIgnoreCase(UID7) ){\n      Serial.println(\"7\");\n    }\n\n}\n\n/**\n * Helper routine to dump a byte array as hex values to Serial.\n */\nvoid dump_byte_array(byte *buffer, byte bufferSize) {\n    for (byte i = 0; i < bufferSize; i++) {\n        Serial.print(buffer[i] < 0x10 ? \" 0\" : \" \");\n        Serial.print(buffer[i], HEX);\n    }\n}\n\n\n\n7.\u52d5\u4f5c\u306e\u69d8\u5b50\n\n\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3067NFC\u30bf\u30b0\u306e1\u30682\u304c\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\u69d8\u5b50\u304c\u5206\u304b\u308a\u307e\u3059\u3002(YouTube\u3078\u306e\u30ea\u30f3\u30af\u306b\u306a\u3063\u3066\u3044\u307e\u3059)\n\n\n## 1. \u6982\u8981\n\u8907\u6570\u306e\u7269\u4f53\u3092\u533a\u5225\u3059\u308b\u305f\u3081\u306bNFC\u30bf\u30b0\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nNFC\u30bf\u30b0\u306e\u30b7\u30fc\u30eb\u304c10\u679a1000\u5186\u7a0b\u5ea6\u3067\u8ca9\u58f2\u3055\u308c\u3066\u304a\u308a\u6bd4\u8f03\u7684\u5b89\u4fa1\u306a\u306e\u3068\u3001\u96fb\u6c60\u4ea4\u63db\u306a\u3069\u306e\u624b\u9593\u304c\u4e0d\u8981\u306a\u305f\u3081\u63a1\u7528\u3057\u307e\u3057\u305f\u3002\nNFC\u30bf\u30b0\u3092\u8a8d\u8b58\u3059\u308b\u3068LED\u304c\u5149\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\u306f\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u8907\u6570\u306e\u30bf\u30b0\u3092\u8a8d\u8b58\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u624b\u3092\u52a0\u3048\u3066\u307f\u307e\u3057\u305f\u3002\nNFC\u30bf\u30b0\u3078\u306e\u66f8\u304d\u8fbc\u307f\u304c\u4e0a\u624b\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u6700\u521d\u304b\u3089\u5165\u3063\u3066\u3044\u308b\u60c5\u5831\u3092\u4f7f\u3063\u3066\u8b58\u5225\u3057\u3066\u3044\u307e\u3059\u304c\u3001Android\u30a2\u30d7\u30ea\u306a\u3069\u3067\u66f8\u304d\u8fbc\u307f\u304c\u3067\u304d\u308c\u3070\u3082\u3063\u3068\u697d\u306b\u3067\u304d\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## 2. \u7528\u610f\u3059\u308b\u3082\u306e\n - [\u30b5\u30f3\u30ef\u30b5\u30d7\u30e9\u30a4-NFC\u30bf\u30b0-10\u679a\u5165\u308a-\u767d-MM-NFCT](http://www.amazon.co.jp/dp/B00GXSGL5G)\n - RFID-RC522 [Amazon \u691c\u7d22:RC522](https://www.amazon.co.jp/s/field-keywords=RC522)\n    - \u5b89\u3044\u3082\u306e\u306f\u6d77\u5916\u767a\u9001\u306e\u3082\u306e\u3082\u3042\u308b\u305f\u3081\u90f5\u9001\u306b\u6642\u9593\u304c\u639b\u304b\u308a\u307e\u3059\n - Arduino UNO\n - \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3001\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4(\u5fc5\u8981\u306b\u5fdc\u3058\u3066)\n\n## 3. \u4f5c\u696d\u74b0\u5883\n - MacBook Air (13-inch, Mid 2012) & Mac OS 10.11.4\n - Arduino IDE 1.6.5\n\n## 4. \u53c2\u8003\u30b5\u30a4\u30c8\n - [Arduino\u3067\u8fd1\u8ddd\u96e2\u7121\u7dda\u901a\u4fe1 RFID-RC522 NFC by \u30dc\u30af\u306b\u3082\u308f\u304b\u308b\u5730\u4e0a\u30c7\u30b8\u30bf\u30eb\n](http://www.geocities.jp/bokunimowakaru/diy/arduino/rfid.html)\n - [ESP-WROOM-02\u3068RFID-RC522\u3067\u975e\u63a5\u89e6L\u30c1\u30ab - Qiita](http://qiita.com/daxanya1/items/b9c2b971a946c8bf063e)\n - [miguelbalboa/rfid: Arduino RFID Library for MFRC522](https://github.com/miguelbalboa/rfid)\n\n\n## 5. \u914d\u7dda\n - \u4e0a\u8a18\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u8a18\u8f09\u306e\u901a\u308a\u306b\u63a5\u7d9a\u3059\u308b\n - 3.3V\u3068GND\u3082\u63a5\u7d9a\n\n| Signal    |  MFRC522 Reader/PCD Pin | Arduino Uno Pin |\n|:----------|:------------------------|:----------------|\n| RST/Reset |  RST                    | 9            |\n| SPI SS    |  SDA(SS)                | 10           |\n| SPI MOSI  |  MOSI                   | 11 / ICSP-4  |\n| SPI MISO  |  MISO                   | 12 / ICSP-1  |\n| SPI SCK   |  SCK                    | 13 / ICSP-3  |\n\n - \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3068\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\u3092\u4f7f\u3063\u3066\u914d\u7dda\u3057\u305f\u4f8b(\u5199\u771f\u3067\u306fRST\u304cArduino Uno\u306e5\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u307e\u3059\u304c9\u306b\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044)\n![IMG_3342\u306e\u30b3\u30d2\u309a\u30fc.jpg](https://qiita-image-store.s3.amazonaws.com/0/94069/75a70170-ce2a-943e-60aa-06724b296f31.jpeg)\n\n\n## 6. \u30d7\u30ed\u30b0\u30e9\u30e0\n### 6.1 MFRC552\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5c0e\u5165\n - \u3053\u3061\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n - [miguelbalboa/rfid: Arduino RFID Library for MFRC522](https://github.com/miguelbalboa/rfid)\n\n#### 6.1.1 Library Manager\u3092\u958b\u304f\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-16 14.50.34.png](https://qiita-image-store.s3.amazonaws.com/0/94069/0f9d85e6-68be-90f4-11a8-04d280c1d6ca.png)\n\n#### 6.1.2 \u300cMFRC522\u300d\u3067\u691c\u7d22\u3057\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb(\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306e\u3082\u306e) \n \n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-16 14.52.19.png](https://qiita-image-store.s3.amazonaws.com/0/94069/b818351f-efc1-a0b0-9822-255da2ea5329.png)\n\n### 6.2 \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u52d5\u304b\u3057\u3066\u30bf\u30b0\u306e\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\n - [rfid/DumpInfo.ino at master \u00b7 miguelbalboa/rfid](https://github.com/miguelbalboa/rfid/blob/master/examples/DumpInfo/DumpInfo.ino)\n - \u5b9f\u884c\u3057\u3066\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u7acb\u3061\u4e0a\u3052\u3001NFC\u30bf\u30b0\u3092\u30ea\u30fc\u30c0\u30fc\u306b\u8fd1\u3065\u3051\u308b\u3068\u60c5\u5831\u304c\u8868\u793a\u3055\u308c\u308b\u3002(\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3067\u306f\u4e00\u5fdc\u6d88\u3057\u3066\u3044\u307e\u3059)\n - Card UID\u304cNFC\u30bf\u30b0\u3054\u3068\u306b\u7570\u306a\u308b\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304f\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-16 16.33.26.png](https://qiita-image-store.s3.amazonaws.com/0/94069/4994a947-d8dc-c0a6-8384-07b337bb6806.png)\n\n\n### 6.3 \u6307\u5b9a\u3057\u305f\u30bf\u30b0\u3092\u8a8d\u8b58\u3057\u3066\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306b\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\n - DumpInfo.ino\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n - DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fCard ID\u3092``` #define UIDx \"xx xx xx xx xx xx xx\" ```\u306e\u3068\u3053\u308d\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\n - NFC\u30bf\u30b0\u306eUID\u30922\u6841\u305a\u3064\u8aad\u307f\u53d6\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u9023\u7d50\u3057\u3066\"xx xx xx xx xx xx xx\"\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3066\u8a72\u5f53\u3059\u308bUID\u3068\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u3002 \n\n```java:NFC_test.ino\n\n#include <SPI.h>\n#include <MFRC522.h>\n\n#define RST_PIN         9          // Configurable, see typical pin layout above\n#define SS_PIN          10         // Configurable, see typical pin layout above\n\n#define UID1 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID2 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID3 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID4 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID5 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID6 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n#define UID7 \"xx xx xx xx xx xx xx\"  // DumpInfo.ino\u3067\u8aad\u307f\u53d6\u3063\u305fUID\u3092\u8a18\u5165\n\nMFRC522 mfrc522(SS_PIN, RST_PIN);  // Create MFRC522 instance\n\nMFRC522::MIFARE_Key key;\n\nvoid setup() {\n  Serial.begin(9600);   // Initialize serial communications with the PC\n  while (!Serial);    // Do nothing if no serial port is opened (added for Arduinos based on ATMEGA32U4)\n  SPI.begin();      // Init SPI bus\n  mfrc522.PCD_Init();   // Init MFRC522\n  mfrc522.PCD_DumpVersionToSerial();  // Show details of PCD - MFRC522 Card Reader details\n  Serial.println(F(\"Scan PICC to see UID, SAK, type, and data blocks...\"));\n\n  dump_byte_array(key.keyByte, MFRC522::MF_KEY_SIZE);\n}\n\nvoid loop() {\n  // Look for new cards\n  if ( ! mfrc522.PICC_IsNewCardPresent()) {\n    return;\n  }\n\n  // Select one of the cards\n  if ( ! mfrc522.PICC_ReadCardSerial()) {\n    return;\n  }\n\n    String strBuf[mfrc522.uid.size];\n    for (byte i = 0; i < mfrc522.uid.size; i++) {\n      strBuf[i] =  String(mfrc522.uid.uidByte[i], HEX);  // (E)using a constant integer\n      if(strBuf[i].length() == 1){  // 1\u6841\u306e\u5834\u5408\u306f\u5148\u982d\u306b0\u3092\u8ffd\u52a0\n        strBuf[i] = \"0\" + strBuf[i];\n      }\n    }\n\n    String strUID = strBuf[0] + \" \" + strBuf[1] + \" \" + strBuf[2] + \" \" + strBuf[3] + \" \" + strBuf[4] + \" \" + strBuf[5] + \" \" + strBuf[6];\n    if ( strUID.equalsIgnoreCase(UID1) ){  // \u5927\u6587\u5b57\u5c0f\u6587\u5b57\u95a2\u4fc2\u306a\u304f\u6bd4\u8f03\n      Serial.println(\"1\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID2) ){\n      Serial.println(\"2\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID3) ){\n      Serial.println(\"3\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID4) ){\n      Serial.println(\"4\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID5) ){\n      Serial.println(\"5\");\n    }\n    else if ( strUID.equalsIgnoreCase(UID6) ){\n      Serial.println(\"6\");\n    }\n    else if (strUID.equalsIgnoreCase(UID7) ){\n      Serial.println(\"7\");\n    }\n\n}\n\n/**\n * Helper routine to dump a byte array as hex values to Serial.\n */\nvoid dump_byte_array(byte *buffer, byte bufferSize) {\n    for (byte i = 0; i < bufferSize; i++) {\n        Serial.print(buffer[i] < 0x10 ? \" 0\" : \" \");\n        Serial.print(buffer[i], HEX);\n    }\n}\n```\n\n## 7.\u52d5\u4f5c\u306e\u69d8\u5b50\n - \u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3067NFC\u30bf\u30b0\u306e1\u30682\u304c\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\u69d8\u5b50\u304c\u5206\u304b\u308a\u307e\u3059\u3002(YouTube\u3078\u306e\u30ea\u30f3\u30af\u306b\u306a\u3063\u3066\u3044\u307e\u3059)\n\n[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/hJ_QIgeyijA/0.jpg)](http://www.youtube.com/watch?v=hJ_QIgeyijA)\n\n", "tags": ["Arduino", "NFC", "\u96fb\u5b50\u5de5\u4f5c"]}