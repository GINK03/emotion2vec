{"context": " More than 1 year has passed since last update.\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f\u82f1\u8a9e\u3060\u3057\u3001\nWEBGL\u306e\u8a18\u4e8b\u3070\u304b\u308a\u3067\u3001\u3084\u3063\u3068oF\u3067\u5642\u306eShader\u3092\u66f8\u3044\u3066\u52d5\u304b\u3059\u65b9\u6cd5\u304c\n\u308f\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\u3002\n\u3053\u3061\u3089\u306e\u9023\u8f09\u304c\u304a\u3059\u3059\u3081\u3067\u3059\u3002\noF\u6d41\u306b\u66f8\u304d\u76f4\u3057\u3066\u5b66\u3093\u3067\u307e\u3059\u3002\nhttp://qiita.com/doxas/items/00567758621bb506e584\nbin/data/\u306e\u4e2d\u306b\nshadersGL2/shader.frag\nshadersGL2/shader.vert\n\u3092\u8ffd\u52a0\n\nofApp.cpp\n#include \"ofApp.h\"\n\nofShader shader;\n\n//--------------------------------------------------------------\nvoid ofApp::setup(){\n    // #120\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3057\u307e\u3059\u3002\n    shader.load(\"shadersGL2/shader\");\n}\n\n//--------------------------------------------------------------\nvoid ofApp::draw(){\n\n    // begin()\u3068end()\u3067\u631f\u3093\u3060\u4e2d\u304c\u9069\u7528\u3055\u308c\u308b\n    shader.begin();\n\n    // time\u3068\u3044\u3046\u5909\u6570\u540d\u3067\u7b2c\u4e8c\u5f15\u6570\u306e\u5024\u3092\u9001\u308c\u308b\n    shader.setUniform1f(\"time\", ofGetElapsedTimef());\n\n    ofRect(0, 0, ofGetWidth(), ofGetHeight());\n\n    shader.end();\n\n}\n\n\n\nshader.vert\n#version 120\n\nvoid main()\n{       \n    gl_Position = ftransform();\n}\n\n\n\nshader.frag\n#version 120\n\nuniform float time;\n\nvoid main()\n{\n    // oF\u304b\u3089\u6765\u305ftime\u306b\u3088\u3063\u3066\u8272\u304b\u3048\u308b\n    float r = abs(sin(time));\n    float g = abs(cos(time));\n    float b = (r + g) / 2.0;\n    gl_FragColor = vec4(r, g, b, 1.0);\n\n    // gl_FragColor\u306b\u6700\u7d42\u7684\u306a\u8272\u3092\u7a81\u3063\u8fbc\u3080\n}\n\n\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f\u82f1\u8a9e\u3060\u3057\u3001\nWEBGL\u306e\u8a18\u4e8b\u3070\u304b\u308a\u3067\u3001\u3084\u3063\u3068oF\u3067\u5642\u306eShader\u3092\u66f8\u3044\u3066\u52d5\u304b\u3059\u65b9\u6cd5\u304c\n\u308f\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\u3002\n\n\u3053\u3061\u3089\u306e\u9023\u8f09\u304c\u304a\u3059\u3059\u3081\u3067\u3059\u3002\noF\u6d41\u306b\u66f8\u304d\u76f4\u3057\u3066\u5b66\u3093\u3067\u307e\u3059\u3002\nhttp://qiita.com/doxas/items/00567758621bb506e584\n\nbin/data/\u306e\u4e2d\u306b\nshadersGL2/shader.frag\nshadersGL2/shader.vert\n\u3092\u8ffd\u52a0\n\n\n```cpp:ofApp.cpp\n#include \"ofApp.h\"\n\nofShader shader;\n\n//--------------------------------------------------------------\nvoid ofApp::setup(){\n    // #120\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3057\u307e\u3059\u3002\n    shader.load(\"shadersGL2/shader\");\n}\n\n//--------------------------------------------------------------\nvoid ofApp::draw(){\n    \n    // begin()\u3068end()\u3067\u631f\u3093\u3060\u4e2d\u304c\u9069\u7528\u3055\u308c\u308b\n    shader.begin();\n    \n    // time\u3068\u3044\u3046\u5909\u6570\u540d\u3067\u7b2c\u4e8c\u5f15\u6570\u306e\u5024\u3092\u9001\u308c\u308b\n    shader.setUniform1f(\"time\", ofGetElapsedTimef());\n    \n    ofRect(0, 0, ofGetWidth(), ofGetHeight());\n    \n    shader.end();\n    \n}\n```\n\n```lang:shader.vert\n#version 120\n\nvoid main()\n{       \n\tgl_Position = ftransform();\n}\n```\n\n\n```lang:shader.frag\n#version 120\n\nuniform float time;\n\nvoid main()\n{\n    // oF\u304b\u3089\u6765\u305ftime\u306b\u3088\u3063\u3066\u8272\u304b\u3048\u308b\n    float r = abs(sin(time));\n    float g = abs(cos(time));\n    float b = (r + g) / 2.0;\n    gl_FragColor = vec4(r, g, b, 1.0);\n\n    // gl_FragColor\u306b\u6700\u7d42\u7684\u306a\u8272\u3092\u7a81\u3063\u8fbc\u3080\n}\n```\n", "tags": ["openFrameworks"]}