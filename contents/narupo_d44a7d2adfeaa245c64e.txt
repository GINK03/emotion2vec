{"tags": ["Django", "python3", "pandas"], "context": "\u3000Django\u306e\u30e2\u30c7\u30eb\u306e\u30c7\u30fc\u30bf\u3092CSV\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u307f\u305f\u304b\u3063\u305f\u3002\u6700\u521d\u3001csv\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u305f\u304c\u65e5\u672c\u8a9e\u304c\u3046\u307e\u304f\u30d1\u30fc\u30b9\u3067\u304d\u306a\u304b\u3063\u305f\u3002\u305d\u308c\u3067pandas\u3092\u4f7f\u3063\u3066\u307f\u305f\u3089\u3046\u307e\u304f\u30d1\u30fc\u30b9\u3057\u3066\u304f\u308c\u305f\u306e\u3067\u305d\u306e\u6642\u306e\u30b3\u30fc\u30c9\u3092\u4e00\u90e8\u6574\u5f62\u3057\u3066\u629c\u304d\u51fa\u3057\u3002\u30e2\u30c7\u30eb\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3092\u30d8\u30c3\u30c0\u30fc\u306b\u3057\u3066\u3001CSV\u30d5\u30a1\u30a4\u30eb\u3092dict\u306elist\u306b\u3057\u307e\u3059\u3002\u52d5\u4f5c\u30c6\u30b9\u30c8\u3057\u3066\u306a\u3044\u3067\u3059\u3002\n\ndependencies\nDjango (1.10)\nnumpy (1.11.3)\npandas (0.19.2)\n\n\nfrom django.db import models\n\nclass MyModel(models.Model):\n\n    myfield1 = models.CharField(max_length=128)\n    myfield2 = models.CharField(max_length=128)\n\n    @staticmethod\n    def get_all_field_names(ignores=()):\n        return [field.name for field in MyModel._meta.get_fields() if field.name not in ignores]\n\ndef parse_mymodel_csv_stream(fin):\n    import pandas as pd\n    import math\n\n    dicrows = []\n\n    for df in pd.read_csv(\n        filepath_or_buffer=fin,\n        sep=',',\n        names=MyModel.get_all_field_names(ignores=('id',)),\n        chunksize=1,\n        ):\n\n        srcrow = df.to_dict(orient='records')[0]\n        dicrow = {}\n        for k in srcrow:\n            if type(srcrow[k]) == float and math.isnan(srcrow[k]):\n                continue # ignore nan field in data frame \n            dicrow[k] = srcrow[k]\n\n        dicrows.append(dicrow)\n\n    return dicrows\n\ndef parse_mymodel_csv_file(fname):\n    with open(fname, 'r') as fin:\n        dicrows = parse_mymodel_csv_stream(fin)\n        print(dicrows)\n\n\n\u3000Django\u306e\u30e2\u30c7\u30eb\u306e\u30c7\u30fc\u30bf\u3092CSV\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u307f\u305f\u304b\u3063\u305f\u3002\u6700\u521d\u3001`csv`\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u305f\u304c\u65e5\u672c\u8a9e\u304c\u3046\u307e\u304f\u30d1\u30fc\u30b9\u3067\u304d\u306a\u304b\u3063\u305f\u3002\u305d\u308c\u3067`pandas`\u3092\u4f7f\u3063\u3066\u307f\u305f\u3089\u3046\u307e\u304f\u30d1\u30fc\u30b9\u3057\u3066\u304f\u308c\u305f\u306e\u3067\u305d\u306e\u6642\u306e\u30b3\u30fc\u30c9\u3092\u4e00\u90e8\u6574\u5f62\u3057\u3066\u629c\u304d\u51fa\u3057\u3002\u30e2\u30c7\u30eb\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3092\u30d8\u30c3\u30c0\u30fc\u306b\u3057\u3066\u3001CSV\u30d5\u30a1\u30a4\u30eb\u3092dict\u306elist\u306b\u3057\u307e\u3059\u3002\u52d5\u4f5c\u30c6\u30b9\u30c8\u3057\u3066\u306a\u3044\u3067\u3059\u3002\n\n\n```:dependencies\nDjango (1.10)\nnumpy (1.11.3)\npandas (0.19.2)\n```\n\n```py3\nfrom django.db import models\n\nclass MyModel(models.Model):\n\n    myfield1 = models.CharField(max_length=128)\n    myfield2 = models.CharField(max_length=128)\n\n    @staticmethod\n    def get_all_field_names(ignores=()):\n        return [field.name for field in MyModel._meta.get_fields() if field.name not in ignores]\n\ndef parse_mymodel_csv_stream(fin):\n    import pandas as pd\n    import math\n\n    dicrows = []\n\n    for df in pd.read_csv(\n        filepath_or_buffer=fin,\n        sep=',',\n        names=MyModel.get_all_field_names(ignores=('id',)),\n        chunksize=1,\n        ):\n    \n        srcrow = df.to_dict(orient='records')[0]\n        dicrow = {}\n        for k in srcrow:\n            if type(srcrow[k]) == float and math.isnan(srcrow[k]):\n                continue # ignore nan field in data frame \n            dicrow[k] = srcrow[k]\n\n        dicrows.append(dicrow)\n\n    return dicrows\n\ndef parse_mymodel_csv_file(fname):\n    with open(fname, 'r') as fin:\n        dicrows = parse_mymodel_csv_stream(fin)\n        print(dicrows)\n\n```\n"}