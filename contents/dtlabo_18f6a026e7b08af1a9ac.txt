{"context": "\n\n\u6982\u8981\nanyenv \u3092\u4f7f\u3063\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u30ef\u30a4\u30c9\u306a pyenv \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3081\u306e Itamae \u30ec\u30b7\u30d4\u3067\u3059\u3002\nanyenv \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f Itamae \u3067 \u30b7\u30b9\u30c6\u30e0\u30ef\u30a4\u30c9\u306a anyenv \u3092\u7c21\u5358\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30ec\u30b7\u30d4\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u30bd\u30fc\u30b9\nGitHub\u306b\u30bd\u30fc\u30b9\u3092\u7f6e\u3044\u3066\u307e\u3059\u3002\nhttps://github.com/dtlabo/itamae-anyenv-pyenv\n\n\u69cb\u6210\n$ tree\n\n.\n\u251c\u2500\u2500 Gemfile\n\u251c\u2500\u2500 Gemfile.lock\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 Rakefile\n\u251c\u2500\u2500 recipes\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pyenv.rb\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 remote_files\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 anyenv.sh\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 rbenv.sh\n\u2514\u2500\u2500 spec\n    \u251c\u2500\u2500 dev-temp\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 pyenv_spec.rb\n    \u2514\u2500\u2500 spec_helper.rb\n\n\nSSH \u30db\u30b9\u30c8\u4f5c\u6210\n\u30db\u30b9\u30c8\u540d\u306f\u4efb\u610f\u3002\u3053\u3053\u3067\u306f dev-temp \u3068\u3059\u308b\u3002\n$ vim ~/.ssh/config\n\nHost dev-temp\n  HostName 192.168.33.10\n  User vagrant\n  IdentityFile /Users/\u00d7\u00d7\u00d7\u00d7/vagrant/dev-django/.vagrant/machines/default/virtualbox/private_key\n\n\n\u30d5\u30a1\u30a4\u30eb\u8a2d\u7f6e\n\nanyenv.sh\n$ vim recipes/remote_files/anyenv.sh\n\n\nanyenv.sh\nexport ANYENV_ROOT=\"/usr/local/anyenv\"\nexport PATH=\"${ANYENV_ROOT}/bin:${PATH}\"\neval \"$(anyenv init --no-rehash -)\"\n\n\n\nrbenv.sh\n$ vim recipes/remote_files/pyenv.sh\n\n\nrbenv.sh\nexport PYENV_ROOT=\"/usr/local/anyenv/envs/pyenv\"\nexport PATH=\"${PYENV_ROOT}/bin:${PATH}\"\neval \"$(pyenv init --no-rehash -)\"\n\n\n\n\u30ec\u30b7\u30d4\n$ vim recipes/pyenv.rb\n\n\nrbenv.rb\nANYENV_SCRIPT = \"/etc/profile.d/anyenv.sh\"\n\nexecute \"install pyenv\" do\n  command \"source #{ANYENV_SCRIPT}; anyenv install pyenv\"\nend\n\n\nPYENV_SCRIPT = \"/etc/profile.d/pyenv.sh\"\n\nremote_file PYENV_SCRIPT do\n  source \"remote_files/pyenv.sh\"\nend\n\nexecute \"set owner and mode for #{PYENV_SCRIPT} \" do\n  command \"chown root: #{PYENV_SCRIPT}; chmod 644 #{PYENV_SCRIPT}\"\n  user \"root\"\nend\n\n\n\nServerspec\n$ vim spec/dev-temp/pyenv_spec.rb\n\n\npyenv_spec.rb\nrequire 'spec_helper'\n\ndescribe command('which pyenv') do\n  let(:disable_sudo) { true }\n  its(:exit_status) { should eq 0 }\nend\n\n\n\nspec\u5b9f\u884c\n$ bundle exec rake spec\n\n\u7d50\u679c\u306f\u8d64\uff08\u5931\u6557\uff09\u3002\n\n\u30ec\u30b7\u30d4 dry-run\n$ bundle exec itamae ssh -h dev-temp -n recipes/pyenv.rb\n\n\n\u30ec\u30b7\u30d4\u5b9f\u884c\n$ rbenv exec bundle exec itamae ssh -h dev-temp recipes/pyenv.rb\n\n\nspec\u518d\u5b9f\u884c\n$ bundle exec rake spec\n\n\u5b9f\u884c\u7d50\u679c\u304c\u7dd1\uff08\u6210\u529f\uff09\u306a\u3089OK!\n\n\u78ba\u8a8d\nssh\u3067\u30b5\u30fc\u30d0\u30fc\u306b\u30ed\u30b0\u30a4\u30f3\n$ ssh dev-temp\n\n\n\u30a2\u30e9\u30fc\u30c8\nmkdir: cannot create directory `/usr/local/anyenv/envs/pyenv/shims': Permission denied\nmkdir: cannot create directory `/usr/local/anyenv/envs/pyenv/versions': Permission denied\nmkdir: cannot create directory `/usr/local/anyenv/envs/pyenv/shims': Permission denied\nmkdir: cannot create directory `/usr/local/anyenv/envs/pyenv/versions': Permission denied\n\n\n\u30a2\u30e9\u30fc\u30c8\u3092\u6c17\u306b\u305b\u305a root \u30e6\u30fc\u30b6\u30fc\u306b\u306a\u308c\u3070\u89e3\u6c7a\n$ sudo su\n# ls -la /usr/local/anyenv/envs/pyenv\n\n\u5404\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3067\u304d\u3066\u3044\u308b\u3002\n\npyenv \u52d5\u4f5c\u78ba\u8a8d\n# pyenv\n\npyenv 1.0.0-3-ge23b9e9\nUsage: pyenv <command> [<args>]\n\nSome useful pyenv commands are:\n   commands    List all available pyenv commands\n   local       Set or show the local application-specific Python version\n   global      Set or show the global Python version\n   shell       Set or show the shell-specific Python version\n   install     Install a Python version using python-build\n   uninstall   Uninstall a specific Python version\n   rehash      Rehash pyenv shims (run this after installing executables)\n   version     Show the current Python version and its origin\n   versions    List all Python versions available to pyenv\n   which       Display the full path to an executable\n   whence      List all Python versions that contain the given executable\n\nSee `pyenv help <command>' for information on a specific command.\nFor full documentation, see: https://github.com/yyuu/pyenv#readme\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n# \u6982\u8981\n\nanyenv \u3092\u4f7f\u3063\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u30ef\u30a4\u30c9\u306a pyenv \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3081\u306e Itamae \u30ec\u30b7\u30d4\u3067\u3059\u3002  \nanyenv \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f [Itamae \u3067 \u30b7\u30b9\u30c6\u30e0\u30ef\u30a4\u30c9\u306a anyenv \u3092\u7c21\u5358\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30ec\u30b7\u30d4](http://qiita.com/dtlabo/items/cf8b69f668f75d8a1ec2)\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\n# \u30bd\u30fc\u30b9\n\nGitHub\u306b\u30bd\u30fc\u30b9\u3092\u7f6e\u3044\u3066\u307e\u3059\u3002\nhttps://github.com/dtlabo/itamae-anyenv-pyenv\n\n\n# \u69cb\u6210\n\n```\n$ tree\n```\n\n```\n.\n\u251c\u2500\u2500 Gemfile\n\u251c\u2500\u2500 Gemfile.lock\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 Rakefile\n\u251c\u2500\u2500 recipes\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pyenv.rb\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 remote_files\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 anyenv.sh\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 rbenv.sh\n\u2514\u2500\u2500 spec\n    \u251c\u2500\u2500 dev-temp\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 pyenv_spec.rb\n    \u2514\u2500\u2500 spec_helper.rb\n```\n\n\n# SSH \u30db\u30b9\u30c8\u4f5c\u6210\n\n\u30db\u30b9\u30c8\u540d\u306f\u4efb\u610f\u3002\u3053\u3053\u3067\u306f dev-temp \u3068\u3059\u308b\u3002\n\n```\n$ vim ~/.ssh/config\n```\n\n```\nHost dev-temp\n  HostName 192.168.33.10\n  User vagrant\n  IdentityFile /Users/\u00d7\u00d7\u00d7\u00d7/vagrant/dev-django/.vagrant/machines/default/virtualbox/private_key\n```\n\n\n# \u30d5\u30a1\u30a4\u30eb\u8a2d\u7f6e\n\n## anyenv.sh\n\n```\n$ vim recipes/remote_files/anyenv.sh\n```\n\n```anyenv.sh\nexport ANYENV_ROOT=\"/usr/local/anyenv\"\nexport PATH=\"${ANYENV_ROOT}/bin:${PATH}\"\neval \"$(anyenv init --no-rehash -)\"\n```\n\n## rbenv.sh\n\n\n```\n$ vim recipes/remote_files/pyenv.sh\n```\n\n```rbenv.sh\nexport PYENV_ROOT=\"/usr/local/anyenv/envs/pyenv\"\nexport PATH=\"${PYENV_ROOT}/bin:${PATH}\"\neval \"$(pyenv init --no-rehash -)\"\n```\n\n\n# \u30ec\u30b7\u30d4\n\n```\n$ vim recipes/pyenv.rb\n```\n\n```ruby:rbenv.rb\nANYENV_SCRIPT = \"/etc/profile.d/anyenv.sh\"\n\nexecute \"install pyenv\" do\n  command \"source #{ANYENV_SCRIPT}; anyenv install pyenv\"\nend\n\n\nPYENV_SCRIPT = \"/etc/profile.d/pyenv.sh\"\n\nremote_file PYENV_SCRIPT do\n  source \"remote_files/pyenv.sh\"\nend\n\nexecute \"set owner and mode for #{PYENV_SCRIPT} \" do\n  command \"chown root: #{PYENV_SCRIPT}; chmod 644 #{PYENV_SCRIPT}\"\n  user \"root\"\nend\n```\n\n# Serverspec\n\n```\n$ vim spec/dev-temp/pyenv_spec.rb\n```\n\n```ruby:pyenv_spec.rb\nrequire 'spec_helper'\n\ndescribe command('which pyenv') do\n  let(:disable_sudo) { true }\n  its(:exit_status) { should eq 0 }\nend\n```\n\n# spec\u5b9f\u884c\n\n```\n$ bundle exec rake spec\n```\n\u7d50\u679c\u306f\u8d64\uff08\u5931\u6557\uff09\u3002\n\n\n# \u30ec\u30b7\u30d4 dry-run\n\n```\n$ bundle exec itamae ssh -h dev-temp -n recipes/pyenv.rb\n```\n\n# \u30ec\u30b7\u30d4\u5b9f\u884c\n\n```\n$ rbenv exec bundle exec itamae ssh -h dev-temp recipes/pyenv.rb\n```\n\n\n# spec\u518d\u5b9f\u884c\n\n```\n$ bundle exec rake spec\n```\n\u5b9f\u884c\u7d50\u679c\u304c\u7dd1\uff08\u6210\u529f\uff09\u306a\u3089OK!\n\n\n\n# \u78ba\u8a8d\n\nssh\u3067\u30b5\u30fc\u30d0\u30fc\u306b\u30ed\u30b0\u30a4\u30f3\n\n```\n$ ssh dev-temp\n```\n\n\n## \u30a2\u30e9\u30fc\u30c8\n\n```\nmkdir: cannot create directory `/usr/local/anyenv/envs/pyenv/shims': Permission denied\nmkdir: cannot create directory `/usr/local/anyenv/envs/pyenv/versions': Permission denied\nmkdir: cannot create directory `/usr/local/anyenv/envs/pyenv/shims': Permission denied\nmkdir: cannot create directory `/usr/local/anyenv/envs/pyenv/versions': Permission denied\n```\n\n## \u30a2\u30e9\u30fc\u30c8\u3092\u6c17\u306b\u305b\u305a root \u30e6\u30fc\u30b6\u30fc\u306b\u306a\u308c\u3070\u89e3\u6c7a\n\n```\n$ sudo su\n# ls -la /usr/local/anyenv/envs/pyenv\n```\n\u5404\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3067\u304d\u3066\u3044\u308b\u3002\n\n## pyenv \u52d5\u4f5c\u78ba\u8a8d\n\n```\n# pyenv\n```\n\n```\npyenv 1.0.0-3-ge23b9e9\nUsage: pyenv <command> [<args>]\n\nSome useful pyenv commands are:\n   commands    List all available pyenv commands\n   local       Set or show the local application-specific Python version\n   global      Set or show the global Python version\n   shell       Set or show the shell-specific Python version\n   install     Install a Python version using python-build\n   uninstall   Uninstall a specific Python version\n   rehash      Rehash pyenv shims (run this after installing executables)\n   version     Show the current Python version and its origin\n   versions    List all Python versions available to pyenv\n   which       Display the full path to an executable\n   whence      List all Python versions that contain the given executable\n\nSee `pyenv help <command>' for information on a specific command.\nFor full documentation, see: https://github.com/yyuu/pyenv#readme\n```\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["Ruby", "serverspec", "Python", "itamae"]}