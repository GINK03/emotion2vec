{"context": " More than 1 year has passed since last update.Reactive\u3063\u3066\u306a\u306b\uff1f\u3063\u3066\u65b9\u306f Reactive \u3068\u306f\u4f55\u304b\uff1f \u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3061\u3087\u3063\u3068\u305a\u3064\u52a0\u7b46\u4fee\u6b63\u3057\u306a\u304c\u3089Reactive Programming\u3092\u8a66\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4e00\u7dd2\u306b\u52c9\u5f37\u3057\u3066\u4e0b\u3055\u308b\u65b9\u3068\u304b\u3044\u305f\u3089 Twitter::PitneS \u307e\u3067\u9023\u7d61\u4e0b\u3055\u308b\u3068\u3046\u308c\u3057\u30fc\u3067\u3059\u3002\n\n1. Ping, Pong\n\nemit\n\u53c2\u8003\u8cc7\u65992\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u30bd\u30fc\u30b9\u304cExample Code\u3068\u3057\u3066\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nEchoer.pm\npackage Echoer;\n\nuse Moose;\nextends 'Reflex::Base';\n\nsub ping {\n    my ($self, $args) = @_;\n    print \"echoer was pinged!\\n\";\n    $self->emit( -name => \"pong\" );\n}\n\n\nMoose\u306f\u3001\u5b8c\u5168\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b7\u30b9\u30c6\u30e0\u3092Perl5\u306b\u63d0\u4f9b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002Moose\u3067\u4f7f\u7528\u3055\u308c\u308bAttributes\u306f\u3053\u3061\u3089\u3067\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\u4e00\u4f8b\u3092\u6319\u3052\u308b\u3068\u3001\u4f8b\u3048\u3070\u578b\u306fVar is a Str\u306e\u3088\u3046\u306bisa\u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u3001\u5c5e\u6027\u306fVar is read-only\u306e\u3088\u3046\u306bis\u3092\u7528\u3044\u3066\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001extends\u306f\u3088\u304f\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7d99\u627f\u306b\u5229\u7528\u3055\u308c\u308b\u95a2\u6570\u3067\u3059\u3002Moose\u3092use\u3057\u3066\u3044\u308b\u306e\u3067\u4f7f\u3048\u3066\u3044\u307e\u3059\u3002\n\nExample_of_Moose\n  package User;\n  use Moose;\n  extends 'Person';\n  has 'password' => (\n      is  => 'rw',\n      isa => 'Str',\n  );\n\n\nExample Code\u306b\u3088\u308b\u3068Echoer\u306fping\u95a2\u6570\u3092\u6301\u3061\u3001\u305d\u3053\u3067\u306f Reflex::Role::Reactive\u3067\u5b9a\u7fa9\u3055\u308c\u308bemit\u95a2\u6570\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\nemit\u3068\u306f\u4f55\u304b\u3002\u3053\u3053\u306b\u3088\u308c\u3070\u3001watch() allows one object (the watcher) to register interest in events emitted by another.\u3068\u3042\u308a\u3001watcher\u306b\u3088\u3063\u3066\u89b3\u6e2c\u3055\u308c\u308bevent\u306e\u4e00\u7a2e\u3060\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\nreact\n\u3068\u3053\u308d\u3067Pinger\u5074\u306eExample Code\u3067\u306f\u3001\u578b\u304cEchoer\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024sub { Echoer->new() }\u306e\u8aad\u307f\u66f8\u304d\u53ef\u80fd\u306a\uff08has\u3067\u306f\u306a\u304fwatches\u3092\u7528\u3044\u3066\u3044\u308b\u305f\u3081\uff09echoer\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n\nPinger.pm\npackage Pinger;\n\nuse Moose;\nextends 'Reflex::Base';\n\nuse Reflex::Trait::Watched qw(watches);\n\nwatches echoer => (\n    isa => 'Echoer',\n    default => sub { Echoer->new() },\n);\n\nsub BUILD {\n    my $self = shift;\n    $self->echoer->ping;\n}\n\nsub on_echoer_pong {\n    my $self = shift;\n    print \"Pinger got echoer's pong!\\n\";\n    $self->echoer->ping();\n}\n\n\n\u5ba3\u8a00\u3055\u308c\u305fechoer\u306fPinger\u306eBUILD\u6642\u306b\u547c\u3070\u308c\u3001\u7d50\u679c\u3068\u3057\u3066ping\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u3001\u5192\u982d\u3067\u3082\u8a18\u3057\u305f\u3088\u3046\u306bping\u306fpong\u3092emit\u3059\u308b\u305f\u3081\u3001Pinger\u306eon_(\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d)_(\u5f53\u8a72\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cemit\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u540d) { ... }\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u7d50\u679c\u3068\u3057\u3066\u3001\nPitneS$ perl -e \"use Pinger; use Echoer; Pinger->new()->run_all();\"\nechoer was pinged!\nPinger got echoer's pong!\nechoer was pinged!\nPinger got echoer's pong!\nechoer was pinged!\nPinger got echoer's pong!\nechoer was pinged!\n...\n\n\u3068\u3044\u3046\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u306a\u304a run_all(); \u306f\u3053\u3061\u3089\u306b\u3088\u308c\u3070 run_all(): Run all active Reflex objects until they destruct. \u3001\u3064\u307e\u308a\u751f\u6210\u3057\u305fReflex\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5b9f\u884c\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\n\u53c2\u8003\u8cc7\u6599\n\nURL\n\n\nReactive \u3068\u306f\u4f55\u304b\uff1f 18Aug2015, by @okapies.\n\nReflex - Class library for flexible, reactive programs. 21Apr2013, by Rocco Caputo.\n\nMoose - A postmodern object system for Perl 5 2006, by Infinity Interactive, Inc.\n\nMoose::Manual - Moose\u3068\u306f\u306a\u306b\u304b\u3001\u3069\u3046\u3084\u3063\u3066\u4f7f\u3046\u306e\u304b 2008-2009 by Infinity Interactive, Inc.\n\nReactive\u3063\u3066\u306a\u306b\uff1f\u3063\u3066\u65b9\u306f [Reactive \u3068\u306f\u4f55\u304b\uff1f](https://speakerdeck.com/okapies/reactive-tohahe-ka-number-reactive-shinjuku) \u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3061\u3087\u3063\u3068\u305a\u3064\u52a0\u7b46\u4fee\u6b63\u3057\u306a\u304c\u3089Reactive Programming\u3092\u8a66\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4e00\u7dd2\u306b\u52c9\u5f37\u3057\u3066\u4e0b\u3055\u308b\u65b9\u3068\u304b\u3044\u305f\u3089 Twitter::[PitneS](https://twitter.com/ChisSinclar) \u307e\u3067\u9023\u7d61\u4e0b\u3055\u308b\u3068\u3046\u308c\u3057\u30fc\u3067\u3059\u3002\n\n#1. Ping, Pong\n## emit\n[\u53c2\u8003\u8cc7\u65992](http://search.cpan.org/~rcaputo/Reflex-0.099/lib/Reflex.pm)\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u30bd\u30fc\u30b9\u304cExample Code\u3068\u3057\u3066\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```perl:Echoer.pm\npackage Echoer;\n\nuse Moose;\nextends 'Reflex::Base';\n\nsub ping {\n\tmy ($self, $args) = @_;\n\tprint \"echoer was pinged!\\n\";\n\t$self->emit( -name => \"pong\" );\n}\n```\n\nMoose\u306f\u3001\u5b8c\u5168\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b7\u30b9\u30c6\u30e0\u3092Perl5\u306b\u63d0\u4f9b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002Moose\u3067\u4f7f\u7528\u3055\u308c\u308bAttributes\u306f[\u3053\u3061\u3089](http://perldoc.jp/docs/modules/Moose/Manual/Attributes.pod)\u3067\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\u4e00\u4f8b\u3092\u6319\u3052\u308b\u3068\u3001\u4f8b\u3048\u3070\u578b\u306f`Var is a Str`\u306e\u3088\u3046\u306b`isa`\u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u3001\u5c5e\u6027\u306f`Var is read-only`\u306e\u3088\u3046\u306b`is`\u3092\u7528\u3044\u3066\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001`extends`\u306f\u3088\u304f\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7d99\u627f\u306b\u5229\u7528\u3055\u308c\u308b\u95a2\u6570\u3067\u3059\u3002Moose\u3092use\u3057\u3066\u3044\u308b\u306e\u3067\u4f7f\u3048\u3066\u3044\u307e\u3059\u3002\n\n\n```perl:Example_of_Moose\n  package User;\n  use Moose;\n  extends 'Person';\n  has 'password' => (\n      is  => 'rw',\n      isa => 'Str',\n  );\n```\n\nExample Code\u306b\u3088\u308b\u3068Echoer\u306fping\u95a2\u6570\u3092\u6301\u3061\u3001\u305d\u3053\u3067\u306f `Reflex::Role::Reactive`\u3067\u5b9a\u7fa9\u3055\u308c\u308bemit\u95a2\u6570\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\nemit\u3068\u306f\u4f55\u304b\u3002[\u3053\u3053](https://metacpan.org/pod/Reflex::Role::Reactive)\u306b\u3088\u308c\u3070\u3001`watch() allows one object (the watcher) to register interest in events emitted by another.`\u3068\u3042\u308a\u3001watcher\u306b\u3088\u3063\u3066\u89b3\u6e2c\u3055\u308c\u308bevent\u306e\u4e00\u7a2e\u3060\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n#react\n\u3068\u3053\u308d\u3067Pinger\u5074\u306eExample Code\u3067\u306f\u3001\u578b\u304c`Echoer`\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024`sub { Echoer->new() }`\u306e\u8aad\u307f\u66f8\u304d\u53ef\u80fd\u306a\uff08`has`\u3067\u306f\u306a\u304f`watches`\u3092\u7528\u3044\u3066\u3044\u308b\u305f\u3081\uff09echoer\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n\n```perl:Pinger.pm\npackage Pinger;\n\nuse Moose;\nextends 'Reflex::Base';\n\nuse Reflex::Trait::Watched qw(watches);\n\nwatches echoer => (\n\tisa => 'Echoer',\n\tdefault => sub { Echoer->new() },\n);\n\nsub BUILD {\n\tmy $self = shift;\n\t$self->echoer->ping;\n}\n\nsub on_echoer_pong {\n\tmy $self = shift;\n\tprint \"Pinger got echoer's pong!\\n\";\n\t$self->echoer->ping();\n}\n```\n\n\u5ba3\u8a00\u3055\u308c\u305fechoer\u306fPinger\u306eBUILD\u6642\u306b\u547c\u3070\u308c\u3001\u7d50\u679c\u3068\u3057\u3066ping\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u3001\u5192\u982d\u3067\u3082\u8a18\u3057\u305f\u3088\u3046\u306bping\u306fpong\u3092emit\u3059\u308b\u305f\u3081\u3001Pinger\u306e`on_(\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d)_(\u5f53\u8a72\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cemit\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u540d) { ... }`\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u7d50\u679c\u3068\u3057\u3066\u3001\n\n```shell-session\nPitneS$ perl -e \"use Pinger; use Echoer; Pinger->new()->run_all();\"\nechoer was pinged!\nPinger got echoer's pong!\nechoer was pinged!\nPinger got echoer's pong!\nechoer was pinged!\nPinger got echoer's pong!\nechoer was pinged!\n...\n```\n\n\u3068\u3044\u3046\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u306a\u304a `run_all();` \u306f[\u3053\u3061\u3089](https://metacpan.org/pod/Reflex::Role::Reactive)\u306b\u3088\u308c\u3070 `run_all(): Run all active Reflex objects until they destruct.` \u3001\u3064\u307e\u308a\u751f\u6210\u3057\u305fReflex\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5b9f\u884c\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\n#\u53c2\u8003\u8cc7\u6599\n##URL\n1. [Reactive \u3068\u306f\u4f55\u304b\uff1f](https://speakerdeck.com/okapies/reactive-tohahe-ka-number-reactive-shinjuku) 18Aug2015, by @okapies.\n- [Reflex - Class library for flexible, reactive programs.](http://search.cpan.org/~rcaputo/Reflex-0.099/lib/Reflex.pm) 21Apr2013, by Rocco Caputo.\n- [Moose - A postmodern object system for Perl 5](http://search.cpan.org/~ether/Moose-2.1600/lib/Moose.pm) 2006, by Infinity Interactive, Inc.\n- [Moose::Manual - Moose\u3068\u306f\u306a\u306b\u304b\u3001\u3069\u3046\u3084\u3063\u3066\u4f7f\u3046\u306e\u304b](http://perldoc.jp/docs/modules/Moose/Manual.pod) 2008-2009 by Infinity Interactive, Inc.\n", "tags": ["React", "reactive", "Perl", "Moose", "Reflex"]}