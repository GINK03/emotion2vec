{"tags": ["homebrew", "Ruby", "Python", "Node.js", "CocoaPods"], "context": "\n\nItems to install\n\nHomebrew\nJDK\nCommand Line Tools\nMySQL\nGit\nRuby, rbenv, rails\nNode.js, nvm, grunt, bower\nPython, virtualenv, django\nCocoaPods\n\n\nInstall JDK\nJava SE Development Kit 8 Downloads\n\n$ java -version\njava version \"1.8.0_25\"\nJava(TM) SE Runtime Environment (build 1.8.0_25-b17)\nJava HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)\n\n\nInstall Command Line Tools for Xcode\nCommand Line Tools (OS X 10.10) for Xcode - Xcode 6.1\n\nInstall homebrew\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n=> This script will install:\n/usr/local/bin/brew\n/usr/local/Library/...\n/usr/local/share/man/man1/brew.1\n .\n .\n .\n$ brew doctor\nYour system is ready to brew.\n$ brew update\nAlready up-to-date.\n$ brew -v\nHomebrew 0.9.5\n\n\nInstall MySQL\n$ brew install mysql\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/mysql-5.6.20_1.mavericks.bottle.tar.gz\nAlready downloaded: /Library/Caches/Homebrew/mysql-5.6.20_1.mavericks.bottle.tar.gz\n .\n .\n .\n\n\nInstall Git\n$ git --version\ngit version 1.9.3 (Apple Git-50)\n$ brew install git\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/git-2.1.1.mavericks.bottle.tar.gz\n .\n .\n .\n$ brew doctor\nPlease note that these warnings are just used to help the Homebrew maintainers\nwith debugging if you file an issue. If everything you use Homebrew for is\nworking fine: please don't worry and just ignore them. Thanks!\n\nWarning: /usr/bin occurs before /usr/local/bin\nThis means that system-provided programs will be used instead of those\nprovided by Homebrew. The following tools exist at both paths:\n\n    git\n    git-cvsserver\n    git-receive-pack\n    git-shell\n    git-upload-archive\n    git-upload-pack\n\nConsider setting your PATH so that /usr/local/bin\noccurs before /usr/bin. Here is a one-liner:\n    echo export PATH='/usr/local/bin:$PATH' >> ~/.bash_profile\n$ echo export PATH='/usr/local/bin:$PATH' >> ~/.bash_profile\n$ source ~/.bash_profile\n$ brew unlink git && brew link git\n$ git --version\ngit version 2.1.2\n\n\nInstall OpenSSL\n$ brew install openssl\nUninstalling /usr/local/Cellar/openssl/1.0.1i...\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/openssl-1.0.1i.mavericks.bottle.3.tar.gz\n .\n .\n .\n$ which openssl\n/usr/bin/openssl\n$ brew link --force openssl\nLinking /usr/local/Cellar/openssl/1.0.1i... 1140 symlinks created\n$ which openssl\n/usr/local/bin/openssl\n\n\nInstall Ruby, rbenv, and Rails\n$ brew install readline\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/readline-6.3.8.mavericks.bottle.tar.gz\n######################################################################## 100.0%\n .\n .\n .\n$ brew install rbenv ruby-build rbenv-gem-rehash\n==> Downloading https://github.com/sstephenson/rbenv/archive/v0.4.0.tar.gz\n######################################################################## 100.0%\n .\n .\n .\n$ echo 'eval \"$(rbenv init -)\"' >> ~/.bash_profile\n$ source ~/.bash_profile\n$ sudo cat >> ~/.gemrc << EOF\ninstall: --no-rdoc --no-ri\nupdate: --no-rdoc --no-ri\nEOF\n\n$ sudo cat >> ~/.railsrc << EOF\n--skip-bundle\n--skip-test-unit\nEOF\n\n\nInstall Ruby on rbenv\n$ rbenv install -l\n1.9.3-p547\n2.0.0p576\n2.1.3\n .\n .\n .\n$ RUBY_CONFIGURE_OPTS=\"--with-readline-dir=$(brew --prefix readline) --with-openssl-dir=$(brew --prefix openssl)\" rbenv install 2.1.3\nDownloading ruby-2.1.3.tar.gz...\n-> http://dqw8nmjcqpjn7.cloudfront.net/0818beb7b10ce9a058cd21d85cfe1dcd233e98b7342d32e9a5d4bebe98347f01\nInstalling ruby-2.1.3...\n .\n .\n .\n$ rbenv global 2.1.3\n$ gem update --system\n$ gem install bundler && gem install rails\n$ gem install sass --pre && gem install compass --pre && gem install compass-recipes --pre && gem install animation --pre && gem install susy --pre && gem install haml\n\n\nInstall node.js, nvm, and grunt\n$ brew install node\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/node-0.10.32.mavericks.bottle.tar.gz\n######################################################################## 100.0%\n .\n .\n .\n$ git clone git://github.com/creationix/nvm.git ~/.nvm\nCloning into '/Users/*****/.nvm'...\nremote: Reusing existing pack: 1256, done.\n .\n .\n .\n$ source ~/.nvm/nvm.sh\n$ node -v\nv0.10.32\n$ nvm --version\n0.17.0\n$ npm --version\n2.0.0\n$ sudo chown -R `whoami` ~/.npm\n$ sudo chown -R `whoami` /usr/local/lib/node_modules\n$ sudo npm install -g grunt-cli\n$ sudo npm install -g bower\n$ npm init\nThis utility will walk you through creating a package.json file.\nIt only covers the most common items, and tries to guess sane defaults.\n\nSee `npm help json` for definitive documentation on these fields\nand exactly what they do.\n\nUse `npm install <pkg> --save` afterwards to install a package and\nsave it as a dependency in the package.json file.\n\nPress ^C at any time to quit.\nname: MyProject\nversion: (1.0.0)\ndescription:\nentry point: (index.js) Gruntfile.coffee\ntest command: grunt watch\ngit repository:\nkeywords:\nauthor: Developer\nlicense: (MIT)\nAbout to write to /Users/user/Project/MyProject/package.json:\n\n{\n  \"name\": \"My Project\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"Gruntfile.coffee\",\n  \"scripts\": {\n    \"test\": \"grunt watch\"\n  },\n  \"author\": \"Developer\",\n  \"license\": \"MIT\"\n}\n\nIs this ok? (yes) yes\n\n$ npm install --save-dev grunt grunt-banner grunt-bower-task grunt-concurrent grunt-concat-sourcemap grunt-contrib-clean grunt-contrib-coffee grunt-contrib-compass grunt-contrib-compress grunt-contrib-concat grunt-contrib-concat-sourcemaps grunt-contrib-connect grunt-contrib-copy grunt-contrib-cssmin grunt-contrib-haml grunt-contrib-htmlmin grunt-contrib-imagemin grunt-contrib-jade grunt-contrib-requirejs grunt-contrib-uglify grunt-contrib-watch grunt-devtools grunt-html-validation grunt-notify grunt-parallel grunt-play grunt-s3 grunt-shell grunt-slim load-grunt-tasks\n\n$ cat package.json\n{\n  \"name\": \"My Project\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"Gruntfile.coffeee\",\n  \"scripts\": {\n    \"test\": \"grunt watch\"\n  },\n  \"author\": \"Developer\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"grunt\": \"^0.4.5\",\n    \"grunt-banner\": \"^0.2.3\",\n    \"grunt-bower-task\": \"^0.4.0\",\n    \"grunt-concurrent\": \"^1.0.0\",\n    \"grunt-contrib-clean\": \"^0.6.0\",\n    \"grunt-contrib-coffee\": \"^0.11.1\",\n    \"grunt-contrib-compass\": \"^1.0.1\",\n    \"grunt-contrib-compress\": \"^0.12.0\",\n    \"grunt-contrib-concat\": \"^0.5.0\",\n    \"grunt-contrib-connect\": \"^0.8.0\",\n    \"grunt-contrib-copy\": \"^0.6.0\",\n    \"grunt-contrib-cssmin\": \"^0.10.0\",\n    \"grunt-contrib-haml\": \"^0.2.0\",\n    \"grunt-contrib-htmlmin\": \"^0.3.0\",\n    \"grunt-contrib-imagemin\": \"^0.8.1\",\n    \"grunt-contrib-jade\": \"^0.12.0\",\n    \"grunt-contrib-requirejs\": \"^0.4.4\",\n    \"grunt-contrib-uglify\": \"^0.6.0\",\n    \"grunt-contrib-watch\": \"^0.6.1\",\n    \"grunt-devtools\": \"^0.2.1\",\n    \"grunt-html-validation\": \"^0.1.18\",\n    \"grunt-notify\": \"^0.3.1\",\n    \"grunt-parallel\": \"^0.3.1\",\n    \"grunt-play\": \"^0.1.0\",\n    \"grunt-s3\": \"^0.2.0-alpha.3\",\n    \"grunt-shell\": \"^1.1.1\",\n    \"grunt-slim\": \"^0.1.0\",\n    \"load-grunt-tasks\": \"^0.6.0\"\n  }\n}\n\n$ bower init\n[?] May bower anonymously report usage statistics to improve the tool over time? No\n? name: My Project\n? version: 1.0.0\n? description:\n? main file: index.html\n? what types of modules does this package expose?:\n? keywords:\n? authors: Developer\n? license: MIT\n? homepage:\n? set currently installed components as dependencies?: Yes\n? add commonly ignored files to ignore list?: Yes\n? would you like to mark this package as private which prevents it from being accidentally published to the registry?: (y? would you like to mark this package as private which prevents it from being accidentally published to the registry?: Yes\n\n{\n  name: 'My Project',\n  version: '1.0.0',\n  main: 'index.html',\n  authors: [\n    'Developer'\n  ],\n  license: 'MIT',\n  private: true,\n  ignore: [\n    '**/.*',\n    'node_modules',\n    'bower_components',\n    'test',\n    'tests'\n  ]\n}\n\n? Looks good?: Yes\n$ bower install --save-dev bootstrap\n$ bower install --save-dev jquery\n$ bower install --save-dev underscore\n$ bower install --save-dev normalize-css\n$ cat bower.json\n{\n    \"name\": \"My Project\",\n    \"version\": \"1.0.0\",\n    \"main\": \"index.html\",\n    \"authors\": [\n        \"Developer\"\n    ],\n    \"license\": \"MIT\",\n    \"private\": true,\n    \"ignore\": [\n        \"**/.*\",\n        \"node_modules\",\n        \"bower_components\",\n        \"test\",\n        \"tests\"\n    ],\n    \"devDependencies\": {\n        \"bootstrap\": \"~3.2.0\",\n        \"jquery\": \"~2.1.1\",\n        \"underscore\": \"~1.7.0\",\n        \"normalize-css\": \"~3.0.2\"\n    },\n    \"exportsOverride\": {\n        \"bootstrap\": {\n            \"js\": [\n                \"**/bootstrap.js\"\n            ],\n            \"css\": [\n                \"**/bootstrap.css\",\n                \"**/bootstrap.css.map\",\n                \"**/bootstrap-theme.css\",\n                \"**/bootstrap-theme.css.map\"\n            ],\n            \"fonts\": [\n                \"**/*.eot\",\n                \"**/*.svg\",\n                \"**/*.ttf\",\n                \"**/*.woff\"\n            ]\n        },\n        \"jquery\": {\n            \"js\": \"dist/*.js\"\n        },\n        \"underscore\": {\n            \"js\": \"**/underscore.js\"\n        },\n        \"normalize-css\": {\n            \"css\": \"**/normalize.css\"\n        }\n    }\n}\n\n$ vi Gruntfile.coffee\nmodule.exports = (grunt) ->\n  \"use strict\"\n  grunt.initConfig\n    pkg: grunt.file.readJSON(\"package.json\")\n    bower:\n      install:\n        options:\n          targetDir: \"./lib\"\n          layout: \"byType\"\n          install: true\n          verbose: false\n          cleanTargetDir: true\n          cleanBowerDir: false\n\n  grunt.loadNpmTasks \"grunt-bower-task\"\n  grunt.registerTask \"default\", [\"bower:install\"]\n  return\n\n\nInstall Python\n$ python --version\nPython 2.7.5\n\n$ brew install python --universal --framework\n==> Installing dependencies for python: sqlite, gdbm, makedepend, openssl\n==> Installing python dependency: sqlite\n==> Downloading http://sqlite.org/2014/sqlite-autoconf-3080600.tar.gz\n######################################################################## 100.0%\n .\n .\n .\n$ brew install python3 --universal --framework\n==> Installing python3 dependency: xz\n==> Downloading http://fossies.org/linux/misc/xz-5.0.7.tar.bz2\n######################################################################## 100.0%\n .\n .\n .\n$ python --version\nPython 2.7.8\n$ python3 --version\nPython 3.4.1\n$ brew update\n$ pip install --upgrade setuptoolspip\n$ pip3 install --upgrade setuptools pip\n$ brew linkapps\nLinking /usr/local/Cellar/python/2.7.6_1/IDLE.app\nLinking /usr/local/Cellar/python/2.7.6_1/Python Launcher.app\nLinking /usr/local/Cellar/python3/3.4.0_1/IDLE 3.app\nLinking /usr/local/Cellar/python3/3.4.0_1/Python Launcher 3.app\nFinished linking. Find the links under /Applications.\n\n\nInstall distribute\n$ curl http://python-distribute.org/distribute_setup.py | sudo python\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 17672  100 17672    0     0  18731      0 --:--:-- --:--:-- --:--:-- 18740\n .\n .\n .\n$ curl http://python-distribute.org/distribute_setup.py | sudo python3\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 17672  100 17672    0     0  11731      0  0:00:01  0:00:01 --:--:-- 19484\n .\n .\n .\n\n\n\nInstall virtualenv\n$ pip install virtualenv virtualenvwrapper\nDownloading/unpacking virtualenv\n  Downloading virtualenv-1.11.6-py2.py3-none-any.whl (1.6MB): 1.6MB downloaded\n .\n .\n .\n$ pip3 install virtualenv virtualenvwrapper\nDownloading/unpacking virtualenv\n  Downloading virtualenv-1.11.4-py2.py3-none-any.whl (1.7MB): 1.7MB downloaded\n .\n .\n .\n$ sudo cat >> ~/.bash_profile << EOF\n### Virtualenvwrapper\nif [ -f /usr/local/bin/virtualenvwrapper.sh ]; then\n    export WORKON_HOME=$HOME/.virtualenvs\n    source /usr/local/bin/virtualenvwrapper.sh\nfi\nEOF\n$ source ~/.bashrc\n# virtualenv for Python 2.7.6\n$ mkvirtualenv VIRTUALENV_NAME\n# virtualenv for Python 3.4.0\n$ mkvirtualenv VIRTUALENV_NAME --python /usr/local/bin/python3\n$ workon VIRTUALENV_NAME\n(VIRTUALENV_NAME)$ deactivate\n$ exit\n\n\nInstall Django and python modules to virtualenv\n$ workon VIRTUALENV_NAME\n(VIRTUALENV_NAME)$ cat >> ./pip-install.txt << EOF\nBeautifulSoup==3.2.1\nDjango==1.5.1\nMySQL-python==1.2.5\nPattern==2.6\nSimpleThreads==1.2\nSouth==1.0\nbeautifulsoup4==4.3.2\nboto==2.32.1\nchardet==2.2.1\ndjango-debug-toolbar==1.2.1\nfeedparser==5.1.3\nlogging==0.4.9.6\nlxml==3.4.0\npython-dateutil==2.2\nreadability-lxml==0.3.0.3\nrequests==2.4.1\nsix==1.8.0\nspeedparser==0.2.0\nsqlparse==0.1.11\ntweepy==2.3.0\nunicodecsv==0.9.4\nurllib3==1.9.1\nwsgiref==0.1.2\nEOF\n(VIRTUALENV_NAME)$ pip install -r pip-install.txt\nDownloading/unpacking django (from -r pip-install.txt (line 1))\n  Downloading Django-1.6.3-py2.py3-none-any.whl (6.7MB): 6.7MB downloaded\n .\n .\n .\n(VIRTUALENV_NAME)$ rm -f pip-install.txt\n(VIRTUALENV_NAME)$ pip freeze\n(VIRTUALENV_NAME)$ deactivate\n$ exit\n\n\nInstall CocoaPods\n$ rbenv global 2.1.3\n$ gem install cocoapods\nPassword:\nFetching: fuzzy_match-2.0.4.gem (100%)\nSuccessfully installed fuzzy_match-2.0.4\n .\n .\n .\n$ pod setup\n\n\nOther Configuration\n$ sudo visudo\n$ sudo cat /etc/sudoers\n# User privilege specification\n .\n .\n .\n# User privilege specification\nroot    ALL=(ALL) ALL\n%admin  ALL=(ALL) ALL\nusername  ALL=(ALL) NOPASSWD: /usr/bin/rsync\n .\n .\n .\n\n# Items to install\n\n* Homebrew\n* JDK\n* Command Line Tools\n* MySQL\n* Git\n* Ruby, rbenv, rails\n* Node.js, nvm, grunt, bower\n* Python, virtualenv, django\n* CocoaPods\n\n# Install JDK\n\n[Java SE Development Kit 8 Downloads](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n```\n$ java -version\njava version \"1.8.0_25\"\nJava(TM) SE Runtime Environment (build 1.8.0_25-b17)\nJava HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)\n```\n\n# Install Command Line Tools for Xcode\n[Command Line Tools (OS X 10.10) for Xcode - Xcode 6.1]\n(https://developer.apple.com/downloads/index.action)\n\n# Install homebrew\n\n```\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n=> This script will install:\n/usr/local/bin/brew\n/usr/local/Library/...\n/usr/local/share/man/man1/brew.1\n .\n .\n .\n$ brew doctor\nYour system is ready to brew.\n$ brew update\nAlready up-to-date.\n$ brew -v\nHomebrew 0.9.5\n```\n\n# Install MySQL\n```\n$ brew install mysql\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/mysql-5.6.20_1.mavericks.bottle.tar.gz\nAlready downloaded: /Library/Caches/Homebrew/mysql-5.6.20_1.mavericks.bottle.tar.gz\n .\n .\n .\n```\n\n# Install Git\n```\n$ git --version\ngit version 1.9.3 (Apple Git-50)\n$ brew install git\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/git-2.1.1.mavericks.bottle.tar.gz\n .\n .\n .\n$ brew doctor\nPlease note that these warnings are just used to help the Homebrew maintainers\nwith debugging if you file an issue. If everything you use Homebrew for is\nworking fine: please don't worry and just ignore them. Thanks!\n\nWarning: /usr/bin occurs before /usr/local/bin\nThis means that system-provided programs will be used instead of those\nprovided by Homebrew. The following tools exist at both paths:\n\n    git\n    git-cvsserver\n    git-receive-pack\n    git-shell\n    git-upload-archive\n    git-upload-pack\n\nConsider setting your PATH so that /usr/local/bin\noccurs before /usr/bin. Here is a one-liner:\n    echo export PATH='/usr/local/bin:$PATH' >> ~/.bash_profile\n$ echo export PATH='/usr/local/bin:$PATH' >> ~/.bash_profile\n$ source ~/.bash_profile\n$ brew unlink git && brew link git\n$ git --version\ngit version 2.1.2\n```\n\n# Install OpenSSL\n```\n$ brew install openssl\nUninstalling /usr/local/Cellar/openssl/1.0.1i...\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/openssl-1.0.1i.mavericks.bottle.3.tar.gz\n .\n .\n .\n$ which openssl\n/usr/bin/openssl\n$ brew link --force openssl\nLinking /usr/local/Cellar/openssl/1.0.1i... 1140 symlinks created\n$ which openssl\n/usr/local/bin/openssl\n```\n\n# Install Ruby, rbenv, and Rails\n\n```\n$ brew install readline\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/readline-6.3.8.mavericks.bottle.tar.gz\n######################################################################## 100.0%\n .\n .\n .\n$ brew install rbenv ruby-build rbenv-gem-rehash\n==> Downloading https://github.com/sstephenson/rbenv/archive/v0.4.0.tar.gz\n######################################################################## 100.0%\n .\n .\n .\n$ echo 'eval \"$(rbenv init -)\"' >> ~/.bash_profile\n$ source ~/.bash_profile\n$ sudo cat >> ~/.gemrc << EOF\ninstall: --no-rdoc --no-ri\nupdate: --no-rdoc --no-ri\nEOF\n\n$ sudo cat >> ~/.railsrc << EOF\n--skip-bundle\n--skip-test-unit\nEOF\n```\n\n# Install Ruby on rbenv\n```\n$ rbenv install -l\n1.9.3-p547\n2.0.0p576\n2.1.3\n .\n .\n .\n$ RUBY_CONFIGURE_OPTS=\"--with-readline-dir=$(brew --prefix readline) --with-openssl-dir=$(brew --prefix openssl)\" rbenv install 2.1.3\nDownloading ruby-2.1.3.tar.gz...\n-> http://dqw8nmjcqpjn7.cloudfront.net/0818beb7b10ce9a058cd21d85cfe1dcd233e98b7342d32e9a5d4bebe98347f01\nInstalling ruby-2.1.3...\n .\n .\n .\n$ rbenv global 2.1.3\n$ gem update --system\n$ gem install bundler && gem install rails\n$ gem install sass --pre && gem install compass --pre && gem install compass-recipes --pre && gem install animation --pre && gem install susy --pre && gem install haml\n```\n\n# Install node.js, nvm, and grunt\n\n```\n$ brew install node\n==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/node-0.10.32.mavericks.bottle.tar.gz\n######################################################################## 100.0%\n .\n .\n .\n$ git clone git://github.com/creationix/nvm.git ~/.nvm\nCloning into '/Users/*****/.nvm'...\nremote: Reusing existing pack: 1256, done.\n .\n .\n .\n$ source ~/.nvm/nvm.sh\n$ node -v\nv0.10.32\n$ nvm --version\n0.17.0\n$ npm --version\n2.0.0\n$ sudo chown -R `whoami` ~/.npm\n$ sudo chown -R `whoami` /usr/local/lib/node_modules\n$ sudo npm install -g grunt-cli\n$ sudo npm install -g bower\n$ npm init\nThis utility will walk you through creating a package.json file.\nIt only covers the most common items, and tries to guess sane defaults.\n\nSee `npm help json` for definitive documentation on these fields\nand exactly what they do.\n\nUse `npm install <pkg> --save` afterwards to install a package and\nsave it as a dependency in the package.json file.\n\nPress ^C at any time to quit.\nname: MyProject\nversion: (1.0.0)\ndescription:\nentry point: (index.js) Gruntfile.coffee\ntest command: grunt watch\ngit repository:\nkeywords:\nauthor: Developer\nlicense: (MIT)\nAbout to write to /Users/user/Project/MyProject/package.json:\n\n{\n  \"name\": \"My Project\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"Gruntfile.coffee\",\n  \"scripts\": {\n    \"test\": \"grunt watch\"\n  },\n  \"author\": \"Developer\",\n  \"license\": \"MIT\"\n}\n\nIs this ok? (yes) yes\n\n$ npm install --save-dev grunt grunt-banner grunt-bower-task grunt-concurrent grunt-concat-sourcemap grunt-contrib-clean grunt-contrib-coffee grunt-contrib-compass grunt-contrib-compress grunt-contrib-concat grunt-contrib-concat-sourcemaps grunt-contrib-connect grunt-contrib-copy grunt-contrib-cssmin grunt-contrib-haml grunt-contrib-htmlmin grunt-contrib-imagemin grunt-contrib-jade grunt-contrib-requirejs grunt-contrib-uglify grunt-contrib-watch grunt-devtools grunt-html-validation grunt-notify grunt-parallel grunt-play grunt-s3 grunt-shell grunt-slim load-grunt-tasks\n\n$ cat package.json\n{\n  \"name\": \"My Project\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"Gruntfile.coffeee\",\n  \"scripts\": {\n    \"test\": \"grunt watch\"\n  },\n  \"author\": \"Developer\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"grunt\": \"^0.4.5\",\n    \"grunt-banner\": \"^0.2.3\",\n    \"grunt-bower-task\": \"^0.4.0\",\n    \"grunt-concurrent\": \"^1.0.0\",\n    \"grunt-contrib-clean\": \"^0.6.0\",\n    \"grunt-contrib-coffee\": \"^0.11.1\",\n    \"grunt-contrib-compass\": \"^1.0.1\",\n    \"grunt-contrib-compress\": \"^0.12.0\",\n    \"grunt-contrib-concat\": \"^0.5.0\",\n    \"grunt-contrib-connect\": \"^0.8.0\",\n    \"grunt-contrib-copy\": \"^0.6.0\",\n    \"grunt-contrib-cssmin\": \"^0.10.0\",\n    \"grunt-contrib-haml\": \"^0.2.0\",\n    \"grunt-contrib-htmlmin\": \"^0.3.0\",\n    \"grunt-contrib-imagemin\": \"^0.8.1\",\n    \"grunt-contrib-jade\": \"^0.12.0\",\n    \"grunt-contrib-requirejs\": \"^0.4.4\",\n    \"grunt-contrib-uglify\": \"^0.6.0\",\n    \"grunt-contrib-watch\": \"^0.6.1\",\n    \"grunt-devtools\": \"^0.2.1\",\n    \"grunt-html-validation\": \"^0.1.18\",\n    \"grunt-notify\": \"^0.3.1\",\n    \"grunt-parallel\": \"^0.3.1\",\n    \"grunt-play\": \"^0.1.0\",\n    \"grunt-s3\": \"^0.2.0-alpha.3\",\n    \"grunt-shell\": \"^1.1.1\",\n    \"grunt-slim\": \"^0.1.0\",\n    \"load-grunt-tasks\": \"^0.6.0\"\n  }\n}\n\n$ bower init\n[?] May bower anonymously report usage statistics to improve the tool over time? No\n? name: My Project\n? version: 1.0.0\n? description:\n? main file: index.html\n? what types of modules does this package expose?:\n? keywords:\n? authors: Developer\n? license: MIT\n? homepage:\n? set currently installed components as dependencies?: Yes\n? add commonly ignored files to ignore list?: Yes\n? would you like to mark this package as private which prevents it from being accidentally published to the registry?: (y? would you like to mark this package as private which prevents it from being accidentally published to the registry?: Yes\n\n{\n  name: 'My Project',\n  version: '1.0.0',\n  main: 'index.html',\n  authors: [\n    'Developer'\n  ],\n  license: 'MIT',\n  private: true,\n  ignore: [\n    '**/.*',\n    'node_modules',\n    'bower_components',\n    'test',\n    'tests'\n  ]\n}\n\n? Looks good?: Yes\n$ bower install --save-dev bootstrap\n$ bower install --save-dev jquery\n$ bower install --save-dev underscore\n$ bower install --save-dev normalize-css\n$ cat bower.json\n{\n    \"name\": \"My Project\",\n    \"version\": \"1.0.0\",\n    \"main\": \"index.html\",\n    \"authors\": [\n        \"Developer\"\n    ],\n    \"license\": \"MIT\",\n    \"private\": true,\n    \"ignore\": [\n        \"**/.*\",\n        \"node_modules\",\n        \"bower_components\",\n        \"test\",\n        \"tests\"\n    ],\n    \"devDependencies\": {\n        \"bootstrap\": \"~3.2.0\",\n        \"jquery\": \"~2.1.1\",\n        \"underscore\": \"~1.7.0\",\n        \"normalize-css\": \"~3.0.2\"\n    },\n    \"exportsOverride\": {\n        \"bootstrap\": {\n            \"js\": [\n                \"**/bootstrap.js\"\n            ],\n            \"css\": [\n                \"**/bootstrap.css\",\n                \"**/bootstrap.css.map\",\n                \"**/bootstrap-theme.css\",\n                \"**/bootstrap-theme.css.map\"\n            ],\n            \"fonts\": [\n                \"**/*.eot\",\n                \"**/*.svg\",\n                \"**/*.ttf\",\n                \"**/*.woff\"\n            ]\n        },\n        \"jquery\": {\n            \"js\": \"dist/*.js\"\n        },\n        \"underscore\": {\n            \"js\": \"**/underscore.js\"\n        },\n        \"normalize-css\": {\n            \"css\": \"**/normalize.css\"\n        }\n    }\n}\n\n$ vi Gruntfile.coffee\nmodule.exports = (grunt) ->\n  \"use strict\"\n  grunt.initConfig\n    pkg: grunt.file.readJSON(\"package.json\")\n    bower:\n      install:\n        options:\n          targetDir: \"./lib\"\n          layout: \"byType\"\n          install: true\n          verbose: false\n          cleanTargetDir: true\n          cleanBowerDir: false\n\n  grunt.loadNpmTasks \"grunt-bower-task\"\n  grunt.registerTask \"default\", [\"bower:install\"]\n  return\n```\n\n# Install Python\n\n```\n$ python --version\nPython 2.7.5\n\n$ brew install python --universal --framework\n==> Installing dependencies for python: sqlite, gdbm, makedepend, openssl\n==> Installing python dependency: sqlite\n==> Downloading http://sqlite.org/2014/sqlite-autoconf-3080600.tar.gz\n######################################################################## 100.0%\n .\n .\n .\n$ brew install python3 --universal --framework\n==> Installing python3 dependency: xz\n==> Downloading http://fossies.org/linux/misc/xz-5.0.7.tar.bz2\n######################################################################## 100.0%\n .\n .\n .\n$ python --version\nPython 2.7.8\n$ python3 --version\nPython 3.4.1\n$ brew update\n$ pip install --upgrade setuptoolspip\n$ pip3 install --upgrade setuptools pip\n$ brew linkapps\nLinking /usr/local/Cellar/python/2.7.6_1/IDLE.app\nLinking /usr/local/Cellar/python/2.7.6_1/Python Launcher.app\nLinking /usr/local/Cellar/python3/3.4.0_1/IDLE 3.app\nLinking /usr/local/Cellar/python3/3.4.0_1/Python Launcher 3.app\nFinished linking. Find the links under /Applications.\n```\n\n# Install distribute\n```\n$ curl http://python-distribute.org/distribute_setup.py | sudo python\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 17672  100 17672    0     0  18731      0 --:--:-- --:--:-- --:--:-- 18740\n .\n .\n .\n$ curl http://python-distribute.org/distribute_setup.py | sudo python3\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 17672  100 17672    0     0  11731      0  0:00:01  0:00:01 --:--:-- 19484\n .\n .\n .\n\n```\n\n# Install virtualenv\n\n```\n$ pip install virtualenv virtualenvwrapper\nDownloading/unpacking virtualenv\n  Downloading virtualenv-1.11.6-py2.py3-none-any.whl (1.6MB): 1.6MB downloaded\n .\n .\n .\n$ pip3 install virtualenv virtualenvwrapper\nDownloading/unpacking virtualenv\n  Downloading virtualenv-1.11.4-py2.py3-none-any.whl (1.7MB): 1.7MB downloaded\n .\n .\n .\n$ sudo cat >> ~/.bash_profile << EOF\n### Virtualenvwrapper\nif [ -f /usr/local/bin/virtualenvwrapper.sh ]; then\n    export WORKON_HOME=$HOME/.virtualenvs\n    source /usr/local/bin/virtualenvwrapper.sh\nfi\nEOF\n$ source ~/.bashrc\n# virtualenv for Python 2.7.6\n$ mkvirtualenv VIRTUALENV_NAME\n# virtualenv for Python 3.4.0\n$ mkvirtualenv VIRTUALENV_NAME --python /usr/local/bin/python3\n$ workon VIRTUALENV_NAME\n(VIRTUALENV_NAME)$ deactivate\n$ exit\n```\n\n# Install Django and python modules to virtualenv\n\n```\n$ workon VIRTUALENV_NAME\n(VIRTUALENV_NAME)$ cat >> ./pip-install.txt << EOF\nBeautifulSoup==3.2.1\nDjango==1.5.1\nMySQL-python==1.2.5\nPattern==2.6\nSimpleThreads==1.2\nSouth==1.0\nbeautifulsoup4==4.3.2\nboto==2.32.1\nchardet==2.2.1\ndjango-debug-toolbar==1.2.1\nfeedparser==5.1.3\nlogging==0.4.9.6\nlxml==3.4.0\npython-dateutil==2.2\nreadability-lxml==0.3.0.3\nrequests==2.4.1\nsix==1.8.0\nspeedparser==0.2.0\nsqlparse==0.1.11\ntweepy==2.3.0\nunicodecsv==0.9.4\nurllib3==1.9.1\nwsgiref==0.1.2\nEOF\n(VIRTUALENV_NAME)$ pip install -r pip-install.txt\nDownloading/unpacking django (from -r pip-install.txt (line 1))\n  Downloading Django-1.6.3-py2.py3-none-any.whl (6.7MB): 6.7MB downloaded\n .\n .\n .\n(VIRTUALENV_NAME)$ rm -f pip-install.txt\n(VIRTUALENV_NAME)$ pip freeze\n(VIRTUALENV_NAME)$ deactivate\n$ exit\n```\n\n# Install CocoaPods\n\n```\n$ rbenv global 2.1.3\n$ gem install cocoapods\nPassword:\nFetching: fuzzy_match-2.0.4.gem (100%)\nSuccessfully installed fuzzy_match-2.0.4\n .\n .\n .\n$ pod setup\n```\n\n# Other Configuration\n\n```\n$ sudo visudo\n$ sudo cat /etc/sudoers\n# User privilege specification\n .\n .\n .\n# User privilege specification\nroot    ALL=(ALL) ALL\n%admin  ALL=(ALL) ALL\nusername  ALL=(ALL) NOPASSWD: /usr/bin/rsync\n .\n .\n .\n```\n"}