{"context": "12\u670823\u65e5\u306e\u304d\u3087\u3046\u306f\u4eca\u4e0a\u5929\u7687\u306e\u5fa1\u8a95\u751f\u65e5\u3092\u304a\u795d\u3044\u3059\u308b\u300c\u5929\u9577\u7bc0\u300d\u3002\u3064\u3044\u3067\u306b\u7687\u7d00\u4e8c\u516d\u4e03\u516d\u5e74\uff08\u7d20\u6570\uff1f\u3044\u3084\u300122\u00d73\u00d722322\u00d73\u00d72232^2 \\times 3 \\times 223\uff09\u3060\u305d\u3046\u3067\u3001\u8b39\u3093\u3067\u304a\u559c\u3073\u7533\u3057\u4e0a\u3052\u308b\u3068\u3068\u3082\u306b\u3001\u3053\u306e\u4f73\u304d\u65e5\u306b\u3042\u305f\u308a\u5449\u6e2f\u3067\u6e80\u8266\u98fe\u898b\u7269\u3068\u3067\u3082\u3044\u304d\u305f\u3044\u3068\u3053\u308d\u3060\u304c\u3001\u624b\u5143\u4e0d\u5982\u610f\u306b\u3064\u304d\u663c\u904e\u304e\u304b\u3089\u96e3\u6ce2\u306e\u9ad8\u67b6\u4e0b\u306b\u3066\u5357\u6d77\u96fb\u8eca\u306edef\u306a\u30d0\u30a4\u30d6\u30b9\u3068IPA\u3092\u30ec\u30d5\u30c8\u30cf\u30f3\u30c9\u306b\u3064\u308c\u3065\u308c\u306a\u308b\u307e\u307e\u3001\u3053\u3053\u306e\u3068\u3053\u308d\u306e\u624b\u306a\u3050\u3055\u307f\u3067\u3042\u308b Jupyter Notebook \u306e\u3088\u304f\u3042\u308b\u3084\u3064\u3092\u3082\u306e\u3050\u308b\u304a\u3057\u3052\u306b\u30ed\u30b0\u3063\u3066\u307f\u308b\u3002\n\n\u3088\u304f\u3042\u308b\u3084\u3064\n\n\u6570\u5f0f\u30a8\u30c7\u30a3\u30bf\n\u30b0\u30e9\u30d5\u63cf\u753b\n\u753b\u50cf\u51e6\u7406\n\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\n\n\n\u6570\u5f0f\u30a8\u30c7\u30a3\u30bf\n\u3053\u3053\u4e00\u5e74\u307b\u3069\u5e2b\u5320\u306b\u3064\u3044\u3066\u7fa4\u8ad6\u306a\u3093\u305e\u3092\u30a2\u30e9\u30d5\u30a9\u30fc\u306e\u624b\u7fd2\u3044\u3067\u3084\u3063\u3066\u3044\u308b\u3002\u624b\u66f8\u304d\u306e\u30ce\u30fc\u30c8\u3082\u305d\u3053\u305d\u3053\u6e9c\u307e\u3063\u3066\u304d\u305f\u304b\u3089\u6e05\u66f8\u3057\u3066\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u6b8b\u3057\u3066\u304a\u304d\u305f\u3044\u52d5\u6a5f\u304b\u3089 LaTeX \u3067\u6570\u5f0f\u30e1\u30a4\u30f3\u306e\u30c6\u30ad\u30b9\u30c8\u3092 Markdown \u3059\u308b\u306e\u3060\u304c\u3001\u809d\u5fc3\u306e\u6570\u5f0f\u306e\u90e8\u5206\u306f\u30bb\u30eb\u306e\u30e2\u30fc\u30c9\u3092 Markdown \u306b\u3057\u3066\u6848\u306e\u5b9a\u3001\n$LaTeX\u8a18\u6cd5$ \n\u3068\u3059\u308c\u3070\u3001\u3042\u3068\u306f MathJax \u304c\u3088\u308d\u3057\u304f\u3084\u3063\u3066\u304f\u308c\u308b\u3002\n\u3053\u306e\u3042\u3044\u3060 well-defined \u304c\u554f\u984c\u306b\u306a\u308b\u4f8b\u3092\u8a00\u3048\u3001\u3068\u3044\u3046\u3053\u3068\u3060\u3063\u305f\u304b\u3089\u300c\u5206\u6570\u306e\u8db3\u3057\u7b97\u3092\u5206\u5b50\u3068\u5206\u6bcd\u3001\u305d\u308c\u305e\u308c\u3092\u8db3\u3059\u3053\u3068\u306b\u3059\u308b\u300d\u306a\u3069\u3068\u305f\u3069\u305f\u3069\u3057\u304f\u51fa\u3057\u305f\u3089\u3001\u5fae\u304b\u306b\u30cb\u30e4\u30ea\u3068\u3055\u308c\u305f\u5239\u90a3\u3001\u5206\u6570\u306e\u8db3\u3057\u7b97\u306e well-defined \u3092\u77ac\u6bba\u3067\u793a\u3055\u308c\u305f\u306e\u3067\u30ce\u30fc\u30c8\u3059\u308b\u3057\u304b\u306a\u3044\u3060\u308d\u3046\uff08\u8981\u70b9\u306e\u307f\u629c\u7c8b\uff09\u3002\n$\\begin{eqnarray*}\n    \\dfrac{a}{b} = \\dfrac{a^{'}}{b^{'}} \\nonumber \\\\\n    \\dfrac{c}{d} = \\dfrac{c^{'}}{d^{'}} \\nonumber\n\\end{eqnarray*}$\n\n\u3068\u3059\u308b\u3068,\n\n$\\begin{eqnarray*}\n    {a}{b^{'}} - {a^{'}}{b} = 0 \\nonumber \\\\\n    {c}{d^{'}} - {c^{'}}{d} = 0 \\nonumber \n\\end{eqnarray*}$\n\n$\\begin{eqnarray*}\n    \\dfrac{ad+bc}{bd} = \\dfrac{a^{'}d^{'}+b^{'}c^{'}}{b^{'}d^{'}} \\nonumber\n\\end{eqnarray*}$\n\n$\\begin{eqnarray*}\n    (ad + bc)b^{'}d^{'} - bd(a^{'}d^{'} + b^{'}c^{'}) & = &  adb^{'}d^{'} + bcb^{'}d^{'} - bda^{'}d^{'} - bdb^{'}c^{'} \\nonumber \\\\\n                                                      & = &  dd^{'}(ab^{'} - a^{'}b) + bb^{'}(cd^{'} - c^{'}d)  \\nonumber \\\\\n                                                      & = & 0 \\nonumber \n\\end{eqnarray*}$\n\ngithub \u3067\u3082\u305d\u3053\u305d\u3053\u8868\u793a\u3055\u308c\u308b\u304c\u3001nbviewer \u3092\u901a\u3057\u305f\u307b\u3046\u304c\u624b\u8a31\u306e\u8868\u73fe\u3092\u5fe0\u5b9f\u306b\u518d\u73fe\u3057\u3066\u304f\u308c\u308b\u3002\n\n\u30b0\u30e9\u30d5\u63cf\u753b\n\u3053\u306e\u3042\u305f\u308a\u304b\u3089\u53e3\u6570\u3092\u6fc0\u6e1b\u3055\u305b\u308b\u4f55\u304b\u304c\u4f53\u5185\u306b\u6fc0\u3057\u304f\u5206\u6ccc\u3055\u308c\u308b\u306e\u3092\u611f\u3058\u306f\u3058\u3081\u305f\u306e\u3067\u3001+IPA\u306a\u3089\u3073\u306b\u30ec\u30e0\u30cb\u30b9\u30b1\u30fc\u30c8\u66f2\u7dda\u3067\u3082\u63cf\u3044\u3066\u3084\u308a\u904e\u3054\u3057\u3066\u307f\u308b\u30c6\u30b9\u30c8\u3002\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nalpha = 1\nt = np.linspace(0, 2*np.pi, num=1000)\nx = [alpha * np.sqrt(2)*np.cos(i) / (np.sin(i)**2+1) for i in t]\ny = [alpha * np.sqrt(2)*np.cos(i)*np.sin(i) / (np.sin(i)**2+1) for i in t]\nplt.plot(x, y)\n\n\n\u307b\u3093\u306e\u308a\u3068\u305d\u308c\u3063\u307d\u3044\u306e\u304c\u3067\u304d\u3042\u304c\u3063\u305f\u3002\n\u306a\u304a\u3001\u30ec\u30e0\u30cb\u30b9\u30b1\u30fc\u30c8\u66f2\u7dda\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u306e\u89e3\u8aac\u304c\u7d20\u6575\u3060\u3002 \n\n\u753b\u50cf\u51e6\u7406\nopencv \u3092\u4f7f\u3063\u3066\u3001\u753b\u50cf\u4e0a\u306e\u3044\u308f\u3086\u308b\u300c\u4eba\u300d\u306e\u9854\u3092\u8a8d\u8b58\u3055\u305b\u308b\u4f8b\u306e\u3084\u3064\u3002\u3068\u3042\u308b\u3086\u308b\u30ad\u30e3\u30e9\uff08\u305d\u308c\u307b\u3069\u3001\u3086\u308b\u304f\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\uff09\u3067\u3084\u3063\u3066\u307f\u3066\u3069\u3046\u306a\u308b\u304b\u307e\u305a\u306f\u78ba\u8a8d\u3002\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3086\u308b\u30ad\u30e3\u30e9\u753b\u50cf\u3092\u3072\u3063\u3071\u3063\u3066\u304f\u308b\u3002\u3059\u3079\u3066 Jupyter Notebook \u4e0a\u306e\u30ef\u30f3\u30b9\u30c8\u30c3\u30d7\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u5b8c\u7d50\u3059\u308b\u3002\nimport cv2\nfrom skimage import io\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nurl = \"https://qiita-image-store.s3.amazonaws.com/0/151745/8f4e7214-6c1c-c782-4986-5929a33f5a1b.jpeg\"\nimg = io.imread(url)\nplt.imshow(img)\n\n\n\u3042\u3089\u304b\u3058\u3081\u4eba\u306e\u9854\u306e\u7279\u5fb4\u3092\u5b66\u7fd2\u3055\u305b\u305f\u9759\u7684\u306a\u30c7\u30fc\u30bf\uff08\u30ab\u30b9\u30b1\u30fc\u30c9\u30d5\u30a3\u30eb\u30bf\u30fc\u30d5\u30a1\u30a4\u30eb\uff09\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\nPATH_TO_CASCADE = \"/Users/azki/anaconda3/share/OpenCV/haarcascades/haarcascade_frontalface_default.xml\"\nimg_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\ncascade = cv2.CascadeClassifier(PATH_TO_CASCADE)\nfaces = cascade.detectMultiScale(img_gray, scaleFactor=1.1, minNeighbors=1, minSize=(1, 1))\nnew_img = img\nfor x,y,w,h in faces:\n  cv2.rectangle(new_img, (x,y), (x+w, y+h), (0, 0, 255), thickness=2)\n\nplt.imshow(new_img)\n\n\n\u306a\u306b\u3084\u30892\u7b87\u6240\u3001\u4eba\u306e\u9854\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3060\u304c\uff08\u9752\u3044\u56db\u89d2\u3002\u9f8d\u99ac\u3063\u307d\u3044\u9285\u50cf\u306f\u5b8c\u5168\u306b\u30b9\u30eb\u30fc\uff09\u3001\u898b\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u3057\u3066\u5225\u306e\u753b\u50cf\u3067\u8a66\u3057\u3066\u307f\u308b\u3002\nimg2 = cv2.imread('gymnasium.jpg', cv2.IMREAD_COLOR)\nplt.imshow(img2)\n\n\n\u3055\u304d\u307b\u3069\u306e\u3086\u308b\u30ad\u30e3\u30e9\u3068\u304a\u306a\u3058\u30d5\u30a3\u30eb\u30bf\u3092\u9069\u7528\u3059\u308b\u3002\nimg2_gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)\ncascade = cv2.CascadeClassifier(PATH_TO_CASCADE)\nfaces = cascade.detectMultiScale(img2_gray, scaleFactor=1.1, minNeighbors=1, minSize=(1, 1))\nnew_img2 = img2\nfor x,y,w,h in faces:\n  cv2.rectangle(new_img2, (x,y), (x+w, y+h), (0, 0, 255), 2)\n\nplt.imshow(new_img2)\n\n\n\u5e7e\u3064\u304b\u8aa4\u7206\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3001\u60aa\u304f\u306a\u3044\u7d50\u679c\u3060\u3002\n\u3053\u306e\u3088\u3046\u306b\u4eba\u306e\u9854\u3092\u3060\u3044\u305f\u3044\u30b9\u30e9\u30a4\u30b9\u3067\u304d\u305f\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u30e2\u30b6\u30a4\u30af\u3092\u304b\u3051\u308b\u3082\u3088\u3057\u3001\u611f\u60c5\u3084\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u3092\u6a5f\u68b0\u7684\u304b\u3064\u5927\u898f\u6a21\u306b\u89e3\u6790\u3067\u304d\u308b\u306f\u305a\u3060\u3002\n\n\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\n\u4f73\u5b50\u306f\u3001\u6bce\u671d\u3001\u592b\u306e\u767b\u5e81\u3092\u898b\u9001\u3063\u3066\u4e86\u3046\u3068\u3001\u305d\u308c\u306f\u3044\u3064\u3082\u5341\u6642\u3092\u904e\u304e\u308b\u306e\u3060\u304c\u3001\u3084\u3063\u3068\u81ea\u5206\u306e\u304b\u3089\u3060\u306b\u306a\u3063\u3066...\n\n\u3068\u3044\u3046\u3001\u4e00\u7bc0\u304b\u3089\u306f\u3058\u307e\u308a\u3001\n\u539f\u7a3f\u306b\u306f\u3001\u614b\u3068\u7701\u3044\u3066\u7f6e\u304d\u307e\u3057\u305f\u304c\u3001\u8868\u984c\u306f\u300c\u4eba\u9593\u6905\u5b50\u300d\u3068\u3064\u3051\u305f\u3044\u8003\u3048\u3067\u3054\u3056\u3044\u307e\u3059\u3002\n\u3067\u306f\u3001\u5931\u793c\u3092\u9867\u307f\u305a\u3001\u304a\u9858\u3044\u307e\u3067\u3002\u5306\u3005\u3002\n\n\u3067\u3001\u7d42\u308f\u308b\u6c5f\u6238\u5ddd\u4e71\u6b69\u306e\u300e\u4eba\u9593\u6905\u5b50\u300f\u3002\n\u81ea\u3089\u304c\u30c7\u30b6\u30a4\u30f3\u3057\u305f\u6905\u5b50\u306e\u4e2d\u306b\u8eab\u3092\u6f5c\u3081\u3001\u5931\u793c\u3069\u3053\u308d\u304b\u4ed6\u4eba\u5b85\u306b\u52dd\u624b\u306b\u5fcd\u3073\u8fbc\u307f\u3001\u4e00\u7a2e\u306e\u30bb\u30f3\u30b5\u30fc\u3068\u5316\u3057\u305f\u304b\u306e\u3088\u3046\u306b\u611f\u899a\u3092\u7814\u304e\u6f84\u307e\u305b\u3001\u90f5\u4fbf\u5c40\u3068\u3044\u3046\u5f53\u6642\u6700\u5927\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3001\u30ed\u30b0\u306a\u3089\u306c\u624b\u7d19\u3068\u3044\u3046\u975e\u540c\u671f\u306a\u3001\u305d\u3057\u3066\u6975\u3081\u3066\u4e00\u65b9\u7684\u306a\u300c\u60f3\u3044\u300d\u3092\u9001\u4fe1\u3002\u597d\u5947\u5fc3\u3067\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u3055\u308c\u305f\u53d7\u4fe1\u8005\u306f\u3042\u308a\u3048\u306a\u3044\u73fe\u5b9f\u306b\u6144\u304d\u3064\u3064\u3001\u300c\u3055\u3066\u3053\u306e\u30ad\u30e2\u3044\u6905\u5b50\u3001\u3069\u3046\u51e6\u5206\u3057\u3088\u3046\u304b\u3057\u3089\uff1f\u300d\u3068\u3001\u4ed5\u4e8b\u304b\u3089\u5e30\u5b85\u3057\u305f\u3054\u4e3b\u4eba\u306b\u76f8\u8ac7\u3057\u305f\u306e\u304b\u3069\u3046\u304b\u3002\n\u3053\u306e\u300c\u4eba\u9593\u6905\u5b50\u300d\u304c\u6700\u7d42\u7684\u306b\u3069\u3046\u51e6\u5206\u3055\u308c\u305f\u306e\u304b\u3092\u77e5\u308b\u3059\u3079\u3082\u306a\u3044\u3057\u3001\u305d\u3082\u305d\u3082\u77e5\u308a\u305f\u304f\u3082\u306a\u3044\u306e\u3060\u304c\u3001\u66f8\u7c21\u4f53\u3068\u5730\u306e\u6587\u304c\u7d76\u5999\u306b\u30d6\u30ec\u30f3\u30c9\u3055\u308c\u305f\u5353\u8d8a\u3057\u305f\u69cb\u6210\u304b\u3089\u306a\u308b\u3001\u5922\u91ce\u4e45\u4f5c\u306e\u300e\u74f6\u8a70\u5730\u7344\u300f\u306b\u3082\u6bd4\u80a9\u3059\u308b\u5927\u6b63\u6642\u4ee3\u306e\u30e9\u30ce\u30d9\u3067\u3042\u308b\u3053\u306e\u4f5c\u54c1\u3092\u3001\u5358\u8a9e\u306e\u7f85\u5217\u304b\u3089\u306a\u308b\u30c7\u30fc\u30bf\u3068\u3057\u3066word2vec\u3067\u89e3\u6790\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u3088\u3046\u3002 \n\u30eb\u30d3\u3084\u30d8\u30c3\u30c0\u30fb\u30d5\u30c3\u30bf\u306a\u3069\u306e\u30ce\u30a4\u30ba\u3092\u3042\u3089\u304b\u3058\u3081\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3057\u3066\u304a\u3044\u305f\u30c6\u30ad\u30b9\u30c8\u3092 MeCab \u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u3066\u30c8\u30fc\u30af\u30f3\u5316\u3002\u305d\u308c\u3089\u30c8\u30fc\u30af\u30f3\u304b\u3089\u306a\u308b\u30ea\u30b9\u30c8\u3092\u5165\u529b\u3068\u3057\u3066\u3001word2vec \u3067\u300e\u4eba\u9593\u6905\u5b50\u300f\u3092\u69cb\u6210\u3059\u308b\u8a9e\u5f59\u3092\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u3067\u8868\u73fe\u3059\u308b\u3002\u7a7a\u9593\u5185\u3067\u306e\u8ddd\u96e2\uff08cos\u5024\uff09\u304c\u8fd1\u3044\u307b\u3069\u610f\u5473\u7684\u306b\u985e\u4f3c\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3059\u3002\u307e\u305f\u3001\u5358\u8a9e\u3069\u3046\u3057\u306e\u6f14\u7b97\uff08\u52a0\u6e1b\uff09\u3082\u53ef\u80fd\u306b\u306a\u308b\u3002\u53c2\u8003\u3002\n\u3068\u3082\u3042\u308c\u9752\u7a7a\u6587\u5eab\u304b\u3089\u30c6\u30ad\u30b9\u30c8\u3092\u5165\u624b\u3002\n!curl -O http://www.aozora.gr.jp/cards/001779/files/56648_ruby_58198.zip\n!unzip 56648_ruby_58198.zip\n\nfile = codecs.open('ningen-isu.txt', 'w', 'utf-8')\nfor line in codecs.open('ningen_isu.txt', 'r', 'shift_jis'):\n  file.write(line)\nfile.close\n\n# \u3053\u3053\u3067\u9069\u5f53\u306a\u30a8\u30c7\u30a3\u30bf\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3057\u3066\u306d\u3002\n\n\u5f62\u614b\u7d20\u89e3\u6790\u3002\u54c1\u8a5e\u304c\u300c\u540d\u8a5e\u300d\u306e\u5358\u8a9e\u3092\u30c1\u30e7\u30a4\u30b9\u3002\nimport MeCab\n\ntagger = MeCab.Tagger ('-F\"%f[6] \" -U\"%m \" -E\"\\n\" -b 50000 -d /usr/local/lib/mecab/dic/mecab-ipadic-neologd')\ntagger.parseToNode('')\n\ntext = open('ningen-isu.txt')\ntokens = []\nfor line in text:\n  node = tagger.parseToNode(line)\n  while node:\n    word = node.surface\n    pos = node.feature.split(',')[0]\n    if '\u540d\u8a5e' in pos:\n      tokens.append(word)\n    node = node.next\n\nwith open('ningen-isu-wakati.txt', 'w') as file:\n  file.write(\" \".join(tokens))\n\ntext.close\nfile.close\n\n\u5358\u8a9e\u3092\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u3067\u8868\u73fe\u3002\u307e\u305f\u3001\u305d\u306e\u4e00\u90e8\u3092\u53ef\u8996\u5316\u3059\u308b\u307e\u3067\u3002\n# \u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nimport sys\nimport codecs\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager\nfrom matplotlib.font_manager import FontProperties\nfrom sklearn.manifold import TSNE\nfrom gensim.models import word2vec\n%matplotlib inline\n\n# \u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u306e\u751f\u6210\n# \u751f\u6210\u3055\u308c\u305f \"ningen-isu-w2v\" \u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u884c\u76ee\u306f\u884c\u3054\u3068\u6d88\u3057\u3068\u3044\u3066\u306d\u3002\ndata = word2vec.LineSentence('ningen-isu-wakati.txt')\nmodel = word2vec.Word2Vec(data, size=200, min_count=1)\nmodel.save_word2vec_format(\"ningen-isu-w2v\",  binary=False)\n\n# \u53ef\u8996\u5316\u306e\u305f\u3081\u306e\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nfont_path = '/Library/Fonts/Osaka.ttf'\nfont_prop = matplotlib.font_manager.FontProperties(fname=font_path)\nmatplotlib.rcParams['font.family'] = font_prop.get_name()\nmatplotlib.rcParams['font.size'] = 10.0\n\n# word2vec \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u53ef\u8996\u5316\u7528\u30c7\u30fc\u30bf\u306b\u52a0\u5de5\u3059\u308b\u95a2\u6570\u3002\ndef load_embeddings(file_name):\n  with codecs.open(file_name, 'r', 'utf-8') as f_in:\n    vocabulary, wv = zip(*[line.strip().split(' ', 1) for line in f_in])\n    wv = np.loadtxt(wv, delimiter=' ', dtype=float)\n  return wv, vocabulary\n\n# \u30b0\u30e9\u30d5\u306e\u751f\u6210\nembeddings_file = \"ningen-isu-w2v\"\nwv, vocabulary = load_embeddings(embeddings_file)\ntsne = TSNE(n_components=2, random_state=0)\nnp.set_printoptions(suppress=True)\nY = tsne.fit_transform(wv[:200,:]) # \u4e00\u90e8\u306e\u5358\u8a9e\u306b\u9650\u5b9a\n\nplt.figure(figsize=(20,20))\nplt.scatter(Y[:, 0], Y[:, 1])\nfor label, x, y in zip(vocabulary, Y[:, 0], Y[:, 1]):\n  plt.annotate(label, xy=(x, y), xytext=(0, 0), textcoords='offset points')\n\n#plt.show()\nplt.savefig('ningen-isu.png', bbox_inches='tight')\nplt.close()\n\n\n\u300c\u79c1\u300d\u300c\u6905\u5b50\u300d\u300c\u611f\u89e6\u300d\u306a\u3069\u3068\u3044\u3063\u305f\u5358\u8a9e\u306e\u8ddd\u96e2\u304c\u8fd1\u3044\u3053\u3068\u306a\u3069\u304c\u898b\u3066\u53d6\u308c\u308b\u306a\u3001\u3046\u3093\u3002 \n\u7279\u5b9a\u306e\u5358\u8a9e\u306e\u8ddd\u96e2\uff08cos\u5024\uff09\u3082\u3044\u304f\u3064\u304b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u304a\u3053\u3046\u304b\u3002\n\n\u3075\u3080\u3002\u3067\u306f\u300c\u79c1\u300d\u304b\u3089\u300c\u6905\u5b50\u300d\u3092\u5f15\u304f\u3069\u3046\u306a\u308b\u3068\u3044\u3046\u306e\u304b\u3002\n\n\u300c\u5fae\u5999\u300d\u3002\nIoT \u3060\u306e Blockchain \u3060\u306e\u3068\u55a7\u3057\u3044\u6628\u4eca\u3001\u3082\u3057\u4e71\u6b69\u304c\u3054\u5b58\u547d\u306a\u3089\u3070\u3001\u3069\u306e\u3088\u3046\u306a\u300e\u4eba\u9593\u6905\u5b50\u300f\u3092\u65b0\u305f\u306b\u3076\u3061\u4e0a\u3052\u3066\u304f\u308c\u3066\u3044\u305f\u3060\u308d\u3046\u304b\u3001\u306a\u3069\u3068\u89e3\u6790\u7d50\u679c\u3068\u306f\u307b\u3068\u3093\u3069\u95a2\u4fc2\u306a\u3044\u4e3b\u89b3\u7684\u306a\u611f\u60f3\u3092\u7d50\u8a9e\u3068\u3044\u305f\u3057\u307e\u3057\u3066\u300112\u670823\u65e5\u62c5\u5f53\u5206\u306e\u8cac\u52d9\u3092\u5168\u3046\u3057\u305f\u3082\u306e\u3068\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\u304a\u308f\u308a\u3002\n\nPOSTSCRIPT\n\n# \u30b0\u30e9\u30d5\u306e\u751f\u6210\nembeddings_file = \"ningen-isu-w2v\"\nwv, vocabulary = load_embeddings(embeddings_file)\ntsne = TSNE(n_components=2, random_state=0)\nnp.set_printoptions(suppress=True)\nY = tsne.fit_transform(wv[:200,:]) # \u4e00\u90e8\u306e\u5358\u8a9e\u306b\u9650\u5b9a\n\n\u4e0a\u8a18\u95a2\u6570\u4e2d\u3001Y = tsne.fit_transform(wv[:200,:]) \u3067\u3001\u3053\u3061\u3089\u306e Issue \u304c\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u518d\u73fe\u3055\u308c\u305f\u3002\nhttps://github.com/scikit-learn/scikit-learn/issues/6665\nIssue \u306e\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u3042\u308b\u3088\u3046\u306b\u3001\u7b46\u8005\u74b0\u5883\u3067\u3082 pip install --pre scikit-learn -U \u3067 fix \u3067\u304d\u305f\u3002\n12\u670823\u65e5\u306e\u304d\u3087\u3046\u306f\u4eca\u4e0a\u5929\u7687\u306e\u5fa1\u8a95\u751f\u65e5\u3092\u304a\u795d\u3044\u3059\u308b\u300c\u5929\u9577\u7bc0\u300d\u3002\u3064\u3044\u3067\u306b\u7687\u7d00\u4e8c\u516d\u4e03\u516d\u5e74\uff08\u7d20\u6570\uff1f\u3044\u3084\u3001$2^2 \\times 3 \\times 223$\uff09\u3060\u305d\u3046\u3067\u3001\u8b39\u3093\u3067\u304a\u559c\u3073\u7533\u3057\u4e0a\u3052\u308b\u3068\u3068\u3082\u306b\u3001\u3053\u306e\u4f73\u304d\u65e5\u306b\u3042\u305f\u308a\u5449\u6e2f\u3067\u6e80\u8266\u98fe\u898b\u7269\u3068\u3067\u3082\u3044\u304d\u305f\u3044\u3068\u3053\u308d\u3060\u304c\u3001\u624b\u5143\u4e0d\u5982\u610f\u306b\u3064\u304d\u663c\u904e\u304e\u304b\u3089\u96e3\u6ce2\u306e\u9ad8\u67b6\u4e0b\u306b\u3066\u5357\u6d77\u96fb\u8eca\u306edef\u306a\u30d0\u30a4\u30d6\u30b9\u3068IPA\u3092\u30ec\u30d5\u30c8\u30cf\u30f3\u30c9\u306b\u3064\u308c\u3065\u308c\u306a\u308b\u307e\u307e\u3001\u3053\u3053\u306e\u3068\u3053\u308d\u306e\u624b\u306a\u3050\u3055\u307f\u3067\u3042\u308b [Jupyter Notebook](http://jupyter.org/) \u306e\u3088\u304f\u3042\u308b\u3084\u3064\u3092\u3082\u306e\u3050\u308b\u304a\u3057\u3052\u306b\u30ed\u30b0\u3063\u3066\u307f\u308b\u3002\n\n## \u3088\u304f\u3042\u308b\u3084\u3064\n\n- \u6570\u5f0f\u30a8\u30c7\u30a3\u30bf\n- \u30b0\u30e9\u30d5\u63cf\u753b\n- \u753b\u50cf\u51e6\u7406\n- \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\n\n### \u6570\u5f0f\u30a8\u30c7\u30a3\u30bf\n\n\u3053\u3053\u4e00\u5e74\u307b\u3069\u5e2b\u5320\u306b\u3064\u3044\u3066\u7fa4\u8ad6\u306a\u3093\u305e\u3092\u30a2\u30e9\u30d5\u30a9\u30fc\u306e\u624b\u7fd2\u3044\u3067\u3084\u3063\u3066\u3044\u308b\u3002\u624b\u66f8\u304d\u306e\u30ce\u30fc\u30c8\u3082\u305d\u3053\u305d\u3053\u6e9c\u307e\u3063\u3066\u304d\u305f\u304b\u3089\u6e05\u66f8\u3057\u3066\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u6b8b\u3057\u3066\u304a\u304d\u305f\u3044\u52d5\u6a5f\u304b\u3089 [LaTeX](https://www.latex-project.org/) \u3067\u6570\u5f0f\u30e1\u30a4\u30f3\u306e\u30c6\u30ad\u30b9\u30c8\u3092 Markdown \u3059\u308b\u306e\u3060\u304c\u3001\u809d\u5fc3\u306e\u6570\u5f0f\u306e\u90e8\u5206\u306f\u30bb\u30eb\u306e\u30e2\u30fc\u30c9\u3092 `Markdown` \u306b\u3057\u3066\u6848\u306e\u5b9a\u3001\n\n`$LaTeX\u8a18\u6cd5$` \n\n\u3068\u3059\u308c\u3070\u3001\u3042\u3068\u306f [MathJax](https://www.mathjax.org/) \u304c\u3088\u308d\u3057\u304f\u3084\u3063\u3066\u304f\u308c\u308b\u3002\n\n\u3053\u306e\u3042\u3044\u3060 [well-defined](https://en.wikipedia.org/wiki/Well-defined) \u304c\u554f\u984c\u306b\u306a\u308b\u4f8b\u3092\u8a00\u3048\u3001\u3068\u3044\u3046\u3053\u3068\u3060\u3063\u305f\u304b\u3089\u300c\u5206\u6570\u306e\u8db3\u3057\u7b97\u3092\u5206\u5b50\u3068\u5206\u6bcd\u3001\u305d\u308c\u305e\u308c\u3092\u8db3\u3059\u3053\u3068\u306b\u3059\u308b\u300d\u306a\u3069\u3068\u305f\u3069\u305f\u3069\u3057\u304f\u51fa\u3057\u305f\u3089\u3001\u5fae\u304b\u306b\u30cb\u30e4\u30ea\u3068\u3055\u308c\u305f\u5239\u90a3\u3001\u5206\u6570\u306e\u8db3\u3057\u7b97\u306e well-defined \u3092\u77ac\u6bba\u3067\u793a\u3055\u308c\u305f\u306e\u3067\u30ce\u30fc\u30c8\u3059\u308b\u3057\u304b\u306a\u3044\u3060\u308d\u3046\uff08\u8981\u70b9\u306e\u307f\u629c\u7c8b\uff09\u3002\n\n```py3\n$\\begin{eqnarray*}\n    \\dfrac{a}{b} = \\dfrac{a^{'}}{b^{'}} \\nonumber \\\\\n    \\dfrac{c}{d} = \\dfrac{c^{'}}{d^{'}} \\nonumber\n\\end{eqnarray*}$\n\n\u3068\u3059\u308b\u3068,\n\n$\\begin{eqnarray*}\n    {a}{b^{'}} - {a^{'}}{b} = 0 \\nonumber \\\\\n    {c}{d^{'}} - {c^{'}}{d} = 0 \\nonumber \n\\end{eqnarray*}$\n\n$\\begin{eqnarray*}\n    \\dfrac{ad+bc}{bd} = \\dfrac{a^{'}d^{'}+b^{'}c^{'}}{b^{'}d^{'}} \\nonumber\n\\end{eqnarray*}$\n\n$\\begin{eqnarray*}\n    (ad + bc)b^{'}d^{'} - bd(a^{'}d^{'} + b^{'}c^{'}) & = &  adb^{'}d^{'} + bcb^{'}d^{'} - bda^{'}d^{'} - bdb^{'}c^{'} \\nonumber \\\\\n                                                      & = &  dd^{'}(ab^{'} - a^{'}b) + bb^{'}(cd^{'} - c^{'}d)  \\nonumber \\\\\n                                                      & = & 0 \\nonumber \n\\end{eqnarray*}$\n```\n\n[github](https://github.com/azukiwasher/math-lessons/blob/master/algebra/well-defined.ipynb) \u3067\u3082\u305d\u3053\u305d\u3053\u8868\u793a\u3055\u308c\u308b\u304c\u3001[nbviewer](https://nbviewer.jupyter.org/) \u3092\u901a\u3057\u305f\u307b\u3046\u304c\u624b\u8a31\u306e\u8868\u73fe\u3092\u5fe0\u5b9f\u306b[\u518d\u73fe](https://nbviewer.jupyter.org/github/azukiwasher/math-lessons/blob/master/algebra/well-defined.ipynb)\u3057\u3066\u304f\u308c\u308b\u3002\n\n### \u30b0\u30e9\u30d5\u63cf\u753b\n\n\u3053\u306e\u3042\u305f\u308a\u304b\u3089\u53e3\u6570\u3092\u6fc0\u6e1b\u3055\u305b\u308b\u4f55\u304b\u304c\u4f53\u5185\u306b\u6fc0\u3057\u304f\u5206\u6ccc\u3055\u308c\u308b\u306e\u3092\u611f\u3058\u306f\u3058\u3081\u305f\u306e\u3067\u3001+IPA\u306a\u3089\u3073\u306b\u30ec\u30e0\u30cb\u30b9\u30b1\u30fc\u30c8\u66f2\u7dda\u3067\u3082\u63cf\u3044\u3066\u3084\u308a\u904e\u3054\u3057\u3066\u307f\u308b\u30c6\u30b9\u30c8\u3002\n\n```py3\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nalpha = 1\nt = np.linspace(0, 2*np.pi, num=1000)\nx = [alpha * np.sqrt(2)*np.cos(i) / (np.sin(i)**2+1) for i in t]\ny = [alpha * np.sqrt(2)*np.cos(i)*np.sin(i) / (np.sin(i)**2+1) for i in t]\nplt.plot(x, y)\n```\n![lemniscate.png](https://qiita-image-store.s3.amazonaws.com/0/7477/93eef902-55cf-e08c-f8c2-556de3ececd4.png)\n\n\n\u307b\u3093\u306e\u308a\u3068\u305d\u308c\u3063\u307d\u3044\u306e\u304c\u3067\u304d\u3042\u304c\u3063\u305f\u3002\n\u306a\u304a\u3001\u30ec\u30e0\u30cb\u30b9\u30b1\u30fc\u30c8\u66f2\u7dda\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089](http://mathtrain.jp/agmean)\u306e\u89e3\u8aac\u304c\u7d20\u6575\u3060\u3002 \n\n### \u753b\u50cf\u51e6\u7406\n\n[opencv](http://opencv.org/) \u3092\u4f7f\u3063\u3066\u3001\u753b\u50cf\u4e0a\u306e\u3044\u308f\u3086\u308b\u300c\u4eba\u300d\u306e\u9854\u3092\u8a8d\u8b58\u3055\u305b\u308b\u4f8b\u306e\u3084\u3064\u3002\u3068\u3042\u308b\u3086\u308b\u30ad\u30e3\u30e9\uff08\u305d\u308c\u307b\u3069\u3001\u3086\u308b\u304f\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\uff09\u3067\u3084\u3063\u3066\u307f\u3066\u3069\u3046\u306a\u308b\u304b\u307e\u305a\u306f\u78ba\u8a8d\u3002\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3086\u308b\u30ad\u30e3\u30e9\u753b\u50cf\u3092\u3072\u3063\u3071\u3063\u3066\u304f\u308b\u3002\u3059\u3079\u3066 Jupyter Notebook \u4e0a\u306e\u30ef\u30f3\u30b9\u30c8\u30c3\u30d7\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u5b8c\u7d50\u3059\u308b\u3002\n\n```py3\nimport cv2\nfrom skimage import io\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nurl = \"https://qiita-image-store.s3.amazonaws.com/0/151745/8f4e7214-6c1c-c782-4986-5929a33f5a1b.jpeg\"\nimg = io.imread(url)\nplt.imshow(img)\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/7477/1c625ad7-3f2b-6848-059e-2a8e4d93e0ad.png)\n\n\u3042\u3089\u304b\u3058\u3081\u4eba\u306e\u9854\u306e\u7279\u5fb4\u3092\u5b66\u7fd2\u3055\u305b\u305f\u9759\u7684\u306a\u30c7\u30fc\u30bf\uff08\u30ab\u30b9\u30b1\u30fc\u30c9\u30d5\u30a3\u30eb\u30bf\u30fc\u30d5\u30a1\u30a4\u30eb\uff09\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n```py3\nPATH_TO_CASCADE = \"/Users/azki/anaconda3/share/OpenCV/haarcascades/haarcascade_frontalface_default.xml\"\nimg_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\ncascade = cv2.CascadeClassifier(PATH_TO_CASCADE)\nfaces = cascade.detectMultiScale(img_gray, scaleFactor=1.1, minNeighbors=1, minSize=(1, 1))\nnew_img = img\nfor x,y,w,h in faces:\n  cv2.rectangle(new_img, (x,y), (x+w, y+h), (0, 0, 255), thickness=2)\n\nplt.imshow(new_img)\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/7477/793a0fdb-18b3-90f7-c346-6cf5ef19bbd2.png)\n\n\u306a\u306b\u3084\u30892\u7b87\u6240\u3001\u4eba\u306e\u9854\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3060\u304c\uff08\u9752\u3044\u56db\u89d2\u3002\u9f8d\u99ac\u3063\u307d\u3044\u9285\u50cf\u306f\u5b8c\u5168\u306b\u30b9\u30eb\u30fc\uff09\u3001\u898b\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u3057\u3066\u5225\u306e\u753b\u50cf\u3067\u8a66\u3057\u3066\u307f\u308b\u3002\n\n```py3\nimg2 = cv2.imread('gymnasium.jpg', cv2.IMREAD_COLOR)\nplt.imshow(img2)\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/7477/b856e0de-1b63-b0b7-ef07-f503a56a0589.png)\n\n\u3055\u304d\u307b\u3069\u306e\u3086\u308b\u30ad\u30e3\u30e9\u3068\u304a\u306a\u3058\u30d5\u30a3\u30eb\u30bf\u3092\u9069\u7528\u3059\u308b\u3002\n\n```py3\nimg2_gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)\ncascade = cv2.CascadeClassifier(PATH_TO_CASCADE)\nfaces = cascade.detectMultiScale(img2_gray, scaleFactor=1.1, minNeighbors=1, minSize=(1, 1))\nnew_img2 = img2\nfor x,y,w,h in faces:\n  cv2.rectangle(new_img2, (x,y), (x+w, y+h), (0, 0, 255), 2)\n\nplt.imshow(new_img2)\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/7477/d6535ba1-4144-14fd-fe49-d8ca47e5ebaa.png)\n\n\u5e7e\u3064\u304b\u8aa4\u7206\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3001\u60aa\u304f\u306a\u3044\u7d50\u679c\u3060\u3002\n\u3053\u306e\u3088\u3046\u306b\u4eba\u306e\u9854\u3092\u3060\u3044\u305f\u3044\u30b9\u30e9\u30a4\u30b9\u3067\u304d\u305f\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u30e2\u30b6\u30a4\u30af\u3092\u304b\u3051\u308b\u3082\u3088\u3057\u3001\u611f\u60c5\u3084\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u3092\u6a5f\u68b0\u7684\u304b\u3064\u5927\u898f\u6a21\u306b\u89e3\u6790\u3067\u304d\u308b\u306f\u305a\u3060\u3002\n\n### \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\n\n```text\n\u4f73\u5b50\u306f\u3001\u6bce\u671d\u3001\u592b\u306e\u767b\u5e81\u3092\u898b\u9001\u3063\u3066\u4e86\u3046\u3068\u3001\u305d\u308c\u306f\u3044\u3064\u3082\u5341\u6642\u3092\u904e\u304e\u308b\u306e\u3060\u304c\u3001\u3084\u3063\u3068\u81ea\u5206\u306e\u304b\u3089\u3060\u306b\u306a\u3063\u3066...\n```\n\n\u3068\u3044\u3046\u3001\u4e00\u7bc0\u304b\u3089\u306f\u3058\u307e\u308a\u3001\n\n```text\n\u539f\u7a3f\u306b\u306f\u3001\u614b\u3068\u7701\u3044\u3066\u7f6e\u304d\u307e\u3057\u305f\u304c\u3001\u8868\u984c\u306f\u300c\u4eba\u9593\u6905\u5b50\u300d\u3068\u3064\u3051\u305f\u3044\u8003\u3048\u3067\u3054\u3056\u3044\u307e\u3059\u3002\n\u3067\u306f\u3001\u5931\u793c\u3092\u9867\u307f\u305a\u3001\u304a\u9858\u3044\u307e\u3067\u3002\u5306\u3005\u3002\n```\n\n\u3067\u3001\u7d42\u308f\u308b\u6c5f\u6238\u5ddd\u4e71\u6b69\u306e\u300e[\u4eba\u9593\u6905\u5b50](http://www.aozora.gr.jp/cards/001779/files/56648_58207.html)\u300f\u3002\n\n\u81ea\u3089\u304c\u30c7\u30b6\u30a4\u30f3\u3057\u305f\u6905\u5b50\u306e\u4e2d\u306b\u8eab\u3092\u6f5c\u3081\u3001\u5931\u793c\u3069\u3053\u308d\u304b\u4ed6\u4eba\u5b85\u306b\u52dd\u624b\u306b\u5fcd\u3073\u8fbc\u307f\u3001\u4e00\u7a2e\u306e\u30bb\u30f3\u30b5\u30fc\u3068\u5316\u3057\u305f\u304b\u306e\u3088\u3046\u306b\u611f\u899a\u3092\u7814\u304e\u6f84\u307e\u305b\u3001\u90f5\u4fbf\u5c40\u3068\u3044\u3046\u5f53\u6642\u6700\u5927\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3001\u30ed\u30b0\u306a\u3089\u306c\u624b\u7d19\u3068\u3044\u3046\u975e\u540c\u671f\u306a\u3001\u305d\u3057\u3066\u6975\u3081\u3066\u4e00\u65b9\u7684\u306a\u300c\u60f3\u3044\u300d\u3092\u9001\u4fe1\u3002\u597d\u5947\u5fc3\u3067\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u3055\u308c\u305f\u53d7\u4fe1\u8005\u306f\u3042\u308a\u3048\u306a\u3044\u73fe\u5b9f\u306b\u6144\u304d\u3064\u3064\u3001\u300c\u3055\u3066\u3053\u306e\u30ad\u30e2\u3044\u6905\u5b50\u3001\u3069\u3046\u51e6\u5206\u3057\u3088\u3046\u304b\u3057\u3089\uff1f\u300d\u3068\u3001\u4ed5\u4e8b\u304b\u3089\u5e30\u5b85\u3057\u305f\u3054\u4e3b\u4eba\u306b\u76f8\u8ac7\u3057\u305f\u306e\u304b\u3069\u3046\u304b\u3002\n\n\u3053\u306e\u300c\u4eba\u9593\u6905\u5b50\u300d\u304c\u6700\u7d42\u7684\u306b\u3069\u3046\u51e6\u5206\u3055\u308c\u305f\u306e\u304b\u3092\u77e5\u308b\u3059\u3079\u3082\u306a\u3044\u3057\u3001\u305d\u3082\u305d\u3082\u77e5\u308a\u305f\u304f\u3082\u306a\u3044\u306e\u3060\u304c\u3001\u66f8\u7c21\u4f53\u3068\u5730\u306e\u6587\u304c\u7d76\u5999\u306b\u30d6\u30ec\u30f3\u30c9\u3055\u308c\u305f\u5353\u8d8a\u3057\u305f\u69cb\u6210\u304b\u3089\u306a\u308b\u3001\u5922\u91ce\u4e45\u4f5c\u306e\u300e[\u74f6\u8a70\u5730\u7344](http://www.aozora.gr.jp/cards/000096/files/2381_13352.html)\u300f\u306b\u3082\u6bd4\u80a9\u3059\u308b\u5927\u6b63\u6642\u4ee3\u306e\u30e9\u30ce\u30d9\u3067\u3042\u308b\u3053\u306e\u4f5c\u54c1\u3092\u3001\u5358\u8a9e\u306e\u7f85\u5217\u304b\u3089\u306a\u308b\u30c7\u30fc\u30bf\u3068\u3057\u3066[word2vec](https://code.google.com/archive/p/word2vec/)\u3067\u89e3\u6790\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u3088\u3046\u3002 \n\n\u30eb\u30d3\u3084\u30d8\u30c3\u30c0\u30fb\u30d5\u30c3\u30bf\u306a\u3069\u306e\u30ce\u30a4\u30ba\u3092\u3042\u3089\u304b\u3058\u3081\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3057\u3066\u304a\u3044\u305f\u30c6\u30ad\u30b9\u30c8\u3092 [MeCab](http://taku910.github.io/mecab/) \u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u3066\u30c8\u30fc\u30af\u30f3\u5316\u3002\u305d\u308c\u3089\u30c8\u30fc\u30af\u30f3\u304b\u3089\u306a\u308b\u30ea\u30b9\u30c8\u3092\u5165\u529b\u3068\u3057\u3066\u3001word2vec \u3067\u300e\u4eba\u9593\u6905\u5b50\u300f\u3092\u69cb\u6210\u3059\u308b\u8a9e\u5f59\u3092\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u3067\u8868\u73fe\u3059\u308b\u3002\u7a7a\u9593\u5185\u3067\u306e\u8ddd\u96e2\uff08cos\u5024\uff09\u304c\u8fd1\u3044\u307b\u3069\u610f\u5473\u7684\u306b\u985e\u4f3c\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3059\u3002\u307e\u305f\u3001\u5358\u8a9e\u3069\u3046\u3057\u306e\u6f14\u7b97\uff08\u52a0\u6e1b\uff09\u3082\u53ef\u80fd\u306b\u306a\u308b\u3002[\u53c2\u8003](https://deepage.net/bigdata/machine_learning/2016/09/02/word2vec_power_of_word_vector.html)\u3002\n\n\u3068\u3082\u3042\u308c[\u9752\u7a7a\u6587\u5eab](http://www.aozora.gr.jp/)\u304b\u3089\u30c6\u30ad\u30b9\u30c8\u3092\u5165\u624b\u3002\n\n```py3\n!curl -O http://www.aozora.gr.jp/cards/001779/files/56648_ruby_58198.zip\n!unzip 56648_ruby_58198.zip\n\nfile = codecs.open('ningen-isu.txt', 'w', 'utf-8')\nfor line in codecs.open('ningen_isu.txt', 'r', 'shift_jis'):\n  file.write(line)\nfile.close\n\n# \u3053\u3053\u3067\u9069\u5f53\u306a\u30a8\u30c7\u30a3\u30bf\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3057\u3066\u306d\u3002\n```\n\n\u5f62\u614b\u7d20\u89e3\u6790\u3002\u54c1\u8a5e\u304c\u300c\u540d\u8a5e\u300d\u306e\u5358\u8a9e\u3092\u30c1\u30e7\u30a4\u30b9\u3002\n\n```py3\nimport MeCab\n\ntagger = MeCab.Tagger ('-F\"%f[6] \" -U\"%m \" -E\"\\n\" -b 50000 -d /usr/local/lib/mecab/dic/mecab-ipadic-neologd')\ntagger.parseToNode('')\n\ntext = open('ningen-isu.txt')\ntokens = []\nfor line in text:\n  node = tagger.parseToNode(line)\n  while node:\n    word = node.surface\n    pos = node.feature.split(',')[0]\n    if '\u540d\u8a5e' in pos:\n      tokens.append(word)\n    node = node.next\n        \nwith open('ningen-isu-wakati.txt', 'w') as file:\n  file.write(\" \".join(tokens))\n\ntext.close\nfile.close\n```\n\n\u5358\u8a9e\u3092\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u3067\u8868\u73fe\u3002\u307e\u305f\u3001\u305d\u306e\u4e00\u90e8\u3092\u53ef\u8996\u5316\u3059\u308b\u307e\u3067\u3002\n\n```py3\n# \u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nimport sys\nimport codecs\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager\nfrom matplotlib.font_manager import FontProperties\nfrom sklearn.manifold import TSNE\nfrom gensim.models import word2vec\n%matplotlib inline\n\n# \u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u306e\u751f\u6210\n# \u751f\u6210\u3055\u308c\u305f \"ningen-isu-w2v\" \u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u884c\u76ee\u306f\u884c\u3054\u3068\u6d88\u3057\u3068\u3044\u3066\u306d\u3002\ndata = word2vec.LineSentence('ningen-isu-wakati.txt')\nmodel = word2vec.Word2Vec(data, size=200, min_count=1)\nmodel.save_word2vec_format(\"ningen-isu-w2v\",  binary=False)\n\n# \u53ef\u8996\u5316\u306e\u305f\u3081\u306e\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nfont_path = '/Library/Fonts/Osaka.ttf'\nfont_prop = matplotlib.font_manager.FontProperties(fname=font_path)\nmatplotlib.rcParams['font.family'] = font_prop.get_name()\nmatplotlib.rcParams['font.size'] = 10.0\n\n# word2vec \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u53ef\u8996\u5316\u7528\u30c7\u30fc\u30bf\u306b\u52a0\u5de5\u3059\u308b\u95a2\u6570\u3002\ndef load_embeddings(file_name):\n  with codecs.open(file_name, 'r', 'utf-8') as f_in:\n    vocabulary, wv = zip(*[line.strip().split(' ', 1) for line in f_in])\n    wv = np.loadtxt(wv, delimiter=' ', dtype=float)\n  return wv, vocabulary\n\n# \u30b0\u30e9\u30d5\u306e\u751f\u6210\nembeddings_file = \"ningen-isu-w2v\"\nwv, vocabulary = load_embeddings(embeddings_file)\ntsne = TSNE(n_components=2, random_state=0)\nnp.set_printoptions(suppress=True)\nY = tsne.fit_transform(wv[:200,:]) # \u4e00\u90e8\u306e\u5358\u8a9e\u306b\u9650\u5b9a\n\nplt.figure(figsize=(20,20))\nplt.scatter(Y[:, 0], Y[:, 1])\nfor label, x, y in zip(vocabulary, Y[:, 0], Y[:, 1]):\n  plt.annotate(label, xy=(x, y), xytext=(0, 0), textcoords='offset points')\n\n#plt.show()\nplt.savefig('ningen-isu.png', bbox_inches='tight')\nplt.close()\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/7477/a8ad6005-59dc-9010-e12f-71af0b5d6a01.png)\n\n\u300c\u79c1\u300d\u300c\u6905\u5b50\u300d\u300c\u611f\u89e6\u300d\u306a\u3069\u3068\u3044\u3063\u305f\u5358\u8a9e\u306e\u8ddd\u96e2\u304c\u8fd1\u3044\u3053\u3068\u306a\u3069\u304c\u898b\u3066\u53d6\u308c\u308b\u306a\u3001\u3046\u3093\u3002 \n\n\u7279\u5b9a\u306e\u5358\u8a9e\u306e\u8ddd\u96e2\uff08cos\u5024\uff09\u3082\u3044\u304f\u3064\u304b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u304a\u3053\u3046\u304b\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/7477/1e46b9e0-0c6b-9cf6-fc49-5fa8b2ab9f51.png)\n\n\u3075\u3080\u3002\u3067\u306f\u300c\u79c1\u300d\u304b\u3089\u300c\u6905\u5b50\u300d\u3092\u5f15\u304f\u3069\u3046\u306a\u308b\u3068\u3044\u3046\u306e\u304b\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/7477/d00e85c9-3d8d-4084-cc7a-886f004f608a.png)\n\n\u300c\u5fae\u5999\u300d\u3002\n\nIoT \u3060\u306e Blockchain \u3060\u306e\u3068\u55a7\u3057\u3044\u6628\u4eca\u3001\u3082\u3057\u4e71\u6b69\u304c\u3054\u5b58\u547d\u306a\u3089\u3070\u3001\u3069\u306e\u3088\u3046\u306a\u300e\u4eba\u9593\u6905\u5b50\u300f\u3092\u65b0\u305f\u306b\u3076\u3061\u4e0a\u3052\u3066\u304f\u308c\u3066\u3044\u305f\u3060\u308d\u3046\u304b\u3001\u306a\u3069\u3068\u89e3\u6790\u7d50\u679c\u3068\u306f\u307b\u3068\u3093\u3069\u95a2\u4fc2\u306a\u3044\u4e3b\u89b3\u7684\u306a\u611f\u60f3\u3092\u7d50\u8a9e\u3068\u3044\u305f\u3057\u307e\u3057\u3066\u300112\u670823\u65e5\u62c5\u5f53\u5206\u306e\u8cac\u52d9\u3092\u5168\u3046\u3057\u305f\u3082\u306e\u3068\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u3002\n\n> POSTSCRIPT\n\n```py3\n# \u30b0\u30e9\u30d5\u306e\u751f\u6210\nembeddings_file = \"ningen-isu-w2v\"\nwv, vocabulary = load_embeddings(embeddings_file)\ntsne = TSNE(n_components=2, random_state=0)\nnp.set_printoptions(suppress=True)\nY = tsne.fit_transform(wv[:200,:]) # \u4e00\u90e8\u306e\u5358\u8a9e\u306b\u9650\u5b9a\n```\n\u4e0a\u8a18\u95a2\u6570\u4e2d\u3001`Y = tsne.fit_transform(wv[:200,:])` \u3067\u3001\u3053\u3061\u3089\u306e Issue \u304c\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u518d\u73fe\u3055\u308c\u305f\u3002\nhttps://github.com/scikit-learn/scikit-learn/issues/6665\nIssue \u306e\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u3042\u308b\u3088\u3046\u306b\u3001\u7b46\u8005\u74b0\u5883\u3067\u3082 `pip install --pre scikit-learn -U` \u3067 fix \u3067\u304d\u305f\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "tags": ["Jupyter", "Python", "word2vec", "LaTeX", "OpenCV"]}