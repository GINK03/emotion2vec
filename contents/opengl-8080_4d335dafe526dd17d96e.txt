{"context": "\n\n\u81ea\u5df1\u7d39\u4ecb\n\n\nopengl-8080\n\u4e3b\u306b Qiita \u3067\u6280\u8853\u30e1\u30e2\u3092\u66f8\u3044\u305f\u308a\n\u8da3\u5473\u3067 Kotlin, Java 8, Java EE \u3092\u3055\u308f\u308a\n\u4ed5\u4e8b\u3067 Excel VBA, Java 6, Struts1 \u3092\u4f7f\u3046\u95a2\u897f\u306e SE\n\u95a2\u897f\uff08\u305f\u307e\u306b\u6771\u4eac\uff09\u306e\u52c9\u5f37\u4f1a\u306b\u51fa\u6ca1\n\n\n\nKotlin \u3068\u3044\u3048\u3070\uff1f\n\n\n\u4fbf\u5229\u306a\u6a5f\u80fd\u306e\u8a71\u306f\u3088\u304f\u805e\u304f\u304c...\n\nNullable\nNon-Null Type\n\u95a2\u6570\u30ea\u30c6\u30e9\u30eb\n\u62e1\u5f35\u95a2\u6570\n\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\u30b9\u30de\u30fc\u30c8\u30ad\u30e3\u30b9\u30c8\n\u30af\u30e9\u30b9\u59d4\u8b72\n\u30d7\u30ed\u30d1\u30c6\u30a3\u59d4\u8b72\n\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\netc...\n\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u8a71\u3092\u3042\u307e\u308a\u805e\u304b\u306a\u3044\u6c17\u304c\u3059\u308b\u81ea\u5206\u306e\u8abf\u3079\u65b9\u304c\u7518\u3044\u3060\u3051\u304b\u3082...\n\n\n\n\u3044\u3056\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068...\n\n\nJava \u306e ArrayList \u3092\u4f7f\u3048\u3070\u3044\u3044\u306e\uff1f\n\n\nKotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u3042\u308b\u3089\u3057\u3044\n\u3069\u3046\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u308b\u306e\uff1f\n\u30af\u30e9\u30b9\u9593\u306e\u95a2\u4fc2\u306f\uff1f\nJava \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306e\u5909\u63db\u306f\uff1f\n\n\n\u3069\u3046\u3084\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u308b\u306e\uff1f\n\n\n\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u307f\u305f\u3044\u306a\u306e\u304c\u3042\u308b\u3089\u3057\u3044\n\u4f55\u7a2e\u985e\u3042\u308b\u306e\uff1f\n\n\n\u3069\u3046\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\uff1f\n\n\nStream API \u3067\u3084\u3063\u3066\u305f\u30a2\u30ec\u3001Kotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3069\u3046\u3084\u308b\u306e\uff1f\n\n\n\u578b\u5f15\u6570\u3067 <? extends Hoge> \u3068\u304b\u3057\u3066\u305f\u306e\u3001\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u306e\uff1f\n\n\n\n(\uff1b\u00b4\u30fb\u03c9\u30fb)\u7d50\u69cb\u5206\u304b\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u3044\n\n\n\n\u8a00\u8a9e\u3092\u899a\u3048\u308b\u305f\u3081\u306b\u52c9\u5f37\u3059\u308b\u3053\u3068\n\n\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u65b9\u6cd5\n\u6587\u6cd5\uff08\u5909\u6570\u5ba3\u8a00\u3001\u95a2\u6570\u5ba3\u8a00\u3001\u30af\u30e9\u30b9\u5ba3\u8a00\u3001\u5236\u5fa1\u6587\u3001etc...\uff09\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4f7f\u3044\u65b9\n\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u3001\u8a00\u8a9e\u3092\u5b66\u3076\u3046\u3048\u3067\u6587\u6cd5\u3068\u540c\u3058\u304f\u3089\u3044\u57fa\u672c\u7684\u306a\u3082\u306e\n\n\nKotlin\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5165\u9580\n\n\n\u5bfe\u8c61\u8005\u306e\u30a4\u30e1\u30fc\u30b8\n\nKotlin \u306f\u3058\u3081\u305f\u3070\u304b\u308a\nKotlin \u4f7f\u3063\u3066\u308b\u3051\u3069\u3001\u305d\u3046\u3044\u3048\u3070\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u8abf\u3079\u305f\u3053\u3068\u306a\u3044\n\n\n\nKotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3069\u3093\u306a\u30af\u30e9\u30b9\u304c\u3042\u308b\uff1f\n\n\nKotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n\n\n\n\n\nKotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n\n\nList, Set, Map \u306e\uff13\u3064\n\n\n\nList\uff1a\u9806\u5e8f\u3092\u6301\u3064\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3002\u91cd\u8907\u53ef\n\nSet\uff1a\u9806\u5e8f\u3092\u6301\u305f\u306a\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3002\u91cd\u8907\u4e0d\u53ef\n\nMap\uff1a\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u3067\u5024\u3092\u4fdd\u6301\u3059\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n\n\n\n\n\nJava \u3068\u306e\u9055\u3044\n\n\n\n\n\n\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3068\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\n\n\nList, Set, Map \u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\n\n\n\nadd() \u306a\u3069\u306e\u66f4\u65b0\u7cfb\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u306a\u3044\n\n\n\u66f4\u65b0\u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001 Mutable \u304c\u982d\u306b\u3064\u3044\u305f\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\n\n\n\n\u8aad\u307f\u53d6\u308a\u5c02\u7528 \u2260 \u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\nval mutableList = mutableListOf(1, 2, 3)\nval readonlyList: List<Int> = mutableList\n\nmutableList.add(9)\nprintln(readonlyList)\n\n\n\u5b9f\u884c\u7d50\u679c\n[1, 2, 3, 9]\n\n\n\n\n\u3069\u3046\u3084\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\uff1f\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u308a\u65b9\nval list = listOf(1, 2, 3)\nval set = setOf(1, 2, 3)\nval map = mapOf(1 to 10, 2 to 20, 3 to 30)\n\n\n\n\uff5eOf() \u3068\u3044\u3046\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n\u305d\u308c\u305e\u308c\u5f15\u6570\u304c\u53ef\u5909\u9577\u306b\u306a\u3063\u3066\u3044\u308b\n\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u308a\u65b9\nval mutableList = mutableListOf(1, 2, 3)\nval mutableSet = mutableSetOf(1, 2, 3)\nval mutableMap = mutableMapOf(1 to 10, 2 to 20, 3 to 30)\n\n\n\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u3064\u304f\u308b\u5834\u5408\u306f\u3001\nmutable\uff5eOf() \u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\n\n\n\nJava \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\nval arrayList = arrayListOf(1, 2, 3)\nval hashSet = hashSetOf(1, 2, 3)\nval hashMap = hashMapOf(1 to 10, 2 to 20, 3 to 30)\n\n\n\nArrayList \u3084 HashMap \u306a\u3069\u3001 Java \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u95a2\u6570\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n\nlinkedMapOf(), sortedSetOf() \u306a\u3069\u3082\u3042\u308b\n\n\n\nJava \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306e\u76f8\u4e92\u5909\u63db\u306f\u3069\u3046\u3059\u308b\uff1f\n\n\nJava \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306e\u76f8\u4e92\u5909\u63db\n\nKotlin \u306b\u306f\u3001 Java \u306e\u578b\u3068\u76f8\u4e92\u306b\u81ea\u52d5\u5909\u63db\u3059\u308b\u4ed5\u7d44\u307f\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n\n\nJava \u306e int \u21d4 Kotlin \u306e kotlin.Int\n\nJava \u306e java.lang.String \u21d4 Kotlin \u306e kotlin.String\n\n\n\n\n\n\nJava \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306e\u76f8\u4e92\u5909\u63db\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3082\u81ea\u52d5\u5909\u63db\u306e\u5bfe\u8c61\n\n\n\njava.util.Iterable \u21d4 kotlin.collections.Iterable\n\n\njava.util.Collection\n\u21d4 kotlin.collections.Collection\n\n\njava.util.List \u21d4 kotlin.collections.List\n\n\njava.util.Set \u21d4 kotlin.collections.Set\n\n\njava.util.Map \u21d4 kotlin.collections.Map\n\n\n\n\n\n\n\u5909\u63db\u306e\u305f\u3081\u306e\u7279\u5225\u306a\u5b9f\u88c5\u306f\u4e0d\u8981\n\nJava\u306e\u30b3\u30fc\u30c9\npublic class Foo {\n    public static java.util.List<java.lang.String>\n        getList() {...}\n}\n\n\n\nKotlin\u306e\u30b3\u30fc\u30c9\nval list: kotlin.collections.List<kotlin.String>\n        = Foo.getList();\n\n\n\n\nKotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u3069\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5229\u7528\u3067\u304d\u308b\uff1f\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u4f7f\u3048\u308b\u30e1\u30bd\u30c3\u30c9\n\n\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u5229\u7528\u3057\u305f\u7c21\u6613\u306a\u8a18\u6cd5\nStream API \u306e\u3088\u3046\u306a\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e1\u30bd\u30c3\u30c9\n\n\n\n\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n// +, -\nval from = listOf(1, 2, 3)\nval to = from + 9 - 2\n\nprintln(\"from=${from}, to=${to}\")\n\n// +=, -=\nval mutableList = mutableListOf(1, 2, 3)\nmutableList += 7\nmutableList -= 1\n\nprintln(\"mutableList=${mutableList}\")\n\n// [n]\nprintln(\"mutableList[1] = ${mutableList[1]}\")\n\n\n\u5b9f\u884c\u7d50\u679c\nfrom=[1, 2, 3], to=[1, 3, 9]\nmutableList=[2, 3, 7]\nmutableList[1] = 3\n\n\n\n\n+, - \u306f\u3001\u5185\u90e8\u306e\u72b6\u614b\u3092\u5909\u66f4\u305b\u305a\u306b\u3001\u65b0\u3057\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u8fd4\u3059\u3002\n\n+=, -= \u306f\u3001\u5185\u90e8\u306e\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u3002\n\n[] \u3067\u5404\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\uff08set \u3082\u53ef\u80fd\uff09\u3002\n\n\n\n\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e1\u30bd\u30c3\u30c9\nval list = listOf(1, 2, 3)\n\nlist.forEach { println(\"forEach : \" + it) }\n\nprintln(\"all : \" + list.all { it < 4 })\n\nprintln(\"any : \" + list.any { it == 2 })\n\nprintln(\"filter : \" + list.filter { it%2 == 1 })\n\nprintln(\"map : \" + list.map { it * 10 })\n\nprintln(\"joinToString : \" + list.joinToString(\" > \") { \"($it)\" })\n\n\n\u5b9f\u884c\u7d50\u679c\nforEach : 1\nforEach : 2\nforEach : 3\nall : true\nany : true\nfilter : [1, 3]\nmap : [10, 20, 30]\njoinToString : (1) > (2) > (3)\n\n\n\n\u591a\u304f\u306e\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\nStream API \u3067\u3067\u304d\u305f\u3053\u3068\u306f\u3001\u3060\u3044\u305f\u3044\u6a19\u6e96\u3067\u53ef\u80fd\u3002\n\n\n\n\u6b32\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u304c\u7121\u3044\u5834\u5408\u306f\uff1f\n\n\u4f8b\u3048\u3070 peek() \u306b\u8a72\u5f53\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u7121\u304b\u3063\u305f\u307d\u3044\u3002\nKotlin \u306e\u62e1\u5f35\u95a2\u6570\u3092\u4f7f\u3048\u3070\u3001\u6b32\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3002\n\n\n\npeek() \u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u3057\u3066\u307f\u308b\nfun <T> Iterable<T>.peek(iterator: (T) -> Unit) : Iterable<T> {\n    this.forEach(iterator)\n    return this\n}\n\nfun main(args: Array<String>) {\n    (0..10)\n        .filter { it%2 == 0 }\n        .peek { println(\"peek : $it\") }\n        .filter { it < 5 }\n        .forEach { println(\"forEach : $it\") }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\npeek : 0\npeek : 2\npeek : 4\npeek : 6\npeek : 8\npeek : 10\nforEach : 0\nforEach : 2\nforEach : 4\n\n\n\n\nList<? extends Hoge> \u307f\u305f\u3044\u306a\u306e\u306f\u3069\u3046\u3059\u308b\uff1f\n\n\n\u5171\u5909\n\n\nB \u304c A \u306e\u30b5\u30d6\u30bf\u30a4\u30d7\u306e\u3068\u304d\u306b\u3001 Foo<B> \u304c Foo<A> \u306e\u30b5\u30d6\u30bf\u30a4\u30d7\u3068\u306a\u308b\u5834\u5408\u306f\u5171\u5909\n\u8981\u306f\u3001 List<Number> \u306e\u5909\u6570\u306b List<Int> \u306e\u5909\u6570\u3092\u4ee3\u5165\u3067\u304d\u305f\u3089\u5171\u5909\n\n\n\nJava \u306f\u5171\u5909\u3067\u306f\u306a\u3044\nList<Integer> intList = new ArrayList<>();\nList<Number> numberList = intList;\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff01\uff01\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3059\u308c\u3070\u4ee3\u5165\u3067\u304d\u308b\nList<Integer> intList = new ArrayList<>();\nList<? extends Number> numberList = intList; // OK\n\n\u203b\u305f\u3060\u3057\u3001\u914d\u5217\u306f\u5171\u5909\n\n\nJava \u306f\u5171\u5909\u3067\u306f\u306a\u3044\n\u305f\u3060\u3057\u3001 add() \u306a\u3069\u306e\u5185\u5bb9\u3092\u66f8\u304d\u63db\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\nList<Integer> intList = new ArrayList<>();\nList<? extends Number> numberList = intList;\nnumberList.add(10); // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff01\uff01\n\n\n\n\u306a\u305c\u66f8\u304d\u8fbc\u307f\u3067\u304d\u306a\u3044\uff1f\nList<Integer> intList = new ArrayList<>();\nList<? extends Number> numberList = intList;\n\nNumber number = new BigDecimal(1.1);\nnumberList.add(number); \n// add() \u3092\u8a31\u53ef\u3059\u308b\u3068\u3001\n// numberList \u306e\u5b9f\u4f53\u306f List<Integer> \u306a\u306e\u306b\u3001\n// BigDecimal \u304c\u8ffd\u52a0\u3067\u304d\u3066\u3057\u307e\u3046\uff01\n\nInteger i = intList.get(0); // BigDecimal \u304c\u8fd4\u3063\u3066\u304f\u308b\uff01\uff1f\n\n\n\nKotlin \u306f\u5171\u5909\uff1f\nval intList: List<Int> = listOf(1, 2, 3)\nval numberList: List<Number> = intList\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\uff01\n\n\nKotlin \u306e List<Int> \u306f\u3001 List<Number> \u306b\u4ee3\u5165\u3067\u304d\u308b\n\u3068\u3044\u3046\u3053\u3068\u306f\u3001 Kotlin \u306f\u5171\u5909\uff1f\n\n\n\nKotlin \u306e List \u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\n\nKotlin \u306e List \u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306a\u306e\u3067 add() \u306a\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u306a\u3044\n\nList<Number> \u306b List<Int> \u3092\u4ee3\u5165\u3057\u3066\u3082\u554f\u984c\u306a\u3044\n\n\n\nMutable\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u5171\u5909\u3067\u306f\u306a\u3044\nval intList: MutableList<Int> = mutableListOf(1, 2, 3)\nval numberList: MutableList<Number> = intList\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff01\uff01\n\n\n\nMutableList<Number> \u306b MutableList<Int> \u3092\u4ee3\u5165\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001\u305d\u306e\u578b\u304c\u8aad\u307f\u53d6\u308a\u5c02\u7528\u304b\u3069\u3046\u304b\u3092\u3069\u3046\u3084\u3063\u3066\u5224\u65ad\u3057\u3066\u3044\u308b\uff1f\n\n\nKotlin \u306e\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u308b\npublic interface List<out E> : kotlin.collections.Collection<E> {\n\n\n\u578b\u5f15\u6570\u304c <out E> \u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n\n\n\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3067\u3042\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3059\u308b\nclass Foo<out T>(val t: T) {\n\n    fun get() = this.t\n    fun set(t: T) {}\n    // Type Parameter T is declared as 'out'\n    // but occurs in 'in' position in type T.\n}\n\n\n\n<out T> \u3068\u3059\u308b\u3068\u3001 T \u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306a\u3069\u300c\u5165\u529b\u300d\u3068\u306a\u308b\u5834\u6240\u3067\u4f7f\u7528\u3067\u304d\u306a\u304f\u306a\u308b\u3002\n\n\n\n\u307e\u3068\u3081\n\nKotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u306f List, Set, Map \u304c\u3042\u308b\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3068\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306e\uff12\u7a2e\u985e\u306b\u5206\u304b\u308c\u3066\u3044\u308b\n\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\nJava \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306f\u76f8\u4e92\u306b\u81ea\u52d5\u5909\u63db\u3055\u308c\u308b\nStream API \u306e\u3088\u3046\u306a\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n\n\n\u306a\u3051\u308c\u3070\u62e1\u5f35\u95a2\u6570\u3067\u81ea\u7531\u306b\u8ffd\u52a0\u3067\u304d\u308b\n\n\n\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u5171\u5909\u6027\u3092\u6301\u3064\n\n\n\n\u3088\u308a\u8a73\u7d30\u306a\u60c5\u5831\u306f Qiita \u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\n\nKotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u4f7f\u3044\u65b9\u30e1\u30e2 - Qiita\nKotlin \u52c9\u5f37\u30e1\u30e2 - Qiita\nKotlin \u306e Extensions \u306b\u3064\u3044\u3066\u8272\u3005\u8a66\u3059 - Qiita\n\n## \u81ea\u5df1\u7d39\u4ecb\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/28302/63d28421-104b-3066-2712-768e6aded5f7.jpeg\" width=\"200px\" class=\"pull-right\"/>\n\n- opengl-8080\n- \u4e3b\u306b Qiita \u3067\u6280\u8853\u30e1\u30e2\u3092\u66f8\u3044\u305f\u308a\n- \u8da3\u5473\u3067 Kotlin, Java 8, Java EE \u3092\u3055\u308f\u308a  \n\u4ed5\u4e8b\u3067 Excel VBA, Java 6, Struts1 \u3092\u4f7f\u3046\u95a2\u897f\u306e SE\n- \u95a2\u897f\uff08\u305f\u307e\u306b\u6771\u4eac\uff09\u306e\u52c9\u5f37\u4f1a\u306b\u51fa\u6ca1\n\n---\n\n## Kotlin \u3068\u3044\u3048\u3070\uff1f\n\n---\n## \u4fbf\u5229\u306a\u6a5f\u80fd\u306e\u8a71\u306f\u3088\u304f\u805e\u304f\u304c...\n\n- Nullable\n- Non-Null Type\n- \u95a2\u6570\u30ea\u30c6\u30e9\u30eb\n- \u62e1\u5f35\u95a2\u6570\n- \u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n- \u30b9\u30de\u30fc\u30c8\u30ad\u30e3\u30b9\u30c8\n- \u30af\u30e9\u30b9\u59d4\u8b72\n- \u30d7\u30ed\u30d1\u30c6\u30a3\u59d4\u8b72\n- \u30c7\u30fc\u30bf\u30af\u30e9\u30b9\n- etc...\n\n---\n\n## \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u8a71\u3092<br>\u3042\u307e\u308a\u805e\u304b\u306a\u3044<span class=\"h3\">\u6c17\u304c\u3059\u308b</span><br><span class=\"h3\">\u81ea\u5206\u306e\u8abf\u3079\u65b9\u304c\u7518\u3044\u3060\u3051\u304b\u3082...</span>\n\n---\n\n## \u3044\u3056\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092<br>\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068...\n\n---\n\n- Java \u306e `ArrayList` \u3092\u4f7f\u3048\u3070\u3044\u3044\u306e\uff1f\n    - Kotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u3042\u308b\u3089\u3057\u3044\n    - \u3069\u3046\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u308b\u306e\uff1f\n    - \u30af\u30e9\u30b9\u9593\u306e\u95a2\u4fc2\u306f\uff1f\n    - Java \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306e\u5909\u63db\u306f\uff1f\n- \u3069\u3046\u3084\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u308b\u306e\uff1f\n    - \u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u307f\u305f\u3044\u306a\u306e\u304c\u3042\u308b\u3089\u3057\u3044\n    - \u4f55\u7a2e\u985e\u3042\u308b\u306e\uff1f\n- \u3069\u3046\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\uff1f\n    - Stream API \u3067\u3084\u3063\u3066\u305f\u30a2\u30ec\u3001<br>Kotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3069\u3046\u3084\u308b\u306e\uff1f\n- \u578b\u5f15\u6570\u3067 `<? extends Hoge>` \u3068\u304b\u3057\u3066\u305f\u306e\u3001<br>\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u306e\uff1f\n\n---\n\n## (\uff1b\u00b4\u30fb\u03c9\u30fb)<br><span class=\"small\">\u7d50\u69cb\u5206\u304b\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u3044</span>\n\n---\n\n## \u8a00\u8a9e\u3092\u899a\u3048\u308b\u305f\u3081\u306b\u52c9\u5f37\u3059\u308b\u3053\u3068\n- \u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u65b9\u6cd5\n- \u6587\u6cd5\uff08\u5909\u6570\u5ba3\u8a00\u3001\u95a2\u6570\u5ba3\u8a00\u3001\u30af\u30e9\u30b9\u5ba3\u8a00\u3001\u5236\u5fa1\u6587\u3001etc...\uff09\n- **\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4f7f\u3044\u65b9**\n\n---\n\n## \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u3001<br>\u8a00\u8a9e\u3092\u5b66\u3076\u3046\u3048\u3067\u6587\u6cd5\u3068<br>\u540c\u3058\u304f\u3089\u3044\u57fa\u672c\u7684\u306a\u3082\u306e\n\n---\n\n## Kotlin\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5165\u9580\n\n---\n## \u5bfe\u8c61\u8005\u306e\u30a4\u30e1\u30fc\u30b8\n- Kotlin \u306f\u3058\u3081\u305f\u3070\u304b\u308a\n- Kotlin \u4f7f\u3063\u3066\u308b\u3051\u3069\u3001\u305d\u3046\u3044\u3048\u3070\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u8abf\u3079\u305f\u3053\u3068\u306a\u3044\n\n---\n\n## Kotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u306f<br>\u3069\u3093\u306a\u30af\u30e9\u30b9\u304c\u3042\u308b\uff1f\n\n---\n\n## Kotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n\n<div class=\"text-center\">\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/28302/8fb818d2-3fa2-78f6-8357-770eab508f3c.png\" height=\"400px\" />\n</div>\n\n---\n\n## Kotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n- `List`, `Set`, `Map` \u306e\uff13\u3064\n    - `List`\uff1a\u9806\u5e8f\u3092\u6301\u3064\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3002\u91cd\u8907\u53ef\n    - `Set`\uff1a\u9806\u5e8f\u3092\u6301\u305f\u306a\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3002\u91cd\u8907\u4e0d\u53ef\n    - `Map`\uff1a\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u3067\u5024\u3092\u4fdd\u6301\u3059\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n\n---\n\n## Java \u3068\u306e\u9055\u3044\n\n<div class=\"text-center\">\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/28302/e6336a40-34e7-ca3c-e0d4-5ccdd7d9cfae.png\" height=\"400px\" />\n</div>\n\n---\n\n## \u8aad\u307f\u53d6\u308a\u5c02\u7528\u3068\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\n- `List`, `Set`, `Map` \u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\n    - `add()` \u306a\u3069\u306e\u66f4\u65b0\u7cfb\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u306a\u3044\n- \u66f4\u65b0\u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001 `Mutable` \u304c\u982d\u306b\u3064\u3044\u305f  \n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\n\n---\n\n## \u8aad\u307f\u53d6\u308a\u5c02\u7528 \u2260 \u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\n```kotlin\nval mutableList = mutableListOf(1, 2, 3)\nval readonlyList: List<Int> = mutableList\n\nmutableList.add(9)\nprintln(readonlyList)\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\n[1, 2, 3, 9]\n```\n\n---\n\n## \u3069\u3046\u3084\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\uff1f\n\n---\n\n## \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u308a\u65b9\n```kotlin\nval list = listOf(1, 2, 3)\nval set = setOf(1, 2, 3)\nval map = mapOf(1 to 10, 2 to 20, 3 to 30)\n```\n\n- `\uff5eOf()` \u3068\u3044\u3046\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n- \u305d\u308c\u305e\u308c\u5f15\u6570\u304c\u53ef\u5909\u9577\u306b\u306a\u3063\u3066\u3044\u308b\n\n---\n\n## \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u308a\u65b9\n```kotlin\nval mutableList = mutableListOf(1, 2, 3)\nval mutableSet = mutableSetOf(1, 2, 3)\nval mutableMap = mutableMapOf(1 to 10, 2 to 20, 3 to 30)\n```\n\n- \u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u3064\u304f\u308b\u5834\u5408\u306f\u3001  \n`mutable\uff5eOf()` \u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\n\n---\n\n## Java \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\n\n```kotlin\nval arrayList = arrayListOf(1, 2, 3)\nval hashSet = hashSetOf(1, 2, 3)\nval hashMap = hashMapOf(1 to 10, 2 to 20, 3 to 30)\n```\n\n- `ArrayList` \u3084 `HashMap` \u306a\u3069\u3001 Java \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u95a2\u6570\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n- `linkedMapOf()`, `sortedSetOf()` \u306a\u3069\u3082\u3042\u308b\n\n---\n\n## Java \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306e\u76f8\u4e92\u5909\u63db\u306f\u3069\u3046\u3059\u308b\uff1f\n\n---\n\n## Java \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306e\u76f8\u4e92\u5909\u63db\n\n- Kotlin \u306b\u306f\u3001 Java \u306e\u578b\u3068\u76f8\u4e92\u306b\u81ea\u52d5\u5909\u63db\u3059\u308b\u4ed5\u7d44\u307f\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n    - Java \u306e `int` \u21d4 Kotlin \u306e `kotlin.Int`\n    - Java \u306e `java.lang.String` \u21d4 Kotlin \u306e `kotlin.String`\n\n---\n\n## Java \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306e\u76f8\u4e92\u5909\u63db\n\n- \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3082\u81ea\u52d5\u5909\u63db\u306e\u5bfe\u8c61\n    - `java.util.Iterable` \u21d4 `kotlin.collections.Iterable`\n    - `java.util.Collection`  \n\u21d4 `kotlin.collections.Collection`\n    - `java.util.List` \u21d4 `kotlin.collections.List`\n    - `java.util.Set` \u21d4 `kotlin.collections.Set`\n    - `java.util.Map` \u21d4 `kotlin.collections.Map`\n\n---\n\n## \u5909\u63db\u306e\u305f\u3081\u306e\u7279\u5225\u306a\u5b9f\u88c5\u306f\u4e0d\u8981\n\n```java:Java\u306e\u30b3\u30fc\u30c9\npublic class Foo {\n    public static java.util.List<java.lang.String>\n        getList() {...}\n}\n```\n\n```kotlin:Kotlin\u306e\u30b3\u30fc\u30c9\nval list: kotlin.collections.List<kotlin.String>\n        = Foo.getList();\n```\n\n---\n\n## Kotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001<br>\u3069\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5229\u7528\u3067\u304d\u308b\uff1f\n\n---\n\n## \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u4f7f\u3048\u308b\u30e1\u30bd\u30c3\u30c9\n- \u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u5229\u7528\u3057\u305f\u7c21\u6613\u306a\u8a18\u6cd5\n- Stream API \u306e\u3088\u3046\u306a\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e1\u30bd\u30c3\u30c9\n\n---\n\n## \u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\n```kotlin\n// +, -\nval from = listOf(1, 2, 3)\nval to = from + 9 - 2\n\nprintln(\"from=${from}, to=${to}\")\n\n// +=, -=\nval mutableList = mutableListOf(1, 2, 3)\nmutableList += 7\nmutableList -= 1\n\nprintln(\"mutableList=${mutableList}\")\n\n// [n]\nprintln(\"mutableList[1] = ${mutableList[1]}\")\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nfrom=[1, 2, 3], to=[1, 3, 9]\nmutableList=[2, 3, 7]\nmutableList[1] = 3\n```\n\n- `+`, `-` \u306f\u3001\u5185\u90e8\u306e\u72b6\u614b\u3092\u5909\u66f4\u305b\u305a\u306b\u3001\u65b0\u3057\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u8fd4\u3059\u3002\n- `+=`, `-=` \u306f\u3001\u5185\u90e8\u306e\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u3002\n- `[]` \u3067\u5404\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\uff08set \u3082\u53ef\u80fd\uff09\u3002\n\n---\n\n## \u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e1\u30bd\u30c3\u30c9\n```kotlin\nval list = listOf(1, 2, 3)\n\nlist.forEach { println(\"forEach : \" + it) }\n\nprintln(\"all : \" + list.all { it < 4 })\n\nprintln(\"any : \" + list.any { it == 2 })\n\nprintln(\"filter : \" + list.filter { it%2 == 1 })\n\nprintln(\"map : \" + list.map { it * 10 })\n\nprintln(\"joinToString : \" + list.joinToString(\" > \") { \"($it)\" })\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nforEach : 1\nforEach : 2\nforEach : 3\nall : true\nany : true\nfilter : [1, 3]\nmap : [10, 20, 30]\njoinToString : (1) > (2) > (3)\n```\n\n- \u591a\u304f\u306e\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n- Stream API \u3067\u3067\u304d\u305f\u3053\u3068\u306f\u3001\u3060\u3044\u305f\u3044\u6a19\u6e96\u3067\u53ef\u80fd\u3002\n\n---\n\n## \u6b32\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u304c\u7121\u3044\u5834\u5408\u306f\uff1f\n- \u4f8b\u3048\u3070 `peek()` \u306b\u8a72\u5f53\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u7121\u304b\u3063\u305f\u307d\u3044\u3002\n- Kotlin \u306e\u62e1\u5f35\u95a2\u6570\u3092\u4f7f\u3048\u3070\u3001\u6b32\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3002\n\n---\n\n## peek() \u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u3057\u3066\u307f\u308b\n```kotlin\nfun <T> Iterable<T>.peek(iterator: (T) -> Unit) : Iterable<T> {\n    this.forEach(iterator)\n    return this\n}\n\nfun main(args: Array<String>) {\n    (0..10)\n        .filter { it%2 == 0 }\n        .peek { println(\"peek : $it\") }\n        .filter { it < 5 }\n        .forEach { println(\"forEach : $it\") }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\npeek : 0\npeek : 2\npeek : 4\npeek : 6\npeek : 8\npeek : 10\nforEach : 0\nforEach : 2\nforEach : 4\n```\n\n---\n\n## List<? extends Hoge> <br>\u307f\u305f\u3044\u306a\u306e\u306f\u3069\u3046\u3059\u308b\uff1f\n\n---\n\n## \u5171\u5909\n- `B` \u304c `A` \u306e\u30b5\u30d6\u30bf\u30a4\u30d7\u306e\u3068\u304d\u306b\u3001 `Foo<B>` \u304c `Foo<A>` \u306e\u30b5\u30d6\u30bf\u30a4\u30d7\u3068\u306a\u308b\u5834\u5408\u306f\u5171\u5909\n- \u8981\u306f\u3001 `List<Number>` \u306e\u5909\u6570\u306b `List<Int>` \u306e\u5909\u6570\u3092\u4ee3\u5165\u3067\u304d\u305f\u3089\u5171\u5909\n\n---\n\n## Java \u306f\u5171\u5909\u3067\u306f\u306a\u3044\n```java\nList<Integer> intList = new ArrayList<>();\nList<Number> numberList = intList;\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff01\uff01\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3059\u308c\u3070\u4ee3\u5165\u3067\u304d\u308b\n\n```java\nList<Integer> intList = new ArrayList<>();\nList<? extends Number> numberList = intList; // OK\n```\n\n<small>\u203b\u305f\u3060\u3057\u3001\u914d\u5217\u306f\u5171\u5909</small>\n\n---\n\n## Java \u306f\u5171\u5909\u3067\u306f\u306a\u3044\n\u305f\u3060\u3057\u3001 `add()` \u306a\u3069\u306e\u5185\u5bb9\u3092\u66f8\u304d\u63db\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n```java\nList<Integer> intList = new ArrayList<>();\nList<? extends Number> numberList = intList;\nnumberList.add(10); // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff01\uff01\n```\n\n---\n\n## \u306a\u305c\u66f8\u304d\u8fbc\u307f\u3067\u304d\u306a\u3044\uff1f\n```java\nList<Integer> intList = new ArrayList<>();\nList<? extends Number> numberList = intList;\n\nNumber number = new BigDecimal(1.1);\nnumberList.add(number); \n// add() \u3092\u8a31\u53ef\u3059\u308b\u3068\u3001\n// numberList \u306e\u5b9f\u4f53\u306f List<Integer> \u306a\u306e\u306b\u3001\n// BigDecimal \u304c\u8ffd\u52a0\u3067\u304d\u3066\u3057\u307e\u3046\uff01\n\nInteger i = intList.get(0); // BigDecimal \u304c\u8fd4\u3063\u3066\u304f\u308b\uff01\uff1f\n```\n\n---\n\n## Kotlin \u306f\u5171\u5909\uff1f\n```kotlin\nval intList: List<Int> = listOf(1, 2, 3)\nval numberList: List<Number> = intList\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\uff01\n```\n\n- Kotlin \u306e `List<Int>` \u306f\u3001 `List<Number>` \u306b\u4ee3\u5165\u3067\u304d\u308b\n- \u3068\u3044\u3046\u3053\u3068\u306f\u3001 Kotlin \u306f\u5171\u5909\uff1f\n\n---\n\n## Kotlin \u306e List \u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\n\n- Kotlin \u306e `List` \u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306a\u306e\u3067 `add()` \u306a\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u306a\u3044\n- `List<Number>` \u306b `List<Int>` \u3092\u4ee3\u5165\u3057\u3066\u3082\u554f\u984c\u306a\u3044\n\n---\n\n## Mutable\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u5171\u5909\u3067\u306f\u306a\u3044\n\n```kotlin\nval intList: MutableList<Int> = mutableListOf(1, 2, 3)\nval numberList: MutableList<Number> = intList\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff01\uff01\n```\n\n- `MutableList<Number>` \u306b `MutableList<Int>` \u3092\u4ee3\u5165\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n---\n\n## \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001<br>\u305d\u306e\u578b\u304c\u8aad\u307f\u53d6\u308a\u5c02\u7528\u304b\u3069\u3046\u304b\u3092<br>\u3069\u3046\u3084\u3063\u3066\u5224\u65ad\u3057\u3066\u3044\u308b\uff1f\n\n---\n\n## Kotlin \u306e\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u308b\n```kotlin:\npublic interface List<out E> : kotlin.collections.Collection<E> {\n```\n\n- \u578b\u5f15\u6570\u304c `<out E>` \u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n---\n\n## \u8aad\u307f\u53d6\u308a\u5c02\u7528\u3067\u3042\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3059\u308b\n```kotlin\nclass Foo<out T>(val t: T) {\n\n    fun get() = this.t\n    fun set(t: T) {}\n    // Type Parameter T is declared as 'out'\n    // but occurs in 'in' position in type T.\n}\n```\n\n- `<out T>` \u3068\u3059\u308b\u3068\u3001 `T` \u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306a\u3069\u300c\u5165\u529b\u300d\u3068\u306a\u308b\u5834\u6240\u3067\u4f7f\u7528\u3067\u304d\u306a\u304f\u306a\u308b\u3002\n\n---\n\n## \u307e\u3068\u3081\n- Kotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u306f `List`, `Set`, `Map` \u304c\u3042\u308b\n- \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3068\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306e\uff12\u7a2e\u985e\u306b\u5206\u304b\u308c\u3066\u3044\u308b\n- \u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\n- Java \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306f\u76f8\u4e92\u306b\u81ea\u52d5\u5909\u63db\u3055\u308c\u308b\n- Stream API \u306e\u3088\u3046\u306a\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n    - \u306a\u3051\u308c\u3070\u62e1\u5f35\u95a2\u6570\u3067\u81ea\u7531\u306b\u8ffd\u52a0\u3067\u304d\u308b\n- \u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u5171\u5909\u6027\u3092\u6301\u3064\n\n---\n\n## \u3088\u308a\u8a73\u7d30\u306a\u60c5\u5831\u306f Qiita \u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\n- [Kotlin \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u4f7f\u3044\u65b9\u30e1\u30e2 - Qiita](http://qiita.com/opengl-8080/items/36351dca891b6d9c9687)\n- [Kotlin \u52c9\u5f37\u30e1\u30e2 - Qiita](http://qiita.com/opengl-8080/items/d7f56f3a39cb905104db)\n- [Kotlin \u306e Extensions \u306b\u3064\u3044\u3066\u8272\u3005\u8a66\u3059 - Qiita](http://qiita.com/opengl-8080/items/a7cdd746131337e7c9a6)\n\n\n\n\n\n\n\n\n\n\n", "tags": ["Kotlin"]}