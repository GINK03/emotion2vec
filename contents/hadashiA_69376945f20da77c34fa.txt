{"context": " More than 1 year has passed since last update.\u4ee5\u4e0b\u3092\u8a55\u4fa1\u3057\u3066\u3001\nM-x anything-local-gems\n\u3059\u308b\u3068\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308bgem\u306e\u4e00\u89a7\u304c\u51fa\u308b\u306e\u3067\u3001\u9078\u629e\u3059\u308b\u3068\u3001 \u305d\u306egem\u306elib/\u3092\u958b\u304f\u3002\n\u307e\u305f\u3001\u30ab\u30ec\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1\u306e\u7956\u5148\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bGemfile\u304c\u307f\u3064\u304b\u3063\u305f\u5834\u5408\u3001bundler\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u65b9\u306egem\u304c\u9078\u629e\u3055\u308c\u307e\u3046\u3059\u3002\n(defvar anything-c-sources-local-gem-file\n  '((name . \"rubygems\")\n    (candidates-in-buffer)\n    (init . (lambda ()\n              (let ((gemfile-dir (block 'find-gemfile\n                                   (let* ((cur-dir (file-name-directory\n                                                    (expand-file-name (or (buffer-file-name)\n                                                                          default-directory))))\n                                          (cnt 0))\n                                     (while (and (< (setq cnt (+ 1 cnt)) 10)\n                                                 (not (equal cur-dir \"/\")))\n                                       (when (member \"Gemfile\" (directory-files cur-dir))\n                                         (return-from 'find-gemfile cur-dir))\n                                       (setq cur-dir (expand-file-name (concat cur-dir \"/..\"))))\n                                     ))))\n                (anything-attrset 'gem-command\n                                  (concat (if gemfile-dir\n                                              (concat \"BUNDLE_GEMFILE=\" gemfile-dir \"/Gemfile \"\n                                                      \"bundle exec \")\n                                            \"\")\n                                          \"gem 2>/dev/null\"))\n                (unless (anything-candidate-buffer)\n                  (call-process-shell-command (concat (anything-attr 'gem-command) \" list\")\n                                              nil\n                                              (anything-candidate-buffer 'local))))))\n    (action . (lambda (gem-name)\n                (let ((path (file-name-directory\n                             (shell-command-to-string\n                              (concat (anything-attr 'gem-command) \" which \"\n                                      (replace-regexp-in-string \"\\s+(.+)$\" \"\" gem-name))))))\n                  (if (and path (file-exists-p path))\n                      (find-file path)\n                    (message \"no such file or directory: \\\"%s\\\"\" path))\n                  )))))\n\n(defun anything-local-gems ()\n  (interactive)\n  (anything-other-buffer\n   '(anything-c-sources-local-gem-file)\n   \"*anything local gems*\"\n  ))\n\n\u4ee5\u4e0b\u3092\u8a55\u4fa1\u3057\u3066\u3001\nM-x anything-local-gems\n\u3059\u308b\u3068\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308bgem\u306e\u4e00\u89a7\u304c\u51fa\u308b\u306e\u3067\u3001\u9078\u629e\u3059\u308b\u3068\u3001 \u305d\u306egem\u306elib/\u3092\u958b\u304f\u3002\n\n\u307e\u305f\u3001\u30ab\u30ec\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1\u306e\u7956\u5148\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bGemfile\u304c\u307f\u3064\u304b\u3063\u305f\u5834\u5408\u3001bundler\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u65b9\u306egem\u304c\u9078\u629e\u3055\u308c\u307e\u3046\u3059\u3002\n\n```cl\n(defvar anything-c-sources-local-gem-file\n  '((name . \"rubygems\")\n    (candidates-in-buffer)\n    (init . (lambda ()\n              (let ((gemfile-dir (block 'find-gemfile\n                                   (let* ((cur-dir (file-name-directory\n                                                    (expand-file-name (or (buffer-file-name)\n                                                                          default-directory))))\n                                          (cnt 0))\n                                     (while (and (< (setq cnt (+ 1 cnt)) 10)\n                                                 (not (equal cur-dir \"/\")))\n                                       (when (member \"Gemfile\" (directory-files cur-dir))\n                                         (return-from 'find-gemfile cur-dir))\n                                       (setq cur-dir (expand-file-name (concat cur-dir \"/..\"))))\n                                     ))))\n                (anything-attrset 'gem-command\n                                  (concat (if gemfile-dir\n                                              (concat \"BUNDLE_GEMFILE=\" gemfile-dir \"/Gemfile \"\n                                                      \"bundle exec \")\n                                            \"\")\n                                          \"gem 2>/dev/null\"))\n                (unless (anything-candidate-buffer)\n                  (call-process-shell-command (concat (anything-attr 'gem-command) \" list\")\n                                              nil\n                                              (anything-candidate-buffer 'local))))))\n    (action . (lambda (gem-name)\n                (let ((path (file-name-directory\n                             (shell-command-to-string\n                              (concat (anything-attr 'gem-command) \" which \"\n                                      (replace-regexp-in-string \"\\s+(.+)$\" \"\" gem-name))))))\n                  (if (and path (file-exists-p path))\n                      (find-file path)\n                    (message \"no such file or directory: \\\"%s\\\"\" path))\n                  )))))\n\n(defun anything-local-gems ()\n  (interactive)\n  (anything-other-buffer\n   '(anything-c-sources-local-gem-file)\n   \"*anything local gems*\"\n  ))\n```", "tags": ["Emacs", "rubygems", "Ruby", "bundler"]}