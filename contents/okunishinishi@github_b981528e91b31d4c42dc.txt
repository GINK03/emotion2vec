{"context": "\u5b9f\u8df5\u7684\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u969b\u306b\u3001\u5fc5\u9808\u306b\u306a\u3063\u3066\u304f\u308b\u306e\u304c\u8a8d\u8a3c\u6a5f\u80fd\u3002\n\u4eca\u56de\u306fHub\u4e0a\u3067\u63a5\u7d9a\u3057\u3066\u304d\u305fActor\u3068Caller\u3092\u8a8d\u8a3c\u3057\u307e\u3059\u3002\n\n\n\u5185\u5bb9\n\n\n\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7528\u610f\nHub\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\nActor\u3092\u7528\u610f\u3059\u308b\nCaller\u3092\u7528\u610f\u3059\u308b\n\u307e\u3068\u3081\n\n\n\u3053\u308c\u3082\u8aad\u307f\u305f\u3044\n\u30ea\u30f3\u30af\n\n\n\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7528\u610f\n\u3044\u3064\u3082\u901a\u308a\u3001\u307e\u305a\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u7528\u610f\u3057\u307e\u3059\u3002\nmkdir sugos-tutorial-05\ncd sugos-tutorial-05\nnpm init -y\n\n\n\u6b21\u306b\u3001\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nnpm install sugo-actor sugo-caller sugo-hub co debug asleep -S\n\n\nHub\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\nHub\u306e\u4f5c\u6210\u6642\u306bauthenticate\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u3053\u3053\u306b\u72ec\u81ea\u306e\u8a8d\u8a3c\u95a2\u6570\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u63a5\u7d9a\u3057\u3066\u304f\u308bsocket\u3092\u53d7\u3051\u5165\u308c\u3001\u3082\u3057\u304f\u306f\u62d2\u5426\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u4e8b\u524d\u306b\u767b\u9332\u3057\u3066\u3042\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3068\u5408\u81f4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6301\u3063\u3066\u8a8d\u8a3c\u3057\u307e\u3059\u3053\u3068\u306b\u3057\u307e\u3059\u3002\nhub.js\n#!/usr/bin/env node\n\n'use strict'\n\nconst sugoHub = require('sugo-hub')\nconst co = require('co')\nconst crypto = require('crypto')\n\n// Password hash function\nconst toHash = (password) => crypto.createHash('sha512').update(password).digest('hex')\n\nco(function * () {\n  /**\n   * Password hashes for auth\n   */\n  const passwordHashes = {\n    actors: {\n      'the-actor-for-tutorial-05': toHash('BigBigApplePie')\n    },\n    callers: {\n      'the-caller-for-tutorial-05': toHash('LittleLittleOrange')\n    }\n  }\n\n  let hub = sugoHub({\n    /**\n     * Custom auth function.\n     * @param {Object} socket - A socket connecting\n     * @param {Object} data - Socket auth data\n     * @returns {Promise.<boolean>} - OK or not\n     */\n    authenticate (socket, data) {\n      let { id, type, hash } = data\n      switch (type) {\n        case 'actor': {\n          // Check actor hash\n          let ok = passwordHashes.actors[ id ] === hash\n          if (ok) {\n            console.log(`Auth succeeded with actor: ${id}`)\n          }\n          return Promise.resolve(ok)\n        }\n        case 'caller': {\n          // Check caller hash\n          let ok = passwordHashes.callers[ id ] === hash\n          if (ok) {\n            console.log(`Auth succeeded with caller: ${id}`)\n          }\n          return Promise.resolve(ok)\n        }\n        default:\n          console.warn(`Unknown type: ${type}`)\n          return false\n      }\n    }\n  })\n  yield hub.listen(3000)\n  console.log(`SUGO Cloud started at port: ${hub.port}`)\n}).catch((err) => {\n  console.error(err)\n  process.exit(1)\n})\n\n\nDEBUG=sugos:tutorial:* node ./hub.js\n\n\nActor\u3092\u7528\u610f\u3059\u308b\nActor\u306e\u4f5c\u6210\u6642\u306bauth\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3001\u8a8d\u8a3c\u60c5\u5831\u3092Object\u578b\u3067\u6e21\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u79c1\u305f\u5185\u5bb9\u306fhub\u5074\u306eauthenticate\u306e\u547c\u3073\u51fa\u3057\u6642\u306e\u7b2c\u4e8c\u5f15\u6570\u3068\u306a\u308a\u307e\u3059\u3002\nactor.js\n#!/usr/bin/env node\n\n'use strict'\n\nconst sugoActor = require('sugo-actor')\nconst { Module } = sugoActor\nconst co = require('co')\nconst asleep = require('asleep')\nconst crypto = require('crypto')\n\n// Password hash function\nconst toHash = (password) => crypto.createHash('sha512').update(password).digest('hex')\n\nco(function * () {\n  let actor = sugoActor({\n    host: 'localhost:3000',\n    key: 'my-actor-05',\n    /** Modules to load */\n    modules: {\n      tableTennis: new Module({\n        ping (message = '') {\n          // Just wait 500ms and return pong.\n          return co(function * () {\n            yield asleep(500)\n            return `pong! ${message}`\n          })\n        }\n      })\n    },\n\n    /**\n     * Authenticate data of this actor\n     */\n    auth: {\n      id: 'the-actor-for-tutorial-05',\n      type: 'actor',\n      hash: toHash('BigBigApplePie')\n    }\n  })\n\n// Connect to hub\n  yield actor.connect()\n\n  console.log(`Actor connected to: ${actor.socket.io.uri}`)\n}).catch((err) => console.error(err))\n\n\nnode ./actor.js\n\n\u3053\u306eActor\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001hub\u5074\u3067\u8a8d\u8a3c\u6210\u529f\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\nCaller\u3092\u7528\u610f\u3059\u308b\nCaller\u5074\u3082\u540c\u69d8\u3067\u3059\u3002auth\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3001\u8a8d\u8a3c\u60c5\u5831\u3092Object\u578b\u3067\u6e21\u3059\u3053\u3068\u3067\u3001\u8a8d\u8a3c\u304c\u3067\u304d\u307e\u3059\ncaller.js\n#!/usr/bin/env node\n/**\n * Use sugo caller\n * @see https://github.com/realglobe-Inc/sugo-caller#readme\n */\n'use strict'\n\nconst sugoCaller = require('sugo-caller')\nconst co = require('co')\nconst crypto = require('crypto')\n\n// Password hash function\nconst toHash = (password) => crypto.createHash('sha512').update(password).digest('hex')\n\nco(function * () {\n  let caller = sugoCaller({\n    host: 'localhost:3000',\n    /**\n     * Authenticate data of this caller\n     */\n    auth: {\n      id: 'the-caller-for-tutorial-05',\n      type: 'caller',\n      hash: toHash('LittleLittleOrange')\n    }\n  })\n\n  // Connect to actor\n  let myActor05 = yield caller.connect('my-actor-05')\n  let tableTennis = myActor05.get('tableTennis')\n\n  let pong = yield tableTennis.ping('hello world!')\n  console.log(`Pong from myActor05/tableTennis: \"${pong}\"`)\n}).catch((err) => console.error(err))\n\n\n\nnode ./caller.js\n\n\n\u307e\u3068\u3081\n\nHub\u306eauthenticate\u306b\u95a2\u6570\u3092\u6e21\u3059\u3053\u3068\u3067\u63a5\u7d9a\u3057\u3066\u304f\u308bCaller\u3084Actor\u3092\u8a8d\u8a3c\u3067\u304d\u308b\n\u8a8d\u8a3c\u95a2\u6570\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u306f(socket, data) -> Promise.<Boolean/>\u3067\u3042\u308b\nActor\u3084Caller\u306eauth\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u6e21\u3059\n\n\n\u3053\u308c\u3082\u8aad\u307f\u305f\u3044\n\n\u524d\u56de: 04 - Module\u3092npm\u30cf\u309a\u30c3\u30b1\u30fc\u30b7\u3099\u5316\u3059\u308b\n\n\u6b21\u56de: 06 - Observer\u3092\u4f7f\u3063\u3066\u307f\u308b\n\n\n\n\u30ea\u30f3\u30af\n\nSUGOS\nSUGO-Actor\nSUGO-Scaffold\nTutorials\n00 - SUGOS\u3053\u3068\u306f\u3057\u3099\u3081\n01 - Hello World\u3057\u3066\u307f\u308b\n02 - Event Emit\u3057\u3066\u307f\u308b\n03 - Browser\u9593\u3066\u3099\u3084\u308a\u53d6\u308a\u3059\u308b\n04 - Module\u3092npm\u30cf\u309a\u30c3\u30b1\u30fc\u30b7\u3099\u5316\u3059\u308b\n05 - Actor\u3084Caller\u3092\u8a8d\u8a3c\u3059\u308b\n\n\u5b9f\u8df5\u7684\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u969b\u306b\u3001\u5fc5\u9808\u306b\u306a\u3063\u3066\u304f\u308b\u306e\u304c\u8a8d\u8a3c\u6a5f\u80fd\u3002\n\n\u4eca\u56de\u306fHub\u4e0a\u3067\u63a5\u7d9a\u3057\u3066\u304d\u305fActor\u3068Caller\u3092\u8a8d\u8a3c\u3057\u307e\u3059\u3002\n\n\n<a href=\"https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/05%20-%20Actor%E3%82%84Caller%E3%82%92%E8%AA%8D%E8%A8%BC%E3%81%99%E3%82%8B.md\"><img src=\"https://raw.githubusercontent.com/realglobe-Inc/sugos-tutorial/master/dist/images/eyecatch-auth.jpg\" alt=\"eyecatch\" height=\"128\" style=\"height:128px\" /></a>\n\n\n## \u5185\u5bb9\n- [\u5b9f\u88c5\u3057\u3066\u307f\u308b](#%E5%AE%9F%E8%A3%85%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B)\n  * [\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7528\u610f](#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E7%94%A8%E6%84%8F)\n  * [Hub\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b](#hub%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E7%AB%8B%E3%81%A6%E3%82%8B)\n  * [Actor\u3092\u7528\u610f\u3059\u308b](#actor%E3%82%92%E7%94%A8%E6%84%8F%E3%81%99%E3%82%8B)\n  * [Caller\u3092\u7528\u610f\u3059\u308b](#caller%E3%82%92%E7%94%A8%E6%84%8F%E3%81%99%E3%82%8B)\n  * [\u307e\u3068\u3081](#%E3%81%BE%E3%81%A8%E3%82%81)\n- [\u3053\u308c\u3082\u8aad\u307f\u305f\u3044](#%E3%81%93%E3%82%8C%E3%82%82%E8%AA%AD%E3%81%BF%E3%81%9F%E3%81%84)\n- [\u30ea\u30f3\u30af](#%E3%83%AA%E3%83%B3%E3%82%AF)\n\n\n## \u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n### \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7528\u610f\n\n\u3044\u3064\u3082\u901a\u308a\u3001\u307e\u305a\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```bash\nmkdir sugos-tutorial-05\ncd sugos-tutorial-05\nnpm init -y\n\n```\n\n\u6b21\u306b\u3001\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash\nnpm install sugo-actor sugo-caller sugo-hub co debug asleep -S\n```\n\n### Hub\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\n\nHub\u306e\u4f5c\u6210\u6642\u306b`authenticate`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u3053\u3053\u306b\u72ec\u81ea\u306e\u8a8d\u8a3c\u95a2\u6570\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u63a5\u7d9a\u3057\u3066\u304f\u308bsocket\u3092\u53d7\u3051\u5165\u308c\u3001\u3082\u3057\u304f\u306f\u62d2\u5426\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u4e8b\u524d\u306b\u767b\u9332\u3057\u3066\u3042\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3068\u5408\u81f4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6301\u3063\u3066\u8a8d\u8a3c\u3057\u307e\u3059\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n**hub.js**\n\n```javascript\n#!/usr/bin/env node\n\n'use strict'\n\nconst sugoHub = require('sugo-hub')\nconst co = require('co')\nconst crypto = require('crypto')\n\n// Password hash function\nconst toHash = (password) => crypto.createHash('sha512').update(password).digest('hex')\n\nco(function * () {\n  /**\n   * Password hashes for auth\n   */\n  const passwordHashes = {\n    actors: {\n      'the-actor-for-tutorial-05': toHash('BigBigApplePie')\n    },\n    callers: {\n      'the-caller-for-tutorial-05': toHash('LittleLittleOrange')\n    }\n  }\n\n  let hub = sugoHub({\n    /**\n     * Custom auth function.\n     * @param {Object} socket - A socket connecting\n     * @param {Object} data - Socket auth data\n     * @returns {Promise.<boolean>} - OK or not\n     */\n    authenticate (socket, data) {\n      let { id, type, hash } = data\n      switch (type) {\n        case 'actor': {\n          // Check actor hash\n          let ok = passwordHashes.actors[ id ] === hash\n          if (ok) {\n            console.log(`Auth succeeded with actor: ${id}`)\n          }\n          return Promise.resolve(ok)\n        }\n        case 'caller': {\n          // Check caller hash\n          let ok = passwordHashes.callers[ id ] === hash\n          if (ok) {\n            console.log(`Auth succeeded with caller: ${id}`)\n          }\n          return Promise.resolve(ok)\n        }\n        default:\n          console.warn(`Unknown type: ${type}`)\n          return false\n      }\n    }\n  })\n  yield hub.listen(3000)\n  console.log(`SUGO Cloud started at port: ${hub.port}`)\n}).catch((err) => {\n  console.error(err)\n  process.exit(1)\n})\n\n```\n```bash\nDEBUG=sugos:tutorial:* node ./hub.js\n```\n\n\n### Actor\u3092\u7528\u610f\u3059\u308b\n\nActor\u306e\u4f5c\u6210\u6642\u306b`auth`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3001\u8a8d\u8a3c\u60c5\u5831\u3092Object\u578b\u3067\u6e21\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u79c1\u305f\u5185\u5bb9\u306fhub\u5074\u306e`authenticate`\u306e\u547c\u3073\u51fa\u3057\u6642\u306e\u7b2c\u4e8c\u5f15\u6570\u3068\u306a\u308a\u307e\u3059\u3002\n\n**actor.js**\n\n```javascript\n#!/usr/bin/env node\n\n'use strict'\n\nconst sugoActor = require('sugo-actor')\nconst { Module } = sugoActor\nconst co = require('co')\nconst asleep = require('asleep')\nconst crypto = require('crypto')\n\n// Password hash function\nconst toHash = (password) => crypto.createHash('sha512').update(password).digest('hex')\n\nco(function * () {\n  let actor = sugoActor({\n    host: 'localhost:3000',\n    key: 'my-actor-05',\n    /** Modules to load */\n    modules: {\n      tableTennis: new Module({\n        ping (message = '') {\n          // Just wait 500ms and return pong.\n          return co(function * () {\n            yield asleep(500)\n            return `pong! ${message}`\n          })\n        }\n      })\n    },\n\n    /**\n     * Authenticate data of this actor\n     */\n    auth: {\n      id: 'the-actor-for-tutorial-05',\n      type: 'actor',\n      hash: toHash('BigBigApplePie')\n    }\n  })\n\n// Connect to hub\n  yield actor.connect()\n\n  console.log(`Actor connected to: ${actor.socket.io.uri}`)\n}).catch((err) => console.error(err))\n\n```\n\n```bash\nnode ./actor.js\n```\n\n\u3053\u306eActor\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001hub\u5074\u3067\u8a8d\u8a3c\u6210\u529f\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\n\n### Caller\u3092\u7528\u610f\u3059\u308b\n\nCaller\u5074\u3082\u540c\u69d8\u3067\u3059\u3002`auth`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3001\u8a8d\u8a3c\u60c5\u5831\u3092Object\u578b\u3067\u6e21\u3059\u3053\u3068\u3067\u3001\u8a8d\u8a3c\u304c\u3067\u304d\u307e\u3059\n\n**caller.js**\n\n```javascript\n#!/usr/bin/env node\n/**\n * Use sugo caller\n * @see https://github.com/realglobe-Inc/sugo-caller#readme\n */\n'use strict'\n\nconst sugoCaller = require('sugo-caller')\nconst co = require('co')\nconst crypto = require('crypto')\n\n// Password hash function\nconst toHash = (password) => crypto.createHash('sha512').update(password).digest('hex')\n\nco(function * () {\n  let caller = sugoCaller({\n    host: 'localhost:3000',\n    /**\n     * Authenticate data of this caller\n     */\n    auth: {\n      id: 'the-caller-for-tutorial-05',\n      type: 'caller',\n      hash: toHash('LittleLittleOrange')\n    }\n  })\n\n  // Connect to actor\n  let myActor05 = yield caller.connect('my-actor-05')\n  let tableTennis = myActor05.get('tableTennis')\n\n  let pong = yield tableTennis.ping('hello world!')\n  console.log(`Pong from myActor05/tableTennis: \"${pong}\"`)\n}).catch((err) => console.error(err))\n\n\n```\n\n```bash\nnode ./caller.js\n```\n\n### \u307e\u3068\u3081\n\n+ Hub\u306e`authenticate`\u306b\u95a2\u6570\u3092\u6e21\u3059\u3053\u3068\u3067\u63a5\u7d9a\u3057\u3066\u304f\u308bCaller\u3084Actor\u3092\u8a8d\u8a3c\u3067\u304d\u308b\n+ \u8a8d\u8a3c\u95a2\u6570\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u306f`(socket, data) -> Promise.<Boolean/>`\u3067\u3042\u308b\n+ Actor\u3084Caller\u306e`auth`\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u6e21\u3059\n\n\n\n## \u3053\u308c\u3082\u8aad\u307f\u305f\u3044\n\n+ \u524d\u56de: [04 - Module\u3092npm\u30cf\u309a\u30c3\u30b1\u30fc\u30b7\u3099\u5316\u3059\u308b](http://qiita.com/okunishinishi@github/items/2c5f4f5fbd57fbb7c3e2)\n+ \u6b21\u56de: [06 - Observer\u3092\u4f7f\u3063\u3066\u307f\u308b](http://qiita.com/okunishinishi@github/items/256e997d124abf527bb2)\n\n## \u30ea\u30f3\u30af\n\n+ [SUGOS](https://github.com/realglobe-Inc/sugos)\n+ [SUGO-Actor](https://github.com/realglobe-Inc/sugo-actor)\n+ [SUGO-Scaffold](https://github.com/realglobe-Inc/sugo-scaffold)\n+ Tutorials\n+ [00 - SUGOS\u3053\u3068\u306f\u3057\u3099\u3081](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/00%20-%20SUGOS%E3%81%93%E3%81%A8%E3%81%AF%E3%81%98%E3%82%81.md)\n+ [01 - Hello World\u3057\u3066\u307f\u308b](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/01%20-%20Hello%20World%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B.md)\n+ [02 - Event Emit\u3057\u3066\u307f\u308b](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/02%20-%20Event%20Emit%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B.md)\n+ [03 - Browser\u9593\u3066\u3099\u3084\u308a\u53d6\u308a\u3059\u308b](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/03%20-%20Browser%E9%96%93%E3%81%A7%E3%82%84%E3%82%8A%E5%8F%96%E3%82%8A%E3%81%99%E3%82%8B.md)\n+ [04 - Module\u3092npm\u30cf\u309a\u30c3\u30b1\u30fc\u30b7\u3099\u5316\u3059\u308b](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/04%20-%20Module%E3%82%92npm%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E5%8C%96%E3%81%99%E3%82%8B.md)\n+ [05 - Actor\u3084Caller\u3092\u8a8d\u8a3c\u3059\u308b](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/05%20-%20Actor%E3%82%84Caller%E3%82%92%E8%AA%8D%E8%A8%BC%E3%81%99%E3%82%8B.md)\n", "tags": ["SUGOS", "tutorial"]}