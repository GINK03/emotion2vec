{"context": " More than 1 year has passed since last update.MySQL\u3067\u306f\u30ab\u30e9\u30e0\u6bce\u306bcharset\u3068collation\u3092\u6307\u5b9a\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u3046\u3044\u3046Migration\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u3068\u304d\u306b\n\ndb/migrate/20131120120000_create_users.rb\nclass CreateUsers < ActiveRecord::Migration\n  def change\n    create_table :users do |t|\n      t.string :email, charset: 'ascii', collation: 'ascii_bin', null: false\n      t.string :password_digest, charset: 'ascii', collation: 'ascii_bin'\n      t.timestamps\n    end\n\n    add_index :users, :email, name: \"idx_email\", unique: true\n  end\nend\n\n\n\u3053\u3046\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u3092CREATE\u3057\u3066\u307b\u3057\u3044\u3002\nCREATE TABLE `users` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `email` varchar(255) CHARACTER SET ascii COLLATE ascii_bin NOT NULL,\n  `password_digest` varchar(255) CHARACTER SET ascii COLLATE ascii_bin DEFAULT NULL,\n  `created_at` datetime DEFAULT NULL,\n  `updated_at` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `idx_email` (`email`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC\n\n\u3061\u3087\u3063\u3068\u9577\u3044\u3051\u3069\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u3066\u304d\u3068\u3046\u306bRails\u3067\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3068\u3053\u308d\u306b\u30b3\u30d4\u30da\u3057\u3066\u3082\u3089\u3046\u3068\u3044\u3044\u611f\u3058\u306b\u52d5\u304f\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nconfig/initializers/activerecord.rb\nActiveSupport.on_load :active_record do\n\nrequire 'active_record/connection_adapters/abstract_mysql_adapter'\n\nmodule ActiveRecord::ConnectionAdapters\n  class AbstractMysqlAdapter\n    class ColumnDefinition < ActiveRecord::ConnectionAdapters::ColumnDefinition\n      attr_accessor :charset, :collation\n    end\n\n    class TableDefinition < ActiveRecord::ConnectionAdapters::TableDefinition\n      def new_column_definition(name, type, options) # :nodoc:\n        column = super\n        column.charset = options[:charset]\n        column.collation = options[:collation]\n        column\n      end\n\n      private\n\n      def create_column_definition(name, type)\n        ColumnDefinition.new(name, type)\n      end\n    end\n\n    class SchemaCreation < AbstractAdapter::SchemaCreation\n      def column_options(o)\n        column_options = super\n        column_options[:charset] = o.charset\n        column_options[:collation] = o.collation\n        column_options\n      end\n\n      def add_column_options!(sql, options)\n        if options[:charset]\n          sql << \" CHARACTER SET #{options[:charset]}\"\n        end\n        if options[:collation]\n          sql << \" COLLATE #{options[:collation]}\"\n        end\n        super\n      end\n    end\n\n    def prepare_column_options(column, types)\n      spec = super\n      spec[:collation] = column.collation.inspect if column.collation && column.collation != collation\n      spec\n    end\n\n    def migration_keys\n      super + [:collation]\n    end\n\n    private\n\n    def create_table_definition(name, temporary = false, options = nil, as = nil)\n      TableDefinition.new(native_database_types, name, temporary, options, as)\n    end\n  end\nend\n\nend\n\n\nRails 4.0.0\u4ee5\u964d\u3067\u52d5\u304d\u307e\u3059\u3002\n\u3010\u8ffd\u8a18\u3011\u4e0a\u8a18\u306e\u30d1\u30c3\u30c1\u306factiverecord-mysql-awesome\u306b\u3066\u30ea\u30ea\u30fc\u30b9\u3057\u3066\u3044\u308b\u306e\u3067\u3053\u3061\u3089\u3092\u304a\u4f7f\u3044\u9802\u304f\u306e\u304c\u3088\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nMySQL\u3067\u306f\u30ab\u30e9\u30e0\u6bce\u306bcharset\u3068collation\u3092\u6307\u5b9a\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u3046\u3044\u3046Migration\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u3068\u304d\u306b\n\n```ruby:db/migrate/20131120120000_create_users.rb\nclass CreateUsers < ActiveRecord::Migration\n  def change\n    create_table :users do |t|\n      t.string :email, charset: 'ascii', collation: 'ascii_bin', null: false\n      t.string :password_digest, charset: 'ascii', collation: 'ascii_bin'\n      t.timestamps\n    end\n\n    add_index :users, :email, name: \"idx_email\", unique: true\n  end\nend\n```\n\n\u3053\u3046\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u3092CREATE\u3057\u3066\u307b\u3057\u3044\u3002\n\n```sql\nCREATE TABLE `users` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `email` varchar(255) CHARACTER SET ascii COLLATE ascii_bin NOT NULL,\n  `password_digest` varchar(255) CHARACTER SET ascii COLLATE ascii_bin DEFAULT NULL,\n  `created_at` datetime DEFAULT NULL,\n  `updated_at` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `idx_email` (`email`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC\n```\n\n\u3061\u3087\u3063\u3068\u9577\u3044\u3051\u3069\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u3066\u304d\u3068\u3046\u306bRails\u3067\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3068\u3053\u308d\u306b\u30b3\u30d4\u30da\u3057\u3066\u3082\u3089\u3046\u3068\u3044\u3044\u611f\u3058\u306b\u52d5\u304f\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```ruby:config/initializers/activerecord.rb\nActiveSupport.on_load :active_record do\n\nrequire 'active_record/connection_adapters/abstract_mysql_adapter'\n\nmodule ActiveRecord::ConnectionAdapters\n  class AbstractMysqlAdapter\n    class ColumnDefinition < ActiveRecord::ConnectionAdapters::ColumnDefinition\n      attr_accessor :charset, :collation\n    end\n\n    class TableDefinition < ActiveRecord::ConnectionAdapters::TableDefinition\n      def new_column_definition(name, type, options) # :nodoc:\n        column = super\n        column.charset = options[:charset]\n        column.collation = options[:collation]\n        column\n      end\n\n      private\n\n      def create_column_definition(name, type)\n        ColumnDefinition.new(name, type)\n      end\n    end\n\n    class SchemaCreation < AbstractAdapter::SchemaCreation\n      def column_options(o)\n        column_options = super\n        column_options[:charset] = o.charset\n        column_options[:collation] = o.collation\n        column_options\n      end\n\n      def add_column_options!(sql, options)\n        if options[:charset]\n          sql << \" CHARACTER SET #{options[:charset]}\"\n        end\n        if options[:collation]\n          sql << \" COLLATE #{options[:collation]}\"\n        end\n        super\n      end\n    end\n\n    def prepare_column_options(column, types)\n      spec = super\n      spec[:collation] = column.collation.inspect if column.collation && column.collation != collation\n      spec\n    end\n\n    def migration_keys\n      super + [:collation]\n    end\n\n    private\n\n    def create_table_definition(name, temporary = false, options = nil, as = nil)\n      TableDefinition.new(native_database_types, name, temporary, options, as)\n    end\n  end\nend\n\nend\n```\n\nRails 4.0.0\u4ee5\u964d\u3067\u52d5\u304d\u307e\u3059\u3002\n\n\u3010\u8ffd\u8a18\u3011\u4e0a\u8a18\u306e\u30d1\u30c3\u30c1\u306f[activerecord-mysql-awesome](https://rubygems.org/gems/activerecord-mysql-awesome)\u306b\u3066\u30ea\u30ea\u30fc\u30b9\u3057\u3066\u3044\u308b\u306e\u3067\u3053\u3061\u3089\u3092\u304a\u4f7f\u3044\u9802\u304f\u306e\u304c\u3088\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["ActiveRecord4.0.0", "Rails4.0.0", "MySQL"]}