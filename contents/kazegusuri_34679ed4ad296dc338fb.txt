{"tags": ["gRPC", "Go"], "context": "gRPC(protobuf3)\u3067\u306fprotobuf\u3068JSON\u3092\u76f8\u4e92\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u5c02\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066jsonpb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306eencoding/json\u3068\u306e\u9055\u3044\u306f\n\n\nAny\u3084Timestamp\u3068\u3044\u3063\u305fprotobuf\u306eptypes\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bmessage\u578b\u306b\u5bfe\u5fdc\n\noneof\u306eunion\u306e\u3088\u3046\u306a\u578b\u306b\u3082\u5bfe\u5fdc\n\n\u3057\u304b\u3057\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u90e8\u3067\u3044\u308d\u3044\u308d\u3068\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u5206\u9045\u3044\u3068\u3044\u3046\u8a71\u304c\u3042\u3063\u305f\u306e\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u3068\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306e\u7a2e\u985e\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\nencoding/json\ngithub.com/golang/protobuf/jsonpb\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\n\n\nSmall(StringMessage)\nLarge(ABitOfEverything)\nOneof(SomeValue)\n\n\n\u51e6\u7406\n\n\nMarshal\nUnmarshal\n\n\n\n\nproto\u5b9a\u7fa9\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u4f7f\u3046proto\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002ABitOfEverything\u306fgrpc-gateway\u306e\u3082\u306e\u3092\u5c11\u3057\u4fee\u6b63\u3057\u3066\u4f7f\u7528\u3002\nmessage StringMessage {\n    string Value = 1;\n}\n\nmessage ABitOfEverything {\n    message Nested {\n        string name = 1;\n        uint32 amount = 2;\n        enum DeepEnum {\n            FALSE = 0;\n            TRUE = 1;\n        }\n        DeepEnum ok = 3;\n    }\n\n    string uuid = 1;\n    repeated Nested nested = 2;\n    float float_value = 3;\n    double double_value = 4;\n    int64 int64_value = 5;\n    uint64 uint64_value = 6;\n    int32 int32_value = 7;\n    fixed64 fixed64_value = 8;\n    fixed32 fixed32_value = 9;\n    bool bool_value = 10;\n    string string_value = 11;\n    uint32 uint32_value = 13;\n    sfixed32 sfixed32_value = 15;\n    sfixed64 sfixed64_value = 16;\n    sint32 sint32_value = 17;\n    sint64 sint64_value = 18;\n    repeated string repeated_string_value = 19;\n}\n\nmessage SomeValue {\n    int32 Type = 1;\n    oneof Value {\n        int32 num = 2;\n        string str = 3;\n        bool b = 4;\n    }\n}\n\n\nMarshal\nAny\u3084oneof\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u306a\u3051\u308c\u3070encoding/json\u3067\u3082\u666e\u901a\u306bmarshal/unmarshal\u53ef\u80fd\u3067\u3059\u3002\noneof\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u3067\u3082jsonpb\u3068marshal\u5f8c\u306e\u7d50\u679c\u304c\u7570\u306a\u308a\u307e\u3059\u304c\u3001marshal\u81ea\u4f53\u306f\u53ef\u80fd\u3067\u3059\u3002\n$ go test -benchtime 10s -benchmem -bench Marshal\nBenchmarkBuiltinMarshalSmall-4      10000000          1200 ns/op         184 B/op          2 allocs/op\nBenchmarkJSONPBMarshalSmall-4        3000000          5882 ns/op         672 B/op         13 allocs/op\nBenchmarkBuiltinMarshalLarge-4       1000000         11799 ns/op        1288 B/op          5 allocs/op\nBenchmarkJSONPBMarshalLarge-4         200000         84501 ns/op        9408 B/op        182 allocs/op\nBenchmarkBuiltinMarshalOneof-4      10000000          2025 ns/op         192 B/op          3 allocs/op\nBenchmarkJSONPBMarshalOneof-4        1000000         10955 ns/op        1296 B/op         26 allocs/op\n\n\nBultin\u3068JSONPB\u30675\u500d\u306e\u5dee\u304c\u3042\u308b\nlarge\u306b\u306a\u308b\u3068\u5dee\u304c7\u500d\u4ee5\u4e0a\u306b\u306a\u308b\noneof\u3067\u306f5\u500d\u306e\u307e\u307e\n\n\nUnmarshal\nencoding/json\u3067oneof\u3092\u4f7f\u3063\u305funmarshal\u306f\u901a\u5e38\u3067\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067UnmarshalJSON\u3092\u5b9a\u7fa9\u3057\u3066unmarshal\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u5358\u7d14\u306b\u5b9f\u88c5\u3057\u305f\u3060\u3051\u306a\u306e\u3067json.Unmarshal\u30923\u56de\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u9069\u5316\u306e\u4f59\u5730\u306f\u3042\u308a\u307e\u3059\u3002\nfunc _SomeValue_UnmarshalJSON(data []byte) (isSomeValue_Value, error) {\n    raw := make(map[string]json.RawMessage)\n    err := json.Unmarshal(data, &raw)\n    if err != nil {\n        return nil, err\n    }\n\n    var s isSomeValue_Value\n    for k, v := range raw {\n        switch k {\n        case \"Num\":\n            s = &SomeValue_Num{}\n        case \"Str\":\n            s = &SomeValue_Str{}\n        case \"B\":\n            s = &SomeValue_B{}\n        default:\n            return nil, fmt.Errorf(\"error key: %s, val: %s\\n\", k, v)\n        }\n\n        err := json.Unmarshal(data, s)\n        if err != nil {\n            return nil, err\n        }\n        return s, nil\n    }\n    return nil, nil\n}\n\nfunc (m *SomeValue) UnmarshalJSON(data []byte) error {\n    raw := make(map[string]json.RawMessage)\n    err := json.Unmarshal(data, &raw)\n    if err != nil {\n        return err\n    }\n    for k, v := range raw {\n        switch k {\n        case \"type\", \"Type\":\n            err := json.Unmarshal(v, &m.Type)\n            if err != nil {\n                return err\n            }\n        case \"Value\", \"value\":\n            d, err := _SomeValue_UnmarshalJSON(v)\n            if err != nil {\n                return err\n            }\n            m.Value = d\n        }\n    }\n    return nil\n}\n\n$ go test -benchtime 10s -benchmem -bench Unmarshal\nBenchmarkBuiltinUnmarshalSmall-4     5000000          2641 ns/op         256 B/op          3 allocs/op\nBenchmarkJSONPBUnmarshalSmall-4      1000000         13145 ns/op        2040 B/op         21 allocs/op\nBenchmarkBuiltinUnmarshalLarge-4      500000         26871 ns/op         496 B/op         15 allocs/op\nBenchmarkJSONPBUnmarshalLarge-4       200000        109418 ns/op        9657 B/op        129 allocs/op\nBenchmarkBuiltinUnmarshalOneof-4     1000000         23897 ns/op        2416 B/op         38 allocs/op\nBenchmarkJSONPBUnmarshalOneof-4      1000000         20067 ns/op        2408 B/op         30 allocs/op\n\n\nBuiltin\u3068JSONPB\u306e\u5dee\u306fsmall\u3067\u3082large\u3067\u30825\u500d\noneof\u3067\u306f\u5b9f\u88c5\u3057\u305fUnmarshaler\u304c\u3057\u3087\u307c\u3044\u306e\u3067JSONPB\u3088\u308a\u3082\u9045\u304f\u306a\u3063\u305f\n\n\n\u307e\u3068\u3081\n\njsonpb\u306fencoding/json\u3088\u308a5\u500d\u9045\u3044\nany\u3084oneof\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u73fe\u72b6jsonpb\u3092\u4f7f\u3046\u3057\u304b\u306a\u3044\n\u81ea\u529b\u3067unmarshaler\u304b\u3051\u3070\u306a\u3093\u3068\u304b\u306a\u308b\u3051\u3069\u90fd\u5ea6\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3057\u5b9f\u88c5\u3082\u304c\u3093\u3070\u3089\u306a\u3044\u3068\u9045\u3044\n\ngRPC(protobuf3)\u3067\u306fprotobuf\u3068JSON\u3092\u76f8\u4e92\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u5c02\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066[jsonpb](https://github.com/golang/protobuf/tree/master/jsonpb)\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e`encoding/json`\u3068\u306e\u9055\u3044\u306f\n\n* `Any`\u3084`Timestamp`\u3068\u3044\u3063\u305fprotobuf\u306e[ptypes](https://github.com/golang/protobuf/tree/master/ptypes)\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bmessage\u578b\u306b\u5bfe\u5fdc\n* `oneof`\u306eunion\u306e\u3088\u3046\u306a\u578b\u306b\u3082\u5bfe\u5fdc\n\n\u3057\u304b\u3057\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u90e8\u3067\u3044\u308d\u3044\u308d\u3068\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u5206\u9045\u3044\u3068\u3044\u3046\u8a71\u304c\u3042\u3063\u305f\u306e\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u3068\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306e\u7a2e\u985e\n\n* \u30e9\u30a4\u30d6\u30e9\u30ea\n * encoding/json\n * github.com/golang/protobuf/jsonpb\n* \u30e1\u30c3\u30bb\u30fc\u30b8\n * Small(StringMessage)\n * Large(ABitOfEverything)\n * Oneof(SomeValue)\n* \u51e6\u7406\n * Marshal\n * Unmarshal\n\n### proto\u5b9a\u7fa9\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u4f7f\u3046proto\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002ABitOfEverything\u306fgrpc-gateway\u306e\u3082\u306e\u3092\u5c11\u3057\u4fee\u6b63\u3057\u3066\u4f7f\u7528\u3002\n\n```protobuf\nmessage StringMessage {\n\tstring Value = 1;\n}\n\nmessage ABitOfEverything {\n\tmessage Nested {\n\t\tstring name = 1;\n\t\tuint32 amount = 2;\n\t\tenum DeepEnum {\n\t\t\tFALSE = 0;\n\t\t\tTRUE = 1;\n\t\t}\n\t\tDeepEnum ok = 3;\n\t}\n\n\tstring uuid = 1;\n\trepeated Nested nested = 2;\n\tfloat float_value = 3;\n\tdouble double_value = 4;\n\tint64 int64_value = 5;\n\tuint64 uint64_value = 6;\n\tint32 int32_value = 7;\n\tfixed64 fixed64_value = 8;\n\tfixed32 fixed32_value = 9;\n\tbool bool_value = 10;\n\tstring string_value = 11;\n\tuint32 uint32_value = 13;\n\tsfixed32 sfixed32_value = 15;\n\tsfixed64 sfixed64_value = 16;\n\tsint32 sint32_value = 17;\n\tsint64 sint64_value = 18;\n\trepeated string repeated_string_value = 19;\n}\n\nmessage SomeValue {\n\tint32 Type = 1;\n\toneof Value {\n\t\tint32 num = 2;\n\t\tstring str = 3;\n        bool b = 4;\n\t}\n}\n```\n\n## Marshal\n\nAny\u3084oneof\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u306a\u3051\u308c\u3070encoding/json\u3067\u3082\u666e\u901a\u306bmarshal/unmarshal\u53ef\u80fd\u3067\u3059\u3002\noneof\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u3067\u3082jsonpb\u3068marshal\u5f8c\u306e\u7d50\u679c\u304c\u7570\u306a\u308a\u307e\u3059\u304c\u3001marshal\u81ea\u4f53\u306f\u53ef\u80fd\u3067\u3059\u3002\n\n```\n$ go test -benchtime 10s -benchmem -bench Marshal\nBenchmarkBuiltinMarshalSmall-4  \t10000000\t      1200 ns/op\t     184 B/op\t       2 allocs/op\nBenchmarkJSONPBMarshalSmall-4   \t 3000000\t      5882 ns/op\t     672 B/op\t      13 allocs/op\nBenchmarkBuiltinMarshalLarge-4  \t 1000000\t     11799 ns/op\t    1288 B/op\t       5 allocs/op\nBenchmarkJSONPBMarshalLarge-4   \t  200000\t     84501 ns/op\t    9408 B/op\t     182 allocs/op\nBenchmarkBuiltinMarshalOneof-4  \t10000000\t      2025 ns/op\t     192 B/op\t       3 allocs/op\nBenchmarkJSONPBMarshalOneof-4   \t 1000000\t     10955 ns/op\t    1296 B/op\t      26 allocs/op\n```\n\n- Bultin\u3068JSONPB\u30675\u500d\u306e\u5dee\u304c\u3042\u308b\n- large\u306b\u306a\u308b\u3068\u5dee\u304c7\u500d\u4ee5\u4e0a\u306b\u306a\u308b\n- oneof\u3067\u306f5\u500d\u306e\u307e\u307e\n\n## Unmarshal\n\nencoding/json\u3067oneof\u3092\u4f7f\u3063\u305funmarshal\u306f\u901a\u5e38\u3067\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067UnmarshalJSON\u3092\u5b9a\u7fa9\u3057\u3066unmarshal\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u5358\u7d14\u306b\u5b9f\u88c5\u3057\u305f\u3060\u3051\u306a\u306e\u3067json.Unmarshal\u30923\u56de\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u9069\u5316\u306e\u4f59\u5730\u306f\u3042\u308a\u307e\u3059\u3002\n\n```go\nfunc _SomeValue_UnmarshalJSON(data []byte) (isSomeValue_Value, error) {\n\traw := make(map[string]json.RawMessage)\n\terr := json.Unmarshal(data, &raw)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tvar s isSomeValue_Value\n\tfor k, v := range raw {\n\t\tswitch k {\n\t\tcase \"Num\":\n\t\t\ts = &SomeValue_Num{}\n\t\tcase \"Str\":\n\t\t\ts = &SomeValue_Str{}\n\t\tcase \"B\":\n\t\t\ts = &SomeValue_B{}\n\t\tdefault:\n\t\t\treturn nil, fmt.Errorf(\"error key: %s, val: %s\\n\", k, v)\n\t\t}\n\n\t\terr := json.Unmarshal(data, s)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\treturn s, nil\n\t}\n\treturn nil, nil\n}\n\nfunc (m *SomeValue) UnmarshalJSON(data []byte) error {\n\traw := make(map[string]json.RawMessage)\n\terr := json.Unmarshal(data, &raw)\n\tif err != nil {\n\t\treturn err\n\t}\n\tfor k, v := range raw {\n\t\tswitch k {\n\t\tcase \"type\", \"Type\":\n\t\t\terr := json.Unmarshal(v, &m.Type)\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\tcase \"Value\", \"value\":\n\t\t\td, err := _SomeValue_UnmarshalJSON(v)\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tm.Value = d\n\t\t}\n\t}\n\treturn nil\n}\n```\n\n```\n$ go test -benchtime 10s -benchmem -bench Unmarshal\nBenchmarkBuiltinUnmarshalSmall-4\t 5000000\t      2641 ns/op\t     256 B/op\t       3 allocs/op\nBenchmarkJSONPBUnmarshalSmall-4 \t 1000000\t     13145 ns/op\t    2040 B/op\t      21 allocs/op\nBenchmarkBuiltinUnmarshalLarge-4\t  500000\t     26871 ns/op\t     496 B/op\t      15 allocs/op\nBenchmarkJSONPBUnmarshalLarge-4 \t  200000\t    109418 ns/op\t    9657 B/op\t     129 allocs/op\nBenchmarkBuiltinUnmarshalOneof-4\t 1000000\t     23897 ns/op\t    2416 B/op\t      38 allocs/op\nBenchmarkJSONPBUnmarshalOneof-4 \t 1000000\t     20067 ns/op\t    2408 B/op\t      30 allocs/op\n```\n\n- Builtin\u3068JSONPB\u306e\u5dee\u306fsmall\u3067\u3082large\u3067\u30825\u500d\n- oneof\u3067\u306f\u5b9f\u88c5\u3057\u305fUnmarshaler\u304c\u3057\u3087\u307c\u3044\u306e\u3067JSONPB\u3088\u308a\u3082\u9045\u304f\u306a\u3063\u305f\n\n\n## \u307e\u3068\u3081\n\n- jsonpb\u306fencoding/json\u3088\u308a5\u500d\u9045\u3044\n- any\u3084oneof\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u73fe\u72b6jsonpb\u3092\u4f7f\u3046\u3057\u304b\u306a\u3044\n- \u81ea\u529b\u3067unmarshaler\u304b\u3051\u3070\u306a\u3093\u3068\u304b\u306a\u308b\u3051\u3069\u90fd\u5ea6\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3057\u5b9f\u88c5\u3082\u304c\u3093\u3070\u3089\u306a\u3044\u3068\u9045\u3044\n"}