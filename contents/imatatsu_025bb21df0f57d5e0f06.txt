{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3053\u3093\u306b\u3061\u306f\u3002@imatatsu\u3067\u3059\u3002\n\u30cd\u30bf\u3068\u3057\u3066\u65b0\u3057\u3044\u3082\u306e\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001SystemVerilog\u306e\u9023\u60f3\u914d\u5217\u306b\u3064\u3044\u3066\u3061\u3087\u3063\u3068\u3060\u3051\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\nSystemVerilog\u3088\u304f\u4f7f\u3063\u3066\u308b\u3064\u3082\u308a\u3067\u3059\u304c\u3001\u53b3\u5bc6\u306a\u90e8\u5206\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u30c6\u30ad\u30c8\u30a6\u306b\u66f8\u304d\u307e\u3059\u3002\n\n\u9023\u60f3\u914d\u5217\u3063\u3066\u306a\u306b\uff1f\nWikipedia\u3088\u308a\nhttp://ja.wikipedia.org/wiki/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97\n\u914d\u5217\u306e\u6dfb\u5b57\u306b\u8272\u3005\u306a\u30c7\u30fc\u30bf\u578b\u304c\u4f7f\u3048\u308b\u3088\uff01\u3063\u3066\u3084\u3064\u3067\u3059\u306d\u3002\n\u307e\u3041\u3001\u4f55\u7269\u306a\u306e\u304b\u3063\u3066\u3053\u3068\u3088\u308a\u3001\n\u4f55\u306b\u4f7f\u3048\u3066\u3001\u4f55\u304c\u3046\u308c\u3057\u3044\u306e\u304b\n\u3068\u3044\u3046\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\n\u69d8\u3005\u306a\u4f7f\u3044\u9053\u306f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u4e00\u756a\u7c21\u5358\u306a\u4f7f\u3044\u9053\u3068\u3057\u3066\u306f\u3001\n\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u4e0a\u306b\u30e1\u30e2\u30ea\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n32bit\u30a2\u30c9\u30ec\u30b9\u306e\u30e1\u30e2\u30ea\u3092\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u4e0a\u306b\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001\n\u9759\u7684\u914d\u5217\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5ba3\u8a00\u3057\u3066\u3044\u308b\u306e\u3092\u305f\u307e\u306b\u898b\u304b\u3051\u307e\u3059\u3002\n  reg [31:0] memory[0:1073741823];\n\n\u914d\u5217\u306e\u30b5\u30a4\u30ba\u304c\u5c0f\u3055\u3044\u3046\u3061\u306f\u3053\u308c\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\n64bit\u30a2\u30c9\u30ec\u30b9\u306a\u3069\u3001\u5927\u304d\u3044\u30b5\u30a4\u30ba\u306b\u306a\u308b\u3068\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u304c\u30ae\u30d6\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u67d0\u793e\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u306f2147483648\u304c\u6700\u5927\u3067\u3057\u305f\u3002\n\u3069\u3046\u305b\u5168\u90e8\u306f\u4f7f\u308f\u306a\u3044\u304b\u3089\u4f7f\u3046\u90e8\u5206\u3060\u3051\u3092\u5ba3\u8a00\u3059\u308b\u3068\u304b\u3001\n\u4f55\u500b\u304b\u306b\u5206\u3051\u308b\u3068\u304b\u65b9\u6cd5\u304c\u7121\u304f\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u306a\u3093\u306b\u305b\u3088\u9762\u5012\u3067\u3059\u3002\n32bit\u30a2\u30c9\u30ec\u30b9\u3067\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u304c\u65e2\u306b\u4f5c\u3063\u3066\u3042\u3063\u3066\u3001\n\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306764bit\u30a2\u30c9\u30ec\u30b9\u306b\u3059\u308b\u3001\u3068\u304b\u306a\u3063\u305f\u5834\u5408\u306f\u305d\u308c\u306a\u308a\u306e\u4f5c\u696d\u304c\u767a\u751f\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u3068\u3086\u3046\u3053\u3068\u3067\u3001\u9759\u7684\u914d\u5217\u3092\u4f7f\u3046\u306e\u306f\u3084\u3081\u3066\u3001\u9023\u60f3\u914d\u5217\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306elogic [7:0] mem[longint unsigned]\u306e\u90e8\u5206\u304c\u9023\u60f3\u914d\u5217\u306e\u5ba3\u8a00\u306b\u306a\u308a\u307e\u3059\u3002\n\ntest1.sv\n`timescale 1ns/1ps\nmodule test1();\n  logic [7:0] mem[longint unsigned];\n\n  initial begin\n    mem[1] = 8'h01;\n    mem[3] = 8'h03;\n    mem[5] = 8'h05;\n    mem[7] = 8'h07;\n    mem[9] = 8'h09;\n\n    for(int i=0; i<10; i++) begin\n      logic [7:0] data;\n\n      data = mem.exists(i) ? mem[i] : 8'h00;\n\n      $display(\"mem[%0d] = 0x%02h\", i, data);\n    end\n  end\n\nendmodule : test1\n\n\nmem[1] = 8'h01\u30fb\u30fb\u30fb\u3068\u66f8\u3044\u3066\u3042\u308b\u90e8\u5206\u304c\u9023\u60f3\u914d\u5217\u3078\u306e\u4ee3\u5165\u3067\u3059\u3002\n\u4ee3\u5165\u3057\u305f\u6240\u3060\u3051\u9818\u57df\u304c\u78ba\u4fdd\u3055\u308c\u308b\u306e\u3067\u30b5\u30a4\u30ba\u3092\u6c17\u306b\u3057\u306a\u3044\u3067\u3059\u307f\u307e\u3059\uff08\u305f\u3076\u3093\uff09\u3002\n\u9818\u57df\u304c\u78ba\u4fdd\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306fexists\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3067\u8abf\u3079\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\nRead\u3057\u305f\u6642\u306b\u30011\u5ea6\u3082Write\u3057\u305f\u4e8b\u304c\u7121\u3044\u756a\u5730\u3060\u3063\u305f\u3089\u3001exists\u3067\u8abf\u3079\u3066\u3001\n0\u306a\u308a\u4e0d\u5b9a\u306a\u308a\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308c\u3070\u9759\u7684\u914d\u5217\u3068\u540c\u3058\u52d5\u304d\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u5b9f\u884c\u7d50\u679c\u306f\u3053\u3061\u3089\nmem[0] = 0x00\nmem[1] = 0x01\nmem[2] = 0x00\nmem[3] = 0x03\nmem[4] = 0x00\nmem[5] = 0x05\nmem[6] = 0x00\nmem[7] = 0x07\nmem[8] = 0x00\nmem[9] = 0x09\n\n\n\u5fdc\u7528\u7de8\n\u305f\u3044\u3057\u305f\u5fdc\u7528\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001\n\u9023\u60f3\u914d\u5217\u306fforeach\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3059\u308b\u3068\u3088\u308a\u5f37\u529b\u306b\u306a\u308a\u307e\u3059\u3002\nforeach\u3067\u307e\u308f\u3059\u3068\u3001\u78ba\u4fdd\u3055\u308c\u3066\u3044\u308b\u90e8\u5206\u3060\u3051\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306auvm_report_info\u3082\u3069\u304d\u306b\n\u9023\u60f3\u914d\u5217+foreach\u3092\u7d44\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\nfinal begin\uff5eend\u306e\u90e8\u5206\u304cforeach\u3067\u56de\u3057\u3066\u308b\u90e8\u5206\u3067\u3059\u3002\nmy_disp\u306b\u6e21\u3055\u308c\u305fkind\u306e\u5185\u5bb9\u304c\u4f55\u3067\u3042\u308d\u3046\u304c\u3001\nINFO\u3084ERROR\u306e\u500b\u6570\u3092\u5206\u5225\u3067\u304d\u308b\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\ntest2.sv\n`timescale 1ns/1ps\nmodule test2();\n\n// ----------------------------------------------------------------------------\n// variables\n// ----------------------------------------------------------------------------\n  longint unsigned num[string][string];\n\n// ----------------------------------------------------------------------------\n// function\n// ----------------------------------------------------------------------------\n  // my_disp\n  function my_disp(\n      string msg      = \"\"\n    , string kind     = \"\"\n    , string severity = \"INFO\"\n  );\n    $write(\"%0tps [%-10s][%-5s] %s\", $time, kind, severity, msg);\n    num[kind][severity]++;\n  endfunction : my_disp\n\n  // my_checker\n  function my_checker(logic [7:0] data, logic [7:0] exp);\n    if(data === exp) begin\n      my_disp($psprintf(\"Data = 0x%02h, EXP = 0x%02h\\n\", data, exp), \"DATA_CHK\", \"OKAY\");\n    end\n    else begin\n      my_disp($psprintf(\"Data = 0x%02h, EXP = 0x%02h\\n\", data, exp), \"DATA_CHK\", \"ERROR\");\n    end\n  endfunction : my_checker\n\n// ----------------------------------------------------------------------------\n// scenario\n// ----------------------------------------------------------------------------\n  initial begin\n    logic [7:0] data = 8'hA5;\n    logic [7:0] exp  = 8'hA5;\n\n    #10; my_disp(\"Test Message: INFO\\n\" , \"TEST\", \"INFO\" );\n    #10; my_disp(\"Test Message: OKAY\\n\" , \"TEST\", \"OKAY\" );\n    #10; my_disp(\"Test Message: WARN\\n\" , \"TEST\", \"WARN\" );\n    #10; my_disp(\"Test Message: ERROR\\n\", \"TEST\", \"ERROR\");\n\n    $display(\"\");\n\n    my_checker(data, exp);\n    data = 8'h5A;\n    my_checker(data, exp);\n    data = 8'h00;\n    my_checker(data, exp);\n\n    $finish(2);\n  end\n\n  final begin\n    $display(\"--------------------\");\n    $display(\" Simulation Resullt \");\n    $display(\"--------------------\");\n\n    foreach(num[k]) begin\n      $display(\"%s\", k);\n      foreach(num[k][s]) begin\n        $display(\"    %-5s: %0d\", s, num[k][s]);\n      end\n      $display(\"\");\n    end\n  end\n\nendmodule : test2\n\n\n\u5b9f\u884c\u7d50\u679c\n10000ps [TEST      ][INFO ] Test Message: INFO\n20000ps [TEST      ][OKAY ] Test Message: OKAY\n30000ps [TEST      ][WARN ] Test Message: WARN\n40000ps [TEST      ][ERROR] Test Message: ERROR\n\n40000ps [DATA_CHK  ][OKAY ] Data = 0xa5, EXP = 0xa5\n40000ps [DATA_CHK  ][ERROR] Data = 0x5a, EXP = 0xa5\n40000ps [DATA_CHK  ][ERROR] Data = 0x00, EXP = 0xa5\n\n--------------------\n Simulation Resullt\n--------------------\nDATA_CHK\n    ERROR: 2\n    OKAY : 1\n\nTEST\n    ERROR: 1\n    INFO : 1\n    OKAY : 1\n    WARN : 1\n\n# \u306f\u3058\u3081\u306b\n\u3053\u3093\u306b\u3061\u306f\u3002@imatatsu\u3067\u3059\u3002\n\u30cd\u30bf\u3068\u3057\u3066\u65b0\u3057\u3044\u3082\u306e\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001SystemVerilog\u306e\u9023\u60f3\u914d\u5217\u306b\u3064\u3044\u3066\u3061\u3087\u3063\u3068\u3060\u3051\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\nSystemVerilog\u3088\u304f\u4f7f\u3063\u3066\u308b\u3064\u3082\u308a\u3067\u3059\u304c\u3001\u53b3\u5bc6\u306a\u90e8\u5206\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u30c6\u30ad\u30c8\u30a6\u306b\u66f8\u304d\u307e\u3059\u3002\n\n\n# \u9023\u60f3\u914d\u5217\u3063\u3066\u306a\u306b\uff1f\nWikipedia\u3088\u308a\nhttp://ja.wikipedia.org/wiki/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97\n\n\u914d\u5217\u306e\u6dfb\u5b57\u306b\u8272\u3005\u306a\u30c7\u30fc\u30bf\u578b\u304c\u4f7f\u3048\u308b\u3088\uff01\u3063\u3066\u3084\u3064\u3067\u3059\u306d\u3002\n\u307e\u3041\u3001\u4f55\u7269\u306a\u306e\u304b\u3063\u3066\u3053\u3068\u3088\u308a\u3001\n\u4f55\u306b\u4f7f\u3048\u3066\u3001\u4f55\u304c\u3046\u308c\u3057\u3044\u306e\u304b\n\u3068\u3044\u3046\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u4f7f\u3044\u65b9\n\u69d8\u3005\u306a\u4f7f\u3044\u9053\u306f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u4e00\u756a\u7c21\u5358\u306a\u4f7f\u3044\u9053\u3068\u3057\u3066\u306f\u3001\n\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u4e0a\u306b\u30e1\u30e2\u30ea\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n32bit\u30a2\u30c9\u30ec\u30b9\u306e\u30e1\u30e2\u30ea\u3092\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u4e0a\u306b\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001\n\u9759\u7684\u914d\u5217\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5ba3\u8a00\u3057\u3066\u3044\u308b\u306e\u3092\u305f\u307e\u306b\u898b\u304b\u3051\u307e\u3059\u3002\n\n```v\n  reg [31:0] memory[0:1073741823];\n```\n\n\u914d\u5217\u306e\u30b5\u30a4\u30ba\u304c\u5c0f\u3055\u3044\u3046\u3061\u306f\u3053\u308c\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\n64bit\u30a2\u30c9\u30ec\u30b9\u306a\u3069\u3001\u5927\u304d\u3044\u30b5\u30a4\u30ba\u306b\u306a\u308b\u3068\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u304c\u30ae\u30d6\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u67d0\u793e\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u306f2147483648\u304c\u6700\u5927\u3067\u3057\u305f\u3002\n\n\u3069\u3046\u305b\u5168\u90e8\u306f\u4f7f\u308f\u306a\u3044\u304b\u3089\u4f7f\u3046\u90e8\u5206\u3060\u3051\u3092\u5ba3\u8a00\u3059\u308b\u3068\u304b\u3001\n\u4f55\u500b\u304b\u306b\u5206\u3051\u308b\u3068\u304b\u65b9\u6cd5\u304c\u7121\u304f\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u306a\u3093\u306b\u305b\u3088\u9762\u5012\u3067\u3059\u3002\n32bit\u30a2\u30c9\u30ec\u30b9\u3067\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u304c\u65e2\u306b\u4f5c\u3063\u3066\u3042\u3063\u3066\u3001\n\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306764bit\u30a2\u30c9\u30ec\u30b9\u306b\u3059\u308b\u3001\u3068\u304b\u306a\u3063\u305f\u5834\u5408\u306f\u305d\u308c\u306a\u308a\u306e\u4f5c\u696d\u304c\u767a\u751f\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3068\u3086\u3046\u3053\u3068\u3067\u3001\u9759\u7684\u914d\u5217\u3092\u4f7f\u3046\u306e\u306f\u3084\u3081\u3066\u3001\u9023\u60f3\u914d\u5217\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306elogic [7:0] mem[longint unsigned]\u306e\u90e8\u5206\u304c\u9023\u60f3\u914d\u5217\u306e\u5ba3\u8a00\u306b\u306a\u308a\u307e\u3059\u3002\n\n```v:test1.sv\n`timescale 1ns/1ps\nmodule test1();\n  logic [7:0] mem[longint unsigned];\n\n  initial begin\n    mem[1] = 8'h01;\n    mem[3] = 8'h03;\n    mem[5] = 8'h05;\n    mem[7] = 8'h07;\n    mem[9] = 8'h09;\n    \n    for(int i=0; i<10; i++) begin\n      logic [7:0] data;\n\n      data = mem.exists(i) ? mem[i] : 8'h00;\n\n      $display(\"mem[%0d] = 0x%02h\", i, data);\n    end\n  end\n  \nendmodule : test1\n```\n\nmem[1] = 8'h01\u30fb\u30fb\u30fb\u3068\u66f8\u3044\u3066\u3042\u308b\u90e8\u5206\u304c\u9023\u60f3\u914d\u5217\u3078\u306e\u4ee3\u5165\u3067\u3059\u3002\n\u4ee3\u5165\u3057\u305f\u6240\u3060\u3051\u9818\u57df\u304c\u78ba\u4fdd\u3055\u308c\u308b\u306e\u3067\u30b5\u30a4\u30ba\u3092\u6c17\u306b\u3057\u306a\u3044\u3067\u3059\u307f\u307e\u3059\uff08\u305f\u3076\u3093\uff09\u3002\n\n\u9818\u57df\u304c\u78ba\u4fdd\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306fexists\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3067\u8abf\u3079\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\nRead\u3057\u305f\u6642\u306b\u30011\u5ea6\u3082Write\u3057\u305f\u4e8b\u304c\u7121\u3044\u756a\u5730\u3060\u3063\u305f\u3089\u3001exists\u3067\u8abf\u3079\u3066\u3001\n0\u306a\u308a\u4e0d\u5b9a\u306a\u308a\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308c\u3070\u9759\u7684\u914d\u5217\u3068\u540c\u3058\u52d5\u304d\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3053\u3061\u3089\n\n```\nmem[0] = 0x00\nmem[1] = 0x01\nmem[2] = 0x00\nmem[3] = 0x03\nmem[4] = 0x00\nmem[5] = 0x05\nmem[6] = 0x00\nmem[7] = 0x07\nmem[8] = 0x00\nmem[9] = 0x09\n```\n\n# \u5fdc\u7528\u7de8\n\u305f\u3044\u3057\u305f\u5fdc\u7528\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001\n\u9023\u60f3\u914d\u5217\u306fforeach\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3059\u308b\u3068\u3088\u308a\u5f37\u529b\u306b\u306a\u308a\u307e\u3059\u3002\nforeach\u3067\u307e\u308f\u3059\u3068\u3001\u78ba\u4fdd\u3055\u308c\u3066\u3044\u308b\u90e8\u5206\u3060\u3051\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306auvm_report_info\u3082\u3069\u304d\u306b\n\u9023\u60f3\u914d\u5217+foreach\u3092\u7d44\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\nfinal begin\uff5eend\u306e\u90e8\u5206\u304cforeach\u3067\u56de\u3057\u3066\u308b\u90e8\u5206\u3067\u3059\u3002\nmy_disp\u306b\u6e21\u3055\u308c\u305fkind\u306e\u5185\u5bb9\u304c\u4f55\u3067\u3042\u308d\u3046\u304c\u3001\nINFO\u3084ERROR\u306e\u500b\u6570\u3092\u5206\u5225\u3067\u304d\u308b\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\n```v:test2.sv\n`timescale 1ns/1ps\nmodule test2();\n  \n// ----------------------------------------------------------------------------\n// variables\n// ----------------------------------------------------------------------------\n  longint unsigned num[string][string];\n  \n// ----------------------------------------------------------------------------\n// function\n// ----------------------------------------------------------------------------\n  // my_disp\n  function my_disp(\n      string msg      = \"\"\n    , string kind     = \"\"\n    , string severity = \"INFO\"\n  );\n    $write(\"%0tps [%-10s][%-5s] %s\", $time, kind, severity, msg);\n    num[kind][severity]++;\n  endfunction : my_disp\n\n  // my_checker\n  function my_checker(logic [7:0] data, logic [7:0] exp);\n    if(data === exp) begin\n      my_disp($psprintf(\"Data = 0x%02h, EXP = 0x%02h\\n\", data, exp), \"DATA_CHK\", \"OKAY\");\n    end\n    else begin\n      my_disp($psprintf(\"Data = 0x%02h, EXP = 0x%02h\\n\", data, exp), \"DATA_CHK\", \"ERROR\");\n    end\n  endfunction : my_checker\n  \n// ----------------------------------------------------------------------------\n// scenario\n// ----------------------------------------------------------------------------\n  initial begin\n    logic [7:0] data = 8'hA5;\n    logic [7:0] exp  = 8'hA5;\n    \n    #10; my_disp(\"Test Message: INFO\\n\" , \"TEST\", \"INFO\" );\n    #10; my_disp(\"Test Message: OKAY\\n\" , \"TEST\", \"OKAY\" );\n    #10; my_disp(\"Test Message: WARN\\n\" , \"TEST\", \"WARN\" );\n    #10; my_disp(\"Test Message: ERROR\\n\", \"TEST\", \"ERROR\");\n\n    $display(\"\");\n    \n    my_checker(data, exp);\n    data = 8'h5A;\n    my_checker(data, exp);\n    data = 8'h00;\n    my_checker(data, exp);\n\n    $finish(2);\n  end\n\n  final begin\n    $display(\"--------------------\");\n    $display(\" Simulation Resullt \");\n    $display(\"--------------------\");\n\n    foreach(num[k]) begin\n      $display(\"%s\", k);\n      foreach(num[k][s]) begin\n        $display(\"    %-5s: %0d\", s, num[k][s]);\n      end\n      $display(\"\");\n    end\n  end\n\nendmodule : test2\n```\n\n\u5b9f\u884c\u7d50\u679c\n\n```\n10000ps [TEST      ][INFO ] Test Message: INFO\n20000ps [TEST      ][OKAY ] Test Message: OKAY\n30000ps [TEST      ][WARN ] Test Message: WARN\n40000ps [TEST      ][ERROR] Test Message: ERROR\n\n40000ps [DATA_CHK  ][OKAY ] Data = 0xa5, EXP = 0xa5\n40000ps [DATA_CHK  ][ERROR] Data = 0x5a, EXP = 0xa5\n40000ps [DATA_CHK  ][ERROR] Data = 0x00, EXP = 0xa5\n\n--------------------\n Simulation Resullt\n--------------------\nDATA_CHK\n    ERROR: 2\n    OKAY : 1\n\nTEST\n    ERROR: 1\n    INFO : 1\n    OKAY : 1\n    WARN : 1\n```\n\n", "tags": ["Verilog", "SystemVerilog", "HDL"]}