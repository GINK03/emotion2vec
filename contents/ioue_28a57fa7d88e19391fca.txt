{"tags": ["Ruby", "Rails", "devise", "paranoia"], "context": "http://qiita.com/akasakas/items/f57286a1de9b6403c745\n\u74b0\u5883 Rails 5. Paranoia 2.2.0, devise 4.2.0\nsoft delete \u3092 paranoia \u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3002devise\u3092\u3064\u304b\u3063\u3066user\u3092\u5b9f\u88c5\u3002\n\u72b6\u6cc1\u3068\u3057\u3066\u3001\u767b\u9332\u6e08\u307f\u306euser\u3092soft delete\u3057\u3066\u3044\u308b\u3068\u3059\u308b\u3002\u3053\u306e\u3068\u304d\u3001\u540c\u3058email\u3067\u518d\u767b\u9332\u3092\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3068\u4eee\u5b9a\u3002\n\u3053\u306e\u3068\u304d\u3001validates \u306b\u304a\u3044\u3066\u3082 soft delete \u3055\u308c\u305f\u30a8\u30f3\u30c8\u30ea\u30fc\u306f\u9664\u5916\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001DB\u3078\u306e\u66f8\u304d\u8fbc\u307f\u6642\u306buniqueness\u306b\u3064\u3044\u3066\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3046 (email \u306b index\u3064\u3051\u3066\u305f\u3089\uff09\u3002\nref.\nhttps://github.com/rubysherpas/paranoia/issues/319\n\u3057\u3087\u3046\u304c\u306a\u3044\u306e\u3067\u3001custom methods \u3092\u8ffd\u52a0\u3002User.with_deleted\u306b\u3064\u3044\u3066manually\u306b\u691c\u67fb\u3057\u3066\u3042\u3052\u308b\u3002\n\napp/model/user.rb\n  validates :email, email: { strict_mode: true }, presence: true, uniqueness: true\n  validate :is_unique_from_all_entries, on: :create\n\n  def is_unique_from_all_entries\n    test = User.with_deleted.find_by(email: email)\n    if test.present?\n      if test.deleted_at.nil?\n        errors.add(:email, \"is already used.\") #\u3053\u3053\u306b\u306f\u6765\u306a\u3044\u306f\u305a\u3060\u304c...\n      else\n        errors.add(:email, \"is soft deleted.\") #\u4eca\u56de\u3069\u3046\u306b\u304b\u3057\u305f\u3044\u306e\u306f\u3053\u306e\u30b1\u30fc\u30b9\n      end\n    end\n  end\n\n\nhttp://qiita.com/akasakas/items/f57286a1de9b6403c745\n\n\u74b0\u5883 Rails 5. Paranoia 2.2.0, devise 4.2.0\nsoft delete \u3092 paranoia \u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3002devise\u3092\u3064\u304b\u3063\u3066user\u3092\u5b9f\u88c5\u3002\n\u72b6\u6cc1\u3068\u3057\u3066\u3001\u767b\u9332\u6e08\u307f\u306euser\u3092soft delete\u3057\u3066\u3044\u308b\u3068\u3059\u308b\u3002\u3053\u306e\u3068\u304d\u3001\u540c\u3058email\u3067\u518d\u767b\u9332\u3092\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3068\u4eee\u5b9a\u3002\n\u3053\u306e\u3068\u304d\u3001validates \u306b\u304a\u3044\u3066\u3082 soft delete \u3055\u308c\u305f\u30a8\u30f3\u30c8\u30ea\u30fc\u306f\u9664\u5916\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001DB\u3078\u306e\u66f8\u304d\u8fbc\u307f\u6642\u306buniqueness\u306b\u3064\u3044\u3066\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3046 (email \u306b index\u3064\u3051\u3066\u305f\u3089\uff09\u3002\n\nref.\nhttps://github.com/rubysherpas/paranoia/issues/319\n\n\u3057\u3087\u3046\u304c\u306a\u3044\u306e\u3067\u3001custom methods \u3092\u8ffd\u52a0\u3002User.with_deleted\u306b\u3064\u3044\u3066manually\u306b\u691c\u67fb\u3057\u3066\u3042\u3052\u308b\u3002\n\n```app/model/user.rb\n  validates :email, email: { strict_mode: true }, presence: true, uniqueness: true\n  validate :is_unique_from_all_entries, on: :create\n\n  def is_unique_from_all_entries\n    test = User.with_deleted.find_by(email: email)\n    if test.present?\n      if test.deleted_at.nil?\n        errors.add(:email, \"is already used.\") #\u3053\u3053\u306b\u306f\u6765\u306a\u3044\u306f\u305a\u3060\u304c...\n      else\n        errors.add(:email, \"is soft deleted.\") #\u4eca\u56de\u3069\u3046\u306b\u304b\u3057\u305f\u3044\u306e\u306f\u3053\u306e\u30b1\u30fc\u30b9\n      end\n    end\n  end\n```\n"}