{"context": "\n\n\u6700\u77ed\u6642\u9593\u3067\u9053\u8def\u3092\u8217\u88c5\u305b\u3088\n\u3042\u306a\u305f\u306f\u3001\u753a\u5f79\u5834\u306e\u571f\u6728\u8ab2\u306e\u8077\u54e1\u3067\u3059\u3002\n\n\u672a\u8217\u88c5\u306e\u9053\u8def\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092(\u4eba\u624b\u4e0d\u8db3\u306a\u306e\u3067)1\u4eba\u3067\u8217\u88c5\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\u6700\u5f8c\u306b\u4f5c\u696d\u958b\u59cb\u5730\u70b9\u306b\u623b\u3089\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\n\u306a\u308b\u3079\u304f\u65e9\u304f\u4f5c\u696d\u3092\u7d42\u3048\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\n\n\u8003\u3048\u65b9\n\u5168\u3066\u306e\u8fba(\u9053\u8def)\u3092\u8fbf\u308b\u9589\u8def(\u4e00\u5468\u3057\u3066\u623b\u3063\u3066\u304f\u308b\u7d4c\u8def)\u3092\u6c42\u3081\u308b\u554f\u984c\u3092\u3001\u4e2d\u56fd\u4eba\u90f5\u4fbf\u914d\u9054\u554f\u984c\u3068\u3044\u3044\u307e\u3059\u3002\n\u30ef\u30fc\u30b7\u30e3\u30eb\u30d5\u30ed\u30a4\u30c9\u6cd5\u3092\u7528\u3044\u3066\u591a\u9805\u5f0f\u6642\u9593\u3067\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u7d44\u5408\u305b\u6700\u9069\u5316\u306e\u6df7\u5408\u6574\u6570\u6700\u9069\u5316\u554f\u984c\u3068\u6349\u3048\u3066\u89e3\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u9023\u7d50\u30b0\u30e9\u30d5\u306e\u5168\u3066\u306e\u70b9\u306e\u6b21\u6570(\u70b9\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u8fba\u306e\u6570)\u304c\u5076\u6570\u3067\u3042\u308c\u3070\u3001\u9589\u8def\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u6b21\u6570\u304c\u5947\u6570\u306e\u3068\u304d\u306f\u3001\u540c\u3058\u9053\u8def\u4e0a\u3092\u5f80\u5fa9\u3057\u3066\u5076\u6570\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u3088\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u65b9\u91dd\u3068\u3057\u3066\u306f\u3001\u9053\u8def\u3092\u5f80\u5fa9\u3059\u3079\u304d\u304b\u3069\u3046\u304b\u3092\u6c42\u3081\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n(\u6b21\u6570\u304c\u5168\u3066\u5076\u6570\u306e\u30b0\u30e9\u30d5\u306e\u9589\u8def\u306f\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u6c42\u307e\u308a\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\u3002)\n\n\u5b9a\u5f0f\u5316\n\n\n\u6700\u5c0f\u5316\n\u2211ixi\\sum_i{x_i}\n\u5f80\u5fa9\u3059\u308b\u9053\u8def\n\n\n\u5909\u6570\nxi\u2208{0,1}\u00a0\u2200i\u2208\u9053\u8defx_i \\in \\{0,  1\\} ~ \\forall i \\in \u9053\u8def\n\u5f80\u5fa9\u3059\u308b\u304b\u3069\u3046\u304b\n\n\nyj\u22650,\u2208\u6574\u6570\u00a0\u2200j\u2208\u70b9y_j \\ge 0, \\in \u6574\u6570 ~ \\forall j \\in \u70b9\n\u70b9\u306e\u6b21\u6570\u306e\u534a\u5206\n\n\n\u5236\u7d04\u6761\u4ef6\n\u2211i\u2208\u70b9j\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u8fba\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0xi+\u70b9j\u306e\u6b21\u6570=2yj\u2200j\u2208\u70b9\\sum_{i \\in \u70b9j\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u8fba}{~~~~~~~~~~~~ x_i + \u70b9j\u306e\u6b21\u6570} = 2 y_j \\forall j \\in \u70b9\n\u6b21\u6570\u304c\u5076\u6570\n\n\n(\u3053\u306e\u5b9a\u5f0f\u5316\u306f\u3001\u3042\u307e\u308a\u3088\u304f\u306a\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\u5225\u306e\u65b9\u6cd5\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002)\n\nPython\u3067\u5b9f\u884c\n\u30e9\u30f3\u30c0\u30e0\u306a\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\npython3\n%matplotlib inline\nimport networkx as nx\nfrom pulp import *\ng = nx.random_graphs.fast_gnp_random_graph(8, 0.3, 11)\npos = nx.spring_layout(g)\nnx.draw_networkx_nodes(g, pos=pos, node_size=600, node_color='w')\nnx.draw_networkx_edges(g, pos=pos)\nnx.draw_networkx_labels(g, pos=pos, font_size=20)\nprint([i for i, l in enumerate(g.adjacency_list()) if len(l)%2])\n>>>\n[0, 2, 3, 6]\n\n\n\n\u70b90, 2, 3, 6 \u306e\u6b21\u6570\u304c\u5947\u6570\u306a\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u9593\u3092\u7d50\u3079\u3070\u3088\u3044\u3053\u3068\u304c\u3001\u308f\u304b\u308a\u307e\u3059\u3002\n\u5b9a\u5f0f\u5316\u3057\u3066\u89e3\u3044\u3066\u307f\u307e\u3059\u3002\n\npython3\nm = LpProblem()\nxs, ys = [], []\nfor i, j in g.edges():\n    g.edge[i][j]['x'] = x = LpVariable('x%d_%d'%(i,j), cat=LpBinary)\n    xs.append(x)\nm += lpSum(xs)\nfor i, ad in enumerate(g.adjacency_list()):\n    y = LpVariable(\n'y%d'%i, cat=LpInteger)\n    m += lpSum(g.edge[i][j]['x'] for j in ad) + len(ad) == 2 * y\n    ys.append(y)\nm.solve()\nprint([g.edges()[i] for i, x in enumerate(xs) if value(x)])\n>>>\n[(0, 2), (1, 3), (1, 6)]\n\n\n\u6700\u77ed\u3067\u3001\u70b90, 2, 3, 6 \u304c\u7d50\u3070\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u4ee5\u4e0a\n# \u6700\u77ed\u6642\u9593\u3067\u9053\u8def\u3092\u8217\u88c5\u305b\u3088\n\u3042\u306a\u305f\u306f\u3001\u753a\u5f79\u5834\u306e\u571f\u6728\u8ab2\u306e\u8077\u54e1\u3067\u3059\u3002\n\n- \u672a\u8217\u88c5\u306e\u9053\u8def\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092(\u4eba\u624b\u4e0d\u8db3\u306a\u306e\u3067)1\u4eba\u3067\u8217\u88c5\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n- \u6700\u5f8c\u306b\u4f5c\u696d\u958b\u59cb\u5730\u70b9\u306b\u623b\u3089\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\n- \u306a\u308b\u3079\u304f\u65e9\u304f\u4f5c\u696d\u3092\u7d42\u3048\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\n# \u8003\u3048\u65b9\n\u5168\u3066\u306e\u8fba(\u9053\u8def)\u3092\u8fbf\u308b\u9589\u8def(\u4e00\u5468\u3057\u3066\u623b\u3063\u3066\u304f\u308b\u7d4c\u8def)\u3092\u6c42\u3081\u308b\u554f\u984c\u3092\u3001[\u4e2d\u56fd\u4eba\u90f5\u4fbf\u914d\u9054\u554f\u984c](https://ja.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E9%83%B5%E4%BE%BF%E9%85%8D%E9%81%94%E5%95%8F%E9%A1%8C)\u3068\u3044\u3044\u307e\u3059\u3002\n\u30ef\u30fc\u30b7\u30e3\u30eb\u30d5\u30ed\u30a4\u30c9\u6cd5\u3092\u7528\u3044\u3066\u591a\u9805\u5f0f\u6642\u9593\u3067\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f[\u7d44\u5408\u305b\u6700\u9069\u5316](http://qiita.com/Tsutomu-KKE@github/items/bfbf4c185ed7004b5721)\u306e\u6df7\u5408\u6574\u6570\u6700\u9069\u5316\u554f\u984c\u3068\u6349\u3048\u3066\u89e3\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u9023\u7d50\u30b0\u30e9\u30d5\u306e\u5168\u3066\u306e\u70b9\u306e\u6b21\u6570(\u70b9\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u8fba\u306e\u6570)\u304c\u5076\u6570\u3067\u3042\u308c\u3070\u3001\u9589\u8def\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u6b21\u6570\u304c\u5947\u6570\u306e\u3068\u304d\u306f\u3001\u540c\u3058\u9053\u8def\u4e0a\u3092\u5f80\u5fa9\u3057\u3066\u5076\u6570\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u3088\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u65b9\u91dd\u3068\u3057\u3066\u306f\u3001\u9053\u8def\u3092\u5f80\u5fa9\u3059\u3079\u304d\u304b\u3069\u3046\u304b\u3092\u6c42\u3081\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n(\u6b21\u6570\u304c\u5168\u3066\u5076\u6570\u306e\u30b0\u30e9\u30d5\u306e\u9589\u8def\u306f\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u6c42\u307e\u308a\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\u3002)\n\n# \u5b9a\u5f0f\u5316\n\n<table>\n<tr><td>\u6700\u5c0f\u5316</td><td>$\\sum_i{x_i}$</td><td>\u5f80\u5fa9\u3059\u308b\u9053\u8def</td></tr>\n<tr><td rowspan=\"2\">\u5909\u6570</td><td>$x_i \\in \\{0,  1\\} ~ \\forall i \\in \u9053\u8def$</td><td>\u5f80\u5fa9\u3059\u308b\u304b\u3069\u3046\u304b</td></tr>\n<tr><td>$y_j \\ge 0, \\in \u6574\u6570 ~ \\forall j \\in \u70b9$</td><td>\u70b9\u306e\u6b21\u6570\u306e\u534a\u5206</td></tr>\n<tr><td>\u5236\u7d04\u6761\u4ef6</td><td>$\\sum_{i \\in \u70b9j\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u8fba}{~~~~~~~~~~~~ x_i + \u70b9j\u306e\u6b21\u6570} = 2 y_j \\forall j \\in \u70b9$</td><td>\u6b21\u6570\u304c\u5076\u6570</td></tr>\n</table>\n\n(\u3053\u306e\u5b9a\u5f0f\u5316\u306f\u3001\u3042\u307e\u308a\u3088\u304f\u306a\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\u5225\u306e\u65b9\u6cd5\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002)\n\n# Python\u3067\u5b9f\u884c\n\n\u30e9\u30f3\u30c0\u30e0\u306a\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```py3:python3\n%matplotlib inline\nimport networkx as nx\nfrom pulp import *\ng = nx.random_graphs.fast_gnp_random_graph(8, 0.3, 11)\npos = nx.spring_layout(g)\nnx.draw_networkx_nodes(g, pos=pos, node_size=600, node_color='w')\nnx.draw_networkx_edges(g, pos=pos)\nnx.draw_networkx_labels(g, pos=pos, font_size=20)\nprint([i for i, l in enumerate(g.adjacency_list()) if len(l)%2])\n>>>\n[0, 2, 3, 6]\n```\n![a.png](https://qiita-image-store.s3.amazonaws.com/0/13955/3ace941e-3854-a8c0-5a75-0e06130fe75a.png)\n\n\u70b90, 2, 3, 6 \u306e\u6b21\u6570\u304c\u5947\u6570\u306a\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u9593\u3092\u7d50\u3079\u3070\u3088\u3044\u3053\u3068\u304c\u3001\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u5b9a\u5f0f\u5316\u3057\u3066\u89e3\u3044\u3066\u307f\u307e\u3059\u3002\n\n```py3:python3\nm = LpProblem()\nxs, ys = [], []\nfor i, j in g.edges():\n    g.edge[i][j]['x'] = x = LpVariable('x%d_%d'%(i,j), cat=LpBinary)\n    xs.append(x)\nm += lpSum(xs)\nfor i, ad in enumerate(g.adjacency_list()):\n    y = LpVariable(\n'y%d'%i, cat=LpInteger)\n    m += lpSum(g.edge[i][j]['x'] for j in ad) + len(ad) == 2 * y\n    ys.append(y)\nm.solve()\nprint([g.edges()[i] for i, x in enumerate(xs) if value(x)])\n>>>\n[(0, 2), (1, 3), (1, 6)]\n```\n\n\u6700\u77ed\u3067\u3001\u70b90, 2, 3, 6 \u304c\u7d50\u3070\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u4ee5\u4e0a\n\n", "tags": ["\u7d44\u5408\u305b\u6700\u9069\u5316", "\u6700\u9069\u5316", "Python", "\u30b0\u30e9\u30d5"]}