{"context": "\n\n\u306f\u3058\u3081\u306b\n\u5927\u3057\u305f\u3053\u3068\u3092\u66f8\u3044\u3066\u307e\u305b\u3093\u3002\n\u6bce\u56de\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3068\u304d\u306b\u5fd8\u308c\u308b\u306e\u3067\u5358\u306a\u308b\u30e1\u30e2\u3067\u3059\u3002\n\nCocoaPods\n\nPodFile\npod 'GoogleAnalytics'\n\n\n\u203bCarthage\u306f\u672a\u3060\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u3067\u4f7f\u3063\u3066\u306a\u3044\u30fb\u30fb\u30fb\n\nGoogleAnalytics\nSwift\u306e\u96db\u5f62\u306f\u3053\u3093\u306a\u611f\u3058\u3002\nCategory\u3084Action\u306f\u3042\u308b\u7a0b\u5ea6\u7d71\u4e00\u3057\u3066\u305f\u307b\u3046\u304c\u30c7\u30fc\u30bf\u96c6\u8a08\u304c\u884c\u3044\u3084\u3059\u3044\u3002\n\nGoogleAnalytics.swift\nclass GoogleAnalytics: NSObject {\n\n    // \u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30ab\u30c6\u30b4\u30ea\u30fc\n    enum Category:String {\n        case User = \"User\"\n    }\n\n    // \u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30a2\u30af\u30b7\u30e7\u30f3\n    enum Action:String {\n        case Show = \"Show\"\n        case Tap = \"Tap\"\n    }\n\n    // \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    class func setup() {\n        GAI.sharedInstance().trackUncaughtExceptions = true;\n        # \uff12\u5206\u6bce\u306bgoogle\u3078\u30c7\u30fc\u30bf\u9001\u4fe1\n        GAI.sharedInstance().dispatchInterval = 120\n        GAI.sharedInstance().logger.logLevel = .Warning //.Verbose\n        GAI.sharedInstance().trackerWithTrackingId(\"UA-XXXX-XX\")\n    }\n\n    // \u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30b9\u30af\u30ea\u30fc\u30f3\n    class func trackScreen(screenName: String) {\n        let build = GAIDictionaryBuilder.createScreenView().set(screenName, forKey: kGAIScreenName).build() as [NSObject: AnyObject]\n        GAI.sharedInstance().defaultTracker.send(build)\n    }\n\n    // \u30c8\u30e9\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\n    class func trackEvent(category:Category, action:Action, label:String?, value:NSNumber = 1) {\n        let build = GAIDictionaryBuilder.createEventWithCategory(category.rawValue, action: action.rawValue, label: label, value: value).build() as [NSObject: AnyObject]\n        GAI.sharedInstance().defaultTracker.send(build)\n    }\n}\n\n\n\u898b\u3066\u5206\u304b\u308b\u3068\u304a\u308a\u3060\u3051\u3069\u3001\u4f7f\u7528\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u884c\u3046\u3002\n// \u30b9\u30af\u30ea\u30fc\u30f3\u540d\nGoogleAnalytics.trackScreen(\"ScreenName\")\n// \u30a4\u30d9\u30f3\u30c8\nGoogleAnalytics.trackEvent(.User, action: .Show, label: \"USER-ID\")\n\n\nAppDelegate\n\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u307e\u305b\u308b\u3002\n\nAppDelegate.swift\n    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject : AnyObject]?) -> Bool {\n        // GoogleAnalytice\n        GoogleAnalytics.setup()\n    }\n\n\n\n\u30b9\u30af\u30ea\u30fc\u30f3\u540d\u306e\u81ea\u52d5\u53d6\u5f97\n\u3053\u3053\u306e\u4f7f\u3044\u65b9\u306f\u7c21\u7565\u5316\u3057\u3066\u3044\u308b\u3002\n\u53d6\u5f97\u3057\u305f\u3044\u30b9\u30af\u30ea\u30fc\u30f3\u540d\u3092\u3057\u3063\u304b\u308a\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\u3092\u4f7f\u3046\u3068\u826f\u3055\u305d\u3046\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306e\u5143\u306fSwiftalytics\u3067\u3059\u3002\n\nScreenTracking.swift\nextension UIViewController {\n    public override class func initialize() {\n        struct Static {\n            static var token: dispatch_once_t = 0\n        }\n\n        // make sure this isn't a subclass\n        if self !== UIViewController.self {\n            return\n        }\n\n        dispatch_once(&Static.token) {\n            let originalSelector = #selector(UIViewController.viewDidAppear(_:))\n            let swizzledSelector = #selector(UIViewController.swiftalytics_viewDidAppear(_:))\n\n            let originalMethod = class_getInstanceMethod(self, originalSelector)\n            let swizzledMethod = class_getInstanceMethod(self, swizzledSelector)\n\n            let didAddMethod = class_addMethod(self, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))\n\n            if didAddMethod {\n                class_replaceMethod(self, swizzledSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod))\n            } else {\n                method_exchangeImplementations(originalMethod, swizzledMethod)\n            }\n        }\n    }\n\n    func swiftalytics_viewDidAppear(animated: Bool) {\n        swiftalytics_viewDidAppear(animated)\n        // \u9664\u5916\u3059\u308b\u30af\u30e9\u30b9\u3092\u6307\u5b9a\n        if !(self is UINavigationController) {\n            // \u30af\u30e9\u30b9\u540d\u3092\u53d6\u5f97\n            var className = NSStringFromClass(self.dynamicType)\n            GoogleAnalytics.trackScreen(className)\n        }\n    }\n}\n\n\n\n\u6700\u5f8c\u306b\nSwift\u3067AOP\u7684\u306a\u3053\u3068\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u4eca\u306e\u6240\u306a\u3055\u305d\u3046\u306a\u306e\u304c\u6b8b\u5ff5\u3002\n\uff08\u63a2\u3059\u529b\u304c\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u306a\u3044\u3002\uff09\n## \u306f\u3058\u3081\u306b\n\u5927\u3057\u305f\u3053\u3068\u3092\u66f8\u3044\u3066\u307e\u305b\u3093\u3002\n\u6bce\u56de\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3068\u304d\u306b\u5fd8\u308c\u308b\u306e\u3067\u5358\u306a\u308b\u30e1\u30e2\u3067\u3059\u3002\n\n## CocoaPods\n```rb:PodFile\npod 'GoogleAnalytics'\n```\n\n\u203b`Carthage`\u306f\u672a\u3060\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u3067\u4f7f\u3063\u3066\u306a\u3044\u30fb\u30fb\u30fb\n\n## GoogleAnalytics\nSwift\u306e\u96db\u5f62\u306f\u3053\u3093\u306a\u611f\u3058\u3002\nCategory\u3084Action\u306f\u3042\u308b\u7a0b\u5ea6\u7d71\u4e00\u3057\u3066\u305f\u307b\u3046\u304c\u30c7\u30fc\u30bf\u96c6\u8a08\u304c\u884c\u3044\u3084\u3059\u3044\u3002\n\n```swift:GoogleAnalytics.swift\nclass GoogleAnalytics: NSObject {\n    \n    // \u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30ab\u30c6\u30b4\u30ea\u30fc\n    enum Category:String {\n        case User = \"User\"\n    }\n    \n    // \u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30a2\u30af\u30b7\u30e7\u30f3\n    enum Action:String {\n        case Show = \"Show\"\n        case Tap = \"Tap\"\n    }\n    \n    // \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    class func setup() {\n        GAI.sharedInstance().trackUncaughtExceptions = true;\n        # \uff12\u5206\u6bce\u306bgoogle\u3078\u30c7\u30fc\u30bf\u9001\u4fe1\n        GAI.sharedInstance().dispatchInterval = 120\n        GAI.sharedInstance().logger.logLevel = .Warning //.Verbose\n        GAI.sharedInstance().trackerWithTrackingId(\"UA-XXXX-XX\")\n    }\n\n    // \u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30b9\u30af\u30ea\u30fc\u30f3\n    class func trackScreen(screenName: String) {\n        let build = GAIDictionaryBuilder.createScreenView().set(screenName, forKey: kGAIScreenName).build() as [NSObject: AnyObject]\n        GAI.sharedInstance().defaultTracker.send(build)\n    }\n\n    // \u30c8\u30e9\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\n    class func trackEvent(category:Category, action:Action, label:String?, value:NSNumber = 1) {\n        let build = GAIDictionaryBuilder.createEventWithCategory(category.rawValue, action: action.rawValue, label: label, value: value).build() as [NSObject: AnyObject]\n        GAI.sharedInstance().defaultTracker.send(build)\n    }\n}\n```\n\n\u898b\u3066\u5206\u304b\u308b\u3068\u304a\u308a\u3060\u3051\u3069\u3001\u4f7f\u7528\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u884c\u3046\u3002\n\n```swift\n// \u30b9\u30af\u30ea\u30fc\u30f3\u540d\nGoogleAnalytics.trackScreen(\"ScreenName\")\n// \u30a4\u30d9\u30f3\u30c8\nGoogleAnalytics.trackEvent(.User, action: .Show, label: \"USER-ID\")\n```\n\n## AppDelegate\n\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u307e\u305b\u308b\u3002\n\n```swift:AppDelegate.swift\n    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject : AnyObject]?) -> Bool {\n        // GoogleAnalytice\n        GoogleAnalytics.setup()\n    }\n```\n\n## \u30b9\u30af\u30ea\u30fc\u30f3\u540d\u306e\u81ea\u52d5\u53d6\u5f97\n\u3053\u3053\u306e\u4f7f\u3044\u65b9\u306f\u7c21\u7565\u5316\u3057\u3066\u3044\u308b\u3002\n\u53d6\u5f97\u3057\u305f\u3044\u30b9\u30af\u30ea\u30fc\u30f3\u540d\u3092\u3057\u3063\u304b\u308a\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306f[\u3053\u3061\u3089](https://github.com/MrAlek/Swiftalytics)\u3092\u4f7f\u3046\u3068\u826f\u3055\u305d\u3046\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306e\u5143\u306f`Swiftalytics`\u3067\u3059\u3002\n\n```swift:ScreenTracking.swift\nextension UIViewController {\n    public override class func initialize() {\n        struct Static {\n            static var token: dispatch_once_t = 0\n        }\n        \n        // make sure this isn't a subclass\n        if self !== UIViewController.self {\n            return\n        }\n        \n        dispatch_once(&Static.token) {\n            let originalSelector = #selector(UIViewController.viewDidAppear(_:))\n            let swizzledSelector = #selector(UIViewController.swiftalytics_viewDidAppear(_:))\n            \n            let originalMethod = class_getInstanceMethod(self, originalSelector)\n            let swizzledMethod = class_getInstanceMethod(self, swizzledSelector)\n            \n            let didAddMethod = class_addMethod(self, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))\n            \n            if didAddMethod {\n                class_replaceMethod(self, swizzledSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod))\n            } else {\n                method_exchangeImplementations(originalMethod, swizzledMethod)\n            }\n        }\n    }\n    \n    func swiftalytics_viewDidAppear(animated: Bool) {\n        swiftalytics_viewDidAppear(animated)\n        // \u9664\u5916\u3059\u308b\u30af\u30e9\u30b9\u3092\u6307\u5b9a\n        if !(self is UINavigationController) {\n            // \u30af\u30e9\u30b9\u540d\u3092\u53d6\u5f97\n            var className = NSStringFromClass(self.dynamicType)\n            GoogleAnalytics.trackScreen(className)\n        }\n    }\n}\n```\n\n## \u6700\u5f8c\u306b\nSwift\u3067AOP\u7684\u306a\u3053\u3068\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u4eca\u306e\u6240\u306a\u3055\u305d\u3046\u306a\u306e\u304c\u6b8b\u5ff5\u3002\n\uff08\u63a2\u3059\u529b\u304c\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u306a\u3044\u3002\uff09\n", "tags": ["Swift", "GoogleAnalytics"]}