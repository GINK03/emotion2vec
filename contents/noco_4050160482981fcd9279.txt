{"tags": ["C++", "C++11", "C++14", "boost"], "context": "\u9700\u8981\u306f\u591a\u5206\u306a\u3044\u3002\n\u30d8\u30c3\u30c0\u30aa\u30f3\u30ea\u30fc\u306a\u306e\u3067\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308c\u3070\u4f7f\u3048\u307e\u3059\u3002\nhttps://github.com/nocotan/otus\n\n\u4f9d\u5b58\n\nBoost\ncpp-netlib\n\n\nHello World\n#include \"otus.h\"\n\nint main() {\n    ots::otus app = ots::otus();\n    app.route(\"/\", \"GET\", [](ots::request req){\n        return \"Hello, World!\";\n    });\n\n    app.run(\"localhost\", \"8080\");\n\n    return 0;\n}\n\n\nhtml\u30ec\u30f3\u30c0\u30e9\u30fc\n#include \"otus.h\"\n\nint main() {\n    ots::otus app = ots::otus();\n    app.route(\"/\", \"GET\", [](ots::request req){\n        return ots::render_template(\"test.html\");\n    });\n\n    app.run(\"localhost\", \"8080\");\n\n    return 0;\n}\n\n\nRequest\n#include \"otus.h\"\nusing namespace std;\n\nint main() {\n    // initialize\n    ots::otus app = ots::otus();\n\n    // routing\n    app.route(\"/\", \"GET\", [](ots::request req)->string{\n        cout << req.method << endl;\n        cout << req.path << endl;\n        cout << req.source << endl;\n        cout << req.destination << endl;\n        cout << req.body << endl;\n        for (auto header : req.headers) {\n            cout << header.name << \":\" << header.value << endl;\n        }\n        return ots::render_template(\"test.html\");\n    });\n\n    app.route(\"/\", \"POST\", [](ots::request req)->string{\n        cout << req.method << endl;\n        cout << req.path << endl;\n        cout << req.source << endl;\n        cout << req.destination << endl;\n        cout << req.body << endl;\n        return \"OK\";\n    });\n\n\n    app.run(\"localhost\", \"9000\");\n\n    return 0;\n}\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\ng++ -std=c++11 test.cpp -I<path to cpp-netlib> -L<path to cpp-netlib/libs/network/src> -lpthread -lboost_system -lboost_thread -lcppnetlib-uri -lcppnetlib-client-connections -lssl -lcrypto\n\n\u9700\u8981\u306f\u591a\u5206\u306a\u3044\u3002\n\n\u30d8\u30c3\u30c0\u30aa\u30f3\u30ea\u30fc\u306a\u306e\u3067\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308c\u3070\u4f7f\u3048\u307e\u3059\u3002\nhttps://github.com/nocotan/otus\n\n### \u4f9d\u5b58\n- Boost\n- [cpp-netlib](https://github.com/glynos/cpp-netlib)\n\n### Hello World\n\n```c++\n#include \"otus.h\"\n\nint main() {\n    ots::otus app = ots::otus();\n    app.route(\"/\", \"GET\", [](ots::request req){\n        return \"Hello, World!\";\n    });\n\n    app.run(\"localhost\", \"8080\");\n\n    return 0;\n}\n```\n\n### html\u30ec\u30f3\u30c0\u30e9\u30fc\n\n```c++\n#include \"otus.h\"\n\nint main() {\n    ots::otus app = ots::otus();\n    app.route(\"/\", \"GET\", [](ots::request req){\n        return ots::render_template(\"test.html\");\n    });\n\n    app.run(\"localhost\", \"8080\");\n\n    return 0;\n}\n```\n\n### Request\n\n```c++\n#include \"otus.h\"\nusing namespace std;\n\nint main() {\n    // initialize\n    ots::otus app = ots::otus();\n\n    // routing\n    app.route(\"/\", \"GET\", [](ots::request req)->string{\n        cout << req.method << endl;\n        cout << req.path << endl;\n        cout << req.source << endl;\n        cout << req.destination << endl;\n        cout << req.body << endl;\n        for (auto header : req.headers) {\n            cout << header.name << \":\" << header.value << endl;\n        }\n        return ots::render_template(\"test.html\");\n    });\n\n    app.route(\"/\", \"POST\", [](ots::request req)->string{\n        cout << req.method << endl;\n        cout << req.path << endl;\n        cout << req.source << endl;\n        cout << req.destination << endl;\n        cout << req.body << endl;\n        return \"OK\";\n    });\n\n\n    app.run(\"localhost\", \"9000\");\n\n    return 0;\n}\n```\n\n### \u30b3\u30f3\u30d1\u30a4\u30eb\n\n```\ng++ -std=c++11 test.cpp -I<path to cpp-netlib> -L<path to cpp-netlib/libs/network/src> -lpthread -lboost_system -lboost_thread -lcppnetlib-uri -lcppnetlib-client-connections -lssl -lcrypto\n```\n"}