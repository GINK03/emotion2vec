{"context": "\n\n\u306f\u3058\u3081\u306b\nIPv4 \u304b\u3089 IPv6 \u306b\u5bfe\u5fdc\u306a\u3093\u3066\u96e3\u3057\u3044\u4e8b\u3092\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u601d\u3048\u307e\u3059\u304c\u3001\u57fa\u672c\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3061\u3087\u3063\u3068\u5909\u3048\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u3053\u3093\u306a\u3093\u8a00\u308f\u308c\u307e\u3057\u305f\n\u4e0b\u8a18\u306e\u69d8\u306bIPv4\u3067\u66f8\u3044\u305fUDP\u9001\u4fe1\u3092IPv6\u306b\u5909\u3048\u3066\u6b32\u3057\u3044\u3068\u3044\u308f\u308c\u307e\u3057\u305f\u3002\n#include <winsock2.h> /* windows sockets */\n#include <iphlpapi.h> /* for retrieving IP Address */\n\nint main(){\n    int iRet = 0;\n    struct sockaddr_in tSockAddr;\n    char auPkt[] = \"Hello!\";\n    int auPktLen = strlen(auPkt);\n\n    /* \u30bd\u30b1\u30c3\u30c8\u751f\u6210 */\n    *piSocket = (int)socket(AF_INET, (int)SOCK_DGRAM, IPPROTO_UDP);\n\n    /* sockaddr_in\u69cb\u9020\u4f53\u306e\u8a2d\u5b9a */\n    tSockAddr.sin_family = AF_INET;\n    tSockAddr.sin_addr.s_addr = inet_addr((const char *)\"192.168.0.4\");   // \u9001\u308a\u5148\u306eIPv4\n    tSockAddr.sin_port = htons(5001);\n\n    iRet = sendto(iSocket, (const void *)auPkt, auPktLen, 0,\n                    ( struct sockaddr_in*)&tSockAddr, sizeof(tSockAddr));\n    if (iRet < 0)\n    {\n        printf(\"error=%d\\n\", WSAGetLastError() );\n        return -1;\n    }\n    return 0;\n}\n\n\n\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n#include <winsock2.h> /* windows sockets */\n#include <ws2tcpip.h> /* contain ws2ipdef.h */  \n#include <iphlpapi.h> /* for retrieving IP Address */\n\nint main(){\n\n    int iRet = 0;\n    struct sockaddr_in6 tSockAddr;\n    char auPkt[] = \"Hello!\";\n    int auPktLen = strlen(auPkt);\n\n    /* \u30bd\u30b1\u30c3\u30c8\u751f\u6210 */\n    *piSocket = (int)socket(AF_INET6, (int)SOCK_DGRAM, IPPROTO_UDP);\n\n    /* sockaddr_in6 \u69cb\u9020\u4f53\u306e\u8a2d\u5b9a */\n    tSockAddr.sin6_family = AF_INET6;\n    tSockAddr.sin6_port = htons(5001);\n\n    // \u300e\u9001\u308a\u5148\u306eIP\u300f\u3092 tSockAddr.sin6_addr \u306b\u683c\u7d0d\n    // \n    // InetPton()\u3092\u4f7f\u3048\u3070\u7c21\u5358\u3060\u3051\u3069\u53e4\u3044 Ws2tcpip.h \u306b\u306f InetPton() \u306f\u5b58\u5728\u3057\u306a\u3044\u4e8b\u3082\u3042\u308b\u306e\u3067\u6ce8\u610f\n    // InetPton(AF_INET6, \"FE80::6212:8AFF:FE96:B1F0\", &(tSockAddr.sin6_addr));\n    // InetPton(AF_INET6, \"FE80:0000:0000:0000:6212:8AFF:FE96:B1F0\", &(tSockAddr.sin6_addr));\n\n    // \u3068\u308a\u3042\u3048\u305a\u7121\u7406\u77e2\u7406\u5165\u308c\u308b(\u307e\u3041IPv6\u3067UDP\u9001\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u691c\u8a3c\u30b3\u30fc\u30c9\u306a\u306e\u3067\u9177\u3044\u66f8\u304d\u65b9\u3060\u3051\u3069\u7121\u554f\u984c)\n    tSockAddr.sin6_addr.u.Byte[0] = 0xFE;\n    tSockAddr.sin6_addr.u.Byte[1] = 0x80;\n    tSockAddr.sin6_addr.u.Byte[2] = 0x00;\n    tSockAddr.sin6_addr.u.Byte[3] = 0x00;\n    tSockAddr.sin6_addr.u.Byte[4] = 0x00;\n    tSockAddr.sin6_addr.u.Byte[5] = 0x00;\n    tSockAddr.sin6_addr.u.Byte[6] = 0x00;\n    tSockAddr.sin6_addr.u.Byte[7] = 0x00;\n    tSockAddr.sin6_addr.u.Byte[8] = 0x62;\n    tSockAddr.sin6_addr.u.Byte[9] = 0x12;\n    tSockAddr.sin6_addr.u.Byte[10]= 0x8A;\n    tSockAddr.sin6_addr.u.Byte[11]= 0xFF;\n    tSockAddr.sin6_addr.u.Byte[12]= 0xFE;\n    tSockAddr.sin6_addr.u.Byte[13]= 0x96;\n    tSockAddr.sin6_addr.u.Byte[14]= 0xB1;\n    tSockAddr.sin6_addr.u.Byte[15]= 0xF0;\n\n    iRet = sendto(iSocket, (const void *)auPkt, auPktLen, 0,\n                    ( struct sockaddr_in*)&tSockAddr, sizeof(tSockAddr));\n    if (iRet < 0)\n    {\n        printf(\"error=%d\\n\", WSAGetLastError() );\n        return -1;\n    }\n    return 0;\n}\n\n\n\u3068\u3053\u306e\u69d8\u306b sockaddr_in \u2192 sockaddr_in6 \u306b\u5909\u3048\u305f\u308a AF_INET \u2192 AF_INET6 \u306b\u5909\u3048\u308b\u3060\u3051\u3067\u3059\u3002\n\u3057\u304b\u3057\u3053\u306e IPv6 \u5bfe\u5fdc\u7248\u3092\u52d5\u304b\u3059\u3068send() \u306e\u3068\u3053\u308d\u3067 WSAEADDRNOTAVAIL(10049) \u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u539f\u56e0\n\u30a8\u30e9\u30fc\u306b\u306a\u308b\u539f\u56e0\u306f struct sockaddr_in6 \u69cb\u9020\u4f53\u3092\u521d\u671f\u5316\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u305f\u3081\u3002\nIPv4\u3067\u306f\u521d\u671f\u5316\u3057\u306a\u304f\u3066\u3082\u52d5\u3044\u3066\u3044\u305f\u306e\u3067\u5168\u7136\u6c17\u306b\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3051\u3069IPv6\u3060\u3068\u5024\u304c\u4e0d\u5b9a\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u6a21\u69d8\u3002\n\u78ba\u304b\u306bsockaddr_in6\u69cb\u9020\u4f53\u3092\u30bc\u30ed\u521d\u671f\u5316\u3057\u305f\u3089\u554f\u984c\u306a\u304f\u52d5\u3044\u305f\u3002\n\u3053\u3093\u306a\u3057\u3087\u3046\u3082\u7121\u3044\u4e8b\u3067\u6642\u9593\u3092\u7121\u99c4\u306b\u4f7f\u3063\u305f\u306e\u3067\u3001\u8ab0\u3082\u5fc5\u8981\u3068\u3057\u306a\u3044\u3068\u601d\u3046\u304c\u4e00\u5fdc\u66f8\u304d\u7559\u3081\u3066\u304a\u304f\u3002\n\n# \u306f\u3058\u3081\u306b\nIPv4 \u304b\u3089 IPv6 \u306b\u5bfe\u5fdc\u306a\u3093\u3066\u96e3\u3057\u3044\u4e8b\u3092\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u601d\u3048\u307e\u3059\u304c\u3001\u57fa\u672c\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3061\u3087\u3063\u3068\u5909\u3048\u308b\u3060\u3051\u3067\u3059\u3002\n\n# \u3053\u3093\u306a\u3093\u8a00\u308f\u308c\u307e\u3057\u305f\n\n\u4e0b\u8a18\u306e\u69d8\u306bIPv4\u3067\u66f8\u3044\u305fUDP\u9001\u4fe1\u3092IPv6\u306b\u5909\u3048\u3066\u6b32\u3057\u3044\u3068\u3044\u308f\u308c\u307e\u3057\u305f\u3002\n\n```C\n#include <winsock2.h> /* windows sockets */\n#include <iphlpapi.h> /* for retrieving IP Address */\n\nint main(){\n    int iRet = 0;\n    struct sockaddr_in tSockAddr;\n    char auPkt[] = \"Hello!\";\n    int auPktLen = strlen(auPkt);\n\n    /* \u30bd\u30b1\u30c3\u30c8\u751f\u6210 */\n    *piSocket = (int)socket(AF_INET, (int)SOCK_DGRAM, IPPROTO_UDP);\n    \n    /* sockaddr_in\u69cb\u9020\u4f53\u306e\u8a2d\u5b9a */\n    tSockAddr.sin_family = AF_INET;\n    tSockAddr.sin_addr.s_addr = inet_addr((const char *)\"192.168.0.4\");   // \u9001\u308a\u5148\u306eIPv4\n    tSockAddr.sin_port = htons(5001);\n\n    iRet = sendto(iSocket, (const void *)auPkt, auPktLen, 0,\n                    ( struct sockaddr_in*)&tSockAddr, sizeof(tSockAddr));\n    if (iRet < 0)\n    {\n        printf(\"error=%d\\n\", WSAGetLastError() );\n        return -1;\n    }\n\treturn 0;\n}\n\n```\n\n\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\n\n```C\n#include <winsock2.h> /* windows sockets */\n#include <ws2tcpip.h> /* contain ws2ipdef.h */  \n#include <iphlpapi.h> /* for retrieving IP Address */\n\nint main(){\n\n    int iRet = 0;\n    struct sockaddr_in6 tSockAddr;\n    char auPkt[] = \"Hello!\";\n    int auPktLen = strlen(auPkt);\n\n    /* \u30bd\u30b1\u30c3\u30c8\u751f\u6210 */\n    *piSocket = (int)socket(AF_INET6, (int)SOCK_DGRAM, IPPROTO_UDP);\n    \n    /* sockaddr_in6 \u69cb\u9020\u4f53\u306e\u8a2d\u5b9a */\n    tSockAddr.sin6_family = AF_INET6;\n    tSockAddr.sin6_port = htons(5001);\n\t\n\t// \u300e\u9001\u308a\u5148\u306eIP\u300f\u3092 tSockAddr.sin6_addr \u306b\u683c\u7d0d\n\t// \n\t// InetPton()\u3092\u4f7f\u3048\u3070\u7c21\u5358\u3060\u3051\u3069\u53e4\u3044 Ws2tcpip.h \u306b\u306f InetPton() \u306f\u5b58\u5728\u3057\u306a\u3044\u4e8b\u3082\u3042\u308b\u306e\u3067\u6ce8\u610f\n\t// InetPton(AF_INET6, \"FE80::6212:8AFF:FE96:B1F0\", &(tSockAddr.sin6_addr));\n\t// InetPton(AF_INET6, \"FE80:0000:0000:0000:6212:8AFF:FE96:B1F0\", &(tSockAddr.sin6_addr));\n\t\n\t// \u3068\u308a\u3042\u3048\u305a\u7121\u7406\u77e2\u7406\u5165\u308c\u308b(\u307e\u3041IPv6\u3067UDP\u9001\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u691c\u8a3c\u30b3\u30fc\u30c9\u306a\u306e\u3067\u9177\u3044\u66f8\u304d\u65b9\u3060\u3051\u3069\u7121\u554f\u984c)\n\ttSockAddr.sin6_addr.u.Byte[0] = 0xFE;\n\ttSockAddr.sin6_addr.u.Byte[1] = 0x80;\n\ttSockAddr.sin6_addr.u.Byte[2] = 0x00;\n\ttSockAddr.sin6_addr.u.Byte[3] = 0x00;\n\ttSockAddr.sin6_addr.u.Byte[4] = 0x00;\n\ttSockAddr.sin6_addr.u.Byte[5] = 0x00;\n\ttSockAddr.sin6_addr.u.Byte[6] = 0x00;\n\ttSockAddr.sin6_addr.u.Byte[7] = 0x00;\n\ttSockAddr.sin6_addr.u.Byte[8] = 0x62;\n\ttSockAddr.sin6_addr.u.Byte[9] = 0x12;\n\ttSockAddr.sin6_addr.u.Byte[10]= 0x8A;\n\ttSockAddr.sin6_addr.u.Byte[11]= 0xFF;\n\ttSockAddr.sin6_addr.u.Byte[12]= 0xFE;\n\ttSockAddr.sin6_addr.u.Byte[13]= 0x96;\n\ttSockAddr.sin6_addr.u.Byte[14]= 0xB1;\n\ttSockAddr.sin6_addr.u.Byte[15]= 0xF0;\n\n    iRet = sendto(iSocket, (const void *)auPkt, auPktLen, 0,\n                    ( struct sockaddr_in*)&tSockAddr, sizeof(tSockAddr));\n    if (iRet < 0)\n    {\n        printf(\"error=%d\\n\", WSAGetLastError() );\n        return -1;\n    }\n\treturn 0;\n}\n\n```\n\n\u3068\u3053\u306e\u69d8\u306b sockaddr_in \u2192 sockaddr_in6 \u306b\u5909\u3048\u305f\u308a AF_INET \u2192 AF_INET6 \u306b\u5909\u3048\u308b\u3060\u3051\u3067\u3059\u3002\n\u3057\u304b\u3057\u3053\u306e IPv6 \u5bfe\u5fdc\u7248\u3092\u52d5\u304b\u3059\u3068send() \u306e\u3068\u3053\u308d\u3067 WSAEADDRNOTAVAIL(10049) \u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\n# \u539f\u56e0\n\n\u30a8\u30e9\u30fc\u306b\u306a\u308b\u539f\u56e0\u306f struct sockaddr_in6 \u69cb\u9020\u4f53\u3092\u521d\u671f\u5316\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u305f\u3081\u3002\nIPv4\u3067\u306f\u521d\u671f\u5316\u3057\u306a\u304f\u3066\u3082\u52d5\u3044\u3066\u3044\u305f\u306e\u3067\u5168\u7136\u6c17\u306b\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3051\u3069IPv6\u3060\u3068\u5024\u304c\u4e0d\u5b9a\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u6a21\u69d8\u3002\n\u78ba\u304b\u306bsockaddr_in6\u69cb\u9020\u4f53\u3092\u30bc\u30ed\u521d\u671f\u5316\u3057\u305f\u3089\u554f\u984c\u306a\u304f\u52d5\u3044\u305f\u3002\n\n\n\u3053\u3093\u306a\u3057\u3087\u3046\u3082\u7121\u3044\u4e8b\u3067\u6642\u9593\u3092\u7121\u99c4\u306b\u4f7f\u3063\u305f\u306e\u3067\u3001\u8ab0\u3082\u5fc5\u8981\u3068\u3057\u306a\u3044\u3068\u601d\u3046\u304c\u4e00\u5fdc\u66f8\u304d\u7559\u3081\u3066\u304a\u304f\u3002\n", "tags": ["IPv6"]}