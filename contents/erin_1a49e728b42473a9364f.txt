{"context": "\n\n\u306f\u3058\u3081\u306b\nCRUD\u51e6\u7406\u304a\u3088\u3073\u30e1\u30fc\u30eb\u9001\u4fe1\u3092\u884c\u3046Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092Play 2.5\uff08Scala\uff09\u3067\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\nKona Linux UE\u3082\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u306a\u3063\u305f\u3053\u3068\u3067\u3059\u3057\u3001\u4eca\u56de\u306f\u30ce\u30fc\u30c8PC\u306bKona Linux UE 2.0\uff08Ubuntu 16.04 LTS\uff09\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3060\u3051\u306e\u771f\u3063\u65b0\u306e\u72b6\u614b\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3057\u3001\u6700\u7d42\u7684\u306bAmazon EC2\u200e\uff08Ubuntu 14.04 LTS\uff09\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/imahiro-t/play-app.git\n\u4ed6\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u306eWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306e\u5b9f\u88c5\u306f\u3053\u3061\u3089\nYesod 1.4\u3067\u306eCRUD\u51e6\u7406\u304a\u3088\u3073\u30e1\u30fc\u30eb\u9001\u4fe1\uff08stack\u306b\u3088\u308b\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u304b\u3089keter\u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u307e\u3067\uff09\nPhoenix\u3067\u306eCRUD\u51e6\u7406\u304a\u3088\u3073\u30e1\u30fc\u30eb\u9001\u4fe1\uff08mix\u306b\u3088\u308b\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u304b\u3089Exrm\u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u307e\u3067\uff09\n\n\u74b0\u5883\nKona Linux UE 2.0\uff08Ubuntu 16.04 LTS\uff09\uff08\u958b\u767a\u74b0\u5883\uff09\nAmazon EC2\u200e\uff08Ubuntu 14.04 LTS\uff09\uff08\u5b9f\u884c\u74b0\u5883\uff09\n\n\u4f5c\u6210\u3059\u308bWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\n\u643a\u5e2f\u96fb\u8a71\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u6a5f\u80fd\u306b\u306f\u3001\u4e88\u5b9a\u3092\u767b\u9332\u3059\u308b\u3068\u3001\u305d\u306e\u958b\u59cb\u65e5\u6642\u306e\u25cb\u5206\u524d\u306b\u30a2\u30e9\u30fc\u30e0\u3092\u306a\u3089\u3059\u6a5f\u80fd\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u79c1\u306e\u30ac\u30e9\u30db\uff08AQUOS K SHF32\uff09\u3067\u306f\u30a2\u30e9\u30fc\u30e0\u306f\u547c\u51fa\u97f3\u306e\u8a2d\u5b9a\u3068\u9023\u52d5\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u666e\u6bb5\u547c\u51fa\u97f3\u3092\u5207\u3063\u3066\u30d0\u30a4\u30d6\u306e\u307f\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5f53\u7136\u30a2\u30e9\u30fc\u30e0\u306f\u9cf4\u3089\u305a\u3001\u305d\u308c\u3060\u3051\u306a\u3089\u307e\u3060\u3057\u3082\u3001\u30d0\u30a4\u30d6\u3059\u3089\u3057\u3066\u304f\u308c\u306a\u3044\u3068\u3044\u3046\u4f7f\u3044\u52dd\u624b\u306e\u60aa\u3055\u3002\n\u6982\u8981\u306f\u3001\u30b5\u30a4\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u4ef6\u540d\u3001\u65e5\u4ed8\u3001\u6642\u9593\u3001\u901a\u77e5\uff08\u25cb\u5206\u524d\uff09\u3001\u8aac\u660e\u3092\u767b\u9332\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d0\u5074\u3067\u305d\u306e\u901a\u77e5\u6642\u523b\u306b\u306a\u3063\u305f\u6642\u70b9\u3067\u3001\u30e1\u30fc\u30eb\u3092\u914d\u4fe1\u3057\u3066\u304f\u308c\u308b\u3068\u3044\u3046Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n\n\nJDK\u3001activator\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u307e\u305a\u306f\u958b\u767a\u74b0\u5883\u306bJDK\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002Play 2.5\u306fJava 1.8\u304c\u5fc5\u8981\u306a\u306e\u3067\u3054\u6ce8\u610f\u3092\u3002\n$ sudo apt install openjdk-8-jdk\n\n\u6b21\u306bPlay\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306bactivator\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n$ activator new notify play-scala\n$ cd notify\n\nactivator new [\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d] [\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8]\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3001\u4eca\u56de\u306f\u300cnotify\u300d\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3067\u3001Scala\u3092\u4f7f\u3063\u305fPlay\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nnotify\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u5f8c\u306fnotify\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u30d5\u30a1\u30a4\u30eb\u306e\u8ffd\u52a0\u3001\u7de8\u96c6\u3092\u884c\u3063\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\nModel\u3068DAO\u306e\u4f5c\u6210\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u3084\u308a\u53d6\u308a\u306f\u300cSlick\u300d\u3068\u3044\u3046FRM\u3092\u4f7f\u3044\u307e\u3059\u3002Slick\u306f\u300cScala Language-Integrated Connection Kit\u300d\u306e\u7565\u3067Play\u3068\u540c\u3058Lightbend\u793e\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bORM\u306a\u3089\u306cFRM\u300cFunctional Relational Mapping\u300d\u3067\u3059\u3002\nSlick\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001Play2.5\u306e\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u4e0b\u8a18\u306e2\u70b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\uff11\uff0ebuild.sbt\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\n\nbuild.sbt\nlibraryDependencies += \"com.typesafe.play\" %% \"play-slick\" % \"2.0.0\"\nlibraryDependencies += \"com.typesafe.play\" %% \"play-slick-evolutions\" % \"2.0.0\"\nlibraryDependencies += \"com.h2database\" % \"h2\" % \"1.4.191\"\n\n\n\u203b\u8d77\u52d5\u6642\u306bbinding\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u306e\u3067\u300cjdbc\u300d\u306e\u4f9d\u5b58\u306e\u8a18\u8ff0\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\uff12\uff0econf/application.conf\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\n\nconf/application.conf\nslick.dbs {\n  default.driver = \"slick.driver.H2Driver$\"\n  default.db.driver = \"org.h2.Driver\"\n  default.db.url = \"jdbc:h2:./notify\"\n  default.db.url = ${?H2_DATABASE}\n}\n\n\n\u305d\u3057\u3066\u3001app/models/Notification.scala\u306b\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\u3002\n\napp/models/Notification.scala\npackage models\n\ncase class Notification (\n  id: Option[Long],\n  subject: String,\n  actionDate: java.sql.Date,\n  actionTime: java.sql.Time,\n  notifyBefore: Int,\n  summary: String,\n  notificationDate: java.util.Date,\n  sent: Boolean\n)\n\n\n\u521d\u56de\u8d77\u52d5\u6642\u306b\u30c6\u30fc\u30d6\u30eb\u3092\u81ea\u52d5\u751f\u6210\u3057\u3066\u3082\u3089\u3046\u305f\u3081\u3001conf/evolutions/default/1.sql\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\nconf/evolutions/default/1.sql\n# Notification\n\n# --- !Ups\n\nCREATE TABLE \"notification\" (\n    \"id\" bigint(20) NOT NULL AUTO_INCREMENT,\n    \"subject\" varchar(255),\n    \"action_date\" date,\n    \"action_time\" time,\n    \"notify_before\" integer,\n    \"summary\" varchar(255),\n    \"notification_date\" timestamp,\n    \"sent\" boolean,\n    PRIMARY KEY (\"id\")\n);\n\n# --- !Downs\n\nDROP TABLE \"notification\";\n\n\n\u7d9a\u3044\u3066CRUD\u51e6\u7406\u3092\u884c\u3046DAO\u3092app/dao/NotificationDAO.scala\u306b\u3002\n\napp/dao/NotificationDAO.scala\npackage dao\n\nimport scala.concurrent.Future\nimport java.util.Date\nimport java.util.Calendar\nimport java.sql.Time\nimport java.sql.Timestamp\nimport javax.inject.Inject\nimport javax.inject.Singleton\nimport models.Notification\nimport play.api.db.slick.DatabaseConfigProvider\nimport play.api.libs.concurrent.Execution.Implicits.defaultContext\nimport slick.driver.JdbcProfile\n\n@Singleton\nclass NotificationDAO @Inject()(dbConfigProvider: DatabaseConfigProvider) {\n\n  val dbConfig = dbConfigProvider.get[JdbcProfile]\n\n  import dbConfig.driver.api._\n\n  implicit def javaDateTimestampMapper = MappedColumnType.base[Date, Timestamp](\n    dt => new Timestamp(dt.getTime),\n    ts => new Date(ts.getTime)\n  )\n\n  private class NotificationTable(tag: Tag) extends Table[Notification](tag, \"notification\") {\n    def id = column[Long](\"id\", O.PrimaryKey, O.AutoInc)\n    def subject = column[String](\"subject\")\n    def actionDate = column[java.sql.Date](\"action_date\")\n    def actionTime = column[java.sql.Time](\"action_time\")\n    def notifyBefore = column[Int](\"notify_before\")\n    def summary = column[String](\"summary\")\n    def notificationDate = column[Date](\"notification_date\")\n    def sent = column[Boolean](\"sent\", O.Default(false))\n    def * = (id.?, subject, actionDate, actionTime, notifyBefore, summary, notificationDate, sent) <> ((Notification.apply _).tupled, Notification.unapply)\n  }\n\n  private val notifications = TableQuery[NotificationTable]\n\n  def getNotificationsSent(): Future[List[Notification]] =\n    dbConfig.db.run(notifications.filter(n => (n.sent === true)).result).map(_.toList)\n\n  def getNotificationsSentNotYet(): Future[List[Notification]] =\n    dbConfig.db.run(notifications.filter(n => (n.sent === false)).result).map(_.toList)\n\n  def byId(id: Long): Future[Option[Notification]] = dbConfig.db.run(notifications.filter(_.id === id).result.headOption)\n\n  def create(notification: Notification): Future[Int] = {\n    val n = notification.copy(\n      notificationDate = calcNotificationDate(notification.actionDate, notification.actionTime, notification.notifyBefore),\n      sent = false\n    )\n    dbConfig.db.run(notifications += n)\n  }\n\n  def update(notification: Notification): Future[Int] = {\n    dbConfig.db.run(notifications.filter(_.id === notification.id).map(\n      n => (\n        n.subject,\n        n.actionDate,\n        n.actionTime,\n        n.notifyBefore,\n        n.summary,\n        n.notificationDate,\n        n.sent\n        )\n    ).update(\n      notification.subject,\n      notification.actionDate,\n      notification.actionTime,\n      notification.notifyBefore,\n      notification.summary,\n      calcNotificationDate(notification.actionDate, notification.actionTime, notification.notifyBefore),\n      false\n     )\n    )\n  }\n\n  def getSendList(): Future[List[Notification]] =\n    dbConfig.db.run(notifications.filter(n => (n.sent === false) && (n.notificationDate < new Date)).result).map(_.toList)\n\n  def sent(id: Long): Future[Int] =\n    dbConfig.db.run(notifications.filter(_.id === id).map(n => (n.sent)).update(true))\n\n  def delete(id: Long): Future[Int] =\n    dbConfig.db.run(notifications.filter(_.id === id).delete)\n\n  private def calcNotificationDate(actionDate: java.sql.Date, actionTime: Time, notifyBefore: Int): Date = {\n    val cl = Calendar.getInstance\n    val clTmp = Calendar.getInstance\n    cl.setTimeInMillis(actionDate.getTime())\n    clTmp.setTimeInMillis(actionTime.getTime())\n    cl.set(Calendar.HOUR_OF_DAY, clTmp.get(Calendar.HOUR_OF_DAY))\n    cl.set(Calendar.MINUTE, clTmp.get(Calendar.MINUTE))\n    cl.add(Calendar.MINUTE, -notifyBefore)\n    cl.getTime\n  }\n\n}\n\n\n\u6982\u8981\u3068\u3057\u3066\u306f\u3001\n\nModel\u3067\u3042\u308bNotification\u3092\u578b\u306b\u6301\u3063\u305fTable\u3092\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u306b\u3057\u3066NotificationTable\u3092\u4f5c\u6210\u3002\n\u305d\u308c\u3092\u5143\u306bTableQuery\u3092\u4f5c\u6210\u3002\nSlick\u304cjava.util.Date\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u305f\u3081\u3001\u5bfe\u5fdc\u3057\u3066\u3044\u308bjava.sql.Timestamp\u3068\u306e\u76f8\u4e92\u5909\u63db\u306e\u305f\u3081\u306eimplicit def javaDateTimestampMapper\u3092\u4f5c\u6210\u3002\n\u5f8c\u306fCRUD\u306e\u5b9f\u88c5\n\n\u3068\u3044\u3063\u305f\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\nSlick\u3067\u306f\u3001FRM\u306e\u601d\u60f3\u3068\u3057\u3066\u3001TableQuery\u3092Scala\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u611f\u899a\u3067\u64cd\u4f5c\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u305f\u3081\u3001query\u3068\u3044\u3063\u305f\u5909\u6570\u540d\u3067\u306f\u306a\u304fnotifications\u306e\u3088\u3046\u306b\u30ea\u30b9\u30c8\u3063\u307d\u3044\u5909\u6570\u540d\u306b\u3059\u308b\u3053\u3068\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n\nController\uff08\u30cf\u30f3\u30c9\u30e9\u30fc\uff09\u306e\u4f5c\u6210\nPlay\u3067\u306f\u5f8c\u8ff0\u3059\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001URL\u30d1\u30bf\u30fc\u30f3\u304b\u3089\u8a72\u5f53\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4eca\u56de\u306f\uff12\u3064\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u30cf\u30f3\u30c9\u30e9\u30fc\u3067\u5171\u901a\u3057\u3066\u5229\u7528\u3059\u308b\u30d5\u30a9\u30fc\u30e0\u3068Model\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3046\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\napp/controllers/Forms.scala\u306b\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\u3002\n\napp/controllers/Forms.scala\npackage controllers\n\nimport models.Notification\n\nimport java.sql.Time\nimport java.util.Date\n\nimport play.api.data.Form\nimport play.api.data.Forms._\n\ncase class NotificationForm(command: Option[String], notification: Notification)\n\nobject Forms {\n  def notificationForm = Form(\n    mapping(\n      \"command\" -> optional(text),\n      \"db\" ->\n        mapping(\n          \"id\" -> optional(longNumber),\n          \"subject\" -> nonEmptyText,\n          \"actionDate\" -> sqlDate(\"yyyy-MM-dd\"),\n          \"actionTime\" -> date(\"HH:mm\"),\n          \"notifyBefore\" -> number,\n          \"summary\" -> text\n        )\n        ((id, subject, actionDate, actionTime, notifyBefore, summary)\n        => new Notification(id, subject, actionDate, actionTime.convert, notifyBefore, summary, new Date, false))\n        ((n: Notification) => Some((n.id, n.subject, n.actionDate, n.actionTime.convert, n.notifyBefore, n.summary)))\n    )(NotificationForm.apply)(NotificationForm.unapply)\n  )\n\n  implicit class DateToTimeConversion(date: Date) {\n    def convert: Time = {\n      if (date != null) new Time(date.getTime())\n      else new Time(System.currentTimeMillis())\n    }\n  }\n\n  implicit class TimeToDateConversion(time: Time) {\n    def convert: Date = {\n      if (time != null) new Date(time.getTime())\n      else new Date(System.currentTimeMillis())\n    }\n  }\n\n}\n\n\n\u4eca\u56de\u3001\u30d5\u30a9\u30fc\u30e0\u306b\u300ccommand\u300d\u3068\u3044\u3046Model\u3068\u306f\u76f4\u63a5\u95a2\u4fc2\u306e\u306a\u3044\u96a0\u3057\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a2d\u3051\u3066\u30cf\u30f3\u30c9\u30e9\u30fc\u5185\u306e\u51e6\u7406\u3092\u632f\u308a\u5206\u3051\u308b\u305f\u3081\u3001\u30cd\u30b9\u30c8\u3057\u305f\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u300cnotificationDate\u300d\u3084\u300csent\u300d\u306e\u3088\u3046\u306bModel\u306b\u306f\u5b58\u5728\u3059\u308b\u3051\u3069\u30d5\u30a9\u30fc\u30e0\u306b\u306f\u5b58\u5728\u3057\u306a\u3044\u9805\u76ee\u304c\u3042\u308b\u305f\u3081\u3001Model\u5074\u306eapply\u30e1\u30bd\u30c3\u30c9\u3068unapply\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u305b\u305a\u306b\u5225\u9014\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306b\u305d\u308c\u305e\u308c\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\uff11\u3064\u76ee\u306f\uff08\u4e00\u89a7\u8868\u793a\u4ed8\u304d\u306e\uff09\u767b\u9332\u753b\u9762\u304cGET\u3068POST\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3067\u3059\u3002\napp/controllers/NotifyC.scala\u306b\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\u3002\n\napp/controllers/NotifyC.scala\npackage controllers\n\nimport javax.inject.{Inject, Singleton}\n\nimport dao.NotificationDAO\nimport play.api.i18n.{I18nSupport, MessagesApi}\nimport play.api.mvc.{Action, Controller}\nimport play.api.libs.concurrent.Execution.Implicits.defaultContext\n\n@Singleton\nclass NotifyC @Inject() (val messagesApi: MessagesApi, dao: NotificationDAO) extends Controller with I18nSupport {\n\n  def getNotify = Action.async { implicit request =>\n    dao.getNotificationsSent().flatMap(notificationsSent =>\n      dao.getNotificationsSentNotYet().map(notificationsSentNotYet =>\n        Ok(views.html.notifications(request.flash.get(\"message\").getOrElse(\"\"), notificationsSent, notificationsSentNotYet, Forms.notificationForm))\n      )\n    )\n  }\n\n  def postNotify = Action.async { implicit request =>\n    Forms.notificationForm.bindFromRequest.fold(\n      formWithErrors => {\n        dao.getNotificationsSent().flatMap(notificationsSent =>\n          dao.getNotificationsSentNotYet().map(notificationsSentNotYet =>\n            BadRequest(views.html.notifications(\"\", notificationsSent, notificationsSentNotYet, formWithErrors))\n          )\n        )\n      },\n      formValue => {\n        dao.create(formValue.notification).map(_ =>\n          Redirect(\"/notify\").flashing(\"message\" -> (\"[\" + formValue.notification.subject + \"]\" + \"\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\"))\n        )\n      }\n    )\n  }\n\n}\n\n\nGET\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306f\u3001getNotify\u304c\u547c\u3070\u308c\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u901a\u77e5\u4e88\u5b9a\u306e\u30ec\u30b3\u30fc\u30c9\u3068\u3001\u901a\u77e5\u6e08\u307f\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3001\u767b\u9332\u753b\u9762\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\nPOST\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306f\u3001postNotify\u304c\u547c\u3070\u308c\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u5165\u529b\u5185\u5bb9\u3092\u5143\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u767b\u9332\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\uff12\u3064\u76ee\u306f\u7de8\u96c6\u753b\u9762\u304cGET\u3068POST\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3067\u3059\u3002\napp/controllers/NotificationC.scala\u306b\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\u3002\n\napp/controllers/NotificationC.scala\npackage controllers\n\nimport javax.inject.{Inject, Singleton}\n\nimport dao.NotificationDAO\nimport play.api.i18n.{I18nSupport, MessagesApi}\nimport play.api.mvc.{Action, Controller}\nimport play.api.libs.concurrent.Execution.Implicits.defaultContext\n\nimport scala.concurrent.Future\n\n@Singleton\nclass NotificationC @Inject() (val messagesApi: MessagesApi, dao: NotificationDAO) extends Controller with I18nSupport {\n\n  def getNotification(id: Long) = Action.async {\n    dao.byId(id).map(\n      option => option match {\n        case Some(notification) => Ok(views.html.notification(\"\", Forms.notificationForm.fill(NotificationForm(None, notification))))\n        case None => Redirect(\"/notify\")\n      }\n    )\n  }\n\n  def postNotification(id: Long) = Action.async { implicit request =>\n    Forms.notificationForm.bindFromRequest.fold(\n      formWithErrors => {\n        Future(BadRequest(views.html.notification(\"ERROR\", formWithErrors)))\n      },\n      formValue => {\n        formValue.command match {\n          case Some(\"update\") => dao.update(formValue.notification).map(_ =>\n            Redirect(\"/notify\").flashing(\"message\" -> (\"[\" + formValue.notification.subject + \"]\" + \"\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\"))\n          )\n          case Some(\"delete\") => dao.delete(formValue.notification.id.getOrElse(0)).map(_ =>\n            Redirect(\"/notify\").flashing(\"message\" -> (\"[\" + formValue.notification.subject + \"]\" + \"\u3092\u524a\u9664\u3057\u307e\u3057\u305f\u3002\"))\n          )\n          case _ => Future(Redirect(\"/notify\"))\n        }\n      }\n    )\n  }\n\n}\n\n\nGET\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306f\u3001getNotification\u304c\u547c\u3070\u308c\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089id\u306b\u8a72\u5f53\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3001\u7de8\u96c6\u753b\u9762\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\nPOST\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306f\u3001postNotification\u304c\u547c\u3070\u308c\u3001\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\"command\"\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u308a\u3001\u66f4\u65b0\u51e6\u7406\u304b\u524a\u9664\u51e6\u7406\u3092\u884c\u3044\u3001\u767b\u9332\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\nCRUD\u306e\u601d\u60f3\u306b\u5f93\u3063\u3066\u3001GET\u306f\u8868\u793a\u306e\u307f\u3092\u3001POST\u3067\u4f5c\u6210\u3001\u66f4\u65b0\u3001\u524a\u9664\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u7de8\u96c6\u753b\u9762\u304b\u3089\u306ePOST\u306f\u66f4\u65b0\u3068\u524a\u9664\u304c\u3042\u308b\u305f\u3081\u3001\u300ccommand\u300d\u3092\u96a0\u3057\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u3057\u3066\u6301\u3061\u3001\u51e6\u7406\u3092\u632f\u308a\u5206\u3051\u3066\u3044\u307e\u3059\u3002\n\nView\u306e\u4f5c\u6210\n\u307e\u305a\u306f\u5171\u901a\u753b\u9762\u3092app/views/main.scala.html\u306b\u3002\uff08bootstrap\u306e\u8a18\u8ff0\u3092\u5165\u308c\u305f\u3060\u3051\u3067\u3059\u3002\uff09\n\napp/views/main.scala.html\n@(title: String)(content: Html)\n\n<!DOCTYPE html>\n\n<html lang=\"jp\">\n<head>\n    <title>@title</title>\n\n    <!-- Latest compiled and minified CSS -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" integrity=\"sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7\" crossorigin=\"anonymous\">\n    <!-- Optional theme -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css\" integrity=\"sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r\" crossorigin=\"anonymous\">\n    <!-- Latest compiled and minified JavaScript -->\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\" integrity=\"sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS\" crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" media=\"screen\" href=\"@routes.Assets.versioned(\"stylesheets/main.css\")\">\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"@routes.Assets.versioned(\"images/favicon.png\")\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n@content\n</body>\n</html>\n\n\n\u6b21\u306b\u767b\u9332\u753b\u9762\u3092app/views/notifications.scala.html\u306b\u3002\n\napp/views/notifications.scala.html\n@(message: String, notificationsSent: List[models.Notification], notificationsSentNotYet: List[models.Notification]\n  , myForm: Form[NotificationForm])(implicit messages: Messages)\n\n@main(\"\u767b\u9332\u753b\u9762\") {\n<div class=\"container\">\n<h1>\u767b\u9332\u753b\u9762</h1>\n<p>@message</p>\n<ul>\n    @for(notification <- notificationsSentNotYet) {\n    <li>\n        <a href=\"/notify/@notification.id\"> @notification.subject </a>\n    </li>\n    }\n</ul>\n<hr>\n<p>\n@helper.form(action=routes.NotifyC.postNotify) {\n    @(helper.inputText (\n        field = myForm(\"db.subject\"),\n        '_label -> \"\u4ef6\u540d\"\n    ))\n    @(helper.inputDate(\n        field = myForm(\"db.actionDate\"),\n        '_label -> \"\u65e5\u4ed8\"\n    ))\n    @helper.input(myForm(\"db.actionTime\"), '_label -> \"\u6642\u9593\") { (id, name, value, args) =>\n        <input type=\"time\" name=\"@name\" id=\"@id\" value=\"@value\" @toHtmlArgs(args)>\n    }\n    @(helper.select (\n        field = myForm(\"db.notifyBefore\"),\n        options = Seq(\"5\" -> \"5\u5206\u524d\", \"10\" -> \"10\u5206\u524d\", \"15\" -> \"15\u5206\u524d\", \"20\" -> \"20\u5206\u524d\"\n        , \"30\" -> \"30\u5206\u524d\", \"45\" -> \"45\u5206\u524d\", \"60\" -> \"1\u6642\u9593\u524d\"),\n        args = 'size -> 1,\n        '_label -> \"\u901a\u77e5\"\n    ))\n    @(helper.textarea (\n        field = myForm(\"db.summary\"),\n        '_label -> \"\u8aac\u660e\"\n    ))\n    <button>\u767b\u9332</button>\n}\n</p>\n<hr>\n<ul>\n    @for(notification <- notificationsSent) {\n    <li>\n        <a href=\"/notify/@notification.id\"> @notification.subject </a>\n    </li>\n    }\n</ul>\n</div>\n}\n\n\n\u305d\u3057\u3066\u7de8\u96c6\u753b\u9762\u3092app/views/notification.scala.html\u306b\u3002\n\napp/views/notification.scala.html\n@(message: String, myForm: Form[NotificationForm])(implicit messages: Messages)\n\n@main(\"\u7de8\u96c6\u753b\u9762\") {\n<div class=\"container\">\n<h1>\u7de8\u96c6\u753b\u9762</h1>\n<p>@message</p>\n<p>\n@helper.form(action=routes.NotificationC.postNotification(myForm(\"db.id\").value.getOrElse(\"0\").toLong)) {\n    <input type=\"hidden\" name=\"command\" value=\"update\">\n    <input type=\"hidden\" name=\"db.id\" value=\"@myForm(\"db.id\").value\">\n    @(helper.inputText (\n        field = myForm(\"db.subject\"),\n        '_label -> \"\u4ef6\u540d\"\n    ))\n    @(helper.inputDate(\n        field = myForm(\"db.actionDate\"),\n        '_label -> \"\u65e5\u4ed8\"\n    ))\n    @helper.input(myForm(\"db.actionTime\"), '_label -> \"\u6642\u9593\") { (id, name, value, args) =>\n        <input type=\"time\" name=\"@name\" id=\"@id\" value=\"@value\" @toHtmlArgs(args)>\n    }\n    @(helper.select (\n        field = myForm(\"db.notifyBefore\"),\n        options = Seq(\"5\" -> \"5\u5206\u524d\", \"10\" -> \"10\u5206\u524d\", \"15\" -> \"15\u5206\u524d\", \"20\" -> \"20\u5206\u524d\"\n        , \"30\" -> \"30\u5206\u524d\", \"45\" -> \"45\u5206\u524d\", \"60\" -> \"1\u6642\u9593\u524d\"),\n        args = 'size -> 1,\n        '_label -> \"\u901a\u77e5\"\n    ))\n    @(helper.textarea (\n        field = myForm(\"db.summary\"),\n        '_label -> \"\u8aac\u660e\"\n    ))\n    <div>\n        <input type=\"submit\" value=\"\u66f4\u65b0\">\n        <input type=\"button\" value=\"\u524a\u9664\" onclick=\"if (confirm('\u524a\u9664\u3057\u307e\u3059\u304b?')) {this.form.command.value = 'delete';this.form.submit();}\">\n    </div>\n}\n</p>\n<hr>\n<p><a href=\"/notify\">HOME</a></p>\n</div>\n}\n\n\n\u524a\u9664\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u969b\u306b\u3001\u96a0\u3057\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\"comannd\"\u3092\"delete\"\u306b\u3057\u3066POST\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306bCSS\u3067\u3059\u3002\n\npublic/stylesheets/main.css\nh1 {\n    background-color: #6666aa;\n    color: #ccccff;\n}\ninput#subject {\n    width: 280px;\n}\ntextarea#summary {\n    width: 280px;\n}\ndl {\n  margin-bottom: 5px !important;\n}\ndt,dd {\n  line-height: 1 !important;\n}\nul {\n  padding-left: 20px !important;\n}\n\n\n\n\u30bf\u30a4\u30de\u30fc\u306e\u4f5c\u6210\n\u901a\u77e5\u6642\u523b\u306b\u30e1\u30fc\u30eb\u9001\u4fe1\u3092\u884c\u3046\u305f\u3081\u30011\u5206\u9593\u9694\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u691c\u7d22\u3057\u3001\u8a72\u5f53\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u304c\u3042\u308b\u5834\u5408\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u66f4\u65b0\u3001\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u3001\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u306fActor\u304c\u62c5\u5f53\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u30e1\u30fc\u30eb\u9001\u4fe1\u306fPlay\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bplay-mailer\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u3001\u307e\u305a\u306f\u4e0b\u8a18\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\uff11\uff0ebuild.sbt\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\n\nbuild.sbt\nlibraryDependencies += \"com.typesafe.play\" %% \"play-mailer\" % \"5.0.0-M1\"\n\n\n\uff12\uff0econf/application.conf\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\n\nconf/application.conf\nplay.mailer {\n  host = \"localhost\"\n  host = ${?MAIL_HOST}\n  port = 25\n  port = ${?MAIL_PORT}\n}\nnotify.mail {\n  from = \"NOTIFY SENDER <from@xxxx.xx>\"\n  from = ${?MAIL_FROM}\n  to = \"to@xxxx.xx\"\n  to = ${?MAIL_TO}\n}\n\n\n\u30e1\u30fc\u30eb\u9001\u4fe1\u3092\u884c\u3046Actor\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\napp/actors/NotifyActor.scala\npackage actors\n\nimport dao.NotificationDAO\nimport akka.actor._\nimport play.api.libs.concurrent.Execution.Implicits.defaultContext\nimport play.api.libs.mailer.{MailerClient, Email}\nimport com.typesafe.config.ConfigFactory\n\nimport play.api.Logger\n\nobject NotifyActor {\n  def props(dao: NotificationDAO, mc: MailerClient) = Props(classOf[NotifyActor], dao, mc)\n}\n\nclass NotifyActor(dao: NotificationDAO, mc: MailerClient) extends Actor {\n\n  val config = ConfigFactory.load()\n  val mailFrom = config.getString(\"notify.mail.from\")\n  val mailTo = config.getString(\"notify.mail.to\")\n\n  def receive = {\n    case \"NOTIFY\" =>\n      Logger.debug((new java.util.Date).toString)\n      Logger.debug(\"Message(NOTIFY) received\")\n      dao.getSendList().map { notifications =>\n        Logger.debug(\"notifications.size -> \" + notifications.size)\n        for (notification <- notifications) {\n          Logger.debug(\"notification.id -> \" + notification.id)\n          val email = Email(\n            notification.subject,\n            mailFrom,\n            Seq(mailTo),\n            bodyText = Some(\"[\u4ef6\u540d]\" +\n              \"\\n\" +\n              notification.subject +\n              \"\\n\" +\n              \"[\u65e5\u4ed8]\" +\n              \"\\n\" +\n              notification.actionDate +\n              \"\\n\" +\n              \"[\u6642\u9593]\" +\n              \"\\n\" +\n              notification.actionTime +\n              \"\\n\" +\n              \"[\u901a\u77e5]\" +\n              \"\\n\" +\n              notification.notificationDate +\n              \"\\n\" +\n              \"[\u8aac\u660e]\" +\n              \"\\n\" +\n              notification.summary)\n          )\n          mc.send(email)\n          Logger.debug(\"Mail sent\")\n          dao.sent(notification.id.getOrElse(0))\n          Logger.debug(\"Model(notification) updated\")\n        }\n      }\n  }\n}\n\n\nActor\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u30bf\u30a4\u30de\u30fc\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\napp/services/NotifyTimer.scala\npackage services\n\nimport dao.NotificationDAO\nimport actors.NotifyActor\n\nimport javax.inject.Inject\nimport javax.inject.Singleton\n\nimport java.util.Calendar\n\nimport akka.actor._\nimport scala.concurrent.duration._\nimport scala.concurrent.ExecutionContext.Implicits.global\n\nimport play.api.libs.mailer._\n\nimport play.api.Logger\n\n@Singleton\nclass NotifyTimer @Inject() (dao: NotificationDAO, system: ActorSystem, mc: MailerClient) {\n\n  Logger.info(\"start Actaor\")\n  val notifyActor = system.actorOf(NotifyActor.props(dao, mc), \"notify-actor\")\n  var cl = Calendar.getInstance\n  cl.set(Calendar.SECOND, 0)\n  cl.set(Calendar.MILLISECOND, 0)\n  cl.add(Calendar.MINUTE, 1)\n  system.scheduler.schedule(\n    (cl.getTimeInMillis - System.currentTimeMillis).milliseconds,\n    1.minutes,\n    notifyActor,\n    \"NOTIFY\"\n  )\n  Logger.info(\"Actor has started\")\n\n}\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u30bf\u30a4\u30de\u30fc\u3092\u30b9\u30bf\u30fc\u30c8\u3059\u308b\u305f\u3081DI\u306e\u767b\u9332\u3092\u884c\u3044\u307e\u3059\u3002\n\napp/Module.scala\nimport com.google.inject.AbstractModule\n\nimport services.NotifyTimer\n\nclass Module extends AbstractModule {\n\n  override def configure() = {\n    bind(classOf[NotifyTimer]).asEagerSingleton()\n  }\n\n}\n\n\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\uff08URL\u30d1\u30bf\u30fc\u30f3\u304b\u3089\u30cf\u30f3\u30c9\u30e9\u30fc\u3078\u306e\u5bfe\u5fdc\u4ed8\u3051\uff09\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\nconf/routes\n# Routes\n# This file defines all application routes (Higher priority routes first)\n# ~~~~\n\n# Home page\nGET     /notify                     controllers.NotifyC.getNotify\nPOST    /notify                     controllers.NotifyC.postNotify\nGET     /notify/:id                 controllers.NotificationC.getNotification(id: Long)\nPOST    /notify/:id                 controllers.NotificationC.postNotification(id: Long)\n\n# Map static resources from the /public folder to the /assets URL path\nGET     /assets/*file               controllers.Assets.versioned(path=\"/public\", file: Asset)\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n$ activator run\nhttp://localhost:9000/notify\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nketer\u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\n\u4eca\u56de\u306f\u3001Haskell\u306eYesod\u3068\u3044\u3046Web\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305fWeb\u30a2\u30d7\u30ea\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u969b\u306b\u304a\u4e16\u8a71\u306b\u306a\u3063\u305fKeter\u3092\u4f7f\u3063\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3059\u3002\nKeter\u306f\u3001\u3082\u3068\u3082\u3068\u306fYesod\u306e\u30c7\u30d7\u30ed\u30a4\u30c4\u30fc\u30eb\u3068\u3057\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u8d77\u52d5\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u74b0\u5883\u5909\u6570\u3067\u6307\u5b9a\u3067\u304d\u308bWeb\u30a2\u30d7\u30ea\u3067\u3042\u308c\u3070\u3001\u7279\u306b\u8a00\u8a9e\u3092\u554f\u308f\u305a\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\nKeter\u306f\u3001\u30db\u30b9\u30c8\u540d\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\u306b\u5bfe\u3057\u3066\u3001\u7279\u5b9a\u306eWeb\u30a2\u30d7\u30ea\u306b\u30d5\u30a9\u30ef\u30fc\u30c9\u3059\u308b\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306e\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4f8b\u3048\u3070\u3001\u540c\u4e00\u30b5\u30fc\u30d0\u4e0a\u3067\u3001http://play.hostname.xxx/notify\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092Play\u306b\u3001http://yesod.hostname.xxx/notify\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092Yesod\u306b\u632f\u308a\u5206\u3051\u308b\u3068\u3044\u3063\u305f\u4f7f\u3044\u65b9\u3082\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u4ed6\u306e\u6a5f\u80fd\u3068\u3057\u3066\u306f\u3001Web\u30a2\u30d7\u30ea\u306e\u81ea\u52d5\u8d77\u52d5\u3001\u30d7\u30ed\u30bb\u30b9\u76e3\u8996\u3001\u30ea\u30d3\u30eb\u30c9\u306b\u3088\u308b\u518d\u8d77\u52d5\u306a\u3069\u306e\u6a5f\u80fd\u3082\u3064\u3044\u3066\u3044\u307e\u3059\u3002\n\nketer\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\nketer\u306fHaskell\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u307e\u305a\u306fHaskell\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306bstack\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u4f7f\u7528\u3059\u308bOS\u306b\u5408\u308f\u305b\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u6b21\u306b\u3001Haskell\u306eGHC\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u3068\u3082\u306bketer\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ stack install keter --install-ghc\n\n\u4f5c\u6210\u3055\u308c\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30ebketer\u3092Kona Linux\u3084Amazon EC2\u200e\u306e/usr/bin/\u7b49\u306b\u653e\u308a\u8fbc\u307f\u3001\u5b9f\u884c\u6a29\u9650\u3092\u4e0e\u3048\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\u307e\u305a\u306factivator\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ activator dist\n\ntarget/universal/\u306b\u4f5c\u6210\u3055\u308c\u305fnotify-1.0-SNAPSHOT.zip\u3092\u89e3\u51cd\u3057\u3066\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u5185\u306bconfig\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eketer\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092keter.yml\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n[\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0]/config/keter.yml\nstanzas:\n  - type: webapp\n    exec: ../notify-1.0-SNAPSHOT/bin/notify\n    args: []\n    hosts:\n      - localhost\n      - aws.hostname.xxx\n    requires-secure: false\n\n\nnotify-1.0-SNAPSHOT/conf/application.conf\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n[\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0]/notify-1.0-SNAPSHOT/conf/application.conf\nplay.crypto.secret = \"mypassword\"\n\nplay.evolutions {\n  # You can disable evolutions for a specific datasource if necessary\n  db.default.enabled = false\n}\n\n\nketer\u5074\u3067\u306f\u30d5\u30a9\u30ef\u30fc\u30c9\u3059\u308b\u30dd\u30fc\u30c8\u3092\u74b0\u5883\u5909\u6570\u300cPORT\u300d\u3067\u6307\u5b9a\u3057\u3066\u304f\u308b\u306e\u3067\u3001notify-1.0-SNAPSHOT/bin/notify\u306e\u4e0b\u90e8\u306b\u3042\u308b\u300cMain script\u300d\u5185\u3067\u8d77\u52d5\u6642\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n[\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0]/notify-1.0-SNAPSHOT/bin/notify\naddJava \"-Dhttp.port=$PORT\"\naddJava \"-Dplay.crypto.secret=mypassword\"\n\n\n\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u5185\u306f\u4e0b\u8a18\u306e\u69cb\u6210\u3068\u306a\u308a\u307e\u3059\u3002\n[\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0]\n\uff0d\u3000config\n\u3000\u3000\uff0d\u3000keter.yml\n\uff0d\u3000notify-1.0-SNAPSHOT\n\u3000\u3000\uff0d\u3000bin\n\u3000\u3000\uff0d\u3000conf\n\u3000\u3000\uff0d\u3000lib\n\u3000\u3000\uff0d\u3000share\n\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u5185\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eketer\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ tar czf ../notify.keter *\n\n\nketer\u306e\u8a2d\u5b9a\nKona Linux\u3084Amazon EC2\u200e\u306b\u4e0b\u8a18\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u4f5c\u308a\u307e\u3059\u3002\n$ sudo mkdir -p /opt/keter/etc\n$ sudo mkdir -p /opt/keter/incoming\n$ sudo mkdir -p /opt/keter/db\n$ sudo chown $USER.$USER /opt/keter/etc\n$ sudo chown $USER.$USER /opt/keter/incoming\n$ sudo chown $USER.$USER /opt/keter/db\n\n\u4f5c\u6210\u3057\u305fnotify.keter\u3092Kona Linux\u3084Amazon EC2\u200e\u306e/opt/keter/incoming\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u6642\u306b\u81ea\u52d5\u3067\u4f5c\u6210\u3055\u308c\u305fnotify.mv.db\u3092Kona Linux\u3084Amazon EC2\u200e\u306e/opt/keter/db\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\u6b21\u306bketer\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n/opt/keter/etc/keter-config.yaml\nroot: /opt/keter\n\nlisteners:\n  - host: \"*4\"\n    port: 3000\n\nsetuid: ubuntu\n\nenv:\n  H2_DATABASE: jdbc:h2:/opt/keter/db/notify\n  MAIL_HOST: localhost\n  MAIL_PORT: \"25\"\n  MAIL_FROM: NOTIFY SENDER <from@xxxx.xx>\n  MAIL_TO: to@mydomain.xxx\n\n\n\u30c7\u30fc\u30e2\u30f3\u3068\u3057\u3066\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u203bUbuntu 16.04\u306e\u5834\u5408\n\n/etc/systemd/system/keter.service\n[Unit]\nDescription=Keter Deployment Handler\nAfter=local-fs.target network.target\n\n[Service]\nExecStart=/usr/bin/keter /opt/keter/etc/keter-config.yaml\n\n[Install]\nWantedBy=multi-user.target\n\n\n\u203bUbuntu 14.04\u306e\u5834\u5408\n\n/etc/init/keter.conf\ndescription \"Keter Deployment Handler\"\n\nstart on (net-device-up and local-filesystems and runlevel [2345])\nstop on runlevel [016]\nrespawn\n\nconsole output\n\nexec keter /opt/keter/etc/keter-config.yaml\n\n\n\u8d77\u52d5\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u203bUbuntu 16.04\u306e\u5834\u5408\nsudo systemctl start keter\n\u203bUbuntu 14.04\u306e\u5834\u5408\nsudo start keter\nhttp://aws.hostname.xxx:3000/notify\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3055\u3044\u3054\u306b\n\u99c6\u3051\u8db3\u3067activator\u306b\u3088\u308b\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u304b\u3089keter\u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u307e\u3067\u898b\u3066\u304d\u307e\u3057\u305f\u3002\nYesod\u3067\u306e\u5b9f\u88c5\u3092\u631f\u3093\u3060\u3053\u3068\u3067\u3001Play2.4\u3067\u4f5c\u6210\u3057\u305f\u6642\u3088\u308a\u3082\u3001\u305d\u308c\u305e\u308c\u306e\u8cac\u52d9\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u5b9f\u88c5\u306b\u306a\u3063\u305f\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\nDI\u3067\u30bf\u30a4\u30de\u30fc\u3092\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3053\u3068\u3067\u3001Controller\u3068Actor\u306e\u4f9d\u5b58\u3082\u306a\u304f\u306a\u308a\u3001\u307e\u305f\u3001Yesod\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u53c2\u8003\u306b\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u5206\u3051\u308b\u3053\u3068\u3067\u3001\u30e1\u30bf\u30dc\u6c17\u5473\u3060\u3063\u305fController\u304c\u3059\u3063\u304d\u308a\u3068\u3057\u307e\u3057\u305f\u3002\nPlay\u3060\u3051\u3067\u306f\u6c7a\u3057\u3066\u63a5\u70b9\u306e\u306a\u3044keter\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3082\u306a\u304b\u306a\u304b\u9762\u767d\u304b\u3063\u305f\u3067\u3059\u3002\nketer\u306b\u306f\u30ea\u30d3\u30eb\u30c9\u306b\u3088\u308b\u518d\u8d77\u52d5\u306e\u6a5f\u80fd\u304c\u3042\u308b\u306e\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u3067\u3082\u3001\u518d\u5ea6notify.keter\u3092\u4f5c\u6210\u3057\u3066/opt/keter/incoming\u306b\u653e\u308a\u8fbc\u3080\u3060\u3051\u3067\u3001\u81ea\u52d5\u7684\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u518d\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u4fbf\u5229\u3060\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n# \u306f\u3058\u3081\u306b\n\nCRUD\u51e6\u7406\u304a\u3088\u3073\u30e1\u30fc\u30eb\u9001\u4fe1\u3092\u884c\u3046Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092Play 2.5\uff08Scala\uff09\u3067\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\nKona Linux UE\u3082\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u306a\u3063\u305f\u3053\u3068\u3067\u3059\u3057\u3001\u4eca\u56de\u306f\u30ce\u30fc\u30c8PC\u306bKona Linux UE 2.0\uff08Ubuntu 16.04 LTS\uff09\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3060\u3051\u306e\u771f\u3063\u65b0\u306e\u72b6\u614b\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3057\u3001\u6700\u7d42\u7684\u306bAmazon EC2\u200e\uff08Ubuntu 14.04 LTS\uff09\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/imahiro-t/play-app.git\n\n\u4ed6\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u306eWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306e\u5b9f\u88c5\u306f\u3053\u3061\u3089\n[Yesod 1.4\u3067\u306eCRUD\u51e6\u7406\u304a\u3088\u3073\u30e1\u30fc\u30eb\u9001\u4fe1\uff08stack\u306b\u3088\u308b\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u304b\u3089keter\u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u307e\u3067\uff09](http://qiita.com/erin/items/55e0109e4be6b3257bef)\n[Phoenix\u3067\u306eCRUD\u51e6\u7406\u304a\u3088\u3073\u30e1\u30fc\u30eb\u9001\u4fe1\uff08mix\u306b\u3088\u308b\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u304b\u3089Exrm\u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u307e\u3067\uff09](http://qiita.com/erin/items/49655ebb75695dab6907)\n\n# \u74b0\u5883\n\nKona Linux UE 2.0\uff08Ubuntu 16.04 LTS\uff09\uff08\u958b\u767a\u74b0\u5883\uff09\nAmazon EC2\u200e\uff08Ubuntu 14.04 LTS\uff09\uff08\u5b9f\u884c\u74b0\u5883\uff09\n\n# \u4f5c\u6210\u3059\u308bWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\n\n\u643a\u5e2f\u96fb\u8a71\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u6a5f\u80fd\u306b\u306f\u3001\u4e88\u5b9a\u3092\u767b\u9332\u3059\u308b\u3068\u3001\u305d\u306e\u958b\u59cb\u65e5\u6642\u306e\u25cb\u5206\u524d\u306b\u30a2\u30e9\u30fc\u30e0\u3092\u306a\u3089\u3059\u6a5f\u80fd\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u79c1\u306e\u30ac\u30e9\u30db\uff08AQUOS K SHF32\uff09\u3067\u306f\u30a2\u30e9\u30fc\u30e0\u306f\u547c\u51fa\u97f3\u306e\u8a2d\u5b9a\u3068\u9023\u52d5\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u666e\u6bb5\u547c\u51fa\u97f3\u3092\u5207\u3063\u3066\u30d0\u30a4\u30d6\u306e\u307f\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5f53\u7136\u30a2\u30e9\u30fc\u30e0\u306f\u9cf4\u3089\u305a\u3001\u305d\u308c\u3060\u3051\u306a\u3089\u307e\u3060\u3057\u3082\u3001\u30d0\u30a4\u30d6\u3059\u3089\u3057\u3066\u304f\u308c\u306a\u3044\u3068\u3044\u3046\u4f7f\u3044\u52dd\u624b\u306e\u60aa\u3055\u3002\n\n\u6982\u8981\u306f\u3001\u30b5\u30a4\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u4ef6\u540d\u3001\u65e5\u4ed8\u3001\u6642\u9593\u3001\u901a\u77e5\uff08\u25cb\u5206\u524d\uff09\u3001\u8aac\u660e\u3092\u767b\u9332\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d0\u5074\u3067\u305d\u306e\u901a\u77e5\u6642\u523b\u306b\u306a\u3063\u305f\u6642\u70b9\u3067\u3001\u30e1\u30fc\u30eb\u3092\u914d\u4fe1\u3057\u3066\u304f\u308c\u308b\u3068\u3044\u3046Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n![notify.png](https://qiita-image-store.s3.amazonaws.com/0/94455/97bd131b-45a5-e808-32e5-ac9e81c04052.png)\n![notification.png](https://qiita-image-store.s3.amazonaws.com/0/94455/e9508556-97a2-1636-11d1-f88f692f3a43.png)\n\n\n# JDK\u3001activator\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u307e\u305a\u306f\u958b\u767a\u74b0\u5883\u306bJDK\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002Play 2.5\u306fJava 1.8\u304c\u5fc5\u8981\u306a\u306e\u3067\u3054\u6ce8\u610f\u3092\u3002\n\n```\n$ sudo apt install openjdk-8-jdk\n```\n\n\u6b21\u306bPlay\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306bactivator\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n[\u516c\u5f0f\u30b5\u30a4\u30c8](https://www.playframework.com/download)\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n```\n$ activator new notify play-scala\n$ cd notify\n```\n\n`activator new [\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d] [\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8]`\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3001\u4eca\u56de\u306f\u300cnotify\u300d\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3067\u3001Scala\u3092\u4f7f\u3063\u305fPlay\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nnotify\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u5f8c\u306fnotify\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u30d5\u30a1\u30a4\u30eb\u306e\u8ffd\u52a0\u3001\u7de8\u96c6\u3092\u884c\u3063\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n# Model\u3068DAO\u306e\u4f5c\u6210\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u3084\u308a\u53d6\u308a\u306f\u300cSlick\u300d\u3068\u3044\u3046FRM\u3092\u4f7f\u3044\u307e\u3059\u3002Slick\u306f\u300cScala Language-Integrated Connection Kit\u300d\u306e\u7565\u3067Play\u3068\u540c\u3058Lightbend\u793e\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bORM\u306a\u3089\u306cFRM\u300cFunctional Relational Mapping\u300d\u3067\u3059\u3002\n\nSlick\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001Play2.5\u306e[\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://www.playframework.com/documentation/2.5.x/PlaySlick)\u3092\u53c2\u8003\u306b\u4e0b\u8a18\u306e2\u70b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\uff11\uff0e`build.sbt`\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\n\n```scala:build.sbt\nlibraryDependencies += \"com.typesafe.play\" %% \"play-slick\" % \"2.0.0\"\nlibraryDependencies += \"com.typesafe.play\" %% \"play-slick-evolutions\" % \"2.0.0\"\nlibraryDependencies += \"com.h2database\" % \"h2\" % \"1.4.191\"\n```\n\u203b\u8d77\u52d5\u6642\u306bbinding\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u306e\u3067\u300cjdbc\u300d\u306e\u4f9d\u5b58\u306e\u8a18\u8ff0\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\uff12\uff0e`conf/application.conf`\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\n\n```scala:conf/application.conf\nslick.dbs {\n  default.driver = \"slick.driver.H2Driver$\"\n  default.db.driver = \"org.h2.Driver\"\n  default.db.url = \"jdbc:h2:./notify\"\n  default.db.url = ${?H2_DATABASE}\n}\n```\n\n\u305d\u3057\u3066\u3001`app/models/Notification.scala`\u306b\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\u3002\n\n```scala:app/models/Notification.scala\npackage models\n\ncase class Notification (\n  id: Option[Long],\n  subject: String,\n  actionDate: java.sql.Date,\n  actionTime: java.sql.Time,\n  notifyBefore: Int,\n  summary: String,\n  notificationDate: java.util.Date,\n  sent: Boolean\n)\n```\n\n\u521d\u56de\u8d77\u52d5\u6642\u306b\u30c6\u30fc\u30d6\u30eb\u3092\u81ea\u52d5\u751f\u6210\u3057\u3066\u3082\u3089\u3046\u305f\u3081\u3001`conf/evolutions/default/1.sql`\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```conf/evolutions/default/1.sql\n# Notification\n\n# --- !Ups\n\nCREATE TABLE \"notification\" (\n    \"id\" bigint(20) NOT NULL AUTO_INCREMENT,\n    \"subject\" varchar(255),\n    \"action_date\" date,\n    \"action_time\" time,\n    \"notify_before\" integer,\n    \"summary\" varchar(255),\n    \"notification_date\" timestamp,\n    \"sent\" boolean,\n    PRIMARY KEY (\"id\")\n);\n\n# --- !Downs\n\nDROP TABLE \"notification\";\n```\n\n\u7d9a\u3044\u3066CRUD\u51e6\u7406\u3092\u884c\u3046DAO\u3092`app/dao/NotificationDAO.scala`\u306b\u3002\n\n```scala:app/dao/NotificationDAO.scala\npackage dao\n\nimport scala.concurrent.Future\nimport java.util.Date\nimport java.util.Calendar\nimport java.sql.Time\nimport java.sql.Timestamp\nimport javax.inject.Inject\nimport javax.inject.Singleton\nimport models.Notification\nimport play.api.db.slick.DatabaseConfigProvider\nimport play.api.libs.concurrent.Execution.Implicits.defaultContext\nimport slick.driver.JdbcProfile\n\n@Singleton\nclass NotificationDAO @Inject()(dbConfigProvider: DatabaseConfigProvider) {\n\n  val dbConfig = dbConfigProvider.get[JdbcProfile]\n\n  import dbConfig.driver.api._\n\n  implicit def javaDateTimestampMapper = MappedColumnType.base[Date, Timestamp](\n    dt => new Timestamp(dt.getTime),\n    ts => new Date(ts.getTime)\n  )\n\n  private class NotificationTable(tag: Tag) extends Table[Notification](tag, \"notification\") {\n    def id = column[Long](\"id\", O.PrimaryKey, O.AutoInc)\n    def subject = column[String](\"subject\")\n    def actionDate = column[java.sql.Date](\"action_date\")\n    def actionTime = column[java.sql.Time](\"action_time\")\n    def notifyBefore = column[Int](\"notify_before\")\n    def summary = column[String](\"summary\")\n    def notificationDate = column[Date](\"notification_date\")\n    def sent = column[Boolean](\"sent\", O.Default(false))\n    def * = (id.?, subject, actionDate, actionTime, notifyBefore, summary, notificationDate, sent) <> ((Notification.apply _).tupled, Notification.unapply)\n  }\n\n  private val notifications = TableQuery[NotificationTable]\n\n  def getNotificationsSent(): Future[List[Notification]] =\n    dbConfig.db.run(notifications.filter(n => (n.sent === true)).result).map(_.toList)\n\n  def getNotificationsSentNotYet(): Future[List[Notification]] =\n    dbConfig.db.run(notifications.filter(n => (n.sent === false)).result).map(_.toList)\n\n  def byId(id: Long): Future[Option[Notification]] = dbConfig.db.run(notifications.filter(_.id === id).result.headOption)\n\n  def create(notification: Notification): Future[Int] = {\n    val n = notification.copy(\n      notificationDate = calcNotificationDate(notification.actionDate, notification.actionTime, notification.notifyBefore),\n      sent = false\n    )\n    dbConfig.db.run(notifications += n)\n  }\n\n  def update(notification: Notification): Future[Int] = {\n    dbConfig.db.run(notifications.filter(_.id === notification.id).map(\n      n => (\n        n.subject,\n        n.actionDate,\n        n.actionTime,\n        n.notifyBefore,\n        n.summary,\n        n.notificationDate,\n        n.sent\n        )\n    ).update(\n      notification.subject,\n      notification.actionDate,\n      notification.actionTime,\n      notification.notifyBefore,\n      notification.summary,\n      calcNotificationDate(notification.actionDate, notification.actionTime, notification.notifyBefore),\n      false\n     )\n    )\n  }\n\n  def getSendList(): Future[List[Notification]] =\n    dbConfig.db.run(notifications.filter(n => (n.sent === false) && (n.notificationDate < new Date)).result).map(_.toList)\n\n  def sent(id: Long): Future[Int] =\n    dbConfig.db.run(notifications.filter(_.id === id).map(n => (n.sent)).update(true))\n\n  def delete(id: Long): Future[Int] =\n    dbConfig.db.run(notifications.filter(_.id === id).delete)\n\n  private def calcNotificationDate(actionDate: java.sql.Date, actionTime: Time, notifyBefore: Int): Date = {\n    val cl = Calendar.getInstance\n    val clTmp = Calendar.getInstance\n    cl.setTimeInMillis(actionDate.getTime())\n    clTmp.setTimeInMillis(actionTime.getTime())\n    cl.set(Calendar.HOUR_OF_DAY, clTmp.get(Calendar.HOUR_OF_DAY))\n    cl.set(Calendar.MINUTE, clTmp.get(Calendar.MINUTE))\n    cl.add(Calendar.MINUTE, -notifyBefore)\n    cl.getTime\n  }\n\n}\n```\n\n\u6982\u8981\u3068\u3057\u3066\u306f\u3001\n\n1. Model\u3067\u3042\u308b`Notification`\u3092\u578b\u306b\u6301\u3063\u305f`Table`\u3092\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u306b\u3057\u3066`NotificationTable`\u3092\u4f5c\u6210\u3002\n2. \u305d\u308c\u3092\u5143\u306b`TableQuery`\u3092\u4f5c\u6210\u3002\n3. Slick\u304c`java.util.Date`\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u305f\u3081\u3001\u5bfe\u5fdc\u3057\u3066\u3044\u308b`java.sql.Timestamp`\u3068\u306e\u76f8\u4e92\u5909\u63db\u306e\u305f\u3081\u306e`implicit def javaDateTimestampMapper`\u3092\u4f5c\u6210\u3002\n4. \u5f8c\u306fCRUD\u306e\u5b9f\u88c5\n\n\u3068\u3044\u3063\u305f\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\nSlick\u3067\u306f\u3001FRM\u306e\u601d\u60f3\u3068\u3057\u3066\u3001TableQuery\u3092Scala\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u611f\u899a\u3067\u64cd\u4f5c\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u305f\u3081\u3001query\u3068\u3044\u3063\u305f\u5909\u6570\u540d\u3067\u306f\u306a\u304fnotifications\u306e\u3088\u3046\u306b\u30ea\u30b9\u30c8\u3063\u307d\u3044\u5909\u6570\u540d\u306b\u3059\u308b\u3053\u3068\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n\n# Controller\uff08\u30cf\u30f3\u30c9\u30e9\u30fc\uff09\u306e\u4f5c\u6210\n\nPlay\u3067\u306f\u5f8c\u8ff0\u3059\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001URL\u30d1\u30bf\u30fc\u30f3\u304b\u3089\u8a72\u5f53\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4eca\u56de\u306f\uff12\u3064\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u30cf\u30f3\u30c9\u30e9\u30fc\u3067\u5171\u901a\u3057\u3066\u5229\u7528\u3059\u308b\u30d5\u30a9\u30fc\u30e0\u3068Model\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3046\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n`app/controllers/Forms.scala`\u306b\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\u3002\n\n```scala:app/controllers/Forms.scala\npackage controllers\n\nimport models.Notification\n\nimport java.sql.Time\nimport java.util.Date\n\nimport play.api.data.Form\nimport play.api.data.Forms._\n\ncase class NotificationForm(command: Option[String], notification: Notification)\n\nobject Forms {\n  def notificationForm = Form(\n    mapping(\n      \"command\" -> optional(text),\n      \"db\" ->\n        mapping(\n          \"id\" -> optional(longNumber),\n          \"subject\" -> nonEmptyText,\n          \"actionDate\" -> sqlDate(\"yyyy-MM-dd\"),\n          \"actionTime\" -> date(\"HH:mm\"),\n          \"notifyBefore\" -> number,\n          \"summary\" -> text\n        )\n        ((id, subject, actionDate, actionTime, notifyBefore, summary)\n        => new Notification(id, subject, actionDate, actionTime.convert, notifyBefore, summary, new Date, false))\n        ((n: Notification) => Some((n.id, n.subject, n.actionDate, n.actionTime.convert, n.notifyBefore, n.summary)))\n    )(NotificationForm.apply)(NotificationForm.unapply)\n  )\n\n  implicit class DateToTimeConversion(date: Date) {\n    def convert: Time = {\n      if (date != null) new Time(date.getTime())\n      else new Time(System.currentTimeMillis())\n    }\n  }\n\n  implicit class TimeToDateConversion(time: Time) {\n    def convert: Date = {\n      if (time != null) new Date(time.getTime())\n      else new Date(System.currentTimeMillis())\n    }\n  }\n\n}\n```\n\n\u4eca\u56de\u3001\u30d5\u30a9\u30fc\u30e0\u306b\u300ccommand\u300d\u3068\u3044\u3046Model\u3068\u306f\u76f4\u63a5\u95a2\u4fc2\u306e\u306a\u3044\u96a0\u3057\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a2d\u3051\u3066\u30cf\u30f3\u30c9\u30e9\u30fc\u5185\u306e\u51e6\u7406\u3092\u632f\u308a\u5206\u3051\u308b\u305f\u3081\u3001\u30cd\u30b9\u30c8\u3057\u305f\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u300cnotificationDate\u300d\u3084\u300csent\u300d\u306e\u3088\u3046\u306bModel\u306b\u306f\u5b58\u5728\u3059\u308b\u3051\u3069\u30d5\u30a9\u30fc\u30e0\u306b\u306f\u5b58\u5728\u3057\u306a\u3044\u9805\u76ee\u304c\u3042\u308b\u305f\u3081\u3001Model\u5074\u306eapply\u30e1\u30bd\u30c3\u30c9\u3068unapply\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u305b\u305a\u306b\u5225\u9014\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306b\u305d\u308c\u305e\u308c\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\uff11\u3064\u76ee\u306f\uff08\u4e00\u89a7\u8868\u793a\u4ed8\u304d\u306e\uff09\u767b\u9332\u753b\u9762\u304cGET\u3068POST\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3067\u3059\u3002\n\n`app/controllers/NotifyC.scala`\u306b\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\u3002\n\n```scala:app/controllers/NotifyC.scala\npackage controllers\n\nimport javax.inject.{Inject, Singleton}\n\nimport dao.NotificationDAO\nimport play.api.i18n.{I18nSupport, MessagesApi}\nimport play.api.mvc.{Action, Controller}\nimport play.api.libs.concurrent.Execution.Implicits.defaultContext\n\n@Singleton\nclass NotifyC @Inject() (val messagesApi: MessagesApi, dao: NotificationDAO) extends Controller with I18nSupport {\n\n  def getNotify = Action.async { implicit request =>\n    dao.getNotificationsSent().flatMap(notificationsSent =>\n      dao.getNotificationsSentNotYet().map(notificationsSentNotYet =>\n        Ok(views.html.notifications(request.flash.get(\"message\").getOrElse(\"\"), notificationsSent, notificationsSentNotYet, Forms.notificationForm))\n      )\n    )\n  }\n\n  def postNotify = Action.async { implicit request =>\n    Forms.notificationForm.bindFromRequest.fold(\n      formWithErrors => {\n        dao.getNotificationsSent().flatMap(notificationsSent =>\n          dao.getNotificationsSentNotYet().map(notificationsSentNotYet =>\n            BadRequest(views.html.notifications(\"\", notificationsSent, notificationsSentNotYet, formWithErrors))\n          )\n        )\n      },\n      formValue => {\n        dao.create(formValue.notification).map(_ =>\n          Redirect(\"/notify\").flashing(\"message\" -> (\"[\" + formValue.notification.subject + \"]\" + \"\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\"))\n        )\n      }\n    )\n  }\n\n}\n```\n\nGET\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306f\u3001getNotify\u304c\u547c\u3070\u308c\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u901a\u77e5\u4e88\u5b9a\u306e\u30ec\u30b3\u30fc\u30c9\u3068\u3001\u901a\u77e5\u6e08\u307f\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3001\u767b\u9332\u753b\u9762\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\nPOST\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306f\u3001postNotify\u304c\u547c\u3070\u308c\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u5165\u529b\u5185\u5bb9\u3092\u5143\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u767b\u9332\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\uff12\u3064\u76ee\u306f\u7de8\u96c6\u753b\u9762\u304cGET\u3068POST\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3067\u3059\u3002\n\n`app/controllers/NotificationC.scala`\u306b\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\u3002\n\n```scala:app/controllers/NotificationC.scala\npackage controllers\n\nimport javax.inject.{Inject, Singleton}\n\nimport dao.NotificationDAO\nimport play.api.i18n.{I18nSupport, MessagesApi}\nimport play.api.mvc.{Action, Controller}\nimport play.api.libs.concurrent.Execution.Implicits.defaultContext\n\nimport scala.concurrent.Future\n\n@Singleton\nclass NotificationC @Inject() (val messagesApi: MessagesApi, dao: NotificationDAO) extends Controller with I18nSupport {\n\n  def getNotification(id: Long) = Action.async {\n    dao.byId(id).map(\n      option => option match {\n        case Some(notification) => Ok(views.html.notification(\"\", Forms.notificationForm.fill(NotificationForm(None, notification))))\n        case None => Redirect(\"/notify\")\n      }\n    )\n  }\n\n  def postNotification(id: Long) = Action.async { implicit request =>\n    Forms.notificationForm.bindFromRequest.fold(\n      formWithErrors => {\n        Future(BadRequest(views.html.notification(\"ERROR\", formWithErrors)))\n      },\n      formValue => {\n        formValue.command match {\n          case Some(\"update\") => dao.update(formValue.notification).map(_ =>\n            Redirect(\"/notify\").flashing(\"message\" -> (\"[\" + formValue.notification.subject + \"]\" + \"\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\"))\n          )\n          case Some(\"delete\") => dao.delete(formValue.notification.id.getOrElse(0)).map(_ =>\n            Redirect(\"/notify\").flashing(\"message\" -> (\"[\" + formValue.notification.subject + \"]\" + \"\u3092\u524a\u9664\u3057\u307e\u3057\u305f\u3002\"))\n          )\n          case _ => Future(Redirect(\"/notify\"))\n        }\n      }\n    )\n  }\n\n}\n```\n\nGET\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306f\u3001getNotification\u304c\u547c\u3070\u308c\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089id\u306b\u8a72\u5f53\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3001\u7de8\u96c6\u753b\u9762\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\nPOST\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306f\u3001postNotification\u304c\u547c\u3070\u308c\u3001\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\"command\"\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u308a\u3001\u66f4\u65b0\u51e6\u7406\u304b\u524a\u9664\u51e6\u7406\u3092\u884c\u3044\u3001\u767b\u9332\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\nCRUD\u306e\u601d\u60f3\u306b\u5f93\u3063\u3066\u3001GET\u306f\u8868\u793a\u306e\u307f\u3092\u3001POST\u3067\u4f5c\u6210\u3001\u66f4\u65b0\u3001\u524a\u9664\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u7de8\u96c6\u753b\u9762\u304b\u3089\u306ePOST\u306f\u66f4\u65b0\u3068\u524a\u9664\u304c\u3042\u308b\u305f\u3081\u3001\u300ccommand\u300d\u3092\u96a0\u3057\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u3057\u3066\u6301\u3061\u3001\u51e6\u7406\u3092\u632f\u308a\u5206\u3051\u3066\u3044\u307e\u3059\u3002\n\n# View\u306e\u4f5c\u6210\n\n\u307e\u305a\u306f\u5171\u901a\u753b\u9762\u3092`app/views/main.scala.html`\u306b\u3002\uff08bootstrap\u306e\u8a18\u8ff0\u3092\u5165\u308c\u305f\u3060\u3051\u3067\u3059\u3002\uff09\n\n```scala:app/views/main.scala.html\n@(title: String)(content: Html)\n\n<!DOCTYPE html>\n\n<html lang=\"jp\">\n<head>\n    <title>@title</title>\n\n    <!-- Latest compiled and minified CSS -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" integrity=\"sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7\" crossorigin=\"anonymous\">\n    <!-- Optional theme -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css\" integrity=\"sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r\" crossorigin=\"anonymous\">\n    <!-- Latest compiled and minified JavaScript -->\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\" integrity=\"sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS\" crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" media=\"screen\" href=\"@routes.Assets.versioned(\"stylesheets/main.css\")\">\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"@routes.Assets.versioned(\"images/favicon.png\")\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n@content\n</body>\n</html>\n```\n\n\u6b21\u306b\u767b\u9332\u753b\u9762\u3092`app/views/notifications.scala.html`\u306b\u3002\n\n```scala:app/views/notifications.scala.html\n@(message: String, notificationsSent: List[models.Notification], notificationsSentNotYet: List[models.Notification]\n  , myForm: Form[NotificationForm])(implicit messages: Messages)\n\n@main(\"\u767b\u9332\u753b\u9762\") {\n<div class=\"container\">\n<h1>\u767b\u9332\u753b\u9762</h1>\n<p>@message</p>\n<ul>\n    @for(notification <- notificationsSentNotYet) {\n    <li>\n        <a href=\"/notify/@notification.id\"> @notification.subject </a>\n    </li>\n    }\n</ul>\n<hr>\n<p>\n@helper.form(action=routes.NotifyC.postNotify) {\n    @(helper.inputText (\n        field = myForm(\"db.subject\"),\n        '_label -> \"\u4ef6\u540d\"\n    ))\n    @(helper.inputDate(\n        field = myForm(\"db.actionDate\"),\n        '_label -> \"\u65e5\u4ed8\"\n    ))\n    @helper.input(myForm(\"db.actionTime\"), '_label -> \"\u6642\u9593\") { (id, name, value, args) =>\n        <input type=\"time\" name=\"@name\" id=\"@id\" value=\"@value\" @toHtmlArgs(args)>\n    }\n    @(helper.select (\n        field = myForm(\"db.notifyBefore\"),\n        options = Seq(\"5\" -> \"5\u5206\u524d\", \"10\" -> \"10\u5206\u524d\", \"15\" -> \"15\u5206\u524d\", \"20\" -> \"20\u5206\u524d\"\n        , \"30\" -> \"30\u5206\u524d\", \"45\" -> \"45\u5206\u524d\", \"60\" -> \"1\u6642\u9593\u524d\"),\n        args = 'size -> 1,\n        '_label -> \"\u901a\u77e5\"\n    ))\n    @(helper.textarea (\n        field = myForm(\"db.summary\"),\n        '_label -> \"\u8aac\u660e\"\n    ))\n    <button>\u767b\u9332</button>\n}\n</p>\n<hr>\n<ul>\n    @for(notification <- notificationsSent) {\n    <li>\n        <a href=\"/notify/@notification.id\"> @notification.subject </a>\n    </li>\n    }\n</ul>\n</div>\n}\n```\n\n\u305d\u3057\u3066\u7de8\u96c6\u753b\u9762\u3092`app/views/notification.scala.html`\u306b\u3002\n\n```scala:app/views/notification.scala.html\n@(message: String, myForm: Form[NotificationForm])(implicit messages: Messages)\n\n@main(\"\u7de8\u96c6\u753b\u9762\") {\n<div class=\"container\">\n<h1>\u7de8\u96c6\u753b\u9762</h1>\n<p>@message</p>\n<p>\n@helper.form(action=routes.NotificationC.postNotification(myForm(\"db.id\").value.getOrElse(\"0\").toLong)) {\n    <input type=\"hidden\" name=\"command\" value=\"update\">\n    <input type=\"hidden\" name=\"db.id\" value=\"@myForm(\"db.id\").value\">\n    @(helper.inputText (\n        field = myForm(\"db.subject\"),\n        '_label -> \"\u4ef6\u540d\"\n    ))\n    @(helper.inputDate(\n        field = myForm(\"db.actionDate\"),\n        '_label -> \"\u65e5\u4ed8\"\n    ))\n    @helper.input(myForm(\"db.actionTime\"), '_label -> \"\u6642\u9593\") { (id, name, value, args) =>\n        <input type=\"time\" name=\"@name\" id=\"@id\" value=\"@value\" @toHtmlArgs(args)>\n    }\n    @(helper.select (\n        field = myForm(\"db.notifyBefore\"),\n        options = Seq(\"5\" -> \"5\u5206\u524d\", \"10\" -> \"10\u5206\u524d\", \"15\" -> \"15\u5206\u524d\", \"20\" -> \"20\u5206\u524d\"\n        , \"30\" -> \"30\u5206\u524d\", \"45\" -> \"45\u5206\u524d\", \"60\" -> \"1\u6642\u9593\u524d\"),\n        args = 'size -> 1,\n        '_label -> \"\u901a\u77e5\"\n    ))\n    @(helper.textarea (\n        field = myForm(\"db.summary\"),\n        '_label -> \"\u8aac\u660e\"\n    ))\n    <div>\n        <input type=\"submit\" value=\"\u66f4\u65b0\">\n        <input type=\"button\" value=\"\u524a\u9664\" onclick=\"if (confirm('\u524a\u9664\u3057\u307e\u3059\u304b?')) {this.form.command.value = 'delete';this.form.submit();}\">\n    </div>\n}\n</p>\n<hr>\n<p><a href=\"/notify\">HOME</a></p>\n</div>\n}\n```\n\n\u524a\u9664\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u969b\u306b\u3001\u96a0\u3057\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\"comannd\"\u3092\"delete\"\u306b\u3057\u3066POST\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6700\u5f8c\u306bCSS\u3067\u3059\u3002\n\n```css:public/stylesheets/main.css\nh1 {\n    background-color: #6666aa;\n    color: #ccccff;\n}\ninput#subject {\n    width: 280px;\n}\ntextarea#summary {\n    width: 280px;\n}\ndl {\n  margin-bottom: 5px !important;\n}\ndt,dd {\n  line-height: 1 !important;\n}\nul {\n  padding-left: 20px !important;\n}\n```\n\n# \u30bf\u30a4\u30de\u30fc\u306e\u4f5c\u6210\n\n\u901a\u77e5\u6642\u523b\u306b\u30e1\u30fc\u30eb\u9001\u4fe1\u3092\u884c\u3046\u305f\u3081\u30011\u5206\u9593\u9694\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u691c\u7d22\u3057\u3001\u8a72\u5f53\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u304c\u3042\u308b\u5834\u5408\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u66f4\u65b0\u3001\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u3001\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u306fActor\u304c\u62c5\u5f53\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30e1\u30fc\u30eb\u9001\u4fe1\u306fPlay\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bplay-mailer\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u3001\u307e\u305a\u306f\u4e0b\u8a18\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\uff11\uff0e`build.sbt`\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\n\n```scala:build.sbt\nlibraryDependencies += \"com.typesafe.play\" %% \"play-mailer\" % \"5.0.0-M1\"\n```\n\n\uff12\uff0e`conf/application.conf`\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\n\n```scala:conf/application.conf\nplay.mailer {\n  host = \"localhost\"\n  host = ${?MAIL_HOST}\n  port = 25\n  port = ${?MAIL_PORT}\n}\nnotify.mail {\n  from = \"NOTIFY SENDER <from@xxxx.xx>\"\n  from = ${?MAIL_FROM}\n  to = \"to@xxxx.xx\"\n  to = ${?MAIL_TO}\n}\n```\n\n\u30e1\u30fc\u30eb\u9001\u4fe1\u3092\u884c\u3046Actor\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```scala:app/actors/NotifyActor.scala\npackage actors\n\nimport dao.NotificationDAO\nimport akka.actor._\nimport play.api.libs.concurrent.Execution.Implicits.defaultContext\nimport play.api.libs.mailer.{MailerClient, Email}\nimport com.typesafe.config.ConfigFactory\n\nimport play.api.Logger\n\nobject NotifyActor {\n  def props(dao: NotificationDAO, mc: MailerClient) = Props(classOf[NotifyActor], dao, mc)\n}\n\nclass NotifyActor(dao: NotificationDAO, mc: MailerClient) extends Actor {\n\n  val config = ConfigFactory.load()\n  val mailFrom = config.getString(\"notify.mail.from\")\n  val mailTo = config.getString(\"notify.mail.to\")\n\n  def receive = {\n    case \"NOTIFY\" =>\n      Logger.debug((new java.util.Date).toString)\n      Logger.debug(\"Message(NOTIFY) received\")\n      dao.getSendList().map { notifications =>\n        Logger.debug(\"notifications.size -> \" + notifications.size)\n        for (notification <- notifications) {\n          Logger.debug(\"notification.id -> \" + notification.id)\n          val email = Email(\n            notification.subject,\n            mailFrom,\n            Seq(mailTo),\n            bodyText = Some(\"[\u4ef6\u540d]\" +\n              \"\\n\" +\n              notification.subject +\n              \"\\n\" +\n              \"[\u65e5\u4ed8]\" +\n              \"\\n\" +\n              notification.actionDate +\n              \"\\n\" +\n              \"[\u6642\u9593]\" +\n              \"\\n\" +\n              notification.actionTime +\n              \"\\n\" +\n              \"[\u901a\u77e5]\" +\n              \"\\n\" +\n              notification.notificationDate +\n              \"\\n\" +\n              \"[\u8aac\u660e]\" +\n              \"\\n\" +\n              notification.summary)\n          )\n          mc.send(email)\n          Logger.debug(\"Mail sent\")\n          dao.sent(notification.id.getOrElse(0))\n          Logger.debug(\"Model(notification) updated\")\n        }\n      }\n  }\n}\n```\n\nActor\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u30bf\u30a4\u30de\u30fc\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```scala:app/services/NotifyTimer.scala\npackage services\n\nimport dao.NotificationDAO\nimport actors.NotifyActor\n\nimport javax.inject.Inject\nimport javax.inject.Singleton\n\nimport java.util.Calendar\n\nimport akka.actor._\nimport scala.concurrent.duration._\nimport scala.concurrent.ExecutionContext.Implicits.global\n\nimport play.api.libs.mailer._\n\nimport play.api.Logger\n\n@Singleton\nclass NotifyTimer @Inject() (dao: NotificationDAO, system: ActorSystem, mc: MailerClient) {\n\n  Logger.info(\"start Actaor\")\n  val notifyActor = system.actorOf(NotifyActor.props(dao, mc), \"notify-actor\")\n  var cl = Calendar.getInstance\n  cl.set(Calendar.SECOND, 0)\n  cl.set(Calendar.MILLISECOND, 0)\n  cl.add(Calendar.MINUTE, 1)\n  system.scheduler.schedule(\n    (cl.getTimeInMillis - System.currentTimeMillis).milliseconds,\n    1.minutes,\n    notifyActor,\n    \"NOTIFY\"\n  )\n  Logger.info(\"Actor has started\")\n\n}\n```\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u30bf\u30a4\u30de\u30fc\u3092\u30b9\u30bf\u30fc\u30c8\u3059\u308b\u305f\u3081DI\u306e\u767b\u9332\u3092\u884c\u3044\u307e\u3059\u3002\n\n```scala:app/Module.scala\nimport com.google.inject.AbstractModule\n\nimport services.NotifyTimer\n\nclass Module extends AbstractModule {\n\n  override def configure() = {\n    bind(classOf[NotifyTimer]).asEagerSingleton()\n  }\n\n}\n```\n\n# \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\uff08URL\u30d1\u30bf\u30fc\u30f3\u304b\u3089\u30cf\u30f3\u30c9\u30e9\u30fc\u3078\u306e\u5bfe\u5fdc\u4ed8\u3051\uff09\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```scala:conf/routes\n# Routes\n# This file defines all application routes (Higher priority routes first)\n# ~~~~\n\n# Home page\nGET     /notify                     controllers.NotifyC.getNotify\nPOST    /notify                     controllers.NotifyC.postNotify\nGET     /notify/:id                 controllers.NotificationC.getNotification(id: Long)\nPOST    /notify/:id                 controllers.NotificationC.postNotification(id: Long)\n\n# Map static resources from the /public folder to the /assets URL path\nGET     /assets/*file               controllers.Assets.versioned(path=\"/public\", file: Asset)\n```\n\n# \u52d5\u4f5c\u78ba\u8a8d\n\n`$ activator run`\n\n`http://localhost:9000/notify`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n# keter\u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\n\n\u4eca\u56de\u306f\u3001Haskell\u306eYesod\u3068\u3044\u3046Web\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305fWeb\u30a2\u30d7\u30ea\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u969b\u306b\u304a\u4e16\u8a71\u306b\u306a\u3063\u305fKeter\u3092\u4f7f\u3063\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3059\u3002\n\nKeter\u306f\u3001\u3082\u3068\u3082\u3068\u306fYesod\u306e\u30c7\u30d7\u30ed\u30a4\u30c4\u30fc\u30eb\u3068\u3057\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u8d77\u52d5\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u74b0\u5883\u5909\u6570\u3067\u6307\u5b9a\u3067\u304d\u308bWeb\u30a2\u30d7\u30ea\u3067\u3042\u308c\u3070\u3001\u7279\u306b\u8a00\u8a9e\u3092\u554f\u308f\u305a\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\nKeter\u306f\u3001\u30db\u30b9\u30c8\u540d\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\u306b\u5bfe\u3057\u3066\u3001\u7279\u5b9a\u306eWeb\u30a2\u30d7\u30ea\u306b\u30d5\u30a9\u30ef\u30fc\u30c9\u3059\u308b\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306e\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4f8b\u3048\u3070\u3001\u540c\u4e00\u30b5\u30fc\u30d0\u4e0a\u3067\u3001`http://play.hostname.xxx/notify`\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092Play\u306b\u3001`http://yesod.hostname.xxx/notify`\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092Yesod\u306b\u632f\u308a\u5206\u3051\u308b\u3068\u3044\u3063\u305f\u4f7f\u3044\u65b9\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u4ed6\u306e\u6a5f\u80fd\u3068\u3057\u3066\u306f\u3001Web\u30a2\u30d7\u30ea\u306e\u81ea\u52d5\u8d77\u52d5\u3001\u30d7\u30ed\u30bb\u30b9\u76e3\u8996\u3001\u30ea\u30d3\u30eb\u30c9\u306b\u3088\u308b\u518d\u8d77\u52d5\u306a\u3069\u306e\u6a5f\u80fd\u3082\u3064\u3044\u3066\u3044\u307e\u3059\u3002\n\n# keter\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\nketer\u306fHaskell\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u307e\u305a\u306fHaskell\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306bstack\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n[\u516c\u5f0f\u30b5\u30a4\u30c8](http://docs.haskellstack.org/en/stable/README/)\u3092\u53c2\u8003\u306b\u4f7f\u7528\u3059\u308bOS\u306b\u5408\u308f\u305b\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6b21\u306b\u3001Haskell\u306eGHC\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u3068\u3082\u306bketer\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n$ stack install keter --install-ghc\n```\n\n\u4f5c\u6210\u3055\u308c\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb`keter`\u3092Kona Linux\u3084Amazon EC2\u200e\u306e`/usr/bin/`\u7b49\u306b\u653e\u308a\u8fbc\u307f\u3001\u5b9f\u884c\u6a29\u9650\u3092\u4e0e\u3048\u307e\u3059\u3002\n\n# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\n\u307e\u305a\u306factivator\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n$ activator dist\n```\n\n`target/universal/`\u306b\u4f5c\u6210\u3055\u308c\u305f`notify-1.0-SNAPSHOT.zip`\u3092\u89e3\u51cd\u3057\u3066\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u5185\u306b`config`\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eketer\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092`keter.yml`\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```[\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0]/config/keter.yml\nstanzas:\n  - type: webapp\n    exec: ../notify-1.0-SNAPSHOT/bin/notify\n    args: []\n    hosts:\n      - localhost\n      - aws.hostname.xxx\n    requires-secure: false\n```\n\n`notify-1.0-SNAPSHOT/conf/application.conf`\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```scala:[\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0]/notify-1.0-SNAPSHOT/conf/application.conf\nplay.crypto.secret = \"mypassword\"\n\nplay.evolutions {\n  # You can disable evolutions for a specific datasource if necessary\n  db.default.enabled = false\n}\n```\n\nketer\u5074\u3067\u306f\u30d5\u30a9\u30ef\u30fc\u30c9\u3059\u308b\u30dd\u30fc\u30c8\u3092\u74b0\u5883\u5909\u6570\u300cPORT\u300d\u3067\u6307\u5b9a\u3057\u3066\u304f\u308b\u306e\u3067\u3001`notify-1.0-SNAPSHOT/bin/notify`\u306e\u4e0b\u90e8\u306b\u3042\u308b\u300cMain script\u300d\u5185\u3067\u8d77\u52d5\u6642\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```scala:[\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0]/notify-1.0-SNAPSHOT/bin/notify\naddJava \"-Dhttp.port=$PORT\"\naddJava \"-Dplay.crypto.secret=mypassword\"\n```\n\n\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u5185\u306f\u4e0b\u8a18\u306e\u69cb\u6210\u3068\u306a\u308a\u307e\u3059\u3002\n\n[\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0]\n\uff0d\u3000config\n\u3000\u3000\uff0d\u3000keter.yml\n\uff0d\u3000notify-1.0-SNAPSHOT\n\u3000\u3000\uff0d\u3000bin\n\u3000\u3000\uff0d\u3000conf\n\u3000\u3000\uff0d\u3000lib\n\u3000\u3000\uff0d\u3000share\n\n\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u5185\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eketer\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n$ tar czf ../notify.keter *\n```\n\n# keter\u306e\u8a2d\u5b9a\n\nKona Linux\u3084Amazon EC2\u200e\u306b\u4e0b\u8a18\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```\n$ sudo mkdir -p /opt/keter/etc\n$ sudo mkdir -p /opt/keter/incoming\n$ sudo mkdir -p /opt/keter/db\n$ sudo chown $USER.$USER /opt/keter/etc\n$ sudo chown $USER.$USER /opt/keter/incoming\n$ sudo chown $USER.$USER /opt/keter/db\n```\n\n\u4f5c\u6210\u3057\u305f`notify.keter`\u3092Kona Linux\u3084Amazon EC2\u200e\u306e`/opt/keter/incoming`\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n\u52d5\u4f5c\u78ba\u8a8d\u6642\u306b\u81ea\u52d5\u3067\u4f5c\u6210\u3055\u308c\u305f`notify.mv.db`\u3092Kona Linux\u3084Amazon EC2\u200e\u306e`/opt/keter/db`\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n\u6b21\u306bketer\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```/opt/keter/etc/keter-config.yaml\nroot: /opt/keter\n\nlisteners:\n  - host: \"*4\"\n    port: 3000\n\nsetuid: ubuntu\n\nenv:\n  H2_DATABASE: jdbc:h2:/opt/keter/db/notify\n  MAIL_HOST: localhost\n  MAIL_PORT: \"25\"\n  MAIL_FROM: NOTIFY SENDER <from@xxxx.xx>\n  MAIL_TO: to@mydomain.xxx\n```\n\n\u30c7\u30fc\u30e2\u30f3\u3068\u3057\u3066\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u203bUbuntu 16.04\u306e\u5834\u5408\n\n```/etc/systemd/system/keter.service\n[Unit]\nDescription=Keter Deployment Handler\nAfter=local-fs.target network.target\n\n[Service]\nExecStart=/usr/bin/keter /opt/keter/etc/keter-config.yaml\n\n[Install]\nWantedBy=multi-user.target\n```\n\n\u203bUbuntu 14.04\u306e\u5834\u5408\n\n```/etc/init/keter.conf\ndescription \"Keter Deployment Handler\"\n\nstart on (net-device-up and local-filesystems and runlevel [2345])\nstop on runlevel [016]\nrespawn\n\nconsole output\n\nexec keter /opt/keter/etc/keter-config.yaml\n```\n\n\u8d77\u52d5\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u203bUbuntu 16.04\u306e\u5834\u5408\n`sudo systemctl start keter`\n\n\u203bUbuntu 14.04\u306e\u5834\u5408\n`sudo start keter`\n\n`http://aws.hostname.xxx:3000/notify`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u3055\u3044\u3054\u306b\n\n\u99c6\u3051\u8db3\u3067activator\u306b\u3088\u308b\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u304b\u3089keter\u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u307e\u3067\u898b\u3066\u304d\u307e\u3057\u305f\u3002\n\nYesod\u3067\u306e\u5b9f\u88c5\u3092\u631f\u3093\u3060\u3053\u3068\u3067\u3001Play2.4\u3067\u4f5c\u6210\u3057\u305f\u6642\u3088\u308a\u3082\u3001\u305d\u308c\u305e\u308c\u306e\u8cac\u52d9\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u5b9f\u88c5\u306b\u306a\u3063\u305f\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\n\nDI\u3067\u30bf\u30a4\u30de\u30fc\u3092\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3053\u3068\u3067\u3001Controller\u3068Actor\u306e\u4f9d\u5b58\u3082\u306a\u304f\u306a\u308a\u3001\u307e\u305f\u3001Yesod\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u53c2\u8003\u306b\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u5206\u3051\u308b\u3053\u3068\u3067\u3001\u30e1\u30bf\u30dc\u6c17\u5473\u3060\u3063\u305fController\u304c\u3059\u3063\u304d\u308a\u3068\u3057\u307e\u3057\u305f\u3002\n\nPlay\u3060\u3051\u3067\u306f\u6c7a\u3057\u3066\u63a5\u70b9\u306e\u306a\u3044keter\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3082\u306a\u304b\u306a\u304b\u9762\u767d\u304b\u3063\u305f\u3067\u3059\u3002\n\nketer\u306b\u306f\u30ea\u30d3\u30eb\u30c9\u306b\u3088\u308b\u518d\u8d77\u52d5\u306e\u6a5f\u80fd\u304c\u3042\u308b\u306e\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u3067\u3082\u3001\u518d\u5ea6`notify.keter`\u3092\u4f5c\u6210\u3057\u3066`/opt/keter/incoming`\u306b\u653e\u308a\u8fbc\u3080\u3060\u3051\u3067\u3001\u81ea\u52d5\u7684\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u518d\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u4fbf\u5229\u3060\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n", "tags": ["Scala", "PlayFramework", "Play", "Keter"]}