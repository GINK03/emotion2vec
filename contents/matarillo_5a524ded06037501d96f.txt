{"tags": ["\u3069\u3046\u66f8\u304f", "yhpg", "F#"], "context": " More than 1 year has passed since last update.\u554f\u984c\u306f\u3053\u3061\u3089\u3002\n\u30b5\u30a4\u30b3\u30ed6\u9762 [z;y;-z;-y;x;-x] \u3092\u307e\u308b\u3063\u3068\u56de\u8ee2\u3055\u305b\u308b\u65b9\u304c\u7c21\u5358\u3060\u3063\u305f\u3002\n\u6570\u5b66\u3063\u307d\u304f\u3059\u308b\u306a\u30896\u9762\u306e\u8868\u73fe\u306f [x;y;z;-x;-y;-z] \u3068\u304b [x;-x;y;-y;z;-z] \u306e\u9806\u5e8f\u306e\u307b\u3046\u304c\u304d\u308c\u3044\u304b\u306a\uff1f\n\ndoukaku12-2.fs\nlet roll xs d =\n  match (d,xs) with\n  | ('N', [a;b;c;d;e;f]) -> [d;a;b;c;e;f]\n  | ('S', [a;b;c;d;e;f]) -> [b;c;d;a;e;f]\n  | ('E', [a;b;c;d;e;f]) -> [f;b;e;d;a;c]\n  | ('W', [a;b;c;d;e;f]) -> [e;b;f;d;c;a]\n  | _                    -> failwith \"Invalid Input\"\n\nlet solve (s:string) =\n  s.ToCharArray()\n  |> Array.scan roll ['1';'2';'6';'5';'4';'3']\n  |> Array.map List.head\n  |> fun x -> new string(x)\n\n(* for test *)\n\ntype TestResult = Success | Failure\n\nlet test target expected =\n  let actual = solve target\n  printfn \"%A\" (if expected = actual then Success else Failure)\n\n[<EntryPoint>]\nlet main args =\n  test \"NNESWWS\" \"15635624\"\n  test \"EEEE\" \"13641\"\n  test \"WWWW\" \"14631\"\n  test \"SSSS\" \"12651\"\n  test \"NNNN\" \"15621\"\n  test \"EENN\" \"13651\"\n  test \"WWNN\" \"14651\"\n  test \"SSNN\" \"12621\"\n  test \"NENNN\" \"153641\"\n  test \"NWNNN\" \"154631\"\n  test \"SWWWSNEEEN\" \"12453635421\"\n  test \"SENWSWSNSWE\" \"123123656545\"\n  test \"SSSWNNNE\" \"126546315\"\n  test \"SWNWSSSWWE\" \"12415423646\"\n  test \"ENNWWS\" \"1354135\"\n  test \"ESWNNW\" \"1321365\"\n  test \"NWSSE\" \"154135\"\n  test \"SWNWEWSEEN\" \"12415154135\"\n  test \"EWNWEEEEWN\" \"13154532426\"\n  test \"WNEWEWWWSNW\" \"145151562421\"\n  test \"NNEE\" \"15631\"\n  test \"EEEEWNWSW\" \"1364145642\"\n  test \"SENNWWES\" \"123142321\"\n  test \"SWWWSNSNESWW\" \"1245363635631\"\n  test \"WESSENSE\" \"141263231\"\n  test \"SWNSSESESSS\" \"124146231562\"\n  test \"ENS\" \"1353\"\n  test \"WNN\" \"1453\"\n  test \"SSEENEEEN\" \"1263124536\"\n  test \"NWSNNNW\" \"15414632\"\n  test \"ESSSSSWW\" \"132453215\"\n  test \"ESE\" \"1326\"\n  test \"SNWNWWNSSSS\" \"121456232453\"\n  test \"SWEESEN\" \"12423653\"\n  test \"NEEWNSSWWW\" \"15323631562\"\n  test \"WSEW\" \"14212\"\n  test \"SWSNNNSNWE\" \"12464131353\"\n  test \"ENWEWSEEW\" \"1351513545\"\n  test \"WSEWN\" \"142124\"\n  test \"EWNEESEWE\" \"1315321414\"\n  test \"NESEEN\" \"1531263\"\n  test \"WSW\" \"1426\"\n  test \"ENEWE\" \"135656\"\n  0\n\n\n[\u554f\u984c\u306f\u3053\u3061\u3089\u3002](http://qiita.com/Nabetani/items/f3cca410428f90333e28)\n\n\u30b5\u30a4\u30b3\u30ed6\u9762 [z;y;-z;-y;x;-x] \u3092\u307e\u308b\u3063\u3068\u56de\u8ee2\u3055\u305b\u308b\u65b9\u304c\u7c21\u5358\u3060\u3063\u305f\u3002\n\u6570\u5b66\u3063\u307d\u304f\u3059\u308b\u306a\u30896\u9762\u306e\u8868\u73fe\u306f [x;y;z;-x;-y;-z] \u3068\u304b [x;-x;y;-y;z;-z] \u306e\u9806\u5e8f\u306e\u307b\u3046\u304c\u304d\u308c\u3044\u304b\u306a\uff1f\n\n```fsharp:doukaku12-2.fs\nlet roll xs d =\n  match (d,xs) with\n  | ('N', [a;b;c;d;e;f]) -> [d;a;b;c;e;f]\n  | ('S', [a;b;c;d;e;f]) -> [b;c;d;a;e;f]\n  | ('E', [a;b;c;d;e;f]) -> [f;b;e;d;a;c]\n  | ('W', [a;b;c;d;e;f]) -> [e;b;f;d;c;a]\n  | _                    -> failwith \"Invalid Input\"\n\nlet solve (s:string) =\n  s.ToCharArray()\n  |> Array.scan roll ['1';'2';'6';'5';'4';'3']\n  |> Array.map List.head\n  |> fun x -> new string(x)\n\n(* for test *)\n\ntype TestResult = Success | Failure\n\nlet test target expected =\n  let actual = solve target\n  printfn \"%A\" (if expected = actual then Success else Failure)\n\n[<EntryPoint>]\nlet main args =\n  test \"NNESWWS\" \"15635624\"\n  test \"EEEE\" \"13641\"\n  test \"WWWW\" \"14631\"\n  test \"SSSS\" \"12651\"\n  test \"NNNN\" \"15621\"\n  test \"EENN\" \"13651\"\n  test \"WWNN\" \"14651\"\n  test \"SSNN\" \"12621\"\n  test \"NENNN\" \"153641\"\n  test \"NWNNN\" \"154631\"\n  test \"SWWWSNEEEN\" \"12453635421\"\n  test \"SENWSWSNSWE\" \"123123656545\"\n  test \"SSSWNNNE\" \"126546315\"\n  test \"SWNWSSSWWE\" \"12415423646\"\n  test \"ENNWWS\" \"1354135\"\n  test \"ESWNNW\" \"1321365\"\n  test \"NWSSE\" \"154135\"\n  test \"SWNWEWSEEN\" \"12415154135\"\n  test \"EWNWEEEEWN\" \"13154532426\"\n  test \"WNEWEWWWSNW\" \"145151562421\"\n  test \"NNEE\" \"15631\"\n  test \"EEEEWNWSW\" \"1364145642\"\n  test \"SENNWWES\" \"123142321\"\n  test \"SWWWSNSNESWW\" \"1245363635631\"\n  test \"WESSENSE\" \"141263231\"\n  test \"SWNSSESESSS\" \"124146231562\"\n  test \"ENS\" \"1353\"\n  test \"WNN\" \"1453\"\n  test \"SSEENEEEN\" \"1263124536\"\n  test \"NWSNNNW\" \"15414632\"\n  test \"ESSSSSWW\" \"132453215\"\n  test \"ESE\" \"1326\"\n  test \"SNWNWWNSSSS\" \"121456232453\"\n  test \"SWEESEN\" \"12423653\"\n  test \"NEEWNSSWWW\" \"15323631562\"\n  test \"WSEW\" \"14212\"\n  test \"SWSNNNSNWE\" \"12464131353\"\n  test \"ENWEWSEEW\" \"1351513545\"\n  test \"WSEWN\" \"142124\"\n  test \"EWNEESEWE\" \"1315321414\"\n  test \"NESEEN\" \"1531263\"\n  test \"WSW\" \"1426\"\n  test \"ENEWE\" \"135656\"\n  0\n```"}