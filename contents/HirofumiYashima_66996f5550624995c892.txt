{"context": "\nNG\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\uff08 \u914d\u5217\u8981\u7d20 \u30ea\u30c6\u30e9\u30eb\u30d9\u30bf\u6253\u3061 \u306b\u3088\u308b \u4e8b\u524d\u5b9a\u7fa9 \uff09\n\n\nPython 3\nstrip_words = [\"\u3066\", \"\u306b\", \"\u3092\", \"\u306f\", \"\u304c\", \"\u3078\", \"\u3002\", \".\", \"\u3001\", \"?\", \"!\", \"\u3067\u3059\", \"\u307e\u3059\", \"\u3068\", \"\u306e\", \"\u304b\"]\n\n\n\nPython\u30bb\u30c3\u30b7\u30e7\u30f3\u5185 \u3067 \u3059\u3067\u306b list\u578b\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u304c \u5f97\u3089\u308c\u3066\u3044\u308b\u5834\u5408\n\n\nPython 3\n>> for elem in data_list:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     if filter_boolean:\n...             output_list_final.append(elem)\n\n\n\n\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb \u3092 \u8aad\u307f\u8fbc\u3093\u3067 \u51e6\u7406 \u3092 \u884c\u3046 \u5834\u5408\n\n\u203b \u4f46\u3057\u3001\u30d5\u30a1\u30a4\u30eb \u306e \u5404\u884c \u306b\u306f\u3001\u5404\u30ab\u30e9\u30e0 \u304c \u534a\u89d2\u30b9\u30da\u30fc\u30b9\uff11\u6587\u5b57 \u533a\u5207\u308a \u3067 \u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3053\u3068 \u3092 \u524d\u63d0 \u3068 \u3059\u308b\u3002\n\nPython 3\n>> import codecs\n>>\n>> with codecs.open(\"data_file.txt\", \"r\", \"utf-8\") as f:\n>>     data_list = f.readlines()\n>>\n>>\n>> for elem in data_list:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     if filter_boolean:\n...             output_list_final.append(elem)\n\n\n\n\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\n\n\nPython 3\n>>> with codecs.open(\"cleaned_data.txt\", \"w\", \"utf-8\") as g:\n...     for line in final_output:\n...             g.write(line + \"\\n\")\n... \n>>> \n>>> quit()\n\n\n\n\uff08 \u4f8b \uff09\n\n\n\u5bfe\u8c61\u30c7\u30fc\u30bf\u5f62\u5f0f\n\n\u4ee5\u4e0b \u306e \uff13\u5217\u5f62\u5f0f \u306e \u30c7\u30fc\u30bf \u3092 \u8981\u7d20 \u306b \u6301\u3064 \u914d\u5217\uff08\u30ea\u30b9\u30c8\uff09\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u5bfe\u3057\u3066\u3001  \n\n\u300c\u5358\u8a9e\uff11\uff08\u30b9\u30da\u30fc\u30b9\uff09\u5358\u8a9e\uff12\uff08\u30b9\u30da\u30fc\u30b9\uff09\u4e21\u5358\u8a9e\u306e\u30b3\u30fc\u30d1\u30b9\u5185 \u5171\u8d77\u56de\u6570\u5024\u300d\n\n\u300c\u5358\u8a9e\uff11\u300d\u3068\u300c\u5358\u8a9e\uff12\u300d\u306e \u5c11\u306a\u304f\u3068\u3082\u4e00\u65b9 \u306b\u3001\u3042\u3089\u304b\u3058\u3081\u300cNG\u5358\u8a9e\u30ea\u30b9\u30c8\u300d\u306b\u3055\u308c\u305f\u5358\u8a9e \u304c \u542b\u307e\u308c\u308b\u5834\u5408\u3001\u305d\u306e\u30c7\u30fc\u30bf \u3092 \u30ea\u30b9\u30c8 \u304b\u3089 \u53d6\u308a\u9664\u304f\u51e6\u7406 \u3092 \u884c\u3044\u307e\u3059\u3002\n\nNG\u5358\u8a9e\u30ea\u30b9\u30c8\n\n\nstrip_words = [\"\u3066\", \"\u306b\", \"\u3092\", \"\u306f\", \"\u304c\", \"\u3078\", \"\u3002\", \".\", \"\u3001\", \"?\", \"!\", \"\u3067\u3059\", \"\u307e\u3059\", \"\u3068\", \"\u306e\", \"\u304b\"] \n\n\n\u5358\u8a9e\u30da\u30a2 \u306e \u7247\u65b9 \u3082\u3057\u304f\u306f \u4e21\u65b9 \u304c\u3001\u300c\u3066\u300d\u30fb\u300c\u306b\u300d\u30fb\u300c\u3092\u300d\u30fb\u300c\u306f\u300d\uff08\u52a9\u8a5e\uff09 \u3068 \u53e5\u8aad\u70b9 \u306a\u3069\u3001\u5358\u8a9e\u30da\u30a2 \u306e \u30b3\u30fc\u30d1\u30b9\u5185 \u5171\u8d77\u56de\u6570 \u3092 \u30ab\u30a6\u30f3\u30c8\u3059\u308b\u610f\u5473 \u304c \u8584\u3044 \u3082\u306e \u3092 \u5171\u8d77\u983b\u5ea6\u7d71\u8a08\u8868 \u304b\u3089 \u53d6\u308a\u9664\u304f\n\"\u5358\u8a9eA \u5358\u8a9eB \u5171\u8d77\u56de\u6570\" \u306e\u5404\u884c\u306e\u3046\u3061\u3001\u5358\u8a9eA, \u5358\u8a9eB \u306e \u3044\u305a\u308c\u304b\u4e00\u65b9 \u3082\u3057\u304f\u306f \u4e21\u65b9 \u306b\u3001strip_words\u30ea\u30b9\u30c8\u306b\u5217\u6319\u3055\u308c\u3066\u3044\u308b\u5358\u8a9e\u306e\u3069\u308c\u304b\uff11\u3064\u3067\u3082\u4e00\u81f4\u3059\u308b\u5358\u8a9e\u304c\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u884c\u3092\u524a\u9664\u3059\u308b\n\n\n\uff08 \u4f8b \uff09\n\n1. NG\u5358\u8a9e \u30c7\u30fc\u30bf \u9664\u53bb\u524d\n\nPython 3\n>>> pprint(cleaned_output_list_3[0:10])\n['\u3001 \u79df\u7a0e 2',\n '993 . 2',\n '\u305f \u3002 260',\n '\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4',\n '\u8cc3\u91d1 \u306e 6',\n '\u88ab\u4fdd\u8b77\u8005 \u7b49 4',\n '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2',\n '\u53ef \u80fd 2',\n '. 96 8',\n '6 147 2']\n>>> \n\n\n2. \u30c7\u30fc\u30bf\u9664\u53bb\u5f8c\n\nPython 3\n>>> pprint(output_list_final)\n['\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4', '\u88ab\u4fdd\u8b77\u8005 \u7b49 4', '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2', '\u53ef \u80fd 2', '6 147 2']\n>>> \n\n\n\n\n\u3010 \u5b9f\u884c\u30b3\u30fc\u30c9 \u3011\n\n\n \u4ee5\u4e0b\u306eis_containing_ng_word_filter\u304cTrue\u306e\u6642\u3001NG\u5358\u8a9e\u3092\u542b\u3080\u306e\u3067\u3001not\u6f14\u7b97\u5b50 \u3067 \u771f\u507d\u53cd\u8ee2\u3055\u305b\u308c\u3070\u826f\u3044 \n\n\nPython 3\nstrip_words = [\"\u3066\", \"\u306b\", \"\u3092\", \"\u306f\", \"\u304c\", \"\u3078\", \"\u3002\", \".\", \"\u3001\", \"?\", \"!\", \"\u3067\u3059\", \"\u307e\u3059\", \"\u3068\", \"\u306e\", \"\u304b\"]\n\n>>> for elem in cleaned_output_list_3[0:10]:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     print(is_containing_ng_word_filter)\n... \nTrue\nTrue\nTrue\nFalse\nTrue\nFalse\nFalse\nFalse\nTrue\nFalse\n>>> \n\n\n\n\u771f\u507d\u53cd\u8ee2\n\n\nPython 3\n>>> for elem in cleaned_output_list_3[0:10]:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     print(filter_boolean)\n... \nFalse\nFalse\nFalse\nTrue\nFalse\nTrue\nTrue\nTrue\nFalse\nTrue\n>>> \n\n\n\nNG\u30ef\u30fc\u30c9 \u3092 \u542b\u3080\u884c \u306f \u53d6\u308a\u9664\u304b\u308c\u305f\u3002\n\n\nPython 3\n>>> output_list_final = []\n>>> \n>>> for elem in cleaned_output_list_3[0:10]:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     if filter_boolean:\n...             output_list_final.append(elem)\n... \n>>> \n>>> pprint(output_list_final)\n['\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4', '\u88ab\u4fdd\u8b77\u8005 \u7b49 4', '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2', '\u53ef \u80fd 2', '6 147 2']\n>>> \n\n\n\n\u4ee5\u4e0b\u306f\u3001filter \u306b \u304b\u3051\u308b\u524d \u306e NG\u5358\u8a9e \u3092 \u542b\u3080 \u884c \u304c \u6df7\u5728\u3057\u3066\u3044\u305f \u30c7\u30fc\u30bf\n\n\nPython 3\n>>> pprint(cleaned_output_list_3[0:10])\n['\u3001 \u79df\u7a0e 2',\n '993 . 2',\n '\u305f \u3002 260',\n '\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4',\n '\u8cc3\u91d1 \u306e 6',\n '\u88ab\u4fdd\u8b77\u8005 \u7b49 4',\n '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2',\n '\u53ef \u80fd 2',\n '. 96 8',\n '6 147 2']\n>>> \n\n\n\nPython 3\n>>> final_output = []\n>>> \n>>> for elem in cleaned_output_list_3:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     if filter_boolean:\n...             final_output.append(elem)\n... \n>>> \n>>> len(final_output)\n23580\n>>> \n>>> pprint(final_output[0:50])\n['\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4',\n '\u88ab\u4fdd\u8b77\u8005 \u7b49 4',\n '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2',\n '\u53ef \u80fd 2',\n '6 147 2',\n '2013\u5e74 \u4ee5\u964d 3',\n '68 4 2',\n 'u3000 \u4fdd\u80b2\u6240 2',\n '1991 \u2212 2',\n '2000\u5e74\u4ee3 \u524d\u534a 2',\n '\u8ee2\u8077 \u8005 14',\n '\u30ed\u30fc\u30ea\u30f3\u30b0 \u63a8\u8a08 6',\n '8 1965 6',\n '\u300d \u306b\u304a\u3044\u3066 3',\n 'Mt \uff0d 4',\n '\u5e7c \u4fdd 4',\n '40 5 2',\n '\u5148\u884c\u304d \u306b\u3064\u3044\u3066 4',\n '0 \u7b2c 4',\n '\u304b\u3089 77 3',\n '\u7269 \u4e2d\u5fc3 6',\n '83 84 2',\n '\u501f\u5165 \u3084 2',\n '\u304b\u3089 \u7740\u5de5 2',\n '\u3044\u308b \u9762 2',\n '1989 87 2',\n '\u4ee5\u4e0b \u3067 24',\n '132 \u4ed8\u56f3 2',\n '\u4e16\u5e2f \u305d\u308c\u305e\u308c 2',\n '000 14 2',\n '\u672b \u6b8b\u9ad8 4',\n '\u5185\u9700 \u95a2\u9023\u4f01\u696d 2',\n '\u3067\u304d \u306a\u3044 3',\n '5 \uff08 2',\n '\u7e70\u8d8a \u6b20\u640d 23',\n '\u300c \u751f\u9bae\u98df\u54c1 9',\n '5 20 2',\n '\u30fb 20 2',\n '12 \u5faa\u74b0 6',\n '- 3 14',\n '\u2019 s 2',\n '\u5f53 \u91d1 2',\n '\u305f \u3082\u306e 4',\n '1 \u56f3 68',\n '\u96c7\u7528\u8005 \u6bd4\u7387 2',\n '\uff09 \u6625\u5b63 2',\n '\u79fb\u8ee2 \u4ee5\u5916 2',\n '\u2212 \u652f\u6255\u5229\u606f 2',\n '2 2003 6',\n '\u4e88\u60f3 \u6210\u9577\u7387 2']\n>>> \n>>> pprint(final_output[-50:])\n['\u3060 \u5f8c 6',\n '\u69d8\u3005 \u3067 2',\n '0 100 4',\n '\uff08 \u65b0\u8eca 2',\n '\u4e2d \u304b\u3089 2',\n '15 \uff0d 2',\n '\u907f\u96e3 \u751f\u6d3b 2',\n '\uff09 \u5973\u6027 3',\n 'x0c \u6211\u304c\u56fd 2',\n '\uff08 \u6700\u4f4e 2',\n '\u30b3\u30fc\u30dd\u30ec\u30fc\u30c8\u30ac\u30d0\u30ca\u30f3\u30b9\u30fb\u30b3\u30fc\u30c9 \u300d 8',\n '\u70b9 \u306b\u3064\u3044\u3066 8',\n '\u56fd\u5eab \u7d0d\u4ed8 4',\n '200 1 2',\n '\uff0d \u8d85\u9ad8\u9f62\u793e\u4f1a 2',\n '\uff0d v2 2',\n '\u306a\u3069 \u6211\u304c\u56fd 2',\n '\u3051 \u308c 2',\n '7 1967 4',\n '529 406 2',\n '5 \u2011 2',\n '\u5e74\u5831 \u300d 8',\n '\u03b2 0 2',\n '366 5 2',\n '\u751f\u307e\u308c \u306b\u304f\u3044 4',\n '\u591a\u3044 \u3053\u3068 2',\n '\u8f38\u5165\u56fd \u3067\u3042\u308b 2',\n '\u5f53\u8a72 \u533a\u5206 2',\n '\u30aa \u30fb 2',\n '\u533a\u5206 28 2',\n '\u7d66\u4ed8 \uff08 2',\n '16 18 7',\n '\u305d\u306e\u4ed6 \u6b73\u51fa 2',\n '\u300d \u3053\u3068 2',\n '\uff09 \u6b63\u898f\u96c7\u7528\u8005 2',\n '\u53ca\u3073 \u8cbf\u6613 2',\n 'OUT \u300d 8',\n '\u3068\u3044\u3046 \u66dc\u65e5 2',\n '\u307e\u305f\u306f \u5f93\u696d\u54e1 2',\n '86 111 2',\n '121 \uff0d 2',\n '\u30ea\u30b9\u30af \u8981\u56e0 14',\n '\u5148\u884c\u7814\u7a76 \uff08 2',\n '3 \u7bc0 29',\n '\u7d42\u8eab\u96c7\u7528 \u3068\u3044\u3063\u305f 2',\n '\u7814\u7a76\u958b\u767a \u8cbb 31',\n '\uff0e 1 4',\n '\u30c9\u30eb 1955 2',\n '794 13 2',\n '1998 14 2']\n>>> \n\n\n\n\uff08 \u53c2\u8003 \uff09 any \u3068 all \u306e \u6319\u52d5\n\n\n\nPython 3\n>>> any(\"1\" == a for a in [\"1\", \"2\", \"3\"])\nTrue\n>>> \n>>> all(\"1\" == a for a in [\"1\", \"2\", \"3\"])\nFalse\n>>> \n>>> any(not(\"1\" == a) for a in [\"1\", \"2\", \"3\"])\nTrue\n>>> \n>>> all(not(\"1\" == a) for a in [\"1\", \"2\", \"3\"])\nFalse\n>>> \n>>> not(any(\"1\" == a for a in [\"1\", \"2\", \"3\"]))\nFalse\n>>> \n\n\n\n\n\u3010 \u95a2\u9023\u8a18\u4e8b \u3011\n\n\nHirofumiYashima Qiita\u8a18\u4e8b\uff082016/09/21\uff09\u300c\u653f\u5e9c\u767d\u66f8\uff08\u5e73\u621028\u5e74\u5ea6\u7248 \u7d4c\u6e08\u8ca1\u653f\u767d\u66f8\uff09\u3092 bi-gram \u7d71\u8a08\u96c6\u8a08\u3057\u3066\u3001\u96a3\u63a5\u5358\u8a9e\u306e\u5171\u8d77\u56de\u6570 \u3092 \u5b9a\u91cf\u53ef\u8996\u5316\u3059\u308b\u300d\n\n\n* __NG\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\uff08 \u914d\u5217\u8981\u7d20 \u30ea\u30c6\u30e9\u30eb\u30d9\u30bf\u6253\u3061 \u306b\u3088\u308b \u4e8b\u524d\u5b9a\u7fa9 \uff09__\n \n```{Python:Python 3}\nstrip_words = [\"\u3066\", \"\u306b\", \"\u3092\", \"\u306f\", \"\u304c\", \"\u3078\", \"\u3002\", \".\", \"\u3001\", \"?\", \"!\", \"\u3067\u3059\", \"\u307e\u3059\", \"\u3068\", \"\u306e\", \"\u304b\"]\n```\n\n* __Python\u30bb\u30c3\u30b7\u30e7\u30f3\u5185 \u3067 \u3059\u3067\u306b list\u578b\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u304c \u5f97\u3089\u308c\u3066\u3044\u308b\u5834\u5408__\n\n```{Python:Python 3}\n>> for elem in data_list:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     if filter_boolean:\n...             output_list_final.append(elem)\n```\n\n* __\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb \u3092 \u8aad\u307f\u8fbc\u3093\u3067 \u51e6\u7406 \u3092 \u884c\u3046 \u5834\u5408__\n\n\u203b \u4f46\u3057\u3001\u30d5\u30a1\u30a4\u30eb \u306e \u5404\u884c \u306b\u306f\u3001\u5404\u30ab\u30e9\u30e0 \u304c \u534a\u89d2\u30b9\u30da\u30fc\u30b9\uff11\u6587\u5b57 \u533a\u5207\u308a \u3067 \u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3053\u3068 \u3092 \u524d\u63d0 \u3068 \u3059\u308b\u3002\n\n```{Python:Python 3}\n>> import codecs\n>>\n>> with codecs.open(\"data_file.txt\", \"r\", \"utf-8\") as f:\n>>     data_list = f.readlines()\n>>\n>>\n>> for elem in data_list:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     if filter_boolean:\n...             output_list_final.append(elem)\n```\n\n* __\u30d5\u30a1\u30a4\u30eb\u51fa\u529b__\n\n\n```{Python:Python 3}\n>>> with codecs.open(\"cleaned_data.txt\", \"w\", \"utf-8\") as g:\n...     for line in final_output:\n...             g.write(line + \"\\n\")\n... \n>>> \n>>> quit()\n```\n\n##__\uff08 \u4f8b \uff09__\n\n####__\u5bfe\u8c61\u30c7\u30fc\u30bf\u5f62\u5f0f__\n\n\u4ee5\u4e0b \u306e \uff13\u5217\u5f62\u5f0f \u306e \u30c7\u30fc\u30bf \u3092 \u8981\u7d20 \u306b \u6301\u3064 \u914d\u5217\uff08\u30ea\u30b9\u30c8\uff09\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u5bfe\u3057\u3066\u3001  \n\n>\u300c\u5358\u8a9e\uff11\uff08\u30b9\u30da\u30fc\u30b9\uff09\u5358\u8a9e\uff12\uff08\u30b9\u30da\u30fc\u30b9\uff09\u4e21\u5358\u8a9e\u306e\u30b3\u30fc\u30d1\u30b9\u5185 \u5171\u8d77\u56de\u6570\u5024\u300d\n\n\u300c\u5358\u8a9e\uff11\u300d\u3068\u300c\u5358\u8a9e\uff12\u300d\u306e \u5c11\u306a\u304f\u3068\u3082\u4e00\u65b9 \u306b\u3001\u3042\u3089\u304b\u3058\u3081\u300cNG\u5358\u8a9e\u30ea\u30b9\u30c8\u300d\u306b\u3055\u308c\u305f\u5358\u8a9e \u304c \u542b\u307e\u308c\u308b\u5834\u5408\u3001\u305d\u306e\u30c7\u30fc\u30bf \u3092 \u30ea\u30b9\u30c8 \u304b\u3089 \u53d6\u308a\u9664\u304f\u51e6\u7406 \u3092 \u884c\u3044\u307e\u3059\u3002\n\n\n####__NG\u5358\u8a9e\u30ea\u30b9\u30c8__\n\n> strip_words = [\"\u3066\", \"\u306b\", \"\u3092\", \"\u306f\", \"\u304c\", \"\u3078\", \"\u3002\", \".\", \"\u3001\", \"?\", \"!\", \"\u3067\u3059\", \"\u307e\u3059\", \"\u3068\", \"\u306e\", \"\u304b\"] \n\n* \u5358\u8a9e\u30da\u30a2 \u306e \u7247\u65b9 \u3082\u3057\u304f\u306f \u4e21\u65b9 \u304c\u3001\u300c\u3066\u300d\u30fb\u300c\u306b\u300d\u30fb\u300c\u3092\u300d\u30fb\u300c\u306f\u300d\uff08\u52a9\u8a5e\uff09 \u3068 \u53e5\u8aad\u70b9 \u306a\u3069\u3001\u5358\u8a9e\u30da\u30a2 \u306e \u30b3\u30fc\u30d1\u30b9\u5185 \u5171\u8d77\u56de\u6570 \u3092 \u30ab\u30a6\u30f3\u30c8\u3059\u308b\u610f\u5473 \u304c \u8584\u3044 \u3082\u306e \u3092 \u5171\u8d77\u983b\u5ea6\u7d71\u8a08\u8868 \u304b\u3089 \u53d6\u308a\u9664\u304f\n\n* \"\u5358\u8a9eA \u5358\u8a9eB \u5171\u8d77\u56de\u6570\" \u306e\u5404\u884c\u306e\u3046\u3061\u3001\u5358\u8a9eA, \u5358\u8a9eB \u306e \u3044\u305a\u308c\u304b\u4e00\u65b9 \u3082\u3057\u304f\u306f \u4e21\u65b9 \u306b\u3001strip_words\u30ea\u30b9\u30c8\u306b\u5217\u6319\u3055\u308c\u3066\u3044\u308b\u5358\u8a9e\u306e\u3069\u308c\u304b\uff11\u3064\u3067\u3082\u4e00\u81f4\u3059\u308b\u5358\u8a9e\u304c\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u884c\u3092\u524a\u9664\u3059\u308b\n\n####__\uff08 \u4f8b \uff09__\n\n__1. NG\u5358\u8a9e \u30c7\u30fc\u30bf \u9664\u53bb\u524d__\n\n```{Python:Python 3}\n>>> pprint(cleaned_output_list_3[0:10])\n['\u3001 \u79df\u7a0e 2',\n '993 . 2',\n '\u305f \u3002 260',\n '\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4',\n '\u8cc3\u91d1 \u306e 6',\n '\u88ab\u4fdd\u8b77\u8005 \u7b49 4',\n '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2',\n '\u53ef \u80fd 2',\n '. 96 8',\n '6 147 2']\n>>> \n```\n\n__2. \u30c7\u30fc\u30bf\u9664\u53bb\u5f8c__\n\n```{Python:Python 3}\n>>> pprint(output_list_final)\n['\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4', '\u88ab\u4fdd\u8b77\u8005 \u7b49 4', '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2', '\u53ef \u80fd 2', '6 147 2']\n>>> \n```\n\n___\n\n##__\u3010 \u5b9f\u884c\u30b3\u30fc\u30c9 \u3011__\n\n*  \u4ee5\u4e0b\u306eis_containing_ng_word_filter\u304cTrue\u306e\u6642\u3001NG\u5358\u8a9e\u3092\u542b\u3080\u306e\u3067\u3001not\u6f14\u7b97\u5b50 \u3067 \u771f\u507d\u53cd\u8ee2\u3055\u305b\u308c\u3070\u826f\u3044 \n\n```{Python:Python 3}\nstrip_words = [\"\u3066\", \"\u306b\", \"\u3092\", \"\u306f\", \"\u304c\", \"\u3078\", \"\u3002\", \".\", \"\u3001\", \"?\", \"!\", \"\u3067\u3059\", \"\u307e\u3059\", \"\u3068\", \"\u306e\", \"\u304b\"]\n\n>>> for elem in cleaned_output_list_3[0:10]:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     print(is_containing_ng_word_filter)\n... \nTrue\nTrue\nTrue\nFalse\nTrue\nFalse\nFalse\nFalse\nTrue\nFalse\n>>> \n```\n\n* \u771f\u507d\u53cd\u8ee2\n\n```{Python:Python 3}\n>>> for elem in cleaned_output_list_3[0:10]:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     print(filter_boolean)\n... \nFalse\nFalse\nFalse\nTrue\nFalse\nTrue\nTrue\nTrue\nFalse\nTrue\n>>> \n```\n\n* __NG\u30ef\u30fc\u30c9 \u3092 \u542b\u3080\u884c \u306f \u53d6\u308a\u9664\u304b\u308c\u305f\u3002__\n\n```{Python:Python 3}\n>>> output_list_final = []\n>>> \n>>> for elem in cleaned_output_list_3[0:10]:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     if filter_boolean:\n...             output_list_final.append(elem)\n... \n>>> \n>>> pprint(output_list_final)\n['\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4', '\u88ab\u4fdd\u8b77\u8005 \u7b49 4', '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2', '\u53ef \u80fd 2', '6 147 2']\n>>> \n```\n\n* __\u4ee5\u4e0b\u306f\u3001filter \u306b \u304b\u3051\u308b\u524d \u306e NG\u5358\u8a9e \u3092 \u542b\u3080 \u884c \u304c \u6df7\u5728\u3057\u3066\u3044\u305f \u30c7\u30fc\u30bf__\n\n```{Python:Python 3}\n>>> pprint(cleaned_output_list_3[0:10])\n['\u3001 \u79df\u7a0e 2',\n '993 . 2',\n '\u305f \u3002 260',\n '\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4',\n '\u8cc3\u91d1 \u306e 6',\n '\u88ab\u4fdd\u8b77\u8005 \u7b49 4',\n '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2',\n '\u53ef \u80fd 2',\n '. 96 8',\n '6 147 2']\n>>> \n```\n\n\n```{Python:Python 3}\n>>> final_output = []\n>>> \n>>> for elem in cleaned_output_list_3:\n...     elem_list = str(elem).split(\" \")\n...     is_containing_ng_word_filter = any([elem == ng_word for ng_word in strip_words for elem in elem_list])\n...     filter_boolean = not(is_containing_ng_word_filter)\n...     if filter_boolean:\n...             final_output.append(elem)\n... \n>>> \n>>> len(final_output)\n23580\n>>> \n>>> pprint(final_output[0:50])\n['\u5728\u308a\u65b9 \u306b\u3064\u3044\u3066 4',\n '\u88ab\u4fdd\u8b77\u8005 \u7b49 4',\n '\u4e88\u60f3 \u7269\u4fa1\u4e0a\u6607\u7387 2',\n '\u53ef \u80fd 2',\n '6 147 2',\n '2013\u5e74 \u4ee5\u964d 3',\n '68 4 2',\n 'u3000 \u4fdd\u80b2\u6240 2',\n '1991 \u2212 2',\n '2000\u5e74\u4ee3 \u524d\u534a 2',\n '\u8ee2\u8077 \u8005 14',\n '\u30ed\u30fc\u30ea\u30f3\u30b0 \u63a8\u8a08 6',\n '8 1965 6',\n '\u300d \u306b\u304a\u3044\u3066 3',\n 'Mt \uff0d 4',\n '\u5e7c \u4fdd 4',\n '40 5 2',\n '\u5148\u884c\u304d \u306b\u3064\u3044\u3066 4',\n '0 \u7b2c 4',\n '\u304b\u3089 77 3',\n '\u7269 \u4e2d\u5fc3 6',\n '83 84 2',\n '\u501f\u5165 \u3084 2',\n '\u304b\u3089 \u7740\u5de5 2',\n '\u3044\u308b \u9762 2',\n '1989 87 2',\n '\u4ee5\u4e0b \u3067 24',\n '132 \u4ed8\u56f3 2',\n '\u4e16\u5e2f \u305d\u308c\u305e\u308c 2',\n '000 14 2',\n '\u672b \u6b8b\u9ad8 4',\n '\u5185\u9700 \u95a2\u9023\u4f01\u696d 2',\n '\u3067\u304d \u306a\u3044 3',\n '5 \uff08 2',\n '\u7e70\u8d8a \u6b20\u640d 23',\n '\u300c \u751f\u9bae\u98df\u54c1 9',\n '5 20 2',\n '\u30fb 20 2',\n '12 \u5faa\u74b0 6',\n '- 3 14',\n '\u2019 s 2',\n '\u5f53 \u91d1 2',\n '\u305f \u3082\u306e 4',\n '1 \u56f3 68',\n '\u96c7\u7528\u8005 \u6bd4\u7387 2',\n '\uff09 \u6625\u5b63 2',\n '\u79fb\u8ee2 \u4ee5\u5916 2',\n '\u2212 \u652f\u6255\u5229\u606f 2',\n '2 2003 6',\n '\u4e88\u60f3 \u6210\u9577\u7387 2']\n>>> \n>>> pprint(final_output[-50:])\n['\u3060 \u5f8c 6',\n '\u69d8\u3005 \u3067 2',\n '0 100 4',\n '\uff08 \u65b0\u8eca 2',\n '\u4e2d \u304b\u3089 2',\n '15 \uff0d 2',\n '\u907f\u96e3 \u751f\u6d3b 2',\n '\uff09 \u5973\u6027 3',\n 'x0c \u6211\u304c\u56fd 2',\n '\uff08 \u6700\u4f4e 2',\n '\u30b3\u30fc\u30dd\u30ec\u30fc\u30c8\u30ac\u30d0\u30ca\u30f3\u30b9\u30fb\u30b3\u30fc\u30c9 \u300d 8',\n '\u70b9 \u306b\u3064\u3044\u3066 8',\n '\u56fd\u5eab \u7d0d\u4ed8 4',\n '200 1 2',\n '\uff0d \u8d85\u9ad8\u9f62\u793e\u4f1a 2',\n '\uff0d v2 2',\n '\u306a\u3069 \u6211\u304c\u56fd 2',\n '\u3051 \u308c 2',\n '7 1967 4',\n '529 406 2',\n '5 \u2011 2',\n '\u5e74\u5831 \u300d 8',\n '\u03b2 0 2',\n '366 5 2',\n '\u751f\u307e\u308c \u306b\u304f\u3044 4',\n '\u591a\u3044 \u3053\u3068 2',\n '\u8f38\u5165\u56fd \u3067\u3042\u308b 2',\n '\u5f53\u8a72 \u533a\u5206 2',\n '\u30aa \u30fb 2',\n '\u533a\u5206 28 2',\n '\u7d66\u4ed8 \uff08 2',\n '16 18 7',\n '\u305d\u306e\u4ed6 \u6b73\u51fa 2',\n '\u300d \u3053\u3068 2',\n '\uff09 \u6b63\u898f\u96c7\u7528\u8005 2',\n '\u53ca\u3073 \u8cbf\u6613 2',\n 'OUT \u300d 8',\n '\u3068\u3044\u3046 \u66dc\u65e5 2',\n '\u307e\u305f\u306f \u5f93\u696d\u54e1 2',\n '86 111 2',\n '121 \uff0d 2',\n '\u30ea\u30b9\u30af \u8981\u56e0 14',\n '\u5148\u884c\u7814\u7a76 \uff08 2',\n '3 \u7bc0 29',\n '\u7d42\u8eab\u96c7\u7528 \u3068\u3044\u3063\u305f 2',\n '\u7814\u7a76\u958b\u767a \u8cbb 31',\n '\uff0e 1 4',\n '\u30c9\u30eb 1955 2',\n '794 13 2',\n '1998 14 2']\n>>> \n```\n\n###__\uff08 \u53c2\u8003 \uff09 any \u3068 all \u306e \u6319\u52d5__\n\n___\n\n```{Python:Python 3}\n>>> any(\"1\" == a for a in [\"1\", \"2\", \"3\"])\nTrue\n>>> \n>>> all(\"1\" == a for a in [\"1\", \"2\", \"3\"])\nFalse\n>>> \n>>> any(not(\"1\" == a) for a in [\"1\", \"2\", \"3\"])\nTrue\n>>> \n>>> all(not(\"1\" == a) for a in [\"1\", \"2\", \"3\"])\nFalse\n>>> \n>>> not(any(\"1\" == a for a in [\"1\", \"2\", \"3\"]))\nFalse\n>>> \n```\n___\n\n###__\u3010 \u95a2\u9023\u8a18\u4e8b \u3011__\n\n* [HirofumiYashima Qiita\u8a18\u4e8b\uff082016/09/21\uff09\u300c\u653f\u5e9c\u767d\u66f8\uff08\u5e73\u621028\u5e74\u5ea6\u7248 \u7d4c\u6e08\u8ca1\u653f\u767d\u66f8\uff09\u3092 bi-gram \u7d71\u8a08\u96c6\u8a08\u3057\u3066\u3001\u96a3\u63a5\u5358\u8a9e\u306e\u5171\u8d77\u56de\u6570 \u3092 \u5b9a\u91cf\u53ef\u8996\u5316\u3059\u308b\u300d](http://qiita.com/HirofumiYashima/items/b712ac945572c583991f)\n", "tags": ["Python", "\u30c7\u30fc\u30bf\u52a0\u5de5", "\u30c7\u30fc\u30bf\u5206\u6790", "NLP"]}