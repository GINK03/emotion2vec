{"context": "\u524d\u56de\u304b\u3089\u306e\u7d9a\u304d\u3067\u3001Javascrip\u30bd\u30fc\u30b9\u306e\u8a18\u8ff0\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n2. wav\u30d5\u30a1\u30a4\u30eb\u751f\u6210Javascrip\u30bd\u30fc\u30b9\u306e\u8a18\u8ff0\napp.js\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Express\u3084EJS\u306b\u3064\u3044\u3066\u306f\u3001\u5049\u5927\u306a\u5148\u9054\u306e\u65b9\u3005\u306e\u77e5\u898b1\u3084\u3001\u516c\u5f0f\u30b5\u30a4\u30c8\u3001Bluemix\u306bDeploy\u3059\u308b\u305f\u3081\u306eport\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u306f\u624b\u98063\u306e\u8a18\u8ff0\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u304a\u3001'STT\u3067\u97f3\u58f0\u8a8d\u8b58Javascript\u30bd\u30fc\u30b9\u304c\u52d5\u4f5c\u3059\u308bURL\u3092\u8a18\u8ff0'\u306b\u306f\u3001\u5f8c\u8ff0\u306e\u97f3\u58f0\u8a8d\u8b58\u51e6\u7406\u30b5\u30fc\u30d0\u30fc\u306eURL\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3068\u3053\u308d\u3067\u3001\u30b3\u30e1\u30f3\u30c8\u90e8\u5206\u306f\u3001\u30af\u30ed\u30b9\u30aa\u30ea\u30b8\u30f3 HTTP \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5236\u9650\u89e3\u9664\u3092\u8a66\u307f\u305f\u8a2d\u5b9a\u3067\u3059\u304c\u3001\u6709\u52b9\u5316\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\u4e0d\u8981\u3067\u3059\u304c\u3001\u6562\u3048\u3066\u3001\u6b8b\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001CDN\u3068\u3057\u3066ajax\u3092\u4f7f\u3046\u305f\u3081\u306e\u30bf\u30b0\u304c\u3042\u308a\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066ajax\u306f\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u4e0d\u8981\u3067\u3059\u304c\u3001\u3053\u308c\u307e\u305f\u3001\u6562\u3048\u3066\u6b8b\u3057\u3066\u3044\u307e\u3059\u3002\n:app.js\nvar express = require('express');\nvar ejs = require(\"ejs\");\n\nvar app = express();\n\n//  app.use(function(req, res, next) {\n//    res.setHeader(\"Access-Control-Allow-Origin\", \"https://stream.watsonplatform.net\");\n//    res.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, DELETE, PUT\");\n//    res.setHeader(\"Access-Control-Allow-Headers\", \"X-Requested-With, Content-Type\");\n//    res.setHeader(\"Access-Control-Allow-Credentials\", true);\n//    return next();\n//  });\n\napp.engine('ejs',ejs.renderFile);\n\napp.get(\"/\", function(req, res){\n    res.render('test.ejs', \n        {title: 'Test Page' , \n            content: 'this is test.'});\n});\n\n//var server = app.listen(3000, function(){\n//    console.log('Server is running!');\n//})\n\nvar server = app.listen(process.env.PORT || 3000, function() {\n  console.log('Listening on port %d', server.address().port);\n});\n\n\u6b21\u306b\u3001test.ejs\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002EJS\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u306f\u3001\n\u5049\u5927\u306a\u5148\u9054\u306e\u65b9\u3005\u306e\u77e5\u898b1\u3092\u3001WebRTC\u3001wav\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u306b\u3064\u3044\u3066\u306f\u3001\u77e5\u898b2\u3001\u77e5\u898b3\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059(\u53c2\u8003\u3068\u3044\u3046\u3088\u308a\u3001\u305d\u306e\u30e2\u30ce\u3067\u3059)\u3002\u30bd\u30fc\u30b9\u4e2d\u306e\u3001'STT\u3067\u97f3\u58f0\u8a8d\u8b58Javascript\u30bd\u30fc\u30b9\u304c\u52d5\u4f5c\u3059\u308bURL\u3092\u8a18\u8ff0'\u306e\u90e8\u5206\u306b\u3001\u5f8c\u8ff0\u306eBluemix\u3067Deploy\u306b\u304a\u3051\u308b\u3001cf push mystt\u3067\u5f97\u3089\u308c\u305furls\u306e\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\ntest.ejs\n<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta http-equiv=\"content-type\"\n        content=\"text/html; charset=UTF-8\">\n    <title><%=title %></title>\n    <style>\n    body { font-size:12pt; color:#000066; }\n    h1 { font-size:18pt; background-color:#DDDDFF; }\n    pre { background-color:#EEEEEE; }\n    </style>\n    </head>\n<body>\n    <header>\n        <h1><%=title %></h1>\n    </header>\n    <article>\n        <%-content %>\n    </article>\n        <button id=\"StartRecording\">StartRecording</button>\n        <button id=\"StopRecording\">StopRecording</button>\n        <button id=\"StartPlaying\">StartPlaying</button>\n        <button id=\"GenerateWAV\">GenerateWAV</button>\n        <button id=\"DownloadWAV\">DownloadWAV</button>\n        <button id=\"Upload\">Upload</button>\n\n        <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\"></script>\n        <script>\n    window.Recorder = function(audioContext, bufferSize){\n        var o = this;\n        o.audioContext = audioContext;\n        o.bufferSize = bufferSize || 4096;\n    }\n\n    Recorder.prototype = {\n        audioContext : '',\n        bufferSize : '',\n        audioBufferArray : [],\n        stream : '',\n        recording : function(stream){\n            var o = this;\n            o.stream = stream;\n            var mediaStreamSource =\n                o.audioContext.createMediaStreamSource(stream);\n            var scriptProcessor =\n                o.audioContext.createScriptProcessor(o.bufferSize, 1, 1);\n            mediaStreamSource.connect(scriptProcessor);\n            o.audioBufferArray = [];\n            scriptProcessor.onaudioprocess = function(event){\n                var channel = event.inputBuffer.getChannelData(0);\n                var buffer = new Float32Array(o.bufferSize);\n                for (var i = 0; i < o.bufferSize; i++) {\n                    buffer[i] = channel[i];\n                }\n                o.audioBufferArray.push(buffer);\n            }\n            //\u3053\u306e\u63a5\u7d9a\u3067onaudioprocess\u304c\u8d77\u52d5\n            scriptProcessor.connect(o.audioContext.destination);\n            o.scriptProcessor = scriptProcessor;\n        },\n        recStart : function(){\n            var o = this;\n            if(o.stream){\n                o.recording(o.stream);\n            }\n            else{\n                navigator.getUserMedia(\n                    {video: false, audio: true},\n                    function(stream){o.recording(stream)},\n                    function(err){\n                        console.log(err.name ? err.name : err);\n                    }\n                );\n            }\n        },\n        recStop : function(){\n            var o = this;\n            o.scriptProcessor.disconnect();\n            if(o.stream){\n                o.stream.stop();\n                o.stream = null;\n            }\n        },\n        getAudioBufferArray : function(){\n            var o = this;\n            return o.audioBufferArray\n        },\n        getAudioBuffer : function(){\n            var o = this;\n            var buffer = o.audioContext.createBuffer(\n                1,\n                o.audioBufferArray.length * o.bufferSize,\n                o.audioContext.sampleRate\n            );\n            var channel = buffer.getChannelData(0);\n            for (var i = 0; i < o.audioBufferArray.length; i++) {\n                for (var j = 0; j < o.bufferSize; j++) {\n                    channel[i * o.bufferSize + j] = o.audioBufferArray[i][j];\n                }\n            }\n            return buffer;\n        }\n    }\n\n    window.exportWAV = function(audioData, sampleRate) {\n        var encodeWAV = function(samples, sampleRate) {\n            var buffer = new ArrayBuffer(44 + samples.length * 2);\n            var view = new DataView(buffer);\n            var writeString = function(view, offset, string) {\n                for (var i = 0; i < string.length; i++){\n                    view.setUint8(offset + i, string.charCodeAt(i));\n                }\n            };\n            var floatTo16BitPCM = function(output, offset, input) {\n                for (var i = 0; i < input.length; i++, offset += 2){\n                    var s = Math.max(-1, Math.min(1, input[i]));\n                    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n                }\n            };\n            writeString(view, 0, 'RIFF');  // RIFF\u30d8\u30c3\u30c0\n            view.setUint32(4, 32 + samples.length * 2, true); // \u3053\u308c\u4ee5\u964d\u306e\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\n            writeString(view, 8, 'WAVE'); // WAVE\u30d8\u30c3\u30c0\n            writeString(view, 12, 'fmt '); // fmt\u30c1\u30e3\u30f3\u30af\n            view.setUint32(16, 16, true); // fmt\u30c1\u30e3\u30f3\u30af\u306e\u30d0\u30a4\u30c8\u6570\n            view.setUint16(20, 1, true); // \u30d5\u30a9\u30fc\u30de\u30c3\u30c8ID\n            view.setUint16(22, 1, true); // \u30c1\u30e3\u30f3\u30cd\u30eb\u6570\n            view.setUint32(24, sampleRate, true); // \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\n            view.setUint32(28, sampleRate * 2, true); // \u30c7\u30fc\u30bf\u901f\u5ea6\n            view.setUint16(32, 2, true); // \u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba\n            view.setUint16(34, 16, true); // \u30b5\u30f3\u30d7\u30eb\u3042\u305f\u308a\u306e\u30d3\u30c3\u30c8\u6570\n            writeString(view, 36, 'data'); // data\u30c1\u30e3\u30f3\u30af\n            view.setUint32(40, samples.length * 2, true); // \u6ce2\u5f62\u30c7\u30fc\u30bf\u306e\u30d0\u30a4\u30c8\u6570\n            floatTo16BitPCM(view, 44, samples); // \u6ce2\u5f62\u30c7\u30fc\u30bf\n            return view;\n        };\n        var mergeBuffers = function(audioData) {\n            var sampleLength = 0;\n            for (var i = 0; i < audioData.length; i++) {\n              sampleLength += audioData[i].length;\n            }\n            var samples = new Float32Array(sampleLength);\n            var sampleIdx = 0;\n            for (var i = 0; i < audioData.length; i++) {\n              for (var j = 0; j < audioData[i].length; j++) {\n                samples[sampleIdx] = audioData[i][j];\n                sampleIdx++;\n              }\n            }\n            return samples;\n        };\n        var dataview = encodeWAV(mergeBuffers(audioData), sampleRate);\n        var audioBlob = new Blob([dataview], { type: 'audio/wav' });\n        return audioBlob;\n    };\n\n    navigator.getUserMedia = \n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia;\n    window.URL = \n        window.URL || \n        window.webkitURL || \n        window.mozURL || \n        window.msURL;\n    window.AudioContext = \n        window.AudioContext||\n        window.webkitAudioContext;\n\n\n//\u4ee5\u4e0b\u3001\u30a2\u30d7\u30ea\u306e\u305f\u3081\u306e\u30ed\u30b8\u30c3\u30af\n\nvar audioContext = new AudioContext();\nvar recorder = new Recorder(audioContext);\nvar localurl = null;\n\nfunction startRecording() {\nrecorder.recStart(); // \u9332\u97f3\u958b\u59cb\n};\n\nfunction stopRecording() {\nrecorder.recStop(); // \u9332\u97f3\u505c\u6b62\nrecorder.getAudioBufferArray(); //\u97f3\u58f0\u914d\u5217\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\nrecorder.getAudioBuffer(); //AudioBuffer \u306e\u53d6\u5f97\n};\n\nfunction startPlaying() {\n    var src = audioContext.createBufferSource();\n    src.buffer = recorder.getAudioBuffer();\n    src.connect(audioContext.destination);\n    src.start()\n};\n\nfunction generateWAV() {\n    var blob = exportWAV(recorder.getAudioBufferArray(), audioContext.sampleRate)\n    localurl = URL.createObjectURL(blob);\n    console.log(localurl);\n};\n\n//querySelector\u3067\u306f\u3001#\u3092\u3064\u3051\u308b\u3053\u3068\u3067\u3001id\u304cbtnStartMonitoring\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3057\u3066\u3044\u308b(\u3064\u307e\u308a\u3001Start\u30dc\u30bf\u30f3)\ndocument.querySelector(\"#StartRecording\").onclick = startRecording; // Wire up start button\ndocument.querySelector(\"#StopRecording\").onclick = stopRecording; // Wire up stop button \ndocument.querySelector(\"#StartPlaying\").onclick = startPlaying; //\ndocument.querySelector(\"#GenerateWAV\").onclick = generateWAV; //\ndocument.querySelector(\"#DownloadWAV\").onclick = function() {\n    console.log(localurl);\n    return location.href = localurl;\n};\n\ndocument.querySelector(\"#Upload\").onclick = function() {\n    console.log('Upload');\n    return location.href = 'STT\u3067\u97f3\u58f0\u8a8d\u8b58Javascript\u30bd\u30fc\u30b9\u304c\u52d5\u4f5c\u3059\u308bURL\u3092\u8a18\u8ff0';\n};\n\n        </script>\n\n</body>\n</html>\n\n\n3. STT\u3067\u97f3\u58f0\u8a8d\u8b58Javascript\u30bd\u30fc\u30b9\u306e\u8a18\u8ff0\u306b\u7d9a\u304d\u307e\u3059\u3002\n[\u524d\u56de](http://qiita.com/yoshiono/items/fe5bc375f9f154e101fa)\u304b\u3089\u306e\u7d9a\u304d\u3067\u3001Javascrip\u30bd\u30fc\u30b9\u306e\u8a18\u8ff0\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n**2. wav\u30d5\u30a1\u30a4\u30eb\u751f\u6210Javascrip\u30bd\u30fc\u30b9\u306e\u8a18\u8ff0**\napp.js\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Express\u3084EJS\u306b\u3064\u3044\u3066\u306f\u3001\u5049\u5927\u306a\u5148\u9054\u306e\u65b9\u3005\u306e[\u77e5\u898b1](http://libro.tuyano.com/index2?id=1115003)\u3084\u3001[\u516c\u5f0f\u30b5\u30a4\u30c8](http://expressjs.com/ja/starter/generator.html)\u3001Bluemix\u306bDeploy\u3059\u308b\u305f\u3081\u306eport\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u306f[\u624b\u98063](http://www.ibm.com/developerworks/jp/cloud/library/j_cl-bluemix-nodejs-app/)\u306e\u8a18\u8ff0\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u304a\u3001'STT\u3067\u97f3\u58f0\u8a8d\u8b58Javascript\u30bd\u30fc\u30b9\u304c\u52d5\u4f5c\u3059\u308bURL\u3092\u8a18\u8ff0'\u306b\u306f\u3001\u5f8c\u8ff0\u306e\u97f3\u58f0\u8a8d\u8b58\u51e6\u7406\u30b5\u30fc\u30d0\u30fc\u306eURL\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3068\u3053\u308d\u3067\u3001\u30b3\u30e1\u30f3\u30c8\u90e8\u5206\u306f\u3001[\u30af\u30ed\u30b9\u30aa\u30ea\u30b8\u30f3 HTTP \u30ea\u30af\u30a8\u30b9\u30c8](https://developer.mozilla.org/ja/docs/HTTP_access_control)\u306e\u5236\u9650\u89e3\u9664\u3092\u8a66\u307f\u305f\u8a2d\u5b9a\u3067\u3059\u304c\u3001\u6709\u52b9\u5316\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\u4e0d\u8981\u3067\u3059\u304c\u3001\u6562\u3048\u3066\u3001\u6b8b\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001CDN\u3068\u3057\u3066ajax\u3092\u4f7f\u3046\u305f\u3081\u306e\u30bf\u30b0\u304c\u3042\u308a\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066ajax\u306f\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u4e0d\u8981\u3067\u3059\u304c\u3001\u3053\u308c\u307e\u305f\u3001\u6562\u3048\u3066\u6b8b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```javascript\n:app.js\nvar express = require('express');\nvar ejs = require(\"ejs\");\n  \nvar app = express();\n\n//  app.use(function(req, res, next) {\n//    res.setHeader(\"Access-Control-Allow-Origin\", \"https://stream.watsonplatform.net\");\n//    res.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, DELETE, PUT\");\n//    res.setHeader(\"Access-Control-Allow-Headers\", \"X-Requested-With, Content-Type\");\n//    res.setHeader(\"Access-Control-Allow-Credentials\", true);\n//    return next();\n//  });\n  \napp.engine('ejs',ejs.renderFile);\n  \napp.get(\"/\", function(req, res){\n    res.render('test.ejs', \n        {title: 'Test Page' , \n            content: 'this is test.'});\n});\n  \n//var server = app.listen(3000, function(){\n//    console.log('Server is running!');\n//})\n\nvar server = app.listen(process.env.PORT || 3000, function() {\n  console.log('Listening on port %d', server.address().port);\n});\n```\n\u6b21\u306b\u3001test.ejs\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002EJS\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u306f\u3001\n\u5049\u5927\u306a\u5148\u9054\u306e\u65b9\u3005\u306e[\u77e5\u898b1](http://libro.tuyano.com/index2?id=1115003)\u3092\u3001WebRTC\u3001wav\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u306b\u3064\u3044\u3066\u306f\u3001[\u77e5\u898b2](http://www.cyokodog.net/blog/media-capture-and-streams-web-audio-api/)\u3001[\u77e5\u898b3](http://qiita.com/HirokiTanaka/items/56f80844f9a32020ee3b)\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059(\u53c2\u8003\u3068\u3044\u3046\u3088\u308a\u3001\u305d\u306e\u30e2\u30ce\u3067\u3059)\u3002\u30bd\u30fc\u30b9\u4e2d\u306e\u3001'STT\u3067\u97f3\u58f0\u8a8d\u8b58Javascript\u30bd\u30fc\u30b9\u304c\u52d5\u4f5c\u3059\u308bURL\u3092\u8a18\u8ff0'\u306e\u90e8\u5206\u306b\u3001\u5f8c\u8ff0\u306eBluemix\u3067Deploy\u306b\u304a\u3051\u308b\u3001cf push mystt\u3067\u5f97\u3089\u308c\u305furls\u306e\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```js:test.ejs\n<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta http-equiv=\"content-type\"\n        content=\"text/html; charset=UTF-8\">\n    <title><%=title %></title>\n    <style>\n    body { font-size:12pt; color:#000066; }\n    h1 { font-size:18pt; background-color:#DDDDFF; }\n    pre { background-color:#EEEEEE; }\n    </style>\n    </head>\n<body>\n    <header>\n        <h1><%=title %></h1>\n    </header>\n    <article>\n        <%-content %>\n    </article>\n        <button id=\"StartRecording\">StartRecording</button>\n        <button id=\"StopRecording\">StopRecording</button>\n        <button id=\"StartPlaying\">StartPlaying</button>\n        <button id=\"GenerateWAV\">GenerateWAV</button>\n        <button id=\"DownloadWAV\">DownloadWAV</button>\n        <button id=\"Upload\">Upload</button>\n\n        <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\"></script>\n        <script>\n    window.Recorder = function(audioContext, bufferSize){\n        var o = this;\n        o.audioContext = audioContext;\n        o.bufferSize = bufferSize || 4096;\n    }\n\n    Recorder.prototype = {\n        audioContext : '',\n        bufferSize : '',\n        audioBufferArray : [],\n        stream : '',\n        recording : function(stream){\n            var o = this;\n            o.stream = stream;\n            var mediaStreamSource =\n                o.audioContext.createMediaStreamSource(stream);\n            var scriptProcessor =\n                o.audioContext.createScriptProcessor(o.bufferSize, 1, 1);\n            mediaStreamSource.connect(scriptProcessor);\n            o.audioBufferArray = [];\n            scriptProcessor.onaudioprocess = function(event){\n                var channel = event.inputBuffer.getChannelData(0);\n                var buffer = new Float32Array(o.bufferSize);\n                for (var i = 0; i < o.bufferSize; i++) {\n                    buffer[i] = channel[i];\n                }\n                o.audioBufferArray.push(buffer);\n            }\n            //\u3053\u306e\u63a5\u7d9a\u3067onaudioprocess\u304c\u8d77\u52d5\n            scriptProcessor.connect(o.audioContext.destination);\n            o.scriptProcessor = scriptProcessor;\n        },\n        recStart : function(){\n            var o = this;\n            if(o.stream){\n                o.recording(o.stream);\n            }\n            else{\n                navigator.getUserMedia(\n                    {video: false, audio: true},\n                    function(stream){o.recording(stream)},\n                    function(err){\n                        console.log(err.name ? err.name : err);\n                    }\n                );\n            }\n        },\n        recStop : function(){\n            var o = this;\n            o.scriptProcessor.disconnect();\n            if(o.stream){\n                o.stream.stop();\n                o.stream = null;\n            }\n        },\n        getAudioBufferArray : function(){\n            var o = this;\n            return o.audioBufferArray\n        },\n        getAudioBuffer : function(){\n            var o = this;\n            var buffer = o.audioContext.createBuffer(\n                1,\n                o.audioBufferArray.length * o.bufferSize,\n                o.audioContext.sampleRate\n            );\n            var channel = buffer.getChannelData(0);\n            for (var i = 0; i < o.audioBufferArray.length; i++) {\n                for (var j = 0; j < o.bufferSize; j++) {\n                    channel[i * o.bufferSize + j] = o.audioBufferArray[i][j];\n                }\n            }\n            return buffer;\n        }\n    }\n\n    window.exportWAV = function(audioData, sampleRate) {\n        var encodeWAV = function(samples, sampleRate) {\n            var buffer = new ArrayBuffer(44 + samples.length * 2);\n            var view = new DataView(buffer);\n            var writeString = function(view, offset, string) {\n                for (var i = 0; i < string.length; i++){\n                    view.setUint8(offset + i, string.charCodeAt(i));\n                }\n            };\n            var floatTo16BitPCM = function(output, offset, input) {\n                for (var i = 0; i < input.length; i++, offset += 2){\n                    var s = Math.max(-1, Math.min(1, input[i]));\n                    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n                }\n            };\n            writeString(view, 0, 'RIFF');  // RIFF\u30d8\u30c3\u30c0\n            view.setUint32(4, 32 + samples.length * 2, true); // \u3053\u308c\u4ee5\u964d\u306e\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\n            writeString(view, 8, 'WAVE'); // WAVE\u30d8\u30c3\u30c0\n            writeString(view, 12, 'fmt '); // fmt\u30c1\u30e3\u30f3\u30af\n            view.setUint32(16, 16, true); // fmt\u30c1\u30e3\u30f3\u30af\u306e\u30d0\u30a4\u30c8\u6570\n            view.setUint16(20, 1, true); // \u30d5\u30a9\u30fc\u30de\u30c3\u30c8ID\n            view.setUint16(22, 1, true); // \u30c1\u30e3\u30f3\u30cd\u30eb\u6570\n            view.setUint32(24, sampleRate, true); // \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\n            view.setUint32(28, sampleRate * 2, true); // \u30c7\u30fc\u30bf\u901f\u5ea6\n            view.setUint16(32, 2, true); // \u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba\n            view.setUint16(34, 16, true); // \u30b5\u30f3\u30d7\u30eb\u3042\u305f\u308a\u306e\u30d3\u30c3\u30c8\u6570\n            writeString(view, 36, 'data'); // data\u30c1\u30e3\u30f3\u30af\n            view.setUint32(40, samples.length * 2, true); // \u6ce2\u5f62\u30c7\u30fc\u30bf\u306e\u30d0\u30a4\u30c8\u6570\n            floatTo16BitPCM(view, 44, samples); // \u6ce2\u5f62\u30c7\u30fc\u30bf\n            return view;\n        };\n        var mergeBuffers = function(audioData) {\n            var sampleLength = 0;\n            for (var i = 0; i < audioData.length; i++) {\n              sampleLength += audioData[i].length;\n            }\n            var samples = new Float32Array(sampleLength);\n            var sampleIdx = 0;\n            for (var i = 0; i < audioData.length; i++) {\n              for (var j = 0; j < audioData[i].length; j++) {\n                samples[sampleIdx] = audioData[i][j];\n                sampleIdx++;\n              }\n            }\n            return samples;\n        };\n        var dataview = encodeWAV(mergeBuffers(audioData), sampleRate);\n        var audioBlob = new Blob([dataview], { type: 'audio/wav' });\n        return audioBlob;\n    };\n\n    navigator.getUserMedia = \n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia;\n    window.URL = \n        window.URL || \n        window.webkitURL || \n        window.mozURL || \n        window.msURL;\n    window.AudioContext = \n        window.AudioContext||\n        window.webkitAudioContext;\n\n\n//\u4ee5\u4e0b\u3001\u30a2\u30d7\u30ea\u306e\u305f\u3081\u306e\u30ed\u30b8\u30c3\u30af\n\nvar audioContext = new AudioContext();\nvar recorder = new Recorder(audioContext);\nvar localurl = null;\n\nfunction startRecording() {\nrecorder.recStart(); // \u9332\u97f3\u958b\u59cb\n};\n\nfunction stopRecording() {\nrecorder.recStop(); // \u9332\u97f3\u505c\u6b62\nrecorder.getAudioBufferArray(); //\u97f3\u58f0\u914d\u5217\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\nrecorder.getAudioBuffer(); //AudioBuffer \u306e\u53d6\u5f97\n};\n\nfunction startPlaying() {\n    var src = audioContext.createBufferSource();\n    src.buffer = recorder.getAudioBuffer();\n    src.connect(audioContext.destination);\n    src.start()\n};\n\nfunction generateWAV() {\n    var blob = exportWAV(recorder.getAudioBufferArray(), audioContext.sampleRate)\n    localurl = URL.createObjectURL(blob);\n    console.log(localurl);\n};\n\n//querySelector\u3067\u306f\u3001#\u3092\u3064\u3051\u308b\u3053\u3068\u3067\u3001id\u304cbtnStartMonitoring\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3057\u3066\u3044\u308b(\u3064\u307e\u308a\u3001Start\u30dc\u30bf\u30f3)\ndocument.querySelector(\"#StartRecording\").onclick = startRecording; // Wire up start button\ndocument.querySelector(\"#StopRecording\").onclick = stopRecording; // Wire up stop button \ndocument.querySelector(\"#StartPlaying\").onclick = startPlaying; //\ndocument.querySelector(\"#GenerateWAV\").onclick = generateWAV; //\ndocument.querySelector(\"#DownloadWAV\").onclick = function() {\n    console.log(localurl);\n    return location.href = localurl;\n};\n\ndocument.querySelector(\"#Upload\").onclick = function() {\n    console.log('Upload');\n    return location.href = 'STT\u3067\u97f3\u58f0\u8a8d\u8b58Javascript\u30bd\u30fc\u30b9\u304c\u52d5\u4f5c\u3059\u308bURL\u3092\u8a18\u8ff0';\n};\n\n        </script>\n\n</body>\n</html>\n```\n[3. STT\u3067\u97f3\u58f0\u8a8d\u8b58Javascript\u30bd\u30fc\u30b9\u306e\u8a18\u8ff0](http://qiita.com/yoshiono/items/536332abd60ba3bde3f9)\u306b\u7d9a\u304d\u307e\u3059\u3002\n\n\n\n\n\n\n", "tags": ["Bluemix", "Node.js", "Express", "ejs", "watson-developer-cloud"]}