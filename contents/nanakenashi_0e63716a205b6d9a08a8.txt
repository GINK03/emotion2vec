{"context": "\n\n\u6982\u8981\nLambda\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5b9f\u884c\u3067RDS\uff08MySQL\uff09\u306e\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u30ed\u30b0\u3092\u76e3\u8996\u3057\n\u30b5\u30a4\u30ba\u304c\u4e00\u5b9a\u4ee5\u4e0a\u306a\u3089Slack\u306b\u901a\u77e5\u3059\u308b\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u307e\u3059\u3002\nLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u306f'Python 2.7'\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u4e8b\u524d\u6e96\u5099\n\nRDS\uff08MySQL\uff09\nEC2\uff08MySQL\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308c\u3070OK\uff09\nSlack\u30c1\u30fc\u30e0\n\n\n\u624b\u9806\n\nRDS\u3067\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u51fa\u529b\u3092\u8a2d\u5b9a\u3059\u308b\nRDS\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e3\u9805\u76ee\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\n\u5909\u66f4\u524d\n\u5909\u66f4\u5f8c\n\u8aac\u660e\n\n\n\n\nslow_query_log\nengine-default\n1\n\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3092\u51fa\u529b\u3057\u307e\u3059\n\n\nlong_query_time\nengine-default\n2\n2\u79d2\u4ee5\u4e0a\u306e\u30af\u30a8\u30ea\u3092\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3068\u3057\u307e\u3059\n\n\nlog_outut\nTABLE\nFILE\n\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u306f\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\n\n\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u308f\u306a\u3044\u30af\u30a8\u30ea\u3092\u51fa\u529b\u3059\u308blog_queries_not_using_indexes\u3082\u3042\u308a\u307e\u3059\u304c\n\u4eca\u56de\u306e\u5224\u65ad\u8ef8\u306f\u30af\u30a8\u30ea\u304c\u65e9\u3044\u304b\u9045\u3044\u304b\u306e\u307f\u306a\u306e\u3067\u3001\u5272\u611b\u3057\u307e\u3059\u3002\n\u8a66\u3057\u306b\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3092\u767a\u751f\u3055\u305b\u3066\u307f\u307e\u3059\u3002\n\u610f\u56f3\u7684\u306b\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3092\u767a\u751f\u3055\u305b\u308b\u305f\u3081\u306bSLEEP()\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067\u5b9f\u884c\u6642\u9593\u3092\u4f38\u3070\u3057\u305f\u30af\u30a8\u30ea\u3092\u81ea\u4f5c\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u6295\u3052\u307e\u3059\u3002\n\n\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\uff08\u65e2\u5b58\u3067\u3042\u308c\u3070\u4e0d\u8981\uff09\nmysql> CREATE TABLE item (id int);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql> INSERT INTO item VALUES(1);\nQuery OK, 1 row affected (0.01 sec)\n\n\n\n\u610f\u56f3\u7684\u306a\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\nmysql> SELECT id, SLEEP(5) FROM item;\n+------+----------+\n| id   | SLEEP(5) |\n+------+----------+\n|    1 |        0 |\n+------+----------+\n1 row in set (5.00 sec)\n\n\n\u3053\u308c\u3067RDS\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eLogs\u304b\u3089mysql-slowquery.log\u3092\u958b\u304f\u3068\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u304c\u8a18\u9332\u3055\u308c\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\nSlack\u306eWebhook\u7528URL\u3092\u6e96\u5099\u3059\u308b\n\u4ee5\u964d\u306e\u624b\u9806\u3067\u4f7f\u7528\u3059\u308bLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6e96\u5099\u304c\u5fc5\u8981\u3067\u3042\u308b\u3068\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nFollow these steps to configure the webhook in Slack:\n  1. Navigate to https://<your-team-domain>.slack.com/services/new\n  2. Search for and select \"Incoming WebHooks\".\n  3. Choose the default channel where messages will be sent and click \"Add Incoming WebHooks Integration\".\n  4. Copy the webhook URL from the setup instructions and use it in the next section.\nFollow these steps to encrypt your Slack hook URL for use in this function:\n  1. Create a KMS key - http://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html.\n  2. Encrypt the event collector token using the AWS CLI.\n$ aws kms encrypt --key-id alias/<KMS key name> --plaintext \"<SLACK_HOOK_URL>\"\n     Note: You must exclude the protocol from the URL (e.g. \"hooks.slack.com/services/abc123\").\n  3. Copy the base-64 encoded, encrypted key (CiphertextBlob) to the ENCRYPTED_HOOK_URL variable.\n  4. Give your function's role permission for the kms:Decrypt action.\n\n\u5168\u4f53\u3092\u8981\u7d04\u3059\u308b\u3068\u3001Slack\u306e'Incoming Webhooks'\u3067URL\u3092\u53d6\u5f97\u3057\n\u305d\u308c\u3092AWS\u306eKMS\u3068\u3044\u3046\u6697\u53f7\u5316\u30b5\u30fc\u30d3\u30b9\u3067\u6697\u53f7\u5316\u3057\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u6d41\u308c\u3067\u3059\u3002\n\u4e0b\u8a18\u30da\u30fc\u30b8\u306e\u8aac\u660e\u304c\u3068\u3066\u3064\u3082\u306a\u304f\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n3\u7bc0\u304b\u30895\u7bc0\u307e\u3067\u3067URL\u306e\u53d6\u5f97\u3068\u6697\u53f7\u5316\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\nLambda\u306eBlueprint\u3092\u4f7f\u3063\u3066\u3001CloudWatch\u306e\u30a2\u30e9\u30fc\u30e0\u3092Slack\u306b\u6295\u7a3f\n\n\nLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\nRDS\u3092\u914d\u7f6e\u3057\u3066\u3044\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3067Lambda\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304d\n'Create a Lambda Function'\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\u30d6\u30eb\u30fc\u30d7\u30ea\u30f3\u30c8\u306e\u4e2d\u306ecloudwatch-alarm-to-slack-python\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\uff08\u53c2\u8003\u306e\u305f\u3081\u306b\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001cloudwatch\u306f\u4f7f\u3044\u307e\u305b\u3093\uff09\n\n\u30c8\u30ea\u30ac\u30fc\u8a2d\u5b9a\u3067\u306eSNS\u3082\u4e0d\u8981\u306a\u306e\u3067\u3001\u524a\u9664\u3057\u307e\u3059\u3002\n\nName\u3068Description\u306f\u9069\u5f53\u306b\u3064\u3051\u307e\u3057\u3087\u3046\u3002\nRuntime\u306f\u524d\u8ff0\u306e\u901a\u308a'Python 2.7'\u3067\u3059\u3002\n\u809d\u5fc3\u306e\u30b3\u30fc\u30c9\u306e\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\u5927\u90e8\u5206\u306f\u30d6\u30eb\u30fc\u30d7\u30ea\u30f3\u30c8\u306e\u30b3\u30fc\u30c9\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u8aac\u660e\u306f\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u8a18\u8f09\u3057\u307e\u3057\u305f\u3002\n\nLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\nimport boto3\nimport json\nimport logging\n\nfrom base64 import b64decode\nfrom urllib2 import Request, urlopen, URLError, HTTPError\n\n# \u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3092\u8abf\u3079\u305f\u3044DB\u306eID\nRDS_ID = \"{id}\"\n\n# \u3053\u306e\u6570\u5024\u3092\u8d85\u3048\u308b\u30ed\u30b0\u3092\u3001\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u5897\u52a0\u306e\u30c8\u30ea\u30ac\u30fc\u3068\u3059\u308b\nTHRESHOLD_BYTE = {byte}\n\n# \u6697\u53f7\u5316\u3057\u305fSlack\u306eWebhookURL\nENCRYPTED_HOOK_URL = '{url}'  # Enter the base-64 encoded, encrypted key (CiphertextBlob)\n\n# \u901a\u77e5\u3092\u3057\u305f\u3044Slack\u30c1\u30e3\u30f3\u30cd\u30eb\nSLACK_CHANNEL = '{channel}'  # Enter the Slack channel to send a message to\n\n# \u6697\u53f7\u5316\u3055\u308c\u305fURL\u3092KMS\u3067\u30c7\u30b3\u30fc\u30c9\nHOOK_URL = \"https://\" + boto3.client('kms').decrypt(CiphertextBlob=b64decode(ENCRYPTED_HOOK_URL))['Plaintext']\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\n\ndef lambda_handler(event, context):\n\n    client = boto3.client(\"rds\")\n\n    # \u5bfe\u8c61\u306eDB\u3067\u30b5\u30a4\u30ba\u304c\u95be\u5024\u3092\u8d85\u3048\u308b\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u30ed\u30b0\u3092\u53d6\u5f97\n    log_files = client.describe_db_log_files(\n        DBInstanceIdentifier=RDS_ID,\n        FileSize=THRESHOLD_BYTE,\n        FilenameContains='slowquery')\n\n    # \u53d6\u5f97\u3067\u304d\u305f\u30ed\u30b0\u304c\u306a\u3051\u308c\u3070\u3053\u3053\u3067\u7d42\u4e86\n    if len(log_files['DescribeDBLogFiles']) == 0:\n        logger.info(\"Slow query was not found.\")\n        return\n\n    # Slack\u3067\u901a\u77e5\u3059\u308b\u5185\u5bb9\u306e\u8a2d\u5b9a\n    slack_message = {\n        'channel': SLACK_CHANNEL,\n        'username': 'Alert from RDS',\n        'icon_emoji': ':exclamation:',\n        'text': 'Slow query was found.'\n    }\n\n    # Slack\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n    req = Request(HOOK_URL, json.dumps(slack_message))\n\n    try:\n        response = urlopen(req)\n        response.read()\n        logger.info(\"Message posted to %s\", slack_message['channel'])\n    except HTTPError as e:\n        logger.error(\"Request failed: %d %s\", e.code, e.reason)\n    except URLError as e:\n        logger.error(\"Server connection failed: %s\", e.reason)\n\n\n\u30ed\u30fc\u30eb\u306f\u65b0\u3057\u304f\u4f5c\u6210\u3057\u3001\u65e2\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u901a\u308a\nKMS decryption permission\u3092\u4ed8\u4e0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u305d\u306e\u4ed6\u306f\u3059\u3079\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3067\u3001VPC\u3082\u672a\u4f7f\u7528\u3067\u3059\u3002\n\n\u3053\u308c\u3067Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u304c\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\n\u3053\u306e\u307e\u307e\u5b9f\u884c\u3059\u308b\u3068\u6a29\u9650\u306e\u554f\u984c\u3067\u3053\u3051\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nIAM\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u3001\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u30ed\u30fc\u30eb\u306bRDS\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u8ffd\u52a0\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u306fAmazonRDSReadOnlyAccess\u3067\u3059\u3002\n\n\nLambda\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5b9f\u884c\u3092\u8a2d\u5b9a\u3059\u308b\n\u4f5c\u6210\u3057\u305fLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u30c8\u30ea\u30ac\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nTriggers\u30bf\u30d6\u306e'Add Trigger'\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n\u30c8\u30ea\u30ac\u30fc\u30bf\u30a4\u30d7\u3068\u3057\u3066'CloudWatch Events - Schedule'\u3092\u9078\u629e\u3057\n\u8868\u793a\u3055\u308c\u305f\u9805\u76ee\u3092\u57cb\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\nRDS\u306eslowquery.log\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u30671\u6642\u9593\u9593\u9694\u306724\u6642\u9593\u5206\u306e\u30c7\u30fc\u30bf\u304c\u6b8b\u308b\u305f\u3081\n\u5e73\u65e5\u306e1\u65e5\u3054\u3068\u306b\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\nCron\u306e\u6642\u523b\u8a2d\u5b9a\u306fUTC\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u5b9f\u884c\u9593\u9694\u306f\u904b\u7528\u65b9\u6cd5\u306b\u5fdc\u3058\u3066\uff08\u30b3\u30fc\u30c9\u3082\u542b\u3081\u3066\uff09\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0a\u306e\u8a2d\u5b9a\u3067\u3001\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u304c\u3042\u308c\u3070Slack\u306b\u901a\u77e5\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n\n\u307e\u3068\u3081\n\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u30ed\u30b0\u306e\u5897\u52a0\u3092\u30c1\u30e3\u30c3\u30c8\u901a\u77e5\u3059\u308b\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001download_db_log_file_postion()\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\n\u30ed\u30b0\u306e\u4e2d\u8eab\u3092\u76f4\u63a5\u30c1\u30e3\u30c3\u30c8\u901a\u77e5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u305d\u3046\u3067\u3059\u304c\nDB\u306e\u30b9\u30ad\u30fc\u30de\u3084\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u8f09\u305b\u308b\u306e\u306b\u62b5\u6297\u304c\u3042\u3063\u305f\u305f\u3081\u907f\u3051\u307e\u3057\u305f\u3002\n\u305d\u3082\u305d\u3082\u901a\u77e5\u306e\u767a\u751f\u983b\u5ea6\u306f\u9ad8\u304f\u306a\u3044\uff08\u9ad8\u3044\u72b6\u614b\u304c\u304a\u304b\u3057\u3044\uff09\u306e\u3067\n\u5b58\u5728\u3055\u3048\u8a8d\u77e5\u3067\u304d\u308c\u3070\u5341\u5206\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u6982\u8981\n\nLambda\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5b9f\u884c\u3067RDS\uff08MySQL\uff09\u306e\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u30ed\u30b0\u3092\u76e3\u8996\u3057\n\u30b5\u30a4\u30ba\u304c\u4e00\u5b9a\u4ee5\u4e0a\u306a\u3089Slack\u306b\u901a\u77e5\u3059\u308b\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u307e\u3059\u3002\nLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u306f'Python 2.7'\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n## \u4e8b\u524d\u6e96\u5099\n\n* RDS\uff08MySQL\uff09\n* EC2\uff08MySQL\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308c\u3070OK\uff09\n* Slack\u30c1\u30fc\u30e0\n\n## \u624b\u9806\n\n### RDS\u3067\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u51fa\u529b\u3092\u8a2d\u5b9a\u3059\u308b\n\nRDS\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e3\u9805\u76ee\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n|\u30d1\u30e9\u30e1\u30fc\u30bf|\u5909\u66f4\u524d|\u5909\u66f4\u5f8c|\u8aac\u660e|\n|---|---|---|---|\n|slow_query_log|engine-default|1|\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3092\u51fa\u529b\u3057\u307e\u3059|\n|long_query_time|engine-default|2|2\u79d2\u4ee5\u4e0a\u306e\u30af\u30a8\u30ea\u3092\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3068\u3057\u307e\u3059|\n|log_outut|TABLE|FILE|\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u306f\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3057\u307e\u3059|\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u308f\u306a\u3044\u30af\u30a8\u30ea\u3092\u51fa\u529b\u3059\u308b`log_queries_not_using_indexes`\u3082\u3042\u308a\u307e\u3059\u304c\n\u4eca\u56de\u306e\u5224\u65ad\u8ef8\u306f\u30af\u30a8\u30ea\u304c\u65e9\u3044\u304b\u9045\u3044\u304b\u306e\u307f\u306a\u306e\u3067\u3001\u5272\u611b\u3057\u307e\u3059\u3002\n\n\u8a66\u3057\u306b\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3092\u767a\u751f\u3055\u305b\u3066\u307f\u307e\u3059\u3002\n\u610f\u56f3\u7684\u306b\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3092\u767a\u751f\u3055\u305b\u308b\u305f\u3081\u306b`SLEEP()`\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067\u5b9f\u884c\u6642\u9593\u3092\u4f38\u3070\u3057\u305f\u30af\u30a8\u30ea\u3092\u81ea\u4f5c\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u6295\u3052\u307e\u3059\u3002\n\n```bash:\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\uff08\u65e2\u5b58\u3067\u3042\u308c\u3070\u4e0d\u8981\uff09\nmysql> CREATE TABLE item (id int);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql> INSERT INTO item VALUES(1);\nQuery OK, 1 row affected (0.01 sec)\n```\n\n```bash:\u610f\u56f3\u7684\u306a\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\nmysql> SELECT id, SLEEP(5) FROM item;\n+------+----------+\n| id   | SLEEP(5) |\n+------+----------+\n|    1 |        0 |\n+------+----------+\n1 row in set (5.00 sec)\n```\n\n\u3053\u308c\u3067RDS\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eLogs\u304b\u3089mysql-slowquery.log\u3092\u958b\u304f\u3068\n\n![RDS_\u00b7_AWS_Console.png](https://qiita-image-store.s3.amazonaws.com/0/43116/8e1694b8-f748-2d91-457e-fb54334bcc4e.png \"RDS_\u00b7_AWS_Console.png\")\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u304c\u8a18\u9332\u3055\u308c\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n![RDS_\u00b7_AWS_Console2.png](https://qiita-image-store.s3.amazonaws.com/0/43116/b1092e34-6966-1145-ceb0-cbbad356620f.png \"RDS_\u00b7_AWS_Console2.png\")\n\n\n### Slack\u306eWebhook\u7528URL\u3092\u6e96\u5099\u3059\u308b\n\n\u4ee5\u964d\u306e\u624b\u9806\u3067\u4f7f\u7528\u3059\u308bLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6e96\u5099\u304c\u5fc5\u8981\u3067\u3042\u308b\u3068\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n> Follow these steps to configure the webhook in Slack:\n  1. Navigate to `https://<your-team-domain>.slack.com/services/new`\n  2. Search for and select \"Incoming WebHooks\".\n  3. Choose the default channel where messages will be sent and click \"Add Incoming WebHooks Integration\".\n  4. Copy the webhook URL from the setup instructions and use it in the next section.\n\n> Follow these steps to encrypt your Slack hook URL for use in this function:\n  1. Create a KMS key - http://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html.\n  2. Encrypt the event collector token using the AWS CLI.\n   `$ aws kms encrypt --key-id alias/<KMS key name> --plaintext \"<SLACK_HOOK_URL>\"`\n     Note: You must exclude the protocol from the URL (e.g. \"hooks.slack.com/services/abc123\").\n  3. Copy the base-64 encoded, encrypted key (CiphertextBlob) to the ENCRYPTED_HOOK_URL variable.\n  4. Give your function's role permission for the kms:Decrypt action.\n\n\u5168\u4f53\u3092\u8981\u7d04\u3059\u308b\u3068\u3001Slack\u306e'Incoming Webhooks'\u3067URL\u3092\u53d6\u5f97\u3057\n\u305d\u308c\u3092AWS\u306eKMS\u3068\u3044\u3046\u6697\u53f7\u5316\u30b5\u30fc\u30d3\u30b9\u3067\u6697\u53f7\u5316\u3057\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u6d41\u308c\u3067\u3059\u3002\n\n\u4e0b\u8a18\u30da\u30fc\u30b8\u306e\u8aac\u660e\u304c\u3068\u3066\u3064\u3082\u306a\u304f\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n3\u7bc0\u304b\u30895\u7bc0\u307e\u3067\u3067URL\u306e\u53d6\u5f97\u3068\u6697\u53f7\u5316\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n[Lambda\u306eBlueprint\u3092\u4f7f\u3063\u3066\u3001CloudWatch\u306e\u30a2\u30e9\u30fc\u30e0\u3092Slack\u306b\u6295\u7a3f\n](http://blog.serverworks.co.jp/tech/2016/02/16/lambda-cloudwatch-alarm-to-slack/)\n\n### Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\n\nRDS\u3092\u914d\u7f6e\u3057\u3066\u3044\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3067Lambda\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304d\n'Create a Lambda Function'\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\u30d6\u30eb\u30fc\u30d7\u30ea\u30f3\u30c8\u306e\u4e2d\u306e`cloudwatch-alarm-to-slack-python`\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\uff08\u53c2\u8003\u306e\u305f\u3081\u306b\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001cloudwatch\u306f\u4f7f\u3044\u307e\u305b\u3093\uff09\n\n![Lambda_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/43116/4afaab63-25f6-f06b-3253-69da6d0c8fa8.png \"Lambda_Management_Console.png\")\n\n\u30c8\u30ea\u30ac\u30fc\u8a2d\u5b9a\u3067\u306eSNS\u3082\u4e0d\u8981\u306a\u306e\u3067\u3001\u524a\u9664\u3057\u307e\u3059\u3002\n![Lambda_Management_Console2.png](https://qiita-image-store.s3.amazonaws.com/0/43116/45da9413-fabd-6a71-659b-6b90aeceb2fb.png \"Lambda_Management_Console2.png\")\n\nName\u3068Description\u306f\u9069\u5f53\u306b\u3064\u3051\u307e\u3057\u3087\u3046\u3002\nRuntime\u306f\u524d\u8ff0\u306e\u901a\u308a'Python 2.7'\u3067\u3059\u3002\n\n\u809d\u5fc3\u306e\u30b3\u30fc\u30c9\u306e\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\u5927\u90e8\u5206\u306f\u30d6\u30eb\u30fc\u30d7\u30ea\u30f3\u30c8\u306e\u30b3\u30fc\u30c9\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u8aac\u660e\u306f\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u8a18\u8f09\u3057\u307e\u3057\u305f\u3002\n\n```python:Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\nimport boto3\nimport json\nimport logging\n\nfrom base64 import b64decode\nfrom urllib2 import Request, urlopen, URLError, HTTPError\n\n# \u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u3092\u8abf\u3079\u305f\u3044DB\u306eID\nRDS_ID = \"{id}\"\n\n# \u3053\u306e\u6570\u5024\u3092\u8d85\u3048\u308b\u30ed\u30b0\u3092\u3001\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u5897\u52a0\u306e\u30c8\u30ea\u30ac\u30fc\u3068\u3059\u308b\nTHRESHOLD_BYTE = {byte}\n\n# \u6697\u53f7\u5316\u3057\u305fSlack\u306eWebhookURL\nENCRYPTED_HOOK_URL = '{url}'  # Enter the base-64 encoded, encrypted key (CiphertextBlob)\n\n# \u901a\u77e5\u3092\u3057\u305f\u3044Slack\u30c1\u30e3\u30f3\u30cd\u30eb\nSLACK_CHANNEL = '{channel}'  # Enter the Slack channel to send a message to\n\n# \u6697\u53f7\u5316\u3055\u308c\u305fURL\u3092KMS\u3067\u30c7\u30b3\u30fc\u30c9\nHOOK_URL = \"https://\" + boto3.client('kms').decrypt(CiphertextBlob=b64decode(ENCRYPTED_HOOK_URL))['Plaintext']\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\n\ndef lambda_handler(event, context):\n\n    client = boto3.client(\"rds\")\n    \n    # \u5bfe\u8c61\u306eDB\u3067\u30b5\u30a4\u30ba\u304c\u95be\u5024\u3092\u8d85\u3048\u308b\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u30ed\u30b0\u3092\u53d6\u5f97\n    log_files = client.describe_db_log_files(\n        DBInstanceIdentifier=RDS_ID,\n        FileSize=THRESHOLD_BYTE,\n        FilenameContains='slowquery')\n        \n    # \u53d6\u5f97\u3067\u304d\u305f\u30ed\u30b0\u304c\u306a\u3051\u308c\u3070\u3053\u3053\u3067\u7d42\u4e86\n    if len(log_files['DescribeDBLogFiles']) == 0:\n        logger.info(\"Slow query was not found.\")\n        return\n\n    # Slack\u3067\u901a\u77e5\u3059\u308b\u5185\u5bb9\u306e\u8a2d\u5b9a\n    slack_message = {\n        'channel': SLACK_CHANNEL,\n        'username': 'Alert from RDS',\n        'icon_emoji': ':exclamation:',\n        'text': 'Slow query was found.'\n    }\n\n    # Slack\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n    req = Request(HOOK_URL, json.dumps(slack_message))\n    \n    try:\n        response = urlopen(req)\n        response.read()\n        logger.info(\"Message posted to %s\", slack_message['channel'])\n    except HTTPError as e:\n        logger.error(\"Request failed: %d %s\", e.code, e.reason)\n    except URLError as e:\n        logger.error(\"Server connection failed: %s\", e.reason)\n```\n\n\u30ed\u30fc\u30eb\u306f\u65b0\u3057\u304f\u4f5c\u6210\u3057\u3001\u65e2\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u901a\u308a\n`KMS decryption permission`\u3092\u4ed8\u4e0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u305d\u306e\u4ed6\u306f\u3059\u3079\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3067\u3001VPC\u3082\u672a\u4f7f\u7528\u3067\u3059\u3002\n\n![Lambda_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/43116/ec7beba6-65e4-f24c-b47b-53714a4a57b9.png \"Lambda_Management_Console.png\")\n\n\u3053\u308c\u3067Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u304c\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\n\u3053\u306e\u307e\u307e\u5b9f\u884c\u3059\u308b\u3068\u6a29\u9650\u306e\u554f\u984c\u3067\u3053\u3051\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\nIAM\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u3001\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u30ed\u30fc\u30eb\u306bRDS\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n![aaa.png](https://qiita-image-store.s3.amazonaws.com/0/43116/a6f217b7-2802-d259-44c5-266312f46ff5.png \"aaa.png\")\n\n\u8ffd\u52a0\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u306f`AmazonRDSReadOnlyAccess`\u3067\u3059\u3002\n\n![Policy.png](https://qiita-image-store.s3.amazonaws.com/0/43116/106fd30e-7e81-f716-a9b9-a6354e4c9cf2.png \"Policy.png\")\n\n## Lambda\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5b9f\u884c\u3092\u8a2d\u5b9a\u3059\u308b\n\n\u4f5c\u6210\u3057\u305fLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u30c8\u30ea\u30ac\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nTriggers\u30bf\u30d6\u306e'Add Trigger'\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n![Trigger.png](https://qiita-image-store.s3.amazonaws.com/0/43116/f7cc640c-2f7b-a4cd-206e-2b27ca70a70a.png \"Trigger.png\")\n\n\u30c8\u30ea\u30ac\u30fc\u30bf\u30a4\u30d7\u3068\u3057\u3066'CloudWatch Events - Schedule'\u3092\u9078\u629e\u3057\n\u8868\u793a\u3055\u308c\u305f\u9805\u76ee\u3092\u57cb\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n![setting.png](https://qiita-image-store.s3.amazonaws.com/0/43116/214ca3c2-0fb7-ba48-1e63-8b75b92ee61a.png \"setting.png\")\n\n\nRDS\u306eslowquery.log\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u30671\u6642\u9593\u9593\u9694\u306724\u6642\u9593\u5206\u306e\u30c7\u30fc\u30bf\u304c\u6b8b\u308b\u305f\u3081\n\u5e73\u65e5\u306e1\u65e5\u3054\u3068\u306b\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\nCron\u306e\u6642\u523b\u8a2d\u5b9a\u306fUTC\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u5b9f\u884c\u9593\u9694\u306f\u904b\u7528\u65b9\u6cd5\u306b\u5fdc\u3058\u3066\uff08\u30b3\u30fc\u30c9\u3082\u542b\u3081\u3066\uff09\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0a\u306e\u8a2d\u5b9a\u3067\u3001\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u304c\u3042\u308c\u3070Slack\u306b\u901a\u77e5\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n![slack.png](https://qiita-image-store.s3.amazonaws.com/0/43116/6f6c6efd-fcd8-3a1f-e36f-a9b4f12ffbc4.png \"slack.png\")\n\n## \u307e\u3068\u3081\n\n\u30b9\u30ed\u30fc\u30af\u30a8\u30ea\u30ed\u30b0\u306e\u5897\u52a0\u3092\u30c1\u30e3\u30c3\u30c8\u901a\u77e5\u3059\u308b\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3057\u305f\u3002\n\n\u306a\u304a\u3001[`download_db_log_file_postion()`](https://boto3.readthedocs.io/en/latest/reference/services/rds.html#RDS.Client.download_db_log_file_portion)\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\n\u30ed\u30b0\u306e\u4e2d\u8eab\u3092\u76f4\u63a5\u30c1\u30e3\u30c3\u30c8\u901a\u77e5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u305d\u3046\u3067\u3059\u304c\nDB\u306e\u30b9\u30ad\u30fc\u30de\u3084\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u8f09\u305b\u308b\u306e\u306b\u62b5\u6297\u304c\u3042\u3063\u305f\u305f\u3081\u907f\u3051\u307e\u3057\u305f\u3002\n\n\u305d\u3082\u305d\u3082\u901a\u77e5\u306e\u767a\u751f\u983b\u5ea6\u306f\u9ad8\u304f\u306a\u3044\uff08\u9ad8\u3044\u72b6\u614b\u304c\u304a\u304b\u3057\u3044\uff09\u306e\u3067\n\u5b58\u5728\u3055\u3048\u8a8d\u77e5\u3067\u304d\u308c\u3070\u5341\u5206\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n", "tags": ["AWS", "RDS", "lambda", "Slack"]}