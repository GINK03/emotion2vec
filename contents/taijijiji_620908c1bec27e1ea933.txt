{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u30eb\u30fc\u30bf\u7fa4\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u4e00\u5143\u53d6\u5f97\u3059\u308b\u30c4\u30fc\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\u4f5c\u3063\u305f\u30c4\u30fc\u30eb\u306fgithub\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/taijiji/ConfigCollector\n\n\u4f5c\u3063\u305f\u52d5\u6a5f\n\u7ba1\u7406\u3057\u3066\u3044\u308b\u30eb\u30fc\u30bf\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u5168\u6a5f\u5668\u5206\u3092\u4e00\u6c17\u306b\u53d6\u5f97\u3057\u3066Git\u7ba1\u7406\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u5143\u3005\u306e\u60f3\u5b9a\u3067\u306f\u3001[\u30eb\u30fc\u30bf\u4e00\u89a7\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f]->[\u30eb\u30fc\u30bf\u30b3\u30f3\u30d5\u30a3\u30b0\u306e\u4e00\u5143\u53d6\u5f97]->[Git\u30ea\u30e2\u30fc\u30c8\u30ec\u30dd\u30b8\u30c8\u30ea\u306bpush] \u307e\u3067\u306e\u4e00\u9023\u306e\u5de5\u7a0b\u3092\u30c4\u30fc\u30eb\u5316\u3057\u3088\u3046\u3068\u8003\u3048\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001Git\u7ba1\u7406\u306f\u904b\u7528\u8005\u304c\u624b\u52d5\u3067\u3059\u308b\u307b\u3046\u304c\u3088\u3044\u3068\u3044\u3046\u8003\u3048\u306e\u3082\u3068\u3001\u30eb\u30fc\u30bf\u30b3\u30f3\u30d5\u30a3\u30b0\u306e\u4e00\u5143\u53d6\u5f97\u3059\u308b\u90e8\u5206\u3060\u3051\u3092\u5207\u308a\u51fa\u3057\u3066\u30c4\u30fc\u30eb\u5316\u3057\u307e\u3057\u305f\u3002\n\u30eb\u30fc\u30bf\u30b3\u30f3\u30d5\u30a3\u30b0\u53d6\u5f97\u3060\u3051\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u3053\u3068\u3067\u30c4\u30fc\u30eb\u81ea\u4f53\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u3063\u305f\u3053\u3068\u306b\u52a0\u3048\u3066\u3001\u7d50\u679c\u7684\u306b\u4ed6\u306e\u30c4\u30fc\u30eb\u3068\u306e\u9023\u643a\u304c\u3057\u3084\u3059\u304f\u306a\u3063\u305f\u3088\u3046\u306b\u611f\u3058\u3066\u3044\u307e\u3059\u3002\n\n\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ngithub\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304d\u307e\u3059\u3002\ngit clone git@github.com:taijiji/ConfigCollector.git\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30c4\u30fc\u30eb\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\ncd ConfigCollector\n\npip\u3092\u4f7f\u3063\u3066\u95a2\u9023\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n - pip\u672a\u4f7f\u7528\u306e\u5834\u5408\u306f\u3001\u4e8b\u524d\u306bpip\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\npip install -r requirements.txt\n\n\u4ee5\u4e0a\u3067\u6e96\u5099\u5b8c\u4e86\u3067\u3059\u3002\n\n\u30c4\u30fc\u30eb\u306e\u4f7f\u3044\u65b9\n\"get_router_config.py\"\u306b\u5bfe\u3057\u3066\u3001JSON\u5f62\u5f0f\u3067\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30bf\u4e00\u89a7\u60c5\u5831\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\npython get_router_config.py [json file]\n\n\u30eb\u30fc\u30bf\u4e00\u89a7\u60c5\u5831\u306ejson file\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u3001\u5168\u30eb\u30fc\u30bf\u306b\u5bfe\u3057\u3066SSH\u7d4c\u7531\u3067\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nmy_router.json\n[\n    {\n        \"hostname\" : \"router1\",\n        \"username\" : \"user1\",\n        \"password\" : \"aaabbbccc\",\n        \"ipv4\"     : \"192.168.0.1\",\n        \"os\"       : \"JUNOS\"\n    },\n    {\n        \"hostname\" : \"router2\",\n        \"username\" : \"user2\",\n        \"password\" : \"aaabbbccc\",\n        \"ipv4\"     : \"192.168.0.2\",\n        \"os\"       : \"IOS-XR\"\n    },\n    {\n        \"hostname\" : \"router3\",\n        \"username\" : \"user3\",\n        \"password\" : \"aaabbbccc\",\n        \"ipv4\"     : \"192.168.0.3\",\n        \"os\"       : \"IOS\"\n    }\n]\n\n\n\u30eb\u30fc\u30bfOS\u306f\u624b\u5143\u3067\u30c6\u30b9\u30c8\u3067\u304d\u305f\u3082\u306e\u3060\u3051\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n- JUNOS\n- IOS\n- IOS-XE\n- IOS-XR\n\n\u51fa\u529b\u3055\u308c\u308b\u3082\u306e\n\u30c4\u30fc\u30eb\u3092\u5b9f\u884c\u3057\u3066\u6210\u529f\u3059\u308b\u3068\u3001\"router_config\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u5404\u30eb\u30fc\u30bf\u3054\u3068\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u300c\u30eb\u30fc\u30bf\u30db\u30b9\u30c8\u540d.txt\u300d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001\u4e0a\u8a18\u306e\"my_router.json\"\u30d5\u30a1\u30a4\u30eb\u3067\u5b9f\u884c\u3055\u305b\u305f\u5834\u5408\u306e\u7d50\u679c\u3067\u3059\u3002\n$ ls router_config\nrouter1.txt  router2.txt  router3.txt\n\n$ less router_config/router1.txt\n\nshow configuration | no-more\n## Last commit: 2015-05-01 17:00:00 JST by user1\nversion 10.x.x;\nsystem {\n    host-name router1;\n    time-zone Asia/Tokyo;\n(snip)\n\n\u6700\u5f8c\u306b\u7ba1\u7406\u8005\u304c\u624b\u52d5\u3067\u3001\"router_config\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4e38\u3054\u3068[git add]->[git commit]->[git push]\u3092\u5b9f\u65bd\u3057\u3066Github\u3084Gitlab\u306a\u3069\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u3067\u3001\u30eb\u30fc\u30bf\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u4e00\u5143\u7684\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\u53c2\u8003\u307e\u3067\u306b\u30b3\u30fc\u30c9\u3092\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u5168\u4f53\u7684\u306b\u305d\u3053\u307e\u3067\u96e3\u3057\u3044\u3053\u3068\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u30eb\u30fc\u30bf\u3078\u306eSSH + \u60c5\u5831\u53d6\u5f97\u306fExscript \u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nSSH\u30c4\u30fc\u30eb\u3067\u306fexpect\u304c\u6709\u540d\u3067\u3059\u304c\u3001Exscript\u306fLinux/Unix\u306e\u4ed6\u306b\u3082\u3001IOS, IOS-XR, JunOS, VRP,\u306a\u3069\u306b\u5bfe\u5fdc\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30eb\u30fc\u30bf\u3092\u5236\u5fa1\u3059\u308b\u969b\u306b\u5225\u9014\u30eb\u30fc\u30bf\u7528\u306b\u69cb\u6587\u89e3\u6790\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30eb\u30fc\u30bf\u64cd\u4f5c\u3092\u547c\u3073\u51fa\u3059\u30d5\u30a1\u30a4\u30eb\n\nget_router_config.py\n#! /usr/bin/env python\nimport sys\nimport traceback\nimport json\n\nfrom ssh_router import Router\n\n# Open json input file\ntry:\n    # argument is routers' information with JSON formt.\n    input_filename = sys.argv[1]\n    input_file = open(input_filename ,'r')\n    print 'Reading router info from \"' + input_filename + '\"...' \nexcept ( IOError, IndexError):\n    print 'Cannot open JSON file.'\n    print 'Please use bellow: \" python get_router_config [JSON file] \" '\n    sys.exit()\nelse:\n    router_info_json = input_file.read()\n    input_file.close()\n\n# Convert format from json to dictionary_type\ntry:\n    router_info = json.loads(router_info_json)\nexcept ValueError as error:\n    print 'JSON format error : '\n    print router_info_json\n    print error\n    sys.exit()\n\n# Login and get config each routers using ssh\nfor num in range( len(router_info) ):\n    router = Router( router_info[num] )\n\n    # Login Router\n    print 'Accessing router: ' + router_info[num]['hostname'] + '...'\n    try:\n        router.login()\n        router_config = router.get_config()\n    except:\n        print 'Router login error'\n        print router_info[num]\n        router.logout()\n        sys.exit()\n\n    # Get config of Router\n    try:\n        router_config = router.get_config()\n    except:\n        print 'Router get configuration error'\n        print router_info[num]\n        router.logout()\n        sys.exit()\n    else:\n        router.logout()\n\n    # Create output file written config\n    try:\n        output_filename = 'router_config/' + router_info[num]['hostname'] + '.txt'\n        print 'Writing output file \"' + output_filename + '\"...'\n    except AtributeError:\n        print 'cannot read dictionary of router_info[' + num + '][hostname]'\n        sys.exit()\n\n    try:\n        output_file = open ( output_filename, 'w')\n    except:\n        print 'cannot open \"' + output_filename + '\"'\n        output_file.close\n        sys.exit()\n    else:\n        output_file.write( router_config )\n        output_file.close\n\n    print 'Success to create \"'  + output_filename + '\" !'\n\n\n\n\u30eb\u30fc\u30bf\u3078\u306e\u5236\u5fa1\u3092\u69cb\u6210\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n\u3053\u3053\u3067\u306f\u307b\u3068\u3093\u3069Exscript\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\nssh_router.py\n! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nfrom Exscript.protocols import SSH2\nfrom Exscript.Account import Account\n\nclass Router:\n    def __init__(self, router_info):\n        self.hostname   = router_info['hostname']\n        self.username   = router_info['username']\n        self.password   = router_info['password']\n        self.ipv4           = router_info['ipv4']\n        self.os              = router_info['os']\n\n    def login(self):\n        self.session = SSH2()\n        self.session.connect(self.ipv4)\n        self.session.login( Account(name=self.username, password=self.password) )\n\n    def logout(self):\n        if self.session :\n            self.session.send('exit\\r')\n            self.session.close()\n        else:\n            raise AttributeError( 'cannot find a living session.' )\n\n    def get_config(self):\n        if( self.os=='IOS-XR' or self.os=='IOS' or self.os=='IOS-XE'):\n            self.session.execute('terminal length 0')\n            self.session.execute('show running-config')\n            result = self.session.response\n        elif( self.os == 'JUNOS'):\n            self.session.execute('show configuration | no-more')\n            result = self.session.response\n        else:\n            raise ValueError( 'OS is unknown value. Please describe from  JUNOS / IOS / IOS-XE / IOS-XR.' )\n\n        return result\n\n\n# \u6982\u8981\n\u30eb\u30fc\u30bf\u7fa4\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u4e00\u5143\u53d6\u5f97\u3059\u308b\u30c4\u30fc\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\u4f5c\u3063\u305f\u30c4\u30fc\u30eb\u306fgithub\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/taijiji/ConfigCollector\n\n#\u4f5c\u3063\u305f\u52d5\u6a5f\n\u7ba1\u7406\u3057\u3066\u3044\u308b\u30eb\u30fc\u30bf\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u5168\u6a5f\u5668\u5206\u3092\u4e00\u6c17\u306b\u53d6\u5f97\u3057\u3066Git\u7ba1\u7406\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u5143\u3005\u306e\u60f3\u5b9a\u3067\u306f\u3001[\u30eb\u30fc\u30bf\u4e00\u89a7\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f]->[\u30eb\u30fc\u30bf\u30b3\u30f3\u30d5\u30a3\u30b0\u306e\u4e00\u5143\u53d6\u5f97]->[Git\u30ea\u30e2\u30fc\u30c8\u30ec\u30dd\u30b8\u30c8\u30ea\u306bpush] \u307e\u3067\u306e\u4e00\u9023\u306e\u5de5\u7a0b\u3092\u30c4\u30fc\u30eb\u5316\u3057\u3088\u3046\u3068\u8003\u3048\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001Git\u7ba1\u7406\u306f\u904b\u7528\u8005\u304c\u624b\u52d5\u3067\u3059\u308b\u307b\u3046\u304c\u3088\u3044\u3068\u3044\u3046\u8003\u3048\u306e\u3082\u3068\u3001\u30eb\u30fc\u30bf\u30b3\u30f3\u30d5\u30a3\u30b0\u306e\u4e00\u5143\u53d6\u5f97\u3059\u308b\u90e8\u5206\u3060\u3051\u3092\u5207\u308a\u51fa\u3057\u3066\u30c4\u30fc\u30eb\u5316\u3057\u307e\u3057\u305f\u3002\n\u30eb\u30fc\u30bf\u30b3\u30f3\u30d5\u30a3\u30b0\u53d6\u5f97\u3060\u3051\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u3053\u3068\u3067\u30c4\u30fc\u30eb\u81ea\u4f53\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u3063\u305f\u3053\u3068\u306b\u52a0\u3048\u3066\u3001\u7d50\u679c\u7684\u306b\u4ed6\u306e\u30c4\u30fc\u30eb\u3068\u306e\u9023\u643a\u304c\u3057\u3084\u3059\u304f\u306a\u3063\u305f\u3088\u3046\u306b\u611f\u3058\u3066\u3044\u307e\u3059\u3002\n\n# \u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ngithub\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304d\u307e\u3059\u3002\n\n```\ngit clone git@github.com:taijiji/ConfigCollector.git\n```\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30c4\u30fc\u30eb\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n```\ncd ConfigCollector\n```\n\npip\u3092\u4f7f\u3063\u3066\u95a2\u9023\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n - pip\u672a\u4f7f\u7528\u306e\u5834\u5408\u306f\u3001\u4e8b\u524d\u306bpip\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\npip install -r requirements.txt\n```\n\n\u4ee5\u4e0a\u3067\u6e96\u5099\u5b8c\u4e86\u3067\u3059\u3002\n\n# \u30c4\u30fc\u30eb\u306e\u4f7f\u3044\u65b9\n\"get_router_config.py\"\u306b\u5bfe\u3057\u3066\u3001JSON\u5f62\u5f0f\u3067\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30bf\u4e00\u89a7\u60c5\u5831\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\npython get_router_config.py [json file]\n```\n\n\u30eb\u30fc\u30bf\u4e00\u89a7\u60c5\u5831\u306ejson file\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u3001\u5168\u30eb\u30fc\u30bf\u306b\u5bfe\u3057\u3066SSH\u7d4c\u7531\u3067\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```my_router.json\n[\n    {\n        \"hostname\" : \"router1\",\n        \"username\" : \"user1\",\n        \"password\" : \"aaabbbccc\",\n        \"ipv4\"     : \"192.168.0.1\",\n        \"os\"       : \"JUNOS\"\n    },\n    {\n        \"hostname\" : \"router2\",\n        \"username\" : \"user2\",\n        \"password\" : \"aaabbbccc\",\n        \"ipv4\"     : \"192.168.0.2\",\n        \"os\"       : \"IOS-XR\"\n    },\n    {\n        \"hostname\" : \"router3\",\n        \"username\" : \"user3\",\n        \"password\" : \"aaabbbccc\",\n        \"ipv4\"     : \"192.168.0.3\",\n        \"os\"       : \"IOS\"\n    }\n]\n```\n\n\u30eb\u30fc\u30bfOS\u306f\u624b\u5143\u3067\u30c6\u30b9\u30c8\u3067\u304d\u305f\u3082\u306e\u3060\u3051\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n- JUNOS\n- IOS\n- IOS-XE\n- IOS-XR\n\n# \u51fa\u529b\u3055\u308c\u308b\u3082\u306e\n\u30c4\u30fc\u30eb\u3092\u5b9f\u884c\u3057\u3066\u6210\u529f\u3059\u308b\u3068\u3001\"router_config\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u5404\u30eb\u30fc\u30bf\u3054\u3068\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u300c\u30eb\u30fc\u30bf\u30db\u30b9\u30c8\u540d.txt\u300d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306f\u3001\u4e0a\u8a18\u306e\"my_router.json\"\u30d5\u30a1\u30a4\u30eb\u3067\u5b9f\u884c\u3055\u305b\u305f\u5834\u5408\u306e\u7d50\u679c\u3067\u3059\u3002\n\n```\n$ ls router_config\nrouter1.txt  router2.txt  router3.txt\n```\n\n```\n$ less router_config/router1.txt\n\nshow configuration | no-more\n## Last commit: 2015-05-01 17:00:00 JST by user1\nversion 10.x.x;\nsystem {\n    host-name router1;\n    time-zone Asia/Tokyo;\n(snip)\n```\n\n\u6700\u5f8c\u306b\u7ba1\u7406\u8005\u304c\u624b\u52d5\u3067\u3001\"router_config\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4e38\u3054\u3068[git add]->[git commit]->[git push]\u3092\u5b9f\u65bd\u3057\u3066Github\u3084Gitlab\u306a\u3069\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u3067\u3001\u30eb\u30fc\u30bf\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u4e00\u5143\u7684\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n#\u30b3\u30fc\u30c9\n\u53c2\u8003\u307e\u3067\u306b\u30b3\u30fc\u30c9\u3092\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u5168\u4f53\u7684\u306b\u305d\u3053\u307e\u3067\u96e3\u3057\u3044\u3053\u3068\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u30eb\u30fc\u30bf\u3078\u306eSSH + \u60c5\u5831\u53d6\u5f97\u306f[Exscript]( https://github.com/knipknap/exscript) \u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nSSH\u30c4\u30fc\u30eb\u3067\u306f[expect](http://pexpect.readthedocs.org/en/latest/)\u304c\u6709\u540d\u3067\u3059\u304c\u3001Exscript\u306fLinux/Unix\u306e\u4ed6\u306b\u3082\u3001IOS, IOS-XR, JunOS, VRP,\u306a\u3069\u306b\u5bfe\u5fdc\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30eb\u30fc\u30bf\u3092\u5236\u5fa1\u3059\u308b\u969b\u306b\u5225\u9014\u30eb\u30fc\u30bf\u7528\u306b\u69cb\u6587\u89e3\u6790\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\n\n## JSON\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30eb\u30fc\u30bf\u64cd\u4f5c\u3092\u547c\u3073\u51fa\u3059\u30d5\u30a1\u30a4\u30eb\n\n```python:get_router_config.py\n#! /usr/bin/env python\nimport sys\nimport traceback\nimport json\n\nfrom ssh_router import Router\n\n# Open json input file\ntry:\n    # argument is routers' information with JSON formt.\n    input_filename = sys.argv[1]\n    input_file = open(input_filename ,'r')\n    print 'Reading router info from \"' + input_filename + '\"...' \nexcept ( IOError, IndexError):\n    print 'Cannot open JSON file.'\n    print 'Please use bellow: \" python get_router_config [JSON file] \" '\n    sys.exit()\nelse:\n    router_info_json = input_file.read()\n    input_file.close()\n\n# Convert format from json to dictionary_type\ntry:\n    router_info = json.loads(router_info_json)\nexcept ValueError as error:\n    print 'JSON format error : '\n    print router_info_json\n    print error\n    sys.exit()\n\n# Login and get config each routers using ssh\nfor num in range( len(router_info) ):\n    router = Router( router_info[num] )\n    \n    # Login Router\n    print 'Accessing router: ' + router_info[num]['hostname'] + '...'\n    try:\n        router.login()\n        router_config = router.get_config()\n    except:\n        print 'Router login error'\n        print router_info[num]\n        router.logout()\n        sys.exit()\n\n    # Get config of Router\n    try:\n        router_config = router.get_config()\n    except:\n        print 'Router get configuration error'\n        print router_info[num]\n        router.logout()\n        sys.exit()\n    else:\n        router.logout()\n    \n    # Create output file written config\n    try:\n        output_filename = 'router_config/' + router_info[num]['hostname'] + '.txt'\n        print 'Writing output file \"' + output_filename + '\"...'\n    except AtributeError:\n        print 'cannot read dictionary of router_info[' + num + '][hostname]'\n        sys.exit()\n\n    try:\n        output_file = open ( output_filename, 'w')\n    except:\n        print 'cannot open \"' + output_filename + '\"'\n        output_file.close\n        sys.exit()\n    else:\n        output_file.write( router_config )\n        output_file.close\n\n    print 'Success to create \"'  + output_filename + '\" !'\n```\n\n## \u30eb\u30fc\u30bf\u3078\u306e\u5236\u5fa1\u3092\u69cb\u6210\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n\u3053\u3053\u3067\u306f\u307b\u3068\u3093\u3069Exscript\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n```python:ssh_router.py\n! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nfrom Exscript.protocols import SSH2\nfrom Exscript.Account import Account\n\nclass Router:\n    def __init__(self, router_info):\n        self.hostname   = router_info['hostname']\n        self.username   = router_info['username']\n        self.password   = router_info['password']\n        self.ipv4           = router_info['ipv4']\n        self.os              = router_info['os']\n\n    def login(self):\n        self.session = SSH2()\n        self.session.connect(self.ipv4)\n        self.session.login( Account(name=self.username, password=self.password) )\n\n    def logout(self):\n        if self.session :\n            self.session.send('exit\\r')\n            self.session.close()\n        else:\n            raise AttributeError( 'cannot find a living session.' )\n\n    def get_config(self):\n        if( self.os=='IOS-XR' or self.os=='IOS' or self.os=='IOS-XE'):\n            self.session.execute('terminal length 0')\n            self.session.execute('show running-config')\n            result = self.session.response\n        elif( self.os == 'JUNOS'):\n            self.session.execute('show configuration | no-more')\n            result = self.session.response\n        else:\n            raise ValueError( 'OS is unknown value. Please describe from  JUNOS / IOS / IOS-XE / IOS-XR.' )\n\n        return result\n```\n", "tags": ["Python", "juniper", "Cisco", "Network", "Router"]}