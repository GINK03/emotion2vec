{"context": "\u4eca\u56de\u306fCPU\u306e\u4e2d\u3067\u3082\u300c\u7d14\u7c8b\u306b\u300d\u8a08\u7b97\u3059\u308b\u3068\u3053\u308d\u3001\u52a0\u7b97\u5668\u3092\u4f5c\u308d\u3046\u3002ALU\u3092\u4f5c\u308b!\u3068\u884c\u304d\u305f\u3044\u3068\u3053\u308d\u3060\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089TD4(\u3057\u3064\u3053\u3044\u3088\u3046\u3060\u304c\u300cCPU\u306e\u5275\u308a\u304b\u305f\u300d\u672c\u3067\u88fd\u4f5c\u3055\u308c\u308bCPU)\u3067\u306f\u52a0\u7b97\u5668\u3057\u304b\u306a\u3044\u306e\u3067\u4eca\u306e\u6240\u306f\u8ae6\u3081\u3088\u3046\u3002\n\n1 bit \u5168\u52a0\u7b97\u5668\n\u3082\u306e\u306e\u672c\u3067\u306f\u534a\u52a0\u7b97\u5668\u304b\u3089\u8aac\u660e\u3055\u308c\u308b\u3088\u3046\u3060\u304c\u3001\u3069\u3046\u305b\u4f7f\u308f\u306a\u3044\u306e\u3067\u6700\u521d\u304b\u3089\u5168\u52a0\u7b97\u5668\u3092\u4f5c\u308b\u3002\u307e\u305a\u306f1 bit\u304b\u3089\u3002\n\n\u5165\u529b\u306f\u30012\u3064\u306e\u5024$A$\u3068$B$\u3001\u3042\u3068\u304f\u308a\u4e0a\u304c\u308a$C_i$(carry)\u306e3\u3064\u3001\u51fa\u529b\u306f\u52a0\u7b97\u306e\u7d50\u679c$S$\u3068\u4e0a\u306e\u6841\u3078\u306e\u304f\u308a\u4e0a\u304c\u308a$C$\u3060\u3002\n\u771f\u7406\u5024\u8868\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3060\u308d\u3046\u3002\u4ee5\u4e0b\u306e\u8aac\u660e\u3067\u306f\u5f93\u6765\u306eHI\u3001LO\u306e\u4ee3\u308f\u308a\u306b1\u30680\u3092\u4f7f\u3046\u3053\u3068\u306b\u3059\u308b\u3002\n\n\n\n$A$\n$B$\n$C_i$\n$S$\n$C$\n\n\n\n\n0\n0\n0\n0\n0\n\n\n0\n1\n0\n1\n0\n\n\n1\n0\n0\n1\n0\n\n\n1\n1\n0\n0\n1\n\n\n0\n0\n1\n1\n0\n\n\n0\n1\n1\n0\n1\n\n\n1\n0\n1\n0\n1\n\n\n1\n1\n1\n1\n1\n\n\n\n\u4f8b\u306b\u3088\u3063\u3066\u3001\u3053\u308c\u3092S\u3068C\u306b\u3064\u3044\u3066\u305d\u308c\u305e\u308c\u30ab\u30eb\u30ce\u30fc\u56f3\u3092\u63cf\u3044\u3066\u8003\u3048\u308b\u3068\u3001\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u3055\u308c\u308b(\u9762\u5012\u306a\u306e\u3067\u9014\u4e2d\u306e\u8a08\u7b97\u306f\u7701\u7565\u3059\u308b)\u3002\n$\nS= C_i \\oplus (A \\oplus B)\n$\n$\nC= A \\cdot B + C_i \\cdot (A \\oplus B)\n$\n\u30b3\u30fc\u30c9\u306f\u3053\u306e\u5f0f\u3092\u305d\u306e\u307e\u307e\u8868\u3057\u3066\u307f\u305f\u3002\n{- |\n  1 bit full adder\n\n  IN : [Ci,A,B]\n  OUT: [S,C]\n\n    Ci  : carry in\n    A,B : value\n    S   : answer\n    C   : carry out\n-}\n\nlc_adder1 :: LogicCircuit\nlc_adder1 (ci:a:b:_) = [s, c]\n  where\n    a_xor_b = a <+> b\n    s = ci <+> a_xor_b\n    c = (a &> b) |> (ci &> a_xor_b)\n\n\u5168\u52a0\u7b97\u5668\u306f\u5927\u3057\u305f\u56de\u8def\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3082\u3059\u3093\u306a\u308a\u3068\u901a\u3063\u305f\u3002\n>>> lc_adder1 [sLO, sLO, sLO] == [sLO, sLO]\nTrue\n>>> lc_adder1 [sLO, sLO, sHI] == [sHI, sLO]\nTrue\n>>> lc_adder1 [sLO, sHI, sLO] == [sHI, sLO]\nTrue\n>>> lc_adder1 [sLO, sHI, sHI] == [sLO, sHI]\nTrue\n>>> lc_adder1 [sHI, sLO, sLO] == [sHI, sLO]\nTrue\n>>> lc_adder1 [sHI, sLO, sHI] == [sLO, sHI]\nTrue\n>>> lc_adder1 [sHI, sHI, sLO] == [sLO, sHI]\nTrue\n>>> lc_adder1 [sHI, sHI, sHI] == [sHI, sHI]\nTrue\n\n\n4 bit \u52a0\u7b97\u5668\n1 bit \u5168\u52a0\u7b97\u5668\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u3053\u308c\u3092\u6570\u73e0\u3064\u306a\u304e\u306b\u3059\u308c\u3070$n$ bit\u306e\u52a0\u7b97\u5668\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u672cCPU(TD4)\u306f\u30ec\u30b8\u30b9\u30bf\u304c4 bit\u306a\u306e\u30674 bit \u52a0\u7b97\u5668\u3092\u4f5c\u308d\u3046\u3002\u8a00\u308f\u305a\u3082\u304c\u306a\u3060\u304c\u3001\u5168\u52a0\u7b97\u5668\u3092\u6b21\u306e\u3088\u3046\u306b\u3064\u306a\u3052\u308c\u3070\u826f\u3044\u3002\u5165\u529b$A_n$\u3001$B_n$\u304a\u3088\u3073$C_i$\u3001\u51fa\u529b\u304c$S_n$\u3068$C$\u3060\u3002\n\n\u3088\u3063\u3066\u3001\u5148\u306b\u4f5c\u3063\u305f\u5168\u52a0\u7b97\u5668(lc_adder1)\u3092\u3053\u306e\u56f3\u306e\u3068\u304a\u308a\u306b\u3064\u306a\u3052\u3066\u8a08\u7b97\u3059\u308c\u3070\u3088\u3044\u306e\u3060\u304c\u3001\u6570\u73e0\u3064\u306a\u304e\u3060\u304b\u3089\u3053\u308c\u306f\u518d\u5e30\u3067\u8868\u73fe\u3067\u304d\u305d\u3046\u3060\u3002\u307e\u305a\u518d\u5e30\u51e6\u7406\u306e\u672c\u4f53\u304b\u3089\u8003\u3048\u308b\u3002\u5165\u529b\u306f$n$ bit\u306e$A$\u3068$B$\u3060\u304c\u3001\u305d\u308c\u3089\u306e\u540c\u3058\u6841\u306e\u5024\u3092\u7d44\u306b\u3057\u305f\u30ea\u30b9\u30c8\u3092\u7528\u610f\u3057\u3088\u3046\u3002\u3053\u308c\u3092\u9806\u306b\u52a0\u7b97\u5668\u306b\u5165\u308c\u3001\u5404\u6841\u306e\u7d50\u679c$S_i$\u3092\u6c42\u3081\u305f\u3044\u3002\u5927\u96d1\u628a\u306b\u306f\u6b21\u306e\u901a\u308a\u3002\n[(a0,b0), (a1,b1), ... , (an,bn)] \u2192 [s0,s1, ... , sn]\n\n\u305f\u3060\u3057\u3001\u304f\u308a\u4e0a\u304c\u308a(carry)\u304c\u3042\u308b\u306e\u3067\u5c11\u3005\u8907\u96d1\u306b\u306a\u308b\u3002\u304f\u308a\u4e0a\u304c\u308a\u3082\u542b\u3081\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u3001\u305d\u306e\u6841\u306b\u8db3\u3057\u8fbc\u307f\u305f\u3044carry\u3082\u5f15\u6570\u3067\u4e0e\u3048\u308b\u3002\u3055\u3089\u306b\u3001\u8a08\u7b97\u7d50\u679c$S$\u3092\u6b21\u306b\u6e21\u3057\u3066\u3044\u304f\u306e\u3067\u3001\u3053\u308c\u3082\u5f15\u6570\u306b\u3059\u308b\u3002\u3053\u308c\u3089\u3092\u8e0f\u307e\u3048\u308b\u3068\u3001\u3064\u304e\u306e\u3088\u3046\u306a\u95a2\u6570adder_n\u304c\u3067\u304d\u308b\u3002\n{-\n  IN : Ci, [Si], [(Ai,Bi)]\n  OUT: [Si,C]\n\n    Ci    : carry in\n    Ai, Bi: value\n    Si    : Answer\n    C     : carry out\n-}\n\nadder_n :: Bin -> [Bin] -> [(Bin, Bin)] -> [Bin]\nadder_n ci ss [] = [ci] ++ ss\nadder_n ci ss ((a, b):ds) = adder_n c (s:ss) ds\n  where\n    [s, c] = lc_adder1 [ci, a, b]\n\n$A$\u3068$B$\u306e\u5404\u6841\u306e\u7d44\u306e\u30ea\u30b9\u30c8\u3092\u5148\u982d\u304b\u3089\u4e00\u7d44\u53d6\u308a\u51fa\u3057\u3066\u3001carry\u3068\u5408\u308f\u305b\u3066\u52a0\u7b97\u3059\u308b\u3002\u6b8b\u308a\u306e\u30ea\u30b9\u30c8\u3068\u8a08\u7b97\u7d50\u679c\u3092\u4f7f\u3063\u3066adder_n\u3092\u547c\u51fa\u3059(\u518d\u5e30)\u3002\u51e6\u7406\u3059\u308b\u30ea\u30b9\u30c8\u304c\u306a\u304f\u306a\u3063\u305f\u3089\u3001$S$\u306e\u524d\u306b\u6700\u5f8c\u306e\u304f\u308a\u4e0a\u304c\u308a\u3092\u8ffd\u52a0\u3057\u3066\u7d42\u308f\u308a\u3002\u3053\u306e\u95a2\u6570\u3067\u306f\u300c\u6700\u5f8c\u306e\u6841\u300d\u304c\u5148\u982d\u306b\u6765\u308b\u304b\u3089\u3001\u51fa\u6765\u4e0a\u304c\u3063\u305f$S$\u306e\u30ea\u30b9\u30c8\u306f\u9006\u9806\u306b\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u52a0\u7b97\u5668\u306e\u51fa\u529b\u306f\u3001$S_n$,$C$\u306e\u9806\u306b\u3057\u305f\u3044\u306e\u3067\u3001\u518d\u5e30\u306e\u7d42\u7aef\u3067\u6700\u5f8c\u306e\u304f\u308a\u4e0a\u304c\u308a\u3092\u300c\u5148\u982d\u306b\u8ffd\u52a0\u300d\u3057\u305f\u308f\u3051\u3060\u3002\n\u3042\u3068\u306f\u3001\u3053\u306eadder_n\u3092\u547c\u3073\u51fa\u3059\u300c\u5916\u5074\u300d\u306e\u95a2\u6570\u3092\u4f5c\u308c\u3070\u826f\u3044\u3002lc_adder\u3068\u3059\u308b\u3002\n\u5148\u306eadder_n\u306e\u51fa\u529b\u3092\u9006\u9806\u306b\u3057\u305f\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n[s0,s1, ... , sn, c]\n\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u30b3\u30fc\u30c9\u306b\u3059\u308b\u3068\u6b21\u306e\u901a\u308a\u3002\n{- |\n  n bit full adder\n\n  IN : [A,B]\n  OUT: [S,C]\n\n    A,B : value\n    S   : answer\n    C   : carry out\n-}\n\nlc_adder :: LogicCircuit\nlc_adder ds = reverse $ adder_n sLO [] $ zip a b\n  where\n    l2 = length ds `div` 2\n    a = take l2 ds\n    b = drop l2 ds\n\n\u52a0\u7b97\u5668\u306e\u30d3\u30c3\u30c8\u6570\u3092\u660e\u793a\u7684\u306b\u4e0e\u3048\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3002\u30d3\u30c3\u30c8\u6570\u306f\u3001\u5165\u529b(\u30ea\u30b9\u30c8)\u306e\u9577\u3055\u306e\u534a\u5206\u3068\u3057\u305f\u3002$A_n$\u3068$B_n$\u304c\u7e4b\u304c\u3063\u305f\u30ea\u30b9\u30c8\u3067\u5165\u529b\u3055\u308c\u308b\u524d\u63d0\u3060(4 bit\u306a\u3089\u8981\u7d20\u306f8\u500b\u306e\u306f\u305a)\u3002\u5947\u6570\u500b\u3060\u3063\u305f\u3089\u4f59\u308a\u306f\u7121\u8996\u3055\u308c\u308b\u3002\u3053\u308c\u3067$n$ bit\u52a0\u7b97\u5668\u306e\u5b8c\u6210\u3060\u3002\u30c6\u30b9\u30c8\u3082\u4e0a\u3005\u3060(\u9577\u304f\u306a\u308b\u306e\u3067\u5272\u611b)\u3002\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u5c11\u3005\u8efd\u3081\u306e\u5185\u5bb9\u3060\u3063\u305f\u304c\u3001\u300c\u4e00\u756a\u8a08\u7b97\u6a5f\u3089\u3057\u3044\u56de\u8def\u300d\u3068\u8a00\u3048\u306a\u304f\u3082\u306a\u3044(?)\u52a0\u7b97\u5668\u3092\u4f5c\u3063\u305f\u3002\u5148\u8ff0\u306e\u901a\u308a\u3053\u306eCPU\u306f\u52a0\u7b97\u5668\u3057\u304b\u6301\u305f\u306a\u3044\u306e\u3067\u4e57\u7b97\u5668\u306a\u3069\u306b\u624b\u306f\u51fa\u3055\u306a\u3044\u304c\u3001\u5c06\u6765CPU\u3092\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7\u3059\u308b\u3068\u3057\u305f\u3089\u8981\u691c\u8a0e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u3053\u308c\u3067CPU\u3067\u5fc5\u8981\u3068\u306a\u308b\u8ad6\u7406\u56de\u8def\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u307b\u307c\u51fa\u63c3\u3063\u305f\u3002\u3042\u3068\u6b8b\u3059\u306f\u300c\u672c\u4e38\u300d\u306e\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e\u307f\u3060\u3002\u3060\u304c\u6b21\u56de\u306f\u305d\u306e\u524d\u306bCPU\u306e\u5168\u4f53\u69cb\u6210\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3068\u601d\u3046\u3002\u305d\u306e\u65b9\u304c\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e\u4f5c\u308a\u65b9\u304c\u3088\u304f\u5206\u304b\u308b\u3068\u304a\u3082\u3046\u304b\u3089\u3002\n(\u3053\u3053\u307e\u3067\u306e\u30bd\u30fc\u30b9)\n\u203b \u73fe\u5728\u306e\u30bd\u30fc\u30b9\u306f\u57f7\u7b46\u6642\u70b9\u304b\u3089\u5909\u66f4\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3042\u308a\u3002\n\u4eca\u56de\u306fCPU\u306e\u4e2d\u3067\u3082\u300c\u7d14\u7c8b\u306b\u300d\u8a08\u7b97\u3059\u308b\u3068\u3053\u308d\u3001\u52a0\u7b97\u5668\u3092\u4f5c\u308d\u3046\u3002ALU\u3092\u4f5c\u308b!\u3068\u884c\u304d\u305f\u3044\u3068\u3053\u308d\u3060\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089TD4(\u3057\u3064\u3053\u3044\u3088\u3046\u3060\u304c\u300cCPU\u306e\u5275\u308a\u304b\u305f\u300d\u672c\u3067\u88fd\u4f5c\u3055\u308c\u308bCPU)\u3067\u306f\u52a0\u7b97\u5668\u3057\u304b\u306a\u3044\u306e\u3067\u4eca\u306e\u6240\u306f\u8ae6\u3081\u3088\u3046\u3002\n\n## 1 bit \u5168\u52a0\u7b97\u5668\n\n\u3082\u306e\u306e\u672c\u3067\u306f\u534a\u52a0\u7b97\u5668\u304b\u3089\u8aac\u660e\u3055\u308c\u308b\u3088\u3046\u3060\u304c\u3001\u3069\u3046\u305b\u4f7f\u308f\u306a\u3044\u306e\u3067\u6700\u521d\u304b\u3089\u5168\u52a0\u7b97\u5668\u3092\u4f5c\u308b\u3002\u307e\u305a\u306f1 bit\u304b\u3089\u3002\n\n![adder-1bit.png](https://qiita-image-store.s3.amazonaws.com/0/69542/194c7bcc-4e76-8766-153c-6073af0d5e69.png)\n\n\u5165\u529b\u306f\u30012\u3064\u306e\u5024$A$\u3068$B$\u3001\u3042\u3068\u304f\u308a\u4e0a\u304c\u308a$C_i$(carry)\u306e3\u3064\u3001\u51fa\u529b\u306f\u52a0\u7b97\u306e\u7d50\u679c$S$\u3068\u4e0a\u306e\u6841\u3078\u306e\u304f\u308a\u4e0a\u304c\u308a$C$\u3060\u3002\n\n\u771f\u7406\u5024\u8868\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3060\u308d\u3046\u3002\u4ee5\u4e0b\u306e\u8aac\u660e\u3067\u306f\u5f93\u6765\u306eHI\u3001LO\u306e\u4ee3\u308f\u308a\u306b1\u30680\u3092\u4f7f\u3046\u3053\u3068\u306b\u3059\u308b\u3002\n\n|$A$|$B$|$C_i$|$S$|$C$|\n|:-:|:-:|:-:|:-:|:-:|\n|0|0|0|0|0|\n|0|1|0|1|0|\n|1|0|0|1|0|\n|1|1|0|0|1|\n|0|0|1|1|0|\n|0|1|1|0|1|\n|1|0|1|0|1|\n|1|1|1|1|1|\n\n\u4f8b\u306b\u3088\u3063\u3066\u3001\u3053\u308c\u3092S\u3068C\u306b\u3064\u3044\u3066\u305d\u308c\u305e\u308c\u30ab\u30eb\u30ce\u30fc\u56f3\u3092\u63cf\u3044\u3066\u8003\u3048\u308b\u3068\u3001\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u3055\u308c\u308b(\u9762\u5012\u306a\u306e\u3067\u9014\u4e2d\u306e\u8a08\u7b97\u306f\u7701\u7565\u3059\u308b)\u3002\n\n$\nS= C_i \\oplus (A \\oplus B)\n$\n\n$\nC= A \\cdot B + C_i \\cdot (A \\oplus B)\n$\n\n\u30b3\u30fc\u30c9\u306f\u3053\u306e\u5f0f\u3092\u305d\u306e\u307e\u307e\u8868\u3057\u3066\u307f\u305f\u3002\n\n```haskell\n{- |\n  1 bit full adder\n\n  IN : [Ci,A,B]\n  OUT: [S,C]\n\n    Ci  : carry in\n    A,B : value\n    S   : answer\n    C   : carry out\n-}\n\nlc_adder1 :: LogicCircuit\nlc_adder1 (ci:a:b:_) = [s, c]\n  where\n    a_xor_b = a <+> b\n    s = ci <+> a_xor_b\n    c = (a &> b) |> (ci &> a_xor_b)\n```\n\n\u5168\u52a0\u7b97\u5668\u306f\u5927\u3057\u305f\u56de\u8def\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3082\u3059\u3093\u306a\u308a\u3068\u901a\u3063\u305f\u3002\n\n```haskell\n>>> lc_adder1 [sLO, sLO, sLO] == [sLO, sLO]\nTrue\n>>> lc_adder1 [sLO, sLO, sHI] == [sHI, sLO]\nTrue\n>>> lc_adder1 [sLO, sHI, sLO] == [sHI, sLO]\nTrue\n>>> lc_adder1 [sLO, sHI, sHI] == [sLO, sHI]\nTrue\n>>> lc_adder1 [sHI, sLO, sLO] == [sHI, sLO]\nTrue\n>>> lc_adder1 [sHI, sLO, sHI] == [sLO, sHI]\nTrue\n>>> lc_adder1 [sHI, sHI, sLO] == [sLO, sHI]\nTrue\n>>> lc_adder1 [sHI, sHI, sHI] == [sHI, sHI]\nTrue\n```\n\n## 4 bit \u52a0\u7b97\u5668\n\n1 bit \u5168\u52a0\u7b97\u5668\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u3053\u308c\u3092\u6570\u73e0\u3064\u306a\u304e\u306b\u3059\u308c\u3070$n$ bit\u306e\u52a0\u7b97\u5668\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u672cCPU(TD4)\u306f\u30ec\u30b8\u30b9\u30bf\u304c4 bit\u306a\u306e\u30674 bit \u52a0\u7b97\u5668\u3092\u4f5c\u308d\u3046\u3002\u8a00\u308f\u305a\u3082\u304c\u306a\u3060\u304c\u3001\u5168\u52a0\u7b97\u5668\u3092\u6b21\u306e\u3088\u3046\u306b\u3064\u306a\u3052\u308c\u3070\u826f\u3044\u3002\u5165\u529b$A_n$\u3001$B_n$\u304a\u3088\u3073$C_i$\u3001\u51fa\u529b\u304c$S_n$\u3068$C$\u3060\u3002\n\n![adder-4bit.png](https://qiita-image-store.s3.amazonaws.com/0/69542/35cc6e3d-c689-5fb0-4559-e5ec298b3225.png)\n\n\u3088\u3063\u3066\u3001\u5148\u306b\u4f5c\u3063\u305f\u5168\u52a0\u7b97\u5668(`lc_adder1`)\u3092\u3053\u306e\u56f3\u306e\u3068\u304a\u308a\u306b\u3064\u306a\u3052\u3066\u8a08\u7b97\u3059\u308c\u3070\u3088\u3044\u306e\u3060\u304c\u3001\u6570\u73e0\u3064\u306a\u304e\u3060\u304b\u3089\u3053\u308c\u306f\u518d\u5e30\u3067\u8868\u73fe\u3067\u304d\u305d\u3046\u3060\u3002\u307e\u305a\u518d\u5e30\u51e6\u7406\u306e\u672c\u4f53\u304b\u3089\u8003\u3048\u308b\u3002\u5165\u529b\u306f$n$ bit\u306e$A$\u3068$B$\u3060\u304c\u3001\u305d\u308c\u3089\u306e\u540c\u3058\u6841\u306e\u5024\u3092\u7d44\u306b\u3057\u305f\u30ea\u30b9\u30c8\u3092\u7528\u610f\u3057\u3088\u3046\u3002\u3053\u308c\u3092\u9806\u306b\u52a0\u7b97\u5668\u306b\u5165\u308c\u3001\u5404\u6841\u306e\u7d50\u679c$S_i$\u3092\u6c42\u3081\u305f\u3044\u3002\u5927\u96d1\u628a\u306b\u306f\u6b21\u306e\u901a\u308a\u3002\n\n```haskell\n[(a0,b0), (a1,b1), ... , (an,bn)] \u2192 [s0,s1, ... , sn]\n```\n\n\u305f\u3060\u3057\u3001\u304f\u308a\u4e0a\u304c\u308a(carry)\u304c\u3042\u308b\u306e\u3067\u5c11\u3005\u8907\u96d1\u306b\u306a\u308b\u3002\u304f\u308a\u4e0a\u304c\u308a\u3082\u542b\u3081\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u3001\u305d\u306e\u6841\u306b\u8db3\u3057\u8fbc\u307f\u305f\u3044carry\u3082\u5f15\u6570\u3067\u4e0e\u3048\u308b\u3002\u3055\u3089\u306b\u3001\u8a08\u7b97\u7d50\u679c$S$\u3092\u6b21\u306b\u6e21\u3057\u3066\u3044\u304f\u306e\u3067\u3001\u3053\u308c\u3082\u5f15\u6570\u306b\u3059\u308b\u3002\u3053\u308c\u3089\u3092\u8e0f\u307e\u3048\u308b\u3068\u3001\u3064\u304e\u306e\u3088\u3046\u306a\u95a2\u6570`adder_n`\u304c\u3067\u304d\u308b\u3002\n\n```haskell\n{-\n  IN : Ci, [Si], [(Ai,Bi)]\n  OUT: [Si,C]\n\n    Ci    : carry in\n    Ai, Bi: value\n    Si\t  : Answer\n    C     : carry out\n-}\n\nadder_n :: Bin -> [Bin] -> [(Bin, Bin)] -> [Bin]\nadder_n ci ss [] = [ci] ++ ss\nadder_n ci ss ((a, b):ds) = adder_n c (s:ss) ds\n  where\n    [s, c] = lc_adder1 [ci, a, b]\n```\n\n$A$\u3068$B$\u306e\u5404\u6841\u306e\u7d44\u306e\u30ea\u30b9\u30c8\u3092\u5148\u982d\u304b\u3089\u4e00\u7d44\u53d6\u308a\u51fa\u3057\u3066\u3001carry\u3068\u5408\u308f\u305b\u3066\u52a0\u7b97\u3059\u308b\u3002\u6b8b\u308a\u306e\u30ea\u30b9\u30c8\u3068\u8a08\u7b97\u7d50\u679c\u3092\u4f7f\u3063\u3066`adder_n`\u3092\u547c\u51fa\u3059(\u518d\u5e30)\u3002\u51e6\u7406\u3059\u308b\u30ea\u30b9\u30c8\u304c\u306a\u304f\u306a\u3063\u305f\u3089\u3001$S$\u306e\u524d\u306b\u6700\u5f8c\u306e\u304f\u308a\u4e0a\u304c\u308a\u3092\u8ffd\u52a0\u3057\u3066\u7d42\u308f\u308a\u3002\u3053\u306e\u95a2\u6570\u3067\u306f\u300c\u6700\u5f8c\u306e\u6841\u300d\u304c\u5148\u982d\u306b\u6765\u308b\u304b\u3089\u3001\u51fa\u6765\u4e0a\u304c\u3063\u305f$S$\u306e\u30ea\u30b9\u30c8\u306f\u9006\u9806\u306b\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u52a0\u7b97\u5668\u306e\u51fa\u529b\u306f\u3001$S_n$,$C$\u306e\u9806\u306b\u3057\u305f\u3044\u306e\u3067\u3001\u518d\u5e30\u306e\u7d42\u7aef\u3067\u6700\u5f8c\u306e\u304f\u308a\u4e0a\u304c\u308a\u3092\u300c\u5148\u982d\u306b\u8ffd\u52a0\u300d\u3057\u305f\u308f\u3051\u3060\u3002\n\n\u3042\u3068\u306f\u3001\u3053\u306e`adder_n`\u3092\u547c\u3073\u51fa\u3059\u300c\u5916\u5074\u300d\u306e\u95a2\u6570\u3092\u4f5c\u308c\u3070\u826f\u3044\u3002`lc_adder`\u3068\u3059\u308b\u3002\n\u5148\u306e`adder_n`\u306e\u51fa\u529b\u3092\u9006\u9806\u306b\u3057\u305f\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```\n[s0,s1, ... , sn, c]\n```\n\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u30b3\u30fc\u30c9\u306b\u3059\u308b\u3068\u6b21\u306e\u901a\u308a\u3002\n\n```haskell\n{- |\n  n bit full adder\n\n  IN : [A,B]\n  OUT: [S,C]\n\n    A,B : value\n    S   : answer\n    C   : carry out\n-}\n\nlc_adder :: LogicCircuit\nlc_adder ds = reverse $ adder_n sLO [] $ zip a b\n  where\n    l2 = length ds `div` 2\n    a = take l2 ds\n    b = drop l2 ds\n```\n\n\u52a0\u7b97\u5668\u306e\u30d3\u30c3\u30c8\u6570\u3092\u660e\u793a\u7684\u306b\u4e0e\u3048\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3002\u30d3\u30c3\u30c8\u6570\u306f\u3001\u5165\u529b(\u30ea\u30b9\u30c8)\u306e\u9577\u3055\u306e\u534a\u5206\u3068\u3057\u305f\u3002$A_n$\u3068$B_n$\u304c\u7e4b\u304c\u3063\u305f\u30ea\u30b9\u30c8\u3067\u5165\u529b\u3055\u308c\u308b\u524d\u63d0\u3060(4 bit\u306a\u3089\u8981\u7d20\u306f8\u500b\u306e\u306f\u305a)\u3002\u5947\u6570\u500b\u3060\u3063\u305f\u3089\u4f59\u308a\u306f\u7121\u8996\u3055\u308c\u308b\u3002\u3053\u308c\u3067$n$ bit\u52a0\u7b97\u5668\u306e\u5b8c\u6210\u3060\u3002\u30c6\u30b9\u30c8\u3082\u4e0a\u3005\u3060(\u9577\u304f\u306a\u308b\u306e\u3067\u5272\u611b)\u3002\n\n## \u307e\u3068\u3081\n\n\u4eca\u56de\u306f\u5c11\u3005\u8efd\u3081\u306e\u5185\u5bb9\u3060\u3063\u305f\u304c\u3001\u300c\u4e00\u756a\u8a08\u7b97\u6a5f\u3089\u3057\u3044\u56de\u8def\u300d\u3068\u8a00\u3048\u306a\u304f\u3082\u306a\u3044(?)\u52a0\u7b97\u5668\u3092\u4f5c\u3063\u305f\u3002\u5148\u8ff0\u306e\u901a\u308a\u3053\u306eCPU\u306f\u52a0\u7b97\u5668\u3057\u304b\u6301\u305f\u306a\u3044\u306e\u3067\u4e57\u7b97\u5668\u306a\u3069\u306b\u624b\u306f\u51fa\u3055\u306a\u3044\u304c\u3001\u5c06\u6765CPU\u3092\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7\u3059\u308b\u3068\u3057\u305f\u3089\u8981\u691c\u8a0e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u3053\u308c\u3067CPU\u3067\u5fc5\u8981\u3068\u306a\u308b\u8ad6\u7406\u56de\u8def\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u307b\u307c\u51fa\u63c3\u3063\u305f\u3002\u3042\u3068\u6b8b\u3059\u306f\u300c\u672c\u4e38\u300d\u306e\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e\u307f\u3060\u3002\u3060\u304c\u6b21\u56de\u306f\u305d\u306e\u524d\u306bCPU\u306e\u5168\u4f53\u69cb\u6210\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3068\u601d\u3046\u3002\u305d\u306e\u65b9\u304c\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e\u4f5c\u308a\u65b9\u304c\u3088\u304f\u5206\u304b\u308b\u3068\u304a\u3082\u3046\u304b\u3089\u3002\n\n(\u3053\u3053\u307e\u3067\u306e[\u30bd\u30fc\u30b9](https://github.com/eijian/mkcpu))\n\u203b \u73fe\u5728\u306e\u30bd\u30fc\u30b9\u306f\u57f7\u7b46\u6642\u70b9\u304b\u3089\u5909\u66f4\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3042\u308a\u3002\n", "tags": ["Haskell", "CPU"]}