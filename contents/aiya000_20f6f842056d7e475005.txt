{"context": "\n\nHaskell\u306ethrow\u3067\u304d\u308b\u4f8b\u5916\u578b\u3068\u5024\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4e00\u89a7\n\n\u3053\u306e\u8a18\u4e8b\u306e\u5bfe\u8c61\n\u3000Control.Exception\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u4f8b\u5916\u578b\u3067\u3001\u81ea\u5206\u3067\u3082throw\u3067\u304d\u305d\u3046\u306a\u3082\u306e\u3002\n\u4f8b\u3048\u3070IOException\u306f\u5024\u69cb\u7bc9\u5b50(\u5024\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf)\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u4e00\u89a7\u306b\u542b\u3081\u306a\u3044\u3002\ncatch\u306e\u305f\u3081\u3067\u306f\u306a\u304f\u3001throw\u306e\u305f\u3081\u306e\u578b\u3092\u307e\u3068\u3081\u308b\u3002\n(\u898f\u5b9a\u306e\u4e00\u822c\u7684\u306a\u3001\u3088\u308a\u591a\u304f\u306e\u4f8b\u5916\u578b\u3092\u898b\u305f\u3051\u308c\u3070\u4e0a\u8a18\u306eControl.Exception\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30da\u30fc\u30b8\u3092\u898b\u308c\u3070\u3088\u3044 )\n\u2606\n\u73fe\u4ee3\u306eHaskell\u3067\u306fControl.Exception\u3088\u308a\u3082\u4e00\u822c\u5316\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308bControl.Monad.Catch\n\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u4e00\u822c\u7684\u3067\u3042\u308b(\u3089\u3057\u3044)\u304c\u3001\u4eca\u56de\u7d39\u4ecb\u3059\u308b\u578b\u306f\u305d\u3061\u3089\u5074\u3082\u3060\u3044\u305f\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u8003\u3048\u306a\u3044\u3002\n(Re-exports from Control.Exception\u306e\u7ae0\u3092\u53c2\u7167)\n\n\u4f8b\u5916\u578b\u4e00\u89a7\n\u4ee5\u4e0b\u3001\u3044\u304f\u3089\u304b\u5b9a\u7fa9\u306e\u7c21\u7565\u3067\u8868\u8a18\u3059\u308b\u3002\n\u3053\u306e\u7c21\u7565\u306fthrow\u3059\u308b\u5206\u306b\u306f\u554f\u984c\u306a\u3044\u3088 :D\ndata ArithException = Overflow\n                    | Underflow\n                    | LossOfPrecision\n                    | DivideByZero\n                    | Denormal\n                    | RatioZeroDenominator\n\ndata ArrayException = IndexOutOfBounds String\n                    | UndefinedElement String\n\nnewtype AssertionFailed = AssertionFailed String\n\ndata AsyncException = StackOverflow\n                    | HeapOverflow\n                    | ThreadKilled\n                    | UserInterrupt\n\ndata NonTermination = NonTermination\n\ndata NestedAtomically = NestedAtomically\n\ndata BlockedIndefinitelyOnMVar = BlockedIndefinitelyOnMVar\n\ndata BlockedIndefinitelyOnSTM = BlockedIndefinitelyOnSTM\n\ndata AllocationLimitExceeded = AllocationLimitExceeded\n\ndata Deadlock = Deadlock\n\nnewtype NoMethodError = NoMethodError\n\nnewtype PatternMatchFail = PatternMatchFail String\n\nnewtype RecConError = RecConError String\n\nnewtype RecSelError = RecSelError String\n\nnewtype RecUpdError = RecUpdError\n\ndata ErrorCall = ErrorCallWithLocation String String\n\nnewtype TypeError = TypeError String\n\n\n\u53c2\u8003\u30da\u30fc\u30b8\n\nControl.Exception\nHaskell\u6d41\u306e\u4f8b\u5916\u51e6\u7406\u3092\u5b66\u3076\uff082/4\uff09\n\n# Haskell\u306ethrow\u3067\u304d\u308b\u4f8b\u5916\u578b\u3068\u5024\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4e00\u89a7\n\n## \u3053\u306e\u8a18\u4e8b\u306e\u5bfe\u8c61\n\u3000[`Control.Exception`](https://hackage.haskell.org/package/base-4.9.0.0/docs/Control-Exception.html)\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u4f8b\u5916\u578b\u3067\u3001\u81ea\u5206\u3067\u3082`throw`\u3067\u304d\u305d\u3046\u306a\u3082\u306e\u3002\n\n\u4f8b\u3048\u3070`IOException`\u306f\u5024\u69cb\u7bc9\u5b50(\u5024\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf)\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u4e00\u89a7\u306b\u542b\u3081\u306a\u3044\u3002\n`catch`\u306e\u305f\u3081\u3067\u306f\u306a\u304f\u3001`throw`\u306e\u305f\u3081\u306e\u578b\u3092\u307e\u3068\u3081\u308b\u3002\n(\u898f\u5b9a\u306e\u4e00\u822c\u7684\u306a\u3001\u3088\u308a\u591a\u304f\u306e\u4f8b\u5916\u578b\u3092\u898b\u305f\u3051\u308c\u3070\u4e0a\u8a18\u306e`Control.Exception`\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30da\u30fc\u30b8\u3092\u898b\u308c\u3070\u3088\u3044 )\n\n\u2606\n\u73fe\u4ee3\u306eHaskell\u3067\u306f`Control.Exception`\u3088\u308a\u3082\u4e00\u822c\u5316\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308b[`Control.Monad.Catch`](https://hackage.haskell.org/package/exceptions-0.8.0.2/docs/Control-Monad-Catch.html)\n\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u4e00\u822c\u7684\u3067\u3042\u308b(\u3089\u3057\u3044)\u304c\u3001\u4eca\u56de\u7d39\u4ecb\u3059\u308b\u578b\u306f\u305d\u3061\u3089\u5074\u3082\u3060\u3044\u305f\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u8003\u3048\u306a\u3044\u3002  \n(Re-exports from Control.Exception\u306e\u7ae0\u3092\u53c2\u7167)\n\n\n## \u4f8b\u5916\u578b\u4e00\u89a7\n\u4ee5\u4e0b\u3001\u3044\u304f\u3089\u304b\u5b9a\u7fa9\u306e\u7c21\u7565\u3067\u8868\u8a18\u3059\u308b\u3002  \n\u3053\u306e\u7c21\u7565\u306fthrow\u3059\u308b\u5206\u306b\u306f\u554f\u984c\u306a\u3044\u3088 :D\n\n```haskell\ndata ArithException = Overflow\n                    | Underflow\n                    | LossOfPrecision\n                    | DivideByZero\n                    | Denormal\n                    | RatioZeroDenominator\n\ndata ArrayException = IndexOutOfBounds String\n                    | UndefinedElement String\n\nnewtype AssertionFailed = AssertionFailed String\n\ndata AsyncException = StackOverflow\n                    | HeapOverflow\n                    | ThreadKilled\n                    | UserInterrupt\n\ndata NonTermination = NonTermination\n\ndata NestedAtomically = NestedAtomically\n\ndata BlockedIndefinitelyOnMVar = BlockedIndefinitelyOnMVar\n\ndata BlockedIndefinitelyOnSTM = BlockedIndefinitelyOnSTM\n\ndata AllocationLimitExceeded = AllocationLimitExceeded\n\ndata Deadlock = Deadlock\n\nnewtype NoMethodError = NoMethodError\n\nnewtype PatternMatchFail = PatternMatchFail String\n\nnewtype RecConError = RecConError String\n\nnewtype RecSelError = RecSelError String\n\nnewtype RecUpdError = RecUpdError\n\ndata ErrorCall = ErrorCallWithLocation String String\n\nnewtype TypeError = TypeError String\n```\n\n\n## \u53c2\u8003\u30da\u30fc\u30b8\n- [Control.Exception](https://hackage.haskell.org/package/base-4.9.0.0/docs/Control-Exception.html#t:IOException)\n- [Haskell\u6d41\u306e\u4f8b\u5916\u51e6\u7406\u3092\u5b66\u3076\uff082/4\uff09](http://itpro.nikkeibp.co.jp/article/COLUMN/20081104/318426/?ST=develop&P=2)\n", "tags": ["Haskell", "\u4f8b\u5916", "exception"]}