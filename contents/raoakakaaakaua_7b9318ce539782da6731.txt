{"context": "\n\n\u4f7f\u7528\u90e8\u54c1\nraspberry pi zero\nOLED\u30e2\u30b8\u30e5\u30fc\u30eb\uff080.96/\u767d\u8272/I2C\uff09\nPIR\u30bb\u30f3\u30b5\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb [DSUN-PIR]\n\u5408\u8a08\u30671500\u5186\u3050\u3089\u3044\n\n\u6709\u6a5fEL\u3092\u8cb7\u3046\n\u6700\u8fd1\u3001\u6709\u6a5fEL\u304c\u6c17\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u8cb7\u3063\u3061\u3083\u3063\u305f\u3002\u3081\u3063\u3061\u3083\u5b89\u3044\u3002\n\u8cb7\u3063\u305f\u306e\u306f\u3053\u308c\u3001\nOLED\u30e2\u30b8\u30e5\u30fc\u30eb\uff080.96/\u767d\u8272/I2C\uff09\nhttp://www.aitendo.com/product/14958\n\u305f\u3060\u3001\u6709\u6a5fEL\u306e\u713c\u304d\u4ed8\u304d\u306e\u554f\u984c\u304c\u6016\u3044\u306e\u3067\u4eba\u304c\u3044\u306a\u3044\u6642\u306f\u6d88\u706f\u3055\u305b\u3088\u3046\u3068\u8003\u3048\u305f\u3002\n\uff08\u58ca\u308c\u305f\u3089\u3082\u3046\u4e00\u500b\u8cb7\u3063\u3066\u3082\u3044\u3044\u304b\u306a\uff1f\uff09\n\n\u7aef\u5b50\u90e8\u5206\n\uff14\u3064\u4ed8\u3044\u3066\u3044\u308b\u3002\nVCC\u3068GND\u306f\u305d\u306e\u307e\u3093\u307e\u306e\u901a\u308a\u3001VCC\u306f3.3V\u3067\u3082\u52d5\u304f\u3002\u305f\u3060\u3057\u3001VCC\u3068GND\u306f\u9006\u306b\u3059\u308b\u3068\u5373\u58ca\u308c\u308b\u3089\u3057\u3044\u3002\n\u6b8b\u308a\uff12\u3064\u306fI2C\u63a5\u7d9a\u3001GPIO\u306e3.3v\u4ed8\u8fd1\u306b\u3042\u308b\u306e\u304cI2C\u3002\n\n\nI2C\u8a2d\u5b9a\n\u304a\u304a\u307e\u304b\u306a\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nMake.\nhttp://make.bcde.jp/raspberry-pi/i2c%E3%82%92%E4%BD%BF%E3%81%86%EF%BC%88%E8%A8%AD%E5%AE%9A%E7%B7%A8%EF%BC%89/\n\u7e4b\u3052\u3066\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3001\nsudo i2cdetect -y 1\n     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n00:          -- -- -- -- -- -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- 3c -- -- --\n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\n\n\u63a5\u7d9a\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306e\u30a2\u30c9\u30ec\u30b9\u304c\u73fe\u308c\u308b\u3002\n\n\u6709\u6a5fEL\u306e\u52d5\u304b\u3057\u65b9\n\u4eca\u56de\u4f7f\u3046\u6709\u6a5fEL\u306fSSD1306\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u3042\u308b\u3002\nhttps://learn.adafruit.com/ssd1306-oled-displays-with-raspberry-pi-and-beaglebone-black/overview\n\u6709\u6a5fEL\u3092\u4f7f\u3046\u305f\u3081\u306bAdafruit\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\ngit clone https://github.com/adafruit/Adafruit_Python_SSD1306.git\ncd Adafruit_Python_SSD1306\nsudo python setup.py install\n\n\u3053\u3053\u3067Pillow\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001\nsudo pip install Pillow\n\n\u3053\u306e\u3068\u304dpython\u30e9\u30a4\u30d6\u30e9\u30ea\u3084python-pip\u304c\u5fc5\u8981\u3002\n\n\u6642\u8a08\u672c\u4f53\n\u5b9f\u969b\u306b\u4f5c\u3063\u305f\u6642\u8a08\u306e\u30b3\u30fc\u30c9\u3001\n#!/usr/bin/python\n# coding: UTF\n\nimport math\nimport time\nimport datetime\nimport RPi.GPIO as GPIO\nimport os\n\nimport Adafruit_GPIO.SPI as SPI\nimport Adafruit_SSD1306\n\nfrom PIL import Image\nfrom PIL import ImageFont\nfrom PIL import ImageDraw\n\nRST = 24\ndisp = Adafruit_SSD1306.SSD1306_128_64(rst=RST)\ndisp.begin()\nwidth = disp.width\nheight = disp.height\ndisp.clear()\ndisp.display()\nimage = Image.new('1', (width, height))\ndraw = ImageDraw.Draw(image)\nSENSOR_PIN = 25\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(SENSOR_PIN, GPIO.IN, pull_up_down=GPIO.PUD_UP)\nGPIO.setup(RST ,GPIO.OUT)\n\nwhile True:\n\n  pin_status = GPIO.input(SENSOR_PIN)\n  print pin_status\n  time.sleep(1)\n  while pin_status==1:\n\n            time.sleep(0.2)\n            pin_status = GPIO.input(SENSOR_PIN)\n            print pin_status\n\n            font = ImageFont.truetype('/home/pi/font/OpenSans-Light.ttf', 22, encoding='unic')\n            date_str = datetime.datetime.now().strftime(\" %m/%d %a\")\n            maxwidth, unused = draw.textsize(date_str, font=font)\n            draw.rectangle((0,0,width,height), outline=0, fill=0)\n            x=0\n            for i, c in enumerate(date_str):\n                if x > width:\n                    break\n                if x < -20:\n                    char_width, char_height = draw.textsize(c, font=font)\n                    x += char_width\n                    continue\n                y = 2\n                draw.text((x, y), c, font=font, fill=255)\n                char_width, char_height = draw.textsize(c, font=font)\n                x += char_width\n\n            font = ImageFont.truetype('/home/pi/font/7barP.TTF', 35, encoding='unic')\n            time_str = datetime.datetime.now().strftime(\"%H:%M:%S\")\n            maxwidth, unused = draw.textsize(time_str, font=font)\n            x=2\n            for i, c in enumerate(time_str):\n                if x > width:\n                    break\n                if x < -20:\n                    char_width, char_height = draw.textsize(c, font=font)\n                    x += char_width\n                    continue\n                y = 29\n                draw.text((x, y), c, font=font, fill=255)\n                char_width, char_height = draw.textsize(c, font=font)\n                x += char_width\n\n            disp.image(image)\n            disp.display()\n\n            if pin_status==0:\n                disp.clear()\n                disp.display()\n\n\u4eba\u611f\u30bb\u30f3\u30b5\u306f\nPIR\u30bb\u30f3\u30b5\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb [DSUN-PIR]\nhttp://www.aitendo.com/product/10254\nSENSOR_PIN = 25\u3092\u4f7f\u7528\u3002\u904a\u3073\u65b9\u306f\u2193\u306e\u901a\u308a\nhttp://qiita.com/raoakakaaakaua/items/7f93400a0834b97124bb\n\u69cb\u6210\nimport\u3042\u305f\u308a\n\u2460\u6709\u6a5fEL\u3084\u3089\u4eba\u611f\u30bb\u30f3\u30b5\u30fc\u306e\u8a2d\u5b9a\u3002\n\u2193\nwhile True:\n\u2461\u4eba\u611f\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u306e\u60c5\u5831\u3092\u53d6\u308a\u8fbc\u3080\u3002\n\u2193\nwhile pin_status==1:\n\u2462pin_status==1\u3067\u4eba\u304c\u3044\u308b\u3068\u5224\u65ad\u3057\u3066\u6642\u8a08\u306e\u8868\u793a\u3002\n\u2193\nif pin_status==0:\n\u2463pin_status==0\u3067\u4eba\u304c\u3044\u306a\u3044\u3068\u5224\u65ad\u3057\u3066\u753b\u9762\u306e\u60c5\u5831\u3092\u6d88\u3057\u3066while True\u306b\u623b\u308b\u3002\ndisp.clear()\ndisp.display()\n\n\u6587\u5b57\u30d5\u30a9\u30f3\u30c8\nfont = ImageFont.truetype\n\n\u3053\u3053\u3067\u6587\u5b57\u306e\u5927\u304d\u3055\u3084\u30d5\u30a9\u30f3\u30c8\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\u6642\u8a08\u5411\u304d\u306a\u30d5\u30a9\u30f3\u30c8\u3092\u6301\u3063\u3066\u3053\u308c\u308b\u3068\u898b\u3084\u3059\u3044\u3002\ntime.sleep\u306b\u3064\u3044\u3066\n\u3053\u308c\u304c\u306a\u3044\u3068\u3084\u3063\u3071\u308a\u304d\u3064\u3044\u307f\u305f\u3044\u30011\u6642\u9593\u3050\u3089\u3044\u3059\u308b\u3068\u6642\u8a08\u6b62\u307e\u308b\u3002\n\u96fb\u6d41\u5024\u306e\u6319\u52d5\u304c\u304a\u304b\u3057\u304b\u3063\u305f\u306a...\u3002\n\n\u304a\u305f\u3081\u3057\n\u52d5\u753b\uff08\u624b\u30d6\u30ec\u3084\u3089\u30d4\u30f3\u30c8\u3042\u3063\u3066\u306a\u3044\u3068\u898b\u306b\u304f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3054\u4e86\u627f\uff09\n\n\n\u3082\u3061\u308d\u3093\u4eba\u611f\u30bb\u30f3\u30b5\u30fc\u306f\u691c\u51fa\u9593\u9694\u3068\u691c\u51fa\u7bc4\u56f2\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n\u4f7f\u7528\u611f\n\u6d88\u8cbb\u96fb\u529b\u306f\u305d\u3053\u307e\u3067\u5897\u3048\u3066\u306a\u3044\u3068\u611f\u3058\u308b\u3002\n\u96fb\u6d41\u5024\u306f0.07A\u5897\u52a0\u3057\u305f\u304c\u3001\u6b63\u76f4\u8aa4\u5dee\u304b\u306a\u3002\n\n\u3053\u3093\u3054\n\u65e5\u4ed8\u3092\u65e5\u672c\u8a9e\u8868\u8a18\u306b\u3057\u305f\u3044\u3002\n\u5929\u6c17\u4e88\u5831\u3060\u3057\u305f\u3044\u3002\n\u9069\u5f53\u306a\u6027\u683c\u4e0a\u3001\u52c9\u5f37\u4e0d\u8db3\u306a\u3068\u3053\u308d\u3042\u308a\u307e\u3059\u304c\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n#\u4f7f\u7528\u90e8\u54c1\nraspberry pi zero\nOLED\u30e2\u30b8\u30e5\u30fc\u30eb\uff080.96/\u767d\u8272/I2C\uff09\nPIR\u30bb\u30f3\u30b5\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb [DSUN-PIR]\n\n\u5408\u8a08\u30671500\u5186\u3050\u3089\u3044\n#\u6709\u6a5fEL\u3092\u8cb7\u3046\n\u6700\u8fd1\u3001\u6709\u6a5fEL\u304c\u6c17\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u8cb7\u3063\u3061\u3083\u3063\u305f\u3002\u3081\u3063\u3061\u3083\u5b89\u3044\u3002\n\u8cb7\u3063\u305f\u306e\u306f\u3053\u308c\u3001\n\nOLED\u30e2\u30b8\u30e5\u30fc\u30eb\uff080.96/\u767d\u8272/I2C\uff09\nhttp://www.aitendo.com/product/14958\n\n\u305f\u3060\u3001\u6709\u6a5fEL\u306e\u713c\u304d\u4ed8\u304d\u306e\u554f\u984c\u304c\u6016\u3044\u306e\u3067\u4eba\u304c\u3044\u306a\u3044\u6642\u306f\u6d88\u706f\u3055\u305b\u3088\u3046\u3068\u8003\u3048\u305f\u3002\n\uff08\u58ca\u308c\u305f\u3089\u3082\u3046\u4e00\u500b\u8cb7\u3063\u3066\u3082\u3044\u3044\u304b\u306a\uff1f\uff09\n#\u7aef\u5b50\u90e8\u5206\n\uff14\u3064\u4ed8\u3044\u3066\u3044\u308b\u3002\nVCC\u3068GND\u306f\u305d\u306e\u307e\u3093\u307e\u306e\u901a\u308a\u3001VCC\u306f3.3V\u3067\u3082\u52d5\u304f\u3002\u305f\u3060\u3057\u3001VCC\u3068GND\u306f\u9006\u306b\u3059\u308b\u3068\u5373\u58ca\u308c\u308b\u3089\u3057\u3044\u3002\n\u6b8b\u308a\uff12\u3064\u306fI2C\u63a5\u7d9a\u3001GPIO\u306e3.3v\u4ed8\u8fd1\u306b\u3042\u308b\u306e\u304cI2C\u3002\n\n![alt](http://www.raspberrypi-spy.co.uk/wp-content/uploads/2014/07/Raspberry-Pi-GPIO-Layout-Model-B-Plus-rotated.png)\n\n#I2C\u8a2d\u5b9a\n\n\u304a\u304a\u307e\u304b\u306a\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nMake.\nhttp://make.bcde.jp/raspberry-pi/i2c%E3%82%92%E4%BD%BF%E3%81%86%EF%BC%88%E8%A8%AD%E5%AE%9A%E7%B7%A8%EF%BC%89/\n\u7e4b\u3052\u3066\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3001\n\n```sudo i2cdetect -y 1```\n\n```\n     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n00:          -- -- -- -- -- -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- 3c -- -- --\n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\n```\n\u63a5\u7d9a\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306e\u30a2\u30c9\u30ec\u30b9\u304c\u73fe\u308c\u308b\u3002\n#\u6709\u6a5fEL\u306e\u52d5\u304b\u3057\u65b9\n\u4eca\u56de\u4f7f\u3046\u6709\u6a5fEL\u306fSSD1306\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u3042\u308b\u3002\nhttps://learn.adafruit.com/ssd1306-oled-displays-with-raspberry-pi-and-beaglebone-black/overview\n\n\u6709\u6a5fEL\u3092\u4f7f\u3046\u305f\u3081\u306bAdafruit\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n```\ngit clone https://github.com/adafruit/Adafruit_Python_SSD1306.git\ncd Adafruit_Python_SSD1306\nsudo python setup.py install\n```\n\u3053\u3053\u3067Pillow\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001\n\n```\nsudo pip install Pillow\n```\n\n\u3053\u306e\u3068\u304dpython\u30e9\u30a4\u30d6\u30e9\u30ea\u3084python-pip\u304c\u5fc5\u8981\u3002\n#\u6642\u8a08\u672c\u4f53\n\n\u5b9f\u969b\u306b\u4f5c\u3063\u305f\u6642\u8a08\u306e\u30b3\u30fc\u30c9\u3001\n\n```\n#!/usr/bin/python\n# coding: UTF\n\nimport math\nimport time\nimport datetime\nimport RPi.GPIO as GPIO\nimport os\n\nimport Adafruit_GPIO.SPI as SPI\nimport Adafruit_SSD1306\n\nfrom PIL import Image\nfrom PIL import ImageFont\nfrom PIL import ImageDraw\n\nRST = 24\ndisp = Adafruit_SSD1306.SSD1306_128_64(rst=RST)\ndisp.begin()\nwidth = disp.width\nheight = disp.height\ndisp.clear()\ndisp.display()\nimage = Image.new('1', (width, height))\ndraw = ImageDraw.Draw(image)\nSENSOR_PIN = 25\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(SENSOR_PIN, GPIO.IN, pull_up_down=GPIO.PUD_UP)\nGPIO.setup(RST ,GPIO.OUT)\n\nwhile True:\n\n  pin_status = GPIO.input(SENSOR_PIN)\n  print pin_status\n  time.sleep(1)\n  while pin_status==1:\n\n            time.sleep(0.2)\n            pin_status = GPIO.input(SENSOR_PIN)\n            print pin_status\n\n            font = ImageFont.truetype('/home/pi/font/OpenSans-Light.ttf', 22, encoding='unic')\n            date_str = datetime.datetime.now().strftime(\" %m/%d %a\")\n            maxwidth, unused = draw.textsize(date_str, font=font)\n            draw.rectangle((0,0,width,height), outline=0, fill=0)\n            x=0\n            for i, c in enumerate(date_str):\n                if x > width:\n                    break\n                if x < -20:\n                    char_width, char_height = draw.textsize(c, font=font)\n                    x += char_width\n                    continue\n                y = 2\n                draw.text((x, y), c, font=font, fill=255)\n                char_width, char_height = draw.textsize(c, font=font)\n                x += char_width\n\n            font = ImageFont.truetype('/home/pi/font/7barP.TTF', 35, encoding='unic')\n            time_str = datetime.datetime.now().strftime(\"%H:%M:%S\")\n            maxwidth, unused = draw.textsize(time_str, font=font)\n            x=2\n            for i, c in enumerate(time_str):\n                if x > width:\n                    break\n                if x < -20:\n                    char_width, char_height = draw.textsize(c, font=font)\n                    x += char_width\n                    continue\n                y = 29\n                draw.text((x, y), c, font=font, fill=255)\n                char_width, char_height = draw.textsize(c, font=font)\n                x += char_width\n\n            disp.image(image)\n            disp.display()\n\n            if pin_status==0:\n                disp.clear()\n                disp.display()\n```\n\n\u4eba\u611f\u30bb\u30f3\u30b5\u306f\nPIR\u30bb\u30f3\u30b5\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb [DSUN-PIR]\nhttp://www.aitendo.com/product/10254\nSENSOR_PIN = 25\u3092\u4f7f\u7528\u3002\u904a\u3073\u65b9\u306f\u2193\u306e\u901a\u308a\nhttp://qiita.com/raoakakaaakaua/items/7f93400a0834b97124bb\n\n**\u69cb\u6210**\n\nimport\u3042\u305f\u308a\n\u2460\u6709\u6a5fEL\u3084\u3089\u4eba\u611f\u30bb\u30f3\u30b5\u30fc\u306e\u8a2d\u5b9a\u3002\n\u2193\nwhile True:\n\u2461\u4eba\u611f\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u306e\u60c5\u5831\u3092\u53d6\u308a\u8fbc\u3080\u3002\n\u2193\nwhile pin_status==1:\n\u2462pin_status==1\u3067\u4eba\u304c\u3044\u308b\u3068\u5224\u65ad\u3057\u3066\u6642\u8a08\u306e\u8868\u793a\u3002\n\u2193\nif pin_status==0:\n\u2463pin_status==0\u3067\u4eba\u304c\u3044\u306a\u3044\u3068\u5224\u65ad\u3057\u3066\u753b\u9762\u306e\u60c5\u5831\u3092\u6d88\u3057\u3066while True\u306b\u623b\u308b\u3002\n\n```\ndisp.clear()\ndisp.display()\n```\n\n**\u6587\u5b57\u30d5\u30a9\u30f3\u30c8**\n\n```\nfont = ImageFont.truetype\n```\n\u3053\u3053\u3067\u6587\u5b57\u306e\u5927\u304d\u3055\u3084\u30d5\u30a9\u30f3\u30c8\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\u6642\u8a08\u5411\u304d\u306a\u30d5\u30a9\u30f3\u30c8\u3092\u6301\u3063\u3066\u3053\u308c\u308b\u3068\u898b\u3084\u3059\u3044\u3002\n\n**time.sleep\u306b\u3064\u3044\u3066**\n\u3053\u308c\u304c\u306a\u3044\u3068\u3084\u3063\u3071\u308a\u304d\u3064\u3044\u307f\u305f\u3044\u30011\u6642\u9593\u3050\u3089\u3044\u3059\u308b\u3068\u6642\u8a08\u6b62\u307e\u308b\u3002\n\u96fb\u6d41\u5024\u306e\u6319\u52d5\u304c\u304a\u304b\u3057\u304b\u3063\u305f\u306a...\u3002\n#\u304a\u305f\u3081\u3057\n\u52d5\u753b\uff08\u624b\u30d6\u30ec\u3084\u3089\u30d4\u30f3\u30c8\u3042\u3063\u3066\u306a\u3044\u3068\u898b\u306b\u304f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3054\u4e86\u627f\uff09\n![alt](<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/b6A2pU_KyNY\" frameborder=\"0\" allowfullscreen></iframe>)\n\n[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/b6A2pU_KyNY/0.jpg)](http://www.youtube.com/watch?v=b6A2pU_KyNY)\n\u3082\u3061\u308d\u3093\u4eba\u611f\u30bb\u30f3\u30b5\u30fc\u306f\u691c\u51fa\u9593\u9694\u3068\u691c\u51fa\u7bc4\u56f2\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n#\u4f7f\u7528\u611f\n\u6d88\u8cbb\u96fb\u529b\u306f\u305d\u3053\u307e\u3067\u5897\u3048\u3066\u306a\u3044\u3068\u611f\u3058\u308b\u3002\n\u96fb\u6d41\u5024\u306f0.07A\u5897\u52a0\u3057\u305f\u304c\u3001\u6b63\u76f4\u8aa4\u5dee\u304b\u306a\u3002\n\n#\u3053\u3093\u3054\n\u65e5\u4ed8\u3092\u65e5\u672c\u8a9e\u8868\u8a18\u306b\u3057\u305f\u3044\u3002\n\u5929\u6c17\u4e88\u5831\u3060\u3057\u305f\u3044\u3002\n\n\u9069\u5f53\u306a\u6027\u683c\u4e0a\u3001\u52c9\u5f37\u4e0d\u8db3\u306a\u3068\u3053\u308d\u3042\u308a\u307e\u3059\u304c\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n", "tags": ["Raspberry", "oled", "I2C", "\u4eba\u611f\u30bb\u30f3\u30b5\u30fc"]}