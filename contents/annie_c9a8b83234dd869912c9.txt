{"context": "\n\nMicrosoft Cognitive Services \u3092\u4f7f\u3063\u305f\u8868\u60c5\u5206\u6790 BOT\nMicrosoft Cognitive Services \u306f \u753b\u50cf\u3001\u6587\u7ae0\u3001\u8a00\u8a9e\u3001\u60c5\u5831\u3092\u51e6\u7406\u3059\u308b\u6a5f\u80fd\u3092 API \u7d4c\u7531\u3067\u5229\u7528\u3067\u304d\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\nCognitive Services \u306e\u4e00\u3064\u3067\u3042\u308b Emotion API \u3067\u306f\u3001\u753b\u50cf\u3092\u5206\u6790\u3057\u3066\u4eba\u9593\u306e\u9854\u3084\u305d\u306e\u8868\u60c5\u3092\u6570\u5024\u5316\u3057\u3001\u7d50\u679c\u3092 JSON \u5f62\u5f0f\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f \u30aa\u30f3\u30e9\u30a4\u30f3\u753b\u50cf (URL) \u3092\u5165\u529b\u3059\u308b\u3068\u3001\u9854\u306e\u8868\u793a\u4f4d\u7f6e\u3068\u8868\u60c5\u5206\u6790\u30b9\u30b3\u30a2\u3092\u8868\u793a\u3059\u308b BOT \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30d9\u30fc\u30b9\u306f Microsoft Bot Framework (v3.0) \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5229\u7528\u3057\u3001Cognitive Services Emotion API C# \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u7528\u3044\u3066\u547c\u3073\u51fa\u3057\u3092\u884c\u3044\u307e\u3059\u3002\n\nJavaScript \u3067 Emotion API \u3092\u547c\u3073\u51fa\u3059\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001Emotion API \u00d7 JavaScript \u7de8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e BOT \u30a2\u30d7\u30ea\u306f Bot Framework Channel Emulator \u3092\u4f7f\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u7a3c\u50cd\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u307e\u305f\u3001Web \u516c\u958b & Bot Framework \u306b\u767b\u9332\u3059\u308b\u3068\u3001\u57cb\u3081\u8fbc\u307f\u53ef\u80fd\u306a Web Chat \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n\nBot Framework & Cognitive Services \u5229\u7528\u306b\u5fc5\u8981\u306a\u74b0\u5883\u3001\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306e\u6e96\u5099\n\n\u958b\u767a\u74b0\u5883\n\nVisual Studio 2015\u3001Bot Framework Template & Bot Framework Channel Emulator\n\u7121\u511f\u306e Visual Studio 2015 Community \u3067OK\u306a\u306e\u3067\u3001\u65e2\u5b58\u306e\u74b0\u5883\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nVisual Studio 2015 Community \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30b5\u30a4\u30c8\nVisual Studio 2015 \u7528\u306e C# \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\nBot Framework Channel Emulator (Windows\u7248) \u203bMac/Linux \u306f Console\u7248 \u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\n\nBot Framework \u958b\u767a\u74b0\u5883\u306e\u4f5c\u308a\u65b9\u306f\u3001Microsoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308b BOT \u958b\u767a: Bot Framework \u3092\u4f7f\u3046\u305f\u3081\u306e\u958b\u767a\u74b0\u5883 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\nMicrosoft \u30a2\u30ab\u30a6\u30f3\u30c8\nCognitive Services (\u3068\u5fc5\u8981\u306b\u5fdc\u3058\u3066 Azure) \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306e\u7533\u3057\u8fbc\u307f\u306b\u5fc5\u8981\u3067\u3059\u306e\u3067\u3001\u6301\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u53d6\u5f97\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nMicrosoft \u30a2\u30ab\u30a6\u30f3\u30c8\u767b\u9332\u624b\u7d9a\u304d\n\n\nCognitive Services \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\n\u8a66\u7528\u306f\u7121\u6599\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306e\u624b\u9806\u3067\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u7533\u3057\u8fbc\u307f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u7533\u3057\u8fbc\u307f\u65b9\u6cd5\u306f Microsoft Cognitive Services \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u7533\u3057\u8fbc\u307f\u7de8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\nBOT \u30a2\u30d7\u30ea\u306e\u5b9f\u88c5\n\nBot \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\nVisual Studio \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089 Bot \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210 \u3068\u540c\u3058\u624b\u9806\u3067\u3001\u65b0\u898f Bot \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4eca\u56de\u306f EmotionBot \u3068\u3044\u3046\u540d\u79f0\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nCognitive Services Emotion API \u306e C# \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d (\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u4e0b) \u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001NuGet \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u7ba1\u7406 \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\u53c2\u7167 \u3092\u30af\u30ea\u30c3\u30af\u3057\u3001project oxford \u3068\u5165\u529b\u3057\u3066\u691c\u7d22\u3057\u307e\u3059\u3002Microsoft.ProjectOxford.Emotion \u3092\u9078\u629e\u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\nEmotion API \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3068\u3001\u4f9d\u5b58\u95a2\u4fc2\u306e\u3042\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u5408\u308f\u305b\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001OK \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u7d42\u4e86\u3057\u305f\u3089\u3001NuGet \u306e\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u9589\u3058\u307e\u3059\u3002\n\n\u4f1a\u8a71\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u8a18\u8ff0\nControllers \u30d5\u30a9\u30eb\u30c0\u30fc \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u958b\u304d\u307e\u3059\u3002MessagesController.cs \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u8868\u793a\u3057\u3001\u3053\u3061\u3089\u3092\u7de8\u96c6\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u5192\u982d\u306b\u3001\u5148\u307b\u3069\u8ffd\u52a0\u3057\u305f Microsoft.ProjectOxford.Emotion \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u5408\u308f\u305b\u3066 System.Collections.Generic \u3082\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nMessagesController.cs\nusing Microsoft.ProjectOxford.Emotion;\nusing Microsoft.ProjectOxford.Emotion.Contract;\nusing System.Collections.Generic;\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b Post \u90e8\u5206\u3092\u524a\u9664\u3057\u3001\u4e0b\u8a18\u306e\u901a\u308a\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u3092\u884c\u3046 ConnectorClient \u3092\u751f\u6210\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u56de\u7b54\u3092\u4f5c\u6210\u3057\u3066(Activity.CreateReply)\u3001\u8fd4\u7b54\u3059\u308b(ConnectorClient.Conversations.ReplyToActivityAsync)\u3001\u3068\u3044\u3046\u52d5\u4f5c\u3092\u884c\u3046\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nMessagesController.cs\npublic virtual async Task<HttpResponseMessage> Post([FromBody] Activity activity)\n{\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u3092\u884c\u3046 ConnectorClient \u3092\u751f\u6210\n    ConnectorClient connector = new ConnectorClient(new Uri(activity.ServiceUrl));\n\n    // Emotion API \u306e Subscription Key \u3092\u30bb\u30c3\u30c8\n    // Emotion API \u3092 Call \u3059\u308b EmotionServiceClient \u3092\u751f\u6210\n    // \u5165\u529b\u5024(URL) \u3092\u5143\u306b Emotion API \u3092 Call\n    // \u203b\u6b21\u4ee5\u964d\u306e\u9805\u76ee\u3067\u4f5c\u6210\u3057\u307e\u3059\n\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u7b54 (\u521d\u56de\u3001\u307e\u305f\u306f\u5199\u771f\u5224\u5b9a\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u3068\u304d))\n    Activity reply = activity.CreateReply(\"\u9854\u306e\u8868\u60c5\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\u5199\u771f\u306eURL\u3092\u9001\u3063\u3066\u306d\u3002\");\n\n    // Call \u7d50\u679c\u3092\u5143\u306b \u8fd4\u7b54\u3092\u4f5c\u6210\n    // \u203b\u6b21\u4ee5\u964d\u306e\u9805\u76ee\u3067\u4f5c\u6210\u3057\u307e\u3059\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u304a\u3088\u3073 http \u30b9\u30c6\u30fc\u30bf\u30b9 Accepted(=200) \u3092\u8fd4\u7b54\n    await connector.Conversations.ReplyToActivityAsync(reply);\n    return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n\n}\n\n\nCrtl+S \u307e\u305f\u306f \u30c4\u30fc\u30eb\u30d0\u30fc\u304b\u3089 \u30d5\u30a1\u30a4\u30eb \uff1e (\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u540d)\u306e\u4fdd\u5b58 \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066 MessagesController.cs \u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nBOT \u306e\u52d5\u4f5c\u78ba\u8a8d\n\u3053\u3053\u3067\u4e00\u65e6 BOT \u306e\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\u3001F5 \u307e\u305f\u306f \u30c7\u30d0\u30c3\u30af\uff1e\u30c7\u30d0\u30c3\u30af\u306e\u958b\u59cb \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u304a\u3088\u3073\u8d77\u52d5\u3092\u884c\u3044\u307e\u3059\u3002\u30d6\u30e9\u30a6\u30b6\u304c\u8d77\u52d5\u3057\u3066 Bot Framework \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u3001Bot Framework Channel Emulator \u3092\u8d77\u52d5\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3044\u307e\u3059\u3002\nBot Framework Channel Emulator \u306e\u4e0a\u90e8\u4e2d\u592e\u306b\u3042\u308b Bot Url \u306b\u3001\u8d77\u52d5\u3057\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u3068\u540c\u3058 URL (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f http://localhost:xxxx) \u306b /api/messages \u3092\u8ffd\u52a0\u3057\u305f\u30a2\u30c9\u30ec\u30b9 (http://localhost:xxxx/api/messages) \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4f55\u304b\u6587\u5b57\u3092\u5165\u529b\u3057\u3066\u9001\u4fe1\u3059\u308b\u3068\u3001Activity.CreateReply \u3067\u6307\u5b9a\u3057\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u56de\u7b54\u304c\u8fd4\u4fe1\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nEmotion API \u3092\u547c\u3073\u51fa\u3059\u30ed\u30b8\u30c3\u30af\u306e\u8a18\u8ff0\nEmotion API \u306e \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30ad\u30fc \u3092\u4e88\u3081 emotionApiKey \u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\u305d\u308c\u3092\u4f7f\u3063\u3066 EmotionServiceClient \u3092\u4f5c\u6210\u3001EmotionServiceClient.RecognizeAsync \u3067\u547c\u3073\u51fa\u3057\u3066\u3001\u5f97\u3089\u308c\u308b\u7d50\u679c\u3092 emotionResult \u306b\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nMessagesController.cs\npublic virtual async Task<HttpResponseMessage> Post([FromBody] Activity activity)\n{\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u3092\u884c\u3046 ConnectorClient \u3092\u751f\u6210\n    ConnectorClient connector = new ConnectorClient(new Uri(activity.ServiceUrl));\n\n    // Emotion API \u306e Subscription Key \u3092\u30bb\u30c3\u30c8\n    // \u304a\u6301\u3061\u306e Subscription Key \u3092 YOUR_SUBSCRIPTION_KEY \u90e8\u5206\u306b\u30b3\u30d4\u30fc\u3057\u3066\u304f\u3060\u3055\u3044\n    const string emotionApiKey = \"YOUR_SUBSCRIPTION_KEY\";\n\n    // Emotion API \u3092 Call \u3059\u308b EmotionServiceClient \u3092\u751f\u6210\n    EmotionServiceClient emotionServiceClient = new EmotionServiceClient(emotionApiKey);\n    Emotion[] emotionResult = null;\n\n    // \u5165\u529b\u5024(URL) \u3092\u5143\u306b Emotion API \u3092 Call\n    try\n    {\n        emotionResult = await emotionServiceClient.RecognizeAsync(activity.Text);\n    }\n    catch (Exception e)\n    {\n        emotionResult = null;\n    }\n\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u7b54 (\u521d\u56de\u3001\u307e\u305f\u306f\u5199\u771f\u5224\u5b9a\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u3068\u304d))\n    Activity reply = activity.CreateReply(\"\u9854\u306e\u8868\u60c5\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\u5199\u771f\u306eURL\u3092\u9001\u3063\u3066\u306d\u3002\");\n\n    // Call \u7d50\u679c\u3092\u5143\u306b \u8fd4\u7b54\u3092\u4f5c\u6210\n    // \u203b\u6b21\u4ee5\u964d\u306e\u9805\u76ee\u3067\u4f5c\u6210\u3057\u307e\u3059\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u304a\u3088\u3073 http \u30b9\u30c6\u30fc\u30bf\u30b9 Accepted(=200) \u3092\u8fd4\u7b54\n    await connector.Conversations.ReplyToActivityAsync(reply);\n    return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n\n}\n\n\n\n\u8868\u60c5\u30b9\u30b3\u30a2\u3092\u56de\u7b54\u306b\u30bb\u30c3\u30c8\u3059\u308b\u30ed\u30b8\u30c3\u30af\u306e\u8a18\u8ff0\n\u5f97\u3089\u308c\u305f8\u7a2e\u985e\u306e\u8868\u60c5\u30b9\u30b3\u30a2\u3092 KeyValuePair \u306b\u4ee3\u5165\u3057\u3066\u3001\u30b9\u30b3\u30a2\u6570\u5024\u304c\u4e00\u756a\u5927\u304d\u3044\u3082\u306e\u3092\u53d6\u5f97\u3057\u3066\u56de\u7b54\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\nMessagesController.cs\npublic virtual async Task<HttpResponseMessage> Post([FromBody] Activity activity)\n{\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u3092\u884c\u3046 ConnectorClient \u3092\u751f\u6210\n    :\n    \u4e2d\u7565\n    :\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u7b54 (\u521d\u56de\u3001\u307e\u305f\u306f\u5199\u771f\u5224\u5b9a\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u3068\u304d))\n    Activity reply = activity.CreateReply(\"\u9854\u306e\u8868\u60c5\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\u5199\u771f\u306eURL\u3092\u9001\u3063\u3066\u306d\u3002\");\n\n    // Call \u7d50\u679c\u3092\u5143\u306b \u8fd4\u7b54\u3092\u4f5c\u6210\n    if (emotionResult != null)\n    {\n        //\u8868\u60c5\u30b9\u30b3\u30a2\u3092\u53d6\u5f97\n        Scores emotionScores = emotionResult[0].Scores;\n\n        //\u53d6\u5f97\u3057\u305f\u30b9\u30b3\u30a2\u3092 KeyValuePair \u306b\u4ee3\u5165\u3001\u30b9\u30b3\u30a2\u6570\u5024\u306e\u5927\u304d\u3044\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\n        IEnumerable<KeyValuePair<string, float>> emotionList = new Dictionary<string, float>()\n        {\n            { \"\u6012\u3063\u3066\u308b\", emotionScores.Anger},\n            { \"\u8efd\u8511\u3057\u3066\u308b\", emotionScores.Contempt },\n            { \"\u3046\u3093\u3056\u308a\u3057\u3066\u308b\", emotionScores.Disgust },\n            { \"\u6016\u304c\u3063\u3066\u308b\", emotionScores.Fear },\n            { \"\u697d\u3057\u3044\", emotionScores.Happiness},\n            { \"\u7279\u306b\u306a\u3057\", emotionScores.Neutral},\n            { \"\u60b2\u3057\u3044\", emotionScores.Sadness },\n            { \"\u9a5a\u3044\u3066\u308b\", emotionScores.Surprise}\n        }\n        .OrderByDescending(kv => kv.Value)\n        .ThenBy(kv => kv.Key)\n        .ToList();\n\n        //\u30b9\u30b3\u30a2\u6570\u5024\u306e\u4e00\u756a\u5927\u304d\u3044\u8868\u60c5\u3092\u53d6\u5f97\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u30bb\u30c3\u30c8\n        KeyValuePair<string, float> topEmotion = emotionList.ElementAt(0);\n        string topEmotionKey = topEmotion.Key;\n        float topEmotionScore = topEmotion.Value;\n\n        reply = activity.CreateReply\n            (\n                \"\u9854\u306e\u8868\u60c5\u3092\u5224\u5b9a\u3057\u307e\u3057\u305f\u3002\" \n                + (int)(topEmotionScore * 100) + \"% \" + topEmotionKey + \"\u9854\u3060\u3068\u601d\u3046\u3088\u3002\"\n            );\n    }\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u304a\u3088\u3073 http \u30b9\u30c6\u30fc\u30bf\u30b9 Accepted(=200) \u3092\u8fd4\u7b54\n    :\n    \u4e2d\u7565\n    :\n\n}\n\n\n\u5fd8\u308c\u305a\u306b MessagesController.cs \u3092\u4fdd\u5b58\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u52d5\u4f5c\u78ba\u8a8d\nF5 \u307e\u305f\u306f \u30c7\u30d0\u30c3\u30af\uff1e\u30c7\u30d0\u30c3\u30af\u306e\u958b\u59cb \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u304a\u3088\u3073\u8d77\u52d5\u3092\u884c\u3044\u307e\u3059\u3002\u30d6\u30e9\u30a6\u30b6\u304c\u8d77\u52d5\u3057\u3066 Bot Framework \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u3001Bot Framework Channel Emulator \u3092\u8d77\u52d5\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3044\u307e\u3059\u3002\n\u307e\u305a\u4f55\u304b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5165\u529b\u3059\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u56de\u7b54\u304c\u8fd4\u4fe1\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u753b\u50cf\u306e URL (\u4f8b\u3048\u3070\u3053\u3061\u3089\u2193) \u3092\u30b3\u30d4\u30fc\u3057\u3066\u9001\u4fe1\u3057\u307e\u3059\u3002\nhttps://emotionwebsto.blob.core.windows.net/handson/emotionweb_happiness.jpg\n\u5206\u6790\u7d50\u679c\u306e\u56de\u7b54\u304c\u8fd4\u4fe1\u3055\u308c\u308c\u3070\u3001BOT \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u5b8c\u6210\u3067\u3059\u3002\n\n\nAppendix\n\u540c\u3058\u30bd\u30fc\u30b9\u3092 Azure Logic App \u3067 Web \u516c\u958b\u3057\u3001Bot Framework \u306b\u767b\u9332\u3092\u884c\u3063\u3066\u3001\u5229\u7528\u53ef\u80fd\u306b\u306a\u3063\u305f Web Chat \u3092\u8cbc\u308a\u4ed8\u3051\u3066\u3044\u307e\u3059\u3002\u52d5\u4f5c\u78ba\u8a8d\u306b\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\nhttp://emotionbotsample.azurewebsites.net/\n\nAzure \u3067\u306e Web \u516c\u958b\u3001Bot Framework \u306e\u767b\u9332\u3001Web Chat \u306e\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001Microsoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308b BOT \u958b\u767a: Azure \u3067 Web \u516c\u958b\uff06\u304a\u624b\u8efd Web Chat \u3092\u8a66\u3059 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u305f\u3001\u5b8c\u6210\u5f62\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092 GitHub \u306b\u3066\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/a-n-n-i-e/CognitiveEmotionAPI-EmotionBot\n#Microsoft Cognitive Services \u3092\u4f7f\u3063\u305f\u8868\u60c5\u5206\u6790 BOT\nMicrosoft Cognitive Services \u306f \u753b\u50cf\u3001\u6587\u7ae0\u3001\u8a00\u8a9e\u3001\u60c5\u5831\u3092\u51e6\u7406\u3059\u308b\u6a5f\u80fd\u3092 API \u7d4c\u7531\u3067\u5229\u7528\u3067\u304d\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\nCognitive Services \u306e\u4e00\u3064\u3067\u3042\u308b Emotion API \u3067\u306f\u3001\u753b\u50cf\u3092\u5206\u6790\u3057\u3066\u4eba\u9593\u306e\u9854\u3084\u305d\u306e\u8868\u60c5\u3092\u6570\u5024\u5316\u3057\u3001\u7d50\u679c\u3092 JSON \u5f62\u5f0f\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u306f \u30aa\u30f3\u30e9\u30a4\u30f3\u753b\u50cf (URL) \u3092\u5165\u529b\u3059\u308b\u3068\u3001\u9854\u306e\u8868\u793a\u4f4d\u7f6e\u3068\u8868\u60c5\u5206\u6790\u30b9\u30b3\u30a2\u3092\u8868\u793a\u3059\u308b BOT \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30d9\u30fc\u30b9\u306f Microsoft Bot Framework (v3.0) \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5229\u7528\u3057\u3001Cognitive Services Emotion API C# \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u7528\u3044\u3066\u547c\u3073\u51fa\u3057\u3092\u884c\u3044\u307e\u3059\u3002\n> JavaScript \u3067 Emotion API \u3092\u547c\u3073\u51fa\u3059\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001[Emotion API \u00d7 JavaScript \u7de8](http://qiita.com/annie/items/96b37ef94885510c1b6b) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e BOT \u30a2\u30d7\u30ea\u306f Bot Framework Channel Emulator \u3092\u4f7f\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u7a3c\u50cd\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n![](https://msdnshared.blob.core.windows.net/media/2016/09/bluesky_20160913_01.png)\n\n\u307e\u305f\u3001Web \u516c\u958b & Bot Framework \u306b\u767b\u9332\u3059\u308b\u3068\u3001\u57cb\u3081\u8fbc\u307f\u53ef\u80fd\u306a Web Chat \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n![](https://msdnshared.blob.core.windows.net/media/2016/09/bluesky_20160913_02.png)\n\n#Bot Framework & Cognitive Services \u5229\u7528\u306b\u5fc5\u8981\u306a\u74b0\u5883\u3001\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306e\u6e96\u5099\n\n##\u958b\u767a\u74b0\u5883\n###Visual Studio 2015\u3001Bot Framework Template & Bot Framework Channel Emulator\n\u7121\u511f\u306e Visual Studio 2015 Community \u3067OK\u306a\u306e\u3067\u3001\u65e2\u5b58\u306e\u74b0\u5883\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n[Visual Studio 2015 Community \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30b5\u30a4\u30c8](https://www.visualstudio.com/ja-jp/products/visual-studio-community-vs.aspx)\n[Visual Studio 2015 \u7528\u306e C# \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8](http://aka.ms/bf-bc-vstemplate)\n[Bot Framework Channel Emulator (Windows\u7248)](https://aka.ms/bf-bc-emulator) \u203bMac/Linux \u306f [Console\u7248](https://aka.ms/bfemulator) \u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\n>Bot Framework \u958b\u767a\u74b0\u5883\u306e\u4f5c\u308a\u65b9\u306f\u3001[Microsoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308b BOT \u958b\u767a: Bot Framework \u3092\u4f7f\u3046\u305f\u3081\u306e\u958b\u767a\u74b0\u5883](http://qiita.com/annie/items/edc26c0ee9603e84a2e4#bot-framework-%E3%82%92%E4%BD%BF%E3%81%86%E3%81%9F%E3%82%81%E3%81%AE%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n##Microsoft \u30a2\u30ab\u30a6\u30f3\u30c8\nCognitive Services (\u3068\u5fc5\u8981\u306b\u5fdc\u3058\u3066 Azure) \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306e\u7533\u3057\u8fbc\u307f\u306b\u5fc5\u8981\u3067\u3059\u306e\u3067\u3001\u6301\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u53d6\u5f97\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n>[Microsoft \u30a2\u30ab\u30a6\u30f3\u30c8\u767b\u9332\u624b\u7d9a\u304d](https://www.microsoft.com/ja-jp/msaccount/signup/default.aspx)\n\n##Cognitive Services \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\n\u8a66\u7528\u306f\u7121\u6599\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306e\u624b\u9806\u3067\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u7533\u3057\u8fbc\u307f\u304c\u5fc5\u8981\u3067\u3059\u3002\n>\u7533\u3057\u8fbc\u307f\u65b9\u6cd5\u306f [Microsoft Cognitive Services \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u7533\u3057\u8fbc\u307f\u7de8](http://qiita.com/annie/items/ba6392b7d1a7647adc4b) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\n#BOT \u30a2\u30d7\u30ea\u306e\u5b9f\u88c5\n##Bot \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n[Visual Studio \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089 Bot \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210](http://qiita.com/annie/items/edc26c0ee9603e84a2e4#visual-studio-%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%8B%E3%82%89-bot-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E4%BD%9C%E6%88%90) \u3068\u540c\u3058\u624b\u9806\u3067\u3001\u65b0\u898f Bot \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4eca\u56de\u306f EmotionBot \u3068\u3044\u3046\u540d\u79f0\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n![](https://msdnshared.blob.core.windows.net/media/2016/09/bluesky_20160913_03.png)\n\n\n##Cognitive Services Emotion API \u306e C# \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d (\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u4e0b) \u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001*NuGet \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u7ba1\u7406* \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n![](https://msdnshared.blob.core.windows.net/media/2016/09/bluesky_20160913_04.png)\n\n*\u53c2\u7167* \u3092\u30af\u30ea\u30c3\u30af\u3057\u3001*project oxford* \u3068\u5165\u529b\u3057\u3066\u691c\u7d22\u3057\u307e\u3059\u3002*Microsoft.ProjectOxford.Emotion* \u3092\u9078\u629e\u3057\u3001*\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb* \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n![](https://msdnshared.blob.core.windows.net/media/2016/09/bluesky_20160913_05.png)\n\nEmotion API \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3068\u3001\u4f9d\u5b58\u95a2\u4fc2\u306e\u3042\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u5408\u308f\u305b\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001*OK* \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n![](https://msdnshared.blob.core.windows.net/media/2016/09/bluesky_20160913_06.png)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u7d42\u4e86\u3057\u305f\u3089\u3001NuGet \u306e\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u9589\u3058\u307e\u3059\u3002\n\n##\u4f1a\u8a71\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u8a18\u8ff0\n*Controllers* \u30d5\u30a9\u30eb\u30c0\u30fc \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u958b\u304d\u307e\u3059\u3002*MessagesController.cs* \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u8868\u793a\u3057\u3001\u3053\u3061\u3089\u3092\u7de8\u96c6\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u5192\u982d\u306b\u3001\u5148\u307b\u3069\u8ffd\u52a0\u3057\u305f Microsoft.ProjectOxford.Emotion \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u5408\u308f\u305b\u3066 System.Collections.Generic \u3082\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```MessagesController.cs\nusing Microsoft.ProjectOxford.Emotion;\nusing Microsoft.ProjectOxford.Emotion.Contract;\nusing System.Collections.Generic;\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b Post \u90e8\u5206\u3092\u524a\u9664\u3057\u3001\u4e0b\u8a18\u306e\u901a\u308a\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u3092\u884c\u3046 ConnectorClient \u3092\u751f\u6210\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u56de\u7b54\u3092\u4f5c\u6210\u3057\u3066(Activity.CreateReply)\u3001\u8fd4\u7b54\u3059\u308b(ConnectorClient.Conversations.ReplyToActivityAsync)\u3001\u3068\u3044\u3046\u52d5\u4f5c\u3092\u884c\u3046\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```MessagesController.cs\npublic virtual async Task<HttpResponseMessage> Post([FromBody] Activity activity)\n{\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u3092\u884c\u3046 ConnectorClient \u3092\u751f\u6210\n    ConnectorClient connector = new ConnectorClient(new Uri(activity.ServiceUrl));\n\n    // Emotion API \u306e Subscription Key \u3092\u30bb\u30c3\u30c8\n    // Emotion API \u3092 Call \u3059\u308b EmotionServiceClient \u3092\u751f\u6210\n    // \u5165\u529b\u5024(URL) \u3092\u5143\u306b Emotion API \u3092 Call\n    // \u203b\u6b21\u4ee5\u964d\u306e\u9805\u76ee\u3067\u4f5c\u6210\u3057\u307e\u3059\n\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u7b54 (\u521d\u56de\u3001\u307e\u305f\u306f\u5199\u771f\u5224\u5b9a\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u3068\u304d))\n    Activity reply = activity.CreateReply(\"\u9854\u306e\u8868\u60c5\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\u5199\u771f\u306eURL\u3092\u9001\u3063\u3066\u306d\u3002\");\n\n    // Call \u7d50\u679c\u3092\u5143\u306b \u8fd4\u7b54\u3092\u4f5c\u6210\n    // \u203b\u6b21\u4ee5\u964d\u306e\u9805\u76ee\u3067\u4f5c\u6210\u3057\u307e\u3059\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u304a\u3088\u3073 http \u30b9\u30c6\u30fc\u30bf\u30b9 Accepted(=200) \u3092\u8fd4\u7b54\n    await connector.Conversations.ReplyToActivityAsync(reply);\n    return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n\n}\n```\n\nCrtl+S \u307e\u305f\u306f \u30c4\u30fc\u30eb\u30d0\u30fc\u304b\u3089 *\u30d5\u30a1\u30a4\u30eb* \uff1e *(\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u540d)\u306e\u4fdd\u5b58* \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066 *MessagesController.cs* \u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n###BOT \u306e\u52d5\u4f5c\u78ba\u8a8d\n\u3053\u3053\u3067\u4e00\u65e6 BOT \u306e\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\u3001F5 \u307e\u305f\u306f \u30c7\u30d0\u30c3\u30af\uff1e\u30c7\u30d0\u30c3\u30af\u306e\u958b\u59cb \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u304a\u3088\u3073\u8d77\u52d5\u3092\u884c\u3044\u307e\u3059\u3002\u30d6\u30e9\u30a6\u30b6\u304c\u8d77\u52d5\u3057\u3066 Bot Framework \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u3001Bot Framework Channel Emulator \u3092\u8d77\u52d5\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3044\u307e\u3059\u3002\nBot Framework Channel Emulator \u306e\u4e0a\u90e8\u4e2d\u592e\u306b\u3042\u308b *Bot Url* \u306b\u3001\u8d77\u52d5\u3057\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u3068\u540c\u3058 URL (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f http://localhost:xxxx) \u306b **/api/messages** \u3092\u8ffd\u52a0\u3057\u305f\u30a2\u30c9\u30ec\u30b9 (http://localhost:xxxx/api/messages) \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4f55\u304b\u6587\u5b57\u3092\u5165\u529b\u3057\u3066\u9001\u4fe1\u3059\u308b\u3068\u3001Activity.CreateReply \u3067\u6307\u5b9a\u3057\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u56de\u7b54\u304c\u8fd4\u4fe1\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n![](https://msdnshared.blob.core.windows.net/media/2016/09/bluesky_20160913_07.png)\n\n\n##Emotion API \u3092\u547c\u3073\u51fa\u3059\u30ed\u30b8\u30c3\u30af\u306e\u8a18\u8ff0\nEmotion API \u306e \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30ad\u30fc \u3092\u4e88\u3081 emotionApiKey \u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\u305d\u308c\u3092\u4f7f\u3063\u3066 EmotionServiceClient \u3092\u4f5c\u6210\u3001EmotionServiceClient.RecognizeAsync \u3067\u547c\u3073\u51fa\u3057\u3066\u3001\u5f97\u3089\u308c\u308b\u7d50\u679c\u3092 emotionResult \u306b\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```MessagesController.cs\npublic virtual async Task<HttpResponseMessage> Post([FromBody] Activity activity)\n{\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u3092\u884c\u3046 ConnectorClient \u3092\u751f\u6210\n    ConnectorClient connector = new ConnectorClient(new Uri(activity.ServiceUrl));\n\n    // Emotion API \u306e Subscription Key \u3092\u30bb\u30c3\u30c8\n    // \u304a\u6301\u3061\u306e Subscription Key \u3092 YOUR_SUBSCRIPTION_KEY \u90e8\u5206\u306b\u30b3\u30d4\u30fc\u3057\u3066\u304f\u3060\u3055\u3044\n    const string emotionApiKey = \"YOUR_SUBSCRIPTION_KEY\";\n\n    // Emotion API \u3092 Call \u3059\u308b EmotionServiceClient \u3092\u751f\u6210\n    EmotionServiceClient emotionServiceClient = new EmotionServiceClient(emotionApiKey);\n    Emotion[] emotionResult = null;\n\n    // \u5165\u529b\u5024(URL) \u3092\u5143\u306b Emotion API \u3092 Call\n    try\n    {\n        emotionResult = await emotionServiceClient.RecognizeAsync(activity.Text);\n    }\n    catch (Exception e)\n    {\n        emotionResult = null;\n    }\n\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u7b54 (\u521d\u56de\u3001\u307e\u305f\u306f\u5199\u771f\u5224\u5b9a\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u3068\u304d))\n    Activity reply = activity.CreateReply(\"\u9854\u306e\u8868\u60c5\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\u5199\u771f\u306eURL\u3092\u9001\u3063\u3066\u306d\u3002\");\n\n    // Call \u7d50\u679c\u3092\u5143\u306b \u8fd4\u7b54\u3092\u4f5c\u6210\n    // \u203b\u6b21\u4ee5\u964d\u306e\u9805\u76ee\u3067\u4f5c\u6210\u3057\u307e\u3059\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u304a\u3088\u3073 http \u30b9\u30c6\u30fc\u30bf\u30b9 Accepted(=200) \u3092\u8fd4\u7b54\n    await connector.Conversations.ReplyToActivityAsync(reply);\n    return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n\n}\n```\n\n##\u8868\u60c5\u30b9\u30b3\u30a2\u3092\u56de\u7b54\u306b\u30bb\u30c3\u30c8\u3059\u308b\u30ed\u30b8\u30c3\u30af\u306e\u8a18\u8ff0\n\u5f97\u3089\u308c\u305f8\u7a2e\u985e\u306e\u8868\u60c5\u30b9\u30b3\u30a2\u3092 KeyValuePair \u306b\u4ee3\u5165\u3057\u3066\u3001\u30b9\u30b3\u30a2\u6570\u5024\u304c\u4e00\u756a\u5927\u304d\u3044\u3082\u306e\u3092\u53d6\u5f97\u3057\u3066\u56de\u7b54\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n```MessagesController.cs\npublic virtual async Task<HttpResponseMessage> Post([FromBody] Activity activity)\n{\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u3092\u884c\u3046 ConnectorClient \u3092\u751f\u6210\n    :\n    \u4e2d\u7565\n    :\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u7b54 (\u521d\u56de\u3001\u307e\u305f\u306f\u5199\u771f\u5224\u5b9a\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u3068\u304d))\n    Activity reply = activity.CreateReply(\"\u9854\u306e\u8868\u60c5\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\u5199\u771f\u306eURL\u3092\u9001\u3063\u3066\u306d\u3002\");\n\n    // Call \u7d50\u679c\u3092\u5143\u306b \u8fd4\u7b54\u3092\u4f5c\u6210\n    if (emotionResult != null)\n    {\n        //\u8868\u60c5\u30b9\u30b3\u30a2\u3092\u53d6\u5f97\n        Scores emotionScores = emotionResult[0].Scores;\n\n        //\u53d6\u5f97\u3057\u305f\u30b9\u30b3\u30a2\u3092 KeyValuePair \u306b\u4ee3\u5165\u3001\u30b9\u30b3\u30a2\u6570\u5024\u306e\u5927\u304d\u3044\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\n        IEnumerable<KeyValuePair<string, float>> emotionList = new Dictionary<string, float>()\n        {\n            { \"\u6012\u3063\u3066\u308b\", emotionScores.Anger},\n            { \"\u8efd\u8511\u3057\u3066\u308b\", emotionScores.Contempt },\n            { \"\u3046\u3093\u3056\u308a\u3057\u3066\u308b\", emotionScores.Disgust },\n            { \"\u6016\u304c\u3063\u3066\u308b\", emotionScores.Fear },\n            { \"\u697d\u3057\u3044\", emotionScores.Happiness},\n            { \"\u7279\u306b\u306a\u3057\", emotionScores.Neutral},\n            { \"\u60b2\u3057\u3044\", emotionScores.Sadness },\n            { \"\u9a5a\u3044\u3066\u308b\", emotionScores.Surprise}\n        }\n        .OrderByDescending(kv => kv.Value)\n        .ThenBy(kv => kv.Key)\n        .ToList();\n\n        //\u30b9\u30b3\u30a2\u6570\u5024\u306e\u4e00\u756a\u5927\u304d\u3044\u8868\u60c5\u3092\u53d6\u5f97\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u30bb\u30c3\u30c8\n        KeyValuePair<string, float> topEmotion = emotionList.ElementAt(0);\n        string topEmotionKey = topEmotion.Key;\n        float topEmotionScore = topEmotion.Value;\n\n        reply = activity.CreateReply\n            (\n                \"\u9854\u306e\u8868\u60c5\u3092\u5224\u5b9a\u3057\u307e\u3057\u305f\u3002\" \n                + (int)(topEmotionScore * 100) + \"% \" + topEmotionKey + \"\u9854\u3060\u3068\u601d\u3046\u3088\u3002\"\n            );\n    }\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u304a\u3088\u3073 http \u30b9\u30c6\u30fc\u30bf\u30b9 Accepted(=200) \u3092\u8fd4\u7b54\n    :\n    \u4e2d\u7565\n    :\n\n}\n```\n\n\u5fd8\u308c\u305a\u306b *MessagesController.cs* \u3092\u4fdd\u5b58\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u52d5\u4f5c\u78ba\u8a8d\nF5 \u307e\u305f\u306f \u30c7\u30d0\u30c3\u30af\uff1e\u30c7\u30d0\u30c3\u30af\u306e\u958b\u59cb \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u304a\u3088\u3073\u8d77\u52d5\u3092\u884c\u3044\u307e\u3059\u3002\u30d6\u30e9\u30a6\u30b6\u304c\u8d77\u52d5\u3057\u3066 Bot Framework \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u3001Bot Framework Channel Emulator \u3092\u8d77\u52d5\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3044\u307e\u3059\u3002\n\u307e\u305a\u4f55\u304b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5165\u529b\u3059\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u56de\u7b54\u304c\u8fd4\u4fe1\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u753b\u50cf\u306e URL (\u4f8b\u3048\u3070\u3053\u3061\u3089\u2193) \u3092\u30b3\u30d4\u30fc\u3057\u3066\u9001\u4fe1\u3057\u307e\u3059\u3002\nhttps://emotionwebsto.blob.core.windows.net/handson/emotionweb_happiness.jpg\n\n\u5206\u6790\u7d50\u679c\u306e\u56de\u7b54\u304c\u8fd4\u4fe1\u3055\u308c\u308c\u3070\u3001BOT \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u5b8c\u6210\u3067\u3059\u3002\n![](https://msdnshared.blob.core.windows.net/media/2016/09/bluesky_20160913_01.png)\n\n#Appendix\n\u540c\u3058\u30bd\u30fc\u30b9\u3092 Azure Logic App \u3067 Web \u516c\u958b\u3057\u3001Bot Framework \u306b\u767b\u9332\u3092\u884c\u3063\u3066\u3001\u5229\u7528\u53ef\u80fd\u306b\u306a\u3063\u305f Web Chat \u3092\u8cbc\u308a\u4ed8\u3051\u3066\u3044\u307e\u3059\u3002\u52d5\u4f5c\u78ba\u8a8d\u306b\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\nhttp://emotionbotsample.azurewebsites.net/\n>Azure \u3067\u306e Web \u516c\u958b\u3001Bot Framework \u306e\u767b\u9332\u3001Web Chat \u306e\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001[Microsoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308b BOT \u958b\u767a: Azure \u3067 Web \u516c\u958b\uff06\u304a\u624b\u8efd Web Chat \u3092\u8a66\u3059](http://qiita.com/annie/items/590fa480719ed93998df) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u305f\u3001\u5b8c\u6210\u5f62\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092 GitHub \u306b\u3066\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/a-n-n-i-e/CognitiveEmotionAPI-EmotionBot\n", "tags": ["Microsoft", "CognitiveServices", "BotFramework", "VisualStudio2015", "Azure"]}