{"context": " More than 1 year has passed since last update.Instant Vert.x\u3092\u8aad\u307f\u306a\u304c\u3089\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8a66\u3057\u3066\u307f\u308b\u3002\n\u4eca\u56de\u306fHttpServer\u3068HttpClient(Flickr)\u3002\n\u307e\u305a\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u30b3\u30fc\u30c9\n\npublic class ClientVerticle extends Verticle {\n\n  HttpClient client;\n\n  public void start() {\n    container.logger().info(\"ClientVerticle deployed.\");\n    client = vertx.createHttpClient();\n    client.setHost(\"ycpi-api.flickr.com\").setPort(80);\n    vertx.eventBus().registerHandler(\"webclient_address\", this::handleClientEvent);\n  }\n\n  void handleClientEvent(Message<String> msg) {\n    container.logger().info(Rythm.render(\"Recieved tag:@tag\", msg));\n    client.getNow(\n        Rythm.render(\"/services/feeds/photos_public.gne?tags=@message&format=json\", msg.body()),\n        (HttpClientResponse res) -> {\n      container.logger().info(Rythm.render(\"Got response. status_code=[@status].\", res.statusCode()));\n      res.bodyHandler((Buffer body) -> {\n        String json = body.toString();\n        // \u304b\u3063\u3053\u306b\u56f2\u307e\u308c\u305f\u5909\u306aJSON\u3092\u8fd4\u3059\u306e\u3067\u524a\u308b\u3002\n        json = json.substring(json.indexOf('(') + 1, json.length() - 1);\n        json = json.replaceAll(\"\\\\\\\\'\", \"'\");\n        msg.reply(json);\n      });\n    });\n  }\n}\n\nEventBus\u306e\"webclient_address\"\u3068\u3044\u3046\u30a2\u30c9\u30ec\u30b9\u3067\u30a4\u30d9\u30f3\u30c8\u304c\u7740\u706b\u3059\u308b\u3068\u30a4\u30d9\u30f3\u30c8\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u66f8\u304b\u308c\u305f\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066Flickr\u306eAPI\u304b\u3089\u753b\u50cf\u3092\u96c6\u3081\u3066\u304d\u307e\u3059\u3002\nFlickr\u306eAPI\u306f\u7279\u5225\u306a\u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u3044\u3067\u3059\u304c\u3001JSON\u3068\u3057\u3066\u30d1\u30fc\u30b9\u3059\u308b\u306b\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3061\u3087\u3063\u3068\u6210\u5f62\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u7d9a\u3044\u3066\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u30b3\u30fc\u30c9\npublic class ServerVerticle extends Verticle {\n\n  public void start() {\n    container.deployVerticle(ClientVerticle.class.getCanonicalName());\n    HttpServer server = vertx.createHttpServer();\n    RouteMatcher routeMatcher = new RouteMatcher();\n    routeMatcher.get(\"/tag/:theTag\", this::handleTag);\n    routeMatcher.getWithRegEx(\".*\", this::handleOthers);\n    server.requestHandler(routeMatcher).listen(8080);\n  }\n\n  private void handleTag(HttpServerRequest req) {\n    String tag = req.params().get(\"theTag\");\n    container.logger().info(Rythm.render(\"Looking for:@searchWord\", tag));\n    vertx.eventBus().send(\"webclient_address\", tag, (Message<String> result) -> {\n      String json = result.body();\n      JsonObject jsonObj = new JsonObject(json);\n      String html = Rythm.render(PAGE_TEMPLATE, tag, jsonObj.getArray(\"items\"));\n      req.response().end(html);\n    });\n  }\n\n  private void handleOthers(HttpServerRequest req) {\n    req.response().end(\"ERROR: fill the tag.\");\n  }\n\n  private static final String PAGE_TEMPLATE =\n      \"@import org.vertx.java.core.json.JsonArray\\n\"\n      + \"@import org.vertx.java.core.json.JsonObject\\n\"\n      + \"@args String searchWord, JsonArray items\\n\"\n      + \"<html><h1>Result for @searchWord </h1>\\n\"\n      + \"@for(items) {\\n\"\n      + \"@{ JsonObject item = (JsonObject)_; }\\n\"\n      + \"<h3>@item.getString(\\\"title\\\")</h3>\\n\"\n      + \"<a href=\\\"@item.getString(\\\"link\\\")\\\">\"\n      + \"<img src=\\\"@item.getObject(\\\"media\\\").getString(\\\"m\\\")\\\" />\"\n      + \"</a>\\n\"\n      + \"}\\n\" + \"</html>\";\n}\n\n\nstart()\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306eVerticle\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u3001RouteMatcher\u3092\u4f7f\u3063\u3066HTTP Server\u3067\u53d7\u3051\u53d6\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3092\u3053\u3061\u3089\u306eVerticle\u306b\u66f8\u3044\u3066\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u95a2\u5fc3\u4e8b\u6bce\u306bVerticle\u3092\u4f5c\u308b\u65b9\u304c\u3088\u304b\u308d\u3046\u3068\u306e\u3053\u3068\u3067\u3059\u3002\uff08\u4f8b\u3048\u3070\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u63a5\u7d9a\u3001WEB\u30b5\u30fc\u30d0\u30fc\u3001\u8a8d\u8a3c\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u306a\u3069\uff09\n\u30b5\u30fc\u30d0\u30fc\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u5374\u3059\u308bHTML\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306b\u306fRythm\u3068\u3044\u3046\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002  \nVerticle\u3092\u5b9f\u884c\u3057\u305f\u5f8c\u306f\u30d6\u30e9\u30a6\u30b6\u304b\u3089http://localhost:8080/tag/cat\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001ClientVerticle\u304c\u732b\u306e\u753b\u50cf\u3092\u96c6\u3081\u3066\u304d\u3066\u3001ServerVerticle\u304c\u96c6\u3081\u305f\u732b\u306e\u753b\u50cf\u3092\u4e26\u3079\u305fHTML\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\n[Instant Vert.x](http://www.amazon.co.jp/Instant-Vert-x-Simone-Scarduzio-ebook/dp/B00ESX17RA/ref=pd_sim_kinc_2/377-6400425-9638145?ie=UTF8&refRID=1Z1PC90AV96NTGM6HGRF \"Instant Vert.x\")\u3092\u8aad\u307f\u306a\u304c\u3089\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8a66\u3057\u3066\u307f\u308b\u3002  \n\u4eca\u56de\u306fHttpServer\u3068HttpClient(Flickr)\u3002  \n\u307e\u305a\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u30b3\u30fc\u30c9\n\n```Java\n\npublic class ClientVerticle extends Verticle {\n\n  HttpClient client;\n\n  public void start() {\n    container.logger().info(\"ClientVerticle deployed.\");\n    client = vertx.createHttpClient();\n    client.setHost(\"ycpi-api.flickr.com\").setPort(80);\n    vertx.eventBus().registerHandler(\"webclient_address\", this::handleClientEvent);\n  }\n\n  void handleClientEvent(Message<String> msg) {\n    container.logger().info(Rythm.render(\"Recieved tag:@tag\", msg));\n    client.getNow(\n        Rythm.render(\"/services/feeds/photos_public.gne?tags=@message&format=json\", msg.body()),\n        (HttpClientResponse res) -> {\n      container.logger().info(Rythm.render(\"Got response. status_code=[@status].\", res.statusCode()));\n      res.bodyHandler((Buffer body) -> {\n        String json = body.toString();\n        // \u304b\u3063\u3053\u306b\u56f2\u307e\u308c\u305f\u5909\u306aJSON\u3092\u8fd4\u3059\u306e\u3067\u524a\u308b\u3002\n        json = json.substring(json.indexOf('(') + 1, json.length() - 1);\n        json = json.replaceAll(\"\\\\\\\\'\", \"'\");\n        msg.reply(json);\n      });\n    });\n  }\n}\n```\n\nEventBus\u306e\"webclient_address\"\u3068\u3044\u3046\u30a2\u30c9\u30ec\u30b9\u3067\u30a4\u30d9\u30f3\u30c8\u304c\u7740\u706b\u3059\u308b\u3068\u30a4\u30d9\u30f3\u30c8\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u66f8\u304b\u308c\u305f\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066Flickr\u306eAPI\u304b\u3089\u753b\u50cf\u3092\u96c6\u3081\u3066\u304d\u307e\u3059\u3002  \nFlickr\u306eAPI\u306f\u7279\u5225\u306a\u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u3044\u3067\u3059\u304c\u3001JSON\u3068\u3057\u3066\u30d1\u30fc\u30b9\u3059\u308b\u306b\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3061\u3087\u3063\u3068\u6210\u5f62\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002  \n\u7d9a\u3044\u3066\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u30b3\u30fc\u30c9\n\n\n```Java\npublic class ServerVerticle extends Verticle {\n\n  public void start() {\n    container.deployVerticle(ClientVerticle.class.getCanonicalName());\n    HttpServer server = vertx.createHttpServer();\n    RouteMatcher routeMatcher = new RouteMatcher();\n    routeMatcher.get(\"/tag/:theTag\", this::handleTag);\n    routeMatcher.getWithRegEx(\".*\", this::handleOthers);\n    server.requestHandler(routeMatcher).listen(8080);\n  }\n\n  private void handleTag(HttpServerRequest req) {\n    String tag = req.params().get(\"theTag\");\n    container.logger().info(Rythm.render(\"Looking for:@searchWord\", tag));\n    vertx.eventBus().send(\"webclient_address\", tag, (Message<String> result) -> {\n      String json = result.body();\n      JsonObject jsonObj = new JsonObject(json);\n      String html = Rythm.render(PAGE_TEMPLATE, tag, jsonObj.getArray(\"items\"));\n      req.response().end(html);\n    });\n  }\n\n  private void handleOthers(HttpServerRequest req) {\n    req.response().end(\"ERROR: fill the tag.\");\n  }\n\n  private static final String PAGE_TEMPLATE =\n      \"@import org.vertx.java.core.json.JsonArray\\n\"\n      + \"@import org.vertx.java.core.json.JsonObject\\n\"\n      + \"@args String searchWord, JsonArray items\\n\"\n      + \"<html><h1>Result for @searchWord </h1>\\n\"\n      + \"@for(items) {\\n\"\n      + \"@{ JsonObject item = (JsonObject)_; }\\n\"\n      + \"<h3>@item.getString(\\\"title\\\")</h3>\\n\"\n      + \"<a href=\\\"@item.getString(\\\"link\\\")\\\">\"\n      + \"<img src=\\\"@item.getObject(\\\"media\\\").getString(\\\"m\\\")\\\" />\"\n      + \"</a>\\n\"\n      + \"}\\n\" + \"</html>\";\n}\n\n```\n\nstart()\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306eVerticle\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u3001RouteMatcher\u3092\u4f7f\u3063\u3066HTTP Server\u3067\u53d7\u3051\u53d6\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002  \n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3092\u3053\u3061\u3089\u306eVerticle\u306b\u66f8\u3044\u3066\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u95a2\u5fc3\u4e8b\u6bce\u306bVerticle\u3092\u4f5c\u308b\u65b9\u304c\u3088\u304b\u308d\u3046\u3068\u306e\u3053\u3068\u3067\u3059\u3002\uff08\u4f8b\u3048\u3070\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u63a5\u7d9a\u3001WEB\u30b5\u30fc\u30d0\u30fc\u3001\u8a8d\u8a3c\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u306a\u3069\uff09  \n\u30b5\u30fc\u30d0\u30fc\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u5374\u3059\u308bHTML\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306b\u306f[Rythm](http://rythmengine.org/)\u3068\u3044\u3046\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002  \n\nVerticle\u3092\u5b9f\u884c\u3057\u305f\u5f8c\u306f\u30d6\u30e9\u30a6\u30b6\u304b\u3089[http://localhost:8080/tag/cat](http://localhost:8080/tag/cat)\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001ClientVerticle\u304c\u732b\u306e\u753b\u50cf\u3092\u96c6\u3081\u3066\u304d\u3066\u3001ServerVerticle\u304c\u96c6\u3081\u305f\u732b\u306e\u753b\u50cf\u3092\u4e26\u3079\u305fHTML\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u8fd4\u5374\u3057\u307e\u3059\u3002\n\n\n\u4eca\u56de\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](https://github.com/jkugiya/vertx-httpsample)\u306b\u3042\u308a\u307e\u3059\u3002\n", "tags": ["Vert.x", "Rythm", "Java"]}