{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u4f8b\u3048\u3070\u3001\u90fd\u9053\u5e9c\u770c\u306e\u30c7\u30fc\u30bf\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u683c\u7d0d\u3057\u3066\u3044\u3066\u3001\u5358\u7d14\u306b\u691c\u7d22\u3059\u308b\u3060\u3051\u306e\u51e6\u7406\u304c\u3042\u308b\u5834\u5408\u3001\u691c\u7d22\u7d50\u679c\u306f\u307b\u307c\u666e\u904d\u7684\u306a\u308f\u3051\u3067\u3001\u90fd\u5ea6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30af\u30a8\u30ea\u3092\u6295\u3052\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u540c\u3058\u30af\u30a8\u30ea\u3067\u3042\u308c\u3070\u3001\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u305f\u307b\u3046\u304c\u3001\u3088\u308a\u52b9\u7387\u7684\u3067\u3059\u3002\nDoctrine DBAL\u306e\u4e0b\u8a18\u30da\u30fc\u30b8\u3092\u53c2\u8003\u306b\u8a66\u3057\u306b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u307f\u307e\u3059\u3002\nhttp://doctrine-orm.readthedocs.org/projects/doctrine-dbal/en/latest/reference/caching.html\n\nQueryCacheProfile\u306e\u4f5c\u6210\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u3069\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3059\u308b\u304b\u3001\u3069\u306e\u7a0b\u5ea6\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u304b\u306a\u3069\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\nuse Doctrine\\Common\\Cache\\FilesystemCache;\nuse Doctrine\\DBAL\\Cache\\QueryCacheProfile;\n\n$cache = new FilesystemCache('/path/to/save');\n$cacheProfile = new QueryCacheProfile(0, 'cache-key', $cache);\n\n\n\u3044\u308d\u3044\u308d\u306acache\ndoctrine/cache \u306b\u306f\u3001\u3044\u308d\u3044\u308d\u306acache\u30af\u30e9\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/doctrine/cache/tree/master/lib/Doctrine/Common/Cache\n\nFilesystemCache\nMongoDBCache\nMemcachedCache\nPhpFileCache\nRedisCache\n\n\nexecuteCacheQuery\nexecuteQuery\u306b\u3066\u3001QueryCacheProfile\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001executeCacheQuery\u304c\u30b3\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\nhttps://github.com/doctrine/dbal/blob/master/lib/Doctrine/DBAL/Connection.php\n/**\n * Executes a caching query.\n *\n * @param string                                 $query  The SQL query to execute.\n * @param array                                  $params The parameters to bind to the query, if any.\n * @param array                                  $types  The types the previous parameters are in.\n * @param \\Doctrine\\DBAL\\Cache\\QueryCacheProfile $qcp    The query cache profile.\n *\n * @return \\Doctrine\\DBAL\\Driver\\ResultStatement\n *\n * @throws \\Doctrine\\DBAL\\Cache\\CacheException\n */\npublic function executeCacheQuery($query, $params, $types, QueryCacheProfile $qcp)\n{\n    $resultCache = $qcp->getResultCacheDriver() ?: $this->_config->getResultCacheImpl();\n    if ( ! $resultCache) {\n        throw CacheException::noResultDriverConfigured();\n    }\n\n    list($cacheKey, $realKey) = $qcp->generateCacheKeys($query, $params, $types);\n\n    // fetch the row pointers entry\n    if ($data = $resultCache->fetch($cacheKey)) {\n        // is the real key part of this row pointers map or is the cache only pointing to other cache keys?\n        if (isset($data[$realKey])) {\n            $stmt = new ArrayStatement($data[$realKey]);\n        } elseif (array_key_exists($realKey, $data)) {\n            $stmt = new ArrayStatement(array());\n        }\n    }\n\n    if (!isset($stmt)) {\n        $stmt = new ResultCacheStatement($this->executeQuery($query, $params, $types), $resultCache, $cacheKey, $realKey, $qcp->getLifetime());\n    }\n\n    $stmt->setFetchMode($this->defaultFetchMode);\n\n    return $stmt;\n}\n\n\n\ncloseCursor\n\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408\u3001ResultCacheStatement::closeCursor\u3092\u30b3\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u3001\u7d50\u679c\u30bb\u30c3\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttps://github.com/doctrine/dbal/blob/master/lib/Doctrine/DBAL/Cache/ResultCacheStatement.php\npublic function closeCursor()\n{\n    $this->statement->closeCursor();\n    if ($this->emptied && $this->data !== null) {\n        $data = $this->resultCache->fetch($this->cacheKey);\n        if ( ! $data) {\n            $data = array();\n        }\n        $data[$this->realKey] = $this->data;\n\n        $this->resultCache->save($this->cacheKey, $data, $this->lifetime);\n        unset($this->data);\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408\u3001executeQuery\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001ResultCacheStatement\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3042\u308b\u5834\u5408\u3001executeQuery\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001ArrayStatement\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\nuse Doctrine\\DBAL\\Cache\\QueryCacheProfile;\n\npublic function findBySql($sql, $params = [], QueryCacheProfile $cacheProfile) {\n    $statement = $this->connection->executeQuery($sql, $params, [], $cacheProfile);\n    /* \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408 */\n    /* @var $statement \\Doctrine\\DBAL\\Cache\\ResultCacheStatement */\n    /* \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408 */\n    /* @var $statement \\Doctrine\\DBAL\\Cache\\ArrayStatement */\n    $result = $statement->fetchAll();\n    $statement->closeCursor();\n    return $result;\n}\n\n\n\u304a\u308f\u308a\u306b\nSymfony Advent Calendar\u306a\u306e\u306b\u3001Doctrine/DBAL\u306e\u5c0f\u30cd\u30bf\u3067\u5927\u5909\u6050\u7e2e\u3067\u3059\u304c\u3001\u5b9f\u6226\u3067\u3059\u3050\u4f7f\u3048\u305d\u3046\u306a\u30cd\u30bf\u3060\u3063\u305f\u306e\u3067\u3001\u8abf\u67fb\u3082\u304b\u306d\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067\u30012\u5e74\u9023\u7d9a\u53c2\u52a0\u3067\u304d\u307e\u3057\u305f\u3002\n\u6765\u5e74\u3082\u61f2\u308a\u305a\u306b\u3001\u53c2\u52a0\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u3001\u5c11\u3057\u65e9\u3044\u3067\u3059\u304c\u3001\u3088\u3044\u304a\u5e74\u3092\u3002\n## \u306f\u3058\u3081\u306b\n\u4f8b\u3048\u3070\u3001\u90fd\u9053\u5e9c\u770c\u306e\u30c7\u30fc\u30bf\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u683c\u7d0d\u3057\u3066\u3044\u3066\u3001\u5358\u7d14\u306b\u691c\u7d22\u3059\u308b\u3060\u3051\u306e\u51e6\u7406\u304c\u3042\u308b\u5834\u5408\u3001\u691c\u7d22\u7d50\u679c\u306f\u307b\u307c\u666e\u904d\u7684\u306a\u308f\u3051\u3067\u3001\u90fd\u5ea6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30af\u30a8\u30ea\u3092\u6295\u3052\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u540c\u3058\u30af\u30a8\u30ea\u3067\u3042\u308c\u3070\u3001\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u305f\u307b\u3046\u304c\u3001\u3088\u308a\u52b9\u7387\u7684\u3067\u3059\u3002\n\nDoctrine DBAL\u306e\u4e0b\u8a18\u30da\u30fc\u30b8\u3092\u53c2\u8003\u306b\u8a66\u3057\u306b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u307f\u307e\u3059\u3002\nhttp://doctrine-orm.readthedocs.org/projects/doctrine-dbal/en/latest/reference/caching.html\n\n## QueryCacheProfile\u306e\u4f5c\u6210\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u3069\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3059\u308b\u304b\u3001\u3069\u306e\u7a0b\u5ea6\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u304b\u306a\u3069\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n```\nuse Doctrine\\Common\\Cache\\FilesystemCache;\nuse Doctrine\\DBAL\\Cache\\QueryCacheProfile;\n\n$cache = new FilesystemCache('/path/to/save');\n$cacheProfile = new QueryCacheProfile(0, 'cache-key', $cache);\n```\n\n### \u3044\u308d\u3044\u308d\u306acache\ndoctrine/cache \u306b\u306f\u3001\u3044\u308d\u3044\u308d\u306acache\u30af\u30e9\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/doctrine/cache/tree/master/lib/Doctrine/Common/Cache\n\n- FilesystemCache\n- MongoDBCache\n- MemcachedCache\n- PhpFileCache\n- RedisCache\n\n\n## executeCacheQuery\n`executeQuery`\u306b\u3066\u3001`QueryCacheProfile`\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001`executeCacheQuery`\u304c\u30b3\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\nhttps://github.com/doctrine/dbal/blob/master/lib/Doctrine/DBAL/Connection.php\n\n```php\n/**\n * Executes a caching query.\n *\n * @param string                                 $query  The SQL query to execute.\n * @param array                                  $params The parameters to bind to the query, if any.\n * @param array                                  $types  The types the previous parameters are in.\n * @param \\Doctrine\\DBAL\\Cache\\QueryCacheProfile $qcp    The query cache profile.\n *\n * @return \\Doctrine\\DBAL\\Driver\\ResultStatement\n *\n * @throws \\Doctrine\\DBAL\\Cache\\CacheException\n */\npublic function executeCacheQuery($query, $params, $types, QueryCacheProfile $qcp)\n{\n    $resultCache = $qcp->getResultCacheDriver() ?: $this->_config->getResultCacheImpl();\n    if ( ! $resultCache) {\n        throw CacheException::noResultDriverConfigured();\n    }\n\n    list($cacheKey, $realKey) = $qcp->generateCacheKeys($query, $params, $types);\n\n    // fetch the row pointers entry\n    if ($data = $resultCache->fetch($cacheKey)) {\n        // is the real key part of this row pointers map or is the cache only pointing to other cache keys?\n        if (isset($data[$realKey])) {\n            $stmt = new ArrayStatement($data[$realKey]);\n        } elseif (array_key_exists($realKey, $data)) {\n            $stmt = new ArrayStatement(array());\n        }\n    }\n\n    if (!isset($stmt)) {\n        $stmt = new ResultCacheStatement($this->executeQuery($query, $params, $types), $resultCache, $cacheKey, $realKey, $qcp->getLifetime());\n    }\n\n    $stmt->setFetchMode($this->defaultFetchMode);\n\n    return $stmt;\n}\n\n```\n\n## closeCursor\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408\u3001`ResultCacheStatement::closeCursor`\u3092\u30b3\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u3001\u7d50\u679c\u30bb\u30c3\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttps://github.com/doctrine/dbal/blob/master/lib/Doctrine/DBAL/Cache/ResultCacheStatement.php\n\n```php\npublic function closeCursor()\n{\n    $this->statement->closeCursor();\n    if ($this->emptied && $this->data !== null) {\n        $data = $this->resultCache->fetch($this->cacheKey);\n        if ( ! $data) {\n            $data = array();\n        }\n        $data[$this->realKey] = $this->data;\n\n        $this->resultCache->save($this->cacheKey, $data, $this->lifetime);\n        unset($this->data);\n    }\n}\n```\n\n\n## \u5b9f\u884c\u7d50\u679c\n\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408\u3001`executeQuery`\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001`ResultCacheStatement`\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3042\u308b\u5834\u5408\u3001`executeQuery`\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001`ArrayStatement`\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n\n```php\nuse Doctrine\\DBAL\\Cache\\QueryCacheProfile;\n\npublic function findBySql($sql, $params = [], QueryCacheProfile $cacheProfile) {\n    $statement = $this->connection->executeQuery($sql, $params, [], $cacheProfile);\n    /* \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408 */\n    /* @var $statement \\Doctrine\\DBAL\\Cache\\ResultCacheStatement */\n    /* \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408 */\n    /* @var $statement \\Doctrine\\DBAL\\Cache\\ArrayStatement */\n    $result = $statement->fetchAll();\n    $statement->closeCursor();\n\treturn $result;\n}\n```\n\n## \u304a\u308f\u308a\u306b\n`Symfony Advent Calendar`\u306a\u306e\u306b\u3001Doctrine/DBAL\u306e\u5c0f\u30cd\u30bf\u3067\u5927\u5909\u6050\u7e2e\u3067\u3059\u304c\u3001\u5b9f\u6226\u3067\u3059\u3050\u4f7f\u3048\u305d\u3046\u306a\u30cd\u30bf\u3060\u3063\u305f\u306e\u3067\u3001\u8abf\u67fb\u3082\u304b\u306d\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067\u30012\u5e74\u9023\u7d9a\u53c2\u52a0\u3067\u304d\u307e\u3057\u305f\u3002\n\u6765\u5e74\u3082\u61f2\u308a\u305a\u306b\u3001\u53c2\u52a0\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u3001\u5c11\u3057\u65e9\u3044\u3067\u3059\u304c\u3001\u3088\u3044\u304a\u5e74\u3092\u3002\n", "tags": ["Doctrine2"]}