{"context": "\n\n\u6700\u521d\u306b\nLaravel5.2\u306e\u3001laravel-elixir\u3067javascript\u3092\u5727\u7e2e\u3057\u305f\u6642\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u8868\u793a\u524a\u9664\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n\u3082\u3063\u3068\u30b9\u30de\u30fc\u30c8\u3067\u7c21\u6f54\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3068\u304a\u601d\u3046\u304c\u3001\u529b\u696d\u3067\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u30e1\u30e2\u4ee3\u308f\u308a\u306b\u66f8\u304f\u3002\n\n\u3088\u3057\u3001\u6539\u9020\u3060\n\ngulpfile.js\nvar elixir = require('laravel-elixir');\n\n/*\n |--------------------------------------------------------------------------\n | Elixir Asset Management\n |--------------------------------------------------------------------------\n |\n | Elixir provides a clean, fluent API for defining some basic Gulp tasks\n | for your Laravel application. By default, we are compiling the Sass\n | file for our application, as well as publishing vendor resources.\n |\n */\n\nelixir(function(mix) {\n    mix.sass('app.scss');\n});\n\n\n\n\u4e0a\u8a18gulpfile.js\u304c\u521d\u671f\u306e\u72b6\u614b\u3002\n\ngulpfile.js\nvar elixir = require('laravel-elixir');\n\nelixir(function(mix) {\n    mix.script([\n        \"jquery.js\",\n        \"bootstrap.js\",\n    ]);\n});\n\n\n\u4eee\u306b\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3001\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\ngulp --production\n\n\u7dba\u9e97\u306b\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u30b3\u30e1\u30f3\u30c8\u90e8\u307e\u3067\u6d88\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\ngulpfile.js(\u6539)\nvar elixir = require('laravel-elixir');\n// \u25bc\u25bc\u25bc\u3000\u8ffd\u52a0\u958b\u59cb\nvar gulp = require(\"gulp\");\nvar $ = elixir.Plugins;\nvar config = elixir.config;\n\n\nvar gulpTaskEx = function(paths, babel) {\n    this.log(paths.src, paths.output);\n\n    return (\n        gulp\n            .src(paths.src.path)\n            .pipe($.if(config.sourcemaps, $.sourcemaps.init()))\n            .pipe($.concat(paths.output.name))\n            .pipe($.if(babel, $.babel(babel)))\n            .on('error', function(e) {\n                new Elixir.Notification().error(e, 'Babel Compilation Failed!!');\n                this.emit('end');\n            })\n            .pipe($.if(config.production, $.uglify({ preserveComments: 'some', compress: { drop_console: true }})))\n            .pipe($.if(config.sourcemaps, $.sourcemaps.write('.')))\n            .pipe(gulp.dest(paths.output.baseDir))\n            .pipe(new elixir.Notification('Scripts Merged!!'))\n    );\n};\nelixir.extend('scriptsEx', function(scripts, output, baseDir) {\n    var paths =  new elixir.GulpPaths()\n        .src(scripts, baseDir || config.get('assets.js.folder'))\n        .output(output || config.get('public.js.outputFolder'), 'all.js');\n\n    new elixir.Task('scriptsEx', function() {\n        return gulpTaskEx.call(this, paths);\n    })\n    .watch(paths.src.path)\n    .ignore(paths.output.path);\n});\n// \u25b2\u25b2\u25b2\u3000\u8ffd\u52a0\u7d42\u4e86\n\nelixir(function(mix) {\n    // mix.script \u304b\u3089 mix.scriptEx\u3078\u5909\u66f4\n    mix.scriptEx([\n        \"jquery.js\",\n        \"bootstrap.js\",\n    ]);\n});\n\n\n\u305d\u308c\u3067\u3001\u529b\u696d\u3067\u6539\u9020\u3057\u305f\u306e\u304c\u3001\u4e0a\u8a18gulpfile.js(\u6539)\u304c\u305d\u308c\u306b\u3042\u305f\u308b\u3002\nlaravel-elixir\u5185\u306b\u3042\u308b\u3001scripts.js\u306escripts\u306e\u5185\u5bb9\u3092\u305d\u306e\u307e\u307e\u30b3\u30d4\u30fc\u3057\u305f\u3060\u3051\u3067\u3001\n\nlaravel-elixir/scripts.js\n.pipe($.if(config.production, $.uglify({ compress: { drop_console: true }})))\n\n\n\u3092\u6539\u9020\u3057\u305f\u306e\u3068\u3001\u201dscript\"\u304b\u3089\"scriptEx\"\u30e1\u30bd\u30c3\u30c9\u306b\u5909\u3048\u3066\u8ffd\u52a0\u3057\u305f\u305f\u3060\u3051\u3002\n\ngulpfile.js(\u6539)\u306egulpTaskEx\u5185\u3088\u308a\n            .pipe($.if(config.production, $.uglify({ preserveComments: 'some', compress: { drop_console: true }})))\n\n\n\u3053\u308c\u306b\u3088\u308a\u3001\u5727\u7e2e\u6642\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u8868\u793a\u304c\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\u4ee5\u4e0a\u3067\u7d42\u308f\u308a\n# \u6700\u521d\u306b\nLaravel5.2\u306e\u3001laravel-elixir\u3067javascript\u3092\u5727\u7e2e\u3057\u305f\u6642\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u8868\u793a\u524a\u9664\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n\u3082\u3063\u3068\u30b9\u30de\u30fc\u30c8\u3067\u7c21\u6f54\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3068\u304a\u601d\u3046\u304c\u3001\u529b\u696d\u3067\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u30e1\u30e2\u4ee3\u308f\u308a\u306b\u66f8\u304f\u3002\n\n# \u3088\u3057\u3001\u6539\u9020\u3060\n```javascript:gulpfile.js\nvar elixir = require('laravel-elixir');\n\n/*\n |--------------------------------------------------------------------------\n | Elixir Asset Management\n |--------------------------------------------------------------------------\n |\n | Elixir provides a clean, fluent API for defining some basic Gulp tasks\n | for your Laravel application. By default, we are compiling the Sass\n | file for our application, as well as publishing vendor resources.\n |\n */\n\nelixir(function(mix) {\n    mix.sass('app.scss');\n});\n\n```\n\u4e0a\u8a18gulpfile.js\u304c\u521d\u671f\u306e\u72b6\u614b\u3002\n\n```javascript:gulpfile.js\nvar elixir = require('laravel-elixir');\n\nelixir(function(mix) {\n    mix.script([\n        \"jquery.js\",\n        \"bootstrap.js\",\n    ]);\n});\n```\n\n\u4eee\u306b\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3001\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\n\n```\ngulp --production\n```\n\n\u7dba\u9e97\u306b\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u30b3\u30e1\u30f3\u30c8\u90e8\u307e\u3067\u6d88\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\n```javascript:gulpfile.js(\u6539)\nvar elixir = require('laravel-elixir');\n// \u25bc\u25bc\u25bc\u3000\u8ffd\u52a0\u958b\u59cb\nvar gulp = require(\"gulp\");\nvar $ = elixir.Plugins;\nvar config = elixir.config;\n\n\nvar gulpTaskEx = function(paths, babel) {\n    this.log(paths.src, paths.output);\n\n    return (\n        gulp\n            .src(paths.src.path)\n            .pipe($.if(config.sourcemaps, $.sourcemaps.init()))\n            .pipe($.concat(paths.output.name))\n            .pipe($.if(babel, $.babel(babel)))\n            .on('error', function(e) {\n                new Elixir.Notification().error(e, 'Babel Compilation Failed!!');\n                this.emit('end');\n            })\n            .pipe($.if(config.production, $.uglify({ preserveComments: 'some', compress: { drop_console: true }})))\n            .pipe($.if(config.sourcemaps, $.sourcemaps.write('.')))\n            .pipe(gulp.dest(paths.output.baseDir))\n            .pipe(new elixir.Notification('Scripts Merged!!'))\n    );\n};\nelixir.extend('scriptsEx', function(scripts, output, baseDir) {\n    var paths =  new elixir.GulpPaths()\n        .src(scripts, baseDir || config.get('assets.js.folder'))\n        .output(output || config.get('public.js.outputFolder'), 'all.js');\n\n    new elixir.Task('scriptsEx', function() {\n        return gulpTaskEx.call(this, paths);\n    })\n    .watch(paths.src.path)\n    .ignore(paths.output.path);\n});\n// \u25b2\u25b2\u25b2\u3000\u8ffd\u52a0\u7d42\u4e86\n\nelixir(function(mix) {\n    // mix.script \u304b\u3089 mix.scriptEx\u3078\u5909\u66f4\n    mix.scriptEx([\n        \"jquery.js\",\n        \"bootstrap.js\",\n    ]);\n});\n```\n\n\u305d\u308c\u3067\u3001\u529b\u696d\u3067\u6539\u9020\u3057\u305f\u306e\u304c\u3001\u4e0a\u8a18gulpfile.js(\u6539)\u304c\u305d\u308c\u306b\u3042\u305f\u308b\u3002\n\nlaravel-elixir\u5185\u306b\u3042\u308b\u3001scripts.js\u306escripts\u306e\u5185\u5bb9\u3092\u305d\u306e\u307e\u307e\u30b3\u30d4\u30fc\u3057\u305f\u3060\u3051\u3067\u3001\n\n```javascript:laravel-elixir/scripts.js\n.pipe($.if(config.production, $.uglify({ compress: { drop_console: true }})))\n```\n\n\u3092\u6539\u9020\u3057\u305f\u306e\u3068\u3001\u201dscript\"\u304b\u3089\"scriptEx\"\u30e1\u30bd\u30c3\u30c9\u306b\u5909\u3048\u3066\u8ffd\u52a0\u3057\u305f\u305f\u3060\u3051\u3002\n\n```javascript:gulpfile.js(\u6539)\u306egulpTaskEx\u5185\u3088\u308a\n            .pipe($.if(config.production, $.uglify({ preserveComments: 'some', compress: { drop_console: true }})))\n```\n\n\u3053\u308c\u306b\u3088\u308a\u3001\u5727\u7e2e\u6642\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u8868\u793a\u304c\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n\u4ee5\u4e0a\u3067\u7d42\u308f\u308a\n", "tags": ["laravel5.2", "laravel-elixir"]}