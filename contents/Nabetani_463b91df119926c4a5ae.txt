{"context": "\u554f\u984c http://mtsmfm.github.io/2016/08/06/doukaku-e06.html\n\u5b9f\u88c5\u30ea\u30f3\u30af\u96c6 http://qiita.com/mtsmfm/items/7a0bfd2ac5b7674ce8c7\n\u3067\u3059\u3002\n45\u5206\u3050\u3089\u3044\u3067\u89e3\u3051\u307e\u3057\u305f\u3002\nruby \u306e\u5b9f\u88c5\u306f\u307e\u3060\u6c5a\u3044\u3051\u3069\u3053\u3093\u306a\u611f\u3058\u3002(\u3061\u3087\u3063\u3068\u304d\u308c\u3044\u306b\u3057\u305f\uff09\nMonster = Struct.new( :hp, :col, :lv )\n\n# b \u304c a \u3092\u306a\u3050\u308b\u5834\u5408\u306e\u30c0\u30e1\u30fc\u30b8\ndef damage( a, b )\n  return 1 if \"RGBRGB\".index(a+b)\n  return 4 if \"RGBRGB\".index(b+a)\n  return 2\nend\n\n# b \u304c a \u3092\u306a\u3050\u308b\ndef hit( a, b )\n  return if b[0]<=0\n  a[0] = [0, a[0] - damage(a.col, b.col) ].max\nend\n\n# a \u3068 b \u304c\u540c\u6642\u306b\u6bb4\u308a\u3042\u3046\ndef simhit( a, b )\n  a.hp = [0, a.hp - damage(a.col, b.col) ].max\n  b.hp = [0, b.hp - damage(b.col, a.col) ].max\nend\n\n# \u30e2\u30f3\u30b9\u30bf\u30fc a \u3068 \u30e2\u30f3\u30b9\u30bf\u30fcb \u3067\u4e00\u5ea6\u305a\u3064\u6bb4\u308a\u3042\u3046\ndef fight( a, b )\n  case a.lv<=>b.lv\n  when 1\n    hit( b, a )\n    hit( a, b )\n  when -1\n    hit( a, b )\n    hit( b, a )\n  when 0\n    simhit( a, b )\n  end\nend\n\n# \u30c7\u30c3\u30ada \u3068 \u30c7\u30c3\u30adb \u3067\u6226\u3046\ndef battle( a, b )\n  ma, mb = [a, b].map{ |x| x.chars.each_slice(2).map{ |l,c| Monster.new( l.to_i, c, l.to_i ) }}\n  loop do\n    fight( ma.first, mb.first )\n    ma.shift if ma.first.hp==0\n    mb.shift if mb.first.hp==0\n    return 0 if ma.empty? && mb.empty?\n    return -1 if mb.empty?\n    return 1 if ma.empty?\n  end\nend\n\ndef solve( src )\n  players = src.split(\",\").zip( [*0..100] )\n  wins=[0]*players.size\n  players.combination(2) do |a,b|\n    case battle( a[0], b[0] )\n    when -1\n      wins[a[1]]-=1\n    when 1\n      wins[b[1]]-=1\n    end\n  end\n  wins.zip( [*1..players.size] ).sort.map(&:last).join(\",\")\nend\n\n$stdout.sync=true\n\n$all_okay=true\n\ndef test( src, expected )\n  actual = solve( src )\n  p [ actual==expected ? \"ok\" : \"**NG**\", src[0,10], actual, expected ]\n  $all_okay &&=actual==expected\nend\n\ntest(\"9B,3R2G,1R2B3G\", \"1,3,2\")\ntest(\"1G\", \"1\")\ntest(\"1G,1R,1B\", \"1,2,3\")\ntest(\"8B,3R2G,1R2B3G\", \"3,1,2\")\ntest(\"6G,9R7B7B\", \"2,1\")\n\nputs(  $all_okay ? \"okay\" : \"something wrong\" )\n\n\u3044\u3064\u3082\u3069\u304a\u308a\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5927\u534a\u306f\u7701\u7565\u3002\n\u554f\u984c\u6587\u306b\u306f\u306a\u3044\u6697\u9ed9\u306e\u4ed5\u69d8\uff08\uff1f\uff09\u300c\u30ec\u30d9\u30eb\u306f\u4e00\u6841\u300d\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u304b\u3063\u3053\u60aa\u3044\u3002\nzip([*0..100]) \u306e\u8fba\u308a\u3082\u304b\u3063\u3053\u60aa\u3044\u3002\n\u4e0a\u8a182\u70b9\u4ee5\u5916\u306f\u307e\u3042\u307e\u3042\u3046\u307e\u304f\u66f8\u3051\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u308b\u3051\u3069\u3069\u3046\u3060\u308d\u3046\u3002\n\u4f1a\u5834\u3067\u306f damage \u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u306b\u3061\u3087\u3063\u3068\u9a5a\u304b\u308c\u305f\u3093\u3060\u3051\u3069\u3001\u79c1\u3068\u3057\u3066\u306f\u666e\u901a\u306b\u66f8\u3044\u305f\u3064\u3082\u308a\u3002\u666e\u901a\u3067\u3057\u3087\uff1f\n\u30d2\u30c3\u30c8\u30dd\u30a4\u30f3\u30c8\u304c\u30de\u30a4\u30ca\u30b9\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u9811\u5f35\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u306a\u3093\u3068\u306a\u304f\u3002\u30b2\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u3044\u305f\u9803\u306e\u8a18\u61b6\u306e\u305b\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\nwins[n] \u304c\u6b63\u306b\u306a\u3089\u306a\u3044\u306e\u306f\u3001\u305d\u306e\u3042\u3068 sort \u3059\u308b\u3068\u304d\u306b\u4fbf\u5229\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3002wins[n] \u3092\u6b63\u306b\u3057\u3066\u3001sort_by \u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u304b\u3063\u305f\u306d\u3002\n\u554f\u984c http://mtsmfm.github.io/2016/08/06/doukaku-e06.html\n\u5b9f\u88c5\u30ea\u30f3\u30af\u96c6 http://qiita.com/mtsmfm/items/7a0bfd2ac5b7674ce8c7\n\u3067\u3059\u3002\n\n45\u5206\u3050\u3089\u3044\u3067\u89e3\u3051\u307e\u3057\u305f\u3002\n\nruby \u306e\u5b9f\u88c5\u306f\u307e\u3060\u6c5a\u3044\u3051\u3069\u3053\u3093\u306a\u611f\u3058\u3002(\u3061\u3087\u3063\u3068\u304d\u308c\u3044\u306b\u3057\u305f\uff09\n\n```ruby\nMonster = Struct.new( :hp, :col, :lv )\n\n# b \u304c a \u3092\u306a\u3050\u308b\u5834\u5408\u306e\u30c0\u30e1\u30fc\u30b8\ndef damage( a, b )\n  return 1 if \"RGBRGB\".index(a+b)\n  return 4 if \"RGBRGB\".index(b+a)\n  return 2\nend\n\n# b \u304c a \u3092\u306a\u3050\u308b\ndef hit( a, b )\n  return if b[0]<=0\n  a[0] = [0, a[0] - damage(a.col, b.col) ].max\nend\n\n# a \u3068 b \u304c\u540c\u6642\u306b\u6bb4\u308a\u3042\u3046\ndef simhit( a, b )\n  a.hp = [0, a.hp - damage(a.col, b.col) ].max\n  b.hp = [0, b.hp - damage(b.col, a.col) ].max\nend\n\n# \u30e2\u30f3\u30b9\u30bf\u30fc a \u3068 \u30e2\u30f3\u30b9\u30bf\u30fcb \u3067\u4e00\u5ea6\u305a\u3064\u6bb4\u308a\u3042\u3046\ndef fight( a, b )\n  case a.lv<=>b.lv\n  when 1\n    hit( b, a )\n    hit( a, b )\n  when -1\n    hit( a, b )\n    hit( b, a )\n  when 0\n    simhit( a, b )\n  end\nend\n\n# \u30c7\u30c3\u30ada \u3068 \u30c7\u30c3\u30adb \u3067\u6226\u3046\ndef battle( a, b )\n  ma, mb = [a, b].map{ |x| x.chars.each_slice(2).map{ |l,c| Monster.new( l.to_i, c, l.to_i ) }}\n  loop do\n    fight( ma.first, mb.first )\n    ma.shift if ma.first.hp==0\n    mb.shift if mb.first.hp==0\n    return 0 if ma.empty? && mb.empty?\n    return -1 if mb.empty?\n    return 1 if ma.empty?\n  end\nend\n\ndef solve( src )\n  players = src.split(\",\").zip( [*0..100] )\n  wins=[0]*players.size\n  players.combination(2) do |a,b|\n    case battle( a[0], b[0] )\n    when -1\n      wins[a[1]]-=1\n    when 1\n      wins[b[1]]-=1\n    end\n  end\n  wins.zip( [*1..players.size] ).sort.map(&:last).join(\",\")\nend\n\n$stdout.sync=true\n\n$all_okay=true\n\ndef test( src, expected )\n  actual = solve( src )\n  p [ actual==expected ? \"ok\" : \"**NG**\", src[0,10], actual, expected ]\n  $all_okay &&=actual==expected\nend\n\ntest(\"9B,3R2G,1R2B3G\", \"1,3,2\")\ntest(\"1G\", \"1\")\ntest(\"1G,1R,1B\", \"1,2,3\")\ntest(\"8B,3R2G,1R2B3G\", \"3,1,2\")\ntest(\"6G,9R7B7B\", \"2,1\")\n\nputs(  $all_okay ? \"okay\" : \"something wrong\" )\n```\n\n\u3044\u3064\u3082\u3069\u304a\u308a\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5927\u534a\u306f\u7701\u7565\u3002\n\n\u554f\u984c\u6587\u306b\u306f\u306a\u3044\u6697\u9ed9\u306e\u4ed5\u69d8\uff08\uff1f\uff09\u300c\u30ec\u30d9\u30eb\u306f\u4e00\u6841\u300d\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u304b\u3063\u3053\u60aa\u3044\u3002\n`zip([*0..100])` \u306e\u8fba\u308a\u3082\u304b\u3063\u3053\u60aa\u3044\u3002\n\n\u4e0a\u8a182\u70b9\u4ee5\u5916\u306f\u307e\u3042\u307e\u3042\u3046\u307e\u304f\u66f8\u3051\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u308b\u3051\u3069\u3069\u3046\u3060\u308d\u3046\u3002\n\n\u4f1a\u5834\u3067\u306f `damage` \u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u306b\u3061\u3087\u3063\u3068\u9a5a\u304b\u308c\u305f\u3093\u3060\u3051\u3069\u3001\u79c1\u3068\u3057\u3066\u306f\u666e\u901a\u306b\u66f8\u3044\u305f\u3064\u3082\u308a\u3002\u666e\u901a\u3067\u3057\u3087\uff1f\n\n\u30d2\u30c3\u30c8\u30dd\u30a4\u30f3\u30c8\u304c\u30de\u30a4\u30ca\u30b9\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u9811\u5f35\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u306a\u3093\u3068\u306a\u304f\u3002\u30b2\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u3044\u305f\u9803\u306e\u8a18\u61b6\u306e\u305b\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n`wins[n]` \u304c\u6b63\u306b\u306a\u3089\u306a\u3044\u306e\u306f\u3001\u305d\u306e\u3042\u3068 sort \u3059\u308b\u3068\u304d\u306b\u4fbf\u5229\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3002`wins[n]` \u3092\u6b63\u306b\u3057\u3066\u3001`sort_by` \u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u304b\u3063\u305f\u306d\u3002\n\n", "tags": ["Ruby", "yhpg", "\u3069\u3046\u66f8\u304f"]}