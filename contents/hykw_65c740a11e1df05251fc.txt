{"context": "\u8af8\u822c\u306e\u4e8b\u60c5\u306b\u3088\u308a mix.exs \u306e\u4e2d\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304b\u3089\u53d6\u5f97\u3059\u308b\u30cb\u30fc\u30ba\u304c\u3042\u3063\u3066\u3061\u3087\u3063\u3068\u8abf\u3079\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u76f4\u63a5\u305d\u3046\u3044\u3046\u6a5f\u80fd\u304c\u7121\u304b\u3063\u305f\u305f\u3081\u3001\u7c21\u5358\u306a\u30de\u30af\u30ed\u3067\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30ed\u30b8\u30c3\u30af\u306f\u975e\u5e38\u306b\u5358\u7d14\u3067\u3001mix.exs \u3068\u540c\u3058\u5834\u6240\u306b VERSION \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304d\u3001\u305d\u306e\u4e2d\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u3092\u8a18\u5165\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3053\u306e\u5024\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4e2d\u306b version() \u3068\u3044\u3046\u95a2\u6570\u3092\u52d5\u7684\u306b\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u3042\u3068\u306f mix.exs \u3042\u308b\u3044\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u597d\u304d\u306a\u5834\u6240\u3067\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n\nVERSION\u30d5\u30a1\u30a4\u30eb\u306e\u4f8b\n1.2.3\n\n\n\nmix.exs\ndefmodule Foo.Mixfile do\n  use Mix.Project\n\n  ########## \u3053\u3053\u304b\u3089\u8ffd\u52a0\n  version = File.stream!(\"VERSION\", [], :line)\n  |> Enum.at(0)\n  |> String.strip()\n\n  def version(), do: unquote(version)\n  ########## \u3053\u3053\u307e\u3067\u8ffd\u52a0\n\n  def project do\n    [app: :foo,\n     version: version(),   ##### \u2190 version()\u306b\u5909\u66f4\n     elixir: \"~> 1.3\",\n     elixirc_paths: elixirc_paths(Mix.env),\n     compilers: [:phoenix, :gettext] ++ Mix.compilers,\n     build_embedded: (Mix.env == :stg) or (Mix.env == :prod),\n     start_permanent: (Mix.env == :stg) or (Mix.env == :prod),\n     aliases: aliases,\n     deps: deps]\n  end\n\n\n\u30fb\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304b\u3089\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u5f97\u3059\u308b\u6642\u7528\u306e\u95a2\u6570\n\ncontroller/foo.ex\ndefmodule Foo.util do\n\n  version = File.stream!(\"VERSION\", [], :line)\n  |> Enum.at(0)\n  |> String.strip()\n\n  def version(), do: unquote(version)\nend\n\n\n\u672c\u5f53\u306f DRY \u306b\u3057\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001mix.exs \u304b\u3089\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\uff08\u4e0a\u8a18\u306e\u4f8b\u3060\u3068 Foo.util.version\uff09\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3082\u3001\u304a\u305d\u3089\u304f\u512a\u5148\u5ea6\u306e\u95a2\u4fc2\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u305a\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u305d\u306e\u9006\u306b Foo.Mixfile \u30e2\u30b8\u30e5\u30fc\u30eb \u306e\u4e2d\u306e\u95a2\u6570\u3092 Foo.util.version() \u304b\u3089\u547c\u307c\u3046\u3068\u3057\u3066\u3082\u3001\u307e\u3041\u5f53\u305f\u308a\u524d\u3067\u3059\u304c\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u7248\u3067\u306f * (UndefinedFunctionError) function Foo.Mixfile.version/0 is undefined (module Foo.Mixfile is not available) \u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u307e\u3041\u30ed\u30b8\u30c3\u30af\u3082\u77ed\u3044\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3059\uff08\u3044\u3044\u89e3\u6c7a\u65b9\u6cd5\u3092\u3054\u5b58\u77e5\u306e\u65b9\u3001\u305c\u3072\u30b3\u30e1\u30f3\u30c8\u3092\uff01\uff09\n\u8af8\u822c\u306e\u4e8b\u60c5\u306b\u3088\u308a mix.exs \u306e\u4e2d\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304b\u3089\u53d6\u5f97\u3059\u308b\u30cb\u30fc\u30ba\u304c\u3042\u3063\u3066\u3061\u3087\u3063\u3068\u8abf\u3079\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u76f4\u63a5\u305d\u3046\u3044\u3046\u6a5f\u80fd\u304c\u7121\u304b\u3063\u305f\u305f\u3081\u3001\u7c21\u5358\u306a\u30de\u30af\u30ed\u3067\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30ed\u30b8\u30c3\u30af\u306f\u975e\u5e38\u306b\u5358\u7d14\u3067\u3001mix.exs \u3068\u540c\u3058\u5834\u6240\u306b `VERSION` \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304d\u3001\u305d\u306e\u4e2d\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u3092\u8a18\u5165\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3053\u306e\u5024\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4e2d\u306b `version()` \u3068\u3044\u3046\u95a2\u6570\u3092\u52d5\u7684\u306b\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u3042\u3068\u306f mix.exs \u3042\u308b\u3044\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u597d\u304d\u306a\u5834\u6240\u3067\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n\n```elixir:VERSION\u30d5\u30a1\u30a4\u30eb\u306e\u4f8b\n1.2.3\n```\n\n```elixir:mix.exs\ndefmodule Foo.Mixfile do\n  use Mix.Project\n\n  ########## \u3053\u3053\u304b\u3089\u8ffd\u52a0\n  version = File.stream!(\"VERSION\", [], :line)\n  |> Enum.at(0)\n  |> String.strip()\n\n  def version(), do: unquote(version)\n  ########## \u3053\u3053\u307e\u3067\u8ffd\u52a0\n\n  def project do\n    [app: :foo,\n     version: version(),   ##### \u2190 version()\u306b\u5909\u66f4\n     elixir: \"~> 1.3\",\n     elixirc_paths: elixirc_paths(Mix.env),\n     compilers: [:phoenix, :gettext] ++ Mix.compilers,\n     build_embedded: (Mix.env == :stg) or (Mix.env == :prod),\n     start_permanent: (Mix.env == :stg) or (Mix.env == :prod),\n     aliases: aliases,\n     deps: deps]\n  end\n```\n\n\u30fb\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304b\u3089\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u5f97\u3059\u308b\u6642\u7528\u306e\u95a2\u6570\n\n```elixir:controller/foo.ex\ndefmodule Foo.util do\n\n  version = File.stream!(\"VERSION\", [], :line)\n  |> Enum.at(0)\n  |> String.strip()\n\n  def version(), do: unquote(version)\nend\n```\n\n\n\u672c\u5f53\u306f DRY \u306b\u3057\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001mix.exs \u304b\u3089\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\uff08\u4e0a\u8a18\u306e\u4f8b\u3060\u3068 `Foo.util.version`\uff09\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3082\u3001\u304a\u305d\u3089\u304f\u512a\u5148\u5ea6\u306e\u95a2\u4fc2\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u305a\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u305d\u306e\u9006\u306b `Foo.Mixfile \u30e2\u30b8\u30e5\u30fc\u30eb` \u306e\u4e2d\u306e\u95a2\u6570\u3092 `Foo.util.version()` \u304b\u3089\u547c\u307c\u3046\u3068\u3057\u3066\u3082\u3001\u307e\u3041\u5f53\u305f\u308a\u524d\u3067\u3059\u304c\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u7248\u3067\u306f `* (UndefinedFunctionError) function Foo.Mixfile.version/0 is undefined (module Foo.Mixfile is not available)` \u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u307e\u3041\u30ed\u30b8\u30c3\u30af\u3082\u77ed\u3044\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3059\uff08\u3044\u3044\u89e3\u6c7a\u65b9\u6cd5\u3092\u3054\u5b58\u77e5\u306e\u65b9\u3001\u305c\u3072\u30b3\u30e1\u30f3\u30c8\u3092\uff01\uff09\n", "tags": ["Elixir", "Phoenix"]}