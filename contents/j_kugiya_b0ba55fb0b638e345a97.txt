{"tags": ["Scala", "Akka"], "context": "\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9045\u5ef6\u306e\u4f1d\u64ad\nActor Model\u306eActor\u306fmailbox\u306b\u5c4a\u3051\u3089\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u81ea\u5206\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u4e00\u3064\u305a\u3064\u51e6\u7406\u3059\u308b\u306e\u3067\u3001\u4f55\u3089\u304b\u306e\u969c\u5bb3\u304c\u8d77\u3053\u3063\u3066\u51e6\u7406\u306e\u9045\u5ef6\u304c\u767a\u751f\u3057\u305f\u6642\u306b\u51e6\u7406\u306e\u9045\u5ef6\u304c\u5f8c\u7d9a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u51e6\u7406\u306b\u3082\u4f1d\u64ad\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u3042\u308b\u51e6\u7406\u304c\u5e73\u574750ms\u306e\u51e6\u7406\u6642\u9593\u304c\u304b\u304b\u308b\u3068\u304d\u306b\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u308a\u624b(Producer)\u304c50ms\u4ee5\u4e0a\u306e\u9593\u9694\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u305f\u308a\u3059\u308b\u3068\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u306f\u3069\u3093\u3069\u3093\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001producer\u304c40ms\u306e\u9593\u9694\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u308b\u3068\u30011\u79d2\u5f8c\u306b\u306f250ms\u306e\u9045\u5ef6\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\nCircuit Breaker\nCircuit Breaker\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u5074\u306e\u65b9\u3067\u60f3\u5b9a\u3088\u308a\u3082\u5fdc\u7b54\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u51e6\u7406\u3092\u5931\u6557\u3068\u307f\u306a\u3057\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u906e\u65ad\u3057\u307e\u3059\u3002Back Pressure\u3092\u884c\u3046\u5834\u5408\u306b\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u3051\u624b\u3067\u8a31\u5bb9\u91cf\u3092\u9001\u308a\u624b\u306b\u4f1d\u3048\u308b\u4ed5\u7d44\u307f\u304c\u5fc5\u8981\u3067\u3059\u304c\u3001Circuit Breaker\u3092\u4f7f\u3046\u5834\u5408\u306b\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u3051\u624b\u306e\u65b9\u3067\u305d\u3046\u3057\u305f\u5236\u5fa1\u3092\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u305f\u3060\u3057\u3001\u8ca0\u8377\u3092\u5206\u6563\u3059\u308b\u305f\u3081\u306b\u30b9\u30ec\u30c3\u30c9\u306e\u6570\u3084\u30ce\u30fc\u30c9\u306e\u6570\u3092\u8abf\u6574\u3057\u305f\u308a\u3001\u906e\u65ad\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u56de\u5fa9\u51e6\u7406\u3092\u884c\u3046\u300c\u5834\u5408\u306b\u306f\u5225\u9014\u305d\u306e\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u3053\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nCircuit Breaker\u306e\u72b6\u614b\nCircuit Breaker\u306f3\u3064\u306e\u72b6\u614b\u3092\u9077\u79fb\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\n\nClose\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u53ef\u80fd\u306a\u72b6\u614b \nOpen\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u906e\u65ad\u3057\u3066\u3044\u308b\u72b6\u614b\u3002Open\u6642\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3088\u3046\u3068\u3059\u308b\u3068CircuitBreakerOpenException\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\nHalf-Open\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u4e00\u6642\u7684\u306b\u518d\u958b\u3057\u3066\u3044\u308b\u72b6\u614b\u3002Half-Open\u72b6\u614b\u306e\u3068\u304d\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306b\u6210\u529f\u3059\u308b\u3068(\u6240\u5b9a\u6642\u9593\u5185\u306b\u51e6\u7406\u304c\u7d42\u308f\u308b\u3068)Close\u72b6\u614b\u306b\u623b\u308b\u3002\u5931\u6557\u3057\u305f\u5834\u5408\u306fOpen\u72b6\u614b\u306b\u306a\u308b\u3002\n\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306bProducer\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u3001Worker\u304c\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\nWorker\u306f\u5358\u4e00\u3067\u306fProducer\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u308b\u983b\u5ea6\u3088\u308a\u3082\u51e6\u7406\u80fd\u529b\u304c\u4f4e\u3044\u306e\u3067\u3001\u51e6\u7406\u9045\u5ef6\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u9045\u5ef6\u304c\u4e00\u5b9a\u306e\u3057\u304d\u3044\u3092\u8d85\u3048\u308b\u3068\u30b9\u30ec\u30c3\u30c9\u6570\u3092\u5897\u3084\u3057\u3066\u51e6\u7406\u80fd\u529b\u3092\u5897\u3084\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nCircuit Breaker\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u521d\u671f\u5316\u3057\u307e\u3059\u3002\n  // worker\u306erouter\u3002\n  private val worker = context.actorOf(Worker.routerProps, \"worker\")\n\n\u3000// worker\u306e\u6570\u3092\u5897\u6e1b\u3055\u305b\u308bActor\n  private val resizer = context.actorOf(PoolResizer.props(worker.path))\n\n\n  val breaker = new CircuitBreaker(\n    context.system.scheduler,\n    maxFailures = 5, // \u3053\u306e\u56de\u6570\u3092\u8d85\u3048\u305f\u5931\u6557\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u306fOpen\u72b6\u614b\u306b\u306a\u308b\u3002\n    callTimeout = 150.milliseconds, // \u5931\u6557\u3068\u307f\u306a\u3059\u51e6\u7406\u6642\u9593\u306e\u3057\u304d\u3044\u5024\u3002\u30ec\u30a4\u30c6\u30f3\u30b7\u3092150 milli sec\u4ee5\u4e0b\u306b\u6291\u3048\u305f\u3044\n    resetTimeout = 50.milliseconds // Open\u72b6\u614b\u306b\u306a\u3063\u3066\u304b\u3089Half-Open\u306b\u306a\u308b\u307e\u3067\u306e\u6642\u9593\u3002\n    )(context.dispatcher)\n    .onOpen({\n      log.info(\"circuit breaker opened.\")\n      resizer ! PoolResizer.Up // worker\u306e\u6570\u3092\u5897\u3084\u3059\n    })\n    .onClose({\n      log.info(\"circuit breaker closed.\")\n      resizer ! PoolResizer.Down // worker\u306e\u6570\u3092\u6e1b\u3089\u3059\n    })\n    .onHalfOpen(log.info(\"circuit breaker half-opened.\"))\n\n\nCircuit Breaker\u304b\u3089\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306bask pattern\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\nCircuit Breaker\u306b\u3088\u3063\u3066\u906e\u65ad\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u56de\u5fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306fFuture\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3092\u4f7f\u3063\u3066\u56de\u5fa9\u51e6\u7406\u3092\u66f8\u304d\u307e\u3059\u3002\n  def receive = {\n    case m: Worker.Work =>\n      receiveCount += 1\n      log.info(\"receive count=\" + receiveCount)\n      implicit val dispatcher = context.system.dispatchers.lookup(\"master-future-dispatcher\")\n\n      // Circuit Breaker\u3092\u4f7f\u3063\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\n      val future = breaker.withCircuitBreaker {\n        val future = worker ? m\n        pipe(future) to counter// \u7d50\u679c\u3092\u6570\u3048\u308b\u3002\n        future\n      }\n      future.onFailure {\n        case ce: CircuitBreakerOpenException =>\n          producer ! Producer.Retry(m) // \u5931\u6557\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30ea\u30ab\u30d0\u30ea\u51e6\u7406\u306b\u4e57\u305b\u308b\u3002\n        case t: Throwable =>\n          log.warning(t.toString())\n      }\n  }\n\n\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3053\u3061\u3089\u306b\u304a\u3044\u3066\u3044\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306fworker\u306e\u6570\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\u4ed5\u7d44\u307f\u3092\u81ea\u4f5c\u3057\u3066\u3044\u307e\u3059\u304c\u3001Akka\u306e\u6a19\u6e96API\u306bResizer\u3068\u3044\u3046\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001worker\u3092\u5897\u6e1b\u3055\u305b\u308b\u304f\u3089\u3044\u306e\u8abf\u6574\u3060\u3063\u305f\u3089\u3053\u3061\u3089\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n### \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9045\u5ef6\u306e\u4f1d\u64ad\nActor Model\u306eActor\u306fmailbox\u306b\u5c4a\u3051\u3089\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u81ea\u5206\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u4e00\u3064\u305a\u3064\u51e6\u7406\u3059\u308b\u306e\u3067\u3001\u4f55\u3089\u304b\u306e\u969c\u5bb3\u304c\u8d77\u3053\u3063\u3066\u51e6\u7406\u306e\u9045\u5ef6\u304c\u767a\u751f\u3057\u305f\u6642\u306b\u51e6\u7406\u306e\u9045\u5ef6\u304c\u5f8c\u7d9a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u51e6\u7406\u306b\u3082\u4f1d\u64ad\u3057\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\u3042\u308b\u51e6\u7406\u304c\u5e73\u574750ms\u306e\u51e6\u7406\u6642\u9593\u304c\u304b\u304b\u308b\u3068\u304d\u306b\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u308a\u624b(Producer)\u304c50ms\u4ee5\u4e0a\u306e\u9593\u9694\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u305f\u308a\u3059\u308b\u3068\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u306f\u3069\u3093\u3069\u3093\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001producer\u304c40ms\u306e\u9593\u9694\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u308b\u3068\u30011\u79d2\u5f8c\u306b\u306f250ms\u306e\u9045\u5ef6\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n### Circuit Breaker\nCircuit Breaker\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u5074\u306e\u65b9\u3067\u60f3\u5b9a\u3088\u308a\u3082\u5fdc\u7b54\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u51e6\u7406\u3092\u5931\u6557\u3068\u307f\u306a\u3057\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u906e\u65ad\u3057\u307e\u3059\u3002Back Pressure\u3092\u884c\u3046\u5834\u5408\u306b\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u3051\u624b\u3067\u8a31\u5bb9\u91cf\u3092\u9001\u308a\u624b\u306b\u4f1d\u3048\u308b\u4ed5\u7d44\u307f\u304c\u5fc5\u8981\u3067\u3059\u304c\u3001Circuit Breaker\u3092\u4f7f\u3046\u5834\u5408\u306b\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u3051\u624b\u306e\u65b9\u3067\u305d\u3046\u3057\u305f\u5236\u5fa1\u3092\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u305f\u3060\u3057\u3001\u8ca0\u8377\u3092\u5206\u6563\u3059\u308b\u305f\u3081\u306b\u30b9\u30ec\u30c3\u30c9\u306e\u6570\u3084\u30ce\u30fc\u30c9\u306e\u6570\u3092\u8abf\u6574\u3057\u305f\u308a\u3001\u906e\u65ad\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u56de\u5fa9\u51e6\u7406\u3092\u884c\u3046\u300c\u5834\u5408\u306b\u306f\u5225\u9014\u305d\u306e\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u3053\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### Circuit Breaker\u306e\u72b6\u614b\nCircuit Breaker\u306f3\u3064\u306e\u72b6\u614b\u3092\u9077\u79fb\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\n\n- Close  \n  \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u53ef\u80fd\u306a\u72b6\u614b \n- Open  \n \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u906e\u65ad\u3057\u3066\u3044\u308b\u72b6\u614b\u3002Open\u6642\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3088\u3046\u3068\u3059\u308b\u3068CircuitBreakerOpenException\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n- Half-Open  \n \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u4e00\u6642\u7684\u306b\u518d\u958b\u3057\u3066\u3044\u308b\u72b6\u614b\u3002Half-Open\u72b6\u614b\u306e\u3068\u304d\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306b\u6210\u529f\u3059\u308b\u3068(\u6240\u5b9a\u6642\u9593\u5185\u306b\u51e6\u7406\u304c\u7d42\u308f\u308b\u3068)Close\u72b6\u614b\u306b\u623b\u308b\u3002\u5931\u6557\u3057\u305f\u5834\u5408\u306fOpen\u72b6\u614b\u306b\u306a\u308b\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306bProducer\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u3001Worker\u304c\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\nWorker\u306f\u5358\u4e00\u3067\u306fProducer\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u308b\u983b\u5ea6\u3088\u308a\u3082\u51e6\u7406\u80fd\u529b\u304c\u4f4e\u3044\u306e\u3067\u3001\u51e6\u7406\u9045\u5ef6\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u9045\u5ef6\u304c\u4e00\u5b9a\u306e\u3057\u304d\u3044\u3092\u8d85\u3048\u308b\u3068\u30b9\u30ec\u30c3\u30c9\u6570\u3092\u5897\u3084\u3057\u3066\u51e6\u7406\u80fd\u529b\u3092\u5897\u3084\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nCircuit Breaker\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u521d\u671f\u5316\u3057\u307e\u3059\u3002\n\n```\n  // worker\u306erouter\u3002\n  private val worker = context.actorOf(Worker.routerProps, \"worker\")\n\n\u3000// worker\u306e\u6570\u3092\u5897\u6e1b\u3055\u305b\u308bActor\n  private val resizer = context.actorOf(PoolResizer.props(worker.path))\n\n  \n  val breaker = new CircuitBreaker(\n    context.system.scheduler,\n    maxFailures = 5, // \u3053\u306e\u56de\u6570\u3092\u8d85\u3048\u305f\u5931\u6557\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u306fOpen\u72b6\u614b\u306b\u306a\u308b\u3002\n    callTimeout = 150.milliseconds, // \u5931\u6557\u3068\u307f\u306a\u3059\u51e6\u7406\u6642\u9593\u306e\u3057\u304d\u3044\u5024\u3002\u30ec\u30a4\u30c6\u30f3\u30b7\u3092150 milli sec\u4ee5\u4e0b\u306b\u6291\u3048\u305f\u3044\n    resetTimeout = 50.milliseconds // Open\u72b6\u614b\u306b\u306a\u3063\u3066\u304b\u3089Half-Open\u306b\u306a\u308b\u307e\u3067\u306e\u6642\u9593\u3002\n    )(context.dispatcher)\n    .onOpen({\n      log.info(\"circuit breaker opened.\")\n      resizer ! PoolResizer.Up // worker\u306e\u6570\u3092\u5897\u3084\u3059\n    })\n    .onClose({\n      log.info(\"circuit breaker closed.\")\n      resizer ! PoolResizer.Down // worker\u306e\u6570\u3092\u6e1b\u3089\u3059\n    })\n    .onHalfOpen(log.info(\"circuit breaker half-opened.\"))\n\n```\n\nCircuit Breaker\u304b\u3089\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306bask pattern\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\nCircuit Breaker\u306b\u3088\u3063\u3066\u906e\u65ad\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u56de\u5fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306fFuture\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3092\u4f7f\u3063\u3066\u56de\u5fa9\u51e6\u7406\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```\n  def receive = {\n    case m: Worker.Work =>\n      receiveCount += 1\n      log.info(\"receive count=\" + receiveCount)\n      implicit val dispatcher = context.system.dispatchers.lookup(\"master-future-dispatcher\")\n      \n      // Circuit Breaker\u3092\u4f7f\u3063\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\n      val future = breaker.withCircuitBreaker {\n        val future = worker ? m\n        pipe(future) to counter// \u7d50\u679c\u3092\u6570\u3048\u308b\u3002\n        future\n      }\n      future.onFailure {\n        case ce: CircuitBreakerOpenException =>\n          producer ! Producer.Retry(m) // \u5931\u6557\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30ea\u30ab\u30d0\u30ea\u51e6\u7406\u306b\u4e57\u305b\u308b\u3002\n        case t: Throwable =>\n          log.warning(t.toString())\n      }\n  }\n```\n\n\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f[\u3053\u3061\u3089](https://github.com/jkugiya/reactive-design-patterns/tree/master/src/main/scala/ch1p2/cb)\u306b\u304a\u3044\u3066\u3044\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306fworker\u306e\u6570\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\u4ed5\u7d44\u307f\u3092\u81ea\u4f5c\u3057\u3066\u3044\u307e\u3059\u304c\u3001Akka\u306e\u6a19\u6e96API\u306b[Resizer](http://doc.akka.io/docs/akka/snapshot/scala/routing.html#Dynamically_Resizable_Pool)\u3068\u3044\u3046\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001worker\u3092\u5897\u6e1b\u3055\u305b\u308b\u304f\u3089\u3044\u306e\u8abf\u6574\u3060\u3063\u305f\u3089\u3053\u3061\u3089\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n"}