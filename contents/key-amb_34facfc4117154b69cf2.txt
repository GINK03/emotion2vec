{"tags": ["Ruby2.3", "thor0.19"], "context": "\n\n\u306f\u3058\u3081\u306b\nthor \u306f Ruby \u3067 CLI \u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u3068\u304d\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b gem \u3067\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306a\u3069\u3001\u6a5f\u80fd\u304c\u5145\u5b9f\u3057\u3066\u3044\u307e\u3059\u3002\n\nThor as a Task Runner\n\u6700\u8fd1\u3001thor \u3092\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u3068\u3057\u3066 Rake \u306e\u4ee3\u308f\u308a\u306b\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3001\u3068\u77e5\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Rake \u306b\u5bfe\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u3084\u3001thor \u3092\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u3068\u3057\u3066\u4f7f\u3046\u305f\u3081\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3001\u8abf\u3079\u305f\u3053\u3068\u3084\u8a66\u3057\u305f\u3053\u3068\u3092\u8f09\u305b\u3066\u3044\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\n\u4e0b\u306e\u8a18\u4e8b\u306b\u5272\u3068\u3088\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\nThor\u5165\u9580 - Rake\u304b\u3089Thor\u3078 - - Qiita\n\n\nThorfile\nRakefile \u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\u4e2d\u8eab\u3068\u3057\u3066\u306f\u3001Thor \u3092\u7d99\u627f\u3057\u305f CLI \u30af\u30e9\u30b9\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u5358\u7d14\u306a\u3082\u306e\u3060\u3068\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058:\n\nThorfile\nclass Foo < Thor\n  desc 'foo', 'Say foo'\n  def foo\n    say 'foo'\n  end\nend\n\n\n\u5b9f\u884c\u4f8b\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n% thor -T\nfoo\n---\nthor foo:foo  # Say foo\n\n% thor foo:foo\nfoo\n\n#say \u306f Thor::Shell::Basic \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4e0a\u306e\u4f8b\u306a\u3089 puts \u3067\u3044\u3044\u306e\u3067\u3059\u304c\u3001#say \u3060\u3068\u8272\u3092\u4ed8\u3051\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u3002\nThor::Shell::Basic \u306e\u4ed6\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f\u3001\u5f8c\u534a\u3067\u3082\u3046\u5c11\u3057\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u306f foo.thor \u3068\u3057\u3066\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084 lib/tasks/ \u4ee5\u4e0b\u306b\u7f6e\u3044\u3066\u3082\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\u8a18\u4e8b\n\u672c\u5bb6\u306e Wiki \u306b\u3044\u304f\u3064\u304b\u95a2\u4fc2\u3059\u308b\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059:\n\nInvocations \u00b7 erikhuda/thor Wiki\nNamespaces \u00b7 erikhuda/thor Wiki\n\n\nRake \u306b\u5bfe\u3059\u308b\u5229\u70b9\n\u307e\u3068\u3081\u308b\u3068\u4ee5\u4e0b\u306b\u306a\u308a\u305d\u3046\u3067\u3059:\n\n\u5f15\u6570\u306e\u53d6\u308a\u6271\u3044\u304c\u697d\u306b\u306a\u308b\u3002\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3082\u30aa\u30d7\u30b7\u30e7\u30f3\u5f62\u5f0f\u3082\u3075\u3064\u3046\u306b\u4f7f\u3048\u308b\u3002\n\u69cb\u9020\u5316\u3057\u3084\u3059\u3044\u3002\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092 class \u3084 module \u5358\u4f4d\u3067\u5206\u5272\u3067\u304d\u308b\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u3084\u3059\u3044\u3002\n\n\u4e0a\u306e\u8a18\u4e8b\u306b\u3082\u3042\u308a\u307e\u3057\u305f\u304c\u3001Rake \u306e\u30da\u30a4\u30f3\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u300c\u30bf\u30b9\u30af\u306b\u5f15\u6570\u3092\u6e21\u3057\u305f\u3044\u3068\u304d\u306b\u3064\u3089\u3044\u300d\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3088\u3046\u3067\u3001thor \u3067\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u95a2\u6570\u5f15\u6570\u3084\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f62\u3067\u6271\u3048\u307e\u3059\u3002\n\u3042\u3068\u3001thor \u3067\u3042\u308c\u3070\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u3084\u3059\u3044\u3068\u304b\u3001\u69cb\u9020\u5316\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u610f\u898b\u304c\u3042\u308a\u307e\u3059\u3002\n\nReplace Rake with Thor \u2013 [codecrate]\n\n\n@key_amb ruby\u30b9\u30af\u30ea\u30d7\u30c8\u5316\u3059\u308b\u306b\u3057\u3066\u3082\u3001\u3075\u3064\u3046\u306b getopt \u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u51e6\u7406\u3059\u308b\u304b\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u6b32\u3057\u3044\u306a\u3089 thor \u4f7f\u3046\u304b\u306b\u3057\u305f\u307b\u3046\u304c rake \u3088\u308a\u7dba\u9e97\u306a\u69cb\u9020\u5316\u3055\u308c\u305f\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u3084\u3059\u3044\u3067\u3059\u2014 \u305d\u306e\u3063\u3064 (Naotoshi Seo) (@sonots) 2016\u5e749\u670810\u65e5\n\nRake \u3060\u3068\u5168\u3066\u306e\u30b3\u30fc\u30c9\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30b3\u30fc\u30d7\u306b\u7f6e\u304b\u308c\u308b\u304b\u3089\u3001\u540d\u524d\u306e\u7af6\u5408\u304c\u3064\u3089\u3044\u3001\u3068\u3044\u3046\u8a71\u3082\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u7d4c\u9a13\u304c\u6d45\u3044\u306e\u3067\u3001\u5b9f\u969b\u3069\u306e\u304f\u3089\u3044\u307e\u305a\u3044\u306e\u304b\u808c\u611f\u899a\u3067\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3001\u30bf\u30b9\u30af\u7528\u306e\u95a2\u6570\u3092\u3042\u3061\u3053\u3061\u306b\u66f8\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u3089\u5371\u967a\u306a\u306e\u304b\u306a\u3001\u306a\u3069\u3068\u60f3\u50cf\u3057\u3066\u3044\u307e\u3059\u3002\n\u6c42\u3080\u77e5\u898b\u3002\n\n\u4fbf\u5229\u306a\u6a5f\u80fd\n\nThor::Actions\n\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u3084\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u64cd\u4f5c\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nThor \u3092\u7d99\u627f\u3057\u305f class \u3067 include \u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\n\u3088\u304f\u4f7f\u3044\u305d\u3046\u3060\u306a\u3001\u3068\u601d\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u306f #inside \u3068 #run \u3067\u3059\u3002\n\n\n#inside \u306f\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u3067\u3001\u30d6\u30ed\u30c3\u30af\u3067\u6e21\u3057\u305f Ruby \u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n#run \u306f\u30b7\u30a7\u30eb\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002:capture \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u6709\u7121\u306b\u3088\u3063\u3066\u3001\u30d0\u30c3\u30af\u30af\u30a9\u30fc\u30c8\u307e\u305f\u306f system \u30e1\u30bd\u30c3\u30c9\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002\n\nThorfile\nclass App < Thor\n  include Thor::Actions\n  class_option :verbose, aliases: 'v', type: :boolean, default: false\n\n  desc 'work', 'Sample command in workdir'\n  def work\n    inside 'workdir', verbose: options[:verbose] do\n      pwd = run 'pwd', capture: true # `pwd`\n      say \"PWD: #{pwd}\"\n      ret = run 'false' # system('false')\n      say \"RESULT: #{ret}\"\n    end\n  end\nend\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n% thor app:work -v\n      inside  workdir\n         run    pwd from \"./workdir\"\n  PWD: /home/quiche/my/repos/tutorials/thor/action/workdir\n         run    false from \"./workdir\"\n  RESULT: false\n\n\u305d\u306e\u4ed6\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306f\u3001Thor::Actions \u306e RubyDoc \u3092\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\u53c2\u8003:\n\nActions \u00b7 erikhuda/thor Wiki\n\n\nThor::Shell::Basic\n\u7aef\u672b\u306b\u5bfe\u3059\u308b\u5165\u51fa\u529b\u3084\u3001\u5bfe\u8a71\u64cd\u4f5c\u7528\u306e\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u4fbf\u5229\u305d\u3046\u3060\u306a\u3001\u3068\u601d\u3063\u305f\u306e\u306f #ask, #yes?, #no?, #say \u3042\u305f\u308a\u3002\n#say \u306b\u3064\u3044\u3066\u306f\u4e0a\u306e\u65b9\u3067\u3082\u89e6\u308c\u307e\u3057\u305f\u3002\n\n\n#ask \u306f\u7aef\u672b\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3057\u3066\u3001\u30e6\u30fc\u30b6\u304b\u3089\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n#yes?, #no? \u306f #ask \u3092 wrap \u3057\u3066\u3001\u305d\u308c\u305e\u308c\u5165\u529b\u304c y|yes, n|no \u306a\u3089 true, \u3067\u306a\u3051\u308c\u3070 false \u3068\u306a\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059:\n\nThorfile\nclass App < Thor\n  desc 'dialog', 'Sample dialog'\n  def dialog name='...'\n    say \"Hello, #{name}\", :bold\n    if yes? 'Do you know how useful thor is?', :bold\n      say 'Wondeful!', [:magenta, :bold]\n    else\n      say %(It's a shame.), [:blue, :bold]\n    end\n\n    say ''\n    answer = ask 'Then, tell me the name of who you fell in love with for the first time:', :bold\n    if answer.length.nonzero?\n      say \"#{answer} ... OK. I remember.\", [:magenta, :bold]\n    else\n      say %(OK. I'll ask you again later), [:blue, :bold]\n    end\n\n    say ''\n    say 'Bye!', :bold\n  end\nend\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n% thor app:dialog MyName\nHello, MyName\nDo you know how useful thor is? y\nWondeful!\n\nThen, tell me the name of who you fell in love with for the first time: Oh, yes!\nOh, yes! ... OK. I remember.\n\nBye!\n\n% thor app:dialog\nHello, ...\nDo you know how useful thor is? NOOOOO\nIt's a shame.\n\nThen, tell me the name of who you fell in love with for the first time: \nOK. I'll ask you again later\n\nBye!\n\n(\u203b\u672c\u5f53\u306f\u8272\u304c\u4ed8\u3044\u305f\u308a\u3057\u307e\u3059\u3002)\n\u305d\u306e\u4ed6\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001RubyDoc \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u7d50\u3073\u306b\n\u8a66\u3057\u306a\u304c\u3089\u4f7f\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u30bf\u30b9\u30af\u306b\u67d4\u8edf\u306b\u5f15\u6570\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u4f7f\u3044\u3084\u3059\u305d\u3046\u3067\u3059\u3002\n\u6210\u719f\u5ea6\u3068\u3057\u3066\u306f Rake \u3084 Capistrano \u307b\u3069\u3067\u306f\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u308c\u306a\u308a\u306b\u4fbf\u5229\u306a\u6a5f\u80fd\u3082\u63c3\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\n[thor](https://github.com/erikhuda/thor) \u306f Ruby \u3067 CLI \u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u3068\u304d\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b gem \u3067\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306a\u3069\u3001\u6a5f\u80fd\u304c\u5145\u5b9f\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Thor as a Task Runner\n\n\u6700\u8fd1\u3001thor \u3092\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u3068\u3057\u3066 Rake \u306e\u4ee3\u308f\u308a\u306b\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3001\u3068\u77e5\u308a\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Rake \u306b\u5bfe\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u3084\u3001thor \u3092\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u3068\u3057\u3066\u4f7f\u3046\u305f\u3081\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3001\u8abf\u3079\u305f\u3053\u3068\u3084\u8a66\u3057\u305f\u3053\u3068\u3092\u8f09\u305b\u3066\u3044\u307e\u3059\u3002\n\n## \u4f7f\u3044\u65b9\n\n\u4e0b\u306e\u8a18\u4e8b\u306b\u5272\u3068\u3088\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n- [Thor\u5165\u9580 - Rake\u304b\u3089Thor\u3078 - - Qiita](http://qiita.com/yatmsu/items/5ba7016db33c13d7a882)\n\n### Thorfile\n\nRakefile \u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u4e2d\u8eab\u3068\u3057\u3066\u306f\u3001Thor \u3092\u7d99\u627f\u3057\u305f CLI \u30af\u30e9\u30b9\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u5358\u7d14\u306a\u3082\u306e\u3060\u3068\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058:\n\n```ruby:Thorfile\nclass Foo < Thor\n  desc 'foo', 'Say foo'\n  def foo\n    say 'foo'\n  end\nend\n```\n\n\u5b9f\u884c\u4f8b\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n```bash\n% thor -T\nfoo\n---\nthor foo:foo  # Say foo\n\n% thor foo:foo\nfoo\n```\n\n`#say` \u306f [Thor::Shell::Basic](http://www.rubydoc.info/github/wycats/thor/master/Thor/Shell/Basic) \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4e0a\u306e\u4f8b\u306a\u3089 `puts` \u3067\u3044\u3044\u306e\u3067\u3059\u304c\u3001`#say` \u3060\u3068\u8272\u3092\u4ed8\u3051\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u3002\nThor::Shell::Basic \u306e\u4ed6\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f\u3001\u5f8c\u534a\u3067\u3082\u3046\u5c11\u3057\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u306f `foo.thor` \u3068\u3057\u3066\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084 `lib/tasks/` \u4ee5\u4e0b\u306b\u7f6e\u3044\u3066\u3082\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n### \u53c2\u8003\u8a18\u4e8b\n\n\u672c\u5bb6\u306e Wiki \u306b\u3044\u304f\u3064\u304b\u95a2\u4fc2\u3059\u308b\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059:\n\n- [Invocations \u00b7 erikhuda/thor Wiki](https://github.com/erikhuda/thor/wiki/Invocations)\n- [Namespaces \u00b7 erikhuda/thor Wiki](https://github.com/erikhuda/thor/wiki/Namespaces)\n\n## Rake \u306b\u5bfe\u3059\u308b\u5229\u70b9\n\n\u307e\u3068\u3081\u308b\u3068\u4ee5\u4e0b\u306b\u306a\u308a\u305d\u3046\u3067\u3059:\n\n- \u5f15\u6570\u306e\u53d6\u308a\u6271\u3044\u304c\u697d\u306b\u306a\u308b\u3002\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3082\u30aa\u30d7\u30b7\u30e7\u30f3\u5f62\u5f0f\u3082\u3075\u3064\u3046\u306b\u4f7f\u3048\u308b\u3002\n- \u69cb\u9020\u5316\u3057\u3084\u3059\u3044\u3002\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092 class \u3084 module \u5358\u4f4d\u3067\u5206\u5272\u3067\u304d\u308b\u3002\n- \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u3084\u3059\u3044\u3002\n\n\u4e0a\u306e\u8a18\u4e8b\u306b\u3082\u3042\u308a\u307e\u3057\u305f\u304c\u3001Rake \u306e\u30da\u30a4\u30f3\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u300c\u30bf\u30b9\u30af\u306b\u5f15\u6570\u3092\u6e21\u3057\u305f\u3044\u3068\u304d\u306b\u3064\u3089\u3044\u300d\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3088\u3046\u3067\u3001thor \u3067\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u95a2\u6570\u5f15\u6570\u3084\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f62\u3067\u6271\u3048\u307e\u3059\u3002\n\n\u3042\u3068\u3001thor \u3067\u3042\u308c\u3070\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u3084\u3059\u3044\u3068\u304b\u3001\u69cb\u9020\u5316\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u610f\u898b\u304c\u3042\u308a\u307e\u3059\u3002\n\n- [Replace Rake with Thor \u2013 [codecrate]](http://codecrate.com/2014/01/replace-rake-with-thor.html)\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\"><a href=\"https://twitter.com/key_amb\">@key_amb</a> ruby\u30b9\u30af\u30ea\u30d7\u30c8\u5316\u3059\u308b\u306b\u3057\u3066\u3082\u3001\u3075\u3064\u3046\u306b getopt \u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u51e6\u7406\u3059\u308b\u304b\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u6b32\u3057\u3044\u306a\u3089 thor \u4f7f\u3046\u304b\u306b\u3057\u305f\u307b\u3046\u304c rake \u3088\u308a\u7dba\u9e97\u306a\u69cb\u9020\u5316\u3055\u308c\u305f\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u3084\u3059\u3044\u3067\u3059</p>&mdash; \u305d\u306e\u3063\u3064 (Naotoshi Seo) (@sonots) <a href=\"https://twitter.com/sonots/status/774497835421044736\">2016\u5e749\u670810\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nRake \u3060\u3068\u5168\u3066\u306e\u30b3\u30fc\u30c9\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30b3\u30fc\u30d7\u306b\u7f6e\u304b\u308c\u308b\u304b\u3089\u3001\u540d\u524d\u306e\u7af6\u5408\u304c\u3064\u3089\u3044\u3001\u3068\u3044\u3046\u8a71\u3082\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u7d4c\u9a13\u304c\u6d45\u3044\u306e\u3067\u3001\u5b9f\u969b\u3069\u306e\u304f\u3089\u3044\u307e\u305a\u3044\u306e\u304b\u808c\u611f\u899a\u3067\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3001\u30bf\u30b9\u30af\u7528\u306e\u95a2\u6570\u3092\u3042\u3061\u3053\u3061\u306b\u66f8\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u3089\u5371\u967a\u306a\u306e\u304b\u306a\u3001\u306a\u3069\u3068\u60f3\u50cf\u3057\u3066\u3044\u307e\u3059\u3002\n\u6c42\u3080\u77e5\u898b\u3002\n\n## \u4fbf\u5229\u306a\u6a5f\u80fd\n\n### Thor::Actions\n\n\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u3084\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u64cd\u4f5c\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nThor \u3092\u7d99\u627f\u3057\u305f class \u3067 include \u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\n\n\n\u3088\u304f\u4f7f\u3044\u305d\u3046\u3060\u306a\u3001\u3068\u601d\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u306f `#inside` \u3068 `#run` \u3067\u3059\u3002\n\n- `#inside` \u306f\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u3067\u3001\u30d6\u30ed\u30c3\u30af\u3067\u6e21\u3057\u305f Ruby \u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n- `#run` \u306f\u30b7\u30a7\u30eb\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002`:capture` \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u6709\u7121\u306b\u3088\u3063\u3066\u3001\u30d0\u30c3\u30af\u30af\u30a9\u30fc\u30c8\u307e\u305f\u306f `system` \u30e1\u30bd\u30c3\u30c9\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002\n\n```ruby:Thorfile\nclass App < Thor\n  include Thor::Actions\n  class_option :verbose, aliases: 'v', type: :boolean, default: false\n\n  desc 'work', 'Sample command in workdir'\n  def work\n    inside 'workdir', verbose: options[:verbose] do\n      pwd = run 'pwd', capture: true # `pwd`\n      say \"PWD: #{pwd}\"\n      ret = run 'false' # system('false')\n      say \"RESULT: #{ret}\"\n    end\n  end\nend\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```bash\n% thor app:work -v\n      inside  workdir\n         run    pwd from \"./workdir\"\n  PWD: /home/quiche/my/repos/tutorials/thor/action/workdir\n         run    false from \"./workdir\"\n  RESULT: false\n```\n\n\u305d\u306e\u4ed6\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306f\u3001[Thor::Actions \u306e RubyDoc](http://www.rubydoc.info/github/wycats/thor/master/Thor/Actions) \u3092\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\n\u53c2\u8003:\n\n- [Actions \u00b7 erikhuda/thor Wiki](https://github.com/erikhuda/thor/wiki/Actions)\n\n### Thor::Shell::Basic\n\n\u7aef\u672b\u306b\u5bfe\u3059\u308b\u5165\u51fa\u529b\u3084\u3001\u5bfe\u8a71\u64cd\u4f5c\u7528\u306e\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u4fbf\u5229\u305d\u3046\u3060\u306a\u3001\u3068\u601d\u3063\u305f\u306e\u306f `#ask`, `#yes?`, `#no?`, `#say` \u3042\u305f\u308a\u3002\n`#say` \u306b\u3064\u3044\u3066\u306f\u4e0a\u306e\u65b9\u3067\u3082\u89e6\u308c\u307e\u3057\u305f\u3002\n\n- `#ask` \u306f\u7aef\u672b\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a\u3057\u3066\u3001\u30e6\u30fc\u30b6\u304b\u3089\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n- `#yes?`, `#no?` \u306f `#ask` \u3092 wrap \u3057\u3066\u3001\u305d\u308c\u305e\u308c\u5165\u529b\u304c `y|yes`, `n|no` \u306a\u3089 true, \u3067\u306a\u3051\u308c\u3070 false \u3068\u306a\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059:\n\n```ruby:Thorfile\nclass App < Thor\n  desc 'dialog', 'Sample dialog'\n  def dialog name='...'\n    say \"Hello, #{name}\", :bold\n    if yes? 'Do you know how useful thor is?', :bold\n      say 'Wondeful!', [:magenta, :bold]\n    else\n      say %(It's a shame.), [:blue, :bold]\n    end\n\n    say ''\n    answer = ask 'Then, tell me the name of who you fell in love with for the first time:', :bold\n    if answer.length.nonzero?\n      say \"#{answer} ... OK. I remember.\", [:magenta, :bold]\n    else\n      say %(OK. I'll ask you again later), [:blue, :bold]\n    end\n\n    say ''\n    say 'Bye!', :bold\n  end\nend\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n% thor app:dialog MyName\nHello, MyName\nDo you know how useful thor is? y\nWondeful!\n\nThen, tell me the name of who you fell in love with for the first time: Oh, yes!\nOh, yes! ... OK. I remember.\n\nBye!\n\n% thor app:dialog\nHello, ...\nDo you know how useful thor is? NOOOOO\nIt's a shame.\n\nThen, tell me the name of who you fell in love with for the first time: \nOK. I'll ask you again later\n\nBye!\n```\n\n(\u203b\u672c\u5f53\u306f\u8272\u304c\u4ed8\u3044\u305f\u308a\u3057\u307e\u3059\u3002)\n\n\u305d\u306e\u4ed6\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001[RubyDoc](http://www.rubydoc.info/github/wycats/thor/master/Thor/Shell/Basic) \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n# \u7d50\u3073\u306b\n\n\u8a66\u3057\u306a\u304c\u3089\u4f7f\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u30bf\u30b9\u30af\u306b\u67d4\u8edf\u306b\u5f15\u6570\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u4f7f\u3044\u3084\u3059\u305d\u3046\u3067\u3059\u3002\n\u6210\u719f\u5ea6\u3068\u3057\u3066\u306f Rake \u3084 Capistrano \u307b\u3069\u3067\u306f\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u308c\u306a\u308a\u306b\u4fbf\u5229\u306a\u6a5f\u80fd\u3082\u63c3\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n"}