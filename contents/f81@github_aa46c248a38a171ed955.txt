{"context": " More than 1 year has passed since last update.\u4eca\u56de\u306f \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1 \u3060\uff01\uff01\n\u3053\u3044\u3064\u51c4\u3044\u5974\u306a\u3093\u3060\u305c\u3002\n\u5b9f\u306f\u6700\u521d\u3001\u5168\u304f\u4f7f\u3044\u9053\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\nif\u3067\u826f\u3044\u3093\u3058\u3083\u306d\uff1f\u3068\u304b\u601d\u3063\u3066\u3051\u3069\u3001\nif\u3088\u308a\u3082\u3084\u308c\u308b\u3053\u3068\u306e\u5e45\u304c\u5e83\u3059\u304e\u308b\u3093\u3060\u3002\n\u66f8\u304d\u306a\u304c\u3089\u898b\u3066\u307f\u3088\u3046\uff01\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3068\u306f\nif\u3084switch\u306e\u3088\u3046\u306b\u6761\u4ef6\u5206\u5c90\u306b\u5206\u985e\u3055\u308c\u308b\u306e\u304b\u306a\u3002\n\u305f\u3060if\u3084switch\u3068\u540c\u7b49\u306b\u4f7f\u3046\u3060\u3051\u3067\u306f\u3082\u3063\u305f\u3044\u306a\u3044\u3002\n\u3069\u308c\u3060\u3051\u51c4\u3044\u304b\u898b\u3066\u307f\u3088\u3046\uff01\n\n\u30d1\u30bf\u30fc\u30f3\n\u610f\u8b58\u3057\u3066\u306a\u304b\u3063\u305f\u3051\u3069\u30d1\u30bf\u30fc\u30f3\u8272\u3005\u3042\u308b\u3093\u3060\u306d\u3002\u3002\u3002\n\u6700\u521d\u306f\u6238\u60d1\u3046\u304b\u3082\u3057\u308c\u306a\u3044\u3051\u3069\u3001\u7c21\u5358\u306a\u30d1\u30bf\u30fc\u30f3\u304b\u3089\u898b\u3066\u307f\u3088\u3046\u3002\n\n\u5b9a\u6570\u30d1\u30bf\u30fc\u30f3\n\u307e\u305a\u306f\u3001Java\u306eswich\u6587\u307d\u3044\u3084\u3064\u3002\n\nPatternMatchConst.scala\nimport scala.util.Random\n\nobject PatternMatchConst {\n\n  def main(args: Array[String]): Unit = {\n    val random = Random.nextBoolean\n\n    val num = random match {\n      case true => 1\n      case false => 0\n    }\n\n    println(\"random:\" + random)\n    println(\"number:\" + num)\n  }\n\n}\n\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\u3088\uff01\n$ scalac PatternMatchConst.scala\n\n$ scala PatternMatchConst\nrandom:true\nnumber:1\n\n\u3053\u3053\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u306aBoolean \u3092\u751f\u6210\u3057\u3066\u5909\u6570random \u306b\u675f\u7e1b\u3057\u3066\u3044\u308b\u3002\n\u305d\u3057\u3066\u5909\u6570random \u306b\u5bfe\u3057\u3066\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u5b9f\u65bd\u3059\u308b\u3002\n\u305d\u308c\u304ccase \u306e\u5f8c\u306etrue \u3068false \u3060\u3002\n\u305d\u3057\u3066\u30de\u30c3\u30c1\u3057\u305f\u65b9\u306e\u5024\u3092\u5909\u6570num \u306b\u675f\u7e1b\u3055\u305b\u308b\u3002\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3082\u5f0f\u3067\u3042\u308b\u3053\u3068\u3092\u610f\u8b58\u3059\u308b\u305f\u3081\u306b\n\u623b\u308a\u5024\u3092\u8fd4\u3057\u5909\u6570\u306b\u675f\u7e1b\u3055\u305b\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u3057\u3066\u307f\u305f\u3002\n\n\u675f\u7e1b\u3068\u306f\n\u672c\u3068\u304b\u3060\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u826f\u304f\u51fa\u3066\u304f\u308b\u3002\n\u5024\u3092\u5909\u6570\u306b\u675f\u7e1b\u3059\u308b\n\u5f0f\u3067\u5f97\u305f\u7d50\u679c\u3092\u5909\u6570\u306b\u7d10\u3065\u3051\u308b\u3068\u3044\u3046\u611f\u3058\u306a\u306e\u304b\u306a\u3002\n\u4ee3\u5165\u3068\u4f3c\u3066\u3044\u308b\u3051\u3069\u3001\u8003\u3048\u65b9\u304b\u3089\u9055\u3046\u3093\u3060\u3088\u306d\u3002\nbind \u306e\u8a33\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u306d\u3002\n\u4eca\u56de\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u672c\u984c\u306a\u306e\u3067\u3001\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u3092\u8aad\u3093\u3067\u307f\u3066\u4e0b\u3055\u3044\u3002\nSmalltalk use: better\u300a\u4f59\u9332\u300b\u4ee3\u5165 vs. \u675f\u7e1b\n\n\u578b\u30d1\u30bf\u30fc\u30f3\n\u6b21\u306f \u578b \u3060\u3002Java\u306einstanceof\u3068\u4f3c\u3066\u3044\u308b\u3002\n\nPatternMatchType.scala\nobject PatternMatchType {\n\n  def main(args: Array[String]): Unit = {\n    val list = List(1, true, \"J\")\n\n    for (value <- list) {\n      value match {\n        case num: Integer => println(\"num=\" + num)\n        case bool: Boolean => println(\"bool=\" + bool)\n        case name: String => println(\"name=\" + name)\n        case _ => println(\"value=\" + value)\n      }\n    }\n\n  }\n\n}\n\n\n$ scalac PatternMatchType.scala\n\n$ scala PatternMatchType\nnum=1\nbool=true\nname=J\n\n\u578b\u306b\u5fdc\u3058\u3066\u3084\u308b\u3053\u3068\u3092\u6c7a\u3081\u3066\u3044\u308b\u3093\u3060\u3002\n\n\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\n\u3064\u304e\u306f\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9_\u3060\u3002\n\nPatternMatchWild.scala\nobject PatternMatchWild {\n\n  def main(args: Array[String]): Unit = {\n    val num = 4\n\n    num match {\n      case _ => println(\"number:\" + num)\n\n    }\n  }\n\n}\n\n\n$ scalac PatternMatchWild.scala\n\n$ scala PatternMatchWild\nnumber:4\n\n\u5168\u3066\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u30de\u30c3\u30c1\u3057\u3061\u3083\u3046\u3093\u3060\u3002\n\n\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u304c\u306a\u3044\u5834\u5408\n\u3069\u3046\u306a\u308b\u304b\u898b\u3066\u307f\u3088\u3046\u3002\n\nPatternMatchNoWild.scala\nobject PatternMatchNoWild {\n\n  def main(args: Array[String]): Unit = {\n    val list = List(1, true, \"J\")\n\n    for (value <- list) {\n      value match {\n        case num: Integer => println(\"num=\" + num)\n        case bool: Boolean => println(\"bool=\" + bool)\n      }\n    }\n\n  }\n\n}\n\n\n$ scalac PatternMatchNoWild.scala\n\n$ scala PatternMatchNoWild\nnum=1\nbool=true\nscala.MatchError: J (of class java.lang.String)\n    at PatternMatch3_2$$anonfun$main$1.apply(PatternMatch3_2.scala:7)\n    at PatternMatch3_2$$anonfun$main$1.apply(PatternMatch3_2.scala:6)\n    at scala.collection.immutable.List.foreach(List.scala:318)\n    at PatternMatch3_2$.main(PatternMatch3_2.scala:6)\n    at PatternMatch3_2.main(PatternMatch3_2.scala)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:601)\n    at scala.tools.nsc.util.ScalaClassLoader$$anonfun$run$1.apply(ScalaClassLoader.scala:71)\n    at scala.tools.nsc.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\n    at scala.tools.nsc.util.ScalaClassLoader$URLClassLoader.asContext(ScalaClassLoader.scala:139)\n    at scala.tools.nsc.util.ScalaClassLoader$class.run(ScalaClassLoader.scala:71)\n    at scala.tools.nsc.util.ScalaClassLoader$URLClassLoader.run(ScalaClassLoader.scala:139)\n    at scala.tools.nsc.CommonRunner$class.run(ObjectRunner.scala:28)\n    at scala.tools.nsc.ObjectRunner$.run(ObjectRunner.scala:45)\n    at scala.tools.nsc.CommonRunner$class.runAndCatch(ObjectRunner.scala:35)\n    at scala.tools.nsc.ObjectRunner$.runAndCatch(ObjectRunner.scala:45)\n    at scala.tools.nsc.MainGenericRunner.runTarget$1(MainGenericRunner.scala:74)\n    at scala.tools.nsc.MainGenericRunner.process(MainGenericRunner.scala:96)\n    at scala.tools.nsc.MainGenericRunner$.main(MainGenericRunner.scala:105)\n    at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u3063\u3061\u3083\u3044\u307e\u3057\u305f\u3002 \n\u4f55\u304b\u3057\u3089\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3093\u3060\u306d\u3002 \n\u5225\u306e\u624b\u6bb5\u3067\u5236\u5fa1\u3057\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u3092\u6700\u5f8c\u306b\u66f8\u304f\u3088\u3046\u306b\u3057\u3088\u3046\u3002\n\n\u5909\u6570\u30d1\u30bf\u30fc\u30f3\n\u6b21\u306f\u5909\u6570\u306b\u675f\u7e1b\u3055\u305b\u3066\u307f\u308b\u3088\u3002\u3053\u3053\u304b\u3089Java\u306e\u4e16\u754c\u304b\u3089\u96e2\u308c\u308b\u306d\u3002\n\nPatternMatchVar.scala\nobject PatternMatchVar {\n\n  def main(args: Array[String]): Unit = {\n    val random = 4\n\n    val result = random match {\n      case num => num * 2\n    }\n\n    println(\"random:\" + random)\n    println(\"number:\" + result)\n  }\n\n}\n\n\n$ scalac PatternMatchVar.scala\n\n$ scala PatternMatchVar\nrandom:4\nnumber:8\n\n\u307e\u305a\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u5168\u3066\u306e\u5024\u306b\u30de\u30c3\u30c1\u3059\u308b\u3093\u3060\u3002\n\u3057\u304b\u3082\u30de\u30c3\u30c1\u3057\u305f\u5024\u3092 \u5909\u6570 num \u306b\u675f\u7e1b\u3055\u305b\u3066\u3044\u308b\u3093\u3060\u3002\n\u305d\u3057\u3066\u51e6\u7406\u306e\u4e2d\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002\n\u5909\u6570num \u30922\u500d\u306b\u3057\u3066\u3044\u308b\u3093\u3060\u3002\n\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u3068\u4f3c\u3066\u3044\u308b\u3051\u3069\u3001\u5225\u306e\u5909\u6570\u306b\u675f\u7e1b\u3057\u3066\u3044\u3068\u3053\u308d\u304c\u9055\u3046\u3093\u3060\u3002\n\n\u30b7\u30fc\u30b1\u30f3\u30b9\u30d1\u30bf\u30fc\u30f3\n\u306a\u3093\u3068\u30b7\u30fc\u30b1\u30f3\u30b9\u3068\u3082\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u304d\u308b\u3093\u3060\u3002\n\nPatternMatchSeq.scala\nobject PatternMatchSeq {\n\n  def main(args: Array[String]): Unit = {\n    val seq = Seq(1, 2, 3, 4)\n\n    val result = seq match {\n      case Seq(1, a, _*) => a\n      case _ => 0\n    }\n\n    println(\"number:\" + result)\n  }\n\n}\n\n\n$ scalac PatternMatchSeq.scala\n\n$ scala PatternMatchSeq\nnumber:2\n\n\u3053\u3053\u3067\u306f\u5148\u982d\u8981\u7d20\u304c1 \u3067\u3001\u8981\u7d20\u65702\u500b\u4ee5\u4e0a\u306eSeq \u3068\u3044\u3046\u6761\u4ef6\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u3066\u3044\u308b\u3002\n_* \u306f0\u500b\u4ee5\u4e0a\u306e\u4efb\u610f\u306e\u8981\u7d20\u3092\u8868\u3059\u3093\u3060\u3002\n\u305d\u3057\u3066\u30011\u756a\u76ee\u306e\u8981\u7d20\u3092\u5909\u6570a \u306b\u675f\u7e1b\u3057\u3066\u3044\u308b\u3093\u3060\u3002  \n\n\u30bf\u30d7\u30eb\u30d1\u30bf\u30fc\u30f3\n\u30bf\u30d7\u30eb\u3067\u3082\u3082\u3061\u308d\u3093\u3067\u304d\u308b\u305e\u3002\n\nPatternMatchTuple.scala\nobject PatternMatchTuple {\n\n  def main(args: Array[String]): Unit = {\n    val tuple = (1, 2, \"OK\")\n\n    val result = tuple match {\n      case (1, 2, x) => x\n      case _ => \"NG\"\n    }\n\n    println(\"result:\" + result)\n  }\n\n}\n\n\n$ scalac PatternMatchTuple.scala\n\n$ scala PatternMatchTuple\nresult:OK\n\n\u3082\u3046\u99b4\u308c\u3066\u304d\u305f\u304b\u306a\uff1f\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30d1\u30bf\u30fc\u30f3\n\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\u3060\u3002 \n\u30d5\u30a3\u30fc\u30eb\u30c9\u307e\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3093\u3060\u3002\n\nPatternMatchConstructor.scala\nobject PatternMatchConstructor {\n\n  case class Person(name: String, age: Int, education: String)\n\n  def main(args: Array[String]): Unit = {\n    val person = Person(\"\u693f\u5c71 \u6e05\u7f8e\", 15, \"\u7537\u587e\")\n\n    val belongTo = person match {\n      case Person(\"\u72ec\u773c\u9244\", _, \"\u7537\u587e\") => \"\u93ae\u5b88\u76f4\u5eca\u4e09\u4eba\u8846 \"\n      case Person(\"\u693f\u5c71 \u6e05\u7f8e\", _, \"\u7537\u587e\") => \"\u4e00\u53f7\u751f\"\n      case _ => \"\u4e00\u822c\u5e02\u6c11\"\n    }\n\n    println(\"\u6240\u5c5e:\" + belongTo)\n  }\n\n}\n\n\n$ scalac PatternMatchConstructor.scala\n\n$ scala PatternMatchConstructor\n\u6240\u5c5e:\u4e00\u53f7\u751f\n\n\u30d5\u30a3\u30fc\u30eb\u30c9\u307e\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u5bfe\u8c61\u306b\u3057\u3066\u3044\u308b\u304b\u3089 \n\u72ec\u773c\u9244\u69d8\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u306e\u304c\u308f\u304b\u3063\u305f\u304b\u306a\uff1f\n\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u3060\uff01\n\n\u307e\u3068\u3081\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u51c4\u3044\u5974\u3060\u308d\uff1f \n\u3053\u3093\u306a\u51c4\u3044\u5974\u306f\u4f7f\u308f\u306a\u3044\u3068\u640d\u3060\u305e\u3002\n\u3067\u3082\u6700\u8fd1\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u66f8\u304b\u306a\u3044\u3067\u7dba\u9e97\u306b\u66f8\u3051\u306a\u3044\u304b\u306a\uff1f\n\u3068\u8003\u3048\u3066\u305f\u308a\u3059\u308b\u3093\u3060\u3088\u306d\u3002\u3002\u3002\n\u4eca\u56de\u3082 \n\u4f53\u3067\u611f\u3058\u3066\u304f\u308c\u305f\u304b\u306a\uff1f\n\u4eca\u56de\u306f __\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1__ \u3060\uff01\uff01\n\u3053\u3044\u3064\u51c4\u3044\u5974\u306a\u3093\u3060\u305c\u3002\n\n\u5b9f\u306f\u6700\u521d\u3001\u5168\u304f\u4f7f\u3044\u9053\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\nif\u3067\u826f\u3044\u3093\u3058\u3083\u306d\uff1f\u3068\u304b\u601d\u3063\u3066\u3051\u3069\u3001\nif\u3088\u308a\u3082\u3084\u308c\u308b\u3053\u3068\u306e\u5e45\u304c\u5e83\u3059\u304e\u308b\u3093\u3060\u3002\n\n\u66f8\u304d\u306a\u304c\u3089\u898b\u3066\u307f\u3088\u3046\uff01\n\n# \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3068\u306f\nif\u3084switch\u306e\u3088\u3046\u306b\u6761\u4ef6\u5206\u5c90\u306b\u5206\u985e\u3055\u308c\u308b\u306e\u304b\u306a\u3002\n\u305f\u3060if\u3084switch\u3068\u540c\u7b49\u306b\u4f7f\u3046\u3060\u3051\u3067\u306f\u3082\u3063\u305f\u3044\u306a\u3044\u3002\n\n\u3069\u308c\u3060\u3051\u51c4\u3044\u304b\u898b\u3066\u307f\u3088\u3046\uff01\n\n# \u30d1\u30bf\u30fc\u30f3\n\u610f\u8b58\u3057\u3066\u306a\u304b\u3063\u305f\u3051\u3069\u30d1\u30bf\u30fc\u30f3\u8272\u3005\u3042\u308b\u3093\u3060\u306d\u3002\u3002\u3002\n\n\u6700\u521d\u306f\u6238\u60d1\u3046\u304b\u3082\u3057\u308c\u306a\u3044\u3051\u3069\u3001\u7c21\u5358\u306a\u30d1\u30bf\u30fc\u30f3\u304b\u3089\u898b\u3066\u307f\u3088\u3046\u3002\n\n## \u5b9a\u6570\u30d1\u30bf\u30fc\u30f3\n\u307e\u305a\u306f\u3001Java\u306eswich\u6587\u307d\u3044\u3084\u3064\u3002\n\n```scala:PatternMatchConst.scala\nimport scala.util.Random\n\nobject PatternMatchConst {\n\n  def main(args: Array[String]): Unit = {\n    val random = Random.nextBoolean\n\n    val num = random match {\n      case true => 1\n      case false => 0\n    }\n\n    println(\"random:\" + random)\n    println(\"number:\" + num)\n  }\n\n}\n```\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\u3088\uff01\n\n```\n$ scalac PatternMatchConst.scala\n\n$ scala PatternMatchConst\nrandom:true\nnumber:1\n```\n\n\u3053\u3053\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u306a`Boolean` \u3092\u751f\u6210\u3057\u3066\u5909\u6570`random` \u306b\u675f\u7e1b\u3057\u3066\u3044\u308b\u3002\n\u305d\u3057\u3066\u5909\u6570`random` \u306b\u5bfe\u3057\u3066\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u5b9f\u65bd\u3059\u308b\u3002\n\u305d\u308c\u304c`case` \u306e\u5f8c\u306e`true` \u3068`false` \u3060\u3002\n\n\u305d\u3057\u3066\u30de\u30c3\u30c1\u3057\u305f\u65b9\u306e\u5024\u3092\u5909\u6570`num` \u306b\u675f\u7e1b\u3055\u305b\u308b\u3002\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3082\u5f0f\u3067\u3042\u308b\u3053\u3068\u3092\u610f\u8b58\u3059\u308b\u305f\u3081\u306b\n\u623b\u308a\u5024\u3092\u8fd4\u3057\u5909\u6570\u306b\u675f\u7e1b\u3055\u305b\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u3057\u3066\u307f\u305f\u3002\n\n\n### \u675f\u7e1b\u3068\u306f\n\u672c\u3068\u304b\u3060\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u826f\u304f\u51fa\u3066\u304f\u308b\u3002\n\n__\u5024\u3092\u5909\u6570\u306b\u675f\u7e1b\u3059\u308b__\n\n\u5f0f\u3067\u5f97\u305f\u7d50\u679c\u3092\u5909\u6570\u306b\u7d10\u3065\u3051\u308b\u3068\u3044\u3046\u611f\u3058\u306a\u306e\u304b\u306a\u3002\n\u4ee3\u5165\u3068\u4f3c\u3066\u3044\u308b\u3051\u3069\u3001\u8003\u3048\u65b9\u304b\u3089\u9055\u3046\u3093\u3060\u3088\u306d\u3002\n\n__bind__ \u306e\u8a33\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u306d\u3002\n\n\u4eca\u56de\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u672c\u984c\u306a\u306e\u3067\u3001\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u3092\u8aad\u3093\u3067\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n[Smalltalk use: better\u300a\u4f59\u9332\u300b\u4ee3\u5165 vs. \u675f\u7e1b](http://d.hatena.ne.jp/kotsubu-chan/20000701)\n\n## \u578b\u30d1\u30bf\u30fc\u30f3\n\u6b21\u306f __\u578b__ \u3060\u3002Java\u306e`instanceof`\u3068\u4f3c\u3066\u3044\u308b\u3002\n\n```scala:PatternMatchType.scala\nobject PatternMatchType {\n\n  def main(args: Array[String]): Unit = {\n    val list = List(1, true, \"J\")\n\n    for (value <- list) {\n      value match {\n        case num: Integer => println(\"num=\" + num)\n        case bool: Boolean => println(\"bool=\" + bool)\n        case name: String => println(\"name=\" + name)\n        case _ => println(\"value=\" + value)\n      }\n    }\n\n  }\n\n}\n```\n\n```\n$ scalac PatternMatchType.scala\n\n$ scala PatternMatchType\nnum=1\nbool=true\nname=J\n```\n\n\u578b\u306b\u5fdc\u3058\u3066\u3084\u308b\u3053\u3068\u3092\u6c7a\u3081\u3066\u3044\u308b\u3093\u3060\u3002\n\n## \u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\n\u3064\u304e\u306f\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9`_`\u3060\u3002\n\n```scala:PatternMatchWild.scala\nobject PatternMatchWild {\n\n  def main(args: Array[String]): Unit = {\n    val num = 4\n\n    num match {\n      case _ => println(\"number:\" + num)\n\n    }\n  }\n\n}\n```\n\n```\n$ scalac PatternMatchWild.scala\n\n$ scala PatternMatchWild\nnumber:4\n```\n\n\u5168\u3066\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u30de\u30c3\u30c1\u3057\u3061\u3083\u3046\u3093\u3060\u3002\n\n### \u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u304c\u306a\u3044\u5834\u5408\n\u3069\u3046\u306a\u308b\u304b\u898b\u3066\u307f\u3088\u3046\u3002\n\n```scala:PatternMatchNoWild.scala\nobject PatternMatchNoWild {\n\n  def main(args: Array[String]): Unit = {\n    val list = List(1, true, \"J\")\n\n    for (value <- list) {\n      value match {\n        case num: Integer => println(\"num=\" + num)\n        case bool: Boolean => println(\"bool=\" + bool)\n      }\n    }\n\n  }\n\n}\n```\n\n```\n$ scalac PatternMatchNoWild.scala\n\n$ scala PatternMatchNoWild\nnum=1\nbool=true\nscala.MatchError: J (of class java.lang.String)\n\tat PatternMatch3_2$$anonfun$main$1.apply(PatternMatch3_2.scala:7)\n\tat PatternMatch3_2$$anonfun$main$1.apply(PatternMatch3_2.scala:6)\n\tat scala.collection.immutable.List.foreach(List.scala:318)\n\tat PatternMatch3_2$.main(PatternMatch3_2.scala:6)\n\tat PatternMatch3_2.main(PatternMatch3_2.scala)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:601)\n\tat scala.tools.nsc.util.ScalaClassLoader$$anonfun$run$1.apply(ScalaClassLoader.scala:71)\n\tat scala.tools.nsc.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\n\tat scala.tools.nsc.util.ScalaClassLoader$URLClassLoader.asContext(ScalaClassLoader.scala:139)\n\tat scala.tools.nsc.util.ScalaClassLoader$class.run(ScalaClassLoader.scala:71)\n\tat scala.tools.nsc.util.ScalaClassLoader$URLClassLoader.run(ScalaClassLoader.scala:139)\n\tat scala.tools.nsc.CommonRunner$class.run(ObjectRunner.scala:28)\n\tat scala.tools.nsc.ObjectRunner$.run(ObjectRunner.scala:45)\n\tat scala.tools.nsc.CommonRunner$class.runAndCatch(ObjectRunner.scala:35)\n\tat scala.tools.nsc.ObjectRunner$.runAndCatch(ObjectRunner.scala:45)\n\tat scala.tools.nsc.MainGenericRunner.runTarget$1(MainGenericRunner.scala:74)\n\tat scala.tools.nsc.MainGenericRunner.process(MainGenericRunner.scala:96)\n\tat scala.tools.nsc.MainGenericRunner$.main(MainGenericRunner.scala:105)\n\tat scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)\n```\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u3063\u3061\u3083\u3044\u307e\u3057\u305f\u3002 \n\u4f55\u304b\u3057\u3089\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3093\u3060\u306d\u3002 \n\n\u5225\u306e\u624b\u6bb5\u3067\u5236\u5fa1\u3057\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u3092\u6700\u5f8c\u306b\u66f8\u304f\u3088\u3046\u306b\u3057\u3088\u3046\u3002\n\n## \u5909\u6570\u30d1\u30bf\u30fc\u30f3\n\u6b21\u306f\u5909\u6570\u306b\u675f\u7e1b\u3055\u305b\u3066\u307f\u308b\u3088\u3002\u3053\u3053\u304b\u3089Java\u306e\u4e16\u754c\u304b\u3089\u96e2\u308c\u308b\u306d\u3002\n\n```scala:PatternMatchVar.scala\nobject PatternMatchVar {\n\n  def main(args: Array[String]): Unit = {\n    val random = 4\n\n    val result = random match {\n      case num => num * 2\n    }\n\n    println(\"random:\" + random)\n    println(\"number:\" + result)\n  }\n\n}\n```\n\n```\n$ scalac PatternMatchVar.scala\n\n$ scala PatternMatchVar\nrandom:4\nnumber:8\n```\n\n\u307e\u305a\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u5168\u3066\u306e\u5024\u306b\u30de\u30c3\u30c1\u3059\u308b\u3093\u3060\u3002\n\u3057\u304b\u3082\u30de\u30c3\u30c1\u3057\u305f\u5024\u3092 __\u5909\u6570 `num` \u306b\u675f\u7e1b__\u3055\u305b\u3066\u3044\u308b\u3093\u3060\u3002\n\n\u305d\u3057\u3066\u51e6\u7406\u306e\u4e2d\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002  \n\u5909\u6570`num` \u30922\u500d\u306b\u3057\u3066\u3044\u308b\u3093\u3060\u3002\n\n\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u3068\u4f3c\u3066\u3044\u308b\u3051\u3069\u3001\u5225\u306e\u5909\u6570\u306b\u675f\u7e1b\u3057\u3066\u3044\u3068\u3053\u308d\u304c\u9055\u3046\u3093\u3060\u3002\n\n##\u30b7\u30fc\u30b1\u30f3\u30b9\u30d1\u30bf\u30fc\u30f3\n\n\u306a\u3093\u3068\u30b7\u30fc\u30b1\u30f3\u30b9\u3068\u3082\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u304d\u308b\u3093\u3060\u3002\n\n```scala:PatternMatchSeq.scala\nobject PatternMatchSeq {\n\n  def main(args: Array[String]): Unit = {\n    val seq = Seq(1, 2, 3, 4)\n\n    val result = seq match {\n      case Seq(1, a, _*) => a\n      case _ => 0\n    }\n\n    println(\"number:\" + result)\n  }\n\n}\n```\n\n```\n$ scalac PatternMatchSeq.scala\n\n$ scala PatternMatchSeq\nnumber:2\n```\n\n\u3053\u3053\u3067\u306f\u5148\u982d\u8981\u7d20\u304c`1` \u3067\u3001\u8981\u7d20\u65702\u500b\u4ee5\u4e0a\u306e`Seq` \u3068\u3044\u3046\u6761\u4ef6\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u3066\u3044\u308b\u3002\n`_*` \u306f0\u500b\u4ee5\u4e0a\u306e\u4efb\u610f\u306e\u8981\u7d20\u3092\u8868\u3059\u3093\u3060\u3002  \n\u305d\u3057\u3066\u30011\u756a\u76ee\u306e\u8981\u7d20\u3092\u5909\u6570`a` \u306b\u675f\u7e1b\u3057\u3066\u3044\u308b\u3093\u3060\u3002  \n\n## \u30bf\u30d7\u30eb\u30d1\u30bf\u30fc\u30f3\n\u30bf\u30d7\u30eb\u3067\u3082\u3082\u3061\u308d\u3093\u3067\u304d\u308b\u305e\u3002\n\n```scala:PatternMatchTuple.scala\nobject PatternMatchTuple {\n\n  def main(args: Array[String]): Unit = {\n    val tuple = (1, 2, \"OK\")\n\n    val result = tuple match {\n      case (1, 2, x) => x\n      case _ => \"NG\"\n    }\n\n    println(\"result:\" + result)\n  }\n\n}\n```\n\n```\n$ scalac PatternMatchTuple.scala\n\n$ scala PatternMatchTuple\nresult:OK\n```\n\n\u3082\u3046\u99b4\u308c\u3066\u304d\u305f\u304b\u306a\uff1f\n\n\n## \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30d1\u30bf\u30fc\u30f3\n\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\u3060\u3002 \n\u30d5\u30a3\u30fc\u30eb\u30c9\u307e\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3093\u3060\u3002\n\n```scala:PatternMatchConstructor.scala\nobject PatternMatchConstructor {\n\n  case class Person(name: String, age: Int, education: String)\n\n  def main(args: Array[String]): Unit = {\n    val person = Person(\"\u693f\u5c71 \u6e05\u7f8e\", 15, \"\u7537\u587e\")\n\n    val belongTo = person match {\n      case Person(\"\u72ec\u773c\u9244\", _, \"\u7537\u587e\") => \"\u93ae\u5b88\u76f4\u5eca\u4e09\u4eba\u8846 \"\n      case Person(\"\u693f\u5c71 \u6e05\u7f8e\", _, \"\u7537\u587e\") => \"\u4e00\u53f7\u751f\"\n      case _ => \"\u4e00\u822c\u5e02\u6c11\"\n    }\n\n    println(\"\u6240\u5c5e:\" + belongTo)\n  }\n\n}\n```\n\n```\n$ scalac PatternMatchConstructor.scala\n\n$ scala PatternMatchConstructor\n\u6240\u5c5e:\u4e00\u53f7\u751f\n```\n\n\u30d5\u30a3\u30fc\u30eb\u30c9\u307e\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u5bfe\u8c61\u306b\u3057\u3066\u3044\u308b\u304b\u3089 \n\u72ec\u773c\u9244\u69d8\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u306e\u304c\u308f\u304b\u3063\u305f\u304b\u306a\uff1f\n\n\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u3060\uff01\n\n#\u307e\u3068\u3081\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u51c4\u3044\u5974\u3060\u308d\uff1f \n\u3053\u3093\u306a\u51c4\u3044\u5974\u306f\u4f7f\u308f\u306a\u3044\u3068\u640d\u3060\u305e\u3002\n\n\u3067\u3082\u6700\u8fd1\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u66f8\u304b\u306a\u3044\u3067\u7dba\u9e97\u306b\u66f8\u3051\u306a\u3044\u304b\u306a\uff1f\n\u3068\u8003\u3048\u3066\u305f\u308a\u3059\u308b\u3093\u3060\u3088\u306d\u3002\u3002\u3002\n\n\u4eca\u56de\u3082 \n__\u4f53\u3067\u611f\u3058\u3066\u304f\u308c\u305f\u304b\u306a\uff1f__\n", "tags": ["Java", "Scala2.10.3", "\u95a2\u6570\u578b\u8a00\u8a9e"]}