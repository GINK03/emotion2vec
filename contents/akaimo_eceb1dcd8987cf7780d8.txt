{"context": "RxSwift\u3067MVVM\u30d1\u30bf\u30fc\u30f3\u306e\u30a2\u30d7\u30ea\u3092\u4f5c\u308d\u3046\u3068\u3057\u307e\u3057\u305f\u304c\u3001\n\u5b9f\u969b\u306b\u52d5\u3044\u3066\u3044\u3066\u3001\u53c2\u8003\u306b\u3067\u304d\u308b\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067\u3001\n\u624b\u63a2\u308a\u3067\u4f5c\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\nakaimo/RxSwift-GitHubRepository-Search\n\n\u74b0\u5883\n\nSwift 2.2\nXcode 7.3\n\n\nRxSwift\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u6295\u7a3f\u6642\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3042\u308b\u30012.3.1\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u304a\u308a\u307e\u3059\u3002\nRxSwift\u306f\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304c\u983b\u7e41\u306b\u3042\u308b\u305f\u3081\u3001\u3053\u308c\u4ee5\u964d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3060\u3068\u52d5\u304b\u306a\u3044\u304a\u305d\u308c\u304c\u3042\u308a\u307e\u3059\u3002\n\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u304d\u306f\u3001carthage bootstrap --platform iOS\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u3067\u3001GitHub\u304b\u3089\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u691c\u7d22\u3059\u308b\u3060\u3051\u306e\u5358\u7d14\u306a\u3082\u306e\u3067\u3059\u3002\n\n\u6a5f\u80fd\uff11\uff1a \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n\u305f\u3060\u691c\u7d22\u3059\u308b\u3060\u3051\u3067\u306f\u3064\u307e\u3089\u306a\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u7c21\u5358\u306a\u6587\u5b57\u6570\u5236\u9650\u3092\u3064\u3051\u3066\u307f\u307e\u3057\u305f\u3002\n\u6587\u5b57\u6570\u304c\u8db3\u308a\u306a\u3044\u3068\u304d\u306f\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u3001\u691c\u7d22\u30dc\u30bf\u30f3\u304c\u62bc\u305b\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u5236\u5fa1\u3055\u308c\u308b\u306e\u306f\u3053\u306e3\u3064\u3067\u3059\u3002\n@IBOutlet weak var searchButton: UIButton!\n@IBOutlet weak var searchTextField: UITextField!\n@IBOutlet weak var validMessage: UILabel!\n\n\u57fa\u672c\u7684\u306b\u51e6\u7406\u306fviewModel\u3067\u3084\u3063\u3066\u3044\u304d\u305f\u3044\u305f\u3081\u3001\u30c6\u30ad\u30b9\u30c8\u3068\u30bf\u30c3\u30d7\u3068\u30ea\u30bf\u30fc\u30f3\u3092\u9001\u308a\u307e\u3059\u3002\n\nSearchViewController.swift\n        viewModel = SearchViewModel(\n            search: searchTextField.rx_text.asObservable(),\n            buttonTap: searchButton.rx_tap.asObservable(),\n            keyboardReturn: searchTextField.rx_controlEvent(.EditingDidEndOnExit).asObservable()\n        )\n\n\nviewModel\u3067\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u51e6\u7406\u3092\u3057\u307e\u3059\u3002\n\nSerchViewModel.swift\n        let minimumSize = 3\n        validation = search\n            .map { $0.characters.count >= minimumSize }\n            .shareReplay(1)\n\n\n\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\u3092view\u3068\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\n\nSearchViewController.swift\n        viewModel.validation\n            .bindTo(validMessage.rx_hidden)\n            .addDisposableTo(disposeBag)\n\n        viewModel.validation\n            .bindTo(searchButton.rx_enabled)\n            .addDisposableTo(disposeBag)\n\n        searchTextField.rx_text\n            .bindTo(viewModel.searchText)\n            .addDisposableTo(disposeBag)\n\n\n\u3064\u3044\u3067\u306b\u691c\u7d22\u3067\u4f7f\u3046\u30c6\u30ad\u30b9\u30c8\u3082viewModel\u3068\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306f\u5b8c\u6210\u3067\u3059\u3002\n\n\u6a5f\u80fd2: \u30ea\u30dd\u30b8\u30c8\u30ea\u691c\u7d22\n\u4eca\u56de\u306e\u30e1\u30a4\u30f3\u6a5f\u80fd\u3067\u3059\u3002\nAPIKit\u3068Himotoki\u3092\u4f7f\u3063\u3066GitHub\u306eAPI\u3092\u305f\u305f\u304d\u307e\u3059\u3002\n\u307e\u305a\u3001APIKit\u3092RxSwift\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nSession+Rx.swift\nimport RxSwift\nimport APIKit\n\nextension Session {\n    static func rx_response<T: RequestType>(request: T) -> Observable<T.Response> {\n        return Observable.create { observer in\n            let task = sendRequest(request) { result in\n                switch result {\n                case .Success(let response):\n                    observer.on(.Next(response))\n                    observer.on(.Completed)\n\n                case .Failure(let error):\n                    observer.onError(error)\n                }\n            }\n\n            return AnonymousDisposable {\n                task?.cancel()\n            }\n        }\n    }\n}\n\n\n\u6b21\u306b\u3001\u691c\u7d22\u30dc\u30bf\u30f3\u306e\u30bf\u30c3\u30d7\u3001\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u30ea\u30bf\u30fc\u30f3\u3001\u3069\u3061\u3089\u304b\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u30c8\u30ea\u30ac\u30fc\u306bAPI\u3092\u305f\u305f\u304d\u307e\u3059\u3002\n\nSearchViewModel.swift\n        request = Observable\n            .of(buttonTap, keyboardReturn)\n            .merge()\n            .withLatestFrom(searchText.asObservable())\n            .filter { $0.characters.count >= minimumSize }\n            .map { SearchRepositoriesRequest(query: $0) }\n            .shareReplay(1)\n\n        response = request\n            .flatMap { request in\n                return Session\n                    .rx_response(request)\n                    .doOnError { PublishSubject<ErrorType>().onNext($0) }\n                    .catchError { _ in Observable.empty() }\n            }\n            .shareReplay(1)\n\n\n\u3053\u306e\u90e8\u5206\u306b\u306fAPIKit\u304c\u95a2\u308f\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306fAPIKit\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u307f\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u7d50\u679c\u3092viewModel\u306b\u683c\u7d0d\u3059\u308c\u3070\u5b8c\u4e86\u3067\u3059\u3002\n\nSearchViewModel.swift\n        response\n            .map { $0.repository }\n            .bindTo(repositories)\n            .addDisposableTo(disposeBag)\n\n        repositories\n            .asObservable()\n            .subscribeNext { print($0) }\n            .addDisposableTo(disposeBag)\n\n\n\u3053\u306e\u307e\u307e\u3060\u3068\u691c\u7d22\u7d50\u679c\u304c\u307f\u308c\u306a\u3044\u306e\u3067\u3001\u307e\u305a\u306f\u6a19\u6e96\u51fa\u529b\u306b\u3060\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u901a\u4fe1\u4e2d\u306e\u51e6\u7406\u3068\u753b\u9762\u9077\u79fb\n\u3082\u3046\u5c11\u3057\u307e\u3068\u3082\u306a\u30b5\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u691c\u7d22\u7d50\u679c\u3092\u6b21\u306e\u753b\u9762\u306b\u8868\u793a\u3055\u305b\u307e\u3059\u3002\n\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u304b\u3089\u753b\u9762\u9077\u79fb\u307e\u3067\u306b\u901a\u4fe1\u306e\u30bf\u30a4\u30e0\u30e9\u30b0\u304c\u3042\u308b\u306e\u3067\u3001\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u3092\u8868\u793a\u3055\u305b\u307e\u3059\u3002\n\u3055\u304d\u307b\u3069\u306erequest\u3068response\u306b\u53cd\u5fdc\u3057\u3066\u51fa\u3057\u5165\u308c\u3057\u307e\u3059\u3002\n\nSearchViewController.swift\n        viewModel.request\n            .subscribeNext { [weak self] _ in\n                MBProgressHUD.showHUDAddedTo(self?.view, animated: true)\n            }\n            .addDisposableTo(disposeBag)\n\n        viewModel.response\n            .subscribeNext { [weak self] response in\n                MBProgressHUD.hideHUDForView(self?.view, animated: true)\n                self?.view.endEditing(true)\n\n                let vc = self?.storyboard?.instantiateViewControllerWithIdentifier(\"ResultViewController\") as! ResultViewController\n                vc.title = self?.searchTextField.text\n                vc.viewModel.repository.value = response.repository\n                self?.navigationController?.pushViewController(vc, animated: true)\n            }\n            .addDisposableTo(disposeBag)\n\n\n\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u306e\u6d88\u6ec5\u3068\u540c\u6642\u306b\u6b21\u304e\u306e\u753b\u9762\u306b\u9077\u79fb\u3055\u305b\u3001tableView\u306b\u8868\u793a\u3055\u305b\u305f\u3089\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u5b8c\u6210\u3067\u3059\u3002\n\nResultViewController.swift\n        viewModel.repository\n            .asObservable()\n            .bindTo(tableView.rx_itemsWithCellIdentifier(\"Cell\")) {  _, repository, cell in\n                cell.textLabel?.text = repository.fullName\n            }\n            .addDisposableTo(disposeBag)\n\n\n\n\u307e\u3068\u3081\n\u79c1\u304cRxSwift\u3078\u306e\u5165\u9580\u306b\u5927\u5909\u82e6\u52b4\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u6b21\u306b\u5b66\u3076\u65b9\u306e\u8cc7\u6599\u3068\u306a\u308c\u3070\u3068\u601d\u3044\u66f8\u304d\u307e\u3057\u305f\u3002\nRx\u306b\u307e\u3060\u306a\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u304a\u304b\u3057\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u512a\u3057\u304f\u6559\u3048\u3066\u3082\u3089\u3048\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u53c2\u8003\n\nhttps://github.com/ReactiveX/RxSwift\nhttps://github.com/ishkawa/sandbox/tree/master/RxPagination\n\nRxSwift\u3067MVVM\u30d1\u30bf\u30fc\u30f3\u306e\u30a2\u30d7\u30ea\u3092\u4f5c\u308d\u3046\u3068\u3057\u307e\u3057\u305f\u304c\u3001\n\u5b9f\u969b\u306b\u52d5\u3044\u3066\u3044\u3066\u3001\u53c2\u8003\u306b\u3067\u304d\u308b\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067\u3001\n\u624b\u63a2\u308a\u3067\u4f5c\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\n[akaimo/RxSwift-GitHubRepository-Search](https://github.com/akaimo/RxSwift-GitHubRepository-Search)\n\n# \u74b0\u5883\n- Swift 2.2\n- Xcode 7.3\n\n## RxSwift\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u6295\u7a3f\u6642\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3042\u308b\u3001`2.3.1`\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u304a\u308a\u307e\u3059\u3002\nRxSwift\u306f\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304c\u983b\u7e41\u306b\u3042\u308b\u305f\u3081\u3001\u3053\u308c\u4ee5\u964d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3060\u3068\u52d5\u304b\u306a\u3044\u304a\u305d\u308c\u304c\u3042\u308a\u307e\u3059\u3002\n\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u304d\u306f\u3001`carthage bootstrap --platform iOS`\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u3067\u3001GitHub\u304b\u3089\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u691c\u7d22\u3059\u308b\u3060\u3051\u306e\u5358\u7d14\u306a\u3082\u306e\u3067\u3059\u3002\n\n## \u6a5f\u80fd\uff11\uff1a \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n\u305f\u3060\u691c\u7d22\u3059\u308b\u3060\u3051\u3067\u306f\u3064\u307e\u3089\u306a\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u7c21\u5358\u306a\u6587\u5b57\u6570\u5236\u9650\u3092\u3064\u3051\u3066\u307f\u307e\u3057\u305f\u3002\n\u6587\u5b57\u6570\u304c\u8db3\u308a\u306a\u3044\u3068\u304d\u306f\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u3001\u691c\u7d22\u30dc\u30bf\u30f3\u304c\u62bc\u305b\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u5236\u5fa1\u3055\u308c\u308b\u306e\u306f\u3053\u306e3\u3064\u3067\u3059\u3002\n\n```swift:\n@IBOutlet weak var searchButton: UIButton!\n@IBOutlet weak var searchTextField: UITextField!\n@IBOutlet weak var validMessage: UILabel!\n```\n\n\u57fa\u672c\u7684\u306b\u51e6\u7406\u306fviewModel\u3067\u3084\u3063\u3066\u3044\u304d\u305f\u3044\u305f\u3081\u3001\u30c6\u30ad\u30b9\u30c8\u3068\u30bf\u30c3\u30d7\u3068\u30ea\u30bf\u30fc\u30f3\u3092\u9001\u308a\u307e\u3059\u3002\n\n```swift:SearchViewController.swift       \n        viewModel = SearchViewModel(\n            search: searchTextField.rx_text.asObservable(),\n            buttonTap: searchButton.rx_tap.asObservable(),\n            keyboardReturn: searchTextField.rx_controlEvent(.EditingDidEndOnExit).asObservable()\n        )\n```\n\nviewModel\u3067\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u51e6\u7406\u3092\u3057\u307e\u3059\u3002\n\n```swift:SerchViewModel.swift\n        let minimumSize = 3\n        validation = search\n            .map { $0.characters.count >= minimumSize }\n            .shareReplay(1)\n```\n\n\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\u3092view\u3068\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\n\n```swift:SearchViewController.swift\n        viewModel.validation\n            .bindTo(validMessage.rx_hidden)\n            .addDisposableTo(disposeBag)\n        \n        viewModel.validation\n            .bindTo(searchButton.rx_enabled)\n            .addDisposableTo(disposeBag)\n\n        searchTextField.rx_text\n            .bindTo(viewModel.searchText)\n            .addDisposableTo(disposeBag)\n```\n\u3064\u3044\u3067\u306b\u691c\u7d22\u3067\u4f7f\u3046\u30c6\u30ad\u30b9\u30c8\u3082viewModel\u3068\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306f\u5b8c\u6210\u3067\u3059\u3002\n\n## \u6a5f\u80fd2: \u30ea\u30dd\u30b8\u30c8\u30ea\u691c\u7d22\n\u4eca\u56de\u306e\u30e1\u30a4\u30f3\u6a5f\u80fd\u3067\u3059\u3002\nAPIKit\u3068Himotoki\u3092\u4f7f\u3063\u3066GitHub\u306eAPI\u3092\u305f\u305f\u304d\u307e\u3059\u3002\n\n\u307e\u305a\u3001APIKit\u3092RxSwift\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```swift:Session+Rx.swift\nimport RxSwift\nimport APIKit\n\nextension Session {\n    static func rx_response<T: RequestType>(request: T) -> Observable<T.Response> {\n        return Observable.create { observer in\n            let task = sendRequest(request) { result in\n                switch result {\n                case .Success(let response):\n                    observer.on(.Next(response))\n                    observer.on(.Completed)\n\n                case .Failure(let error):\n                    observer.onError(error)\n                }\n            }\n\n            return AnonymousDisposable {\n                task?.cancel()\n            }\n        }\n    }\n}\n```\n\n\u6b21\u306b\u3001\u691c\u7d22\u30dc\u30bf\u30f3\u306e\u30bf\u30c3\u30d7\u3001\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u30ea\u30bf\u30fc\u30f3\u3001\u3069\u3061\u3089\u304b\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u30c8\u30ea\u30ac\u30fc\u306bAPI\u3092\u305f\u305f\u304d\u307e\u3059\u3002\n\n```swift:SearchViewModel.swift\n        request = Observable\n            .of(buttonTap, keyboardReturn)\n            .merge()\n            .withLatestFrom(searchText.asObservable())\n            .filter { $0.characters.count >= minimumSize }\n            .map { SearchRepositoriesRequest(query: $0) }\n            .shareReplay(1)\n        \n        response = request\n            .flatMap { request in\n                return Session\n                    .rx_response(request)\n                    .doOnError { PublishSubject<ErrorType>().onNext($0) }\n                    .catchError { _ in Observable.empty() }\n            }\n            .shareReplay(1)\n```\n\u3053\u306e\u90e8\u5206\u306b\u306fAPIKit\u304c\u95a2\u308f\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306fAPIKit\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u307f\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u7d50\u679c\u3092viewModel\u306b\u683c\u7d0d\u3059\u308c\u3070\u5b8c\u4e86\u3067\u3059\u3002\n\n```swift:SearchViewModel.swift\n        response\n            .map { $0.repository }\n            .bindTo(repositories)\n            .addDisposableTo(disposeBag)\n        \n        repositories\n            .asObservable()\n            .subscribeNext { print($0) }\n            .addDisposableTo(disposeBag)\n```\n\u3053\u306e\u307e\u307e\u3060\u3068\u691c\u7d22\u7d50\u679c\u304c\u307f\u308c\u306a\u3044\u306e\u3067\u3001\u307e\u305a\u306f\u6a19\u6e96\u51fa\u529b\u306b\u3060\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n### \u901a\u4fe1\u4e2d\u306e\u51e6\u7406\u3068\u753b\u9762\u9077\u79fb\n\n\u3082\u3046\u5c11\u3057\u307e\u3068\u3082\u306a\u30b5\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u691c\u7d22\u7d50\u679c\u3092\u6b21\u306e\u753b\u9762\u306b\u8868\u793a\u3055\u305b\u307e\u3059\u3002\n\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u304b\u3089\u753b\u9762\u9077\u79fb\u307e\u3067\u306b\u901a\u4fe1\u306e\u30bf\u30a4\u30e0\u30e9\u30b0\u304c\u3042\u308b\u306e\u3067\u3001\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u3092\u8868\u793a\u3055\u305b\u307e\u3059\u3002\n\n\u3055\u304d\u307b\u3069\u306e`request`\u3068`response`\u306b\u53cd\u5fdc\u3057\u3066\u51fa\u3057\u5165\u308c\u3057\u307e\u3059\u3002\n\n```swift:SearchViewController.swift\n        viewModel.request\n            .subscribeNext { [weak self] _ in\n                MBProgressHUD.showHUDAddedTo(self?.view, animated: true)\n            }\n            .addDisposableTo(disposeBag)\n\n        viewModel.response\n            .subscribeNext { [weak self] response in\n                MBProgressHUD.hideHUDForView(self?.view, animated: true)\n                self?.view.endEditing(true)\n                \n                let vc = self?.storyboard?.instantiateViewControllerWithIdentifier(\"ResultViewController\") as! ResultViewController\n                vc.title = self?.searchTextField.text\n                vc.viewModel.repository.value = response.repository\n                self?.navigationController?.pushViewController(vc, animated: true)\n            }\n            .addDisposableTo(disposeBag)\n```\n\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u306e\u6d88\u6ec5\u3068\u540c\u6642\u306b\u6b21\u304e\u306e\u753b\u9762\u306b\u9077\u79fb\u3055\u305b\u3001tableView\u306b\u8868\u793a\u3055\u305b\u305f\u3089\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u5b8c\u6210\u3067\u3059\u3002\n\n```swift:ResultViewController.swift\n        viewModel.repository\n            .asObservable()\n            .bindTo(tableView.rx_itemsWithCellIdentifier(\"Cell\")) {  _, repository, cell in\n                cell.textLabel?.text = repository.fullName\n            }\n            .addDisposableTo(disposeBag)\n```\n\n# \u307e\u3068\u3081\n\u79c1\u304cRxSwift\u3078\u306e\u5165\u9580\u306b\u5927\u5909\u82e6\u52b4\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u6b21\u306b\u5b66\u3076\u65b9\u306e\u8cc7\u6599\u3068\u306a\u308c\u3070\u3068\u601d\u3044\u66f8\u304d\u307e\u3057\u305f\u3002\nRx\u306b\u307e\u3060\u306a\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u304a\u304b\u3057\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u512a\u3057\u304f\u6559\u3048\u3066\u3082\u3089\u3048\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n## \u53c2\u8003\n- https://github.com/ReactiveX/RxSwift\n- https://github.com/ishkawa/sandbox/tree/master/RxPagination\n", "tags": ["RxSwift", "Swift", "iOS"]}