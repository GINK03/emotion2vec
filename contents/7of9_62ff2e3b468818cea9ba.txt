{"context": "\n\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n\n\nTensorFlow\u3068\u3044\u3046Deep Learning\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5b66\u7fd2\u4e2d\u3002\nTensorFlow\u3092\u904a\u3073\u5012\u3059\uff01 4-1. Convolutional Neural Networks\nhttp://blog.brainpad.co.jp/entry/2016/04/22/170000\nhttps://www.tensorflow.org/versions/master/tutorials/deep_cnn/index.html\nCIFAR-10\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u51e6\u7406\u3059\u308bTutorial\u3092\u8aad\u3093\u3067\u3044\u308b\u3002\n\u3053\u308c\u307e\u3067\u8aad\u3093\u3067\u304d\u305fpython\u30b3\u30fc\u30c9\u306f\u4e3b\u306b\u4ee5\u4e0b\u306e\u3082\u306e\u3060\u3063\u305f\u3002\n\nmnist_with_summaries.py\ndef main(_):\n  if tf.gfile.Exists(FLAGS.summaries_dir):\n    tf.gfile.DeleteRecursively(FLAGS.summaries_dir)\n  tf.gfile.MakeDirs(FLAGS.summaries_dir)\n  train()\n\n\ncifar10_train.py\u306emain()\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\ncifar10_train.py\n...\ndef main(argv=None):  # pylint: disable=unused-argument\n  cifar10.maybe_download_and_extract()\n  if tf.gfile.Exists(FLAGS.train_dir):\n    tf.gfile.DeleteRecursively(FLAGS.train_dir)\n  tf.gfile.MakeDirs(FLAGS.train_dir)\n  train()\n...\n\n\nmain()\u306e\u5b9a\u7fa9\u306b\u304a\u3044\u3066argv=None\u3068\u3044\u3046\u8a18\u8f09\u304c\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n\u95a2\u9023 http://www.artima.com/weblogs/viewpost.jsp?thread=4829\n\nFirst, we change main() to take an optional 'argv' argument, which allows us to call it from the interactive Python prompt:\n\ndef main(argv=None):\n    if argv is None:\n        argv = sys.argv\n    # etc., replacing sys.argv with argv in the getopt() call.\n\n\nNote that we fill in the default for argv dynamically. This is more flexible than writing\n\ndef main(argv=sys.argv):\n    # etc.\n\n```txt:\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n```\n\nTensorFlow\u3068\u3044\u3046Deep Learning\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5b66\u7fd2\u4e2d\u3002\n\nTensorFlow\u3092\u904a\u3073\u5012\u3059\uff01 4-1. Convolutional Neural Networks\nhttp://blog.brainpad.co.jp/entry/2016/04/22/170000\n\nhttps://www.tensorflow.org/versions/master/tutorials/deep_cnn/index.html\n\nCIFAR-10\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u51e6\u7406\u3059\u308bTutorial\u3092\u8aad\u3093\u3067\u3044\u308b\u3002\n\n\u3053\u308c\u307e\u3067\u8aad\u3093\u3067\u304d\u305fpython\u30b3\u30fc\u30c9\u306f\u4e3b\u306b\u4ee5\u4e0b\u306e\u3082\u306e\u3060\u3063\u305f\u3002\n\n```mnist_with_summaries.py\ndef main(_):\n  if tf.gfile.Exists(FLAGS.summaries_dir):\n    tf.gfile.DeleteRecursively(FLAGS.summaries_dir)\n  tf.gfile.MakeDirs(FLAGS.summaries_dir)\n  train()\n```\n\ncifar10_train.py\u306emain()\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```cifar10_train.py\n...\ndef main(argv=None):  # pylint: disable=unused-argument\n  cifar10.maybe_download_and_extract()\n  if tf.gfile.Exists(FLAGS.train_dir):\n    tf.gfile.DeleteRecursively(FLAGS.train_dir)\n  tf.gfile.MakeDirs(FLAGS.train_dir)\n  train()\n...\n```\n\nmain()\u306e\u5b9a\u7fa9\u306b\u304a\u3044\u3066`argv=None`\u3068\u3044\u3046\u8a18\u8f09\u304c\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n\n\u95a2\u9023 http://www.artima.com/weblogs/viewpost.jsp?thread=4829\n> First, we change main() to take an optional 'argv' argument, which allows us to call it from the interactive Python prompt:\n\n```py\ndef main(argv=None):\n    if argv is None:\n        argv = sys.argv\n    # etc., replacing sys.argv with argv in the getopt() call.\n```\n\n>Note that we fill in the default for argv dynamically. This is more flexible than writing\n\n```\ndef main(argv=sys.argv):\n    # etc.\n```\n\n", "tags": ["Python", "borgWarp"]}