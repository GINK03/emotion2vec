{"context": " More than 1 year has passed since last update.underscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\n\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\nunderscore.js(v1.8.3)\n\nbind\u3068\u306f\n\nunderscorejs.org\u306ebind\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n\n\n_.bind(function, object, *arguments)\nBind a function to an object, meaning that whenever the function is called, the value of this will be the object.\nOptionally, pass arguments to the function to pre-fill them, also known as partial application.\nFor partial application without context binding, use partial.\n\nvar func = function(greeting){ return greeting + ': ' + this.name };\nfunc = _.bind(func, {name: 'moe'}, 'hi');\nfunc();\n=> 'hi: moe'\n\n\n\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u304d\u306b\u3001\u305d\u306e\u5024\u304cobject\u3067\u3042\u308b\u3068\u3044\u3046\u3088\u3046\u306b\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u95a2\u6570\u306b\u7d10\u4ed8\u3051\u307e\u3059\u3002\n\u5fc5\u9808\u3067\u306f\u306a\u3044\u3051\u308c\u3069\u3001arguments\u3092\u6e21\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u4e8b\u524d\u306b\u5024\u3092\u57cb\u3081\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08partial application\u3068\u3057\u3066\u77e5\u3089\u308c\u3066\u3044\u308b\u3088\u3046\u306b\uff1f\uff09\n\nunderscore.bind\n\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\nnativeBind(function.prototype.bind)\u304c\u3042\u308b\u304b\u3064func.bind\u304c\u305d\u308c\u3060\u3063\u305f\u5834\u5408\u3001function.prototype.bind\u3092\u5229\u7528\u3059\u308b\nfunc\u304cfunction\u3058\u3083\u306a\u304b\u3063\u305f\u5834\u5408\u3001TypeError\u3092\u8fd4\u3059\u3002\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001args\u306b\u7b2c\u4e09\u5f15\u6570\u4ee5\u964d\u3092\u683c\u7d0d\u3059\u308b\u3002\nbounds\u306b\u5909\u3048\u7387\u306b\u5f15\u6570func,bound,context\u3068this\u81ea\u4f53\u3068args.concat\u306earguments\u3092slice\u3057\u305f\u3082\u306e\u3092\u8fd4\u3059\u65b0\u3057\u3044\u95a2\u6570\u3092\u683c\u7d0d\u3057\u3066\u304a\u304f\u3002\n\u305d\u306e\u5f8c\u3001bound\u3092\u8fd4\u3059\u3002\n\n\nunderscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\n\n\n##\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n[underscore.js(v1.8.3)](https://github.com/jashkenas/underscore/tree/1.8.3)\n\n\n##bind\u3068\u306f\n\n\n###[underscorejs.org\u306ebind](http://underscorejs.org/#bind)\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n>####_.bind(function, object, *arguments) \n>Bind a function to an object, meaning that whenever the function is called, the value of this will be the object.\n>Optionally, pass arguments to the function to pre-fill them, also known as partial application.\n>For partial application without context binding, use partial.\n\n```javascript\nvar func = function(greeting){ return greeting + ': ' + this.name };\nfunc = _.bind(func, {name: 'moe'}, 'hi');\nfunc();\n=> 'hi: moe'\n```\n------------- \n\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u304d\u306b\u3001\u305d\u306e\u5024\u304cobject\u3067\u3042\u308b\u3068\u3044\u3046\u3088\u3046\u306b\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u95a2\u6570\u306b\u7d10\u4ed8\u3051\u307e\u3059\u3002\n\u5fc5\u9808\u3067\u306f\u306a\u3044\u3051\u308c\u3069\u3001arguments\u3092\u6e21\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u4e8b\u524d\u306b\u5024\u3092\u57cb\u3081\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08partial application\u3068\u3057\u3066\u77e5\u3089\u308c\u3066\u3044\u308b\u3088\u3046\u306b\uff1f\uff09\n\n\n\n\n###[underscore.bind](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L708)\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n\n```javascript\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n```\n\n[nativeBind(function.prototype.bind)](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind)\u304c\u3042\u308b\u304b\u3064func.bind\u304c\u305d\u308c\u3060\u3063\u305f\u5834\u5408\u3001function.prototype.bind\u3092\u5229\u7528\u3059\u308b\nfunc\u304cfunction\u3058\u3083\u306a\u304b\u3063\u305f\u5834\u5408\u3001[TypeError](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError)\u3092\u8fd4\u3059\u3002\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001args\u306b\u7b2c\u4e09\u5f15\u6570\u4ee5\u964d\u3092\u683c\u7d0d\u3059\u308b\u3002\nbounds\u306b\u5909\u3048\u7387\u306b\u5f15\u6570func,bound,context\u3068this\u81ea\u4f53\u3068args.concat\u306earguments\u3092slice\u3057\u305f\u3082\u306e\u3092\u8fd4\u3059\u65b0\u3057\u3044\u95a2\u6570\u3092\u683c\u7d0d\u3057\u3066\u304a\u304f\u3002\n\u305d\u306e\u5f8c\u3001bound\u3092\u8fd4\u3059\u3002\n", "tags": ["JavaScript", "Underscore.js"]}