{"context": "Arduino(?)\u306b\u7e4b\u3044\u3060\u53ef\u5909\u62b5\u6297\u3092\u672c\u5f53\u306b\u56de\u3057\u305f\u6642\u3060\u3051\u5024\u3092\u53d7\u3051\u3068\u308b\u306b\u306f\uff1f\u306b\u30a2\u30a4\u30c7\u30a3\u30a2\u3092\u3044\u305f\u3060\u3044\u3066analogRead()\u7528\u306e\u95a2\u6570\u4f5c\u3063\u3066\u307f\u305f5 \u3082\u3063\u3068\u95a2\u6570\u307e\u3067\u3084\u3063\u3066\u304d\u305f\u3001\u305d\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u305d\u306e\u5f8c\u3001\u914d\u5217\u304c\u597d\u304d\u306a\u30b5\u30a4\u30ba\u3067\u4f5c\u308c\u305f\u3089\u3044\u3044\u306a...\u306a\u3093\u3066\u601d\u3063\u305f\u306e\u304c\u904b\u306e\u3064\u304d\u3001c++\u306e\u6df1\u307f\u306b\u30cf\u30de\u3063\u3066\u3057\u307e\u3044\u3001\u3069\u3046\u305b\u306a\u3089\u3068\u601d\u3063\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3075\u3046\u3002SmoothFunc for Arduino\n\n\u4f7f\u3044\u65b9\nZIP\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u30b9\u30b1\u30c3\u30c1>\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9>.ZIP\u5f62\u5f0f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb... \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u4e09\u3064\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\n\"GetAverage\" : \u5f15\u6570\u3068\u5185\u90e8\u306e\u5c65\u6b74\u304b\u3089\u5408\u8a08\u3092\u8a08\u7b97\u3057\u3001\u5f15\u6570\u3092\u5c65\u6b74\u306b\u8a18\u61b6\u3057\u3064\u3064\u4e00\u756a\u53e4\u3044\u5024\u3092\u6368\u3066\u3001\u5e73\u5747\u3092\u8fd4\u3059\u3002\n\"IsNewInRecents\" : \u5f15\u6570\u304c\u5c65\u6b74\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u3092\u8a08\u7b97\u3057\u3001\u5f15\u6570\u3092\u5c65\u6b74\u306b\u8a18\u61b6\u3057\u3064\u3064\u4e00\u756a\u53e4\u3044\u5024\u3092\u6368\u3066\u3001\u8a08\u7b97\u7d50\u679c\u3092\u8fd4\u3059\u3002\n\"IsUniqueInUniques\" : \u5f15\u6570\u304c\u5c65\u6b74\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u3092\u3092\u8a08\u7b97\u3057\u3001\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u307f\u5f15\u6570\u3092\u5c65\u6b74\u306b\u8a18\u61b6\u3057\u3064\u3064\u4e00\u756a\u53e4\u3044\u5024\u3092\u6368\u3066\u3001\u8a08\u7b97\u7d50\u679c\u3092\u8fd4\u3059\u3002\n\n\u3053\u306e\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001\n\n\u5e73\u5747\u3092\u3068\u308a(\u3053\u308c\u3060\u3051\u3067\u3082\u304b\u306a\u308a\u5b89\u5b9a\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059)\n\u66f4\u306b\u305d\u308c\u3092\u76f4\u8fd1\u306e\u5e73\u5747\u306e\u5c65\u6b74\u306e\u4e2d\u3067\u65b0\u3057\u3044\u304b\u3069\u3046\u304b\u306e\u3075\u308b\u3044\u306b\u304b\u3051\u3001\n\u65b0\u3057\u3044\u3068\u304d\u3060\u3051\u5fc5\u8981\u306a\u51e6\u7406\u3092\u3059\u308b\n\n\u3068\u3044\u3046\u6226\u7565\u3067\u3059\u3002\n#include <SmoothFunc.h> //\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u3080\n\nGetAverage getAverage;  //\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\nIsNewInRecents isNew;      \n\nconst int ANA_PIN = 5;  //\u30a2\u30ca\u30ed\u30b0\u5165\u529b\u306b\u4f7f\u7528\u3059\u308b\u30d4\u30f3\u756a\u53f7\u3092\u8a2d\u5b9a\n\nvoid setup(){\n//...\n}\nvoid loop(){\n  const int RAW_DATA = analogRead(ANA_PIN);         //\u5165\u529b\u30d4\u30f3\u306e\u5024\u3092\u8aad\u307f\u8fbc\u3093\u3067RAW_DATA\u3092\u751f\u6210\n  const int SMOOTHED_DATA = getAverage(RAW_DATA);   //\u5e73\u5747\u3092\u8a08\u7b97\u3057\u3066\u305d\u306e\u5024\u3067SMOOTHED_DATA\u3092\u4f5c\u6210\n  if (isNew(SMOOTHED_DATA)) {                       //SMOOTHED_DATA\u304c\u65b0\u3057\u3051\u308c\u3070\n\n    //...\u305d\u306e\u5834\u5408\u306b\u3057\u305f\u3044\u51e6\u7406\u3092\u3053\u3053\u306b\u66f8\u304d\u307e\u3059\u3002  \n\n    }\n  delay(10);\n}\n\nIsUniqueInUniques \u306f IsNewInRecents \u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\nIsNewInRecents \u3092\u4f7f\u3063\u3066\u3082\u52d5\u4f5c\u304c\u5b89\u5b9a\u3057\u306a\u3044\u5834\u5408\u306b\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\u4f7f\u3044\u65b9\u306f\u540c\u3058\u3067\u3059\u3002\n\u3088\u308a\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u306e\u5c65\u6b74\u3067\u52d5\u4f5c\u3092\u5b89\u5b9a\u3055\u305b\u3089\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u4e00\u65b9\u3067\u5c65\u6b74\u306e\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044\u3068\u51fa\u529b\u30c7\u30fc\u30bf\u304c\u4e0d\u9023\u7d9a\u306b\u306a\u308b\u50be\u5411\u304c\u3042\u308a\u307e\u3059\u3002\u8abf\u6574\u3057\u3066\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5c65\u6b74\u30b5\u30a4\u30ba\u306f GetAverage \u304c 8, IsNewInRecents,IsUniqueInUniques \u304c 3 \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u5358\u4f53\u306e\u5834\u5408\u306f\nGetAverage foo(5);\n\u914d\u5217\u306e\u5834\u5408\u306f\nGetAverage bar[3]={10,20,30};\n\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u4ed6\u306e\u5024\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4f7f\u7528\u4f8b\n\u4eca\u307e\u3067\u306e\u3001\u8907\u6570\u306e\u30a2\u30ca\u30ed\u30b0\u5165\u529b\u3092\u53d7\u3051\u53d6\u3063\u3066MIDI\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30c1\u30a7\u30f3\u30b8\u3092\u8fd4\u3059\u30b9\u30b1\u30c3\u30c1\u304c\u3069\u3046\u306a\u308b\u304b\u3068\u3044\u3046\u3068\n#include <MIDIUSB.h>\n#include <SmoothFunc.h>\n\nGetAverage getAverage[2];\nIsNewInRecents isNewInRecents[2];\nconst int ANAPIN[2] = {0,1};\nconst byte CHANNEL = 0;\nconst byte CC[2] = {25,26};\n\nvoid setup() {\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  for (int i = 0; i < 2; i++) {\n    const int SMOOTHED_DATA = getAverage[i]( analogRead(ANAPIN[i]) >> 3 );\n    if ( isNewInRecents[i](SMOOTHED_DATA) ) {\n      controlChange( CHANNEL, CC[i], SMOOTHED_DATA );\n      MidiUSB.flush();\n    };\n  delay(10);\n  };\n}\n\nvoid controlChange(byte channel, byte control, byte value) {\n  midiEventPacket_t event = {0x0B, 0xB0 | channel, control, value};\n  MidiUSB.sendMIDI(event);\n}\n\n\u3069\u3046\u3067\u3059\u304b? \u306a\u304b\u306a\u304b\u898b\u305f\u76ee\u30b9\u30c3\u30ad\u30ea\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044?\u3068\u81ea\u753b\u81ea\u8cdb\u3002\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u4eca\u307e\u3067\u3068\u540c\u3058\u3067\u3059\u304c...\n\n\u307e\u3068\u3081\n\u3088\u308d\u3057\u3051\u308c\u3070\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\n\u304a\u304b\u3057\u306a\u82f1\u8a9e\u306eREADME\u4f5c\u6587\u3068\u3082\u3069\u3082\u3001\u304a\u304b\u3057\u306a\u3068\u3053\u308d\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u304a\u306d\u304c\u3044\u3057\u307e\u3059\u3002\n[Arduino(?)\u306b\u7e4b\u3044\u3060\u53ef\u5909\u62b5\u6297\u3092\u672c\u5f53\u306b\u56de\u3057\u305f\u6642\u3060\u3051\u5024\u3092\u53d7\u3051\u3068\u308b\u306b\u306f\uff1f](http://qiita.com/tadfmac/items/0aa8b07385dc557ff387)\u306b\u30a2\u30a4\u30c7\u30a3\u30a2\u3092\u3044\u305f\u3060\u3044\u3066[analogRead()\u7528\u306e\u95a2\u6570\u4f5c\u3063\u3066\u307f\u305f5 \u3082\u3063\u3068\u95a2\u6570](http://qiita.com/ttatsf/items/c8f7ec1b2d9fff89cae4)\u307e\u3067\u3084\u3063\u3066\u304d\u305f\u3001\u305d\u306e\u7d9a\u304d\u3067\u3059\u3002\n\n\u305d\u306e\u5f8c\u3001\u914d\u5217\u304c\u597d\u304d\u306a\u30b5\u30a4\u30ba\u3067\u4f5c\u308c\u305f\u3089\u3044\u3044\u306a...\u306a\u3093\u3066\u601d\u3063\u305f\u306e\u304c\u904b\u306e\u3064\u304d\u3001c++\u306e\u6df1\u307f\u306b\u30cf\u30de\u3063\u3066\u3057\u307e\u3044\u3001\u3069\u3046\u305b\u306a\u3089\u3068\u601d\u3063\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3075\u3046\u3002[SmoothFunc for Arduino](https://github.com/ttatsf/SmoothFunc)\n\n#\u4f7f\u3044\u65b9\n\n[ZIP\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9](https://github.com/ttatsf/SmoothFunc/archive/master.zip)\u3057\u3066\u3001[\u30b9\u30b1\u30c3\u30c1>\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9>.ZIP\u5f62\u5f0f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb... \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb](https://www.arduino.cc/en/Guide/Libraries)\u3057\u307e\u3059\u3002\n\n\u4e09\u3064\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\n+ \"GetAverage\" : \u5f15\u6570\u3068\u5185\u90e8\u306e\u5c65\u6b74\u304b\u3089\u5408\u8a08\u3092\u8a08\u7b97\u3057\u3001\u5f15\u6570\u3092\u5c65\u6b74\u306b\u8a18\u61b6\u3057\u3064\u3064\u4e00\u756a\u53e4\u3044\u5024\u3092\u6368\u3066\u3001\u5e73\u5747\u3092\u8fd4\u3059\u3002\n+ \"IsNewInRecents\" : \u5f15\u6570\u304c\u5c65\u6b74\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u3092\u8a08\u7b97\u3057\u3001\u5f15\u6570\u3092\u5c65\u6b74\u306b\u8a18\u61b6\u3057\u3064\u3064\u4e00\u756a\u53e4\u3044\u5024\u3092\u6368\u3066\u3001\u8a08\u7b97\u7d50\u679c\u3092\u8fd4\u3059\u3002\n+ \"IsUniqueInUniques\" : \u5f15\u6570\u304c\u5c65\u6b74\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u3092\u3092\u8a08\u7b97\u3057\u3001\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u307f\u5f15\u6570\u3092\u5c65\u6b74\u306b\u8a18\u61b6\u3057\u3064\u3064\u4e00\u756a\u53e4\u3044\u5024\u3092\u6368\u3066\u3001\u8a08\u7b97\u7d50\u679c\u3092\u8fd4\u3059\u3002\n\n\u3053\u306e\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001\n\n+ \u5e73\u5747\u3092\u3068\u308a(\u3053\u308c\u3060\u3051\u3067\u3082\u304b\u306a\u308a\u5b89\u5b9a\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059)\n+ \u66f4\u306b\u305d\u308c\u3092\u76f4\u8fd1\u306e\u5e73\u5747\u306e\u5c65\u6b74\u306e\u4e2d\u3067\u65b0\u3057\u3044\u304b\u3069\u3046\u304b\u306e\u3075\u308b\u3044\u306b\u304b\u3051\u3001\n+ \u65b0\u3057\u3044\u3068\u304d\u3060\u3051\u5fc5\u8981\u306a\u51e6\u7406\u3092\u3059\u308b\n\n\u3068\u3044\u3046\u6226\u7565\u3067\u3059\u3002\n\n\n\n```\n#include <SmoothFunc.h>\t//\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u3080\n\nGetAverage getAverage;  //\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\nIsNewInRecents isNew;      \n\nconst int ANA_PIN = 5;\t//\u30a2\u30ca\u30ed\u30b0\u5165\u529b\u306b\u4f7f\u7528\u3059\u308b\u30d4\u30f3\u756a\u53f7\u3092\u8a2d\u5b9a\n\nvoid setup(){\n//...\n}\nvoid loop(){\n  const int RAW_DATA = analogRead(ANA_PIN);\t\t\t//\u5165\u529b\u30d4\u30f3\u306e\u5024\u3092\u8aad\u307f\u8fbc\u3093\u3067RAW_DATA\u3092\u751f\u6210\n  const int SMOOTHED_DATA = getAverage(RAW_DATA);\t//\u5e73\u5747\u3092\u8a08\u7b97\u3057\u3066\u305d\u306e\u5024\u3067SMOOTHED_DATA\u3092\u4f5c\u6210\n  if (isNew(SMOOTHED_DATA)) {\t\t\t\t\t\t//SMOOTHED_DATA\u304c\u65b0\u3057\u3051\u308c\u3070\n    \n    //...\u305d\u306e\u5834\u5408\u306b\u3057\u305f\u3044\u51e6\u7406\u3092\u3053\u3053\u306b\u66f8\u304d\u307e\u3059\u3002  \n    \n    }\n  delay(10);\n}\n```\n\n\n```IsUniqueInUniques``` \u306f ```IsNewInRecents``` \u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n```IsNewInRecents``` \u3092\u4f7f\u3063\u3066\u3082\u52d5\u4f5c\u304c\u5b89\u5b9a\u3057\u306a\u3044\u5834\u5408\u306b\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\u4f7f\u3044\u65b9\u306f\u540c\u3058\u3067\u3059\u3002\n\u3088\u308a\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u306e\u5c65\u6b74\u3067\u52d5\u4f5c\u3092\u5b89\u5b9a\u3055\u305b\u3089\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u4e00\u65b9\u3067\u5c65\u6b74\u306e\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044\u3068\u51fa\u529b\u30c7\u30fc\u30bf\u304c\u4e0d\u9023\u7d9a\u306b\u306a\u308b\u50be\u5411\u304c\u3042\u308a\u307e\u3059\u3002\u8abf\u6574\u3057\u3066\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5c65\u6b74\u30b5\u30a4\u30ba\u306f GetAverage \u304c 8, IsNewInRecents,IsUniqueInUniques \u304c 3 \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u5358\u4f53\u306e\u5834\u5408\u306f\n```GetAverage foo(5);```\n\u914d\u5217\u306e\u5834\u5408\u306f\n```GetAverage bar[3]={10,20,30};```\n\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u4ed6\u306e\u5024\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n#\u4f7f\u7528\u4f8b\n\u4eca\u307e\u3067\u306e\u3001\u8907\u6570\u306e\u30a2\u30ca\u30ed\u30b0\u5165\u529b\u3092\u53d7\u3051\u53d6\u3063\u3066MIDI\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30c1\u30a7\u30f3\u30b8\u3092\u8fd4\u3059\u30b9\u30b1\u30c3\u30c1\u304c\u3069\u3046\u306a\u308b\u304b\u3068\u3044\u3046\u3068\n\n```c++\n#include <MIDIUSB.h>\n#include <SmoothFunc.h>\n\nGetAverage getAverage[2];\nIsNewInRecents isNewInRecents[2];\nconst int ANAPIN[2] = {0,1};\nconst byte CHANNEL = 0;\nconst byte CC[2] = {25,26};\n\nvoid setup() {\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  for (int i = 0; i < 2; i++) {\n    const int SMOOTHED_DATA = getAverage[i]( analogRead(ANAPIN[i]) >> 3 );\n    if ( isNewInRecents[i](SMOOTHED_DATA) ) {\n      controlChange( CHANNEL, CC[i], SMOOTHED_DATA );\n      MidiUSB.flush();\n    };\n  delay(10);\n  };\n}\n\nvoid controlChange(byte channel, byte control, byte value) {\n  midiEventPacket_t event = {0x0B, 0xB0 | channel, control, value};\n  MidiUSB.sendMIDI(event);\n}\n```\n\n\u3069\u3046\u3067\u3059\u304b? \u306a\u304b\u306a\u304b\u898b\u305f\u76ee\u30b9\u30c3\u30ad\u30ea\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044?\u3068\u81ea\u753b\u81ea\u8cdb\u3002\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u4eca\u307e\u3067\u3068\u540c\u3058\u3067\u3059\u304c...\n\n#\u307e\u3068\u3081\n\u3088\u308d\u3057\u3051\u308c\u3070\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\n\u304a\u304b\u3057\u306a\u82f1\u8a9e\u306eREADME\u4f5c\u6587\u3068\u3082\u3069\u3082\u3001\u304a\u304b\u3057\u306a\u3068\u3053\u308d\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u304a\u306d\u304c\u3044\u3057\u307e\u3059\u3002\n", "tags": ["C++", "MIDI", "Arduino", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}