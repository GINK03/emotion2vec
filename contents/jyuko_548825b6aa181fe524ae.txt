{"context": "Tango Unity SDK\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u3055\u308c\u3066\u3044\u308bExamples\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u5e8a\uff08\u5e73\u9762\uff09\u3092\u8a8d\u8b58\u3057\u3066\u30de\u30fc\u30ab\u30fc\u3092\u914d\u7f6e\u3059\u308bExperimentalFloorFinding\u3067\u3059\u3002\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u89e3\u6790\n\u4ee5\u4e0b\u306e3\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u6790\u30fb\u6539\u5909\u3057\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306f\u3001Apache License 2.0\u3067\u3059\u3002\n\nTangoSDK/Examples/ExperimentalFloorFinding/Scripts/TangoFloorFindingUIController.cs\nTangoPrefabs/Scripts/TangoPointCloud.cs\nTangoPrefabs/Scripts/TangoPointCloudFloor.cs\n\n\n\u5e8a\uff08\u5e73\u9762\uff09\u306e\u9ad8\u3055\u3092\u6c42\u3081\u308b\nGUI\u306e\"Find Floor\"\u30dc\u30bf\u30f3\u304c\u30c8\u30ea\u30ac\u306b\u306a\u308a\u307e\u3059\u3002\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u306b\u3001m_pointCloud.FindFloor()\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\nTangoFloorFindingUIController.cs\npublic void OnGUI()\n{\n    GUI.color = Color.white;\n\n    if (!m_findingFloor)\n    {\n        if (GUI.Button(new Rect(Screen.width - 220, 20, 200, 80), \"<size=30>Find Floor</size>\"))\n        {\n            if (m_pointCloud == null)\n            {\n                Debug.LogError(\"TangoPointCloud required to find floor.\");\n                return;\n            }\n\n            m_findingFloor = true;\n            m_marker.SetActive(false);\n            m_tangoApplication.SetDepthCameraRate(TangoEnums.TangoDepthCameraRate.MAXIMUM);\n            m_pointCloud.FindFloor();\n        }\n    }\n    else\n    {\n            GUI.Label(new Rect(0, Screen.height - 50, Screen.width, 50), \"<size=30>Searching for floor position. Make sure the floor is visible.</size>\");\n    }\n}\n\n\nFindFloor()\u3067\u306fm_findFloorWithDepth\u306btrue\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\nTangoPointCloud.cs\npublic void FindFloor()\n{\n    m_floorFound = false;\n    m_findFloorWithDepth = true;\n    m_floorPlaneY = 0.0f;\n}\n\n\npointCloud\u3092\u53d6\u5f97\u3059\u308b\u305f\u3073\u306bOnTangoPointCloudAvailable()\u304ccall\u3055\u308c\u3001\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u305f\u3053\u3068\u3067_FindFloorWithDepth()\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\npointCloud\u306b\u3064\u3044\u3066\u306f\u3001\u524d\u56de\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nTangoPointCloud.cs\npublic void OnTangoPointCloudAvailable(TangoPointCloudData pointCloud)\n{\n    ...\n        // Try to find the floor using this set of depth points if requested.\n        if (m_findFloorWithDepth)\n        {\n            _FindFloorWithDepth();\n        }\n    ...\n}\n\n\n_FindFloorWithDepth()\u304c\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u306b\u306a\u308a\u307e\u3059\u3002\n\nTangoPointCloud.cs\nprivate const int RECOGNITION_THRESHOLD = 1000;\nprivate const int NOISE_THRESHOLD = 500;\nprivate const float SENSITIVITY = 0.02f;\n\nprivate void _FindFloorWithDepth()\n{\n    m_numPointsAtY.Clear();\n    m_nonNoiseBuckets.Clear();\n\n    // Count each depth point into a bucket based on its world position y value.\n    for (int i = 0; i < m_pointsCount; i++)\n    {\n        Vector3 point = m_points[i];\n        if (!point.Equals(Vector3.zero))\n        {\n            // Group similar points into buckets based on sensitivity. \n            float roundedY = Mathf.Round(point.y / SENSITIVITY) * SENSITIVITY;\n            if (!m_numPointsAtY.ContainsKey(roundedY))\n            {\n                m_numPointsAtY.Add(roundedY, 0);\n            }\n\n            m_numPointsAtY[roundedY]++;\n\n            // Check if the y plane is a non-noise plane.\n            if (m_numPointsAtY[roundedY] > NOISE_THRESHOLD && !m_nonNoiseBuckets.Contains(roundedY))\n            {\n                m_nonNoiseBuckets.Add(roundedY);\n            }\n        }\n    }\n\n    // Find a plane at the y value. The y value must be below the camera y position.\n    m_nonNoiseBuckets.Sort();\n    for (int i = 0; i < m_nonNoiseBuckets.Count; i++)\n    {\n        float yBucket = m_nonNoiseBuckets[i];\n        int numPoints = m_numPointsAtY[yBucket];\n        if (numPoints > RECOGNITION_THRESHOLD && yBucket < Camera.main.transform.position.y)\n        {\n            // Reject the plane if it is not the lowest.\n            if (yBucket > m_nonNoiseBuckets[0])\n            {\n                return;\n            }\n\n            m_floorFound = true;\n            m_findFloorWithDepth = false;\n            m_floorPlaneY = yBucket;\n            m_numPointsAtY.Clear();\n            m_nonNoiseBuckets.Clear();\n        }\n    }\n}\n\n\n\u884c\u3063\u3066\u3044\u308b\u51e6\u7406\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3001pointCloud\u304b\u3089\u9ad8\u3055(y\u5ea7\u6a19)\u304c\u540c\u3058point\u306e\u6570\u3092\u6570\u3048\u3066\u3001\n\n\u4e00\u5b9a\u6570\u540c\u3058\u9ad8\u3055\u306epoint\u304c\u3042\u308b\uff08\u5e73\u9762\u3067\u3042\u308b\uff09\n\u30ab\u30e1\u30e9\u3088\u308a\u4f4d\u7f6e\u304c\u4f4e\u3044\n\n\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u9ad8\u3055(m_floorPlaneY)\u3092\u6c42\u3081\u3066\u3044\u307e\u3059\u3002\n\u524d\u534a\u306e\u30eb\u30fc\u30d7\u3067\u306f\u4e38\u3081\u305f\u5024\u3092m_numPointsAtY\u3067\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u5143\u306e\u5024\u306fmm(\u30df\u30ea\u30e1\u30fc\u30c8\u30eb)\u3088\u308a\u7d30\u304b\u3044\u7cbe\u5ea6\u306a\u306e\u3067\u3001SENSITIVITY\u3067\u4e38\u3081\u3066\u3044\u307e\u3059\u3002SENSITIVITY = 0.02f\u306f\u30010.02m = 2cm\u306e\u7cbe\u5ea6\u3067\u3059\u3002\nm_nonNoiseBuckets\u306b\u306f\u3001\u540c\u3058\u9ad8\u3055\u306epoint\u304cNOISE_THRESHOLD\u3092\u8d85\u3048\u305f\u3068\u304d\u3060\u3051\u3001\u9ad8\u3055\u306e\u5024\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u914d\u5217\u304c\u6c42\u3081\u308b\u9ad8\u3055\u306e\u5019\u88dc\u306b\u306a\u308a\u307e\u3059\u3002\n\u5f8c\u534a\u306e\u51e6\u7406\u3067\u306f\u3001m_nonNoiseBuckets\u3092\u30bd\u30fc\u30c8\u3057\u305f\u5f8c\u3001\u30eb\u30fc\u30d7\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u7d50\u5c40\u3001\u4e00\u756a\u5c0f\u3055\u3044\u5024\u4ee5\u5916\u306f\u9664\u5916\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3042\u307e\u308a\u610f\u5473\u306f\u306a\u3044\u3088\u3046\u306a\u6c17\u3082\u3057\u307e\u3059\u3002\nif\u6587\u306e\u6761\u4ef6\u5f0f\u3067\u3001point\u6570\u304cRECOGNITION_THRESHOLD\u3088\u308a\u5927\u304d\u304f\u3001\u9ad8\u3055\u304c\u30ab\u30e1\u30e9\u3088\u308a\u3082\u4f4e\u3044\u5834\u5408\u3001\u5024\u3092m_floorPlaneY\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\nRECOGNITION_THRESHOLD\u3068NOISE_THRESHOLD\u3092\u5225\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u7406\u7531\u306f\u3001\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u30de\u30fc\u30ab\u30fc\u3092\u914d\u7f6e\u3059\u308b\nTangoPointCloudFloor\u306ey\u5ea7\u6a19\u304cm_floorPlaneY\u3067\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\n\nTangoPointCloudFloor.cs\npublic void Update()\n{\n    // If the point cloud has found the floor, adjust the position accordingly.\n    if (m_pointCloud.m_floorFound)\n    {\n        m_floorFound = true;\n        if (transform.position.y != m_pointCloud.m_floorPlaneY)\n        {\n            transform.position = new Vector3(0.0f, m_pointCloud.m_floorPlaneY, 0.0f);\n            foreach (Transform t in transform)\n            {\n                t.gameObject.SetActive(true);\n            }\n        }\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000...\n    }\n    else\n    {\n        m_floorFound = false;\n        m_depthTriggered = false;\n    }\n}\n\n\nUIController\u306b\u623b\u3063\u3066\u3001TangoPointCloudFloor\u304c\u66f4\u65b0\u3055\u308c\u305f\u5f8c\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\u753b\u9762\u306e\u4e2d\u5fc3\u65b9\u5411\u306bRayCast\u3092\u4f38\u3070\u3057\u3066\u3001Floor\u3068\u885d\u7a81\u3057\u305f\u70b9\u306b\u30de\u30fc\u30ab\u30fc\u3092\u79fb\u52d5\u3057\u3066\u3044\u307e\u3059\u3002\n\nTangoFloorFindingUIController.cs\npublic void Update()\n{\n    ...\n\n    if (!m_findingFloor)\n    {\n        return;\n    }\n\n    // If the point cloud floor has found a new floor, place the marker at the found y position.\n    if (m_pointCloudFloor.m_floorFound && m_pointCloud.m_floorFound)\n    {\n        m_findingFloor = false;\n\n        // Place the marker at the center of the screen at the found floor height.\n        m_marker.SetActive(true);\n        Vector3 target;\n        RaycastHit hitInfo;\n        if (Physics.Raycast(Camera.main.ScreenPointToRay(new Vector3(Screen.width / 2.0f, Screen.height / 2.0f)), out hitInfo))\n        {\n            // Limit distance of the marker position from the camera to the camera's far clip plane. This makes sure that the marker\n            // is visible on screen when the floor is found.\n            Vector3 cameraBase = new Vector3(Camera.main.transform.position.x, hitInfo.point.y, Camera.main.transform.position.z);\n            target = cameraBase + Vector3.ClampMagnitude(hitInfo.point - cameraBase, Camera.main.farClipPlane * 0.9f);\n        }\n        else\n        {\n            // If no raycast hit, place marker in the camera's forward direction.\n            Vector3 dir = new Vector3(Camera.main.transform.forward.x, 0.0f, Camera.main.transform.forward.z);\n            target = dir.normalized * (Camera.main.farClipPlane * 0.9f);\n            target.y = m_pointCloudFloor.transform.position.y;\n        }\n\n        m_marker.transform.position = target;\n        ...\n    }\n}\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u306e\u4f5c\u6210\n\n\u30de\u30fc\u30ab\u30fc\u306e\u5909\u66f4\nGUI\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308bARMarker\u3092\u4efb\u610f\u306eGameObject\u306b\u5909\u66f4\u3059\u308b\u3060\u3051\u3067OK\u3067\u3059\u3002\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u8d64\u67a0\u90e8\u5206\u3067\u3059\u3002\n\n\n\u30de\u30fc\u30ab\u30fc\u306e\u5411\u304d\u3092\u5909\u66f4\n\u30de\u30fc\u30ab\u30fc\u306e\u4f4d\u7f6e\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u3001LookAt\u3067\u30ab\u30e1\u30e9\u306e\u65b9\u5411\u3092\u5411\u304f\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\nTangoFloorFindingUIController.cs\npublic void Update()\n{\n    ...\n\n    if (m_pointCloudFloor.m_floorFound && m_pointCloud.m_floorFound)\n    {\u3000\n        ...\n\n        m_marker.transform.position = target;\n        m_marker.transform.LookAt (Camera.main.transform.position); // \u8ffd\u52a0\n        ...\n    }\n}\n\n\n\n\u30c6\u30b9\u30c8\n\n\n\n\u307e\u3068\u3081\n\u30b3\u30e1\u30f3\u30c8\u304c\u591a\u3081\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u57fa\u790e\u3092\u7406\u89e3\u3057\u3066\u51e6\u7406\u306e\u6d41\u308c\u3092\u8ffd\u3048\u308c\u3070\u3001\u8aad\u307f\u89e3\u304f\u306e\u306f\u96e3\u3057\u304f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nAR\u306e\u9759\u6b62\u753b\u3067\u306f\u305d\u308c\u3063\u307d\u304f\u898b\u3048\u3066\u3044\u307e\u3059\u304c\u3001\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u52d5\u304b\u3057\u305f\u611f\u89e6\u3067\u306f\u3001\u5b9f\u7528\u30ec\u30d9\u30eb\u3067\u306e\u7cbe\u5ea6\u306f\u6539\u3081\u3066\u8a55\u4fa1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u306a\u3068\u3002\n_FindFloorWithDepth()\u306e\u30ed\u30b8\u30c3\u30af\u306b\u306f\u6539\u826f\u306e\u4f59\u5730\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\u30102017/1/12\u8ffd\u8a18\u3011\n\u30de\u30fc\u30ab\u30fc\u306e\u914d\u7f6e\u306b\u95a2\u3057\u3066\u306f\u3001AreaLearning\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u30de\u30fc\u30ab\u30fc\u5ea7\u6a19\u306e\u30ba\u30ec\u3092\u88dc\u6b63\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308a\u3001\u305d\u3061\u3089\u306e\u51e6\u7406\u3092\u63a1\u7528\u3057\u305f\u65b9\u304c\u7cbe\u5ea6\u304c\u4e0a\u304c\u308a\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30af\u30a8\u30ea\u3061\u3083\u3093 SD\u7248\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\nTango Unity SDK\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u3055\u308c\u3066\u3044\u308b[Examples\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9](https://github.com/googlesamples/tango-examples-unity)\u3092\u8aad\u3093\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001\u5e8a\uff08\u5e73\u9762\uff09\u3092\u8a8d\u8b58\u3057\u3066\u30de\u30fc\u30ab\u30fc\u3092\u914d\u7f6e\u3059\u308bExperimentalFloorFinding\u3067\u3059\u3002\n\n![Screenshot_20170102-202251.png](https://qiita-image-store.s3.amazonaws.com/0/153460/903675ef-c3ba-a2f7-c264-6115b7c03a02.png)\n\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u89e3\u6790\n\u4ee5\u4e0b\u306e3\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u6790\u30fb\u6539\u5909\u3057\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306f\u3001[Apache License 2.0]\n(http://www.apache.org/licenses/LICENSE-2.0)\u3067\u3059\u3002\n\n- TangoSDK/Examples/ExperimentalFloorFinding/Scripts/TangoFloorFindingUIController.cs\n- TangoPrefabs/Scripts/TangoPointCloud.cs\n- TangoPrefabs/Scripts/TangoPointCloudFloor.cs\n\n### \u5e8a\uff08\u5e73\u9762\uff09\u306e\u9ad8\u3055\u3092\u6c42\u3081\u308b\nGUI\u306e\"Find Floor\"\u30dc\u30bf\u30f3\u304c\u30c8\u30ea\u30ac\u306b\u306a\u308a\u307e\u3059\u3002\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u306b\u3001`m_pointCloud.FindFloor()`\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n```TangoFloorFindingUIController.cs\npublic void OnGUI()\n{\n    GUI.color = Color.white;\n\n    if (!m_findingFloor)\n    {\n        if (GUI.Button(new Rect(Screen.width - 220, 20, 200, 80), \"<size=30>Find Floor</size>\"))\n        {\n            if (m_pointCloud == null)\n            {\n                Debug.LogError(\"TangoPointCloud required to find floor.\");\n                return;\n            }\n\n            m_findingFloor = true;\n            m_marker.SetActive(false);\n            m_tangoApplication.SetDepthCameraRate(TangoEnums.TangoDepthCameraRate.MAXIMUM);\n            m_pointCloud.FindFloor();\n        }\n    }\n    else\n    {\n            GUI.Label(new Rect(0, Screen.height - 50, Screen.width, 50), \"<size=30>Searching for floor position. Make sure the floor is visible.</size>\");\n    }\n}\n```\n\n`FindFloor()`\u3067\u306f`m_findFloorWithDepth`\u306btrue\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n```TangoPointCloud.cs\npublic void FindFloor()\n{\n    m_floorFound = false;\n    m_findFloorWithDepth = true;\n    m_floorPlaneY = 0.0f;\n}\n```\n\npointCloud\u3092\u53d6\u5f97\u3059\u308b\u305f\u3073\u306b`OnTangoPointCloudAvailable()`\u304ccall\u3055\u308c\u3001\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u305f\u3053\u3068\u3067`_FindFloorWithDepth()`\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\npointCloud\u306b\u3064\u3044\u3066\u306f\u3001[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/jyuko/items/8db0f0160c550a3c3f01)\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n```TangoPointCloud.cs\npublic void OnTangoPointCloudAvailable(TangoPointCloudData pointCloud)\n{\n    ...\n        // Try to find the floor using this set of depth points if requested.\n        if (m_findFloorWithDepth)\n        {\n            _FindFloorWithDepth();\n        }\n    ...\n}\n```\n\n`_FindFloorWithDepth()`\u304c\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```TangoPointCloud.cs\nprivate const int RECOGNITION_THRESHOLD = 1000;\nprivate const int NOISE_THRESHOLD = 500;\nprivate const float SENSITIVITY = 0.02f;\n\nprivate void _FindFloorWithDepth()\n{\n    m_numPointsAtY.Clear();\n    m_nonNoiseBuckets.Clear();\n        \n    // Count each depth point into a bucket based on its world position y value.\n    for (int i = 0; i < m_pointsCount; i++)\n    {\n        Vector3 point = m_points[i];\n        if (!point.Equals(Vector3.zero))\n        {\n            // Group similar points into buckets based on sensitivity. \n            float roundedY = Mathf.Round(point.y / SENSITIVITY) * SENSITIVITY;\n            if (!m_numPointsAtY.ContainsKey(roundedY))\n            {\n                m_numPointsAtY.Add(roundedY, 0);\n            }\n            \n            m_numPointsAtY[roundedY]++;\n\n            // Check if the y plane is a non-noise plane.\n            if (m_numPointsAtY[roundedY] > NOISE_THRESHOLD && !m_nonNoiseBuckets.Contains(roundedY))\n            {\n                m_nonNoiseBuckets.Add(roundedY);\n            }\n        }\n    }\n    \n    // Find a plane at the y value. The y value must be below the camera y position.\n    m_nonNoiseBuckets.Sort();\n    for (int i = 0; i < m_nonNoiseBuckets.Count; i++)\n    {\n        float yBucket = m_nonNoiseBuckets[i];\n        int numPoints = m_numPointsAtY[yBucket];\n        if (numPoints > RECOGNITION_THRESHOLD && yBucket < Camera.main.transform.position.y)\n        {\n            // Reject the plane if it is not the lowest.\n            if (yBucket > m_nonNoiseBuckets[0])\n            {\n                return;\n            }\n            \n            m_floorFound = true;\n            m_findFloorWithDepth = false;\n            m_floorPlaneY = yBucket;\n            m_numPointsAtY.Clear();\n            m_nonNoiseBuckets.Clear();\n        }\n    }\n}\n```\n\n\u884c\u3063\u3066\u3044\u308b\u51e6\u7406\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3001pointCloud\u304b\u3089\u9ad8\u3055(y\u5ea7\u6a19)\u304c\u540c\u3058point\u306e\u6570\u3092\u6570\u3048\u3066\u3001\n\n- \u4e00\u5b9a\u6570\u540c\u3058\u9ad8\u3055\u306epoint\u304c\u3042\u308b\uff08\u5e73\u9762\u3067\u3042\u308b\uff09\n- \u30ab\u30e1\u30e9\u3088\u308a\u4f4d\u7f6e\u304c\u4f4e\u3044\n\n\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u9ad8\u3055(m_floorPlaneY)\u3092\u6c42\u3081\u3066\u3044\u307e\u3059\u3002\n\n\n\u524d\u534a\u306e\u30eb\u30fc\u30d7\u3067\u306f\u4e38\u3081\u305f\u5024\u3092`m_numPointsAtY`\u3067\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u5143\u306e\u5024\u306fmm(\u30df\u30ea\u30e1\u30fc\u30c8\u30eb)\u3088\u308a\u7d30\u304b\u3044\u7cbe\u5ea6\u306a\u306e\u3067\u3001`SENSITIVITY`\u3067\u4e38\u3081\u3066\u3044\u307e\u3059\u3002`SENSITIVITY = 0.02f`\u306f\u30010.02m = 2cm\u306e\u7cbe\u5ea6\u3067\u3059\u3002\n`m_nonNoiseBuckets`\u306b\u306f\u3001\u540c\u3058\u9ad8\u3055\u306epoint\u304c`NOISE_THRESHOLD`\u3092\u8d85\u3048\u305f\u3068\u304d\u3060\u3051\u3001\u9ad8\u3055\u306e\u5024\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u914d\u5217\u304c\u6c42\u3081\u308b\u9ad8\u3055\u306e\u5019\u88dc\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5f8c\u534a\u306e\u51e6\u7406\u3067\u306f\u3001`m_nonNoiseBuckets`\u3092\u30bd\u30fc\u30c8\u3057\u305f\u5f8c\u3001\u30eb\u30fc\u30d7\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u7d50\u5c40\u3001\u4e00\u756a\u5c0f\u3055\u3044\u5024\u4ee5\u5916\u306f\u9664\u5916\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3042\u307e\u308a\u610f\u5473\u306f\u306a\u3044\u3088\u3046\u306a\u6c17\u3082\u3057\u307e\u3059\u3002\nif\u6587\u306e\u6761\u4ef6\u5f0f\u3067\u3001point\u6570\u304c`RECOGNITION_THRESHOLD`\u3088\u308a\u5927\u304d\u304f\u3001\u9ad8\u3055\u304c\u30ab\u30e1\u30e9\u3088\u308a\u3082\u4f4e\u3044\u5834\u5408\u3001\u5024\u3092`m_floorPlaneY`\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n`RECOGNITION_THRESHOLD`\u3068`NOISE_THRESHOLD`\u3092\u5225\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u7406\u7531\u306f\u3001\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\n### \u30de\u30fc\u30ab\u30fc\u3092\u914d\u7f6e\u3059\u308b\n`TangoPointCloudFloor`\u306ey\u5ea7\u6a19\u304c`m_floorPlaneY`\u3067\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\n\n```TangoPointCloudFloor.cs\npublic void Update()\n{\n    // If the point cloud has found the floor, adjust the position accordingly.\n    if (m_pointCloud.m_floorFound)\n    {\n        m_floorFound = true;\n        if (transform.position.y != m_pointCloud.m_floorPlaneY)\n        {\n            transform.position = new Vector3(0.0f, m_pointCloud.m_floorPlaneY, 0.0f);\n            foreach (Transform t in transform)\n            {\n                t.gameObject.SetActive(true);\n            }\n        }\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000...\n    }\n    else\n    {\n        m_floorFound = false;\n        m_depthTriggered = false;\n    }\n}\n```\n\nUIController\u306b\u623b\u3063\u3066\u3001`TangoPointCloudFloor`\u304c\u66f4\u65b0\u3055\u308c\u305f\u5f8c\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\u753b\u9762\u306e\u4e2d\u5fc3\u65b9\u5411\u306bRayCast\u3092\u4f38\u3070\u3057\u3066\u3001Floor\u3068\u885d\u7a81\u3057\u305f\u70b9\u306b\u30de\u30fc\u30ab\u30fc\u3092\u79fb\u52d5\u3057\u3066\u3044\u307e\u3059\u3002\n\n```TangoFloorFindingUIController.cs\npublic void Update()\n{\n    ...\n\n    if (!m_findingFloor)\n    {\n        return;\n    }\n\n    // If the point cloud floor has found a new floor, place the marker at the found y position.\n    if (m_pointCloudFloor.m_floorFound && m_pointCloud.m_floorFound)\n    {\n        m_findingFloor = false;\n\n        // Place the marker at the center of the screen at the found floor height.\n        m_marker.SetActive(true);\n        Vector3 target;\n        RaycastHit hitInfo;\n        if (Physics.Raycast(Camera.main.ScreenPointToRay(new Vector3(Screen.width / 2.0f, Screen.height / 2.0f)), out hitInfo))\n        {\n            // Limit distance of the marker position from the camera to the camera's far clip plane. This makes sure that the marker\n            // is visible on screen when the floor is found.\n            Vector3 cameraBase = new Vector3(Camera.main.transform.position.x, hitInfo.point.y, Camera.main.transform.position.z);\n            target = cameraBase + Vector3.ClampMagnitude(hitInfo.point - cameraBase, Camera.main.farClipPlane * 0.9f);\n        }\n        else\n        {\n            // If no raycast hit, place marker in the camera's forward direction.\n            Vector3 dir = new Vector3(Camera.main.transform.forward.x, 0.0f, Camera.main.transform.forward.z);\n            target = dir.normalized * (Camera.main.farClipPlane * 0.9f);\n            target.y = m_pointCloudFloor.transform.position.y;\n        }\n\n        m_marker.transform.position = target;\n        ...\n    }\n}\n```\n\n\n\n\n## \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u306e\u4f5c\u6210\n\n### \u30de\u30fc\u30ab\u30fc\u306e\u5909\u66f4\nGUI\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308bARMarker\u3092\u4efb\u610f\u306eGameObject\u306b\u5909\u66f4\u3059\u308b\u3060\u3051\u3067OK\u3067\u3059\u3002\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u8d64\u67a0\u90e8\u5206\u3067\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-02 22.23.19.png](https://qiita-image-store.s3.amazonaws.com/0/153460/0530a26f-b578-48dd-24c7-00e02b98ac3e.png)\n\n### \u30de\u30fc\u30ab\u30fc\u306e\u5411\u304d\u3092\u5909\u66f4\n\u30de\u30fc\u30ab\u30fc\u306e\u4f4d\u7f6e\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u3001`LookAt`\u3067\u30ab\u30e1\u30e9\u306e\u65b9\u5411\u3092\u5411\u304f\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```TangoFloorFindingUIController.cs\npublic void Update()\n{\n    ...\n\n    if (m_pointCloudFloor.m_floorFound && m_pointCloud.m_floorFound)\n    {\u3000\n        ...\n\n        m_marker.transform.position = target;\n        m_marker.transform.LookAt (Camera.main.transform.position); // \u8ffd\u52a0\n        ...\n    }\n}\n```\n\n### \u30c6\u30b9\u30c8\n![Screenshot_20170102-202251.png](https://qiita-image-store.s3.amazonaws.com/0/153460/903675ef-c3ba-a2f7-c264-6115b7c03a02.png)\n\n![Screenshot_20170102-202903.png](https://qiita-image-store.s3.amazonaws.com/0/153460/dc0db676-e601-1557-0007-41698542ea98.png)\n\n\n## \u307e\u3068\u3081\n\u30b3\u30e1\u30f3\u30c8\u304c\u591a\u3081\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3001[\u57fa\u790e\u3092\u7406\u89e3](http://qiita.com/jyuko/items/8db0f0160c550a3c3f01)\u3057\u3066\u51e6\u7406\u306e\u6d41\u308c\u3092\u8ffd\u3048\u308c\u3070\u3001\u8aad\u307f\u89e3\u304f\u306e\u306f\u96e3\u3057\u304f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nAR\u306e\u9759\u6b62\u753b\u3067\u306f\u305d\u308c\u3063\u307d\u304f\u898b\u3048\u3066\u3044\u307e\u3059\u304c\u3001\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u52d5\u304b\u3057\u305f\u611f\u89e6\u3067\u306f\u3001\u5b9f\u7528\u30ec\u30d9\u30eb\u3067\u306e\u7cbe\u5ea6\u306f\u6539\u3081\u3066\u8a55\u4fa1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u306a\u3068\u3002\n`_FindFloorWithDepth()`\u306e\u30ed\u30b8\u30c3\u30af\u306b\u306f\u6539\u826f\u306e\u4f59\u5730\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n\u30102017/1/12\u8ffd\u8a18\u3011\n\u30de\u30fc\u30ab\u30fc\u306e\u914d\u7f6e\u306b\u95a2\u3057\u3066\u306f\u3001[AreaLearning\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u30de\u30fc\u30ab\u30fc\u5ea7\u6a19\u306e\u30ba\u30ec\u3092\u88dc\u6b63](http://qiita.com/jyuko/items/8eb208104c1c132ff381)\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308a\u3001\u305d\u3061\u3089\u306e\u51e6\u7406\u3092\u63a1\u7528\u3057\u305f\u65b9\u304c\u7cbe\u5ea6\u304c\u4e0a\u304c\u308a\u307e\u3059\u3002\n\n## \u304a\u308f\u308a\u306b\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001[\u30af\u30a8\u30ea\u3061\u3083\u3093 SD\u7248\u30e2\u30c7\u30eb](http://query-chan.com/download/)\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n[![02_\u30af\u30a8\u30ea\u3061\u3083\u3093\u30e9\u30a4\u30bb\u30f3\u30b9\u30ed\u30b4-e1472646888241-300x256.png](https://qiita-image-store.s3.amazonaws.com/0/153460/0e428400-07c9-17ff-fe29-6be7b7e51062.png)](http://query-chan.com/download/)\n", "tags": ["Tango", "AR", "\u62e1\u5f35\u73fe\u5b9f", "Unity"]}