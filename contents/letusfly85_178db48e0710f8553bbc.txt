{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\ntakezoe\u3055\u3093\u306e\u8a18\u4e8b\u3001\u300cAWS\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3044\u304b\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u958b\u767a\u3059\u308b\u304b\uff1f\u300d\u306b\u89e6\u767a\u3055\u308c\u3066\u3001\nDynamoDB\u306eDocker Image\u3092\u4f5c\u6210\u3067\u304d\u308b\u304b\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff01\n\n\u6210\u679c\u7269\n\nhttps://github.com/tripleW/docker-dynalite\nhttps://hub.docker.com/r/letusfly85/dynalite/\n\n\n\u53c2\u8003\u8cc7\u6599\n\nhttps://docs.travis-ci.com/user/docker/\nhttps://github.com/mhart/dynalite\n\n\n\u624b\u9806\n\n1. GitHub\u3067\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u3001Dockerfile\u3092\u7528\u610f\u3059\u308b\nhttps://github.com/tripleW/docker-dynalite\nFROM node\n\nRUN npm install -g dynalite\n\nEXPOSE 4567\n\nCMD [\"dynalite\"]\n\n\n2. .travis.yml\u3092\u7528\u610f\u3059\u308b\nhttps://docs.travis-ci.com/user/docker/\n\u4e0a\u8a18\u3092\u53c2\u8003\u306b\u3057\u3066\u3001.travis.yml\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\ntravis.yml\nsudo: required\n\nlanguage: node_js\nnode_js:\n  - \"4.1\"\n\nservices:\n  - docker\n\nbefore_install:\n  - docker build -t letusfly85/dynalite ./\n\nscript:\n  - docker login -e=\"$DOCKER_EMAIL\" -u=\"$DOCKER_USERNAME\" -p=\"$DOCKER_PASSWORD\"\n  - docker push letusfly85/dynalite\n\n\ndocker push\u3063\u3066\u3069\u3046\u3084\u308b\u306e\u3088\u3002\u3002\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001travis-ci\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a2d\u5b9a\u753b\u9762\u3067\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3067\u304d\u305f\u306e\u3067\u3001\u305d\u3053\u3067\u3001\n\nDOCKER_EMAIL\nDOCKER_USERNAME\nDOCKER_PASSWORD\n\n\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n3. git push\u3092\u3057\u3066\u3001travis ci\u3092\u8d70\u3089\u305b\u308b\n\u4ee5\u4e0b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n\n\u5272\u3068\u3055\u304f\u3063\u3068\u3001\u3044\u3051\u307e\u3057\u305f\u306d\u3002\n\u30a4\u30e1\u30fc\u30b8\u81ea\u4f53\u304c\u5229\u7528\u53ef\u80fd\u304b\u3069\u3046\u304b\u306f\u3053\u308c\u304b\u3089\u898b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059^^;\n\n\u5229\u7528\u65b9\u6cd5\n\n\u5b9f\u884c\u74b0\u5883\n\nClient \u30ed\u30fc\u30ab\u30eb\u306eMacOS\nServer \u3069\u3053\u304b\u306eAWS\u3068\u304b\u3069\u3053\u304b\u306eGCP\u3068\u304b\nnode\u5229\u7528\n\n\n1. npm install \u3067aws-sdk\u3092\u53d6\u5f97\nnpm install aws-sdk\n\n\n2. dummy\u306ecredential\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\u826f\u3044\u5b50\u306e\u307f\u306a\u3055\u3093\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30ed\u30fc\u30eb\u3067\u5bfe\u5fdc\u3067\u304d\u308b\u65b9\u6cd5\u3092\u898b\u3064\u3051\u3066\u304f\u3060\u3055\u3044\u306d^^\n\ncredential.json\n{\"accessKeyId\": \"XXXXXXXXXXXXXXXXXX\", \"secretAccessKey\": \"YYYYYYYYYYYYYYYYYYYYYYYYYYYY\"}\n\n\n\n3. \u30a2\u30af\u30bb\u30b9\u3059\u308bjs\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\ncreate.table.js\nvar AWS = require('aws-sdk')\nAWS.config.loadFromPath('credential.json');\n\nvar dynamo = new AWS.DynamoDB({region: 'us-east-1', endpoint: 'http://*.*.*.*'})\ndynamo.listTables(console.log.bind(console))\n\nvar params = {\n    TableName : \"Movies\",\n    KeySchema: [\n        { AttributeName: \"year\", KeyType: \"HASH\"},  //Partition key\n        { AttributeName: \"title\", KeyType: \"RANGE\" }  //Sort key\n    ],\n    AttributeDefinitions: [\n        { AttributeName: \"year\", AttributeType: \"N\" },\n        { AttributeName: \"title\", AttributeType: \"S\" }\n    ],\n    ProvisionedThroughput: {\n        ReadCapacityUnits: 10,\n        WriteCapacityUnits: 10\n    }\n};\n\ndynamo.createTable(params, function(err, data) {\n    if (err) {\n        console.error(\"Unable to create table. Error JSON:\", JSON.stringify(err, null, 2));\n    } else {\n        console.log(\"Created table. Table description JSON:\", JSON.stringify(data, null, 2));\n    }\n});\n\ndynamo.describeTable(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n        // php.var_dump(data);\n    }\n});\n\n\n\n4. \u5b9f\u884c\nnode create.table.js\n\n\n5. \u7d50\u679c\n{ [MultipleValidationErrors: There were 3 validation errors:\n* UnexpectedParameter: Unexpected key 'KeySchema' found in params\n* UnexpectedParameter: Unexpected key 'AttributeDefinitions' found in params\n* UnexpectedParameter: Unexpected key 'ProvisionedThroughput' found in params]\n  message: 'There were 3 validation errors:\\n* UnexpectedParameter: Unexpected key \\'KeySchema\\' found in params\\n* UnexpectedParameter: Unexpected key \\'AttributeDefinitions\\' found in params\\n* UnexpectedParameter: Unexpected key \\'ProvisionedThroughput\\' found in params',\n  code: 'MultipleValidationErrors',\n  errors:\n   [ { [UnexpectedParameter: Unexpected key 'KeySchema' found in params]\n       message: 'Unexpected key \\'KeySchema\\' found in params',\n       code: 'UnexpectedParameter',\n       time: Mon Feb 15 2016 15:50:15 GMT+0900 (JST) },\n     { [UnexpectedParameter: Unexpected key 'AttributeDefinitions' found in params]\n       message: 'Unexpected key \\'AttributeDefinitions\\' found in params',\n       code: 'UnexpectedParameter',\n       time: Mon Feb 15 2016 15:50:15 GMT+0900 (JST) },\n     { [UnexpectedParameter: Unexpected key 'ProvisionedThroughput' found in params]\n       message: 'Unexpected key \\'ProvisionedThroughput\\' found in params',\n       code: 'UnexpectedParameter',\n       time: Mon Feb 15 2016 15:50:15 GMT+0900 (JST) } ],\n  time: Mon Feb 15 2016 15:50:15 GMT+0900 (JST) } ''\nnull { TableNames: [] }\nCreated table. Table description JSON: {\n  \"TableDescription\": {\n    \"AttributeDefinitions\": [\n      {\n        \"AttributeName\": \"year\",\n        \"AttributeType\": \"N\"\n      },\n      {\n        \"AttributeName\": \"title\",\n        \"AttributeType\": \"S\"\n      }\n    ],\n    \"TableName\": \"Movies\",\n    \"KeySchema\": [\n      {\n        \"AttributeName\": \"year\",\n        \"KeyType\": \"HASH\"\n      },\n      {\n        \"AttributeName\": \"title\",\n        \"KeyType\": \"RANGE\"\n      }\n    ],\n    \"TableStatus\": \"CREATING\",\n    \"CreationDateTime\": \"2016-02-15T06:50:15.599Z\",\n    \"ProvisionedThroughput\": {\n      \"NumberOfDecreasesToday\": 0,\n      \"ReadCapacityUnits\": 10,\n      \"WriteCapacityUnits\": 10\n    },\n    \"TableSizeBytes\": 0,\n    \"ItemCount\": 0,\n    \"TableArn\": \"arn:aws:dynamodb:us-east-1:000000000000:table/Movies\"\n  }\n}\nnull { TableNames: [ 'Movies' ] }\n\n\u4f7f\u3048\u306a\u3044\u3053\u3068\u3082\u306a\u3055\u305d\u3046\u306a\u5370\u8c61\u3067\u3059\u306d\uff01\n\n\u304a\u307e\u3051\nscala\u304b\u3089\u3082\u547c\u3073\u51fa\u3057\u3067\u304d\u307e\u3057\u305f\u3002\nhttps://github.com/letusfly85/use-dynalite_scala-example\n## \u76ee\u7684\n\ntakezoe\u3055\u3093\u306e\u8a18\u4e8b\u3001\u300c[AWS\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3044\u304b\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u958b\u767a\u3059\u308b\u304b\uff1f](http://takezoe.hatenablog.com/entry/2016/02/12/090152)\u300d\u306b\u89e6\u767a\u3055\u308c\u3066\u3001\nDynamoDB\u306eDocker Image\u3092\u4f5c\u6210\u3067\u304d\u308b\u304b\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff01\n\n## \u6210\u679c\u7269\n\n* https://github.com/tripleW/docker-dynalite\n* https://hub.docker.com/r/letusfly85/dynalite/\n\n## \u53c2\u8003\u8cc7\u6599\n\n* https://docs.travis-ci.com/user/docker/\n* https://github.com/mhart/dynalite\n\n## \u624b\u9806\n\n### 1. GitHub\u3067\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u3001Dockerfile\u3092\u7528\u610f\u3059\u308b\n\nhttps://github.com/tripleW/docker-dynalite\n\n```Dockerfile\nFROM node\n\nRUN npm install -g dynalite\n\nEXPOSE 4567\n\nCMD [\"dynalite\"]\n```\n\n### 2. .travis.yml\u3092\u7528\u610f\u3059\u308b\n\nhttps://docs.travis-ci.com/user/docker/\n\n\u4e0a\u8a18\u3092\u53c2\u8003\u306b\u3057\u3066\u3001.travis.yml\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n```.travis.yml\nsudo: required\n\nlanguage: node_js\nnode_js:\n  - \"4.1\"\n\nservices:\n  - docker\n\nbefore_install:\n  - docker build -t letusfly85/dynalite ./\n\nscript:\n  - docker login -e=\"$DOCKER_EMAIL\" -u=\"$DOCKER_USERNAME\" -p=\"$DOCKER_PASSWORD\"\n  - docker push letusfly85/dynalite\n```\n\n`docker push`\u3063\u3066\u3069\u3046\u3084\u308b\u306e\u3088\u3002\u3002\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001travis-ci\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a2d\u5b9a\u753b\u9762\u3067\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3067\u304d\u305f\u306e\u3067\u3001\u305d\u3053\u3067\u3001\n\n* DOCKER_EMAIL\n* DOCKER_USERNAME\n* DOCKER_PASSWORD\n\n\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n### 3. git push\u3092\u3057\u3066\u3001travis ci\u3092\u8d70\u3089\u305b\u308b\n\n\u4ee5\u4e0b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-15 15.00.45.png](https://qiita-image-store.s3.amazonaws.com/0/49547/c8d26b5c-33cb-1d62-778c-4bd6fa0f833a.png)\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-15 15.01.12.png](https://qiita-image-store.s3.amazonaws.com/0/49547/a08e7ec1-be62-035e-55d5-96c09859f131.png)\n\n\u5272\u3068\u3055\u304f\u3063\u3068\u3001\u3044\u3051\u307e\u3057\u305f\u306d\u3002\n\n\u30a4\u30e1\u30fc\u30b8\u81ea\u4f53\u304c\u5229\u7528\u53ef\u80fd\u304b\u3069\u3046\u304b\u306f\u3053\u308c\u304b\u3089\u898b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059^^;\n\n## \u5229\u7528\u65b9\u6cd5\n\n### \u5b9f\u884c\u74b0\u5883\n\n* Client \u30ed\u30fc\u30ab\u30eb\u306eMacOS\n* Server \u3069\u3053\u304b\u306eAWS\u3068\u304b\u3069\u3053\u304b\u306eGCP\u3068\u304b\n* node\u5229\u7528\n\n### 1. npm install \u3067aws-sdk\u3092\u53d6\u5f97\n\n```bash\nnpm install aws-sdk\n```\n\n### 2. dummy\u306ecredential\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\n\u826f\u3044\u5b50\u306e\u307f\u306a\u3055\u3093\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30ed\u30fc\u30eb\u3067\u5bfe\u5fdc\u3067\u304d\u308b\u65b9\u6cd5\u3092\u898b\u3064\u3051\u3066\u304f\u3060\u3055\u3044\u306d^^\n\n```credential.json\n{\"accessKeyId\": \"XXXXXXXXXXXXXXXXXX\", \"secretAccessKey\": \"YYYYYYYYYYYYYYYYYYYYYYYYYYYY\"}\n```\n\n### 3. \u30a2\u30af\u30bb\u30b9\u3059\u308bjs\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\n```create.table.js\nvar AWS = require('aws-sdk')\nAWS.config.loadFromPath('credential.json');\n\nvar dynamo = new AWS.DynamoDB({region: 'us-east-1', endpoint: 'http://*.*.*.*'})\ndynamo.listTables(console.log.bind(console))\n\nvar params = {\n    TableName : \"Movies\",\n    KeySchema: [\n        { AttributeName: \"year\", KeyType: \"HASH\"},  //Partition key\n        { AttributeName: \"title\", KeyType: \"RANGE\" }  //Sort key\n    ],\n    AttributeDefinitions: [\n        { AttributeName: \"year\", AttributeType: \"N\" },\n        { AttributeName: \"title\", AttributeType: \"S\" }\n    ],\n    ProvisionedThroughput: {\n        ReadCapacityUnits: 10,\n        WriteCapacityUnits: 10\n    }\n};\n\ndynamo.createTable(params, function(err, data) {\n    if (err) {\n        console.error(\"Unable to create table. Error JSON:\", JSON.stringify(err, null, 2));\n    } else {\n        console.log(\"Created table. Table description JSON:\", JSON.stringify(data, null, 2));\n    }\n});\n\ndynamo.describeTable(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n        // php.var_dump(data);\n    }\n});\n```\n\n### 4. \u5b9f\u884c\n\n```bash\nnode create.table.js\n```\n\n### 5. \u7d50\u679c\n\n```bash\n{ [MultipleValidationErrors: There were 3 validation errors:\n* UnexpectedParameter: Unexpected key 'KeySchema' found in params\n* UnexpectedParameter: Unexpected key 'AttributeDefinitions' found in params\n* UnexpectedParameter: Unexpected key 'ProvisionedThroughput' found in params]\n  message: 'There were 3 validation errors:\\n* UnexpectedParameter: Unexpected key \\'KeySchema\\' found in params\\n* UnexpectedParameter: Unexpected key \\'AttributeDefinitions\\' found in params\\n* UnexpectedParameter: Unexpected key \\'ProvisionedThroughput\\' found in params',\n  code: 'MultipleValidationErrors',\n  errors:\n   [ { [UnexpectedParameter: Unexpected key 'KeySchema' found in params]\n       message: 'Unexpected key \\'KeySchema\\' found in params',\n       code: 'UnexpectedParameter',\n       time: Mon Feb 15 2016 15:50:15 GMT+0900 (JST) },\n     { [UnexpectedParameter: Unexpected key 'AttributeDefinitions' found in params]\n       message: 'Unexpected key \\'AttributeDefinitions\\' found in params',\n       code: 'UnexpectedParameter',\n       time: Mon Feb 15 2016 15:50:15 GMT+0900 (JST) },\n     { [UnexpectedParameter: Unexpected key 'ProvisionedThroughput' found in params]\n       message: 'Unexpected key \\'ProvisionedThroughput\\' found in params',\n       code: 'UnexpectedParameter',\n       time: Mon Feb 15 2016 15:50:15 GMT+0900 (JST) } ],\n  time: Mon Feb 15 2016 15:50:15 GMT+0900 (JST) } ''\nnull { TableNames: [] }\nCreated table. Table description JSON: {\n  \"TableDescription\": {\n    \"AttributeDefinitions\": [\n      {\n        \"AttributeName\": \"year\",\n        \"AttributeType\": \"N\"\n      },\n      {\n        \"AttributeName\": \"title\",\n        \"AttributeType\": \"S\"\n      }\n    ],\n    \"TableName\": \"Movies\",\n    \"KeySchema\": [\n      {\n        \"AttributeName\": \"year\",\n        \"KeyType\": \"HASH\"\n      },\n      {\n        \"AttributeName\": \"title\",\n        \"KeyType\": \"RANGE\"\n      }\n    ],\n    \"TableStatus\": \"CREATING\",\n    \"CreationDateTime\": \"2016-02-15T06:50:15.599Z\",\n    \"ProvisionedThroughput\": {\n      \"NumberOfDecreasesToday\": 0,\n      \"ReadCapacityUnits\": 10,\n      \"WriteCapacityUnits\": 10\n    },\n    \"TableSizeBytes\": 0,\n    \"ItemCount\": 0,\n    \"TableArn\": \"arn:aws:dynamodb:us-east-1:000000000000:table/Movies\"\n  }\n}\nnull { TableNames: [ 'Movies' ] }\n```\n\n\u4f7f\u3048\u306a\u3044\u3053\u3068\u3082\u306a\u3055\u305d\u3046\u306a\u5370\u8c61\u3067\u3059\u306d\uff01\n\n## \u304a\u307e\u3051\n\nscala\u304b\u3089\u3082\u547c\u3073\u51fa\u3057\u3067\u304d\u307e\u3057\u305f\u3002\n\nhttps://github.com/letusfly85/use-dynalite_scala-example\n", "tags": ["docker", "AWS", "DynamoDB", "TravisCI", "dynalite"]}