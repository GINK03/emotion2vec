{"context": " More than 1 year has passed since last update.\u4eca\u56de\u306fthymeleaf\u306e\u62e1\u5f35\u306b\u3064\u3044\u3066\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\nhttp://www.thymeleaf.org/doc/tutorials/2.1/extendingthymeleaf.html\nSpringBoot\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u3068\u3057\u3066thymeleaf\u3092\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n1.PHP\u306a\u3069\u3067\u5229\u7528\u3057\u3066\u3044\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u6d41\u7528\nPHP\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u7684\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u306e\u3067\u3001JSP\u3068\u9055\u3063\u3066\u66f8\u304d\u76f4\u3057\u306e\u624b\u9593\u304c\u3059\u3054\u304f\u7701\u3051\u307e\u3059\u3002\n2.\u72ec\u81ea\u30bf\u30b0\u306e\u5b9a\u7fa9\n<p th:mytag=\"${tree}\"></p>\n\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u72ec\u81ea\u30bf\u30b0\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\u5b9f\u88c5\u306f\u30a8\u30ec\u30e1\u30f3\u30c8\u3054\u3068\u304b\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u3054\u3068\u306a\u3069\u8272\u3005\u9078\u3079\u307e\u3059\u3002\n\u767b\u9332\u3057\u305f\u72ec\u81ea\u30bf\u30b0\u306b\u5bfe\u5fdc\u3059\u308b\u30af\u30e9\u30b9\u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u305d\u3053\u3067\u7de8\u96c6\u3092\u884c\u3046\u3068\u3044\u3063\u305f\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\nhttp://www.thymeleaf.org/apidocs/thymeleaf/2.1.2.RELEASE/org/thymeleaf/processor/AbstractProcessor.html\n\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8: AbstractAttrProcessor\n\u30b3\u30e1\u30f3\u30c8: AbstractCommentNodeProcessor\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: AbstractDocumentProcessor\n\u30a8\u30ec\u30e1\u30f3\u30c8: AbstractElementProcessor\n\u30c6\u30ad\u30b9\u30c8\u30ce\u30fc\u30c9: AbstractTextNodeProcessor\n\u4eca\u56de\u306f\u5168\u3066\u306e\u30d5\u30a9\u30fc\u30e0\u30bf\u30b0CSFR\u30c8\u30fc\u30af\u30f3\u691c\u8a3c\u7528\u306ehideen\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u81ea\u52d5\u3067\u8ffd\u52a0\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u53d7\u4fe1\u6642\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n1.\u30d5\u30a9\u30fc\u30e0\u306e\u5b9f\u88c5\n\u30d5\u30a9\u30fc\u30e0\u30d7\u30ed\u30bb\u30c3\u30b5\n\u307e\u305a\u306f\u3001AbstractElementProcessor\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nthymeleaf\u3067\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3066View\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\u524d\u306b\u8272\u3005\u306a\u30d7\u30ed\u30bb\u30c3\u30b5\u30a8\u30f3\u30b8\u30f3\u3092\u547c\u3073\u51fa\u3057\u3057\u307e\u3059\u3002\u305d\u3053\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u3044\u304f\u3064\u3067\u3082\u767b\u9332\u3067\u304d\u308b\u306e\u3067\u30d5\u30a9\u30fc\u30e0\u51e6\u7406\u7528\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30c0\u30a4\u30a2\u30ec\u30af\u30c8\nAbstractDialect\u3092\u5b9f\u88c5\u3057\u3066\u5b9f\u969b\u306b\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u767b\u9332\u3059\u308b\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\nWebMvcConfigurerAdapter\nWebMvcConfigurerAdapter\n\u3053\u3061\u3089\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\u3053\u306e\u969b\u306b\u3001\u5148\u307b\u3069\u5b9f\u88c5\u3057\u305f\u30c0\u30a4\u30a2\u30ec\u30af\u30c8\u306e\u547c\u3073\u51fa\u3057\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n\u4ee5\u4e0a3\u3064\u306e\u8a2d\u5b9a\u3092\u6b63\u3057\u304f\u884c\u3046\u3068\u30d5\u30a9\u30fc\u30e0\u30bf\u30b0\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u4e00\u5f8b\u3067\u884c\u3048\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n1.\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5b9f\u88c5\n\u30d5\u30a9\u30fc\u30e0\u30bf\u30b0\u306b\u30c8\u30fc\u30af\u30f3\u7528\u306ehidden\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5165\u3063\u305f\u3089\u4eca\u5ea6\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306e\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306fHandlerInterceptor\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u4e2d\u3067\u884c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\n@Override\npublic boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3068\u304a\u306a\u3058\u307f\u306eHttpServletRequest\u304c\u304f\u308b\u306e\u3067\u597d\u304d\u306a\u69d8\u306b\u8abf\u7406\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\nhttp://forum.thymeleaf.org/Support-for-RequestDataValueProcessor-td4024906.html\n\u52d5\u4f5c\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n\u30bd\u30fc\u30b9\n\u8d77\u52d5\n\nThymeleafConfig.java\n@Configuration\npublic class ThymeleafConfig extends WebMvcConfigurerAdapter {\n\n        @Bean\n        public ClassLoaderTemplateResolver templateResolver() {\n            ClassLoaderTemplateResolver classLoaderTemplateResolver = new ClassLoaderTemplateResolver();\n            classLoaderTemplateResolver.setCacheable(false);\n            classLoaderTemplateResolver.setPrefix(\"templates/\");\n            classLoaderTemplateResolver.setSuffix(\".html\");\n            classLoaderTemplateResolver.setTemplateMode(\"HTML5\");\n            classLoaderTemplateResolver.setCacheable(false);\n            return classLoaderTemplateResolver;\n        }\n\n\n        @Bean\n        public SpringTemplateEngine templateEngine() {\n            SpringTemplateEngine templateEngine = new SpringTemplateEngine();\n            templateEngine.setTemplateResolver(templateResolver());\n            templateEngine.addDialect(new ThymeleafDialect());\n            return templateEngine;\n        }\n\n        @Bean\n        public ThymeleafViewResolver viewResolver() {\n            ThymeleafViewResolver viewResolver = new ThymeleafViewResolver();\n            viewResolver.setTemplateEngine(templateEngine());\n\n            return viewResolver;\n        }\n\n        @Override\n        public void addResourceHandlers(ResourceHandlerRegistry registry) {\n            registry.addResourceHandler(\"/resources/**\").addResourceLocations(\"/WEB-INF/resources/\");\n        }\n}\n\n\n\nThymeleafDialect.java\npublic class ThymeleafDialect extends AbstractDialect {\n    public static final String PREFIX = \"\";\n\n\n    public ThymeleafDialect() {\n        super();\n        // TODO Auto-generated constructor stub\n    }\n\n    @Override\n    public String getPrefix() {\n        // TODO Auto-generated method stub\n        return PREFIX;\n    }\n\n\n    // The processors.\n    //\n    @Override\n    public Set<IProcessor> getProcessors() {\n        final Set<IProcessor> processors = new LinkedHashSet<IProcessor>();\n        processors.add(new demo.thymeleaf.FormProcessor());\n\n        return new LinkedHashSet<IProcessor>(processors);\n\n    }\n\n}\n\n\n\nFormProcessor.java\npublic class FormProcessor extends AbstractElementProcessor {\n    static final String ELEMENT_NAME_FORM = \"form\";\n\n    public FormProcessor() {\n        super(ELEMENT_NAME_FORM);\n    }\n\n    @Override\n    protected ProcessorResult processElement(Arguments arguments,Element element) {\n        try{\n            addCSRFHiddenFields(arguments, element);\n            System.out.println(element.getNormalizedName());\n            return ProcessorResult.OK;\n        }catch(Exception e){\n            System.out.println(e.getMessage());\n        }\n        return null;\n    }\n\n    @Override\n    public IProcessorMatcher<? extends Element> getMatcher() {\n        // TODO Auto-generated method stub\n        return super.getMatcher();\n    }\n\n    private void addCSRFHiddenFields(Arguments arguments, Element element) {\n        System.out.println(\"addExtraHiddenFields\");\n        //element.getAttributeFromNormalizedName(\"form\");\n        element.normalizeElementName(\"form\");\n\n\n        if (!\"GET\".equalsIgnoreCase(element.getAttributeValueFromNormalizedName(\"method\"))) {\n            try {\n\n                HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();\n                HttpSession httpSession = request.getSession();\n\n                String csrfTokenName = Const.CRSF_PREFIX + Encoder.getRandomMd5();\n                String csrfTokenValue = Encoder.getRandomMd5();\n                httpSession.setAttribute(csrfTokenName, csrfTokenValue);\n\n                Element csrfNode = new Element(\"input\");\n                csrfNode.setAttribute(\"type\", \"hidden\");\n                csrfNode.setAttribute(\"name\", csrfTokenName);\n                csrfNode.setAttribute(\"value\", csrfTokenValue);\n                element.addChild(csrfNode);\n\n            } catch (Exception e) {\n                throw new RuntimeException(\"Could not get a CSRF token for this session\", e);\n            }\n        }\n\n        //return element.cloneElementNodeWithNewName(element.getParent(),\"form\",true);\n    }\n\n\n    private void addHidden(Element form, String name, String value) {\n        Element hiddenElement = new Element(\"input\");\n        hiddenElement.setAttribute(\"type\", \"hidden\");\n        hiddenElement.setAttribute(\"name\", name);\n        hiddenElement.setAttribute(\"value\", value);\n\n        form.addChild(hiddenElement);\n    }\n\n    @Override\n    public int getPrecedence() {\n        return 1300;\n    }\n}\n\n\n\u4eca\u56de\u306fthymeleaf\u306e\u62e1\u5f35\u306b\u3064\u3044\u3066\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\nhttp://www.thymeleaf.org/doc/tutorials/2.1/extendingthymeleaf.html\n\nSpringBoot\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u3068\u3057\u3066thymeleaf\u3092\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n\n**1.PHP\u306a\u3069\u3067\u5229\u7528\u3057\u3066\u3044\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u6d41\u7528**\nPHP\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u7684\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u306e\u3067\u3001JSP\u3068\u9055\u3063\u3066\u66f8\u304d\u76f4\u3057\u306e\u624b\u9593\u304c\u3059\u3054\u304f\u7701\u3051\u307e\u3059\u3002\n\n**2.\u72ec\u81ea\u30bf\u30b0\u306e\u5b9a\u7fa9**\n`<p th:mytag=\"${tree}\"></p>`\n\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u72ec\u81ea\u30bf\u30b0\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\u5b9f\u88c5\u306f\u30a8\u30ec\u30e1\u30f3\u30c8\u3054\u3068\u304b\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u3054\u3068\u306a\u3069\u8272\u3005\u9078\u3079\u307e\u3059\u3002\n\u767b\u9332\u3057\u305f\u72ec\u81ea\u30bf\u30b0\u306b\u5bfe\u5fdc\u3059\u308b\u30af\u30e9\u30b9\u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u305d\u3053\u3067\u7de8\u96c6\u3092\u884c\u3046\u3068\u3044\u3063\u305f\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\nhttp://www.thymeleaf.org/apidocs/thymeleaf/2.1.2.RELEASE/org/thymeleaf/processor/AbstractProcessor.html\n\n\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8: AbstractAttrProcessor\n\u30b3\u30e1\u30f3\u30c8: AbstractCommentNodeProcessor\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: AbstractDocumentProcessor\n\u30a8\u30ec\u30e1\u30f3\u30c8: AbstractElementProcessor\n\u30c6\u30ad\u30b9\u30c8\u30ce\u30fc\u30c9: AbstractTextNodeProcessor\n\n\u4eca\u56de\u306f\u5168\u3066\u306e\u30d5\u30a9\u30fc\u30e0\u30bf\u30b0CSFR\u30c8\u30fc\u30af\u30f3\u691c\u8a3c\u7528\u306ehideen\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u81ea\u52d5\u3067\u8ffd\u52a0\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u53d7\u4fe1\u6642\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n**1.\u30d5\u30a9\u30fc\u30e0\u306e\u5b9f\u88c5**\n[\u30d5\u30a9\u30fc\u30e0\u30d7\u30ed\u30bb\u30c3\u30b5](https://github.com/MariMurotani/SpringDemo/blob/4_develop/src/main/java/demo/thymeleaf/FormProcessor.java)\n\u307e\u305a\u306f\u3001AbstractElementProcessor\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nthymeleaf\u3067\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3066View\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\u524d\u306b\u8272\u3005\u306a\u30d7\u30ed\u30bb\u30c3\u30b5\u30a8\u30f3\u30b8\u30f3\u3092\u547c\u3073\u51fa\u3057\u3057\u307e\u3059\u3002\u305d\u3053\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u3044\u304f\u3064\u3067\u3082\u767b\u9332\u3067\u304d\u308b\u306e\u3067\u30d5\u30a9\u30fc\u30e0\u51e6\u7406\u7528\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n[\u30c0\u30a4\u30a2\u30ec\u30af\u30c8](https://github.com/MariMurotani/SpringDemo/blob/4_develop/src/main/java/demo/thymeleaf/ThymeleafDialect.java)\nAbstractDialect\u3092\u5b9f\u88c5\u3057\u3066\u5b9f\u969b\u306b\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u767b\u9332\u3059\u308b\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\n[WebMvcConfigurerAdapter](https://github.com/MariMurotani/SpringDemo/blob/4_develop/src/main/java/demo/configs/ThymeleafConfig.java)\nWebMvcConfigurerAdapter\n\u3053\u3061\u3089\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\u3053\u306e\u969b\u306b\u3001\u5148\u307b\u3069\u5b9f\u88c5\u3057\u305f\u30c0\u30a4\u30a2\u30ec\u30af\u30c8\u306e\u547c\u3073\u51fa\u3057\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0a3\u3064\u306e\u8a2d\u5b9a\u3092\u6b63\u3057\u304f\u884c\u3046\u3068\u30d5\u30a9\u30fc\u30e0\u30bf\u30b0\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u4e00\u5f8b\u3067\u884c\u3048\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n**1.\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5b9f\u88c5**\n\u30d5\u30a9\u30fc\u30e0\u30bf\u30b0\u306b\u30c8\u30fc\u30af\u30f3\u7528\u306ehidden\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5165\u3063\u305f\u3089\u4eca\u5ea6\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306e\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u4eca\u56de\u306fHandlerInterceptor\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u4e2d\u3067\u884c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n[\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc](https://github.com/MariMurotani/SpringDemo/blob/4_develop/src/main/java/demo/controller/ControllerHandler.java)\n\n`@Override`\n`public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)`\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3068\u304a\u306a\u3058\u307f\u306eHttpServletRequest\u304c\u304f\u308b\u306e\u3067\u597d\u304d\u306a\u69d8\u306b\u8abf\u7406\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\nhttp://forum.thymeleaf.org/Support-for-RequestDataValueProcessor-td4024906.html\n\n\u52d5\u4f5c\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n[\u30bd\u30fc\u30b9](https://github.com/MariMurotani/SpringDemo/tree/4_develop)\n[\u8d77\u52d5](http://localhost:8080/parse/index)\n\n```java:ThymeleafConfig.java\n@Configuration\npublic class ThymeleafConfig extends WebMvcConfigurerAdapter {\n\t\t\n\t\t@Bean\n\t\tpublic ClassLoaderTemplateResolver templateResolver() {\n\t\t\tClassLoaderTemplateResolver classLoaderTemplateResolver = new ClassLoaderTemplateResolver();\n\t\t\tclassLoaderTemplateResolver.setCacheable(false);\n\t\t\tclassLoaderTemplateResolver.setPrefix(\"templates/\");\n\t\t\tclassLoaderTemplateResolver.setSuffix(\".html\");\n\t\t\tclassLoaderTemplateResolver.setTemplateMode(\"HTML5\");\n\t\t\tclassLoaderTemplateResolver.setCacheable(false);\n\t\t\treturn classLoaderTemplateResolver;\n\t\t}\n\t\n\t    \n\t    @Bean\n\t    public SpringTemplateEngine templateEngine() {\n\t        SpringTemplateEngine templateEngine = new SpringTemplateEngine();\n\t        templateEngine.setTemplateResolver(templateResolver());\n\t        templateEngine.addDialect(new ThymeleafDialect());\n\t        return templateEngine;\n\t    }\n\t    \n\t    @Bean\n\t    public ThymeleafViewResolver viewResolver() {\n\t        ThymeleafViewResolver viewResolver = new ThymeleafViewResolver();\n\t        viewResolver.setTemplateEngine(templateEngine());\n\t        \n\t        return viewResolver;\n\t    }\n\t    \n\t    @Override\n\t    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n\t        registry.addResourceHandler(\"/resources/**\").addResourceLocations(\"/WEB-INF/resources/\");\n\t    }\n}\n```\n\n```java:ThymeleafDialect.java\npublic class ThymeleafDialect extends AbstractDialect {\n\tpublic static final String PREFIX = \"\";\n\n\t\n\tpublic ThymeleafDialect() {\n\t\tsuper();\n\t\t// TODO Auto-generated constructor stub\n\t}\n\t\n\t@Override\n\tpublic String getPrefix() {\n\t\t// TODO Auto-generated method stub\n\t\treturn PREFIX;\n\t}\n\t\n\n\t// The processors.\n\t//\n\t@Override\n    public Set<IProcessor> getProcessors() {\n\t\tfinal Set<IProcessor> processors = new LinkedHashSet<IProcessor>();\n        processors.add(new demo.thymeleaf.FormProcessor());\n        \n        return new LinkedHashSet<IProcessor>(processors);\n        \n    }\n\t\n}\n```\n\n```java:FormProcessor.java\npublic class FormProcessor extends AbstractElementProcessor {\n\tstatic final String ELEMENT_NAME_FORM = \"form\";\n\t\n\tpublic FormProcessor() {\n\t\tsuper(ELEMENT_NAME_FORM);\n\t}\n\n\t@Override\n\tprotected ProcessorResult processElement(Arguments arguments,Element element) {\n\t\ttry{\n\t\t\taddCSRFHiddenFields(arguments, element);\n\t\t\tSystem.out.println(element.getNormalizedName());\n\t\t\treturn ProcessorResult.OK;\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e.getMessage());\n\t\t}\n\t\treturn null;\n\t}\n\t\n\t@Override\n\tpublic IProcessorMatcher<? extends Element> getMatcher() {\n\t\t// TODO Auto-generated method stub\n\t\treturn super.getMatcher();\n\t}\n\t\n\tprivate void addCSRFHiddenFields(Arguments arguments, Element element) {\n\t\tSystem.out.println(\"addExtraHiddenFields\");\n\t\t//element.getAttributeFromNormalizedName(\"form\");\n\t\telement.normalizeElementName(\"form\");\n\t\t\n\t\t\n\t\tif (!\"GET\".equalsIgnoreCase(element.getAttributeValueFromNormalizedName(\"method\"))) {\n            try {\n    \n            \tHttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();\n                HttpSession httpSession = request.getSession();\n                \n                String csrfTokenName = Const.CRSF_PREFIX + Encoder.getRandomMd5();\n            \tString csrfTokenValue = Encoder.getRandomMd5();\n            \thttpSession.setAttribute(csrfTokenName, csrfTokenValue);\n                \n            \tElement csrfNode = new Element(\"input\");\n                csrfNode.setAttribute(\"type\", \"hidden\");\n                csrfNode.setAttribute(\"name\", csrfTokenName);\n                csrfNode.setAttribute(\"value\", csrfTokenValue);\n                element.addChild(csrfNode);\n            \t\n            } catch (Exception e) {\n                throw new RuntimeException(\"Could not get a CSRF token for this session\", e);\n            }\n        }\n\t\t\n\t\t//return element.cloneElementNodeWithNewName(element.getParent(),\"form\",true);\n\t}\n\n\n\tprivate void addHidden(Element form, String name, String value) {\n\t\tElement hiddenElement = new Element(\"input\");\n\t\thiddenElement.setAttribute(\"type\", \"hidden\");\n\t\thiddenElement.setAttribute(\"name\", name);\n\t\thiddenElement.setAttribute(\"value\", value);\n\n\t\tform.addChild(hiddenElement);\n\t}\n\n\t@Override\n\tpublic int getPrecedence() {\n\t\treturn 1300;\n\t}\n}\n```\n\n", "tags": ["SpringBoot", "Java", "STS", "spring-boot"]}