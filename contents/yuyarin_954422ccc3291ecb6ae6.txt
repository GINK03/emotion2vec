{"context": " More than 1 year has passed since last update.Ruby\u3067Juniper\u30eb\u30fc\u30bf\u306eBGP\u72b6\u614b\u3092SNMP\u3067\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\n\nMIB\nMIB\u306f\u3053\u3061\u3089\u3002\nhttp://www.juniper.net/techpubs/en_US/junos10.3/topics/reference/mibs/mib-jnx-bgpmib2.txt\njnxBgpM2PeerState OBJECT-TYPE\n        SYNTAX     INTEGER {\n            idle(1),\n            connect(2),\n            active(3),\n            opensent(4),\n            openconfirm(5),\n            established(6)\n        }\n\n1.3.6.1.4.1.2636.5.1.1.2.1.1.1.2.0\u3067\u4e00\u89a7\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n\nCLI\u304b\u3089\n\u30eb\u30fc\u30bf\u306eCLI\u304b\u3089show snmp mib\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nrouter> show snmp mib walk jnxBgpM2PeerEntry\n\n\nOID\nIPv4\u306f\u3053\u3093\u306a\u611f\u3058\u30021\u306e\u3042\u3068\u306bIPv4\u30a2\u30c9\u30ec\u30b9\u304c\u30c9\u30c3\u30c8\u8868\u8a18\u3067\u7d9a\u304f\u3002\u524d\u304c\u81ea\u5206\u306e\u30a2\u30c9\u30ec\u30b9\u3001\u5f8c\u308d\u304cpeer\u306e\u30a2\u30c9\u30ec\u30b9\nSNMPv2-SMI::enterprises.2636.5.1.1.2.1.1.1.14.0.1.192.168.0.1.1.192.168.0.2\n\nIPv6\u306f\u3053\u3093\u306a\u611f\u3058\u30022\u306e\u3042\u3068\u306b\u306a\u306b\u3084\u3089\u305f\u304f\u3055\u3093\u306e\u6570\u5b57\u304c\u7d9a\u304f\u3002\u3053\u308c\u306fIPv6\u30a2\u30c9\u30ec\u30b9\u30928bit\u3054\u3068\u306b\u533a\u5207\u3063\u3066\u300110\u9032\u6570\u3067\u8868\u8a18\u3057\u305f\u3082\u306e\u30022001:db8::1\u306f32.1.13.184.0.0.0.0.0.0.0.0.0.0.0.1\u306b\u306a\u308b\u3002\nSNMPv2-SMI::enterprises.2636.5.1.1.2.1.1.1.14.0.2.32.1.13.184.0.0.0.0.0.0.0.0.0.0.0.1.2.32.1.13.184.0.0.0.0.0.0.0.0.0.0.0.1\n\n\nIP\u30a2\u30c9\u30ec\u30b9\u3092OID\u306b\u5909\u3048\u308b\nIPAddr\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u66f8\u3051\u308b\nclass IPAddr\n  def to_oid\n    if self.ipv6?\n      return self.to_string.delete(\":\").scan(/.{2}/).map{|h| h.hex}.join(\".\")\n    end\n    self.to_s\n  end\nend\n\n\nSNMP\u3067\u53d6\u5f97\u3059\u308b\nRuby SNMP http://snmplib.rubyforge.org/ \u3092\u4f7f\u3046\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3051\u308b\u3002\nprotocol_id = peer_address.ipv4? 1 : 2\noid = \"1.3.6.1.4.1.2636.5.1.1.2.1.1.1.2.0.#{protocol_id}.#{local_address.to_oid}.#{protocol_id}.#{peer_address.to_oid}\"\nbegin\n  snmp_manager = SNMP::Manager.new(:Host => host, :Community => community, :timeout => 1, :retries => 1)\n  r = snmp_manager.get_value(oid)\n  if r.to_s == \"noSuchInstance\"\n    # no peer\n  else\n    if r.to_i == 6\n      # established\n    else\n      # down\n    end\n  end\nrescue => ex\n  # SNMP error\nend\n\nSNMP::NoSuchInstance \u306e\u5224\u5b9a\u65b9\u6cd5\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001to_s\u3067\u6587\u5b57\u5217\u3068\u3057\u3066\u5224\u5b9a\u3057\u3066\u307e\u3059\u3002\n\nRuby\u3067Juniper\u30eb\u30fc\u30bf\u306eBGP\u72b6\u614b\u3092SNMP\u3067\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\n\n## MIB\n\nMIB\u306f\u3053\u3061\u3089\u3002\n\nhttp://www.juniper.net/techpubs/en_US/junos10.3/topics/reference/mibs/mib-jnx-bgpmib2.txt\n\n```\njnxBgpM2PeerState OBJECT-TYPE\n        SYNTAX     INTEGER {\n            idle(1),\n            connect(2),\n            active(3),\n            opensent(4),\n            openconfirm(5),\n            established(6)\n        }\n```\n\n```1.3.6.1.4.1.2636.5.1.1.2.1.1.1.2.0 ```\u3067\u4e00\u89a7\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n\n## CLI\u304b\u3089\n\n\u30eb\u30fc\u30bf\u306eCLI\u304b\u3089```show snmp mib```\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```\nrouter> show snmp mib walk jnxBgpM2PeerEntry\n```\n\n## OID\n\nIPv4\u306f\u3053\u3093\u306a\u611f\u3058\u30021\u306e\u3042\u3068\u306bIPv4\u30a2\u30c9\u30ec\u30b9\u304c\u30c9\u30c3\u30c8\u8868\u8a18\u3067\u7d9a\u304f\u3002\u524d\u304c\u81ea\u5206\u306e\u30a2\u30c9\u30ec\u30b9\u3001\u5f8c\u308d\u304cpeer\u306e\u30a2\u30c9\u30ec\u30b9\n\n```\nSNMPv2-SMI::enterprises.2636.5.1.1.2.1.1.1.14.0.1.192.168.0.1.1.192.168.0.2\n```\n\nIPv6\u306f\u3053\u3093\u306a\u611f\u3058\u30022\u306e\u3042\u3068\u306b\u306a\u306b\u3084\u3089\u305f\u304f\u3055\u3093\u306e\u6570\u5b57\u304c\u7d9a\u304f\u3002\u3053\u308c\u306fIPv6\u30a2\u30c9\u30ec\u30b9\u30928bit\u3054\u3068\u306b\u533a\u5207\u3063\u3066\u300110\u9032\u6570\u3067\u8868\u8a18\u3057\u305f\u3082\u306e\u3002```2001:db8::1```\u306f```32.1.13.184.0.0.0.0.0.0.0.0.0.0.0.1```\u306b\u306a\u308b\u3002\n\n```\nSNMPv2-SMI::enterprises.2636.5.1.1.2.1.1.1.14.0.2.32.1.13.184.0.0.0.0.0.0.0.0.0.0.0.1.2.32.1.13.184.0.0.0.0.0.0.0.0.0.0.0.1\n```\n\n# IP\u30a2\u30c9\u30ec\u30b9\u3092OID\u306b\u5909\u3048\u308b\n\nIPAddr\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u66f8\u3051\u308b\n\n```ruby\nclass IPAddr\n  def to_oid\n    if self.ipv6?\n      return self.to_string.delete(\":\").scan(/.{2}/).map{|h| h.hex}.join(\".\")\n    end\n    self.to_s\n  end\nend\n```\n\n## SNMP\u3067\u53d6\u5f97\u3059\u308b\n\nRuby SNMP http://snmplib.rubyforge.org/ \u3092\u4f7f\u3046\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3051\u308b\u3002\n\n```ruby\nprotocol_id = peer_address.ipv4? 1 : 2\noid = \"1.3.6.1.4.1.2636.5.1.1.2.1.1.1.2.0.#{protocol_id}.#{local_address.to_oid}.#{protocol_id}.#{peer_address.to_oid}\"\nbegin\n  snmp_manager = SNMP::Manager.new(:Host => host, :Community => community, :timeout => 1, :retries => 1)\n  r = snmp_manager.get_value(oid)\n  if r.to_s == \"noSuchInstance\"\n    # no peer\n  else\n    if r.to_i == 6\n      # established\n    else\n      # down\n    end\n  end\nrescue => ex\n  # SNMP error\nend\n```\n\n```SNMP::NoSuchInstance``` \u306e\u5224\u5b9a\u65b9\u6cd5\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001to_s\u3067\u6587\u5b57\u5217\u3068\u3057\u3066\u5224\u5b9a\u3057\u3066\u307e\u3059\u3002\n", "tags": ["juniper", "snmp", "Ruby"]}