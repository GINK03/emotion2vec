{"context": " More than 1 year has passed since last update.\uff12\u672c\u6307\u3092\u4f7f\u3063\u3066\u3001View\u306e\u56de\u8ee2\u3001\u62e1\u5927\u3092\u540c\u6642\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u30b9\u30bf\u30f3\u30d7\u30ab\u30e1\u30e9\u306a\u3069\u306b\u6d3b\u7528\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nUIPinchGestureRecognizer\u3068UIRotationGestureRecognizer\u3092\u4f7f\u7528\u3057\u3066\u3066\u30d4\u30f3\u30c1\u30a4\u30f3/\u30a2\u30a6\u30c8\u3082\u3057\u304f\u306f\u56de\u8ee2\u3092\u884c\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\u3001\u540c\u6642\u306b\u3053\u308c\u3089\u4e21\u65b9\u306e\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u3092\u8a8d\u8b58\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\n- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event;\n\u3092\u7528\u3044\u308b\u3053\u3068\u3067View\u306e\u56de\u8ee2\u3001\u62e1\u5927\u3092\u540c\u6642\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u3001\u5b9f\u88c5\u65b9\u6cd5\u3067\u3059\u3002\n\u307e\u305a\u3001UIView\u3092\u7d99\u627f\u3057\u305f\u5909\u5f62\u53ef\u80fd\u306aView\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nTransformableView.h\n#import <UIKit/UIKit.h>\n\n@interface TransformableView : UIView\n\n@property(nonatomic) CGFloat scale;\n@property(nonatomic) CGFloat angle;\n@property(nonatomic) BOOL isTransformable;\n\n@end\n\n\n\nTransformableView.m\n#import \"TransformableView.h\"\n\n@implementation TransformableView\n\n- (id)initWithFrame:(CGRect)frame\n{\n    self = [super initWithFrame:frame];\n    if (self) {\n        // Initialization code\n        _scale = 1.0;\n        _angle = 0.0;\n        _isTransformable = YES;\n    }\n    return self;\n}\n\n-(void)setScale:(CGFloat)scale{\n    if (!_isTransformable) {\n        return;\n    }\n    //Minimum scale\n    if (scale<0.5) {\n        scale = 0.5;\n    }\n    //Max scale\n    if (scale>2.0) {\n        scale = 2.0;\n    }\n    _scale = scale;\n    [self doTransform];\n}\n\n-(void)setAngle:(CGFloat)angle{\n    if (!_isTransformable) {\n        return;\n    }\n    _angle = angle;\n    [self doTransform];\n}\n\n-(void)doTransform{\n    CGAffineTransform pinchTransform = CGAffineTransformMakeScale(_scale, _scale);\n    CGAffineTransform rotationTransform = CGAffineTransformMakeRotation(_angle);\n    self.transform = CGAffineTransformConcat(pinchTransform, rotationTransform);\n}\n\n@end\n\n\n\u30b9\u30b1\u30fc\u30eb\u3068\u89d2\u5ea6\u306e\u30bb\u30c3\u30bf\u30fc\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u305d\u308c\u305e\u308c\u304b\u3089\u5909\u5f62\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u3053\u306eView\u3092\u914d\u7f6e\u3059\u308bView Controller\u306e\u4e2d\u306b\u3001\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u3057\u307e\u3059\u3002\n\nViewController.m\n#import \"ViewController.h\"\n#import \"TransformableView.h\"\n\n@interface ViewController (){\n    TransformableView *tView;\n}\n\n@end\n\n@implementation ViewController\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    // Do any additional setup after loading the view, typically from a nib.\n\n    //Multiple touch\n    self.view.multipleTouchEnabled = YES;\n\n    //New Transformable View\n    tView = [TransformableView new];\n    tView.backgroundColor = [UIColor redColor];\n    tView.isTransformable = YES;\n    tView.frame = CGRectMake(0, 0, 100, 100);\n    tView.center = CGPointMake(self.view.frame.size.width/2, self.view.frame.size.height/2);\n    [self.view addSubview:tView];\n}\n\n- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event {\n\n    if ([touches count] == 2) {\n\n        //Touches\n        NSArray *touchesArray = [touches allObjects];\n        UITouch *touch1 = touchesArray[0];\n        UITouch *touch2 = touchesArray[1];\n\n        //Point 1\n        CGPoint prePoint1 = [touch1 previousLocationInView:self.view];\n        CGPoint locationPoint1 = [touch1 locationInView:self.view];\n\n        //Point2\n        CGPoint prePoint2 = [touch2 previousLocationInView:self.view];\n        CGPoint locationPoint2 = [touch2 locationInView:self.view];\n\n        //Distance\n        CGFloat preDistance = sqrtf(powf(prePoint2.x-prePoint1.x, 2)+\n                                    powf(prePoint2.y-prePoint1.y, 2));\n        CGFloat locationDistance = sqrtf(powf(locationPoint2.x-locationPoint1.x, 2)+\n                                         powf(locationPoint2.y-locationPoint1.y, 2));\n\n        //Scale increment\n        tView.scale *= locationDistance/preDistance;\n\n        //Angle increment\n        CGFloat angleIncrement = angleBetweenLinesInRadians([touch1 previousLocationInView:self.view],\n                                                            [touch2 previousLocationInView:self.view],\n                                                            [touch1 locationInView:self.view],\n                                                            [touch2 locationInView:self.view]);\n        tView.angle += angleIncrement;\n    }\n}\n\nstatic inline CGFloat angleBetweenLinesInRadians(CGPoint line1Start, CGPoint line1End, CGPoint line2Start, CGPoint line2End) {\n    CGFloat a = line1End.x - line1Start.x;\n    CGFloat b = line1End.y - line1Start.y;\n    CGFloat c = line2End.x - line2Start.x;\n    CGFloat d = line2End.y - line2Start.y;\n\n    CGFloat line1Slope = (line1End.y - line1Start.y) / (line1End.x - line1Start.x);\n    CGFloat line2Slope = (line2End.y - line2Start.y) / (line2End.x - line2Start.x);\n\n    CGFloat degs = acosf(((a*c) + (b*d)) / ((sqrt(a*a + b*b)) * (sqrt(c*c + d*d))));\n\n    return (line2Slope > line1Slope) ? degs : -degs;\n}\n\n@end\n\n\n\uff12\u672c\u6307\u306e\u9593\u306e\u8ddd\u96e2\u306e\u5909\u5316\u7387\u304b\u3089\u3001View\u306e\u30b9\u30b1\u30fc\u30eb\u306e\u5909\u5316\u7387\u3092\u8a08\u7b97\u3057\u3001\n\uff12\u672c\u6307\u3092\u7d50\u3093\u3060\u76f4\u7dda\u306e\u50be\u304d\u306e\u5909\u5316\u304b\u3089\u3001View\u306e\u89d2\u5ea6\u306e\u5909\u5316\u7387\u3092\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\u50be\u304d\u306e\u8a08\u7b97\u65b9\u6cd5\u306b\u95a2\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u307e\u3057\u305f\u3002\nhttp://stackoverflow.com/questions/7863265/swipe-detection-in-any-angle\n\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u3001\u305c\u3072\u30b9\u30af\u30ea\u30fc\u30f3\u306b\uff12\u672c\u6307\u3092\u7f6e\u3044\u3066\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u306d\u3002\n\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u306e\u5834\u5408\u306f\u3001option\u3092\u62bc\u3057\u306a\u304c\u3089\u753b\u9762\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\uff12\u672c\u6307\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092GitHub\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u306d\u3002\nhttps://github.com/yukinaga/PinchRotationSample\n\uff12\u672c\u6307\u3092\u4f7f\u3063\u3066\u3001View\u306e\u56de\u8ee2\u3001\u62e1\u5927\u3092\u540c\u6642\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u30b9\u30bf\u30f3\u30d7\u30ab\u30e1\u30e9\u306a\u3069\u306b\u6d3b\u7528\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nUIPinchGestureRecognizer\u3068UIRotationGestureRecognizer\u3092\u4f7f\u7528\u3057\u3066\u3066\u30d4\u30f3\u30c1\u30a4\u30f3/\u30a2\u30a6\u30c8\u3082\u3057\u304f\u306f\u56de\u8ee2\u3092\u884c\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\u3001\u540c\u6642\u306b\u3053\u308c\u3089\u4e21\u65b9\u306e\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u3092\u8a8d\u8b58\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\n- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event;\n\u3092\u7528\u3044\u308b\u3053\u3068\u3067View\u306e\u56de\u8ee2\u3001\u62e1\u5927\u3092\u540c\u6642\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u3001\u5b9f\u88c5\u65b9\u6cd5\u3067\u3059\u3002\n\u307e\u305a\u3001UIView\u3092\u7d99\u627f\u3057\u305f\u5909\u5f62\u53ef\u80fd\u306aView\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```objc:TransformableView.h\n#import <UIKit/UIKit.h>\n\n@interface TransformableView : UIView\n\n@property(nonatomic) CGFloat scale;\n@property(nonatomic) CGFloat angle;\n@property(nonatomic) BOOL isTransformable;\n\n@end\n```\n\n```objc:TransformableView.m\n#import \"TransformableView.h\"\n\n@implementation TransformableView\n\n- (id)initWithFrame:(CGRect)frame\n{\n    self = [super initWithFrame:frame];\n    if (self) {\n        // Initialization code\n        _scale = 1.0;\n        _angle = 0.0;\n        _isTransformable = YES;\n    }\n    return self;\n}\n\n-(void)setScale:(CGFloat)scale{\n    if (!_isTransformable) {\n        return;\n    }\n    //Minimum scale\n    if (scale<0.5) {\n        scale = 0.5;\n    }\n    //Max scale\n    if (scale>2.0) {\n        scale = 2.0;\n    }\n    _scale = scale;\n    [self doTransform];\n}\n\n-(void)setAngle:(CGFloat)angle{\n    if (!_isTransformable) {\n        return;\n    }\n    _angle = angle;\n    [self doTransform];\n}\n\n-(void)doTransform{\n    CGAffineTransform pinchTransform = CGAffineTransformMakeScale(_scale, _scale);\n    CGAffineTransform rotationTransform = CGAffineTransformMakeRotation(_angle);\n    self.transform = CGAffineTransformConcat(pinchTransform, rotationTransform);\n}\n\n@end\n```\n\n\u30b9\u30b1\u30fc\u30eb\u3068\u89d2\u5ea6\u306e\u30bb\u30c3\u30bf\u30fc\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u305d\u308c\u305e\u308c\u304b\u3089\u5909\u5f62\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u3001\u3053\u306eView\u3092\u914d\u7f6e\u3059\u308bView Controller\u306e\u4e2d\u306b\u3001\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u3057\u307e\u3059\u3002\n\n```objc:ViewController.m\n#import \"ViewController.h\"\n#import \"TransformableView.h\"\n\n@interface ViewController (){\n    TransformableView *tView;\n}\n\n@end\n\n@implementation ViewController\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n\t// Do any additional setup after loading the view, typically from a nib.\n    \n    //Multiple touch\n    self.view.multipleTouchEnabled = YES;\n    \n    //New Transformable View\n    tView = [TransformableView new];\n    tView.backgroundColor = [UIColor redColor];\n    tView.isTransformable = YES;\n    tView.frame = CGRectMake(0, 0, 100, 100);\n    tView.center = CGPointMake(self.view.frame.size.width/2, self.view.frame.size.height/2);\n    [self.view addSubview:tView];\n}\n\n- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event {\n\n    if ([touches count] == 2) {\n        \n        //Touches\n        NSArray *touchesArray = [touches allObjects];\n        UITouch *touch1 = touchesArray[0];\n        UITouch *touch2 = touchesArray[1];\n        \n        //Point 1\n        CGPoint prePoint1 = [touch1 previousLocationInView:self.view];\n        CGPoint locationPoint1 = [touch1 locationInView:self.view];\n        \n        //Point2\n        CGPoint prePoint2 = [touch2 previousLocationInView:self.view];\n        CGPoint locationPoint2 = [touch2 locationInView:self.view];\n        \n        //Distance\n        CGFloat preDistance = sqrtf(powf(prePoint2.x-prePoint1.x, 2)+\n                                    powf(prePoint2.y-prePoint1.y, 2));\n        CGFloat locationDistance = sqrtf(powf(locationPoint2.x-locationPoint1.x, 2)+\n                                         powf(locationPoint2.y-locationPoint1.y, 2));\n        \n        //Scale increment\n        tView.scale *= locationDistance/preDistance;\n        \n        //Angle increment\n        CGFloat angleIncrement = angleBetweenLinesInRadians([touch1 previousLocationInView:self.view],\n                                                            [touch2 previousLocationInView:self.view],\n                                                            [touch1 locationInView:self.view],\n                                                            [touch2 locationInView:self.view]);\n        tView.angle += angleIncrement;\n    }\n}\n\nstatic inline CGFloat angleBetweenLinesInRadians(CGPoint line1Start, CGPoint line1End, CGPoint line2Start, CGPoint line2End) {\n    CGFloat a = line1End.x - line1Start.x;\n    CGFloat b = line1End.y - line1Start.y;\n    CGFloat c = line2End.x - line2Start.x;\n    CGFloat d = line2End.y - line2Start.y;\n    \n    CGFloat line1Slope = (line1End.y - line1Start.y) / (line1End.x - line1Start.x);\n    CGFloat line2Slope = (line2End.y - line2Start.y) / (line2End.x - line2Start.x);\n    \n    CGFloat degs = acosf(((a*c) + (b*d)) / ((sqrt(a*a + b*b)) * (sqrt(c*c + d*d))));\n    \n    return (line2Slope > line1Slope) ? degs : -degs;\n}\n\n@end\n```\n\n\uff12\u672c\u6307\u306e\u9593\u306e\u8ddd\u96e2\u306e\u5909\u5316\u7387\u304b\u3089\u3001View\u306e\u30b9\u30b1\u30fc\u30eb\u306e\u5909\u5316\u7387\u3092\u8a08\u7b97\u3057\u3001\n\uff12\u672c\u6307\u3092\u7d50\u3093\u3060\u76f4\u7dda\u306e\u50be\u304d\u306e\u5909\u5316\u304b\u3089\u3001View\u306e\u89d2\u5ea6\u306e\u5909\u5316\u7387\u3092\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\u50be\u304d\u306e\u8a08\u7b97\u65b9\u6cd5\u306b\u95a2\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u307e\u3057\u305f\u3002\nhttp://stackoverflow.com/questions/7863265/swipe-detection-in-any-angle\n\n\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u3001\u305c\u3072\u30b9\u30af\u30ea\u30fc\u30f3\u306b\uff12\u672c\u6307\u3092\u7f6e\u3044\u3066\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u306d\u3002\n\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u306e\u5834\u5408\u306f\u3001option\u3092\u62bc\u3057\u306a\u304c\u3089\u753b\u9762\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\uff12\u672c\u6307\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092GitHub\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u306d\u3002\nhttps://github.com/yukinaga/PinchRotationSample", "tags": ["Objective-C", "iOS", "Xcode", "UIView"]}