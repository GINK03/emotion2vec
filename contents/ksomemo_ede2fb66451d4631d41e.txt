{"context": "\ninstall_mecab_env.sh\n# \u7d50\u5c40janome\u3060\u3051\u3067\u306a\u304fMeCab\u3082\u8a66\u3057\u305f\n\n```bash:install_mecab_env.sh\n# https://github.com/neologd/mecab-ipadic-neologd/blob/master/README.ja.md\nbrew install mecab\nbrew install mecab-ipadic\ngit clone --depth 1 git@github.com:neologd/mecab-ipadic-neologd.git ~/mecab-ipadic-neologd\ncd ~/mecab-ipadic-neologd\n./bin/install-mecab-ipadic-neologd -n\n\n./bin/install-mecab-ipadic-neologd -h\nUsage: install-mecab-ipadic-NEologd [OPTIONS]\n  This script is the installer of mecab-ipadic-NEologd\n\nOptions:\n  -h, --help\n  -v, --version\n  -p, --prefix /PATH/TO/INSTALL/DIRECTORY\n     Set any directory path where you want to install\n  -y, --forceyes If you want to install regardless of the result of test\n  -u, --asuser   If you want to install to the user directory as an user\n  -n, --newest   If you want to update mecab-ipadic-NEologd\n\n# \u6b21\u56de\u304b\u3089\u306f\u3001 -y \u3092\u8ffd\u52a0\u3057\u3066\u5b9f\u884c\u3059\u308c\u3070\u3088\u3055\u305d\u3046\n\ncd -\npip install mecab-python3\n\n\n\nparse_to_node.py\nimport MeCab\n\n\n\"\"\"\n- \u6bce\u56dewhile\u66f8\u304f\u306e\u3081\u3093\u3069\u3046\u306a\u306e\u3067for\u3067\u4f7f\u3048\u308bgenerator\u3092\u4f5c\u3063\u305f\n- \u306a\u305c\u304bencode\u3067\u304d\u306a\u3044\u5024\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u65b9\u6cd5\u3092\u30b0\u30b0\u3063\u305f\n- http://www.trifields.jp/how-to-use-mecab-in-ubuntu-14-04-and-python-3-1196\n- neologd\u3092\u8a66\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3044\u305f\n\"\"\"\ndef parse_to_node(text, opt=None):\n    if opt is None:\n        opt = \"-Ochasen\"\n    mecab = MeCab.Tagger(opt)\n\n    # encode error\u5bfe\u7b56\n    mecab.parse(\"\")\n\n    node = mecab.parseToNode(text)\n    while node:\n        yield node\n        node = node.next\n    # https://www.python.org/dev/peps/pep-0479/\n    raise StopIteration()\n\n\n\nto_df.py\nimport pandas as pd\n\n\ntext = \"\u3059\u3082\u3082\u3082\u3082\u3082\u3082\u3082\u3082\u306e\u3046\u3061\"\n# \u5229\u7528\u3067\u304d\u305d\u3046\u306a\u5c5e\u6027\u3092\u63a2\u3057\u305f\nattrs = [\n    # 'bnext', 'enext', 'prev', 'next', 'this', \n    'alpha', 'beta', 'char_type', 'cost', 'feature', 'id', \n    'isbest', 'lcAttr', 'length', 'lpath', 'posid', \n    'prob', 'rcAttr', 'rlength', 'rpath', 'stat', 'surface', 'wcost'\n]\ngen = ({a: getattr(n, a) for a in dir(n) if a in attrs}  for n in parse_to_node(text))\nnodes = pd.DataFrame(gen)\n\n\n\nto_table.py\nimport tabulate\n\n\n\"\"\"\n- \u5f62\u614b\u7d20\u306e\u60c5\u5831\u3092\u4f7f\u3044\u3084\u3059\u304f\u3057\u305f\n- \u30ab\u30e9\u30e0\u304c\u591a\u3044 + pd.option\u3067\u8abf\u6574\u3059\u308b\u306e\u304c\u3081\u3093\u3069\u3046\u3060\u3063\u305f\u306e\u3067table\u306b\u3057\u305f\n- df.to_html + stringIO -> pypandoc(github markdown) \u3067\u306f\u5909\u63db\u6642\u306bhtml class\u304c\u4ed8\u52a0\u3055\u308c\u308b\u305b\u3044\u3067\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\n- tabulate(https://pypi.python.org/pypi/tabulate)\u3092\u305f\u307e\u306b\u898b\u308b\u306e\u3067\u3084\u3063\u3066\u307f\u305f + headers=\"keys\"\u304c\u4fbf\u5229\n\"\"\"\nfeatures = nodes.feature.str.split(\",\", expand=True)\nfeatures.columns = \"f0 f1 f2 f3 f4 f5 f6 f7 f8\".split()\nnodes = pd.concat([nodes.drop(\"feature\", axis=1), features], axis=1)\n\nprint(tabulate.tabulate(nodes, headers=\"keys\", tablefmt=\"pipe\"))\nnodes\n\n\n\n\n\n\nalpha\nbeta\nchar_type\ncost\nid\nisbest\nlcAttr\nlength\nlpath\nposid\nprob\nrcAttr\nrlength\nrpath\nstat\nsurface\nwcost\nf0\nf1\nf2\nf3\nf4\nf5\nf6\nf7\nf8\n\n\n\n\n0\n0\n0\n0\n0\n0\n1\n0\n0\n\n0\n0\n0\n0\n\n2\n\n0\nBOS/EOS\n*\n*\n*\n*\n*\n*\n*\n*\n\n\n1\n0\n0\n6\n7263\n9\n1\n1285\n9\n\n38\n0\n1285\n9\n\n0\n\u3059\u3082\u3082\n7546\n\u540d\u8a5e\n\u4e00\u822c\n*\n*\n*\n*\n\u3059\u3082\u3082\n\u30b9\u30e2\u30e2\n\u30b9\u30e2\u30e2\n\n\n2\n0\n0\n6\n7774\n18\n1\n262\n3\n\n16\n0\n262\n3\n\n0\n\u3082\n4669\n\u52a9\u8a5e\n\u4fc2\u52a9\u8a5e\n*\n*\n*\n*\n\u3082\n\u30e2\n\u30e2\n\n\n3\n0\n0\n6\n15010\n24\n1\n1285\n6\n\n38\n0\n1285\n6\n\n0\n\u3082\u3082\n7219\n\u540d\u8a5e\n\u4e00\u822c\n*\n*\n*\n*\n\u3082\u3082\n\u30e2\u30e2\n\u30e2\u30e2\n\n\n4\n0\n0\n6\n15521\n30\n1\n262\n3\n\n16\n0\n262\n3\n\n0\n\u3082\n4669\n\u52a9\u8a5e\n\u4fc2\u52a9\u8a5e\n*\n*\n*\n*\n\u3082\n\u30e2\n\u30e2\n\n\n5\n0\n0\n6\n22757\n36\n1\n1285\n6\n\n38\n0\n1285\n6\n\n0\n\u3082\u3082\n7219\n\u540d\u8a5e\n\u4e00\u822c\n*\n*\n*\n*\n\u3082\u3082\n\u30e2\u30e2\n\u30e2\u30e2\n\n\n6\n0\n0\n6\n23131\n46\n1\n368\n3\n\n24\n0\n368\n3\n\n0\n\u306e\n4816\n\u52a9\u8a5e\n\u9023\u4f53\u5316\n*\n*\n*\n*\n\u306e\n\u30ce\n\u30ce\n\n\n7\n0\n0\n6\n23729\n58\n1\n1313\n6\n\n66\n0\n1313\n6\n\n0\n\u3046\u3061\n5796\n\u540d\u8a5e\n\u975e\u81ea\u7acb\n\u526f\u8a5e\u53ef\u80fd\n*\n*\n*\n\u3046\u3061\n\u30a6\u30c1\n\u30a6\u30c1\n\n\n8\n0\n0\n0\n21245\n62\n1\n0\n0\n\n0\n0\n0\n0\n\n3\n\n0\nBOS/EOS\n*\n*\n*\n*\n*\n*\n*\n*\n\n\n\n\n```bash:install_mecab_env.sh\n# \u7d50\u5c40janome\u3060\u3051\u3067\u306a\u304fMeCab\u3082\u8a66\u3057\u305f\n\n```bash:install_mecab_env.sh\n# https://github.com/neologd/mecab-ipadic-neologd/blob/master/README.ja.md\nbrew install mecab\nbrew install mecab-ipadic\ngit clone --depth 1 git@github.com:neologd/mecab-ipadic-neologd.git ~/mecab-ipadic-neologd\ncd ~/mecab-ipadic-neologd\n./bin/install-mecab-ipadic-neologd -n\n\n./bin/install-mecab-ipadic-neologd -h\nUsage: install-mecab-ipadic-NEologd [OPTIONS]\n  This script is the installer of mecab-ipadic-NEologd\n\nOptions:\n  -h, --help\n  -v, --version\n  -p, --prefix /PATH/TO/INSTALL/DIRECTORY\n     Set any directory path where you want to install\n  -y, --forceyes If you want to install regardless of the result of test\n  -u, --asuser   If you want to install to the user directory as an user\n  -n, --newest   If you want to update mecab-ipadic-NEologd\n\n# \u6b21\u56de\u304b\u3089\u306f\u3001 -y \u3092\u8ffd\u52a0\u3057\u3066\u5b9f\u884c\u3059\u308c\u3070\u3088\u3055\u305d\u3046\n\ncd -\npip install mecab-python3\n```\n\n```py3:parse_to_node.py\nimport MeCab\n\n\n\"\"\"\n- \u6bce\u56dewhile\u66f8\u304f\u306e\u3081\u3093\u3069\u3046\u306a\u306e\u3067for\u3067\u4f7f\u3048\u308bgenerator\u3092\u4f5c\u3063\u305f\n- \u306a\u305c\u304bencode\u3067\u304d\u306a\u3044\u5024\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u65b9\u6cd5\u3092\u30b0\u30b0\u3063\u305f\n- http://www.trifields.jp/how-to-use-mecab-in-ubuntu-14-04-and-python-3-1196\n- neologd\u3092\u8a66\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3044\u305f\n\"\"\"\ndef parse_to_node(text, opt=None):\n    if opt is None:\n        opt = \"-Ochasen\"\n    mecab = MeCab.Tagger(opt)\n\n    # encode error\u5bfe\u7b56\n    mecab.parse(\"\")\n\n    node = mecab.parseToNode(text)\n    while node:\n        yield node\n        node = node.next\n    # https://www.python.org/dev/peps/pep-0479/\n    raise StopIteration()\n```\n\n```to_df.py\nimport pandas as pd\n\n\ntext = \"\u3059\u3082\u3082\u3082\u3082\u3082\u3082\u3082\u3082\u306e\u3046\u3061\"\n# \u5229\u7528\u3067\u304d\u305d\u3046\u306a\u5c5e\u6027\u3092\u63a2\u3057\u305f\nattrs = [\n    # 'bnext', 'enext', 'prev', 'next', 'this', \n    'alpha', 'beta', 'char_type', 'cost', 'feature', 'id', \n    'isbest', 'lcAttr', 'length', 'lpath', 'posid', \n    'prob', 'rcAttr', 'rlength', 'rpath', 'stat', 'surface', 'wcost'\n]\ngen = ({a: getattr(n, a) for a in dir(n) if a in attrs}  for n in parse_to_node(text))\nnodes = pd.DataFrame(gen)\n```\n\n```py3:to_table.py\nimport tabulate\n\n\n\"\"\"\n- \u5f62\u614b\u7d20\u306e\u60c5\u5831\u3092\u4f7f\u3044\u3084\u3059\u304f\u3057\u305f\n- \u30ab\u30e9\u30e0\u304c\u591a\u3044 + pd.option\u3067\u8abf\u6574\u3059\u308b\u306e\u304c\u3081\u3093\u3069\u3046\u3060\u3063\u305f\u306e\u3067table\u306b\u3057\u305f\n- df.to_html + stringIO -> pypandoc(github markdown) \u3067\u306f\u5909\u63db\u6642\u306bhtml class\u304c\u4ed8\u52a0\u3055\u308c\u308b\u305b\u3044\u3067\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\n- tabulate(https://pypi.python.org/pypi/tabulate)\u3092\u305f\u307e\u306b\u898b\u308b\u306e\u3067\u3084\u3063\u3066\u307f\u305f + headers=\"keys\"\u304c\u4fbf\u5229\n\"\"\"\nfeatures = nodes.feature.str.split(\",\", expand=True)\nfeatures.columns = \"f0 f1 f2 f3 f4 f5 f6 f7 f8\".split()\nnodes = pd.concat([nodes.drop(\"feature\", axis=1), features], axis=1)\n\nprint(tabulate.tabulate(nodes, headers=\"keys\", tablefmt=\"pipe\"))\nnodes\n```\n\n|    |   alpha |   beta |   char_type |   cost |   id |   isbest |   lcAttr |   length |   lpath |   posid |   prob |   rcAttr |   rlength |   rpath |   stat | surface   |   wcost | f0      | f1   | f2   | f3   | f4   | f5   | f6   | f7   | f8   |\n|---:|--------:|-------:|------------:|-------:|-----:|---------:|---------:|---------:|--------:|--------:|-------:|---------:|----------:|--------:|-------:|:----------|--------:|:--------|:-----|:-----|:-----|:-----|:-----|:-----|:-----|:-----|\n|  0 |       0 |      0 |           0 |      0 |    0 |        1 |        0 |        0 |         |       0 |      0 |        0 |         0 |         |      2 |           |       0 | BOS/EOS | *    | *    | *    | *    | *    | *    | *    | *    |\n|  1 |       0 |      0 |           6 |   7263 |    9 |        1 |     1285 |        9 |         |      38 |      0 |     1285 |         9 |         |      0 | \u3059\u3082\u3082       |    7546 | \u540d\u8a5e      | \u4e00\u822c   | *    | *    | *    | *    | \u3059\u3082\u3082  | \u30b9\u30e2\u30e2  | \u30b9\u30e2\u30e2  |\n|  2 |       0 |      0 |           6 |   7774 |   18 |        1 |      262 |        3 |         |      16 |      0 |      262 |         3 |         |      0 | \u3082         |    4669 | \u52a9\u8a5e      | \u4fc2\u52a9\u8a5e  | *    | *    | *    | *    | \u3082    | \u30e2    | \u30e2    |\n|  3 |       0 |      0 |           6 |  15010 |   24 |        1 |     1285 |        6 |         |      38 |      0 |     1285 |         6 |         |      0 | \u3082\u3082        |    7219 | \u540d\u8a5e      | \u4e00\u822c   | *    | *    | *    | *    | \u3082\u3082   | \u30e2\u30e2   | \u30e2\u30e2   |\n|  4 |       0 |      0 |           6 |  15521 |   30 |        1 |      262 |        3 |         |      16 |      0 |      262 |         3 |         |      0 | \u3082         |    4669 | \u52a9\u8a5e      | \u4fc2\u52a9\u8a5e  | *    | *    | *    | *    | \u3082    | \u30e2    | \u30e2    |\n|  5 |       0 |      0 |           6 |  22757 |   36 |        1 |     1285 |        6 |         |      38 |      0 |     1285 |         6 |         |      0 | \u3082\u3082        |    7219 | \u540d\u8a5e      | \u4e00\u822c   | *    | *    | *    | *    | \u3082\u3082   | \u30e2\u30e2   | \u30e2\u30e2   |\n|  6 |       0 |      0 |           6 |  23131 |   46 |        1 |      368 |        3 |         |      24 |      0 |      368 |         3 |         |      0 | \u306e         |    4816 | \u52a9\u8a5e      | \u9023\u4f53\u5316  | *    | *    | *    | *    | \u306e    | \u30ce    | \u30ce    |\n|  7 |       0 |      0 |           6 |  23729 |   58 |        1 |     1313 |        6 |         |      66 |      0 |     1313 |         6 |         |      0 | \u3046\u3061        |    5796 | \u540d\u8a5e      | \u975e\u81ea\u7acb  | \u526f\u8a5e\u53ef\u80fd | *    | *    | *    | \u3046\u3061   | \u30a6\u30c1   | \u30a6\u30c1   |\n|  8 |       0 |      0 |           0 |  21245 |   62 |        1 |        0 |        0 |         |       0 |      0 |        0 |         0 |         |      3 |           |       0 | BOS/EOS | *    | *    | *    | *    | *    | *    | *    | *    |\n", "tags": ["mecab", "memo"]}