{"context": " More than 1 year has passed since last update.\u7b2c\u4e8c\u56de \u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\u306e\u554f\u984c\u3092Dart\u3067\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u554f\u984c\u306f\u3053\u3061\u3089 http://nabetani.sakura.ne.jp/hena/ord2/\nimport \"dart:math\" show pow, log;\n\nmain () {\n  test(\"ff-2f-23-f3-77-7f-3b\", \"1f-03-00-1c-0d-0f-06\");\n  test(\"01\", \"00\");\n  test(\"00\", \"00\");\n  test(\"7a-4e\", \"0c-02\");\n  test(\"56-b6\", \"08-14\");\n  test(\"12-12-12\", \"00-00-00\");\n  test(\"de-ff-7b\", \"0a-0f-05\");\n  test(\"95-be-d0\", \"05-1e-20\");\n  test(\"7c-b0-bb\", \"1c-20-2b\");\n  test(\"7a-b6-31-6a\", \"3a-56-11-2a\");\n  test(\"32-0e-23-82\", \"18-06-11-40\");\n  test(\"ff-7f-bf-df-ef\", \"0f-07-0b-0d-0e\");\n  test(\"75-df-dc-6e-42\", \"35-5f-5c-2e-02\");\n  test(\"62-51-ef-c7-f8\", \"22-11-6f-47-78\");\n  test(\"0c-47-8e-dd-5d-17\", \"04-23-46-6d-2d-0b\");\n  test(\"aa-58-5b-6d-9f-1f\", \"52-28-2b-35-4f-0f\");\n  test(\"ff-55-d5-75-5d-57\", \"0f-00-08-04-02-01\");\n  test(\"fe-fd-fb-f7-ef-df-bf\", \"7e-7d-7b-77-6f-5f-3f\");\n  test(\"fd-fb-f7-ef-df-bf-7f\", \"7e-7d-7b-77-6f-5f-3f\");\n  test(\"d9-15-b5-d7-1b-9f-de\", \"69-05-55-67-0b-4f-6e\");\n  test(\"38-15-fd-50-10-96-ba\", \"18-05-7d-20-00-46-5a\");\n  test(\"fe-fd-fb-f7-ef-df-bf-7f\", \"fe-fd-fb-f7-ef-df-bf-7f\");\n  print(\"ok\");\n}\n\ntest(String input, String expect) {\n  assert(tetris(input) == expect);\n}\n\nString tetris(String input) {\n  Iterable<int> fields = input.split(\"-\")\n    .map((hex) => int.parse(hex, radix: 16));\n\n  List<int> deleteLine = new Iterable.generate(8, (x) => pow(2, 7 - x))\n    .where((x) => fields.every((f) => (f & x) != 0)).toList();\n\n  return fields.map((int field) {\n    for(int line in deleteLine) {\n      int lowmask = line - 1;\n      int highmask = (~lowmask) - line;\n      field = (field & lowmask) + ((field & highmask) >> 1);\n    }\n    return \"0${field.toRadixString(16)}\".slice(-2);\n  }).join(\"-\");\n}\n\n\u6587\u5b57\u5217\u306epadding\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u307b\u3057\u3044\u306a\u3041\u3002\n\u7b2c\u4e8c\u56de \u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\u306e\u554f\u984c\u3092Dart\u3067\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u554f\u984c\u306f\u3053\u3061\u3089 http://nabetani.sakura.ne.jp/hena/ord2/\n\n```dart\nimport \"dart:math\" show pow, log;\n\nmain () {\n  test(\"ff-2f-23-f3-77-7f-3b\", \"1f-03-00-1c-0d-0f-06\");\n  test(\"01\", \"00\");\n  test(\"00\", \"00\");\n  test(\"7a-4e\", \"0c-02\");\n  test(\"56-b6\", \"08-14\");\n  test(\"12-12-12\", \"00-00-00\");\n  test(\"de-ff-7b\", \"0a-0f-05\");\n  test(\"95-be-d0\", \"05-1e-20\");\n  test(\"7c-b0-bb\", \"1c-20-2b\");\n  test(\"7a-b6-31-6a\", \"3a-56-11-2a\");\n  test(\"32-0e-23-82\", \"18-06-11-40\");\n  test(\"ff-7f-bf-df-ef\", \"0f-07-0b-0d-0e\");\n  test(\"75-df-dc-6e-42\", \"35-5f-5c-2e-02\");\n  test(\"62-51-ef-c7-f8\", \"22-11-6f-47-78\");\n  test(\"0c-47-8e-dd-5d-17\", \"04-23-46-6d-2d-0b\");\n  test(\"aa-58-5b-6d-9f-1f\", \"52-28-2b-35-4f-0f\");\n  test(\"ff-55-d5-75-5d-57\", \"0f-00-08-04-02-01\");\n  test(\"fe-fd-fb-f7-ef-df-bf\", \"7e-7d-7b-77-6f-5f-3f\");\n  test(\"fd-fb-f7-ef-df-bf-7f\", \"7e-7d-7b-77-6f-5f-3f\");\n  test(\"d9-15-b5-d7-1b-9f-de\", \"69-05-55-67-0b-4f-6e\");\n  test(\"38-15-fd-50-10-96-ba\", \"18-05-7d-20-00-46-5a\");\n  test(\"fe-fd-fb-f7-ef-df-bf-7f\", \"fe-fd-fb-f7-ef-df-bf-7f\");\n  print(\"ok\");\n}\n\ntest(String input, String expect) {\n  assert(tetris(input) == expect);\n}\n\nString tetris(String input) {\n  Iterable<int> fields = input.split(\"-\")\n    .map((hex) => int.parse(hex, radix: 16));\n\n  List<int> deleteLine = new Iterable.generate(8, (x) => pow(2, 7 - x))\n    .where((x) => fields.every((f) => (f & x) != 0)).toList();\n\n  return fields.map((int field) {\n    for(int line in deleteLine) {\n      int lowmask = line - 1;\n      int highmask = (~lowmask) - line;\n      field = (field & lowmask) + ((field & highmask) >> 1);\n    }\n    return \"0${field.toRadixString(16)}\".slice(-2);\n  }).join(\"-\");\n}\n```\n\n\u6587\u5b57\u5217\u306epadding\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u307b\u3057\u3044\u306a\u3041\u3002", "tags": ["Dart", "\u3069\u3046\u66f8\u304f"]}