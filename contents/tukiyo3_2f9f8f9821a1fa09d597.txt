{"context": " More than 1 year has passed since last update.\n\n\u53c2\u8003\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3067\u5404\u7a2e\u8a00\u8a9e\u3092\u30d9\u30f3\u30c1\u30de\u30fc\u30af - satosystems\u306e\u65e5\u8a18\n[\u30c6\u30af\u30cb\u30ab\u30eb\u30d6\u30ed\u30b0]WEB\u958b\u767a\u8a00\u8a9e\u306e\u6bd4\u8f03\u3068\u9078\u5b9a\uff5c\u7b2c2\u5f3e \u2013 geechs\uff08\u30ae\u30fc\u30af\u30b9\uff09\n\n\n\u8a08\u6e2c\n\nUbuntu 16.06\u3067\u78ba\u8a8d\nCPU: Core i3-4130T@2.90GHz\n\n\n\n\u8a08\u6e2c\nsh -c \"TIME=%U time \u30b3\u30de\u30f3\u30c9\"\n\n\n\n\u7d50\u679c\n\n\n\nlang\ntime(s)\n\n\n\n\nC (gcc 5.3.1) -O3\n0.46\n\n\nC (gcc 5.3.1) -O2\n0.48\n\n\nC (gcc 5.3.1)\n0.78\n\n\ngo 1.5.1(build)\n0.78\n\n\ngo 1.5.1\n1.09\n\n\ncrystal 0.10.2(build)\n1.36\n\n\ncrystal 0.10.2\n1.46\n\n\nNode.js 4.2.4\n1.69\n\n\n\n\u8d85\u3048\u3089\u308c\u306a\u3044\u58c1\n\n\n\nlang\ntime(s)\n\n\n\n\nphp 7.0.2\n15.14\n\n\nruby 2.2.3\n16.07\n\n\npython 2.7\n32.89\n\n\npython 3.5\n35.52\n\n\nphp 5.6.16\n39.70\n\n\ngawk 4.1.3\n43.64\n\n\n\nRaspberryPi2\u306epython2.7\u3060\u30686m26.196s\u304b\u304b\u308a\u307e\u3057\u305f\u3002\n\n\n\u30bd\u30fc\u30b9\n\nC\n\nfib.c\n#include <stdio.h>\nint fib(int n)\n{\n    if (n <= 1) {\n        return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nint main()\n{\n    printf(\"%d\\n\", fib(40));\n    return 0;\n}\n\n\n\nGo\n\nfib.go\nfib.go \npackage main\n\nimport \"fmt\"\n\nfunc fib(n uint) uint {\n    if n <= 1 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\nfunc main() {\n    fmt.Println(fib(40))\n}\n\n\n\nRuby, Crystal\n\nfib.rb\ndef fib(n)\n  return n if n <= 1\n  fib(n - 1) + fib(n - 2)\nend\n\nputs fib(40)\n\n\n\nPython2,3\n\nfib.py\ndef fib(n):\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\nprint(fib(40))\n\n\n\nphp\n\nfib.php\n<?php\nfunction fib($n) {\n  if ($n <= 1) {\n     return $n;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\nprint fib(40);\n\n\n\nawk\n\nfib.awk\nBEGIN {\n    printf \"%d\\n\", fib(40)\n}\n\nfunction fib(n) {\n    if (n <= 1) return n\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n## \u53c2\u8003\n\n* [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3067\u5404\u7a2e\u8a00\u8a9e\u3092\u30d9\u30f3\u30c1\u30de\u30fc\u30af - satosystems\u306e\u65e5\u8a18](http://d.hatena.ne.jp/satosystems/20121228/1356655565)\n* [[\u30c6\u30af\u30cb\u30ab\u30eb\u30d6\u30ed\u30b0]WEB\u958b\u767a\u8a00\u8a9e\u306e\u6bd4\u8f03\u3068\u9078\u5b9a\uff5c\u7b2c2\u5f3e \u2013 geechs\uff08\u30ae\u30fc\u30af\u30b9\uff09](http://geechs.com/20140402/)\n\n## \u8a08\u6e2c\n\n* Ubuntu 16.06\u3067\u78ba\u8a8d\n* CPU: Core i3-4130T@2.90GHz\n\n```bash:\u8a08\u6e2c\nsh -c \"TIME=%U time \u30b3\u30de\u30f3\u30c9\"\n```\n\n## \u7d50\u679c\n\n| lang | time(s) |\n|------|------|\n| C (gcc 5.3.1) -O3 | 0.46 |\n| C (gcc 5.3.1) -O2 | 0.48 |\n| C (gcc 5.3.1) | 0.78 | |\n| go 1.5.1(build) | 0.78 |\n| go 1.5.1 | 1.09 |\n| crystal 0.10.2(build) | 1.36 |\n| crystal 0.10.2| 1.46 |\n| Node.js 4.2.4 | 1.69 |\n\n\u8d85\u3048\u3089\u308c\u306a\u3044\u58c1\n\n| lang | time(s) |\n|------|------|\n| php 7.0.2 | 15.14 |\n| ruby 2.2.3 | 16.07 |\n| python 2.7 | 32.89 |\n| python 3.5 | 35.52 |\n| php 5.6.16 | 39.70 |\n| gawk 4.1.3 | 43.64 |\n\nRaspberryPi2\u306epython2.7\u3060\u3068`6m26.196s`\u304b\u304b\u308a\u307e\u3057\u305f\u3002\n\n----\n\n# \u30bd\u30fc\u30b9\n\n## C\n\n```c:fib.c\n#include <stdio.h>\nint fib(int n)\n{\n    if (n <= 1) {\n        return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nint main()\n{\n    printf(\"%d\\n\", fib(40));\n    return 0;\n}\n```\n\n## Go\n\n```go:fib.go\nfib.go \npackage main\n\nimport \"fmt\"\n\nfunc fib(n uint) uint {\n    if n <= 1 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\nfunc main() {\n    fmt.Println(fib(40))\n}\n```\n\n## Ruby, Crystal\n\n```rb:fib.rb\ndef fib(n)\n  return n if n <= 1\n  fib(n - 1) + fib(n - 2)\nend\n\nputs fib(40)\n```\n\n## Python2,3\n\n```py:fib.py\ndef fib(n):\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\nprint(fib(40))\n```\n\n## php\n\n```php:fib.php\n<?php\nfunction fib($n) {\n  if ($n <= 1) {\n     return $n;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\nprint fib(40);\n```\n\n## awk\n\n```awk:fib.awk\nBEGIN {\n    printf \"%d\\n\", fib(40)\n}\n\nfunction fib(n) {\n    if (n <= 1) return n\n    return fib(n - 1) + fib(n - 2)\n}\n```\n", "tags": ["benchmark"]}