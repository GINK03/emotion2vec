{"context": "\n\n\u306f\u3058\u3081\u306b\nSiv3D \u3092\u4f7f\u3046\u3068\u3001C++ \u3067\u30b2\u30fc\u30e0\u3084\u30c4\u30fc\u30eb\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Siv3D \u306e\u4fbf\u5229\u306a\u30af\u30e9\u30b9\u7fa4\u3092\u6d3b\u7528\u3057\u3066\u3001\u30c9\u30c3\u30c8\u7d75\u30a8\u30c7\u30a3\u30bf\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u4f5c\u6210\u3059\u308b\u30c9\u30c3\u30c8\u7d75\u30a8\u30c7\u30a3\u30bf\u3067\u306f\u3001\u3053\u3093\u306a\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30c9\u30c3\u30c8\u7d75\u3092\u8868\u793a\u3059\u308b\n\u30c9\u30c3\u30c8\u7d75\u306e\u30b0\u30ea\u30c3\u30c9\u3092\u8868\u793a\u3059\u308b\n\u30af\u30ea\u30c3\u30af\u3057\u305f\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u3048\u308b\n\u30c9\u30c3\u30c8\u7d75\u3092\u4fdd\u5b58\u3059\u308b\n\u30d1\u30ec\u30c3\u30c8\u304b\u3089\u8272\u3092\u9078\u3076\n\n\n\u30c9\u30c3\u30c8\u7d75\u3092\u8868\u793a\u3057\u3088\u3046\u3001\u305d\u306e\u524d\u306b\n\u307e\u305a\u6700\u521d\u306b\u3001\u30a8\u30c7\u30a3\u30bf\u306e\u5916\u89b3\u3092\u5927\u307e\u304b\u306b\u6c7a\u3081\u307e\u3059\u3002\u5e45 16 \u00d7 \u9ad8\u3055 16 \u306e\u30c9\u30c3\u30c8\u7d75\u3092\u30011 \u30c9\u30c3\u30c8\u3042\u305f\u308a 32 \u30d4\u30af\u30bb\u30eb\u306e\u30b5\u30a4\u30ba\u306b\u62e1\u5927\u3057\u3066\u8868\u793a\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u3042\u3068\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5927\u304d\u3055\u3001\u80cc\u666f\u8272\u3092\u81ea\u5206\u597d\u307f\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n \u30a6\u30a3\u30f3\u30c9\u30a6\u3068\u80cc\u666f\n\nMain.cpp\n#include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(640, 530);\n\n    Graphics::SetBackground(Palette::Peachpuff);\n\n    // 1\u30de\u30b9\u306e\u5927\u304d\u3055\n    const int GridSize = 32;\n\n    // \u6a2a\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int W = 16;\n\n    // \u7e26\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int H = 16;\n\n    while (System::Update())\n    {\n    }\n}\n\n\n\n\u30c9\u30c3\u30c8\u7d75\u3092\u8868\u793a\u3057\u3088\u3046\nSiv3D \u306b\u306f\u3001\u753b\u50cf\u3092\u7de8\u96c6\u3059\u308b\u305f\u3081\u306e Image \u30af\u30e9\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u306f\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30c9\u30c3\u30c8\u7d75\u3092\u7de8\u96c6\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n \u753b\u50cf\u7de8\u96c6\n\u5e45 16 \u00d7 \u9ad8\u3055 16 \u3067\u3001\u4e2d\u8eab\u304c\u771f\u3063\u767d\u306e\u753b\u50cf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n    Image image(W, H, Palette::White);\n\n\u305f\u3060\u3001Image \u30af\u30e9\u30b9\u306f\u753b\u50cf\u306e\u7de8\u96c6\u306f\u3067\u304d\u3066\u3082\u8868\u793a\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u306b\u306f Texture \u30af\u30e9\u30b9\u304b\u3001\u307e\u305f\u306f\u63cf\u304d\u63db\u3048\u304c\u53ef\u80fd\u306a DynamicTexture \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u983b\u7e41\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f8\u304d\u63db\u3048\u308b\u4e8b\u306b\u306a\u308a\u305d\u3046\u306e\u3067\u3001 DynamicTexture \u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f \uff0f \u30b9\u30b1\u30c3\u30c1\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u65e2\u5b58\u306e\u753b\u50cf\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n    DynamicTexture texture(image);\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8868\u793a\u306b\u306f Texture::draw() \u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u4eca\u56de\u306f\u30c9\u30c3\u30c8\u7d75\u3092 GridSize \u500d\u306b\u62e1\u5927\u3057\u3066\u8868\u793a\u3059\u308b\u306e\u3067\u3001draw() \u306e\u524d\u306b Texture::scale() \u95a2\u6570\u3067\u62e1\u5927\u3057\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u5de6\u304b\u3089 10px\u3001\u4e0a\u304b\u3089 10px \u306e\u4f4d\u7f6e\u306b\u3001\u62e1\u5927\u3055\u308c\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n    texture.scale(GridSize).draw(10, 10);\n\n \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u62e1\u5927\u8868\u793a\u3059\u308b\u3068\u3001\u307c\u3084\u3051\u305f\u611f\u3058\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u304f\u3063\u304d\u308a\u3055\u305b\u305f\u3044\u6642\u306f\u3001\u30b5\u30f3\u30d7\u30e9\u30fc\u30b9\u30c6\u30fc\u30c8\u306e\u5909\u66f4 \u3092\u3057\u307e\u3059\u3002\n    Graphics2D::SetSamplerState(SamplerState::WrapPoint);\n\n\u3053\u3053\u307e\u3067\u3092\u307e\u3068\u3081\u308b\u3068\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u771f\u3063\u767d\u306a\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u305f\u3067\u3057\u3087\u3046\u304b\u3002Palette::White \u306e\u3068\u3053\u308d\u3092\u7de8\u96c6\u3057\u3066\u3001\u753b\u50cf\u306e\u8272\u304c\u5909\u308f\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n#include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(640, 530);\n\n    Graphics::SetBackground(Palette::Peachpuff);\n\n    Graphics2D::SetSamplerState(SamplerState::WrapPoint);\n\n    // 1\u30de\u30b9\u306e\u5927\u304d\u3055\n    const int GridSize = 32;\n\n    // \u6a2a\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int W = 16;\n\n    // \u7e26\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int H = 16;\n\n    // \u30c9\u30c3\u30c8\u7d75\n    Image image(W, H, Palette::White);\n\n    // \u30c9\u30c3\u30c8\u7d75\u8868\u793a\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\n    DynamicTexture texture(image);\n\n    while (System::Update())\n    {\n        // \u30c9\u30c3\u30c8\u7d75\u3092\u63cf\u753b\n        texture.scale(GridSize).draw(10, 10);\n    }\n}\n\n\n\n\u30b0\u30ea\u30c3\u30c9\u3092\u8868\u793a\u3057\u3088\u3046\n\u6b21\u306b\u3001\u30c9\u30c3\u30c8\u7d75\u30a8\u30c7\u30a3\u30bf\u3089\u3057\u304f\u30b0\u30ea\u30c3\u30c9\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5927\u304d\u3055\u304c GridSize \u306e\u77e9\u5f62\uff08Rect = Rectangle \u30af\u30e9\u30b9\uff09\u3092\u6577\u304d\u8a70\u3081\u308c\u3070\u3088\u3055\u305d\u3046\u3067\u3059\u3002\nRectangle::drawFrame() \u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001\u7070\u8272\u306e\u67a0\u3092\u63cf\u3044\u3066\u3044\u307e\u3059\u3002\n \u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f\n    for (int i : step(H))\n    {\n        for (int j : step(W))\n        {\n            // \u30b0\u30ea\u30c3\u30c9\u3092\u63cf\u753b\n            Rect dot(10 + j*GridSize, 10 + i*GridSize, GridSize);\n            dot.drawFrame(1.0, 1.0, Palette::Gray);\n        }\n    }\n\n\n\n\u30af\u30ea\u30c3\u30af\u3057\u305f\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u3048\u3066\u307f\u3088\u3046\nRectangle \u306e\u3088\u3046\u306a\u56f3\u5f62\u306e\u30af\u30e9\u30b9\u306b\u306f\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u77e5\u308b\u305f\u3081\u306e\u30d7\u30ed\u30d1\u30c6\u30a3 Rectangle::leftClicked\u3001Rectangle::rightClicked \u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n \u56f3\u5f62\u3068\u30af\u30ea\u30c3\u30af\n\u30af\u30ea\u30c3\u30af\u306e\u5224\u5b9a\u306b\u306f\u3001\u30b0\u30ea\u30c3\u30c9\u8868\u793a\u306b\u4f7f\u3063\u305f Rect \u3092\u6d41\u7528\u3059\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30c9\u30c3\u30c8\u3092\u9ed2\u306b\u3001\u53f3\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30c9\u30c3\u30c8\u3092\u767d\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\u3068\u304d\u306f\u3001Image::operator[] \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n \u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u306b\u8272\u3092\u66f8\u304d\u8fbc\u3080\n \u753b\u50cf\u3092\u7de8\u96c6\u3057\u305f\u3042\u3068\u306f\u3001\u5fd8\u308c\u305a\u306b\u8868\u793a\u7528\u306e texture \u5909\u6570\u3092\u63cf\u304d\u63db\u3048\u307e\u3057\u3087\u3046\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u753b\u50cf\u3092\u63cf\u304d\u8fbc\u3080\u306b\u306f\u3001DynamicTexture::fill() \u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n    for (int i : step(H))\n    {\n        for (int j : step(W))\n        {\n            // \u30b0\u30ea\u30c3\u30c9\u3092\u63cf\u753b\n            Rect dot(10 + j*GridSize, 10 + i*GridSize, GridSize);\n            dot.drawFrame(1.0, 1.0, Palette::Gray);\n\n            // \u30c9\u30c3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\n            if (dot.leftClicked)\n            {\n                image[i][j] = Palette::Black;\n                texture.fill(image);\n            }\n            else if (dot.rightClicked)\n            {\n                image[i][j] = Palette::White;\n                texture.fill(image);\n            }\n        }\n    }\n\n\n\n\u30c9\u30c3\u30c8\u7d75\u3092\u4fdd\u5b58\u3057\u3066\u307f\u3088\u3046\n\u3067\u306f\u3053\u3053\u3067\u753b\u50cf\u3092\u4fdd\u5b58\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u300c\u4fdd\u5b58\u300d\u30dc\u30bf\u30f3\u3092\u8868\u793a\u3057\u3066\u304a\u3044\u3066\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u300c\u540d\u524d\u3092\u3064\u3051\u3066\u4fdd\u5b58\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u51fa\u3057\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u300c\u4fdd\u5b58\u300d\u30dc\u30bf\u30f3\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u30dc\u30bf\u30f3\u672c\u4f53\u306e\u8868\u793a\u306b\u306f Rect \u3092\u3001\u300c\u4fdd\u5b58\u300d\u306e\u6587\u5b57\u306e\u8868\u793a\u306b\u306f Font \u30af\u30e9\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u753b\u9762\u53f3\u4e0a\u306e\u30b9\u30da\u30fc\u30b9\u306b\u30dc\u30bf\u30f3\u3092\u63cf\u304d\u307e\u3059\u3002Font::drawCenter() \u95a2\u6570\u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u5ea7\u6a19\u304c\u4e2d\u5fc3\u306b\u306a\u308b\u3088\u3046\u306b\u6587\u5b57\u3092\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u77e9\u5f62\u306e\u4e2d\u5fc3 Rectangle::center \u3092\u6307\u5b9a\u3057\u3066\u3001\u30dc\u30bf\u30f3\u306e\u4e2d\u592e\u306b\u6587\u5b57\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n \u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f#\u4e2d\u592e\u306b\u8868\u793a\u3059\u308b\n    //\u30dc\u30bf\u30f3\u306e\u30e9\u30d9\u30eb\u7528\u30d5\u30a9\u30f3\u30c8\n    Font font(12);\n\n    // \uff65\uff65\uff65\u9014\u4e2d\u7701\u7565\uff65\uff65\uff65\n\n        // \u4fdd\u5b58\u30dc\u30bf\u30f3\n        Rect saveButton(531, 10, 100, 30);\n        saveButton.draw(Palette::Whitesmoke).drawFrame(1.0, 1.0, Palette::Black);\n        font(L\"\u4fdd\u5b58\").drawCenter(saveButton.center, Palette::Black);\n\n\u3053\u306e\u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306b\u3001\u300c\u540d\u524d\u3092\u3064\u3051\u3066\u4fdd\u5b58\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u51fa\u3057\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n \u30c0\u30a4\u30a2\u30ed\u30b0#\u540d\u524d\u3092\u4ed8\u3051\u3066\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\n        if (saveButton.leftClicked)\n        {\n            const auto save = Dialog::GetSaveImage();\n            if (save)\n            {\n                image.save(save.value());\n            }\n        }\n\n\u3053\u3053\u307e\u3067\u3092\u307e\u3068\u3081\u308b\u3068\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n#include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(640, 530);\n\n    Graphics::SetBackground(Palette::Peachpuff);\n\n    Graphics2D::SetSamplerState(SamplerState::WrapPoint);\n\n    // 1\u30de\u30b9\u306e\u5927\u304d\u3055\n    const int GridSize = 32;\n\n    // \u6a2a\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int W = 16;\n\n    // \u7e26\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int H = 16;\n\n    // \u30c9\u30c3\u30c8\u7d75\n    Image image(W, H, Palette::White);\n\n    // \u30c9\u30c3\u30c8\u7d75\u8868\u793a\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\n    DynamicTexture texture(image);\n\n    // \u30dc\u30bf\u30f3\u306e\u30e9\u30d9\u30eb\u7528\u30d5\u30a9\u30f3\u30c8\n    Font font(12);\n\n    while (System::Update())\n    {\n        // \u30c9\u30c3\u30c8\u7d75\u3092\u63cf\u753b\n        texture.scale(GridSize).draw(10, 10);\n\n        for (int i : step(H))\n        {\n            for (int j : step(W))\n            {\n                // \u30b0\u30ea\u30c3\u30c9\u3092\u63cf\u753b\n                Rect dot(10 + j*GridSize, 10 + i*GridSize, GridSize);\n                dot.drawFrame(1.0, 1.0, Palette::Gray);\n\n                // \u30c9\u30c3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\n                if (dot.leftClicked)\n                {\n                    image[i][j] = Palette::Black;\n                    texture.fill(image);\n                }\n                else if (dot.rightClicked)\n                {\n                    image[i][j] = Palette::White;\n                    texture.fill(image);\n                }\n            }\n        }\n\n        // \u4fdd\u5b58\u30dc\u30bf\u30f3\n        Rect saveButton(531, 10, 100, 30);\n        saveButton.draw(Palette::Whitesmoke).drawFrame(1.0, 1.0, Palette::Black);\n        font(L\"\u4fdd\u5b58\").drawCenter(saveButton.center, Palette::Black);\n\n        if (saveButton.leftClicked)\n        {\n            const auto save = Dialog::GetSaveImage();\n            if (save)\n            {\n                image.save(save.value());\n            }\n        }\n\n    }\n}\n\n\n\u30d1\u30ec\u30c3\u30c8\u304b\u3089\u8272\u3092\u9078\u3079\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u3088\u3046\n\u3055\u3066\u3001\u3053\u306e\u6bb5\u968e\u3067\u306f\u4f7f\u3048\u308b\u8272\u304c\u767d\u3068\u9ed2\u306e 2 \u3064\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\u53f3\u5074\u306b\u30d1\u30ec\u30c3\u30c8\u3092\u8868\u793a\u3057\u3066\u3001\u8272\u3092\u9078\u629e\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u305d\u306e\u524d\u306b\u3001\u73fe\u5728\u9078\u629e\u3057\u3066\u3044\u308b\u8272\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002leftColor\u3001rightColor \u3068\u3044\u3046 2 \u3064\u306e\u5909\u6570\u3092\u7528\u610f\u3057\u3001\u73fe\u5728\u9078\u629e\u3057\u3066\u3044\u308b\u8272\u3092\u3053\u3053\u306b\u683c\u7d0d\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n    Color leftColor = Palette::Black;\n    Color rightColor = Palette::White;\n\n    // \uff65\uff65\uff65\u9014\u4e2d\u7701\u7565\uff65\uff65\uff65\n\n        // \u73fe\u5728\u9078\u629e\u4e2d\u306e\u8272\n        Rect(531, 470, 50, 50).draw(leftColor).drawFrame(1.0, 1.0, Palette::Black);\n        Rect(581, 470, 50, 50).draw(rightColor).drawFrame(1.0, 1.0, Palette::Black);\n\n\u305d\u3057\u3066\u30b0\u30ea\u30c3\u30c9\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3068\u304d\u3001\u3053\u308c\u3089\u306e\u5909\u6570\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n                if (dot.leftClicked)\n                {\n                    image[i][j] = leftColor;\n                    texture.fill(image);\n                }\n                else if (dot.rightClicked)\n                {\n                    image[i][j] = rightColor;\n                    texture.fill(image);\n                }\n\n\n\u3067\u306f\u30d1\u30ec\u30c3\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002Array \u306b\u8272\u3092\u3044\u304f\u3064\u304b\u5165\u308c\u3066\u3001\u53f3\u5074\u306e\u30b9\u30da\u30fc\u30b9\u306b\u8868\u793a\u3057\u3001\u305d\u308c\u3089\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u9078\u629e\u4e2d\u306e\u8272\uff08leftColor\u3001rightColor\uff09\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n    Array<Color> palette{ Palette::White, Palette::Black, Palette::Red, Palette::Blue, Palette::Green };\n\n    // \uff65\uff65\uff65\u9014\u4e2d\u7701\u7565\uff65\uff65\uff65\n\n        // \u30d1\u30ec\u30c3\u30c8\n        for (int i = 0; i < palette.size(); i++)\n        {\n            // \u30d1\u30ec\u30c3\u30c8\u306e\u30dc\u30bf\u30f3\n            Rect palButton(531, 100 + i * 30, 100, 30);\n            palButton.draw(palette[i]).drawFrame(1.0, 1.0, Palette::Black);\n\n            // \u30d1\u30ec\u30c3\u30c8\u306e\u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u3001\u73fe\u5728\u306e\u8272\u3092\u5909\u3048\u308b\n            if (palButton.leftClicked)\n            {\n                leftColor = palette[i];\n            }\n            else if (palButton.rightClicked)\n            {\n                rightColor = palette[i];\n            }\n        }\n\n\n\n\u5b8c\u6210\n\u4eca\u56de\u306e\u8a18\u4e8b\u3067\u306f\u3053\u3053\u3067\u3072\u3068\u307e\u305a\u5b8c\u6210\u3068\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u307b\u307c 100 \u884c\u306b\u53ce\u307e\u308a\u307e\u3057\u305f\u306d\u3002\u30de\u30a6\u30b9\u3084\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u4f7f\u3046\u3088\u3046\u306a\u8907\u96d1\u306a\u51e6\u7406\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001Siv3D \u306e\u4fbf\u5229\u306a\u30af\u30e9\u30b9\u7fa4\u306e\u304a\u304b\u3052\u3067\u3001\u77ed\u3044\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n#include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(640, 530);\n\n    Graphics::SetBackground(Palette::Peachpuff);\n\n    Graphics2D::SetSamplerState(SamplerState::WrapPoint);\n\n    // 1\u30de\u30b9\u306e\u5927\u304d\u3055\n    const int GridSize = 32;\n\n    // \u6a2a\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int W = 16;\n\n    // \u7e26\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int H = 16;\n\n    // \u30c9\u30c3\u30c8\u7d75\n    Image image(W, H, Palette::White);\n\n    // \u30c9\u30c3\u30c8\u7d75\u8868\u793a\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\n    DynamicTexture texture(image);\n\n    // \u30dc\u30bf\u30f3\u306e\u30e9\u30d9\u30eb\u7528\u30d5\u30a9\u30f3\u30c8\n    Font font(12);\n\n    // \u9078\u629e\u4e2d\u306e\u8272\n    Color leftColor = Palette::Black;\n    Color rightColor = Palette::White;\n\n    // \u30d1\u30ec\u30c3\u30c8\n    Array<Color> palette{ Palette::White, Palette::Black, Palette::Red, Palette::Blue, Palette::Green };\n\n    while (System::Update())\n    {\n        // \u30c9\u30c3\u30c8\u7d75\u3092\u63cf\u753b\n        texture.scale(GridSize).draw(10, 10);\n\n        for (int i : step(H))\n        {\n            for (int j : step(W))\n            {\n                // \u30b0\u30ea\u30c3\u30c9\u3092\u63cf\u753b\n                Rect dot(10 + j*GridSize, 10 + i*GridSize, GridSize);\n                dot.drawFrame(1.0, 1.0, Palette::Gray);\n\n                // \u30c9\u30c3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\n                if (dot.leftClicked)\n                {\n                    image[i][j] = leftColor;\n                    texture.fill(image);\n                }\n                else if (dot.rightClicked)\n                {\n                    image[i][j] = rightColor;\n                    texture.fill(image);\n                }\n            }\n        }\n\n        // \u4fdd\u5b58\u30dc\u30bf\u30f3\n        Rect saveButton(531, 10, 100, 30);\n        saveButton.draw(Palette::Whitesmoke).drawFrame(1.0, 1.0, Palette::Black);\n        font(L\"\u4fdd\u5b58\").drawCenter(saveButton.center, Palette::Black);\n\n        if (saveButton.leftClicked)\n        {\n            const auto save = Dialog::GetSaveImage();\n            if (save)\n            {\n                image.save(save.value());\n            }\n        }\n\n        // \u73fe\u5728\u9078\u629e\u4e2d\u306e\u8272\n        Rect(531, 470, 50, 50).draw(leftColor).drawFrame(1.0, 1.0, Palette::Black);\n        Rect(581, 470, 50, 50).draw(rightColor).drawFrame(1.0, 1.0, Palette::Black);\n\n        // \u30d1\u30ec\u30c3\u30c8\n        for (int i = 0; i < palette.size(); i++)\n        {\n            // \u30d1\u30ec\u30c3\u30c8\u306e\u30dc\u30bf\u30f3\n            Rect palButton(531, 100 + i * 30, 100, 30);\n            palButton.draw(palette[i]).drawFrame(1.0, 1.0, Palette::Black);\n\n            // \u30d1\u30ec\u30c3\u30c8\u306e\u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u3001\u73fe\u5728\u306e\u8272\u3092\u5909\u3048\u308b\n            if (palButton.leftClicked)\n            {\n                leftColor = palette[i];\n            }\n            else if (palButton.rightClicked)\n            {\n                rightColor = palette[i];\n            }\n        }\n    }\n}\n\n\n\u4eca\u5f8c\u306e\u8ab2\u984c\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3055\u3089\u306b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3057\u305f\u3089\u3001\u3069\u3093\u306a\u6a5f\u80fd\u304c\u8003\u3048\u3089\u308c\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\n\u30de\u30a6\u30b9\u304c\u4e57\u3063\u3066\u3044\u308b\u30b0\u30ea\u30c3\u30c9\u3092\u5f37\u8abf\u3059\u308b\n\u30b0\u30ea\u30c3\u30c9\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\u30de\u30a6\u30b9\u3092\u30c9\u30e9\u30c3\u30b0\u3057\u3066\u9023\u7d9a\u3057\u3066\u7dda\u3092\u5f15\u3051\u308b\u3088\u3046\u306b\u3059\u308b\netc.\n\n![siv3d_dotedit.gif](https://qiita-image-store.s3.amazonaws.com/0/35599/1d0bce99-680b-3760-4df2-bf3cef979625.gif)\n\n# \u306f\u3058\u3081\u306b\n\n[Siv3D](http://play-siv3d.hateblo.jp/) \u3092\u4f7f\u3046\u3068\u3001C++ \u3067\u30b2\u30fc\u30e0\u3084\u30c4\u30fc\u30eb\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Siv3D \u306e\u4fbf\u5229\u306a\u30af\u30e9\u30b9\u7fa4\u3092\u6d3b\u7528\u3057\u3066\u3001\u30c9\u30c3\u30c8\u7d75\u30a8\u30c7\u30a3\u30bf\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u4eca\u56de\u4f5c\u6210\u3059\u308b\u30c9\u30c3\u30c8\u7d75\u30a8\u30c7\u30a3\u30bf\u3067\u306f\u3001\u3053\u3093\u306a\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n* \u30c9\u30c3\u30c8\u7d75\u3092\u8868\u793a\u3059\u308b\n* \u30c9\u30c3\u30c8\u7d75\u306e\u30b0\u30ea\u30c3\u30c9\u3092\u8868\u793a\u3059\u308b\n* \u30af\u30ea\u30c3\u30af\u3057\u305f\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u3048\u308b\n* \u30c9\u30c3\u30c8\u7d75\u3092\u4fdd\u5b58\u3059\u308b\n* \u30d1\u30ec\u30c3\u30c8\u304b\u3089\u8272\u3092\u9078\u3076\n\n# \u30c9\u30c3\u30c8\u7d75\u3092\u8868\u793a\u3057\u3088\u3046\u3001\u305d\u306e\u524d\u306b\n\n\u307e\u305a\u6700\u521d\u306b\u3001\u30a8\u30c7\u30a3\u30bf\u306e\u5916\u89b3\u3092\u5927\u307e\u304b\u306b\u6c7a\u3081\u307e\u3059\u3002\u5e45 16 \u00d7 \u9ad8\u3055 16 \u306e\u30c9\u30c3\u30c8\u7d75\u3092\u30011 \u30c9\u30c3\u30c8\u3042\u305f\u308a 32 \u30d4\u30af\u30bb\u30eb\u306e\u30b5\u30a4\u30ba\u306b\u62e1\u5927\u3057\u3066\u8868\u793a\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u3042\u3068\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5927\u304d\u3055\u3001\u80cc\u666f\u8272\u3092\u81ea\u5206\u597d\u307f\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n:information_source: [\u30a6\u30a3\u30f3\u30c9\u30a6\u3068\u80cc\u666f](https://github.com/Siv3D/Reference-JP/wiki/%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%81%A8%E8%83%8C%E6%99%AF)\n\n```cpp:Main.cpp\n#include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(640, 530);\n\n    Graphics::SetBackground(Palette::Peachpuff);\n\n    // 1\u30de\u30b9\u306e\u5927\u304d\u3055\n    const int GridSize = 32;\n    \n    // \u6a2a\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int W = 16;\n\n    // \u7e26\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int H = 16;\n\n    while (System::Update())\n    {\n    }\n}\n```\n\n\n\n# \u30c9\u30c3\u30c8\u7d75\u3092\u8868\u793a\u3057\u3088\u3046\n\nSiv3D \u306b\u306f\u3001\u753b\u50cf\u3092\u7de8\u96c6\u3059\u308b\u305f\u3081\u306e [Image](https://github.com/Reputeless/Siv3D-Reference/blob/master/Programming%20Guide/Headers/Siv3D/Image.hpp) \u30af\u30e9\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u306f\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30c9\u30c3\u30c8\u7d75\u3092\u7de8\u96c6\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n:information_source: [\u753b\u50cf\u7de8\u96c6](https://github.com/Siv3D/Reference-JP/wiki/%E7%94%BB%E5%83%8F%E7%B7%A8%E9%9B%86)\n\n\u5e45 16 \u00d7 \u9ad8\u3055 16 \u3067\u3001\u4e2d\u8eab\u304c\u771f\u3063\u767d\u306e\u753b\u50cf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```cpp\n    Image image(W, H, Palette::White);\n```\n\n\u305f\u3060\u3001Image \u30af\u30e9\u30b9\u306f\u753b\u50cf\u306e\u7de8\u96c6\u306f\u3067\u304d\u3066\u3082\u8868\u793a\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u306b\u306f [Texture](https://github.com/Reputeless/Siv3D-Reference/blob/master/Programming%20Guide/Headers/Siv3D/Texture.hpp) \u30af\u30e9\u30b9\u304b\u3001\u307e\u305f\u306f\u63cf\u304d\u63db\u3048\u304c\u53ef\u80fd\u306a [DynamicTexture](https://github.com/Reputeless/Siv3D-Reference/blob/master/Programming%20Guide/Headers/Siv3D/DynamicTexture.hpp) \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u983b\u7e41\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f8\u304d\u63db\u3048\u308b\u4e8b\u306b\u306a\u308a\u305d\u3046\u306e\u3067\u3001 DynamicTexture \u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n:information_source: [\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u63cf\u304f](https://github.com/Siv3D/Reference-JP/wiki/%E3%83%86%E3%82%AF%E3%82%B9%E3%83%81%E3%83%A3%E3%82%92%E6%8F%8F%E3%81%8F) \uff0f [\u30b9\u30b1\u30c3\u30c1](https://github.com/Siv3D/Reference-JP/wiki/%E3%82%B9%E3%82%B1%E3%83%83%E3%83%81)\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u65e2\u5b58\u306e\u753b\u50cf\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```cpp\n    DynamicTexture texture(image);\n```\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8868\u793a\u306b\u306f `Texture::draw()` \u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u4eca\u56de\u306f\u30c9\u30c3\u30c8\u7d75\u3092 `GridSize` \u500d\u306b\u62e1\u5927\u3057\u3066\u8868\u793a\u3059\u308b\u306e\u3067\u3001`draw()` \u306e\u524d\u306b `Texture::scale()` \u95a2\u6570\u3067\u62e1\u5927\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u5de6\u304b\u3089 10px\u3001\u4e0a\u304b\u3089 10px \u306e\u4f4d\u7f6e\u306b\u3001\u62e1\u5927\u3055\u308c\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n```cpp\n    texture.scale(GridSize).draw(10, 10);\n```\n\n:warning: \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u62e1\u5927\u8868\u793a\u3059\u308b\u3068\u3001\u307c\u3084\u3051\u305f\u611f\u3058\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u304f\u3063\u304d\u308a\u3055\u305b\u305f\u3044\u6642\u306f\u3001[\u30b5\u30f3\u30d7\u30e9\u30fc\u30b9\u30c6\u30fc\u30c8\u306e\u5909\u66f4](https://github.com/Siv3D/Reference-JP/wiki/2D%E3%81%AE%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC%E3%82%B9%E3%83%86%E3%83%BC%E3%83%88#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%A9%E3%83%BC%E3%82%B9%E3%83%86%E3%83%BC%E3%83%88%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AA%E3%83%B3%E3%82%B0%E3%83%A2%E3%83%BC%E3%83%89) \u3092\u3057\u307e\u3059\u3002\n\n```cpp\n    Graphics2D::SetSamplerState(SamplerState::WrapPoint);\n```\n\n\u3053\u3053\u307e\u3067\u3092\u307e\u3068\u3081\u308b\u3068\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u771f\u3063\u767d\u306a\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u305f\u3067\u3057\u3087\u3046\u304b\u3002`Palette::White` \u306e\u3068\u3053\u308d\u3092\u7de8\u96c6\u3057\u3066\u3001\u753b\u50cf\u306e\u8272\u304c\u5909\u308f\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```cpp\n#include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(640, 530);\n\n    Graphics::SetBackground(Palette::Peachpuff);\n\n    Graphics2D::SetSamplerState(SamplerState::WrapPoint);\n\n    // 1\u30de\u30b9\u306e\u5927\u304d\u3055\n    const int GridSize = 32;\n\n    // \u6a2a\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int W = 16;\n\n    // \u7e26\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int H = 16;\n\n    // \u30c9\u30c3\u30c8\u7d75\n    Image image(W, H, Palette::White);\n\n    // \u30c9\u30c3\u30c8\u7d75\u8868\u793a\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\n    DynamicTexture texture(image);\n\n    while (System::Update())\n    {\n        // \u30c9\u30c3\u30c8\u7d75\u3092\u63cf\u753b\n        texture.scale(GridSize).draw(10, 10);\n    }\n}\n```\n\n![00.png](https://qiita-image-store.s3.amazonaws.com/0/35599/b65b1a4b-aff2-a5b9-8961-4754f5f256cb.png)\n\n# \u30b0\u30ea\u30c3\u30c9\u3092\u8868\u793a\u3057\u3088\u3046\n\n\u6b21\u306b\u3001\u30c9\u30c3\u30c8\u7d75\u30a8\u30c7\u30a3\u30bf\u3089\u3057\u304f\u30b0\u30ea\u30c3\u30c9\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5927\u304d\u3055\u304c `GridSize` \u306e\u77e9\u5f62\uff08Rect = [Rectangle](https://github.com/Reputeless/Siv3D-Reference/blob/master/Programming%20Guide/Headers/Siv3D/Rectangle.hpp) \u30af\u30e9\u30b9\uff09\u3092\u6577\u304d\u8a70\u3081\u308c\u3070\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\n`Rectangle::drawFrame()` \u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001\u7070\u8272\u306e\u67a0\u3092\u63cf\u3044\u3066\u3044\u307e\u3059\u3002\n:information_source: [\u9577\u65b9\u5f62\u306e\u67a0\u3092\u63cf\u304f](https://github.com/Siv3D/Reference-JP/wiki/%E5%9B%B3%E5%BD%A2%E3%82%92%E6%8F%8F%E3%81%8F#%E9%95%B7%E6%96%B9%E5%BD%A2%E3%81%AE%E6%9E%A0%E3%82%92%E6%8F%8F%E3%81%8F)\n\n```cpp\n    for (int i : step(H))\n    {\n        for (int j : step(W))\n        {\n            // \u30b0\u30ea\u30c3\u30c9\u3092\u63cf\u753b\n            Rect dot(10 + j*GridSize, 10 + i*GridSize, GridSize);\n            dot.drawFrame(1.0, 1.0, Palette::Gray);\n        }\n    }\n```\n\n![01.png](https://qiita-image-store.s3.amazonaws.com/0/35599/a0484b5e-dbe1-6165-6fec-b0e56875635a.png)\n\n# \u30af\u30ea\u30c3\u30af\u3057\u305f\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u3048\u3066\u307f\u3088\u3046\n\nRectangle \u306e\u3088\u3046\u306a\u56f3\u5f62\u306e\u30af\u30e9\u30b9\u306b\u306f\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u77e5\u308b\u305f\u3081\u306e\u30d7\u30ed\u30d1\u30c6\u30a3 `Rectangle::leftClicked`\u3001`Rectangle::rightClicked` \u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n:information_source: [\u56f3\u5f62\u3068\u30af\u30ea\u30c3\u30af](https://github.com/Siv3D/Reference-JP/wiki/%E5%9B%B3%E5%BD%A2%E3%81%AE%E5%BD%93%E3%81%9F%E3%82%8A%E5%88%A4%E5%AE%9A#%E5%9B%B3%E5%BD%A2%E3%81%A8%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF)\n\n\u30af\u30ea\u30c3\u30af\u306e\u5224\u5b9a\u306b\u306f\u3001\u30b0\u30ea\u30c3\u30c9\u8868\u793a\u306b\u4f7f\u3063\u305f Rect \u3092\u6d41\u7528\u3059\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\u5de6\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30c9\u30c3\u30c8\u3092\u9ed2\u306b\u3001\u53f3\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30c9\u30c3\u30c8\u3092\u767d\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\u3068\u304d\u306f\u3001`Image::operator[]` \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n:information_source: [\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u306b\u8272\u3092\u66f8\u304d\u8fbc\u3080](https://github.com/Siv3D/Reference-JP/wiki/%E7%94%BB%E5%83%8F%E7%B7%A8%E9%9B%86#%E7%94%BB%E5%83%8F%E3%81%AE%E3%83%94%E3%82%AF%E3%82%BB%E3%83%AB%E3%81%AB%E8%89%B2%E3%82%92%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%82%80)\n\n:warning: \u753b\u50cf\u3092\u7de8\u96c6\u3057\u305f\u3042\u3068\u306f\u3001\u5fd8\u308c\u305a\u306b\u8868\u793a\u7528\u306e `texture` \u5909\u6570\u3092\u63cf\u304d\u63db\u3048\u307e\u3057\u3087\u3046\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u753b\u50cf\u3092\u63cf\u304d\u8fbc\u3080\u306b\u306f\u3001`DynamicTexture::fill()` \u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```cpp\n    for (int i : step(H))\n    {\n        for (int j : step(W))\n        {\n            // \u30b0\u30ea\u30c3\u30c9\u3092\u63cf\u753b\n            Rect dot(10 + j*GridSize, 10 + i*GridSize, GridSize);\n            dot.drawFrame(1.0, 1.0, Palette::Gray);\n\n            // \u30c9\u30c3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\n            if (dot.leftClicked)\n            {\n                image[i][j] = Palette::Black;\n                texture.fill(image);\n            }\n            else if (dot.rightClicked)\n            {\n                image[i][j] = Palette::White;\n                texture.fill(image);\n            }\n        }\n    }\n```\n\n![bw.gif](https://qiita-image-store.s3.amazonaws.com/0/35599/358c6d3f-5140-94cb-29dd-dbc0ecadd85c.gif)\n\n# \u30c9\u30c3\u30c8\u7d75\u3092\u4fdd\u5b58\u3057\u3066\u307f\u3088\u3046\n\n\u3067\u306f\u3053\u3053\u3067\u753b\u50cf\u3092\u4fdd\u5b58\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u300c\u4fdd\u5b58\u300d\u30dc\u30bf\u30f3\u3092\u8868\u793a\u3057\u3066\u304a\u3044\u3066\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u300c\u540d\u524d\u3092\u3064\u3051\u3066\u4fdd\u5b58\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u51fa\u3057\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u300c\u4fdd\u5b58\u300d\u30dc\u30bf\u30f3\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u30dc\u30bf\u30f3\u672c\u4f53\u306e\u8868\u793a\u306b\u306f Rect \u3092\u3001\u300c\u4fdd\u5b58\u300d\u306e\u6587\u5b57\u306e\u8868\u793a\u306b\u306f [Font](https://github.com/Reputeless/Siv3D-Reference/blob/master/Programming%20Guide/Headers/Siv3D/Font.hpp) \u30af\u30e9\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u753b\u9762\u53f3\u4e0a\u306e\u30b9\u30da\u30fc\u30b9\u306b\u30dc\u30bf\u30f3\u3092\u63cf\u304d\u307e\u3059\u3002`Font::drawCenter()` \u95a2\u6570\u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u5ea7\u6a19\u304c\u4e2d\u5fc3\u306b\u306a\u308b\u3088\u3046\u306b\u6587\u5b57\u3092\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u77e9\u5f62\u306e\u4e2d\u5fc3 `Rectangle::center` \u3092\u6307\u5b9a\u3057\u3066\u3001\u30dc\u30bf\u30f3\u306e\u4e2d\u592e\u306b\u6587\u5b57\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n:information_source: [\u30c6\u30ad\u30b9\u30c8\u3092\u63cf\u304f#\u4e2d\u592e\u306b\u8868\u793a\u3059\u308b](https://github.com/Siv3D/Reference-JP/wiki/%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%92%E6%8F%8F%E3%81%8F#%E4%B8%AD%E5%A4%AE%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B)\n\n```cpp\n    //\u30dc\u30bf\u30f3\u306e\u30e9\u30d9\u30eb\u7528\u30d5\u30a9\u30f3\u30c8\n    Font font(12);\n\n    // \uff65\uff65\uff65\u9014\u4e2d\u7701\u7565\uff65\uff65\uff65\n\n        // \u4fdd\u5b58\u30dc\u30bf\u30f3\n        Rect saveButton(531, 10, 100, 30);\n        saveButton.draw(Palette::Whitesmoke).drawFrame(1.0, 1.0, Palette::Black);\n        font(L\"\u4fdd\u5b58\").drawCenter(saveButton.center, Palette::Black);\n```\n\n\u3053\u306e\u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306b\u3001\u300c\u540d\u524d\u3092\u3064\u3051\u3066\u4fdd\u5b58\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u51fa\u3057\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n:information_source: [\u30c0\u30a4\u30a2\u30ed\u30b0#\u540d\u524d\u3092\u4ed8\u3051\u3066\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b](https://github.com/Siv3D/Reference-JP/wiki/%E3%83%80%E3%82%A4%E3%82%A2%E3%83%AD%E3%82%B0#%E5%90%8D%E5%89%8D%E3%82%92%E4%BB%98%E3%81%91%E3%81%A6%E7%94%BB%E5%83%8F%E3%82%92%E4%BF%9D%E5%AD%98%E3%81%99%E3%82%8B)\n\n\n```cpp\n        if (saveButton.leftClicked)\n        {\n            const auto save = Dialog::GetSaveImage();\n            if (save)\n            {\n                image.save(save.value());\n            }\n        }\n```\n\n\u3053\u3053\u307e\u3067\u3092\u307e\u3068\u3081\u308b\u3068\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```cpp\n#include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(640, 530);\n\n    Graphics::SetBackground(Palette::Peachpuff);\n\n    Graphics2D::SetSamplerState(SamplerState::WrapPoint);\n\n    // 1\u30de\u30b9\u306e\u5927\u304d\u3055\n    const int GridSize = 32;\n\n    // \u6a2a\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int W = 16;\n\n    // \u7e26\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int H = 16;\n\n    // \u30c9\u30c3\u30c8\u7d75\n    Image image(W, H, Palette::White);\n\n    // \u30c9\u30c3\u30c8\u7d75\u8868\u793a\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\n    DynamicTexture texture(image);\n\n    // \u30dc\u30bf\u30f3\u306e\u30e9\u30d9\u30eb\u7528\u30d5\u30a9\u30f3\u30c8\n    Font font(12);\n\n    while (System::Update())\n    {\n        // \u30c9\u30c3\u30c8\u7d75\u3092\u63cf\u753b\n        texture.scale(GridSize).draw(10, 10);\n\n        for (int i : step(H))\n        {\n            for (int j : step(W))\n            {\n                // \u30b0\u30ea\u30c3\u30c9\u3092\u63cf\u753b\n                Rect dot(10 + j*GridSize, 10 + i*GridSize, GridSize);\n                dot.drawFrame(1.0, 1.0, Palette::Gray);\n\n                // \u30c9\u30c3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\n                if (dot.leftClicked)\n                {\n                    image[i][j] = Palette::Black;\n                    texture.fill(image);\n                }\n                else if (dot.rightClicked)\n                {\n                    image[i][j] = Palette::White;\n                    texture.fill(image);\n                }\n            }\n        }\n\n        // \u4fdd\u5b58\u30dc\u30bf\u30f3\n        Rect saveButton(531, 10, 100, 30);\n        saveButton.draw(Palette::Whitesmoke).drawFrame(1.0, 1.0, Palette::Black);\n        font(L\"\u4fdd\u5b58\").drawCenter(saveButton.center, Palette::Black);\n\n        if (saveButton.leftClicked)\n        {\n            const auto save = Dialog::GetSaveImage();\n            if (save)\n            {\n                image.save(save.value());\n            }\n        }\n\n    }\n}\n```\n\n# \u30d1\u30ec\u30c3\u30c8\u304b\u3089\u8272\u3092\u9078\u3079\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u3088\u3046\n\n\u3055\u3066\u3001\u3053\u306e\u6bb5\u968e\u3067\u306f\u4f7f\u3048\u308b\u8272\u304c\u767d\u3068\u9ed2\u306e 2 \u3064\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\u53f3\u5074\u306b\u30d1\u30ec\u30c3\u30c8\u3092\u8868\u793a\u3057\u3066\u3001\u8272\u3092\u9078\u629e\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u305d\u306e\u524d\u306b\u3001\u73fe\u5728\u9078\u629e\u3057\u3066\u3044\u308b\u8272\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002`leftColor`\u3001`rightColor` \u3068\u3044\u3046 2 \u3064\u306e\u5909\u6570\u3092\u7528\u610f\u3057\u3001\u73fe\u5728\u9078\u629e\u3057\u3066\u3044\u308b\u8272\u3092\u3053\u3053\u306b\u683c\u7d0d\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```cpp\n    Color leftColor = Palette::Black;\n    Color rightColor = Palette::White;\n\n    // \uff65\uff65\uff65\u9014\u4e2d\u7701\u7565\uff65\uff65\uff65\n\n        // \u73fe\u5728\u9078\u629e\u4e2d\u306e\u8272\n        Rect(531, 470, 50, 50).draw(leftColor).drawFrame(1.0, 1.0, Palette::Black);\n        Rect(581, 470, 50, 50).draw(rightColor).drawFrame(1.0, 1.0, Palette::Black);\n```\n\n\u305d\u3057\u3066\u30b0\u30ea\u30c3\u30c9\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3068\u304d\u3001\u3053\u308c\u3089\u306e\u5909\u6570\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```cpp\n                if (dot.leftClicked)\n                {\n                    image[i][j] = leftColor;\n                    texture.fill(image);\n                }\n                else if (dot.rightClicked)\n                {\n                    image[i][j] = rightColor;\n                    texture.fill(image);\n                }\n```\n\n![02.png](https://qiita-image-store.s3.amazonaws.com/0/35599/a7555299-b293-d04e-4ace-992a1a7a486e.png)\n\n\u3067\u306f\u30d1\u30ec\u30c3\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002[Array](https://github.com/Reputeless/Siv3D-Reference/blob/master/Programming%20Guide/Headers/Siv3D/Array.hpp) \u306b\u8272\u3092\u3044\u304f\u3064\u304b\u5165\u308c\u3066\u3001\u53f3\u5074\u306e\u30b9\u30da\u30fc\u30b9\u306b\u8868\u793a\u3057\u3001\u305d\u308c\u3089\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u9078\u629e\u4e2d\u306e\u8272\uff08`leftColor`\u3001`rightColor`\uff09\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```cpp\n    Array<Color> palette{ Palette::White, Palette::Black, Palette::Red, Palette::Blue, Palette::Green };\n\n    // \uff65\uff65\uff65\u9014\u4e2d\u7701\u7565\uff65\uff65\uff65\n\n        // \u30d1\u30ec\u30c3\u30c8\n        for (int i = 0; i < palette.size(); i++)\n        {\n            // \u30d1\u30ec\u30c3\u30c8\u306e\u30dc\u30bf\u30f3\n            Rect palButton(531, 100 + i * 30, 100, 30);\n            palButton.draw(palette[i]).drawFrame(1.0, 1.0, Palette::Black);\n\n            // \u30d1\u30ec\u30c3\u30c8\u306e\u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u3001\u73fe\u5728\u306e\u8272\u3092\u5909\u3048\u308b\n            if (palButton.leftClicked)\n            {\n                leftColor = palette[i];\n            }\n            else if (palButton.rightClicked)\n            {\n                rightColor = palette[i];\n            }\n        }\n```\n\n![03.png](https://qiita-image-store.s3.amazonaws.com/0/35599/c9a09d84-58ca-9203-742f-5f7330933d33.png)\n\n\n# \u5b8c\u6210\n\n\u4eca\u56de\u306e\u8a18\u4e8b\u3067\u306f\u3053\u3053\u3067\u3072\u3068\u307e\u305a\u5b8c\u6210\u3068\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u307b\u307c 100 \u884c\u306b\u53ce\u307e\u308a\u307e\u3057\u305f\u306d\u3002\u30de\u30a6\u30b9\u3084\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u4f7f\u3046\u3088\u3046\u306a\u8907\u96d1\u306a\u51e6\u7406\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001Siv3D \u306e\u4fbf\u5229\u306a\u30af\u30e9\u30b9\u7fa4\u306e\u304a\u304b\u3052\u3067\u3001\u77ed\u3044\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n```cpp\n#include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(640, 530);\n\n    Graphics::SetBackground(Palette::Peachpuff);\n\n    Graphics2D::SetSamplerState(SamplerState::WrapPoint);\n\n    // 1\u30de\u30b9\u306e\u5927\u304d\u3055\n    const int GridSize = 32;\n\n    // \u6a2a\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int W = 16;\n\n    // \u7e26\u65b9\u5411\u306e\u30de\u30b9\u306e\u6570\n    const int H = 16;\n\n    // \u30c9\u30c3\u30c8\u7d75\n    Image image(W, H, Palette::White);\n\n    // \u30c9\u30c3\u30c8\u7d75\u8868\u793a\u7528\u306e\u30c6\u30af\u30b9\u30c1\u30e3\n    DynamicTexture texture(image);\n\n    // \u30dc\u30bf\u30f3\u306e\u30e9\u30d9\u30eb\u7528\u30d5\u30a9\u30f3\u30c8\n    Font font(12);\n\n    // \u9078\u629e\u4e2d\u306e\u8272\n    Color leftColor = Palette::Black;\n    Color rightColor = Palette::White;\n\n    // \u30d1\u30ec\u30c3\u30c8\n    Array<Color> palette{ Palette::White, Palette::Black, Palette::Red, Palette::Blue, Palette::Green };\n\n    while (System::Update())\n    {\n        // \u30c9\u30c3\u30c8\u7d75\u3092\u63cf\u753b\n        texture.scale(GridSize).draw(10, 10);\n\n        for (int i : step(H))\n        {\n            for (int j : step(W))\n            {\n                // \u30b0\u30ea\u30c3\u30c9\u3092\u63cf\u753b\n                Rect dot(10 + j*GridSize, 10 + i*GridSize, GridSize);\n                dot.drawFrame(1.0, 1.0, Palette::Gray);\n\n                // \u30c9\u30c3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u30c9\u30c3\u30c8\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\n                if (dot.leftClicked)\n                {\n                    image[i][j] = leftColor;\n                    texture.fill(image);\n                }\n                else if (dot.rightClicked)\n                {\n                    image[i][j] = rightColor;\n                    texture.fill(image);\n                }\n            }\n        }\n\n        // \u4fdd\u5b58\u30dc\u30bf\u30f3\n        Rect saveButton(531, 10, 100, 30);\n        saveButton.draw(Palette::Whitesmoke).drawFrame(1.0, 1.0, Palette::Black);\n        font(L\"\u4fdd\u5b58\").drawCenter(saveButton.center, Palette::Black);\n\n        if (saveButton.leftClicked)\n        {\n            const auto save = Dialog::GetSaveImage();\n            if (save)\n            {\n                image.save(save.value());\n            }\n        }\n\n        // \u73fe\u5728\u9078\u629e\u4e2d\u306e\u8272\n        Rect(531, 470, 50, 50).draw(leftColor).drawFrame(1.0, 1.0, Palette::Black);\n        Rect(581, 470, 50, 50).draw(rightColor).drawFrame(1.0, 1.0, Palette::Black);\n\n        // \u30d1\u30ec\u30c3\u30c8\n        for (int i = 0; i < palette.size(); i++)\n        {\n            // \u30d1\u30ec\u30c3\u30c8\u306e\u30dc\u30bf\u30f3\n            Rect palButton(531, 100 + i * 30, 100, 30);\n            palButton.draw(palette[i]).drawFrame(1.0, 1.0, Palette::Black);\n\n            // \u30d1\u30ec\u30c3\u30c8\u306e\u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u3089\u3001\u73fe\u5728\u306e\u8272\u3092\u5909\u3048\u308b\n            if (palButton.leftClicked)\n            {\n                leftColor = palette[i];\n            }\n            else if (palButton.rightClicked)\n            {\n                rightColor = palette[i];\n            }\n        }\n    }\n}\n```\n\n# \u4eca\u5f8c\u306e\u8ab2\u984c\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3055\u3089\u306b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3057\u305f\u3089\u3001\u3069\u3093\u306a\u6a5f\u80fd\u304c\u8003\u3048\u3089\u308c\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n* \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\n* \u30de\u30a6\u30b9\u304c\u4e57\u3063\u3066\u3044\u308b\u30b0\u30ea\u30c3\u30c9\u3092\u5f37\u8abf\u3059\u308b\n* \u30b0\u30ea\u30c3\u30c9\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n* \u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n* \u30de\u30a6\u30b9\u3092\u30c9\u30e9\u30c3\u30b0\u3057\u3066\u9023\u7d9a\u3057\u3066\u7dda\u3092\u5f15\u3051\u308b\u3088\u3046\u306b\u3059\u308b\n* etc.\n", "tags": ["Siv3D", "C++"]}