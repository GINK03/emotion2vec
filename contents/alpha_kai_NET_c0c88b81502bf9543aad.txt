{"context": "\n\n\u521d\u3081\u306b\n\u3069\u3046\u3082\u3053\u3093\u306b\u3061\u306f\n\u4eca\u65e5\u306fD\u8a00\u8a9e\u3067Java\u306e\u3088\u3046\u306a\u7121\u540d\u30af\u30e9\u30b9\u304c\u4f7f\u3044\u305f\u3044\u306a\u3041\u3063\u3066\u601d\u3063\u3066\u66f8\u3044\u3066\u307f\u305f\u3082\u306e\u306b\u3064\u3044\u3066\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u50d5\u306fJava\u306b\u3064\u3044\u3066\u306f\u5168\u304f\u77e5\u308a\u307e\u305b\u3093\u306e\u3067\u9593\u9055\u3063\u305f\u3053\u3068\u3092\u8a00\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002(Scala\u3092\u6700\u8fd1\u5b66\u7fd2\u4e2d\u3067\u305d\u306e\u6642\u306b\u3061\u3087\u3063\u3068\u3060\u3051Java\u3092\u66f8\u3044\u305f\u7a0b\u5ea6\u3067\u3059...)\n\n\u8ffd\u8a18\n\u50d5\u304c\u77e5\u3089\u306a\u304b\u3063\u305f\u3060\u3051\u3067\u3001D\u8a00\u8a9e\u306e\u6a19\u6e96\u6a5f\u80fd\u306b\u3082\u7121\u540d\u30af\u30e9\u30b9\u304c\u3042\u308a\u307e\u3057\u305f...(Gist\u306e\u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u3082\u3089\u3044\u307e\u3057\u305f...)\n\u3067\u3082\u3068\u308a\u3042\u3048\u305a\u3001\u66f8\u3044\u3061\u3083\u3063\u305f\u3082\u306e\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059...\nD\u8a00\u8a9e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u6587\u5b57\u5217\u64cd\u4f5c\u3092\u3059\u308b\u969b\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3001\u3068\u601d\u3063\u3066\u304b\u304d\u307e\u3059\n\n\u3055\u3066\u3001\n\u307e\u305a\u3053\u3053\u3067\u5b9f\u88c5\u3059\u308b\u3082\u306e\u3092Java\u3067\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\nJava\u3067\u306f1Class 1File\u3068\u3044\u3046\u306e\u304c\u539f\u5247\u3089\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f2\u3064\u306eClass\u3092\u66f8\u304d\u307e\u3059(\u306a\u306e\u3067\u30c4\u30c3\u30b3\u30df\u306f\u7121\u3057\u3067)\u3002\nclass T1 {\n  T1(String v) {\n    System.out.println(\"T1! - \" + v);\n  }\n\n  void func() {}\n}\n\nclass Main {\n  static public void main(String[] args) {\n    T1 t = new T1(\"T2\") {\n      @Override void func() {\n        System.out.println(\"Overrided T2.func!\");\n      }\n    };\n    t.func();\n  }\n}\n\n\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3068\n\nT1! - T2\nOverrided T2.func!\n\n\u3068\u51fa\u529b\u3055\u308c\u307e\u3059\n\u3053\u3053\u3067\u3044\u3046\u533f\u540d\u30af\u30e9\u30b9\u3068\u306f\u3001new\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u8aad\u3093\u3060\u6642\u306boverride\u3059\u308b\u305f\u3081\u306e\u30d6\u30ed\u30c3\u30af\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\u30b3\u30ec\u3092D\u8a00\u8a9e\u3067\u3084\u3063\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u306e\u304c\u4eca\u56de\u306e\u76ee\u7684\u3067\u3059\n\n\u3069\u3046\u3084\u3063\u3066D\u8a00\u8a9e\u3067\u3084\u308b\u304b\n\u30b3\u30ec\u3092D\u8a00\u8a9e\u3067\u5b9f\u88c5\u3059\u308b\u306b\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u7528\u3044\u3066\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u305d\u308c\u3092mixin\u3059\u308b\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u7528\u3044\u307e\u3059\u3002\nD\u8a00\u8a9e\u3067\u306fmixin\u3068\u3044\u3046\u3082\u306e\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30b3\u30fc\u30c9\u4e2d\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092D\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u89e3\u91c8\u3057\u305d\u308c\u3092\u305d\u306e\u5834\u306b\u57cb\u3081\u8fbc\u3080\u3001\u5c55\u958b\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u3064\u307e\u308a\nint x;\nmixin(\"x = 1 + 2;\");\nassert(x == 3);\n\n\u3068\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30ec\u3092\u3069\u3046\u3064\u304b\u3063\u3066\u5b9f\u88c5\u3059\u308b\u304b\u3001\u3067\u3059\u304c\n\u65b9\u91dd\u3068\u3057\u3066\u306f\n\n\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064Class\u3092\u57fa\u5e95\u30af\u30e9\u30b9A\u3068\u3059\u308b\n\u57fa\u5e95\u30af\u30e9\u30b9A\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9B\u3092\u751f\u6210\u3059\u308b\n\u30af\u30e9\u30b9B\u306e\u4e2d\u306boverride\u3057\u305f\u95a2\u6570\u3092\u57cb\u3081\u8fbc\u3080\n\n\u3053\u308c\u3092\u3059\u3079\u3066\u6587\u5b57\u5217\u306e\u4e2d\u3067\u884c\u3063\u3066\u3001\u5b8c\u6210\u3057\u305f\u3082\u306e\u3092mixin\u3059\u308b\u65b9\u91dd\u3067\u3059\u3002\n\u3064\u307e\u308a\nmixin(\"class T {}\");\nvoid main() {\n  T t = new T;\n}\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u306e\u3053\u3068\u3092\u3057\u307e\u3059\u3002\n\n\u8ab2\u984c\n\u3053\u308c\u3001\u4e00\u898b\u3059\u308b\u3068\u7c21\u5358\u3067\u3059\nbodyString\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30b3\u30fc\u30c9\u3092\u5165\u3063\u3066\u3044\u308b\u3068\u3057\u3066\nstring mixinString =\n  \"class T2 : T1 {\"\n~    bodyString\n~  \"}\";\n\n\u3053\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\u3053\u308c\u306a\u3089\u5358\u7d14\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u4e8b\u306f\u305d\u3046\u5358\u7d14\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u611f\u306e\u826f\u3044\u65b9\u306f\u6c17\u304c\u3064\u3044\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u3046\u3067\u3059\u3002super\u3092\u547c\u3076\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u305d\u308c\u3067\u3001super\u304c\u5fc5\u8981\u3067\u3042\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u767a\u751f\u3059\u308b\u8ab2\u984c\u306f\nsuper\u306e\u5f15\u6570\u3092\u3069\u3046\u6e21\u3059\u304b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\n\u4eca\u56de\u306f\u3001\u90fd\u5408\u306b\u3088\u308a\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u65b9\u306esuper\u3092\u547c\u3076\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u3001super\u3092\u547c\u3076\u3060\u3051\u3001\u306b\u3057\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\nthis() {\n  super();\n}\n//or\nthis (ArgType1 value1, ArgType2 value2) {\n  super(value1, value2);\n}\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3059\u3002\n\u3053\u3053\u3067\u3001\u5f15\u6570\u306fstd.typecons.Tuple\u3092\u7528\u3044\u3066\u6e21\u3059\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u76ee\u6307\u3059\u5148\u3092\u793a\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\nT1\u3068\u3044\u3046\u30af\u30e9\u30b9\u306efunc\u3068\u3044\u3046\u95a2\u6570\u3092override\u3057\u305f\u3044\u3082\u306e\u3068\u3057\u307e\u3059\n\u3067\u306f\u3001T1\u306b\u3064\u3044\u3066\nclass T1 {\n  this(string v) {\n    writeln(\"T1 - \", v);\n  }\n\n  void func() {}\n}\n\n\u3053\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\n\u3053\u3053\u3067\u3001\u3053\u308c\u3092\u7d99\u627f\u3057\u305fT2\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\u5b8c\u6210\u3057\u305fT2\u3092\u793a\u3057\u307e\u3059\nclass T2 : T1 {\n  this(string v) {\n    super(v);\n  }\n\n  override void func() {\n    writeln(\"Overrided T2.func!\");\n  }\n}\n\n\u3053\u3093\u306a\u304b\u3093\u3058\u306e\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u5b9f\u88c5\u3057\u305f\u5f8c\u306e\u3082\u306e\u3092\u4f7f\u3046\u3068\u3053\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\nT1 t = AnonymousClass!(\"T1\", q{\n        override void func() {\n          writeln(\"Overrided T2.func!\");\n        }\n      }, tuple(\"T2\"));\n\n\u3053\u3053\u3067\u3001\"T1\"\u304c\u57fa\u5e95\u30af\u30e9\u30b9\u540dBaseClassName, override\u301c\u306e\u6587\u5b57\u5217\u3092\u5b9f\u88c5\u672c\u4f53\u306ebodyString, tuple(\"T2)\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570arguments\u3068\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067arguments\u3092\u7528\u3044\u3066\u4ee5\u4e0b\u306e\u6587\u5b57\u5217\u3092\u4f5c\u308c\u3070\u5f15\u6570\u3069\u3046\u3059\u308b\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3059\n\ntypes : \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u306e\u578b\u306e\u914d\u5217(\u4f8b\u3048\u3070[\"int\", \"int\"]\u307f\u305f\u3044\u306a\u3082\u306e)\nargumentLabels : \u5f15\u6570\u306e\u540d\u524d\u306e\u914d\u5217\nargumentValues : \u5f15\u6570\u306e\u5b9f\u5f15\u6570\u3058\u6587\u5b57\u5217(\u4f8b\u3048\u3070\u3001(1,2)\u307f\u305f\u3044\u306a\u3082\u306e)\nparameters : \u95a2\u6570\u5ba3\u8a00\u306e\u5f15\u6570\u30ea\u30b9\u30c8\u306e\u6587\u5b57\u5217(\u4f8b\u3048\u3070(int x, int y)\u307f\u305f\u3044\u306a\u3082\u306e)\n\n\ntypes\u3092\u4f5c\u308b\nimmutable types = (temp) {\n        int i;\n        foreach (argument; arguments.Types) {\n          temp ~= (i ? \",\" : \"\") ~ argument.stringof;\n          i++;\n        }\n        return temp;\n      }(\"\").split(\",\");\n\n\nargumentLabels\u3092\u4f5c\u308b\nimmutable argumentLabels = arguments.length.iota.map!(i => \" arg\" ~ i.to!string).array;\n\n\nargumentValues\u3092\u4f5c\u308b\nimmutable argumentValues = arguments.stringof.replace(\"Tuple\", \"\");\n\n\nparameters\u3092\u4f5c\u308b\nimmutable parameters =\n  (temp =>\n    (Args) {\n      int i;\n      foreach (argument; arguments) {\n        temp ~= (i ? \",\" : \"\") ~ types[i].to!string ~ Args[i];\n        ++i;\n      }\n      return temp;\n    }(argumentLabels)\n  )(\"\");\n\n\u3053\u3053\u307e\u3067\u5909\u6570\u3092\u7528\u3044\u3066\u4ee5\u4e0b\u306e\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u307e\u3059\n  \"() {\"\n~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n~     \"this(\" ~ parameters ~ \") {\"\n~       \"super(\" ~ argumentLabels ~ \");\"\n~     \"}\"\n~     bodyString\n~   \"}\"\n~   \"return new AnonymousClassMain(\" ~ argumentValues ~ \");\"\n~ \"}()\";\n\n\u3053\u3053\u3067\u3001\u7121\u540d\u95a2\u6570\u306b\u3057\u3066\u308b\u306e\u306f\u3001\u5f8c\u306bmixin\u3059\u308b\u969b\u306b\u5f0f\u306e\u5024\u3068\u3057\u3066mixin\u3059\u308b\u306e\u3067\u3001\u4e00\u3064\u306e\u5024\u3068\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u5b8c\u6210\u54c1\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\n\u4ee5\u4e0a\u3092\u307e\u3068\u3081\u3066\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u304c\u306a\u3044\u5834\u5408\u306f3\u3064\u3081\u306earguments\u3092\u7701\u7565\u53ef\u80fd\u306b\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\nimport std.algorithm,\n       std.typecons,\n       std.string,\n       std.array,\n       std.range,\n       std.conv;\n\ntemplate AnonymousClassImpl(\n    string BaseClassName,\n    string bodyString,\n    alias arguments = tuple()\n  ) {\n  enum AnonymousClassImpl = () {\n\n    string generateString(\n          string parameters      = null,\n          string argumentLabels  = null,\n          string argumentValues  = null\n        ) {\n      if (\n          parameters     !is null\n       && argumentLabels !is null\n       && argumentValues !is null) {\n        return \n          \"() {\"\n        ~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n        ~     \"this(\" ~ parameters ~ \") {\"\n        ~       \"super(\" ~ argumentLabels ~ \");\"\n        ~     \"}\"\n        ~     bodyString\n        ~   \"}\"\n        ~   \"return new AnonymousClassMain(\" ~ argumentValues ~ \");\"\n        ~ \"}()\";\n      } else {\n        return \n          \"() {\"\n        ~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n        ~     \"this() {\"\n        ~       \"super();\"\n        ~     \"}\"\n        ~     bodyString\n        ~   \"}\"\n        ~   \"return new AnonymousClassMain();\"\n        ~ \"}()\";\n      }\n    }\n\n    static if (arguments.length == 0) {\n      return generateString;\n    } else {\n      immutable types = (temp) {\n        int i;\n        foreach (argument; arguments.Types) {\n          temp ~= (i ? \",\" : \"\") ~ argument.stringof;\n          i++;\n        }\n        return temp;\n      }(\"\").split(\",\");\n      immutable argumentLabels = arguments.length.iota.map!(i => \" arg\" ~ i.to!string).array;\n      immutable argumentValues = arguments.stringof.replace(\"Tuple\", \"\");\n      immutable parameters =\n        (temp =>\n          (Args) {\n            int i;\n            foreach (argument; arguments) {\n              temp ~= (i ? \",\" : \"\") ~ types[i].to!string ~ Args[i];\n              ++i;\n            }\n            return temp;\n          }(argumentLabels)\n        )(\"\");\n\n      return generateString(\n            parameters,\n            argumentLabels.join(\",\"),\n            argumentValues\n          );\n    }\n  }();\n}\n\nauto AnonymousClass(\n      string BaseClassName,\n      string bodyString,\n      alias arguments = tuple()\n    )() {\n  static if (arguments.length == 0) {\n    return mixin(AnonymousClassImpl!(BaseClassName, bodyString));\n  } else {\n    return mixin(AnonymousClassImpl!(BaseClassName, bodyString, arguments));\n  }\n}\n\nimport std.stdio;\n\nclass T1 {\n  this(string v) {\n    writeln(\"T1! - \", v);\n  }\n\n  void func() {}\n}\n\nclass Tx1 {\n  this() {\n    writeln(\"Tx1\");\n  }\n  void func() {}\n}\n\nvoid main() {\n  T1 t = AnonymousClass!(\"T1\", q{\n        override void func() {\n          writeln(\"Overrided T2.func!\");\n        }\n      },\n      tuple(\"T2\"));\n  Tx1 tx = AnonymousClass!(\"Tx1\", q{\n      override void func() {\n          writeln(\"Overrided Tx2.func!\");\n        }\n      });\n  t.func;\n  tx.func;\n}\n\n\nD\u306b\u3082\u7121\u540d\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u3068\u3044\u3046\u8a71\n\u30b3\u30ec\u3092\u6628\u591c\u5b9f\u88c5\u3057\u3066\u3001\u4eca\u671d\u8d77\u304d\u3066\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u59cb\u3081\u305f\u6642\u306b\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u305fGist\u3092\u898b\u306b\u884c\u3063\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3067D\u306b\u3082\u7121\u540d\u30af\u30e9\u30b9\u304c\u3042\u308b\u3053\u3068\u3092\u6559\u3048\u3066\u3082\u3089\u3044\u307e\u3057\u305f...\n\u4e0a\u306e\u30b3\u30fc\u30c9\u306f\u4e0b\u306e\u30b3\u30fc\u30c9\u3068\u7b49\u4fa1\u3067\u3059(\u5185\u90e8\u306e\u5b9f\u88c5\u306a\u3069\u306f\u7570\u306a\u308a\u307e\u3059\u304c\u540c\u3058\u6319\u52d5\u3092\u3057\u307e\u3059...)\nimport std.stdio;\n\nclass T1 {\n  this(string v) {\n    writeln(\"T1! - \", v);\n  }\n\n  void func() {}\n}\n\nclass Tx1 {\n  this() {\n    writeln(\"Tx1\");\n  }\n\n  void func() {}\n}\n\nvoid main() {\n  T1 t = new class() T1 {\n    this() {\n      super(\"T2\");\n    }\n\n    override void func() {\n      writeln(\"Overrided T2.func!\");\n    }\n  };\n\n  Tx1 tx = new class() Tx1 {\n    this() {\n      super();\n    }\n\n    override void func() {\n      writeln(\"Overrided Tx2.func!\");\n    }\n  };\n\n  t.func;\n  tx.func;\n}\n\n\u306f\u3044\u3001\u30b3\u30ec\u3092\u4f7f\u3048\u3070D\u8a00\u8a9e\u306e\u6a19\u6e96\u6a5f\u80fd\u3067\u7121\u540d\u30af\u30e9\u30b9\u304c\u4f7f\u3048\u307e\u3059\u306d(\u6d99) (\u4ed6\u306b\u3082\u81ea\u5206\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u66f8\u3051\u308b\u306e\u3067\u305d\u306e\u5206\u306e\u81ea\u7531\u5ea6\u306f\u9ad8\u3044\u3067\u3059\u306d...(\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u30b3\u30fc\u30c9\u3092\u81ea\u5206\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u3082\u51fa\u6765\u307e\u3059\u304c\u3001\u305d\u306e\u5206\u5f15\u6570\u304c\u5897\u3048\u3066\u3057\u307e\u3063\u3066\u9762\u5012\u306b\u306a\u308b\u306e\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u5236\u9650\u3092\u52a0\u3048\u307e\u3057\u305f))\n\u3067\u3082\u307e\u3041\u3001D\u8a00\u8a9e\u306e\u9ed2\u9b54\u8853(\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u6587\u5b57\u5217\u64cd\u4f5c)\u306e\u52c9\u5f37\u306b\u306a\u3063\u305f\u306e\u3067\u3044\u3044\u3068\u3057\u3088\u3046...\n\u3068\u308a\u3042\u3048\u305a\u3001\u4ee5\u4e0a\u3067\u3059\n#\u521d\u3081\u306b\n\u3069\u3046\u3082\u3053\u3093\u306b\u3061\u306f\n\n\u4eca\u65e5\u306fD\u8a00\u8a9e\u3067Java\u306e\u3088\u3046\u306a\u7121\u540d\u30af\u30e9\u30b9\u304c\u4f7f\u3044\u305f\u3044\u306a\u3041\u3063\u3066\u601d\u3063\u3066\u66f8\u3044\u3066\u307f\u305f\u3082\u306e\u306b\u3064\u3044\u3066\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u50d5\u306fJava\u306b\u3064\u3044\u3066\u306f\u5168\u304f\u77e5\u308a\u307e\u305b\u3093\u306e\u3067\u9593\u9055\u3063\u305f\u3053\u3068\u3092\u8a00\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002(Scala\u3092\u6700\u8fd1\u5b66\u7fd2\u4e2d\u3067\u305d\u306e\u6642\u306b\u3061\u3087\u3063\u3068\u3060\u3051Java\u3092\u66f8\u3044\u305f\u7a0b\u5ea6\u3067\u3059...)\n\n##\u8ffd\u8a18\n**\u50d5\u304c\u77e5\u3089\u306a\u304b\u3063\u305f\u3060\u3051\u3067\u3001D\u8a00\u8a9e\u306e\u6a19\u6e96\u6a5f\u80fd\u306b\u3082\u7121\u540d\u30af\u30e9\u30b9\u304c\u3042\u308a\u307e\u3057\u305f...(Gist\u306e\u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u3082\u3089\u3044\u307e\u3057\u305f...)**\n**\u3067\u3082\u3068\u308a\u3042\u3048\u305a\u3001\u66f8\u3044\u3061\u3083\u3063\u305f\u3082\u306e\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059...**\n**D\u8a00\u8a9e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u6587\u5b57\u5217\u64cd\u4f5c\u3092\u3059\u308b\u969b\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3001\u3068\u601d\u3063\u3066\u304b\u304d\u307e\u3059**\n\n#\u3055\u3066\u3001\n\u307e\u305a\u3053\u3053\u3067\u5b9f\u88c5\u3059\u308b\u3082\u306e\u3092Java\u3067\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\nJava\u3067\u306f1Class 1File\u3068\u3044\u3046\u306e\u304c\u539f\u5247\u3089\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f2\u3064\u306eClass\u3092\u66f8\u304d\u307e\u3059(\u306a\u306e\u3067\u30c4\u30c3\u30b3\u30df\u306f\u7121\u3057\u3067)\u3002\n\n```java\nclass T1 {\n  T1(String v) {\n    System.out.println(\"T1! - \" + v);\n  }\n\n  void func() {}\n}\n\nclass Main {\n  static public void main(String[] args) {\n    T1 t = new T1(\"T2\") {\n      @Override void func() {\n        System.out.println(\"Overrided T2.func!\");\n      }\n    };\n    t.func();\n  }\n}\n```\n\n\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3068\n```\nT1! - T2\nOverrided T2.func!\n```\n\u3068\u51fa\u529b\u3055\u308c\u307e\u3059\n\n\u3053\u3053\u3067\u3044\u3046\u533f\u540d\u30af\u30e9\u30b9\u3068\u306f\u3001`new`\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u8aad\u3093\u3060\u6642\u306b`override`\u3059\u308b\u305f\u3081\u306e\u30d6\u30ed\u30c3\u30af\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\n\u30b3\u30ec\u3092D\u8a00\u8a9e\u3067\u3084\u3063\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u306e\u304c\u4eca\u56de\u306e\u76ee\u7684\u3067\u3059\n\n\n#\u3069\u3046\u3084\u3063\u3066D\u8a00\u8a9e\u3067\u3084\u308b\u304b\n\u30b3\u30ec\u3092D\u8a00\u8a9e\u3067\u5b9f\u88c5\u3059\u308b\u306b\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u7528\u3044\u3066\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u305d\u308c\u3092mixin\u3059\u308b\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u7528\u3044\u307e\u3059\u3002\nD\u8a00\u8a9e\u3067\u306f`mixin`\u3068\u3044\u3046\u3082\u306e\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30b3\u30fc\u30c9\u4e2d\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092D\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u89e3\u91c8\u3057\u305d\u308c\u3092\u305d\u306e\u5834\u306b\u57cb\u3081\u8fbc\u3080\u3001\u5c55\u958b\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u3064\u307e\u308a\n\n```D\nint x;\nmixin(\"x = 1 + 2;\");\nassert(x == 3);\n```\n\n\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30b3\u30ec\u3092\u3069\u3046\u3064\u304b\u3063\u3066\u5b9f\u88c5\u3059\u308b\u304b\u3001\u3067\u3059\u304c\n\u65b9\u91dd\u3068\u3057\u3066\u306f\n\n* \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064Class\u3092\u57fa\u5e95\u30af\u30e9\u30b9A\u3068\u3059\u308b\n* \u57fa\u5e95\u30af\u30e9\u30b9A\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9B\u3092\u751f\u6210\u3059\u308b\n* \u30af\u30e9\u30b9B\u306e\u4e2d\u306boverride\u3057\u305f\u95a2\u6570\u3092\u57cb\u3081\u8fbc\u3080\n\n\u3053\u308c\u3092\u3059\u3079\u3066\u6587\u5b57\u5217\u306e\u4e2d\u3067\u884c\u3063\u3066\u3001\u5b8c\u6210\u3057\u305f\u3082\u306e\u3092mixin\u3059\u308b\u65b9\u91dd\u3067\u3059\u3002\n\n\u3064\u307e\u308a\n\n```D\nmixin(\"class T {}\");\nvoid main() {\n  T t = new T;\n}\n```\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u306e\u3053\u3068\u3092\u3057\u307e\u3059\u3002\n\n\n#\u8ab2\u984c\n\u3053\u308c\u3001\u4e00\u898b\u3059\u308b\u3068\u7c21\u5358\u3067\u3059\n\n`bodyString`\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30b3\u30fc\u30c9\u3092\u5165\u3063\u3066\u3044\u308b\u3068\u3057\u3066\n\n```D\nstring mixinString =\n  \"class T2 : T1 {\"\n~    bodyString\n~  \"}\";\n```\n\n\u3053\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\u3053\u308c\u306a\u3089\u5358\u7d14\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u4e8b\u306f\u305d\u3046\u5358\u7d14\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u611f\u306e\u826f\u3044\u65b9\u306f\u6c17\u304c\u3064\u3044\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u3046\u3067\u3059\u3002super\u3092\u547c\u3076\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u305d\u308c\u3067\u3001super\u304c\u5fc5\u8981\u3067\u3042\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u767a\u751f\u3059\u308b\u8ab2\u984c\u306f\nsuper\u306e\u5f15\u6570\u3092\u3069\u3046\u6e21\u3059\u304b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\n\u4eca\u56de\u306f\u3001\u90fd\u5408\u306b\u3088\u308a\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u65b9\u306esuper\u3092\u547c\u3076\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u3001super\u3092\u547c\u3076\u3060\u3051\u3001\u306b\u3057\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\n\n```D\nthis() {\n  super();\n}\n//or\nthis (ArgType1 value1, ArgType2 value2) {\n  super(value1, value2);\n}\n```\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3059\u3002\n\n\n\u3053\u3053\u3067\u3001\u5f15\u6570\u306f`std.typecons.Tuple`\u3092\u7528\u3044\u3066\u6e21\u3059\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u76ee\u6307\u3059\u5148\u3092\u793a\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\nT1\u3068\u3044\u3046\u30af\u30e9\u30b9\u306efunc\u3068\u3044\u3046\u95a2\u6570\u3092override\u3057\u305f\u3044\u3082\u306e\u3068\u3057\u307e\u3059\n\n\u3067\u306f\u3001T1\u306b\u3064\u3044\u3066\n\n```D\nclass T1 {\n  this(string v) {\n    writeln(\"T1 - \", v);\n  }\n\n  void func() {}\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\n\u3053\u3053\u3067\u3001\u3053\u308c\u3092\u7d99\u627f\u3057\u305fT2\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\u5b8c\u6210\u3057\u305fT2\u3092\u793a\u3057\u307e\u3059\n\n```D\nclass T2 : T1 {\n  this(string v) {\n    super(v);\n  }\n\n  override void func() {\n    writeln(\"Overrided T2.func!\");\n  }\n}\n```\n\n\u3053\u3093\u306a\u304b\u3093\u3058\u306e\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\n\u5b9f\u88c5\u3057\u305f\u5f8c\u306e\u3082\u306e\u3092\u4f7f\u3046\u3068\u3053\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\n\n```D\nT1 t = AnonymousClass!(\"T1\", q{\n        override void func() {\n          writeln(\"Overrided T2.func!\");\n        }\n      }, tuple(\"T2\"));\n```\n\n\u3053\u3053\u3067\u3001`\"T1\"`\u304c\u57fa\u5e95\u30af\u30e9\u30b9\u540d`BaseClassName`, `override\u301c`\u306e\u6587\u5b57\u5217\u3092\u5b9f\u88c5\u672c\u4f53\u306e`bodyString`, `tuple(\"T2)`\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570`arguments`\u3068\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u3067`arguments`\u3092\u7528\u3044\u3066\u4ee5\u4e0b\u306e\u6587\u5b57\u5217\u3092\u4f5c\u308c\u3070\u5f15\u6570\u3069\u3046\u3059\u308b\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3059\n\n* types : \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u306e\u578b\u306e\u914d\u5217(\u4f8b\u3048\u3070`[\"int\", \"int\"]`\u307f\u305f\u3044\u306a\u3082\u306e)\n* argumentLabels : \u5f15\u6570\u306e\u540d\u524d\u306e\u914d\u5217\n* argumentValues : \u5f15\u6570\u306e\u5b9f\u5f15\u6570\u3058\u6587\u5b57\u5217(\u4f8b\u3048\u3070\u3001`(1,2)`\u307f\u305f\u3044\u306a\u3082\u306e)\n* parameters : \u95a2\u6570\u5ba3\u8a00\u306e\u5f15\u6570\u30ea\u30b9\u30c8\u306e\u6587\u5b57\u5217(\u4f8b\u3048\u3070`(int x, int y)`\u307f\u305f\u3044\u306a\u3082\u306e)\n\n###types\u3092\u4f5c\u308b\n```D\nimmutable types = (temp) {\n        int i;\n        foreach (argument; arguments.Types) {\n          temp ~= (i ? \",\" : \"\") ~ argument.stringof;\n          i++;\n        }\n        return temp;\n      }(\"\").split(\",\");\n```\n\n###argumentLabels\u3092\u4f5c\u308b\n```D\nimmutable argumentLabels = arguments.length.iota.map!(i => \" arg\" ~ i.to!string).array;\n```\n\n###argumentValues\u3092\u4f5c\u308b\n```d\nimmutable argumentValues = arguments.stringof.replace(\"Tuple\", \"\");\n```\n\n###parameters\u3092\u4f5c\u308b\n```D\nimmutable parameters =\n  (temp =>\n    (Args) {\n      int i;\n      foreach (argument; arguments) {\n        temp ~= (i ? \",\" : \"\") ~ types[i].to!string ~ Args[i];\n        ++i;\n      }\n      return temp;\n    }(argumentLabels)\n  )(\"\");\n```\n\n\u3053\u3053\u307e\u3067\u5909\u6570\u3092\u7528\u3044\u3066\u4ee5\u4e0b\u306e\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u307e\u3059\n\n```D\n  \"() {\"\n~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n~     \"this(\" ~ parameters ~ \") {\"\n~       \"super(\" ~ argumentLabels ~ \");\"\n~     \"}\"\n~     bodyString\n~   \"}\"\n~   \"return new AnonymousClassMain(\" ~ argumentValues ~ \");\"\n~ \"}()\";\n```\n\n\u3053\u3053\u3067\u3001\u7121\u540d\u95a2\u6570\u306b\u3057\u3066\u308b\u306e\u306f\u3001\u5f8c\u306bmixin\u3059\u308b\u969b\u306b\u5f0f\u306e\u5024\u3068\u3057\u3066mixin\u3059\u308b\u306e\u3067\u3001\u4e00\u3064\u306e\u5024\u3068\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n\n#\u5b8c\u6210\u54c1\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\n\u4ee5\u4e0a\u3092\u307e\u3068\u3081\u3066\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u304c\u306a\u3044\u5834\u5408\u306f3\u3064\u3081\u306e`arguments`\u3092\u7701\u7565\u53ef\u80fd\u306b\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\n\n```D\nimport std.algorithm,\n       std.typecons,\n       std.string,\n       std.array,\n       std.range,\n       std.conv;\n\ntemplate AnonymousClassImpl(\n    string BaseClassName,\n    string bodyString,\n    alias arguments = tuple()\n  ) {\n  enum AnonymousClassImpl = () {\n    \n    string generateString(\n          string parameters      = null,\n          string argumentLabels  = null,\n          string argumentValues  = null\n        ) {\n      if (\n          parameters     !is null\n       && argumentLabels !is null\n       && argumentValues !is null) {\n        return \n          \"() {\"\n        ~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n        ~     \"this(\" ~ parameters ~ \") {\"\n        ~       \"super(\" ~ argumentLabels ~ \");\"\n        ~     \"}\"\n        ~     bodyString\n        ~   \"}\"\n        ~   \"return new AnonymousClassMain(\" ~ argumentValues ~ \");\"\n        ~ \"}()\";\n      } else {\n        return \n          \"() {\"\n        ~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n        ~     \"this() {\"\n        ~       \"super();\"\n        ~     \"}\"\n        ~     bodyString\n        ~   \"}\"\n        ~   \"return new AnonymousClassMain();\"\n        ~ \"}()\";\n      }\n    }\n    \n    static if (arguments.length == 0) {\n      return generateString;\n    } else {\n      immutable types = (temp) {\n        int i;\n        foreach (argument; arguments.Types) {\n          temp ~= (i ? \",\" : \"\") ~ argument.stringof;\n          i++;\n        }\n        return temp;\n      }(\"\").split(\",\");\n      immutable argumentLabels = arguments.length.iota.map!(i => \" arg\" ~ i.to!string).array;\n      immutable argumentValues = arguments.stringof.replace(\"Tuple\", \"\");\n      immutable parameters =\n        (temp =>\n          (Args) {\n            int i;\n            foreach (argument; arguments) {\n              temp ~= (i ? \",\" : \"\") ~ types[i].to!string ~ Args[i];\n              ++i;\n            }\n            return temp;\n          }(argumentLabels)\n        )(\"\");\n\n      return generateString(\n            parameters,\n            argumentLabels.join(\",\"),\n            argumentValues\n          );\n    }\n  }();\n}\n\nauto AnonymousClass(\n      string BaseClassName,\n      string bodyString,\n      alias arguments = tuple()\n    )() {\n  static if (arguments.length == 0) {\n    return mixin(AnonymousClassImpl!(BaseClassName, bodyString));\n  } else {\n    return mixin(AnonymousClassImpl!(BaseClassName, bodyString, arguments));\n  }\n}\n\nimport std.stdio;\n\nclass T1 {\n  this(string v) {\n    writeln(\"T1! - \", v);\n  }\n\n  void func() {}\n}\n\nclass Tx1 {\n  this() {\n    writeln(\"Tx1\");\n  }\n  void func() {}\n}\n\nvoid main() {\n  T1 t = AnonymousClass!(\"T1\", q{\n        override void func() {\n          writeln(\"Overrided T2.func!\");\n        }\n      },\n      tuple(\"T2\"));\n  Tx1 tx = AnonymousClass!(\"Tx1\", q{\n      override void func() {\n          writeln(\"Overrided Tx2.func!\");\n        }\n      });\n  t.func;\n  tx.func;\n}\n```\n\n#D\u306b\u3082\u7121\u540d\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u3068\u3044\u3046\u8a71\n\u30b3\u30ec\u3092\u6628\u591c\u5b9f\u88c5\u3057\u3066\u3001\u4eca\u671d\u8d77\u304d\u3066\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u59cb\u3081\u305f\u6642\u306b\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u305f`Gist`\u3092\u898b\u306b\u884c\u3063\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3067D\u306b\u3082\u7121\u540d\u30af\u30e9\u30b9\u304c\u3042\u308b\u3053\u3068\u3092\u6559\u3048\u3066\u3082\u3089\u3044\u307e\u3057\u305f...\n\u4e0a\u306e\u30b3\u30fc\u30c9\u306f\u4e0b\u306e\u30b3\u30fc\u30c9\u3068\u7b49\u4fa1\u3067\u3059(\u5185\u90e8\u306e\u5b9f\u88c5\u306a\u3069\u306f\u7570\u306a\u308a\u307e\u3059\u304c\u540c\u3058\u6319\u52d5\u3092\u3057\u307e\u3059...)\n\n```d\nimport std.stdio;\n\nclass T1 {\n  this(string v) {\n    writeln(\"T1! - \", v);\n  }\n\n  void func() {}\n}\n\nclass Tx1 {\n  this() {\n    writeln(\"Tx1\");\n  }\n\n  void func() {}\n}\n\nvoid main() {\n  T1 t = new class() T1 {\n    this() {\n      super(\"T2\");\n    }\n\n    override void func() {\n      writeln(\"Overrided T2.func!\");\n    }\n  };\n\n  Tx1 tx = new class() Tx1 {\n    this() {\n      super();\n    }\n\n    override void func() {\n      writeln(\"Overrided Tx2.func!\");\n    }\n  };\n  \n  t.func;\n  tx.func;\n}\n```\n\n\u306f\u3044\u3001\u30b3\u30ec\u3092\u4f7f\u3048\u3070D\u8a00\u8a9e\u306e\u6a19\u6e96\u6a5f\u80fd\u3067\u7121\u540d\u30af\u30e9\u30b9\u304c\u4f7f\u3048\u307e\u3059\u306d(\u6d99) (\u4ed6\u306b\u3082\u81ea\u5206\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u66f8\u3051\u308b\u306e\u3067\u305d\u306e\u5206\u306e\u81ea\u7531\u5ea6\u306f\u9ad8\u3044\u3067\u3059\u306d...(\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u30b3\u30fc\u30c9\u3092\u81ea\u5206\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u3082\u51fa\u6765\u307e\u3059\u304c\u3001\u305d\u306e\u5206\u5f15\u6570\u304c\u5897\u3048\u3066\u3057\u307e\u3063\u3066\u9762\u5012\u306b\u306a\u308b\u306e\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u5236\u9650\u3092\u52a0\u3048\u307e\u3057\u305f))\n\u3067\u3082\u307e\u3041\u3001D\u8a00\u8a9e\u306e\u9ed2\u9b54\u8853(\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u6587\u5b57\u5217\u64cd\u4f5c)\u306e\u52c9\u5f37\u306b\u306a\u3063\u305f\u306e\u3067\u3044\u3044\u3068\u3057\u3088\u3046...\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u4ee5\u4e0a\u3067\u3059\n", "tags": ["dlang", "D\u8a00\u8a9e", "Java"]}