{"context": " More than 1 year has passed since last update.\u300c\u30ec\u30c3\u30b9\u30f3\u306f\u4f55\u66dc\u65e5\uff1f\u300d\u3092Factor\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u4ed6\u306e\u7686\u69d8\u306b\u3088\u308b\u5b9f\u88c5\u306f \u7b2c21\u56de\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\u306e\u554f\u984c \u304b\u3089\u8fbf\u308c\u307e\u3059\u3002\n\u6b21\u306e\u3088\u3046\u306a\u65b9\u91dd\u3067\u89e3\u304d\u307e\u3057\u305f\u3002\n\n\u5404\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u6700\u512a\u5148\u3067\u5e0c\u671b\u3057\u3066\u3044\u308b\u793e\u54e1\u3092\u914d\u5c5e\u3059\u308b\n\u5404\u30af\u30e9\u30b9\u3092\u5148\u982d4\u4eba\u3060\u3051\u306b\u7d5e\u308b\n\u914d\u5c5e\u3055\u308c\u5148\u982d4\u4eba\u306b\u5165\u3063\u305f\u4eba\u3092\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\u3059\u308b\n\u672a\u914d\u5c5e\u306e\u4eba\u306e\u5e0c\u671b\u30af\u30e9\u30b9\u306e1\u756a\u76ee\u3092\u6d88\u3057\u30012\u756a\u76ee\u30921\u756a\u76ee\u306b\u79fb\u52d5\u3059\u308b\n\u5168\u54e1\u306e\u5e0c\u671b\u30af\u30e9\u30b9\u304c\u306a\u304f\u306a\u308b\u307e\u3067\u30011\u306e\u624b\u9806\u306b\u623b\u3063\u3066\u7e70\u308a\u8fd4\u3059\n\n\n21lesson.factor\nUSING: kernel sequences sequences.deep math math.order math.parser\n       arrays splitting assocs sorting ;\nIN: 21lesson\n\n! \u5e0c\u671b\u30ea\u30b9\u30c8\u304b\u3089\u914d\u5c5e\u5019\u88dc\u3092\u6c42\u3081\u308b\n: wish-list>candidate ( wish-list -- candidate )\n    { 1 2 3 4 5 } swap [\n        [ second first over = ] filter\n        [ first ] map swap drop\n    ] curry map ;\n\n! \u5148\u982d4\u3064\u3060\u3051\u306b\u3059\u308b\n: only4 ( seq -- seq ) dup length 4 min head ;\n\n! \u914d\u5c5e\u30ea\u30b9\u30c8\u306b\u5019\u88dc\u3092\u8ffd\u52a0\u3059\u308b\n: append-candidate-to-assigned ( assigned candidate -- assigned' )\n    [ append only4 ] 2map ;\n\n! \u914d\u5c5e\u3055\u308c\u305f\u793e\u54e1\u3092\u5e0c\u671b\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\u3059\u308b\n: delete-assigned-from-wish-list ( assigned wish-list -- wish-list' )\n    swap flatten [ swap first swap index not ] curry filter ;\n\n! \u5e0c\u671b\u30ea\u30b9\u30c8\u306e\u9806\u4f4d\u3092\u7e70\u308a\u4e0a\u3052\u308b\n: shift-wish-list ( wish-list -- wish-list' )\n    [ dup first swap second rest { } 2sequence ] map ;\n\n! \u6700\u3082\u9ad8\u3044\u5e0c\u671b\u3092\u914d\u5c5e\u3059\u308b\n: assign-first-wish ( assigned wish-list -- assigned' wish-list' )\n    [ wish-list>candidate append-candidate-to-assigned ] keep\n    dupd delete-assigned-from-wish-list\n    shift-wish-list ;\n\n! \u914d\u5c5e\u3059\u308b\n: assign-wish ( wish-list -- assigned )\n    { { 0 { 0 0 0 0 0 } } } append\n    5 { } <array> swap\n    5 [ assign-first-wish ] times\n    drop ;\n\n! \u5165\u529b\u6587\u5b57\u5217\u3092\u5e0c\u671b\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n: >wish-list ( str -- wish-list )\n    \"|\" split [ \"_\" split [ first string>number ]\n        [ second [ digit> ] { } map-as ] bi { } 2sequence ] map ;\n\n! \u914d\u5c5e\u30ea\u30b9\u30c8\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n: assigned>string ( assigned -- str )\n    { 1 2 3 4 5 } swap zip\n    [ second length 0 = not ] filter\n    [\n        dup first number>string \"_\" append\n        swap second natural-sort\n        [ number>string ] map \":\" join append\n    ] map \"|\" join ;\n\n! \u89e3\u304f\n: solve ( str -- str ) >wish-list assign-wish assigned>string ;\n\n\nFactor\u3092\u59cb\u3081\u307e\u3057\u305f\u3002\u81ea\u5206\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306a\u306e\u306b\u6570\u65e5\u7d4c\u3063\u305f\u3089\u8aad\u3081\u307e\u305b\u3093 (^^;)\nFactor\u306f\u9023\u9396\u6027\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304c func(arg1, arg2) \u3084 (func arg1 arg2) \u3068\u3044\u3046\u8a9e\u9806\u306a\u306e\u306b\u5bfe\u3057\u3066\u3001Forth\u3092\u59cb\u3081\u3068\u3059\u308b\u9023\u9396\u6027\u8a00\u8a9e\u306f arg1 arg2 func \u3068\u3044\u3046\u8a9e\u9806\u3067\u66f8\u304d\u307e\u3059\u3002\u901a\u5e38\u306f\u5909\u6570\u3092\u4f7f\u308f\u305a\u3001\u5f15\u6570\u3092\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u3093\u3067\u95a2\u6570(\u30ef\u30fc\u30c9)\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u7d50\u679c\u304c\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307e\u308c\u3066\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002JVM(Java\u4eee\u60f3\u30de\u30b7\u30f3)\u306e\u30cb\u30fc\u30e2\u30cb\u30c3\u30af\u3092\u76f4\u63a5\u66f8\u3044\u3066\u3044\u308b\u96f0\u56f2\u6c17\u3067\u3059\u304c\u3001\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3(\u7121\u540d\u95a2\u6570)\u3092\u4f7f\u3063\u305fmap\u3084filter\u306a\u3069\u3001\u95a2\u6570\u578b\u8a00\u8a9e\u306b\u4f3c\u3066\u3044\u308b\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u3002\n\u300c[\u30ec\u30c3\u30b9\u30f3\u306f\u4f55\u66dc\u65e5\uff1f](http://d.hatena.ne.jp/torazuka/20140509/yhpg)\u300d\u3092Factor\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u4ed6\u306e\u7686\u69d8\u306b\u3088\u308b\u5b9f\u88c5\u306f [\u7b2c21\u56de\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\u306e\u554f\u984c](http://qiita.com/torazuka/items/cbdb6b581a57e4754dd4) \u304b\u3089\u8fbf\u308c\u307e\u3059\u3002\n\n\u6b21\u306e\u3088\u3046\u306a\u65b9\u91dd\u3067\u89e3\u304d\u307e\u3057\u305f\u3002\n\n1. \u5404\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u6700\u512a\u5148\u3067\u5e0c\u671b\u3057\u3066\u3044\u308b\u793e\u54e1\u3092\u914d\u5c5e\u3059\u308b\n1. \u5404\u30af\u30e9\u30b9\u3092\u5148\u982d4\u4eba\u3060\u3051\u306b\u7d5e\u308b\n1. \u914d\u5c5e\u3055\u308c\u5148\u982d4\u4eba\u306b\u5165\u3063\u305f\u4eba\u3092\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\u3059\u308b\n1. \u672a\u914d\u5c5e\u306e\u4eba\u306e\u5e0c\u671b\u30af\u30e9\u30b9\u306e1\u756a\u76ee\u3092\u6d88\u3057\u30012\u756a\u76ee\u30921\u756a\u76ee\u306b\u79fb\u52d5\u3059\u308b\n1. \u5168\u54e1\u306e\u5e0c\u671b\u30af\u30e9\u30b9\u304c\u306a\u304f\u306a\u308b\u307e\u3067\u30011\u306e\u624b\u9806\u306b\u623b\u3063\u3066\u7e70\u308a\u8fd4\u3059\n\n```factor:21lesson.factor\nUSING: kernel sequences sequences.deep math math.order math.parser\n       arrays splitting assocs sorting ;\nIN: 21lesson\n\n! \u5e0c\u671b\u30ea\u30b9\u30c8\u304b\u3089\u914d\u5c5e\u5019\u88dc\u3092\u6c42\u3081\u308b\n: wish-list>candidate ( wish-list -- candidate )\n    { 1 2 3 4 5 } swap [\n        [ second first over = ] filter\n        [ first ] map swap drop\n    ] curry map ;\n\n! \u5148\u982d4\u3064\u3060\u3051\u306b\u3059\u308b\n: only4 ( seq -- seq ) dup length 4 min head ;\n\n! \u914d\u5c5e\u30ea\u30b9\u30c8\u306b\u5019\u88dc\u3092\u8ffd\u52a0\u3059\u308b\n: append-candidate-to-assigned ( assigned candidate -- assigned' )\n    [ append only4 ] 2map ;\n\n! \u914d\u5c5e\u3055\u308c\u305f\u793e\u54e1\u3092\u5e0c\u671b\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\u3059\u308b\n: delete-assigned-from-wish-list ( assigned wish-list -- wish-list' )\n    swap flatten [ swap first swap index not ] curry filter ;\n\n! \u5e0c\u671b\u30ea\u30b9\u30c8\u306e\u9806\u4f4d\u3092\u7e70\u308a\u4e0a\u3052\u308b\n: shift-wish-list ( wish-list -- wish-list' )\n    [ dup first swap second rest { } 2sequence ] map ;\n\n! \u6700\u3082\u9ad8\u3044\u5e0c\u671b\u3092\u914d\u5c5e\u3059\u308b\n: assign-first-wish ( assigned wish-list -- assigned' wish-list' )\n    [ wish-list>candidate append-candidate-to-assigned ] keep\n    dupd delete-assigned-from-wish-list\n    shift-wish-list ;\n\n! \u914d\u5c5e\u3059\u308b\n: assign-wish ( wish-list -- assigned )\n    { { 0 { 0 0 0 0 0 } } } append\n    5 { } <array> swap\n    5 [ assign-first-wish ] times\n    drop ;\n\n! \u5165\u529b\u6587\u5b57\u5217\u3092\u5e0c\u671b\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n: >wish-list ( str -- wish-list )\n    \"|\" split [ \"_\" split [ first string>number ]\n        [ second [ digit> ] { } map-as ] bi { } 2sequence ] map ;\n\n! \u914d\u5c5e\u30ea\u30b9\u30c8\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n: assigned>string ( assigned -- str )\n    { 1 2 3 4 5 } swap zip\n    [ second length 0 = not ] filter\n    [\n        dup first number>string \"_\" append\n        swap second natural-sort\n        [ number>string ] map \":\" join append\n    ] map \"|\" join ;\n\n! \u89e3\u304f\n: solve ( str -- str ) >wish-list assign-wish assigned>string ;\n```\n\n[Factor](http://factorcode.org/)\u3092\u59cb\u3081\u307e\u3057\u305f\u3002\u81ea\u5206\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306a\u306e\u306b\u6570\u65e5\u7d4c\u3063\u305f\u3089\u8aad\u3081\u307e\u305b\u3093 (^^;)\n\nFactor\u306f\u9023\u9396\u6027\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304c `func(arg1, arg2)` \u3084 `(func arg1 arg2)` \u3068\u3044\u3046\u8a9e\u9806\u306a\u306e\u306b\u5bfe\u3057\u3066\u3001Forth\u3092\u59cb\u3081\u3068\u3059\u308b\u9023\u9396\u6027\u8a00\u8a9e\u306f `arg1 arg2 func` \u3068\u3044\u3046\u8a9e\u9806\u3067\u66f8\u304d\u307e\u3059\u3002\u901a\u5e38\u306f\u5909\u6570\u3092\u4f7f\u308f\u305a\u3001\u5f15\u6570\u3092\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u3093\u3067\u95a2\u6570(\u30ef\u30fc\u30c9)\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u7d50\u679c\u304c\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307e\u308c\u3066\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002JVM(Java\u4eee\u60f3\u30de\u30b7\u30f3)\u306e\u30cb\u30fc\u30e2\u30cb\u30c3\u30af\u3092\u76f4\u63a5\u66f8\u3044\u3066\u3044\u308b\u96f0\u56f2\u6c17\u3067\u3059\u304c\u3001\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3(\u7121\u540d\u95a2\u6570)\u3092\u4f7f\u3063\u305fmap\u3084filter\u306a\u3069\u3001\u95a2\u6570\u578b\u8a00\u8a9e\u306b\u4f3c\u3066\u3044\u308b\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u3002\n", "tags": ["yhpg", "Factor", "\u3069\u3046\u66f8\u304f"]}