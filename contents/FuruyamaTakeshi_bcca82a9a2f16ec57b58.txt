{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nUICollectionview\u3092pagingEnable = true\u3067Page\u9593\u306e\u30bb\u30eb\u306e\u4f4d\u7f6e\u30ba\u30ec\u3092\u767a\u751f\u3055\u305b\u306a\u3044\u3067Paging\u3059\u308b\u65b9\u6cd5\u306e\u7d39\u4ecb\u3067\u3059\u3002\n\n\n\n\u73fe\u72b6\u306e\u554f\u984c\u70b9\n\u30da\u30fc\u30b8\u30f3\u30b0\u3057\u3066\u3044\u304f\u3068\u3001\u521d\u671f\u4f4d\u7f6e\u304c\u5c11\u3057\u305a\u3064\u305a\u308c\u3066\u3044\u304f(\u4e0b\u56f3\u53c2\u7167)\u3002\n\n\n\n\u5236\u9650\u4e8b\u9805\n1\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u307f\u5bfe\u5fdc\u3067\u3059\u3002\n\n\u5bfe\u5fdc\u65b9\u6cd5\nUICollectionFlowLayout\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u5185\u3067\u6bce\u56de\u3001layout\u51e6\u7406\u3092\n\u884c\u3046\u3002\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\n1)cell\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\u3002\n2)\u8868\u793a\u30a6\u30a4\u30f3\u30c9\u30a6\u5185\u306b\u53ce\u307e\u308brow\u3001column\u6570\u3092\u7b97\u51fa\u3059\u308b\u3002\n3)x, y\u8ef8\u65b9\u5411\u30de\u30fc\u30b8\u30f3\u3092\u8a08\u7b97\u3059\u308b\u3002\nx\u8ef8\u65b9\u5411\u30de\u30fc\u30b8\u30f3 = {\u30b3\u30f3\u30c6\u30f3\u30c8\u30b5\u30a4\u30ba.width - (cell\u5e45 * column\u6570) - (columnCont > 1 ? (columnCont - 1)*minimumLineSpacing}/2.0\ny\u8ef8\u65b9\u5411\u30de\u30fc\u30b8\u30f3 = {\u30b3\u30f3\u30c6\u30f3\u30c8\u30b5\u30a4\u30ba.height - (cell\u9ad8 * row\u6570) - (rowCount > 1 ? (rowCount - 1) * minimumInteritemSpacing}/2.0\n4)\u30da\u30fc\u30b8\u6bceindex\u3092\u8a08\u7b97\u3059\u308b\u3002\nindex = \u30bb\u30ebindex%(rowCount*columnCount)\n\u30da\u30fc\u30b8\u5185\u306erow,col\u756a\u53f7\u30002\u884c3\u5217\u3068\u3044\u3046\u611f\u3058\u3067\nrow = index\uff05rowCount\ncol = index/rowCount\n5)\u914d\u7f6e\u4f4d\u7f6e\u3092\u8a08\u7b97\u3057\u3066CGRect\u3067\u30bb\u30c3\u30c8\u3059\u308b\u3002\n6)\u30da\u30fc\u30b8\u30f3\u30b0\u91cf\u3092\u8a08\u7b97\u3057\u3066origin.x\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\u5b9f\u88c5\u306f\u4ee5\u4e0b\nprivate func frameForItemAtIndexPath(indexPath: NSIndexPath) -> CGRect {\n    // 1)\n    let canvasSize = self.collectionView?.frame.size ?? CGSizeZero\n    // 2)\n    let rowCount =  floor((canvasSize.height - self.sectionInset.top - self.sectionInset.bottom) / (self.itemSize.height + self.minimumInteritemSpacing))\n    let columnCont = floor((canvasSize.width - self.sectionInset.left - self.sectionInset.right) / (self.itemSize.width + self.minimumLineSpacing))\n    // 3)\n    let pageMarginX = (canvasSize.width - columnCont * self.itemSize.width - (columnCont > 1 ? (columnCont - 1) * self.minimumLineSpacing : 0)) / 2.0\n    let pageMarginY = (canvasSize.height - rowCount * self.itemSize.height - (rowCount > 1 ? (rowCount - 1) * self.minimumInteritemSpacing : 0)) / 2.0\n    // 4)\n    let pageIndex = indexPath.row%Int(rowCount * columnCont)\n    let row     = pageIndex % Int(rowCount)\n    let column  = pageIndex / Int(rowCount)\n    // 5)\n    var cellFrame = CGRectZero\n    cellFrame.origin.x  = pageMarginX + CGFloat(column) * (self.itemSize.width + self.minimumLineSpacing)\n    cellFrame.origin.y  = pageMarginY + CGFloat(row) * (self.itemSize.height + self.minimumInteritemSpacing)\n    cellFrame.size.width    = self.itemSize.width\n    cellFrame.size.height   = self.itemSize.height\n    // 6)\n    if (self.scrollDirection == UICollectionViewScrollDirection.Horizontal) {\n        let page = floor(CGFloat(indexPath.row)/(rowCount * columnCont))\n        cellFrame.origin.x += canvasSize.width * page\n    }\n\n    return cellFrame\n}\n\noverride func layoutAttributesForItemAtIndexPath(indexPath: NSIndexPath) -> UICollectionViewLayoutAttributes! {\n    let attr = super.layoutAttributesForItemAtIndexPath(indexPath)\n    attr.frame = self.frameForItemAtIndexPath(indexPath)\n    return attr\n}\n\noverride func layoutAttributesForElementsInRect(rect: CGRect) -> [AnyObject]? {\n    var attrs = [AnyObject]()\n    if let originAttrs = super.layoutAttributesForElementsInRect(rect) {\n        for var index = 0; index < self.collectionView?.numberOfItemsInSection(0); index++ {\n            let indexPath = NSIndexPath(forRow: index, inSection: 0)\n            let itemFrame = self.frameForItemAtIndexPath(indexPath)\n            if CGRectIntersectsRect(itemFrame, rect) {\n                let attr = self.layoutAttributesForItemAtIndexPath(indexPath)\n                attrs.append(attr)\n            }\n        }\n    }\n    return attrs\n}\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nUICollectionView align logic missing in horizontal paging scrollview\n\n#\u6982\u8981\nUICollectionview\u3092`pagingEnable = true`\u3067Page\u9593\u306e\u30bb\u30eb\u306e\u4f4d\u7f6e\u30ba\u30ec\u3092\u767a\u751f\u3055\u305b\u306a\u3044\u3067Paging\u3059\u308b\u65b9\u6cd5\u306e\u7d39\u4ecb\u3067\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-07-22 1.49.11.png](https://qiita-image-store.s3.amazonaws.com/0/43254/50611b97-6c72-d84b-631e-80a340eae9ce.png)\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-07-22 1.49.14.png](https://qiita-image-store.s3.amazonaws.com/0/43254/ff5ab295-aa5b-3581-c900-8e24d8430bf7.png)\n\n\n#\u73fe\u72b6\u306e\u554f\u984c\u70b9\n\u30da\u30fc\u30b8\u30f3\u30b0\u3057\u3066\u3044\u304f\u3068\u3001\u521d\u671f\u4f4d\u7f6e\u304c\u5c11\u3057\u305a\u3064\u305a\u308c\u3066\u3044\u304f(\u4e0b\u56f3\u53c2\u7167)\u3002\n\n![image0.png](https://qiita-image-store.s3.amazonaws.com/0/43254/8c64e33f-3e99-557f-a5cf-9404f99cc957.png)\n![image1.png](https://qiita-image-store.s3.amazonaws.com/0/43254/825dadeb-0e22-aa1f-6eb8-46dd69b0c7af.png)\n\n#\u5236\u9650\u4e8b\u9805\n1\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u307f\u5bfe\u5fdc\u3067\u3059\u3002\n\n# \u5bfe\u5fdc\u65b9\u6cd5\nUICollectionFlowLayout\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u5185\u3067\u6bce\u56de\u3001layout\u51e6\u7406\u3092\n\u884c\u3046\u3002\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\n1)cell\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\u3002\n2)\u8868\u793a\u30a6\u30a4\u30f3\u30c9\u30a6\u5185\u306b\u53ce\u307e\u308brow\u3001column\u6570\u3092\u7b97\u51fa\u3059\u308b\u3002\n3)x, y\u8ef8\u65b9\u5411\u30de\u30fc\u30b8\u30f3\u3092\u8a08\u7b97\u3059\u308b\u3002\nx\u8ef8\u65b9\u5411\u30de\u30fc\u30b8\u30f3 = {\u30b3\u30f3\u30c6\u30f3\u30c8\u30b5\u30a4\u30ba.width - (cell\u5e45 * column\u6570) - (columnCont > 1 ? (columnCont - 1)*minimumLineSpacing}/2.0\ny\u8ef8\u65b9\u5411\u30de\u30fc\u30b8\u30f3 = {\u30b3\u30f3\u30c6\u30f3\u30c8\u30b5\u30a4\u30ba.height - (cell\u9ad8 * row\u6570) - (rowCount > 1 ? (rowCount - 1) * minimumInteritemSpacing}/2.0\n\n4)\u30da\u30fc\u30b8\u6bceindex\u3092\u8a08\u7b97\u3059\u308b\u3002\nindex = \u30bb\u30ebindex%(rowCount*columnCount)\n\u30da\u30fc\u30b8\u5185\u306erow,col\u756a\u53f7\u30002\u884c3\u5217\u3068\u3044\u3046\u611f\u3058\u3067\nrow = index\uff05rowCount\ncol = index/rowCount\n\n5)\u914d\u7f6e\u4f4d\u7f6e\u3092\u8a08\u7b97\u3057\u3066CGRect\u3067\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\n6)\u30da\u30fc\u30b8\u30f3\u30b0\u91cf\u3092\u8a08\u7b97\u3057\u3066origin.x\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\n\u5b9f\u88c5\u306f\u4ee5\u4e0b\n\n```swift\nprivate func frameForItemAtIndexPath(indexPath: NSIndexPath) -> CGRect {\n    // 1)\n    let canvasSize = self.collectionView?.frame.size ?? CGSizeZero\n    // 2)\n    let rowCount =  floor((canvasSize.height - self.sectionInset.top - self.sectionInset.bottom) / (self.itemSize.height + self.minimumInteritemSpacing))\n    let columnCont = floor((canvasSize.width - self.sectionInset.left - self.sectionInset.right) / (self.itemSize.width + self.minimumLineSpacing))\n    // 3)\n    let pageMarginX = (canvasSize.width - columnCont * self.itemSize.width - (columnCont > 1 ? (columnCont - 1) * self.minimumLineSpacing : 0)) / 2.0\n    let pageMarginY = (canvasSize.height - rowCount * self.itemSize.height - (rowCount > 1 ? (rowCount - 1) * self.minimumInteritemSpacing : 0)) / 2.0\n    // 4)\n    let pageIndex = indexPath.row%Int(rowCount * columnCont)\n    let row     = pageIndex % Int(rowCount)\n    let column  = pageIndex / Int(rowCount)\n    // 5)\n    var cellFrame = CGRectZero\n    cellFrame.origin.x  = pageMarginX + CGFloat(column) * (self.itemSize.width + self.minimumLineSpacing)\n    cellFrame.origin.y  = pageMarginY + CGFloat(row) * (self.itemSize.height + self.minimumInteritemSpacing)\n    cellFrame.size.width    = self.itemSize.width\n    cellFrame.size.height   = self.itemSize.height\n    // 6)\n    if (self.scrollDirection == UICollectionViewScrollDirection.Horizontal) {\n        let page = floor(CGFloat(indexPath.row)/(rowCount * columnCont))\n        cellFrame.origin.x += canvasSize.width * page\n    }\n    \n    return cellFrame\n}\n```\n\n\n```swift\noverride func layoutAttributesForItemAtIndexPath(indexPath: NSIndexPath) -> UICollectionViewLayoutAttributes! {\n    let attr = super.layoutAttributesForItemAtIndexPath(indexPath)\n    attr.frame = self.frameForItemAtIndexPath(indexPath)\n    return attr\n}\n\noverride func layoutAttributesForElementsInRect(rect: CGRect) -> [AnyObject]? {\n    var attrs = [AnyObject]()\n    if let originAttrs = super.layoutAttributesForElementsInRect(rect) {\n        for var index = 0; index < self.collectionView?.numberOfItemsInSection(0); index++ {\n            let indexPath = NSIndexPath(forRow: index, inSection: 0)\n            let itemFrame = self.frameForItemAtIndexPath(indexPath)\n            if CGRectIntersectsRect(itemFrame, rect) {\n                let attr = self.layoutAttributesForItemAtIndexPath(indexPath)\n                attrs.append(attr)\n            }\n        }\n    }\n    return attrs\n}\n```\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](https://github.com/FuruyamaTakeshi/PagingCollectionView)\n#\u53c2\u8003\u30b5\u30a4\u30c8\n[UICollectionView align logic missing in horizontal paging scrollview](http://stackoverflow.com/questions/13228600/uicollectionview-align-logic-missing-in-horizontal-paging-scrollview)\n", "tags": ["Swift,", "iOS,", "UICollectionView", "UICollectionViewFlowLayout", "paging"]}