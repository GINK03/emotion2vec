{"context": " More than 1 year has passed since last update.\u9045\u308c\u307e\u3057\u305f\u304c\u3001\u30d6\u30ed\u30c3\u30af\u5d29\u3057\u304c\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002\n\u5148\u65e5\u5c0e\u5165\u3057\u305fSDL\u3092\u4f7f\u3063\u3066\u52b9\u679c\u97f3\u3082\u3064\u3051\u308c\u305f\u306e\u3067\u3001\u5f62\u306b\u306f\u306a\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\nSEplay\u3068\u3044\u3046\u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\nsedicision\u3068\u3044\u3046\u52b9\u679c\u97f3\u7ba1\u7406\u306e\u305f\u3081\u306e\u5909\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n#ifndef BLOCK_H_\n#define BLOCK_H_\n\n    void player();\n\n    int px = 320; // \u30d0\u30fc\u306e\u57fa\u6e96x\u5ea7\u6a19\n    int py = 430; // \u30d0\u30fc\u306e\u57fa\u6e96y\u5ea7\u6a19\n    int pmovex;   // \u30d0\u30fc\u306e\u79fb\u52d5\u5024\n\n\n\n    int bx = 320;   // \u30dc\u30fc\u30eb\u306ex\u5ea7\u6a19\n    int by = 414;   // \u30dc\u30fc\u30eb\u306ey\u5ea7\u6a19\n    int l  = 1;     // x\u8ef8\u53cd\u5c04\u89d2\u5909\u6570\u306e\u7b26\u53f7\u5224\u5b9a\n    int ll = -1;    // y\u8ef8\u53cd\u5c04\u89d2\u5909\u6570\u306e\u7b26\u53f7\u5224\u5b9a\n    int movex = 0;  // \u30dc\u30fc\u30eb\u306ex\u8ef8\u5897\u6e1b\u5024\n    int movey = 0;  // \u30dc\u30fc\u30eb\u306ey\u8ef8\u5897\u6e1b\u5024\n    int mylife = 2; // \u81ea\u6a5f\u306e\u6b8b\u6a5f\n    int shoot = 0;      // \u6253\u3061\u51fa\u3059\u6642\u306e\u5224\u5b9a\n\n    int start = 0;      // \u30b9\u30bf\u30fc\u30c8\u5224\u5b9a\n    int gameover = 0;   // \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u5224\u5b9a\n    int clear = 0;      // \u30af\u30ea\u30a2\u5224\u5b9a\n\n    int leftm = 0;      // \u5de6\u79fb\u52d5\u306e\u5224\u5b9a\n    int rightm = 0;     // \u53f3\u79fb\u52d5\u306e\u5224\u5b9a\n    void allmove();     // \u5f3e\u3068\u81ea\u6a5f\u306e\u52d5\u304d\n\n    Mix_Music *music;\n    Mix_Chunk *se1, *se2, *se3, *se4 ,*clearSE, *gameoverSE;\n    int channel1, channel2, channel3, channel4, channel5, channel6;\n\n    int sedecision = 0; // \u53cd\u5c04\u97f3\u3092\u4ea4\u4e92\u306b\u9cf4\u3089\u3059\u305f\u3081\u306e\u5909\u6570\n    void SEplay();      // \u53cd\u5c04\u97f3\u3092\u4ea4\u4e92\u306b\u9cf4\u3089\u3059\u305f\u3081\u306e\u95a2\u6570\n\n    int cleari = 0;\n    int gameoveri = 0;\n\nclass Ball{\npublic:\n\n    int br ; // \u30dc\u30fc\u30eb\u306e\u534a\u5f84\n    int shotr; // \u30dc\u30fc\u30eb\u306e\u79fb\u52d5\u89d2\u5ea6\n    int shotdec; // \u6700\u521d\u306b\u767a\u5c04\u3059\u308b\u6642\u306b\u3001space\u30ad\u30fc\u3092\u62bc\u3057\u3066\u308b\u304b\u306e\u5224\u5b9a\n\n\n    bool setdec = true; // \u6570\u5024\u306e\u521d\u671f\u5316\u304c\u3067\u304d\u308b\u304b\u5224\u5b9a\n\n    void set();         // \u6570\u5024\u306e\u5165\u529b\n    void ball();        // \u30dc\u30fc\u30eb\u306e\u751f\u6210\n    void ballmove();    // \u30dc\u30fc\u30eb\u306e\u52d5\u304d\n    void reverse();     // \u30dc\u30fc\u30eb\u306e\u5f53\u305f\u308a\u5224\u5b9a\n\n    void ReverseBar();  // \u30d0\u30fc\u306e\u5f53\u305f\u308a\u5224\u5b9a\n};\n\nclass Block{\npublic:\n    int blockx = 40;        // \u30d6\u30ed\u30c3\u30af\u306e\u57fa\u6e96x\u5ea7\u6a19\n    int blocky = 20;        // \u30d6\u30ed\u30c3\u30af\u306e\u57fa\u6e96y\u5ea7\u6a19\n\n    int spownx = 70;        // \u751f\u6210\u6642\u306ex\u8ef8\u5dee\u5206\n    int spowny = 30;        // \u751f\u6210\u6642\u306ey\u8ef8\u5dee\u5206\n\n\n\n    void block(int Num, int hNum);          // \u30d6\u30ed\u30c3\u30af\u306e\u751f\u6210\n    void colorset(int Num);                 // \u30d6\u30ed\u30c3\u30af\u751f\u6210\u6642\u306e\u8272\u632f\u308a\u5206\u3051\n    void decision(int Num, int hNum);       // \u5f53\u305f\u308a\u5224\u5b9a\n    void decisiontest(int Num, int hNum);   // \u5f53\u305f\u308a\u5224\u5b9a\u30c6\u30b9\u30c8\n};\n    int Life[5][10]; \n\n#endif \n\n\u6b21\u306b\u672c\u30b3\u30fc\u30c9\n#include <GLUT/glut.h>  // GLUT\u306e\u6709\u52b9\u5316\n#include <SDL2/SDL.h>   // SDL2\u306e\u6709\u52b9\u5316\n#include <SDL2/SDL_mixer.h>     // SDL mixer\u306e\u6709\u52b9\u5316\n#include \"block.h\"      // \u30d8\u30c3\u30c0\u30fc\n#include <cmath>\n#include <iostream>\n#include <cstdlib>\nusing namespace std;\n#define WIDTH 640   // \u753b\u9762\u306e\u6a2a\u30b5\u30a4\u30ba\n#define HEIGHT 480  // \u753b\u9762\u306e\u7e26\u30b5\u30a4\u30ba\n#define PI 3.141592     // \u5186\u5468\u7387\n\n\n\nvoid player(){  // \u30d0\u30fc\u306e\u751f\u6210\n    glBegin(GL_POLYGON);\n    glColor3d(1.0, 1.0, 0.0);\n    glVertex2f(px + pmovex, py);\n    glVertex2f(px + 40 + pmovex, py - 5);\n    glVertex2f(px + 40 + pmovex, py + 5);\n    glVertex2f(px - 40 + pmovex, py + 5);\n    glVertex2f(px - 40 + pmovex, py - 5);\n    glVertex2f(px + 40 + pmovex, py - 5);\n    glEnd();\n\n    glBegin(GL_POLYGON);\n    glColor3d(0.0, 1.0, 1.0);\n    glVertex2f(px + 24 + pmovex, py - 5);\n    glVertex2f(px + 24 + pmovex, py + 5);\n    glVertex2f(px - 24 + pmovex, py + 5);\n    glVertex2f(px - 24 + pmovex, py - 5);\n    glEnd();\n\n    glBegin(GL_POLYGON);\n    glColor3d(1.0, 0.0, 1.0);\n    glVertex2f(px + 8 + pmovex, py - 5);\n    glVertex2f(px + 8 + pmovex, py + 5);\n    glVertex2f(px - 8 + pmovex, py + 5);\n    glVertex2f(px - 8 + pmovex, py - 5);\n    glEnd();\n}\n\n// \u30c6\u30ad\u30b9\u30c8\u8868\u793a\nstatic void DrawString(string str, int w, int h, int x0, int y0){\n    glDisable(GL_LIGHTING);\n    // \u5e73\u884c\u6295\u5f71\u306b\u3059\u308b\n    glMatrixMode(GL_PROJECTION);\n    glPushMatrix();\n    glLoadIdentity();\n    gluOrtho2D(0, w, h, 0);\n    glMatrixMode(GL_MODELVIEW);\n    glPushMatrix();\n    glLoadIdentity();\n\n    // \u753b\u9762\u4e0a\u306b\u30c6\u30ad\u30b9\u30c8\u63cf\u753b\n    glRasterPos2f(x0, y0);\n    int size = (int)str.size();\n    for(int i = 0; i < size; ++i){\n        char ic = str[i];\n       // glutBitmapCharacter(GLUT_BITMAP_9_BY_15, ic);\n        glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, ic);\n    }\n\n    glPopMatrix();\n    glMatrixMode(GL_PROJECTION);\n    glPopMatrix();\n    glMatrixMode(GL_MODELVIEW);\n}\n\n// \u30dc\u30fc\u30eb\u306e\u751f\u6210\nvoid Ball::ball(){ \n    if(setdec){ set(); }    // \u4e00\u5ea6\u3060\u3051\u521d\u671f\u5316\n    glBegin(GL_POLYGON);\n    //glColor3d(1.0, 0.0, 0.0);\n    glVertex2f(bx, by);\n    for(int i = 0; i < 360; ++i){\n        glVertex2f(bx + br * cos(i), by + br * sin(i));\n    }\n    glEnd();\n}\n\nvoid Ball::reverse(){\n    if(5 <= bx && bx <= 635 ){  // x\u8ef8(\u5de6\u53f3)\u306e\u58c1\u306b\u5f53\u305f\u3063\u305f\u5834\u5408\n        /* \u4f55\u3082\u3057\u306a\u3044 */\n    }else{\n        l = -1 * l;     // x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n        bx += l  * movex;\n        by += ll * movey;\n        SEplay();\n    }\n\n    if(5 <= by && by <= 490){   // y\u8ef8(\u4e0a)\u306e\u58c1\u306b\u5f53\u305f\u3063\u305f\u5834\u5408\n        /* \u4f55\u3082\u3057\u306a\u3044 */\n    }else{\n        ll = -1 * ll;   // y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n        bx += l  * movex;\n        by += ll * movey;\n        SEplay();\n    }\n\n    // \u81ea\u6a5f(\u30d0\u30fc)\u306e\u5f53\u305f\u308a\u5224\u5b9a\n    ReverseBar();\n\n    // \u30df\u30b9\u3057\u305f\u6642\u306e\u6319\u52d5\n    if(by > 480){ \n        mylife -= 1;\n        bx = px + pmovex;\n        by = py - 16;\n        movex = 0;\n        movey = 0;\n        shoot = 0;\n        ll = -1 * ll;\n        channel1 = Mix_PlayChannel(-1, se1, 0);\n    }\n    if(mylife < 0){ start = 2; gameover = 1; }  // \u7d42\u4e86\n}\n\n// \u81ea\u6a5f\u306e\u5f53\u305f\u308a\u5224\u5b9a\nvoid Ball::ReverseBar(){\n    if(px + pmovex - 40 < bx && bx < px + pmovex - 24 && py - 10 < by + 6 && by + 6 < py){ \n        ll = -1 * ll;   // y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n        if(l == 1){\n            l = -1 * l;\n        }\n        movex = 4;\n        movey = 2;\n        bx += l  * movex;\n        by += ll * movey;\n        SEplay();\n    }\n    if(px + pmovex - 23 < bx && bx < px + pmovex - 8 && py - 10 < by + 6 && by + 6 < py){ \n        ll = -1 * ll;   // y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n        if(l == 1){\n            l = -1 * l;\n        }\n        movex = 2;\n        movey = 4;\n        bx += l  * movex;\n        by += ll * movey;\n        SEplay();\n    }\n    if(px + pmovex - 7 < bx && bx < px + pmovex + 7 && py - 10 < by + 6 && by + 6 < py){ \n        ll = -1 * ll;   // y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n        bx += l  * movex;\n        by += ll * movey;\n        SEplay();\n    }\n    if(px + pmovex + 8 < bx && bx < px + pmovex + 23 && py - 10 < by + 6 && by + 6 < py){ \n        ll = -1 * ll;   // y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n        if(l == -1){\n            l = -1 * l;\n        }\n        movex = 2;\n        movey = 4;\n        bx += l  * movex;\n        by += ll * movey;\n        SEplay();\n    }\n    if(px + pmovex + 24 < bx && bx < px + pmovex + 40 && py - 10 < by + 6 && by + 6 < py){ \n        ll = -1 * ll;   // y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n        if(l == -1){\n            l = -1 * l;\n        }\n        movex = 4;\n        movey = 2;\n        bx += l  * movex;\n        by += ll * movey;\n        SEplay();\n    }\n}\n\n\nvoid Ball::set(){   // \u521d\u671f\u5316\u5185\u5bb9\n    br = 5;         // \u30dc\u30fc\u30eb\u306e\u534a\u5f84\n    shotr = 45;     // \u30dc\u30fc\u30eb\u306e\u79fb\u52d5\u89d2\u5ea6\n    shotdec = 0;    // \u6700\u521d\u306b\u767a\u5c04\u3059\u308b\u6642\u306b\u3001space\u30ad\u30fc\u3092\u62bc\u3057\u3066\u308b\u304b\u306e\u5224\u5b9a\n\n    setdec = false;\n}\n\nvoid Block::decision(int Num, int hNum){    // \u30d6\u30ed\u30c3\u30af\u306e\u53cd\u5c04\u5224\u5b9a\n\n    // \u30d6\u30ed\u30c3\u30af\u4e0a\u306e\u53cd\u5c04\n    if(blockx - 30 + (spownx * Num)  < bx && bx < blockx + 30 + (spownx * Num) &&\n       blocky - 15 + (spowny * hNum) < by && by < blocky - 10 + (spowny * hNum)) {\n\n        if(Life[hNum][Num] == 0){       // \u6575\u6a5f\u306b\u5f53\u305f\u3063\u305f\u6642\u3001\u5f3e\u306e\u5ea7\u6a19\u3092\u623b\u3059\n                ll = -1 * ll;           // x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n                Life[hNum][Num] = 1;    // \u30d6\u30ed\u30c3\u30af\u3092\u6d88\u6ec5\n                clear += 1;             // \u30af\u30ea\u30a2\u5224\u5b9a\u306e\u5909\u6570\u3092\u52a0\u7b97\n                cout << clear << endl;\n                SEplay();\n        }           \n    }\n\n    // \u30d6\u30ed\u30c3\u30af\u4e0b\u306e\u53cd\u5c04\n    if(blockx - 30 + (spownx * Num)  < bx && bx < blockx + 30 + (spownx * Num) &&\n       blocky + 10 + (spowny * hNum) < by && by < blocky + 15 + (spowny * hNum)) {\n\n        if(Life[hNum][Num] == 0){       // \u6575\u6a5f\u306b\u5f53\u305f\u3063\u305f\u6642\u3001\u5f3e\u306e\u5ea7\u6a19\u3092\u623b\u3059\n                ll = -1 * ll;           // x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n                Life[hNum][Num] = 1;    // \u30d6\u30ed\u30c3\u30af\u3092\u6d88\u6ec5\n                clear += 1;             // \u30af\u30ea\u30a2\u5224\u5b9a\u306e\u5909\u6570\u3092\u52a0\u7b97\n                cout << clear << endl;\n                SEplay();\n        }           \n    }\n\n    // \u30d6\u30ed\u30c3\u30af\u5de6\u306e\u53cd\u5c04\n    if(blockx - 30 + (spownx * Num)  < bx && bx < blockx - 25 + (spownx * Num) &&\n       blocky - 15 + (spowny * hNum) < by && by < blocky + 15 + (spowny * hNum)) {\n\n        if(Life[hNum][Num] == 0){       // \u6575\u6a5f\u306b\u5f53\u305f\u3063\u305f\u6642\u3001\u5f3e\u306e\u5ea7\u6a19\u3092\u623b\u3059\n                l = -1 * l;             // x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n                Life[hNum][Num] = 1;    // \u30d6\u30ed\u30c3\u30af\u3092\u6d88\u6ec5\n                clear += 1;             // \u30af\u30ea\u30a2\u5224\u5b9a\u306e\u5909\u6570\u3092\u52a0\u7b97\n                cout << clear << endl;\n                SEplay();\n        }           \n    }\n\n    // \u30d6\u30ed\u30c3\u30af\u53f3\u306e\u53cd\u5c04\n    if(blockx + 25 + (spownx * Num)  < bx && bx < blockx + 30 + (spownx * Num) &&\n       blocky - 15 + (spowny * hNum) < by && by < blocky + 15 + (spowny * hNum)) {\n\n        if(Life[hNum][Num] == 0){       // \u6575\u6a5f\u306b\u5f53\u305f\u3063\u305f\u6642\u3001\u5f3e\u306e\u5ea7\u6a19\u3092\u623b\u3059\n                l = -1 * l;             // x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n                Life[hNum][Num] = 1;    // \u30d6\u30ed\u30c3\u30af\u3092\u6d88\u6ec5\n                clear += 1;             // \u30af\u30ea\u30a2\u5224\u5b9a\u306e\u5909\u6570\u3092\u52a0\u7b97\n                cout << clear << endl;\n                SEplay();\n        }           \n    }\n}\n\n// \u30d6\u30ed\u30c3\u30af\u306e\u751f\u6210\nvoid Block::block(int Num, int hNum){ \n    decision(Num, hNum);\n        if(Life[hNum][Num] == 0){\n        glBegin(GL_POLYGON);\n        colorset(hNum);\n        glVertex2f(blockx + (spownx * Num), blocky + (spowny * hNum));\n        glVertex2f(blockx + 30 + (spownx * Num), blocky - 10 + (spowny * hNum));\n        glVertex2f(blockx + 30 + (spownx * Num), blocky + 10 + (spowny * hNum));\n        glVertex2f(blockx - 30 + (spownx * Num), blocky + 10 + (spowny * hNum));\n        glVertex2f(blockx - 30 + (spownx * Num), blocky - 10 + (spowny * hNum));\n        glVertex2f(blockx + 30 + (spownx * Num), blocky - 10 + (spowny * hNum));\n        glEnd();\n    }\n}\n\n//\u3000\u30d6\u30ed\u30c3\u30af\u306e\u8272\u5224\u5b9a\nvoid Block::colorset(int Num){\n    (Num == 0 ? glColor3d(1.0, 0.0, 0.0) : Num == 1 ? glColor3d(1.0, 1.0, 0.0) : Num == 2 \n              ? glColor3d(0.0, 1.0, 0.0) : Num == 3 ? glColor3d(0.0, 0.0, 1.0) : Num == 4\n              ? glColor3d(1.0, 0.0, 1.0) : glColor3d(1.0, 1.0, 1.0));\n}\n\n//\u3000\u753b\u9762\u8868\u793a\nvoid display(){\n    Ball b;\n    Block blo[5][10];\n    int i;\n    int j;\n\n    if(start == 0){     // \u30b9\u30bf\u30fc\u30c8\u753b\u9762\n        glClear(GL_COLOR_BUFFER_BIT);\n        glColor3d(1.0, 1.0, 1.0);\n        DrawString(\"START\", WIDTH, HEIGHT, 300, 240);\n    }\n\n    if(start == 1){\n        glClear(GL_COLOR_BUFFER_BIT);\n\n        player();   // \u81ea\u6a5f\u751f\u6210\n        b.ball();   // \u5f3e\u306e\u751f\u6210\n\n        for(i = 0; i <= 4; ++i){\n            for(j = 0; j <= 9; ++j){\n                blo[i][j].block(j, i);  // \u30d6\u30ed\u30c3\u30af\u306e\u751f\u6210\n                glEnd();\n            }   \n        }\n    }\n\n    if(gameover == 1){  // \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u753b\u9762\n        glClear(GL_COLOR_BUFFER_BIT);\n        glColor3d(1.0, 0.0, 1.0);\n        DrawString(\"Game over\", WIDTH, HEIGHT, 290, 240);\n        if(gameoveri == 0){\n            channel6 = Mix_PlayChannel(-1, gameoverSE, 0);\n            Mix_HaltMusic();\n            gameoveri = 1;\n        }\n    }\n\n    if(clear == 45){ // \u30af\u30ea\u30a2\u753b\u9762\n        glClear(GL_COLOR_BUFFER_BIT);\n        glColor3d(1.0, 1.0, 0.0);\n        DrawString(\"Clear!\", WIDTH, HEIGHT, 290, 240);\n        if(cleari == 0){\n            channel5 = Mix_PlayChannel(-1, clearSE, 1);\n            Mix_HaltMusic();\n            cleari = 1;\n        }\n\n    }\n\n    glFlush();\n    b.reverse();    // \u58c1\u3068\u81ea\u6a5f\u306e\u5f53\u305f\u308a\u5224\u5b9a\n}\n\nvoid leftmove(){    // \u81ea\u6a5f\u5de6\u79fb\u52d5\n    if(px + pmovex > 40){   // \u5de6\u7aef\u306e\u5f53\u305f\u308a\u5224\u5b9a\n        pmovex -= 10.0;     \n    }\n    if(shoot == 0){ bx = bx - 10; };  // \u30b9\u30bf\u30fc\u30c8\u3001\u3082\u3057\u304f\u306f\u30df\u30b9\u3057\u305f\u6642\u306e\u6319\u52d5\n}\n\nvoid rightmove(){   // \u81ea\u6a5f\u53f3\u79fb\u52d5\n    if(px + pmovex < 600){\n        pmovex += 10.0;     // \u53f3\u7aef\u306e\u5f53\u305f\u308a\u5224\u5b9a\n    }\n    if(shoot == 0){ bx = bx + 10; };  // \u30b9\u30bf\u30fc\u30c8\u3001\u3082\u3057\u304f\u306f\u30df\u30b9\u3057\u305f\u6642\u306e\u6319\u52d5\n}\n\nvoid allmove(){\n    if(start ==1){\n        bx += l  * movex;   // x\u8ef8\u306e\u30dc\u30fc\u30eb\u306e\u52d5\u304d(\u4eee)\n        by += ll * movey;   // y\u8ef8\u306e\u30dc\u30fc\u30eb\u306e\u52d5\u304d(\u4eee)       \n    }\n    if(leftm == 1){\n        leftmove();     // \u5de6\u79fb\u52d5\n    }\n    if(rightm == 1){\n        rightmove();    // \u53f3\u79fb\u52d5\n    }\n    glutPostRedisplay();\n}\n\n// \u30ad\u30fc\u3092\u62bc\u3057\u305f\u6642\u306e\nvoid keydowan(unsigned char key, int x, int y){\n    switch(key){\n        case 's':\n        case 'S':\n        if(start == 0){\n            start = 1;      // \u6700\u521d\u306e\u30b9\u30bf\u30fc\u30c8\u753b\u9762\u304b\u3089\u30b2\u30fc\u30e0\u753b\u9762\u306b\u79fb\u884c\u3059\u308b\n            Mix_PlayMusic(music, -1);\n        }\n        break;\n\n        case 'g':\n        if(gameover == 1){  // \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u753b\u9762\u306b\u79fb\u884c\u3057\u305f\u6642\u306b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\n            exit(1);\n        }\n\n        case 'a':   // a \u3092\u5165\u529b\u3059\u308b\u3068\u5de6\u306b\u52d5\u304f\n        case 'A': \n        leftm = 1;  // \u5de6\u79fb\u52d5\u306e\u5224\u5b9a\u3092\u51fa\u3059\n        break;\n\n        case 'd':   // d \u3092\u5165\u529b\u3059\u308b\u3068\u53f3\u306b\u52d5\u304f\n        case 'D':\n        rightm = 1; // \u53f3\u79fb\u52d5\u5224\u5b9a\u3092\u51fa\u3059\n        break;\n\n        case 'q':   // q Q ESC \u3092\u5165\u529b\u3059\u308b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u7d42\u4e86\n        case 'Q':\n        case '\\033':\n        exit(0);\n\n        case ' ':\n        if(shoot == 0){\n            shoot = 1;\n            movex = 0;\n            movey = 4;\n            channel4 = Mix_PlayChannel(-1, se4, 0);\n        }\n\n        break;\n\n        case 'l':\n            //Mix_PlayChannel(-1, chunk, 0);    // \u52b9\u679c\u518d\u751f\n\n        default: \n        break;\n    }\n}\n\nvoid keyup(unsigned char key, int x, int y){    // \u30ad\u30fc\u3092\u96e2\u3057\u305f\u6642\u306e\u6319\u52d5\n    switch(key){    // a A \u3092\u96e2\u3057\u305f\u3068\u304d\u306b\u79fb\u52d5\u3092\u6b62\u3081\u308b\n        case 'a':\n        case 'A': \n        leftm = 0;\n        break;\n\n        case 'd':   // d D \u3092\u8a71\u3057\u305f\u6642\u306b\u79fb\u52d5\u3092\u6b62\u3081\u308b\n        case 'D':\n        rightm = 0;\n        break;\n\n        default: break;\n\n    }   \n}\n\nvoid reshape(int w, int h){             // \u5ea7\u6a19\u306e\u5b9a\u7fa9\u5909\u66f4\n    glViewport(0, 0, w, h);\n    glMatrixMode(GL_PROJECTION);\n    glLoadIdentity();\n    gluOrtho2D(0, 640, 480, 0);         // \u5de6\u4e0a\u3092\u3000(0, 0) \u53f3\u4e0b\u3092 (640, 480)\u3068\u3059\u308b\n}\n\nvoid timer(int value){                  // \u6bce\u79d2\u3054\u3068\u306b\u518d\u63cf\u753b\u3057\u3066\u3001\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u308b\n    glutIdleFunc(allmove);              // \u5f3e\u3068\u81ea\u6a5f\u306e\u79fb\u52d5\n    glutTimerFunc(100, timer, 0);       // \u7b2c\u4e00\u5f15\u6570\u6bce\u79d2\u3067\u7e70\u308a\u8fd4\u3059\n}\n\nvoid init(){\n    glClearColor(0.0, 0.0, 0.0, 1.0);   // \u80cc\u666f\u8272\u3000\u9ed2\n}\n\n/*SDL\u306e\u521d\u671f\u8a2d\u5b9a*/\nvoid SDLsetup(){\n\n    if(0 != SDL_Init(SDL_INIT_AUDIO)){  // SDL\u521d\u671f\u5316\n        cout << \"SDL setup error\" << endl;\n        exit(1);\n    }                \n\n    Mix_AllocateChannels(16);\n\n    // SDL_Mixer\u30aa\u30fc\u30d7\u30f3\n    if(0 != Mix_OpenAudio(22050, AUDIO_S16,2,4096)){ \n        cout << \"SDL mixer setup error\" << endl;\n        exit(1);\n    }   \n\n     /* \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080 */\n    music = Mix_LoadMUS(\"loop_113.wav\");\n    if(!music) { //\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    se1 = Mix_LoadWAV(\"se_sac01.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    se2 = Mix_LoadWAV(\"se_sab04.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    se3 = Mix_LoadWAV(\"se_sab05.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    se4 = Mix_LoadWAV(\"se_mod05.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    clearSE = Mix_LoadWAV(\"clear.wav\");\n    if(!se1) { //\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    gameoverSE = Mix_LoadWAV(\"tin1.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n}\n\n/*\uff12\u3064\u306e\u53cd\u5c04\u97f3\u3092\u4ea4\u4e92\u306b\u9cf4\u3089\u3059\u95a2\u6570*/\nvoid SEplay(){\n    if(sedecision == 0){ // se\u5224\u5b9a\u306e\u5909\u6570\u304c0\u306e\u6642\u3001\u52b9\u679c\u97f31\u3092\u9cf4\u3089\u3057\u30011\u3092\u4ee3\u5165\n        channel2 = Mix_PlayChannel(-1, se2, 0);\n        sedecision = 1;\n    }else{ // se\u5224\u5b9a\u306e\u5909\u6570\u304c0\u306e\u6642\u3001\u52b9\u679c\u97f32\u3092\u9cf4\u3089\u3057\u30010\u3092\u4ee3\u5165\n        channel3 = Mix_PlayChannel(-1, se3, 0);\n        sedecision = 0;\n    }   \n}\n\nint main(int argc, char *argv[]){\n    glutInitWindowPosition(100, 200);   // \u30a6\u30a3\u30f3\u30c9\u30a6\u4f5c\u6210\u6642\u306e\u5ea7\u6a19\u6307\u5b9a\n    glutInitWindowSize(WIDTH, HEIGHT);  // \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n    glutInit(&argc, argv);          \n    glutInitDisplayMode(GLUT_RGBA /*| GLUT_DOUBLE*/);   // Red Green Brue +\u03b1(\u900f\u660e\u5ea6)= RGBA \n    glutCreateWindow(argv[0]);          // \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u751f\u6210\u3002 argv[0]\u3060\u3068\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u305d\u306e\u307e\u307e\u30a6\u30a3\u30f3\u30c9\u30a6\u540d\u306b\u306a\u308b\n    glutDisplayFunc(display);           // display\u95a2\u6570\u5185\u3092\u8868\u793a\n    glutKeyboardFunc(keydowan);         // \u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u5165\u529b\u6319\u52d5\n    glutKeyboardUpFunc(keyup);          // \u96e2\u3057\u305f\u6642\u306e\u6319\u52d5\n    glutTimerFunc(100, timer, 0);       // timer \u95a2\u6570\u5185\u306e\u5b9f\u884c\n    glutReshapeFunc(reshape);           // \u753b\u9762\u306e\u518d\u5b9a\u7fa9\n    init();\n    SDLsetup();\n    glutMainLoop();\n    return 0;\n}\n\n\npart1\u306e\u30b3\u30fc\u30c9\u306b\u52b9\u679c\u97f3\u3068\u7c21\u5358\u306a\u30b9\u30bf\u30fc\u30c8\u753b\u9762\u3001\u30af\u30ea\u30a2\u753b\u9762\u3001\u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u753b\u9762\u3092\u4ed8\u3051\u52a0\u3048\u305f\u3082\u306e\u3067\u3059\u3002\u97f3\u6e90\u30d5\u30a1\u30a4\u30eb\u306fwav\u5f62\u5f0f\u306e\u3082\u306e\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u958b\u767a\u74b0\u5883\nMac version 10.10.5\n\u30bf\u30fc\u30df\u30ca\u30eb\u30b3\u30de\u30f3\u30c9\n\ng++ -o \u30d5\u30a1\u30a4\u30eb\u540d.out \u30d5\u30a1\u30a4\u30eb\u540d.cpp -mmacosx-version-min=10.8 -framework GLUT -framework OpenGL -lSDL2 -lSDL2_mixer\n\n\u3053\u308c\u304b\u3089\u306f3D\u51e6\u7406\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u89e6\u3063\u3066\u3044\u304f\u3068\u601d\u3046\u306e\u3067\u3001\u6539\u3081\u3066\u8a08\u7b97\u65b9\u6cd5\u3092\u898b\u76f4\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u9045\u308c\u307e\u3057\u305f\u304c\u3001\u30d6\u30ed\u30c3\u30af\u5d29\u3057\u304c\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002\n\u5148\u65e5\u5c0e\u5165\u3057\u305fSDL\u3092\u4f7f\u3063\u3066\u52b9\u679c\u97f3\u3082\u3064\u3051\u308c\u305f\u306e\u3067\u3001\u5f62\u306b\u306f\u306a\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\nSEplay\u3068\u3044\u3046\u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\nsedicision\u3068\u3044\u3046\u52b9\u679c\u97f3\u7ba1\u7406\u306e\u305f\u3081\u306e\u5909\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n```\n#ifndef BLOCK_H_\n#define BLOCK_H_\n\t\n\tvoid player();\n\n\tint px = 320; // \u30d0\u30fc\u306e\u57fa\u6e96x\u5ea7\u6a19\n\tint py = 430; // \u30d0\u30fc\u306e\u57fa\u6e96y\u5ea7\u6a19\n\tint pmovex;\t  // \u30d0\u30fc\u306e\u79fb\u52d5\u5024\n\n\n\n\tint bx = 320; \t// \u30dc\u30fc\u30eb\u306ex\u5ea7\u6a19\n\tint by = 414; \t// \u30dc\u30fc\u30eb\u306ey\u5ea7\u6a19\n\tint l  = 1;\t\t// x\u8ef8\u53cd\u5c04\u89d2\u5909\u6570\u306e\u7b26\u53f7\u5224\u5b9a\n\tint ll = -1;\t// y\u8ef8\u53cd\u5c04\u89d2\u5909\u6570\u306e\u7b26\u53f7\u5224\u5b9a\n\tint movex = 0;\t// \u30dc\u30fc\u30eb\u306ex\u8ef8\u5897\u6e1b\u5024\n\tint movey = 0;\t// \u30dc\u30fc\u30eb\u306ey\u8ef8\u5897\u6e1b\u5024\n\tint mylife = 2; // \u81ea\u6a5f\u306e\u6b8b\u6a5f\n\tint shoot = 0;\t\t// \u6253\u3061\u51fa\u3059\u6642\u306e\u5224\u5b9a\n\n\tint start = 0; \t\t// \u30b9\u30bf\u30fc\u30c8\u5224\u5b9a\n\tint gameover = 0;\t// \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u5224\u5b9a\n\tint clear = 0;\t\t// \u30af\u30ea\u30a2\u5224\u5b9a\n\n\tint leftm = 0;\t\t// \u5de6\u79fb\u52d5\u306e\u5224\u5b9a\n\tint rightm = 0;\t\t// \u53f3\u79fb\u52d5\u306e\u5224\u5b9a\n\tvoid allmove();\t\t// \u5f3e\u3068\u81ea\u6a5f\u306e\u52d5\u304d\n\n\tMix_Music *music;\n    Mix_Chunk *se1, *se2, *se3, *se4 ,*clearSE, *gameoverSE;\n    int channel1, channel2, channel3, channel4, channel5, channel6;\n\n    int sedecision = 0;\t// \u53cd\u5c04\u97f3\u3092\u4ea4\u4e92\u306b\u9cf4\u3089\u3059\u305f\u3081\u306e\u5909\u6570\n    void SEplay();\t\t// \u53cd\u5c04\u97f3\u3092\u4ea4\u4e92\u306b\u9cf4\u3089\u3059\u305f\u3081\u306e\u95a2\u6570\n\n    int cleari = 0;\n    int gameoveri = 0;\n\nclass Ball{\npublic:\n\n\tint br ; // \u30dc\u30fc\u30eb\u306e\u534a\u5f84\n\tint shotr; // \u30dc\u30fc\u30eb\u306e\u79fb\u52d5\u89d2\u5ea6\n\tint shotdec; // \u6700\u521d\u306b\u767a\u5c04\u3059\u308b\u6642\u306b\u3001space\u30ad\u30fc\u3092\u62bc\u3057\u3066\u308b\u304b\u306e\u5224\u5b9a\n\n\t\n\tbool setdec = true; // \u6570\u5024\u306e\u521d\u671f\u5316\u304c\u3067\u304d\u308b\u304b\u5224\u5b9a\n\n\tvoid set();\t\t\t// \u6570\u5024\u306e\u5165\u529b\n\tvoid ball(); \t\t// \u30dc\u30fc\u30eb\u306e\u751f\u6210\n\tvoid ballmove(); \t// \u30dc\u30fc\u30eb\u306e\u52d5\u304d\n\tvoid reverse(); \t// \u30dc\u30fc\u30eb\u306e\u5f53\u305f\u308a\u5224\u5b9a\n\n\tvoid ReverseBar();\t// \u30d0\u30fc\u306e\u5f53\u305f\u308a\u5224\u5b9a\n};\n\nclass Block{\npublic:\n\tint blockx = 40;\t\t// \u30d6\u30ed\u30c3\u30af\u306e\u57fa\u6e96x\u5ea7\u6a19\n\tint blocky = 20;\t\t// \u30d6\u30ed\u30c3\u30af\u306e\u57fa\u6e96y\u5ea7\u6a19\n\n\tint spownx = 70;\t\t// \u751f\u6210\u6642\u306ex\u8ef8\u5dee\u5206\n\tint spowny = 30;\t\t// \u751f\u6210\u6642\u306ey\u8ef8\u5dee\u5206\n\n\t\n\n\tvoid block(int Num, int hNum);\t\t\t// \u30d6\u30ed\u30c3\u30af\u306e\u751f\u6210\n\tvoid colorset(int Num);\t \t\t\t\t// \u30d6\u30ed\u30c3\u30af\u751f\u6210\u6642\u306e\u8272\u632f\u308a\u5206\u3051\n\tvoid decision(int Num, int hNum);\t\t// \u5f53\u305f\u308a\u5224\u5b9a\n\tvoid decisiontest(int Num, int hNum);\t// \u5f53\u305f\u308a\u5224\u5b9a\u30c6\u30b9\u30c8\n};\n\tint Life[5][10]; \n\n#endif \n```\n\n\n\u6b21\u306b\u672c\u30b3\u30fc\u30c9\n\n```\n#include <GLUT/glut.h>\t// GLUT\u306e\u6709\u52b9\u5316\n#include <SDL2/SDL.h>\t// SDL2\u306e\u6709\u52b9\u5316\n#include <SDL2/SDL_mixer.h>\t\t// SDL mixer\u306e\u6709\u52b9\u5316\n#include \"block.h\"\t\t// \u30d8\u30c3\u30c0\u30fc\n#include <cmath>\n#include <iostream>\n#include <cstdlib>\nusing namespace std;\n#define WIDTH 640\t// \u753b\u9762\u306e\u6a2a\u30b5\u30a4\u30ba\n#define HEIGHT 480\t// \u753b\u9762\u306e\u7e26\u30b5\u30a4\u30ba\n#define PI 3.141592\t\t// \u5186\u5468\u7387\n\n\n\nvoid player(){\t// \u30d0\u30fc\u306e\u751f\u6210\n\tglBegin(GL_POLYGON);\n\tglColor3d(1.0, 1.0, 0.0);\n\tglVertex2f(px + pmovex, py);\n\tglVertex2f(px + 40 + pmovex, py - 5);\n\tglVertex2f(px + 40 + pmovex, py + 5);\n\tglVertex2f(px - 40 + pmovex, py + 5);\n\tglVertex2f(px - 40 + pmovex, py - 5);\n\tglVertex2f(px + 40 + pmovex, py - 5);\n\tglEnd();\n\n\tglBegin(GL_POLYGON);\n\tglColor3d(0.0, 1.0, 1.0);\n\tglVertex2f(px + 24 + pmovex, py - 5);\n\tglVertex2f(px + 24 + pmovex, py + 5);\n\tglVertex2f(px - 24 + pmovex, py + 5);\n\tglVertex2f(px - 24 + pmovex, py - 5);\n\tglEnd();\n\n\tglBegin(GL_POLYGON);\n\tglColor3d(1.0, 0.0, 1.0);\n\tglVertex2f(px + 8 + pmovex, py - 5);\n\tglVertex2f(px + 8 + pmovex, py + 5);\n\tglVertex2f(px - 8 + pmovex, py + 5);\n\tglVertex2f(px - 8 + pmovex, py - 5);\n\tglEnd();\n}\n\n// \u30c6\u30ad\u30b9\u30c8\u8868\u793a\nstatic void DrawString(string str, int w, int h, int x0, int y0){\n    glDisable(GL_LIGHTING);\n    // \u5e73\u884c\u6295\u5f71\u306b\u3059\u308b\n    glMatrixMode(GL_PROJECTION);\n    glPushMatrix();\n    glLoadIdentity();\n    gluOrtho2D(0, w, h, 0);\n    glMatrixMode(GL_MODELVIEW);\n    glPushMatrix();\n    glLoadIdentity();\n \n    // \u753b\u9762\u4e0a\u306b\u30c6\u30ad\u30b9\u30c8\u63cf\u753b\n    glRasterPos2f(x0, y0);\n    int size = (int)str.size();\n    for(int i = 0; i < size; ++i){\n        char ic = str[i];\n       // glutBitmapCharacter(GLUT_BITMAP_9_BY_15, ic);\n        glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, ic);\n    }\n \n    glPopMatrix();\n    glMatrixMode(GL_PROJECTION);\n    glPopMatrix();\n    glMatrixMode(GL_MODELVIEW);\n}\n\n// \u30dc\u30fc\u30eb\u306e\u751f\u6210\nvoid Ball::ball(){ \n\tif(setdec){ set(); }\t// \u4e00\u5ea6\u3060\u3051\u521d\u671f\u5316\n\tglBegin(GL_POLYGON);\n\t//glColor3d(1.0, 0.0, 0.0);\n\tglVertex2f(bx, by);\n\tfor(int i = 0; i < 360; ++i){\n\t\tglVertex2f(bx + br * cos(i), by + br * sin(i));\n\t}\n\tglEnd();\n}\n\nvoid Ball::reverse(){\n\tif(5 <= bx && bx <= 635 ){\t// x\u8ef8(\u5de6\u53f3)\u306e\u58c1\u306b\u5f53\u305f\u3063\u305f\u5834\u5408\n\t\t/* \u4f55\u3082\u3057\u306a\u3044 */\n\t}else{\n\t\tl = -1 * l;\t\t// x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\tbx += l  * movex;\n\t\tby += ll * movey;\n\t\tSEplay();\n\t}\n\n\tif(5 <= by && by <= 490){\t// y\u8ef8(\u4e0a)\u306e\u58c1\u306b\u5f53\u305f\u3063\u305f\u5834\u5408\n\t\t/* \u4f55\u3082\u3057\u306a\u3044 */\n\t}else{\n\t\tll = -1 * ll;\t// y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\tbx += l  * movex;\n\t\tby += ll * movey;\n\t\tSEplay();\n\t}\n\n\t// \u81ea\u6a5f(\u30d0\u30fc)\u306e\u5f53\u305f\u308a\u5224\u5b9a\n\tReverseBar();\n\n\t// \u30df\u30b9\u3057\u305f\u6642\u306e\u6319\u52d5\n\tif(by > 480){ \n\t\tmylife -= 1;\n\t\tbx = px + pmovex;\n\t\tby = py - 16;\n\t\tmovex = 0;\n\t\tmovey = 0;\n\t\tshoot = 0;\n\t\tll = -1 * ll;\n\t\tchannel1 = Mix_PlayChannel(-1, se1, 0);\n\t}\n\tif(mylife < 0){ start = 2; gameover = 1; }\t// \u7d42\u4e86\n}\n\n// \u81ea\u6a5f\u306e\u5f53\u305f\u308a\u5224\u5b9a\nvoid Ball::ReverseBar(){\n\tif(px + pmovex - 40 < bx && bx < px + pmovex - 24 && py - 10 < by + 6 && by + 6 < py){ \n\t\tll = -1 * ll;\t// y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\tif(l == 1){\n\t\t\tl = -1 * l;\n\t\t}\n\t\tmovex = 4;\n\t\tmovey = 2;\n\t\tbx += l  * movex;\n\t\tby += ll * movey;\n\t\tSEplay();\n\t}\n\tif(px + pmovex - 23 < bx && bx < px + pmovex - 8 && py - 10 < by + 6 && by + 6 < py){ \n\t\tll = -1 * ll;\t// y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\tif(l == 1){\n\t\t\tl = -1 * l;\n\t\t}\n\t\tmovex = 2;\n\t\tmovey = 4;\n\t\tbx += l  * movex;\n\t\tby += ll * movey;\n\t\tSEplay();\n\t}\n\tif(px + pmovex - 7 < bx && bx < px + pmovex + 7 && py - 10 < by + 6 && by + 6 < py){ \n\t\tll = -1 * ll;\t// y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\tbx += l  * movex;\n\t\tby += ll * movey;\n\t\tSEplay();\n\t}\n\tif(px + pmovex + 8 < bx && bx < px + pmovex + 23 && py - 10 < by + 6 && by + 6 < py){ \n\t\tll = -1 * ll;\t// y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\tif(l == -1){\n\t\t\tl = -1 * l;\n\t\t}\n\t\tmovex = 2;\n\t\tmovey = 4;\n\t\tbx += l  * movex;\n\t\tby += ll * movey;\n\t\tSEplay();\n\t}\n\tif(px + pmovex + 24 < bx && bx < px + pmovex + 40 && py - 10 < by + 6 && by + 6 < py){ \n\t\tll = -1 * ll;\t// y\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\tif(l == -1){\n\t\t\tl = -1 * l;\n\t\t}\n\t\tmovex = 4;\n\t\tmovey = 2;\n\t\tbx += l  * movex;\n\t\tby += ll * movey;\n\t\tSEplay();\n\t}\n}\n\n\nvoid Ball::set(){\t// \u521d\u671f\u5316\u5185\u5bb9\n\tbr = 5;\t \t \t// \u30dc\u30fc\u30eb\u306e\u534a\u5f84\n\tshotr = 45; \t// \u30dc\u30fc\u30eb\u306e\u79fb\u52d5\u89d2\u5ea6\n\tshotdec = 0; \t// \u6700\u521d\u306b\u767a\u5c04\u3059\u308b\u6642\u306b\u3001space\u30ad\u30fc\u3092\u62bc\u3057\u3066\u308b\u304b\u306e\u5224\u5b9a\n\n\tsetdec = false;\n}\n\nvoid Block::decision(int Num, int hNum){\t// \u30d6\u30ed\u30c3\u30af\u306e\u53cd\u5c04\u5224\u5b9a\n\n\t// \u30d6\u30ed\u30c3\u30af\u4e0a\u306e\u53cd\u5c04\n\tif(blockx - 30 + (spownx * Num)  < bx && bx < blockx + 30 + (spownx * Num) &&\n\t   blocky - 15 + (spowny * hNum) < by && by < blocky - 10 + (spowny * hNum)) {\n\n\t   \tif(Life[hNum][Num] == 0){\t\t// \u6575\u6a5f\u306b\u5f53\u305f\u3063\u305f\u6642\u3001\u5f3e\u306e\u5ea7\u6a19\u3092\u623b\u3059\n\t\t\t\tll = -1 * ll;\t\t\t// x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\t\t\tLife[hNum][Num] = 1;\t// \u30d6\u30ed\u30c3\u30af\u3092\u6d88\u6ec5\n\t\t\t\tclear += 1;\t\t\t\t// \u30af\u30ea\u30a2\u5224\u5b9a\u306e\u5909\u6570\u3092\u52a0\u7b97\n\t\t\t\tcout << clear << endl;\n\t\t\t\tSEplay();\n\t\t}\t\t\t\n\t}\n\n\t// \u30d6\u30ed\u30c3\u30af\u4e0b\u306e\u53cd\u5c04\n\tif(blockx - 30 + (spownx * Num)  < bx && bx < blockx + 30 + (spownx * Num) &&\n\t   blocky + 10 + (spowny * hNum) < by && by < blocky + 15 + (spowny * hNum)) {\n\n\t   \tif(Life[hNum][Num] == 0){\t\t// \u6575\u6a5f\u306b\u5f53\u305f\u3063\u305f\u6642\u3001\u5f3e\u306e\u5ea7\u6a19\u3092\u623b\u3059\n\t\t\t\tll = -1 * ll;\t\t\t// x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\t\t\tLife[hNum][Num] = 1;\t// \u30d6\u30ed\u30c3\u30af\u3092\u6d88\u6ec5\n\t\t\t\tclear += 1;\t\t\t\t// \u30af\u30ea\u30a2\u5224\u5b9a\u306e\u5909\u6570\u3092\u52a0\u7b97\n\t\t\t\tcout << clear << endl;\n\t\t\t\tSEplay();\n\t\t}\t\t\t\n\t}\n\n\t// \u30d6\u30ed\u30c3\u30af\u5de6\u306e\u53cd\u5c04\n\tif(blockx - 30 + (spownx * Num)  < bx && bx < blockx - 25 + (spownx * Num) &&\n\t   blocky - 15 + (spowny * hNum) < by && by < blocky + 15 + (spowny * hNum)) {\n\n\t   \tif(Life[hNum][Num] == 0){\t\t// \u6575\u6a5f\u306b\u5f53\u305f\u3063\u305f\u6642\u3001\u5f3e\u306e\u5ea7\u6a19\u3092\u623b\u3059\n\t\t\t\tl = -1 * l;\t\t\t\t// x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\t\t\tLife[hNum][Num] = 1;\t// \u30d6\u30ed\u30c3\u30af\u3092\u6d88\u6ec5\n\t\t\t\tclear += 1;\t\t\t\t// \u30af\u30ea\u30a2\u5224\u5b9a\u306e\u5909\u6570\u3092\u52a0\u7b97\n\t\t\t\tcout << clear << endl;\n\t\t\t\tSEplay();\n\t\t}\t\t\t\n\t}\n\n\t// \u30d6\u30ed\u30c3\u30af\u53f3\u306e\u53cd\u5c04\n\tif(blockx + 25 + (spownx * Num)  < bx && bx < blockx + 30 + (spownx * Num) &&\n\t   blocky - 15 + (spowny * hNum) < by && by < blocky + 15 + (spowny * hNum)) {\n\n\t   \tif(Life[hNum][Num] == 0){\t\t// \u6575\u6a5f\u306b\u5f53\u305f\u3063\u305f\u6642\u3001\u5f3e\u306e\u5ea7\u6a19\u3092\u623b\u3059\n\t\t\t\tl = -1 * l;\t\t\t\t// x\u8ef8\u306e\u5897\u6e1b\u5024\u3092\u53cd\u8ee2\u3055\u305b\u308b\n\t\t\t\tLife[hNum][Num] = 1;\t// \u30d6\u30ed\u30c3\u30af\u3092\u6d88\u6ec5\n\t\t\t\tclear += 1;\t\t\t\t// \u30af\u30ea\u30a2\u5224\u5b9a\u306e\u5909\u6570\u3092\u52a0\u7b97\n\t\t\t\tcout << clear << endl;\n\t\t\t\tSEplay();\n\t\t}\t\t\t\n\t}\n}\n\n// \u30d6\u30ed\u30c3\u30af\u306e\u751f\u6210\nvoid Block::block(int Num, int hNum){ \n\tdecision(Num, hNum);\n\t\tif(Life[hNum][Num] == 0){\n\t\tglBegin(GL_POLYGON);\n\t\tcolorset(hNum);\n\t\tglVertex2f(blockx + (spownx * Num), blocky + (spowny * hNum));\n\t\tglVertex2f(blockx + 30 + (spownx * Num), blocky - 10 + (spowny * hNum));\n\t\tglVertex2f(blockx + 30 + (spownx * Num), blocky + 10 + (spowny * hNum));\n\t\tglVertex2f(blockx - 30 + (spownx * Num), blocky + 10 + (spowny * hNum));\n\t\tglVertex2f(blockx - 30 + (spownx * Num), blocky - 10 + (spowny * hNum));\n\t\tglVertex2f(blockx + 30 + (spownx * Num), blocky - 10 + (spowny * hNum));\n\t\tglEnd();\n\t}\n}\n\n//\u3000\u30d6\u30ed\u30c3\u30af\u306e\u8272\u5224\u5b9a\nvoid Block::colorset(int Num){\n\t(Num == 0 ? glColor3d(1.0, 0.0, 0.0) : Num == 1 ? glColor3d(1.0, 1.0, 0.0) : Num == 2 \n\t\t\t  ? glColor3d(0.0, 1.0, 0.0) : Num == 3 ? glColor3d(0.0, 0.0, 1.0) : Num == 4\n\t\t\t  ? glColor3d(1.0, 0.0, 1.0) : glColor3d(1.0, 1.0, 1.0));\n}\n\n//\u3000\u753b\u9762\u8868\u793a\nvoid display(){\n\tBall b;\n\tBlock blo[5][10];\n\tint i;\n\tint j;\n\n\tif(start == 0){\t\t// \u30b9\u30bf\u30fc\u30c8\u753b\u9762\n\t\tglClear(GL_COLOR_BUFFER_BIT);\n\t\tglColor3d(1.0, 1.0, 1.0);\n\t\tDrawString(\"START\", WIDTH, HEIGHT, 300, 240);\n\t}\n\n\tif(start == 1){\n\t\tglClear(GL_COLOR_BUFFER_BIT);\n\n\t\tplayer();\t// \u81ea\u6a5f\u751f\u6210\n\t\tb.ball();\t// \u5f3e\u306e\u751f\u6210\n\n\t\tfor(i = 0; i <= 4; ++i){\n\t\t\tfor(j = 0; j <= 9; ++j){\n\t\t\t\tblo[i][j].block(j, i);\t// \u30d6\u30ed\u30c3\u30af\u306e\u751f\u6210\n\t\t\t\tglEnd();\n\t\t\t}\t\n\t\t}\n\t}\n\t\t\n\tif(gameover == 1){\t// \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u753b\u9762\n\t\tglClear(GL_COLOR_BUFFER_BIT);\n\t\tglColor3d(1.0, 0.0, 1.0);\n\t\tDrawString(\"Game over\", WIDTH, HEIGHT, 290, 240);\n\t\tif(gameoveri == 0){\n\t\t\tchannel6 = Mix_PlayChannel(-1, gameoverSE, 0);\n\t\t\tMix_HaltMusic();\n\t\t\tgameoveri = 1;\n\t\t}\n\t}\n\n\tif(clear == 45){ // \u30af\u30ea\u30a2\u753b\u9762\n\t\tglClear(GL_COLOR_BUFFER_BIT);\n\t\tglColor3d(1.0, 1.0, 0.0);\n\t\tDrawString(\"Clear!\", WIDTH, HEIGHT, 290, 240);\n\t\tif(cleari == 0){\n\t\t\tchannel5 = Mix_PlayChannel(-1, clearSE, 1);\n\t\t\tMix_HaltMusic();\n\t\t\tcleari = 1;\n\t\t}\n\t\t\n\t}\n\t\n\tglFlush();\n\tb.reverse();\t// \u58c1\u3068\u81ea\u6a5f\u306e\u5f53\u305f\u308a\u5224\u5b9a\n}\n\nvoid leftmove(){\t// \u81ea\u6a5f\u5de6\u79fb\u52d5\n\tif(px + pmovex > 40){\t// \u5de6\u7aef\u306e\u5f53\u305f\u308a\u5224\u5b9a\n\t\tpmovex -= 10.0;\t\t\n\t}\n\tif(shoot == 0){ bx = bx - 10; };  // \u30b9\u30bf\u30fc\u30c8\u3001\u3082\u3057\u304f\u306f\u30df\u30b9\u3057\u305f\u6642\u306e\u6319\u52d5\n}\n\nvoid rightmove(){\t// \u81ea\u6a5f\u53f3\u79fb\u52d5\n\tif(px + pmovex < 600){\n\t\tpmovex += 10.0;\t\t// \u53f3\u7aef\u306e\u5f53\u305f\u308a\u5224\u5b9a\n\t}\n\tif(shoot == 0){ bx = bx + 10; };  // \u30b9\u30bf\u30fc\u30c8\u3001\u3082\u3057\u304f\u306f\u30df\u30b9\u3057\u305f\u6642\u306e\u6319\u52d5\n}\n\nvoid allmove(){\n\tif(start ==1){\n\t\tbx += l  * movex;\t// x\u8ef8\u306e\u30dc\u30fc\u30eb\u306e\u52d5\u304d(\u4eee)\n\t\tby += ll * movey;\t// y\u8ef8\u306e\u30dc\u30fc\u30eb\u306e\u52d5\u304d(\u4eee)\t\t\n\t}\n\tif(leftm == 1){\n\t\tleftmove();\t\t// \u5de6\u79fb\u52d5\n\t}\n\tif(rightm == 1){\n\t\trightmove();\t// \u53f3\u79fb\u52d5\n\t}\n\tglutPostRedisplay();\n}\n\n// \u30ad\u30fc\u3092\u62bc\u3057\u305f\u6642\u306e\nvoid keydowan(unsigned char key, int x, int y){\n\tswitch(key){\n\t\tcase 's':\n\t\tcase 'S':\n\t\tif(start == 0){\n\t\t\tstart = 1;\t\t// \u6700\u521d\u306e\u30b9\u30bf\u30fc\u30c8\u753b\u9762\u304b\u3089\u30b2\u30fc\u30e0\u753b\u9762\u306b\u79fb\u884c\u3059\u308b\n\t\t\tMix_PlayMusic(music, -1);\n\t\t}\n\t\tbreak;\n\n\t\tcase 'g':\n\t\tif(gameover == 1){\t// \u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u753b\u9762\u306b\u79fb\u884c\u3057\u305f\u6642\u306b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\n\t\t\texit(1);\n\t\t}\n\n\t\tcase 'a':\t// a \u3092\u5165\u529b\u3059\u308b\u3068\u5de6\u306b\u52d5\u304f\n\t\tcase 'A': \n\t\tleftm = 1;\t// \u5de6\u79fb\u52d5\u306e\u5224\u5b9a\u3092\u51fa\u3059\n\t\tbreak;\n\n\t\tcase 'd':\t// d \u3092\u5165\u529b\u3059\u308b\u3068\u53f3\u306b\u52d5\u304f\n\t\tcase 'D':\n\t\trightm = 1; // \u53f3\u79fb\u52d5\u5224\u5b9a\u3092\u51fa\u3059\n\t\tbreak;\n\n\t\tcase 'q':\t// q Q ESC \u3092\u5165\u529b\u3059\u308b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u7d42\u4e86\n\t\tcase 'Q':\n\t\tcase '\\033':\n\t\texit(0);\n\n\t\tcase ' ':\n\t\tif(shoot == 0){\n\t\t\tshoot = 1;\n\t\t\tmovex = 0;\n\t\t\tmovey = 4;\n\t\t\tchannel4 = Mix_PlayChannel(-1, se4, 0);\n\t\t}\n\n\t\tbreak;\n\n\t\tcase 'l':\n\t\t\t//Mix_PlayChannel(-1, chunk, 0);\t// \u52b9\u679c\u518d\u751f\n\n\t\tdefault: \n\t\tbreak;\n\t}\n}\n\nvoid keyup(unsigned char key, int x, int y){\t// \u30ad\u30fc\u3092\u96e2\u3057\u305f\u6642\u306e\u6319\u52d5\n\tswitch(key){\t// a A \u3092\u96e2\u3057\u305f\u3068\u304d\u306b\u79fb\u52d5\u3092\u6b62\u3081\u308b\n\t\tcase 'a':\n\t\tcase 'A': \n\t\tleftm = 0;\n\t\tbreak;\n\n\t\tcase 'd':\t// d D \u3092\u8a71\u3057\u305f\u6642\u306b\u79fb\u52d5\u3092\u6b62\u3081\u308b\n\t\tcase 'D':\n\t\trightm = 0;\n\t\tbreak;\n\n\t\tdefault: break;\n\n\t}\t\n}\n\nvoid reshape(int w, int h){\t\t\t\t// \u5ea7\u6a19\u306e\u5b9a\u7fa9\u5909\u66f4\n\tglViewport(0, 0, w, h);\n\tglMatrixMode(GL_PROJECTION);\n\tglLoadIdentity();\n\tgluOrtho2D(0, 640, 480, 0);\t\t\t// \u5de6\u4e0a\u3092\u3000(0, 0) \u53f3\u4e0b\u3092 (640, 480)\u3068\u3059\u308b\n}\n\nvoid timer(int value){\t\t\t\t\t// \u6bce\u79d2\u3054\u3068\u306b\u518d\u63cf\u753b\u3057\u3066\u3001\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u308b\n\tglutIdleFunc(allmove);\t\t\t\t// \u5f3e\u3068\u81ea\u6a5f\u306e\u79fb\u52d5\n\tglutTimerFunc(100, timer, 0);\t\t// \u7b2c\u4e00\u5f15\u6570\u6bce\u79d2\u3067\u7e70\u308a\u8fd4\u3059\n}\n\nvoid init(){\n\tglClearColor(0.0, 0.0, 0.0, 1.0);\t// \u80cc\u666f\u8272\u3000\u9ed2\n}\n\n/*SDL\u306e\u521d\u671f\u8a2d\u5b9a*/\nvoid SDLsetup(){\n\n\tif(0 != SDL_Init(SDL_INIT_AUDIO)){\t// SDL\u521d\u671f\u5316\n\t\tcout << \"SDL setup error\" << endl;\n\t\texit(1);\n\t}                \n\n\tMix_AllocateChannels(16);\n\t\n\t// SDL_Mixer\u30aa\u30fc\u30d7\u30f3\n\tif(0 != Mix_OpenAudio(22050, AUDIO_S16,2,4096)){ \n\t\tcout << \"SDL mixer setup error\" << endl;\n\t\texit(1);\n\t}   \n\n\t /* \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080 */\n    music = Mix_LoadMUS(\"loop_113.wav\");\n    if(!music) { //\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    se1 = Mix_LoadWAV(\"se_sac01.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    se2 = Mix_LoadWAV(\"se_sab04.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    se3 = Mix_LoadWAV(\"se_sab05.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    se4 = Mix_LoadWAV(\"se_mod05.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    clearSE = Mix_LoadWAV(\"clear.wav\");\n    if(!se1) { //\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n\n    gameoverSE = Mix_LoadWAV(\"tin1.wav\");\n    if(!se1) { // \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306e\u8a73\u3057\u3044\u539f\u56e0\u3092\u51fa\u529b\n       cout << \"failed to load music: \" << Mix_GetError() << endl;\n    }\n  \n}\n\n/*\uff12\u3064\u306e\u53cd\u5c04\u97f3\u3092\u4ea4\u4e92\u306b\u9cf4\u3089\u3059\u95a2\u6570*/\nvoid SEplay(){\n\tif(sedecision == 0){ // se\u5224\u5b9a\u306e\u5909\u6570\u304c0\u306e\u6642\u3001\u52b9\u679c\u97f31\u3092\u9cf4\u3089\u3057\u30011\u3092\u4ee3\u5165\n\t\tchannel2 = Mix_PlayChannel(-1, se2, 0);\n\t\tsedecision = 1;\n\t}else{ // se\u5224\u5b9a\u306e\u5909\u6570\u304c0\u306e\u6642\u3001\u52b9\u679c\u97f32\u3092\u9cf4\u3089\u3057\u30010\u3092\u4ee3\u5165\n\t\tchannel3 = Mix_PlayChannel(-1, se3, 0);\n\t\tsedecision = 0;\n\t}\t\n}\n\nint main(int argc, char *argv[]){\n\tglutInitWindowPosition(100, 200);\t// \u30a6\u30a3\u30f3\u30c9\u30a6\u4f5c\u6210\u6642\u306e\u5ea7\u6a19\u6307\u5b9a\n\tglutInitWindowSize(WIDTH, HEIGHT);\t// \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n\tglutInit(&argc, argv);\t\t\t\n\tglutInitDisplayMode(GLUT_RGBA /*| GLUT_DOUBLE*/);\t// Red Green Brue +\u03b1(\u900f\u660e\u5ea6)= RGBA \n\tglutCreateWindow(argv[0]);\t\t\t// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u751f\u6210\u3002 argv[0]\u3060\u3068\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u305d\u306e\u307e\u307e\u30a6\u30a3\u30f3\u30c9\u30a6\u540d\u306b\u306a\u308b\n\tglutDisplayFunc(display);\t\t\t// display\u95a2\u6570\u5185\u3092\u8868\u793a\n\tglutKeyboardFunc(keydowan);\t\t\t// \u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u5165\u529b\u6319\u52d5\n\tglutKeyboardUpFunc(keyup);\t\t\t// \u96e2\u3057\u305f\u6642\u306e\u6319\u52d5\n\tglutTimerFunc(100, timer, 0);\t\t// timer \u95a2\u6570\u5185\u306e\u5b9f\u884c\n\tglutReshapeFunc(reshape);\t\t\t// \u753b\u9762\u306e\u518d\u5b9a\u7fa9\n\tinit();\n\tSDLsetup();\n\tglutMainLoop();\n\treturn 0;\n}\n\n```\n\npart1\u306e\u30b3\u30fc\u30c9\u306b\u52b9\u679c\u97f3\u3068\u7c21\u5358\u306a\u30b9\u30bf\u30fc\u30c8\u753b\u9762\u3001\u30af\u30ea\u30a2\u753b\u9762\u3001\u30b2\u30fc\u30e0\u30aa\u30fc\u30d0\u30fc\u753b\u9762\u3092\u4ed8\u3051\u52a0\u3048\u305f\u3082\u306e\u3067\u3059\u3002\u97f3\u6e90\u30d5\u30a1\u30a4\u30eb\u306fwav\u5f62\u5f0f\u306e\u3082\u306e\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u958b\u767a\u74b0\u5883\nMac version 10.10.5\n\n\u30bf\u30fc\u30df\u30ca\u30eb\u30b3\u30de\u30f3\u30c9\n```\ng++ -o \u30d5\u30a1\u30a4\u30eb\u540d.out \u30d5\u30a1\u30a4\u30eb\u540d.cpp -mmacosx-version-min=10.8 -framework GLUT -framework OpenGL -lSDL2 -lSDL2_mixer\n```\n\n\u3053\u308c\u304b\u3089\u306f3D\u51e6\u7406\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u89e6\u3063\u3066\u3044\u304f\u3068\u601d\u3046\u306e\u3067\u3001\u6539\u3081\u3066\u8a08\u7b97\u65b9\u6cd5\u3092\u898b\u76f4\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["C++", "glut", "OpenGL", "SDL", "\u30d6\u30ed\u30c3\u30af\u5d29\u3057"]}