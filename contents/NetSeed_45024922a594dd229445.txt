{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nVB.NET\u306b\u3066\uff64Lambda\u3084Delegate\u3092\u53d6\u308a\u6271\u3046\u969b\u306bC#\u3068\u306f\u5225\u306e\u6319\u52d5\u3092\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\uff61\n\u5c1a\uff64\u66f8\u304d\u624b\u306fC#\u3092\u4e3b\u306b\u6271\u3063\u3066\u3044\u308b\u306e\u3067\uff64VB.NET\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u4e0d\u624b\u969b\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306e\u3067\uff64\u4f55\u304b\u6c17\u3065\u304b\u308c\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\uff61\n\nVB.NET\u306b\u3067\u304d\u3066\uff64C#\u306b\u3067\u304d\u306a\u3044\u3053\u3068:\u30e9\u30e0\u30c0\u306b\u5bfe\u3059\u308b\u578b\u63a8\u8ad6\n\nC#\u306e\u5834\u5408\nC#\u3067\u306f\uff64\u30e9\u30e0\u30c0\u5f0f\u306b\u5bfe\u3059\u308b\u63a8\u8ad6\u306f\u8a31\u5bb9\u3055\u308c\u307e\u305b\u3093\uff61\n\nInvalid.cs\nvar add = (int x, int y) => x + y;\n\n\n\u3053\u308c\u306f\uff64\u30e9\u30e0\u30c0\u5f0f\u306e\u89e3\u91c8\u304c\u6c7a\u5b9a\u7684\u3067\u306f\u7121\u3044\u3053\u3068\u306b\u8d77\u56e0\u3057\u307e\u3059\uff61\u4e0a\u8a18\u306e\u5834\u5408\uff64\u63a8\u8ad6\u3057\u3046\u308b\u578b\u306f\uff64\n\nSystem.Func\nSystem.Linq.Expression>\n\u72ec\u81ea\u306b\u5b9a\u7fa9\u3055\u308c\u305fdelegate\n\u72ec\u81ea\u306b\u5b9a\u7fa9\u3055\u308c\u305fdelegate\u306eExpression\n\n\u306e\u3088\u3046\u306b\uff64\u4e00\u610f\u306b\u6c7a\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\uff64\u63a8\u8ad6\u304c\u5931\u6557\u3057\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u30b3\u30c8\u306b\u306a\u308a\u307e\u3059\uff61\n\nVB.NET\u306e\u5834\u5408\n\u3057\u304b\u3057\u306a\u304c\u3089\uff64VB.NET\u3067\u306f\uff64C#\u3067\u8a31\u5bb9\u3055\u308c\u306a\u304b\u3063\u305f\u30e9\u30e0\u30c0\u5f0f\u306b\u5bfe\u3059\u308b\u63a8\u8ad6\u304c\u8a31\u5bb9\u3055\u308c\u307e\u3059\n\nValid.vb\nDim add = Function(x As Integer, y As Integer) x + y\n\n\n\u3053\u306e\u5834\u5408\uff64add\u306e\u578b\u306f\u3069\u306e\u3088\u3046\u306b\u89e3\u91c8\u3055\u308c\u308b\u306e\u3067\u3057\u3087\u3046\u304b?\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u30e2\u30ce\u3092ILSpy\u3067\u30c7\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\nSampleA.vb\nImports System\n\nModule Module1\n    Sub Main()\n        Dim add = Function(x As Integer, y As Integer) x + y\n    End Sub\nEnd Module\n\n\n\u30c7\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff61(\u4e00\u90e8\u629c\u7c8b)\n\nDecompiled.vb\nImports Microsoft.VisualBasic.CompilerServices\nImports System\nImports System.Runtime.CompilerServices\n\nNamespace ConsoleApplication5\n    Friend Module Module1\n        <STAThread()>\n        Public Sub Main()\n            Dim add As VB$AnonymousDelegate_0(Of Integer, Integer, Integer) = Function(x As Integer, y As Integer) x + y\n        End Sub\n    End Module\nEnd Namespace\n\n\n\u3055\u3066\uff64\u30c7\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c\u3092\u773a\u3081\u3066\u307f\u308b\u3068\uff64\u5143\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u5b9a\u7fa9\u3057\u305f\u899a\u3048\u306e\u7121\u3044\uff64\"VB$AnonymousDelegate_0(Of Integer, Integer, Integer)\"\u3068\u3044\u3046\u30c7\u30ea\u30b2\u30fc\u30c8\u304c\u3067\u304d\u3042\u304c\u3063\u3066\u3044\u307e\u3059\uff61\u3053\u308c\u3092\uff64\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u308b\u3068\uff64\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff61\n\nGeneratedDelegate.vb\n<DebuggerDisplay(\"<generated method>\", Type = \"<generated method>\"), CompilerGenerated()>\nFriend Delegate Function VB$AnonymousDelegate_0(Of TArg0, TArg1, TResult)(x As TArg0, y As TArg1) As TResult\n\n\n\u4ee5\u4e0a\u304b\u3089\uff64VB.NET\u3067\u306f\uff64\u30e9\u30e0\u30c0\u5f0f\u3092\u63a8\u8ad6\u3055\u305b\u305f\u5834\u5408\uff64\u3053\u306e\u3088\u3046\u306a\u96a0\u3057\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u8a00\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff61\n\u5f93\u3063\u3066\uff64\u4e00\u822c\u7684\u306aSystem.Func\u3084System.Action\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\uff64\u4e0b\u8a18\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u5fc5\u8981\u306b\u306a\u308b\u3067\u3057\u3087\u3046\n\nSampleB.vb\nImports System\n\nModule Module1\n    Sub Main()\n        'CType\u3092\u5229\u7528\u3059\u308b\n        Dim add = CType(Function(x As Integer, y As Integer) x + y, Func(Of Integer, Integer, Integer))\n\n        '\u5909\u6570\u306e\u578b\u3092\u660e\u793a\u3059\u308b\n        Dim sayHello As Action = Sub() Console.WriteLine(\"hello world\")\n\n    End Sub\nEnd Module\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u751f\u6210\u3055\u308c\u305f\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u304b\u3089\u306e\u5909\u63db\n\u3055\u3066\uff64\u305d\u308c\u3067\u306f\uff64\u5148\u306e\u4f8b\u3067\u793a\u3057\u305f\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u81ea\u52d5\u751f\u6210\u3057\u305f\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u306f\u4ed6\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u3078\u5909\u63db\u53ef\u80fd\u306a\u306e\u3067\u3057\u3087\u3046\u304b?\u305d\u308c\u3092\u898b\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff61\n\u4ee5\u4e0b\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u793a\u3057\u307e\u3059\uff61\n\nConvertSample.vb\nImports System\n\nFriend Delegate Sub MyAction()\nFriend Delegate Function MyFunction(x As Integer, y As Integer) As Integer\nModule Module1\n\n    Sub Main()\n        Dim anonymousAction = Sub() Console.WriteLine(\"hello world\")\n        Dim action As Action = anonymousAction\n        Dim myAction As MyAction = anonymousAction\n\n        Dim anonymousFunction = Function(x As Integer, y As Integer) x + y\n        Dim func As Func(Of Integer, Integer, Integer) = anonymousFunction\n        Dim myFuncion As MyFunction = anonymousFunction\n\n    End Sub\nEnd Module\n\n\n\u3053\u306e\u3088\u3046\u306b\uff64\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u306f\u5f15\u6570\u53ca\u3073\u623b\u308a\u5024\u304c\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\uff64\u6697\u9ed9\u7684\u306b\u5909\u63db\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff61\n\u4f46\u3057\uff64\u3053\u308c\u306f\uff64\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u306b\u5bfe\u3059\u308b\u7279\u5225\u306a\u5bfe\u5fdc\u3067\u6709\u308a\uff64\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u660e\u793a\u7684\u306a\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u3092\u5909\u63db\u3059\u308b\u3053\u3068\u306f\u8a31\u5bb9\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\uff64\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\uff61\n\nInvalid.vb\nImports System\n\nFriend Delegate Sub MyAction()\nFriend Delegate Function MyFunction(x As Integer, y As Integer) As Integer\nModule Module1\n\n    Sub Main()\n        Dim action As Action = Sub() Console.WriteLine(\"hello world\")\n        Dim myAction As MyAction = CType(action, MyAction)\n\n        Dim func As Func(Of Integer, Integer, Integer) = Function(x As Integer, y As Integer) x + y\n        Dim myFunc As MyFunction = CType(func, MyFunction)\n\n    End Sub\nEnd Module\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c\u304c\u3069\u3046\u306a\u308b\u306e\u304b\n\u305d\u308c\u3067\u306f\uff64\u5148\u306b\u691c\u8a3c\u3057\u305f\u3088\u3046\u306a\u5909\u63db\u3092\u884c\u3063\u305f\u5834\u5408\uff64\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3069\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u304b\u691c\u8a3c\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff61\n\u5148\u306e\u4f8b\u3092\u30c7\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff61\n(\u4e00\u90e8\u6539\u5909)\n\nDecompiled.vb\nImports System\n\nFriend Delegate Sub MyAction()\nFriend Delegate Function MyFunction(x As Integer, y As Integer) As Integer\nModule Module1\n\n    Sub Main()\n        Dim anonymousAction = Sub() Console.WriteLine(\"hello world\")\n        Dim action As Action = New Action(AddressOf anonymousAction.Invoke)\n        Dim myAction As MyAction = New MyAction(AddressOf anonymousAction.Invoke)\n\n        Dim anonymousFunction = Function(x As Integer, y As Integer) x + y\n\n        Dim func As Func(Of Integer, Integer, Integer) = _\n            New Func(Of Integer, Integer, Integer)(AddressOf anonymousFunction.Invoke)\n\n        Dim myFuncion As MyFunction = New MyFunction(AddressOf anonymousFunction.Invoke)\n\n    End Sub\nEnd Module\n\n\n\u3053\u3053\u304b\u3089\u308f\u304b\u308b\u3088\u3046\u306b\uff64\u5143\u306b\u306a\u308b\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u30e9\u30c3\u30d7\u3059\u308b\u5f62\u3067\u4ed6\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\uff61\n\u3053\u306e\u7d50\u679c\uff64\u5909\u63db\u5148\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u306f\"\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u547c\u3076\u30c7\u30ea\u30b2\u30fc\u30c8\"\u3068\u306a\u308b\u30b3\u30c8\u304b\u3089\uff64\u5b9f\u884c\u52b9\u7387\u306b\u82e5\u5e72\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff61\n\n\u547c\u3073\u51fa\u3057\u306b\u304b\u304b\u308b\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u691c\u8a3c\u3059\u308b\n\u6700\u5f8c\u306b\uff64\u3069\u306e\u7a0b\u5ea6\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u4ecb\u5728\u3059\u308b\u306e\u304b\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u305f\uff61\n\nSample.vb\nImports System\nImports System.Diagnostics\nImports System.IO\n\nModule Module1\n\n    Sub Main()\n\n        Dim add = Function(x As Integer, y As Integer) x + y\n\n\n        Const cnt As Long = CType(Integer.MaxValue / 4, Long)\n\n        Dim addA = Function(x As Long, y As Long) x + y\n        Dim addB As Func(Of Long, Long, Long) = addA\n\n        Dim accum = addA(0, 0)\n        Console.WriteLine(accum)\n        accum = addB(10, 20)\n        Console.WriteLine(accum)\n\n        accum = 0\n\n        Dim watch = New Stopwatch()\n\n\n        Using wtr = New StreamWriter(\"result.csv\", False)\n\n            wtr.WriteLine(\"Category,Elapsed(ms)\")\n\n            For j = 0 To 10\n\n                watch.Restart()\n                For i = 0 To cnt\n                    accum = addA(accum, i)\n                Next\n                watch.Stop()\n                wtr.WriteLine(\"Anonymous,\" + watch.ElapsedMilliseconds.ToString())\n\n                FullCollect()\n\n                accum = 0L\n                watch.Restart()\n                For i = 0 To cnt\n                    accum = addB(accum, i)\n                Next\n                watch.Stop()\n                wtr.WriteLine(\"Func,\" + watch.ElapsedMilliseconds.ToString())\n\n            Next\n\n\n        End Using\n\n\n\n    End Sub\n\n    Sub FullCollect()\n\n        GC.Collect()\n        GC.WaitForPendingFinalizers()\n        GC.Collect()\n\n    End Sub\n\nEnd Module\n\n\n\u305d\u3057\u3066\uff64\u305d\u306e\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\n\n\n\nTrialCount\nVia System.Func(ms)\nVia Anonymous(ms)\n\n\n\n\n0\n2320\n1793\n\n\n1\n2316\n1736\n\n\n2\n2299\n1729\n\n\n3\n2282\n1715\n\n\n4\n2277\n1705\n\n\n5\n2281\n1708\n\n\n6\n2285\n1711\n\n\n7\n2281\n1714\n\n\n8\n2286\n1713\n\n\n9\n2283\n1715\n\n\n10\n2280\n1714\n\n\n\n\u3053\u306e\u3088\u3046\u306b\uff6410\u56de\u306e\u8a66\u884c\u306b\u5bfe\u3057\u3066\uff64\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u304b\u3089\u547c\u3073\u51fa\u3057\u305f\u5834\u5408\u306f\u5e73\u5747\u30671,723ms\uff64\u4ed6\u65b9\u5909\u63db\u3057\u305fSystem.Func\u7d4c\u7531\u306e\u5834\u5408\u306f2,290ms\u3068\u306a\u308a\uff64\u6c17\u306b\u3059\u308b\u307b\u3069\u3067\u306f\u7121\u3044\u3068\u306f\u601d\u3044\u307e\u3059\u304c\uff64\u3055\u308a\u3068\u3066\u8aa4\u5dee\u3068\u306f\u8a00\u3048\u306a\u3044\u7a0b\u5ea6\u306e\u5dee\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\uff61\n\n\u307e\u3068\u3081\nVB.NET\u306fC#\u3068\u7570\u306a\u308a\uff64\u578b\u63a8\u8ad6\u3092\u7528\u3044\u3066\u30e9\u30e0\u30c0\u5f0f\u3092\u53c2\u7167\u3055\u305b\u308b\u3053\u3068\u3084\uff64\u305d\u306e\u30e9\u30e0\u30c0\u5f0f\u3092\u540c\u4e00\u306e\u5f15\u6570\u3068\u623b\u308a\u5024\u3092\u6301\u3064\u4ed6\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u3078\u6697\u9ed9\u7684\u306b\u5909\u63db\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u307e\u3059\uff61\n\u3053\u308c\u3089\u3092\u6e80\u305f\u3059\u305f\u3081\u306b\uff64\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5f8c\u308d\u5074\u3067\u4f55\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u77e5\u308b\u3053\u3068\u306f\uff64\u4f55\u304b\u3042\u3063\u305f\u969b\u306e\u4e00\u52a9\u3068\u306a\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\uff61\n#\u306f\u3058\u3081\u306b\nVB.NET\u306b\u3066\uff64Lambda\u3084Delegate\u3092\u53d6\u308a\u6271\u3046\u969b\u306bC#\u3068\u306f\u5225\u306e\u6319\u52d5\u3092\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\uff61\n\n\u5c1a\uff64\u66f8\u304d\u624b\u306fC#\u3092\u4e3b\u306b\u6271\u3063\u3066\u3044\u308b\u306e\u3067\uff64VB.NET\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u4e0d\u624b\u969b\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306e\u3067\uff64\u4f55\u304b\u6c17\u3065\u304b\u308c\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\uff61\n\n#VB.NET\u306b\u3067\u304d\u3066\uff64C#\u306b\u3067\u304d\u306a\u3044\u3053\u3068:\u30e9\u30e0\u30c0\u306b\u5bfe\u3059\u308b\u578b\u63a8\u8ad6\n\n##C#\u306e\u5834\u5408\n\nC#\u3067\u306f\uff64\u30e9\u30e0\u30c0\u5f0f\u306b\u5bfe\u3059\u308b\u63a8\u8ad6\u306f\u8a31\u5bb9\u3055\u308c\u307e\u305b\u3093\uff61\n\n```csharp:Invalid.cs\nvar add = (int x, int y) => x + y;\n```\n\n\u3053\u308c\u306f\uff64\u30e9\u30e0\u30c0\u5f0f\u306e\u89e3\u91c8\u304c\u6c7a\u5b9a\u7684\u3067\u306f\u7121\u3044\u3053\u3068\u306b\u8d77\u56e0\u3057\u307e\u3059\uff61\u4e0a\u8a18\u306e\u5834\u5408\uff64\u63a8\u8ad6\u3057\u3046\u308b\u578b\u306f\uff64\n\n* System.Func<int,int,int>\n* System.Linq.Expression<Func<int,int,int>>\n* \u72ec\u81ea\u306b\u5b9a\u7fa9\u3055\u308c\u305fdelegate\n* \u72ec\u81ea\u306b\u5b9a\u7fa9\u3055\u308c\u305fdelegate\u306eExpression\n\n\u306e\u3088\u3046\u306b\uff64\u4e00\u610f\u306b\u6c7a\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\uff64\u63a8\u8ad6\u304c\u5931\u6557\u3057\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u30b3\u30c8\u306b\u306a\u308a\u307e\u3059\uff61\n\n##VB.NET\u306e\u5834\u5408\n\n\u3057\u304b\u3057\u306a\u304c\u3089\uff64VB.NET\u3067\u306f\uff64C#\u3067\u8a31\u5bb9\u3055\u308c\u306a\u304b\u3063\u305f\u30e9\u30e0\u30c0\u5f0f\u306b\u5bfe\u3059\u308b\u63a8\u8ad6\u304c\u8a31\u5bb9\u3055\u308c\u307e\u3059\n\n```vb.net:Valid.vb\nDim add = Function(x As Integer, y As Integer) x + y\n```\n\n\u3053\u306e\u5834\u5408\uff64add\u306e\u578b\u306f\u3069\u306e\u3088\u3046\u306b\u89e3\u91c8\u3055\u308c\u308b\u306e\u3067\u3057\u3087\u3046\u304b?\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u30e2\u30ce\u3092ILSpy\u3067\u30c7\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\n```vb.net:SampleA.vb\nImports System\n\nModule Module1\n    Sub Main()\n        Dim add = Function(x As Integer, y As Integer) x + y\n    End Sub\nEnd Module\n```\n\n\u30c7\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff61(\u4e00\u90e8\u629c\u7c8b)\n\n```vb.net:Decompiled.vb\nImports Microsoft.VisualBasic.CompilerServices\nImports System\nImports System.Runtime.CompilerServices\n\nNamespace ConsoleApplication5\n\tFriend Module Module1\n\t\t<STAThread()>\n\t\tPublic Sub Main()\n\t\t\tDim add As VB$AnonymousDelegate_0(Of Integer, Integer, Integer) = Function(x As Integer, y As Integer) x + y\n\t\tEnd Sub\n\tEnd Module\nEnd Namespace\n```\n\n\u3055\u3066\uff64\u30c7\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c\u3092\u773a\u3081\u3066\u307f\u308b\u3068\uff64\u5143\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u5b9a\u7fa9\u3057\u305f\u899a\u3048\u306e\u7121\u3044\uff64\"VB$AnonymousDelegate_0(Of Integer, Integer, Integer)\"\u3068\u3044\u3046\u30c7\u30ea\u30b2\u30fc\u30c8\u304c\u3067\u304d\u3042\u304c\u3063\u3066\u3044\u307e\u3059\uff61\u3053\u308c\u3092\uff64\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u308b\u3068\uff64\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff61\n\n```vb.net:GeneratedDelegate.vb\n<DebuggerDisplay(\"<generated method>\", Type = \"<generated method>\"), CompilerGenerated()>\nFriend Delegate Function VB$AnonymousDelegate_0(Of TArg0, TArg1, TResult)(x As TArg0, y As TArg1) As TResult\n```\n\n\u4ee5\u4e0a\u304b\u3089\uff64VB.NET\u3067\u306f\uff64\u30e9\u30e0\u30c0\u5f0f\u3092\u63a8\u8ad6\u3055\u305b\u305f\u5834\u5408\uff64\u3053\u306e\u3088\u3046\u306a\u96a0\u3057\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u8a00\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff61\n\n\u5f93\u3063\u3066\uff64\u4e00\u822c\u7684\u306aSystem.Func\u3084System.Action\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\uff64\u4e0b\u8a18\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u5fc5\u8981\u306b\u306a\u308b\u3067\u3057\u3087\u3046\n\n```vb.net:SampleB.vb\nImports System\n\nModule Module1\n    Sub Main()\n        'CType\u3092\u5229\u7528\u3059\u308b\n        Dim add = CType(Function(x As Integer, y As Integer) x + y, Func(Of Integer, Integer, Integer))\n\n        '\u5909\u6570\u306e\u578b\u3092\u660e\u793a\u3059\u308b\n        Dim sayHello As Action = Sub() Console.WriteLine(\"hello world\")\n\n    End Sub\nEnd Module\n```\n\n#\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u751f\u6210\u3055\u308c\u305f\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u304b\u3089\u306e\u5909\u63db\n\u3055\u3066\uff64\u305d\u308c\u3067\u306f\uff64\u5148\u306e\u4f8b\u3067\u793a\u3057\u305f\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u81ea\u52d5\u751f\u6210\u3057\u305f\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u306f\u4ed6\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u3078\u5909\u63db\u53ef\u80fd\u306a\u306e\u3067\u3057\u3087\u3046\u304b?\u305d\u308c\u3092\u898b\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff61\n\u4ee5\u4e0b\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u793a\u3057\u307e\u3059\uff61\n\n```vb.net:ConvertSample.vb\nImports System\n\nFriend Delegate Sub MyAction()\nFriend Delegate Function MyFunction(x As Integer, y As Integer) As Integer\nModule Module1\n\n    Sub Main()\n        Dim anonymousAction = Sub() Console.WriteLine(\"hello world\")\n        Dim action As Action = anonymousAction\n        Dim myAction As MyAction = anonymousAction\n\n        Dim anonymousFunction = Function(x As Integer, y As Integer) x + y\n        Dim func As Func(Of Integer, Integer, Integer) = anonymousFunction\n        Dim myFuncion As MyFunction = anonymousFunction\n\n    End Sub\nEnd Module\n```\n\n\u3053\u306e\u3088\u3046\u306b\uff64\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u306f\u5f15\u6570\u53ca\u3073\u623b\u308a\u5024\u304c\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\uff64\u6697\u9ed9\u7684\u306b\u5909\u63db\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff61\n\u4f46\u3057\uff64\u3053\u308c\u306f\uff64\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u306b\u5bfe\u3059\u308b\u7279\u5225\u306a\u5bfe\u5fdc\u3067\u6709\u308a\uff64\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u660e\u793a\u7684\u306a\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u3092\u5909\u63db\u3059\u308b\u3053\u3068\u306f\u8a31\u5bb9\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\uff64\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\uff61\n\n```vb.net:Invalid.vb\nImports System\n\nFriend Delegate Sub MyAction()\nFriend Delegate Function MyFunction(x As Integer, y As Integer) As Integer\nModule Module1\n\n    Sub Main()\n        Dim action As Action = Sub() Console.WriteLine(\"hello world\")\n        Dim myAction As MyAction = CType(action, MyAction)\n\n        Dim func As Func(Of Integer, Integer, Integer) = Function(x As Integer, y As Integer) x + y\n        Dim myFunc As MyFunction = CType(func, MyFunction)\n\n    End Sub\nEnd Module\n```\n\n##\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c\u304c\u3069\u3046\u306a\u308b\u306e\u304b\n\u305d\u308c\u3067\u306f\uff64\u5148\u306b\u691c\u8a3c\u3057\u305f\u3088\u3046\u306a\u5909\u63db\u3092\u884c\u3063\u305f\u5834\u5408\uff64\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3069\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u304b\u691c\u8a3c\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff61\n\n\u5148\u306e\u4f8b\u3092\u30c7\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff61\n(\u4e00\u90e8\u6539\u5909)\n\n```vb.net:Decompiled.vb\nImports System\n\nFriend Delegate Sub MyAction()\nFriend Delegate Function MyFunction(x As Integer, y As Integer) As Integer\nModule Module1\n\n    Sub Main()\n        Dim anonymousAction = Sub() Console.WriteLine(\"hello world\")\n        Dim action As Action = New Action(AddressOf anonymousAction.Invoke)\n        Dim myAction As MyAction = New MyAction(AddressOf anonymousAction.Invoke)\n\n        Dim anonymousFunction = Function(x As Integer, y As Integer) x + y\n\n        Dim func As Func(Of Integer, Integer, Integer) = _\n            New Func(Of Integer, Integer, Integer)(AddressOf anonymousFunction.Invoke)\n\n        Dim myFuncion As MyFunction = New MyFunction(AddressOf anonymousFunction.Invoke)\n\n    End Sub\nEnd Module\n```\n\n\u3053\u3053\u304b\u3089\u308f\u304b\u308b\u3088\u3046\u306b\uff64\u5143\u306b\u306a\u308b\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u30e9\u30c3\u30d7\u3059\u308b\u5f62\u3067\u4ed6\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\uff61\n\n\u3053\u306e\u7d50\u679c\uff64\u5909\u63db\u5148\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u306f\"\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u547c\u3076\u30c7\u30ea\u30b2\u30fc\u30c8\"\u3068\u306a\u308b\u30b3\u30c8\u304b\u3089\uff64\u5b9f\u884c\u52b9\u7387\u306b\u82e5\u5e72\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff61\n\n##\u547c\u3073\u51fa\u3057\u306b\u304b\u304b\u308b\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u691c\u8a3c\u3059\u308b\n\u6700\u5f8c\u306b\uff64\u3069\u306e\u7a0b\u5ea6\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u4ecb\u5728\u3059\u308b\u306e\u304b\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u305f\uff61\n\n```vb.net:Sample.vb\nImports System\nImports System.Diagnostics\nImports System.IO\n\nModule Module1\n    \n    Sub Main()\n\n        Dim add = Function(x As Integer, y As Integer) x + y\n\n\n        Const cnt As Long = CType(Integer.MaxValue / 4, Long)\n\n        Dim addA = Function(x As Long, y As Long) x + y\n        Dim addB As Func(Of Long, Long, Long) = addA\n\n        Dim accum = addA(0, 0)\n        Console.WriteLine(accum)\n        accum = addB(10, 20)\n        Console.WriteLine(accum)\n\n        accum = 0\n\n        Dim watch = New Stopwatch()\n\n\n        Using wtr = New StreamWriter(\"result.csv\", False)\n\n            wtr.WriteLine(\"Category,Elapsed(ms)\")\n\n            For j = 0 To 10\n\n                watch.Restart()\n                For i = 0 To cnt\n                    accum = addA(accum, i)\n                Next\n                watch.Stop()\n                wtr.WriteLine(\"Anonymous,\" + watch.ElapsedMilliseconds.ToString())\n\n                FullCollect()\n\n                accum = 0L\n                watch.Restart()\n                For i = 0 To cnt\n                    accum = addB(accum, i)\n                Next\n                watch.Stop()\n                wtr.WriteLine(\"Func,\" + watch.ElapsedMilliseconds.ToString())\n\n            Next\n\n\n        End Using\n\n\n\n    End Sub\n\n    Sub FullCollect()\n\n        GC.Collect()\n        GC.WaitForPendingFinalizers()\n        GC.Collect()\n\n    End Sub\n\nEnd Module\n```\n\n\u305d\u3057\u3066\uff64\u305d\u306e\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\n\n| TrialCount | Via System.Func(ms)| Via Anonymous(ms) |\n|:-----------|-------------:|------------:|\n|0|2320|1793\n|1|2316|1736\n|2|2299|1729\n|3|2282|1715\n|4|2277|1705\n|5|2281|1708\n|6|2285|1711\n|7|2281|1714\n|8|2286|1713\n|9|2283|1715\n|10|2280|1714\n\n\u3053\u306e\u3088\u3046\u306b\uff6410\u56de\u306e\u8a66\u884c\u306b\u5bfe\u3057\u3066\uff64\u533f\u540d\u30c7\u30ea\u30b2\u30fc\u30c8\u578b\u304b\u3089\u547c\u3073\u51fa\u3057\u305f\u5834\u5408\u306f\u5e73\u5747\u30671,723ms\uff64\u4ed6\u65b9\u5909\u63db\u3057\u305fSystem.Func\u7d4c\u7531\u306e\u5834\u5408\u306f2,290ms\u3068\u306a\u308a\uff64\u6c17\u306b\u3059\u308b\u307b\u3069\u3067\u306f\u7121\u3044\u3068\u306f\u601d\u3044\u307e\u3059\u304c\uff64\u3055\u308a\u3068\u3066\u8aa4\u5dee\u3068\u306f\u8a00\u3048\u306a\u3044\u7a0b\u5ea6\u306e\u5dee\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\uff61\n\n#\u307e\u3068\u3081\nVB.NET\u306fC#\u3068\u7570\u306a\u308a\uff64\u578b\u63a8\u8ad6\u3092\u7528\u3044\u3066\u30e9\u30e0\u30c0\u5f0f\u3092\u53c2\u7167\u3055\u305b\u308b\u3053\u3068\u3084\uff64\u305d\u306e\u30e9\u30e0\u30c0\u5f0f\u3092\u540c\u4e00\u306e\u5f15\u6570\u3068\u623b\u308a\u5024\u3092\u6301\u3064\u4ed6\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u3078\u6697\u9ed9\u7684\u306b\u5909\u63db\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u307e\u3059\uff61\n\u3053\u308c\u3089\u3092\u6e80\u305f\u3059\u305f\u3081\u306b\uff64\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5f8c\u308d\u5074\u3067\u4f55\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u77e5\u308b\u3053\u3068\u306f\uff64\u4f55\u304b\u3042\u3063\u305f\u969b\u306e\u4e00\u52a9\u3068\u306a\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\uff61", "tags": ["C#", "VB.Net"]}