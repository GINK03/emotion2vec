{"context": "\n\n\u306f\u3058\u3081\u306b\nDI(Dependency Injection)\u306e\u30e1\u30ea\u30c3\u30c8\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u304c\u3001\nSeasar - DI Container with AOP \u306b\u3042\u308b\u3088\u3046\u306b\u3001\n\u300c\u304a\u4e92\u3044\u304c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u307f\u3067\u4f1a\u8a71\u3059\u308b\u300d\u3068\u3044\u3046\u8003\u3048\u65b9\u304c\u500b\u4eba\u7684\u306b\u4e00\u756a\u3057\u3063\u304f\u308a\u304d\u307e\u3059\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u30011\u3064\u306e\u95a2\u6570\u306e\u4e2d\u3067\u51e6\u7406\u304c\u5b8c\u7d50\u3059\u308b\u3053\u3068\u306f\u5c11\u306a\u304f\u3001\u300c\u4ed6\u306e\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u300d\u304c\u5fc5\u8981\u306b\u306a\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001Unit\u30c6\u30b9\u30c8\u306e\u6642\u70b9\u3067\u306f\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u95a2\u6570\u306e\u8cac\u52d9\u3068\u3057\u3066\u306f\u3001\n\n\u81ea\u5206\u306e\u8cac\u52d9\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u304b\n\n\u306e\u307f\u304c\u89b3\u70b9\u3068\u306a\u308a\u307e\u3059\u3002\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u95a2\u6570\u304c\u300c\u4ed6\u306e\u95a2\u6570\u300d\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u6642\u306f\n\n\u300c\u4ed6\u306e\u95a2\u6570\u300d\u304c\u547c\u3073\u51fa\u3055\u305b\u3066\u3044\u308b\u304b\n\u547c\u3073\u51fa\u3057\u7d50\u679c\u3092\u5143\u306b\u9069\u5207\u306a\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u304b\n\n\u304c\u89b3\u70b9\u3068\u3057\u3066\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3076\u3063\u3061\u3083\u3051\u3066\u8a00\u3048\u3070\u3001\u300c\u4ed6\u306e\u95a2\u6570\u300d\u306e\u5185\u90e8\u5b9f\u88c5\u306f\u3069\u3046\u3067\u3082\u826f\u3044\u306e\u3067\u3059\u3002\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u901a\u308a\u3067\u3042\u308c\u3070\u305d\u308c\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\u5b9f\u969b\u306e\u3068\u3053\u308d\u3001\u300c\u4ed6\u306e\u95a2\u6570\u300d\u304c\u307e\u3060\u672a\u5b8c\u6210\u3060\u3063\u305f\u308a\u3001\u5916\u90e8\u30b7\u30b9\u30c6\u30e0\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u3001\u81ea\u5206\u306e\u8cac\u52d9\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u305f\u3044\u3060\u3051\u306a\u3089\u300c\u4ed6\u306e\u95a2\u6570\u300d\u306e\u5b9f\u88c5\u3092Mock\u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u3044\u3046\u624b\u6bb5\u304c\u53d6\u3089\u308c\u307e\u3059\u3002\nDI\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067Unit\u30c6\u30b9\u30c8\u306e\u969b\u306b\u306f\u300c\u4ed6\u306e\u95a2\u6570\u300d\u3092\u300cMock\u300d\u306b\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u969b\u306bUnit\u30c6\u30b9\u30c8\u3059\u308b\u304b\u3069\u3046\u304b\u306f\u3055\u3066\u304a\u304d\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u72b6\u6cc1\u3092\u4f5c\u308b\u306e\u306f\u5927\u4e8b\u306a\u3053\u3068\u3060\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\nScala\u3067DI\u3063\u3066\u3069\u3046\u306a\u3093\u3067\u3057\u3087\u3046\n\u3067\u306f\u3001Scala\u3067\u306f\u3069\u3046\u304b\u3001\u3068\u3044\u3046\u6240\u3067\u3059\u304c\u3001\u79c1\u304c\u77e5\u3063\u3066\u3044\u308b\u4e2d\u3067\u306fWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067DI\u3092\u63a8\u5968\u3057\u3066\u305d\u3046\u306a\u306e\u306f\u6700\u8fd1\u306ePlay Framework\u304f\u3089\u3044\u306e\u8a8d\u8b58\u3067\u3059\u3002\u5f8c\u306fCake\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3046\u3001\u3068\u3044\u3046\u306e\u304c\u5927\u90e8\u5206\u306e\u3088\u3046\u306b\u898b\u53d7\u3051\u3089\u308c\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u79c1\u306e\u982d\u3067\u306fCake\u30d1\u30bf\u30fc\u30f3\u3092\u300c\u7c21\u5358\u3060\u300d\u3068\u3082\u601d\u3048\u305a\u3001\u300c\u307e\u3041\u3001\u7c21\u5358\u306a\u30b7\u30b9\u30c6\u30e0\u3060\u304b\u3089DI\u3068\u304b\u8003\u3048\u306a\u304f\u3066\u826f\u3044\u3084\u300d\u3068\u9003\u3052\u3066\u304d\u307e\u3057\u305f\u3002\nService\u3084Dao\u306fobject\u306b\u3057\u3066\u305d\u306e\u5834\u3092\u3057\u306e\u3044\u3067\u3044\u305f\u306e\u3067\u3059\u3002\n\u3067\u3059\u304c\u6700\u8fd1\u3001\u7b2c\u4f55\u6b21\u304b\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u304cDI\u306e\u8a71\u304c\u76db\u308a\u4e0a\u304c\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3057\u3001\n\u300cobject\u76f4\u63a5\u547c\u3073\u51fa\u3057\u3067\u672c\u5f53\u306b\u305d\u308c\u3067\u826f\u3044\u306e\uff1f\u300d\u3068\u5fc3\u306b\u554f\u3044\u304b\u3051\u3066\u304f\u308b\u3082\u3046\u4e00\u4eba\u306e\u81ea\u5206\u306e\u58f0\u304c\u7121\u8996\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u300c\u30c6\u30b9\u30bf\u30d3\u30ea\u30c6\u30a3\u304c\u60aa\u3044\u307e\u307e\u653e\u7f6e\u3057\u3066developer\u3092\u540d\u4e57\u3063\u3066\u3044\u3044\u306e\u304b\u300d\u3068\u3044\u3046\u6c17\u6301\u3061\u304c\u6cb8\u3005\u3068\u6e67\u3044\u3066\u304d\u305f\u306e\u3067\u52e2\u3044\u3067\u66f8\u3044\u3066\u307f\u305f\u6b21\u7b2c\u3067\u3059\u3002\u5c11\u3057\u9577\u3044\u3067\u3059\u304c\u3001\u304a\u4ed8\u304d\u5408\u3044\u304f\u3060\u3055\u3044\u3002\n\nDI\u30b3\u30f3\u30c6\u30ca\u306e\u5c0e\u5165\nSkinnyFramework\u3092\u4f7f\u7528\u3057\u305f\u4eca\u306e\u307e\u307e\u3067\u3082ScalaMock\u3092\u4f7f\u3046\u3053\u3068\u3067object\u306eMock\u3082\u4f5c\u308c\u306a\u304f\u306f\u7121\u3055\u305d\u3046\u3067\u3059\u304c\u306a\u3093\u3068\u306a\u304f\u9762\u5012\u305d\u3046\u3067\u3059\u3002\nScala\u3084\u3063\u3066\u308b\u4eba\u304cDI\u3084\u308b\u6642\u306e\u300c\u666e\u901a\u300d\u306fCake\u30d1\u30bf\u30fc\u30f3\u306a\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u79c1\u306e\u3088\u3046\u306a\u51e1\u4eba\u306b\u306fDI\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u3067\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Guice\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u79c1\u304c\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308b\u6642\u306e\u524d\u63d0\u6761\u4ef6\nWeb\u30b7\u30b9\u30c6\u30e0\u306e\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067\u8003\u3048\u305f\u6642\u3001\n\n\nController\n\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u308b\n\u547c\u3079\u308b\u306e\u306fService\n\n\nService\n\n\nDao\u3092\u547c\u3093\u3060\u308a\u30c7\u30fc\u30bf\u3092\u3054\u306b\u3087\u3054\u306b\u3087\u3057\u3066Controller\u3078\u8fd4\u3059\n\u547c\u3079\u308b\u306e\u306fDao / Service\n\n\nDao\n\n\nRDBMS\u3078SQL\u3092\u767a\u884c\u3059\u308b\n\n\n\n\u306e\u3088\u3046\u306b\u8cac\u52d9\u3092\u9650\u5b9a\u3057\u3066\u8ad6\u7406\u7684\u306b\u30ec\u30a4\u30e4\u3092\u8a2d\u3051\u3001\u305d\u306e\u30ec\u30a4\u30e4\u9593\u306e\u547c\u3073\u51fa\u3057\u306e\u969b\u306bDI\u3092\u4f7f\u7528\u3057\u307e\u30591 \u3002\ntrait\u3068\u5b9f\u88c5\u30af\u30e9\u30b9\u306f1:1\u306e\u95a2\u4fc2\u3067\u72b6\u614b\u3092\u6301\u305f\u305b\u305a\u3001Singleton\u3067\u30e1\u30e2\u30ea\u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u5fc3\u304c\u3051\u307e\u3059\u3002\n\u30ec\u30a4\u30e4\u547c\u3073\u51fa\u3057\u6642\u306e\u5f15\u6570\u3068\u3057\u3066\u306f\u57fa\u672c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4f5c\u308a\u3084\u3059\u3044\u3082\u306e\u3068\u3057(POJO\u7684\u306a\u5974)\u3001HttpRequest\u7b49\u306f\u7981\u6b62\u3068\u3044\u3046\u611f\u3058\u306b\u3057\u307e\u3059\u3002\nScala\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u300cJava\u3067\u3084\u308b\u306a\u3089\u3053\u3046\u306a\u3063\u3061\u3083\u3046\u304b\u3082\u306d\u300d\u3068\u3044\u3046\u69cb\u6210\u3067\u30592\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nGitHub\u3068\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\n\nDao\n\nStaff.scala\ncase class Staff(\n  id: Long,\n  staffName: String\n)\n\ntrait StaffDao {\n  def create(entity:Staff)(implicit s:DBSession):Long\n  def update(entity:Staff)(implicit s:DBSession):Long\n  def findById(id:Long)(implicit s:DBSession):Option[Staff]\n  def deleteById(id:Long)(implicit s:DBSession):Int\n}\n\nobject Staff extends SkinnyCRUDMapper[Staff] with StaffDao {\n  override lazy val tableName = \"staff\"\n  override lazy val defaultAlias = createAlias(\"s\")\n\n  override def extract(rs: WrappedResultSet, rn: ResultName[Staff]): Staff = new Staff(\n    id = rs.get(rn.id),\n    staffName = rs.get(rn.staffName)\n  )\n\n  override def create(entity: Staff)(implicit session: DBSession): Long = {\n    Staff.createWithAttributes(\n      'staffName -> entity.staffName\n    )\n  }\n\n  override def update(entity: Staff)(implicit session: DBSession): Long = {\n    Staff.updateById(entity.id).withAttributes(\n      'staffName -> entity.staffName\n    )\n  }\n}\n\n\n\nSkinny-ORM\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u5b9a\u7fa9\u3057\u305ftrait\u306e\u5b9f\u88c5\u306fclass\u3067\u306f\u306a\u304fobject\u306b\u306a\u308a\u307e\u3059\u3002DI\u306b\u95a2\u3059\u308b\u8a18\u8ff0\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\nService\n\nStaffService.scala\n\ntrait StaffService {\n\n  @Inject\n  private val staffDao:StaffDao = null\n\n  def createStaff(name:String)(implicit session:DBSession) = {\n    staffDao.create(Staff(id = -1L, staffName = name))\n  }\n\n  def getStaff(id:Long)(implicit session:DBSession) = {\n    staffDao.findById(id)\n  }\n}\n\nclass StaffServiceImpl extends StaffService\n\n\n\nDao\u306etrait\u304c\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3044\u307e\u3059\u3002Field Injection\u3067Guice\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\ntrait\u5074\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u6301\u305f\u305b\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u597d\u307f\u306e\u554f\u984c\u3067\u3059\u304c\u3001\u30b7\u30b9\u30c6\u30e0\u5185\u3067\u7d71\u4e00\u306f\u3057\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u3002\n\nController\n\nRootController.scala\nclass RootController extends ApplicationController with DiInjector {\n  def index = {\n    DB.localTx { implicit session =>\n      val staffService = injector.getInstance(classOf[StaffService])\n      val id = staffService.createStaff(\"DI\u3082\u826f\u3044\u3082\u3093\u3060\u305c\uff01\" + new Date())\n      println(id)\n      render(\"/root/index\")\n    }\n  }\n}\n\n\nSkinnyFramework\u306eController\u3067\u3059\u3002DiInjector\u3068\u3044\u3046trait\u3092mixin\u3057\u3066\u3044\u307e\u3059\u3002\nval staffService = injector.getInstance(classOf[StaffService])\n\n\u306e\u7b87\u6240\u304cGuice\u304b\u3089\u5f53\u8a72Service\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u7b87\u6240\u306b\u306a\u308a\u307e\u3059\u3002\u8a72\u5f53Service\u304cDao\u306b\u4f9d\u5b58\u3059\u308b\u5834\u5408\u3082\u828b\u3065\u308b\u5f0f\u306bInject\u3055\u308c\u307e\u3059\u3002\n\nModule\n\nBindModule.scala\nclass BindModule extends AbstractModule{\n  override def configure() = {\n    //Service\u306fclass\u306a\u306e\u3067to\u3001Singleton   \n    bind(classOf[StaffService]).to(classOf[StaffServiceImpl]).in(classOf[Singleton])\n\n    //Dao\u306f\u3001object\u306a\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8a2d\u5b9a\n    bind(classOf[StaffDao]).toInstance(Staff)\n  }\n}\n\nobject BindModule {\n  val injector = Guice.createInjector(new BindModule())\n}\n\n\n\nGuice\u306b\u3001\u300c\u3053\u3093\u306a\u95a2\u9023\u3067trait\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7ba1\u7406\u3057\u3066\u306d\u300d\u3068\u8a2d\u5b9a\u3059\u308b\u7b87\u6240\u306b\u306a\u308a\u307e\u3059\u3002\nService\u306fclass\u3001Dao\u306fobject\u306a\u306e\u3067\u8a2d\u5b9a\u65b9\u6cd5\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\nInjector\n\nDiInjector.scala\n\ntrait DiInjector {\n  val injector = BindModule.injector\n}\n\n\n\nModule\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7ba1\u7406\u3059\u308btrait\u3067\u3059\u3002Controller\u3067mixin\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u308f\u3056\u308f\u3056trait\u5316\u3057\u3066\u3044\u308b\u306e\u306fUnit\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3067\u3059\u3002\n\nDao\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n\nStaffSpec.scala\n\nclass StaffSpec extends fixture.FunSpec with AutoRollback with Matchers with DBSettings with BeforeAndAfter {\n\n  @Inject\n  private val staffDao:StaffDao = null\n\n  before {\n    BindModule.injector.injectMembers(this)\n  }\n\n  describe(\"create\") {\n    it(\"\u793e\u54e1\u3092\u4f5c\u6210\u3057\u3001\u66f4\u65b0\u3057\u3066\u3001\u524a\u9664\u3059\u308b\u30c6\u30b9\u30c8\") { implicit session =>\n\n      val createdId = staffDao.create(Staff(id=1L, staffName = \"\u3068\u30fc\u308d\u304f\u793e\u54e1\uff01\uff01\"))\n      staffDao.findById(createdId).get.staffName should be (\"\u3068\u30fc\u308d\u304f\u793e\u54e1\uff01\uff01\")\n\n      val staffDi = Staff(id=createdId, staffName = \"\u66f4\u65b0\u5f8c\u793e\u54e1\u540d\uff01\uff01\")\n      staffDao.update(staffDi)\n\n      staffDao.findById(createdId).get.staffName should be (\"\u66f4\u65b0\u5f8c\u793e\u54e1\u540d\uff01\uff01\")\n\n      staffDao.deleteById(createdId)\n      staffDao.findById(createdId) should be (None)\n    }\n  }\n}\n\n\n\u500b\u4eba\u7684\u306b\u306fDao\u306e\u30c6\u30b9\u30c8\u306f\u5b9f\u969b\u306bSQL\u3092\u767a\u884c\u3055\u305b\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067\u3001Mock\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002\nbefore {\n  BindModule.injector.injectMembers(this)\n}\n\n\u306e\u7b87\u6240\u3067\u3001Inject\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b\u30e1\u30f3\u30d0\u5909\u6570\u306bInjection\u3057\u3066\u3082\u3089\u3044\u3001\u305d\u308c\u3092\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3067\u547c\u3073\u51fa\u3057\u3001\u7d50\u679c\u3069\u3046\u3060\u3063\u305f\u304b\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\n\nService\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n\nStaffServiceSpec.scala\n\nclass StaffServiceSpec extends fixture.FunSpec with AutoRollback with Matchers with DBSettings with BeforeAndAfter with MockitoSugar {\n\n  @Inject\n  private val staffService:StaffService = null\n\n  before {\n    Guice.createInjector(\n      Modules.`override`(new BindModule()).`with`(createMockModule())\n    ).injectMembers(this)\n  }\n\n  describe(\"getStaff\") {\n    it(\"DB\u53d6\u5f97\") { implicit session =>\n      val actual = staffService.getStaff(2L).get\n      actual.id should be (2L)\n      actual.staffName should be (\"Mock\u793e\u54e1\u30f3\uff01\")\n      staffService.getStaff(1L) should be (None)\n    }\n  }\n\n  private def createMockModule() = new AbstractModule() {\n    override def configure() = {\n      val m = mock[StaffDao]\n      when(m.findById(org.mockito.Matchers.eq(1L))(org.mockito.Matchers.anyObject())).thenReturn(None)\n      when(m.findById(org.mockito.Matchers.eq(2L))(org.mockito.Matchers.anyObject())).thenReturn(Option(\n        Staff(id=2L, staffName=\"Mock\u793e\u54e1\u30f3\uff01\")\n      ))\n\n      bind(classOf[StaffDao]).toInstance(m)\n    }\n  }\n}\n\n\n\n\u3053\u306eService\u306e\u5b9f\u88c5\u306fDao\u306b\u4f9d\u5b58\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3092Mock\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3067\u3001SQL\u306e\u767a\u884c\u7121\u3057\u306b\u30c6\u30b9\u30c8\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\ncreateMockModule\u3067Dao\u3092Mock\u5316\u3057\u3001trait\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7d10\u4ed8\u3051\u3092\u884c\u3044\u3001\nbefore {\n  Guice.createInjector(\n    Modules.`override`(new BindModule()).`with`(createMockModule())\n  ).injectMembers(this)\n}\n\n\u3067\u3001\u8a2d\u5b9a\u3092\u4e0a\u66f8\u304d\u3064\u3064\u3001Injection\u3057\u307e\u3059\u3002Service\u547c\u3073\u51fa\u3057\u306e\u7d50\u679c\u3088\u308a\u3001Dao\u51e6\u7406\u304cMock\u306b\u7f6e\u304d\u63db\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nController\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n\nRootControllerSpec.scala\nclass RootControllerSpec extends FunSpec with Matchers with MockitoSugar with DBSettings {\n\n  describe(\"RootController\") {\n    it(\"shows top page\") {\n      val controller = new RootController with MockController with MockDiInjector\n      controller.index\n      controller.contentType should equal(\"text/html; charset=utf-8\")\n      controller.renderCall.map(_.path) should equal(Some(\"/root/index\"))\n    }\n  }\n\n  trait MockDiInjector extends DiInjector {\n    override val injector = Guice.createInjector(\n      Modules.`override`(new BindModule()).`with`(createMockModule())\n    )\n  }\n\n  private def createMockModule() = new AbstractModule() {\n    override def configure() = {\n      val m = mock[StaffService]\n      when(m.createStaff(anyString())(anyObject())).thenReturn(123456L)\n      bind(classOf[StaffService]).toInstance(m)\n    }\n  }\n}\n\n\ncreateMockModule\u3067Service\u3092Mock\u5316\u3057\u3001trait\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7d10\u4ed8\u3051\u3092\u884c\u3044\u3001\ntrait MockDiInjector extends DiInjector {\n  override val injector = Guice.createInjector(\n    Modules.`override`(new BindModule()).`with`(createMockModule())\n  )\n}\n\n\u3067\u3001DiInjector\u306eModule\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4e0a\u66f8\u304d\u3001\nval controller = new RootController with MockController with MockDiInjector\n\n\u3067\u3001MockController\u3068MockDiInjector\u3092mixin\u3057\u3066\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eController\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u7d20\u306eSkinnyFramework + Guice\u3092\u4f7f\u3063\u3066DI\u3092\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u3053\u307e\u3067\u66f8\u3044\u3066\u3066\u306a\u3093\u3067\u3059\u304c\u3001\u79c1\u306f\u5916\u90e8\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u63a5\u7d9a\u3059\u308b\u5834\u5408\u304f\u3089\u3044\u3057\u304bMock\u5316\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nMock\u3060\u3089\u3051\u306b\u306a\u308b\u3068\u7ba1\u7406\u304c\u5927\u5909\u3067\u3059\u3057\u3001\u8907\u96d1\u306aMock\u3092\u4f5c\u308b\u3068\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30b3\u30b9\u30c8\u3082\u30d0\u30ab\u306b\u306a\u308a\u307e\u305b\u3093\u3002\nDao\u306f\u30c6\u30b9\u30c8\u7528\u306e\u30b9\u30ad\u30fc\u30de\u3092\u7528\u610f\u3057\u3066\u5b9f\u969b\u306eSQL\u3092\u767a\u884c\u3055\u305b\u308c\u3070\u3044\u3044\u3058\u3083\u3093\u3001\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3069\u3053\u307e\u3067\u6642\u9593\u30fb\u30ea\u30bd\u30fc\u30b9\u3092\u304b\u3051\u3089\u308c\u308b\u304b\u9451\u307f\u305f\u3046\u3048\u3067\u65b9\u91dd\u3092\u6c7a\u3081\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u30593\u3002\nAWS\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u3067\u3082\u7591\u4f3c\u7684\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u518d\u73fe\u3067\u304d\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3057\u3001\n\u30c6\u30b9\u30c8\u7528\u306bAWS\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u5951\u7d04\u3057\u3066\u5b9f\u969b\u306b\u547c\u3076\u3067\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3053\u306e\u3042\u305f\u308a\u306e\u65b9\u91dd\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8/\u30d7\u30ed\u30c0\u30af\u30c8\u3067\u3069\u3046\u3059\u308b\u304b\u3092\u4e8b\u524d\u306b\u5408\u610f\u3092\u53d6\u3063\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002\n\u305f\u3060\u3001DI\u306e\u4ed5\u7d44\u307f\u3092\u524d\u3082\u3063\u3066\u5c0e\u5165\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u30c6\u30b9\u30c8\u3057\u305f\u304f\u306a\u3063\u305f\u6642\u306b\u3059\u3050Mock\u306b\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305d\u308c\u3060\u3051\u3067\u3082\u5145\u5206\u306a\u6c17\u304c\u3057\u307e\u30594\u3002\n\n\u6700\u5f8c\u306b\nSkinnyFramework\u3001DI\u30b3\u30f3\u30c6\u30ca\u3068\u306e\u9023\u643a\u3042\u308b\u3058\u3083\u3093...5\n\n\n\n\n\nService\u3068Dao\u306e\u9593\u306bLogic\u30ec\u30a4\u30e4\u3082\u8a2d\u3051\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u300c\u624b\u9593\u304c\u304b\u304b\u308a\u3059\u304e\u308b\u300d\u3068\u3042\u307e\u308a\u8a55\u5224\u306f\u826f\u304f\u3042\u308a\u307e\u305b\u3093...\u00a0\u21a9\n\n\nScala\u306a\u3089\u3053\u3046\u3084\u308b\u304b\u306a\u3001\u3068\u3044\u3046\u65b9\u6cd5\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\u52c9\u5f37\u3057\u307e\u3059\u00a0\u21a9\n\n\n\u8907\u96d1\u3067\u5927\u304d\u306a\u30b7\u30b9\u30c6\u30e0\u3084\u5909\u66f4\u306e\u591a\u3044\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066\u3044\u308b\u65b9\u3005\u306f\u300c\u305d\u3093\u306a\u3093\u3058\u3083\u3067\u304d\u306a\u3044\u3088\u300d\u3001\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c...\u00a0\u21a9\n\n\n\u3072\u3068\u307e\u305a\u3001\u307e\u3060\u81ea\u5206\u306fdeveloper\u3060\u3068\u8a00\u3048\u308b\u6c17\u304c\u3057\u307e\u3057\u305f\u3002\u00a0\u21a9\n\n\n\u307e\u3001\u307e\u3041\u3001\u3084\u308a\u65b9\u306f\u3072\u3068\u3064\u3058\u3083\u3042\u308a\u307e\u305b\u3093\u3057\u306d...orz\u00a0\u21a9\n\n\n\n# \u306f\u3058\u3081\u306b\n\nDI(Dependency Injection)\u306e\u30e1\u30ea\u30c3\u30c8\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u304c\u3001\n\n[Seasar - DI Container with AOP](http://s2container.seasar.org/2.3/ja/DIContainer.html#Quickstart) \u306b\u3042\u308b\u3088\u3046\u306b\u3001\n\u300c\u304a\u4e92\u3044\u304c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u307f\u3067\u4f1a\u8a71\u3059\u308b\u300d\u3068\u3044\u3046\u8003\u3048\u65b9\u304c\u500b\u4eba\u7684\u306b\u4e00\u756a\u3057\u3063\u304f\u308a\u304d\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u30011\u3064\u306e\u95a2\u6570\u306e\u4e2d\u3067\u51e6\u7406\u304c\u5b8c\u7d50\u3059\u308b\u3053\u3068\u306f\u5c11\u306a\u304f\u3001\u300c\u4ed6\u306e\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u300d\u304c\u5fc5\u8981\u306b\u306a\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001Unit\u30c6\u30b9\u30c8\u306e\u6642\u70b9\u3067\u306f\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u95a2\u6570\u306e\u8cac\u52d9\u3068\u3057\u3066\u306f\u3001\n\n- \u81ea\u5206\u306e\u8cac\u52d9\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u304b\n\n\u306e\u307f\u304c\u89b3\u70b9\u3068\u306a\u308a\u307e\u3059\u3002\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u95a2\u6570\u304c\u300c\u4ed6\u306e\u95a2\u6570\u300d\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u6642\u306f\n\n- \u300c\u4ed6\u306e\u95a2\u6570\u300d\u304c\u547c\u3073\u51fa\u3055\u305b\u3066\u3044\u308b\u304b\n- \u547c\u3073\u51fa\u3057\u7d50\u679c\u3092\u5143\u306b\u9069\u5207\u306a\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u304b\n\n\u304c\u89b3\u70b9\u3068\u3057\u3066\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3076\u3063\u3061\u3083\u3051\u3066\u8a00\u3048\u3070\u3001\u300c\u4ed6\u306e\u95a2\u6570\u300d\u306e\u5185\u90e8\u5b9f\u88c5\u306f\u3069\u3046\u3067\u3082\u826f\u3044\u306e\u3067\u3059\u3002\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u901a\u308a\u3067\u3042\u308c\u3070\u305d\u308c\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u5b9f\u969b\u306e\u3068\u3053\u308d\u3001\u300c\u4ed6\u306e\u95a2\u6570\u300d\u304c\u307e\u3060\u672a\u5b8c\u6210\u3060\u3063\u305f\u308a\u3001\u5916\u90e8\u30b7\u30b9\u30c6\u30e0\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u3001\u81ea\u5206\u306e\u8cac\u52d9\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u305f\u3044\u3060\u3051\u306a\u3089\u300c\u4ed6\u306e\u95a2\u6570\u300d\u306e\u5b9f\u88c5\u3092Mock\u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u3044\u3046\u624b\u6bb5\u304c\u53d6\u3089\u308c\u307e\u3059\u3002\n\nDI\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067Unit\u30c6\u30b9\u30c8\u306e\u969b\u306b\u306f\u300c\u4ed6\u306e\u95a2\u6570\u300d\u3092\u300cMock\u300d\u306b\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u969b\u306bUnit\u30c6\u30b9\u30c8\u3059\u308b\u304b\u3069\u3046\u304b\u306f\u3055\u3066\u304a\u304d\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u72b6\u6cc1\u3092\u4f5c\u308b\u306e\u306f\u5927\u4e8b\u306a\u3053\u3068\u3060\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\n\n# Scala\u3067DI\u3063\u3066\u3069\u3046\u306a\u3093\u3067\u3057\u3087\u3046\n\n\u3067\u306f\u3001Scala\u3067\u306f\u3069\u3046\u304b\u3001\u3068\u3044\u3046\u6240\u3067\u3059\u304c\u3001\u79c1\u304c\u77e5\u3063\u3066\u3044\u308b\u4e2d\u3067\u306fWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067DI\u3092\u63a8\u5968\u3057\u3066\u305d\u3046\u306a\u306e\u306f\u6700\u8fd1\u306e[Play Framework](https://www.playframework.com/)\u304f\u3089\u3044\u306e\u8a8d\u8b58\u3067\u3059\u3002\u5f8c\u306fCake\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3046\u3001\u3068\u3044\u3046\u306e\u304c\u5927\u90e8\u5206\u306e\u3088\u3046\u306b\u898b\u53d7\u3051\u3089\u308c\u307e\u3057\u305f\u3002\n\n\u305f\u3060\u3001\u79c1\u306e\u982d\u3067\u306fCake\u30d1\u30bf\u30fc\u30f3\u3092\u300c\u7c21\u5358\u3060\u300d\u3068\u3082\u601d\u3048\u305a\u3001\u300c\u307e\u3041\u3001\u7c21\u5358\u306a\u30b7\u30b9\u30c6\u30e0\u3060\u304b\u3089DI\u3068\u304b\u8003\u3048\u306a\u304f\u3066\u826f\u3044\u3084\u300d\u3068**\u9003\u3052\u3066\u304d\u307e\u3057\u305f**\u3002\nService\u3084Dao\u306fobject\u306b\u3057\u3066\u305d\u306e\u5834\u3092\u3057\u306e\u3044\u3067\u3044\u305f\u306e\u3067\u3059\u3002\n\n\u3067\u3059\u304c\u6700\u8fd1\u3001\u7b2c\u4f55\u6b21\u304b\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u304cDI\u306e\u8a71\u304c\u76db\u308a\u4e0a\u304c\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3057\u3001\n\u300cobject\u76f4\u63a5\u547c\u3073\u51fa\u3057\u3067\u672c\u5f53\u306b\u305d\u308c\u3067\u826f\u3044\u306e\uff1f\u300d\u3068\u5fc3\u306b\u554f\u3044\u304b\u3051\u3066\u304f\u308b\u3082\u3046\u4e00\u4eba\u306e\u81ea\u5206\u306e\u58f0\u304c\u7121\u8996\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n**\u300c\u30c6\u30b9\u30bf\u30d3\u30ea\u30c6\u30a3\u304c\u60aa\u3044\u307e\u307e\u653e\u7f6e\u3057\u3066developer\u3092\u540d\u4e57\u3063\u3066\u3044\u3044\u306e\u304b\u300d**\u3068\u3044\u3046\u6c17\u6301\u3061\u304c\u6cb8\u3005\u3068\u6e67\u3044\u3066\u304d\u305f\u306e\u3067\u52e2\u3044\u3067\u66f8\u3044\u3066\u307f\u305f\u6b21\u7b2c\u3067\u3059\u3002\u5c11\u3057\u9577\u3044\u3067\u3059\u304c\u3001\u304a\u4ed8\u304d\u5408\u3044\u304f\u3060\u3055\u3044\u3002\n\n# DI\u30b3\u30f3\u30c6\u30ca\u306e\u5c0e\u5165\n\nSkinnyFramework\u3092\u4f7f\u7528\u3057\u305f\u4eca\u306e\u307e\u307e\u3067\u3082[ScalaMock](http://scalamock.org/)\u3092\u4f7f\u3046\u3053\u3068\u3067object\u306eMock\u3082\u4f5c\u308c\u306a\u304f\u306f\u7121\u3055\u305d\u3046\u3067\u3059\u304c\u306a\u3093\u3068\u306a\u304f\u9762\u5012\u305d\u3046\u3067\u3059\u3002\n\nScala\u3084\u3063\u3066\u308b\u4eba\u304cDI\u3084\u308b\u6642\u306e\u300c\u666e\u901a\u300d\u306fCake\u30d1\u30bf\u30fc\u30f3\u306a\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u79c1\u306e\u3088\u3046\u306a\u51e1\u4eba\u306b\u306fDI\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u3067\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001[Guice](https://github.com/google/guice)\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n# \u79c1\u304c\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308b\u6642\u306e\u524d\u63d0\u6761\u4ef6\n\nWeb\u30b7\u30b9\u30c6\u30e0\u306e\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067\u8003\u3048\u305f\u6642\u3001\n\n![\u3044\u3064\u3082\u306e.png](https://qiita-image-store.s3.amazonaws.com/0/71541/5383d805-3927-8174-a21a-709d7d7bf3cd.png)\n\n\n- Controller\n    - \u30d6\u30e9\u30a6\u30b6\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u308b\n    - \u547c\u3079\u308b\u306e\u306fService\n- Service\n    - Dao\u3092\u547c\u3093\u3060\u308a\u30c7\u30fc\u30bf\u3092\u3054\u306b\u3087\u3054\u306b\u3087\u3057\u3066Controller\u3078\u8fd4\u3059\n    - \u547c\u3079\u308b\u306e\u306fDao / Service\n- Dao\n    - RDBMS\u3078SQL\u3092\u767a\u884c\u3059\u308b\n\n\u306e\u3088\u3046\u306b\u8cac\u52d9\u3092\u9650\u5b9a\u3057\u3066\u8ad6\u7406\u7684\u306b\u30ec\u30a4\u30e4\u3092\u8a2d\u3051\u3001\u305d\u306e\u30ec\u30a4\u30e4\u9593\u306e\u547c\u3073\u51fa\u3057\u306e\u969b\u306bDI\u3092\u4f7f\u7528\u3057\u307e\u3059[^1] \u3002\n\ntrait\u3068\u5b9f\u88c5\u30af\u30e9\u30b9\u306f1:1\u306e\u95a2\u4fc2\u3067\u72b6\u614b\u3092\u6301\u305f\u305b\u305a\u3001Singleton\u3067\u30e1\u30e2\u30ea\u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u5fc3\u304c\u3051\u307e\u3059\u3002\n\u30ec\u30a4\u30e4\u547c\u3073\u51fa\u3057\u6642\u306e\u5f15\u6570\u3068\u3057\u3066\u306f\u57fa\u672c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4f5c\u308a\u3084\u3059\u3044\u3082\u306e\u3068\u3057(POJO\u7684\u306a\u5974)\u3001HttpRequest\u7b49\u306f\u7981\u6b62\u3068\u3044\u3046\u611f\u3058\u306b\u3057\u307e\u3059\u3002\nScala\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u300cJava\u3067\u3084\u308b\u306a\u3089\u3053\u3046\u306a\u3063\u3061\u3083\u3046\u304b\u3082\u306d\u300d\u3068\u3044\u3046\u69cb\u6210\u3067\u3059[^2]\u3002\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n[GitHub\u3068\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044](https://github.com/nemuzuka/skinny-di-test)\n\n## Dao\n\n```scala:Staff.scala\ncase class Staff(\n  id: Long,\n  staffName: String\n)\n\ntrait StaffDao {\n  def create(entity:Staff)(implicit s:DBSession):Long\n  def update(entity:Staff)(implicit s:DBSession):Long\n  def findById(id:Long)(implicit s:DBSession):Option[Staff]\n  def deleteById(id:Long)(implicit s:DBSession):Int\n}\n\nobject Staff extends SkinnyCRUDMapper[Staff] with StaffDao {\n  override lazy val tableName = \"staff\"\n  override lazy val defaultAlias = createAlias(\"s\")\n\n  override def extract(rs: WrappedResultSet, rn: ResultName[Staff]): Staff = new Staff(\n    id = rs.get(rn.id),\n    staffName = rs.get(rn.staffName)\n  )\n\n  override def create(entity: Staff)(implicit session: DBSession): Long = {\n    Staff.createWithAttributes(\n      'staffName -> entity.staffName\n    )\n  }\n\n  override def update(entity: Staff)(implicit session: DBSession): Long = {\n    Staff.updateById(entity.id).withAttributes(\n      'staffName -> entity.staffName\n    )\n  }\n}\n\n```\n\nSkinny-ORM\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u5b9a\u7fa9\u3057\u305ftrait\u306e\u5b9f\u88c5\u306fclass\u3067\u306f\u306a\u304fobject\u306b\u306a\u308a\u307e\u3059\u3002DI\u306b\u95a2\u3059\u308b\u8a18\u8ff0\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n## Service\n\n```scala:StaffService.scala\n\ntrait StaffService {\n\n  @Inject\n  private val staffDao:StaffDao = null\n\n  def createStaff(name:String)(implicit session:DBSession) = {\n    staffDao.create(Staff(id = -1L, staffName = name))\n  }\n\n  def getStaff(id:Long)(implicit session:DBSession) = {\n    staffDao.findById(id)\n  }\n}\n\nclass StaffServiceImpl extends StaffService\n\n```\n\nDao\u306etrait\u304c\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3044\u307e\u3059\u3002Field Injection\u3067Guice\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\ntrait\u5074\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u6301\u305f\u305b\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u597d\u307f\u306e\u554f\u984c\u3067\u3059\u304c\u3001\u30b7\u30b9\u30c6\u30e0\u5185\u3067\u7d71\u4e00\u306f\u3057\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u3002\n\n## Controller\n\n```scala:RootController.scala\nclass RootController extends ApplicationController with DiInjector {\n  def index = {\n    DB.localTx { implicit session =>\n      val staffService = injector.getInstance(classOf[StaffService])\n      val id = staffService.createStaff(\"DI\u3082\u826f\u3044\u3082\u3093\u3060\u305c\uff01\" + new Date())\n      println(id)\n      render(\"/root/index\")\n    }\n  }\n}\n```\n\nSkinnyFramework\u306eController\u3067\u3059\u3002DiInjector\u3068\u3044\u3046trait\u3092mixin\u3057\u3066\u3044\u307e\u3059\u3002\n\n```scala\nval staffService = injector.getInstance(classOf[StaffService])\n```\n\n\u306e\u7b87\u6240\u304cGuice\u304b\u3089\u5f53\u8a72Service\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u7b87\u6240\u306b\u306a\u308a\u307e\u3059\u3002\u8a72\u5f53Service\u304cDao\u306b\u4f9d\u5b58\u3059\u308b\u5834\u5408\u3082\u828b\u3065\u308b\u5f0f\u306bInject\u3055\u308c\u307e\u3059\u3002\n\n## Module\n```scala:BindModule.scala\nclass BindModule extends AbstractModule{\n  override def configure() = {\n    //Service\u306fclass\u306a\u306e\u3067to\u3001Singleton   \n    bind(classOf[StaffService]).to(classOf[StaffServiceImpl]).in(classOf[Singleton])\n\n    //Dao\u306f\u3001object\u306a\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8a2d\u5b9a\n    bind(classOf[StaffDao]).toInstance(Staff)\n  }\n}\n\nobject BindModule {\n  val injector = Guice.createInjector(new BindModule())\n}\n\n```\n\nGuice\u306b\u3001\u300c\u3053\u3093\u306a\u95a2\u9023\u3067trait\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7ba1\u7406\u3057\u3066\u306d\u300d\u3068\u8a2d\u5b9a\u3059\u308b\u7b87\u6240\u306b\u306a\u308a\u307e\u3059\u3002\nService\u306fclass\u3001Dao\u306fobject\u306a\u306e\u3067\u8a2d\u5b9a\u65b9\u6cd5\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n\n## Injector\n\n```scala:DiInjector.scala\n\ntrait DiInjector {\n  val injector = BindModule.injector\n}\n\n```\n\nModule\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7ba1\u7406\u3059\u308btrait\u3067\u3059\u3002Controller\u3067mixin\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u308f\u3056\u308f\u3056trait\u5316\u3057\u3066\u3044\u308b\u306e\u306fUnit\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3067\u3059\u3002\n\n\n## Dao\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n\n```scala:StaffSpec.scala\n\nclass StaffSpec extends fixture.FunSpec with AutoRollback with Matchers with DBSettings with BeforeAndAfter {\n\n  @Inject\n  private val staffDao:StaffDao = null\n\n  before {\n    BindModule.injector.injectMembers(this)\n  }\n\n  describe(\"create\") {\n    it(\"\u793e\u54e1\u3092\u4f5c\u6210\u3057\u3001\u66f4\u65b0\u3057\u3066\u3001\u524a\u9664\u3059\u308b\u30c6\u30b9\u30c8\") { implicit session =>\n\n      val createdId = staffDao.create(Staff(id=1L, staffName = \"\u3068\u30fc\u308d\u304f\u793e\u54e1\uff01\uff01\"))\n      staffDao.findById(createdId).get.staffName should be (\"\u3068\u30fc\u308d\u304f\u793e\u54e1\uff01\uff01\")\n\n      val staffDi = Staff(id=createdId, staffName = \"\u66f4\u65b0\u5f8c\u793e\u54e1\u540d\uff01\uff01\")\n      staffDao.update(staffDi)\n\n      staffDao.findById(createdId).get.staffName should be (\"\u66f4\u65b0\u5f8c\u793e\u54e1\u540d\uff01\uff01\")\n\n      staffDao.deleteById(createdId)\n      staffDao.findById(createdId) should be (None)\n    }\n  }\n}\n```\n\n\u500b\u4eba\u7684\u306b\u306fDao\u306e\u30c6\u30b9\u30c8\u306f\u5b9f\u969b\u306bSQL\u3092\u767a\u884c\u3055\u305b\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067\u3001Mock\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002\n\n```scala\nbefore {\n  BindModule.injector.injectMembers(this)\n}\n```\n\n\u306e\u7b87\u6240\u3067\u3001Inject\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b\u30e1\u30f3\u30d0\u5909\u6570\u306bInjection\u3057\u3066\u3082\u3089\u3044\u3001\u305d\u308c\u3092\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3067\u547c\u3073\u51fa\u3057\u3001\u7d50\u679c\u3069\u3046\u3060\u3063\u305f\u304b\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\n\n\n## Service\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n\n```scala:StaffServiceSpec.scala\n\nclass StaffServiceSpec extends fixture.FunSpec with AutoRollback with Matchers with DBSettings with BeforeAndAfter with MockitoSugar {\n\n  @Inject\n  private val staffService:StaffService = null\n\n  before {\n    Guice.createInjector(\n      Modules.`override`(new BindModule()).`with`(createMockModule())\n    ).injectMembers(this)\n  }\n\n  describe(\"getStaff\") {\n    it(\"DB\u53d6\u5f97\") { implicit session =>\n      val actual = staffService.getStaff(2L).get\n      actual.id should be (2L)\n      actual.staffName should be (\"Mock\u793e\u54e1\u30f3\uff01\")\n      staffService.getStaff(1L) should be (None)\n    }\n  }\n\n  private def createMockModule() = new AbstractModule() {\n    override def configure() = {\n      val m = mock[StaffDao]\n      when(m.findById(org.mockito.Matchers.eq(1L))(org.mockito.Matchers.anyObject())).thenReturn(None)\n      when(m.findById(org.mockito.Matchers.eq(2L))(org.mockito.Matchers.anyObject())).thenReturn(Option(\n        Staff(id=2L, staffName=\"Mock\u793e\u54e1\u30f3\uff01\")\n      ))\n\n      bind(classOf[StaffDao]).toInstance(m)\n    }\n  }\n}\n\n```\n\n\u3053\u306eService\u306e\u5b9f\u88c5\u306fDao\u306b\u4f9d\u5b58\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3092Mock\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3067\u3001SQL\u306e\u767a\u884c\u7121\u3057\u306b\u30c6\u30b9\u30c8\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n`createMockModule`\u3067Dao\u3092Mock\u5316\u3057\u3001trait\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7d10\u4ed8\u3051\u3092\u884c\u3044\u3001\n\n```scala\nbefore {\n  Guice.createInjector(\n    Modules.`override`(new BindModule()).`with`(createMockModule())\n  ).injectMembers(this)\n}\n```\n\n\u3067\u3001\u8a2d\u5b9a\u3092\u4e0a\u66f8\u304d\u3064\u3064\u3001Injection\u3057\u307e\u3059\u3002Service\u547c\u3073\u51fa\u3057\u306e\u7d50\u679c\u3088\u308a\u3001Dao\u51e6\u7406\u304cMock\u306b\u7f6e\u304d\u63db\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\n## Controller\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n\n```scala:RootControllerSpec.scala\nclass RootControllerSpec extends FunSpec with Matchers with MockitoSugar with DBSettings {\n\n  describe(\"RootController\") {\n    it(\"shows top page\") {\n      val controller = new RootController with MockController with MockDiInjector\n      controller.index\n      controller.contentType should equal(\"text/html; charset=utf-8\")\n      controller.renderCall.map(_.path) should equal(Some(\"/root/index\"))\n    }\n  }\n\n  trait MockDiInjector extends DiInjector {\n    override val injector = Guice.createInjector(\n      Modules.`override`(new BindModule()).`with`(createMockModule())\n    )\n  }\n\n  private def createMockModule() = new AbstractModule() {\n    override def configure() = {\n      val m = mock[StaffService]\n      when(m.createStaff(anyString())(anyObject())).thenReturn(123456L)\n      bind(classOf[StaffService]).toInstance(m)\n    }\n  }\n}\n```\n\n`createMockModule`\u3067Service\u3092Mock\u5316\u3057\u3001trait\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7d10\u4ed8\u3051\u3092\u884c\u3044\u3001\n\n```scala\ntrait MockDiInjector extends DiInjector {\n  override val injector = Guice.createInjector(\n    Modules.`override`(new BindModule()).`with`(createMockModule())\n  )\n}\n```\n\n\u3067\u3001DiInjector\u306eModule\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4e0a\u66f8\u304d\u3001\n\n```scala\nval controller = new RootController with MockController with MockDiInjector\n```\n\u3067\u3001`MockController`\u3068`MockDiInjector`\u3092mixin\u3057\u3066\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eController\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n\n\n# \u307e\u3068\u3081\n\u7d20\u306eSkinnyFramework + Guice\u3092\u4f7f\u3063\u3066DI\u3092\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3053\u3053\u307e\u3067\u66f8\u3044\u3066\u3066\u306a\u3093\u3067\u3059\u304c\u3001\u79c1\u306f\u5916\u90e8\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u63a5\u7d9a\u3059\u308b\u5834\u5408\u304f\u3089\u3044\u3057\u304bMock\u5316\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nMock\u3060\u3089\u3051\u306b\u306a\u308b\u3068\u7ba1\u7406\u304c\u5927\u5909\u3067\u3059\u3057\u3001\u8907\u96d1\u306aMock\u3092\u4f5c\u308b\u3068\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30b3\u30b9\u30c8\u3082\u30d0\u30ab\u306b\u306a\u308a\u307e\u305b\u3093\u3002\nDao\u306f\u30c6\u30b9\u30c8\u7528\u306e\u30b9\u30ad\u30fc\u30de\u3092\u7528\u610f\u3057\u3066\u5b9f\u969b\u306eSQL\u3092\u767a\u884c\u3055\u305b\u308c\u3070\u3044\u3044\u3058\u3083\u3093\u3001\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3069\u3053\u307e\u3067\u6642\u9593\u30fb\u30ea\u30bd\u30fc\u30b9\u3092\u304b\u3051\u3089\u308c\u308b\u304b\u9451\u307f\u305f\u3046\u3048\u3067\u65b9\u91dd\u3092\u6c7a\u3081\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059[^3]\u3002\nAWS\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u3067\u3082\u7591\u4f3c\u7684\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u518d\u73fe\u3067\u304d\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3057\u3001\n\u30c6\u30b9\u30c8\u7528\u306bAWS\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u5951\u7d04\u3057\u3066\u5b9f\u969b\u306b\u547c\u3076\u3067\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3053\u306e\u3042\u305f\u308a\u306e\u65b9\u91dd\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8/\u30d7\u30ed\u30c0\u30af\u30c8\u3067\u3069\u3046\u3059\u308b\u304b\u3092\u4e8b\u524d\u306b\u5408\u610f\u3092\u53d6\u3063\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002\n\u305f\u3060\u3001DI\u306e\u4ed5\u7d44\u307f\u3092\u524d\u3082\u3063\u3066\u5c0e\u5165\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u30c6\u30b9\u30c8\u3057\u305f\u304f\u306a\u3063\u305f\u6642\u306b\u3059\u3050Mock\u306b\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305d\u308c\u3060\u3051\u3067\u3082\u5145\u5206\u306a\u6c17\u304c\u3057\u307e\u3059[^4]\u3002\n\n# \u6700\u5f8c\u306b\n\nSkinnyFramework\u3001[DI\u30b3\u30f3\u30c6\u30ca\u3068\u306e\u9023\u643a](https://github.com/skinny-framework/skinny-scaldi-example)\u3042\u308b\u3058\u3083\u3093...[^5]\n\n\n\n* * *\n[^1]: Service\u3068Dao\u306e\u9593\u306bLogic\u30ec\u30a4\u30e4\u3082\u8a2d\u3051\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u300c\u624b\u9593\u304c\u304b\u304b\u308a\u3059\u304e\u308b\u300d\u3068\u3042\u307e\u308a\u8a55\u5224\u306f\u826f\u304f\u3042\u308a\u307e\u305b\u3093...\n\n[^2]: Scala\u306a\u3089\u3053\u3046\u3084\u308b\u304b\u306a\u3001\u3068\u3044\u3046\u65b9\u6cd5\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\u52c9\u5f37\u3057\u307e\u3059\n\n[^3]: \u8907\u96d1\u3067\u5927\u304d\u306a\u30b7\u30b9\u30c6\u30e0\u3084\u5909\u66f4\u306e\u591a\u3044\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066\u3044\u308b\u65b9\u3005\u306f\u300c\u305d\u3093\u306a\u3093\u3058\u3083\u3067\u304d\u306a\u3044\u3088\u300d\u3001\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c...\n\n[^4]: \u3072\u3068\u307e\u305a\u3001\u307e\u3060\u81ea\u5206\u306fdeveloper\u3060\u3068\u8a00\u3048\u308b\u6c17\u304c\u3057\u307e\u3057\u305f\u3002\n\n[^5]: \u307e\u3001\u307e\u3041\u3001\u3084\u308a\u65b9\u306f\u3072\u3068\u3064\u3058\u3083\u3042\u308a\u307e\u305b\u3093\u3057\u306d...orz\n", "tags": ["Scala", "SkinnyFramework", "DI", "guice"]}