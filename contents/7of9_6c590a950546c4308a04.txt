{"context": "\n\u52d5\u4f5c\u74b0\u5883\nAnalog Discovery 2 (\u4ee5\u4e0bAD2)\n\n\nhttp://qiita.com/7of9/items/09272fcfb56bd479c679\n\u306b\u3066\u5b9f\u88c5\u3057\u305f\u6c17\u5727\u8a08\u57fa\u677f\u3002\n\u901a\u4fe1\u3092\u7d9a\u3051\u3066\u3044\u308b\u3068\u3001\u3042\u308b\u6642\u70b9\u304b\u3089\u901a\u4fe1\u304c\u5931\u6557\u3059\u308b\u3002\nAD2\u3067\u901a\u4fe1\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u305f\u3002\n\ncode\nhttp://qiita.com/7of9/items/09272fcfb56bd479c679#code-v02\n\u3092\u4f7f\u7528\u3002\n#include <Wire.h>\n\n/*\n * v0.2 2016 May 29\n *   - fix bug > coefficients calculation\n * v0.1 2016 May 28\n *   - add PrintPressure()\n *   - add ReadPressureAndTemperature()\n *   - add ReadCoefficient()\n */\n\n#define MPL_ADDR (0x60)\n\nstatic float s_a0, s_b1, s_b2, s_c12; // \u4fc2\u6570\u30c7\u30fc\u30bf\nunsigned long iPress, iTemp;\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"\");\n\n  Wire.begin();\n  delay(3000); // msec\n  ReadCoefficient();\n}\n\nbool ReadCoefficient()\n{\n  int len;\n  unsigned int hi, lw;\n\n  Wire.beginTransmission(MPL_ADDR);\n  Wire.write(0x04);\n  len = Wire.endTransmission();\n  if (len == 0) {\n    len = Wire.requestFrom(MPL_ADDR, 8);\n    if (len == 8) {\n      hi = Wire.read();\n      lw = Wire.read();\n      s_a0 = (hi << 8) + lw;\n      s_a0 /= 8.0;\n      if (hi & 0x80) s_a0 -= 8192.0;\n      hi = Wire.read();\n      lw = Wire.read();\n      s_b1 = (hi << 8) + lw;\n      s_b1 /= 8192.0;\n      if (hi & 0x80) s_b1 -= 8.0;\n      hi = Wire.read();\n      lw = Wire.read();\n      s_b2 = (hi << 8) + lw;\n      s_b2 /= 16384.0;\n      if (hi & 0x80) s_b2 -= 4.0;\n      hi = Wire.read();\n      lw = Wire.read();\n      s_c12 = (hi << 8) + lw;\n      s_c12 /= 32768.0;\n      if (hi & 0x80) s_c12 -= 2.0;\n      s_c12 /= 512.0;\n\n      Serial.println(s_a0);\n      Serial.println(s_b1);\n      Serial.println(s_b2);\n      Serial.println(s_c12);      \n      return true;\n    }\n  }\n  return false;\n}\n\nbool ReadPressureAndTemperature()\n{\n  int len;\n  unsigned int hi, lw;\n\n  // 1. start conversion\n  Wire.beginTransmission(MPL_ADDR);\n  Wire.write(0x12);\n  Wire.write(0x01);\n  len = Wire.endTransmission();\n  if (len != 0) return false;\n  delay(3); // msec\n\n  // 2. get values\n  Wire.beginTransmission(MPL_ADDR);\n  Wire.write(0x00);\n  len = Wire.endTransmission();\n  if (len == 0) {\n    len = Wire.requestFrom(MPL_ADDR, 4);\n    if (len == 4) {\n      hi = Wire.read();\n      lw = Wire.read();\n      iPress = (hi * 256 + lw) / 64;\n      hi = Wire.read();\n      lw = Wire.read();\n      iTemp = ( hi * 256 + lw) / 64;\n      return true;      \n    }\n  }\n  return false;\n}\n\nvoid PrintPressure()\n{\n  float prs, f0;\n  f0 = s_a0 + ( s_b1 + s_c12 * iTemp) * iPress + s_b2 * iTemp;\n  prs = f0 * ( (115.0 - 50.0) / 1023.0 ) + 50.0;\n  Serial.print(\"Pressure=\");\n  Serial.println(prs);\n}\n\nvoid loop() {\n  if (ReadPressureAndTemperature()) {\n    PrintPressure();\n  }\n  delay(1000); // msec\n}\n\n\n\u6e2c\u5b9a\n\nSCL\u30e9\u30a4\u30f3\uff08\u6b63\u5e38\u6642)\nSCL\u304cH/L\u5207\u308a\u66ff\u308f\u3063\u3066\u3044\u308b\u3002\n\n\nSCL\u30e9\u30a4\u30f3 (\u5931\u6557\u6642)\nSCL\u304cH\u306e\u307e\u307e\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\nSCL\u304c\u5207\u308a\u66ff\u308f\u3089\u306a\u304f\u306a\u308b\u539f\u56e0\u306f\u8981\u8abf\u67fb\u3002\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u5b9f\u88c5\u3057\u305f\u3068\u304d\u306b\u3001\u6c17\u5727\u8a08\u306eIC\u3092\u4e00\u5ea6\u53cd\u5bfe\u306b\u633f\u3057\u3066\u901a\u96fb\u3057\u3066\u3057\u307e\u3063\u305f\u304c\u3001\u305d\u308c\u3068\u95a2\u4fc2\u304c\u3042\u308b\u306e\u3060\u308d\u3046\u304b\u3002\n\u9014\u4e2d\u307e\u3067\u901a\u4fe1\u3067\u304d\u3066\u3001\u9014\u4e2d\u304b\u3089\u901a\u4fe1\u3067\u304d\u306a\u304f\u306a\u308b\u3001\u3068\u3044\u3046\u73fe\u8c61\u306f\u3053\u308c\u307e\u3067\u672a\u7d4c\u9a13\u3060\u3002\n\u95a2\u4fc2\u3059\u308b\u304b\u3069\u3046\u304b http://stackoverflow.com/questions/17287232/arduino-i2c-data-stream-stopped-unexpectedly\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u5b9f\u88c5\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3067\u306e\u5b9f\u88c5\u3092\u3084\u308a\u76f4\u3057\u305f\u3002\n\u30d7\u30eb\u30a2\u30c3\u30d7\u62b5\u6297\u3082\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u5074\u306b\u3059\u308b\u305f\u30813\u679a\u76ee\u306e\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\u3092\u6d41\u7528\u3057\u305f\u3002\n\nAD2\u3067SCL\u30e9\u30a4\u30f3\u3092\u6e2c\u5b9a\u3057\u305f\u6240\u3001\u7dba\u9e97\u306a\u6ce2\u5f62\u3068\u306a\u3063\u3066\u3044\u308b\u3002\u5e73\u5766\u90e8\u5206\u3082\u304d\u3061\u3093\u3068\u51fa\u3066\u3044\u308b\u3002\n\n\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d7\u30eb\u30a2\u30c3\u30d7\u62b5\u6297(4.7k for SCL, SDA)\u3068CAP\u7528\u30b3\u30f3\u30c7\u30f3\u30b5(105)\u306f\u305d\u308c\u305e\u308c\u540c\u3058\u5024\u3092\u4eca\u56de\u306e\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3068\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\u3067\u3082\u4f7f\u7528\u3057\u3066\u3044\u308b\u3064\u3082\u308a\u3060\u304c\u3001\u4f55\u304b\u898b\u843d\u3068\u3057\u3066\u3044\u308b\u4e8b\u9805\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\u3067\u901a\u4fe1\u304c\u5931\u6557\u3057\u3066\u3044\u305f\u3068\u304d\u306f\uff13\uff10\u56de\u7a0b\u5ea6\u3057\u304b\u901a\u4fe1\u3067\u304d\u3066\u3044\u306a\u304b\u3063\u305f\u304c\u3001\u4eca\u56de\u306f\uff16\uff10\uff10\u56de\u306e\u901a\u4fe1\u3067\u3082\u30a8\u30e9\u30fc\u304c\u51fa\u306a\u3044\u3002\n\u518d\u5ea6\u3001\u901a\u4fe1\u304c\u5931\u6557\u3059\u308b\u30e6\u30cb\u30fc\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\u3092\u898b\u306a\u304a\u3057\u3066\u6c17\u3065\u3044\u305f\u306e\u306f\u3001\u3001\u3001\u30d7\u30eb\u30a2\u30c3\u30d7\u62b5\u6297\u3092Vcc\u3067\u30d7\u30eb\u30a2\u30c3\u30d7\u3057\u3066\u306a\u3044\u3002\n\n\u518d\u5ea6\u3001\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\n\u30d7\u30eb\u30a2\u30c3\u30d7\u3057\u3066\u306a\u3044\u62b5\u6297\uff08\u30b7\u30ea\u30fc\u30ba\u306b\u5165\u3063\u3066\u3044\u305f\uff09\u3092Vcc\u30d7\u30eb\u30a2\u30c3\u30d7\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u305f\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u304d\u3061\u3093\u3068\u3057\u305f\u6ce2\u5f62\u3068\u306a\u3063\u305f\u3002\u901a\u4fe1\u3082\u9014\u5207\u308c\u306a\u3044\u3002\n\n@forth83 \u3055\u3093\n\u304a\u9a12\u304c\u305b\u3057\u307e\u3057\u305f\u3002\n\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n```txt:\u52d5\u4f5c\u74b0\u5883\nAnalog Discovery 2 (\u4ee5\u4e0bAD2)\n```\n\nhttp://qiita.com/7of9/items/09272fcfb56bd479c679\n\u306b\u3066\u5b9f\u88c5\u3057\u305f\u6c17\u5727\u8a08\u57fa\u677f\u3002\n\n\u901a\u4fe1\u3092\u7d9a\u3051\u3066\u3044\u308b\u3068\u3001\u3042\u308b\u6642\u70b9\u304b\u3089\u901a\u4fe1\u304c\u5931\u6557\u3059\u308b\u3002\n\nAD2\u3067\u901a\u4fe1\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u305f\u3002\n\n## code\n\nhttp://qiita.com/7of9/items/09272fcfb56bd479c679#code-v02\n\u3092\u4f7f\u7528\u3002\n\n```\n#include <Wire.h>\n\n/*\n * v0.2 2016 May 29\n *   - fix bug > coefficients calculation\n * v0.1 2016 May 28\n *   - add PrintPressure()\n *   - add ReadPressureAndTemperature()\n *   - add ReadCoefficient()\n */\n\n#define MPL_ADDR (0x60)\n\nstatic float s_a0, s_b1, s_b2, s_c12; // \u4fc2\u6570\u30c7\u30fc\u30bf\nunsigned long iPress, iTemp;\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"\");\n\n  Wire.begin();\n  delay(3000); // msec\n  ReadCoefficient();\n}\n\nbool ReadCoefficient()\n{\n  int len;\n  unsigned int hi, lw;\n\n  Wire.beginTransmission(MPL_ADDR);\n  Wire.write(0x04);\n  len = Wire.endTransmission();\n  if (len == 0) {\n    len = Wire.requestFrom(MPL_ADDR, 8);\n    if (len == 8) {\n      hi = Wire.read();\n      lw = Wire.read();\n      s_a0 = (hi << 8) + lw;\n      s_a0 /= 8.0;\n      if (hi & 0x80) s_a0 -= 8192.0;\n      hi = Wire.read();\n      lw = Wire.read();\n      s_b1 = (hi << 8) + lw;\n      s_b1 /= 8192.0;\n      if (hi & 0x80) s_b1 -= 8.0;\n      hi = Wire.read();\n      lw = Wire.read();\n      s_b2 = (hi << 8) + lw;\n      s_b2 /= 16384.0;\n      if (hi & 0x80) s_b2 -= 4.0;\n      hi = Wire.read();\n      lw = Wire.read();\n      s_c12 = (hi << 8) + lw;\n      s_c12 /= 32768.0;\n      if (hi & 0x80) s_c12 -= 2.0;\n      s_c12 /= 512.0;\n\n      Serial.println(s_a0);\n      Serial.println(s_b1);\n      Serial.println(s_b2);\n      Serial.println(s_c12);      \n      return true;\n    }\n  }\n  return false;\n}\n\nbool ReadPressureAndTemperature()\n{\n  int len;\n  unsigned int hi, lw;\n\n  // 1. start conversion\n  Wire.beginTransmission(MPL_ADDR);\n  Wire.write(0x12);\n  Wire.write(0x01);\n  len = Wire.endTransmission();\n  if (len != 0) return false;\n  delay(3); // msec\n\n  // 2. get values\n  Wire.beginTransmission(MPL_ADDR);\n  Wire.write(0x00);\n  len = Wire.endTransmission();\n  if (len == 0) {\n    len = Wire.requestFrom(MPL_ADDR, 4);\n    if (len == 4) {\n      hi = Wire.read();\n      lw = Wire.read();\n      iPress = (hi * 256 + lw) / 64;\n      hi = Wire.read();\n      lw = Wire.read();\n      iTemp = ( hi * 256 + lw) / 64;\n      return true;      \n    }\n  }\n  return false;\n}\n\nvoid PrintPressure()\n{\n  float prs, f0;\n  f0 = s_a0 + ( s_b1 + s_c12 * iTemp) * iPress + s_b2 * iTemp;\n  prs = f0 * ( (115.0 - 50.0) / 1023.0 ) + 50.0;\n  Serial.print(\"Pressure=\");\n  Serial.println(prs);\n}\n\nvoid loop() {\n  if (ReadPressureAndTemperature()) {\n    PrintPressure();\n  }\n  delay(1000); // msec\n}\n```\n\n## \u6e2c\u5b9a\n\n### SCL\u30e9\u30a4\u30f3\uff08\u6b63\u5e38\u6642)\n\nSCL\u304cH/L\u5207\u308a\u66ff\u308f\u3063\u3066\u3044\u308b\u3002\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/55357338-16c0-1508-b708-586b4ab7fab0.png)\n\n\n### SCL\u30e9\u30a4\u30f3 (\u5931\u6557\u6642)\n\nSCL\u304cH\u306e\u307e\u307e\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/117ff850-3ed7-3b30-1db7-aa7a85828e23.png)\n\nSCL\u304c\u5207\u308a\u66ff\u308f\u3089\u306a\u304f\u306a\u308b\u539f\u56e0\u306f\u8981\u8abf\u67fb\u3002\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u5b9f\u88c5\u3057\u305f\u3068\u304d\u306b\u3001\u6c17\u5727\u8a08\u306eIC\u3092\u4e00\u5ea6\u53cd\u5bfe\u306b\u633f\u3057\u3066\u901a\u96fb\u3057\u3066\u3057\u307e\u3063\u305f\u304c\u3001\u305d\u308c\u3068\u95a2\u4fc2\u304c\u3042\u308b\u306e\u3060\u308d\u3046\u304b\u3002\n\u9014\u4e2d\u307e\u3067\u901a\u4fe1\u3067\u304d\u3066\u3001\u9014\u4e2d\u304b\u3089\u901a\u4fe1\u3067\u304d\u306a\u304f\u306a\u308b\u3001\u3068\u3044\u3046\u73fe\u8c61\u306f\u3053\u308c\u307e\u3067\u672a\u7d4c\u9a13\u3060\u3002\n\n\u95a2\u4fc2\u3059\u308b\u304b\u3069\u3046\u304b http://stackoverflow.com/questions/17287232/arduino-i2c-data-stream-stopped-unexpectedly\n\n## \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u5b9f\u88c5\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3067\u306e\u5b9f\u88c5\u3092\u3084\u308a\u76f4\u3057\u305f\u3002\n\u30d7\u30eb\u30a2\u30c3\u30d7\u62b5\u6297\u3082\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u5074\u306b\u3059\u308b\u305f\u30813\u679a\u76ee\u306e\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\u3092\u6d41\u7528\u3057\u305f\u3002\n\n![DSC_0171.JPG](https://qiita-image-store.s3.amazonaws.com/0/32870/50851f71-788c-a6a4-86ea-88a32d0da9d3.jpeg)\n\nAD2\u3067SCL\u30e9\u30a4\u30f3\u3092\u6e2c\u5b9a\u3057\u305f\u6240\u3001\u7dba\u9e97\u306a\u6ce2\u5f62\u3068\u306a\u3063\u3066\u3044\u308b\u3002\u5e73\u5766\u90e8\u5206\u3082\u304d\u3061\u3093\u3068\u51fa\u3066\u3044\u308b\u3002\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/e3b771c3-7ec3-1fce-5a0a-242c13875045.png)\n\n\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d7\u30eb\u30a2\u30c3\u30d7\u62b5\u6297(4.7k for SCL, SDA)\u3068CAP\u7528\u30b3\u30f3\u30c7\u30f3\u30b5(105)\u306f\u305d\u308c\u305e\u308c\u540c\u3058\u5024\u3092\u4eca\u56de\u306e\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3068\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\u3067\u3082\u4f7f\u7528\u3057\u3066\u3044\u308b\u3064\u3082\u308a\u3060\u304c\u3001\u4f55\u304b\u898b\u843d\u3068\u3057\u3066\u3044\u308b\u4e8b\u9805\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\u3067\u901a\u4fe1\u304c\u5931\u6557\u3057\u3066\u3044\u305f\u3068\u304d\u306f\uff13\uff10\u56de\u7a0b\u5ea6\u3057\u304b\u901a\u4fe1\u3067\u304d\u3066\u3044\u306a\u304b\u3063\u305f\u304c\u3001\u4eca\u56de\u306f\uff16\uff10\uff10\u56de\u306e\u901a\u4fe1\u3067\u3082\u30a8\u30e9\u30fc\u304c\u51fa\u306a\u3044\u3002\n\n<font color=red>\u518d\u5ea6\u3001\u901a\u4fe1\u304c\u5931\u6557\u3059\u308b\u30e6\u30cb\u30fc\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\u3092\u898b\u306a\u304a\u3057\u3066\u6c17\u3065\u3044\u305f\u306e\u306f\u3001\u3001\u3001\u30d7\u30eb\u30a2\u30c3\u30d7\u62b5\u6297\u3092Vcc\u3067\u30d7\u30eb\u30a2\u30c3\u30d7\u3057\u3066\u306a\u3044\u3002</font>\n\n## \u518d\u5ea6\u3001\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u57fa\u677f\n\n\u30d7\u30eb\u30a2\u30c3\u30d7\u3057\u3066\u306a\u3044\u62b5\u6297\uff08\u30b7\u30ea\u30fc\u30ba\u306b\u5165\u3063\u3066\u3044\u305f\uff09\u3092Vcc\u30d7\u30eb\u30a2\u30c3\u30d7\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u305f\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u304d\u3061\u3093\u3068\u3057\u305f\u6ce2\u5f62\u3068\u306a\u3063\u305f\u3002\u901a\u4fe1\u3082\u9014\u5207\u308c\u306a\u3044\u3002\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/1efca128-b3a2-c707-ce24-f9ba3dc14f93.png)\n\n@forth83 \u3055\u3093\n\u304a\u9a12\u304c\u305b\u3057\u307e\u3057\u305f\u3002\n\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n", "tags": ["ESP8266", "AD2", "I2C"]}