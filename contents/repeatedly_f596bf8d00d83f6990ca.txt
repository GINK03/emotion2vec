{"tags": ["dlang"], "context": " More than 1 year has passed since last update.@safe\nstring buildUriPath(Paths...)(Paths paths)\n{\n    @safe\n    static typeof(return) joinPaths(in string lhs, in string rhs) pure nothrow\n    {\n        return lhs ~ \"/\" ~ rhs;\n    }\n\n    @trusted\n    string[] pathsToStringArray() // TODO: pure nothrow (because of to!string)\n    {\n        auto result = new string[](paths.length);\n        foreach (i, path; paths)\n            result[i] = path.to!string;\n        return result;\n    }\n\n    return reduce!joinPaths(pathsToStringArray());\n}\n\nI want to know a better way\u2026\n```d\n@safe\nstring buildUriPath(Paths...)(Paths paths)\n{\n    @safe\n    static typeof(return) joinPaths(in string lhs, in string rhs) pure nothrow\n    {\n        return lhs ~ \"/\" ~ rhs;\n    }\n\n    @trusted\n    string[] pathsToStringArray() // TODO: pure nothrow (because of to!string)\n    {\n        auto result = new string[](paths.length);\n        foreach (i, path; paths)\n            result[i] = path.to!string;\n        return result;\n    }\n\n    return reduce!joinPaths(pathsToStringArray());\n}\n```\n\nI want to know a better way\u2026"}