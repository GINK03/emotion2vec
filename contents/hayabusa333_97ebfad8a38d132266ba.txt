{"context": "\n\n\u306f\u3058\u3081\u306b\nElixir\u306b\u3066Cowboy\u3092\u76f4\u63a5\u52d5\u304b\u3059\u305f\u3081\u306e\u8a18\u4e8b\u3068\u306a\u308a\u307e\u3059\u3002\n\u524d\u56de\u306e\u8a18\u4e8b\u3067\u306f\u3001sendfile\u30e1\u30bd\u30c3\u30c9\u306b\u3066\u9001\u4fe1\u6642\u306b\u76f4\u63a5\u30d5\u30a1\u30a4\u30eb\u3092\u9001\u4fe1\u3059\u308b\u65b9\u6cd5\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306e\u8a18\u4e8b\u3067\u306fStream\u901a\u4fe1\u306b\u95a2\u3057\u3066\u8a18\u8f09\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nCowboy1.0\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\nCowboy2.0\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\u4f7f\u7528\u3057\u305f\u8a00\u8a9e\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\ncowboy 1.0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\n\n\nVersion\n\n\n\n\nElixir\n1.3.2\n\n\nErlang\n19.2\n\n\nCowboy\n1.0.4\n\n\n\n\ncowboy 2.0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\n\n\nVersion\n\n\n\n\nElixir\n1.3.2\n\n\nErlang\n19.2\n\n\nCowboy\n2.0.0-pre4\n\n\n\n\nStream\u901a\u4fe1\n\u4eca\u56de\u306fStream\u901a\u4fe1\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\u901a\u4fe1\u5185\u5bb9\u306b\u95a2\u3057\u3066\u306fHTML\u306e\u901a\u4fe1\u3092\u5b9f\u65bd\u3057\u30011\u3064\u305a\u3064\u753b\u9762\u306e\u8868\u793a\u5185\u5bb9\u3092\u5897\u3084\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u753b\u9762\u3060\u3051\u5148\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306bStream\u3067\u306e\u901a\u4fe1\u3092\u884c\u3046\u5834\u5408\u306a\u3069\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u5f79\u306b\u305f\u3064\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\ncowboy 1.0\u306e\u5834\u5408\n\nlib/elixir_cowboy_example.ex\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []},\n      # Add it.\n      {\"/stream\", ElixirCowboyExample.StreamHandler, []},\n      {\"/sendfile\", ElixirCowboyExample.SendFileHandler, []},\n      {\"/cookie\", ElixirCowboyExample.CookieHandler, []},\n      {\"/upload\", ElixirCowboyExample.UploadHandler, []},\n      {\"/dynamic\", ElixirCowboyExample.DynamicPageHandler, []},\n      {\"/json\", ElixirCowboyExample.JsonHandler, []},\n      {\"/:html\", ElixirCowboyExample.Handler, []},\n      {\"/priv/static/js/:javascript\", ElixirCowboyExample.JavascriptHandler, []},\n      {\"/priv/static/css/:css\", ElixirCowboyExample.CssHandler, []},\n      {\"/priv/static/image/[...]\", :cowboy_static, {:priv_dir, :elixir_cowboy_example, \"static/image\"}}\n    ]\n\n\n\n\nlib/elixir_cowboy_example/stream_handler.ex\ndefmodule ElixirCowboyExample.StreamHandler do\n  def init({:tcp, :http}, req, opts) do\n    {:ok, req, opts}\n  end\n\n  def handle(req, state) do\n\n    # stream\u901a\u4fe1\u3092\u5b9f\u65bd\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\n    {:ok, req} = :cowboy_req.chunked_reply(200, req)\n\n    # 2\u79d2\u304a\u304d\u306bHTML\u5185\u5bb9\u3092\u9001\u4fe1\u5b9f\u65bd\u3059\u308b\n    :ok = :cowboy_req.chunk(\"<html><head>Hello world!</head>\", req)\n    :timer.sleep(2000)\n    :ok = :cowboy_req.chunk(\"<body><p>Stream!</p>\", req)\n    :timer.sleep(2000)\n    :ok = :cowboy_req.chunk(\"<p>Output!</p></body></html>\", req)\n\n    {:ok, req, state}\n  end\n\n  def terminate(_reason, _req, _state) do\n    :ok\n  end\nend\n\n\n\ncowboy 2.0\u306e\u5834\u5408\n\nlib/elixir_cowboy_example.ex\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []},\n      # Add it.\n      {\"/stream\", ElixirCowboyExample.StreamHandler, []},\n      {\"/sendfile\", ElixirCowboyExample.SendFileHandler, []},\n      {\"/cookie\", ElixirCowboyExample.CookieHandler, []},\n      {\"/upload\", ElixirCowboyExample.UploadHandler, []},\n      {\"/dynamic\", ElixirCowboyExample.DynamicPageHandler, []},\n      {\"/json\", ElixirCowboyExample.JsonHandler, []},\n      {\"/:html\", ElixirCowboyExample.Handler, []},\n      {\"/priv/static/js/:javascript\", ElixirCowboyExample.JavascriptHandler, []},\n      {\"/priv/static/css/:css\", ElixirCowboyExample.CssHandler, []},\n      {\"/priv/static/image/[...]\", :cowboy_static, {:priv_dir, :elixir_cowboy_example, \"static/image\"}}\n    ]\n\n\n\n\nlib/elixir_cowboy_example/stream_handler.ex\ndefmodule ElixirCowboyExample.StreamHandler do\n  def init(req, opts) do\n\n    # stream\u901a\u4fe1\u306e\u305f\u3081\u306e\u6e96\u5099\n    req = :cowboy_req.stream_reply(200, req)\n\n    # 2\u79d2\u304a\u304d\u306bHTML\u306e\u5185\u5bb9\u3092\u9001\u4fe1\n    # cowboy2.0\u3067\u306f\u901a\u4fe1\u3092\u7d9a\u3051\u308b\u9593\u306f\u3001:nofin \u3092\u8a2d\u5b9a\u3057\u3001\u5b8c\u4e86\u6642\u306b :fin \u3092\u9001\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5b9f\u65bd\u3059\u308b\n    :cowboy_req.stream_body(\"<html><head>Hello world!</head>\", :nofin, req)\n    :timer.sleep(2000)\n    :cowboy_req.stream_body(\"<body><p>Stream!</p>\", :nofin, req)\n    :timer.sleep(2000)\n    :cowboy_req.stream_body(\"<p>Output!</p></body></html>\", :fin, req)\n\n    {:ok, req, opts}\n  end\n\nend\n\n\n\n\u8a18\u8f09\u3057\u305f\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3067\u306f\u5b9f\u884c\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u3044\u3064\u3082\u901a\u308a iex -S mix \u306b\u3066 cowboy \u3092\u5b9f\u884c\u3057\u3066\u3044\u304d\u3001http://localhost:4000/sendfile\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n2\u79d2\u304a\u304d\u306bHTML\u306e\u5185\u5bb9\u304c\u8ffd\u52a0\u3067\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\n\u6700\u5f8c\u306b\n\u4eca\u56de\u306fstream\u901a\u4fe1\u3092\u5b9f\u65bd\u3059\u308b\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u4e0a\u8a18\u3067\u3082\u8a18\u8f09\u3057\u307e\u3057\u305f\u304c\u3001\u4e00\u62ec\u3067\u9001\u4fe1\u3059\u308b\u306e\u3067\u306f\u306a\u304fstream\u3067\u901a\u4fe1\u3057\u305f\u3044\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u5f79\u306b\u305f\u3064\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u305d\u308c\u3067\u306f\u307e\u305f\u6b21\u56de\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nCowboy User Guide\nCowboy User Guide\n# \u306f\u3058\u3081\u306b\nElixir\u306b\u3066Cowboy\u3092\u76f4\u63a5\u52d5\u304b\u3059\u305f\u3081\u306e\u8a18\u4e8b\u3068\u306a\u308a\u307e\u3059\u3002\n[\u524d\u56de](http://qiita.com/hayabusa333/items/783ba7098fd598adb64b)\u306e\u8a18\u4e8b\u3067\u306f\u3001sendfile\u30e1\u30bd\u30c3\u30c9\u306b\u3066\u9001\u4fe1\u6642\u306b\u76f4\u63a5\u30d5\u30a1\u30a4\u30eb\u3092\u9001\u4fe1\u3059\u308b\u65b9\u6cd5\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306e\u8a18\u4e8b\u3067\u306fStream\u901a\u4fe1\u306b\u95a2\u3057\u3066\u8a18\u8f09\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n[Cowboy1.0\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059](https://github.com/hayabusa333/elixir_cowboy_example/tree/stream_cowboy)\n\n[Cowboy2.0\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059](https://github.com/hayabusa333/elixir_cowboy_example/tree/stream_cowboy_two_pre4)\n\n# \u30d0\u30fc\u30b8\u30e7\u30f3\n\u4f7f\u7528\u3057\u305f\u8a00\u8a9e\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\n## cowboy 1.0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n|  | Version |\n|:-----------|--------:|\n| Elixir | 1.3.2 |\n| Erlang | 19.2 |\n| Cowboy | 1.0.4 |\n\n## cowboy 2.0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n|  | Version |\n|:-----------|--------:|\n| Elixir | 1.3.2 |\n| Erlang | 19.2 |\n| Cowboy | 2.0.0-pre4 |\n\n# Stream\u901a\u4fe1\n\n\u4eca\u56de\u306fStream\u901a\u4fe1\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\u901a\u4fe1\u5185\u5bb9\u306b\u95a2\u3057\u3066\u306fHTML\u306e\u901a\u4fe1\u3092\u5b9f\u65bd\u3057\u30011\u3064\u305a\u3064\u753b\u9762\u306e\u8868\u793a\u5185\u5bb9\u3092\u5897\u3084\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u753b\u9762\u3060\u3051\u5148\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306bStream\u3067\u306e\u901a\u4fe1\u3092\u884c\u3046\u5834\u5408\u306a\u3069\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u5f79\u306b\u305f\u3064\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n## cowboy 1.0\u306e\u5834\u5408\n\n``` elixir:lib/elixir_cowboy_example.ex\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []},\n      # Add it.\n      {\"/stream\", ElixirCowboyExample.StreamHandler, []},\n      {\"/sendfile\", ElixirCowboyExample.SendFileHandler, []},\n      {\"/cookie\", ElixirCowboyExample.CookieHandler, []},\n      {\"/upload\", ElixirCowboyExample.UploadHandler, []},\n      {\"/dynamic\", ElixirCowboyExample.DynamicPageHandler, []},\n      {\"/json\", ElixirCowboyExample.JsonHandler, []},\n      {\"/:html\", ElixirCowboyExample.Handler, []},\n      {\"/priv/static/js/:javascript\", ElixirCowboyExample.JavascriptHandler, []},\n      {\"/priv/static/css/:css\", ElixirCowboyExample.CssHandler, []},\n      {\"/priv/static/image/[...]\", :cowboy_static, {:priv_dir, :elixir_cowboy_example, \"static/image\"}}\n    ]\n\n```\n\n``` elixir:lib/elixir_cowboy_example/stream_handler.ex\ndefmodule ElixirCowboyExample.StreamHandler do\n  def init({:tcp, :http}, req, opts) do\n    {:ok, req, opts}\n  end\n\n  def handle(req, state) do\n\n    # stream\u901a\u4fe1\u3092\u5b9f\u65bd\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\n    {:ok, req} = :cowboy_req.chunked_reply(200, req)\n\n    # 2\u79d2\u304a\u304d\u306bHTML\u5185\u5bb9\u3092\u9001\u4fe1\u5b9f\u65bd\u3059\u308b\n    :ok = :cowboy_req.chunk(\"<html><head>Hello world!</head>\", req)\n    :timer.sleep(2000)\n    :ok = :cowboy_req.chunk(\"<body><p>Stream!</p>\", req)\n    :timer.sleep(2000)\n    :ok = :cowboy_req.chunk(\"<p>Output!</p></body></html>\", req)\n\n    {:ok, req, state}\n  end\n\n  def terminate(_reason, _req, _state) do\n    :ok\n  end\nend\n```\n\n## cowboy 2.0\u306e\u5834\u5408\n\n``` elixir:lib/elixir_cowboy_example.ex\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []},\n      # Add it.\n      {\"/stream\", ElixirCowboyExample.StreamHandler, []},\n      {\"/sendfile\", ElixirCowboyExample.SendFileHandler, []},\n      {\"/cookie\", ElixirCowboyExample.CookieHandler, []},\n      {\"/upload\", ElixirCowboyExample.UploadHandler, []},\n      {\"/dynamic\", ElixirCowboyExample.DynamicPageHandler, []},\n      {\"/json\", ElixirCowboyExample.JsonHandler, []},\n      {\"/:html\", ElixirCowboyExample.Handler, []},\n      {\"/priv/static/js/:javascript\", ElixirCowboyExample.JavascriptHandler, []},\n      {\"/priv/static/css/:css\", ElixirCowboyExample.CssHandler, []},\n      {\"/priv/static/image/[...]\", :cowboy_static, {:priv_dir, :elixir_cowboy_example, \"static/image\"}}\n    ]\n\n```\n\n``` elixir:lib/elixir_cowboy_example/stream_handler.ex\ndefmodule ElixirCowboyExample.StreamHandler do\n  def init(req, opts) do\n\n    # stream\u901a\u4fe1\u306e\u305f\u3081\u306e\u6e96\u5099\n    req = :cowboy_req.stream_reply(200, req)\n    \n    # 2\u79d2\u304a\u304d\u306bHTML\u306e\u5185\u5bb9\u3092\u9001\u4fe1\n    # cowboy2.0\u3067\u306f\u901a\u4fe1\u3092\u7d9a\u3051\u308b\u9593\u306f\u3001:nofin \u3092\u8a2d\u5b9a\u3057\u3001\u5b8c\u4e86\u6642\u306b :fin \u3092\u9001\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5b9f\u65bd\u3059\u308b\n    :cowboy_req.stream_body(\"<html><head>Hello world!</head>\", :nofin, req)\n    :timer.sleep(2000)\n    :cowboy_req.stream_body(\"<body><p>Stream!</p>\", :nofin, req)\n    :timer.sleep(2000)\n    :cowboy_req.stream_body(\"<p>Output!</p></body></html>\", :fin, req)\n\n    {:ok, req, opts}\n  end\n\nend\n```\n\n# \u8a18\u8f09\u3057\u305f\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3067\u306f\u5b9f\u884c\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u3044\u3064\u3082\u901a\u308a `iex -S mix` \u306b\u3066 cowboy \u3092\u5b9f\u884c\u3057\u3066\u3044\u304d\u3001`http://localhost:4000/sendfile`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n2\u79d2\u304a\u304d\u306bHTML\u306e\u5185\u5bb9\u304c\u8ffd\u52a0\u3067\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n<img width=\"1176\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-16 10.19.51.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/3014/a3307b1a-355e-dcc0-e2f5-77c0d39e026f.png\">\n\n\n# \u6700\u5f8c\u306b\n\n\u4eca\u56de\u306fstream\u901a\u4fe1\u3092\u5b9f\u65bd\u3059\u308b\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u4e0a\u8a18\u3067\u3082\u8a18\u8f09\u3057\u307e\u3057\u305f\u304c\u3001\u4e00\u62ec\u3067\u9001\u4fe1\u3059\u308b\u306e\u3067\u306f\u306a\u304fstream\u3067\u901a\u4fe1\u3057\u305f\u3044\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u5f79\u306b\u305f\u3064\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u305d\u308c\u3067\u306f\u307e\u305f\u6b21\u56de\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n[Cowboy User Guide](https://ninenines.eu/docs/en/cowboy/1.0/guide/)\n[Cowboy User Guide](https://ninenines.eu/docs/en/cowboy/2.0/guide/)\n", "tags": ["Elixir", "cowboy"]}