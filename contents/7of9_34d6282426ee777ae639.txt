{"context": "\n\u52d5\u4f5c\u78ba\u8a8d\nVivado 2015.4 on Windows 8.1 pro\n\n\n\u95a2\u9023 https://forums.xilinx.com/t5/Xcell-Daily-Blog/The-Zynq-PS-PL-Part-Three-Adam-Taylor-s-MicroZed-Chronicles-Part/ba-p/425154\n\nVivado\u3067\u306e\u4f5c\u696d > IP\u306e\u4f5c\u6210\nhttp://qiita.com/7of9/items/9e46cb1f83a9c6935780\n\u306e\u6d41\u308c\u306b\u5f93\u3044IP\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\nDisplay name: myip_v1.0\nIP location: 160604ip_repo\n\n\nXSDK\u3067\u306e\u4f5c\u696d\n\nRepository\u8ffd\u52a0\n\u95a2\u9023 http://qiita.com/7of9/items/710614ec6d0d15ab11ed\nRepositories\u306bVivado\u3067\u4f5c\u6210\u3057\u305fIP\u3092\u8ffd\u52a0 (160604ip_repo)\u3002\n\n\nxparameter.h\nXSDK\u306b\u3066\u4f5c\u6210\u3057\u305fBSP\u306exparameters.h\u306b\u3066MYIP\u3067\u691c\u7d22\u3059\u308b\u3068\u4ee5\u4e0b\u304c\u898b\u3064\u304b\u3063\u305f\u3002\n/******************************************************************/\n\n/* Definitions for driver MYIP */\n#define XPAR_MYIP_NUM_INSTANCES 1\n\n/* Definitions for peripheral MYIP_0 */\n#define XPAR_MYIP_0_DEVICE_ID 0\n#define XPAR_MYIP_0_S00_AXI_BASEADDR 0xFFFFFFFF\n#define XPAR_MYIP_0_S00_AXI_HIGHADDR 0x00000000\n\n\nmyip_selftest.c\nBSP > ps7_cortexa9_0 > libsrc > myip_v1_0 > src\u306b myip_selftest.c\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3002\n\u4e2d\u8eab\u3092\u898b\u308b\u3068\u30c6\u30b9\u30c8\u7528\u306e\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\nmyip_selftest.c\nXStatus MYIP_Reg_SelfTest(void * baseaddr_p)\n{\n    u32 baseaddr;\n    int write_loop_index;\n    int read_loop_index;\n    int Index;\n\n    baseaddr = (u32) baseaddr_p;\n\n    xil_printf(\"******************************\\n\\r\");\n    xil_printf(\"* User Peripheral Self Test\\n\\r\");\n    xil_printf(\"******************************\\n\\n\\r\");\n\n    /*\n     * Write to user logic slave module register(s) and read back\n     */\n    xil_printf(\"User logic slave module test...\\n\\r\");\n\n    for (write_loop_index = 0 ; write_loop_index < 4; write_loop_index++)\n      MYIP_mWriteReg (baseaddr, write_loop_index*4, (write_loop_index+1)*READ_WRITE_MUL_FACTOR);\n    for (read_loop_index = 0 ; read_loop_index < 4; read_loop_index++)\n      if ( MYIP_mReadReg (baseaddr, read_loop_index*4) != (read_loop_index+1)*READ_WRITE_MUL_FACTOR){\n        xil_printf (\"Error reading register value at address %x\\n\", (int)baseaddr + read_loop_index*4);\n        return XST_FAILURE;\n      }\n\n    xil_printf(\"   - slave register write/read passed\\n\\n\\r\");\n\n    return XST_SUCCESS;\n}\n\n\n\napplication\nNew > Application Project\u306b\u3066\u4ee5\u4e0b\u306e\u5b9f\u88c5\u3092\u3057\u305f\u3002\n\nxparameters.h\u3068myip.h\u306einclude\u3092\u8ffd\u52a0\u3002\nMYIP_Reg_SelfTest(XPAR_MYIP_0_S00_AXI_BASEADDR);\u3092\u4f7f\u7528\n\n\nbaseaddr_p\u306fxparameters.h\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bXPAR_MYIP_0_S00_AXI_BASEADDR\u3092\u6307\u5b9a (\u6b63\u89e3\u304b\u306f\u4e0d\u660e)\n\n\n\n\nhelloworld.c\n#include <stdio.h>\n#include \"platform.h\"\n#include <xparameters.h>\n#include <myip.h>\n\nvoid print(char *str);\n\nint main()\n{\n    init_platform();\n\n    print(\"Hello World\\n\\r\");\n\n    XStatus sts;\n\n    sts = MYIP_Reg_SelfTest(XPAR_MYIP_0_S00_AXI_BASEADDR);\n    if (sts == XST_SUCCESS) {\n        print(\"MYIP selftest OK\\r\\n\");\n    } else {\n        print(\"MYIP selftest NG\\r\\n\");\n    }\n\n    cleanup_platform();\n    return 0;\n}\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u4e00\u5fdc\u52d5\u3044\u3066\u3044\u308b\u304c\u3001\u8a73\u7d30\u3092\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u3002\nHello World\n******************************\n* User Peripheral Self Test\n******************************\n\nUser logic slave module test...\n   - slave register write/read passed\n\nMYIP selftest OK\n\n```txt:\u52d5\u4f5c\u78ba\u8a8d\nVivado 2015.4 on Windows 8.1 pro\n```\n\n\u95a2\u9023 https://forums.xilinx.com/t5/Xcell-Daily-Blog/The-Zynq-PS-PL-Part-Three-Adam-Taylor-s-MicroZed-Chronicles-Part/ba-p/425154\n\n## Vivado\u3067\u306e\u4f5c\u696d > IP\u306e\u4f5c\u6210\n\nhttp://qiita.com/7of9/items/9e46cb1f83a9c6935780\n\u306e\u6d41\u308c\u306b\u5f93\u3044IP\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n- Display name: myip_v1.0\n- IP location: 160604ip_repo\n\n## XSDK\u3067\u306e\u4f5c\u696d\n\n### Repository\u8ffd\u52a0\n\n\u95a2\u9023 http://qiita.com/7of9/items/710614ec6d0d15ab11ed\n\nRepositories\u306bVivado\u3067\u4f5c\u6210\u3057\u305fIP\u3092\u8ffd\u52a0 (160604ip_repo)\u3002\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/d80b7a5c-d863-6600-9450-0b5716b26767.png)\n\n### xparameter.h\n\nXSDK\u306b\u3066\u4f5c\u6210\u3057\u305fBSP\u306exparameters.h\u306b\u3066MYIP\u3067\u691c\u7d22\u3059\u308b\u3068\u4ee5\u4e0b\u304c\u898b\u3064\u304b\u3063\u305f\u3002\n\n```\n/******************************************************************/\n\n/* Definitions for driver MYIP */\n#define XPAR_MYIP_NUM_INSTANCES 1\n\n/* Definitions for peripheral MYIP_0 */\n#define XPAR_MYIP_0_DEVICE_ID 0\n#define XPAR_MYIP_0_S00_AXI_BASEADDR 0xFFFFFFFF\n#define XPAR_MYIP_0_S00_AXI_HIGHADDR 0x00000000\n```\n\n### myip_selftest.c\n\nBSP > ps7_cortexa9_0 > libsrc > myip_v1_0 > src\u306b myip_selftest.c\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3002\n\u4e2d\u8eab\u3092\u898b\u308b\u3068\u30c6\u30b9\u30c8\u7528\u306e\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n```myip_selftest.c\nXStatus MYIP_Reg_SelfTest(void * baseaddr_p)\n{\n\tu32 baseaddr;\n\tint write_loop_index;\n\tint read_loop_index;\n\tint Index;\n\n\tbaseaddr = (u32) baseaddr_p;\n\n\txil_printf(\"******************************\\n\\r\");\n\txil_printf(\"* User Peripheral Self Test\\n\\r\");\n\txil_printf(\"******************************\\n\\n\\r\");\n\n\t/*\n\t * Write to user logic slave module register(s) and read back\n\t */\n\txil_printf(\"User logic slave module test...\\n\\r\");\n\n\tfor (write_loop_index = 0 ; write_loop_index < 4; write_loop_index++)\n\t  MYIP_mWriteReg (baseaddr, write_loop_index*4, (write_loop_index+1)*READ_WRITE_MUL_FACTOR);\n\tfor (read_loop_index = 0 ; read_loop_index < 4; read_loop_index++)\n\t  if ( MYIP_mReadReg (baseaddr, read_loop_index*4) != (read_loop_index+1)*READ_WRITE_MUL_FACTOR){\n\t    xil_printf (\"Error reading register value at address %x\\n\", (int)baseaddr + read_loop_index*4);\n\t    return XST_FAILURE;\n\t  }\n\n\txil_printf(\"   - slave register write/read passed\\n\\n\\r\");\n\n\treturn XST_SUCCESS;\n}\n```\n\n### application\n\nNew > Application Project\u306b\u3066\u4ee5\u4e0b\u306e\u5b9f\u88c5\u3092\u3057\u305f\u3002\n\n- xparameters.h\u3068myip.h\u306einclude\u3092\u8ffd\u52a0\u3002\n- MYIP_Reg_SelfTest(XPAR_MYIP_0_S00_AXI_BASEADDR);\u3092\u4f7f\u7528\n  - baseaddr_p\u306fxparameters.h\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bXPAR_MYIP_0_S00_AXI_BASEADDR\u3092\u6307\u5b9a (\u6b63\u89e3\u304b\u306f\u4e0d\u660e)\n\n```helloworld.c\n#include <stdio.h>\n#include \"platform.h\"\n#include <xparameters.h>\n#include <myip.h>\n\nvoid print(char *str);\n\nint main()\n{\n    init_platform();\n\n    print(\"Hello World\\n\\r\");\n\n    XStatus sts;\n\n    sts = MYIP_Reg_SelfTest(XPAR_MYIP_0_S00_AXI_BASEADDR);\n    if (sts == XST_SUCCESS) {\n    \tprint(\"MYIP selftest OK\\r\\n\");\n    } else {\n    \tprint(\"MYIP selftest NG\\r\\n\");\n    }\n\n    cleanup_platform();\n    return 0;\n}\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u4e00\u5fdc\u52d5\u3044\u3066\u3044\u308b\u304c\u3001\u8a73\u7d30\u3092\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u3002\n\n```\nHello World\n******************************\n* User Peripheral Self Test\n******************************\n\nUser logic slave module test...\n   - slave register write/read passed\n\nMYIP selftest OK\n```\n", "tags": ["zybo", "AXI4", "Primer"]}