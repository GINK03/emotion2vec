{"context": " More than 1 year has passed since last update.Vasily's blog: Computing cryptography hashes: Rust, F#, D and Scala\n\u3053\u306e\u8a18\u4e8b\u898b\u3066\uff0cD\u8a00\u8a9e\u306e\u30cf\u30c3\u30b7\u30e5\u5b9f\u88c5\u3063\u3066\u305d\u3093\u306a\u306b\u5909\u306a\u5b9f\u88c5\u3060\u3063\u305f\u304b\u306a\uff1f\u3068\u30bd\u30fc\u30b9\u3092\u898b\u305f\u3051\u3069\u7279\u5225\u9045\u305d\u3046\u306a\u5b9f\u88c5\u306b\u306f\u898b\u3048\u306a\u3044\uff0e\u3067\uff0c\u3088\u304f\u3088\u304f\u8003\u3048\u305f\u3089dmd\u3063\u3066\u3053\u306e\u624b\u306e\u30d8\u30d3\u30fc\u306a\u8a08\u7b97\u95a2\u4fc2\u306e\u6700\u9069\u5316\u5f31\u304b\u3063\u305f\u306a\u3041\u3068\u601d\u3044\u51fa\u3057\u305f\u306e\u3067\uff0cLLVM\u3092\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u3057\u3066\u3044\u308bldc\u3067\u8a66\u3057\u305f\u3089Rust\u3068\u307b\u307c\u540c\u3058\u901f\u5ea6\u3060\u3063\u305f(\u5c11\u3057\u901f\u3044)\u306e\u3067\u5b89\u5fc3\u3057\u305f\uff0c\u3068\u3044\u3046\u5358\u306a\u308b\u30e1\u30e2\u8a18\u4e8b\uff0e\n\nRust\nDuration\u306e\u51fa\u529b\u304c\u898b\u3048\u306b\u304f\u304b\u3063\u305f\u306e\u3067\uff0cms\u306b\u5909\u66f4\uff0eRust 1.0.0\u3068rust-crypto\u306f0.2.31\u3092\u4f7f\u3063\u305f\uff0e\nextern crate crypto;\nextern crate time;\n\nuse crypto::md5::Md5;\nuse crypto::sha1::Sha1;\nuse crypto::sha2::{Sha256, Sha512};\nuse crypto::digest::Digest;\nuse time::now;\n\nfn bench<T: Digest>(name: &str, digest: &mut T, input: &Vec<u8>) {\n    let started = time::now();\n    for _ in 1..100 {\n        digest.input(&input);\n        digest.reset();\n    }\n    let elapsed = time::now() - started;\n    println!(\"{:?} elapled {:?}\", name, elapsed.num_milliseconds());\n}\n\nfn main() {\n    let input = vec![0u8; 10000000];\n    bench(\"MD5\", &mut Md5::new(), &input);\n    bench(\"SHA1\", &mut Sha1::new(), &input);\n    bench(\"SHA256\", &mut Sha256::new(), &input);\n    bench(\"SHA512\", &mut Sha512::new(), &input);\n}\n\n\u7d50\u679c:\n\"MD5\" elapled 1977\n\"SHA1\" elapled 1812\n\"SHA256\" elapled 4524\n\"SHA512\" elapled 2678\n\n\nD\u8a00\u8a9e\nRust\u306e\u5b9f\u88c5\u306b\u5408\u308f\u305b\u3066\uff0cfinish\u3058\u3083\u306a\u304f\u3066Rust\u306ereset\u76f8\u5f53\u306estart\u306b\u3057\u305f\uff0e\nmodule main;\n\nimport std.stdio;\nimport std.digest.md;\nimport std.digest.sha;\nimport std.datetime;\n\nvoid bench(T)(string name, T digest, const ubyte[] input) {\n        auto sw = StopWatch(AutoStart.yes);\n        for (auto i = 0; i < 100; i++) {\n                digest.put(input);\n                digest.start();\n                //auto hash = digest.finish();\n        }\n        sw.stop();\n        writefln(\"%s - %s ms elapsed.\", name, sw.peek.msecs);\n}\n\nvoid main(string[] args)\n{\n        auto input = new const ubyte[10_000_000];\n        MD5 md5; bench(\"MD5\", md5, input);\n        SHA1 sha1; bench(\"SHA1\", sha1, input);\n        SHA256 sha256; bench(\"SHA256\", sha256, input);\n        SHA512 sha512; bench(\"SHA512\", sha512, input);\n}\n\ndmd 2.067\u3067\u306e\u7d50\u679c:\nMD5 - 8363 ms elapsed.\nSHA1 - 16611 ms elapsed.\nSHA256 - 35451 ms elapsed.\nSHA512 - 24743 ms elapsed.\n\nldc2-0.15.2-beta1\u3067\u306e\u7d50\u679c:\nMD5 - 1970 ms elapsed.\nSHA1 - 1676 ms elapsed.\nSHA256 - 4273 ms elapsed.\nSHA512 - 2964 ms elapsed.\n\n\u591a\u5206gdc\u3067\u3082ldc\u306b\u8fd1\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u51fa\u308b\u306f\u305a\uff0e\u6570\u5024\u8a08\u7b97\u3068\u304b\u306bD\u8a00\u8a9e\u4f7f\u3063\u3066\u3044\u308b\u4eba\u9054\u304cgdc/ldc\u3092\u4f7f\u3044\u307e\u304f\u3063\u3066\u3044\u308b\u306e\uff0c\u3053\u308c\u306f\u4ed5\u65b9\u306a\u3044\u306a\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u306d\u2026\n\n[Vasily's blog: Computing cryptography hashes: Rust, F#, D and Scala](http://vaskir.blogspot.jp/2015/04/computing-cryptography-hashes-rust-vs-f.html)\n\n\u3053\u306e\u8a18\u4e8b\u898b\u3066\uff0cD\u8a00\u8a9e\u306e\u30cf\u30c3\u30b7\u30e5\u5b9f\u88c5\u3063\u3066\u305d\u3093\u306a\u306b\u5909\u306a\u5b9f\u88c5\u3060\u3063\u305f\u304b\u306a\uff1f\u3068\u30bd\u30fc\u30b9\u3092\u898b\u305f\u3051\u3069\u7279\u5225\u9045\u305d\u3046\u306a\u5b9f\u88c5\u306b\u306f\u898b\u3048\u306a\u3044\uff0e\u3067\uff0c\u3088\u304f\u3088\u304f\u8003\u3048\u305f\u3089dmd\u3063\u3066\u3053\u306e\u624b\u306e\u30d8\u30d3\u30fc\u306a\u8a08\u7b97\u95a2\u4fc2\u306e\u6700\u9069\u5316\u5f31\u304b\u3063\u305f\u306a\u3041\u3068\u601d\u3044\u51fa\u3057\u305f\u306e\u3067\uff0cLLVM\u3092\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u3057\u3066\u3044\u308bldc\u3067\u8a66\u3057\u305f\u3089Rust\u3068\u307b\u307c\u540c\u3058\u901f\u5ea6\u3060\u3063\u305f(\u5c11\u3057\u901f\u3044)\u306e\u3067\u5b89\u5fc3\u3057\u305f\uff0c\u3068\u3044\u3046\u5358\u306a\u308b\u30e1\u30e2\u8a18\u4e8b\uff0e\n\n## Rust\n\n`Duration`\u306e\u51fa\u529b\u304c\u898b\u3048\u306b\u304f\u304b\u3063\u305f\u306e\u3067\uff0cms\u306b\u5909\u66f4\uff0eRust 1.0.0\u3068rust-crypto\u306f0.2.31\u3092\u4f7f\u3063\u305f\uff0e\n\n```rust\nextern crate crypto;\nextern crate time;\n \nuse crypto::md5::Md5;\nuse crypto::sha1::Sha1;\nuse crypto::sha2::{Sha256, Sha512};\nuse crypto::digest::Digest;\nuse time::now;\n \nfn bench<T: Digest>(name: &str, digest: &mut T, input: &Vec<u8>) {\n    let started = time::now();\n    for _ in 1..100 {\n        digest.input(&input);\n        digest.reset();\n    }\n    let elapsed = time::now() - started;\n    println!(\"{:?} elapled {:?}\", name, elapsed.num_milliseconds());\n}\n \nfn main() {\n    let input = vec![0u8; 10000000];\n    bench(\"MD5\", &mut Md5::new(), &input);\n    bench(\"SHA1\", &mut Sha1::new(), &input);\n    bench(\"SHA256\", &mut Sha256::new(), &input);\n    bench(\"SHA512\", &mut Sha512::new(), &input);\n}\n```\n\n\u7d50\u679c:\n\n```\n\"MD5\" elapled 1977\n\"SHA1\" elapled 1812\n\"SHA256\" elapled 4524\n\"SHA512\" elapled 2678\n```\n\n## D\u8a00\u8a9e\n\nRust\u306e\u5b9f\u88c5\u306b\u5408\u308f\u305b\u3066\uff0c`finish`\u3058\u3083\u306a\u304f\u3066Rust\u306e`reset`\u76f8\u5f53\u306e`start`\u306b\u3057\u305f\uff0e\n\n```d\nmodule main;\n \nimport std.stdio;\nimport std.digest.md;\nimport std.digest.sha;\nimport std.datetime;\n \nvoid bench(T)(string name, T digest, const ubyte[] input) {\n        auto sw = StopWatch(AutoStart.yes);\n        for (auto i = 0; i < 100; i++) {\n                digest.put(input);\n                digest.start();\n                //auto hash = digest.finish();\n        }\n        sw.stop();\n        writefln(\"%s - %s ms elapsed.\", name, sw.peek.msecs);\n}\n \nvoid main(string[] args)\n{\n        auto input = new const ubyte[10_000_000];\n        MD5 md5; bench(\"MD5\", md5, input);\n        SHA1 sha1; bench(\"SHA1\", sha1, input);\n        SHA256 sha256; bench(\"SHA256\", sha256, input);\n        SHA512 sha512; bench(\"SHA512\", sha512, input);\n}\n```\n\ndmd 2.067\u3067\u306e\u7d50\u679c:\n\n```\nMD5 - 8363 ms elapsed.\nSHA1 - 16611 ms elapsed.\nSHA256 - 35451 ms elapsed.\nSHA512 - 24743 ms elapsed.\n```\n\nldc2-0.15.2-beta1\u3067\u306e\u7d50\u679c:\n\n```\nMD5 - 1970 ms elapsed.\nSHA1 - 1676 ms elapsed.\nSHA256 - 4273 ms elapsed.\nSHA512 - 2964 ms elapsed.\n```\n\n\u591a\u5206gdc\u3067\u3082ldc\u306b\u8fd1\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u51fa\u308b\u306f\u305a\uff0e\u6570\u5024\u8a08\u7b97\u3068\u304b\u306bD\u8a00\u8a9e\u4f7f\u3063\u3066\u3044\u308b\u4eba\u9054\u304cgdc/ldc\u3092\u4f7f\u3044\u307e\u304f\u3063\u3066\u3044\u308b\u306e\uff0c\u3053\u308c\u306f\u4ed5\u65b9\u306a\u3044\u306a\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u306d\u2026\n", "tags": ["dlang"]}