{"tags": ["C++", "C++11"], "context": " More than 1 year has passed since last update.range-based for(\u7bc4\u56f2\u30d9\u30fc\u30b9for)\u3001\u697d\u306b\u7dba\u9e97\u306b\u66f8\u3051\u308b\u306e\u3067\u826f\u304f\u4f7f\u3063\u3066\u307e\u3059\u3002\n\u3067\u3082\u3001\u4f7f\u3048\u306a\u3044\u30fb\u4f7f\u3044\u96e3\u3044\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u6094\u3057\u3044\u3067\u3059\u3002\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u304c\u6b32\u3057\u3044\u6642\n\u30eb\u30fc\u30d7\u3092\u5206\u5272\u3057\u305f\u3044\u6642\n\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4f55\u304b\u3057\u305f\u3044\u51e6\u7406(continue\u6642\u3082\u542b\u3081\u3066)\n\n\u3053\u306e\uff13\u3064\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3057\u305f\u306e\u3067\u516c\u958b\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u4f7f\u7528\u4f8b\u304b\u3089\u3002\n#include <iostream>\n#include <list>\n#include <string>\n#include \"rbfor_range.h\"\n\nint main()\n{\n    std::list<std::string> wList{\"Lelouch\", \"Suzaku\", \"C.C.\", \"Karen\", \"Nunnally\"};\n\n    //   \u2193\u2605\u30eb\u30fc\u30d7\u5206\u5272\u306e\u5f15\u7d99\u304e\u7528\u5909\u6570           \u2193\u2605\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u6642\u306b\u5b9f\u884c\u3057\u305f\u3044\u51e6\u7406\n    auto wRBForIndexer = getRBForIndexer(wList, [](...){std::cout << \"\\n\";});\n\n    // \u2605\u6700\u521d\u306e\u30eb\u30fc\u30d7\n    for (auto&& wLoop : wRBForIndexer)\n    {        // \u2191\u30eb\u30fc\u30d7\u5909\u6570\n        auto& wString = wLoop.front();\n        if (wString == \"C.C.\") {\n            wLoop.pop_front();  // \u2190\"C.C.\"\u306e\u6b21\u304b\u3089\u518d\u958b\u3059\u308b\u305f\u3081\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n    break;\n        }\n        //                                \u2193\u2605\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\n        std::cout << \"1st Loop(\" << wLoop.getIndex() << \") \" << wString;\n    }\n\n    // \u2605\u7d99\u7d9a\u30eb\u30fc\u30d7\n    for (auto&& wLoop : wRBForIndexer)\n    {\n        auto& wString = wLoop.front();\n        std::cout << \"2nd Loop(\" << wLoop.getIndex() << \") \" << wString;\n    }\n    return 0;\n}\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\uff1a\nmsvc2015\n> cl abstract.cpp /EHsc\n> sample.exe\nMinGW 5.2.0\n> g++ abstract.cpp -std=c++11\n> a.exe\n\n\u7d50\u679c\uff1a\n1st Loop(0) Lelouch\n1st Loop(1) Suzaku\n\n2nd Loop(3) Karen\n2nd Loop(4) Nunnally\n\nrbfor_range.h\u3068\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u3053\u3053(Gist)\u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\n\n0.\u7d4c\u7def\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044\u6642\u3001C\u8a00\u8a9e\u6642\u4ee3\u306b\u9006\u623b\u308a\u3057\u3066\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3067\u56de\u3057\u3066operator[]\u3067\u53d6\u308a\u51fa\u3057\u3066\u307e\u3057\u305f\u3002\n\u9577\u3044\u3053\u3068\"\u30d9\u30bf\u30fcC\"er\u3060\u3063\u305f\u304b\u3089\u3068\u3044\u3046\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u69cb\u6587\u304c\u5acc\u3044\u306a\u3093\u3067\u3059\u3088\u3002\u7279\u306bitr != end()\u3002itr\u304cend()\u3092\u8d8a\u3048\u305f\u3089\u3069\u3046\u3057\u3088\u3046\u3063\u3066\u3002\u7121\u99c4\u306b\u60a9\u307f\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001teratail\u3067\u805e\u3044\u3066\u307f\u305f\u3068\u3053\u308d\u3001\uff13\u3064\u30a2\u30a4\u30c7\u30a2\u3092\u9802\u3051\u307e\u3057\u305f\u3002\n\u2460\u751f\u914d\u5217\u3001std::vector\u3001std::array\u306a\u3089\u3001\u30dd\u30a4\u30f3\u30bf\u306b\u3057\u3066begin()\u3092\u5f15\u3051\u3070OK\u3002\n\u2461stack overflow\u306b\u826f\u3044\u89e3\u304c\u3042\u308b\u3088\n\u2462boost\u306eadaptor\u3082\u3042\u308b\u3088\nlist\u3092\u4f7f\u3046\u4e88\u5b9a\u3082\u3042\u308a\u3001\u7d50\u5c40\u2461\u3068\u2462\u3092\u53c2\u8003\u306b\u3057\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\uff08\u2461\u2462\u3067\u306f\u5206\u5272\u3084\u30e9\u30e0\u30c0\u5f0f\u8ffd\u52a0\u304c\u3067\u304d\u306a\u3044\u3002\uff09\n\u7bc4\u56f2\u30d9\u30fc\u30b9for\u5c02\u7528 \u5b6b\u306e\u624b RBForRange\u3067\u3059\u3002\uff08\"Range-Based For\" Range\u306e\u7565\u3067\u3059\uff09\n\n1.\u30a2\u30a4\u30c7\u30a2\n\u57fa\u672c\u7684\u306a\u30a2\u30a4\u30c7\u30a2\u306f\u300c\u30ec\u30f3\u30b8\u300d\u306b\u57fa\u3065\u3044\u3066\u307e\u3059\u3002\u30ec\u30f3\u30b8\u306f\u5c06\u6765\u7684\u306b\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u7f6e\u304d\u63db\u3048\u308b\u3068\u30a6\u30ef\u30b5\u3055\u308c\u3066\u307e\u3059\u3002\nteratail\u3067yohhoy\u3055\u3093\u304b\u3089\u6559\u3048\u3066\u9802\u3044\u305f\u306e\u3067\u3059\u304c\u3001Iterators Must Go\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\u300cIterators Must Go\u300d\u3092\u8a33\u3057\u3066\u307f\u305f\u306e\u4eba\u304c\u8a33\u3057\u3066\u304f\u308c\u3066\u307e\u3059\u3002\u30ec\u30f3\u30b8\u3001\u7d20\u6674\u3089\u3057\u3044\u3067\u3059\u3002\n\u3055\u3066\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30fb\u30d9\u30fc\u30b9\u306efor\u6587\u306e\u5834\u5408\u3001\u5f53\u305f\u308a\u524d\u3067\u3059\u304c\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u30eb\u30fc\u30d7\u5909\u6570\u306b\u306a\u3063\u3066\u307e\u3059\u306d\u3002\n\u6a19\u6e96\u306e\u7bc4\u56f2\u30d9\u30fc\u30b9for\u6587\u306b\u306f\u30eb\u30fc\u30d7\u5909\u6570\u304c\u306a\u304f\u76f4\u63a5\u8981\u7d20\u304c\u3067\u3066\u304d\u307e\u3059\u3002\u4fbf\u5229\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u304c\u4ec7\u306b\u306a\u3063\u3066\u4f7f\u3048\u306a\u3044\u6642\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u300c\u7bc4\u56f2\u30d9\u30fc\u30b9for\u306e\u30eb\u30fc\u30d7\u5909\u6570\u300d\u3068\u3057\u3066\u300c\u30ec\u30f3\u30b8\u300d\u3092\u51fa\u529b\u3059\u308bRBForRange\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u2460\u3053\u306e\u300c\u30ec\u30f3\u30b8\u300d\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u6a5f\u80fd\u3092\u4ed5\u8fbc\u3093\u3067\u307e\u3059\u3002\n\u2461\u30eb\u30fc\u30d7\u5909\u6570\u3092\u5de5\u592b\u3057\u3066\u30b9\u30de\u30fc\u30c8\u306b\u5f15\u304d\u7d99\u304e\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u2462\u958b\u767a\u4e2d\u306e\u30bd\u30d5\u30c8\u3067\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u3064\u3044\u3067\u306b\u30e9\u30e0\u30c0\u5f0f\u3082\u4ed5\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\u300c\u53c2\u7167\u300d\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u4e2d\u3005\u624b\u304c\u3068\u3069\u304b\u306a\u3044\u80cc\u4e2d\uff08\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u81ea\u52d5\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\uff09\u304b\u3089\u66f4\u306b\u624b\u3092\u4f38\u3070\u3057\u3066\u75d2\u3044\u3068\u3053\u308d\u3092\u3092\u63bb\u304f\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\n2.\u307e\u305a\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u304b\u3089\n\u666e\u901a\u306b\u7bc4\u56f2\u30d9\u30fc\u30b9for\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30eb\u30fc\u30d7\u3092\u56de\u3057\u3066\u305f\u3068\u3057\u307e\u3059\u3002\n#include <iostream>\n#include <list>\n#include <string>\n\nint main()\n{\n    std::list<std::string> wList{\"Lelouch\", \"Suzaku\", \"C.C.\", \"Karen\", \"Nunnally\"};\n\n//      ---<<< \u901a\u5e38\u306e\u7bc4\u56f2\u30d9\u30fc\u30b9for >>>---\n\n    std::cout << \"Normal range-based for\\n\";\n    for (auto&& wString : wList)\n    {\n        if (wString == \"C.C.\")\n    continue;\n        std::cout << wString << \"\\n\";\n    }\n\n   return 0;\n}\n//\u7d50\u679c\n//Normal range-based for\n//Lelouch\n//Suzaku\n//Karen\n//Nunnally\n\n\u305d\u3057\u3066\u3001\u3042\u308b\u65e5\u3001\u4ed5\u69d8\u5909\u66f4\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u7bc4\u56f2\u30d9\u30fc\u30b9for\u30eb\u30fc\u30d7\u306e\u76f4\u524d\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092\u5b9a\u7fa9\u3057\u3001\u6700\u5f8c\u3067\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u305f\u306e\u3067\u3059\u304c\u3001C.C.\uff08\u3057\u30fc\u3064\u30fc\uff09\u3092\u96a0\u3059\u305f\u3081\u306econtinue\u304c\u90aa\u9b54\u3092\u3057\u307e\u3059\u3002\u66f4\u306b\u3001\u60b2\u3057\u3044\u304b\u306astd::list\u306b\u306foperator[]\u304c\u7121\u3044\u306e\u3067\u3001index\u3067\u30eb\u30fc\u30d7\u3057\u3066\u3082\u53d6\u308a\u51fa\u305b\u307e\u305b\u3093\u3002\n\u3067\u3059\u306e\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n//      ---<<< \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092\u8ffd\u52a0\u3059\u308b\u306e\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u30fb\u30d9\u30fc\u30b9\u306efor\u3078\u5909\u66f4 >>>---\n\n    std::cout << \"\\nI want to Index-number.\\n\";\n    std::size_t wIndex=0;\n    for (auto itr=wList.begin(); itr != wList.end(); ++itr, ++wIndex)\n    {\n        auto& wString=*itr;\n\n        if (wString == \"C.C.\")\n    continue;\n        std::cout << \"(\" << wIndex << \") \" << wString << \"\\n\";\n    }\n//\u7d50\u679c\n//I want to Index-number.\n//(0) Lelouch\n//(1) Suzaku\n//(3) Karen\n//(4) Nunnally\n\n\u7bc4\u56f2\u30d9\u30fc\u30b9for\u306b\u6bd4\u3079\u308b\u3068for\u6587\u304c\u898b\u3065\u3089\u304f\u3066\u60b2\u3057\u3044\u3067\u3059\u3002wIndex\u304c\u30eb\u30fc\u30d7\u5916\u306b\u3042\u308b\u306e\u3082\u6c17\u5206\u60aa\u3044\u3067\u3059\u3002\u3069\u3046\u306b\u3082\u3080\u305a\u75d2\u3044\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001\u5b6b\u306e\u624b\u306e\u51fa\u756a\u3067\u3059\u3002\n//      ---<<< \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u4ed8\u304d\u306e\u7bc4\u56f2\u30d9\u30fc\u30b9for >>>---\n\n    std::cout << \"\\nIndexed range-based for\\n\";\n    for (auto&& wLoop : getRBForIndexer(wList))\n    {\n        auto& wString = wLoop.front();\n\n        if (wString == \"C.C.\")\n    continue;\n        std::cout << \"(\" << wLoop.getIndex() << \") \" << wString << \"\\n\";\n    }\n//\u7d50\u679c\n//Indexed range-based for\n//(0) Lelouch\n//(1) Suzaku\n//(3) Karen\n//(4) Nunnally\n\n\u666e\u901a\u306f\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u8981\u7d20\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u3059\u304c\u3001\u7bc4\u56f2\u30d9\u30fc\u30b9for\u5c02\u7528\u306e\u300c\u30ec\u30f3\u30b8\u300d\u304c\u51fa\u3066\u304f\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u30eb\u30fc\u30d7\u5909\u6570wLoop\u306b\u306f\u73fe\u5728\u306e\u300c\u30ec\u30f3\u30b8\u300d\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u73fe\u5728\u306e\u8981\u7d20\u3092wLoop.front()\u3067\u53d6\u308a\u51fa\u305b\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092wLoop.getIndex()\u3067\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\n\n3.\u6b21\u306b\u7bc4\u56f2\u30d9\u30fc\u30b9for\u30eb\u30fc\u30d7\u306e\u5206\u5272\n\u66f4\u306b\u4ed5\u69d8\u5909\u66f4\u304c\u5165\u308a\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u8981\u3089\u306a\u3044\u304b\u3089\u3001C.C.\u5224\u5b9a\u6210\u529f\u5f8c\u306f\u3001\u7121\u99c4\u306a\u5224\u5b9a\u3092\u7701\u7565\u3057\u3066\u9ad8\u901f\u5316\u3057\u3066\u6b32\u3057\u3044\u305d\u3046\u3067\u3059\u3002\u3064\u3044\u3067\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3082\u5909\u66f4\u3068\u304b\u3002\n\u30eb\u30fc\u30d7\uff11\u3064\u3067\u3084\u308b\u5834\u5408\u306fC.C.\u5f8c\u3092\u793a\u3059\u30d5\u30e9\u30b0\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u69cb\u9020\u7684\u306b\u306f\u3042\u307e\u308a\u826f\u304f\u306a\u3044\u3067\u3059\u3002\u7d20\u76f4\u306b\u30eb\u30fc\u30d7\u3092\u524d\u534a\u3068\u5f8c\u534a\u306b\u5206\u3051\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\u307e\uff5e\u304b\u305b\u3066\uff01\u3000\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n//      ---<<< \u7bc4\u56f2\u30d9\u30fc\u30b9for\u3092\uff12\u3064\u306e\u30eb\u30fc\u30d7\u306b\u5206\u5272 >>>---\n\n    std::cout << \"\\nSeparated range-based for\\n\";\n    std::cout << \"first loop\\n\";\n    auto&& wRBForSeparator = getRBForSeparator(wList);\n    for (auto&& wLoop : wRBForSeparator)\n    {\n        auto& wString = wLoop.front();\n\n        if (wString == \"C.C.\") {\n            wLoop.pop_front();\n    break;\n        }\n        std::cout << \"+++ \" << wString << \"\\n\";\n    }\n    std::cout << \"second loop\\n\";\n    for (auto&& wLoop : wRBForSeparator)\n    {\n        auto& wString = wLoop.front();\n\n        std::cout << \"*** \" << wString << \"\\n\";\n    }\n//\u7d50\u679c\n//Separated range-based for\n//first loop\n//+++ Lelouch\n//+++ Suzaku\n//second loop\n//*** Karen\n//*** Nunnally\n\n\u5b6b\u306e\u624b\u3067\u3067\u3066\u304f\u308b\u30ec\u30f3\u30b8\u3067\u3059\u304c\u3001\u5b9f\u306f\u5143\u306e\u30ec\u30f3\u30b8\u3068\u540c\u3058\u3082\u306e\u3067\u3059\u3002\u3064\u307e\u308a\u3001wLoop\u306fwRBForSeparator\u306e\u53c2\u7167\u306a\u306e\u3067\u3059\u3002\n\u7bc4\u56f2\u30d9\u30fc\u30b9for\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u3066\u3001\u30eb\u30fc\u30d7\u3092\u4e00\u5ea6\u56de\u308b\u5ea6\u306b\n\u2460wRBForSeparator.pop_front()\u3055\u308c\n\u2461wRBForSeparator\u306e\u53c2\u7167\u304cwLoop\u3078\u53d6\u308a\u51fa\u3055\u308c\u308b\n\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3067\u3059\u306e\u3067\u3001C.C.\u304c\u898b\u3064\u304b\u3063\u305f\u6642wLoop\u3060\u3051\u3067\u306a\u304fwRBForSeparator\u3082C.C.\u3092\u6307\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u6b21\u306e\u30eb\u30fc\u30d7\u3067C.C.\u3092\u8868\u793a\u3055\u305b\u306a\u3044\u305f\u3081\u306bwLoop.pop_front()\u3057\u3066\uff11\u3064\u9032\u3081\u3066\u3044\u307e\u3059\u3002\n\u5f53\u7136wLoop.pop_front()\u306e\u4ee3\u308f\u308a\u306bwRBForSeparator.pop_front()\u3068\u3057\u3066\u3082\u540c\u3058\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\u540c\u3058\u3082\u306e\u3067\u3059\u304b\u3089\u3002\n\n4.\u3064\u3044\u3067\u306b\u5206\u5272\u30eb\u30fc\u30d7\uff0b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ed8\u304d\n\u305d\u3057\u3066\u3001\u66f4\u306b\u4ed5\u69d8\u5909\u66f4\u304c\uff0e\uff0e\uff0e\u3084\u3063\u3071\u308a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3082\u8868\u793a\u3057\u305f\u3044\u305d\u3046\u3067\u3059\u3002\n\u6211\u4fad\u3067\u3059\u306d\u3002\u3088\u3063\u3057\u3083\u3053\u3044\u3067\u3059\uff01\n//      ---<<< \u7bc4\u56f2\u30d9\u30fc\u30b9for\u3092\uff12\u3064\u306e\u30eb\u30fc\u30d7\u306b\u5206\u5272\u3057\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u751f\u6210 >>>---\n\n    std::cout << \"\\nSeparated Indexed range-based for\\n\";\n    std::cout << \"first loop\\n\";\n    auto&& wRBForIndexer = getRBForIndexer(wList);\n    for (auto&& wLoop : wRBForIndexer)\n    {\n        auto& wString = wLoop.front();\n\n        if (wString == \"C.C.\") {\n            wLoop.pop_front();\n    break;\n        }\n        std::cout << \"+\" << wLoop.getIndex() << \"+ \" << wString << \"\\n\";\n    }\n    std::cout << \"second loop\\n\";\n    for (auto&& wLoop : wRBForIndexer)\n    {\n        auto& wString = wLoop.front();\n\n        std::cout << \"*\" << wLoop.getIndex() << \"* \" << wString << \"\\n\";\n    }\n//\u7d50\u679c\n//Separated Indexed range-based for\n//first loop\n//+0+ Lelouch\n//+1+ Suzaku\n//second loop\n//*3* Karen\n//*4* Nunnally\n\n\n5.++itr\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u6307\u5b9a\u306e\u30e9\u30e0\u30c0\u5f0f\u3092\u5b9f\u884c\u3059\u308b\n\u3042\u3042\u3001\u57f7\u7b46 \u4ed5\u69d8\u5909\u66f4\u306b\u75b2\u308c\u307e\u3057\u305f\u3002\u597d\u304d\u306b\u3055\u305b\u3066\u4e0b\u3055\u3044\u3002\u79c1\u306fC.C.\u3092\u898b\u305f\u3044\u3067\u3059\u3002\n//      ---<<< \u7bc4\u56f2\u30d9\u30fc\u30b9for\u306e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u51e6\u7406\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30e9\u30e0\u30c0\u5f0f\u5b9f\u884c >>>---\n\n    std::cout << \"\\nNext-processed range-based for\\n\";\n    for (auto&& wLoop : getRBForIndexer(wList,\n        [](std::string const& iString){std::cout<<((iString == \"C.C.\")?\", I love you!\\n\":\"\\n\");}))\n    {\n        auto& wString = wLoop.front();\n        std::cout << \"[\" << wLoop.getIndex() << \"] \" << wString;\n    }\n//\u7d50\u679c\n//Next-processed range-based for\n//[0] Lelouch\n//[1] Suzaku\n//[2] C.C., I love you!\n//[3] Karen\n//[4] Nunnally\n\n\u898b\u3066\u306e\u901a\u308a\u3001\u30e9\u30e0\u30c0\u5f0f\u306f\u30eb\u30fc\u30d7\u306e\u6700\u5f8c\u3067\u5b9f\u884c\u3055\u308c\u3001\u305d\u306e\u56de\u306e\u30eb\u30fc\u30d7\u3067\u4f7f\u308f\u308c\u305f\u8981\u7d20\u304c\u30d0\u30e9\u30e1\u30fc\u30bf\u3067\u6e21\u3055\u308c\u307e\u3059\u3002\n\n6.\u307e\u305f\u5225\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6a5f\u80fd\u306f\u3001Indexer\u3068\u3044\u3046\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092RBForRange\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\ntemplate<class tIterator, class tEnable=void>\nclass Indexer\n{\n    std::size_t mIndex;\npublic:\n    Indexer(tIterator iBegin, tIterator iEnd) : mIndex(0)\n    { }\n    void pop_front()\n    {\n        ++mIndex;\n    }\n    std::size_t getIndex() const\n    {\n        return mIndex;\n    }\n};\n\n\u3053\u308c\u306b\u3088\u308aRBForRange\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30c8\u6642\u306bmIndex\u3092\u521d\u671f\u5316\u3057\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u66f4\u65b0\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001getIndex()\u3067\u8fd4\u5374\u3057\u3066\u307e\u3059\u3002\u5148\u8ff0\u306e2, 4, 5\u3067getIndex()\u3092\u547c\u3073\u51fa\u3057\u3066\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092\u7372\u5f97\u3057\u3066\u307e\u3059\u304c\u3001\u305d\u308c\u304c\u3053\u308c\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001\u30eb\u30fc\u30d7\u5206\u5272\u306fIndexer\u306e\u4ee3\u308f\u308a\u306bDoNothing\u3068\u3044\u3046\u4f55\u3082\u3057\u306a\u3044\u30af\u30e9\u30b9\u3092RBForRange\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3068\u3057\u3066\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\ntemplate<class tIterator, class tEnable=void>\nstruct DoNothing\n{\n    DoNothing(tIterator iBegin, tIterator iEnd) { }\n    void pop_front() { }\n};\n\n\u3064\u307e\u308a\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070Indexer\u3068\u306f\u307e\u305f\u7570\u306a\u308b\u4ed8\u52a0\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\u4f7f\u3044\u65b9\u304c\u5c11\u3057\u5927\u639b\u304b\u308a\u306b\u306a\u308b\u306e\u3067\u3001\u307b\u3093\u3068\u3069\u4f7f\u3046\u6a5f\u4f1a\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3002\n\u5225\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u6642\u306f\u3001\u8ffd\u52a0\u6a5f\u80fd\u3092\u62c5\u3046\u30af\u30e9\u30b9\u30fb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u3053\u308c\u306b\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u578b\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u307e\u3059\u3002\u90e8\u5206\u7279\u6b8a\u5316\u3057\u3084\u3059\u3044\u3088\u3046\u30a4\u30cd\u30fc\u30d6\u30eb\u7528\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u3051\u3066\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306fstd::string\u3092\u8981\u7d20\u3068\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u5fdc\u3057\u3066\u307e\u3059\u306e\u3067\u3001std::string\u7528\u306b\u90e8\u5206\u7279\u6b8a\u5316\u3057\u3066\u6a5f\u80fd\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n//      ---<<< \u30d7\u30e9\u30a4\u30de\u30ea\u30fc >>>---\n\ntemplate<class tIterator, class tEnable=void>\nclass Worker\n{\npublic:\n    Worker(tIterator iBegin, tIterator iEnd) { }\n    void pop_front() { }\n};\n\n//      ---<<< std::string\u3092\u6307\u3059\u30a4\u30c6\u30ec\u30fc\u30bf\u306b\u3064\u3044\u3066\u90e8\u5206\u7279\u6b8a\u5316 >>>---\n\ntemplate<class tIterator>\nclass Worker\n<\n    tIterator,\n    typename std::enable_if<std::is_same<std::string, ValueType<tIterator> >::value>::type\n>\n{\n    tIterator   mBegin;\n    ptrdiff_t   mRemaining;\npublic:\n    Worker(tIterator const& iBegin, tIterator const& iEnd) : \n        mBegin(iBegin),\n        mRemaining(std::distance(iBegin, iEnd)-1)\n    { }\n    void pop_front()\n    {\n        if (*mBegin == \"C.C.\")\n            std::cout << \" : No thank you.\\n\";\n        else\n            std::cout << \"\\n\";\n        ++mBegin;\n        --mRemaining;\n    }\n    ptrdiff_t getRemaining()\n    {\n        return mRemaining;\n    }\n};\n\n\uff08ValueType<>\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u578b\u304b\u3089\u8981\u7d20\u306e\u578b\u3092\u53d6\u308a\u51fa\u3059\u3061\u3087\u3063\u3068\u3057\u305f\u30c4\u30fc\u30eb\u3067\u3059\u3002const\u3068\u304b\u5916\u3057\u305f\u3044\u306e\u3067\u72ec\u81ea\u306b\u4f5c\u308a\u307e\u3057\u305f\u3002\u5f8c\u8ff0\u306e\u30bd\u30fc\u30b9\u306b\u3053\u3063\u305d\u308a\u5fcd\u3070\u305b\u3066\u307e\u3059\u3002\uff09\n\u305d\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066Worker\u3092\u4f7f\u3044\u307e\u3059\u3002\n//      ---<<< Separator\u3084Indexer\u3068\u306f\u307e\u305f\u5225\u306e\u7570\u306a\u308b\u51e6\u7406 >>>---\n\n    std::cout << \"\\nAnother functional range-based for\\n\";\n    for (auto&& wLoop : getRBForRange<Worker>(wList))\n    {\n        auto& wString = wLoop.front();\n\n        std::cout << \"[\" << wLoop.getRemaining() << \"] \" << wString;\n    }\n//\u7d50\u679c\n//Another functional range-based for\n//[4] Lelouch\n//[3] Suzaku\n//[2] C.C. : No thank you.\n//[1] Karen\n//[0] Nunnally\n\n\u3053\u306eWorker\u30af\u30e9\u30b9\u3001\u5b9f\u306f\u5acc\u3044\u3067\u3059\u3002\n\"No thank you.\"\u3092\u3069\u3053\u3067\u8868\u793a\u3057\u3066\u3044\u308b\u306e\u304b\u5206\u304b\u308a\u96e3\u304f\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u4eba\u304c\u82e6\u52b4\u3057\u307e\u3059\u3002\n\u3067\u3059\u306e\u3067\u3001\u3053\u308c\u306f\u3042\u304f\u307e\u3067\u3082\u4f8b\u3067\u3059\u3002\u3053\u3093\u306a\u4f7f\u3044\u65b9\u3057\u305f\u3089\u30c0\u30e1\u3067\u3059\u3002\uff08\"No thank you\"\u3068\u304b\uff0e\uff0e\uff0e\uff09\n\n7.\u305d\u3057\u3066\u30bd\u30fc\u30b9\n\u304a\u5f85\u305f\u305b\u3057\u307e\u3057\u305f\u3002\u4e0b\u8a18\u304c\u305d\u306eRBForRange\u3068\u305d\u306e\u5468\u8fba\u306e\u30bd\u30fc\u30b9\u3067\u3059\u3002RBForRange\u306f\u30b3\u30e1\u30f3\u30c8\u542b\u3081\u3066200\u884c\u3061\u3087\u3063\u3068\u306erbfor_range.h\u3067\u3059\u3002\u307b\u3068\u3093\u3069\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306a\u306e\u3067\u30d8\u30c3\u30c0\u30fb\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3067\u3059\u3002\n\u3042\u3068\u8aac\u660e\u306b\u4f7f\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u306e\u30bd\u30fc\u30b9\u3092\uff11\u3064\u306b\u307e\u3068\u3081\u3066\u307e\u3059\u3002\uff08sample.cpp\uff09\n\u3053\u3053(Gist)\u306b\u3042\u3052\u3066\u307e\u3059\u3002\nMicrosoft Visual Studio 2015 update1\u3068\u3001MinGW 5.2.0\u3067\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u30d3\u30eb\u30c9\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307e\u3059\u3002\n\nmsvc\ncl sample.cpp /EHsc\nsample.exe\n\n\n\nMinGW\ng++ sample.cpp -std=c++11\na.exe\n\n\nboost\u306e\u6280\u8853\u3092\u304b\u306a\u308a\u53c2\u8003\u306b\u3055\u305b\u3066\u8cb0\u3063\u305f\u306e\u3067\u3001rbfor_range.h\u306fBoost Software License, Version 1.0.\u306b\u3066\u516c\u958b\u3057\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u306f\u6539\u9020\u3084\u5546\u7528\u3092\u542b\u3081\u81ea\u7531\u306b\u4f7f\u3063\u3066\u9802\u3044\u3066\u826f\u3044\u3067\u3059\u3002\u30bd\u30fc\u30b9\u3092\u914d\u5e03\u3059\u308b\u3068\u304d\u306e\u307frbfor_range.h\u306b\u3064\u3051\u3066\u3044\u308b\u8457\u4f5c\u6a29\u8868\u793a\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002\uff08\u30d0\u30a4\u30ca\u30ea\u914d\u5e03\u306e\u6642\u306f\u8868\u793a\u4e0d\u8981\uff09\n\u3042\u308b\u304c\u307e\u307e\u306e\u63d0\u4f9b\u3067\u7121\u4fdd\u8a3c\u3067\u3059\u3002\n\n8.\u6700\u5f8c\u306b\nRBForRange\u3092\u7bc4\u56f2\u30d9\u30fc\u30b9for\u5c02\u7528\u3068\u547c\u3093\u3067\u3044\u308b\u306e\u306b\u306f\u7406\u7531\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u306f\u30ec\u30f3\u30b8\u306e\u4e00\u7a2e\u3067\u3059\u306e\u3067\u3001begin(), end()\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u7bc4\u56f2\u30d9\u30fc\u30b9for\u306f\u3053\u308c\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\u6a19\u6e96\u898f\u683c\u3067\u6c7a\u307e\u3063\u3066\u3044\u3066\u3001n2930: Range-based for loop\u306b\u3064\u3044\u3066\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\u3055\u3066\u3001RBForRange\u306ebegin(), end()\u306f\u4e0a\u8a18\u30bd\u30fc\u30b9\u306b\u3042\u308bRangeReferencer\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\nRangeReferencer\u306fRBForRange\u3078\u306e\u53c2\u7167\u3060\u3051\u3092\u6301\u3063\u3066\u307e\u3059\u3002operator++()\u3092\u547c\u3070\u308c\u305f\u3089RBForRange\u306epop_front()\u3092\u547c\u3073\u3001operator!=()\u3092\u547c\u3070\u308c\u305f\u3089RBForRange\u306eempty()\u3092\u547c\u3093\u3067\u53cd\u8ee2\u3057\u3066\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001operator*()\u306fRBForRange\u306e\u53c2\u7167\u3092\u305d\u306e\u307e\u307e\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304c\u3001\u7bc4\u56f2\u30d9\u30fc\u30b9for\u6587\u306ewLoop\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u306e\u3067\u3059\u3002\n\u666e\u901a\u306e\u30ec\u30f3\u30b8\u306ebegin(), end()\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u5374\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306b\u5168\u304f\u50cd\u304d\u304c\u7570\u306a\u308bRangeReferencer\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\u3057\u304b\u3082\u3001begin(), end()\u3069\u3061\u3089\u3082\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u306e\u3067\u3059\u3002\u3068\u3044\u3046\u3053\u3068\u306fend()\u306eoperator++()\u304c\u547c\u3070\u308c\u3066\u3082pop_front()\u3057\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001\u7bc4\u56f2\u30d9\u30fc\u30b9for\u5c02\u7528\u3068\u4f4d\u7f6e\u3065\u3051\u3001begin(), end()\u3092\u76f4\u63a5\u4f7f\u7528\u3059\u308b\u306e\u306f\u7981\u6b62\u3067\u3059\u3002\n\u3067\u304d\u308b\u3082\u306e\u306a\u3089\u3001begin(), end()\u3092private\u306b\u5165\u308c\u3066\u7bc4\u56f2\u30d9\u30fc\u30b9for\u3092\u30d5\u30ec\u30f3\u30c9\u767b\u9332\u3057\u305f\u3044\u3067\u3059\u3002\n\n9.\u6700\u5f8c\u306e\u6700\u5f8c\u306b\n\n\u7279\u306bitr != end()\u3002itr\u304cend()\u3092\u8d8a\u3048\u305f\u3089\u3069\u3046\u3057\u3088\u3046\u3063\u3066\u3002\u7121\u99c4\u306b\u60a9\u307f\u307e\u3059\u3002\n\n\u3053\u306e\u4ef6\u3001\u5bfe\u51e6\u3057\u3066\u307e\u3059\u3002empty()\u306e\u6642\u306bpop_front()\u3057\u305f\u3089\u3001out_of_range\u4f8b\u5916\u3092\u6295\u3052\u3066\u307e\u3059\u3002\u3053\u308c\u3067\u4e00\u5b89\u5fc3\u3002\n\uff08\u5b9f\u306f\u3053\u308c\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u306f\u3067\u304d\u306a\u3044\u3067\u3059\u3002\u30ec\u30f3\u30b8\u3060\u304b\u3089\u3053\u305d\u3067\u304d\u308b\u3053\u3068\u306e\uff11\u3064\u3067\u3059\u3002\uff09\nrange-based for([\u7bc4\u56f2\u30d9\u30fc\u30b9for](http://ramemiso.hateblo.jp/entry/2013/09/03/230251))\u3001\u697d\u306b\u7dba\u9e97\u306b\u66f8\u3051\u308b\u306e\u3067\u826f\u304f\u4f7f\u3063\u3066\u307e\u3059\u3002\n\u3067\u3082\u3001\u4f7f\u3048\u306a\u3044\u30fb\u4f7f\u3044\u96e3\u3044\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u6094\u3057\u3044\u3067\u3059\u3002\n\n0. \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u304c\u6b32\u3057\u3044\u6642\n0. \u30eb\u30fc\u30d7\u3092\u5206\u5272\u3057\u305f\u3044\u6642\n0. \u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4f55\u304b\u3057\u305f\u3044\u51e6\u7406(continue\u6642\u3082\u542b\u3081\u3066)\n\n\u3053\u306e\uff13\u3064\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3057\u305f\u306e\u3067\u516c\u958b\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u4f7f\u7528\u4f8b\u304b\u3089\u3002\n\n```cpp\n#include <iostream>\n#include <list>\n#include <string>\n#include \"rbfor_range.h\"\n\nint main()\n{\n    std::list<std::string> wList{\"Lelouch\", \"Suzaku\", \"C.C.\", \"Karen\", \"Nunnally\"};\n\n\t//   \u2193\u2605\u30eb\u30fc\u30d7\u5206\u5272\u306e\u5f15\u7d99\u304e\u7528\u5909\u6570           \u2193\u2605\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u6642\u306b\u5b9f\u884c\u3057\u305f\u3044\u51e6\u7406\n    auto wRBForIndexer = getRBForIndexer(wList, [](...){std::cout << \"\\n\";});\n\n\t// \u2605\u6700\u521d\u306e\u30eb\u30fc\u30d7\n    for (auto&& wLoop : wRBForIndexer)\n    {        // \u2191\u30eb\u30fc\u30d7\u5909\u6570\n        auto& wString = wLoop.front();\n        if (wString == \"C.C.\") {\n            wLoop.pop_front();\t// \u2190\"C.C.\"\u306e\u6b21\u304b\u3089\u518d\u958b\u3059\u308b\u305f\u3081\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n    break;\n        }\n        //                                \u2193\u2605\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\n        std::cout << \"1st Loop(\" << wLoop.getIndex() << \") \" << wString;\n    }\n\n\t// \u2605\u7d99\u7d9a\u30eb\u30fc\u30d7\n    for (auto&& wLoop : wRBForIndexer)\n    {\n        auto& wString = wLoop.front();\n        std::cout << \"2nd Loop(\" << wLoop.getIndex() << \") \" << wString;\n    }\n    return 0;\n}\n```\n```\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\uff1a\nmsvc2015\n> cl abstract.cpp /EHsc\n> sample.exe\nMinGW 5.2.0\n> g++ abstract.cpp -std=c++11\n> a.exe\n\n\u7d50\u679c\uff1a\n1st Loop(0) Lelouch\n1st Loop(1) Suzaku\n\n2nd Loop(3) Karen\n2nd Loop(4) Nunnally\n```\n\n**rbfor_range.h**\u3068\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092[\u3053\u3053(Gist)](https://gist.github.com/Chironian/b9f060b2bdcd283cb474)\u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\n\n#0.\u7d4c\u7def\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044\u6642\u3001C\u8a00\u8a9e\u6642\u4ee3\u306b\u9006\u623b\u308a\u3057\u3066\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3067\u56de\u3057\u3066operator[]\u3067\u53d6\u308a\u51fa\u3057\u3066\u307e\u3057\u305f\u3002\n\u9577\u3044\u3053\u3068\"\u30d9\u30bf\u30fcC\"er\u3060\u3063\u305f\u304b\u3089\u3068\u3044\u3046\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u69cb\u6587\u304c\u5acc\u3044\u306a\u3093\u3067\u3059\u3088\u3002\u7279\u306b`itr != end()`\u3002`itr`\u304cend()\u3092\u8d8a\u3048\u305f\u3089\u3069\u3046\u3057\u3088\u3046\u3063\u3066\u3002\u7121\u99c4\u306b\u60a9\u307f\u307e\u3059\u3002\n\n\u305d\u3053\u3067\u3001[teratail\u3067\u805e\u3044\u3066\u307f\u305f](https://teratail.com/questions/28543)\u3068\u3053\u308d\u3001\uff13\u3064\u30a2\u30a4\u30c7\u30a2\u3092\u9802\u3051\u307e\u3057\u305f\u3002\n\u2460\u751f\u914d\u5217\u3001std::vector\u3001std::array\u306a\u3089\u3001\u30dd\u30a4\u30f3\u30bf\u306b\u3057\u3066begin()\u3092\u5f15\u3051\u3070OK\u3002\n\u2461[stack overflow\u306b\u826f\u3044\u89e3\u304c\u3042\u308b\u3088](http://stackoverflow.com/questions/10962290/find-position-of-element-in-c11-range-based-for-loop)\n\u2462[boost\u306eadaptor\u3082\u3042\u308b\u3088](http://www.boost.org/doc/libs/1_60_0/libs/range/doc/html/range/reference/adaptors/reference/indexed.html)\n\nlist\u3092\u4f7f\u3046\u4e88\u5b9a\u3082\u3042\u308a\u3001\u7d50\u5c40\u2461\u3068\u2462\u3092\u53c2\u8003\u306b\u3057\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\uff08\u2461\u2462\u3067\u306f\u5206\u5272\u3084\u30e9\u30e0\u30c0\u5f0f\u8ffd\u52a0\u304c\u3067\u304d\u306a\u3044\u3002\uff09\n\n\u7bc4\u56f2\u30d9\u30fc\u30b9for\u5c02\u7528 \u5b6b\u306e\u624b **RBForRange**\u3067\u3059\u3002\uff08\"Range-Based For\" Range\u306e\u7565\u3067\u3059\uff09\n\n#1.\u30a2\u30a4\u30c7\u30a2\n\u57fa\u672c\u7684\u306a\u30a2\u30a4\u30c7\u30a2\u306f\u300c\u30ec\u30f3\u30b8\u300d\u306b\u57fa\u3065\u3044\u3066\u307e\u3059\u3002\u30ec\u30f3\u30b8\u306f\u5c06\u6765\u7684\u306b\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u7f6e\u304d\u63db\u3048\u308b\u3068\u30a6\u30ef\u30b5\u3055\u308c\u3066\u307e\u3059\u3002\nteratail\u3067yohhoy\u3055\u3093\u304b\u3089\u6559\u3048\u3066\u9802\u3044\u305f\u306e\u3067\u3059\u304c\u3001`Iterators Must Go`\u304c\u8a73\u3057\u3044\u3067\u3059\u3002[\u300cIterators Must Go\u300d\u3092\u8a33\u3057\u3066\u307f\u305f](http://faithandbrave.hateblo.jp/entry/20090515/1242376465)\u306e\u4eba\u304c\u8a33\u3057\u3066\u304f\u308c\u3066\u307e\u3059\u3002\u30ec\u30f3\u30b8\u3001\u7d20\u6674\u3089\u3057\u3044\u3067\u3059\u3002\n\n\u3055\u3066\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30fb\u30d9\u30fc\u30b9\u306efor\u6587\u306e\u5834\u5408\u3001\u5f53\u305f\u308a\u524d\u3067\u3059\u304c\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u30eb\u30fc\u30d7\u5909\u6570\u306b\u306a\u3063\u3066\u307e\u3059\u306d\u3002\n\u6a19\u6e96\u306e\u7bc4\u56f2\u30d9\u30fc\u30b9for\u6587\u306b\u306f\u30eb\u30fc\u30d7\u5909\u6570\u304c\u306a\u304f\u76f4\u63a5\u8981\u7d20\u304c\u3067\u3066\u304d\u307e\u3059\u3002\u4fbf\u5229\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u304c\u4ec7\u306b\u306a\u3063\u3066\u4f7f\u3048\u306a\u3044\u6642\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u300c\u7bc4\u56f2\u30d9\u30fc\u30b9for\u306e\u30eb\u30fc\u30d7\u5909\u6570\u300d\u3068\u3057\u3066\u300c\u30ec\u30f3\u30b8\u300d\u3092\u51fa\u529b\u3059\u308bRBForRange\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u2460\u3053\u306e\u300c\u30ec\u30f3\u30b8\u300d\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u6a5f\u80fd\u3092\u4ed5\u8fbc\u3093\u3067\u307e\u3059\u3002\n\u2461\u30eb\u30fc\u30d7\u5909\u6570\u3092\u5de5\u592b\u3057\u3066\u30b9\u30de\u30fc\u30c8\u306b\u5f15\u304d\u7d99\u304e\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u2462\u958b\u767a\u4e2d\u306e\u30bd\u30d5\u30c8\u3067\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u3064\u3044\u3067\u306b\u30e9\u30e0\u30c0\u5f0f\u3082\u4ed5\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\n\u300c\u53c2\u7167\u300d\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u4e2d\u3005\u624b\u304c\u3068\u3069\u304b\u306a\u3044\u80cc\u4e2d\uff08\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u81ea\u52d5\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\uff09\u304b\u3089\u66f4\u306b\u624b\u3092\u4f38\u3070\u3057\u3066\u75d2\u3044\u3068\u3053\u308d\u3092\u3092\u63bb\u304f\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\n#2.\u307e\u305a\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u304b\u3089\n\u666e\u901a\u306b\u7bc4\u56f2\u30d9\u30fc\u30b9for\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30eb\u30fc\u30d7\u3092\u56de\u3057\u3066\u305f\u3068\u3057\u307e\u3059\u3002\n\n```cpp\n#include <iostream>\n#include <list>\n#include <string>\n\nint main()\n{\n    std::list<std::string> wList{\"Lelouch\", \"Suzaku\", \"C.C.\", \"Karen\", \"Nunnally\"};\n\n//      ---<<< \u901a\u5e38\u306e\u7bc4\u56f2\u30d9\u30fc\u30b9for >>>---\n\n    std::cout << \"Normal range-based for\\n\";\n    for (auto&& wString : wList)\n    {\n        if (wString == \"C.C.\")\n    continue;\n        std::cout << wString << \"\\n\";\n    }\n \n   return 0;\n}\n//\u7d50\u679c\n//Normal range-based for\n//Lelouch\n//Suzaku\n//Karen\n//Nunnally\n```\n\n\u305d\u3057\u3066\u3001\u3042\u308b\u65e5\u3001\u4ed5\u69d8\u5909\u66f4\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u7bc4\u56f2\u30d9\u30fc\u30b9for\u30eb\u30fc\u30d7\u306e\u76f4\u524d\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092\u5b9a\u7fa9\u3057\u3001\u6700\u5f8c\u3067\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u305f\u306e\u3067\u3059\u304c\u3001`C.C.`\uff08\u3057\u30fc\u3064\u30fc\uff09\u3092\u96a0\u3059\u305f\u3081\u306econtinue\u304c\u90aa\u9b54\u3092\u3057\u307e\u3059\u3002\u66f4\u306b\u3001\u60b2\u3057\u3044\u304b\u306astd::list\u306b\u306foperator[]\u304c\u7121\u3044\u306e\u3067\u3001index\u3067\u30eb\u30fc\u30d7\u3057\u3066\u3082\u53d6\u308a\u51fa\u305b\u307e\u305b\u3093\u3002\n\u3067\u3059\u306e\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\n```cpp\n//      ---<<< \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092\u8ffd\u52a0\u3059\u308b\u306e\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u30fb\u30d9\u30fc\u30b9\u306efor\u3078\u5909\u66f4 >>>---\n\n    std::cout << \"\\nI want to Index-number.\\n\";\n    std::size_t wIndex=0;\n    for (auto itr=wList.begin(); itr != wList.end(); ++itr, ++wIndex)\n    {\n        auto& wString=*itr;\n\n        if (wString == \"C.C.\")\n    continue;\n        std::cout << \"(\" << wIndex << \") \" << wString << \"\\n\";\n    }\n//\u7d50\u679c\n//I want to Index-number.\n//(0) Lelouch\n//(1) Suzaku\n//(3) Karen\n//(4) Nunnally\n```\n\u7bc4\u56f2\u30d9\u30fc\u30b9for\u306b\u6bd4\u3079\u308b\u3068for\u6587\u304c\u898b\u3065\u3089\u304f\u3066\u60b2\u3057\u3044\u3067\u3059\u3002wIndex\u304c\u30eb\u30fc\u30d7\u5916\u306b\u3042\u308b\u306e\u3082\u6c17\u5206\u60aa\u3044\u3067\u3059\u3002\u3069\u3046\u306b\u3082\u3080\u305a\u75d2\u3044\u3067\u3059\u3002\n\n\u305d\u3053\u3067\u3001\u5b6b\u306e\u624b\u306e\u51fa\u756a\u3067\u3059\u3002\n\n```cpp\n//      ---<<< \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u4ed8\u304d\u306e\u7bc4\u56f2\u30d9\u30fc\u30b9for >>>---\n\n    std::cout << \"\\nIndexed range-based for\\n\";\n    for (auto&& wLoop : getRBForIndexer(wList))\n    {\n        auto& wString = wLoop.front();\n\n        if (wString == \"C.C.\")\n    continue;\n        std::cout << \"(\" << wLoop.getIndex() << \") \" << wString << \"\\n\";\n    }\n//\u7d50\u679c\n//Indexed range-based for\n//(0) Lelouch\n//(1) Suzaku\n//(3) Karen\n//(4) Nunnally\n```\n\u666e\u901a\u306f\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u8981\u7d20\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u3059\u304c\u3001\u7bc4\u56f2\u30d9\u30fc\u30b9for\u5c02\u7528\u306e\u300c\u30ec\u30f3\u30b8\u300d\u304c\u51fa\u3066\u304f\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3064\u307e\u308a\u3001\u30eb\u30fc\u30d7\u5909\u6570wLoop\u306b\u306f\u73fe\u5728\u306e\u300c\u30ec\u30f3\u30b8\u300d\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u73fe\u5728\u306e\u8981\u7d20\u3092`wLoop.front()`\u3067\u53d6\u308a\u51fa\u305b\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092`wLoop.getIndex()`\u3067\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\n\n#3.\u6b21\u306b\u7bc4\u56f2\u30d9\u30fc\u30b9for\u30eb\u30fc\u30d7\u306e\u5206\u5272\n\u66f4\u306b\u4ed5\u69d8\u5909\u66f4\u304c\u5165\u308a\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u8981\u3089\u306a\u3044\u304b\u3089\u3001`C.C.`\u5224\u5b9a\u6210\u529f\u5f8c\u306f\u3001\u7121\u99c4\u306a\u5224\u5b9a\u3092\u7701\u7565\u3057\u3066\u9ad8\u901f\u5316\u3057\u3066\u6b32\u3057\u3044\u305d\u3046\u3067\u3059\u3002\u3064\u3044\u3067\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3082\u5909\u66f4\u3068\u304b\u3002\n\u30eb\u30fc\u30d7\uff11\u3064\u3067\u3084\u308b\u5834\u5408\u306f`C.C.`\u5f8c\u3092\u793a\u3059\u30d5\u30e9\u30b0\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u69cb\u9020\u7684\u306b\u306f\u3042\u307e\u308a\u826f\u304f\u306a\u3044\u3067\u3059\u3002\u7d20\u76f4\u306b\u30eb\u30fc\u30d7\u3092\u524d\u534a\u3068\u5f8c\u534a\u306b\u5206\u3051\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n\u307e\uff5e\u304b\u305b\u3066\uff01\u3000\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```cpp\n//\t\t---<<< \u7bc4\u56f2\u30d9\u30fc\u30b9for\u3092\uff12\u3064\u306e\u30eb\u30fc\u30d7\u306b\u5206\u5272 >>>---\n\n    std::cout << \"\\nSeparated range-based for\\n\";\n    std::cout << \"first loop\\n\";\n    auto&& wRBForSeparator = getRBForSeparator(wList);\n    for (auto&& wLoop : wRBForSeparator)\n    {\n        auto& wString = wLoop.front();\n\n        if (wString == \"C.C.\") {\n            wLoop.pop_front();\n    break;\n        }\n        std::cout << \"+++ \" << wString << \"\\n\";\n    }\n    std::cout << \"second loop\\n\";\n    for (auto&& wLoop : wRBForSeparator)\n    {\n        auto& wString = wLoop.front();\n\n        std::cout << \"*** \" << wString << \"\\n\";\n    }\n//\u7d50\u679c\n//Separated range-based for\n//first loop\n//+++ Lelouch\n//+++ Suzaku\n//second loop\n//*** Karen\n//*** Nunnally\n```\n\u5b6b\u306e\u624b\u3067\u3067\u3066\u304f\u308b\u30ec\u30f3\u30b8\u3067\u3059\u304c\u3001\u5b9f\u306f\u5143\u306e\u30ec\u30f3\u30b8\u3068\u540c\u3058\u3082\u306e\u3067\u3059\u3002\u3064\u307e\u308a\u3001`wLoop`\u306f`wRBForSeparator`\u306e\u53c2\u7167\u306a\u306e\u3067\u3059\u3002\n\n\u7bc4\u56f2\u30d9\u30fc\u30b9for\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u3066\u3001\u30eb\u30fc\u30d7\u3092\u4e00\u5ea6\u56de\u308b\u5ea6\u306b\n\u2460`wRBForSeparator.pop_front()`\u3055\u308c\n\u2461`wRBForSeparator`\u306e\u53c2\u7167\u304c`wLoop`\u3078\u53d6\u308a\u51fa\u3055\u308c\u308b\n\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3067\u3059\u306e\u3067\u3001`C.C.`\u304c\u898b\u3064\u304b\u3063\u305f\u6642`wLoop`\u3060\u3051\u3067\u306a\u304f`wRBForSeparator`\u3082`C.C.`\u3092\u6307\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u6b21\u306e\u30eb\u30fc\u30d7\u3067`C.C.`\u3092\u8868\u793a\u3055\u305b\u306a\u3044\u305f\u3081\u306b`wLoop.pop_front()`\u3057\u3066\uff11\u3064\u9032\u3081\u3066\u3044\u307e\u3059\u3002\n\u5f53\u7136`wLoop.pop_front()`\u306e\u4ee3\u308f\u308a\u306b`wRBForSeparator.pop_front()`\u3068\u3057\u3066\u3082\u540c\u3058\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\u540c\u3058\u3082\u306e\u3067\u3059\u304b\u3089\u3002\n\n#4.\u3064\u3044\u3067\u306b\u5206\u5272\u30eb\u30fc\u30d7\uff0b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ed8\u304d\n\u305d\u3057\u3066\u3001\u66f4\u306b\u4ed5\u69d8\u5909\u66f4\u304c\uff0e\uff0e\uff0e\u3084\u3063\u3071\u308a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3082\u8868\u793a\u3057\u305f\u3044\u305d\u3046\u3067\u3059\u3002\n\u6211\u4fad\u3067\u3059\u306d\u3002\u3088\u3063\u3057\u3083\u3053\u3044\u3067\u3059\uff01\n\n```cpp\n//      ---<<< \u7bc4\u56f2\u30d9\u30fc\u30b9for\u3092\uff12\u3064\u306e\u30eb\u30fc\u30d7\u306b\u5206\u5272\u3057\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u751f\u6210 >>>---\n\n    std::cout << \"\\nSeparated Indexed range-based for\\n\";\n    std::cout << \"first loop\\n\";\n    auto&& wRBForIndexer = getRBForIndexer(wList);\n    for (auto&& wLoop : wRBForIndexer)\n    {\n        auto& wString = wLoop.front();\n\n        if (wString == \"C.C.\") {\n            wLoop.pop_front();\n    break;\n        }\n        std::cout << \"+\" << wLoop.getIndex() << \"+ \" << wString << \"\\n\";\n    }\n    std::cout << \"second loop\\n\";\n    for (auto&& wLoop : wRBForIndexer)\n    {\n        auto& wString = wLoop.front();\n\n        std::cout << \"*\" << wLoop.getIndex() << \"* \" << wString << \"\\n\";\n    }\n//\u7d50\u679c\n//Separated Indexed range-based for\n//first loop\n//+0+ Lelouch\n//+1+ Suzaku\n//second loop\n//*3* Karen\n//*4* Nunnally\n```\n\n#5.++itr\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u6307\u5b9a\u306e\u30e9\u30e0\u30c0\u5f0f\u3092\u5b9f\u884c\u3059\u308b\n\u3042\u3042\u3001~~\u57f7\u7b46~~ \u4ed5\u69d8\u5909\u66f4\u306b\u75b2\u308c\u307e\u3057\u305f\u3002\u597d\u304d\u306b\u3055\u305b\u3066\u4e0b\u3055\u3044\u3002\u79c1\u306f`C.C.`\u3092\u898b\u305f\u3044\u3067\u3059\u3002\n\n```cpp\n//\t\t---<<< \u7bc4\u56f2\u30d9\u30fc\u30b9for\u306e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u51e6\u7406\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30e9\u30e0\u30c0\u5f0f\u5b9f\u884c >>>---\n\n    std::cout << \"\\nNext-processed range-based for\\n\";\n    for (auto&& wLoop : getRBForIndexer(wList,\n        [](std::string const& iString){std::cout<<((iString == \"C.C.\")?\", I love you!\\n\":\"\\n\");}))\n    {\n        auto& wString = wLoop.front();\n        std::cout << \"[\" << wLoop.getIndex() << \"] \" << wString;\n    }\n//\u7d50\u679c\n//Next-processed range-based for\n//[0] Lelouch\n//[1] Suzaku\n//[2] C.C., I love you!\n//[3] Karen\n//[4] Nunnally\n```\n\u898b\u3066\u306e\u901a\u308a\u3001\u30e9\u30e0\u30c0\u5f0f\u306f\u30eb\u30fc\u30d7\u306e\u6700\u5f8c\u3067\u5b9f\u884c\u3055\u308c\u3001\u305d\u306e\u56de\u306e\u30eb\u30fc\u30d7\u3067\u4f7f\u308f\u308c\u305f\u8981\u7d20\u304c\u30d0\u30e9\u30e1\u30fc\u30bf\u3067\u6e21\u3055\u308c\u307e\u3059\u3002\n\n#6.\u307e\u305f\u5225\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6a5f\u80fd\u306f\u3001Indexer\u3068\u3044\u3046\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092RBForRange\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n\n```cpp\ntemplate<class tIterator, class tEnable=void>\nclass Indexer\n{\n    std::size_t mIndex;\npublic:\n    Indexer(tIterator iBegin, tIterator iEnd) : mIndex(0)\n    { }\n    void pop_front()\n    {\n        ++mIndex;\n    }\n    std::size_t getIndex() const\n    {\n        return mIndex;\n    }\n};\n```\n\n\u3053\u308c\u306b\u3088\u308aRBForRange\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30c8\u6642\u306bmIndex\u3092\u521d\u671f\u5316\u3057\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u66f4\u65b0\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001getIndex()\u3067\u8fd4\u5374\u3057\u3066\u307e\u3059\u3002\u5148\u8ff0\u306e2, 4, 5\u3067getIndex()\u3092\u547c\u3073\u51fa\u3057\u3066\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3092\u7372\u5f97\u3057\u3066\u307e\u3059\u304c\u3001\u305d\u308c\u304c\u3053\u308c\u3067\u3059\u3002\n\n\u305d\u3057\u3066\u3001\u30eb\u30fc\u30d7\u5206\u5272\u306fIndexer\u306e\u4ee3\u308f\u308a\u306bDoNothing\u3068\u3044\u3046\u4f55\u3082\u3057\u306a\u3044\u30af\u30e9\u30b9\u3092RBForRange\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3068\u3057\u3066\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```cpp\ntemplate<class tIterator, class tEnable=void>\nstruct DoNothing\n{\n\tDoNothing(tIterator iBegin, tIterator iEnd) { }\n    void pop_front() { }\n};\n```\n\n\u3064\u307e\u308a\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070Indexer\u3068\u306f\u307e\u305f\u7570\u306a\u308b\u4ed8\u52a0\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\u4f7f\u3044\u65b9\u304c\u5c11\u3057\u5927\u639b\u304b\u308a\u306b\u306a\u308b\u306e\u3067\u3001\u307b\u3093\u3068\u3069\u4f7f\u3046\u6a5f\u4f1a\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3002\n\n\u5225\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u6642\u306f\u3001\u8ffd\u52a0\u6a5f\u80fd\u3092\u62c5\u3046\u30af\u30e9\u30b9\u30fb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u3053\u308c\u306b\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u578b\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u307e\u3059\u3002\u90e8\u5206\u7279\u6b8a\u5316\u3057\u3084\u3059\u3044\u3088\u3046\u30a4\u30cd\u30fc\u30d6\u30eb\u7528\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u3051\u3066\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306fstd::string\u3092\u8981\u7d20\u3068\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u5fdc\u3057\u3066\u307e\u3059\u306e\u3067\u3001std::string\u7528\u306b\u90e8\u5206\u7279\u6b8a\u5316\u3057\u3066\u6a5f\u80fd\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```cpp\n//\t\t---<<< \u30d7\u30e9\u30a4\u30de\u30ea\u30fc >>>---\n\ntemplate<class tIterator, class tEnable=void>\nclass Worker\n{\npublic:\n    Worker(tIterator iBegin, tIterator iEnd) { }\n    void pop_front() { }\n};\n\n//\t\t---<<< std::string\u3092\u6307\u3059\u30a4\u30c6\u30ec\u30fc\u30bf\u306b\u3064\u3044\u3066\u90e8\u5206\u7279\u6b8a\u5316 >>>---\n\ntemplate<class tIterator>\nclass Worker\n<\n    tIterator,\n\ttypename std::enable_if<std::is_same<std::string, ValueType<tIterator> >::value>::type\n>\n{\n    tIterator   mBegin;\n    ptrdiff_t   mRemaining;\npublic:\n    Worker(tIterator const& iBegin, tIterator const& iEnd) : \n        mBegin(iBegin),\n        mRemaining(std::distance(iBegin, iEnd)-1)\n    { }\n    void pop_front()\n    {\n        if (*mBegin == \"C.C.\")\n            std::cout << \" : No thank you.\\n\";\n        else\n            std::cout << \"\\n\";\n        ++mBegin;\n        --mRemaining;\n    }\n    ptrdiff_t getRemaining()\n    {\n        return mRemaining;\n    }\n};\n```\n\uff08ValueType<>\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u578b\u304b\u3089\u8981\u7d20\u306e\u578b\u3092\u53d6\u308a\u51fa\u3059\u3061\u3087\u3063\u3068\u3057\u305f\u30c4\u30fc\u30eb\u3067\u3059\u3002const\u3068\u304b\u5916\u3057\u305f\u3044\u306e\u3067\u72ec\u81ea\u306b\u4f5c\u308a\u307e\u3057\u305f\u3002\u5f8c\u8ff0\u306e\u30bd\u30fc\u30b9\u306b\u3053\u3063\u305d\u308a\u5fcd\u3070\u305b\u3066\u307e\u3059\u3002\uff09\n\n\u305d\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066Worker\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```cpp\n//\t\t---<<< Separator\u3084Indexer\u3068\u306f\u307e\u305f\u5225\u306e\u7570\u306a\u308b\u51e6\u7406 >>>---\n\n    std::cout << \"\\nAnother functional range-based for\\n\";\n    for (auto&& wLoop : getRBForRange<Worker>(wList))\n    {\n        auto& wString = wLoop.front();\n\n        std::cout << \"[\" << wLoop.getRemaining() << \"] \" << wString;\n    }\n//\u7d50\u679c\n//Another functional range-based for\n//[4] Lelouch\n//[3] Suzaku\n//[2] C.C. : No thank you.\n//[1] Karen\n//[0] Nunnally\n```\n\u3053\u306eWorker\u30af\u30e9\u30b9\u3001\u5b9f\u306f\u5acc\u3044\u3067\u3059\u3002\n\"No thank you.\"\u3092\u3069\u3053\u3067\u8868\u793a\u3057\u3066\u3044\u308b\u306e\u304b\u5206\u304b\u308a\u96e3\u304f\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u4eba\u304c\u82e6\u52b4\u3057\u307e\u3059\u3002\n\u3067\u3059\u306e\u3067\u3001\u3053\u308c\u306f\u3042\u304f\u307e\u3067\u3082\u4f8b\u3067\u3059\u3002\u3053\u3093\u306a\u4f7f\u3044\u65b9\u3057\u305f\u3089\u30c0\u30e1\u3067\u3059\u3002\uff08\"No thank you\"\u3068\u304b\uff0e\uff0e\uff0e\uff09\n\n#7.\u305d\u3057\u3066\u30bd\u30fc\u30b9\n\u304a\u5f85\u305f\u305b\u3057\u307e\u3057\u305f\u3002\u4e0b\u8a18\u304c\u305d\u306eRBForRange\u3068\u305d\u306e\u5468\u8fba\u306e\u30bd\u30fc\u30b9\u3067\u3059\u3002RBForRange\u306f\u30b3\u30e1\u30f3\u30c8\u542b\u3081\u3066200\u884c\u3061\u3087\u3063\u3068\u306e**rbfor_range.h**\u3067\u3059\u3002\u307b\u3068\u3093\u3069\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306a\u306e\u3067\u30d8\u30c3\u30c0\u30fb\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3067\u3059\u3002\n\u3042\u3068\u8aac\u660e\u306b\u4f7f\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u306e\u30bd\u30fc\u30b9\u3092\uff11\u3064\u306b\u307e\u3068\u3081\u3066\u307e\u3059\u3002\uff08**sample.cpp**\uff09\n\n[\u3053\u3053(Gist)\u306b\u3042\u3052\u3066\u307e\u3059\u3002](https://gist.github.com/Chironian/b9f060b2bdcd283cb474)\n\nMicrosoft Visual Studio 2015 update1\u3068\u3001MinGW 5.2.0\u3067\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u30d3\u30eb\u30c9\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307e\u3059\u3002\n\n```:msvc\ncl sample.cpp /EHsc\nsample.exe\n```\n\n```:MinGW\ng++ sample.cpp -std=c++11\na.exe\n```\n\nboost\u306e\u6280\u8853\u3092\u304b\u306a\u308a\u53c2\u8003\u306b\u3055\u305b\u3066\u8cb0\u3063\u305f\u306e\u3067\u3001**rbfor_range.h**\u306f**Boost Software License, Version 1.0.**\u306b\u3066\u516c\u958b\u3057\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u306f\u6539\u9020\u3084\u5546\u7528\u3092\u542b\u3081\u81ea\u7531\u306b\u4f7f\u3063\u3066\u9802\u3044\u3066\u826f\u3044\u3067\u3059\u3002\u30bd\u30fc\u30b9\u3092\u914d\u5e03\u3059\u308b\u3068\u304d\u306e\u307frbfor_range.h\u306b\u3064\u3051\u3066\u3044\u308b\u8457\u4f5c\u6a29\u8868\u793a\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002\uff08\u30d0\u30a4\u30ca\u30ea\u914d\u5e03\u306e\u6642\u306f\u8868\u793a\u4e0d\u8981\uff09\n\u3042\u308b\u304c\u307e\u307e\u306e\u63d0\u4f9b\u3067\u7121\u4fdd\u8a3c\u3067\u3059\u3002\n\n#8.\u6700\u5f8c\u306b\nRBForRange\u3092\u7bc4\u56f2\u30d9\u30fc\u30b9for\u5c02\u7528\u3068\u547c\u3093\u3067\u3044\u308b\u306e\u306b\u306f\u7406\u7531\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u306f\u30ec\u30f3\u30b8\u306e\u4e00\u7a2e\u3067\u3059\u306e\u3067\u3001begin(), end()\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u7bc4\u56f2\u30d9\u30fc\u30b9for\u306f\u3053\u308c\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\u6a19\u6e96\u898f\u683c\u3067\u6c7a\u307e\u3063\u3066\u3044\u3066\u3001[n2930: Range-based for loop\u306b\u3064\u3044\u3066](http://cpplover.blogspot.jp/2009/08/n2930-range-based-for-loop.html)\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3055\u3066\u3001RBForRange\u306ebegin(), end()\u306f\u4e0a\u8a18\u30bd\u30fc\u30b9\u306b\u3042\u308bRangeReferencer\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\nRangeReferencer\u306fRBForRange\u3078\u306e\u53c2\u7167\u3060\u3051\u3092\u6301\u3063\u3066\u307e\u3059\u3002operator++()\u3092\u547c\u3070\u308c\u305f\u3089RBForRange\u306epop_front()\u3092\u547c\u3073\u3001operator!=()\u3092\u547c\u3070\u308c\u305f\u3089RBForRange\u306eempty()\u3092\u547c\u3093\u3067\u53cd\u8ee2\u3057\u3066\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001operator*()\u306fRBForRange\u306e\u53c2\u7167\u3092\u305d\u306e\u307e\u307e\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304c\u3001\u7bc4\u56f2\u30d9\u30fc\u30b9for\u6587\u306ewLoop\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u306e\u3067\u3059\u3002\n\n\u666e\u901a\u306e\u30ec\u30f3\u30b8\u306ebegin(), end()\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u5374\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306b\u5168\u304f\u50cd\u304d\u304c\u7570\u306a\u308bRangeReferencer\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\u3057\u304b\u3082\u3001begin(), end()\u3069\u3061\u3089\u3082\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u306e\u3067\u3059\u3002\u3068\u3044\u3046\u3053\u3068\u306fend()\u306eoperator++()\u304c\u547c\u3070\u308c\u3066\u3082pop_front()\u3057\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001\u7bc4\u56f2\u30d9\u30fc\u30b9for\u5c02\u7528\u3068\u4f4d\u7f6e\u3065\u3051\u3001begin(), end()\u3092\u76f4\u63a5\u4f7f\u7528\u3059\u308b\u306e\u306f\u7981\u6b62\u3067\u3059\u3002\n\u3067\u304d\u308b\u3082\u306e\u306a\u3089\u3001begin(), end()\u3092private\u306b\u5165\u308c\u3066\u7bc4\u56f2\u30d9\u30fc\u30b9for\u3092\u30d5\u30ec\u30f3\u30c9\u767b\u9332\u3057\u305f\u3044\u3067\u3059\u3002\n\n#9.\u6700\u5f8c\u306e\u6700\u5f8c\u306b\n> \u7279\u306b`itr != end()`\u3002`itr`\u304cend()\u3092\u8d8a\u3048\u305f\u3089\u3069\u3046\u3057\u3088\u3046\u3063\u3066\u3002\u7121\u99c4\u306b\u60a9\u307f\u307e\u3059\u3002\n\n\u3053\u306e\u4ef6\u3001\u5bfe\u51e6\u3057\u3066\u307e\u3059\u3002empty()\u306e\u6642\u306bpop_front()\u3057\u305f\u3089\u3001out_of_range\u4f8b\u5916\u3092\u6295\u3052\u3066\u307e\u3059\u3002\u3053\u308c\u3067\u4e00\u5b89\u5fc3\u3002\n\uff08\u5b9f\u306f\u3053\u308c\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u306f\u3067\u304d\u306a\u3044\u3067\u3059\u3002\u30ec\u30f3\u30b8\u3060\u304b\u3089\u3053\u305d\u3067\u304d\u308b\u3053\u3068\u306e\uff11\u3064\u3067\u3059\u3002\uff09\n"}