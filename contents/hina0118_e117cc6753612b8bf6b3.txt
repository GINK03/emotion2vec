{"tags": ["Groovy2.1.7", "gradle1.8"], "context": " More than 1 year has passed since last update.JPA\uff08Hibernate\uff09\u3092\u4f7f\u3063\u3066\u5168\u6587\u691c\u7d22\u3092\u3084\u3063\u3066\u307f\u308b\u3002\nHibernate-Search\u3067\u6c38\u7d9a\u5316\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5168\u6587\u691c\u7d22\u3059\u308b\u3002\n\nbuild.gradle\n\u305d\u306e\u307e\u307e\u3060\u3068META-INF/persistence.xml\u304c\u8aad\u307f\u8fbc\u307e\u308c\u306a\u3044\u306e\u3067resources\u306e\u51fa\u529b\u5148\u3092build/classes/main\u306b\u3057\u3066\u304a\u304f\u3002\n\nbuild.gradle\napply plugin: 'idea'\napply plugin: 'groovy'\napply plugin: 'application'\n\ndef defaultEncoding = 'UTF-8'\ndef jdkVersion = '1.7'\n\nsourceCompatibility = jdkVersion\ntargetCompatibility = jdkVersion\n\nmainClassName = 'JpaLucene'\n\nrepositories {\n    mavenCentral()\n}\n\nsourceSets {\n    main {\n        output.resourcesDir = 'build/classes/main'\n    }\n}\n\ndependencies {\n    compile 'org.codehaus.groovy:groovy-all:2.1.7'\n    compile 'org.hibernate:hibernate-entitymanager:4.2.6.Final'\n    compile 'org.hibernate:hibernate-search:4.4.0.Final'\n    compile 'org.slf4j:slf4j-simple:1.7.5'\n    compile 'javassist:javassist:3.12.1.GA'\n    compile 'com.h2database:h2:1.3.173'\n    compile 'com.google.inject:guice:3.0'\n    compile 'com.google.inject.extensions:guice-persist:3.0'\n}\n\ncompileGroovy {\n    groovyOptions.encoding = defaultEncoding\n}\n\nidea {\n    project {\n        jdkName = jdkVersion\n        languageLevel = jdkVersion\n    }\n}\n\n\n\npersistence.xml\nsrc/main/resources\u306bMETA-INF/persistence.xml\u3092\u4f5c\u308b\u3002\nhibernate.search.default.indexBase\u306fHibernate-Search\u7528\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u5168\u6587\u691c\u7d22\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u4fdd\u5b58\u5148\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u3053\u3053\u3067\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u76f4\u4e0b\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\npersistence.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.0\"\n             xmlns=\"http://java.sun.com/xml/ns/persistence\"\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n             xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n                       http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n    <persistence-unit name=\"example\" transaction-type=\"RESOURCE_LOCAL\">\n        <provider>org.hibernate.ejb.HibernatePersistence</provider>\n        <properties>\n            <property name=\"javax.persistence.jdbc.driver\" value=\"org.h2.Driver\" />\n            <property name=\"javax.persistence.jdbc.url\" value=\"jdbc:h2:mem:example\" />\n            <property name=\"javax.persistence.jdbc.user\" value=\"sa\" />\n            <property name=\"javax.persistence.jdbc.password\" value=\"\" />\n            <property name=\"hibernate.show_sql\" value=\"true\" />\n            <property name=\"hibernate.hbm2ddl.auto\" value=\"update\" />\n            <property name=\"hibernate.search.default.indexBase\" value=\"indexes\" />\n        </properties>\n    </persistence-unit>\n</persistence>\n\n\n\n\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306fGuice-Persist\u3067\u7ba1\u7406\u3059\u308b\u3002EntityManager\u3058\u3083\u306a\u304f\u3066Session\u3092\u4f7f\u3046\u5834\u5408\u306fWarp-Persist\u3092\u4f7f\u3046\u3002\u3042\u3068Session\u3067\u3084\u308b\u3068Hibernate-Configuration\u3067XML\u30ec\u30b9\u306b\u3067\u304d\u308b\u3002\n\u51e6\u7406\u306e\u6700\u5f8c\u306b\u30c7\u30fc\u30bf\u3092\u5168\u524a\u9664\u3057\u3066\u3044\u308b\u306e\u306f\u30a4\u30f3\u30e1\u30e2\u30ea\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5dee\u7570\u304c\u51fa\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3002\u51e6\u7406\u958b\u59cb\u6642\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u518d\u4f5c\u6210\u3092\u3057\u3066\u3082\u3044\u3044\u3060\u308d\u3046\u3051\u3069\u306a\u3093\u304b\u304b\u3063\u3053\u60aa\u3044\u3002\nPersistService#start\u3092\u5b9f\u884c\u3057\u305f\u3089\u304d\u3061\u3093\u3068PersistService#stop\u3092\u547c\u3073\u51fa\u3057\u3066\u3042\u3052\u306a\u3044\u3068Hibernate-Search\u3067\u4f5c\u6210\u3055\u308c\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u89e3\u653e\u3055\u308c\u305a\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7d42\u4e86\u3057\u306a\u3044\u306e\u3067\u6ce8\u610f\u3002\n\nJpaLucene.groovy\nimport com.google.inject.*\nimport com.google.inject.persist.*\nimport com.google.inject.persist.jpa.JpaPersistModule\nimport org.hibernate.search.annotations.*\nimport org.hibernate.search.jpa.*\n\nimport javax.inject.Inject\nimport javax.persistence.*\n\nclass JpaLucene {\n    @Inject BookDao bookDao\n    @Inject AuthorDao authorDao\n    @Inject BookSearcher bookSearcher\n\n    def storeAndSearch() {\n        // store some books\n        def names1 = ['Dierk', 'Guillaume', 'Jon', 'Andy', 'Paul']\n        def names2 = ['Craig', 'Groovy']\n        def authors1 = authorDao.storeAuthors(names1)\n        def authors2 = authorDao.storeAuthors(names2)\n        bookDao.store(new Book(authors:authors1, title:'Groovy in Action'))\n        bookDao.store(new Book(authors:authors2, title:'Spring in Action'))\n\n        // find some books\n        bookSearcher.search('Groovy')\n\n        // delete all books\n        bookDao.deleteAll()\n        authorDao.deleteAll()   // BookDao#deleteAll\u3067\u5168\u90e8\u524a\u9664\u3055\u308c\u308b\u306e\u3067\u547c\u3070\u306a\u304f\u3066\u3082\u3044\u3044\n    }\n\n    def static main(args) {\n        def injector = Guice.createInjector(new AbstractModule() {\n            @Override\n            protected void configure() {\n                install(new JpaPersistModule('example'))\n                bind(JpaLuceneInitializer).asEagerSingleton()\n            }\n        })\n        def initializer = injector.getInstance(JpaLuceneInitializer)\n        def jpaLucene = injector.getInstance(JpaLucene)\n        jpaLucene.storeAndSearch()\n        initializer.stop()\n    }\n}\n\n@Entity\n@Indexed\nclass Book {\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    public Long id\n    @OneToMany(cascade=CascadeType.ALL)\n    @IndexedEmbedded\n    public Set<Author> authors\n    @Field\n    public String title\n    String toString() { \"$title by ${authors.name.join(', ')}\" }\n}\n\n@Entity\n@Indexed\nclass Author {\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    public Long id\n    @Field\n    public String name\n}\n\nclass BookDao {\n    @Inject\n    EntityManager em\n\n    @Transactional\n    def store(book) {\n        em.persist(book)\n    }\n\n    @Transactional\n    def deleteAll() {\n        em.createQuery('from Book', Book).resultList.each {\n            em.remove(it)\n        }\n    }\n}\n\nclass AuthorDao {\n    @Inject\n    EntityManager em\n\n    @Transactional\n    def storeAuthors(authors) {\n        Set result = []\n        authors.each{ def a = new Author(name:it); em.persist(a); result << a }\n        result\n    }\n\n    @Transactional\n    def deleteAll() {\n        em.createQuery('from Author', Author).resultList.each {\n            em.remove(it)\n        }\n    }\n}\n\nclass BookSearcher {\n    FullTextEntityManager fullTextEntityManager\n\n    @Inject\n    BookSearcher(EntityManager em) {\n        fullTextEntityManager = Search.getFullTextEntityManager(em)\n    }\n\n    def search(value) {\n        def qb = fullTextEntityManager.searchFactory.buildQueryBuilder().forEntity(Book).get()\n        def query = qb.keyword().onFields('title', 'authors.name').matching(value).createQuery()\n        def books = fullTextEntityManager.createFullTextQuery(query, Book).resultList\n        println 'Found ' + books.size() + ' books:'\n        books.each { println it }\n    }\n}\n\nclass JpaLuceneInitializer {\n    PersistService service\n\n    @Inject\n    JpaLuceneInitializer(PersistService service) {\n        this.service = service\n        this.service.start()\n    }\n\n    def stop() {\n        service.stop()\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u30bf\u30a4\u30c8\u30eb\u3068\u8457\u8005\u306b\u300cGroovy\u300d\u3092\u542b\u3080\u30c7\u30fc\u30bf\uff08\u7528\u610f\u3057\u305f\u30c7\u30fc\u30bf2\u4ef6\u3068\u3082\uff09\u304c\u691c\u7d22\u3055\u308c\u3066\u3044\u308b\u3002\n10 25, 2013 11:53:16 \u5348\u5f8c org.hibernate.annotations.common.reflection.java.JavaReflectionManager <clinit>\nINFO: HCANN000001: Hibernate Commons Annotations {4.0.4.Final}\n10 25, 2013 11:53:16 \u5348\u5f8c org.hibernate.Version logVersion\nINFO: HHH000412: Hibernate Core {4.2.6.Final}\n10 25, 2013 11:53:16 \u5348\u5f8c org.hibernate.cfg.Environment <clinit>\nINFO: HHH000206: hibernate.properties not found\n10 25, 2013 11:53:16 \u5348\u5f8c org.hibernate.cfg.Environment buildBytecodeProvider\nINFO: HHH000021: Bytecode provider name : javassist\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000402: Using Hibernate built-in connection pool (not for production use!)\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000115: Hibernate connection pool size: 20\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000006: Autocommit mode: true\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:example]\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.dialect.Dialect <init>\nINFO: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect\n10 25, 2013 11:53:18 \u5348\u5f8c org.hibernate.engine.transaction.internal.TransactionFactoryInitiator initiateService\nINFO: HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory\n10 25, 2013 11:53:18 \u5348\u5f8c org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory <init>\nINFO: HHH000397: Using ASTQueryTranslatorFactory\n10 25, 2013 11:53:18 \u5348\u5f8c org.hibernate.search.Version <clinit>\nINFO: HSEARCH000034: Hibernate Search 4.4.0.Final\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.SchemaUpdate execute\nINFO: HHH000228: Running hbm2ddl schema update\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.SchemaUpdate execute\nINFO: HHH000102: Fetching database metadata\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.SchemaUpdate execute\nINFO: HHH000396: Updating schema\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book_Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book_Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book_Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.SchemaUpdate execute\nINFO: HHH000232: Schema update complete\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.search.impl.ConfigContext getLuceneMatchVersion\nWARN: HSEARCH000075: Configuration setting hibernate.search.lucene_version was not specified, using LUCENE_CURRENT.\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Book (id, title) values (null, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book (id, title) values (null, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: select this_.id as id1_1_0_, this_.title as title2_1_0_ from Book this_ where (this_.id in (?, ?))\nFound 2 books:\nGroovy in Action by Andy, Paul, Jon, Dierk, Guillaume\nSpring in Action by Craig, Groovy\nHibernate: select book0_.id as id1_1_, book0_.title as title2_1_ from Book book0_\nHibernate: delete from Book_Author where Book_id=?\nHibernate: delete from Book_Author where Book_id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Book where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Book where id=?\nHibernate: select author0_.id as id1_0_, author0_.name as name2_0_ from Author author0_\n10 25, 2013 11:53:26 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl stop\nINFO: HHH000030: Cleaning up connection pool [jdbc:h2:mem:example]\n\nJPA\uff08Hibernate\uff09\u3092\u4f7f\u3063\u3066\u5168\u6587\u691c\u7d22\u3092\u3084\u3063\u3066\u307f\u308b\u3002\nHibernate-Search\u3067\u6c38\u7d9a\u5316\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5168\u6587\u691c\u7d22\u3059\u308b\u3002\n\n## build.gradle\n\n\u305d\u306e\u307e\u307e\u3060\u3068META-INF/persistence.xml\u304c\u8aad\u307f\u8fbc\u307e\u308c\u306a\u3044\u306e\u3067resources\u306e\u51fa\u529b\u5148\u3092build/classes/main\u306b\u3057\u3066\u304a\u304f\u3002\n\n```groovy:build.gradle\napply plugin: 'idea'\napply plugin: 'groovy'\napply plugin: 'application'\n\ndef defaultEncoding = 'UTF-8'\ndef jdkVersion = '1.7'\n\nsourceCompatibility = jdkVersion\ntargetCompatibility = jdkVersion\n\nmainClassName = 'JpaLucene'\n\nrepositories {\n    mavenCentral()\n}\n\nsourceSets {\n    main {\n        output.resourcesDir = 'build/classes/main'\n    }\n}\n\ndependencies {\n    compile 'org.codehaus.groovy:groovy-all:2.1.7'\n    compile 'org.hibernate:hibernate-entitymanager:4.2.6.Final'\n    compile 'org.hibernate:hibernate-search:4.4.0.Final'\n    compile 'org.slf4j:slf4j-simple:1.7.5'\n    compile 'javassist:javassist:3.12.1.GA'\n    compile 'com.h2database:h2:1.3.173'\n    compile 'com.google.inject:guice:3.0'\n    compile 'com.google.inject.extensions:guice-persist:3.0'\n}\n\ncompileGroovy {\n    groovyOptions.encoding = defaultEncoding\n}\n\nidea {\n    project {\n        jdkName = jdkVersion\n        languageLevel = jdkVersion\n    }\n}\n```\n\n## persistence.xml\n\nsrc/main/resources\u306bMETA-INF/persistence.xml\u3092\u4f5c\u308b\u3002\nhibernate.search.default.indexBase\u306fHibernate-Search\u7528\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u5168\u6587\u691c\u7d22\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u4fdd\u5b58\u5148\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u3053\u3053\u3067\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u76f4\u4e0b\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\n```xml:persistence.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.0\"\n             xmlns=\"http://java.sun.com/xml/ns/persistence\"\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n             xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n                       http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n    <persistence-unit name=\"example\" transaction-type=\"RESOURCE_LOCAL\">\n        <provider>org.hibernate.ejb.HibernatePersistence</provider>\n        <properties>\n            <property name=\"javax.persistence.jdbc.driver\" value=\"org.h2.Driver\" />\n            <property name=\"javax.persistence.jdbc.url\" value=\"jdbc:h2:mem:example\" />\n            <property name=\"javax.persistence.jdbc.user\" value=\"sa\" />\n            <property name=\"javax.persistence.jdbc.password\" value=\"\" />\n            <property name=\"hibernate.show_sql\" value=\"true\" />\n            <property name=\"hibernate.hbm2ddl.auto\" value=\"update\" />\n            <property name=\"hibernate.search.default.indexBase\" value=\"indexes\" />\n        </properties>\n    </persistence-unit>\n</persistence>\n```\n\n## \u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306fGuice-Persist\u3067\u7ba1\u7406\u3059\u308b\u3002EntityManager\u3058\u3083\u306a\u304f\u3066Session\u3092\u4f7f\u3046\u5834\u5408\u306fWarp-Persist\u3092\u4f7f\u3046\u3002\u3042\u3068Session\u3067\u3084\u308b\u3068Hibernate-Configuration\u3067XML\u30ec\u30b9\u306b\u3067\u304d\u308b\u3002\n\u51e6\u7406\u306e\u6700\u5f8c\u306b\u30c7\u30fc\u30bf\u3092\u5168\u524a\u9664\u3057\u3066\u3044\u308b\u306e\u306f\u30a4\u30f3\u30e1\u30e2\u30ea\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5dee\u7570\u304c\u51fa\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3002\u51e6\u7406\u958b\u59cb\u6642\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u518d\u4f5c\u6210\u3092\u3057\u3066\u3082\u3044\u3044\u3060\u308d\u3046\u3051\u3069\u306a\u3093\u304b\u304b\u3063\u3053\u60aa\u3044\u3002\nPersistService#start\u3092\u5b9f\u884c\u3057\u305f\u3089\u304d\u3061\u3093\u3068PersistService#stop\u3092\u547c\u3073\u51fa\u3057\u3066\u3042\u3052\u306a\u3044\u3068Hibernate-Search\u3067\u4f5c\u6210\u3055\u308c\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u89e3\u653e\u3055\u308c\u305a\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7d42\u4e86\u3057\u306a\u3044\u306e\u3067\u6ce8\u610f\u3002\n\n```groovy:JpaLucene.groovy\nimport com.google.inject.*\nimport com.google.inject.persist.*\nimport com.google.inject.persist.jpa.JpaPersistModule\nimport org.hibernate.search.annotations.*\nimport org.hibernate.search.jpa.*\n\nimport javax.inject.Inject\nimport javax.persistence.*\n\nclass JpaLucene {\n    @Inject BookDao bookDao\n    @Inject AuthorDao authorDao\n    @Inject BookSearcher bookSearcher\n\n    def storeAndSearch() {\n        // store some books\n        def names1 = ['Dierk', 'Guillaume', 'Jon', 'Andy', 'Paul']\n        def names2 = ['Craig', 'Groovy']\n        def authors1 = authorDao.storeAuthors(names1)\n        def authors2 = authorDao.storeAuthors(names2)\n        bookDao.store(new Book(authors:authors1, title:'Groovy in Action'))\n        bookDao.store(new Book(authors:authors2, title:'Spring in Action'))\n\n        // find some books\n        bookSearcher.search('Groovy')\n\n        // delete all books\n        bookDao.deleteAll()\n        authorDao.deleteAll()   // BookDao#deleteAll\u3067\u5168\u90e8\u524a\u9664\u3055\u308c\u308b\u306e\u3067\u547c\u3070\u306a\u304f\u3066\u3082\u3044\u3044\n    }\n\n    def static main(args) {\n        def injector = Guice.createInjector(new AbstractModule() {\n            @Override\n            protected void configure() {\n                install(new JpaPersistModule('example'))\n                bind(JpaLuceneInitializer).asEagerSingleton()\n            }\n        })\n        def initializer = injector.getInstance(JpaLuceneInitializer)\n        def jpaLucene = injector.getInstance(JpaLucene)\n        jpaLucene.storeAndSearch()\n        initializer.stop()\n    }\n}\n\n@Entity\n@Indexed\nclass Book {\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    public Long id\n    @OneToMany(cascade=CascadeType.ALL)\n    @IndexedEmbedded\n    public Set<Author> authors\n    @Field\n    public String title\n    String toString() { \"$title by ${authors.name.join(', ')}\" }\n}\n\n@Entity\n@Indexed\nclass Author {\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    public Long id\n    @Field\n    public String name\n}\n\nclass BookDao {\n    @Inject\n    EntityManager em\n\n    @Transactional\n    def store(book) {\n        em.persist(book)\n    }\n\n    @Transactional\n    def deleteAll() {\n        em.createQuery('from Book', Book).resultList.each {\n            em.remove(it)\n        }\n    }\n}\n\nclass AuthorDao {\n    @Inject\n    EntityManager em\n\n    @Transactional\n    def storeAuthors(authors) {\n        Set result = []\n        authors.each{ def a = new Author(name:it); em.persist(a); result << a }\n        result\n    }\n\n    @Transactional\n    def deleteAll() {\n        em.createQuery('from Author', Author).resultList.each {\n            em.remove(it)\n        }\n    }\n}\n\nclass BookSearcher {\n    FullTextEntityManager fullTextEntityManager\n\n    @Inject\n    BookSearcher(EntityManager em) {\n        fullTextEntityManager = Search.getFullTextEntityManager(em)\n    }\n\n    def search(value) {\n        def qb = fullTextEntityManager.searchFactory.buildQueryBuilder().forEntity(Book).get()\n        def query = qb.keyword().onFields('title', 'authors.name').matching(value).createQuery()\n        def books = fullTextEntityManager.createFullTextQuery(query, Book).resultList\n        println 'Found ' + books.size() + ' books:'\n        books.each { println it }\n    }\n}\n\nclass JpaLuceneInitializer {\n    PersistService service\n\n    @Inject\n    JpaLuceneInitializer(PersistService service) {\n        this.service = service\n        this.service.start()\n    }\n\n    def stop() {\n        service.stop()\n    }\n}\n```\n\n## \u5b9f\u884c\u7d50\u679c\n\n\u30bf\u30a4\u30c8\u30eb\u3068\u8457\u8005\u306b\u300cGroovy\u300d\u3092\u542b\u3080\u30c7\u30fc\u30bf\uff08\u7528\u610f\u3057\u305f\u30c7\u30fc\u30bf2\u4ef6\u3068\u3082\uff09\u304c\u691c\u7d22\u3055\u308c\u3066\u3044\u308b\u3002\n\n```\n10 25, 2013 11:53:16 \u5348\u5f8c org.hibernate.annotations.common.reflection.java.JavaReflectionManager <clinit>\nINFO: HCANN000001: Hibernate Commons Annotations {4.0.4.Final}\n10 25, 2013 11:53:16 \u5348\u5f8c org.hibernate.Version logVersion\nINFO: HHH000412: Hibernate Core {4.2.6.Final}\n10 25, 2013 11:53:16 \u5348\u5f8c org.hibernate.cfg.Environment <clinit>\nINFO: HHH000206: hibernate.properties not found\n10 25, 2013 11:53:16 \u5348\u5f8c org.hibernate.cfg.Environment buildBytecodeProvider\nINFO: HHH000021: Bytecode provider name : javassist\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000402: Using Hibernate built-in connection pool (not for production use!)\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000115: Hibernate connection pool size: 20\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000006: Autocommit mode: true\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:example]\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\nINFO: HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}\n10 25, 2013 11:53:17 \u5348\u5f8c org.hibernate.dialect.Dialect <init>\nINFO: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect\n10 25, 2013 11:53:18 \u5348\u5f8c org.hibernate.engine.transaction.internal.TransactionFactoryInitiator initiateService\nINFO: HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory\n10 25, 2013 11:53:18 \u5348\u5f8c org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory <init>\nINFO: HHH000397: Using ASTQueryTranslatorFactory\n10 25, 2013 11:53:18 \u5348\u5f8c org.hibernate.search.Version <clinit>\nINFO: HSEARCH000034: Hibernate Search 4.4.0.Final\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.SchemaUpdate execute\nINFO: HHH000228: Running hbm2ddl schema update\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.SchemaUpdate execute\nINFO: HHH000102: Fetching database metadata\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.SchemaUpdate execute\nINFO: HHH000396: Updating schema\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book_Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book_Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.DatabaseMetadata getTableMetadata\nINFO: HHH000262: Table not found: Book_Author\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.tool.hbm2ddl.SchemaUpdate execute\nINFO: HHH000232: Schema update complete\n10 25, 2013 11:53:23 \u5348\u5f8c org.hibernate.search.impl.ConfigContext getLuceneMatchVersion\nWARN: HSEARCH000075: Configuration setting hibernate.search.lucene_version was not specified, using LUCENE_CURRENT.\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Author (id, name) values (null, ?)\nHibernate: insert into Book (id, title) values (null, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book (id, title) values (null, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: insert into Book_Author (Book_id, authors_id) values (?, ?)\nHibernate: select this_.id as id1_1_0_, this_.title as title2_1_0_ from Book this_ where (this_.id in (?, ?))\nFound 2 books:\nGroovy in Action by Andy, Paul, Jon, Dierk, Guillaume\nSpring in Action by Craig, Groovy\nHibernate: select book0_.id as id1_1_, book0_.title as title2_1_ from Book book0_\nHibernate: delete from Book_Author where Book_id=?\nHibernate: delete from Book_Author where Book_id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Book where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Author where id=?\nHibernate: delete from Book where id=?\nHibernate: select author0_.id as id1_0_, author0_.name as name2_0_ from Author author0_\n10 25, 2013 11:53:26 \u5348\u5f8c org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl stop\nINFO: HHH000030: Cleaning up connection pool [jdbc:h2:mem:example]\n```"}