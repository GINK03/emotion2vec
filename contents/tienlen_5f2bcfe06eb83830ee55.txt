{"context": "\n\n\u57fa\u672c\u7684\u306a\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u8ee2\u8a18\npackage main\n\nimport (\n    \"net/http\"\n    \"strconv\"\n\n    \"github.com/labstack/echo\"\n    \"github.com/labstack/echo/engine/standard\"\n    \"github.com/labstack/echo/middleware\"\n)\n\ntype (\n    user struct {\n        ID   int    `json:\"id\"`\n        Name string `json:\"name\"`\n    }\n)\n\nvar (\n    users = map[int]*user{}\n    seq   = 1\n)\n\n//----------\n// Handlers\n//----------\n\nfunc createUser(c echo.Context) error {\n    u := &user{\n        ID: seq,\n    }\n    if err := c.Bind(u); err != nil {\n        return err\n    }\n    users[u.ID] = u\n    seq++\n    return c.JSON(http.StatusCreated, u)\n}\n\nfunc getUser(c echo.Context) error {\n    id, _ := strconv.Atoi(c.Param(\"id\"))\n    return c.JSON(http.StatusOK, users[id])\n}\n\nfunc updateUser(c echo.Context) error {\n    u := new(user)\n    if err := c.Bind(u); err != nil {\n        return err\n    }\n    id, _ := strconv.Atoi(c.Param(\"id\"))\n    users[id].Name = u.Name\n    return c.JSON(http.StatusOK, users[id])\n}\n\nfunc deleteUser(c echo.Context) error {\n    id, _ := strconv.Atoi(c.Param(\"id\"))\n    delete(users, id)\n    return c.NoContent(http.StatusNoContent)\n}\n\nfunc main() {\n    e := echo.New()\n\n    // Middleware\n    e.Use(middleware.Logger())\n    e.Use(middleware.Recover())\n\n    // Routes\n    e.POST(\"/users\", createUser)\n    e.GET(\"/users/:id\", getUser)\n    e.PUT(\"/users/:id\", updateUser)\n    e.DELETE(\"/users/:id\", deleteUser)\n\n    // Start server\n    e.Run(standard.New(\":1323\"))\n}\n\n\n\u3053\u308c\u3067OK\u3067\u306f\u306a\u3044\uff01\uff01\n\u3053\u308c\u306f\u3042\u304f\u307e\u3067\u3082\u3001Routing\u306e\u4ed5\u65b9\u3068Handler\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u66f8\u3044\u3066\u3044\u308b\u3060\u3051\u3067\u4f8b\u5916\u30d1\u30bf\u30fc\u30f3\u306f\u60f3\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u5b9f\u969b\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3068\u304d\u306b\u306f\u3053\u308c\u3060\u3051\u3067\u306f\u8db3\u308a\u306a\u3044\u306e\u3067\u3059\u3002\n\n\u3067\u306f\u3069\u3046\u3059\u308b\u304b\n\n1. \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\nAPI\u30b5\u30fc\u30d0\u3092\u69cb\u7bc9\u3059\u308b\u5834\u5408\u3001\u6b63\u5e38\u3067\u3082\u7570\u5e38\u3067\u3082\u540c\u3058\u5f62\u5f0f\u3067\u7d50\u679c\u3092\u8fd4\u3059\u3079\u304d\u3060\u3068\u8003\u3048\u307e\u3059\u3002\n(\u6b63\u5e38\u7cfb\u304cJSON\u3067\u8fd4\u3059\u306a\u3089\u3001\u7570\u5e38\u3067\u3082JSON\u3092\u8fd4\u3059\u3079\u304d)\n\u3057\u304b\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u306ftext\u5f62\u5f0f (echo.Context.String) \u3067\n\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001echo\u304c\u5168\u3066\u306e\u5f62\u5f0f\u3092\u7d71\u4e00\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30cf\u30f3\u30c9\u30e9\u6bce\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5f62\u5f0f\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4f7f\u7528\u4f8b\u306e\u5834\u5408\n\nGET_(/users/1)\u306b\u30a2\u30af\u30bb\u30b9\n{\n    name: \"foobar\"\n}\n\n\n\u306a\u3069\u306b\u306a\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001\u30a8\u30e9\u30fc\u306e\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nRouting\u3055\u308c\u3066\u306a\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9(\u4f8b\uff1a/contents/1)\nNot Found\n\n\n\u3053\u308c\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\ntype APIError struct {\n    Code int\n    Message string\n}\n\nfunc JSONErrorHandler(err error, context *echo.Context) {\n    code := http.StatusInternalServerError\n    msg := http.StatusText(code)\n\n    if he, ok := err.(*HTTPError); ok {\n        code = he.Code\n        msg = he.Message\n    }\n    if e.debug {\n        msg = err.Error()\n    }\n\n    var apierr APIError\n    apierr.Code    = code\n    apierr.Message = msg\n\n    if !c.Response().Committed() {\n        c.JSON(code, apierr)\n    }\n    e.logger.Debug(err)\n}\n\n\u3053\u308c\u3092Router( main() )\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nfunc main() {\n    e := echo.New()\n\n    // Middleware\n    e.Use(middleware.Logger())\n    e.Use(middleware.Recover())\n\n    // \u4eca\u56de\u8ffd\u52a0\u3057\u305f\u3068\u3053\u308d\n    e.SetHTTPErrorHandler(JSONErrorHandler)\n\n    // Routes\n    e.POST(\"/users\", createUser)\n    e.GET(\"/users/:id\", getUser)\n    e.PUT(\"/users/:id\", updateUser)\n    e.DELETE(\"/users/:id\", deleteUser)\n\n    // Start server\n    e.Run(standard.New(\":1323\"))\n}\n\n\n2. \u30a8\u30e9\u30fc\u306f error \u3067\u8fd4\u3059\u3060\u3051\u3067\u306f\u4e0d\u5341\u5206\n\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u5834\u5408\u306f\nif err := c.Bind(u); err != nil {\n    return err\n}\n\n\u306e\u3088\u3046\u306a\u7b87\u6240\u3092\nif err := c.Bind(u); err != nil {\n    var apierr APIError\n    apierr.Code    = 100\n    apierr.Message = \"invalid request\"\n\n    c.JSON(htt.StatusBadRequest, apierr)\n    return err\n}\n\n\u3068\u3059\u308b\u304b\n\u3082\u3057\u304f\u306fWrapper\u3092\u4f5c\u3063\u305f\u65b9\u304c\u3044\u3044\u3067\u3059\nfunc JSONError(c *echo.Context, status int err error, code int, msg string) error {\n    var apierr APIError\n    apierr.Code    = code\n    apierr.Message = msg\n\n    c.JSON(status, apierr)\n    return err\n}\n\nif err := c.Bind(u); err != nil {\n    return JSONError\n}\n\n\u5148\u307b\u3069\u306e\u4f5c\u3063\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3067\u306f\u3001HTTP Status\u304b\u3089code\u3068message\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u3053\u306e\u5834\u5408\u3067\u3042\u308c\u3070\u3001\u5148\u307b\u3069\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3067\u3060\u3051\u3067\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u3001\u5b9f\u969bAPI\u3092\u4f5c\u308b\u5834\u5408\u306f\u72ec\u81ea\u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u3057\u305f\u308a\u3001\n\u30e6\u30fc\u30b6\u5411\u3051\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u305d\u306e\u8a73\u7d30\u3092\u8fd4\u3059\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3060\u3068\u3001\u5148\u307b\u3069\u4f5c\u3063\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3067\u306f\u51e6\u7406\u304c\u8db3\u308a\u307e\u305b\u3093\u3002\n\u30a8\u30e9\u30fc\u6bce\u306b\u304d\u3061\u3093\u3068\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u66f8\u304f\u306e\u306b\u306f\u307e\u3060\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eee\u306b\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u5185\u3067\u72ec\u81ea\u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3084\u8a73\u7d30\u306a\u3069\u4ed8\u968f\u3059\u308b\u60c5\u5831\u3092\u81ea\u52d5\u751f\u6210\u3057\u305f\u3068\u3057\u3066\u3082\n\u7279\u5b9a\u306e\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306b\u306f\u4f8b\u5916\u7684\u306b\u901a\u5e38\u3068\u306f\u7570\u306a\u308b\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u67d4\u8edf\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3082\u500b\u5225\u306b\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u3067\u3059\u3002\n\u3082\u3046\u4e00\u3064\u6ce8\u76ee\u3059\u3079\u304d\u306a\u306e\u304c\u6539\u4fee\u5f8c\u3082 err \u3092\u8fd4\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\u3053\u308c\u306f echo.Context.JSON \u3084 echo.Context.String \u304cHTTP Status\u306b\u95a2\u4fc2\u306a\u304f nil \u3092\u8fd4\u3057\u3066\u3057\u307e\u3044\u3001Unit\u30c6\u30b9\u30c8\u306e\u5f0a\u5bb3\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3067\u3059\u3002\nUnit\u30c6\u30b9\u30c8\u306b\u95a2\u3057\u3066\u306f\u5225\u306e\u6a5f\u4f1a\u306b\u66f8\u304d\u307e\u3059\u3002\nlabstack/echo \u306e\u69cb\u7bc9\u4f8b\u306f\u30d1\u30bf\u30fc\u30f3\u304c\u591a\u304f\u3001\u3068\u3066\u3082\u826f\u304f\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u304c\u3001\n\u305d\u308c\u3067\u3082\u6a5f\u80fd\u8aac\u660e\u306b\u6700\u4f4e\u9650\u306e\u3068\u3053\u308d\u3057\u304b\u66f8\u304b\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u5b9f\u969b\u306b\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u95a2\u6570\u3092\u3088\u304f\u7406\u89e3\u3057\u305f\u3046\u3048\u3067\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n# \u57fa\u672c\u7684\u306a\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u8ee2\u8a18\n\n```go\npackage main\n\nimport (\n\t\"net/http\"\n\t\"strconv\"\n\n\t\"github.com/labstack/echo\"\n\t\"github.com/labstack/echo/engine/standard\"\n\t\"github.com/labstack/echo/middleware\"\n)\n\ntype (\n\tuser struct {\n\t\tID   int    `json:\"id\"`\n\t\tName string `json:\"name\"`\n\t}\n)\n\nvar (\n\tusers = map[int]*user{}\n\tseq   = 1\n)\n\n//----------\n// Handlers\n//----------\n\nfunc createUser(c echo.Context) error {\n\tu := &user{\n\t\tID: seq,\n\t}\n\tif err := c.Bind(u); err != nil {\n\t\treturn err\n\t}\n\tusers[u.ID] = u\n\tseq++\n\treturn c.JSON(http.StatusCreated, u)\n}\n\nfunc getUser(c echo.Context) error {\n\tid, _ := strconv.Atoi(c.Param(\"id\"))\n\treturn c.JSON(http.StatusOK, users[id])\n}\n\nfunc updateUser(c echo.Context) error {\n\tu := new(user)\n\tif err := c.Bind(u); err != nil {\n\t\treturn err\n\t}\n\tid, _ := strconv.Atoi(c.Param(\"id\"))\n\tusers[id].Name = u.Name\n\treturn c.JSON(http.StatusOK, users[id])\n}\n\nfunc deleteUser(c echo.Context) error {\n\tid, _ := strconv.Atoi(c.Param(\"id\"))\n\tdelete(users, id)\n\treturn c.NoContent(http.StatusNoContent)\n}\n\nfunc main() {\n\te := echo.New()\n\n\t// Middleware\n\te.Use(middleware.Logger())\n\te.Use(middleware.Recover())\n\n\t// Routes\n\te.POST(\"/users\", createUser)\n\te.GET(\"/users/:id\", getUser)\n\te.PUT(\"/users/:id\", updateUser)\n\te.DELETE(\"/users/:id\", deleteUser)\n\n\t// Start server\n\te.Run(standard.New(\":1323\"))\n}\n```\n\n# \u3053\u308c\u3067OK\u3067\u306f\u306a\u3044\uff01\uff01\n\n\u3053\u308c\u306f\u3042\u304f\u307e\u3067\u3082\u3001Routing\u306e\u4ed5\u65b9\u3068Handler\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u66f8\u3044\u3066\u3044\u308b\u3060\u3051\u3067\u4f8b\u5916\u30d1\u30bf\u30fc\u30f3\u306f\u60f3\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u5b9f\u969b\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3068\u304d\u306b\u306f\u3053\u308c\u3060\u3051\u3067\u306f\u8db3\u308a\u306a\u3044\u306e\u3067\u3059\u3002\n\n# \u3067\u306f\u3069\u3046\u3059\u308b\u304b\n\n## 1. \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\n\nAPI\u30b5\u30fc\u30d0\u3092\u69cb\u7bc9\u3059\u308b\u5834\u5408\u3001\u6b63\u5e38\u3067\u3082\u7570\u5e38\u3067\u3082\u540c\u3058\u5f62\u5f0f\u3067\u7d50\u679c\u3092\u8fd4\u3059\u3079\u304d\u3060\u3068\u8003\u3048\u307e\u3059\u3002\n(\u6b63\u5e38\u7cfb\u304cJSON\u3067\u8fd4\u3059\u306a\u3089\u3001\u7570\u5e38\u3067\u3082JSON\u3092\u8fd4\u3059\u3079\u304d)\n\n\u3057\u304b\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u306ftext\u5f62\u5f0f (echo.Context.String) \u3067\n\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001echo\u304c\u5168\u3066\u306e\u5f62\u5f0f\u3092\u7d71\u4e00\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30cf\u30f3\u30c9\u30e9\u6bce\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5f62\u5f0f\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4f7f\u7528\u4f8b\u306e\u5834\u5408\n\n```json:GET_(/users/1)\u306b\u30a2\u30af\u30bb\u30b9\n{\n\tname: \"foobar\"\n}\n```\n\n\u306a\u3069\u306b\u306a\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001\u30a8\u30e9\u30fc\u306e\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```text:Routing\u3055\u308c\u3066\u306a\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9(\u4f8b\uff1a/contents/1)\nNot Found\n```\n\n\u3053\u308c\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```go\ntype APIError struct {\n\tCode int\n\tMessage string\n}\n\nfunc JSONErrorHandler(err error, context *echo.Context) {\n\tcode := http.StatusInternalServerError\n\tmsg := http.StatusText(code)\n\n\tif he, ok := err.(*HTTPError); ok {\n\t\tcode = he.Code\n\t\tmsg = he.Message\n\t}\n\tif e.debug {\n\t\tmsg = err.Error()\n\t}\n\n\tvar apierr APIError\n\tapierr.Code    = code\n\tapierr.Message = msg\n\n\tif !c.Response().Committed() {\n\t\tc.JSON(code, apierr)\n\t}\n\te.logger.Debug(err)\n}\n```\n\n\u3053\u308c\u3092Router( main() )\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```go\nfunc main() {\n\te := echo.New()\n\n\t// Middleware\n\te.Use(middleware.Logger())\n\te.Use(middleware.Recover())\n\n\t// \u4eca\u56de\u8ffd\u52a0\u3057\u305f\u3068\u3053\u308d\n\te.SetHTTPErrorHandler(JSONErrorHandler)\n\n\t// Routes\n\te.POST(\"/users\", createUser)\n\te.GET(\"/users/:id\", getUser)\n\te.PUT(\"/users/:id\", updateUser)\n\te.DELETE(\"/users/:id\", deleteUser)\n\n\t// Start server\n\te.Run(standard.New(\":1323\"))\n}\n```\n\n## 2. \u30a8\u30e9\u30fc\u306f `error` \u3067\u8fd4\u3059\u3060\u3051\u3067\u306f\u4e0d\u5341\u5206\n\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u5834\u5408\u306f\n\n```go\nif err := c.Bind(u); err != nil {\n\treturn err\n}\n```\n\n\u306e\u3088\u3046\u306a\u7b87\u6240\u3092\n\n```go\nif err := c.Bind(u); err != nil {\n\tvar apierr APIError\n\tapierr.Code    = 100\n\tapierr.Message = \"invalid request\"\n\n\tc.JSON(htt.StatusBadRequest, apierr)\n\treturn err\n}\n```\n\n\u3068\u3059\u308b\u304b\n\u3082\u3057\u304f\u306fWrapper\u3092\u4f5c\u3063\u305f\u65b9\u304c\u3044\u3044\u3067\u3059\n\n```go\nfunc JSONError(c *echo.Context, status int err error, code int, msg string) error {\n\tvar apierr APIError\n\tapierr.Code    = code\n\tapierr.Message = msg\n\n\tc.JSON(status, apierr)\n\treturn err\n}\n\nif err := c.Bind(u); err != nil {\n\treturn JSONError\n}\n```\n\n\u5148\u307b\u3069\u306e\u4f5c\u3063\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3067\u306f\u3001HTTP Status\u304b\u3089code\u3068message\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u3053\u306e\u5834\u5408\u3067\u3042\u308c\u3070\u3001\u5148\u307b\u3069\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3067\u3060\u3051\u3067\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u3001\u5b9f\u969bAPI\u3092\u4f5c\u308b\u5834\u5408\u306f\u72ec\u81ea\u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u3057\u305f\u308a\u3001\n\u30e6\u30fc\u30b6\u5411\u3051\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u305d\u306e\u8a73\u7d30\u3092\u8fd4\u3059\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3060\u3068\u3001\u5148\u307b\u3069\u4f5c\u3063\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3067\u306f\u51e6\u7406\u304c\u8db3\u308a\u307e\u305b\u3093\u3002\n\n\u30a8\u30e9\u30fc\u6bce\u306b\u304d\u3061\u3093\u3068\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u66f8\u304f\u306e\u306b\u306f\u307e\u3060\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eee\u306b\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u5185\u3067\u72ec\u81ea\u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3084\u8a73\u7d30\u306a\u3069\u4ed8\u968f\u3059\u308b\u60c5\u5831\u3092\u81ea\u52d5\u751f\u6210\u3057\u305f\u3068\u3057\u3066\u3082\n\u7279\u5b9a\u306e\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306b\u306f\u4f8b\u5916\u7684\u306b\u901a\u5e38\u3068\u306f\u7570\u306a\u308b\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u67d4\u8edf\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3082\u500b\u5225\u306b\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u3067\u3059\u3002\n\n\u3082\u3046\u4e00\u3064\u6ce8\u76ee\u3059\u3079\u304d\u306a\u306e\u304c\u6539\u4fee\u5f8c\u3082 `err` \u3092\u8fd4\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\u3053\u308c\u306f `echo.Context.JSON` \u3084 `echo.Context.String` \u304cHTTP Status\u306b\u95a2\u4fc2\u306a\u304f `nil` \u3092\u8fd4\u3057\u3066\u3057\u307e\u3044\u3001Unit\u30c6\u30b9\u30c8\u306e\u5f0a\u5bb3\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3067\u3059\u3002\nUnit\u30c6\u30b9\u30c8\u306b\u95a2\u3057\u3066\u306f\u5225\u306e\u6a5f\u4f1a\u306b\u66f8\u304d\u307e\u3059\u3002\n\nlabstack/echo \u306e\u69cb\u7bc9\u4f8b\u306f\u30d1\u30bf\u30fc\u30f3\u304c\u591a\u304f\u3001\u3068\u3066\u3082\u826f\u304f\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u304c\u3001\n\u305d\u308c\u3067\u3082\u6a5f\u80fd\u8aac\u660e\u306b\u6700\u4f4e\u9650\u306e\u3068\u3053\u308d\u3057\u304b\u66f8\u304b\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u5b9f\u969b\u306b\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u95a2\u6570\u3092\u3088\u304f\u7406\u89e3\u3057\u305f\u3046\u3048\u3067\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n", "tags": ["echo", "Go", "golang", "api"]}