{"context": " More than 1 year has passed since last update.\u81ea\u5206\u7528\nJSON\u30e9\u30a4\u30d6\u30e9\u30ea\u3068assembly\u306f\u4f7f\u3046\u306e\u3067\u6700\u521d\u304b\u3089\u5165\u308c\u3066\u304a\u304f\nsbt-assembly\nhttps://github.com/sbt/sbt-assembly\nplay-json\nhttps://www.playframework.com/documentation/ja/2.1.x/ScalaJson\nbuild.sbt\norganization  := \"org.XXX\"\n\nversion       := \"0.1\"\n\nscalaVersion  := \"2.11.6\"\n\nscalacOptions := Seq(\"-unchecked\", \"-deprecation\", \"-encoding\", \"utf8\", \"-Ylog-classpath\")\n\nlibraryDependencies ++= {\n  val akkaV = \"2.3.9\"\n  val sprayV = \"1.3.3\"\n  Seq(\n    \"io.spray\"            %%  \"spray-can\"     % sprayV,\n    \"io.spray\"            %%  \"spray-routing\" % sprayV,\n    \"io.spray\"            %%  \"spray-testkit\" % sprayV  % \"test\",\n    \"com.typesafe.akka\"   %%  \"akka-actor\"    % akkaV,\n    \"com.typesafe.akka\"   %%  \"akka-testkit\"  % akkaV   % \"test\",\n    \"org.specs2\"          %%  \"specs2-core\"   % \"2.3.11\" % \"test\",\n    \"org.scalikejdbc\"     %%  \"scalikejdbc\"    % \"2.2.+\",\n    \"org.slf4j\"           %   \"slf4j-simple\"   % \"1.7.+\",\n    \"mysql\"               %   \"mysql-connector-java\" % \"5.1.29\",\n    \"com.typesafe.play\"   %   \"play-json_2.11\" % \"2.4.2\"\n  )\n}\n\nivyScala := ivyScala.value map { _.copy(overrideScalaVersion = true) }\n\nRevolver.settings\n\n\nassemblyMergeStrategy in assembly := {\n  case PathList(\"javax\", \"servlet\", xs @ _*)         => MergeStrategy.first\n  case PathList(ps @ _*) if ps.last endsWith \".properties\" => MergeStrategy.first\n  case PathList(ps @ _*) if ps.last endsWith \".xml\" => MergeStrategy.first\n  case PathList(ps @ _*) if ps.last endsWith \".types\" => MergeStrategy.first\n  case PathList(ps @ _*) if ps.last endsWith \".class\" => MergeStrategy.first\n  case \"application.conf\"                            => MergeStrategy.concat\n  case \"unwanted.txt\"                                => MergeStrategy.discard\n  case x =>\n    val oldStrategy = (assemblyMergeStrategy in assembly).value\n    oldStrategy(x)\n}\n\napplication.conf\nakka {\n  loglevel = INFO\n}\n\nspray.can.server {\n  request-timeout = 1s\n}\n\ninclude \"securesocial.conf\"\n\nplugins.sbt\naddSbtPlugin(\"io.spray\" % \"sbt-revolver\" % \"0.7.2\")\naddSbtPlugin(\"com.eed3si9n\" % \"sbt-assembly\" % \"0.14.1\")\n\n\n\n\u81ea\u5206\u7528\n\nJSON\u30e9\u30a4\u30d6\u30e9\u30ea\u3068assembly\u306f\u4f7f\u3046\u306e\u3067\u6700\u521d\u304b\u3089\u5165\u308c\u3066\u304a\u304f\n\nsbt-assembly\nhttps://github.com/sbt/sbt-assembly\n\n\nplay-json\nhttps://www.playframework.com/documentation/ja/2.1.x/ScalaJson\n\n\n<h3>build.sbt</h3>\n\n```\norganization  := \"org.XXX\"\n\nversion       := \"0.1\"\n\nscalaVersion  := \"2.11.6\"\n\nscalacOptions := Seq(\"-unchecked\", \"-deprecation\", \"-encoding\", \"utf8\", \"-Ylog-classpath\")\n\nlibraryDependencies ++= {\n  val akkaV = \"2.3.9\"\n  val sprayV = \"1.3.3\"\n  Seq(\n    \"io.spray\"            %%  \"spray-can\"     % sprayV,\n    \"io.spray\"            %%  \"spray-routing\" % sprayV,\n    \"io.spray\"            %%  \"spray-testkit\" % sprayV  % \"test\",\n    \"com.typesafe.akka\"   %%  \"akka-actor\"    % akkaV,\n    \"com.typesafe.akka\"   %%  \"akka-testkit\"  % akkaV   % \"test\",\n    \"org.specs2\"          %%  \"specs2-core\"   % \"2.3.11\" % \"test\",\n    \"org.scalikejdbc\"     %%  \"scalikejdbc\"    % \"2.2.+\",\n    \"org.slf4j\"           %   \"slf4j-simple\"   % \"1.7.+\",\n    \"mysql\"               %   \"mysql-connector-java\" % \"5.1.29\",\n    \"com.typesafe.play\"   %   \"play-json_2.11\" % \"2.4.2\"\n  )\n}\n\nivyScala := ivyScala.value map { _.copy(overrideScalaVersion = true) }\n\nRevolver.settings\n\n\nassemblyMergeStrategy in assembly := {\n  case PathList(\"javax\", \"servlet\", xs @ _*)         => MergeStrategy.first\n  case PathList(ps @ _*) if ps.last endsWith \".properties\" => MergeStrategy.first\n  case PathList(ps @ _*) if ps.last endsWith \".xml\" => MergeStrategy.first\n  case PathList(ps @ _*) if ps.last endsWith \".types\" => MergeStrategy.first\n  case PathList(ps @ _*) if ps.last endsWith \".class\" => MergeStrategy.first\n  case \"application.conf\"                            => MergeStrategy.concat\n  case \"unwanted.txt\"                                => MergeStrategy.discard\n  case x =>\n    val oldStrategy = (assemblyMergeStrategy in assembly).value\n    oldStrategy(x)\n}\n```\n\n\n<h3>application.conf</h3>\n\n```\nakka {\n  loglevel = INFO\n}\n\nspray.can.server {\n  request-timeout = 1s\n}\n\ninclude \"securesocial.conf\"\n```\n\n<h3>plugins.sbt</h3>\n\n```\naddSbtPlugin(\"io.spray\" % \"sbt-revolver\" % \"0.7.2\")\naddSbtPlugin(\"com.eed3si9n\" % \"sbt-assembly\" % \"0.14.1\")\n\n```\n", "tags": ["spray", "Scala"]}