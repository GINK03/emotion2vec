{"context": "\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u306eNim\u30d0\u30fc\u30b8\u30e7\u30f3\nNim\u7248\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n(EDIT: quit \u3092\u5229\u7528\u3057\u3066\u4e00\u884c\u77ed\u304f\u3057\u307e\u3057\u305f\u30024/03, 2016)\n\u5143\u30cd\u30bf\uff1ahttps://twitter.com/kumiromilk/status/707437861881180160\n# How to compile: nim c -r FILENAME.nim\nimport math\n\ntype ZunDoko = enum\n  doko, zun\n\niterator zundokoGenerator(): ZunDoko =\n  yield case math.random(2).ZunDoko:\n          of zun:  echo \"\u30ba\u30f3\"; zun\n          of doko: echo \"\u30c9\u30b3\"; doko\n\nvar song: seq[int] = @[]\nwhile true:\n  for z_or_d in zundokoGenerator():\n    song.add(z_or_d.int)\n    if z_or_d == doko:\n      defer: song = @[]\n      if song.sum >= 4:\n        echo \"\u30ad \u30e8 \u30b7!\"\n        quit 0\n\n\u51fa\u529b\n\n\u30ba\u30f3 \n\u30c9\u30b3 \n\u30ba\u30f3 \n\u30ba\u30f3 \n\u30ba\u30f3 \n\u30ba\u30f3 \n\u30c9\u30b3 \n\u30ad \u30e8 \u30b7!\n\n\u8ffd\u8a18: threads\u3092\u5229\u7528\u3057\u305f\u5b9f\u88c5\n# How to compile: nim c -r --threads:on FILENAME.nim\nimport math, threadpool\n\ntype ZunDoko = enum\n  doko, zun\n\niterator zundokoGenerator(id: int): ZunDoko =\n  yield case math.random(2).ZunDoko:\n          of zun:  echo \"\u30ba\u30f3\" & $id; zun\n          of doko: echo \"\u30c9\u30b3\" & $id; doko\n\nvar song {.threadvar.}: seq[int]\n\nproc kiyoshi(id: int = 0) {.thread.} =\n  block done:\n    song = @[]\n    while true:\n      for z_or_d in zundokoGenerator(id):\n        song.add(z_or_d.int)\n        if z_or_d == doko:\n          defer: song = @[]\n          if song.sum >= 4:\n            echo \"\u30ad \u30e8 \u30b7!\" & $id\n            break done\n\nwhen isMainModule:\n  let max_threads = 10\n  for i in 1..max_threads:\n    spawn kiyoshi(i)\n  sync()\n\n\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u306eNim\u30d0\u30fc\u30b8\u30e7\u30f3\n\nNim\u7248\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n(EDIT: `quit` \u3092\u5229\u7528\u3057\u3066\u4e00\u884c\u77ed\u304f\u3057\u307e\u3057\u305f\u30024/03, 2016)\n\n\u5143\u30cd\u30bf\uff1ahttps://twitter.com/kumiromilk/status/707437861881180160\n\n```nim\n# How to compile: nim c -r FILENAME.nim\nimport math\n\ntype ZunDoko = enum\n  doko, zun\n\niterator zundokoGenerator(): ZunDoko =\n  yield case math.random(2).ZunDoko:\n          of zun:  echo \"\u30ba\u30f3\"; zun\n          of doko: echo \"\u30c9\u30b3\"; doko\n\nvar song: seq[int] = @[]\nwhile true:\n  for z_or_d in zundokoGenerator():\n    song.add(z_or_d.int)\n    if z_or_d == doko:\n      defer: song = @[]\n      if song.sum >= 4:\n        echo \"\u30ad \u30e8 \u30b7!\"\n        quit 0\n```\n\n\u51fa\u529b\n```\n\u30ba\u30f3 \n\u30c9\u30b3 \n\u30ba\u30f3 \n\u30ba\u30f3 \n\u30ba\u30f3 \n\u30ba\u30f3 \n\u30c9\u30b3 \n\u30ad \u30e8 \u30b7!\n```\n\n\u8ffd\u8a18: threads\u3092\u5229\u7528\u3057\u305f\u5b9f\u88c5\n\n```nim\n# How to compile: nim c -r --threads:on FILENAME.nim\nimport math, threadpool\n\ntype ZunDoko = enum\n  doko, zun\n\niterator zundokoGenerator(id: int): ZunDoko =\n  yield case math.random(2).ZunDoko:\n          of zun:  echo \"\u30ba\u30f3\" & $id; zun\n          of doko: echo \"\u30c9\u30b3\" & $id; doko\n\nvar song {.threadvar.}: seq[int]\n\nproc kiyoshi(id: int = 0) {.thread.} =\n  block done:\n    song = @[]\n    while true:\n      for z_or_d in zundokoGenerator(id):\n        song.add(z_or_d.int)\n        if z_or_d == doko:\n          defer: song = @[]\n          if song.sum >= 4:\n            echo \"\u30ad \u30e8 \u30b7!\" & $id\n            break done\n          \nwhen isMainModule:\n  let max_threads = 10\n  for i in 1..max_threads:\n    spawn kiyoshi(i)\n  sync()\n```\n", "tags": ["Nim", "\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7"]}