{"context": "\n\n\u524d\u63d0\u6761\u4ef6\n\nLambda\u3078\u306e\u6a29\u9650\nLambda\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\nDynamoDB\u3078\u306e\u6a29\u9650\nDynamoDB\u306b\u5bfe\u3057\u3066\u8aad\u307f\u53d6\u308a\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\nAWS CLI\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\nAWS CLI 1.10.47\n\n\n\u30b3\u30de\u30f3\u30c9\naws --version\n\n\n\u7d50\u679c(\u4f8b):\n  aws-cli/1.11.34 Python/2.7.10 Darwin/15.6.0 botocore/1.4.91\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u5834\u5408\u306f\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30b3\u30de\u30f3\u30c9\nsudo -H pip install -U awscli\n\n\n\nIAM Role\nLambdaMicroserviceHttpEndpointRole\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n0. \u6e96\u5099\n\n0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u6c7a\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nexport AWS_DEFAULT_REGION='ap-northeast-1'\n\n\n\n0.2. \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u78ba\u8a8d\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u78ba\u8a8d\naws configure list\n\n\n\u7d50\u679c(\u4f8b):\n        Name                    Value             Type    Location\n        ----                    -----             ----    --------\n     profile       lambdaFull-prjz-mbp13        env    AWS_DEFAULT_PROFILE\n  access_key     ****************XXXX shared-credentials-file\n  secret_key     ****************XXXX shared-credentials-file\n      region        ap-northeast-1        env    AWS_DEFAULT_REGION\n\n\n0.3. DynamoDB\u30c6\u30fc\u30d6\u30eb\u540d\u306e\u6307\u5b9a\n\n\u30b3\u30de\u30f3\u30c9\nDYNAMO_TABLE_NAME='microservice-http'\n\n\n\n1. \u4e8b\u524d\u4f5c\u696d\n\n1.1. Lambda\u95a2\u6570\u540d\u306e\u6c7a\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_FUNC_NAME=\"microservice_http_endpoint-$( date '+%Y%m%d' )\" \\\n        && echo ${LAMBDA_FUNC_NAME}\n\n\n\u540c\u540d\u306eLambda\u95a2\u6570\u306e\u4e0d\u5b58\u5728\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n\n\n\u7d50\u679c(\u4f8b):\n  A client error (ResourceNotFoundException) occurred when calling the GetFunction operation: Function not found: arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:microservice_http_endpoint-20170101\n\n\n1.2. IAM Role\u306e\u6307\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nIAM_ROLE_NAME='LambdaMicroserviceHttpEndpointRole'\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws iam get-role \\\n         --role-name ${IAM_ROLE_NAME}\n\n\n\u7d50\u679c(\u4f8b):\n  {\n      \"Role\": {\n        \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Action\": \"sts:AssumeRole\",\n                    \"Principal\": {\n                        \"Service\": \"lambda.amazonaws.com\"\n                    },\n                    \"Effect\": \"Allow\",\n                    \"Sid\": \"\"\n                }\n            ]\n        },\n        \"RoleId\": \"AROAXXXXXXXXXXXXXXXXX\",\n        \"CreateDate\": \"2016-12-31T01:23:45Z\",\n        \"RoleName\": \"LambdaMicroserviceHttpEndpointRole\",\n        \"Path\": \"/\",\n        \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:role/LambdaMicroserviceHttpEndpointRole\"\n      }\n  }\n\n\n\u30b3\u30de\u30f3\u30c9\nIAM_ROLE_ARN=$( \\\n        aws iam get-role \\\n          --role-name ${IAM_ROLE_NAME} \\\n          --query 'Role.Arn' \\\n          --output text \\\n) \\\n        && echo ${IAM_ROLE_ARN}\n\n\n\u7d50\u679c(\u4f8b):\n  arn:aws:iam::XXXXXXXXXXXX:role/LambdaMicroserviceHttpEndpointRole\n\n\n1.3. Lambda\u95a2\u6570\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_LAMBDA_FUNC=\"${LAMBDA_FUNC_NAME}.py\"\nPY_FUNC_NAME='lambda_handler'\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n          FILE_LAMBDA_FUNC: ${FILE_LAMBDA_FUNC}\n          PY_FUNC_NAME:     ${PY_FUNC_NAME}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat << EOF > ${FILE_LAMBDA_FUNC}\nfrom __future__ import print_function\n\nimport boto3\nimport json\n\nprint('Loading function')\n\n\ndef respond(err, res=None):\n    return {\n        'statusCode': '400' if err else '200',\n        'body': err.message if err else json.dumps(res),\n        'headers': {\n            'Content-Type': 'application/json',\n        },\n    }\n\n\ndef ${PY_FUNC_NAME}(event, context):\n    #print(\"Received event: \" + json.dumps(event, indent=2))\n\n    operations = {\n        'DELETE': lambda dynamo, x: dynamo.delete_item(**x),\n        'GET': lambda dynamo, x: dynamo.scan(**x),\n        'POST': lambda dynamo, x: dynamo.put_item(**x),\n        'PUT': lambda dynamo, x: dynamo.update_item(**x),\n    }\n\n    operation = event['httpMethod']\n    if operation in operations:\n        payload = event['queryStringParameters'] if operation == 'GET' else json.loads(event['body'])\n        dynamo = boto3.resource('dynamodb').Table(payload['TableName'])\n        return respond(None, operations[operation](dynamo, payload))\n    else:\n        return respond(ValueError('Unsupported method \"{}\"'.format(operation)))\nEOF\n\ncat ${FILE_LAMBDA_FUNC}\n\n\n\n\u30b3\u30de\u30f3\u30c9\nzip ${LAMBDA_FUNC_NAME}.zip ${FILE_LAMBDA_FUNC}\n\n\n\u7d50\u679c(\u4f8b):\n  adding: microservice_http_endpoint-20170101.py (deflated 43%)\n\n\n2. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_FUNC_DESC='Microservice HTTP Endpoint 20170101'\nLAMBDA_RUNTIME='python2.7'\nLAMBDA_HANDLER=\"${LAMBDA_FUNC_NAME}.${PY_FUNC_NAME}\"\nFILE_LAMBDA_ZIP=\"${LAMBDA_FUNC_NAME}.zip\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:  ${LAMBDA_FUNC_NAME}\n        LAMBDA_FUNC_DESC: \"${LAMBDA_FUNC_DESC}\"\n        LAMBDA_RUNTIME:    ${LAMBDA_RUNTIME}\n        FILE_LAMBDA_ZIP    ${FILE_LAMBDA_ZIP}\n        IAM_ROLE_ARN:      ${IAM_ROLE_ARN}\n        LAMBDA_HANDLER:    ${LAMBDA_HANDLER}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda create-function \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --description \"${LAMBDA_FUNC_DESC}\" \\\n        --zip-file fileb://${FILE_LAMBDA_ZIP} \\\n        --runtime ${LAMBDA_RUNTIME} \\\n        --role ${IAM_ROLE_ARN} \\\n        --handler ${LAMBDA_HANDLER}\n\n\n\u7d50\u679c(\u4f8b):\n  {\n    \"CodeSha256\": \"+edf74XvKEs4oYFOflSRJydF5n5F0SEL34ujm7+kAPk=\",\n    \"FunctionName\": \"microservice_http_endpoint-20170101\",\n    \"CodeSize\": 726,\n    \"MemorySize\": 128,\n    \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:microservice_http_endpoint-20170101\",\n    \"Version\": \"$LATEST\",\n    \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/LambdaMicroserviceHttpEndpointRole\",\n    \"Timeout\": 3,\n    \"LastModified\": \"2016-12-31T01:23:45.678+0000\",\n    \"Handler\": \"microservice_http_endpoint-20170101.lambda_handler\",\n    \"Runtime\": \"python2.7\",\n    \"Description\": \"Microservice HTTP Endpoint 20170101\"\n  }\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n\n\n\u7d50\u679c(\u4f8b):\n  {\n    \"Code\": {\n      \"RepositoryType\": \"S3\",\n      \"Location\": \"https://awslambda-ap-ne-1-tasks.s3-ap-northeast-1.amazonaws.com/snapshots/XXXXXXXXXXXX/microservice_http_endpoint-20170101-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n    },\n    \"Configuration\": {\n      \"Version\": \"$LATEST\",\n      \"CodeSha256\": \"+edf74XvKEs4oYFOflSRJydF5n5F0SEL34ujm7+kAPk=\",\n      \"FunctionName\": \"microservice_http_endpoint-20170101\",\n      \"MemorySize\": 128,\n      \"CodeSize\": 350,\n      \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:microservice_http_endpoint-20170101\",\n      \"Handler\": \"microservice_http_endpoint-20170101.lambda_handler\",\n      \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/LambdaMicroserviceHttpEndpointRole\",\n      \"Timeout\": 3,\n      \"LastModified\": \"2016-12-31T01:23:45.678+0000\",\n      \"Runtime\": \"python2.7\",\n      \"Description\": \"Microservice HTTP Endpoint 20170101\"\n    }\n  }\n\n\n3. Lambda\u95a2\u6570\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n3.1. GET\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-get.json\" \\\n        && echo ${FILE_INPUT}\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat << EOF > ${FILE_INPUT}\n{\n         \"httpMethod\": \"GET\",\n         \"queryStringParameters\": {\n             \"TableName\": \"microservice-http\"\n         }\n}\nEOF\n\ncat ${FILE_INPUT}\n\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\njsonlint -q ${FILE_INPUT}\n\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n\n\n\u7d50\u679c(\u4f8b):\n  200\n\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_OUTPUT_LAMBDA}\n\n\n\u7d50\u679c(\u4f8b):\n  {\"body\": \"{\\\"Count\\\": 1, \\\"Items\\\": [{\\\"Description\\\": \\\"sample\\\", \\\"Name\\\": \\\"taro\\\"}], \\\"ScannedCount\\\": 1, \\\"ResponseMetadata\\\": {\\\"RetryAttempts\\\": 0, \\\"HTTPStatusCode\\\": 200, \\\"RequestId\\\": \\\"GJTSB9TE10U7O0SS9JC9050FD7VV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"HTTPHeaders\\\": {\\\"x-amzn-requestid\\\": \\\"GJTSB9TE10U7O0SS9JC9050FD7VV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"content-length\\\": \\\"89\\\", \\\"server\\\": \\\"Server\\\", \\\"connection\\\": \\\"keep-alive\\\", \\\"x-amz-crc32\\\": \\\"2586798783\\\", \\\"date\\\": \\\"Sat, 31 Dec 2016 13:22:26 GMT\\\", \\\"content-type\\\": \\\"application/x-amz-json-1.0\\\"}}}\", \"headers\": {\"Content-Type\": \"application/json\"}, \"statusCode\": \"200\"}\n\n\n\u30b3\u30de\u30f3\u30c9\naws dynamodb scan \\\n        --table-name ${DYNAMO_TABLE_NAME}\n\n\n\u7d50\u679c(\u4f8b):\n  {\n    \"Count\": 1,\n    \"Items\": [\n      {\n          \"Description\": {\n              \"S\": \"sample\"\n          },\n          \"Name\": {\n              \"S\": \"taro\"\n          }\n      }\n    ],\n    \"ScannedCount\": 1,\n    \"ConsumedCapacity\": null\n  }\n\n\n3.2. POST\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-post.json\" \\\n        && echo ${FILE_INPUT}\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat << EOF > ${FILE_INPUT}\n{\n        \"httpMethod\": \"POST\",\n        \"body\": \"{\\\"TableName\\\":\\\"microservice-http\\\",\\\"Item\\\":{\\\"Name\\\":\\\"jiro\\\",\\\"Description\\\":\\\"sample2\\\"}}\"\n}\nEOF\n\ncat ${FILE_INPUT}\n\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\njsonlint -q ${FILE_INPUT}\n\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n\n\n\u7d50\u679c(\u4f8b):\n  200\n\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_OUTPUT_LAMBDA}\n\n\n\u7d50\u679c(\u4f8b):\n  {\"body\": \"{\\\"ResponseMetadata\\\": {\\\"RetryAttempts\\\": 0, \\\"HTTPStatusCode\\\": 200, \\\"RequestId\\\": \\\"C96O73JS0QB4NRH3U5D30JE9GRVV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"HTTPHeaders\\\": {\\\"x-amzn-requestid\\\": \\\"C96O73JS0QB4NRH3U5D30JE9GRVV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"content-length\\\": \\\"2\\\", \\\"server\\\": \\\"Server\\\", \\\"connection\\\": \\\"keep-alive\\\", \\\"x-amz-crc32\\\": \\\"2745614147\\\", \\\"date\\\": \\\"Sat, 31 Dec 2016 13:57:18 GMT\\\", \\\"content-type\\\": \\\"application/x-amz-json-1.0\\\"}}}\", \"headers\": {\"Content-Type\": \"application/json\"}, \"statusCode\": \"200\"}\n\n\n\u30b3\u30de\u30f3\u30c9\naws dynamodb scan \\\n        --table-name ${DYNAMO_TABLE_NAME}\n\n\n\u7d50\u679c(\u4f8b):\n  {\n    \"Count\": 2,\n    \"Items\": [\n      {\n          \"Description\": {\n              \"S\": \"sample2\"\n          },\n          \"Name\": {\n              \"S\": \"jiro\"\n          }\n      },\n      {\n          \"Description\": {\n              \"S\": \"sample\"\n          },\n          \"Name\": {\n              \"S\": \"taro\"\n          }\n      }\n    ],\n    \"ScannedCount\": 2,\n    \"ConsumedCapacity\": null\n  }\n\n\n3.3. DELETE\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-delete.json\" \\\n        && echo ${FILE_INPUT}\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat << EOF > ${FILE_INPUT}\n{\n        \"httpMethod\": \"DELETE\",\n        \"body\": \"{\\\"TableName\\\":\\\"microservice-http\\\",\\\"Key\\\":{\\\"Name\\\":\\\"jiro\\\"}}\"\n}\nEOF\n\ncat ${FILE_INPUT}\n\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\njsonlint -q ${FILE_INPUT}\n\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n\n\n\u7d50\u679c(\u4f8b):\n  200\n\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_OUTPUT_LAMBDA}\n\n\n\u7d50\u679c(\u4f8b):\n  {\"body\": \"{\\\"ResponseMetadata\\\": {\\\"RetryAttempts\\\": 0, \\\"HTTPStatusCode\\\": 200, \\\"RequestId\\\": \\\"R43F60O4UNN5B1FR3UKFR25R43VV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"HTTPHeaders\\\": {\\\"x-amzn-requestid\\\": \\\"R43F60O4UNN5B1FR3UKFR25R43VV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"content-length\\\": \\\"2\\\", \\\"server\\\": \\\"Server\\\", \\\"connection\\\": \\\"keep-alive\\\", \\\"x-amz-crc32\\\": \\\"2745614147\\\", \\\"date\\\": \\\"Sat, 31 Dec 2016 13:58:51 GMT\\\", \\\"content-type\\\": \\\"application/x-amz-json-1.0\\\"}}}\", \"headers\": {\"Content-Type\": \"application/json\"}, \"statusCode\": \"200\"}\n\n\n\u30b3\u30de\u30f3\u30c9\naws dynamodb scan \\\n        --table-name ${DYNAMO_TABLE_NAME}\n\n\n\u7d50\u679c(\u4f8b):\n  {\n    \"Count\": 1,\n    \"Items\": [\n      {\n          \"Description\": {\n              \"S\": \"sample\"\n          },\n          \"Name\": {\n              \"S\": \"taro\"\n          }\n      }\n    ],\n    \"ScannedCount\": 1,\n    \"ConsumedCapacity\": null\n  }\n\n\n\u5b8c\u4e86\n\n\n\n\u524d\u63d0\u6761\u4ef6\n========\n\n\nLambda\u3078\u306e\u6a29\u9650\n--------------\n\nLambda\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\n\nDynamoDB\u3078\u306e\u6a29\u9650\n----------------\n\nDynamoDB\u306b\u5bfe\u3057\u3066\u8aad\u307f\u53d6\u308a\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\n\nAWS CLI\n-------\n\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\n- AWS CLI 1.10.47\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws --version\n```\n\n\u7d50\u679c(\u4f8b):\n\n      aws-cli/1.11.34 Python/2.7.10 Darwin/15.6.0 botocore/1.4.91\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u5834\u5408\u306f\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u307e\u3057\u3087\u3046\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nsudo -H pip install -U awscli\n```\n\n\nIAM Role\n--------\n\nLambdaMicroserviceHttpEndpointRole\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n\n0. \u6e96\u5099\n=======\n\n\n0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u6c7a\u5b9a\n---------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nexport AWS_DEFAULT_REGION='ap-northeast-1'\n```\n\n\n0.2. \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u78ba\u8a8d\n-----------------------\n\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\naws configure list\n```\n\n\u7d50\u679c(\u4f8b):\n\n            Name                    Value             Type    Location\n            ----                    -----             ----    --------\n         profile       lambdaFull-prjz-mbp13        env    AWS_DEFAULT_PROFILE\n      access_key     ****************XXXX shared-credentials-file\n      secret_key     ****************XXXX shared-credentials-file\n          region        ap-northeast-1        env    AWS_DEFAULT_REGION\n\n\n0.3. DynamoDB\u30c6\u30fc\u30d6\u30eb\u540d\u306e\u6307\u5b9a\n-----------------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nDYNAMO_TABLE_NAME='microservice-http'\n```\n\n\n1. \u4e8b\u524d\u4f5c\u696d\n===========\n\n\n1.1. Lambda\u95a2\u6570\u540d\u306e\u6c7a\u5b9a\n-----------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nLAMBDA_FUNC_NAME=\"microservice_http_endpoint-$( date '+%Y%m%d' )\" \\\n        && echo ${LAMBDA_FUNC_NAME}\n```\n\n\u540c\u540d\u306eLambda\u95a2\u6570\u306e\u4e0d\u5b58\u5728\u78ba\u8a8d\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      A client error (ResourceNotFoundException) occurred when calling the GetFunction operation: Function not found: arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:microservice_http_endpoint-20170101\n\n\n1.2. IAM Role\u306e\u6307\u5b9a\n-------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nIAM_ROLE_NAME='LambdaMicroserviceHttpEndpointRole'\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws iam get-role \\\n         --role-name ${IAM_ROLE_NAME}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n          \"Role\": {\n            \"AssumeRolePolicyDocument\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                    {\n                        \"Action\": \"sts:AssumeRole\",\n                        \"Principal\": {\n                            \"Service\": \"lambda.amazonaws.com\"\n                        },\n                        \"Effect\": \"Allow\",\n                        \"Sid\": \"\"\n                    }\n                ]\n            },\n            \"RoleId\": \"AROAXXXXXXXXXXXXXXXXX\",\n            \"CreateDate\": \"2016-12-31T01:23:45Z\",\n            \"RoleName\": \"LambdaMicroserviceHttpEndpointRole\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:role/LambdaMicroserviceHttpEndpointRole\"\n          }\n      }\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nIAM_ROLE_ARN=$( \\\n        aws iam get-role \\\n          --role-name ${IAM_ROLE_NAME} \\\n          --query 'Role.Arn' \\\n          --output text \\\n) \\\n        && echo ${IAM_ROLE_ARN}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      arn:aws:iam::XXXXXXXXXXXX:role/LambdaMicroserviceHttpEndpointRole\n\n\n1.3. Lambda\u95a2\u6570\n---------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_LAMBDA_FUNC=\"${LAMBDA_FUNC_NAME}.py\"\nPY_FUNC_NAME='lambda_handler'\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n          FILE_LAMBDA_FUNC: ${FILE_LAMBDA_FUNC}\n          PY_FUNC_NAME:     ${PY_FUNC_NAME}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat << EOF > ${FILE_LAMBDA_FUNC}\nfrom __future__ import print_function\n\nimport boto3\nimport json\n\nprint('Loading function')\n\n\ndef respond(err, res=None):\n    return {\n        'statusCode': '400' if err else '200',\n        'body': err.message if err else json.dumps(res),\n        'headers': {\n            'Content-Type': 'application/json',\n        },\n    }\n\n\ndef ${PY_FUNC_NAME}(event, context):\n    #print(\"Received event: \" + json.dumps(event, indent=2))\n\n    operations = {\n        'DELETE': lambda dynamo, x: dynamo.delete_item(**x),\n        'GET': lambda dynamo, x: dynamo.scan(**x),\n        'POST': lambda dynamo, x: dynamo.put_item(**x),\n        'PUT': lambda dynamo, x: dynamo.update_item(**x),\n    }\n\n    operation = event['httpMethod']\n    if operation in operations:\n        payload = event['queryStringParameters'] if operation == 'GET' else json.loads(event['body'])\n        dynamo = boto3.resource('dynamodb').Table(payload['TableName'])\n        return respond(None, operations[operation](dynamo, payload))\n    else:\n        return respond(ValueError('Unsupported method \"{}\"'.format(operation)))\nEOF\n\ncat ${FILE_LAMBDA_FUNC}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nzip ${LAMBDA_FUNC_NAME}.zip ${FILE_LAMBDA_FUNC}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      adding: microservice_http_endpoint-20170101.py (deflated 43%)\n\n\n2. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n===================\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nLAMBDA_FUNC_DESC='Microservice HTTP Endpoint 20170101'\nLAMBDA_RUNTIME='python2.7'\nLAMBDA_HANDLER=\"${LAMBDA_FUNC_NAME}.${PY_FUNC_NAME}\"\nFILE_LAMBDA_ZIP=\"${LAMBDA_FUNC_NAME}.zip\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:  ${LAMBDA_FUNC_NAME}\n        LAMBDA_FUNC_DESC: \"${LAMBDA_FUNC_DESC}\"\n        LAMBDA_RUNTIME:    ${LAMBDA_RUNTIME}\n        FILE_LAMBDA_ZIP    ${FILE_LAMBDA_ZIP}\n        IAM_ROLE_ARN:      ${IAM_ROLE_ARN}\n        LAMBDA_HANDLER:    ${LAMBDA_HANDLER}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda create-function \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --description \"${LAMBDA_FUNC_DESC}\" \\\n        --zip-file fileb://${FILE_LAMBDA_ZIP} \\\n        --runtime ${LAMBDA_RUNTIME} \\\n        --role ${IAM_ROLE_ARN} \\\n        --handler ${LAMBDA_HANDLER}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n        \"CodeSha256\": \"+edf74XvKEs4oYFOflSRJydF5n5F0SEL34ujm7+kAPk=\",\n        \"FunctionName\": \"microservice_http_endpoint-20170101\",\n        \"CodeSize\": 726,\n        \"MemorySize\": 128,\n        \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:microservice_http_endpoint-20170101\",\n        \"Version\": \"$LATEST\",\n        \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/LambdaMicroserviceHttpEndpointRole\",\n        \"Timeout\": 3,\n        \"LastModified\": \"2016-12-31T01:23:45.678+0000\",\n        \"Handler\": \"microservice_http_endpoint-20170101.lambda_handler\",\n        \"Runtime\": \"python2.7\",\n        \"Description\": \"Microservice HTTP Endpoint 20170101\"\n      }\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n        \"Code\": {\n          \"RepositoryType\": \"S3\",\n          \"Location\": \"https://awslambda-ap-ne-1-tasks.s3-ap-northeast-1.amazonaws.com/snapshots/XXXXXXXXXXXX/microservice_http_endpoint-20170101-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n        },\n        \"Configuration\": {\n          \"Version\": \"$LATEST\",\n          \"CodeSha256\": \"+edf74XvKEs4oYFOflSRJydF5n5F0SEL34ujm7+kAPk=\",\n          \"FunctionName\": \"microservice_http_endpoint-20170101\",\n          \"MemorySize\": 128,\n          \"CodeSize\": 350,\n          \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:microservice_http_endpoint-20170101\",\n          \"Handler\": \"microservice_http_endpoint-20170101.lambda_handler\",\n          \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/LambdaMicroserviceHttpEndpointRole\",\n          \"Timeout\": 3,\n          \"LastModified\": \"2016-12-31T01:23:45.678+0000\",\n          \"Runtime\": \"python2.7\",\n          \"Description\": \"Microservice HTTP Endpoint 20170101\"\n        }\n      }\n\n\n3. Lambda\u95a2\u6570\u306e\u52d5\u4f5c\u78ba\u8a8d\n=======================\n\n\n3.1. GET\n--------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-get.json\" \\\n        && echo ${FILE_INPUT}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat << EOF > ${FILE_INPUT}\n{\n         \"httpMethod\": \"GET\",\n         \"queryStringParameters\": {\n             \"TableName\": \"microservice-http\"\n         }\n}\nEOF\n\ncat ${FILE_INPUT}\n```\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\njsonlint -q ${FILE_INPUT}\n```\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n```\n\n\u7d50\u679c(\u4f8b):\n\n      200\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_OUTPUT_LAMBDA}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\"body\": \"{\\\"Count\\\": 1, \\\"Items\\\": [{\\\"Description\\\": \\\"sample\\\", \\\"Name\\\": \\\"taro\\\"}], \\\"ScannedCount\\\": 1, \\\"ResponseMetadata\\\": {\\\"RetryAttempts\\\": 0, \\\"HTTPStatusCode\\\": 200, \\\"RequestId\\\": \\\"GJTSB9TE10U7O0SS9JC9050FD7VV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"HTTPHeaders\\\": {\\\"x-amzn-requestid\\\": \\\"GJTSB9TE10U7O0SS9JC9050FD7VV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"content-length\\\": \\\"89\\\", \\\"server\\\": \\\"Server\\\", \\\"connection\\\": \\\"keep-alive\\\", \\\"x-amz-crc32\\\": \\\"2586798783\\\", \\\"date\\\": \\\"Sat, 31 Dec 2016 13:22:26 GMT\\\", \\\"content-type\\\": \\\"application/x-amz-json-1.0\\\"}}}\", \"headers\": {\"Content-Type\": \"application/json\"}, \"statusCode\": \"200\"}\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws dynamodb scan \\\n        --table-name ${DYNAMO_TABLE_NAME}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n        \"Count\": 1,\n        \"Items\": [\n          {\n              \"Description\": {\n                  \"S\": \"sample\"\n              },\n              \"Name\": {\n                  \"S\": \"taro\"\n              }\n          }\n        ],\n        \"ScannedCount\": 1,\n        \"ConsumedCapacity\": null\n      }\n\n\n3.2. POST\n---------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-post.json\" \\\n        && echo ${FILE_INPUT}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat << EOF > ${FILE_INPUT}\n{\n        \"httpMethod\": \"POST\",\n        \"body\": \"{\\\"TableName\\\":\\\"microservice-http\\\",\\\"Item\\\":{\\\"Name\\\":\\\"jiro\\\",\\\"Description\\\":\\\"sample2\\\"}}\"\n}\nEOF\n\ncat ${FILE_INPUT}\n```\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\njsonlint -q ${FILE_INPUT}\n```\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n```\n\n\u7d50\u679c(\u4f8b):\n\n      200\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_OUTPUT_LAMBDA}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\"body\": \"{\\\"ResponseMetadata\\\": {\\\"RetryAttempts\\\": 0, \\\"HTTPStatusCode\\\": 200, \\\"RequestId\\\": \\\"C96O73JS0QB4NRH3U5D30JE9GRVV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"HTTPHeaders\\\": {\\\"x-amzn-requestid\\\": \\\"C96O73JS0QB4NRH3U5D30JE9GRVV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"content-length\\\": \\\"2\\\", \\\"server\\\": \\\"Server\\\", \\\"connection\\\": \\\"keep-alive\\\", \\\"x-amz-crc32\\\": \\\"2745614147\\\", \\\"date\\\": \\\"Sat, 31 Dec 2016 13:57:18 GMT\\\", \\\"content-type\\\": \\\"application/x-amz-json-1.0\\\"}}}\", \"headers\": {\"Content-Type\": \"application/json\"}, \"statusCode\": \"200\"}\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws dynamodb scan \\\n        --table-name ${DYNAMO_TABLE_NAME}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n        \"Count\": 2,\n        \"Items\": [\n          {\n              \"Description\": {\n                  \"S\": \"sample2\"\n              },\n              \"Name\": {\n                  \"S\": \"jiro\"\n              }\n          },\n          {\n              \"Description\": {\n                  \"S\": \"sample\"\n              },\n              \"Name\": {\n                  \"S\": \"taro\"\n              }\n          }\n        ],\n        \"ScannedCount\": 2,\n        \"ConsumedCapacity\": null\n      }\n\n\n3.3. DELETE\n-----------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-delete.json\" \\\n        && echo ${FILE_INPUT}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat << EOF > ${FILE_INPUT}\n{\n        \"httpMethod\": \"DELETE\",\n        \"body\": \"{\\\"TableName\\\":\\\"microservice-http\\\",\\\"Key\\\":{\\\"Name\\\":\\\"jiro\\\"}}\"\n}\nEOF\n\ncat ${FILE_INPUT}\n```\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\njsonlint -q ${FILE_INPUT}\n```\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n```\n\n\u7d50\u679c(\u4f8b):\n\n      200\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_OUTPUT_LAMBDA}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\"body\": \"{\\\"ResponseMetadata\\\": {\\\"RetryAttempts\\\": 0, \\\"HTTPStatusCode\\\": 200, \\\"RequestId\\\": \\\"R43F60O4UNN5B1FR3UKFR25R43VV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"HTTPHeaders\\\": {\\\"x-amzn-requestid\\\": \\\"R43F60O4UNN5B1FR3UKFR25R43VV4KQNSO5AEMVJF66Q9ASUAAJG\\\", \\\"content-length\\\": \\\"2\\\", \\\"server\\\": \\\"Server\\\", \\\"connection\\\": \\\"keep-alive\\\", \\\"x-amz-crc32\\\": \\\"2745614147\\\", \\\"date\\\": \\\"Sat, 31 Dec 2016 13:58:51 GMT\\\", \\\"content-type\\\": \\\"application/x-amz-json-1.0\\\"}}}\", \"headers\": {\"Content-Type\": \"application/json\"}, \"statusCode\": \"200\"}\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws dynamodb scan \\\n        --table-name ${DYNAMO_TABLE_NAME}\n```\n\n\u7d50\u679c(\u4f8b):\n\n      {\n        \"Count\": 1,\n        \"Items\": [\n          {\n              \"Description\": {\n                  \"S\": \"sample\"\n              },\n              \"Name\": {\n                  \"S\": \"taro\"\n              }\n          }\n        ],\n        \"ScannedCount\": 1,\n        \"ConsumedCapacity\": null\n      }\n\n\n\u5b8c\u4e86\n====\n", "tags": ["AWS", "aws-cli", "lambda", "APIGateway"]}