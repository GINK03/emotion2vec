{"tags": ["mbed", "Android", "iOS", "eddystone", "BLE"], "context": " More than 1 year has passed since last update.\u6628\u65e5\u3001Google\u304b\u3089\u30aa\u30fc\u30d7\u30f3\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306eBeacon\u6280\u8853\u3067\u3042\u308beddystone\u304c\u767a\u8868\u3055\u308c\u305f\u3002\nmbed\u3092\u4f7f\u3063\u3066Eddystone\u5bfe\u5fdc\u306e\u30d3\u30fc\u30b3\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u6210\u306f\u3053\u3093\u306a\u611f\u3058\n\n\u3067\u3059\u3002\n\u6bbb\u3068\u306a\u308bmain.cpp\u306f\n\nmain.cpp\n// mbed HRM1017 Eddystone\n// Programed by Kazuyuki Eguchi\n\n#include \"mbed.h\"\n#include \"BLE.h\"\n\nBLEDevice ble;\n\nstatic const uint16_t uuid16_list[]        = {0xFEAA};\n\nconst static uint8_t beaconPayload_uid[] = {\n    0xaa,\n    0xfe,\n\n    // UID\n\n    0x00, // Frame Type\n    0x00, // Ranging Data\n\n    0x01, // NID[0]\n    0x02, // NID[1]\n    0x03, // NID[2]\n    0x04, // NID[3]\n    0x05, // NID[4]\n    0x06, // NID[5]\n    0x07, // NID[6]\n    0x08, // NID[7]\n    0x09, // NID[8]\n    0x0A, // NID[9]\n\n    0x11, // BID[0] \n    0x22, // BID[1]\n    0x33, // BID[2]\n    0x44, // BID[3]\n    0x55, // BID[4]\n    0x66, // BID[5]\n    0x00, // RFU\n    0x00  // RFU\n};\n\nconst static uint8_t beaconPayload_url[] = {\n    0xaa,\n    0xfe,\n\n    // URL\n\n    0x10, // Frame Type\n    0x00, // Ranging Data\n    0x02, // URL Scheme (http:// = 0x02)\n\n    'e',\n    'g',\n    'u',\n    'c',\n    'h',\n    'i',\n    '.',\n    'j',\n    'p'\n};\n\nconst static uint8_t beaconPayload_tlm[] = {\n    0xaa,\n    0xfe,\n\n    // TLM\n\n    0x20, // Frame Type\n    0x00, // Version\n    0x01, // VBATT[0]\n    0x00, // VBATT[1]\n    0x02, // TEMP[0]\n    0x00, // TEMP[1]\n    0x03, // ADV[0]\n    0x00, // ADV[1]\n    0x00, // ADV[2]\n    0x00, // ADV[3]\n    0x04, // SEC_CNT[0]\n    0x00, // SEC_CNT[1]\n    0x00, // SEC_CNT[2]\n    0x00 // SEC_CNT[3]\n};\n\n\nint main(void)\n{\n    ble.init();\n\n    ble.accumulateAdvertisingPayload(GapAdvertisingData::BREDR_NOT_SUPPORTED | GapAdvertisingData::LE_GENERAL_DISCOVERABLE);\n\n    ble.accumulateAdvertisingPayload(GapAdvertisingData::COMPLETE_LIST_16BIT_SERVICE_IDS, (uint8_t *)uuid16_list, sizeof(uuid16_list));\n\n    // ble.accumulateAdvertisingPayload(GapAdvertisingData::SERVICE_DATA,beaconPayload_uid, sizeof(beaconPayload_uid));\n    ble.accumulateAdvertisingPayload(GapAdvertisingData::SERVICE_DATA,beaconPayload_url, sizeof(beaconPayload_url));\n    // ble.accumulateAdvertisingPayload(GapAdvertisingData::SERVICE_DATA,beaconPayload_tlm, sizeof(beaconPayload_tlm));\n\n    ble.setAdvertisingType(GapAdvertisingParams::ADV_NON_CONNECTABLE_UNDIRECTED);\n\n    ble.setAdvertisingInterval(160);\n\n    ble.startAdvertising();\n\n    for (;;) {\n        ble.waitForEvent();\n    }\n}\n\n\n\u6628\u65e5\u3001Google\u304b\u3089\u30aa\u30fc\u30d7\u30f3\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306eBeacon\u6280\u8853\u3067\u3042\u308b[eddystone](https://github.com/google/eddystone/)\u304c\u767a\u8868\u3055\u308c\u305f\u3002\nmbed\u3092\u4f7f\u3063\u3066Eddystone\u5bfe\u5fdc\u306e\u30d3\u30fc\u30b3\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u6210\u306f\u3053\u3093\u306a\u611f\u3058\n![150716-0001.png](https://qiita-image-store.s3.amazonaws.com/0/33220/85cbe4da-f41a-df76-41c7-c8b74d05c309.png)\n\n\u3067\u3059\u3002\n\n\u6bbb\u3068\u306a\u308bmain.cpp\u306f\n\n```lang:main.cpp\n// mbed HRM1017 Eddystone\n// Programed by Kazuyuki Eguchi\n\n#include \"mbed.h\"\n#include \"BLE.h\"\n\nBLEDevice ble;\n\nstatic const uint16_t uuid16_list[]        = {0xFEAA};\n                                              \nconst static uint8_t beaconPayload_uid[] = {\n    0xaa,\n    0xfe,\n    \n    // UID\n\n    0x00, // Frame Type\n    0x00, // Ranging Data\n    \n    0x01, // NID[0]\n    0x02, // NID[1]\n    0x03, // NID[2]\n    0x04, // NID[3]\n    0x05, // NID[4]\n    0x06, // NID[5]\n    0x07, // NID[6]\n    0x08, // NID[7]\n    0x09, // NID[8]\n    0x0A, // NID[9]\n    \n    0x11, // BID[0] \n    0x22, // BID[1]\n    0x33, // BID[2]\n    0x44, // BID[3]\n    0x55, // BID[4]\n    0x66, // BID[5]\n    0x00, // RFU\n    0x00  // RFU\n};\n\nconst static uint8_t beaconPayload_url[] = {\n    0xaa,\n    0xfe,\n\n    // URL\n    \n    0x10, // Frame Type\n    0x00, // Ranging Data\n    0x02, // URL Scheme (http:// = 0x02)\n    \n    'e',\n    'g',\n    'u',\n    'c',\n    'h',\n    'i',\n    '.',\n    'j',\n    'p'\n};\n\nconst static uint8_t beaconPayload_tlm[] = {\n    0xaa,\n    0xfe,\n\n    // TLM\n    \n    0x20, // Frame Type\n    0x00, // Version\n    0x01, // VBATT[0]\n    0x00, // VBATT[1]\n    0x02, // TEMP[0]\n    0x00, // TEMP[1]\n    0x03, // ADV[0]\n    0x00, // ADV[1]\n    0x00, // ADV[2]\n    0x00, // ADV[3]\n    0x04, // SEC_CNT[0]\n    0x00, // SEC_CNT[1]\n    0x00, // SEC_CNT[2]\n    0x00 // SEC_CNT[3]\n};\n\n\nint main(void)\n{\n    ble.init();\n\n    ble.accumulateAdvertisingPayload(GapAdvertisingData::BREDR_NOT_SUPPORTED | GapAdvertisingData::LE_GENERAL_DISCOVERABLE);\n    \n    ble.accumulateAdvertisingPayload(GapAdvertisingData::COMPLETE_LIST_16BIT_SERVICE_IDS, (uint8_t *)uuid16_list, sizeof(uuid16_list));\n    \n    // ble.accumulateAdvertisingPayload(GapAdvertisingData::SERVICE_DATA,beaconPayload_uid, sizeof(beaconPayload_uid));\n    ble.accumulateAdvertisingPayload(GapAdvertisingData::SERVICE_DATA,beaconPayload_url, sizeof(beaconPayload_url));\n    // ble.accumulateAdvertisingPayload(GapAdvertisingData::SERVICE_DATA,beaconPayload_tlm, sizeof(beaconPayload_tlm));\n    \n    ble.setAdvertisingType(GapAdvertisingParams::ADV_NON_CONNECTABLE_UNDIRECTED);\n\n    ble.setAdvertisingInterval(160);\n\n    ble.startAdvertising();\n\n    for (;;) {\n        ble.waitForEvent();\n    }\n}\n```\n"}