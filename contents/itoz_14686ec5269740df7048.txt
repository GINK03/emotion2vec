{"context": " More than 1 year has passed since last update.\nstarlingTemplate.as\npackage \n{\n    import starling.core.Starling;\n\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n    import flash.geom.Rectangle;\n\n    /**\n    * starling \u3064\u304b\u3046\u3068\u304d\u306e\u30b3\u30d4\u30da\u7528\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30af\u30e9\u30b9\n    */\n    public class StarlingSample extends Sprite\n    {\n        private var _starling : Starling;\n        public function StarlingSample()\n        {\n            if(stage) _initialize(null); \n            else  addEventListener(Event.ADDED_TO_STAGE, _initialize);\n\n        }\n\n        private function _initialize(event : Event) : void\n        {\n            removeEventListener(Event.ADDED_TO_STAGE, _initialize);\n            stage.scaleMode = StageScaleMode.NO_SCALE;\n            stage.align = StageAlign.TOP_LEFT;\n\n            this.mouseEnabled = false;\n            this.mouseChildren = false;\n            this.loaderInfo.addEventListener(Event.COMPLETE, loaderInfo_completeHandler);\n        }\n\n\n\n        private function loaderInfo_completeHandler(event : Event) : void\n        {\n            Starling.handleLostContext = true;\n            Starling.multitouchEnabled = false;\n\n            _starling = new Starling(Main, stage);\n            _starling.enableErrorChecking = true;\n            _starling.start();\n\n            this.stage.addEventListener(Event.RESIZE, stage_resizeHandler, false, int.MAX_VALUE, true);\n            this.stage.addEventListener(Event.DEACTIVATE, stage_deactivateHandler, false, 0, true);\n        }\n\n        private function stage_resizeHandler(event : Event) : void\n        {\n            _starling.stage.stageWidth = stage.stageWidth;\n            _starling.stage.stageHeight = stage.stageHeight;\n\n            const viewPort : Rectangle = _starling.viewPort;\n            viewPort.width = stage.stageWidth;\n            viewPort.height = stage.stageHeight;\n            try {\n                _starling.viewPort = viewPort;\n            }\n            catch(error : Error) {\n            }\n        }\n\n        private function stage_deactivateHandler(event : Event) : void\n        {\n           _starling.stop();\n            stage.addEventListener(Event.ACTIVATE, stage_activateHandler, false, 0, true);\n        }\n\n        private function stage_activateHandler(event : Event) : void\n        {\n            stage.removeEventListener(Event.ACTIVATE, stage_activateHandler);\n            _starling.start();\n        }\n    }\n}\n\n\n\n```as3:starlingTemplate.as\npackage \n{\n    import starling.core.Starling;\n\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n    import flash.geom.Rectangle;\n\n    /**\n    * starling \u3064\u304b\u3046\u3068\u304d\u306e\u30b3\u30d4\u30da\u7528\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30af\u30e9\u30b9\n    */\n    public class StarlingSample extends Sprite\n    {\n        private var _starling : Starling;\n        public function StarlingSample()\n        {\n            if(stage) _initialize(null); \n            else  addEventListener(Event.ADDED_TO_STAGE, _initialize);\n            \n        }\n\n        private function _initialize(event : Event) : void\n        {\n            removeEventListener(Event.ADDED_TO_STAGE, _initialize);\n            stage.scaleMode = StageScaleMode.NO_SCALE;\n            stage.align = StageAlign.TOP_LEFT;\n\n            this.mouseEnabled = false;\n            this.mouseChildren = false;\n            this.loaderInfo.addEventListener(Event.COMPLETE, loaderInfo_completeHandler);\n        }\n\n       \n\n        private function loaderInfo_completeHandler(event : Event) : void\n        {\n            Starling.handleLostContext = true;\n            Starling.multitouchEnabled = false;\n\n            _starling = new Starling(Main, stage);\n            _starling.enableErrorChecking = true;\n            _starling.start();\n\n            this.stage.addEventListener(Event.RESIZE, stage_resizeHandler, false, int.MAX_VALUE, true);\n            this.stage.addEventListener(Event.DEACTIVATE, stage_deactivateHandler, false, 0, true);\n        }\n\n        private function stage_resizeHandler(event : Event) : void\n        {\n            _starling.stage.stageWidth = stage.stageWidth;\n            _starling.stage.stageHeight = stage.stageHeight;\n\n            const viewPort : Rectangle = _starling.viewPort;\n            viewPort.width = stage.stageWidth;\n            viewPort.height = stage.stageHeight;\n            try {\n                _starling.viewPort = viewPort;\n            }\n            catch(error : Error) {\n            }\n        }\n\n        private function stage_deactivateHandler(event : Event) : void\n        {\n           _starling.stop();\n            stage.addEventListener(Event.ACTIVATE, stage_activateHandler, false, 0, true);\n        }\n\n        private function stage_activateHandler(event : Event) : void\n        {\n            stage.removeEventListener(Event.ACTIVATE, stage_activateHandler);\n            _starling.start();\n        }\n    }\n}\n```\n", "tags": ["ActionScript"]}