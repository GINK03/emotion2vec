{"context": "\n\u52d5\u4f5c\u78ba\u8a8d\nC++ Builder XE4\n\n\n\u30d9\u30fc\u30b9 http://qiita.com/7of9/items/5d0117a0802cca97f5f9\n\u4e0a\u8a18\u306e\u30e1\u30fc\u30eb\u51e6\u7406\u306b\u5bfe\u3057\u3066\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u3064\u3051\u305f\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\n\u53c2\u8003 http://www.gesource.jp/programming/bcb/97.html\n\n\u5909\u66f4\u7b87\u6240\n\u4ee5\u4e0b\u306e#if 1 // attach\u306e\u51e6\u7406\u304c\u30d5\u30a1\u30a4\u30eb\u6dfb\u4ed8\u306b\u5fc5\u8981\u306b\u306a\u3063\u305f\u51e6\u7406\n\ninclude\u8ffd\u52a0\n#if 1 // attach\n#include <IdAttachmentFile.hpp>\n#endif\n\n\nContentType\u3092\"multipart/mixed\"\u306b\u3059\u308b\n#if 1 // attach\n    msg->ContentType = \"multipart/mixed\";\n#else\n    msg->ContentType = \"text/plain\";\n#endif\n\n\n\u30d5\u30a1\u30a4\u30eb\u6dfb\u4ed8\u51e6\u7406\n#if 1 // attach\n    TIdAttachmentFile *attmnt;\n    attmnt = new TIdAttachmentFile(msg->MessageParts, L\"tmp.jpg\");\n    attmnt->FileName = L\"tmp.jpg\";\n    attmnt->ContentType = L\"image/jpeg\";\n#endif\n\n\n\u624b\u4ed5\u821e\u3044\n#if 1 // attach\n    delete attmnt;\n#endif\n\n\n\u30b3\u30fc\u30c9\n\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u3068\u306a\u308b\u3002\n\nUnit1.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n// \u30e1\u30fc\u30eb\u9001\u4fe1\u7528\n#include <Idglobal.hpp>\n#include <IdSMTP.hpp>\n#include <IdSSLOpenSSL.hpp>\n// POP before SMTP\n#include <IdPOP3.hpp>\n\n// \u30e1\u30fc\u30eb\u672c\u6587\u306e\u6587\u5b57\u5316\u3051\u306e\u5bfe\u5fdc\n#include <IdHeaderCoder2022JP.hpp>\n#pragma link \"IdHeaderCoder2022JP\"\n\n#include \"Unit1.h\"\n\n#include \"mailInfo.h\" // \u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e\u8a2d\u5b9a\n\n\n#if 1 // attach\n#include <IdAttachmentFile.hpp>\n#endif\n\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n    : TForm(Owner)\n{\n}\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::sendTestMailSMTP()\n{\n    // 1. POP before SMTP\n    TIdPOP3 *idPop3 = new TIdPOP3();\n    idPop3->Host = kPopServerAdr;\n    idPop3->Port = kPopPort; // int\n    idPop3->Username = kMyUserName;\n    idPop3->Password = kMyPassword;\n\n    // command is not valid in this state\n    TIdSSLIOHandlerSocketOpenSSL *idSSL = new TIdSSLIOHandlerSocketOpenSSL();\n    if (useTLS) {\n        idSSL->Host = kPopServerAdr;\n        idSSL->Port = kPopPort;\n        idSSL->Destination = idSSL->Host + L\":\" + IntToStr(kPopPort);\n        idPop3->IOHandler = idSSL;\n        idPop3->UseTLS = utUseImplicitTLS;\n    }\n\n    try {\n        idPop3->Connect();\n        idPop3->Disconnect();\n    } catch (const Exception &e) {\n        String msg = e.Message;\n        delete idPop3;\n        delete idSSL;\n        return; // fail\n    }\n    delete idSSL;\n    delete idPop3;\n\n    // 2. sending e-mail using SMTP\n\n    TIdSMTP* smtp = new TIdSMTP(NULL);\n    TIdSSLIOHandlerSocketOpenSSL * sslHandler = new TIdSSLIOHandlerSocketOpenSSL(NULL);\n\n    smtp->Host = kSmtpHost;\n//  sslHandler->Host = smtp->Host;\n//  sslHandler->Port = smtp->Port;\n//  sslHandler->Destination = sslHandler->Host + L\":\"\n//      + IntToStr(sslHandler->Port);\n    smtp->IOHandler = sslHandler;\n    smtp->Username = kMyUserName;\n    smtp->Password = kMyPassword;\n    smtp->Port = 587;\n    smtp->UseTLS = utUseExplicitTLS;\n\n    try {\n        smtp->Connect();\n    } catch (const Exception &e) {\n        String msg = e.Message;\n    }\n\n\n    TIdMessage* msg = new TIdMessage(NULL);\n\n    msg->OnInitializeISO = IdMessage1InitializeISO;\n#if 1 // attach\n    msg->ContentType = \"multipart/mixed\";\n#else\n    msg->ContentType = \"text/plain\";\n#endif\n    msg->CharSet = \"ISO-2022-JP\";\n    msg->ContentTransferEncoding = \"BASE64\";\n    msg->From->Name = kFromName;\n    msg->From->Address = kFromAddr;\n    msg->Recipients->EMailAddresses = kRecipients;\n\n    // TODO: \u4ef6\u540d\u306f\u65e5\u672c\u8a9e\u3060\u3068\u6587\u5b57\u5316\u3051\u3059\u308b\n    msg->Subject = \"test mail from XE4 on \" + Now().FormatString(L\"hh:nn:ss\");\n\n    msg->Body->Text = \"\u30c6\u30b9\u30c8\u30e1\u30fc\u30eb\u306e\u672c\u6587\u3067\u3059\";\n\n#if 1 // attach\n    TIdAttachmentFile *attmnt;\n    attmnt = new TIdAttachmentFile(msg->MessageParts, L\"tmp.jpg\");\n    attmnt->FileName = L\"tmp.jpg\";\n    attmnt->ContentType = L\"image/jpeg\";\n#endif\n\n    try {\n        smtp->Send(msg);\n    } catch (const Exception &e) {\n        String msg = e.Message;\n    }\n\n    smtp->Disconnect();\n#if 1 // attach\n    delete attmnt;\n#endif\n    delete msg;\n    delete smtp;\n}\n\nvoid __fastcall TForm1::IdMessage1InitializeISO(System::WideChar &VHeaderEncoding, UnicodeString &VCharSet)\n{\n    VHeaderEncoding = L'B';\n    VCharSet = \"ISO-2022-JP\";\n}\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n    sendTestMailSMTP();\n}\n//---------------------------------------------------------------------------\n\n\n\nUnit1.h\n//---------------------------------------------------------------------------\n\n#ifndef Unit1H\n#define Unit1H\n//---------------------------------------------------------------------------\n#include <System.Classes.hpp>\n#include <Vcl.Controls.hpp>\n#include <Vcl.StdCtrls.hpp>\n#include <Vcl.Forms.hpp>\n//---------------------------------------------------------------------------\nclass TForm1 : public TForm\n{\n__published:    // IDE \u3067\u7ba1\u7406\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n    TButton *Button1;\n    void __fastcall Button1Click(TObject *Sender);\nprivate:    // \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n    void __fastcall TForm1::IdMessage1InitializeISO(System::WideChar &VHeaderEncoding, UnicodeString &VCharSet);\n    void __fastcall TForm1::sendTestMailSMTP();\npublic:     // \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n    __fastcall TForm1(TComponent* Owner);\n};\n//---------------------------------------------------------------------------\nextern PACKAGE TForm1 *Form1;\n//---------------------------------------------------------------------------\n#endif\n\n\n\n\u5fc5\u8981\u306a\u30d8\u30c3\u30c0\n\u4e0a\u8a18\u306e\u5b9f\u884c\u306b\u306f mailInfo.h \u304c\u5fc5\u8981\nmailInfo.h\u306b\u306f\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u8a18\u8f09\u3059\u308b\u3002\n#ifndef MAIL_INFO_H\n#define MAIL_INFO_H\n\nString kMyUserName = L\"yamada@xxx.com\";\nString kSmtpHost = L\"smtp.xxx.com\";\nString kPopServerAdr = L\"pop.xxx.com\";\nint kPopPort = 995;\nbool useTLS = true;\n\nString kFromName = L\"yamada\"; // e.g. yamada\nString kFromAddr = kMyUserName; // \nString kRecipients = \"tanii@xxx.com\"; // \u9001\u4fe1\u5148\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\nString kMyPassword = L\"1234567\"; \n#endif\n\n\n\u6dfb\u4ed8\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\n\u9069\u5f53\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3066\u4fdd\u5b58\u3057\u305ftmp.jpg\u30d5\u30a1\u30a4\u30eb\u3092.exe\u3068\u540c\u3058\u30d5\u30a9\u30eb\u30c0\u306b\u7f6e\u304f\u3002\n\n\u5404\u7a2e\u30d5\u30a1\u30a4\u30eb\u306eContent-Type\njpg\u4ee5\u5916\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6dfb\u4ed8\u3059\u308b\u5834\u5408\u306eContentType\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306b\u6574\u7406\u3055\u308c\u3066\u3044\u308b\u3002\nhttp://www.kyoto-su.ac.jp/ccinfo/use_web/mine_contenttype/\n\n\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6dfb\u4ed8\n(\u8ffd\u8a18 2016/07/07)\n\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6dfb\u4ed8\u3059\u308b\u306e\u306f\u3069\u3046\u3057\u305f\u3089\u3044\u3044\u304b\u3068\u3044\u3046\u3068\u3001\u4ee5\u4e0b\u3088\u3046\u306b\u3059\u308c\u3070\u3044\u3044\u3088\u3046\u3060\u3002\n\u9001\u4fe1\u5f8c\u306battmnt1\u3068attmnt2\u3092delete\u3059\u308b\u3053\u3068\u3002\n#if 1 // attach\n    TIdAttachmentFile *attmnt1;\n    attmnt1 = new TIdAttachmentFile(msg->MessageParts, L\"tmp1.jpg\");\n    attmnt1->FileName = L\"tmp1.jpg\";\n    attmnt1->ContentType = L\"image/jpeg\";\n\n    TIdAttachmentFile *attmnt2;\n    attmnt2 = new TIdAttachmentFile(msg->MessageParts, L\"tmp2.jpg\");\n    attmnt2->FileName = L\"tmp2.jpg\";\n    attmnt2->ContentType = L\"image/jpeg\";\n#endif\n\n```txt:\u52d5\u4f5c\u78ba\u8a8d\nC++ Builder XE4\n```\n\n\u30d9\u30fc\u30b9 http://qiita.com/7of9/items/5d0117a0802cca97f5f9\n\n\u4e0a\u8a18\u306e\u30e1\u30fc\u30eb\u51e6\u7406\u306b\u5bfe\u3057\u3066\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u3064\u3051\u305f\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\n\n\u53c2\u8003 http://www.gesource.jp/programming/bcb/97.html\n\n## \u5909\u66f4\u7b87\u6240\n\n\u4ee5\u4e0b\u306e`#if 1 // attach`\u306e\u51e6\u7406\u304c\u30d5\u30a1\u30a4\u30eb\u6dfb\u4ed8\u306b\u5fc5\u8981\u306b\u306a\u3063\u305f\u51e6\u7406\n\n### include\u8ffd\u52a0\n\n```\n#if 1 // attach\n#include <IdAttachmentFile.hpp>\n#endif\n```\n\n### ContentType\u3092\"multipart/mixed\"\u306b\u3059\u308b\n\n```\n#if 1 // attach\n\tmsg->ContentType = \"multipart/mixed\";\n#else\n\tmsg->ContentType = \"text/plain\";\n#endif\n```\n\n### \u30d5\u30a1\u30a4\u30eb\u6dfb\u4ed8\u51e6\u7406\n\n```\n#if 1 // attach\n\tTIdAttachmentFile *attmnt;\n\tattmnt = new TIdAttachmentFile(msg->MessageParts, L\"tmp.jpg\");\n\tattmnt->FileName = L\"tmp.jpg\";\n\tattmnt->ContentType = L\"image/jpeg\";\n#endif\n```\n\n### \u624b\u4ed5\u821e\u3044\n\n```\n#if 1 // attach\n\tdelete attmnt;\n#endif\n```\n\n## \u30b3\u30fc\u30c9\n\n\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u3068\u306a\u308b\u3002\n\n```Unit1.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n// \u30e1\u30fc\u30eb\u9001\u4fe1\u7528\n#include <Idglobal.hpp>\n#include <IdSMTP.hpp>\n#include <IdSSLOpenSSL.hpp>\n// POP before SMTP\n#include <IdPOP3.hpp>\n\n// \u30e1\u30fc\u30eb\u672c\u6587\u306e\u6587\u5b57\u5316\u3051\u306e\u5bfe\u5fdc\n#include <IdHeaderCoder2022JP.hpp>\n#pragma link \"IdHeaderCoder2022JP\"\n\n#include \"Unit1.h\"\n\n#include \"mailInfo.h\" // \u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e\u8a2d\u5b9a\n\n\n#if 1 // attach\n#include <IdAttachmentFile.hpp>\n#endif\n\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n\t: TForm(Owner)\n{\n}\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::sendTestMailSMTP()\n{\n    // 1. POP before SMTP\n\tTIdPOP3 *idPop3 = new TIdPOP3();\n\tidPop3->Host = kPopServerAdr;\n\tidPop3->Port = kPopPort; // int\n    idPop3->Username = kMyUserName;\n\tidPop3->Password = kMyPassword;\n\n    // command is not valid in this state\n\tTIdSSLIOHandlerSocketOpenSSL *idSSL = new TIdSSLIOHandlerSocketOpenSSL();\n    if (useTLS) {\n        idSSL->Host = kPopServerAdr;\n        idSSL->Port = kPopPort;\n        idSSL->Destination = idSSL->Host + L\":\" + IntToStr(kPopPort);\n        idPop3->IOHandler = idSSL;\n        idPop3->UseTLS = utUseImplicitTLS;\n    }\n\n    try {\n        idPop3->Connect();\n        idPop3->Disconnect();\n    } catch (const Exception &e) {\n        String msg = e.Message;\n        delete idPop3;\n        delete idSSL;\n        return; // fail\n    }\n    delete idSSL;\n    delete idPop3;\n\n    // 2. sending e-mail using SMTP\n\n    TIdSMTP* smtp = new TIdSMTP(NULL);\n    TIdSSLIOHandlerSocketOpenSSL * sslHandler = new TIdSSLIOHandlerSocketOpenSSL(NULL);\n\n    smtp->Host = kSmtpHost;\n//  sslHandler->Host = smtp->Host;\n//  sslHandler->Port = smtp->Port;\n//  sslHandler->Destination = sslHandler->Host + L\":\"\n//      + IntToStr(sslHandler->Port);\n    smtp->IOHandler = sslHandler;\n    smtp->Username = kMyUserName;\n    smtp->Password = kMyPassword;\n    smtp->Port = 587;\n    smtp->UseTLS = utUseExplicitTLS;\n\n\ttry {\n\t\tsmtp->Connect();\n\t} catch (const Exception &e) {\n\t\tString msg = e.Message;\n\t}\n\n\n\tTIdMessage* msg = new TIdMessage(NULL);\n\n\tmsg->OnInitializeISO = IdMessage1InitializeISO;\n#if 1 // attach\n\tmsg->ContentType = \"multipart/mixed\";\n#else\n\tmsg->ContentType = \"text/plain\";\n#endif\n\tmsg->CharSet = \"ISO-2022-JP\";\n\tmsg->ContentTransferEncoding = \"BASE64\";\n\tmsg->From->Name = kFromName;\n\tmsg->From->Address = kFromAddr;\n\tmsg->Recipients->EMailAddresses = kRecipients;\n\n\t// TODO: \u4ef6\u540d\u306f\u65e5\u672c\u8a9e\u3060\u3068\u6587\u5b57\u5316\u3051\u3059\u308b\n\tmsg->Subject = \"test mail from XE4 on \" + Now().FormatString(L\"hh:nn:ss\");\n\n\tmsg->Body->Text = \"\u30c6\u30b9\u30c8\u30e1\u30fc\u30eb\u306e\u672c\u6587\u3067\u3059\";\n\n#if 1 // attach\n\tTIdAttachmentFile *attmnt;\n\tattmnt = new TIdAttachmentFile(msg->MessageParts, L\"tmp.jpg\");\n\tattmnt->FileName = L\"tmp.jpg\";\n\tattmnt->ContentType = L\"image/jpeg\";\n#endif\n\n\ttry {\n        smtp->Send(msg);\n    } catch (const Exception &e) {\n        String msg = e.Message;\n    }\n\n\tsmtp->Disconnect();\n#if 1 // attach\n\tdelete attmnt;\n#endif\n\tdelete msg;\n    delete smtp;\n}\n\nvoid __fastcall TForm1::IdMessage1InitializeISO(System::WideChar &VHeaderEncoding, UnicodeString &VCharSet)\n{\n    VHeaderEncoding = L'B';\n    VCharSet = \"ISO-2022-JP\";\n}\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n\tsendTestMailSMTP();\n}\n//---------------------------------------------------------------------------\n```\n\n```Unit1.h\n//---------------------------------------------------------------------------\n\n#ifndef Unit1H\n#define Unit1H\n//---------------------------------------------------------------------------\n#include <System.Classes.hpp>\n#include <Vcl.Controls.hpp>\n#include <Vcl.StdCtrls.hpp>\n#include <Vcl.Forms.hpp>\n//---------------------------------------------------------------------------\nclass TForm1 : public TForm\n{\n__published:\t// IDE \u3067\u7ba1\u7406\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\tTButton *Button1;\n\tvoid __fastcall Button1Click(TObject *Sender);\nprivate:\t// \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n\tvoid __fastcall TForm1::IdMessage1InitializeISO(System::WideChar &VHeaderEncoding, UnicodeString &VCharSet);\n\tvoid __fastcall TForm1::sendTestMailSMTP();\npublic:\t\t// \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n\t__fastcall TForm1(TComponent* Owner);\n};\n//---------------------------------------------------------------------------\nextern PACKAGE TForm1 *Form1;\n//---------------------------------------------------------------------------\n#endif\n```\n\n## \u5fc5\u8981\u306a\u30d8\u30c3\u30c0\n\n\u4e0a\u8a18\u306e\u5b9f\u884c\u306b\u306f mailInfo.h \u304c\u5fc5\u8981\n\nmailInfo.h\u306b\u306f\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u8a18\u8f09\u3059\u308b\u3002\n\n```\n#ifndef MAIL_INFO_H\n#define MAIL_INFO_H\n\nString kMyUserName = L\"yamada@xxx.com\";\nString kSmtpHost = L\"smtp.xxx.com\";\nString kPopServerAdr = L\"pop.xxx.com\";\nint kPopPort = 995;\nbool useTLS = true;\n\nString kFromName = L\"yamada\"; // e.g. yamada\nString kFromAddr = kMyUserName; // \nString kRecipients = \"tanii@xxx.com\"; // \u9001\u4fe1\u5148\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\nString kMyPassword = L\"1234567\"; \n#endif\n```\n\n## \u6dfb\u4ed8\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\n\n\u9069\u5f53\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3066\u4fdd\u5b58\u3057\u305ftmp.jpg\u30d5\u30a1\u30a4\u30eb\u3092.exe\u3068\u540c\u3058\u30d5\u30a9\u30eb\u30c0\u306b\u7f6e\u304f\u3002\n\n## \u5404\u7a2e\u30d5\u30a1\u30a4\u30eb\u306eContent-Type\n\njpg\u4ee5\u5916\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6dfb\u4ed8\u3059\u308b\u5834\u5408\u306eContentType\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306b\u6574\u7406\u3055\u308c\u3066\u3044\u308b\u3002\n\nhttp://www.kyoto-su.ac.jp/ccinfo/use_web/mine_contenttype/\n\n## \u8907\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6dfb\u4ed8\n(\u8ffd\u8a18 2016/07/07)\n\n\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6dfb\u4ed8\u3059\u308b\u306e\u306f\u3069\u3046\u3057\u305f\u3089\u3044\u3044\u304b\u3068\u3044\u3046\u3068\u3001\u4ee5\u4e0b\u3088\u3046\u306b\u3059\u308c\u3070\u3044\u3044\u3088\u3046\u3060\u3002\n\u9001\u4fe1\u5f8c\u306battmnt1\u3068attmnt2\u3092delete\u3059\u308b\u3053\u3068\u3002\n\n```\n#if 1 // attach\n\tTIdAttachmentFile *attmnt1;\n\tattmnt1 = new TIdAttachmentFile(msg->MessageParts, L\"tmp1.jpg\");\n\tattmnt1->FileName = L\"tmp1.jpg\";\n\tattmnt1->ContentType = L\"image/jpeg\";\n\n\tTIdAttachmentFile *attmnt2;\n\tattmnt2 = new TIdAttachmentFile(msg->MessageParts, L\"tmp2.jpg\");\n\tattmnt2->FileName = L\"tmp2.jpg\";\n\tattmnt2->ContentType = L\"image/jpeg\";\n#endif\n```\n\n", "tags": ["cppBuilder", "pop3", "mail", "mime"]}