{"tags": ["ADS7828", "fabo", "adc", "IoT", "I2C"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\nADS7828\n\nADS7828 Datasheet\n\nADS7828\u3067\u3067\u304d\u308b\u4e8b\nADS7828\u306f\u3001I2C\u306b\u5bfe\u5fdc\u3057\u305f8CH\u306eAnalog to Digital Converter\u3067\u3059\u3002 8CH\u304b\u308912Bit(0\u301c4095)\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\nADS7828\u306ePIN\u30ec\u30a4\u30a2\u30a6\u30c8\n\n\nADS7828\u306eSlave\u30a2\u30c9\u30ec\u30b9\nADS7828\u306eSlave\u30a2\u30c9\u30ec\u30b9\u306f\u3001A0, A1\u306eHigh/Low\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u30014\u901a\u308a\u306e\u8a2d\u5b9a\u304c\u3067\u304d\u308b\u3002\n\n\n\n\u5b9f\u88c5\u4f8b\n\n\nADS7828\u3092Arduino\u304b\u3089\u64cd\u4f5c\n\n\u5404\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n\nsample_ads7828.pde\n#include <Wire.h>\n\n#define DEVICE_ADDR (0x48) // ADS7828\u306e\u30b9\u30ec\u30fc\u30d6\u30c7\u30d0\u30a4\u30b9\u306e\u30a2\u30c9\u30ec\u30b9\n#define ADC_CH0 (0x8C) // CH1\n#define ADC_CH1 (0xCC) // CH2\n#define ADC_CH2 (0x9C) // CH3\n#define ADC_CH3 (0xDC) // CH4\n#define ADC_CH4 (0xAC) // CH5\n#define ADC_CH5 (0xEC) // CH6\n#define ADC_CH6 (0xBC) // CH7\n#define ADC_CH7 (0xFC) // CH8\n\n// CH\u306e\u914d\u5217\nbyte ADC_CHS[8] = {ADC_CH0, ADC_CH1, ADC_CH2, ADC_CH3,\n                      ADC_CH4, ADC_CH5, ADC_CH6, ADC_CH7};\n\n// \u53d6\u5f97\u3057\u305f\u5024\u3092\u683c\u7d0d\u3059\u308b\u30d0\u30c3\u30d5\u30a1\nbyte adc_buff[2];\n\nvoid setup()\n{\n  Serial.begin(9600); // \u30b7\u30ea\u30a2\u30eb\u306e\u958b\u59cb\u30c7\u30d0\u30c3\u30af\u7528\n  Wire.begin();       // I2C\u306e\u958b\u59cb\n}\n\nvoid loop()\n{ \n  // CH0-CH7\u306e\u5024\u3092\u8aad\u307f\u8fbc\u3080(0-4095)\n  for(int i = 0; i < 8; i++){\n    readI2c(ADC_CHS[i], 2, adc_buff);\n    int value = (((int)adc_buff[0]) << 8 ) | adc_buff[1];\n    Serial.print(\"ch\");\n    Serial.print(i);\n    Serial.print(\":\");\n    Serial.println(value);\n  }\n  Serial.println(\"-------------\");\n\n  delay(1000);\n}\n\n// I2C\u3078\u306e\u66f8\u304d\u8fbc\u307f\nvoid writeI2c(byte register_addr, byte value) {\n  Wire.beginTransmission(DEVICE_ADDR);  \n  Wire.write(register_addr);         \n  Wire.write(value);                 \n  Wire.endTransmission();        \n}\n\n// I2C\u3078\u306e\u8aad\u307f\u8fbc\u307f\nvoid readI2c(byte register_addr, int num, byte buffer[]) {\n  Wire.beginTransmission(DEVICE_ADDR); \n  Wire.write(register_addr);           \n  Wire.endTransmission();         \n\n  Wire.beginTransmission(DEVICE_ADDR); \n  Wire.requestFrom(DEVICE_ADDR, num);   \n\n  int i = 0;\n  while(Wire.available())        \n  { \n    buffer[i] = Wire.read();   \n    i++;\n  }\n  Wire.endTransmission();         \n}\n\n\n\n# ADS7828\n\n![ads7828.jpg](https://qiita-image-store.s3.amazonaws.com/0/63450/80736fd3-bbad-96fc-db77-eb9b6cc8f110.jpeg)\n\n[ADS7828 Datasheet](http://www.tij.co.jp/jp/lit/ds/symlink/ads7828.pdf)\n\n## ADS7828\u3067\u3067\u304d\u308b\u4e8b\nADS7828\u306f\u3001I2C\u306b\u5bfe\u5fdc\u3057\u305f8CH\u306eAnalog to Digital Converter\u3067\u3059\u3002 8CH\u304b\u308912Bit(0\u301c4095)\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n<img width=\"633\" alt=\"ads7828.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/63450/961706cc-7770-a8d4-0b1a-1942c35a75da.png\">\n\n## ADS7828\u306ePIN\u30ec\u30a4\u30a2\u30a6\u30c8\n\n<img width=\"706\" alt=\"ads7282_002.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/63450/16a7effc-9219-59d7-bfe4-27729d9fe869.png\">\n\n## ADS7828\u306eSlave\u30a2\u30c9\u30ec\u30b9\nADS7828\u306eSlave\u30a2\u30c9\u30ec\u30b9\u306f\u3001A0, A1\u306eHigh/Low\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u30014\u901a\u308a\u306e\u8a2d\u5b9a\u304c\u3067\u304d\u308b\u3002\n\n<img width=\"564\" alt=\"adc7828_slave.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/63450/61f3dd8f-d01e-c24f-0f02-2472766560a2.png\">\n\n<img width=\"475\" alt=\"adc7828_slave2.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/63450/72a3b5fa-745a-a4fc-96f7-050f91ac08e3.png\">\n\n## \u5b9f\u88c5\u4f8b\n\n<img width=\"719\" alt=\"ads7828_sample.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/63450/d63a5bf2-3d9d-bf44-7884-f29f5fdb1ddc.png\">\n\n## ADS7828\u3092Arduino\u304b\u3089\u64cd\u4f5c\n\n### \u5404\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n\n```c:sample_ads7828.pde\n#include <Wire.h>\n\n#define DEVICE_ADDR (0x48) // ADS7828\u306e\u30b9\u30ec\u30fc\u30d6\u30c7\u30d0\u30a4\u30b9\u306e\u30a2\u30c9\u30ec\u30b9\n#define ADC_CH0 (0x8C) // CH1\n#define ADC_CH1 (0xCC) // CH2\n#define ADC_CH2 (0x9C) // CH3\n#define ADC_CH3 (0xDC) // CH4\n#define ADC_CH4 (0xAC) // CH5\n#define ADC_CH5 (0xEC) // CH6\n#define ADC_CH6 (0xBC) // CH7\n#define ADC_CH7 (0xFC) // CH8\n\n// CH\u306e\u914d\u5217\nbyte ADC_CHS[8] = {ADC_CH0, ADC_CH1, ADC_CH2, ADC_CH3,\n                      ADC_CH4, ADC_CH5, ADC_CH6, ADC_CH7};\n\n// \u53d6\u5f97\u3057\u305f\u5024\u3092\u683c\u7d0d\u3059\u308b\u30d0\u30c3\u30d5\u30a1\nbyte adc_buff[2];\n\nvoid setup()\n{\n  Serial.begin(9600); // \u30b7\u30ea\u30a2\u30eb\u306e\u958b\u59cb\u30c7\u30d0\u30c3\u30af\u7528\n  Wire.begin();       // I2C\u306e\u958b\u59cb\n}\n\nvoid loop()\n{ \n  // CH0-CH7\u306e\u5024\u3092\u8aad\u307f\u8fbc\u3080(0-4095)\n  for(int i = 0; i < 8; i++){\n    readI2c(ADC_CHS[i], 2, adc_buff);\n    int value = (((int)adc_buff[0]) << 8 ) | adc_buff[1];\n    Serial.print(\"ch\");\n    Serial.print(i);\n    Serial.print(\":\");\n    Serial.println(value);\n  }\n  Serial.println(\"-------------\");\n  \n  delay(1000);\n}\n\n// I2C\u3078\u306e\u66f8\u304d\u8fbc\u307f\nvoid writeI2c(byte register_addr, byte value) {\n  Wire.beginTransmission(DEVICE_ADDR);  \n  Wire.write(register_addr);         \n  Wire.write(value);                 \n  Wire.endTransmission();        \n}\n\n// I2C\u3078\u306e\u8aad\u307f\u8fbc\u307f\nvoid readI2c(byte register_addr, int num, byte buffer[]) {\n  Wire.beginTransmission(DEVICE_ADDR); \n  Wire.write(register_addr);           \n  Wire.endTransmission();         \n\n  Wire.beginTransmission(DEVICE_ADDR); \n  Wire.requestFrom(DEVICE_ADDR, num);   \n\n  int i = 0;\n  while(Wire.available())        \n  { \n    buffer[i] = Wire.read();   \n    i++;\n  }\n  Wire.endTransmission();         \n}\n```\n\n![adc7828_serial.png](https://qiita-image-store.s3.amazonaws.com/0/63450/603d3254-57d1-61df-2d01-2921b34bcf28.png)\n"}