{"context": " More than 1 year has passed since last update.\u554f\u984c\u306f\u3053\u3061\u3089\u3002\nhttp://nabetani.sakura.ne.jp/hena/ord20meetime/\ndef solve(q)\n  sch = 'o'*(8*60)\n  sch_i = 'o'*(8*60)\n  sch_j = 'o'*(8*60)\n  sch_z = 'x'*(8*60)\n  q.split(',').each{|s|\n    m = s[0]\n    st,ed=s[1..-1].split('-').map(&:to_i).map{|e| (e / 100 - 10) * 60 + e % 100}.map{|e| e < 0 ? 0 : e}\n    (st...ed).each{|i|\n      break if i >= (8*60)\n      case m\n      when 'I'\n        sch_i[i] = 'x'\n      when 'J'\n        sch_j[i] = 'x'\n      when 'Z'\n        sch_z[i] = 'o'\n      else\n        sch[i] = 'x'\n      end\n    }\n  }\n  sch.size.times{|i|\n    sch[i] = 'x' if sch_z[i] == 'x'\n  }\n  st_i = 0\n  while(st_i < 8*60 - 60)\n    start = sch.index('o'*60)\n    break if start.nil?\n    if sch_i[start..-1].index('o'*60) == 0 or sch_j[start..-1].index('o'*60) == 0\n      start += st_i\n      return \"%02d%02d-%02d%02d\"%[start/60+10,start%60,start/60+1+10,start%60] \n    end\n    st_i +=  (start+1)\n    sch = sch[start+1..-1]\n    sch_i = sch_i[start+1..-1]\n    sch_j = sch_j[start+1..-1]\n  end\n  '-'\nend\n\nDATA.readlines.each do |line|\n  no,q,a = line.chop.split(/\\s+/)\n  ans = solve(q)\n  print no + \"\\t\"\n  print ans\n  puts ans == a ? 'o' : 'x'\nend\n__END__\n0   A1050-1130,B1400-1415,I1000-1400,I1600-1800,J1100-1745,Z1400-1421,Z1425-1800    1425-1525\n1   A1000-1200,B1300-1800,Z1000-1215,Z1230-1800 -\n2   Z0800-2200  1000-1100\n3   A1000-1700,Z0800-2200   1700-1800\n4   A1000-1701,Z0800-2200   -\n5   A1000-1130,B1230-1800,Z0800-2200    1130-1230\n\n\u554f\u984c\u306f\u3053\u3061\u3089\u3002\nhttp://nabetani.sakura.ne.jp/hena/ord20meetime/\n\n```rb\ndef solve(q)\n  sch = 'o'*(8*60)\n  sch_i = 'o'*(8*60)\n  sch_j = 'o'*(8*60)\n  sch_z = 'x'*(8*60)\n  q.split(',').each{|s|\n    m = s[0]\n    st,ed=s[1..-1].split('-').map(&:to_i).map{|e| (e / 100 - 10) * 60 + e % 100}.map{|e| e < 0 ? 0 : e}\n    (st...ed).each{|i|\n      break if i >= (8*60)\n      case m\n      when 'I'\n        sch_i[i] = 'x'\n      when 'J'\n        sch_j[i] = 'x'\n      when 'Z'\n        sch_z[i] = 'o'\n      else\n        sch[i] = 'x'\n      end\n    }\n  }\n  sch.size.times{|i|\n    sch[i] = 'x' if sch_z[i] == 'x'\n  }\n  st_i = 0\n  while(st_i < 8*60 - 60)\n    start = sch.index('o'*60)\n    break if start.nil?\n    if sch_i[start..-1].index('o'*60) == 0 or sch_j[start..-1].index('o'*60) == 0\n      start += st_i\n      return \"%02d%02d-%02d%02d\"%[start/60+10,start%60,start/60+1+10,start%60] \n    end\n    st_i +=  (start+1)\n    sch = sch[start+1..-1]\n    sch_i = sch_i[start+1..-1]\n    sch_j = sch_j[start+1..-1]\n  end\n  '-'\nend\n\nDATA.readlines.each do |line|\n  no,q,a = line.chop.split(/\\s+/)\n  ans = solve(q)\n  print no + \"\\t\"\n  print ans\n  puts ans == a ? 'o' : 'x'\nend\n__END__\n0\tA1050-1130,B1400-1415,I1000-1400,I1600-1800,J1100-1745,Z1400-1421,Z1425-1800\t1425-1525\n1\tA1000-1200,B1300-1800,Z1000-1215,Z1230-1800\t-\n2\tZ0800-2200\t1000-1100\n3\tA1000-1700,Z0800-2200\t1700-1800\n4\tA1000-1701,Z0800-2200\t-\n5\tA1000-1130,B1230-1800,Z0800-2200\t1130-1230\n```", "tags": ["Ruby", "yhpg", "\u3069\u3046\u66f8\u304f"]}