{"context": " More than 1 year has passed since last update.std::map, std::unordered_map \u306e\u30ad\u30fc\u3068\u3057\u3066 std::shared_ptr<MyClass>\u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u30dd\u30a4\u30f3\u30bf\u540c\u58eb\u306e\u6bd4\u8f03\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u4e0d\u90fd\u5408\u3067\u3001\u6bd4\u8f03\u95a2\u6570\u3084\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u3068\u3044\u3046\u3053\u3068\u3082\u591a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u3001std::less(map\u306e\u5834\u5408)\u3084std::hash, std::equal_to(unordered_map\u306e\u5834\u5408)\u3092 std::shared_ptr<MyClass> \u306b\u5bfe\u3057\u3066\u7279\u6b8a\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u524d\u63d0\u3068\u3057\u3066\u3001MyClass \u306f operator<() \u3084 operator==(), hash() \u3092\u6301\u3063\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nstd::map\u306e\u5834\u5408:\nnamespace std {\ntemplate <>\nstruct less<shared_ptr<MyClass>>\n{\n  bool operator()(const shared_ptr<MyClass> &a, const shared_ptr<MyClass> &b) const {\n    return *a < *b;\n  }\n};\n}\n\nstd::unordered_map\u306e\u5834\u5408:\nnamespace std {\ntemplate <>\nstruct hash<shared_ptr<MyClass>>\n{\n  size_t operator()(const shared_ptr<MyClass> &ptr) const {\n    return ptr->hash();\n  }\n};\ntemplate <>\nstruct equal_to<shared_ptr<MyClass>>\n{\n  bool operator()(const shared_ptr<MyClass> &a, const shared_ptr<MyClass> &b) const {\n    return *a == *b;\n  }\n};\n}\n\nstd::set \u3084 std::unordered_set \u306e\u5834\u5408\u3082\u540c\u3058\u3067\u3059\u3002\n\u95a2\u6570\u306e\u30b7\u30b0\u30cb\u30c1\u30e3\u304c\u9593\u9055\u3063\u3066\u3044\u308b\uff08const \u304c\u8db3\u308a\u306a\u3044\u306a\u3069\uff09\u3068\u4f7f\u308f\u308c\u306a\u3044\u307e\u307e\u306b\u306a\u308b\u306e\u3067\u3001\u3088\u304f\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nstd::map, std::unordered_map \u306e\u30ad\u30fc\u3068\u3057\u3066 std::shared_ptr\\<MyClass>\u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u30dd\u30a4\u30f3\u30bf\u540c\u58eb\u306e\u6bd4\u8f03\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u4e0d\u90fd\u5408\u3067\u3001\u6bd4\u8f03\u95a2\u6570\u3084\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u3068\u3044\u3046\u3053\u3068\u3082\u591a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u3001std::less(map\u306e\u5834\u5408)\u3084std::hash, std::equal_to(unordered_map\u306e\u5834\u5408)\u3092 std::shared_ptr\\<MyClass> \u306b\u5bfe\u3057\u3066\u7279\u6b8a\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n__\u524d\u63d0\u3068\u3057\u3066\u3001MyClass \u306f operator<() \u3084 operator==(), hash() \u3092\u6301\u3063\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002__\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nstd::map\u306e\u5834\u5408:\n\n```cpp\nnamespace std {\ntemplate <>\nstruct less<shared_ptr<MyClass>>\n{\n  bool operator()(const shared_ptr<MyClass> &a, const shared_ptr<MyClass> &b) const {\n    return *a < *b;\n  }\n};\n}\n```\n\nstd::unordered_map\u306e\u5834\u5408:\n\n```cpp\nnamespace std {\ntemplate <>\nstruct hash<shared_ptr<MyClass>>\n{\n  size_t operator()(const shared_ptr<MyClass> &ptr) const {\n    return ptr->hash();\n  }\n};\ntemplate <>\nstruct equal_to<shared_ptr<MyClass>>\n{\n  bool operator()(const shared_ptr<MyClass> &a, const shared_ptr<MyClass> &b) const {\n    return *a == *b;\n  }\n};\n}\n```\n\nstd::set \u3084 std::unordered_set \u306e\u5834\u5408\u3082\u540c\u3058\u3067\u3059\u3002\n\n\u95a2\u6570\u306e\u30b7\u30b0\u30cb\u30c1\u30e3\u304c\u9593\u9055\u3063\u3066\u3044\u308b\uff08const \u304c\u8db3\u308a\u306a\u3044\u306a\u3069\uff09\u3068\u4f7f\u308f\u308c\u306a\u3044\u307e\u307e\u306b\u306a\u308b\u306e\u3067\u3001\u3088\u304f\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["C++11"]}