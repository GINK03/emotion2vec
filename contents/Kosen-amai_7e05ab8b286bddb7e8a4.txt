{"tags": ["C#", "Windows", "GUI", "CUI", "\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7"], "context": "\n\n \u6982\u8981\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u306a\u3069\u306eGUI\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u3057\u3066\u4f7f\u3048\u305d\u3046\u306a\u96db\u578b\u3002\n\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u306a\u3069\u304b\u3089\u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306b\u51e6\u7406\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u3057\u3001\u5b9f\u884c\u30dc\u30bf\u30f3\u3092\u62bc\u305b\u3070\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5f15\u6570\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u6e21\u3057\u3066\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\n\n \u753b\u9762\u30a4\u30e1\u30fc\u30b8\n\n\n\n \u30b3\u30fc\u30c9\n\nMainWindow.xaml.cs\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Windows;\nusing System.Windows.Input;\n\nnamespace GUIFrontend\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        static readonly string DROP_NAVI_TEXT = \"\u3053\u3053\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30ed\u30c3\u30d7\u3057\u3066\u304f\u3060\u3055\u3044\u3002\";\n\n        public static readonly ICommand ExecCommand = new RoutedCommand(nameof(ExecCommand), typeof(MainWindow));\n\n        public ObservableCollection<string> DropListItems { get; set; }\n\n        public MainWindow()\n        {\n            InitializeComponent();\n\n            this.InitItemBindings();\n            this.InitCommandBindings();\n        }\n\n        private void InitItemBindings()\n        {\n            this.DropListItems = new ObservableCollection<string>();\n            Enumerable.Range(0, 5).ToList().ForEach(x => this.DropListItems.Add(DROP_NAVI_TEXT));\n            dropList.ItemsSource = this.DropListItems;\n        }\n\n        private void InitCommandBindings()\n        {\n            this.CommandBindings.Add(new CommandBinding(ExecCommand, Exec_Execute, Exec_CanExecute));\n        }\n\n        /// <summary>\n        /// \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void Exec_Execute(object sender, RoutedEventArgs e)\n        {\n            string option = optionText.Text.Trim();\n\n            if (execOnceCheck.IsChecked == true)\n            {\n                string args = option + \" \";\n                // \u30c9\u30ed\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u3092\u307e\u3068\u3081\u3066\u5f15\u6570\u306b\u6e21\u3057\u30011\u56de\u3060\u3051\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n                foreach (var item in this.DropListItems)\n                {\n                    args += $\"\\\"{item}\\\" \";\n                }\n\n                System.Diagnostics.Process.Start(commandText.Text, args);\n            }\n            else\n            {\n                // \u30c9\u30ed\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u6570\u5206\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n                foreach (var item in this.DropListItems)\n                {\n                    System.Diagnostics.Process.Start(commandText.Text, $\"{option} \\\"{item}\\\"\");\n                }\n            }\n        }\n\n        private void Exec_CanExecute(object sender, CanExecuteRoutedEventArgs e)\n        {\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u30d1\u30b9\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u3066\u3001\n            // \u30d5\u30a1\u30a4\u30eb\u304c\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u3066\u3044\u308c\u3070\u5b9f\u884c\u30dc\u30bf\u30f3\u6709\u52b9\n            if (commandText.Text != \"\" &&\n                this.DropListItems.Any() &&\n                this.DropListItems[0] != DROP_NAVI_TEXT)\n            {\n                e.CanExecute = true;\n            }\n        }\n\n        /// <summary>\n        /// \u30d5\u30a1\u30a4\u30eb\u30c9\u30ed\u30c3\u30d7\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void dropList_Drop(object sender, DragEventArgs e)\n        {\n            string[] files = e.Data.GetData(DataFormats.FileDrop) as string[];\n\n            if (files != null)\n            {\n                this.DropListItems.Clear();\n                foreach (var s in files)\n                {\n                    this.DropListItems.Add(s);\n                }\n\n                execOnceCheck.Focus();\n            }\n        }\n\n        private void dropList_PreviewDragOver(object sender, DragEventArgs e)\n        {\n            // \u30c9\u30e9\u30c3\u30b0\u4e2d\u306e\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f\u30c1\u30a7\u30c3\u30af\n            if (e.Data.GetDataPresent(DataFormats.FileDrop, true))\n            {\n                e.Effects = DragDropEffects.Copy;\n            }\n            else\n            {\n                e.Effects = DragDropEffects.None;\n            }\n            e.Handled = true;\n        }\n    }\n}\n\n\n\nMainWindow.xaml\n<Window x:Class=\"GUIFrontend.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:GUIFrontend\"\n        mc:Ignorable=\"d\"\n        ResizeMode=\"CanResizeWithGrip\"\n        Title=\"GUI\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\" Height=\"350\" Width=\"525\">\n    <Window.Resources>\n        <ScaleTransform x:Key=\"DoubleScale\" ScaleX=\"2\" ScaleY=\"2\" />\n        <!-- \u5927\u304d\u306a\u30dc\u30bf\u30f3 -->\n        <Style x:Key=\"BigButton\" TargetType=\"{x:Type Button}\">\n            <Setter Property=\"LayoutTransform\" Value=\"{StaticResource DoubleScale}\"/>\n        </Style>\n        <!-- \u30c6\u30ad\u30b9\u30c8\u306e\u30b9\u30bf\u30a4\u30eb -->\n        <Style TargetType=\"{x:Type TextBlock}\">\n            <Setter Property=\"VerticalAlignment\" Value=\"Center\"/>\n            <Setter Property=\"Margin\" Value=\"10,0,5,0\"/>\n        </Style>\n    </Window.Resources>\n\n    <Grid>\n        <Grid.RowDefinitions>\n            <RowDefinition Height=\"auto\"/>\n            <RowDefinition Height=\"auto\"/>\n            <RowDefinition Height=\"auto\"/>\n            <RowDefinition Height=\"*\"/>\n        </Grid.RowDefinitions>\n\n        <Grid.ColumnDefinitions>\n            <ColumnDefinition Width=\"auto\"/>\n            <ColumnDefinition Width=\"*\"/>\n            <ColumnDefinition Width=\"auto\"/>\n        </Grid.ColumnDefinitions>\n\n        <!-- 1\u884c\u76ee -->\n        <TextBlock Text=\"\u30d7\u30ed\u30b0\u30e9\u30e0\" />\n        <TextBox\n            Name=\"commandText\"\n            Text=\"notepad.exe\"\n            Grid.Column=\"1\" Grid.ColumnSpan=\"2\" Margin=\"10\"/>\n\n        <!-- 2\u884c\u76ee -->\n        <TextBlock Text=\"\u30aa\u30d7\u30b7\u30e7\u30f3\" Grid.Row=\"1\"/>\n        <TextBox\n            Name=\"optionText\"\n            Text=\"\"\n            Grid.Row=\"1\" Grid.Column=\"1\" Margin=\"10\"/>\n        <CheckBox\n            Name=\"execOnceCheck\"\n            Content=\"\u307e\u3068\u3081\u30661\u56de\u3067\u5b9f\u884c\"\n            ToolTip=\"\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u307e\u3068\u3081\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6e21\u3059\u304b\u30011\u30d5\u30a1\u30a4\u30eb\u305a\u3064\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6e21\u3057\u3066\u5b9f\u884c\u3059\u308b\u304b\u9078\u629e\u3057\u307e\u3059\u3002\"\n            IsChecked=\"True\"\n            Grid.Row=\"1\" Grid.Column=\"2\" Margin=\"10\"/>\n\n        <!-- 3\u884c\u76ee -->\n        <Button\n            Name=\"execButton\"\n            Content=\"\u5b9f\u884c\"\n            IsDefault=\"True\"\n            Command=\"{x:Static local:MainWindow.ExecCommand}\"\n            Style=\"{StaticResource BigButton}\"\n            Grid.Row=\"2\" Grid.ColumnSpan=\"3\" Width=\"100\" Margin=\"10\"/>\n\n        <!-- 4\u884c\u76ee -->\n        <ListBox\n            Name=\"dropList\"\n            AllowDrop=\"True\"\n            Grid.Row=\"3\" Grid.ColumnSpan=\"3\"\n            Drop=\"dropList_Drop\"\n            PreviewDragOver=\"dropList_PreviewDragOver\"/>\n    </Grid>\n</Window>\n\n\n\n \u52d5\u4f5c\u78ba\u8a8d\u3057\u305f\u74b0\u5883\n\nWindows 8.1, .NET Framework 4.5, Visual Studio 2015(WPF\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\nWindows 10, .NET Framework 4.5.2, Visual Studio 2015(WPF\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n\n# <i class=\"fa fa-cubes\" style=\"font-size:1em;\"></i> \u6982\u8981\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u306a\u3069\u306eGUI\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u3057\u3066\u4f7f\u3048\u305d\u3046\u306a\u96db\u578b\u3002\n\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u306a\u3069\u304b\u3089\u30ea\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306b\u51e6\u7406\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u3057\u3001\u5b9f\u884c\u30dc\u30bf\u30f3\u3092\u62bc\u305b\u3070\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5f15\u6570\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u6e21\u3057\u3066\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\n\n# <i class=\"fa fa-cubes\" style=\"font-size:1em;\"></i> \u753b\u9762\u30a4\u30e1\u30fc\u30b8\n![w02-01.png](https://qiita-image-store.s3.amazonaws.com/0/142879/8cd15f7a-6b0d-d356-c10a-4ce87ee563b0.png)\n\n![w02-02.png](https://qiita-image-store.s3.amazonaws.com/0/142879/678f2f04-17c2-f115-9885-dc0c80925cb8.png)\n\n\n\n# <i class=\"fa fa-file-text-o\" style=\"font-size:1em;\"></i> \u30b3\u30fc\u30c9\n\n```CSharp:MainWindow.xaml.cs\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Windows;\nusing System.Windows.Input;\n\nnamespace GUIFrontend\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        static readonly string DROP_NAVI_TEXT = \"\u3053\u3053\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30ed\u30c3\u30d7\u3057\u3066\u304f\u3060\u3055\u3044\u3002\";\n\n        public static readonly ICommand ExecCommand = new RoutedCommand(nameof(ExecCommand), typeof(MainWindow));\n\n        public ObservableCollection<string> DropListItems { get; set; }\n\n        public MainWindow()\n        {\n            InitializeComponent();\n\n            this.InitItemBindings();\n            this.InitCommandBindings();\n        }\n\n        private void InitItemBindings()\n        {\n            this.DropListItems = new ObservableCollection<string>();\n            Enumerable.Range(0, 5).ToList().ForEach(x => this.DropListItems.Add(DROP_NAVI_TEXT));\n            dropList.ItemsSource = this.DropListItems;\n        }\n\n        private void InitCommandBindings()\n        {\n            this.CommandBindings.Add(new CommandBinding(ExecCommand, Exec_Execute, Exec_CanExecute));\n        }\n\n        /// <summary>\n        /// \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void Exec_Execute(object sender, RoutedEventArgs e)\n        {\n            string option = optionText.Text.Trim();\n\n            if (execOnceCheck.IsChecked == true)\n            {\n                string args = option + \" \";\n                // \u30c9\u30ed\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u3092\u307e\u3068\u3081\u3066\u5f15\u6570\u306b\u6e21\u3057\u30011\u56de\u3060\u3051\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n                foreach (var item in this.DropListItems)\n                {\n                    args += $\"\\\"{item}\\\" \";\n                }\n\n                System.Diagnostics.Process.Start(commandText.Text, args);\n            }\n            else\n            {\n                // \u30c9\u30ed\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u6570\u5206\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n                foreach (var item in this.DropListItems)\n                {\n                    System.Diagnostics.Process.Start(commandText.Text, $\"{option} \\\"{item}\\\"\");\n                }\n            }\n        }\n\n        private void Exec_CanExecute(object sender, CanExecuteRoutedEventArgs e)\n        {\n            // \u30d7\u30ed\u30b0\u30e9\u30e0\u30d1\u30b9\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u3066\u3001\n            // \u30d5\u30a1\u30a4\u30eb\u304c\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u3066\u3044\u308c\u3070\u5b9f\u884c\u30dc\u30bf\u30f3\u6709\u52b9\n            if (commandText.Text != \"\" &&\n                this.DropListItems.Any() &&\n                this.DropListItems[0] != DROP_NAVI_TEXT)\n            {\n                e.CanExecute = true;\n            }\n        }\n\n        /// <summary>\n        /// \u30d5\u30a1\u30a4\u30eb\u30c9\u30ed\u30c3\u30d7\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"e\"></param>\n        private void dropList_Drop(object sender, DragEventArgs e)\n        {\n            string[] files = e.Data.GetData(DataFormats.FileDrop) as string[];\n\n            if (files != null)\n            {\n                this.DropListItems.Clear();\n                foreach (var s in files)\n                {\n                    this.DropListItems.Add(s);\n                }\n\n                execOnceCheck.Focus();\n            }\n        }\n\n        private void dropList_PreviewDragOver(object sender, DragEventArgs e)\n        {\n            // \u30c9\u30e9\u30c3\u30b0\u4e2d\u306e\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f\u30c1\u30a7\u30c3\u30af\n            if (e.Data.GetDataPresent(DataFormats.FileDrop, true))\n            {\n                e.Effects = DragDropEffects.Copy;\n            }\n            else\n            {\n                e.Effects = DragDropEffects.None;\n            }\n            e.Handled = true;\n        }\n    }\n}\n```\n\n```Xml:MainWindow.xaml\n<Window x:Class=\"GUIFrontend.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:GUIFrontend\"\n        mc:Ignorable=\"d\"\n        ResizeMode=\"CanResizeWithGrip\"\n        Title=\"GUI\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\" Height=\"350\" Width=\"525\">\n    <Window.Resources>\n        <ScaleTransform x:Key=\"DoubleScale\" ScaleX=\"2\" ScaleY=\"2\" />\n        <!-- \u5927\u304d\u306a\u30dc\u30bf\u30f3 -->\n        <Style x:Key=\"BigButton\" TargetType=\"{x:Type Button}\">\n            <Setter Property=\"LayoutTransform\" Value=\"{StaticResource DoubleScale}\"/>\n        </Style>\n        <!-- \u30c6\u30ad\u30b9\u30c8\u306e\u30b9\u30bf\u30a4\u30eb -->\n        <Style TargetType=\"{x:Type TextBlock}\">\n            <Setter Property=\"VerticalAlignment\" Value=\"Center\"/>\n            <Setter Property=\"Margin\" Value=\"10,0,5,0\"/>\n        </Style>\n    </Window.Resources>\n\n    <Grid>\n        <Grid.RowDefinitions>\n            <RowDefinition Height=\"auto\"/>\n            <RowDefinition Height=\"auto\"/>\n            <RowDefinition Height=\"auto\"/>\n            <RowDefinition Height=\"*\"/>\n        </Grid.RowDefinitions>\n\n        <Grid.ColumnDefinitions>\n            <ColumnDefinition Width=\"auto\"/>\n            <ColumnDefinition Width=\"*\"/>\n            <ColumnDefinition Width=\"auto\"/>\n        </Grid.ColumnDefinitions>\n\n        <!-- 1\u884c\u76ee -->\n        <TextBlock Text=\"\u30d7\u30ed\u30b0\u30e9\u30e0\" />\n        <TextBox\n            Name=\"commandText\"\n            Text=\"notepad.exe\"\n            Grid.Column=\"1\" Grid.ColumnSpan=\"2\" Margin=\"10\"/>\n\n        <!-- 2\u884c\u76ee -->\n        <TextBlock Text=\"\u30aa\u30d7\u30b7\u30e7\u30f3\" Grid.Row=\"1\"/>\n        <TextBox\n            Name=\"optionText\"\n            Text=\"\"\n            Grid.Row=\"1\" Grid.Column=\"1\" Margin=\"10\"/>\n        <CheckBox\n            Name=\"execOnceCheck\"\n            Content=\"\u307e\u3068\u3081\u30661\u56de\u3067\u5b9f\u884c\"\n            ToolTip=\"\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u307e\u3068\u3081\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6e21\u3059\u304b\u30011\u30d5\u30a1\u30a4\u30eb\u305a\u3064\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6e21\u3057\u3066\u5b9f\u884c\u3059\u308b\u304b\u9078\u629e\u3057\u307e\u3059\u3002\"\n            IsChecked=\"True\"\n            Grid.Row=\"1\" Grid.Column=\"2\" Margin=\"10\"/>\n\n        <!-- 3\u884c\u76ee -->\n        <Button\n            Name=\"execButton\"\n            Content=\"\u5b9f\u884c\"\n            IsDefault=\"True\"\n            Command=\"{x:Static local:MainWindow.ExecCommand}\"\n            Style=\"{StaticResource BigButton}\"\n            Grid.Row=\"2\" Grid.ColumnSpan=\"3\" Width=\"100\" Margin=\"10\"/>\n\n        <!-- 4\u884c\u76ee -->\n        <ListBox\n            Name=\"dropList\"\n            AllowDrop=\"True\"\n            Grid.Row=\"3\" Grid.ColumnSpan=\"3\"\n            Drop=\"dropList_Drop\"\n            PreviewDragOver=\"dropList_PreviewDragOver\"/>\n    </Grid>\n</Window>\n```\n\n# <i class=\"fa fa-cubes\" style=\"font-size:1em;\"></i> \u52d5\u4f5c\u78ba\u8a8d\u3057\u305f\u74b0\u5883\n* Windows 8.1, .NET Framework 4.5, Visual Studio 2015(WPF\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n* Windows 10, .NET Framework 4.5.2, Visual Studio 2015(WPF\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n"}