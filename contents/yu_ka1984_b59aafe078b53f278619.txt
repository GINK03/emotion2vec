{"tags": ["C#", "ORM", "PetaPoco"], "context": "PetaPoco\nhttp://www.toptensoftware.com/petapoco/\nhttps://github.com/toptensoftware/PetaPoco\n\u3044\u308f\u3086\u308b\u30de\u30a4\u30af\u30edO/R\u30de\u30c3\u30d1\u30fc\u3067\u3059\u3002\n\u6700\u65b0\u306f\u30d0\u30fc\u30b8\u30e7\u30f35\u3067\u3059\u3002\n\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u306f\u7d99\u7d9a\u3057\u3066\u7d9a\u3044\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u70b9\u304c\u4fbf\u5229\u3067\u3088\u304f\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n\u30af\u30e9\u30b9\u7fa4\u304c\uff11\u30d5\u30a1\u30a4\u30eb\u3067\u5b8c\u7d50\u3057\u3066\u3044\u308b\u3002dll\u914d\u5e03\u3067\u306a\u3044\u3002\nT4\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067Poco\u30af\u30e9\u30b9\u304c\u4f5c\u6210\u3067\u304d\u308b\u3002\n\u4f5c\u6210\u3055\u308c\u305fPoco\u30af\u30e9\u30b9\u306fSelect Update Insert Delete\u304c\u305d\u308d\u3063\u3066\u308b\u3002\nPage SingleOrDefault\u304c\u3042\u308b\u3002\n\u9045\u304f\u306a\u3044\u3002\n\nDapper\u3092\u30d9\u30fc\u30b9\u306b\u5468\u8fba\u7fa4\u3092\u81ea\u4f5c\u3055\u308c\u3066\u3044\u308b\u65b9\u304c\u591a\u3044\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u304c\n\u79c1\u306f\u30e1\u30f3\u30c9\u30af\u30b5\u30a4\u306e\u3067PetaPoco\u304c\u597d\u304d\u3067\u3059\u3002\n\u3067\u4f7f\u3063\u3066\u3044\u308b\u3068\u5c11\u3057\u305a\u3064\u5909\u66f4\u3068\u304b\u8ffd\u52a0\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u307e\u3068\u3081\u3068\u304d\u307e\u3059\u3002\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u30af\u30a8\u30ea\u306e\u5f15\u6570\u306bDictionary\u3092\u4f7f\u3044\u305f\u3044\u3002\n\u306a\u3093\u3066\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\nPetaPoco\u306b\u306fPetaPoco.sql\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u3063\u3066\u5c0f\u3055\u3044\u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u30fc\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3093\u306a\u304b\u3093\u3058\n            var sql = PetaPoco.Sql.Builder\n                .Select(\"HG.*\")\n                .From(\"HOGE HG\");\n                .Where(\"HG.id = @0\", 5)\n                .Where(\"HG.name = @Name\" new { Name = \"hogehoge\" } );\n\n\n\u30d1\u30e9\u30e1\u30fc\u30e9\u30af\u30a8\u30ea\u306f\u4e00\u3064\u305a\u3064\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3057\u533f\u540d\u578b\u306b\u3066\u30de\u30c3\u30d7\u3059\u308b\u65b9\u6cd5\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u533f\u540d\u578b\u306f\u3042\u3093\u307e\u308a\u901f\u304f\u306f\u306a\u3044\u3067\u3059\u3051\u3069\u4fbf\u5229\u3067\u3059\u3002\n\u305f\u3060\u3001\u3053\u306e\u4e8c\u3064\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306a\u3041\u3063\u3066\u5834\u9762\u304c\u3042\u308b\u3053\u3068\u304c\u3042\u3063\u3066\nIN\u53e5\u3046\u307e\u304f\u8868\u73fe\u3067\u304d\u306a\u3044\u3093\u3067\u3059\u3088\u306d\u3002\n\u3067Dictionary\u306b\u5bfe\u5fdc\u3055\u305b\u308b\u3053\u3068\u3067IN\u53e5\u3092\u8868\u73fe\u3067\u304d\u308b\u3068\u8003\u3048\u3066\u5bfe\u5fdc\u3055\u305b\u307e\u3057\u305f\u3002\n\npublic class ParamDictionary : Dictionary<string, object> {\n        public ParamDictionary()\n        {\n\n        }\n        public ParamDictionary(IDictionary<string, object> dictionary) : base(dictionary)\n        {\n\n        }\n    }\n\n\n\u3068\u308a\u3042\u3048\u305aPetaPoco\u540d\u524d\u7a7a\u9593\u306b\u3053\u3093\u306a\u306e\u8ffd\u52a0\u3057\u3066\u304a\u3044\u3066\nPetaPoco.Internal.ParametersHelper \u306eProcessParams\u30e1\u30bd\u30c3\u30c9\u306e\nargs_src\u3092foreach\u3057\u3066\u308b\u90e8\u5206\u3092\n                        foreach (var o in args_src)\n                        {\n                            // Custom Start\n                            if(o.GetType() == typeof(ParamDictionary))\n                            {\n                                var dic = (ParamDictionary)o;\n                                if(dic.ContainsKey(param))\n                                {\n                                    arg_val = dic[param];\n                                    found = true;\n                                    break;\n                                }\n                            }\n                            // Custom End\n\n                            var pi = o.GetType().GetProperty(param);\n                            if (pi != null)\n                            {\n                                arg_val = pi.GetValue(o, null);\n                                found = true;\n                                break;\n                            }\n                        }\n\n\u3053\u3093\u306a\u98a8\u306b\u3057\u3066\u304a\u304f\u3069Dictionary\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\u3067\u3069\u3046\u4f7f\u3046\u304b\u3068\u3044\u3046\u3068\n            var hoges = new List<string> { \"hoge1\", \"hage2\", \"hige3\" };\n            var dichoges = (ParamDictionary)hoges.Select((x, i) => new { Key = \"Names\" + i, Value = (object)x }).ToDictionary(x => x.Key, x => x.Value);\n            sql.Where(\"Name IN (\" + String.Join(\" ,\", dichoges.Select(x => \"@\" + x.Key)) + \" )\", dichoges);\n\n\u3082\u3046\u3061\u3087\u3063\u3068\u3084\u308a\u3088\u3046\u304c\u3042\u308b\u6c17\u3082\u3057\u307e\u3059\u304c\u30fb\u30fb\u30fb(;\u30fb\u2200\u30fb)\n\n\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30b3\u30fc\u30eb\u3067\u30a2\u30a6\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u53d7\u3051\u53d6\u308a\u305f\u3044\u3002\n\u79c1\u306e\u958b\u767a\u3067\u306f\u6b86\u3069\u304cOracle\u304bSQLServer\u306a\u306e\u3067\u3059\u304c\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30b3\u30fc\u30eb\u3067OutPut\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u3044\u305f\u3044\u6642\u3068\u304b\u304c\u3042\u308a\u307e\u3059\u3002\nPetaPoco\u3067\u306f\u57fa\u672c\u7684\u306bOutput\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6271\u3048\u306a\u3044\u3067\u3059\u3002\nout\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5b58\u5728\u3057\u306a\u3044\uff24\uff22\u304c\u3042\u308b\u304b\u3089\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3067\u3059\u306e\u3067\u3053\u3093\u306a\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n        public T ExcuteProcedure<T>(string ProcedureName, ParamDictionary in_args, ParamDictionary out_args)\n        {\n            try\n            {\n                OpenSharedConnection();\n                try\n                {\n                    using(var cmd = Connection.CreateCommand())\n                    {\n                        cmd.Connection = Connection;\n                        cmd.CommandText = ProcedureName;\n                        cmd.Transaction = _transaction;\n                        cmd.CommandType = CommandType.StoredProcedure;\n                        if (in_args != null)\n                        {\n                            foreach (var item in in_args)\n                            {\n                                var idbParam = item.Value as IDbDataParameter;\n                                if (idbParam != null)\n                                {\n                                    idbParam.ParameterName = string.Format(\"{0}{1}\", _paramPrefix, item.Key);\n                                    cmd.Parameters.Add(idbParam);\n                                    continue;\n                                }\n\n                                var p = GetProcParam(string.Format(\"{0}{1}\", _paramPrefix, item.Key), item.Value, ParameterDirection.Input);\n                                cmd.Parameters.Add(p);\n                            }\n                        }\n                        if(out_args != null)\n                        {\n                            foreach (var item in out_args)\n                            {\n                                var idbParam = item.Value as IDbDataParameter;\n                                if (idbParam != null)\n                                {\n                                    idbParam.ParameterName = string.Format(\"{0}{1}\", _paramPrefix, item.Key);\n                                    cmd.Parameters.Add(idbParam);\n                                    continue;\n                                }\n\n                                var p = GetProcParam(string.Format(\"{0}{1}\", _paramPrefix, item.Key), item.Value, ParameterDirection.Output);\n                                cmd.Parameters.Add(p);\n                            }\n                        }\n\n                        var returnvalue = cmd.CreateParameter();\n                        returnvalue.ParameterName = \"returnVal\";\n                        returnvalue.Direction = ParameterDirection.ReturnValue;\n                        cmd.Parameters.Add(returnvalue);\n\n                        _dbType.PreExecute(cmd);\n                        DoPreExecute(cmd);\n\n                        var retv = cmd.ExecuteNonQuery();\n                        OnExecutedCommand(cmd);\n\n                        foreach(IDataParameter param in cmd.Parameters)\n                        {\n                            if(param.Direction == ParameterDirection.Output)\n                            {\n                                var beforekey = param.ParameterName.Replace(_paramPrefix, \"\");\n                                if(out_args.ContainsKey(beforekey))\n                                {\n                                    out_args[beforekey] = param.Value;\n                                }                                \n                            }\n                        }\n\n                        object val = returnvalue.Value;\n\n                        Type u = Nullable.GetUnderlyingType(typeof(T));\n                        if (u != null && val == null)\n                            return default(T);\n\n                        return (T)Convert.ChangeType(val, u == null ? typeof(T) : u);                       \n                    }\n                }\n                finally\n                {\n                    CloseSharedConnection();\n                }\n            }\n            catch (Exception x)\n            {\n                if (OnException(x))\n                    throw;\n                return default(T);\n            }\n        }\n\n\n\u305d\u306e\u307e\u3093\u307e\u3067\u3059\u3002\n\u3067\u3082\u6697\u9ed9\u30ab\u30fc\u30bd\u30eb\u3068\u304b\u306b\u306f\u5bfe\u5fdc\u3044\u3066\u3044\u306a\u3044\u3067\u3059\u3002\n\u4ed6\u306b\u3082\u3061\u3087\u3053\u3061\u3087\u3053\u76f4\u3057\u305f\u308a\u8ffd\u52a0\u3057\u305f\u308a\u3057\u306a\u304c\u3089\u4f7f\u3063\u3066\u307e\u3059\u3002\n\u3042\u3093\u307e\u308a\u65e5\u672c\u8a9e\u60c5\u5831\u306a\u3044\u306e\u3067\u4f7f\u3063\u3066\u3044\u308b\u4eba\u5c11\u306a\u3044\u306e\u304b\u306a\u3041\u3068\u306f\u601d\u3044\u307e\u3059\u304c\n\u60aa\u304f\u306f\u306a\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u306a\u3093\u304b\u3042\u3063\u305f\u3068\u304d\u306f\u304a\u8a66\u3057\u3067\u3069\u3046\u305e\u3002\nPetaPoco\nhttp://www.toptensoftware.com/petapoco/\nhttps://github.com/toptensoftware/PetaPoco\n\n\u3044\u308f\u3086\u308b\u30de\u30a4\u30af\u30edO/R\u30de\u30c3\u30d1\u30fc\u3067\u3059\u3002\n\u6700\u65b0\u306f\u30d0\u30fc\u30b8\u30e7\u30f35\u3067\u3059\u3002\n\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u306f\u7d99\u7d9a\u3057\u3066\u7d9a\u3044\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u70b9\u304c\u4fbf\u5229\u3067\u3088\u304f\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n* \u30af\u30e9\u30b9\u7fa4\u304c\uff11\u30d5\u30a1\u30a4\u30eb\u3067\u5b8c\u7d50\u3057\u3066\u3044\u308b\u3002dll\u914d\u5e03\u3067\u306a\u3044\u3002\n* T4\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067Poco\u30af\u30e9\u30b9\u304c\u4f5c\u6210\u3067\u304d\u308b\u3002\n* \u4f5c\u6210\u3055\u308c\u305fPoco\u30af\u30e9\u30b9\u306fSelect Update Insert Delete\u304c\u305d\u308d\u3063\u3066\u308b\u3002\n* Page SingleOrDefault\u304c\u3042\u308b\u3002\n* \u9045\u304f\u306a\u3044\u3002\n\nDapper\u3092\u30d9\u30fc\u30b9\u306b\u5468\u8fba\u7fa4\u3092\u81ea\u4f5c\u3055\u308c\u3066\u3044\u308b\u65b9\u304c\u591a\u3044\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u304c\n\u79c1\u306f\u30e1\u30f3\u30c9\u30af\u30b5\u30a4\u306e\u3067PetaPoco\u304c\u597d\u304d\u3067\u3059\u3002\n\n\u3067\u4f7f\u3063\u3066\u3044\u308b\u3068\u5c11\u3057\u305a\u3064\u5909\u66f4\u3068\u304b\u8ffd\u52a0\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u307e\u3068\u3081\u3068\u304d\u307e\u3059\u3002\n\n\n#\u30d1\u30e9\u30e1\u30fc\u30bf\u30af\u30a8\u30ea\u306e\u5f15\u6570\u306bDictionary\u3092\u4f7f\u3044\u305f\u3044\u3002\n\u306a\u3093\u3066\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\nPetaPoco\u306b\u306fPetaPoco.sql\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u3063\u3066\u5c0f\u3055\u3044\u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u30fc\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3093\u306a\u304b\u3093\u3058\n\n```csharp\n            var sql = PetaPoco.Sql.Builder\n                .Select(\"HG.*\")\n                .From(\"HOGE HG\");\n                .Where(\"HG.id = @0\", 5)\n                .Where(\"HG.name = @Name\" new { Name = \"hogehoge\" } );\n\n```\n\n\u30d1\u30e9\u30e1\u30fc\u30e9\u30af\u30a8\u30ea\u306f\u4e00\u3064\u305a\u3064\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3057\u533f\u540d\u578b\u306b\u3066\u30de\u30c3\u30d7\u3059\u308b\u65b9\u6cd5\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u533f\u540d\u578b\u306f\u3042\u3093\u307e\u308a\u901f\u304f\u306f\u306a\u3044\u3067\u3059\u3051\u3069\u4fbf\u5229\u3067\u3059\u3002\n\n\u305f\u3060\u3001\u3053\u306e\u4e8c\u3064\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306a\u3041\u3063\u3066\u5834\u9762\u304c\u3042\u308b\u3053\u3068\u304c\u3042\u3063\u3066\nIN\u53e5\u3046\u307e\u304f\u8868\u73fe\u3067\u304d\u306a\u3044\u3093\u3067\u3059\u3088\u306d\u3002\n\u3067Dictionary\u306b\u5bfe\u5fdc\u3055\u305b\u308b\u3053\u3068\u3067IN\u53e5\u3092\u8868\u73fe\u3067\u304d\u308b\u3068\u8003\u3048\u3066\u5bfe\u5fdc\u3055\u305b\u307e\u3057\u305f\u3002\n\n```csharp\n\npublic class ParamDictionary : Dictionary<string, object> {\n        public ParamDictionary()\n        {\n\n        }\n        public ParamDictionary(IDictionary<string, object> dictionary) : base(dictionary)\n        {\n\n        }\n    }\n\n```\n\n\u3068\u308a\u3042\u3048\u305aPetaPoco\u540d\u524d\u7a7a\u9593\u306b\u3053\u3093\u306a\u306e\u8ffd\u52a0\u3057\u3066\u304a\u3044\u3066\nPetaPoco.Internal.ParametersHelper \u306eProcessParams\u30e1\u30bd\u30c3\u30c9\u306e\nargs_src\u3092foreach\u3057\u3066\u308b\u90e8\u5206\u3092\n\n```csharp\n                        foreach (var o in args_src)\n                        {\n                            // Custom Start\n                            if(o.GetType() == typeof(ParamDictionary))\n                            {\n                                var dic = (ParamDictionary)o;\n                                if(dic.ContainsKey(param))\n                                {\n                                    arg_val = dic[param];\n                                    found = true;\n                                    break;\n                                }\n                            }\n                            // Custom End\n\n                            var pi = o.GetType().GetProperty(param);\n                            if (pi != null)\n                            {\n                                arg_val = pi.GetValue(o, null);\n                                found = true;\n                                break;\n                            }\n                        }\n```\n\n\u3053\u3093\u306a\u98a8\u306b\u3057\u3066\u304a\u304f\u3069Dictionary\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\u3067\u3069\u3046\u4f7f\u3046\u304b\u3068\u3044\u3046\u3068\n\n```csharp\n            var hoges = new List<string> { \"hoge1\", \"hage2\", \"hige3\" };\n            var dichoges = (ParamDictionary)hoges.Select((x, i) => new { Key = \"Names\" + i, Value = (object)x }).ToDictionary(x => x.Key, x => x.Value);\n            sql.Where(\"Name IN (\" + String.Join(\" ,\", dichoges.Select(x => \"@\" + x.Key)) + \" )\", dichoges);\n```\n\u3082\u3046\u3061\u3087\u3063\u3068\u3084\u308a\u3088\u3046\u304c\u3042\u308b\u6c17\u3082\u3057\u307e\u3059\u304c\u30fb\u30fb\u30fb(;\u30fb\u2200\u30fb)\n\n#\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30b3\u30fc\u30eb\u3067\u30a2\u30a6\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u53d7\u3051\u53d6\u308a\u305f\u3044\u3002\n\u79c1\u306e\u958b\u767a\u3067\u306f\u6b86\u3069\u304cOracle\u304bSQLServer\u306a\u306e\u3067\u3059\u304c\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30b3\u30fc\u30eb\u3067OutPut\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u3044\u305f\u3044\u6642\u3068\u304b\u304c\u3042\u308a\u307e\u3059\u3002\nPetaPoco\u3067\u306f\u57fa\u672c\u7684\u306bOutput\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6271\u3048\u306a\u3044\u3067\u3059\u3002\nout\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5b58\u5728\u3057\u306a\u3044\uff24\uff22\u304c\u3042\u308b\u304b\u3089\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3067\u3059\u306e\u3067\u3053\u3093\u306a\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n```csharp\n\n        public T ExcuteProcedure<T>(string ProcedureName, ParamDictionary in_args, ParamDictionary out_args)\n        {\n            try\n            {\n                OpenSharedConnection();\n                try\n                {\n                    using(var cmd = Connection.CreateCommand())\n                    {\n                        cmd.Connection = Connection;\n                        cmd.CommandText = ProcedureName;\n                        cmd.Transaction = _transaction;\n                        cmd.CommandType = CommandType.StoredProcedure;\n                        if (in_args != null)\n                        {\n                            foreach (var item in in_args)\n                            {\n                                var idbParam = item.Value as IDbDataParameter;\n                                if (idbParam != null)\n                                {\n                                    idbParam.ParameterName = string.Format(\"{0}{1}\", _paramPrefix, item.Key);\n                                    cmd.Parameters.Add(idbParam);\n                                    continue;\n                                }\n\n                                var p = GetProcParam(string.Format(\"{0}{1}\", _paramPrefix, item.Key), item.Value, ParameterDirection.Input);\n                                cmd.Parameters.Add(p);\n                            }\n                        }\n                        if(out_args != null)\n                        {\n                            foreach (var item in out_args)\n                            {\n                                var idbParam = item.Value as IDbDataParameter;\n                                if (idbParam != null)\n                                {\n                                    idbParam.ParameterName = string.Format(\"{0}{1}\", _paramPrefix, item.Key);\n                                    cmd.Parameters.Add(idbParam);\n                                    continue;\n                                }\n\n                                var p = GetProcParam(string.Format(\"{0}{1}\", _paramPrefix, item.Key), item.Value, ParameterDirection.Output);\n                                cmd.Parameters.Add(p);\n                            }\n                        }\n\n                        var returnvalue = cmd.CreateParameter();\n                        returnvalue.ParameterName = \"returnVal\";\n                        returnvalue.Direction = ParameterDirection.ReturnValue;\n                        cmd.Parameters.Add(returnvalue);\n\n                        _dbType.PreExecute(cmd);\n                        DoPreExecute(cmd);\n\n                        var retv = cmd.ExecuteNonQuery();\n                        OnExecutedCommand(cmd);\n\n                        foreach(IDataParameter param in cmd.Parameters)\n                        {\n                            if(param.Direction == ParameterDirection.Output)\n                            {\n                                var beforekey = param.ParameterName.Replace(_paramPrefix, \"\");\n                                if(out_args.ContainsKey(beforekey))\n                                {\n                                    out_args[beforekey] = param.Value;\n                                }                                \n                            }\n                        }\n\n                        object val = returnvalue.Value;\n\n                        Type u = Nullable.GetUnderlyingType(typeof(T));\n                        if (u != null && val == null)\n                            return default(T);\n\n                        return (T)Convert.ChangeType(val, u == null ? typeof(T) : u);                       \n                    }\n                }\n                finally\n                {\n                    CloseSharedConnection();\n                }\n            }\n            catch (Exception x)\n            {\n                if (OnException(x))\n                    throw;\n                return default(T);\n            }\n        }\n\n```\n\n\u305d\u306e\u307e\u3093\u307e\u3067\u3059\u3002\n\u3067\u3082\u6697\u9ed9\u30ab\u30fc\u30bd\u30eb\u3068\u304b\u306b\u306f\u5bfe\u5fdc\u3044\u3066\u3044\u306a\u3044\u3067\u3059\u3002\n\n\n\u4ed6\u306b\u3082\u3061\u3087\u3053\u3061\u3087\u3053\u76f4\u3057\u305f\u308a\u8ffd\u52a0\u3057\u305f\u308a\u3057\u306a\u304c\u3089\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n\u3042\u3093\u307e\u308a\u65e5\u672c\u8a9e\u60c5\u5831\u306a\u3044\u306e\u3067\u4f7f\u3063\u3066\u3044\u308b\u4eba\u5c11\u306a\u3044\u306e\u304b\u306a\u3041\u3068\u306f\u601d\u3044\u307e\u3059\u304c\n\u60aa\u304f\u306f\u306a\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u306a\u3093\u304b\u3042\u3063\u305f\u3068\u304d\u306f\u304a\u8a66\u3057\u3067\u3069\u3046\u305e\u3002\n\n"}