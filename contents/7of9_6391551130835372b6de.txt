{"context": "\n\u52d5\u4f5c\u74b0\u5883\nC++ Builder XE4\n\n\n\u95a2\u9023\u3000http://qiita.com/7of9/items/a91a396f03fac9516814\n\u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3057\u3066\u5fdc\u7b54\u3092\u8fd4\u3059\u30b5\u30fc\u30d0\u304c\u3042\u308b\u3068\u3059\u308b\u3002\n\u305d\u306e\u30b5\u30fc\u30d0\u306b\u5bfe\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3057\u3066\u5fdc\u7b54\u3092\u53d7\u4fe1\u3059\u308b\u51e6\u7406\u306b\u306f\u4f55\u3092\u4f7f\u3046\u306e\u304c\u826f\u3044\u306e\u304b\u3002\nTIdUDPClient\u3092\u4f7f\u3046\u5834\u5408\u3082\u3042\u308b\u304c\u3001\u4ee5\u4e0b\u306e\u3084\u308a\u53d6\u308a\u3092\u898b\u308b\u3068\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u51e6\u7406\u306e\u8003\u616e\u306a\u3069\u304b\u3089TIdUDPServer\u3092\u4f7f\u3046\u3068\u3044\u3046\u65b9\u6cd5\u3082\u8003\u3048\u3089\u308c\u308b\u3002\nhttp://stackoverflow.com/questions/10550440/delphi-indy-idudpclient-read-operation-no-data-returned\n\nAlternatively, use TIdUDPServer instead. Set up its Bindings property with the local IP/Port pair(s) you want to receive data on, and then let its OnUDPRead event tell you whenever new data arrives from any remote IP/Port.\n\n\u4ee5\u4e0b\u3067\u5b9f\u88c5\u3067\u304d\u305f\u3002\n\nUnit1.h\n//---------------------------------------------------------------------------\n\n#ifndef Unit1H\n#define Unit1H\n//---------------------------------------------------------------------------\n#include <System.Classes.hpp>\n#include <Vcl.Controls.hpp>\n#include <Vcl.StdCtrls.hpp>\n#include <Vcl.Forms.hpp>\n#include <IdBaseComponent.hpp>\n#include <IdComponent.hpp>\n#include <IdSocketHandle.hpp>\n#include <IdUDPBase.hpp>\n#include <IdUDPServer.hpp>\n//---------------------------------------------------------------------------\nclass TForm1 : public TForm\n{\n__published:    // IDE \u3067\u7ba1\u7406\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n    TButton *Button1;\n    TIdUDPServer *IdUDPServer1;\n    void __fastcall FormCreate(TObject *Sender);\n    void __fastcall Button1Click(TObject *Sender);\n    void __fastcall IdUDPServer1UDPRead(TIdUDPListenerThread *AThread, const TIdBytes AData,\n          TIdSocketHandle *ABinding);\nprivate:    // \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\npublic:     // \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n    __fastcall TForm1(TComponent* Owner);\n};\n//---------------------------------------------------------------------------\nextern PACKAGE TForm1 *Form1;\n//---------------------------------------------------------------------------\n#endif\n\n\n\nUnit1.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include \"Unit1.h\"\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n    : TForm(Owner)\n{\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TForm1::FormCreate(TObject *Sender)\n{\n    IdUDPServer1->DefaultPort = 6000;\n    IdUDPServer1->Active = true;\n}\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n    String cmd = L\"L_myIP\";\n    String ipadr = L\"192.168.0.31\";\n    int port = 6000;\n\n    IdUDPServer1->Send(ipadr, port, cmd, IndyTextEncoding(932) );\n\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TForm1::IdUDPServer1UDPRead(TIdUDPListenerThread *AThread, const TIdBytes AData,\n          TIdSocketHandle *ABinding)\n{\n    String rcvdStr;\n    Idglobal::_di_IIdTextEncoding encSJIS;\n\n    encSJIS = IndyTextEncoding(932);\n\n    int init_pos = 0;\n    rcvdStr = encSJIS->GetString(AData, init_pos, AData.Length);\n    int nop=1;\n}\n//---------------------------------------------------------------------------\n\n\nButton1\u3092\u62bc\u3059\u3068\u30b3\u30de\u30f3\u30c9\u304c\u9001\u4fe1\u3055\u308c\u3001\u5fdc\u7b54\u304cIdUDPServer1UDPRead()\u306b\u3066\u53d7\u4fe1\u3055\u308c\u308b\u3002\n( \u4f8b: L\"\\x02L_myIP,192.168.0.31\\x03\u30fb\" )\n\u3053\u306e\u65b9\u6cd5\u3067\u306f\u3001TThread\u3084\u53d7\u4fe1\u78ba\u8a8d\u306e\u305f\u3081\u306e\u5225\u51e6\u7406\u304c\u4e0d\u8981\u3067\u3042\u308b\u70b9\u304c\u826f\u3044\u3002\n\nASCII\u30b3\u30fc\u30c9\u306e\u307f\u5bfe\u5fdc\n(\u8ffd\u8a18 2017/02/23)\n\u3053\u3061\u3089\u306e\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3001CodePage 932\u306b\u3057\u3066\u3044\u308b\u305f\u3081\u3001ASCII\u30b3\u30fc\u30c9\u306e\u307f\u3057\u304b\u53d7\u4fe1\u3067\u304d\u306a\u3044\u3002\nhttp://qiita.com/7of9/items/94844e82e3f94898f329\n```txt:\u52d5\u4f5c\u74b0\u5883\nC++ Builder XE4\n```\n\n\u95a2\u9023\u3000http://qiita.com/7of9/items/a91a396f03fac9516814\n\n\u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3057\u3066\u5fdc\u7b54\u3092\u8fd4\u3059\u30b5\u30fc\u30d0\u304c\u3042\u308b\u3068\u3059\u308b\u3002\n\u305d\u306e\u30b5\u30fc\u30d0\u306b\u5bfe\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3057\u3066\u5fdc\u7b54\u3092\u53d7\u4fe1\u3059\u308b\u51e6\u7406\u306b\u306f\u4f55\u3092\u4f7f\u3046\u306e\u304c\u826f\u3044\u306e\u304b\u3002\n\nTIdUDPClient\u3092\u4f7f\u3046\u5834\u5408\u3082\u3042\u308b\u304c\u3001\u4ee5\u4e0b\u306e\u3084\u308a\u53d6\u308a\u3092\u898b\u308b\u3068\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u51e6\u7406\u306e\u8003\u616e\u306a\u3069\u304b\u3089TIdUDPServer\u3092\u4f7f\u3046\u3068\u3044\u3046\u65b9\u6cd5\u3082\u8003\u3048\u3089\u308c\u308b\u3002\nhttp://stackoverflow.com/questions/10550440/delphi-indy-idudpclient-read-operation-no-data-returned\n> Alternatively, use TIdUDPServer instead. Set up its Bindings property with the local IP/Port pair(s) you want to receive data on, and then let its OnUDPRead event tell you whenever new data arrives from any remote IP/Port.\n\n\u4ee5\u4e0b\u3067\u5b9f\u88c5\u3067\u304d\u305f\u3002\n\n```Unit1.h\n//---------------------------------------------------------------------------\n\n#ifndef Unit1H\n#define Unit1H\n//---------------------------------------------------------------------------\n#include <System.Classes.hpp>\n#include <Vcl.Controls.hpp>\n#include <Vcl.StdCtrls.hpp>\n#include <Vcl.Forms.hpp>\n#include <IdBaseComponent.hpp>\n#include <IdComponent.hpp>\n#include <IdSocketHandle.hpp>\n#include <IdUDPBase.hpp>\n#include <IdUDPServer.hpp>\n//---------------------------------------------------------------------------\nclass TForm1 : public TForm\n{\n__published:\t// IDE \u3067\u7ba1\u7406\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\tTButton *Button1;\n\tTIdUDPServer *IdUDPServer1;\n\tvoid __fastcall FormCreate(TObject *Sender);\n\tvoid __fastcall Button1Click(TObject *Sender);\n\tvoid __fastcall IdUDPServer1UDPRead(TIdUDPListenerThread *AThread, const TIdBytes AData,\n          TIdSocketHandle *ABinding);\nprivate:\t// \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\npublic:\t\t// \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n\t__fastcall TForm1(TComponent* Owner);\n};\n//---------------------------------------------------------------------------\nextern PACKAGE TForm1 *Form1;\n//---------------------------------------------------------------------------\n#endif\n```\n\n```Unit1.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include \"Unit1.h\"\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n\t: TForm(Owner)\n{\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TForm1::FormCreate(TObject *Sender)\n{\n\tIdUDPServer1->DefaultPort = 6000;\n\tIdUDPServer1->Active = true;\n}\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n\tString cmd = L\"L_myIP\";\n\tString ipadr = L\"192.168.0.31\";\n\tint port = 6000;\n\n\tIdUDPServer1->Send(ipadr, port, cmd, IndyTextEncoding(932) );\n\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TForm1::IdUDPServer1UDPRead(TIdUDPListenerThread *AThread, const TIdBytes AData,\n          TIdSocketHandle *ABinding)\n{\n\tString rcvdStr;\n\tIdglobal::_di_IIdTextEncoding encSJIS;\n\n\tencSJIS = IndyTextEncoding(932);\n\n\tint init_pos = 0;\n\trcvdStr = encSJIS->GetString(AData, init_pos, AData.Length);\n\tint nop=1;\n}\n//---------------------------------------------------------------------------\n```\n\n\nButton1\u3092\u62bc\u3059\u3068\u30b3\u30de\u30f3\u30c9\u304c\u9001\u4fe1\u3055\u308c\u3001\u5fdc\u7b54\u304cIdUDPServer1UDPRead()\u306b\u3066\u53d7\u4fe1\u3055\u308c\u308b\u3002\n( \u4f8b: `L\"\\x02L_myIP,192.168.0.31\\x03\u30fb\"` )\n\n\u3053\u306e\u65b9\u6cd5\u3067\u306f\u3001TThread\u3084\u53d7\u4fe1\u78ba\u8a8d\u306e\u305f\u3081\u306e\u5225\u51e6\u7406\u304c\u4e0d\u8981\u3067\u3042\u308b\u70b9\u304c\u826f\u3044\u3002\n\n## ASCII\u30b3\u30fc\u30c9\u306e\u307f\u5bfe\u5fdc\n(\u8ffd\u8a18 2017/02/23)\n\n\u3053\u3061\u3089\u306e\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3001CodePage 932\u306b\u3057\u3066\u3044\u308b\u305f\u3081\u3001ASCII\u30b3\u30fc\u30c9\u306e\u307f\u3057\u304b\u53d7\u4fe1\u3067\u304d\u306a\u3044\u3002\nhttp://qiita.com/7of9/items/94844e82e3f94898f329\n\n\n", "tags": ["cppBuilder", "indy", "udp", "networkApp"]}