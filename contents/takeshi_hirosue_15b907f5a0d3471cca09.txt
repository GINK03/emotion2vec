{"context": "solr cloud\u306e\u30d0\u30fc\u30b8\u30e7\u30f3UP\u691c\u8a3c\u3092Amazon EC2\u3092\u5229\u7528\u3057\u3066\u3084\u3063\u3066\u307f\u308b\u3002\n\u203b\u5b9f\u884c\u3059\u308b\u3068EC2\u306e\u5229\u7528\u6599\u91d1\u304c\u639b\u304b\u308a\u307e\u3059\u3002 \n\u5229\u7528\u6599\u91d1\u8a73\u7d30\u306f\u3053\u3061\u3089\n\n\u5fc5\u8981\u306a\u3082\u306e\n\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\uff0fAmazon EC2 \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\uff0f\u30ad\u30fc\u30da\u30a2\nAmazon VPC(172.31.0.0/16)\nVPC\u306e\u4f5c\u6210\u306f\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u5bfe\u8c61\u304b\u3089\u5916\u3057\u3066\u3044\u307e\u3059\n\u4ee5\u4e0b\u3001\u4f7f\u7528\u3059\u308b\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\n\u4f7f\u7528\u3059\u308b\u30c4\u30fc\u30eb\n\nTerraForm \n\u30a4\u30f3\u30d5\u30e9(EC2)\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u884c\u3046\nAnsible\u3000\n\u30a2\u30d7\u30ea\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u884c\u3046\n\n\n\u624b\u9806\n\nEC2\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7(2\u53f0)\nEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078solr cloud\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\nEC2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nTerraform\u3067EC2\u306e\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u884c\u3046\u3002\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9 \n\ntf\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u8a2d\u5b9a\u306e.tf\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\n\n\nvariable \"access_key\" {}\nvariable \"secret_key\" {}\n\nprovider \"aws\" {\n    access_key = \"${var.access_key}\"\n    secret_key = \"${var.secret_key}\"\n    region = \"ap-northeast-1\"\n}\n\nresource \"aws_instance\" \"solr1\" {\n    ami = \"ami-b1b458b1\"\n    key_name = \"devenv-key\"\n    instance_type = \"t2.small\"\n    vpc_security_group_ids = [\n        \"${aws_security_group.allow_local.id}\"\n    ]\n    private_ip = \"172.31.1.1\"\n}\n\nresource \"aws_instance\" \"solr2\" {\n    ami = \"ami-b1b458b1\"\n    key_name = \"devenv-key\"\n    instance_type = \"t2.small\"\n    vpc_security_group_ids = [\n        \"${aws_security_group.allow_local.id}\"\n    ]\n    private_ip = \"172.31.1.2\"\n}\n\nresource \"aws_security_group\" \"allow_local\" {\n    name = \"allow_local\"\n    description = \"Allow Only Local traffic\"\n    ingress {\n        from_port = 0\n        to_port = 0\n        protocol = \"-1\"\n        cidr_blocks = [\"xxx.xxx.xxx.xxx/32\",\"172.31.0.0/16\"]\n    }\n    egress {\n        from_port = 0\n        to_port = 0\n        protocol = \"-1\"\n        cidr_blocks = [\"0.0.0.0/0\"]\n    }\n}\n\n\u203b security\u30b0\u30eb\u30fc\u30d7\u3067\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u5143\u306eGrobal IP\u3068VPC\u5185\u306e\u63a5\u7d9a\u306e\u307f\u8a31\u53ef\n\ntfvars\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\nAWS CLI\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\uff0f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u3092.tfvars\u306b\u8a18\u8f09\u3059\u308b\n\n\naccess_key=\"[AWS accessKey\u3092\u8a18\u8f09]\"\nsecret_key=\"[AWS secretKey\u3092\u8a18\u8f09]\"\n\n\nEC2\u306e\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u691c\u8a3c\n\nterraform plan -var-file=secret.tfvars\n\n\nEC2\u306e\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u5b9f\u884c\n\nterraform apply -var-file=secret.tfvars\n\n\nSolr Cloud\u69cb\u7bc9\nAnsible\u3067Solr Cloud\u306e\u69cb\u7bc9\u3092\u884c\u3046\u3002\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9 \n\nhosts\u306e\u4f5c\u6210\n\n[solr]\nsolr1 ansible_ssh_host=[AWS\u3067\u6255\u3044\u51fa\u3055\u308c\u305fGrobal Ip\u3092\u8a18\u8f09] ansible_ssh_user=ec2-user local_ip=172.31.1.1 myid=1\nsolr2 ansible_ssh_host=[AWS\u3067\u6255\u3044\u51fa\u3055\u308c\u305fGrobal Ip\u3092\u8a18\u8f09] ansible_ssh_user=ec2-user local_ip=172.31.1.2 myid=2\n\n\nyml\u306e\u4f5c\u6210\n\u30a2\u30d7\u30ea\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u7528\u306eyml\u4f5c\u6210\n\n- hosts: solr\n  become: yes\n  vars:\n    solr_version: 6.0.1\n    zookeeper_version: 3.4.8\n  tasks:a\n    - name: wget install\n      yum: name=wget state=installed\n\n    - name: jdk download #header\u3092\u5229\u7528\u3057\u3001\u8a8d\u8a3c\u30b9\u30ad\u30c3\u30d7\n      shell: 'wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm'\n      when: install_skip is undefined\n\n    - name: jdk install\n      shell: rpm -ivh jdk-8u91-linux-x64.rpm\n      when: install_skip is undefined\n\n    - name: solr dowonload\n      get_url: url=http://archive.apache.org/dist/lucene/solr/{{solr_version}}/solr-{{solr_version}}.tgz dest=/opt/ mode=0755\n      when: install_skip is undefined\n\n    - name: solr unarchive\n      unarchive: src=/opt/solr-{{solr_version}}.tgz dest=/opt/ copy=no\n\n    - name: zookeeper dowonload\n      get_url: url=http://ftp.jaist.ac.jp/pub/apache/zookeeper/zookeeper-{{zookeeper_version}}/zookeeper-{{zookeeper_version}}.tar.gz dest=/opt/ mode=0755\n      when: install_skip is undefined\n\n    - name: zookeeper unarchive\n      unarchive: src=/opt/zookeeper-{{zookeeper_version}}.tar.gz dest=/opt/ copy=no\n      when: install_skip is undefined\n\n    - name: create zookeeper data dir\n      file: path=/var/zookeeper state=directory owner=root\n\n    - name: write myid file #zookeeper myid\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n      template: src=myid dest=/var/zookeeper\n\n    - name: setting zookeeper conf ##zookeeper\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n      template: src=zoo.cfg dest=/opt/zookeeper-{{zookeeper_version}}/conf/\n\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u5b9f\u884c\uff08\u203bAWS\u30ad\u30fc\u30da\u30a2\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3053\u3068\uff09\n\nansible-playbook -i hosts --private-key=devenv-key.pem provisioning.yml -v\n\n\nsolr cloud\u8d77\u52d5\n\n\n#zookeeper\u8d77\u52d5\n/opt/zookeeper-{{zookeeper_version}}/bin/zkServer.sh start\n#solr\u8d77\u52d5\n/opt/solr-{{solr_version}}/bin/solr start -c -z 172.31.1.1:2181,172.31.1.2:2181\n\n\nsolr \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u5272\u611b\uff08\u203b\u4ee5\u4e0b\u3001Solr API\u3092\u5229\u7528\u3057\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\uff09\nCollection API\u3000\n\n\n\nEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u524a\u9664\nTerraform\u3067EC2\u306e\u524a\u9664\u3092\u884c\u3046\u3002\n\n\u691c\u8a3c\n\nterraform plan -destroy -out=./terraform.tfstate -var-file=secret.tfvars\n\n\nEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u524a\u9664\u5b9f\u884c\n\nterraform apply ./terraform.tfstate\n\n\n\u6700\u5f8c\u306b\ncloud\u3001tool\u3092\u4f7f\u3048\u3070\u3001\u30b5\u30af\u30c3\u3068\u69d8\u3005\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u6319\u52d5\u304c\u691c\u8a3c\u3067\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306faws\u306e\u52c9\u5f37\u3082\u517c\u306d\u3066\u3044\u308b\u305f\u3081\u3001vagrant\u3067\u306f\u306a\u304fec2\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nsolr cloud\u306e\u30d0\u30fc\u30b8\u30e7\u30f3UP\u691c\u8a3c\u3092Amazon EC2\u3092\u5229\u7528\u3057\u3066\u3084\u3063\u3066\u307f\u308b\u3002\n<span class=\"red\">\u203b\u5b9f\u884c\u3059\u308b\u3068EC2\u306e\u5229\u7528\u6599\u91d1\u304c\u639b\u304b\u308a\u307e\u3059\u3002</span> \n[\u5229\u7528\u6599\u91d1\u8a73\u7d30\u306f\u3053\u3061\u3089](https://aws.amazon.com/jp/ec2/pricing/ \"EC2\u6599\u91d1\")\n\n## \u5fc5\u8981\u306a\u3082\u306e\n+ AWS\u30a2\u30ab\u30a6\u30f3\u30c8\uff0fAmazon EC2 \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\uff0f\u30ad\u30fc\u30da\u30a2\n\n+ Amazon VPC(172.31.0.0/16)\nVPC\u306e\u4f5c\u6210\u306f\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u5bfe\u8c61\u304b\u3089\u5916\u3057\u3066\u3044\u307e\u3059\n\n+ \u4ee5\u4e0b\u3001\u4f7f\u7528\u3059\u308b\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n## \u4f7f\u7528\u3059\u308b\u30c4\u30fc\u30eb\n+ [TerraForm](https://www.terraform.io/ \"TerraForm\") \n\u30a4\u30f3\u30d5\u30e9(EC2)\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u884c\u3046\n\n+ [Ansible](http://docs.ansible.com/ansible/ \"Ansible\")\u3000\n\u30a2\u30d7\u30ea\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u884c\u3046\n\n## \u624b\u9806\n1. EC2\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7(2\u53f0)\n\n1. EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078solr cloud\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n## EC2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nTerraform\u3067EC2\u306e\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u884c\u3046\u3002\n[\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9](https://github.com/Thirosue/terraform-sample/tree/master/aws_ec2/ \"\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\")   \n\n+ tf\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210  \n\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u8a2d\u5b9a\u306e.tf\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b  \n\n```\nvariable \"access_key\" {}\nvariable \"secret_key\" {}\n\nprovider \"aws\" {\n    access_key = \"${var.access_key}\"\n    secret_key = \"${var.secret_key}\"\n    region = \"ap-northeast-1\"\n}\n\nresource \"aws_instance\" \"solr1\" {\n    ami = \"ami-b1b458b1\"\n    key_name = \"devenv-key\"\n    instance_type = \"t2.small\"\n    vpc_security_group_ids = [\n        \"${aws_security_group.allow_local.id}\"\n    ]\n    private_ip = \"172.31.1.1\"\n}\n\nresource \"aws_instance\" \"solr2\" {\n    ami = \"ami-b1b458b1\"\n    key_name = \"devenv-key\"\n    instance_type = \"t2.small\"\n    vpc_security_group_ids = [\n        \"${aws_security_group.allow_local.id}\"\n    ]\n    private_ip = \"172.31.1.2\"\n}\n\nresource \"aws_security_group\" \"allow_local\" {\n    name = \"allow_local\"\n    description = \"Allow Only Local traffic\"\n    ingress {\n        from_port = 0\n        to_port = 0\n        protocol = \"-1\"\n        cidr_blocks = [\"xxx.xxx.xxx.xxx/32\",\"172.31.0.0/16\"]\n    }\n    egress {\n        from_port = 0\n        to_port = 0\n        protocol = \"-1\"\n        cidr_blocks = [\"0.0.0.0/0\"]\n    }\n}\n```\n\u203b security\u30b0\u30eb\u30fc\u30d7\u3067\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u5143\u306eGrobal IP\u3068VPC\u5185\u306e\u63a5\u7d9a\u306e\u307f\u8a31\u53ef\n\n+ tfvars\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210  \nAWS CLI\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\uff0f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u3092.tfvars\u306b\u8a18\u8f09\u3059\u308b  \n\n```\naccess_key=\"[AWS accessKey\u3092\u8a18\u8f09]\"\nsecret_key=\"[AWS secretKey\u3092\u8a18\u8f09]\"\n```\n\n+ EC2\u306e\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u691c\u8a3c\n\n```sh\nterraform plan -var-file=secret.tfvars\n```\n\n+ EC2\u306e\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u5b9f\u884c\n\n```sh\nterraform apply -var-file=secret.tfvars\n```\n\n## Solr Cloud\u69cb\u7bc9\nAnsible\u3067Solr Cloud\u306e\u69cb\u7bc9\u3092\u884c\u3046\u3002\n[\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9](https://github.com/Thirosue/ansible-samples/tree/master/solr-cloud-aws/ \"\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\")  \n\n+ hosts\u306e\u4f5c\u6210\n\n```\n[solr]\nsolr1 ansible_ssh_host=[AWS\u3067\u6255\u3044\u51fa\u3055\u308c\u305fGrobal Ip\u3092\u8a18\u8f09] ansible_ssh_user=ec2-user local_ip=172.31.1.1 myid=1\nsolr2 ansible_ssh_host=[AWS\u3067\u6255\u3044\u51fa\u3055\u308c\u305fGrobal Ip\u3092\u8a18\u8f09] ansible_ssh_user=ec2-user local_ip=172.31.1.2 myid=2\n```  \n\n+ yml\u306e\u4f5c\u6210  \n\u30a2\u30d7\u30ea\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u7528\u306eyml\u4f5c\u6210\n\n```yml\n- hosts: solr\n  become: yes\n  vars:\n    solr_version: 6.0.1\n    zookeeper_version: 3.4.8\n  tasks:a\n    - name: wget install\n      yum: name=wget state=installed\n\n    - name: jdk download #header\u3092\u5229\u7528\u3057\u3001\u8a8d\u8a3c\u30b9\u30ad\u30c3\u30d7\n      shell: 'wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm'\n      when: install_skip is undefined\n\n    - name: jdk install\n      shell: rpm -ivh jdk-8u91-linux-x64.rpm\n      when: install_skip is undefined\n\n    - name: solr dowonload\n      get_url: url=http://archive.apache.org/dist/lucene/solr/{{solr_version}}/solr-{{solr_version}}.tgz dest=/opt/ mode=0755\n      when: install_skip is undefined\n\n    - name: solr unarchive\n      unarchive: src=/opt/solr-{{solr_version}}.tgz dest=/opt/ copy=no\n\n    - name: zookeeper dowonload\n      get_url: url=http://ftp.jaist.ac.jp/pub/apache/zookeeper/zookeeper-{{zookeeper_version}}/zookeeper-{{zookeeper_version}}.tar.gz dest=/opt/ mode=0755\n      when: install_skip is undefined\n\n    - name: zookeeper unarchive\n      unarchive: src=/opt/zookeeper-{{zookeeper_version}}.tar.gz dest=/opt/ copy=no\n      when: install_skip is undefined\n\n    - name: create zookeeper data dir\n      file: path=/var/zookeeper state=directory owner=root\n\n    - name: write myid file #zookeeper myid\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n      template: src=myid dest=/var/zookeeper\n\n    - name: setting zookeeper conf ##zookeeper\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n      template: src=zoo.cfg dest=/opt/zookeeper-{{zookeeper_version}}/conf/\n```\n\n+ \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u5b9f\u884c\uff08\u203bAWS\u30ad\u30fc\u30da\u30a2\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3053\u3068\uff09\n\n```sh\nansible-playbook -i hosts --private-key=devenv-key.pem provisioning.yml -v\n```  \n\n+ solr cloud\u8d77\u52d5  \n\n```sh\n#zookeeper\u8d77\u52d5\n/opt/zookeeper-{{zookeeper_version}}/bin/zkServer.sh start\n#solr\u8d77\u52d5\n/opt/solr-{{solr_version}}/bin/solr start -c -z 172.31.1.1:2181,172.31.1.2:2181\n```  \n\n+ solr \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7  \n\u5272\u611b\uff08\u203b\u4ee5\u4e0b\u3001Solr API\u3092\u5229\u7528\u3057\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\uff09  \n[Collection API](https://cwiki.apache.org/confluence/display/solr/Collections+API/ \"Collection API\")\u3000  \n\n## EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u524a\u9664\nTerraform\u3067EC2\u306e\u524a\u9664\u3092\u884c\u3046\u3002\n\n+ \u691c\u8a3c\n\n```bash\nterraform plan -destroy -out=./terraform.tfstate -var-file=secret.tfvars\n```\n\n+ EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u524a\u9664\u5b9f\u884c\n\n```bash\nterraform apply ./terraform.tfstate\n```\n\n## \u6700\u5f8c\u306b\ncloud\u3001tool\u3092\u4f7f\u3048\u3070\u3001\u30b5\u30af\u30c3\u3068\u69d8\u3005\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u6319\u52d5\u304c\u691c\u8a3c\u3067\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306faws\u306e\u52c9\u5f37\u3082\u517c\u306d\u3066\u3044\u308b\u305f\u3081\u3001vagrant\u3067\u306f\u306a\u304fec2\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n", "tags": ["BTC", "Ansible", "Terraform", "solrcloud", "EC2"]}