{"tags": ["Perl6", "algorithm"], "context": "\u3053\u3093\u306b\u3061\u306f\u3001Perl 6\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e9\u65e5\u76ee\u306e\u6295\u7a3f\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u65e5\u306f\u3001\u62d9\u4f5cAlgorithm::MinMaxHeap\u306e\u7d39\u4ecb\u3092\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nIntroduction\nAlgorithm::MinMaxHeap \u306fdouble-ended priority queue\u306e\u5b9f\u88c5\u3067\u3059\u3002[0]\n\u4e00\u3064\u306e\u6728\u69cb\u9020\u306e\u4e2d\u306b\u3001\u964d\u9806\u3068\u6607\u9806\u306e2\u7a2e\u985e\u306e\u30d2\u30fc\u30d7\u304c\u540c\u6642\u306b\u5165\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u3001\u3061\u3087\u3063\u3068\u304a\u3082\u3057\u308d\u3044\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u3082\u3046\u5c11\u3057\u6b63\u78ba\u306a\u8a00\u8449\u3067\u8a00\u3044\u63db\u3048\u308b\u3068\u3001\u3053\u308c\u306f\u30ce\u30fc\u30c9\u304cMin-Max\u30aa\u30fc\u30c0\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\u6728\u3067\u3059\uff1a\n\n\u5076\u6570\u6bb5\u76ee(\u56f3\u306eMin level)\u306b\u3042\u308b\u30ce\u30fc\u30c9\u306f\u3001\u540c\u3058\u5076\u6570\u6bb5\u76ee\u306b\u3042\u308b\u5b50\u306e\u30ce\u30fc\u30c9\u3068\u5024\u304c\u540c\u3058\u304b\u305d\u308c\u3088\u308a\u3082\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u5947\u6570\u6bb5\u76ee(\u56f3\u306eMax level)\u306b\u3042\u308b\u30ce\u30fc\u30c9\u306f\u3001\u540c\u3058\u5947\u6570\u6bb5\u76ee\u306b\u3042\u308b\u5b50\u306e\u30ce\u30fc\u30c9\u3068\u5024\u304c\u540c\u3058\u304b\u305d\u308c\u3088\u308a\u3082\u5927\u304d\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\nMinMaxHeap Internals\n\u4ee3\u8868\u7684\u306a\u30e1\u30bd\u30c3\u30c9(e.g. insert, pop)\u306b\u3064\u3044\u3066\u3001\u5185\u90e8\u3067\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u884c\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\nMin-Max\u30aa\u30fc\u30c0\u30fc\u3092\u7dad\u6301\u3057\u3064\u3064insert\u3084pop\u3092\u884c\u3046\u305f\u3081\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u64cd\u4f5c\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\uff1a\n\ninsert:\n\n\u30d2\u30fc\u30d7\u306e\u672b\u5c3e\u306b\u30ce\u30fc\u30c9\u3092\u30d7\u30c3\u30b7\u30e5\u3059\u308b\n\u30d7\u30c3\u30b7\u30e5\u3057\u305f\u3068\u3053\u308d\u304b\u3089\u30eb\u30fc\u30c8\u3078\u5411\u304b\u3063\u3066\u3044\u304d\u3001\u3082\u3057\u3082Min-Max\u30aa\u30fc\u30c0\u30fc\u3092\u5d29\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u3092\u898b\u3064\u3051\u305f\u3089 (\u203b)\u3001\u5d29\u308c\u306a\u3044\u3088\u3046\u306b\u30ce\u30fc\u30c9\u3092\u30b9\u30ef\u30c3\u30d7\u3059\u308b\u3068\u3044\u3046\u64cd\u4f5c\u3092\u7e70\u308a\u8fd4\u3059(\u203b)\n\n\npop-max:\n\nMax level\u306e\u30ce\u30fc\u30c9\u306e\u3046\u3061\u4e00\u756a\u5024\u306e\u5927\u304d\u3044\u8981\u7d20\u3092\u629c\u304d\u3001\u30d2\u30fc\u30d7\u306e\u4e2d\u3067\u4e00\u756a\u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u3067\u629c\u3051\u305f\u3068\u3053\u308d\u3092\u57cb\u3081\u308b\n\u57cb\u3081\u305f\u3068\u3053\u308d\u304b\u3089\u8449\u306e\u65b9\u5411\u3078\u5411\u304b\u3063\u3066\u3044\u304d\u3001\u3082\u3057\u3082Min-Max\u30aa\u30fc\u30c0\u30fc\u3092\u5d29\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u3092\u898b\u3064\u3051\u305f\u3089\u3001\u5d29\u308c\u306a\u3044\u3088\u3046\u306b\u30ce\u30fc\u30c9\u3092\u30b9\u30ef\u30c3\u30d7\u3059\u308b\u3068\u3044\u3046\u64cd\u4f5c\u3092\u7e70\u308a\u8fd4\u3059(\u203b)\n\n\npop-min:\n\nMin level\u306e\u30ce\u30fc\u30c9\u306e\u3046\u3061\u4e00\u756a\u5024\u306e\u5c0f\u3055\u3044\u8981\u7d20\u3092\u629c\u304d\u3001\u30d2\u30fc\u30d7\u306e\u4e2d\u3067\u4e00\u756a\u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u3067\u629c\u3051\u305f\u3068\u3053\u308d\u3092\u57cb\u3081\u308b\n\u57cb\u3081\u305f\u3068\u3053\u308d\u304b\u3089\u8449\u306e\u65b9\u5411\u3078\u5411\u304b\u3063\u3066\u3044\u304d\u3001\u3082\u3057\u3082Min-Max\u30aa\u30fc\u30c0\u30fc\u3092\u5d29\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u3092\u898b\u3064\u3051\u305f\u3089\u3001\u5d29\u308c\u306a\u3044\u3088\u3046\u306b\u30ce\u30fc\u30c9\u3092\u30b9\u30ef\u30c3\u30d7\u3059\u308b\u3068\u3044\u3046\u64cd\u4f5c\u3092\u7e70\u308a\u8fd4\u3059(\u203b)\n\n(\u203b) \u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u3060\u3044\u3076\u7c21\u6f54\u306b\u8868\u73fe\u3057\u307e\u3057\u305f\u3002\u6b63\u78ba\u306a\u64cd\u4f5c\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3061\u3083\u3093\u3068\u8ad6\u6587\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\nLet's try !\n\u3067\u306f\u3001\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4e00\u756a\u7c21\u5358\u306a\u4f8b\u3092\u7d39\u4ecb\u3059\u308b\u3068\u3001\u3082\u3061\u308d\u3093\u3001\u3054\u304f\u666e\u901a\u306bInt\u578b\u306e\u5024\u3092\u30ce\u30fc\u30c9\u3068\u3057\u305fdouble-ended priority queue\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a\n\nbasic.p6\nuse Algorithm::MinMaxHeap;\n\nmy Algorithm::MinMaxHeap[Int] $heap .= new;\nmy Int @items = (^10).pick(*);\n@items.say;                       # [1 2 6 4 5 9 0 3 7 8]                                                            \n$heap.insert($_) for @items;\n$heap.pop-max.say; # 9    \n\n\n\u307e\u305f\u3001subset\u3092\u4f7f\u3063\u3066\u8907\u96d1\u306a\u578b\u306e\u5236\u7d04\u3092\u81ea\u5206\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u4f8b\u3067\u306fCool\u578b\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067Rat\u304bNum\u3057\u304b\u4f7f\u3048\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u306eChimeraRat\u578b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\uff1a\n\nchimera.p6\nuse Algorithm::MinMaxHeap;\n\nmy subset ChimeraRat of Cool where Num|Rat;\nmy Algorithm::MinMaxHeap[ChimeraRat] $heap .= new;\n\n$heap.insert(10e0); # ok                                                                                             \n$heap.insert(1/10); # ok                                                                                             \n$heap.insert(10); # die \n\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b Int\u578b\u306e10\u3092\u4ee3\u5165\u3057\u305f\u3068\u304d\u306b\u3001\u304d\u3061\u3093\u3068\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u7d42\u4e86\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff1a\n\n\u5b9f\u884c\u7d50\u679c\n$ perl6 chimera.p6\nType check failed in assignment to @!nodes; expected ChimeraRat but got Int (10)\n  in method insert at /home/itoyota/.rakudobrew/moar-nom/install/share/perl6/site/sources/240192C19BBAACD01AB9686EE53F67BC530F8545 (Algorithm::MinMaxHeap) line 12\n  in block <unit> at 01.p6 line 8\n\n\n\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092double-ended priority queue\u306b\u5165\u308c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff1a\n\nclass.p6\nuse Algorithm::MinMaxHeap;\n\nmy class State {\n    also does Algorithm::MinMaxHeap::Comparable[State];\n    has DateTime $.time;\n    has $.payload;\n    submethod BUILD(:$!time, :$!payload) { }\n    method compare-to(State $s) {\n        if $!time == $s.time {\n            return Order::Same;\n        }\n        if $!time > $s.time {\n            return Order::More;\n        }\n        if $!time < $s.time {\n            return Order::Less;\n        }\n    }\n}\n\nmy State @items;\n@items.push(State.new(time => DateTime.new(:year(1900), :month(6)),\n                      payload => \"Rola\"));\n@items.push(State.new(time => DateTime.new(:year(-300), :month(3)),\n                      payload => \"Taro\"));\n@items.push(State.new(time => DateTime.new(:year(1963), :month(12)),\n                      payload => \"Hanako\"));\n@items.push(State.new(time => DateTime.new(:year(2020), :month(6)),\n                      payload => \"Jack\"));\n\nmy Algorithm::MinMaxHeap[Algorithm::MinMaxHeap::Comparable] $heap .= new;\n$heap.insert($_) for @items;\n$heap.pop-max.say until $heap.is-empty;\n\n\n\n\u5b9f\u884c\u7d50\u679c\n$ perl6 class.p6\nState.new(time => DateTime.new(2020,6,1,0,0,0), payload => \"Jack\")\nState.new(time => DateTime.new(1963,12,1,0,0,0), payload => \"Hanako\")\nState.new(time => DateTime.new(1900,6,1,0,0,0), payload => \"Rola\")\nState.new(time => DateTime.new(-300,3,1,0,0,0), payload => \"Taro\")\n\n\n\nReferences\n\nAtkinson, Michael D., et al. \"Min-max heaps and generalized priority queues.\" Communications of the ACM 29.10 (1986): 996-1000.\n\n\u4ee5\u4e0a\u30019\u65e5\u76ee\u306e\u6295\u7a3f\u3001\"Let's learn and try double-ended priority queue with Perl 6\"\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u3093\u306b\u3061\u306f\u3001Perl 6\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e9\u65e5\u76ee\u306e\u6295\u7a3f\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4eca\u65e5\u306f\u3001\u62d9\u4f5c[Algorithm::MinMaxHeap](https://github.com/titsuki/p6-Algorithm-MinMaxHeap)\u306e\u7d39\u4ecb\u3092\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Introduction\n\nAlgorithm::MinMaxHeap \u306fdouble-ended priority queue\u306e\u5b9f\u88c5\u3067\u3059\u3002[0]\n\n\u4e00\u3064\u306e\u6728\u69cb\u9020\u306e\u4e2d\u306b\u3001\u964d\u9806\u3068\u6607\u9806\u306e2\u7a2e\u985e\u306e\u30d2\u30fc\u30d7\u304c\u540c\u6642\u306b\u5165\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u3001\u3061\u3087\u3063\u3068\u304a\u3082\u3057\u308d\u3044\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u3082\u3046\u5c11\u3057\u6b63\u78ba\u306a\u8a00\u8449\u3067\u8a00\u3044\u63db\u3048\u308b\u3068\u3001\u3053\u308c\u306f\u30ce\u30fc\u30c9\u304cMin-Max\u30aa\u30fc\u30c0\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\u6728\u3067\u3059\uff1a\n\n* \u5076\u6570\u6bb5\u76ee(\u56f3\u306eMin level)\u306b\u3042\u308b\u30ce\u30fc\u30c9\u306f\u3001\u540c\u3058\u5076\u6570\u6bb5\u76ee\u306b\u3042\u308b\u5b50\u306e\u30ce\u30fc\u30c9\u3068\u5024\u304c\u540c\u3058\u304b\u305d\u308c\u3088\u308a\u3082\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n* \u5947\u6570\u6bb5\u76ee(\u56f3\u306eMax level)\u306b\u3042\u308b\u30ce\u30fc\u30c9\u306f\u3001\u540c\u3058\u5947\u6570\u6bb5\u76ee\u306b\u3042\u308b\u5b50\u306e\u30ce\u30fc\u30c9\u3068\u5024\u304c\u540c\u3058\u304b\u305d\u308c\u3088\u308a\u3082\u5927\u304d\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n![minmaxheap.jpg](https://qiita-image-store.s3.amazonaws.com/0/149227/1055d913-f3a1-ce56-18a8-bc8af5f3aa29.jpeg)\n\n\n## MinMaxHeap Internals\n\n\u4ee3\u8868\u7684\u306a\u30e1\u30bd\u30c3\u30c9(e.g. insert, pop)\u306b\u3064\u3044\u3066\u3001\u5185\u90e8\u3067\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u884c\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\nMin-Max\u30aa\u30fc\u30c0\u30fc\u3092\u7dad\u6301\u3057\u3064\u3064insert\u3084pop\u3092\u884c\u3046\u305f\u3081\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u64cd\u4f5c\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\uff1a\n\n### insert:\n1. \u30d2\u30fc\u30d7\u306e\u672b\u5c3e\u306b\u30ce\u30fc\u30c9\u3092\u30d7\u30c3\u30b7\u30e5\u3059\u308b\n2. \u30d7\u30c3\u30b7\u30e5\u3057\u305f\u3068\u3053\u308d\u304b\u3089\u30eb\u30fc\u30c8\u3078\u5411\u304b\u3063\u3066\u3044\u304d\u3001\u3082\u3057\u3082Min-Max\u30aa\u30fc\u30c0\u30fc\u3092\u5d29\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u3092\u898b\u3064\u3051\u305f\u3089 (\u203b)\u3001\u5d29\u308c\u306a\u3044\u3088\u3046\u306b\u30ce\u30fc\u30c9\u3092\u30b9\u30ef\u30c3\u30d7\u3059\u308b\u3068\u3044\u3046\u64cd\u4f5c\u3092\u7e70\u308a\u8fd4\u3059(\u203b)\n\n### pop-max:\n1. Max level\u306e\u30ce\u30fc\u30c9\u306e\u3046\u3061\u4e00\u756a\u5024\u306e\u5927\u304d\u3044\u8981\u7d20\u3092\u629c\u304d\u3001\u30d2\u30fc\u30d7\u306e\u4e2d\u3067\u4e00\u756a\u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u3067\u629c\u3051\u305f\u3068\u3053\u308d\u3092\u57cb\u3081\u308b\n2. \u57cb\u3081\u305f\u3068\u3053\u308d\u304b\u3089\u8449\u306e\u65b9\u5411\u3078\u5411\u304b\u3063\u3066\u3044\u304d\u3001\u3082\u3057\u3082Min-Max\u30aa\u30fc\u30c0\u30fc\u3092\u5d29\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u3092\u898b\u3064\u3051\u305f\u3089\u3001\u5d29\u308c\u306a\u3044\u3088\u3046\u306b\u30ce\u30fc\u30c9\u3092\u30b9\u30ef\u30c3\u30d7\u3059\u308b\u3068\u3044\u3046\u64cd\u4f5c\u3092\u7e70\u308a\u8fd4\u3059(\u203b)\n\n### pop-min:\n1. Min level\u306e\u30ce\u30fc\u30c9\u306e\u3046\u3061\u4e00\u756a\u5024\u306e\u5c0f\u3055\u3044\u8981\u7d20\u3092\u629c\u304d\u3001\u30d2\u30fc\u30d7\u306e\u4e2d\u3067\u4e00\u756a\u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u3067\u629c\u3051\u305f\u3068\u3053\u308d\u3092\u57cb\u3081\u308b\n2. \u57cb\u3081\u305f\u3068\u3053\u308d\u304b\u3089\u8449\u306e\u65b9\u5411\u3078\u5411\u304b\u3063\u3066\u3044\u304d\u3001\u3082\u3057\u3082Min-Max\u30aa\u30fc\u30c0\u30fc\u3092\u5d29\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u3092\u898b\u3064\u3051\u305f\u3089\u3001\u5d29\u308c\u306a\u3044\u3088\u3046\u306b\u30ce\u30fc\u30c9\u3092\u30b9\u30ef\u30c3\u30d7\u3059\u308b\u3068\u3044\u3046\u64cd\u4f5c\u3092\u7e70\u308a\u8fd4\u3059(\u203b)\n\n(\u203b) \u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u3060\u3044\u3076\u7c21\u6f54\u306b\u8868\u73fe\u3057\u307e\u3057\u305f\u3002\u6b63\u78ba\u306a\u64cd\u4f5c\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3061\u3083\u3093\u3068\u8ad6\u6587\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n## Let's try !\n\n\u3067\u306f\u3001\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u4e00\u756a\u7c21\u5358\u306a\u4f8b\u3092\u7d39\u4ecb\u3059\u308b\u3068\u3001\u3082\u3061\u308d\u3093\u3001\u3054\u304f\u666e\u901a\u306bInt\u578b\u306e\u5024\u3092\u30ce\u30fc\u30c9\u3068\u3057\u305fdouble-ended priority queue\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a\n\n```pl:basic.p6\nuse Algorithm::MinMaxHeap;\n\nmy Algorithm::MinMaxHeap[Int] $heap .= new;\nmy Int @items = (^10).pick(*);\n@items.say;                       # [1 2 6 4 5 9 0 3 7 8]                                                            \n$heap.insert($_) for @items;\n$heap.pop-max.say; # 9    \n```\n\n\u307e\u305f\u3001subset\u3092\u4f7f\u3063\u3066\u8907\u96d1\u306a\u578b\u306e\u5236\u7d04\u3092\u81ea\u5206\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u4f8b\u3067\u306fCool\u578b\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067Rat\u304bNum\u3057\u304b\u4f7f\u3048\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u306eChimeraRat\u578b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\uff1a\n\n```pl:chimera.p6\nuse Algorithm::MinMaxHeap;\n\nmy subset ChimeraRat of Cool where Num|Rat;\nmy Algorithm::MinMaxHeap[ChimeraRat] $heap .= new;\n\n$heap.insert(10e0); # ok                                                                                             \n$heap.insert(1/10); # ok                                                                                             \n$heap.insert(10); # die \n```\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b Int\u578b\u306e10\u3092\u4ee3\u5165\u3057\u305f\u3068\u304d\u306b\u3001\u304d\u3061\u3093\u3068\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u7d42\u4e86\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff1a\n\n```bash:\u5b9f\u884c\u7d50\u679c\n$ perl6 chimera.p6\nType check failed in assignment to @!nodes; expected ChimeraRat but got Int (10)\n  in method insert at /home/itoyota/.rakudobrew/moar-nom/install/share/perl6/site/sources/240192C19BBAACD01AB9686EE53F67BC530F8545 (Algorithm::MinMaxHeap) line 12\n  in block <unit> at 01.p6 line 8\n```\n\n\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092double-ended priority queue\u306b\u5165\u308c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff1a\n\n```pl:class.p6\nuse Algorithm::MinMaxHeap;\n\nmy class State {\n    also does Algorithm::MinMaxHeap::Comparable[State];\n    has DateTime $.time;\n    has $.payload;\n    submethod BUILD(:$!time, :$!payload) { }\n    method compare-to(State $s) {\n        if $!time == $s.time {\n            return Order::Same;\n        }\n        if $!time > $s.time {\n            return Order::More;\n        }\n        if $!time < $s.time {\n            return Order::Less;\n        }\n    }\n}\n\nmy State @items;\n@items.push(State.new(time => DateTime.new(:year(1900), :month(6)),\n                      payload => \"Rola\"));\n@items.push(State.new(time => DateTime.new(:year(-300), :month(3)),\n                      payload => \"Taro\"));\n@items.push(State.new(time => DateTime.new(:year(1963), :month(12)),\n                      payload => \"Hanako\"));\n@items.push(State.new(time => DateTime.new(:year(2020), :month(6)),\n                      payload => \"Jack\"));\n\nmy Algorithm::MinMaxHeap[Algorithm::MinMaxHeap::Comparable] $heap .= new;\n$heap.insert($_) for @items;\n$heap.pop-max.say until $heap.is-empty;\n```\n\n```bash:\u5b9f\u884c\u7d50\u679c\n$ perl6 class.p6\nState.new(time => DateTime.new(2020,6,1,0,0,0), payload => \"Jack\")\nState.new(time => DateTime.new(1963,12,1,0,0,0), payload => \"Hanako\")\nState.new(time => DateTime.new(1900,6,1,0,0,0), payload => \"Rola\")\nState.new(time => DateTime.new(-300,3,1,0,0,0), payload => \"Taro\")\n```\n\n## References\n\n+ Atkinson, Michael D., et al. \"Min-max heaps and generalized priority queues.\" Communications of the ACM 29.10 (1986): 996-1000.\n\n\n\n\u4ee5\u4e0a\u30019\u65e5\u76ee\u306e\u6295\u7a3f\u3001\"Let's learn and try double-ended priority queue with Perl 6\"\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n"}