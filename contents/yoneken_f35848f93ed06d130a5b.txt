{"context": " More than 1 year has passed since last update.\u7d44\u8fbc\u307fer\u306a\u3089\uff0c\u4f55\u3067\u3082\u521d\u3081\u306fL\u30c1\u30ab\u304b\u3089\uff0e\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\nMRAA\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5c0e\u5165\nEdison\u306eIO\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\uff0cIntel\u304cMRAA\u3068\u3044\u3046\u62bd\u8c61\u5316\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\uff0e\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\uff0c\u8cfc\u5165\u76f4\u5f8c\u3084\uff0cIntel\u767a\u884c\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u66f8\u304d\u8fbc\u3093\u3060\u5834\u5408\u306b\u306f\uff0c\u65e2\u306b\u5c0e\u5165\u3055\u308c\u3066\u304a\u308a\uff0c\u7279\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u306a\u304f\u4f7f\u7528\u3067\u304d\u307e\u3059\uff0eubilinux\u306a\u3069\uff0c\u81ea\u5206\u3067Linux\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5834\u5408\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b \u5148\u306bGitHub\u304b\u3089\u6700\u65b0\u7248\u306eswig\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\uff0c \u6b21\u306bmraa\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n(#\u306f\u7ba1\u7406\u8005\u6a29\u9650\u3067\u884c\u3046\u30b3\u30de\u30f3\u30c9\u3067\u3059)\n# opkg install git cmake # Yocto Linux\u306e\u5834\u5408\n# apt-get install git cmake autoconf byacc yodl # Debian\u306e\u5834\u5408\n$ git clone https://github.com/swig/swig.git\n$ cd swig\n$ ./autogen.sh\n$ ./configure\n$ make \n# make install\n$ cd ../../\n$ git clone https://github.com/intel-iot-devkit/mraa.git\n$ cd mraa\n$ mkdir build\n$ cd build\n$ cmake -DBUILDSWIGNODE=OFF ..\n$ make\n# make install\n\nC\u8a00\u8a9e\u3067L\u30c1\u30ab\nAPI\u306e\u8aac\u660e\u306f\u3053\u3061\u3089\uff0e\u30b5\u30f3\u30d7\u30eb\u306f\uff0c\u3053\u3061\u3089\uff0e\n\nled_c.c\n#include <stdio.h>\n#include <unistd.h>\n#include <mraa.h>\n\nint main(int argc, char *argv[])\n{\n    mraa_result_t ret;\n\n    // MRAA\u306e\u521d\u671f\u5316\u51e6\u7406\uff08\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u540c\u5b9a\uff09\n    mraa_init();\n\n    // MRAA\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u51fa\u529b\n    fprintf(stdout, \"Hello mraa.\\nVersion: %s\\n\", mraa_get_version());\n\n    // MRAA\u306e20\u756a\u30dd\u30fc\u30c8(=Breakout\u30dc\u30fc\u30c9\u306eJ18-7\u30d4\u30f3)\u521d\u671f\u5316\n    mraa_gpio_context gpio;\n    gpio = mraa_gpio_init(20);\n    if(gpio == NULL){\n        return 1;\n    }\n\n    // \u30dd\u30fc\u30c8\u3092\u51fa\u529b\u306b\u8a2d\u5b9a\n    ret = mraa_gpio_dir(gpio, MRAA_GPIO_OUT);\n    if(ret != MRAA_SUCCESS){\n        return 1;\n    }\n\n    int i;\n    for(i=0;i<10;i++){\n        // \u30dd\u30fc\u30c8\u306b1(H\u96fb\u5727)\u3092\u51fa\u529b\n        mraa_gpio_write(gpio, 1);\n        usleep(1000*1000);\n\n        // \u30dd\u30fc\u30c8\u306b0(L\u96fb\u5727)\u3092\u51fa\u529b\n        mraa_gpio_write(gpio, 0);\n        usleep(1000*1000);\n    }\n\n    // \u30dd\u30fc\u30c8\u3092\u5165\u529b\u306b\u8a2d\u5b9a\n    mraa_gpio_dir(gpio, MRAA_GPIO_IN);\n\n    // MRAA\u306e\u7d42\u4e86\u51e6\u7406\n    mraa_deinit();\n\n    return ret;\n}\n\n\n\n\u3053\u308c\u3092\uff0c\u4ee5\u4e0b\u306eMakefile\u3067\u30d3\u30eb\u30c9\u3057\u307e\u3059\uff0e\n\nMakefile\nCC = g++\nMRAALIBS = -lmraa\n\n.PHONY: all clean led_c led_cpp\n\nall: led_c led_cpp\n\nclean:\n    rm -f ./*.o\n    rm -f led_c led_cpp\n\nled_c: led_c.o\n    $(CC) -O4 $(MRAALIBS) -o $@ $^\n\nled_cpp: led_cpp.o\n    $(CC) -O4 $(MRAALIBS) -o $@ $^\n\n%.o: %.c\n    $(CC) -Wall -g -c $<\n\n\nmake \u3092\u5b9f\u884c\u3059\u308b\u3068\uff0cled_c\u3068\u3044\u3046\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff0e\n# ./led_c\n\u3067\u5b9f\u884c\u3057\u307e\u3059\uff0e\uff08\u8981\uff0c\u7ba1\u7406\u8005\u6a29\u9650\uff09\n\nC++\u3067L\u30c1\u30ab\nAPI\u306e\u8aac\u660e\u306f\u3053\u3061\u3089\uff0e\u30b5\u30f3\u30d7\u30eb\u306f\uff0c\u3053\u3061\u3089\uff0e\n\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\uff0cC\u8a00\u8a9e\u306e\u3082\u306e\u3068\u307b\u307c\u540c\u3058\u3067\u3059\uff0e\n\nled_cpp.cpp\n#include <stdio.h>\n#include <unistd.h>\n#include <mraa/gpio.hpp>\n#include <mraa/common.hpp>\n\nint main(int argc, char *argv[])\n{\n    mraa_result_t ret;\n\n    fprintf(stdout, \"Hello mraa.\\nVersion: %s\\n\", mraa_get_version());\n\n    mraa::Gpio *gpio = new mraa::Gpio(20);\n    if(gpio == NULL){\n        return MRAA_ERROR_UNSPECIFIED;\n    }\n\n    ret = gpio->dir(mraa::DIR_OUT);\n    if(ret != MRAA_SUCCESS){\n        mraa::printError(ret);\n        return 1;\n    }\n\n    for(int i=0;i<5;i++){\n        gpio->write(1);\n        usleep(1000*1000);\n\n        gpio->write(0);\n        usleep(1000*1000);\n    }\n\n    gpio->dir(mraa::DIR_IN);\n\n    delete gpio;\n\n    return ret;\n}\n\n\n\nMakefile\u306f\uff0cC\u8a00\u8a9e\u306e\u3082\u306e\u3068\u540c\u3058\u3067\u3059\uff0eled_cpp\u3068\u3044\u3046\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff0e\n# ./led_cpp\n\u3067\u5b9f\u884c\uff0e\uff08\u8981\uff0c\u7ba1\u7406\u8005\u6a29\u9650\uff09\n\nPython\u3067L\u30c1\u30ab\n\u30b5\u30f3\u30d7\u30eb\u306f\uff0c\u3053\u3061\u3089\uff0e\n\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\uff0cC/C++\u306e\u3082\u306e\u3068\u307b\u307c\u540c\u3058\u3067\u3059\uff0e\n\nled_py.py\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nimport mraa\nimport time\n\nprint(\"Hello mraa\\nVersion: %s\" % mraa.getVersion())\n\ngpio = mraa.Gpio(20)\ngpio.dir(mraa.DIR_OUT)\n\nfor i in range(5):\n    gpio.write(1)\n    time.sleep(1)\n\n    gpio.write(0)\n    time.sleep(1)\n\ngpio.dir(mraa.DIR_IN)\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\uff0c\n$ chmod +x ./led_py.py\n\u3067\uff0c\u5b9f\u884c\u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n# ./led_py.py\n\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\uff0e\n\nJavaScript\u3067L\u30c1\u30ab\n\u30b5\u30f3\u30d7\u30eb\u306f\uff0c\u3053\u3061\u3089\uff0e\n\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\uff0cC/C++/Python\u306e\u3082\u306e\u3068\uff0c\u307b\u307c\u540c\u3058\u3067\u3059\uff0e\n\nled_js.js\nvar m = require(\"mraa\");\nconsole.log(\"Hello mraa.\\nVersion: \" + m.getVersion());\n\nvar gpio = new m.Gpio(20);\ngpio.dir(m.DIR_OUT);\n\nvar state = true;\nvar counter = 20;\n\nperiodicActivity();\n\nfunction periodicActivity(){  \n        gpio.write(state?1:0);\n        state = !state;                   \n        if(counter--)                     \n                setTimeout(periodicActivity, 1000)\n}\n\n\n# node ./led_js.js\n\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\uff0e\n\n\u56de\u8def\n\nEdison\u306eGND\u30d4\u30f3\uff08J19-3\uff09\u306f\uff0c\u5185\u5c64GND\u3068\u63a5\u7d9a\u3057\u3066\u3044\u308b\u3068\u601d\u308f\u308c\uff0c\u3068\u3066\u3082\u30cf\u30f3\u30c0\u4ed8\u3051\u3057\u306b\u304f\u3044\u3067\u3059\uff0e30[W]\u4ee5\u4e0a\u7d1a\u306e\u5354\u529b\u306a\u30cf\u30f3\u30c0\u3053\u3066\u3092\u4f7f\u3046\u306e\u3092\u63a8\u5968\u3057\u307e\u3059\uff0e\n\n\u5b9f\u9a13\n\u305d\u308c\u3067\u306f\uff0c\u5b9f\u969b\u306b\u914d\u7dda\u3057\u3066\u5b9f\u9a13\u3057\u3066\u307f\u307e\u3059\uff0e\n\u5206\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\uff0cBreakout\u30dc\u30fc\u30c9\u306b\u76f4\u63a5\u30ea\u30fc\u30c9\u3092\u30cf\u30f3\u30c0\u4ed8\u3051\u3057\u307e\u3057\u305f\uff08\u624b\u629c\u304d\uff09\uff0e\n\u8ffd\u5b9f\u9a13\u3059\u308b\u969b\u306f\uff0c\u5371\u306a\u3044\u306e\u3067\uff0c\u3061\u3083\u3093\u3068\u30cf\u30f3\u30c0\u4ed8\u3051\u3057\u3066\u304f\u3060\u3055\u3044\u306d\uff01\uff01\n\n\u3053\u308c\u3067\uff0c\u5148\u307b\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8d70\u3089\u305b\u3066\u307f\u308b\u3068\u30fb\u30fb\uff0e\n\u52d5\u753b\n\u3042\u308c\uff1f\u306a\u3093\u3060\u304b\u6697\u3044\u3088\u3046\u306a\u30fb\u30fb\u30fb\uff0e\n\u305d\u308c\u3082\u305d\u306e\u306f\u305a\uff0cEdison\u304b\u3089\u306f1.8[V]\u306e\u96fb\u5727\u30ec\u30d9\u30eb\u306e\u4fe1\u53f7\u3057\u304b\u51fa\u529b\u3067\u304d\u307e\u305b\u3093\uff0e\u8d64\u3084\u7dd1\u3068\u3044\u3063\u305f\u8272\u306eLED\u3067\u3042\u308c\u3070\uff0c\u9806\u65b9\u5411\u52b9\u679c\u96fb\u5727(VF)\u304c\u4f4e\u3044\u306e\u3067\u6697\u304f\u70b9\u706f\u3057\u307e\u3059\u304c\uff0c\u9752\u3084\u767d\u306eLED\u306f\u3068\u3066\u3082\u99c6\u52d5\u3067\u304d\u307e\u305b\u3093\uff0e\n\u5b9f\u969b\u306b\u5b9f\u9a13\u3057\u3066\u307f\u305f\u306e\u304c\uff0c\u4ee5\u4e0b\u306e\u52d5\u753b\u3067\u3059\uff0e\n\u52d5\u753b\n\u3042\u3089\u3089\uff0c\u56f0\u3063\u305f\u306d\uff0e\n\n\u56de\u8def\u3084\u308a\u306a\u304a\u3057\nH\u96fb\u5727\u30671.8[V]\u3057\u304b\u51fa\u529b\u3067\u304d\u306a\u3044\u306a\u3089\uff0c\u56de\u8def\u3092\u5de5\u592b\u3057\u307e\u3057\u3087\u3046\uff0e\n\u5148\u307b\u3069\u306e\u56de\u8def\u306f\uff0cActive High\u3068\u547c\u3070\u308c\u308b\uff0c\u30dd\u30fc\u30c8\u306b1\u3092\u51fa\u529b\u3059\u308b\u3068\uff0c\u8ca0\u8377\uff08\u4eca\u56de\u306e\u5834\u5408\u306fLED\uff09\u306b\u96fb\u6d41\u304c\u6d41\u308c\u308b\u56de\u8def\u3067\u3057\u305f\u304c\uff0c\u3053\u308c\u3092Active Low\u3068\u3044\u3046\uff0c\u30dd\u30fc\u30c8\u306b0\u3092\u51fa\u529b\u3059\u308b\u3068\uff0c\u8ca0\u8377\u306b\u96fb\u6d41\u304c\u6d41\u308c\u308b\u56de\u8def\u306b\u5909\u66f4\u3057\u307e\u3059\uff0e\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3068\uff0c\u30dd\u30fc\u30c8\u306b1\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\u9593\u306f\uff0cLED\u306b 3.3 - 1.8 \u306e 1.5[V]\u304c\u304b\u304b\u308b\u3053\u3068\u306b\u306a\u308a\uff0c\u3053\u308c\u304cLED\u306e\u9806\u65b9\u5411\u96fb\u5727\u3088\u308a\u4f4e\u3044\u5834\u5408\uff0cLED\u306f\u307b\u307c\u5149\u308a\u307e\u305b\u3093\uff0e\u305d\u3057\u3066\uff0c\u30dd\u30fc\u30c8\u306b0\u3092\u51fa\u529b\u3059\u308b\u3068\uff0cLED\u306b3.3[V]\u306e\u96fb\u5727\u304c\u304b\u304b\u308b\u3053\u3068\u306b\u306a\u308a\uff0cLED\u304c\u5149\u308a\u307e\u3059\uff0e\n\n\u5b9f\u969b\u306e\u5b9f\u9a13\u306e\u69d8\u5b50\u306f\u4ee5\u4e0b\u306b\uff0e\n\u52d5\u753b\n\n\u307e\u3068\u3081\n\nEdison\u3067\u30dd\u30fc\u30c8ON/OFF\u306f\uff0cMRAA\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\uff0c\nMRAA\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\uff0cC/C++/Python/JavaScript\u304b\u3089\u53e9\u3051\u308bAPI\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\uff0e\nEdison\u306e\u30d4\u30f3\u304b\u3089\u51fa\u529b\u3067\u304d\u308b\u96fb\u5727\u306f\uff0c1.8[V]\uff0e\nActive High\u3060\u3068LED\u306e\u99c6\u52d5\u3082\u53b3\u3057\u3044\u3051\u3069\uff0cActive Low\u306a\u3089\u306a\u3093\u3068\u304b\u306a\u308b\uff0e\n\n\u7d44\u8fbc\u307fer\u306a\u3089\uff0c\u4f55\u3067\u3082\u521d\u3081\u306fL\u30c1\u30ab\u304b\u3089\uff0e\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\n## MRAA\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5c0e\u5165\nEdison\u306eIO\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\uff0cIntel\u304c[MRAA\u3068\u3044\u3046\u62bd\u8c61\u5316\u30e9\u30a4\u30d6\u30e9\u30ea](http://iotdk.intel.com/docs/master/mraa/)\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e[\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089](https://github.com/intel-iot-devkit/mraa)\uff0e\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\uff0c\u8cfc\u5165\u76f4\u5f8c\u3084\uff0cIntel\u767a\u884c\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u66f8\u304d\u8fbc\u3093\u3060\u5834\u5408\u306b\u306f\uff0c\u65e2\u306b\u5c0e\u5165\u3055\u308c\u3066\u304a\u308a\uff0c\u7279\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u306a\u304f\u4f7f\u7528\u3067\u304d\u307e\u3059\uff0e[ubilinux](http://www.emutexlabs.com/ubilinux)\u306a\u3069\uff0c\u81ea\u5206\u3067Linux\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5834\u5408\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b **\u5148\u306bGitHub\u304b\u3089\u6700\u65b0\u7248\u306eswig\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\uff0c** \u6b21\u306bmraa\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n(\\#\u306f\u7ba1\u7406\u8005\u6a29\u9650\u3067\u884c\u3046\u30b3\u30de\u30f3\u30c9\u3067\u3059)\n\\# opkg install git cmake # Yocto Linux\u306e\u5834\u5408\n\\# apt-get install git cmake autoconf byacc yodl # Debian\u306e\u5834\u5408\n$ git clone https://github.com/swig/swig.git\n$ cd swig\n$ ./autogen.sh\n$ ./configure\n$ make \n\\# make install\n$ cd ../../\n\n$ git clone https://github.com/intel-iot-devkit/mraa.git\n$ cd mraa\n$ mkdir build\n$ cd build\n$ cmake -DBUILDSWIGNODE=OFF ..\n$ make\n\\# make install\n\n## C\u8a00\u8a9e\u3067L\u30c1\u30ab\nAPI\u306e\u8aac\u660e\u306f[\u3053\u3061\u3089](http://iotdk.intel.com/docs/master/mraa/gpio_8h.html)\uff0e\u30b5\u30f3\u30d7\u30eb\u306f\uff0c[\u3053\u3061\u3089](https://github.com/intel-iot-devkit/mraa/blob/master/examples/blink-io.c)\uff0e\n\n```c:led_c.c\n#include <stdio.h>\n#include <unistd.h>\n#include <mraa.h>\n\nint main(int argc, char *argv[])\n{\n\tmraa_result_t ret;\n\n\t// MRAA\u306e\u521d\u671f\u5316\u51e6\u7406\uff08\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u540c\u5b9a\uff09\n\tmraa_init();\n\n\t// MRAA\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u51fa\u529b\n\tfprintf(stdout, \"Hello mraa.\\nVersion: %s\\n\", mraa_get_version());\n\n\t// MRAA\u306e20\u756a\u30dd\u30fc\u30c8(=Breakout\u30dc\u30fc\u30c9\u306eJ18-7\u30d4\u30f3)\u521d\u671f\u5316\n\tmraa_gpio_context gpio;\n\tgpio = mraa_gpio_init(20);\n\tif(gpio == NULL){\n\t\treturn 1;\n\t}\n\n\t// \u30dd\u30fc\u30c8\u3092\u51fa\u529b\u306b\u8a2d\u5b9a\n\tret = mraa_gpio_dir(gpio, MRAA_GPIO_OUT);\n\tif(ret != MRAA_SUCCESS){\n\t\treturn 1;\n\t}\n\n\tint i;\n\tfor(i=0;i<10;i++){\n\t\t// \u30dd\u30fc\u30c8\u306b1(H\u96fb\u5727)\u3092\u51fa\u529b\n\t\tmraa_gpio_write(gpio, 1);\n\t\tusleep(1000*1000);\n\n\t\t// \u30dd\u30fc\u30c8\u306b0(L\u96fb\u5727)\u3092\u51fa\u529b\n\t\tmraa_gpio_write(gpio, 0);\n\t\tusleep(1000*1000);\n\t}\n\n\t// \u30dd\u30fc\u30c8\u3092\u5165\u529b\u306b\u8a2d\u5b9a\n\tmraa_gpio_dir(gpio, MRAA_GPIO_IN);\n\n\t// MRAA\u306e\u7d42\u4e86\u51e6\u7406\n\tmraa_deinit();\n\n\treturn ret;\n}\n\n```\n\n\u3053\u308c\u3092\uff0c\u4ee5\u4e0b\u306eMakefile\u3067\u30d3\u30eb\u30c9\u3057\u307e\u3059\uff0e\n\n```Bash:Makefile\nCC = g++\nMRAALIBS = -lmraa\n\n.PHONY: all clean led_c led_cpp\n\nall: led_c led_cpp\n\nclean:\n\trm -f ./*.o\n\trm -f led_c led_cpp\n\nled_c: led_c.o\n\t$(CC) -O4 $(MRAALIBS) -o $@ $^\n\nled_cpp: led_cpp.o\n\t$(CC) -O4 $(MRAALIBS) -o $@ $^\n\n%.o: %.c\n\t$(CC) -Wall -g -c $<\n```\n\n**make** \u3092\u5b9f\u884c\u3059\u308b\u3068\uff0cled_c\u3068\u3044\u3046\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff0e\n\n\\# ./led_c\n\u3067\u5b9f\u884c\u3057\u307e\u3059\uff0e\uff08\u8981\uff0c\u7ba1\u7406\u8005\u6a29\u9650\uff09\n\n## C++\u3067L\u30c1\u30ab\nAPI\u306e\u8aac\u660e\u306f[\u3053\u3061\u3089](http://iotdk.intel.com/docs/master/mraa/classmraa_1_1_gpio.html)\uff0e\u30b5\u30f3\u30d7\u30eb\u306f\uff0c[\u3053\u3061\u3089](https://github.com/intel-iot-devkit/mraa/blob/master/examples/c%2B%2B/Blink-IO.cpp)\uff0e\n\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\uff0cC\u8a00\u8a9e\u306e\u3082\u306e\u3068\u307b\u307c\u540c\u3058\u3067\u3059\uff0e\n\n```cpp:led_cpp.cpp\n#include <stdio.h>\n#include <unistd.h>\n#include <mraa/gpio.hpp>\n#include <mraa/common.hpp>\n\nint main(int argc, char *argv[])\n{\n\tmraa_result_t ret;\n\n\tfprintf(stdout, \"Hello mraa.\\nVersion: %s\\n\", mraa_get_version());\n\n\tmraa::Gpio *gpio = new mraa::Gpio(20);\n\tif(gpio == NULL){\n\t\treturn MRAA_ERROR_UNSPECIFIED;\n\t}\n\n\tret = gpio->dir(mraa::DIR_OUT);\n\tif(ret != MRAA_SUCCESS){\n\t\tmraa::printError(ret);\n\t\treturn 1;\n\t}\n\n\tfor(int i=0;i<5;i++){\n\t\tgpio->write(1);\n\t\tusleep(1000*1000);\n\n\t\tgpio->write(0);\n\t\tusleep(1000*1000);\n\t}\n\n\tgpio->dir(mraa::DIR_IN);\n\n\tdelete gpio;\n\n\treturn ret;\n}\n\n```\n\nMakefile\u306f\uff0cC\u8a00\u8a9e\u306e\u3082\u306e\u3068\u540c\u3058\u3067\u3059\uff0eled_cpp\u3068\u3044\u3046\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff0e\n\n\\# ./led_cpp\n\u3067\u5b9f\u884c\uff0e\uff08\u8981\uff0c\u7ba1\u7406\u8005\u6a29\u9650\uff09\n\n## Python\u3067L\u30c1\u30ab\n\u30b5\u30f3\u30d7\u30eb\u306f\uff0c[\u3053\u3061\u3089](https://github.com/intel-iot-devkit/mraa/blob/master/examples/python/blink-io8.py)\uff0e\n\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\uff0cC/C++\u306e\u3082\u306e\u3068\u307b\u307c\u540c\u3058\u3067\u3059\uff0e\n\n```python:led_py.py\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nimport mraa\nimport time\n\nprint(\"Hello mraa\\nVersion: %s\" % mraa.getVersion())\n\ngpio = mraa.Gpio(20)\ngpio.dir(mraa.DIR_OUT)\n\nfor i in range(5):\n\tgpio.write(1)\n\ttime.sleep(1)\n\n\tgpio.write(0)\n\ttime.sleep(1)\n\ngpio.dir(mraa.DIR_IN)\n```\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\uff0c\n$ chmod +x ./led_py.py\n\n\u3067\uff0c\u5b9f\u884c\u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\\# ./led_py.py\n\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\uff0e\n\n## JavaScript\u3067L\u30c1\u30ab\n\u30b5\u30f3\u30d7\u30eb\u306f\uff0c[\u3053\u3061\u3089](https://github.com/intel-iot-devkit/mraa/blob/master/examples/javascript/Blink-IO.js)\uff0e\n\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\uff0cC/C++/Python\u306e\u3082\u306e\u3068\uff0c\u307b\u307c\u540c\u3058\u3067\u3059\uff0e\n\n```Javascript:led_js.js\nvar m = require(\"mraa\");\nconsole.log(\"Hello mraa.\\nVersion: \" + m.getVersion());\n\nvar gpio = new m.Gpio(20);\ngpio.dir(m.DIR_OUT);\n\nvar state = true;\nvar counter = 20;\n                   \nperiodicActivity();\n                            \nfunction periodicActivity(){  \n        gpio.write(state?1:0);\n        state = !state;                   \n        if(counter--)                     \n                setTimeout(periodicActivity, 1000)\n}\n```\n\n\\# node ./led_js.js\n\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\uff0e\n\n# \u56de\u8def\n![Active High\u56de\u8def](https://pbs.twimg.com/media/B3ssgsECQAIcz97.png \"\u56de\u8def(Active High)\")\n\nEdison\u306eGND\u30d4\u30f3\uff08J19-3\uff09\u306f\uff0c\u5185\u5c64GND\u3068\u63a5\u7d9a\u3057\u3066\u3044\u308b\u3068\u601d\u308f\u308c\uff0c\u3068\u3066\u3082\u30cf\u30f3\u30c0\u4ed8\u3051\u3057\u306b\u304f\u3044\u3067\u3059\uff0e30[W]\u4ee5\u4e0a\u7d1a\u306e\u5354\u529b\u306a\u30cf\u30f3\u30c0\u3053\u3066\u3092\u4f7f\u3046\u306e\u3092\u63a8\u5968\u3057\u307e\u3059\uff0e\n\n# \u5b9f\u9a13\n\u305d\u308c\u3067\u306f\uff0c\u5b9f\u969b\u306b\u914d\u7dda\u3057\u3066\u5b9f\u9a13\u3057\u3066\u307f\u307e\u3059\uff0e\n\u5206\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\uff0cBreakout\u30dc\u30fc\u30c9\u306b\u76f4\u63a5\u30ea\u30fc\u30c9\u3092\u30cf\u30f3\u30c0\u4ed8\u3051\u3057\u307e\u3057\u305f\uff08\u624b\u629c\u304d\uff09\uff0e\n\u8ffd\u5b9f\u9a13\u3059\u308b\u969b\u306f\uff0c\u5371\u306a\u3044\u306e\u3067\uff0c\u3061\u3083\u3093\u3068\u30cf\u30f3\u30c0\u4ed8\u3051\u3057\u3066\u304f\u3060\u3055\u3044\u306d\uff01\uff01\n\n![Active High\u5b9f\u88c5](https://pbs.twimg.com/media/B3srqCbCQAADvn1.jpg \"\u5b9f\u88c5(Active High)\")\n\n\u3053\u308c\u3067\uff0c\u5148\u307b\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8d70\u3089\u305b\u3066\u307f\u308b\u3068\u30fb\u30fb\uff0e\n\n[\u52d5\u753b](https://vine.co/v/OnUaVATxMrg)\n\n\u3042\u308c\uff1f\u306a\u3093\u3060\u304b\u6697\u3044\u3088\u3046\u306a\u30fb\u30fb\u30fb\uff0e\n\n\u305d\u308c\u3082\u305d\u306e\u306f\u305a\uff0cEdison\u304b\u3089\u306f1.8[V]\u306e\u96fb\u5727\u30ec\u30d9\u30eb\u306e\u4fe1\u53f7\u3057\u304b\u51fa\u529b\u3067\u304d\u307e\u305b\u3093\uff0e\u8d64\u3084\u7dd1\u3068\u3044\u3063\u305f\u8272\u306eLED\u3067\u3042\u308c\u3070\uff0c\u9806\u65b9\u5411\u52b9\u679c\u96fb\u5727(VF)\u304c\u4f4e\u3044\u306e\u3067\u6697\u304f\u70b9\u706f\u3057\u307e\u3059\u304c\uff0c\u9752\u3084\u767d\u306eLED\u306f\u3068\u3066\u3082\u99c6\u52d5\u3067\u304d\u307e\u305b\u3093\uff0e\n\u5b9f\u969b\u306b\u5b9f\u9a13\u3057\u3066\u307f\u305f\u306e\u304c\uff0c\u4ee5\u4e0b\u306e\u52d5\u753b\u3067\u3059\uff0e\n\n[\u52d5\u753b](https://vine.co/v/OnF3vixxL0v)\n\n\u3042\u3089\u3089\uff0c\u56f0\u3063\u305f\u306d\uff0e\n\n# \u56de\u8def\u3084\u308a\u306a\u304a\u3057\nH\u96fb\u5727\u30671.8[V]\u3057\u304b\u51fa\u529b\u3067\u304d\u306a\u3044\u306a\u3089\uff0c\u56de\u8def\u3092\u5de5\u592b\u3057\u307e\u3057\u3087\u3046\uff0e\n\u5148\u307b\u3069\u306e\u56de\u8def\u306f\uff0cActive High\u3068\u547c\u3070\u308c\u308b\uff0c\u30dd\u30fc\u30c8\u306b1\u3092\u51fa\u529b\u3059\u308b\u3068\uff0c\u8ca0\u8377\uff08\u4eca\u56de\u306e\u5834\u5408\u306fLED\uff09\u306b\u96fb\u6d41\u304c\u6d41\u308c\u308b\u56de\u8def\u3067\u3057\u305f\u304c\uff0c\u3053\u308c\u3092Active Low\u3068\u3044\u3046\uff0c\u30dd\u30fc\u30c8\u306b0\u3092\u51fa\u529b\u3059\u308b\u3068\uff0c\u8ca0\u8377\u306b\u96fb\u6d41\u304c\u6d41\u308c\u308b\u56de\u8def\u306b\u5909\u66f4\u3057\u307e\u3059\uff0e\n\n![Active Low\u56de\u8def](https://pbs.twimg.com/media/B3ssgsECYAEgLno.png \"\u56de\u8def(Active Low)\")\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3068\uff0c\u30dd\u30fc\u30c8\u306b1\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\u9593\u306f\uff0cLED\u306b 3.3 - 1.8 \u306e 1.5[V]\u304c\u304b\u304b\u308b\u3053\u3068\u306b\u306a\u308a\uff0c\u3053\u308c\u304cLED\u306e\u9806\u65b9\u5411\u96fb\u5727\u3088\u308a\u4f4e\u3044\u5834\u5408\uff0cLED\u306f\u307b\u307c\u5149\u308a\u307e\u305b\u3093\uff0e\u305d\u3057\u3066\uff0c\u30dd\u30fc\u30c8\u306b0\u3092\u51fa\u529b\u3059\u308b\u3068\uff0cLED\u306b3.3[V]\u306e\u96fb\u5727\u304c\u304b\u304b\u308b\u3053\u3068\u306b\u306a\u308a\uff0cLED\u304c\u5149\u308a\u307e\u3059\uff0e\n\n![Active High\u5b9f\u88c5](https://pbs.twimg.com/media/B3srqyeCUAASZdB.jpg \"\u5b9f\u88c5(Active Low)\")\n\n\u5b9f\u969b\u306e\u5b9f\u9a13\u306e\u69d8\u5b50\u306f\u4ee5\u4e0b\u306b\uff0e\n\n[\u52d5\u753b](https://vine.co/v/OnFLQxVpb2F)\n\n# \u307e\u3068\u3081\n+ Edison\u3067\u30dd\u30fc\u30c8ON/OFF\u306f\uff0cMRAA\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\uff0c\n+ MRAA\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\uff0cC/C++/Python/JavaScript\u304b\u3089\u53e9\u3051\u308bAPI\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\uff0e\n+ Edison\u306e\u30d4\u30f3\u304b\u3089\u51fa\u529b\u3067\u304d\u308b\u96fb\u5727\u306f\uff0c1.8[V]\uff0e\n+ Active High\u3060\u3068LED\u306e\u99c6\u52d5\u3082\u53b3\u3057\u3044\u3051\u3069\uff0cActive Low\u306a\u3089\u306a\u3093\u3068\u304b\u306a\u308b\uff0e\n", "tags": ["C", "Python", "JavaScript", "C++", "Edison"]}