{"context": " More than 1 year has passed since last update.JavaScript\u3084iOS\u3001Android\u30a2\u30d7\u30ea\u304b\u3089AWS\u30ea\u30bd\u30fc\u30b9\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306b\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306a\u3069\u3092\u305d\u306e\u307e\u307e\u30b3\u30fc\u30c9\u306b\u66f8\u304f\u3068\u4e0d\u6b63\u5229\u7528\u3055\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u4e0a\u8a18\u3088\u308a\u30b3\u30fc\u30c9\u4e0a\u306b\u30ad\u30fc\u3092\u66f8\u304b\u305a\u3001Cognito\u3068\u3044\u3046AWS\u304c\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3063\u3066\u8a8d\u8a3c\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30bb\u30ad\u30e5\u30a2\u306bAWS\u30ea\u30bd\u30fc\u30b9\u306e\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002\nAWS Black Belt Tech\u30b7\u30ea\u30fc\u30ba Amazon Cognito / Amazon Mobile Analytics\nCognito\u3067\u306f\u8a8d\u8a3c\u3092\u3057\u3066\u3044\u306a\u3044\u30e6\u30fc\u30b6\u30fc(\u30b2\u30b9\u30c8\u30e6\u30fc\u30b6\u30fc\uff09\u3068\u8a8d\u8a3c\u6e08\u307f\u306e\u30e6\u30fc\u30b6\u30fc(Facebook,Google,Twitter\u306a\u3069\uff09\u306b\u305d\u308c\u305e\u308c\u30ed\u30fc\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u4eca\u56de\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u672a\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u306fNode.js\u304b\u3089S3\u306e\u30d0\u30b1\u30c3\u30c8\u4e00\u89a7\u3092\u53d6\u5f97\n\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u306fFacebook\u8a8d\u8a3c\u3092\u884c\u3044\u3001JavaScript\u3067EC2\u306e\u4e00\u89a7\u3092\u53d6\u5f97\n\n\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u53c2\u8003\n\nAmazon Cognito\u3092JavaScript\u304b\u3089\u4f7f\u3063\u3066\u307f\u308b\n\n\n\u524d\u63d0\n\u4e0a\u8a18\u53c2\u8003\u30ea\u30f3\u30af\u306b\u3042\u308b\u4ee5\u4e0b\u3092\u5b9f\u65bd\u3059\u308b\u3002\n\nAmazon Cognito\u306e\u30a2\u30a4\u30c7\u30f3\u30c6\u30a3\u30c6\u30a3\u30d7\u30fc\u30eb\u3092\u4f5c\u6210(tokyo\u30ea\u30fc\u30b8\u30e7\u30f3\u304c\u306a\u3044\u306e\u3067\u6ce8\u610f)\nAWS SDK for Node.js\u306e\u5229\u7528\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b(npm install aws-sdk)\nCognito\u306e\u672a\u8a8d\u8a3c\u306e\u30ed\u30fc\u30eb\u306bS3\u30a2\u30af\u30bb\u30b9\u306e\u6a29\u9650\u3092\u4ed8\u4e0e\nCognito\u306e\u8a8d\u8a3c\u30ed\u30fc\u30eb\u306bEC2\u306e\u60c5\u5831\u53d6\u5f97\u6a29\u9650\u3092\u4ed8\u4e0e\n\n\n\u672a\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc(\u30b2\u30b9\u30c8\u30a2\u30ab\u30a6\u30f3\u30c8\uff09\u3092\u8a66\u3059\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002xxxxx\u3068\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306f\u9069\u5b9c\u81ea\u5206\u306e\u8a2d\u5b9a\u306b\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\u3002\n\ncognito.js\nvar AWS = require('aws-sdk');\n\nvar awsRegion = \"us-east-1\";\nvar cognitoParams = {\n    IdentityPoolId: \"us-east-1:xxxxxxxxxxxxxxxxxx\"\n};\n\nAWS.config.region = awsRegion;\nAWS.config.credentials = new AWS.CognitoIdentityCredentials(cognitoParams);\nAWS.config.credentials.get(function(err) {\n  if (!err) {\n    console.log(\"Cognito Identity Id: \" + AWS.config.credentials.identityId);\n  }\n});\n\nvar s3 = new AWS.S3();\ns3.listBuckets(function(err, data) {\n  if (err) console.log(err, err.stack);\n  else console.log(data);\n});\n\n\n\n\u5b9f\u884c\u3059\u308b\u3068S3\u306e\u30d0\u30b1\u30c3\u30c8\u4e00\u89a7\u304c\u53d6\u5f97\u51fa\u6765\u307e\u3059\u3002\n$node cognito.js\n\n\u6b21\u306b\u672a\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u306b\u306f\u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u306a\u3044EC2\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u307f\u307e\u3059\u3002\n\ncognito.js\n/*\nvar s3 = new AWS.S3();\ns3.listBuckets(function(err, data) {\n  if (err) console.log(err, err.stack);\n  else console.log(data);\n});\n*/\n\nvar ec2 = new AWS.EC2();\nparams = {}\nec2.describeInstances(params, function(err, data) {\n  if (err) console.log(err, err.stack); // an error occurred\n  else     console.log(data);           // successful response\n});\n\n\n\n\u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u5b9f\u884c\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\u6b63\u3057\u3044\u6319\u52d5\u3067\u3059\u306d\u3002\n$node hoge.js\n{ [UnauthorizedOperation: You are not authorized to perform this operation.]\n  message: 'You are not authorized to perform this operation.',\n  code: 'UnauthorizedOperation',\n  time: Mon Sep 07 2015 18:05:46 GMT+0900 (JST),\n  statusCode: 403,\n  retryable: false,\n  retryDelay: 30 } 'UnauthorizedOperation: You are not authorized to perform this operation.\\n    at Request.extractError \u30fb\u30fb\u30fb\u30fb\n\n\n\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc(Facebook)\u3092\u8a66\u3059\nAuthentication in the Browser with Amazon Cognito and Public Identity Providers\nFacebook\u8a8d\u8a3c\u306fNode.js\u3067\u306a\u304f\u3001JavaScript\u3067\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\nFacebook\u30a2\u30d7\u30ea\u306e\u4f5c\u6210\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306bFacebook\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nFacebook\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n[AWS][iOS] Amazon Cognito \u306e\u30e2\u30d0\u30a4\u30eb\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c & \u30c7\u30fc\u30bf\u540c\u671f \u3092 iOS \u3067\u4f7f\u3063\u3066\u307f\u305f\n\u4f5c\u6210\u5f8c\u306b\u78ba\u8a8d\u3067\u304d\u308bAppID\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nCognito\u306eIdentity Pool\u3067Facebook\u30a2\u30d7\u30eaID\u3092\u767b\u9332\u3059\u308b\nCognito\u306edentity Pool\u3067\u5148\u307b\u3069\u4f5c\u6210\u3057\u305fFacebook\u30a2\u30d7\u30ea\u306eAppID\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n\nS3\u3078HTML\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306bS3\u3078Facebook\u30ed\u30b0\u30a4\u30f3\u7528\u306eHTML\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\nS3\u3067\u306f\u4ee5\u4e0b\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\n\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\nEnable website hosting\u3092\u8a2d\u5b9a\n\u5bfe\u8c61\u30d0\u30b1\u30c3\u30c8\u306e\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3067\u533f\u540d\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\n\nFacebook Login for the Web with the JavaScript SDK\n\u306b\u3042\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306aHTML\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u306a\u304a\u3001{your-app-id}\u3068\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306f\u81ea\u5206\u306eFacebook\u30a2\u30d7\u30ea\u306eID\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nindex.html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Facebook Login JavaScript Example</title>\n<meta charset=\"UTF-8\">\n</head>\n<body>\n<script>\n  // This is called with the results from from FB.getLoginStatus().\n  function statusChangeCallback(response) {\n    console.log('statusChangeCallback');\n    console.log(response);\n    // The response object is returned with a status field that lets the\n    // app know the current login status of the person.\n    // Full docs on the response object can be found in the documentation\n    // for FB.getLoginStatus().\n    if (response.status === 'connected') {\n      // Logged into your app and Facebook.\n      testAPI();\n    } else if (response.status === 'not_authorized') {\n      // The person is logged into Facebook, but not your app.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into this app.';\n    } else {\n      // The person is not logged into Facebook, so we're not sure if\n      // they are logged into this app or not.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into Facebook.';\n    }\n  }\n\n  // This function is called when someone finishes with the Login\n  // Button.  See the onlogin handler attached to it in the sample\n  // code below.\n  function checkLoginState() {\n    FB.getLoginStatus(function(response) {\n      statusChangeCallback(response);\n    });\n  }\n\n  window.fbAsyncInit = function() {\n  FB.init({\n    appId      : '{your-app-id}',\n    cookie     : true,  // enable cookies to allow the server to access \n                        // the session\n    xfbml      : true,  // parse social plugins on this page\n    version    : 'v2.2' // use version 2.2\n  });\n\n  // Now that we've initialized the JavaScript SDK, we call \n  // FB.getLoginStatus().  This function gets the state of the\n  // person visiting this page and can return one of three states to\n  // the callback you provide.  They can be:\n  //\n  // 1. Logged into your app ('connected')\n  // 2. Logged into Facebook, but not your app ('not_authorized')\n  // 3. Not logged into Facebook and can't tell if they are logged into\n  //    your app or not.\n  //\n  // These three cases are handled in the callback function.\n\n  FB.getLoginStatus(function(response) {\n    statusChangeCallback(response);\n  });\n\n  };\n\n  // Load the SDK asynchronously\n  (function(d, s, id) {\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) return;\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n  }(document, 'script', 'facebook-jssdk'));\n\n  // Here we run a very simple test of the Graph API after login is\n  // successful.  See statusChangeCallback() for when this call is made.\n  function testAPI() {\n    console.log('Welcome!  Fetching your information.... ');\n    FB.api('/me', function(response) {\n      console.log('Successful login for: ' + response.name);\n      document.getElementById('status').innerHTML =\n        'Thanks for logging in, ' + response.name + '!';\n    });\n  }\n</script>\n\n<!--\n  Below we include the Login Button social plugin. This button uses\n  the JavaScript SDK to present a graphical Login button that triggers\n  the FB.login() function when clicked.\n-->\n\n<fb:login-button scope=\"public_profile,email\" onlogin=\"checkLoginState();\">\n</fb:login-button>\n\n<div id=\"status\">\n</div>\n\n</body>\n</html>\n\n\n\u3046\u307e\u304f\u8a2d\u5b9a\u3067\u304d\u308c\u3070S3\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u305f\u3060\u3057\u3001\u3053\u306e\u72b6\u614b\u3067\u306fFacebook\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u3068\u3044\u3046\u306e\u3082Facebook\u30a2\u30d7\u30ea\u3067\u306f\u6307\u5b9a\u3055\u308c\u305fURL\u4ee5\u5916\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3067\u306f\u8a8d\u8a3c\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067S3\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u30e1\u30e2\u3057\u3001FacebookDeveloper\u306e\u753b\u9762\u3092\u8868\u793a\u3057\u3001\u63a5\u7d9a\u5143\u306eURL\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nSettings->Add Platform->Web Site\n\n\u8a2d\u5b9a\u5f8c\u3001Log In\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3059\u308b\u3053\u3068\u3067\u30ed\u30b0\u30a4\u30f3\u304c\u3067\u304d\u307e\u3059\u3002\n\n\nCognito\u3068\u306e\u9023\u643a\nChrome\u306eDeveloperTools\u306a\u3069\u3067\u78ba\u8a8d\u3059\u308b\u3068FB.getLoginStatus\u306e\u30ec\u30b9\u30dd\u30f3\u30c8\u306e\u4e2d\u306baccessToken\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306e\u3067\u3053\u308c\u3092\u5229\u7528\u3057\u3066Cognito\u306e\u6a29\u9650\u3092\u53d6\u5f97\u3057\u3001EC2\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n<!DOCTYPE html>\n<html>\n<head>\n<title>Facebook Login JavaScript Example</title>\n<meta charset=\"UTF-8\">\n</head>\n<body>\n<script src=\"https://sdk.amazonaws.com/js/aws-sdk-2.1.49.min.js\"></script>\n<script>\n  function getEC2(token) {\n    console.log(token);\n    var creds = new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: 'us-east-1:xxxxxx',\n      Logins: { \n        'graph.facebook.com': token\n      }\n    });\n\n    AWS.config.update({\n      region: 'us-east-1',\n      credentials: creds\n    });\n\n    var ec2 = new AWS.EC2();\n    var params = {}\n    ec2.describeInstances(params, function(err, data) {\n      if (err) console.log(err, err.stack); // an error occurred\n      else     console.log(data);           // successful response\n    });\n  }\n  // This is called with the results from from FB.getLoginStatus().\n  function statusChangeCallback(response) {\n    console.log('statusChangeCallback');\n    console.log(response);\n    // The response object is returned with a status field that lets the\n    // app know the curent login status of the person.\n    // Full docs on the response object can be found in the documentation\n    // for FB.getLoginStatus().\n    if (response.status === 'connected') {\n      // Logged into your app and Facebook.\n      getEC2(response.authResponse.accessToken);\n      testAPI();\n    } else if (response.status === 'not_authorized') {\n      // The person is logged into Facebook, but not your app.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into this app.';\n    } else {\n      // The person is not logged into Facebook, so we're not sure if\n      // they are logged into this app or not.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into Facebook.';\n    }\n  }\n\n  // This function is called when someone finishes with the Login\n  // Button.  See the onlogin handler attached to it in the sample\n  // code below.\n  function checkLoginState() {\n    FB.getLoginStatus(function(response) {\n      statusChangeCallback(response);\n    });\n  }\n\n  window.fbAsyncInit = function() {\n  FB.init({\n    appId      : 'xxxxxxxx',\n    cookie     : true,  // enable cookies to allow the server to access \n                        // the session\n    xfbml      : true,  // parse social plugins on this page\n    version    : 'v2.2' // use version 2.2\n  });\n\n  // Now that we've initialized the JavaScript SDK, we call \n  // FB.getLoginStatus().  This function gets the state of the\n  // person visiting this page and can return one of three states to\n  // the callback you provide.  They can be:\n  //\n  // 1. Logged into your app ('connected')\n  // 2. Logged into Facebook, but not your app ('not_authorized')\n  // 3. Not logged into Facebook and can't tell if they are logged into\n  //    your app or not.\n  //\n  // These three cases are handled in the callback function.\n\n  FB.getLoginStatus(function(response) {\n    statusChangeCallback(response);\n  });\n\n  };\n\n  // Load the SDK asynchronously\n  (function(d, s, id) {\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) return;\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n  }(document, 'script', 'facebook-jssdk'));\n\n  // Here we run a very simple test of the Graph API after login is\n  // successful.  See statusChangeCallback() for when this call is made.\n  function testAPI() {\n    console.log('Welcome!  Fetching your information.... ');\n    FB.api('/me', function(response) {\n      console.log('Successful login for: ' + response.name);\n      document.getElementById('status').innerHTML =\n        'Thanks for logging in, ' + response.name + '!';\n    });\n  }\n</script>\n\n<!--\n  Below we include the Login Button social plugin. This button uses\n  the JavaScript SDK to present a graphical Login button that triggers\n  the FB.login() function when clicked.\n-->\n\n<fb:login-button scope=\"public_profile,email\" onlogin=\"checkLoginState();\">\n</fb:login-button>\n\n<div id=\"status\">\n</div>\n\n</body>\n</html>\n\n\u5909\u66f4\u70b9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\nAWS SDK for JavaScript\u3092\u8aad\u307f\u8fbc\u3080\u51e6\u7406\u3092\u8ffd\u52a0\ngetEC2\u3068\u3044\u3046function\u3092\u8ffd\u52a0\u3002\u3053\u306e\u4e2d\u3067Facebook\u8a8d\u8a3c\u306b\u3088\u3063\u3066\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3057\u3066Cognito\u306e\u8a8d\u8a3c\u3092\u884c\u3044\u3001\u305d\u306e\u6a29\u9650\u3067EC2\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u3001Console.log\u306b\u66f8\u304f\n\u51e6\u7406\u306e\u9014\u4e2d\u3067getEC2\u3092\u547c\u3073\u51fa\u3059\u51e6\u7406\u3092\u8ffd\u52a0\n\n\u4e0a\u8a18\u306b\u3088\u3063\u3066console.log\u306bEC2\u306e\u60c5\u5831\u304c\u5165\u3063\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u53d6\u5f97\u3067\u304d\u308b\u306e\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\uff08Chrome\u306eDevTool\u306a\u3069\u3067\u78ba\u8a8d)\n\n\n\u307e\u3068\u3081\n\nCognito\u3092\u4f7f\u3046\u3053\u3068\u3067\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306a\u3069\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u57cb\u3081\u8fbc\u307e\u305a\u3001AWS\u3078\u306e\u30ea\u30bd\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\n\u8a8d\u8a3c\u3001\u672a\u8a8d\u8a3c\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\n\nJavaScript\u3084iOS\u3001Android\u30a2\u30d7\u30ea\u304b\u3089AWS\u30ea\u30bd\u30fc\u30b9\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306b\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306a\u3069\u3092\u305d\u306e\u307e\u307e\u30b3\u30fc\u30c9\u306b\u66f8\u304f\u3068\u4e0d\u6b63\u5229\u7528\u3055\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4e0a\u8a18\u3088\u308a\u30b3\u30fc\u30c9\u4e0a\u306b\u30ad\u30fc\u3092\u66f8\u304b\u305a\u3001Cognito\u3068\u3044\u3046AWS\u304c\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3063\u3066\u8a8d\u8a3c\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30bb\u30ad\u30e5\u30a2\u306bAWS\u30ea\u30bd\u30fc\u30b9\u306e\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002\n\n[AWS Black Belt Tech\u30b7\u30ea\u30fc\u30ba Amazon Cognito / Amazon Mobile Analytics](http://www.slideshare.net/AmazonWebServicesJapan/aws-black-belt-tech-amazon-cognito-amazon-mobile-analytics)\n\nCognito\u3067\u306f\u8a8d\u8a3c\u3092\u3057\u3066\u3044\u306a\u3044\u30e6\u30fc\u30b6\u30fc(\u30b2\u30b9\u30c8\u30e6\u30fc\u30b6\u30fc\uff09\u3068\u8a8d\u8a3c\u6e08\u307f\u306e\u30e6\u30fc\u30b6\u30fc(Facebook,Google,Twitter\u306a\u3069\uff09\u306b\u305d\u308c\u305e\u308c\u30ed\u30fc\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u4eca\u56de\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n+ \u672a\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u306fNode.js\u304b\u3089S3\u306e\u30d0\u30b1\u30c3\u30c8\u4e00\u89a7\u3092\u53d6\u5f97\n+ \u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u306fFacebook\u8a8d\u8a3c\u3092\u884c\u3044\u3001JavaScript\u3067EC2\u306e\u4e00\u89a7\u3092\u53d6\u5f97\n\n\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u53c2\u8003\n\n+ [Amazon Cognito\u3092JavaScript\u304b\u3089\u4f7f\u3063\u3066\u307f\u308b](http://qiita.com/KenTamagawa/items/36238d6264ee14c2b50f)\n\n# \u524d\u63d0\n\n\u4e0a\u8a18\u53c2\u8003\u30ea\u30f3\u30af\u306b\u3042\u308b\u4ee5\u4e0b\u3092\u5b9f\u65bd\u3059\u308b\u3002\n\n+ Amazon Cognito\u306e\u30a2\u30a4\u30c7\u30f3\u30c6\u30a3\u30c6\u30a3\u30d7\u30fc\u30eb\u3092\u4f5c\u6210(tokyo\u30ea\u30fc\u30b8\u30e7\u30f3\u304c\u306a\u3044\u306e\u3067\u6ce8\u610f)\n+ AWS SDK for Node.js\u306e\u5229\u7528\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b(npm install aws-sdk)\n+ Cognito\u306e\u672a\u8a8d\u8a3c\u306e\u30ed\u30fc\u30eb\u306bS3\u30a2\u30af\u30bb\u30b9\u306e\u6a29\u9650\u3092\u4ed8\u4e0e\n+ Cognito\u306e\u8a8d\u8a3c\u30ed\u30fc\u30eb\u306bEC2\u306e\u60c5\u5831\u53d6\u5f97\u6a29\u9650\u3092\u4ed8\u4e0e\n\n# \u672a\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc(\u30b2\u30b9\u30c8\u30a2\u30ab\u30a6\u30f3\u30c8\uff09\u3092\u8a66\u3059\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002xxxxx\u3068\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306f\u9069\u5b9c\u81ea\u5206\u306e\u8a2d\u5b9a\u306b\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n```cognito.js\nvar AWS = require('aws-sdk');\n\nvar awsRegion = \"us-east-1\";\nvar cognitoParams = {\n    IdentityPoolId: \"us-east-1:xxxxxxxxxxxxxxxxxx\"\n};\n\nAWS.config.region = awsRegion;\nAWS.config.credentials = new AWS.CognitoIdentityCredentials(cognitoParams);\nAWS.config.credentials.get(function(err) {\n  if (!err) {\n    console.log(\"Cognito Identity Id: \" + AWS.config.credentials.identityId);\n  }\n});\n\nvar s3 = new AWS.S3();\ns3.listBuckets(function(err, data) {\n  if (err) console.log(err, err.stack);\n  else console.log(data);\n});\n\n```\n\n\u5b9f\u884c\u3059\u308b\u3068S3\u306e\u30d0\u30b1\u30c3\u30c8\u4e00\u89a7\u304c\u53d6\u5f97\u51fa\u6765\u307e\u3059\u3002\n\n```\n$node cognito.js\n```\n\n\u6b21\u306b\u672a\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u306b\u306f\u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u306a\u3044EC2\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u307f\u307e\u3059\u3002\n\n```cognito.js\n/*\nvar s3 = new AWS.S3();\ns3.listBuckets(function(err, data) {\n  if (err) console.log(err, err.stack);\n  else console.log(data);\n});\n*/\n\nvar ec2 = new AWS.EC2();\nparams = {}\nec2.describeInstances(params, function(err, data) {\n  if (err) console.log(err, err.stack); // an error occurred\n  else     console.log(data);           // successful response\n});\n\n```\n\n\u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u5b9f\u884c\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\u6b63\u3057\u3044\u6319\u52d5\u3067\u3059\u306d\u3002\n\n```bash\n$node hoge.js\n{ [UnauthorizedOperation: You are not authorized to perform this operation.]\n  message: 'You are not authorized to perform this operation.',\n  code: 'UnauthorizedOperation',\n  time: Mon Sep 07 2015 18:05:46 GMT+0900 (JST),\n  statusCode: 403,\n  retryable: false,\n  retryDelay: 30 } 'UnauthorizedOperation: You are not authorized to perform this operation.\\n    at Request.extractError \u30fb\u30fb\u30fb\u30fb\n```\n\n# \u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc(Facebook)\u3092\u8a66\u3059\n\n[Authentication in the Browser with Amazon Cognito and Public Identity Providers](https://blogs.aws.amazon.com/javascript/post/TxTUNTVES4AL15/Authentication-in-the-Browser-with-Amazon-Cognito-and-Public-Identity-Providers)\n\nFacebook\u8a8d\u8a3c\u306fNode.js\u3067\u306a\u304f\u3001JavaScript\u3067\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\n## Facebook\u30a2\u30d7\u30ea\u306e\u4f5c\u6210\n\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306bFacebook\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nFacebook\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n[[AWS][iOS] Amazon Cognito \u306e\u30e2\u30d0\u30a4\u30eb\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c & \u30c7\u30fc\u30bf\u540c\u671f \u3092 iOS \u3067\u4f7f\u3063\u3066\u307f\u305f](http://dev.classmethod.jp/smartphone/amazon-cognito-ios-auth/)\n\n\u4f5c\u6210\u5f8c\u306b\u78ba\u8a8d\u3067\u304d\u308bAppID\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## Cognito\u306eIdentity Pool\u3067Facebook\u30a2\u30d7\u30eaID\u3092\u767b\u9332\u3059\u308b\n\nCognito\u306edentity Pool\u3067\u5148\u307b\u3069\u4f5c\u6210\u3057\u305fFacebook\u30a2\u30d7\u30ea\u306eAppID\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n![Screen Shot 2015-09-07 at 11.12.03 PM.png](https://qiita-image-store.s3.amazonaws.com/0/20193/635ba976-2791-5071-6fd6-5133feb15cca.png \"Screen Shot 2015-09-07 at 11.12.03 PM.png\")\n\n## S3\u3078HTML\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\n\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306bS3\u3078Facebook\u30ed\u30b0\u30a4\u30f3\u7528\u306eHTML\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nS3\u3067\u306f\u4ee5\u4e0b\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\n+ \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\n+ Enable website hosting\u3092\u8a2d\u5b9a\n+ \u5bfe\u8c61\u30d0\u30b1\u30c3\u30c8\u306e\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3067\u533f\u540d\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\n+ [Facebook Login for the Web with the JavaScript SDK](https://developers.facebook.com/docs/facebook-login/web)\n\u306b\u3042\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306aHTML\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u306a\u304a\u3001{your-app-id}\u3068\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306f\u81ea\u5206\u306eFacebook\u30a2\u30d7\u30ea\u306eID\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n```index.html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Facebook Login JavaScript Example</title>\n<meta charset=\"UTF-8\">\n</head>\n<body>\n<script>\n  // This is called with the results from from FB.getLoginStatus().\n  function statusChangeCallback(response) {\n    console.log('statusChangeCallback');\n    console.log(response);\n    // The response object is returned with a status field that lets the\n    // app know the current login status of the person.\n    // Full docs on the response object can be found in the documentation\n    // for FB.getLoginStatus().\n    if (response.status === 'connected') {\n      // Logged into your app and Facebook.\n      testAPI();\n    } else if (response.status === 'not_authorized') {\n      // The person is logged into Facebook, but not your app.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into this app.';\n    } else {\n      // The person is not logged into Facebook, so we're not sure if\n      // they are logged into this app or not.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into Facebook.';\n    }\n  }\n\n  // This function is called when someone finishes with the Login\n  // Button.  See the onlogin handler attached to it in the sample\n  // code below.\n  function checkLoginState() {\n    FB.getLoginStatus(function(response) {\n      statusChangeCallback(response);\n    });\n  }\n\n  window.fbAsyncInit = function() {\n  FB.init({\n    appId      : '{your-app-id}',\n    cookie     : true,  // enable cookies to allow the server to access \n                        // the session\n    xfbml      : true,  // parse social plugins on this page\n    version    : 'v2.2' // use version 2.2\n  });\n\n  // Now that we've initialized the JavaScript SDK, we call \n  // FB.getLoginStatus().  This function gets the state of the\n  // person visiting this page and can return one of three states to\n  // the callback you provide.  They can be:\n  //\n  // 1. Logged into your app ('connected')\n  // 2. Logged into Facebook, but not your app ('not_authorized')\n  // 3. Not logged into Facebook and can't tell if they are logged into\n  //    your app or not.\n  //\n  // These three cases are handled in the callback function.\n\n  FB.getLoginStatus(function(response) {\n    statusChangeCallback(response);\n  });\n\n  };\n\n  // Load the SDK asynchronously\n  (function(d, s, id) {\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) return;\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n  }(document, 'script', 'facebook-jssdk'));\n\n  // Here we run a very simple test of the Graph API after login is\n  // successful.  See statusChangeCallback() for when this call is made.\n  function testAPI() {\n    console.log('Welcome!  Fetching your information.... ');\n    FB.api('/me', function(response) {\n      console.log('Successful login for: ' + response.name);\n      document.getElementById('status').innerHTML =\n        'Thanks for logging in, ' + response.name + '!';\n    });\n  }\n</script>\n\n<!--\n  Below we include the Login Button social plugin. This button uses\n  the JavaScript SDK to present a graphical Login button that triggers\n  the FB.login() function when clicked.\n-->\n\n<fb:login-button scope=\"public_profile,email\" onlogin=\"checkLoginState();\">\n</fb:login-button>\n\n<div id=\"status\">\n</div>\n\n</body>\n</html>\n```\n\n\u3046\u307e\u304f\u8a2d\u5b9a\u3067\u304d\u308c\u3070S3\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n![Screen Shot 2015-09-07 at 11.49.37 PM.png](https://qiita-image-store.s3.amazonaws.com/0/20193/5fe29908-28a8-3305-d569-2e4e113a2a13.png \"Screen Shot 2015-09-07 at 11.49.37 PM.png\")\n\n\n\u305f\u3060\u3057\u3001\u3053\u306e\u72b6\u614b\u3067\u306fFacebook\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u3068\u3044\u3046\u306e\u3082Facebook\u30a2\u30d7\u30ea\u3067\u306f\u6307\u5b9a\u3055\u308c\u305fURL\u4ee5\u5916\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3067\u306f\u8a8d\u8a3c\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067S3\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u30e1\u30e2\u3057\u3001FacebookDeveloper\u306e\u753b\u9762\u3092\u8868\u793a\u3057\u3001\u63a5\u7d9a\u5143\u306eURL\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n+ Settings->Add Platform->Web Site\n\n\u8a2d\u5b9a\u5f8c\u3001Log In\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3059\u308b\u3053\u3068\u3067\u30ed\u30b0\u30a4\u30f3\u304c\u3067\u304d\u307e\u3059\u3002\n\n![Screen Shot 2015-09-07 at 11.54.28 PM.png](https://qiita-image-store.s3.amazonaws.com/0/20193/0812213e-dbba-6e64-a1da-422c9dadbae7.png \"Screen Shot 2015-09-07 at 11.54.28 PM.png\")\n\n# Cognito\u3068\u306e\u9023\u643a\n\nChrome\u306eDeveloperTools\u306a\u3069\u3067\u78ba\u8a8d\u3059\u308b\u3068`FB.getLoginStatus`\u306e\u30ec\u30b9\u30dd\u30f3\u30c8\u306e\u4e2d\u306baccessToken\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306e\u3067\u3053\u308c\u3092\u5229\u7528\u3057\u3066Cognito\u306e\u6a29\u9650\u3092\u53d6\u5f97\u3057\u3001EC2\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<title>Facebook Login JavaScript Example</title>\n<meta charset=\"UTF-8\">\n</head>\n<body>\n<script src=\"https://sdk.amazonaws.com/js/aws-sdk-2.1.49.min.js\"></script>\n<script>\n  function getEC2(token) {\n    console.log(token);\n    var creds = new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: 'us-east-1:xxxxxx',\n      Logins: { \n        'graph.facebook.com': token\n      }\n    });\n     \n    AWS.config.update({\n      region: 'us-east-1',\n      credentials: creds\n    });\n    \n    var ec2 = new AWS.EC2();\n    var params = {}\n    ec2.describeInstances(params, function(err, data) {\n      if (err) console.log(err, err.stack); // an error occurred\n      else     console.log(data);           // successful response\n    });\n  }\n  // This is called with the results from from FB.getLoginStatus().\n  function statusChangeCallback(response) {\n    console.log('statusChangeCallback');\n    console.log(response);\n    // The response object is returned with a status field that lets the\n    // app know the curent login status of the person.\n    // Full docs on the response object can be found in the documentation\n    // for FB.getLoginStatus().\n    if (response.status === 'connected') {\n      // Logged into your app and Facebook.\n      getEC2(response.authResponse.accessToken);\n      testAPI();\n    } else if (response.status === 'not_authorized') {\n      // The person is logged into Facebook, but not your app.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into this app.';\n    } else {\n      // The person is not logged into Facebook, so we're not sure if\n      // they are logged into this app or not.\n      document.getElementById('status').innerHTML = 'Please log ' +\n        'into Facebook.';\n    }\n  }\n\n  // This function is called when someone finishes with the Login\n  // Button.  See the onlogin handler attached to it in the sample\n  // code below.\n  function checkLoginState() {\n    FB.getLoginStatus(function(response) {\n      statusChangeCallback(response);\n    });\n  }\n\n  window.fbAsyncInit = function() {\n  FB.init({\n    appId      : 'xxxxxxxx',\n    cookie     : true,  // enable cookies to allow the server to access \n                        // the session\n    xfbml      : true,  // parse social plugins on this page\n    version    : 'v2.2' // use version 2.2\n  });\n\n  // Now that we've initialized the JavaScript SDK, we call \n  // FB.getLoginStatus().  This function gets the state of the\n  // person visiting this page and can return one of three states to\n  // the callback you provide.  They can be:\n  //\n  // 1. Logged into your app ('connected')\n  // 2. Logged into Facebook, but not your app ('not_authorized')\n  // 3. Not logged into Facebook and can't tell if they are logged into\n  //    your app or not.\n  //\n  // These three cases are handled in the callback function.\n\n  FB.getLoginStatus(function(response) {\n    statusChangeCallback(response);\n  });\n\n  };\n\n  // Load the SDK asynchronously\n  (function(d, s, id) {\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) return;\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n  }(document, 'script', 'facebook-jssdk'));\n\n  // Here we run a very simple test of the Graph API after login is\n  // successful.  See statusChangeCallback() for when this call is made.\n  function testAPI() {\n    console.log('Welcome!  Fetching your information.... ');\n    FB.api('/me', function(response) {\n      console.log('Successful login for: ' + response.name);\n      document.getElementById('status').innerHTML =\n        'Thanks for logging in, ' + response.name + '!';\n    });\n  }\n</script>\n\n<!--\n  Below we include the Login Button social plugin. This button uses\n  the JavaScript SDK to present a graphical Login button that triggers\n  the FB.login() function when clicked.\n-->\n\n<fb:login-button scope=\"public_profile,email\" onlogin=\"checkLoginState();\">\n</fb:login-button>\n\n<div id=\"status\">\n</div>\n\n</body>\n</html>\n```\n\n\u5909\u66f4\u70b9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n+ AWS SDK for JavaScript\u3092\u8aad\u307f\u8fbc\u3080\u51e6\u7406\u3092\u8ffd\u52a0\n+ getEC2\u3068\u3044\u3046function\u3092\u8ffd\u52a0\u3002\u3053\u306e\u4e2d\u3067Facebook\u8a8d\u8a3c\u306b\u3088\u3063\u3066\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3057\u3066Cognito\u306e\u8a8d\u8a3c\u3092\u884c\u3044\u3001\u305d\u306e\u6a29\u9650\u3067EC2\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u3001Console.log\u306b\u66f8\u304f\n+ \u51e6\u7406\u306e\u9014\u4e2d\u3067getEC2\u3092\u547c\u3073\u51fa\u3059\u51e6\u7406\u3092\u8ffd\u52a0\n\n\u4e0a\u8a18\u306b\u3088\u3063\u3066console.log\u306bEC2\u306e\u60c5\u5831\u304c\u5165\u3063\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u53d6\u5f97\u3067\u304d\u308b\u306e\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\uff08Chrome\u306eDevTool\u306a\u3069\u3067\u78ba\u8a8d)\n\n![Screen Shot 2015-09-08 at 10.04.50 PM.png](https://qiita-image-store.s3.amazonaws.com/0/20193/0117a366-90e7-dab9-7648-deb3f666ced5.png \"Screen Shot 2015-09-08 at 10.04.50 PM.png\")\n\n\n# \u307e\u3068\u3081\n\n+ Cognito\u3092\u4f7f\u3046\u3053\u3068\u3067\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306a\u3069\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u57cb\u3081\u8fbc\u307e\u305a\u3001AWS\u3078\u306e\u30ea\u30bd\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\n+ \u8a8d\u8a3c\u3001\u672a\u8a8d\u8a3c\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\n", "tags": ["AWS", "cognito", "JavaScript", "Facebook"]}