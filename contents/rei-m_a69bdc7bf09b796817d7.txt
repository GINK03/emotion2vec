{"context": " More than 1 year has passed since last update.\nListView\u3092\u4f7f\u3046\u3068\u304d\u306b\u3088\u304f\u3042\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4e0b\u306b\u5f15\u3063\u5f35\u3063\u3066\u66f4\u65b0\u3059\u308bPull to Refresh\u3068\u3044\u3046\u3088\u3046\u306a\u52d5\u304d\u304c\u3042\u308a\u307e\u3059\u304c\u3001Android\u3067\u306fSupport Library\u304b\u3089SwipeRefreshLayout\u3068\u3044\u3046\u3082\u306e\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3053\u308c\u3092RxAndroid\u3068\u4e00\u7dd2\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u3001Kotlin\u3067\u30a2\u30d7\u30ea\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u306e\u30b3\u30fc\u30c9\u3082Kotlin\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304cJava\u3067\u9069\u6642\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e8b\u524d\u306e\u6e96\u5099\u306f Kotlin\u3067RxAndroid1.0\u3092\u4f7f\u3046 \u3092\u53c2\u7167\u3002\n\n\nRxSwipeRefreshLayout\n\nRxAndroid\u304b\u3089\u306fRxSwipeRefreshLayout\u3068\u3044\u3046Binding\u7528\u306e\u30af\u30e9\u30b9\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n// refreshing\u306fRefreshLayout\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308bAction1\u3092\u8fd4\u3059\nval refreshLayoutRefreshing = RxSwipeRefreshLayout.refreshing(refreshLayout)\n\n// refreshes\u306fProgress\u72b6\u614b\u306b\u306a\u3063\u305f\u3089\u914d\u4fe1\u3055\u308c\u308bObservable<void>\u3092\u8fd4\u3059\nval refreshLayoutStream = RxSwipeRefreshLayout.refreshes(refreshLayout)\n\n\n\u8a66\u3057\u3066\u307f\u308b\n\nLayout\u306bSwipeRefreshLayout\u3092\u8ffd\u52a0\n\nSwipeRefreshLayout\u3067ListView\u3092\u56f2\u307f\u307e\u3059\u3002\n\n    <android.support.v4.widget.SwipeRefreshLayout\n        android:id=\"@+id/refresh\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <ListView\n            android:id=\"@+id/list_event\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\" />\n\n    </android.support.v4.widget.SwipeRefreshLayout>\n\n\nActivity\u306b\u5b9f\u88c5\n\n\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066Atnd\u306eAPI\u3092\u53e9\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u60c5\u5831\u3092Observable\u3067\u8fd4\u3059\u3068\u3044\u3046\u3082\u306e\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\u4e0b\u306b\u5f15\u3063\u5f35\u3063\u305f\u3089\u30d7\u30ed\u30b0\u30ec\u30b9\u304c\u8868\u793a\u3055\u308c\u3066\u6b21\u30da\u30fc\u30b8\u5206\u304c\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n                              savedInstanceState: Bundle?): View? {\n\n        val view = inflater.inflate(R.layout.fragment_item, container, false)\n\n        // ListView\u306bAdaptor\u3068\u30ea\u30b9\u30ca\u3092\u30bb\u30c3\u30c8\n        mListView = view.findViewById(R.id.list_event) as AbsListView\n        mListView?.adapter = mAdapter\n        mListView?.onItemClickListener = this\n\n        // Observer\u3092\u4f5c\u6210\n        val observer = Observers.create<AtndApi.Companion.Entity>(\n                { t ->\n                    // onNext\n                    mAdapter?.add(t.title)\n                    mAdapter?.notifyDataSetChanged()\n                },\n                { e ->\n                    // onError\n                    println(\"Error!! ${e.message}\")\n                },\n                {\n                    // onComplete\n                    mAdapter?.notifyDataSetChanged()\n                })\n\n        // Observable\u3092\u4f5c\u6210\n        // \u914d\u4fe1\u6642\u306f\u65b0\u3057\u3044\u30b9\u30ec\u30c3\u30c9\n        // \u76e3\u8996\u8005\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\n        val observable = AtndApi.request(mWordForSearch, 1)\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n\n        val refreshLayout = view.findViewById(R.id.refresh) as SwipeRefreshLayout\n\n        // \u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u4e2d\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u306e\u8272\u3092\u8a2d\u5b9a\n        refreshLayout.setColorSchemeColors(Color.RED, Color.GREEN, Color.BLUE)\n        refreshLayout.setProgressBackgroundColorSchemeColor(Color.LTGRAY)\n\n        val refreshLayoutRefreshing = RxSwipeRefreshLayout.refreshing(refreshLayout)\n        val refreshLayoutStream = RxSwipeRefreshLayout.refreshes(refreshLayout)\n\n        // \u8cfc\u8aad\u3092\u958b\u59cb\n\n        // \u521d\u56de\u306eAPI\u30b3\u30fc\u30eb\n        mSubscriptions.add(observable.subscribe(observer))\n\n        // RefreshLayout\u3092\u76e3\u8996\n        mSubscriptions.add(refreshLayoutStream.subscribe({\n\n            // \u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u59cb\u307e\u3063\u305f\u3089API\u30b3\u30fc\u30eb\n            val subscription = AtndApi.request(mWordForSearch, mAdapter?.count!! + 1)\n                    .subscribeOn(Schedulers.newThread())\n                    .observeOn(AndroidSchedulers.mainThread())\n                    .finallyDo({\n                        // \u8aad\u307f\u8fbc\u307f\u304c\u7d42\u308f\u3063\u305f\u3089RefreshLayout\u306e\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u72b6\u614b\u3092\u89e3\u9664\n                        refreshLayoutRefreshing.call(false)\n                    })\n                    .subscribe(observer)\n\n            mSubscriptions.add(subscription)\n        }))\n\n        return view\n    }\n\n    override fun onDestroyView() {\n        super.onDestroyView()\n\n        // \u8cfc\u8aad\u3092\u89e3\u9664\u3059\u308b\n        mSubscriptions.unsubscribe()\n    }\n\n\n\u30d7\u30ed\u30b0\u30ec\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b https://github.com/rei-m/kotlin_sample\n\n\n- ListView\u3092\u4f7f\u3046\u3068\u304d\u306b\u3088\u304f\u3042\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4e0b\u306b\u5f15\u3063\u5f35\u3063\u3066\u66f4\u65b0\u3059\u308bPull to Refresh\u3068\u3044\u3046\u3088\u3046\u306a\u52d5\u304d\u304c\u3042\u308a\u307e\u3059\u304c\u3001Android\u3067\u306fSupport Library\u304b\u3089SwipeRefreshLayout\u3068\u3044\u3046\u3082\u306e\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3053\u308c\u3092RxAndroid\u3068\u4e00\u7dd2\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n- \u4eca\u3001Kotlin\u3067\u30a2\u30d7\u30ea\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u306e\u30b3\u30fc\u30c9\u3082Kotlin\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304cJava\u3067\u9069\u6642\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n- \u4e8b\u524d\u306e\u6e96\u5099\u306f [Kotlin\u3067RxAndroid1.0\u3092\u4f7f\u3046](http://qiita.com/rei-m/items/6a5cbebe7cb6fe679cac) \u3092\u53c2\u7167\u3002\n\n# RxSwipeRefreshLayout\n- RxAndroid\u304b\u3089\u306f`RxSwipeRefreshLayout`\u3068\u3044\u3046Binding\u7528\u306e\u30af\u30e9\u30b9\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```kotlin\n// refreshing\u306fRefreshLayout\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308bAction1\u3092\u8fd4\u3059\nval refreshLayoutRefreshing = RxSwipeRefreshLayout.refreshing(refreshLayout)\n\n// refreshes\u306fProgress\u72b6\u614b\u306b\u306a\u3063\u305f\u3089\u914d\u4fe1\u3055\u308c\u308bObservable<void>\u3092\u8fd4\u3059\nval refreshLayoutStream = RxSwipeRefreshLayout.refreshes(refreshLayout)\n```\n\n# \u8a66\u3057\u3066\u307f\u308b\n### Layout\u306bSwipeRefreshLayout\u3092\u8ffd\u52a0\n- SwipeRefreshLayout\u3067ListView\u3092\u56f2\u307f\u307e\u3059\u3002\n\n```xml\n    <android.support.v4.widget.SwipeRefreshLayout\n        android:id=\"@+id/refresh\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <ListView\n            android:id=\"@+id/list_event\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\" />\n\n    </android.support.v4.widget.SwipeRefreshLayout>\n```\n\n### Activity\u306b\u5b9f\u88c5\n- \u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066Atnd\u306eAPI\u3092\u53e9\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u60c5\u5831\u3092Observable\u3067\u8fd4\u3059\u3068\u3044\u3046\u3082\u306e\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\u4e0b\u306b\u5f15\u3063\u5f35\u3063\u305f\u3089\u30d7\u30ed\u30b0\u30ec\u30b9\u304c\u8868\u793a\u3055\u308c\u3066\u6b21\u30da\u30fc\u30b8\u5206\u304c\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```kotlin\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n                              savedInstanceState: Bundle?): View? {\n\n        val view = inflater.inflate(R.layout.fragment_item, container, false)\n\n        // ListView\u306bAdaptor\u3068\u30ea\u30b9\u30ca\u3092\u30bb\u30c3\u30c8\n        mListView = view.findViewById(R.id.list_event) as AbsListView\n        mListView?.adapter = mAdapter\n        mListView?.onItemClickListener = this\n\n        // Observer\u3092\u4f5c\u6210\n        val observer = Observers.create<AtndApi.Companion.Entity>(\n                { t ->\n                    // onNext\n                    mAdapter?.add(t.title)\n                    mAdapter?.notifyDataSetChanged()\n                },\n                { e ->\n                    // onError\n                    println(\"Error!! ${e.message}\")\n                },\n                {\n                    // onComplete\n                    mAdapter?.notifyDataSetChanged()\n                })\n\n        // Observable\u3092\u4f5c\u6210\n        // \u914d\u4fe1\u6642\u306f\u65b0\u3057\u3044\u30b9\u30ec\u30c3\u30c9\n        // \u76e3\u8996\u8005\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\n        val observable = AtndApi.request(mWordForSearch, 1)\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n\n        val refreshLayout = view.findViewById(R.id.refresh) as SwipeRefreshLayout\n\n        // \u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u4e2d\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u306e\u8272\u3092\u8a2d\u5b9a\n        refreshLayout.setColorSchemeColors(Color.RED, Color.GREEN, Color.BLUE)\n        refreshLayout.setProgressBackgroundColorSchemeColor(Color.LTGRAY)\n\n        val refreshLayoutRefreshing = RxSwipeRefreshLayout.refreshing(refreshLayout)\n        val refreshLayoutStream = RxSwipeRefreshLayout.refreshes(refreshLayout)\n\n        // \u8cfc\u8aad\u3092\u958b\u59cb\n\n        // \u521d\u56de\u306eAPI\u30b3\u30fc\u30eb\n        mSubscriptions.add(observable.subscribe(observer))\n\n        // RefreshLayout\u3092\u76e3\u8996\n        mSubscriptions.add(refreshLayoutStream.subscribe({\n\n            // \u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u59cb\u307e\u3063\u305f\u3089API\u30b3\u30fc\u30eb\n            val subscription = AtndApi.request(mWordForSearch, mAdapter?.count!! + 1)\n                    .subscribeOn(Schedulers.newThread())\n                    .observeOn(AndroidSchedulers.mainThread())\n                    .finallyDo({\n                        // \u8aad\u307f\u8fbc\u307f\u304c\u7d42\u308f\u3063\u305f\u3089RefreshLayout\u306e\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u72b6\u614b\u3092\u89e3\u9664\n                        refreshLayoutRefreshing.call(false)\n                    })\n                    .subscribe(observer)\n\n            mSubscriptions.add(subscription)\n        }))\n\n        return view\n    }\n\n    override fun onDestroyView() {\n        super.onDestroyView()\n\n        // \u8cfc\u8aad\u3092\u89e3\u9664\u3059\u308b\n        mSubscriptions.unsubscribe()\n    }\n```\n\n- \u30d7\u30ed\u30b0\u30ec\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n<img width=\"497\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-28 10.15.36.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/25841/1f8ac2d6-0aa4-72db-4821-ee116d974895.png\">\n\n- \u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b https://github.com/rei-m/kotlin_sample\n", "tags": ["Android", "Kotlin", "RxJava", "RxAndroid"]}