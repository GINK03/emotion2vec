{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\nredux\u3067action\u306e\u30c6\u30b9\u30c8\u3092\u3057\u305f\u304f\u3001reducer\u3092\u30e2\u30c3\u30af\u3057\u3066action\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3068\u3044\u3046\u65b9\u91dd\u3092\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u305f\u3002\n\nReact+Redux\u306eAction\u3001Reducer\u3092\u500b\u5225\u306b\u30c6\u30b9\u30c8\u3059\u308b - Qiita\n\n\u3057\u304b\u3057\u3001\u3053\u308c\u3060\u3068\u3001async\u306a\u95a2\u6570\u306e\u7d42\u4e86\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u62c5\u4fdd\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5225\u306e\u65b9\u91dd\u3067\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n\u65b9\u91dd\n\nredux\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3059\u308b\u3002\n\nWriting Tests | Redux\n\nasync\u306aaction\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3042\u308b\u3002\n\naction.js\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\n\n// \u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u306fsuperagent\nimport request from 'superagent';\n\nfunction request() {\n  return {\n    type: REQUEST,\n  };\n}\n\nfunction requestSuccess(items) {\n  return {\n    type: REQUEST_SUCCESS,\n    items: items,\n  };\n}\n\nexport function fetchSomeResource() {\n  return (dispatch, getState) => {\n    dispatch(request());\n    request\n      .get('http://apiserver.com/someuri')\n      .end(function(err, res) {\n        return dispatch(requestSuccess(res.body.items));\n      });\n  };\n}\n\n\n\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u57fa\u672c\u7684\u306b\u306f\u3053\u306e\u8a18\u4e8b\u3068\u540c\u3058\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3002\n\naction.spec.js\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\nimport { createStoreForActionTest } from 'utils/test';\nimport { fetchSomeResource } from './action.js';\n\ndescribe('(Action)', function() {\n  const initialState = {\n    items: [],\n    isFetching: false,\n  };\n\n  const expectedActions = [\n    { type: REQUEST },\n    { type: REQUEST_SUCCESS, items: ['items'] },\n  ];\n\n  it('REQUEST, REQUEST_SUCCESS \u304c disapatch \u3055\u308c\u308b\u3053\u3068', (done) => {\n    const store = createStoreForActionTest(initialState, expectedActions, done);\n    store.dispatch(fetchSomeResource());\n  });\n});\n\n\n\nutils/test.js\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n/**\n * action \u306e\u30c6\u30b9\u30c8\u306b\u5fc5\u8981\u306a store \u3092\u4f5c\u6210\u3059\u308b\u3002\n * dispatch \u3092\u30e2\u30c3\u30af\u3057\u3001\u5185\u90e8\u3067\u3001\n * \u6b63\u3057\u304f disapatch \u3055\u308c\u3066\u3044\u308b\u304b\u306e\u30c6\u30b9\u30c8\u3082\u3042\u308f\u305b\u3066\u884c\u3063\u3066\u3044\u308b\u3002\n *\n * @param {Object/Function} getState\n * @param {Array} expectedActions\n * @param {Function} onLastAction\n */\nexport function createStoreForActionTest(getState, expectedActions, onLastAction) {\n  const middleware = [thunk];\n\n  if (!Array.isArray(expectedActions)) {\n    throw new Error('expectedActions should be an array of expected actions.');\n  }\n  if (typeof onLastAction !== 'undefined' && typeof onLastAction !== 'function') {\n    throw new Error('onLastAction should either be undefined or function.');\n  }\n\n  function mockStoreWithoutMiddleware() {\n    return {\n      getState() {\n        return typeof getState === 'function' ?\n          getState() :\n          getState;\n      },\n\n      dispatch(action) {\n        const expectedAction = expectedActions.shift();\n\n        // \u3053\u3053\u304c\u5b9f\u969b\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n        expect(action).toEqual(expectedAction);\n\n        if (onLastAction && !expectedActions.length) {\n          onLastAction();\n        }\n        return action;\n      },\n    };\n  }\n\n  const mockStoreWithMiddleware = applyMiddleware(...middleware)(mockStoreWithoutMiddleware);\n\n  return mockStoreWithMiddleware();\n}\n\n\n\u3053\u306e\u3084\u308a\u65b9\u3060\u3068\u3001reducer\u3059\u3089\u30e2\u30c3\u30af\u305b\u305a\u3001\u30a4\u30d9\u30f3\u30c8\u304cdispatch\u3055\u308c\u308b\u3053\u3068\u3092\u5185\u90e8\u3067\u691c\u77e5\u3057\u3066\u3044\u3066\u3001\u305d\u3053\u3067\u9069\u5f53\u306a\u5024\u304b\u3069\u3046\u304b\u3082\u30c6\u30b9\u30c8\u3057\u3066\u3044\u308b\u3002\n\u3053\u308c\u306b\u3066\u3001async\u306a\u95a2\u6570\u3067\u3042\u3063\u3066\u3082\u554f\u984c\u306a\u304f\u30c6\u30b9\u30c8\u304c\u3067\u304d\u308b\u3002\n\n\u8ffd\u8a18\n\u6700\u8fd1\u898b\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u3063\u3066\u3001\u3053\u3053\u3067\u3044\u3046createStoreForActionTest\u306e\u5f79\u5272\u3092\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3002\n\nredux-mock-store\n\n\n#**\u6982\u8981**\n\nredux\u3067action\u306e\u30c6\u30b9\u30c8\u3092\u3057\u305f\u304f\u3001`reducer\u3092\u30e2\u30c3\u30af\u3057\u3066action\u3092\u30c6\u30b9\u30c8\u3059\u308b`\u3068\u3044\u3046\u65b9\u91dd\u3092\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u305f\u3002\n\n* <a href=\"http://qiita.com/okmttdhr/items/180c25a4a1188d55f842\" target=\"_blank\">React+Redux\u306eAction\u3001Reducer\u3092\u500b\u5225\u306b\u30c6\u30b9\u30c8\u3059\u308b - Qiita</a>\n\n\u3057\u304b\u3057\u3001\u3053\u308c\u3060\u3068\u3001async\u306a\u95a2\u6570\u306e\u7d42\u4e86\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u62c5\u4fdd\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5225\u306e\u65b9\u91dd\u3067\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n#**\u65b9\u91dd**\n\nredux\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3059\u308b\u3002\n\n* <a href=\"http://rackt.github.io/redux/docs/recipes/WritingTests.html\" target=\"_blank\">Writing Tests | Redux</a>\n\nasync\u306aaction\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3042\u308b\u3002\n\n```action.js\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\n\n// \u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u306fsuperagent\nimport request from 'superagent';\n\nfunction request() {\n  return {\n    type: REQUEST,\n  };\n}\n\nfunction requestSuccess(items) {\n  return {\n    type: REQUEST_SUCCESS,\n    items: items,\n  };\n}\n\nexport function fetchSomeResource() {\n  return (dispatch, getState) => {\n    dispatch(request());\n    request\n      .get('http://apiserver.com/someuri')\n      .end(function(err, res) {\n        return dispatch(requestSuccess(res.body.items));\n      });\n  };\n}\n```\n\n\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u57fa\u672c\u7684\u306b\u306f<a href=\"http://rackt.github.io/redux/docs/recipes/WritingTests.html\" target=\"_blank\">\u3053\u306e\u8a18\u4e8b</a>\u3068\u540c\u3058\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3002\n\n```js:action.spec.js\nimport {\n  REQUEST,\n  REQUEST_SUCCESS,\n} from 'constants';\nimport { createStoreForActionTest } from 'utils/test';\nimport { fetchSomeResource } from './action.js';\n\ndescribe('(Action)', function() {\n  const initialState = {\n    items: [],\n    isFetching: false,\n  };\n\n  const expectedActions = [\n    { type: REQUEST },\n    { type: REQUEST_SUCCESS, items: ['items'] },\n  ];\n\n  it('REQUEST, REQUEST_SUCCESS \u304c disapatch \u3055\u308c\u308b\u3053\u3068', (done) => {\n    const store = createStoreForActionTest(initialState, expectedActions, done);\n    store.dispatch(fetchSomeResource());\n  });\n});\n```\n\n```js:utils/test.js\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n/**\n * action \u306e\u30c6\u30b9\u30c8\u306b\u5fc5\u8981\u306a store \u3092\u4f5c\u6210\u3059\u308b\u3002\n * dispatch \u3092\u30e2\u30c3\u30af\u3057\u3001\u5185\u90e8\u3067\u3001\n * \u6b63\u3057\u304f disapatch \u3055\u308c\u3066\u3044\u308b\u304b\u306e\u30c6\u30b9\u30c8\u3082\u3042\u308f\u305b\u3066\u884c\u3063\u3066\u3044\u308b\u3002\n *\n * @param {Object/Function} getState\n * @param {Array} expectedActions\n * @param {Function} onLastAction\n */\nexport function createStoreForActionTest(getState, expectedActions, onLastAction) {\n  const middleware = [thunk];\n\n  if (!Array.isArray(expectedActions)) {\n    throw new Error('expectedActions should be an array of expected actions.');\n  }\n  if (typeof onLastAction !== 'undefined' && typeof onLastAction !== 'function') {\n    throw new Error('onLastAction should either be undefined or function.');\n  }\n\n  function mockStoreWithoutMiddleware() {\n    return {\n      getState() {\n        return typeof getState === 'function' ?\n          getState() :\n          getState;\n      },\n\n      dispatch(action) {\n        const expectedAction = expectedActions.shift();\n\n        // \u3053\u3053\u304c\u5b9f\u969b\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n        expect(action).toEqual(expectedAction);\n\n        if (onLastAction && !expectedActions.length) {\n          onLastAction();\n        }\n        return action;\n      },\n    };\n  }\n\n  const mockStoreWithMiddleware = applyMiddleware(...middleware)(mockStoreWithoutMiddleware);\n\n  return mockStoreWithMiddleware();\n}\n```\n\n\u3053\u306e\u3084\u308a\u65b9\u3060\u3068\u3001reducer\u3059\u3089\u30e2\u30c3\u30af\u305b\u305a\u3001\u30a4\u30d9\u30f3\u30c8\u304cdispatch\u3055\u308c\u308b\u3053\u3068\u3092\u5185\u90e8\u3067\u691c\u77e5\u3057\u3066\u3044\u3066\u3001\u305d\u3053\u3067\u9069\u5f53\u306a\u5024\u304b\u3069\u3046\u304b\u3082\u30c6\u30b9\u30c8\u3057\u3066\u3044\u308b\u3002\n\n\u3053\u308c\u306b\u3066\u3001async\u306a\u95a2\u6570\u3067\u3042\u3063\u3066\u3082\u554f\u984c\u306a\u304f\u30c6\u30b9\u30c8\u304c\u3067\u304d\u308b\u3002\n\n\n# \u8ffd\u8a18\n\n\u6700\u8fd1\u898b\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u3063\u3066\u3001\u3053\u3053\u3067\u3044\u3046createStoreForActionTest\u306e\u5f79\u5272\u3092\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3002\n\n* <a href=\"https://github.com/arnaudbenard/redux-mock-store\" target=\"_blank\">redux-mock-store</a>\n", "tags": ["reactjs", "JavaScript", "redux", "flux"]}