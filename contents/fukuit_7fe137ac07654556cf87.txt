{"context": "\u4eca\u307e\u3067\u3001\u753b\u51e6\u7406\u3059\u308b\u306e\u306bImageJ\u3068\u304bR\u3068\u304bMatlab\u3068\u304b\u3092\u4f7f\u3063\u3066\u305f\u3051\u3069\u3001Python( + OpenCV )\u3067\u306a\u3093\u304b\u3084\u3063\u3066\u307f\u308b\u8a66\u307f\u3002\n\nPython\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f9d\u5b58\u95a2\u4fc2\u7b49\u9762\u5012\u306a\u306e\u3067\u3001\u3053\u3053\u306f\u697d\u3057\u3066homebrew\u3067anaconda\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3059\u308b\u3002\n% brew cask install anaconda\n\nWindows\u306e\u5834\u5408\u306f\u3001chocolatey \u3067 choco install anaconda3\u3068\u304b\u3084\u3063\u3066\u304a\u304f\u3002anaconda\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u3089\u3001anaconda\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066OpenCV\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n% conda install --channel https://conda.anaconda.org/menpo opencv3\n\njupyter \u3092\u8d77\u52d5\u3057\u3066\u3001OpenCV\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\njupyter\u304c\u4fbf\u5229\u3059\u304e\u308b\u3002jupyter\u306e\u305f\u3081\u3060\u3051\u306b\u3067\u3082anaconda\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3044\u3002perl\u3084R\u3067\u3082\u4f7f\u3044\u305f\u3044\u3002\n\n\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3059\u308b\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u3044\u3048\u3070scott/tiger\u306eemp\u3001\u4eba\u306e\u9854\u306e\u753b\u50cf\u3068\u3044\u3048\u3070Lenna\u3067\u3042\u308b\u3002\n\nLenna\u3092\u6c42\u3081\u3066\n\u307e\u305a\u306f\u3001SPI Image Database \u3067\u30014.2.04.tiff\u3068\u3044\u3046\u753b\u50cf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u304f\u3002\u306a\u304a\u3001Copyright\u7684\u306b\u306f\u300cScans of magazine pictures. Copyright belongs to original publisher or photographer.\u300d\u306e\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\n\u4e8b\u524d\u306b\u3001\u753b\u50cf\u51e6\u7406\u7cfb\u306e\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u305f\u308a\u3059\u308b\u3068\u3001find /usr/local -name \u2018Lenna.tiff\u2019 -type f -print \u3068\u304b\u3057\u3066\u307f\u305f\u3089\u3001\u610f\u5916\u3068\u3069\u3063\u304b\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u3042\u308b\u3002\n\n\u753b\u50cf\u306e\u8868\u793a\nOpenCV\u3092\u4f7f\u3063\u3066\u3001\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3059\u308b\u65b9\u6cd5\u306f\u3001OpenCV\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u3002\n\u3068\u3044\u3046\u30ef\u30b1\u3067\u3001\u3055\u3063\u305d\u304f\u3001jupyter notebook\u4e0a\u3067\u3084\u3063\u3066\u307f\u308b\u3002\u306a\u304a\u3001cv2.waitKey(0)\u3057\u3066\u304b\u3089cv2.destroyAllWindows()\u3057\u3066\u3044\u308b\u304c\u3001\u3053\u308c\u306f\u30ad\u30fc\u5165\u529b\u30920\u30df\u30ea\u79d2\u5f85\u3064\u3068\u3044\u3046\u610f\u5473\u3067\u3001\u3053\u306e\u5834\u5408\u306e0\u79d2\u3068\u3044\u3046\u306e\u306f\u300c\u6642\u9593\u6307\u5b9a\u306a\u3057\u300d\u3059\u306a\u308f\u3061\u305a\u3063\u3068\u300c\u6b21\u306e\u30ad\u30fc\u5165\u529b\u3092\u5f85\u3061\u307e\u3059\u300d\u3068\u3044\u3046\u610f\u5473\u3089\u3057\u3044\u3002\u3064\u307e\u308a\u3001\u4f55\u3089\u304b\u306e\u30ad\u30fc\u5165\u529b\u304c\u3042\u308b\u307e\u3067\u306f\u753b\u50cf\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u3044\u3066\u304a\u304f\u3068\u3044\u3046\u6307\u793a\u3002\nimport numpy as np\nimport cv2\nimport os.path\nlenna = \"4.2.04.tiff\"\nif os.path.exists(lenna):\n    img = cv2.imread(lenna)\n    cv2.imshow(\"Lenna\", img)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n\n\n\u3053\u306eLenna\u306e\u3053\u3068\u3092\u3082\u3063\u3068\u77e5\u308a\u305f\u3044\u3068\u601d\u3063\u305f\u3089\u3001img.shape\u3068\u304bimg.size\u3068\u304b\u3092\u898b\u308c\u3070\u3044\u3044\u3002\n\n\u753b\u50cf\u306e2\u5024\u5316\nOpenCV\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u898b\u308b\u3068\u30012\u5024\u5316\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u901a\u308a\u3084\u3063\u3066\u307f\u308b\u3002\nos.path.exiss() \u3059\u308b\u3053\u3068\u3067\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u884c\u3092\u5165\u308c\u3066\u307f\u305f\u3002\n\u307e\u305f\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3069\u304a\u308a\u3001matplotlib\u3092\u4f7f\u3063\u3066\u753b\u50cf\u8868\u793a\u3092\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\nimport cv2\nimport numpy as np\nimport os.path\nfrom matplotlib import pyplot as plt\nlenna = \"4.2.04.tiff\"\n\nif os.path.exists(lenna):\n    img = cv2.imread(lenna,0)\n    img = cv2.medianBlur(img, 5)\n    ret, th1 = cv2.thresholdimg, 127, 255, cv2.THRESH_BINARY)\n    th2 = cv2.adaptiveThreshold(img, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 11, 2)\n    th3 = cv2.adaptiveThreshold(img, 255, cv2.ADAPTIVE_THERSH_GAUSSIAN_C, cv2.THRESH_BINARY, 11, 2)\n\n    titles = ['Original Image', 'Global Thresholding (v = 127)', 'Adaptive Mean Thresholding', 'Adaptive Gaussian Thresholding']\n    images = [img, th1, th2, th3]\n\n    for i in range(0, 4):\n        plt.subplot(2, 2, i+1), plt.imshow(images[i], 'gray')\n        plt.title(titles[i])\n        plt.xticks([]), plt.yticks([])\n\n    plt.show()\n\n\n\u540c\u69d8\u306b\u3001\u5927\u6d25\u6cd5\u3067\u306e2\u5024\u5316\u3082\u3084\u3063\u3066\u307f\u308b\u3002\u30b3\u30fc\u30c9\u306f\u3001\u307b\u3068\u3093\u3069\u5909\u308f\u3089\u306a\u3044\u3002\nimport cv2\nimport numpy as np\nimport os.path\nfrom matplotlib import pyplot as plt\nlenna = \"4.2.04.tiff\"\nif os.path.exists(lenna):\n    img = cv2.imread(lenna,0)\n    img = cv2.medianBlur(img,5)\n    ret,th = cv2.threshold(img,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)\n    cv2.imshow(\"Lenna\", th)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n\n\n\u3068\u3044\u3046\u30ef\u30b1\u3067\u3001\u3072\u3068\u307e\u305a\u3001\u57fa\u672c\u7684\u306a\u3068\u3053\u308d\u307e\u3067\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\n\nhttps://github.com/fukuit/Python_SelfLearning/blob/master/show_image.py\nhttps://github.com/fukuit/Python_SelfLearning/blob/master/binarize_image.py\n\n\n\u4eca\u307e\u3067\u3001\u753b\u51e6\u7406\u3059\u308b\u306e\u306bImageJ\u3068\u304bR\u3068\u304bMatlab\u3068\u304b\u3092\u4f7f\u3063\u3066\u305f\u3051\u3069\u3001Python( + OpenCV )\u3067\u306a\u3093\u304b\u3084\u3063\u3066\u307f\u308b\u8a66\u307f\u3002\n\n# Python\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f9d\u5b58\u95a2\u4fc2\u7b49\u9762\u5012\u306a\u306e\u3067\u3001\u3053\u3053\u306f\u697d\u3057\u3066homebrew\u3067anaconda\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3059\u308b\u3002\n\n```Bash\n% brew cask install anaconda\n```\n\nWindows\u306e\u5834\u5408\u306f\u3001chocolatey \u3067 choco install anaconda3\u3068\u304b\u3084\u3063\u3066\u304a\u304f\u3002anaconda\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u3089\u3001anaconda\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066OpenCV\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n```Bash\n% conda install --channel https://conda.anaconda.org/menpo opencv3\n```\n\njupyter \u3092\u8d77\u52d5\u3057\u3066\u3001OpenCV\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n![20160830001.jpg](https://qiita-image-store.s3.amazonaws.com/0/15553/aff83722-37c9-2c81-068b-6a9a6799e141.jpeg \"20160830001.jpg\")\n\njupyter\u304c\u4fbf\u5229\u3059\u304e\u308b\u3002jupyter\u306e\u305f\u3081\u3060\u3051\u306b\u3067\u3082anaconda\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3044\u3002perl\u3084R\u3067\u3082\u4f7f\u3044\u305f\u3044\u3002\n\n# \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3059\u308b\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u3044\u3048\u3070scott/tiger\u306eemp\u3001\u4eba\u306e\u9854\u306e\u753b\u50cf\u3068\u3044\u3048\u3070Lenna\u3067\u3042\u308b\u3002\n\n## Lenna\u3092\u6c42\u3081\u3066\n\u307e\u305a\u306f\u3001[SPI Image Database ](http://sipi.usc.edu/database/database.php?volume=misc)\u3067\u30014.2.04.tiff\u3068\u3044\u3046\u753b\u50cf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u304f\u3002\u306a\u304a\u3001Copyright\u7684\u306b\u306f\u300cScans of magazine pictures. Copyright belongs to original publisher or photographer.\u300d\u306e\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\n\u4e8b\u524d\u306b\u3001\u753b\u50cf\u51e6\u7406\u7cfb\u306e\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u305f\u308a\u3059\u308b\u3068\u3001find /usr/local -name \u2018Lenna.tiff\u2019 -type f -print \u3068\u304b\u3057\u3066\u307f\u305f\u3089\u3001\u610f\u5916\u3068\u3069\u3063\u304b\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u3042\u308b\u3002\n\n## \u753b\u50cf\u306e\u8868\u793a\n\nOpenCV\u3092\u4f7f\u3063\u3066\u3001\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3059\u308b\u65b9\u6cd5\u306f\u3001[OpenCV\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.opencv.org/3.1.0/dc/d2e/tutorial_py_image_display.html)\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u3002\n\u3068\u3044\u3046\u30ef\u30b1\u3067\u3001\u3055\u3063\u305d\u304f\u3001jupyter notebook\u4e0a\u3067\u3084\u3063\u3066\u307f\u308b\u3002\u306a\u304a\u3001cv2.waitKey(0)\u3057\u3066\u304b\u3089cv2.destroyAllWindows()\u3057\u3066\u3044\u308b\u304c\u3001\u3053\u308c\u306f\u30ad\u30fc\u5165\u529b\u30920\u30df\u30ea\u79d2\u5f85\u3064\u3068\u3044\u3046\u610f\u5473\u3067\u3001\u3053\u306e\u5834\u5408\u306e0\u79d2\u3068\u3044\u3046\u306e\u306f\u300c\u6642\u9593\u6307\u5b9a\u306a\u3057\u300d\u3059\u306a\u308f\u3061\u305a\u3063\u3068\u300c\u6b21\u306e\u30ad\u30fc\u5165\u529b\u3092\u5f85\u3061\u307e\u3059\u300d\u3068\u3044\u3046\u610f\u5473\u3089\u3057\u3044\u3002\u3064\u307e\u308a\u3001\u4f55\u3089\u304b\u306e\u30ad\u30fc\u5165\u529b\u304c\u3042\u308b\u307e\u3067\u306f\u753b\u50cf\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u3044\u3066\u304a\u304f\u3068\u3044\u3046\u6307\u793a\u3002\n\n```python\nimport numpy as np\nimport cv2\nimport os.path\nlenna = \"4.2.04.tiff\"\nif os.path.exists(lenna):\n    img = cv2.imread(lenna)\n    cv2.imshow(\"Lenna\", img)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n```\n![20160830002.jpg](https://qiita-image-store.s3.amazonaws.com/0/15553/fb21c63b-2ee1-688c-0f11-d18ff83cbbc5.jpeg \"20160830002.jpg\")\n\n\u3053\u306eLenna\u306e\u3053\u3068\u3092\u3082\u3063\u3068\u77e5\u308a\u305f\u3044\u3068\u601d\u3063\u305f\u3089\u3001img.shape\u3068\u304bimg.size\u3068\u304b\u3092\u898b\u308c\u3070\u3044\u3044\u3002\n\n## \u753b\u50cf\u306e2\u5024\u5316\n\n[OpenCV\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://docs.opencv.org/trunk/d7/d4d/tutorial_py_thresholding.html)\u3092\u898b\u308b\u3068\u30012\u5024\u5316\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u901a\u308a\u3084\u3063\u3066\u307f\u308b\u3002\n\nos.path.exiss() \u3059\u308b\u3053\u3068\u3067\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u884c\u3092\u5165\u308c\u3066\u307f\u305f\u3002\n\n\u307e\u305f\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3069\u304a\u308a\u3001matplotlib\u3092\u4f7f\u3063\u3066\u753b\u50cf\u8868\u793a\u3092\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```python\nimport cv2\nimport numpy as np\nimport os.path\nfrom matplotlib import pyplot as plt\nlenna = \"4.2.04.tiff\"\n\nif os.path.exists(lenna):\n    img = cv2.imread(lenna,0)\n    img = cv2.medianBlur(img, 5)\n    ret, th1 = cv2.thresholdimg, 127, 255, cv2.THRESH_BINARY)\n    th2 = cv2.adaptiveThreshold(img, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 11, 2)\n    th3 = cv2.adaptiveThreshold(img, 255, cv2.ADAPTIVE_THERSH_GAUSSIAN_C, cv2.THRESH_BINARY, 11, 2)\n    \n    titles = ['Original Image', 'Global Thresholding (v = 127)', 'Adaptive Mean Thresholding', 'Adaptive Gaussian Thresholding']\n    images = [img, th1, th2, th3]\n\n    for i in range(0, 4):\n        plt.subplot(2, 2, i+1), plt.imshow(images[i], 'gray')\n        plt.title(titles[i])\n        plt.xticks([]), plt.yticks([])\n\n    plt.show()\n```\n![20160830003.jpg](https://qiita-image-store.s3.amazonaws.com/0/15553/3971025e-81dc-690d-0e49-cd1ffa1183d0.jpeg \"20160830003.jpg\")\n\n\n\u540c\u69d8\u306b\u3001\u5927\u6d25\u6cd5\u3067\u306e2\u5024\u5316\u3082\u3084\u3063\u3066\u307f\u308b\u3002\u30b3\u30fc\u30c9\u306f\u3001\u307b\u3068\u3093\u3069\u5909\u308f\u3089\u306a\u3044\u3002\n\n```python\nimport cv2\nimport numpy as np\nimport os.path\nfrom matplotlib import pyplot as plt\nlenna = \"4.2.04.tiff\"\nif os.path.exists(lenna):\n    img = cv2.imread(lenna,0)\n    img = cv2.medianBlur(img,5)\n    ret,th = cv2.threshold(img,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)\n    cv2.imshow(\"Lenna\", th)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n```\n\n![20160830004.jpg](https://qiita-image-store.s3.amazonaws.com/0/15553/5761ddf2-d6d9-fbad-cb8a-299943856c02.jpeg \"20160830004.jpg\")\n\n\u3068\u3044\u3046\u30ef\u30b1\u3067\u3001\u3072\u3068\u307e\u305a\u3001\u57fa\u672c\u7684\u306a\u3068\u3053\u308d\u307e\u3067\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n## \u4eca\u56de\u306e\u30b3\u30fc\u30c9\n\n- https://github.com/fukuit/Python_SelfLearning/blob/master/show_image.py\n- https://github.com/fukuit/Python_SelfLearning/blob/master/binarize_image.py\n\n", "tags": ["OpenCV", "Python"]}