{"tags": ["Ruby", "zip"], "context": " More than 1 year has passed since last update.Requires Rubyzip 1.1.0+\nGiven a data of Zip file that is read from an IO, extract that data into a Hash.\ndef unzip(data)\n  fin = StringIO.new(data)\n\n  entries = {}\n\n  ::Zip::InputStream.open(fin) do |fzip|\n    while entry = fzip.get_next_entry\n      entries[entry.name] = fzip.read\n    end\n  end\n\n  entries\nend\n\nExample:\nentries = unzip(open(\"http://example.com/archive.zip\").read)\nentries[\"file.txt\"] #=> \"Hello World\\n\" (File Content)\n\nRequires Rubyzip 1.1.0+\n\nGiven a `data` of Zip file that is read from an IO, extract that data into a Hash.\n\n```ruby\ndef unzip(data)\n  fin = StringIO.new(data)\n\n  entries = {}\n\n  ::Zip::InputStream.open(fin) do |fzip|\n    while entry = fzip.get_next_entry\n      entries[entry.name] = fzip.read\n    end\n  end\n\n  entries\nend\n```\n\nExample:\n\n```ruby\nentries = unzip(open(\"http://example.com/archive.zip\").read)\nentries[\"file.txt\"] #=> \"Hello World\\n\" (File Content)\n```\n"}