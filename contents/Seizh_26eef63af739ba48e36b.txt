{"context": " More than 1 year has passed since last update.\n\nSIMD\u306e\u7121\u99c4\u9063\u3044\nCodeIQ \u306b\u304a\u3051\u308b\u5148\u306e Kawazoe(@riverplus)\u6c0f\u51fa\u984c\u306e\u30d3\u30c3\u30c8\u6570\u3048\u4e0a\u3052\u554f\u984c\u306b\u3064\u3044\u3066\u3001\u6562\u3048\u3066\u30c0\u30e1\u306a\u89e3\u6cd5\u3092\u8ffd\u6c42\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3046\u3002\n\u4eca\u56de\u8a66\u3057\u3066\u307f\u308b\u306e\u306f\u300c\u529b\u6280\u300d\u3060\u3002\n(\u3069\u3093\u306a\u554f\u984c\u3060\u3063\u305f\u304b\u306f\u3053\u3061\u3089\u3092\u53c2\u7167)\n\nhttp://qiita.com/Seizh/items/dbe5c95acd58d2d18b63\n\nx86\u306epopcnt\u547d\u4ee4\u3092\u76f4\u63a5\u547c\u3073\u51fa\u305b\u3070\u591a\u5c11\u306f\u901f\u304f\u306a\u308b\u3002\u305d\u3093\u306a\u306e\u306f\u8ab0\u3067\u3082\u601d\u3044\u3064\u304f\u3060\u308d\u3046\u3002\npopcnt\u3092\u8d85\u3048\u308b\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u304c\u5fc5\u8981\u3060\u3002\n\u305d\u3046\u3060\u3001AVX2\u4f7f\u3048\u3070popcnt\u3088\u308a\u9ad8\u901f\u306a\u30d3\u30c3\u30c8\u6570\u3048\u4e0a\u3052\u30eb\u30fc\u30c1\u30f3\u3092\u4f5c\u308c\u308b\u3093\u3058\u3083\u306d\uff1f\u3068\u601d\u3063\u305f\u306e\u304c\u3001\u4f8b\u306e\u6f38\u5316\u5f0f\u3092\u4f7f\u3063\u3066\u89e3\u3044\u305f\u56de\u7b54\u306e\u63d0\u51fa\u5f8c\u3002\n\u3082\u3061\u308d\u3093\u3053\u3093\u306a\u30d0\u30ab\u306a\u56de\u7b54\u3092\u51fa\u3057\u305f\u3089\u6700\u4f4e\u30af\u30e9\u30b9\u306e\u70b9\u3092\u3082\u3089\u3046\u3053\u3068\u306f\u899a\u609f\u305b\u306d\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u63d0\u51fa\u3082\u3057\u306a\u3044\u307e\u307e\u304a\u8535\u5165\u308a\u3059\u308b\u3064\u3082\u308a\u3060\u3063\u305f\u304c\u3001\u305b\u3063\u304b\u304f\u3060\u304b\u3089\u304a\u62ab\u9732\u76ee\u3057\u3088\u3046\u3002\n\n\u5b9f\u88c5\u4f8b(C++)\nC++\u3068\u3044\u3044\u3064\u3064\u307b\u307cC99\u306b\u6bdb\u304c\u751f\u3048\u305f\u3088\u3046\u306a\u4f55\u304b\u3067\u3042\u308b\u3002\n\u3044\u3061\u304a\u3046\u3053\u306e\u30b3\u30fc\u30c9\u306fVisual C++ 2013\u306ex64\u5411\u3051\u30d3\u30eb\u30c9\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u306f /Ox /arch:AVX2 \u306a\u3069\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3063\u3066\u3044\u308b\u3002gcc\u3084clang\u3067\u306f\u3069\u3053\u304b\u3057\u3089\u66f8\u304d\u76f4\u3057\u304c\u5fc5\u8981\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u3082\u3061\u308d\u3093\u52d5\u4f5c\u306b\u306fAVX2\u306b\u5bfe\u5fdc\u3057\u305f64\u30d3\u30c3\u30c8x86\u30d7\u30ed\u30bb\u30c3\u30b5\u304c\u5fc5\u8981\u3060\u3002\nAVX2\u3092\u4f7f\u3063\u305f\u30eb\u30fc\u30c1\u30f3\u306f2\u30d0\u30fc\u30b8\u30e7\u30f3\u3042\u308b\u304c\u3001\u4e00\u65b9\u306fHacker's Delight\u306b\u3082\u66f8\u304b\u308c\u3066\u3044\u308b\u5206\u5272\u7d71\u6cbb\u6cd5(\u203b1)\u306b\u3088\u308b\u30d3\u30c3\u30c8\u6570\u3048\u4e0a\u3052\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3057\u3064\u3064\u3001\u5f8c\u534a\u306e\u51e6\u7406\u3092vpsadbw\u3067\u4e00\u6c17\u306b\u7e2e\u7d04\u3059\u308b\u3088\u3046\u306b\u6539\u826f\u3057\u305f\u3082\u306e\u3060\u3002\n\u30bd\u30d5\u30c8\u5b9f\u88c5\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u81ea\u4f53\u306f\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3001SIMD\u547d\u4ee4\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u306b\u7c21\u5358\u306b\u9069\u7528\u3067\u304d\u308b\u3002\n\u203b1) \u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f10\u5e74\u4ee5\u4e0a\u524d\u306b\u4e2d\u6751\u5b9f\u6c0f\u306e\u65e5\u8a18\u306b\u3066\u77e5\u3063\u305f\u3082\u306e\u3002\n\nhttp://www.nminoru.jp/~nminoru/programming/bitcount.html\n\n\u3082\u3046\u4e00\u65b9\u306f\u3001\u3044\u308f\u3086\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3067\u30014\u30d3\u30c3\u30c8\u5206\u306e\u30d3\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u5024\u3092\u30c6\u30fc\u30d6\u30eb\u5316\u3057\u305f\u3082\u306e\u3092YMM\u30ec\u30b8\u30b9\u30bf\u306e\u4e0a\u4e0b\u306b\u5c55\u958b\u3057\u3001vpshufb\u3092\u3082\u3061\u3044\u3066\u4e26\u5217\u306b\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u3055\u305b\u308b\u3053\u3068\u3067\u300132\u4e26\u5217\u30674\u30d3\u30c3\u30c8\u5024\u306e\u30d3\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u5024\u3092\u6c42\u3081\u3066\u3044\u308b\u30021\u30d0\u30a4\u30c8\u3054\u3068\u306b\u4e0a\u4e0b4\u30d3\u30c3\u30c8\u306b\u5206\u5272\u3057\u3066\u51e6\u7406\u3059\u308b\u306e\u3067\u305d\u308c\u304c2\u56de\u3068\u3001\u3042\u3068\u306f\u305d\u306e\u5024\u3092\u8db3\u3057\u7b97\u3057\u3066vpsadbw\u3067\u7e2e\u7d04\u3060\u3002\n\u524d\u8005\u3088\u308a\u547d\u4ee4\u6570\u306f\u304b\u306a\u308a\u6e1b\u3063\u3066\u3044\u308b\u3002\n#include <immintrin.h>\n#include <iostream>\n#include <cstdint>\n#include <ctime>     // for clock()\n\nusing namespace std;\nuint64_t F_popcnt64(uint64_t n)\n{\n    uint64_t sum = 0;\n    for (uint64_t i = 1; i <= n; i++) {\n        sum += _mm_popcnt_u64(i);\n    }\n    return sum;\n}\n\nuint64_t F_AVX2(uint64_t n)\n{\n    __m256i vk = _mm256_set_epi64x(1, 2, 3, 4);\n    __m256i vsum = _mm256_setzero_si256();\n\n    const __m256i vzero = _mm256_setzero_si256();\n    const __m256i mask55 = _mm256_set1_epi8(0x55);\n    const __m256i mask33 = _mm256_set1_epi8(0x33);\n    const __m256i mask0F = _mm256_set1_epi8(0x0F);\n\n    const uint64_t step = 4;\n    const __m256i vstep = _mm256_set1_epi64x(step);\n\n    uint64_t i;\n    for (i = 0; i < (n & ~(step - 1)); i += step) {\n        __m256i a = _mm256_and_si256(vk, mask55);\n        __m256i b = _mm256_srli_epi32(vk, 1);\n        b = _mm256_and_si256(b, mask55);\n        a = _mm256_add_epi32(a, b);\n        b = _mm256_srli_epi32(a, 2);\n        b = _mm256_and_si256(b, mask33);\n        a = _mm256_and_si256(a, mask33);\n        a = _mm256_add_epi32(a, b);\n        b = _mm256_srli_epi32(a, 4);\n        a = _mm256_add_epi32(a, b);\n        a = _mm256_and_si256(a, mask0F);\n        a = _mm256_sad_epu8(a, vzero);\n        vsum = _mm256_add_epi64(vsum, a);\n        vk = _mm256_add_epi64(vk, vstep);\n    }\n    __m128i vsum2 = _mm_add_epi64(\n        _mm256_castsi256_si128(vsum),\n        _mm256_extracti128_si256(vsum, 1)\n    );\n    vsum2 = _mm_add_epi64(vsum2, _mm_srli_si128(vsum2, 8));\n    uint64_t sum = _mm_cvtsi128_si64(vsum2);\n\n    for (; i < n; i++) {\n        sum += _mm_popcnt_u64(i + 1);\n    }\n    return sum;\n}\n\nuint64_t F_AVX2_v2(uint64_t n)\n{\n    __m256i vk = _mm256_set_epi64x(1, 2, 3, 4);\n    __m256i vsum = _mm256_setzero_si256();\n\n    const __m256i vzero = _mm256_setzero_si256();\n    const __m256i vmask = _mm256_set1_epi8(0xF);\n    const __m256i vpop = _mm256_setr_epi8(\n        0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,\n        0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4\n    );\n\n    const uint64_t step = 4;\n    const __m256i vstep = _mm256_set1_epi64x(step);\n\n    uint64_t i;\n    for (i = 0; i < (n & ~(step - 1)); i += step) {\n        __m256i a = _mm256_and_si256(vk, vmask);\n        __m256i b = _mm256_srli_epi32(vk, 4);\n        b = _mm256_and_si256(b, vmask);\n        a = _mm256_shuffle_epi8(vpop, a);\n        b = _mm256_shuffle_epi8(vpop, b);\n        a = _mm256_add_epi8(a, b);\n        a = _mm256_sad_epu8(a, vzero);\n        vsum = _mm256_add_epi64(vsum, a);\n        vk = _mm256_add_epi64(vk, vstep);\n    }\n    __m128i vsum2 = _mm_add_epi64(\n        _mm256_castsi256_si128(vsum),\n        _mm256_extracti128_si256(vsum, 1)\n    );\n    vsum2 = _mm_add_epi64(vsum2, _mm_srli_si128(vsum2, 8));\n    uint64_t sum = _mm_cvtsi128_si64(vsum2);\n\n    for (; i < n; i++) {\n        sum += _mm_popcnt_u64(i + 1);\n    }\n    return sum;\n}\n\n\nint main(void) {\n    clock_t start;\n\n    cout << \"[popcnt64]\" << endl;\n    start = clock();\n    cout << \"F(10^10) = \" <<  F_popcnt64(10000000000) << endl;\n    cout << \"duration = \" << (double)(clock() - start) / CLOCKS_PER_SEC << \"sec.\" << endl;\n\n    cout << \"[AVX2 ver.1]\" << endl;\n    start = clock();\n    cout << \"F(10^10) = \" <<  F_AVX2(10000000000) << endl;\n    cout << \"duration = \" << (double)(clock() - start) / CLOCKS_PER_SEC << \"sec.\" << endl;\n\n    cout << \"[AVX2 ver.2]\" << endl;\n    start = clock();\n    cout << \"F(10^10) = \" << F_AVX2_v2(10000000000) << endl;\n    cout << \"duration = \" << (double)(clock() - start) / CLOCKS_PER_SEC << \"sec.\" << endl;\n\n    return 0;\n}\n\n\u4fbf\u5b9c\u4e0a\u30014\u306e\u500d\u6570\u5358\u4f4d\u304b\u3089\u3042\u3075\u308c\u305f\u5206\u306fpopcnt\u3067\u51e6\u7406\u3057\u3066\u3044\u308b\u3002\u305d\u306e\u307b\u3046\u304c\u697d\u3060\u304b\u3089\u3060\u3002\n\u3057\u304b\u3057\u3001AVX2\u306e\u30b3\u30fc\u30c9\u306e\u3044\u305a\u308c\u3082\u3001\u898b\u305f\u76ee\u304b\u3089\u306f\u3069\u3046\u3082\u901f\u3044\u3088\u3046\u306b\u306f\u898b\u3048\u306a\u3044\u3002\n\u300c4\u4e26\u5217\u3067\u51e6\u7406\u3059\u308b\u304b\u30894\u500d\u901f\u304f\u306a\u308b\u306f\u305a\u3060\uff01\u300d\u3063\u3066\u306e\u306fpopcnt\u30924\u4e26\u5217\u3067\u3059\u308b\u547d\u4ee4\u304c\u3042\u308b\u5834\u5408\u3067\u3042\u3063\u30664\u500d\u306e\u4e26\u5217\u5ea6\u3067\u51e6\u7406\u3067\u304d\u3066\u3082\u30eb\u30fc\u30d7\u306e1\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306b4\u500d\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3063\u3066\u306f\u7d50\u679c\u7684\u306b\u4f55\u306e\u610f\u5473\u3082\u306a\u3044\u3002\n\u305d\u306e\u610f\u5473\u3067\u3001\u547d\u4ee4\u6570\u304c\u304b\u306a\u308a\u5897\u3048\u3066\u3057\u307e\u3063\u305f\u306e\u306f\u3069\u3046\u3082\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3060\u3002\n\n\u3060\u304c\u305d\u306e\u7d50\u679c\u306f\u30fb\u30fb\u30fb\n\u30b3\u30fc\u30c9\u306e\u898b\u305f\u76ee\u306fpopcnt\u306e\u307b\u3046\u304c\u901f\u305d\u3046\u306b\u898b\u3048\u308b\u306e\u3060\u304c\u3001AVX2\u7248\u306e\u30eb\u30fc\u30c1\u30f3\u304c\u3044\u305a\u308c\u30822\u500d\u306a\u3044\u30573\u500d\u4ee5\u4e0a\u901f\u3044\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u3063\u305f\u3002\n[popcnt64]\nF(10^10) = 164293127179\nduration = 12.69sec.\n[AVX2 ver.1]\nF(10^10) = 164293127179\nduration = 5.704sec.\n[AVX2 ver.2]\nF(10^10) = 164293127179\nduration = 3.845sec.\n\n\u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f\u306e\u304b\u3068\u3044\u3046\u3068\u3001popcnt\u306f\u547d\u4ee4\u3092\u767a\u884c\u3067\u304d\u308b\u30e6\u30cb\u30c3\u30c8\u304c1\u3064\u306e\u30b3\u30a2\u306b1\u3064\u3057\u304b\u306a\u304f\u30011\u30af\u30ed\u30c3\u30af\u306b1\u547d\u4ee4\u3057\u304b\u767a\u884c\u3067\u304d\u306a\u3044\u306e\u3060\u3002\u3064\u307e\u308a\u3069\u308c\u3060\u3051\u6700\u9069\u5316\u3092\u9811\u5f35\u3063\u3066\u3082\u30d1\u30e9\u30e1\u30fc\u30bfn\u306e\u56de\u6570\u5206\u306e\u30af\u30ed\u30c3\u30af\u306f\u6700\u4f4e\u3067\u3082\u8981\u3057\u3066\u3057\u307e\u3046\u3002\n\u4e00\u65b9AVX2\u306e\u30eb\u30fc\u30c1\u30f3\u3060\u304c\u3001Haswell\u306f1\u30af\u30ed\u30c3\u30af\u306b\u6700\u59274\u547d\u4ee4\u767a\u884c\u3067\u304d\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u4e26\u5217\u52d5\u4f5c\u53ef\u80fd\u306a\u547d\u4ee4\u304c\u3042\u308c\u30701\u30af\u30ed\u30c3\u30af\u306b3\uff5e4\u547d\u4ee4\u767a\u884c\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3060\u3002\n\u304a\u305d\u3089\u304f\u305d\u306e\u3078\u3093\u304c\u3046\u307e\u304f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u4e26\u5217\u51e6\u7406\u3055\u308c\u3001\u5897\u3048\u305f\u547d\u4ee4\u6570\u304c\u30da\u30a4\u3067\u304d\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u3002\n\n\u3067\u3001\u7d50\u5c40\u3053\u308c\u306e\u5b9f\u7528\u6027\u3063\u3066\u3069\u3046\u3088\uff1f\n\u7121\u8ad6\u3001\u3042\u3061\u3089\u306e\u30d3\u30c3\u30c8\u6570\u3048\u4e0a\u3052\u30eb\u30fc\u30c1\u30f3\u304c\u307b\u307c\u4e00\u77ac\u3067\u7b54\u3048\u304c\u51fa\u3066\u3044\u305f\u306e\u3068\u6bd4\u3079\u308c\u3070\u3001\u8a71\u306b\u306a\u3089\u306a\u3044\u304f\u3089\u3044\u9045\u3044\u3068\u8a00\u308f\u3056\u308b\u3092\u3048\u306a\u3044\u3060\u308d\u3046\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u3042\u3061\u3089\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u6574\u6570\u5024\u304c\u898f\u5247\u7684\u306b1\u305a\u3064\u5897\u3048\u308b\u5834\u5408\u306b\u304b\u9069\u7528\u3067\u304d\u306a\u3044\u3002\n\u3053\u3063\u3061\u306f\u3069\u3093\u306a\u4e0d\u898f\u5247\u306a\u30d3\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u3067\u3082\u9ad8\u901f\u306b\u30ab\u30a6\u30f3\u30c8\u3067\u304d\u308b\u65b9\u6cd5\u306a\u306e\u3067\u5229\u7528\u7bc4\u56f2\u306f\u5e83\u3044\u3068\u3044\u3048\u3070\u5e83\u3044\u3060\u308d\u3046\u3002\n\u307e\u3042\u3001\u5177\u4f53\u7684\u306b\u3069\u3093\u306a\u7528\u9014\u3067\u6709\u7528\u304b\u306f\u3001\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u304c\u3002\n\n(\u8ffd\u8a18)\n\u7406\u8ad6\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u8003\u3048\u3066\u307f\u305f\u3089\u901a\u5e38\u306epopcnt\u304c\u3042\u307e\u308a\u306b\u9045\u3059\u304e\u308b\u3060\u308d\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u30eb\u30fc\u30d7\u30a2\u30f3\u30ed\u30fc\u30eb\u3057\u3066\u307f\u305f\u306e\u304c\u3053\u308c\u3002\nuint64_t F_popcnt64_v2(uint64_t n)\n{\n    uint64_t i;\n    uint64_t step = 4;\n    uint64_t sum = 0, sum1 = 0, sum2 = 0, sum3 = 0, sum4 = 0;\n    for (i = 1; i <= (n & ~(step - 1)); i += step) {\n        sum1 += _mm_popcnt_u64(i);\n        sum2 += _mm_popcnt_u64(i+1);\n        sum3 += _mm_popcnt_u64(i+2);\n        sum4 += _mm_popcnt_u64(i+3);\n    }\n    sum = sum1 + sum2 + sum3 + sum4;\n    for (; i <= n; i++) {\n        sum += _mm_popcnt_u64(i);\n    }\n    return sum;\n}\n\n\u305d\u306e\u7d50\u679c\u3002\n[popcnt64]\nF(10^10) = 164293127179\nduration = 12.987sec.\n[popcnt64 ver.2]\nF(10^10) = 164293127179\nduration = 6.708sec.\n[AVX2 ver.1]\nF(10^10) = 164293127179\nduration = 6.067sec.\n[AVX2 ver.2]\nF(10^10) = 164293127179\nduration = 3.985sec.\n\n\u305d\u308c\u307b\u3069\u5927\u5dee\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\n\u307e\u3042\u3001\u3053\u308c\u306b\u3064\u3044\u3066\u306e\u611f\u60f3\u306f\u4eba\u305d\u308c\u305e\u308c\u3060\u308d\u3046\u3002\n\u30d3\u30c3\u30c8\u306e\u6570\u3048\u4e0a\u3052\u300c\u306e\u307f\u300d\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306f\u5272\u3068\u7a00\u3067\u3001\u307b\u304b\u306e\u547d\u4ee4\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u30011\u6574\u6570\u306e\u6570\u3048\u4e0a\u3052\u306b1\u30b5\u30a4\u30af\u30eb\u30fb1\u6f14\u7b97\u30e6\u30cb\u30c3\u30c8\u3057\u304b\u4f7f\u308f\u306a\u3044\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5b9f\u88c5\u306epopcnt\u306e\u610f\u5473\u306f\u5927\u304d\u3044\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n# SIMD\u306e\u7121\u99c4\u9063\u3044\n\n\nCodeIQ \u306b\u304a\u3051\u308b\u5148\u306e Kawazoe(@riverplus)\u6c0f\u51fa\u984c\u306e\u30d3\u30c3\u30c8\u6570\u3048\u4e0a\u3052\u554f\u984c\u306b\u3064\u3044\u3066\u3001\u6562\u3048\u3066\u30c0\u30e1\u306a\u89e3\u6cd5\u3092\u8ffd\u6c42\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3046\u3002\n\u4eca\u56de\u8a66\u3057\u3066\u307f\u308b\u306e\u306f\u300c\u529b\u6280\u300d\u3060\u3002\n\n(\u3069\u3093\u306a\u554f\u984c\u3060\u3063\u305f\u304b\u306f\u3053\u3061\u3089\u3092\u53c2\u7167)\n\n- http://qiita.com/Seizh/items/dbe5c95acd58d2d18b63\n\nx86\u306epopcnt\u547d\u4ee4\u3092\u76f4\u63a5\u547c\u3073\u51fa\u305b\u3070\u591a\u5c11\u306f\u901f\u304f\u306a\u308b\u3002\u305d\u3093\u306a\u306e\u306f\u8ab0\u3067\u3082\u601d\u3044\u3064\u304f\u3060\u308d\u3046\u3002\npopcnt\u3092\u8d85\u3048\u308b\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u304c\u5fc5\u8981\u3060\u3002\n\u305d\u3046\u3060\u3001AVX2\u4f7f\u3048\u3070popcnt\u3088\u308a\u9ad8\u901f\u306a\u30d3\u30c3\u30c8\u6570\u3048\u4e0a\u3052\u30eb\u30fc\u30c1\u30f3\u3092\u4f5c\u308c\u308b\u3093\u3058\u3083\u306d\uff1f\u3068\u601d\u3063\u305f\u306e\u304c\u3001\u4f8b\u306e\u6f38\u5316\u5f0f\u3092\u4f7f\u3063\u3066\u89e3\u3044\u305f\u56de\u7b54\u306e\u63d0\u51fa\u5f8c\u3002\n\n\u3082\u3061\u308d\u3093\u3053\u3093\u306a\u30d0\u30ab\u306a\u56de\u7b54\u3092\u51fa\u3057\u305f\u3089\u6700\u4f4e\u30af\u30e9\u30b9\u306e\u70b9\u3092\u3082\u3089\u3046\u3053\u3068\u306f\u899a\u609f\u305b\u306d\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u63d0\u51fa\u3082\u3057\u306a\u3044\u307e\u307e\u304a\u8535\u5165\u308a\u3059\u308b\u3064\u3082\u308a\u3060\u3063\u305f\u304c\u3001\u305b\u3063\u304b\u304f\u3060\u304b\u3089\u304a\u62ab\u9732\u76ee\u3057\u3088\u3046\u3002\n\n## \u5b9f\u88c5\u4f8b(C++)\n\nC++\u3068\u3044\u3044\u3064\u3064\u307b\u307cC99\u306b\u6bdb\u304c\u751f\u3048\u305f\u3088\u3046\u306a\u4f55\u304b\u3067\u3042\u308b\u3002\n\u3044\u3061\u304a\u3046\u3053\u306e\u30b3\u30fc\u30c9\u306fVisual C++ 2013\u306ex64\u5411\u3051\u30d3\u30eb\u30c9\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u306f /Ox /arch:AVX2 \u306a\u3069\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3063\u3066\u3044\u308b\u3002gcc\u3084clang\u3067\u306f\u3069\u3053\u304b\u3057\u3089\u66f8\u304d\u76f4\u3057\u304c\u5fc5\u8981\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u3082\u3061\u308d\u3093\u52d5\u4f5c\u306b\u306fAVX2\u306b\u5bfe\u5fdc\u3057\u305f64\u30d3\u30c3\u30c8x86\u30d7\u30ed\u30bb\u30c3\u30b5\u304c\u5fc5\u8981\u3060\u3002\n\nAVX2\u3092\u4f7f\u3063\u305f\u30eb\u30fc\u30c1\u30f3\u306f2\u30d0\u30fc\u30b8\u30e7\u30f3\u3042\u308b\u304c\u3001\u4e00\u65b9\u306fHacker's Delight\u306b\u3082\u66f8\u304b\u308c\u3066\u3044\u308b\u5206\u5272\u7d71\u6cbb\u6cd5(\u203b1)\u306b\u3088\u308b\u30d3\u30c3\u30c8\u6570\u3048\u4e0a\u3052\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3057\u3064\u3064\u3001\u5f8c\u534a\u306e\u51e6\u7406\u3092vpsadbw\u3067\u4e00\u6c17\u306b\u7e2e\u7d04\u3059\u308b\u3088\u3046\u306b\u6539\u826f\u3057\u305f\u3082\u306e\u3060\u3002\n\u30bd\u30d5\u30c8\u5b9f\u88c5\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u81ea\u4f53\u306f\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3001SIMD\u547d\u4ee4\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u306b\u7c21\u5358\u306b\u9069\u7528\u3067\u304d\u308b\u3002\n\n\u203b1) \u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f10\u5e74\u4ee5\u4e0a\u524d\u306b\u4e2d\u6751\u5b9f\u6c0f\u306e\u65e5\u8a18\u306b\u3066\u77e5\u3063\u305f\u3082\u306e\u3002\n\n* http://www.nminoru.jp/~nminoru/programming/bitcount.html\n\n\n\u3082\u3046\u4e00\u65b9\u306f\u3001\u3044\u308f\u3086\u308b\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3067\u30014\u30d3\u30c3\u30c8\u5206\u306e\u30d3\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u5024\u3092\u30c6\u30fc\u30d6\u30eb\u5316\u3057\u305f\u3082\u306e\u3092YMM\u30ec\u30b8\u30b9\u30bf\u306e\u4e0a\u4e0b\u306b\u5c55\u958b\u3057\u3001vpshufb\u3092\u3082\u3061\u3044\u3066\u4e26\u5217\u306b\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u3055\u305b\u308b\u3053\u3068\u3067\u300132\u4e26\u5217\u30674\u30d3\u30c3\u30c8\u5024\u306e\u30d3\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u5024\u3092\u6c42\u3081\u3066\u3044\u308b\u30021\u30d0\u30a4\u30c8\u3054\u3068\u306b\u4e0a\u4e0b4\u30d3\u30c3\u30c8\u306b\u5206\u5272\u3057\u3066\u51e6\u7406\u3059\u308b\u306e\u3067\u305d\u308c\u304c2\u56de\u3068\u3001\u3042\u3068\u306f\u305d\u306e\u5024\u3092\u8db3\u3057\u7b97\u3057\u3066vpsadbw\u3067\u7e2e\u7d04\u3060\u3002\n\u524d\u8005\u3088\u308a\u547d\u4ee4\u6570\u306f\u304b\u306a\u308a\u6e1b\u3063\u3066\u3044\u308b\u3002\n\n\n```cpp\n#include <immintrin.h>\n#include <iostream>\n#include <cstdint>\n#include <ctime>     // for clock()\n\nusing namespace std;\nuint64_t F_popcnt64(uint64_t n)\n{\n\tuint64_t sum = 0;\n\tfor (uint64_t i = 1; i <= n; i++) {\n\t\tsum += _mm_popcnt_u64(i);\n\t}\n\treturn sum;\n}\n\nuint64_t F_AVX2(uint64_t n)\n{\n\t__m256i vk = _mm256_set_epi64x(1, 2, 3, 4);\n\t__m256i vsum = _mm256_setzero_si256();\n\n\tconst __m256i vzero = _mm256_setzero_si256();\n\tconst __m256i mask55 = _mm256_set1_epi8(0x55);\n\tconst __m256i mask33 = _mm256_set1_epi8(0x33);\n\tconst __m256i mask0F = _mm256_set1_epi8(0x0F);\n\n\tconst uint64_t step = 4;\n\tconst __m256i vstep = _mm256_set1_epi64x(step);\n\n\tuint64_t i;\n\tfor (i = 0; i < (n & ~(step - 1)); i += step) {\n\t\t__m256i a = _mm256_and_si256(vk, mask55);\n\t\t__m256i b = _mm256_srli_epi32(vk, 1);\n\t\tb = _mm256_and_si256(b, mask55);\n\t\ta = _mm256_add_epi32(a, b);\n\t\tb = _mm256_srli_epi32(a, 2);\n\t\tb = _mm256_and_si256(b, mask33);\n\t\ta = _mm256_and_si256(a, mask33);\n\t\ta = _mm256_add_epi32(a, b);\n\t\tb = _mm256_srli_epi32(a, 4);\n\t\ta = _mm256_add_epi32(a, b);\n\t\ta = _mm256_and_si256(a, mask0F);\n\t\ta = _mm256_sad_epu8(a, vzero);\n\t\tvsum = _mm256_add_epi64(vsum, a);\n\t\tvk = _mm256_add_epi64(vk, vstep);\n\t}\n\t__m128i vsum2 = _mm_add_epi64(\n\t\t_mm256_castsi256_si128(vsum),\n\t\t_mm256_extracti128_si256(vsum, 1)\n\t);\n\tvsum2 = _mm_add_epi64(vsum2, _mm_srli_si128(vsum2, 8));\n\tuint64_t sum = _mm_cvtsi128_si64(vsum2);\n\n\tfor (; i < n; i++) {\n\t\tsum += _mm_popcnt_u64(i + 1);\n\t}\n\treturn sum;\n}\n\nuint64_t F_AVX2_v2(uint64_t n)\n{\n\t__m256i vk = _mm256_set_epi64x(1, 2, 3, 4);\n\t__m256i vsum = _mm256_setzero_si256();\n\n\tconst __m256i vzero = _mm256_setzero_si256();\n\tconst __m256i vmask = _mm256_set1_epi8(0xF);\n\tconst __m256i vpop = _mm256_setr_epi8(\n\t\t0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,\n\t\t0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4\n\t);\n\n\tconst uint64_t step = 4;\n\tconst __m256i vstep = _mm256_set1_epi64x(step);\n\n\tuint64_t i;\n\tfor (i = 0; i < (n & ~(step - 1)); i += step) {\n\t\t__m256i a = _mm256_and_si256(vk, vmask);\n\t\t__m256i b = _mm256_srli_epi32(vk, 4);\n\t\tb = _mm256_and_si256(b, vmask);\n\t\ta = _mm256_shuffle_epi8(vpop, a);\n\t\tb = _mm256_shuffle_epi8(vpop, b);\n\t\ta = _mm256_add_epi8(a, b);\n\t\ta = _mm256_sad_epu8(a, vzero);\n\t\tvsum = _mm256_add_epi64(vsum, a);\n\t\tvk = _mm256_add_epi64(vk, vstep);\n\t}\n\t__m128i vsum2 = _mm_add_epi64(\n\t\t_mm256_castsi256_si128(vsum),\n\t\t_mm256_extracti128_si256(vsum, 1)\n\t);\n\tvsum2 = _mm_add_epi64(vsum2, _mm_srli_si128(vsum2, 8));\n\tuint64_t sum = _mm_cvtsi128_si64(vsum2);\n\n\tfor (; i < n; i++) {\n\t\tsum += _mm_popcnt_u64(i + 1);\n\t}\n\treturn sum;\n}\n\n\nint main(void) {\n\tclock_t start;\n\n\tcout << \"[popcnt64]\" << endl;\n\tstart = clock();\n\tcout << \"F(10^10) = \" <<  F_popcnt64(10000000000) << endl;\n\tcout << \"duration = \" << (double)(clock() - start) / CLOCKS_PER_SEC << \"sec.\" << endl;\n\t\n\tcout << \"[AVX2 ver.1]\" << endl;\n\tstart = clock();\n\tcout << \"F(10^10) = \" <<  F_AVX2(10000000000) << endl;\n\tcout << \"duration = \" << (double)(clock() - start) / CLOCKS_PER_SEC << \"sec.\" << endl;\n\n\tcout << \"[AVX2 ver.2]\" << endl;\n\tstart = clock();\n\tcout << \"F(10^10) = \" << F_AVX2_v2(10000000000) << endl;\n\tcout << \"duration = \" << (double)(clock() - start) / CLOCKS_PER_SEC << \"sec.\" << endl;\n\t\n\treturn 0;\n}\n```\n\n\u4fbf\u5b9c\u4e0a\u30014\u306e\u500d\u6570\u5358\u4f4d\u304b\u3089\u3042\u3075\u308c\u305f\u5206\u306fpopcnt\u3067\u51e6\u7406\u3057\u3066\u3044\u308b\u3002\u305d\u306e\u307b\u3046\u304c\u697d\u3060\u304b\u3089\u3060\u3002\n\n\u3057\u304b\u3057\u3001AVX2\u306e\u30b3\u30fc\u30c9\u306e\u3044\u305a\u308c\u3082\u3001\u898b\u305f\u76ee\u304b\u3089\u306f\u3069\u3046\u3082\u901f\u3044\u3088\u3046\u306b\u306f\u898b\u3048\u306a\u3044\u3002\n\u300c4\u4e26\u5217\u3067\u51e6\u7406\u3059\u308b\u304b\u30894\u500d\u901f\u304f\u306a\u308b\u306f\u305a\u3060\uff01\u300d\u3063\u3066\u306e\u306fpopcnt\u30924\u4e26\u5217\u3067\u3059\u308b\u547d\u4ee4\u304c\u3042\u308b\u5834\u5408\u3067\u3042\u3063\u30664\u500d\u306e\u4e26\u5217\u5ea6\u3067\u51e6\u7406\u3067\u304d\u3066\u3082\u30eb\u30fc\u30d7\u306e1\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306b4\u500d\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3063\u3066\u306f\u7d50\u679c\u7684\u306b\u4f55\u306e\u610f\u5473\u3082\u306a\u3044\u3002\n\u305d\u306e\u610f\u5473\u3067\u3001\u547d\u4ee4\u6570\u304c\u304b\u306a\u308a\u5897\u3048\u3066\u3057\u307e\u3063\u305f\u306e\u306f\u3069\u3046\u3082\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3060\u3002\n\n## \u3060\u304c\u305d\u306e\u7d50\u679c\u306f\u30fb\u30fb\u30fb\n\n\u30b3\u30fc\u30c9\u306e\u898b\u305f\u76ee\u306fpopcnt\u306e\u307b\u3046\u304c\u901f\u305d\u3046\u306b\u898b\u3048\u308b\u306e\u3060\u304c\u3001AVX2\u7248\u306e\u30eb\u30fc\u30c1\u30f3\u304c\u3044\u305a\u308c\u30822\u500d\u306a\u3044\u30573\u500d\u4ee5\u4e0a\u901f\u3044\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u3063\u305f\u3002\n\n```\n[popcnt64]\nF(10^10) = 164293127179\nduration = 12.69sec.\n[AVX2 ver.1]\nF(10^10) = 164293127179\nduration = 5.704sec.\n[AVX2 ver.2]\nF(10^10) = 164293127179\nduration = 3.845sec.\n```\n\n\u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f\u306e\u304b\u3068\u3044\u3046\u3068\u3001popcnt\u306f\u547d\u4ee4\u3092\u767a\u884c\u3067\u304d\u308b\u30e6\u30cb\u30c3\u30c8\u304c1\u3064\u306e\u30b3\u30a2\u306b1\u3064\u3057\u304b\u306a\u304f\u30011\u30af\u30ed\u30c3\u30af\u306b1\u547d\u4ee4\u3057\u304b\u767a\u884c\u3067\u304d\u306a\u3044\u306e\u3060\u3002\u3064\u307e\u308a\u3069\u308c\u3060\u3051\u6700\u9069\u5316\u3092\u9811\u5f35\u3063\u3066\u3082\u30d1\u30e9\u30e1\u30fc\u30bfn\u306e\u56de\u6570\u5206\u306e\u30af\u30ed\u30c3\u30af\u306f\u6700\u4f4e\u3067\u3082\u8981\u3057\u3066\u3057\u307e\u3046\u3002\n\u4e00\u65b9AVX2\u306e\u30eb\u30fc\u30c1\u30f3\u3060\u304c\u3001Haswell\u306f1\u30af\u30ed\u30c3\u30af\u306b\u6700\u59274\u547d\u4ee4\u767a\u884c\u3067\u304d\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u4e26\u5217\u52d5\u4f5c\u53ef\u80fd\u306a\u547d\u4ee4\u304c\u3042\u308c\u30701\u30af\u30ed\u30c3\u30af\u306b3\uff5e4\u547d\u4ee4\u767a\u884c\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3060\u3002\n\u304a\u305d\u3089\u304f\u305d\u306e\u3078\u3093\u304c\u3046\u307e\u304f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u4e26\u5217\u51e6\u7406\u3055\u308c\u3001\u5897\u3048\u305f\u547d\u4ee4\u6570\u304c\u30da\u30a4\u3067\u304d\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u3002\n\n## \u3067\u3001\u7d50\u5c40\u3053\u308c\u306e\u5b9f\u7528\u6027\u3063\u3066\u3069\u3046\u3088\uff1f\n\n\u7121\u8ad6\u3001\u3042\u3061\u3089\u306e\u30d3\u30c3\u30c8\u6570\u3048\u4e0a\u3052\u30eb\u30fc\u30c1\u30f3\u304c\u307b\u307c\u4e00\u77ac\u3067\u7b54\u3048\u304c\u51fa\u3066\u3044\u305f\u306e\u3068\u6bd4\u3079\u308c\u3070\u3001\u8a71\u306b\u306a\u3089\u306a\u3044\u304f\u3089\u3044\u9045\u3044\u3068\u8a00\u308f\u3056\u308b\u3092\u3048\u306a\u3044\u3060\u308d\u3046\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u3042\u3061\u3089\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u6574\u6570\u5024\u304c\u898f\u5247\u7684\u306b1\u305a\u3064\u5897\u3048\u308b\u5834\u5408\u306b\u304b\u9069\u7528\u3067\u304d\u306a\u3044\u3002\n\n\u3053\u3063\u3061\u306f\u3069\u3093\u306a\u4e0d\u898f\u5247\u306a\u30d3\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u3067\u3082\u9ad8\u901f\u306b\u30ab\u30a6\u30f3\u30c8\u3067\u304d\u308b\u65b9\u6cd5\u306a\u306e\u3067\u5229\u7528\u7bc4\u56f2\u306f\u5e83\u3044\u3068\u3044\u3048\u3070\u5e83\u3044\u3060\u308d\u3046\u3002\n\u307e\u3042\u3001\u5177\u4f53\u7684\u306b\u3069\u3093\u306a\u7528\u9014\u3067\u6709\u7528\u304b\u306f\u3001\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u304c\u3002\n\n\n## (\u8ffd\u8a18)\n\n\u7406\u8ad6\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u8003\u3048\u3066\u307f\u305f\u3089\u901a\u5e38\u306epopcnt\u304c\u3042\u307e\u308a\u306b\u9045\u3059\u304e\u308b\u3060\u308d\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u30eb\u30fc\u30d7\u30a2\u30f3\u30ed\u30fc\u30eb\u3057\u3066\u307f\u305f\u306e\u304c\u3053\u308c\u3002\n\n```cpp\nuint64_t F_popcnt64_v2(uint64_t n)\n{\n\tuint64_t i;\n\tuint64_t step = 4;\n\tuint64_t sum = 0, sum1 = 0, sum2 = 0, sum3 = 0, sum4 = 0;\n\tfor (i = 1; i <= (n & ~(step - 1)); i += step) {\n\t\tsum1 += _mm_popcnt_u64(i);\n\t\tsum2 += _mm_popcnt_u64(i+1);\n\t\tsum3 += _mm_popcnt_u64(i+2);\n\t\tsum4 += _mm_popcnt_u64(i+3);\n\t}\n\tsum = sum1 + sum2 + sum3 + sum4;\n\tfor (; i <= n; i++) {\n\t\tsum += _mm_popcnt_u64(i);\n\t}\n\treturn sum;\n}\n```\n\n\u305d\u306e\u7d50\u679c\u3002\n\n```\n[popcnt64]\nF(10^10) = 164293127179\nduration = 12.987sec.\n[popcnt64 ver.2]\nF(10^10) = 164293127179\nduration = 6.708sec.\n[AVX2 ver.1]\nF(10^10) = 164293127179\nduration = 6.067sec.\n[AVX2 ver.2]\nF(10^10) = 164293127179\nduration = 3.985sec.\n```\n\n\u305d\u308c\u307b\u3069\u5927\u5dee\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\n\n\u307e\u3042\u3001\u3053\u308c\u306b\u3064\u3044\u3066\u306e\u611f\u60f3\u306f\u4eba\u305d\u308c\u305e\u308c\u3060\u308d\u3046\u3002\n\u30d3\u30c3\u30c8\u306e\u6570\u3048\u4e0a\u3052\u300c\u306e\u307f\u300d\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306f\u5272\u3068\u7a00\u3067\u3001\u307b\u304b\u306e\u547d\u4ee4\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u30011\u6574\u6570\u306e\u6570\u3048\u4e0a\u3052\u306b1\u30b5\u30a4\u30af\u30eb\u30fb1\u6f14\u7b97\u30e6\u30cb\u30c3\u30c8\u3057\u304b\u4f7f\u308f\u306a\u3044\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5b9f\u88c5\u306epopcnt\u306e\u610f\u5473\u306f\u5927\u304d\u3044\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n", "tags": ["C++", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "x86", "AVX"]}