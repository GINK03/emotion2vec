{"context": " More than 1 year has passed since last update.\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306b\u65b0\u6a5f\u80fd\u304c\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306e\u65b0\u6a5f\u80fd\u306f\u3001\n\n Implicit closure coercion\n @Memoized AST transformation for methods\n Bintray's JCenter repository \n Define base script classes with an annotation\n New DelegatingScript base class for scripts\n New @Log variant for the Log4j2 logging framework\n @DelegatesTo with generics type tokens\n Precompiled type checking extensions\n Groovysh enhancements\n OSGi manifests for the \u201cinvoke dynamic\u201d JARs\n\n\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u30011\u3064\u305a\u3064\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nImplicit closure coercion\n\u30af\u30ed\u30fc\u30b8\u30e3\u304c\u6697\u9ed9\u7684\u306b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306a\u3093\u304b\u306b\u5909\u63db\u3055\u308c\u308b\u3063\u3066\u3053\u3068\u3089\u3057\u3044\u3067\u3059\u306d\u3002\n\u9069\u5f53\u306b\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u3088\u3046\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u30012.2.1\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nImplicitClosureCoercion.groovy\n/*\n2.2.x added Implicit closure coercion\n*/\n\ninterface StringFilter{\n  def filter(String source);\n}\n\nclass SemicollonRemover{\n  static String remove(String source,StringFilter filter){\n    filter.filter(source)\n  }\n}\n\nprintln \"I'm Groovy $GroovySystem.version\"\nprintln SemicollonRemover.remove('hello;world;') {s->s.replaceAll(';','')}\n\n\n\nOut\nI'm Groovy 2.2.1\nhelloworld\n\n\n\u901a\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001\u540c\u69d8\u306e\u3053\u3068\u30922.1.x\u3067\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001\nprintln SemicollonRemover.remove('hello;world;') {s->s.replaceAll(';','')}\n\n\u3053\u306e\u90e8\u5206\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nprintln SemicollonRemover.remove('hello;world;' , {s->s.replaceAll(';','')} as StringFilter)\n\n\u306a\u3093\u3068\u306a\u304f\u66f8\u304d\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u306d\u3002\n\u6b21\u56de\u306f\u3001@Memoized AST transformation for methods\u3067\u3059\u3002\n\u3068\u3046\u3084\u3089\u30e1\u30e2\u5316\u3092\u3057\u3066\u304f\u308c\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3088\u3046\u3067\u3059\u306d\u3002\n[\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8](http://groovy.codehaus.org/Groovy+2.2+release+notes)\u306b\u65b0\u6a5f\u80fd\u304c\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u65b0\u6a5f\u80fd\u306f\u3001\n\n-  Implicit closure coercion\n-  @Memoized AST transformation for methods\n-  Bintray's JCenter repository \n-  Define base script classes with an annotation\n-  New DelegatingScript base class for scripts\n-  New @Log variant for the Log4j2 logging framework\n-  @DelegatesTo with generics type tokens\n-  Precompiled type checking extensions\n-  Groovysh enhancements\n-  OSGi manifests for the \u201cinvoke dynamic\u201d JARs\n\n\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u30011\u3064\u305a\u3064\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## Implicit closure coercion\n\n\u30af\u30ed\u30fc\u30b8\u30e3\u304c\u6697\u9ed9\u7684\u306b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306a\u3093\u304b\u306b\u5909\u63db\u3055\u308c\u308b\u3063\u3066\u3053\u3068\u3089\u3057\u3044\u3067\u3059\u306d\u3002\n\n\u9069\u5f53\u306b\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u3088\u3046\u3002\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u30012.2.1\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```Groovy:ImplicitClosureCoercion.groovy\n/*\n2.2.x added Implicit closure coercion\n*/\n\ninterface StringFilter{\n  def filter(String source);\n}\n\nclass SemicollonRemover{\n  static String remove(String source,StringFilter filter){\n    filter.filter(source)\n  }\n}\n\nprintln \"I'm Groovy $GroovySystem.version\"\nprintln SemicollonRemover.remove('hello;world;') {s->s.replaceAll(';','')}\n```\n\n```text:Out\nI'm Groovy 2.2.1\nhelloworld\n```\n\n\u901a\u308a\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u540c\u69d8\u306e\u3053\u3068\u30922.1.x\u3067\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001\n\n```Groovy\nprintln SemicollonRemover.remove('hello;world;') {s->s.replaceAll(';','')}\n```\n\n\u3053\u306e\u90e8\u5206\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```Groovy\nprintln SemicollonRemover.remove('hello;world;' , {s->s.replaceAll(';','')} as StringFilter)\n```\n\n\u306a\u3093\u3068\u306a\u304f\u66f8\u304d\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u306d\u3002\n\n\u6b21\u56de\u306f\u3001@Memoized AST transformation for methods\u3067\u3059\u3002\n\n\u3068\u3046\u3084\u3089\u30e1\u30e2\u5316\u3092\u3057\u3066\u304f\u308c\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3088\u3046\u3067\u3059\u306d\u3002", "tags": ["Groovy2.2.1"]}