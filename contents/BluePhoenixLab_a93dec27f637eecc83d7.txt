{"tags": ["golang", "XML", "Parser"], "context": "\n\n\u80cc\u666f\ngolang\u3067\u6a19\u6e96\u306e encoding/xml \u3092\u4f7f\u3063\u305fXML\u30d1\u30fc\u30b9\u3092\u3059\u308b\u65b9\u6cd5\u306f\u6570\u591a\u306eHowTo\u8a18\u4e8b\u304c\u5b58\u5728\u3057\u307e\u3059\u304c\u3001\u4ed5\u4e8b\u3067\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3057\u304b\u306a\u3044XML\u306b\u51fa\u304f\u308f\u3057\u3001\u3053\u308c\u306e\u30d1\u30fc\u30b9\u306b\u3061\u3087\u3063\u3068\u60a9\u3093\u3060\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u6b8b\u3057\u307e\u3059\u3002\n\n\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3057\u304b\u306a\u3044XML\n\u3053\u3093\u306a\u3084\u3064\u3067\u3059\u3002\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  example\n</root>\n\n\u81ea\u5206\u3068\u3057\u3066\u306f\u3001\u666e\u901a\u306bAPI\u4f5c\u3063\u305f\u308a\u30c7\u30fc\u30bf\u4f5c\u308b\u3068\u304d\u306b\u3053\u3093\u306a\u69cb\u9020\u306b\u3059\u308b\u3053\u3068\u306f\u307e\u305a\u7121\u3044\u3067\u3059\u304c\u3001\u66f8\u304d\u65b9\u3068\u3057\u3066\u8a31\u3055\u308c\u3066\u3044\u308b\u4ee5\u4e0a\u3001\u8d64\u306e\u4ed6\u4eba\u306f\u3053\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3042\u308b\u3068\u601d\u3063\u3066\u304a\u304b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\nencoding/xml \u306b\u3088\u308b\u30d1\u30fc\u30b9\u306e\u4f8b\npackage main\n\nimport (\n        \"encoding/xml\"\n        \"fmt\"\n)\n\n// User is sample struct\ntype User struct {\n        ID   string `xml:\"id\"`\n        User string `xml:\"user\"`\n}\n\nfunc main() {\n        xmlStr := `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <id>5ec8da0a-6e23-4343-b474-ca0bb5c22a51</id>\n  <user>hoge</user>\n</root>\n`\n\n        data := new(User)\n        if err := xml.Unmarshal([]byte(xmlStr), data); err != nil {\n                fmt.Println(\"XML Unmarshal error: \", err)\n                return\n        }\n        fmt.Println(*data)\n}\n\n$ go run main.go\n{5ec8da0a-6e23-4343-b474-ca0bb5c22a51 hoge}\n\n\u5927\u3057\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002struct\u3092filed\u306btag\u3092\u6307\u5b9a\u3057\u3064\u3064\u5b9a\u7fa9\u3057\u3066\u3001XML\u6587\u5b57\u5217\u3068struct\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6307\u5b9a\u3057\u3066 xml.Unmarshal \u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3057\u304b\u306a\u3044XML\u306e\u30d1\u30fc\u30b9\n\u3068\u3053\u308d\u304c\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3057\u304b\u306a\u3044\u5834\u5408\u3001struct\u306b\u3069\u3093\u306afield\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3044\u3044\u306e\u3084\u3089\u3055\u3063\u3071\u308a\u3067\u3057\u305f\u3002\n\u3082\u3057\u304b\u3057\u3066\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u3089\u51fa\u6765\u3061\u3083\u3063\u305f\u7d50\u679c\u304c\u4ee5\u4e0b\u306a\u306e\u3067\u3059\u304c\u3001\u3088\u3046\u306f\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u5185\u304c\u69cb\u9020\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3060\u304b\u3089\u3001\u6307\u5b9a\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u3082\u30d7\u30ea\u30bb\u30c3\u30c8\u306e\u578b\u3092\u6307\u5b9a\u3059\u308c\u3070\u826f\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\u6ce8\u610f\u3068\u3057\u3066\u306f\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u5185\u5168\u3066\u3092\u6587\u5b57\u5217\u3068\u3057\u3066 xml.Unmarshal \u3057\u3088\u3046\u3068\u3059\u308b\u306e\u3067\u3001\u524d\u5f8c\u306b\u6539\u884c\u3068\u304b\u7a7a\u767d\u304c\u3042\u3063\u305f\u3089\u305d\u308c\u6bce\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u305d\u306e\u5834\u5408\u306f int \u3068\u304b\u306b\u306f\u30d1\u30fc\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\npackage main\n\nimport (\n        \"encoding/xml\"\n        \"fmt\"\n)\n\nfunc main() {\n        xmlStr := `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>example</root>\n`\n\n        data := new(string)\n        if err := xml.Unmarshal([]byte(xmlStr), data); err != nil {\n                fmt.Println(\"XML Unmarshal error:\", err)\n                return\n        }\n        fmt.Println(*data)\n}\n\n$ go run main.go\nexample\n\n# \u80cc\u666f\n\ngolang\u3067\u6a19\u6e96\u306e `encoding/xml` \u3092\u4f7f\u3063\u305fXML\u30d1\u30fc\u30b9\u3092\u3059\u308b\u65b9\u6cd5\u306f\u6570\u591a\u306eHowTo\u8a18\u4e8b\u304c\u5b58\u5728\u3057\u307e\u3059\u304c\u3001\u4ed5\u4e8b\u3067\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3057\u304b\u306a\u3044XML\u306b\u51fa\u304f\u308f\u3057\u3001\u3053\u308c\u306e\u30d1\u30fc\u30b9\u306b\u3061\u3087\u3063\u3068\u60a9\u3093\u3060\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u6b8b\u3057\u307e\u3059\u3002\n\n# \u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3057\u304b\u306a\u3044XML\n\n\u3053\u3093\u306a\u3084\u3064\u3067\u3059\u3002\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  example\n</root>\n```\n\n\u81ea\u5206\u3068\u3057\u3066\u306f\u3001\u666e\u901a\u306bAPI\u4f5c\u3063\u305f\u308a\u30c7\u30fc\u30bf\u4f5c\u308b\u3068\u304d\u306b\u3053\u3093\u306a\u69cb\u9020\u306b\u3059\u308b\u3053\u3068\u306f\u307e\u305a\u7121\u3044\u3067\u3059\u304c\u3001\u66f8\u304d\u65b9\u3068\u3057\u3066\u8a31\u3055\u308c\u3066\u3044\u308b\u4ee5\u4e0a\u3001\u8d64\u306e\u4ed6\u4eba\u306f\u3053\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3042\u308b\u3068\u601d\u3063\u3066\u304a\u304b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n# `encoding/xml` \u306b\u3088\u308b\u30d1\u30fc\u30b9\u306e\u4f8b\n\n```go\npackage main\n\nimport (\n        \"encoding/xml\"\n        \"fmt\"\n)\n\n// User is sample struct\ntype User struct {\n        ID   string `xml:\"id\"`\n        User string `xml:\"user\"`\n}\n\nfunc main() {\n        xmlStr := `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <id>5ec8da0a-6e23-4343-b474-ca0bb5c22a51</id>\n  <user>hoge</user>\n</root>\n`\n\n        data := new(User)\n        if err := xml.Unmarshal([]byte(xmlStr), data); err != nil {\n                fmt.Println(\"XML Unmarshal error: \", err)\n                return\n        }\n        fmt.Println(*data)\n}\n```\n\n```bash\n$ go run main.go\n{5ec8da0a-6e23-4343-b474-ca0bb5c22a51 hoge}\n```\n\n\u5927\u3057\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002struct\u3092filed\u306btag\u3092\u6307\u5b9a\u3057\u3064\u3064\u5b9a\u7fa9\u3057\u3066\u3001XML\u6587\u5b57\u5217\u3068struct\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6307\u5b9a\u3057\u3066 `xml.Unmarshal` \u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n# \u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3057\u304b\u306a\u3044XML\u306e\u30d1\u30fc\u30b9\n\n\u3068\u3053\u308d\u304c\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3057\u304b\u306a\u3044\u5834\u5408\u3001struct\u306b\u3069\u3093\u306afield\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3044\u3044\u306e\u3084\u3089\u3055\u3063\u3071\u308a\u3067\u3057\u305f\u3002\n\u3082\u3057\u304b\u3057\u3066\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u3089\u51fa\u6765\u3061\u3083\u3063\u305f\u7d50\u679c\u304c\u4ee5\u4e0b\u306a\u306e\u3067\u3059\u304c\u3001\u3088\u3046\u306f\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u5185\u304c\u69cb\u9020\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3060\u304b\u3089\u3001\u6307\u5b9a\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u3082\u30d7\u30ea\u30bb\u30c3\u30c8\u306e\u578b\u3092\u6307\u5b9a\u3059\u308c\u3070\u826f\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\u6ce8\u610f\u3068\u3057\u3066\u306f\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u5185\u5168\u3066\u3092\u6587\u5b57\u5217\u3068\u3057\u3066 `xml.Unmarshal` \u3057\u3088\u3046\u3068\u3059\u308b\u306e\u3067\u3001\u524d\u5f8c\u306b\u6539\u884c\u3068\u304b\u7a7a\u767d\u304c\u3042\u3063\u305f\u3089\u305d\u308c\u6bce\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u305d\u306e\u5834\u5408\u306f `int` \u3068\u304b\u306b\u306f\u30d1\u30fc\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\n\n```go\npackage main\n\nimport (\n        \"encoding/xml\"\n        \"fmt\"\n)\n\nfunc main() {\n        xmlStr := `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>example</root>\n`\n\n        data := new(string)\n        if err := xml.Unmarshal([]byte(xmlStr), data); err != nil {\n                fmt.Println(\"XML Unmarshal error:\", err)\n                return\n        }\n        fmt.Println(*data)\n}\n```\n\n```bash\n$ go run main.go\nexample\n```\n"}