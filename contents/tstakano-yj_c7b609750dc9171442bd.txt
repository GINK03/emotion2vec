{"context": "GYAO\u306ets\u3067\u3059\u3002\n\u6211\u3005\u306e\u30c1\u30fc\u30e0\u306f\u3001\u30aa\u30fc\u30eb\u30d1\u30d6\u30ea\u30c3\u30af\u30af\u30e9\u30a6\u30c9\u3067\u3001Microservice Architecture\u3092\u63a1\u7528\u3057\u305f\u6b21\u671f\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u8a2d\u8a08\u4e2d\u3067\u3059\u3002\n\n\u7d4c\u7def\n\u524d\u56de\u306e\u6295\u7a3f\u3067json\u3092Blob\u30b3\u30f3\u30c6\u30ca\u306b\u7528\u610f\u3057\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u305d\u308c\u3092\u53d6\u308a\u8fbc\u3093\u3067\u30011\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u305a\u3064Servicebus\u306bpublish\u3059\u308b\u3002\u307e\u305f\u3001\u5225\u306efunction\u3067\u305d\u308c\u3092subscribe\u3057\u3001DocumentDB\u306bstore\u3059\u308b\u3002\n\njson\uff1atestLines.json\n{ \"original_id\" : \"1\", \"b\":false , \"c\":0 , \"d\":1 , \"e\":2 , \"f\":0.345 , \"g\":\"\u3042\" , \"h\":\"\u3044\" }\n{ \"original_id\" : \"2\", \"b\":false , \"c\":0 , \"d\":1 , \"e\":2 , \"f\":0.345 , \"g\":\"\u3042\" , \"h\":\"\u3044\" }\n{ \"original_id\" : \"3\", \"b\":false , \"c\":0 , \"d\":1 , \"e\":2 , \"f\":0.345 , \"g\":\"\u3042\" , \"h\":\"\u3044\" }\n\n\n\nservicebus\u306e\u6e96\u5099\n\ntopic\u306f\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\nAzureFunctions(publish)\n\u4eca\u56de\u306f\u8a00\u8a9e\u306fC#\u3067\u3044\u304f\u3002\u7406\u7531\u306f\u4e00\u756a\u3067\u304d\u308b\u3053\u3068\u304c\u591a\u3044\u304b\u3089\u3002\u305d\u306e\u7406\u7531\u3067\u884c\u304f\u3068\u3001\n\u9078\u629e\u80a2\u306fC#, js, F#\u304b\u306a\u3002\n\n\u7d71\u5408\n\n\u5f53\u7136input\u306fblob\u3001output\u306fDocumentDB\u3002\n\nNuGet\n\u30d5\u30a1\u30a4\u30eb\u30921\u884c1\u884c\u8aad\u3080\u306e\u306f\u3044\u3044\u304c\u3001\u305d\u308c\u30921\u4ef6\u305a\u3064\u30d1\u30fc\u30b9\u3059\u308b\u3002\n\u697d\u30c1\u30f3\u30d1\u30fc\u30b9\u3059\u308b\u305f\u3081\u306b\u4eca\u56de\u306fJson.NET\u3092\u4f7f\u7528\u3059\u308b\u3002NuGet\u3067install\u3059\u308b\u3002\n\n\u5de6\u4e0b\u306eFunctions APP\u306e\u8a2d\u5b9a\u304b\u3089AppService\u30a8\u30c7\u30a3\u30bf\u30fc\u306b\u79fb\u52d5\u3002\n\nproject.json\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nproject.json\n{\n \"frameworks\": {\n   \"net46\":{\n     \"dependencies\": {\n       \"Newtonsoft.Json\": \"9.0.1\"\n     }\n   }\n }\n}\n\n\nproject.lock.json\u304c\u81ea\u52d5\u3067\u4f5c\u6210\u3055\u308c\u308b\u3002\n\u3053\u308c\u3067install\u5b8c\u4e86\u3002\n\n\u958b\u767a\nusing System.IO;\nusing System.Text;\nusing Newtonsoft.Json;\n\npublic static void Run(string myBlob, string name, Stream inputBlob, ICollector<string> outputSbMsg, TraceWriter log)\n{\n    log.Info($\"C# Blob trigger function Processed blob\\n Name:{name} \\n Size: {myBlob.Length} Bytes\");\n    StreamReader reader = new StreamReader(inputBlob, Encoding.UTF8);\n    string line;\n    while ((line = reader.ReadLine()) != null)\n    {\n        Item item = JsonConvert.DeserializeObject<Item>(line);\n        string id = item.Id;\n        if (String.IsNullOrEmpty(id)) {\n            outputSbMsg.Add(line);\n        }\n        else {\n            log.Info(\"can't accept id.\");\n        }\n    }\n    reader.Close();\n}\n\npublic class Item\n{\n    [JsonProperty(\"id\")]\n    public string Id { get; set; }\n}\n\n\nAzureFunctions(subscribe)\n\u3053\u3063\u3061\u306f\u304b\u306a\u308a\u30b7\u30f3\u30d7\u30eb\n\n\u7d71\u5408\n\n\n\u958b\u767a\nusing System;\nusing System.Threading.Tasks;\n\npublic static void Run(string mySbMsg, out object outputDocument, TraceWriter log)\n{\n    // log.Info($\"C# ServiceBus topic trigger function processed message: {mySbMsg}\");\n    outputDocument = mySbMsg;\n}\n\n\n\u6b21\u56de\n\u4ee5\u4e0a\u3067Blob\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u30c8\u30ea\u30ac\u3067DocumentDB\u3078\u306e\u4fdd\u5b58\u307e\u3067\u304c\u5b8c\u4e86\u3002\nServicebus\u306etopic\u3092\u901a\u3057\u3066\u3042\u308b\u306e\u3067\u3001subscriber\u3092\u65b0\u305f\u306b\u5897\u3084\u3059\u3053\u3068\u3067\u540c\u3058\u30c7\u30fc\u30bf\u304c\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u308b\u5229\u70b9\u306f\u3042\u308b\u3002\n\u6b21\u56de\u306fMachineLearning\u3068\u9023\u643a\u3057\u3066\u307f\u308b\u3002\nGYAO\u306ets\u3067\u3059\u3002\n\u6211\u3005\u306e\u30c1\u30fc\u30e0\u306f\u3001\u30aa\u30fc\u30eb\u30d1\u30d6\u30ea\u30c3\u30af\u30af\u30e9\u30a6\u30c9\u3067\u3001[Microservice Architecture](http://microservices.io/patterns/microservices.html)\u3092\u63a1\u7528\u3057\u305f\u6b21\u671f\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u8a2d\u8a08\u4e2d\u3067\u3059\u3002\n\n# \u7d4c\u7def\n[\u524d\u56de](http://qiita.com/tstakano-yj/items/624c81e4aa28820c350d)\u306e\u6295\u7a3f\u3067json\u3092Blob\u30b3\u30f3\u30c6\u30ca\u306b\u7528\u610f\u3057\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u305d\u308c\u3092\u53d6\u308a\u8fbc\u3093\u3067\u30011\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u305a\u3064Servicebus\u306bpublish\u3059\u308b\u3002\u307e\u305f\u3001\u5225\u306efunction\u3067\u305d\u308c\u3092subscribe\u3057\u3001DocumentDB\u306bstore\u3059\u308b\u3002\n\n```json\uff1atestLines.json\n{ \"original_id\" : \"1\", \"b\":false , \"c\":0 , \"d\":1 , \"e\":2 , \"f\":0.345 , \"g\":\"\u3042\" , \"h\":\"\u3044\" }\n{ \"original_id\" : \"2\", \"b\":false , \"c\":0 , \"d\":1 , \"e\":2 , \"f\":0.345 , \"g\":\"\u3042\" , \"h\":\"\u3044\" }\n{ \"original_id\" : \"3\", \"b\":false , \"c\":0 , \"d\":1 , \"e\":2 , \"f\":0.345 , \"g\":\"\u3042\" , \"h\":\"\u3044\" }\n```\n\n# servicebus\u306e\u6e96\u5099\n<img width=\"579\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-24 17.15.06.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/114329/a8f826e9-8aed-5ce8-a6b0-10289d3b5b3d.png\">\ntopic\u306f\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\n# AzureFunctions(publish)\n\u4eca\u56de\u306f\u8a00\u8a9e\u306fC#\u3067\u3044\u304f\u3002\u7406\u7531\u306f\u4e00\u756a\u3067\u304d\u308b\u3053\u3068\u304c\u591a\u3044\u304b\u3089\u3002\u305d\u306e\u7406\u7531\u3067\u884c\u304f\u3068\u3001\n\u9078\u629e\u80a2\u306fC\\#, js, F\\#\u304b\u306a\u3002\n\n## \u7d71\u5408\n<img width=\"1195\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-24 17.44.10.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/114329/99b0888c-c836-61fc-dd90-41353a71ec4d.png\">\n\u5f53\u7136input\u306fblob\u3001output\u306fDocumentDB\u3002\n\n## NuGet\n\u30d5\u30a1\u30a4\u30eb\u30921\u884c1\u884c\u8aad\u3080\u306e\u306f\u3044\u3044\u304c\u3001\u305d\u308c\u30921\u4ef6\u305a\u3064\u30d1\u30fc\u30b9\u3059\u308b\u3002\n\u697d\u30c1\u30f3\u30d1\u30fc\u30b9\u3059\u308b\u305f\u3081\u306b\u4eca\u56de\u306f[Json.NET](http://www.newtonsoft.com/json)\u3092\u4f7f\u7528\u3059\u308b\u3002NuGet\u3067install\u3059\u308b\u3002\n\n<img width=\"803\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-24 17.54.36.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/114329/cb0e3585-e7b7-c6a8-4876-c7eaa9f0e288.png\">\n\u5de6\u4e0b\u306eFunctions APP\u306e\u8a2d\u5b9a\u304b\u3089AppService\u30a8\u30c7\u30a3\u30bf\u30fc\u306b\u79fb\u52d5\u3002\n<img width=\"241\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-24 17.58.38.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/114329/35ec8708-015e-c011-93bb-3928e837f480.png\">\nproject.json\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```json:project.json\n{\n \"frameworks\": {\n   \"net46\":{\n     \"dependencies\": {\n       \"Newtonsoft.Json\": \"9.0.1\"\n     }\n   }\n }\n}\n```\nproject.lock.json\u304c\u81ea\u52d5\u3067\u4f5c\u6210\u3055\u308c\u308b\u3002\n\u3053\u308c\u3067install\u5b8c\u4e86\u3002\n\n## \u958b\u767a\n```c\nusing System.IO;\nusing System.Text;\nusing Newtonsoft.Json;\n\npublic static void Run(string myBlob, string name, Stream inputBlob, ICollector<string> outputSbMsg, TraceWriter log)\n{\n    log.Info($\"C# Blob trigger function Processed blob\\n Name:{name} \\n Size: {myBlob.Length} Bytes\");\n    StreamReader reader = new StreamReader(inputBlob, Encoding.UTF8);\n    string line;\n    while ((line = reader.ReadLine()) != null)\n    {\n        Item item = JsonConvert.DeserializeObject<Item>(line);\n        string id = item.Id;\n        if (String.IsNullOrEmpty(id)) {\n            outputSbMsg.Add(line);\n        }\n        else {\n            log.Info(\"can't accept id.\");\n        }\n    }\n    reader.Close();\n}\n\npublic class Item\n{\n    [JsonProperty(\"id\")]\n    public string Id { get; set; }\n}\n```\n\n# AzureFunctions(subscribe)\n\u3053\u3063\u3061\u306f\u304b\u306a\u308a\u30b7\u30f3\u30d7\u30eb\n\n## \u7d71\u5408\n<img width=\"920\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-24 18.23.35.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/114329/adb467ba-8973-bf3e-9bdd-38823acd9ab8.png\">\n\n## \u958b\u767a\n```c\nusing System;\nusing System.Threading.Tasks;\n\npublic static void Run(string mySbMsg, out object outputDocument, TraceWriter log)\n{\n    // log.Info($\"C# ServiceBus topic trigger function processed message: {mySbMsg}\");\n    outputDocument = mySbMsg;\n}\n```\n# \u6b21\u56de\n\n\u4ee5\u4e0a\u3067Blob\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u30c8\u30ea\u30ac\u3067DocumentDB\u3078\u306e\u4fdd\u5b58\u307e\u3067\u304c\u5b8c\u4e86\u3002\nServicebus\u306etopic\u3092\u901a\u3057\u3066\u3042\u308b\u306e\u3067\u3001subscriber\u3092\u65b0\u305f\u306b\u5897\u3084\u3059\u3053\u3068\u3067\u540c\u3058\u30c7\u30fc\u30bf\u304c\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u308b\u5229\u70b9\u306f\u3042\u308b\u3002\n\u6b21\u56de\u306fMachineLearning\u3068\u9023\u643a\u3057\u3066\u307f\u308b\u3002\n", "tags": ["Azure", "AzureFunctions", "AzureDocumentDB", "C#", "AzureServicebus"]}