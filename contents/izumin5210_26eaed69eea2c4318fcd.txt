{"context": "\n\nTL;DR\n\n\u6700\u4f4e\u9650\u306e\u30d1\u30e9\u30e1\u30bf\u5f04\u308bUI\u306a\u3089\uff0c\u3084\u306f\u308aImGui\u304c\u6700\u5f37\n\u9811\u5f35\u308c\u3070\u898b\u305f\u76ee\u3082\u305d\u3053\u305d\u3053\u3044\u3044\u611f\u3058\u306b\u3067\u304d\u308b\n\u672c\u6c17\u3067\u6700\u9ad8\u306b\u304b\u3063\u3053\u3044\u3044UI\u3092\u4f5c\u308a\u305f\u3044\u306a\u3089\uff0cImGui\u3060\u3068\u8db3\u308a\u306a\u304f\u306a\u308b\n\n\nImGui\u3068\u306f\n\u300eOpenGL\u3084DirectX\u306aGUI\u306bimgui\u304c\u6700\u5f37\u3059\u304e\u308b - Qiita\u300f\u306e\u89e3\u8aac\u304c\u4e01\u5be7\u306a\u306e\u3067\u305d\u3061\u3089\u306b\u8b72\u308b\uff0e\n\u96d1\u306b\u8aac\u660e\u3059\u308b\u3068\uff0cImmediate\u306aGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u3067oF\u3084Cinder\u306eupdate()/draw()\u307f\u305f\u3044\u306a\u3068\u3053\u308d\u3067\u76f4\u611f\u7684\u306b\u30b4\u30ea\u30b4\u30ea\u63cf\u753b\u3057\u3066\u3044\u304f\u3084\u3064\uff0e\u300cImmediate\u306aGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u300d\u3068\u3044\u308f\u308c\u3066\u3082\u30d4\u30f3\u3068\u6765\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\uff0cupdate()\u3084draw()\u5185\u306b\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\uff0e\n// ok\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089true\u3092\u8fd4\u3057\u3066\uff0cif\u5185\u306e\u51e6\u7406\u304c\u547c\u3070\u308c\u308b\nif (ui::Button(\"ok\")) {\n  startAwesomeProcess();\n}\n\nImGui\u306f\u6700\u5f37\u306a\u3093\u3060\u3051\u3069\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u3068\u4ed6\u306e\u30a2\u30d7\u30ea\u3068\u898b\u305f\u76ee\u304c\u88ab\u3063\u3066\u3057\u307e\u3046\uff0e\u3084\u3063\u3071\u308a\u305d\u308c\u306f\u6094\u3057\u3044\u306e\u3067\uff0c\u304c\u3093\u3070\u3063\u3066\u30aa\u30ea\u30b8\u30ca\u30eb\u3067\u3055\u3089\u306b\u30a4\u30a4\u611f\u3058\u306aUI\u3092\u69cb\u7bc9\u3059\u308b\u306e\u304c\u672c\u7a3f\u306e\u76ee\u6a19\u3067\u3042\u308b\uff0e\n\nImGui\u3067\u69cb\u7bc9\u3059\u308bGUI\u306e\u30b9\u30bf\u30a4\u30eb\n\u8da3\u5473\u3067\u4f5c\u3063\u3066\u3044\u308bPointCloud\u306eViewer\u30a2\u30d7\u30ea\u306eUI\u3092\u4f8b\u306b\u6319\u3052\u308b\uff0e\n\u6a19\u6e96\u3060\u3068\u3053\u3093\u306a\u611f\u3058\uff0e\n\nCinder-ImGui\u6a19\u6e96\uff0e\u3053\u308c\u3067\u3082\u304b\u306a\u308a\u304b\u3063\u3053\u3044\u3044\uff0e\n\n\u3061\u3087\u3063\u3068\u5f04\u3063\u305f\u3084\u3064\uff0e\n\n\u3061\u3087\u3063\u3068\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3060\u3051\u3067\uff0c\u3053\u308c\u304f\u3089\u3044\u5370\u8c61\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n\u30a4\u30a4\u611f\u3058\u306b\u3059\u308b\n\nCinder\u3067\u5229\u7528\u3059\u308b\u5834\u5408\n\u5b9f\u306fui::initialize()\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\uff08ui::Options\uff09\u3092\u6e21\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\uff0c\u3053\u3053\u304b\u3089\u8af8\u3005\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3067\u304d\u308b\uff0e\n\nCinder\u4ee5\u5916\u3067\u5229\u7528\u3059\u308b\u5834\u5408\nImGui::GetStyle()\u3067ImGuiStyle\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53c2\u7167\u304c\u53d6\u308c\u308b\u306e\u3067\uff0c\u3053\u308c\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u304f\uff08\u203b \u7b46\u8005\u306fCinder\u4ee5\u5916\u3067ImGui\u3092\u5229\u7528\u3057\u305f\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u9055\u3063\u3066\u3044\u305f\u3089\u3059\u307f\u307e\u305b\u3093\uff09\uff0e\n\n\u8a2d\u5b9a\u3067\u304d\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\n\nImGuiStyle\n\n\nrounding\u3084padding\uff0cspacing\u306a\u3069\u8af8\u3005\u306e\u30b5\u30a4\u30ba\u306b\u95a2\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\nantialiase\u306e\u6709\u52b9\u5316\u306a\u3069\uff0c\u305d\u306e\u4ed6\u3044\u308d\u3044\u308d\n\nImGuiStyle.Colors: \u8272\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\uff08\u5f8c\u8ff0\uff09\n\n// https://github.com/ocornut/imgui/blob/v1.49/imgui.h#L701-L728\nstruct ImGuiStyle\n{\n    float       Alpha;                      // Global alpha applies to everything in ImGui\n    ImVec2      WindowPadding;              // Padding within a window\n    ImVec2      WindowMinSize;              // Minimum window size\n    float       WindowRounding;             // Radius of window corners rounding. Set to 0.0f to have rectangular windows\n    ImGuiAlign  WindowTitleAlign;           // Alignment for title bar text\n    float       ChildWindowRounding;        // Radius of child window corners rounding. Set to 0.0f to have rectangular windows\n    ImVec2      FramePadding;               // Padding within a framed rectangle (used by most widgets)\n    float       FrameRounding;              // Radius of frame corners rounding. Set to 0.0f to have rectangular frame (used by most widgets).\n    ImVec2      ItemSpacing;                // Horizontal and vertical spacing between widgets/lines\n    ImVec2      ItemInnerSpacing;           // Horizontal and vertical spacing between within elements of a composed widget (e.g. a slider and its label)\n    ImVec2      TouchExtraPadding;          // Expand reactive bounding box for touch-based system where touch position is not accurate enough. Unfortunately we don't sort widgets so priority on overlap will always be given to the first widget. So don't grow this too much!\n    float       IndentSpacing;              // Horizontal indentation when e.g. entering a tree node. Generally == (FontSize + FramePadding.x*2).\n    float       ColumnsMinSpacing;          // Minimum horizontal spacing between two columns\n    float       ScrollbarSize;              // Width of the vertical scrollbar, Height of the horizontal scrollbar\n    float       ScrollbarRounding;          // Radius of grab corners for scrollbar\n    float       GrabMinSize;                // Minimum width/height of a grab box for slider/scrollbar\n    float       GrabRounding;               // Radius of grabs corners rounding. Set to 0.0f to have rectangular slider grabs.\n    ImVec2      DisplayWindowPadding;       // Window positions are clamped to be visible within the display area by at least this amount. Only covers regular windows.\n    ImVec2      DisplaySafeAreaPadding;     // If you cannot see the edge of your screen (e.g. on a TV) increase the safe area padding. Covers popups/tooltips as well regular windows.\n    bool        AntiAliasedLines;           // Enable anti-aliasing on lines/borders. Disable if you are really tight on CPU/GPU.\n    bool        AntiAliasedShapes;          // Enable anti-aliasing on filled shapes (rounded rectangles, circles, etc.)\n    float       CurveTessellationTol;       // Tessellation tolerance. Decrease for highly tessellated curves (higher quality, more polygons), increase to reduce quality.\n    ImVec4      Colors[ImGuiCol_COUNT];\n\n    IMGUI_API ImGuiStyle();\n};\n\nCinder-ImGui\u306a\u3089ui::Options\u306bsetter\u304c\u751f\u3048\u3066\u3044\u308b\uff0e\n// Example of Cinder-ImGui\nconst auto opts = ui::Options()\n  .antiAliasedLines(true)\n  .antiAliasedShapes(true)\n  .windowRounding(0.0f)\n  .frameRounding(0.0f);\n\nui::initialize(opts);\n\n\nImGuiCol_*\n\nImGuiStyle.Colors\u306b\u7a81\u3063\u8fbc\u3093\u3067\u3044\u304f\u8272\u306e\u8a2d\u5b9a\uff0e\n\nforeground\n\n\n\nImGuiCol_Text: \u901a\u5e38\u6642\u30c6\u30ad\u30b9\u30c8\u306e\u8272\n\nImGuiCol_TextDisabled: \u7121\u52b9\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u306e\u8272\n\n\n\u7121\u52b9\u5316\u3055\u308c\u3066\u308bMenuItem\u3068\u304bButton\u3068\u304b\u305d\u3093\u306a\u3093\n\n\n\n\nbackground\n\n\n\nImGuiCol_*Bg: \u901a\u5e38\u6642\u306e\u80cc\u666f\u8272\n\nImGuiCol_*BgHoverred: mouseover\u6642\u306e\u80cc\u666f\u8272\n\nImGuiCol_*BgActive: mouseclick\u6642\u306e\u80cc\u666f\u8272\n\n\nothers\n\n\n\nImGui_Border / ImGui_BorderShadow\n\nwindow\u3068\u304bbutton\u306e\u67a0\u7dda\nshadow\u306fblur\u306a\u3057\uff0c\u3061\u3087\u3063\u3068\u3060\u3051offset\u3064\u3051\u3066border\u304c\u8ffd\u52a0\u3067\u63cf\u753b\u3055\u308c\u308b\u30a4\u30e1\u30fc\u30b8\n\n\n\nImGuiCol_CheckMark\n\n\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u9078\u629e\u6642\u306e\u5857\u308a\u3064\u3076\u3057\u8272\n\n\n\nImGuiCol_TextSelectedBg\n\n\u30c6\u30ad\u30b9\u30c8\u9078\u629e\u6642\u306e\u80cc\u666f\u8272\n\nui::TreeNode()\u3084ui::MenuItem()\u306bhover\u3057\u305f\u3068\u304d\u306e\u80cc\u666f\u8272\n\n\n\nImGui_Plot* / ImGui_Plot*Hoverred\n\n\u30b0\u30e9\u30d5\u7684\u306a\u3084\u3064\u306e\u8272\n\n\n\n\n\n// https://github.com/ocornut/imgui/blob/v1.49/imgui.h#L592-L638\nenum ImGuiCol_\n{\n    ImGuiCol_Text,\n    ImGuiCol_TextDisabled,\n    ImGuiCol_WindowBg,              // Background of normal windows\n    ImGuiCol_ChildWindowBg,         // Background of child windows\n    ImGuiCol_PopupBg,               // Background of popups, menus, tooltips windows\n    ImGuiCol_Border,\n    ImGuiCol_BorderShadow,\n    ImGuiCol_FrameBg,               // Background of checkbox, radio button, plot, slider, text input\n    ImGuiCol_FrameBgHovered,\n    ImGuiCol_FrameBgActive,\n    ImGuiCol_TitleBg,\n    ImGuiCol_TitleBgCollapsed,\n    ImGuiCol_TitleBgActive,\n    ImGuiCol_MenuBarBg,\n    ImGuiCol_ScrollbarBg,\n    ImGuiCol_ScrollbarGrab,\n    ImGuiCol_ScrollbarGrabHovered,\n    ImGuiCol_ScrollbarGrabActive,\n    ImGuiCol_ComboBg,\n    ImGuiCol_CheckMark,\n    ImGuiCol_SliderGrab,\n    ImGuiCol_SliderGrabActive,\n    ImGuiCol_Button,\n    ImGuiCol_ButtonHovered,\n    ImGuiCol_ButtonActive,\n    ImGuiCol_Header,\n    ImGuiCol_HeaderHovered,\n    ImGuiCol_HeaderActive,\n    ImGuiCol_Column,\n    ImGuiCol_ColumnHovered,\n    ImGuiCol_ColumnActive,\n    ImGuiCol_ResizeGrip,\n    ImGuiCol_ResizeGripHovered,\n    ImGuiCol_ResizeGripActive,\n    ImGuiCol_CloseButton,\n    ImGuiCol_CloseButtonHovered,\n    ImGuiCol_CloseButtonActive,\n    ImGuiCol_PlotLines,\n    ImGuiCol_PlotLinesHovered,\n    ImGuiCol_PlotHistogram,\n    ImGuiCol_PlotHistogramHovered,\n    ImGuiCol_TextSelectedBg,\n    ImGuiCol_ModalWindowDarkening,  // darken entire screen when a modal window is active\n    ImGuiCol_COUNT\n};\n\nCinder-ImGui\u306a\u3089ui::Options#color( ImGuiCol option, const ci::ColorA &color )\u3092\u5229\u7528\u3067\u304d\u308b\uff0e\nconst ci::ColorA8u color_white   = ci::ColorA8u(0xf5, 0xf5, 0xf5, 0xcc);\nconst ci::ColorA8u color_primary = ci::ColorA8u(0x1c, 0xfe, 0xff, 0xcc);\nconst ci::ColorA8u color_primary_dark = ci::ColorA8u(0x03, 0x19, 0x1a, 0xcc);\n\nconst ui::Options opts = ui::Options()\n    .color(ImGuiCol_Text,     color_white)\n    .color(ImGuiCol_WindowBg, color_primary_dark)\n    .color(ImGuiCol_TitleBg,  color_primary);\n\nui::initialize(opts);\n\n\n\u3067\u304d\u306a\u3044\u3053\u3068\n\nblur\u3084glow\u307f\u305f\u3044\u306a\u30ab\u30c3\u30b3\u30a4\u30a4\u30a8\u30d5\u30a7\u30af\u30c8\n\n\n> Sorry, it isn't a priority for ImGui to develop toward fancy visuals let alone animation.\nhttps://github.com/ocornut/imgui/issues/451\n\n\nselectable\u306a\u30c6\u30ad\u30b9\u30c8\u304chover\u3055\u308c\u305f\u3068\u304d\u306e\u8272\uff08foreground color\uff09\n\n\n\u3053\u308c\u7d50\u69cb\u4e0d\u4fbf\n\u2193 \u3053\u3046\u3044\u3046\u3084\u3064\uff0c\u8272\u5909\u3048\u305f\u3044\u3051\u3069\u2026\n\n\n\n\n\nExample\n\u6700\u521d\u306e\u30b9\u30af\u30b7\u30e7\u306e\u3084\u3064\uff0e\u30b5\u30a4\u30d0\u30fc\u611f\uff08\uff1f\uff09\u51fa\u3057\u305f\u304b\u3063\u305f\uff0e\n\n\u30ab\u30af\u30ab\u30af\u3055\u305b\u308b\n\u7dda\u3092\u306f\u3063\u304d\u308a\u3055\u305b\u308b\n\u8272\u3092\u306f\u3063\u304d\u308a\u3055\u305b\u308b\n\n\n\u30cd\u30aa\u30f3\u30ab\u30e9\u30fc\u306b\u3057\u305f\u3089\u30b5\u30a4\u30d0\u30fc\u611f\u3067\u308b\uff1f\n\n\n\n\u30b7\u30c9\u30cb\u30a2\u306e\u9a0e\u58eb\u307f\u305f\u3044\u306b\u98fe\u308a\u67a0\u3068\u304b\u3064\u3051\u305f\u308a\uff0cParallels eyes\u306e\u3088\u3046\u306a\u30b0\u30ea\u30c3\u30c9\u306a\u80cc\u666f\u753b\u50cf\u3092\u3044\u308c\u305f\u308a\u3059\u308b\u3068\u307e\u305f\u96f0\u56f2\u6c17\u5909\u308f\u308b\u304b\u3082\uff08\u3069\u3061\u3089\u3082ImGui\u5b9f\u88c5\u3067\u306f\u306a\u3044\u304c\u2026\uff09\uff0e\nconst ci::Color8u  kColorPrimaryBase = ci::Color8u(0x1c, 0xfe, 0xff);\nconst ci::ColorA8u kColorPrimary     = ci::ColorA8u(kColorPrimaryBase, 0xcc);\nconst ci::ColorA8u kColorPrimaryA99  = ci::ColorA8u(kColorPrimaryBase, 0x99);\nconst ci::ColorA8u kColorPrimaryA66  = ci::ColorA8u(kColorPrimaryBase, 0x66);\nconst ci::ColorA8u kColorPrimaryA33  = ci::ColorA8u(kColorPrimaryBase, 0x33);\nconst ci::ColorA8u kColorPrimaryDark = ci::ColorA8u(0x03, 0x19, 0x1a, 0xbb);\n\nconst ci::Color8u  kColorAccentBase = ci::Color8u(0xff, 0xa1, 0x00);\nconst ci::ColorA8u kColorAccent     = ci::ColorA8u(kColorAccentBase, 0xee);\nconst ci::ColorA8u kColorAccentAcc  = ci::ColorA8u(kColorAccentBase, 0xcc);\nconst ci::ColorA8u kColorAccentA99  = ci::ColorA8u(kColorAccentBase, 0x99);\n\nconst ci::ColorA8u kColorWhite      = ci::ColorA8u(0xdd, 0xdd, 0xdd, 0xcc);\nconst ci::ColorA8u kColorBlackA55   = ci::ColorA8u(0x11, 0x11, 0x11, 0x55);\n\nconst ui::Options kUiOptions = ui::Options()\n  .darkTheme()\n  .color(ImGuiCol_MenuBarBg,              kColorPrimaryA33)\n  .color(ImGuiCol_TitleBg,                kColorPrimaryDark)\n  .color(ImGuiCol_TitleBgCollapsed,       kColorPrimaryDark)\n  .color(ImGuiCol_TitleBgActive,          kColorPrimaryA99)\n  .color(ImGuiCol_WindowBg,               kColorPrimaryDark)\n  .color(ImGuiCol_Border,                 kColorPrimaryA99)\n  .color(ImGuiCol_FrameBg,                kColorPrimaryA33)\n  .color(ImGuiCol_FrameBgHovered,         kColorAccentAcc)\n  .color(ImGuiCol_FrameBgActive,          kColorAccent)\n  .color(ImGuiCol_ScrollbarBg,            kColorPrimaryA33)\n  .color(ImGuiCol_ScrollbarGrab,          kColorPrimaryA99)\n  .color(ImGuiCol_ScrollbarGrabHovered,   kColorPrimaryA99)\n  .color(ImGuiCol_ScrollbarGrabActive,    kColorPrimary)\n  .color(ImGuiCol_CheckMark,              kColorAccent)\n  .color(ImGuiCol_SliderGrab,             kColorPrimaryA99)\n  .color(ImGuiCol_SliderGrabActive,       kColorPrimary)\n  .color(ImGuiCol_Button,                 kColorPrimaryA33)\n  .color(ImGuiCol_ButtonHovered,          kColorAccentAcc)\n  .color(ImGuiCol_ButtonActive,           kColorAccent)\n  .color(ImGuiCol_Header,                 kColorAccentA99)\n  .color(ImGuiCol_HeaderHovered,          kColorAccentAcc)\n  .color(ImGuiCol_HeaderActive,           kColorAccent)\n  .color(ImGuiCol_Column,                 kColorBlackA55)\n  .color(ImGuiCol_ColumnHovered,          kColorAccentAcc)\n  .color(ImGuiCol_ColumnActive,           kColorAccent)\n  .color(ImGuiCol_PlotLines,              kColorPrimaryA99)\n  .color(ImGuiCol_PlotLinesHovered,       kColorPrimary)\n  .color(ImGuiCol_PlotHistogram,          kColorPrimaryA99)\n  .color(ImGuiCol_PlotHistogramHovered,   kColorPrimary)\n  .color(ImGuiCol_Text,                   kColorPrimary)\n  .color(ImGuiCol_TextDisabled,           kColorPrimaryA66)\n  .color(ImGuiCol_TextSelectedBg,         kColorAccent)\n  .color(ImGuiCol_PopupBg,                kColorPrimaryDark)\n  .antiAliasedLines(true)\n  .antiAliasedShapes(true)\n  .windowRounding(0.0f)\n  .frameRounding(0.0f);\n\n\nReferences\n\nocornut/imgui\nCinder\nsimongeilfus/Cinder-ImGui\nOpenGL\u3084DirectX\u306aGUI\u306bimgui\u304c\u6700\u5f37\u3059\u304e\u308b - Qiita\n\n## TL;DR\n- \u6700\u4f4e\u9650\u306e\u30d1\u30e9\u30e1\u30bf\u5f04\u308bUI\u306a\u3089\uff0c\u3084\u306f\u308aImGui\u304c\u6700\u5f37\n- \u9811\u5f35\u308c\u3070\u898b\u305f\u76ee\u3082\u305d\u3053\u305d\u3053\u3044\u3044\u611f\u3058\u306b\u3067\u304d\u308b\n- \u672c\u6c17\u3067\u6700\u9ad8\u306b\u304b\u3063\u3053\u3044\u3044UI\u3092\u4f5c\u308a\u305f\u3044\u306a\u3089\uff0cImGui\u3060\u3068\u8db3\u308a\u306a\u304f\u306a\u308b\n\n\n## ImGui\u3068\u306f\n\u300e[OpenGL\u3084DirectX\u306aGUI\u306bimgui\u304c\u6700\u5f37\u3059\u304e\u308b - Qiita][ushio2016]\u300f\u306e\u89e3\u8aac\u304c\u4e01\u5be7\u306a\u306e\u3067\u305d\u3061\u3089\u306b\u8b72\u308b\uff0e\n\n\u96d1\u306b\u8aac\u660e\u3059\u308b\u3068\uff0cImmediate\u306aGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u3067oF\u3084[Cinder][cinder]\u306e`update()`/`draw()`\u307f\u305f\u3044\u306a\u3068\u3053\u308d\u3067\u76f4\u611f\u7684\u306b\u30b4\u30ea\u30b4\u30ea\u63cf\u753b\u3057\u3066\u3044\u304f\u3084\u3064\uff0e\u300cImmediate\u306aGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u300d\u3068\u3044\u308f\u308c\u3066\u3082\u30d4\u30f3\u3068\u6765\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\uff0c`update()`\u3084`draw()`\u5185\u306b\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\uff0e\n\n```cpp\n// ok\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089true\u3092\u8fd4\u3057\u3066\uff0cif\u5185\u306e\u51e6\u7406\u304c\u547c\u3070\u308c\u308b\nif (ui::Button(\"ok\")) {\n  startAwesomeProcess();\n}\n```\n\nImGui\u306f\u6700\u5f37\u306a\u3093\u3060\u3051\u3069\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u3068\u4ed6\u306e\u30a2\u30d7\u30ea\u3068\u898b\u305f\u76ee\u304c\u88ab\u3063\u3066\u3057\u307e\u3046\uff0e\u3084\u3063\u3071\u308a\u305d\u308c\u306f\u6094\u3057\u3044\u306e\u3067\uff0c\u304c\u3093\u3070\u3063\u3066\u30aa\u30ea\u30b8\u30ca\u30eb\u3067\u3055\u3089\u306b\u30a4\u30a4\u611f\u3058\u306aUI\u3092\u69cb\u7bc9\u3059\u308b\u306e\u304c\u672c\u7a3f\u306e\u76ee\u6a19\u3067\u3042\u308b\uff0e\n\n\n## ImGui\u3067\u69cb\u7bc9\u3059\u308bGUI\u306e\u30b9\u30bf\u30a4\u30eb\n\u8da3\u5473\u3067\u4f5c\u3063\u3066\u3044\u308bPointCloud\u306eViewer\u30a2\u30d7\u30ea\u306eUI\u3092\u4f8b\u306b\u6319\u3052\u308b\uff0e\n\n\u6a19\u6e96\u3060\u3068\u3053\u3093\u306a\u611f\u3058\uff0e\n\n[![https://gyazo.com/268225fce92cf1a420232d00f4fba57e](https://i.gyazo.com/268225fce92cf1a420232d00f4fba57e.png)](https://gyazo.com/268225fce92cf1a420232d00f4fba57e)\n\n[Cinder-ImGui][cinder-imgui]\u6a19\u6e96\uff0e\u3053\u308c\u3067\u3082\u304b\u306a\u308a\u304b\u3063\u3053\u3044\u3044\uff0e\n\n[![https://gyazo.com/6d6fd02be3073716efac28f210d2ca01](https://i.gyazo.com/6d6fd02be3073716efac28f210d2ca01.png)](https://gyazo.com/6d6fd02be3073716efac28f210d2ca01)\n\n\u3061\u3087\u3063\u3068\u5f04\u3063\u305f\u3084\u3064\uff0e\n\n[![https://gyazo.com/a7122ea3ee82910d7ec5060323301432](https://i.gyazo.com/a7122ea3ee82910d7ec5060323301432.png)](https://gyazo.com/a7122ea3ee82910d7ec5060323301432)\n\n\u3061\u3087\u3063\u3068\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3060\u3051\u3067\uff0c\u3053\u308c\u304f\u3089\u3044\u5370\u8c61\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n\n## \u30a4\u30a4\u611f\u3058\u306b\u3059\u308b\n### Cinder\u3067\u5229\u7528\u3059\u308b\u5834\u5408\n\u5b9f\u306f`ui::initialize()`\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\uff08`ui::Options`\uff09\u3092\u6e21\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\uff0c\u3053\u3053\u304b\u3089\u8af8\u3005\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3067\u304d\u308b\uff0e\n\n### Cinder\u4ee5\u5916\u3067\u5229\u7528\u3059\u308b\u5834\u5408\n`ImGui::GetStyle()`\u3067`ImGuiStyle`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53c2\u7167\u304c\u53d6\u308c\u308b\u306e\u3067\uff0c\u3053\u308c\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u304f\uff08\u203b \u7b46\u8005\u306fCinder\u4ee5\u5916\u3067ImGui\u3092\u5229\u7528\u3057\u305f\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u9055\u3063\u3066\u3044\u305f\u3089\u3059\u307f\u307e\u305b\u3093\uff09\uff0e\n\n### \u8a2d\u5b9a\u3067\u304d\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\n#### ` ImGuiStyle` \n- rounding\u3084padding\uff0cspacing\u306a\u3069\u8af8\u3005\u306e\u30b5\u30a4\u30ba\u306b\u95a2\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\n- antialiase\u306e\u6709\u52b9\u5316\u306a\u3069\uff0c\u305d\u306e\u4ed6\u3044\u308d\u3044\u308d\n- `ImGuiStyle.Colors`: \u8272\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\uff08\u5f8c\u8ff0\uff09\n\n\n```cpp\n// https://github.com/ocornut/imgui/blob/v1.49/imgui.h#L701-L728\nstruct ImGuiStyle\n{\n    float       Alpha;                      // Global alpha applies to everything in ImGui\n    ImVec2      WindowPadding;              // Padding within a window\n    ImVec2      WindowMinSize;              // Minimum window size\n    float       WindowRounding;             // Radius of window corners rounding. Set to 0.0f to have rectangular windows\n    ImGuiAlign  WindowTitleAlign;           // Alignment for title bar text\n    float       ChildWindowRounding;        // Radius of child window corners rounding. Set to 0.0f to have rectangular windows\n    ImVec2      FramePadding;               // Padding within a framed rectangle (used by most widgets)\n    float       FrameRounding;              // Radius of frame corners rounding. Set to 0.0f to have rectangular frame (used by most widgets).\n    ImVec2      ItemSpacing;                // Horizontal and vertical spacing between widgets/lines\n    ImVec2      ItemInnerSpacing;           // Horizontal and vertical spacing between within elements of a composed widget (e.g. a slider and its label)\n    ImVec2      TouchExtraPadding;          // Expand reactive bounding box for touch-based system where touch position is not accurate enough. Unfortunately we don't sort widgets so priority on overlap will always be given to the first widget. So don't grow this too much!\n    float       IndentSpacing;              // Horizontal indentation when e.g. entering a tree node. Generally == (FontSize + FramePadding.x*2).\n    float       ColumnsMinSpacing;          // Minimum horizontal spacing between two columns\n    float       ScrollbarSize;              // Width of the vertical scrollbar, Height of the horizontal scrollbar\n    float       ScrollbarRounding;          // Radius of grab corners for scrollbar\n    float       GrabMinSize;                // Minimum width/height of a grab box for slider/scrollbar\n    float       GrabRounding;               // Radius of grabs corners rounding. Set to 0.0f to have rectangular slider grabs.\n    ImVec2      DisplayWindowPadding;       // Window positions are clamped to be visible within the display area by at least this amount. Only covers regular windows.\n    ImVec2      DisplaySafeAreaPadding;     // If you cannot see the edge of your screen (e.g. on a TV) increase the safe area padding. Covers popups/tooltips as well regular windows.\n    bool        AntiAliasedLines;           // Enable anti-aliasing on lines/borders. Disable if you are really tight on CPU/GPU.\n    bool        AntiAliasedShapes;          // Enable anti-aliasing on filled shapes (rounded rectangles, circles, etc.)\n    float       CurveTessellationTol;       // Tessellation tolerance. Decrease for highly tessellated curves (higher quality, more polygons), increase to reduce quality.\n    ImVec4      Colors[ImGuiCol_COUNT];\n\n    IMGUI_API ImGuiStyle();\n};\n```\n\n[Cinder-ImGui][cinder-imgui]\u306a\u3089`ui::Options`\u306bsetter\u304c\u751f\u3048\u3066\u3044\u308b\uff0e\n\n```cpp\n// Example of Cinder-ImGui\nconst auto opts = ui::Options()\n  .antiAliasedLines(true)\n  .antiAliasedShapes(true)\n  .windowRounding(0.0f)\n  .frameRounding(0.0f);\n\nui::initialize(opts);\n```\n\n#### `ImGuiCol_*`\n`ImGuiStyle.Colors`\u306b\u7a81\u3063\u8fbc\u3093\u3067\u3044\u304f\u8272\u306e\u8a2d\u5b9a\uff0e\n\n- foreground\n    - `ImGuiCol_Text`: \u901a\u5e38\u6642\u30c6\u30ad\u30b9\u30c8\u306e\u8272\n    - `ImGuiCol_TextDisabled`: \u7121\u52b9\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u306e\u8272\n        - \u7121\u52b9\u5316\u3055\u308c\u3066\u308bMenuItem\u3068\u304bButton\u3068\u304b\u305d\u3093\u306a\u3093\n- background\n    - `ImGuiCol_*Bg`: \u901a\u5e38\u6642\u306e\u80cc\u666f\u8272\n    - `ImGuiCol_*BgHoverred`: mouseover\u6642\u306e\u80cc\u666f\u8272\n    - `ImGuiCol_*BgActive`: mouseclick\u6642\u306e\u80cc\u666f\u8272\n- others\n    - `ImGui_Border` / `ImGui_BorderShadow`\n        - window\u3068\u304bbutton\u306e\u67a0\u7dda\n        - shadow\u306fblur\u306a\u3057\uff0c\u3061\u3087\u3063\u3068\u3060\u3051offset\u3064\u3051\u3066border\u304c\u8ffd\u52a0\u3067\u63cf\u753b\u3055\u308c\u308b\u30a4\u30e1\u30fc\u30b8\n    - `ImGuiCol_CheckMark`\n        - \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u9078\u629e\u6642\u306e\u5857\u308a\u3064\u3076\u3057\u8272\n    - `ImGuiCol_TextSelectedBg`\n        - \u30c6\u30ad\u30b9\u30c8\u9078\u629e\u6642\u306e\u80cc\u666f\u8272\n        - `ui::TreeNode()`\u3084`ui::MenuItem()`\u306bhover\u3057\u305f\u3068\u304d\u306e\u80cc\u666f\u8272\n    - `ImGui_Plot*` / `ImGui_Plot*Hoverred`\n        - \u30b0\u30e9\u30d5\u7684\u306a\u3084\u3064\u306e\u8272\n\n```cpp\n// https://github.com/ocornut/imgui/blob/v1.49/imgui.h#L592-L638\nenum ImGuiCol_\n{\n    ImGuiCol_Text,\n    ImGuiCol_TextDisabled,\n    ImGuiCol_WindowBg,              // Background of normal windows\n    ImGuiCol_ChildWindowBg,         // Background of child windows\n    ImGuiCol_PopupBg,               // Background of popups, menus, tooltips windows\n    ImGuiCol_Border,\n    ImGuiCol_BorderShadow,\n    ImGuiCol_FrameBg,               // Background of checkbox, radio button, plot, slider, text input\n    ImGuiCol_FrameBgHovered,\n    ImGuiCol_FrameBgActive,\n    ImGuiCol_TitleBg,\n    ImGuiCol_TitleBgCollapsed,\n    ImGuiCol_TitleBgActive,\n    ImGuiCol_MenuBarBg,\n    ImGuiCol_ScrollbarBg,\n    ImGuiCol_ScrollbarGrab,\n    ImGuiCol_ScrollbarGrabHovered,\n    ImGuiCol_ScrollbarGrabActive,\n    ImGuiCol_ComboBg,\n    ImGuiCol_CheckMark,\n    ImGuiCol_SliderGrab,\n    ImGuiCol_SliderGrabActive,\n    ImGuiCol_Button,\n    ImGuiCol_ButtonHovered,\n    ImGuiCol_ButtonActive,\n    ImGuiCol_Header,\n    ImGuiCol_HeaderHovered,\n    ImGuiCol_HeaderActive,\n    ImGuiCol_Column,\n    ImGuiCol_ColumnHovered,\n    ImGuiCol_ColumnActive,\n    ImGuiCol_ResizeGrip,\n    ImGuiCol_ResizeGripHovered,\n    ImGuiCol_ResizeGripActive,\n    ImGuiCol_CloseButton,\n    ImGuiCol_CloseButtonHovered,\n    ImGuiCol_CloseButtonActive,\n    ImGuiCol_PlotLines,\n    ImGuiCol_PlotLinesHovered,\n    ImGuiCol_PlotHistogram,\n    ImGuiCol_PlotHistogramHovered,\n    ImGuiCol_TextSelectedBg,\n    ImGuiCol_ModalWindowDarkening,  // darken entire screen when a modal window is active\n    ImGuiCol_COUNT\n};\n```\n\n[Cinder-ImGui][cinder-imgui]\u306a\u3089`ui::Options#color( ImGuiCol option, const ci::ColorA &color )`\u3092\u5229\u7528\u3067\u304d\u308b\uff0e\n\n```cpp\nconst ci::ColorA8u color_white   = ci::ColorA8u(0xf5, 0xf5, 0xf5, 0xcc);\nconst ci::ColorA8u color_primary = ci::ColorA8u(0x1c, 0xfe, 0xff, 0xcc);\nconst ci::ColorA8u color_primary_dark = ci::ColorA8u(0x03, 0x19, 0x1a, 0xcc);\n\nconst ui::Options opts = ui::Options()\n    .color(ImGuiCol_Text,     color_white)\n    .color(ImGuiCol_WindowBg, color_primary_dark)\n    .color(ImGuiCol_TitleBg,  color_primary);\n\nui::initialize(opts);\n```\n\n## \u3067\u304d\u306a\u3044\u3053\u3068\n- blur\u3084glow\u307f\u305f\u3044\u306a\u30ab\u30c3\u30b3\u30a4\u30a4\u30a8\u30d5\u30a7\u30af\u30c8\n    - > Sorry, it isn't a priority for ImGui to develop toward fancy visuals let alone animation.\n    - https://github.com/ocornut/imgui/issues/451\n- selectable\u306a\u30c6\u30ad\u30b9\u30c8\u304chover\u3055\u308c\u305f\u3068\u304d\u306e\u8272\uff08foreground color\uff09\n    - \u3053\u308c\u7d50\u69cb\u4e0d\u4fbf\n    - \u2193 \u3053\u3046\u3044\u3046\u3084\u3064\uff0c\u8272\u5909\u3048\u305f\u3044\u3051\u3069\u2026\n    - [![https://gyazo.com/c1da327924f2e15745c6b79704370c18](https://i.gyazo.com/c1da327924f2e15745c6b79704370c18.png)](https://gyazo.com/c1da327924f2e15745c6b79704370c18)\n\n\n## Example\n\u6700\u521d\u306e\u30b9\u30af\u30b7\u30e7\u306e\u3084\u3064\uff0e\u30b5\u30a4\u30d0\u30fc\u611f\uff08\uff1f\uff09\u51fa\u3057\u305f\u304b\u3063\u305f\uff0e\n\n- \u30ab\u30af\u30ab\u30af\u3055\u305b\u308b\n- \u7dda\u3092\u306f\u3063\u304d\u308a\u3055\u305b\u308b\n- \u8272\u3092\u306f\u3063\u304d\u308a\u3055\u305b\u308b\n    - \u30cd\u30aa\u30f3\u30ab\u30e9\u30fc\u306b\u3057\u305f\u3089\u30b5\u30a4\u30d0\u30fc\u611f\u3067\u308b\uff1f\n\n[\u30b7\u30c9\u30cb\u30a2\u306e\u9a0e\u58eb](http://3fl.jp/npf002)\u307f\u305f\u3044\u306b\u98fe\u308a\u67a0\u3068\u304b\u3064\u3051\u305f\u308a\uff0c[Parallels eyes](https://vimeo.com/135777849)\u306e\u3088\u3046\u306a\u30b0\u30ea\u30c3\u30c9\u306a\u80cc\u666f\u753b\u50cf\u3092\u3044\u308c\u305f\u308a\u3059\u308b\u3068\u307e\u305f\u96f0\u56f2\u6c17\u5909\u308f\u308b\u304b\u3082\uff08\u3069\u3061\u3089\u3082ImGui\u5b9f\u88c5\u3067\u306f\u306a\u3044\u304c\u2026\uff09\uff0e\n\n```cpp\nconst ci::Color8u  kColorPrimaryBase = ci::Color8u(0x1c, 0xfe, 0xff);\nconst ci::ColorA8u kColorPrimary     = ci::ColorA8u(kColorPrimaryBase, 0xcc);\nconst ci::ColorA8u kColorPrimaryA99  = ci::ColorA8u(kColorPrimaryBase, 0x99);\nconst ci::ColorA8u kColorPrimaryA66  = ci::ColorA8u(kColorPrimaryBase, 0x66);\nconst ci::ColorA8u kColorPrimaryA33  = ci::ColorA8u(kColorPrimaryBase, 0x33);\nconst ci::ColorA8u kColorPrimaryDark = ci::ColorA8u(0x03, 0x19, 0x1a, 0xbb);\n\nconst ci::Color8u  kColorAccentBase = ci::Color8u(0xff, 0xa1, 0x00);\nconst ci::ColorA8u kColorAccent     = ci::ColorA8u(kColorAccentBase, 0xee);\nconst ci::ColorA8u kColorAccentAcc  = ci::ColorA8u(kColorAccentBase, 0xcc);\nconst ci::ColorA8u kColorAccentA99  = ci::ColorA8u(kColorAccentBase, 0x99);\n\nconst ci::ColorA8u kColorWhite      = ci::ColorA8u(0xdd, 0xdd, 0xdd, 0xcc);\nconst ci::ColorA8u kColorBlackA55   = ci::ColorA8u(0x11, 0x11, 0x11, 0x55);\n\nconst ui::Options kUiOptions = ui::Options()\n  .darkTheme()\n  .color(ImGuiCol_MenuBarBg,              kColorPrimaryA33)\n  .color(ImGuiCol_TitleBg,                kColorPrimaryDark)\n  .color(ImGuiCol_TitleBgCollapsed,       kColorPrimaryDark)\n  .color(ImGuiCol_TitleBgActive,          kColorPrimaryA99)\n  .color(ImGuiCol_WindowBg,               kColorPrimaryDark)\n  .color(ImGuiCol_Border,                 kColorPrimaryA99)\n  .color(ImGuiCol_FrameBg,                kColorPrimaryA33)\n  .color(ImGuiCol_FrameBgHovered,         kColorAccentAcc)\n  .color(ImGuiCol_FrameBgActive,          kColorAccent)\n  .color(ImGuiCol_ScrollbarBg,            kColorPrimaryA33)\n  .color(ImGuiCol_ScrollbarGrab,          kColorPrimaryA99)\n  .color(ImGuiCol_ScrollbarGrabHovered,   kColorPrimaryA99)\n  .color(ImGuiCol_ScrollbarGrabActive,    kColorPrimary)\n  .color(ImGuiCol_CheckMark,              kColorAccent)\n  .color(ImGuiCol_SliderGrab,             kColorPrimaryA99)\n  .color(ImGuiCol_SliderGrabActive,       kColorPrimary)\n  .color(ImGuiCol_Button,                 kColorPrimaryA33)\n  .color(ImGuiCol_ButtonHovered,          kColorAccentAcc)\n  .color(ImGuiCol_ButtonActive,           kColorAccent)\n  .color(ImGuiCol_Header,                 kColorAccentA99)\n  .color(ImGuiCol_HeaderHovered,          kColorAccentAcc)\n  .color(ImGuiCol_HeaderActive,           kColorAccent)\n  .color(ImGuiCol_Column,                 kColorBlackA55)\n  .color(ImGuiCol_ColumnHovered,          kColorAccentAcc)\n  .color(ImGuiCol_ColumnActive,           kColorAccent)\n  .color(ImGuiCol_PlotLines,              kColorPrimaryA99)\n  .color(ImGuiCol_PlotLinesHovered,       kColorPrimary)\n  .color(ImGuiCol_PlotHistogram,          kColorPrimaryA99)\n  .color(ImGuiCol_PlotHistogramHovered,   kColorPrimary)\n  .color(ImGuiCol_Text,                   kColorPrimary)\n  .color(ImGuiCol_TextDisabled,           kColorPrimaryA66)\n  .color(ImGuiCol_TextSelectedBg,         kColorAccent)\n  .color(ImGuiCol_PopupBg,                kColorPrimaryDark)\n  .antiAliasedLines(true)\n  .antiAliasedShapes(true)\n  .windowRounding(0.0f)\n  .frameRounding(0.0f);\n```\n\n\n## References\n- [ocornut/imgui][imgui]\n- [Cinder][cinder]\n- [simongeilfus/Cinder-ImGui][cinder-imgui]\n- [OpenGL\u3084DirectX\u306aGUI\u306bimgui\u304c\u6700\u5f37\u3059\u304e\u308b - Qiita][ushio2016]\n\n[imgui]: https://github.com/ocornut/imgui\n[cinder]: https://libcinder.org/\n[cinder-imgui]: https://github.com/simongeilfus/Cinder-ImGui\n[ushio2016]: http://qiita.com/Ushio@github/items/446d78c881334919e156\n", "tags": ["Cinder", "imgui"]}