{"context": "\u8868\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3067\u5fc5\u305a\u3057\u3082\u5168\u90e8\u306e\u30bb\u30eb\u304c\u57cb\u307e\u3063\u3066\u3044\u306a\u3044\u3082\u306e\u306e\u51e6\u7406\u3092\u3001\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306e\u7df4\u7fd2\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u7de8\u96c6\u5c65\u6b74\n\n2016.06.30 \u6539\u826f\u7248\u306e\u8a18\u4e8b\u3078\u306e\u30ea\u30f3\u30af\u3092\u8cbc\u308a\u307e\u3057\u305f\u3002\n2016.07.04 \u3053\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305f\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u30d3\u30eb\u30c0\u30fc\u306e\u4f5c\u6210\u904e\u7a0b\u3092\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\n\n\u8a66\u4f5c\u3057\u305f\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u3068\u95a2\u6570\u30e2\u30ca\u30c9\n\n\n2016.07.06 \u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u3092\u4f7f\u308f\u306a\u3044\u65b9\u6cd5\u3092\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n2016.07.07 Map\u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n\n\n\u30b5\u30f3\u30d7\u30eb\n\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3068\u3057\u3066\u6271\u3046\u8868\u306fXML\u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u63d0\u4f9b\u3055\u308c\u308b\u3068\u60f3\u5b9a\u3057\u307e\u3059\u3002\u8aad\u307f\u8fbc\u307f\u306b\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u4f5c\u6210\u3057\u305fXmlSpreadsheetReader\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\nXML\u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\u306e\u8aad\u307f\u8fbc\u307f 2016.06.30\n\n\u4e0a\u306e\u8a18\u4e8b\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u540c\u3058\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\n\n\u793e\u540d\n\u4f1a\u9577\n\u793e\u9577\n\u526f\u793e\u9577\n\u5c02\u52d9\n\n\n\n\nA\u793e\n\u5c71\u7530\n\u4f50\u85e4\n\u9234\u6728\n\u5c0f\u6797\n\n\nB\u793e\n\n\u4f0a\u85e4\n\n\u6c60\u7530\n\n\nC\u793e\n\u5c71\u672c\n\u9ad8\u6a4b\n\n\n\n\n\nXmlSpreadsheetReader\u304c\u8fd4\u3059\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u9577\u3055\u304c\u4e0d\u63c3\u3044\u3067\u3059\u3002\n[\"\u793e\u540d\"; \"\u4f1a\u9577\"; \"\u793e\u9577\"; \"\u526f\u793e\u9577\"; \"\u5c02\u52d9\"]\n[\"A\u793e\"; \"\u5c71\u7530\"; \"\u4f50\u85e4\"; \"\u9234\u6728\"; \"\u5c0f\u6797\"]\n[\"B\u793e\"; \"\"; \"\u4f0a\u85e4\"; \"\"; \"\u6c60\u7530\"]\n[\"C\u793e\"; \"\u5c71\u672c\"; \"\u9ad8\u6a4b\"]\n\n\u4eca\u56de\u306e\u76ee\u7684\u306f\u3053\u306e\u30c7\u30fc\u30bf\u304b\u3089\u540d\u524d\u3092\u30ad\u30fc\u306b\u3057\u305f\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u308b\u3053\u3068\u3067\u3059\u3002\n\n\u5b9f\u88c5\n\u7279\u306b\u5de5\u592b\u3082\u305b\u305a\u30d9\u30bf\u66f8\u304d\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n#load \"XmlSpreadsheetReader.fsx\"\n\nopen XmlSpreadsheetReader\n\nlet persons = new System.Collections.Generic.Dictionary<string, string * string>()\nlet addPerson name data = if name <> \"\" then persons.[name] <- data\n\ntry\n    use xr = openXml \"Book1.xml\"\n    worksheets xr |> Seq.head |> ignore\n    for row in rows xr |> Seq.skip 1 do\n        let company = row.Item 0\n        if row.Length <= 1 then () else\n        addPerson (row.Item 1) (company, \"\u4f1a\u9577\")\n        if row.Length <= 2 then () else\n        addPerson (row.Item 2) (company, \"\u793e\u9577\")\n        if row.Length <= 3 then () else\n        addPerson (row.Item 3) (company, \"\u526f\u793e\u9577\")\n        if row.Length <= 4 then () else\n        addPerson (row.Item 4) (company, \"\u5c02\u52d9\")\n    for p in persons do\n        printfn \"%s: %A\" p.Key p.Value\nwith e ->\n    printfn \"%A\" e\n\n\n\u5b9f\u884c\u7d50\u679c\n\u5c71\u7530: (\"A\u793e\", \"\u4f1a\u9577\")\n\u4f50\u85e4: (\"A\u793e\", \"\u793e\u9577\")\n\u9234\u6728: (\"A\u793e\", \"\u526f\u793e\u9577\")\n\u5c0f\u6797: (\"A\u793e\", \"\u5c02\u52d9\")\n\u4f0a\u85e4: (\"B\u793e\", \"\u793e\u9577\")\n\u6c60\u7530: (\"B\u793e\", \"\u5c02\u52d9\")\n\u5c71\u672c: (\"C\u793e\", \"\u4f1a\u9577\")\n\u9ad8\u6a4b: (\"C\u793e\", \"\u793e\u9577\")\n\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f\u305f\u307e\u305f\u307e\u540c\u59d3\u306e\u5225\u4eba\u304c\u3044\u305f\u3068\u304d\u306b\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001\u672c\u984c\u3067\u306f\u306a\u3044\u305f\u3081\u4e0d\u554f\u3068\u3057\u307e\u3059\u3002\n\n\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\n\u9577\u3055\u30c1\u30a7\u30c3\u30af\u304c\u5197\u9577\u3067\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5373\u5024\u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3082\u5fae\u5999\u3067\u3059\u3002\u3053\u308c\u3089\u3092\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u3067\u7c21\u7565\u5316\u3057\u3066\u307f\u307e\u3059\u3002\u6c4e\u7528\u6027\u306f\u8003\u3048\u305a\u306b\u7528\u9014\u3092\u9650\u5b9a\u3057\u307e\u3059\u3002\u30e2\u30ca\u30c9\u5316\u306f\u8003\u616e\u3057\u307e\u305b\u3093\u3002\n#load \"XmlSpreadsheetReader.fsx\"\n\nopen XmlSpreadsheetReader\n\ntype ListReaderBuilder() =\n    member this.Bind(_, f) = function x::xs -> f x xs | _ -> ()\n    member this.Zero() = fun _ -> ()\nlet listReader = ListReaderBuilder()\n\nlet persons = new System.Collections.Generic.Dictionary<string, string * string>()\nlet addPerson name data = if name <> \"\" then persons.[name] <- data\n\ntry\n    use xr = openXml \"Book1.xml\"\n    worksheets xr |> Seq.head |> ignore\n    for row in rows xr |> Seq.skip 1 do\n        row |> listReader {\n            let! company = ()\n            let! name = () in addPerson name (company, \"\u4f1a\u9577\")\n            let! name = () in addPerson name (company, \"\u793e\u9577\")\n            let! name = () in addPerson name (company, \"\u526f\u793e\u9577\")\n            let! name = () in addPerson name (company, \"\u5c02\u52d9\")\n        }\n    for p in persons do\n        printfn \"%s: %A\" p.Key p.Value\nwith e ->\n    printfn \"%A\" e\n\n\u5b9f\u884c\u7d50\u679c\u306f\u540c\u3058\u3067\u3059\u3002\n\u3082\u3046\u3061\u3087\u3063\u3068\u6574\u7406\u3067\u304d\u305d\u3046\u306a\u96f0\u56f2\u6c17\u3067\u3059\u304c\u3001\u3072\u3068\u307e\u305a\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306e\u7df4\u7fd2\u3068\u3044\u3046\u76ee\u7684\u306f\u9054\u6210\u3067\u304d\u305f\u305f\u3081\u3001\u3053\u3053\u3067\u4e00\u533a\u5207\u308a\u3068\u3057\u307e\u3059\u3002\n\u3010\u8ffd\u8a18\u3011@pocketberserker\u3055\u3093\u306b\u6539\u826f\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n\nTwitter\u3067\u6d41\u308c\u3066\u304d\u305fListReader\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306e\u89e3\u8aac - pocketberserker\u306e\u7206\u8d70 2016.06.30\n\n\n\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306a\u3057\n\u3053\u3053\u307e\u3067\u5f15\u3063\u5f35\u3063\u3066\u6765\u307e\u3057\u305f\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u3092\u4f7f\u308f\u306a\u3044\u65b9\u6cd5\u306b\u843d\u3061\u7740\u304d\u305d\u3046\u3067\u3059\u3002\n#load \"XmlSpreadsheetReader.fsx\"\n\nopen XmlSpreadsheetReader\n\nlet persons = new System.Collections.Generic.Dictionary<string, string * string>()\nlet addPerson data name = if name <> \"\" then persons.[name] <- data\n\ntry\n    use xr = openXml \"Book1.xml\"\n    worksheets xr |> Seq.head |> ignore\n    let en = (rows xr).GetEnumerator()\n    if en.MoveNext() then\n        let h = en.Current |> List.tail |> List.toArray\n        while en.MoveNext() do\n            match en.Current with\n            | company::cells ->\n                cells |> List.iteri (fun i -> addPerson (company, h.[i]))\n            | _ -> ()\n    for p in persons do\n        printfn \"%s: %A\" p.Key p.Value\nwith e ->\n    printfn \"%A\" e\n\n\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306b\u3064\u3044\u3066\u8003\u3048\u308b\u6a5f\u4f1a\u306b\u306f\u306a\u3063\u305f\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\nMap\n\u3042\u307e\u308a\u306b\u3082\u624b\u7d9a\u3079\u3063\u305f\u308a\u306a\u306e\u3067\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u5ba3\u8a00\u7684\u306b\u66f8\u3051\u306a\u3044\u304b\u3092\u8a66\u3057\u307e\u3057\u305f\u3002\n#load \"XmlSpreadsheetReader.fsx\"\n\nopen XmlSpreadsheetReader\n\nlet cutZip list1 list2 =\n    let len = min (List.length list1) (List.length list2)\n    Seq.zip (Seq.take len list1) (Seq.take len list2)\n\ntry\n    use xr = openXml \"Book1.xml\"\n    worksheets xr |> Seq.head |> ignore\n    let persons =\n        Map.ofList [\n            match rows xr |> Seq.toList with\n            | (_::h)::data ->\n                for d in data do\n                match d with\n                | company::cells ->\n                    for p, n in cutZip h cells do\n                    if n <> \"\" then yield n, (company, p)\n                | _ -> ()\n            | _ -> ()]\n    persons |> Map.iter (printfn \"%s: %A\")\nwith e ->\n    printfn \"%A\" e\n\n\n\u5b9f\u884c\u7d50\u679c\n\u4f0a\u85e4: (\"B\u793e\", \"\u793e\u9577\")\n\u4f50\u85e4: (\"A\u793e\", \"\u793e\u9577\")\n\u5c0f\u6797: (\"A\u793e\", \"\u5c02\u52d9\")\n\u5c71\u672c: (\"C\u793e\", \"\u4f1a\u9577\")\n\u5c71\u7530: (\"A\u793e\", \"\u4f1a\u9577\")\n\u6c60\u7530: (\"B\u793e\", \"\u5c02\u52d9\")\n\u9234\u6728: (\"A\u793e\", \"\u526f\u793e\u9577\")\n\u9ad8\u6a4b: (\"C\u793e\", \"\u793e\u9577\")\n\n\nDictionary\u3068\u9055\u3063\u3066\u8ffd\u52a0\u9806\u306f\u4fdd\u6301\u3055\u308c\u307e\u305b\u3093\u3002\n\u8868\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3067\u5fc5\u305a\u3057\u3082\u5168\u90e8\u306e\u30bb\u30eb\u304c\u57cb\u307e\u3063\u3066\u3044\u306a\u3044\u3082\u306e\u306e\u51e6\u7406\u3092\u3001\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306e\u7df4\u7fd2\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n#### \u7de8\u96c6\u5c65\u6b74\n\n* 2016.06.30 \u6539\u826f\u7248\u306e\u8a18\u4e8b\u3078\u306e\u30ea\u30f3\u30af\u3092\u8cbc\u308a\u307e\u3057\u305f\u3002\n* 2016.07.04 \u3053\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305f\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u30d3\u30eb\u30c0\u30fc\u306e\u4f5c\u6210\u904e\u7a0b\u3092\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n    * [\u8a66\u4f5c\u3057\u305f\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u3068\u95a2\u6570\u30e2\u30ca\u30c9](http://qiita.com/7shi/items\n/6635d6bea5c455cbb4da)\n* 2016.07.06 \u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u3092\u4f7f\u308f\u306a\u3044\u65b9\u6cd5\u3092\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n* 2016.07.07 `Map`\u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\n\n\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3068\u3057\u3066\u6271\u3046\u8868\u306fXML\u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u63d0\u4f9b\u3055\u308c\u308b\u3068\u60f3\u5b9a\u3057\u307e\u3059\u3002\u8aad\u307f\u8fbc\u307f\u306b\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u4f5c\u6210\u3057\u305f`XmlSpreadsheetReader`\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n* [XML\u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\u306e\u8aad\u307f\u8fbc\u307f](http://qiita.com/7shi/items/ad06921776b10c6e459c) 2016.06.30\n\n\u4e0a\u306e\u8a18\u4e8b\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u540c\u3058\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u793e\u540d|\u4f1a\u9577|\u793e\u9577|\u526f\u793e\u9577|\u5c02\u52d9\n----|----|----|------|----\nA\u793e|\u5c71\u7530|\u4f50\u85e4|\u9234\u6728|\u5c0f\u6797\nB\u793e||\u4f0a\u85e4||\u6c60\u7530\nC\u793e|\u5c71\u672c|\u9ad8\u6a4b||\n\n`XmlSpreadsheetReader`\u304c\u8fd4\u3059\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u9577\u3055\u304c\u4e0d\u63c3\u3044\u3067\u3059\u3002\n\n```text\n[\"\u793e\u540d\"; \"\u4f1a\u9577\"; \"\u793e\u9577\"; \"\u526f\u793e\u9577\"; \"\u5c02\u52d9\"]\n[\"A\u793e\"; \"\u5c71\u7530\"; \"\u4f50\u85e4\"; \"\u9234\u6728\"; \"\u5c0f\u6797\"]\n[\"B\u793e\"; \"\"; \"\u4f0a\u85e4\"; \"\"; \"\u6c60\u7530\"]\n[\"C\u793e\"; \"\u5c71\u672c\"; \"\u9ad8\u6a4b\"]\n```\n\n\u4eca\u56de\u306e\u76ee\u7684\u306f\u3053\u306e\u30c7\u30fc\u30bf\u304b\u3089\u540d\u524d\u3092\u30ad\u30fc\u306b\u3057\u305f\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u308b\u3053\u3068\u3067\u3059\u3002\n\n# \u5b9f\u88c5\n\n\u7279\u306b\u5de5\u592b\u3082\u305b\u305a\u30d9\u30bf\u66f8\u304d\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n```fsharp\n#load \"XmlSpreadsheetReader.fsx\"\n\nopen XmlSpreadsheetReader\n\nlet persons = new System.Collections.Generic.Dictionary<string, string * string>()\nlet addPerson name data = if name <> \"\" then persons.[name] <- data\n\ntry\n    use xr = openXml \"Book1.xml\"\n    worksheets xr |> Seq.head |> ignore\n    for row in rows xr |> Seq.skip 1 do\n        let company = row.Item 0\n        if row.Length <= 1 then () else\n        addPerson (row.Item 1) (company, \"\u4f1a\u9577\")\n        if row.Length <= 2 then () else\n        addPerson (row.Item 2) (company, \"\u793e\u9577\")\n        if row.Length <= 3 then () else\n        addPerson (row.Item 3) (company, \"\u526f\u793e\u9577\")\n        if row.Length <= 4 then () else\n        addPerson (row.Item 4) (company, \"\u5c02\u52d9\")\n    for p in persons do\n        printfn \"%s: %A\" p.Key p.Value\nwith e ->\n    printfn \"%A\" e\n```\n```text:\u5b9f\u884c\u7d50\u679c\n\u5c71\u7530: (\"A\u793e\", \"\u4f1a\u9577\")\n\u4f50\u85e4: (\"A\u793e\", \"\u793e\u9577\")\n\u9234\u6728: (\"A\u793e\", \"\u526f\u793e\u9577\")\n\u5c0f\u6797: (\"A\u793e\", \"\u5c02\u52d9\")\n\u4f0a\u85e4: (\"B\u793e\", \"\u793e\u9577\")\n\u6c60\u7530: (\"B\u793e\", \"\u5c02\u52d9\")\n\u5c71\u672c: (\"C\u793e\", \"\u4f1a\u9577\")\n\u9ad8\u6a4b: (\"C\u793e\", \"\u793e\u9577\")\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f\u305f\u307e\u305f\u307e\u540c\u59d3\u306e\u5225\u4eba\u304c\u3044\u305f\u3068\u304d\u306b\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001\u672c\u984c\u3067\u306f\u306a\u3044\u305f\u3081\u4e0d\u554f\u3068\u3057\u307e\u3059\u3002\n\n## \u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\n\n\u9577\u3055\u30c1\u30a7\u30c3\u30af\u304c\u5197\u9577\u3067\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5373\u5024\u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3082\u5fae\u5999\u3067\u3059\u3002\u3053\u308c\u3089\u3092\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u3067\u7c21\u7565\u5316\u3057\u3066\u307f\u307e\u3059\u3002\u6c4e\u7528\u6027\u306f\u8003\u3048\u305a\u306b\u7528\u9014\u3092\u9650\u5b9a\u3057\u307e\u3059\u3002\u30e2\u30ca\u30c9\u5316\u306f\u8003\u616e\u3057\u307e\u305b\u3093\u3002\n\n```fsharp\n#load \"XmlSpreadsheetReader.fsx\"\n\nopen XmlSpreadsheetReader\n\ntype ListReaderBuilder() =\n    member this.Bind(_, f) = function x::xs -> f x xs | _ -> ()\n    member this.Zero() = fun _ -> ()\nlet listReader = ListReaderBuilder()\n\nlet persons = new System.Collections.Generic.Dictionary<string, string * string>()\nlet addPerson name data = if name <> \"\" then persons.[name] <- data\n\ntry\n    use xr = openXml \"Book1.xml\"\n    worksheets xr |> Seq.head |> ignore\n    for row in rows xr |> Seq.skip 1 do\n        row |> listReader {\n            let! company = ()\n            let! name = () in addPerson name (company, \"\u4f1a\u9577\")\n            let! name = () in addPerson name (company, \"\u793e\u9577\")\n            let! name = () in addPerson name (company, \"\u526f\u793e\u9577\")\n            let! name = () in addPerson name (company, \"\u5c02\u52d9\")\n        }\n    for p in persons do\n        printfn \"%s: %A\" p.Key p.Value\nwith e ->\n    printfn \"%A\" e\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u540c\u3058\u3067\u3059\u3002\n\n\u3082\u3046\u3061\u3087\u3063\u3068\u6574\u7406\u3067\u304d\u305d\u3046\u306a\u96f0\u56f2\u6c17\u3067\u3059\u304c\u3001\u3072\u3068\u307e\u305a\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306e\u7df4\u7fd2\u3068\u3044\u3046\u76ee\u7684\u306f\u9054\u6210\u3067\u304d\u305f\u305f\u3081\u3001\u3053\u3053\u3067\u4e00\u533a\u5207\u308a\u3068\u3057\u307e\u3059\u3002\n\n\u3010\u8ffd\u8a18\u3011[@pocketberserker](https://twitter.com/pocketberserker)\u3055\u3093\u306b\u6539\u826f\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n* [Twitter\u3067\u6d41\u308c\u3066\u304d\u305fListReader\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306e\u89e3\u8aac - pocketberserker\u306e\u7206\u8d70](http://pocketberserker.hatenablog.com/entry/2016/06/30/200042) 2016.06.30\n\n## \u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306a\u3057\n\n\u3053\u3053\u307e\u3067\u5f15\u3063\u5f35\u3063\u3066\u6765\u307e\u3057\u305f\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u3092\u4f7f\u308f\u306a\u3044\u65b9\u6cd5\u306b\u843d\u3061\u7740\u304d\u305d\u3046\u3067\u3059\u3002\n\n```fsharp\n#load \"XmlSpreadsheetReader.fsx\"\n\nopen XmlSpreadsheetReader\n\nlet persons = new System.Collections.Generic.Dictionary<string, string * string>()\nlet addPerson data name = if name <> \"\" then persons.[name] <- data\n\ntry\n    use xr = openXml \"Book1.xml\"\n    worksheets xr |> Seq.head |> ignore\n    let en = (rows xr).GetEnumerator()\n    if en.MoveNext() then\n        let h = en.Current |> List.tail |> List.toArray\n        while en.MoveNext() do\n            match en.Current with\n            | company::cells ->\n                cells |> List.iteri (fun i -> addPerson (company, h.[i]))\n            | _ -> ()\n    for p in persons do\n        printfn \"%s: %A\" p.Key p.Value\nwith e ->\n    printfn \"%A\" e\n```\n\n\u30b3\u30f3\u30d4\u30e5\u30c6\u30fc\u30b7\u30e7\u30f3\u5f0f\u306b\u3064\u3044\u3066\u8003\u3048\u308b\u6a5f\u4f1a\u306b\u306f\u306a\u3063\u305f\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\n## Map\n\n\u3042\u307e\u308a\u306b\u3082\u624b\u7d9a\u3079\u3063\u305f\u308a\u306a\u306e\u3067\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u5ba3\u8a00\u7684\u306b\u66f8\u3051\u306a\u3044\u304b\u3092\u8a66\u3057\u307e\u3057\u305f\u3002\n\n```fsharp\n#load \"XmlSpreadsheetReader.fsx\"\n\nopen XmlSpreadsheetReader\n\nlet cutZip list1 list2 =\n    let len = min (List.length list1) (List.length list2)\n    Seq.zip (Seq.take len list1) (Seq.take len list2)\n\ntry\n    use xr = openXml \"Book1.xml\"\n    worksheets xr |> Seq.head |> ignore\n    let persons =\n        Map.ofList [\n            match rows xr |> Seq.toList with\n            | (_::h)::data ->\n                for d in data do\n                match d with\n                | company::cells ->\n                    for p, n in cutZip h cells do\n                    if n <> \"\" then yield n, (company, p)\n                | _ -> ()\n            | _ -> ()]\n    persons |> Map.iter (printfn \"%s: %A\")\nwith e ->\n    printfn \"%A\" e\n```\n```text:\u5b9f\u884c\u7d50\u679c\n\u4f0a\u85e4: (\"B\u793e\", \"\u793e\u9577\")\n\u4f50\u85e4: (\"A\u793e\", \"\u793e\u9577\")\n\u5c0f\u6797: (\"A\u793e\", \"\u5c02\u52d9\")\n\u5c71\u672c: (\"C\u793e\", \"\u4f1a\u9577\")\n\u5c71\u7530: (\"A\u793e\", \"\u4f1a\u9577\")\n\u6c60\u7530: (\"B\u793e\", \"\u5c02\u52d9\")\n\u9234\u6728: (\"A\u793e\", \"\u526f\u793e\u9577\")\n\u9ad8\u6a4b: (\"C\u793e\", \"\u793e\u9577\")\n```\n\n`Dictionary`\u3068\u9055\u3063\u3066\u8ffd\u52a0\u9806\u306f\u4fdd\u6301\u3055\u308c\u307e\u305b\u3093\u3002\n", "tags": ["F#"]}