{"context": " More than 1 year has passed since last update.\u524d\u56de \u306b\u5f15\u304d\u7d9a\u304d\u3001\u3061\u3087\u3063\u3068\u4fbf\u5229\u306a\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\u6295\u7a3f\u3057\u307e\u3059\u3002\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u9023\u7d50\u3057\u3066\u304f\u308c\u308bstring.Join()\nSystem.String\u30af\u30e9\u30b9\u306e\u9759\u7684\u30e1\u30bd\u30c3\u30c9 string.Join()\u306f\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u9023\u7d50\u3057\u3066\u304f\u308c\u307e\u3059\u3002\npublic static string Join(string separator, params string[] values);\npublic static string Join(string separator, params object[] values);\npublic static string Join(string separator, IEnumerable<string> values);\npublic static string Join<T>(string separator, IEnumerable<T> values);\n\n\u914d\u5217\u3092\u30ed\u30b0\u306b\u51fa\u529b\u3059\u308b\u6642\u306a\u3069\u306b\u4fbf\u5229\u3067\u3059\u3002\n\u306a\u3093\u3067\u3082\u653e\u308a\u8fbc\u3081\u308bobject \u306e\u53ef\u5909\u9577\u5f15\u6570\u3092\u53d6\u308b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3082\u3042\u308a\u307e\u3059\u3002\nvar intArray = new []{ 1, 2, 3, 4, 5, 6, 7, 8, 9 };\nvar str = string.Join( \", \", intArray );\nvar str2 = string.Join(\" : \", DateTime.Now, \"hoge\", 123, 3.141592 );\n\nConsole.WriteLine( \"intArray= [ \" + str + \" ]\" );\nConsole.WriteLine(\"objects= [ \" + str2 + \" ]\" );\n\n// > intArray= [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n// > objects= [ 2013/12/21 21:42:41 ; hoge ; 123 ; 3.141592 ]\n\n\n\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u3066\u3064\u306a\u3052\u308b\n\u5404\u8981\u7d20\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3067\u3057\u3087\u3046\u304b\u3002\nvar sqrts = Enumerable.Range(1, 10).Select(n => Math.Sqrt(n));\n//\u5c0f\u6570\u70b9\u4ee5\u4e0b3\u6841\u3067\u8868\u793a\nvar str = string.Join(\", \", sqrts.Select(x => x.ToString(\"0.000\")));\nConsole.WriteLine(str);\n\n// > 1.000, 1.414, 1.732, 2.000, 2.236, 2.449, 2.646, 2.828, 3.000, 3.162\n\n\u3053\u3046\u306a\u308b\u3068\u3001LINQ\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3067\u7e4b\u3052\u3066\u66f8\u304d\u305f\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n// \u3053\u306e\u8a9e\u9806\u306e\u65b9\u304c\u3057\u3063\u304f\u308a\u304d\u307e\u3059\u304c\u3001LINQ\u306eJoin\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n// sqrts.Select(x=>x.ToString(\"0.000\")).Join()\n// -> Aggregate\u3067\u4ee3\u7528\u3067\u304d\u307e\u3059\n\nvar str = sqrts.Select(x=>x.ToString(\"0.000\")).Aggregate((a, b)=>a + \", \" + b );\nConsole.WriteLine(str);\n\n// > 1.000, 1.414, 1.732, 2.000, 2.236, 2.449, 2.646, 2.828, 3.000, 3.162\n\n\n\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u3066\u30b9\u30c3\u30ad\u30ea\u3055\u305b\u308b\n\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306b\u306f\u306a\u3063\u305f\u3051\u308c\u3069\u3082\u3001Aggregate((a,b)=>a+\", \"+ b)  \u3092\u4f59\u8a08\u306b\u8a18\u8ff0\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u5207\u308a\u51fa\u3057\u3066\u3082\u3046\u5c11\u3057\u30b9\u30c3\u30ad\u30ea\u3055\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\npublic static class EnumerableExt\n{\n    public static string ConcatWith(this IEnumerable<double> source, string separator, string format)\n    {\n        return source.Select(x=>x.ToString(format)).Aggrigate((a,b) => a + separator + b);\n    }\n}\n\nvar sqrts = Enumerable.Range( 1, 10 ).Select( n => Math.Sqrt( n ) );\nvar str = sqrts.ConcatWith( \", \", \"0.000\" );\n\n\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306b\u3059\u308b\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306b\u3057\u3066double\u4ee5\u5916\u306b\u3082\u5bfe\u5fdc\u3055\u305b\u307e\u3057\u3087\u3046\u3002 \nIFormattable \u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u3067\u3042\u308c\u3070\u5bfe\u5fdc\u53ef\u80fd\u3067\u3059\u3002\npublic interface IFormattable\n{\n    string ToString(string format, IFormatProvider formatProvider);\n}\n\npublic static class EnumerableExt\n{\n    public static string ConcatWith<T>(this IEnumerable<T> source, string separator,\n        string format, IFormatProvider provider = null) where T : IFormattable\n    {\n        return source.Select(x => x.ToString( format, provider ))\n            .Aggrigate((a,b) => a + separator + b);\n    }\n\n    //\u3064\u3044\u3067\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u306a\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\n    public static string ConcatWith<T>(this IEnumerable<T> source, string separator)\n    {\n        return string.Join(separator, source);\n    }\n}\n\n\u4f7f\u7528\u4f8b\nConsole.WriteLine( new[]{ 1000, 1980, 3980, 4500, 6398 }.ConcatWith(\", \", \"C\") );\n\nvar sqrts = Enumerable.Range( 1, 10 ).Select( n => Math.Sqrt( n ) );\nConsole.WriteLine( sqrts.ConcatWith(\", \", \"E03\") );\n\nvar days = new[]{\n        new DateTime(2013,1,1),\n        new DateTime(2013,2,2),\n        new DateTime(2013,3,3)\n};\nvar culture = System.Globalization.CultureInfo.CreateSpecificCulture(\"en-US\");\nConsole.WriteLine(days.ConcatWith(\"  ;  \", \"D\", culture));\n\n\n// > \u00a51,000, \u00a51,980, \u00a53,980, \u00a54,500, \u00a56,398\n// > 1.000E+000, 1.414E+000, 1.732E+000, 2.000E+000, 2.236E+000, 2.449E+000, 2.646E+000, 2.828E+000, 3.000E+000, 3.162E+000\n// > Tuesday, January 1, 2013 ; Saturday, February 2, 2013 ; Sunday, March 3, 2013\n\n[\u524d\u56de] (http://qiita.com/pierusan2010/items/ff252b106a952da80084) \u306b\u5f15\u304d\u7d9a\u304d\u3001\u3061\u3087\u3063\u3068\u4fbf\u5229\u306a\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\u6295\u7a3f\u3057\u307e\u3059\u3002\n\n## \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u9023\u7d50\u3057\u3066\u304f\u308c\u308bstring.Join()\n\nSystem.String\u30af\u30e9\u30b9\u306e\u9759\u7684\u30e1\u30bd\u30c3\u30c9 string.Join()\u306f\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u9023\u7d50\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```csharp\npublic static string Join(string separator, params string[] values);\npublic static string Join(string separator, params object[] values);\npublic static string Join(string separator, IEnumerable<string> values);\npublic static string Join<T>(string separator, IEnumerable<T> values);\n```\n\u914d\u5217\u3092\u30ed\u30b0\u306b\u51fa\u529b\u3059\u308b\u6642\u306a\u3069\u306b\u4fbf\u5229\u3067\u3059\u3002\n\u306a\u3093\u3067\u3082\u653e\u308a\u8fbc\u3081\u308bobject \u306e\u53ef\u5909\u9577\u5f15\u6570\u3092\u53d6\u308b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3082\u3042\u308a\u307e\u3059\u3002\n\n```csharp\nvar intArray = new []{ 1, 2, 3, 4, 5, 6, 7, 8, 9 };\nvar str = string.Join( \", \", intArray );\nvar str2 = string.Join(\" : \", DateTime.Now, \"hoge\", 123, 3.141592 );\n\nConsole.WriteLine( \"intArray= [ \" + str + \" ]\" );\nConsole.WriteLine(\"objects= [ \" + str2 + \" ]\" );\n\n// > intArray= [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n// > objects= [ 2013/12/21 21:42:41 ; hoge ; 123 ; 3.141592 ]\n\n```\n\n### \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u3066\u3064\u306a\u3052\u308b\n\u5404\u8981\u7d20\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3067\u3057\u3087\u3046\u304b\u3002\n\n```csharp\nvar sqrts = Enumerable.Range(1, 10).Select(n => Math.Sqrt(n));\n//\u5c0f\u6570\u70b9\u4ee5\u4e0b3\u6841\u3067\u8868\u793a\nvar str = string.Join(\", \", sqrts.Select(x => x.ToString(\"0.000\")));\nConsole.WriteLine(str);\n\n// > 1.000, 1.414, 1.732, 2.000, 2.236, 2.449, 2.646, 2.828, 3.000, 3.162\n```\n\u3053\u3046\u306a\u308b\u3068\u3001LINQ\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3067\u7e4b\u3052\u3066\u66f8\u304d\u305f\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n\n```csharp\n// \u3053\u306e\u8a9e\u9806\u306e\u65b9\u304c\u3057\u3063\u304f\u308a\u304d\u307e\u3059\u304c\u3001LINQ\u306eJoin\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n// sqrts.Select(x=>x.ToString(\"0.000\")).Join()\n// -> Aggregate\u3067\u4ee3\u7528\u3067\u304d\u307e\u3059\n\nvar str = sqrts.Select(x=>x.ToString(\"0.000\")).Aggregate((a, b)=>a + \", \" + b );\nConsole.WriteLine(str);\n\n// > 1.000, 1.414, 1.732, 2.000, 2.236, 2.449, 2.646, 2.828, 3.000, 3.162\n```\n\n### \u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u3066\u30b9\u30c3\u30ad\u30ea\u3055\u305b\u308b\n\n\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306b\u306f\u306a\u3063\u305f\u3051\u308c\u3069\u3082\u3001`Aggregate((a,b)=>a+\", \"+ b)`  \u3092\u4f59\u8a08\u306b\u8a18\u8ff0\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u5207\u308a\u51fa\u3057\u3066\u3082\u3046\u5c11\u3057\u30b9\u30c3\u30ad\u30ea\u3055\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```csharp\npublic static class EnumerableExt\n{\n    public static string ConcatWith(this IEnumerable<double> source, string separator, string format)\n    {\n        return source.Select(x=>x.ToString(format)).Aggrigate((a,b) => a + separator + b);\n    }\n}\n```\n\n```csharp\nvar sqrts = Enumerable.Range( 1, 10 ).Select( n => Math.Sqrt( n ) );\nvar str = sqrts.ConcatWith( \", \", \"0.000\" );\n```\n### \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306b\u3059\u308b\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306b\u3057\u3066double\u4ee5\u5916\u306b\u3082\u5bfe\u5fdc\u3055\u305b\u307e\u3057\u3087\u3046\u3002 \nIFormattable \u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u3067\u3042\u308c\u3070\u5bfe\u5fdc\u53ef\u80fd\u3067\u3059\u3002\n\n```csharp\npublic interface IFormattable\n{\n    string ToString(string format, IFormatProvider formatProvider);\n}\n```\n\n``` csharp\npublic static class EnumerableExt\n{\n    public static string ConcatWith<T>(this IEnumerable<T> source, string separator,\n        string format, IFormatProvider provider = null) where T : IFormattable\n    {\n        return source.Select(x => x.ToString( format, provider ))\n            .Aggrigate((a,b) => a + separator + b);\n    }\n\n    //\u3064\u3044\u3067\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u306a\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\n    public static string ConcatWith<T>(this IEnumerable<T> source, string separator)\n    {\n        return string.Join(separator, source);\n    }\n}\n```\n\u4f7f\u7528\u4f8b\n\n```csharp\nConsole.WriteLine( new[]{ 1000, 1980, 3980, 4500, 6398 }.ConcatWith(\", \", \"C\") );\n\nvar sqrts = Enumerable.Range( 1, 10 ).Select( n => Math.Sqrt( n ) );\nConsole.WriteLine( sqrts.ConcatWith(\", \", \"E03\") );\n\nvar days = new[]{\n        new DateTime(2013,1,1),\n        new DateTime(2013,2,2),\n        new DateTime(2013,3,3)\n};\nvar culture = System.Globalization.CultureInfo.CreateSpecificCulture(\"en-US\");\nConsole.WriteLine(days.ConcatWith(\"  ;  \", \"D\", culture));\n\n\n// > \u00a51,000, \u00a51,980, \u00a53,980, \u00a54,500, \u00a56,398\n// > 1.000E+000, 1.414E+000, 1.732E+000, 2.000E+000, 2.236E+000, 2.449E+000, 2.646E+000, 2.828E+000, 3.000E+000, 3.162E+000\n// > Tuesday, January 1, 2013 ; Saturday, February 2, 2013 ; Sunday, March 3, 2013\n```\n", "tags": ["C#", ".NET"]}