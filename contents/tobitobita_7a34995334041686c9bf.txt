{"tags": ["Java", "JAX-RS", "Client", "OAuth", "GitHub"], "context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nJava\u3067OAuth\u3092\u884c\u3044\u305f\u3044\u3068\u304d\u3001jersey\u306eoauth2-client\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u8a8d\u8a3c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002github\u3067\u306e\u8a8d\u8a3c\u3092\u884c\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u305d\u306e\u3068\u304d\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u7d39\u4ecb\u3002\noauth2-client\u3067\u306fclient id\u3001client secret\u3092\u7528\u3044\u3066flow\u3092\u69cb\u7bc9\u3057\u3001\u305d\u306eflow\u3092start\u3001finish\u3059\u308b\u3053\u3068\u3067accessToken\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n\u6e96\u5099\npom.xml\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.glassfish.jersey</groupId>\n                <artifactId>jersey-bom</artifactId>\n                <version>2.22.1</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.glassfish.jersey.core</groupId>\n            <artifactId>jersey-client</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.glassfish.jersey.security</groupId>\n            <artifactId>oauth2-client</artifactId>\n        </dependency>\n    </dependencies>\n\n\n\u5b9f\u88c5\n\n\uff11\u3001client id, client secret\u3092\u7528\u3044\u3066flow\u3092\u69cb\u7bc9\u3059\u308b\u3002\n/**\n * \u5171\u901a\u306e\u5909\u6570\u7f6e\u304d\u5834\u3002 \u203b\u30b5\u30f3\u30d7\u30eb\u306e\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002\n */\npublic final class Shared {\n\n    /**\n     * API\u306eId\u3002\n     */\n    private static final ClientIdentifier CLIENT_IDENTIFIER;\n\n    /**\n     * OAuth2\u306e\u30d5\u30ed\u30fc\u3002\n     */\n    private static final OAuth2CodeGrantFlow FLOW;\n\n    static {\n        //  Key, Secret\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n        CLIENT_IDENTIFIER = new ClientIdentifier(\n                getEnv(\"GITHUB_CLIENT_ID\"),\n                getEnv(\"GITHUB_CLIENT_SECRET\"));\n        // github\u306e\u30d5\u30ed\u30fc\u3092\u69cb\u7bc9\u3059\u308b\u3002\n        FLOW = OAuth2ClientSupport\n                .authorizationCodeGrantFlowBuilder(CLIENT_IDENTIFIER,\n                        \"https://github.com/login/oauth/authorize\",\n                        \"https://github.com/login/oauth/access_token\")\n                // github\u3067\u8a2d\u5b9a\u3057\u305fcallback\u306eURL\u3002\n                .redirectUri(\"http://localhost:8080/sample-oauth/callback\")\n                .scope(\"user\")\n                .build();\n    }\n\n    /**\n     * github\u306eOAuth\u30d5\u30ed\u30fc\u3092\u53d6\u5f97\u3059\u308b\u3002\n     *\n     * @return OAuth\u306e\u30d5\u30ed\u30fc\u3002\n     */\n    public static OAuth2CodeGrantFlow getGithubFlow() {\n        return FLOW;\n    }\n\n    /**\n     * \u74b0\u5883\u5909\u6570\u304b\u3089\u5024\u3092\u53d6\u5f97\u3059\u308b\u3002\n     *\n     * @param key \u74b0\u5883\u5909\u6570\u306e\u30ad\u30fc\u3002\n     * @return \u74b0\u5883\u5909\u6570\u306e\u5024\u3002\n     */\n    private static String getEnv(final String key) {\n        //OS\u306b\u3088\u3063\u3066\u53d6\u5f97\u306e\u4ed5\u65b9\u304c\u9055\u3046\u306e\u30672\u6bb5\u968e\u3067\u3068\u308b\u3002\n        String value = System.getenv(key);\n        if (value == null) {\n            value = System.getProperty(key);\n        }\n        System.out.printf(\"key:%s, value:%s\\n\", key, value);\n        return value;\n    }\n}\n\n\n\uff12\u3001\u30ed\u30b0\u30a4\u30f3\nflow.start()\u3067github\u306e\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8URL\u3092\u8fd4\u3059\u306e\u3067\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3002\n/**\n * \u30ed\u30b0\u30a4\u30f3\u3059\u308b\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u3002\n */\n@WebServlet(name = \"LoginServlet\", urlPatterns = {\"/login\"})\npublic class LoginServlet extends HttpServlet {\n\n    /**\n     * Handles the HTTP <code>GET</code> method.\n     *\n     * @param request servlet request\n     * @param response servlet response\n     * @throws ServletException if a servlet-specific error occurs\n     * @throws IOException if an I/O error occurs\n     */\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        // github\u306eOAuth2\u8a8d\u8a3c\u3092\u958b\u59cb\u3059\u308b\u3002\n        final String url = Shared.getGithubFlow().start();\n        System.out.println(url);\n        // \u53d6\u5f97\u3057\u305fURL\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\uff08github\u306e\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u3078\uff09\u3002\n        response.sendRedirect(url);\n    }\n}\n\n\n\uff13\u3001github\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u51e6\u7406\n/**\n * github\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u51e6\u7406\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u3002<br>\n * \u203b\u3053\u3053\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u3092\u53d6\u5f97\u3057\u3066\u8868\u793a\u3059\u308bjsp\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3066\u3044\u308b\u3002\n */\n@WebServlet(name = \"Callback\", urlPatterns = {\"/callback\"})\npublic class CallbackServlet extends HttpServlet {\n\n    /**\n     * Handles the HTTP <code>GET</code> method.\n     *\n     * @param request servlet request\n     * @param response servlet response\n     * @throws ServletException if a servlet-specific error occurs\n     * @throws IOException if an I/O error occurs\n     */\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        // github\u3067\u306e\u30ed\u30b0\u30a4\u30f3\u5f8c\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002\n        // \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3002\n        final String accessToken = parseAccessToken(request);\n        HttpSession session = request.getSession();\n        // \u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u3078\u4fdd\u5b58\u3059\u308b\u3002\n        session.setAttribute(\"accessToken\", accessToken);\n        // \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u81ea\u5206\u81ea\u8eab\u306e\u60c5\u5831\u3092github\u304b\u3089\u53d6\u5f97\u3059\u308b\u3002\n        final GithubUser user = getUser(accessToken);\n        // \u53d6\u5f97\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u3078\u4fdd\u5b58\u3059\u308b\u3002\n        request.getSession().setAttribute(\"user\", user);\n        // \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u30da\u30fc\u30b8\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3002\n        response.sendRedirect(\"user.jsp\");\n    }\n\n    /**\n     * github\u3088\u308a\u3001\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002\n     *\n     * @param accessToken \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3002\n     * @return \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3002\n     */\n    private static GithubUser getUser(String accessToken) {\n        // json\u3092\u30d1\u30fc\u30b9\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a\u3002\n        ClientConfig config = new ClientConfig().register(JacksonFeature.class);\n        // \u8a2d\u5b9a\u60c5\u5831\u3092\u7528\u3044\u3066client\u3092\u4f5c\u6210\u3057\u3001\u3055\u3089\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u69cb\u7bc9\u3059\u308b\u3002\n        WebTarget target = ClientBuilder.newClient(config).target(\"https://api.github.com\")\n                .queryParam(\"access_token\", accessToken)\n                .path(\"/user\");\n        // \u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u3001GithubUser\u30af\u30e9\u30b9\u3067\u8fd4\u3057\u3066\u3082\u3089\u3046\u3002\n        final GithubUser user = target.request(MediaType.APPLICATION_JSON).get(GithubUser.class);\n        System.out.println(user);\n        return user;\n    }\n\n    /**\n     * AccessToken\u3092\u89e3\u6790\u3059\u308b\u3002\n     *\n     * @param request Http\u30ea\u30af\u30a8\u30b9\u30c8\n     * @return AccessToken\n     */\n    private static String parseAccessToken(HttpServletRequest request) {\n        // URL\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089code\u3001state\u3092\u53d6\u5f97\u3059\u308b\u3002\n        final String code = request.getParameter(\"code\");\n        final String state = request.getParameter(\"state\");\n        // TokenResult\u3092\u53d6\u5f97\u3059\u308b\u3002\n        final TokenResult tokenResult = Shared.getGithubFlow().finish(code, state);\n        // AccessToken\u3092\u53d6\u5f97\u3059\u308b\u3002\n        final String accessToken = tokenResult.getAccessToken();\n        System.out.printf(\"accessToken:%s\\n\", accessToken);\n        return accessToken;\n    }\n}\n\ngithub\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\uff08lombok\u4f7f\u7528\uff09\u3002\n@Data\n@XmlRootElement\npublic class GithubUser {\n\n    @XmlElement\n    private String login;\n    @XmlElement\n    private long id;\n    @XmlElement(name = \"avatar_url\")\n    private String avatarUrl;\n    @XmlElement(name = \"gravatar_id\")\n    private String gravatarId;\n    @XmlElement\n    private String url;\n    @XmlElement(name = \"html_url\")\n    private String htmlUrl;\n    @XmlElement(name = \"followers_url\")\n    private String followersUrl;\n    @XmlElement(name = \"following_url\")\n    private String followingUrl;\n    @XmlElement(name = \"gists_url\")\n    private String gistsUrl;\n    @XmlElement(name = \"starred_url\")\n    private String starredUrl;\n    @XmlElement(name = \"subscriptions_url\")\n    private String subscriptionsUrl;\n    @XmlElement(name = \"organizations_url\")\n    private String organizationsUrl;\n    @XmlElement(name = \"repos_url\")\n    private String reposUrl;\n    @XmlElement(name = \"events_url\")\n    private String eventsUrl;\n    @XmlElement(name = \"received_events_url\")\n    private String receivedEventsUrl;\n    @XmlElement\n    private String type;\n    @XmlElement(name = \"site_admin\")\n    private String siteAdmin;\n    @XmlElement\n    private String name;\n    @XmlElement\n    private String company;\n    @XmlElement\n    private String blog;\n    @XmlElement\n    private String location;\n    @XmlElement\n    private String email;\n    @XmlElement\n    private boolean hireable;\n    @XmlElement\n    private String bio;\n    @XmlElement(name = \"public_repos\")\n    private int publicRepos;\n    @XmlElement(name = \"public_gists\")\n    private int publicGists;\n    @XmlElement\n    private int followers;\n    @XmlElement\n    private int following;\n    @XmlElement(name = \"created_at\")\n    private String createdAt;\n    @XmlElement(name = \"updated_at\")\n    private String updatedAt;\n    @XmlElement(name = \"private_gists\")\n    private int privateGists;\n    @XmlElement(name = \"total_private_repos\")\n    private int totalPrivateRepos;\n    @XmlElement(name = \"owned_private_repos\")\n    private int ownedPrivateRepos;\n    @XmlElement(name = \"disk_usage\")\n    private int diskUsage;\n    @XmlElement\n    private int collaborators;\n    @XmlElement\n    private GitHubPlan plan;\n}\n\n@Data\npublic class GitHubPlan {\n\n    @XmlElement\n    private String name;\n    @XmlElement\n    private int space;\n    @XmlElement(name = \"private_repos\")\n    private int privateRepos;\n    @XmlElement\n    private int collaborators;\n}\n\n\u30e6\u30fc\u30b6\u30fc\u8868\u793aJSP\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>JSP Page</title>\n    </head>\n    <body>\n        <h1>username:${sessionScope.user.login}</h1>\n        <p><img src=\"${sessionScope.user.avatarUrl}\" width=\"120\"></p>\n    </body>\n</html>\n\n# \u6982\u8981\n\nJava\u3067OAuth\u3092\u884c\u3044\u305f\u3044\u3068\u304d\u3001jersey\u306eoauth2-client\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u8a8d\u8a3c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002github\u3067\u306e\u8a8d\u8a3c\u3092\u884c\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u305d\u306e\u3068\u304d\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u7d39\u4ecb\u3002\n\noauth2-client\u3067\u306fclient id\u3001client secret\u3092\u7528\u3044\u3066flow\u3092\u69cb\u7bc9\u3057\u3001\u305d\u306eflow\u3092start\u3001finish\u3059\u308b\u3053\u3068\u3067accessToken\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n# \u6e96\u5099\n\npom.xml\n\n```xml\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.glassfish.jersey</groupId>\n                <artifactId>jersey-bom</artifactId>\n                <version>2.22.1</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.glassfish.jersey.core</groupId>\n            <artifactId>jersey-client</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.glassfish.jersey.security</groupId>\n            <artifactId>oauth2-client</artifactId>\n        </dependency>\n    </dependencies>\n```\n\n# \u5b9f\u88c5\n\n## \uff11\u3001client id, client secret\u3092\u7528\u3044\u3066flow\u3092\u69cb\u7bc9\u3059\u308b\u3002\n\n```java\n/**\n * \u5171\u901a\u306e\u5909\u6570\u7f6e\u304d\u5834\u3002 \u203b\u30b5\u30f3\u30d7\u30eb\u306e\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002\n */\npublic final class Shared {\n\n\t/**\n\t * API\u306eId\u3002\n\t */\n\tprivate static final ClientIdentifier CLIENT_IDENTIFIER;\n\n\t/**\n\t * OAuth2\u306e\u30d5\u30ed\u30fc\u3002\n\t */\n\tprivate static final OAuth2CodeGrantFlow FLOW;\n\n\tstatic {\n\t\t//  Key, Secret\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\t\tCLIENT_IDENTIFIER = new ClientIdentifier(\n\t\t\t\tgetEnv(\"GITHUB_CLIENT_ID\"),\n\t\t\t\tgetEnv(\"GITHUB_CLIENT_SECRET\"));\n\t\t// github\u306e\u30d5\u30ed\u30fc\u3092\u69cb\u7bc9\u3059\u308b\u3002\n\t\tFLOW = OAuth2ClientSupport\n\t\t\t\t.authorizationCodeGrantFlowBuilder(CLIENT_IDENTIFIER,\n\t\t\t\t\t\t\"https://github.com/login/oauth/authorize\",\n\t\t\t\t\t\t\"https://github.com/login/oauth/access_token\")\n\t\t\t\t// github\u3067\u8a2d\u5b9a\u3057\u305fcallback\u306eURL\u3002\n\t\t\t\t.redirectUri(\"http://localhost:8080/sample-oauth/callback\")\n\t\t\t\t.scope(\"user\")\n\t\t\t\t.build();\n\t}\n\n\t/**\n\t * github\u306eOAuth\u30d5\u30ed\u30fc\u3092\u53d6\u5f97\u3059\u308b\u3002\n\t *\n\t * @return OAuth\u306e\u30d5\u30ed\u30fc\u3002\n\t */\n\tpublic static OAuth2CodeGrantFlow getGithubFlow() {\n\t\treturn FLOW;\n\t}\n\n\t/**\n\t * \u74b0\u5883\u5909\u6570\u304b\u3089\u5024\u3092\u53d6\u5f97\u3059\u308b\u3002\n\t *\n\t * @param key \u74b0\u5883\u5909\u6570\u306e\u30ad\u30fc\u3002\n\t * @return \u74b0\u5883\u5909\u6570\u306e\u5024\u3002\n\t */\n\tprivate static String getEnv(final String key) {\n\t\t//OS\u306b\u3088\u3063\u3066\u53d6\u5f97\u306e\u4ed5\u65b9\u304c\u9055\u3046\u306e\u30672\u6bb5\u968e\u3067\u3068\u308b\u3002\n\t\tString value = System.getenv(key);\n\t\tif (value == null) {\n\t\t\tvalue = System.getProperty(key);\n\t\t}\n\t\tSystem.out.printf(\"key:%s, value:%s\\n\", key, value);\n\t\treturn value;\n\t}\n}\n```\n\n## \uff12\u3001\u30ed\u30b0\u30a4\u30f3\n\nflow.start()\u3067github\u306e\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8URL\u3092\u8fd4\u3059\u306e\u3067\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3002\n\n```java\n/**\n * \u30ed\u30b0\u30a4\u30f3\u3059\u308b\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u3002\n */\n@WebServlet(name = \"LoginServlet\", urlPatterns = {\"/login\"})\npublic class LoginServlet extends HttpServlet {\n\n\t/**\n\t * Handles the HTTP <code>GET</code> method.\n\t *\n\t * @param request servlet request\n\t * @param response servlet response\n\t * @throws ServletException if a servlet-specific error occurs\n\t * @throws IOException if an I/O error occurs\n\t */\n\t@Override\n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\t// github\u306eOAuth2\u8a8d\u8a3c\u3092\u958b\u59cb\u3059\u308b\u3002\n\t\tfinal String url = Shared.getGithubFlow().start();\n\t\tSystem.out.println(url);\n\t\t// \u53d6\u5f97\u3057\u305fURL\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\uff08github\u306e\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u3078\uff09\u3002\n\t\tresponse.sendRedirect(url);\n\t}\n}\n```\n\n## \uff13\u3001github\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u51e6\u7406\n\n```java\n/**\n * github\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u51e6\u7406\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u3002<br>\n * \u203b\u3053\u3053\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u3092\u53d6\u5f97\u3057\u3066\u8868\u793a\u3059\u308bjsp\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3066\u3044\u308b\u3002\n */\n@WebServlet(name = \"Callback\", urlPatterns = {\"/callback\"})\npublic class CallbackServlet extends HttpServlet {\n\n\t/**\n\t * Handles the HTTP <code>GET</code> method.\n\t *\n\t * @param request servlet request\n\t * @param response servlet response\n\t * @throws ServletException if a servlet-specific error occurs\n\t * @throws IOException if an I/O error occurs\n\t */\n\t@Override\n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\t// github\u3067\u306e\u30ed\u30b0\u30a4\u30f3\u5f8c\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002\n\t\t// \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3002\n\t\tfinal String accessToken = parseAccessToken(request);\n\t\tHttpSession session = request.getSession();\n\t\t// \u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u3078\u4fdd\u5b58\u3059\u308b\u3002\n\t\tsession.setAttribute(\"accessToken\", accessToken);\n\t\t// \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u81ea\u5206\u81ea\u8eab\u306e\u60c5\u5831\u3092github\u304b\u3089\u53d6\u5f97\u3059\u308b\u3002\n\t\tfinal GithubUser user = getUser(accessToken);\n\t\t// \u53d6\u5f97\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u3078\u4fdd\u5b58\u3059\u308b\u3002\n\t\trequest.getSession().setAttribute(\"user\", user);\n\t\t// \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u30da\u30fc\u30b8\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3002\n\t\tresponse.sendRedirect(\"user.jsp\");\n\t}\n\n\t/**\n\t * github\u3088\u308a\u3001\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002\n\t *\n\t * @param accessToken \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3002\n\t * @return \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3002\n\t */\n\tprivate static GithubUser getUser(String accessToken) {\n\t\t// json\u3092\u30d1\u30fc\u30b9\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a\u3002\n\t\tClientConfig config = new ClientConfig().register(JacksonFeature.class);\n\t\t// \u8a2d\u5b9a\u60c5\u5831\u3092\u7528\u3044\u3066client\u3092\u4f5c\u6210\u3057\u3001\u3055\u3089\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u69cb\u7bc9\u3059\u308b\u3002\n\t\tWebTarget target = ClientBuilder.newClient(config).target(\"https://api.github.com\")\n\t\t\t\t.queryParam(\"access_token\", accessToken)\n\t\t\t\t.path(\"/user\");\n\t\t// \u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u3001GithubUser\u30af\u30e9\u30b9\u3067\u8fd4\u3057\u3066\u3082\u3089\u3046\u3002\n\t\tfinal GithubUser user = target.request(MediaType.APPLICATION_JSON).get(GithubUser.class);\n\t\tSystem.out.println(user);\n\t\treturn user;\n\t}\n\n\t/**\n\t * AccessToken\u3092\u89e3\u6790\u3059\u308b\u3002\n\t *\n\t * @param request Http\u30ea\u30af\u30a8\u30b9\u30c8\n\t * @return AccessToken\n\t */\n\tprivate static String parseAccessToken(HttpServletRequest request) {\n\t\t// URL\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089code\u3001state\u3092\u53d6\u5f97\u3059\u308b\u3002\n\t\tfinal String code = request.getParameter(\"code\");\n\t\tfinal String state = request.getParameter(\"state\");\n\t\t// TokenResult\u3092\u53d6\u5f97\u3059\u308b\u3002\n\t\tfinal TokenResult tokenResult = Shared.getGithubFlow().finish(code, state);\n\t\t// AccessToken\u3092\u53d6\u5f97\u3059\u308b\u3002\n\t\tfinal String accessToken = tokenResult.getAccessToken();\n\t\tSystem.out.printf(\"accessToken:%s\\n\", accessToken);\n\t\treturn accessToken;\n\t}\n}\n```\n\ngithub\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\uff08lombok\u4f7f\u7528\uff09\u3002\n\n```java\n@Data\n@XmlRootElement\npublic class GithubUser {\n\n\t@XmlElement\n\tprivate String login;\n\t@XmlElement\n\tprivate long id;\n\t@XmlElement(name = \"avatar_url\")\n\tprivate String avatarUrl;\n\t@XmlElement(name = \"gravatar_id\")\n\tprivate String gravatarId;\n\t@XmlElement\n\tprivate String url;\n\t@XmlElement(name = \"html_url\")\n\tprivate String htmlUrl;\n\t@XmlElement(name = \"followers_url\")\n\tprivate String followersUrl;\n\t@XmlElement(name = \"following_url\")\n\tprivate String followingUrl;\n\t@XmlElement(name = \"gists_url\")\n\tprivate String gistsUrl;\n\t@XmlElement(name = \"starred_url\")\n\tprivate String starredUrl;\n\t@XmlElement(name = \"subscriptions_url\")\n\tprivate String subscriptionsUrl;\n\t@XmlElement(name = \"organizations_url\")\n\tprivate String organizationsUrl;\n\t@XmlElement(name = \"repos_url\")\n\tprivate String reposUrl;\n\t@XmlElement(name = \"events_url\")\n\tprivate String eventsUrl;\n\t@XmlElement(name = \"received_events_url\")\n\tprivate String receivedEventsUrl;\n\t@XmlElement\n\tprivate String type;\n\t@XmlElement(name = \"site_admin\")\n\tprivate String siteAdmin;\n\t@XmlElement\n\tprivate String name;\n\t@XmlElement\n\tprivate String company;\n\t@XmlElement\n\tprivate String blog;\n\t@XmlElement\n\tprivate String location;\n\t@XmlElement\n\tprivate String email;\n\t@XmlElement\n\tprivate boolean hireable;\n\t@XmlElement\n\tprivate String bio;\n\t@XmlElement(name = \"public_repos\")\n\tprivate int publicRepos;\n\t@XmlElement(name = \"public_gists\")\n\tprivate int publicGists;\n\t@XmlElement\n\tprivate int followers;\n\t@XmlElement\n\tprivate int following;\n\t@XmlElement(name = \"created_at\")\n\tprivate String createdAt;\n\t@XmlElement(name = \"updated_at\")\n\tprivate String updatedAt;\n\t@XmlElement(name = \"private_gists\")\n\tprivate int privateGists;\n\t@XmlElement(name = \"total_private_repos\")\n\tprivate int totalPrivateRepos;\n\t@XmlElement(name = \"owned_private_repos\")\n\tprivate int ownedPrivateRepos;\n\t@XmlElement(name = \"disk_usage\")\n\tprivate int diskUsage;\n\t@XmlElement\n\tprivate int collaborators;\n\t@XmlElement\n\tprivate GitHubPlan plan;\n}\n\n@Data\npublic class GitHubPlan {\n\n\t@XmlElement\n\tprivate String name;\n\t@XmlElement\n\tprivate int space;\n\t@XmlElement(name = \"private_repos\")\n\tprivate int privateRepos;\n\t@XmlElement\n\tprivate int collaborators;\n}\n```\n\n\u30e6\u30fc\u30b6\u30fc\u8868\u793aJSP\n\n```jsp\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>JSP Page</title>\n    </head>\n    <body>\n        <h1>username:${sessionScope.user.login}</h1>\n        <p><img src=\"${sessionScope.user.avatarUrl}\" width=\"120\"></p>\n    </body>\n</html>\n```\n\n"}