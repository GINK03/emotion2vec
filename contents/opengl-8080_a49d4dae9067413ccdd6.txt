{"context": "JMockit \u306e\u4f7f\u3044\u65b9\u30e1\u30e2\u3002\n\u307e\u3068\u3081\u3068\u3044\u3066\u4f55\u3060\u3051\u3069\u3001 JMockit \u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u5f37\u529b\u306a\u6a5f\u80fd\u306f\u306a\u308b\u3079\u304f\u4f7f\u308f\u306a\u3044\u3067\u6e08\u3080\u3088\u3046\u306b\u8a2d\u8a08\uff08\u5b9f\u88c5\uff09\u3059\u308b\u3053\u3068\u304c\u3001\u7406\u60f3\u7684\u306a\u3093\u3060\u308d\u3046\u306a\u3068\u601d\u3046\u308f\u3051\u3067\u3059\u3002\n\uff08\u305f\u3076\u3093\u3001 JMockit \u306e\u6a5f\u80fd\u3092\u4e0b\u624b\u306b\u4f7f\u3044\u3059\u304e\u308b\u3068\u3001\u53ef\u8aad\u6027\u304c\u843d\u3061\u3066\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3082\u5927\u5909\u306b\u306a\u308a\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\uff09\n\u3067\u3082\u3001\u3044\u3056\u30c6\u30b9\u30c8\u56f0\u96e3\u306a\u5b9f\u88c5\u3068\u3076\u3061\u5f53\u305f\u3063\u305f\u3068\u304d\u306b\u5099\u3048\u3066\u3001\u3072\u3068\u901a\u308a\u6a5f\u80fd\u306f\u77e5\u3063\u3066\u304a\u3044\u305f\u65b9\u304c\u3044\u3044\u3068\u3082\u601d\u3046\u308f\u3051\u3067\u3059\u3002\n\u203b\u3053\u306e\u30e1\u30e2\u306f ver1.6 \u306e\u9803\u306e\u3082\u306e\u3067 2016\u5e74 12 \u6708\u73fe\u5728\u306e\u6700\u65b0\uff08ver 1.29\uff09\u3068\u306f\u7570\u306a\u308b\u70b9\u304c\u591a\u6570\u3042\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002JMockit \u306f API \u306e\u975e\u63a8\u5968\u5316\u2192\u524a\u9664\u3082\u304b\u306a\u308a\u983b\u7e41\u306b\u884c\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u4e2d\u306b\u306f\u6700\u65b0\u7248\u3067\u306f\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\n\u74b0\u5883\n\nJava\n1.7.0_40\n\nJMockit\n1.6\n\u203b\u4e00\u90e8 1.21 \u3067\u78ba\u8a8d\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\njar \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u76f4\u63a5 jar \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5834\u5408\u306f\u3001 \u3053\u3053 \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\nmaven \u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u30bb\u30f3\u30c8\u30e9\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u843d\u3068\u3059\u3002\n\n1.8\u3088\u308a\u524d\ntestCompile 'com.googlecode.jmockit:jmockit:1.6'\n\n\n\u203bver 1.8 \u304b\u3089\u30b0\u30eb\u30fc\u30d7ID \u304c com.googlecode.jmockit \u304b\u3089 org.jmockit \u306b\u5909\u308f\u3063\u3066\u307e\u3059\u3002\n\n1.8\u4ee5\u964d\ntestCompile 'org.jmockit:jmockit:1.21'\n\n\n\n\u30af\u30e9\u30b9\u30d1\u30b9\u306b\u8ffd\u52a0\u3059\u308b\n\nJDK1.6 \u4ee5\u4e0a \u304b\u3064 JUnit 4.5 \u4ee5\u4e0a\u306e\u5834\u5408\nJMockit \u306e jar \u304c JUnit \u306e jar \u3088\u308a\u5148\u306b\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u30af\u30e9\u30b9\u30d1\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\nJDK \u304c 1.5 \u3068\u304b\u3044\u3046\u6b8b\u5ff5\u306a\u74b0\u5883\u3060\u3063\u305f\u308a\u3059\u308b\u5834\u5408\u306f\u3001 JVM \u306e\u5f15\u6570\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3059\u308b\u3002\n-javaagent:<jmockit.jar \u3078\u306e\u30d1\u30b9>\n\n\u30e2\u30c3\u30af\n\n\u30e2\u30c3\u30af\u306e\u7279\u5fb4\n\n\u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u3059\u5024\n\nHoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n\n    public Fuga getFuga() {\n        return null;\n    }\n\n    public String getString() {\n        return \"HOGE\";\n    }\n\n    public Object getObject() {\n        return new Object();\n    }\n\n    public Collection<?> getCollection() {\n        return null;\n    }\n\n    public int getInt() {\n        return Integer.MAX_VALUE;\n    }\n}\n\n\n\nFuga.java\npackage sample.jmockit;\n\npublic class Fuga {\n\n    @Override\n    public String toString() {\n        return \"FUGA\";\n    }\n}\n\n\n\nJMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Mocked;\n\npublic class JMockitTest {\n\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() throws Exception {\n        System.out.println(this.hoge.getFuga());\n        System.out.println(this.hoge.getString());\n        System.out.println(this.hoge.getObject());\n        System.out.println(this.hoge.getCollection());\n        System.out.println(this.hoge.getInt());\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\nsample.jmockit.Fuga@490d6c15\nnull\nnull\n[]\n0\n\n\n\n\u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3093\u3089\u304b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u5834\u5408\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u81ea\u52d5\u7684\u306b\u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u3082\u306e\u306b\u306a\u308b\u3002\n\n\n\ngetFuga() \u3067\u53d6\u5f97\u3057\u305f Fuga \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u308b\u3002\n\nFuga#toString() \u306e\u52d5\u4f5c\u304c\u672c\u6765\u306e\u5b9f\u88c5\u3068\u9055\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\u3053\u308c\u3092\u30ab\u30b9\u30b1\u30fc\u30c7\u30a3\u30f3\u30b0\uff08Cascading\uff09\u3068\u547c\u3076\u3002\n\u4ee5\u524d\u306f @Cascading \u3068\u3044\u3046\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u304b\u3063\u305f\u304c\u3001 ver 1.14 \u304b\u3089\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30ab\u30b9\u30b1\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u6709\u52b9\u306b\u306a\u3063\u305f\u3002\n\n\n\u305f\u3060\u3057\u3001 String \u3068 Object \u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f null \u3092\u8fd4\u3059\u3002\n\u307e\u305f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u7a7a\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u8fd4\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\uff08int \u3084 long \u306a\u3089 0, boolean \u306a\u3089 false \u306a\u3069\uff09\u3092\u8fd4\u3059\u3002\n\u672c\u6765\u306e\u5b9f\u88c5\u306f\u4e00\u5207\u5b9f\u884c\u3055\u308c\u306a\u304f\u306a\u308b\u3002\n\n\n\u30e2\u30c3\u30af\u304c\u8fd4\u3059\u5024\u3092 null \u306b\u3057\u305f\u3044\u5834\u5408\n\nJMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\n\npublic class JMockitTest {\n\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() throws Exception {\n        new NonStrictExpectations() {{\n            hoge.getFuga(); result = null;\n        }};\n\n        System.out.println(this.hoge.getFuga());\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\nnull\n\n\n\n\u30ab\u30b9\u30b1\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u81ea\u52d5\u7684\u306b\u30e2\u30c3\u30af\u304c\u8fd4\u308b\u306e\u3092\u6b62\u3081\u305f\u3044\u5834\u5408\u306f\u3001 Expectations \u3092\u4f7f\u3063\u3066\u660e\u793a\u7684\u306b\u623b\u308a\u5024\u3092 null \u306b\u3059\u308b\u3002\n\nresult \u306e\u52d5\u4f5c\u3082\u4ee5\u524d\u8abf\u3079\u305f\u3068\u304d\u3068\u306f\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u3067 \u3053\u3061\u3089 \u3092\u53c2\u7167\u3002\n\n\nfinal \u4fee\u98fe\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3082\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\n\nParent.java\npackage sample.jmockit;\n\npublic class Parent {\n\n    public static String PARENT_CLASS_FIELD = \"parent class field\";\n    public String parentInstanceField = \"parent instance field\";\n\n    public static String parentClassMethod() {\n        return \"Parent#parentClassMethod()\";\n    }\n\n    public String parentInstanceMethod() {\n        return \"Parent#parentInstanceMethod()\";\n    }\n}\n\n\n\nChild.java\npackage sample.jmockit;\n\npublic class Child extends Parent {\n\n    public static int CLASS_FIELD = -1;\n    public int instanceField = -1;\n\n    public static int classMethod() {\n        return -1;\n    }\n\n    public int instanceMethod() {\n        return -1;\n    }\n\n    public final int finalInstanceMethod() {\n        return -1;\n    }\n}\n\n\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Mocked private Child child;\n\n    @Test\n    public void test() {\n        System.out.println(\"finalInstanceMethod() = \" + child.finalInstanceMethod());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nfinalInstanceMethod() = 0\n\n\n\nfinal \u4fee\u98fe\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3082\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u306a\u308b\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Mocked private Child child;\n\n    @Test\n    public void test() {\n        System.out.println(\"instanceField = \" + child.instanceField);\n        System.out.println(\"parentInstanceField = \" + child.parentInstanceField);\n        System.out.println(\"CLASS_FIELD = \" + Child.CLASS_FIELD);\n        System.out.println(\"PARENT_CLASS_FIELD = \" + Child.PARENT_CLASS_FIELD);\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\ninstanceField = 0\nparentInstanceField = null\nCLASS_FIELD = -1\nPARENT_CLASS_FIELD = parent class field\n\n\n\n\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3068\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\u3067\u3082\u3001\u30af\u30e9\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u5909\u5316\u3057\u306a\u3044\u3002\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308b\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Mocked private Child mock;\n\n    @Test\n    public void test() {\n        Child child = new Child();\n        System.out.println(\"child.instanceMethod() = \" + child.instanceMethod());\n\n        Parent parent = new Parent();\n        System.out.println(\"parent.parentInstanceMethod() = \" + parent.parentInstanceMethod());\n\n        System.out.println(\"(this.mock == child) = \" + (this.mock == child));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nchild.instanceMethod() = 0\nparent.parentInstanceMethod() = Parent#parentInstanceMethod()\n(this.mock == child) = false\n\n\n\n\u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u3001 \u65b0\u3057\u3044\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308b\u3002\n\u89aa\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u305d\u306e\u307e\u307e\u3002\n\n\n\u30e2\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\u65b9\u6cd5\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u3067 @Mocked \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\n\nJmockitTest.java\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class JmockitTest {\n\n    public static class TestClass1 {\n        @Mocked private Child child;\n\n        @Test\n        public void test1() {\n            Child child = new Child();\n            System.out.println(\"TestClass1#test1() : \" + child.instanceMethod());\n        }\n\n        @Test\n        public void test2() {\n            Child child = new Child();\n            System.out.println(\"TestClass1#test2() : \" + child.instanceMethod());\n        }\n    }\n\n    public static class TestClass2 {\n        @Test\n        public void test1() {\n            Child child = new Child();\n            System.out.println(\"TestClass2#test1() : \" + child.instanceMethod());\n        }\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\nTestClass1#test1() : 0\nTestClass1#test2() : 0\nTestClass2#test1() : -1\n\n\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u306b @Mocked \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u3068\u3001\u305d\u306e\u30af\u30e9\u30b9\u306f\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n\n@Mocked \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3064\u3051\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u81ea\u52d5\u3067\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3002\n\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u305d\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u5185\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3067\u306e\u307f\u6709\u52b9\u3002\n\n\n\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3067\u5b9a\u7fa9\u3059\u308b\n\nJmockitTest.java\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Test\n    public void test1(@Mocked Child child) {\n        Child mock = new Child();\n        System.out.println(\"test1() : \" + mock.instanceMethod());\n    }\n\n    @Test\n    public void test2() {\n        Child child = new Child();\n        System.out.println(\"test2() : \" + child.instanceMethod());\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\ntest1() : 0\ntest2() : -1\n\n\n\n\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u5f15\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u305d\u306e\u5f15\u6570\u306e\u30af\u30e9\u30b9\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n\n@Mocked \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u7701\u7565\u53ef\u80fd\uff08\u3067\u3082\u8b66\u544a\u304c\u3067\u308b\uff09\u3002\n\u30e2\u30c3\u30af\u306f\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u5185\u306e\u307f\u6709\u52b9\u3002\n\n\n@Injectable \u3067\u7279\u5b9a\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3060\u3051\u30e2\u30c3\u30af\u5316\u3059\u308b\nver 1.21 \u3067\u52d5\u4f5c\u78ba\u8a8d\n\nHoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n\n    public String getString() {\n        return \"HOGE\";\n    }\n}\n\n\n\nJMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Injectable;\n\npublic class JMockitTest {\n\n    @Injectable\n    private Hoge hoge;\n\n    @Test\n    public void test() throws Exception {\n        System.out.println(this.hoge.getString());\n        System.out.println(new Hoge().getString());\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\nnull\nHOGE\n\n\n\n\n@Injectable \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u3060\u3051\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u5834\u6240\u3067\u5225\u9014 new \u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u30e2\u30c3\u30af\u304b\u3055\u308c\u306a\u3044\u3002\n\n\n@Tested \u3067\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\nver 1.21 \u3067\u52d5\u4f5c\u78ba\u8a8d\n\n\u57fa\u672c\n\nHoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n\n    private Hoge() {\n        System.out.println(\"Hoge Constructor\");\n    }\n\n    @Override\n    public String toString() {\n        return \"HOGE\";\n    }\n}\n\n\n\nJMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Tested;\n\npublic class JMockitTest {\n\n    @Tested\n    private Hoge hoge;\n\n    @Test\n    public void test() throws Exception {\n        System.out.println(this.hoge);\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\nHoge Constructor\nHOGE\n\n\n\n\n@Tested \u3067\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3068\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u3066\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3055\u308c\u308b\u3002\n\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u4f7f\u7528\u3059\u308b\u3002\n\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u3001\u666e\u901a\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u308b\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\n\nprivate \u3067\u554f\u984c\u306a\u3044\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5b58\u5728\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n\n\u305f\u3060\u3057\u3001 @Injectable \u3067\u5ba3\u8a00\u3055\u308c\u305f\u30af\u30e9\u30b9\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u5c11\u3057\u6761\u4ef6\u304c\u5909\u308f\u308b\uff08\u8a73\u7d30\u5f8c\u8ff0\uff09\u3002\n\n\n\n\n\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3064\u5834\u5408\n\nHoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n\n    private Fuga fuga;\n    private Piyo piyo;\n    private String string;\n\n    public void print() {\n        System.out.println(\"fuga=\" + this.fuga);\n        System.out.println(\"piyo=\" + this.piyo);\n        System.out.println(\"string=\" + this.string);\n    }\n}\n\n\n\nFuga.java\npackage sample.jmockit;\n\npublic class Fuga {\n\n    @Override\n    public String toString() {\n        return \"FUGA\";\n    }\n}\n\n\n\nPiyo.java\npackage sample.jmockit;\n\npublic class Piyo {\n}\n\n\n\nJMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Injectable;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport mockit.Tested;\n\npublic class JMockitTest {\n\n    @Tested\n    private Hoge hoge;\n    @Injectable\n    private Fuga fuga;\n    @Mocked\n    private Piyo piyo;\n\n    @Test\n    public void test() throws Exception {\n        new NonStrictExpectations() {{\n            fuga.toString(); result = \"Mocked Fuga\";\n        }};\n\n        this.hoge.print();\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\nfuga=Mocked Fuga\npiyo=null\nstring=null\n\n\n\n\n@Tested \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u3001 @Injectable \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u3082\u306e\u3068\u540c\u3058\u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3064\u5834\u5408\u3001\u81ea\u52d5\u7684\u306b\u30e2\u30c3\u30af\u304c\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3055\u308c\u308b\u3002\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u6761\u4ef6\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\n\n\n\u5b58\u5728\u3059\u308b\uff1aOK\n\u5b58\u5728\u3057\u306a\u3044\n\n\n\n@Injetable \u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u3092\u5f15\u6570\u306b\u53d7\u3051\u53d6\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\n\n\n\u5b58\u5728\u3059\u308b\uff1aOK\n\u5b58\u5728\u3057\u306a\u3044\uff1aNG\n\n\n\n\n\n\n\n\nExpectations\n\n\nHoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n    public String method() {\n        return \"hoge\";\n    }\n\n    public String method(String parameter) {\n        return parameter;\n    }\n}\n\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u901a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new Expectations() {{\n            hoge.method(\"hoge\");\n        }};\n\n        hoge.method(\"hoge\");\n    }\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u901a\u308a\u306e\u5f15\u6570\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        new Expectations() {{\n            hoge.method(\"hoge\");\n        }};\n\n        hoge.method(\"fuga\");\n    }\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u901a\u308a\u306e\u9806\u756a\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        new Expectations() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n\n        hoge.method(\"hoge\");\n        hoge.method();\n    }\n\n    @Test\n    public void \u8a18\u9332\u3067\u4f7f\u7528\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        new Expectations() {{\n            hoge.method();\n        }};\n\n        Hoge other = new Hoge();\n        other.method();\n    }\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u56de\u6570\u3068\u5b9f\u884c\u3057\u305f\u56de\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        new Expectations() {{\n            hoge.method();\n        }};\n\n        hoge.method();\n        hoge.method();\n    }\n}\n\n\n\nExpectations \u3092\u4f7f\u3046\u3068\u3001\u671f\u5f85\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u3092\u8a18\u9332\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3001\u5f15\u6570\u306e\u5024\u3001\u547c\u3073\u51fa\u3057\u56de\u6570\u3001\u547c\u3073\u51fa\u3057\u9806\u5e8f\u306a\u3069\u304c \u53b3\u5bc6\u306b\u8a18\u9332\u3057\u305f\u901a\u308a\u306b \u5b9f\u884c\u3055\u308c\u306a\u3044\u3068\u3001\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b\u3002\n\n\nNonStrictExpectations\n\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u304f\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new NonStrictExpectations() {{\n            hoge.method();\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u901a\u308a\u306e\u5f15\u6570\u3067\u5b9f\u884c\u3057\u306a\u304f\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new NonStrictExpectations() {{\n            hoge.method(\"hoge\");\n        }};\n\n        hoge.method(\"fuga\");\n    }\n\n    @Test\n    public void \u8a18\u9332\u3067\u4f7f\u7528\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u5b9f\u884c\u3055\u308c\u306a\u304f\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new NonStrictExpectations() {{\n            hoge.method();\n        }};\n\n        Hoge other = new Hoge();\n        other.method();\n    }\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u56de\u6570\u3068\u5b9f\u884c\u3057\u305f\u56de\u6570\u304c\u7570\u306a\u3063\u3066\u3044\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new NonStrictExpectations() {{\n            hoge.method();\n        }};\n\n        hoge.method();\n        hoge.method();\n    }\n}\n\n\n\u57fa\u672c\u7684\u306b\u306f Expectations \u3068\u540c\u3058\u8981\u9818\u3067\u4f7f\u3048\u308b\u3002\n\nExpectations \u3068\u306f\u7570\u306a\u308a\u3001\u6307\u5b9a\u3057\u305f\u901a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u304f\u3066\u3082\u3001\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b\u3002\n\u4e3b\u306b\u3001\u30b9\u30bf\u30d6\u3092\u4f5c\u6210\u3057\u305f\u3044\u3068\u304d\u306a\u3069\u306b\u5229\u7528\u3059\u308b\u3002\n\n\u203bNonStrictExpectations \u306f ver1.23 \u3067\u975e\u63a8\u5968\u3068\u306a\u308a\u3001 ver1.25 \u3067\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002Expectations \u306e\u671f\u5f85\u64cd\u4f5c\u5b9f\u884c\u56de\u6570\u3092 minTimes = 0 \u3068\u3059\u308b\u3053\u3068\u3067 NonStrictExpectations \u3092\u4ee3\u66ff\u3067\u304d\u307e\u3059\uff08@7tsuno \u3055\u3093\u306e\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d9\u30fc\u30b9\u306b\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\uff09\u3002\n\n\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u3092\u8a18\u9332\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {{\n            hoge.method();\n        }};\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nmockit.internal.MissingInvocation: Missing invocation of:\nsample.jmockit.Hoge#method()\n   on mock instance: sample.jmockit.Hoge@32e701fb\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\n\n\nExpectations \u307e\u305f\u306f NonStrictExpectations \u306e\u533f\u540d\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u521d\u671f\u5316\u30d6\u30ed\u30c3\u30af\u5185\u3067\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\n\u4e0a\u8a18\u4f8b\u306e\u5834\u5408\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3057\u3066\u3044\u308b\u3002\n\n\n\u671f\u5f85\u3055\u308c\u308b\u52d5\u4f5c\u306e\u5b9f\u884c\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                times = 3;\n            }\n        };\n        hoge.method();\n        hoge.method();\n        hoge.method();\n    }\n}\n\n\n\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u9332\u3057\u305f\u76f4\u5f8c\u306b\u3001 times \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6570\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\nExpectations \u3067 times \u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001 times = 1 \u3092\u6307\u5b9a\u3057\u305f\u3053\u3068\u3068\u540c\u3058\u306b\u306a\u308b\u3002\n\n\uff11\u56de\u3082\u5b9f\u884c\u3055\u308c\u306a\u3044 \u3053\u3068\u3092\u671f\u5f85\u3057\u305f\u3044\u5834\u5408\u306f times = 0 \u3068\u6307\u5b9a\u3059\u308b\u3002\n\ntimes \u306b\u8ca0\u6570\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u56de\u6570\u306e\u30c1\u30a7\u30c3\u30af\u306f\u884c\u308f\u308c\u306a\u304f\u306a\u308b\u3002\n\n\n\u6700\u5c0f\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                minTimes = 2;\n            }\n        };\n        hoge.method();\n        hoge.method();\n        hoge.method();\n    }\n}\n\n\n\nminTimes \u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u300c\u6700\u4f4e\u3067\u3082\u5b9f\u884c\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u300d\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n\n\u6700\u5927\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                maxTimes = 2;\n            }\n        };\n        hoge.method();\n        hoge.method();\n    }\n}\n\n\n\nmaxTimes \u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u300c\u5b9f\u884c\u3055\u308c\u3066\u826f\u3044\u6700\u5927\u306e\u56de\u6570\u300d\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\nmaxTimes \u3092\u6307\u5b9a\u3057\u3066\uff11\u56de\u3082\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\u3002\n\n\nminTimes \u3068 maxTimes \u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                minTimes = 1;\n                maxTimes = 3;\n            }\n        };\n        hoge.method();\n        hoge.method();\n    }\n}\n\n\n\nminTimes \u3068 maxTimes \u306f\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3067\u304d\u308b\u3002\n\u4e0a\u8a18\u4f8b\u306e\u5834\u5408\u3001 1 \uff5e 3 \u56de\u306f\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u3092\u30c0\u30df\u30fc\u306b\u5dee\u3057\u66ff\u3048\u308b\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3092\u6307\u5b9a\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method() = mock\n\n\n\n\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u9332\u3057\u305f\u76f4\u5f8c\u306b\u3001 result \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u623b\u308a\u5024\u306f\u6307\u5b9a\u3067\u304d\u306a\u3044\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                new Hoge();\n                result = hoge;\n            }\n        };\n        System.out.println(\"(this.hoge == new Hoge()) = \" + (this.hoge == new Hoge()));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n(this.hoge == new Hoge()) = false\n\n\n\n\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u7570\u306a\u308b\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\n\n\u3010\u3053\u306e\u65b9\u6cd5\u306f\u6700\u65b0\u7248\u3067\u306f\u4f7f\u3048\u307e\u305b\u3093\u3011result \u306b\u9023\u7d9a\u3057\u3066\u5024\u3092\u4ee3\u5165\u3059\u308b\n\n\u8ffd\u8a18\uff1a\u3053\u306e\u65b9\u6cd5\u306f\u6700\u65b0\u7248\uff08ver 1.21 \u3067\u78ba\u8a8d\uff09\u3067\u306f\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b returns() \u30e1\u30bd\u30c3\u30c9 \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method();\n                result = \"1\";\n                result = \"2\";\n                result = \"3\";\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\uff081.21\u3067\u306e\u52d5\u4f5c\uff09\nhoge.method() = 3\nhoge.method() = 3\nhoge.method() = 3\nhoge.method() = 3\n\n\n\n\u6700\u5f8c\u306b\u8a18\u9332\u3057\u305f\u5024\u304c\u5e38\u306b\u8fd4\u3055\u308c\u308b\u3002\n\n\n\u5b9f\u884c\u7d50\u679c\uff081.6\u306e\u9803\u306e\u52d5\u4f5c\uff09\nhoge.method() = 1\nhoge.method() = 2\nhoge.method() = 3\nhoge.method() = 3\n\n\n\nresult \u306b\u7d9a\u3051\u3066\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u56de\u6570\u306b\u5408\u308f\u305b\u3066\u623b\u308a\u5024\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nresult \u306b\u4ee3\u5165\u3057\u305f\u56de\u6570\u4ee5\u4e0a\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u6700\u5f8c\u306b result \u306b\u4ee3\u5165\u3057\u305f\u5024\u304c return \u3055\u308c\u7d9a\u3051\u308b\u3002\n\n\nreturns() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\n\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method();\n                returns(\"a\", \"b\", \"c\");\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method() = a\nhoge.method() = b\nhoge.method() = c\nhoge.method() = c\n\n\n\n\nreturns() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001\u5f15\u6570\u306b\u6e21\u3057\u305f\u9806\u5e8f\u3067\u623b\u308a\u5024\u304c\u8fd4\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\nresult \u306b\u914d\u5217\uff08\u30ea\u30b9\u30c8\uff09\u3092\u4ee3\u5165\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method();\n                result = new String[] { \"A\", \"B\", \"C\" };\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method() = A\nhoge.method() = B\nhoge.method() = C\nhoge.method() = C\n\n\n\n\nresult \u306b\u914d\u5217\u307e\u305f\u306f\u30ea\u30b9\u30c8\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001 result \u306b\u8907\u6570\u56de\u4ee3\u5165\u3059\u308b\u306e\u3068\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\n\u305f\u3060\u3057\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u914d\u5217\u3084\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\u5834\u5408\u306f\u4f7f\u3048\u306a\u3044\u3002\n\n\n\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3089\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                result = new NullPointerException(\"sample\");\n            }\n        };\n        hoge.method();\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\njava.lang.NullPointerException: sample\n    at sample.jmockit.Hoge.method(Hoge.java)\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\n\n\nresult \u306b\u4f8b\u5916\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u76f4\u524d\u306b\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u4ee3\u5165\u3057\u305f\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n\n\nreturns() \u3067\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                returns(\"hoge\", new NullPointerException(\"sample\"));\n            }\n        };\n        System.out.println(hoge.method());\n        System.out.println(hoge.method());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\njava.lang.ClassCastException: java.lang.NullPointerException cannot be cast to java.lang.String\n    at sample.jmockit.Hoge.method(Hoge.java)\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\n\n\nNullPointerException \u3092 Hoge#method() \u306e\u623b\u308a\u5024\u578b\u3067\u3042\u308b String \u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3088\u3046\u3068\u3057\u3066 ClassCastException \u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3002\n\n\nDelegate \u3092\u4f7f\u3063\u3066\u30e2\u30c3\u30af\u5316\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u3092\u6307\u5b9a\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Delegate;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method(\"hoge\");\n                result = new Delegate<String>() {\n                    public String delegate(String parameter) {\n                        System.out.println(\"[Delegate] parameter = \" + parameter);\n                        return \"delegate mock\";\n                    }\n                };\n            }\n        };\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n[Delegate] parameter = hoge\nhoge.method(\"hoge\") = delegate mock\n\n\n\nresult \u306b Delegate \u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3068\u3001\u76f4\u524d\u306b\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u969b\u306b Delegate \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\uff08\u4eee\u306b Delegate \u30e1\u30bd\u30c3\u30c9 \u3068\u547c\u3076\uff09\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\nDelegate \u30e1\u30bd\u30c3\u30c9\u306e\u53ef\u8996\u6027\u306f\u975e private \u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u975e private \u306a\u30e1\u30bd\u30c3\u30c9\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u3068\u3001\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nDelegate \u30e1\u30bd\u30c3\u30c9\u306e\u540d\u524d\u306f\u4f55\u3067\u3082\u826f\u3044\u3002\nDelegate \u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u3001\u4f7f\u7528\u3057\u306a\u3044\u306a\u3089\u5ba3\u8a00\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u3002\nDelegate \u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u306f void \u3067\u3082\u826f\u3044\uff08\u305d\u306e\u5834\u5408\u3001\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306f null \u3092\u8fd4\u3059\uff09\u3002\nDelegate \u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u3001\u5b9f\u884c\u6642\u306b ClassCastException \u304c\u767a\u751f\u3059\u308b\u3002\n\n\n\u5f15\u6570\u306e\u30de\u30c3\u30c1\u30f3\u30b0\n\n\u57fa\u672c\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method(\"hoge\");\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n        System.out.println(\"hoge.method(\\\"fuga\\\") = \" + hoge.method(\"fuga\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"hoge\") = mock\nhoge.method(\"fuga\") = null\n\n\n\n\u8a18\u9332\u6642\u306b\u4f7f\u7528\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3082\u3001\u691c\u8a3c\u306e\u3068\u304d\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u5bfe\u8c61\u3068\u306a\u308b\u3002\n\nresult \u3067\u6307\u5b9a\u3057\u305f\u5024\u306f\u3001\u5f15\u6570\u3082\u542b\u3081\u8a18\u9332\u3057\u305f\u3068\u304a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306b\u9650\u308a\u9069\u7528\u3055\u308c\u308b\u3002\n\n\nany \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3063\u3066\u4efb\u610f\u306e\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3055\u305b\u308b\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(anyString);\n                result = \"1\";\n                result = \"2\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n        System.out.println(\"hoge.method(\\\"fuga\\\") = \" + hoge.method(\"fuga\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"hoge\") = 1\nhoge.method(\"fuga\") = 2\n\n\n\n\nExpectations \u304a\u3088\u3073 NonStrictExpectations \u306b\u306f any\uff5e \u3068\u3044\u3046\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u305d\u308c\u3092\u8a18\u9332\u6642\u306e\u5f15\u6570\u306b\u4f7f\u7528\u3059\u308b\u3068\u3001\u4efb\u610f\u306e\u5024\u306b\u30de\u30c3\u30c1\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nany\uff5e \u306f\u6b21\u306e\uff13\u7a2e\u985e\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\n\n\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\uff08anyInt \u3001 anyBoolean \u306a\u3069\uff09\nString \u578b\uff08anyString\uff09\nObject \u578b\uff08any\uff09\n\n\n\u300c\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u300d\u30fb\u300cString \u578b\u300d\u4ee5\u5916\u306e\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30de\u30c3\u30c1\u3055\u305b\u305f\u3044\u5834\u5408\u306f (Hoge)any \u3068\u3044\u3046\u3075\u3046\u306b\u3001 Object \u578b\u306e any \u3092\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u4f7f\u7528\u3059\u308b\u3002\n\n\nwith\uff5e() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3059\u308b\n\nwith(Object)\n\npackage sample.jmockit;\n\nimport static org.hamcrest.Matchers.*;\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method((String) with(not(\"hoge\")));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"fuga\\\") = \" + hoge.method(\"fuga\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"fuga\") = mock\n\n\n\nHamcrest \u306e Matcher \u3092\u4f7f\u3063\u3066\u5f15\u6570\u3092\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\nwithAny(T)\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withAny(\"any string\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"test\\\") = \" + hoge.method(\"test\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"test\") = mock\n\n\n\n\nwithAny() \u306e\u5f15\u6570\u306b\u6e21\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u540c\u3058\u30af\u30e9\u30b9\u3001\u307e\u305f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n\nwithEqual(double, double)\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                fuga.method(withEqual(1.0, 0.5));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.method(1.5) = \" + fuga.method(1.5));\n    }\n\n    public static class Fuga {\n        public String method(double d) {\n            return \"fuga\";\n        }\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nfuga.method(1.5) = mock\n\n\n\n\u7b2c\u4e00\u5f15\u6570\u3067\u57fa\u6e96\u3068\u306a\u308b\u5024\u3092\u6307\u5b9a\u3057\u3001\u7b2c\u4e8c\u5f15\u6570\u3067\u30e2\u30c3\u30af\u5316\u306e\u5bfe\u8c61\u3068\u306a\u308b\u524d\u5f8c\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u4e0a\u8a18\u4f8b\u306e\u5834\u5408 0.5 \uff5e 1.5 \u304c\u30de\u30c3\u30c1\u3059\u308b\u3002\nfloat \u7248\u3082\u3042\u308b\u3002\n\n\nwithInstanceOf(Class)\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                fuga.method(withInstanceOf(Parent.class));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.method(new Child()) = \" + fuga.method(new Child()));\n    }\n\n    public static class Fuga {\n        public String method(Parent parent) {\n            return \"fuga\";\n        }\n    }\n\n    public static class Parent {\n    }\n\n    public static class Child extends Parent {\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nfuga.method(new Child()) = mock\n\n\n\n\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u3001\u307e\u305f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n\nwithNotEqual(T)\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withNotEqual(\"hoge\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"fuga\\\") = \" + hoge.method(\"fuga\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"fuga\") = mock\n\n\n\n\u6307\u5b9a\u3057\u305f\u5024 \u3067\u306f\u306a\u3044 \u5024\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n\nwithNotNull()\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method((String) withNotNull());\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"some string\\\") = \" + hoge.method(\"some string\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"some string\") = mock\n\n\n\nnull \u3067\u306a\u3044\u5024\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n\n<T extends CharSequence> withMatch(T)\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withMatch(\"[0-9]+\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"321\\\") = \" + hoge.method(\"321\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"321\") = mock\n\n\n\n\u6b63\u898f\u8868\u73fe\u3067\u30de\u30c3\u30c1\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n\n<T extends CharSequence> withPrefix(T)\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withPrefix(\"hoge\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"hogeString\\\") = \" + hoge.method(\"hogeString\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"hogeString\") = mock\n\n\n\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u59cb\u307e\u308b\u6587\u5b57\u5217\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n\n<T extends CharSequence> withSuffix(T)\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withSuffix(\"hoge\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"stringhoge\\\") = \" + hoge.method(\"stringhoge\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"stringhoge\") = mock\n\n\n\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u7d42\u308f\u308b\u6587\u5b57\u5217\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n\n<T extends CharSequence> withSubstring(T)\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withSubstring(\"hoge\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"Abc hoge xyZ\\\") = \" + hoge.method(\"Abc hoge xyZ\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(\"Abc hoge xyZ\") = mock\n\n\n\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3092\u9593\u306b\u542b\u3080\u6587\u5b57\u5217\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n\nwithSameInstance(T)\n\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        final Fuga fuga = new Fuga();\n        new Expectations() {\n            {\n                hoge.method(withSameInstance(fuga));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(fuga) = \" + hoge.method(fuga));\n    }\n\n    public static class Hoge {\n        public String method(Fuga fuga) {\n            return \"hoge\";\n        }\n    }\n\n    public static class Fuga {\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method(fuga) = mock\n\n\n\n\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u5168\u304f\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff08== \u3067\u6bd4\u8f03\uff09\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\u666e\u901a\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u306f equals(Object) \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u6bd4\u8f03\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3002\n\n\n\u4e00\u90e8\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\uff08\u90e8\u5206\u30e2\u30c3\u30af\u5316\uff09\n\n\u9759\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked(\"method()\")\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                fuga.method();\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.method() = \" + fuga.method());\n        System.out.println(\"fuga.method2() = \" + fuga.method2());\n    }\n\n    public static class Fuga {\n        public String method() {\n            return \"fuga\";\n        }\n\n        public String method2() {\n            return \"FUGA\";\n        }\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nfuga.method() = mock\nfuga.method2() = FUGA\n\n\n\n\n@Mock \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e value \u5c5e\u6027\u306b\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3055\u305b\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u8868\u3059\u6587\u5b57\u5217\u3092\u6e21\u3059\u3068\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\nvalue \u5c5e\u6027\u306f String \u306e\u914d\u5217\u306a\u306e\u3067\u3001\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\n\n\n\u5f15\u6570\u304c\u5b58\u5728\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked(\"method(String)\")\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                fuga.method(\"fuga\");\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.method() = \" + fuga.method());\n        System.out.println(\"fuga.method(\\\"fuga\\\") = \" + fuga.method(\"fuga\"));\n    }\n\n    public static class Fuga {\n        public String method() {\n            return \"fuga\";\n        }\n\n        public String method(String value) {\n            return value;\n        }\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nfuga.method() = fuga\nfuga.method(\"fuga\") = mock\n\n\n\n\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u3066\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked(\"mock.*\")\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                fuga.mockTargetAlpha();\n                result = \"mock\";\n                fuga.mockTargetBeta();\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.mockTargetAlpha() = \" + fuga.mockTargetAlpha());\n        System.out.println(\"fuga.mockTargetBeta() = \" + fuga.mockTargetBeta());\n        System.out.println(\"fuga.notMockTarget() = \" + fuga.notMockTarget());\n    }\n\n    public static class Fuga {\n        public String mockTargetAlpha() {\n            return \"fuga\";\n        }\n\n        public String mockTargetBeta() {\n            return \"FUGA\";\n        }\n\n        public String notMockTarget() {\n            return \"Fuga\";\n        }\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nfuga.mockTargetAlpha() = mock\nfuga.mockTargetBeta() = mock\nfuga.notMockTarget() = Fuga\n\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked(\"(String)\")\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        Fuga fuga = new Fuga();\n        System.out.println(\"fuga.getName() = \" + fuga.getName());\n        Fuga mock = new Fuga(\"FUGA\");\n        System.out.println(\"mock.getName() = \" + mock.getName());\n    }\n\n    public static class Fuga {\n        private String name = \"fuga\";\n\n        public Fuga() {\n        }\n\n        public Fuga(String name) {\n            this.name = name;\n        }\n\n        public String getName() {\n            return this.name;\n        }\n    }\n}\n\nfuga.getName() = fuga\nmock.getName() = null\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3059\u308b\u5834\u5408\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u7a7a\u306b\u3059\u308b\u3002\n\n\n\u9759\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\u306f\u304a\u3059\u3059\u3081\u3067\u304d\u306a\u3044\n\u9759\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u305f\u3081\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306b\u5bfe\u3057\u3066\u8ca7\u5f31\u306b\u306a\u308b\u3068\u3044\u3046\u6b20\u70b9\u304c\u3042\u308b\u306e\u3067\u3001\u3042\u307e\u308a\u304a\u3059\u3059\u3081\u3067\u304d\u306a\u3044\u3002\n\u307f\u305f\u3044\u306a\u3053\u3068\u304c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\n\nStatic partial mocking has the inconvenience that we need to explicitly specify the methods/constructors to be mocked, and do so inside strings instead of in Java code. In short, it entails extra work and is not \"refactoring friendly\".\n\nPartial mocking - Dynamic partial mocking | The JMockit Tutorial - Behavior-based testing\n\u306a\u306e\u3067\u3001\u52d5\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u826f\u3044\u3002\n\n\u52d5\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\n\nExpectations \u30d6\u30ed\u30c3\u30af\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u306e Class \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\npackage sample.jmockit;\n\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new NonStrictExpectations(Hoge.class) {\n            {\n                new Hoge().method();\n                result = \"mock\";\n            }\n        };\n        Hoge hoge = new Hoge();\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n        Hoge other = new Hoge();\n        System.out.println(\"other.method() = \" + other.method());\n        System.out.println(\"other.method(\\\"other\\\") = \" + other.method(\"other\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method() = mock\nhoge.method(\"hoge\") = hoge\nother.method() = mock\nother.method(\"other\") = other\n\n\n\n\nExpectations \u307e\u305f\u306f NonStrictExpectations \u30d6\u30ed\u30c3\u30af\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3001\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u306e Class \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u3001\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u9332\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\nnew \u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u5168\u3066\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u308b\u3002\n\n\n\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3001 Expectations \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3059\npackage sample.jmockit;\n\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        final Hoge hoge = new Hoge();\n        new NonStrictExpectations(hoge) {\n            {\n                hoge.method(\"hoge\");\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n\n        Hoge other = new Hoge();\n        System.out.println(\"other.method() = \" + other.method());\n        System.out.println(\"other.method(\\\"other\\\") = \" + other.method(\"other\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method() = hoge\nhoge.method(\"hoge\") = mock\nother.method() = hoge\nother.method(\"other\") = other\n\n\n\n\nExpectations \u307e\u305f\u306f NonStrictExpectations \u30d6\u30ed\u30c3\u30af\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3001\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u3001\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u9332\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n\u8a18\u9332\u3067\u4f7f\u7528\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3060\u3051\u304c\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3055\u308c\u3001\u305d\u308c\u4ee5\u5916\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u5909\u5316\u3057\u306a\u3044\u3002\n\n\n\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u53d6\u5f97\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u81ea\u52d5\u3067\u30e2\u30c3\u30af\u5316\u3055\u305b\u308b\n@Cascading \u306f ver 1.14 \u3067\u524a\u9664\u3055\u308c\u3001\u3053\u306e\u52d5\u304d\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u3063\u305f\u3002\n\u8a73\u3057\u304f\u306f \u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u3059\u5024 \u3092\u53c2\u7167\u3002\n\n\u533f\u540d\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Capturing;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Capturing\n    private MyInterface mock;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                mock.method();\n                result = \"mock\";\n            }\n        };\n        MyInterface anonymous = new MyInterface() {\n            @Override\n            public String method() {\n                return \"anonymous\";\n            }\n        };\n        System.out.println(\"anonymous.method() = \" + anonymous.method());\n    }\n\n    public static interface MyInterface {\n        String method();\n    }\n}\n\nanonymous.method() = mock\n\n\n\n@Capturing \u3092\u4f7f\u3046\u3068\u533f\u540d\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\n\n@Mocked \u3060\u3068\u3001\u533f\u540d\u30af\u30e9\u30b9\u306f\u30e2\u30c3\u30af\u5316\u3067\u304d\u306a\u3044\u3002\n\n\n@Mocked\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\npackage sample.jmockit;\n\nimport mockit.Capturing;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private MyInterface mock;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                mock.method();\n                result = \"mock\";\n            }\n        };\n        MyInterface anonymous = new MyInterface() {\n            @Override\n            public String method() {\n                return \"anonymous\";\n            }\n        };\n        System.out.println(\"anonymous.method() = \" + anonymous.method());\n    }\n\n    public static interface MyInterface {\n        String method();\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\nanonymous.method() = anonymous\n\n\n\nmaxInstances \u5c5e\u6027\npackage sample.jmockit;\n\nimport mockit.Capturing;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Capturing(maxInstances = 2)\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method();\n                result = \"mock\";\n            }\n        };\n        Hoge a = new Hoge();\n        System.out.println(\"a.method() = \" + a.method());\n        Hoge b = new Hoge();\n        System.out.println(\"b.method() = \" + b.method());\n        Hoge c = new Hoge();\n        System.out.println(\"c.method() = \" + c.method());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\na.method() = mock\nb.method() = mock\nc.method() = null\n\n\n\n\n@Capturing \u306e maxInstances \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u52d5\u4f5c\u3092\u9069\u7528\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6570\u3092\u5236\u9650\u3067\u304d\u308b\u3002\n\u4eca\u306e\u3068\u3053\u308d\u3001\u4f7f\u3044\u30c9\u30b3\u30ed\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002\n\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u81ea\u52d5\u3067\u4f9d\u5b58\u3059\u308b\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Injectable;\nimport mockit.NonStrictExpectations;\nimport mockit.Tested;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Tested\n    private Hoge hoge;\n    @Injectable\n    private Fuga fuga;\n    @Injectable\n    private String name = \"hogeee\";\n    @Injectable\n    private int i = 55;\n    @Injectable\n    private Piyo piyo;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                fuga.method();\n                result = \"mock fuga\";\n            }\n        };\n        System.out.println(\"hoge.fuga.method() = \" + hoge.fuga.method());\n        System.out.println(\"hoge.name = \" + hoge.name);\n        System.out.println(\"hoge.i = \" + hoge.i);\n        System.out.println(\"hoge.fuga.piyo = \" + hoge.fuga.piyo);\n    }\n\n    public static class Hoge {\n        private Fuga fuga;\n        private String name;\n        private int i;\n    }\n\n    public static class Fuga {\n        private Piyo piyo;\n\n        public String method() {\n            return \"fuga\";\n        }\n    }\n\n    public static class Piyo {\n        public String method() {\n            return \"piyo\";\n        }\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.fuga.method() = mock fuga\nhoge.name = hogeee\nhoge.i = 55\nhoge.fuga.piyo = null\n\n\n\n\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u5148\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 @Tested \u3067\u5b9a\u7fa9\u3057\u3001\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u5024\u3092 @Injectable \u3067\u5b9a\u7fa9\u3059\u308b\u3068\u3001 @Injectable \u3092\u6307\u5b9a\u3057\u305f\u5024\u304c @Tested \u3067\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u81ea\u52d5\u3067\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3055\u308c\u308b\u3002\n\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306e\u9023\u9396\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\uff08Piyo \u30af\u30e9\u30b9\uff09\u3002\n\n\n\u7279\u5b9a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u5834\u5408\u306b\u306e\u307f\u3001\u6307\u5b9a\u3057\u305f result \u3092\u8fd4\u3059\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {{\n           hoge.method(); result = \"mock\";\n        }};\n\n        Hoge other = new Hoge();\n        System.out.println(other.method());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nmock\n\n\nNonStrictExpectations \u3092\u4f7f\u3063\u305f\u5834\u5408\u3001\u8a18\u9332\u3067\u4f7f\u7528\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306f\u7570\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3082\u3001\u623b\u308a\u5024\u306f result \u3067\u6307\u5b9a\u3057\u305f\u5024\u304c\u8fd4\u3055\u308c\u308b\u3002\n\u3053\u308c\u3092\u3001\u300c\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u3060\u3051\u3001\u6307\u5b9a\u3057\u305f result \u304c\u8fd4\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u300d\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {{\n            onInstance(hoge).method(); result = \"mock\";\n        }};\n\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        Hoge other = new Hoge();\n        System.out.println(\"other.method() = \" + other.method());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nhoge.method() = mock\nother.method() = null\n\n\n\n\nonInstance(T) \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u7279\u5b9a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u5834\u5408\u306b\u306e\u307f\u3001\u6307\u5b9a\u3057\u305f result \u3092\u8fd4\u3059\u3088\u3046\u306b\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n\nVerifications\n\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u901a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4ee5\u5916\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3067\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        Hoge other = new Hoge();\n        other.method(\"hoge\");\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u6700\u4f4e\u3067\u3082\uff11\u56de\u5b9f\u884c\u3055\u308c\u3066\u3044\u308c\u3070_\u540c\u3058\u30e1\u30bd\u30c3\u30c9\u3092\u4f55\u56de\u5b9f\u884c\u3057\u3066\u3044\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method(\"hoge\");\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u6700\u4f4e\u3067\u3082\uff11\u56de\u5b9f\u884c\u3055\u308c\u3066\u3044\u308c\u3070_\u95a2\u4fc2\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method();\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u756a\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method();\n\n        new Verifications() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u901a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method(\"fuga\");\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n}\n\n\n\nVerifications \u3092\u4f7f\u3046\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u610f\u56f3\u3057\u305f\u901a\u308a\u306b\u5b9f\u884c\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u691c\u8a3c\u3067\u304d\u308b\u3002\n\u305f\u3060\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u691c\u8a3c\u306f\u308f\u308a\u3068\u7de9\u3044\u3002\n\n\nExpectations \u3092\u4f7f\u3046\u304b\u3001 NonStrictExpectations + Verifications \u3092\u4f7f\u3046\u304b\nNonStrictExpectations \u3067\u30c0\u30df\u30fc\u306e\u52d5\u4f5c\u3092\u5b9a\u7fa9\u3057\u3066 Verifications \u3067\u691c\u8a3c\u3092\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u304c\u30ca\u30a6\u306a\u3084\u308a\u65b9\u307f\u305f\u3044\u306a\u3053\u3068\u304c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u66f8\u3044\u306b\u3042\u3063\u305f\u3002\n\nSo, how do we choose between strict and non-strict expectations for a given test? There is really no general-purpose answer to this question. It will depend on the particulars of the unit under test, and on personal preferences. The most common preference in recent years has been for non-strict expectations, combined with explicit verification after the code under test is exercised.\n\nStrict and non-strict expectations | The JMockit Tutorial - Behavior-based testing\n\u500b\u4eba\u7684\u306b\u306f\u3001 NonStrictExpectations \u3068 Verifications \u306e\u5408\u308f\u305b\u6280\u306e\u65b9\u304c\u3001 setup, exercise, verify \u306e\uff13\u30d5\u30a7\u30fc\u30ba\u304c\u660e\u78ba\u306b\u306a\u3063\u3066\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u6c17\u306f\u3059\u308b\u3002\n\uff08Expectations \u5358\u72ec\u3060\u3068\u3001 setup \u3068 verify \u306e\u30d5\u30a7\u30fc\u30ba\u304c\u4e00\u7dd2\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u306b\u304f\u3044\u6c17\u304c\u82e5\u5e72\u3057\u3066\u3044\u308b\uff09\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u56de\u6570\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        hoge.method(\"hoge\");\n        hoge.method();\n        hoge.method();\n\n        new Verifications() {{\n            hoge.method(\"hoge\"); times = 1;\n            hoge.method(); maxTimes = 2;\n        }};\n    }\n}\n\n\n\nExpectations \u306e\u3068\u304d\u3068\u540c\u3058\u3088\u3046\u306b\u3001 times\u3001 minTimes\u3001 maxTimes \u304c\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n\n\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53b3\u5bc6\u306b\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        hoge.method();\n\n        new Verifications() {{\n            onInstance(hoge).method();\n        }};\n    }\n}\n\n\n\nonInstance(T) \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53b3\u5bc6\u306b\u691c\u67fb\u3067\u304d\u308b\u3002\n\n\n\u5f15\u6570\u306e\u30de\u30c3\u30c1\u30f3\u30b0\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        hoge.method(\"Hoge\");\n\n        new Verifications() {{\n            hoge.method(withPrefix(\"H\"));\n        }};\n    }\n}\n\n\n\nExpectations \u3067\u4f7f\u7528\u3057\u305f with\uff5e \u3084 any\uff5e \u306f\u3001 Verifications \u3067\u3082\u4f7f\u7528\u3067\u304d\u308b\u3002\n\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u9806\u5e8f\u3092\u53b3\u5bc6\u306b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u5834\u5408\u306f VerificationsInOrder \u3092\u4f7f\u3046\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.VerificationsInOrder;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method();\n\n        new VerificationsInOrder() {{\n            hoge.method(\"hoge\");\n            hoge.method();\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method();\n        hoge.method(\"hoge\");\n\n        new VerificationsInOrder() {{\n            hoge.method(\"hoge\");\n            hoge.method();\n        }};\n    }\n}\n\n\n\nVerificationsInOrder \u3092\u4f7f\u3048\u3070\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u9806\u5e8f\u3082\u53b3\u5bc6\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3002\n\n\n\u4f59\u8a08\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u5834\u5408\u306f FullVerifications \u3092\u4f7f\u3046\npackage sample.jmockit;\n\nimport mockit.FullVerifications;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        new FullVerifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n\n        new FullVerifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n}\n\n\n\nFullVerifications \u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3068\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\n\n\n\u4f59\u5206\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3068\u3001\u5b9f\u884c\u9806\u5e8f\u306e\u4e21\u65b9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u5834\u5408\u306f FullVerificationsInOrder \u3092\u4f7f\u3046\npackage sample.jmockit;\n\nimport mockit.FullVerificationsInOrder;\nimport mockit.Mocked;\nimport mockit.VerificationsInOrder;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067_\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method();\n        hoge.method(\"hoge\");\n\n        new FullVerificationsInOrder() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method();\n\n        new FullVerificationsInOrder() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method();\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n\n        new FullVerificationsInOrder() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n    }\n}\n\n\nExpectations \u3068 FullVerificationsInOrder \u306e\u9055\u3044\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.FullVerificationsInOrder;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n    @Mocked private Fuga fuga;\n\n    @Test\n    public void Expectations\u306f_\u5225\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u307e\u3067\u306f\u30c1\u30a7\u30c3\u30af\u3057\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new Expectations() {{\n            hoge.method(\"hoge\");\n            hoge.method(\"fuga\");\n        }};\n\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n        fuga.method();\n    }\n\n    @Test\n    public void FullVerificationsInOrder\u306f_\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306f\u5168\u3066\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n        fuga.method();\n\n        new FullVerificationsInOrder() {{\n            hoge.method(\"hoge\");\n            hoge.method(\"fuga\");\n        }};\n    }\n\n    public static class Hoge {\n        public String method(String value) {\n            return value;\n        }\n    }\n\n    public static class Fuga {\n        public String method() {\n            return \"fuga\";\n        }\n    }\n}\n\n\n\nExpectations \u306f\u3001\u8a18\u9332\u306b\u4f7f\u7528\u3057\u305f\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u4ee5\u5916\u306b\u3064\u3044\u3066\u306f\u30c1\u30a7\u30c3\u30af\u3057\u306a\u3044\u3002\n\nFullVerifications(InOrder) \u306f\u3001\u4f7f\u7528\u3057\u305f\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u4ee5\u5916\u306b\u3064\u3044\u3066\u3082\u3001\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u53b3\u5bc6\u306b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nFullVerifications(InOrder) \u3067\u3001\u7279\u5b9a\u306e\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u3060\u3051\u691c\u8a3c\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.FullVerifications;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n    @Mocked private Fuga fuga;\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n        fuga.method();\n\n        new FullVerifications(hoge) {{\n            hoge.method(\"hoge\");\n            hoge.method(\"fuga\");\n        }};\n    }\n\n    public static class Hoge {\n        public String method(String value) {\n            return value;\n        }\n    }\n\n    public static class Fuga {\n        public String method() {\n            return \"fuga\";\n        }\n    }\n}\n\n\n\nFullVerifications(InOrder) \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u307e\u305f\u306f Class \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3068\u3001\u691c\u8a3c\u5bfe\u8c61\u3092\u305d\u306e\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u3060\u3051\u306b\u7d5e\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u5b9f\u969b\u306b\u30c6\u30b9\u30c8\u5b9f\u884c\u6642\u306b\u4f7f\u7528\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u5f15\u6570\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        hoge.method(\"HOGE\");\n\n        new Verifications() {{\n            String parameter;\n            hoge.method(parameter = withCapture());\n            System.out.println(\"parameter = \" + parameter);\n        }};\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nparameter = HOGE\n\n\n\n\nwithCapture() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u5b9f\u969b\u306b\u6e21\u3055\u308c\u305f\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\u4f7f\u3044\u30c9\u30b3\u30ed\u306f\u5206\u304b\u3089\u306a\u3044\u3002\n\n\nMockUp<T> \u3067\u30e2\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Hoge>() {\n            @Mock\n            public void $init() {\n                System.out.println(\"[MockUp] called constructor\");\n            }\n\n            @Mock\n            public String method(String parameter) {\n                System.out.println(\"[MockUp] called method(String). parameter = \" + parameter);\n                return \"mock\";\n            }\n        };\n\n        Hoge hoge = new Hoge();\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n[MockUp] called constructor\nhoge.method() = hoge\n[MockUp] called method(String). parameter = hoge\nhoge.method(\"hoge\") = mock\n\n\n\n\nMockUp<T> \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001 <T> \u3067\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\n********************************************************************************\n\u4e3b\u306b\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u3001\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u3068\u6b63\u3057\u304f\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u304d\u3066\u3044\u308b\u304b\uff08\u6e21\u3057\u3066\u3044\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u610f\u56f3\u3057\u305f\u3068\u304a\u308a\u304b\u3069\u3046\u304b\uff09\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u306b\u5229\u7528\u3059\u308b\u3002\n********************************************************************************\n\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3068\u5168\u304f\u540c\u3058\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u6301\u3064\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3001 @Mock \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3059\u308b\u3068\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\n********************************************************************************\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\u5834\u5408\u306f\u3001 $init \u3068\u3044\u3046\u7279\u5225\u306a\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n********************************************************************************\n\u30e2\u30c3\u30af\u5316\u3055\u308c\u306a\u304b\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u306f\u672c\u6765\u306e\u5b9f\u88c5\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n********************************************************************************\n\n@Mock \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3068\u540c\u3058\u30b7\u30b0\u30cd\u30c1\u30e3\u306e\u30e1\u30bd\u30c3\u30c9\u304c <T> \u3067\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f IllegalArgumentException \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n********************************************************************************\n\u3064\u307e\u308a\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b IllegalArgumentException \u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u306f\u3001 @Mock \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u969b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3068\u7570\u306a\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001 IllegalArgumentException \u306e\u539f\u56e0\u306f\u6ce8\u610f\u3057\u3066\u30c1\u30a7\u30c3\u30af\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\n\n\u5b9f\u969b\u306bIllegalArgumentException\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u3068\u304d\u306e\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\njava.lang.IllegalArgumentException: Matching real methods not found for the following mocks:\nsample.jmockit.JmockitTest$1#notExistsMethod()\n\uff08\u4ee5\u4e0b\u7565\uff09\n\n\n\n\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void classMethod() {\n                System.out.println(\"mock\");\n            }\n        };\n        Fuga.classMethod();\n    }\n\n    public static class Fuga {\n        public static void classMethod() {}\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nmock\n\n\n\n\n@Mock \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u30e1\u30bd\u30c3\u30c9\u306b static \u4fee\u98fe\u5b50\u3092\u4ed8\u3051\u306a\u304f\u3066\u3082\u3044\u3044\u3002\n\n\nprivate \u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Hoge>() {\n            @Mock\n            private void privateMethod() {\n                System.out.println(\"mock\");\n            }\n        };\n\n        Hoge hoge = new Hoge();\n        hoge.method();\n    }\n\n    public static class Hoge {\n        public void method() {\n            this.privateMethod();\n        }\n        private void privateMethod() {\n            System.out.println(\"privateMethod() is called.\");\n        }\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nmock\n\n\n\n\u30b7\u30b0\u30cd\u30c1\u30e3\u3055\u3048\u5408\u3063\u3066\u3044\u308c\u3070\u3001 private \u30e1\u30bd\u30c3\u30c9\u3082\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\n\n\nString \u30af\u30e9\u30b9\u3082\u30e2\u30c3\u30af\u5316\u3067\u304d\u3061\u3083\u3046\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<String>() {\n            @Mock\n            public String toString() {\n                return \"mock\";\n            }\n        };\n\n        System.out.println(\"\\\"hoge\\\".toString() = \" + \"hoge\".toString());\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\"hoge\".toString() = mock\n\n\n\n\u306a\u306b\u3053\u308c\u3053\u308f\u3044\u3002\n\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30e2\u30c3\u30af\u5316\u3092\u5ba3\u8a00\u3057\u3066\u3001\u305d\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u305d\u306e\u5834\u3067\u53d6\u5f97\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        MyInterface mock = new MockUp<MyInterface>() {\n            @Mock\n            public String method() {\n                return \"mock\";\n            }\n        }.getMockInstance();\n\n        System.out.println(\"mock.method() = \" + mock.method());\n    }\n\n    public static interface MyInterface {\n        String method();\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nmock.method() = mock\n\n\n\n\ngetMockInstance() \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u305d\u306e\u5834\u3067\u53d6\u5f97\u3067\u304d\u308b\u3002\n\u666e\u901a\u306e\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u4e0d\u8981\u3060\u3051\u3069\u3001\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092\u6301\u305f\u306a\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u5834\u5408\u306b\u6709\u7528\u3002\n\n\n\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u5236\u9650\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock(invocations = 1)\n            public void method1() {}\n            @Mock(minInvocations = 2)\n            public void method2() {}\n            @Mock(maxInvocations = 3)\n            public void method3() {}\n        };\n\n        Fuga fuga = new Fuga();\n        fuga.method1();\n        fuga.method2();\n        fuga.method2();\n        fuga.method3();\n        fuga.method3();\n    }\n\n    public static class Fuga {\n        public void method1() {}\n        public void method2() {}\n        public void method3() {}\n    }\n}\n\n\n\n@Mock \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5c5e\u6027\u3067\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u56de\u6570\u3092\u5236\u9650\u3067\u304d\u308b\u3002\n\ninvocations \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305f\u56de\u6570\u3060\u3051\u547c\u3073\u51fa\u3055\u308c\u306a\u3044\u3068\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\u3002\n\nminInvocations \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u300c\u6700\u4f4e\u9650\u5b9f\u884c\u3055\u308c\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u56de\u6570\u300d\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\nmaxInvocations \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u300c\u5b9f\u884c\u3055\u308c\u3066\u3044\u3044\u6700\u5927\u306e\u56de\u6570\u300d\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\n\nstatic \u521d\u671f\u5316\u30d6\u30ed\u30c3\u30af\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void $clinit() {\n                System.out.println(\"[mocked static initialization]\");\n            }\n        };\n\n        System.out.println(\"Fuga.FINAL_STATIC_FIELD = \" + Fuga.FINAL_STATIC_FIELD);\n        System.out.println(\"Fuga.NOT_FINAL_STATIC_FIELD = \" + Fuga.NOT_FINAL_STATIC_FIELD);\n    }\n\n    public static class Fuga {\n        static final String FINAL_STATIC_FIELD = \"final static field\";\n        static String NOT_FINAL_STATIC_FIELD = \"not final static field\";\n        static {\n            System.out.println(\"[original static initialization]\");\n        }\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nFuga.FINAL_STATIC_FIELD = final static field\n[mocked static initialization]\nFuga.NOT_FINAL_STATIC_FIELD = null\n\n\n\n\n$clinit() \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3001 static \u521d\u671f\u5316\u30d6\u30ed\u30c3\u30af\u3092\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\nfinal \u3067\u7121\u3044\u30af\u30e9\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u521d\u671f\u5316\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n\n\u30e2\u30c3\u30af\u5316\u3059\u308b\u5834\u5408\u306f\u3001 JVM \u304c\u521d\u671f\u5316\u3059\u308b\u524d\u306b MockUp \u3092\u5ba3\u8a00\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        System.out.println(\"\u3010JVM \u306b\u3088\u308b\u521d\u671f\u5316\u3011\");\n        System.out.println(\"Fuga.NOT_FINAL_STATIC_FIELD = \" + Fuga.NOT_FINAL_STATIC_FIELD);\n\n        new MockUp<Fuga>() {\n            @Mock\n            public void $clinit() {\n                System.out.println(\"[mocked static initialization]\");\n            }\n        };\n\n        System.out.println(\"\u3010MockUp \u306b\u3088\u308b\u5ba3\u8a00\u5f8c\u3011\");\n        System.out.println(\"Fuga.NOT_FINAL_STATIC_FIELD = \" + Fuga.NOT_FINAL_STATIC_FIELD);\n    }\n\n    public static class Fuga {\n        static final String FINAL_STATIC_FIELD = \"final static field\";\n        static String NOT_FINAL_STATIC_FIELD = \"not final static field\";\n\n        static {\n            System.out.println(\"[original static initialization]\");\n        }\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\u3010JVM \u306b\u3088\u308b\u521d\u671f\u5316\u3011\n[original static initialization]\nFuga.NOT_FINAL_STATIC_FIELD = not final static field\n\n\u3010MockUp \u306b\u3088\u308b\u5ba3\u8a00\u5f8c\u3011\nFuga.NOT_FINAL_STATIC_FIELD = not final static field\n\n\n\nJVM \u306b\u3088\u308b\u521d\u671f\u5316\u304c\u5148\u306b\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001 MockUp \u306b\u3088\u308b\u5ba3\u8a00\u3092\u3057\u3066\u3082 static \u521d\u671f\u5316\u30d6\u30ed\u30c3\u30af\u306f\u30e2\u30c3\u30af\u5316\u3055\u308c\u306a\u3044\uff08\u5f53\u305f\u308a\u524d\u3068\u3044\u3048\u3070\u5f53\u305f\u308a\u524d\uff09\u3002\n\n\nInvocation\n\npackage sample.jmockit;\n\nimport mockit.Invocation;\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Hoge>() {\n            @Mock\n            public void method(Invocation inv, String parameter) {}\n        };\n    }\n}\n\n\n\n@Mock \u3092\u4ed8\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u306f\u3001\u4efb\u610f\u306b Invocation \u578b\u306e\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u7528\u306b\u5ba3\u8a00\u3067\u304d\u308b\u3002\n\nInvocation \u306b\u306f\u3001\u305d\u306e\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\n\n\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u3001\u5b9f\u884c\u6642\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Invocation;\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void method(Invocation inv) {\n                Fuga fuga = inv.getInvokedInstance();\n                fuga.value = \"mock\";\n            }\n\n            @Mock\n            public void classMethod(Invocation inv) {\n                Fuga fuga = inv.getInvokedInstance();\n                System.out.println(\"\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u53d6\u5f97\u3057\u305f fuga = \" + fuga);\n            }\n        };\n\n        Fuga fuga = new Fuga();\n        fuga.method();\n        System.out.println(\"fuga.value = \" + fuga.value);\n        Fuga.classMethod();\n    }\n\n    public static class Fuga {\n        private String value;\n        public void method() {}\n        public static void classMethod() {}\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nfuga.value = mock\n\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u53d6\u5f97\u3057\u305f fuga = null\n\n\n\n\ngetInvokedInstance() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067 getInvokedInstance() \u3092\u4f7f\u3046\u3068\u3001 null \u304c\u8fd4\u3055\u308c\u308b\u3002\n\n\n\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u56de\u6570\u3092\u53d6\u5f97\u3059\u308b\npackage sample.jmockit;\n\nimport mockit.Invocation;\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void method(Invocation inv) {\n                System.out.println(inv.getInvocationCount());\n            }\n        };\n\n        Fuga fuga = new Fuga();\n        fuga.method();\n        fuga.method();\n        fuga.method();\n    }\n\n    public static class Fuga {\n        public void method() {}\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n1\n2\n3\n\n\n\n\ngetInvocationCount() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u56de\u6570\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u5b9f\u88c5\u3092\u547c\u3073\u51fa\u3059\npackage sample.jmockit;\n\nimport mockit.Invocation;\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void method(Invocation inv) {\n                System.out.println(\"mock\");\n                inv.proceed();\n            }\n        };\n\n        Fuga fuga = new Fuga();\n        fuga.method();\n    }\n\n    public static class Fuga {\n        public void method() {\n            System.out.println(\"fuga\");\n        }\n    }\n}\n\nmock\nfuga\n\n\n\nproceed(Object...) \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u305f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\nDeencapsulation \u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u308a\u3001\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3 API \u3092\u4f7f\u3063\u3066 private \u306a\u30d5\u30a3\u30fc\u30eb\u30c9\u3084\u30e1\u30bd\u30c3\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\npackage sample.jmockit;\n\nimport mockit.Deencapsulation;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        Fuga fuga = Deencapsulation.newInstance(Fuga.class);\n        Deencapsulation.invoke(fuga, \"method\");\n        Deencapsulation.setField(fuga, \"instanceField\", \"fugaaa\");\n        System.out.println(\"fuga.instanceField = \" + Deencapsulation.getField(fuga, \"instanceField\"));\n    }\n\n    public static class Fuga {\n        private String instanceField = \"instance field\";\n\n        private Fuga() {\n            System.out.println(\"called Fuga constructor\");\n        }\n\n        private void method() {\n            System.out.println(\"called fuga.method()\");\n        }\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\ncalled Fuga constructor\ncalled fuga.method()\nfuga.instanceField = fugaaa\n\n\n\n\n\n\u30e1\u30bd\u30c3\u30c9\n\u6a5f\u80fd\n\n\n\n\nnewInstance()\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\n\n\nsetField(), getField()\n\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\n\n\ninvoke()\n\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\n\n\n\n\u4f7f\u3044\u65b9\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u898b\u308c\u3070\u3060\u3044\u305f\u3044\u60f3\u50cf\u3067\u304d\u308b\uff08Deencapsulation (JMockit Toolkit API)\uff09\u3002\n\n\u53c2\u8003\n\nThe JMockit testing toolkit\nGetting started with the JMockit Testing Toolkit \u306e\u90a6\u8a33\uff08\u524d\u7de8\uff09 - A Memorandum\nGetting started with the JMockit Testing Toolkit \u306e\u90a6\u8a33\uff08\u5f8c\u7de8\uff09 - A Memorandum\nJMockit\u306f\u7406\u60f3\u7684\u306a\u30e2\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af - \u3058\u3085\u3093\u3044\u3061\u2606\u304b\u3068\u3046\u306e\u6280\u8853\u65e5\u8a8c\n\u6b21\u4e16\u4ee3\u306e\u30e2\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bJMockit\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9 - \u9054\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3092\u76ee\u6307\u3057\u3066\n\nJMockit \u306e\u4f7f\u3044\u65b9\u30e1\u30e2\u3002\n\n\u307e\u3068\u3081\u3068\u3044\u3066\u4f55\u3060\u3051\u3069\u3001 JMockit \u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u5f37\u529b\u306a\u6a5f\u80fd\u306f\u306a\u308b\u3079\u304f\u4f7f\u308f\u306a\u3044\u3067\u6e08\u3080\u3088\u3046\u306b\u8a2d\u8a08\uff08\u5b9f\u88c5\uff09\u3059\u308b\u3053\u3068\u304c\u3001\u7406\u60f3\u7684\u306a\u3093\u3060\u308d\u3046\u306a\u3068\u601d\u3046\u308f\u3051\u3067\u3059\u3002\n\uff08\u305f\u3076\u3093\u3001 JMockit \u306e\u6a5f\u80fd\u3092\u4e0b\u624b\u306b\u4f7f\u3044\u3059\u304e\u308b\u3068\u3001\u53ef\u8aad\u6027\u304c\u843d\u3061\u3066\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3082\u5927\u5909\u306b\u306a\u308a\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\uff09\n\n\u3067\u3082\u3001\u3044\u3056\u30c6\u30b9\u30c8\u56f0\u96e3\u306a\u5b9f\u88c5\u3068\u3076\u3061\u5f53\u305f\u3063\u305f\u3068\u304d\u306b\u5099\u3048\u3066\u3001\u3072\u3068\u901a\u308a\u6a5f\u80fd\u306f\u77e5\u3063\u3066\u304a\u3044\u305f\u65b9\u304c\u3044\u3044\u3068\u3082\u601d\u3046\u308f\u3051\u3067\u3059\u3002\n\n\n<font color=\"red\">\u203b\u3053\u306e\u30e1\u30e2\u306f ver1.6 \u306e\u9803\u306e\u3082\u306e\u3067 2016\u5e74 12 \u6708\u73fe\u5728\u306e\u6700\u65b0\uff08ver 1.29\uff09\u3068\u306f\u7570\u306a\u308b\u70b9\u304c\u591a\u6570\u3042\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002JMockit \u306f API \u306e\u975e\u63a8\u5968\u5316\u2192\u524a\u9664\u3082\u304b\u306a\u308a\u983b\u7e41\u306b\u884c\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u4e2d\u306b\u306f\u6700\u65b0\u7248\u3067\u306f\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002</span>\n\n#\u74b0\u5883\n##Java\n1.7.0_40\n\n##JMockit\n1.6\n\n\u203b\u4e00\u90e8 1.21 \u3067\u78ba\u8a8d\n\n#\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n##jar \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u76f4\u63a5 jar \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5834\u5408\u306f\u3001 [\u3053\u3053](https://github.com/jmockit/artifacts1x) \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\n\nmaven \u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u30bb\u30f3\u30c8\u30e9\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u843d\u3068\u3059\u3002\n\n```groovy:1.8\u3088\u308a\u524d\ntestCompile 'com.googlecode.jmockit:jmockit:1.6'\n```\n\n\u203bver 1.8 \u304b\u3089\u30b0\u30eb\u30fc\u30d7ID \u304c `com.googlecode.jmockit` \u304b\u3089 `org.jmockit` \u306b\u5909\u308f\u3063\u3066\u307e\u3059\u3002\n\n```groovy:1.8\u4ee5\u964d\ntestCompile 'org.jmockit:jmockit:1.21'\n```\n\n##\u30af\u30e9\u30b9\u30d1\u30b9\u306b\u8ffd\u52a0\u3059\u308b\n###JDK1.6 \u4ee5\u4e0a \u304b\u3064 JUnit 4.5 \u4ee5\u4e0a\u306e\u5834\u5408\nJMockit \u306e jar \u304c JUnit \u306e jar \u3088\u308a\u5148\u306b\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u30af\u30e9\u30b9\u30d1\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n###\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\nJDK \u304c 1.5 \u3068\u304b\u3044\u3046\u6b8b\u5ff5\u306a\u74b0\u5883\u3060\u3063\u305f\u308a\u3059\u308b\u5834\u5408\u306f\u3001 JVM \u306e\u5f15\u6570\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n`-javaagent:<jmockit.jar \u3078\u306e\u30d1\u30b9>`\n\n\n# \u30e2\u30c3\u30af\n## \u30e2\u30c3\u30af\u306e\u7279\u5fb4\n### \u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u3059\u5024\n```java:Hoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n    \n    public Fuga getFuga() {\n        return null;\n    }\n    \n    public String getString() {\n        return \"HOGE\";\n    }\n    \n    public Object getObject() {\n        return new Object();\n    }\n    \n    public Collection<?> getCollection() {\n        return null;\n    }\n    \n    public int getInt() {\n        return Integer.MAX_VALUE;\n    }\n}\n```\n\n```java:Fuga.java\npackage sample.jmockit;\n\npublic class Fuga {\n    \n    @Override\n    public String toString() {\n        return \"FUGA\";\n    }\n}\n```\n\n```java:JMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Mocked;\n\npublic class JMockitTest {\n    \n    @Mocked\n    private Hoge hoge;\n    \n    @Test\n    public void test() throws Exception {\n        System.out.println(this.hoge.getFuga());\n        System.out.println(this.hoge.getString());\n        System.out.println(this.hoge.getObject());\n        System.out.println(this.hoge.getCollection());\n        System.out.println(this.hoge.getInt());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nsample.jmockit.Fuga@490d6c15\nnull\nnull\n[]\n0\n```\n\n- \u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3093\u3089\u304b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u5834\u5408\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u81ea\u52d5\u7684\u306b\u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u3082\u306e\u306b\u306a\u308b\u3002\n    - `getFuga()` \u3067\u53d6\u5f97\u3057\u305f `Fuga` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u308b\u3002\n    - `Fuga#toString()` \u306e\u52d5\u4f5c\u304c\u672c\u6765\u306e\u5b9f\u88c5\u3068\u9055\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n    - \u3053\u308c\u3092\u30ab\u30b9\u30b1\u30fc\u30c7\u30a3\u30f3\u30b0\uff08`Cascading`\uff09\u3068\u547c\u3076\u3002\n    - \u4ee5\u524d\u306f `@Cascading` \u3068\u3044\u3046\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u304b\u3063\u305f\u304c\u3001 ver 1.14 \u304b\u3089\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30ab\u30b9\u30b1\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u6709\u52b9\u306b\u306a\u3063\u305f\u3002\n- \u305f\u3060\u3057\u3001 `String` \u3068 `Object` \u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f `null` \u3092\u8fd4\u3059\u3002\n- \u307e\u305f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u7a7a\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u8fd4\u3059\u3002\n- \u305d\u308c\u4ee5\u5916\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\uff08`int` \u3084 `long` \u306a\u3089 `0`, `boolean` \u306a\u3089 `false` \u306a\u3069\uff09\u3092\u8fd4\u3059\u3002\n- \u672c\u6765\u306e\u5b9f\u88c5\u306f\u4e00\u5207\u5b9f\u884c\u3055\u308c\u306a\u304f\u306a\u308b\u3002\n\n### \u30e2\u30c3\u30af\u304c\u8fd4\u3059\u5024\u3092 `null` \u306b\u3057\u305f\u3044\u5834\u5408\n```java:JMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\n\npublic class JMockitTest {\n    \n    @Mocked\n    private Hoge hoge;\n    \n    @Test\n    public void test() throws Exception {\n        new NonStrictExpectations() {{\n            hoge.getFuga(); result = null;\n        }};\n        \n        System.out.println(this.hoge.getFuga());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nnull\n```\n\n- \u30ab\u30b9\u30b1\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u81ea\u52d5\u7684\u306b\u30e2\u30c3\u30af\u304c\u8fd4\u308b\u306e\u3092\u6b62\u3081\u305f\u3044\u5834\u5408\u306f\u3001 `Expectations` \u3092\u4f7f\u3063\u3066\u660e\u793a\u7684\u306b\u623b\u308a\u5024\u3092 `null` \u306b\u3059\u308b\u3002\n- `result` \u306e\u52d5\u4f5c\u3082\u4ee5\u524d\u8abf\u3079\u305f\u3068\u304d\u3068\u306f\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u3067 [\u3053\u3061\u3089](#multi_result) \u3092\u53c2\u7167\u3002\n\n###final \u4fee\u98fe\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3082\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\n```java:Parent.java\npackage sample.jmockit;\n\npublic class Parent {\n    \n    public static String PARENT_CLASS_FIELD = \"parent class field\";\n    public String parentInstanceField = \"parent instance field\";\n    \n    public static String parentClassMethod() {\n        return \"Parent#parentClassMethod()\";\n    }\n    \n    public String parentInstanceMethod() {\n        return \"Parent#parentInstanceMethod()\";\n    }\n}\n```\n\n```java:Child.java\npackage sample.jmockit;\n\npublic class Child extends Parent {\n    \n    public static int CLASS_FIELD = -1;\n    public int instanceField = -1;\n    \n    public static int classMethod() {\n        return -1;\n    }\n    \n    public int instanceMethod() {\n        return -1;\n    }\n    \n    public final int finalInstanceMethod() {\n        return -1;\n    }\n}\n```\n\n```java:\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n    \n    @Mocked private Child child;\n    \n    @Test\n    public void test() {\n        System.out.println(\"finalInstanceMethod() = \" + child.finalInstanceMethod());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nfinalInstanceMethod() = 0\n```\n\n- final \u4fee\u98fe\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3082\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n\n###\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u306a\u308b\n```java:\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n    \n    @Mocked private Child child;\n    \n    @Test\n    public void test() {\n        System.out.println(\"instanceField = \" + child.instanceField);\n        System.out.println(\"parentInstanceField = \" + child.parentInstanceField);\n        System.out.println(\"CLASS_FIELD = \" + Child.CLASS_FIELD);\n        System.out.println(\"PARENT_CLASS_FIELD = \" + Child.PARENT_CLASS_FIELD);\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\ninstanceField = 0\nparentInstanceField = null\nCLASS_FIELD = -1\nPARENT_CLASS_FIELD = parent class field\n```\n\n- \u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3068\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n- \u3067\u3082\u3001\u30af\u30e9\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u5909\u5316\u3057\u306a\u3044\u3002\n\n###\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308b\n```java:\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n    \n    @Mocked private Child mock;\n    \n    @Test\n    public void test() {\n        Child child = new Child();\n        System.out.println(\"child.instanceMethod() = \" + child.instanceMethod());\n        \n        Parent parent = new Parent();\n        System.out.println(\"parent.parentInstanceMethod() = \" + parent.parentInstanceMethod());\n        \n        System.out.println(\"(this.mock == child) = \" + (this.mock == child));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nchild.instanceMethod() = 0\nparent.parentInstanceMethod() = Parent#parentInstanceMethod()\n(this.mock == child) = false\n```\n\n- \u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u3001 __\u65b0\u3057\u3044\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8__ \u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308b\u3002\n- \u89aa\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u305d\u306e\u307e\u307e\u3002\n\n##\u30e2\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\u65b9\u6cd5\n###\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u3067 `@Mocked` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\n```java:JmockitTest.java\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class JmockitTest {\n    \n    public static class TestClass1 {\n        @Mocked private Child child;\n\n        @Test\n        public void test1() {\n            Child child = new Child();\n            System.out.println(\"TestClass1#test1() : \" + child.instanceMethod());\n        }\n\n        @Test\n        public void test2() {\n            Child child = new Child();\n            System.out.println(\"TestClass1#test2() : \" + child.instanceMethod());\n        }\n    }\n\n    public static class TestClass2 {\n        @Test\n        public void test1() {\n            Child child = new Child();\n            System.out.println(\"TestClass2#test1() : \" + child.instanceMethod());\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nTestClass1#test1() : 0\nTestClass1#test2() : 0\nTestClass2#test1() : -1\n```\n\n- \u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u306b `@Mocked` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u3068\u3001\u305d\u306e\u30af\u30e9\u30b9\u306f\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n- `@Mocked` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3064\u3051\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u81ea\u52d5\u3067\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3002\n- \u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u305d\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u5185\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3067\u306e\u307f\u6709\u52b9\u3002\n\n###\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3067\u5b9a\u7fa9\u3059\u308b\n```java:JmockitTest.java\npackage sample.jmockit;\n\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Test\n    public void test1(@Mocked Child child) {\n        Child mock = new Child();\n        System.out.println(\"test1() : \" + mock.instanceMethod());\n    }\n    \n    @Test\n    public void test2() {\n        Child child = new Child();\n        System.out.println(\"test2() : \" + child.instanceMethod());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\ntest1() : 0\ntest2() : -1\n```\n\n- \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u5f15\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u305d\u306e\u5f15\u6570\u306e\u30af\u30e9\u30b9\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n- `@Mocked` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u7701\u7565\u53ef\u80fd\uff08\u3067\u3082\u8b66\u544a\u304c\u3067\u308b\uff09\u3002\n- \u30e2\u30c3\u30af\u306f\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u5185\u306e\u307f\u6709\u52b9\u3002\n\n### `@Injectable` \u3067\u7279\u5b9a\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3060\u3051\u30e2\u30c3\u30af\u5316\u3059\u308b\n\n**ver 1.21 \u3067\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:Hoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n    \n    public String getString() {\n        return \"HOGE\";\n    }\n}\n```\n\n```java:JMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Injectable;\n\npublic class JMockitTest {\n    \n    @Injectable\n    private Hoge hoge;\n    \n    @Test\n    public void test() throws Exception {\n        System.out.println(this.hoge.getString());\n        System.out.println(new Hoge().getString());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nnull\nHOGE\n```\n\n- `@Injectable` \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u3060\u3051\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n- \u305d\u308c\u4ee5\u5916\u306e\u5834\u6240\u3067\u5225\u9014 `new` \u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u30e2\u30c3\u30af\u304b\u3055\u308c\u306a\u3044\u3002\n\n# `@Tested` \u3067\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\n\n**ver 1.21 \u3067\u52d5\u4f5c\u78ba\u8a8d**\n\n## \u57fa\u672c\n```java:Hoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n    \n    private Hoge() {\n        System.out.println(\"Hoge Constructor\");\n    }\n    \n    @Override\n    public String toString() {\n        return \"HOGE\";\n    }\n}\n```\n\n```java:JMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Tested;\n\npublic class JMockitTest {\n    \n    @Tested\n    private Hoge hoge;\n    \n    @Test\n    public void test() throws Exception {\n        System.out.println(this.hoge);\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nHoge Constructor\nHOGE\n```\n\n- `@Tested` \u3067\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3068\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u3066\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3055\u308c\u308b\u3002\n    - \u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u4f7f\u7528\u3059\u308b\u3002\n- \u3053\u306e\u30af\u30e9\u30b9\u306f\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u3001\u666e\u901a\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u308b\u3002\n- \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3002\n    - `private` \u3067\u554f\u984c\u306a\u3044\u3002\n    - \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5b58\u5728\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n        - \u305f\u3060\u3057\u3001 `@Injectable` \u3067\u5ba3\u8a00\u3055\u308c\u305f\u30af\u30e9\u30b9\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u5c11\u3057\u6761\u4ef6\u304c\u5909\u308f\u308b\uff08[\u8a73\u7d30\u5f8c\u8ff0](#\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u6761\u4ef6)\uff09\u3002\n\n## \u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3064\u5834\u5408\n```java:Hoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n    \n    private Fuga fuga;\n    private Piyo piyo;\n    private String string;\n    \n    public void print() {\n        System.out.println(\"fuga=\" + this.fuga);\n        System.out.println(\"piyo=\" + this.piyo);\n        System.out.println(\"string=\" + this.string);\n    }\n}\n```\n\n```java:Fuga.java\npackage sample.jmockit;\n\npublic class Fuga {\n    \n    @Override\n    public String toString() {\n        return \"FUGA\";\n    }\n}\n```\n\n```java:Piyo.java\npackage sample.jmockit;\n\npublic class Piyo {\n}\n```\n\n```java:JMockitTest.java\npackage sample.jmockit;\n\nimport org.junit.Test;\n\nimport mockit.Injectable;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport mockit.Tested;\n\npublic class JMockitTest {\n    \n    @Tested\n    private Hoge hoge;\n    @Injectable\n    private Fuga fuga;\n    @Mocked\n    private Piyo piyo;\n    \n    @Test\n    public void test() throws Exception {\n        new NonStrictExpectations() {{\n            fuga.toString(); result = \"Mocked Fuga\";\n        }};\n        \n        this.hoge.print();\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nfuga=Mocked Fuga\npiyo=null\nstring=null\n```\n\n- `@Tested` \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u3001 `@Injectable` \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u3082\u306e\u3068\u540c\u3058\u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3064\u5834\u5408\u3001\u81ea\u52d5\u7684\u306b\u30e2\u30c3\u30af\u304c\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3055\u308c\u308b\u3002\n\n## \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u6761\u4ef6\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\n    - \u5b58\u5728\u3059\u308b\uff1aOK\n    - \u5b58\u5728\u3057\u306a\u3044\n        - `@Injetable` \u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u3092\u5f15\u6570\u306b\u53d7\u3051\u53d6\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\n            - \u5b58\u5728\u3059\u308b\uff1aOK\n            - \u5b58\u5728\u3057\u306a\u3044\uff1aNG\n\n#`Expectations`\n```java:Hoge.java\npackage sample.jmockit;\n\npublic class Hoge {\n    public String method() {\n        return \"hoge\";\n    }\n    \n    public String method(String parameter) {\n        return parameter;\n    }\n}\n```\n\n```java:\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u901a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new Expectations() {{\n            hoge.method(\"hoge\");\n        }};\n\n        hoge.method(\"hoge\");\n    }\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u901a\u308a\u306e\u5f15\u6570\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        new Expectations() {{\n            hoge.method(\"hoge\");\n        }};\n\n        hoge.method(\"fuga\");\n    }\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u901a\u308a\u306e\u9806\u756a\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        new Expectations() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n\n        hoge.method(\"hoge\");\n        hoge.method();\n    }\n\n    @Test\n    public void \u8a18\u9332\u3067\u4f7f\u7528\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        new Expectations() {{\n            hoge.method();\n        }};\n\n        Hoge other = new Hoge();\n        other.method();\n    }\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u56de\u6570\u3068\u5b9f\u884c\u3057\u305f\u56de\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        new Expectations() {{\n            hoge.method();\n        }};\n\n        hoge.method();\n        hoge.method();\n    }\n}\n```\n\n- `Expectations` \u3092\u4f7f\u3046\u3068\u3001\u671f\u5f85\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u3092\u8a18\u9332\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3001\u5f15\u6570\u306e\u5024\u3001\u547c\u3073\u51fa\u3057\u56de\u6570\u3001\u547c\u3073\u51fa\u3057\u9806\u5e8f\u306a\u3069\u304c __\u53b3\u5bc6\u306b\u8a18\u9332\u3057\u305f\u901a\u308a\u306b__ \u5b9f\u884c\u3055\u308c\u306a\u3044\u3068\u3001\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b\u3002\n\n#`NonStrictExpectations`\n```java:\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n    \n    @Mocked private Hoge hoge;\n    \n    @Test\n    public void \u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u304f\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new NonStrictExpectations() {{\n            hoge.method();\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u901a\u308a\u306e\u5f15\u6570\u3067\u5b9f\u884c\u3057\u306a\u304f\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new NonStrictExpectations() {{\n            hoge.method(\"hoge\");\n        }};\n        \n        hoge.method(\"fuga\");\n    }\n\n    @Test\n    public void \u8a18\u9332\u3067\u4f7f\u7528\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u5b9f\u884c\u3055\u308c\u306a\u304f\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new NonStrictExpectations() {{\n            hoge.method();\n        }};\n        \n        Hoge other = new Hoge();\n        other.method();\n    }\n\n    @Test\n    public void \u8a18\u9332\u3057\u305f\u56de\u6570\u3068\u5b9f\u884c\u3057\u305f\u56de\u6570\u304c\u7570\u306a\u3063\u3066\u3044\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new NonStrictExpectations() {{\n            hoge.method();\n        }};\n        \n        hoge.method();\n        hoge.method();\n    }\n}\n```\n\n- \u57fa\u672c\u7684\u306b\u306f `Expectations` \u3068\u540c\u3058\u8981\u9818\u3067\u4f7f\u3048\u308b\u3002\n- `Expectations` \u3068\u306f\u7570\u306a\u308a\u3001\u6307\u5b9a\u3057\u305f\u901a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u304f\u3066\u3082\u3001\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b\u3002\n- \u4e3b\u306b\u3001\u30b9\u30bf\u30d6\u3092\u4f5c\u6210\u3057\u305f\u3044\u3068\u304d\u306a\u3069\u306b\u5229\u7528\u3059\u308b\u3002\n\n\u203b`NonStrictExpectations` \u306f ver1.23 \u3067\u975e\u63a8\u5968\u3068\u306a\u308a\u3001 ver1.25 \u3067\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002`Expectations` \u306e\u671f\u5f85\u64cd\u4f5c\u5b9f\u884c\u56de\u6570\u3092 `minTimes = 0` \u3068\u3059\u308b\u3053\u3068\u3067 `NonStrictExpectations` \u3092\u4ee3\u66ff\u3067\u304d\u307e\u3059\uff08@7tsuno \u3055\u3093\u306e\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d9\u30fc\u30b9\u306b\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\uff09\u3002\n\n#\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u3092\u8a18\u9332\u3059\u308b\n```java:\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\n\nimport org.junit.Test;\n\npublic class JmockitTest {\n    \n    @Mocked private Hoge hoge;\n    \n    @Test\n    public void test() {\n        new Expectations() {{\n            hoge.method();\n        }};\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nmockit.internal.MissingInvocation: Missing invocation of:\nsample.jmockit.Hoge#method()\n   on mock instance: sample.jmockit.Hoge@32e701fb\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n- `Expectations` \u307e\u305f\u306f `NonStrictExpectations` \u306e\u533f\u540d\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u521d\u671f\u5316\u30d6\u30ed\u30c3\u30af\u5185\u3067\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\n- \u4e0a\u8a18\u4f8b\u306e\u5834\u5408\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3057\u3066\u3044\u308b\u3002\n\n# \u671f\u5f85\u3055\u308c\u308b\u52d5\u4f5c\u306e\u5b9f\u884c\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                times = 3;\n            }\n        };\n        hoge.method();\n        hoge.method();\n        hoge.method();\n    }\n}\n```\n\n- \u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u9332\u3057\u305f\u76f4\u5f8c\u306b\u3001 `times` \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6570\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n- `Expectations` \u3067 `times` \u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001 `times = 1` \u3092\u6307\u5b9a\u3057\u305f\u3053\u3068\u3068\u540c\u3058\u306b\u306a\u308b\u3002\n- __\uff11\u56de\u3082\u5b9f\u884c\u3055\u308c\u306a\u3044__ \u3053\u3068\u3092\u671f\u5f85\u3057\u305f\u3044\u5834\u5408\u306f `times = 0` \u3068\u6307\u5b9a\u3059\u308b\u3002\n- `times` \u306b\u8ca0\u6570\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u56de\u6570\u306e\u30c1\u30a7\u30c3\u30af\u306f\u884c\u308f\u308c\u306a\u304f\u306a\u308b\u3002\n\n## \u6700\u5c0f\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                minTimes = 2;\n            }\n        };\n        hoge.method();\n        hoge.method();\n        hoge.method();\n    }\n}\n```\n\n- `minTimes` \u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u300c\u6700\u4f4e\u3067\u3082\u5b9f\u884c\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u300d\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n## \u6700\u5927\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                maxTimes = 2;\n            }\n        };\n        hoge.method();\n        hoge.method();\n    }\n}\n```\n\n- `maxTimes` \u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u300c\u5b9f\u884c\u3055\u308c\u3066\u826f\u3044\u6700\u5927\u306e\u56de\u6570\u300d\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n- `maxTimes` \u3092\u6307\u5b9a\u3057\u3066\uff11\u56de\u3082\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\u3002\n\n## `minTimes` \u3068 `maxTimes` \u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                minTimes = 1;\n                maxTimes = 3;\n            }\n        };\n        hoge.method();\n        hoge.method();\n    }\n}\n```\n\n- `minTimes` \u3068 `maxTimes` \u306f\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3067\u304d\u308b\u3002\n- \u4e0a\u8a18\u4f8b\u306e\u5834\u5408\u3001 1 \uff5e 3 \u56de\u306f\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n# \u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u3092\u30c0\u30df\u30fc\u306b\u5dee\u3057\u66ff\u3048\u308b\n## \u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3092\u6307\u5b9a\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method() = mock\n```\n\n- \u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u9332\u3057\u305f\u76f4\u5f8c\u306b\u3001 `result` \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n## \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u623b\u308a\u5024\u306f\u6307\u5b9a\u3067\u304d\u306a\u3044\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                new Hoge();\n                result = hoge;\n            }\n        };\n        System.out.println(\"(this.hoge == new Hoge()) = \" + (this.hoge == new Hoge()));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\n(this.hoge == new Hoge()) = false\n```\n\n## \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u7570\u306a\u308b\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\n### \u3010\u3053\u306e\u65b9\u6cd5\u306f\u6700\u65b0\u7248\u3067\u306f\u4f7f\u3048\u307e\u305b\u3093\u3011<del id=\"multi_result\">`result` \u306b\u9023\u7d9a\u3057\u3066\u5024\u3092\u4ee3\u5165\u3059\u308b</del>\n\u8ffd\u8a18\uff1a\u3053\u306e\u65b9\u6cd5\u306f\u6700\u65b0\u7248\uff08ver 1.21 \u3067\u78ba\u8a8d\uff09\u3067\u306f\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b [returns() \u30e1\u30bd\u30c3\u30c9](#returns_method) \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method();\n                result = \"1\";\n                result = \"2\";\n                result = \"3\";\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\uff081.21\u3067\u306e\u52d5\u4f5c\uff09\nhoge.method() = 3\nhoge.method() = 3\nhoge.method() = 3\nhoge.method() = 3\n```\n\n- \u6700\u5f8c\u306b\u8a18\u9332\u3057\u305f\u5024\u304c\u5e38\u306b\u8fd4\u3055\u308c\u308b\u3002\n\n\n```text:\u5b9f\u884c\u7d50\u679c\uff081.6\u306e\u9803\u306e\u52d5\u4f5c\uff09\nhoge.method() = 1\nhoge.method() = 2\nhoge.method() = 3\nhoge.method() = 3\n```\n\n- <del>`result` \u306b\u7d9a\u3051\u3066\u5024\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u56de\u6570\u306b\u5408\u308f\u305b\u3066\u623b\u308a\u5024\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002</del>\n- <del>`result` \u306b\u4ee3\u5165\u3057\u305f\u56de\u6570\u4ee5\u4e0a\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u6700\u5f8c\u306b `result` \u306b\u4ee3\u5165\u3057\u305f\u5024\u304c return \u3055\u308c\u7d9a\u3051\u308b\u3002</del>\n\n\n### <span id=\"returns_method\">`returns()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046</span>\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method();\n                returns(\"a\", \"b\", \"c\");\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method() = a\nhoge.method() = b\nhoge.method() = c\nhoge.method() = c\n```\n\n- `returns()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001\u5f15\u6570\u306b\u6e21\u3057\u305f\u9806\u5e8f\u3067\u623b\u308a\u5024\u304c\u8fd4\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n### `result` \u306b\u914d\u5217\uff08\u30ea\u30b9\u30c8\uff09\u3092\u4ee3\u5165\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method();\n                result = new String[] { \"A\", \"B\", \"C\" };\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method() = \" + hoge.method());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method() = A\nhoge.method() = B\nhoge.method() = C\nhoge.method() = C\n```\n\n- `result` \u306b\u914d\u5217\u307e\u305f\u306f\u30ea\u30b9\u30c8\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001 `result` \u306b\u8907\u6570\u56de\u4ee3\u5165\u3059\u308b\u306e\u3068\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\n- \u305f\u3060\u3057\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u914d\u5217\u3084\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\u5834\u5408\u306f\u4f7f\u3048\u306a\u3044\u3002\n\n## \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3089\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                result = new NullPointerException(\"sample\");\n            }\n        };\n        hoge.method();\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\njava.lang.NullPointerException: sample\n    at sample.jmockit.Hoge.method(Hoge.java)\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n- `result` \u306b\u4f8b\u5916\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ee3\u5165\u3059\u308b\u3068\u3001\u76f4\u524d\u306b\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u4ee3\u5165\u3057\u305f\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n\n### `returns()` \u3067\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method();\n                returns(\"hoge\", new NullPointerException(\"sample\"));\n            }\n        };\n        System.out.println(hoge.method());\n        System.out.println(hoge.method());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\njava.lang.ClassCastException: java.lang.NullPointerException cannot be cast to java.lang.String\n    at sample.jmockit.Hoge.method(Hoge.java)\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n- `NullPointerException` \u3092 `Hoge#method()` \u306e\u623b\u308a\u5024\u578b\u3067\u3042\u308b `String` \u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3088\u3046\u3068\u3057\u3066 `ClassCastException` \u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3002\n\n# Delegate \u3092\u4f7f\u3063\u3066\u30e2\u30c3\u30af\u5316\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u3092\u6307\u5b9a\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Delegate;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method(\"hoge\");\n                result = new Delegate<String>() {\n                    public String delegate(String parameter) {\n                        System.out.println(\"[Delegate] parameter = \" + parameter);\n                        return \"delegate mock\";\n                    }\n                };\n            }\n        };\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\n[Delegate] parameter = hoge\nhoge.method(\"hoge\") = delegate mock\n```\n\n- result \u306b Delegate \u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3068\u3001\u76f4\u524d\u306b\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u969b\u306b Delegate \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\uff08\u4eee\u306b __Delegate \u30e1\u30bd\u30c3\u30c9__ \u3068\u547c\u3076\uff09\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n- Delegate \u30e1\u30bd\u30c3\u30c9\u306e\u53ef\u8996\u6027\u306f\u975e private \u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n- \u975e private \u306a\u30e1\u30bd\u30c3\u30c9\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u3068\u3001\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n- Delegate \u30e1\u30bd\u30c3\u30c9\u306e\u540d\u524d\u306f\u4f55\u3067\u3082\u826f\u3044\u3002\n- Delegate \u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u3001\u4f7f\u7528\u3057\u306a\u3044\u306a\u3089\u5ba3\u8a00\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u3002\n- Delegate \u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u306f void \u3067\u3082\u826f\u3044\uff08\u305d\u306e\u5834\u5408\u3001\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306f null \u3092\u8fd4\u3059\uff09\u3002\n- Delegate \u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u3001\u5b9f\u884c\u6642\u306b ClassCastException \u304c\u767a\u751f\u3059\u308b\u3002\n\n# \u5f15\u6570\u306e\u30de\u30c3\u30c1\u30f3\u30b0\n## \u57fa\u672c\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method(\"hoge\");\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n        System.out.println(\"hoge.method(\\\"fuga\\\") = \" + hoge.method(\"fuga\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"hoge\") = mock\nhoge.method(\"fuga\") = null\n```\n\n- \u8a18\u9332\u6642\u306b\u4f7f\u7528\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3082\u3001\u691c\u8a3c\u306e\u3068\u304d\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u5bfe\u8c61\u3068\u306a\u308b\u3002\n- `result` \u3067\u6307\u5b9a\u3057\u305f\u5024\u306f\u3001\u5f15\u6570\u3082\u542b\u3081\u8a18\u9332\u3057\u305f\u3068\u304a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306b\u9650\u308a\u9069\u7528\u3055\u308c\u308b\u3002\n\n## `any` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3063\u3066\u4efb\u610f\u306e\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3055\u305b\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(anyString);\n                result = \"1\";\n                result = \"2\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n        System.out.println(\"hoge.method(\\\"fuga\\\") = \" + hoge.method(\"fuga\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"hoge\") = 1\nhoge.method(\"fuga\") = 2\n```\n\n- `Expectations` \u304a\u3088\u3073 `NonStrictExpectations` \u306b\u306f `any\uff5e` \u3068\u3044\u3046\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u305d\u308c\u3092\u8a18\u9332\u6642\u306e\u5f15\u6570\u306b\u4f7f\u7528\u3059\u308b\u3068\u3001\u4efb\u610f\u306e\u5024\u306b\u30de\u30c3\u30c1\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- `any\uff5e` \u306f\u6b21\u306e\uff13\u7a2e\u985e\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n - \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\uff08`anyInt` \u3001 `anyBoolean` \u306a\u3069\uff09\n - String \u578b\uff08`anyString`\uff09\n - Object \u578b\uff08`any`\uff09\n- \u300c\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u300d\u30fb\u300cString \u578b\u300d\u4ee5\u5916\u306e\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30de\u30c3\u30c1\u3055\u305b\u305f\u3044\u5834\u5408\u306f `(Hoge)any` \u3068\u3044\u3046\u3075\u3046\u306b\u3001 Object \u578b\u306e any \u3092\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u4f7f\u7528\u3059\u308b\u3002\n\n## `with\uff5e()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3059\u308b\n### `with(Object)`\n```java\npackage sample.jmockit;\n\nimport static org.hamcrest.Matchers.*;\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method((String) with(not(\"hoge\")));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"fuga\\\") = \" + hoge.method(\"fuga\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"fuga\") = mock\n```\n\n- Hamcrest \u306e Matcher \u3092\u4f7f\u3063\u3066\u5f15\u6570\u3092\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n### `withAny(T)`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withAny(\"any string\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"test\\\") = \" + hoge.method(\"test\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"test\") = mock\n```\n\n- `withAny()` \u306e\u5f15\u6570\u306b\u6e21\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u540c\u3058\u30af\u30e9\u30b9\u3001\u307e\u305f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n### `withEqual(double, double)`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                fuga.method(withEqual(1.0, 0.5));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.method(1.5) = \" + fuga.method(1.5));\n    }\n\n    public static class Fuga {\n        public String method(double d) {\n            return \"fuga\";\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nfuga.method(1.5) = mock\n```\n\n- \u7b2c\u4e00\u5f15\u6570\u3067\u57fa\u6e96\u3068\u306a\u308b\u5024\u3092\u6307\u5b9a\u3057\u3001\u7b2c\u4e8c\u5f15\u6570\u3067\u30e2\u30c3\u30af\u5316\u306e\u5bfe\u8c61\u3068\u306a\u308b\u524d\u5f8c\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3059\u308b\u3002\n- \u4e0a\u8a18\u4f8b\u306e\u5834\u5408 `0.5 \uff5e 1.5` \u304c\u30de\u30c3\u30c1\u3059\u308b\u3002\n- float \u7248\u3082\u3042\u308b\u3002\n\n### `withInstanceOf(Class)`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                fuga.method(withInstanceOf(Parent.class));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.method(new Child()) = \" + fuga.method(new Child()));\n    }\n\n    public static class Fuga {\n        public String method(Parent parent) {\n            return \"fuga\";\n        }\n    }\n\n    public static class Parent {\n    }\n\n    public static class Child extends Parent {\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nfuga.method(new Child()) = mock\n```\n\n- \u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u3001\u307e\u305f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n### `withNotEqual(T)`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withNotEqual(\"hoge\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"fuga\\\") = \" + hoge.method(\"fuga\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"fuga\") = mock\n```\n\n- \u6307\u5b9a\u3057\u305f\u5024 __\u3067\u306f\u306a\u3044__ \u5024\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n### `withNotNull()`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method((String) withNotNull());\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"some string\\\") = \" + hoge.method(\"some string\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"some string\") = mock\n```\n\n- null \u3067\u306a\u3044\u5024\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n### `<T extends CharSequence> withMatch(T)`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withMatch(\"[0-9]+\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"321\\\") = \" + hoge.method(\"321\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"321\") = mock\n```\n\n- \u6b63\u898f\u8868\u73fe\u3067\u30de\u30c3\u30c1\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n### `<T extends CharSequence> withPrefix(T)`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withPrefix(\"hoge\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"hogeString\\\") = \" + hoge.method(\"hogeString\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"hogeString\") = mock\n```\n\n- \u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u59cb\u307e\u308b\u6587\u5b57\u5217\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n### `<T extends CharSequence> withSuffix(T)`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withSuffix(\"hoge\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"stringhoge\\\") = \" + hoge.method(\"stringhoge\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"stringhoge\") = mock\n```\n\n- \u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u7d42\u308f\u308b\u6587\u5b57\u5217\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n### `<T extends CharSequence> withSubstring(T)`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new Expectations() {\n            {\n                hoge.method(withSubstring(\"hoge\"));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(\\\"Abc hoge xyZ\\\") = \" + hoge.method(\"Abc hoge xyZ\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(\"Abc hoge xyZ\") = mock\n```\n\n- \u6307\u5b9a\u3057\u305f\u6587\u5b57\u3092\u9593\u306b\u542b\u3080\u6587\u5b57\u5217\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\n### `withSameInstance(T)`\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        final Fuga fuga = new Fuga();\n        new Expectations() {\n            {\n                hoge.method(withSameInstance(fuga));\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method(fuga) = \" + hoge.method(fuga));\n    }\n\n    public static class Hoge {\n        public String method(Fuga fuga) {\n            return \"hoge\";\n        }\n    }\n\n    public static class Fuga {\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method(fuga) = mock\n```\n\n- \u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u5168\u304f\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff08`==` \u3067\u6bd4\u8f03\uff09\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n- \u666e\u901a\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u306f `equals(Object)` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u6bd4\u8f03\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3002\n\n# \u4e00\u90e8\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\uff08\u90e8\u5206\u30e2\u30c3\u30af\u5316\uff09\n## \u9759\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked(\"method()\")\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                fuga.method();\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.method() = \" + fuga.method());\n        System.out.println(\"fuga.method2() = \" + fuga.method2());\n    }\n\n    public static class Fuga {\n        public String method() {\n            return \"fuga\";\n        }\n\n        public String method2() {\n            return \"FUGA\";\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nfuga.method() = mock\nfuga.method2() = FUGA\n```\n\n- `@Mock` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e value \u5c5e\u6027\u306b\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3055\u305b\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u8868\u3059\u6587\u5b57\u5217\u3092\u6e21\u3059\u3068\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n- value \u5c5e\u6027\u306f String \u306e\u914d\u5217\u306a\u306e\u3067\u3001\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\n\n### \u5f15\u6570\u304c\u5b58\u5728\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked(\"method(String)\")\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                fuga.method(\"fuga\");\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.method() = \" + fuga.method());\n        System.out.println(\"fuga.method(\\\"fuga\\\") = \" + fuga.method(\"fuga\"));\n    }\n\n    public static class Fuga {\n        public String method() {\n            return \"fuga\";\n        }\n\n        public String method(String value) {\n            return value;\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nfuga.method() = fuga\nfuga.method(\"fuga\") = mock\n```\n\n### \u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u3066\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked(\"mock.*\")\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                fuga.mockTargetAlpha();\n                result = \"mock\";\n                fuga.mockTargetBeta();\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"fuga.mockTargetAlpha() = \" + fuga.mockTargetAlpha());\n        System.out.println(\"fuga.mockTargetBeta() = \" + fuga.mockTargetBeta());\n        System.out.println(\"fuga.notMockTarget() = \" + fuga.notMockTarget());\n    }\n\n    public static class Fuga {\n        public String mockTargetAlpha() {\n            return \"fuga\";\n        }\n\n        public String mockTargetBeta() {\n            return \"FUGA\";\n        }\n\n        public String notMockTarget() {\n            return \"Fuga\";\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nfuga.mockTargetAlpha() = mock\nfuga.mockTargetBeta() = mock\nfuga.notMockTarget() = Fuga\n```\n\n### \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked(\"(String)\")\n    private Fuga fuga;\n\n    @Test\n    public void test() {\n        Fuga fuga = new Fuga();\n        System.out.println(\"fuga.getName() = \" + fuga.getName());\n        Fuga mock = new Fuga(\"FUGA\");\n        System.out.println(\"mock.getName() = \" + mock.getName());\n    }\n\n    public static class Fuga {\n        private String name = \"fuga\";\n\n        public Fuga() {\n        }\n\n        public Fuga(String name) {\n            this.name = name;\n        }\n\n        public String getName() {\n            return this.name;\n        }\n    }\n}\n```\n\n```text:\nfuga.getName() = fuga\nmock.getName() = null\n```\n\n- \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3059\u308b\u5834\u5408\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u7a7a\u306b\u3059\u308b\u3002\n\n### \u9759\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\u306f\u304a\u3059\u3059\u3081\u3067\u304d\u306a\u3044\n\u9759\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u305f\u3081\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306b\u5bfe\u3057\u3066\u8ca7\u5f31\u306b\u306a\u308b\u3068\u3044\u3046\u6b20\u70b9\u304c\u3042\u308b\u306e\u3067\u3001\u3042\u307e\u308a\u304a\u3059\u3059\u3081\u3067\u304d\u306a\u3044\u3002\n\u307f\u305f\u3044\u306a\u3053\u3068\u304c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\n\n> Static partial mocking has the inconvenience that we need to explicitly specify the methods/constructors to be mocked, and do so inside strings instead of in Java code. In short, it entails extra work and is not \"refactoring friendly\".\n\n[Partial mocking - Dynamic partial mocking | The JMockit Tutorial - Behavior-based testing](http://jmockit.googlecode.com/svn/trunk/www/tutorial/BehaviorBasedTesting.html#dynamicPartial)\n\u306a\u306e\u3067\u3001\u52d5\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u826f\u3044\u3002\n\n## \u52d5\u7684\u306a\u90e8\u5206\u30e2\u30c3\u30af\u5316\n### `Expectations` \u30d6\u30ed\u30c3\u30af\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u306e Class \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\n```java\npackage sample.jmockit;\n\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new NonStrictExpectations(Hoge.class) {\n            {\n                new Hoge().method();\n                result = \"mock\";\n            }\n        };\n        Hoge hoge = new Hoge();\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n        Hoge other = new Hoge();\n        System.out.println(\"other.method() = \" + other.method());\n        System.out.println(\"other.method(\\\"other\\\") = \" + other.method(\"other\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method() = mock\nhoge.method(\"hoge\") = hoge\nother.method() = mock\nother.method(\"other\") = other\n```\n\n- `Expectations` \u307e\u305f\u306f `NonStrictExpectations` \u30d6\u30ed\u30c3\u30af\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3001\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u306e Class \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u3001\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u9332\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n- new \u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u5168\u3066\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3055\u308c\u3066\u3044\u308b\u3002\n\n### \u90e8\u5206\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3001 `Expectations` \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3059\n```java\npackage sample.jmockit;\n\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        final Hoge hoge = new Hoge();\n        new NonStrictExpectations(hoge) {\n            {\n                hoge.method(\"hoge\");\n                result = \"mock\";\n            }\n        };\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n\n        Hoge other = new Hoge();\n        System.out.println(\"other.method() = \" + other.method());\n        System.out.println(\"other.method(\\\"other\\\") = \" + other.method(\"other\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method() = hoge\nhoge.method(\"hoge\") = mock\nother.method() = hoge\nother.method(\"other\") = other\n```\n\n- `Expectations` \u307e\u305f\u306f `NonStrictExpectations` \u30d6\u30ed\u30c3\u30af\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3001\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u3001\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u9332\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u3002\n- \u8a18\u9332\u3067\u4f7f\u7528\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3060\u3051\u304c\u90e8\u5206\u30e2\u30c3\u30af\u5316\u3055\u308c\u3001\u305d\u308c\u4ee5\u5916\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u5909\u5316\u3057\u306a\u3044\u3002\n\n# \u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u53d6\u5f97\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u81ea\u52d5\u3067\u30e2\u30c3\u30af\u5316\u3055\u305b\u308b\n`@Cascading` \u306f ver 1.14 \u3067\u524a\u9664\u3055\u308c\u3001\u3053\u306e\u52d5\u304d\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u3063\u305f\u3002\n\n\u8a73\u3057\u304f\u306f [\u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u3059\u5024](#\u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u3059\u5024) \u3092\u53c2\u7167\u3002\n\n# \u533f\u540d\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Capturing;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Capturing\n    private MyInterface mock;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                mock.method();\n                result = \"mock\";\n            }\n        };\n        MyInterface anonymous = new MyInterface() {\n            @Override\n            public String method() {\n                return \"anonymous\";\n            }\n        };\n        System.out.println(\"anonymous.method() = \" + anonymous.method());\n    }\n\n    public static interface MyInterface {\n        String method();\n    }\n}\n```\n\n```text:\nanonymous.method() = mock\n```\n\n- `@Capturing` \u3092\u4f7f\u3046\u3068\u533f\u540d\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\n- `@Mocked` \u3060\u3068\u3001\u533f\u540d\u30af\u30e9\u30b9\u306f\u30e2\u30c3\u30af\u5316\u3067\u304d\u306a\u3044\u3002\n\n```java:@Mocked\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\npackage sample.jmockit;\n\nimport mockit.Capturing;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked\n    private MyInterface mock;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                mock.method();\n                result = \"mock\";\n            }\n        };\n        MyInterface anonymous = new MyInterface() {\n            @Override\n            public String method() {\n                return \"anonymous\";\n            }\n        };\n        System.out.println(\"anonymous.method() = \" + anonymous.method());\n    }\n\n    public static interface MyInterface {\n        String method();\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nanonymous.method() = anonymous\n```\n\n## `maxInstances` \u5c5e\u6027\n```java\npackage sample.jmockit;\n\nimport mockit.Capturing;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Capturing(maxInstances = 2)\n    private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                hoge.method();\n                result = \"mock\";\n            }\n        };\n        Hoge a = new Hoge();\n        System.out.println(\"a.method() = \" + a.method());\n        Hoge b = new Hoge();\n        System.out.println(\"b.method() = \" + b.method());\n        Hoge c = new Hoge();\n        System.out.println(\"c.method() = \" + c.method());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\na.method() = mock\nb.method() = mock\nc.method() = null\n```\n\n- `@Capturing` \u306e `maxInstances` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u8a18\u9332\u3057\u305f\u52d5\u4f5c\u3092\u9069\u7528\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6570\u3092\u5236\u9650\u3067\u304d\u308b\u3002\n- \u4eca\u306e\u3068\u3053\u308d\u3001\u4f7f\u3044\u30c9\u30b3\u30ed\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002\n\n# \u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u81ea\u52d5\u3067\u4f9d\u5b58\u3059\u308b\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\n```java\npackage sample.jmockit;\n\nimport mockit.Injectable;\nimport mockit.NonStrictExpectations;\nimport mockit.Tested;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Tested\n    private Hoge hoge;\n    @Injectable\n    private Fuga fuga;\n    @Injectable\n    private String name = \"hogeee\";\n    @Injectable\n    private int i = 55;\n    @Injectable\n    private Piyo piyo;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {\n            {\n                fuga.method();\n                result = \"mock fuga\";\n            }\n        };\n        System.out.println(\"hoge.fuga.method() = \" + hoge.fuga.method());\n        System.out.println(\"hoge.name = \" + hoge.name);\n        System.out.println(\"hoge.i = \" + hoge.i);\n        System.out.println(\"hoge.fuga.piyo = \" + hoge.fuga.piyo);\n    }\n\n    public static class Hoge {\n        private Fuga fuga;\n        private String name;\n        private int i;\n    }\n\n    public static class Fuga {\n        private Piyo piyo;\n\n        public String method() {\n            return \"fuga\";\n        }\n    }\n\n    public static class Piyo {\n        public String method() {\n            return \"piyo\";\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.fuga.method() = mock fuga\nhoge.name = hogeee\nhoge.i = 55\nhoge.fuga.piyo = null\n```\n\n- \u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u5148\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 `@Tested` \u3067\u5b9a\u7fa9\u3057\u3001\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u5024\u3092 `@Injectable` \u3067\u5b9a\u7fa9\u3059\u308b\u3068\u3001 `@Injectable` \u3092\u6307\u5b9a\u3057\u305f\u5024\u304c `@Tested` \u3067\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u81ea\u52d5\u3067\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3055\u308c\u308b\u3002\n- \u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306e\u9023\u9396\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\uff08Piyo \u30af\u30e9\u30b9\uff09\u3002\n\n# \u7279\u5b9a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u5834\u5408\u306b\u306e\u307f\u3001\u6307\u5b9a\u3057\u305f result \u3092\u8fd4\u3059\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {{\n           hoge.method(); result = \"mock\";\n        }};\n\n        Hoge other = new Hoge();\n        System.out.println(other.method());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nmock\n```\n\n`NonStrictExpectations` \u3092\u4f7f\u3063\u305f\u5834\u5408\u3001\u8a18\u9332\u3067\u4f7f\u7528\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306f\u7570\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3082\u3001\u623b\u308a\u5024\u306f result \u3067\u6307\u5b9a\u3057\u305f\u5024\u304c\u8fd4\u3055\u308c\u308b\u3002\n\u3053\u308c\u3092\u3001\u300c\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u3060\u3051\u3001\u6307\u5b9a\u3057\u305f result \u304c\u8fd4\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u300d\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        new NonStrictExpectations() {{\n            onInstance(hoge).method(); result = \"mock\";\n        }};\n\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        Hoge other = new Hoge();\n        System.out.println(\"other.method() = \" + other.method());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nhoge.method() = mock\nother.method() = null\n```\n\n- `onInstance(T)` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u7279\u5b9a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u5834\u5408\u306b\u306e\u307f\u3001\u6307\u5b9a\u3057\u305f result \u3092\u8fd4\u3059\u3088\u3046\u306b\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n# `Verifications`\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u901a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4ee5\u5916\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3067\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        Hoge other = new Hoge();\n        other.method(\"hoge\");\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u6700\u4f4e\u3067\u3082\uff11\u56de\u5b9f\u884c\u3055\u308c\u3066\u3044\u308c\u3070_\u540c\u3058\u30e1\u30bd\u30c3\u30c9\u3092\u4f55\u56de\u5b9f\u884c\u3057\u3066\u3044\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method(\"hoge\");\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u6700\u4f4e\u3067\u3082\uff11\u56de\u5b9f\u884c\u3055\u308c\u3066\u3044\u308c\u3070_\u95a2\u4fc2\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method();\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u756a\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method();\n\n        new Verifications() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u901a\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method(\"fuga\");\n\n        new Verifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n}\n```\n\n- `Verifications` \u3092\u4f7f\u3046\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u610f\u56f3\u3057\u305f\u901a\u308a\u306b\u5b9f\u884c\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u691c\u8a3c\u3067\u304d\u308b\u3002\n- \u305f\u3060\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u691c\u8a3c\u306f\u308f\u308a\u3068\u7de9\u3044\u3002\n\n## `Expectations` \u3092\u4f7f\u3046\u304b\u3001 `NonStrictExpectations` + `Verifications` \u3092\u4f7f\u3046\u304b\n\n`NonStrictExpectations` \u3067\u30c0\u30df\u30fc\u306e\u52d5\u4f5c\u3092\u5b9a\u7fa9\u3057\u3066 `Verifications` \u3067\u691c\u8a3c\u3092\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u304c\u30ca\u30a6\u306a\u3084\u308a\u65b9\u307f\u305f\u3044\u306a\u3053\u3068\u304c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u66f8\u3044\u306b\u3042\u3063\u305f\u3002\n\n> So, how do we choose between strict and non-strict expectations for a given test? There is really no general-purpose answer to this question. It will depend on the particulars of the unit under test, and on personal preferences. The most common preference in recent years has been for non-strict expectations, combined with explicit verification after the code under test is exercised.\n\n[Strict and non-strict expectations | The JMockit Tutorial - Behavior-based testing](http://jmockit.googlecode.com/svn/trunk/www/tutorial/BehaviorBasedTesting.html#strictness)\n\n\u500b\u4eba\u7684\u306b\u306f\u3001 `NonStrictExpectations` \u3068 `Verifications` \u306e\u5408\u308f\u305b\u6280\u306e\u65b9\u304c\u3001 setup, exercise, verify \u306e\uff13\u30d5\u30a7\u30fc\u30ba\u304c\u660e\u78ba\u306b\u306a\u3063\u3066\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u6c17\u306f\u3059\u308b\u3002\n\uff08`Expectations` \u5358\u72ec\u3060\u3068\u3001 setup \u3068 verify \u306e\u30d5\u30a7\u30fc\u30ba\u304c\u4e00\u7dd2\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u306b\u304f\u3044\u6c17\u304c\u82e5\u5e72\u3057\u3066\u3044\u308b\uff09\n\n## \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u56de\u6570\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        hoge.method(\"hoge\");\n        hoge.method();\n        hoge.method();\n\n        new Verifications() {{\n            hoge.method(\"hoge\"); times = 1;\n            hoge.method(); maxTimes = 2;\n        }};\n    }\n}\n```\n\n- `Expectations` \u306e\u3068\u304d\u3068\u540c\u3058\u3088\u3046\u306b\u3001 `times`\u3001 `minTimes`\u3001 `maxTimes` \u304c\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n## \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53b3\u5bc6\u306b\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        hoge.method();\n\n        new Verifications() {{\n            onInstance(hoge).method();\n        }};\n    }\n}\n```\n\n- `onInstance(T)` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53b3\u5bc6\u306b\u691c\u67fb\u3067\u304d\u308b\u3002\n\n## \u5f15\u6570\u306e\u30de\u30c3\u30c1\u30f3\u30b0\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        hoge.method(\"Hoge\");\n\n        new Verifications() {{\n            hoge.method(withPrefix(\"H\"));\n        }};\n    }\n}\n```\n\n- `Expectations` \u3067\u4f7f\u7528\u3057\u305f `with\uff5e` \u3084 `any\uff5e` \u306f\u3001 `Verifications` \u3067\u3082\u4f7f\u7528\u3067\u304d\u308b\u3002\n\n## \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u9806\u5e8f\u3092\u53b3\u5bc6\u306b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u5834\u5408\u306f `VerificationsInOrder` \u3092\u4f7f\u3046\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.VerificationsInOrder;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method();\n\n        new VerificationsInOrder() {{\n            hoge.method(\"hoge\");\n            hoge.method();\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method();\n        hoge.method(\"hoge\");\n\n        new VerificationsInOrder() {{\n            hoge.method(\"hoge\");\n            hoge.method();\n        }};\n    }\n}\n```\n\n- `VerificationsInOrder` \u3092\u4f7f\u3048\u3070\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u9806\u5e8f\u3082\u53b3\u5bc6\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3002\n\n## \u4f59\u8a08\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u5834\u5408\u306f `FullVerifications` \u3092\u4f7f\u3046\n\n```java\npackage sample.jmockit;\n\nimport mockit.FullVerifications;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        new FullVerifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n\n        new FullVerifications() {{\n            hoge.method(\"hoge\");\n        }};\n    }\n}\n```\n\n- `FullVerifications` \u3092\u4f7f\u3046\u3068\u3001\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3068\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\n\n## \u4f59\u5206\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3068\u3001\u5b9f\u884c\u9806\u5e8f\u306e\u4e21\u65b9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u5834\u5408\u306f `FullVerificationsInOrder` \u3092\u4f7f\u3046\n\n```java\npackage sample.jmockit;\n\nimport mockit.FullVerificationsInOrder;\nimport mockit.Mocked;\nimport mockit.VerificationsInOrder;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067_\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method();\n        hoge.method(\"hoge\");\n\n        new FullVerificationsInOrder() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method();\n\n        new FullVerificationsInOrder() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n    }\n\n    @Test\n    public void \u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method();\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n\n        new FullVerificationsInOrder() {{\n            hoge.method();\n            hoge.method(\"hoge\");\n        }};\n    }\n}\n```\n\n## `Expectations` \u3068 `FullVerificationsInOrder` \u306e\u9055\u3044\n\n```java\npackage sample.jmockit;\n\nimport mockit.Expectations;\nimport mockit.FullVerificationsInOrder;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n    @Mocked private Fuga fuga;\n\n    @Test\n    public void Expectations\u306f_\u5225\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u307e\u3067\u306f\u30c1\u30a7\u30c3\u30af\u3057\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        new Expectations() {{\n            hoge.method(\"hoge\");\n            hoge.method(\"fuga\");\n        }};\n\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n        fuga.method();\n    }\n\n    @Test\n    public void FullVerificationsInOrder\u306f_\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306f\u5168\u3066\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n        fuga.method();\n\n        new FullVerificationsInOrder() {{\n            hoge.method(\"hoge\");\n            hoge.method(\"fuga\");\n        }};\n    }\n\n    public static class Hoge {\n        public String method(String value) {\n            return value;\n        }\n    }\n\n    public static class Fuga {\n        public String method() {\n            return \"fuga\";\n        }\n    }\n}\n```\n\n- `Expectations` \u306f\u3001\u8a18\u9332\u306b\u4f7f\u7528\u3057\u305f\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u4ee5\u5916\u306b\u3064\u3044\u3066\u306f\u30c1\u30a7\u30c3\u30af\u3057\u306a\u3044\u3002\n- `FullVerifications(InOrder)` \u306f\u3001\u4f7f\u7528\u3057\u305f\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u4ee5\u5916\u306b\u3064\u3044\u3066\u3082\u3001\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u53b3\u5bc6\u306b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n## `FullVerifications(InOrder)` \u3067\u3001\u7279\u5b9a\u306e\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u3060\u3051\u691c\u8a3c\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.FullVerifications;\nimport mockit.Mocked;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n    @Mocked private Fuga fuga;\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        hoge.method(\"hoge\");\n        hoge.method(\"fuga\");\n        fuga.method();\n\n        new FullVerifications(hoge) {{\n            hoge.method(\"hoge\");\n            hoge.method(\"fuga\");\n        }};\n    }\n\n    public static class Hoge {\n        public String method(String value) {\n            return value;\n        }\n    }\n\n    public static class Fuga {\n        public String method() {\n            return \"fuga\";\n        }\n    }\n}\n```\n\n- `FullVerifications(InOrder)` \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u307e\u305f\u306f Class \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3068\u3001\u691c\u8a3c\u5bfe\u8c61\u3092\u305d\u306e\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u3060\u3051\u306b\u7d5e\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n## \u5b9f\u969b\u306b\u30c6\u30b9\u30c8\u5b9f\u884c\u6642\u306b\u4f7f\u7528\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u5f15\u6570\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mocked;\nimport mockit.Verifications;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Mocked private Hoge hoge;\n\n    @Test\n    public void test() {\n        hoge.method(\"HOGE\");\n\n        new Verifications() {{\n            String parameter;\n            hoge.method(parameter = withCapture());\n            System.out.println(\"parameter = \" + parameter);\n        }};\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nparameter = HOGE\n```\n\n- `withCapture()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u5b9f\u969b\u306b\u6e21\u3055\u308c\u305f\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n- \u4f7f\u3044\u30c9\u30b3\u30ed\u306f\u5206\u304b\u3089\u306a\u3044\u3002\n\n# `MockUp<T>` \u3067\u30e2\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Hoge>() {\n            @Mock\n            public void $init() {\n                System.out.println(\"[MockUp] called constructor\");\n            }\n\n            @Mock\n            public String method(String parameter) {\n                System.out.println(\"[MockUp] called method(String). parameter = \" + parameter);\n                return \"mock\";\n            }\n        };\n\n        Hoge hoge = new Hoge();\n        System.out.println(\"hoge.method() = \" + hoge.method());\n        System.out.println(\"hoge.method(\\\"hoge\\\") = \" + hoge.method(\"hoge\"));\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\n[MockUp] called constructor\nhoge.method() = hoge\n[MockUp] called method(String). parameter = hoge\nhoge.method(\"hoge\") = mock\n```\n\n- `MockUp<T>` \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001 `<T>` \u3067\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\n********************************************************************************\n- \u4e3b\u306b\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u3001\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u3068\u6b63\u3057\u304f\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u304d\u3066\u3044\u308b\u304b\uff08\u6e21\u3057\u3066\u3044\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u610f\u56f3\u3057\u305f\u3068\u304a\u308a\u304b\u3069\u3046\u304b\uff09\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u306b\u5229\u7528\u3059\u308b\u3002\n********************************************************************************\n- \u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3068\u5168\u304f\u540c\u3058\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u6301\u3064\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3001 `@Mock` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3059\u308b\u3068\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\n********************************************************************************\n- \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\u5834\u5408\u306f\u3001 `$init` \u3068\u3044\u3046\u7279\u5225\u306a\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n********************************************************************************\n- \u30e2\u30c3\u30af\u5316\u3055\u308c\u306a\u304b\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u306f\u672c\u6765\u306e\u5b9f\u88c5\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n********************************************************************************\n- `@Mock` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3068\u540c\u3058\u30b7\u30b0\u30cd\u30c1\u30e3\u306e\u30e1\u30bd\u30c3\u30c9\u304c `<T>` \u3067\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f `IllegalArgumentException` \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n********************************************************************************\n- \u3064\u307e\u308a\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b `IllegalArgumentException` \u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u306f\u3001 `@Mock` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u969b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3068\u7570\u306a\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001 `IllegalArgumentException` \u306e\u539f\u56e0\u306f\u6ce8\u610f\u3057\u3066\u30c1\u30a7\u30c3\u30af\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\n```text:\u5b9f\u969b\u306bIllegalArgumentException\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u3068\u304d\u306e\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\njava.lang.IllegalArgumentException: Matching real methods not found for the following mocks:\nsample.jmockit.JmockitTest$1#notExistsMethod()\n\uff08\u4ee5\u4e0b\u7565\uff09\n```\n\n## \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void classMethod() {\n                System.out.println(\"mock\");\n            }\n        };\n        Fuga.classMethod();\n    }\n\n    public static class Fuga {\n        public static void classMethod() {}\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nmock\n```\n\n- `@Mock` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u30e1\u30bd\u30c3\u30c9\u306b static \u4fee\u98fe\u5b50\u3092\u4ed8\u3051\u306a\u304f\u3066\u3082\u3044\u3044\u3002\n\n## private \u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Hoge>() {\n            @Mock\n            private void privateMethod() {\n                System.out.println(\"mock\");\n            }\n        };\n\n        Hoge hoge = new Hoge();\n        hoge.method();\n    }\n\n    public static class Hoge {\n        public void method() {\n            this.privateMethod();\n        }\n        private void privateMethod() {\n            System.out.println(\"privateMethod() is called.\");\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nmock\n```\n\n- \u30b7\u30b0\u30cd\u30c1\u30e3\u3055\u3048\u5408\u3063\u3066\u3044\u308c\u3070\u3001 private \u30e1\u30bd\u30c3\u30c9\u3082\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\n\n## String \u30af\u30e9\u30b9\u3082\u30e2\u30c3\u30af\u5316\u3067\u304d\u3061\u3083\u3046\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<String>() {\n            @Mock\n            public String toString() {\n                return \"mock\";\n            }\n        };\n\n        System.out.println(\"\\\"hoge\\\".toString() = \" + \"hoge\".toString());\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\n\"hoge\".toString() = mock\n```\n\n- \u306a\u306b\u3053\u308c\u3053\u308f\u3044\u3002\n\n## \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30e2\u30c3\u30af\u5316\u3092\u5ba3\u8a00\u3057\u3066\u3001\u305d\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u305d\u306e\u5834\u3067\u53d6\u5f97\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        MyInterface mock = new MockUp<MyInterface>() {\n            @Mock\n            public String method() {\n                return \"mock\";\n            }\n        }.getMockInstance();\n\n        System.out.println(\"mock.method() = \" + mock.method());\n    }\n\n    public static interface MyInterface {\n        String method();\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nmock.method() = mock\n```\n\n- `getMockInstance()` \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u305d\u306e\u5834\u3067\u53d6\u5f97\u3067\u304d\u308b\u3002\n- \u666e\u901a\u306e\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u4e0d\u8981\u3060\u3051\u3069\u3001\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092\u6301\u305f\u306a\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u5834\u5408\u306b\u6709\u7528\u3002\n\n## \u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u5236\u9650\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock(invocations = 1)\n            public void method1() {}\n            @Mock(minInvocations = 2)\n            public void method2() {}\n            @Mock(maxInvocations = 3)\n            public void method3() {}\n        };\n\n        Fuga fuga = new Fuga();\n        fuga.method1();\n        fuga.method2();\n        fuga.method2();\n        fuga.method3();\n        fuga.method3();\n    }\n\n    public static class Fuga {\n        public void method1() {}\n        public void method2() {}\n        public void method3() {}\n    }\n}\n```\n\n- `@Mock` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5c5e\u6027\u3067\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u56de\u6570\u3092\u5236\u9650\u3067\u304d\u308b\u3002\n- `invocations` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305f\u56de\u6570\u3060\u3051\u547c\u3073\u51fa\u3055\u308c\u306a\u3044\u3068\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\u3002\n- `minInvocations` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u300c\u6700\u4f4e\u9650\u5b9f\u884c\u3055\u308c\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u56de\u6570\u300d\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n- `maxInvocations` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u300c\u5b9f\u884c\u3055\u308c\u3066\u3044\u3044\u6700\u5927\u306e\u56de\u6570\u300d\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\n## static \u521d\u671f\u5316\u30d6\u30ed\u30c3\u30af\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void $clinit() {\n                System.out.println(\"[mocked static initialization]\");\n            }\n        };\n\n        System.out.println(\"Fuga.FINAL_STATIC_FIELD = \" + Fuga.FINAL_STATIC_FIELD);\n        System.out.println(\"Fuga.NOT_FINAL_STATIC_FIELD = \" + Fuga.NOT_FINAL_STATIC_FIELD);\n    }\n\n    public static class Fuga {\n        static final String FINAL_STATIC_FIELD = \"final static field\";\n        static String NOT_FINAL_STATIC_FIELD = \"not final static field\";\n        static {\n            System.out.println(\"[original static initialization]\");\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nFuga.FINAL_STATIC_FIELD = final static field\n[mocked static initialization]\nFuga.NOT_FINAL_STATIC_FIELD = null\n```\n\n- `$clinit()` \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3001 static \u521d\u671f\u5316\u30d6\u30ed\u30c3\u30af\u3092\u30e2\u30c3\u30af\u5316\u3067\u304d\u308b\u3002\n- final \u3067\u7121\u3044\u30af\u30e9\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u521d\u671f\u5316\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n### \u30e2\u30c3\u30af\u5316\u3059\u308b\u5834\u5408\u306f\u3001 JVM \u304c\u521d\u671f\u5316\u3059\u308b\u524d\u306b `MockUp` \u3092\u5ba3\u8a00\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        System.out.println(\"\u3010JVM \u306b\u3088\u308b\u521d\u671f\u5316\u3011\");\n        System.out.println(\"Fuga.NOT_FINAL_STATIC_FIELD = \" + Fuga.NOT_FINAL_STATIC_FIELD);\n\n        new MockUp<Fuga>() {\n            @Mock\n            public void $clinit() {\n                System.out.println(\"[mocked static initialization]\");\n            }\n        };\n\n        System.out.println(\"\u3010MockUp \u306b\u3088\u308b\u5ba3\u8a00\u5f8c\u3011\");\n        System.out.println(\"Fuga.NOT_FINAL_STATIC_FIELD = \" + Fuga.NOT_FINAL_STATIC_FIELD);\n    }\n\n    public static class Fuga {\n        static final String FINAL_STATIC_FIELD = \"final static field\";\n        static String NOT_FINAL_STATIC_FIELD = \"not final static field\";\n\n        static {\n            System.out.println(\"[original static initialization]\");\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\n\u3010JVM \u306b\u3088\u308b\u521d\u671f\u5316\u3011\n[original static initialization]\nFuga.NOT_FINAL_STATIC_FIELD = not final static field\n\n\u3010MockUp \u306b\u3088\u308b\u5ba3\u8a00\u5f8c\u3011\nFuga.NOT_FINAL_STATIC_FIELD = not final static field\n```\n\n- JVM \u306b\u3088\u308b\u521d\u671f\u5316\u304c\u5148\u306b\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001 `MockUp` \u306b\u3088\u308b\u5ba3\u8a00\u3092\u3057\u3066\u3082 static \u521d\u671f\u5316\u30d6\u30ed\u30c3\u30af\u306f\u30e2\u30c3\u30af\u5316\u3055\u308c\u306a\u3044\uff08\u5f53\u305f\u308a\u524d\u3068\u3044\u3048\u3070\u5f53\u305f\u308a\u524d\uff09\u3002\n\n## `Invocation`\n\n```java\npackage sample.jmockit;\n\nimport mockit.Invocation;\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Hoge>() {\n            @Mock\n            public void method(Invocation inv, String parameter) {}\n        };\n    }\n}\n```\n\n- `@Mock` \u3092\u4ed8\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u306f\u3001\u4efb\u610f\u306b `Invocation` \u578b\u306e\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u7528\u306b\u5ba3\u8a00\u3067\u304d\u308b\u3002\n- `Invocation` \u306b\u306f\u3001\u305d\u306e\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\n### \u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u3001\u5b9f\u884c\u6642\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Invocation;\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void method(Invocation inv) {\n                Fuga fuga = inv.getInvokedInstance();\n                fuga.value = \"mock\";\n            }\n\n            @Mock\n            public void classMethod(Invocation inv) {\n                Fuga fuga = inv.getInvokedInstance();\n                System.out.println(\"\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u53d6\u5f97\u3057\u305f fuga = \" + fuga);\n            }\n        };\n\n        Fuga fuga = new Fuga();\n        fuga.method();\n        System.out.println(\"fuga.value = \" + fuga.value);\n        Fuga.classMethod();\n    }\n\n    public static class Fuga {\n        private String value;\n        public void method() {}\n        public static void classMethod() {}\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nfuga.value = mock\n\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u53d6\u5f97\u3057\u305f fuga = null\n```\n\n- `getInvokedInstance()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n- \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067 `getInvokedInstance()` \u3092\u4f7f\u3046\u3068\u3001 `null` \u304c\u8fd4\u3055\u308c\u308b\u3002\n\n### \u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u56de\u6570\u3092\u53d6\u5f97\u3059\u308b\n\n```java\npackage sample.jmockit;\n\nimport mockit.Invocation;\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void method(Invocation inv) {\n                System.out.println(inv.getInvocationCount());\n            }\n        };\n\n        Fuga fuga = new Fuga();\n        fuga.method();\n        fuga.method();\n        fuga.method();\n    }\n\n    public static class Fuga {\n        public void method() {}\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\n1\n2\n3\n```\n\n- `getInvocationCount()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u56de\u6570\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n### \u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u5b9f\u88c5\u3092\u547c\u3073\u51fa\u3059\n\n```java\npackage sample.jmockit;\n\nimport mockit.Invocation;\nimport mockit.Mock;\nimport mockit.MockUp;\nimport org.junit.Test;\n\npublic class JmockitTest {\n\n    @Test\n    public void test() {\n        new MockUp<Fuga>() {\n            @Mock\n            public void method(Invocation inv) {\n                System.out.println(\"mock\");\n                inv.proceed();\n            }\n        };\n\n        Fuga fuga = new Fuga();\n        fuga.method();\n    }\n\n    public static class Fuga {\n        public void method() {\n            System.out.println(\"fuga\");\n        }\n    }\n}\n```\n\n```text:\nmock\nfuga\n```\n\n- `proceed(Object...)` \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n# \u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u305f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n\n`Deencapsulation` \u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u308a\u3001\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3 API \u3092\u4f7f\u3063\u3066 private \u306a\u30d5\u30a3\u30fc\u30eb\u30c9\u3084\u30e1\u30bd\u30c3\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n```java\npackage sample.jmockit;\n\nimport mockit.Deencapsulation;\nimport org.junit.Test;\n\npublic class JmockitTest {\n    @Test\n    public void test() {\n        Fuga fuga = Deencapsulation.newInstance(Fuga.class);\n        Deencapsulation.invoke(fuga, \"method\");\n        Deencapsulation.setField(fuga, \"instanceField\", \"fugaaa\");\n        System.out.println(\"fuga.instanceField = \" + Deencapsulation.getField(fuga, \"instanceField\"));\n    }\n\n    public static class Fuga {\n        private String instanceField = \"instance field\";\n\n        private Fuga() {\n            System.out.println(\"called Fuga constructor\");\n        }\n\n        private void method() {\n            System.out.println(\"called fuga.method()\");\n        }\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\ncalled Fuga constructor\ncalled fuga.method()\nfuga.instanceField = fugaaa\n```\n\n| \u30e1\u30bd\u30c3\u30c9                | \u6a5f\u80fd                                         |\n| :---------------------- | :------------------------------------        |\n| newInstance()           | \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b |\n| setField(), getField()  | \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b                     |\n| invoke()                | \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b                           |\n\n\u4f7f\u3044\u65b9\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u898b\u308c\u3070\u3060\u3044\u305f\u3044\u60f3\u50cf\u3067\u304d\u308b\uff08[Deencapsulation (JMockit Toolkit API)](http://jmockit.googlecode.com/svn/trunk/www/javadoc/mockit/Deencapsulation.html)\uff09\u3002\n\n# \u53c2\u8003\n- [The JMockit testing toolkit](http://jmockit.org/index.html)\n- [Getting started with the JMockit Testing Toolkit \u306e\u90a6\u8a33\uff08\u524d\u7de8\uff09 - A Memorandum](http://etc9.hatenablog.com/entry/20110215/1297783809)\n- [Getting started with the JMockit Testing Toolkit \u306e\u90a6\u8a33\uff08\u5f8c\u7de8\uff09 - A Memorandum](http://etc9.hatenablog.com/entry/20110216/1297876841)\n- [JMockit\u306f\u7406\u60f3\u7684\u306a\u30e2\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af - \u3058\u3085\u3093\u3044\u3061\u2606\u304b\u3068\u3046\u306e\u6280\u8853\u65e5\u8a8c](http://d.hatena.ne.jp/j5ik2o/20110205/1296922274)\n- [\u6b21\u4e16\u4ee3\u306e\u30e2\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bJMockit\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9 - \u9054\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3092\u76ee\u6307\u3057\u3066](http://d.hatena.ne.jp/ryoasai/20110107/1294427245)\n\n", "tags": ["Java1.7", "jMockit1.6"]}