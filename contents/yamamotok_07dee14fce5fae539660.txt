{"context": " More than 1 year has passed since last update.\n\nPython\u3067\u65e5\u672c\u8a9e\u306ebase64\u30a8\u30f3\u30b3\u30fc\u30c9\u30fb\u30c7\u30b3\u30fc\u30c9\u3092\u884c\u3046\nBase64\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u65e5\u672c\u8a9e\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u3092\u307e\u305f\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u56f0\u308a\u307e\u3057\u305f\u3002\nUnicodeEncodeError: 'ascii' codec can't encode character ....\n\n\u89e3\u6c7a\u65b9\u6cd5\u306f\u3053\u3053\u306b\u3042\u308a\u307e\u3057\u305f\u3002\nhttp://bugs.python.org/issue4329\n\nIt's not a bug. base64 is a codec to encode bytes and characters. \nYou have to encode your unicode string to bytes using a charset\n Example (utf-8):\n\nfrom base64 import b64encode, b64decode\nb64encode(u'a\\xe9'.encode(\"utf-8\"))\n'YcOp'\nunicode(b64decode('YcOp'), \"utf-8\")\nu'a\\xe9'\n\n\nb64encode\u306b\u6e21\u3059\u5024\u306e encode \u3068 b64decode\u304b\u3089\u53d7\u3051\u53d6\u308b\u5024\u306e decode = unicode() \u304c\u5fc5\u8981\u3067\u3057\u305f\u3002\n\u306a\u304a\u79c1\u306e\u74b0\u5883\u306fPython 2.6 \u3067\u3059\u3002\n\n\u5b9f\u9a13\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n# -*- coding: utf-8 -*-\n\nimport base64\nimport pprint\n\nsource = u'\u65e5\u672c\u8a9e\u3067\u3053\u3093\u306b\u3061\u306f'\nencoded_source = u'5pel5pys6Kqe44Gn44GT44KT44Gr44Gh44Gv'\n\nchars_retrieved = base64.b64decode(encoded_source)\ndecoded_string = chars_retrieved.decode('utf-8')\ndecoded_string_other_way = unicode(chars_retrieved, 'utf-8')\n\nassert decoded_string == source, 'Decode by decode() failed, they do not match'\nassert decoded_string_other_way == decoded_string, 'Decode by unicode() failed, they do not match'\n\nchars_retrieved = decoded_string.encode('utf-8')\nencoded_string = base64.b64encode(chars_retrieved)\n\nassert encoded_string == encoded_source, 'Encode failed'\n\nPython\u3067\u65e5\u672c\u8a9e\u306ebase64\u30a8\u30f3\u30b3\u30fc\u30c9\u30fb\u30c7\u30b3\u30fc\u30c9\u3092\u884c\u3046\n----\n\nBase64\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u65e5\u672c\u8a9e\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u3092\u307e\u305f\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u56f0\u308a\u307e\u3057\u305f\u3002\n\n```text\nUnicodeEncodeError: 'ascii' codec can't encode character ....\n```\n\n\u89e3\u6c7a\u65b9\u6cd5\u306f\u3053\u3053\u306b\u3042\u308a\u307e\u3057\u305f\u3002\n\nhttp://bugs.python.org/issue4329\n\n>\nIt's not a bug. base64 is a codec to encode *bytes* and characters. \nYou have to encode your unicode string to bytes using a charset\n Example (utf-8):\n>>\nfrom base64 import b64encode, b64decode\nb64encode(u'a\\xe9'.encode(\"utf-8\"))\n'YcOp'\nunicode(b64decode('YcOp'), \"utf-8\")\nu'a\\xe9'\n\nb64encode\u306b\u6e21\u3059\u5024\u306e *encode* \u3068 b64decode\u304b\u3089\u53d7\u3051\u53d6\u308b\u5024\u306e *decode = unicode()* \u304c\u5fc5\u8981\u3067\u3057\u305f\u3002\n\n\u306a\u304a\u79c1\u306e\u74b0\u5883\u306fPython 2.6 \u3067\u3059\u3002\n\n\n-----\n\n\u5b9f\u9a13\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\n```py\n# -*- coding: utf-8 -*-\n\nimport base64\nimport pprint\n\nsource = u'\u65e5\u672c\u8a9e\u3067\u3053\u3093\u306b\u3061\u306f'\nencoded_source = u'5pel5pys6Kqe44Gn44GT44KT44Gr44Gh44Gv'\n\nchars_retrieved = base64.b64decode(encoded_source)\ndecoded_string = chars_retrieved.decode('utf-8')\ndecoded_string_other_way = unicode(chars_retrieved, 'utf-8')\n\nassert decoded_string == source, 'Decode by decode() failed, they do not match'\nassert decoded_string_other_way == decoded_string, 'Decode by unicode() failed, they do not match'\n\nchars_retrieved = decoded_string.encode('utf-8')\nencoded_string = base64.b64encode(chars_retrieved)\n\nassert encoded_string == encoded_source, 'Encode failed'\n```\n", "tags": ["Python", "base64", "UTF-8", "\u65e5\u672c\u8a9e"]}