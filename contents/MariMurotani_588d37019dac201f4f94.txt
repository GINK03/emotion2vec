{"context": " More than 1 year has passed since last update.\u524d\u56de\u3001SpringBoot\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30ed\u30b1\u30fc\u30eb\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u3001\u524d\u56de\u306e\u3092\u767a\u5c55\u3055\u305b\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30ed\u30fc\u30ab\u30eb\u306eDB\u3067\u4e00\u5143\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u4f55\u3067\u3053\u3093\u306a\u4e8b\u3092\u3059\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u30ed\u30fc\u30ab\u30e9\u30a4\u30ba\u306e\u624b\u9593\u3092\u306a\u304f\u3059\u305f\u3081\u3001\u30aa\u30d5\u30b7\u30e7\u30a2\u3067\u6700\u521d\u306b\u82f1\u8a9e\u7248\u3067\u4f5c\u3063\u3066\u30b3\u30b9\u30c8\u3092\u4e0b\u3052\u308b\u70ba\u306a\u3069\u3044\u308d\u3044\u308d\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\n\n1.Message\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\nMongoDB\u7528\u306e\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u30e2\u30c7\u30eb\n\n2.MyMessageService \u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\n@Service\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d3\u30b9\u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\n\u3053\u3046\u3059\u308b\u4e8b\u3067\u3001Controller\u304b\u3089\u3082\u76f4\u63a5\u547c\u3073\u51fa\u3057\u53ef\u80fd\n\n3.MyMessageSource \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f5c\u6210\nMessageSource\u3092\u7d99\u627f\u3057\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u6210\n\n4.MyMessageResolver \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f5c\u6210\nAbstractMessageResolver\u3092\u7d99\u627f\u3057\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u6210\n\n\uff15.\u30e1\u30c3\u30bb\u30fc\u30b8\u30ea\u30be\u30eb\u30d0\u306e\u8a2d\u5b9a\nemplateEngine.setMessageResolver((IMessageResolver) context.getBean(MyMessageResolver.class));\n\u4eca\u56de\u306f\u3001Autowired\u306a\u3069Spring\u72ec\u81ea\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001new MyMessageResolver()\u3067\u306f\u306a\u304f\u3001bean\u3068\u3057\u3066\u751f\u6210\u3059\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\n\n6.\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u8a18\u8ff0\n\nteplate.html\n<div th:text=\"#{parse.index.titile(${userName})}\"></div>\n<div th:text=\"#{user.welcome(${userAttiribute})}\"></div>`\n\n\n\nXX.java\n@EnableAutoConfiguration\n@EnableConfigurationProperties\n@Controller\n@RequestMapping(\"/XX\")\npublic class XXController {\n    @Autowired\n    private ApplicationContext context;\n\n    @RequestMapping(value=\"index\",method=RequestMethod.GET)\n    public String index(Model model) {\n        System.out.println(LocaleContextHolder.getLocale());\n\n        model.addAttribute(\"userName\",new String[]{\"Mari-san\",\"Yoshi-san\"});\n        model.addAttribute(\"userAttiribute\",\"PratinumUser\");\n        model.addAttribute(\"tree\", \"\");\n        return \"parse/index\";\n    }\n}\n\n\n7.\u30c7\u30fc\u30bf\u306e\u7528\u610f\n\nmessages_en_us.properties\nuser.welcome=Welcome {0}\n\n\n\ndb.Message\n{\n    \"_id\" : ObjectId(\"55ffe15ed9b583a6817f3a6b\"),\n    \"code\" : \"parse.index.titile\",\n    \"locale\" : \"ja.*|en.*\",\n    \"value\" : \"\u30cf\u30ed\u30fc22 {0} ,{1}\",\n    \"update_time\" : Timestamp(1416472648, 1)\n}\n\n\n\nMessage.java\n@Getter\n@Setter\n@Document(collection=\"Message\")\npublic class Message {\n    @Id\n    private String id;\n    private String code;\n    private String locale;\n    private String value;\n    private org.bson.types.BSONTimestamp update_time;\n\n    public Message(String locale, String value) {\n        super();\n        this.locale = (locale == null)?\"ja\":locale;\n        this.value = (value == null)?\"\":value;\n\n    }\n    public Message() {\n        super();\n    }\n}\n\n\n\nMyMessageService.java\n@Service\npublic class MyMessageService extends ServiceBase {\n\n    public MyMessageService() {\n        super();\n    }\n\n     public String GetMessage(String code,String locale){\n        String result = \"\";\n\n        Query searchUserQuery = this.GetSaerchQuery(code, locale);\n        List<Message> messages = mongoOperation.find(searchUserQuery, Message.class);\n        Iterator iterator = messages.iterator();\n        while(iterator.hasNext()) {\n            Message message = (Message)iterator.next();\n            String localereg = message.getLocale();\n            if(localereg != null && localereg  != \"\"){\n                Pattern p = Pattern.compile(localereg);\n                Matcher m = p.matcher(locale);\n                if(m.matches()){\n                    result = message.getValue() == null?result:message.getValue();\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    private Query GetSaerchQuery(String code,String locale){\n        Query searchMessageQuery = new Query(Criteria.where(\"code\").is(code));\n        searchMessageQuery.with(new Sort(Sort.Direction.DESC, \"update_time\"));\n\n        System.out.println(searchMessageQuery.toString());;\n        return searchMessageQuery;\n\n    }\n}\n\n\n\nMyMessageSource.java\n@Component\npublic class MyMessageSource implements MessageSource{\n    @Autowired\n    MyMessageService messageService;\n\n    @Autowired\n    MessageSource messageSource;\n\n    @Override\n    public String getMessage(String code, Object[] args,String defaultMessage, Locale locale) {\n        return this.getMessage(code,args,\"\",locale);\n    }\n\n    @Override\n    public String getMessage(String code, Object[] args, Locale locale) {\n        String sMess = messageService.GetMessage(code, locale.toString());\n\n        if(sMess == null | sMess == \"\"){\n            sMess = messageSource.getMessage(code,args,locale) ;\n        }\n        if(sMess == null){\n            sMess = ConstError.MESSAGE_NON_EXIST_ERR;\n        }\n\n        return sMess;\n    }\n\n    @Override\n    public String getMessage(MessageSourceResolvable resolvable, Locale locale) {\n        String sMess = messageSource.getMessage(resolvable,locale);\n        return sMess;\n    }\n\n}\n\n\n\nMyMessageResolver.java\n\n@Component\npublic class MyMessageResolver extends AbstractMessageResolver {//StandardMessageResolver\n\n    @Autowired\n    MyMessageSource messageSource;\n\n    @Autowired\n    ApplicationContext context;\n\n    public void setMessageSource(MyMessageSource messageSource) {\n        this.messageSource = messageSource;\n    }\n\n    @Override\n    public MessageResolution resolveMessage(Arguments arguments, String key,Object[] messageParameters) {\n        String sMess = this.messageSource.getMessage(key.toString(), null,LocaleContextHolder.getLocale());\n        //super.checkInitialized();\n\n        if(!(messageParameters[0] instanceof String)){\n\n            for(int i = 0; i < ((Object[])messageParameters[0]).length ; i++){\n                sMess = sMess.replace(\"{\" +String.valueOf(i)+ \"}\",String.valueOf(((Object[])messageParameters[0])[i]));\n            }\n        }else{\n            for(int i = 0; i < messageParameters.length ; i++){\n                System.out.println(messageParameters[i]);\n                sMess = sMess.replace(\"{\" +String.valueOf(i)+ \"}\",String.valueOf(messageParameters[i]));\n            }\n        }\n        MessageResolution resolution = new MessageResolution(sMess);\n        return resolution;\n    }\n}\n\n\n\nThymeleafConfig.java\n@Configuration\npublic class ThymeleafConfig extends WebMvcConfigurerAdapter {\n        @Autowired\n        private ApplicationContext context;\n\n        @Value(\"${lang.default.lang}\")\n        private String defLang;\n        @Value(\"${lang.default.locale}\")\n        private String defLocale;\n\n\n        @Override \n        public void addInterceptors(InterceptorRegistry registry) { \n                registry.addInterceptor(localeChangeInterceptor()); \n        } \n\n        @Bean \n        public LocaleChangeInterceptor localeChangeInterceptor() { \n                LocaleChangeInterceptor localeChangeInterceptor = new LocaleChangeInterceptor(); \n                localeChangeInterceptor.setParamName(\"language\"); \n                return localeChangeInterceptor; \n        } \n\n        @Bean \n        public CookieLocaleResolver localeResolver() { \n                CookieLocaleResolver localeResolver = new CookieLocaleResolver(); \n                Locale defaultLocale = new Locale(defLang + \"_\" + defLocale); \n                localeResolver.setDefaultLocale(defaultLocale); \n                return localeResolver; \n        }\n\n        @Bean \n        public ReloadableResourceBundleMessageSource messageSource() { \n            ReloadableResourceBundleMessageSource messageSource = new ReloadableResourceBundleMessageSource(); \n            messageSource.setBasename(\"classpath:messages/messages\"); \n            return messageSource; \n        }\n\n        @Override\n        public void addResourceHandlers(ResourceHandlerRegistry registry) {\n            registry.addResourceHandler(\"/resources/**\").addResourceLocations(\"/WEB-INF/resources/\");\n        }\n\n\n        ServletContextTemplateResolver   not working\n\n        @Bean\n        public ClassLoaderTemplateResolver templateResolver() {\n            ClassLoaderTemplateResolver classLoaderTemplateResolver = new ClassLoaderTemplateResolver();\n            classLoaderTemplateResolver.setCacheable(false);\n            classLoaderTemplateResolver.setPrefix(\"templates/\");\n            classLoaderTemplateResolver.setSuffix(\".html\");\n            classLoaderTemplateResolver.setTemplateMode(\"HTML5\");\n            classLoaderTemplateResolver.setCacheable(false);\n            //classLoaderTemplateResolver.setResourceResolver(resourceResolver);\n            return classLoaderTemplateResolver;\n        }\n\n        @Bean\n        public SpringTemplateEngine templateEngine() {\n            SpringTemplateEngine templateEngine = new SpringTemplateEngine();\n            templateEngine.setTemplateResolver(templateResolver());\n            templateEngine.addDialect(new ThymeleafDialect());\n            templateEngine.setMessageResolver((IMessageResolver) context.getBean(MyMessageResolver.class));\n            return templateEngine;\n        }\n\n        @Bean\n        public ThymeleafViewResolver viewResolver() {\n            ThymeleafViewResolver viewResolver = new ThymeleafViewResolver();\n            viewResolver.setTemplateEngine(templateEngine());\n            return viewResolver;\n        }\n\n\n\n}\n\n\n\u524d\u56de\u3001SpringBoot\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30ed\u30b1\u30fc\u30eb\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u3001\u524d\u56de\u306e\u3092\u767a\u5c55\u3055\u305b\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30ed\u30fc\u30ab\u30eb\u306eDB\u3067\u4e00\u5143\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u4f55\u3067\u3053\u3093\u306a\u4e8b\u3092\u3059\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u30ed\u30fc\u30ab\u30e9\u30a4\u30ba\u306e\u624b\u9593\u3092\u306a\u304f\u3059\u305f\u3081\u3001\u30aa\u30d5\u30b7\u30e7\u30a2\u3067\u6700\u521d\u306b\u82f1\u8a9e\u7248\u3067\u4f5c\u3063\u3066\u30b3\u30b9\u30c8\u3092\u4e0b\u3052\u308b\u70ba\u306a\u3069\u3044\u308d\u3044\u308d\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\n[\u30bd\u30fc\u30b9](https://github.com/MariMurotani/SpringDemo/blob/5_messaging/)\n\n###1.Message\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\nMongoDB\u7528\u306e\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u30e2\u30c7\u30eb\n\n###2.MyMessageService \u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\n@Service\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d3\u30b9\u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\n\u3053\u3046\u3059\u308b\u4e8b\u3067\u3001Controller\u304b\u3089\u3082\u76f4\u63a5\u547c\u3073\u51fa\u3057\u53ef\u80fd\n\n###3.MyMessageSource \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f5c\u6210\nMessageSource\u3092\u7d99\u627f\u3057\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u6210\n\n###4.MyMessageResolver \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f5c\u6210\nAbstractMessageResolver\u3092\u7d99\u627f\u3057\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u6210\n\n###\uff15.\u30e1\u30c3\u30bb\u30fc\u30b8\u30ea\u30be\u30eb\u30d0\u306e\u8a2d\u5b9a\n`emplateEngine.setMessageResolver((IMessageResolver) context.getBean(MyMessageResolver.class));`\n\u4eca\u56de\u306f\u3001Autowired\u306a\u3069Spring\u72ec\u81ea\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001new MyMessageResolver()\u3067\u306f\u306a\u304f\u3001bean\u3068\u3057\u3066\u751f\u6210\u3059\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\n\n###6.\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u8a18\u8ff0\n\n```teplate.html\n<div th:text=\"#{parse.index.titile(${userName})}\"></div>\n<div th:text=\"#{user.welcome(${userAttiribute})}\"></div>`\n```\n```java:XX.java\n@EnableAutoConfiguration\n@EnableConfigurationProperties\n@Controller\n@RequestMapping(\"/XX\")\npublic class XXController {\n\t@Autowired\n\tprivate ApplicationContext context;\n\t\n\t@RequestMapping(value=\"index\",method=RequestMethod.GET)\n\tpublic String index(Model model) {\n\t\tSystem.out.println(LocaleContextHolder.getLocale());\n\t\t\n\t\tmodel.addAttribute(\"userName\",new String[]{\"Mari-san\",\"Yoshi-san\"});\n\t\tmodel.addAttribute(\"userAttiribute\",\"PratinumUser\");\n\t\tmodel.addAttribute(\"tree\", \"\");\n\t\treturn \"parse/index\";\n\t}\n}\n```\n\n***7.\u30c7\u30fc\u30bf\u306e\u7528\u610f***\n\n```messages_en_us.properties\nuser.welcome=Welcome {0}\n```\n```db.Message\n{\n    \"_id\" : ObjectId(\"55ffe15ed9b583a6817f3a6b\"),\n    \"code\" : \"parse.index.titile\",\n    \"locale\" : \"ja.*|en.*\",\n    \"value\" : \"\u30cf\u30ed\u30fc22 {0} ,{1}\",\n    \"update_time\" : Timestamp(1416472648, 1)\n}\n```\n\n```java:Message.java\n@Getter\n@Setter\n@Document(collection=\"Message\")\npublic class Message {\n\t@Id\n\tprivate String id;\n\tprivate String code;\n\tprivate String locale;\n\tprivate String value;\n\tprivate org.bson.types.BSONTimestamp update_time;\n\t\n\tpublic Message(String locale, String value) {\n\t\tsuper();\n\t\tthis.locale = (locale == null)?\"ja\":locale;\n\t\tthis.value = (value == null)?\"\":value;\n\t\t\n\t}\n\tpublic Message() {\n\t\tsuper();\n\t}\n}\n```\n\n```java:MyMessageService.java\n@Service\npublic class MyMessageService extends ServiceBase {\n\t\n\tpublic MyMessageService() {\n\t\tsuper();\n\t}\n\t\n\t public String GetMessage(String code,String locale){\n\t\tString result = \"\";\n\t\t \n\t\tQuery searchUserQuery = this.GetSaerchQuery(code, locale);\n\t\tList<Message> messages = mongoOperation.find(searchUserQuery, Message.class);\n\t\tIterator iterator = messages.iterator();\n\t\twhile(iterator.hasNext()) {\n\t\t\tMessage message = (Message)iterator.next();\n\t\t\tString localereg = message.getLocale();\n\t\t\tif(localereg != null && localereg  != \"\"){\n\t\t\t\tPattern p = Pattern.compile(localereg);\n\t\t\t\tMatcher m = p.matcher(locale);\n\t\t\t\tif(m.matches()){\n\t\t\t\t\tresult = message.getValue() == null?result:message.getValue();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n    }\n\t \n    private Query GetSaerchQuery(String code,String locale){\n    \tQuery searchMessageQuery = new Query(Criteria.where(\"code\").is(code));\n    \tsearchMessageQuery.with(new Sort(Sort.Direction.DESC, \"update_time\"));\n\t\t\t\n\t\tSystem.out.println(searchMessageQuery.toString());;\n\t\treturn searchMessageQuery;\n    \t\n    }\n}\n```\n\n```java:MyMessageSource.java\n@Component\npublic class MyMessageSource implements MessageSource{\n\t@Autowired\n\tMyMessageService messageService;\n\n\t@Autowired\n\tMessageSource messageSource;\n\t\n\t@Override\n\tpublic String getMessage(String code, Object[] args,String defaultMessage, Locale locale) {\n\t\treturn this.getMessage(code,args,\"\",locale);\n\t}\n\t\n\t@Override\n\tpublic String getMessage(String code, Object[] args, Locale locale) {\n\t\tString sMess = messageService.GetMessage(code, locale.toString());\n\t\t\n\t\tif(sMess == null | sMess == \"\"){\n\t\t\tsMess = messageSource.getMessage(code,args,locale) ;\n\t\t}\n\t\tif(sMess == null){\n\t\t\tsMess = ConstError.MESSAGE_NON_EXIST_ERR;\n\t\t}\n\t\t\n\t\treturn sMess;\n\t}\n\t\n\t@Override\n\tpublic String getMessage(MessageSourceResolvable resolvable, Locale locale) {\n\t\tString sMess = messageSource.getMessage(resolvable,locale);\n\t\treturn sMess;\n\t}\n\n}\n```\n```java:MyMessageResolver.java\n\n@Component\npublic class MyMessageResolver extends AbstractMessageResolver {//StandardMessageResolver\n\n\t@Autowired\n\tMyMessageSource messageSource;\n\t\t\n\t@Autowired\n\tApplicationContext context;\n\t\n\tpublic void setMessageSource(MyMessageSource messageSource) {\n\t    this.messageSource = messageSource;\n\t}\n\t\n\t@Override\n\tpublic MessageResolution resolveMessage(Arguments arguments, String key,Object[] messageParameters) {\n\t\tString sMess = this.messageSource.getMessage(key.toString(), null,LocaleContextHolder.getLocale());\n\t\t//super.checkInitialized();\n\t\t\n\t\tif(!(messageParameters[0] instanceof String)){\n\t\t\t\n\t\t\tfor(int i = 0; i < ((Object[])messageParameters[0]).length ; i++){\n\t\t\t\tsMess = sMess.replace(\"{\" +String.valueOf(i)+ \"}\",String.valueOf(((Object[])messageParameters[0])[i]));\n\t\t\t}\n\t\t}else{\n\t\t\tfor(int i = 0; i < messageParameters.length ; i++){\n\t\t\t\tSystem.out.println(messageParameters[i]);\n\t\t\t\tsMess = sMess.replace(\"{\" +String.valueOf(i)+ \"}\",String.valueOf(messageParameters[i]));\n\t\t\t}\n\t\t}\n\t\tMessageResolution resolution = new MessageResolution(sMess);\n\t\treturn resolution;\n\t}\n}\n```\n```java:ThymeleafConfig.java\n@Configuration\npublic class ThymeleafConfig extends WebMvcConfigurerAdapter {\n\t\t@Autowired\n\t    private ApplicationContext context;\n\t\n\t    @Value(\"${lang.default.lang}\")\n\t\tprivate String defLang;\n\t    @Value(\"${lang.default.locale}\")\n\t\tprivate String defLocale;\n\t\n\t    \n\t    @Override \n\t    public void addInterceptors(InterceptorRegistry registry) { \n\t            registry.addInterceptor(localeChangeInterceptor()); \n\t    } \n\t\n\t    @Bean \n\t    public LocaleChangeInterceptor localeChangeInterceptor() { \n\t            LocaleChangeInterceptor localeChangeInterceptor = new LocaleChangeInterceptor(); \n\t            localeChangeInterceptor.setParamName(\"language\"); \n\t            return localeChangeInterceptor; \n\t    } \n\t\n\t    @Bean \n\t    public CookieLocaleResolver localeResolver() { \n\t            CookieLocaleResolver localeResolver = new CookieLocaleResolver(); \n\t            Locale defaultLocale = new Locale(defLang + \"_\" + defLocale); \n\t            localeResolver.setDefaultLocale(defaultLocale); \n\t            return localeResolver; \n\t    }\n\t    \n\t    @Bean \n\t    public ReloadableResourceBundleMessageSource messageSource() { \n\t    \tReloadableResourceBundleMessageSource messageSource = new ReloadableResourceBundleMessageSource(); \n\t        messageSource.setBasename(\"classpath:messages/messages\"); \n\t        return messageSource; \n\t    }\n\t    \n\t    @Override\n\t    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n\t        registry.addResourceHandler(\"/resources/**\").addResourceLocations(\"/WEB-INF/resources/\");\n\t    }\n    \n\t\n\t\tServletContextTemplateResolver   not working\n\t\n\t\t@Bean\n\t\tpublic ClassLoaderTemplateResolver templateResolver() {\n\t\t\tClassLoaderTemplateResolver classLoaderTemplateResolver = new ClassLoaderTemplateResolver();\n\t\t\tclassLoaderTemplateResolver.setCacheable(false);\n\t\t\tclassLoaderTemplateResolver.setPrefix(\"templates/\");\n\t\t\tclassLoaderTemplateResolver.setSuffix(\".html\");\n\t\t\tclassLoaderTemplateResolver.setTemplateMode(\"HTML5\");\n\t\t\tclassLoaderTemplateResolver.setCacheable(false);\n\t\t\t//classLoaderTemplateResolver.setResourceResolver(resourceResolver);\n\t\t\treturn classLoaderTemplateResolver;\n\t\t}\n\t\n        @Bean\n\t    public SpringTemplateEngine templateEngine() {\n\t        SpringTemplateEngine templateEngine = new SpringTemplateEngine();\n\t        templateEngine.setTemplateResolver(templateResolver());\n\t        templateEngine.addDialect(new ThymeleafDialect());\n\t        templateEngine.setMessageResolver((IMessageResolver) context.getBean(MyMessageResolver.class));\n\t        return templateEngine;\n\t    }\n\t    \n        @Bean\n\t    public ThymeleafViewResolver viewResolver() {\n\t        ThymeleafViewResolver viewResolver = new ThymeleafViewResolver();\n\t        viewResolver.setTemplateEngine(templateEngine());\n\t        return viewResolver;\n\t    }\n\t    \n\n\n}\n```\n", "tags": ["SpringBoot", "spring-boot", "Java", "Thymeleaf"]}