{"context": " More than 1 year has passed since last update.\u3055\u304f\u3063\u3068\u8a66\u3057\u305f\u3044\u65b9\u306f\u3001\u4e0b\u8a18\u306e3-6\u3092\u8a66\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\n1. \u3084\u308a\u305f\u3044\u3053\u3068\nyarn, mesos\u7b49\u3044\u304f\u3064\u304b\u69cb\u6210\u30d1\u30bf\u30fc\u30f3\u306e\u3042\u308bhdfs\u306e\u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210\u3057\u305f\u3044\u304c\u3001\u52d5\u304d\u3084\u69cb\u6210\u3092\u8ffd\u3044\u304b\u3051\u308b\u3060\u3051\u306a\u3089docker\u3067\u7c21\u5358\u306b\u51fa\u6765\u305f\u3089\u5b09\u3057\u3044\u304b\u306a\u3001\u3068\u8003\u3048\u3066\u3044\u307e\u3057\u305f\u3002\n\n2. \u53c2\u8003\u306b\u3057\u305fGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\n\u4e0b\u8a18\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092fork\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/lresende/docker-yarn-cluster\n\u4e0a\u8a18\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3001sequenceiq\u3055\u3093\u304b\u3089\u4e0b\u8a18\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092fork\u3057\u3066\u3044\u305f\u306e\u3067\u3001fork\u306efork\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/sequenceiq/hadoop-docker\n\n3. \u5b9f\u65bd\u624b\u9806\n\nEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u69cb\u7bc9\uff08\u5272\u611b\uff09\ndocker-compose\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nfork\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3092clone\ndocker build\u3092\u5b9f\u65bd\u3057\u3066yarn-cluser\u7528\u306e\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\ndocker-compose.yml\u3092\u7528\u610f\u3059\u308b\u3002\n\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\n\n\n3-2. docker-compose\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6700\u8fd1\u516c\u5f0f\u30b5\u30a4\u30c8\u3067\u30a2\u30ca\u30a6\u30f3\u30b9\u304c\u6709\u3063\u305f\u3068\u304a\u308a\u3001docker-compose\u304c1.5\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u307e\u3057\u305f\u3002\n\u306e\u3067\u30011.5\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\nexport VERSION=1.5.0\n\nmkdir -p /opt/bin\ncurl -L https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-`uname -s`-`uname -m` > /opt/bin/docker-compose\nchmod +x /opt/bin/docker-compose\ndocker-compose -v\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nhttps://docs.docker.com/compose/install/\n\n3-3. fork\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3092clone\ngit clone https://github.com/letusfly85/docker-yarn-cluster.git\n\ncd docker-yarn-cluster\n\n\n3-4. docker build\u3092\u5b9f\u65bd\u3057\u3066yarn-cluser\u7528\u306e\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\nDockerfile\u3092\u7de8\u96c6\u3057\u3066\u3001hadoop\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u3092\u7de8\u96c6\u3057\u3001docker build\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\u5099\u5fd8\u306e\u305f\u3081\u672c\u6295\u7a3f\u306e\u672b\u5c3e\u306b\u3082Dockerfile\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\nsudo docker build  -t letusfly85/yarn-cluster .\n\n\u3053\u306e\u3068\u304d\u3001Dockerfile\u306eyum install\u304c\u5931\u6557\u3057\u307e\u3059\u3002\n\u306a\u3093\u3060\u3053\u306e\u30a8\u30e9\u30fc\u3002\u3002\u3068\u3050\u3050\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u4e0b\u8a18\u304c\u30d2\u30c3\u30c8\u3057\u307e\u3057\u305f\u3002\nCoreOS\u306eoverlayfs\u3067yum\u30a8\u30e9\u30fc\n\u306a\u306b\u3053\u308c\u3002\u3002\u3002\u3068\u601d\u3044\u3064\u3064\u3082\u3001\u8a18\u8f09\u306e\u3042\u308b\u901a\u308a\u3001yum install ${packages...} | true\u3068\u3059\u308b\u3053\u3068\u3067\u3044\u3063\u305f\u3093\u56de\u907f\u3057\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001build\u304c\u5b8c\u4e86\u3057\u305f\u5f8c\u306f\u3001docker.hub\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001image\u3092push\u3057\u307e\u3057\u305f\u3002\ndocker login\n\ndocker push letusfly85/yarn-cluster\n\n\n3-5. docker-compose.yml\u3092\u7528\u610f\u3057\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\ndocker-compose.yml\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\nnamenode:\n  image: letusfly85/yarn-cluster\n  container_name: namenode\n  hostname: namenode\n  ports:\n    - \"8088:8088\"\n    - \"50090:50090\"\n  command: \"/etc/bootstrap.sh -d -namenode\"\ndatanode:\n  image: letusfly85/yarn-cluster\n  container_name: datanode\n  links:\n    - \"namenode:namenode\"\n  ports:\n    - \"50070:50070\"\n  hostname: datanode \n  dns: \"docker inspect --format=\\\"{{ .NetworkSettings.IPAddress }}\\\" namenode\"\n  command: \"/etc/bootstrap.sh -d -datanode\"\n\n\u3082\u3068\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001dns\u3067namenode\u306eprivate ip\u3092\u6307\u5b9a\u3059\u308b\u3068\u3053\u308d\u3092\u306a\u3093\u3068\u304b\u3084\u3081\u305f\u3044\u3067\u3059\u3002\u3002\n\n3-6. \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\n\u7528\u610f\u3057\u305fyml\u3092\u5229\u7528\u3057\u3066container\u3092run\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nsudo docker-compose -f docker-compose up -d\n\n\u8d77\u52d5\u78ba\u8a8d\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n$ docker-yarn-cluster # docker ps -a\nCONTAINER ID        IMAGE                     COMMAND                CREATED             STATUS              PORTS                                                                                                                                                             NAMES\n37f4acc4fb16        letusfly85/yarn-cluster   \"/etc/bootstrap.sh -   4 minutes ago       Up 4 minutes        2122/tcp, 8030-8033/tcp, 8040/tcp, 8042/tcp, 8088/tcp, 19888/tcp, 49707/tcp, 50010/tcp, 50020/tcp, 50075/tcp, 50090/tcp, 0.0.0.0:50070->50070/tcp                 datanode\ndc88a002f665        letusfly85/yarn-cluster   \"/etc/bootstrap.sh -   4 minutes ago       Up 4 minutes        2122/tcp, 8030-8033/tcp, 8040/tcp, 8042/tcp, 19888/tcp, 49707/tcp, 50010/tcp, 50020/tcp, 50070/tcp, 0.0.0.0:8088->8088/tcp, 50075/tcp, 0.0.0.0:50090->50090/tcp   namenode\n\n\u3053\u306e\u5f8c\u3001docker exec -it namenode /bin/bash\u3067\u306f\u3044\u3063\u3066\u3001README.md\u306b\u8a18\u8f09\u306e\u3042\u308bgrep\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\u304c\u304d\u3061\u3093\u3068map reduce\u304c\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\u3002\n\n4. \u8ab2\u984c\n\n\narchitecture\u56f3\u3092\u898b\u3066\u3001\u5197\u9577\u69cb\u6210\u53d6\u308c\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3057\u306a\u304a\u3059\u3002\njournalnode\u3068\u304bzookeeper\u3082\u306f\u3044\u3063\u305f\u69cb\u6210\u306b\u3057\u3066\u307f\u308b\u3002\nhive\u3068\u5408\u308f\u305b\u3066\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u3002\nswarm, k8s, mesos\u7b49\u3092\u5229\u7528\u3057\u3066\u3001multi node\u3067\u69cb\u7bc9\u3067\u304d\u308b\u3088\u3046\u306b\u3002\n\n\u3068\u306f\u3044\u3048\u3001\u3055\u304f\u3063\u3068\u30e2\u30ce\u306f\u3067\u304d\u305f\u306e\u3067\u3001\u5b9f\u969b\u306e\u52d5\u4f5c\u3001\u9023\u643a\u65b9\u6cd5\u7b49\u3092\u3053\u308c\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n3-7. Dockerfile\n# Creates pseudo distributed hadoop 2.7.1\n#\n# sudo docker build -t yarn_cluster .\n\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER Luciano Resende lresende@apache.org\n\nUSER root\n\n# install dev tools\nRUN yum install -y curl which tar sudo openssh-server openssh-clients rsync | true\nRUN yum update -y libselinux | true\n\n# passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n# java\nRUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\nRUN rpm -i jdk-7u71-linux-x64.rpm\nRUN rm jdk-7u71-linux-x64.rpm\n\nENV JAVA_HOME /usr/java/default\nENV PATH $PATH:$JAVA_HOME/bin\n\n# hadoop\nRUN curl -s http://ftp.jaist.ac.jp/pub/apache/hadoop/core/hadoop-2.7.1/hadoop-2.7.1.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local && ln -s ./hadoop-2.7.1 hadoop\n\nENV HADOOP_PREFIX /usr/local/hadoop\nENV HADOOP_COMMON_HOME /usr/local/hadoop\nENV HADOOP_HDFS_HOME /usr/local/hadoop\nENV HADOOP_MAPRED_HOME /usr/local/hadoop\nENV HADOOP_YARN_HOME /usr/local/hadoop\nENV HADOOP_CONF_DIR /usr/local/hadoop/etc/hadoop\nENV YARN_CONF_DIR $HADOOP_PREFIX/etc/hadoop\n\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n\nRUN mkdir $HADOOP_PREFIX/input\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n\n# pseudo distributed\nADD core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml\n#RUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\n\nADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\n\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\n\n# fixing the libhadoop.so like a boss\nRUN rm  /usr/local/hadoop/lib/native/*\nRUN curl -Ls http://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.7.0.tar | tar -x -C /usr/local/hadoop/lib/native/\n\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\n\nENV BOOTSTRAP /etc/bootstrap.sh\n\n# workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n\n# fix the 254 error code\nRUN sed  -i \"/^[^#]*UsePAM/ s/.*/#&/\"  /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\n\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n\n# Hdfs ports\nEXPOSE 50010 50020 50070 50075 50090\n# Mapred ports\nEXPOSE 19888\n#Yarn ports\nEXPOSE 8030 8031 8032 8033 8040 8042 8088\n#Other ports\nEXPOSE 49707 2122\n\n\u3055\u304f\u3063\u3068\u8a66\u3057\u305f\u3044\u65b9\u306f\u3001\u4e0b\u8a18\u306e3-6\u3092\u8a66\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\n# 1. \u3084\u308a\u305f\u3044\u3053\u3068\n\nyarn, mesos\u7b49\u3044\u304f\u3064\u304b\u69cb\u6210\u30d1\u30bf\u30fc\u30f3\u306e\u3042\u308bhdfs\u306e\u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210\u3057\u305f\u3044\u304c\u3001\u52d5\u304d\u3084\u69cb\u6210\u3092\u8ffd\u3044\u304b\u3051\u308b\u3060\u3051\u306a\u3089docker\u3067\u7c21\u5358\u306b\u51fa\u6765\u305f\u3089\u5b09\u3057\u3044\u304b\u306a\u3001\u3068\u8003\u3048\u3066\u3044\u307e\u3057\u305f\u3002\n\n# 2. \u53c2\u8003\u306b\u3057\u305fGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\n\n\u4e0b\u8a18\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092fork\u3057\u307e\u3057\u305f\u3002\n\nhttps://github.com/lresende/docker-yarn-cluster\n\n\u4e0a\u8a18\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3001[sequenceiq](https://github.com/sequenceiq)\u3055\u3093\u304b\u3089\u4e0b\u8a18\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092fork\u3057\u3066\u3044\u305f\u306e\u3067\u3001fork\u306efork\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u306a\u308a\u307e\u3059\u3002\n\nhttps://github.com/sequenceiq/hadoop-docker\n\n# 3. \u5b9f\u65bd\u624b\u9806\n\n1. EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u69cb\u7bc9\uff08\u5272\u611b\uff09\n2. docker-compose\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n3. fork\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3092clone\n4. docker build\u3092\u5b9f\u65bd\u3057\u3066yarn-cluser\u7528\u306e\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n5. docker-compose.yml\u3092\u7528\u610f\u3059\u308b\u3002\n6. \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\n\n## 3-2. docker-compose\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u6700\u8fd1[\u516c\u5f0f\u30b5\u30a4\u30c8\u3067\u30a2\u30ca\u30a6\u30f3\u30b9](https://blog.docker.com/2015/11/docker-1-9-production-ready-swarm-multi-host-networking/)\u304c\u6709\u3063\u305f\u3068\u304a\u308a\u3001docker-compose\u304c1.5\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u307e\u3057\u305f\u3002\n\u306e\u3067\u30011.5\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\n```bash\nexport VERSION=1.5.0\n\nmkdir -p /opt/bin\ncurl -L https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-`uname -s`-`uname -m` > /opt/bin/docker-compose\nchmod +x /opt/bin/docker-compose\ndocker-compose -v\n```\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nhttps://docs.docker.com/compose/install/\n\n## 3-3. fork\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3092clone\n\n```bash\ngit clone https://github.com/letusfly85/docker-yarn-cluster.git\n\ncd docker-yarn-cluster\n```\n\n## 3-4. docker build\u3092\u5b9f\u65bd\u3057\u3066yarn-cluser\u7528\u306e\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n\n[Dockerfile](https://github.com/letusfly85/docker-yarn-cluster/blob/hadoop_2.7/Dockerfile)\u3092\u7de8\u96c6\u3057\u3066\u3001hadoop\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u3092\u7de8\u96c6\u3057\u3001docker build\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\n\u5099\u5fd8\u306e\u305f\u3081\u672c\u6295\u7a3f\u306e\u672b\u5c3e\u306b\u3082Dockerfile\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n\n```bash\nsudo docker build  -t letusfly85/yarn-cluster .\n```\n\n\u3053\u306e\u3068\u304d\u3001Dockerfile\u306e`yum install`\u304c\u5931\u6557\u3057\u307e\u3059\u3002\n\u306a\u3093\u3060\u3053\u306e\u30a8\u30e9\u30fc\u3002\u3002\u3068\u3050\u3050\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u4e0b\u8a18\u304c\u30d2\u30c3\u30c8\u3057\u307e\u3057\u305f\u3002\n\n[CoreOS\u306eoverlayfs\u3067yum\u30a8\u30e9\u30fc](http://qiita.com/skame/items/f1c755d66256b750b3e8)\n\n\u306a\u306b\u3053\u308c\u3002\u3002\u3002\u3068\u601d\u3044\u3064\u3064\u3082\u3001\u8a18\u8f09\u306e\u3042\u308b\u901a\u308a\u3001`yum install ${packages...} | true`\u3068\u3059\u308b\u3053\u3068\u3067\u3044\u3063\u305f\u3093\u56de\u907f\u3057\u307e\u3057\u305f\u3002\n\n\u307e\u305f\u3001build\u304c\u5b8c\u4e86\u3057\u305f\u5f8c\u306f\u3001[docker.hub](https://hub.docker.com/)\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001image\u3092push\u3057\u307e\u3057\u305f\u3002\n\n```bash\ndocker login\n\ndocker push letusfly85/yarn-cluster\n```\n\n## 3-5. docker-compose.yml\u3092\u7528\u610f\u3057\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\n\ndocker-compose.yml\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n```yaml\nnamenode:\n  image: letusfly85/yarn-cluster\n  container_name: namenode\n  hostname: namenode\n  ports:\n    - \"8088:8088\"\n    - \"50090:50090\"\n  command: \"/etc/bootstrap.sh -d -namenode\"\ndatanode:\n  image: letusfly85/yarn-cluster\n  container_name: datanode\n  links:\n    - \"namenode:namenode\"\n  ports:\n    - \"50070:50070\"\n  hostname: datanode \n  dns: \"docker inspect --format=\\\"{{ .NetworkSettings.IPAddress }}\\\" namenode\"\n  command: \"/etc/bootstrap.sh -d -datanode\"\n```\n\n\u3082\u3068\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001dns\u3067namenode\u306eprivate ip\u3092\u6307\u5b9a\u3059\u308b\u3068\u3053\u308d\u3092\u306a\u3093\u3068\u304b\u3084\u3081\u305f\u3044\u3067\u3059\u3002\u3002\n\n## 3-6. \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\n\n\u7528\u610f\u3057\u305fyml\u3092\u5229\u7528\u3057\u3066container\u3092run\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```bash\nsudo docker-compose -f docker-compose up -d\n```\n\n\u8d77\u52d5\u78ba\u8a8d\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n```bash\n$ docker-yarn-cluster # docker ps -a\nCONTAINER ID        IMAGE                     COMMAND                CREATED             STATUS              PORTS                                                                                                                                                             NAMES\n37f4acc4fb16        letusfly85/yarn-cluster   \"/etc/bootstrap.sh -   4 minutes ago       Up 4 minutes        2122/tcp, 8030-8033/tcp, 8040/tcp, 8042/tcp, 8088/tcp, 19888/tcp, 49707/tcp, 50010/tcp, 50020/tcp, 50075/tcp, 50090/tcp, 0.0.0.0:50070->50070/tcp                 datanode\ndc88a002f665        letusfly85/yarn-cluster   \"/etc/bootstrap.sh -   4 minutes ago       Up 4 minutes        2122/tcp, 8030-8033/tcp, 8040/tcp, 8042/tcp, 19888/tcp, 49707/tcp, 50010/tcp, 50020/tcp, 50070/tcp, 0.0.0.0:8088->8088/tcp, 50075/tcp, 0.0.0.0:50090->50090/tcp   namenode\n```\n\n\u3053\u306e\u5f8c\u3001`docker exec -it namenode /bin/bash`\u3067\u306f\u3044\u3063\u3066\u3001README.md\u306b\u8a18\u8f09\u306e\u3042\u308bgrep\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\u304c\u304d\u3061\u3093\u3068map reduce\u304c\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\u3002\n\n# 4. \u8ab2\u984c\n\n* [architecture\u56f3](https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html#NameNode_and_DataNodes)\u3092\u898b\u3066\u3001\u5197\u9577\u69cb\u6210\u53d6\u308c\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3057\u306a\u304a\u3059\u3002\n* journalnode\u3068\u304bzookeeper\u3082\u306f\u3044\u3063\u305f\u69cb\u6210\u306b\u3057\u3066\u307f\u308b\u3002\n* hive\u3068\u5408\u308f\u305b\u3066\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u3002\n* swarm, k8s, mesos\u7b49\u3092\u5229\u7528\u3057\u3066\u3001multi node\u3067\u69cb\u7bc9\u3067\u304d\u308b\u3088\u3046\u306b\u3002\n\n\n\u3068\u306f\u3044\u3048\u3001\u3055\u304f\u3063\u3068\u30e2\u30ce\u306f\u3067\u304d\u305f\u306e\u3067\u3001\u5b9f\u969b\u306e\u52d5\u4f5c\u3001\u9023\u643a\u65b9\u6cd5\u7b49\u3092\u3053\u308c\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n## 3-7. Dockerfile\n\n```\n# Creates pseudo distributed hadoop 2.7.1\n#\n# sudo docker build -t yarn_cluster .\n\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER Luciano Resende lresende@apache.org\n\nUSER root\n\n# install dev tools\nRUN yum install -y curl which tar sudo openssh-server openssh-clients rsync | true\nRUN yum update -y libselinux | true\n\n# passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n# java\nRUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\nRUN rpm -i jdk-7u71-linux-x64.rpm\nRUN rm jdk-7u71-linux-x64.rpm\n\nENV JAVA_HOME /usr/java/default\nENV PATH $PATH:$JAVA_HOME/bin\n\n# hadoop\nRUN curl -s http://ftp.jaist.ac.jp/pub/apache/hadoop/core/hadoop-2.7.1/hadoop-2.7.1.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local && ln -s ./hadoop-2.7.1 hadoop\n\nENV HADOOP_PREFIX /usr/local/hadoop\nENV HADOOP_COMMON_HOME /usr/local/hadoop\nENV HADOOP_HDFS_HOME /usr/local/hadoop\nENV HADOOP_MAPRED_HOME /usr/local/hadoop\nENV HADOOP_YARN_HOME /usr/local/hadoop\nENV HADOOP_CONF_DIR /usr/local/hadoop/etc/hadoop\nENV YARN_CONF_DIR $HADOOP_PREFIX/etc/hadoop\n\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n\nRUN mkdir $HADOOP_PREFIX/input\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n\n# pseudo distributed\nADD core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml\n#RUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\n\nADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\n\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\n\n# fixing the libhadoop.so like a boss\nRUN rm  /usr/local/hadoop/lib/native/*\nRUN curl -Ls http://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.7.0.tar | tar -x -C /usr/local/hadoop/lib/native/\n\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\n\nENV BOOTSTRAP /etc/bootstrap.sh\n\n# workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n\n# fix the 254 error code\nRUN sed  -i \"/^[^#]*UsePAM/ s/.*/#&/\"  /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\n\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n\n# Hdfs ports\nEXPOSE 50010 50020 50070 50075 50090\n# Mapred ports\nEXPOSE 19888\n#Yarn ports\nEXPOSE 8030 8031 8032 8033 8040 8042 8088\n#Other ports\nEXPOSE 49707 2122\n```\n", "tags": ["docker-compose", "hadoop", "YARN", "docker", "CoreOS"]}