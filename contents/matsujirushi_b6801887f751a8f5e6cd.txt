{"tags": ["mbed", "mbedLPC1768", "RawSerial"], "context": " More than 1 year has passed since last update.RawSerial\u3092\u4f7f\u3063\u305f\u9001\u4fe1\u304c\u3001\u30d6\u30ed\u30c3\u30af\u3057\u305f\u308a\u30d6\u30ed\u30c3\u30af\u3057\u306a\u304b\u3063\u305f\u308a\u3001\u632f\u308b\u821e\u3044\u304c\u826f\u304f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u8a73\u3057\u304f\u8abf\u3079\u307e\u3057\u305f\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u5b9f\u9a13\nRawSerial.puts()\u306710\u30d0\u30a4\u30c8\u3092\u9001\u4fe1\u3057\u305f\u5834\u5408\u3001\n\nmain.c\n#include \"mbed.h\"\n\nRawSerial pc(p9, p10);\nDigitalOut send(p11, 0);\n\nint main() {\n    while(1) {\n        send.write(1);\n        pc.puts(\"0123456789\");\n        send.write(0);\n        wait(1);\n    }\n}\n\n\n\u5b9f\u969b\u306e\u9001\u4fe1\u3092\u5f85\u3064\u3053\u3068\u306a\u304f\u3001\u4e00\u77ac\u3067RawSerial.puts()\u304c\u5b8c\u4e86\u3057\u307e\u3059\u3002\u7d0410usec.\u3002\n\n\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u309220\u30d0\u30a4\u30c8\u306b\u5897\u3084\u3057\u3066\u307f\u308b\u3068\u3001\n\nmain.c\n#include \"mbed.h\"\n\nRawSerial pc(p9, p10);\nDigitalOut send(p11, 0);\n\nint main() {\n    while(1) {\n        send.write(1);\n        pc.puts(\"0123456789abcdefghij\");\n        send.write(0);\n        wait(1);\n    }\n}\n\n\n'f'(16\u30d0\u30a4\u30c8\u76ee)\u3092\u9001\u4fe1\u958b\u59cb\u3057\u305f\u3068\u3053\u308d\u3067\u3001RawSerial.puts()\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002\n\n\n\u5b9f\u9a13\u304b\u3089\u63a8\u6e2c\n\u9001\u4fe110\u30d0\u30a4\u30c8\u306e\u3068\u304d\u306f\u30d6\u30ed\u30c3\u30af\u3057\u306a\u304b\u3063\u305f\u3002FIFO\u304c10\u30d0\u30a4\u30c8\u4ee5\u4e0a\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u9001\u4fe120\u30d0\u30a4\u30c8\u306e\u3068\u304d\u306f16\u30d0\u30a4\u30c8\u76ee\u304c\u9001\u4fe1\u958b\u59cb\u3057\u305f\u3068\u3053\u308d\u3067\u30d6\u30ed\u30c3\u30af\u89e3\u9664\u3055\u308c\u305f\u306e\u3067\u3001FIFO\u304c4\u30d0\u30a4\u30c8\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u3063\u3066\u77db\u76fe\u3057\u3066\u3044\u308b\u3057\u3002\n\nLPC1768\u306e\u30b9\u30da\u30c3\u30af\n\u4eca\u56de\u3001\u4f7f\u3063\u3066\u3044\u308b\u30d4\u30f3\u306fp9 = P0_0\u3067\u3001\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u306fUART3\u3067\u3059\u3002\n\nPinNames.h\n p9 = P0_0,\n\n\n\nserial_api.c\n {P0_0, UART_3, 2},\n\n\nUM10360 LPC176x/5x User manual\u306b\u3088\u308b\u3068\u3001Transmit FIFOs\u306f16\u30d0\u30a4\u30c8\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u306f\u3001FIFO\u306f16\u30d0\u30a4\u30c8\u306e\u306f\u305a!?\n\nmbed\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nmbed\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u3001RawSerial.puts()\u304b\u3089\u8abf\u3079\u307e\u3059\u3002\n\nRawSerial.cpp\nint RawSerial::putc(int c) {\n    return _base_putc(c);\n}\n\nint RawSerial::puts(const char *str) {\n    while (*str)\n        putc(*str ++);\n    return 0;\n}\n\n\n\nSerialBase.cpp\nint SerialBase::_base_putc(int c) {\n    serial_putc(&_serial, c);\n    return c;\n}\n\n\n\nserial_api.c\nvoid serial_putc(serial_t *obj, int c) {\n    while (!serial_writable(obj));\n    obj->uart->THR = c;\n    uart_data[obj->index].count++;\n}\n\nint serial_writable(serial_t *obj) {\n    int isWritable = 1;\n    if (NC != uart_data[obj->index].sw_cts.pin)\n        isWritable = (gpio_read(&uart_data[obj->index].sw_cts) == 0) && (obj->uart->LSR & 0x40);  //If flow control: writable if CTS low + UART done\n    else {\n        if (obj->uart->LSR & 0x20)\n            uart_data[obj->index].count = 0;\n        else if (uart_data[obj->index].count >= 16)\n            isWritable = 0;\n    }\n    return isWritable;\n}\n\n\n\u767a\u898b! serial_putc()\u3068serial_writable()\u306e\u30b3\u30fc\u30c9\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3057\u305f\u3002\n\nserial_putc()\u3067\u3001FIFOs\u306b\u7a81\u3063\u8fbc\u3093\u3060\u5f8c\u306bcount\u52a0\u7b97\u3002\nserial_writable()\u3067\u3001count\u304c16\u4ee5\u4e0a\u306e\u5834\u5408\u306f\u66f8\u304d\u8fbc\u307f\u4e0d\u53ef\u6271\u3044\u3002Transmitter Holding Register Empty\u304c1\u306a\u3089\u3070\u3001count=0\u3002\n\n\n\u307e\u3068\u3081\n\nRawSerial\u3067\u9001\u4fe1\u3059\u308b\u969b\u306f\u3001FIFO\u306b16\u30d0\u30a4\u30c8\u307e\u3067\u66f8\u304d\u8fbc\u3081\u308b\u3002\u305d\u308c\u4ee5\u4e0a\u306f\u30d6\u30ed\u30c3\u30af\u3055\u308c\u308b\u3002\nFIFO\u304c\u5b9f\u969b\u306b\u9001\u4fe1\u3055\u308c\u3066\u30ab\u30e9\u306b\u306a\u308c\u3070\u3001\u30d6\u30ed\u30c3\u30af\u89e3\u9664\u3055\u308c\u3066\u518d\u5ea616\u30d0\u30a4\u30c8\u307e\u3067\u66f8\u304d\u8fbc\u307f\u3067\u304d\u308b\u3002\n\n\n\u304a\u307e\u3051\nRawSerial.attach(TxIrq)\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3082\u8abf\u3079\u307e\u3057\u305f\u3002\n\nmain.c\n#include \"mbed.h\"\n\nRawSerial pc(p9, p10);\nDigitalOut tx_isr(p11, 0);\n\nvoid TxIsr() {\n    tx_isr.write(1);\n    wait_us(1);\n    tx_isr.write(0);\n}\n\nint main() {\n    pc.attach(TxIsr, RawSerial::TxIrq);\n    while(1) {\n        pc.puts(\"0123456789abcdefghij\");\n        wait_ms(30);\n    }\n}\n\n\n\nRawSerial\u3092\u4f7f\u3063\u305f\u9001\u4fe1\u304c\u3001\u30d6\u30ed\u30c3\u30af\u3057\u305f\u308a\u30d6\u30ed\u30c3\u30af\u3057\u306a\u304b\u3063\u305f\u308a\u3001\u632f\u308b\u821e\u3044\u304c\u826f\u304f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u8a73\u3057\u304f\u8abf\u3079\u307e\u3057\u305f\u3002\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u5b9f\u9a13\n\nRawSerial.puts()\u306710\u30d0\u30a4\u30c8\u3092\u9001\u4fe1\u3057\u305f\u5834\u5408\u3001\n\n```cpp:main.c\n#include \"mbed.h\"\n\nRawSerial pc(p9, p10);\nDigitalOut send(p11, 0);\n\nint main() {\n    while(1) {\n\t\tsend.write(1);\n\t\tpc.puts(\"0123456789\");\n\t\tsend.write(0);\n\t\twait(1);\n    }\n}\n```\n\n\u5b9f\u969b\u306e\u9001\u4fe1\u3092\u5f85\u3064\u3053\u3068\u306a\u304f\u3001\u4e00\u77ac\u3067RawSerial.puts()\u304c\u5b8c\u4e86\u3057\u307e\u3059\u3002\u7d0410usec.\u3002\n\n![20160117D.png](https://qiita-image-store.s3.amazonaws.com/0/109634/03e5949f-70c1-3ffd-5930-8a54893ac93f.png)\n\n\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u309220\u30d0\u30a4\u30c8\u306b\u5897\u3084\u3057\u3066\u307f\u308b\u3068\u3001\n\n```cpp:main.c\n#include \"mbed.h\"\n\nRawSerial pc(p9, p10);\nDigitalOut send(p11, 0);\n\nint main() {\n    while(1) {\n\t\tsend.write(1);\n\t\tpc.puts(\"0123456789abcdefghij\");\n\t\tsend.write(0);\n\t\twait(1);\n    }\n}\n```\n\n'f'(16\u30d0\u30a4\u30c8\u76ee)\u3092\u9001\u4fe1\u958b\u59cb\u3057\u305f\u3068\u3053\u308d\u3067\u3001RawSerial.puts()\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002\n\n![20160117E.png](https://qiita-image-store.s3.amazonaws.com/0/109634/4dcbbf0a-b801-e7c0-1cd0-5a829fa88730.png)\n\n#\u5b9f\u9a13\u304b\u3089\u63a8\u6e2c\n\u9001\u4fe110\u30d0\u30a4\u30c8\u306e\u3068\u304d\u306f\u30d6\u30ed\u30c3\u30af\u3057\u306a\u304b\u3063\u305f\u3002FIFO\u304c10\u30d0\u30a4\u30c8\u4ee5\u4e0a\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u9001\u4fe120\u30d0\u30a4\u30c8\u306e\u3068\u304d\u306f16\u30d0\u30a4\u30c8\u76ee\u304c\u9001\u4fe1\u958b\u59cb\u3057\u305f\u3068\u3053\u308d\u3067\u30d6\u30ed\u30c3\u30af\u89e3\u9664\u3055\u308c\u305f\u306e\u3067\u3001FIFO\u304c4\u30d0\u30a4\u30c8\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u3063\u3066\u77db\u76fe\u3057\u3066\u3044\u308b\u3057\u3002\n\n#LPC1768\u306e\u30b9\u30da\u30c3\u30af\n\u4eca\u56de\u3001\u4f7f\u3063\u3066\u3044\u308b\u30d4\u30f3\u306fp9 = P0_0\u3067\u3001\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u306fUART3\u3067\u3059\u3002\n\n```cpp:PinNames.h\n p9 = P0_0,\n```\n```cpp:serial_api.c\n {P0_0, UART_3, 2},\n```\n\nUM10360 LPC176x/5x User manual\u306b\u3088\u308b\u3068\u3001Transmit FIFOs\u306f16\u30d0\u30a4\u30c8\u3067\u3059\u3002\n![20160117F.png](https://qiita-image-store.s3.amazonaws.com/0/109634/389d6751-a2bb-057c-be89-32d157a8c100.png)\n\n\u3068\u3044\u3046\u3053\u3068\u306f\u3001FIFO\u306f16\u30d0\u30a4\u30c8\u306e\u306f\u305a!?\n\n#mbed\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nmbed\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u3001RawSerial.puts()\u304b\u3089\u8abf\u3079\u307e\u3059\u3002\n\n```cpp:RawSerial.cpp\nint RawSerial::putc(int c) {\n    return _base_putc(c);\n}\n\nint RawSerial::puts(const char *str) {\n    while (*str)\n        putc(*str ++);\n    return 0;\n}\n```\n```cpp:SerialBase.cpp\nint SerialBase::_base_putc(int c) {\n    serial_putc(&_serial, c);\n    return c;\n}\n```\n```cpp:serial_api.c\nvoid serial_putc(serial_t *obj, int c) {\n    while (!serial_writable(obj));\n    obj->uart->THR = c;\n    uart_data[obj->index].count++;\n}\n\nint serial_writable(serial_t *obj) {\n    int isWritable = 1;\n    if (NC != uart_data[obj->index].sw_cts.pin)\n        isWritable = (gpio_read(&uart_data[obj->index].sw_cts) == 0) && (obj->uart->LSR & 0x40);  //If flow control: writable if CTS low + UART done\n    else {\n        if (obj->uart->LSR & 0x20)\n            uart_data[obj->index].count = 0;\n        else if (uart_data[obj->index].count >= 16)\n            isWritable = 0;\n    }\n    return isWritable;\n}\n```\n\n\u767a\u898b! serial_putc()\u3068serial_writable()\u306e\u30b3\u30fc\u30c9\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3057\u305f\u3002\n\n- serial_putc()\u3067\u3001FIFOs\u306b\u7a81\u3063\u8fbc\u3093\u3060\u5f8c\u306bcount\u52a0\u7b97\u3002\n- serial_writable()\u3067\u3001count\u304c16\u4ee5\u4e0a\u306e\u5834\u5408\u306f\u66f8\u304d\u8fbc\u307f\u4e0d\u53ef\u6271\u3044\u3002Transmitter Holding Register Empty\u304c1\u306a\u3089\u3070\u3001count=0\u3002\n\n#\u307e\u3068\u3081\n- RawSerial\u3067\u9001\u4fe1\u3059\u308b\u969b\u306f\u3001FIFO\u306b16\u30d0\u30a4\u30c8\u307e\u3067\u66f8\u304d\u8fbc\u3081\u308b\u3002\u305d\u308c\u4ee5\u4e0a\u306f\u30d6\u30ed\u30c3\u30af\u3055\u308c\u308b\u3002\n- FIFO\u304c\u5b9f\u969b\u306b\u9001\u4fe1\u3055\u308c\u3066\u30ab\u30e9\u306b\u306a\u308c\u3070\u3001\u30d6\u30ed\u30c3\u30af\u89e3\u9664\u3055\u308c\u3066\u518d\u5ea616\u30d0\u30a4\u30c8\u307e\u3067\u66f8\u304d\u8fbc\u307f\u3067\u304d\u308b\u3002\n\n#\u304a\u307e\u3051\nRawSerial.attach(TxIrq)\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3082\u8abf\u3079\u307e\u3057\u305f\u3002\n\n```cpp:main.c\n#include \"mbed.h\"\n\nRawSerial pc(p9, p10);\nDigitalOut tx_isr(p11, 0);\n\nvoid TxIsr() {\n\ttx_isr.write(1);\n\twait_us(1);\n\ttx_isr.write(0);\n}\n\nint main() {\n\tpc.attach(TxIsr, RawSerial::TxIrq);\n    while(1) {\n\t\tpc.puts(\"0123456789abcdefghij\");\n\t\twait_ms(30);\n    }\n}\n```\n![20160117G.png](https://qiita-image-store.s3.amazonaws.com/0/109634/329bd48b-cd18-22dd-f377-85f4f4502261.png)\n"}