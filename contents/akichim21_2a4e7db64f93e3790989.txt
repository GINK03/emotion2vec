{"context": "SPA\u3092Rails + React + Redux + Router\u3067\u5b9f\u73fe\u3057\u3066\u3001\u89e3\u8aac\u3057\u3066\u308b\u8a18\u4e8b\u304c\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u307e\u3059\u3002\nRedux\u306eTodo\u30a2\u30d7\u30ea\u3092\u30d9\u30fc\u30b9\u306bAPI\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u5b9f\u73fe\u3057\u3066\u308b\u3053\u3068\n\nReact + Redux + Router\u3067SPA\nAPI\u30ea\u30af\u30a8\u30b9\u30c8\u3067CRU(D)\u51e6\u7406\u307e\u3067\n\n\n\u5bfe\u8c61\n\u305d\u308c\u305e\u308c\u306e\u6280\u8853\u306e\u6982\u5ff5\u306f\u7406\u89e3\u3057\u3066\u308b\u304c\u3001\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3053\u3068\u304c\u306a\u3044\u65b9\n\n\u5b9f\u88c5\u65b9\u91dd\n\n\u57fa\u672c\u7684\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u5b9f\u88c5\u65b9\u91dd\u3092\u8e0f\u8972(\u5dee\u5206\u306f\u5f8c\u8ff0)\nServerSide Rendering\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\nProduction\u3067\u4f7f\u3048\u3066\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u898f\u6a21\u307e\u3067\u5bfe\u5fdc\u3057\u305f\u69cb\u6210\njavascript\u306fes2015\u3067\u66f8\u304f\nAPI\u30ea\u30af\u30a8\u30b9\u30c8\u306fthunk\u3092\u4f7f\u3046\nBuild\u306fWebpack\u3067\u884c\u3046\n\n\ngithub\nhttps://github.com/akichim21/rails-react-spa\n\nWebpack\nbabel\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3002eslint\u306fpreloaders\u3067\u3084\u308b\u3068console.log\u3068\u304b\u4ed5\u8fbc\u3081\u306a\u3044\u306e\u3067\u3001commit hook\u3068\u304bci\u3068\u304b\u306e\u304c\u826f\u3055\u305d\u3046\u3002\n\nconfig/webpack.config.js\nconst DEBUG = process.env.NODE_ENV === 'development' || process.env.NODE_ENV === undefined;\n\nmodule.exports = {\n  cache: DEBUG,\n  debug: DEBUG,\n  devtool: DEBUG ? 'inline-source-map' : false,\n  entry: {\n  },\n  output: {\n    path: '../app/assets/javascripts/components',\n    filename: '[name].js'\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        loader: 'babel?presets[]=react,presets[]=es2015,presets[]=stage-2'\n      },\n      { test: /\\.json$/, loader: 'json' }\n    ],\n    preLoaders: [\n      {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\"\n      }\n    ]\n  },\n  eslint: {\n    configFile: './.eslintrc.json'\n  },\n  resolve: {\n    extensions: ['', '.js', '.jsx', 'json'],\n  },\n  externals: {\n    'react': 'React',\n    'react-dom': 'ReactDOM'\n  }\n}\n\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u30d5\u30ed\u30fc\n\u4e00\u89a7\nurl: /todos\n\n\nview\nreact-rails\u3068\u3044\u3046gem\u3092\u4f7f\u3063\u3066\u3001\u5909\u6570\u306a\u3069\u3092React\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3057\u3066\u3001\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u884c\u3063\u3066\u3082\u3089\u3046\u3002\n\u4f8b\u3068\u3057\u3066token\u3092\u6e21\u3059\u3002\n\napp/views/todo/index.html.erb\n<%= react_component(\"Todo\", { token: form_authenticity_token}, {}) %>\n\n\n\nReact\nSPA\u306eendpoint\u3002 webpack\u3067build\u3059\u308b\u3068\u3053\u308d\u3067\u3082\u3042\u308b\u3002\n\u4eca\u56de\u3001\u5909\u6570\u306flocalstorage\u3067\u4fdd\u5b58\u3057\u3066\u3001api\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306b\u4f7f\u3046\u3002initialState\u3068\u3057\u3066dispatch\u3057\u3066\u3082\u4f7f\u3048\u308b\u3002\nglobal\u306awindow\u306b\u6e21\u3055\u306a\u3044\u3068Todo\u30af\u30e9\u30b9\u304creact-rails\u306b\u306f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001window\u306b\u6e21\u3059\u3002\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068Provider, store\u304c\u5909\u6570\u3092\u7ba1\u7406\u3059\u308bredux\u5074\u306e\u30e2\u30b8\u30e5\u30fc\u30eb(action,reducer,container,component\u3067\u5909\u6570\u3092\u4f1d\u642c\u3057\u3066\u304f\u308c\u308b)\u3067\u3001\nhistory, Router\u304creact-router\u3067SPA\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u5b9f\u73fe\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u7fa4\u3067\u3059\u3002\nRoute path\u3067url\u30de\u30c3\u30c1\u3055\u305b\u3066\u3001component\u3067\u6307\u5b9a\u3055\u308c\u3066\u308b\u3082\u306e\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\nfrontend/javascripts/components/Todo.js\nconst storeArgs = combineReducers({\n  ...reducers,\n  routing: routerReducer\n})\n\nconst store = process.env.NODE_ENV === 'production' ? prodConfigureStore(storeArgs) : devConfigureStore(storeArgs)\n\nconst history = syncHistoryWithStore(browserHistory, store)\n\nconst propTypes = {\n  token: React.PropTypes.string.isRequired,\n}\n\nexport default class Todo extends React.Component {\n  componentWillMount() {\n    localStorage.setItem(\"token\", this.props.token)\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Route path=\"todos\" component={Index}/>\n          <Route path=\"todos/:id\" component={Show}/>\n        </Router>\n      </Provider>\n    )\n  }\n}\nTodo.propTypes = propTypes\n\nwindow.Todo = Todo\n\n\nurl\u304c/todos\u306a\u306e\u3067\u3001Index\u306ecomponent\u304c\u547c\u3070\u308c\u308b\n\nfrontend/javascripts/components/todos/Index.js\n\nexport default class Index extends React.Component {\n  render() {\n    return (\n      <div>\n        <CreateTodo />\n        <TodoList />\n      </div>\n    )\n  }\n}\n\n\n\u3042\u3068\u306f\u305d\u308c\u305e\u308cCreateTodo, TodoList\u304c\u5c55\u958b\u3055\u308c\u308b\u3002\ntodos\u306e\u60c5\u5831\u306eapi\u901a\u4fe1\u306fTodoList\u306ecomponentWillMount\u306e\u6bb5\u968e\u3067\u547c\u3070\u308c\u308b\u3002\n\nAction\n(\u672a)\u5b8c\u4e86\u306b\u3059\u308b\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\nonClick\u304c\u547c\u3070\u308c\u308b\u3002\u3053\u308c\u306f\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306eTodoList.js\u304b\u3089\u6e21\u3055\u308c\u308b\u3002onClick\u306e\u4e2d\u3067\u306fupdateTodo\u306eaction\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3002\n\nfrontend/javascripts/components/todos/Todo.js\nexport default class Todo extends React.Component {\n  render() {\n    const { id, isCompleted, text, onClick } = this.props\n    return (\n      <li>\n        <p style={{display: \"inline\", textDecoration: isCompleted ? 'line-through' : 'none'}}>{text}</p>\n        [<Link to={\"todos/\" + id }>\u8a73\u7d30</Link>]\n        [<a href=\"#\" onClick={onClick}>{isCompleted ? \"\u672a\u5b8c\u4e86\" : \"\u5b8c\u4e86\"}\u306b\u3059\u308b</a>]\n      </li>\n    )\n  }\n}\n\n\nupdateTodo\u306fTodoList\u306econtainer\u3067dispatch\u3092\u6ce8\u5165\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002mapStateToProps\u3068mapDispatchToProps\u306fstate\u3068dispatch\u3092container\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3082\u306e\u3002\n\nfrontend/javascripts/containers/todos/TodoList.js\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos.todos\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators({\n      updateTodo,\n      fetchTodos\n    }, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\n\napi\u901a\u4fe1\u3067UPDATE_TODO_**\u3067\u305d\u308c\u305e\u308c\u5f8c\u7d9a\u306ereducer\u51e6\u7406\u3067\u304d\u308b\u3002REQUEST\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u305f\u77ac\u9593\u3001SUCCESS\u306f\u6210\u529f\u6642\u3001FAILURE\u306f\u30a8\u30e9\u30fc\u6642\u306b\u547c\u3070\u308c\u308b\u3002CALL_API\u3092MOCK_API\u306b\u3059\u308c\u3070\u3001api\u901a\u4fe1\u305b\u305a\u306b\u958b\u767a\u3092\u9032\u3081\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\n\nactions/todos/index.js\nexport const updateTodo = (id, param) => {\n  return {\n    [CALL_API]: {\n      types: [ types.UPDATE_TODO_REQUEST, types.UPDATE_TODO_SUCCESS, types.UPDATE_TODO_FAILURE ],\n      endpoint: \"todos/\" + id + \".json\",\n      param: { id: id,  todo: param },\n      method: \"PUT\"\n    }\n  }\n}\n\n\n\u3053\u3053\u3067\u51e6\u7406\u3092\u304b\u307e\u3057\u3066\u3001fetch\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089promise\u3067\u51e6\u7406\u3092\u7e4b\u3044\u3067\u3001reducer\u3078\u3002\nmiddleware/api.js\n\u4eca\u56deUPDATE_TODO_SUCCESS\u306e\u6642\u3060\u3051todos\u306e\u66f4\u65b0\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u66f4\u65b0\u5f8c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u66f4\u3002REQUEST\u6642\u306bloading\u306e\u30d5\u30e9\u30b0\u3001FAILURE\u6642\u306b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8868\u793a\u306a\u3069\u672c\u756a\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3067\u306f\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nreducers/todos/todos.js\nconst INITIAL_STATE = {\n  todos: [],\n  todo: undefined,\n}\n\nconst todos = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.UPDATE_TODO_SUCCESS:\n      return Object.assign({}, state, {\n        todos: state.todos.map(t => {\n          if (t.id == action.response.todo.id) {\n            return action.response.todo\n          } else {\n            return t\n          }\n        })\n      })\n    default:\n      return state\n  }\n}\n\n\nstate.todos.todos\u304c\u5909\u66f4\u3055\u308c\u3066\u3001container\u304c\u53d7\u3051\u53d6\u308acomponent\u306b\u6e21\u3059\u3002\ncomponent\u304c\u5909\u66f4\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089react\u304c\u5dee\u5206\u5909\u66f4\u3057\u3066\u304f\u308c\u308b\u3002\n\nfrontend/javascripts/components/todos/TodoList.js\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos.todos\n  }\n}\n\n\n\nfrontend/javascripts/containers/todos/TodoList.js\nexport default class TodoList extends React.Component {\n  componentWillMount() {\n    this.props.actions.fetchTodos()\n  }\n  render() {\n    const { todos } = this.props\n    const { updateTodo } = this.props.actions\n    return (\n      <ul>\n        {todos.map(todo =>\n          <Todo\n            key={todo.id}\n            {...todo}\n            onClick={() => updateTodo(todo.id, { is_completed: !todo.isCompleted })}\n          />\n        )}\n      </ul>\n    )\n  }\n}\n\n\n\n\u30da\u30fc\u30b8\u9077\u79fb\n[\u8a73\u7d30]\u3092\u30af\u30ea\u30c3\u30af\nurl: todos/1\n\n\u8a73\u7d30\u306e\u5f62\u3067\u6307\u5b9a\u3057\u3066\u3042\u3052\u308b\u3068react-router\u304cSPA\u9077\u79fb\u3057\u3066\u304f\u308c\u308b\u3002action\u5f62\u5f0f\u306a\u3089browserHistory.push({ pathname: \"todos/\" + id, query: { hoge: hoge } })\u3067\u9077\u79fb\u53ef\u80fd\u3002\n\nfrontend/javascripts/containers/todos/Todo.js\nexport default class Todo extends React.Component {\n  render() {\n    const { id, isCompleted, text, onClick } = this.props\n    return (\n      <li>\n        <p style={{display: \"inline\", textDecoration: isCompleted ? 'line-through' : 'none'}}>{text}</p>\n        [<Link to={\"todos/\" + id }>\u8a73\u7d30</Link>]\n        [<a href=\"#\" onClick={onClick}>{isCompleted ? \"\u672a\u5b8c\u4e86\" : \"\u5b8c\u4e86\"}\u306b\u3059\u308b</a>]\n      </li>\n    )\n  }\n}\n\n\nRoute\u306e\u30d1\u30b9\u306b\u30de\u30c3\u30c1\u3057\u305fShow\u306ecomponent\u3092\u547c\u3073\u51fa\u3059\u3002\n\nfrontend/javascripts/components/Todo.js\nexport default class Todo extends React.Component {\n  componentWillMount() {\n    localStorage.setItem(\"token\", this.props.token)\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Route path=\"todos\" component={Index}/>\n          <Route path=\"todos/:id\" component={Show}/>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\n\n\u30b5\u30f3\u30d7\u30eb\u3068\u306e\u5dee\u5206:\n- action\u306e\u30e1\u30bd\u30c3\u30c9\u3092rails\u306eapi\u3088\u308a\u306b\u5909\u3048\u308b(updateTodo, createTodo\u306a\u3069)\n- component\u306e\u30af\u30e9\u30b9\u3092const *\u3067\u5b9a\u7fa9\u3057\u3066\u308b\u306e\u3092export default class * extends React.Component\u3067\u7d71\u4e00\n- container\u3067bindActionCreators\u3057\u3066dispatch\u3092\u3053\u3053\u3067\u6ce8\u5165\u3057\u3066\u3001actions\u306b\u7d71\u4e00\u3067\u5165\u308c\u308b\n- rails\u306eapi\u3067\u6574\u5f62\u3057\u3066\u6e21\u3057\u3084\u3059\u3044\u306e\u3067\u3001thunk\u306eschema\u5ec3\u6b62\u3002\n\u30dd\u30ea\u30b7\u30fc\u304c\u8ff7\u3046\u6240:\n- container\u4f5c\u308b\u304bcomponent\u3060\u3051\u304b\u3002action\u304c\u3042\u308b\u3082\u306e\u3084state\u304b\u3089\u5024\u3092\u3068\u308b\u3082\u306e\u306fcontainer\u3092\u4f5c\u3063\u3066\u308b\u3002\n\n\u53c2\u8003\nhttps://github.com/reactjs/react-redux/blob/master/docs/api.md#connectmapstatetoprops-mapdispatchtoprops-mergeprops-options\nhttp://redux.js.org/docs/basics/ExampleTodoList.html\nhttps://github.com/reactjs/react-router/tree/master/docs\nSPA\u3092Rails + React + Redux + Router\u3067\u5b9f\u73fe\u3057\u3066\u3001\u89e3\u8aac\u3057\u3066\u308b\u8a18\u4e8b\u304c\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u307e\u3059\u3002\nRedux\u306eTodo\u30a2\u30d7\u30ea\u3092\u30d9\u30fc\u30b9\u306bAPI\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n# \u5b9f\u73fe\u3057\u3066\u308b\u3053\u3068\n- React + Redux + Router\u3067SPA\n- API\u30ea\u30af\u30a8\u30b9\u30c8\u3067CRU(D)\u51e6\u7406\u307e\u3067\n\n# \u5bfe\u8c61\n\u305d\u308c\u305e\u308c\u306e\u6280\u8853\u306e\u6982\u5ff5\u306f\u7406\u89e3\u3057\u3066\u308b\u304c\u3001\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3053\u3068\u304c\u306a\u3044\u65b9\n\n# \u5b9f\u88c5\u65b9\u91dd\n- \u57fa\u672c\u7684\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u5b9f\u88c5\u65b9\u91dd\u3092\u8e0f\u8972(\u5dee\u5206\u306f\u5f8c\u8ff0)\n- ServerSide Rendering\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n- Production\u3067\u4f7f\u3048\u3066\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u898f\u6a21\u307e\u3067\u5bfe\u5fdc\u3057\u305f\u69cb\u6210\n- javascript\u306fes2015\u3067\u66f8\u304f\n- API\u30ea\u30af\u30a8\u30b9\u30c8\u306fthunk\u3092\u4f7f\u3046\n- Build\u306fWebpack\u3067\u884c\u3046\n\n# github\nhttps://github.com/akichim21/rails-react-spa\n\n# Webpack\nbabel\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3002eslint\u306fpreloaders\u3067\u3084\u308b\u3068console.log\u3068\u304b\u4ed5\u8fbc\u3081\u306a\u3044\u306e\u3067\u3001commit hook\u3068\u304bci\u3068\u304b\u306e\u304c\u826f\u3055\u305d\u3046\u3002\n\n```js:config/webpack.config.js\nconst DEBUG = process.env.NODE_ENV === 'development' || process.env.NODE_ENV === undefined;\n\nmodule.exports = {\n  cache: DEBUG,\n  debug: DEBUG,\n  devtool: DEBUG ? 'inline-source-map' : false,\n  entry: {\n  },\n  output: {\n    path: '../app/assets/javascripts/components',\n    filename: '[name].js'\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        loader: 'babel?presets[]=react,presets[]=es2015,presets[]=stage-2'\n      },\n      { test: /\\.json$/, loader: 'json' }\n    ],\n    preLoaders: [\n      {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\"\n      }\n    ]\n  },\n  eslint: {\n    configFile: './.eslintrc.json'\n  },\n  resolve: {\n    extensions: ['', '.js', '.jsx', 'json'],\n  },\n  externals: {\n    'react': 'React',\n    'react-dom': 'ReactDOM'\n  }\n}\n```\n\n#\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u30d5\u30ed\u30fc\n\u4e00\u89a7\nurl: /todos\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-08-31 14.27.31.png](https://qiita-image-store.s3.amazonaws.com/0/89860/45b012b9-d9df-c5ef-26e1-37be5982015d.png)\n\n## view\nreact-rails\u3068\u3044\u3046gem\u3092\u4f7f\u3063\u3066\u3001\u5909\u6570\u306a\u3069\u3092React\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3057\u3066\u3001\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u884c\u3063\u3066\u3082\u3089\u3046\u3002\n\u4f8b\u3068\u3057\u3066token\u3092\u6e21\u3059\u3002\n\n```erb:app/views/todo/index.html.erb\n<%= react_component(\"Todo\", { token: form_authenticity_token}, {}) %>\n```\n\n## React\nSPA\u306eendpoint\u3002 webpack\u3067build\u3059\u308b\u3068\u3053\u308d\u3067\u3082\u3042\u308b\u3002\n\u4eca\u56de\u3001\u5909\u6570\u306flocalstorage\u3067\u4fdd\u5b58\u3057\u3066\u3001api\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306b\u4f7f\u3046\u3002initialState\u3068\u3057\u3066dispatch\u3057\u3066\u3082\u4f7f\u3048\u308b\u3002\nglobal\u306awindow\u306b\u6e21\u3055\u306a\u3044\u3068Todo\u30af\u30e9\u30b9\u304creact-rails\u306b\u306f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001window\u306b\u6e21\u3059\u3002\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068Provider, store\u304c\u5909\u6570\u3092\u7ba1\u7406\u3059\u308bredux\u5074\u306e\u30e2\u30b8\u30e5\u30fc\u30eb(action,reducer,container,component\u3067\u5909\u6570\u3092\u4f1d\u642c\u3057\u3066\u304f\u308c\u308b)\u3067\u3001\nhistory, Router\u304creact-router\u3067SPA\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u5b9f\u73fe\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u7fa4\u3067\u3059\u3002\nRoute path\u3067url\u30de\u30c3\u30c1\u3055\u305b\u3066\u3001component\u3067\u6307\u5b9a\u3055\u308c\u3066\u308b\u3082\u306e\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\n```js:frontend/javascripts/components/Todo.js\nconst storeArgs = combineReducers({\n  ...reducers,\n  routing: routerReducer\n})\n\nconst store = process.env.NODE_ENV === 'production' ? prodConfigureStore(storeArgs) : devConfigureStore(storeArgs)\n\nconst history = syncHistoryWithStore(browserHistory, store)\n\nconst propTypes = {\n  token: React.PropTypes.string.isRequired,\n}\n\nexport default class Todo extends React.Component {\n  componentWillMount() {\n    localStorage.setItem(\"token\", this.props.token)\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Route path=\"todos\" component={Index}/>\n          <Route path=\"todos/:id\" component={Show}/>\n        </Router>\n      </Provider>\n    )\n  }\n}\nTodo.propTypes = propTypes\n\nwindow.Todo = Todo\n```\n\nurl\u304c/todos\u306a\u306e\u3067\u3001Index\u306ecomponent\u304c\u547c\u3070\u308c\u308b\n\n```js:frontend/javascripts/components/todos/Index.js\n\nexport default class Index extends React.Component {\n  render() {\n    return (\n      <div>\n        <CreateTodo />\n        <TodoList />\n      </div>\n    )\n  }\n}\n```\n\n\u3042\u3068\u306f\u305d\u308c\u305e\u308cCreateTodo, TodoList\u304c\u5c55\u958b\u3055\u308c\u308b\u3002\ntodos\u306e\u60c5\u5831\u306eapi\u901a\u4fe1\u306fTodoList\u306ecomponentWillMount\u306e\u6bb5\u968e\u3067\u547c\u3070\u308c\u308b\u3002\n\n# Action\n(\u672a)\u5b8c\u4e86\u306b\u3059\u308b\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n\nonClick\u304c\u547c\u3070\u308c\u308b\u3002\u3053\u308c\u306f\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306eTodoList.js\u304b\u3089\u6e21\u3055\u308c\u308b\u3002onClick\u306e\u4e2d\u3067\u306fupdateTodo\u306eaction\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3002\n\n```js:frontend/javascripts/components/todos/Todo.js\nexport default class Todo extends React.Component {\n  render() {\n    const { id, isCompleted, text, onClick } = this.props\n    return (\n      <li>\n        <p style={{display: \"inline\", textDecoration: isCompleted ? 'line-through' : 'none'}}>{text}</p>\n        [<Link to={\"todos/\" + id }>\u8a73\u7d30</Link>]\n        [<a href=\"#\" onClick={onClick}>{isCompleted ? \"\u672a\u5b8c\u4e86\" : \"\u5b8c\u4e86\"}\u306b\u3059\u308b</a>]\n      </li>\n    )\n  }\n}\n```\n\nupdateTodo\u306fTodoList\u306econtainer\u3067dispatch\u3092\u6ce8\u5165\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002mapStateToProps\u3068mapDispatchToProps\u306fstate\u3068dispatch\u3092container\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3082\u306e\u3002\n\n```js:frontend/javascripts/containers/todos/TodoList.js\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos.todos\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators({\n      updateTodo,\n      fetchTodos\n    }, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n```\n\napi\u901a\u4fe1\u3067UPDATE_TODO_**\u3067\u305d\u308c\u305e\u308c\u5f8c\u7d9a\u306ereducer\u51e6\u7406\u3067\u304d\u308b\u3002REQUEST\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u305f\u77ac\u9593\u3001SUCCESS\u306f\u6210\u529f\u6642\u3001FAILURE\u306f\u30a8\u30e9\u30fc\u6642\u306b\u547c\u3070\u308c\u308b\u3002CALL_API\u3092MOCK_API\u306b\u3059\u308c\u3070\u3001api\u901a\u4fe1\u305b\u305a\u306b\u958b\u767a\u3092\u9032\u3081\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\n\n```js:actions/todos/index.js\nexport const updateTodo = (id, param) => {\n  return {\n    [CALL_API]: {\n      types: [ types.UPDATE_TODO_REQUEST, types.UPDATE_TODO_SUCCESS, types.UPDATE_TODO_FAILURE ],\n      endpoint: \"todos/\" + id + \".json\",\n      param: { id: id,  todo: param },\n      method: \"PUT\"\n    }\n  }\n}\n```\n\n\u3053\u3053\u3067\u51e6\u7406\u3092\u304b\u307e\u3057\u3066\u3001fetch\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089promise\u3067\u51e6\u7406\u3092\u7e4b\u3044\u3067\u3001reducer\u3078\u3002\nmiddleware/api.js\n \n\u4eca\u56deUPDATE_TODO_SUCCESS\u306e\u6642\u3060\u3051todos\u306e\u66f4\u65b0\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u66f4\u65b0\u5f8c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u66f4\u3002REQUEST\u6642\u306bloading\u306e\u30d5\u30e9\u30b0\u3001FAILURE\u6642\u306b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8868\u793a\u306a\u3069\u672c\u756a\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3067\u306f\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```js:reducers/todos/todos.js\nconst INITIAL_STATE = {\n  todos: [],\n  todo: undefined,\n}\n\nconst todos = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.UPDATE_TODO_SUCCESS:\n      return Object.assign({}, state, {\n        todos: state.todos.map(t => {\n          if (t.id == action.response.todo.id) {\n            return action.response.todo\n          } else {\n            return t\n          }\n        })\n      })\n    default:\n      return state\n  }\n}\n```\n\nstate.todos.todos\u304c\u5909\u66f4\u3055\u308c\u3066\u3001container\u304c\u53d7\u3051\u53d6\u308acomponent\u306b\u6e21\u3059\u3002\ncomponent\u304c\u5909\u66f4\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089react\u304c\u5dee\u5206\u5909\u66f4\u3057\u3066\u304f\u308c\u308b\u3002\n\n```js:frontend/javascripts/components/todos/TodoList.js\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos.todos\n  }\n}\n```\n\n\n```js:frontend/javascripts/containers/todos/TodoList.js\nexport default class TodoList extends React.Component {\n  componentWillMount() {\n    this.props.actions.fetchTodos()\n  }\n  render() {\n    const { todos } = this.props\n    const { updateTodo } = this.props.actions\n    return (\n      <ul>\n        {todos.map(todo =>\n          <Todo\n            key={todo.id}\n            {...todo}\n            onClick={() => updateTodo(todo.id, { is_completed: !todo.isCompleted })}\n          />\n        )}\n      </ul>\n    )\n  }\n}\n```\n\n\n#\u30da\u30fc\u30b8\u9077\u79fb\n[\u8a73\u7d30]\u3092\u30af\u30ea\u30c3\u30af\n\nurl: todos/1\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-08-31 13.58.39.png](https://qiita-image-store.s3.amazonaws.com/0/89860/e12b6b31-6459-3a57-6d40-d78f1c684e42.png)\n\n<Link to={\"todos/\" + id }>\u8a73\u7d30</Link>\u306e\u5f62\u3067\u6307\u5b9a\u3057\u3066\u3042\u3052\u308b\u3068react-router\u304cSPA\u9077\u79fb\u3057\u3066\u304f\u308c\u308b\u3002action\u5f62\u5f0f\u306a\u3089browserHistory.push({ pathname: \"todos/\" + id, query: { hoge: hoge } })\u3067\u9077\u79fb\u53ef\u80fd\u3002\n\n```js:frontend/javascripts/containers/todos/Todo.js\nexport default class Todo extends React.Component {\n  render() {\n    const { id, isCompleted, text, onClick } = this.props\n    return (\n      <li>\n        <p style={{display: \"inline\", textDecoration: isCompleted ? 'line-through' : 'none'}}>{text}</p>\n        [<Link to={\"todos/\" + id }>\u8a73\u7d30</Link>]\n        [<a href=\"#\" onClick={onClick}>{isCompleted ? \"\u672a\u5b8c\u4e86\" : \"\u5b8c\u4e86\"}\u306b\u3059\u308b</a>]\n      </li>\n    )\n  }\n}\n```\n\nRoute\u306e\u30d1\u30b9\u306b\u30de\u30c3\u30c1\u3057\u305fShow\u306ecomponent\u3092\u547c\u3073\u51fa\u3059\u3002\n\n```js:frontend/javascripts/components/Todo.js\nexport default class Todo extends React.Component {\n  componentWillMount() {\n    localStorage.setItem(\"token\", this.props.token)\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Route path=\"todos\" component={Index}/>\n          <Route path=\"todos/:id\" component={Show}/>\n        </Router>\n      </Provider>\n    )\n  }\n}\n```\n\n\u30b5\u30f3\u30d7\u30eb\u3068\u306e\u5dee\u5206:\n- action\u306e\u30e1\u30bd\u30c3\u30c9\u3092rails\u306eapi\u3088\u308a\u306b\u5909\u3048\u308b(updateTodo, createTodo\u306a\u3069)\n- component\u306e\u30af\u30e9\u30b9\u3092const **\u3067\u5b9a\u7fa9\u3057\u3066\u308b\u306e\u3092export default class ** extends React.Component\u3067\u7d71\u4e00\n- container\u3067bindActionCreators\u3057\u3066dispatch\u3092\u3053\u3053\u3067\u6ce8\u5165\u3057\u3066\u3001actions\u306b\u7d71\u4e00\u3067\u5165\u308c\u308b\n- rails\u306eapi\u3067\u6574\u5f62\u3057\u3066\u6e21\u3057\u3084\u3059\u3044\u306e\u3067\u3001thunk\u306eschema\u5ec3\u6b62\u3002\n\n\u30dd\u30ea\u30b7\u30fc\u304c\u8ff7\u3046\u6240:\n- container\u4f5c\u308b\u304bcomponent\u3060\u3051\u304b\u3002action\u304c\u3042\u308b\u3082\u306e\u3084state\u304b\u3089\u5024\u3092\u3068\u308b\u3082\u306e\u306fcontainer\u3092\u4f5c\u3063\u3066\u308b\u3002\n\n# \u53c2\u8003\nhttps://github.com/reactjs/react-redux/blob/master/docs/api.md#connectmapstatetoprops-mapdispatchtoprops-mergeprops-options\nhttp://redux.js.org/docs/basics/ExampleTodoList.html\nhttps://github.com/reactjs/react-router/tree/master/docs\n", "tags": ["Rails", "JavaScript", "redux", "reactjs", "react-router"]}