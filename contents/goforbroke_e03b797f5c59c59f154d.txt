{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\n\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7f6e\u304f\u3060\u3051\u306e\u7c21\u5358\u306aHTTP\u30b5\u30fc\u30d0\u3092\u958b\u767a\u74b0\u5883\u4e0a\u3067\u4f5c\u308b\n\n\u8981\u4ef6\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u958b\u767a\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u306b\u3059\u3050\u4f7f\u3048\u308b\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u6642\u523b\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b(log4js\u3067\u3067\u304d\u308b)\nHTTP GET, POST\u306e\u30af\u30a8\u30ea\u30b9\u30c8\u30ea\u30f3\u30b0\u306f\u51e6\u7406\u3057\u306a\u3044\n\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u306f\u3057\u306a\u3044\n\n\n\u4f7f\u3063\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n\nlog4js\nexpress\nmorgan\n\n\n\u69cb\u6210\n/to/app/path\n+ SimpleHttpServer.js \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\n+ public/ \u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u683c\u7d0d\u3059\u308b\u30d5\u30a9\u30eb\u30c0\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$cd /to/app/path\n$npm install log4js express morgan\n\u2192express4\u304b\u3089\u30ed\u30ae\u30f3\u30b0\u306fmorgan\u3068\u3057\u3066\u5206\u96e2\n\nexpress\nresponse\u306fexpress\u306b\u304a\u4efb\u305b\uff0e\n\nSimpleHttpServer.js\n\nvar PORT=3000,\n        ROOTDIR='public';\n\ntry {\n    var log = require('log4js');\n    logger = log.getLogger();\n    var morgan = require('morgan');\n    logger.info('logger loaded');\n\n    var express = require('express');\n    var app = express();\n\n} catch (e) {\n    logger.error(e);\n} \n\napp.use(morgan('dev', { format:'dev', immediate: true}));\napp.use(express.static(ROOTDIR));\n\napp.use(function(req, res, next) {\n     logger.info('request to: ' + req.path);\n     next();\n});\n\napp.listen(PORT);\n\n\n\napp.use(function(){...})\u3067middleware\u306b\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\uff0e\nmorgan\u306fdev\u30ec\u30d9\u30eb\u3067\u30ed\u30ae\u30f3\u30b0\u3092\u8a2d\u5b9a\u3057\u305f\uff0e\nfunction(){...}\u306e\u524d\u3067\u30d1\u30b9\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u3067\uff0c\u3069\u306e\u30d1\u30b9\u3067\u3082\u95a2\u6570\u304c\u547c\u3070\u308c\u308b\uff0e\n\u53c2\u8003:app.use([path], [function...], function)\n\n\u5b9f\u884c\npublic/\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7f6e\u3044\u3066\u5b9f\u884c\u3059\u308b\uff0e\n$node SimplerHttpServer.js\n[2014-11-22 18:06:46.626] [INFO] [default] - logger loaded\nGET /hoge - - ms - -\nGET /hogea - - ms - -\nGET /hogeb - - ms - -\nGET /favicon.ico - - ms - -\n[2014-11-22 18:06:52.012] [INFO] [default] - request to: /favicon.ico\n\n\n(\u89e3\u6c7a\u6e08\u307f)\u8ffd\u8a18\n\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u5b58\u5728\u3059\u308bURL\u3092\u6307\u5b9a\u3059\u308b\u3068\u79c1\u306e\u74b0\u5883\u3067\u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\uff0e\n\u5b58\u5728\u3057\u306a\u3044URL\u3060\u3068\"request to: ...\"\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\n\u5225\u9014\uff0c\u8abf\u3079\u3066\u307f\u307e\u3059\uff0e\n\n404\u306a\u3069\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5411\u3051\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3060\u3063\u305f\napp.use(function()...)\u306f404\u306a\u3069\u306e\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306e\u307f\u5b9f\u884c\u3055\u308c\u308b\uff0e\n\u5b58\u5728\u3057\u306a\u3044URL\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306e\u307f\uff0c\"request to: ...\"\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u7d0d\u5f97\u3057\u305f\uff0e\nHow do you handle 404s?\n\nHow do you handle 404s?\nIn Express, 404s are not the result of an error. Therefore, the error-handler middleware will not capture 404s. This is because a 404 is simply the absence of additional work to do; in other words, Express has executed all middleware / routes, and found that none of them responded. All you need to do is add a middleware at the very bottom (below all others) to handle a 404:\napp.use(function(req, res, next){\n  res.send(404, 'Sorry cant find that!');\n});\n\n\u4ee5\u4e0a\uff0e\n# \u76ee\u7684\n\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7f6e\u304f\u3060\u3051\u306e\u7c21\u5358\u306aHTTP\u30b5\u30fc\u30d0\u3092\u958b\u767a\u74b0\u5883\u4e0a\u3067\u4f5c\u308b\n\n### \u8981\u4ef6\n* \u30ed\u30fc\u30ab\u30eb\u306e\u958b\u767a\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u306b\u3059\u3050\u4f7f\u3048\u308b\n* \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u6642\u523b\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b(log4js\u3067\u3067\u304d\u308b)\n* HTTP GET, POST\u306e\u30af\u30a8\u30ea\u30b9\u30c8\u30ea\u30f3\u30b0\u306f\u51e6\u7406\u3057\u306a\u3044\n* \u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u306f\u3057\u306a\u3044\n\n### \u4f7f\u3063\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n* log4js\n* express\n* morgan\n\n### \u69cb\u6210\n`/to/app/path\n+ SimpleHttpServer.js \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\n+ public/ \u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u683c\u7d0d\u3059\u308b\u30d5\u30a9\u30eb\u30c0`\n\n### \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n`$cd /to/app/path`\n`$npm install log4js express morgan`\n\u2192express4\u304b\u3089\u30ed\u30ae\u30f3\u30b0\u306fmorgan\u3068\u3057\u3066\u5206\u96e2\n\n### express\nresponse\u306fexpress\u306b\u304a\u4efb\u305b\uff0e\n\n```javascript:SimpleHttpServer.js\n\nvar PORT=3000,\n        ROOTDIR='public';\n\ntry {\n    var log = require('log4js');\n    logger = log.getLogger();\n    var morgan = require('morgan');\n    logger.info('logger loaded');\n\n    var express = require('express');\n    var app = express();\n\n} catch (e) {\n    logger.error(e);\n} \n\napp.use(morgan('dev', { format:'dev', immediate: true}));\napp.use(express.static(ROOTDIR));\n\napp.use(function(req, res, next) {\n     logger.info('request to: ' + req.path);\n     next();\n});\n\napp.listen(PORT);\n\n```\n\n`app.use(function(){...})`\u3067middleware\u306b\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\uff0e\nmorgan\u306f`dev`\u30ec\u30d9\u30eb\u3067\u30ed\u30ae\u30f3\u30b0\u3092\u8a2d\u5b9a\u3057\u305f\uff0e\n\n`function(){...}`\u306e\u524d\u3067\u30d1\u30b9\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u3067\uff0c\u3069\u306e\u30d1\u30b9\u3067\u3082\u95a2\u6570\u304c\u547c\u3070\u308c\u308b\uff0e\n\u53c2\u8003:[app.use([path], [function...], function)](http://expressjs.com/api.html#app.use)\n\n### \u5b9f\u884c\npublic/\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7f6e\u3044\u3066\u5b9f\u884c\u3059\u308b\uff0e\n\n`$node SimplerHttpServer.js`\n`[2014-11-22 18:06:46.626] [INFO] [default] - logger loaded`\n`GET /hoge - - ms - -`\n`GET /hogea - - ms - -`\n`GET /hogeb - - ms - -`\n`GET /favicon.ico - - ms - -`\n`[2014-11-22 18:06:52.012] [INFO] [default] - request to: /favicon.ico`\n\n---\n\n## (\u89e3\u6c7a\u6e08\u307f)\u8ffd\u8a18\n\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u5b58\u5728\u3059\u308bURL\u3092\u6307\u5b9a\u3059\u308b\u3068\u79c1\u306e\u74b0\u5883\u3067\u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\uff0e\n\u5b58\u5728\u3057\u306a\u3044URL\u3060\u3068\"request to: ...\"\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\n\n\u5225\u9014\uff0c\u8abf\u3079\u3066\u307f\u307e\u3059\uff0e\n\n### 404\u306a\u3069\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5411\u3051\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u3060\u3063\u305f\n`app.use(function()...)`\u306f404\u306a\u3069\u306e\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306e\u307f\u5b9f\u884c\u3055\u308c\u308b\uff0e\n\u5b58\u5728\u3057\u306a\u3044URL\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306e\u307f\uff0c\"request to: ...\"\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u7d0d\u5f97\u3057\u305f\uff0e\n\n[How do you handle 404s?](http://expressjs.com/starter/faq.html)\n>\nHow do you handle 404s?\nIn Express, 404s are not the result of an error. Therefore, the error-handler middleware will not capture 404s. This is because a 404 is simply the absence of additional work to do; in other words, Express has executed all middleware / routes, and found that none of them responded. All you need to do is add a middleware at the very bottom (below all others) to handle a 404:\n\n>app.use(function(req, res, next){\n  res.send(404, 'Sorry cant find that!');\n});\n\n\u4ee5\u4e0a\uff0e\n", "tags": ["Express4", "Node.js", "MacOSX"]}