{"context": " More than 1 year has passed since last update.example\u3092\u5b9f\u884c\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u306b\u3001\u307e\u305f\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\u304c\u3066\u3089\u66f8\u304d\u307e\u3059\u3002\n\u6700\u7d42\u7684\u306b\u4fee\u6b63\u3057\u305fexample\u306f\u3053\u3061\u3089\u3002(\u73fe\u5728PR\u6295\u3052\u3066\u307e\u3059\u304c\u3044\u3064merge\u3055\u308c\u308b\u3084\u3089...)\n# To show how SVMs work, we'll use Fisher's iris data set\n# Temporally, following order is required \nusing RDatasets\nusing SVM\n\n\n# We'll learn to separate setosa from other species\niris = dataset(\"datasets\", \"iris\")\n\n# SVM format expects observations in columns and features in rows\nX = array(iris[:, 1:4])'\np, n = size(X)\n\n# SVM format expects positive and negative examples to +1/-1\nY = [species == :setosa ? 1.0 : -1.0 for species in iris[:, \"Species\"]]\n\n# Select a subset of the data for training, test on the rest.\ntrain = randbool(n)\n\n# We'll fit a model with all of the default parameters\nmodel = svm(X[:,train], Y[train])\n\n# And now evaluate that model on the testset\naccuracy = countnz(predict(model, X[:,~train]) .== Y[~train])/countnz(~train)\n\n\u3061\u306a\u307f\u306b\u3001\u6bd4\u8f03\u5bfe\u8c61\u306ecommit\u306f 20bd50ea72fc4f94ec9e4adebf48ec7f16c717ca\n\u30dd\u30a4\u30f3\u30c8\u306f2\u70b9\u3002\n\n1. RDatasets\u306e\u4f7f\u3044\u65b9\u304c\u5909\u308f\u3063\u305f\n-iris = data(\"datasets\", \"iris\")\n+iris = dataset(\"datasets\", \"iris\")\n\n\u3053\u3061\u3089\u306e\u6240\u6ca2\u3055\u3093\u306e\u8cc7\u6599\u3092\u8aad\u3093\u3067\u3044\u305f\u3089\u3001P.11\u306b\u66f8\u3044\u3066\u3042\u3063\u3066\u6c17\u3065\u3044\u305f\u3002\n\n2. predict\u304cRDatasets\u306e\u3082\u306e\u3068conflict\u3059\u308b\naccuracy = countnz(predict(model, X[:,~train]) .== Y[~train])/countnz(~train)\n\n\u3053\u3053\u306e\u90e8\u5206\u3060\u3051\u3069\u3001\u3046\u307e\u304f\u3044\u3063\u305f\u308a\u884c\u304b\u306a\u304b\u3063\u305f\u308a\u3057\u305f\u306e\u3067\u51c4\u3044\u60a9\u3093\u3060\u3002\n\u5143\u3005\u306eexample\u3060\u3068\u3001\u578b\u304c\u5408\u308f\u306a\u3044\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3046\njulia> accuracy = countnz(predict(model, X[:,~train]) .== Y[~train])/countnz(~train)\nERROR: no method predict(SVMFit, Array{Float64,2})\n\njulia> using SVM\njulia> using RDatasets\njulia> methods(predict)\n# 2 methods for generic function \"predict\":\npredict(::DataFrameRegressionModel{M,T},...) at /Users/chezou/.julia/v0.3/DataFrames/src/statsmodels/statsmodel.jl:27\npredict(obj::RegressionModel) at /Users/chezou/.julia/v0.3/StatsBase/src/statmodels.jl:20\n\n\u3069\u3046\u3084\u3089\u3001DataFrames\u306epredict\u3092\u8aad\u3093\u3067\u3057\u307e\u3063\u3066\u3044\u305f\u3089\u3057\u3044\u3002\n\n@chezou \u578b\u304c\u5408\u308f\u306a\u3044\u6642\u306f methods(predict) \u3068\u3057\u3066\u3001\u4f7f\u3044\u305f\u3044\u95a2\u6570\u304c\u3069\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u3069\u306e\u578b\u306a\u3089\u53d7\u3051\u4ed8\u3051\u308b\u306e\u304b\u4e00\u89a7\u3067\u304d\u307e\u3059\u3002\u4eca\u306e\u306f\u305d\u308c\u3067\u898b\u3064\u3051\u307e\u3057\u305f\u3002\u2014 \u4f50\u85e4\u30fe(\u2312(\uff62 '\u03c9')\uff62\uff76\uff9e\uff75\uff70\u5efa\u592a (@bicycle1885) 2014, 6\u6708 14\n\n(bicycle1885\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01)\n\u3053\u308c\u306f\u3001using\u306e\u9806\u756a\u3092\u5909\u3048\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u51fa\u6765\u307e\u3057\u305f\u3002\njulia> using RDatasets\njulia> using SVM\njulia> methods(predict)\n# 2 methods for generic function \"predict\":\npredict(fit::SVMFit,X::Array{T,2}) at /Users/mic/.julia/v0.3/SVM/src/SVM.jl:22\npredict(fit::SVMFit) at /Users/mic/.julia/v0.3/SVM/src/SVM.jl:33\n\nmethods\u3068\u304b\u3067\u8abf\u3079\u308b\u307f\u305f\u3044\u306a\u8a71\u3001\u8efd\u304f\u4f7f\u3046\u5206\u306b\u306f\u77e5\u3089\u306a\u3044\u306e\u3067\u30cf\u30de\u3063\u305f\u6642\u306e\u5bfe\u51e6\u6cd5\u3092\u8eab\u306b\u3064\u3051\u3066\u3044\u304d\u305f\u3044\u3002\n\u306f\u30fc\u3001\u3055\u304f\u3063\u3068\u3084\u308d\u3046\u3068\u601d\u3063\u305f\u3089\u30012,3\u6642\u9593\u306f\u307e\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\nexample\u3092\u5b9f\u884c\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u306b\u3001\u307e\u305f\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\u304c\u3066\u3089\u66f8\u304d\u307e\u3059\u3002\n\n\u6700\u7d42\u7684\u306b\u4fee\u6b63\u3057\u305fexample\u306f\u3053\u3061\u3089\u3002(\u73fe\u5728[PR\u6295\u3052\u3066\u307e\u3059](https://github.com/JuliaStats/SVM.jl/pull/10)\u304c\u3044\u3064merge\u3055\u308c\u308b\u3084\u3089...)\n\n```\n# To show how SVMs work, we'll use Fisher's iris data set\n# Temporally, following order is required \nusing RDatasets\nusing SVM\n\n\n# We'll learn to separate setosa from other species\niris = dataset(\"datasets\", \"iris\")\n\n# SVM format expects observations in columns and features in rows\nX = array(iris[:, 1:4])'\np, n = size(X)\n\n# SVM format expects positive and negative examples to +1/-1\nY = [species == :setosa ? 1.0 : -1.0 for species in iris[:, \"Species\"]]\n\n# Select a subset of the data for training, test on the rest.\ntrain = randbool(n)\n\n# We'll fit a model with all of the default parameters\nmodel = svm(X[:,train], Y[train])\n\n# And now evaluate that model on the testset\naccuracy = countnz(predict(model, X[:,~train]) .== Y[~train])/countnz(~train)\n```\n\n\u3061\u306a\u307f\u306b\u3001\u6bd4\u8f03\u5bfe\u8c61\u306ecommit\u306f `20bd50ea72fc4f94ec9e4adebf48ec7f16c717ca`\n\n\u30dd\u30a4\u30f3\u30c8\u306f2\u70b9\u3002\n\n## 1. RDatasets\u306e\u4f7f\u3044\u65b9\u304c\u5909\u308f\u3063\u305f\n\n```diff\n-iris = data(\"datasets\", \"iris\")\n+iris = dataset(\"datasets\", \"iris\")\n```\n\n\n[\u3053\u3061\u3089](http://www.slideshare.net/TokorosawaYoshio/tokyor40-35862024)\u306e\u6240\u6ca2\u3055\u3093\u306e\u8cc7\u6599\u3092\u8aad\u3093\u3067\u3044\u305f\u3089\u3001P.11\u306b\u66f8\u3044\u3066\u3042\u3063\u3066\u6c17\u3065\u3044\u305f\u3002\n\n## 2. `predict`\u304cRDatasets\u306e\u3082\u306e\u3068conflict\u3059\u308b\n\n```julia\naccuracy = countnz(predict(model, X[:,~train]) .== Y[~train])/countnz(~train)\n```\n\n\u3053\u3053\u306e\u90e8\u5206\u3060\u3051\u3069\u3001\u3046\u307e\u304f\u3044\u3063\u305f\u308a\u884c\u304b\u306a\u304b\u3063\u305f\u308a\u3057\u305f\u306e\u3067\u51c4\u3044\u60a9\u3093\u3060\u3002\n\n\u5143\u3005\u306eexample\u3060\u3068\u3001\u578b\u304c\u5408\u308f\u306a\u3044\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3046\n\n```julia\njulia> accuracy = countnz(predict(model, X[:,~train]) .== Y[~train])/countnz(~train)\nERROR: no method predict(SVMFit, Array{Float64,2})\n```\n\n\n\n```\njulia> using SVM\njulia> using RDatasets\njulia> methods(predict)\n# 2 methods for generic function \"predict\":\npredict(::DataFrameRegressionModel{M,T},...) at /Users/chezou/.julia/v0.3/DataFrames/src/statsmodels/statsmodel.jl:27\npredict(obj::RegressionModel) at /Users/chezou/.julia/v0.3/StatsBase/src/statmodels.jl:20\n```\n\n\u3069\u3046\u3084\u3089\u3001DataFrames\u306e`predict`\u3092\u8aad\u3093\u3067\u3057\u307e\u3063\u3066\u3044\u305f\u3089\u3057\u3044\u3002\n\n<blockquote class=\"twitter-tweet\" lang=\"ja\"><p><a href=\"https://twitter.com/chezou\">@chezou</a> \u578b\u304c\u5408\u308f\u306a\u3044\u6642\u306f methods(predict) \u3068\u3057\u3066\u3001\u4f7f\u3044\u305f\u3044\u95a2\u6570\u304c\u3069\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u3069\u306e\u578b\u306a\u3089\u53d7\u3051\u4ed8\u3051\u308b\u306e\u304b\u4e00\u89a7\u3067\u304d\u307e\u3059\u3002\u4eca\u306e\u306f\u305d\u308c\u3067\u898b\u3064\u3051\u307e\u3057\u305f\u3002</p>&mdash; \u4f50\u85e4\u30fe(\u2312(\uff62 &#39;\u03c9&#39;)\uff62\uff76\uff9e\uff75\uff70\u5efa\u592a (@bicycle1885) <a href=\"https://twitter.com/bicycle1885/statuses/477780857592107008\">2014, 6\u6708 14</a></blockquote>\n\n(bicycle1885\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01)\n\n\u3053\u308c\u306f\u3001using\u306e\u9806\u756a\u3092\u5909\u3048\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u51fa\u6765\u307e\u3057\u305f\u3002\n\n```julia\njulia> using RDatasets\njulia> using SVM\njulia> methods(predict)\n# 2 methods for generic function \"predict\":\npredict(fit::SVMFit,X::Array{T,2}) at /Users/mic/.julia/v0.3/SVM/src/SVM.jl:22\npredict(fit::SVMFit) at /Users/mic/.julia/v0.3/SVM/src/SVM.jl:33\n```\n\n`methods`\u3068\u304b\u3067\u8abf\u3079\u308b\u307f\u305f\u3044\u306a\u8a71\u3001\u8efd\u304f\u4f7f\u3046\u5206\u306b\u306f\u77e5\u3089\u306a\u3044\u306e\u3067\u30cf\u30de\u3063\u305f\u6642\u306e\u5bfe\u51e6\u6cd5\u3092\u8eab\u306b\u3064\u3051\u3066\u3044\u304d\u305f\u3044\u3002\n\n\n\u306f\u30fc\u3001\u3055\u304f\u3063\u3068\u3084\u308d\u3046\u3068\u601d\u3063\u305f\u3089\u30012,3\u6642\u9593\u306f\u307e\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n", "tags": ["machine_learning", "Julia0.3.0"]}