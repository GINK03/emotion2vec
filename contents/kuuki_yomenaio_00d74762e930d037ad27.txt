{"tags": ["Unity", "Spine", "Shader"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\nSpine\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\uff1f\nSpine\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fUnity\u3067\u8a00\u3046\u3068\u3053\u308d\u306eMeshRenderer\u3067\u63cf\u753b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n(spine-unity\u5185\u306eSkeletonRenderer.cs\u304c\u8a72\u5f53\u306e\u30bd\u30fc\u30b9\u3067\u3059)\n\u3064\u307e\u308aMeshRenderer\u306eMask\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u308c\u3070\u3001Mask\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n(\u81ea\u5206\u306f\u306a\u3093\u3067\u3053\u306e\u8eab\u4f53\u306e\u4f4d\u7f6e\u306b\u3057\u3061\u3083\u3063\u305f\u3093\u3060\u308d\u3046\uff1f\uff09\n\nMask\u51e6\u7406\u306b\u3064\u3044\u3066\n\u8981\u306fRenderer\u3092Mask\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\nSpriteRenderer\u3059\u3089Mask\u3059\u308b\u51e6\u7406\u306fUnity\u306b\u306f\u7121\u3044\u3088\u3046\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001\u7c21\u5358\u306b\u81ea\u4f5c\u3059\u308b\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\nShader\u3067\u5b9f\u88c5\n\u7c21\u5358\u306a\u306e\u306f\u3084\u306f\u308a\u30b9\u30c6\u30f3\u30b7\u30eb\u30c6\u30b9\u30c8\u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\u3059\u3054\u304f\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3068\u3001\u30b9\u30c6\u30f3\u30b7\u30eb\u3068\u306f\u578b\u629c\u304d\u3068\u3044\u3046\u610f\u5473\u3067\n\u30d4\u30af\u30bb\u30eb\u63cf\u753b\u3092\u884c\u3046\u969b\u306b\u3053\u306e\u70b9\u3092\u6253\u3064\u304b\u6253\u305f\u306a\u3044\u304b\u3092\u5224\u5b9a\u3059\u308b\u30c6\u30b9\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\nSpine\u5074\u306b\u9069\u7528\u3059\u308bshader\n\nSpineShader.shader\nShader \"Custom/SpineShader\"{\nProperties\n{\n        _MainTex (\"Base (RGB)\", 2D) = \"white\" {}\n}\n\nSubShader\n{\n        Tags {\"Queue\"=\"Transparent+2\" \"IgnoreProjector\"=\"True\" \"RenderType\"=\"Transparent\"}\n        ZWrite Off\n        Blend SrcAlpha OneMinusSrcAlpha\n\n        Stencil {\n                                Ref 1\n                                Comp Equal\n        }\n\n        Pass\n        {\n                CGPROGRAM\n                        #pragma vertex vert\n                        #pragma fragment frag\n\n                        #include \"UnityCG.cginc\"\n\n                        struct appdata_t\n                        {\n                                float4 vertex : POSITION;\n                                float2 texcoord : TEXCOORD0;\n                        };\n\n                        struct v2f\n                        {\n                                float4 vertex : SV_POSITION;\n                                half2 texcoord : TEXCOORD0;\n                        };\n\n                        sampler2D _MainTex;\n                        float4 _MainTex_ST;\n\n                        v2f vert (appdata_t v)\n                        {\n                                v2f o;\n                                o.vertex = mul(UNITY_MATRIX_MVP, v.vertex);\n                                o.texcoord = TRANSFORM_TEX(v.texcoord, _MainTex);\n                                return o;\n                        }\n\n                        fixed4 frag (v2f i) : COLOR\n                        {\n                                fixed4 col = tex2D(_MainTex, i.texcoord);\n                                return col;\n                        }\n                ENDCG\n        }\n}\n\n}\n\n\n\nMask\u3059\u308bSprite\u306b\u8a2d\u5b9a\u3059\u308bShader\n\nSpineSoriteMask.shader\nShader \"Custom/SpineSpriteMask\"{\nProperties\n{\n        _MainTex (\"Base (RGB)\", 2D) = \"white\" {}\n}\n\nSubShader\n{\n        Tags {\"Queue\"=\"Transparent+1\" \"IgnoreProjector\"=\"True\"}\n        ZWrite Off\n        AlphaTest Greater 0.5\n        ColorMask 0\n        ZTest Always\n\n\n        Stencil {\n                                Ref 1\n                                Comp always\n                                Pass replace\n                        }\n\n\n        Pass\n        {\n                CGPROGRAM\n                        #pragma vertex vert\n                        #pragma fragment frag\n\n                        #include \"UnityCG.cginc\"\n\n                        struct appdata_t\n                        {\n                                float4 vertex : POSITION;\n                                float2 texcoord : TEXCOORD0;\n                        };\n\n                        struct v2f\n                        {\n                                float4 vertex : SV_POSITION;\n                                half2 texcoord : TEXCOORD0;\n                        };\n\n                        sampler2D _MainTex;\n                        float4 _MainTex_ST;\n\n                        v2f vert (appdata_t v)\n                        {\n                                v2f o;\n                                o.vertex = mul(UNITY_MATRIX_MVP, v.vertex);\n                                o.texcoord = TRANSFORM_TEX(v.texcoord, _MainTex);\n                                return o;\n                        }\n\n                        fixed4 frag (v2f i) : COLOR\n                        {\n                                fixed4 col = tex2D(_MainTex, i.texcoord);\n                                if(col.a<0.1)discard;\n                                return col;\n                        }\n                ENDCG\n        }\n}\n\n}\n\n\n\n\u89e3\u8aac\n\nSpineShader.shader\n   Stencil {\n             Ref 1\n             Comp Equal\n   }\n\n\n\nSpineSoriteMask.shader\n   ColorMask 0\n   Stencil {\n             Ref 1\n             Comp always\n             Pass replace\n   }\n\n\n\nStencil\n\u89e3\u8aac\u306b\u3064\u3044\u3066\u306f\nedo_m18\u3055\u3093\u306e[Unity] Unity\u306eShader\u3067\u30b9\u30c6\u30f3\u30b7\u30eb\u30d0\u30c3\u30d5\u30a1\u3092\u8a66\u3059\n\u8fba\u308a\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305a\u3001SpineSpriteMask\u3067\u3059\u304c\u3001\n\u300c\u53c2\u7167\u50241\u306e\u3082\u306e\u3068\u6bd4\u8f03\u3092\u884c\u3044\u3001\u5168\u3066OK\u3068\u3057\u3001\n\u53c2\u7167\u5024\u3092\u30d0\u30c3\u30d5\u30a1\u306b\u66f8\u304d\u8fbc\u307f\u3001ColorMask 0\u3067\u63cf\u753b\u306f\u3057\u306a\u3044\u300d\n\u3068\u306a\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001SpineShader\u3002\n\u300c\u53c2\u7167\u5024\u306f1\u3001\u5024\u306e\u4e00\u81f4\u3092\u30c1\u30a7\u30c3\u30af\u300d\n\u3068\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u8a2d\u5b9a\u3092\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\nSpineShader\u5074\u306e\u63cf\u753b\u306fStencilTest\u3092\u53d7\u3051\u308b\u4e8b\u3068\u306a\u308a\u3001\nSpineSpriteMask\u5074\u3067\u8a2d\u5b9a\u3057\u305f\u578b\u7d19\u306e\u5f62\u306b\u5207\u308a\u629c\u304b\u308c\u308b\u3088\u3046\u306b\n\u63cf\u753b\u3055\u308c\u307e\u3059\u3002\nUnity\u3067\u4f7f\u3046\u969b\u306b\u306fMaterial\u5316\u3092\u5fc5\u8981\u3068\u3057\u305f\u308a\u3068\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\n\u305d\u306e\u8fba\u306f\ngithub\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n# Spine\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\uff1f\nSpine\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fUnity\u3067\u8a00\u3046\u3068\u3053\u308d\u306eMeshRenderer\u3067\u63cf\u753b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n(spine-unity\u5185\u306eSkeletonRenderer.cs\u304c\u8a72\u5f53\u306e\u30bd\u30fc\u30b9\u3067\u3059)\n\u3064\u307e\u308aMeshRenderer\u306eMask\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u308c\u3070\u3001Mask\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n![\u540d\u79f0\u672a\u8a2d\u5b9a.mov.gif](https://qiita-image-store.s3.amazonaws.com/0/26453/67e734ca-ac57-d46f-6a18-d88aac208b00.gif)\n(\u81ea\u5206\u306f\u306a\u3093\u3067\u3053\u306e\u8eab\u4f53\u306e\u4f4d\u7f6e\u306b\u3057\u3061\u3083\u3063\u305f\u3093\u3060\u308d\u3046\uff1f\uff09\n\n# Mask\u51e6\u7406\u306b\u3064\u3044\u3066\n\u8981\u306fRenderer\u3092Mask\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\nSpriteRenderer\u3059\u3089Mask\u3059\u308b\u51e6\u7406\u306fUnity\u306b\u306f\u7121\u3044\u3088\u3046\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001\u7c21\u5358\u306b\u81ea\u4f5c\u3059\u308b\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\n# Shader\u3067\u5b9f\u88c5\n\u7c21\u5358\u306a\u306e\u306f\u3084\u306f\u308a\u30b9\u30c6\u30f3\u30b7\u30eb\u30c6\u30b9\u30c8\u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\u3059\u3054\u304f\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3068\u3001\u30b9\u30c6\u30f3\u30b7\u30eb\u3068\u306f\u578b\u629c\u304d\u3068\u3044\u3046\u610f\u5473\u3067\n\u30d4\u30af\u30bb\u30eb\u63cf\u753b\u3092\u884c\u3046\u969b\u306b\u3053\u306e\u70b9\u3092\u6253\u3064\u304b\u6253\u305f\u306a\u3044\u304b\u3092\u5224\u5b9a\u3059\u308b\u30c6\u30b9\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n# Spine\u5074\u306b\u9069\u7528\u3059\u308bshader\n\n```glsl:SpineShader.shader\nShader \"Custom/SpineShader\"{\nProperties\n{\n        _MainTex (\"Base (RGB)\", 2D) = \"white\" {}\n}\n \nSubShader\n{\n        Tags {\"Queue\"=\"Transparent+2\" \"IgnoreProjector\"=\"True\" \"RenderType\"=\"Transparent\"}\n        ZWrite Off\n        Blend SrcAlpha OneMinusSrcAlpha\n \n        Stencil {\n                                Ref 1\n                                Comp Equal\n        }\n     \n        Pass\n        {\n                CGPROGRAM\n                        #pragma vertex vert\n                        #pragma fragment frag\n                     \n                        #include \"UnityCG.cginc\"\n \n                        struct appdata_t\n                        {\n                                float4 vertex : POSITION;\n                                float2 texcoord : TEXCOORD0;\n                        };\n \n                        struct v2f\n                        {\n                                float4 vertex : SV_POSITION;\n                                half2 texcoord : TEXCOORD0;\n                        };\n \n                        sampler2D _MainTex;\n                        float4 _MainTex_ST;\n                     \n                        v2f vert (appdata_t v)\n                        {\n                                v2f o;\n                                o.vertex = mul(UNITY_MATRIX_MVP, v.vertex);\n                                o.texcoord = TRANSFORM_TEX(v.texcoord, _MainTex);\n                                return o;\n                        }\n                     \n                        fixed4 frag (v2f i) : COLOR\n                        {\n                                fixed4 col = tex2D(_MainTex, i.texcoord);\n                                return col;\n                        }\n                ENDCG\n        }\n}\n \n}\n```\n\n# Mask\u3059\u308bSprite\u306b\u8a2d\u5b9a\u3059\u308bShader\n\n```glsl:SpineSoriteMask.shader\nShader \"Custom/SpineSpriteMask\"{\nProperties\n{\n        _MainTex (\"Base (RGB)\", 2D) = \"white\" {}\n}\n \nSubShader\n{\n        Tags {\"Queue\"=\"Transparent+1\" \"IgnoreProjector\"=\"True\"}\n        ZWrite Off\n        AlphaTest Greater 0.5\n        ColorMask 0\n        ZTest Always\n \n \n        Stencil {\n                                Ref 1\n                                Comp always\n                                Pass replace\n                        }\n \n     \n        Pass\n        {\n                CGPROGRAM\n                        #pragma vertex vert\n                        #pragma fragment frag\n                     \n                        #include \"UnityCG.cginc\"\n \n                        struct appdata_t\n                        {\n                                float4 vertex : POSITION;\n                                float2 texcoord : TEXCOORD0;\n                        };\n \n                        struct v2f\n                        {\n                                float4 vertex : SV_POSITION;\n                                half2 texcoord : TEXCOORD0;\n                        };\n \n                        sampler2D _MainTex;\n                        float4 _MainTex_ST;\n                     \n                        v2f vert (appdata_t v)\n                        {\n                                v2f o;\n                                o.vertex = mul(UNITY_MATRIX_MVP, v.vertex);\n                                o.texcoord = TRANSFORM_TEX(v.texcoord, _MainTex);\n                                return o;\n                        }\n                     \n                        fixed4 frag (v2f i) : COLOR\n                        {\n                                fixed4 col = tex2D(_MainTex, i.texcoord);\n                                if(col.a<0.1)discard;\n                                return col;\n                        }\n                ENDCG\n        }\n}\n \n}\n```\n\n# \u89e3\u8aac\n\n```glsl:SpineShader.shader\n   Stencil {\n             Ref 1\n             Comp Equal\n   }\n```\n\n```glsl:SpineSoriteMask.shader\n   ColorMask 0\n   Stencil {\n             Ref 1\n             Comp always\n             Pass replace\n   }\n```\n\n\n### Stencil\n\u89e3\u8aac\u306b\u3064\u3044\u3066\u306f\n[edo_m18\u3055\u3093\u306e[Unity] Unity\u306eShader\u3067\u30b9\u30c6\u30f3\u30b7\u30eb\u30d0\u30c3\u30d5\u30a1\u3092\u8a66\u3059](http://qiita.com/edo_m18/items/95a7f350d1164486e03b)\n\u8fba\u308a\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u305a\u3001SpineSpriteMask\u3067\u3059\u304c\u3001\n\u300c\u53c2\u7167\u50241\u306e\u3082\u306e\u3068\u6bd4\u8f03\u3092\u884c\u3044\u3001\u5168\u3066OK\u3068\u3057\u3001\n\u53c2\u7167\u5024\u3092\u30d0\u30c3\u30d5\u30a1\u306b\u66f8\u304d\u8fbc\u307f\u3001ColorMask 0\u3067\u63cf\u753b\u306f\u3057\u306a\u3044\u300d\n\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u3001SpineShader\u3002\n\u300c\u53c2\u7167\u5024\u306f1\u3001\u5024\u306e\u4e00\u81f4\u3092\u30c1\u30a7\u30c3\u30af\u300d\n\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u8a2d\u5b9a\u3092\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\nSpineShader\u5074\u306e\u63cf\u753b\u306fStencilTest\u3092\u53d7\u3051\u308b\u4e8b\u3068\u306a\u308a\u3001\nSpineSpriteMask\u5074\u3067\u8a2d\u5b9a\u3057\u305f\u578b\u7d19\u306e\u5f62\u306b\u5207\u308a\u629c\u304b\u308c\u308b\u3088\u3046\u306b\n\u63cf\u753b\u3055\u308c\u307e\u3059\u3002\n\nUnity\u3067\u4f7f\u3046\u969b\u306b\u306fMaterial\u5316\u3092\u5fc5\u8981\u3068\u3057\u305f\u308a\u3068\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\n\u305d\u306e\u8fba\u306f\n[github]\n(https://github.com/jake1256/SpineMask)\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n"}