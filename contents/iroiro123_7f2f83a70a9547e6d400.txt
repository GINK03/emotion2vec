{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u61c7\u5207\u4e01\u5be7\u306b\u89e3\u8aac\u3059\u308b\u6c17\u306f\u306a\u3044\u3002\n2015/12/8\n\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n\n\u554f\u984c\n\nSolve the slide puzzle and decode the QR code.\nhttp://puzzle.quals.seccon.jp:42213/slidepuzzle\n\n\u4e0a\u8a18\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306815\u30d1\u30ba\u30eb\u304c\u51fa\u984c\u3055\u308c\u308b\u3002\n\u3053\u306e\u30d1\u30ba\u30eb\u3092\u89e3\u304f\u3068QR\u30b3\u30fc\u30c9\u306b\u306a\u308b\u306e\u3067\u8aad\u307f\u53d6\u3063\u3066\u9001\u4fe1\u3059\u308b\u3002\n50\u554f\u9023\u7d9a\u6b63\u89e3\u3067\u30da\u30fc\u30b8\u306b\u30d5\u30e9\u30b0\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n\u89e3\u6cd5\n15\u30d1\u30ba\u30eb\u306e\u30d4\u30fc\u30b9\u3068\u7a7a\u304d\u90e8\u5206\u306e\u8a0816\u679a\u306e\u753b\u50cf\u304b\u3089\u5b8c\u6210\u5f62\u306eQR\u30b3\u30fc\u30c9\u3092\u69cb\u6210\u3059\u308b\u306b\u306f\u2026\n\u5143\u753b\u50cf\u304c\u5199\u771f\u306a\u3089\u96a3\u308a\u5408\u3046\u30d4\u30fc\u30b9\u306e\u5883\u754c\u90e8\u5206\u304c\u4f3c\u3066\u3044\u308b\u3053\u3068\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u4e00\u822c\u7684[\u8981\u51fa\u5178]\u3060\u3051\u3069\u3001\u4eca\u56de\u306eQR\u30b3\u30fc\u30c9\u306e\u5834\u5408\u306f\u96a3\u63a5\u90e8\u5206\u304c\u771f\u3063\u767d\u3068\u3044\u3046\u3046\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u3063\u3066\u9069\u3055\u306a\u3044\u3002\n\u305d\u3053\u3067\u3001\u30d4\u30fc\u30b9\u753b\u50cf\u3092\u3088\u304f\u8abf\u3079\u308b\u3068\u2026\n\n\u5404\u30d4\u30fc\u30b9\u306e\u5927\u304d\u3055\u306f53*53px\n\u5404\u30d4\u30fc\u30b9\u306f\u3074\u3063\u305f\u308a\u304f\u3063\u3064\u304f\nQR\u30b3\u30fc\u30c9\u306e1\u30bb\u30eb\u306e\u5927\u304d\u3055\u306f5*5px\nQR\u30b3\u30fc\u30c9\u306e\u30de\u30fc\u30b8\u30f3\u306f\u4e0a\u3068\u5de6\u304c15px\u3001\u53f3\u3068\u4e0b\u304c12px\n\n\u5b9f\u306f\u3053\u306e\u4e8b\u5b9f\u3092\u5229\u7528\u3059\u308b\u3068\u5404\u30d4\u30fc\u30b9\u306e\u4f4d\u7f6e\u3092\u7279\u5b9a\u3067\u304d\u308b\u3002\n\u3068\u3044\u3046\u306e\u3082\u3001\u30d4\u30fc\u30b9\u306e\u5927\u304d\u3055(53)\u304c\u30bb\u30eb\u306e\u5927\u304d\u3055(5)\u306e\u500d\u6570\u3067\u306a\u3044\u306e\u3067\u5404\u30d4\u30fc\u30b9\u306e\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c\u6570px\u30ba\u30ec\u308b\u3002\n\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\u3001\n\n\u5de6(\u4e0a)\u304b\u30891\u3064\u76ee\u306e\u30d4\u30fc\u30b9\u306f\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c 5n\n\u5de6(\u4e0a)\u304b\u30892\u3064\u76ee\u306e\u30d4\u30fc\u30b9\u306f\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c 2+5n\n\u5de6(\u4e0a)\u304b\u30893\u3064\u76ee\u306e\u30d4\u30fc\u30b9\u306f\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c 4+5n\n\u5de6(\u4e0a)\u304b\u30894\u3064\u76ee\u306e\u30d4\u30fc\u30b9\u306f\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c 1+5n\n\n\u3068\u3044\u3046\u3053\u3068\u3002\n\u3053\u3053\u307e\u3067\u5206\u304b\u308c\u3070\u3042\u3068\u306f\u3084\u308b\u3060\u3051\u3002\n\u30d4\u30fc\u30b9\u306e\u771f\u3093\u4e2d\u3042\u305f\u308a\u3092\u5341\u5b57\u306b\u7a81\u3063\u5207\u308b\u3088\u3046\u306b\u7e26\u6a2a1\u56de\u305a\u3064\u8d70\u67fb\u3057\u3066\u3001\u30bb\u30eb\u306e\u4f4d\u7f6e(\u8272\u304c\u5909\u308f\u3063\u305f\u4f4d\u7f6e)\u304b\u3089\u30d4\u30fc\u30b9\u81ea\u4f53\u306e\u4f4d\u7f6e\u3092\u7279\u5b9a\u3002\n\u2026\u3082\u3046\u89e3\u8aac\u306f\u7121\u304f\u3066\u3044\u3044\u306d\uff1f\u30a2\u30c3\u30cf\u30a4\u3002\n\n\u30b9\u30af\u30ea\u30d7\u30c8\nPerl\u3067\u3059\u304c\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse LWP;\nuse GD;\n\n\nmy $sqrd = 'python strong-qr-decoder/sqrd.py';\n\nmy $base = 'http://puzzle.quals.seccon.jp:42213/';\nmy $ua = LWP::UserAgent->new;\n\n\n# \u7d50\u679c\u9001\u4fe1\u30fbHTML\u53d6\u5f97\u517c\u7528\n# (\u9001\u4fe1\u5148,\u7b54\u3048) -> HTML\nsub submit {\n    my ($path, $text) = @_;\n    my $res;\n    if (defined $text) {\n        $res = $ua->post($base.$path, {'text'=>$text});\n    } else {\n        $res = $ua->get($base.$path);\n    }\n    return $res->decoded_content;\n}\n\n# URL -> GD::Image\nsub getimage {\n    my ($url) = @_;\n    my $res = $ua->get($url);\n    my $png = $res->decoded_content;\n    my $im = GD::Image->new($png);\n    return $im;\n}\n\n# GD::Image -> \u30d1\u30cd\u30eb\u306e\u4f4d\u7f6e(x,y)\nsub getpos {\n    my ($im) = @_;\n    my ($x, $y) = (-1, -1);\n\n    my $w = $im->width;\n    my $h = $im->height;\n    my $cx = int($w/2);\n    my $cy = int($h/2);\n\n    # \u30bb\u30eb\u306e\u5ea7\u6a19(mod 5) -> \u30d1\u30cd\u30eb\u306e\u4f4d\u7f6e\n    my %rem2pos = (0=>0, 2=>1, 4=>2, 1=>3, 3=>4);\n\n    # \u5de6\u304b\u3089\u53f3\u306b\u771f\u3093\u4e2d\u3092\u8d70\u67fb\n    my $x0 = $im->getPixel(0, $cy);\n    for my $i (0 .. $w-1) {\n        # \u8272\u304c\u5909\u308f\u3063\u305f\u6642\u70b9\u306e\u5ea7\u6a19\u304b\u3089\u4f4d\u7f6e\u3092\u5272\u308a\u51fa\u3059\n        if ($im->getPixel($i, $cy) != $x0) {\n            $x = $rem2pos{$i % 5};\n            last;\n        }\n    }\n\n    # \u4e0a\u304b\u3089\u4e0b\u306b\u771f\u3093\u4e2d\u3092\u8d70\u67fb\n    my $y0 = $im->getPixel($cx, 0);\n    for my $j (0 .. $h-1) {\n        # \u8272\u304c\u5909\u308f\u3063\u305f\u6642\u70b9\u306e\u5ea7\u6a19\u304b\u3089\u4f4d\u7f6e\u3092\u5272\u308a\u51fa\u3059\n        if ($im->getPixel($cx, $j) != $y0) {\n            $y = $rem2pos{$j % 5};\n            last;\n        }\n    }\n\n    return ($x, $y);\n}\n\n# (GD::Image,x,y) -> 2\u6b21\u5143\u914d\u5217\nsub image2map {\n    my ($im, $x, $y) = @_;\n\n    # \u8272\u53d6\u5f97\u3092\u958b\u59cb\u3059\u308b\u5ea7\u6a19\n    my @pos2ofs = (15, 2, 4, 1, 3);\n    my $xofs = $pos2ofs[$x];\n    my $yofs = $pos2ofs[$y];\n\n    # \u53d6\u5f97\u3059\u308b\u6570(1\u8fba)\n    my @pos2num = (8, 11, 10, 8, 0);\n    my $xnum = $pos2num[$x];\n    my $ynum = $pos2num[$y];\n\n    my $black;\n    if (defined $im) {\n        $black = $im->colorClosest(0,0,0);\n    }\n\n    my @map;\n    for my $j (0 .. $ynum-1) {\n        for my $i (0 .. $xnum-1) {\n            if (defined $im) {\n                my $c = $im->getPixel($xofs+$i*5, $yofs+$j*5);\n                $map[$j][$i] = ($c == $black ? '#' : ' ');\n            } else {\n                $map[$j][$i] = '?';\n            }\n        }\n    }\n    return wantarray ? @map : \\@map;\n}\n\nsub save {\n    my ($name, $data) = @_;\n    open my $fh, '>', $name or return;\n    binmode $fh;\n    print $fh $data;\n    close $fh;\n}\n\nsub main {\n\n    my $path = 'slidepuzzle';\n    my $ans = undef;\n\n    while (1) {\n        my $html = submit($path, $ans);\n\n        my @urls = $html =~ /(?<=src=')[^>']+/g;\n\n        if (!@urls) {\n            print $html;\n            last;\n        }\n\n        # 4\u6b21\u5143\u914d\u5217 = 2\u6b21\u5143(\u30d1\u30cd\u30eb) x 2\u6b21\u5143(\u30bb\u30eb)\n        my @panels;\n\n        foreach my $url (@urls) {\n            my $im = getimage($url);\n            my ($x, $y) = getpos($im);\n            if ($x >= 0 && $y >= 0) {\n                $panels[$y][$x] = image2map($im, $x, $y);\n            }\n        }\n\n        # \u7a74\u57cb\u3081\n        for my $j (0..3) {\n        for my $i (0..3) {\n            if (!defined $panels[$j][$i]) {\n                $panels[$j][$i] = image2map(undef, $i, $j);\n            }\n        }}\n\n        # \u5408\u6210\u3057\u30662\u6b21\u5143\u306b\n        my @map;\n        for my $j (0..3) {\n            for my $k (0..$#{$panels[$j][0]}) {\n                my @row;\n                for my $i (0..3) {\n                    push @row, @{$panels[$j][$i][$k]};\n                }\n                push @map, \\@row;\n            }\n        }\n\n        # \u6587\u5b57\u5217\u306b\n        my $qr = join(\"\\n\", map join('', @$_), @map);\n        save(\"tmp\", $qr);\n\n        # \u30bd\u30eb\u30d0\u30fc\u306b\u3076\u3061\u8fbc\u3080\n        $ans = `$sqrd tmp`;\n        chomp($ans);\n        print \"$ans\\n\";\n\n        ($path) = $html =~ /(?<=action=\")[^\"]+/g;\n    }\n\n    return 0;\n}\n\nexit main() if (!defined caller);\n\n\n\u53c2\u8003\u753b\u50cf\n\n\n# \u306f\u3058\u3081\u306b\n\n\u61c7\u5207\u4e01\u5be7\u306b\u89e3\u8aac\u3059\u308b\u6c17\u306f\u306a\u3044\u3002\n\n2015/12/8\n\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n\n# \u554f\u984c\n\n> Solve the slide puzzle and decode the QR code.\n> http://puzzle.quals.seccon.jp:42213/slidepuzzle\n\n\u4e0a\u8a18\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306815\u30d1\u30ba\u30eb\u304c\u51fa\u984c\u3055\u308c\u308b\u3002\n\u3053\u306e\u30d1\u30ba\u30eb\u3092\u89e3\u304f\u3068QR\u30b3\u30fc\u30c9\u306b\u306a\u308b\u306e\u3067\u8aad\u307f\u53d6\u3063\u3066\u9001\u4fe1\u3059\u308b\u3002\n50\u554f\u9023\u7d9a\u6b63\u89e3\u3067\u30da\u30fc\u30b8\u306b\u30d5\u30e9\u30b0\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n# \u89e3\u6cd5\n\n15\u30d1\u30ba\u30eb\u306e\u30d4\u30fc\u30b9\u3068\u7a7a\u304d\u90e8\u5206\u306e\u8a0816\u679a\u306e\u753b\u50cf\u304b\u3089\u5b8c\u6210\u5f62\u306eQR\u30b3\u30fc\u30c9\u3092\u69cb\u6210\u3059\u308b\u306b\u306f\u2026\n\u5143\u753b\u50cf\u304c\u5199\u771f\u306a\u3089\u96a3\u308a\u5408\u3046\u30d4\u30fc\u30b9\u306e\u5883\u754c\u90e8\u5206\u304c\u4f3c\u3066\u3044\u308b\u3053\u3068\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u4e00\u822c\u7684[\u8981\u51fa\u5178]\u3060\u3051\u3069\u3001\u4eca\u56de\u306eQR\u30b3\u30fc\u30c9\u306e\u5834\u5408\u306f\u96a3\u63a5\u90e8\u5206\u304c\u771f\u3063\u767d\u3068\u3044\u3046\u3046\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u3063\u3066\u9069\u3055\u306a\u3044\u3002\n\n\u305d\u3053\u3067\u3001\u30d4\u30fc\u30b9\u753b\u50cf\u3092\u3088\u304f\u8abf\u3079\u308b\u3068\u2026\n\n - \u5404\u30d4\u30fc\u30b9\u306e\u5927\u304d\u3055\u306f53*53px\n - \u5404\u30d4\u30fc\u30b9\u306f\u3074\u3063\u305f\u308a\u304f\u3063\u3064\u304f\n - QR\u30b3\u30fc\u30c9\u306e1\u30bb\u30eb\u306e\u5927\u304d\u3055\u306f5*5px\n - QR\u30b3\u30fc\u30c9\u306e\u30de\u30fc\u30b8\u30f3\u306f\u4e0a\u3068\u5de6\u304c15px\u3001\u53f3\u3068\u4e0b\u304c12px\n\n\u5b9f\u306f\u3053\u306e\u4e8b\u5b9f\u3092\u5229\u7528\u3059\u308b\u3068\u5404\u30d4\u30fc\u30b9\u306e\u4f4d\u7f6e\u3092\u7279\u5b9a\u3067\u304d\u308b\u3002\n\n\u3068\u3044\u3046\u306e\u3082\u3001\u30d4\u30fc\u30b9\u306e\u5927\u304d\u3055(53)\u304c\u30bb\u30eb\u306e\u5927\u304d\u3055(5)\u306e\u500d\u6570\u3067\u306a\u3044\u306e\u3067\u5404\u30d4\u30fc\u30b9\u306e\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c\u6570px\u30ba\u30ec\u308b\u3002\n\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\u3001\n\n - \u5de6(\u4e0a)\u304b\u30891\u3064\u76ee\u306e\u30d4\u30fc\u30b9\u306f\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c 5n\n - \u5de6(\u4e0a)\u304b\u30892\u3064\u76ee\u306e\u30d4\u30fc\u30b9\u306f\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c 2+5n\n - \u5de6(\u4e0a)\u304b\u30893\u3064\u76ee\u306e\u30d4\u30fc\u30b9\u306f\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c 4+5n\n - \u5de6(\u4e0a)\u304b\u30894\u3064\u76ee\u306e\u30d4\u30fc\u30b9\u306f\u30bb\u30eb\u306e\u4f4d\u7f6e\u304c 1+5n\n\n\u3068\u3044\u3046\u3053\u3068\u3002\n\n\u3053\u3053\u307e\u3067\u5206\u304b\u308c\u3070\u3042\u3068\u306f\u3084\u308b\u3060\u3051\u3002\n\u30d4\u30fc\u30b9\u306e\u771f\u3093\u4e2d\u3042\u305f\u308a\u3092\u5341\u5b57\u306b\u7a81\u3063\u5207\u308b\u3088\u3046\u306b\u7e26\u6a2a1\u56de\u305a\u3064\u8d70\u67fb\u3057\u3066\u3001\u30bb\u30eb\u306e\u4f4d\u7f6e(\u8272\u304c\u5909\u308f\u3063\u305f\u4f4d\u7f6e)\u304b\u3089\u30d4\u30fc\u30b9\u81ea\u4f53\u306e\u4f4d\u7f6e\u3092\u7279\u5b9a\u3002\n\n\u2026\u3082\u3046\u89e3\u8aac\u306f\u7121\u304f\u3066\u3044\u3044\u306d\uff1f\u30a2\u30c3\u30cf\u30a4\u3002\n\n# \u30b9\u30af\u30ea\u30d7\u30c8\n\nPerl\u3067\u3059\u304c\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\n```pl\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse LWP;\nuse GD;\n\n\nmy $sqrd = 'python strong-qr-decoder/sqrd.py';\n\nmy $base = 'http://puzzle.quals.seccon.jp:42213/';\nmy $ua = LWP::UserAgent->new;\n\n\n# \u7d50\u679c\u9001\u4fe1\u30fbHTML\u53d6\u5f97\u517c\u7528\n# (\u9001\u4fe1\u5148,\u7b54\u3048) -> HTML\nsub submit {\n\tmy ($path, $text) = @_;\n\tmy $res;\n\tif (defined $text) {\n\t\t$res = $ua->post($base.$path, {'text'=>$text});\n\t} else {\n\t\t$res = $ua->get($base.$path);\n\t}\n\treturn $res->decoded_content;\n}\n\n# URL -> GD::Image\nsub getimage {\n\tmy ($url) = @_;\n\tmy $res = $ua->get($url);\n\tmy $png = $res->decoded_content;\n\tmy $im = GD::Image->new($png);\n\treturn $im;\n}\n\n# GD::Image -> \u30d1\u30cd\u30eb\u306e\u4f4d\u7f6e(x,y)\nsub getpos {\n\tmy ($im) = @_;\n\tmy ($x, $y) = (-1, -1);\n\t\n\tmy $w = $im->width;\n\tmy $h = $im->height;\n\tmy $cx = int($w/2);\n\tmy $cy = int($h/2);\n\t\n\t# \u30bb\u30eb\u306e\u5ea7\u6a19(mod 5) -> \u30d1\u30cd\u30eb\u306e\u4f4d\u7f6e\n\tmy %rem2pos = (0=>0, 2=>1, 4=>2, 1=>3, 3=>4);\n\t\n\t# \u5de6\u304b\u3089\u53f3\u306b\u771f\u3093\u4e2d\u3092\u8d70\u67fb\n\tmy $x0 = $im->getPixel(0, $cy);\n\tfor my $i (0 .. $w-1) {\n\t\t# \u8272\u304c\u5909\u308f\u3063\u305f\u6642\u70b9\u306e\u5ea7\u6a19\u304b\u3089\u4f4d\u7f6e\u3092\u5272\u308a\u51fa\u3059\n\t\tif ($im->getPixel($i, $cy) != $x0) {\n\t\t\t$x = $rem2pos{$i % 5};\n\t\t\tlast;\n\t\t}\n\t}\n\t\n\t# \u4e0a\u304b\u3089\u4e0b\u306b\u771f\u3093\u4e2d\u3092\u8d70\u67fb\n\tmy $y0 = $im->getPixel($cx, 0);\n\tfor my $j (0 .. $h-1) {\n\t\t# \u8272\u304c\u5909\u308f\u3063\u305f\u6642\u70b9\u306e\u5ea7\u6a19\u304b\u3089\u4f4d\u7f6e\u3092\u5272\u308a\u51fa\u3059\n\t\tif ($im->getPixel($cx, $j) != $y0) {\n\t\t\t$y = $rem2pos{$j % 5};\n\t\t\tlast;\n\t\t}\n\t}\n\t\n\treturn ($x, $y);\n}\n\n# (GD::Image,x,y) -> 2\u6b21\u5143\u914d\u5217\nsub image2map {\n\tmy ($im, $x, $y) = @_;\n\t\n\t# \u8272\u53d6\u5f97\u3092\u958b\u59cb\u3059\u308b\u5ea7\u6a19\n\tmy @pos2ofs = (15, 2, 4, 1, 3);\n\tmy $xofs = $pos2ofs[$x];\n\tmy $yofs = $pos2ofs[$y];\n\t\n\t# \u53d6\u5f97\u3059\u308b\u6570(1\u8fba)\n\tmy @pos2num = (8, 11, 10, 8, 0);\n\tmy $xnum = $pos2num[$x];\n\tmy $ynum = $pos2num[$y];\n\t\n\tmy $black;\n\tif (defined $im) {\n\t\t$black = $im->colorClosest(0,0,0);\n\t}\n\t\n\tmy @map;\n\tfor my $j (0 .. $ynum-1) {\n\t\tfor my $i (0 .. $xnum-1) {\n\t\t\tif (defined $im) {\n\t\t\t\tmy $c = $im->getPixel($xofs+$i*5, $yofs+$j*5);\n\t\t\t\t$map[$j][$i] = ($c == $black ? '#' : ' ');\n\t\t\t} else {\n\t\t\t\t$map[$j][$i] = '?';\n\t\t\t}\n\t\t}\n\t}\n\treturn wantarray ? @map : \\@map;\n}\n\nsub save {\n\tmy ($name, $data) = @_;\n\topen my $fh, '>', $name or return;\n\tbinmode $fh;\n\tprint $fh $data;\n\tclose $fh;\n}\n\nsub main {\n\t\n\tmy $path = 'slidepuzzle';\n\tmy $ans = undef;\n\t\n\twhile (1) {\n\t\tmy $html = submit($path, $ans);\n\t\t\n\t\tmy @urls = $html =~ /(?<=src=')[^>']+/g;\n\t\t\n\t\tif (!@urls) {\n\t\t\tprint $html;\n\t\t\tlast;\n\t\t}\n\t\t\n\t\t# 4\u6b21\u5143\u914d\u5217 = 2\u6b21\u5143(\u30d1\u30cd\u30eb) x 2\u6b21\u5143(\u30bb\u30eb)\n\t\tmy @panels;\n\t\t\n\t\tforeach my $url (@urls) {\n\t\t\tmy $im = getimage($url);\n\t\t\tmy ($x, $y) = getpos($im);\n\t\t\tif ($x >= 0 && $y >= 0) {\n\t\t\t\t$panels[$y][$x] = image2map($im, $x, $y);\n\t\t\t}\n\t\t}\n\t\t\n\t\t# \u7a74\u57cb\u3081\n\t\tfor my $j (0..3) {\n\t\tfor my $i (0..3) {\n\t\t\tif (!defined $panels[$j][$i]) {\n\t\t\t\t$panels[$j][$i] = image2map(undef, $i, $j);\n\t\t\t}\n\t\t}}\n\t\t\n\t\t# \u5408\u6210\u3057\u30662\u6b21\u5143\u306b\n\t\tmy @map;\n\t\tfor my $j (0..3) {\n\t\t\tfor my $k (0..$#{$panels[$j][0]}) {\n\t\t\t\tmy @row;\n\t\t\t\tfor my $i (0..3) {\n\t\t\t\t\tpush @row, @{$panels[$j][$i][$k]};\n\t\t\t\t}\n\t\t\t\tpush @map, \\@row;\n\t\t\t}\n\t\t}\n\t\t\n\t\t# \u6587\u5b57\u5217\u306b\n\t\tmy $qr = join(\"\\n\", map join('', @$_), @map);\n\t\tsave(\"tmp\", $qr);\n\t\t\n\t\t# \u30bd\u30eb\u30d0\u30fc\u306b\u3076\u3061\u8fbc\u3080\n\t\t$ans = `$sqrd tmp`;\n\t\tchomp($ans);\n\t\tprint \"$ans\\n\";\n\t\t\n\t\t($path) = $html =~ /(?<=action=\")[^\"]+/g;\n\t}\n\t\n\treturn 0;\n}\n\nexit main() if (!defined caller);\n```\n\n# \u53c2\u8003\u753b\u50cf\n\n![b.png](https://qiita-image-store.s3.amazonaws.com/0/84346/92283847-702a-7118-e481-b0a815cab63e.png)\n\n![d.png](https://qiita-image-store.s3.amazonaws.com/0/84346/9efcbc09-fa6a-58d5-ba6e-48032714fa70.png)\n", "tags": ["CTF", "seccon", "writeup", "QRcode"]}