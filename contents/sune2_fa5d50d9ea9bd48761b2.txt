{"context": "\u3053\u306e\u8a18\u4e8b\u306f\u3001\u4e3b\u306b\u4ee5\u4e0b\u306eUnity\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u81ea\u5206\u306a\u308a\u306b\u89e3\u91c8\u3057\u3066\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002\n\nShader semantics\nProviding vertex data to vertex programs\n\nUnity\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f5.3\u7cfb\u3067\u3059\u3002\nvertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3068fragment\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5165\u51fa\u529b\u306b\u95a2\u308f\u308b\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u306b\u9650\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306fShaderLab\u306e\u8a18\u8ff0\u3042\u305f\u308a\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6982\u8981\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3068\u306f\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5165\u529b\u3084\u51fa\u529b\u306e\u5024\u304c\u3001\u4f55\u3092\u610f\u5473\u3059\u308b\u304b\u3092\u8868\u3059\u305f\u3081\u306e\u3082\u306e\u3002\n\u578b\u304c\u3001\u5024\u306e\u8868\u73fe\u306e\u5e45\uff08\u6700\u5927\u5024\u306f\u4f55\u304b\u3001\u5b9f\u6570\u304b\u5c0f\u6570\u304b\u3001\u30b9\u30ab\u30e9\u30fc\u304b\u30d9\u30af\u30c8\u30eb\u304b\u3001\u2026\uff09\u3092\u8868\u3059\u306e\u306b\u5bfe\u3057\u3066\u3001\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u306f\u3001\u5024\u306e\u7528\u9014\uff08\u4f4d\u7f6e\u304b\u3001\u6cd5\u7dda\u304b\u3001\u2026\uff09\u3092\u8868\u3059\u30a4\u30e1\u30fc\u30b8\u3002\n\n\u5c0f\u3055\u306avertex\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u4f8b\nfloat4 vert(float4 v : POSITION) : SV_POSITION {\n    return mul(UNITY_MATRIX_MVP, v);\n}\n\n\n\u2191\u306e\u4f8b\u3067\u306f\u3001POSITION\u3001SV_POSITION\u304c\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3067\u3042\u308b\u3002\u305d\u308c\u305e\u308c\u3001\u578b\u306efloat4\u3068\u306f\u5225\u306b\u4ed8\u52a0\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3002\n\nvertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\nvertex\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5165\u529b\uff08\u95a2\u6570\u306e\u5f15\u6570\uff09\u306f\u5168\u3066\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u6301\u305f\u306d\u3070\u306a\u3089\u306a\u3044\u3002\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u4e00\u89a7\n\n\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\n\u610f\u5473\n\u4e3b\u306a\u578b\n\n\n\n\nPOSITION\n\u9802\u70b9\u306e\u4f4d\u7f6e\nfloat3, float4\n\n\nNORMAL\n\u9802\u70b9\u306e\u6cd5\u7dda\nfloat3\n\n\nTEXCOORD0\n1\u756a\u76ee\u306eUV\u5ea7\u6a19\nfloat2, float3, float4\n\n\nTEXCOORD1, TEXCOORD2, TEXCOORD3\n2,3,4\u756a\u76ee\u306eUV\u5ea7\u6a19\nTEXCOORD0\u3068\u540c\u3058\n\n\nTANGENT\n\u63a5\u7dda\nfloat4\n\n\nCOLOR\n\u9802\u70b9\u306e\u8272\nfloat4\n\n\n\n\u30e1\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u306e\u6b21\u5143\u304c\u6c42\u3081\u3066\u308b\u3082\u306e\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\u30010\u57cb\u3081\u3055\u308c\u308b\u3002\u305f\u3060\u3057\u3001w\u306b\u306f1\u304c\u5165\u308b\u3002\n\u30c6\u30af\u30b9\u30c1\u30e3\u5ea7\u6a19\u306f\u57fa\u672c2\u6b21\u5143\u306a\u306e\u3067\u3001float4\u304c\u6307\u5b9a\u3055\u308c\u308b\u3068(x,y,0,1)\u3068\u306a\u308b\u3002\nTANGENT\u306ew\u5024\u306fbitangent(\u5f93\u63a5\u7dda)\u306e\u65b9\u5411\u3092\u793a\u3059\u306e\u306b\u7528\u3044\u3089\u308c\u308b\u3002\n\u30d0\u30f3\u30d7\u30de\u30c3\u30d4\u30f3\u30b0\u3068\u304b\u3057\u305f\u3044\u3068\u304d\u306b\u306f\u3053\u306eTANGENT\u304c\u5f79\u306b\u7acb\u3064\u306f\u305a\uff08cf. Vertex and Fragment Shader Examples\u306e\"Environment Reflection with a Normal Map\"\uff09\u3002\n\n\u5f15\u6570\u306e\u6307\u5b9a\u306e\u4ed5\u65b9\n\u5927\u304d\u304f\u5206\u3051\u3066\u3001\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u5f15\u6570\u306b\u76f4\u63a5\u8a18\u8ff0\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3068\u3001\u5f15\u6570\u306e\u69cb\u9020\u4f53\u3092\u5b9a\u7fa9\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308b\u3002\n\n\u76f4\u63a5\u8a18\u8ff0\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u5f15\u6570\u306b\u76f4\u63a5\u8a18\u8ff0\u3057\u3066vertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\nfloat4 vert(float4 vertex : POSITION, float4 texcoord : TEXCOORD) : SV_POSITION {\n    return mul(UNITY_MATRIX_MVP, vertex);\n}\n\n\n\n\u69cb\u9020\u4f53\u3092\u5b9a\u7fa9\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\n\u69cb\u9020\u4f53\u3092\u5b9a\u7fa9\u3057\u3066vertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\nstruct appdata {\n    float4 vertex : POSITION;\n    float4 texcoord : TEXCOORD0;\n};\nfloat4 vert(appdata v) : SV_POSITION {\n    return mul(UNITY_MATRIX_MVP, v.vertex);\n}\n\n\n\u3088\u304f\u4f7f\u308f\u308c\u305d\u3046\u306a\u69cb\u9020\u4f53\u306fUnityCG.cginc\u3067\u4e88\u3081\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3046\u3053\u3068\u3082\u53ef\u80fd\u3002\n\nUnityCG.cginc\nstruct appdata_base {\n    float4 vertex : POSITION;\n    float3 normal : NORMAL;\n    float4 texcoord : TEXCOORD0;\n};\n\nstruct appdata_tan {\n    float4 vertex : POSITION;\n    float4 tangent : TANGENT;\n    float3 normal : NORMAL;\n    float4 texcoord : TEXCOORD0;\n};\n\nstruct appdata_full {\n    float4 vertex : POSITION;\n    float4 tangent : TANGENT;\n    float3 normal : NORMAL;\n    float4 texcoord : TEXCOORD0;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord2 : TEXCOORD2;\n    float4 texcoord3 : TEXCOORD3;\n#if defined(SHADER_API_XBOX360)\n    half4 texcoord4 : TEXCOORD4;\n    half4 texcoord5 : TEXCOORD5;\n#endif\n    fixed4 color : COLOR;\n};\n\nstruct appdata_img\n{\n    float4 vertex : POSITION;\n    half2 texcoord : TEXCOORD0;\n};\n\n\n\n\u5024\u306e\u5b9f\u969b\u306e\u4f7f\u3044\u65b9\n\n\u5024\u306e\u5b9f\u969b\u306e\u4f7f\u3044\u65b9\nfloat4 vert(appdata_base v) : SV_POSITION {\n    float4 clipPos = mul(UNITY_MATRIX_MVP, v.vertex); // \u9802\u70b9\u306e\u30af\u30ea\u30c3\u30d7\u5ea7\u6a19\n    float2 wNormal = normalize(UnityObjectToWorldNormal(v.normal)); // world\u7a7a\u9593\u306b\u304a\u3051\u308b\u6b63\u898f\u5316\u3055\u308c\u305f\u6cd5\u7dda\n\n    // \u7565\n}\n\n\n\u5165\u529b\u306f\u3001\u30e1\u30c3\u30b7\u30e5\u3067\u306e\u5024\u306a\u306e\u3067\u30af\u30ea\u30c3\u30d7\u7a7a\u9593\u3067\u306e\u5ea7\u6a19\u3084\u3001world\u7a7a\u9593\u3067\u306e\u6cd5\u7dda\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u306f\u5404\u7a2e\u5909\u63db\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3061\u306a\u307f\u306b\u3001normal\u3068\u304btangent\u3068\u304b\u306f\u6b63\u898f\u5316\u3057\u3066\u4f7f\u3046\u306e\u304c\u7121\u96e3\u305d\u3046\u3002\n\nfragment\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u51fa\u529b\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u4e00\u89a7\n\n\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\n\u610f\u5473\n\u4e3b\u306a\u578b\n\n\n\n\nSV_TARGET\n\u30d4\u30af\u30bb\u30eb\u306e\u8272\nfixed4\n\n\nSV_TARGET1,SV_TARGET2,...\n\u4ed6\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u5bfe\u8c61\u306b\u5bfe\u3059\u308b\u8272\nfixed4\n\n\nSV_DEPTH\n\u30d4\u30af\u30bb\u30eb\u306e\u6df1\u5ea6\nfloat\n\n\n\nSV_TARGET1,...\u306f\u3001\u4e00\u5ea6\u306b\u8907\u6570\u306e\u5bfe\u8c61(render target)\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u3068\u304d\u306b\u4f7f\u3046\uff08\u30de\u30eb\u30c1\u30bf\u30fc\u30b2\u30c3\u30c8\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3068\u547c\u3070\u308c\u308b\u6280\u8853\uff09\u3002\n\u6df1\u5ea6\u306f\u57fa\u672c\u7684\u306b\u901a\u5e38\u306e\u30e9\u30b9\u30bf\u30e9\u30a4\u30ba\u51e6\u7406\u3067\u52dd\u624b\u306b\u6c7a\u307e\u308b\u306e\u3067\u3001SV_DEPTH\u3092\u4f7f\u3063\u3066\u305d\u308c\u3092\u4e0a\u66f8\u304d\u3059\u308b\u306e\u306f\u3042\u307e\u308a\u3084\u3089\u306a\u3044\u307b\u3046\u304c\u826f\u3044\u3089\u3057\u3044\u3002\n\nvertex\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u51fa\u529b\u3001fragment\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u4e00\u89a7\n\n\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\n\u610f\u5473\n\u4e3b\u306a\u578b\n\n\n\n\nSV_POSITION\n\u9802\u70b9\u306e\u30af\u30ea\u30c3\u30d7\u5ea7\u6a19\uff08\u5fc5\u9808\uff09\nfloat4\uff08\u5fc5\u305a\uff09\n\n\nTEXCOORD0,TEXCOORD1,...\n\u30c6\u30af\u30b9\u30c1\u30e3\u5ea7\u6a19\u3084\u4f4d\u7f6e\u3084\u65b9\u5411\u306a\u3069\nfloat2, float3, half3\n\n\nCOLOR0,COLOR1,...\n\u8272\u306a\u3069\nfixed4\n\n\n\nSV_POSITION\u306fGPU\u304c\u30e9\u30b9\u30bf\u30e9\u30a4\u30ba\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306b\u5fc5\u305a\u5fc5\u8981\u3068\u306a\u308b\u3002\n\u4ed6\u306e\u5024\u306f\u3001vertex\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u3088\u3063\u3066\u51fa\u529b\u3055\u308c\u305f\u5024\u304c\u3001\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u4e09\u89d2\u5f62\u9762\u306b\u5fdc\u3058\u3066\u88dc\u9593\u3055\u308c\u308b\u3053\u3068\u306b\u3088\u308a\u3001fragment\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u6e21\u3055\u308c\u308b\u3002\nTEXCOORD0\u3084COLOR0\u306a\u3069\u306b\u306f\u3001\u53e4\u3044GPU\u3067\u306f\u5909\u6570\u306e\u4e2d\u8eab\u306e\u89e3\u91c8\u306b\u9055\u3044\u304c\u5408\u3063\u305f\u304c\u3001\u4eca\u306f\u7279\u306b\u95a2\u4fc2\u306a\u3044\u3089\u3057\u3044\u3002\n\n\u88dc\u9593\u3055\u308c\u308b\u5909\u6570\u306e\u6570\u306e\u9650\u754c\n\u88dc\u9593\u3055\u308c\u308b\u5909\u6570\u306e\u6570\u306e\u9650\u754c\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068GPU\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u308b\u3002\n\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n8\u500b\u307e\u3067 : OpenGL ES 2.0 (iOS/Android), Direct3D 11 9.x level (Windows Phone) and Direct3 9 shader model 2.0 (old PCs). \n10\u500b\u307e\u3067 : Direct3D 9 shader model 3.0 (#pragma target 3.0).\n16\u500b\u307e\u3067 : OpenGL ES 3.0 (iOS/Android), Metal (iOS).\n32\u500b\u307e\u3067 : Direct3D 10 shader model 4.0 (#pragma target 4.0).\n\n\u53d6\u308a\u6562\u3048\u305a9\u500b\u4ee5\u4e0a\u4f7f\u3044\u305f\u304f\u306a\u3063\u305f\u3089\u6c17\u3092\u3064\u3051\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u3002\n\n\u305d\u306e\u4ed6\nShader semantics\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u305d\u306e\u4ed6\u306e\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3002\n\n\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\n\u610f\u5473\n\u4e3b\u306a\u578b\n\u5229\u7528\u7b87\u6240\n\u5229\u7528\u6761\u4ef6\n\n\n\n\nVPOS\n\u30b9\u30af\u30ea\u30fc\u30f3\u7a7a\u9593\u306b\u304a\u3051\u308b\u5ea7\u6a19\nUNITY_VPOS_TYPE(\u57fa\u672cfloat4)\nfragment\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\nshader model 3.0\n\n\nVFACE\n\u9762\u304c\u30ab\u30e1\u30e9\u3092\u5411\u3044\u3066\u3044\u308b\u304b\u3069\u3046\u304b\uff08\u5411\u3044\u3066\u3044\u305f\u3089\u6b63\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u8ca0\uff09\nfixed\nfragment\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\nshader model 3.0\n\n\nSV_VertexID\n\u9802\u70b9\u756a\u53f7\nuint\nvertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\nDX10(shader model 4.0), GLCore / OpenGL ES 3\n\n\n\nVPOS, VFACE\u306f#pragma target 3.0\u3001SV_VertexID\u306f#pragma target es3.0\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u3001\u4e3b\u306b\u4ee5\u4e0b\u306eUnity\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u81ea\u5206\u306a\u308a\u306b\u89e3\u91c8\u3057\u3066\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002\n\n- [Shader semantics](http://docs.unity3d.com/530/Documentation/Manual/SL-ShaderSemantics.html)\n- [Providing vertex data to vertex programs](http://docs.unity3d.com/530/Documentation/Manual/SL-VertexProgramInputs.html)\n\nUnity\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f5.3\u7cfb\u3067\u3059\u3002\nvertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3068fragment\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5165\u51fa\u529b\u306b\u95a2\u308f\u308b\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u306b\u9650\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306fShaderLab\u306e\u8a18\u8ff0\u3042\u305f\u308a\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u6982\u8981\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3068\u306f\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5165\u529b\u3084\u51fa\u529b\u306e\u5024\u304c\u3001\u4f55\u3092\u610f\u5473\u3059\u308b\u304b\u3092\u8868\u3059\u305f\u3081\u306e\u3082\u306e\u3002\n\u578b\u304c\u3001\u5024\u306e\u8868\u73fe\u306e\u5e45\uff08\u6700\u5927\u5024\u306f\u4f55\u304b\u3001\u5b9f\u6570\u304b\u5c0f\u6570\u304b\u3001\u30b9\u30ab\u30e9\u30fc\u304b\u30d9\u30af\u30c8\u30eb\u304b\u3001\u2026\uff09\u3092\u8868\u3059\u306e\u306b\u5bfe\u3057\u3066\u3001\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u306f\u3001\u5024\u306e\u7528\u9014\uff08\u4f4d\u7f6e\u304b\u3001\u6cd5\u7dda\u304b\u3001\u2026\uff09\u3092\u8868\u3059\u30a4\u30e1\u30fc\u30b8\u3002\n\n```c:\u5c0f\u3055\u306avertex\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u4f8b\nfloat4 vert(float4 v : POSITION) : SV_POSITION {\n    return mul(UNITY_MATRIX_MVP, v);\n}\n```\n\u2191\u306e\u4f8b\u3067\u306f\u3001`POSITION`\u3001`SV_POSITION`\u304c\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3067\u3042\u308b\u3002\u305d\u308c\u305e\u308c\u3001\u578b\u306e`float4`\u3068\u306f\u5225\u306b\u4ed8\u52a0\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3002\n\n\n\n# vertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\nvertex\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5165\u529b\uff08\u95a2\u6570\u306e\u5f15\u6570\uff09\u306f\u5168\u3066\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u6301\u305f\u306d\u3070\u306a\u3089\u306a\u3044\u3002\n\n## \u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u4e00\u89a7\n\n| \u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9 | \u610f\u5473 | \u4e3b\u306a\u578b |\n|:-:|:-:|:-:|\n|POSITION|  \u9802\u70b9\u306e\u4f4d\u7f6e | float3, float4  |\n|NORMAL   |\u9802\u70b9\u306e\u6cd5\u7dda   |float3   |\n|TEXCOORD0   |1\u756a\u76ee\u306eUV\u5ea7\u6a19   |float2, float3, float4   |\n|TEXCOORD1, TEXCOORD2, TEXCOORD3   |2,3,4\u756a\u76ee\u306eUV\u5ea7\u6a19   |TEXCOORD0\u3068\u540c\u3058   |\n|TANGENT   |\u63a5\u7dda   |float4   |\n|COLOR   |\u9802\u70b9\u306e\u8272   |float4   |\n\u30e1\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u306e\u6b21\u5143\u304c\u6c42\u3081\u3066\u308b\u3082\u306e\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\u30010\u57cb\u3081\u3055\u308c\u308b\u3002\u305f\u3060\u3057\u3001w\u306b\u306f1\u304c\u5165\u308b\u3002\n\u30c6\u30af\u30b9\u30c1\u30e3\u5ea7\u6a19\u306f\u57fa\u672c2\u6b21\u5143\u306a\u306e\u3067\u3001float4\u304c\u6307\u5b9a\u3055\u308c\u308b\u3068(x,y,0,1)\u3068\u306a\u308b\u3002\nTANGENT\u306ew\u5024\u306fbitangent(\u5f93\u63a5\u7dda)\u306e\u65b9\u5411\u3092\u793a\u3059\u306e\u306b\u7528\u3044\u3089\u308c\u308b\u3002\n\u30d0\u30f3\u30d7\u30de\u30c3\u30d4\u30f3\u30b0\u3068\u304b\u3057\u305f\u3044\u3068\u304d\u306b\u306f\u3053\u306eTANGENT\u304c\u5f79\u306b\u7acb\u3064\u306f\u305a\uff08cf. [Vertex and Fragment Shader Examples](http://docs.unity3d.com/530/Documentation/Manual/SL-VertexFragmentShaderExamples.html)\u306e\"Environment Reflection with a Normal Map\"\uff09\u3002\n\n## \u5f15\u6570\u306e\u6307\u5b9a\u306e\u4ed5\u65b9\n\u5927\u304d\u304f\u5206\u3051\u3066\u3001\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u5f15\u6570\u306b\u76f4\u63a5\u8a18\u8ff0\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3068\u3001\u5f15\u6570\u306e\u69cb\u9020\u4f53\u3092\u5b9a\u7fa9\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308b\u3002\n### \u76f4\u63a5\u8a18\u8ff0\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n```c:\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u5f15\u6570\u306b\u76f4\u63a5\u8a18\u8ff0\u3057\u3066vertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\nfloat4 vert(float4 vertex : POSITION, float4 texcoord : TEXCOORD) : SV_POSITION {\n    return mul(UNITY_MATRIX_MVP, vertex);\n}\n```\n\n### \u69cb\u9020\u4f53\u3092\u5b9a\u7fa9\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n```c:\u69cb\u9020\u4f53\u3092\u5b9a\u7fa9\u3057\u3066vertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\nstruct appdata {\n    float4 vertex : POSITION;\n    float4 texcoord : TEXCOORD0;\n};\nfloat4 vert(appdata v) : SV_POSITION {\n    return mul(UNITY_MATRIX_MVP, v.vertex);\n}\n```\n\n\u3088\u304f\u4f7f\u308f\u308c\u305d\u3046\u306a\u69cb\u9020\u4f53\u306fUnityCG.cginc\u3067\u4e88\u3081\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3046\u3053\u3068\u3082\u53ef\u80fd\u3002\n\n```c:UnityCG.cginc\nstruct appdata_base {\n\tfloat4 vertex : POSITION;\n\tfloat3 normal : NORMAL;\n\tfloat4 texcoord : TEXCOORD0;\n};\n\nstruct appdata_tan {\n\tfloat4 vertex : POSITION;\n\tfloat4 tangent : TANGENT;\n\tfloat3 normal : NORMAL;\n\tfloat4 texcoord : TEXCOORD0;\n};\n\nstruct appdata_full {\n\tfloat4 vertex : POSITION;\n\tfloat4 tangent : TANGENT;\n\tfloat3 normal : NORMAL;\n\tfloat4 texcoord : TEXCOORD0;\n\tfloat4 texcoord1 : TEXCOORD1;\n\tfloat4 texcoord2 : TEXCOORD2;\n\tfloat4 texcoord3 : TEXCOORD3;\n#if defined(SHADER_API_XBOX360)\n\thalf4 texcoord4 : TEXCOORD4;\n\thalf4 texcoord5 : TEXCOORD5;\n#endif\n\tfixed4 color : COLOR;\n};\n\nstruct appdata_img\n{\n\tfloat4 vertex : POSITION;\n\thalf2 texcoord : TEXCOORD0;\n};\n```\n\n## \u5024\u306e\u5b9f\u969b\u306e\u4f7f\u3044\u65b9\n```c:\u5024\u306e\u5b9f\u969b\u306e\u4f7f\u3044\u65b9\nfloat4 vert(appdata_base v) : SV_POSITION {\n    float4 clipPos = mul(UNITY_MATRIX_MVP, v.vertex); // \u9802\u70b9\u306e\u30af\u30ea\u30c3\u30d7\u5ea7\u6a19\n    float2 wNormal = normalize(UnityObjectToWorldNormal(v.normal)); // world\u7a7a\u9593\u306b\u304a\u3051\u308b\u6b63\u898f\u5316\u3055\u308c\u305f\u6cd5\u7dda\n\n    // \u7565\n}\n```\n\u5165\u529b\u306f\u3001\u30e1\u30c3\u30b7\u30e5\u3067\u306e\u5024\u306a\u306e\u3067\u30af\u30ea\u30c3\u30d7\u7a7a\u9593\u3067\u306e\u5ea7\u6a19\u3084\u3001world\u7a7a\u9593\u3067\u306e\u6cd5\u7dda\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u306f\u5404\u7a2e\u5909\u63db\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3061\u306a\u307f\u306b\u3001normal\u3068\u304btangent\u3068\u304b\u306f\u6b63\u898f\u5316\u3057\u3066\u4f7f\u3046\u306e\u304c\u7121\u96e3\u305d\u3046\u3002\n\n\n# fragment\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u51fa\u529b\n## \u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u4e00\u89a7\n| \u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9 | \u610f\u5473 | \u4e3b\u306a\u578b |\n|:-:|:-:|:-:|\n|SV_TARGET| \u30d4\u30af\u30bb\u30eb\u306e\u8272 | fixed4 |\n|SV_TARGET1,SV_TARGET2,... | \u4ed6\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u5bfe\u8c61\u306b\u5bfe\u3059\u308b\u8272   |fixed4 |\n|SV_DEPTH | \u30d4\u30af\u30bb\u30eb\u306e\u6df1\u5ea6 | float |\nSV_TARGET1,...\u306f\u3001\u4e00\u5ea6\u306b\u8907\u6570\u306e\u5bfe\u8c61(render target)\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u3068\u304d\u306b\u4f7f\u3046\uff08\u30de\u30eb\u30c1\u30bf\u30fc\u30b2\u30c3\u30c8\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3068\u547c\u3070\u308c\u308b\u6280\u8853\uff09\u3002\n\u6df1\u5ea6\u306f\u57fa\u672c\u7684\u306b\u901a\u5e38\u306e\u30e9\u30b9\u30bf\u30e9\u30a4\u30ba\u51e6\u7406\u3067\u52dd\u624b\u306b\u6c7a\u307e\u308b\u306e\u3067\u3001SV_DEPTH\u3092\u4f7f\u3063\u3066\u305d\u308c\u3092\u4e0a\u66f8\u304d\u3059\u308b\u306e\u306f\u3042\u307e\u308a\u3084\u3089\u306a\u3044\u307b\u3046\u304c\u826f\u3044\u3089\u3057\u3044\u3002\n\n# vertex\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u51fa\u529b\u3001fragment\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b\n## \u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u4e00\u89a7\n| \u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9 | \u610f\u5473 | \u4e3b\u306a\u578b |\n|:-:|:-:|:-:|\n|SV_POSITION| \u9802\u70b9\u306e\u30af\u30ea\u30c3\u30d7\u5ea7\u6a19\uff08\u5fc5\u9808\uff09 | float4\uff08\u5fc5\u305a\uff09 |\n|TEXCOORD0,TEXCOORD1,... | \u30c6\u30af\u30b9\u30c1\u30e3\u5ea7\u6a19\u3084\u4f4d\u7f6e\u3084\u65b9\u5411\u306a\u3069   | float2, float3, half3  |\n|COLOR0,COLOR1,... | \u8272\u306a\u3069 | fixed4 |\n\nSV_POSITION\u306fGPU\u304c\u30e9\u30b9\u30bf\u30e9\u30a4\u30ba\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306b\u5fc5\u305a\u5fc5\u8981\u3068\u306a\u308b\u3002\n\u4ed6\u306e\u5024\u306f\u3001vertex\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u3088\u3063\u3066\u51fa\u529b\u3055\u308c\u305f\u5024\u304c\u3001\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u4e09\u89d2\u5f62\u9762\u306b\u5fdc\u3058\u3066\u88dc\u9593\u3055\u308c\u308b\u3053\u3068\u306b\u3088\u308a\u3001fragment\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u6e21\u3055\u308c\u308b\u3002\nTEXCOORD0\u3084COLOR0\u306a\u3069\u306b\u306f\u3001\u53e4\u3044GPU\u3067\u306f\u5909\u6570\u306e\u4e2d\u8eab\u306e\u89e3\u91c8\u306b\u9055\u3044\u304c\u5408\u3063\u305f\u304c\u3001\u4eca\u306f\u7279\u306b\u95a2\u4fc2\u306a\u3044\u3089\u3057\u3044\u3002\n\n## \u88dc\u9593\u3055\u308c\u308b\u5909\u6570\u306e\u6570\u306e\u9650\u754c\n\u88dc\u9593\u3055\u308c\u308b\u5909\u6570\u306e\u6570\u306e\u9650\u754c\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068GPU\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u308b\u3002\n\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n- 8\u500b\u307e\u3067 : OpenGL ES 2.0 (iOS/Android), Direct3D 11 9.x level (Windows Phone) and Direct3 9 shader model 2.0 (old PCs). \n- 10\u500b\u307e\u3067 : Direct3D 9 shader model 3.0 (#pragma target 3.0).\n- 16\u500b\u307e\u3067 : OpenGL ES 3.0 (iOS/Android), Metal (iOS).\n- 32\u500b\u307e\u3067 : Direct3D 10 shader model 4.0 (#pragma target 4.0).\n\n\u53d6\u308a\u6562\u3048\u305a9\u500b\u4ee5\u4e0a\u4f7f\u3044\u305f\u304f\u306a\u3063\u305f\u3089\u6c17\u3092\u3064\u3051\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u3002\n\n# \u305d\u306e\u4ed6\n[Shader semantics](http://docs.unity3d.com/530/Documentation/Manual/SL-ShaderSemantics.html)\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u305d\u306e\u4ed6\u306e\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3002\n\n| \u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9 | \u610f\u5473 | \u4e3b\u306a\u578b | \u5229\u7528\u7b87\u6240| \u5229\u7528\u6761\u4ef6|\n|:-:|:-:|:-:|:-:|:-:|\n|VPOS| \u30b9\u30af\u30ea\u30fc\u30f3\u7a7a\u9593\u306b\u304a\u3051\u308b\u5ea7\u6a19 | UNITY_VPOS_TYPE(\u57fa\u672cfloat4) | fragment\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b | shader model 3.0 | \n| VFACE | \u9762\u304c\u30ab\u30e1\u30e9\u3092\u5411\u3044\u3066\u3044\u308b\u304b\u3069\u3046\u304b\uff08\u5411\u3044\u3066\u3044\u305f\u3089\u6b63\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u8ca0\uff09   | fixed | fragment\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b | shader model 3.0|\n|SV_VertexID | \u9802\u70b9\u756a\u53f7 | uint | vertex\u30b7\u30a7\u30fc\u30c0\u30fc\u3078\u306e\u5165\u529b| DX10(shader model 4.0), GLCore / OpenGL ES 3 |\n\nVPOS, VFACE\u306f`#pragma target 3.0 `\u3001SV_VertexID\u306f`#pragma target es3.0`\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n", "tags": ["Unity", "Shader"]}