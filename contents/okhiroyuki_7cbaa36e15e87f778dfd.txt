{"context": " More than 1 year has passed since last update.\n\n\u3084\u3063\u305f\u3053\u3068\nCAPTURING SPHERICAL SCENES FROM GOOGLE STREETVIEW\u3067\u3084\u3063\u3066\u3044\u308b\u4f5c\u696d\u3092\u3001python\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u4e00\u767a\u751f\u6210\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\n\u6ce8\u610f\nGoogle StreetView\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u3057\u3063\u304b\u308a\u3068\u8aad\u3093\u3060\u4e0a\u3067\u3001\u672c\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u74b0\u5883\npython 2.7.10\n\n\u30b9\u30af\u30ea\u30d7\u30c8\n\nappend.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nimport os\nimport shutil\nimport re\nimport sys\n\nclass Panorama:\n\n  def __init__(self, url):\n    self.path = \"./tmp/\"\n    self.panoid = self.parseID(url)\n\n    #panorama size = 12*25\n    self.x = 12\n    self.y = 25\n\n  def parseID(self,url):\n    dna = \"!1s\"\n    m = url.find(dna)\n    if m != -1:\n      return url[m+3:m+25]\n    else:\n      return \"\"\n\n  def mkdirTmp(self):\n    if os.path.exists(self.path):\n      pass\n    else:\n      os.mkdir(self.path)\n\n  def clean(self):\n    shutil.rmtree(self.path)\n\n  def downloadImage(self):\n    cmd = 'curl http://cbk0.google.com/cbk?output=tile\\&panoid=' + self.panoid + '\\&zoom=5\\&x=[0-25]\\&y=[0-12] -o ' + self.path + '\"tile_#1-#2.jpg\"'\n    os.system(cmd)\n\n  def appendImage(self):\n\n    #\u6a2a\u306b\u7e4b\u3052\u308b\n    for x in range(0, self.x+1):\n      cmd = \"convert +append \"\n      for y in range(0, self.y+1):\n        # \u5165\u529b\u30d5\u30a1\u30a4\u30eb\n        inFile = self.path + \"tile_%d-%d.jpg\"% (y,x)\n        # \u30b3\u30de\u30f3\u30c9\u6587\u5b57\u5217\u306b\u9023\u7d50\n        cmd += inFile + \" \"\n\n      # \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a2d\u5b9a\n      cmd += self.path + \"%d.jpg\"%x\n      #print cmd\n\n      # \u5b9f\u884c\n      os.system(cmd)\n\n    # \u7e26\u306b\u7e4b\u3052\u308b\n    cmd = \"convert -append \"\n    for x in range(0,self.x):\n      cmd += self.path + \"%d.jpg\"%x + \" \"\n\n    cmd += \"append.jpg\"\n    #print cmd\n\n    os.system(cmd)\n\n\nif __name__ == \"__main__\":\n  url = \"https://www.google.co.jp/maps/@34.7020532,135.5020237,3a,75y,285h,99t/data=!3m7!1e1!3m5!1sBLX3E8R5JxUJnuHlPGg5kw!2e0!6s%2F%2Fgeo3.ggpht.com%2Fcbk%3Fpanoid%3DBLX3E8R5JxUJnuHlPGg5kw%26output%3Dthumbnail%26cb_client%3Dmaps_sv.tactile.gps%26thumb%3D2%26w%3D203%26h%3D100%26yaw%3D285.21%26pitch%3D9.21!7i13312!8i6656?hl=ja&hl=ja\"\n\n  pano = Panorama(url)\n  if  len(pano.panoid) > 0:\n    pano.mkdirTmp()\n    pano.downloadImage()\n    pano.appendImage()\n    pano.clean()\n\n\n# \u3084\u3063\u305f\u3053\u3068\n[CAPTURING SPHERICAL SCENES FROM GOOGLE STREETVIEW](http://www.newtonscannon.com/2014/01/26/capturing-spherical-scenes-from-google-streetview/)\u3067\u3084\u3063\u3066\u3044\u308b\u4f5c\u696d\u3092\u3001python\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u4e00\u767a\u751f\u6210\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\n# \u6ce8\u610f\nGoogle StreetView\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u3057\u3063\u304b\u308a\u3068\u8aad\u3093\u3060\u4e0a\u3067\u3001\u672c\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u74b0\u5883\npython 2.7.10\n\n# \u30b9\u30af\u30ea\u30d7\u30c8\n\n```append.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nimport os\nimport shutil\nimport re\nimport sys\n\nclass Panorama:\n\n  def __init__(self, url):\n    self.path = \"./tmp/\"\n    self.panoid = self.parseID(url)\n\n    #panorama size = 12*25\n    self.x = 12\n    self.y = 25\n\n  def parseID(self,url):\n    dna = \"!1s\"\n    m = url.find(dna)\n    if m != -1:\n      return url[m+3:m+25]\n    else:\n      return \"\"\n\n  def mkdirTmp(self):\n    if os.path.exists(self.path):\n      pass\n    else:\n      os.mkdir(self.path)\n\n  def clean(self):\n    shutil.rmtree(self.path)\n\n  def downloadImage(self):\n    cmd = 'curl http://cbk0.google.com/cbk?output=tile\\&panoid=' + self.panoid + '\\&zoom=5\\&x=[0-25]\\&y=[0-12] -o ' + self.path + '\"tile_#1-#2.jpg\"'\n    os.system(cmd)\n\n  def appendImage(self):\n\n    #\u6a2a\u306b\u7e4b\u3052\u308b\n    for x in range(0, self.x+1):\n      cmd = \"convert +append \"\n      for y in range(0, self.y+1):\n        # \u5165\u529b\u30d5\u30a1\u30a4\u30eb\n        inFile = self.path + \"tile_%d-%d.jpg\"% (y,x)\n        # \u30b3\u30de\u30f3\u30c9\u6587\u5b57\u5217\u306b\u9023\u7d50\n        cmd += inFile + \" \"\n\n      # \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a2d\u5b9a\n      cmd += self.path + \"%d.jpg\"%x\n      #print cmd\n\n      # \u5b9f\u884c\n      os.system(cmd)\n\n    # \u7e26\u306b\u7e4b\u3052\u308b\n    cmd = \"convert -append \"\n    for x in range(0,self.x):\n      cmd += self.path + \"%d.jpg\"%x + \" \"\n\n    cmd += \"append.jpg\"\n    #print cmd\n\n    os.system(cmd)\n\n\nif __name__ == \"__main__\":\n  url = \"https://www.google.co.jp/maps/@34.7020532,135.5020237,3a,75y,285h,99t/data=!3m7!1e1!3m5!1sBLX3E8R5JxUJnuHlPGg5kw!2e0!6s%2F%2Fgeo3.ggpht.com%2Fcbk%3Fpanoid%3DBLX3E8R5JxUJnuHlPGg5kw%26output%3Dthumbnail%26cb_client%3Dmaps_sv.tactile.gps%26thumb%3D2%26w%3D203%26h%3D100%26yaw%3D285.21%26pitch%3D9.21!7i13312!8i6656?hl=ja&hl=ja\"\n\n  pano = Panorama(url)\n  if  len(pano.panoid) > 0:\n    pano.mkdirTmp()\n    pano.downloadImage()\n    pano.appendImage()\n    pano.clean()\n```\n", "tags": ["Python", "google", "VR"]}