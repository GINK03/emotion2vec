{"context": "pandas\u3092\u4f7f\u3063\u3066\u5927\u91cf\u30c7\u30fc\u30bf\u51e6\u7406\u3059\u308b\u5834\u5408\u3001\n\u6570GB\u306e\u51e6\u7406\u306b\u6570\u5341\u5206\u301c\u6570\u6642\u9593\u3001\u4e0b\u624b\u3057\u305f\u3089\u6570\u65e5\u304b\u304b\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u5f80\u3005\u306b\u3057\u3066\u3042\u308b\n\u51e6\u7406\u304c\u9045\u3044\u3068\u9032\u3080\u4f5c\u696d\u3082\u9032\u307e\u306a\u304f\u306a\u308b\u306e\u3067\n\u7c21\u5358\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4fee\u6b63\u3067\u9ad8\u901f\u5316\u51fa\u6765\u308b\u65b9\u6cd5\u3092\u30e1\u30e2\n\nDataFrame\u306esum\u3084mean\u306f\u6570\u5024\u30c7\u30fc\u30bf\u306e\u307f\u3067\u884c\u3046\n\n\n\nindex\nname\nweight\nheight\n\n\n\n\n0\nTanaka\n160.1\n60.1\n\n\n1\nSuzuki\n172.4\n75.0\n\n\n2\nSaitou\n155.8\n42.2\n\n\n...\n\n\n\n\n\n999998\nMorita\n167.9\n94.07\n\n\n999999\nSatou\n177.7\n80.3\n\n\n\n\u4f8b\u3048\u3070\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u304c\u3042\u308a\u3001\nweight\u3068height\u306e\u5e73\u5747\u5024\u3092\u6c42\u3081\u308b\u5834\u5408\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u51e6\u7406\u3092\u8a18\u8ff0\u3059\u308b\u3068\u601d\u308f\u308c\u308b\n\nBad\u30d1\u30bf\u30fc\u30f3\nimport pandas as pd\n\nsr_means = df.mean()\nmean_height = sr_means['height'] \nmean_weight = sr_means['weight']\n\n\n\u3057\u304b\u3057\u3001\u6587\u5b57\u5217\u3092\u542b\u3080\u5217 name \u306e\u305b\u3044\u3067\u4e0a\u8a18\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3001\u8a08\u7b97\u306b\u975e\u5e38\u306b\u6642\u9593\u304c\u304b\u304b\u308b\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u51e6\u7406\u304c\u6841\u9055\u3044\u306b\u9ad8\u901f\u306b\u306a\u308b\n\nGood\u30d1\u30bf\u30fc\u30f3\nimport pandas as pd\n\nsr_means = df[['height', 'weight']].mean()\nmean_height = sr_means['height'] \nmean_weight = sr_means['weight']\n\n\n\n\u8ffd\u8a18\uff1a\u66f8\u3044\u305f\u5f8c\u306b\u6c17\u306b\u306a\u3063\u3066\u8abf\u3079\u305f\u3089\u3001\u6570\u5024\u3060\u3051\u3067\u884c\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u5408\u3063\u305f\n\n\u8ffd\u8a18\uff1aGood\u30d1\u30bf\u30fc\u30f3\nimport pandas as pd\n\nsr_means = df.mean(numeric_only = True)\nmean_height = sr_means['height'] \nmean_weight = sr_means['weight']\n\n\n\u5b9f\u969b\u306b\u6642\u9593\u3092\u8a08\u3063\u3066\u307f\u308b\n\n\u5b9f\u6e2c\nimport pandas as pd\nimport numpy as np\n\nN = 100000\ndf_test = pd.DataFrame(\n    {\n        'name':['abc'] * N,\n        'weight': np.random.normal(60, 5, N),\n        'height': np.random.normal(160, 5, N)\n    }\n)\n\nprint(\"df_test.mean()\")\n%time df_test.mean()\n\nprint(\"df_test[['height', 'weight']].mean()\")\n%time df_test[['height', 'weight']].mean()\n\n\n\u4e0a\u8a18\u306e\u7d50\u679c\u304c\u4e0b\u8a18\u3002\n\u8a08\u7b97\u3059\u308b\u5217\u304c\u4e00\u3064\u6e1b\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u3092\u8003\u616e\u3057\u3066\u3082\u3001\u5f8c\u8005\u306e\u65b9\u304c4\u6841\u3050\u3089\u3044\u6841\u9055\u3044\u306b\u65e9\u3044\u3002\n\n\u7d50\u679c\ndf_test.mean()\nWall time: 3.06 s\n\ndf_test[['height', 'weight']].mean()\nWall time: 4 ms\n\n\n\n\u9ad8\u968e\u95a2\u6570(map)\u3092\u4f7f\u304a\u3046\n\u4f8b\u3048\u3070\u3001\u5217 weight \u3092\u6574\u6570\u306b\u4e38\u3081\u308b\u51e6\u7406\u3092\u884c\u3046\u3068\u304d round\u95a2\u6570 \u3092\u4f7f\u3044\u307e\u3059\u304c\npython\u3084\u4eca\u6642\u307d\u3044\u66f8\u304d\u65b9\u306b\u6163\u308c\u3066\u3044\u306a\u3044\u3068\u3001for\u6587\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3067\u66f8\u304d\u304c\u3061\n\u9ad8\u968e\u95a2\u6570 map \u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\uff08\u9ad8\u968e\u95a2\u6570\u304c\u4f55\u306a\u306e\u304b\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u8a18\u4e8b\u3067\u306f\u5272\u611b\uff09\n\nBad\u30d1\u30bf\u30fc\u30f3\n# \u8981\u7d20\u306b\u5bfe\u3057\u3066 round\u95a2\u6570 \u3092\u9069\u7528\u3059\u308b\nfor idx in range(len(df_test['weight'].index)):\n    df_test['weight'][idx] = round(df_test['weight'][idx])\n\n\nmap \u3092\u4f7f\u3063\u305f\u4e0b\u8a18\u306b\u66f8\u304d\u76f4\u3059\n\nGood\u30d1\u30bf\u30fc\u30f3\n# \u8981\u7d20\u306b\u5bfe\u3057\u3066 round\u95a2\u6570 \u3092\u9069\u7528\u3059\u308b\ndf_test['weight'] = df_test['weight'].map(round)\n\n\n\u4eca\u56de\u3082\u5b9f\u969b\u306b\u6642\u9593\u3092\u6e2c\u308b\u3002for\u6587\u304c\u9045\u3059\u304e\u308b\u306e\u3067\u30c7\u30fc\u30bf\u6570\u3092\u5148\u307b\u3069\u3088\u308a\u6e1b\u3089\u3059\n\n\u5b9f\u6e2c\ndef func(sr):\n    for idx in range(len(sr.index)):\n        sr[idx] = round(sr[idx])\n    return(sr)\n\n\nN = 1000\ndf_test = pd.DataFrame(\n    {\n        'name':['abc'] * N,\n        'weight': np.random.normal(60, 5, N),\n        'height': np.random.normal(160, 5, N)\n    }\n)\n\nprint(\"for\u306e\u5834\u5408\")\n%time df_test['weight'] = func(df_test['weight'])\nprint(\"map\u306e\u5834\u5408\")\n%time df_test['weight'] = df_test['weight'].map(round)\n\n\n\u305d\u306e\u7d50\u679c\u304c\u4e0b\u8a18\u3002\nmap\u306a\u3089\u5149\u306e\u901f\u3055\u3067\u51e6\u7406\u3067\u304d\u308b\u3053\u3068\u3092\u3001for\u6587\u3060\u3068\u3068\u3093\u3067\u3082\u306a\u304f\u9045\u304f\u306a\u308b\n\u305f\u3063\u305f100\u500b\u306e\u30c7\u30fc\u30bf\u3067\u3053\u308c\u306a\u306e\u3060\u304b\u3089\u3001\n100\u4e07\u301c1\u5104\u306e\u30c7\u30fc\u30bf\u6271\u3046\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u6050\u308d\u3057\u304f\u306a\u308b\n\n\u7d50\u679c\nfor\u306e\u5834\u5408\nWall time: 22.1 s\n\nmap\u306e\u5834\u5408\nWall time: 0 ns\n\n\n\u4e0a\u8a18\uff12\u3064\u306e\u51e6\u7406\u3092\u6539\u5584\u3059\u308b\u3060\u3051\u3067\u3001\n\u30c7\u30fc\u30bf\u51e6\u7406\uff11\u65e5\u304b\u304b\u3063\u3066\u3044\u305f\u3068\u3053\u308d\u3092\u3001\u6570\u5206\u3067\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u3001\n\u3069\u3093\u3069\u3093\u6539\u5584\u3057\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u306d\u3002\npandas\u3092\u4f7f\u3063\u3066\u5927\u91cf\u30c7\u30fc\u30bf\u51e6\u7406\u3059\u308b\u5834\u5408\u3001\n\u6570GB\u306e\u51e6\u7406\u306b\u6570\u5341\u5206\u301c\u6570\u6642\u9593\u3001\u4e0b\u624b\u3057\u305f\u3089\u6570\u65e5\u304b\u304b\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u5f80\u3005\u306b\u3057\u3066\u3042\u308b\n\u51e6\u7406\u304c\u9045\u3044\u3068\u9032\u3080\u4f5c\u696d\u3082\u9032\u307e\u306a\u304f\u306a\u308b\u306e\u3067\n\u7c21\u5358\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4fee\u6b63\u3067\u9ad8\u901f\u5316\u51fa\u6765\u308b\u65b9\u6cd5\u3092\u30e1\u30e2\n\n## DataFrame\u306esum\u3084mean\u306f\u6570\u5024\u30c7\u30fc\u30bf\u306e\u307f\u3067\u884c\u3046\n\n| index   | name    | weight | height |\n|:-------:|:-------:|:------:|:------:|\n| 0       | Tanaka  | 160.1  | 60.1   |\n| 1       | Suzuki  | 172.4  | 75.0   |\n| 2       | Saitou  | 155.8  | 42.2   |\n| ...     |         |        |        |\n| 999998  | Morita  | 167.9  | 94.07  |\n| 999999  | Satou   | 177.7  | 80.3   |\n\n\u4f8b\u3048\u3070\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u304c\u3042\u308a\u3001\nweight\u3068height\u306e\u5e73\u5747\u5024\u3092\u6c42\u3081\u308b\u5834\u5408\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u51e6\u7406\u3092\u8a18\u8ff0\u3059\u308b\u3068\u601d\u308f\u308c\u308b\n\n```python:Bad\u30d1\u30bf\u30fc\u30f3\nimport pandas as pd\n\nsr_means = df.mean()\nmean_height = sr_means['height'] \nmean_weight = sr_means['weight']\n```\n\n\u3057\u304b\u3057\u3001\u6587\u5b57\u5217\u3092\u542b\u3080\u5217 name \u306e\u305b\u3044\u3067\u4e0a\u8a18\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3001\u8a08\u7b97\u306b\u975e\u5e38\u306b\u6642\u9593\u304c\u304b\u304b\u308b\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u51e6\u7406\u304c\u6841\u9055\u3044\u306b\u9ad8\u901f\u306b\u306a\u308b\n\n```python:Good\u30d1\u30bf\u30fc\u30f3\nimport pandas as pd\n\nsr_means = df[['height', 'weight']].mean()\nmean_height = sr_means['height'] \nmean_weight = sr_means['weight']\n```\n\n#### \u8ffd\u8a18\uff1a\u66f8\u3044\u305f\u5f8c\u306b\u6c17\u306b\u306a\u3063\u3066\u8abf\u3079\u305f\u3089\u3001\u6570\u5024\u3060\u3051\u3067\u884c\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u5408\u3063\u305f\n\n```python:\u8ffd\u8a18\uff1aGood\u30d1\u30bf\u30fc\u30f3\nimport pandas as pd\n\nsr_means = df.mean(numeric_only = True)\nmean_height = sr_means['height'] \nmean_weight = sr_means['weight']\n```\n\n\u5b9f\u969b\u306b\u6642\u9593\u3092\u8a08\u3063\u3066\u307f\u308b\n\n```python:\u5b9f\u6e2c\nimport pandas as pd\nimport numpy as np\n\nN = 100000\ndf_test = pd.DataFrame(\n    {\n        'name':['abc'] * N,\n        'weight': np.random.normal(60, 5, N),\n        'height': np.random.normal(160, 5, N)\n    }\n)\n\nprint(\"df_test.mean()\")\n%time df_test.mean()\n\nprint(\"df_test[['height', 'weight']].mean()\")\n%time df_test[['height', 'weight']].mean()\n```\n\n\u4e0a\u8a18\u306e\u7d50\u679c\u304c\u4e0b\u8a18\u3002\n\u8a08\u7b97\u3059\u308b\u5217\u304c\u4e00\u3064\u6e1b\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u3092\u8003\u616e\u3057\u3066\u3082\u3001\u5f8c\u8005\u306e\u65b9\u304c4\u6841\u3050\u3089\u3044\u6841\u9055\u3044\u306b\u65e9\u3044\u3002\n\n\n```\u7d50\u679c:\u7d50\u679c\ndf_test.mean()\nWall time: 3.06 s\n\ndf_test[['height', 'weight']].mean()\nWall time: 4 ms\n```\n\n## \u9ad8\u968e\u95a2\u6570(map)\u3092\u4f7f\u304a\u3046\n\u4f8b\u3048\u3070\u3001\u5217 weight \u3092\u6574\u6570\u306b\u4e38\u3081\u308b\u51e6\u7406\u3092\u884c\u3046\u3068\u304d round\u95a2\u6570 \u3092\u4f7f\u3044\u307e\u3059\u304c\npython\u3084\u4eca\u6642\u307d\u3044\u66f8\u304d\u65b9\u306b\u6163\u308c\u3066\u3044\u306a\u3044\u3068\u3001for\u6587\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3067\u66f8\u304d\u304c\u3061\n\u9ad8\u968e\u95a2\u6570 map \u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\uff08\u9ad8\u968e\u95a2\u6570\u304c\u4f55\u306a\u306e\u304b\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u8a18\u4e8b\u3067\u306f\u5272\u611b\uff09\n\n```python:Bad\u30d1\u30bf\u30fc\u30f3\n# \u8981\u7d20\u306b\u5bfe\u3057\u3066 round\u95a2\u6570 \u3092\u9069\u7528\u3059\u308b\nfor idx in range(len(df_test['weight'].index)):\n    df_test['weight'][idx] = round(df_test['weight'][idx])\n```\n\nmap \u3092\u4f7f\u3063\u305f\u4e0b\u8a18\u306b\u66f8\u304d\u76f4\u3059\n\n```python:Good\u30d1\u30bf\u30fc\u30f3\n# \u8981\u7d20\u306b\u5bfe\u3057\u3066 round\u95a2\u6570 \u3092\u9069\u7528\u3059\u308b\ndf_test['weight'] = df_test['weight'].map(round)\n```\n\n\u4eca\u56de\u3082\u5b9f\u969b\u306b\u6642\u9593\u3092\u6e2c\u308b\u3002for\u6587\u304c\u9045\u3059\u304e\u308b\u306e\u3067\u30c7\u30fc\u30bf\u6570\u3092\u5148\u307b\u3069\u3088\u308a\u6e1b\u3089\u3059\n\n```python:\u5b9f\u6e2c\ndef func(sr):\n    for idx in range(len(sr.index)):\n        sr[idx] = round(sr[idx])\n    return(sr)\n\n\nN = 1000\ndf_test = pd.DataFrame(\n    {\n        'name':['abc'] * N,\n        'weight': np.random.normal(60, 5, N),\n        'height': np.random.normal(160, 5, N)\n    }\n)\n\nprint(\"for\u306e\u5834\u5408\")\n%time df_test['weight'] = func(df_test['weight'])\nprint(\"map\u306e\u5834\u5408\")\n%time df_test['weight'] = df_test['weight'].map(round)\n```\n\n\u305d\u306e\u7d50\u679c\u304c\u4e0b\u8a18\u3002\nmap\u306a\u3089\u5149\u306e\u901f\u3055\u3067\u51e6\u7406\u3067\u304d\u308b\u3053\u3068\u3092\u3001for\u6587\u3060\u3068\u3068\u3093\u3067\u3082\u306a\u304f\u9045\u304f\u306a\u308b\n\u305f\u3063\u305f100\u500b\u306e\u30c7\u30fc\u30bf\u3067\u3053\u308c\u306a\u306e\u3060\u304b\u3089\u3001\n100\u4e07\u301c1\u5104\u306e\u30c7\u30fc\u30bf\u6271\u3046\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u6050\u308d\u3057\u304f\u306a\u308b\n\n\n```\u7d50\u679c:\u7d50\u679c\nfor\u306e\u5834\u5408\nWall time: 22.1 s\n\nmap\u306e\u5834\u5408\nWall time: 0 ns\n```\n\n\u4e0a\u8a18\uff12\u3064\u306e\u51e6\u7406\u3092\u6539\u5584\u3059\u308b\u3060\u3051\u3067\u3001\n\u30c7\u30fc\u30bf\u51e6\u7406\uff11\u65e5\u304b\u304b\u3063\u3066\u3044\u305f\u3068\u3053\u308d\u3092\u3001\u6570\u5206\u3067\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u3001\n\u3069\u3093\u3069\u3093\u6539\u5584\u3057\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u306d\u3002\n", "tags": ["pandas", "\u9ad8\u901f\u5316", "\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf", "\u30c7\u30fc\u30bf\u51e6\u7406", "Python"]}