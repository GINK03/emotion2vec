{"tags": ["Python", "Selenium"], "context": " More than 1 year has passed since last update.Selenium\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u969b\u306b\u3064\u307e\u305a\u3044\u305fprofile\u8a2d\u5b9a\u3092\u30e1\u30e2\u3057\u307e\u3059\u3002\nPython\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u30b3\u30fc\u30c9\u304c\u304a\u304b\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3054\u4e86\u627f\u3092\u3002\n\n\u74b0\u5883\u306e\u69cb\u7bc9\n\u69cb\u7bc9\u306e\u624b\u9806\u306f\u591a\u304f\u306e\u30b5\u30a4\u30c8\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5272\u611b\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttp://treeapps.hatenablog.com/entry/2014/10/16/015439\nhttps://pypi.python.org/pypi/selenium\nXvfb+FireFox+Selenium(2.44.0)\u306e\u69cb\u6210\u3067\u3059\u3002\n\nprofile\u8a2d\u5b9a\nUser-Agent\u3092\u5224\u5225\u3057\u3066PC/\u30b9\u30de\u30db\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30da\u30fc\u30b8\u3092\u51fa\u3057\u5206\u3051\u3066\u3044\u308b\u5834\u5408\u3001\u30b9\u30de\u30db\u306eUA(mobile Safari\u7b49)\u3092\u6307\u5b9a\u3057\u305f\u30c6\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u958b\u767a\u74b0\u5883\u3067\u8a66\u9a13\u3092\u56de\u3059\u5834\u5408\u3001\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3060\u3063\u305f\u308a\u3059\u308b\u4e8b\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u308c\u3089\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3001profile\u306e\u521d\u671f\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\nsp_webdriver.py\nimport os\nfrom selenium import webdriver\nfrom selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n\nprofile = FirefoxProfile()\n# \u8a3c\u660e\u66f8\u306e\u8b66\u544a\u3092\u7121\u8996\u3059\u308b\nprofile.set_preference(\"webdriver_assume_untrusted_issuer\", False)\nprofile.set_preference(\"webdriver_accept_untrusted_certs\", True)\nprofile.accept_untrusted_certs = True\n\n# User-Agent\u306e\u66f8\u304d\u63db\u3048(\u4f8b\uff1aiOS 8.0)\nprofile.set_preference(\"general.useragent.override\", \"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A365 Safari/600.1.4\")\n\nprofile.update_preferences()\n\ndriver = webdriver.Firefox(profile)\n\n\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u3044\u3066\u307f\u308b\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u66f8\u304f\u3068\u304d\u306f\u3001\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u304b\u3089\u30c6\u30b9\u30c8\u90e8\u5206\u3060\u3051\u5b9f\u88c5\u3059\u308b\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nTestCase.py\n# -*- coding: utf-8 -*-\n\nimport sys, os\nimport datetime\nfrom selenium import webdriver\nfrom selenium.webdriver.firefox.firefox_profile import FirefoxProfile\nimport unittest\n\nclass TestCase(unittest.TestCase):\n\n    def setUp(self):\n        profile = FirefoxProfile()\n        profile.set_preference(\"webdriver_assume_untrusted_issuer\", False)\n        profile.set_preference(\"webdriver_accept_untrusted_certs\", True)\n        profile.accept_untrusted_certs = True\n        profile.set_preference(\"general.useragent.override\", \"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A365 Safari/600.1.4\")\n        profile.update_preferences()\n        self.driver = webdriver.Firefox(profile)\n\n        self.base_url = \"http://m.finance.yahoo.co.jp/\"\n        self.driver.implicitly_wait(30)\n        self.accept_next_alert = True\n\n    def ssAssertEquals(self, left, right):\n        try:\n            # assertionError\u6642\u306b\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n            self.assertEqual(left, right)\n        except AssertionError, e:\n            now = datetime.datetime.now()\n            self.driver.save_screenshot(\"/var/log\" + self.__class__.__name__ + \"_\" + now.strftime(\"%Y%m%d%H%M%S\") + \".png\")\n            raise e\n\n    def test_sitetop(self):\n        self.driver.get(self.base_url)\n        self.ssAssertEquals(u\"Y!\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\", self.driver.title)\n\n    def tearDown(self):\n        self.driver.quit()\n\nif __name__ == \"__main__\":\n    unittest.main()\n\n\nSelenium\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u969b\u306b\u3064\u307e\u305a\u3044\u305fprofile\u8a2d\u5b9a\u3092\u30e1\u30e2\u3057\u307e\u3059\u3002\nPython\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u30b3\u30fc\u30c9\u304c\u304a\u304b\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3054\u4e86\u627f\u3092\u3002\n\n# \u74b0\u5883\u306e\u69cb\u7bc9\n\u69cb\u7bc9\u306e\u624b\u9806\u306f\u591a\u304f\u306e\u30b5\u30a4\u30c8\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5272\u611b\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttp://treeapps.hatenablog.com/entry/2014/10/16/015439\nhttps://pypi.python.org/pypi/selenium\n\nXvfb+FireFox+Selenium(2.44.0)\u306e\u69cb\u6210\u3067\u3059\u3002\n\n# profile\u8a2d\u5b9a\nUser-Agent\u3092\u5224\u5225\u3057\u3066PC/\u30b9\u30de\u30db\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30da\u30fc\u30b8\u3092\u51fa\u3057\u5206\u3051\u3066\u3044\u308b\u5834\u5408\u3001\u30b9\u30de\u30db\u306eUA(mobile Safari\u7b49)\u3092\u6307\u5b9a\u3057\u305f\u30c6\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u958b\u767a\u74b0\u5883\u3067\u8a66\u9a13\u3092\u56de\u3059\u5834\u5408\u3001\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3060\u3063\u305f\u308a\u3059\u308b\u4e8b\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u308c\u3089\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3001profile\u306e\u521d\u671f\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```py:sp_webdriver.py\nimport os\nfrom selenium import webdriver\nfrom selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n\nprofile = FirefoxProfile()\n# \u8a3c\u660e\u66f8\u306e\u8b66\u544a\u3092\u7121\u8996\u3059\u308b\nprofile.set_preference(\"webdriver_assume_untrusted_issuer\", False)\nprofile.set_preference(\"webdriver_accept_untrusted_certs\", True)\nprofile.accept_untrusted_certs = True\n\n# User-Agent\u306e\u66f8\u304d\u63db\u3048(\u4f8b\uff1aiOS 8.0)\nprofile.set_preference(\"general.useragent.override\", \"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A365 Safari/600.1.4\")\n\nprofile.update_preferences()\n\ndriver = webdriver.Firefox(profile)\n```\n\n\n# \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u3044\u3066\u307f\u308b\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u66f8\u304f\u3068\u304d\u306f\u3001\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u304b\u3089\u30c6\u30b9\u30c8\u90e8\u5206\u3060\u3051\u5b9f\u88c5\u3059\u308b\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```TestCase.py\n# -*- coding: utf-8 -*-\n\nimport sys, os\nimport datetime\nfrom selenium import webdriver\nfrom selenium.webdriver.firefox.firefox_profile import FirefoxProfile\nimport unittest\n\nclass TestCase(unittest.TestCase):\n\n    def setUp(self):\n        profile = FirefoxProfile()\n        profile.set_preference(\"webdriver_assume_untrusted_issuer\", False)\n        profile.set_preference(\"webdriver_accept_untrusted_certs\", True)\n        profile.accept_untrusted_certs = True\n        profile.set_preference(\"general.useragent.override\", \"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A365 Safari/600.1.4\")\n        profile.update_preferences()\n        self.driver = webdriver.Firefox(profile)\n\n        self.base_url = \"http://m.finance.yahoo.co.jp/\"\n        self.driver.implicitly_wait(30)\n        self.accept_next_alert = True\n\n    def ssAssertEquals(self, left, right):\n        try:\n            # assertionError\u6642\u306b\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n            self.assertEqual(left, right)\n        except AssertionError, e:\n            now = datetime.datetime.now()\n            self.driver.save_screenshot(\"/var/log\" + self.__class__.__name__ + \"_\" + now.strftime(\"%Y%m%d%H%M%S\") + \".png\")\n            raise e\n\n    def test_sitetop(self):\n        self.driver.get(self.base_url)\n        self.ssAssertEquals(u\"Y!\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\", self.driver.title)\n\n    def tearDown(self):\n        self.driver.quit()\n\nif __name__ == \"__main__\":\n    unittest.main()\n```\n"}