{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nscheme\u3067\u3001\u7d99\u7d9a\u3092\u4f7f\u3063\u3066\u9806\u5217\u3092\u5217\u6319\u3059\u308b\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3092\u66f8\u304f\u305f\u3081\u306b\u8a66\u884c\u932f\u8aa4\u3057\u305f\u30e1\u30e2\u3002\n\n\u5c0e\u5165\nscheme\u3067\u30011,\u2026,n\u306e\u9806\u5217\u3092\u5217\u6319\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u3002\u4f46\u3057\u3001\u672c\u5f53\u306b\u5168\u90e8\u306e\u9806\u5217\u304c\u6b32\u3057\u3044\u8a33\u3067\u306f\u306a\u304f\u3066\u3001\u8f9e\u66f8\u5f0f\u9806\u306b\u9806\u5217\u3092\u5217\u6319\u3057\u3066\u3001\u9069\u5f53\u306a\u6761\u4ef6\u3092\u6e80\u305f\u3059\u5217\u304c\u51fa\u305f\u3089\u3001\u305d\u308c\u4ee5\u964d\u306f\u8981\u3089\u306a\u3044\u3002\n\u6700\u521d\u306b\u3001\u6761\u4ef6\u53cd\u5c04\u3067\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3002\u518d\u5e30=\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3002\n(define (print-perm n)\n  (define flag (make-vector n #t))\n  (let loop ((i 0)\n             (j 0)\n             (perm ()))\n    (cond ((= i n) (print perm)) ;; (a)\n          ((< j n)\n           (if (vector-ref flag j)\n               (begin\n                 (vector-set! flag j #f)\n                 (loop (+ i 1) 0 (cons (+ j 1) perm))\n                 (vector-set! flag j #t)))\n           (loop i (+ j 1) perm)))))\n\n\u5b9f\u969b\u306b\u306f\u3001(a)\u306e\u6240\u3067\u3001(print perm)\u3068\u3057\u3066\u3044\u308b\u4ee3\u308f\u308a\u306b\u3001\u30ea\u30b9\u30c8perm\u3092\u3069\u3063\u304b\u5225\u306e\u6240\u306b\u6e21\u3057\u3066\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3059\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u305f\u3044\u3002\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u305f\u3089\u51e6\u7406\u3092\u6b62\u3081\u3066\u3001\u6e80\u305f\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u7d9a\u304d\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3057\u305f\u3044\u3002\n\u4f55\u3068\u306a\u304f\u5642\u306b\u306f\u805e\u3044\u3066\u3044\u305f\u3051\u3069\u3001\u3053\u3046\u3044\u3046\u6642\u306b\u306f\u7d99\u7d9a\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u307f\u305f\u3002\u76ee\u6307\u3059\u306e\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u52d5\u4f5c\u3067\u3042\u308b\u3002\ngosh> (define gen (permutation-generator 3))\ngen\ngosh> (gen)\n(3 2 1)\ngosh> (gen)\n(2 3 1)\ngosh> (gen)\n(3 1 2)\ngosh> (gen)\n(1 3 2)\ngosh> (gen)\n(2 1 3)\ngosh> (gen)\n(1 2 3)\ngosh> (gen)\nend\n\n\u3064\u307e\u308a\u3001(permutation-generator n)\u3067\u30011,2,\u2026,n\u306e\u9806\u5217\u3092\u5217\u6319\u3059\u308b\u70ba\u306e\u624b\u7d9a\u304d\u304c\u4f5c\u6210\u3055\u308c\u3001\u4ee5\u4e0b\u305d\u306e\u624b\u7d9a\u3092\u547c\u3076\u6bce\u306b\u9806\u5217\u304c\u8f9e\u66f8\u5f0f\u9806\u3067\u8fd4\u3063\u3066\u304f\u308b\u3002\n\n\u672c\u6587\n\u307e\u305a\u3001permutation-generator\u306f\u3001\u5f15\u6570n\u3092\u53d7\u3051\u53d6\u3063\u3066\u624b\u7d9a\u304d\u3092\u8fd4\u3059\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306a\u6240\u304b\u3089\u51fa\u767a\u3059\u308b\u3002\n(define (permutation-generator n)\n  (define (generator)\n    )\n  generator)\n\n\u6b21\u306b\u3001\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e(a)\u306e\u90e8\u5206\u306b\u6765\u305f\u6642\u306b\u5916\u90e8\u306b\u8131\u51fa\u3059\u308b\u70ba\u306e\u51fa\u53e3\u3092\u78ba\u4fdd\u3059\u308b\u3002\n(define (permutation-generator n)\n  (define return ())\n  (define (generator)\n    (call/cc\n     (lambda (cc) ;; (b)\n       (set! return cc))))\n  generator)\n\n\u3053\u3053\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3001generator\u306e\u51e6\u7406\u306e\u5168\u4f53\u3092call/cc\u3067\u56f2\u3080\u3002\u3053\u3046\u3059\u308b\u3068\u3001(b)\u306ecc\u306b\u5165\u308b\u7d99\u7d9a\u306e\u5b9f\u4f53\u306f\u3001generator\u3092\u547c\u3073\u51fa\u3057\u305f\u6240\u306b\u5024\u3092\u8fd4\u3057\u3066\u4ee5\u964d\u306e\u624b\u7d9a\u304d\u3092\u5b9f\u884c\u3059\u308b \u3068\u3044\u3046\u51e6\u7406\u306b\u306a\u308b\u3002\u3053\u308c\u3092\u3001\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u306e\u4e2d\u306breturn\u95a2\u6570\u3068\u3057\u3066\u767b\u9332\u3057\u3066\u304a\u3051\u3070\u3001\u3044\u3064\u3067\u3082return\u3092\u547c\u3076\u4e8b\u3067\u3001generator\u306e\u547c\u3073\u51fa\u3057\u5143\u306b\u4e00\u6c17\u306b\u623b\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n\u51fa\u53e3\u304c\u51fa\u6765\u305f\u306e\u3067\u3001\u51e6\u7406\u306e\u5b9f\u4f53\u3092\u306f\u3081\u8fbc\u3093\u3067\u3001\u9014\u4e2d\u8131\u51fa\u3057\u305f\u3044\u6240\u3067\u3001\u3055\u3063\u304d\u306ereturn\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\u3002\u3053\u3053\u306b2\u500b\u76ee\u306e\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u3063\u3066\u3001return\u3059\u308b\u524d\u306b\u3001\u6b8b\u308a\u306e\u51e6\u7406\u3092\u7d99\u7d9a\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3002\u305d\u306e\u7d99\u7d9a\u3092\u547c\u3079\u3070\u3001\u51e6\u7406\u306e\u7d9a\u304d\u304c\u518d\u958b\u51fa\u6765\u308b\u3002\n\ngenerator\u306f\u3001\u547c\u3073\u51fa\u3055\u308c\u308b\u5ea6\u306b\u3001 \u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u6b8b\u308a\u306e\u51e6\u7406 \u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n\u6700\u521d\u306b\u547c\u3073\u51fa\u3055\u308c\u305f\u6642\u306e \u6b8b\u308a\u306e\u51e6\u7406 \u3068\u3057\u3066\u3001\u30eb\u30fc\u30d7\u3092\u521d\u671f\u5024\u3067\u547c\u3073\u51fa\u3059\u51e6\u7406\u3092\u5165\u308c\u3066\u304a\u304f\u3002\n\n(define (permutation-generator n)\n  (define flag (make-vector n #t))\n  (define return ())\n  (define (loop i j perm)\n    (cond ((= i n)\n           (call/cc (lambda (cc)\n                      (set! next-start cc) ;;\u6b8b\u308a\u306e\u51e6\u7406\u3092\u7d99\u7d9a\u3068\u3057\u3066\u4fdd\u5b58\n                      (return perm)))) ;;\u9014\u4e2d\u8131\u51fa!\n          ((< j n)\n           (if (vector-ref flag j)\n               (begin\n                 (vector-set! flag j #f)\n                 (loop (+ i 1) 0 (cons (+ 1 j) perm))\n                 (vector-set! flag j #t)))\n           (loop i (+ j 1) perm))))\n  (define (next-start) (loop 0 0 ()))\n  (define (generator)\n    (call/cc\n     (lambda (cc)\n       (set! return cc)\n       (next-start))))\n  generator)\n\n\u3053\u308c\u307e\u3067\u3067\u3001\u9806\u5217\u306e\u5217\u6319\u306f\u51fa\u6765\u3066\u308b\u3093\u3060\u3051\u3069\u3001\u7d42\u4e86\u51e6\u7406\u304c\u7121\u3044\u306e\u3067\u305d\u308c\u3082\u633f\u5165\u3002\u51e6\u7406\u306e\u7d42\u7aef\u306b\u6765\u305f\u3089\u3001\u6b8b\u308a\u306e\u51e6\u7406 \u3068\u3057\u3066\u3001\u7d42\u308f\u3063\u305f\u4e8b\u3092\u77e5\u3089\u305b\u308b\u3068\u3044\u3046\u7d99\u7d9a\u3092\u4fdd\u5b58\u3002\u3053\u308c\u3067\u5b8c\u6210\u3002\n(define (permutation-generator n)\n  (define flag (make-vector n #t))\n  (define return ())\n  (define (loop i j perm)\n    (cond ((= i n)\n           (call/cc (lambda (cc)\n                      (set! next-start cc)\n                      (return perm))))\n          ((< j n)\n           (if (vector-ref flag j)\n               (begin\n                 (vector-set! flag j #f)\n                 (loop (+ i 1) 0 (cons (+ 1 j) perm))\n                 (vector-set! flag j #t)))\n           (loop i (+ j 1) perm))\n          ((= i 0)\n           (call/cc (lambda (cc)\n                      (set! next-start cc)))\n           (return 'end))))\n  (define (next-start) (loop 0 0 ()))\n  (define (generator)\n    (call/cc\n     (lambda (cc)\n       (set! return cc)\n       (next-start))))\n  generator)\n\n\n#\u6982\u8981\nscheme\u3067\u3001\u7d99\u7d9a\u3092\u4f7f\u3063\u3066\u9806\u5217\u3092\u5217\u6319\u3059\u308b\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3092\u66f8\u304f\u305f\u3081\u306b\u8a66\u884c\u932f\u8aa4\u3057\u305f\u30e1\u30e2\u3002\n\n#\u5c0e\u5165\nscheme\u3067\u30011,\u2026,n\u306e\u9806\u5217\u3092\u5217\u6319\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u3002\u4f46\u3057\u3001\u672c\u5f53\u306b\u5168\u90e8\u306e\u9806\u5217\u304c\u6b32\u3057\u3044\u8a33\u3067\u306f\u306a\u304f\u3066\u3001\u8f9e\u66f8\u5f0f\u9806\u306b\u9806\u5217\u3092\u5217\u6319\u3057\u3066\u3001\u9069\u5f53\u306a\u6761\u4ef6\u3092\u6e80\u305f\u3059\u5217\u304c\u51fa\u305f\u3089\u3001\u305d\u308c\u4ee5\u964d\u306f\u8981\u3089\u306a\u3044\u3002\n\n\u6700\u521d\u306b\u3001\u6761\u4ef6\u53cd\u5c04\u3067\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3002\u518d\u5e30=\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3002\n\n```Lisp\n(define (print-perm n)\n  (define flag (make-vector n #t))\n  (let loop ((i 0)\n             (j 0)\n             (perm ()))\n    (cond ((= i n) (print perm)) ;; (a)\n          ((< j n)\n           (if (vector-ref flag j)\n               (begin\n                 (vector-set! flag j #f)\n                 (loop (+ i 1) 0 (cons (+ j 1) perm))\n                 (vector-set! flag j #t)))\n           (loop i (+ j 1) perm)))))\n```\n\n\u5b9f\u969b\u306b\u306f\u3001(a)\u306e\u6240\u3067\u3001(print perm)\u3068\u3057\u3066\u3044\u308b\u4ee3\u308f\u308a\u306b\u3001\u30ea\u30b9\u30c8perm\u3092\u3069\u3063\u304b\u5225\u306e\u6240\u306b\u6e21\u3057\u3066\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3059\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u305f\u3044\u3002\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u305f\u3089\u51e6\u7406\u3092\u6b62\u3081\u3066\u3001\u6e80\u305f\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u7d9a\u304d\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3057\u305f\u3044\u3002\n\n\u4f55\u3068\u306a\u304f\u5642\u306b\u306f\u805e\u3044\u3066\u3044\u305f\u3051\u3069\u3001\u3053\u3046\u3044\u3046\u6642\u306b\u306f\u7d99\u7d9a\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u307f\u305f\u3002\u76ee\u6307\u3059\u306e\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u52d5\u4f5c\u3067\u3042\u308b\u3002\n\n```\ngosh> (define gen (permutation-generator 3))\ngen\ngosh> (gen)\n(3 2 1)\ngosh> (gen)\n(2 3 1)\ngosh> (gen)\n(3 1 2)\ngosh> (gen)\n(1 3 2)\ngosh> (gen)\n(2 1 3)\ngosh> (gen)\n(1 2 3)\ngosh> (gen)\nend\n```\n\n\u3064\u307e\u308a\u3001(permutation-generator n)\u3067\u30011,2,\u2026,n\u306e\u9806\u5217\u3092\u5217\u6319\u3059\u308b\u70ba\u306e\u624b\u7d9a\u304d\u304c\u4f5c\u6210\u3055\u308c\u3001\u4ee5\u4e0b\u305d\u306e\u624b\u7d9a\u3092\u547c\u3076\u6bce\u306b\u9806\u5217\u304c\u8f9e\u66f8\u5f0f\u9806\u3067\u8fd4\u3063\u3066\u304f\u308b\u3002\n\n#\u672c\u6587\n\u307e\u305a\u3001permutation-generator\u306f\u3001\u5f15\u6570n\u3092\u53d7\u3051\u53d6\u3063\u3066\u624b\u7d9a\u304d\u3092\u8fd4\u3059\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306a\u6240\u304b\u3089\u51fa\u767a\u3059\u308b\u3002\n\n```Lisp\n(define (permutation-generator n)\n  (define (generator)\n    )\n  generator)\n```\n\n\u6b21\u306b\u3001\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e(a)\u306e\u90e8\u5206\u306b\u6765\u305f\u6642\u306b\u5916\u90e8\u306b\u8131\u51fa\u3059\u308b\u70ba\u306e\u51fa\u53e3\u3092\u78ba\u4fdd\u3059\u308b\u3002\n\n```Lisp\n(define (permutation-generator n)\n  (define return ())\n  (define (generator)\n    (call/cc\n     (lambda (cc) ;; (b)\n       (set! return cc))))\n  generator)\n```\n\n\u3053\u3053\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3001generator\u306e\u51e6\u7406\u306e\u5168\u4f53\u3092call/cc\u3067\u56f2\u3080\u3002\u3053\u3046\u3059\u308b\u3068\u3001(b)\u306ecc\u306b\u5165\u308b\u7d99\u7d9a\u306e\u5b9f\u4f53\u306f\u3001*generator\u3092\u547c\u3073\u51fa\u3057\u305f\u6240\u306b\u5024\u3092\u8fd4\u3057\u3066\u4ee5\u964d\u306e\u624b\u7d9a\u304d\u3092\u5b9f\u884c\u3059\u308b* \u3068\u3044\u3046\u51e6\u7406\u306b\u306a\u308b\u3002\u3053\u308c\u3092\u3001\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u306e\u4e2d\u306breturn\u95a2\u6570\u3068\u3057\u3066\u767b\u9332\u3057\u3066\u304a\u3051\u3070\u3001\u3044\u3064\u3067\u3082return\u3092\u547c\u3076\u4e8b\u3067\u3001generator\u306e\u547c\u3073\u51fa\u3057\u5143\u306b\u4e00\u6c17\u306b\u623b\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n\n\u51fa\u53e3\u304c\u51fa\u6765\u305f\u306e\u3067\u3001\u51e6\u7406\u306e\u5b9f\u4f53\u3092\u306f\u3081\u8fbc\u3093\u3067\u3001\u9014\u4e2d\u8131\u51fa\u3057\u305f\u3044\u6240\u3067\u3001\u3055\u3063\u304d\u306ereturn\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\u3002\u3053\u3053\u306b2\u500b\u76ee\u306e\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u3063\u3066\u3001return\u3059\u308b\u524d\u306b\u3001\u6b8b\u308a\u306e\u51e6\u7406\u3092\u7d99\u7d9a\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3002\u305d\u306e\u7d99\u7d9a\u3092\u547c\u3079\u3070\u3001\u51e6\u7406\u306e\u7d9a\u304d\u304c\u518d\u958b\u51fa\u6765\u308b\u3002\n\n- generator\u306f\u3001\u547c\u3073\u51fa\u3055\u308c\u308b\u5ea6\u306b\u3001 \u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u6b8b\u308a\u306e\u51e6\u7406 \u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n- \u6700\u521d\u306b\u547c\u3073\u51fa\u3055\u308c\u305f\u6642\u306e *\u6b8b\u308a\u306e\u51e6\u7406* \u3068\u3057\u3066\u3001\u30eb\u30fc\u30d7\u3092\u521d\u671f\u5024\u3067\u547c\u3073\u51fa\u3059\u51e6\u7406\u3092\u5165\u308c\u3066\u304a\u304f\u3002\n\n```Lisp\n(define (permutation-generator n)\n  (define flag (make-vector n #t))\n  (define return ())\n  (define (loop i j perm)\n    (cond ((= i n)\n           (call/cc (lambda (cc)\n                      (set! next-start cc) ;;\u6b8b\u308a\u306e\u51e6\u7406\u3092\u7d99\u7d9a\u3068\u3057\u3066\u4fdd\u5b58\n                      (return perm)))) ;;\u9014\u4e2d\u8131\u51fa!\n          ((< j n)\n           (if (vector-ref flag j)\n               (begin\n                 (vector-set! flag j #f)\n                 (loop (+ i 1) 0 (cons (+ 1 j) perm))\n                 (vector-set! flag j #t)))\n           (loop i (+ j 1) perm))))\n  (define (next-start) (loop 0 0 ()))\n  (define (generator)\n    (call/cc\n     (lambda (cc)\n       (set! return cc)\n       (next-start))))\n  generator)\n```\n\n\u3053\u308c\u307e\u3067\u3067\u3001\u9806\u5217\u306e\u5217\u6319\u306f\u51fa\u6765\u3066\u308b\u3093\u3060\u3051\u3069\u3001\u7d42\u4e86\u51e6\u7406\u304c\u7121\u3044\u306e\u3067\u305d\u308c\u3082\u633f\u5165\u3002\u51e6\u7406\u306e\u7d42\u7aef\u306b\u6765\u305f\u3089\u3001*\u6b8b\u308a\u306e\u51e6\u7406* \u3068\u3057\u3066\u3001\u7d42\u308f\u3063\u305f\u4e8b\u3092\u77e5\u3089\u305b\u308b\u3068\u3044\u3046\u7d99\u7d9a\u3092\u4fdd\u5b58\u3002\u3053\u308c\u3067\u5b8c\u6210\u3002\n\n```Lisp\n(define (permutation-generator n)\n  (define flag (make-vector n #t))\n  (define return ())\n  (define (loop i j perm)\n    (cond ((= i n)\n           (call/cc (lambda (cc)\n                      (set! next-start cc)\n                      (return perm))))\n          ((< j n)\n           (if (vector-ref flag j)\n               (begin\n                 (vector-set! flag j #f)\n                 (loop (+ i 1) 0 (cons (+ 1 j) perm))\n                 (vector-set! flag j #t)))\n           (loop i (+ j 1) perm))\n          ((= i 0)\n           (call/cc (lambda (cc)\n                      (set! next-start cc)))\n           (return 'end))))\n  (define (next-start) (loop 0 0 ()))\n  (define (generator)\n    (call/cc\n     (lambda (cc)\n       (set! return cc)\n       (next-start))))\n  generator)\n```", "tags": ["lisp", "Scheme"]}