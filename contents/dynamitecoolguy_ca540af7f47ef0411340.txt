{"tags": ["Elixir", "Phoenix"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u524d\u56de\u306f\u3001Channel\u3092\u898b\u3066\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fEcto\u3001\u305d\u3046DB\u3067\u3059\u3002\n\n\u5916\u3078\n\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002Elixir\u3067\u306fEcto\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002Ecto\u306b\u306f\u3001\u73fe\u5728\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u30a2\u30c0\u30d7\u30bf\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\nPostgreSQL\nMySQL\nMSSQL\nSQLite3\nMongoDB\n\nPhoenix\u3067\u306f\u3001\u6a19\u6e96\u3067\u3001Ecto\u3068PostgreSQL\u306e\u30a2\u30c0\u30d7\u30bf\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u5f8c\u3001Ecto\u3068Postgrex(Elixir\u306ePostgreSQL\u30c9\u30e9\u30a4\u30d0)\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3001\u8a2d\u5b9a\u304c\u5b8c\u4e86\u3057\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\nEcto\u3067\u306f\u3001phoenix.gen.html\u3092\u4f7f\u3063\u3066\u30ea\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001User\u30ea\u30bd\u30fc\u30b9(\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u3057\u3066name, email, bio, number_of_pets)\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n$ mix phoenix.gen.html User users name:string email:string bio:string number_of_pets:integer\n* creating web/controllers/user_controller.ex\n* creating web/templates/user/edit.html.eex\n* creating web/templates/user/form.html.eex\n* creating web/templates/user/index.html.eex\n* creating web/templates/user/new.html.eex\n* creating web/templates/user/show.html.eex\n* creating web/views/user_view.ex\n* creating test/controllers/user_controller_test.exs\n* creating priv/repo/migrations/20160428030023_create_user.exs\n* creating web/models/user.ex\n* creating test/models/user_test.exs\n\nAdd the resource to your browser scope in web/router.ex:\n\n    resources \"/users\", UserController\n\nRemember to update your repository by running migrations:\n\n    $ mix ecto.migrate\n\nmigration, controller, controller test, model, model test, view, \u8907\u6570\u306etemplate\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\u51fa\u529b\u3055\u308c\u305f\u30b3\u30e1\u30f3\u30c8\u306b\u5f93\u3063\u3066\u3001web/router.ex\u306bresources \"/users\", UserController\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u540c\u3058\u304f\u3001\u30b3\u30e1\u30f3\u30c8\u306b\u5f93\u3063\u3066\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u307e\u3059(mix ecto.migrate)\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3088\u7684\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u5834\u5408\u306f\u3001mix ecto.create\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nMix\u306f\u3001MIX_ENV=\u74b0\u5883\u540d\u3092\u6307\u5b9a\u3057\u306a\u3044\u9650\u308a\u958b\u767a\u74b0\u5883\u3068\u898b\u306a\u3057\u307e\u3059\u3002Ecto\u3067\u306f\u3001Mix\u304b\u3089\u3053\u306e\u74b0\u5883\u3092\u5f15\u304d\u7d99\u3044\u3067\u3001\u4f5c\u6210\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u540d\u306b\u9069\u5f53\u306asuffix\u3092\u4ed8\u4e0e\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b5\u30fc\u30d0\u306b\u76f4\u63a5\u30ed\u30b0\u30a4\u30f3\u3066\u3057\u3066\u3001\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n$ sudo su - postgres\n$ psql \npsql (9.5.2)\nType \"help\" for help.\n\npostgres=# \\connect hello_phoenix_dev\nYou are now connected to database \"hello_phoenix_dev\" as user \"postgres\".\nhello_phoenix_dev=# \\d\n                List of relations\n Schema |       Name        |   Type   |  Owner   \n--------+-------------------+----------+----------\n public | schema_migrations | table    | postgres\n public | users             | table    | postgres\n public | users_id_seq      | sequence | postgres\n(3 rows)\n\nhello_phoenix_dev=# \\d users;\n                                       Table \"public.users\"\n     Column     |            Type             |                     Modifiers                      \n----------------+-----------------------------+----------------------------------------------------\n id             | integer                     | not null default nextval('users_id_seq'::regclass)\n name           | character varying(255)      | \n email          | character varying(255)      | \n bio            | character varying(255)      | \n number_of_pets | integer                     | \n inserted_at    | timestamp without time zone | not null\n updated_at     | timestamp without time zone | not null\nIndexes:\n    \"users_pkey\" PRIMARY KEY, btree (id)\n\n\nphoenix.gen.html\u3067\u751f\u6210\u305b\u3055\u308c\u305f\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30bd\u30fc\u30b9\u306f\u3001priv/repo/migrations\u306b\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\ndefmodule HelloPhoenix.Repo.Migrations.CreateUser do\n  use Ecto.Migration\n\n  def change do\n    create table(:users) do\n      add :name, :string\n      add :email, :string\n      add :bio, :string\n      add :number_of_pets, :integer\n\n      timestamps\n    end\n\n  end\nend\n\ninserted_at, updated_at\u306f\u3001\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u306etimestamps/0\u95a2\u6570\u3067\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001id\u306f\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\u306a\u304f\u3066\u3082\u3001\u6697\u9ed9\u7684\u306bprimary key\u3068\u3057\u3066\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\nHelloPhoenix.Repo\u30e2\u30b8\u30e5\u30fc\u30eb(lib/hello_phoenix/repo.ex)\u306f\u3001Phoenix\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3092\u884c\u3046\u57fa\u672c\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\ndefmodule HelloPhoenix.Repo do\n  use Ecto.Repo, otp_app: :hello_phoenix\nend\n\n\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4e3b\u306a\u5f79\u5272\u306f\u4e8c\u3064\u3067\u3059\u3002\u4e00\u3064\u76ee\u306f\u3001Ecto.Repo\u304b\u3089query\u7528\u306e\u95a2\u6570\u3092\u5f15\u7528\u3059\u308b\u3053\u3068\u3068\u3001opt_app\u540d\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3059\u3002\nphoenix.new\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u305f\u3068\u304d\u3001\u540c\u69d8\u306b\u8a2d\u5b9a\u3082\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u8a2d\u5b9a\u306f\u3001config/dev.exs\u306b\u3042\u308a\u307e\u3059\u3002\n. . .\n# Configure your database\nconfig :hello_phoenix, HelloPhoenix.Repo,\n  adapter: Ecto.Adapters.Postgres,\n  username: \"postgres\",\n  password: \"postgres\",\n  database: \"hello_phoenix_dev\",\n  hostname: \"localhost\",\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u8a18\u8f09\u306f\u3001opt_app\u306e\u540d\u524d\u3068\u3001Repo\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u6307\u5b9a\u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30a2\u30c0\u30d7\u30bf\u306bPostgres\u3092\u30bb\u30c3\u30c8\u3057\u3001\u30ed\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u60c5\u5831\u304c\u8a18\u8f09\u3055\u308c\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u308c\u3089\u306f\u5b9f\u969b\u306b\u63a5\u7d9a\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\u306b\u76f4\u63a5\u5909\u66f4\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\u540c\u69d8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u3001\u4ed6\u306e\u74b0\u5883\u7528(config/test.exs\u3084config/prod.secret.exs)\u306b\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u30e2\u30c7\u30eb\nEcto\u306e\u30e2\u30c7\u30eb\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u95a2\u6570\u3084\u30b9\u30ad\u30fc\u30de\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306a\u3069\u304b\u3089\u69cb\u6210\u3055\u308c\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306b\u306f\u3001\u4ed6\u306e\u30e2\u30c7\u30eb\u3068\u306e\u95a2\u9023\u3084\u3001validation\u3001changeset\u306e\u53d6\u308a\u6271\u3044\u3082\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u5148\u307b\u3069\u5b9a\u7fa9\u3055\u308c\u305fuser\u306e\u30e2\u30c7\u30eb(web/models/user.ex)\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ndefmodule HelloPhoenix.User do\n  use HelloPhoenix.Web, :model\n\n  schema \"users\" do\n    field :name, :string\n    field :email, :string\n    field :bio, :string\n    field :number_of_pets, :integer\n\n    timestamps\n  end\n\n  @required_fields ~w(name email bio number_of_pets)\n  @optional_fields ~w()\n\n  @doc \"\"\"\n  Creates a changeset based on the `model` and `params`.\n\n  If no params are provided, an invalid changeset is returned\n  with no validation performed.\n  \"\"\"\n  def changeset(model, params \\\\ :empty) do\n    model\n    |> cast(params, @required_fields, @optional_fields)\n  end\nend\n\n\nChangeset\u3068Validation\nChangeset\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30c7\u30fc\u30bf\u52a0\u5de5\u3092\u884c\u3046\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3059\u3002\u3053\u306e\u52a0\u5de5\u306b\u306f\u3001\u578b\u30ad\u30e3\u30b9\u30c8\u3001validataion\u3001\u5916\u90e8\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u308b\u4f55\u3089\u304b\u306e\u30d5\u30a3\u30eb\u30bf\u306a\u3069\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u308bchangeset\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n  def changeset(model, params \\\\ :empty) do\n    model\n    |> cast(params, @required_fields, @optional_fields)\n  end\n\ncast/4\u95a2\u6570\u306f\u3001\u30c7\u30fc\u30bf\u3092@required_fields\u3068@optional_fields\u306b\u632f\u308a\u5206\u3051\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u304crequired\u3067\u3059\u3002\n\u73fe\u72b6\u306e\u52d5\u4f5c\u3092\u5c11\u3057\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n$ iex -S mix phoenix.server\n\n\nHelloPhoenix.User\u3092User\u306b\n\niex(1)> alias HelloPhoenix.User\n\n\n\u5168\u3066\u7a7a\u30c7\u30fc\u30bf\u3002error\u3042\u308a\u3002valid?\u304cfalse\u306b\u306a\u308b\n\niex(2)> changeset = User.changeset(%User{}, %{})\n%Ecto.Changeset{action: nil, changes: %{}, constraints: [],\n errors: [name: \"can't be blank\", email: \"can't be blank\", bio: \"can't be blank\", number_of_pets: \"can't be blank\"],\n filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{}, prepare: [], repo: nil, \n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: false, validations: []}\n\n\nrequired_fields(number_of_pets)\u304c\u7a7a\u30c7\u30fc\u30bf\u3002error\u3042\u308a\u3002valid?\u304cfalse\u306b\u306a\u308b\n\niex(3)> changeset2 = User.changeset(%User{}, %{name: \"\u540d\u524d\", email: \"hogehoge@hogehoge\", bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\"})\n%Ecto.Changeset{action: nil,\n changes: %{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\"}, constraints: [],\n errors: [number_of_pets: \"can't be blank\"],\n filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{\"bio\" => \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", \"email\" => \"hogehoge@hogehoge\", \"name\" => \"\u540d\u524d\"}, prepare: [], repo: nil,\n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: false, validations: []}\n\n\n\u5168\u30c7\u30fc\u30bf\u3042\u308a\u3002error\u306a\u3057\u3002valid?\u304ctrue\u306b\u306a\u308b\n\niex(4)> changeset3 = User.changeset(%User{}, %{name: \"\u540d\u524d\", email: \"hogehoge@hogehoge\", bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", number_of_pets: 3})\n%Ecto.Changeset{action: nil,\n changes: %{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\", number_of_pets: 3}, constraints: [],\n errors: [], filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{\"bio\" => \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", \"email\" => \"hogehoge@hogehoge\", \"name\" => \"\u540d\u524d\", \"number_of_pets\" => 3}, prepare: [], repo: nil,\n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: true, validations: []}\n\n\n\u5168\u30c7\u30fc\u30bf\u3068\u5b9a\u7fa9\u5916\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3042\u308a\u3002error\u306a\u3057\u3002valid?\u304ctrue\u306b\u306a\u308b\n\niex(5)> changeset4 = User.changeset(%User{}, %{name: \"\u540d\u524d\", email: \"hogehoge@hogehoge\", bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", number_of_pets: 3, extra: \"\u30a8\u30af\u30b9\u30c8\u30e9\"})\n%Ecto.Changeset{action: nil,\n changes: %{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\", number_of_pets: 3}, constraints: [],\n errors: [], filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{\"bio\" => \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", \"email\" => \"hogehoge@hogehoge\", \"extra\" => \"\u30a8\u30af\u30b9\u30c8\u30e9\", \"name\" => \"\u540d\u524d\", \"number_of_pets\" => 3}, prepare: [], repo: nil,\n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: true, validations: []}\n\n\nchangeset4\u304b\u3089\u306e\u4e00\u90e8\u5909\u66f4\u3002error\u306a\u3057\u3002valid?\u304ctrue\u306b\u306a\u308b\n\niex(6)> changeset5 = User.changeset(changeset4, %{name: \"\u3042\u305f\u3089\u3057\u3044\u540d\u524d\", number_of_pets: 1, extra: \"hoge\", extra2: \"fuga\"}) \n%Ecto.Changeset{action: nil,\n changes: %{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u3042\u305f\u3089\u3057\u3044\u540d\u524d\", number_of_pets: 1}, constraints: [],\n errors: [], filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{\"bio\" => \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", \"email\" => \"hogehoge@hogehoge\", \"extra\" => \"hoge\", \"extra2\" => \"fuga\", \"name\" => \"\u3042\u305f\u3089\u3057\u3044\u540d\u524d\", \"number_of_pets\" => 1}, prepare: [], repo: nil,\n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: true, validations: []}\n\n\n\u305d\u308c\u305e\u308c\u306echangeset (\u672a\u5b9a\u7fa9\u306e\u30d1\u30e9\u30e1\u30fc\u30bfextra, extra2\u306fchangeset\u304b\u3089\u9664\u53bb\u3055\u308c\u3066\u3044\u308b)\n\niex(7)> changeset.changes\n%{}\niex(8)> changeset2.changes\n%{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\"}\niex(9)> changeset3.changes\n%{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\", number_of_pets: 3}\niex(10)> changeset4.changes\n%{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\", number_of_pets: 3}\niex(11)> changeset5.changes\n%{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u3042\u305f\u3089\u3057\u3044\u540d\u524d\", number_of_pets: 1}\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u3001\u5225\u306evalidation\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001bio\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u6700\u5c112\u6587\u5b57\u3001\u6700\u5927140\u6587\u5b57\u5fc5\u8981\u3067\u3042\u308a\u3001\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306b\"@\"\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092validate\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n  def changeset(model, params \\\\ :empty) do\n    model\n    |> cast(params, @required_fields, @optional_fields)\n    |> validate_length(:bio, min: 2)\n    |> validate_length(:bio, max: 140)\n    |> validate_format(:email, ~r/@/)\n  end\n\n\nController\nController\u3067\u3069\u306e\u3088\u3046\u306bEcto\u3092\u4f7f\u7528\u3059\u308b\u304b\u3092\u898b\u308b\u305f\u3081\u306b\u3001\u5148\u307b\u3069mix phoenix.gen.html\u3067\u4f5c\u6210\u3055\u308c\u305fHelloPhoenix.UserController\u3092\u898b\u3066\u307f\u307e\u3059\u3002\ndefmodule HelloPhoenix.UserController do\n. . .\n  alias HelloPhoenix.User\n\n  plug :scrub_params, \"user\" when action in [:create, :update]\n. . .\nend\n\n\u524d\u306b\u3082\u51fa\u3066\u3044\u307e\u3059\u304c\u3001alias HelloPhoenix.User\u306f\u3001%HelloPhoenix.User{}\u3068\u66f8\u304f\u4ee3\u308f\u308a\u306b%User{}\u3068\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u5b9a\u7fa9\u3067\u3059\u3002\nplug :scrub_params, \"user\" when action in [:create, :update]\u306b\u3042\u308bscrub_params/2\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3057\u3001\u7a7a\u6587\u5b57\u5217\u3092nil\u306b\u5909\u63db\u3059\u308bPlug\u3067\u3059\u3002\n\u306a\u304a\u3001when action in [:create, :update]\u306fPipeline\u3067\u4f7f\u7528\u3067\u304d\u308bGuard\u3067\u3059\u3002\u8aac\u660e\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u304c\u3001conn\u3001action(atom)\u3001controller(alias (UserController? \u8981\u78ba\u8a8d) )\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nindex\u30a2\u30af\u30b7\u30e7\u30f3\n  def index(conn, _params) do\n    users = Repo.all(User)\n    render(conn, \"index.html\", users: users)\n  end\n\n\u3053\u308c\u306f\u3001DB\u304b\u3089\u5168\u30e6\u30fc\u30b6\u3092\u53d6\u5f97\u3057\u3066\u3001Templateindex.html.eex\u306b\u6e21\u3059\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\u5168\u30e6\u30fc\u30b6\u53d6\u5f97\u306f\u3001Repo.all/1\u306b\u30e2\u30c7\u30eb\u540d(alias)\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\u306a\u304a\u3001\u3053\u3053\u3067\u306fChangeset\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002Changeset\u306f\u3001DB\u3078\u306e\u30c7\u30fc\u30bf\u633f\u5165\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308a\u3001DB\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u306f\u6b63\u3057\u3044\u306f\u305a\u3060\u304b\u3089\u3067\u3059\u3002\nnew\u30a2\u30af\u30b7\u30e7\u30f3\ndef new(conn, _params) do\n  changeset = User.changeset(%User{})\n  render(conn, \"new.html\", changeset: changeset)\nend\n\n\u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3067\u306fChangeset\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u3001new\u30a2\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u308f\u305a\u306b\u7a7a\u306eChangeset\u3092\u4f7f\u3063\u3066Template \"new.html.eex\"\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u3053\u306e\u5f8c\u306ecreate\u30a2\u30af\u30b7\u30e7\u30f3\u3067\u3001\u5fc5\u9808\u9805\u76ee\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u306a\u3044\u306a\u3069\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u3082\u3001\"new.html.eex\"\u3092\u8868\u793a\u3059\u308b\u304b\u3089\u3067\u3059(\u3053\u306e\u3068\u304d\u306f\u3001Changeset\u306b\u30e6\u30fc\u30b6\u306b\u5165\u529b\u3057\u305f\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059)\u3002\ncreate\u30a2\u30af\u30b7\u30e7\u30f3\n\"new.html\"\u3067form\u304csubmit\u3055\u308c\u308b\u3068\u3001create\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\ndef create(conn, %{\"user\" => user_params}) do\n  changeset = User.changeset(%User{}, user_params)\n\n  case Repo.insert(changeset) do\n    {:ok, _user} ->\n      conn\n      |> put_flash(:info, \"User created successfully.\")\n      |> redirect(to: user_path(conn, :index))\n    {:error, changeset} ->\n      render(conn, \"new.html\", changeset: changeset)\n  end\nend\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u3063\u3066\"user\"\u30ad\u30fc\u306e\u5024\u3092\u4f7f\u3063\u3066\u3001changeset\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002DB\u3078\u306einsert\u304c\u6210\u529f\u3059\u308c\u3070\u3001Flash\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30bb\u30c3\u30c8\u3057\u3066index\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002\u5931\u6557\u3059\u308c\u3070\u3001\u3082\u3046\u4e00\u5ea6\"new.html\"\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\nshow\u30a2\u30af\u30b7\u30e7\u30f3\ndef show(conn, %{\"id\" => id}) do\n  user = Repo.get!(User, id)\n  render(conn, \"show.html\", user: user)\nend\n\nRepo.get!\u3067id\u306b\u5bfe\u5fdc\u3057\u305f\u30e6\u30fc\u30b6\u3092\u53d6\u5f97\u3057\u3001\"show.html.eex\"Template\u3092\u8868\u793a\u3057\u307e\u3059\u3002index\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u540c\u69d8\u306b\u3001\u3053\u3053\u3067\u306fChangeset\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002\nedit\u30a2\u30af\u30b7\u30e7\u30f3\n  def edit(conn, %{\"id\" => id}) do\n    user = Repo.get!(User, id)\n    changeset = User.changeset(user)\n    render(conn, \"edit.html\", user: user, changeset: changeset)\n  end\n\nedit\u306f\u3001show\u3068new\u3092\u8db3\u3057\u305f\u3088\u3046\u306a\u51e6\u7406\u3067\u3059\u3002Repo.get!\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u7de8\u96c6\u3059\u308b\u305f\u3081Template\"edit.html.eex\"\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\"edit.html\"\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8868\u793a\u306bchangeset\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u7528\u306e\u30d1\u30b9\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306buser\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\"edit.html\"\u306f\u3001\u6b21\u306eupdate\u30a2\u30af\u30b7\u30e7\u30f3\u3067\u5165\u529b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u306b\u3082\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001changeset\u306b\u306f\u3001\u30e6\u30fc\u30b6\u304c\u5165\u529b\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30e6\u30fc\u30b6\u304c\u5165\u529b\u3057\u305f\u5024\u304c\u305d\u306e\u307e\u307e\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059(user\u3092\u4f7f\u7528\u3057\u3066\u3057\u307e\u3046\u3068\u3001DB\u306b\u5165\u3063\u3066\u3044\u308b\u5024\u304c\u53c2\u7167\u3055\u308c\u3066\u3057\u307e\u3046)\u3002\nupdate\u30a2\u30af\u30b7\u30e7\u30f3\n  def update(conn, %{\"id\" => id, \"user\" => user_params}) do\n    user = Repo.get!(User, id)\n    changeset = User.changeset(user, user_params)\n\n    case Repo.update(changeset) do\n      {:ok, user} ->\n        conn\n        |> put_flash(:info, \"User updated successfully.\")\n        |> redirect(to: user_path(conn, :show, user))\n      {:error, changeset} ->\n        render(conn, \"edit.html\", user: user, changeset: changeset)\n    end\n  end\n\nupdate\u30a2\u30af\u30b7\u30e7\u30f3\u306fcreate\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u304c\u3001Repo.insert/1\u306e\u4ee3\u308f\u308a\u306bRepo.update/1\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001Repo.update/1\u3067\u306f\u3001\u5024\u306b\u5909\u66f4\u304c\u7121\u3044\u5834\u5408\u306b\u306fDB\u306b\u30c7\u30fc\u30bf\u3092\u9001\u3089\u306a\u3044\u3068\u3044\u3063\u305f\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\ndelete\u30a2\u30af\u30b7\u30e7\u30f3\n  def delete(conn, %{\"id\" => id}) do\n    user = Repo.get!(User, id)\n\n    # Here we use delete! (with a bang) because we expect\n    # it to always work (and if it does not, it will raise).\n    Repo.delete!(user)\n\n    conn\n    |> put_flash(:info, \"User deleted successfully.\")\n    |> redirect(to: user_path(conn, :index))\n  end\n\n\u6700\u521d\u306bRepo.get!\u306fDB\u4e0a\u306e\u30ec\u30b3\u30fc\u30c9id\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u5f8cRepo.delete!\u306b\u3088\u308a\u30ec\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u30ec\u30b3\u30fc\u30c9id\u304c\u7121\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\"!\"\u4ed8\u304d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u524a\u9664\u5f8c\u3001Flash\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30bb\u30c3\u30c8\u3057\u3001index\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u307e\u3059\u3002\n\nData Relationship And Dependencies\n\u3053\u3053\u3067\u3001\u5358\u7d14\u306a\u52d5\u753b\u6295\u7a3f\u30b5\u30a4\u30c8\u3092\u4f5c\u308b\u4f8b\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\u4e0a\u8a18\u306e\u30e6\u30fc\u30b6\u7ba1\u7406\u306b\u8ffd\u52a0\u3057\u3066\u3001\u6295\u7a3f\u52d5\u753b\u306e\u7ba1\u7406\u3082\u884c\u3044\u307e\u3059\u3002\n\u52d5\u753b(Video)\u30e2\u30c7\u30eb\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3059\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n$ mix phoenix.gen.model Video videos name:string approved_at:datetime description:text likes:integer views:integer user_id:references:users\n* creating priv/repo/migrations/20160513062728_create_video.exs\n* creating web/models/video.ex\n* creating test/models/video_test.exs\n\n$ mix ecto.migrate\n\n\u306a\u304a\u3001Migration\u7528\u306e\u30b9\u30af\u30ea\u30d7\u30c8(priv/depo/migrations/....._create_video.exs)\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\ndefmodule HelloPhoenix.Repo.Migrations.CreateVideo do\n  use Ecto.Migration\n\n  def change do\n    create table(:videos) do\n      add :name, :string\n      add :approved_at, :datetime\n      add :description, :text\n      add :likes, :integer\n      add :views, :integer\n      add :user_id, references(:users, on_delete: :nothing)\n\n      timestamps\n    end\n    create index(:videos, [:user_id])\n\n  end\nend\n\nRelationship\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u3001\u305f\u3068\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aAPI\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nSchema.has_many/3\n\u89aa\u5bfe\u5b50\u306e\u95a2\u9023\u304c\u30011\u5bfe\u591a\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u4f8b\u3060\u3068\u3001\u30e6\u30fc\u30b6\u2192\u2192\u52d5\u753b\u306e\u95a2\u9023\u3067\u3059\u3002\nSchema.belongs_to/3\n\u5b50\u5bfe\u89aa\u306e\u95a2\u9023\u304c\u30011\u5bfe1\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u4f8b\u3060\u3068\u3001\u52d5\u753b\u2192\u30e6\u30fc\u30b6\u306e\u95a2\u9023\u3067\u3059\u3002\nSchema.has_one/3\n\u89aa\u5bfe\u5b50\u306e\u95a2\u9023\u304c\u30011\u5bfe1\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\n\u3053\u306e\u4ed6\u306b\u3001embeds_many\u3001embeds_one\u304c\u3042\u308a\u307e\u3059 (\u305d\u308c\u305e\u308c\u306e\u30e2\u30c7\u30eb\u304c\u72ec\u7acb\u3057\u3066\u5b58\u5728\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5b8c\u5168\u306b\u89aa\u5b50\u95a2\u4fc2\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u8868\u3059)\u3002\n\u306a\u304a\u3001\u591a\u5bfe\u591a\u306e\u95a2\u9023\u306e\u5834\u5408\u306b\u306f\u3001\u95a2\u9023\u30e2\u30c7\u30eb\u3092\u4f5c\u308b(A \u2190 \u2192\u2192 C \u2190\u2190 \u2192 B)\u3088\u3046\u3067\u3059\u3002\nUser\u30e2\u30c7\u30eb(wbeb/models/user.ex)\u306b\u3000has_many\u95a2\u9023\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n  schema \"users\" do\n    field :name, :string\n    field :email, :string\n    field :bio, :string\n    field :number_of_pets, :integer\n\n    has_many :videos, HelloPhoenix.Video\n    timestamps\n  end\n\nVideo\u30e2\u30c7\u30eb\u306f\u3001\u751f\u6210\u6642\u306buser_id:references:users\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u81ea\u52d5\u7684\u306bbelongs_to\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001user_id\u3092field\u306b\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001@required_fields\u306buser_id\u306f\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\ndefmodule HelloPhoenix.Video do\n  use HelloPhoenix.Web, :model\n\n  schema \"videos\" do\n    field :name, :string\n    field :approved_at, Ecto.DateTime\n    field :description, :string\n    field :likes, :integer\n    field :views, :integer\n    belongs_to :user, HelloPhoenix.User\n\n    timestamps\n  end\n\n  @required_fields ~w(name approved_at description likes views user_id)\n\nweb/controllers/user_controller.ex\u3082\u3001\u3053\u306e\u95a2\u9023\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b\u4fee\u6b63\u3092\u884c\u3044\u307e\u3059\u3002\ndefmodule HelloPhoenix.UserController do\n  ...\n  def index(conn, _params) do\n    users = User |> Repo.all |> Repo.preload [:videos]\n    render(conn, \"index.html\", users: users)\n  end\n\n  def show(conn, %{\"id\" => id}) do\n    user = User |> Repo.get!(id) |> Repo.preload [:videos]\n    render(conn, \"show.html\", user: user)\n  end\n  ...\nend\n\nRepo.preload/2\u306b\u3088\u3063\u3066\u3001\u3044\u3044\u611f\u3058\u3067Video\u30e2\u30c7\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n## \u306f\u3058\u3081\u306b\n\n[\u524d\u56de](http://qiita.com/dynamitecoolguy/items/8529bbf96fd6b278ef1a)\u306f\u3001Channel\u3092\u898b\u3066\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f[Ecto](http://www.phoenixframework.org/docs/ecto-models)\u3001\u305d\u3046DB\u3067\u3059\u3002\n\n\n## \u5916\u3078\n\n\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002Elixir\u3067\u306fEcto\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002Ecto\u306b\u306f\u3001\u73fe\u5728\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u30a2\u30c0\u30d7\u30bf\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\n+ PostgreSQL\n+ MySQL\n+ MSSQL\n+ SQLite3\n+ MongoDB\n\nPhoenix\u3067\u306f\u3001\u6a19\u6e96\u3067\u3001Ecto\u3068PostgreSQL\u306e\u30a2\u30c0\u30d7\u30bf\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u5f8c\u3001Ecto\u3068Postgrex(Elixir\u306ePostgreSQL\u30c9\u30e9\u30a4\u30d0)\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3001\u8a2d\u5b9a\u304c\u5b8c\u4e86\u3057\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\nEcto\u3067\u306f\u3001`phoenix.gen.html`\u3092\u4f7f\u3063\u3066\u30ea\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001`User`\u30ea\u30bd\u30fc\u30b9(\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u3057\u3066`name`, `email`, `bio`, `number_of_pets`)\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n```\n$ mix phoenix.gen.html User users name:string email:string bio:string number_of_pets:integer\n* creating web/controllers/user_controller.ex\n* creating web/templates/user/edit.html.eex\n* creating web/templates/user/form.html.eex\n* creating web/templates/user/index.html.eex\n* creating web/templates/user/new.html.eex\n* creating web/templates/user/show.html.eex\n* creating web/views/user_view.ex\n* creating test/controllers/user_controller_test.exs\n* creating priv/repo/migrations/20160428030023_create_user.exs\n* creating web/models/user.ex\n* creating test/models/user_test.exs\n\nAdd the resource to your browser scope in web/router.ex:\n\n    resources \"/users\", UserController\n\nRemember to update your repository by running migrations:\n\n    $ mix ecto.migrate\n```\n\nmigration, controller, controller test, model, model test, view, \u8907\u6570\u306etemplate\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u51fa\u529b\u3055\u308c\u305f\u30b3\u30e1\u30f3\u30c8\u306b\u5f93\u3063\u3066\u3001`web/router.ex`\u306b`resources \"/users\", UserController`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u540c\u3058\u304f\u3001\u30b3\u30e1\u30f3\u30c8\u306b\u5f93\u3063\u3066\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u307e\u3059(`mix ecto.migrate`)\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3088\u7684\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u5834\u5408\u306f\u3001`mix ecto.create`\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nMix\u306f\u3001`MIX_ENV=\u74b0\u5883\u540d`\u3092\u6307\u5b9a\u3057\u306a\u3044\u9650\u308a\u958b\u767a\u74b0\u5883\u3068\u898b\u306a\u3057\u307e\u3059\u3002Ecto\u3067\u306f\u3001Mix\u304b\u3089\u3053\u306e\u74b0\u5883\u3092\u5f15\u304d\u7d99\u3044\u3067\u3001\u4f5c\u6210\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u540d\u306b\u9069\u5f53\u306asuffix\u3092\u4ed8\u4e0e\u3057\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b5\u30fc\u30d0\u306b\u76f4\u63a5\u30ed\u30b0\u30a4\u30f3\u3066\u3057\u3066\u3001\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```\n$ sudo su - postgres\n$ psql \npsql (9.5.2)\nType \"help\" for help.\n\npostgres=# \\connect hello_phoenix_dev\nYou are now connected to database \"hello_phoenix_dev\" as user \"postgres\".\nhello_phoenix_dev=# \\d\n                List of relations\n Schema |       Name        |   Type   |  Owner   \n--------+-------------------+----------+----------\n public | schema_migrations | table    | postgres\n public | users             | table    | postgres\n public | users_id_seq      | sequence | postgres\n(3 rows)\n\nhello_phoenix_dev=# \\d users;\n                                       Table \"public.users\"\n     Column     |            Type             |                     Modifiers                      \n----------------+-----------------------------+----------------------------------------------------\n id             | integer                     | not null default nextval('users_id_seq'::regclass)\n name           | character varying(255)      | \n email          | character varying(255)      | \n bio            | character varying(255)      | \n number_of_pets | integer                     | \n inserted_at    | timestamp without time zone | not null\n updated_at     | timestamp without time zone | not null\nIndexes:\n    \"users_pkey\" PRIMARY KEY, btree (id)\n\n```\n\n`phoenix.gen.html`\u3067\u751f\u6210\u305b\u3055\u308c\u305f\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30bd\u30fc\u30b9\u306f\u3001`priv/repo/migrations`\u306b\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\n\n```\ndefmodule HelloPhoenix.Repo.Migrations.CreateUser do\n  use Ecto.Migration\n\n  def change do\n    create table(:users) do\n      add :name, :string\n      add :email, :string\n      add :bio, :string\n      add :number_of_pets, :integer\n\n      timestamps\n    end\n\n  end\nend\n```\n\n`inserted_at`, `updated_at`\u306f\u3001\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u306e`timestamps/0`\u95a2\u6570\u3067\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001`id`\u306f\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\u306a\u304f\u3066\u3082\u3001\u6697\u9ed9\u7684\u306bprimary key\u3068\u3057\u3066\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n### \u30ea\u30dd\u30b8\u30c8\u30ea\n\n`HelloPhoenix.Repo`\u30e2\u30b8\u30e5\u30fc\u30eb(lib/hello_phoenix/repo.ex)\u306f\u3001Phoenix\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3092\u884c\u3046\u57fa\u672c\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n\n```\ndefmodule HelloPhoenix.Repo do\n  use Ecto.Repo, otp_app: :hello_phoenix\nend\n```\n\n\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4e3b\u306a\u5f79\u5272\u306f\u4e8c\u3064\u3067\u3059\u3002\u4e00\u3064\u76ee\u306f\u3001`Ecto.Repo`\u304b\u3089query\u7528\u306e\u95a2\u6570\u3092\u5f15\u7528\u3059\u308b\u3053\u3068\u3068\u3001`opt_app`\u540d\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n`phoenix.new`\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u305f\u3068\u304d\u3001\u540c\u69d8\u306b\u8a2d\u5b9a\u3082\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u8a2d\u5b9a\u306f\u3001`config/dev.exs`\u306b\u3042\u308a\u307e\u3059\u3002\n\n```\n. . .\n# Configure your database\nconfig :hello_phoenix, HelloPhoenix.Repo,\n  adapter: Ecto.Adapters.Postgres,\n  username: \"postgres\",\n  password: \"postgres\",\n  database: \"hello_phoenix_dev\",\n  hostname: \"localhost\",\n```\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u8a18\u8f09\u306f\u3001`opt_app`\u306e\u540d\u524d\u3068\u3001Repo\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u6307\u5b9a\u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30a2\u30c0\u30d7\u30bf\u306bPostgres\u3092\u30bb\u30c3\u30c8\u3057\u3001\u30ed\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u60c5\u5831\u304c\u8a18\u8f09\u3055\u308c\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u308c\u3089\u306f\u5b9f\u969b\u306b\u63a5\u7d9a\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\u306b\u76f4\u63a5\u5909\u66f4\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\u540c\u69d8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u3001\u4ed6\u306e\u74b0\u5883\u7528(`config/test.exs`\u3084`config/prod.secret.exs`)\u306b\u3082\u3042\u308a\u307e\u3059\u3002\n\n### \u30e2\u30c7\u30eb\n\nEcto\u306e\u30e2\u30c7\u30eb\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u95a2\u6570\u3084\u30b9\u30ad\u30fc\u30de\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306a\u3069\u304b\u3089\u69cb\u6210\u3055\u308c\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306b\u306f\u3001\u4ed6\u306e\u30e2\u30c7\u30eb\u3068\u306e\u95a2\u9023\u3084\u3001validation\u3001changeset\u306e\u53d6\u308a\u6271\u3044\u3082\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u5148\u307b\u3069\u5b9a\u7fa9\u3055\u308c\u305fuser\u306e\u30e2\u30c7\u30eb(`web/models/user.ex`)\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\ndefmodule HelloPhoenix.User do\n  use HelloPhoenix.Web, :model\n\n  schema \"users\" do\n    field :name, :string\n    field :email, :string\n    field :bio, :string\n    field :number_of_pets, :integer\n\n    timestamps\n  end\n\n  @required_fields ~w(name email bio number_of_pets)\n  @optional_fields ~w()\n\n  @doc \"\"\"\n  Creates a changeset based on the `model` and `params`.\n\n  If no params are provided, an invalid changeset is returned\n  with no validation performed.\n  \"\"\"\n  def changeset(model, params \\\\ :empty) do\n    model\n    |> cast(params, @required_fields, @optional_fields)\n  end\nend\n```\n\n### Changeset\u3068Validation\n\nChangeset\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30c7\u30fc\u30bf\u52a0\u5de5\u3092\u884c\u3046\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3059\u3002\u3053\u306e\u52a0\u5de5\u306b\u306f\u3001\u578b\u30ad\u30e3\u30b9\u30c8\u3001validataion\u3001\u5916\u90e8\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u308b\u4f55\u3089\u304b\u306e\u30d5\u30a3\u30eb\u30bf\u306a\u3069\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u308bchangeset\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```\n  def changeset(model, params \\\\ :empty) do\n    model\n    |> cast(params, @required_fields, @optional_fields)\n  end\n```\n\n`cast/4`\u95a2\u6570\u306f\u3001\u30c7\u30fc\u30bf\u3092`@required_fields`\u3068`@optional_fields`\u306b\u632f\u308a\u5206\u3051\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u304crequired\u3067\u3059\u3002\n\u73fe\u72b6\u306e\u52d5\u4f5c\u3092\u5c11\u3057\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n$ iex -S mix phoenix.server\n```\n>HelloPhoenix.User\u3092User\u306b\n\n```\niex(1)> alias HelloPhoenix.User\n```\n\n>\u5168\u3066\u7a7a\u30c7\u30fc\u30bf\u3002error\u3042\u308a\u3002valid?\u304cfalse\u306b\u306a\u308b\n\n```\niex(2)> changeset = User.changeset(%User{}, %{})\n%Ecto.Changeset{action: nil, changes: %{}, constraints: [],\n errors: [name: \"can't be blank\", email: \"can't be blank\", bio: \"can't be blank\", number_of_pets: \"can't be blank\"],\n filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{}, prepare: [], repo: nil, \n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: false, validations: []}\n```\n\n>`required_fields`(number_of_pets)\u304c\u7a7a\u30c7\u30fc\u30bf\u3002error\u3042\u308a\u3002valid?\u304cfalse\u306b\u306a\u308b\n\n```\niex(3)> changeset2 = User.changeset(%User{}, %{name: \"\u540d\u524d\", email: \"hogehoge@hogehoge\", bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\"})\n%Ecto.Changeset{action: nil,\n changes: %{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\"}, constraints: [],\n errors: [number_of_pets: \"can't be blank\"],\n filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{\"bio\" => \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", \"email\" => \"hogehoge@hogehoge\", \"name\" => \"\u540d\u524d\"}, prepare: [], repo: nil,\n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: false, validations: []}\n```\n\n>\u5168\u30c7\u30fc\u30bf\u3042\u308a\u3002error\u306a\u3057\u3002valid?\u304ctrue\u306b\u306a\u308b\n\n```\niex(4)> changeset3 = User.changeset(%User{}, %{name: \"\u540d\u524d\", email: \"hogehoge@hogehoge\", bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", number_of_pets: 3})\n%Ecto.Changeset{action: nil,\n changes: %{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\", number_of_pets: 3}, constraints: [],\n errors: [], filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{\"bio\" => \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", \"email\" => \"hogehoge@hogehoge\", \"name\" => \"\u540d\u524d\", \"number_of_pets\" => 3}, prepare: [], repo: nil,\n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: true, validations: []}\n```\n\n>\u5168\u30c7\u30fc\u30bf\u3068\u5b9a\u7fa9\u5916\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3042\u308a\u3002error\u306a\u3057\u3002valid?\u304ctrue\u306b\u306a\u308b\n\n```\niex(5)> changeset4 = User.changeset(%User{}, %{name: \"\u540d\u524d\", email: \"hogehoge@hogehoge\", bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", number_of_pets: 3, extra: \"\u30a8\u30af\u30b9\u30c8\u30e9\"})\n%Ecto.Changeset{action: nil,\n changes: %{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\", number_of_pets: 3}, constraints: [],\n errors: [], filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{\"bio\" => \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", \"email\" => \"hogehoge@hogehoge\", \"extra\" => \"\u30a8\u30af\u30b9\u30c8\u30e9\", \"name\" => \"\u540d\u524d\", \"number_of_pets\" => 3}, prepare: [], repo: nil,\n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: true, validations: []}\n```\n\n>changeset4\u304b\u3089\u306e\u4e00\u90e8\u5909\u66f4\u3002error\u306a\u3057\u3002valid?\u304ctrue\u306b\u306a\u308b\n\n```\niex(6)> changeset5 = User.changeset(changeset4, %{name: \"\u3042\u305f\u3089\u3057\u3044\u540d\u524d\", number_of_pets: 1, extra: \"hoge\", extra2: \"fuga\"}) \n%Ecto.Changeset{action: nil,\n changes: %{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u3042\u305f\u3089\u3057\u3044\u540d\u524d\", number_of_pets: 1}, constraints: [],\n errors: [], filters: %{},\n model: %HelloPhoenix.User{__meta__: #Ecto.Schema.Metadata<:built>, bio: nil, email: nil, id: nil, inserted_at: nil, name: nil, number_of_pets: nil, updated_at: nil},\n optional: [], opts: [],\n params: %{\"bio\" => \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", \"email\" => \"hogehoge@hogehoge\", \"extra\" => \"hoge\", \"extra2\" => \"fuga\", \"name\" => \"\u3042\u305f\u3089\u3057\u3044\u540d\u524d\", \"number_of_pets\" => 1}, prepare: [], repo: nil,\n required: [:name, :email, :bio, :number_of_pets],\n types: %{bio: :string, email: :string, id: :id, inserted_at: Ecto.DateTime, name: :string, number_of_pets: :integer, updated_at: Ecto.DateTime},\n valid?: true, validations: []}\n```\n\n>\u305d\u308c\u305e\u308c\u306echangeset (\u672a\u5b9a\u7fa9\u306e\u30d1\u30e9\u30e1\u30fc\u30bfextra, extra2\u306fchangeset\u304b\u3089\u9664\u53bb\u3055\u308c\u3066\u3044\u308b)\n\n```\niex(7)> changeset.changes\n%{}\niex(8)> changeset2.changes\n%{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\"}\niex(9)> changeset3.changes\n%{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\", number_of_pets: 3}\niex(10)> changeset4.changes\n%{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u540d\u524d\", number_of_pets: 3}\niex(11)> changeset5.changes\n%{bio: \"RX\u30d0\u30a4\u30aa\u30e9\u30a4\u30c0\u30fc\", email: \"hogehoge@hogehoge\", name: \"\u3042\u305f\u3089\u3057\u3044\u540d\u524d\", number_of_pets: 1}\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u3001\u5225\u306evalidation\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001`bio`\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u6700\u5c112\u6587\u5b57\u3001\u6700\u5927140\u6587\u5b57\u5fc5\u8981\u3067\u3042\u308a\u3001\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306b\"@\"\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092validate\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\n```\n  def changeset(model, params \\\\ :empty) do\n    model\n    |> cast(params, @required_fields, @optional_fields)\n    |> validate_length(:bio, min: 2)\n    |> validate_length(:bio, max: 140)\n    |> validate_format(:email, ~r/@/)\n  end\n```\n\n### Controller\n\nController\u3067\u3069\u306e\u3088\u3046\u306bEcto\u3092\u4f7f\u7528\u3059\u308b\u304b\u3092\u898b\u308b\u305f\u3081\u306b\u3001\u5148\u307b\u3069`mix phoenix.gen.html`\u3067\u4f5c\u6210\u3055\u308c\u305f`HelloPhoenix.UserController`\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```\ndefmodule HelloPhoenix.UserController do\n. . .\n  alias HelloPhoenix.User\n\n  plug :scrub_params, \"user\" when action in [:create, :update]\n. . .\nend\n```\n\n\u524d\u306b\u3082\u51fa\u3066\u3044\u307e\u3059\u304c\u3001`alias HelloPhoenix.User`\u306f\u3001`%HelloPhoenix.User{}`\u3068\u66f8\u304f\u4ee3\u308f\u308a\u306b`%User{}`\u3068\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u5b9a\u7fa9\u3067\u3059\u3002\n\n`plug :scrub_params, \"user\" when action in [:create, :update]`\u306b\u3042\u308b`scrub_params/2`\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3057\u3001\u7a7a\u6587\u5b57\u5217\u3092nil\u306b\u5909\u63db\u3059\u308bPlug\u3067\u3059\u3002\n\u306a\u304a\u3001`when action in [:create, :update]`\u306fPipeline\u3067\u4f7f\u7528\u3067\u304d\u308bGuard\u3067\u3059\u3002\u8aac\u660e\u306f[\u3053\u3061\u3089](https://hexdocs.pm/phoenix/Phoenix.Controller.Pipeline.html#summary)\u306b\u3042\u308a\u307e\u3059\u304c\u3001`conn`\u3001`action`(atom)\u3001`controller`(alias *(UserController? \u8981\u78ba\u8a8d)* )\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n**`index`\u30a2\u30af\u30b7\u30e7\u30f3**\n\n```\n  def index(conn, _params) do\n    users = Repo.all(User)\n    render(conn, \"index.html\", users: users)\n  end\n```\n\n\u3053\u308c\u306f\u3001DB\u304b\u3089\u5168\u30e6\u30fc\u30b6\u3092\u53d6\u5f97\u3057\u3066\u3001Template`index.html.eex`\u306b\u6e21\u3059\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\u5168\u30e6\u30fc\u30b6\u53d6\u5f97\u306f\u3001`Repo.all/1`\u306b\u30e2\u30c7\u30eb\u540d(alias)\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u3053\u3053\u3067\u306fChangeset\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002Changeset\u306f\u3001DB\u3078\u306e\u30c7\u30fc\u30bf\u633f\u5165\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308a\u3001DB\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u306f\u6b63\u3057\u3044\u306f\u305a\u3060\u304b\u3089\u3067\u3059\u3002\n\n**`new`\u30a2\u30af\u30b7\u30e7\u30f3**\n\n```\ndef new(conn, _params) do\n  changeset = User.changeset(%User{})\n  render(conn, \"new.html\", changeset: changeset)\nend\n```\n\n\u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3067\u306fChangeset\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u3001`new`\u30a2\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u308f\u305a\u306b\u7a7a\u306eChangeset\u3092\u4f7f\u3063\u3066Template \"new.html.eex\"\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u3053\u306e\u5f8c\u306e`create`\u30a2\u30af\u30b7\u30e7\u30f3\u3067\u3001\u5fc5\u9808\u9805\u76ee\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u306a\u3044\u306a\u3069\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u3082\u3001\"new.html.eex\"\u3092\u8868\u793a\u3059\u308b\u304b\u3089\u3067\u3059(\u3053\u306e\u3068\u304d\u306f\u3001Changeset\u306b\u30e6\u30fc\u30b6\u306b\u5165\u529b\u3057\u305f\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059)\u3002\n\n**`create`\u30a2\u30af\u30b7\u30e7\u30f3**\n\n\"new.html\"\u3067form\u304csubmit\u3055\u308c\u308b\u3068\u3001`create`\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\n```\ndef create(conn, %{\"user\" => user_params}) do\n  changeset = User.changeset(%User{}, user_params)\n\n  case Repo.insert(changeset) do\n    {:ok, _user} ->\n      conn\n      |> put_flash(:info, \"User created successfully.\")\n      |> redirect(to: user_path(conn, :index))\n    {:error, changeset} ->\n      render(conn, \"new.html\", changeset: changeset)\n  end\nend\n```\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u3063\u3066\"user\"\u30ad\u30fc\u306e\u5024\u3092\u4f7f\u3063\u3066\u3001changeset\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002DB\u3078\u306einsert\u304c\u6210\u529f\u3059\u308c\u3070\u3001Flash\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30bb\u30c3\u30c8\u3057\u3066`index`\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002\u5931\u6557\u3059\u308c\u3070\u3001\u3082\u3046\u4e00\u5ea6\"new.html\"\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n**`show`\u30a2\u30af\u30b7\u30e7\u30f3**\n\n```\ndef show(conn, %{\"id\" => id}) do\n  user = Repo.get!(User, id)\n  render(conn, \"show.html\", user: user)\nend\n```\n\n`Repo.get!`\u3067id\u306b\u5bfe\u5fdc\u3057\u305f\u30e6\u30fc\u30b6\u3092\u53d6\u5f97\u3057\u3001\"show.html.eex\"Template\u3092\u8868\u793a\u3057\u307e\u3059\u3002`index`\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u540c\u69d8\u306b\u3001\u3053\u3053\u3067\u306fChangeset\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002\n\n**`edit`\u30a2\u30af\u30b7\u30e7\u30f3**\n\n```\n  def edit(conn, %{\"id\" => id}) do\n    user = Repo.get!(User, id)\n    changeset = User.changeset(user)\n    render(conn, \"edit.html\", user: user, changeset: changeset)\n  end\n```\n\n`edit`\u306f\u3001`show`\u3068`new`\u3092\u8db3\u3057\u305f\u3088\u3046\u306a\u51e6\u7406\u3067\u3059\u3002`Repo.get!`\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u7de8\u96c6\u3059\u308b\u305f\u3081Template\"edit.html.eex\"\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n\"edit.html\"\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8868\u793a\u306b`changeset`\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u7528\u306e\u30d1\u30b9\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306b`user`\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\"edit.html\"\u306f\u3001\u6b21\u306e`update`\u30a2\u30af\u30b7\u30e7\u30f3\u3067\u5165\u529b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u306b\u3082\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001`changeset`\u306b\u306f\u3001\u30e6\u30fc\u30b6\u304c\u5165\u529b\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30e6\u30fc\u30b6\u304c\u5165\u529b\u3057\u305f\u5024\u304c\u305d\u306e\u307e\u307e\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059(`user`\u3092\u4f7f\u7528\u3057\u3066\u3057\u307e\u3046\u3068\u3001DB\u306b\u5165\u3063\u3066\u3044\u308b\u5024\u304c\u53c2\u7167\u3055\u308c\u3066\u3057\u307e\u3046)\u3002\n\n**`update`\u30a2\u30af\u30b7\u30e7\u30f3**\n\n```\n  def update(conn, %{\"id\" => id, \"user\" => user_params}) do\n    user = Repo.get!(User, id)\n    changeset = User.changeset(user, user_params)\n\n    case Repo.update(changeset) do\n      {:ok, user} ->\n        conn\n        |> put_flash(:info, \"User updated successfully.\")\n        |> redirect(to: user_path(conn, :show, user))\n      {:error, changeset} ->\n        render(conn, \"edit.html\", user: user, changeset: changeset)\n    end\n  end\n```\n\n`update`\u30a2\u30af\u30b7\u30e7\u30f3\u306f`create`\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u304c\u3001`Repo.insert/1`\u306e\u4ee3\u308f\u308a\u306b`Repo.update/1`\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001`Repo.update/1`\u3067\u306f\u3001\u5024\u306b\u5909\u66f4\u304c\u7121\u3044\u5834\u5408\u306b\u306fDB\u306b\u30c7\u30fc\u30bf\u3092\u9001\u3089\u306a\u3044\u3068\u3044\u3063\u305f\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n**`delete`\u30a2\u30af\u30b7\u30e7\u30f3**\n\n```\n  def delete(conn, %{\"id\" => id}) do\n    user = Repo.get!(User, id)\n\n    # Here we use delete! (with a bang) because we expect\n    # it to always work (and if it does not, it will raise).\n    Repo.delete!(user)\n\n    conn\n    |> put_flash(:info, \"User deleted successfully.\")\n    |> redirect(to: user_path(conn, :index))\n  end\n```\n\n\u6700\u521d\u306b`Repo.get!`\u306fDB\u4e0a\u306e\u30ec\u30b3\u30fc\u30c9id\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u5f8c`Repo.delete!`\u306b\u3088\u308a\u30ec\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u30ec\u30b3\u30fc\u30c9id\u304c\u7121\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\"!\"\u4ed8\u304d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u524a\u9664\u5f8c\u3001Flash\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30bb\u30c3\u30c8\u3057\u3001`index`\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u307e\u3059\u3002\n\n### Data Relationship And Dependencies\n\n\u3053\u3053\u3067\u3001\u5358\u7d14\u306a\u52d5\u753b\u6295\u7a3f\u30b5\u30a4\u30c8\u3092\u4f5c\u308b\u4f8b\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\u4e0a\u8a18\u306e\u30e6\u30fc\u30b6\u7ba1\u7406\u306b\u8ffd\u52a0\u3057\u3066\u3001\u6295\u7a3f\u52d5\u753b\u306e\u7ba1\u7406\u3082\u884c\u3044\u307e\u3059\u3002\n\u52d5\u753b(`Video`)\u30e2\u30c7\u30eb\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3059\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n```\n$ mix phoenix.gen.model Video videos name:string approved_at:datetime description:text likes:integer views:integer user_id:references:users\n* creating priv/repo/migrations/20160513062728_create_video.exs\n* creating web/models/video.ex\n* creating test/models/video_test.exs\n\n$ mix ecto.migrate\n```\n\n\u306a\u304a\u3001Migration\u7528\u306e\u30b9\u30af\u30ea\u30d7\u30c8(`priv/depo/migrations/....._create_video.exs`)\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\ndefmodule HelloPhoenix.Repo.Migrations.CreateVideo do\n  use Ecto.Migration\n\n  def change do\n    create table(:videos) do\n      add :name, :string\n      add :approved_at, :datetime\n      add :description, :text\n      add :likes, :integer\n      add :views, :integer\n      add :user_id, references(:users, on_delete: :nothing)\n\n      timestamps\n    end\n    create index(:videos, [:user_id])\n\n  end\nend\n```\n\nRelationship\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u3001\u305f\u3068\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aAPI\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n**`Schema.has_many/3`**\n\n\u89aa\u5bfe\u5b50\u306e\u95a2\u9023\u304c\u30011\u5bfe\u591a\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u4f8b\u3060\u3068\u3001\u30e6\u30fc\u30b6\u2192\u2192\u52d5\u753b\u306e\u95a2\u9023\u3067\u3059\u3002\n\n**`Schema.belongs_to/3`**\n\n\u5b50\u5bfe\u89aa\u306e\u95a2\u9023\u304c\u30011\u5bfe1\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u4f8b\u3060\u3068\u3001\u52d5\u753b\u2192\u30e6\u30fc\u30b6\u306e\u95a2\u9023\u3067\u3059\u3002\n\n**`Schema.has_one/3`**\n\n\u89aa\u5bfe\u5b50\u306e\u95a2\u9023\u304c\u30011\u5bfe1\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u4ed6\u306b\u3001`embeds_many`\u3001`embeds_one`\u304c\u3042\u308a\u307e\u3059 (\u305d\u308c\u305e\u308c\u306e\u30e2\u30c7\u30eb\u304c\u72ec\u7acb\u3057\u3066\u5b58\u5728\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5b8c\u5168\u306b\u89aa\u5b50\u95a2\u4fc2\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u8868\u3059)\u3002\n\u306a\u304a\u3001\u591a\u5bfe\u591a\u306e\u95a2\u9023\u306e\u5834\u5408\u306b\u306f\u3001\u95a2\u9023\u30e2\u30c7\u30eb\u3092\u4f5c\u308b(A \u2190 \u2192\u2192 C \u2190\u2190 \u2192 B)\u3088\u3046\u3067\u3059\u3002\n\nUser\u30e2\u30c7\u30eb(`wbeb/models/user.ex`)\u306b\u3000`has_many`\u95a2\u9023\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```\n  schema \"users\" do\n    field :name, :string\n    field :email, :string\n    field :bio, :string\n    field :number_of_pets, :integer\n\n    has_many :videos, HelloPhoenix.Video\n    timestamps\n  end\n```\n\nVideo\u30e2\u30c7\u30eb\u306f\u3001\u751f\u6210\u6642\u306b`user_id:references:users`\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u81ea\u52d5\u7684\u306b`belongs_to`\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001`user_id`\u3092field\u306b\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001@required_fields\u306buser_id\u306f\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```\ndefmodule HelloPhoenix.Video do\n  use HelloPhoenix.Web, :model\n\n  schema \"videos\" do\n    field :name, :string\n    field :approved_at, Ecto.DateTime\n    field :description, :string\n    field :likes, :integer\n    field :views, :integer\n    belongs_to :user, HelloPhoenix.User\n\n    timestamps\n  end\n\n  @required_fields ~w(name approved_at description likes views user_id)\n```\n\n`web/controllers/user_controller.ex`\u3082\u3001\u3053\u306e\u95a2\u9023\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b\u4fee\u6b63\u3092\u884c\u3044\u307e\u3059\u3002\n\n```\ndefmodule HelloPhoenix.UserController do\n  ...\n  def index(conn, _params) do\n    users = User |> Repo.all |> Repo.preload [:videos]\n    render(conn, \"index.html\", users: users)\n  end\n\n  def show(conn, %{\"id\" => id}) do\n    user = User |> Repo.get!(id) |> Repo.preload [:videos]\n    render(conn, \"show.html\", user: user)\n  end\n  ...\nend\n```\n\n`Repo.preload/2`\u306b\u3088\u3063\u3066\u3001\u3044\u3044\u611f\u3058\u3067Video\u30e2\u30c7\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n"}