{"context": "Nextremer Advent Calendar 2016\u306e19\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u9854\u753b\u50cf\u304b\u3089\u5e74\u9f62\u3084\u6027\u5225\u3092\u5224\u5b9a\u3059\u308bAPI\u306f\u591a\u304f\u3042\u308a\u307e\u3059\u304c\u3001\u3069\u306eAPI\u304c\u826f\u3044\u304b\u6c17\u306b\u306a\u308a\u8a66\u3057\u3066\u307f\u307e\u3057\u305f(2016\u5e7412\u6708\u6642\u70b9)\u3002\n\u4eca\u56de\u6bd4\u8f03\u3057\u305f\u306e\u306f\u6b21\u306e\uff14\u3064\u3067\u3059\u3002API\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u53c2\u8003\u306e\u305f\u3081\u30d5\u30ea\u30fc\u306e\u5e74\u9f62\u30fb\u6027\u5225\u30e2\u30c7\u30eb\u3082\u6bd4\u8f03\u3057\u307e\u3057\u305f\u3002\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001FaceAPI\u304c\u826f\u304b\u3063\u305f\u3067\u3059\u3002\n\nMicrosoft\u793e: Face API\n\nIBM\u793e: Visual Recognition\n\nPUX\u793e: \u9854\u691c\u51fa(\u8a55\u4fa1\u7248)\n\n\u305d\u306e\u4ed6\uff1a\u30d5\u30ea\u30fc\u306e\u5e74\u9f62\u30fb\u6027\u5225\u30e2\u30c7\u30eb\n\n\n\u691c\u8a3c\u306f\u4e0b\u8a18\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3001\u6709\u540d\u4eba\u306eInstagram\u753b\u50cf\u3068\u751f\u5e74\u6708\u65e5\u3092\u7528\u3044\u307e\u3057\u305f\u3002\n\n\u82b8\u80fd\u4ebaInstagram\u30e9\u30f3\u30ad\u30f3\u30b0\n\n\u306a\u304a\u3001\u4eca\u56de\u306f\u6027\u5225\u5224\u5b9a\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6e96\u5099\n\u5404\u7a2eAPI\u306e\u30e6\u30fc\u30b6\u767b\u9332\u3092\u884c\u3044\u3001Python\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u30e6\u30fc\u30b6\u767b\u9332\u306e\u65b9\u6cd5\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\nAPI\u30ad\u30fc\u306e\u6e96\u5099\n\u767b\u9332\u6642\u306b\u53d6\u5f97\u3057\u305fAPI\u30ad\u30fc\u306fconfig\u30d5\u30a1\u30a4\u30eb\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u5404API\u30ad\u30fc\u53d6\u5f97\u306e\u305f\u3081\u306bget_api_key()\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\ncfg = ConfigParser.SafeConfigParser()\ncfg.read('config/api.cfg')\n\ndef get_api_key(section):\n    return cfg.get(section,'key') if cfg.has_section(section) and cfg.has_option(section, 'key') else {}\n\n\nconfig\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n[MSApi]\nkey = (Face API\u306e\u30ad\u30fc)\n\n[IBMApi]\nkey =(Visual Recognition\u306e\u30ad\u30fc)\n\n[PUXApi]\nkey =(PUX \u8a55\u4fa1\u7248API\u306e\u30ad\u30fc)\ndomain = (PUX \u8a55\u4fa1\u7248API\u306e\u30c9\u30e1\u30a4\u30f3)\n\n\nMicrosoft\u793e: Face API\u306e\u4f7f\u7528\npath\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\u5224\u5b9a\u7d50\u679c\u3092gender(\u6027\u5225), age(\u985e\u63a8\u5e74\u9f62)\u306e2\u3064\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\nage\u306f\u5c0f\u6570\u70b9\u307e\u3067\u6c42\u307e\u308a\u307e\u3059\u3002\ndef ms_predict(path):\n    print(\"//// MS ////\")\n    # \u8a72\u5f53\u306eAPI\u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\n    ms_key = get_api_key('MSApi')\n    if ms_key:\n      CF.Key.set(ms_key)\n      with open(path, 'rb') as image_file:\n        result = CF.face.detect(image_file, landmarks=True, attributes='age,gender')\n       # \u9854\u753b\u50cf\u3092\u691c\u51fa\u3057\u305f\u5834\u5408\u306b\u3001gender,age\u306b\u5024\u3092\u5165\u308c\u308b\n       if len(result) > 0:\n        target = result[0][\"faceAttributes\"]\n        res[\"gender\"] = target[\"gender\"]\n        res[\"age\"] = target[\"age\"]\n        print(res)\n      else:\n        print(\"No Face\")\n    return res\n\n\nIBM\u793e: Visual Recognition\u306e\u4f7f\u7528\npath\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\u5224\u5b9a\u7d50\u679c\u3092gender(\u6027\u5225), lo(\u985e\u63a8\u5e74\u9f62\u306e\u4e0b\u9650), hi\uff08\u985e\u63a8\u5e74\u9f62\u306e\u4e0a\u9650)\u306e3\u3064\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\nlo\u3084hi\u306f\u5fc5\u305a\u3057\u3082\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\ndef ibm_predict(path):\n    print(\"//// IBM ////\")\n    # \u8a72\u5f53\u306eAPI\u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\n    ibm_key = get_api_key('IBMApi')\n    if ibm_key:\n      # Visual Recognition \u7121\u6599\u30d7\u30e9\u30f3\u3067\u306f\u3001\u30a4\u30e1\u30fc\u30b8\u306e\u30bf\u30b0\u4ed8\u3051\u304a\u3088\u3073\u9854\u691c\u51fa\u306b\u5bfe\u3057\u3066\u3001Bluemix \u30a2\u30ab\u30a6\u30f3\u30c8 1 \u3064\u306b\u3064\u304d 1 \u65e5\u3042\u305f\u308a 250 \u500b\u306e\u30a4\u30d9\u30f3\u30c8 (\u30a4\u30e1\u30fc\u30b8) \u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n      IBM_recognition = VisualRecognitionV3('2016-05-20', api_key=ibm_key)\n      with open(path, 'rb') as image_file:\n        result = IBM_recognition.detect_faces(images_file=image_file)\n      # \u9854\u753b\u50cf\u3092\u691c\u51fa\u3057\u305f\u5834\u5408\u306b\u3001gender,lo,hi\u306b\u5024\u3092\u5165\u308c\u308b\n      if len(result[\"images\"][0][\"faces\"]) > 0:\n        target = result[\"images\"][0][\"faces\"][0]\n        res[\"gender\"] = target[\"gender\"][\"gender\"]\n        if target[\"age\"].has_key(\"min\"):\n          res[\"lo\"] = target[\"age\"][\"min\"]\n        if target[\"age\"].has_key(\"max\"):\n          res[\"hi\"] = target[\"age\"][\"max\"]\n        print(res)\n      else:\n        print(\"No Face\")\n    return res\n\n\nPUX\u793e: \u9854\u691c\u51fa(\u8a55\u4fa1\u7248)\u306e\u4f7f\u7528\npath\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\u5224\u5b9a\u7d50\u679c\u3092gender(\u6027\u5225), age(\u985e\u63a8\u5e74\u9f62)\u306e2\u3064\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n#PUX\u306edetectFaceAPI\u3092\u4f7f\u7528\ndef pux_predict(path):\n    print(\"//// PUX ////\")\n    # \u8a72\u5f53\u306eAPI\u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\n    pux_key = get_api_key('PUXApi')\n    if pux_key:\n      url = 'http://eval.api.polestars.jp:8080/webapi/face.do'\n      # API\u306e\u898f\u7d04\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u4e00\u6642\u7684\u306bjpeg\u306b\u5909\u63db\n      im = Image.open(path)\n      im.save(\"/tmp/tmp.jpg\", \"JPEG\")\n      with open(\"/tmp/tmp.jpg\", 'rb') as image_file:\n        data = {\n          'apiKey': pux_key,\n          'inputBase64': base64.b64encode(image_file.read()).decode(),\n          'response': 'json'\n        }\n        result = json.loads(requests.post(url, data, headers={'Content-Type': 'application/x-www-form-urlencoded'}).text)\n      # \u9854\u753b\u50cf\u3092\u691c\u51fa\u3057\u305f\u5834\u5408\u306b\u3001gender,age\u306b\u5024\u3092\u5165\u308c\u308b\n      if result[\"results\"][\"faceRecognition\"].has_key(\"detectionFaceInfo\"):\n        target = result[\"results\"][\"faceRecognition\"][\"detectionFaceInfo\"][0]\n        res[\"gender\"] = \"Male\" if str(target[\"genderJudge\"][\"genderResult\"]) == \"0\" else \"Female\"\n        res[\"age\"] = target[\"ageJudge\"][\"ageResult\"]\n        print(res)\n      else:\n        print(\"No Face\")\n    return res\n\n\n\u305d\u306e\u4ed6\uff1a\u30d5\u30ea\u30fc\u306e\u5e74\u9f62\u30fb\u6027\u5225\u30e2\u30c7\u30eb\u306e\u4f7f\u7528\npath\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\u5224\u5b9a\u7d50\u679c\u3092gender(\u6027\u5225), lo(\u985e\u63a8\u5e74\u9f62\u306e\u4e0b\u9650), hi\uff08\u985e\u63a8\u5e74\u9f62\u306e\u4e0a\u9650)\u306e3\u3064\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3001\u5165\u51fa\u529b\u3092\u4e0b\u8a18\u306e\u5f62\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\ndef org_predict(path):\n    print(\"//// Original ////\")\n    input_image = caffe.io.load_image(path)\n\n    # \u9854\u753b\u50cf\u3092\u691c\u51fa\u3057\u305f\u5834\u5408\u306b\u3001gender,lo,hi\u306b\u5024\u3092\u5165\u308c\u308b\n    res[\"gender\"] = _predict_gender(input_image)\n    res[\"lo\"], res[\"hi\"] = _predict_age(input_image)\n    print(res)\n    return res\n\n\n\u30c7\u30fc\u30bf\u306e\u6e96\u5099\nInstagram\u3088\u308a\u3001\u672c\u4eba\u306e\u307f\u5199\u3063\u305f\u5199\u771f\u30921~10\u679a\u96c6\u3081\u307e\u3057\u305f\u3002\u5bfe\u8c61\u5e74\u9f62\u306f20\u6b73\u301c83\u6b73\u3067\u3059\u3002\n175\u540d\u5206(\u7537\u6027:73\u540d\u3001\u5973\u6027:102\u540d)\u3067\u3001\u8a08816\u679a\u96c6\u3081\u307e\u3057\u305f\u3002\n\u3061\u306a\u307f\u306b\u3001\u4eca\u56de\u4e00\u756a\u5927\u5909\u3060\u3063\u305f\u306e\u306f\u753b\u50cf\u96c6\u3081\u3067\u3057\u305f\n\u5bfe\u8c61\u8005\u306e\u5e74\u9f62\u5206\u5e03\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n\n\u5b9f\u9a13\u7d50\u679c(\u6027\u5225\u5224\u5b9a)\n\n\u6b63\u89e3\u3068\u4e0d\u6b63\u89e3\u3001\u975e\u691c\u51fa\u6570\n\n\n\u6b63\u89e3\uff1a\u7537\u6027\u3092\u7537\u6027\u3001\u5973\u6027\u3092\u5973\u6027\u3068\u5224\u5b9a\u3057\u305f\u6570\n\u4e0d\u6b63\u89e3\uff1a\u7537\u6027\u3092\u5973\u6027\u3001\u5973\u6027\u3092\u7537\u6027\u3068\u5224\u5b9a\u3057\u305f\u6570\n\u975e\u691c\u51fa\uff1a\u9854\u306e\u8a8d\u8b58\u304c\u51fa\u6765\u306a\u304b\u3063\u305f\u6570\uff08\u6b63\u89e3 + \u4e0d\u6b63\u89e3 + \u975e\u691c\u51fa = 816\uff09\n\u6b63\u89e3\u7387\uff1a\u9854\u3092\u8a8d\u8b58\u3057\u305f\u5834\u5408\u306e\u6b63\u89e3\u306e\u5272\u5408\uff08\u6b63\u89e3 / (\u6b63\u89e3 + \u4e0d\u6b63\u89e3)\uff09\n\u691c\u51fa\u7387\uff1a\u9854\u3092\u8a8d\u8b58\u3057\u305f\u5272\u5408\uff08(\u6b63\u89e3 + \u4e0d\u6b63\u89e3)/(\u6b63\u89e3+\u4e0d\u6b63\u89e3+ \u975e\u691c\u51fa)\uff09\n\n\n\u7537\u6027\u3068\u5973\u6027\u306e\u5224\u5b9a\u6570\n\n\n\u7537\u6027\uff1a\u7537\u6027\u3060\u3068\u5224\u5b9a\u3057\u305f\u6570\n\u5973\u6027\uff1a\u5973\u6027\u3060\u3068\u5224\u5b9a\u3057\u305f\u6570\n\n\n\u8003\u5bdf\n\n\nFaceAPI\uff1a\u6b63\u89e3\u7387\u304c0.96\u3068\u6700\u3082\u9ad8\u304f\u3001\u691c\u51fa\u7387\u306f0.86\u3068\u6700\u3082\u4f4e\u3044\u3002\u9854\u691c\u51fa\u304c\u53b3\u5bc6\u306b\u884c\u308f\u308c\u3001\u9ad8\u3044\u6b63\u89e3\u7387\u306b\u306a\u3063\u305f\u306e\u304b\u3082\u3002\n\nVisual Recognition\uff1a\u6b63\u89e3\u7387\u304c0.8\u3068\u4f4e\u304f\u3001\u691c\u51fa\u7387\u306f0.99\u3068\u975e\u5e38\u306b\u9ad8\u3044\u3002\u9854\u8a8d\u8b58\u304c\u4e0d\u6b63\u78ba\u306a\u5834\u5408\u3067\u3082\u306a\u3093\u3089\u304b\u306e\u5024\u3092\u8fd4\u3057\u3066\u3044\u308b\u307f\u305f\u3044\u3002\n\nPUX\u306e\u9854\u691c\u51fa(\u8a55\u4fa1\u7248)\uff1a\u6b63\u89e3\u7387\u304c0.82\u3067\u3001\u691c\u51fa\u7387\u306f0.87\u3060\u3063\u305f\u3002\u65e5\u672c\u88fdAPI\u306e\u305f\u3081\u6709\u5229\u304b\u3068\u601d\u3063\u3066\u307e\u3057\u305f\u304c\u3001\u610f\u5916\u306a\u7d50\u679c\u3067\u3057\u305f\u3002\n\n\u305d\u306e\u4ed6\u306e\u30d5\u30ea\u30fc\u306e\u5e74\u9f62\u30fb\u6027\u5225\u30e2\u30c7\u30eb\uff1a\u6b63\u89e3\u7387\u304c0.57\u3068\u6700\u3082\u4f4e\u304f\u3001\u691c\u51fa\u7387\u306f1\u3067\u6700\u3082\u9ad8\u3044\u3002\u9854\u8a8d\u8b58\u304c\u4e0d\u6b63\u78ba\u3060\u3068\u7537\u6027\u3068\u3057\u3066\u5224\u5b9a\u3057\u3066\u305d\u3046\u3067\u3059\uff08\u5b9f\u88c5\u306b\u3088\u308a\u307e\u3059\u304c\uff09\n\n\u6b63\u89e3\u7387\u3068\u691c\u51fa\u7387\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u307e\u3068\u3081\n\n\u6b63\u89e3\u7387\u3067\u8003\u3048\u308b\u3068\u3001FaceAPI\u304c\u6700\u3082\u6027\u5225\u5224\u5b9a\u306b\u4f7f\u3048\u308b\n\u691c\u51fa\u7387\u3067\u8003\u3048\u308b\u3068\u3001Visual Recognition\u304c\u30d0\u30e9\u30f3\u30b9\u304c\u826f\u3044\n\n\u4eca\u56de\u306f\u3001\u6027\u5225\u5224\u5b9a\u306e\u307f\u3067\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\u500b\u4eba\u7684\u306b\u306f\u3001API\u306e\u30b3\u30fc\u30eb\u6570\u304c\u670830,000\u56de\u307e\u3067\u7121\u6599\u3067\u3001\u6027\u80fd\u3082\u826f\u3044FaceAPI\u304c\u4f7f\u3044\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u308c\u3068\u3001\u306f\u25ef\u306a\u611b\u306e\u6027\u5225\u306e\u771f\u5024\u306b\u8ff7\u3044\u307e\u3057\u305f\u3002\n\uff08\u3061\u306a\u307f\u306b\u3001\u6027\u5225\u5224\u5b9a\u3060\u3051\u306a\u3089\u3001Amazon Rekognition\u3082\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u306e\u3046\u3061\u6bd4\u8f03\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff09\n\n\u4eca\u5f8c\n\u6b21\u56de\u306f\u5e74\u9f62\u5224\u5b9a\u306b\u3064\u3044\u3066\u8a18\u4e8b\u306b\u3057\u307e\u3059\u3002\u65e5\u672c\u88fd\u306e\u30e2\u30c7\u30eb\u3067\u3042\u308bPUX\u306e\u6027\u80fd\u304c\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n[Nextremer Advent Calendar 2016](http://qiita.com/advent-calendar/2016/nextremer)\u306e19\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\u9854\u753b\u50cf\u304b\u3089\u5e74\u9f62\u3084\u6027\u5225\u3092\u5224\u5b9a\u3059\u308bAPI\u306f\u591a\u304f\u3042\u308a\u307e\u3059\u304c\u3001\u3069\u306eAPI\u304c\u826f\u3044\u304b\u6c17\u306b\u306a\u308a\u8a66\u3057\u3066\u307f\u307e\u3057\u305f(2016\u5e7412\u6708\u6642\u70b9)\u3002\n\n\u4eca\u56de\u6bd4\u8f03\u3057\u305f\u306e\u306f\u6b21\u306e\uff14\u3064\u3067\u3059\u3002API\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u53c2\u8003\u306e\u305f\u3081\u30d5\u30ea\u30fc\u306e\u5e74\u9f62\u30fb\u6027\u5225\u30e2\u30c7\u30eb\u3082\u6bd4\u8f03\u3057\u307e\u3057\u305f\u3002\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001FaceAPI\u304c\u826f\u304b\u3063\u305f\u3067\u3059\u3002\n\n- Microsoft\u793e: [Face API](https://azure.microsoft.com/ja-jp/services/cognitive-services/face/)\n- IBM\u793e: [Visual Recognition](https://www.ibm.com/watson/developercloud/visual-recognition.html)\n- PUX\u793e: [\u9854\u691c\u51fa(\u8a55\u4fa1\u7248)](http://www.pux.co.jp/%E8%A3%BD%E5%93%81%E6%83%85%E5%A0%B1/%E7%94%BB%E5%83%8F%E8%AA%8D%E8%AD%98/%E9%A1%94%E8%AA%8D%E8%AD%98/)\n- \u305d\u306e\u4ed6\uff1a[\u30d5\u30ea\u30fc\u306e\u5e74\u9f62\u30fb\u6027\u5225\u30e2\u30c7\u30eb](http://www.openu.ac.il/home/hassner/projects/cnn_agegender/)\n\n\u691c\u8a3c\u306f\u4e0b\u8a18\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3001\u6709\u540d\u4eba\u306eInstagram\u753b\u50cf\u3068\u751f\u5e74\u6708\u65e5\u3092\u7528\u3044\u307e\u3057\u305f\u3002\n\n- [\u82b8\u80fd\u4ebaInstagram\u30e9\u30f3\u30ad\u30f3\u30b0](http://www.talentinsta.com)\n\n\u306a\u304a\u3001\u4eca\u56de\u306f\u6027\u5225\u5224\u5b9a\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u6e96\u5099\n\n\u5404\u7a2eAPI\u306e\u30e6\u30fc\u30b6\u767b\u9332\u3092\u884c\u3044\u3001Python\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u30e6\u30fc\u30b6\u767b\u9332\u306e\u65b9\u6cd5\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\n### API\u30ad\u30fc\u306e\u6e96\u5099\n\u767b\u9332\u6642\u306b\u53d6\u5f97\u3057\u305fAPI\u30ad\u30fc\u306fconfig\u30d5\u30a1\u30a4\u30eb\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u5404API\u30ad\u30fc\u53d6\u5f97\u306e\u305f\u3081\u306b`get_api_key()`\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\n```python\ncfg = ConfigParser.SafeConfigParser()\ncfg.read('config/api.cfg')\n\ndef get_api_key(section):\n    return cfg.get(section,'key') if cfg.has_section(section) and cfg.has_option(section, 'key') else {}\n\n```\n\nconfig\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```\n[MSApi]\nkey = (Face API\u306e\u30ad\u30fc)\n\n[IBMApi]\nkey =(Visual Recognition\u306e\u30ad\u30fc)\n\n[PUXApi]\nkey =(PUX \u8a55\u4fa1\u7248API\u306e\u30ad\u30fc)\ndomain = (PUX \u8a55\u4fa1\u7248API\u306e\u30c9\u30e1\u30a4\u30f3)\n```\n\n### Microsoft\u793e: Face API\u306e\u4f7f\u7528\npath\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\u5224\u5b9a\u7d50\u679c\u3092gender(\u6027\u5225), age(\u985e\u63a8\u5e74\u9f62)\u306e2\u3064\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\nage\u306f\u5c0f\u6570\u70b9\u307e\u3067\u6c42\u307e\u308a\u307e\u3059\u3002\n\n```python\ndef ms_predict(path):\n    print(\"//// MS ////\")\n    # \u8a72\u5f53\u306eAPI\u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\n    ms_key = get_api_key('MSApi')\n    if ms_key:\n      CF.Key.set(ms_key)\n      with open(path, 'rb') as image_file:\n        result = CF.face.detect(image_file, landmarks=True, attributes='age,gender')\n       # \u9854\u753b\u50cf\u3092\u691c\u51fa\u3057\u305f\u5834\u5408\u306b\u3001gender,age\u306b\u5024\u3092\u5165\u308c\u308b\n       if len(result) > 0:\n        target = result[0][\"faceAttributes\"]\n        res[\"gender\"] = target[\"gender\"]\n        res[\"age\"] = target[\"age\"]\n        print(res)\n      else:\n        print(\"No Face\")\n    return res\n```\n\n### IBM\u793e: Visual Recognition\u306e\u4f7f\u7528\n\npath\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\u5224\u5b9a\u7d50\u679c\u3092gender(\u6027\u5225), lo(\u985e\u63a8\u5e74\u9f62\u306e\u4e0b\u9650), hi\uff08\u985e\u63a8\u5e74\u9f62\u306e\u4e0a\u9650)\u306e3\u3064\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\nlo\u3084hi\u306f\u5fc5\u305a\u3057\u3082\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```Python\ndef ibm_predict(path):\n    print(\"//// IBM ////\")\n    # \u8a72\u5f53\u306eAPI\u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\n    ibm_key = get_api_key('IBMApi')\n    if ibm_key:\n      # Visual Recognition \u7121\u6599\u30d7\u30e9\u30f3\u3067\u306f\u3001\u30a4\u30e1\u30fc\u30b8\u306e\u30bf\u30b0\u4ed8\u3051\u304a\u3088\u3073\u9854\u691c\u51fa\u306b\u5bfe\u3057\u3066\u3001Bluemix \u30a2\u30ab\u30a6\u30f3\u30c8 1 \u3064\u306b\u3064\u304d 1 \u65e5\u3042\u305f\u308a 250 \u500b\u306e\u30a4\u30d9\u30f3\u30c8 (\u30a4\u30e1\u30fc\u30b8) \u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n      IBM_recognition = VisualRecognitionV3('2016-05-20', api_key=ibm_key)\n      with open(path, 'rb') as image_file:\n        result = IBM_recognition.detect_faces(images_file=image_file)\n      # \u9854\u753b\u50cf\u3092\u691c\u51fa\u3057\u305f\u5834\u5408\u306b\u3001gender,lo,hi\u306b\u5024\u3092\u5165\u308c\u308b\n      if len(result[\"images\"][0][\"faces\"]) > 0:\n        target = result[\"images\"][0][\"faces\"][0]\n        res[\"gender\"] = target[\"gender\"][\"gender\"]\n        if target[\"age\"].has_key(\"min\"):\n          res[\"lo\"] = target[\"age\"][\"min\"]\n        if target[\"age\"].has_key(\"max\"):\n          res[\"hi\"] = target[\"age\"][\"max\"]\n        print(res)\n      else:\n        print(\"No Face\")\n    return res\n```\n\n### PUX\u793e: \u9854\u691c\u51fa(\u8a55\u4fa1\u7248)\u306e\u4f7f\u7528\npath\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\u5224\u5b9a\u7d50\u679c\u3092gender(\u6027\u5225), age(\u985e\u63a8\u5e74\u9f62)\u306e2\u3064\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\n```python\n#PUX\u306edetectFaceAPI\u3092\u4f7f\u7528\ndef pux_predict(path):\n    print(\"//// PUX ////\")\n    # \u8a72\u5f53\u306eAPI\u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\n    pux_key = get_api_key('PUXApi')\n    if pux_key:\n      url = 'http://eval.api.polestars.jp:8080/webapi/face.do'\n      # API\u306e\u898f\u7d04\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u4e00\u6642\u7684\u306bjpeg\u306b\u5909\u63db\n      im = Image.open(path)\n      im.save(\"/tmp/tmp.jpg\", \"JPEG\")\n      with open(\"/tmp/tmp.jpg\", 'rb') as image_file:\n        data = {\n          'apiKey': pux_key,\n          'inputBase64': base64.b64encode(image_file.read()).decode(),\n          'response': 'json'\n        }\n        result = json.loads(requests.post(url, data, headers={'Content-Type': 'application/x-www-form-urlencoded'}).text)\n      # \u9854\u753b\u50cf\u3092\u691c\u51fa\u3057\u305f\u5834\u5408\u306b\u3001gender,age\u306b\u5024\u3092\u5165\u308c\u308b\n      if result[\"results\"][\"faceRecognition\"].has_key(\"detectionFaceInfo\"):\n        target = result[\"results\"][\"faceRecognition\"][\"detectionFaceInfo\"][0]\n        res[\"gender\"] = \"Male\" if str(target[\"genderJudge\"][\"genderResult\"]) == \"0\" else \"Female\"\n        res[\"age\"] = target[\"ageJudge\"][\"ageResult\"]\n        print(res)\n      else:\n        print(\"No Face\")\n    return res\n```\n\n### \u305d\u306e\u4ed6\uff1a\u30d5\u30ea\u30fc\u306e\u5e74\u9f62\u30fb\u6027\u5225\u30e2\u30c7\u30eb\u306e\u4f7f\u7528\npath\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\u5224\u5b9a\u7d50\u679c\u3092gender(\u6027\u5225), lo(\u985e\u63a8\u5e74\u9f62\u306e\u4e0b\u9650), hi\uff08\u985e\u63a8\u5e74\u9f62\u306e\u4e0a\u9650)\u306e3\u3064\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n[\u3053\u3061\u3089](https://github.com/spiorf/deepdream/tree/master/models/cnn_age_gender_models_and_data.0.0.2)\u3092\u53c2\u8003\u306b\u3001\u5165\u51fa\u529b\u3092\u4e0b\u8a18\u306e\u5f62\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n```python\ndef org_predict(path):\n    print(\"//// Original ////\")\n    input_image = caffe.io.load_image(path)\n\n    # \u9854\u753b\u50cf\u3092\u691c\u51fa\u3057\u305f\u5834\u5408\u306b\u3001gender,lo,hi\u306b\u5024\u3092\u5165\u308c\u308b\n    res[\"gender\"] = _predict_gender(input_image)\n    res[\"lo\"], res[\"hi\"] = _predict_age(input_image)\n    print(res)\n    return res\n```\n\n## \u30c7\u30fc\u30bf\u306e\u6e96\u5099\n\nInstagram\u3088\u308a\u3001\u672c\u4eba\u306e\u307f\u5199\u3063\u305f\u5199\u771f\u30921~10\u679a\u96c6\u3081\u307e\u3057\u305f\u3002\u5bfe\u8c61\u5e74\u9f62\u306f20\u6b73\u301c83\u6b73\u3067\u3059\u3002\n175\u540d\u5206(\u7537\u6027:73\u540d\u3001\u5973\u6027:102\u540d)\u3067\u3001\u8a08816\u679a\u96c6\u3081\u307e\u3057\u305f\u3002\n\u3061\u306a\u307f\u306b\u3001\u4eca\u56de\u4e00\u756a\u5927\u5909\u3060\u3063\u305f\u306e\u306f\u753b\u50cf\u96c6\u3081\u3067\u3057\u305f:frowning2:\n\n\u5bfe\u8c61\u8005\u306e\u5e74\u9f62\u5206\u5e03\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-20 13.26.34.png](https://qiita-image-store.s3.amazonaws.com/0/8839/810b5301-e90a-54b4-2dcc-dfe1726ae8f1.png)\n\n\n\n# \u5b9f\u9a13\u7d50\u679c(\u6027\u5225\u5224\u5b9a)\n\n## \u6b63\u89e3\u3068\u4e0d\u6b63\u89e3\u3001\u975e\u691c\u51fa\u6570\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-20 9.38.27.png](https://qiita-image-store.s3.amazonaws.com/0/8839/b613cca9-b974-8cf6-9dc7-197f025079c6.png)\n\n - \u6b63\u89e3\uff1a\u7537\u6027\u3092\u7537\u6027\u3001\u5973\u6027\u3092\u5973\u6027\u3068\u5224\u5b9a\u3057\u305f\u6570\n - \u4e0d\u6b63\u89e3\uff1a\u7537\u6027\u3092\u5973\u6027\u3001\u5973\u6027\u3092\u7537\u6027\u3068\u5224\u5b9a\u3057\u305f\u6570\n - \u975e\u691c\u51fa\uff1a\u9854\u306e\u8a8d\u8b58\u304c\u51fa\u6765\u306a\u304b\u3063\u305f\u6570\uff08\u6b63\u89e3 + \u4e0d\u6b63\u89e3 + \u975e\u691c\u51fa = 816\uff09\n - \u6b63\u89e3\u7387\uff1a\u9854\u3092\u8a8d\u8b58\u3057\u305f\u5834\u5408\u306e\u6b63\u89e3\u306e\u5272\u5408\uff08\u6b63\u89e3 / (\u6b63\u89e3 + \u4e0d\u6b63\u89e3)\uff09\n - \u691c\u51fa\u7387\uff1a\u9854\u3092\u8a8d\u8b58\u3057\u305f\u5272\u5408\uff08(\u6b63\u89e3 + \u4e0d\u6b63\u89e3)/(\u6b63\u89e3+\u4e0d\u6b63\u89e3+ \u975e\u691c\u51fa)\uff09\n\n## \u7537\u6027\u3068\u5973\u6027\u306e\u5224\u5b9a\u6570\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-20 10.37.56.png](https://qiita-image-store.s3.amazonaws.com/0/8839/82ce67f5-30b6-77c4-dbb7-8013059feb08.png)\n\n - \u7537\u6027\uff1a\u7537\u6027\u3060\u3068\u5224\u5b9a\u3057\u305f\u6570\n - \u5973\u6027\uff1a\u5973\u6027\u3060\u3068\u5224\u5b9a\u3057\u305f\u6570\n\n# \u8003\u5bdf\n- *FaceAPI*\uff1a**\u6b63\u89e3\u7387\u304c0.96**\u3068\u6700\u3082\u9ad8\u304f\u3001**\u691c\u51fa\u7387\u306f0.86**\u3068\u6700\u3082\u4f4e\u3044\u3002\u9854\u691c\u51fa\u304c\u53b3\u5bc6\u306b\u884c\u308f\u308c\u3001\u9ad8\u3044\u6b63\u89e3\u7387\u306b\u306a\u3063\u305f\u306e\u304b\u3082\u3002\n- *Visual Recognition*\uff1a**\u6b63\u89e3\u7387\u304c0.8**\u3068\u4f4e\u304f\u3001**\u691c\u51fa\u7387\u306f0.99**\u3068\u975e\u5e38\u306b\u9ad8\u3044\u3002\u9854\u8a8d\u8b58\u304c\u4e0d\u6b63\u78ba\u306a\u5834\u5408\u3067\u3082\u306a\u3093\u3089\u304b\u306e\u5024\u3092\u8fd4\u3057\u3066\u3044\u308b\u307f\u305f\u3044\u3002\n- *PUX\u306e\u9854\u691c\u51fa(\u8a55\u4fa1\u7248)*\uff1a**\u6b63\u89e3\u7387\u304c0.82**\u3067\u3001**\u691c\u51fa\u7387\u306f0.87**\u3060\u3063\u305f\u3002\u65e5\u672c\u88fdAPI\u306e\u305f\u3081\u6709\u5229\u304b\u3068\u601d\u3063\u3066\u307e\u3057\u305f\u304c\u3001\u610f\u5916\u306a\u7d50\u679c\u3067\u3057\u305f\u3002\n- *\u305d\u306e\u4ed6\u306e\u30d5\u30ea\u30fc\u306e\u5e74\u9f62\u30fb\u6027\u5225\u30e2\u30c7\u30eb*\uff1a**\u6b63\u89e3\u7387\u304c0.57**\u3068\u6700\u3082\u4f4e\u304f\u3001**\u691c\u51fa\u7387\u306f1**\u3067\u6700\u3082\u9ad8\u3044\u3002\u9854\u8a8d\u8b58\u304c\u4e0d\u6b63\u78ba\u3060\u3068\u7537\u6027\u3068\u3057\u3066\u5224\u5b9a\u3057\u3066\u305d\u3046\u3067\u3059\uff08\u5b9f\u88c5\u306b\u3088\u308a\u307e\u3059\u304c\uff09\n\n\u6b63\u89e3\u7387\u3068\u691c\u51fa\u7387\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n# \u307e\u3068\u3081\n\n - \u6b63\u89e3\u7387\u3067\u8003\u3048\u308b\u3068\u3001**FaceAPI**\u304c\u6700\u3082\u6027\u5225\u5224\u5b9a\u306b\u4f7f\u3048\u308b\n - \u691c\u51fa\u7387\u3067\u8003\u3048\u308b\u3068\u3001**Visual Recognition**\u304c\u30d0\u30e9\u30f3\u30b9\u304c\u826f\u3044\n\n\u4eca\u56de\u306f\u3001\u6027\u5225\u5224\u5b9a\u306e\u307f\u3067\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\u500b\u4eba\u7684\u306b\u306f\u3001API\u306e\u30b3\u30fc\u30eb\u6570\u304c\u670830,000\u56de\u307e\u3067\u7121\u6599\u3067\u3001\u6027\u80fd\u3082\u826f\u3044FaceAPI\u304c\u4f7f\u3044\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u308c\u3068\u3001**\u306f\u25ef\u306a\u611b\u306e\u6027\u5225\u306e\u771f\u5024\u306b\u8ff7\u3044\u307e\u3057\u305f**\u3002\n\n\uff08\u3061\u306a\u307f\u306b\u3001\u6027\u5225\u5224\u5b9a\u3060\u3051\u306a\u3089\u3001[Amazon Rekognition](https://aws.amazon.com/jp/rekognition/)\u3082\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u306e\u3046\u3061\u6bd4\u8f03\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff09\n\n# \u4eca\u5f8c\n\n\u6b21\u56de\u306f\u5e74\u9f62\u5224\u5b9a\u306b\u3064\u3044\u3066\u8a18\u4e8b\u306b\u3057\u307e\u3059\u3002\u65e5\u672c\u88fd\u306e\u30e2\u30c7\u30eb\u3067\u3042\u308bPUX\u306e\u6027\u80fd\u304c\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\n", "tags": ["Bluemix", "Azure", "PUX", "Instagram", "Python"]}