{"context": " More than 1 year has passed since last update.\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u3068\u304d\u3001\u4e0b\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308c\u3070\u81ea\u52d5\u7684\u306b\u6b21\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308c\u308b\u3001\u3068\u3044\u3046\u300cloadMore\u300d\u6a5f\u80fd\u3092\u8003\u3048\u308b\n\u4f8b\u3048\u3070\u3001\u30af\u30e9\u30a6\u30c9\u4e0a\u306b\u4fdd\u5b58\u3057\u3066\u3042\u308b\u5199\u771f\u3092\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u3088\u3046\u306a Web\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u3068\u3059\u308b\u3002\n\n\u7b2c1\u6848\nMVC \u3092\u5c11\u3057\u304b\u3058\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u5b9f\u88c5\u304c\u982d\u306b\u6d6e\u304b\u3076\u3002\n# apis/image.coffee\nangular.module(\"app\").factory \"getImageAPI\", ->\n  getImageAPI = (userId, offset, limit) ->\n    # call API and return promise\n  return getImageAPI\n\n# models/image.coffee\nangular.module(\"app\").factory \"ImageModel\", [\"getImageAPI\", (getImageAPI) ->\n  ImageModel = (userId) ->\n    _pageNo = 0\n    _pageSize = 10\n    _images = []\n    _isComplete\n    self =\n      loadMore: ->\n        promise = getImageAPI userId, (_pageNo++) * _pageSize, _pageSize\n          .then (response) ->\n            data = response.data\n            Array.prototype.push.apply _images, data.images\n            _isComplete = data.isComplete\n            return response\n        return promise\n      getUserId: -> userId\n      getImages: -> _images\n      isComplete: -> _isComplete\n    return self\n\n  return ImageModel\n]\n\n# controllers/image.coffee\nangular.module(\"app\").controller \"ImageController\", [\"$scope\", \"$stateParams\", \"ImageModel\", ($scope, $stateParams, ImageModel) ->\n  userId = queryParams.userId\n  imageModel = ImageModel userId\n  $scope.images = imageModel.getImages()\n  $scope.isComplete = -> imageModel.isComplete()\n  $scope.loadMore = ->\n    imageModel.loadMore().then (data) ->\n      $scope.$broadcast 'scroll.infiniteScrollComplete'\n]\n\n-# templates/image.haml\n%ion-list\n  %ion-item(ng-repeat=\"image in images\")\n    %img(ng-src=\"{{ image.src }}\")\n%ion-infinite-scroll(on-infinite=\"loadMore()\" ng-if=\"!isComplete()\")\n\n\nangularJS \u3068 ionic \u3092\u4f7f\u3063\u3066\u3044\u308b\u304c\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3082\u3053\u3093\u306a\u69cb\u6210\u306b\u306a\u308b\u306f\u305a\u3060\u3002\n\nM\n\n\ngetImageAPI\n\n\nAPI \u901a\u4fe1\u3092\u884c\u3046\n\n\nImageModel\n\n\n\u30e6\u30fc\u30b6\u30fc\u306e\u5199\u771f\u3092\u7ba1\u7406\u3059\u308b\u30e2\u30c7\u30eb\u3092\u63d0\u4f9b\u3059\u308b\nloadMore \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u3001\u5185\u90e8\u3067 API \u901a\u4fe1\u3092\u884c\u3044\u3001\u753b\u50cf\u3092\u8ffd\u52a0\u3067\u8aad\u307f\u8fbc\u3080\n\n\n\n\nC\n\n\nImageController\n\n\n\u30e2\u30c7\u30eb\u3067\u3042\u308b ImageModel \u3068\u3001\u30d3\u30e5\u30fc\u3067\u3042\u308b templates/image.haml \u3092\u3064\u306a\u304e\u3068\u3081\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\n$scope \u306b\u6e21\u3057\u305f\u5024\u304c\u3001view \u306b\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u3002\n$stateParams \u3067\u3001queryString \u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n\n\n\nV\n\n\ntemplates/image.haml\n\n\nion-list\n\n\n\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30ea\u30b9\u30c8\u8868\u793a\u3059\u308b\n\n\nion-item\n\n\n1\u3064\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8868\u3059\n\n\nion-infinite-scroll\n\n\n\u3053\u306e\u30bf\u30b0\u304c\u753b\u9762\u4e0a\u306b\u73fe\u308c\u3001\u304b\u3064 ng-if \u304c true \u3092\u8fd4\u3059\u9650\u308a\u3001on-infinite \u3092\u5b9f\u884c\u3059\u308b\non-infinite \u306b\u306f\u3001loadMore \u306e\u5b9f\u884c\u304c\u6307\u793a\u3055\u308c\u3066\u3044\u308b\n\n\n\n\n\n\n\n\n\u7b2c1\u6848\u306e\u554f\u984c\u70b9\n\u7b2c1\u6848\u306f\u3001\u5b9f\u306f\u5b8c\u5168\u306a MVC \u69cb\u6210\u3068\u306f\u8a00\u3048\u306a\u3044\u3002\u4f55\u304c\u304a\u304b\u3057\u3044\u306e\u3060\u308d\u3046\u3002\n\u4e00\u8a00\u3067\u8a00\u3048\u3070\u3001\u300cloadMore \u306f view \u306e\u4e8b\u60c5\u3067\u3042\u3063\u3066\u3001 Model \u304c\u7ba1\u7406\u3059\u308b\u3079\u304d\u3067\u306f\u306a\u3044\u300d\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002\n\n\u30af\u30e9\u30a6\u30c9\u4e0a\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u753b\u50cf\u3092\u3069\u3046\u8868\u793a\u3059\u308b\u304b\u306f\u3001view \u304c\u6c7a\u3081\u308b\nview \u5074\u306e\u5b9f\u88c5\u306f\u3001\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u8003\u3048\u3089\u308c\u308b\n\n\n\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308c\u3070\u81ea\u52d5\u7684\u306b\u3064\u304e\u306e10\u4ef6\u304c\u30ed\u30fc\u30c9\u3055\u308c\u308b\n\u30da\u30fc\u30b8\u30e3\u30fc\u3092\u7528\u610f\u3057\u3001\u6b21\u3078\u30dc\u30bf\u30f3\u3092\u62bc\u305b\u3070\u6b21\u306e10\u4ef6\u304c\u30ed\u30fc\u30c9\u3055\u308c\u308b\n\u753b\u50cf\u304c1\u679a\u3060\u3051\u8868\u793a\u3055\u308c\u30013\u79d2\u3054\u3068\u306b\u6b21\u306e\u753b\u50cf\u306b\u5207\u308a\u66ff\u308f\u308b\n\n\nloadMore \u306f\u3001\u305d\u306e\u4e2d\u306e1\u3064\u306e\u9078\u629e\u80a2\u306b\u904e\u304e\u306a\u3044\u3002\n\u3064\u307e\u308a\u3001loadMore \u95a2\u6570\u304c ImageModel \u306e\u4e2d\u306b\u3042\u308b\u306e\u306f\u304a\u304b\u3057\u3044\u3002\n\nImageModel \u306f\u3001\u3042\u304f\u307e\u3067 offset, limit \u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u5206\u306e\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3079\u304d\u3060\u308d\u3046\u3002\n\n\u7b2c2\u6848\n\u305d\u3053\u3067\u3001\u6b21\u306e\u3088\u3046\u306a util \u95a2\u6570\u3092\u7528\u610f\u3057\u3066\u3001\u3053\u306e\u5207\u308a\u5206\u3051\u3092\u5b9f\u73fe\u3059\u308b\u3002\n# apis/image.coffee\nangular.module(\"app\").factory \"getImageAPI\", ->\n  getImageAPI = (userId, offset, limit) ->\n    # call API and return promise\n  return getImageAPI\n\n# models/image.coffee\nangular.module(\"app\").factory \"ImageModel\", [\"getImageAPI\", (getImageAPI) ->\n  ImageModel = (userId) ->\n    self =\n      getImages: (offset, limit) ->\n        promise = getImageAPI userId, offset, limit\n          .then (response) ->\n            return {\n              images: response.data.images\n              isComplete: response.data.isComplete\n            }\n        return promise\n      getUserId: -> userId\n    return self\n\n  return ImageModel\n]\n\n# views/loadMore.coffee\nangular.module(\"app\").factory \"view.loadMoreTask\", ->\n  return (startPage, loader) ->\n    self =\n      pageNo: startPage\n      items: []\n      isComplete: false\n      loadMore: ->\n        loader(self.pageNo++).then (response) ->\n          Array.prototype.push.apply(self.items, response.items)\n          self.isComplete = response.isComplete\n    return self\n\n# controllers/image.coffee\nangular.module(\"app\").controller \"ImageController\", [\"$scope\", \"$stateParams\", \"ImageModel\", \"view.loadMoreTask\", ($scope, $stateParams, ImageModel, loadMoreTask) ->\n  userId = queryParams.userId\n  imageModel = ImageModel userId\n  pageSize = 10\n  $scope.loadMoreTask = loadMoreTask 0, (pageNo) ->\n    imageModel.getImages(pageNo * pageSize, pageSize).then (data) ->\n      $scope.$broadcast 'scroll.infiniteScrollComplete'\n      return {\n        items: data.images\n        isComplete: data.isComplete\n      }\n]\n\n-# templates/image.haml\n%ion-list\n  %ion-item(ng-repeat=\"item in loadMoreTask.items\")\n    %img(ng-src=\"{{ item.src }}\")\n%ion-infinite-scroll(on-infinite=\"loadMoreTask.loadMore()\" ng-if=\"!loadMoreTask.isComplete\")\n\n\nM \u306f\u3001V \u304c\u3069\u306e\u3088\u3046\u306b\u8868\u793a\u3057\u3066\u3044\u308b\u304b\u306f\u77e5\u3089\u306a\u3044\n\n\noffset, limit \u3092\u53d7\u3051\u53d6\u3063\u3066 \u753b\u50cf\u3092\u8fd4\u3059\u3060\u3051\u3067\u3042\u308b\n\n\nV \u306f\u3001M \u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u63d0\u4f9b\u3059\u308b\u3002\n\n\n\u3053\u306e\u30ed\u30b8\u30c3\u30af\u306f\u3001\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u304c\u753b\u50cf\u306a\u306e\u304b\u3001\u30c4\u30a4\u30fc\u30c8\u306a\u306e\u304b\u306a\u3069\u306f\u77e5\u3089\u306a\u3044\u3002\n\n\nC \u306f\u3001M \u3068 V \u3068\u3092\u7d50\u3073\u3064\u3051\u3001M \u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u3092 V \u304c\u63d0\u4f9b\u3059\u308b\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u306b\u6e21\u3059\u3002\n\n\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u3068\u304d\u3001\u4e0b\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308c\u3070\u81ea\u52d5\u7684\u306b\u6b21\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308c\u308b\u3001\u3068\u3044\u3046\u300cloadMore\u300d\u6a5f\u80fd\u3092\u8003\u3048\u308b\n\u4f8b\u3048\u3070\u3001\u30af\u30e9\u30a6\u30c9\u4e0a\u306b\u4fdd\u5b58\u3057\u3066\u3042\u308b\u5199\u771f\u3092\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u3088\u3046\u306a Web\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u3068\u3059\u308b\u3002\n\n# \u7b2c1\u6848\nMVC \u3092\u5c11\u3057\u304b\u3058\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u5b9f\u88c5\u304c\u982d\u306b\u6d6e\u304b\u3076\u3002\n\n```coffeescript\n# apis/image.coffee\nangular.module(\"app\").factory \"getImageAPI\", ->\n  getImageAPI = (userId, offset, limit) ->\n    # call API and return promise\n  return getImageAPI\n\n# models/image.coffee\nangular.module(\"app\").factory \"ImageModel\", [\"getImageAPI\", (getImageAPI) ->\n  ImageModel = (userId) ->\n    _pageNo = 0\n    _pageSize = 10\n    _images = []\n    _isComplete\n    self =\n      loadMore: ->\n        promise = getImageAPI userId, (_pageNo++) * _pageSize, _pageSize\n          .then (response) ->\n            data = response.data\n            Array.prototype.push.apply _images, data.images\n            _isComplete = data.isComplete\n            return response\n        return promise\n      getUserId: -> userId\n      getImages: -> _images\n      isComplete: -> _isComplete\n    return self\n\n  return ImageModel\n]\n\n# controllers/image.coffee\nangular.module(\"app\").controller \"ImageController\", [\"$scope\", \"$stateParams\", \"ImageModel\", ($scope, $stateParams, ImageModel) ->\n  userId = queryParams.userId\n  imageModel = ImageModel userId\n  $scope.images = imageModel.getImages()\n  $scope.isComplete = -> imageModel.isComplete()\n  $scope.loadMore = ->\n    imageModel.loadMore().then (data) ->\n      $scope.$broadcast 'scroll.infiniteScrollComplete'\n]\n```\n\n```haml\n-# templates/image.haml\n%ion-list\n  %ion-item(ng-repeat=\"image in images\")\n    %img(ng-src=\"{{ image.src }}\")\n%ion-infinite-scroll(on-infinite=\"loadMore()\" ng-if=\"!isComplete()\")\n\n```\n\nangularJS \u3068 ionic \u3092\u4f7f\u3063\u3066\u3044\u308b\u304c\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3082\u3053\u3093\u306a\u69cb\u6210\u306b\u306a\u308b\u306f\u305a\u3060\u3002\n\n- M\n    - getImageAPI\n        - API \u901a\u4fe1\u3092\u884c\u3046\n    - ImageModel\n        - \u30e6\u30fc\u30b6\u30fc\u306e\u5199\u771f\u3092\u7ba1\u7406\u3059\u308b\u30e2\u30c7\u30eb\u3092\u63d0\u4f9b\u3059\u308b\n        - loadMore \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u3001\u5185\u90e8\u3067 API \u901a\u4fe1\u3092\u884c\u3044\u3001\u753b\u50cf\u3092\u8ffd\u52a0\u3067\u8aad\u307f\u8fbc\u3080\n- C\n    - ImageController\n        - \u30e2\u30c7\u30eb\u3067\u3042\u308b ImageModel \u3068\u3001\u30d3\u30e5\u30fc\u3067\u3042\u308b templates/image.haml \u3092\u3064\u306a\u304e\u3068\u3081\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\n        - $scope \u306b\u6e21\u3057\u305f\u5024\u304c\u3001view \u306b\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u3002\n        - $stateParams \u3067\u3001queryString \u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n- V\n    - templates/image.haml\n        - ion-list\n            - \u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30ea\u30b9\u30c8\u8868\u793a\u3059\u308b\n        - ion-item\n            - 1\u3064\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8868\u3059\n        - ion-infinite-scroll\n            - \u3053\u306e\u30bf\u30b0\u304c\u753b\u9762\u4e0a\u306b\u73fe\u308c\u3001\u304b\u3064 `ng-if` \u304c `true` \u3092\u8fd4\u3059\u9650\u308a\u3001`on-infinite` \u3092\u5b9f\u884c\u3059\u308b\n            - on-infinite \u306b\u306f\u3001loadMore \u306e\u5b9f\u884c\u304c\u6307\u793a\u3055\u308c\u3066\u3044\u308b\n\n# \u7b2c1\u6848\u306e\u554f\u984c\u70b9\n\u7b2c1\u6848\u306f\u3001\u5b9f\u306f\u5b8c\u5168\u306a MVC \u69cb\u6210\u3068\u306f\u8a00\u3048\u306a\u3044\u3002\u4f55\u304c\u304a\u304b\u3057\u3044\u306e\u3060\u308d\u3046\u3002\n\u4e00\u8a00\u3067\u8a00\u3048\u3070\u3001\u300cloadMore \u306f view \u306e\u4e8b\u60c5\u3067\u3042\u3063\u3066\u3001 Model \u304c\u7ba1\u7406\u3059\u308b\u3079\u304d\u3067\u306f\u306a\u3044\u300d\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002\n\n- \u30af\u30e9\u30a6\u30c9\u4e0a\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u753b\u50cf\u3092\u3069\u3046\u8868\u793a\u3059\u308b\u304b\u306f\u3001view \u304c\u6c7a\u3081\u308b\n- view \u5074\u306e\u5b9f\u88c5\u306f\u3001\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u8003\u3048\u3089\u308c\u308b\n    - \u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308c\u3070\u81ea\u52d5\u7684\u306b\u3064\u304e\u306e10\u4ef6\u304c\u30ed\u30fc\u30c9\u3055\u308c\u308b\n    - \u30da\u30fc\u30b8\u30e3\u30fc\u3092\u7528\u610f\u3057\u3001\u6b21\u3078\u30dc\u30bf\u30f3\u3092\u62bc\u305b\u3070\u6b21\u306e10\u4ef6\u304c\u30ed\u30fc\u30c9\u3055\u308c\u308b\n    - \u753b\u50cf\u304c1\u679a\u3060\u3051\u8868\u793a\u3055\u308c\u30013\u79d2\u3054\u3068\u306b\u6b21\u306e\u753b\u50cf\u306b\u5207\u308a\u66ff\u308f\u308b\n- loadMore \u306f\u3001\u305d\u306e\u4e2d\u306e1\u3064\u306e\u9078\u629e\u80a2\u306b\u904e\u304e\u306a\u3044\u3002\n- \u3064\u307e\u308a\u3001loadMore \u95a2\u6570\u304c ImageModel \u306e\u4e2d\u306b\u3042\u308b\u306e\u306f\u304a\u304b\u3057\u3044\u3002\n\nImageModel \u306f\u3001\u3042\u304f\u307e\u3067 offset, limit \u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u5206\u306e\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3079\u304d\u3060\u308d\u3046\u3002\n\n# \u7b2c2\u6848\n\u305d\u3053\u3067\u3001\u6b21\u306e\u3088\u3046\u306a util \u95a2\u6570\u3092\u7528\u610f\u3057\u3066\u3001\u3053\u306e\u5207\u308a\u5206\u3051\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\n```coffeescript\n# apis/image.coffee\nangular.module(\"app\").factory \"getImageAPI\", ->\n  getImageAPI = (userId, offset, limit) ->\n    # call API and return promise\n  return getImageAPI\n\n# models/image.coffee\nangular.module(\"app\").factory \"ImageModel\", [\"getImageAPI\", (getImageAPI) ->\n  ImageModel = (userId) ->\n    self =\n      getImages: (offset, limit) ->\n        promise = getImageAPI userId, offset, limit\n          .then (response) ->\n            return {\n              images: response.data.images\n              isComplete: response.data.isComplete\n            }\n        return promise\n      getUserId: -> userId\n    return self\n\n  return ImageModel\n]\n\n# views/loadMore.coffee\nangular.module(\"app\").factory \"view.loadMoreTask\", ->\n  return (startPage, loader) ->\n    self =\n      pageNo: startPage\n      items: []\n      isComplete: false\n      loadMore: ->\n        loader(self.pageNo++).then (response) ->\n          Array.prototype.push.apply(self.items, response.items)\n          self.isComplete = response.isComplete\n    return self\n\n# controllers/image.coffee\nangular.module(\"app\").controller \"ImageController\", [\"$scope\", \"$stateParams\", \"ImageModel\", \"view.loadMoreTask\", ($scope, $stateParams, ImageModel, loadMoreTask) ->\n  userId = queryParams.userId\n  imageModel = ImageModel userId\n  pageSize = 10\n  $scope.loadMoreTask = loadMoreTask 0, (pageNo) ->\n    imageModel.getImages(pageNo * pageSize, pageSize).then (data) ->\n      $scope.$broadcast 'scroll.infiniteScrollComplete'\n      return {\n        items: data.images\n        isComplete: data.isComplete\n      }\n]\n```\n\n```haml\n-# templates/image.haml\n%ion-list\n  %ion-item(ng-repeat=\"item in loadMoreTask.items\")\n    %img(ng-src=\"{{ item.src }}\")\n%ion-infinite-scroll(on-infinite=\"loadMoreTask.loadMore()\" ng-if=\"!loadMoreTask.isComplete\")\n```\n\n- M \u306f\u3001V \u304c\u3069\u306e\u3088\u3046\u306b\u8868\u793a\u3057\u3066\u3044\u308b\u304b\u306f\u77e5\u3089\u306a\u3044\n    - offset, limit \u3092\u53d7\u3051\u53d6\u3063\u3066 \u753b\u50cf\u3092\u8fd4\u3059\u3060\u3051\u3067\u3042\u308b\n- V \u306f\u3001M \u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u63d0\u4f9b\u3059\u308b\u3002\n    - \u3053\u306e\u30ed\u30b8\u30c3\u30af\u306f\u3001\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u304c\u753b\u50cf\u306a\u306e\u304b\u3001\u30c4\u30a4\u30fc\u30c8\u306a\u306e\u304b\u306a\u3069\u306f\u77e5\u3089\u306a\u3044\u3002\n- C \u306f\u3001M \u3068 V \u3068\u3092\u7d50\u3073\u3064\u3051\u3001M \u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u3092 V \u304c\u63d0\u4f9b\u3059\u308b\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u306b\u6e21\u3059\u3002\n", "tags": ["CoffeeScript", "AngularJS", "ionic", "mvc"]}