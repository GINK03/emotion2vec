{"context": "@miyabi787 \u3055\u3093\u306e \u300cPHP\u3067\u4e07\u3068\u304b\u5104\u3068\u304b\u3064\u3051\u308b\u611f\u3058\u306e\u300d \u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u95a2\u6570\u5b9a\u7fa9\n\n\u203b \u300c\u5927\u6570\u300d\u3068\u7121\u91cf\u5927\u6570\u3088\u308a\u5927\u304d\u306a\u6570\u3092\u6271\u3046\u300c\u4ecf\u5178\u306e\u6570\u8a5e\u300d\u3092\u304f\u3063\u3064\u3051\u308b\u89e3\u91c8\u306f\u8aa4\u308a\u306a\u306e\u3067\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u9593\u9055\u3063\u3066\u307e\u3059\u2193\nYahoo!\u77e5\u6075\u888b - \u300c\u7121\u91cf\u5927\u6570\u300d\u306e\u4e0a\u3063\u3066\u3042\u308a\u307e\u3059\u304b\uff1f\uff1f\n\n\u901a\u5e38\u30fb\u73fe\u4ee3\u4eee\u540d\u9063\u3044\nfunction japanese_number_readable_format($amount) {\n    static $segment_names = [\n          '', '\u4e07', '\u5104', '\u5146', '\u4eac', '\u5793',\n        \"\\xf0\\xa5\\x9d\\xb1\", '\u7a70', '\u6e9d', '\u6f97', '\u6b63', '\u8f09',\n        '\u6975', '\u6052\u6cb3\u6c99', '\u963f\u50e7\u7947', '\u90a3\u7531\u4ed6', '\u4e0d\u53ef\u601d\u8b70',\n    ];\n    static $level_names = ['', '\u5341', '\u767e', '\u5343'];\n    static $number_names = ['\u4e00', '\u4e8c', '\u4e09', '\u56db', '\u4e94', '\u516d', '\u4e03', '\u516b', '\u4e5d'];\n    if (!(is_int($amount) && $amount >= 0) && !ctype_digit($amount)) {\n        throw new InvalidArgumentException('\u6b63\u6574\u6570\u304b\u6b63\u6574\u6570\u5f62\u5f0f\u6587\u5b57\u5217\u3067\u6e21\u3057\u3066\u304f\u3060\u3055\u3044');\n    }\n    $results = [];\n    $segments = array_filter(str_split(strrev($amount), 4), 'intval');\n    foreach ($segments as $i => $segment) {\n        $result = '';\n        $numbers = array_filter(str_split($segment));\n        foreach ($numbers as $j => $number) {\n            $result = \n                ($j !== 0 && $number === '1'\n                    ? ''\n                    : $number_names[$number - 1])\n                . $level_names[$j] . $result\n            ;\n        }\n        if (!isset($segment_names[$i])) {\n            return '\u7121\u91cf\u5927\u6570';\n        }\n        $result .= $segment_names[$i];\n        $results[] = $result;\n    }\n    return $results ? implode(array_reverse($results)) : '\u96f6';\n}\n\n\n\n\u5927\u5b57\u30fb\u6b74\u53f2\u7684\u5047\u540d\u9063\u3072\nfunction japanese_historical_number_readable_format($amount) {\n    static $segment_names = [\n          '', '\u842c', '\u5104', '\u5146', '\u4eac', '\u5793',\n        \"\\xe7\\xa7\\xad\", '\u7a70', '\u6e9d', '\u6f97', '\u6b63', '\u8f09',\n        '\u6975', '\u6046\u6cb3\u6c99', '\u963f\u50e7\u7947', '\u90a3\u7531\u4ed6', '\u4e0d\u53ef\u601d\u8b70',\n    ];\n    static $level_names = ['', '\u62fe', '\u4f70', '\u4edf'];\n    static $number_names = ['\u58f9', '\u8cae', '\u53c3', '\u8086', '\u4f0d', '\u9678', '\u67d2', '\u634c', '\u7396'];\n    if (!(is_int($amount) && $amount >= 0) && !ctype_digit($amount)) {\n        throw new InvalidArgumentException('\u6b63\u6574\u6578\u304b\u6b63\u6574\u6578\u5f62\u5f0f\u6587\u5b57\u5217\u3067\u6e21\u3057\u7d66\u3078');\n    }\n    $results = [];\n    $segments = array_filter(str_split(strrev($amount), 4), 'intval');\n    foreach ($segments as $i => $segment) {\n        $result = '';\n        $numbers = array_filter(str_split($segment));\n        foreach ($numbers as $j => $number) {\n            $result = \n                ($j !== 0 && $number === '1'\n                    ? ''\n                    : $number_names[$number - 1])\n                . $level_names[$j] . $result\n            ;\n        }\n        if (!isset($segment_names[$i])) {\n            return '\u7121\u91cf\u5927\u6578';\n        }\n        $result .= $segment_names[$i];\n        $results[] = $result;\n    }\n    return $results ? implode(array_reverse($results)) : '\u96f6';\n}\n\n\n\n\u4f7f\u7528\u4f8b\n\nprintf(\n    '\u4eca\u65e5\u306e\u30c6\u30b9\u30c8%s\u70b9\u3060\u3063\u305f\u3001\u3084\u3070\u3044\uff08\u78ba\u4fe1\uff09' . PHP_EOL,\n    japanese_number_readable_format('8108939311919889464364364114514')\n);\nprintf(\n    '\u672c\u65e5\u306e\u8a66\u9a57%s\u9ede\u306b\u3066\u3044\u307f\u3058 \u2015 \u78ba\u4fe1' . PHP_EOL,\n    japanese_historical_number_readable_format('8108939311919889464364364114514')\n);\n\n\u2193\n\u4eca\u65e5\u306e\u30c6\u30b9\u30c8\u516b\u767e\u5341\u7a70\u516b\u5343\u4e5d\u767e\u4e09\u5341\u4e5d\ud855\udf71\u4e09\u5343\u767e\u5341\u4e5d\u5793\u5343\u4e5d\u767e\u516b\u5341\u516b\u4eac\u4e5d\u5343\u56db\u767e\u516d\u5341\u56db\u5146\u4e09\u5343\u516d\u767e\u56db\u5341\u4e09\u5104\u516d\u5343\u56db\u767e\u5341\u4e00\u4e07\u56db\u5343\u4e94\u767e\u5341\u56db\u70b9\u3060\u3063\u305f\u3001\u3084\u3070\u3044\uff08\u78ba\u4fe1\uff09\n\u672c\u65e5\u306e\u8a66\u9a57\u634c\u4f70\u62fe\u7a70\u634c\u4edf\u7396\u4f70\u53c3\u62fe\u7396\u79ed\u53c3\u4edf\u4f70\u62fe\u7396\u5793\u4edf\u7396\u4f70\u634c\u62fe\u634c\u4eac\u7396\u4edf\u8086\u4f70\u9678\u62fe\u8086\u5146\u53c3\u4edf\u9678\u4f70\u8086\u62fe\u53c3\u5104\u9678\u4edf\u8086\u4f70\u62fe\u58f9\u842c\u8086\u4edf\u4f0d\u4f70\u62fe\u8086\u9ede\u306b\u3066\u3044\u307f\u3058 \u2015 \u78ba\u4fe1\n@miyabi787 \u3055\u3093\u306e **[\u300cPHP\u3067\u4e07\u3068\u304b\u5104\u3068\u304b\u3064\u3051\u308b\u611f\u3058\u306e\u300d](http://qiita.com/miyabi787/items/9331975b731afbc3b601)** \u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n# **\u95a2\u6570\u5b9a\u7fa9**\n\n**\u203b \u300c\u5927\u6570\u300d\u3068\u7121\u91cf\u5927\u6570\u3088\u308a\u5927\u304d\u306a\u6570\u3092\u6271\u3046\u300c\u4ecf\u5178\u306e\u6570\u8a5e\u300d\u3092\u304f\u3063\u3064\u3051\u308b\u89e3\u91c8\u306f\u8aa4\u308a\u306a\u306e\u3067\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002**\n\n\u3053\u308c\u9593\u9055\u3063\u3066\u307e\u3059\u2193\n**[Yahoo!\u77e5\u6075\u888b - \u300c\u7121\u91cf\u5927\u6570\u300d\u306e\u4e0a\u3063\u3066\u3042\u308a\u307e\u3059\u304b\uff1f\uff1f](http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1217326022)**\n\n```php:\u901a\u5e38\u30fb\u73fe\u4ee3\u4eee\u540d\u9063\u3044\nfunction japanese_number_readable_format($amount) {\n    static $segment_names = [\n          '', '\u4e07', '\u5104', '\u5146', '\u4eac', '\u5793',\n        \"\\xf0\\xa5\\x9d\\xb1\", '\u7a70', '\u6e9d', '\u6f97', '\u6b63', '\u8f09',\n        '\u6975', '\u6052\u6cb3\u6c99', '\u963f\u50e7\u7947', '\u90a3\u7531\u4ed6', '\u4e0d\u53ef\u601d\u8b70',\n    ];\n    static $level_names = ['', '\u5341', '\u767e', '\u5343'];\n    static $number_names = ['\u4e00', '\u4e8c', '\u4e09', '\u56db', '\u4e94', '\u516d', '\u4e03', '\u516b', '\u4e5d'];\n    if (!(is_int($amount) && $amount >= 0) && !ctype_digit($amount)) {\n        throw new InvalidArgumentException('\u6b63\u6574\u6570\u304b\u6b63\u6574\u6570\u5f62\u5f0f\u6587\u5b57\u5217\u3067\u6e21\u3057\u3066\u304f\u3060\u3055\u3044');\n    }\n    $results = [];\n    $segments = array_filter(str_split(strrev($amount), 4), 'intval');\n    foreach ($segments as $i => $segment) {\n        $result = '';\n        $numbers = array_filter(str_split($segment));\n        foreach ($numbers as $j => $number) {\n            $result = \n                ($j !== 0 && $number === '1'\n                    ? ''\n                    : $number_names[$number - 1])\n                . $level_names[$j] . $result\n            ;\n        }\n        if (!isset($segment_names[$i])) {\n            return '\u7121\u91cf\u5927\u6570';\n        }\n        $result .= $segment_names[$i];\n        $results[] = $result;\n    }\n    return $results ? implode(array_reverse($results)) : '\u96f6';\n}\n```\n\n```php:\u5927\u5b57\u30fb\u6b74\u53f2\u7684\u5047\u540d\u9063\u3072\nfunction japanese_historical_number_readable_format($amount) {\n    static $segment_names = [\n          '', '\u842c', '\u5104', '\u5146', '\u4eac', '\u5793',\n        \"\\xe7\\xa7\\xad\", '\u7a70', '\u6e9d', '\u6f97', '\u6b63', '\u8f09',\n        '\u6975', '\u6046\u6cb3\u6c99', '\u963f\u50e7\u7947', '\u90a3\u7531\u4ed6', '\u4e0d\u53ef\u601d\u8b70',\n    ];\n    static $level_names = ['', '\u62fe', '\u4f70', '\u4edf'];\n    static $number_names = ['\u58f9', '\u8cae', '\u53c3', '\u8086', '\u4f0d', '\u9678', '\u67d2', '\u634c', '\u7396'];\n    if (!(is_int($amount) && $amount >= 0) && !ctype_digit($amount)) {\n        throw new InvalidArgumentException('\u6b63\u6574\u6578\u304b\u6b63\u6574\u6578\u5f62\u5f0f\u6587\u5b57\u5217\u3067\u6e21\u3057\u7d66\u3078');\n    }\n    $results = [];\n    $segments = array_filter(str_split(strrev($amount), 4), 'intval');\n    foreach ($segments as $i => $segment) {\n        $result = '';\n        $numbers = array_filter(str_split($segment));\n        foreach ($numbers as $j => $number) {\n            $result = \n                ($j !== 0 && $number === '1'\n                    ? ''\n                    : $number_names[$number - 1])\n                . $level_names[$j] . $result\n            ;\n        }\n        if (!isset($segment_names[$i])) {\n            return '\u7121\u91cf\u5927\u6578';\n        }\n        $result .= $segment_names[$i];\n        $results[] = $result;\n    }\n    return $results ? implode(array_reverse($results)) : '\u96f6';\n}\n```\n# **\u4f7f\u7528\u4f8b**\n\n```php\nprintf(\n    '\u4eca\u65e5\u306e\u30c6\u30b9\u30c8%s\u70b9\u3060\u3063\u305f\u3001\u3084\u3070\u3044\uff08\u78ba\u4fe1\uff09' . PHP_EOL,\n    japanese_number_readable_format('8108939311919889464364364114514')\n);\nprintf(\n    '\u672c\u65e5\u306e\u8a66\u9a57%s\u9ede\u306b\u3066\u3044\u307f\u3058 \u2015 \u78ba\u4fe1' . PHP_EOL,\n    japanese_historical_number_readable_format('8108939311919889464364364114514')\n);\n```\n\n\u2193\n\n\u4eca\u65e5\u306e\u30c6\u30b9\u30c8\u516b\u767e\u5341\u7a70\u516b\u5343\u4e5d\u767e\u4e09\u5341\u4e5d\ud855\udf71\u4e09\u5343\u767e\u5341\u4e5d\u5793\u5343\u4e5d\u767e\u516b\u5341\u516b\u4eac\u4e5d\u5343\u56db\u767e\u516d\u5341\u56db\u5146\u4e09\u5343\u516d\u767e\u56db\u5341\u4e09\u5104\u516d\u5343\u56db\u767e\u5341\u4e00\u4e07\u56db\u5343\u4e94\u767e\u5341\u56db\u70b9\u3060\u3063\u305f\u3001\u3084\u3070\u3044\uff08\u78ba\u4fe1\uff09\n\u672c\u65e5\u306e\u8a66\u9a57\u634c\u4f70\u62fe\u7a70\u634c\u4edf\u7396\u4f70\u53c3\u62fe\u7396\u79ed\u53c3\u4edf\u4f70\u62fe\u7396\u5793\u4edf\u7396\u4f70\u634c\u62fe\u634c\u4eac\u7396\u4edf\u8086\u4f70\u9678\u62fe\u8086\u5146\u53c3\u4edf\u9678\u4f70\u8086\u62fe\u53c3\u5104\u9678\u4edf\u8086\u4f70\u62fe\u58f9\u842c\u8086\u4edf\u4f0d\u4f70\u62fe\u8086\u9ede\u306b\u3066\u3044\u307f\u3058 \u2015 \u78ba\u4fe1\n", "tags": ["PHP", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "\u771f\u590f\u306e\u591c\u306e\u6deb\u5922"]}