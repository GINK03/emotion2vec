{"context": " More than 1 year has passed since last update.OpenSSL 1.0.1g \u306e EVP_BytesToKey() \u3092\u8aad\u307f\u306a\u304c\u3089\u30c6\u30b9\u30c8\nPython 2.6.6, PyCrypto 2.0.1\n\n\u6697\u53f7\u6587\u4f5c\u6210\n\u307e\u305a\u306f openssl \u30b3\u30de\u30f3\u30c9\u3067\u6697\u53f7\u6587\u3092\u4f5c\u6210\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f password\n$# \u30bf\u30fc\u30df\u30ca\u30eb\u306b\u51fa\u529b\u3059\u308b\u305f\u3081 BASE64 \u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u3044\u308b\n$ echo 'This is plain text !' | openssl aes-256-cbc -e -k password | openssl base64 -e\nU2FsdGVkX1/Ab5WcN6HAN6ppt5YvoqTzD2VuQBbtmLIzAeTkYZFRUjtjwu/M5oMO\n\n\n\u5fa9\u53f7\u51e6\u7406\nPyCryto \u306e AES \u3067\u5fa9\u53f7\u3059\u308b\nimport base64\nfrom hashlib import md5\nfrom Crypto.Cipher import AES\n\nencoded = 'U2FsdGVkX1/Ab5WcN6HAN6ppt5YvoqTzD2VuQBbtmLIzAeTkYZFRUjtjwu/M5oMO'\nencrypted = base64.b64decode(encoded)\nprint 'encrypted: '+ repr(encrypted)\n## encrypted: 'Salted__\\xc0o\\x95\\x9c7\\xa1\\xc07\\xaai\\xb7\\x96/\\xa2\\xa4\\xf3\\x0fen@\\x16\\xed\\x98\\xb23\\x01\\xe4\\xe4a\\x91QR;c\\xc2\\xef\\xcc\\xe6\\x83\\x0e'\n\n# Salted__ \u306b\u7d9a\u304f 8 \u30d0\u30a4\u30c8\u304c salt\nsalt = encrypted[8:16]\nprint 'salt: '+ repr(salt)\n## salt: '\\xc0o\\x95\\x9c7\\xa1\\xc07'\n\nsecret = 'password'\n# \u7c21\u7565\u5316\u3057\u3066\u3044\u308b\u304c\u3001OpenSSL \u306e KDF \u306e\u771f\u4f3c\nhash1 = md5(secret + salt)\nhash2 = md5(hash1.digest() + secret + salt)\nhash3 = md5(hash2.digest() + secret + salt)\nkey = hash1.digest() + hash2.digest()\niv = hash3.digest()\nprint 'key: '+ repr(key)\nprint 'iv: '+ repr(iv)\n## key: \"\\x1e\\xfdh\\xb0_\\x05\\xe1\\x83x\\xa5\\xfe\\x1d8&E#<'\\x9f\\xaf\\x0e\\xcba\\x12\\\\KX\\x897X\\x90\\x0c\"\n## iv: '4-\\\\iNh-\\xc7\\x99\\tg\\xe2\\xbb\\xcd\\x12\\xf5'\n\n\ncipher = AES.new(key, AES.MODE_CBC, iv)\n## salt \u3092\u9664\u3044\u305f\u30c7\u30fc\u30bf\u3092 decrypt \u3059\u308b\ndecrypted = cipher.decrypt(encrypted[16:])\nprint 'decrypted: '+ repr(decrypted)\nprint 'original: '+ repr(decrypted[0:-ord(decrypted[-1])])\n## decrypted: 'This is plain text !\\n\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b'\n## original: 'This is plain text !\\n'\n\n\n\u53c2\u8003\u6587\u732e\n\nEVP_BytesToKey(3)\nhttp://alpha.mixi.co.jp/2007/10639/\nhttp://www.deusty.com/2009/04/decrypting-openssl-aes-files-in-c.html\nhttp://stackoverflow.com/questions/12562021/aes-decryption-padding-with-pkcs5-python\n\nOpenSSL 1.0.1g \u306e EVP_BytesToKey() \u3092\u8aad\u307f\u306a\u304c\u3089\u30c6\u30b9\u30c8\nPython 2.6.6, PyCrypto 2.0.1\n\n## \u6697\u53f7\u6587\u4f5c\u6210\n\n\u307e\u305a\u306f openssl \u30b3\u30de\u30f3\u30c9\u3067\u6697\u53f7\u6587\u3092\u4f5c\u6210\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f password\n\n```console\n$# \u30bf\u30fc\u30df\u30ca\u30eb\u306b\u51fa\u529b\u3059\u308b\u305f\u3081 BASE64 \u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u3044\u308b\n$ echo 'This is plain text !' | openssl aes-256-cbc -e -k password | openssl base64 -e\nU2FsdGVkX1/Ab5WcN6HAN6ppt5YvoqTzD2VuQBbtmLIzAeTkYZFRUjtjwu/M5oMO\n```\n\n## \u5fa9\u53f7\u51e6\u7406\n\nPyCryto \u306e AES \u3067\u5fa9\u53f7\u3059\u308b\n\n```py\nimport base64\nfrom hashlib import md5\nfrom Crypto.Cipher import AES\n\nencoded = 'U2FsdGVkX1/Ab5WcN6HAN6ppt5YvoqTzD2VuQBbtmLIzAeTkYZFRUjtjwu/M5oMO'\nencrypted = base64.b64decode(encoded)\nprint 'encrypted: '+ repr(encrypted)\n## encrypted: 'Salted__\\xc0o\\x95\\x9c7\\xa1\\xc07\\xaai\\xb7\\x96/\\xa2\\xa4\\xf3\\x0fen@\\x16\\xed\\x98\\xb23\\x01\\xe4\\xe4a\\x91QR;c\\xc2\\xef\\xcc\\xe6\\x83\\x0e'\n\n# Salted__ \u306b\u7d9a\u304f 8 \u30d0\u30a4\u30c8\u304c salt\nsalt = encrypted[8:16]\nprint 'salt: '+ repr(salt)\n## salt: '\\xc0o\\x95\\x9c7\\xa1\\xc07'\n\nsecret = 'password'\n# \u7c21\u7565\u5316\u3057\u3066\u3044\u308b\u304c\u3001OpenSSL \u306e KDF \u306e\u771f\u4f3c\nhash1 = md5(secret + salt)\nhash2 = md5(hash1.digest() + secret + salt)\nhash3 = md5(hash2.digest() + secret + salt)\nkey = hash1.digest() + hash2.digest()\niv = hash3.digest()\nprint 'key: '+ repr(key)\nprint 'iv: '+ repr(iv)\n## key: \"\\x1e\\xfdh\\xb0_\\x05\\xe1\\x83x\\xa5\\xfe\\x1d8&E#<'\\x9f\\xaf\\x0e\\xcba\\x12\\\\KX\\x897X\\x90\\x0c\"\n## iv: '4-\\\\iNh-\\xc7\\x99\\tg\\xe2\\xbb\\xcd\\x12\\xf5'\n\n\ncipher = AES.new(key, AES.MODE_CBC, iv)\n## salt \u3092\u9664\u3044\u305f\u30c7\u30fc\u30bf\u3092 decrypt \u3059\u308b\ndecrypted = cipher.decrypt(encrypted[16:])\nprint 'decrypted: '+ repr(decrypted)\nprint 'original: '+ repr(decrypted[0:-ord(decrypted[-1])])\n## decrypted: 'This is plain text !\\n\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b\\x0b'\n## original: 'This is plain text !\\n'\n```\n\n\n## \u53c2\u8003\u6587\u732e\n\n* EVP_BytesToKey(3)\n* http://alpha.mixi.co.jp/2007/10639/\n* http://www.deusty.com/2009/04/decrypting-openssl-aes-files-in-c.html\n* http://stackoverflow.com/questions/12562021/aes-decryption-padding-with-pkcs5-python\n", "tags": ["Python", "openssl"]}