{"context": "\n\n\u30a2\u30d7\u30ea\u95a2\u4fc2\n\nchrome\ngoogle\u65e5\u672c\u8a9e\u5165\u529b\nxcode\nslack\nsourcetree\ncoteditor\nsublimetext\nAtom\nRobomongo\nMac Java\nIntellij Idea\nP4Merge\nXtraFinder\nBetterTouchTool\nAppCleaner\nshupapan\nRedis Desktop Manager\nCheatSheet\nTodoist\nchatwork\nGIPHY CAPTURE\n\n\nchrome\u62e1\u5f35\u7cfb\n\nFull Page Screen Capture\nGoogle Mail Checker\nPostman\n\u82f1\u8f9e\u90ce on the WEB \u62e1\u5f35\u6a5f\u80fd\nGyazo\nWebDeveloper\nPushBullet\ngoo.gl URL Shortener\n\n\nIntelliJ\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\n\n.ignore\nFile Watchers\n\n\ngrunt\u3068\u304bgulp\u306b\u4efb\u305b\u3066\u308b\u304b\u3089\u7121\u52b9\u306b\u3057\u305f\u8a18\u61b6\u3082\u3042\u308b\n\n\nLiveEdit\nMarkdown\nMongo Plugin\nOpen In GitHub\nTasks\nYAML/Ansible support\nCamelCase\nCodic Plugin\n\n\n\u8a2d\u5b9a\n\nLanguages & Frameworks\n\n\nPython Template Languages\nTemplate language: \n\n\nJinja2\u306b\u3059\u308b\uff08Template\u3067Jinja2\u4f7f\u3046\u5834\u5408\u306e\u307f\uff09\n\n\n\n\nTools\n\n\nPython Integrated Tools\nDefault test runner:\n\n\npy.test\u306b\u3059\u308b\uff08\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u304cpy.test\u306e\u5834\u5408\u306e\u307f\uff09\n\n\n\n\nEditor\n\n\nGeneral\nAuto Import\n\n\npython\nShow import popup \u306b\u30c1\u30a7\u30c3\u30af\n\n\nFile and Code Templates\npython script\n\n\n # coding=utf-8 \u3092\u982d\u306b\u5165\u308c\u3066\u304a\u304f\n\n\n\n\n\n\n\u8272\u3005\u5165\u308c\u308b\n\nhomebrew\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n$ brew install wget\n$ brew install git\n$ brew install tree\n$ brew install git-lfs\n$ brew install hub\n$ brew install imagemagick\n$ brew install pngquant\n$ brew install tmux\n$ brew install npm\n$ brew install coreutils\n$ brew install gibo\n$ brew install http://git.io/sshpass.rb \n\n\nQuickLook\u306e\u62e1\u5145\n$ brew cask install qlstephen\n$ brew cask install qlmarkdown\n$ brew cask install quicklook-json\n$ brew cask install quicklook-csv\n$ brew cask install qlimagesize\n\n\nnpm\n$ npm install -g coffeelint\n$ npm install -g eslint\n$ npm install -g grunt-cli\n$ npm install -g gulp\n$ npm install -g emojipacks\n$ npm install -g babel-cli\n$ npm install -g eslint-cli\n\n\nPython2.7\u95a2\u9023\n$ brew install python\n$ brew install pyenv\n$ brew install pyenv-virtualenv\n$ CFLAGS=\"-I$(xcrun --show-sdk-path)/usr/include\" pyenv install -v 2.7.10\n$ easy_install-2.7 pip\n\n\nvenv\u306e\u6709\u52b9\u5316\n$ source /path/to/venv/bin/activate\n\n\n\u53c2\u8003:\nhttp://qiita.com/maosanhioro/items/47a52f96fefba7126f9b\n\nmongodb2.4.14\u95a2\u9023\n\u5f53\u6642version\u6307\u5b9a\u304c\u3042\u3063\u305f\u306e\u3067brew\u3067\u5165\u308c\u3066\u3044\u306a\u3044\n\u53c2\u8003:\nhttp://qiita.com/n0bisuke/items/9def9f1c5e8d878c0811\n\nPATH\u306e\u8ffd\u52a0\nPATH\u306f\u81ea\u8eab\u306e\u74b0\u5883\u3067\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3088\u304f\u78ba\u8a8d\u3059\u308b\u3053\u3068\n\n.bashrc\nexport PATH=\"$(brew --prefix coreutils)/libexec/gnubin:~/.bin:/usr/local/bin:/usr/local/sbin:~/.bin/mongodb:$PATH\"\n\n\n\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u5148\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u76f4\u3059\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u5148\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u304c\u304a\u304b\u3057\u3044\u3063\u3066\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u5834\u5408\u306f\u3053\u308c\u3067\u89e3\u6c7a\u3057\u305f\n$ sudo mkdir /data/\n$ sudo chmod 777 /data\n$ ln -s /usr/local/var/mongodb /data/db\n\n\u53c2\u8003\nhttp://qiita.com/hidesuke/items/56a87d827708c8c770da\nhttp://kzy52.com/entry/2013/07/15/224721\n\nmemcached\u95a2\u4fc2\n$ brew install memcached\nln -sfv /usr/local/opt/memcached/*.plist ~/Library/LaunchAgents\nlaunchctl load ~/Library/LaunchAgents/homebrew.mxcl.memcached.plist\n\n\nredis\u95a2\u4fc2\n$ brew install redis\n$ ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents\nlaunchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist\n\n\nElastic\u95a2\u4fc2\nMac\u306bELK(Elasticsearch, Logstash, Kibana)\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u305f\n\ndocker\ndocker\u95a2\u4fc2\u306fbrew\u3058\u3083\u306a\u304f\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u4f7f\u3063\u305f\u307b\u3046\u304c\u3088\u3055\u3052\nhttp://docs.docker.jp/engine/installation/mac.html\n\ngit\u3092\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\n$ vim ~/.bashrc\n\n\u4e0b\u8a18\u3092\u8ffd\u52a0\n\n.bashrc\n# git\u306e\u88dc\u5b8c\u3059\u308b\nsource /usr/local/etc/bash_completion.d/git-prompt.sh\nsource /usr/local/etc/bash_completion.d/git-completion.bash\n\n# git\u306e\u30d6\u30e9\u30f3\u30c1\u540d\u8868\u793a\u3059\u308b\nGIT_PS1_SHOWDIRTYSTATE=true\nexport PS1='\\h\\[\\033[00m\\]:\\W\\[\\033[32m\\]$(__git_ps1 [%s])\\[\\033[00m\\]\\n\\$ '\n\n# hub\u3092git\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\neval \"$(hub alias -s)\"\n\n\n\u53c2\u8003\u5143\nhttp://qiita.com/koyopro/items/3fce94537df2be6247a3\n\nWireShark\u95a2\u4fc2\n$ brew install wireshark --with-qt\n$ sudo wireshark-qt\n\n\nIf your list of available capture interfaces is empty\n(default OS X behavior), try the following commands:\ncurl https://bugs.wireshark.org/bugzilla/attachment.cgi?id=3373 -o ChmodBPF.tar.gz\n  tar zxvf ChmodBPF.tar.gz\n  open ChmodBPF/Install\\ ChmodBPF.app\nThis adds a launch daemon that changes the permissions of your BPF\ndevices so that all users in the 'admin' group - all users with\n'Allow user to administer this computer' turned on - have both read\nand write access to those devices.\nSee bug report:\nhttps://bugs.wireshark.org/bugzilla/show_bug.cgi?id=3760\n\n\nwercker\u95a2\u4fc2\n$ docker-machine create --driver virtualbox wercker\n$ vim ~/.bashrc\n\nbashrc\u306b\u4e0b\u8a18\u8ffd\u52a0\n\n.bashrc\n# wercker\neval \"$(docker-machine env wercker)\"\n\n\n$ brew tap wercker/wercker\n$ brew install wercker-cli\n$ wercker b\n\n\ncli\u7528token\nwercker\u306bgithub\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u308b\u5834\u5408\u3001cli\u306e\u30ed\u30b0\u30a4\u30f3\u304c\u6b7b\u306c\u306e\u3067\u3053\u3053\u53c2\u7167\u3057\u3066token\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\n\nwercker \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30da\u30fc\u30b8\u306e\u53f3\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u304b\u3089 Settings > Personal tokens \u3092\u305f\u3069\u308a\u3001 wercker-cli \u3068\u3044\u3046\u540d\u524d\u3067\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3057\u3001\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u305d\u308c\u3092 ~/.wercker/token \u30d5\u30a1\u30a4\u30eb\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\u53c2\u7167\u5143 : https://skatsuta.github.io/2015/07/21/wercker-github-login/\n## \u30a2\u30d7\u30ea\u95a2\u4fc2\n\n- chrome\n- google\u65e5\u672c\u8a9e\u5165\u529b\n- xcode\n- slack\n- sourcetree\n- coteditor\n- sublimetext\n- Atom\n- Robomongo\n- Mac Java\n- Intellij Idea\n- P4Merge\n- XtraFinder\n- BetterTouchTool\n- AppCleaner\n- shupapan\n- Redis Desktop Manager\n- CheatSheet\n- Todoist\n- chatwork\n- GIPHY CAPTURE\n\n## chrome\u62e1\u5f35\u7cfb\n\n- Full Page Screen Capture\n- Google Mail Checker\n- Postman\n- \u82f1\u8f9e\u90ce on the WEB \u62e1\u5f35\u6a5f\u80fd\n- Gyazo\n- WebDeveloper\n- PushBullet\n- goo.gl URL Shortener\n\n## IntelliJ\n\n### \u30d7\u30e9\u30b0\u30a4\u30f3\n- .ignore\n- File Watchers\n  - grunt\u3068\u304bgulp\u306b\u4efb\u305b\u3066\u308b\u304b\u3089\u7121\u52b9\u306b\u3057\u305f\u8a18\u61b6\u3082\u3042\u308b\n- LiveEdit\n- Markdown\n- Mongo Plugin\n- Open In GitHub\n- Tasks\n- YAML/Ansible support\n- CamelCase\n- Codic Plugin\n\n### \u8a2d\u5b9a\n- Languages & Frameworks\n  - Python Template Languages\n    - Template language: \n      - Jinja2\u306b\u3059\u308b\uff08Template\u3067Jinja2\u4f7f\u3046\u5834\u5408\u306e\u307f\uff09\n- Tools\n  - Python Integrated Tools\n    - Default test runner:\n      - py.test\u306b\u3059\u308b\uff08\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u304cpy.test\u306e\u5834\u5408\u306e\u307f\uff09\n- Editor\n  - General\n    - Auto Import\n      - python\n        - Show import popup \u306b\u30c1\u30a7\u30c3\u30af\n  - File and Code Templates\n    - python script\n      -  `# coding=utf-8` \u3092\u982d\u306b\u5165\u308c\u3066\u304a\u304f\n\n\n## \u8272\u3005\u5165\u308c\u308b\n\n### homebrew\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n$ brew install wget\n$ brew install git\n$ brew install tree\n$ brew install git-lfs\n$ brew install hub\n$ brew install imagemagick\n$ brew install pngquant\n$ brew install tmux\n$ brew install npm\n$ brew install coreutils\n$ brew install gibo\n$ brew install http://git.io/sshpass.rb \n```\n\n### QuickLook\u306e\u62e1\u5145\n\n```\n$ brew cask install qlstephen\n$ brew cask install qlmarkdown\n$ brew cask install quicklook-json\n$ brew cask install quicklook-csv\n$ brew cask install qlimagesize\n```\n\n## npm\n\n```\n$ npm install -g coffeelint\n$ npm install -g eslint\n$ npm install -g grunt-cli\n$ npm install -g gulp\n$ npm install -g emojipacks\n$ npm install -g babel-cli\n$ npm install -g eslint-cli\n```\n## Python2.7\u95a2\u9023\n\n```\n$ brew install python\n$ brew install pyenv\n$ brew install pyenv-virtualenv\n$ CFLAGS=\"-I$(xcrun --show-sdk-path)/usr/include\" pyenv install -v 2.7.10\n$ easy_install-2.7 pip\n```\n\n```sh:venv\u306e\u6709\u52b9\u5316 \n$ source /path/to/venv/bin/activate\n```\n\n\u53c2\u8003:\nhttp://qiita.com/maosanhioro/items/47a52f96fefba7126f9b\n\n## mongodb2.4.14\u95a2\u9023\n\n\u5f53\u6642version\u6307\u5b9a\u304c\u3042\u3063\u305f\u306e\u3067brew\u3067\u5165\u308c\u3066\u3044\u306a\u3044\n\u53c2\u8003:\nhttp://qiita.com/n0bisuke/items/9def9f1c5e8d878c0811\n\n\n### PATH\u306e\u8ffd\u52a0\n\nPATH\u306f\u81ea\u8eab\u306e\u74b0\u5883\u3067\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3088\u304f\u78ba\u8a8d\u3059\u308b\u3053\u3068\n\n```:.bashrc\nexport PATH=\"$(brew --prefix coreutils)/libexec/gnubin:~/.bin:/usr/local/bin:/usr/local/sbin:~/.bin/mongodb:$PATH\"\n```\n\n### \u30c7\u30fc\u30bf\u4fdd\u5b58\u5148\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u76f4\u3059\n\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u5148\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u304c\u304a\u304b\u3057\u3044\u3063\u3066\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u5834\u5408\u306f\u3053\u308c\u3067\u89e3\u6c7a\u3057\u305f\n\n```\n$ sudo mkdir /data/\n$ sudo chmod 777 /data\n$ ln -s /usr/local/var/mongodb /data/db\n```\n\n\u53c2\u8003\nhttp://qiita.com/hidesuke/items/56a87d827708c8c770da\nhttp://kzy52.com/entry/2013/07/15/224721\n\n\n## memcached\u95a2\u4fc2\n\n```sh\n$ brew install memcached\nln -sfv /usr/local/opt/memcached/*.plist ~/Library/LaunchAgents\nlaunchctl load ~/Library/LaunchAgents/homebrew.mxcl.memcached.plist\n```\n\n## redis\u95a2\u4fc2\n\n```sh\n$ brew install redis\n$ ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents\nlaunchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist\n```\n\n## Elastic\u95a2\u4fc2\n\n[Mac\u306bELK(Elasticsearch, Logstash, Kibana)\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u305f](http://qiita.com/HRS_O/items/112a4e001a4599dcf768)\n\n\n## docker\n\ndocker\u95a2\u4fc2\u306fbrew\u3058\u3083\u306a\u304f\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u4f7f\u3063\u305f\u307b\u3046\u304c\u3088\u3055\u3052\n\nhttp://docs.docker.jp/engine/installation/mac.html\n\n\n## git\u3092\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\n```\n$ vim ~/.bashrc\n```\n\n\u4e0b\u8a18\u3092\u8ffd\u52a0\n\n```bash:.bashrc\n# git\u306e\u88dc\u5b8c\u3059\u308b\nsource /usr/local/etc/bash_completion.d/git-prompt.sh\nsource /usr/local/etc/bash_completion.d/git-completion.bash\n\n# git\u306e\u30d6\u30e9\u30f3\u30c1\u540d\u8868\u793a\u3059\u308b\nGIT_PS1_SHOWDIRTYSTATE=true\nexport PS1='\\h\\[\\033[00m\\]:\\W\\[\\033[32m\\]$(__git_ps1 [%s])\\[\\033[00m\\]\\n\\$ '\n\n# hub\u3092git\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\neval \"$(hub alias -s)\"\n```\n\n\u53c2\u8003\u5143\nhttp://qiita.com/koyopro/items/3fce94537df2be6247a3\n\n## WireShark\u95a2\u4fc2\n\n```\n$ brew install wireshark --with-qt\n$ sudo wireshark-qt\n```\n\n> If your list of available capture interfaces is empty\n(default OS X behavior), try the following commands:\n\n>  curl https://bugs.wireshark.org/bugzilla/attachment.cgi?id=3373 -o ChmodBPF.tar.gz\n  tar zxvf ChmodBPF.tar.gz\n  open ChmodBPF/Install\\ ChmodBPF.app\n\n> This adds a launch daemon that changes the permissions of your BPF\ndevices so that all users in the 'admin' group - all users with\n'Allow user to administer this computer' turned on - have both read\nand write access to those devices.\n\n> See bug report:\n  https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=3760\n\n\n## wercker\u95a2\u4fc2\n\n```sh:\n$ docker-machine create --driver virtualbox wercker\n$ vim ~/.bashrc\n```\n\nbashrc\u306b\u4e0b\u8a18\u8ffd\u52a0\n\n```bash:.bashrc\n# wercker\neval \"$(docker-machine env wercker)\"\n```\n\n```sh:\n$ brew tap wercker/wercker\n$ brew install wercker-cli\n$ wercker b\n```\n\n### cli\u7528token\n\nwercker\u306bgithub\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u308b\u5834\u5408\u3001cli\u306e\u30ed\u30b0\u30a4\u30f3\u304c\u6b7b\u306c\u306e\u3067[\u3053\u3053](https://skatsuta.github.io/2015/07/21/wercker-github-login/)\u53c2\u7167\u3057\u3066token\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\n\n> wercker \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30da\u30fc\u30b8\u306e\u53f3\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u304b\u3089 Settings > Personal tokens \u3092\u305f\u3069\u308a\u3001 wercker-cli \u3068\u3044\u3046\u540d\u524d\u3067\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3057\u3001\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u305d\u308c\u3092 ~/.wercker/token \u30d5\u30a1\u30a4\u30eb\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\u53c2\u7167\u5143 : https://skatsuta.github.io/2015/07/21/wercker-github-login/\n", "tags": ["Mac", "\u74b0\u5883\u69cb\u7bc9"]}