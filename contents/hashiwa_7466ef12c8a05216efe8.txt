{"context": "\u203b\u672c\u8a18\u4e8b\u306e\u5f8c\u534a\u306b\u4fee\u6b63\u3057\u305f\u3082\u306e\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nDB.java\nimport java.sql.*;\n\npublic class DB {\n  public static void main(String[] args) throws Exception {\n    if (args.length != 1 || \"\".equals(args[0].trim())) {\n      System.err.println(\"Error: <SQL>\");\n      System.exit(1);\n    }\n    String sql = args[0];\n    Connection conn = null;\n    try {\n      String url = \"jdbc: ... \";\n      conn = DriverManager.getConnection(url);\n      Statement stat = conn.createStatement();\n      ResultSet result = stat.executeQuery(sql);\n      while (result.next()) {\n        System.out.println(createRowString(result));\n      }\n    } finally {\n      if (conn != null) conn.close();\n    }\n  }\n\n  private static String createRowString(ResultSet result) {\n    StringBuilder buf = new StringBuilder();\n    for (int i=1 ;; i++) {\n      try {\n        String s = result.getString(i);\n        buf.append(s);\n        buf.append('\\t');\n      } catch(SQLException e) {\n        break;\n      }\n    }\n    return buf.toString();\n  }\n}\n\n\nurl \u306f\u4f8b\u3048\u3070JavaDB(Apache Derby)\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u3002\njdbc:derby:/path/to/database/dir;create=true;user=<username>;password=<password>\n\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306bSQL\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002\u7d50\u679c\u306f\u30bf\u30d6\u533a\u5207\u308a\u3067\u51fa\u529b\u3055\u308c\u308b\u3002\n$ javac -cp .:<\u305d\u306e\u4ed6\u5fc5\u8981\u306ajar\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9> DB.java\n$ java -cp .:<\u305d\u306e\u4ed6\u5fc5\u8981\u306ajar\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9> DB \"SELECT * FROM xxtable\"\naaa  AAA  111\nbbb  BBB  222\nccc  CCC  333\n\nSELECT\u6587\u3067 * \u3092\u4f7f\u3063\u3066\u4efb\u610f\u306e\u30ab\u30e9\u30e0\u3092\u51fa\u529b\u3059\u308b\u5834\u5408\u3001\u3044\u304f\u3064\u30ab\u30e9\u30e0\u304c\u51fa\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067createRowString()\u306a\u3093\u3066\u30e1\u30bd\u30c3\u30c9\u4f5c\u3063\u3066\u9811\u5f35\u3063\u305f\u3051\u3069\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u306a\u3044\u306e\u304b\u306a\u30fb\u30fb\u30fb\n\n2016/12/28\u8ffd\u8a18\nsaka1029\u3055\u3093\u306b\u30ab\u30e9\u30e0\u6570\u53d6\u5f97\u65b9\u6cd5\u3092\u30b3\u30e1\u30f3\u30c8\u8cb0\u3063\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u7de8\u96c6\u3002\n2017/01/03\u7de8\u96c6\nUPDATE\u6587\u3084DELETE\u6587\u304c\u5b9f\u884c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\nDB.java\nimport java.sql.*;\n\npublic class DB {\n  private static final  String URL = ... ;\n  public static void main(String[] args) throws Exception {\n    if (args.length != 1 || \"\".equals(args[0].trim())) {\n      System.err.println(\"Error: <SQL>\");\n      System.exit(1);\n    }\n    String sql = args[0].trim();\n    Connection conn = null;\n    try {\n      conn = DriverManager.getConnection(URL);\n      Statement stat = conn.createStatement();\n      if (isSelectStatement(sql)) {\n        doSelect(stat, sql);\n      } else {\n        doUpdate(stat, sql);\n      }\n    } finally {\n      if (conn != null) conn.close();\n    }\n  }\n\n  private static boolean isSelectStatement(String sql) {\n    String type = sql.split(\" \")[0].toLowerCase();\n    return \"select\".equals(type);\n  }\n\n  private static void doSelect(Statement stat, String sql) throws Exception {\n    ResultSet result = stat.executeQuery(sql);\n    while (result.next()) {\n      System.out.println(createRowString(result));\n    }\n  }\n\n  private static void doUpdate(Statement stat, String sql) throws Exception {\n    int rowCount = stat.executeUpdate(sql);\n    System.out.println(\"rows = \" + rowCount);\n  }\n\n  private static String createRowString(ResultSet result) throws SQLException {\n    ResultSetMetaData metadata = result.getMetaData();\n    int columnCount = metadata.getColumnCount();\n    StringBuilder buf = new StringBuilder();\n    for (int i=1 ; i<=columnCount ; i++) {\n      String s = result.getString(i);\n      buf.append(s);\n      buf.append('\\t');\n    }\n    return buf.toString().trim();\n  }\n}\n\n\n\u203b\u672c\u8a18\u4e8b\u306e\u5f8c\u534a\u306b\u4fee\u6b63\u3057\u305f\u3082\u306e\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```java:DB.java\nimport java.sql.*;\n\npublic class DB {\n  public static void main(String[] args) throws Exception {\n    if (args.length != 1 || \"\".equals(args[0].trim())) {\n      System.err.println(\"Error: <SQL>\");\n      System.exit(1);\n    }\n    String sql = args[0];\n    Connection conn = null;\n    try {\n      String url = \"jdbc: ... \";\n      conn = DriverManager.getConnection(url);\n      Statement stat = conn.createStatement();\n      ResultSet result = stat.executeQuery(sql);\n      while (result.next()) {\n        System.out.println(createRowString(result));\n      }\n    } finally {\n      if (conn != null) conn.close();\n    }\n  }\n\n  private static String createRowString(ResultSet result) {\n    StringBuilder buf = new StringBuilder();\n    for (int i=1 ;; i++) {\n      try {\n        String s = result.getString(i);\n        buf.append(s);\n        buf.append('\\t');\n      } catch(SQLException e) {\n        break;\n      }\n    }\n    return buf.toString();\n  }\n}\n```\n\nurl \u306f\u4f8b\u3048\u3070JavaDB(Apache Derby)\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u3002\n\n```\njdbc:derby:/path/to/database/dir;create=true;user=<username>;password=<password>\n```\n\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306bSQL\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002\u7d50\u679c\u306f\u30bf\u30d6\u533a\u5207\u308a\u3067\u51fa\u529b\u3055\u308c\u308b\u3002\n\n```\n$ javac -cp .:<\u305d\u306e\u4ed6\u5fc5\u8981\u306ajar\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9> DB.java\n$ java -cp .:<\u305d\u306e\u4ed6\u5fc5\u8981\u306ajar\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9> DB \"SELECT * FROM xxtable\"\naaa  AAA  111\nbbb  BBB  222\nccc  CCC  333\n```\n\nSELECT\u6587\u3067 * \u3092\u4f7f\u3063\u3066\u4efb\u610f\u306e\u30ab\u30e9\u30e0\u3092\u51fa\u529b\u3059\u308b\u5834\u5408\u3001\u3044\u304f\u3064\u30ab\u30e9\u30e0\u304c\u51fa\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067createRowString()\u306a\u3093\u3066\u30e1\u30bd\u30c3\u30c9\u4f5c\u3063\u3066\u9811\u5f35\u3063\u305f\u3051\u3069\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u306a\u3044\u306e\u304b\u306a\u30fb\u30fb\u30fb\n\n---\n2016/12/28\u8ffd\u8a18\n[saka1029](http://qiita.com/saka1029)\u3055\u3093\u306b\u30ab\u30e9\u30e0\u6570\u53d6\u5f97\u65b9\u6cd5\u3092\u30b3\u30e1\u30f3\u30c8\u8cb0\u3063\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u7de8\u96c6\u3002\n\n2017/01/03\u7de8\u96c6\nUPDATE\u6587\u3084DELETE\u6587\u304c\u5b9f\u884c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\n```java:DB.java\nimport java.sql.*;\n\npublic class DB {\n  private static final  String URL = ... ;\n  public static void main(String[] args) throws Exception {\n    if (args.length != 1 || \"\".equals(args[0].trim())) {\n      System.err.println(\"Error: <SQL>\");\n      System.exit(1);\n    }\n    String sql = args[0].trim();\n    Connection conn = null;\n    try {\n      conn = DriverManager.getConnection(URL);\n      Statement stat = conn.createStatement();\n      if (isSelectStatement(sql)) {\n        doSelect(stat, sql);\n      } else {\n        doUpdate(stat, sql);\n      }\n    } finally {\n      if (conn != null) conn.close();\n    }\n  }\n\n  private static boolean isSelectStatement(String sql) {\n    String type = sql.split(\" \")[0].toLowerCase();\n    return \"select\".equals(type);\n  }\n\n  private static void doSelect(Statement stat, String sql) throws Exception {\n    ResultSet result = stat.executeQuery(sql);\n    while (result.next()) {\n      System.out.println(createRowString(result));\n    }\n  }\n\n  private static void doUpdate(Statement stat, String sql) throws Exception {\n    int rowCount = stat.executeUpdate(sql);\n    System.out.println(\"rows = \" + rowCount);\n  }\n\n  private static String createRowString(ResultSet result) throws SQLException {\n    ResultSetMetaData metadata = result.getMetaData();\n    int columnCount = metadata.getColumnCount();\n    StringBuilder buf = new StringBuilder();\n    for (int i=1 ; i<=columnCount ; i++) {\n      String s = result.getString(i);\n      buf.append(s);\n      buf.append('\\t');\n    }\n    return buf.toString().trim();\n  }\n}\n```\n", "tags": ["Java", "JDBC"]}