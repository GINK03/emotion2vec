{"context": "\n\n\u80cc\u666f\n\nreact-chartjs\u306fChart.js\u3092\u4f7f\u3063\u305fReact\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\nreact-chartjs\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u308bChart.js\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306fv1.1.1\nChart.js\u304c\u7a4d\u307f\u4e0a\u3052\u68d2\u30b0\u30e9\u30d5\u306b\u5bfe\u5fdc\u3057\u305f\u306e\u306fv2\u304b\u3089\n\nreact-chartjs\u304b\u3089Chart.js v2\u304c\u4f7f\u3048\u306a\u3044\u3068\u7a4d\u307f\u4e0a\u3052\u68d2\u30b0\u30e9\u30d5\u304c\u66f8\u3051\u307e\u305b\u3093\u3002\n\n\u4f5c\u6226\nreacth-chartjs\u306fchartjs-v2\u30d6\u30e9\u30f3\u30c1\u3067Chart.js v2\u5bfe\u5fdc\u7248\u3092\u958b\u767a\u4e2d\u3067\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u7a4d\u307f\u4e0a\u3052\u68d2\u30b0\u30e9\u30d5\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n\u30b4\u30fc\u30eb\nChart.js\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u3068\u540c\u3058\u30b0\u30e9\u30d5\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n\u624b\u6bb5\n\nindex.jsx\n\nindex.jsx\nconst React = require('react')\nconst ReactDOM = require('react-dom')\nconst {Bar} = require(\"react-chartjs\")\n\nconst chartData = {\n  labels: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\"\n  ],\n  datasets: [\n    {\n      label: 'Dataset 1',\n      backgroundColor: \"rgba(220,220,220,0.5)\",\n      data: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    }, {\n      label: 'Dataset 2',\n      backgroundColor: \"rgba(151,187,205,0.5)\",\n      data: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    }, {\n      label: 'Dataset 3',\n      backgroundColor: \"rgba(151,187,205,0.5)\",\n      data: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    }\n  ]\n}\n\nconst chartOption = {\n  title: {\n    display: true,\n    text: \"Chart.js Bar Chart - Stacked\"\n  },\n  tooltips: {\n    mode: 'label'\n  },\n  responsive: true,\n  scales: {\n    xAxes: [\n      {\n        stacked: true\n      }\n    ],\n    yAxes: [\n      {\n        stacked: true\n      }\n    ]\n  }\n}\n\nconst App = () => <Bar data={chartData} options={chartOption} width=\"600\" height=\"250\" onClick={this.handleClick} ref={(ref) => this.Bar = ref}/>\n\nReactDOM.render(\n  <App/>, document.querySelector('#container'))\n\nfunction randomScalingFactor() {\n  return (Math.random() > 0.5\n    ? 1.0\n    : -1.0) * Math.round(Math.random() * 100)\n}\n\nfunction randomColorFactor() {\n  return Math.round(Math.random() * 255)\n}\n\n\n\nindex.html\n\nindex.html\n<!DOCTYPE html>\n<html>\n  <body>\n    <div id=\"container\">\n    </div>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n\n\n\n\u30d3\u30eb\u30c9\nbabel\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n.babelrc\n{\n  \"plugins\": [\"transform-react-jsx\"]\n}\n\n\nbrowserify\u3067\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\nnpm init -y\nnpm i -D browserify babelify babel-plugin-transform-react-jsx react react-dom chart.js\nnpm i -D react-chartjs@git://github.com/jhudson8/react-chartjs.git#chartjs-v2\nnode_modules/browserify/bin/cmd.js -t babelify index.jsx -o bundle.js\n\nreact-chartjs\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306bgit\u306e\u30d6\u30e9\u30f3\u30c1\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u7d50\u679c\nindex.html\u3092\u958b\u304f\u3068\u3001\u6b21\u306e\u30b0\u30e9\u30d5\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\n\u53c2\u8003\n\nStacked bar chart \u00b7 Issue #10 \u00b7 chartjs/Chart.js\nreact-chartjs\u306e\u4f7f\u3044\u65b9 - Qiita\n\n\n# \u80cc\u666f\n\n1. react-chartjs\u306fChart.js\u3092\u4f7f\u3063\u305fReact\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n1. react-chartjs\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u308bChart.js\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306fv1.1.1\n1. Chart.js\u304c\u7a4d\u307f\u4e0a\u3052\u68d2\u30b0\u30e9\u30d5\u306b\u5bfe\u5fdc\u3057\u305f\u306e\u306fv2\u304b\u3089\n\nreact-chartjs\u304b\u3089Chart.js v2\u304c\u4f7f\u3048\u306a\u3044\u3068\u7a4d\u307f\u4e0a\u3052\u68d2\u30b0\u30e9\u30d5\u304c\u66f8\u3051\u307e\u305b\u3093\u3002\n\n# \u4f5c\u6226\n\nreacth-chartjs\u306fchartjs-v2\u30d6\u30e9\u30f3\u30c1\u3067Chart.js v2\u5bfe\u5fdc\u7248\u3092\u958b\u767a\u4e2d\u3067\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u7a4d\u307f\u4e0a\u3052\u68d2\u30b0\u30e9\u30d5\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n# \u30b4\u30fc\u30eb\nChart.js\u306e[\u30b5\u30f3\u30d7\u30eb](https://github.com/chartjs/Chart.js/blob/master/samples/bar-stacked.html)\u304c\u3042\u308a\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-16 13.45.22.png](https://qiita-image-store.s3.amazonaws.com/0/15964/811b9bed-7c84-1e9d-c8f0-8c1b90e3d96c.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-16 13.45.22.png\")\n\n\u3053\u308c\u3068\u540c\u3058\u30b0\u30e9\u30d5\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n# \u624b\u6bb5\n## index.jsx\n```js:index.jsx\nconst React = require('react')\nconst ReactDOM = require('react-dom')\nconst {Bar} = require(\"react-chartjs\")\n\nconst chartData = {\n  labels: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\"\n  ],\n  datasets: [\n    {\n      label: 'Dataset 1',\n      backgroundColor: \"rgba(220,220,220,0.5)\",\n      data: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    }, {\n      label: 'Dataset 2',\n      backgroundColor: \"rgba(151,187,205,0.5)\",\n      data: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    }, {\n      label: 'Dataset 3',\n      backgroundColor: \"rgba(151,187,205,0.5)\",\n      data: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    }\n  ]\n}\n\nconst chartOption = {\n  title: {\n    display: true,\n    text: \"Chart.js Bar Chart - Stacked\"\n  },\n  tooltips: {\n    mode: 'label'\n  },\n  responsive: true,\n  scales: {\n    xAxes: [\n      {\n        stacked: true\n      }\n    ],\n    yAxes: [\n      {\n        stacked: true\n      }\n    ]\n  }\n}\n\nconst App = () => <Bar data={chartData} options={chartOption} width=\"600\" height=\"250\" onClick={this.handleClick} ref={(ref) => this.Bar = ref}/>\n\nReactDOM.render(\n  <App/>, document.querySelector('#container'))\n\nfunction randomScalingFactor() {\n  return (Math.random() > 0.5\n    ? 1.0\n    : -1.0) * Math.round(Math.random() * 100)\n}\n\nfunction randomColorFactor() {\n  return Math.round(Math.random() * 255)\n}\n```\n\n## index.html\n```html:index.html\n<!DOCTYPE html>\n<html>\n  <body>\n    <div id=\"container\">\n    </div>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n```\n\n## \u30d3\u30eb\u30c9\nbabel\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```js:.babelrc\n{\n  \"plugins\": [\"transform-react-jsx\"]\n}\n```\n\nbrowserify\u3067\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\n```\nnpm init -y\nnpm i -D browserify babelify babel-plugin-transform-react-jsx react react-dom chart.js\nnpm i -D react-chartjs@git://github.com/jhudson8/react-chartjs.git#chartjs-v2\nnode_modules/browserify/bin/cmd.js -t babelify index.jsx -o bundle.js\n```\n\nreact-chartjs\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306bgit\u306e\u30d6\u30e9\u30f3\u30c1\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n## \u7d50\u679c\nindex.html\u3092\u958b\u304f\u3068\u3001\u6b21\u306e\u30b0\u30e9\u30d5\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-16 13.47.26.png](https://qiita-image-store.s3.amazonaws.com/0/15964/dd24bf78-1447-cd8b-a275-5308b2d74595.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-16 13.47.26.png\")\n\n# \u53c2\u8003\n- [Stacked bar chart \u00b7 Issue #10 \u00b7 chartjs/Chart.js](https://github.com/chartjs/Chart.js/issues/10)\n- [react-chartjs\u306e\u4f7f\u3044\u65b9 - Qiita](http://qiita.com/ledsun/items/2158eb46eec10283e4ab)\n", "tags": ["React", "reactjs", "chart.js", "JavaScript"]}