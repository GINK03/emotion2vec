{"context": " More than 1 year has passed since last update.\u70b9(\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb)\u304c\u3001\u56de\u8ee2\u3059\u308b\u77e9\u5f62\u306e\u4e2d\u306b\u3042\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 Ruby-Processing \u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n\npoint-in-rotate-rect.rb\nload_library :vecmath\n\n# XY \u8ef8\u306b\u5e73\u884c\u3067\u306f\u306a\u3044\u77e9\u5f62\u306b\u70b9\u304c\u542b\u307e\u308c\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n# Y \u8ef8\u4e0a\u65b9\u5411\u3092\u6b63\u3068\u3059\u308b(\u63cf\u753b\u6642\u306b\u7b26\u53f7\u53cd\u8ee2\u3055\u305b\u308b)\n\n# a ----- d\n# |       |\n# |       |\n# b ----- c\n\ndef setup\n  size 400, 400\n\n  # \u9577\u65b9\u5f62\u3092\u69cb\u6210\u3059\u308b 4 \u3064\u306e\u30d9\u30af\u30c8\u30eb\n  @a = Vec2D.new(-100, 50)\n  @b = Vec2D.new(-100, -50)\n  @c = Vec2D.new(100, -50)\n  @d = Vec2D.new(100, 50)\nend\n\ndef draw\n  background 255\n\n  translate width/2, height/2\n\n  # XY \u8ef8\n  stroke 0xE0, 0xE0, 0xE0\n  line -width, 0, width, 0\n  line 0, -height, 0, height\n  stroke 0\n\n  p = Vec2D.new(mouse_x - width/2, -(mouse_y - height/2))\n  if point_in_rectangle?(p, @a, @b, @c, @d)\n    fill 100\n  else\n    no_fill\n  end\n  draw_rectangle @a, @b, @c, @d\n\n  # \u77e9\u5f62\u3092\u56de\u8ee2\u3055\u305b\u308b\n  t = 1.radians * 0.6\n  @a.rotate! t\n  @b.rotate! t\n  @c.rotate! t\n  @d.rotate! t\nend\n\n# \u9577\u65b9\u5f62\u3092\u63cf\u304f\ndef draw_rectangle(a, b, c, d)\n  begin_shape\n  vertex a.x, -a.y\n  vertex b.x, -b.y\n  vertex c.x, -c.y  \n  vertex d.x, -d.y\n  end_shape CLOSE\nend\n\n# \u30d9\u30af\u30c8\u30eb a \u3068\u30d9\u30af\u30c8\u30eb b \u306e\u306a\u3059\u89d2\u5ea6\u3092\u6c42\u3081\u308b\n# 0 ~ 2pi \u306e\u7bc4\u56f2\u3067\u8fd4\u3059\ndef calc_angle(a, b)\n  angle = Math.atan2(b.x * a.y - a.x * b.y, a.x * b.x + a.y * b.y)\n  angle += 2 * PI if angle < 0\n  angle\nend\n\n# \u70b9 p \u304c\u9577\u65b9\u5f62(\u70b9 a, b, c, d)\u306e\u4e2d\u306b\u3042\u308b\u304b\ndef point_in_rectangle?(p, a, b, c, d)\n  # \u89d2 abr \u3068\u3001\u89d2 cdr \u304c\u3044\u305a\u308c\u3082 90 \u5ea6\u4ee5\u4e0b\u3067\u3042\u308c\u3070\u3001\u70b9\u306f\u9577\u65b9\u5f62\u306e\u5185\u90e8\u306b\u3042\u308b  \n  ba = a - b # \u30d9\u30af\u30c8\u30eb ba\n  bp = p - b\n\n  dc = c - d\n  dp = p - d\n\n  angle1 = calc_angle(ba, bp)\n  angle2 = calc_angle(dc, dp)\n  angle1.degrees <= 90 && angle2.degrees <= 90\nend\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ rp5 run point-in-rotate-rect.rb\n\n\n\u53c2\u8003\n\n\u30d9\u30af\u30c8\u30eb\u306e\u306a\u3059\u89d2\u5ea6\u3092\u6c42\u3081\u308b\n\u30ec\u30fc\u30b6\u30fc\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\n\n\n\u70b9(\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb)\u304c\u3001\u56de\u8ee2\u3059\u308b\u77e9\u5f62\u306e\u4e2d\u306b\u3042\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 Ruby-Processing \u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n![point-in-rotate-rect.gif](https://qiita-image-store.s3.amazonaws.com/0/1900/9d6ae28e-e3f1-660c-c52a-68cd7638f38c.gif \"point-in-rotate-rect.gif\")\n\n```ruby:point-in-rotate-rect.rb\nload_library :vecmath\n\n# XY \u8ef8\u306b\u5e73\u884c\u3067\u306f\u306a\u3044\u77e9\u5f62\u306b\u70b9\u304c\u542b\u307e\u308c\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n# Y \u8ef8\u4e0a\u65b9\u5411\u3092\u6b63\u3068\u3059\u308b(\u63cf\u753b\u6642\u306b\u7b26\u53f7\u53cd\u8ee2\u3055\u305b\u308b)\n\n# a ----- d\n# |       |\n# |       |\n# b ----- c\n\ndef setup\n  size 400, 400\n\n  # \u9577\u65b9\u5f62\u3092\u69cb\u6210\u3059\u308b 4 \u3064\u306e\u30d9\u30af\u30c8\u30eb\n  @a = Vec2D.new(-100, 50)\n  @b = Vec2D.new(-100, -50)\n  @c = Vec2D.new(100, -50)\n  @d = Vec2D.new(100, 50)\nend\n\ndef draw\n  background 255\n\n  translate width/2, height/2\n\n  # XY \u8ef8\n  stroke 0xE0, 0xE0, 0xE0\n  line -width, 0, width, 0\n  line 0, -height, 0, height\n  stroke 0\n\n  p = Vec2D.new(mouse_x - width/2, -(mouse_y - height/2))\n  if point_in_rectangle?(p, @a, @b, @c, @d)\n    fill 100\n  else\n    no_fill\n  end\n  draw_rectangle @a, @b, @c, @d\n\n  # \u77e9\u5f62\u3092\u56de\u8ee2\u3055\u305b\u308b\n  t = 1.radians * 0.6\n  @a.rotate! t\n  @b.rotate! t\n  @c.rotate! t\n  @d.rotate! t\nend\n\n# \u9577\u65b9\u5f62\u3092\u63cf\u304f\ndef draw_rectangle(a, b, c, d)\n  begin_shape\n  vertex a.x, -a.y\n  vertex b.x, -b.y\n  vertex c.x, -c.y  \n  vertex d.x, -d.y\n  end_shape CLOSE\nend\n\n# \u30d9\u30af\u30c8\u30eb a \u3068\u30d9\u30af\u30c8\u30eb b \u306e\u306a\u3059\u89d2\u5ea6\u3092\u6c42\u3081\u308b\n# 0 ~ 2pi \u306e\u7bc4\u56f2\u3067\u8fd4\u3059\ndef calc_angle(a, b)\n  angle = Math.atan2(b.x * a.y - a.x * b.y, a.x * b.x + a.y * b.y)\n  angle += 2 * PI if angle < 0\n  angle\nend\n\n# \u70b9 p \u304c\u9577\u65b9\u5f62(\u70b9 a, b, c, d)\u306e\u4e2d\u306b\u3042\u308b\u304b\ndef point_in_rectangle?(p, a, b, c, d)\n  # \u89d2 abr \u3068\u3001\u89d2 cdr \u304c\u3044\u305a\u308c\u3082 90 \u5ea6\u4ee5\u4e0b\u3067\u3042\u308c\u3070\u3001\u70b9\u306f\u9577\u65b9\u5f62\u306e\u5185\u90e8\u306b\u3042\u308b  \n  ba = a - b # \u30d9\u30af\u30c8\u30eb ba\n  bp = p - b\n\n  dc = c - d\n  dp = p - d\n\n  angle1 = calc_angle(ba, bp)\n  angle2 = calc_angle(dc, dp)\n  angle1.degrees <= 90 && angle2.degrees <= 90\nend\n```\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n$ rp5 run point-in-rotate-rect.rb\n```\n\n## \u53c2\u8003\n\n- [\u30d9\u30af\u30c8\u30eb\u306e\u306a\u3059\u89d2\u5ea6\u3092\u6c42\u3081\u308b](https://spphire9.wordpress.com/2013/12/27/%E3%83%99%E3%82%AF%E3%83%88%E3%83%AB%E3%81%AE%E3%81%AA%E3%81%99%E8%A7%92%E5%BA%A6%E3%82%92%E6%B1%82%E3%82%81%E3%82%8B/)\n- [\u30ec\u30fc\u30b6\u30fc\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046](http://dixq.net/rp/34.html)\n\n", "tags": ["Ruby-Processing", "processing"]}