{"tags": ["\u30a4\u30f3\u30d7\u30ea\u30e1\u30f3\u30c6\u30a3\u30f3\u30b0\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30ca\u30eb\u30e9\u30f3\u30b2\u30fc\u30b8\u30ba"], "context": "\n\n21\u65e5\u76ee\n20\u65e5\u76ee\u306f\u5168\u8a33\u3057\u3066\u7121\u99c4\u306b\u9577\u304b\u3063\u305f\u306e\u3067\u8e93\u3044\u305f\u3068\u3053\u308d\u3068Exercise\u3060\u3051\u66f8\u304f\n\n2.7 Mark 5: Structured data\n\u4eca\u306e\u5b9f\u88c5\u3058\u3083\u69cb\u9020\u578b\u306f\u304d\u3064\u3044\n\nExercise 2.18\n\u306a\u305ccase\u5f0f\u306f\u4eca\u306e\u30de\u30b7\u30f3\u3067\u53d6\u308a\u6271\u3046\u306e\u304c\u96e3\u3057\u3044\u304b?(case\u5f0f\u3067instantiate\u95a2\u6570\u304c\u3069\u3046\u52d5\u304f\u304b\u898b\u3088)\n\u2192 \u308f\u304b\u3089\u3093.\n\n2.7.1 Building structured data\n\u5b9f\u88c5\u3059\u308b\u3079\u304d\u3082\u306e\u30922.7.3\u3067\u66f8\u3044\u3066\u3044\u3066\u304f\u308c\u3066\u308b\u306e\u3067,\u3059\u3050\u5b9f\u88c5\u305b\u305a\u306b2.7.3\u3092\u53c2\u8003\u306b\u3059\u308b.\n\u4e00\u822c\u7684\u306acase\u5f0f\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u306e\u3067\u7c21\u5358\u306aBoolean\u304b\u3089\u5b9f\u88c5\u3059\u308b.\n\n2.7.2 Conditionals\nBoolean\u306fMiranda\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u66f8\u304b\u308c\u308b.\nboolean ::= False | True\n2\u3064\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf,True,False\u304c\u3042\u308b.\u305d\u308c\u305e\u308c\u30a2\u30ea\u30c6\u30a3\u306f0\u3067,\u79c1\u305f\u3061\u306f\u4efb\u610f\u306b1\u3092False\u306b,2\u3092True\u306b\u5f53\u3066\u306f\u3081\u3089\u308c\u308b.\n\u3088\u3063\u3066Core Language\u3067\u306f\u4ee5\u4e0b\u306e\u5b9a\u7fa9\u3092\u5f97\u308b:\nFalse = Pack{1,0}\nTrue = Pack{2,0}\n\n\nExercise 2.19\n\u6761\u4ef6\u5f0f\u306e\u72b6\u614b\u9077\u79fb\u30eb\u30fc\u30eb\u3092\u5b8c\u6210\u3055\u305b\u3088.3\u3064\u306e\u30eb\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3042\u308b: 2\u3064\u306f\u65e2\u306bif\u306e\u6761\u4ef6\u5f0f\u304c\u8a55\u4fa1\u3055\u308c\u3066\u3044\u308b\u5834\u5408; 1\u3064\u306f\u307e\u3060\u8a55\u4fa1\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3067\u3042\u308b(Rule 2.9\u3092\u53c2\u8003\u306b\u305b\u3088).\u6700\u521d\u306e2\u3064\u306e\u5834\u5408\u306f\u9593\u63a5\u53c2\u7167\u30ce\u30fc\u30c9\u3092\u7528\u3044\u308b\u306e\u304c\u826f\u3044.\n\u3055\u3089\u306a\u308b\u30eb\u30fc\u30eb\u304c1\u3064\u6b20\u843d\u3057\u3066\u3044\u308b.\u306a\u3093\u3060\u308d\u3046\u304b?(\u30d2\u30f3\u30c8: \u6761\u4ef6\u5f0f\u306e\u8a55\u4fa1\u304c\u7d42\u4e86\u3057\u305f\u6642,\u6761\u4ef6\u5f0f\u306f\u3069\u306e\u3088\u3046\u306b\u518d\u8a66\u884c\u3055\u308c\u308b\u3060\u308d\u3046\u304b?)\n\n\n\nh\n\n\n\n\n\na\n\nNPrim If\n\n\nac\n\nNAp a b\n\n\nt\n\nNData 2 []\n\n\nf\n\nNData 1 []\n\n\nat\n\nNAp ac bt\n\n\naf\n\nNAp at bf\n\n\n\n\n\n\na : ac : at : af : []\nd\nh[ac: NAp a t ]\nf\n\n\n\n\na : []\nd\nh[af: NInd bt]\nf\n\n\n\n\n\n\na : ac : at : af : []\nd\nh[ac: NAp a f ]\nf\n\n\n\n\na : []\nd\nh[af: NInd bf]\nf\n\n\n\n\n\n\na : ac : at : af : []\nd\nh[ac: NAp a b]\nf\n\n\n\n\nb : []\n(ac : at : af : []) : d\nh\nf\n\n\n\n\n\n\na : []\ns : d\nh[a: NData _ _]\nf\n\n\n\n\ns\nd\nh\nf\n\n\n\n\nExercise 2.20\nCore Language\u3067\u306eor,xor,not\u306e\u5b9a\u7fa9\u3092\u4e0e\u3048\u3088.\u5168\u3066extraPreludeDefs\u306b\u8ffd\u52a0\u305b\u3088.\nand x y = if x y False\nor x y = if x True y\nnot x = if x False True\nxor x y = or (and x (not y)) (and (not x) y)\n\n\n2.7.3 Implementing structured data\n\u69cb\u9020\u4f53,\u6761\u4ef6\u5206\u5c90,\u6bd4\u8f03\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u5909\u66f4\u4e00\u89a7\u304c\u3042\u308b.\n\nNData \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092node \u30c7\u30fc\u30bf\u578b\u306b\u8ffd\u52a0\u305b\u3088.showNode\u3092NData\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u62e1\u5f35\u305b\u3088.\nPrimConstr, If, Greater, GreaterEq, Less, LessEq, Eq, NotEq\u3092primitive\u306b\u8ffd\u52a0\u305b\u3088.instantiateVar\u3067\u9069\u5207\u306b\u5b9f\u4f53\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u9069\u5207\u306a\u30da\u30a2\u3092primitives\u306b\u8ffd\u52a0\u305b\u3088.\ninstantiateConstr(Update)\u306e\u5b9a\u7fa9\u3092\u4e0e\u3048\u3088.\nisDataNode\u95a2\u6570\u3092NData\u30ce\u30fc\u30c9\u3082\u8a8d\u8b58\u3059\u308b\u3088\u3046\u306b\u305b\u3088.\nstep\u95a2\u6570\u306e\u4e2d\u306edispatch\u304c\u88dc\u52a9\u95a2\u6570\u306edataStep\u3092\u547c\u3076\u3053\u3068\u306b\u3088\u308aNData\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u305b\u3088.\ndataStep\u3092\u5b9a\u7fa9\u305b\u3088.\u3053\u308c\u306fnumStep\u3068\u975e\u5e38\u306b\u3088\u304f\u4f3c\u3066\u3044\u308b.\nprimStep\u3092PrimConstr\u3084\u305d\u306e\u4ed6\u65b0\u3057\u3044\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3092\u5bfe\u51e6\u3067\u304d\u308b\u3088\u3046\u306b\u62e1\u5f35\u305b\u3088.PrimConstr\u3084If\u306f\u88dc\u52a9\u95a2\u6570\u3092\u547c\u3076\u3068\u826f\u3044.\u6bd4\u8f03\u306f\u5927\u4f53primArith\u304c\u4f7f\u3048\u308b.\n\nprimConstr\u306fprimitives\u306b\u306f\u5165\u3089\u306a\u3044.\u578b\u304c\u9055\u3046.\nprimDyadic\u306b\u6761\u4ef6\u5206\u5c90\u3092\u3076\u3093\u6295\u3052\u3066\u308b\u306e\u304c\u5927\u4e08\u592b\u304b\u308f\u304b\u3089\u306a\u3044.\n\u81ea\u660e\u306bgreater\u3068eq\u3055\u3048\u3042\u308c\u3070\u81ea\u660e\u305d\u306e\u4ed6\u306e\u6f14\u7b97\u5b50\u306f\u69cb\u6210\u53ef\u80fd\u306a\u306e\u3067\u5f8c\u3067\u6e1b\u3089\u305b\u308b\u304b\u3082.\n\u305d\u3082\u305d\u3082\u9045\u5ef6\u8a55\u4fa1\u306a\u306e\u3067if\u3092\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306b\u3059\u308b\u5fc5\u8981\u3059\u3089\u306a\u3044.\nK x y = x\u3068F x y = y \u3067OK\u3060\u3057,and/or\u3082\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u3067\u66f8\u3051\u308b.\n\nExercise 2.21\n\u5168\u3066\u306e\u5909\u66f4\u3092\u5b9f\u88c5\u305b\u3088.\u5168\u3066\u5b9f\u88c5\u3067\u304d\u3066\u3044\u308c\u3070\u4ee5\u4e0b\u306e\u95a2\u6570\u304c\u5b9f\u884c\u53ef\u80fd.\nfac n = if (n == 0) 1 (n * fac (n-1)) ; main = fac 3\n\n\u51fa\u529b(fact 6)\nStack [ (top)\n  34: NNum 720\n]\nheap size 106\n\n\nTotal number of steps = 176\nTotal number of reductions = 34\nTotal number of supercombinator reductions = 8\nTotal number of primitive reductions = 26\nMaximum of stack depth = 4\n\n2.7.3\u304c\u7d42\u308f\u308a.5\u6642\u9593\u30673\u30da\u30fc\u30b8.\u3072\u3069\u3044.\ndiff\u306f\u3082\u3046\u4e00\u56de\u4e00\u56de\u304c\u9577\u3044\u306e\u3067\u8cbc\u3089\u306a\u3044.\u305d\u306e\u3046\u3061git\u306b\u4e0a\u3052\u308b\u306e\u3067log\u3067\u3082\u898b\u3066\n# 21\u65e5\u76ee\n20\u65e5\u76ee\u306f\u5168\u8a33\u3057\u3066\u7121\u99c4\u306b\u9577\u304b\u3063\u305f\u306e\u3067\u8e93\u3044\u305f\u3068\u3053\u308d\u3068Exercise\u3060\u3051\u66f8\u304f\n\n## 2.7 Mark 5: Structured data\n\u4eca\u306e\u5b9f\u88c5\u3058\u3083\u69cb\u9020\u578b\u306f\u304d\u3064\u3044\n\n#### Exercise 2.18\n\u306a\u305c`case`\u5f0f\u306f\u4eca\u306e\u30de\u30b7\u30f3\u3067\u53d6\u308a\u6271\u3046\u306e\u304c\u96e3\u3057\u3044\u304b?(case\u5f0f\u3067instantiate\u95a2\u6570\u304c\u3069\u3046\u52d5\u304f\u304b\u898b\u3088)\n\u2192 \u308f\u304b\u3089\u3093.\n\n### 2.7.1 Building structured data\n\u5b9f\u88c5\u3059\u308b\u3079\u304d\u3082\u306e\u30922.7.3\u3067\u66f8\u3044\u3066\u3044\u3066\u304f\u308c\u3066\u308b\u306e\u3067,\u3059\u3050\u5b9f\u88c5\u305b\u305a\u306b2.7.3\u3092\u53c2\u8003\u306b\u3059\u308b.\n\n\u4e00\u822c\u7684\u306acase\u5f0f\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u306e\u3067\u7c21\u5358\u306aBoolean\u304b\u3089\u5b9f\u88c5\u3059\u308b.\n\n### 2.7.2 Conditionals\n\nBoolean\u306fMiranda\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u66f8\u304b\u308c\u308b.\n`boolean ::= False | True`\n2\u3064\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf,True,False\u304c\u3042\u308b.\u305d\u308c\u305e\u308c\u30a2\u30ea\u30c6\u30a3\u306f0\u3067,\u79c1\u305f\u3061\u306f\u4efb\u610f\u306b1\u3092False\u306b,2\u3092True\u306b\u5f53\u3066\u306f\u3081\u3089\u308c\u308b.\n\u3088\u3063\u3066Core Language\u3067\u306f\u4ee5\u4e0b\u306e\u5b9a\u7fa9\u3092\u5f97\u308b:\n\n```\nFalse = Pack{1,0}\nTrue = Pack{2,0}\n```\n\n#### Exercise 2.19\n\u6761\u4ef6\u5f0f\u306e\u72b6\u614b\u9077\u79fb\u30eb\u30fc\u30eb\u3092\u5b8c\u6210\u3055\u305b\u3088.3\u3064\u306e\u30eb\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3042\u308b: 2\u3064\u306f\u65e2\u306bif\u306e\u6761\u4ef6\u5f0f\u304c\u8a55\u4fa1\u3055\u308c\u3066\u3044\u308b\u5834\u5408; 1\u3064\u306f\u307e\u3060\u8a55\u4fa1\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3067\u3042\u308b(Rule 2.9\u3092\u53c2\u8003\u306b\u305b\u3088).\u6700\u521d\u306e2\u3064\u306e\u5834\u5408\u306f\u9593\u63a5\u53c2\u7167\u30ce\u30fc\u30c9\u3092\u7528\u3044\u308b\u306e\u304c\u826f\u3044.\n\u3055\u3089\u306a\u308b\u30eb\u30fc\u30eb\u304c1\u3064\u6b20\u843d\u3057\u3066\u3044\u308b.\u306a\u3093\u3060\u308d\u3046\u304b?(\u30d2\u30f3\u30c8: \u6761\u4ef6\u5f0f\u306e\u8a55\u4fa1\u304c\u7d42\u4e86\u3057\u305f\u6642,\u6761\u4ef6\u5f0f\u306f\u3069\u306e\u3088\u3046\u306b\u518d\u8a66\u884c\u3055\u308c\u308b\u3060\u308d\u3046\u304b?)\n\n| h |   |\n|---|---|\n| a | **NPrim** If |\n|ac | **NAp** a b |\n| t | **NData** 2 [] |\n| f | **NData** 1 [] |\n|at | **NAp** ac bt |\n|af | **NAp** at bf | \n\n| a : ac : at : af : [] | d | h[ac: **NAp** a t ] | f |\n|---|---|---|---|\n| a : [] | d | h[af: **NInd** bt] | f |\n\n| a : ac : at : af : [] | d | h[ac: **NAp** a f ] | f |\n|---|---|---|---|\n| a : [] | d | h[af: **NInd** bf] | f |\n\n| a : ac : at : af : [] | d | h[ac: **NAp** a b] | f |\n|---|---|---|---|\n| b : [] | (ac : at : af : []) : d | h | f |\n\n| a : [] | s : d | h[a: **NData** _ _] | f |\n|---|---|---|---|\n| s | d | h | f |\n\n#### Exercise 2.20\nCore Language\u3067\u306eor,xor,not\u306e\u5b9a\u7fa9\u3092\u4e0e\u3048\u3088.\u5168\u3066extraPreludeDefs\u306b\u8ffd\u52a0\u305b\u3088.\n\n```\nand x y = if x y False\nor x y = if x True y\nnot x = if x False True\nxor x y = or (and x (not y)) (and (not x) y)\n```\n\n### 2.7.3 Implementing structured data\n\u69cb\u9020\u4f53,\u6761\u4ef6\u5206\u5c90,\u6bd4\u8f03\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u5909\u66f4\u4e00\u89a7\u304c\u3042\u308b.\n\n- NData \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092node \u30c7\u30fc\u30bf\u578b\u306b\u8ffd\u52a0\u305b\u3088.showNode\u3092NData\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u62e1\u5f35\u305b\u3088.\n- PrimConstr, If, Greater, GreaterEq, Less, LessEq, Eq, NotEq\u3092primitive\u306b\u8ffd\u52a0\u305b\u3088.instantiateVar\u3067\u9069\u5207\u306b\u5b9f\u4f53\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u9069\u5207\u306a\u30da\u30a2\u3092primitives\u306b\u8ffd\u52a0\u305b\u3088.\n- instantiateConstr(Update)\u306e\u5b9a\u7fa9\u3092\u4e0e\u3048\u3088.\n- isDataNode\u95a2\u6570\u3092NData\u30ce\u30fc\u30c9\u3082\u8a8d\u8b58\u3059\u308b\u3088\u3046\u306b\u305b\u3088.\n- step\u95a2\u6570\u306e\u4e2d\u306edispatch\u304c\u88dc\u52a9\u95a2\u6570\u306edataStep\u3092\u547c\u3076\u3053\u3068\u306b\u3088\u308aNData\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u305b\u3088.\n- dataStep\u3092\u5b9a\u7fa9\u305b\u3088.\u3053\u308c\u306fnumStep\u3068\u975e\u5e38\u306b\u3088\u304f\u4f3c\u3066\u3044\u308b.\n- primStep\u3092PrimConstr\u3084\u305d\u306e\u4ed6\u65b0\u3057\u3044\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3092\u5bfe\u51e6\u3067\u304d\u308b\u3088\u3046\u306b\u62e1\u5f35\u305b\u3088.PrimConstr\u3084If\u306f\u88dc\u52a9\u95a2\u6570\u3092\u547c\u3076\u3068\u826f\u3044.\u6bd4\u8f03\u306f\u5927\u4f53primArith\u304c\u4f7f\u3048\u308b.\n\nprimConstr\u306fprimitives\u306b\u306f\u5165\u3089\u306a\u3044.\u578b\u304c\u9055\u3046.\nprimDyadic\u306b\u6761\u4ef6\u5206\u5c90\u3092\u3076\u3093\u6295\u3052\u3066\u308b\u306e\u304c\u5927\u4e08\u592b\u304b\u308f\u304b\u3089\u306a\u3044.\n\u81ea\u660e\u306bgreater\u3068eq\u3055\u3048\u3042\u308c\u3070\u81ea\u660e\u305d\u306e\u4ed6\u306e\u6f14\u7b97\u5b50\u306f\u69cb\u6210\u53ef\u80fd\u306a\u306e\u3067\u5f8c\u3067\u6e1b\u3089\u305b\u308b\u304b\u3082.\n\u305d\u3082\u305d\u3082\u9045\u5ef6\u8a55\u4fa1\u306a\u306e\u3067if\u3092\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306b\u3059\u308b\u5fc5\u8981\u3059\u3089\u306a\u3044.\nK x y = x\u3068F x y = y \u3067OK\u3060\u3057,and/or\u3082\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u3067\u66f8\u3051\u308b.\n\n#### Exercise 2.21\n\u5168\u3066\u306e\u5909\u66f4\u3092\u5b9f\u88c5\u305b\u3088.\u5168\u3066\u5b9f\u88c5\u3067\u304d\u3066\u3044\u308c\u3070\u4ee5\u4e0b\u306e\u95a2\u6570\u304c\u5b9f\u884c\u53ef\u80fd.\n\n```\nfac n = if (n == 0) 1 (n * fac (n-1)) ; main = fac 3\n```\n\n\u51fa\u529b(fact 6)\n\n```\nStack [ (top)\n  34: NNum 720\n]\nheap size 106\n\n\nTotal number of steps = 176\nTotal number of reductions = 34\nTotal number of supercombinator reductions = 8\nTotal number of primitive reductions = 26\nMaximum of stack depth = 4\n```\n\n***2.7.3\u304c\u7d42\u308f\u308a.5\u6642\u9593\u30673\u30da\u30fc\u30b8.\u3072\u3069\u3044.***\n\ndiff\u306f\u3082\u3046\u4e00\u56de\u4e00\u56de\u304c\u9577\u3044\u306e\u3067\u8cbc\u3089\u306a\u3044.\u305d\u306e\u3046\u3061git\u306b\u4e0a\u3052\u308b\u306e\u3067log\u3067\u3082\u898b\u3066\n"}