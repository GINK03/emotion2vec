{"context": "\n\n\u521d\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f\u3001Machine Learning Advent Calendar 2016 5\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u8907\u6570\u306e\u5b66\u7fd2\u5668\uff08\u5f31\u5b66\u7fd2\u5668\u3001weak learner\uff09\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3088\u308a\u3088\u308a\u6027\u80fd\u306e\u9ad8\u3044\u5b66\u7fd2\u5668\uff08\u5f37\u5b66\u7fd2\u5668\u3001strong learner\uff09\u3092\u4f5c\u308b\u3001\u30a2\u30f3\u30b5\u30f3\u30d6\u30eb\u5b66\u7fd2\u306e\u624b\u6cd5\u306e\u4e00\u3064\u3001\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u3002\n\u305d\u306e\u4e2d\u3067\u3082\u4ee3\u8868\u7684\u306a\u3001AdaBoost\u3002\nPRML\u672c\u306b\u3082\u8f09\u3063\u3066\u3044\u308b\uff08\u65e5\u672c\u8a9e\u7248\u4e0b\u5dfbp.374\uff09\u3057\u30b0\u30b0\u308c\u3070\u5b9f\u88c5\u4f8b\u3082\u3044\u304f\u3089\u3067\u3082\u51fa\u3066\u304d\u307e\u3059\u3051\u308c\u3069\u3001\u5f31\u5b66\u7fd2\u5668\u3068\u3057\u3066\u4e00\u756a\u5358\u7d14\u306a\u6c7a\u5b9a\u682a\uff08decision stump\uff09\u3092\u7528\u3044\u305f\u4f8b\u3070\u304b\u308a\u3002\n\u305d\u308c\u3092\u4ed6\u306e\u3082\u306e\u306b\u5909\u3048\u305f\u3089\u3001\u6027\u80fd\u306b\u3069\u3046\u5f71\u97ff\u3059\u308b\u304b\u3002\u601d\u3044\u3064\u304d\u3067\u5b9f\u9a13\u3057\u3066\u307f\u307e\u3057\u305f\u30021\n\n\u5b9f\u9a13\u74b0\u5883\n\nMac OSX 10.11.6\nCore i7 3.1GHz / 16GB RAM\n\nJulia v0.5.0\n\n\n\nIJulia\uff08Julia \u306e Jupyter \u30ab\u30fc\u30cd\u30eb\uff09\u3001Gadfly\uff08Julia\u5b9a\u756a\u306e\u30d7\u30ed\u30c3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u4ee5\u5916\u306e\u7279\u5225\u306a\u5916\u90e8\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u4e0d\u4f7f\u7528\u3002\n\n\n\n\n\u5b9f\u9a13\u306b\u4f7f\u7528\u3057\u305f\u4e8c\u5024\u5206\u985e\u30c7\u30fc\u30bf\n\u307b\u307c\u500b\u4eba\u7684\u306a\u8208\u5473\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3092\u4e8c\u5024\u5206\u985e\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u4e00\u90e8\u304c\u91cd\u306a\u308a\u5408\u3063\u305f\u4e8c\u3064\u306e\u5186\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u300c\u3044\u305a\u308c\u304b\u4e00\u65b9\u306e\u307f\u300d\u306e\u5185\u90e8\u306e\u70b9\u3068\u3001\u305d\u308c\u4ee5\u5916\u3002\n\u3053\u308c\u304c\u30ad\u30ec\u30a4\u306b\u5206\u985e\u3067\u304d\u308b\u5206\u985e\u5668\u304c\u3067\u304d\u308c\u3070\u3001\u6c17\u6301\u3061\u3088\u3044\u3067\u3059\u3088\u306d2\u3002\n\u306a\u304a\u3001\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u5b9f\u9a13\uff08\u8a13\u7df4\u3001\u53ca\u3073\u30c6\u30b9\u30c8\uff09\u3054\u3068\u306b\u30e9\u30f3\u30c0\u30e0\u751f\u6210\u3057\u307e\u3057\u305f\u3002\n# \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\uff08\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\u751f\u6210\nfunction makelabels{T<:AbstractFloat}(data::AbstractMatrix{T})\n    # \u51861\uff1a\u4e2d\u5fc3 (0.35, 0.35), \u534a\u5f84 0.3 \u306e\u5186\n    x1 = 0.35; y1 = 0.35; r1 = 0.3\n    # \u51862\uff1a\u4e2d\u5fc3 (0.65, 0.65), \u534a\u5f84 0.3 \u306e\u5186\n    x2 = 0.65; y2 = 0.65; r2 = 0.3\n    # \u51861 \u3068 \u51862 \u3069\u3061\u3089\u304b\u306b\uff08\u306e\u307f\uff09\u5165\u3063\u3066\u3044\u308b\u306a\u3089\u3070 1\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070 0\n    chk1 = mapslices(norm, data .- [x1 y1;], 2) .<= r1\n    chk2 = mapslices(norm, data .- [x2 y2;], 2) .<= r2\n    vec(collect(T, chk1 $ chk2)) .* 2 .- 1\nend\n\n# \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\uff08\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\u751f\u6210\nfunction makedata(N::Int=1000)\n    data = rand(N, 2)\n    labels = makelabels(data)\n    DataFrame(x=vec(data[:,1]), y=vec(data[:,2]), c=vec(labels))\nend\n\n\nAdaBoost \u5b9f\u88c5\n\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u305834\uff1a\n\nadaboost.jl\nfunction _signplus{T<:AbstractFloat}(x::T)\n    x == 0 ? one(T) : sign(x)\nend\n\nfunction _signplus{T<:AbstractFloat, N}(x::AbstractArray{T, N})\n    broadcast(_signplus, x)\nend\n\nabstract WeakClassifier{T<:AbstractFloat}\n\ninclude(\"decisionstumpweakclassifier.jl\")\n\nimmutable AdaBoost{T<:AbstractFloat, W<:WeakClassifier}\n    alpha::AbstractVector{T}\n    hs::AbstractVector{W}\nend\n\nfunction adaboost{T<:AbstractFloat, WC<:WeakClassifier}(\n        X::AbstractMatrix{T},\n        Y::AbstractVector{T};\n        wc::Type{WC}=DecisionStumpWeakClassifier,\n        t=100,\n        kwds...)\n    M = length(Y)\n    D = ones(T, M) ./ M\n    hs = WC{T}[]\n    alpha = T[]\n    for _ = 1:t\n        h = weaklearn(wc, X, Y, D; kwds...)\n        diff = abs(h(X) - Y)\n        e = dot(diff, D) / 2\n        if e < 1e-10\n            break\n        end\n        a = log((1 - e) / e) / 2\n        D .*= exp(a .* (diff - 1))\n        D ./= sum(D)\n        push!(hs, h)\n        push!(alpha, a)\n    end\n    AdaBoost(alpha, hs)\nend\n\nfunction (f::AdaBoost{T,W}){T<:AbstractFloat,W}(x::AbstractVector{T})\n    _signplus(dot(f.alpha, [h(x) for h=f.hs]))\nend\n\nfunction (f::AdaBoost{T,W}){T<:AbstractFloat,W}(x::AbstractMatrix{T})\n    mapslices(f, x, 2)\nend\n\n\n\ndecisionstumpweakclassifier.jl\nimmutable DecisionStumpWeakClassifier{T<:AbstractFloat} <: WeakClassifier{T}\n    axis::Int\n    d::T\n    b::T\nend\n\nfunction weaklearn{T<:AbstractFloat}(\n        ::Type{DecisionStumpWeakClassifier},\n        X::AbstractMatrix{T},\n        Y::AbstractVector{T},\n        D::AbstractVector{T})\n    # @assert size(X)[1] == length(Y) == length(D)\n    (N, M) = size(X)\n    tgtidx = rand(1:M)\n    xi = sortperm(X[:,tgtidx])\n    WY = Y .* D\n    el = cumsum(WY[xi])\n    eu = cumsum(WY[reverse(xi)])\n    es = eu[end-1:-1:1] .- el[1:end-1]\n    idx = indmax(abs(es))\n    d = sign(es[idx])\n    b = (X[xi[idx],tgtidx] + X[xi[idx + 1],tgtidx]) / 2\n    DecisionStumpWeakClassifier(tgtidx, d, b)\nend\n@inline weaklearn(::Type{DecisionStumpWeakClassifier}, X, Y, D; kwds...) = \n    weaklearn(DecisionStumpWeakClassifier, X, Y, D)\n\nfunction (h::DecisionStumpWeakClassifier{T}){T}(x::AbstractMatrix{T})\n    _signplus(h.d .* (x[:,h.axis] .- h.b))\nend\n\nfunction (h::DecisionStumpWeakClassifier{T}){T}(x::AbstractVector{T})\n    _signplus(h.d * (x[h.axis] - h.b))\nend\n\n\n\u6c7a\u5b9a\u682a\uff08Decision Stump\uff09\u306e\u5b66\u7fd2\u90e8\u5206\u306f\u3001\u30a4\u30e9\u30b9\u30c8\u3067\u5b66\u3076\u6a5f\u68b0\u5b66\u7fd2 \u306b\u8a18\u8f09\u306e MATLAB \u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002cumsum \u3057\u3066\u5dee\u3092\u53d6\u308b\u3053\u3068\u3067\u7c21\u5358\u9ad8\u901f\u306b\u300c\u6700\u9069\u306a\u5883\u754c\u300d\u304c\u6c42\u307e\u308a\u307e\u3059\u3002\u76ee\u304b\u3089\u30a6\u30ed\u30b3\u3002\n\u3042\u3068\u3001WeakClassifier \u3092\u7d99\u627f\u3057\u305f\u578b\u3068\u3001\u305d\u308c\u3092\u53d7\u3051\u53d6\u308b weaklearn() \u95a2\u6570\u3092\uff08\u591a\u91cd\uff09\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u5f31\u5b66\u7fd2\u5668\uff08\u5f31\u5206\u985e\u5668\uff09\u3092\u30d7\u30e9\u30b0\u30a4\u30f3\u7684\u306b\u5dee\u3057\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\uff08\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\uff09\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u672a\u6307\u5b9a\u6642\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6c7a\u5b9a\u682a\u304c\u5229\u7528\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n\u6c7a\u5b9a\u682a\uff08Decision Stump\uff09\u3092\u5f31\u5b66\u7fd2\u5668\u3068\u3057\u305f\u5b66\u7fd2\u30fb\u5206\u985e\n\nt=1000\n\u3055\u3066\u65e9\u901f\u5b66\u7fd2\u30fb\u5206\u985e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u306f\u3001\u5f31\u5b66\u7fd2\u5668\uff08\u6c7a\u5b9a\u682a\uff09\u3092\u6700\u5927 1000\u500b \u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\njulia> X = convert(Array, data[:,1:2]); Y = collect(data[:, 3]);\n\njulia> include(\"adaboost.jl\")\n\njulia> H = adaboost(X, Y; t=1000)\nAdaBoost{Float64,DecisionStumpWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(H.alpha)\n1000\n\njulia> Yd = H(X);\n\n\n\u3046\u30fc\u3093\u2026\u4eca\u3072\u3068\u3064\u304d\u3061\u3093\u3068\u5206\u985e\u3067\u304d\u3066\u306a\u3044\u3067\u3059\u306d\u2026\u3002\n\n\u6027\u80fd\u8a55\u4fa1\n\u6b63\u7b54\u7387\u30fb\u9069\u5408\u7387\u30fb\u518d\u73fe\u7387\u30fbF-\u5024\uff08F1-measure\uff09\u3092\u7b97\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\nfunction calc_confusionmatrix(Y, Yd)\n    tp = sum(1+Y[Yd.==1])/2\n    fp = sum(1-Y[Yd.==1])/2\n    tn = sum(1-Y[Yd.==-1])/2\n    fn = sum(1+Y[Yd.==-1])/2\n    [tp fp; fn tn]\nend\n\nfunction calc_mlmetrics(Y, Yd)\n    cm = calc_confusionmatrix(Y, Yd)\n    (tp, fn, fp, tn) = vec(cm)\n    accuracy = (tp + tn) / (tp + fp + fn + tn)\n    precision_score = tp / (tp + fp)\n    recall_score = tp / (tp + fn)\n    f_measure = 2 * precision_score * recall_score / (precision_score + recall_score)\n    (accuracy, precision_score, recall_score, f_measure)\nend\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Yd);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.817000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.774194\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.821918\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.797342\n\n\u3084\u3063\u3071\u308a\u4eca\u3072\u3068\u3064\u3002\n\n\u6c4e\u5316\u6027\u80fd\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u3082\u78ba\u8a8d\u3002\njulia> x_test = rand(100, 2);\n\njulia> y_test = H(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.720000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.638298\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.731707\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.681818\n\n\n\u3088\u308d\u3057\u304f\u306a\u3044\u3067\u3059\u306d\uff1e\uff1c\n\nt=2000\n\u5f31\u5b66\u7fd2\u5668\uff08\u5f31\u5206\u985e\u5668\uff09\u3092 1000\u500b \u304b\u3089 2000\u500b \u306b\u5897\u3084\u3057\u3066\u307f\u307e\u3057\u305f\u3002\njulia> H2k = adaboost(X, Y; t=2000)\nAdaBoost{Float64,DecisionStumpWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(H2k.alpha)\n2000\n\njulia> Yd2k = H2k(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Yd2k);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.851000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.812095\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.858447\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.834628\n\n\njulia> x_test = rand(100, 2);\n\njulia> y_test = H2k(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.750000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.711111\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.727273\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.719101\n\n\n\u5fae\u5999\u306b\u6539\u5584\u2026\u3067\u3082\u307e\u3060\u307e\u3060\u5148\u306f\u9577\u305d\u3046\u3067\u3059\u306d\uff1e\uff1c\n\n\u6c7a\u5b9a\u682a\u3092\u659c\u3081\u306b\u3057\u3066\u307f\u305f\u3002\n\u305d\u3082\u305d\u3082\u6c7a\u5b9a\u682a\u3068\u3044\u3046\u306e\u306f\u3001\u8907\u6570\u3042\u308b\u8aac\u660e\u5909\u6570\uff08\u8ef8\uff09\u306e\u3046\u3061\u3001\u3069\u308c\u304b1\u3064\u306e\u307f\u306b\u6ce8\u76ee\u3057\u3066\u3001\u6700\u9069\u306b\u5206\u985e\u3067\u304d\u3066\u305d\u3046\u306a\u5883\u754c\u3092\u63a2\u308b\u3082\u306e\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3067\u898b\u3066\u307f\u308b\u3068\u3001\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\uff08\u3042\u304f\u307e\u3067\u30a4\u30e1\u30fc\u30b8\u3067\u3059\uff09\uff1a\n\n\u3064\u307e\u308a\u8aac\u660e\u5909\u6570\u304c2\u500b\uff08\uff1d2\u8ef8\uff09\u306e\u5834\u5408\u3001\u5e73\u9762\u4e0a\u306ex\u8ef8\u304by\u8ef8\u304b\u3001\u3069\u3061\u3089\u304b\u3057\u304b\u57fa\u6e96\u304c\u306a\u3044\u3001\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\n\u3053\u308c\u3001\u659c\u3081\u306b\u3057\u305f\u3089\u3069\u3046\u3060\u308d\u3046\uff1f \u3064\u3044\u3067\u306b\u305d\u306e\u50be\u304d\u3092\u6bce\u56de\u30e9\u30f3\u30c0\u30e0\u306b\u6c7a\u5b9a\u3057\u305f\u3089\u306a\u3093\u304b\u826f\u304f\u306d\uff1f \uff08\u30a4\u30e1\u30fc\u30b8\uff1a\uff09\n\n\u3068\u3001\u601d\u3044\u3064\u304d\u307e\u3057\u3066\u3001\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u659c\u3081\u306e\u6c7a\u5b9a\u682a\uff08Beveled Decision Stump\uff09\u306e\u5b9f\u88c5\n\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u3058\uff1a\n\nbeveleddecisionstumpweakclassifier.jl\nimmutable BeveledDecisionStumpWeakClassifier{T<:AbstractFloat} <: WeakClassifier{T}\n    w::AbstractArray{T, 1}\n    b::T\nend\n\nfunction weaklearn{T<:AbstractFloat}(\n        ::Type{BeveledDecisionStumpWeakClassifier},\n        X::AbstractMatrix{T},\n        Y::AbstractVector{T},\n        D::AbstractVector{T})\n    # @assert size(X)[1] == length(Y) == length(D)\n    (N, M) = size(X)\n    W0 = rand(T, M) .* 2 .- 1\n    Xs = X * W0\n    xi = sortperm(Xs)\n    WY = Y .* D\n    el = cumsum(WY[xi])\n    eu = cumsum(WY[reverse(xi)])\n    es = eu[end-1:-1:1] .- el[1:end-1]\n    idx = indmax(abs(es))\n    d = sign(es[idx])\n    w = d .* W0\n    b = -0.5d * (Xs[xi[idx]] + Xs[xi[idx+1]])\n    BeveledDecisionStumpWeakClassifier(w, b)\nend\n@inline weaklearn(::Type{BeveledDecisionStumpWeakClassifier}, X, Y, D; kwds...) = \n    weaklearn(BeveledDecisionStumpWeakClassifier, X, Y, D)\n\nfunction (h::BeveledDecisionStumpWeakClassifier{T}){T}(x::AbstractMatrix{T})\n    _signplus(x * h.w .+ h.b)\nend\n\nfunction (h::BeveledDecisionStumpWeakClassifier{T}){T}(x::AbstractVector{T})\n    _signplus(dot(x, h.w) + h.b)\nend\n\n\n\u5b66\u7fd2\u306f\u3001\u8ef8\u3092\u4e71\u629e\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u5883\u754c\u5e73\u9762\uff082\u6b21\u5143\u306e\u5834\u5408\u306f\u5883\u754c\u7dda\u3002M\u6b21\u5143\u306e\u5834\u5408\u306fM-1\u6b21\u5143\u8d85\u5e73\u9762\uff09\u306e\u50be\u304d\u3092\u6c7a\u5b9a\u3059\u308bM\u500b\u306e\u4fc2\u6570\u3092\u4e71\u629e\u3002\u305d\u308c\u3092\u5143\u306eX\uff08N\u884cM\u5217\u306e\u884c\u5217\uff09\u3068\u7a4d\u3092\u53d6\u308b\u3053\u3068\u3067N\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u3092\u7b97\u51fa\uff08\u5404\u70b9\u306e\u305d\u306e\uff08\u8d85\uff09\u5e73\u9762\u304b\u3089\u306e\u7b26\u53f7\u4ed8\u8ddd\u96e2\u304c\u5165\u308b\uff09\u3002\u3042\u3068\u306f\u666e\u901a\u306e Decision Stump \u3068\u540c\u3058\u3002\n\u5206\u985e\u306f\u3001\u305d\u3046\u3057\u3066\u3067\u304d\u305f\uff08\u8d85\uff09\u5e73\u9762\u306e\u591a\u9805\u5f0f\u306b\u5404\u5909\u6570\u3092\u4ee3\u5165\u3057\u3066\u6b63\u304b\u8ca0\u304b\uff08\uff1d\u5e73\u9762\u306e\u3069\u3063\u3061\u5074\u304b\uff09\u3092\u898b\u308b\u3060\u3051\uff08\u5e73\u9762\u4e0a\u306e\u5834\u5408\u306f\u6b63\u3068\u5224\u5b9a\uff09\u3002\n\nt=100\n\u5b66\u7fd2\u30fb\u5206\u985e\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u307e\u305a\u306f\u5f31\u5b66\u7fd2\u5668100\u500b\u304b\u3089\u3002\njulia> include(\"beveleddecisionstumpweakclassifier.jl\")\n\njulia> Hb = adaboost(X, Y; t=100, wc=BeveledDecisionStumpWeakClassifier)\nAdaBoost{Float64,BeveledDecisionStumpWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(Hb.alpha)\n100\n\njulia> Ydb = Hb(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Ydb);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.982000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.970852\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.988584\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.979638\n\n\n\u3073\u3063\u304f\u308a\u3059\u308b\u304f\u3089\u3044\u6027\u80fd\u304c\u4e0a\u304c\u308a\u307e\u3057\u305f\uff01\n\u6c4e\u5316\u6027\u80fd\u3082\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\njulia> x_test = rand(100, 2);\n\njulia> y_test = Hb(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.900000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.865385\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.937500\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.900000\n\n\n\u306a\u304b\u306a\u304b\u3044\u3044\u611f\u3058\u3002\n\nt=200\n\u6700\u5927200\u500b\u307e\u3067\u5897\u3084\u3057\u3066\u307f\u307e\u3057\u305f\u3002\njulia> Hb2h = adaboost(X, Y; t=200, wc=BeveledDecisionStumpWeakClassifier)\nAdaBoost{Float64,BeveledDecisionStumpWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(Hb.alpha)\n200\n\njulia> Ydb2h = Hb2h(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Ydb2h);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.998000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.997717\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.997717\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.997717\n\n\njulia> x_test = rand(100, 2);\n\njulia> y_test = Hb2h(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.990000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 1.000000\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.975610\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.987654\n\n\n\u6c4e\u5316\u6027\u80fd\u3001\u6b63\u89e3\u738799%\u3001\u9069\u5408\u7387100%\uff08\uff1d\u8aa4\u691c\u51fa\u30bc\u30ed\uff09\uff01 \u518d\u73fe\u738797.6%\uff08\uff1d\u691c\u51fa\u6f0f\u308c2.4%\uff09\u306f\u5c11\u3005\u6c17\u306b\u306a\u308a\u307e\u3059\u3051\u308c\u3069\u3002\n\u5143\u306e\uff08\u666e\u901a\u306e\uff09\u6c7a\u5b9a\u682a\u306b\u6bd4\u3079\u3066\u3001\u5f31\u5206\u985e\u5668\u306e\u6570\u306f1/5\u301c1/10\u3002\u305d\u308c\u3067\u3053\u306e\u6570\u5024\u306f\u3001\u306a\u304b\u306a\u304b\u826f\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u3002\n\n\u6c7a\u5b9a\u6728\u306e\u5834\u5408\n\u3084\u3063\u3071\u308a\u57fa\u672c\u3002\n\u6c7a\u5b9a\u682a\u3092\u6c7a\u5b9a\u6728\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4e88\u60f3\u3067\u306f\u3001\u7cbe\u5ea6\uff08\u5c11\u306a\u304f\u3068\u3082\u6b63\u89e3\u7387\uff09\u306f\u3055\u3089\u306b\u4e0a\u304c\u308b\u306f\u305a\u3002\n\n\n\u6c7a\u5b9a\u6728\uff08Decision Tree\uff09\u306e\u5b9f\u88c5\n\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u3058\uff08\u3061\u3087\u3063\u3068\u9577\u304f\u306a\u308b\u306e\u3067\u4e00\u90e8\u7701\u7565\uff09\uff1a\n\nbeveleddecisionstumpweakclassifier.jl(excerpt)\nabstract AbstractDTree{T}\n\ntype DTreeNode{T} <: AbstractDTree{T}\n    val::T\n    axis::Int\n    b::T\n    left::AbstractDTree{T}\n    right::AbstractDTree{T}\nend\n\nimmutable DTreeLeaf{T} <: AbstractDTree{T}\n    val::T\nend\n\nfunction applydtree(leafornode, x)\n    ; # \u300a\u7565\u300b\nend\n\nimmutable DecisionTreeWeakClassifier{T<:AbstractFloat} <: WeakClassifier{T}\n    tree::AbstractDTree{T}\nend\n\nfunction builddtree{T}(\n        val::T,\n        X::AbstractMatrix{T},\n        WY::AbstractVector{T},\n        depth::Int)\n    if depth == 0\n        return DTreeLeaf(val)\n    elseif length(WY) == 1\n        return DTreeLeaf(sign(WY[1]))\n    end\n    (N, M) = size(X)\n    tgtidx = rand(1:M)\n    xi = sortperm(X[:,tgtidx])\n    el = cumsum(WY[xi])\n    eu = cumsum(WY[reverse(xi)])\n    es = eu[end-1:-1:1] .- el[1:end-1]\n    idx = indmax(abs(es))\n    if abs(sum(WY)) > abs(es[idx])\n        return DTreeLeaf(sign(sum(WY)))\n    end\n    d = sign(es[idx])\n    b = (X[xi[idx],tgtidx] + X[xi[idx + 1],tgtidx]) / 2\n    lidxs = xi[1:idx]\n    ridxs = xi[idx+1:end]\n    DTreeNode(val, tgtidx, b, \n        builddtree(-d, X[lidxs, :], WY[lidxs], depth-1),\n        builddtree(d, X[ridxs, :], WY[ridxs], depth-1))\nend\n\nfunction weaklearn{T<:AbstractFloat}(\n        ::Type{DecisionTreeWeakClassifier},\n        X::AbstractMatrix{T},\n        Y::AbstractVector{T},\n        D::AbstractVector{T};\n        maxdepth::Int=3,\n        kwds...)\n    # @assert size(X)[1] == length(Y) == length(D)\n    WY = Y .* D\n    DecisionTreeWeakClassifier(builddtree(one(T), X, WY, maxdepth))\nend\n\nfunction (h::DecisionTreeWeakClassifier{T}){T}(x::AbstractVecOrMat{T})\n    applydtree(h.tree, x)\nend\n\n\nweaklearn() \u95a2\u6570\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570 maxdepth \u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u6728\u306e\u6df1\u3055\u306e\u6700\u5927\u5024\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u306b\u3057\u307e\u3057\u305f\u3002\n\u5b66\u7fd2\u306f\u3001\u6c7a\u5b9a\u682a\u3092\u591a\u5c64\u306b\u3057\u305f\u3060\u3051\u3002\u7c21\u5358\u3067\u3059\u306d\u3002\n\nt=100, maxdepth=3\n\u5b66\u7fd2\u30fb\u5206\u985e\u3002\u5f31\u5b66\u7fd2\u5668100\u500b\u3001\u6df1\u3055\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e3\u3002\njulia> include(\"decisiontreeweakclassifier.jl\")\n\njulia> Ht = adaboost(X, Y; t=100, wc=DecisionTreeWeakClassifier)\nAdaBoost{Float64,DecisionTreeWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(Ht.alpha)\n100\n\njulia> Ydt = Ht(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Ydt);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 1.000000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 1.000000\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 1.000000\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 1.000000\n\n\n\u4e88\u60f3\u901a\u308a\u9ad8\u6027\u80fd\uff01\u6b63\u7b54\u7387\u30fbF-\u5024100%\uff01\n\u305f\u3060\u3053\u3046\u306a\u308b\u3068\u904e\u5b66\u7fd2\u304c\u5fc3\u914d\u3067\u3059\u306d\u2026\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6c4e\u5316\u6027\u80fd\u3002\njulia> x_test = rand(100, 2);\n\njulia> y_test = Ht(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.940000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.923077\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.923077\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.923077\n\n\n\u3046\u3093\u3001\u3084\u3063\u3071\u308a\u591a\u5c11\u904e\u5b66\u7fd2\u304e\u307f\u3002\u305d\u308c\u3067\u3082\u3053\u306e\u6570\u5024\u306a\u3089\u304b\u306a\u308a\u826f\u3055\u3052\u3067\u3059\u306d\u3002\n\nt=100, maxdepth=2\nmaxdepth=3 \u3067\u601d\u3044\u306e\u5916\u9ad8\u6027\u80fd\uff08\u305f\u3060\u3057\u904e\u5b66\u7fd2\u6c17\u5473\uff09\u3060\u3063\u305f\u306e\u3067\u3001\u5f31\u5b66\u7fd2\u5668\u306e\u6570\u306f\u5909\u3048\u305a\u306bmaxdepth=2 \u306b\u3057\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\njulia> Ht2d = adaboost(X, Y; t=100, wc=DecisionTreeWeakClassifier, maxdepth=2)\nAdaBoost{Float64,DecisionTreeWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(Ht2d.alpha)\n100\n\njulia> Ydt2d = Ht2d(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Ydt2d);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.966000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.957014\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.965753\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.961364\n\n\njulia> x_test = rand(100, 2);\n\njulia> y_test = Ht2d(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.960000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.980392\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.943396\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.961538\n\n\n\u8a13\u7df4\u6027\u80fd\u306f\u5c11\u3057\u843d\u3061\u307e\u3057\u305f\u304c\u3001\u6c4e\u5316\u6027\u80fd\u306f\u5be7\u308d\u5411\u4e0a\u3002\u307e\u305f\u3069\u3061\u3089\u3082\u307b\u307c\u540c\u3058\u6570\u5024\u3001\u30d0\u30e9\u30f3\u30b9\u306f\u53d6\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u901f\u5ea6\u8a55\u4fa1\n\u305d\u308c\u305e\u308c\u306e\u5b66\u7fd2\u304a\u3088\u3073\u5206\u985e\u306e\u6642\u9593\u3092\u8a08\u6e2c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5b66\u7fd2\u6642\u9593\njulia> Base.gc(true); @time adaboost(X, Y; t=1000);\n  0.173937 seconds (59.16 k allocations: 179.057 MB, 22.12% gc time)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=2000);\n  0.324151 seconds (118.03 k allocations: 358.083 MB, 16.43% gc time)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=100, wc=BeveledDecisionStumpWeakClassifier);\n  0.013637 seconds (6.42 k allocations: 17.183 MB)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=200, wc=BeveledDecisionStumpWeakClassifier);\n  0.030205 seconds (12.82 k allocations: 34.350 MB, 11.57% gc time)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=100, wc=DecisionTreeWeakClassifier);\n  0.050829 seconds (42.65 k allocations: 46.169 MB, 15.03% gc time)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=100, wc=DecisionTreeWeakClassifier, maxdepth=2);\n  0.059504 seconds (20.55 k allocations: 31.923 MB, 13.18% gc time)\n\n\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\u3002\u5f31\u5206\u985e\u5668\u306e\u6570\u306b\u307b\u307c\u6bd4\u4f8b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5206\u985e\u6642\u9593\njulia> Base.gc(true); @time H(X);\n  0.025561 seconds (14.54 k allocations: 8.029 MB)\n\njulia> Base.gc(true); @time H2k(X);\n  0.029515 seconds (14.54 k allocations: 15.659 MB)\n\njulia> Base.gc(true); @time Hb(X);\n  0.028651 seconds (415.54 k allocations: 7.251 MB)\n\njulia> Base.gc(true); @time Hb2h(X);\n  0.038001 seconds (815.54 k allocations: 14.224 MB)\n\njulia> Base.gc(true); @time Ht(X);\n  0.032033 seconds (341.59 k allocations: 6.123 MB)\n\njulia> Base.gc(true); @time Ht2d(X);\n  0.037214 seconds (255.19 k allocations: 4.804 MB)\n\n\u69cb\u9020\u304c\u8907\u96d1\u306b\u306a\u308b\u307b\u3069\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c\u3001\u300c\u540c\u3058\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09\u3092\u51fa\u3059\u5206\u985e\u5668\u306e\u5206\u985e\u306b\u304b\u304b\u308b\u6642\u9593\u300d\u3068\u8003\u3048\u308b\u3068\u3001\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\u300d\u304c\u5272\u3068\u512a\u79c0\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\n\u8868\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u3001DS: \u6c7a\u5b9a\u682a\u3001BS: \u659c\u3081\u306e\u6c7a\u5b9a\u682a\u3001DT: \u6c7a\u5b9a\u6728\u3002\n\n\n\n\u5f31\u5b66\u7fd2\u5668\u304a\u3088\u3073\u30d1\u30e9\u30e1\u30fc\u30bf\n\u8a13\u7df4\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09\n\u6c4e\u5316\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09\n\u5b66\u7fd2\u6642\u9593(s)\n\u5206\u985e\u6642\u9593(s)\n\n\n\n\nDS, t=1000\n81.7%\n72.0%\n0.173937\n0.025561\n\n\nDS, t=2000\n85.1%\n75.0%\n0.324151\n0.029515\n\n\nBS, t=100\n98.2%\n90.0%\n0.013637\n0.028651\n\n\nBS, t=200\n99.8%\n99.0%\n0.030205\n0.038001\n\n\nDT, t=100, maxdepth=3\n100.0%\n94.0%\n0.050829\n0.032033\n\n\nDT, t=100, maxdepth=2\n96.6%\n96.0%\n0.059504\n0.037214\n\n\n\n\u5b66\u7fd2\u6642\u9593\u3068\u5b89\u5b9a\u3057\u305f\u7cbe\u5ea6\u3092\u6c42\u3081\u308b\u306a\u3089\u3001\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\uff08t=200\uff09\u300d\u3002\n\u5206\u985e\u901f\u5ea6\u3068\u3042\u308b\u7a0b\u5ea6\u306e\u7cbe\u5ea6\u3092\u6c42\u3081\u308b\u306a\u3089\u3001\u300c\u6c7a\u5b9a\u6728\uff08d=3\uff09\u300d\u3002\n\u3068\u8a00\u3063\u305f\u3068\u3053\u308d\u3067\u3057\u3087\u3046\u304b\u3002\n\u306a\u304a\u3001\u4f55\u5ea6\u304b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u5927\u4f53\u540c\u3058\u7d50\u679c\u306b\u306a\u308a\u307e\u3057\u305f\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u4ed8\u8a00\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u4ed6\u306e\u5206\u985e\u30c7\u30fc\u30bf\n\u4eca\u56de\u306e\u5206\u985e\u30c7\u30fc\u30bf\u304c\u3042\u307e\u308a\u306b\u7279\u6b8a\u3059\u304e\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3001\u3068\u601d\u3044\u3001\u5c11\u3057\u9055\u3046\u30c7\u30fc\u30bf\u3067\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u7d50\u679c\u3060\u3051\u793a\u3057\u307e\u3059\u3002\n\n\u3050\u308b\u3050\u308b\uff08\u30a2\u30eb\u30ad\u30e1\u30c7\u30b9\u87ba\u65cb\u30d9\u30fc\u30b9\uff09\n\n\n\n\n\u5f31\u5b66\u7fd2\u5668\u304a\u3088\u3073\u30d1\u30e9\u30e1\u30fc\u30bf\n\u8a13\u7df4\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09\n\u6c4e\u5316\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09\n\u5b66\u7fd2\u6642\u9593(s)\n\u5206\u985e\u6642\u9593(s)\n\n\n\n\nDS, t=1000\n80.1%\n70.0%\n0.155572\n0.135507\n\n\nDS, t=2000\n82.2%\n69.0%\n0.427481\n0.088738\n\n\nBS, t=100\n97.8%\n94.0%\n0.020341\n0.101591\n\n\nBS, t=200\n99.0%\n95.0%\n0.032742\n0.126774\n\n\nDT, t=100, maxdepth=3\n99.6%\n95.0%\n0.065813\n0.102042\n\n\nDT, t=100, maxdepth=2\n95.0%\n94.0%\n0.034316\n0.061358\n\n\n\n\u50be\u5411\u3068\u3057\u3066\u306f\u30012\u3064\u306e\u5186\u306e\u6642\u3068\u307b\u307c\u540c\u3058\u611f\u3058\u3002\u5168\u4f53\u7684\u306b\u7cbe\u5ea6\u306f\u843d\u3061\u307e\u3057\u305f\u3002\n\n\u30b7\u30f3\u30d7\u30eb\n\n\n\n\n\u5f31\u5b66\u7fd2\u5668\u304a\u3088\u3073\u30d1\u30e9\u30e1\u30fc\u30bf\n\u8a13\u7df4\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09\n\u6c4e\u5316\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09\n\u5b66\u7fd2\u6642\u9593(s)\n\u5206\u985e\u6642\u9593(s)\n\n\n\n\nDS, t=1000\n70.7%\n49.0%\n0.164527\n0.022333\n\n\nDS, t=2000\n73.9%\n52.0%\n0.278538\n0.031139\n\n\nBS, t=100\n100.0%\n100.0%\n0.013001\n0.026756\n\n\nBS, t=200\n100.0%\n99.0%\n0.029818\n0.036352\n\n\nDT, t=100, maxdepth=3\n49.6%\n55.0%\n0.037481\n0.013271\n\n\nDT, t=100, maxdepth=2\n100.0%\n100.0%\n0.038498\n0.028926\n\n\n\n\u6c7a\u5b9a\u6728\u3092\u5229\u7528\u3057\u305f\u3082\u306e\u306b\u5c11\u3057\u304a\u304b\u3057\u306a\u7d50\u679c\u304c\u3002\u30c7\u30fc\u30bf\u304c\u4f59\u308a\u306b\u3082\u30ad\u30ec\u30a4\u306b\u5225\u308c\u3066\u3044\u308b\u5206\u3001Tree\u304c\u3046\u307e\u304f\u69cb\u7bc9\u3067\u304d\u306a\u304b\u3063\u305f\u6a21\u69d8\u3002\u3053\u308c\u306f\u5c11\u3057\u5b9f\u88c5\u3092\u898b\u76f4\u3057\u305f\u65b9\u304c\u826f\u3044\u304b\u3082\u3002\n\u305d\u308c\u306b\u3064\u3051\u3066\u3082\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\u300d\u306e\u5b89\u5b9a\u3057\u3066\u3044\u308b\u3053\u3068\u3088\u3002\u306a\u305c\u659c\u3081\u306b\u3057\u305f\u3060\u3051\u3067\u3053\u306e\u30c7\u30fc\u30bf\u3067100%\u305f\u305f\u304d\u51fa\u3059\u306e\u304b\u9006\u306b\u4e0d\u601d\u8b70\u3002\n\n\u8003\u5bdf\n\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\u300d\u304c\u3053\u3053\u307e\u3067\u9ad8\u3044\u6027\u80fd\u3092\u793a\u3057\u305f\u306e\u306b\u306f\u3001\u4e00\u3064\u306b\u306f\u3084\u306f\u308a\u3001\u30c7\u30fc\u30bf\u306e\u7279\u6b8a\u6027\u3082\u304d\u3063\u3068\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\u5c11\u306a\u304f\u3068\u3082\u3001\u843d\u3061\u7740\u3044\u3066\u8003\u3048\u308b\u3068\u3069\u308c\u3082\u3001\u5404\u8aac\u660e\u5909\u6570\u306e\u5024\u57df\u3082\u5206\u6563\u3082\u540c\u3058\u3067\u3059\u304b\u3089\u3002\n\u305d\u308c\u3092\u3082\u3063\u3068\u5d29\u3057\u305f\u30c7\u30fc\u30bf\u3067\u8a66\u3057\u305f\u3089\u3001\u3082\u3046\u5c11\u3057\u7d50\u679c\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u300c\u6c7a\u5b9a\u6728\u300d\u306e\u65b9\u306f\u3001\u5b9f\u88c5\u6b21\u7b2c\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u4f4e\u30d0\u30a4\u30a2\u30b9\u9ad8\u30d0\u30ea\u30a2\u30f3\u30b9\u306a\u306e\u3067\u3001\u30d0\u30a4\u30a2\u30b9\u3092\u5f31\u3081\u308b\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u306b\u306f\u3042\u307e\u308a\u5411\u304b\u306a\u3044\u306e\u304b\u306a\u3001\u3068\u3002\u306a\u306e\u3067\u305b\u3044\u305c\u3044\u6df1\u30553\u307e\u3067\u3067\u8a66\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3067\u3082\u904e\u5b66\u7fd2\u6c17\u5473\u306b\u306a\u308b\u50be\u5411\u304c\u51fa\u307e\u3057\u305f\u3002\n\u3042\u3068\u4eca\u56de\u306f AdaBoost \u3067\u8a66\u3057\u307e\u3057\u305f\u304c\u3001\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\u300d\u3092\u6c7a\u5b9a\u6728\u306e\u5404Node\u306b\u63a1\u7528\u3057\u305f\u308a\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u305f RandomForest \u3092\u69cb\u7bc9\u3057\u305f\u3089\u3069\u3046\u306a\u308b\u3093\u3060\u308d\u3046\uff1f \u306a\u3069\u306a\u3069\u3001\u6642\u9593\u304c\u3042\u308c\u3070\u5f15\u304d\u7d9a\u304d\u5c11\u3057\u305a\u3064\u5b9f\u9a13\u3092\u91cd\u306d\u3066\u3044\u3053\u3046\u304b\u306a\u3001\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\n\u4eca\u56de\u5b9f\u9a13\u3057\u305f\u30b3\u30fc\u30c9\u30fb\u30c7\u30fc\u30bf\u7b49\u306f\u3001Gist \u306b\u4e0a\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u2192 AdaBoostSample.ipynb \uff08nbviewer \u306b\u3088\u308b .ipynb \u30d5\u30a1\u30a4\u30eb\u8868\u793a\uff1a AdaBoostSample.ipynb\u3001AdaBoostSample2.ipynb\u3001AdaBoostSample3.ipynb\uff09\n\u7701\u7565\u3057\u305f\u30b3\u30fc\u30c9\u3082\u5168\u3066\u8f09\u305b\u3066\u307e\u3059\u3057\u3001\u8ffd\u52a0\u306e\u5b9f\u9a13\u7b49\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3088\u308d\u3057\u3051\u308c\u3070\u3054\u610f\u898b\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\u3042\u3068\u3001\u6700\u5f8c\u306b\u4e0a\u3052\u308b\u53c2\u8003\u6587\u732e\uff08\u66f8\u7c4d\uff09\u4ee5\u5916\u3001\u8ad6\u6587\u7b49\u306f\u5168\u7136\u53c2\u7167\u3057\u3066\u307e\u305b\u3093\uff08\u601d\u3044\u3064\u304d\u3067\u5b9f\u9a13\u3057\u305f\u3060\u3051\uff09\u306a\u306e\u3067\u3001\u300c\u3059\u3067\u306b\u3053\u3093\u306a\u8ad6\u6587\u3042\u308b\u3088\u300d\u7b49\u306e\u60c5\u5831\u3082\u3042\u308a\u307e\u3057\u305f\u3089\u3069\u306a\u305f\u304b\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\u305d\u3082\u305d\u3082\u601d\u3044\u3064\u304d\u3067\u4eee\u3067\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\uff08Beveled Decision Stump\uff09\u300d\u306a\u3093\u3066\u9020\u8a9e\u3057\u307e\u3057\u305f\u304c\u3001\u3082\u3057\u65e2\u306b\u77e5\u3089\u308c\u3066\u3044\u3066\u6b63\u5f0f\u540d\u79f0\u3068\u304b\u3042\u308c\u3070\u2026(^-^;\n\u660e\u65e5\u306f\u3001 @awakia \u3055\u3093\u306b\u3088\u308b\u8a18\u4e8b\u306e\u4e88\u5b9a\u3067\u3059\u3002\u304a\u697d\u3057\u307f\u306b\uff01\n\n\u53c2\u8003\u6587\u732e\n\n\n\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u3068\u6a5f\u68b0\u5b66\u7fd2 \u4e0b \u4e38\u5584\u51fa\u7248 \n\n\u30a4\u30e9\u30b9\u30c8\u3067\u5b66\u3076\u6a5f\u68b0\u5b66\u7fd2 \u6700\u5c0f\u4e8c\u4e57\u6cd5\u306b\u3088\u308b\u8b58\u5225\u30e2\u30c7\u30eb\u5b66\u7fd2\u3092\u4e2d\u5fc3\u306b \u8b1b\u8ac7\u793e\n\n\n\n\n\n\u3068\u3044\u3046\u304b\u5b9f\u969b\u3001\u4eca\u3072\u3068\u3064\u6027\u80fd\u304c\u4e0a\u304c\u3089\u306a\u304f\u3066\u8a66\u3057\u3067\u5f31\u5b66\u7fd2\u5668\u3092\u5c11\u3057\u5f04\u3063\u305f\u3089\u5287\u7684\u306b\u6027\u80fd\u304c\u4e0a\u304c\u3063\u305f\u308a\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u304c\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u304d\u3063\u304b\u3051\u3067\u3059\u3002\u00a0\u21a9\n\n\n\u500b\u4eba\u306e\u611f\u60f3\u3067\u3059\u3002\u00a0\u21a9\n\n\nJulia \u306e\u8a00\u8a9e\u4ed5\u69d8\u3068\u304b\u306f\u3001\u672c\u5bb6\u30b5\u30a4\u30c8\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084 Julia Advent Calendar \u306e\u5404\u8a18\u4e8b\u3068\u304b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u3053\u3067\u306f\u8a73\u89e3\u306f\u7701\u304d\u307e\u3059\u3002\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u5927\u4f53\u8aad\u307f\u53d6\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u00a0\u21a9\n\n\n_signplus() \u95a2\u6570\u306f\u6240\u8b02\u968e\u6bb5\u95a2\u6570\u3002sign() \u95a2\u6570\u306f Julia \u306b\u3082\u6a19\u6e96\u3067\u5b58\u5728\u3057\u307e\u3059\u3051\u308c\u3069\u3001sign(0.0) == 0.0 \u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u305d\u308c\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b\u7528\u610f\u3002\u00a0\u21a9\n\n\n\n# \u521d\u3081\u306b\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001[Machine Learning Advent Calendar 2016](http://qiita.com/advent-calendar/2016/machine-learning) 5\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u8907\u6570\u306e\u5b66\u7fd2\u5668\uff08\u5f31\u5b66\u7fd2\u5668\u3001weak learner\uff09\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3088\u308a\u3088\u308a\u6027\u80fd\u306e\u9ad8\u3044\u5b66\u7fd2\u5668\uff08\u5f37\u5b66\u7fd2\u5668\u3001strong learner\uff09\u3092\u4f5c\u308b\u3001\u30a2\u30f3\u30b5\u30f3\u30d6\u30eb\u5b66\u7fd2\u306e\u624b\u6cd5\u306e\u4e00\u3064\u3001[\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0](https://ja.wikipedia.org/wiki/%E3%83%96%E3%83%BC%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0)\u3002\n\u305d\u306e\u4e2d\u3067\u3082\u4ee3\u8868\u7684\u306a\u3001[AdaBoost](https://ja.wikipedia.org/wiki/AdaBoost)\u3002\n\nPRML\u672c\u306b\u3082\u8f09\u3063\u3066\u3044\u308b\uff08\u65e5\u672c\u8a9e\u7248\u4e0b\u5dfbp.374\uff09\u3057\u30b0\u30b0\u308c\u3070\u5b9f\u88c5\u4f8b\u3082\u3044\u304f\u3089\u3067\u3082\u51fa\u3066\u304d\u307e\u3059\u3051\u308c\u3069\u3001\u5f31\u5b66\u7fd2\u5668\u3068\u3057\u3066\u4e00\u756a\u5358\u7d14\u306a\u6c7a\u5b9a\u682a\uff08decision stump\uff09\u3092\u7528\u3044\u305f\u4f8b\u3070\u304b\u308a\u3002\n\u305d\u308c\u3092\u4ed6\u306e\u3082\u306e\u306b\u5909\u3048\u305f\u3089\u3001\u6027\u80fd\u306b\u3069\u3046\u5f71\u97ff\u3059\u308b\u304b\u3002\u601d\u3044\u3064\u304d\u3067\u5b9f\u9a13\u3057\u3066\u307f\u307e\u3057\u305f\u3002[^motivation]\n\n[^motivation]: \u3068\u3044\u3046\u304b\u5b9f\u969b\u3001\u4eca\u3072\u3068\u3064\u6027\u80fd\u304c\u4e0a\u304c\u3089\u306a\u304f\u3066\u8a66\u3057\u3067\u5f31\u5b66\u7fd2\u5668\u3092\u5c11\u3057\u5f04\u3063\u305f\u3089\u5287\u7684\u306b\u6027\u80fd\u304c\u4e0a\u304c\u3063\u305f\u308a\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u304c\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u304d\u3063\u304b\u3051\u3067\u3059\u3002\n\n## \u5b9f\u9a13\u74b0\u5883\n\n+ Mac OSX 10.11.6\n+ Core i7 3.1GHz / 16GB RAM\n+ [Julia](http://julialang.org/ \"The Julia Language\") v0.5.0\n    + [IJulia](https://github.com/JuliaLang/IJulia.jl)\uff08Julia \u306e [Jupyter](http://jupyter.org/ \"Project Jupyter | Home\") \u30ab\u30fc\u30cd\u30eb\uff09\u3001[Gadfly](http://gadflyjl.org/)\uff08Julia\u5b9a\u756a\u306e\u30d7\u30ed\u30c3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u4ee5\u5916\u306e\u7279\u5225\u306a\u5916\u90e8\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u4e0d\u4f7f\u7528\u3002\n\n# \u5b9f\u9a13\u306b\u4f7f\u7528\u3057\u305f\u4e8c\u5024\u5206\u985e\u30c7\u30fc\u30bf\n\n\u307b\u307c\u500b\u4eba\u7684\u306a\u8208\u5473\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3092\u4e8c\u5024\u5206\u985e\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n![AdaBoostSample_plot_tr1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/8b6d4703-c3d1-1800-2337-ae6d5823b516.png)\n\n\u4e00\u90e8\u304c\u91cd\u306a\u308a\u5408\u3063\u305f\u4e8c\u3064\u306e\u5186\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u300c\u3044\u305a\u308c\u304b\u4e00\u65b9\u306e\u307f\u300d\u306e\u5185\u90e8\u306e\u70b9\u3068\u3001\u305d\u308c\u4ee5\u5916\u3002\n\u3053\u308c\u304c\u30ad\u30ec\u30a4\u306b\u5206\u985e\u3067\u304d\u308b\u5206\u985e\u5668\u304c\u3067\u304d\u308c\u3070\u3001\u6c17\u6301\u3061\u3088\u3044\u3067\u3059\u3088\u306d[^comfortable]\u3002\n\n[^comfortable]: \u500b\u4eba\u306e\u611f\u60f3\u3067\u3059\u3002\n\n\u306a\u304a\u3001\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u5b9f\u9a13\uff08\u8a13\u7df4\u3001\u53ca\u3073\u30c6\u30b9\u30c8\uff09\u3054\u3068\u306b\u30e9\u30f3\u30c0\u30e0\u751f\u6210\u3057\u307e\u3057\u305f\u3002\n\n```jl\n# \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\uff08\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\u751f\u6210\nfunction makelabels{T<:AbstractFloat}(data::AbstractMatrix{T})\n    # \u51861\uff1a\u4e2d\u5fc3 (0.35, 0.35), \u534a\u5f84 0.3 \u306e\u5186\n    x1 = 0.35; y1 = 0.35; r1 = 0.3\n    # \u51862\uff1a\u4e2d\u5fc3 (0.65, 0.65), \u534a\u5f84 0.3 \u306e\u5186\n    x2 = 0.65; y2 = 0.65; r2 = 0.3\n    # \u51861 \u3068 \u51862 \u3069\u3061\u3089\u304b\u306b\uff08\u306e\u307f\uff09\u5165\u3063\u3066\u3044\u308b\u306a\u3089\u3070 1\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070 0\n    chk1 = mapslices(norm, data .- [x1 y1;], 2) .<= r1\n    chk2 = mapslices(norm, data .- [x2 y2;], 2) .<= r2\n    vec(collect(T, chk1 $ chk2)) .* 2 .- 1\nend\n\n# \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\uff08\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\u751f\u6210\nfunction makedata(N::Int=1000)\n    data = rand(N, 2)\n    labels = makelabels(data)\n    DataFrame(x=vec(data[:,1]), y=vec(data[:,2]), c=vec(labels))\nend\n```\n\n# AdaBoost \u5b9f\u88c5\n\n\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u3058[^juliacode][^signplus]\uff1a\n\n```jl:adaboost.jl\nfunction _signplus{T<:AbstractFloat}(x::T)\n    x == 0 ? one(T) : sign(x)\nend\n\nfunction _signplus{T<:AbstractFloat, N}(x::AbstractArray{T, N})\n    broadcast(_signplus, x)\nend\n\nabstract WeakClassifier{T<:AbstractFloat}\n\ninclude(\"decisionstumpweakclassifier.jl\")\n\nimmutable AdaBoost{T<:AbstractFloat, W<:WeakClassifier}\n    alpha::AbstractVector{T}\n    hs::AbstractVector{W}\nend\n\nfunction adaboost{T<:AbstractFloat, WC<:WeakClassifier}(\n        X::AbstractMatrix{T},\n        Y::AbstractVector{T};\n        wc::Type{WC}=DecisionStumpWeakClassifier,\n        t=100,\n        kwds...)\n    M = length(Y)\n    D = ones(T, M) ./ M\n    hs = WC{T}[]\n    alpha = T[]\n    for _ = 1:t\n        h = weaklearn(wc, X, Y, D; kwds...)\n        diff = abs(h(X) - Y)\n        e = dot(diff, D) / 2\n        if e < 1e-10\n            break\n        end\n        a = log((1 - e) / e) / 2\n        D .*= exp(a .* (diff - 1))\n        D ./= sum(D)\n        push!(hs, h)\n        push!(alpha, a)\n    end\n    AdaBoost(alpha, hs)\nend\n\nfunction (f::AdaBoost{T,W}){T<:AbstractFloat,W}(x::AbstractVector{T})\n    _signplus(dot(f.alpha, [h(x) for h=f.hs]))\nend\n\nfunction (f::AdaBoost{T,W}){T<:AbstractFloat,W}(x::AbstractMatrix{T})\n    mapslices(f, x, 2)\nend\n```\n\n[^juliacode]: Julia \u306e\u8a00\u8a9e\u4ed5\u69d8\u3068\u304b\u306f\u3001\u672c\u5bb6\u30b5\u30a4\u30c8\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084 [Julia Advent Calendar](http://qiita.com/advent-calendar/2016/julialang) \u306e\u5404\u8a18\u4e8b\u3068\u304b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u3053\u3067\u306f\u8a73\u89e3\u306f\u7701\u304d\u307e\u3059\u3002\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u5927\u4f53\u8aad\u307f\u53d6\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n[^signplus]: `_signplus()` \u95a2\u6570\u306f\u6240\u8b02\u968e\u6bb5\u95a2\u6570\u3002`sign()` \u95a2\u6570\u306f Julia \u306b\u3082\u6a19\u6e96\u3067\u5b58\u5728\u3057\u307e\u3059\u3051\u308c\u3069\u3001`sign(0.0) == 0.0` \u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u305d\u308c\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b\u7528\u610f\u3002\n\n```jl:decisionstumpweakclassifier.jl\nimmutable DecisionStumpWeakClassifier{T<:AbstractFloat} <: WeakClassifier{T}\n    axis::Int\n    d::T\n    b::T\nend\n\nfunction weaklearn{T<:AbstractFloat}(\n        ::Type{DecisionStumpWeakClassifier},\n        X::AbstractMatrix{T},\n        Y::AbstractVector{T},\n        D::AbstractVector{T})\n    # @assert size(X)[1] == length(Y) == length(D)\n    (N, M) = size(X)\n    tgtidx = rand(1:M)\n    xi = sortperm(X[:,tgtidx])\n    WY = Y .* D\n    el = cumsum(WY[xi])\n    eu = cumsum(WY[reverse(xi)])\n    es = eu[end-1:-1:1] .- el[1:end-1]\n    idx = indmax(abs(es))\n    d = sign(es[idx])\n    b = (X[xi[idx],tgtidx] + X[xi[idx + 1],tgtidx]) / 2\n    DecisionStumpWeakClassifier(tgtidx, d, b)\nend\n@inline weaklearn(::Type{DecisionStumpWeakClassifier}, X, Y, D; kwds...) = \n    weaklearn(DecisionStumpWeakClassifier, X, Y, D)\n\nfunction (h::DecisionStumpWeakClassifier{T}){T}(x::AbstractMatrix{T})\n    _signplus(h.d .* (x[:,h.axis] .- h.b))\nend\n\nfunction (h::DecisionStumpWeakClassifier{T}){T}(x::AbstractVector{T})\n    _signplus(h.d * (x[h.axis] - h.b))\nend\n```\n\n\u6c7a\u5b9a\u682a\uff08Decision Stump\uff09\u306e\u5b66\u7fd2\u90e8\u5206\u306f\u3001[\u30a4\u30e9\u30b9\u30c8\u3067\u5b66\u3076\u6a5f\u68b0\u5b66\u7fd2](https://www.amazon.co.jp/dp/4061538217) \u306b\u8a18\u8f09\u306e MATLAB \u30d7\u30ed\u30b0\u30e9\u30e0\u4f8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002`cumsum` \u3057\u3066\u5dee\u3092\u53d6\u308b\u3053\u3068\u3067\u7c21\u5358\u9ad8\u901f\u306b\u300c\u6700\u9069\u306a\u5883\u754c\u300d\u304c\u6c42\u307e\u308a\u307e\u3059\u3002\u76ee\u304b\u3089\u30a6\u30ed\u30b3\u3002\n\u3042\u3068\u3001`WeakClassifier` \u3092\u7d99\u627f\u3057\u305f\u578b\u3068\u3001\u305d\u308c\u3092\u53d7\u3051\u53d6\u308b `weaklearn()` \u95a2\u6570\u3092\uff08\u591a\u91cd\uff09\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u5f31\u5b66\u7fd2\u5668\uff08\u5f31\u5206\u985e\u5668\uff09\u3092\u30d7\u30e9\u30b0\u30a4\u30f3\u7684\u306b\u5dee\u3057\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\uff08\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\uff09\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u672a\u6307\u5b9a\u6642\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6c7a\u5b9a\u682a\u304c\u5229\u7528\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n# \u6c7a\u5b9a\u682a\uff08Decision Stump\uff09\u3092\u5f31\u5b66\u7fd2\u5668\u3068\u3057\u305f\u5b66\u7fd2\u30fb\u5206\u985e\n\n## t=1000\n\n\u3055\u3066\u65e9\u901f\u5b66\u7fd2\u30fb\u5206\u985e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u306f\u3001\u5f31\u5b66\u7fd2\u5668\uff08\u6c7a\u5b9a\u682a\uff09\u3092\u6700\u5927 1000\u500b \u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n```jlcon\njulia> X = convert(Array, data[:,1:2]); Y = collect(data[:, 3]);\n\njulia> include(\"adaboost.jl\")\n\njulia> H = adaboost(X, Y; t=1000)\nAdaBoost{Float64,DecisionStumpWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(H.alpha)\n1000\n\njulia> Yd = H(X);\n```\n\n![AdaBoostSample_plot_Yd1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/fcbdbbdb-5062-600d-a906-c8eb4a0d87b3.png)\n\n\u3046\u30fc\u3093\u2026\u4eca\u3072\u3068\u3064\u304d\u3061\u3093\u3068\u5206\u985e\u3067\u304d\u3066\u306a\u3044\u3067\u3059\u306d\u2026\u3002\n\n### \u6027\u80fd\u8a55\u4fa1\n\n\u6b63\u7b54\u7387\u30fb\u9069\u5408\u7387\u30fb\u518d\u73fe\u7387\u30fbF-\u5024\uff08F1-measure\uff09\u3092\u7b97\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\n```jl\nfunction calc_confusionmatrix(Y, Yd)\n    tp = sum(1+Y[Yd.==1])/2\n    fp = sum(1-Y[Yd.==1])/2\n    tn = sum(1-Y[Yd.==-1])/2\n    fn = sum(1+Y[Yd.==-1])/2\n    [tp fp; fn tn]\nend\n\nfunction calc_mlmetrics(Y, Yd)\n    cm = calc_confusionmatrix(Y, Yd)\n    (tp, fn, fp, tn) = vec(cm)\n    accuracy = (tp + tn) / (tp + fp + fn + tn)\n    precision_score = tp / (tp + fp)\n    recall_score = tp / (tp + fn)\n    f_measure = 2 * precision_score * recall_score / (precision_score + recall_score)\n    (accuracy, precision_score, recall_score, f_measure)\nend\n```\n\n```jlcon\njulia> (a, p, r, f) = calc_mlmetrics(Y, Yd);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.817000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.774194\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.821918\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.797342\n```\n\n\u3084\u3063\u3071\u308a\u4eca\u3072\u3068\u3064\u3002\n\n### \u6c4e\u5316\u6027\u80fd\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u3082\u78ba\u8a8d\u3002\n\n```jlcon\njulia> x_test = rand(100, 2);\n\njulia> y_test = H(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.720000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.638298\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.731707\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.681818\n```\n\n![AdaBoostSample_plot_t1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/461eb007-99de-b949-67fc-b02079c60f80.png)\n\n\u3088\u308d\u3057\u304f\u306a\u3044\u3067\u3059\u306d\uff1e\uff1c\n\n## t=2000\n\n\u5f31\u5b66\u7fd2\u5668\uff08\u5f31\u5206\u985e\u5668\uff09\u3092 1000\u500b \u304b\u3089 2000\u500b \u306b\u5897\u3084\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n```jlcon\njulia> H2k = adaboost(X, Y; t=2000)\nAdaBoost{Float64,DecisionStumpWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(H2k.alpha)\n2000\n\njulia> Yd2k = H2k(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Yd2k);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.851000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.812095\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.858447\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.834628\n```\n\n![AdaBoostSample_plot_Yd2k1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/337ecc68-1f6b-676a-57e6-c14b2204bd6f.png)\n\n```jlcon\njulia> x_test = rand(100, 2);\n\njulia> y_test = H2k(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.750000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.711111\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.727273\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.719101\n```\n\n![AdaBoostSample_plot_t2k1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/b8daa00f-d3d5-a947-9fee-1a304a0b44f4.png)\n\n\u5fae\u5999\u306b\u6539\u5584\u2026\u3067\u3082\u307e\u3060\u307e\u3060\u5148\u306f\u9577\u305d\u3046\u3067\u3059\u306d\uff1e\uff1c\n\n# \u6c7a\u5b9a\u682a\u3092\u659c\u3081\u306b\u3057\u3066\u307f\u305f\u3002\n\n\u305d\u3082\u305d\u3082\u6c7a\u5b9a\u682a\u3068\u3044\u3046\u306e\u306f\u3001\u8907\u6570\u3042\u308b\u8aac\u660e\u5909\u6570\uff08\u8ef8\uff09\u306e\u3046\u3061\u3001\u3069\u308c\u304b1\u3064\u306e\u307f\u306b\u6ce8\u76ee\u3057\u3066\u3001\u6700\u9069\u306b\u5206\u985e\u3067\u304d\u3066\u305d\u3046\u306a\u5883\u754c\u3092\u63a2\u308b\u3082\u306e\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3067\u898b\u3066\u307f\u308b\u3068\u3001\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\uff08\u3042\u304f\u307e\u3067\u30a4\u30e1\u30fc\u30b8\u3067\u3059\uff09\uff1a\n\n![AdaBoostSample_DecisionStumpImage.png](https://qiita-image-store.s3.amazonaws.com/0/30400/55c0f1b7-4085-bdce-56ee-cd242877255f.png)\n\n\u3064\u307e\u308a\u8aac\u660e\u5909\u6570\u304c2\u500b\uff08\uff1d2\u8ef8\uff09\u306e\u5834\u5408\u3001\u5e73\u9762\u4e0a\u306ex\u8ef8\u304by\u8ef8\u304b\u3001\u3069\u3061\u3089\u304b\u3057\u304b\u57fa\u6e96\u304c\u306a\u3044\u3001\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\n\u3053\u308c\u3001\u659c\u3081\u306b\u3057\u305f\u3089\u3069\u3046\u3060\u308d\u3046\uff1f \u3064\u3044\u3067\u306b\u305d\u306e\u50be\u304d\u3092\u6bce\u56de\u30e9\u30f3\u30c0\u30e0\u306b\u6c7a\u5b9a\u3057\u305f\u3089\u306a\u3093\u304b\u826f\u304f\u306d\uff1f \uff08\u30a4\u30e1\u30fc\u30b8\uff1a\uff09\n\n![AdaBoostSample_BeveledDecisionStumpImage.png](https://qiita-image-store.s3.amazonaws.com/0/30400/8044bc2d-5935-3add-8cb1-e53aa7d3a1a9.png)\n\n\u3068\u3001\u601d\u3044\u3064\u304d\u307e\u3057\u3066\u3001\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u659c\u3081\u306e\u6c7a\u5b9a\u682a\uff08Beveled Decision Stump\uff09\u306e\u5b9f\u88c5\n\n\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u3058\uff1a\n\n```jl:beveleddecisionstumpweakclassifier.jl\nimmutable BeveledDecisionStumpWeakClassifier{T<:AbstractFloat} <: WeakClassifier{T}\n    w::AbstractArray{T, 1}\n    b::T\nend\n\nfunction weaklearn{T<:AbstractFloat}(\n        ::Type{BeveledDecisionStumpWeakClassifier},\n        X::AbstractMatrix{T},\n        Y::AbstractVector{T},\n        D::AbstractVector{T})\n    # @assert size(X)[1] == length(Y) == length(D)\n    (N, M) = size(X)\n    W0 = rand(T, M) .* 2 .- 1\n    Xs = X * W0\n    xi = sortperm(Xs)\n    WY = Y .* D\n    el = cumsum(WY[xi])\n    eu = cumsum(WY[reverse(xi)])\n    es = eu[end-1:-1:1] .- el[1:end-1]\n    idx = indmax(abs(es))\n    d = sign(es[idx])\n    w = d .* W0\n    b = -0.5d * (Xs[xi[idx]] + Xs[xi[idx+1]])\n    BeveledDecisionStumpWeakClassifier(w, b)\nend\n@inline weaklearn(::Type{BeveledDecisionStumpWeakClassifier}, X, Y, D; kwds...) = \n    weaklearn(BeveledDecisionStumpWeakClassifier, X, Y, D)\n\nfunction (h::BeveledDecisionStumpWeakClassifier{T}){T}(x::AbstractMatrix{T})\n    _signplus(x * h.w .+ h.b)\nend\n\nfunction (h::BeveledDecisionStumpWeakClassifier{T}){T}(x::AbstractVector{T})\n    _signplus(dot(x, h.w) + h.b)\nend\n```\n\n\u5b66\u7fd2\u306f\u3001\u8ef8\u3092\u4e71\u629e\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u5883\u754c\u5e73\u9762\uff082\u6b21\u5143\u306e\u5834\u5408\u306f\u5883\u754c\u7dda\u3002M\u6b21\u5143\u306e\u5834\u5408\u306fM-1\u6b21\u5143\u8d85\u5e73\u9762\uff09\u306e\u50be\u304d\u3092\u6c7a\u5b9a\u3059\u308bM\u500b\u306e\u4fc2\u6570\u3092\u4e71\u629e\u3002\u305d\u308c\u3092\u5143\u306e`X`\uff08N\u884cM\u5217\u306e\u884c\u5217\uff09\u3068\u7a4d\u3092\u53d6\u308b\u3053\u3068\u3067N\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u3092\u7b97\u51fa\uff08\u5404\u70b9\u306e\u305d\u306e\uff08\u8d85\uff09\u5e73\u9762\u304b\u3089\u306e\u7b26\u53f7\u4ed8\u8ddd\u96e2\u304c\u5165\u308b\uff09\u3002\u3042\u3068\u306f\u666e\u901a\u306e Decision Stump \u3068\u540c\u3058\u3002\n\u5206\u985e\u306f\u3001\u305d\u3046\u3057\u3066\u3067\u304d\u305f\uff08\u8d85\uff09\u5e73\u9762\u306e\u591a\u9805\u5f0f\u306b\u5404\u5909\u6570\u3092\u4ee3\u5165\u3057\u3066\u6b63\u304b\u8ca0\u304b\uff08\uff1d\u5e73\u9762\u306e\u3069\u3063\u3061\u5074\u304b\uff09\u3092\u898b\u308b\u3060\u3051\uff08\u5e73\u9762\u4e0a\u306e\u5834\u5408\u306f\u6b63\u3068\u5224\u5b9a\uff09\u3002\n\n## t=100\n\n\u5b66\u7fd2\u30fb\u5206\u985e\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u307e\u305a\u306f\u5f31\u5b66\u7fd2\u5668100\u500b\u304b\u3089\u3002\n\n```jlcon\njulia> include(\"beveleddecisionstumpweakclassifier.jl\")\n\njulia> Hb = adaboost(X, Y; t=100, wc=BeveledDecisionStumpWeakClassifier)\nAdaBoost{Float64,BeveledDecisionStumpWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(Hb.alpha)\n100\n\njulia> Ydb = Hb(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Ydb);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.982000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.970852\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.988584\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.979638\n```\n\n![AdaBoostSample_plot_Ydb1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/bb02cecf-f084-5a65-55f3-95a12b429020.png)\n\n\u3073\u3063\u304f\u308a\u3059\u308b\u304f\u3089\u3044\u6027\u80fd\u304c\u4e0a\u304c\u308a\u307e\u3057\u305f\uff01\n\u6c4e\u5316\u6027\u80fd\u3082\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```jlcon\njulia> x_test = rand(100, 2);\n\njulia> y_test = Hb(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.900000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.865385\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.937500\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.900000\n```\n\n![AdaBoostSample_plot_tb1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/63e0352d-7ff3-296c-b7d0-3c15173be0a9.png)\n\n\u306a\u304b\u306a\u304b\u3044\u3044\u611f\u3058\u3002\n\n## t=200\n\n\u6700\u5927200\u500b\u307e\u3067\u5897\u3084\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```jlcon\njulia> Hb2h = adaboost(X, Y; t=200, wc=BeveledDecisionStumpWeakClassifier)\nAdaBoost{Float64,BeveledDecisionStumpWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(Hb.alpha)\n200\n\njulia> Ydb2h = Hb2h(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Ydb2h);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.998000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.997717\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.997717\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.997717\n```\n\n![AdaBoostSample_plot_Ydb2h1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/bb2ef4fa-b13c-95c6-e166-6b247a144c23.png)\n\n```jlcon\njulia> x_test = rand(100, 2);\n\njulia> y_test = Hb2h(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.990000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 1.000000\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.975610\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.987654\n```\n\n![AdaBoostSample_plot_tb2h1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/a07b9dbf-4980-b8d5-5a51-afd0c636588f.png)\n\n\u6c4e\u5316\u6027\u80fd\u3001\u6b63\u89e3\u738799%\u3001\u9069\u5408\u7387100%\uff08\uff1d\u8aa4\u691c\u51fa\u30bc\u30ed\uff09\uff01 \u518d\u73fe\u738797.6%\uff08\uff1d\u691c\u51fa\u6f0f\u308c2.4%\uff09\u306f\u5c11\u3005\u6c17\u306b\u306a\u308a\u307e\u3059\u3051\u308c\u3069\u3002\n\u5143\u306e\uff08\u666e\u901a\u306e\uff09\u6c7a\u5b9a\u682a\u306b\u6bd4\u3079\u3066\u3001\u5f31\u5206\u985e\u5668\u306e\u6570\u306f1/5\u301c1/10\u3002\u305d\u308c\u3067\u3053\u306e\u6570\u5024\u306f\u3001\u306a\u304b\u306a\u304b\u826f\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u3002\n\n# \u6c7a\u5b9a\u6728\u306e\u5834\u5408\n\n\u3084\u3063\u3071\u308a\u57fa\u672c\u3002\n\u6c7a\u5b9a\u682a\u3092\u6c7a\u5b9a\u6728\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4e88\u60f3\u3067\u306f\u3001\u7cbe\u5ea6\uff08\u5c11\u306a\u304f\u3068\u3082\u6b63\u89e3\u7387\uff09\u306f\u3055\u3089\u306b\u4e0a\u304c\u308b\u306f\u305a\u3002\n\n![AdaBoostSample_DecisionTreeImage.png](https://qiita-image-store.s3.amazonaws.com/0/30400/f3928141-ce8d-4948-060d-3e656a33bfe4.png)\n\n## \u6c7a\u5b9a\u6728\uff08Decision Tree\uff09\u306e\u5b9f\u88c5\n\n\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u3058\uff08\u3061\u3087\u3063\u3068\u9577\u304f\u306a\u308b\u306e\u3067\u4e00\u90e8\u7701\u7565\uff09\uff1a\n\n```jl:beveleddecisionstumpweakclassifier.jl(excerpt)\nabstract AbstractDTree{T}\n\ntype DTreeNode{T} <: AbstractDTree{T}\n    val::T\n    axis::Int\n    b::T\n    left::AbstractDTree{T}\n    right::AbstractDTree{T}\nend\n\nimmutable DTreeLeaf{T} <: AbstractDTree{T}\n    val::T\nend\n\nfunction applydtree(leafornode, x)\n    ; # \u300a\u7565\u300b\nend\n\nimmutable DecisionTreeWeakClassifier{T<:AbstractFloat} <: WeakClassifier{T}\n    tree::AbstractDTree{T}\nend\n\nfunction builddtree{T}(\n        val::T,\n        X::AbstractMatrix{T},\n        WY::AbstractVector{T},\n        depth::Int)\n    if depth == 0\n        return DTreeLeaf(val)\n    elseif length(WY) == 1\n        return DTreeLeaf(sign(WY[1]))\n    end\n    (N, M) = size(X)\n    tgtidx = rand(1:M)\n    xi = sortperm(X[:,tgtidx])\n    el = cumsum(WY[xi])\n    eu = cumsum(WY[reverse(xi)])\n    es = eu[end-1:-1:1] .- el[1:end-1]\n    idx = indmax(abs(es))\n    if abs(sum(WY)) > abs(es[idx])\n        return DTreeLeaf(sign(sum(WY)))\n    end\n    d = sign(es[idx])\n    b = (X[xi[idx],tgtidx] + X[xi[idx + 1],tgtidx]) / 2\n    lidxs = xi[1:idx]\n    ridxs = xi[idx+1:end]\n    DTreeNode(val, tgtidx, b, \n        builddtree(-d, X[lidxs, :], WY[lidxs], depth-1),\n        builddtree(d, X[ridxs, :], WY[ridxs], depth-1))\nend\n\nfunction weaklearn{T<:AbstractFloat}(\n        ::Type{DecisionTreeWeakClassifier},\n        X::AbstractMatrix{T},\n        Y::AbstractVector{T},\n        D::AbstractVector{T};\n        maxdepth::Int=3,\n        kwds...)\n    # @assert size(X)[1] == length(Y) == length(D)\n    WY = Y .* D\n    DecisionTreeWeakClassifier(builddtree(one(T), X, WY, maxdepth))\nend\n\nfunction (h::DecisionTreeWeakClassifier{T}){T}(x::AbstractVecOrMat{T})\n    applydtree(h.tree, x)\nend\n```\n\n`weaklearn()` \u95a2\u6570\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570 `maxdepth` \u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u6728\u306e\u6df1\u3055\u306e\u6700\u5927\u5024\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f `3` \u306b\u3057\u307e\u3057\u305f\u3002\n\u5b66\u7fd2\u306f\u3001\u6c7a\u5b9a\u682a\u3092\u591a\u5c64\u306b\u3057\u305f\u3060\u3051\u3002\u7c21\u5358\u3067\u3059\u306d\u3002\n\n## t=100, maxdepth=3\n\n\u5b66\u7fd2\u30fb\u5206\u985e\u3002\u5f31\u5b66\u7fd2\u5668100\u500b\u3001\u6df1\u3055\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e3\u3002\n\n```jlcon\njulia> include(\"decisiontreeweakclassifier.jl\")\n\njulia> Ht = adaboost(X, Y; t=100, wc=DecisionTreeWeakClassifier)\nAdaBoost{Float64,DecisionTreeWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(Ht.alpha)\n100\n\njulia> Ydt = Ht(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Ydt);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 1.000000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 1.000000\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 1.000000\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 1.000000\n```\n\n![AdaBoostSample_plot_Ydt1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/764e1926-c336-cbe4-e103-bfbbbc88249d.png)\n\n\u4e88\u60f3\u901a\u308a\u9ad8\u6027\u80fd\uff01\u6b63\u7b54\u7387\u30fbF-\u5024100%\uff01\n\u305f\u3060\u3053\u3046\u306a\u308b\u3068\u904e\u5b66\u7fd2\u304c\u5fc3\u914d\u3067\u3059\u306d\u2026\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6c4e\u5316\u6027\u80fd\u3002\n\n```jlcon\njulia> x_test = rand(100, 2);\n\njulia> y_test = Ht(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.940000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.923077\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.923077\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.923077\n```\n\n![AdaBoostSample_plot_tt1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/377b3a13-41a2-fa70-55e7-db2581d423e8.png)\n\n\u3046\u3093\u3001\u3084\u3063\u3071\u308a\u591a\u5c11\u904e\u5b66\u7fd2\u304e\u307f\u3002\u305d\u308c\u3067\u3082\u3053\u306e\u6570\u5024\u306a\u3089\u304b\u306a\u308a\u826f\u3055\u3052\u3067\u3059\u306d\u3002\n\n## t=100, maxdepth=2\n\n`maxdepth=3` \u3067\u601d\u3044\u306e\u5916\u9ad8\u6027\u80fd\uff08\u305f\u3060\u3057\u904e\u5b66\u7fd2\u6c17\u5473\uff09\u3060\u3063\u305f\u306e\u3067\u3001\u5f31\u5b66\u7fd2\u5668\u306e\u6570\u306f\u5909\u3048\u305a\u306b`maxdepth=2` \u306b\u3057\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```jlcon\njulia> Ht2d = adaboost(X, Y; t=100, wc=DecisionTreeWeakClassifier, maxdepth=2)\nAdaBoost{Float64,DecisionTreeWeakClassifier{Float64}}([\u2026\u300a\u7565\u300b\n\njulia> length(Ht2d.alpha)\n100\n\njulia> Ydt2d = Ht2d(X);\n\njulia> (a, p, r, f) = calc_mlmetrics(Y, Ydt2d);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.966000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.957014\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.965753\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.961364\n```\n\n![AdaBoostSample_plot_Ydt2d1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/3a5f43b3-aa2b-8946-13e8-c1f1c24cd67a.png)\n\n```jlcon\njulia> x_test = rand(100, 2);\n\njulia> y_test = Ht2d(x_test);\n\njulia> (a, p, r, f) = calc_mlmetrics(makelabels(x_test), y_test);\n\njulia> @printf(\"accuracy: %.06f\\n\", a)\naccuracy: 0.960000\n\njulia> @printf(\"precision: %.06f\\n\", p)\nprecision: 0.980392\n\njulia> @printf(\"recall: %.06f\\n\", r)\nrecall: 0.943396\n\njulia> @printf(\"f_measure: %.06f\\n\", f)\nf_measure: 0.961538\n```\n\n![AdaBoostSample_plot_tt2d1.png](https://qiita-image-store.s3.amazonaws.com/0/30400/d09b3457-5c71-4d5d-5c62-9c8d7cdfdeae.png)\n\n\u8a13\u7df4\u6027\u80fd\u306f\u5c11\u3057\u843d\u3061\u307e\u3057\u305f\u304c\u3001\u6c4e\u5316\u6027\u80fd\u306f\u5be7\u308d\u5411\u4e0a\u3002\u307e\u305f\u3069\u3061\u3089\u3082\u307b\u307c\u540c\u3058\u6570\u5024\u3001\u30d0\u30e9\u30f3\u30b9\u306f\u53d6\u308c\u3066\u3044\u307e\u3059\u3002\n\n# \u901f\u5ea6\u8a55\u4fa1\n\n\u305d\u308c\u305e\u308c\u306e\u5b66\u7fd2\u304a\u3088\u3073\u5206\u985e\u306e\u6642\u9593\u3092\u8a08\u6e2c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u5b66\u7fd2\u6642\u9593\n\n```jlcon\njulia> Base.gc(true); @time adaboost(X, Y; t=1000);\n  0.173937 seconds (59.16 k allocations: 179.057 MB, 22.12% gc time)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=2000);\n  0.324151 seconds (118.03 k allocations: 358.083 MB, 16.43% gc time)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=100, wc=BeveledDecisionStumpWeakClassifier);\n  0.013637 seconds (6.42 k allocations: 17.183 MB)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=200, wc=BeveledDecisionStumpWeakClassifier);\n  0.030205 seconds (12.82 k allocations: 34.350 MB, 11.57% gc time)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=100, wc=DecisionTreeWeakClassifier);\n  0.050829 seconds (42.65 k allocations: 46.169 MB, 15.03% gc time)\n\njulia> Base.gc(true); @time adaboost(X, Y; t=100, wc=DecisionTreeWeakClassifier, maxdepth=2);\n  0.059504 seconds (20.55 k allocations: 31.923 MB, 13.18% gc time)\n```\n\n\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\u3002\u5f31\u5206\u985e\u5668\u306e\u6570\u306b\u307b\u307c\u6bd4\u4f8b\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u5206\u985e\u6642\u9593\n\n```jlcon\njulia> Base.gc(true); @time H(X);\n  0.025561 seconds (14.54 k allocations: 8.029 MB)\n\njulia> Base.gc(true); @time H2k(X);\n  0.029515 seconds (14.54 k allocations: 15.659 MB)\n\njulia> Base.gc(true); @time Hb(X);\n  0.028651 seconds (415.54 k allocations: 7.251 MB)\n\njulia> Base.gc(true); @time Hb2h(X);\n  0.038001 seconds (815.54 k allocations: 14.224 MB)\n\njulia> Base.gc(true); @time Ht(X);\n  0.032033 seconds (341.59 k allocations: 6.123 MB)\n\njulia> Base.gc(true); @time Ht2d(X);\n  0.037214 seconds (255.19 k allocations: 4.804 MB)\n```\n\n\u69cb\u9020\u304c\u8907\u96d1\u306b\u306a\u308b\u307b\u3069\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c\u3001\u300c\u540c\u3058\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09\u3092\u51fa\u3059\u5206\u985e\u5668\u306e\u5206\u985e\u306b\u304b\u304b\u308b\u6642\u9593\u300d\u3068\u8003\u3048\u308b\u3068\u3001\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\u300d\u304c\u5272\u3068\u512a\u79c0\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\n# \u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\n\n\u8868\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u3001DS: \u6c7a\u5b9a\u682a\u3001BS: \u659c\u3081\u306e\u6c7a\u5b9a\u682a\u3001DT: \u6c7a\u5b9a\u6728\u3002\n\n|\u5f31\u5b66\u7fd2\u5668\u304a\u3088\u3073\u30d1\u30e9\u30e1\u30fc\u30bf|\u8a13\u7df4\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09|\u6c4e\u5316\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09|\u5b66\u7fd2\u6642\u9593(s)|\u5206\u985e\u6642\u9593(s)|\n|------------------------|------------------:|------------------:|----------:|----------:|\n|DS, t=1000|81.7%|72.0%|0.173937|0.025561|\n|DS, t=2000|85.1%|75.0%|0.324151|0.029515|\n|BS, t=100|98.2%|90.0%|0.013637|0.028651|\n|BS, t=200|99.8%|99.0%|0.030205|0.038001|\n|DT, t=100, maxdepth=3|100.0%|94.0%|0.050829|0.032033|\n|DT, t=100, maxdepth=2|96.6%|96.0%|0.059504|0.037214|\n\n\u5b66\u7fd2\u6642\u9593\u3068\u5b89\u5b9a\u3057\u305f\u7cbe\u5ea6\u3092\u6c42\u3081\u308b\u306a\u3089\u3001\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\uff08t=200\uff09\u300d\u3002\n\u5206\u985e\u901f\u5ea6\u3068\u3042\u308b\u7a0b\u5ea6\u306e\u7cbe\u5ea6\u3092\u6c42\u3081\u308b\u306a\u3089\u3001\u300c\u6c7a\u5b9a\u6728\uff08d=3\uff09\u300d\u3002\n\u3068\u8a00\u3063\u305f\u3068\u3053\u308d\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u306a\u304a\u3001\u4f55\u5ea6\u304b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u5927\u4f53\u540c\u3058\u7d50\u679c\u306b\u306a\u308a\u307e\u3057\u305f\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u4ed8\u8a00\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n# \u4ed6\u306e\u5206\u985e\u30c7\u30fc\u30bf\n\n\u4eca\u56de\u306e\u5206\u985e\u30c7\u30fc\u30bf\u304c\u3042\u307e\u308a\u306b\u7279\u6b8a\u3059\u304e\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3001\u3068\u601d\u3044\u3001\u5c11\u3057\u9055\u3046\u30c7\u30fc\u30bf\u3067\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u7d50\u679c\u3060\u3051\u793a\u3057\u307e\u3059\u3002\n\n## \u3050\u308b\u3050\u308b\uff08\u30a2\u30eb\u30ad\u30e1\u30c7\u30b9\u87ba\u65cb\u30d9\u30fc\u30b9\uff09\n\n![AdaBoostSample_plot_tr2.png](https://qiita-image-store.s3.amazonaws.com/0/30400/6ae048df-b685-6ba9-7e14-07de9f47eebb.png)\n\n|\u5f31\u5b66\u7fd2\u5668\u304a\u3088\u3073\u30d1\u30e9\u30e1\u30fc\u30bf|\u8a13\u7df4\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09|\u6c4e\u5316\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09|\u5b66\u7fd2\u6642\u9593(s)|\u5206\u985e\u6642\u9593(s)|\n|------------------------|------------------:|------------------:|----------:|----------:|\n|DS, t=1000|80.1%|70.0%|0.155572|0.135507|\n|DS, t=2000|82.2%|69.0%|0.427481|0.088738|\n|BS, t=100|97.8%|94.0%|0.020341|0.101591|\n|BS, t=200|99.0%|95.0%|0.032742|0.126774|\n|DT, t=100, maxdepth=3|99.6%|95.0%|0.065813|0.102042|\n|DT, t=100, maxdepth=2|95.0%|94.0%|0.034316|0.061358|\n\n\u50be\u5411\u3068\u3057\u3066\u306f\u30012\u3064\u306e\u5186\u306e\u6642\u3068\u307b\u307c\u540c\u3058\u611f\u3058\u3002\u5168\u4f53\u7684\u306b\u7cbe\u5ea6\u306f\u843d\u3061\u307e\u3057\u305f\u3002\n\n## \u30b7\u30f3\u30d7\u30eb\n\n![AdaBoostSample_plot_tr3.png](https://qiita-image-store.s3.amazonaws.com/0/30400/dbdb2e68-d19a-8c35-2869-6e78a2bc7d6f.png)\n\n|\u5f31\u5b66\u7fd2\u5668\u304a\u3088\u3073\u30d1\u30e9\u30e1\u30fc\u30bf|\u8a13\u7df4\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09|\u6c4e\u5316\u6027\u80fd\uff08\u6b63\u89e3\u7387\uff09|\u5b66\u7fd2\u6642\u9593(s)|\u5206\u985e\u6642\u9593(s)|\n|------------------------|------------------:|------------------:|----------:|----------:|\n|DS, t=1000|70.7%|49.0%|0.164527|0.022333|\n|DS, t=2000|73.9%|52.0%|0.278538|0.031139|\n|BS, t=100|100.0%|100.0%|0.013001|0.026756|\n|BS, t=200|100.0%|99.0%|0.029818|0.036352|\n|DT, t=100, maxdepth=3|49.6%|55.0%|0.037481|0.013271|\n|DT, t=100, maxdepth=2|100.0%|100.0%|0.038498|0.028926|\n\n\u6c7a\u5b9a\u6728\u3092\u5229\u7528\u3057\u305f\u3082\u306e\u306b\u5c11\u3057\u304a\u304b\u3057\u306a\u7d50\u679c\u304c\u3002\u30c7\u30fc\u30bf\u304c\u4f59\u308a\u306b\u3082\u30ad\u30ec\u30a4\u306b\u5225\u308c\u3066\u3044\u308b\u5206\u3001Tree\u304c\u3046\u307e\u304f\u69cb\u7bc9\u3067\u304d\u306a\u304b\u3063\u305f\u6a21\u69d8\u3002\u3053\u308c\u306f\u5c11\u3057\u5b9f\u88c5\u3092\u898b\u76f4\u3057\u305f\u65b9\u304c\u826f\u3044\u304b\u3082\u3002\n\u305d\u308c\u306b\u3064\u3051\u3066\u3082\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\u300d\u306e\u5b89\u5b9a\u3057\u3066\u3044\u308b\u3053\u3068\u3088\u3002\u306a\u305c\u659c\u3081\u306b\u3057\u305f\u3060\u3051\u3067\u3053\u306e\u30c7\u30fc\u30bf\u3067100%\u305f\u305f\u304d\u51fa\u3059\u306e\u304b\u9006\u306b\u4e0d\u601d\u8b70\u3002\n\n# \u8003\u5bdf\n\n\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\u300d\u304c\u3053\u3053\u307e\u3067\u9ad8\u3044\u6027\u80fd\u3092\u793a\u3057\u305f\u306e\u306b\u306f\u3001\u4e00\u3064\u306b\u306f\u3084\u306f\u308a\u3001\u30c7\u30fc\u30bf\u306e\u7279\u6b8a\u6027\u3082\u304d\u3063\u3068\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\u5c11\u306a\u304f\u3068\u3082\u3001\u843d\u3061\u7740\u3044\u3066\u8003\u3048\u308b\u3068\u3069\u308c\u3082\u3001\u5404\u8aac\u660e\u5909\u6570\u306e\u5024\u57df\u3082\u5206\u6563\u3082\u540c\u3058\u3067\u3059\u304b\u3089\u3002\n\u305d\u308c\u3092\u3082\u3063\u3068\u5d29\u3057\u305f\u30c7\u30fc\u30bf\u3067\u8a66\u3057\u305f\u3089\u3001\u3082\u3046\u5c11\u3057\u7d50\u679c\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u300c\u6c7a\u5b9a\u6728\u300d\u306e\u65b9\u306f\u3001\u5b9f\u88c5\u6b21\u7b2c\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u4f4e\u30d0\u30a4\u30a2\u30b9\u9ad8\u30d0\u30ea\u30a2\u30f3\u30b9\u306a\u306e\u3067\u3001\u30d0\u30a4\u30a2\u30b9\u3092\u5f31\u3081\u308b\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u306b\u306f\u3042\u307e\u308a\u5411\u304b\u306a\u3044\u306e\u304b\u306a\u3001\u3068\u3002\u306a\u306e\u3067\u305b\u3044\u305c\u3044\u6df1\u30553\u307e\u3067\u3067\u8a66\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3067\u3082\u904e\u5b66\u7fd2\u6c17\u5473\u306b\u306a\u308b\u50be\u5411\u304c\u51fa\u307e\u3057\u305f\u3002\n\n\u3042\u3068\u4eca\u56de\u306f AdaBoost \u3067\u8a66\u3057\u307e\u3057\u305f\u304c\u3001\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\u300d\u3092\u6c7a\u5b9a\u6728\u306e\u5404Node\u306b\u63a1\u7528\u3057\u305f\u308a\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u305f RandomForest \u3092\u69cb\u7bc9\u3057\u305f\u3089\u3069\u3046\u306a\u308b\u3093\u3060\u308d\u3046\uff1f \u306a\u3069\u306a\u3069\u3001\u6642\u9593\u304c\u3042\u308c\u3070\u5f15\u304d\u7d9a\u304d\u5c11\u3057\u305a\u3064\u5b9f\u9a13\u3092\u91cd\u306d\u3066\u3044\u3053\u3046\u304b\u306a\u3001\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n# \u6700\u5f8c\u306b\n\n\u4eca\u56de\u5b9f\u9a13\u3057\u305f\u30b3\u30fc\u30c9\u30fb\u30c7\u30fc\u30bf\u7b49\u306f\u3001Gist \u306b\u4e0a\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u2192 [AdaBoostSample.ipynb](https://gist.github.com/antimon2/ef90d746828abcad07c5a3b4f0919ebe) \uff08nbviewer \u306b\u3088\u308b .ipynb \u30d5\u30a1\u30a4\u30eb\u8868\u793a\uff1a [AdaBoostSample.ipynb](http://nbviewer.jupyter.org/gist/antimon2/ef90d746828abcad07c5a3b4f0919ebe/AdaBoostSample.ipynb)\u3001[AdaBoostSample2.ipynb](http://nbviewer.jupyter.org/gist/antimon2/ef90d746828abcad07c5a3b4f0919ebe/AdaBoostSample2.ipynb)\u3001[AdaBoostSample3.ipynb](http://nbviewer.jupyter.org/gist/antimon2/ef90d746828abcad07c5a3b4f0919ebe/AdaBoostSample3.ipynb)\uff09\n\u7701\u7565\u3057\u305f\u30b3\u30fc\u30c9\u3082\u5168\u3066\u8f09\u305b\u3066\u307e\u3059\u3057\u3001\u8ffd\u52a0\u306e\u5b9f\u9a13\u7b49\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3088\u308d\u3057\u3051\u308c\u3070\u3054\u610f\u898b\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3042\u3068\u3001\u6700\u5f8c\u306b\u4e0a\u3052\u308b\u53c2\u8003\u6587\u732e\uff08\u66f8\u7c4d\uff09\u4ee5\u5916\u3001\u8ad6\u6587\u7b49\u306f\u5168\u7136\u53c2\u7167\u3057\u3066\u307e\u305b\u3093\uff08\u601d\u3044\u3064\u304d\u3067\u5b9f\u9a13\u3057\u305f\u3060\u3051\uff09\u306a\u306e\u3067\u3001\u300c\u3059\u3067\u306b\u3053\u3093\u306a\u8ad6\u6587\u3042\u308b\u3088\u300d\u7b49\u306e\u60c5\u5831\u3082\u3042\u308a\u307e\u3057\u305f\u3089\u3069\u306a\u305f\u304b\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\u305d\u3082\u305d\u3082\u601d\u3044\u3064\u304d\u3067\u4eee\u3067\u300c\u659c\u3081\u306e\u6c7a\u5b9a\u682a\uff08Beveled Decision Stump\uff09\u300d\u306a\u3093\u3066\u9020\u8a9e\u3057\u307e\u3057\u305f\u304c\u3001\u3082\u3057\u65e2\u306b\u77e5\u3089\u308c\u3066\u3044\u3066\u6b63\u5f0f\u540d\u79f0\u3068\u304b\u3042\u308c\u3070\u2026(^-^;\n\n\u660e\u65e5\u306f\u3001 @awakia \u3055\u3093\u306b\u3088\u308b\u8a18\u4e8b\u306e\u4e88\u5b9a\u3067\u3059\u3002\u304a\u697d\u3057\u307f\u306b\uff01\n\n# \u53c2\u8003\u6587\u732e\n\n+ [\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u3068\u6a5f\u68b0\u5b66\u7fd2 \u4e0b](https://pub.maruzen.co.jp/book_magazine/book_data/search/9784621061244.html) \u4e38\u5584\u51fa\u7248 \n+ [\u30a4\u30e9\u30b9\u30c8\u3067\u5b66\u3076\u6a5f\u68b0\u5b66\u7fd2 \u6700\u5c0f\u4e8c\u4e57\u6cd5\u306b\u3088\u308b\u8b58\u5225\u30e2\u30c7\u30eb\u5b66\u7fd2\u3092\u4e2d\u5fc3\u306b](https://www.amazon.co.jp/dp/4061538217) \u8b1b\u8ac7\u793e\n", "tags": ["MachineLearning", "\u6a5f\u68b0\u5b66\u7fd2", "Julia"]}