{"context": "\n\n\u6982\u8981\n\u300cLambda & CloudWatchEvents & Slack\u3067 \u9577\u671f\u7684\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u3044IAM\u30e6\u30fc\u30b6\u3092\u691c\u77e5\u30fb\u901a\u77e5\u3059\u308b\u300d\u306e\u7b2c\u4e8c\u5f3e\u3068\u3057\u3066\u3001AccessKey\u306e\u5229\u7528\u72b6\u6cc1\u3092\u8abf\u3079\u3066\u3001\u9577\u671f\u7684\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u304c\u3042\u3063\u305f\u3089\u3001Slack\u306b\u901a\u77e5\u3067\u304d\u308bServerless\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u5171\u6709\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u3082\u305d\u3082\u4f55\u3067\u3053\u308c\u3092\u3084\u308a\u305f\u3044\u306e\u304b\n\u3000AWS\u3092\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u65b9\uff08\u7279\u306bAWS\u3092\u793e\u5185\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u65b9\uff09\u304c\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001AccessKey\u3092\u3084\u305f\u3089\u306b\u4f5c\u3089\u308c\u3066\u3001\u653e\u7f6e\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3000\u81ea\u5206\u306e\u5834\u5408\u3067\u3059\u3068\u3001\u5546\u7528\u76ee\u7684\u3067\u306eAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u307e\u3060\u307e\u3057\u3067\u3059\u304c\u3001\u691c\u8a3c\u76ee\u7684\u3067\u306eAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u306f,\n\u305f\u304f\u3055\u3093\u306eAccessKey\u304c\u4f5c\u3089\u308c\u3066\u3044\u3066\u3001\u9577\u671f\u7684\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\n\u3000AccessKey\u3092\u6f0f\u6d29\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u5225\u306b\u3044\u3044\u3067\u3057\u3087\u3046\u3068\u3044\u3046\u8003\u3048\u65b9\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u4e71\u7acb\u3057\u3066\u3044\u308bAccessKey\u3092\u898b\u305f\u3089\u3001\u3084\u3063\u3071\u308a\u3069\u3046\u3057\u3066\u3082\u5c11\u3057\u6c17\u6301\u3061\u304c\u60aa\u3044\u306a\u3068\u611f\u3058\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u4e00\u3005\u624b\u52d5\u3067AccessKey\u306e\u5229\u7528\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u3066\u3001\u6574\u7406\u3059\u308b\u306e\u3082\u6c17\u304c\u9060\u304f\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u9577\u671f\u7684\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u3092\u691c\u77e5\u30fb\u901a\u77e5\u3059\u308bLambda\u3092\u4f5c\u308b\u3053\u3068\u306b\u81f3\u308a\u307e\u3057\u305f\u3002\n\n\u4f7f\u3048\u308b\u307e\u3067\u306e\u6d41\u308c\u3068\u5404\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u5b9a\n\u524d\u56de\u66f8\u3044\u305f\u3082\u306e\n\u3000\u2193\n\u300cLambda & CloudWatchEvents & Slack\u3067 \u9577\u671f\u7684\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u3044IAM\u30e6\u30fc\u30b6\u3092\u691c\u77e5\u30fb\u901a\u77e5\u3059\u308b\u300d\n\u3068\u307b\u307c\u307b\u307c\u540c\u3058\u3067\u3059\u306e\u3067\u3001\u9055\u3046\u3068\u3053\u308d\uff08\u30b3\u30fc\u30c9\u90e8\u5206\uff09\u3060\u3051\u3092\u5171\u6709\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u300160\u65e5\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044AccessKey\u3092\u691c\u77e5\u3057\u3001\u901a\u77e5\u3059\u308b\u4f8b\u3067\u3059\u3002\n\u65e5\u6570\u306b\u95a2\u3057\u3066\u306f\u3001\u5909\u6570Days\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u3002\n\nlambda_function.py\n# -*- coding: utf-8 -*-\nfrom __future__ import print_function\nimport boto3\nimport time\nimport calendar\nimport slackweb\n\nprint('Loading function')\n\n# Webhook\nSlack = slackweb.Slack(url=\"https://hooks.slack.com/services/T0HTZK5S4/B0***************w\")\n\nclient = boto3.client('iam')\n\n# \u65e5\u6570\u3092\u6307\u5b9a\nDays = 60\nInterval = 60 * 60 * 24 * Days\n\ndef add_info(Users,Attachments):\n\n    for User in Users:\n        Name = User[\"UserName\"]\n        AccessKeyId = User[\"AccessKeyId\"]\n        LastUsed = str(User[\"LastUsed\"])\n        Text = \"```AccessKeyId: \" + AccessKeyId + \"\\n\" + \\\n                \"UserName: \" + Name + \"\\n\" + \\\n                \"LastUsed: \" + LastUsed + \"```\"\n\n        Attachment = {\n            \"text\": Text,\n            \"color\": \"danger\",\n            \"mrkdwn_in\": [\"text\"]\n        }\n        Attachments.append(Attachment)\n\ndef lambda_handler(event, context):\n    # Slack Message Attachments\n    Attachments = []\n\n    # \u6307\u5b9a\u65e5\u6570\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u306e\u60c5\u5831\n    AccessKeyInfo = []\n\n    # \u4f5c\u6210\u3055\u308c\u3066\u304b\u3089\u3001\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u306e\u60c5\u5831\n    UnusedAccessKeyInfo = []\n\n    # \u73fe\u5728\u306e\u6642\u523b\u3092\u53d6\u5f97\n    Now = time.time()\n    print(Now)\n\n    UsersList = client.list_users()\n    for User in UsersList[\"Users\"]:\n        AccessKeysList = client.list_access_keys(\n            UserName = User['UserName']\n        )\n\n        for AccessKeyMetadata in AccessKeysList[\"AccessKeyMetadata\"]:\n            print(AccessKeyMetadata[\"AccessKeyId\"])\n            Key = client.get_access_key_last_used(\n                AccessKeyId = AccessKeyMetadata[\"AccessKeyId\"]\n            )\n\n            # Key\u304c\u5229\u7528\u3055\u308c\u305f\u5834\u5408\n            if str(Key[\"AccessKeyLastUsed\"].get(\"LastUsedDate\")) != 'None':\n\n                # Key\u304c\u6700\u5f8c\u306b\u5229\u7528\u3055\u308c\u305f\u6642\u9593(Unix Time)\n                AccessKeyLastUsedUnixTime = calendar.timegm(Key['AccessKeyLastUsed']['LastUsedDate'].utctimetuple())\n                print(AccessKeyLastUsedUnixTime)\n\n                if Now - AccessKeyLastUsedUnixTime > Interval:\n                    Info = {\n                        \"UserName\" : User['UserName'],\n                        \"AccessKeyId\" : AccessKeyMetadata[\"AccessKeyId\"],\n                        \"LastUsed\" : Key['AccessKeyLastUsed']['LastUsedDate'],\n                    }\n                    AccessKeyInfo.append(Info)\n\n            # Key\u304c\u672a\u4f7f\u7528\u306e\u5834\u5408\n            else:\n                Info = {\n                    \"UserName\" : User['UserName'],\n                    \"AccessKeyId\" : AccessKeyMetadata[\"AccessKeyId\"],\n                    \"LastUsed\" : \"Null\"\n                }\n                UnusedAccessKeyInfo.append(Info)\n                print(str(Key[\"AccessKeyLastUsed\"].get(\"LastUsedDate\")))\n\n    # \u6307\u5b9a\u65e5\u6570\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u304c\u306a\u3044\u5834\u5408\n    if len(AccessKeyInfo) == 0 and len(UnusedAccessKeyInfo) == 0 :\n        Attachments = [\n            {\n                \"pretext\": \"AccessKey\u306e\u68da\u5378\u3057\u3092\u884c\u3044\u307e\u3057\u305f\u3001\u554f\u984c\u304c\u3042\u308a\u307e\u305b\u3093.\",\n            }\n        ]\n\n    # \u6307\u5b9a\u65e5\u6570\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u304c\u3042\u308b\u5834\u5408\n    else :\n        Attachments = [\n            {\n                \"pretext\": \"AccessKey\u306e\u68da\u5378\u3057\u3092\u884c\u3044\u307e\u3057\u305f.\\n\" + \\\n                            str(Days) + \"\u65e5\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u304c\u3042\u308a\u307e\u3059!\",\n            }\n        ]\n\n        print(str(Days) + \"\u65e5\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u306f\u4e0b\u8a18\u306e\u901a\u308a\")\n        print(len(AccessKeyInfo))\n        add_info(AccessKeyInfo,Attachments)\n\n        print(\"\u4f5c\u6210\u3055\u308c\u3066\u304b\u3089\u3001\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u306f\u4e0b\u8a18\u306e\u901a\u308a\")\n        print(len(UnusedAccessKeyInfo))\n        add_info(UnusedAccessKeyInfo,Attachments)\n\n    # Slack\u306b\u9001\u4fe1\n    Slack.notify(attachments = Attachments)\n\n\n\n\u3000\n\n\u5b9f\u884c\u7d50\u679c\n\u3000\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092Lambda\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001Slack\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6307\u5b9a\u3057\u305fSlack\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u306b\u9001\u4fe1\u3055\u308c\u307e\u3059\u3002\n\n\n\u6700\u5f8c\n\u3000python\u306e\u5b66\u7fd2\u3082\u517c\u306d\u3066\u3001\u4f5c\u3063\u3066\u307f\u305f\u3082\u306e\u3067\u3059\u306e\u3067\u3001\u30b3\u30fc\u30c9\u81ea\u4f53\u304c\u7dba\u9e97\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3059\u3053\u3057\u7686\u3055\u3093\u306b\u5171\u6709\u3067\u304d\u305f\u3089\u3044\u3044\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\u500b\u4eba\u7684\u306b\u306f\u3001Lambda\u3084API Gateway\u304c\u51fa\u3066\u304b\u3089\u3001Serverless\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u304bChatOps\u3068\u304b\u306b\u7d50\u69cb\u8208\u5473\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u4eca\u5f8c\u3082\u3069\u3093\u3069\u3093\u5171\u6709\u3057\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u3002\n# \u6982\u8981\n [\u300cLambda & CloudWatchEvents & Slack\u3067 \u9577\u671f\u7684\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u3044IAM\u30e6\u30fc\u30b6\u3092\u691c\u77e5\u30fb\u901a\u77e5\u3059\u308b\u300d](21737cc258cf4268b176)\u306e\u7b2c\u4e8c\u5f3e\u3068\u3057\u3066\u3001AccessKey\u306e\u5229\u7528\u72b6\u6cc1\u3092\u8abf\u3079\u3066\u3001\u9577\u671f\u7684\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u304c\u3042\u3063\u305f\u3089\u3001Slack\u306b\u901a\u77e5\u3067\u304d\u308bServerless\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u5171\u6709\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n# \u305d\u3082\u305d\u3082\u4f55\u3067\u3053\u308c\u3092\u3084\u308a\u305f\u3044\u306e\u304b\n\u3000AWS\u3092\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u65b9\uff08\u7279\u306bAWS\u3092\u793e\u5185\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u65b9\uff09\u304c\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001AccessKey\u3092\u3084\u305f\u3089\u306b\u4f5c\u3089\u308c\u3066\u3001\u653e\u7f6e\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3000\u81ea\u5206\u306e\u5834\u5408\u3067\u3059\u3068\u3001\u5546\u7528\u76ee\u7684\u3067\u306eAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u307e\u3060\u307e\u3057\u3067\u3059\u304c\u3001\u691c\u8a3c\u76ee\u7684\u3067\u306eAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u306f,\n\u305f\u304f\u3055\u3093\u306eAccessKey\u304c\u4f5c\u3089\u308c\u3066\u3044\u3066\u3001\u9577\u671f\u7684\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\n\u3000AccessKey\u3092\u6f0f\u6d29\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u5225\u306b\u3044\u3044\u3067\u3057\u3087\u3046\u3068\u3044\u3046\u8003\u3048\u65b9\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u4e71\u7acb\u3057\u3066\u3044\u308bAccessKey\u3092\u898b\u305f\u3089\u3001\u3084\u3063\u3071\u308a\u3069\u3046\u3057\u3066\u3082\u5c11\u3057\u6c17\u6301\u3061\u304c\u60aa\u3044\u306a\u3068\u611f\u3058\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u4e00\u3005\u624b\u52d5\u3067AccessKey\u306e\u5229\u7528\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u3066\u3001\u6574\u7406\u3059\u308b\u306e\u3082\u6c17\u304c\u9060\u304f\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u9577\u671f\u7684\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u3092\u691c\u77e5\u30fb\u901a\u77e5\u3059\u308bLambda\u3092\u4f5c\u308b\u3053\u3068\u306b\u81f3\u308a\u307e\u3057\u305f\u3002\n\n# \u4f7f\u3048\u308b\u307e\u3067\u306e\u6d41\u308c\u3068\u5404\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u5b9a\n  \u524d\u56de\u66f8\u3044\u305f\u3082\u306e\n\u3000\u2193\n[\u300cLambda & CloudWatchEvents & Slack\u3067 \u9577\u671f\u7684\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u3044IAM\u30e6\u30fc\u30b6\u3092\u691c\u77e5\u30fb\u901a\u77e5\u3059\u308b\u300d](21737cc258cf4268b176)\n\u3068\u307b\u307c\u307b\u307c\u540c\u3058\u3067\u3059\u306e\u3067\u3001\u9055\u3046\u3068\u3053\u308d\uff08\u30b3\u30fc\u30c9\u90e8\u5206\uff09\u3060\u3051\u3092\u5171\u6709\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u300160\u65e5\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044AccessKey\u3092\u691c\u77e5\u3057\u3001\u901a\u77e5\u3059\u308b\u4f8b\u3067\u3059\u3002\n\u65e5\u6570\u306b\u95a2\u3057\u3066\u306f\u3001\u5909\u6570Days\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u3002\n\n```lambda_function.py\n# -*- coding: utf-8 -*-\nfrom __future__ import print_function\nimport boto3\nimport time\nimport calendar\nimport slackweb\n\nprint('Loading function')\n\n# Webhook\nSlack = slackweb.Slack(url=\"https://hooks.slack.com/services/T0HTZK5S4/B0***************w\")\n\nclient = boto3.client('iam')\n\n# \u65e5\u6570\u3092\u6307\u5b9a\nDays = 60\nInterval = 60 * 60 * 24 * Days\n\ndef add_info(Users,Attachments):\n\n    for User in Users:\n        Name = User[\"UserName\"]\n        AccessKeyId = User[\"AccessKeyId\"]\n        LastUsed = str(User[\"LastUsed\"])\n        Text = \"```AccessKeyId: \" + AccessKeyId + \"\\n\" + \\\n                \"UserName: \" + Name + \"\\n\" + \\\n                \"LastUsed: \" + LastUsed + \"```\"\n\n        Attachment = {\n            \"text\": Text,\n            \"color\": \"danger\",\n            \"mrkdwn_in\": [\"text\"]\n        }\n        Attachments.append(Attachment)\n\ndef lambda_handler(event, context):\n    # Slack Message Attachments\n    Attachments = []\n\n    # \u6307\u5b9a\u65e5\u6570\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u306e\u60c5\u5831\n    AccessKeyInfo = []\n\n    # \u4f5c\u6210\u3055\u308c\u3066\u304b\u3089\u3001\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u306e\u60c5\u5831\n    UnusedAccessKeyInfo = []\n\n    # \u73fe\u5728\u306e\u6642\u523b\u3092\u53d6\u5f97\n    Now = time.time()\n    print(Now)\n\n    UsersList = client.list_users()\n    for User in UsersList[\"Users\"]:\n        AccessKeysList = client.list_access_keys(\n            UserName = User['UserName']\n        )\n\n        for AccessKeyMetadata in AccessKeysList[\"AccessKeyMetadata\"]:\n            print(AccessKeyMetadata[\"AccessKeyId\"])\n            Key = client.get_access_key_last_used(\n                AccessKeyId = AccessKeyMetadata[\"AccessKeyId\"]\n            )\n\n            # Key\u304c\u5229\u7528\u3055\u308c\u305f\u5834\u5408\n            if str(Key[\"AccessKeyLastUsed\"].get(\"LastUsedDate\")) != 'None':\n\n                # Key\u304c\u6700\u5f8c\u306b\u5229\u7528\u3055\u308c\u305f\u6642\u9593(Unix Time)\n                AccessKeyLastUsedUnixTime = calendar.timegm(Key['AccessKeyLastUsed']['LastUsedDate'].utctimetuple())\n                print(AccessKeyLastUsedUnixTime)\n\n                if Now - AccessKeyLastUsedUnixTime > Interval:\n                    Info = {\n                        \"UserName\" : User['UserName'],\n                        \"AccessKeyId\" : AccessKeyMetadata[\"AccessKeyId\"],\n                        \"LastUsed\" : Key['AccessKeyLastUsed']['LastUsedDate'],\n                    }\n                    AccessKeyInfo.append(Info)\n\n            # Key\u304c\u672a\u4f7f\u7528\u306e\u5834\u5408\n            else:\n                Info = {\n                    \"UserName\" : User['UserName'],\n                    \"AccessKeyId\" : AccessKeyMetadata[\"AccessKeyId\"],\n                    \"LastUsed\" : \"Null\"\n                }\n                UnusedAccessKeyInfo.append(Info)\n                print(str(Key[\"AccessKeyLastUsed\"].get(\"LastUsedDate\")))\n\n    # \u6307\u5b9a\u65e5\u6570\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u304c\u306a\u3044\u5834\u5408\n    if len(AccessKeyInfo) == 0 and len(UnusedAccessKeyInfo) == 0 :\n        Attachments = [\n            {\n                \"pretext\": \"AccessKey\u306e\u68da\u5378\u3057\u3092\u884c\u3044\u307e\u3057\u305f\u3001\u554f\u984c\u304c\u3042\u308a\u307e\u305b\u3093.\",\n            }\n        ]\n\n    # \u6307\u5b9a\u65e5\u6570\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u304c\u3042\u308b\u5834\u5408\n    else :\n        Attachments = [\n            {\n                \"pretext\": \"AccessKey\u306e\u68da\u5378\u3057\u3092\u884c\u3044\u307e\u3057\u305f.\\n\" + \\\n                            str(Days) + \"\u65e5\u4ee5\u4e0a\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u304c\u3042\u308a\u307e\u3059!\",\n            }\n        ]\n\n        print(str(Days) + \"\u65e5\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u306f\u4e0b\u8a18\u306e\u901a\u308a\")\n        print(len(AccessKeyInfo))\n        add_info(AccessKeyInfo,Attachments)\n\n        print(\"\u4f5c\u6210\u3055\u308c\u3066\u304b\u3089\u3001\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044AccessKey\u306f\u4e0b\u8a18\u306e\u901a\u308a\")\n        print(len(UnusedAccessKeyInfo))\n        add_info(UnusedAccessKeyInfo,Attachments)\n\n    # Slack\u306b\u9001\u4fe1\n    Slack.notify(attachments = Attachments)\n\n```\n\u3000\n#\u5b9f\u884c\u7d50\u679c\n\n\u3000\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092Lambda\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001Slack\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6307\u5b9a\u3057\u305fSlack\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u306b\u9001\u4fe1\u3055\u308c\u307e\u3059\u3002\n<img width=\"1476\" alt=\"key\u306e\u68da\u5378\u3057.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/117156/b1bdc222-941a-9e0f-3b58-3f87463a3552.jpeg\">\n\n#\u6700\u5f8c\n\u3000python\u306e\u5b66\u7fd2\u3082\u517c\u306d\u3066\u3001\u4f5c\u3063\u3066\u307f\u305f\u3082\u306e\u3067\u3059\u306e\u3067\u3001\u30b3\u30fc\u30c9\u81ea\u4f53\u304c\u7dba\u9e97\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3059\u3053\u3057\u7686\u3055\u3093\u306b\u5171\u6709\u3067\u304d\u305f\u3089\u3044\u3044\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n  \u500b\u4eba\u7684\u306b\u306f\u3001Lambda\u3084API Gateway\u304c\u51fa\u3066\u304b\u3089\u3001Serverless\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u304bChatOps\u3068\u304b\u306b\u7d50\u69cb\u8208\u5473\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u4eca\u5f8c\u3082\u3069\u3093\u3069\u3093\u5171\u6709\u3057\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u3002\n\n\n", "tags": ["lambda", "Slack", "IAM", "CloudWatch"]}