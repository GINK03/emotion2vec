{"context": " More than 1 year has passed since last update.\n\n\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u5206\u304b\u308b\u3053\u3068\n\nprunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30c7\u30b6\u30a4\u30f3\u30b3\u30f3\u30bb\u30d7\u30c8\nprunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u66f8\u304d\u65b9\nCake\u3084\u4ed6\u306eCLI\u3068\u306e\u30b3\u30e9\u30dc\n\n\nprunt\u306e\u30c7\u30b6\u30a4\u30f3\u30b3\u30f3\u30bb\u30d7\u30c8\nprunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\n\na) \u914d\u5217\u3092\u634c\u304f\u95a2\u6570\u3001\u307e\u305f\u306f\nb) (a) \u3092\u8fd4\u3059\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\n\n\u3067\u3042\u308b\u3002\n\nprunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u66f8\u304d\u65b9\n\u4f8b\u3048\u3070 .coffee \u3060\u3051\u3092\u623b\u3059\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u66f8\u304d\u307e\u3059\u3002\nprunt.read('src/*')\n  .then(coffeeFilter) # <== \u3053\u308c\u3092\u304b\u304d\u307e\u3059\n  .then(compileCoffee)\n\n\n\u30d1\u30bf\u30fc\u30f3(a): \u914d\u5217\u3092\u634c\u304f\u95a2\u6570\npath = require 'path'\n\ncoffeeFilter = (files) ->\n  # files = [file1, file2, file3... ]\n  files.filter (file) ->\n    path.extname(file.filename) is '.coffee'\n\n\u3053\u308c\u3092\u62e1\u5927\u3057\u3066\u3069\u3093\u306a\u62e1\u5f35\u5b50\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u69d8\u306b\u3057\u307e\u3059\u3068\n\n\u30d1\u30bf\u30fc\u30f3(b): (a) \u3092\u8fd4\u3059\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\npath = require 'path'\n\nfilter = (extension) ->\n  (files) ->\n    files.filter (file) ->\n      path.extname(file.filename) is extension\n\n\u4f7f\u7528\u4f8b\ncoffeeFilter = filter '.coffee'\n\nprunt.read('src/*')\n  .then(coffeeFilter) # <== \u3053\u308c\u3092\u304b\u304d\u307e\u3059\n  .then(compileCoffee)\n\n\nprunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u66f8\u304d\u65b9 +\u03b1\n\u4ee5\u4e0a\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u5206\u304b\u308b\u69d8\u306bprunt\u3067\u306f\u30d5\u30a1\u30a4\u30eb\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u62bd\u8c61\u5316\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u30af\u30e9\u30b9\n\u4e00\u3064\u306e\u30d5\u30a1\u30a4\u30eb\uff08\u6b63\u3057\u304f\u306f\u30d5\u30a1\u30a4\u30eb\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff09\u306b\u306ffilename\u3001dirname\u3001content\u3001isDirty\u3068\u56db\u3064\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u6709\u308a\u307e\u3059\u3002isDirty\u306f\u30d5\u30a1\u30a4\u30eb\u304c\u30c7\u30a3\u30b9\u30af\u3068\u540c\u671f\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u8868\u3059\u30d0\u30a4\u30ca\u30ea\u30d5\u30e9\u30c3\u30b0\u3067\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5909\u66f4\u3059\u308c\u3070\u81ea\u52d5\u7684\u306b\u65d7\u304c\u7acb\u3061\u4e0a\u304c\u308a\u307e\u3059\u3002\u305d\u306e\u4ed6\u306f\u8aac\u660e\u3059\u308b\u5fc5\u8981\u304c\u6709\u308a\u307e\u305b\u3093\u306e\u3067\u7701\u7565\u3055\u305b\u3066\u6234\u304d\u307e\u3059\u3002\nprunt.read('src/*.coffee')\n  .then (files) ->\n    files.forEach (file) ->\n      file.isDirty is true # false\n      file.content = 'foo'\n      file.isDirty is true # true\n    return files\n\n\u53c8\u3001\u30d5\u30a1\u30a4\u30eb\u306b\u306ffile.rename()\u3068file.chdir()\u3001\u4e8c\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u4f7f\u3046\u5fc5\u8981\u6027\u306f\u5168\u304f\u7121\u3044\u304c\u3001\u304a\u5f79\u306b\u7acb\u3066\u308c\u3070\u5b09\u3057\u3044\u9650\u308a\u3067\u3059\u3002\n\n\u975e\u540c\u671f\u51e6\u7406\n\u3067\u306fless\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002less\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u7d50\u679c\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nless = require 'less'\nless.render file.content, (result) ->\n  file.content = result\n\n\u3067\u306fQ.js\u3092\u4f7f\u3063\u3066promise\u3092\u751f\u6210\u3057\u307e\u3057\u3087\u3046\u3002\nQ = require 'q'\n\nexports.less = (options = {}) ->\n  (files) ->\n    queue = files.map (file) ->\n      Q.nfcall(less.render, file.content) # <= returns a promise\n        .then (css) ->\n          # promise \u3067\u3059\u304b\u3089\u7d50\u679c\u3092\u3044\u3058\u308b\u306e\u3082\u7c21\u5358\u3067\u3059\u3002\n          file.content = css\n          file.rename file.filename.replace '.less', '.css'\n    return Q.all(queue)\n\npromise\u3092\u4f7f\u3063\u3066\u3044\u308b\u3060\u3051\u306b\u975e\u540c\u671f\u51e6\u7406\u306f\u7c21\u5358\u3067\u3059\u3001\u305d\u306e\u7c21\u5358\u3055\u304c\u58f2\u308a\u3067\u3059\u3002\n\nCake\u3084\u4ed6\u306eCLI\u3068\u306e\u30b3\u30e9\u30dc\n\u4ee5\u4e0b\u306e\u4e09\u3064\u3060\u3051\u7d39\u4ecb\u3055\u305b\u3066\u6234\u304d\u307e\u3059\u3002\n\nCake\nOptimist\nCommander\n\n\nCake\n\ncake\u306fcoffee-script\u3068\u5171\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3067\u3059\u3002Cakefile\u306fMakefile\u306ecoffee\u7248\u3067\u3059\u3002\n\nCakefile\n{read} = prunt = require './index'\n\noption '-o', '--output [DIR]', 'directory for compiled code'\n\ntask 'build', 'build prunt', (options) ->\n\n  concat = prunt.concat {filename: 'index.coffee', dirname: options.output}\n  coffee = prunt.coffee() # use default options\n  write = prunt.write() # use default options\n\n  read('src/*.coffee')\n    .then(concat)\n    .then(coffee)\n    .done(write)\n\n\ncake\u3092\u5b9f\u884c\u3059\u308b\u3068\u30bf\u30b9\u30af\u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n$ cake\nCakefile defines the following tasks:\n\ncake build                # build prunt\n\n  -o, --output       directory for compiled code\n\n\nsubstack/node-optimist\n\nbrowserify\u306e\u4e2d\u306e\u4eba\u304c\u4f5c\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\n\nbuild.js\n#!/usr/bin/env node\nvar argv, coffee, concat, write;\n\nargv = require('optimist')\n  .usage('prunt build tool.\\nUsage: $0')\n  .demand('b')\n  .alias('b', 'build')\n  .describe('b', 'build prunt')\n  .argv;\n\nprunt = require('./index');\n\nif (argv.build) {\n\n  concat = prunt.concat({\n    filename: 'index.coffee',\n    dirname: '.'\n  });\n\n  coffee = prunt.coffee();\n  write = prunt.write();\n\n  read('src/*.coffee')\n    .then(concat)\n    .then(coffee)\n    .done(write);\n}\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n$ chmod +x build.js\n$ build.js\nprunt build tool.\nUsage: node ./test.js\n\nOptions:\n  -b, --build  build prunt  [required]\n\nMissing required arguments: b\n\n\nvisionmedia/commander.js\n\nexpress\u3068mocha\u306e\u4e2d\u306e\u4eba\u304c\u4f5c\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\n\nbuild.js\n#!/usr/bin/env node\nvar coffee, concat, program, prunt, write;\n\nprogram = require('commander')\n  .version('0.1.1')\n  .option('-b, --build', 'build prunt')\n  .parse(process.argv);\n\nprunt = require('prunt');\n\nif (program.build) {\n  concat = prunt.concat({\n    filename: 'index.coffee',\n    dirname: '.'\n  });\n  coffee = prunt.coffee();\n  write = prunt.write();\n  read('src/*.coffee')\n    .then(concat)\n    .then(coffee)\n    .done(write);\n}\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n$ chmod +x build.js\n$ build.js --help\n\n  Usage: test.js [options]\n\n  Options:\n\n    -h, --help     output usage information\n    -V, --version  output the version number\n    -b, --build    build prunt\n\n\n### \u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u5206\u304b\u308b\u3053\u3068\n\n* prunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30c7\u30b6\u30a4\u30f3\u30b3\u30f3\u30bb\u30d7\u30c8\n* prunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u66f8\u304d\u65b9\n* Cake\u3084\u4ed6\u306eCLI\u3068\u306e\u30b3\u30e9\u30dc\n\n## prunt\u306e\u30c7\u30b6\u30a4\u30f3\u30b3\u30f3\u30bb\u30d7\u30c8\n\nprunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\n\n* a) \u914d\u5217\u3092\u634c\u304f\u95a2\u6570\u3001\u307e\u305f\u306f\n* b) (a) \u3092\u8fd4\u3059\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\n\n\u3067\u3042\u308b\u3002\n\n## prunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u66f8\u304d\u65b9\n\n\u4f8b\u3048\u3070 `.coffee` \u3060\u3051\u3092\u623b\u3059\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u66f8\u304d\u307e\u3059\u3002\n\n    prunt.read('src/*')\n      .then(coffeeFilter) # <== \u3053\u308c\u3092\u304b\u304d\u307e\u3059\n      .then(compileCoffee)\n\n### \u30d1\u30bf\u30fc\u30f3(a): \u914d\u5217\u3092\u634c\u304f\u95a2\u6570\n\n    path = require 'path'\n\n    coffeeFilter = (files) ->\n      # files = [file1, file2, file3... ]\n      files.filter (file) ->\n        path.extname(file.filename) is '.coffee'\n\n\u3053\u308c\u3092\u62e1\u5927\u3057\u3066\u3069\u3093\u306a\u62e1\u5f35\u5b50\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u69d8\u306b\u3057\u307e\u3059\u3068\n\n### \u30d1\u30bf\u30fc\u30f3(b): (a) \u3092\u8fd4\u3059\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\n\n    path = require 'path'\n\n    filter = (extension) ->\n      (files) ->\n        files.filter (file) ->\n          path.extname(file.filename) is extension\n\n\u4f7f\u7528\u4f8b\n\n    coffeeFilter = filter '.coffee'\n\n    prunt.read('src/*')\n      .then(coffeeFilter) # <== \u3053\u308c\u3092\u304b\u304d\u307e\u3059\n      .then(compileCoffee)\n\n## prunt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u66f8\u304d\u65b9 +\u03b1\n\n\u4ee5\u4e0a\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u5206\u304b\u308b\u69d8\u306bprunt\u3067\u306f\u30d5\u30a1\u30a4\u30eb\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u62bd\u8c61\u5316\u3057\u3066\u3044\u307e\u3059\u3002\n\n### \u30d5\u30a1\u30a4\u30eb\u30af\u30e9\u30b9\n\n\u4e00\u3064\u306e\u30d5\u30a1\u30a4\u30eb\uff08\u6b63\u3057\u304f\u306f\u30d5\u30a1\u30a4\u30eb\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff09\u306b\u306f`filename`\u3001`dirname`\u3001`content`\u3001`isDirty`\u3068\u56db\u3064\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u6709\u308a\u307e\u3059\u3002`isDirty`\u306f\u30d5\u30a1\u30a4\u30eb\u304c\u30c7\u30a3\u30b9\u30af\u3068\u540c\u671f\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u8868\u3059\u30d0\u30a4\u30ca\u30ea\u30d5\u30e9\u30c3\u30b0\u3067\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5909\u66f4\u3059\u308c\u3070\u81ea\u52d5\u7684\u306b\u65d7\u304c\u7acb\u3061\u4e0a\u304c\u308a\u307e\u3059\u3002\u305d\u306e\u4ed6\u306f\u8aac\u660e\u3059\u308b\u5fc5\u8981\u304c\u6709\u308a\u307e\u305b\u3093\u306e\u3067\u7701\u7565\u3055\u305b\u3066\u6234\u304d\u307e\u3059\u3002\n\n    prunt.read('src/*.coffee')\n      .then (files) ->\n        files.forEach (file) ->\n          file.isDirty is true # false\n          file.content = 'foo'\n          file.isDirty is true # true\n        return files\n\n\u53c8\u3001\u30d5\u30a1\u30a4\u30eb\u306b\u306f`file.rename()`\u3068`file.chdir()`\u3001\u4e8c\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u4f7f\u3046\u5fc5\u8981\u6027\u306f\u5168\u304f\u7121\u3044\u304c\u3001\u304a\u5f79\u306b\u7acb\u3066\u308c\u3070\u5b09\u3057\u3044\u9650\u308a\u3067\u3059\u3002\n\n### \u975e\u540c\u671f\u51e6\u7406\n\n\u3067\u306fless\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002less\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u7d50\u679c\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n    less = require 'less'\n    less.render file.content, (result) ->\n      file.content = result\n\n\u3067\u306f[Q.js](https://github.com/kriskowal/q#combination)\u3092\u4f7f\u3063\u3066promise\u3092\u751f\u6210\u3057\u307e\u3057\u3087\u3046\u3002\n\n    Q = require 'q'\n\n    exports.less = (options = {}) ->\n      (files) ->\n        queue = files.map (file) ->\n          Q.nfcall(less.render, file.content) # <= returns a promise\n            .then (css) ->\n              # promise \u3067\u3059\u304b\u3089\u7d50\u679c\u3092\u3044\u3058\u308b\u306e\u3082\u7c21\u5358\u3067\u3059\u3002\n              file.content = css\n              file.rename file.filename.replace '.less', '.css'\n        return Q.all(queue)\n\npromise\u3092\u4f7f\u3063\u3066\u3044\u308b\u3060\u3051\u306b\u975e\u540c\u671f\u51e6\u7406\u306f\u7c21\u5358\u3067\u3059\u3001**\u305d\u306e\u7c21\u5358\u3055\u304c\u58f2\u308a\u3067\u3059**\u3002\n\n## Cake\u3084\u4ed6\u306eCLI\u3068\u306e\u30b3\u30e9\u30dc\n\n\u4ee5\u4e0b\u306e\u4e09\u3064\u3060\u3051\u7d39\u4ecb\u3055\u305b\u3066\u6234\u304d\u307e\u3059\u3002\n\n* Cake\n* Optimist\n* Commander\n\n### [Cake](http://coffeescript.org/#cake)\ncake\u306fcoffee-script\u3068\u5171\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3067\u3059\u3002`Cakefile`\u306f`Makefile`\u306ecoffee\u7248\u3067\u3059\u3002\n\n```coffee-script:Cakefile\n{read} = prunt = require './index'\n\noption '-o', '--output [DIR]', 'directory for compiled code'\n\ntask 'build', 'build prunt', (options) ->\n\n  concat = prunt.concat {filename: 'index.coffee', dirname: options.output}\n  coffee = prunt.coffee() # use default options\n  write = prunt.write() # use default options\n\n  read('src/*.coffee')\n    .then(concat)\n    .then(coffee)\n    .done(write)\n```\n\n`cake`\u3092\u5b9f\u884c\u3059\u308b\u3068\u30bf\u30b9\u30af\u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```\n$ cake\nCakefile defines the following tasks:\n\ncake build                # build prunt\n\n  -o, --output       directory for compiled code\n```\n\n### substack/[node-optimist](https://github.com/substack/node-optimist)\nbrowserify\u306e\u4e2d\u306e\u4eba\u304c\u4f5c\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\n\n```JavaScript:build.js\n#!/usr/bin/env node\nvar argv, coffee, concat, write;\n\nargv = require('optimist')\n  .usage('prunt build tool.\\nUsage: $0')\n  .demand('b')\n  .alias('b', 'build')\n  .describe('b', 'build prunt')\n  .argv;\n\nprunt = require('./index');\n\nif (argv.build) {\n\n  concat = prunt.concat({\n    filename: 'index.coffee',\n    dirname: '.'\n  });\n\n  coffee = prunt.coffee();\n  write = prunt.write();\n\n  read('src/*.coffee')\n    .then(concat)\n    .then(coffee)\n    .done(write);\n}\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```\n$ chmod +x build.js\n$ build.js\nprunt build tool.\nUsage: node ./test.js\n\nOptions:\n  -b, --build  build prunt  [required]\n\nMissing required arguments: b\n```\n\n### visionmedia/[commander.js](https://github.com/visionmedia/commander.js/)\nexpress\u3068mocha\u306e\u4e2d\u306e\u4eba\u304c\u4f5c\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\n\n```JavaScript:build.js\n#!/usr/bin/env node\nvar coffee, concat, program, prunt, write;\n\nprogram = require('commander')\n  .version('0.1.1')\n  .option('-b, --build', 'build prunt')\n  .parse(process.argv);\n\nprunt = require('prunt');\n\nif (program.build) {\n  concat = prunt.concat({\n    filename: 'index.coffee',\n    dirname: '.'\n  });\n  coffee = prunt.coffee();\n  write = prunt.write();\n  read('src/*.coffee')\n    .then(concat)\n    .then(coffee)\n    .done(write);\n}\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```\n$ chmod +x build.js\n$ build.js --help\n\n  Usage: test.js [options]\n\n  Options:\n\n    -h, --help     output usage information\n    -V, --version  output the version number\n    -b, --build    build prunt\n```", "tags": ["JavaScript", "CoffeeScript", "grunt", "Build"]}