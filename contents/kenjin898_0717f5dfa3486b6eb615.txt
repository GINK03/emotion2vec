{"context": "\u4e00\u767a\u3067ELB\u306e\u72b6\u614b\u3092\u53d6\u5f97\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3076\u3089\u4e0b\u304c\u3063\u3066\u3044\u308bEC2\u306e\u8a73\u7d30\u60c5\u5831\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305fEC2\u53d6\u5f97\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u306e\u51fa\u529b\u7d50\u679c\n\u304b\u3089\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u308b\u306e\u3067\u3001\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\necho \"++++ ELB info ++++\" \n    aws --profile ${_title} --region ${_region} elb describe-load-balancers | jq -r '.LoadBalancerDescriptions[]|(\"ELB-DNSName : \" + .DNSName + \" ELBName : \" + .LoadBalancerName ,.Instances[])' | sed 's/{//g' | sed 's/}//g' | sed '/^$/d' | sed 's/\"InstanceId\"://' |\\\n    while read line\n    do\n      echo $line | grep \"^ELB-DNSName :\"\n   \u3000\u3000  \u3000 if [ $? = 1 ]\n  \u3000\u3000   \u3000 then\n              _host=`echo $line| cut -d '\"' -f 2`\n              _data=`grep $_host /home/ec2-user/.output/${_title}_ec2 | sed 's/ - /-/g' | awk -F\" \" '{if($6 == NULL){printf \"%-61s %-21s %-15s %-15s\\n\", $2,$3,$4,$5}else{printf \"%-38s %-21s %-15s %-15s %-15s\\n\", $2,$3,$4,$5,$6}}'`\n              _health=`aws --profile ${_title} --region ${_region} elb describe-instance-health --load-balancer-name $_elb_name --instances $_host | jq -r '.InstanceStates[]|(\"State : \" + .State)'`\n              echo -e \"\\t$line  ${_data}${_health} \"\n     \u3000\u3000\u3000 else\n              echo $line\n              _elb_name=`echo $line | awk '{print $6}'`\n      \u3000\u3000\u3000fi\n\n   \u3000\u3000 done\n\n\u51fa\u529b\u3055\u308c\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3076\u3089\u4e0b\u304c\u3063\u3066\u3044\u308b\u98a8\u306a\u611f\u3058\u3067\u51fa\u529b\u3055\u308c\u307e\u3059\n\uff08\u3082\u3063\u3068\u304b\u3063\u3053\u3044\u3044\u51fa\u529b\u306e\u4ed5\u65b9\u3092\u8003\u3048\u3066\u3044\u307e\u3059\u3002\u3002\u3002\uff09\n++++ ELB info ++++\nELB-DNSName : test-33333.ap-northeast-1.elb.amazonaws.com ELBName : test\n        \"i-000000000000000\"  test-test                         52.xxx.xxx.xxx        10.xxx.xxx.xxx    t2.xxx        running        State : InService\n\n\u4e00\u767a\u3067ELB\u306e\u72b6\u614b\u3092\u53d6\u5f97\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3076\u3089\u4e0b\u304c\u3063\u3066\u3044\u308bEC2\u306e\u8a73\u7d30\u60c5\u5831\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305fEC2\u53d6\u5f97\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u306e\u51fa\u529b\u7d50\u679c\n\u304b\u3089\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u308b\u306e\u3067\u3001\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\n\n```\necho \"++++ ELB info ++++\" \n    aws --profile ${_title} --region ${_region} elb describe-load-balancers | jq -r '.LoadBalancerDescriptions[]|(\"ELB-DNSName : \" + .DNSName + \" ELBName : \" + .LoadBalancerName ,.Instances[])' | sed 's/{//g' | sed 's/}//g' | sed '/^$/d' | sed 's/\"InstanceId\"://' |\\\n    while read line\n    do\n      echo $line | grep \"^ELB-DNSName :\"\n   \u3000\u3000  \u3000 if [ $? = 1 ]\n  \u3000\u3000   \u3000 then\n              _host=`echo $line| cut -d '\"' -f 2`\n              _data=`grep $_host /home/ec2-user/.output/${_title}_ec2 | sed 's/ - /-/g' | awk -F\" \" '{if($6 == NULL){printf \"%-61s %-21s %-15s %-15s\\n\", $2,$3,$4,$5}else{printf \"%-38s %-21s %-15s %-15s %-15s\\n\", $2,$3,$4,$5,$6}}'`\n              _health=`aws --profile ${_title} --region ${_region} elb describe-instance-health --load-balancer-name $_elb_name --instances $_host | jq -r '.InstanceStates[]|(\"State : \" + .State)'`\n              echo -e \"\\t$line  ${_data}${_health} \"\n     \u3000\u3000\u3000 else\n              echo $line\n              _elb_name=`echo $line | awk '{print $6}'`\n      \u3000\u3000\u3000fi\n\n   \u3000\u3000 done\n```\n\n\u51fa\u529b\u3055\u308c\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3076\u3089\u4e0b\u304c\u3063\u3066\u3044\u308b\u98a8\u306a\u611f\u3058\u3067\u51fa\u529b\u3055\u308c\u307e\u3059\n\uff08\u3082\u3063\u3068\u304b\u3063\u3053\u3044\u3044\u51fa\u529b\u306e\u4ed5\u65b9\u3092\u8003\u3048\u3066\u3044\u307e\u3059\u3002\u3002\u3002\uff09\n\n```\n++++ ELB info ++++\nELB-DNSName : test-33333.ap-northeast-1.elb.amazonaws.com ELBName : test\n        \"i-000000000000000\"  test-test                         52.xxx.xxx.xxx        10.xxx.xxx.xxx    t2.xxx        running        State : InService\n```\n", "tags": ["AWS", "aws-cli", "ShellScript"]}