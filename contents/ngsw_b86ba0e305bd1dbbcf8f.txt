{"context": "\n\n\u7d50\u8ad6:\u9867\u5ba2\u304c\u672c\u5f53\u306b\u307b\u3057\u304b\u3063\u305f\u3082\u306e(\u307e\u305f\u306f\u6211\u3005\u306f\u3044\u304b\u306b\u3057\u3066PFU\u793e\u3092\u305d\u305d\u306e\u304b\u3057\u958b\u767a\u3055\u305b\u308b\u3079\u304f\u4e16\u8ad6\u3092\u8a98\u5c0e\u3055\u305b\u308b\u304b)\n\nErgoDox Ez\u3055\u308f\u3063\u3066\u306e\u611f\u60f3\u300cHHKB Type-S\u304c\u30bb\u30d1\u30ec\u30fc\u30c8\u306b\u306a\u308c\u3070\u305d\u308c\u3067\u3088\u304b\u3063\u305f\u300d\u2014 \u3059\u30fc\u3071\u30fc\u308a\u3093\u307a\u30fc (@ngsw) 2016\u5e746\u670818\u65e5\n\n\n\u305d\u3082\u305d\u3082\u308f\u305f\u3057\u305f\u3061\u306fErgoDox Ez\u306e\u591a\u6a5f\u80fd\u6027\u3092\u3082\u3068\u3081\u3066\u3044\u305f\u308f\u3051\u3067\u306f\u306a\u3044\n\n\u4ee5\u4e0b\u306b\u307f\u3089\u308c\u308b\u30d5\u30ec\u30fc\u30ba \u3067\u304d\u308b\u304b\u3089\u3068\u3044\u3063\u3066\u3084\u308a\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u3044 \u304c\u3044\u307eErgoDox Ez\u3092\u524d\u306b\u3057\u305f\u611f\u60f3\n\n\n\u672c\u306e\u866b: \u6280\u8853\u5c4b\u306bMac\u4f7f\u3044\u304c\u591a\u3044\u7406\u7531\u3063\u3066\u306a\u306b\uff1f\n\u672c\u306e\u866b: \u30b9\u30c6\u30ec\u30aa\u30bf\u30a4\u30d7\u306aLinux\u30ab\u30fc\u30cd\u30eb\u958b\u767a\u8005\n\n\n\u672c\u6765\u7684\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u304d\u3061\u3093\u3068\u30ad\u30fc\u30de\u30c3\u30d7(\u3064\u307e\u308a\u306f\u30c7\u30b6\u30a4\u30f3)\u3055\u308c\u305f\u88fd\u54c1\u3092\u4f7f\u3044\u305f\u3044\n\n\nHHKB\u306f\u307e\u3055\u306b\u4e0a\u8a18\u3092\u4f53\u73fe\u3057\u3066\u3044\u305f\u3068\u611f\u3058\u3066\u3044\u308b\n\u305d\u3057\u3066ErgoDox Ez\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u306f\u3042\u307e\u308a\u30a4\u30b1\u3066\u306a\u3044\u3088\u3046\u306b\u601d\u3048\u305f\u3068\u3044\u3046\u3053\u3068(\u3068\u3044\u3046\u304b\u5de6\u53f3\u5bfe\u79f0\u6027\u306b\u3053\u3060\u308f\u308a\u3059\u304e\u305f\u306e\u3067\u306f\u3068\u3082\u611f\u3058\u305f)\n\n\n\u305f\u3060\u300c\u30ad\u30fc\u30de\u30c3\u30d7\u3092\u518d\u5b9a\u7fa9\u3059\u308b\u300d\u88fd\u54c1\u306a\u306e\u3060\u304b\u3089\u65e2\u5b58\u914d\u5217\u306e\u518d\u73fe/\u65e2\u5b58\u88fd\u54c1\u306e\u4ee3\u66ff\u306b\u56fa\u57f7\u3059\u308b\u306e\u306f\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3082\u601d\u3048\u308b\n\n\n\n\n\n\n\u5229\u7528\u3057\u3066\u3044\u304f\u4e2d\u3067\u518d\u8003\u3092\u4f59\u5100\u306a\u304f\u3055\u308c\u305f\u3053\u3068\n\n\u30bf\u30c3\u30c1\u30bf\u30a4\u30d4\u30f3\u30b0\u306e\u77ef\u6b63\u3092\u4f59\u5100\u306a\u304f\u3055\u308c\u308b\n\n\n\nc \u3092\u4eba\u5dee\u3057\u6307\u3067\u5bfe\u5fdc\u3057\u3066\u3044\u305f\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\n\u6307\u306e\u79fb\u52d5\u3092\u6700\u5c0f\u9650\u306b\u3057\u306a\u3044\u3068\u4e88\u671f\u305b\u306c\u30ad\u30fc\u3092\u62bc\u4e0b\u3059\u308b\u30cf\u30e1\u306b\u306a\u308b\n\n\n\u305f\u3068\u3048\u3070\u30d5\u30a9\u30fc\u30e0\u5165\u529b\u6642\u306b 1 \u306e\u304b\u308f\u308a\u306b\u96a3\u306e Esc \u3092\u62bc\u4e0b\u3057\u3066\u4f55\u5ea6\u3082\u5165\u529b\u3057\u76f4\u3059\u5730\u7344\n\n\n\n\n\u300c\u89aa\u6307\u307e\u308f\u308a\u30ad\u30fc\u3092\u6d3b\u304b\u3055\u306a\u3051\u308c\u3070\u3082\u3063\u305f\u3044\u306a\u3044\u30aa\u30d0\u30b1\u300d\u3068\u306e\u95d8\u3044\n\n\n\u306a\u308c\u308b\u307e\u3067\u6c17\u306b\u305b\u305a\u6368\u3066\u308d\n\u624b\u304c\u5c0f\u3055\u3044\u304b\u3089\u30db\u30fc\u30e0\u30dd\u30b8\u30b7\u30e7\u30f3\u5d29\u3057\u3066\u307e\u3067\u62bc\u3057\u306b\u884c\u304f\u30e1\u30ea\u30c3\u30c8\u304c\u306a\u3044\u6c17\u304c\u3059\u308b\n\n\n\u3068\u3044\u3046\u3088\u3046\u306a\u3081\u3093\u3069\u304f\u3055\u3055\u3082\u3042\u308b\u3051\u3069\u3001\u3084\u3063\u3071\u308a\u697d\u3057\u3055\u306f\u3042\u308b\u3057\u3001\u671f\u5f85\u3082\u3042\u308b\u306e\u306f\u4e8b\u5b9f\n\n\nkeymap.c \u306e\u6539\u5909\u30dd\u30ea\u30b7\u30fc\n\n\nErgodox EZ \u3092\u4f7f\u3063\u3066\u307f\u3088\u3046 - Qiita \u3092\u53c2\u8003\u306b\u3057\u3064\u3064\u3001HHKB\u3092\u306a\u308b\u3079\u304f\u518d\u73fe\u3059\u308b\u30a4\u30e1\u30fc\u30b8\n\n\n\u305d\u306e\u4e2d\u3067\u30db\u30fc\u30e0\u30dd\u30b8\u30b7\u30e7\u30f3\u53f3\u624b\u5c0f\u6307\u5074\u3092\u3069\u3046\u9055\u548c\u611f\u306a\u304f\u6563\u308a\u3070\u3081\u308b\u304b\n\u3068\u306f\u3044\u3048\u3053\u3053\u3089\u306f\u6163\u308c\u3067\u3057\u304b\u306a\u3044\u3068\u3082\u8a00\u3048\u308b\n\u30c6\u30f3\u30ad\u30fc\u7684\u306b\u4e00\u7b87\u6240\u306b\u307e\u3068\u3081\u308b\u3088\u308a\u3082\u3001\u5de6\u53f3\u5bfe\u79f0\u306b\u6587\u8108\u5bfe\u5fdc\u3055\u305b\u3066\u6563\u308a\u3070\u3081\u308b\u306e\u304c\u597d\u304d\nMac\u306eEject\u76f8\u5f53\u306f\u3069\u3046\u3084\u3063\u305f\u3089\u8a2d\u5b9a\u3067\u304d\u308b\u3093\u3060\u308d\u3046\u2026\u2026\n\n\n\n\nkeymap.c\n#include \"ergodox_ez.h\"\n#include \"debug.h\"\n#include \"action_layer.h\"\n\n#define BASE   0 // default layer\n#define FUNCS  1 // functions\n#define MOUSES 2 // mouse keys\n\nconst uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {\n/* Keymap 0: Basic layer\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * | ESC    |   1  |   2  |   3  |   4  |   5  |   {  |           |  }   |   6  |   7  |   8  |   9  |   0  |   \\    |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * | Tab    |   Q  |   W  |   E  |   R  |   T  |   -  |           |  +   |   Y  |   U  |   I  |   O  |   P  | BackSp |\n * |--------+------+------+------+------+------|   _  |           |  =   |------+------+------+------+------+--------|\n * | LCtrl  |   A  |   S  |   D  |   F  |   G  |------|           |------|   H  |   J  |   K  |   L  |   ;  | Enter  |\n * |--------+------+------+------+------+------|   ~  |           |  \"   |------+------+------+------+------+--------|\n * | LShift |   Z  |   X  |   C  |   V  |   B  |   `  |           |  '   |   N  |   M  |   ,  |   .  |   /  | RShift |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |      |      |      | LAlt | LGui |                                       | Left | Down |  Up  | Right|~FUNCS|\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        | Home | PgUp |       | PgDn | End  |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      | LAlt |       | RAlt |      |      |\n *                                 | Space| -/_  |------|       |------| RGui |Space |\n *                                 |      |      | LAlt |       | RAlt |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// If it accepts an argument (i.e, is a function), it doesn't need KC_.\n// Otherwise, it needs KC_*\n[BASE] = KEYMAP(  // layer 0 : default\n        // left hand\n        KC_ESC,         KC_1,         KC_2,   KC_3,   KC_4,   KC_5,   KC_LBRC,\n        KC_TAB,         KC_Q,         KC_W,   KC_E,   KC_R,   KC_T,   KC_MINS,\n        KC_LCTL,        KC_A,         KC_S,   KC_D,   KC_F,   KC_G,\n        KC_LSFT,        KC_Z,         KC_X,   KC_C,   KC_V,   KC_B,   KC_GRV,\n        KC_TRNS,        KC_TRNS,      KC_TRNS,KC_LALT,KC_LGUI,\n                                                      KC_HOME,KC_PGUP,\n                                                              KC_LALT,\n                                               KC_SPC,KC_MINS,KC_LALT,\n        // right hand\n             KC_RBRC,     KC_6,   KC_7,   KC_8,   KC_9,   KC_0,             KC_BSLS,\n             KC_PLUS,     KC_Y,   KC_U,   KC_I,   KC_O,   KC_P,             KC_BSPC,\n                          KC_H,   KC_J,   KC_K,   KC_L,   KC_SCLN,          KC_ENT,\n             KC_QUOT,     KC_N,   KC_M,   KC_COMM,KC_DOT, KC_SLSH,          KC_RSFT,\n                               KC_LEFT,   KC_DOWN,KC_UP,  KC_RIGHT,         MO(FUNCS),\n             KC_PGDN,     KC_END,\n             KC_RALT,\n             KC_RALT,KC_RGUI, KC_SPC\n    ),\n/* Keymap 1: Function Layer\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |  Pow   |  F1  |  F2  |  F3  |  F4  |  F5  |      |           |      |  F6  |  F7  |  F8  |  F9  |  F10 |   Ins  |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |  Tab   |      |      |      |      |      |MOUSE |           |      |      |      |      |      |  F11 |   Del  |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * | LCtrl  | VolDn| VolUp| Mute |      |      |------|           |------| Home | PgUp |      |      |  F12 |  PrSc  |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * | LShift |      |      |      |      |      |      |           |      | End  | PgDn |      |      |      | RShift |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   | Reset|      |      | LAlt | LGui |                                       | Left | Down |  Up  | Right|      |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        | Home | PgUp |       | PgDn | End  |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      | LAlt |       | RAlt |      |      |\n *                                 | Space| -/_  |------|       |------| RGui |Space |\n *                                 |      |      | LAlt |       | RAlt |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// FUNCTIONS\n[FUNCS] = KEYMAP(\n       // left hand\n       KC_PWR, KC_F1,  KC_F2,  KC_F3,  KC_F4,  KC_F5,  KC_TRNS,\n       KC_TAB, KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,TG(MOUSES),\n       KC_LCTL,KC_VOLD,KC_VOLU,KC_MUTE,KC_TRNS,KC_TRNS,\n       KC_LSFT,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,\n       RESET,  KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,\n                                       KC_TRNS,KC_TRNS,\n                                               KC_LALT,\n                                KC_SPC,KC_LGUI,KC_LALT,\n       // right hand\n       KC_TRNS, KC_F6,   KC_F7,  KC_F8,   KC_F9,   KC_F10,  KC_INS,\n       KC_TRNS, KC_TRNS, KC_TRNS,KC_TRNS, KC_TRNS, KC_F11,  KC_DELT,\n                KC_HOME, KC_PGUP,KC_TRNS, KC_TRNS, KC_F12,  KC_PSCR,\n       KC_TRNS, KC_END,  KC_PGDN,KC_2,    KC_TRNS, KC_TRNS, KC_RSFT,\n                         KC_LEFT,KC_DOWN, KC_UP,   KC_RIGHT,KC_TRNS,\n       KC_TRNS, KC_TRNS,\n       KC_RALT,\n       KC_RALT, KC_RGUI, KC_SPC\n),\n/* Keymap 2: Media and mouse keys\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |        |      |      |      |      |      |      |           |      |      |      |      |      |      |        |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |        |      |      | MsUp |      |      | BASE |           |      |      |      |      |      |      |        |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |      |MsLeft|MsDown|MsRght|      |------|           |------|      |      |      |      |      |  Play  |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |      |      |      |      |      |      |           |      |      |      | Prev | Next |      |        |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |      |      |      | Lclk | Rclk |                                       |VolDn |VolUp | Mute |      |      |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        |      |      |       |      |      |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      |      |       |      |      |Brwser|\n *                                 |      |      |------|       |------|      |Back  |\n *                                 |      |      |      |       |      |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// MEDIA AND MOUSE\n[MOUSES] = KEYMAP(\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_MS_U, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_MS_L, KC_MS_D, KC_MS_R, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_BTN1, KC_BTN2,\n                                           KC_TRNS, KC_TRNS,\n                                                    KC_TRNS,\n                                  KC_TRNS, KC_TRNS, KC_TRNS,\n    // right hand\n       KC_TRNS,  KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS,  KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n                 KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_MPLY,\n       KC_TRNS,  KC_TRNS, KC_TRNS, KC_MPRV, KC_MNXT, KC_TRNS, KC_TRNS,\n                          KC_VOLD, KC_VOLU, KC_MUTE, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS,\n       KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_WBAK\n),\n};\n\nconst uint16_t PROGMEM fn_actions[] = {\n    [1] = ACTION_LAYER_TAP_TOGGLE(FUNCS)                // ~FUNCS - Momentary Layer 1 (Functions)\n};\n\nconst macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)\n{\n  // MACRODOWN only works in this function\n      switch(id) {\n        case 0:\n        if (record->event.pressed) {\n          register_code(KC_RSFT);\n        } else {\n          unregister_code(KC_RSFT);\n        }\n        break;\n      }\n    return MACRO_NONE;\n};\n\n// Runs just one time when the keyboard initializes.\nvoid matrix_init_user(void) {\n\n};\n\n// Runs constantly in the background, in a loop.\nvoid matrix_scan_user(void) {\n\n    uint8_t layer = biton32(layer_state);\n\n    ergodox_board_led_off();\n    ergodox_right_led_1_off();\n    ergodox_right_led_2_off();\n    ergodox_right_led_3_off();\n    switch (layer) {\n      // TODO: Make this relevant to the ErgoDox EZ.\n        case 1:\n            ergodox_right_led_1_on();\n            break;\n        case 2:\n            ergodox_right_led_2_on();\n            break;\n        default:\n            // none\n            break;\n    }\n\n};\n\n\n\n# \u7d50\u8ad6:\u9867\u5ba2\u304c\u672c\u5f53\u306b\u307b\u3057\u304b\u3063\u305f\u3082\u306e(\u307e\u305f\u306f\u6211\u3005\u306f\u3044\u304b\u306b\u3057\u3066PFU\u793e\u3092\u305d\u305d\u306e\u304b\u3057\u958b\u767a\u3055\u305b\u308b\u3079\u304f\u4e16\u8ad6\u3092\u8a98\u5c0e\u3055\u305b\u308b\u304b)\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">ErgoDox Ez\u3055\u308f\u3063\u3066\u306e\u611f\u60f3\u300cHHKB Type-S\u304c\u30bb\u30d1\u30ec\u30fc\u30c8\u306b\u306a\u308c\u3070\u305d\u308c\u3067\u3088\u304b\u3063\u305f\u300d</p>&mdash; \u3059\u30fc\u3071\u30fc\u308a\u3093\u307a\u30fc (@ngsw) <a href=\"https://twitter.com/ngsw/status/744187540492554240\">2016\u5e746\u670818\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n## \u305d\u3082\u305d\u3082\u308f\u305f\u3057\u305f\u3061\u306fErgoDox Ez\u306e\u591a\u6a5f\u80fd\u6027\u3092\u3082\u3068\u3081\u3066\u3044\u305f\u308f\u3051\u3067\u306f\u306a\u3044\n* \u4ee5\u4e0b\u306b\u307f\u3089\u308c\u308b\u30d5\u30ec\u30fc\u30ba ```\u3067\u304d\u308b\u304b\u3089\u3068\u3044\u3063\u3066\u3084\u308a\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u3044``` \u304c\u3044\u307eErgoDox Ez\u3092\u524d\u306b\u3057\u305f\u611f\u60f3\n\t* [\u672c\u306e\u866b: \u6280\u8853\u5c4b\u306bMac\u4f7f\u3044\u304c\u591a\u3044\u7406\u7531\u3063\u3066\u306a\u306b\uff1f](https://cpplover.blogspot.jp/2013/11/mac.html \"\u672c\u306e\u866b: \u6280\u8853\u5c4b\u306bMac\u4f7f\u3044\u304c\u591a\u3044\u7406\u7531\u3063\u3066\u306a\u306b\uff1f\")\n\t* [\u672c\u306e\u866b: \u30b9\u30c6\u30ec\u30aa\u30bf\u30a4\u30d7\u306aLinux\u30ab\u30fc\u30cd\u30eb\u958b\u767a\u8005](https://cpplover.blogspot.jp/2013/06/linux.html \"\u672c\u306e\u866b: \u30b9\u30c6\u30ec\u30aa\u30bf\u30a4\u30d7\u306aLinux\u30ab\u30fc\u30cd\u30eb\u958b\u767a\u8005\")\n* \u672c\u6765\u7684\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u304d\u3061\u3093\u3068\u30ad\u30fc\u30de\u30c3\u30d7(\u3064\u307e\u308a\u306f\u30c7\u30b6\u30a4\u30f3)\u3055\u308c\u305f\u88fd\u54c1\u3092\u4f7f\u3044\u305f\u3044\n\t* HHKB\u306f\u307e\u3055\u306b\u4e0a\u8a18\u3092\u4f53\u73fe\u3057\u3066\u3044\u305f\u3068\u611f\u3058\u3066\u3044\u308b\n\t* \u305d\u3057\u3066ErgoDox Ez\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u306f\u3042\u307e\u308a\u30a4\u30b1\u3066\u306a\u3044\u3088\u3046\u306b\u601d\u3048\u305f\u3068\u3044\u3046\u3053\u3068(\u3068\u3044\u3046\u304b\u5de6\u53f3\u5bfe\u79f0\u6027\u306b\u3053\u3060\u308f\u308a\u3059\u304e\u305f\u306e\u3067\u306f\u3068\u3082\u611f\u3058\u305f)\n\t\t* \u305f\u3060\u300c\u30ad\u30fc\u30de\u30c3\u30d7\u3092\u518d\u5b9a\u7fa9\u3059\u308b\u300d\u88fd\u54c1\u306a\u306e\u3060\u304b\u3089\u65e2\u5b58\u914d\u5217\u306e\u518d\u73fe/\u65e2\u5b58\u88fd\u54c1\u306e\u4ee3\u66ff\u306b\u56fa\u57f7\u3059\u308b\u306e\u306f\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3082\u601d\u3048\u308b\n\n# \u5229\u7528\u3057\u3066\u3044\u304f\u4e2d\u3067\u518d\u8003\u3092\u4f59\u5100\u306a\u304f\u3055\u308c\u305f\u3053\u3068\n* \u30bf\u30c3\u30c1\u30bf\u30a4\u30d4\u30f3\u30b0\u306e\u77ef\u6b63\u3092\u4f59\u5100\u306a\u304f\u3055\u308c\u308b\n\t* ```c``` \u3092\u4eba\u5dee\u3057\u6307\u3067\u5bfe\u5fdc\u3057\u3066\u3044\u305f\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\n\t* \u6307\u306e\u79fb\u52d5\u3092\u6700\u5c0f\u9650\u306b\u3057\u306a\u3044\u3068\u4e88\u671f\u305b\u306c\u30ad\u30fc\u3092\u62bc\u4e0b\u3059\u308b\u30cf\u30e1\u306b\u306a\u308b\n\t\t* \u305f\u3068\u3048\u3070\u30d5\u30a9\u30fc\u30e0\u5165\u529b\u6642\u306b ```1``` \u306e\u304b\u308f\u308a\u306b\u96a3\u306e ```Esc``` \u3092\u62bc\u4e0b\u3057\u3066\u4f55\u5ea6\u3082\u5165\u529b\u3057\u76f4\u3059\u5730\u7344\n* \u300c\u89aa\u6307\u307e\u308f\u308a\u30ad\u30fc:+1:\u3092\u6d3b\u304b\u3055\u306a\u3051\u308c\u3070\u3082\u3063\u305f\u3044\u306a\u3044\u30aa\u30d0\u30b1:ghost:\u300d\u3068\u306e\u95d8\u3044\n\t* \u306a\u308c\u308b\u307e\u3067\u6c17\u306b\u305b\u305a\u6368\u3066\u308d\n\t* \u624b\u304c\u5c0f\u3055\u3044\u304b\u3089\u30db\u30fc\u30e0\u30dd\u30b8\u30b7\u30e7\u30f3\u5d29\u3057\u3066\u307e\u3067\u62bc\u3057\u306b\u884c\u304f\u30e1\u30ea\u30c3\u30c8\u304c\u306a\u3044\u6c17\u304c\u3059\u308b\n* \u3068\u3044\u3046\u3088\u3046\u306a\u3081\u3093\u3069\u304f\u3055\u3055\u3082\u3042\u308b\u3051\u3069\u3001\u3084\u3063\u3071\u308a\u697d\u3057\u3055\u306f\u3042\u308b\u3057\u3001\u671f\u5f85\u3082\u3042\u308b\u306e\u306f\u4e8b\u5b9f\n\n# ```keymap.c``` \u306e\u6539\u5909\u30dd\u30ea\u30b7\u30fc\n\n* [Ergodox EZ \u3092\u4f7f\u3063\u3066\u307f\u3088\u3046 - Qiita](http://qiita.com/kei_s/items/40a896d1a1c70f2961e0 \"Ergodox EZ \u3092\u4f7f\u3063\u3066\u307f\u3088\u3046 - Qiita\") \u3092\u53c2\u8003\u306b\u3057\u3064\u3064\u3001HHKB\u3092\u306a\u308b\u3079\u304f\u518d\u73fe\u3059\u308b\u30a4\u30e1\u30fc\u30b8\n\t* \u305d\u306e\u4e2d\u3067\u30db\u30fc\u30e0\u30dd\u30b8\u30b7\u30e7\u30f3\u53f3\u624b\u5c0f\u6307\u5074\u3092\u3069\u3046\u9055\u548c\u611f\u306a\u304f\u6563\u308a\u3070\u3081\u308b\u304b\n\t* \u3068\u306f\u3044\u3048\u3053\u3053\u3089\u306f\u6163\u308c\u3067\u3057\u304b\u306a\u3044\u3068\u3082\u8a00\u3048\u308b\n\t* \u30c6\u30f3\u30ad\u30fc\u7684\u306b\u4e00\u7b87\u6240\u306b\u307e\u3068\u3081\u308b\u3088\u308a\u3082\u3001\u5de6\u53f3\u5bfe\u79f0\u306b\u6587\u8108\u5bfe\u5fdc\u3055\u305b\u3066\u6563\u308a\u3070\u3081\u308b\u306e\u304c\u597d\u304d\n\t* Mac\u306e```Eject```\u76f8\u5f53\u306f\u3069\u3046\u3084\u3063\u305f\u3089\u8a2d\u5b9a\u3067\u304d\u308b\u3093\u3060\u308d\u3046\u2026\u2026\n\n```c:keymap.c\n#include \"ergodox_ez.h\"\n#include \"debug.h\"\n#include \"action_layer.h\"\n\n#define BASE   0 // default layer\n#define FUNCS  1 // functions\n#define MOUSES 2 // mouse keys\n\nconst uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {\n/* Keymap 0: Basic layer\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * | ESC    |   1  |   2  |   3  |   4  |   5  |   {  |           |  }   |   6  |   7  |   8  |   9  |   0  |   \\    |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * | Tab    |   Q  |   W  |   E  |   R  |   T  |   -  |           |  +   |   Y  |   U  |   I  |   O  |   P  | BackSp |\n * |--------+------+------+------+------+------|   _  |           |  =   |------+------+------+------+------+--------|\n * | LCtrl  |   A  |   S  |   D  |   F  |   G  |------|           |------|   H  |   J  |   K  |   L  |   ;  | Enter  |\n * |--------+------+------+------+------+------|   ~  |           |  \"   |------+------+------+------+------+--------|\n * | LShift |   Z  |   X  |   C  |   V  |   B  |   `  |           |  '   |   N  |   M  |   ,  |   .  |   /  | RShift |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |      |      |      | LAlt | LGui |                                       | Left | Down |  Up  | Right|~FUNCS|\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        | Home | PgUp |       | PgDn | End  |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      | LAlt |       | RAlt |      |      |\n *                                 | Space| -/_  |------|       |------| RGui |Space |\n *                                 |      |      | LAlt |       | RAlt |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// If it accepts an argument (i.e, is a function), it doesn't need KC_.\n// Otherwise, it needs KC_*\n[BASE] = KEYMAP(  // layer 0 : default\n        // left hand\n        KC_ESC,         KC_1,         KC_2,   KC_3,   KC_4,   KC_5,   KC_LBRC,\n        KC_TAB,         KC_Q,         KC_W,   KC_E,   KC_R,   KC_T,   KC_MINS,\n        KC_LCTL,        KC_A,         KC_S,   KC_D,   KC_F,   KC_G,\n        KC_LSFT,        KC_Z,         KC_X,   KC_C,   KC_V,   KC_B,   KC_GRV,\n        KC_TRNS,        KC_TRNS,      KC_TRNS,KC_LALT,KC_LGUI,\n                                                      KC_HOME,KC_PGUP,\n                                                              KC_LALT,\n                                               KC_SPC,KC_MINS,KC_LALT,\n        // right hand\n             KC_RBRC,     KC_6,   KC_7,   KC_8,   KC_9,   KC_0,             KC_BSLS,\n             KC_PLUS,     KC_Y,   KC_U,   KC_I,   KC_O,   KC_P,             KC_BSPC,\n                          KC_H,   KC_J,   KC_K,   KC_L,   KC_SCLN,          KC_ENT,\n             KC_QUOT,     KC_N,   KC_M,   KC_COMM,KC_DOT, KC_SLSH,          KC_RSFT,\n                               KC_LEFT,   KC_DOWN,KC_UP,  KC_RIGHT,         MO(FUNCS),\n             KC_PGDN,     KC_END,\n             KC_RALT,\n             KC_RALT,KC_RGUI, KC_SPC\n    ),\n/* Keymap 1: Function Layer\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |  Pow   |  F1  |  F2  |  F3  |  F4  |  F5  |      |           |      |  F6  |  F7  |  F8  |  F9  |  F10 |   Ins  |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |  Tab   |      |      |      |      |      |MOUSE |           |      |      |      |      |      |  F11 |   Del  |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * | LCtrl  | VolDn| VolUp| Mute |      |      |------|           |------| Home | PgUp |      |      |  F12 |  PrSc  |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * | LShift |      |      |      |      |      |      |           |      | End  | PgDn |      |      |      | RShift |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   | Reset|      |      | LAlt | LGui |                                       | Left | Down |  Up  | Right|      |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        | Home | PgUp |       | PgDn | End  |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      | LAlt |       | RAlt |      |      |\n *                                 | Space| -/_  |------|       |------| RGui |Space |\n *                                 |      |      | LAlt |       | RAlt |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// FUNCTIONS\n[FUNCS] = KEYMAP(\n       // left hand\n       KC_PWR, KC_F1,  KC_F2,  KC_F3,  KC_F4,  KC_F5,  KC_TRNS,\n       KC_TAB, KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,TG(MOUSES),\n       KC_LCTL,KC_VOLD,KC_VOLU,KC_MUTE,KC_TRNS,KC_TRNS,\n       KC_LSFT,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,\n       RESET,  KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,\n                                       KC_TRNS,KC_TRNS,\n                                               KC_LALT,\n                                KC_SPC,KC_LGUI,KC_LALT,\n       // right hand\n       KC_TRNS, KC_F6,   KC_F7,  KC_F8,   KC_F9,   KC_F10,  KC_INS,\n       KC_TRNS, KC_TRNS, KC_TRNS,KC_TRNS, KC_TRNS, KC_F11,  KC_DELT,\n                KC_HOME, KC_PGUP,KC_TRNS, KC_TRNS, KC_F12,  KC_PSCR,\n       KC_TRNS, KC_END,  KC_PGDN,KC_2,    KC_TRNS, KC_TRNS, KC_RSFT,\n                         KC_LEFT,KC_DOWN, KC_UP,   KC_RIGHT,KC_TRNS,\n       KC_TRNS, KC_TRNS,\n       KC_RALT,\n       KC_RALT, KC_RGUI, KC_SPC\n),\n/* Keymap 2: Media and mouse keys\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |        |      |      |      |      |      |      |           |      |      |      |      |      |      |        |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |        |      |      | MsUp |      |      | BASE |           |      |      |      |      |      |      |        |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |      |MsLeft|MsDown|MsRght|      |------|           |------|      |      |      |      |      |  Play  |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |      |      |      |      |      |      |           |      |      |      | Prev | Next |      |        |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |      |      |      | Lclk | Rclk |                                       |VolDn |VolUp | Mute |      |      |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        |      |      |       |      |      |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      |      |       |      |      |Brwser|\n *                                 |      |      |------|       |------|      |Back  |\n *                                 |      |      |      |       |      |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// MEDIA AND MOUSE\n[MOUSES] = KEYMAP(\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_MS_U, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_MS_L, KC_MS_D, KC_MS_R, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_BTN1, KC_BTN2,\n                                           KC_TRNS, KC_TRNS,\n                                                    KC_TRNS,\n                                  KC_TRNS, KC_TRNS, KC_TRNS,\n    // right hand\n       KC_TRNS,  KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS,  KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n                 KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_MPLY,\n       KC_TRNS,  KC_TRNS, KC_TRNS, KC_MPRV, KC_MNXT, KC_TRNS, KC_TRNS,\n                          KC_VOLD, KC_VOLU, KC_MUTE, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS,\n       KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_WBAK\n),\n};\n\nconst uint16_t PROGMEM fn_actions[] = {\n    [1] = ACTION_LAYER_TAP_TOGGLE(FUNCS)                // ~FUNCS - Momentary Layer 1 (Functions)\n};\n\nconst macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)\n{\n  // MACRODOWN only works in this function\n      switch(id) {\n        case 0:\n        if (record->event.pressed) {\n          register_code(KC_RSFT);\n        } else {\n          unregister_code(KC_RSFT);\n        }\n        break;\n      }\n    return MACRO_NONE;\n};\n\n// Runs just one time when the keyboard initializes.\nvoid matrix_init_user(void) {\n\n};\n\n// Runs constantly in the background, in a loop.\nvoid matrix_scan_user(void) {\n\n    uint8_t layer = biton32(layer_state);\n\n    ergodox_board_led_off();\n    ergodox_right_led_1_off();\n    ergodox_right_led_2_off();\n    ergodox_right_led_3_off();\n    switch (layer) {\n      // TODO: Make this relevant to the ErgoDox EZ.\n        case 1:\n            ergodox_right_led_1_on();\n            break;\n        case 2:\n            ergodox_right_led_2_on();\n            break;\n        default:\n            // none\n            break;\n    }\n\n};\n```\n", "tags": ["ergodox"]}