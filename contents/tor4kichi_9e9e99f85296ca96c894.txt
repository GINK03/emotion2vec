{"tags": ["UWP", "C#"], "context": "\n\n\u8ffd\u8a18\nWindows10 Anniversary Update \u4ee5\u5f8c\u3067\u306f MediaPlayer \u53ca\u3073 MediaPlayerElement \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30e1\u30c7\u30a3\u30a2\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u3084\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u518d\u751f\u304c\u7c21\u5358\u306b\u30b5\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u52d5\u753b\u30b9\u30c8\u30ea\u30fc\u30e0\u3092MediaSource\u3068\u3057\u3066\u6271\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001MediaElement\u3067\u52d5\u753b\u3092\u6271\u3046\u3088\u308a\u3082\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\u3002\n\u5f8c\u65b9\u4e92\u63db\u6027\u304c\u8981\u4ef6\u304c\u5fc5\u9808\u306a\u5834\u5408\u3092\u9664\u3044\u3066\u306f\u3001MediaPlayer/MediaPlayerElement\u306e\u5229\u7528\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u3053\u3053\u3067\u6271\u3046\u306e\u306f Windows.UI.Xaml.Controls.MediaElement \u3067\u3059\u3002\nSystem.Windows.Controls.MediaElement \u3067\u306f\u306a\u3044\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\nMediaElement.Position\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u3064\u3044\u3066\nMediaElement\u306e\u518d\u751f\u4f4d\u7f6e\u306fPosition\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u901a\u3058\u3066\u884c\u3044\u307e\u3059\u304c\u3001MediaElement\u4e0a\u3067\u518d\u751f\u3092\u958b\u59cb\u3057\u3066\u3082Position\u30d7\u30ed\u30d1\u30c6\u30a3\u3078\u306e\u64cd\u4f5c\u306f\u5185\u90e8\u304b\u3089\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081Position\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u5909\u66f4\u901a\u77e5\u3082\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u307e\u305b\u3093\u3002\nPosition\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u3064\u3044\u3066\nhttps://msdn.microsoft.com/ja-jp/library/system.windows.controls.mediaelement.position(v=vs.110).aspx\n\u3053\u306e\u30da\u30fc\u30b8\u306b\u3088\u308b\u3068\u3001Clock\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u306a\u3044\u6642\u306bPosition\u304c\u8a2d\u5b9a\u3055\u308c\u305f\u3068\u304d\u518d\u751f\u4f4d\u7f6e\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\u3068\u3042\u308a\u307e\u3059\u304c\u3001\u8aad\u307f\u53d6\u308a\u306b\u3064\u3044\u3066\u306f\u8a18\u8ff0\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001Position\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5909\u66f4\u3092\u4f1d\u3048\u308b\u30a4\u30d9\u30f3\u30c8\u3082\u5b58\u5728\u3057\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u305d\u3046\u306a\u308b\u3068\u518d\u751f\u306b\u5408\u308f\u305b\u3066Position\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001Timer\u7b49\u3067Position\u306e\u5185\u5bb9\u3092\u30e2\u30cb\u30bf\u30fc\u3057\u3066\u5b9a\u671f\u7684\u306b\u53d6\u308a\u51fa\u3059\u51e6\u7406\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\nMediaElement\u306e\u518d\u751f\u72b6\u6cc1\u3092\u77e5\u308b\u65b9\u6cd5\n\u57fa\u672c\u7684\u306b\u306fMediaElement.CurrentState\u30d7\u30ed\u30d1\u30c6\u30a3\u307e\u305f\u306f\u3001CurrentStateChanged\u30a4\u30d9\u30f3\u30c8\u3092\u901a\u3058\u3066\u73fe\u5728\u306e\u518d\u751f\u72b6\u6cc1\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nTimer\u3067Position\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30e2\u30cb\u30bf\u30fc\u3059\u308b\u969b\u3001\u30e1\u30c7\u30a3\u30a2\u306e\u30af\u30ed\u30fc\u30ba\u5f8c\u3084\u30dd\u30fc\u30ba\u4e2d\u306b\u30e2\u30cb\u30bf\u30fc\u51e6\u7406\u304c\u8d70\u3089\u306a\u3044\u3088\u3046\u306b\u5de5\u592b\u3067\u304d\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\nPosition\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5b9a\u671f\u8aad\u307f\u53d6\u308a\u3059\u308b\u30d3\u30d8\u30a4\u30d3\u30a2\n\nMediaElementPositionExtractBehavior.cs\nusing System;\nusing System.Threading;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Controls;\nusing Microsoft.Xaml.Interactivity;\n\nnamespace MyApp.Views.Behaviors\n{\n    public class MediaElementExtractPositionBehavior : Behavior<MediaElement>\n    {\n\n        #region Position Property\n\n        public static readonly DependencyProperty PositionProperty =\n            DependencyProperty.Register(\"Position\"\n                    , typeof(TimeSpan)\n                    , typeof(MediaElementExtractPositionBehavior)\n                    , new PropertyMetadata(default(TimeSpan))\n                );\n\n        public TimeSpan Position\n        {\n            get { return (TimeSpan)GetValue(PositionProperty); }\n            set { SetValue(PositionProperty, value); }\n        }\n\n        #endregion\n\n\n        #region Interval Property\n\n        public static readonly DependencyProperty IntervalProperty =\n            DependencyProperty.Register(\"Interval\"\n                    , typeof(TimeSpan)\n                    , typeof(MediaElementExtractPositionBehavior)\n                    , new PropertyMetadata(default(TimeSpan))\n                );\n\n        public TimeSpan Interval\n        {\n            get { return (TimeSpan)GetValue(IntervalProperty); }\n            set { SetValue(IntervalProperty, value); }\n        }\n\n        #endregion\n\n\n        #region MediaElement Event Handling\n\n        protected override void OnAttached()\n        {\n            base.OnAttached();\n\n            this.AssociatedObject.Loaded += AssociatedObject_Loaded;\n\n        }\n\n\n        private void AssociatedObject_Loaded(object sender, Windows.UI.Xaml.RoutedEventArgs e)\n        {\n            this.AssociatedObject.CurrentStateChanged += AssociatedObject_CurrentStateChanged;\n            this.AssociatedObject.SeekCompleted += AssociatedObject_SeekCompleted;\n\n\n            this.AssociatedObject.Loaded -= AssociatedObject_Loaded;\n            this.AssociatedObject.Unloaded += AssociatedObject_Unloaded;\n        }\n\n        private void AssociatedObject_SeekCompleted(object sender, RoutedEventArgs e)\n        {\n            this.ExtractPosition();\n        }\n\n        private void AssociatedObject_CurrentStateChanged(object sender, RoutedEventArgs e)\n        {\n            var mediaElem = (MediaElement)sender;\n\n            switch (mediaElem.CurrentState)\n            {\n                case Windows.UI.Xaml.Media.MediaElementState.Closed:\n                    TimerExit();\n                    break;\n                case Windows.UI.Xaml.Media.MediaElementState.Opening:\n                    RefreshTimerSetting();\n                    break;\n                case Windows.UI.Xaml.Media.MediaElementState.Buffering:\n                    break;\n                case Windows.UI.Xaml.Media.MediaElementState.Playing:\n                    RefreshTimerSetting();\n                    break;\n                case Windows.UI.Xaml.Media.MediaElementState.Paused:\n                    TimerExit();\n                    break;\n                case Windows.UI.Xaml.Media.MediaElementState.Stopped:\n                    TimerExit();\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        private void AssociatedObject_Unloaded(object sender, Windows.UI.Xaml.RoutedEventArgs e)\n        {\n            TimerExit();\n        }\n\n\n        protected override void OnDetaching()\n        {\n            base.OnDetaching();\n\n            TimerExit();\n        }\n\n\n        #endregion\n\n\n        #region Management Timer\n\n\n        private Timer _ExtractTimingTimer;\n\n\n        private void RefreshTimerSetting()\n        {\n            TimerExit();\n\n            _ExtractTimingTimer = new Timer((x) =>\n            {\n                var me = (MediaElementExtractPositionBehavior)x;\n\n                me.ExtractPosition();\n\n            }, this, 0, (int)Interval.TotalMilliseconds);\n        }\n\n        private void TimerExit()\n        {\n            _ExtractTimingTimer?.Dispose();\n            _ExtractTimingTimer = null;\n        }\n\n\n        private async void ExtractPosition()\n        {\n            var mediaElem = this.AssociatedObject as MediaElement;\n\n            await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Low,\n                    () => this.Position = mediaElem.Position);\n        }\n\n\n        #endregion\n    }\n}\n\n\n\u6c17\u8efd\u306bTimer\u30b9\u30ec\u30c3\u30c9\u3092\u4f5c\u3063\u305f\u308a\u6d88\u3057\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6c17\u306b\u306a\u308b\u5834\u5408\u306b\u306fCurrentState\u306eOpening\u3068Closed\u3067\u3060\u3051\u4f5c\u6210\u3068\u524a\u9664\u3092\u884c\u3048\u3070\u554f\u984c\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nSeekCompleted\u30a4\u30d9\u30f3\u30c8\u306b\u3082\u53cd\u5fdc\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30b7\u30fc\u30af\u5f8c\u306b\u3082Playing\u30b9\u30c6\u30fc\u30c8\u3078\u306e\u5909\u66f4\u304c\u547c\u3070\u308c\u308b\u3068\u601d\u3046\uff08\u52d5\u4f5c\u672a\u78ba\u8a8d\uff09\u306e\u3067\u4e0d\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nXaml\u3067\u5229\u7528\u3059\u308b\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\nMediaElementWithGetPosition\n<Page\n    x:Class=\"MyApp.Views.VideoPlayerPage\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    xmlns:i=\"using:Microsoft.Xaml.Interactivity\"\n    xmlns:core=\"using:Microsoft.Xaml.Interactions.Core\"\n    xmlns:mybehaviors=\"MyApp.Views.Behaviors\"\n    mc:Ignorable=\"d\">\n\n    <Grid>\n        <MediaElement Source=\"smile.mp4\">\n            <i:Interaction.Behaviors>\n                <mybehaviors:MediaElementExtractPositionBehavior \n                    Position=\"{Binding CurrentVideoPosition, Mode=TwoWay}\"\n                    Interval=\"00:00:00.016\" \n                    />\n            </i:Interaction.Behaviors>\n        </MediaElement>\n    </Grid>\n</Page>\n\n\nPosition\u306bBinding\u3057\u3066\u3044\u308bCurrentVideoPosition\u306f\u3001VideoPlayerPage\u306eDataContext\u306b\u8a2d\u5b9a\u3059\u308bVideoPlayerPageViewModel\u4e0a\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nInterval\u306b\u306fTimeSpan\u578b\u306e\u56fa\u5b9a\u5024\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f0.016\u79d2(\u7d041/60\u79d2)\u3054\u3068\u306bPosition\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u4ed6\u306b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u3053\u308d\u306f\u30b3\u30e1\u30f3\u30c8\u3082\u3089\u3048\u308c\u3070\u88dc\u8db3\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\nMediaElement\nhttps://msdn.microsoft.com/ja-jp/library/windows/apps/windows.ui.xaml.controls.mediaelement\n### \u8ffd\u8a18\nWindows10 Anniversary Update \u4ee5\u5f8c\u3067\u306f [MediaPlayer \u53ca\u3073 MediaPlayerElement \u3092\u5229\u7528\u3059\u308b](https://docs.microsoft.com/ja-jp/windows/uwp/audio-video-camera/play-audio-and-video-with-mediaplayer)\u3053\u3068\u3067\u3001\u30e1\u30c7\u30a3\u30a2\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u3084\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u518d\u751f\u304c\u7c21\u5358\u306b\u30b5\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u52d5\u753b\u30b9\u30c8\u30ea\u30fc\u30e0\u3092MediaSource\u3068\u3057\u3066\u6271\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001MediaElement\u3067\u52d5\u753b\u3092\u6271\u3046\u3088\u308a\u3082\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5f8c\u65b9\u4e92\u63db\u6027\u304c\u8981\u4ef6\u304c\u5fc5\u9808\u306a\u5834\u5408\u3092\u9664\u3044\u3066\u306f\u3001MediaPlayer/MediaPlayerElement\u306e\u5229\u7528\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\n\n\n## \u306f\u3058\u3081\u306b\n\u3053\u3053\u3067\u6271\u3046\u306e\u306f Windows.UI.Xaml.Controls.MediaElement \u3067\u3059\u3002\nSystem.Windows.Controls.MediaElement \u3067\u306f\u306a\u3044\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\n## MediaElement.Position\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u3064\u3044\u3066\nMediaElement\u306e\u518d\u751f\u4f4d\u7f6e\u306fPosition\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u901a\u3058\u3066\u884c\u3044\u307e\u3059\u304c\u3001MediaElement\u4e0a\u3067\u518d\u751f\u3092\u958b\u59cb\u3057\u3066\u3082Position\u30d7\u30ed\u30d1\u30c6\u30a3\u3078\u306e\u64cd\u4f5c\u306f\u5185\u90e8\u304b\u3089\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081Position\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u5909\u66f4\u901a\u77e5\u3082\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u307e\u305b\u3093\u3002\n\nPosition\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u3064\u3044\u3066\nhttps://msdn.microsoft.com/ja-jp/library/system.windows.controls.mediaelement.position(v=vs.110).aspx\n\n\u3053\u306e\u30da\u30fc\u30b8\u306b\u3088\u308b\u3068\u3001Clock\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u306a\u3044\u6642\u306bPosition\u304c\u8a2d\u5b9a\u3055\u308c\u305f\u3068\u304d\u518d\u751f\u4f4d\u7f6e\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\u3068\u3042\u308a\u307e\u3059\u304c\u3001\u8aad\u307f\u53d6\u308a\u306b\u3064\u3044\u3066\u306f\u8a18\u8ff0\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u307e\u305f\u3001Position\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5909\u66f4\u3092\u4f1d\u3048\u308b\u30a4\u30d9\u30f3\u30c8\u3082\u5b58\u5728\u3057\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u305d\u3046\u306a\u308b\u3068\u518d\u751f\u306b\u5408\u308f\u305b\u3066Position\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001Timer\u7b49\u3067Position\u306e\u5185\u5bb9\u3092\u30e2\u30cb\u30bf\u30fc\u3057\u3066\u5b9a\u671f\u7684\u306b\u53d6\u308a\u51fa\u3059\u51e6\u7406\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n## MediaElement\u306e\u518d\u751f\u72b6\u6cc1\u3092\u77e5\u308b\u65b9\u6cd5\n\u57fa\u672c\u7684\u306b\u306fMediaElement.CurrentState\u30d7\u30ed\u30d1\u30c6\u30a3\u307e\u305f\u306f\u3001CurrentStateChanged\u30a4\u30d9\u30f3\u30c8\u3092\u901a\u3058\u3066\u73fe\u5728\u306e\u518d\u751f\u72b6\u6cc1\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\nTimer\u3067Position\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30e2\u30cb\u30bf\u30fc\u3059\u308b\u969b\u3001\u30e1\u30c7\u30a3\u30a2\u306e\u30af\u30ed\u30fc\u30ba\u5f8c\u3084\u30dd\u30fc\u30ba\u4e2d\u306b\u30e2\u30cb\u30bf\u30fc\u51e6\u7406\u304c\u8d70\u3089\u306a\u3044\u3088\u3046\u306b\u5de5\u592b\u3067\u304d\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\n\n## Position\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5b9a\u671f\u8aad\u307f\u53d6\u308a\u3059\u308b\u30d3\u30d8\u30a4\u30d3\u30a2\n\n```csharp:MediaElementPositionExtractBehavior.cs\nusing System;\nusing System.Threading;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Controls;\nusing Microsoft.Xaml.Interactivity;\n\nnamespace MyApp.Views.Behaviors\n{\n\tpublic class MediaElementExtractPositionBehavior : Behavior<MediaElement>\n\t{\n\n\t\t#region Position Property\n\n\t\tpublic static readonly DependencyProperty PositionProperty =\n\t\t\tDependencyProperty.Register(\"Position\"\n\t\t\t\t\t, typeof(TimeSpan)\n\t\t\t\t\t, typeof(MediaElementExtractPositionBehavior)\n\t\t\t\t\t, new PropertyMetadata(default(TimeSpan))\n\t\t\t\t);\n\n\t\tpublic TimeSpan Position\n\t\t{\n\t\t\tget { return (TimeSpan)GetValue(PositionProperty); }\n\t\t\tset { SetValue(PositionProperty, value); }\n\t\t}\n\n\t\t#endregion\n\n\n\t\t#region Interval Property\n\n\t\tpublic static readonly DependencyProperty IntervalProperty =\n\t\t\tDependencyProperty.Register(\"Interval\"\n\t\t\t\t\t, typeof(TimeSpan)\n\t\t\t\t\t, typeof(MediaElementExtractPositionBehavior)\n\t\t\t\t\t, new PropertyMetadata(default(TimeSpan))\n\t\t\t\t);\n\n\t\tpublic TimeSpan Interval\n\t\t{\n\t\t\tget { return (TimeSpan)GetValue(IntervalProperty); }\n\t\t\tset { SetValue(IntervalProperty, value); }\n\t\t}\n\n\t\t#endregion\n\n\n\t\t#region MediaElement Event Handling\n\n\t\tprotected override void OnAttached()\n\t\t{\n\t\t\tbase.OnAttached();\n\n\t\t\tthis.AssociatedObject.Loaded += AssociatedObject_Loaded;\n\t\t\t\n\t\t}\n\n\n\t\tprivate void AssociatedObject_Loaded(object sender, Windows.UI.Xaml.RoutedEventArgs e)\n\t\t{\n\t\t\tthis.AssociatedObject.CurrentStateChanged += AssociatedObject_CurrentStateChanged;\n\t\t\tthis.AssociatedObject.SeekCompleted += AssociatedObject_SeekCompleted;\n\n\n\t\t\tthis.AssociatedObject.Loaded -= AssociatedObject_Loaded;\n\t\t\tthis.AssociatedObject.Unloaded += AssociatedObject_Unloaded;\n\t\t}\n\n\t\tprivate void AssociatedObject_SeekCompleted(object sender, RoutedEventArgs e)\n\t\t{\n\t\t\tthis.ExtractPosition();\n\t\t}\n\n\t\tprivate void AssociatedObject_CurrentStateChanged(object sender, RoutedEventArgs e)\n\t\t{\n\t\t\tvar mediaElem = (MediaElement)sender;\n\n\t\t\tswitch (mediaElem.CurrentState)\n\t\t\t{\n\t\t\t\tcase Windows.UI.Xaml.Media.MediaElementState.Closed:\n\t\t\t\t\tTimerExit();\n\t\t\t\t\tbreak;\n\t\t\t\tcase Windows.UI.Xaml.Media.MediaElementState.Opening:\n\t\t\t\t\tRefreshTimerSetting();\n\t\t\t\t\tbreak;\n\t\t\t\tcase Windows.UI.Xaml.Media.MediaElementState.Buffering:\n\t\t\t\t\tbreak;\n\t\t\t\tcase Windows.UI.Xaml.Media.MediaElementState.Playing:\n\t\t\t\t\tRefreshTimerSetting();\n\t\t\t\t\tbreak;\n\t\t\t\tcase Windows.UI.Xaml.Media.MediaElementState.Paused:\n\t\t\t\t\tTimerExit();\n\t\t\t\t\tbreak;\n\t\t\t\tcase Windows.UI.Xaml.Media.MediaElementState.Stopped:\n\t\t\t\t\tTimerExit();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprivate void AssociatedObject_Unloaded(object sender, Windows.UI.Xaml.RoutedEventArgs e)\n\t\t{\n\t\t\tTimerExit();\n\t\t}\n\n\n\t\tprotected override void OnDetaching()\n\t\t{\n\t\t\tbase.OnDetaching();\n\n\t\t\tTimerExit();\n\t\t}\n\n\n\t\t#endregion\n\n\n\t\t#region Management Timer\n\n\n\t\tprivate Timer _ExtractTimingTimer;\n\n\n\t\tprivate void RefreshTimerSetting()\n\t\t{\n\t\t\tTimerExit();\n\n\t\t\t_ExtractTimingTimer = new Timer((x) =>\n\t\t\t{\n\t\t\t\tvar me = (MediaElementExtractPositionBehavior)x;\n\n\t\t\t\tme.ExtractPosition();\n\n\t\t\t}, this, 0, (int)Interval.TotalMilliseconds);\n\t\t}\n\n\t\tprivate void TimerExit()\n\t\t{\n\t\t\t_ExtractTimingTimer?.Dispose();\n\t\t\t_ExtractTimingTimer = null;\n\t\t}\n\n\n\t\tprivate async void ExtractPosition()\n\t\t{\n\t\t\tvar mediaElem = this.AssociatedObject as MediaElement;\n\t\t\t\n\t\t\tawait this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Low,\n\t\t\t\t\t() => this.Position = mediaElem.Position);\n\t\t}\n\n\n\t\t#endregion\n\t}\n}\n```\n\n\u6c17\u8efd\u306bTimer\u30b9\u30ec\u30c3\u30c9\u3092\u4f5c\u3063\u305f\u308a\u6d88\u3057\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6c17\u306b\u306a\u308b\u5834\u5408\u306b\u306fCurrentState\u306eOpening\u3068Closed\u3067\u3060\u3051\u4f5c\u6210\u3068\u524a\u9664\u3092\u884c\u3048\u3070\u554f\u984c\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nSeekCompleted\u30a4\u30d9\u30f3\u30c8\u306b\u3082\u53cd\u5fdc\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30b7\u30fc\u30af\u5f8c\u306b\u3082Playing\u30b9\u30c6\u30fc\u30c8\u3078\u306e\u5909\u66f4\u304c\u547c\u3070\u308c\u308b\u3068\u601d\u3046\uff08\u52d5\u4f5c\u672a\u78ba\u8a8d\uff09\u306e\u3067\u4e0d\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nXaml\u3067\u5229\u7528\u3059\u308b\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\n```xml:MediaElementWithGetPosition\n<Page\n    x:Class=\"MyApp.Views.VideoPlayerPage\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    xmlns:i=\"using:Microsoft.Xaml.Interactivity\"\n    xmlns:core=\"using:Microsoft.Xaml.Interactions.Core\"\n    xmlns:mybehaviors=\"MyApp.Views.Behaviors\"\n    mc:Ignorable=\"d\">\n\n    <Grid>\n        <MediaElement Source=\"smile.mp4\">\n            <i:Interaction.Behaviors>\n                <mybehaviors:MediaElementExtractPositionBehavior \n                    Position=\"{Binding CurrentVideoPosition, Mode=TwoWay}\"\n                    Interval=\"00:00:00.016\" \n                    />\n            </i:Interaction.Behaviors>\n        </MediaElement>\n    </Grid>\n</Page>\n```\n\n\nPosition\u306bBinding\u3057\u3066\u3044\u308bCurrentVideoPosition\u306f\u3001VideoPlayerPage\u306eDataContext\u306b\u8a2d\u5b9a\u3059\u308bVideoPlayerPageViewModel\u4e0a\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nInterval\u306b\u306fTimeSpan\u578b\u306e\u56fa\u5b9a\u5024\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f0.016\u79d2(\u7d041/60\u79d2)\u3054\u3068\u306bPosition\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4ed6\u306b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u3053\u308d\u306f\u30b3\u30e1\u30f3\u30c8\u3082\u3089\u3048\u308c\u3070\u88dc\u8db3\u3057\u307e\u3059\u3002\n\n\n## \u53c2\u8003\nMediaElement\nhttps://msdn.microsoft.com/ja-jp/library/windows/apps/windows.ui.xaml.controls.mediaelement\n"}