{"context": " More than 1 year has passed since last update.\u30d5\u30a1\u30a4\u30eb/\u30d5\u30a9\u30eb\u30c0\u3092zip\u30d5\u30a1\u30a4\u30eb\u306b\u5727\u7e2e\u3067\u66f8\u3044\u305f\u5727\u7e2e\u95a2\u6570\u306e\u30da\u30a2\u3068\u306a\u308b\u89e3\u51cd\u306e\u95a2\u6570\u306e\u5b9f\u88c5\u3002\n\u5727\u7e2e\u306e\u95a2\u6570\u3068\u540c\u69d8\u306b\u3001Scripting.FileSystemObject\u3001Shell.Application\u3092\u4f7f\u7528\u3002\nzip\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u76f4\u63a5\u30b3\u30d4\u30fc\u3059\u308b\u5b9f\u88c5\u306b\u3057\u3088\u3046\u3068\u3057\u305f\u3051\u3069\u3001Scripting.FileSystemObject\u3067\u305d\u306e\u3088\u3046\u306a\u5b9f\u88c5\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4e00\u65e6\u3001zip\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u5168\u4f53\u3092\u30ef\u30fc\u30af\u30d5\u30a9\u30eb\u30c0\u306b\u89e3\u51cd\u3057\u3066\u3001\u89e3\u51cd\u3057\u305f\u30d5\u30a1\u30a4\u30eb/\u30d5\u30a9\u30eb\u30c0\u3092\u5c55\u958b\u5148\u306b\u79fb\u52d5\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3002\n\u5c55\u958b\u5148\u306e\u30d5\u30a9\u30eb\u30c0\u304c\u5b58\u5728\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u30b4\u30df\u30d5\u30a1\u30a4\u30eb\u304c\u6b8b\u308b\u306e\u3067\u524a\u9664\u3057\u3066\u304b\u3089\u5c55\u958b\u3057\u305f\u308a\u3057\u3066\u308b\u306e\u3067\u3001\u601d\u3063\u305f\u3088\u308a\u30b3\u30fc\u30c9\u304c\u5927\u304d\u304f\u306a\u3063\u305f\u3002\n\u5c55\u958b\u5148\u306e\u30d5\u30a9\u30eb\u30c0\u306f\u5f15\u6570(pthary)\u3067\u6307\u5b9a\u3002\u5f15\u6570unzipfld\u306fzip\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u5168\u4f53\u3092\u89e3\u51cd\u3059\u308b\u30ef\u30fc\u30af\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n\u30b3\u30fc\u30c9\nPublic Function unzip(pthary() As String, zippth As String, unzipfld As String) As Boolean\n    unzip = False\n    On Error GoTo Err\n    Dim sfo As Object, app As Object\n    Set sfo = CreateObject(\"Scripting.FileSystemObject\")\n    Set app = CreateObject(\"Shell.Application\")\n    If is_folder(unzipfld) = True Then\n        If delete_pth(unzipfld, sfo) = False Then\n            Exit Function\n        End If\n    ElseIf Dir(unzipfld, vbNormal) <> \"\" Then\n        Debug.Print \"unzip(): \u30d5\u30a9\u30eb\u30c0\u4ee5\u5916\u306e\u30d5\u30a1\u30a4\u30eb(\" & unzipfld & \")\u304c\u5b58\u5728\"\n        Exit Function\n    End If\n    MkDir unzipfld\n    Dim unzipfld_ As Variant, zippth_ As Variant\n    unzipfld_ = sfo.GetAbsolutePathName(unzipfld)\n    zippth_ = sfo.GetAbsolutePathName(zippth)\n    app.Namespace(unzipfld_).CopyHere app.Namespace(zippth_).items, &H4 Or &H10\n    unzip = move_pth4unzip(unzipfld_, pthary, sfo, app)\nErr:\n    If Err.Number <> 0 Then\n        Debug.Print \"unzip(): \" & Err.Description\n    End If\n    Set sfo = Nothing\n    Set app = Nothing\nEnd Function\n\nPrivate Function move_pth4unzip(unzipfld As Variant, pa() As String, sfo As Object, app As Object) As Boolean\n    move_pth4unzip = False\n    On Error GoTo Err\n    Dim idx As Long, maxidx As Long\n    maxidx = UBound(pa, 1)\n    Dim f As Variant\n    For Each f In app.Namespace(unzipfld).items\n        Debug.Print f.Name\n        For idx = 0 To maxidx\n            If basename(pa(idx)) = f.Name Then\n                Exit For\n            End If\n        Next\n        If idx <= maxidx Then\n            If move_pth4unzip1(CStr(unzipfld), f.Name, pa(idx), sfo) = False Then\n                Exit Function\n            End If\n        Else\n            Debug.Print \"move_pth4unzip(): \" & _\n                    \"zip\u30d5\u30a1\u30a4\u30eb\u306b\u5c55\u958b\u5bfe\u8c61\u5916\u30d5\u30a1\u30a4\u30eb(=\"\"\" & f.Name & \"\"\")\u304c\u542b\u307e\u308c\u3066\u3044\u305f:=>\u3092\u7121\u8996\"\n        End If\n    Next\n    move_pth4unzip = True\nErr:\n    If Err.Number <> 0 Then\n        Debug.Print \"move_pth4unzip(): \" & Err.Description\n    End If\nEnd Function\n\nPrivate Function move_pth4unzip1(fr_fld As String, fr_fn As String, to_pth As String, sfo As Object) As Boolean\n    move_pth4unzip1 = False\n    On Error GoTo Err\n    If Dir(to_pth) <> \"\" Or is_folder(to_pth) = True Then\n        If delete_pth(to_pth, sfo) = False Then\n            Exit Function\n        End If\n    End If\n    Dim fr_pth As String: fr_pth = fr_fld & \"\\\" & fr_fn\n    If is_folder(fr_pth) = True Then\n        sfo.MoveFolder fr_pth, to_pth\n    Else\n        sfo.MoveFile fr_pth, to_pth\n    End If\n    move_pth4unzip1 = True\nErr:\n    If Err.Number <> 0 Then\n        Debug.Print \"move_pth4unzip1(): \" & Err.Description\n    End If\nEnd Function\n\n'\u300c\u30d5\u30a1\u30a4\u30eb/\u30d5\u30a9\u30eb\u30c0\u3092zip\u30d5\u30a1\u30a4\u30eb\u306b\u5727\u7e2e\u300d\u306e\u8a18\u4e8b\u306b\u3042\u3063\u305f\u95a2\u6570\u3068\u540c\u3058\u95a2\u6570\n'\u21d2\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3044\u308b\n'Public Function is_folder(pth As String) As Boolean\n'    is_folder = CreateObject(\"Scripting.FileSystemObject\").FolderExists(pth)\n'End Function\n\nPublic Function basename(pth As String) As String\n    Dim pth_ As String: pth_ = Trim(pth)\n    If Right(pth_, Len(\"\\\")) = \"\\\" Then\n        pth_ = Left(pth_, Len(pth_) - Len(\"\\\"))\n    End If\n    Dim pos As Long\n    pos = InStrRev(pth_, \"\\\")\n    If pos <> 0 Then\n        basename = Right(pth_, Len(pth_) - pos)\n    Else\n        basename = pth_\n    End If\nEnd Function\n\nPublic Function delete_pth(pth As String, sfo As Object) As Boolean\n    delete_pth = False\n    On Error GoTo Err\n    If Dir(pth) = \"\" And is_folder(pth) = False Then\n        Debug.Print \"delete_pth(): \u5bfe\u8c61\u30d1\u30b9(\" & pth & \")\u304c\u5b58\u5728\u3057\u306a\u3044\"\n    Else\n        If is_folder(pth) = True Then\n            sfo.DeleteFolder pth\n        Else\n            Kill pth\n        End If\n    End If\n    delete_pth = True\nErr:\n    If Err.Number <> 0 Then\n        Debug.Print \"delete_pth(): \" & Err.Description\n    End If\nEnd Function\n\n[\u30d5\u30a1\u30a4\u30eb/\u30d5\u30a9\u30eb\u30c0\u3092zip\u30d5\u30a1\u30a4\u30eb\u306b\u5727\u7e2e](http://qiita.com/kou_tana77/items/72346c69107fabf99335)\u3067\u66f8\u3044\u305f\u5727\u7e2e\u95a2\u6570\u306e\u30da\u30a2\u3068\u306a\u308b\u89e3\u51cd\u306e\u95a2\u6570\u306e\u5b9f\u88c5\u3002\n\n\u5727\u7e2e\u306e\u95a2\u6570\u3068\u540c\u69d8\u306b\u3001Scripting.FileSystemObject\u3001Shell.Application\u3092\u4f7f\u7528\u3002\n\nzip\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u76f4\u63a5\u30b3\u30d4\u30fc\u3059\u308b\u5b9f\u88c5\u306b\u3057\u3088\u3046\u3068\u3057\u305f\u3051\u3069\u3001Scripting.FileSystemObject\u3067\u305d\u306e\u3088\u3046\u306a\u5b9f\u88c5\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4e00\u65e6\u3001zip\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u5168\u4f53\u3092\u30ef\u30fc\u30af\u30d5\u30a9\u30eb\u30c0\u306b\u89e3\u51cd\u3057\u3066\u3001\u89e3\u51cd\u3057\u305f\u30d5\u30a1\u30a4\u30eb/\u30d5\u30a9\u30eb\u30c0\u3092\u5c55\u958b\u5148\u306b\u79fb\u52d5\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3002\n\u5c55\u958b\u5148\u306e\u30d5\u30a9\u30eb\u30c0\u304c\u5b58\u5728\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u30b4\u30df\u30d5\u30a1\u30a4\u30eb\u304c\u6b8b\u308b\u306e\u3067\u524a\u9664\u3057\u3066\u304b\u3089\u5c55\u958b\u3057\u305f\u308a\u3057\u3066\u308b\u306e\u3067\u3001\u601d\u3063\u305f\u3088\u308a\u30b3\u30fc\u30c9\u304c\u5927\u304d\u304f\u306a\u3063\u305f\u3002\n\u5c55\u958b\u5148\u306e\u30d5\u30a9\u30eb\u30c0\u306f\u5f15\u6570(pthary)\u3067\u6307\u5b9a\u3002\u5f15\u6570unzipfld\u306fzip\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u5168\u4f53\u3092\u89e3\u51cd\u3059\u308b\u30ef\u30fc\u30af\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n#\u30b3\u30fc\u30c9\n\n```vb\nPublic Function unzip(pthary() As String, zippth As String, unzipfld As String) As Boolean\n    unzip = False\n    On Error GoTo Err\n    Dim sfo As Object, app As Object\n    Set sfo = CreateObject(\"Scripting.FileSystemObject\")\n    Set app = CreateObject(\"Shell.Application\")\n    If is_folder(unzipfld) = True Then\n        If delete_pth(unzipfld, sfo) = False Then\n            Exit Function\n        End If\n    ElseIf Dir(unzipfld, vbNormal) <> \"\" Then\n        Debug.Print \"unzip(): \u30d5\u30a9\u30eb\u30c0\u4ee5\u5916\u306e\u30d5\u30a1\u30a4\u30eb(\" & unzipfld & \")\u304c\u5b58\u5728\"\n        Exit Function\n    End If\n    MkDir unzipfld\n    Dim unzipfld_ As Variant, zippth_ As Variant\n    unzipfld_ = sfo.GetAbsolutePathName(unzipfld)\n    zippth_ = sfo.GetAbsolutePathName(zippth)\n    app.Namespace(unzipfld_).CopyHere app.Namespace(zippth_).items, &H4 Or &H10\n    unzip = move_pth4unzip(unzipfld_, pthary, sfo, app)\nErr:\n    If Err.Number <> 0 Then\n        Debug.Print \"unzip(): \" & Err.Description\n    End If\n    Set sfo = Nothing\n    Set app = Nothing\nEnd Function\n\nPrivate Function move_pth4unzip(unzipfld As Variant, pa() As String, sfo As Object, app As Object) As Boolean\n    move_pth4unzip = False\n    On Error GoTo Err\n    Dim idx As Long, maxidx As Long\n    maxidx = UBound(pa, 1)\n    Dim f As Variant\n    For Each f In app.Namespace(unzipfld).items\n        Debug.Print f.Name\n        For idx = 0 To maxidx\n            If basename(pa(idx)) = f.Name Then\n                Exit For\n            End If\n        Next\n        If idx <= maxidx Then\n            If move_pth4unzip1(CStr(unzipfld), f.Name, pa(idx), sfo) = False Then\n                Exit Function\n            End If\n        Else\n            Debug.Print \"move_pth4unzip(): \" & _\n                    \"zip\u30d5\u30a1\u30a4\u30eb\u306b\u5c55\u958b\u5bfe\u8c61\u5916\u30d5\u30a1\u30a4\u30eb(=\"\"\" & f.Name & \"\"\")\u304c\u542b\u307e\u308c\u3066\u3044\u305f:=>\u3092\u7121\u8996\"\n        End If\n    Next\n    move_pth4unzip = True\nErr:\n    If Err.Number <> 0 Then\n        Debug.Print \"move_pth4unzip(): \" & Err.Description\n    End If\nEnd Function\n\nPrivate Function move_pth4unzip1(fr_fld As String, fr_fn As String, to_pth As String, sfo As Object) As Boolean\n    move_pth4unzip1 = False\n    On Error GoTo Err\n    If Dir(to_pth) <> \"\" Or is_folder(to_pth) = True Then\n        If delete_pth(to_pth, sfo) = False Then\n            Exit Function\n        End If\n    End If\n    Dim fr_pth As String: fr_pth = fr_fld & \"\\\" & fr_fn\n    If is_folder(fr_pth) = True Then\n        sfo.MoveFolder fr_pth, to_pth\n    Else\n        sfo.MoveFile fr_pth, to_pth\n    End If\n    move_pth4unzip1 = True\nErr:\n    If Err.Number <> 0 Then\n        Debug.Print \"move_pth4unzip1(): \" & Err.Description\n    End If\nEnd Function\n\n'\u300c\u30d5\u30a1\u30a4\u30eb/\u30d5\u30a9\u30eb\u30c0\u3092zip\u30d5\u30a1\u30a4\u30eb\u306b\u5727\u7e2e\u300d\u306e\u8a18\u4e8b\u306b\u3042\u3063\u305f\u95a2\u6570\u3068\u540c\u3058\u95a2\u6570\n'\u21d2\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3044\u308b\n'Public Function is_folder(pth As String) As Boolean\n'    is_folder = CreateObject(\"Scripting.FileSystemObject\").FolderExists(pth)\n'End Function\n\nPublic Function basename(pth As String) As String\n    Dim pth_ As String: pth_ = Trim(pth)\n    If Right(pth_, Len(\"\\\")) = \"\\\" Then\n        pth_ = Left(pth_, Len(pth_) - Len(\"\\\"))\n    End If\n    Dim pos As Long\n    pos = InStrRev(pth_, \"\\\")\n    If pos <> 0 Then\n        basename = Right(pth_, Len(pth_) - pos)\n    Else\n        basename = pth_\n    End If\nEnd Function\n\nPublic Function delete_pth(pth As String, sfo As Object) As Boolean\n    delete_pth = False\n    On Error GoTo Err\n    If Dir(pth) = \"\" And is_folder(pth) = False Then\n        Debug.Print \"delete_pth(): \u5bfe\u8c61\u30d1\u30b9(\" & pth & \")\u304c\u5b58\u5728\u3057\u306a\u3044\"\n    Else\n        If is_folder(pth) = True Then\n            sfo.DeleteFolder pth\n        Else\n            Kill pth\n        End If\n    End If\n    delete_pth = True\nErr:\n    If Err.Number <> 0 Then\n        Debug.Print \"delete_pth(): \" & Err.Description\n    End If\nEnd Function\n```\n", "tags": ["VBA"]}