{"tags": ["MacOSX", "Objective-C", "RSS"], "context": " More than 1 year has passed since last update.\u300a\u7c21\u6613RSS\u30ea\u30fc\u30c0\u30fc\u3092\u4f5c\u3063\u3066\u307f\u305f \u301c Objective-C\u7de8 \u301c\u300b\u306eMacOS X \u7528\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u307b\u3093\u306e\u5c11\u3057\u6539\u9020\u3057\u3066\u3001Reuters: \u30c8\u30c3\u30d7\u30cb\u30e5\u30fc\u30b9\u3092Kyoko\u3055\u3093\u306b\u8aad\u307f\u4e0a\u3052\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\n\u30c6\u30ad\u30b9\u30c8\u306e\u8aad\u307f\u4e0a\u3052\nOS X \u306e Command Line Tool \u3067\u30c6\u30ad\u30b9\u30c8\u306e\u8aad\u307f\u4e0a\u3052\u3092\u884c\u3046\u305f\u3081\u306b\u306f\u3001AppKit \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066 NSSpeechSynthesizer \u3092\u4f7f\u3044\u307e\u3059\u3002\n#import <AppKit/AppKit.h>\n\nNSSpeechSynthesizer \u306e\u751f\u6210\u30fb\u521d\u671f\u5316\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u97f3\u58f0\u3001\u8aad\u307f\u4e0a\u3052\u901f\u5ea6\u3001\u97f3\u91cf\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nNSSpeechSynthesizer *speechSynth = [[NSSpeechSynthesizer alloc] initWithVoice:nil];\n[speechSynth setVoice:@\"com.apple.speech.synthesis.voice.kyoko\"];\n[speechSynth setRate:240];\n[speechSynth setVolume:0.9];\n\n\u8aad\u307f\u4e0a\u3052\u306f startSpeakinkString \u3067\u958b\u59cb\u3057\u3066\u3001\u4e00\u65e6\u30b9\u30ea\u30fc\u30d7(\u3057\u306a\u3044\u3068\u8aad\u307f\u4e0a\u3052\u304c\u958b\u59cb\u3055\u308c\u306a\u3044\u6a21\u69d8)\u3001\u8aad\u307f\u4e0a\u3052\u304c\u5b8c\u4e86\u3057\u3066 isSpeaking \u306e\u5024\u304cNO\u306b\u306a\u308b\u307e\u3067\u5f85\u3061\u307e\u3059 (\u3061\u306a\u307f\u306b\u3001Cocoa\u30a2\u30d7\u30ea\u3060\u3068\u8aad\u307f\u4e0a\u3052\u304c\u7d42\u308f\u308b\u3068 didFinishSpeaking \u304c\u547c\u3073\u51fa\u3055\u308c\u308b)\u3002\n[speechSynth startSpeakingString:title];\nsleep(1);\nwhile([speechSynth isSpeaking] == YES) {\n    usleep(1000);\n}\n\n\n\u30c6\u30ad\u30b9\u30c8\u306e\u62bd\u51fa\nRSS\u30d5\u30a3\u30fc\u30c9\u306e\u8a18\u4e8b\u306e\u4e2d\u306b\u306f\u30ea\u30f3\u30af\u60c5\u5831\u306a\u3069\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u305d\u306e\u307e\u307eNSSpeechSynthesizer\u306b\u6e21\u3059\u3068\u3001\u610f\u5473\u4e0d\u660e\u306a\u546a\u6587\u306e\u8a60\u5531\u304c\u884c\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u56f0\u308b\u306e\u3067(description)\u3092 NSAttributedString\u3092\u4f7f\u3063\u3066\u53d6\u5f97\u3057\u305f\u8a18\u4e8b\u304b\u3089\u8aad\u307f\u4e0a\u3052\u53ef\u80fd\u306a\u30c6\u30b9\u30c8\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\n NSData *data = [description dataUsingEncoding:NSUTF16StringEncoding];\n NSAttributedString *as = [[NSAttributedString alloc] initWithHTML:data options:nil documentAttributes:nil];\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u307e\u3042\u3001\u3053\u3093\u306a\u3082\u306e\u3067\u3057\u3087\u3046\u304b(\u624b\u629c\u304d)\u3002\n#import <Foundation/Foundation.h>\n#import <AppKit/AppKit.h>\n\n#define PATH @\"http://feeds.reuters.com/reuters/JPTopNews\"\n\nint speech_rss(NSXMLDocument*);\n\nint main(int argc, const char * argv[]) {\n    @autoreleasepool {\n        // Download RSS feed.\n        NSURL           *url = [NSURL URLWithString:PATH];\n        NSURLRequest    *urlRequest = [NSURLRequest requestWithURL:url\n                                                       cachePolicy:NSURLRequestReloadRevalidatingCacheData\n                                                   timeoutInterval:30];\n\n        NSData          *urlData;\n        NSURLResponse   *response;\n        NSError         *error;\n        urlData = [NSURLConnection sendSynchronousRequest:urlRequest\n                                        returningResponse:&response\n                                                    error:&error];\n        if (!urlData) {\n            printf(\"failed to url request.\");\n        }\n        //NSString* xmlString = [[NSString alloc] initWithData:urlData encoding:NSUTF8StringEncoding];\n        //NSLog(@\"doc\\n%@\\n\", xmlString);\n\n        // Create XML Document fron urlData\n        NSXMLDocument   *doc;\n        doc = [[NSXMLDocument alloc] initWithData:urlData\n                                          options:0\n                                            error:&error];\n        if (!doc) {\n            printf(\"failed to create xml doc.\");\n            return 1;\n        }\n\n        // speech RSS Feed.\n        speech_rss(doc);\n        return 0;\n    }\n}\n\nint speech_rss(NSXMLDocument    *doc) {\n    NSError         *error;\n\n    // Initialize speech Synthesizer.\n    NSSpeechSynthesizer *speechSynth = [[NSSpeechSynthesizer alloc] initWithVoice:nil];\n    [speechSynth setVoice:@\"com.apple.speech.synthesis.voice.kyoko\"];\n    [speechSynth setRate:240];      // default value : 180.0\n    [speechSynth setVolume:0.9];    // default value : 1.0\n    //NSLog(@\"speechSynth: %f %f %@\", [speechSynth rate], [speechSynth volume], [speechSynth voice]);\n\n    // Get and print Title of RSS Feed.\n    NSArray *channelNodes = [doc nodesForXPath:@\"//channel\" error:&error];\n    if (!channelNodes) {\n        return -1;\n    }\n    for (NSXMLElement* element in channelNodes) {\n        if ([element kind] != NSXMLElementKind) {\n            continue;\n        }\n        NSArray*    children = [element children];\n        NSString*   title;\n        for (NSXMLNode* node in children) {\n            if ([[node name] isEqualToString:@\"title\"]) {\n                title = [node stringValue];\n                printf(\"\\nTitle: %s\\n\\n\", [title cStringUsingEncoding:NSUTF8StringEncoding]);\n                [speechSynth startSpeakingString:title];\n                sleep(1);\n                while([speechSynth isSpeaking] == YES) {\n                    usleep(1000);\n                }\n            }\n        }\n    }\n\n    // Get Node list of RSS items.\n    NSArray *itemNodes = [doc nodesForXPath:@\"//item\" error:&error];\n    if (!itemNodes) {\n        return -1;\n    }\n    for (NSXMLElement* element in itemNodes) {\n        if ([element kind] != NSXMLElementKind) {\n            continue;\n        }\n        NSArray*    children = [element children];\n        NSString*   title;\n        NSString*   description;\n        for (NSXMLNode* node in children) {\n            if ([[node name] isEqualToString:@\"title\"]) {\n                title = [node stringValue];\n            } else if ([[node name] isEqualToString:@\"description\"]) {\n                description = [node stringValue];\n            }\n        }\n\n        // Extract readable text.\n        printf(\"title:   %s\\n\", [title cStringUsingEncoding:NSUTF8StringEncoding]);\n        NSString* speechText = nil;\n        NSData *data = [description dataUsingEncoding:NSUTF16StringEncoding];\n        NSAttributedString *as = [[NSAttributedString alloc] initWithHTML:data options:nil documentAttributes:nil];\n        if (as) {\n            speechText = [[NSString alloc] initWithFormat:@\"%@ \\n %@ \", title, [as string]];\n            printf(\"article: %s\\n\", [[as string] cStringUsingEncoding:NSUTF8StringEncoding]);\n        } else {\n            speechText = [[NSString alloc] initWithFormat:@\"%@ \\n %@ \", title, description];\n            printf(\"article: %s\\n\", [description cStringUsingEncoding:NSUTF8StringEncoding]);\n        }\n\n        // Speach extracted text.\n        [speechSynth startSpeakingString:speechText];\n        sleep(1);\n        while([speechSynth isSpeaking] == YES) {\n            usleep(10000);\n        }\n        usleep(10000);\n    }\n    return 0;\n}\n\n\n\u30c7\u30e2\n\u305f\u306c\u304d\u3077\u308d\u3058\u3047\u304f\u3068\u3067\u306f\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066RSS\u30d5\u30a3\u30fc\u30c9\u3092\u8aad\u307f\u4e0a\u3052\u308b\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059 (O\u25bdO)\n\u3010YouTube\u30c7\u30e2\u3011\n\n\n\u300a[\u7c21\u6613RSS\u30ea\u30fc\u30c0\u30fc\u3092\u4f5c\u3063\u3066\u307f\u305f \u301c Objective-C\u7de8 \u301c](http://qiita.com/tanuki-project/items/8dd4530ab627831950eb)\u300b\u306eMacOS X \u7528\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u307b\u3093\u306e\u5c11\u3057\u6539\u9020\u3057\u3066\u3001[Reuters: \u30c8\u30c3\u30d7\u30cb\u30e5\u30fc\u30b9](http://feeds.reuters.com/reuters/JPTopNews)\u3092[Kyoko\u3055\u3093](http://news.mynavi.jp/column/osxhack/038/)\u306b\u8aad\u307f\u4e0a\u3052\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\n#\u30c6\u30ad\u30b9\u30c8\u306e\u8aad\u307f\u4e0a\u3052\n\nOS X \u306e Command Line Tool \u3067\u30c6\u30ad\u30b9\u30c8\u306e\u8aad\u307f\u4e0a\u3052\u3092\u884c\u3046\u305f\u3081\u306b\u306f\u3001AppKit \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066 [NSSpeechSynthesizer](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSSpeechSynthesizer_Class/History.html) \u3092\u4f7f\u3044\u307e\u3059\u3002\n\n    #import <AppKit/AppKit.h>\n\nNSSpeechSynthesizer \u306e\u751f\u6210\u30fb\u521d\u671f\u5316\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u97f3\u58f0\u3001\u8aad\u307f\u4e0a\u3052\u901f\u5ea6\u3001\u97f3\u91cf\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n    NSSpeechSynthesizer *speechSynth = [[NSSpeechSynthesizer alloc] initWithVoice:nil];\n    [speechSynth setVoice:@\"com.apple.speech.synthesis.voice.kyoko\"];\n    [speechSynth setRate:240];\n    [speechSynth setVolume:0.9];\n\n\u8aad\u307f\u4e0a\u3052\u306f startSpeakinkString \u3067\u958b\u59cb\u3057\u3066\u3001\u4e00\u65e6\u30b9\u30ea\u30fc\u30d7(\u3057\u306a\u3044\u3068\u8aad\u307f\u4e0a\u3052\u304c\u958b\u59cb\u3055\u308c\u306a\u3044\u6a21\u69d8)\u3001\u8aad\u307f\u4e0a\u3052\u304c\u5b8c\u4e86\u3057\u3066 isSpeaking \u306e\u5024\u304cNO\u306b\u306a\u308b\u307e\u3067\u5f85\u3061\u307e\u3059 (\u3061\u306a\u307f\u306b\u3001Cocoa\u30a2\u30d7\u30ea\u3060\u3068\u8aad\u307f\u4e0a\u3052\u304c\u7d42\u308f\u308b\u3068 didFinishSpeaking \u304c\u547c\u3073\u51fa\u3055\u308c\u308b)\u3002\n\n    [speechSynth startSpeakingString:title];\n    sleep(1);\n    while([speechSynth isSpeaking] == YES) {\n        usleep(1000);\n    }\n\n#\u30c6\u30ad\u30b9\u30c8\u306e\u62bd\u51fa\n\nRSS\u30d5\u30a3\u30fc\u30c9\u306e\u8a18\u4e8b\u306e\u4e2d\u306b\u306f\u30ea\u30f3\u30af\u60c5\u5831\u306a\u3069\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u305d\u306e\u307e\u307eNSSpeechSynthesizer\u306b\u6e21\u3059\u3068\u3001\u610f\u5473\u4e0d\u660e\u306a\u546a\u6587\u306e\u8a60\u5531\u304c\u884c\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u56f0\u308b\u306e\u3067(description)\u3092 [NSAttributedString](https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSAttributedString_Class/index.html)\u3092\u4f7f\u3063\u3066\u53d6\u5f97\u3057\u305f\u8a18\u4e8b\u304b\u3089\u8aad\u307f\u4e0a\u3052\u53ef\u80fd\u306a\u30c6\u30b9\u30c8\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\n\n     NSData *data = [description dataUsingEncoding:NSUTF16StringEncoding];\n     NSAttributedString *as = [[NSAttributedString alloc] initWithHTML:data options:nil documentAttributes:nil];\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u307e\u3042\u3001\u3053\u3093\u306a\u3082\u306e\u3067\u3057\u3087\u3046\u304b(\u624b\u629c\u304d)\u3002\n\n\t#import <Foundation/Foundation.h>\n\t#import <AppKit/AppKit.h>\n\t\n\t#define PATH @\"http://feeds.reuters.com/reuters/JPTopNews\"\n\t\n\tint speech_rss(NSXMLDocument*);\n\t\n\tint main(int argc, const char * argv[]) {\n\t    @autoreleasepool {\n\t        // Download RSS feed.\n\t        NSURL           *url = [NSURL URLWithString:PATH];\n\t        NSURLRequest    *urlRequest = [NSURLRequest requestWithURL:url\n\t                                                       cachePolicy:NSURLRequestReloadRevalidatingCacheData\n\t                                                   timeoutInterval:30];\n\t        \n\t        NSData\t\t\t*urlData;\n\t        NSURLResponse\t*response;\n\t        NSError\t\t\t*error;\n\t        urlData = [NSURLConnection sendSynchronousRequest:urlRequest\n\t                                        returningResponse:&response\n\t                                                    error:&error];\n\t        if (!urlData) {\n\t            printf(\"failed to url request.\");\n\t        }\n\t        //NSString* xmlString = [[NSString alloc] initWithData:urlData encoding:NSUTF8StringEncoding];\n\t        //NSLog(@\"doc\\n%@\\n\", xmlString);\n\t\n\t        // Create XML Document fron urlData\n\t        NSXMLDocument\t*doc;\n\t        doc = [[NSXMLDocument alloc] initWithData:urlData\n\t                                          options:0\n\t                                            error:&error];\n\t        if (!doc) {\n\t            printf(\"failed to create xml doc.\");\n\t            return 1;\n\t        }\n\t        \n\t        // speech RSS Feed.\n\t        speech_rss(doc);\n\t        return 0;\n\t    }\n\t}\n\t\n\tint speech_rss(NSXMLDocument\t*doc) {\n\t    NSError\t\t\t*error;\n\t\n\t    // Initialize speech Synthesizer.\n\t    NSSpeechSynthesizer *speechSynth = [[NSSpeechSynthesizer alloc] initWithVoice:nil];\n\t    [speechSynth setVoice:@\"com.apple.speech.synthesis.voice.kyoko\"];\n\t    [speechSynth setRate:240];      // default value : 180.0\n\t    [speechSynth setVolume:0.9];    // default value : 1.0\n\t    //NSLog(@\"speechSynth: %f %f %@\", [speechSynth rate], [speechSynth volume], [speechSynth voice]);\n\t\n\t    // Get and print Title of RSS Feed.\n\t    NSArray *channelNodes = [doc nodesForXPath:@\"//channel\" error:&error];\n\t    if (!channelNodes) {\n\t        return -1;\n\t    }\n\t    for (NSXMLElement* element in channelNodes) {\n\t        if ([element kind] != NSXMLElementKind) {\n\t            continue;\n\t        }\n\t        NSArray*    children = [element children];\n\t        NSString*   title;\n\t        for (NSXMLNode* node in children) {\n\t            if ([[node name] isEqualToString:@\"title\"]) {\n\t                title = [node stringValue];\n\t                printf(\"\\nTitle: %s\\n\\n\", [title cStringUsingEncoding:NSUTF8StringEncoding]);\n\t                [speechSynth startSpeakingString:title];\n\t                sleep(1);\n\t                while([speechSynth isSpeaking] == YES) {\n\t                    usleep(1000);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    \n\t    // Get Node list of RSS items.\n\t    NSArray *itemNodes = [doc nodesForXPath:@\"//item\" error:&error];\n\t    if (!itemNodes) {\n\t        return -1;\n\t    }\n\t    for (NSXMLElement* element in itemNodes) {\n\t        if ([element kind] != NSXMLElementKind) {\n\t            continue;\n\t        }\n\t        NSArray*    children = [element children];\n\t        NSString*   title;\n\t        NSString*   description;\n\t        for (NSXMLNode* node in children) {\n\t            if ([[node name] isEqualToString:@\"title\"]) {\n\t                title = [node stringValue];\n\t            } else if ([[node name] isEqualToString:@\"description\"]) {\n\t                description = [node stringValue];\n\t            }\n\t        }\n\t        \n\t        // Extract readable text.\n\t        printf(\"title:   %s\\n\", [title cStringUsingEncoding:NSUTF8StringEncoding]);\n\t        NSString* speechText = nil;\n\t        NSData *data = [description dataUsingEncoding:NSUTF16StringEncoding];\n\t        NSAttributedString *as = [[NSAttributedString alloc] initWithHTML:data options:nil documentAttributes:nil];\n\t        if (as) {\n\t            speechText = [[NSString alloc] initWithFormat:@\"%@ \\n %@ \", title, [as string]];\n\t            printf(\"article: %s\\n\", [[as string] cStringUsingEncoding:NSUTF8StringEncoding]);\n\t        } else {\n\t            speechText = [[NSString alloc] initWithFormat:@\"%@ \\n %@ \", title, description];\n\t            printf(\"article: %s\\n\", [description cStringUsingEncoding:NSUTF8StringEncoding]);\n\t        }\n\t\n\t        // Speach extracted text.\n\t        [speechSynth startSpeakingString:speechText];\n\t        sleep(1);\n\t        while([speechSynth isSpeaking] == YES) {\n\t            usleep(10000);\n\t        }\n\t        usleep(10000);\n\t    }\n\t    return 0;\n\t}\n\n#\u30c7\u30e2\n\n**\u305f\u306c\u304d\u3077\u308d\u3058\u3047\u304f\u3068**\u3067\u306f\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066RSS\u30d5\u30a3\u30fc\u30c9\u3092\u8aad\u307f\u4e0a\u3052\u308b[\u30a2\u30d7\u30ea](https://itunes.apple.com/jp/app/furippufido-lite/id668578254?mt=12)\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059 (O\u25bdO)\n\n\u3010YouTube\u30c7\u30e2\u3011\n[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/XS-1kCwSDJg/0.jpg)](http://www.youtube.com/watch?v=XS-1kCwSDJg)\n"}