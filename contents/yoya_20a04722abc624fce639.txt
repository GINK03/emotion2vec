{"context": " More than 1 year has passed since last update.nginx Advent Calendar 2015 \u306e6\u65e5\u76ee\u3067\u3059\u3002\n\nhttp://qiita.com/advent-calendar/2015/nginx\n\n\n\u306f\u3058\u3081\u306b\nnginx \u306e cache \u3067\u30c7\u30a3\u30b9\u30af\u304c\u6ea2\u308c\u3066\u306f\u5927\u5909\u3067\u3059\u306e\u3067\u3001\u30c7\u30fc\u30bf\u4f7f\u7528\u91cf\u306e\u5236\u9650\u306e\u4ed5\u65b9\u304c\u6c17\u306b\u306a\u308a\u307e\u3059\u3088\u306d\u3002\n\n\nhttp://www.slideshare.net/Nginx/nginx-highperformance-caching/19\n\n\n\n\u3053\u306e\u8cc7\u6599\u306b\u3088\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u6d88\u3048\u308b\u305d\u3046\u3067\u3059\u3002\n\n\u671f\u9650\u306e\u5207\u308c\u305f\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6d88\u3059 (\u4f8b\u3067\u306f10\u5206)\nmax_size \u304b\u3089\u6ea2\u308c\u308b\u5834\u5408\u306f LRU \u3067\u6d88\u3059\n\n\n\u7591\u554f\n\n\u3069\u3046\u3044\u3046\u30bf\u30a4\u30df\u30f3\u30b0\u6d88\u3059\u3093\u3060\u308d\u3046\n\u5177\u4f53\u7684\u306b\u3069\u3046\u3084\u3063\u3066\u6d88\u3057\u3066\u308b\u3093\u3060\u308d\u3046\n\n\u3068\u3044\u3046\u6240\u304c\u6c17\u306b\u306a\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u30bd\u30fc\u30b9\u3092\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002\n\nnginx-1.9.1 \u306e\u30bd\u30fc\u30b9\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6d88\u3059\u30bf\u30a4\u30df\u30f3\u30b0\n\u30bf\u30a4\u30de\u30fc\u3067\u56de\u3057\u3066\u308b\u307f\u305f\u3044\u3067\u3059\u3002\u305f\u3060\u3057\u6d88\u3048\u5177\u5408\u306b\u3088\u3063\u3066\u9593\u9694\u3092\u5897\u6e1b\u3057\u3066\u307e\u3059\u3002\n\nsrc/os/unix/ngx_process_cycle.c\nngx_cache_manager_process_handler(ngx_event_t *ev)\n{\n    time_t        next, n;\n    ngx_uint_t    i;\n    ngx_path_t  **path;\n\n    next = 60 * 60;\n\n    path = ngx_cycle->paths.elts;\n    for (i = 0; i < ngx_cycle->paths.nelts; i++) {\n\n        if (path[i]->manager) {\n            n = path[i]->manager(path[i]->data);\n\n            next = (n <= next) ? n : next;\n\n            ngx_time_update();\n        }\n    }\n\n    if (next == 0) {\n        next = 1;\n    }\n\n    ngx_add_timer(ev, next * 1000);\n}\n\n\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6d88\u3059\u51e6\u7406\n\u671f\u9650\u5207\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u3066\u3001max_size \u3092\u8d85\u3048\u3066\u308b\u5834\u5408\u306f\u66f4\u306b\u671f\u9650\u304c\u5207\u308c\u3066\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3082\u524a\u9664\u3057\u307e\u3059\u3002\n\nsrc/http/ngx_http_file_cache.c\nstatic time_t\nngx_http_file_cache_manager(void *data)\n{\n    ngx_http_file_cache_t  *cache = data;\n\n    off_t   size;\n    time_t  next, wait;\n\n    next = ngx_http_file_cache_expire(cache);\n\n    cache->last = ngx_current_msec;\n    cache->files = 0;\n\n    for ( ;; ) {\n    ngx_shmtx_lock(&cache->shpool->mutex);\n\n    size = cache->sh->size;\n\n        ngx_shmtx_unlock(&cache->shpool->mutex);\n\n    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, ngx_cycle->log, 0,\n                       \"http file cache size: %O\", size);\n\n        if (size < cache->max_size) {\n            return next;\n        }\n\n        wait = ngx_http_file_cache_forced_expire(cache);\n\n        if (wait > 0) {\n            return wait;\n    }\n\n        if (ngx_quit || ngx_terminate) {\n            return next;\n        }\n    }\n}\n\n\n\n\u671f\u9650\u5207\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\nngx_http_file_cache_expire\nqueue \u306b\u4e26\u3093\u3067\u3044\u308b\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5f8c\u306e\u30a8\u30f3\u30c8\u30ea\u304b\u3089\u66f4\u65b0\u5207\u308c\u3057\u3066\u308b\u5206\u3092\u524a\u9664\u3057\u307e\u3059\u3002\n\nngx_http_file_cache.c\nstatic time_t\nngx_http_file_cache_expire(ngx_http_file_cache_t *cache)\n\uff1c\u7565\uff1e\n    for ( ;; ) {\n\uff1c\u7565\uff1e\n        q = ngx_queue_last(&cache->sh->queue);\n\n        fcn = ngx_queue_data(q, ngx_http_file_cache_node_t, queue);\n\n        wait = fcn->expire - now;\n\n        if (wait > 0) {\n            wait = wait > 10 ? 10 : wait;\n            break;\n        }\n\uff1c\u7565\uff1e\n        if (fcn->count == 0) {\n            ngx_http_file_cache_delete(cache, q, name);\n            continue;\n        }\n\n\n\nmax_size \u3092\u8d85\u3048\u3066\u308b\u5834\u5408\u306f\u66f4\u306b\u524a\u9664\n\u3053\u3061\u3089\u306f queue \u306e\u6700\u5f8c\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u524a\u9664\u3067\u3059\u306d\u3002\nLRU \u306a\u306e\u3067\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u5ea6\u306b queue \u306e\u624b\u524d\u306b\u4e26\u3073\u76f4\u305b\u3070\u3001\u305d\u308c\u3067\u826f\u3055\u305d\u3046\u3002\n\nngx_http_file_cache.c\nstatic time_t\nngx_http_file_cache_forced_expire(ngx_http_file_cache_t *cache)\n\uff1c\u7565\uff1e\n    for (q = ngx_queue_last(&cache->sh->queue);\n         q != ngx_queue_sentinel(&cache->sh->queue);\n         q = ngx_queue_prev(q))\n    {\n        fcn = ngx_queue_data(q, ngx_http_file_cache_node_t, queue);\n\n        ngx_log_debug6(NGX_LOG_DEBUG_HTTP, ngx_cycle->log, 0,\n                  \"http file cache forced expire: #%d %d %02xd%02xd%02xd%02xd\",\n                  fcn->count, fcn->exists,\n                  fcn->key[0], fcn->key[1], fcn->key[2], fcn->key[3]);\n\n        if (fcn->count == 0) {\n            ngx_http_file_cache_delete(cache, q, name);\n            wait = 0;\n\n        } else {\n            if (--tries) {\n                continue;\n            }\n\n            wait = 1;\n        }\n\n        break;\n    }\n\n\n\n\u6700\u5f8c\u306b\n\u3064\u307e\u308a\u3001\u30bf\u30a4\u30de\u30fc\u3067\u524a\u9664\u3057\u3066\u3066\u3001\u30b5\u30a4\u30ba\u3092\u8d85\u3048\u3066\u305f\u3089\u6307\u5b9a\u5206\u306b\u53ce\u307e\u308b\u307e\u3067\u524a\u9664\u3068\u3044\u3046\u51e6\u7406\u306a\u306e\u3067\u3001\u78ba\u5b9f\u306b\u6307\u5b9a\u3057\u305f\u30b5\u30a4\u30ba\u3092\u8d85\u3048\u306a\u3044\u3068\u3044\u3046\u306e\u306f\u7121\u7406\u306b\u898b\u3048\u307e\u3059\u3002\u307e\u3041\u3067\u3082\u3001100%\u30ae\u30ea\u30ae\u30ea\u30c7\u30a3\u30b9\u30af\u3092\u4f7f\u3046\u3068\u6027\u80fd\u306e\u554f\u984c\u304c\u51fa\u3066\u304f\u308b\u306e\u3067(zfs \u306a\u3093\u306690%\u8d85\u3048\u308b\u3068\u9014\u7aef\u306b LA \u304c\u8df3\u306d\u4e0a\u304c\u308b\u3057)\u3001\u666e\u901a\u306b\u4f7f\u3046\u5206\u306b\u306f\u305d\u3093\u306a\u306b\u6c17\u306b\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u3042\u3068\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u6539\u3081\u3066\u6c17\u306b\u306a\u308b\u6240\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\nLRU \u304c queue \u306a\u306e\u306f\u5206\u304b\u308a\u3084\u3059\u3044\u3051\u3069\u3001expire \u306e\u51e6\u7406\u3092 queue \u3067\u3069\u3046\u3084\u3063\u3066\u5b9f\u88c5\u3059\u308b\u306e\uff1f\n\u305d\u3082\u305d\u3082 queue \u306e\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u306f\u826f\u3044\u3068\u3057\u3066\u771f\u3093\u4e2d\u304b\u3089\u53d6\u308a\u51fa\u3057\u3061\u3083\u3063\u3066\u826f\u3044\u306e\uff1f\nqueue \u30a8\u30f3\u30c8\u30ea\u306e count \u304c\u5927\u4e8b\u3063\u307d\u3044\u3051\u3069\u3001\u3053\u308c\u3063\u3066\u4f55\uff1f\u3068\u304b\u3002\n\u8981\u671b\u304c\u3042\u308c\u3070\u3001\u305d\u306e\u3046\u3061\u89e3\u8aac\u3057\u307e\u3059\u3002\nnginx Advent Calendar 2015 \u306e6\u65e5\u76ee\u3067\u3059\u3002\n\n- http://qiita.com/advent-calendar/2015/nginx\n\n# \u306f\u3058\u3081\u306b\n\nnginx \u306e cache \u3067\u30c7\u30a3\u30b9\u30af\u304c\u6ea2\u308c\u3066\u306f\u5927\u5909\u3067\u3059\u306e\u3067\u3001\u30c7\u30fc\u30bf\u4f7f\u7528\u91cf\u306e\u5236\u9650\u306e\u4ed5\u65b9\u304c\u6c17\u306b\u306a\u308a\u307e\u3059\u3088\u306d\u3002\n\n- http://www.slideshare.net/Nginx/nginx-highperformance-caching/19\n![image](https://qiita-image-store.s3.amazonaws.com/0/1798/6ba793f0-5f8b-3eb9-4a7a-7e822d7778a4.png)\n\n\u3053\u306e\u8cc7\u6599\u306b\u3088\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u6d88\u3048\u308b\u305d\u3046\u3067\u3059\u3002\n\n- \u671f\u9650\u306e\u5207\u308c\u305f\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6d88\u3059 (\u4f8b\u3067\u306f10\u5206)\n- max_size \u304b\u3089\u6ea2\u308c\u308b\u5834\u5408\u306f LRU \u3067\u6d88\u3059\n\n# \u7591\u554f\n\n- \u3069\u3046\u3044\u3046\u30bf\u30a4\u30df\u30f3\u30b0\u6d88\u3059\u3093\u3060\u308d\u3046\n- \u5177\u4f53\u7684\u306b\u3069\u3046\u3084\u3063\u3066\u6d88\u3057\u3066\u308b\u3093\u3060\u308d\u3046\n\n\u3068\u3044\u3046\u6240\u304c\u6c17\u306b\u306a\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u30bd\u30fc\u30b9\u3092\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002\n\n# nginx-1.9.1 \u306e\u30bd\u30fc\u30b9\n\n## \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6d88\u3059\u30bf\u30a4\u30df\u30f3\u30b0\n\n\u30bf\u30a4\u30de\u30fc\u3067\u56de\u3057\u3066\u308b\u307f\u305f\u3044\u3067\u3059\u3002\u305f\u3060\u3057\u6d88\u3048\u5177\u5408\u306b\u3088\u3063\u3066\u9593\u9694\u3092\u5897\u6e1b\u3057\u3066\u307e\u3059\u3002\n\n```c:src/os/unix/ngx_process_cycle.c\nngx_cache_manager_process_handler(ngx_event_t *ev)\n{\n    time_t        next, n;\n    ngx_uint_t    i;\n    ngx_path_t  **path;\n\n    next = 60 * 60;\n\n    path = ngx_cycle->paths.elts;\n    for (i = 0; i < ngx_cycle->paths.nelts; i++) {\n\n        if (path[i]->manager) {\n            n = path[i]->manager(path[i]->data);\n\n            next = (n <= next) ? n : next;\n\n            ngx_time_update();\n        }\n    }\n\n    if (next == 0) {\n        next = 1;\n    }\n\n    ngx_add_timer(ev, next * 1000);\n}\n```\n\n## \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6d88\u3059\u51e6\u7406\n\n\u671f\u9650\u5207\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u3066\u3001max_size \u3092\u8d85\u3048\u3066\u308b\u5834\u5408\u306f\u66f4\u306b\u671f\u9650\u304c\u5207\u308c\u3066\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3082\u524a\u9664\u3057\u307e\u3059\u3002\n\n```c:src/http/ngx_http_file_cache.c\nstatic time_t\nngx_http_file_cache_manager(void *data)\n{\n    ngx_http_file_cache_t  *cache = data;\n\n    off_t   size;\n    time_t  next, wait;\n\n    next = ngx_http_file_cache_expire(cache);\n\n    cache->last = ngx_current_msec;\n    cache->files = 0;\n\n    for ( ;; ) {\n\tngx_shmtx_lock(&cache->shpool->mutex);\n\n\tsize = cache->sh->size;\n\n        ngx_shmtx_unlock(&cache->shpool->mutex);\n\n\tngx_log_debug1(NGX_LOG_DEBUG_HTTP, ngx_cycle->log, 0,\n                       \"http file cache size: %O\", size);\n\n        if (size < cache->max_size) {\n            return next;\n        }\n\n        wait = ngx_http_file_cache_forced_expire(cache);\n\n        if (wait > 0) {\n            return wait;\n\t}\n\n        if (ngx_quit || ngx_terminate) {\n            return next;\n        }\n    }\n}\n```\n\n## \u671f\u9650\u5207\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\n\nngx_http_file_cache_expire\n\nqueue \u306b\u4e26\u3093\u3067\u3044\u308b\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5f8c\u306e\u30a8\u30f3\u30c8\u30ea\u304b\u3089\u66f4\u65b0\u5207\u308c\u3057\u3066\u308b\u5206\u3092\u524a\u9664\u3057\u307e\u3059\u3002\n\n```c:ngx_http_file_cache.c\nstatic time_t\nngx_http_file_cache_expire(ngx_http_file_cache_t *cache)\n\uff1c\u7565\uff1e\n    for ( ;; ) {\n\uff1c\u7565\uff1e\n        q = ngx_queue_last(&cache->sh->queue);\n\n        fcn = ngx_queue_data(q, ngx_http_file_cache_node_t, queue);\n\n        wait = fcn->expire - now;\n\n        if (wait > 0) {\n            wait = wait > 10 ? 10 : wait;\n            break;\n        }\n\uff1c\u7565\uff1e\n        if (fcn->count == 0) {\n            ngx_http_file_cache_delete(cache, q, name);\n            continue;\n        }\n```\n\n## max_size \u3092\u8d85\u3048\u3066\u308b\u5834\u5408\u306f\u66f4\u306b\u524a\u9664\n\n\u3053\u3061\u3089\u306f queue \u306e\u6700\u5f8c\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u524a\u9664\u3067\u3059\u306d\u3002\nLRU \u306a\u306e\u3067\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u5ea6\u306b queue \u306e\u624b\u524d\u306b\u4e26\u3073\u76f4\u305b\u3070\u3001\u305d\u308c\u3067\u826f\u3055\u305d\u3046\u3002\n\n```c:ngx_http_file_cache.c\nstatic time_t\nngx_http_file_cache_forced_expire(ngx_http_file_cache_t *cache)\n\uff1c\u7565\uff1e\n    for (q = ngx_queue_last(&cache->sh->queue);\n         q != ngx_queue_sentinel(&cache->sh->queue);\n         q = ngx_queue_prev(q))\n    {\n        fcn = ngx_queue_data(q, ngx_http_file_cache_node_t, queue);\n\n        ngx_log_debug6(NGX_LOG_DEBUG_HTTP, ngx_cycle->log, 0,\n                  \"http file cache forced expire: #%d %d %02xd%02xd%02xd%02xd\",\n                  fcn->count, fcn->exists,\n                  fcn->key[0], fcn->key[1], fcn->key[2], fcn->key[3]);\n\n        if (fcn->count == 0) {\n            ngx_http_file_cache_delete(cache, q, name);\n            wait = 0;\n\n        } else {\n            if (--tries) {\n                continue;\n            }\n\n            wait = 1;\n        }\n\n        break;\n    }\n```\n\n# \u6700\u5f8c\u306b\n\n\u3064\u307e\u308a\u3001\u30bf\u30a4\u30de\u30fc\u3067\u524a\u9664\u3057\u3066\u3066\u3001\u30b5\u30a4\u30ba\u3092\u8d85\u3048\u3066\u305f\u3089\u6307\u5b9a\u5206\u306b\u53ce\u307e\u308b\u307e\u3067\u524a\u9664\u3068\u3044\u3046\u51e6\u7406\u306a\u306e\u3067\u3001\u78ba\u5b9f\u306b\u6307\u5b9a\u3057\u305f\u30b5\u30a4\u30ba\u3092\u8d85\u3048\u306a\u3044\u3068\u3044\u3046\u306e\u306f\u7121\u7406\u306b\u898b\u3048\u307e\u3059\u3002\u307e\u3041\u3067\u3082\u3001100%\u30ae\u30ea\u30ae\u30ea\u30c7\u30a3\u30b9\u30af\u3092\u4f7f\u3046\u3068\u6027\u80fd\u306e\u554f\u984c\u304c\u51fa\u3066\u304f\u308b\u306e\u3067(zfs \u306a\u3093\u306690%\u8d85\u3048\u308b\u3068\u9014\u7aef\u306b LA \u304c\u8df3\u306d\u4e0a\u304c\u308b\u3057)\u3001\u666e\u901a\u306b\u4f7f\u3046\u5206\u306b\u306f\u305d\u3093\u306a\u306b\u6c17\u306b\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u3042\u3068\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u6539\u3081\u3066\u6c17\u306b\u306a\u308b\u6240\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\nLRU \u304c queue \u306a\u306e\u306f\u5206\u304b\u308a\u3084\u3059\u3044\u3051\u3069\u3001expire \u306e\u51e6\u7406\u3092 queue \u3067\u3069\u3046\u3084\u3063\u3066\u5b9f\u88c5\u3059\u308b\u306e\uff1f\n\u305d\u3082\u305d\u3082 queue \u306e\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u306f\u826f\u3044\u3068\u3057\u3066\u771f\u3093\u4e2d\u304b\u3089\u53d6\u308a\u51fa\u3057\u3061\u3083\u3063\u3066\u826f\u3044\u306e\uff1f\nqueue \u30a8\u30f3\u30c8\u30ea\u306e count \u304c\u5927\u4e8b\u3063\u307d\u3044\u3051\u3069\u3001\u3053\u308c\u3063\u3066\u4f55\uff1f\u3068\u304b\u3002\n\n\u8981\u671b\u304c\u3042\u308c\u3070\u3001\u305d\u306e\u3046\u3061\u89e3\u8aac\u3057\u307e\u3059\u3002\n", "tags": ["nginx", "Cache"]}