{"tags": ["Carthage", "Objective-C", "Swift", "iOS", "shell"], "context": " More than 1 year has passed since last update.\n\n\u6982\u8981\ncarthage update\u3092\u884c\u3063\u305f\u3042\u3068\u306b\u3001Target\u306e[Build Phases]\u306bRunScript\u3092\u4f5c\u3063\u3066\u3001\n\u4ee5\u4e0b\u306e\u3088\u3046\u306bcommand\u3068Input Files\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306eframework\u306epath\u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u304c\u3001\n\n\u3053\u306eInputFiles\u306b\u5165\u529b\u3059\u308bpath\u306e\u4e00\u89a7\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u51fa\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u7279\u306b\u624b\u5165\u529b\u3057\u3066\u9811\u5f35\u308b\u5834\u5408\u3001typo\u3059\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u306e\u3067\u3001\u6b63\u78ba\u306apath\u3092\u5410\u304d\u51fa\u3057\u3066\u3082\u3089\u3063\u305f\u307b\u3046\u304c\u5b89\u5fc3\u3057\u305f\u308a\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f53\u88c1\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\nGist\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\ncarthage-framework-paths.sh\n#!/bin/bash\nusage() {\n    cat <<HELP\nSYNOPSIS:\n  $0 [-d] [iOS(default)|watchOS|tvOS|Mac]\n  $0 [-h]\n\nARGUMENTS:\n  iOS       print paths for iOS (default)\n  watchOS   print paths for iOS\n  tvOS      print paths for iOS\n  Mac       print paths for iOS\n\nOPTIONS:\n  -h  Show usage\n  -d  output decorated result, e.g. \"\\$(SRCROOT)/Carthage/Build/iOS/APIKit.framework\",\n\nEXAMPLE:\n  $0 iOS\n  $0 -d watchOS\n\nHELP\n}\n\nframework_not_found() {\n  echo \"framework not found.\"\n}\n\nprint_paths() {\n  dir_path=\"Carthage/Build/$1\"\n  if [ ! -d $dir_path ]; then\n    framework_not_found; exit 0;\n  fi\n  if [ $DECORATE -eq 1 ]; then\n    paths=$(find Carthage/Build/\"$1\" -type d -name \"*.framework\" | xargs -n 1 -I % echo '\"$(SRCROOT)/'%'\",')\n  else\n    paths=$(find Carthage/Build/\"$1\" -type d -name \"*.framework\" | xargs -n 1 -I % echo '$(SRCROOT)/'%)\n  fi\n  [ ! -z \"$paths\" ] && echo \"$paths\" || framework_not_found\n}\n\nmain() {\n  SCRIPT_DIR=\"$(cd $(dirname \"$0\"); pwd)\"\n  DECORATE=0\n  for ARG; do\n    case \"$ARG\" in\n      -*)\n      while getopts h,d OPT \"$ARG\"; do\n        case \"$OPT\" in\n          h) usage; exit 0;;\n          d) DECORATE=1;;\n          *) exit 1;;\n        esac\n      done\n      ;;\n    esac\n  done\n\n  shift $(expr $OPTIND - 1)\n  if [ $# -gt 1 ]; then\n    echo -e \"Too many arguments. See below:\\n\"; usage; exit 1;\n  fi\n  if [ ! -d Carthage/Build ]; then\n    echo \"directory \\\"Carthage/Build\\\"  not found\"; exit 1;\n  fi\n  print_paths ${1:-iOS}\n}\n\nmain \"$@\"\n\n\n\n\u4f7f\u3044\u65b9\n\u4e8b\u524d\u306bcarthage update\u7b49\u3067Carthage/Build\u4ee5\u4e0b\u306bframework\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u306b\u3057\u307e\u3059\u3002\n\u3042\u3068\u306f\u3001\u4e0a\u8a18sh\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3057\u3066\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 \"Carthage/Build/iOS\" \u4e2d\u306eframework\u306epath\u3092\u51fa\u529b\u3057\u307e\u3059\u304c\u3001\n\u5f15\u6570\u3067 \"iOS, watchOS, tvOS, Mac\" \u3092\u6307\u5b9a\u3059\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5bfe\u5fdc\u3057\u305fframework\u306epath\u306e\u4e00\u89a7\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\u3042\u3068\u306f\u3053\u308c\u3092Input Files\u306b\u8ffd\u52a0\u3057\u3066\u3044\u3051\u3070\u30aa\u30c3\u30b1\u30fc\u3067\u3059 \n\n\u51fa\u529b\u3057\u3066\u307f\u308b\n\noutput\n$ ./carthage-input-files.sh\n# \u51fa\u529b\u7d50\u679c\n$(SRCROOT)/Carthage/Build/iOS/APIKit.framework\n$(SRCROOT)/Carthage/Build/iOS/Bond.framework\n$(SRCROOT)/Carthage/Build/iOS/FirstAppearing.framework\n$(SRCROOT)/Carthage/Build/iOS/Himotoki.framework\n$(SRCROOT)/Carthage/Build/iOS/Result.framework\n\n$ ./carthage-input-files.sh watchOS\n# \u51fa\u529b\u7d50\u679c\n$(SRCROOT)/Carthage/Build/watchOS/APIKit.framework\n$(SRCROOT)/Carthage/Build/watchOS/Result.framework\n\n\n\n\n## :package:\u6982\u8981\n`carthage update`\u3092\u884c\u3063\u305f\u3042\u3068\u306b\u3001Target\u306e[Build Phases]\u306bRunScript\u3092\u4f5c\u3063\u3066\u3001\n\u4ee5\u4e0b\u306e\u3088\u3046\u306bcommand\u3068Input Files\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306eframework\u306epath\u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u304c\u3001\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-04 16.57.42.png](https://qiita-image-store.s3.amazonaws.com/0/27802/f2195f8f-0dfc-9500-01c2-9ae3ec95a21c.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-04 16.57.42.png\")\n\n\u3053\u306eInputFiles\u306b\u5165\u529b\u3059\u308bpath\u306e\u4e00\u89a7\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u51fa\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u7279\u306b\u624b\u5165\u529b\u3057\u3066\u9811\u5f35\u308b\u5834\u5408\u3001typo\u3059\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u306e\u3067\u3001\u6b63\u78ba\u306apath\u3092\u5410\u304d\u51fa\u3057\u3066\u3082\u3089\u3063\u305f\u307b\u3046\u304c\u5b89\u5fc3\u3057\u305f\u308a\u3057\u307e\u3059\u3002\n\n## :notebook_with_decorative_cover:\u30b3\u30fc\u30c9\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f53\u88c1\u306f[\u3053\u3061\u3089](http://qiita.com/blackenedgold/items/c9e60e089974392878c8)\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\nGist\u306f[\u3053\u3061\u3089](https://gist.github.com/sgr-ksmt/2f3a91159ef4cc7ff470)\u3067\u3059\u3002\n\n```bash:carthage-framework-paths.sh\n#!/bin/bash\nusage() {\n    cat <<HELP\nSYNOPSIS:\n  $0 [-d] [iOS(default)|watchOS|tvOS|Mac]\n  $0 [-h]\n\nARGUMENTS:\n  iOS       print paths for iOS (default)\n  watchOS   print paths for iOS\n  tvOS      print paths for iOS\n  Mac       print paths for iOS\n\nOPTIONS:\n  -h  Show usage\n  -d  output decorated result, e.g. \"\\$(SRCROOT)/Carthage/Build/iOS/APIKit.framework\",\n\nEXAMPLE:\n  $0 iOS\n  $0 -d watchOS\n\nHELP\n}\n\nframework_not_found() {\n  echo \"framework not found.\"\n}\n\nprint_paths() {\n  dir_path=\"Carthage/Build/$1\"\n  if [ ! -d $dir_path ]; then\n    framework_not_found; exit 0;\n  fi\n  if [ $DECORATE -eq 1 ]; then\n    paths=$(find Carthage/Build/\"$1\" -type d -name \"*.framework\" | xargs -n 1 -I % echo '\"$(SRCROOT)/'%'\",')\n  else\n    paths=$(find Carthage/Build/\"$1\" -type d -name \"*.framework\" | xargs -n 1 -I % echo '$(SRCROOT)/'%)\n  fi\n  [ ! -z \"$paths\" ] && echo \"$paths\" || framework_not_found\n}\n\nmain() {\n  SCRIPT_DIR=\"$(cd $(dirname \"$0\"); pwd)\"\n  DECORATE=0\n  for ARG; do\n    case \"$ARG\" in\n      -*)\n      while getopts h,d OPT \"$ARG\"; do\n        case \"$OPT\" in\n          h) usage; exit 0;;\n          d) DECORATE=1;;\n          *) exit 1;;\n        esac\n      done\n      ;;\n    esac\n  done\n\n  shift $(expr $OPTIND - 1)\n  if [ $# -gt 1 ]; then\n    echo -e \"Too many arguments. See below:\\n\"; usage; exit 1;\n  fi\n  if [ ! -d Carthage/Build ]; then\n    echo \"directory \\\"Carthage/Build\\\"  not found\"; exit 1;\n  fi\n  print_paths ${1:-iOS}\n}\n\nmain \"$@\"\n```\n\n## :coffee:\u4f7f\u3044\u65b9\n\n\u4e8b\u524d\u306b`carthage update`\u7b49\u3067Carthage/Build\u4ee5\u4e0b\u306bframework\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u306b\u3057\u307e\u3059\u3002\n\u3042\u3068\u306f\u3001\u4e0a\u8a18sh\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3057\u3066\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 **\"Carthage/Build/iOS\"** \u4e2d\u306eframework\u306epath\u3092\u51fa\u529b\u3057\u307e\u3059\u304c\u3001\n\u5f15\u6570\u3067 **\"iOS, watchOS, tvOS, Mac\"** \u3092\u6307\u5b9a\u3059\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5bfe\u5fdc\u3057\u305fframework\u306epath\u306e\u4e00\u89a7\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\u3042\u3068\u306f\u3053\u308c\u3092Input Files\u306b\u8ffd\u52a0\u3057\u3066\u3044\u3051\u3070\u30aa\u30c3\u30b1\u30fc\u3067\u3059:smiley: \n\n## :pencil2:\u51fa\u529b\u3057\u3066\u307f\u308b\n\n```bash:output\n$ ./carthage-input-files.sh\n# \u51fa\u529b\u7d50\u679c\n$(SRCROOT)/Carthage/Build/iOS/APIKit.framework\n$(SRCROOT)/Carthage/Build/iOS/Bond.framework\n$(SRCROOT)/Carthage/Build/iOS/FirstAppearing.framework\n$(SRCROOT)/Carthage/Build/iOS/Himotoki.framework\n$(SRCROOT)/Carthage/Build/iOS/Result.framework\n\n$ ./carthage-input-files.sh watchOS\n# \u51fa\u529b\u7d50\u679c\n$(SRCROOT)/Carthage/Build/watchOS/APIKit.framework\n$(SRCROOT)/Carthage/Build/watchOS/Result.framework\n\n```\n"}