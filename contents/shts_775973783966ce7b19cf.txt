{"context": "\n\nServer\n\uff03sinatra\npost '/user', provides: :json do\n  params = JSON.parse request.body.read\n  puts params['name']\n  puts params['age']\nend\n\n\nCurl\n$ curl -v -H \"Accept: application/json\" -H \"Content-type: application/json\" -X POST -d '{\"name\":\"hogehoge\",\"age\":\"30\"}' http://localhost:9292/user -w \"\\n%{http_code}\\n\"\n\n\nJava\n\uff03Retrofit\npublic interface ApiService {\n    @Headers({\n        \"Accept: application/json\",\n        \"Content-type: application/json\"\n    })\n    @POST(\"/user\")\n    Observable<Void> createUser(@Body HashMap<String, String> body);\n}\n\n\n\u304a\u307e\u3051\n\uff03\u5b9f\u88c5\u8a73\u7d30\n\n// post\npublic static Observable<Void> postUser(String name, int age) {\n    // create Retrofit\n    Retrofit retrofit = new Retrofit.Builder()\n        .client(new OkHttpClient.Builder().build())\n        .baseUrl(\"http://localhost:9292\")\n        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n        .addConverterFactory(GsonConverterFactory.create())\n        .build();\n\n    return retrofit.createUser(createUserBody(name, age));\n}\n\n// create params\nprivate static HashMap<String, String> createUserBody(String name, int age) {\n    HashMap<String, String> hashMap = new HashMap<>();\n    hashMap.put(\"name\", name);\n    hashMap.put(\"age\", String.valueOf(age));\n    return hashMap;\n}\n\n// API\npublic interface ApiService {\n    @Headers({\n        \"Accept: application/json\",\n        \"Content-type: application/json\"\n    })\n    @POST(\"/user\")\n    Observable<Void> createUser(@Body HashMap<String, String> body);\n}\n\n\n\n\n## Server\n\n\uff03sinatra\n\n```ruby\npost '/user', provides: :json do\n  params = JSON.parse request.body.read\n  puts params['name']\n  puts params['age']\nend\n```\n\n## Curl\n\n```\n$ curl -v -H \"Accept: application/json\" -H \"Content-type: application/json\" -X POST -d '{\"name\":\"hogehoge\",\"age\":\"30\"}' http://localhost:9292/user -w \"\\n%{http_code}\\n\"\n```\n\n## Java\n\n\uff03Retrofit\n\n```java\npublic interface ApiService {\n    @Headers({\n        \"Accept: application/json\",\n        \"Content-type: application/json\"\n    })\n    @POST(\"/user\")\n    Observable<Void> createUser(@Body HashMap<String, String> body);\n}\n```\n\n## \u304a\u307e\u3051\n\n\uff03\u5b9f\u88c5\u8a73\u7d30\n\n```java\n\n// post\npublic static Observable<Void> postUser(String name, int age) {\n    // create Retrofit\n    Retrofit retrofit = new Retrofit.Builder()\n        .client(new OkHttpClient.Builder().build())\n        .baseUrl(\"http://localhost:9292\")\n        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n        .addConverterFactory(GsonConverterFactory.create())\n        .build();\n\n    return retrofit.createUser(createUserBody(name, age));\n}\n\n// create params\nprivate static HashMap<String, String> createUserBody(String name, int age) {\n    HashMap<String, String> hashMap = new HashMap<>();\n    hashMap.put(\"name\", name);\n    hashMap.put(\"age\", String.valueOf(age));\n    return hashMap;\n}\n\n// API\npublic interface ApiService {\n    @Headers({\n        \"Accept: application/json\",\n        \"Content-type: application/json\"\n    })\n    @POST(\"/user\")\n    Observable<Void> createUser(@Body HashMap<String, String> body);\n}\n\n```\n", "tags": ["Android", "Retrofit2", "Sinatra"]}