{"tags": ["OpenGL", "C++", "VisualStudio"], "context": " More than 1 year has passed since last update.\n\n\u203b \u5099\u5fd8\u9332\u306e\u305f\u3081\u3001 Visual Studio \u7b49\u306e\u8a2d\u5b9a\u65b9\u6cd5\u3092\u30e1\u30e2\u66f8\u304d\u3059\u308b\n\n\u3010 \u4e8b\u524d\u6e96\u5099 \u3011\n\nglut \u30e9\u30a4\u30d6\u30d6\u30e9\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 & \u30d5\u30a9\u30eb\u30c0\u683c\u7d0d  ( .dll\uff08\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30fb\u30ea\u30f3\u30af\uff09\u30d5\u30a1\u30a4\u30eb, .lib\uff08\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u30d5\u30a1\u30a4\u30eb, .h\uff08\u30d8\u30c3\u30c0\uff09\u30d5\u30a1\u30a4\u30eb\uff09\n\n\u3010 Visual Studio  \u8d77\u52d5\u5f8c\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u3000\u3011\n\n(1) \u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210 \u300c\u30d5\u30a1\u30a4\u30eb\u300d\u2192\u300c\u65b0\u898f\u4f5c\u6210\u300d\u2192\u300c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300d\n(2) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7a2e\u985e:\u300cCLR\u300d\u3092\u9078\u629e\n(3) \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u9078\u629e:\u300c\u7a7a\u306eCLR\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300d\u3092\u9078\u629e\n(4) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d: \uff08\u4efb\u610f \u65e5\u672c\u8a9e\u53ef\uff09\uff08\u4f8b\uff1a\u300c\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b5\u30f3\u30d7\u30eb\u300d\uff09\n(5) \u4fdd\u5b58\u5148\u30d5\u30a9\u30eb\u30c0\u9078\u629e\uff1a\u4efb\u610f\u306e\u30d1\u30b9\n(6) \u300c\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u300d\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u308b\n\n\n\u3000\u3010 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8d77\u52d5\u5f8c\u306e\u4f5c\u696d\u3000\u3011\n\n\u300c\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u300d\u3092\u53f3\u30af\u30ea\u30c3\u30af \u2192 \u300c\u8ffd\u52a0\u300d\u2192\u300c\u65b0\u3057\u3044\u9805\u76ee\u300d\u2192C++\u30d5\u30a1\u30a4\u30eb(.cpp)\u3092\u9078\u629e\n\u30d5\u30a1\u30eb\u540d\uff1a main.cpp\n\n\n\n\u3010\u5b9f\u884c\u4f8b\uff11\uff1a\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3088\u308a \u4e09\u89d2\u5f62\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3011\n\n \uff08\u30ea\u30f3\u30af\u5148\uff09\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u300c\u4eee\u60f3\u7269\u7406\u5b9f\u9a13\u5ba4\u69cb\u7bc9\u306e\u306e\u305f\u3081\u306eOpenGL, WebGL, GLSL\u5165\u9580\u300d\n\n\nC++ OpenGL\n/*\nGLUT\uff1a\u4e09\u89d2\u5f62\u306e\u63cf\u753b\n*/\n#include <GL/glut.h>\n\nint WindowPositionX = 200;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eX\u5ea7\u6a19\nint WindowPositionY = 100;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eY\u5ea7\u6a19\nint WindowWidth  = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5e45\nint WindowHeight = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9ad8\u3055\nchar WindowTitle[] = \"\u4e16\u754c\u306e\u59cb\u307e\u308a\";  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\n\n//----------------------------------------------------\n// \u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff08\u5f8c\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u540d\u3068\u5f15\u6570\u306e\u5ba3\u8a00\uff09\n//----------------------------------------------------\nvoid initialize(void);\nvoid display(void);\nvoid idle(void);\nvoid draw(void);\n//----------------------------------------------------\n// \u30e1\u30a4\u30f3\u95a2\u6570\n//----------------------------------------------------\nint main(int argc, char *argv[])\n{\n    glutInit(&argc, argv);                                     //\u74b0\u5883\u306e\u521d\u671f\u5316\n    glutInitWindowPosition(WindowPositionX, WindowPositionY);  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u306e\u6307\u5b9a\n    glutInitWindowSize(WindowWidth, WindowHeight);             //\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n    glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE);              //\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306e\u6307\u5b9a\n    glutCreateWindow(WindowTitle);                             //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\n    glutDisplayFunc(display);                                  //\u63cf\u753b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\uff08\u95a2\u6570\u540d\uff1adisplay\uff09\n    glutIdleFunc(idle);                                        //\u30d7\u30ed\u30b0\u30e9\u30e0\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n    initialize();                                              //\u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n    glutMainLoop();\n    return 0;\n}\n//----------------------------------------------------\n// \u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid initialize(void)\n{\n    glClearColor(0.0, 0.0, 0.0, 1.0); //\u80cc\u666f\u8272\n    glMatrixMode( GL_PROJECTION );\n    glLoadIdentity();\n    gluPerspective(30.0, (double)WindowWidth/(double)WindowHeight, 0.1, 1000.0); //\u900f\u8996\u6295\u5f71\u6cd5\u306e\u8996\u4f53\u7a4dgluPerspactive(th, w/h, near, far);\n\n    glMatrixMode( GL_MODELVIEW );\n    glLoadIdentity();\n    gluLookAt(\n           10.0, 0.0, 0.0,    // \u8996\u70b9\u306e\u4f4d\u7f6ex,y,z;\n           0.0,  0.0, 0.0,    // \u8996\u754c\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306e\u53c2\u7167\u70b9\u5ea7\u6a19x,y,z\n           0.0,  0.0, 1.0);   // \u8996\u754c\u306e\u4e0a\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30ebx,y,z\n}\n//--------------------------------------------------------\n// \u30a2\u30a4\u30c9\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n//--------------------------------------------------------\nvoid idle()\n{\n    glutPostRedisplay(); //glutDisplayFunc()\u3092\uff11\u56de\u5b9f\u884c\u3059\u308b\n}\n//----------------------------------------------------\n// \u63cf\u753b\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid display(void)\n{\n    glClear(GL_COLOR_BUFFER_BIT); //\u30d0\u30c3\u30d5\u30a1\u306e\u6d88\u53bb\n\n    draw();\n\n    glutSwapBuffers(); //glutInitDisplayMode(GLUT_DOUBLE)\u3067\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u5229\u7528\u53ef\n}\nvoid draw()\n{\n    //\u4e09\u89d2\u5f62\u306e\u63cf\u753b\n    glBegin(GL_TRIANGLES); //GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES\n    glColor4f(1.0, 0.0, 0.0, 1.0); glVertex3f( 0, -2.5, -2.5); //\u8d64\u306e\u9802\u70b9\n    glColor4f(0.0, 1.0, 0.0, 1.0); glVertex3f( 0,  2.5, -2.5); //\u7dd1\u306e\u9802\u70b9\n    glColor4f(0.0, 0.0, 1.0, 1.0); glVertex3f( 0 , 0.0,  2.5); //\u9752\u306e\u9802\u70b9\n    glEnd();    \n\n}\n\n\n\n\n\n\n\u3010\u5b9f\u884c\u4f8b\uff12\uff1a\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089\u3001\u56db\u89d2\u5f62\uff08\u30b7\u30a7\u30fc\u30c7\u30a3\u30f3\u30b0\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3011\n\n \uff08\u30ea\u30f3\u30af\u5148\uff09\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u300c\u4eee\u60f3\u7269\u7406\u5b9f\u9a13\u5ba4\u69cb\u7bc9\u306e\u306e\u305f\u3081\u306eOpenGL, WebGL, GLSL\u5165\u9580\u300d\n\n\nC++ OpenGL\n/*\nGLUT\uff1a\u56db\u89d2\u5f62\u306e\u63cf\u753b\uff08\u30de\u30c6\u30ea\u30a2\u30eb\uff09\n*/\n#include <GL/glut.h>\n\nint WindowPositionX = 200;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eX\u5ea7\u6a19\nint WindowPositionY = 100;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eY\u5ea7\u6a19\nint WindowWidth  = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5e45\nint WindowHeight = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9ad8\u3055\nchar WindowTitle[] = \"\u4e16\u754c\u306e\u59cb\u307e\u308a\";  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\n\n//----------------------------------------------------\n// \u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff08\u5f8c\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u540d\u3068\u5f15\u6570\u306e\u5ba3\u8a00\uff09\n//----------------------------------------------------\nvoid initialize(void);\nvoid display(void);\nvoid idle(void);\nvoid draw(void);\n//----------------------------------------------------\n// \u30e1\u30a4\u30f3\u95a2\u6570\n//----------------------------------------------------\nint main(int argc, char *argv[])\n{\n    glutInit(&argc, argv);                                     //\u74b0\u5883\u306e\u521d\u671f\u5316\n    glutInitWindowPosition(WindowPositionX, WindowPositionY);  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u306e\u6307\u5b9a\n    glutInitWindowSize(WindowWidth, WindowHeight);             //\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n    glutInitDisplayMode(GLUT_RGBA | GLUT_DEPTH | GLUT_DOUBLE); //\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306e\u6307\u5b9a\n    glutCreateWindow(WindowTitle);                             //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\n    glutDisplayFunc(display);                                  //\u63cf\u753b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\uff08\u95a2\u6570\u540d\uff1adisplay\uff09\n    glutIdleFunc(idle);                                        //\u30d7\u30ed\u30b0\u30e9\u30e0\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n    initialize();                                              //\u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n    glutMainLoop();\n    return 0;\n}\n//----------------------------------------------------\n// \u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid initialize(void)\n{\n    glClearColor(0.0, 0.0, 0.0, 1.0);              //\u30ab\u30e9\u30fc\u30d0\u30c3\u30d5\u30a1\u30fc\u306e\u521d\u671f\u5024\u306e\u6307\u5b9a\uff08\u80cc\u666f\u8272\uff09\n    glEnable( GL_DEPTH_TEST );                     //\u30c7\u30d7\u30b9\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u6709\u52b9\u5316\n    glViewport( 0, 0, WindowWidth, WindowHeight ); //\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u306e\u8a2d\u5b9a\n\n    glMatrixMode( GL_PROJECTION );  //\u884c\u5217\u30e2\u30fc\u30c9\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u884c\u5217\u306b\u6307\u5b9a\n    glLoadIdentity();               //\u30ab\u30ec\u30f3\u30c8\u884c\u5217\u306e\u521d\u671f\u5316\n    gluPerspective(30.0, (double)WindowWidth/(double)WindowHeight, 0.1, 1000.0); //\u900f\u8996\u6295\u5f71\u6cd5\u306e\u8996\u4f53\u7a4dgluPerspactive(th, w/h, near, far);\n}\n//--------------------------------------------------------\n// \u30a2\u30a4\u30c9\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n//--------------------------------------------------------\nvoid idle(){\n    glutPostRedisplay(); //glutDisplayFunc()\u3092\uff11\u56de\u5b9f\u884c\u3059\u308b\n}\n//----------------------------------------------------\n// \u63cf\u753b\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid display(void){\n    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); //\u30d0\u30c3\u30d5\u30a1\u306e\u6d88\u53bb\n    glMatrixMode( GL_MODELVIEW ); //\u884c\u5217\u30e2\u30fc\u30c9\u3092\u30e2\u30c7\u30eb\u30d3\u30e5\u30fc\u884c\u5217\u306b\u6307\u5b9a\n    glLoadIdentity();             //\u30ab\u30ec\u30f3\u30c8\u884c\u5217\u306e\u521d\u671f\u5316\n\n    /////////////////////////////////////////////\n    //(5) \u8996\u70b9\u306e\u8a2d\u5b9a\n    /////////////////////////////////////////////\n    gluLookAt(             // \u8996\u70b9\u306e\u8a2d\u5b9a\n           0.0, 0.0, 10.0,    // \u8996\u70b9\u306e\u4f4d\u7f6ex,y,z;\n           0.0, 0.0, 0.0,    // \u8996\u754c\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306e\u53c2\u7167\u70b9\u5ea7\u6a19x,y,z\n           0.0, 1.0, 0.0);   // \u8996\u754c\u306e\u4e0a\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30ebx,y,z\n\n    /////////////////////////////////////////////\n    //(6) \u5149\u6e90\u306e\u8a2d\u5b9a\n    /////////////////////////////////////////////\n    GLfloat lightAmbient[4] = {1.0,1.0,1.0,1.0};   //\u74b0\u5883\u5149\u8272\n    GLfloat lightDiffuse[4] = {1.0,1.0,1.0,1.0};   //\u62e1\u6563\u5149\u8272\n    GLfloat lightSpecular[4] = {1.0,1.0,1.0,1.0};  //\u53cd\u5c04\u5149\u8272\n    GLfloat lightPosition[4] = {0.0,0.0,1.0,1.0};  //\u5149\u6e90\u4f4d\u7f6e\n    glEnable(GL_LIGHTING);                             //\u5149\u6e90\u306e\u6709\u52b9\u5316\n    glEnable(GL_LIGHT0);                               //\u5149\u6e900\u306e\u6709\u52b9\u5316\n    glLightfv( GL_LIGHT0, GL_AMBIENT,  lightAmbient);  //\u5149\u6e900\u306e\u74b0\u5883\u5149\u8272\u306e\u6307\u5b9a\n    glLightfv( GL_LIGHT0, GL_DIFFUSE,  lightDiffuse);  //\u5149\u6e900\u306e\u62e1\u6563\u5149\u8272\u306e\u6307\u5b9a\n    glLightfv( GL_LIGHT0, GL_SPECULAR, lightSpecular); //\u5149\u6e900\u306e\u53cd\u5c04\u5149\u8272\u306e\u6307\u5b9a\n    glLightfv( GL_LIGHT0, GL_POSITION, lightPosition); //\u5149\u6e900\u306e\u5149\u6e90\u4f4d\u7f6e\u306e\u6307\u5b9a\n\n    draw();\n\n    glutSwapBuffers(); //glutInitDisplayMode(GLUT_DOUBLE)\u3067\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u5229\u7528\u53ef\n}\nvoid draw(){\n    //\u56db\u89d2\u5f62\u306e\u30d0\u30c3\u30d5\u30a1\n    GLfloat vertices[][3] = { \n        {-2.5, -2.5, 0.0}, {2.5, -2.5, 0.0}, {2.5,  2.5, 0.0}, {-2.5,  2.5, 0.0}\n    };\n    GLfloat normals[][3] = {\n        {0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}\n    };\n    GLuint indices[6] = {\n        0, 1, 2, 0, 2, 3\n    };\n\n    GLfloat materialEmission[4] = {0.0,      0.0,      0.0,       1.0}; //\u767a\u5149\u8272\n    GLfloat materialAmbient[4]  = {0.1745,   0.01175,  0.01175,   1.0}; //\u74b0\u5883\u5149\u306b\u5bfe\u3059\u308b\u8272\n    GLfloat materialDiffuse [4] = {0.61424,  0.04136,  0.04136,   1.0}; //\u62e1\u6563\u5149\u306b\u5bfe\u3059\u308b\u8272\n    GLfloat materialSpecular[4] = {0.727811, 0.626959, 0.626959,  1.0}; //\u53cd\u5c04\u5149\u306b\u5bfe\u3059\u308b\u8272\n    GLfloat materialShininess[1] = {76.8};                              //\u5149\u6ca2\u306e\u5f37\u5ea6\n    glMaterialfv(GL_FRONT, GL_EMISSION,  materialEmission);  //\u767a\u5149\u8272\u306e\u6307\u5b9a\n    glMaterialfv(GL_FRONT, GL_AMBIENT,   materialAmbient);   //\u74b0\u5883\u5149\u306b\u5bfe\u3059\u308b\u8272\u306e\u6307\u5b9a\n    glMaterialfv(GL_FRONT, GL_DIFFUSE,   materialDiffuse);   //\u62e1\u6563\u5149\u306b\u5bfe\u3059\u308b\u8272\u306e\u6307\u5b9a\n    glMaterialfv(GL_FRONT, GL_SPECULAR,  materialSpecular);  //\u53cd\u5c04\u5149\u306b\u5bfe\u3059\u308b\u8272\u306e\u6307\u5b9a\n    glMaterialfv(GL_FRONT, GL_SHININESS, materialShininess); //\u5149\u6ca2\u306e\u5f37\u5ea6\u306e\u6307\u5b9a\n\n    /////////////////////////////////////////////\n    //(7) \u7acb\u65b9\u4f53\u306e\u63cf\u753b\n    /////////////////////////////////////////////\n    glBegin(GL_TRIANGLES);        //\u4e09\u89d2\u5f62\u306e\u63cf\u753b\n        for(int i=0; i<6; i++){\n            int k = indices[i];       //\u9802\u70b9\u306e\u6307\u5b9a\n            glNormal3fv(normals[k]);  //\u6cd5\u7dda\u30d9\u30af\u30c8\u30eb\u306e\u6307\u5b9a\n            glVertex3fv(vertices[k]); //\u9802\u70b9\u5ea7\u6a19\u306e\u6307\u5b9a\n        }\n    glEnd();\n}\n\n\n\n\n\n\u3010\u5b9f\u884c\u4f8b\uff13\uff1a\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089\u3001\u5e73\u65b9\u683c\u5b50\uff082D\u30ab\u30e9\u30fc\u30de\u30c3\u30d7\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3011\n\n \uff08\u30ea\u30f3\u30af\u5148\uff09\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u300c\u4eee\u60f3\u7269\u7406\u5b9f\u9a13\u5ba4\u69cb\u7bc9\u306e\u306e\u305f\u3081\u306eOpenGL, WebGL, GLSL\u5165\u9580\u300d\n\n\nC++ OpenGL\n/*\nGLUT\uff1a\u5e73\u65b9\u683c\u5b50\uff082D\u30ab\u30e9\u30fc\u30de\u30c3\u30d7\uff09\n*/\n\n#include <math.h>\n#include <GL/glut.h>\n\nint WindowPositionX = 200;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eX\u5ea7\u6a19\nint WindowPositionY = 100;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eY\u5ea7\u6a19\nint WindowWidth  = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5e45\nint WindowHeight = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9ad8\u3055\nchar WindowTitle[] = \"\u4e16\u754c\u306e\u59cb\u307e\u308a\";  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\n\n//----------------------------------------------------\n// \u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff08\u5f8c\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u540d\u3068\u5f15\u6570\u306e\u5ba3\u8a00\uff09\n//----------------------------------------------------\nvoid initialize(void);\nvoid display(void);\nvoid idle(void);\nvoid draw(void);\n//----------------------------------------------------\n// \u30e1\u30a4\u30f3\u95a2\u6570\n//----------------------------------------------------\nint main(int argc, char *argv[])\n{\n    glutInit(&argc, argv);                                     //\u74b0\u5883\u306e\u521d\u671f\u5316\n    glutInitWindowPosition(WindowPositionX, WindowPositionY);  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u306e\u6307\u5b9a\n    glutInitWindowSize(WindowWidth, WindowHeight);             //\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n    glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE);              //\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306e\u6307\u5b9a\n    glutCreateWindow(WindowTitle);                             //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\n    glutDisplayFunc(display);                                  //\u63cf\u753b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\uff08\u95a2\u6570\u540d\uff1adisplay\uff09\n    glutIdleFunc(idle);                                        //\u30d7\u30ed\u30b0\u30e9\u30e0\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n    initialize();                                              //\u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n    glutMainLoop();\n    return 0;\n}\n//----------------------------------------------------\n// \u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid initialize(void)\n{\n    glClearColor(0.0, 0.0, 0.0, 1.0); //\u80cc\u666f\u8272\n    glMatrixMode( GL_PROJECTION );\n    glLoadIdentity();\n    gluPerspective(30.0, (double)WindowWidth/(double)WindowHeight, 0.1, 1000.0); //\u900f\u8996\u6295\u5f71\u6cd5\u306e\u8996\u4f53\u7a4dgluPerspactive(th, w/h, near, far);\n\n    glMatrixMode( GL_MODELVIEW );\n    glLoadIdentity();\n    gluLookAt(\n           0.0,  0.0, 186.0,  // \u8996\u70b9\u306e\u4f4d\u7f6ex,y,z;\n           0.0,  0.0, 0.0,    // \u8996\u754c\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306e\u53c2\u7167\u70b9\u5ea7\u6a19x,y,z\n           0.0,  1.0, 0.0);   // \u8996\u754c\u306e\u4e0a\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30ebx,y,z\n}\n//--------------------------------------------------------\n// \u30a2\u30a4\u30c9\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n//--------------------------------------------------------\nvoid idle()\n{\n    glutPostRedisplay(); //glutDisplayFunc()\u3092\uff11\u56de\u5b9f\u884c\u3059\u308b\n}\n//----------------------------------------------------\n// \u63cf\u753b\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid display(void)\n{\n    glClear(GL_COLOR_BUFFER_BIT); //\u30d0\u30c3\u30d5\u30a1\u306e\u6d88\u53bb\n\n    draw();\n\n    glutSwapBuffers(); //glutInitDisplayMode(GLUT_DOUBLE)\u3067\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u5229\u7528\u53ef\n}\nvoid draw()\n{\n    //\u5e73\u65b9\u683c\u5b50\u306e\u30b5\u30a4\u30ba\n    int tate = 100, yoko = 100;\n    int vertexNumber = yoko * tate ;\n    int indexNumber  = 2 * (yoko-1) * (tate-1);\n\n    GLfloat (*vertices)[3] = new GLfloat[vertexNumber][3];\n    GLfloat (*colors)[4]   = new GLfloat[vertexNumber][4];\n    GLuint  (*indices)[3]  = new GLuint[indexNumber][3];\n    int k=0; \n    for (int i = 0; i < tate; i++) {\n        for (int j = 0; j < yoko; j++) {\n            //\u9802\u70b9\u914d\u5217\u306e\u8a2d\u5b9a\n            vertices[k][0] = i;\n            vertices[k][1] = j;\n            vertices[k][2] = 0.0;\n\n            GLfloat x = GLfloat(i - tate / 2) / tate;\n            GLfloat y = GLfloat(j - yoko / 2) / yoko;\n            GLfloat f = exp(-10.0*(x * x + y * y));//\u30ac\u30a6\u30b9\u5206\u5e03\n            //\u30ab\u30e9\u30fc\u914d\u5217\u306e\u8a2d\u5b9a\n            colors[k][0] = f;\n            colors[k][1] = f;\n            colors[k][2] = f;\n            colors[k][3] = 1.0;\n            k++;\n        }\n    }\n\n    k=0;\n    for (int i = 0; i < tate - 1; i++) {\n        for (int j = 0; j < yoko - 1; j++) {\n            indices[k][0] =yoko * i + j;             //\u4e09\u89d2\u5f62\uff11\u306e\u9802\u70b9\uff11\n            indices[k][1] =yoko * i + (j + 1);       //\u4e09\u89d2\u5f62\uff11\u306e\u9802\u70b9\uff12\n            indices[k][2] =yoko * (i + 1) + (j + 1); //\u4e09\u89d2\u5f62\uff11\u306e\u9802\u70b9\uff13\n            k++;\n            indices[k][0] =yoko * i + j;             //\u4e09\u89d2\u5f62\uff12\u306e\u9802\u70b9\uff11\n            indices[k][1] =yoko * (i + 1) + j;       //\u4e09\u89d2\u5f62\uff12\u306e\u9802\u70b9\uff12\n            indices[k][2] =yoko * (i + 1) + (j + 1); //\u4e09\u89d2\u5f62\uff12\u306e\u9802\u70b9\uff13\n            k++;\n        }\n    }\n\n    glPushMatrix();\n        glTranslatef( -yoko/2+0.5, -tate/2+0.5, 0.0);     //\u5e73\u884c\u79fb\u52d5\n        glRotatef(0.0 , 0.0, 0.0, 1.0);  //\u56de\u8ee2\n        //\u56db\u89d2\u5f62\u306e\u63cf\u753b\n        glBegin(GL_TRIANGLES);//GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES\n            for(int i=0; i<indexNumber; i++){\n                for(int j=0; j<3; j++){\n                    int k = indices[i][j];\n                    glColor4fv(colors[k]);\n                    glVertex3fv(vertices[k]); \n                }\n            }\n        glEnd();\n    glPopMatrix();\n}\n\n\n\n\n\n\u3010\u5b9f\u884c\u4f8b\uff14\uff1a\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089\u3001\u7acb\u65b9\u4f53\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3011\n\n \uff08\u30ea\u30f3\u30af\u5148\uff09\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u300c\u4eee\u60f3\u7269\u7406\u5b9f\u9a13\u5ba4\u69cb\u7bc9\u306e\u306e\u305f\u3081\u306eOpenGL, WebGL, GLSL\u5165\u9580\u300d\n\n\nC++ OpenGL\n/*\nGLUT\uff1a\u7acb\u65b9\u4f53\u306e\u63cf\u753b\n*/\n#include <GL/glut.h>\n\nint WindowPositionX = 200;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eX\u5ea7\u6a19\nint WindowPositionY = 100;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eY\u5ea7\u6a19\nint WindowWidth  = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5e45\nint WindowHeight = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9ad8\u3055\nchar WindowTitle[] = \"\u4e16\u754c\u306e\u59cb\u307e\u308a\";  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\n\n//----------------------------------------------------\n// \u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff08\u5f8c\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u540d\u3068\u5f15\u6570\u306e\u5ba3\u8a00\uff09\n//----------------------------------------------------\nvoid initialize(void);\nvoid display(void);\nvoid idle(void);\nvoid draw(void);\n//----------------------------------------------------\n// \u30e1\u30a4\u30f3\u95a2\u6570\n//----------------------------------------------------\nint main(int argc, char *argv[])\n{\n    glutInit(&argc, argv);                                     //\u74b0\u5883\u306e\u521d\u671f\u5316\n    glutInitWindowPosition(WindowPositionX, WindowPositionY);  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u306e\u6307\u5b9a\n    glutInitWindowSize(WindowWidth, WindowHeight);             //\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n    glutInitDisplayMode(GLUT_RGBA | GLUT_DEPTH | GLUT_DOUBLE); //\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306e\u6307\u5b9a\n    glutCreateWindow(WindowTitle);                             //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\n    glutDisplayFunc(display);                                  //\u63cf\u753b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\uff08\u95a2\u6570\u540d\uff1adisplay\uff09\n    glutIdleFunc(idle);                                        //\u30d7\u30ed\u30b0\u30e9\u30e0\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n    initialize();                                              //\u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n    glutMainLoop();\n    return 0;\n}\n//----------------------------------------------------\n// \u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid initialize(void)\n{\n    glClearColor(0.0, 0.0, 0.0, 1.0);              //\u30ab\u30e9\u30fc\u30d0\u30c3\u30d5\u30a1\u30fc\u306e\u521d\u671f\u5024\u306e\u6307\u5b9a\uff08\u80cc\u666f\u8272\uff09\n    glEnable( GL_DEPTH_TEST );                     //\u30c7\u30d7\u30b9\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u6709\u52b9\u5316\n    glViewport( 0, 0, WindowWidth, WindowHeight ); //\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u306e\u8a2d\u5b9a\n\n    glMatrixMode( GL_PROJECTION );  //\u884c\u5217\u30e2\u30fc\u30c9\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u884c\u5217\u306b\u6307\u5b9a\n    glLoadIdentity();               //\u30ab\u30ec\u30f3\u30c8\u884c\u5217\u306e\u521d\u671f\u5316\n    gluPerspective(30.0, (double)WindowWidth/(double)WindowHeight, 0.1, 1000.0); //\u900f\u8996\u6295\u5f71\u6cd5\u306e\u8996\u4f53\u7a4dgluPerspactive(th, w/h, near, far);\n\n}\n//--------------------------------------------------------\n// \u30a2\u30a4\u30c9\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n//--------------------------------------------------------\nvoid idle()\n{\n    glutPostRedisplay(); //glutDisplayFunc()\u3092\uff11\u56de\u5b9f\u884c\u3059\u308b\n}\n//----------------------------------------------------\n// \u63cf\u753b\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid display(void)\n{\n    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); //\u30d0\u30c3\u30d5\u30a1\u306e\u6d88\u53bb\n    glMatrixMode( GL_MODELVIEW ); //\u884c\u5217\u30e2\u30fc\u30c9\u3092\u30e2\u30c7\u30eb\u30d3\u30e5\u30fc\u884c\u5217\u306b\u6307\u5b9a\n    glLoadIdentity();             //\u30ab\u30ec\u30f3\u30c8\u884c\u5217\u306e\u521d\u671f\u5316\n\n    /////////////////////////////////////////////\n    // \u8996\u70b9\u306e\u8a2d\u5b9a\n    /////////////////////////////////////////////\n    gluLookAt(             // \u8996\u70b9\u306e\u8a2d\u5b9a\n           5.0, 5.0, 5.0,    // \u8996\u70b9\u306e\u4f4d\u7f6ex,y,z;\n           0.0, 0.0, 0.0,    // \u8996\u754c\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306e\u53c2\u7167\u70b9\u5ea7\u6a19x,y,z\n           0.0, 0.0, 1.0);   // \u8996\u754c\u306e\u4e0a\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30ebx,y,z\n\n    draw();\n\n    glutSwapBuffers(); //glutInitDisplayMode(GLUT_DOUBLE)\u3067\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u5229\u7528\u53ef\n}\nint step = 0;\nvoid draw()\n{\n    step++;\n    /////////////////////////////////////////////\n    // \u9802\u70b9\u5ea7\u6a19\u306e\u914d\u5217\n    /////////////////////////////////////////////\n    GLfloat vertices[24][3] = { \n        {-1.0, -1.0,  1.0}, { 1.0, -1.0,  1.0}, { 1.0,  1.0,  1.0}, {-1.0,  1.0,  1.0}, // A\u9762\n        {-1.0, -1.0, -1.0}, {-1.0,  1.0, -1.0}, { 1.0,  1.0, -1.0}, { 1.0, -1.0, -1.0}, // B\u9762\n        {-1.0,  1.0, -1.0}, {-1.0,  1.0,  1.0}, { 1.0,  1.0,  1.0}, { 1.0,  1.0, -1.0}, // C\u9762\n        {-1.0, -1.0, -1.0}, { 1.0, -1.0, -1.0}, { 1.0, -1.0,  1.0}, {-1.0, -1.0,  1.0}, // D\u9762\n        { 1.0, -1.0, -1.0}, { 1.0,  1.0, -1.0}, { 1.0,  1.0,  1.0}, { 1.0, -1.0,  1.0}, // E\u9762\n        {-1.0, -1.0, -1.0}, {-1.0, -1.0,  1.0}, {-1.0,  1.0,  1.0}, {-1.0,  1.0, -1.0}  // F\u9762\n    };\n    /////////////////////////////////////////////\n    // \u9802\u70b9\u8272\u306e\u914d\u5217\n    /////////////////////////////////////////////\n    GLfloat colors[24][4] = {\n        {1.0, 0.0, 0.0, 1.0}, {1.0, 1.0, 0.0, 1.0}, {1.0, 1.0, 1.0, 1.0}, {1.0, 0.0, 1.0, 1.0}, // A\u9762\n        {0.0, 0.0, 0.0, 1.0}, {0.0, 0.0, 1.0, 1.0}, {0.0, 1.0, 1.0, 1.0}, {0.0, 1.0, 0.0, 1.0}, // B\u9762\n        {0.0, 0.0, 1.0, 1.0}, {1.0, 0.0, 1.0, 1.0}, {1.0, 1.0, 1.0, 1.0}, {0.0, 1.0, 1.0, 1.0}, // C\u9762\n        {0.0, 0.0, 0.0, 1.0}, {0.0, 1.0, 0.0, 1.0}, {1.0, 1.0, 0.0, 1.0}, {1.0, 0.0, 0.0, 1.0}, // D\u9762\n        {0.0, 1.0, 0.0, 1.0}, {0.0, 1.0, 1.0, 1.0}, {1.0, 1.0, 1.0, 1.0}, {1.0, 1.0, 0.0, 1.0}, // E\u9762\n        {0.0, 0.0, 0.0, 1.0}, {1.0, 0.0, 0.0, 1.0}, {1.0, 0.0, 1.0, 1.0}, {0.0, 0.0, 1.0, 1.0}  // F\u9762\n    };\n    /////////////////////////////////////////////\n    // \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u914d\u5217\n    /////////////////////////////////////////////\n    GLuint indices[36] = {\n        0, 1, 2,      0,  2, 3,    // A\u9762\n        4, 5, 6,      4,  6, 7,    // B\u9762\n        8, 9, 10,     8,  10, 11,  // C\u9762\n        12, 13, 14,   12, 14, 15,  // D\u9762\n        16, 17, 18,   16, 18, 19,  // E\u9762\n        20, 21, 22,   20, 22, 23   // F\u9762\n    };\n    /////////////////////////////////////////////\n    // \u7acb\u65b9\u4f53\u306e\u63cf\u753b\n    /////////////////////////////////////////////\n\n    glPushMatrix();\n        glTranslatef( 0.0, 0.0, 0.0);    //\u5e73\u884c\u79fb\u52d5\n        glRotatef(step , 0.0, 0.0, 1.0);  //\u56de\u8ee2\n        glBegin(GL_TRIANGLES);\n            for(int i=0; i<36; i++){\n                int k = indices[i];\n                glColor4fv(colors[k]); glVertex3fv(vertices[k]); \n            }\n        glEnd();    \n    glPopMatrix();\n}\n\n\n\n\n\n\uff08\u52d5\u753b\uff09\n\n\u203b \u5b9f\u969b\u306b\u51fa\u529b\u3055\u308c\u308b\u7acb\u65b9\u4f53\u306f\u3001\u52d5\u753b\u3088\u308a\u3082\u305a\u3063\u3068\u9ad8\u901f\u3067\u56de\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\n\n\uff08 \u52d5\u753b\u30ad\u30e3\u30d7\u30c1\u30e3\u30bd\u30d5\u30c8 BBFlashBack \uff08\u7121\u511f\u7248\uff09\u306e\u6027\u80fd\u30b9\u30da\u30c3\u30af\u306e\u95a2\u4fc2\u3067\u3001\u56de\u8ee2\u901f\u5ea6\u306f\u9045\u304f\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\uff09\n\n \uff08\u52d5\u753b\u3078\u306e\u30ea\u30f3\u30af\uff09 YouTube \n\n\n\n## \u203b \u5099\u5fd8\u9332\u306e\u305f\u3081\u3001 _Visual Studio_ \u7b49\u306e\u8a2d\u5b9a\u65b9\u6cd5\u3092\u30e1\u30e2\u66f8\u304d\u3059\u308b\n\n# \u3010 \u4e8b\u524d\u6e96\u5099 \u3011\n\n#### _glut_ \u30e9\u30a4\u30d6\u30d6\u30e9\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 & \u30d5\u30a9\u30eb\u30c0\u683c\u7d0d  ( .dll\uff08\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30fb\u30ea\u30f3\u30af\uff09\u30d5\u30a1\u30a4\u30eb, .lib\uff08\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u30d5\u30a1\u30a4\u30eb, .h\uff08\u30d8\u30c3\u30c0\uff09\u30d5\u30a1\u30a4\u30eb\uff09\n\n# \u3010 _Visual Studio_  \u8d77\u52d5\u5f8c\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u3000\u3011\n\n- (1) \u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210 \u300c\u30d5\u30a1\u30a4\u30eb\u300d\u2192\u300c\u65b0\u898f\u4f5c\u6210\u300d\u2192\u300c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300d\n- (2) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7a2e\u985e:\u300cCLR\u300d\u3092\u9078\u629e\n- (3) \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u9078\u629e:\u300c\u7a7a\u306eCLR\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300d\u3092\u9078\u629e\n- (4) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d: \uff08\u4efb\u610f \u65e5\u672c\u8a9e\u53ef\uff09\uff08\u4f8b\uff1a\u300c\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b5\u30f3\u30d7\u30eb\u300d\uff09\n- (5) \u4fdd\u5b58\u5148\u30d5\u30a9\u30eb\u30c0\u9078\u629e\uff1a\u4efb\u610f\u306e\u30d1\u30b9\n- (6) \u300c\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u300d\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u308b\n\n\n#\u3000\u3010 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8d77\u52d5\u5f8c\u306e\u4f5c\u696d\u3000\u3011\n- \u300c\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u300d\u3092\u53f3\u30af\u30ea\u30c3\u30af \u2192 \u300c\u8ffd\u52a0\u300d\u2192\u300c\u65b0\u3057\u3044\u9805\u76ee\u300d\u2192C++\u30d5\u30a1\u30a4\u30eb(.cpp)\u3092\u9078\u629e\n- \u30d5\u30a1\u30eb\u540d\uff1a _main.cpp_\n\n\n# \u3010\u5b9f\u884c\u4f8b\uff11\uff1a\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3088\u308a \u4e09\u89d2\u5f62\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3011\n##### [ \uff08\u30ea\u30f3\u30af\u5148\uff09\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u300c\u4eee\u60f3\u7269\u7406\u5b9f\u9a13\u5ba4\u69cb\u7bc9\u306e\u306e\u305f\u3081\u306eOpenGL, WebGL, GLSL\u5165\u9580\u300d](http://www.natural-science.or.jp/sources/triangle_GLUT.cpp)\n\n```{C++:C++ OpenGL}\n/*\nGLUT\uff1a\u4e09\u89d2\u5f62\u306e\u63cf\u753b\n*/\n#include <GL/glut.h>\n\nint WindowPositionX = 200;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eX\u5ea7\u6a19\nint WindowPositionY = 100;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eY\u5ea7\u6a19\nint WindowWidth  = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5e45\nint WindowHeight = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9ad8\u3055\nchar WindowTitle[] = \"\u4e16\u754c\u306e\u59cb\u307e\u308a\";\t//\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\n\n//----------------------------------------------------\n// \u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff08\u5f8c\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u540d\u3068\u5f15\u6570\u306e\u5ba3\u8a00\uff09\n//----------------------------------------------------\nvoid initialize(void);\nvoid display(void);\nvoid idle(void);\nvoid draw(void);\n//----------------------------------------------------\n// \u30e1\u30a4\u30f3\u95a2\u6570\n//----------------------------------------------------\nint main(int argc, char *argv[])\n{\n\tglutInit(&argc, argv);                                     //\u74b0\u5883\u306e\u521d\u671f\u5316\n\tglutInitWindowPosition(WindowPositionX, WindowPositionY);  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u306e\u6307\u5b9a\n\tglutInitWindowSize(WindowWidth, WindowHeight);             //\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n\tglutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE);              //\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306e\u6307\u5b9a\n\tglutCreateWindow(WindowTitle);                             //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\n\tglutDisplayFunc(display);                                  //\u63cf\u753b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\uff08\u95a2\u6570\u540d\uff1adisplay\uff09\n\tglutIdleFunc(idle);                                        //\u30d7\u30ed\u30b0\u30e9\u30e0\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\tinitialize();                                              //\u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n\tglutMainLoop();\n\treturn 0;\n}\n//----------------------------------------------------\n// \u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid initialize(void)\n{\n\tglClearColor(0.0, 0.0, 0.0, 1.0); //\u80cc\u666f\u8272\n\tglMatrixMode( GL_PROJECTION );\n\tglLoadIdentity();\n\tgluPerspective(30.0, (double)WindowWidth/(double)WindowHeight, 0.1, 1000.0); //\u900f\u8996\u6295\u5f71\u6cd5\u306e\u8996\u4f53\u7a4dgluPerspactive(th, w/h, near, far);\n\n\tglMatrixMode( GL_MODELVIEW );\n\tglLoadIdentity();\n\tgluLookAt(\n\t\t   10.0, 0.0, 0.0,    // \u8996\u70b9\u306e\u4f4d\u7f6ex,y,z;\n\t\t   0.0,  0.0, 0.0,    // \u8996\u754c\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306e\u53c2\u7167\u70b9\u5ea7\u6a19x,y,z\n\t\t   0.0,  0.0, 1.0);   // \u8996\u754c\u306e\u4e0a\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30ebx,y,z\n}\n//--------------------------------------------------------\n// \u30a2\u30a4\u30c9\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n//--------------------------------------------------------\nvoid idle()\n{\n\tglutPostRedisplay(); //glutDisplayFunc()\u3092\uff11\u56de\u5b9f\u884c\u3059\u308b\n}\n//----------------------------------------------------\n// \u63cf\u753b\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid display(void)\n{\n\tglClear(GL_COLOR_BUFFER_BIT); //\u30d0\u30c3\u30d5\u30a1\u306e\u6d88\u53bb\n\n\tdraw();\n\n\tglutSwapBuffers(); //glutInitDisplayMode(GLUT_DOUBLE)\u3067\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u5229\u7528\u53ef\n}\nvoid draw()\n{\n\t//\u4e09\u89d2\u5f62\u306e\u63cf\u753b\n\tglBegin(GL_TRIANGLES); //GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES\n\tglColor4f(1.0, 0.0, 0.0, 1.0); glVertex3f( 0, -2.5, -2.5); //\u8d64\u306e\u9802\u70b9\n\tglColor4f(0.0, 1.0, 0.0, 1.0); glVertex3f( 0,  2.5, -2.5); //\u7dd1\u306e\u9802\u70b9\n\tglColor4f(0.0, 0.0, 1.0, 1.0); glVertex3f( 0 , 0.0,  2.5); //\u9752\u306e\u9802\u70b9\n\tglEnd();\t\n\t\n}\n```\n![triangle.console.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8bc49fcd-f901-7968-d9ac-8e0b025c5a3c.png)\n\n![triangle.console.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/16c5bfb1-7ee7-6c53-2704-0d2f8be6f31a.png)\n\n![triangle.console.3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/9e799378-4b35-1563-7047-2e1303925f6a.png)\n\n\n# \u3010\u5b9f\u884c\u4f8b\uff12\uff1a\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089\u3001\u56db\u89d2\u5f62\uff08\u30b7\u30a7\u30fc\u30c7\u30a3\u30f3\u30b0\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3011\n##### [ \uff08\u30ea\u30f3\u30af\u5148\uff09\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u300c\u4eee\u60f3\u7269\u7406\u5b9f\u9a13\u5ba4\u69cb\u7bc9\u306e\u306e\u305f\u3081\u306eOpenGL, WebGL, GLSL\u5165\u9580\u300d](http://www.natural-science.or.jp/sources/square_shading_GLUT.cpp)\n\n```{C++:C++ OpenGL}\n/*\nGLUT\uff1a\u56db\u89d2\u5f62\u306e\u63cf\u753b\uff08\u30de\u30c6\u30ea\u30a2\u30eb\uff09\n*/\n#include <GL/glut.h>\n\nint WindowPositionX = 200;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eX\u5ea7\u6a19\nint WindowPositionY = 100;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eY\u5ea7\u6a19\nint WindowWidth  = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5e45\nint WindowHeight = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9ad8\u3055\nchar WindowTitle[] = \"\u4e16\u754c\u306e\u59cb\u307e\u308a\";\t//\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\n\n//----------------------------------------------------\n// \u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff08\u5f8c\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u540d\u3068\u5f15\u6570\u306e\u5ba3\u8a00\uff09\n//----------------------------------------------------\nvoid initialize(void);\nvoid display(void);\nvoid idle(void);\nvoid draw(void);\n//----------------------------------------------------\n// \u30e1\u30a4\u30f3\u95a2\u6570\n//----------------------------------------------------\nint main(int argc, char *argv[])\n{\n\tglutInit(&argc, argv);                                     //\u74b0\u5883\u306e\u521d\u671f\u5316\n\tglutInitWindowPosition(WindowPositionX, WindowPositionY);  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u306e\u6307\u5b9a\n\tglutInitWindowSize(WindowWidth, WindowHeight);             //\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n\tglutInitDisplayMode(GLUT_RGBA | GLUT_DEPTH | GLUT_DOUBLE); //\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306e\u6307\u5b9a\n\tglutCreateWindow(WindowTitle);                             //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\n\tglutDisplayFunc(display);                                  //\u63cf\u753b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\uff08\u95a2\u6570\u540d\uff1adisplay\uff09\n\tglutIdleFunc(idle);                                        //\u30d7\u30ed\u30b0\u30e9\u30e0\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\tinitialize();                                              //\u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n\tglutMainLoop();\n\treturn 0;\n}\n//----------------------------------------------------\n// \u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid initialize(void)\n{\n\tglClearColor(0.0, 0.0, 0.0, 1.0);              //\u30ab\u30e9\u30fc\u30d0\u30c3\u30d5\u30a1\u30fc\u306e\u521d\u671f\u5024\u306e\u6307\u5b9a\uff08\u80cc\u666f\u8272\uff09\n\tglEnable( GL_DEPTH_TEST );                     //\u30c7\u30d7\u30b9\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u6709\u52b9\u5316\n\tglViewport( 0, 0, WindowWidth, WindowHeight ); //\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u306e\u8a2d\u5b9a\n\n\tglMatrixMode( GL_PROJECTION );  //\u884c\u5217\u30e2\u30fc\u30c9\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u884c\u5217\u306b\u6307\u5b9a\n\tglLoadIdentity();               //\u30ab\u30ec\u30f3\u30c8\u884c\u5217\u306e\u521d\u671f\u5316\n\tgluPerspective(30.0, (double)WindowWidth/(double)WindowHeight, 0.1, 1000.0); //\u900f\u8996\u6295\u5f71\u6cd5\u306e\u8996\u4f53\u7a4dgluPerspactive(th, w/h, near, far);\n}\n//--------------------------------------------------------\n// \u30a2\u30a4\u30c9\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n//--------------------------------------------------------\nvoid idle(){\n\tglutPostRedisplay(); //glutDisplayFunc()\u3092\uff11\u56de\u5b9f\u884c\u3059\u308b\n}\n//----------------------------------------------------\n// \u63cf\u753b\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid display(void){\n\tglClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); //\u30d0\u30c3\u30d5\u30a1\u306e\u6d88\u53bb\n\tglMatrixMode( GL_MODELVIEW ); //\u884c\u5217\u30e2\u30fc\u30c9\u3092\u30e2\u30c7\u30eb\u30d3\u30e5\u30fc\u884c\u5217\u306b\u6307\u5b9a\n\tglLoadIdentity();             //\u30ab\u30ec\u30f3\u30c8\u884c\u5217\u306e\u521d\u671f\u5316\n\n\t/////////////////////////////////////////////\n\t//(5) \u8996\u70b9\u306e\u8a2d\u5b9a\n\t/////////////////////////////////////////////\n\tgluLookAt(             // \u8996\u70b9\u306e\u8a2d\u5b9a\n\t\t   0.0, 0.0, 10.0,    // \u8996\u70b9\u306e\u4f4d\u7f6ex,y,z;\n\t\t   0.0, 0.0, 0.0,    // \u8996\u754c\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306e\u53c2\u7167\u70b9\u5ea7\u6a19x,y,z\n\t\t   0.0, 1.0, 0.0);   // \u8996\u754c\u306e\u4e0a\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30ebx,y,z\n\n\t/////////////////////////////////////////////\n\t//(6) \u5149\u6e90\u306e\u8a2d\u5b9a\n\t/////////////////////////////////////////////\n\tGLfloat lightAmbient[4] = {1.0,1.0,1.0,1.0};   //\u74b0\u5883\u5149\u8272\n\tGLfloat lightDiffuse[4] = {1.0,1.0,1.0,1.0};   //\u62e1\u6563\u5149\u8272\n\tGLfloat lightSpecular[4] = {1.0,1.0,1.0,1.0};  //\u53cd\u5c04\u5149\u8272\n\tGLfloat lightPosition[4] = {0.0,0.0,1.0,1.0};  //\u5149\u6e90\u4f4d\u7f6e\n\tglEnable(GL_LIGHTING);                             //\u5149\u6e90\u306e\u6709\u52b9\u5316\n\tglEnable(GL_LIGHT0);                               //\u5149\u6e900\u306e\u6709\u52b9\u5316\n\tglLightfv( GL_LIGHT0, GL_AMBIENT,  lightAmbient);  //\u5149\u6e900\u306e\u74b0\u5883\u5149\u8272\u306e\u6307\u5b9a\n\tglLightfv( GL_LIGHT0, GL_DIFFUSE,  lightDiffuse);  //\u5149\u6e900\u306e\u62e1\u6563\u5149\u8272\u306e\u6307\u5b9a\n\tglLightfv( GL_LIGHT0, GL_SPECULAR, lightSpecular); //\u5149\u6e900\u306e\u53cd\u5c04\u5149\u8272\u306e\u6307\u5b9a\n\tglLightfv( GL_LIGHT0, GL_POSITION, lightPosition); //\u5149\u6e900\u306e\u5149\u6e90\u4f4d\u7f6e\u306e\u6307\u5b9a\n\n\tdraw();\n\n\tglutSwapBuffers(); //glutInitDisplayMode(GLUT_DOUBLE)\u3067\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u5229\u7528\u53ef\n}\nvoid draw(){\n\t//\u56db\u89d2\u5f62\u306e\u30d0\u30c3\u30d5\u30a1\n\tGLfloat vertices[][3] = { \n\t\t{-2.5, -2.5, 0.0}, {2.5, -2.5, 0.0}, {2.5,  2.5, 0.0}, {-2.5,  2.5, 0.0}\n\t};\n\tGLfloat normals[][3] = {\n\t\t{0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}\n\t};\n\tGLuint indices[6] = {\n\t\t0, 1, 2, 0, 2, 3\n\t};\n\n\tGLfloat materialEmission[4] = {0.0,      0.0,      0.0,       1.0}; //\u767a\u5149\u8272\n\tGLfloat materialAmbient[4]  = {0.1745,   0.01175,  0.01175,   1.0}; //\u74b0\u5883\u5149\u306b\u5bfe\u3059\u308b\u8272\n\tGLfloat materialDiffuse [4] = {0.61424,  0.04136,  0.04136,   1.0}; //\u62e1\u6563\u5149\u306b\u5bfe\u3059\u308b\u8272\n\tGLfloat materialSpecular[4] = {0.727811, 0.626959, 0.626959,  1.0}; //\u53cd\u5c04\u5149\u306b\u5bfe\u3059\u308b\u8272\n\tGLfloat materialShininess[1] = {76.8};                              //\u5149\u6ca2\u306e\u5f37\u5ea6\n\tglMaterialfv(GL_FRONT, GL_EMISSION,  materialEmission);  //\u767a\u5149\u8272\u306e\u6307\u5b9a\n\tglMaterialfv(GL_FRONT, GL_AMBIENT,   materialAmbient);   //\u74b0\u5883\u5149\u306b\u5bfe\u3059\u308b\u8272\u306e\u6307\u5b9a\n\tglMaterialfv(GL_FRONT, GL_DIFFUSE,   materialDiffuse);   //\u62e1\u6563\u5149\u306b\u5bfe\u3059\u308b\u8272\u306e\u6307\u5b9a\n\tglMaterialfv(GL_FRONT, GL_SPECULAR,  materialSpecular);  //\u53cd\u5c04\u5149\u306b\u5bfe\u3059\u308b\u8272\u306e\u6307\u5b9a\n\tglMaterialfv(GL_FRONT, GL_SHININESS, materialShininess); //\u5149\u6ca2\u306e\u5f37\u5ea6\u306e\u6307\u5b9a\n\n\t/////////////////////////////////////////////\n\t//(7) \u7acb\u65b9\u4f53\u306e\u63cf\u753b\n\t/////////////////////////////////////////////\n\tglBegin(GL_TRIANGLES);        //\u4e09\u89d2\u5f62\u306e\u63cf\u753b\n\t\tfor(int i=0; i<6; i++){\n\t\t\tint k = indices[i];       //\u9802\u70b9\u306e\u6307\u5b9a\n\t\t\tglNormal3fv(normals[k]);  //\u6cd5\u7dda\u30d9\u30af\u30c8\u30eb\u306e\u6307\u5b9a\n\t\t\tglVertex3fv(vertices[k]); //\u9802\u70b9\u5ea7\u6a19\u306e\u6307\u5b9a\n\t\t}\n\tglEnd();\n}\n```\n![console.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f3c75532-8166-7c87-cf36-d3f32bd89e19.png)\n\n![output.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8f70b3fd-b71e-769f-bf1a-1c9bf07aa33b.png)\n\n\n\n# \u3010\u5b9f\u884c\u4f8b\uff13\uff1a\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089\u3001\u5e73\u65b9\u683c\u5b50\uff082D\u30ab\u30e9\u30fc\u30de\u30c3\u30d7\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3011\n##### [ \uff08\u30ea\u30f3\u30af\u5148\uff09\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u300c\u4eee\u60f3\u7269\u7406\u5b9f\u9a13\u5ba4\u69cb\u7bc9\u306e\u306e\u305f\u3081\u306eOpenGL, WebGL, GLSL\u5165\u9580\u300d](http://www.natural-science.or.jp/sources/squareLattice_GLUT.cpp)\n\n```{C++:C++ OpenGL}\n/*\nGLUT\uff1a\u5e73\u65b9\u683c\u5b50\uff082D\u30ab\u30e9\u30fc\u30de\u30c3\u30d7\uff09\n*/\n\n#include <math.h>\n#include <GL/glut.h>\n\nint WindowPositionX = 200;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eX\u5ea7\u6a19\nint WindowPositionY = 100;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eY\u5ea7\u6a19\nint WindowWidth  = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5e45\nint WindowHeight = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9ad8\u3055\nchar WindowTitle[] = \"\u4e16\u754c\u306e\u59cb\u307e\u308a\";\t//\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\n\n//----------------------------------------------------\n// \u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff08\u5f8c\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u540d\u3068\u5f15\u6570\u306e\u5ba3\u8a00\uff09\n//----------------------------------------------------\nvoid initialize(void);\nvoid display(void);\nvoid idle(void);\nvoid draw(void);\n//----------------------------------------------------\n// \u30e1\u30a4\u30f3\u95a2\u6570\n//----------------------------------------------------\nint main(int argc, char *argv[])\n{\n\tglutInit(&argc, argv);                                     //\u74b0\u5883\u306e\u521d\u671f\u5316\n\tglutInitWindowPosition(WindowPositionX, WindowPositionY);  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u306e\u6307\u5b9a\n\tglutInitWindowSize(WindowWidth, WindowHeight);             //\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n\tglutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE);              //\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306e\u6307\u5b9a\n\tglutCreateWindow(WindowTitle);                             //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\n\tglutDisplayFunc(display);                                  //\u63cf\u753b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\uff08\u95a2\u6570\u540d\uff1adisplay\uff09\n\tglutIdleFunc(idle);                                        //\u30d7\u30ed\u30b0\u30e9\u30e0\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\tinitialize();                                              //\u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n\tglutMainLoop();\n\treturn 0;\n}\n//----------------------------------------------------\n// \u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid initialize(void)\n{\n\tglClearColor(0.0, 0.0, 0.0, 1.0); //\u80cc\u666f\u8272\n\tglMatrixMode( GL_PROJECTION );\n\tglLoadIdentity();\n\tgluPerspective(30.0, (double)WindowWidth/(double)WindowHeight, 0.1, 1000.0); //\u900f\u8996\u6295\u5f71\u6cd5\u306e\u8996\u4f53\u7a4dgluPerspactive(th, w/h, near, far);\n\n\tglMatrixMode( GL_MODELVIEW );\n\tglLoadIdentity();\n\tgluLookAt(\n\t\t   0.0,  0.0, 186.0,  // \u8996\u70b9\u306e\u4f4d\u7f6ex,y,z;\n\t\t   0.0,  0.0, 0.0,    // \u8996\u754c\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306e\u53c2\u7167\u70b9\u5ea7\u6a19x,y,z\n\t\t   0.0,  1.0, 0.0);   // \u8996\u754c\u306e\u4e0a\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30ebx,y,z\n}\n//--------------------------------------------------------\n// \u30a2\u30a4\u30c9\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n//--------------------------------------------------------\nvoid idle()\n{\n\tglutPostRedisplay(); //glutDisplayFunc()\u3092\uff11\u56de\u5b9f\u884c\u3059\u308b\n}\n//----------------------------------------------------\n// \u63cf\u753b\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid display(void)\n{\n\tglClear(GL_COLOR_BUFFER_BIT); //\u30d0\u30c3\u30d5\u30a1\u306e\u6d88\u53bb\n\n\tdraw();\n\n\tglutSwapBuffers(); //glutInitDisplayMode(GLUT_DOUBLE)\u3067\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u5229\u7528\u53ef\n}\nvoid draw()\n{\n\t//\u5e73\u65b9\u683c\u5b50\u306e\u30b5\u30a4\u30ba\n\tint tate = 100, yoko = 100;\n\tint vertexNumber = yoko * tate ;\n\tint indexNumber  = 2 * (yoko-1) * (tate-1);\n\n\tGLfloat (*vertices)[3] = new GLfloat[vertexNumber][3];\n\tGLfloat (*colors)[4]   = new GLfloat[vertexNumber][4];\n\tGLuint  (*indices)[3]  = new GLuint[indexNumber][3];\n\tint k=0; \n\tfor (int i = 0; i < tate; i++) {\n\t\tfor (int j = 0; j < yoko; j++) {\n\t\t\t//\u9802\u70b9\u914d\u5217\u306e\u8a2d\u5b9a\n\t\t\tvertices[k][0] = i;\n\t\t\tvertices[k][1] = j;\n\t\t\tvertices[k][2] = 0.0;\n\n\t\t\tGLfloat x = GLfloat(i - tate / 2) / tate;\n\t\t\tGLfloat y = GLfloat(j - yoko / 2) / yoko;\n\t\t\tGLfloat f = exp(-10.0*(x * x + y * y));//\u30ac\u30a6\u30b9\u5206\u5e03\n\t\t\t//\u30ab\u30e9\u30fc\u914d\u5217\u306e\u8a2d\u5b9a\n\t\t\tcolors[k][0] = f;\n\t\t\tcolors[k][1] = f;\n\t\t\tcolors[k][2] = f;\n\t\t\tcolors[k][3] = 1.0;\n\t\t\tk++;\n\t\t}\n\t}\n\n\tk=0;\n\tfor (int i = 0; i < tate - 1; i++) {\n\t\tfor (int j = 0; j < yoko - 1; j++) {\n\t\t\tindices[k][0] =yoko * i + j;             //\u4e09\u89d2\u5f62\uff11\u306e\u9802\u70b9\uff11\n\t\t\tindices[k][1] =yoko * i + (j + 1);       //\u4e09\u89d2\u5f62\uff11\u306e\u9802\u70b9\uff12\n\t\t\tindices[k][2] =yoko * (i + 1) + (j + 1); //\u4e09\u89d2\u5f62\uff11\u306e\u9802\u70b9\uff13\n\t\t\tk++;\n\t\t\tindices[k][0] =yoko * i + j;             //\u4e09\u89d2\u5f62\uff12\u306e\u9802\u70b9\uff11\n\t\t\tindices[k][1] =yoko * (i + 1) + j;       //\u4e09\u89d2\u5f62\uff12\u306e\u9802\u70b9\uff12\n\t\t\tindices[k][2] =yoko * (i + 1) + (j + 1); //\u4e09\u89d2\u5f62\uff12\u306e\u9802\u70b9\uff13\n\t\t\tk++;\n\t\t}\n\t}\n\n\tglPushMatrix();\n\t\tglTranslatef( -yoko/2+0.5, -tate/2+0.5, 0.0);     //\u5e73\u884c\u79fb\u52d5\n\t\tglRotatef(0.0 , 0.0, 0.0, 1.0);  //\u56de\u8ee2\n\t\t//\u56db\u89d2\u5f62\u306e\u63cf\u753b\n\t\tglBegin(GL_TRIANGLES);//GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES\n\t\t\tfor(int i=0; i<indexNumber; i++){\n\t\t\t\tfor(int j=0; j<3; j++){\n\t\t\t\t\tint k = indices[i][j];\n\t\t\t\t\tglColor4fv(colors[k]);\n\t\t\t\t\tglVertex3fv(vertices[k]); \n\t\t\t\t}\n\t\t\t}\n\t\tglEnd();\n\tglPopMatrix();\n}\n```\n![console.png](https://qiita-image-store.s3.amazonaws.com/0/43487/bcf412c7-d4d5-a3bc-6299-4059a2350bb0.png)\n\n![output.png](https://qiita-image-store.s3.amazonaws.com/0/43487/539db318-52cd-9fcf-4800-75408aa57404.png)\n\n\n# \u3010\u5b9f\u884c\u4f8b\uff14\uff1a\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089\u3001\u7acb\u65b9\u4f53\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3011\n##### [ \uff08\u30ea\u30f3\u30af\u5148\uff09\u6559\u6750\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u300c\u4eee\u60f3\u7269\u7406\u5b9f\u9a13\u5ba4\u69cb\u7bc9\u306e\u306e\u305f\u3081\u306eOpenGL, WebGL, GLSL\u5165\u9580\u300d](http://www.natural-science.or.jp/sources/cube_GLUT.cpp)\n\n```{C++:C++ OpenGL}\n/*\nGLUT\uff1a\u7acb\u65b9\u4f53\u306e\u63cf\u753b\n*/\n#include <GL/glut.h>\n\nint WindowPositionX = 200;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eX\u5ea7\u6a19\nint WindowPositionY = 100;  //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u4f4d\u7f6e\u306eY\u5ea7\u6a19\nint WindowWidth  = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5e45\nint WindowHeight = 512;     //\u751f\u6210\u3059\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u9ad8\u3055\nchar WindowTitle[] = \"\u4e16\u754c\u306e\u59cb\u307e\u308a\";\t//\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30bf\u30a4\u30c8\u30eb\n\n//----------------------------------------------------\n// \u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff08\u5f8c\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u540d\u3068\u5f15\u6570\u306e\u5ba3\u8a00\uff09\n//----------------------------------------------------\nvoid initialize(void);\nvoid display(void);\nvoid idle(void);\nvoid draw(void);\n//----------------------------------------------------\n// \u30e1\u30a4\u30f3\u95a2\u6570\n//----------------------------------------------------\nint main(int argc, char *argv[])\n{\n\tglutInit(&argc, argv);                                     //\u74b0\u5883\u306e\u521d\u671f\u5316\n\tglutInitWindowPosition(WindowPositionX, WindowPositionY);  //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f4d\u7f6e\u306e\u6307\u5b9a\n\tglutInitWindowSize(WindowWidth, WindowHeight);             //\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\n\tglutInitDisplayMode(GLUT_RGBA | GLUT_DEPTH | GLUT_DOUBLE); //\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306e\u6307\u5b9a\n\tglutCreateWindow(WindowTitle);                             //\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4f5c\u6210\n\tglutDisplayFunc(display);                                  //\u63cf\u753b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\uff08\u95a2\u6570\u540d\uff1adisplay\uff09\n\tglutIdleFunc(idle);                                        //\u30d7\u30ed\u30b0\u30e9\u30e0\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\tinitialize();                                              //\u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n\tglutMainLoop();\n\treturn 0;\n}\n//----------------------------------------------------\n// \u521d\u671f\u8a2d\u5b9a\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid initialize(void)\n{\n\tglClearColor(0.0, 0.0, 0.0, 1.0);              //\u30ab\u30e9\u30fc\u30d0\u30c3\u30d5\u30a1\u30fc\u306e\u521d\u671f\u5024\u306e\u6307\u5b9a\uff08\u80cc\u666f\u8272\uff09\n\tglEnable( GL_DEPTH_TEST );                     //\u30c7\u30d7\u30b9\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u6709\u52b9\u5316\n\tglViewport( 0, 0, WindowWidth, WindowHeight ); //\u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u306e\u8a2d\u5b9a\n\n\tglMatrixMode( GL_PROJECTION );  //\u884c\u5217\u30e2\u30fc\u30c9\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u884c\u5217\u306b\u6307\u5b9a\n\tglLoadIdentity();               //\u30ab\u30ec\u30f3\u30c8\u884c\u5217\u306e\u521d\u671f\u5316\n\tgluPerspective(30.0, (double)WindowWidth/(double)WindowHeight, 0.1, 1000.0); //\u900f\u8996\u6295\u5f71\u6cd5\u306e\u8996\u4f53\u7a4dgluPerspactive(th, w/h, near, far);\n\n}\n//--------------------------------------------------------\n// \u30a2\u30a4\u30c9\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n//--------------------------------------------------------\nvoid idle()\n{\n\tglutPostRedisplay(); //glutDisplayFunc()\u3092\uff11\u56de\u5b9f\u884c\u3059\u308b\n}\n//----------------------------------------------------\n// \u63cf\u753b\u306e\u95a2\u6570\n//----------------------------------------------------\nvoid display(void)\n{\n\tglClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); //\u30d0\u30c3\u30d5\u30a1\u306e\u6d88\u53bb\n\tglMatrixMode( GL_MODELVIEW ); //\u884c\u5217\u30e2\u30fc\u30c9\u3092\u30e2\u30c7\u30eb\u30d3\u30e5\u30fc\u884c\u5217\u306b\u6307\u5b9a\n\tglLoadIdentity();             //\u30ab\u30ec\u30f3\u30c8\u884c\u5217\u306e\u521d\u671f\u5316\n\n\t/////////////////////////////////////////////\n\t// \u8996\u70b9\u306e\u8a2d\u5b9a\n\t/////////////////////////////////////////////\n\tgluLookAt(             // \u8996\u70b9\u306e\u8a2d\u5b9a\n\t\t   5.0, 5.0, 5.0,    // \u8996\u70b9\u306e\u4f4d\u7f6ex,y,z;\n\t\t   0.0, 0.0, 0.0,    // \u8996\u754c\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306e\u53c2\u7167\u70b9\u5ea7\u6a19x,y,z\n\t\t   0.0, 0.0, 1.0);   // \u8996\u754c\u306e\u4e0a\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30ebx,y,z\n\n\tdraw();\n\n\tglutSwapBuffers(); //glutInitDisplayMode(GLUT_DOUBLE)\u3067\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u5229\u7528\u53ef\n}\nint step = 0;\nvoid draw()\n{\n\tstep++;\n\t/////////////////////////////////////////////\n\t// \u9802\u70b9\u5ea7\u6a19\u306e\u914d\u5217\n\t/////////////////////////////////////////////\n\tGLfloat vertices[24][3] = { \n\t\t{-1.0, -1.0,  1.0}, { 1.0, -1.0,  1.0}, { 1.0,  1.0,  1.0}, {-1.0,  1.0,  1.0}, // A\u9762\n\t\t{-1.0, -1.0, -1.0}, {-1.0,  1.0, -1.0}, { 1.0,  1.0, -1.0}, { 1.0, -1.0, -1.0}, // B\u9762\n\t\t{-1.0,  1.0, -1.0}, {-1.0,  1.0,  1.0}, { 1.0,  1.0,  1.0}, { 1.0,  1.0, -1.0}, // C\u9762\n\t\t{-1.0, -1.0, -1.0}, { 1.0, -1.0, -1.0}, { 1.0, -1.0,  1.0}, {-1.0, -1.0,  1.0}, // D\u9762\n\t\t{ 1.0, -1.0, -1.0}, { 1.0,  1.0, -1.0}, { 1.0,  1.0,  1.0}, { 1.0, -1.0,  1.0}, // E\u9762\n\t\t{-1.0, -1.0, -1.0}, {-1.0, -1.0,  1.0}, {-1.0,  1.0,  1.0}, {-1.0,  1.0, -1.0}  // F\u9762\n\t};\n\t/////////////////////////////////////////////\n\t// \u9802\u70b9\u8272\u306e\u914d\u5217\n\t/////////////////////////////////////////////\n\tGLfloat colors[24][4] = {\n\t\t{1.0, 0.0, 0.0, 1.0}, {1.0, 1.0, 0.0, 1.0}, {1.0, 1.0, 1.0, 1.0}, {1.0, 0.0, 1.0, 1.0}, // A\u9762\n\t\t{0.0, 0.0, 0.0, 1.0}, {0.0, 0.0, 1.0, 1.0}, {0.0, 1.0, 1.0, 1.0}, {0.0, 1.0, 0.0, 1.0}, // B\u9762\n\t\t{0.0, 0.0, 1.0, 1.0}, {1.0, 0.0, 1.0, 1.0}, {1.0, 1.0, 1.0, 1.0}, {0.0, 1.0, 1.0, 1.0}, // C\u9762\n\t\t{0.0, 0.0, 0.0, 1.0}, {0.0, 1.0, 0.0, 1.0}, {1.0, 1.0, 0.0, 1.0}, {1.0, 0.0, 0.0, 1.0}, // D\u9762\n\t\t{0.0, 1.0, 0.0, 1.0}, {0.0, 1.0, 1.0, 1.0}, {1.0, 1.0, 1.0, 1.0}, {1.0, 1.0, 0.0, 1.0}, // E\u9762\n\t\t{0.0, 0.0, 0.0, 1.0}, {1.0, 0.0, 0.0, 1.0}, {1.0, 0.0, 1.0, 1.0}, {0.0, 0.0, 1.0, 1.0}  // F\u9762\n\t};\n\t/////////////////////////////////////////////\n\t// \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u914d\u5217\n\t/////////////////////////////////////////////\n\tGLuint indices[36] = {\n\t\t0, 1, 2,      0,  2, 3,    // A\u9762\n\t\t4, 5, 6,      4,  6, 7,    // B\u9762\n\t\t8, 9, 10,     8,  10, 11,  // C\u9762\n\t\t12, 13, 14,   12, 14, 15,  // D\u9762\n\t\t16, 17, 18,   16, 18, 19,  // E\u9762\n\t\t20, 21, 22,   20, 22, 23   // F\u9762\n\t};\n\t/////////////////////////////////////////////\n\t// \u7acb\u65b9\u4f53\u306e\u63cf\u753b\n\t/////////////////////////////////////////////\n\n\tglPushMatrix();\n\t\tglTranslatef( 0.0, 0.0, 0.0);    //\u5e73\u884c\u79fb\u52d5\n\t\tglRotatef(step , 0.0, 0.0, 1.0);  //\u56de\u8ee2\n\t\tglBegin(GL_TRIANGLES);\n\t\t\tfor(int i=0; i<36; i++){\n\t\t\t\tint k = indices[i];\n\t\t\t\tglColor4fv(colors[k]); glVertex3fv(vertices[k]); \n\t\t\t}\n\t\tglEnd();\t\n\tglPopMatrix();\n}\n```\n\n![console.png](https://qiita-image-store.s3.amazonaws.com/0/43487/289d32bb-586b-1619-f392-ab7aa64085ff.png)\n\n![output.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8af34063-04a0-3f01-8b73-efa2d6dafac0.png)\n\n# \uff08\u52d5\u753b\uff09 \n### \u203b \u5b9f\u969b\u306b\u51fa\u529b\u3055\u308c\u308b\u7acb\u65b9\u4f53\u306f\u3001\u52d5\u753b\u3088\u308a\u3082\u305a\u3063\u3068\u9ad8\u901f\u3067\u56de\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\n##### \uff08 \u52d5\u753b\u30ad\u30e3\u30d7\u30c1\u30e3\u30bd\u30d5\u30c8 _BBFlashBack_ \uff08\u7121\u511f\u7248\uff09\u306e\u6027\u80fd\u30b9\u30da\u30c3\u30af\u306e\u95a2\u4fc2\u3067\u3001\u56de\u8ee2\u901f\u5ea6\u306f\u9045\u304f\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\uff09\n##[ \uff08\u52d5\u753b\u3078\u306e\u30ea\u30f3\u30af\uff09 _YouTube_ ](https://www.youtube.com/watch?v=bS7DHebkb4E&feature=youtu.be)\n![movie.png](https://qiita-image-store.s3.amazonaws.com/0/43487/3939bf42-833a-d712-db73-f761cca1c0ea.png)\n\n\n"}