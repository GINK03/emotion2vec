{"context": " More than 1 year has passed since last update.\u307f\u306a\u3055\u3093\u3001\u304a\u306f\u306b\u3061\u3070\u3093\u306f\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u6642\u306b\u4ed6\u306e\u30ea\u30b9\u30ca\u30fc\u306e\u89b3\u6e2c\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u305b\u3066\u3001\n\u30bf\u30c3\u30c1\u3092\u72ec\u5360\u3059\u308b\u51e6\u7406\u3092 Lua \u3067\u3084\u308b\u305f\u3081\u306b\u884c\u3063\u305f\u4e8b\u3092\u30e1\u30e2\u3057\u305f\u3082\u306e\u3067\u3059\u3002\nScrollView \u306e\u5b9f\u88c5\u4f8b\u306f\u3053\u3053\u3067\u306f\u89e3\u8aac\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u30bf\u30a4\u30c8\u30eb\u8a50\u6b3a\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u5fdc\u7528\u3059\u308c\u3070 Lua \u306e\u307f\u3067 ScrollView \u306e\u5b9f\u88c5\u3082\u3067\u304d\u308b\u69d8\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\nC++\u3067\u66f8\u3044\u305f\u6642\u3068\u306e\u6bd4\u8f03\nC++ \u4e0a\u306e cocos2d-x 3.x \u3067\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u3092\u901a\u3057\u3066\u3001\nLua Bindings \u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u3001C++ \u3067 ScrollView \u3092\u66f8\u3053\u3046\u3068\u3057\u305f\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nTouchThief.cpp\n// private std::array<bool, 16> isTouchStolen;\n// private cocos2d::EventListenerTouchOneByOne *touchListener;\n\nbool TouchThief::init()\n{\n    if (!cocos2d::Layer::init()) return false;\n\n    // \u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u306e\u767b\u9332\n    touchListener = cocos2d::EventListenerTouchOneByOne:create();\n    touchListener->onTouchBegan = CC_CALLBACK_2(TouchThief::onTouchBegan, this);\n    touchListener->onTouchMoved = CC_CALLBACK_2(TouchThief::onTouchMoved, this);\n    cocos2d::Director::getInstance()->getEventDispatcher()\n    ->addEventListenerWithSceneGraphPriority(touchListener, this);\n}\n\nvoid TouchThief::onTouchBegan(Touch *touch, Event *event)\n{\n    // \u307e\u3060\u30bf\u30c3\u30c1\u3092\u76d7\u3093\u3067\u3044\u306a\u3044\n    isTouchStolen[touch->getId()] = false;\n}\n\nvoid TouchThief::onTouchMoved(Touch *touch, Event *event)\n{\n    // 8px \u4ee5\u4e0a\u52d5\u3044\u305f\u3089\u30bf\u30c3\u30c1\u3092\u76d7\u3080\n    constexpr float threshold = 8.0f * 8.0f;\n\n    // \u307e\u3060\u30bf\u30c3\u30c1\u3092\u76d7\u3093\u3067\u3044\u306a\u3044\u72b6\u614b\u3067\u3042\u308b\u304b\n    if (!isTouchStolen[touch->getId()]) {\n        // \u30bf\u30c3\u30c1\u306e\u8d77\u70b9\u304b\u3089\u306e\u79fb\u52d5\u91cf\n        auto startPos = touch->getStartLocationInView();\n        auto currentPos = touch->getLocationInView();\n        auto delta = currentPos - startPos;\n\n        // \u5341\u5206\u306b\u52d5\u3044\u3066\u3044\u308b\n        if (delta.lengthSquared() >= threshold) {\n            // \u30ad\u30e3\u30f3\u30bb\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u751f\u6210\n            cocos2d::EventTouch eventTouch;\n            eventTouch.setEventCode(cocos2d::EventTouch::EventCode::CANCELLED);\n            eventTouch.setTouches(std::vector<cocos2d::Touch*>{touch});\n\n            // \u81ea\u5206\u4ee5\u5916\u306b\u30ad\u30e3\u30f3\u30bb\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u9001\u51fa\n            touchListener->setEnabled(false);\n            cocos2d::Director::getInstance()->getEventDispatcher()->dispatchEvent(&eventTouch);\n            touchListener->setEnabled(true);\n\n            isTouchStolen[touch->getId()] = true;\n        }\n    }\n}\n\n\n\n\u3053\u308c\u3092\u7d20\u76f4\u306b lua \u3067\u66f8\u304f\u5834\u5408\u306f\u3053\u3046\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nTouchThief.lua\n-- CC_CALLBACK_* \u306e\u4ee3\u308f\u308a\nlocal function selector(thiz, func)\n    local pair = setmetatable({ thiz, func }, { __mode = \"v\"})\n    return function(...)\n        if pair[1] ~= nil and pair[2] ~= nil then\n            return pair[2](pair[1], ...)\n        end\n    end\nend\n\nlocal TouchThief = class(\"TouchThief\", function() return cc.Layer:create() end)\n\n-- 8px \u4ee5\u4e0a\u52d5\u3044\u305f\u3089\u30bf\u30c3\u30c1\u3092\u76d7\u3080\nTouchThief.TOUCH_THRESHOLD = 8.0 * 8.0\n\nfunction TouchThief:ctor()\n    self.isTouchStolen = {}\n\n    -- \u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u306e\u767b\u9332\n    local touchListener = cc.EventListenerTouchOneByOne:create() \n    touchListener:registerScriptHandler(selector(self, self.onTouchBegan), cc.Handler.EVENT_TOUCH_BEGAN)\n    touchListener:registerScriptHandler(selector(self, self.onTouchMoved), cc.Handler.EVENT_TOUCH_MOVED)\n    cc.Director:getInstance():getEventDispatcher():addEventListenerWithSceneGraphPriority(\n        touchListener, self\n    )\n    self.touchListener = touchListener\nend\n\nfunction TouchThief:onTouchBegan(touch, event)\n    -- \u307e\u3060\u30bf\u30c3\u30c1\u3092\u76d7\u3093\u3067\u3044\u306a\u3044\n    self.isTouchStolen[touch:getId() + 1] = false\nend\n\nfunction TouchThief:onTouchMoved(touch, event)\n    -- \u307e\u3060\u30bf\u30c3\u30c1\u3092\u76d7\u3093\u3067\u3044\u306a\u3044\u72b6\u614b\u3067\u3042\u308b\u304b\n    local touchId = touch:getId() + 1\n    if not self.isTouchStolen[touchId]) then\n        -- \u30bf\u30c3\u30c1\u306e\u8d77\u70b9\u304b\u3089\u306e\u79fb\u52d5\u91cf\n        local startPos = touch:getStartLocationInView()\n        local currentPos = touch:getLocationInView()\n        local delta = cc.p(currentPos.x - startPos.x, currentPos.y - startPos.y)\n        if delta.x * delta.x + delta.y * delta.y >= TouchThief.TOUCH_THRESHOLD then\n            -- \u30ad\u30e3\u30f3\u30bb\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u751f\u6210\n            local eventTouch = cc.EventTouch:new()\n            eventTouch:setEventCode(3) -- cocos2d::EventTouch::EventCode::CANCELLED\n            eventTouch:setTouches({touch}) -- <- !!!\n\n            -- \u81ea\u5206\u4ee5\u5916\u306b\u30ad\u30e3\u30f3\u30bb\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u9001\u51fa\n            self.touchListener:setEnabled(false)\n            cc.Director:getInstance():getEventDispatcher():dispatchEvent(eventTouch)\n            self.touchListener:setEnabled(true)\n\n            self.isTouchStolen[touchId] = true\n        end\n    end\nend\n\n\n\n\u3053\u308c\u3067\u52d5\u3044\u3066\u6b32\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u52d5\u304d\u307e\u305b\u3093\u3002\n\u7406\u7531\u306f cc.EventTouch \u306b setTouches \u304c\u7121\u3044\u305f\u3081\u3067\u3059\u3002\n\u56f0\u308a\u307e\u3057\u305f\u3002\n\n\u305d\u3046\u3060 cc.EventTouch \u306b get/setTouches() \u3092\u8ffd\u52a0\u3057\u3088\u3046\n\u305d\u3053\u3067\u3001Lua Bindings \u3092 \u76f4\u63a5 \u81ea\u5206\u3067\u66f8\u3044\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f lua_cocos2dx_manual.cpp \u306b\u66f8\u304d\u8fbc\u307f\u307e\u3057\u305f\u3002\n(\u305f\u3076\u3093\u3001\u76f4\u63a5 extendEventTouch() \u306b getLuaState() \u3092\u6e21\u3057\u3066\u3082\u52d5\u304f\u3068\u601d\u3046\u306e\u3067\u3001\u308f\u3051\u3066\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002)\n\u307e\u305a\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 register_all_cocos2dx_manual() \u306e\u524d\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\nlua_cocos2dx_manual.cpp\n/**\n * cc.Touch:getTouches() \u7528\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u95a2\u6570\n */\nstatic int lua_cocos2dx_EventTouch_getTouches(lua_State* tolua_S)\n{\n    int argc = 0;\n    cocos2d::EventTouch* cobj = nullptr;\n\n    #if COCOS2D_DEBUG >= 1\n        // self \u304c cc.EventTouch \u304b\u78ba\u8a8d\n        tolua_Error tolua_err;\n        if (!tolua_isusertype(tolua_S, 1, \"cc.EventTouch\", 0, &tolua_err)) goto tolua_lerror;\n    #endif\n\n    cobj = reinterpret_cast<cocos2d::EventTouch*>(tolua_tousertype(tolua_S, 1, 0));\n    #if COCOS2D_DEBUG >= 1\n        // \u5bfe\u5fdc\u3059\u308b C++ \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u304b\u3063\u305f\u5834\u5408\n        if (!cobj) {\n            tolua_error(tolua_S,\"invalid 'cobj' in function 'lua_cocos2dx_EventTouch_getTouches'\", nullptr);\n            return 0;\n        }\n    #endif\n\n    // \u5f15\u6570\u306e\u6570\u3092\u53d6\u5f97\n    argc = lua_gettop(tolua_S) - 1;\n\n    // 0 \u500b\u4ee5\u5916\u306e\u5f15\u6570\u306e\u6570\u306f\u53d7\u3051\u4ed8\u3051\u306a\u3044\n    if (argc != 0) {\n        luaL_error(tolua_S, \"%s has wrong number of arguments: %d, was expecting %d\\n \", \"cc.EventTouch:getTouches\", argc, 0);\n        return 0;\n    }\n\n    {\n        auto &touches = cobj->getTouches();\n\n        // table \u3092\u4f5c\u6210\u3057\u3066 1 \u3064\u305a\u3064 cocos2d::Touch \u306b\u5bfe\u5fdc\u3059\u308b luaval \u3092\u8a70\u3081\u3066\u3044\u304f\n        lua_createtable(tolua_S, (int)touches.size(), 0);\n        int table = lua_gettop(tolua_S);\n        int index = 1;\n        for (auto it = std::begin(touches); it != std::end(touches); ++it, ++index) {\n            object_to_luaval(tolua_S, \"cc.Touch\", *it);\n            lua_rawseti(tolua_S, table, index);\n        }\n        return 1;\n    }\n\n    #if COCOS2D_DEBUG >= 1\n        tolua_lerror:\n        tolua_error(tolua_S,\"#ferror in function 'lua_cocos2dx_EventTouch_getTouches'.\",&tolua_err);\n        return 0;\n    #endif\n}\n\n/**\n * cc.Touch:setTouches() \u7528\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u95a2\u6570\n */\nstatic int lua_cocos2dx_EventTouch_setTouches(lua_State* tolua_S)\n{\n    int argc = 0;\n    cocos2d::EventTouch* cobj = nullptr;\n\n    #if COCOS2D_DEBUG >= 1\n        // self \u304c cc.EventTouch \u304b\u78ba\u8a8d\n        tolua_Error tolua_err;\n        if (!tolua_isusertype(tolua_S, 1, \"cc.EventTouch\", 0, &tolua_err)) goto tolua_lerror;\n    #endif\n\n    cobj = reinterpret_cast<cocos2d::EventTouch*>(tolua_tousertype(tolua_S, 1, 0));\n    #if COCOS2D_DEBUG >= 1\n        // \u5bfe\u5fdc\u3059\u308b C++ \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u304b\u3063\u305f\u5834\u5408\n        if (!cobj) {\n            tolua_error(tolua_S,\"invalid 'cobj' in function 'lua_cocos2dx_EventTouch_setTouches'\", nullptr);\n            return 0;\n        }\n    #endif\n\n    // \u5f15\u6570\u306e\u6570\u3092\u53d6\u5f97\n    argc = lua_gettop(tolua_S) - 1;\n\n    // 1 \u500b\u4ee5\u5916\u306e\u5f15\u6570\u306e\u6570\u306f\u53d7\u3051\u4ed8\u3051\u306a\u3044\n    if (argc != 1) {\n        luaL_error(tolua_S, \"%s has wrong number of arguments: %d, was expecting %d\\n \", \"cc.EventTouch:setTouches\", argc, 1);\n        return 0;\n    }\n\n    {\n        std::vector<cocos2d::Touch*> touches;\n        // \u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u304c table \u304b\u30c1\u30a7\u30c3\u30af\n        if (tolua_istable(tolua_S, 2, 0, nullptr)) {\n            // 1 \u3064\u305a\u3064 luaval \u3092\u5bfe\u5fdc\u3059\u308b cocos2d::Touch* \u306b\u5909\u63db\u3057\u3066 vector \u306b\u8a70\u3081\u308b\n            std::size_t length = lua_objlen(tolua_S, 2);\n            touches.resize(length);\n            for (std::size_t i = 0; i < length; i++) {\n                lua_pushnumber(tolua_S, i + 1);\n                lua_gettable(tolua_S, 2);\n                if (!tolua_isusertype(tolua_S, -1, \"cc.Touch\", 0, nullptr)) {\n                    luaL_error(tolua_S, \"%s has wrong a argument.\\n \", \"cc.EventTouch:setTouches\");\n                    return 0;\n                }\n                luaval_to_object(tolua_S, -1, \"cc.Touch\", &touches[i], \"cc.EventTouch:setTouches\");\n            }\n        }\n\n        // cocos2d::Touch* \u3092\u8a70\u3081\u305f vector \u3092\u6e21\u3059\n        cobj->setTouches(touches);\n        return 1;\n    }\n\n    #if COCOS2D_DEBUG >= 1\n        tolua_lerror:\n        tolua_error(tolua_S,\"#ferror in function 'lua_cocos2dx_EventTouch_setTouches'.\",&tolua_err);\n        return 0;\n    #endif\n}\n\n/**\n * cc.Touch \u306e\u6a5f\u80fd\u3092\u62e1\u5f35\u3059\u308b\u95a2\u6570\n */\nstatic void extendEventTouch(lua_State* tolua_S)\n{\n    lua_pushstring(tolua_S, \"cc.EventTouch\");\n    lua_rawget(tolua_S, LUA_REGISTRYINDEX);\n    if (lua_istable(tolua_S,-1))\n    {\n        tolua_function(tolua_S, \"getTouches\", lua_cocos2dx_EventTouch_getTouches);\n        tolua_function(tolua_S, \"setTouches\", lua_cocos2dx_EventTouch_setTouches);\n    }\n    lua_pop(tolua_S, 1);\n}\n\n\n\n\u6b21\u306b register_all_cocos2dx_manual() \u306b\u4ee5\u4e0b\u306e\u884c\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nlua_cocos2dx_manual.cpp\nint register_all_cocos2dx_manual(lua_State* tolua_S)\n{\n    if (NULL == tolua_S)\n        return 0;\n\n    extendNode(tolua_S);\n    //...\n    //...\n\n    extendEventTouch(tolua_S);  // <- \u3053\u306e\u884c\u3092\u8ffd\u52a0\n\n    return 0;\n}\n\n\n\u3053\u308c\u3067\u3001\u5192\u982d\u306b\u66f8\u3044\u305f lua \u30b3\u30fc\u30c9\u3082\u554f\u984c\u306a\u304f\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u307f\u306a\u3055\u3093\u3001\u304a\u306f\u306b\u3061\u3070\u3093\u306f\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u6642\u306b\u4ed6\u306e\u30ea\u30b9\u30ca\u30fc\u306e\u89b3\u6e2c\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u305b\u3066\u3001\n\u30bf\u30c3\u30c1\u3092\u72ec\u5360\u3059\u308b\u51e6\u7406\u3092 Lua \u3067\u3084\u308b\u305f\u3081\u306b\u884c\u3063\u305f\u4e8b\u3092\u30e1\u30e2\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n*ScrollView \u306e\u5b9f\u88c5\u4f8b\u306f\u3053\u3053\u3067\u306f\u89e3\u8aac\u3057\u3066\u3044\u307e\u305b\u3093\u3002*\n\u30bf\u30a4\u30c8\u30eb\u8a50\u6b3a\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u5fdc\u7528\u3059\u308c\u3070 Lua \u306e\u307f\u3067 ScrollView \u306e\u5b9f\u88c5\u3082\u3067\u304d\u308b\u69d8\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n#C++\u3067\u66f8\u3044\u305f\u6642\u3068\u306e\u6bd4\u8f03\nC++ \u4e0a\u306e cocos2d-x 3.x \u3067\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u3092\u901a\u3057\u3066\u3001\nLua Bindings \u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\n\u307e\u305a\u3001C++ \u3067 ScrollView \u3092\u66f8\u3053\u3046\u3068\u3057\u305f\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```cpp:TouchThief.cpp\n// private std::array<bool, 16> isTouchStolen;\n// private cocos2d::EventListenerTouchOneByOne *touchListener;\n\nbool TouchThief::init()\n{\n\tif (!cocos2d::Layer::init()) return false;\n\t\n\t// \u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u306e\u767b\u9332\n\ttouchListener = cocos2d::EventListenerTouchOneByOne:create();\n\ttouchListener->onTouchBegan = CC_CALLBACK_2(TouchThief::onTouchBegan, this);\n\ttouchListener->onTouchMoved = CC_CALLBACK_2(TouchThief::onTouchMoved, this);\n\tcocos2d::Director::getInstance()->getEventDispatcher()\n\t->addEventListenerWithSceneGraphPriority(touchListener, this);\n}\n\nvoid TouchThief::onTouchBegan(Touch *touch, Event *event)\n{\n\t// \u307e\u3060\u30bf\u30c3\u30c1\u3092\u76d7\u3093\u3067\u3044\u306a\u3044\n\tisTouchStolen[touch->getId()] = false;\n}\n\nvoid TouchThief::onTouchMoved(Touch *touch, Event *event)\n{\n\t// 8px \u4ee5\u4e0a\u52d5\u3044\u305f\u3089\u30bf\u30c3\u30c1\u3092\u76d7\u3080\n\tconstexpr float threshold = 8.0f * 8.0f;\n\t\n\t// \u307e\u3060\u30bf\u30c3\u30c1\u3092\u76d7\u3093\u3067\u3044\u306a\u3044\u72b6\u614b\u3067\u3042\u308b\u304b\n\tif (!isTouchStolen[touch->getId()]) {\n\t\t// \u30bf\u30c3\u30c1\u306e\u8d77\u70b9\u304b\u3089\u306e\u79fb\u52d5\u91cf\n\t\tauto startPos = touch->getStartLocationInView();\n\t\tauto currentPos = touch->getLocationInView();\n\t\tauto delta = currentPos - startPos;\n\t\t\n\t\t// \u5341\u5206\u306b\u52d5\u3044\u3066\u3044\u308b\n\t\tif (delta.lengthSquared() >= threshold) {\n\t\t\t// \u30ad\u30e3\u30f3\u30bb\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u751f\u6210\n\t\t\tcocos2d::EventTouch eventTouch;\n\t\t\teventTouch.setEventCode(cocos2d::EventTouch::EventCode::CANCELLED);\n\t\t\teventTouch.setTouches(std::vector<cocos2d::Touch*>{touch});\n\t\t\t\n\t\t\t// \u81ea\u5206\u4ee5\u5916\u306b\u30ad\u30e3\u30f3\u30bb\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u9001\u51fa\n\t\t\ttouchListener->setEnabled(false);\n\t\t\tcocos2d::Director::getInstance()->getEventDispatcher()->dispatchEvent(&eventTouch);\n\t\t\ttouchListener->setEnabled(true);\n\t\t\n\t\t\tisTouchStolen[touch->getId()] = true;\n\t\t}\n\t}\n}\n\n```\n\n\u3053\u308c\u3092\u7d20\u76f4\u306b lua \u3067\u66f8\u304f\u5834\u5408\u306f\u3053\u3046\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```lua:TouchThief.lua\n-- CC_CALLBACK_* \u306e\u4ee3\u308f\u308a\nlocal function selector(thiz, func)\n\tlocal pair = setmetatable({ thiz, func }, { __mode = \"v\"})\n\treturn function(...)\n\t\tif pair[1] ~= nil and pair[2] ~= nil then\n\t\t\treturn pair[2](pair[1], ...)\n\t\tend\n\tend\nend\n\nlocal TouchThief = class(\"TouchThief\", function() return cc.Layer:create() end)\n\n-- 8px \u4ee5\u4e0a\u52d5\u3044\u305f\u3089\u30bf\u30c3\u30c1\u3092\u76d7\u3080\nTouchThief.TOUCH_THRESHOLD = 8.0 * 8.0\n\nfunction TouchThief:ctor()\n\tself.isTouchStolen = {}\n\t\n\t-- \u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u306e\u767b\u9332\n\tlocal touchListener = cc.EventListenerTouchOneByOne:create() \n\ttouchListener:registerScriptHandler(selector(self, self.onTouchBegan), cc.Handler.EVENT_TOUCH_BEGAN)\n\ttouchListener:registerScriptHandler(selector(self, self.onTouchMoved), cc.Handler.EVENT_TOUCH_MOVED)\n\tcc.Director:getInstance():getEventDispatcher():addEventListenerWithSceneGraphPriority(\n\t\ttouchListener, self\n\t)\n\tself.touchListener = touchListener\nend\n\nfunction TouchThief:onTouchBegan(touch, event)\n    -- \u307e\u3060\u30bf\u30c3\u30c1\u3092\u76d7\u3093\u3067\u3044\u306a\u3044\n    self.isTouchStolen[touch:getId() + 1] = false\nend\n\nfunction TouchThief:onTouchMoved(touch, event)\n\t-- \u307e\u3060\u30bf\u30c3\u30c1\u3092\u76d7\u3093\u3067\u3044\u306a\u3044\u72b6\u614b\u3067\u3042\u308b\u304b\n\tlocal touchId = touch:getId() + 1\n\tif not self.isTouchStolen[touchId]) then\n\t\t-- \u30bf\u30c3\u30c1\u306e\u8d77\u70b9\u304b\u3089\u306e\u79fb\u52d5\u91cf\n\t\tlocal startPos = touch:getStartLocationInView()\n\t\tlocal currentPos = touch:getLocationInView()\n\t\tlocal delta = cc.p(currentPos.x - startPos.x, currentPos.y - startPos.y)\n\t\tif delta.x * delta.x + delta.y * delta.y >= TouchThief.TOUCH_THRESHOLD then\n\t\t\t-- \u30ad\u30e3\u30f3\u30bb\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u751f\u6210\n\t\t\tlocal eventTouch = cc.EventTouch:new()\n\t\t\teventTouch:setEventCode(3) -- cocos2d::EventTouch::EventCode::CANCELLED\n\t\t\teventTouch:setTouches({touch}) -- <- !!!\n\t\t\t\n\t\t\t-- \u81ea\u5206\u4ee5\u5916\u306b\u30ad\u30e3\u30f3\u30bb\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u9001\u51fa\n\t\t\tself.touchListener:setEnabled(false)\n\t\t\tcc.Director:getInstance():getEventDispatcher():dispatchEvent(eventTouch)\n\t\t\tself.touchListener:setEnabled(true)\n\t\t\t\n\t\t\tself.isTouchStolen[touchId] = true\n\t\tend\n\tend\nend\n\n```\n\n\u3053\u308c\u3067\u52d5\u3044\u3066\u6b32\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u52d5\u304d\u307e\u305b\u3093\u3002\n\u7406\u7531\u306f cc.EventTouch \u306b setTouches \u304c\u7121\u3044\u305f\u3081\u3067\u3059\u3002\n\u56f0\u308a\u307e\u3057\u305f\u3002\n\n#\u305d\u3046\u3060 cc.EventTouch \u306b get/setTouches() \u3092\u8ffd\u52a0\u3057\u3088\u3046\n\u305d\u3053\u3067\u3001Lua Bindings \u3092 **\u76f4\u63a5** \u81ea\u5206\u3067\u66f8\u3044\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f lua_cocos2dx_manual.cpp \u306b\u66f8\u304d\u8fbc\u307f\u307e\u3057\u305f\u3002\n(\u305f\u3076\u3093\u3001\u76f4\u63a5 extendEventTouch() \u306b getLuaState() \u3092\u6e21\u3057\u3066\u3082\u52d5\u304f\u3068\u601d\u3046\u306e\u3067\u3001\u308f\u3051\u3066\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002)\n\u307e\u305a\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 `register_all_cocos2dx_manual()` \u306e\u524d\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```cpp:lua_cocos2dx_manual.cpp\n/**\n * cc.Touch:getTouches() \u7528\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u95a2\u6570\n */\nstatic int lua_cocos2dx_EventTouch_getTouches(lua_State* tolua_S)\n{\n\tint argc = 0;\n\tcocos2d::EventTouch* cobj = nullptr;\n\t\n\t#if COCOS2D_DEBUG >= 1\n\t\t// self \u304c cc.EventTouch \u304b\u78ba\u8a8d\n\t\ttolua_Error tolua_err;\n\t\tif (!tolua_isusertype(tolua_S, 1, \"cc.EventTouch\", 0, &tolua_err)) goto tolua_lerror;\n\t#endif\n\t\n\tcobj = reinterpret_cast<cocos2d::EventTouch*>(tolua_tousertype(tolua_S, 1, 0));\n\t#if COCOS2D_DEBUG >= 1\n\t\t// \u5bfe\u5fdc\u3059\u308b C++ \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u304b\u3063\u305f\u5834\u5408\n\t\tif (!cobj) {\n\t\t\ttolua_error(tolua_S,\"invalid 'cobj' in function 'lua_cocos2dx_EventTouch_getTouches'\", nullptr);\n\t\t\treturn 0;\n\t\t}\n\t#endif\n\t\n\t// \u5f15\u6570\u306e\u6570\u3092\u53d6\u5f97\n\targc = lua_gettop(tolua_S) - 1;\n\t\n\t// 0 \u500b\u4ee5\u5916\u306e\u5f15\u6570\u306e\u6570\u306f\u53d7\u3051\u4ed8\u3051\u306a\u3044\n\tif (argc != 0) {\n\t\tluaL_error(tolua_S, \"%s has wrong number of arguments: %d, was expecting %d\\n \", \"cc.EventTouch:getTouches\", argc, 0);\n\t\treturn 0;\n\t}\n\t\n\t{\n\t\tauto &touches = cobj->getTouches();\n\t\t\n\t\t// table \u3092\u4f5c\u6210\u3057\u3066 1 \u3064\u305a\u3064 cocos2d::Touch \u306b\u5bfe\u5fdc\u3059\u308b luaval \u3092\u8a70\u3081\u3066\u3044\u304f\n\t\tlua_createtable(tolua_S, (int)touches.size(), 0);\n\t\tint table = lua_gettop(tolua_S);\n\t\tint index = 1;\n\t\tfor (auto it = std::begin(touches); it != std::end(touches); ++it, ++index) {\n\t\t\tobject_to_luaval(tolua_S, \"cc.Touch\", *it);\n\t\t\tlua_rawseti(tolua_S, table, index);\n\t\t}\n\t\treturn 1;\n\t}\n\t\n\t#if COCOS2D_DEBUG >= 1\n\t\ttolua_lerror:\n\t\ttolua_error(tolua_S,\"#ferror in function 'lua_cocos2dx_EventTouch_getTouches'.\",&tolua_err);\n\t\treturn 0;\n\t#endif\n}\n\n/**\n * cc.Touch:setTouches() \u7528\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u95a2\u6570\n */\nstatic int lua_cocos2dx_EventTouch_setTouches(lua_State* tolua_S)\n{\n\tint argc = 0;\n\tcocos2d::EventTouch* cobj = nullptr;\n\t\n\t#if COCOS2D_DEBUG >= 1\n\t\t// self \u304c cc.EventTouch \u304b\u78ba\u8a8d\n\t\ttolua_Error tolua_err;\n\t\tif (!tolua_isusertype(tolua_S, 1, \"cc.EventTouch\", 0, &tolua_err)) goto tolua_lerror;\n\t#endif\n\t\n\tcobj = reinterpret_cast<cocos2d::EventTouch*>(tolua_tousertype(tolua_S, 1, 0));\n\t#if COCOS2D_DEBUG >= 1\n\t\t// \u5bfe\u5fdc\u3059\u308b C++ \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u304b\u3063\u305f\u5834\u5408\n\t\tif (!cobj) {\n\t\t\ttolua_error(tolua_S,\"invalid 'cobj' in function 'lua_cocos2dx_EventTouch_setTouches'\", nullptr);\n\t\t\treturn 0;\n\t\t}\n\t#endif\n\t\n\t// \u5f15\u6570\u306e\u6570\u3092\u53d6\u5f97\n\targc = lua_gettop(tolua_S) - 1;\n\t\n\t// 1 \u500b\u4ee5\u5916\u306e\u5f15\u6570\u306e\u6570\u306f\u53d7\u3051\u4ed8\u3051\u306a\u3044\n\tif (argc != 1) {\n\t\tluaL_error(tolua_S, \"%s has wrong number of arguments: %d, was expecting %d\\n \", \"cc.EventTouch:setTouches\", argc, 1);\n\t\treturn 0;\n\t}\n\t\n\t{\n\t\tstd::vector<cocos2d::Touch*> touches;\n\t\t// \u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u304c table \u304b\u30c1\u30a7\u30c3\u30af\n\t\tif (tolua_istable(tolua_S, 2, 0, nullptr)) {\n\t\t    // 1 \u3064\u305a\u3064 luaval \u3092\u5bfe\u5fdc\u3059\u308b cocos2d::Touch* \u306b\u5909\u63db\u3057\u3066 vector \u306b\u8a70\u3081\u308b\n\t\t\tstd::size_t length = lua_objlen(tolua_S, 2);\n\t\t\ttouches.resize(length);\n\t\t\tfor (std::size_t i = 0; i < length; i++) {\n\t\t\t\tlua_pushnumber(tolua_S, i + 1);\n\t\t\t\tlua_gettable(tolua_S, 2);\n\t\t\t\tif (!tolua_isusertype(tolua_S, -1, \"cc.Touch\", 0, nullptr)) {\n\t\t\t\t\tluaL_error(tolua_S, \"%s has wrong a argument.\\n \", \"cc.EventTouch:setTouches\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tluaval_to_object(tolua_S, -1, \"cc.Touch\", &touches[i], \"cc.EventTouch:setTouches\");\n\t\t\t}\n\t\t}\n\t\t\n\t\t// cocos2d::Touch* \u3092\u8a70\u3081\u305f vector \u3092\u6e21\u3059\n\t\tcobj->setTouches(touches);\n\t\treturn 1;\n\t}\n\t\n\t#if COCOS2D_DEBUG >= 1\n\t\ttolua_lerror:\n\t\ttolua_error(tolua_S,\"#ferror in function 'lua_cocos2dx_EventTouch_setTouches'.\",&tolua_err);\n\t\treturn 0;\n\t#endif\n}\n\n/**\n * cc.Touch \u306e\u6a5f\u80fd\u3092\u62e1\u5f35\u3059\u308b\u95a2\u6570\n */\nstatic void extendEventTouch(lua_State* tolua_S)\n{\n\tlua_pushstring(tolua_S, \"cc.EventTouch\");\n\tlua_rawget(tolua_S, LUA_REGISTRYINDEX);\n\tif (lua_istable(tolua_S,-1))\n\t{\n\t\ttolua_function(tolua_S, \"getTouches\", lua_cocos2dx_EventTouch_getTouches);\n\t\ttolua_function(tolua_S, \"setTouches\", lua_cocos2dx_EventTouch_setTouches);\n\t}\n\tlua_pop(tolua_S, 1);\n}\n\n```\n\n\u6b21\u306b `register_all_cocos2dx_manual()` \u306b\u4ee5\u4e0b\u306e\u884c\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```cpp:lua_cocos2dx_manual.cpp\nint register_all_cocos2dx_manual(lua_State* tolua_S)\n{\n\tif (NULL == tolua_S)\n\t\treturn 0;\n\t\n\textendNode(tolua_S);\n\t//...\n\t//...\n\t\n\textendEventTouch(tolua_S);  // <- \u3053\u306e\u884c\u3092\u8ffd\u52a0\n\t\n\treturn 0;\n}\n```\n\n\u3053\u308c\u3067\u3001\u5192\u982d\u306b\u66f8\u3044\u305f lua \u30b3\u30fc\u30c9\u3082\u554f\u984c\u306a\u304f\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n", "tags": ["cocos2d-x", "Lua"]}