{"context": " More than 1 year has passed since last update.\u6a19\u6e96\u5165\u529b\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u304b\u3089\u3001\u306a\u304b\u3063\u305f\u3089 argv[1]\u3092unzip\u3059\u308b\u3002\n--dst \u3067unzip\u5148\u3092\u6307\u5b9a\u3002\u30c7\u30d5\u30a9\u30eb\u30c8 ./_unzip\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3002\n--setup\u3092\u4ed8\u3051\u308b\u3068\u3001$VIRTUAL_ENV/bin/uz.py \u306b\u3044\u308c\u3066\u304f\u308c\u308b\u306e\u3067\u30d1\u30b9\u304c\u901a\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u304c\u3001setup()\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u9069\u5f53:\n    from zipfile import ZipFile\n    import os\n    import sys\n    from StringIO import StringIO\n\n\n    def unzip(src,outdir='.'):\n        _unzip = lambda z,out : map(lambda n:  z.extract(n, out),\n                                    z.namelist())\n\n        if not os.path.exists(outdir):\n            os.makedirs(outdir)\n\n        if not sys.stdin.isatty() :\n            _unzip(ZipFile(StringIO(sys.stdin.read())), outdir)\n\n        elif src:\n            with open(src) as stream:\n                _unzip(ZipFile(stream), outdir)\n\n\n    def main():\n        from argparse import ArgumentParser\n        parser = ArgumentParser(description='Unzip stdin or specifile file.')\n        parser.add_argument('zipfile', metavar='ZIPFILE', type=str, nargs='?',\n                       help='File to be unziped.')\n\n        parser.add_argument('--dst', dest='destination',\n                            default='_unzip', required=False, )\n\n        parser.add_argument('--setup', dest='setup', action='store_true',\n                            required=False, )\n\n\n        args = parser.parse_args()\n\n        if args.setup:\n            sys.argv = [__file__,'install']\n            setup_me() \n        else:\n            unzip(args.zipfile, args.destination)\n\n    def setup_me():\n        from setuptools import setup\n\n        setup(\n            name = 'uz.py',\n            version = \"1\",\n            license = 'Simplfied BSD License',\n            author = 'Hideki Nara of LaFoaglia,Inc.',\n            author_email = 'gmail [at] hdknr.com',\n            maintainer = 'LaFoglia,Inc.',\n            maintainer_email = 'gmail [at] hdknr.com',\n            description = \"uz : Unzip\",\n            long_description = \"unzip script\",\n            platforms=['any'],\n            classifiers = [\n                'Development Status :: 4 - Beta',\n                'Environment :: Library',\n                'Intended Audience :: Developers',\n                'License :: OSI Approved :: Simplifed BSD License',\n                'Natural Language :: English',\n                'Operating System :: OS Independent',\n                'Programming Language :: Python',\n            ],\n            scripts= [os.path.abspath(__file__)]\n        )\n\n    if __name__ == '__main__':\n        main()\n\n\n\n\u6a19\u6e96\u5165\u529b\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u304b\u3089\u3001\u306a\u304b\u3063\u305f\u3089 argv[1]\u3092unzip\u3059\u308b\u3002\n\n--dst \u3067unzip\u5148\u3092\u6307\u5b9a\u3002\u30c7\u30d5\u30a9\u30eb\u30c8 ./_unzip\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3002\n--setup\u3092\u4ed8\u3051\u308b\u3068\u3001$VIRTUAL_ENV/bin/uz.py \u306b\u3044\u308c\u3066\u304f\u308c\u308b\u306e\u3067\u30d1\u30b9\u304c\u901a\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u304c\u3001setup()\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u9069\u5f53:\n\n```py\n    from zipfile import ZipFile\n    import os\n    import sys\n    from StringIO import StringIO\n    \n    \n    def unzip(src,outdir='.'):\n        _unzip = lambda z,out : map(lambda n:  z.extract(n, out),\n                                    z.namelist())\n    \n        if not os.path.exists(outdir):\n            os.makedirs(outdir)\n        \n        if not sys.stdin.isatty() :\n            _unzip(ZipFile(StringIO(sys.stdin.read())), outdir)\n        \n        elif src:\n            with open(src) as stream:\n                _unzip(ZipFile(stream), outdir)\n        \n    \n    def main():\n        from argparse import ArgumentParser\n        parser = ArgumentParser(description='Unzip stdin or specifile file.')\n        parser.add_argument('zipfile', metavar='ZIPFILE', type=str, nargs='?',\n                       help='File to be unziped.')\n    \n        parser.add_argument('--dst', dest='destination',\n                            default='_unzip', required=False, )\n    \n        parser.add_argument('--setup', dest='setup', action='store_true',\n                            required=False, )\n    \n    \n        args = parser.parse_args()\n    \n        if args.setup:\n            sys.argv = [__file__,'install']\n            setup_me() \n        else:\n            unzip(args.zipfile, args.destination)\n    \n    def setup_me():\n        from setuptools import setup\n    \n        setup(\n            name = 'uz.py',\n            version = \"1\",\n            license = 'Simplfied BSD License',\n            author = 'Hideki Nara of LaFoaglia,Inc.',\n            author_email = 'gmail [at] hdknr.com',\n            maintainer = 'LaFoglia,Inc.',\n            maintainer_email = 'gmail [at] hdknr.com',\n            description = \"uz : Unzip\",\n            long_description = \"unzip script\",\n            platforms=['any'],\n            classifiers = [\n                'Development Status :: 4 - Beta',\n                'Environment :: Library',\n                'Intended Audience :: Developers',\n                'License :: OSI Approved :: Simplifed BSD License',\n                'Natural Language :: English',\n                'Operating System :: OS Independent',\n                'Programming Language :: Python',\n            ],\n            scripts= [os.path.abspath(__file__)]\n        )\n    \n    if __name__ == '__main__':\n        main()\n```\n", "tags": ["Python", "tool"]}