{"context": "\u5148\u306e\u6295\u7a3f\u3067\u306fdigdag\u3092\u4f7f\u3063\u3066BQ\u306e\u30c7\u30fc\u30bf\u3092Avro\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067GCS\u306b\u683c\u7d0d\u3057\u305f\u304c\u3001BQ\u306e\u30c7\u30fc\u30bf\u3092\u52a0\u5de5\u3057\u305f\u308a\u3001\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4e26\u5217\u3067\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306b\u306fDataflow\u306e\u65b9\u304c\u30de\u30c3\u30c1\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u3089\u308c\u308b\u3002\nDataflow\u306fBigQuery,Avro,GCS\u306eI/O\u3092\u5099\u3048\u3066\u3044\u308b\u306e\u3067\u3001\u4e0a\u8a18\u306e\u3053\u3068\u3092\u5bb9\u6613\u306b\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\nBigQuery\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066Avro\u306b\u5909\u63db\u3059\u308b\u51e6\u7406\u306e\u4f8b\u304c\u306a\u304f\u3066\u56f0\u3063\u305f\u306e\u3067\u3001\u540c\u3058\u3053\u3068\u3067\u306f\u307e\u3063\u3066\u3044\u308b\u4eba\u5411\u3051\u306b\u3053\u3053\u3067\u30b7\u30a7\u30a2\u3002\nAvroIO\u3092\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001\u6700\u521d\u306bAvro schema\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u5fc5\u8981\u3002\n  String schemaString = \n  \"{\\\"namespace\\\": \\\"example.avro\\\",\\n\"\n   + \"\\\"type\\\": \\\"record\\\",\\n\"\n   + \"\\\"name\\\": \\\"User\\\",\\n\"\n   + \"\\\"fields\\\": [\\n\"\n   + \"    {\\\"name\\\": \\\"resource\\\", \\\"type\\\": \\\"string\\\"} \\n \"\n   + \"]\\n\"\n   + \"}\";\n   schema = new Schema.Parser().parse(schemaString);\n\n\u6b21\u306b\u3001BigQuery table row\u304b\u3089GenericRecord\u306b\u5909\u63db\u3059\u308b\u51e6\u7406\u3092\u5b9a\u7fa9\n public static class TransformTableRowToAvroRecord extends DoFn<TableRow, GenericRecord> {\n  private static final long serialVersionUID = 1L;\n\n  public GenericRecord makeGenericRecord(TableRow content) {   \n   GenericRecord record = new GenericData.Record(schema);\n   record.put(\"resource\", (String) content.get(\"userid\"));\n   return record;\n  }\n  @Override\n  public void processElement(ProcessContext c) {\n   TableRow row = c.element();\n   c.output(makeGenericRecord(row));\n  }  \n }\n\n\u6700\u5f8c\u306b\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u5909\u63db\u3092\u9069\u7528\u3057\u3066GCS\u306b\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nPCollection<TableRow> BigQueryReadingCollection = bp.apply(BigQueryIO.Read.withoutValidation().usingStandardSql().fromQuery(myQuery));\nPCollection<GenericRecord> BigQueryTransformData = BigQueryReadingCollection.apply(ParDo.of(new TransformTableRowToAvroRecord())).setCoder(AvroCoder.of(GenericRecord.class, schema));\nBigQueryTransformData.apply(AvroIO.Write.to(\"gs://MY_BUCKET/MY_PATH\").withSchema(schema)); \n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u5148\u306e\u6295\u7a3f\u3067\u306fdigdag\u3092\u4f7f\u3063\u3066BQ\u306e\u30c7\u30fc\u30bf\u3092Avro\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067GCS\u306b\u683c\u7d0d\u3057\u305f\u304c\u3001BQ\u306e\u30c7\u30fc\u30bf\u3092\u52a0\u5de5\u3057\u305f\u308a\u3001\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4e26\u5217\u3067\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306b\u306fDataflow\u306e\u65b9\u304c\u30de\u30c3\u30c1\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u3089\u308c\u308b\u3002\n\nDataflow\u306fBigQuery,Avro,GCS\u306eI/O\u3092\u5099\u3048\u3066\u3044\u308b\u306e\u3067\u3001\u4e0a\u8a18\u306e\u3053\u3068\u3092\u5bb9\u6613\u306b\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\n\nBigQuery\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066Avro\u306b\u5909\u63db\u3059\u308b\u51e6\u7406\u306e\u4f8b\u304c\u306a\u304f\u3066\u56f0\u3063\u305f\u306e\u3067\u3001\u540c\u3058\u3053\u3068\u3067\u306f\u307e\u3063\u3066\u3044\u308b\u4eba\u5411\u3051\u306b\u3053\u3053\u3067\u30b7\u30a7\u30a2\u3002\n\nAvroIO\u3092\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001\u6700\u521d\u306bAvro schema\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u5fc5\u8981\u3002\n\n```\n  String schemaString = \n  \"{\\\"namespace\\\": \\\"example.avro\\\",\\n\"\n   + \"\\\"type\\\": \\\"record\\\",\\n\"\n   + \"\\\"name\\\": \\\"User\\\",\\n\"\n   + \"\\\"fields\\\": [\\n\"\n   + \"    {\\\"name\\\": \\\"resource\\\", \\\"type\\\": \\\"string\\\"} \\n \"\n   + \"]\\n\"\n   + \"}\";\n   schema = new Schema.Parser().parse(schemaString);\n```\n\n\u6b21\u306b\u3001BigQuery table row\u304b\u3089GenericRecord\u306b\u5909\u63db\u3059\u308b\u51e6\u7406\u3092\u5b9a\u7fa9\n\n```\n public static class TransformTableRowToAvroRecord extends DoFn<TableRow, GenericRecord> {\n  private static final long serialVersionUID = 1L;\n  \n  public GenericRecord makeGenericRecord(TableRow content) {   \n   GenericRecord record = new GenericData.Record(schema);\n   record.put(\"resource\", (String) content.get(\"userid\"));\n   return record;\n  }\n  @Override\n  public void processElement(ProcessContext c) {\n   TableRow row = c.element();\n   c.output(makeGenericRecord(row));\n  }  \n }\n```\n\n\u6700\u5f8c\u306b\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u5909\u63db\u3092\u9069\u7528\u3057\u3066GCS\u306b\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n```\nPCollection<TableRow> BigQueryReadingCollection = bp.apply(BigQueryIO.Read.withoutValidation().usingStandardSql().fromQuery(myQuery));\nPCollection<GenericRecord> BigQueryTransformData = BigQueryReadingCollection.apply(ParDo.of(new TransformTableRowToAvroRecord())).setCoder(AvroCoder.of(GenericRecord.class, schema));\nBigQueryTransformData.apply(AvroIO.Write.to(\"gs://MY_BUCKET/MY_PATH\").withSchema(schema)); \n```\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["GoogleCloudPlatform", "dataflow", "bigquery"]}