{"context": " More than 1 year has passed since last update.Raspberry Pi\u304b\u3089Kinesis\u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3092boto\u3067\u3084\u3063\u3066\u3044\u305f\u304cfluentd\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\nAs-Is\n\nRaspberry Pi\u304b\u3089Amazon Kinesis\u3078\u30c7\u30fc\u30bf\u3092\u4e0a\u3052\u308b\n\n\u6b21\u306e\u6e2c\u5b9a\u3092\u3059\u308b\u306e\u306b\u3001\u9001\u4fe1\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u3064\u5fc5\u8981\u304c\u3042\u308a\u3001\u6e2c\u5b9a\u3068\u9001\u4fe1\uff08\u306b\u3088\u308b\u6c38\u7d9a\u5316\uff09\u304c\u5bc6\u7d50\u5408\u306b\u306a\u3063\u3066\u3044\u308b\n\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084kinesis\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u4e0a\u9650\u306a\u3069\u306e\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3068\u5f85\u305f\u3055\u308c\u305f\u308a\u523a\u3055\u3063\u305f\u308a\u3059\u308b\n\u9001\u4fe1\u6a5f\u80fd\u306e\u30e1\u30f3\u30c6\u3092\u3057\u3066\u3044\u308b\u9593\u306f\u6e2c\u5b9a\u304c\u3067\u304d\u306a\u3044\n\n\n\n\nTo-Be\n\n\u6e2c\u5b9a\u7d50\u679c\u306f\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u8a18\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u8cac\u52d9\u3068\u3057\u3001\u8ffd\u8a18\u5206\u306e\u9001\u4fe1\u306ffluentd\u306b\u4efb\u305b\u308b\u3002\n\n\nfluentd\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u4ee5\u4e0b\u3092\u4f7f\u3046\u3002\n\nfluent-plugin-kinesis\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u554f\u984c\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u5272\u611b\u3002\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\n\nRaspberry Pi \u3067 fluent-plugin-kinesis \u3092\u4f7f\u3063\u305f\u30e1\u30e2\n\n\n\u8a2d\u5b9a\n\nfluent.conf\n\n<source>\n type tail\n path /var/log/sensors\n pos_file /tmp/sensor.log.pos\n tag iot.log\n format json\n</source>\n\n<match iot.**>\n type copy\n <store>\n  type stdout\n </store>\n <store>\n  type kinesis\n  stream_name iot\n  aws_key_id XXXX\n  aws_sec_key XXXX\n  region ap-northeast-1\n  partition_key kinesis_partition_key\n\n  time_key stream_time\n  time_format %s\n  flush_interval 1s\n </store>\n</match>\n\n\n\n\n\nflush_interval\n\n\n\u65e2\u5b9a\u5024\u306f\u306a\u3044\uff1f\u3088\u3046\u306a\u306e\u3067\u3001\u9069\u5f53\u306b\u8a2d\u5b9a\u3002\uff08\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u5f85\u305f\u3055\u308c\u3066\u30c7\u30d0\u30c3\u30b0\u304c\u6357\u3089\u306a\u3044\uff09\n\n\n\npartition_key\n\n\u5024\u3067\u306a\u304f\u30ad\u30fc\u3092\u6307\u5b9a\u3002\n\n\n\n\n\u8d77\u52d5\n$ fluentd -c fluent.conf -v\n\n\n\u30bb\u30f3\u30b5\u5024\u306e\u66f8\u304d\u51fa\u3057\nboto\u306e\u5229\u7528\u3092\u3084\u3081\u3066\u3001print\u3067\u30c7\u30fc\u30bf\u3092\u6a19\u6e96\u51fa\u529b\u306b\u66f8\u304d\u51fa\u3059\u3002\u30bb\u30f3\u30b5\u5024\u8aad\u307f\u53d6\u308a\u306f\u30aa\u30ec\u30aa\u30ec\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5916\u51fa\u3057\u3002\n\uff08\u3053\u3053\u306b\u95a2\u3057\u3066\u3044\u3048\u3070\u3001python\u3067\u3042\u308b\u5fc5\u8981\u6027\u306f\u306a\u304f\u306a\u3063\u305f\u30fb\u30fb\u30fb\uff09\n\nshow_sensors_values.py\nimport time\nimport json\nimport subprocess\nimport netifaces\n\nfrom sys import stderr,stdout\nimport os\n\nfrom GPIO import *\nfrom DHT  import *\nfrom Analog import *\n\n## disable buffering (equivalent to `python -u`)\nsys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)\n\n# prepare sensor readers\nGPIO   = GPIO()\nDHT    = DHT()\nAnalog = Analog()\nANALOG_CHANNELS = {\n  'mic'                : 1,\n  'ir_standard_analog' : 2,\n  'photo'              : 3,\n}\n\n# Kinesis conf\nstream_name = 'iot'\n\n# main loop\nwhile True:\n  time.sleep(1)\n\n  print >> stderr, \"reading DHT...\"\n  # FIX ME: subprocess is necessary because access to DHT requires root!\n  dht_process = subprocess.Popen([\"sudo\", \"python\", \"read_dht.py\"], stdout=subprocess.PIPE)\n  (dht_json, _) = dht_process.communicate()\n  data = json.loads(dht_json)\n\n  print >> stderr, \"reading digital sensors...\"\n  data['ir_tremor_digital'] = GPIO.read(24)\n  data['ir_10m_digital']    = GPIO.read(25)\n\n  print >> stderr, \"reading analog sensors...\"\n  for sensor, ch in ANALOG_CHANNELS.iteritems():\n      data[sensor] = Analog.read(ch)\n\n  # wrap up\n\n  try:\n    data['ipaddr'] = netifaces.ifaddresses('wlan0')[netifaces.AF_INET][0]['addr']\n  except:\n    data['ipaddr'] = None\n\n\n  data['sensor_time']                = time.time()\n  data['kinesis_partition_key'] = 1  # anything\n  data = json.dumps(data)\n\n  print(data)\n\n\n\n\npython\u306e\u5834\u5408\u3001os.fdopen\u3057\u306a\u3044\u3068\u3001\u6a19\u6e96\u51fa\u529b\u304c\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3057\u307e\u3044\u3001fluentd\u304c\u671f\u5f85\u901a\u308a\u52d5\u304b\u306a\u304f\u3066\u30cf\u30de\u3063\u305f\u3002\n\n\nPython\u306e\u6a19\u6e96\u51fa\u529b\u306e\u30d0\u30c3\u30d5\u30a1\u30b5\u30a4\u30ba\u30920\u306b\u3059\u308b\u65b9\u6cd5\n\n\n\nfluent-cat\u4f7f\u3063\u3066\u3082\u3088\u3044\u304c\u3001fluentd\u306e\u7a3c\u50cd\u72b6\u6cc1\u306b\u4f9d\u5b58\u3059\u308b\uff1f\u6c17\u304c\u3059\u308b\u306e\u3067\u3001\u30c7\u30fc\u30bf\u306e\u307f\u6a19\u6e96\u51fa\u529b\u306b\u3057\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u51fa\u3057\u306b\u3059\u308b\uff08\u305d\u306e\u3076\u3093logrotate\u306f\u5fc5\u8981\u306b\u306a\u308b\uff09\n\n\n\u8d77\u52d5\n$ python show_sensors_values.py >> /var/log/sensors\n\n\nKinesis\u304b\u3089\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\n\u8aad\u307f\u53d6\u308a\u5074\u30b3\u30fc\u30c9\u306f\u57fa\u672c\u7684\u306b\u5909\u66f4\u306a\u3057\u3002\nKinesis\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u306a\u3069\u3067\u3082PUT\u304c\u3042\u308b\u304b\u306a\u3044\u304b\u306f\u3060\u3044\u305f\u3044\u308f\u304b\u308b\u3002\n\nOS\u8d77\u52d5\u6642\u306b\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n\u672c\u984c\u3067\u306f\u306a\u3044\u304c\u3001Raspberry Pi\u3092\u983b\u7e41\u306b\u8d77\u52d5\u3057\u305f\u308a\u7d42\u4e86\u3057\u305f\u308a\u3059\u308b\u5834\u5408\u306f\u3001crontab\u306e@reboot\u3092\u4f7f\u3046\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u3044\u6c17\u304c\u3059\u308b\u3002\u3061\u3083\u3093\u3068\u3084\u308b\u306a\u3089\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u305f\u308a\u30d7\u30ed\u30bb\u30b9\u76e3\u8996\u3059\u3079\u304d\u3002\n@reboot fluentd -c /path/to/fluent.conf -v\n@reboot cd /path/to/script; python show_sensors_values.py >> /var/log/sensors 2> /var/log/sensors.err\n\n\n\nRaspberry Pi\u304b\u3089Kinesis\u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3092`boto`\u3067\u3084\u3063\u3066\u3044\u305f\u304c`fluentd`\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\n\n\n\n#### As-Is\n- [Raspberry Pi\u304b\u3089Amazon Kinesis\u3078\u30c7\u30fc\u30bf\u3092\u4e0a\u3052\u308b](http://qiita.com/satzz@github/items/cc5545c3f2bad51d85bd)\n\n- \u6b21\u306e\u6e2c\u5b9a\u3092\u3059\u308b\u306e\u306b\u3001\u9001\u4fe1\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u3064\u5fc5\u8981\u304c\u3042\u308a\u3001\u6e2c\u5b9a\u3068\u9001\u4fe1\uff08\u306b\u3088\u308b\u6c38\u7d9a\u5316\uff09\u304c\u5bc6\u7d50\u5408\u306b\u306a\u3063\u3066\u3044\u308b\n\t- \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084kinesis\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u4e0a\u9650\u306a\u3069\u306e\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3068\u5f85\u305f\u3055\u308c\u305f\u308a\u523a\u3055\u3063\u305f\u308a\u3059\u308b\n\t- \u9001\u4fe1\u6a5f\u80fd\u306e\u30e1\u30f3\u30c6\u3092\u3057\u3066\u3044\u308b\u9593\u306f\u6e2c\u5b9a\u304c\u3067\u304d\u306a\u3044\n\n#### To-Be\n\n- \u6e2c\u5b9a\u7d50\u679c\u306f\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u8a18\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u8cac\u52d9\u3068\u3057\u3001\u8ffd\u8a18\u5206\u306e\u9001\u4fe1\u306f`fluentd`\u306b\u4efb\u305b\u308b\u3002\n\n\n\n\n\n###fluentd\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u4ee5\u4e0b\u3092\u4f7f\u3046\u3002\n\n- [fluent-plugin-kinesis](https://github.com/imaifactory/fluent-plugin-kinesis)\n\n\n####\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u554f\u984c\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u5272\u611b\u3002\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\n\n- [Raspberry Pi \u3067 fluent-plugin-kinesis \u3092\u4f7f\u3063\u305f\u30e1\u30e2](http://qiita.com/inokappa/items/a0e2e48a1c517d401654)\n\n\n####\u8a2d\u5b9a\n\n\n```fluent.conf\n\n<source>\n type tail\n path /var/log/sensors\n pos_file /tmp/sensor.log.pos\n tag iot.log\n format json\n</source>\n\n<match iot.**>\n type copy\n <store>\n  type stdout\n </store>\n <store>\n  type kinesis\n  stream_name iot\n  aws_key_id XXXX\n  aws_sec_key XXXX\n  region ap-northeast-1\n  partition_key kinesis_partition_key\n  \n  time_key stream_time\n  time_format %s\n  flush_interval 1s\n </store>\n</match>\n\n```\n- `flush_interval`\n\n - [\u65e2\u5b9a\u5024\u306f\u306a\u3044\uff1f](http://docs.fluentd.org/ja/articles/buffer-plugin-overview)\u3088\u3046\u306a\u306e\u3067\u3001\u9069\u5f53\u306b\u8a2d\u5b9a\u3002\uff08\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u5f85\u305f\u3055\u308c\u3066\u30c7\u30d0\u30c3\u30b0\u304c\u6357\u3089\u306a\u3044\uff09\n- `partition_key`\n\t- \u5024\u3067\u306a\u304f\u30ad\u30fc\u3092\u6307\u5b9a\u3002\n\n\n####\u8d77\u52d5\n```console:\n$ fluentd -c fluent.conf -v\n```\n\n###\u30bb\u30f3\u30b5\u5024\u306e\u66f8\u304d\u51fa\u3057\n\n`boto`\u306e\u5229\u7528\u3092\u3084\u3081\u3066\u3001`print`\u3067\u30c7\u30fc\u30bf\u3092\u6a19\u6e96\u51fa\u529b\u306b\u66f8\u304d\u51fa\u3059\u3002[\u30bb\u30f3\u30b5\u5024\u8aad\u307f\u53d6\u308a\u306f\u30aa\u30ec\u30aa\u30ec\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5916\u51fa\u3057](http://qiita.com/satzz@github/items/cc5545c3f2bad51d85bd)\u3002\n\uff08\u3053\u3053\u306b\u95a2\u3057\u3066\u3044\u3048\u3070\u3001python\u3067\u3042\u308b\u5fc5\u8981\u6027\u306f\u306a\u304f\u306a\u3063\u305f\u30fb\u30fb\u30fb\uff09\n\n```python:show_sensors_values.py\nimport time\nimport json\nimport subprocess\nimport netifaces\n\nfrom sys import stderr,stdout\nimport os\n\nfrom GPIO import *\nfrom DHT  import *\nfrom Analog import *\n\n## disable buffering (equivalent to `python -u`)\nsys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)\n\n# prepare sensor readers\nGPIO   = GPIO()\nDHT    = DHT()\nAnalog = Analog()\nANALOG_CHANNELS = {\n  'mic'                : 1,\n  'ir_standard_analog' : 2,\n  'photo'              : 3,\n}\n\n# Kinesis conf\nstream_name = 'iot'\n\n# main loop\nwhile True:\n  time.sleep(1)\n\n  print >> stderr, \"reading DHT...\"\n  # FIX ME: subprocess is necessary because access to DHT requires root!\n  dht_process = subprocess.Popen([\"sudo\", \"python\", \"read_dht.py\"], stdout=subprocess.PIPE)\n  (dht_json, _) = dht_process.communicate()\n  data = json.loads(dht_json)\n\n  print >> stderr, \"reading digital sensors...\"\n  data['ir_tremor_digital'] = GPIO.read(24)\n  data['ir_10m_digital']    = GPIO.read(25)\n\n  print >> stderr, \"reading analog sensors...\"\n  for sensor, ch in ANALOG_CHANNELS.iteritems():\n      data[sensor] = Analog.read(ch)\n\n  # wrap up\n\n  try:\n    data['ipaddr'] = netifaces.ifaddresses('wlan0')[netifaces.AF_INET][0]['addr']\n  except:\n    data['ipaddr'] = None\n   \n\n  data['sensor_time']                = time.time()\n  data['kinesis_partition_key'] = 1  # anything\n  data = json.dumps(data)\n\n  print(data)\n\n```\n\n\n- python\u306e\u5834\u5408\u3001`os.fdopen`\u3057\u306a\u3044\u3068\u3001\u6a19\u6e96\u51fa\u529b\u304c\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3057\u307e\u3044\u3001fluentd\u304c\u671f\u5f85\u901a\u308a\u52d5\u304b\u306a\u304f\u3066\u30cf\u30de\u3063\u305f\u3002\n\t- [Python\u306e\u6a19\u6e96\u51fa\u529b\u306e\u30d0\u30c3\u30d5\u30a1\u30b5\u30a4\u30ba\u30920\u306b\u3059\u308b\u65b9\u6cd5](http://yuku-tech.hatenablog.com/entry/20110122/1295629483)\n- `fluent-cat`\u4f7f\u3063\u3066\u3082\u3088\u3044\u304c\u3001fluentd\u306e\u7a3c\u50cd\u72b6\u6cc1\u306b\u4f9d\u5b58\u3059\u308b\uff1f\u6c17\u304c\u3059\u308b\u306e\u3067\u3001\u30c7\u30fc\u30bf\u306e\u307f\u6a19\u6e96\u51fa\u529b\u306b\u3057\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u51fa\u3057\u306b\u3059\u308b\uff08\u305d\u306e\u3076\u3093logrotate\u306f\u5fc5\u8981\u306b\u306a\u308b\uff09\n\n\n\n\n\n#### \u8d77\u52d5\n```console:\n$ python show_sensors_values.py >> /var/log/sensors\n```\n\n\n\n### Kinesis\u304b\u3089\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\n\n[\u8aad\u307f\u53d6\u308a\u5074\u30b3\u30fc\u30c9](http://qiita.com/satzz@github/items/cc5545c3f2bad51d85b)\u306f\u57fa\u672c\u7684\u306b\u5909\u66f4\u306a\u3057\u3002\nKinesis\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u306a\u3069\u3067\u3082PUT\u304c\u3042\u308b\u304b\u306a\u3044\u304b\u306f\u3060\u3044\u305f\u3044\u308f\u304b\u308b\u3002\n\n### OS\u8d77\u52d5\u6642\u306b\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n\u672c\u984c\u3067\u306f\u306a\u3044\u304c\u3001Raspberry Pi\u3092\u983b\u7e41\u306b\u8d77\u52d5\u3057\u305f\u308a\u7d42\u4e86\u3057\u305f\u308a\u3059\u308b\u5834\u5408\u306f\u3001crontab\u306e`@reboot`\u3092\u4f7f\u3046\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u3044\u6c17\u304c\u3059\u308b\u3002\u3061\u3083\u3093\u3068\u3084\u308b\u306a\u3089\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u305f\u308a\u30d7\u30ed\u30bb\u30b9\u76e3\u8996\u3059\u3079\u304d\u3002\n\n```\n@reboot fluentd -c /path/to/fluent.conf -v\n@reboot cd /path/to/script; python show_sensors_values.py >> /var/log/sensors 2> /var/log/sensors.err\n```\n\n\n\n\n\n", "tags": ["RaspberryPi", "fluentd", "Kinesis"]}