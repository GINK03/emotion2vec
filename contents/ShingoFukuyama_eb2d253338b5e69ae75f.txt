{"context": " More than 1 year has passed since last update.\u30b7\u30f3\u30d7\u30eb\u306a\u6a19\u6e96\u95a2\u6570\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u30e9\u30c3\u30d7\u3057\u307e\u3057\u305f\u3002\n\n\u5909\u63db\u7528\u306e\u95a2\u6570\n;;;; keybind -> function\n(defun my-function-of-key ($key-string &optional $mode-map)\n  (or $mode-map (setq $mode-map (current-global-map)))\n  (if (vectorp $key-string)\n      (lookup-key $mode-map $key-string)\n    (lookup-key $mode-map (kbd $key-string))))\n\n;;;; function -> keybind\n(defun my-key-of-function ($function &optional $mode-map)\n  (edmacro-format-keys (car (where-is-internal $function $mode-map))))\n\n\n\n\u30b5\u30f3\u30d7\u30eb\n;;;; keybind -> function\n;; \u6587\u5b57\u5217\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9  keybind as string\n(my-function-of-key \"M-i\")                 ; => helm-swoop\n;; \u30d9\u30af\u30bf\u30fc\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9  keybind as vector\n(my-function-of-key (kbd \"C-x c M-s o\"))   ; => helm-occur\n;; \u30e2\u30fc\u30c9\u30de\u30c3\u30d7\u3092\u6307\u5b9a  keybind in a specific mode\n(my-function-of-key (kbd \"C-c C-r\") swift-mode-map) ; => swift-mode-send-region\n\n\n;;;; function -> keybind\n(my-key-of-function 'helm-swoop)        ; => \"M-i\"\n(my-key-of-function 'helm-occur)        ; => \"C-x c M-s o\"\n;; \u30e2\u30fc\u30c9\u30de\u30c3\u30d7\u3092\u6307\u5b9a function in a specific mode\n(my-key-of-function 'swift-mode-send-region swift-mode-map) ; => \"C-c C-r\"\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u6a19\u6e96\u95a2\u6570\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u30e9\u30c3\u30d7\u3057\u307e\u3057\u305f\u3002\n\n## \u5909\u63db\u7528\u306e\u95a2\u6570\n\n```el\n;;;; keybind -> function\n(defun my-function-of-key ($key-string &optional $mode-map)\n  (or $mode-map (setq $mode-map (current-global-map)))\n  (if (vectorp $key-string)\n      (lookup-key $mode-map $key-string)\n    (lookup-key $mode-map (kbd $key-string))))\n\n;;;; function -> keybind\n(defun my-key-of-function ($function &optional $mode-map)\n  (edmacro-format-keys (car (where-is-internal $function $mode-map))))\n\n```\n\n\n## \u30b5\u30f3\u30d7\u30eb\n\n```el\n;;;; keybind -> function\n;; \u6587\u5b57\u5217\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9  keybind as string\n(my-function-of-key \"M-i\")                 ; => helm-swoop\n;; \u30d9\u30af\u30bf\u30fc\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9  keybind as vector\n(my-function-of-key (kbd \"C-x c M-s o\"))   ; => helm-occur\n;; \u30e2\u30fc\u30c9\u30de\u30c3\u30d7\u3092\u6307\u5b9a  keybind in a specific mode\n(my-function-of-key (kbd \"C-c C-r\") swift-mode-map) ; => swift-mode-send-region\n\n\n;;;; function -> keybind\n(my-key-of-function 'helm-swoop)        ; => \"M-i\"\n(my-key-of-function 'helm-occur)        ; => \"C-x c M-s o\"\n;; \u30e2\u30fc\u30c9\u30de\u30c3\u30d7\u3092\u6307\u5b9a function in a specific mode\n(my-key-of-function 'swift-mode-send-region swift-mode-map) ; => \"C-c C-r\"\n```\n", "tags": ["Emacs", "emacs-lisp"]}