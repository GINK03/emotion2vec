{"tags": ["Java", "java8", "\u30e9\u30e0\u30c0\u5f0f"], "context": "\n\n\u554f\u984c\u70b9\uff1a\u30e9\u30e0\u30c0\u5f0f\u3067\u4f8b\u5916\u3092\u51e6\u7406\u3059\u308b\u306e\u304c\u30c0\u30b5\u3044\nJava8\u306e Streams API \u3001\u4f7f\u3063\u3066\u3044\u307e\u3059\u304b\uff1f\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u306d\u3002\nStreams API\u3001\u3068\u3044\u3046\u304b\u30e9\u30e0\u30c0\u5f0f\u306f\u975e\u5e38\u306b\u5f37\u529b\u3067\u3059\u3002\n\n\u30e9\u30e0\u30c0\u5f0f\u306f\u975e\u5e38\u306b\u5f37\u529b\u3060\u304c\u4f8b\u304c\u8ca7\u5f31.java\nFunction<String, String> slice = x -> x.substring(3, 6);\nSystem.out.println(slice.apply(\"abcdefghij\")); // -> \"def\"\n\n\n\u304c\u591a\u304f\u6307\u6458\u3055\u308c\u3066\u3044\u308b\u901a\u308a1\u4f8b\u5916\u51e6\u7406\u3068\u306e\u76f8\u6027\u304c\u60aa\u304f\u3001\u30e9\u30e0\u30c0\u306e\u5916\u3067\u4f8b\u5916\u3092\u88dc\u8db3\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\uff08\u3044\u3084\u3001\u305d\u308a\u3083\u30e9\u30e0\u30c0\u3067\u4e00\u584a\u306e\u51e6\u7406\u306a\u3093\u3060\u304b\u3089\u5f53\u305f\u308a\u524d\u3067\u3057\u3087\u3001\u3068\u601d\u3044\u3064\u3064\u3002\uff09\n\u4e0a\u306e\u4f8b\u3060\u3068\u6587\u5b57\u5217\u304c3\u6587\u5b57\u4ee5\u4e0b\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30a8\u30e9\u30fc\u767a\u751f\u6642\u306b\u306f\u305d\u306e\u307e\u307e\u8fd4\u3059\u3088\u3046\u306b\u4f8b\u5916\u51e6\u7406\u3092\u5165\u308c\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nTryCatch\u304c\u30af\u30fc\u30eb\u3058\u3083\u306a\u3044\u3057\u30cd\u30b9\u30c8\u304c\u6df1\u304f\u3066\u3084\u3081\u3066\u307b\u3057\u3044.java\nFunction<String, String> sliceAndCatch = x -> {\n    try {\n        return x.substring(3, 6);\n    } catch (Exception e) {\n        return x;\n    }\n};\n\nSystem.out.println(sliceAndCatch.apply(\"abcdefghij\")); // -> \"def\"\nSystem.out.println(sliceAndCatch.apply(\"xy\")); // -> \"xy\"\n\n\n\u308f\u3042\u3001\u30cd\u30b9\u30c8\u304c\u6df1\u3044\u3002\n\u307e\u305f\u3001\u691c\u67fb\u4f8b\u5916\u3092\u5410\u304f\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u30e9\u30e0\u30c0\u306e\u4e2d\u3067TryCatch\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u4f8b\u5916\u3092\u6295\u3052\u308bhoge::fuga\u306b\u5bfe\u3057\u3066stream.map(hoge::fuga)\u3067\u547c\u3073\u51fa\u305b\u305a\u3001\u3082\u3069\u304b\u3057\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u975e\u691c\u67fb\u4f8b\u5916\u306a\u3089\u547c\u3073\u51fa\u3059\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u53d6\u308a\u51fa\u305b\u307e\u3059\uff08try{stream.map(hoge::fuga)}catch{\uff5e}\uff09\u304c\u3001\u304d\u308c\u3044\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nStream\u3084Optional\u3092\u30e9\u30c3\u30d1\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u304b\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u5272\u3068\u4e0d\u4fbf\u3067\u3059\u3002\n\n\u89e3\u6c7a\u7b56\uff1a\u4e00\u884c\u3067\u66f8\u3051\u308b\u3068\u3044\u3044\u3088\u306d \u2192 \u3053\u3046\u3059\u308c\u3070\u66f8\u3051\u307e\u3059\n\u4e0a\u306e\u4f8b\u304f\u3089\u3044\u306f\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u66f8\u304d\u305f\u3044\u3002\n2\u3064\u30e9\u30e0\u30c0\u3092\u6e21\u3057\u3066\u30011\u756a\u76ee\u306e\u30e9\u30e0\u30c0\u306f\u6b63\u5e38\u7cfb\u306e\u51e6\u7406\u30012\u756a\u76ee\u306e\u30e9\u30e0\u30c0\u3067\u4f8b\u5916\u51e6\u7406\u3092\u66f8\u3051\u308c\u3070\u30b9\u30de\u30fc\u30c8\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3088\u306d\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u307e\u305a\u306f\u4f8b\u5916\u304c\u6295\u3052\u3089\u308c\u308b\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7528\u610f\u3057\u3066\n\n\u4f8b\u5916\u304c\u6295\u3052\u3089\u308c\u308bFunction.java\ninterface ThrowableFunction<T, R> {\n    R apply(T t) throws Exception;\n}\n\n\n\u305d\u3057\u3066\u3001\u3053\u3093\u306a\u611f\u3058\u3067Try\u3092\u5b9a\u7fa9\u3057\u307e\u3059\n\n\u5168\u8c8c\u304c\u898b\u3048\u3064\u3064\u3042\u308b.java\npublic <T, R> Function<T, R> Try(ThrowableFunction<T, R> onTry, BiFunction<Exception, T, R> onCatch) {\n    return x -> {\n        try {\n            return onTry.apply(x);\n        } catch (Exception e) {\n            return onCatch.apply(e, x);\n        }\n    };\n}\n\n\n\u305d\u308c\u3060\u3051\u3067\u30af\u30fc\u30eb\u306a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff01\n\nCool.java\nFunction<String, String> coolSlice = Try(x -> x.substring(3, 6), (error, x) -> x);\n\nSystem.out.println(coolSlice.apply(\"abcdefghij\")); // -> \"def\"\nSystem.out.println(coolSlice.apply(\"xy\")); // -> \"xy\"\n\n\n\nConsumer\u3082\u304a\u3093\u306a\u3058\u3088\u3046\u306b\u3059\u308c\u3070\u3001\n\nConsumer\u306e\u5834\u5408.java\ninterface ThrowableConsumer<T> {\n    void accept(T t) throws Exception;\n}\n\npublic <T> Consumer<T> Try(ThrowableConsumer<T> onTry, BiConsumer<Exception, T> onCatch) {\n    return x -> {\n        try {\n            onTry.accept(x);\n        } catch (Exception t) {\n            onCatch.accept(t, x);\n        }\n    };\n}\n\n\n\u3053\u3061\u3089\u3082\u30af\u30fc\u30eb\u306b\uff01\n\n\u3084\u3063\u305f\u306d.java\nConsumer<String> coolCatch = Try(x -> {System.out.println(Integer.valueOf(x));}, (error, x) -> error.printStackTrace());\n\ncoolCatch.accept(\"33\"); //-> 33\ncoolCatch.accept(\"\u307b\u3052\"); //-> java.lang.NumberFormatException: For input string: \"\u307b\u3052\" \u30fb\u30fb\u30fb\n\n\n\n\u30e1\u30ea\u30c3\u30c8/\u30c7\u30e1\u30ea\u30c3\u30c8\n\u3053\u306e\u65b9\u6cd5\u306e\u826f\u3044\u3068\u3053\u308d\n\n\u77ed\u3044\n\uff08\u691c\u67fb\u4f8b\u5916\u3092\u30e9\u30c3\u30d7\u3057\u3066\u975e\u691c\u67fb\u4f8b\u5916\u3092\u6295\u3052\u3066\u88dc\u8db3\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u6bd4\u3079\u3066\uff09\u3061\u3083\u3093\u3068\u4f8b\u5916\u3092\u4f7f\u3044\u5206\u3051\u3089\u308c\u308b\n\u30e9\u30c3\u30d7\u3057\u305fStream\u3084Optional\u3088\u308a\u6c4e\u7528\u7684\u3002\u8fd4\u3063\u3066\u304f\u308b\u306e\u305f\u3060\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3060\u3057\n\n\u3088\u304f\u306a\u3044\u3068\u3053\u308d\n\n\u6e96\u5099\u304c\u9577\u3044\n\u2192 \u4ed6\u306e\u30e9\u30c3\u30d1\u3068\u304b\u306b\u6bd4\u3079\u305f\u3089\u8efd\u91cf\u3060\u3057\u3001\u30d1\u30c3\u3068\u66f8\u3044\u3066static import\u3057\u307e\u3057\u3087\u3046\n\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5168\u90e8\u306bTry\u7528\u610f\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\n\u578b\u5b89\u5168\u3058\u3083\u306a\u3044\u3057\u3001\u62fe\u3044\u305f\u304f\u306a\u3044RuntimeException\u3068\u304b\u3082\u62fe\u3063\u3066\u3057\u307e\u3046\u3000\u2192\u3000\u306a\u3093\u304b\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u306a\u3044\u3067\u3059\u304b\u306d\u3002\n\n\n\u5fdc\u7528\uff1a\u4ed5\u7d44\u307f\u306f\u30b7\u30f3\u30d7\u30eb\u3060\u304c\u5f79\u306b\u7acb\u3064\n\u3082\u3061\u308d\u3093\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3067\u3082\u6e21\u305b\u308b\u306e\u3067\u3001\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u3082\u304b\u3051\u308b\n\n\u666e\u901a\u306e\u4f8b.java\nstream.flatMap(Try(this::calc, (x,y)->Stream.empty()));\n\n\n\u3042\u3068\u5225\u306bStream\u3058\u3083\u306a\u304f\u3066\u3082Function\u3092\u53d7\u3051\u4ed8\u3051\u3066\u304f\u308c\u308b\u3068\u3053\u308d\u306a\u3089\u3001Optional\u3068\u304b\u3067\u3082\n\nOptional.java\nOptional<String> name = getName();\nname.flatMap(Try( dao::getFindByName ,(x,y)->Optional.empty()));\n\n\n\u3042\u3068\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u30e9\u30e0\u30c0\u6e21\u3059\u6642\u3082\n\n\u81ea\u4f5c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9.java\ninterface JisakuInterface{\n    String Method(String Argument);\n}\n\nJisakuInterface m = str->\"hoge\";\nJisakuInterface f = Try(str -> str+str,(x,y)->\"b\")::apply;\n\n\n\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u306b\u3057\u3066\u3042\u3052\u308c\u3070\u30e9\u30e0\u30c0\u3067\u7c21\u5358\u306b\u6e21\u305b\u308b\u3002\u3059\u3070\u3089\u3057\u3044\u3002\n\u3042\u3068\u306f\u30aa\u30ec\u30aa\u30ec\u30e2\u30ca\u30c9\u3068\u304b\u4f5c\u3063\u305f\u3068\u304d\u306b\u3001\n\n\u3082\u306a\u3082\u3069\u304d.java\n// LogicalDeletable.of(null) \u3067\u8ad6\u7406\u524a\u9664\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nLogicalDeletable<LegacyData> record = getRecord(); \n// \u5909\u63db\u306b\u30df\u30b9\u3063\u305f\u3084\u3064\u306f\u8ad6\u7406\u524a\u9664\u6271\u3044\u306b\u3059\u308b\nrecord.map(Try(Legacy::legacyTransform)) , (error,record) -> null));\n\n\n\u307f\u305f\u3044\u306a\u306e\u3067\u4f8b\u5916\u53d6\u308c\u3066\u3044\u3044\u3002\n\u3042\u3068(4\u5ea6\u76ee)\u4f8b\u304c\u601d\u3044\u6d6e\u304b\u3070\u306a\u3044\u3051\u3069\u3001\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5185\u5bb9\u306fonCatch\u306b\u5f15\u6570\u3067\u6e21\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u666e\u901a\u306eTryCatch\u3067\u3067\u304d\u308b\u6a5f\u80fd\u306f\u5168\u90e8\u3067\u304d\u308b\u306f\u305a\uff08try-with-resource\u4ee5\u5916\u306f\uff09\u3002\n\u305d\u3093\u306a\u308f\u3051\u3067\u7686\u3055\u3093\u3082\u305c\u3072\u304b\u3063\u3053\u3088\u304f\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\nQiita\u3060\u3051\u3067\u3082 http://qiita.com/daylife/items/b977f4f29b1f8ced3a02 , http://qiita.com/KIchiro/items/4fafd74c46d08275eb56 , http://qiita.com/yoshi389111/items/c6b7d373a00f8fd3d5f3 \u3068\u304b\u3068\u304b\u00a0\u21a9\n\n\n\n# \u554f\u984c\u70b9\uff1a\u30e9\u30e0\u30c0\u5f0f\u3067\u4f8b\u5916\u3092\u51e6\u7406\u3059\u308b\u306e\u304c\u30c0\u30b5\u3044\n\nJava8\u306e Streams API \u3001\u4f7f\u3063\u3066\u3044\u307e\u3059\u304b\uff1f\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u306d\u3002\nStreams API\u3001\u3068\u3044\u3046\u304b\u30e9\u30e0\u30c0\u5f0f\u306f\u975e\u5e38\u306b\u5f37\u529b\u3067\u3059\u3002\n\n``` \u30e9\u30e0\u30c0\u5f0f\u306f\u975e\u5e38\u306b\u5f37\u529b\u3060\u304c\u4f8b\u304c\u8ca7\u5f31.java\nFunction<String, String> slice = x -> x.substring(3, 6);\nSystem.out.println(slice.apply(\"abcdefghij\")); // -> \"def\"\n```\n\n\u304c\u591a\u304f\u6307\u6458\u3055\u308c\u3066\u3044\u308b\u901a\u308a[^1]\u4f8b\u5916\u51e6\u7406\u3068\u306e\u76f8\u6027\u304c\u60aa\u304f\u3001\u30e9\u30e0\u30c0\u306e\u5916\u3067\u4f8b\u5916\u3092\u88dc\u8db3\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\uff08\u3044\u3084\u3001\u305d\u308a\u3083\u30e9\u30e0\u30c0\u3067\u4e00\u584a\u306e\u51e6\u7406\u306a\u3093\u3060\u304b\u3089\u5f53\u305f\u308a\u524d\u3067\u3057\u3087\u3001\u3068\u601d\u3044\u3064\u3064\u3002\uff09\n\n\u4e0a\u306e\u4f8b\u3060\u3068\u6587\u5b57\u5217\u304c3\u6587\u5b57\u4ee5\u4e0b\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30a8\u30e9\u30fc\u767a\u751f\u6642\u306b\u306f\u305d\u306e\u307e\u307e\u8fd4\u3059\u3088\u3046\u306b\u4f8b\u5916\u51e6\u7406\u3092\u5165\u308c\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n``` TryCatch\u304c\u30af\u30fc\u30eb\u3058\u3083\u306a\u3044\u3057\u30cd\u30b9\u30c8\u304c\u6df1\u304f\u3066\u3084\u3081\u3066\u307b\u3057\u3044.java\nFunction<String, String> sliceAndCatch = x -> {\n\ttry {\n\t\treturn x.substring(3, 6);\n\t} catch (Exception e) {\n\t\treturn x;\n\t}\n};\n\nSystem.out.println(sliceAndCatch.apply(\"abcdefghij\")); // -> \"def\"\nSystem.out.println(sliceAndCatch.apply(\"xy\")); // -> \"xy\"\n```\n\n\u308f\u3042\u3001\u30cd\u30b9\u30c8\u304c\u6df1\u3044\u3002\n\n\u307e\u305f\u3001\u691c\u67fb\u4f8b\u5916\u3092\u5410\u304f\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u30e9\u30e0\u30c0\u306e\u4e2d\u3067TryCatch\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u4f8b\u5916\u3092\u6295\u3052\u308bhoge::fuga\u306b\u5bfe\u3057\u3066stream.map(hoge::fuga)\u3067\u547c\u3073\u51fa\u305b\u305a\u3001\u3082\u3069\u304b\u3057\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u975e\u691c\u67fb\u4f8b\u5916\u306a\u3089\u547c\u3073\u51fa\u3059\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u53d6\u308a\u51fa\u305b\u307e\u3059\uff08try{stream.map(hoge::fuga)}catch{\uff5e}\uff09\u304c\u3001\u304d\u308c\u3044\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nStream\u3084Optional\u3092\u30e9\u30c3\u30d1\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u304b\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u5272\u3068\u4e0d\u4fbf\u3067\u3059\u3002\n\n# \u89e3\u6c7a\u7b56\uff1a\u4e00\u884c\u3067\u66f8\u3051\u308b\u3068\u3044\u3044\u3088\u306d \u2192 \u3053\u3046\u3059\u308c\u3070\u66f8\u3051\u307e\u3059\n\n\u4e0a\u306e\u4f8b\u304f\u3089\u3044\u306f\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u66f8\u304d\u305f\u3044\u3002\n2\u3064\u30e9\u30e0\u30c0\u3092\u6e21\u3057\u3066\u30011\u756a\u76ee\u306e\u30e9\u30e0\u30c0\u306f\u6b63\u5e38\u7cfb\u306e\u51e6\u7406\u30012\u756a\u76ee\u306e\u30e9\u30e0\u30c0\u3067\u4f8b\u5916\u51e6\u7406\u3092\u66f8\u3051\u308c\u3070\u30b9\u30de\u30fc\u30c8\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3088\u306d\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u307e\u305a\u306f\u4f8b\u5916\u304c\u6295\u3052\u3089\u308c\u308b\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7528\u610f\u3057\u3066\n\n``` \u4f8b\u5916\u304c\u6295\u3052\u3089\u308c\u308bFunction.java\ninterface ThrowableFunction<T, R> {\n\tR apply(T t) throws Exception;\n}\n```\n\n\u305d\u3057\u3066\u3001\u3053\u3093\u306a\u611f\u3058\u3067Try\u3092\u5b9a\u7fa9\u3057\u307e\u3059\n\n``` \u5168\u8c8c\u304c\u898b\u3048\u3064\u3064\u3042\u308b.java\npublic <T, R> Function<T, R> Try(ThrowableFunction<T, R> onTry, BiFunction<Exception, T, R> onCatch) {\n\treturn x -> {\n\t\ttry {\n\t\t\treturn onTry.apply(x);\n\t\t} catch (Exception e) {\n\t\t\treturn onCatch.apply(e, x);\n\t\t}\n\t};\n}\n```\n\n\u305d\u308c\u3060\u3051\u3067\u30af\u30fc\u30eb\u306a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff01\n\n``` Cool.java\nFunction<String, String> coolSlice = Try(x -> x.substring(3, 6), (error, x) -> x);\n\nSystem.out.println(coolSlice.apply(\"abcdefghij\")); // -> \"def\"\nSystem.out.println(coolSlice.apply(\"xy\")); // -> \"xy\"\n\n```\n\n\nConsumer\u3082\u304a\u3093\u306a\u3058\u3088\u3046\u306b\u3059\u308c\u3070\u3001\n\n``` Consumer\u306e\u5834\u5408.java\ninterface ThrowableConsumer<T> {\n\tvoid accept(T t) throws Exception;\n}\n\npublic <T> Consumer<T> Try(ThrowableConsumer<T> onTry, BiConsumer<Exception, T> onCatch) {\n\treturn x -> {\n\t\ttry {\n\t\t\tonTry.accept(x);\n\t\t} catch (Exception t) {\n\t\t\tonCatch.accept(t, x);\n\t\t}\n\t};\n}\n```\n\n\u3053\u3061\u3089\u3082\u30af\u30fc\u30eb\u306b\uff01\n\n``` \u3084\u3063\u305f\u306d.java\nConsumer<String> coolCatch = Try(x -> {System.out.println(Integer.valueOf(x));}, (error, x) -> error.printStackTrace());\n\ncoolCatch.accept(\"33\"); //-> 33\ncoolCatch.accept(\"\u307b\u3052\"); //-> java.lang.NumberFormatException: For input string: \"\u307b\u3052\" \u30fb\u30fb\u30fb\n```\n\n\n# \u30e1\u30ea\u30c3\u30c8/\u30c7\u30e1\u30ea\u30c3\u30c8\n\u3053\u306e\u65b9\u6cd5\u306e\u826f\u3044\u3068\u3053\u308d\n\n * \u77ed\u3044\n * \uff08\u691c\u67fb\u4f8b\u5916\u3092\u30e9\u30c3\u30d7\u3057\u3066\u975e\u691c\u67fb\u4f8b\u5916\u3092\u6295\u3052\u3066\u88dc\u8db3\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u6bd4\u3079\u3066\uff09\u3061\u3083\u3093\u3068\u4f8b\u5916\u3092\u4f7f\u3044\u5206\u3051\u3089\u308c\u308b\n * \u30e9\u30c3\u30d7\u3057\u305fStream\u3084Optional\u3088\u308a\u6c4e\u7528\u7684\u3002\u8fd4\u3063\u3066\u304f\u308b\u306e\u305f\u3060\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3060\u3057\n\n\u3088\u304f\u306a\u3044\u3068\u3053\u308d\n\n * \u6e96\u5099\u304c\u9577\u3044\n    \u2192 \u4ed6\u306e\u30e9\u30c3\u30d1\u3068\u304b\u306b\u6bd4\u3079\u305f\u3089\u8efd\u91cf\u3060\u3057\u3001\u30d1\u30c3\u3068\u66f8\u3044\u3066static import\u3057\u307e\u3057\u3087\u3046\n * \u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5168\u90e8\u306bTry\u7528\u610f\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\n * \u578b\u5b89\u5168\u3058\u3083\u306a\u3044\u3057\u3001\u62fe\u3044\u305f\u304f\u306a\u3044RuntimeException\u3068\u304b\u3082\u62fe\u3063\u3066\u3057\u307e\u3046\u3000\u2192\u3000\u306a\u3093\u304b\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u306a\u3044\u3067\u3059\u304b\u306d\u3002\n  \n# \u5fdc\u7528\uff1a\u4ed5\u7d44\u307f\u306f\u30b7\u30f3\u30d7\u30eb\u3060\u304c\u5f79\u306b\u7acb\u3064\n\n\u3082\u3061\u308d\u3093\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3067\u3082\u6e21\u305b\u308b\u306e\u3067\u3001\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u3082\u304b\u3051\u308b\n\n``` \u666e\u901a\u306e\u4f8b.java\nstream.flatMap(Try(this::calc, (x,y)->Stream.empty()));\n```\n\n\u3042\u3068\u5225\u306bStream\u3058\u3083\u306a\u304f\u3066\u3082Function<T,R>\u3092\u53d7\u3051\u4ed8\u3051\u3066\u304f\u308c\u308b\u3068\u3053\u308d\u306a\u3089\u3001Optional\u3068\u304b\u3067\u3082\n\n``` Optional.java\nOptional<String> name = getName();\nname.flatMap(Try( dao::getFindByName ,(x,y)->Optional.empty()));\n```\n\n\u3042\u3068\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u30e9\u30e0\u30c0\u6e21\u3059\u6642\u3082\n\n``` \u81ea\u4f5c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9.java\ninterface JisakuInterface{\n\tString Method(String Argument);\n}\n\nJisakuInterface m = str->\"hoge\";\nJisakuInterface f = Try(str -> str+str,(x,y)->\"b\")::apply;\n```\n\n\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u306b\u3057\u3066\u3042\u3052\u308c\u3070\u30e9\u30e0\u30c0\u3067\u7c21\u5358\u306b\u6e21\u305b\u308b\u3002\u3059\u3070\u3089\u3057\u3044\u3002\n\n\u3042\u3068\u306f\u30aa\u30ec\u30aa\u30ec\u30e2\u30ca\u30c9\u3068\u304b\u4f5c\u3063\u305f\u3068\u304d\u306b\u3001\n\n``` \u3082\u306a\u3082\u3069\u304d.java\n// LogicalDeletable.of(null) \u3067\u8ad6\u7406\u524a\u9664\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nLogicalDeletable<LegacyData> record = getRecord(); \n// \u5909\u63db\u306b\u30df\u30b9\u3063\u305f\u3084\u3064\u306f\u8ad6\u7406\u524a\u9664\u6271\u3044\u306b\u3059\u308b\nrecord.map(Try(Legacy::legacyTransform)) , (error,record) -> null));\n```\n\u307f\u305f\u3044\u306a\u306e\u3067\u4f8b\u5916\u53d6\u308c\u3066\u3044\u3044\u3002\n\n\u3042\u3068(4\u5ea6\u76ee)\u4f8b\u304c\u601d\u3044\u6d6e\u304b\u3070\u306a\u3044\u3051\u3069\u3001\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5185\u5bb9\u306fonCatch\u306b\u5f15\u6570\u3067\u6e21\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u666e\u901a\u306eTryCatch\u3067\u3067\u304d\u308b\u6a5f\u80fd\u306f\u5168\u90e8\u3067\u304d\u308b\u306f\u305a\uff08try-with-resource\u4ee5\u5916\u306f\uff09\u3002\n\n\u305d\u3093\u306a\u308f\u3051\u3067\u7686\u3055\u3093\u3082\u305c\u3072\u304b\u3063\u3053\u3088\u304f\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n[^1]: Qiita\u3060\u3051\u3067\u3082 http://qiita.com/daylife/items/b977f4f29b1f8ced3a02 , http://qiita.com/KIchiro/items/4fafd74c46d08275eb56 , http://qiita.com/yoshi389111/items/c6b7d373a00f8fd3d5f3 \u3068\u304b\u3068\u304b\n\n"}