{"context": " More than 1 year has passed since last update.\n\n1.\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306e\u767a\u884c\u3057\u3066\u3044\u306a\u3044\u30b5\u30fc\u30d0\u30fc\u306bhttps\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u2026\n\u57fa\u672c\u7684\u306b\u958b\u767a\u4e2d\u306e\u74b0\u5883\u3068\u304b\u3060\u3063\u305f\u308a\u3001\u30c7\u30d0\u30c3\u30b0\u74b0\u5883\u3068\u304b\u3060\u3068\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306a\u3093\u3066\u767a\u884c\u3057\u3066\u306a\u3044\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3068\u3053\u308d\u304c\u3069\u3063\u3053\u3044\u3001\u8a3c\u660e\u66f8\u304c\u306a\u3044\u3068\u3053\u308d\u306b\u5bfe\u3057\u3066\u300chttps://\u300d\u4f7f\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3068\u2026\njavax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException:\n Trust anchor for certification path not found.\n\n\u4fe1\u983c\u3067\u304d\u308b\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306e\u3042\u308a\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u3089\u7e4b\u304e\u305f\u304f\u306a\u3044\u3088\uff01\n\u306a\u3093\u3066\u611f\u3058\u3067\u6012\u3089\u308c\u3066\u3057\u307e\u3046\u308f\u3051\u3067\u3059\u3002\n\n2.\u3058\u3083\u3042\u5bfe\u51e6\u6cd5\n\u7e4b\u304e\u305f\u304f\u306a\u3044\u3088\u3063\u3066\u8a00\u3063\u3066\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u7121\u304f\u3066\u3082\u5f37\u5236\u7684\u306b\u3064\u306a\u304c\u305b\u308c\u3070\u3088\u3044\u306e\u3067\u3059\u3002\n\u539f\u7406\u306b\u3064\u3044\u3066\u306f\u691c\u7d22\u30ef\u30fc\u30c9\u3000\u300cX509TrustManager\u300d\u300cHostnameVerifier\u300d\u3000\u3042\u305f\u308a\u3067\u30b0\u30b0\u30c3\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000\u3000\u3000\u3000@deprecated(\"\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u3092\u78ba\u8a8d\u305b\u305a\u306b\u3064\u306a\u3050Client\u751f\u6210\")\n  def createIgnoreCertPathValidationClient(): OkHttpClient = {\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//X.509 \u8a3c\u660e\u66f8\u306e\u7ba1\u7406\u3092\u7a7a\u5b9f\u88c5\u306b\u3059\u308b\n    val tm: Array[TrustManager] = Array(\n      new X509TrustManager {\n        def getAcceptedIssuers: Array[X509Certificate] = Array.empty\n\n        def checkClientTrusted(chain: Array[X509Certificate], authType: String): Unit = {}\n\n        def checkServerTrusted(chain: Array[X509Certificate], authType: String): Unit = {}\n      }\n    )\n    val context = SSLContext.getInstance(\"SSL\")\n    context.init(null, tm, null)\n\n    val builder = new OkHttpClient.Builder().sslSocketFactory(context.getSocketFactory)\n    builder.hostnameVerifier(new HostnameVerifier {\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3069\u3093\u306a\u30db\u30b9\u30c8\u540d\u3067\u3082\u3064\u306a\u3044\u3058\u3083\u3046\u305c\uff01\n      def verify(hostname: String, session: SSLSession): Boolean = true\n    })\n    builder.build()\n  }\n\n\u5371\u306a\u3081\u306e\u95a2\u6570\u306a\u306e\u3067\u3001\u7528\u91cf\u7528\u6cd5\u306b\u306f\u5341\u5206\u6c17\u3092\u3064\u3051\u3066\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n# 1.\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306e\u767a\u884c\u3057\u3066\u3044\u306a\u3044\u30b5\u30fc\u30d0\u30fc\u306bhttps\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u2026\n\u57fa\u672c\u7684\u306b\u958b\u767a\u4e2d\u306e\u74b0\u5883\u3068\u304b\u3060\u3063\u305f\u308a\u3001\u30c7\u30d0\u30c3\u30b0\u74b0\u5883\u3068\u304b\u3060\u3068\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306a\u3093\u3066\u767a\u884c\u3057\u3066\u306a\u3044\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3068\u3053\u308d\u304c\u3069\u3063\u3053\u3044\u3001\u8a3c\u660e\u66f8\u304c\u306a\u3044\u3068\u3053\u308d\u306b\u5bfe\u3057\u3066\u300chttps://\u300d\u4f7f\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3068\u2026\n\n```\njavax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException:\n Trust anchor for certification path not found.\n```\n\n\u4fe1\u983c\u3067\u304d\u308b\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306e\u3042\u308a\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u3089\u7e4b\u304e\u305f\u304f\u306a\u3044\u3088\uff01\n\u306a\u3093\u3066\u611f\u3058\u3067\u6012\u3089\u308c\u3066\u3057\u307e\u3046\u308f\u3051\u3067\u3059\u3002\n\n# 2.\u3058\u3083\u3042\u5bfe\u51e6\u6cd5\n\n\u7e4b\u304e\u305f\u304f\u306a\u3044\u3088\u3063\u3066\u8a00\u3063\u3066\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u7121\u304f\u3066\u3082\u5f37\u5236\u7684\u306b\u3064\u306a\u304c\u305b\u308c\u3070\u3088\u3044\u306e\u3067\u3059\u3002\n\n\u539f\u7406\u306b\u3064\u3044\u3066\u306f\u691c\u7d22\u30ef\u30fc\u30c9\u3000\u300cX509TrustManager\u300d\u300cHostnameVerifier\u300d\u3000\u3042\u305f\u308a\u3067\u30b0\u30b0\u30c3\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n```scala\n\u3000\u3000\u3000\u3000@deprecated(\"\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u3092\u78ba\u8a8d\u305b\u305a\u306b\u3064\u306a\u3050Client\u751f\u6210\")\n  def createIgnoreCertPathValidationClient(): OkHttpClient = {\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//X.509 \u8a3c\u660e\u66f8\u306e\u7ba1\u7406\u3092\u7a7a\u5b9f\u88c5\u306b\u3059\u308b\n    val tm: Array[TrustManager] = Array(\n      new X509TrustManager {\n        def getAcceptedIssuers: Array[X509Certificate] = Array.empty\n\n        def checkClientTrusted(chain: Array[X509Certificate], authType: String): Unit = {}\n\n        def checkServerTrusted(chain: Array[X509Certificate], authType: String): Unit = {}\n      }\n    )\n    val context = SSLContext.getInstance(\"SSL\")\n    context.init(null, tm, null)\n\n    val builder = new OkHttpClient.Builder().sslSocketFactory(context.getSocketFactory)\n    builder.hostnameVerifier(new HostnameVerifier {\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3069\u3093\u306a\u30db\u30b9\u30c8\u540d\u3067\u3082\u3064\u306a\u3044\u3058\u3083\u3046\u305c\uff01\n      def verify(hostname: String, session: SSLSession): Boolean = true\n    })\n    builder.build()\n  }\n```\n\n\u5371\u306a\u3081\u306e\u95a2\u6570\u306a\u306e\u3067\u3001\u7528\u91cf\u7528\u6cd5\u306b\u306f\u5341\u5206\u6c17\u3092\u3064\u3051\u3066\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n", "tags": ["scala,", "OkHttp", "Scala"]}