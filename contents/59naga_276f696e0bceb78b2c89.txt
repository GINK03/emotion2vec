{"context": " More than 1 year has passed since last update.JavaScript\u3067\u8aad\u307f\u4e0a\u3052\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u305f\u3068\u304d\u3001\u540c\u6642\u306b\u8aad\u307f\u4e0a\u3052\u3089\u308c\u308b\u3068\u3001\u8056\u5fb3\u592a\u5b50\u306b\u306a\u3089\u306a\u3051\u308c\u3070\u4e0d\u4fbf\u3067\u3059\u3002\n\u307e\u305f\u3001\u30af\u30e9\u30a6\u30c9\u30c6\u30b9\u30c8\u3067\u5951\u7d04\u5236\u9650\u6570\u4ee5\u4e0a\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u8d77\u52d5\u3057\u3088\u3046\u3068\u3057\u3066\u3001\u62d2\u5426\u3055\u308c\u3066\u30c6\u30b9\u30c8\u304c\u9014\u4e2d\u3067\u843d\u3061\u3066\u3057\u307e\u3046\u3002\n\u306a\u3069\u3001\u975e\u540c\u671f\u51e6\u7406\u306b\u5bfe\u3057\u3066\u3001\uff11\u3064\u305a\u3064\u51e6\u7406\u3057\u3066\u6b32\u3057\u3044\u5834\u5408\u3084\u3001\uff15\u3064\u4ee5\u4e0b\u306a\u3089\u540c\u6642\u306b\u5b9f\u884c\u3057\u3066\u3082\u826f\u3044\u3002\u3068\u3044\u3046\u30b1\u30fc\u30b9\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nnpm install throat bluebird --save\n\nthroat\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u308c\u3089\u3092\u7c21\u6f54\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u30021\nbabel-node quque.js\n# task1...\n# task1 done\n# task2...\n# task2 fail\n# task3...\n# task3 done\n\n\nquque.js\nimport Promise from 'bluebird'\nimport throat from 'throat'\n\nconst delay= 100\nconst Queue= throat(Promise)(1)\n\nQueue(()=>{\n  console.log('task1...')\n  return new Promise(resolve=>{\n    setTimeout(()=>{\n      console.log('task1 done')\n      resolve()\n    },delay)\n  })\n})\nQueue(()=>{\n  console.log('task2...')\n  return new Promise((resolve,reject)=>{\n    setTimeout(()=>{\n      console.log('task2 fail')\n      reject()\n    },delay)\n  })\n})\nQueue(()=>{\n  console.log('task3...')\n  return new Promise(resolve=>{\n    setTimeout(()=>{\n      console.log('task3 done')\n      resolve()\n    },delay)\n  })\n})\n\n\n\u4e0a\u8a18\u306e1\u30923\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\nbabel-node parallel.js\n# task1...\n# task2...\n# task3...\n# task1 done\n# task2 fail\n# task3 done\n\nimport Promise from 'bluebird'\nimport throat from 'throat'\n\nconst delay= 100\nconst Parallel= throat(Promise)(3)\n\nParallel(()=>{\n  console.log('task1...')\n  return new Promise(resolve=>{\n    setTimeout(()=>{\n      console.log('task1 done')\n      resolve()\n    },delay)\n  })\n})\nParallel(()=>{\n  console.log('task2...')\n  return new Promise((resolve,reject)=>{\n    setTimeout(()=>{\n      console.log('task2 fail')\n      reject()\n    },delay)\n  })\n})\nParallel(()=>{\n  console.log('task3...')\n  return new Promise(resolve=>{\n    setTimeout(()=>{\n      console.log('task3 done')\n      resolve()\n    },delay)\n  })\n})\n\nthroat(Promise)(3)\u306e\u623b\u308a\u5024\u306f\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3067\u3059\u3002\n\u7279\u5b9a\u306e\u30bf\u30b9\u30af\u306b\u30d5\u30c3\u30af\u3057\u305f\u3044\u5834\u5408\u3001\u305d\u306e\u307e\u307e.then\u3092\u7e4b\u3052\u307e\u3059\u3002\nimport Promise from 'bluebird'\nimport throat from 'throat'\n\nconst delay= 100\nconst Parallel= throat(Promise)(3)\n\nlet promise= Parallel(()=>{\n  return new Promise((resolve,reject)=>{\n    reject(new Error('\u3060\u3081\u3067\u3059'))\n  })\n})\n\npromise\n.then(value=>{\n  console.log(value)\n})\n.catch(reason=>{\n  console.error(reason.message)\n  process.exit(1)\n})\n\n\n\n\n\nPromise\u306eporyfill\u3092\u4f7f\u7528\u3057\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001browserify\u3057\u305fjs\u304cIE\u3067\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u00a0\u21a9\n\n\n\n[JavaScript\u3067\u8aad\u307f\u4e0a\u3052\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u305f](https://github.com/59naga/nicolive.berabou.me/blob/master/README.md#\u5e73\u6210\uff12\uff17\u5e74\uff11\uff10\u6708\uff16\u65e5\u706b)\u3068\u304d\u3001\u540c\u6642\u306b\u8aad\u307f\u4e0a\u3052\u3089\u308c\u308b\u3068\u3001\u8056\u5fb3\u592a\u5b50\u306b\u306a\u3089\u306a\u3051\u308c\u3070\u4e0d\u4fbf\u3067\u3059\u3002\n\u307e\u305f\u3001[\u30af\u30e9\u30a6\u30c9\u30c6\u30b9\u30c8\u3067\u5951\u7d04\u5236\u9650\u6570\u4ee5\u4e0a\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u8d77\u52d5\u3057\u3088\u3046](https://github.com/59naga/karma-saucelabs-launcher)\u3068\u3057\u3066\u3001\u62d2\u5426\u3055\u308c\u3066\u30c6\u30b9\u30c8\u304c\u9014\u4e2d\u3067\u843d\u3061\u3066\u3057\u307e\u3046\u3002\n\n\u306a\u3069\u3001\u975e\u540c\u671f\u51e6\u7406\u306b\u5bfe\u3057\u3066\u3001\uff11\u3064\u305a\u3064\u51e6\u7406\u3057\u3066\u6b32\u3057\u3044\u5834\u5408\u3084\u3001\uff15\u3064\u4ee5\u4e0b\u306a\u3089\u540c\u6642\u306b\u5b9f\u884c\u3057\u3066\u3082\u826f\u3044\u3002\u3068\u3044\u3046\u30b1\u30fc\u30b9\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```bash\nnpm install throat bluebird --save\n```\n\n[throat](https://github.com/ForbesLindesay/throat)\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u308c\u3089\u3092\u7c21\u6f54\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002[^1]\n\n```bash\nbabel-node quque.js\n# task1...\n# task1 done\n# task2...\n# task2 fail\n# task3...\n# task3 done\n```\n\n```js:quque.js\nimport Promise from 'bluebird'\nimport throat from 'throat'\n\nconst delay= 100\nconst Queue= throat(Promise)(1)\n\nQueue(()=>{\n  console.log('task1...')\n  return new Promise(resolve=>{\n    setTimeout(()=>{\n      console.log('task1 done')\n      resolve()\n    },delay)\n  })\n})\nQueue(()=>{\n  console.log('task2...')\n  return new Promise((resolve,reject)=>{\n    setTimeout(()=>{\n      console.log('task2 fail')\n      reject()\n    },delay)\n  })\n})\nQueue(()=>{\n  console.log('task3...')\n  return new Promise(resolve=>{\n    setTimeout(()=>{\n      console.log('task3 done')\n      resolve()\n    },delay)\n  })\n})\n```\n\n\u4e0a\u8a18\u306e`1`\u3092`3`\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```bash\nbabel-node parallel.js\n# task1...\n# task2...\n# task3...\n# task1 done\n# task2 fail\n# task3 done\n```\n\n```js\nimport Promise from 'bluebird'\nimport throat from 'throat'\n\nconst delay= 100\nconst Parallel= throat(Promise)(3)\n\nParallel(()=>{\n  console.log('task1...')\n  return new Promise(resolve=>{\n    setTimeout(()=>{\n      console.log('task1 done')\n      resolve()\n    },delay)\n  })\n})\nParallel(()=>{\n  console.log('task2...')\n  return new Promise((resolve,reject)=>{\n    setTimeout(()=>{\n      console.log('task2 fail')\n      reject()\n    },delay)\n  })\n})\nParallel(()=>{\n  console.log('task3...')\n  return new Promise(resolve=>{\n    setTimeout(()=>{\n      console.log('task3 done')\n      resolve()\n    },delay)\n  })\n})\n```\n\n`throat(Promise)(3)`\u306e\u623b\u308a\u5024\u306f\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3067\u3059\u3002\n\u7279\u5b9a\u306e\u30bf\u30b9\u30af\u306b\u30d5\u30c3\u30af\u3057\u305f\u3044\u5834\u5408\u3001\u305d\u306e\u307e\u307e`.then`\u3092\u7e4b\u3052\u307e\u3059\u3002\n\n```js\nimport Promise from 'bluebird'\nimport throat from 'throat'\n\nconst delay= 100\nconst Parallel= throat(Promise)(3)\n\nlet promise= Parallel(()=>{\n  return new Promise((resolve,reject)=>{\n    reject(new Error('\u3060\u3081\u3067\u3059'))\n  })\n})\n\npromise\n.then(value=>{\n  console.log(value)\n})\n.catch(reason=>{\n  console.error(reason.message)\n  process.exit(1)\n})\n```\n\n[^1]: Promise\u306eporyfill\u3092\u4f7f\u7528\u3057\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001[browserify\u3057\u305fjs\u304cIE\u3067\u52d5\u4f5c\u3057\u306a\u3044](https://travis-ci.org/59naga/caravan/builds/87444530#L479)\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["JavaScript", "Node.js", "promise", "babel", "bluebird"]}