{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306fOpenCV Advent Calendar 2015\u306e6\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n\u306f\u3058\u3081\u306b\nOpenCV\u3067\u306f\u6392\u4ed6\u5236\u5fa1\u306b\u7528\u3044\u308b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e\n\ncv::AutoLock\ncv::Mutex\n\n\u307e\u305f\uff0c\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306f\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3067\u3042\u308b\u305f\u3081\uff0c\u6392\u4ed6\u5236\u5fa1\u306e\u30b3\u30fc\u30c9\u3092\n\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u9593\u3067\u5171\u901a\u5316\u3067\u304d\u308b\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u3082\u3042\u308a\u307e\u3059\uff0e\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3053\u308c\u3089\u306e\u6a5f\u80fd\u3068\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\ncv::AutoLock\u30af\u30e9\u30b9\ncv::AutoLock\u30af\u30e9\u30b9\u306f\uff0c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u5b58\u3059\u308b\u9593\u306b\u304a\u3044\u3066cv::Mutex\u30af\u30e9\u30b9\u306e\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7528\u3044\u3066\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3046\u4ed5\u7d44\u307f\u3067\u3059\uff0e\u4ee5\u4e0b\u306b\u7591\u4f3c\u30b3\u30fc\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n{\n    cv::AutoLock lock(mutex); // mutex\u3092\u4f7f\u3063\u3066\u30ed\u30c3\u30af\u3059\u308b\n    counter++;\n\n    // lock\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7834\u68c4\u3055\u308c\u308b\uff08=\u3053\u306e\u30b9\u30b3\u30fc\u30d7\u3092\u51fa\u308b\uff09\u3068\u30a2\u30f3\u30ed\u30c3\u30af\u3059\u308b\n}\n\nAutoLock\u3068\u3044\u3046\u540d\u524d\u306e\u7531\u6765\u306f\uff0c\n\n\ncv::AutoLock\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u305f\u6642\u70b9\u3067\u30ed\u30c3\u30af\u3092\u884c\u3046\n\ncv::AutoLock\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7834\u68c4\u3057\u305f\u6642\u70b9\u3067\u30a2\u30f3\u30ed\u30c3\u30af\u3092\u884c\u3046\n\n\u3053\u3068\u3092\u5185\u90e8\u7684\u306b\u81ea\u52d5\u3067\u884c\u3046\u3053\u3068\u304b\u3089\u6765\u3066\u3044\u307e\u3059\uff0e\n\u4f7f\u3044\u65b9\u3084\u6a5f\u80fd\u306f\uff0cC++\u3084Boost\u3067\u8a00\u3046\u3068\u3053\u308d\u306estd::lock_guard(C++)\u3084\nboost::mutex::scoped_lock(Boost)\u3068\u4f3c\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\ncv::AutoLock\u30af\u30e9\u30b9\u306e\u5185\u90e8\u51e6\u7406\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u8abf\u3079\u3088\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u307b\u3068\u3093\u3069\u60c5\u5831\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3002\u3002orz\n\u3068\u3044\u3046\u3053\u3068\u3067\uff0c\u6c17\u3092\u53d6\u308a\u76f4\u3057\u3066modules/core/include/opencv2/core/utility.hpp\u306e\ncv::AutoLock\u5b9f\u88c5\u3092\u8aad\u3093\u3067\u307f\u307e\u3059\uff0e\nclass CV_EXPORTS AutoLock\n{\npublic:\n    AutoLock(Mutex& m) : mutex(&m) { mutex->lock(); }\n    ~AutoLock() { mutex->unlock(); }\nprotected:\n    Mutex* mutex;\nprivate:\n    AutoLock(const AutoLock&);\n    AutoLock& operator = (const AutoLock&);\n};\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u304b\u3089\u3082\u308f\u304b\u308b\u3088\u3046\u306bcv::AutoLock\u30af\u30e9\u30b9\u306f\uff0c\n\n\u30af\u30e9\u30b9\u30e1\u30f3\u30d0\u3068\u3057\u3066cv::Mutex\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3063\u3066\u304a\u308a\uff0c\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067cv::Mutex\u306elock\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\uff0c\n\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067cv::Mutex\u306eunlock\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\u3053\u3053\u3067\u767b\u5834\u3059\u308bcv::Mutex\u306b\u3064\u3044\u3066\u306f\u6b21\u3067\u8aac\u660e\u3057\u307e\u3059\uff0c\n\ncv::Mutex\u30af\u30e9\u30b9\ncv::Mutex\u306f\u6392\u4ed6\u5236\u5fa1\u306b\u7528\u3044\u308b\u30ed\u30c3\u30af\u51e6\u7406\u3092\u62c5\u3046\u30af\u30e9\u30b9\u3067\u3042\u308a\uff0c\n\u5148\u306e\u8aac\u660e\u3067\u3082\u7d39\u4ecb\u3057\u305f\u3088\u3046\u306bcv::AutoLock\u5185\u90e8\u3067\u3082\u7528\u3044\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\n\u901a\u5e38\uff0c\u6392\u4ed6\u5236\u5fa1\u306b\u7528\u3044\u308b\u30ed\u30c3\u30af\u51e6\u7406\u306fOS\u306b\u4f9d\u5b58\u3059\u308b\u306e\u3067\u3059\u304c\uff0c\nOpenCV\u304c\u63d0\u4f9b\u3059\u308bcv::Mutex\u306fOS\u306e\u9055\u3044\u3092\u5438\u53ce\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\n\u30e6\u30fc\u30b6\u304c\u74b0\u5883\u4f9d\u5b58\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u304c\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306bcv::Mutex\u304c\u5185\u90e8\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u6a5f\u80fd\u3092OS\u6bce\u306b\u307e\u3068\u3081\u307e\u3057\u305f\uff0e\n\n\n\nOS\n\u95a2\u6570\n\n\n\n\nWindows\nCriticalSection\n\n\nLinux/MacOS\npthread\n\n\n\n\u8a73\u7d30\u306a\u5b9f\u88c5\u3092\u77e5\u308a\u305f\u3044\u65b9\u306fmodules/core/include/opencv2/core/utility.hpp\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\uff0e\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u306bcv::AutoLock\u3092\u7528\u3044\u3066\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff08cv::AutoLock\uff09\n\nautolock_test.cpp\n#include <opencv2/core.hpp> // core\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3066\u5b9a\u7fa9\n\n#include <thread>\n#include <mutex>\n#include <vector>\n#include <iostream>\n\n#define ENABLE_AUTOLOCK\n\ncv::Mutex g_mutex; // cv::Mutex\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\nint g_counter = 0; // \u30ab\u30a6\u30f3\u30bf\n\nvoid dummyProcessing(void)\n{\n    std::this_thread::sleep_for(std::chrono::milliseconds(10));\n}\n\nvoid incrementCounter(void)\n{\n    dummyProcessing();\n\n#ifdef ENABLE_AUTOLOCK\n    cv::AutoLock lock(g_mutex);\n#endif\n\n    g_counter++;\n}\n\nint main(int argc, const char* argv[])\n{\n    // \u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30b9\u30ec\u30c3\u30c9\u6570\u306f500\n    std::vector<std::thread> threads(500);\n\n    // \u5404\u30b9\u30ec\u30c3\u30c9\u306b\u3066\u30ab\u30a6\u30f3\u30bf\u3092\u5897\u3084\u3059\n    for(auto& thread : threads)\n    {\n        thread = \n            std::thread(incrementCounter);\n    }\n    for(auto& thread : threads){ thread.join(); }\n\n    // \u3053\u306e\u6642\u70b9\u3067\u30ab\u30a6\u30f3\u30bf\u306f500\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\n    std::cout << g_counter << std::endl;\n\n    return 0;\n}\n\n\n\u307e\u305f\uff0cENABLE_AUTOLOCK\u3092undef\u3059\u308b\u3068\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u308f\u306a\u3044\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u5b9f\u969b\u306b\u6392\u4ed6\u5236\u5fa1\u6709\u308a\u30fb\u7121\u3057\u3067\u5b9f\u884c\u3057\u3066\u307f\u3066\u7d50\u679c\u306e\u9055\u3044\u3092\u898b\u3066\u307f\u308b\u3068\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n\u304a\u308f\u308a\u306b\nOpenCV\u3092\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u306e\u6392\u4ed6\u5236\u5fa1\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u969b\u306b\n\ncv::AutoLock\ncv::Mutex\n\n\u3092\u4f7f\u7528\u3059\u308b\u3068\u3044\u3046\u9078\u629e\u80a2\u3082\u3042\u308a\u307e\u3059\uff0e\n\n\u5099\u8003\n\u7b46\u8005\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\nOpenCV 3.0.0\nWindows 8.1 Pro\uff0864bit\uff09\nVisual Studio 2013 Update5\n\n\u3053\u306e\u8a18\u4e8b\u306f[OpenCV Advent Calendar 2015](http://qiita.com/advent-calendar/2015/opencv)\u306e6\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n# \u306f\u3058\u3081\u306b\nOpenCV\u3067\u306f\u6392\u4ed6\u5236\u5fa1\u306b\u7528\u3044\u308b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e\n\n* cv::AutoLock\n* cv::Mutex\n\n\u307e\u305f\uff0c\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306f\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3067\u3042\u308b\u305f\u3081\uff0c\u6392\u4ed6\u5236\u5fa1\u306e\u30b3\u30fc\u30c9\u3092\n\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u9593\u3067\u5171\u901a\u5316\u3067\u304d\u308b\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u3082\u3042\u308a\u307e\u3059\uff0e\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3053\u308c\u3089\u306e\u6a5f\u80fd\u3068\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n# cv::AutoLock\u30af\u30e9\u30b9\ncv::AutoLock\u30af\u30e9\u30b9\u306f\uff0c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u5b58\u3059\u308b\u9593\u306b\u304a\u3044\u3066cv::Mutex\u30af\u30e9\u30b9\u306e\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7528\u3044\u3066\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3046\u4ed5\u7d44\u307f\u3067\u3059\uff0e\u4ee5\u4e0b\u306b\u7591\u4f3c\u30b3\u30fc\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n```cpp\n{\n    cv::AutoLock lock(mutex); // mutex\u3092\u4f7f\u3063\u3066\u30ed\u30c3\u30af\u3059\u308b\n    counter++;\n\n    // lock\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7834\u68c4\u3055\u308c\u308b\uff08=\u3053\u306e\u30b9\u30b3\u30fc\u30d7\u3092\u51fa\u308b\uff09\u3068\u30a2\u30f3\u30ed\u30c3\u30af\u3059\u308b\n}\n```\n\nAutoLock\u3068\u3044\u3046\u540d\u524d\u306e\u7531\u6765\u306f\uff0c\n\n* <code>cv::AutoLock</code>\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u305f\u6642\u70b9\u3067\u30ed\u30c3\u30af\u3092\u884c\u3046\n* <code>cv::AutoLock</code>\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7834\u68c4\u3057\u305f\u6642\u70b9\u3067\u30a2\u30f3\u30ed\u30c3\u30af\u3092\u884c\u3046\n\n\u3053\u3068\u3092\u5185\u90e8\u7684\u306b\u81ea\u52d5\u3067\u884c\u3046\u3053\u3068\u304b\u3089\u6765\u3066\u3044\u307e\u3059\uff0e\n\n\u4f7f\u3044\u65b9\u3084\u6a5f\u80fd\u306f\uff0cC++\u3084Boost\u3067\u8a00\u3046\u3068\u3053\u308d\u306e[std::lock_guard(C++)](http://en.cppreference.com/w/cpp/thread/lock_guard)\u3084\n[boost::mutex::scoped_lock(Boost)](http://www.boost.org/doc/libs/1_59_0/doc/html/boost/interprocess/scoped_lock.html)\u3068\u4f3c\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n## cv::AutoLock\u30af\u30e9\u30b9\u306e\u5185\u90e8\u51e6\u7406\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.opencv.org/3.0.0/dd/de2/classcv_1_1AutoLock.html#aaee95814e8ba8929b595a7a26ae546e3)\u3092\u8aad\u3093\u3067\u8abf\u3079\u3088\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u307b\u3068\u3093\u3069\u60c5\u5831\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3002\u3002orz\n\n\u3068\u3044\u3046\u3053\u3068\u3067\uff0c\u6c17\u3092\u53d6\u308a\u76f4\u3057\u3066<code>modules/core/include/opencv2/core/utility.hpp</code>\u306e\ncv::AutoLock\u5b9f\u88c5\u3092\u8aad\u3093\u3067\u307f\u307e\u3059\uff0e\n\n```cpp\nclass CV_EXPORTS AutoLock\n{\npublic:\n    AutoLock(Mutex& m) : mutex(&m) { mutex->lock(); }\n    ~AutoLock() { mutex->unlock(); }\nprotected:\n    Mutex* mutex;\nprivate:\n    AutoLock(const AutoLock&);\n    AutoLock& operator = (const AutoLock&);\n};\n```\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u304b\u3089\u3082\u308f\u304b\u308b\u3088\u3046\u306b<code>cv::AutoLock</code>\u30af\u30e9\u30b9\u306f\uff0c\n\n* \u30af\u30e9\u30b9\u30e1\u30f3\u30d0\u3068\u3057\u3066<code>cv::Mutex</code>\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3063\u3066\u304a\u308a\uff0c\n* \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067<code>cv::Mutex</code>\u306elock\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\uff0c\n* \u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067<code>cv::Mutex</code>\u306eunlock\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\u3053\u3053\u3067\u767b\u5834\u3059\u308b<code>cv::Mutex</code>\u306b\u3064\u3044\u3066\u306f\u6b21\u3067\u8aac\u660e\u3057\u307e\u3059\uff0c\n\n# cv::Mutex\u30af\u30e9\u30b9\n<code>cv::Mutex</code>\u306f\u6392\u4ed6\u5236\u5fa1\u306b\u7528\u3044\u308b\u30ed\u30c3\u30af\u51e6\u7406\u3092\u62c5\u3046\u30af\u30e9\u30b9\u3067\u3042\u308a\uff0c\n\u5148\u306e\u8aac\u660e\u3067\u3082\u7d39\u4ecb\u3057\u305f\u3088\u3046\u306bcv::AutoLock\u5185\u90e8\u3067\u3082\u7528\u3044\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\n\n\u901a\u5e38\uff0c\u6392\u4ed6\u5236\u5fa1\u306b\u7528\u3044\u308b\u30ed\u30c3\u30af\u51e6\u7406\u306fOS\u306b\u4f9d\u5b58\u3059\u308b\u306e\u3067\u3059\u304c\uff0c\nOpenCV\u304c\u63d0\u4f9b\u3059\u308b<code>cv::Mutex</code>\u306fOS\u306e\u9055\u3044\u3092\u5438\u53ce\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\n\u30e6\u30fc\u30b6\u304c\u74b0\u5883\u4f9d\u5b58\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u304c\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\n\u4ee5\u4e0b\u306b<code>cv::Mutex</code>\u304c\u5185\u90e8\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u6a5f\u80fd\u3092OS\u6bce\u306b\u307e\u3068\u3081\u307e\u3057\u305f\uff0e\n\n| OS | \u95a2\u6570 |\n|:--|:--|\n| Windows | CriticalSection |\n| Linux/MacOS | pthread |\n\n\u8a73\u7d30\u306a\u5b9f\u88c5\u3092\u77e5\u308a\u305f\u3044\u65b9\u306f<code>modules/core/include/opencv2/core/utility.hpp</code>\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\uff0e\n\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u306b<code>cv::AutoLock</code>\u3092\u7528\u3044\u3066\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff08cv::AutoLock\uff09\n```cpp:autolock_test.cpp\n#include <opencv2/core.hpp> // core\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3066\u5b9a\u7fa9\n\n#include <thread>\n#include <mutex>\n#include <vector>\n#include <iostream>\n\n#define ENABLE_AUTOLOCK\n\ncv::Mutex g_mutex; // cv::Mutex\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\nint g_counter = 0; // \u30ab\u30a6\u30f3\u30bf\n\nvoid dummyProcessing(void)\n{\n    std::this_thread::sleep_for(std::chrono::milliseconds(10));\n}\n\nvoid incrementCounter(void)\n{\n    dummyProcessing();\n\n#ifdef ENABLE_AUTOLOCK\n    cv::AutoLock lock(g_mutex);\n#endif\n\n    g_counter++;\n}\n\nint main(int argc, const char* argv[])\n{\n    // \u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30b9\u30ec\u30c3\u30c9\u6570\u306f500\n    std::vector<std::thread> threads(500);\n\n    // \u5404\u30b9\u30ec\u30c3\u30c9\u306b\u3066\u30ab\u30a6\u30f3\u30bf\u3092\u5897\u3084\u3059\n    for(auto& thread : threads)\n    {\n        thread = \n            std::thread(incrementCounter);\n    }\n    for(auto& thread : threads){ thread.join(); }\n\n    // \u3053\u306e\u6642\u70b9\u3067\u30ab\u30a6\u30f3\u30bf\u306f500\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\n    std::cout << g_counter << std::endl;\n\n    return 0;\n}\n```\n\n\u307e\u305f\uff0c<code>ENABLE_AUTOLOCK</code>\u3092undef\u3059\u308b\u3068\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u308f\u306a\u3044\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u5b9f\u969b\u306b\u6392\u4ed6\u5236\u5fa1\u6709\u308a\u30fb\u7121\u3057\u3067\u5b9f\u884c\u3057\u3066\u307f\u3066\u7d50\u679c\u306e\u9055\u3044\u3092\u898b\u3066\u307f\u308b\u3068\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n# \u304a\u308f\u308a\u306b\nOpenCV\u3092\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u306e\u6392\u4ed6\u5236\u5fa1\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u969b\u306b\n\n* cv::AutoLock\n* cv::Mutex\n\n\u3092\u4f7f\u7528\u3059\u308b\u3068\u3044\u3046\u9078\u629e\u80a2\u3082\u3042\u308a\u307e\u3059\uff0e\n\n# \u5099\u8003\n\u7b46\u8005\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\n* [OpenCV 3.0.0](https://github.com/Itseez/opencv/releases/tag/3.0.0)\n* Windows 8.1 Pro\uff0864bit\uff09\n* Visual Studio 2013 Update5\n", "tags": ["OpenCV", "\u753b\u50cf\u51e6\u7406", "C++"]}