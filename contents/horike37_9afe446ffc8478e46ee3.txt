{"context": " More than 1 year has passed since last update.\n\u4e0a\u8a18\u306e\u56f3\u306e\u901a\u308a\u3001Rails\u306e\u5c02\u7528\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089lambda\u3092\u30ad\u30c3\u30af\u3057\u3066\u3001OpsWorks\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308bEC2\u306e\u7ba1\u7406\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3092\u884c\u3046\u30a2\u30d7\u30ea\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u304c\u3001Rails\u304b\u3089Lambda\u3067\u4f5c\u6210\u3057\u305f\u95a2\u6570\u3092\u30ad\u30c3\u30af\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002json\u3067\u5f15\u6570\u3068\u306a\u308binstance_id\u3092\u751f\u6210\u3057\u3066\u3001invoke_async\u30e1\u30bd\u30c3\u30c9\u3067\u3001Lambda\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nRails\u306eController\n# coding: utf-8\n\nclass ItemsController < ApplicationController\n  def index\n    Aws.config[:region] = \"us-east-1\"\n    lambda = Aws::Lambda::Client.new;\n    if params[:instance_status_toggle]\n      param = { instance_id: \"<\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID>\"}.to_json # lambda\u306b\u6e21\u3059\u5f15\u6570\u3092json\u3067\u751f\u6210\n      resp = lambda.invoke_async(function_name: \"start-incetance\", invoke_args: param) # lambda\u306estart-incetance\u95a2\u6570\u3092\u5b9f\u884c\n    end\n  end\n\nend\n\n\n\u4ee5\u4e0b\u304cLambda\u304b\u3089OpsWorks\u3067\u7ba1\u7406\u3055\u308c\u305fEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8d77\u52d5\u3055\u305b\u308b\u305f\u3081\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\nLambda\u306estart-incetance\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\nconst ACCESS_KEY = '<ACCESS_KEY>';\nconst SECRET_KEY = '<SECRET_KEY>';\n\nvar AWS = require('aws-sdk');\nAWS.config.update({accessKeyId: ACCESS_KEY, secretAccessKey: SECRET_KEY});\n\nexports.handler = function(event, context) {\n    var opsworks = new AWS.OpsWorks();\n     opsworks.describeInstances( {InstanceIds : [event.instance_id]},function(err, data) {\n        if (err) {\n            console.log(err, err.stack);\n        } else {\n            if ( data.Instances[0].Status == 'stopped' ) {\n                opsworks.startInstance({InstanceId : event.instance_id}, function(err, data) {\n                    if (err) {\n                        console.log(err, err.stack);\n                    } else {\n                        context.done(null, 'Update Online Success');\n                    }\n                });\n            } else if ( data.Instances[0].Status == 'online' ) {\n                context.done(null, 'Now Online');\n            } else {\n                context.done(null, 'Other Status');\n            }\n        }\n    });\n};\n\n\n\u3053\u3046\u3044\u3063\u305f\u5f62\u3067\u3001\u5fc5\u8981\u306a\u6a5f\u80fd\u3092Lambda\u3092API\u306e\u5f62\u5f0f\u3067\u307e\u3068\u3081\u3066\u304a\u304f\u3068\u69d8\u3005\u306a\u8a00\u8a9e\u3084\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5909\u3048\u3066\u6d3b\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u305d\u3046\u3067\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-01-11 17.14.15.png](https://qiita-image-store.s3.amazonaws.com/0/65478/978d22d4-7976-85cc-6464-3d43a06f51ff.png)\n\n\u4e0a\u8a18\u306e\u56f3\u306e\u901a\u308a\u3001Rails\u306e\u5c02\u7528\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089lambda\u3092\u30ad\u30c3\u30af\u3057\u3066\u3001OpsWorks\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308bEC2\u306e\u7ba1\u7406\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3092\u884c\u3046\u30a2\u30d7\u30ea\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u304c\u3001Rails\u304b\u3089Lambda\u3067\u4f5c\u6210\u3057\u305f\u95a2\u6570\u3092\u30ad\u30c3\u30af\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002json\u3067\u5f15\u6570\u3068\u306a\u308binstance_id\u3092\u751f\u6210\u3057\u3066\u3001invoke_async\u30e1\u30bd\u30c3\u30c9\u3067\u3001Lambda\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```ruby:Rails\u306eController\n# coding: utf-8\n\nclass ItemsController < ApplicationController\n  def index\n  \tAws.config[:region] = \"us-east-1\"\n    lambda = Aws::Lambda::Client.new;\n    if params[:instance_status_toggle]\n      param = { instance_id: \"<\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID>\"}.to_json # lambda\u306b\u6e21\u3059\u5f15\u6570\u3092json\u3067\u751f\u6210\n      resp = lambda.invoke_async(function_name: \"start-incetance\", invoke_args: param) # lambda\u306estart-incetance\u95a2\u6570\u3092\u5b9f\u884c\n    end\n  end\n \nend\n```\n\n\u4ee5\u4e0b\u304cLambda\u304b\u3089OpsWorks\u3067\u7ba1\u7406\u3055\u308c\u305fEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8d77\u52d5\u3055\u305b\u308b\u305f\u3081\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n```js:Lambda\u306estart-incetance\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\nconst ACCESS_KEY = '<ACCESS_KEY>';\nconst SECRET_KEY = '<SECRET_KEY>';\n\nvar AWS = require('aws-sdk');\nAWS.config.update({accessKeyId: ACCESS_KEY, secretAccessKey: SECRET_KEY});\n\nexports.handler = function(event, context) {\n    var opsworks = new AWS.OpsWorks();\n     opsworks.describeInstances( {InstanceIds : [event.instance_id]},function(err, data) {\n        if (err) {\n            console.log(err, err.stack);\n        } else {\n            if ( data.Instances[0].Status == 'stopped' ) {\n                opsworks.startInstance({InstanceId : event.instance_id}, function(err, data) {\n                    if (err) {\n                        console.log(err, err.stack);\n                    } else {\n                        context.done(null, 'Update Online Success');\n                    }\n                });\n            } else if ( data.Instances[0].Status == 'online' ) {\n                context.done(null, 'Now Online');\n            } else {\n                context.done(null, 'Other Status');\n            }\n        }\n    });\n};\n```\n\u3053\u3046\u3044\u3063\u305f\u5f62\u3067\u3001\u5fc5\u8981\u306a\u6a5f\u80fd\u3092Lambda\u3092API\u306e\u5f62\u5f0f\u3067\u307e\u3068\u3081\u3066\u304a\u304f\u3068\u69d8\u3005\u306a\u8a00\u8a9e\u3084\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5909\u3048\u3066\u6d3b\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u305d\u3046\u3067\u3059\u3002\n", "tags": ["AWS", "lambda", "opsworks"]}