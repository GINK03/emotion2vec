{"context": "\u3053\u306e\u8a18\u4e8b\u306fGithub\u3067\u516c\u958b\u4e2d\u306e\u753b\u50cf\u30d5\u30a3\u30eb\u30bf\u30e9\u30a4\u30d6\u30e9\u30eaSharaku\u306e\u4e2d\u8eab\u3068\u4f5c\u308a\u65b9\u3092\u89e3\u8aac\u3057\u305f\u8a18\u4e8b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u8a18\u4e8b\u5185\u5bb9\u3068\u3057\u3066\u306f\n\nCocoaPods\u3092\u7528\u3044\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210\u65b9\u6cd5\nCore Image\u306eCIFilter\u306e\u4f7f\u3044\u65b9\n\n\u306a\u3069\u304c\u4e3b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u624b\u3063\u53d6\u308a\u65e9\u304f\u753b\u50cf\u30d5\u30a3\u30eb\u30bf\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u3068\u3044\u3046\u65b9\u306fpod 'Sharaku'\u3092podfile\u306b\u8ffd\u52a0\u3057\u3066\u4f7f\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306eGithub\u306f\u3053\u3061\u3089\u3002\nhttps://github.com/makomori/Sharaku\n\n\u5b8c\u6210\u5f62\n\n\n\u4f5c\u308a\u65b9\n\nCocoaPods\u306b\u3088\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\npod lib create Sharaku\n\n\u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u4f5c\u3089\u308c\u307e\u3059\u3002\u8272\u3005\u3068\u805e\u304b\u308c\u308b\u306e\u3067\u9069\u5b9c\u7b54\u3048\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u300cdemo application\u3092\u542b\u3081\u308b\u300d\u306bYes\u3068\u7b54\u3048\u308b\u3068Example for Sharaku\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u4f5c\u3089\u308c\u308b\u306e\u3067\u305d\u3053\u306b\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u66f8\u3044\u3066\u3044\u304d\u3001Pods\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308bDevelopment Pods\u3067\u5b9f\u969b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u958b\u767a\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u753b\u50cf\u30d5\u30a3\u30eb\u30bf\u6a5f\u80fd\u306e\u4f5c\u6210\n\u809d\u5fc3\u306eUIImage\u306e\u30d5\u30a3\u30eb\u30bf\u6a5f\u80fd\u306b\u95a2\u3057\u3066\u306fCore Image\u306eCIFilter\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068Instagram\u3063\u307d\u3044\u30d5\u30a3\u30eb\u30bf\u3092\u6570\u884c\u3067\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nSharaku\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u753b\u50cf\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u3066\u3044\u307e\u3059\u3002\n\nfunc createFilteredImage(filterName: String, image: UIImage) -> UIImage {\n        // 1 - create source image\n        let sourceImage = CIImage(image: image)\n\n        // 2 - create filter using name\n        let filter = CIFilter(name: filterName)\n        filter?.setDefaults()\n\n        // 3 - set source image\n        filter?.setValue(sourceImage, forKey: kCIInputImageKey)\n\n        // 4 - output filtered image as cgImage with dimension.\n        let outputCGImage = context.createCGImage((filter?.outputImage!)!, from: (filter?.outputImage!.extent)!)\n\n        // 5 - convert filtered CGImage to UIImage\n        let filteredImage = UIImage(cgImage: outputCGImage!)\n\n        return filteredImage\n    }\n\nSharaku\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u306e\u4e00\u89a7\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n\"CIPhotoEffectChrome\",\n\"CIPhotoEffectFade\",\n\"CIPhotoEffectInstant\",\n\"CIPhotoEffectMono\",\n\"CIPhotoEffectNoir\",\n\"CIPhotoEffectProcess\",\n\"CIPhotoEffectTonal\",\n\"CIPhotoEffectTransfer\",\n\"CILinearToSRGBToneCurve\",\n\"CISRGBToneCurveToLinear\"\n\n\nUIImageView\u306bUIGestureRecognizer\u3092\u4e57\u305b\u3066\u5de6\u53f3\u306e\u30b9\u30ef\u30a4\u30d7\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u3092\u53d6\u5f97\u3059\u308b\n\n@IBAction func imageViewDidSwipeLeft() {\n    if filterIndex == filterNameList.count - 1 {\n        filterIndex = 0\n        imageView?.image = image\n    } else {\n        filterIndex += 1\n    }\n    if filterIndex != 0 {\n        applyFilter()\n    }\n    updateCellFont()\n    scrollCollectionViewToIndex(itemIndex: filterIndex)\n}\n\n\n\u30e1\u30a4\u30f3\u306eImageView\u306b\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u3068\u4e0b\u306eCollectionView\u3092\u9023\u52d5\u3055\u305b\u308b\n\nextension  SHViewController: UICollectionViewDataSource, UICollectionViewDelegate\n{\n    public func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {\n        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: \"cell\", for: indexPath) as! SHCollectionViewCell\n        var filteredImage = smallImage\n        if indexPath.row != 0 {\n            filteredImage = createFilteredImage(filterName: filterNameList[indexPath.row], image: smallImage!)\n        }\n\n        cell.imageView.image = filteredImage\n        cell.filterNameLabel.text = filterDisplayNameList[indexPath.row]\n        updateCellFont()\n        return cell\n    }\n\n    public func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {\n        return filterNameList.count\n    }\n\n    public func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {\n        filterIndex = indexPath.row\n        if filterIndex != 0 {\n            applyFilter()\n        } else {\n            imageView?.image = image\n        }\n        updateCellFont()\n        scrollCollectionViewToIndex(itemIndex: indexPath.item)\n    }\n}\n\n\n\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u306b\u5fdc\u3058\u3066Label\u306efont-size\u3092\u5909\u3048\u308b\nfunc updateCellFont() {\n    // update font of selected cell\n    if let selectedCell = collectionView?.cellForItem(at: IndexPath(row: filterIndex, section: 0)) {\n        let cell = selectedCell as! SHCollectionViewCell\n        cell.filterNameLabel.font = UIFont.boldSystemFont(ofSize: 14)\n    }\n\n    for i in 0...filterNameList.count - 1 {\n        if i != filterIndex {\n            // update nonselected cell font\n            if let unselectedCell = collectionView?.cellForItem(at: IndexPath(row: i, section: 0)) {\n                let cell = unselectedCell as! SHCollectionViewCell\n                if #available(iOS 8.2, *) {\n                    cell.filterNameLabel.font = UIFont.systemFont(ofSize: 14.0, weight: UIFontWeightThin)\n                } else {\n                    // Fallback on earlier versions\n                    cell.filterNameLabel.font = UIFont.systemFont(ofSize: 14.0)\n                }\n            }\n        }\n    }\n}\n\n\n\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u306e\u5909\u66f4\u306b\u5fdc\u3058\u3066CollectionView\u3092\u52d5\u304b\u3059\nfunc scrollCollectionViewToIndex(itemIndex: Int) {\n    let indexPath = IndexPath(item: itemIndex, section: 0)\n    self.collectionView?.scrollToItem(at: indexPath, at: .centeredHorizontally, animated: true)\n}\n\n\u4e3b\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0a\u306b\u306a\u308a\u307e\u3059\u3002CIFilter\u3092\u77e5\u308b\u307e\u3067\u306f\u4f55\u304b\u96e3\u3057\u305d\u3046\u306b\u611f\u3058\u3066\u3044\u305f\u753b\u50cf\u30d5\u30a3\u30eb\u30bf\u3082\u5b9f\u969b\u306b\u4f5c\u3063\u3066\u307f\u308b\u3068\u4e00\u77ac\u3067\u3057\u305f\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5ba3\u4f1d\u306e\u4ed5\u65b9\n\n\nCocoacontrols\u306b\u6295\u7a3f\u3059\u308b\u3002\uff08\u3053\u308c\u304c\u4e00\u756a\u52b9\u679c\u7684\u3067\u3057\u305f\u3002\uff09\nGithub\u306e\u30c8\u30ec\u30f3\u30c9\u306b\u8f09\u308b\u3002\uff08Cocoacontrols\u306a\u3069\u304b\u3089\u306e\u6d41\u5165\u30671\u65e550star\u307b\u3069\u4ed8\u3051\u3070\u4e0a\u4f4d\u306b\u4e0a\u304c\u3063\u3066\u304f\u308b\u306e\u3067star\u304c\u4ed8\u304d\u3084\u3059\u3044\u3067\u3059\u3002\uff09\nawesome-ios\u306a\u3069\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306b\u8f09\u305b\u3066\u3082\u3089\u3046\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5ba3\u4f1d\u3059\u308b\u4ed6\u306e\u826f\u3044\u65b9\u6cd5\u306a\u3069\u3054\u5b58\u77e5\u306e\u65b9\u3044\u3089\u3063\u3057\u3083\u3044\u307e\u3057\u305f\u3089\u662f\u975e\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4f59\u8ac7\n\u3061\u306a\u307f\u306b\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u30a4\u30f3\u30b9\u30bf\u30b0\u30e9\u30e0\u30e9\u30a4\u30af\u306a\u30ab\u30e1\u30e9\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u308b\u30e9\u30a4\u30d6\u30e9\u30eafusuma\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u4f5c\u308a\u307e\u3057\u305f\u3002\u300c\u30b7\u30f3\u30d7\u30eb\u3067\u3001\u7dba\u9e97\u306a\u30d5\u30a3\u30eb\u30bf\u3092\u5c0e\u5165\u3057\u305f\u3044\u3002\u300d\u305d\u3093\u306a\u30cb\u30fc\u30ba\u306b\u5fdc\u3048\u308b\u5c0f\u898f\u6a21\u306aUI\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u826f\u304f\u306a\u3044\u3001\u3053\u3093\u306a\u6a5f\u80fd\u304c\u6b32\u3057\u3044\u3001\u306a\u3069\u4f55\u304b\u3054\u610f\u898b\u304c\u3054\u3056\u3044\u307e\u3057\u305f\u3089Qiita\u3082\u3057\u304f\u306fGithub\u3069\u3061\u3089\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u306e\u3067\u662f\u975e\u3054\u6307\u6458\u304f\u3060\u3055\u3044\uff01\n\u3053\u306e\u8a18\u4e8b\u306fGithub\u3067\u516c\u958b\u4e2d\u306e\u753b\u50cf\u30d5\u30a3\u30eb\u30bf\u30e9\u30a4\u30d6\u30e9\u30eaSharaku\u306e\u4e2d\u8eab\u3068\u4f5c\u308a\u65b9\u3092\u89e3\u8aac\u3057\u305f\u8a18\u4e8b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u8a18\u4e8b\u5185\u5bb9\u3068\u3057\u3066\u306f\n\n- CocoaPods\u3092\u7528\u3044\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210\u65b9\u6cd5\n- Core Image\u306eCIFilter\u306e\u4f7f\u3044\u65b9\n\n\u306a\u3069\u304c\u4e3b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u624b\u3063\u53d6\u308a\u65e9\u304f\u753b\u50cf\u30d5\u30a3\u30eb\u30bf\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u3068\u3044\u3046\u65b9\u306f``` pod 'Sharaku'```\u3092podfile\u306b\u8ffd\u52a0\u3057\u3066\u4f7f\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306eGithub\u306f\u3053\u3061\u3089\u3002\nhttps://github.com/makomori/Sharaku\n\n## \u5b8c\u6210\u5f62\n![sharaku_header.png](https://qiita-image-store.s3.amazonaws.com/0/62625/d6eb5f41-0def-6853-36c6-a5bd11b71ea8.png)\n\n## \u4f5c\u308a\u65b9\n### CocoaPods\u306b\u3088\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n``` ruby\npod lib create Sharaku\n```\n\u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u4f5c\u3089\u308c\u307e\u3059\u3002\u8272\u3005\u3068\u805e\u304b\u308c\u308b\u306e\u3067\u9069\u5b9c\u7b54\u3048\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u300cdemo application\u3092\u542b\u3081\u308b\u300d\u306bYes\u3068\u7b54\u3048\u308b\u3068Example for Sharaku\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u4f5c\u3089\u308c\u308b\u306e\u3067\u305d\u3053\u306b\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u66f8\u3044\u3066\u3044\u304d\u3001Pods\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308bDevelopment Pods\u3067\u5b9f\u969b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u958b\u767a\u3092\u884c\u3044\u307e\u3059\u3002\n\n### \u753b\u50cf\u30d5\u30a3\u30eb\u30bf\u6a5f\u80fd\u306e\u4f5c\u6210\n\u809d\u5fc3\u306eUIImage\u306e\u30d5\u30a3\u30eb\u30bf\u6a5f\u80fd\u306b\u95a2\u3057\u3066\u306fCore Image\u306eCIFilter\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068Instagram\u3063\u307d\u3044\u30d5\u30a3\u30eb\u30bf\u3092\u6570\u884c\u3067\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nSharaku\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u753b\u50cf\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u3066\u3044\u307e\u3059\u3002\n\n```swift\n\nfunc createFilteredImage(filterName: String, image: UIImage) -> UIImage {\n        // 1 - create source image\n        let sourceImage = CIImage(image: image)\n\n        // 2 - create filter using name\n        let filter = CIFilter(name: filterName)\n        filter?.setDefaults()\n\n        // 3 - set source image\n        filter?.setValue(sourceImage, forKey: kCIInputImageKey)\n\n        // 4 - output filtered image as cgImage with dimension.\n        let outputCGImage = context.createCGImage((filter?.outputImage!)!, from: (filter?.outputImage!.extent)!)\n\n        // 5 - convert filtered CGImage to UIImage\n        let filteredImage = UIImage(cgImage: outputCGImage!)\n\n        return filteredImage\n    }\n```\n\nSharaku\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u306e\u4e00\u89a7\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```swift\n\n\"CIPhotoEffectChrome\",\n\"CIPhotoEffectFade\",\n\"CIPhotoEffectInstant\",\n\"CIPhotoEffectMono\",\n\"CIPhotoEffectNoir\",\n\"CIPhotoEffectProcess\",\n\"CIPhotoEffectTonal\",\n\"CIPhotoEffectTransfer\",\n\"CILinearToSRGBToneCurve\",\n\"CISRGBToneCurveToLinear\"\n```\n\n### UIImageView\u306bUIGestureRecognizer\u3092\u4e57\u305b\u3066\u5de6\u53f3\u306e\u30b9\u30ef\u30a4\u30d7\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u3092\u53d6\u5f97\u3059\u308b\n```swift\n\n@IBAction func imageViewDidSwipeLeft() {\n    if filterIndex == filterNameList.count - 1 {\n        filterIndex = 0\n        imageView?.image = image\n    } else {\n        filterIndex += 1\n    }\n    if filterIndex != 0 {\n        applyFilter()\n    }\n    updateCellFont()\n    scrollCollectionViewToIndex(itemIndex: filterIndex)\n}\n```\n\n### \u30e1\u30a4\u30f3\u306eImageView\u306b\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u3068\u4e0b\u306eCollectionView\u3092\u9023\u52d5\u3055\u305b\u308b\n\n```swift\n\nextension  SHViewController: UICollectionViewDataSource, UICollectionViewDelegate\n{\n    public func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {\n        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: \"cell\", for: indexPath) as! SHCollectionViewCell\n        var filteredImage = smallImage\n        if indexPath.row != 0 {\n            filteredImage = createFilteredImage(filterName: filterNameList[indexPath.row], image: smallImage!)\n        }\n\n        cell.imageView.image = filteredImage\n        cell.filterNameLabel.text = filterDisplayNameList[indexPath.row]\n        updateCellFont()\n        return cell\n    }\n\n    public func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {\n        return filterNameList.count\n    }\n\n    public func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {\n        filterIndex = indexPath.row\n        if filterIndex != 0 {\n            applyFilter()\n        } else {\n            imageView?.image = image\n        }\n        updateCellFont()\n        scrollCollectionViewToIndex(itemIndex: indexPath.item)\n    }\n}\n```\n\n### \u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u306b\u5fdc\u3058\u3066Label\u306efont-size\u3092\u5909\u3048\u308b\n\n```swift\nfunc updateCellFont() {\n    // update font of selected cell\n    if let selectedCell = collectionView?.cellForItem(at: IndexPath(row: filterIndex, section: 0)) {\n        let cell = selectedCell as! SHCollectionViewCell\n        cell.filterNameLabel.font = UIFont.boldSystemFont(ofSize: 14)\n    }\n\n    for i in 0...filterNameList.count - 1 {\n        if i != filterIndex {\n            // update nonselected cell font\n            if let unselectedCell = collectionView?.cellForItem(at: IndexPath(row: i, section: 0)) {\n                let cell = unselectedCell as! SHCollectionViewCell\n                if #available(iOS 8.2, *) {\n                    cell.filterNameLabel.font = UIFont.systemFont(ofSize: 14.0, weight: UIFontWeightThin)\n                } else {\n                    // Fallback on earlier versions\n                    cell.filterNameLabel.font = UIFont.systemFont(ofSize: 14.0)\n                }\n            }\n        }\n    }\n}\n```\n\n### \u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u306e\u5909\u66f4\u306b\u5fdc\u3058\u3066CollectionView\u3092\u52d5\u304b\u3059\n```swift\nfunc scrollCollectionViewToIndex(itemIndex: Int) {\n    let indexPath = IndexPath(item: itemIndex, section: 0)\n    self.collectionView?.scrollToItem(at: indexPath, at: .centeredHorizontally, animated: true)\n}\n```\n\n\u4e3b\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0a\u306b\u306a\u308a\u307e\u3059\u3002CIFilter\u3092\u77e5\u308b\u307e\u3067\u306f\u4f55\u304b\u96e3\u3057\u305d\u3046\u306b\u611f\u3058\u3066\u3044\u305f\u753b\u50cf\u30d5\u30a3\u30eb\u30bf\u3082\u5b9f\u969b\u306b\u4f5c\u3063\u3066\u307f\u308b\u3068\u4e00\u77ac\u3067\u3057\u305f\u3002\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5ba3\u4f1d\u306e\u4ed5\u65b9\n- [Cocoacontrols](https://www.cocoacontrols.com/)\u306b\u6295\u7a3f\u3059\u308b\u3002\uff08\u3053\u308c\u304c\u4e00\u756a\u52b9\u679c\u7684\u3067\u3057\u305f\u3002\uff09\n- Github\u306e\u30c8\u30ec\u30f3\u30c9\u306b\u8f09\u308b\u3002\uff08Cocoacontrols\u306a\u3069\u304b\u3089\u306e\u6d41\u5165\u30671\u65e550star\u307b\u3069\u4ed8\u3051\u3070\u4e0a\u4f4d\u306b\u4e0a\u304c\u3063\u3066\u304f\u308b\u306e\u3067star\u304c\u4ed8\u304d\u3084\u3059\u3044\u3067\u3059\u3002\uff09\n- awesome-ios\u306a\u3069\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306b\u8f09\u305b\u3066\u3082\u3089\u3046\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5ba3\u4f1d\u3059\u308b\u4ed6\u306e\u826f\u3044\u65b9\u6cd5\u306a\u3069\u3054\u5b58\u77e5\u306e\u65b9\u3044\u3089\u3063\u3057\u3083\u3044\u307e\u3057\u305f\u3089\u662f\u975e\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u4f59\u8ac7\n\u3061\u306a\u307f\u306b\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u30a4\u30f3\u30b9\u30bf\u30b0\u30e9\u30e0\u30e9\u30a4\u30af\u306a\u30ab\u30e1\u30e9\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u308b\u30e9\u30a4\u30d6\u30e9\u30ea[fusuma](\"https://github.com/ytakzk/Fusuma\")\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u4f5c\u308a\u307e\u3057\u305f\u3002\u300c\u30b7\u30f3\u30d7\u30eb\u3067\u3001\u7dba\u9e97\u306a\u30d5\u30a3\u30eb\u30bf\u3092\u5c0e\u5165\u3057\u305f\u3044\u3002\u300d\u305d\u3093\u306a\u30cb\u30fc\u30ba\u306b\u5fdc\u3048\u308b\u5c0f\u898f\u6a21\u306aUI\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u826f\u304f\u306a\u3044\u3001\u3053\u3093\u306a\u6a5f\u80fd\u304c\u6b32\u3057\u3044\u3001\u306a\u3069\u4f55\u304b\u3054\u610f\u898b\u304c\u3054\u3056\u3044\u307e\u3057\u305f\u3089Qiita\u3082\u3057\u304f\u306fGithub\u3069\u3061\u3089\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u306e\u3067\u662f\u975e\u3054\u6307\u6458\u304f\u3060\u3055\u3044\uff01\n", "tags": ["Swift", "iOS", "CocoaPods", "Swift3.0"]}