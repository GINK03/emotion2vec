{"context": "\n\n\u76ee\u6a19\n\nc++14\u306e\u4e26\u5217\u8a08\u7b97(openmp)\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\ng++-5\u3067\u52d5\u3051\u3070\u3088\u3044(\u4ed6\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3060\u3068\u624b\u76f4\u3057\u304c\u5fc5\u8981)\nopenmp\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u30c6\u30b9\u30c8\u3092gtest\u3067\u66f8\u304f\n\u3068\u308a\u3042\u3048\u305a\u624b\u5143\u306ePC(Ubuntu)\u3067\u52d5\u304f\u307e\u3067\u691c\u8a3c\u3059\u308b(Mac\u306a\u3069\u74b0\u5883\u304c\u9055\u3046\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093)\n\u53c2\u8003\n\n\nQiita: C++ \u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u3044\u3044\u611f\u3058\u306b\u3059\u308b\n\n\n\n\n\u5229\u7528\u3059\u308b\u30bd\u30d5\u30c8\n\ngtest-1.8\n\ngmock(gtest-1.8\u306b\u7d71\u5408\u3055\u308c\u305f\u306e\u3067\u4e0d\u8981)\ncmake\ng++-5 (c++14 and openmp)\n\n\n\u74b0\u5883\n\n\u74b0\u58831\n\n\nUbuntu 16.04\ncmake 3.5\ng++5.4 (system default)\n\n\n\u74b0\u58832\n\n\nUbuntu 14.04\ncmake 2.8\ng++5.4 (sudo apt-get install g++-5)\n\n\n\n\n\u4f7f\u3044\u65b9\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\ngit clone https://takeshi-uchitane@bitbucket.org/takeshi-uchitane/cmake_c-14_openmp_gtests.git\ncd cmake_c-14_openmp_gtests\nmkdir build\ncd build\ncmake .. # if you have another version of g++, you should set CXX=g++-5\nmake\n\n\n\u5b9f\u884c\n\nOpenMP\u3092\u5229\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30c6\u30b9\u30c8\u304c\u3067\u304d\u305f\n\n$ ./utest/tests/Foo/foo-test \nRunning main() from gtest_main.cc\n[==========] Running 1 test from 1 test case.\n[----------] Global test environment set-up.\n[----------] 1 test from Foo\n[ RUN      ] Foo.constractor\nthread 3\nthread 1\nthread thread 2\n0\n[       OK ] Foo.constractor (53 ms)\n[----------] 1 test from Foo (53 ms total)\n\n[----------] Global test environment tear-down\n[==========] 1 test from 1 test case ran. (53 ms total)\n[  PASSED  ] 1 test.\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nhttps://bitbucket.org/takeshi-uchitane/cmake_c-14_openmp_gtests\n\n\nFoo class\n\nOPM\u4e26\u5217\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u305d\u306e\u30c6\u30b9\u30c8\n\n\nsrc/Foo.cpp\n#include \"Foo.hpp\"\n#include <omp.h>\n#include <iostream>\n\nFoo::Foo() { for(unsigned int i=0u;i<4u;i++) { v.push_back(i); } }\n\nstd::vector<double> Foo::calc() {\n  std::vector<double> array(v.size());\n#pragma omp parallel for\n  for(unsigned int i=0u;i<v.size();i++) {\n    array[i]=double(v[i]);\n    std::cout << \"thread \" << omp_get_thread_num() << std::endl;\n  }\n  sort(array.begin(), array.end());\n  return std::move(array);\n}\n\n\n\nutest/tests/Foo/main.cpp\n#include <gtest/gtest.h>\n#include <gmock/gmock.h>\n\n#include \"Foo.hpp\"\n\nTEST(Foo, constractor) {\n  Foo foo;\n  EXPECT_THAT(foo.v, testing::ElementsAre(0,1,2,3));\n  EXPECT_THAT(foo.calc(), testing::ElementsAre(0.0,1.0,2.0,3.0));\n}\n\n\n\n\nCmakeLists.txt\n\nCMakeLists.txt\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7528\u3068\u30c6\u30b9\u30c8\u7528\u306e2\u3064\nOPENMP\u306e\u30d5\u30e9\u30b0(OpenMP_CXX_FLAGS)\u306f\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u524d\u306b\u898b\u3064\u3051\u3066\u304a\u304f\n\n\nCmakeLists.txt\nCMAKE_MINIMUM_REQUIRED(VERSION 2.8)\n\n#if you use special compiler, set the compiler\n#SET(CMAKE_CXX_COMPILER  \"g++-5\")\n#or\n#set option -DCMAKE_CXX_COMPILER=\"g++-5\"\n\nPROJECT(hoge CXX)\ninclude_directories(${PROJECT_SOURCE_DIR}/include)\naux_source_directory(${PROJECT_SOURCE_DIR}/src SOURCES)\n\nADD_EXECUTABLE(hoge.out main.cpp ${SOURCES})\n\nif (NOT DEFINED ${CMAKE_CXX_FLAGS})\n  SET (CMAKE_CXX_FLAGS \"-Wall -O3 -std=c++14\")\n  find_package(OpenMP)\n  if (OPENMP_FOUND)\n    set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\")\n  endif()\nendif ()\nMESSAGE( STATUS \"CMAKE_CXX_FLAGS: \" ${CMAKE_CXX_FLAGS} )\n\n#gtest\nif(NOT without-test)\n  enable_testing()\n  include(${PROJECT_SOURCE_DIR}/utest/include/gtest.cmake)\n  add_subdirectory(${PROJECT_SOURCE_DIR}/utest/tests)\nendif()\n\n\n\nutest/test/Foo/CmakeLists.txt\ncmake_minimum_required(VERSION 2.8)\n\nadd_executable(foo-test main.cpp ${SOURCES})\ntarget_link_libraries(foo-test\n  gtest\n  gtest_main\n  gmock\n  gmock_main\n  pthread\n)\nadd_test(\n  NAME foo\n  COMMAND $<TARGET_FILE:foo-test>\n  )\n\n# run with: ctest -L lib\nset_property(\n  TEST foo\n  PROPERTY LABELS lib foo\n  )\n\n\n\ngtest.cmake\n\n\u30c0\u30a6\u30f3\u30c9\u30fc\u30ed\u5148\u306eURL\u3092gtest-1.8\u7528\u306b\u5909\u66f4\ngmock\u306fgtest1.8\u304b\u3089gtest\u306b\u7d71\u5408\u3055\u308c\u305f(gmock\u3092\u5225\u9014\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044)\n\u7d71\u5408\u306b\u3088\u308ainclude\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f\n\n\n${source_dir}/googletest/include\n${source_dir}/googlemock/include\n\n\n\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210\u3055\u308c\u308b\u30d1\u30b9\u304c\u5fae\u5999(\u306a\u3093\u3067\u3053\u3093\u306a\u30d1\u30b9\u306b\u3057\u305f\u3093\u3067\u3057\u3087\u3046)\n\n\n${binary_dir}/googlemock/gtest/libgtest.a\n${binary_dir}/googlemock/gtest/libgtest_main.a\n${binary_dir}/googlemock/libgmock.a\n${binary_dir}/googlemock/libgmock_main.a\n\n\n\n\nutest/include/gtest.cmake\ncmake_minimum_required(VERSION 2.8)\n\n# Google Test settings\ninclude(ExternalProject)\n\nExternalProject_Add(\n    GoogleTest\n    URL https://github.com/google/googletest/archive/release-1.8.0.zip\n    CMAKE_ARGS -DCMAKE_CXX_COMPILER=g++-5;-DCMAKE_C_COMPILER=gcc-5\n    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/lib\n    INSTALL_COMMAND \"\"\n    LOG_DOWNLOAD ON\n    LOG_CONFIGURE ON\n    LOG_BUILD ON\n    )\n\nExternalProject_Get_Property(GoogleTest source_dir)\ninclude_directories(${source_dir}/googletest/include)\ninclude_directories(${source_dir}/googlemock/include)\n\nExternalProject_Get_Property(GoogleTest binary_dir)\nadd_library(gtest STATIC IMPORTED)\nset_property(\n    TARGET gtest\n    PROPERTY IMPORTED_LOCATION ${binary_dir}/googlemock/gtest/libgtest.a\n    )\nadd_library(gtest_main STATIC IMPORTED)\nset_property(\n    TARGET gtest_main\n    PROPERTY IMPORTED_LOCATION ${binary_dir}/googlemock/gtest/libgtest_main.a\n    )\nadd_library(gmock STATIC IMPORTED)\nset_property(\n    TARGET gmock\n    PROPERTY IMPORTED_LOCATION ${binary_dir}/googlemock/libgmock.a\n    )\nadd_library(gmock_main STATIC IMPORTED)\nset_property(\n    TARGET gmock_main\n    PROPERTY IMPORTED_LOCATION ${binary_dir}/googlemock/libgmock_main.a\n    )\n\n\n\n\n\u6240\u611f\n\n\u81ea\u5206\u306e\u30e1\u30e2\u7528\u306b\u521d\u6295\u7a3f\n\u4ee5\u4e0b\u306e\u30cb\u30fc\u30ba\u3092\u6e80\u305f\u3057\u305f\u958b\u767a\u74b0\u5883\u304c\u6b32\u3057\u304b\u3063\u305f\n\n\nc++-14\u3067\u66f8\u304d\u305f\u3044\n\u4e26\u5217\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5fc5\u8981\nTDD\u3057\u305f\u3044\ncmake\u4f7f\u3044\u305f\u3044\n\n\n\u63a2\u3057\u305f\u3051\u3069\uff0c\u4e0a\u8a18\u304c\u7d71\u5408\u3055\u308c\u3066\u3044\u308b\u958b\u767a\u74b0\u5883\u306f\u843d\u3061\u3066\u3044\u306a\u304b\u3063\u305f\n\n\n\u304d\u3063\u3068\u30cb\u30c3\u30c1\u306a\u8981\u6c42\u306a\u3093\u3060\u308d\u3046\n\u3058\u3083\u3042\uff0c\u4f5c\u308d\u3046\n\n\ngtest1.7\u3068gmock1.7\u7528\u306b\u4f5c\u3063\u3066\u3044\u305f\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9URL\u304c\u5909\u66f4\u306b\u306a\u3063\u305f\u308a\uff0c\u4ed5\u69d8\u304c\u5909\u308f\u3063\u3066\u3044\u305f\u308a\u3067\u624b\u9593\u53d6\u3063\u305f\u306e\u3067\u30e1\u30e2\u3092\u5171\u6709\n\n# \u76ee\u6a19\n- c++14\u306e\u4e26\u5217\u8a08\u7b97(openmp)\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\n- g++-5\u3067\u52d5\u3051\u3070\u3088\u3044(\u4ed6\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3060\u3068\u624b\u76f4\u3057\u304c\u5fc5\u8981)\n- openmp\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u30c6\u30b9\u30c8\u3092gtest\u3067\u66f8\u304f\n- \u3068\u308a\u3042\u3048\u305a\u624b\u5143\u306ePC(Ubuntu)\u3067\u52d5\u304f\u307e\u3067\u691c\u8a3c\u3059\u308b(Mac\u306a\u3069\u74b0\u5883\u304c\u9055\u3046\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093)\n- \u53c2\u8003\n    - [Qiita: C++ \u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u3044\u3044\u611f\u3058\u306b\u3059\u308b](http://qiita.com/janus_wel/items/4e6c12f9104f501104c7)\n\n# \u5229\u7528\u3059\u308b\u30bd\u30d5\u30c8\n- [gtest-1.8](https://github.com/google/googletest)\n- ~~[gmock](https://github.com/google/googlemock)~~(gtest-1.8\u306b\u7d71\u5408\u3055\u308c\u305f\u306e\u3067\u4e0d\u8981)\n- cmake\n- g++-5 (c++14 and openmp)\n\n## \u74b0\u5883\n- \u74b0\u58831\n    - Ubuntu 16.04\n    - cmake 3.5\n    - g++5.4 (system default)\n- \u74b0\u58832\n    - Ubuntu 14.04\n    - cmake 2.8\n    - g++5.4 (sudo apt-get install g++-5)\n\n# \u4f7f\u3044\u65b9\n\n## \u30b3\u30f3\u30d1\u30a4\u30eb\n```bash\ngit clone https://takeshi-uchitane@bitbucket.org/takeshi-uchitane/cmake_c-14_openmp_gtests.git\ncd cmake_c-14_openmp_gtests\nmkdir build\ncd build\ncmake .. # if you have another version of g++, you should set CXX=g++-5\nmake\n```\n\n## \u5b9f\u884c\n- OpenMP\u3092\u5229\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30c6\u30b9\u30c8\u304c\u3067\u304d\u305f\n\n```bash\n$ ./utest/tests/Foo/foo-test \nRunning main() from gtest_main.cc\n[==========] Running 1 test from 1 test case.\n[----------] Global test environment set-up.\n[----------] 1 test from Foo\n[ RUN      ] Foo.constractor\nthread 3\nthread 1\nthread thread 2\n0\n[       OK ] Foo.constractor (53 ms)\n[----------] 1 test from Foo (53 ms total)\n\n[----------] Global test environment tear-down\n[==========] 1 test from 1 test case ran. (53 ms total)\n[  PASSED  ] 1 test.\n```\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n- https://bitbucket.org/takeshi-uchitane/cmake_c-14_openmp_gtests\n\n## Foo class\n- OPM\u4e26\u5217\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u305d\u306e\u30c6\u30b9\u30c8\n\n```cpp:src/Foo.cpp\n#include \"Foo.hpp\"\n#include <omp.h>\n#include <iostream>\n\nFoo::Foo() { for(unsigned int i=0u;i<4u;i++) { v.push_back(i); } }\n\nstd::vector<double> Foo::calc() {\n  std::vector<double> array(v.size());\n#pragma omp parallel for\n  for(unsigned int i=0u;i<v.size();i++) {\n    array[i]=double(v[i]);\n    std::cout << \"thread \" << omp_get_thread_num() << std::endl;\n  }\n  sort(array.begin(), array.end());\n  return std::move(array);\n}\n```\n\n```cpp:utest/tests/Foo/main.cpp\n#include <gtest/gtest.h>\n#include <gmock/gmock.h>\n\n#include \"Foo.hpp\"\n\nTEST(Foo, constractor) {\n  Foo foo;\n  EXPECT_THAT(foo.v, testing::ElementsAre(0,1,2,3));\n  EXPECT_THAT(foo.calc(), testing::ElementsAre(0.0,1.0,2.0,3.0));\n}\n\n```\n\n## CmakeLists.txt\n- CMakeLists.txt\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7528\u3068\u30c6\u30b9\u30c8\u7528\u306e2\u3064\n- OPENMP\u306e\u30d5\u30e9\u30b0(OpenMP_CXX_FLAGS)\u306f\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u524d\u306b\u898b\u3064\u3051\u3066\u304a\u304f\n\n```cmake:CmakeLists.txt\nCMAKE_MINIMUM_REQUIRED(VERSION 2.8)\n\n#if you use special compiler, set the compiler\n#SET(CMAKE_CXX_COMPILER  \"g++-5\")\n#or\n#set option -DCMAKE_CXX_COMPILER=\"g++-5\"\n\nPROJECT(hoge CXX)\ninclude_directories(${PROJECT_SOURCE_DIR}/include)\naux_source_directory(${PROJECT_SOURCE_DIR}/src SOURCES)\n\nADD_EXECUTABLE(hoge.out main.cpp ${SOURCES})\n\nif (NOT DEFINED ${CMAKE_CXX_FLAGS})\n  SET (CMAKE_CXX_FLAGS \"-Wall -O3 -std=c++14\")\n  find_package(OpenMP)\n  if (OPENMP_FOUND)\n    set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\")\n  endif()\nendif ()\nMESSAGE( STATUS \"CMAKE_CXX_FLAGS: \" ${CMAKE_CXX_FLAGS} )\n\n#gtest\nif(NOT without-test)\n  enable_testing()\n  include(${PROJECT_SOURCE_DIR}/utest/include/gtest.cmake)\n  add_subdirectory(${PROJECT_SOURCE_DIR}/utest/tests)\nendif()\n```\n\n```cmake:utest/test/Foo/CmakeLists.txt\ncmake_minimum_required(VERSION 2.8)\n\nadd_executable(foo-test main.cpp ${SOURCES})\ntarget_link_libraries(foo-test\n  gtest\n  gtest_main\n  gmock\n  gmock_main\n  pthread\n)\nadd_test(\n  NAME foo\n  COMMAND $<TARGET_FILE:foo-test>\n  )\n\n# run with: ctest -L lib\nset_property(\n  TEST foo\n  PROPERTY LABELS lib foo\n  )\n```\n\n## gtest.cmake\n- \u30c0\u30a6\u30f3\u30c9\u30fc\u30ed\u5148\u306eURL\u3092gtest-1.8\u7528\u306b\u5909\u66f4\n- gmock\u306fgtest1.8\u304b\u3089gtest\u306b\u7d71\u5408\u3055\u308c\u305f(gmock\u3092\u5225\u9014\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044)\n- \u7d71\u5408\u306b\u3088\u308ainclude\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f\n    - ${source_dir}/googletest/include\n    - ${source_dir}/googlemock/include\n- \u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210\u3055\u308c\u308b\u30d1\u30b9\u304c\u5fae\u5999(\u306a\u3093\u3067\u3053\u3093\u306a\u30d1\u30b9\u306b\u3057\u305f\u3093\u3067\u3057\u3087\u3046)\n    - ${binary_dir}/googlemock/gtest/libgtest.a\n    - ${binary_dir}/googlemock/gtest/libgtest_main.a\n    - ${binary_dir}/googlemock/libgmock.a\n    - ${binary_dir}/googlemock/libgmock_main.a\n\n```cmake:utest/include/gtest.cmake\ncmake_minimum_required(VERSION 2.8)\n\n# Google Test settings\ninclude(ExternalProject)\n\nExternalProject_Add(\n    GoogleTest\n    URL https://github.com/google/googletest/archive/release-1.8.0.zip\n    CMAKE_ARGS -DCMAKE_CXX_COMPILER=g++-5;-DCMAKE_C_COMPILER=gcc-5\n    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/lib\n    INSTALL_COMMAND \"\"\n    LOG_DOWNLOAD ON\n    LOG_CONFIGURE ON\n    LOG_BUILD ON\n    )\n\nExternalProject_Get_Property(GoogleTest source_dir)\ninclude_directories(${source_dir}/googletest/include)\ninclude_directories(${source_dir}/googlemock/include)\n\nExternalProject_Get_Property(GoogleTest binary_dir)\nadd_library(gtest STATIC IMPORTED)\nset_property(\n    TARGET gtest\n    PROPERTY IMPORTED_LOCATION ${binary_dir}/googlemock/gtest/libgtest.a\n    )\nadd_library(gtest_main STATIC IMPORTED)\nset_property(\n    TARGET gtest_main\n    PROPERTY IMPORTED_LOCATION ${binary_dir}/googlemock/gtest/libgtest_main.a\n    )\nadd_library(gmock STATIC IMPORTED)\nset_property(\n    TARGET gmock\n    PROPERTY IMPORTED_LOCATION ${binary_dir}/googlemock/libgmock.a\n    )\nadd_library(gmock_main STATIC IMPORTED)\nset_property(\n    TARGET gmock_main\n    PROPERTY IMPORTED_LOCATION ${binary_dir}/googlemock/libgmock_main.a\n    )\n\n```\n\n# \u6240\u611f\n- \u81ea\u5206\u306e\u30e1\u30e2\u7528\u306b\u521d\u6295\u7a3f\n- \u4ee5\u4e0b\u306e\u30cb\u30fc\u30ba\u3092\u6e80\u305f\u3057\u305f\u958b\u767a\u74b0\u5883\u304c\u6b32\u3057\u304b\u3063\u305f\n    - c++-14\u3067\u66f8\u304d\u305f\u3044\n    - \u4e26\u5217\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5fc5\u8981\n    - TDD\u3057\u305f\u3044\n    - cmake\u4f7f\u3044\u305f\u3044\n- \u63a2\u3057\u305f\u3051\u3069\uff0c\u4e0a\u8a18\u304c\u7d71\u5408\u3055\u308c\u3066\u3044\u308b\u958b\u767a\u74b0\u5883\u306f\u843d\u3061\u3066\u3044\u306a\u304b\u3063\u305f\n    - ~~\u304d\u3063\u3068\u30cb\u30c3\u30c1\u306a\u8981\u6c42\u306a\u3093\u3060\u308d\u3046~~\n    - \u3058\u3083\u3042\uff0c\u4f5c\u308d\u3046\n- gtest1.7\u3068gmock1.7\u7528\u306b\u4f5c\u3063\u3066\u3044\u305f\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9URL\u304c\u5909\u66f4\u306b\u306a\u3063\u305f\u308a\uff0c\u4ed5\u69d8\u304c\u5909\u308f\u3063\u3066\u3044\u305f\u308a\u3067\u624b\u9593\u53d6\u3063\u305f\u306e\u3067\u30e1\u30e2\u3092\u5171\u6709\n", "tags": ["C++14", "CMake", "gtest", "OpenMP"]}