{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u3093\u306b\u3061\u306f\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u4f5c\u6210\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3067\u3059\u3002\nhttps://github.com/maosec/collet/tree/b07fe7898de210ab7c4af3f97740c283f753b760\n\u307e\u305f\u3001\u3053\u306e\u9023\u8f09\u3067\u4f5c\u6210\u3059\u308b Collet \u306f\u4ee5\u4e0b\u3067\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/maosec/collet\n\u3053\u306e\u8a18\u4e8b\u306f\n\n\u30bc\u30ed\u304b\u3089\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u3066\u307f\u305f\u3044\n\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff08\u4ee5\u4e0b\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff09\u306e\u5185\u90e8\u7684\u306a\u4ed5\u7d44\u307f\u306b\u8208\u5473\u304c\u3042\u308b\n\u65b0\u3057\u3044\u8a00\u8a9e\u3067\u3042\u308bKotlin\u3092\u4f7f\u3044\u305f\u3044\n\n\u3068\u8a00\u3046\u4eba\u3092\u5bfe\u8c61\u306b\u3001\u7c21\u6613\u30aa\u30ec\u30aa\u30ec\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u300cCollet\u300d\u3092\u5b9f\u88c5\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u7b2c\uff14\u56de\u76ee\u3067\u3059\u3002\n\u524d\u3005\u56de\u307e\u3067\u306b\u4f5c\u6210\u3057\u305f\u30c0\u30c3\u30b5\u3044HTTP\u30b5\u30fc\u30d0\u30fc\u304c\u3001\u5c11\u3057\u3060\u3051\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3063\u307d\u3044\u52d5\u4f5c\u3092\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u304a\u3053\u3068\u308f\u308a\n\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3059\u308b\u5b9f\u88c5\u306f\u6700\u4f4e\u9650\u306e\u52d5\u4f5c\u3092\u3059\u308b\u7a0b\u5ea6\u306e\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fc\u306a\u3069\u306f\u8003\u616e\u3057\u306a\u3044\u305f\u3081\u3001\u5b9f\u904b\u7528\u306a\u3069\u3067\u4f7f\u7528\u3059\u308b\u969b\u306f\u5341\u5206\u6ce8\u610f\u3057\u3066\u6539\u826f\u3057\u3066\u6539\u5584\u3057\u3066\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\uff08\u4f7f\u7528\u3059\u308b\u3068\u306f\u601d\u3048\u307e\u305b\u3093\u304c\uff09\n\n\u4eca\u56de\u306eCollet\u3078\u306e\u8ffd\u52a0\u6a5f\u80fd\n\u4eca\u56de\u306f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u5b9f\u88c5\u3057\u3066\u3001\u30d6\u30e9\u30a6\u30b6\u306b\u5165\u529b\u3055\u308c\u305fURL\u306b\u5bfe\u3057\u3066\u597d\u304d\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u5b9f\u88c5\n\n\u30bd\u30fc\u30b9\u3068\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u914d\u7f6e\n\u4eca\u56de\u306f\u30bd\u30fc\u30b9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u914d\u7f6e\u3057\u307e\u3057\u305f\u3002\n\n\nsrc/main/kotlin/app\n\n\u4ee5\u4e0b\u304c\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u7528\u3059\u308b\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\nCollet\u3067\u306f app/config \u4ee5\u4e0b\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304f\u4ed5\u69d8\u306b\u3057\u307e\u3059\u3002\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\napp/config/routes\nGET     /       Index   view\nGET     /data   Data    view    id,name\n\n\nGET\u30ea\u30af\u30a8\u30b9\u30c8 \u3067 / \u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u6642\u306b class Index \u3092\u751f\u6210\u3057\u3066\u305d\u306e view \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u8a00\u3046\u3088\u3046\u306a\u8a18\u8ff0\u3067\u3059\u3002\nid,name \u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u6307\u5b9a\u3055\u308c\u305f\u3082\u306e\u3067\u3001view \u306e\u5f15\u6570\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u306a\u3051\u308c\u3070\u5f15\u6570\u306a\u3057\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\nHttpServer.kt\n\nframework/http/HttpServer.kt\npackage framework.http\n\nimport framework.core.Routing\nimport java.io.IOException\nimport java.net.ServerSocket\nimport java.net.Socket\nimport java.net.SocketTimeoutException\nimport java.util.concurrent.Executors\n\n// \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\nfun main(args: Array<String>) {\n    HttpServer.start(9000) // \u30dd\u30fc\u30c89000\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u52d5\u4f5c\u3055\u305b\u308b\n}\n\nobject HttpServer {\n\n    private val service = Executors.newCachedThreadPool()\n    private var alive = true\n\n    fun start(port: Int) {\n\n        // \u30b5\u30fc\u30d0\u30fc\u30bd\u30b1\u30c3\u30c8\uff08\u63a5\u7d9a\u3092\u5f85\u3064\uff09\n        val server = ServerSocket(port)\n        server.soTimeout = 5 * 1000 // \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30925\u79d2\u306b\u8a2d\u5b9a\n\n        // \u7121\u9650\u30eb\u30fc\u30d7\u3057\u3066\u63a5\u7d9a\u3092\u5f85\u3064\n        while (alive) {\n\n            // \u63a5\u7d9a\u3055\u308c\u308b\n            val socket: Socket\n            try {\n                socket = server.accept()\n            } catch (e: SocketTimeoutException) {\n                continue // \u63a5\u7d9a\u3055\u308c\u306a\u3051\u308c\u3070\u3084\u308a\u76f4\u3059\n            }\n\n            // \u63a5\u7d9a\u3055\u308c\u305f\u3089\u305d\u308c\u4ee5\u964d\u306e\u51e6\u7406\u306f\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3046\n            this.service.execute {\n                try {\n                    // \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u3078\u9001\u4fe1\u3055\u308c\u305f\u5185\u5bb9\u3068\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u306e\u9001\u4fe1\u5148\u3092\u53d6\u5f97\n                    val inputStream = socket.inputStream\n                    val outputStream = socket.outputStream\n\n                    // \u30b5\u30fc\u30d0\u30fc\u306b\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u5185\u5bb9\u304b\u3089HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u751f\u6210\n                    val request = Request(inputStream)\n\n                    // \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\n                    val response = Routing.bridge(request.method.text, request.path, request.params)\n                    response.send(outputStream)\n\n                } catch (e: IOException) {\n                    e.printStackTrace()\n                } finally {\n                    try {\n                        socket.close() // \u63a5\u7d9a\u30bd\u30b1\u30c3\u30c8\u3092\u30af\u30ed\u30fc\u30ba\u3059\u308b\n                    } catch (e: IOException) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n        }\n    }\n\n    fun stop() {\n        alive = false\n    }\n}\n\n\n\u524d\u56de\u304b\u3089\u5909\u66f4\u304c\u3042\u3063\u305f\u306e\u306f\n// \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\nval response = Routing.bridge(request.method.text, request.path, request.params)\nresponse.send(outputStream)\n\n\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u7a2e\u5225\u3001URL\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u3066\u3001\u305d\u308c\u306b\u5fdc\u3058\u305f Controller \u3067\u51e6\u7406\u3092\u3057\u3066\u3082\u3089\u3063\u305f\u5f8c\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3082\u3089\u3046\u3068\u8a00\u3046\u51e6\u7406\u3067\u3059\u3002\n\nController.kt\nController \u306e\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u73fe\u5728\u306f\u4f55\u3082\u3057\u306a\u304f\u3066\u69cb\u3044\u307e\u305b\u3093\u3002\n\nframework/mvc/Controller.kt\npackage framework.mvc\n\nopen class Controller {\n}\n\n\n\nRouting.kt\n\n\u30bd\u30fc\u30b9\u5168\u4f53\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u30af\u30e9\u30b9\u306e\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\nframework/core/Routing.kt\npackage framework.core\n\nimport framework.http.Response\nimport framework.http.Status\nimport framework.mvc.Controller\nimport java.io.BufferedReader\nimport java.io.File\nimport java.io.FileInputStream\nimport java.io.InputStreamReader\nimport java.util.regex.Pattern\n\nobject Routing {\n\n    // \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9\n    private class Table(val type: String, val path: String, val name: String, val method: String, val params: Array<String>)\n\n    private val tables: Array<Table>\n\n    init {\n        // \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n        val reader = BufferedReader(InputStreamReader(FileInputStream(File(\"src/main/kotlin/app/config/routes\"))))\n\n        // \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\u3059\u308b\n        val temp = mutableListOf<Table>()\n        reader.forEachLine {\n            // 1\u884c\u3092\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u308b\n            val split = Pattern.compile(\"[\\\\s]+\").split(it).iterator()\n\n            // \u5de6\u304b\u3089\u9806\u306b\u3072\u3068\u3064\u305a\u3064\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3066\u3044\u304f\n            val type = split.next()\n            val path = split.next()\n            val name = split.next()\n            val method = split.next()\n\n            if (split.hasNext()) {\n                // \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u306e\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\n                temp.add(Table(type, path, name, method, split.next().split(\",\").toTypedArray()))\n            }\n            else {\n                temp.add(Table(type, path, name, method, arrayOf()))\n            }\n        }\n        tables = temp.toTypedArray()\n    }\n\n    fun bridge(type: String, path: String, params: Map<String, Array<String>>): Response {\n\n        this.tables.forEach {\n\n            val table = it\n\n            // HTTP\u30e1\u30bd\u30c3\u30c9\u3001URL\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6709\u7121\u304c\u4e00\u81f4\u3057\u305f\u3068\u304d\u3060\u3051\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30a2\u30af\u30bb\u30b9\u3092\u3059\u308b\n            if (table.type == type && table.path == path) {\n\n                // \u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3055\u308c\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\n                val c = Class.forName(\"app.controller.\" + it.name)\n                val controller = c.newInstance() as Controller\n                // \u30e1\u30bd\u30c3\u30c9\u306e\u578b\u3068\u5f15\u6570\u3092\u751f\u6210\u3059\u308b\n                val method = mutableListOf<Class<out Any>>()\n                val argv = mutableListOf<Any>()\n\n                // \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3092\u691c\u7d22\n                table.params.forEach {\n                    val tableParam = it\n                    params.forEach {\n                        val httpParam = it\n\n                        // \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3068HTTP\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ad\u30fc\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3060\u3051\n                        if (tableParam == httpParam.key) {\n\n                            // \u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c\u3072\u3068\u3064\u304b\u8907\u6570\u304b\u3067\u5358\u4f53\u3092\u6e21\u3059\u304b\u914d\u5217\u3092\u6e21\u3059\u304b\u5207\u308a\u5206\u3051\u308b\n                            if (httpParam.value.size == 1) {\n                                // \u8981\u7d20\u304c\u3072\u3068\u3064\u306a\u306e\u3067\u3072\u3068\u3064\u3060\u3051\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\n                                method.add(String::class.java)\n                                argv.add(httpParam.value[0])\n                            }\n                            else {\n                                // \u8981\u7d20\u304c\u8907\u6570\u306a\u306e\u3067\u914d\u5217\u3092\u6e21\u3059\n                                method.add(Array<String>::class.java)\n                                argv.add(httpParam.value)\n                            }\n                        }\n                    }\n                }\n\n                // \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\n                if (argv.size == table.params.size) {\n                    return c.getMethod(it.method, *method.toTypedArray()).invoke(controller, *argv.toTypedArray()) as Response\n                }\n            }\n        }\n\n\n        return Response(Status.NOT_FOUND)\n    }\n}\n\n\n\n\u307e\u305a\u306f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\nRouting \u30af\u30e9\u30b9\u81ea\u4f53\u306f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u5b9f\u88c5\u3067\u3001\u6700\u521d\u306b\u4f7f\u7528\u3055\u308c\u305f\u6642\u306b init \u5185\u306e\u51e6\u7406\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\u3053\u306e\u6642\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u4ed5\u69d8\u306b\u3057\u307e\u3059\u3002\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u5404\u884c\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3067\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\nprivate class Table(val type: String, val path: String, val name: String, val method: String, val params: Array<String>)\n\n\u305d\u308c\u305e\u308c\n\ntype = \u30e1\u30bd\u30c3\u30c9\u7a2e\u5225\uff08GET / POST\uff09\npath = \u30d1\u30b9\uff08URL\uff09\nname = \u5bfe\u5fdc\u3059\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30af\u30e9\u30b9\u540d\nmethod = \u5bfe\u5fdc\u3059\u308b\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\nparams = \u30d1\u30e9\u30e1\u30fc\u30bf\n\n\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u91c8\u3059\u308b\u51e6\u7406\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n// \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\nval reader = BufferedReader(InputStreamReader(FileInputStream(File(\"src/main/kotlin/app/config/routes\"))))\n\n// \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\u3059\u308b\nval temp = mutableListOf<Table>()\nreader.forEachLine {\n    // 1\u884c\u3092\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u308b\n    val split = Pattern.compile(\"[\\\\s]+\").split(it).iterator()\n\n    // \u5de6\u304b\u3089\u9806\u306b\u3072\u3068\u3064\u305a\u3064\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3066\u3044\u304f\n    val type = split.next()\n    val path = split.next()\n    val name = split.next()\n    val method = split.next()\n\n    if (split.hasNext()) {\n        // \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u306e\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\n        temp.add(Table(type, path, name, method, split.next().split(\",\").toTypedArray()))\n    }\n    else {\n        temp.add(Table(type, path, name, method, arrayOf()))\n    }\n}\ntables = temp.toTypedArray()\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u6240\u5b9a\u306e\u4f4d\u7f6e \"src/main/kotlin/app/config/routes\" \u306b\u5fc5\u305a\u5b58\u5728\u3057\u3001\u304b\u3064\u66f8\u5f0f\u306f\u6b63\u3057\u3044\u3082\u306e\u3068\u4eee\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3001\u7279\u306b\u96e3\u3057\u3044\u3068\u3053\u308d\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\nbridge \u30e1\u30bd\u30c3\u30c9\u3067URL\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u4efb\u610f\u306e Controller \u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u3060\u3057\u307e\u3059\u3002\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5229\u7528\u8005\u304c\u3069\u3093\u306a\u540d\u524d\u306e\u30af\u30e9\u30b9\u3067\u3069\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u304b\u3092\u77e5\u308a\u307e\u305b\u3093\u3002\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u8a2d\u8a08\u8005\u306f\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5229\u7528\u8005\u304c\u3069\u3093\u306a\u540d\u524d\u3067\u3069\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3082\u547c\u3073\u51fa\u3059\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\n\u3053\u308c\u3092\u5b9f\u73fe\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001Java \u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3044\u3046\u6a5f\u80fd\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306f\nClass.forName(\"\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\")\n\n\u3068\u304b\u3084\u308b\u3068\u3001\u305d\u306e\u30af\u30e9\u30b9\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u6a5f\u80fd\u3067\u3059\u3002\nJava \u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u306f Kotlin \u304b\u3089\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nCollet\u3067\u306e\u5b9f\u88c5\u3067\u8a00\u3048\u3070\n// \u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3055\u308c\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\nval c = Class.forName(\"app.controller.\" + it.name)\nval controller = c.newInstance() as Controller\n\n\u306e\u90e8\u5206\u3067\u3059\u3002\nClass.forName \u3067\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u540d\u306e\u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u3066\u3001newInstance() \u3067\u65b0\u3057\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092 new \u3057\u3066\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092 Controller \u30af\u30e9\u30b9\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u3067\u4efb\u610f\u306e Controller \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306eURL\u8a18\u8ff0\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u306eURL\u304c\u4e00\u81f4\u3057\u305f\u3068\u304d\u306b\u3060\u3051\u51e6\u7406\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306b\u3001HTTP\u30e1\u30bd\u30c3\u30c9\u3068URL\u304c\u4e00\u81f4\u3057\u3066\u3082\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u9055\u3046\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u306f\nGET     /data   Data    view    id,name\n\n\u306e id,name \u306e\u3088\u3046\u306b\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\n\u4f8b\u3048\u3070\n\nhttp://localhost:9000/data/view\n\n\u3068\n\nhttp://localhost:9000/data/view?id=5&name=mao\n\n\u3068\u3067\u3001\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u5206\u3051\u305f\u3044\u306a\u3069\u306e\u5834\u5408\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u7c21\u7565\u5316\u306e\u305f\u3081\u306b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5168\u3066 String \u3068\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u6e21\u3059\u4ed5\u69d8\u306b\u3057\u307e\u3059\u3002\n\u6539\u826f\u3059\u308b\u306a\u3089\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a18\u8ff0\u30d5\u30a1\u30a4\u30eb\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u578b\u5909\u63db\u3092\u66f8\u3051\u3066\u304b\u3089\u5bfe\u5fdc\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u3059\u308b\u3068\u304b\u3063\u3053\u3044\u3044\u3067\u3059\u306d\u3002\n\u307e\u305f\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a18\u8ff0\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u7121\u8996\u3059\u308b\u3053\u3068\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u305d\u306e\u3046\u3061\u6539\u826f\u3057\u305f\u3044\u3067\u3059\u306d\u3002\nJava \u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3044\u3046\u6a5f\u80fd\u306b\u306f\u3001\u4efb\u610f\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u6a5f\u80fd\u3082\u3042\u308a\u307e\u3059\u3002\nval c = Class.forName(\"\u30af\u30e9\u30b9\u540d\")\nval m = c.getMethod(it.method, *arrayOf(String::class.java, Int::class.java))\nm.invoke(controller, *arrayOf(\"text\", 0))\n\n\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\ngetMethod \u30e1\u30bd\u30c3\u30c9\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u5f15\u6570\u306e\u578b\u914d\u5217\u3092\u6307\u5b9a\u3057\u3066\u5bfe\u5fdc\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u53d6\u5f97\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u578b\u306e invoke \u30e1\u30bd\u30c3\u30c9\u306b\u3001\u5bfe\u8c61\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u5f15\u6570\u306b\u6e21\u3057\u305f\u3044\u5b9f\u969b\u306e\u5024\u306e\u914d\u5217\u3092\u6e21\u3059\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\nJava \u3067\u3082\u305d\u3046\u983b\u7e41\u306b\u4f7f\u7528\u3059\u308b\u6a5f\u80fd\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u3053\u308c\u3092 Kotlin \u304b\u3089\u4f7f\u7528\u3059\u308b\u306b\u306f\u3061\u3087\u3063\u3068\u30b3\u30c4\u304c\u8981\u308a\u307e\u3059\u306d\u3002\ngetMethod \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u305b\u308b\u578b\u306f\u4efb\u610f\u306e\u30af\u30e9\u30b9\u578b\u306e\u914d\u5217\u3067\u3001invoke \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u305b\u308b\u5f15\u6570\u306e\u914d\u5217\u3082\u4efb\u610f\u306e\u578b\u306e\u914d\u5217\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nCollet\u3067\u306e\u5b9f\u88c5\u3067\u8a00\u3048\u3070\n// \u30e1\u30bd\u30c3\u30c9\u306e\u578b\u3068\u5f15\u6570\u3092\u751f\u6210\u3059\u308b\nval method = mutableListOf<Class<out Any>>()\nval argv = mutableListOf<Any>()\n\n\u3067\u4efb\u610f\u306e\u5f15\u6570\u578b\u3068\u6e21\u3059\u5f15\u6570\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u66f4\u306b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3044\u3046\u306e\u306f\u540c\u3058\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u8907\u6570\u306e\u5024\u304c\u5165\u3063\u3066\u304f\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3057\u305f\u3002\n\nhttp://localhost:9000/data/view?id=5&name=mao&name=\u307e\u304a\n\n\u3068\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u5834\u5408\u306e\u3088\u3046\u306b\u3001name \u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c mao \u3068 \u307e\u304a \u3068\u3042\u308b\u5834\u5408\u306a\u3069\u3067\u3059\u306d\u3002\n\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3068\u3057\u3066\u306f\u3001\u5f15\u6570\u304c String \u578b\u306a\u306e\u304b Array \u306a\u306e\u304b\u3092\u5206\u3051\u3066\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n// \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3092\u691c\u7d22\ntable.params.forEach {\n    val tableParam = it\n    params.forEach {\n        val httpParam = it\n\n        // \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3068HTTP\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ad\u30fc\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3060\u3051\n        if (tableParam == httpParam.key) {\n\n            // \u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c\u3072\u3068\u3064\u304b\u8907\u6570\u304b\u3067\u5358\u4f53\u3092\u6e21\u3059\u304b\u914d\u5217\u3092\u6e21\u3059\u304b\u5207\u308a\u5206\u3051\u308b\n            if (httpParam.value.size == 1) {\n                // \u8981\u7d20\u304c\u3072\u3068\u3064\u306a\u306e\u3067\u3072\u3068\u3064\u3060\u3051\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\n                method.add(String::class.java)\n                argv.add(httpParam.value[0])\n            }\n            else {\n                // \u8981\u7d20\u304c\u8907\u6570\u306a\u306e\u3067\u914d\u5217\u3092\u6e21\u3059\n                method.add(Array<String>::class.java)\n                argv.add(httpParam.value)\n            }\n        }\n    }\n}\n\n\nIndex.kt\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u52d5\u4f5c\u78ba\u8a8d\u7528\u306b Controller \u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\napp/controller/Index.kt\npackage app.controller\n\nimport framework.http.Response\nimport framework.http.Status\nimport framework.mvc.Controller\n\nclass Index : Controller() {\n\n    fun view(): Response {\n        return Response(Status.OK, \"Hello Collet!\".toByteArray())\n    }\n}\n\n\n\nhttp://localhost:9000/\n\n\u3068\u30a2\u30af\u30bb\u30b9\u3057\u305f\u6642\u306b\u3001\u30d6\u30e9\u30a6\u30b6\u306b\n\nHello Collet!\n\n\u3068\u8868\u793a\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\n\nData.kt\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u3066\u3082\u3046\u307e\u304f\u3044\u304f\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\napp/controller/Data.kt\npackage app.controller\n\nimport framework.http.Response\nimport framework.http.Status\nimport framework.mvc.Controller\n\nclass Data : Controller() {\n\n    fun view(id: String, name: String): Response {\n        return Response(Status.OK, \"id = $id, name = $name\".toByteArray())\n    }\n\n    fun view(id: String, name: Array<String>): Response {\n        var body = \"id = $id\"\n        name.forEach { body += \", name = $it\" }\n        return Response(Status.OK, body.toByteArray())\n    }\n}\n\n\n\nhttp://localhost:9000/data/view?id=5&name=mao\n\n\u3068\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\u306b fun view(id: String, name: String) \u304c\u547c\u3070\u308c\u3066\n\nid = 5, name = mao\n\n\u3068\u8868\u793a\u3055\u308c\u3001\n\nhttp://localhost:9000/data/view?id=5&name=mao&name=\u307e\u304a\n\n\u3068\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\u306b fun view(id: String, name: Array<String>) \u306e\u307b\u3046\u304c\u547c\u3070\u308c\u3066\n\nid = 5, name = mao, name = \u307e\u304a\n\n\u306a\u3069\u3068\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\u6b21\u56de\u306e\u4e88\u5b9a\nView \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u8003\u3048\u3066\u304d\u307e\u3057\u3087\u3046\u3002\n# \u306f\u3058\u3081\u306b\n\n\u3053\u3093\u306b\u3061\u306f\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u4f5c\u6210\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3067\u3059\u3002\nhttps://github.com/maosec/collet/tree/b07fe7898de210ab7c4af3f97740c283f753b760\n\n\u307e\u305f\u3001\u3053\u306e\u9023\u8f09\u3067\u4f5c\u6210\u3059\u308b Collet \u306f\u4ee5\u4e0b\u3067\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/maosec/collet\n\n\u3053\u306e\u8a18\u4e8b\u306f\n\n* \u30bc\u30ed\u304b\u3089\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u3066\u307f\u305f\u3044\n* \u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff08\u4ee5\u4e0b\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff09\u306e\u5185\u90e8\u7684\u306a\u4ed5\u7d44\u307f\u306b\u8208\u5473\u304c\u3042\u308b\n* \u65b0\u3057\u3044\u8a00\u8a9e\u3067\u3042\u308bKotlin\u3092\u4f7f\u3044\u305f\u3044\n\n\u3068\u8a00\u3046\u4eba\u3092\u5bfe\u8c61\u306b\u3001\u7c21\u6613\u30aa\u30ec\u30aa\u30ec\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u300cCollet\u300d\u3092\u5b9f\u88c5\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u7b2c\uff14\u56de\u76ee\u3067\u3059\u3002\n\u524d\u3005\u56de\u307e\u3067\u306b\u4f5c\u6210\u3057\u305f\u30c0\u30c3\u30b5\u3044HTTP\u30b5\u30fc\u30d0\u30fc\u304c\u3001\u5c11\u3057\u3060\u3051\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3063\u307d\u3044\u52d5\u4f5c\u3092\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u304a\u3053\u3068\u308f\u308a\n\n\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3059\u308b\u5b9f\u88c5\u306f\u6700\u4f4e\u9650\u306e\u52d5\u4f5c\u3092\u3059\u308b\u7a0b\u5ea6\u306e\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fc\u306a\u3069\u306f\u8003\u616e\u3057\u306a\u3044\u305f\u3081\u3001\u5b9f\u904b\u7528\u306a\u3069\u3067\u4f7f\u7528\u3059\u308b\u969b\u306f\u5341\u5206\u6ce8\u610f\u3057\u3066\u6539\u826f\u3057\u3066\u6539\u5584\u3057\u3066\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\uff08\u4f7f\u7528\u3059\u308b\u3068\u306f\u601d\u3048\u307e\u305b\u3093\u304c\uff09\n\n# \u4eca\u56de\u306e**Collet**\u3078\u306e\u8ffd\u52a0\u6a5f\u80fd\n\n\u4eca\u56de\u306f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u5b9f\u88c5\u3057\u3066\u3001\u30d6\u30e9\u30a6\u30b6\u306b\u5165\u529b\u3055\u308c\u305fURL\u306b\u5bfe\u3057\u3066\u597d\u304d\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n# \u5b9f\u88c5\n## \u30bd\u30fc\u30b9\u3068\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u914d\u7f6e\n\n\u4eca\u56de\u306f\u30bd\u30fc\u30b9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u914d\u7f6e\u3057\u307e\u3057\u305f\u3002\n\n![\u7121\u984c.png](https://qiita-image-store.s3.amazonaws.com/0/154991/45d760fa-39db-4710-7ed4-d48da68efaf5.png)\n\n> src/main/kotlin/app\n\n\u4ee5\u4e0b\u304c\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u7528\u3059\u308b\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n**Collet**\u3067\u306f `app/config` \u4ee5\u4e0b\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304f\u4ed5\u69d8\u306b\u3057\u307e\u3059\u3002\n\n## \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\n```text:app/config/routes\nGET     /       Index   view\nGET     /data   Data    view    id,name\n```\n\n`GET\u30ea\u30af\u30a8\u30b9\u30c8` \u3067 `/` \u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u6642\u306b `class Index` \u3092\u751f\u6210\u3057\u3066\u305d\u306e `view` \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u8a00\u3046\u3088\u3046\u306a\u8a18\u8ff0\u3067\u3059\u3002\nid,name \u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u6307\u5b9a\u3055\u308c\u305f\u3082\u306e\u3067\u3001view \u306e\u5f15\u6570\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u306a\u3051\u308c\u3070\u5f15\u6570\u306a\u3057\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\n## HttpServer.kt\n\n```kotlin:framework/http/HttpServer.kt\npackage framework.http\n\nimport framework.core.Routing\nimport java.io.IOException\nimport java.net.ServerSocket\nimport java.net.Socket\nimport java.net.SocketTimeoutException\nimport java.util.concurrent.Executors\n\n// \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\nfun main(args: Array<String>) {\n    HttpServer.start(9000) // \u30dd\u30fc\u30c89000\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u52d5\u4f5c\u3055\u305b\u308b\n}\n\nobject HttpServer {\n\n    private val service = Executors.newCachedThreadPool()\n    private var alive = true\n\n    fun start(port: Int) {\n\n        // \u30b5\u30fc\u30d0\u30fc\u30bd\u30b1\u30c3\u30c8\uff08\u63a5\u7d9a\u3092\u5f85\u3064\uff09\n        val server = ServerSocket(port)\n        server.soTimeout = 5 * 1000 // \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30925\u79d2\u306b\u8a2d\u5b9a\n\n        // \u7121\u9650\u30eb\u30fc\u30d7\u3057\u3066\u63a5\u7d9a\u3092\u5f85\u3064\n        while (alive) {\n\n            // \u63a5\u7d9a\u3055\u308c\u308b\n            val socket: Socket\n            try {\n                socket = server.accept()\n            } catch (e: SocketTimeoutException) {\n                continue // \u63a5\u7d9a\u3055\u308c\u306a\u3051\u308c\u3070\u3084\u308a\u76f4\u3059\n            }\n\n            // \u63a5\u7d9a\u3055\u308c\u305f\u3089\u305d\u308c\u4ee5\u964d\u306e\u51e6\u7406\u306f\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3046\n            this.service.execute {\n                try {\n                    // \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u3078\u9001\u4fe1\u3055\u308c\u305f\u5185\u5bb9\u3068\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u306e\u9001\u4fe1\u5148\u3092\u53d6\u5f97\n                    val inputStream = socket.inputStream\n                    val outputStream = socket.outputStream\n\n                    // \u30b5\u30fc\u30d0\u30fc\u306b\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u5185\u5bb9\u304b\u3089HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u751f\u6210\n                    val request = Request(inputStream)\n\n                    // \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\n                    val response = Routing.bridge(request.method.text, request.path, request.params)\n                    response.send(outputStream)\n\n                } catch (e: IOException) {\n                    e.printStackTrace()\n                } finally {\n                    try {\n                        socket.close() // \u63a5\u7d9a\u30bd\u30b1\u30c3\u30c8\u3092\u30af\u30ed\u30fc\u30ba\u3059\u308b\n                    } catch (e: IOException) {\n                        e.printStackTrace()\n                    }\n                }\n            }\n        }\n    }\n\n    fun stop() {\n        alive = false\n    }\n}\n```\n\n\u524d\u56de\u304b\u3089\u5909\u66f4\u304c\u3042\u3063\u305f\u306e\u306f\n\n```kotlin\n// \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\nval response = Routing.bridge(request.method.text, request.path, request.params)\nresponse.send(outputStream)\n```\n\n\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u7a2e\u5225\u3001URL\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u3066\u3001\u305d\u308c\u306b\u5fdc\u3058\u305f Controller \u3067\u51e6\u7406\u3092\u3057\u3066\u3082\u3089\u3063\u305f\u5f8c\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3082\u3089\u3046\u3068\u8a00\u3046\u51e6\u7406\u3067\u3059\u3002\n\n## Controller.kt\n\nController \u306e\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u73fe\u5728\u306f\u4f55\u3082\u3057\u306a\u304f\u3066\u69cb\u3044\u307e\u305b\u3093\u3002\n\n```kotlin:framework/mvc/Controller.kt\npackage framework.mvc\n\nopen class Controller {\n}\n```\n\n## Routing.kt\n### \u30bd\u30fc\u30b9\u5168\u4f53\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u30af\u30e9\u30b9\u306e\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\n```kotlin:framework/core/Routing.kt\npackage framework.core\n\nimport framework.http.Response\nimport framework.http.Status\nimport framework.mvc.Controller\nimport java.io.BufferedReader\nimport java.io.File\nimport java.io.FileInputStream\nimport java.io.InputStreamReader\nimport java.util.regex.Pattern\n\nobject Routing {\n\n    // \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9\n    private class Table(val type: String, val path: String, val name: String, val method: String, val params: Array<String>)\n\n    private val tables: Array<Table>\n\n    init {\n        // \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n        val reader = BufferedReader(InputStreamReader(FileInputStream(File(\"src/main/kotlin/app/config/routes\"))))\n\n        // \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\u3059\u308b\n        val temp = mutableListOf<Table>()\n        reader.forEachLine {\n            // 1\u884c\u3092\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u308b\n            val split = Pattern.compile(\"[\\\\s]+\").split(it).iterator()\n\n            // \u5de6\u304b\u3089\u9806\u306b\u3072\u3068\u3064\u305a\u3064\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3066\u3044\u304f\n            val type = split.next()\n            val path = split.next()\n            val name = split.next()\n            val method = split.next()\n\n            if (split.hasNext()) {\n                // \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u306e\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\n                temp.add(Table(type, path, name, method, split.next().split(\",\").toTypedArray()))\n            }\n            else {\n                temp.add(Table(type, path, name, method, arrayOf()))\n            }\n        }\n        tables = temp.toTypedArray()\n    }\n\n    fun bridge(type: String, path: String, params: Map<String, Array<String>>): Response {\n\n        this.tables.forEach {\n\n            val table = it\n\n            // HTTP\u30e1\u30bd\u30c3\u30c9\u3001URL\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6709\u7121\u304c\u4e00\u81f4\u3057\u305f\u3068\u304d\u3060\u3051\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30a2\u30af\u30bb\u30b9\u3092\u3059\u308b\n            if (table.type == type && table.path == path) {\n\n                // \u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3055\u308c\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\n                val c = Class.forName(\"app.controller.\" + it.name)\n                val controller = c.newInstance() as Controller\n                // \u30e1\u30bd\u30c3\u30c9\u306e\u578b\u3068\u5f15\u6570\u3092\u751f\u6210\u3059\u308b\n                val method = mutableListOf<Class<out Any>>()\n                val argv = mutableListOf<Any>()\n\n                // \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3092\u691c\u7d22\n                table.params.forEach {\n                    val tableParam = it\n                    params.forEach {\n                        val httpParam = it\n\n                        // \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3068HTTP\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ad\u30fc\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3060\u3051\n                        if (tableParam == httpParam.key) {\n\n                            // \u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c\u3072\u3068\u3064\u304b\u8907\u6570\u304b\u3067\u5358\u4f53\u3092\u6e21\u3059\u304b\u914d\u5217\u3092\u6e21\u3059\u304b\u5207\u308a\u5206\u3051\u308b\n                            if (httpParam.value.size == 1) {\n                                // \u8981\u7d20\u304c\u3072\u3068\u3064\u306a\u306e\u3067\u3072\u3068\u3064\u3060\u3051\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\n                                method.add(String::class.java)\n                                argv.add(httpParam.value[0])\n                            }\n                            else {\n                                // \u8981\u7d20\u304c\u8907\u6570\u306a\u306e\u3067\u914d\u5217\u3092\u6e21\u3059\n                                method.add(Array<String>::class.java)\n                                argv.add(httpParam.value)\n                            }\n                        }\n                    }\n                }\n\n                // \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\n                if (argv.size == table.params.size) {\n                    return c.getMethod(it.method, *method.toTypedArray()).invoke(controller, *argv.toTypedArray()) as Response\n                }\n            }\n        }\n\n\n        return Response(Status.NOT_FOUND)\n    }\n}\n```\n\n### \u307e\u305a\u306f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n\nRouting \u30af\u30e9\u30b9\u81ea\u4f53\u306f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u5b9f\u88c5\u3067\u3001\u6700\u521d\u306b\u4f7f\u7528\u3055\u308c\u305f\u6642\u306b init \u5185\u306e\u51e6\u7406\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\u3053\u306e\u6642\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u4ed5\u69d8\u306b\u3057\u307e\u3059\u3002\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u5404\u884c\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3067\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n\n```kotlin\nprivate class Table(val type: String, val path: String, val name: String, val method: String, val params: Array<String>)\n```\n\n\u305d\u308c\u305e\u308c\n\n> type = \u30e1\u30bd\u30c3\u30c9\u7a2e\u5225\uff08GET / POST\uff09\n> path = \u30d1\u30b9\uff08URL\uff09\n> name = \u5bfe\u5fdc\u3059\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30af\u30e9\u30b9\u540d\n> method = \u5bfe\u5fdc\u3059\u308b\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\n> params = \u30d1\u30e9\u30e1\u30fc\u30bf\n\n\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u91c8\u3059\u308b\u51e6\u7406\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n```kotlin\n// \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\nval reader = BufferedReader(InputStreamReader(FileInputStream(File(\"src/main/kotlin/app/config/routes\"))))\n\n// \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\u3059\u308b\nval temp = mutableListOf<Table>()\nreader.forEachLine {\n    // 1\u884c\u3092\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u308b\n    val split = Pattern.compile(\"[\\\\s]+\").split(it).iterator()\n\n    // \u5de6\u304b\u3089\u9806\u306b\u3072\u3068\u3064\u305a\u3064\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3066\u3044\u304f\n    val type = split.next()\n    val path = split.next()\n    val name = split.next()\n    val method = split.next()\n\n    if (split.hasNext()) {\n        // \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u306e\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\n        temp.add(Table(type, path, name, method, split.next().split(\",\").toTypedArray()))\n    }\n    else {\n        temp.add(Table(type, path, name, method, arrayOf()))\n    }\n}\ntables = temp.toTypedArray()\n```\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u6240\u5b9a\u306e\u4f4d\u7f6e `\"src/main/kotlin/app/config/routes\"` \u306b\u5fc5\u305a\u5b58\u5728\u3057\u3001\u304b\u3064\u66f8\u5f0f\u306f\u6b63\u3057\u3044\u3082\u306e\u3068\u4eee\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3001\u7279\u306b\u96e3\u3057\u3044\u3068\u3053\u308d\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n### \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\n\nbridge \u30e1\u30bd\u30c3\u30c9\u3067URL\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u4efb\u610f\u306e Controller \u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u3060\u3057\u307e\u3059\u3002\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5229\u7528\u8005\u304c\u3069\u3093\u306a\u540d\u524d\u306e\u30af\u30e9\u30b9\u3067\u3069\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u304b\u3092\u77e5\u308a\u307e\u305b\u3093\u3002\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u8a2d\u8a08\u8005\u306f\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5229\u7528\u8005\u304c\u3069\u3093\u306a\u540d\u524d\u3067\u3069\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3082\u547c\u3073\u51fa\u3059\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\n\n\u3053\u308c\u3092\u5b9f\u73fe\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001Java \u306e**\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3**\u3068\u3044\u3046\u6a5f\u80fd\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306f\n\n```kotlin\nClass.forName(\"\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\")\n```\n\n\u3068\u304b\u3084\u308b\u3068\u3001\u305d\u306e\u30af\u30e9\u30b9\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\nJava \u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u306f Kotlin \u304b\u3089\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n**Collet**\u3067\u306e\u5b9f\u88c5\u3067\u8a00\u3048\u3070\n\n```kotlin\n// \u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3055\u308c\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\nval c = Class.forName(\"app.controller.\" + it.name)\nval controller = c.newInstance() as Controller\n```\n\n\u306e\u90e8\u5206\u3067\u3059\u3002\nClass.forName \u3067\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u540d\u306e\u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u3066\u3001newInstance() \u3067\u65b0\u3057\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092 new \u3057\u3066\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092 Controller \u30af\u30e9\u30b9\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u3067\u4efb\u610f\u306e Controller \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306eURL\u8a18\u8ff0\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u306eURL\u304c\u4e00\u81f4\u3057\u305f\u3068\u304d\u306b\u3060\u3051\u51e6\u7406\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306b\u3001HTTP\u30e1\u30bd\u30c3\u30c9\u3068URL\u304c\u4e00\u81f4\u3057\u3066\u3082\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u9055\u3046\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u306f\n\n```text\nGET     /data   Data    view    id,name\n```\n\n\u306e `id,name` \u306e\u3088\u3046\u306b\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\n\u4f8b\u3048\u3070\n\n> http://localhost:9000/data/view\n\n\u3068\n\n> http://localhost:9000/data/view?id=5&name=mao\n\n\u3068\u3067\u3001\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u5206\u3051\u305f\u3044\u306a\u3069\u306e\u5834\u5408\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u7c21\u7565\u5316\u306e\u305f\u3081\u306b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5168\u3066 String \u3068\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u6e21\u3059\u4ed5\u69d8\u306b\u3057\u307e\u3059\u3002\n\u6539\u826f\u3059\u308b\u306a\u3089\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a18\u8ff0\u30d5\u30a1\u30a4\u30eb\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u578b\u5909\u63db\u3092\u66f8\u3051\u3066\u304b\u3089\u5bfe\u5fdc\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u3059\u308b\u3068\u304b\u3063\u3053\u3044\u3044\u3067\u3059\u306d\u3002\n\n\u307e\u305f\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a18\u8ff0\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u7121\u8996\u3059\u308b\u3053\u3068\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u305d\u306e\u3046\u3061\u6539\u826f\u3057\u305f\u3044\u3067\u3059\u306d\u3002\n\nJava \u306e**\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3**\u3068\u3044\u3046\u6a5f\u80fd\u306b\u306f\u3001\u4efb\u610f\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u6a5f\u80fd\u3082\u3042\u308a\u307e\u3059\u3002\n\n```kotlin\nval c = Class.forName(\"\u30af\u30e9\u30b9\u540d\")\nval m = c.getMethod(it.method, *arrayOf(String::class.java, Int::class.java))\nm.invoke(controller, *arrayOf(\"text\", 0))\n```\n\n\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\ngetMethod \u30e1\u30bd\u30c3\u30c9\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u5f15\u6570\u306e\u578b\u914d\u5217\u3092\u6307\u5b9a\u3057\u3066\u5bfe\u5fdc\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u53d6\u5f97\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u578b\u306e invoke \u30e1\u30bd\u30c3\u30c9\u306b\u3001\u5bfe\u8c61\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u5f15\u6570\u306b\u6e21\u3057\u305f\u3044\u5b9f\u969b\u306e\u5024\u306e\u914d\u5217\u3092\u6e21\u3059\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\nJava \u3067\u3082\u305d\u3046\u983b\u7e41\u306b\u4f7f\u7528\u3059\u308b\u6a5f\u80fd\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u3053\u308c\u3092 Kotlin \u304b\u3089\u4f7f\u7528\u3059\u308b\u306b\u306f\u3061\u3087\u3063\u3068\u30b3\u30c4\u304c\u8981\u308a\u307e\u3059\u306d\u3002\ngetMethod \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u305b\u308b\u578b\u306f\u4efb\u610f\u306e\u30af\u30e9\u30b9\u578b\u306e\u914d\u5217\u3067\u3001invoke \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u305b\u308b\u5f15\u6570\u306e\u914d\u5217\u3082\u4efb\u610f\u306e\u578b\u306e\u914d\u5217\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n**Collet**\u3067\u306e\u5b9f\u88c5\u3067\u8a00\u3048\u3070\n\n```kotlin\n// \u30e1\u30bd\u30c3\u30c9\u306e\u578b\u3068\u5f15\u6570\u3092\u751f\u6210\u3059\u308b\nval method = mutableListOf<Class<out Any>>()\nval argv = mutableListOf<Any>()\n```\n\n\u3067\u4efb\u610f\u306e\u5f15\u6570\u578b\u3068\u6e21\u3059\u5f15\u6570\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u66f4\u306b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3044\u3046\u306e\u306f\u540c\u3058\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u8907\u6570\u306e\u5024\u304c\u5165\u3063\u3066\u304f\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3057\u305f\u3002\n\n> http://localhost:9000/data/view?id=5&name=mao&name=\u307e\u304a\n\n\u3068\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u5834\u5408\u306e\u3088\u3046\u306b\u3001name \u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c mao \u3068 \u307e\u304a \u3068\u3042\u308b\u5834\u5408\u306a\u3069\u3067\u3059\u306d\u3002\n\n\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3068\u3057\u3066\u306f\u3001\u5f15\u6570\u304c String \u578b\u306a\u306e\u304b Array<String> \u306a\u306e\u304b\u3092\u5206\u3051\u3066\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n```kotlin\n// \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3092\u691c\u7d22\ntable.params.forEach {\n    val tableParam = it\n    params.forEach {\n        val httpParam = it\n\n        // \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3068HTTP\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ad\u30fc\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3060\u3051\n        if (tableParam == httpParam.key) {\n\n            // \u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c\u3072\u3068\u3064\u304b\u8907\u6570\u304b\u3067\u5358\u4f53\u3092\u6e21\u3059\u304b\u914d\u5217\u3092\u6e21\u3059\u304b\u5207\u308a\u5206\u3051\u308b\n            if (httpParam.value.size == 1) {\n                // \u8981\u7d20\u304c\u3072\u3068\u3064\u306a\u306e\u3067\u3072\u3068\u3064\u3060\u3051\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\n                method.add(String::class.java)\n                argv.add(httpParam.value[0])\n            }\n            else {\n                // \u8981\u7d20\u304c\u8907\u6570\u306a\u306e\u3067\u914d\u5217\u3092\u6e21\u3059\n                method.add(Array<String>::class.java)\n                argv.add(httpParam.value)\n            }\n        }\n    }\n}\n```\n\n## Index.kt\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u52d5\u4f5c\u78ba\u8a8d\u7528\u306b Controller \u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```kotlin:app/controller/Index.kt\npackage app.controller\n\nimport framework.http.Response\nimport framework.http.Status\nimport framework.mvc.Controller\n\nclass Index : Controller() {\n\n    fun view(): Response {\n        return Response(Status.OK, \"Hello Collet!\".toByteArray())\n    }\n}\n```\n\n> http://localhost:9000/\n\n\u3068\u30a2\u30af\u30bb\u30b9\u3057\u305f\u6642\u306b\u3001\u30d6\u30e9\u30a6\u30b6\u306b\n\n> Hello Collet!\n\n\u3068\u8868\u793a\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\n\n## Data.kt\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u3066\u3082\u3046\u307e\u304f\u3044\u304f\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n```kotlin:app/controller/Data.kt\npackage app.controller\n\nimport framework.http.Response\nimport framework.http.Status\nimport framework.mvc.Controller\n\nclass Data : Controller() {\n\n    fun view(id: String, name: String): Response {\n        return Response(Status.OK, \"id = $id, name = $name\".toByteArray())\n    }\n\n    fun view(id: String, name: Array<String>): Response {\n        var body = \"id = $id\"\n        name.forEach { body += \", name = $it\" }\n        return Response(Status.OK, body.toByteArray())\n    }\n}\n```\n\n> http://localhost:9000/data/view?id=5&name=mao\n\n\u3068\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\u306b `fun view(id: String, name: String)` \u304c\u547c\u3070\u308c\u3066\n\n> id = 5, name = mao\n\n\u3068\u8868\u793a\u3055\u308c\u3001\n\n> http://localhost:9000/data/view?id=5&name=mao&name=\u307e\u304a\n\n\u3068\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\u306b `fun view(id: String, name: Array<String>)` \u306e\u307b\u3046\u304c\u547c\u3070\u308c\u3066\n\n> id = 5, name = mao, name = \u307e\u304a\n\n\u306a\u3069\u3068\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n# \u6b21\u56de\u306e\u4e88\u5b9a\n\nView \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u8003\u3048\u3066\u304d\u307e\u3057\u3087\u3046\u3002\n", "tags": ["Kotlin", "\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af", "HTTP", "\u30b5\u30fc\u30d0\u30fc", "Java"]}