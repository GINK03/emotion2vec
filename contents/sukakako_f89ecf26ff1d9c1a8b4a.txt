{"context": "\n\nMattermost\n\nSlack\u30e9\u30a4\u30af\u306a\u30c1\u30e3\u30c3\u30c8\u3002\n\u3053\u306e\u3042\u305f\u308a\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u3002\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 3.4 \u3092\u5229\u7528\u3002\n\u30b5\u30af\u3063\u3068bot\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\nIncoming Webhook\nhttps://docs.mattermost.com/developer/webhooks-incoming.html\n\u8ffd\u52a0\u3057\u305f\u30d5\u30c3\u30af\u306eURL\u306b\u5bfe\u3057\u3066\u4f55\u304b\u30dd\u30b9\u30c8\u3059\u308b\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n\u30b3\u30fc\u30c9\n\u3053\u306e\u307e\u307e\u3084\u308b\u3068\u3067\u304d\u308b\nhttp://qiita.com/tbpgr/items/b7529021c384c3f3bd89\nrequire 'net/http'\nrequire 'uri'\nrequire 'json'\n\n# send\nclass SlackWraper\n  def self.post(text)\n   # \u30dd\u30b9\u30c8\n   #data = { \"text\" => text }\n   # \u30c1\u30e3\u30f3\u30cd\u30eb\n   #data = { \"channel\" => \"off-topic\" , \"text\" => text }\n   # \u30e6\u30fc\u30b6\u30fc\n   #data = { \"username\" => \"Hoge\", \"text\" => text }\n   request_url = 'http://IP\u30a2\u30c9\u30ec\u30b9:8065/hooks/\u30ad\u30fc' # Incoming Webhook\u3092\u8ffd\u52a0\u3057\u305f\u5f8c\u78ba\u8a8d\u3067\u304d\u308bURL\n   uri = URI.parse(request_url)\n   Net::HTTP.post_form(uri, {\"payload\" => data.to_json})  \n end\nend\nSlackWraper.post(\"=Message=\")\n\n\n\ndata = { \"text\" => \"\u3042\u3044\u3046\u3048\u304a\" }\ndata = { \"channel\" => \"off-topic\", \"text\" => \"\u3042\u3044\u3046\u3048\u304a\" }\ndata = { \"username\" => \"Hoge\", \"text\" => \"\u3042\u3044\u3046\u3048\u304a\" }\n{ \"payload\" => data.to_json } \u3092\u304a\u304f\u308c\u3070\u53cd\u5fdc\u3057\u3066\u304f\u308c\u308b\u3002\n\nOutcoming Webhook\n\u7c21\u5358\u306b\u3084\u308b\u306a\u3089\u4ee5\u4e0b\u306e\u901a\u308a\nhttp://sbkro.hatenablog.jp/entry/20120114/1326553671\nrequire 'webrick'\n\n# \u30b5\u30f3\u30d7\u30eb\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\nclass ServletAction < WEBrick::HTTPServlet::AbstractServlet\n\n    def do_POST (req, res)\n        # \u3053\u306e\u3042\u305f\u308a\u306b\u51e6\u7406\u304c\u6765\u308b\u306e\u3067\u3084\u308a\u305f\u3044\u3088\u3046\u306b\u3084\u308b\n        res.body = req.body\n        print(req.body)\n    end\nend\n\n# \u30b5\u30fc\u30d0\u8d77\u52d5\u51e6\u7406\nsrv = WEBrick::HTTPServer.new({\n    :DocumentRoot => '.',\n    :BindAddress => 'IP\u30a2\u30c9\u30ec\u30b9',\n    :Port => 9999})\n\nsrv.mount('/param', ServletAction)\n\ntrap(\"INT\"){ srv.shutdown }\nsrv.start\n\n\n\u30dd\u30b9\u30c8\u3055\u308c\u308b\u5185\u5bb9(Mattermost\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308b\u5185\u5bb9)\n\n\n\n\u540d\u524d\n\u5024\n\n\n\n\nchannel_id\n\u30cf\u30c3\u30b7\u30e5\n\n\nchannel_name\ntown-square\n\n\npost_id\n\u30cf\u30c3\u30b7\u30e5\n\n\nteam_domain\n\u30c1\u30fc\u30e0\u540d\n\n\nteam_id\n\u30cf\u30c3\u30b7\u30e5\n\n\ntext\n%E3T81%82 \u203b(\u3042)\n\n\ntimestamp\n1476320873\n\n\ntoken\n\u30cf\u30c3\u30b7\u30e5\n\n\ntrigger_word\n%E3%81%82 \u203b(\u3042)\n\n\nuser_id\n\u30cf\u30c3\u30b7\u30e5\n\n\nuser_name\n???\n\n\n\nContesnt-Type\u3092application/json\u306b\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067POST\u3055\u308c\u3066\u304f\u308b\n{\n    \"channel_id\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"channel_name\":\"town-square\",\n    \"post_id\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"team_domain\":\"\u30c1\u30fc\u30e0\u540d\",\n    \"team_id\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"text\":\"%E3%81%82\",\n    \"timestamp\":\"1476320873\",\n    \"token\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"trigger_word\":\"%E3%81%82\",\n    \"user_id\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"user_name\":\"????\",\n}\n\n# Mattermost\n![mattermost](https://www.mattermost.org/wp-content/uploads/2015/09/20160315_v210.png)\n\nSlack\u30e9\u30a4\u30af\u306a\u30c1\u30e3\u30c3\u30c8\u3002\n[\u3053\u306e\u3042\u305f\u308a\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u3002](http://qiita.com/terukizm/items/4a4016d8ec5a21856e4f)\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306f **3.4** \u3092\u5229\u7528\u3002\n\u30b5\u30af\u3063\u3068bot\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\n# Incoming Webhook\nhttps://docs.mattermost.com/developer/webhooks-incoming.html\n\n\u8ffd\u52a0\u3057\u305f\u30d5\u30c3\u30af\u306eURL\u306b\u5bfe\u3057\u3066\u4f55\u304b\u30dd\u30b9\u30c8\u3059\u308b\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n## \u30b3\u30fc\u30c9\n\u3053\u306e\u307e\u307e\u3084\u308b\u3068\u3067\u304d\u308b\nhttp://qiita.com/tbpgr/items/b7529021c384c3f3bd89\n\n```rb\nrequire 'net/http'\nrequire 'uri'\nrequire 'json'\n\n# send\nclass SlackWraper\n  def self.post(text)\n   # \u30dd\u30b9\u30c8\n   #data = { \"text\" => text }\n   # \u30c1\u30e3\u30f3\u30cd\u30eb\n   #data = { \"channel\" => \"off-topic\" , \"text\" => text }\n   # \u30e6\u30fc\u30b6\u30fc\n   #data = { \"username\" => \"Hoge\", \"text\" => text }\n   request_url = 'http://IP\u30a2\u30c9\u30ec\u30b9:8065/hooks/\u30ad\u30fc' # Incoming Webhook\u3092\u8ffd\u52a0\u3057\u305f\u5f8c\u78ba\u8a8d\u3067\u304d\u308bURL\n   uri = URI.parse(request_url)\n   Net::HTTP.post_form(uri, {\"payload\" => data.to_json})  \n end\nend\nSlackWraper.post(\"=Message=\")\n\n\n```\n\ndata = { \"text\" => \"\u3042\u3044\u3046\u3048\u304a\" }\ndata = { \"channel\" => \"off-topic\", \"text\" => \"\u3042\u3044\u3046\u3048\u304a\" }\ndata = { \"username\" => \"Hoge\", \"text\" => \"\u3042\u3044\u3046\u3048\u304a\" }\n\n{ \"payload\" => data.to_json } \u3092\u304a\u304f\u308c\u3070\u53cd\u5fdc\u3057\u3066\u304f\u308c\u308b\u3002\n\n# Outcoming Webhook\n\n\u7c21\u5358\u306b\u3084\u308b\u306a\u3089\u4ee5\u4e0b\u306e\u901a\u308a\nhttp://sbkro.hatenablog.jp/entry/20120114/1326553671\n\n```rb\nrequire 'webrick'\n\n# \u30b5\u30f3\u30d7\u30eb\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\nclass ServletAction < WEBrick::HTTPServlet::AbstractServlet\n\n    def do_POST (req, res)\n        # \u3053\u306e\u3042\u305f\u308a\u306b\u51e6\u7406\u304c\u6765\u308b\u306e\u3067\u3084\u308a\u305f\u3044\u3088\u3046\u306b\u3084\u308b\n        res.body = req.body\n        print(req.body)\n    end\nend\n\n# \u30b5\u30fc\u30d0\u8d77\u52d5\u51e6\u7406\nsrv = WEBrick::HTTPServer.new({\n    :DocumentRoot => '.',\n    :BindAddress => 'IP\u30a2\u30c9\u30ec\u30b9',\n    :Port => 9999})\n\nsrv.mount('/param', ServletAction)\n\ntrap(\"INT\"){ srv.shutdown }\nsrv.start\n```\n\n## \u30dd\u30b9\u30c8\u3055\u308c\u308b\u5185\u5bb9(Mattermost\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308b\u5185\u5bb9)\n| \u540d\u524d         | \u5024               |\n|:------------:|:---------------:|\n| channel_id   | \u30cf\u30c3\u30b7\u30e5         |\n| channel_name | town-square     |\n| post_id      | \u30cf\u30c3\u30b7\u30e5         |\n| team_domain  | \u30c1\u30fc\u30e0\u540d         |\n| team_id      | \u30cf\u30c3\u30b7\u30e5         |\n| text         | %E3T81%82 \u203b(\u3042) |\n| timestamp    | 1476320873       |\n| token        | \u30cf\u30c3\u30b7\u30e5          |\n| trigger_word | %E3%81%82 \u203b(\u3042) |\n| user_id      | \u30cf\u30c3\u30b7\u30e5          |\n| user_name    | ???              |\n\nContesnt-Type\u3092application/json\u306b\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067POST\u3055\u308c\u3066\u304f\u308b\n\n```json\n{\n    \"channel_id\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"channel_name\":\"town-square\",\n    \"post_id\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"team_domain\":\"\u30c1\u30fc\u30e0\u540d\",\n    \"team_id\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"text\":\"%E3%81%82\",\n    \"timestamp\":\"1476320873\",\n    \"token\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"trigger_word\":\"%E3%81%82\",\n    \"user_id\":\"\u30cf\u30c3\u30b7\u30e5\",\n    \"user_name\":\"????\",\n}\n```\n", "tags": ["Mattermost", "Ruby"]}