{"context": " More than 1 year has passed since last update.cocos2d-x\u306fv2.0\u3068v3.0\u3067\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306a\u3069\u306e\u30a4\u30d9\u30f3\u30c8\u53d6\u5f97\u65b9\u6cd5\u304c\u5909\u66f4\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u6210\u3057\u306a\u304c\u3089\u89e3\u8aac\u3057\u307e\u3059\u3002\n\u8a73\u7d30\u306f\u672c\u5bb6\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u5143\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30bd\u30fc\u30b9\u304b\u3089\u51fa\u767a\u3057\u3066\u3001\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n\nHelloWorld\u30af\u30e9\u30b9\u3092 MoleScene\u30af\u30e9\u30b9\u306b\u5909\u66f4\u3057\u307e\u3059\u3002(\u5fc5\u305a\u3057\u3082\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n\nHelloWorldScene.h\u3092 MoleScene.h\u306b\u3001HelloWorldScene.cpp\u3092 MoleScene.cpp\u306b\u5909\u66f4\u3057\u307e\u3059\u3002(\u5fc5\u305a\u3057\u3082\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n\u30bd\u30fc\u30b9\u306e\u53ef\u8aad\u6027\u3092\u4e0a\u3052\u308b\u305f\u3081\u3001using\u53e5\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002(\u5fc5\u305a\u3057\u3082\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n\nusing namespace cocos2d;\n\n\ncocos2d-x\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u308b\u30a2\u30a4\u30b3\u30f3( Icon.png)\u3092Resources\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u30b9\u30d7\u30e9\u30c3\u30b7\u30e5\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30a4\u30b3\u30f3\u3092\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u30b9\u30d7\u30e9\u30a4\u30c8\u3068\u753b\u9762\u30b5\u30a4\u30ba\u304c\u30af\u30e9\u30b9\u5168\u4f53\u3067\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u30e1\u30f3\u30d0\u30fc\u5909\u6570\u306b\u3057\u307e\u3059\u3002\n\n\nMoleScene.h\n#ifndef __MOLE_SCENE_H__\n#define __MOLE_SCENE_H__\n\n#include <CCGeometry.h>\n#include \"cocos2d.h\"\n\nusing namespace cocos2d;\n\nclass MoleScene : public cocos2d::Layer\n{\nprivate:\n    // \u753b\u9762\u30b5\u30a4\u30ba\n    Size visibleSize;\n\n    // \u30b9\u30d7\u30e9\u30a4\u30c8\n    cocos2d::Sprite* sprite;\n\npublic:\n    // C++\u306b\u306fID\u304c\u306a\u3044\u306e\u3067\u3001\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u8fd4\u3059\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\u3002\n    static Scene* createScene();\n\n    // init\u30e1\u30bd\u30c3\u30c9\u306f\u3001cocos2d-iphone\u3067\u306fID\u3092\u8fd4\u3059\u304c\u3001cocos2d-x\u3067\u306fbool\u3092\u8fd4\u3059\u3068\u3044\u3046\u9055\u3044\u304c\u3042\u308b\u3002\n    virtual bool init();  \n    // a selector callback\n    // \u30bb\u30ec\u30af\u30bf\u306e\u30b3\u30fc\u30b9\u30d0\u30c3\u30af\n    void menuCloseCallback(cocos2d::Ref* pSender);\n\n    // static create()\u95a2\u6570\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u5b9f\u88c5\n    CREATE_FUNC(MoleScene);\n\n    // \u6b21\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u3002\n    Point* getNextPosition();\n};\n\n#endif\n// __MOLE_SCENE_H__\n\n\n\nMoleScene.cpp\n/*\n * Sample2: \u7c21\u5358\u306a\u3082\u3050\u3089\u305f\u305f\u304d\u98a8\u30b5\u30f3\u30d7\u30eb\u3002\n *\n * Copyright (C) Takao WADA.\n */\n#include \"MoleScene.h\"\n\nUSING_NS_CC;\n\n/**\n *  \u30b7\u30fc\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3002\n *\n *  @return \u30b7\u30fc\u30f3\n */\nScene* MoleScene::createScene()\n{\n    // 'scene' \u306f autorelease \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    auto scene = Scene::create();\n\n    // 'layer' \u306f autorelease \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    auto layer = MoleScene::create();\n\n    // \u30ec\u30a4\u30e4\u30fc\u3092\u30b7\u30fc\u30f3\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n    scene->addChild(layer);\n\n    // \u30b7\u30fc\u30f3\u3092\u8fd4\u3059\u3002\n    return scene;\n}\n\n/**\n *  \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n *\n *  @return \u6210\u529f\u3057\u305f\u3089true\n */\nbool MoleScene::init()\n{\n    //////////////////////////////\n    // 1. \u89aa\u30af\u30e9\u30b9\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n    if ( !Layer::init() )\n    {\n        return false;\n    }\n\n    // \u753b\u9762\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\u3002\n    visibleSize = Director::getInstance()->getVisibleSize();\n    // \u753b\u9762\u306e\u539f\u70b9\u3092\u53d6\u5f97\u3059\u308b\u3002\n    Point origin = Director::getInstance()->getVisibleOrigin();\n\n    /////////////////////////////\n    // 2. \u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u7d42\u4e86\u3059\u308b\u201dX\u201d\u753b\u50cf\u4ed8\u304d\u306e\u30e1\u30cb\u30e5\u30fc\u9805\u76ee\u3092\u8ffd\u52a0\u3059\u308b\u3002\u3053\u308c\u306f\u5909\u66f4\u3057\u3066\u3082\u3088\u3044\u3002\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3059\u308b\"close\"\u30a2\u30a4\u30b3\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3002\u3053\u308c\u306f autorelease \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n    auto closeItem = MenuItemImage::create(\n                                           \"CloseNormal.png\",\n                                           \"CloseSelected.png\",\n                                           CC_CALLBACK_1(MoleScene::menuCloseCallback, this));\n\n    closeItem->setPosition(Point(origin.x + visibleSize.width - closeItem->getContentSize().width/2 ,\n                                 origin.y + closeItem->getContentSize().height/2));\n\n    // \u30e1\u30cb\u30e5\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3002\u3053\u308c\u306f autorelease \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n    auto menu = Menu::create(closeItem, NULL);\n    // \u30e1\u30cb\u30e5\u30fc\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n    menu->setPosition(Point::ZERO);\n    // \u30e1\u30cb\u30e5\u30fc\u3092\u5b50\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n    this->addChild(menu, 1);\n\n    /////////////////////////////\n    // 3. \u72ec\u81ea\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3002\n    this->setTouchMode(Touch::DispatchMode::ONE_BY_ONE);\n\n    // \u30e9\u30d9\u30eb\u3092\u4f5c\u6210\u3057\u3001\u521d\u671f\u5316\u3059\u308b\u3002\n    auto label = LabelTTF::create(\"whack a mole sample\", \"Arial\", 24);\n\n    // \u753b\u9762\u306e\u4e2d\u592e\u306b\u30e9\u30d9\u30eb\u3092\u4f4d\u7f6e\u3065\u3051\u308b\u3002\n    label->setPosition(Point(origin.x + visibleSize.width/2,\n                             origin.y + visibleSize.height - label->getContentSize().height));\n\n    // \u30e9\u30d9\u30eb\u3092\u30ec\u30a4\u30e4\u30fc\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n    this->addChild(label, 1);\n\n    // cocos\u30a2\u30a4\u30b3\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3002\n    sprite = Sprite::create(\"Icon.png\");\n\n    // \u30b9\u30d7\u30e9\u30a4\u30c8\u3092\u753b\u9762\u306e\u4e2d\u592e\u306b\u4f4d\u7f6e\u3065\u3051\u308b\u3002\n    sprite->setPosition(Point(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));\n\n    // \u30b9\u30d7\u30e9\u30a4\u30c8\u3092\u30ec\u30a4\u30e4\u30fc\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n    this->addChild(sprite, 0);\n\n    // \u30b7\u30f3\u30b0\u30eb\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3002\n    auto listener1 = EventListenerTouchOneByOne::create();\n    // \u30b9\u30ef\u30ed\u30fc\u30bf\u30c3\u30c1\u30e2\u30fc\u30c9\u306b\u3059\u308b\u3068onTouchBegan\u30e1\u30bd\u30c3\u30c9\u306f\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306f\u4ed6\u3067\u306f\u4f7f\u308f\u308c\u306a\u3044\u3002\n    listener1->setSwallowTouches(true);\n\n    // onTouchBegan\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u5b9f\u88c5\u306e\u30e9\u30e0\u30c0\u5f0f\u306e\u4f8b\n    listener1->onTouchBegan = [](Touch* touch, Event* event) {\n        // event->getCurrentTarget() \u306f\u3001\u30ea\u30b9\u30ca\u30fc\u306esceneGraphPriority\u306e\u512a\u5148\u9806\u306b\u5bfe\u8c61\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3002\n        auto target = static_cast<Sprite*>(event->getCurrentTarget());\n\n        // \u30dc\u30bf\u30f3\u306b\u5bfe\u3059\u308b\u76f8\u5bfe\u7684\u306a\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u3002\n        Point locationInNode = target->convertToNodeSpace(touch->getLocation());\n        // \u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\u3002\n        Size s = target->getContentSize();\n        // \u30b3\u30f3\u30c6\u30f3\u30c4\u77e9\u5f62\u3092\u4f5c\u6210\u3059\u308b\u3002\n        Rect rect = Rect(0, 0, s.width, s.height);\n\n        // \u30af\u30ea\u30c3\u30af\u30a8\u30ea\u30a2\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n        if (rect.containsPoint(locationInNode))\n        {\n            log(\"sprite began... x = %f, y = %f\", locationInNode.x, locationInNode.y);\n            // \u4e0d\u900f\u660e\u5ea6\u3092\u5909\u66f4\u3059\u308b\u3002\n            target->setOpacity(180);\n            return true;\n        }\n        return false;\n    };\n\n    // \u30bf\u30c3\u30c1\u304c\u79fb\u52d5\u3057\u305f\u5834\u5408\n    listener1->onTouchMoved = [](Touch* touch, Event* event) {\n        // \u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n        // auto target = static_cast<Sprite*>(event->getCurrentTarget());\n        // \u3053\u3053\u306b\u79fb\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\u3092\u66f8\u304f\u3002touch->getDelta()\u3067\u79fb\u52d5\u91cf\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n    };\n\n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u304c\u7d42\u4e86\u3057\u305f\u5834\u5408\n    listener1->onTouchEnded = [=](Touch* touch, Event* event) {\n        // \u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n        auto target = static_cast<Sprite*>(event->getCurrentTarget());\n        // \u3053\u3053\u306b\u7d42\u4e86\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\u3092\u66f8\u304f\u3002\n        log(\"sprite onTouchesEnded.. \");\n        // \u30b9\u30d7\u30e9\u30a4\u30c8\u3092\u753b\u9762\u306e\u4e2d\u592e\u306b\u4f4d\u7f6e\u3065\u3051\u308b\u3002\n        sprite->setPosition(*getNextPosition());\n        // \u4e0d\u900f\u660e\u5ea6\u3092\u5143\u306b\u623b\u3059\u3002\n        target->setOpacity(255);\n    };\n\n    // \u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u30b9\u30d7\u30e9\u30a4\u30c8\u306b\u8ffd\u52a0\u3059\u308b\u3002\n    _eventDispatcher->addEventListenerWithSceneGraphPriority(listener1, sprite);\n\n    return true;\n}\n\n/**\n *  \u30e1\u30cb\u30e5\u30fc\u306e\"Close\"\u304c\u9078\u629e\u3055\u308c\u305f\u5834\u5408\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3002\n *\n *  @param pSender \u9001\u4fe1\u5143\n */\nvoid MoleScene::menuCloseCallback(Ref* pSender)\n{\n#if (CC_TARGET_PLATFORM == CC_PLATFORM_WP8) || (CC_TARGET_PLATFORM == CC_PLATFORM_WINRT)\n    MessageBox(\"You pressed the close button. Windows Store Apps do not implement a close button.\",\"Alert\");\n    return;\n#endif\n\n    // \u30c7\u30a3\u30ec\u30af\u30bf\u3092\u7d42\u4e86\u3059\u308b\u3002\n    Director::getInstance()->end();\n\n#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)\n    exit(0);\n#endif\n}\n\n/**\n *\n *  \u753b\u9762\u4e0a\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u3002\n *\n *  @return \u753b\u9762\u4e0a\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u4f4d\u7f6e\n */\nPoint* MoleScene::getNextPosition()\n{\n    // \u30b9\u30d7\u30e9\u30a4\u30c8\u3092\u65b0\u3057\u3044\u4f4d\u7f6e\u306b\u5909\u66f4\u3059\u308b\u3002\n    Point* point = new Point(random() % (int)visibleSize.width, random() % (int)visibleSize.height);\n\n    return point;\n}\n\n\n\ncocos2d-x\u306fv2.0\u3068v3.0\u3067\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306a\u3069\u306e\u30a4\u30d9\u30f3\u30c8\u53d6\u5f97\u65b9\u6cd5\u304c\u5909\u66f4\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u6210\u3057\u306a\u304c\u3089\u89e3\u8aac\u3057\u307e\u3059\u3002\n\u8a73\u7d30\u306f\u672c\u5bb6\u306e[\u8a18\u4e8b](http://www.cocos2d-x.org/wiki/EventDispatcher_Mechanism)\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u5143\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30bd\u30fc\u30b9\u304b\u3089\u51fa\u767a\u3057\u3066\u3001\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n- **HelloWorld\u30af\u30e9\u30b9**\u3092 **MoleScene\u30af\u30e9\u30b9**\u306b\u5909\u66f4\u3057\u307e\u3059\u3002(\u5fc5\u305a\u3057\u3082\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n- **HelloWorldScene.h**\u3092 **MoleScene.h**\u306b\u3001**HelloWorldScene.cpp**\u3092 **MoleScene.cpp**\u306b\u5909\u66f4\u3057\u307e\u3059\u3002(\u5fc5\u305a\u3057\u3082\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n- \u30bd\u30fc\u30b9\u306e\u53ef\u8aad\u6027\u3092\u4e0a\u3052\u308b\u305f\u3081\u3001using\u53e5\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002(\u5fc5\u305a\u3057\u3082\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n\n```C++\nusing namespace cocos2d;\n```\n- cocos2d-x\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u308b\u30a2\u30a4\u30b3\u30f3( **Icon.png**)\u3092Resources\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n- \u30b9\u30d7\u30e9\u30c3\u30b7\u30e5\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30a4\u30b3\u30f3\u3092\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n- \u30b9\u30d7\u30e9\u30a4\u30c8\u3068\u753b\u9762\u30b5\u30a4\u30ba\u304c\u30af\u30e9\u30b9\u5168\u4f53\u3067\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u30e1\u30f3\u30d0\u30fc\u5909\u6570\u306b\u3057\u307e\u3059\u3002\n\n```MoleScene.h\n#ifndef __MOLE_SCENE_H__\n#define __MOLE_SCENE_H__\n\n#include <CCGeometry.h>\n#include \"cocos2d.h\"\n\nusing namespace cocos2d;\n\nclass MoleScene : public cocos2d::Layer\n{\nprivate:\n    // \u753b\u9762\u30b5\u30a4\u30ba\n    Size visibleSize;\n\n    // \u30b9\u30d7\u30e9\u30a4\u30c8\n    cocos2d::Sprite* sprite;\n    \npublic:\n    // C++\u306b\u306fID\u304c\u306a\u3044\u306e\u3067\u3001\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u8fd4\u3059\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\u3002\n    static Scene* createScene();\n\n    // init\u30e1\u30bd\u30c3\u30c9\u306f\u3001cocos2d-iphone\u3067\u306fID\u3092\u8fd4\u3059\u304c\u3001cocos2d-x\u3067\u306fbool\u3092\u8fd4\u3059\u3068\u3044\u3046\u9055\u3044\u304c\u3042\u308b\u3002\n    virtual bool init();  \n    // a selector callback\n    // \u30bb\u30ec\u30af\u30bf\u306e\u30b3\u30fc\u30b9\u30d0\u30c3\u30af\n    void menuCloseCallback(cocos2d::Ref* pSender);\n    \n    // static create()\u95a2\u6570\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u5b9f\u88c5\n    CREATE_FUNC(MoleScene);\n    \n    // \u6b21\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u3002\n    Point* getNextPosition();\n};\n\n#endif\n// __MOLE_SCENE_H__\n```\n\n```MoleScene.cpp\n/*\n * Sample2: \u7c21\u5358\u306a\u3082\u3050\u3089\u305f\u305f\u304d\u98a8\u30b5\u30f3\u30d7\u30eb\u3002\n *\n * Copyright (C) Takao WADA.\n */\n#include \"MoleScene.h\"\n\nUSING_NS_CC;\n\n/**\n *  \u30b7\u30fc\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3002\n *\n *  @return \u30b7\u30fc\u30f3\n */\nScene* MoleScene::createScene()\n{\n    // 'scene' \u306f autorelease \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    auto scene = Scene::create();\n    \n    // 'layer' \u306f autorelease \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    auto layer = MoleScene::create();\n    \n    // \u30ec\u30a4\u30e4\u30fc\u3092\u30b7\u30fc\u30f3\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n    scene->addChild(layer);\n    \n    // \u30b7\u30fc\u30f3\u3092\u8fd4\u3059\u3002\n    return scene;\n}\n\n/**\n *  \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n *\n *  @return \u6210\u529f\u3057\u305f\u3089true\n */\nbool MoleScene::init()\n{\n    //////////////////////////////\n    // 1. \u89aa\u30af\u30e9\u30b9\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n    if ( !Layer::init() )\n    {\n        return false;\n    }\n    \n    // \u753b\u9762\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\u3002\n    visibleSize = Director::getInstance()->getVisibleSize();\n    // \u753b\u9762\u306e\u539f\u70b9\u3092\u53d6\u5f97\u3059\u308b\u3002\n    Point origin = Director::getInstance()->getVisibleOrigin();\n    \n    /////////////////////////////\n    // 2. \u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u7d42\u4e86\u3059\u308b\u201dX\u201d\u753b\u50cf\u4ed8\u304d\u306e\u30e1\u30cb\u30e5\u30fc\u9805\u76ee\u3092\u8ffd\u52a0\u3059\u308b\u3002\u3053\u308c\u306f\u5909\u66f4\u3057\u3066\u3082\u3088\u3044\u3002\n    \n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3059\u308b\"close\"\u30a2\u30a4\u30b3\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3002\u3053\u308c\u306f autorelease \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n    auto closeItem = MenuItemImage::create(\n                                           \"CloseNormal.png\",\n                                           \"CloseSelected.png\",\n                                           CC_CALLBACK_1(MoleScene::menuCloseCallback, this));\n    \n\tcloseItem->setPosition(Point(origin.x + visibleSize.width - closeItem->getContentSize().width/2 ,\n                                 origin.y + closeItem->getContentSize().height/2));\n    \n    // \u30e1\u30cb\u30e5\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3002\u3053\u308c\u306f autorelease \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n    auto menu = Menu::create(closeItem, NULL);\n    // \u30e1\u30cb\u30e5\u30fc\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n    menu->setPosition(Point::ZERO);\n    // \u30e1\u30cb\u30e5\u30fc\u3092\u5b50\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n    this->addChild(menu, 1);\n    \n    /////////////////////////////\n    // 3. \u72ec\u81ea\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3002\n    this->setTouchMode(Touch::DispatchMode::ONE_BY_ONE);\n    \n    // \u30e9\u30d9\u30eb\u3092\u4f5c\u6210\u3057\u3001\u521d\u671f\u5316\u3059\u308b\u3002\n    auto label = LabelTTF::create(\"whack a mole sample\", \"Arial\", 24);\n    \n    // \u753b\u9762\u306e\u4e2d\u592e\u306b\u30e9\u30d9\u30eb\u3092\u4f4d\u7f6e\u3065\u3051\u308b\u3002\n    label->setPosition(Point(origin.x + visibleSize.width/2,\n                             origin.y + visibleSize.height - label->getContentSize().height));\n    \n    // \u30e9\u30d9\u30eb\u3092\u30ec\u30a4\u30e4\u30fc\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n    this->addChild(label, 1);\n    \n    // cocos\u30a2\u30a4\u30b3\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3002\n    sprite = Sprite::create(\"Icon.png\");\n    \n    // \u30b9\u30d7\u30e9\u30a4\u30c8\u3092\u753b\u9762\u306e\u4e2d\u592e\u306b\u4f4d\u7f6e\u3065\u3051\u308b\u3002\n    sprite->setPosition(Point(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));\n    \n    // \u30b9\u30d7\u30e9\u30a4\u30c8\u3092\u30ec\u30a4\u30e4\u30fc\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n    this->addChild(sprite, 0);\n\n    // \u30b7\u30f3\u30b0\u30eb\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3002\n    auto listener1 = EventListenerTouchOneByOne::create();\n    // \u30b9\u30ef\u30ed\u30fc\u30bf\u30c3\u30c1\u30e2\u30fc\u30c9\u306b\u3059\u308b\u3068onTouchBegan\u30e1\u30bd\u30c3\u30c9\u306f\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306f\u4ed6\u3067\u306f\u4f7f\u308f\u308c\u306a\u3044\u3002\n    listener1->setSwallowTouches(true);\n    \n    // onTouchBegan\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u5b9f\u88c5\u306e\u30e9\u30e0\u30c0\u5f0f\u306e\u4f8b\n    listener1->onTouchBegan = [](Touch* touch, Event* event) {\n        // event->getCurrentTarget() \u306f\u3001\u30ea\u30b9\u30ca\u30fc\u306esceneGraphPriority\u306e\u512a\u5148\u9806\u306b\u5bfe\u8c61\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3002\n        auto target = static_cast<Sprite*>(event->getCurrentTarget());\n        \n        // \u30dc\u30bf\u30f3\u306b\u5bfe\u3059\u308b\u76f8\u5bfe\u7684\u306a\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u3002\n        Point locationInNode = target->convertToNodeSpace(touch->getLocation());\n        // \u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\u3002\n        Size s = target->getContentSize();\n        // \u30b3\u30f3\u30c6\u30f3\u30c4\u77e9\u5f62\u3092\u4f5c\u6210\u3059\u308b\u3002\n        Rect rect = Rect(0, 0, s.width, s.height);\n        \n        // \u30af\u30ea\u30c3\u30af\u30a8\u30ea\u30a2\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n        if (rect.containsPoint(locationInNode))\n        {\n            log(\"sprite began... x = %f, y = %f\", locationInNode.x, locationInNode.y);\n            // \u4e0d\u900f\u660e\u5ea6\u3092\u5909\u66f4\u3059\u308b\u3002\n            target->setOpacity(180);\n            return true;\n        }\n        return false;\n    };\n    \n    // \u30bf\u30c3\u30c1\u304c\u79fb\u52d5\u3057\u305f\u5834\u5408\n    listener1->onTouchMoved = [](Touch* touch, Event* event) {\n        // \u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n        // auto target = static_cast<Sprite*>(event->getCurrentTarget());\n        // \u3053\u3053\u306b\u79fb\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\u3092\u66f8\u304f\u3002touch->getDelta()\u3067\u79fb\u52d5\u91cf\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n    };\n    \n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u304c\u7d42\u4e86\u3057\u305f\u5834\u5408\n    listener1->onTouchEnded = [=](Touch* touch, Event* event) {\n        // \u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n        auto target = static_cast<Sprite*>(event->getCurrentTarget());\n        // \u3053\u3053\u306b\u7d42\u4e86\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\u3092\u66f8\u304f\u3002\n        log(\"sprite onTouchesEnded.. \");\n        // \u30b9\u30d7\u30e9\u30a4\u30c8\u3092\u753b\u9762\u306e\u4e2d\u592e\u306b\u4f4d\u7f6e\u3065\u3051\u308b\u3002\n        sprite->setPosition(*getNextPosition());\n        // \u4e0d\u900f\u660e\u5ea6\u3092\u5143\u306b\u623b\u3059\u3002\n        target->setOpacity(255);\n    };\n\n    // \u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u30b9\u30d7\u30e9\u30a4\u30c8\u306b\u8ffd\u52a0\u3059\u308b\u3002\n    _eventDispatcher->addEventListenerWithSceneGraphPriority(listener1, sprite);\n    \n    return true;\n}\n\n/**\n *  \u30e1\u30cb\u30e5\u30fc\u306e\"Close\"\u304c\u9078\u629e\u3055\u308c\u305f\u5834\u5408\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3002\n *\n *  @param pSender \u9001\u4fe1\u5143\n */\nvoid MoleScene::menuCloseCallback(Ref* pSender)\n{\n#if (CC_TARGET_PLATFORM == CC_PLATFORM_WP8) || (CC_TARGET_PLATFORM == CC_PLATFORM_WINRT)\n\tMessageBox(\"You pressed the close button. Windows Store Apps do not implement a close button.\",\"Alert\");\n    return;\n#endif\n    \n\t// \u30c7\u30a3\u30ec\u30af\u30bf\u3092\u7d42\u4e86\u3059\u308b\u3002\n    Director::getInstance()->end();\n    \n#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)\n    exit(0);\n#endif\n}\n\n/**\n *\n *  \u753b\u9762\u4e0a\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u3002\n *\n *  @return \u753b\u9762\u4e0a\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u4f4d\u7f6e\n */\nPoint* MoleScene::getNextPosition()\n{\n    // \u30b9\u30d7\u30e9\u30a4\u30c8\u3092\u65b0\u3057\u3044\u4f4d\u7f6e\u306b\u5909\u66f4\u3059\u308b\u3002\n    Point* point = new Point(random() % (int)visibleSize.width, random() % (int)visibleSize.height);\n    \n    return point;\n}\n```\n", "tags": ["touch", "cocos2d-x"]}