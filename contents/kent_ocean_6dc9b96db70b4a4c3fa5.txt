{"context": "\n\n\u306f\u3058\u3081\u306b\n\u672c\u7a3f\u3067\u306f Gin Web Framework \u3068 Go \u7528\u306e ORM \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3042\u308b GORM \u3092\u4f7f\u3063\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u691c\u7d22\u3057\u8868\u793a\u3059\u308b\u307e\u3067\u306e\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30c6\u30b9\u30c8\u306a\u306e\u3067 SQLite \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001GORM \u306f\u4ed6\u306b MySQL\u3001PostgreSQL \u306a\u3069\u306e\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\u53c2\u8003: GORM Guide\nhttp://jinzhu.me/gorm/database.html#connecting-to-a-database\n\u306a\u304a\u3001\u672c\u7a3f\u3067\u306f\u65e2\u306b Go \u3068 Gin \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u524d\u63d0\u3067\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\u305d\u3053\u307e\u3067\u306e\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u50d5\u304c\u4ee5\u524d\u66f8\u3044\u305f\u300cUbuntu 16.04 \u306b GoLang 1.6 \u3068 Gin Web Framework \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001HTML\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u307e\u3067\u300d\u3068\u3044\u3046\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u3054\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://qiita.com/kent_ocean/items/5bfb7b69973f78b8c843\n\nsqlite3 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4eca\u56de\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b SQLite\u3092\u4f7f\u3044\u307e\u3059\u306e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\napt-get install sqlite3\n\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\nSQLite \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u300cProduct\u300d\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u300cCode\u300d\u300cName\u300d\u300cPrice\u300d\u3068\u3044\u3046\uff13\u3064\u306e\u30ab\u30e9\u30e0\u3092\u7528\u610f\u3057\u307e\u3059\u3002\ncd var/www/go\nsqlite3 test.sqlite3\nSQLite version 3.11.0\nEnter \".help\" for instructions\nsqlite> create table Product(Code, Name, Price);\nsqlite> .quit\n\n\nGORM \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ngo get -u github.com/jinzhu/gorm\n\n\ngo-sqlite3 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ngo get -u github.com/mattn/go-sqlite3\n\n\n\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\ngo\n\u251c\u2500templates\n\u2502    \u2500index.tmpl (\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb)\n\u2514\u2500index.go\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\nmkdir templates\nsudo vim templates/index.tmpl\n\n\ntemplates/index.tmpl\n<html>\n<head>\n</head>\n<body>\n    <h1>\n        {{ .title }}\n    </h1>\n<form method=\"get\" action=\"search\">\n<p><input type=\"search\" name=\"keyword\" size=\"30\" placeholder=\"Search\" required> <input type=\"submit\" value=\"Search\"></p></form>\n{{ .info }}\n</body>\n</html>\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\nsudo vim index.go\n\n\nindex.go\npackage main\n\nimport (\n  \"github.com/gin-gonic/gin\"\n  \"github.com/jinzhu/gorm\"\n  _ \"github.com/mattn/go-sqlite3\"\n  \"net/http\"\n  \"fmt\"\n)\n\ntype Product struct {\n  gorm.Model\n  Code string\n  Name string\n  Price uint\n}\n\nfunc main() {\n    router := gin.Default()\n    router.LoadHTMLGlob(\"templates/*\")\n\n    init()\n\n    router.GET(\"/index\", func(c *gin.Context) {\n        c.HTML(http.StatusOK, \"index.tmpl\", gin.H{\n            \"title\": \"Main website\",\n            \"info\": \"\",\n        })\n    })\n\n    //router.GET(\"/search/:keyword\", func(c *gin.Context) {\n    router.GET(\"/search\", func(c *gin.Context) {\n        var keyword string\n        //keyword = c.Param(\"keyword\")\n        keyword = c.Query(\"keyword\")\n\n        var info string\n        info = read(keyword)\n        c.HTML(http.StatusOK, \"index.tmpl\", gin.H{\n            \"title\": \"Main website\",\n            \"info\": info,\n        })\n    })\n\n    router.Run(\":8080\")\n}\n\n//\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u521d\u671f\u5316\nfunc init() {\n    db, err := gorm.Open(\"sqlite3\", \"test.sqlite3\")\n    if err != nil {\n        panic(\"failed to connect database\")\n    }\n\n    // Migrate the schema\n    db.AutoMigrate(&Product{})\n\n    // Create\n    db.Create(&Product{Code: \"L0001\", Name: \"Apple\", Price:  1000})\n    db.Create(&Product{Code: \"L0002\", Name: \"Orange\", Price:  100})\n    db.Create(&Product{Code: \"L0003\", Name: \"Banana\", Price: 2000})\n    db.Create(&Product{Code: \"L0004\", Name: \"Papaya\", Price: 5000})\n    db.Create(&Product{Code: \"L0005\", Name: \"Mango\", Price:  3000})\n}\n\n\nfunc read(keword string) string {\n\n    db, err := gorm.Open(\"sqlite3\", \"test.sqlite3\")\n    if err != nil {\n        panic(\"failed to connect database\")\n    }\n\n    // Read\n    var product Product\n    db.First(&product, \"Name = ?\", keyword) // find product with name\n\n    var info string\n    info += \"Name: \" + fmt.Sprint(product.Name)\n    info += \" Price: \" + fmt.Sprint(product.Price)\n\n    return info\n}\n\n\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u78ba\u8a8d\n\u3067\u306f\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\ngo run index.go\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\nhttp://(IP Address):8080/index\n\u306b\u30a2\u30af\u30bb\u30b9\n\u2193 \u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n\n\u691c\u7d22\u3057\u3066\u307f\u308b\n\u6b21\u306b\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306b\u300cBanana\u300d\u3068\u5165\u529b\u3057\u3001\u691c\u7d22\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n#\u306f\u3058\u3081\u306b\n\n\u672c\u7a3f\u3067\u306f Gin Web Framework \u3068 Go \u7528\u306e ORM \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3042\u308b GORM \u3092\u4f7f\u3063\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u691c\u7d22\u3057\u8868\u793a\u3059\u308b\u307e\u3067\u306e\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30c6\u30b9\u30c8\u306a\u306e\u3067 SQLite \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001GORM \u306f\u4ed6\u306b MySQL\u3001PostgreSQL \u306a\u3069\u306e\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u53c2\u8003: GORM Guide\nhttp://jinzhu.me/gorm/database.html#connecting-to-a-database\n\n\n\u306a\u304a\u3001\u672c\u7a3f\u3067\u306f\u65e2\u306b Go \u3068 Gin \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u524d\u63d0\u3067\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\u305d\u3053\u307e\u3067\u306e\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u50d5\u304c\u4ee5\u524d\u66f8\u3044\u305f\u300cUbuntu 16.04 \u306b GoLang 1.6 \u3068 Gin Web Framework \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001HTML\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u307e\u3067\u300d\u3068\u3044\u3046\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u3054\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://qiita.com/kent_ocean/items/5bfb7b69973f78b8c843\n\n\n#sqlite3 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u4eca\u56de\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b SQLite\u3092\u4f7f\u3044\u307e\u3059\u306e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\n\n```\napt-get install sqlite3\n```\n\n###\u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\nSQLite \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u300cProduct\u300d\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u300cCode\u300d\u300cName\u300d\u300cPrice\u300d\u3068\u3044\u3046\uff13\u3064\u306e\u30ab\u30e9\u30e0\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```\ncd var/www/go\nsqlite3 test.sqlite3\nSQLite version 3.11.0\nEnter \".help\" for instructions\nsqlite> create table Product(Code, Name, Price);\nsqlite> .quit\n```\n\n\n#GORM \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\ngo get -u github.com/jinzhu/gorm\n```\n\n#go-sqlite3 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\ngo get -u github.com/mattn/go-sqlite3\n```\n\n#\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```\ngo\n\u251c\u2500templates\n\u2502    \u2500index.tmpl (\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb)\n\u2514\u2500index.go\n```\n\n\n###\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\n```\nmkdir templates\nsudo vim templates/index.tmpl\n```\n\n```templates/index.tmpl\n<html>\n<head>\n</head>\n<body>\n    <h1>\n        {{ .title }}\n    </h1>\n<form method=\"get\" action=\"search\">\n<p><input type=\"search\" name=\"keyword\" size=\"30\" placeholder=\"Search\" required> <input type=\"submit\" value=\"Search\"></p></form>\n{{ .info }}\n</body>\n</html>\n```\n\n###\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\n\n```\nsudo vim index.go\n```\n\n```index.go\npackage main\n\nimport (\n  \"github.com/gin-gonic/gin\"\n  \"github.com/jinzhu/gorm\"\n  _ \"github.com/mattn/go-sqlite3\"\n  \"net/http\"\n  \"fmt\"\n)\n\ntype Product struct {\n  gorm.Model\n  Code string\n  Name string\n  Price uint\n}\n\nfunc main() {\n    router := gin.Default()\n    router.LoadHTMLGlob(\"templates/*\")\n\n    init()\n\n    router.GET(\"/index\", func(c *gin.Context) {\n        c.HTML(http.StatusOK, \"index.tmpl\", gin.H{\n            \"title\": \"Main website\",\n            \"info\": \"\",\n        })\n    })\n\n    //router.GET(\"/search/:keyword\", func(c *gin.Context) {\n    router.GET(\"/search\", func(c *gin.Context) {\n    \tvar keyword string\n        //keyword = c.Param(\"keyword\")\n        keyword = c.Query(\"keyword\")\n        \n    \tvar info string\n        info = read(keyword)\n        c.HTML(http.StatusOK, \"index.tmpl\", gin.H{\n            \"title\": \"Main website\",\n            \"info\": info,\n        })\n    })\n\n    router.Run(\":8080\")\n}\n\n//\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u521d\u671f\u5316\nfunc init() {\n    db, err := gorm.Open(\"sqlite3\", \"test.sqlite3\")\n    if err != nil {\n        panic(\"failed to connect database\")\n    }\n\n    // Migrate the schema\n    db.AutoMigrate(&Product{})\n\n    // Create\n    db.Create(&Product{Code: \"L0001\", Name: \"Apple\", Price:  1000})\n    db.Create(&Product{Code: \"L0002\", Name: \"Orange\", Price:  100})\n    db.Create(&Product{Code: \"L0003\", Name: \"Banana\", Price: 2000})\n    db.Create(&Product{Code: \"L0004\", Name: \"Papaya\", Price: 5000})\n    db.Create(&Product{Code: \"L0005\", Name: \"Mango\", Price:  3000})\n}\n\n\nfunc read(keword string) string {\n\n    db, err := gorm.Open(\"sqlite3\", \"test.sqlite3\")\n    if err != nil {\n        panic(\"failed to connect database\")\n    }\n\n    // Read\n    var product Product\n    db.First(&product, \"Name = ?\", keyword) // find product with name\n    \n    var info string\n    info += \"Name: \" + fmt.Sprint(product.Name)\n    info += \" Price: \" + fmt.Sprint(product.Price)\n\n    return info\n}\n```\n\n#\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u78ba\u8a8d\n\n\u3067\u306f\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\ngo run index.go\n```\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\n`http://(IP Address):8080/index`\n\u306b\u30a2\u30af\u30bb\u30b9\n\n\u2193 \u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n![001.png](https://qiita-image-store.s3.amazonaws.com/0/124995/209238ba-d6f4-59ae-91db-005f75f0e5f9.png)\n\n\n###\u691c\u7d22\u3057\u3066\u307f\u308b\n\n\u6b21\u306b\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306b\u300cBanana\u300d\u3068\u5165\u529b\u3057\u3001\u691c\u7d22\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n![002.png](https://qiita-image-store.s3.amazonaws.com/0/124995/74071e1e-f608-c0ce-0d92-751749bc9451.png)\n\n\n", "tags": ["gin", "GORM", "Go", "golang"]}