{"tags": ["Python", "Finance"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\uff12\u3064\u306e\u682a\u4fa1\u30c7\u30fc\u30bf\u306e\u95a2\u4fc2\u6027\u3092\u898b\u308b\u969b\uff0c\u4e00\u822c\u306b\u4e21\u8005\u306e\u5bfe\u6570\u5229\u76ca\u7387\u304c\u6b63\u898f\u5206\u5e03\u3092\u3068\u308b\u3068\u3044\u3046\u524d\u63d0\u3067\u5206\u6790\u306b\u53d6\u308a\u639b\u304b\u308b\uff0e\u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u5b9f\u969b\u306e\u682a\u4fa1\u3092\u307f\u308b\u3068\u306a\u304b\u306a\u304b\u304d\u308c\u3044\u306a\u6b63\u898f\u5206\u5e03\u3092\u898b\u308b\u3053\u3068\u306f\u306a\u3044\u306e\u3067\uff0c\u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\u56de\u5e30\u5206\u6790\u3059\u308b\u969b\u306b\u3082\uff0c\u51fa\u529b\u3055\u308c\u308b\u7d71\u8a08\u5024\u306b\u6ce8\u610f\u6df1\u304f\u6c17\u3092\u914d\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n\u6b63\u898f\u5206\u5e03\u3068\u306a\u3089\u306a\u3044\u95a2\u4fc2\u6027\u3092\u6271\u3046\u30e2\u30c7\u30eb\u3068\u3057\u3066GLM(=Generalized Linear model,  \u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb)\u304c\u3042\u308b\u304c\uff0c\u3053\u308c\u3092\u9069\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u7d71\u8a08\u30e2\u30c7\u30ea\u30f3\u30b0\u306e\u8003\u3048\u65b9\u3092\u7fd2\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\uff0c\u82e5\u5e72\u306e\u6280\u8853\u7684gap\u3092\u611f\u3058\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3042\u308b\uff0e\u3057\u304b\u3057\u306a\u304c\u3089\uff0cpython statsmodels\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u3042\u308a\uff0c\u4eca\u56de\uff0c\u53b3\u5bc6\u306a\u3053\u3068\u3092\u3042\u307e\u308a\u8003\u3048\u305a\u306b\u300c\u304a\u8a66\u3057\u300d\u3067\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\uff0e\n\u307e\u305a\u5206\u6790\u306e\u5bfe\u8c61\u3068\u3057\u3066\uff0c\u6771\u8a3c\uff11\u90e8\u306e\u81ea\u52d5\u8eca\u95a2\u9023\u9298\u67c4\uff08\uff13\u793e\uff09\u3092pick up\u3057\u305f\uff0e\uff13\u793e\u304b\u3089\uff12\u793e\u3092\u9078\u3093\u30603\u901a\u308a\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u5bfe\u6570\u5229\u76ca\u7387\u306eScatter Plot\u306f\u4e0b\u56f3\u306e\u3088\u3046\u306b\u306a\u308b\uff0e\n\n\uff13\u3064\u3068\u3082\u3042\u307e\u308a\u5f37\u304f\u306a\u3044\uff08\u5f31\u3044\uff09\u6b63\u306e\u76f8\u95a2\u304c\u3042\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\uff0e\u3053\u308c\u3089\uff13\u3064\u306e\u3046\u3061\u304b\u3089\u771f\u3093\u4e2d\u306e\u30c7\u30fc\u30bf(stock2 vs. stock3\uff09\u3092\u3068\u308a\u3042\u3052\uff0c\u56de\u5e30\u5206\u6790\u3092\u884c\u3046\u3053\u3068\u306b\u3057\u305f\uff0e\u56e0\u307f\u306bstock2\u306f\u682a\u4fa1\u30b3\u30fc\u30c97203\uff0cstock3\u306f\u682a\u4fa1\u30b3\u30fc\u30c97267\u306e\u9298\u67c4\u3067\u3042\u308b\uff0e\n\n\u7dda\u5f62\u30e2\u30c7\u30eb(Linear Model)\u306e\u9069\u7528\n\u307e\u305a\u521d\u3081\u306b\uff0cLinear Model\u3092\u7528\u3044\u3066\u56de\u5e30\u5206\u6790\u3092\u884c\u3063\u305f\uff0e\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\uff0c\u304a\u3088\u3073\u7dda\u5f62\u30e2\u30c7\u30eb\u306e\u56de\u5e30\u5206\u6790\u307e\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306acode\u3068\u3057\u305f\uff0e\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport statsmodels.api as sm\n\n\ndef my_tof(s):\n    f1 = float(s.replace(',', ''))\n    return f1\n\n# pandas read_csv()\nmy_colmn = ['Date', 'Open', 'High', 'Low', 'Close', 'Diff', 'Volume', 'cH', 'cI', 'cJ', 'cK', 'cL', 'cM', 'cN', 'cO']\n\nindex = pd.date_range(start='2014/1/1', end='2014/12/31', freq='B')\nstock_raw = pd.DataFrame(index=index)\nmydf = pd.DataFrame(index=index)\n\nstock1 = pd.read_csv('./x7201-2014.csv', index_col=0, parse_dates=True, skiprows=1, names=my_colmn, header=None)\nstock_raw['stock1'] = stock1[::-1].loc[:, 'Close']\nstock2 = pd.read_csv('./x7203-2014.csv', index_col=0, parse_dates=True, skiprows=1, names=my_colmn, header=None)\nstock_raw['stock2'] = stock2[::-1].loc[:, 'Close']\nstock3 = pd.read_csv('./x7267-2014.csv', index_col=0, parse_dates=True, skiprows=1, names=my_colmn, header=None)\nstock_raw['stock3'] = stock3[::-1].loc[:, 'Close']\n\nstock_raw.dropna(inplace=True)\nstock_base_label = ['stock1', 'stock2', 'stock3']\n\nfor st in stock_base_label:\n    st_price = st + '_p'\n    st_return = st + '_ret'\n    st_log_return = st + '_lgret'\n\n    mydf[st_price] = stock_raw[st].apply(my_tof)\n    mydf[st_price].fillna(method='ffill', inplace=True)\n    mydf[st_return] = mydf[st_price] / mydf[st_price].shift(1)\n    mydf[st_log_return] = np.log(mydf[st_return])\n\n# scatter plotting\n\uff08\u4e2d\u7565\uff09\n\n# apply OLS model \nmydf.dropna(inplace=True)\n\nx1 = mydf['stock2_lgret'].values    # stock2 log-return\nx1a = sm.add_constant(x1)\ny1 = mydf['stock3_lgret'].values    # stock3 log-return\n\n# OLS (linear model)\nmd0 = sm.OLS(y1, x1a)\nres0 = md0.fit()\nprint res0.summary()\n\nplt.figure(figsize=(5,4))\nplt.scatter(mydf['stock2_lgret'], mydf['stock3_lgret'], c='b', alpha=0.6)\nplt.plot(x1, res0.fittedvalues, 'r-', label='Linear Model')\nplt.grid(True)\n\n\n\u4e0a\u306e\u901a\u308a\uff0cstatsmodels.api.OLS() \u3092\u7528\u3044\u3066\u3044\u308b\uff0e\u3053\u306e\u7d50\u679c\uff0c\u4ee5\u4e0b\u306e\u30b0\u30e9\u30d5\u304c\u5f97\u3089\u308c\u305f\uff0e\nFig. stock2 vs. stock3 (Log Return) Linear Model\n\n\nGLM (Gaussian distribution)\n\u6b21\u306bGLM\u306b\u3088\u308b\u56de\u5e30\u5206\u6790\u3092\u884c\u3046\uff0estatsmodels\u306eGLM\uff08\u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb\uff09\u3067\u306f\uff0c\u4f7f\u7528\u3067\u304d\u308b\u78ba\u7387\u5206\u5e03(Family\u3068\u547c\u3070\u308c\u308b\uff09\u3068\u3057\u3066\u4ee5\u4e0b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\uff0e\uff08Document\u3088\u308a\u629c\u7c8b\uff09\nFamilies for GLM(Generalized Linear Model)\n\n\n\nFamily\nThe parent class for one-parameter exponential families.\nRemark\n\n\n\n\nBinomial\nBinomial exponential family distribution.\n\u4e8c\u9805\u5206\u5e03\n\n\nGamma\nGamma exponential family distribution.\n\u30ac\u30f3\u30de\u5206\u5e03\n\n\nGaussian\nGaussian exponential family distribution.\n\u30ac\u30a6\u30b9\u5206\u5e03\n\n\nInverseGaussian\nInverseGaussian exponential family.\n\u9006\u30ac\u30a6\u30b9\u5206\u5e03\n\n\nNegativeBinomial\nNegative Binomial exponential family.\n\u8ca0\u306e\u4e8c\u9805\u5206\u5e03\n\n\nPoisson\nPoisson exponential family.\n\u30dd\u30a2\u30bd\u30f3\u5206\u5e03\n\n\n\n\u307e\u305f\uff0c\u5404Family\u306b\u5bfe\u3057\u3066\uff0c\u4f7f\u7528\u3067\u304d\u308b\uff08Combination\u3068\u306a\u308b\uff09\u30ea\u30f3\u30af\u95a2\u6570\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\uff0e(Document\u3088\u308a\u629c\u7c8b\uff09\u30ea\u30f3\u30af\u95a2\u6570\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u3067\u304d\u308b\u304c\uff0c\u6307\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\uff0c\u30c7\u30a3\u30d5\u30a9\u30eb\u30c8\u306e\u3082\u306e\u304c\u4f7f\u7528\u3055\u308c\u308b\u3088\u3046\u3067\u3042\u308b\uff0e\n\n\n\n\nident\nlog\nlogit\nprobit\ncloglog\npow\nopow\nnbinom\nloglog\nlogc\n\n\n\n\nGaussian\nx\nx\n\n\n\nx\n\n\n\n\n\n\ninv Gaussian\nx\nx\n\n\n\nx\n\n\n\n\n\n\nbinomial\nx\nx\nx\nx\nx\nx\nx\n\nx\nx\n\n\nPoission\nx\nx\n\n\n\nx\n\n\n\n\n\n\nneg binomial\nx\nx\n\n\n\nx\n\nx\n\n\n\n\ngamma\nx\nx\n\n\n\nx\n\n\n\n\n\n\n\n\u307e\u305a\uff0cGaussian\u95a2\u6570\u3092\u7528\u3044\u3066\u8a08\u7b97\u3092\u884c\u3063\u305f\uff0eCode\u306f\uff0c\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n\n# apply GLM(Gaussian) model\nmd1 = sm.GLM(y1, x1a, family=sm.families.Gaussian())    # Gaussian()\nres1 = md1.fit()\nprint res1.summary()\n\nplt.figure(figsize=(5,4))\nplt.scatter(mydf['stock2_lgret'], mydf['stock3_lgret'], c='g', alpha=0.6)\nplt.plot(x1, res1.fittedvalues, 'r-', label='GLM(Gaussian)')\nplt.grid(True)\n\n\nFig. stock2 vs. stock3 (GLM(gaussian dist.))\n\nGLM\u304c\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u305f\u7dda\u306f\uff0c\u4e0a\u56f3\u304b\u3089\u5168\u304f\u5909\u5316\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3042\u308b\uff0e\u8a08\u7b97\u7d50\u679c\u306esummary()\u3092\u6bd4\u8f03\u3059\u308b\uff0e\nOLS\u306esummary\nIn [71]: print res0.summary()\n                            OLS Regression Results\n==============================================================================\nDep. Variable:                      y   R-squared:                       0.486\nModel:                            OLS   Adj. R-squared:                  0.484\nMethod:                 Least Squares   F-statistic:                     241.1\nDate:                Sun, 26 Jul 2015   Prob (F-statistic):           1.02e-38\nTime:                        16:18:16   Log-Likelihood:                 803.92\nNo. Observations:                 257   AIC:                            -1604.\nDf Residuals:                     255   BIC:                            -1597.\nDf Model:                           1\nCovariance Type:            nonrobust\n==============================================================================\n                 coef    std err          t      P>|t|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nconst         -0.0013      0.001     -1.930      0.055        -0.003  2.64e-05\nx1             0.7523      0.048     15.526      0.000         0.657     0.848\n==============================================================================\nOmnibus:                       10.243   Durbin-Watson:                   1.997\nProb(Omnibus):                  0.006   Jarque-Bera (JB):               16.017\nSkew:                          -0.235   Prob(JB):                     0.000333\nKurtosis:                       4.129   Cond. No.                         73.0\n==============================================================================\n\nGLM(Gaussian dist.)\u306esummary\nIn [72]: print res1.summary()\n\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:                      y   No. Observations:                  257\nModel:                            GLM   Df Residuals:                      255\nModel Family:                Gaussian   Df Model:                            1\nLink Function:               identity   Scale:                0.00011321157031\nMethod:                          IRLS   Log-Likelihood:                 803.92\nDate:                Sun, 26 Jul 2015   Deviance:                     0.028869\nTime:                        16:12:11   Pearson chi2:                   0.0289\nNo. Iterations:                     4\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nconst         -0.0013      0.001     -1.930      0.054        -0.003  2.02e-05\nx1             0.7523      0.048     15.526      0.000         0.657     0.847\n==============================================================================\n\n\n\uff12\u3064\u306e\u51fa\u529b\u306f\u5185\u5bb9\u304c\u3060\u3044\u3076\u7570\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\uff0e\nOLS\u3067\u306f\uff0cR-squared, AIC, BIC\u306e\u6570\u5024\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u304c\uff0cGLM\u3067\u306f\u3053\u308c\u3089\u304c\u306a\u304f\uff0c\u4ee3\u308f\u308a\u306bDeviance\uff08\u9038\u8131\u5ea6\uff09\uff0cPearson chi2 \u7d71\u8a08\u91cf\u306a\u3069\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\uff0e\u4e21\u65b9\u306b\u3042\u308b\u3082\u306e\u3068\u3057\u3066\u306f\uff0cLog-Likelihood\uff08Log-\u5c24\u5ea6\uff09\u306e\u6570\u5024\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\uff0e\nGLM\u306e\u51fa\u529b\u304b\u3089\u306f\uff0cLink Function\u304c\"identity\"\uff08\u6052\u7b49\u30ea\u30f3\u30af\u95a2\u6570\uff09\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\uff0e\u307e\u305f\uff0cOLS\u3068GLM\u3067\u504f\u56de\u5e30\u4fc2\u6570\u304c\u540c\u3058\u5024(-0.0013, 0.7523)\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304b\u3089\uff0c\u56de\u5e30\u5206\u6790\u306e\u7d50\u679c\uff08\u5185\u5bb9\uff09\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u305f\uff0e\n\nGLM (Gamma distribution)\n\u6b21\u306b\u5206\u5e03\u3068\u3057\u3066\u30ac\u30f3\u30de\u5206\u5e03(Gamma distribution)\u3092\u4f7f\u3063\u305fGLM\u306e\u8a08\u7b97\u3092\u8a66\u3057\u3066\u307f\u305f\uff0e\u30ac\u30f3\u30de\u5206\u5e03\u304c\u682a\u4fa1\u53ce\u76ca\u7387\u3092\u3046\u307e\u304f\u8868\u73fe\u3059\u308b\u304b\u3069\u3046\u304b\u306b\u3064\u3044\u3066\u306f\u8b70\u8ad6\u306e\u4f59\u5730\u304c\u3042\u308b\u304b\u3068\u601d\u3063\u305f\u304c\uff0cGLM\u3089\u3057\u3044\u8a08\u7b97\u3092\u8a66\u3059\u3053\u3068\u3092\u76ee\u7684\u306b\u3084\u3063\u3066\u307f\u305f\uff0e\n\u8a08\u7b97\u306e\u5b9f\u884c\u3067\u554f\u984c\u3068\u306a\u3063\u305f\u306e\u304c\uff0c\u5bfe\u6570\u682a\u4fa1\u53ce\u76ca\u7387\u3060\u3068\u682a\u4fa1\u4e0b\u843d\u6642\u306b\u30de\u30a4\u30ca\u30b9\u306e\u5024\u3092\u3068\u308b\u304c\u3053\u308c\u306f\u30ac\u30f3\u30de\u5206\u5e03\u306e\u7bc4\u56f2\u5916\u3068\u306a\u3063\u3066\u3057\u307e\u3046\uff0e\u305d\u3053\u3067\u5bfe\u6570\u3092\u53d6\u308b\u524d\u306e\u682a\u4fa1\u53ce\u76ca\u7387\u3092\uff59\u5024\u306b\u3057\u3066\u8a08\u7b97\u3092\u884c\u3063\u305f\uff0e\uff08\u5c11\u3057\u7121\u7406\u3084\u308a\u611f\u304c\u3042\u308b\u3053\u3068\u306f\u5426\u3081\u306a\u3044\u304c...\uff09\n# apply GLM(gamma) model\n\nx2 = x1 ; x2a = x1a\ny2 = mydf['stock3_ret'].values    # replaced\n\nmd2 = sm.GLM(y2, x2a, family=sm.families.Gamma())\nres2 = md2.fit()\n\n# print summary and plot fitting curve\nprint res2.summary()\nplt.figure(figsize=(5,4))\nplt.scatter(mydf['stock2_lgret'], mydf['stock3_ret'], c='c', alpha=0.6)\nplt.plot(x2, res2.fittedvalues, 'r-', label='GLM(Gamma)')\nplt.grid(True)\n\ny2_fit_log = np.log(res2.fittedvalues)\nplt.figure(figsize=(5,4))\nplt.scatter(mydf['stock2_lgret'], mydf['stock3_lgret'], c='c', alpha=0.6)\nplt.plot(x2, y2_fit_log, 'r-', label='GLM(Gamma)')\n\n\nFig. stock2 vs. stock3 (GLM(gamma dist.))\n(log - ident)\n\n(log - log) \uff08y\u5024\u3092\u5909\u63db\u3057\u305f\uff09\n\n\u30b0\u30e9\u30d5\u3068\u3057\u3066\u306f\uff0c\u540c\u3058\u3088\u3046\u306a\u7d50\u679c\u3068\u306a\u3063\u305f\uff0esummary()\u3092\u306a\u304c\u3081\u3066\u307f\u308b\uff0e\nIn [73]: print res2.summary()\n\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:                      y   No. Observations:                  257\nModel:                            GLM   Df Residuals:                      255\nModel Family:                   Gamma   Df Model:                            1\nLink Function:          inverse_power   Scale:               0.000113369003649\nMethod:                          IRLS   Log-Likelihood:                 803.72\nDate:                Sun, 26 Jul 2015   Deviance:                     0.028956\nTime:                        16:12:16   Pearson chi2:                   0.0289\nNo. Iterations:                     5\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nconst          1.0013      0.001   1502.765      0.000         1.000     1.003\nx1            -0.7491      0.048    -15.470      0.000        -0.844    -0.654\n==============================================================================\n\n\nGLM(gaussian dist.)\u304b\u3089GLM(gamma dist.)\u306b\u5909\u3048\u3066\uff0c\u5fae\u5999\u306bLog-Likelihood\u306e\u6570\u5024\u3084Deviance\u304c\u5909\u308f\u3063\u3066\u3044\u308b\uff0e\u3057\u304b\u3057\u30e2\u30c7\u30eb\u304c\u6539\u826f\u3067\u304d\u305f\u3068\u3044\u3046\u307b\u3069\u306e\u5909\u5316\u304c\u306a\u3044\u3053\u3068\u306f\u78ba\u304b\u3067\u3042\u308b\uff0ey\u5024\u3092\u5909\u63db\u3057\u3066\u8a08\u7b97\u3057\u305f\u306e\u3067\uff0c\u504f\u56de\u5e30\u4fc2\u6570\u306f\u5225\u7269\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\uff0e\n\u524d\u5f8c\u3059\u308b\u304c\uff0c\u30c7\u30fc\u30bf\u306e\u6b63\u898f\u6027\u78ba\u8a8d\u306e\u305f\u3081\uff0cstock2\u3068stock3\u306e\u5bfe\u6570\u53ce\u76ca\u7387\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u4f5c\u56f3\u3057\u305f\uff0e\u4e0b\u56f3\u306e\u3088\u3046\u306a\u5f62\u72b6\u3067\u3042\u3063\u305f\uff0e\n\n\n\u3068\u308a\u3042\u3048\u305a\u306e\u7d50\u8ad6\n\u4eca\u56de\u306e\u30c7\u30fc\u30bf\u5206\u6790\u306b\u304a\u3044\u3066GLM\u9069\u7528\u306b\u3088\u308b\u30e2\u30c7\u30eb\u7cbe\u5ea6\u5411\u4e0a\u306f\u78ba\u8a8d\u3067\u304d\u306a\u304b\u3063\u305f\uff0e\u3053\u308c\u306f\u540c\u696d\u7a2e\u306e\u682a\u4fa1\uff08\u671f\u9593\u30821\u5e74\u7a0b\u5ea6\uff09\u3092\u898b\u305f\u305f\u3081\uff0c\u8907\u96d1\u306a\uff08\u975e\u7dda\u5f62\u306a\uff09\u95a2\u4fc2\u3068\u306a\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u305f\u3081\u3068\u8003\u3048\u3089\u308c\u308b\uff0e\u4f46\u3057\uff0c\u4eca\u5f8c\u3044\u308d\u3044\u308d\u306a\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u306b\u3042\u305f\u308a\u4f7f\u3048\u308b\u30c4\u30fc\u30eb\u304c\u5897\u3048\u308b\u3053\u3068\u306f\u60aa\u3044\u3053\u3068\u3067\u306f\u306a\u3044\u306e\u3067\uff0cGLM\u4ed6\uff0c\u9ad8\u5ea6\u306a\u56de\u5e30\u5206\u6790\u624b\u6cd5\u306b\u3064\u3044\u3066\u7406\u89e3\u3092\u6df1\u3081\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3046\uff0e\n\u4eca\u56de\u306e\uff08\u81ea\u52d5\u8eca\u30e1\u30fc\u30ab\u30fcA\u793e\u682a\u4fa1 vs. B\u793e\u682a\u4fa1\uff09\u3067\u306f\u5a01\u529b\u3092\u767a\u63ee\u3057\u306a\u304b\u3063\u305f\u304c\uff0c\u5c11\u3057\u6bdb\u8272\u306e\u9055\u3063\u305f\u7d44\u307f\u5408\u308f\u305b\uff0c\u4f8b\u3048\u3070\uff08\u6700\u9ad8\u6c17\u6e29 vs. \u30d3\u30fc\u30eb\u4f1a\u793e\u682a\u4fa1\uff09\u306a\u3069\u3067\u6709\u52b9\u306b\u4f7f\u3048\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u671f\u5f85\u3057\u3066\u3044\u308b\uff0e\n\n\u53c2\u8003\u6587\u732e\n\nstatsmodels\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttp://statsmodels.sourceforge.net/stable/glm.html\n\u7d71\u8a08\u5b66\u5165\u9580\uff08\u6771\u4eac\u5927\u5b66\u6559\u990a\u5b66\u90e8\u7d71\u8a08\u5b66\u6559\u5ba4 \u7de8\uff09\nhttp://www.utp.or.jp/bd/978-4-13-042065-5.html\n\u30c7\u30fc\u30bf\u89e3\u6790\u306e\u305f\u3081\u306e\u7d71\u8a08\u30e2\u30c7\u30ea\u30f3\u30b0\u5165\u9580\uff08\u4e45\u4fdd\u8457\uff0c\u5ca9\u6ce2\u66f8\u5e97\uff09\nhttps://www.iwanami.co.jp/cgi-bin/isearch?isbn=ISBN978-4-00-006973-1\n\n\n### \u306f\u3058\u3081\u306b\n\uff12\u3064\u306e\u682a\u4fa1\u30c7\u30fc\u30bf\u306e\u95a2\u4fc2\u6027\u3092\u898b\u308b\u969b\uff0c\u4e00\u822c\u306b\u4e21\u8005\u306e\u5bfe\u6570\u5229\u76ca\u7387\u304c\u6b63\u898f\u5206\u5e03\u3092\u3068\u308b\u3068\u3044\u3046\u524d\u63d0\u3067\u5206\u6790\u306b\u53d6\u308a\u639b\u304b\u308b\uff0e\u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u5b9f\u969b\u306e\u682a\u4fa1\u3092\u307f\u308b\u3068\u306a\u304b\u306a\u304b\u304d\u308c\u3044\u306a\u6b63\u898f\u5206\u5e03\u3092\u898b\u308b\u3053\u3068\u306f\u306a\u3044\u306e\u3067\uff0c\u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\u56de\u5e30\u5206\u6790\u3059\u308b\u969b\u306b\u3082\uff0c\u51fa\u529b\u3055\u308c\u308b\u7d71\u8a08\u5024\u306b\u6ce8\u610f\u6df1\u304f\u6c17\u3092\u914d\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n\n\u6b63\u898f\u5206\u5e03\u3068\u306a\u3089\u306a\u3044\u95a2\u4fc2\u6027\u3092\u6271\u3046\u30e2\u30c7\u30eb\u3068\u3057\u3066GLM(=Generalized Linear model,  \u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb)\u304c\u3042\u308b\u304c\uff0c\u3053\u308c\u3092\u9069\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u7d71\u8a08\u30e2\u30c7\u30ea\u30f3\u30b0\u306e\u8003\u3048\u65b9\u3092\u7fd2\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\uff0c\u82e5\u5e72\u306e\u6280\u8853\u7684gap\u3092\u611f\u3058\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3042\u308b\uff0e\u3057\u304b\u3057\u306a\u304c\u3089\uff0cpython **statsmodels**\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u3042\u308a\uff0c\u4eca\u56de\uff0c\u53b3\u5bc6\u306a\u3053\u3068\u3092\u3042\u307e\u308a\u8003\u3048\u305a\u306b\u300c\u304a\u8a66\u3057\u300d\u3067\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\uff0e\n\n\u307e\u305a\u5206\u6790\u306e\u5bfe\u8c61\u3068\u3057\u3066\uff0c\u6771\u8a3c\uff11\u90e8\u306e\u81ea\u52d5\u8eca\u95a2\u9023\u9298\u67c4\uff08\uff13\u793e\uff09\u3092pick up\u3057\u305f\uff0e\uff13\u793e\u304b\u3089\uff12\u793e\u3092\u9078\u3093\u30603\u901a\u308a\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u5bfe\u6570\u5229\u76ca\u7387\u306eScatter Plot\u306f\u4e0b\u56f3\u306e\u3088\u3046\u306b\u306a\u308b\uff0e\n\n![scatter01.png](https://qiita-image-store.s3.amazonaws.com/0/74152/dade1277-0976-0d5b-9b73-f8b266a9c3c1.png)\n\n\uff13\u3064\u3068\u3082\u3042\u307e\u308a\u5f37\u304f\u306a\u3044\uff08\u5f31\u3044\uff09\u6b63\u306e\u76f8\u95a2\u304c\u3042\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\uff0e\u3053\u308c\u3089\uff13\u3064\u306e\u3046\u3061\u304b\u3089\u771f\u3093\u4e2d\u306e\u30c7\u30fc\u30bf(stock2 vs. stock3\uff09\u3092\u3068\u308a\u3042\u3052\uff0c\u56de\u5e30\u5206\u6790\u3092\u884c\u3046\u3053\u3068\u306b\u3057\u305f\uff0e\u56e0\u307f\u306bstock2\u306f\u682a\u4fa1\u30b3\u30fc\u30c97203\uff0cstock3\u306f\u682a\u4fa1\u30b3\u30fc\u30c97267\u306e\u9298\u67c4\u3067\u3042\u308b\uff0e\n\n### \u7dda\u5f62\u30e2\u30c7\u30eb(Linear Model)\u306e\u9069\u7528\n\u307e\u305a\u521d\u3081\u306b\uff0cLinear Model\u3092\u7528\u3044\u3066\u56de\u5e30\u5206\u6790\u3092\u884c\u3063\u305f\uff0e\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\uff0c\u304a\u3088\u3073\u7dda\u5f62\u30e2\u30c7\u30eb\u306e\u56de\u5e30\u5206\u6790\u307e\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306acode\u3068\u3057\u305f\uff0e\n\n```py\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport statsmodels.api as sm\n\n    \ndef my_tof(s):\n\tf1 = float(s.replace(',', ''))\n\treturn f1\n\n# pandas read_csv()\nmy_colmn = ['Date', 'Open', 'High', 'Low', 'Close', 'Diff', 'Volume', 'cH', 'cI', 'cJ', 'cK', 'cL', 'cM', 'cN', 'cO']\n\nindex = pd.date_range(start='2014/1/1', end='2014/12/31', freq='B')\nstock_raw = pd.DataFrame(index=index)\nmydf = pd.DataFrame(index=index)\n\nstock1 = pd.read_csv('./x7201-2014.csv', index_col=0, parse_dates=True, skiprows=1, names=my_colmn, header=None)\nstock_raw['stock1'] = stock1[::-1].loc[:, 'Close']\nstock2 = pd.read_csv('./x7203-2014.csv', index_col=0, parse_dates=True, skiprows=1, names=my_colmn, header=None)\nstock_raw['stock2'] = stock2[::-1].loc[:, 'Close']\nstock3 = pd.read_csv('./x7267-2014.csv', index_col=0, parse_dates=True, skiprows=1, names=my_colmn, header=None)\nstock_raw['stock3'] = stock3[::-1].loc[:, 'Close']\n\nstock_raw.dropna(inplace=True)\nstock_base_label = ['stock1', 'stock2', 'stock3']\n\nfor st in stock_base_label:\n\tst_price = st + '_p'\n\tst_return = st + '_ret'\n\tst_log_return = st + '_lgret'\n\t\n\tmydf[st_price] = stock_raw[st].apply(my_tof)\n\tmydf[st_price].fillna(method='ffill', inplace=True)\n\tmydf[st_return] = mydf[st_price] / mydf[st_price].shift(1)\n\tmydf[st_log_return] = np.log(mydf[st_return])\n\n# scatter plotting\n\uff08\u4e2d\u7565\uff09\n\n# apply OLS model \nmydf.dropna(inplace=True)\n\nx1 = mydf['stock2_lgret'].values    # stock2 log-return\nx1a = sm.add_constant(x1)\ny1 = mydf['stock3_lgret'].values    # stock3 log-return\n\n# OLS (linear model)\nmd0 = sm.OLS(y1, x1a)\nres0 = md0.fit()\nprint res0.summary()\n\nplt.figure(figsize=(5,4))\nplt.scatter(mydf['stock2_lgret'], mydf['stock3_lgret'], c='b', alpha=0.6)\nplt.plot(x1, res0.fittedvalues, 'r-', label='Linear Model')\nplt.grid(True)\n\n```\n\n\u4e0a\u306e\u901a\u308a\uff0cstatsmodels.api.OLS() \u3092\u7528\u3044\u3066\u3044\u308b\uff0e\u3053\u306e\u7d50\u679c\uff0c\u4ee5\u4e0b\u306e\u30b0\u30e9\u30d5\u304c\u5f97\u3089\u308c\u305f\uff0e\n\n**Fig. stock2 vs. stock3 (Log Return) Linear Model**\n![scatter_md0.png](https://qiita-image-store.s3.amazonaws.com/0/74152/370f0587-cda1-8610-5392-49d8a4211344.png)\n\n### GLM (Gaussian distribution) \n\u6b21\u306bGLM\u306b\u3088\u308b\u56de\u5e30\u5206\u6790\u3092\u884c\u3046\uff0estatsmodels\u306eGLM\uff08\u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb\uff09\u3067\u306f\uff0c\u4f7f\u7528\u3067\u304d\u308b\u78ba\u7387\u5206\u5e03(Family\u3068\u547c\u3070\u308c\u308b\uff09\u3068\u3057\u3066\u4ee5\u4e0b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\uff0e\uff08Document\u3088\u308a\u629c\u7c8b\uff09\n\nFamilies for GLM(Generalized Linear Model)\n\n|  Family  |     The parent class for one-parameter exponential families. | Remark |\n|-------------------------|-----------------------------------------|-----------|\n| Binomial |     Binomial exponential family distribution. | \u4e8c\u9805\u5206\u5e03  |\n|  Gamma |     Gamma exponential family distribution.  |  \u30ac\u30f3\u30de\u5206\u5e03 |\n| Gaussian  |     Gaussian exponential family distribution. | \u30ac\u30a6\u30b9\u5206\u5e03 |\n| InverseGaussian |     InverseGaussian exponential family. | \u9006\u30ac\u30a6\u30b9\u5206\u5e03 | \n| NegativeBinomial |     Negative Binomial exponential family. | \u8ca0\u306e\u4e8c\u9805\u5206\u5e03 |\n| Poisson  |     Poisson exponential family. |  \u30dd\u30a2\u30bd\u30f3\u5206\u5e03 |\n\n\u307e\u305f\uff0c\u5404Family\u306b\u5bfe\u3057\u3066\uff0c\u4f7f\u7528\u3067\u304d\u308b\uff08Combination\u3068\u306a\u308b\uff09\u30ea\u30f3\u30af\u95a2\u6570\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\uff0e(Document\u3088\u308a\u629c\u7c8b\uff09\u30ea\u30f3\u30af\u95a2\u6570\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u3067\u304d\u308b\u304c\uff0c\u6307\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\uff0c\u30c7\u30a3\u30d5\u30a9\u30eb\u30c8\u306e\u3082\u306e\u304c\u4f7f\u7528\u3055\u308c\u308b\u3088\u3046\u3067\u3042\u308b\uff0e\n\n\n|             | ident | log | logit | probit | cloglog | pow | opow | nbinom | loglog | logc |\n|-------------|:----:|:---:|:----:|:---:|:---:|:--:|:---:|:---:|:-----:|:---:|\n|Gaussian     |   x   |  x  |       |        |         |  x  |      |        |        |      |\n|inv Gaussian |   x   |  x  |       |        |         |  x  |      |        |        |      |\n|binomial     |   x   |  x  |  x    |   x    |   x     | x   |   x  |        |   x    |   x  |\n|Poission     |   x   |  x  |       |        |         |  x  |      |        |        |      |\n|neg binomial |   x   |  x  |       |        |         |  x  |      | x      |        |      |\n|gamma        |   x   |  x  |       |        |         |  x  |      |        |        |      |\n\n\n\u307e\u305a\uff0cGaussian\u95a2\u6570\u3092\u7528\u3044\u3066\u8a08\u7b97\u3092\u884c\u3063\u305f\uff0eCode\u306f\uff0c\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n\n```py\n\n# apply GLM(Gaussian) model\nmd1 = sm.GLM(y1, x1a, family=sm.families.Gaussian())    # Gaussian()\nres1 = md1.fit()\nprint res1.summary()\n\nplt.figure(figsize=(5,4))\nplt.scatter(mydf['stock2_lgret'], mydf['stock3_lgret'], c='g', alpha=0.6)\nplt.plot(x1, res1.fittedvalues, 'r-', label='GLM(Gaussian)')\nplt.grid(True)\n\n```\n\n**Fig. stock2 vs. stock3 (GLM(gaussian dist.))**\n![scatter_md1.png](https://qiita-image-store.s3.amazonaws.com/0/74152/b04abf18-7f54-90e3-f19e-adbc89d514a5.png)\n\nGLM\u304c\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u305f\u7dda\u306f\uff0c\u4e0a\u56f3\u304b\u3089\u5168\u304f\u5909\u5316\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3042\u308b\uff0e\u8a08\u7b97\u7d50\u679c\u306esummary()\u3092\u6bd4\u8f03\u3059\u308b\uff0e\n\n**OLS\u306esummary**\n\n```\nIn [71]: print res0.summary()\n                            OLS Regression Results\n==============================================================================\nDep. Variable:                      y   R-squared:                       0.486\nModel:                            OLS   Adj. R-squared:                  0.484\nMethod:                 Least Squares   F-statistic:                     241.1\nDate:                Sun, 26 Jul 2015   Prob (F-statistic):           1.02e-38\nTime:                        16:18:16   Log-Likelihood:                 803.92\nNo. Observations:                 257   AIC:                            -1604.\nDf Residuals:                     255   BIC:                            -1597.\nDf Model:                           1\nCovariance Type:            nonrobust\n==============================================================================\n                 coef    std err          t      P>|t|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nconst         -0.0013      0.001     -1.930      0.055        -0.003  2.64e-05\nx1             0.7523      0.048     15.526      0.000         0.657     0.848\n==============================================================================\nOmnibus:                       10.243   Durbin-Watson:                   1.997\nProb(Omnibus):                  0.006   Jarque-Bera (JB):               16.017\nSkew:                          -0.235   Prob(JB):                     0.000333\nKurtosis:                       4.129   Cond. No.                         73.0\n==============================================================================\n```\n\n**GLM(Gaussian dist.)\u306esummary**\n\n```\nIn [72]: print res1.summary()\n\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:                      y   No. Observations:                  257\nModel:                            GLM   Df Residuals:                      255\nModel Family:                Gaussian   Df Model:                            1\nLink Function:               identity   Scale:                0.00011321157031\nMethod:                          IRLS   Log-Likelihood:                 803.92\nDate:                Sun, 26 Jul 2015   Deviance:                     0.028869\nTime:                        16:12:11   Pearson chi2:                   0.0289\nNo. Iterations:                     4\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nconst         -0.0013      0.001     -1.930      0.054        -0.003  2.02e-05\nx1             0.7523      0.048     15.526      0.000         0.657     0.847\n==============================================================================\n\n```\n\n\uff12\u3064\u306e\u51fa\u529b\u306f\u5185\u5bb9\u304c\u3060\u3044\u3076\u7570\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\uff0e\n\nOLS\u3067\u306f\uff0cR-squared, AIC, BIC\u306e\u6570\u5024\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u304c\uff0cGLM\u3067\u306f\u3053\u308c\u3089\u304c\u306a\u304f\uff0c\u4ee3\u308f\u308a\u306bDeviance\uff08\u9038\u8131\u5ea6\uff09\uff0cPearson chi2 \u7d71\u8a08\u91cf\u306a\u3069\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\uff0e\u4e21\u65b9\u306b\u3042\u308b\u3082\u306e\u3068\u3057\u3066\u306f\uff0cLog-Likelihood\uff08Log-\u5c24\u5ea6\uff09\u306e\u6570\u5024\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\uff0e\n\nGLM\u306e\u51fa\u529b\u304b\u3089\u306f\uff0cLink Function\u304c\"identity\"\uff08\u6052\u7b49\u30ea\u30f3\u30af\u95a2\u6570\uff09\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\uff0e\u307e\u305f\uff0cOLS\u3068GLM\u3067\u504f\u56de\u5e30\u4fc2\u6570\u304c\u540c\u3058\u5024(-0.0013, 0.7523)\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304b\u3089\uff0c\u56de\u5e30\u5206\u6790\u306e\u7d50\u679c\uff08\u5185\u5bb9\uff09\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u305f\uff0e\n\n### GLM (Gamma distribution)\n\n\u6b21\u306b\u5206\u5e03\u3068\u3057\u3066\u30ac\u30f3\u30de\u5206\u5e03(Gamma distribution)\u3092\u4f7f\u3063\u305fGLM\u306e\u8a08\u7b97\u3092\u8a66\u3057\u3066\u307f\u305f\uff0e\u30ac\u30f3\u30de\u5206\u5e03\u304c\u682a\u4fa1\u53ce\u76ca\u7387\u3092\u3046\u307e\u304f\u8868\u73fe\u3059\u308b\u304b\u3069\u3046\u304b\u306b\u3064\u3044\u3066\u306f\u8b70\u8ad6\u306e\u4f59\u5730\u304c\u3042\u308b\u304b\u3068\u601d\u3063\u305f\u304c\uff0cGLM\u3089\u3057\u3044\u8a08\u7b97\u3092\u8a66\u3059\u3053\u3068\u3092\u76ee\u7684\u306b\u3084\u3063\u3066\u307f\u305f\uff0e\n\n\u8a08\u7b97\u306e\u5b9f\u884c\u3067\u554f\u984c\u3068\u306a\u3063\u305f\u306e\u304c\uff0c\u5bfe\u6570\u682a\u4fa1\u53ce\u76ca\u7387\u3060\u3068\u682a\u4fa1\u4e0b\u843d\u6642\u306b\u30de\u30a4\u30ca\u30b9\u306e\u5024\u3092\u3068\u308b\u304c\u3053\u308c\u306f\u30ac\u30f3\u30de\u5206\u5e03\u306e\u7bc4\u56f2\u5916\u3068\u306a\u3063\u3066\u3057\u307e\u3046\uff0e\u305d\u3053\u3067\u5bfe\u6570\u3092\u53d6\u308b\u524d\u306e\u682a\u4fa1\u53ce\u76ca\u7387\u3092\uff59\u5024\u306b\u3057\u3066\u8a08\u7b97\u3092\u884c\u3063\u305f\uff0e\uff08\u5c11\u3057\u7121\u7406\u3084\u308a\u611f\u304c\u3042\u308b\u3053\u3068\u306f\u5426\u3081\u306a\u3044\u304c...\uff09\n\n```py\n# apply GLM(gamma) model\n\nx2 = x1 ; x2a = x1a\ny2 = mydf['stock3_ret'].values    # replaced\n\nmd2 = sm.GLM(y2, x2a, family=sm.families.Gamma())\nres2 = md2.fit()\n\n# print summary and plot fitting curve\nprint res2.summary()\nplt.figure(figsize=(5,4))\nplt.scatter(mydf['stock2_lgret'], mydf['stock3_ret'], c='c', alpha=0.6)\nplt.plot(x2, res2.fittedvalues, 'r-', label='GLM(Gamma)')\nplt.grid(True)\n\ny2_fit_log = np.log(res2.fittedvalues)\nplt.figure(figsize=(5,4))\nplt.scatter(mydf['stock2_lgret'], mydf['stock3_lgret'], c='c', alpha=0.6)\nplt.plot(x2, y2_fit_log, 'r-', label='GLM(Gamma)')\n\n```\n\n**Fig. stock2 vs. stock3 (GLM(gamma dist.))**\n**(log - ident)**\n![scatter_md2(log-ident).png](https://qiita-image-store.s3.amazonaws.com/0/74152/faa453a3-d8ae-4cd4-a3d0-0fbe32f1ad33.png)\n**(log - log)** \uff08y\u5024\u3092\u5909\u63db\u3057\u305f\uff09\n![scatter_md2(log-log).png](https://qiita-image-store.s3.amazonaws.com/0/74152/76ee799e-39f4-033f-fd71-3d5e39f1cc61.png)\n\n\u30b0\u30e9\u30d5\u3068\u3057\u3066\u306f\uff0c\u540c\u3058\u3088\u3046\u306a\u7d50\u679c\u3068\u306a\u3063\u305f\uff0esummary()\u3092\u306a\u304c\u3081\u3066\u307f\u308b\uff0e\n\n```\nIn [73]: print res2.summary()\n\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:                      y   No. Observations:                  257\nModel:                            GLM   Df Residuals:                      255\nModel Family:                   Gamma   Df Model:                            1\nLink Function:          inverse_power   Scale:               0.000113369003649\nMethod:                          IRLS   Log-Likelihood:                 803.72\nDate:                Sun, 26 Jul 2015   Deviance:                     0.028956\nTime:                        16:12:16   Pearson chi2:                   0.0289\nNo. Iterations:                     5\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nconst          1.0013      0.001   1502.765      0.000         1.000     1.003\nx1            -0.7491      0.048    -15.470      0.000        -0.844    -0.654\n==============================================================================\n\n```\n\nGLM(gaussian dist.)\u304b\u3089GLM(gamma dist.)\u306b\u5909\u3048\u3066\uff0c\u5fae\u5999\u306bLog-Likelihood\u306e\u6570\u5024\u3084Deviance\u304c\u5909\u308f\u3063\u3066\u3044\u308b\uff0e\u3057\u304b\u3057\u30e2\u30c7\u30eb\u304c\u6539\u826f\u3067\u304d\u305f\u3068\u3044\u3046\u307b\u3069\u306e\u5909\u5316\u304c\u306a\u3044\u3053\u3068\u306f\u78ba\u304b\u3067\u3042\u308b\uff0ey\u5024\u3092\u5909\u63db\u3057\u3066\u8a08\u7b97\u3057\u305f\u306e\u3067\uff0c\u504f\u56de\u5e30\u4fc2\u6570\u306f\u5225\u7269\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\uff0e\n\n\u524d\u5f8c\u3059\u308b\u304c\uff0c\u30c7\u30fc\u30bf\u306e\u6b63\u898f\u6027\u78ba\u8a8d\u306e\u305f\u3081\uff0cstock2\u3068stock3\u306e\u5bfe\u6570\u53ce\u76ca\u7387\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u4f5c\u56f3\u3057\u305f\uff0e\u4e0b\u56f3\u306e\u3088\u3046\u306a\u5f62\u72b6\u3067\u3042\u3063\u305f\uff0e\n\n![histogram2.png](https://qiita-image-store.s3.amazonaws.com/0/74152/4fb81d0c-15be-4d7a-b280-7fa260ef2f28.png)\n\n### \u3068\u308a\u3042\u3048\u305a\u306e\u7d50\u8ad6\n\n\u4eca\u56de\u306e\u30c7\u30fc\u30bf\u5206\u6790\u306b\u304a\u3044\u3066GLM\u9069\u7528\u306b\u3088\u308b\u30e2\u30c7\u30eb\u7cbe\u5ea6\u5411\u4e0a\u306f\u78ba\u8a8d\u3067\u304d\u306a\u304b\u3063\u305f\uff0e\u3053\u308c\u306f\u540c\u696d\u7a2e\u306e\u682a\u4fa1\uff08\u671f\u9593\u30821\u5e74\u7a0b\u5ea6\uff09\u3092\u898b\u305f\u305f\u3081\uff0c\u8907\u96d1\u306a\uff08\u975e\u7dda\u5f62\u306a\uff09\u95a2\u4fc2\u3068\u306a\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u305f\u3081\u3068\u8003\u3048\u3089\u308c\u308b\uff0e\u4f46\u3057\uff0c\u4eca\u5f8c\u3044\u308d\u3044\u308d\u306a\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u306b\u3042\u305f\u308a\u4f7f\u3048\u308b\u30c4\u30fc\u30eb\u304c\u5897\u3048\u308b\u3053\u3068\u306f\u60aa\u3044\u3053\u3068\u3067\u306f\u306a\u3044\u306e\u3067\uff0cGLM\u4ed6\uff0c\u9ad8\u5ea6\u306a\u56de\u5e30\u5206\u6790\u624b\u6cd5\u306b\u3064\u3044\u3066\u7406\u89e3\u3092\u6df1\u3081\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3046\uff0e\n\n\u4eca\u56de\u306e\uff08\u81ea\u52d5\u8eca\u30e1\u30fc\u30ab\u30fcA\u793e\u682a\u4fa1 vs. B\u793e\u682a\u4fa1\uff09\u3067\u306f\u5a01\u529b\u3092\u767a\u63ee\u3057\u306a\u304b\u3063\u305f\u304c\uff0c\u5c11\u3057\u6bdb\u8272\u306e\u9055\u3063\u305f\u7d44\u307f\u5408\u308f\u305b\uff0c\u4f8b\u3048\u3070\uff08\u6700\u9ad8\u6c17\u6e29 vs. \u30d3\u30fc\u30eb\u4f1a\u793e\u682a\u4fa1\uff09\u306a\u3069\u3067\u6709\u52b9\u306b\u4f7f\u3048\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u671f\u5f85\u3057\u3066\u3044\u308b\uff0e\n\n### \u53c2\u8003\u6587\u732e\n- statsmodels\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n[http://statsmodels.sourceforge.net/stable/glm.html](http://statsmodels.sourceforge.net/stable/glm.html)\n\n- \u7d71\u8a08\u5b66\u5165\u9580\uff08\u6771\u4eac\u5927\u5b66\u6559\u990a\u5b66\u90e8\u7d71\u8a08\u5b66\u6559\u5ba4 \u7de8\uff09\n[http://www.utp.or.jp/bd/978-4-13-042065-5.html](http://www.utp.or.jp/bd/978-4-13-042065-5.html)\n\n- \u30c7\u30fc\u30bf\u89e3\u6790\u306e\u305f\u3081\u306e\u7d71\u8a08\u30e2\u30c7\u30ea\u30f3\u30b0\u5165\u9580\uff08\u4e45\u4fdd\u8457\uff0c\u5ca9\u6ce2\u66f8\u5e97\uff09\n[https://www.iwanami.co.jp/cgi-bin/isearch?isbn=ISBN978-4-00-006973-1](https://www.iwanami.co.jp/cgi-bin/isearch?isbn=ISBN978-4-00-006973-1)\n\n"}