{"tags": ["Ruby", "\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3"], "context": " More than 1 year has passed since last update.\u306a\u3093\u3068\u306a\u304f\u306f\u7406\u89e3\u3057\u3066\u3044\u308b\u3051\u3069\u3001\u304d\u3061\u3093\u3068\u628a\u63e1\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u308b\n\n\u300c\u632f\u308b\u821e\u3044\u306b\u95a2\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u300d\u306b\u5c5e\u3059\u308b\u3002Template Method \u30d1\u30bf\u30fc\u30f3\u306e\u76ee\u7684\u306f\u3001\u3042\u308b\u51e6\u7406\u306e\u304a\u304a\u307e\u304b\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u3042\u3089\u304b\u3058\u3081\u6c7a\u3081\u3066\u304a\u3044\u3066\u3001\u305d\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5177\u4f53\u7684\u306a\u8a2d\u8a08\u3092\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u4efb\u305b\u308b\u3053\u3068\u3067\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u30b7\u30b9\u30c6\u30e0\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u624b\u6bb5\u3068\u3057\u3066\u3088\u304f\u6d3b\u7528\u3055\u308c\u308b\u3002\n\n\nTemplate Method \u30d1\u30bf\u30fc\u30f3 - Wikipedia\n\n\n\u3064\u304b\u3044\u307f\u3061\n\n\u91cd\u8907\u3057\u305f\u5b9f\u88c5\u306e\u6d17\u7df4\u30fb\u6574\u7406\n\u6d41\u308c\u306f\u4e00\u7dd2\u3060\u3051\u308c\u3069\u3082\u3001\u5185\u90e8\u306e\u51e6\u7406\u304c\u7570\u306a\u308b\u5b9f\u88c5\u306b\u304a\u3044\u3066\u3001\u6d41\u308c\u3068\u3001\u5185\u90e8\u306e\u51e6\u7406\u306e\u5b9f\u88c5\u3092\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n\n\u500b\u5225\u306e\u51e6\u7406\u306e\u5b9f\u88c5\u3060\u3051\u3067\u3001\u6a5f\u80fd\u304c\u8ffd\u52a0\u3067\u304d\u308b\n\n\n\n\n\u5177\u4f53\u7684\u306a\u4f7f\u3044\u9053\n\n\u8907\u6570\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u306e\u7d50\u679c\u306e\u51fa\u529b(TXT\u3001HTML\u3001CSV)\n\u8907\u6570\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u51e6\u7406(HTTP\u3001FTP\u3001SCP\u7b49)\n\n\n\u5b9f\u88c5\u4f8b\n\u914d\u5217\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001HTML\u3084\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u51fa\u529b\u3059\u308b class \u3092\u4f5c\u3063\u3066\u307f\u308b\n\nStringLister : \u57fa\u5e95 class\nPlainTextStringLister : \u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u51fa\u529b\nHtmlStringLister : HTML\u3067\u51fa\u529b\n\n\nfactory_method.rb\n\n# \u57fa\u5e95class\n#\nclass StringLister\n  attr_reader :items\n  def initialize(items)\n    @items = items\n  end\n\n  def header; end\n\n  def body(item)\n    # \u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u304a\u3044\u3066\u3001\n    # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u304c\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3055\u308c\u308b\u3053\u3068\u3092\u8981\u6c42\u3059\u308b\u5834\u5408\u3001\n    # \u3053\u306e\u4f8b\u5916\u3092\u9001\u51fa\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n    #\n    raise NotImplementedError\n  end\n\n  def footer; end\n\n  # \u30d8\u30c3\u30c0\u3001\u672c\u6587\u3001\u30d5\u30c3\u30bf\u306e\u9806\u306b\u51fa\u529b\u3059\u308b\n  def display\n    result = []\n    result << header\n    items.each{|item| result << body(item)}\n    result << footer\n    result.compact.join(\"\\n\")\n  end\nend\n\nclass PlainTextStringLister < StringLister\n  def body(item)\n    item\n  end\nend\n\nclass HtmlStringLister < StringLister\n  def header\n    '<html><body>'\n  end\n\n  def body(item)\n    \"<div>#{item}</div>\"\n  end\n\n  def footer \n    '<html><body>'\n  end\nend\n\nitems = %w[abc def ghi]\nputs PlainTextStringLister.new(items).display\n# abc\n# def\n# ghi\n\nputs HtmlStringLister.new(items).display\n# <html><body>\n# <div>abc</div>\n# <div>def</div>\n# <div>ghi</div>\n# <html><body>\n\n\n\n#initialize\u3001#display \u3068\u3044\u3063\u305f\u3001\u51e6\u7406\u306e\u6d41\u308c\u306e\u90e8\u5206\u306f\u57fa\u5e95class\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\nPlainTextStringLister\u3001HtmlStringLister \u3067\u306f\u3001\u500b\u5225\u306e\u5b9f\u88c5\u306b\u96c6\u4e2d\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\n\n\nPlainTextStringLister \u306b\u81f3\u3063\u3066\u306f\u3001#body \u306e\u5b9f\u88c5\u306e\u307f\u3067\u6e08\u3093\u3060\n\n\n\u3053\u306e\u5f8c\u3001CSV\u51fa\u529b\u304c\u5fc5\u8981\u306b\u306a\u3063\u3066\u3082\u3001StringLister\u3092\u7d99\u627f\u3059\u308b\u3060\u3051\u3067\u3001\u6700\u4f4e\u9650\u306e\u5b9f\u88c5\u3067\u5b9f\u73fe\u3067\u304d\u308b\n\n\n\u7b2c\u4e00\u7d1a\u95a2\u6570\u3092\u4f7f\u7528\u3057\u305f Template Method \u30d1\u30bf\u30fc\u30f3\nStringLister \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5f15\u6570\u3067\u6e21\u3059\u65b9\u6cd5\n\u95a2\u6570\u3092\u5909\u6570\u306b\u3067\u304d\u308b Ruby \u3063\u307d\u3044\u3084\u308a\u65b9\n\u67d4\u8edf\u306b\u5b9f\u88c5\u3059\u308b\u306a\u3089\u3070\u3053\u3063\u3061\u306e\u65b9\u304c\u826f\u3044\u3068\u601d\u3046\n\u305f\u3060\u3001\u3053\u308c\u3063\u3066\u3069\u3061\u3089\u304b\u3068\u8a00\u3046\u3068\u3001Strategy \u30d1\u30bf\u30fc\u30f3 \u306b\u306a\u308b?\n\ntemplate_method.rb\n# \u57fa\u5e95class\n#\nclass StringLister\n  attr_reader :items\n  def initialize(items, options={}, &body)\n    @items = items\n    @header = options[:header] if options.has_key?(:header)\n    @body   = body\n    @footer = options[:footer] if options.has_key?(:footer)\n  end\n\n  # \u30d8\u30c3\u30c0\u3001\u672c\u6587\u3001\u30d5\u30c3\u30bf\u306e\u9806\u306b\u51fa\u529b\u3059\u308b\n  def display\n    result = []\n    result << @header.call if @header\n    items.each{|item| result << @body.call(item)}\n    result << @footer.call if @footer\n    result.compact.join(\"\\n\")\n  end\nend\n\nitems = %w[abc def ghi]\ndisp = StringLister.new(items) do |item|\n  item\nend.display\nputs disp\n\ndisp = StringLister.new(items,\n  :header => ->(){ \"<html></body>\" },\n  :footer => ->(){ \"</body></html>\" }\n) do |item|\n  \"<div>#{item}</div>\"\nend.display\nputs disp\n\n\n\nStrategy \u30d1\u30bf\u30fc\u30f3 \u3068\u306e\u9055\u3044\n\nTemplate Method \u30d1\u30bf\u30fc\u30f3 : \u51e6\u7406\u3092\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u4efb\u305b\u308b\u30d1\u30bf\u30fc\u30f3\nStrategy \u30d1\u30bf\u30fc\u30f3 : \u51e6\u7406\u3092\u79fb\u8b72\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\n\n\u53c2\u8003\n\nTemplate Method \u30d1\u30bf\u30fc\u30f3 - Wikipedia\n\u95a2\u6570\u578b\u306e\u8003\u3048\u65b9: \u95a2\u6570\u578b\u306e\u30c7\u30b6\u30a4\u30f3\u30fb\u30d1\u30bf\u30fc\u30f3\u3001\u7b2c 1 \u56de\nTemplate Method\u30d1\u30bf\u30fc\u30f3#Strategy\u30d1\u30bf\u30fc\u30f3\u3068\u306e\u95a2\u4fc2\n\n\u2192 Factory Method \u30d1\u30bf\u30fc\u30f3 \u306b\u7d9a\u304f\n\u2192 Strategy \u30d1\u30bf\u30fc\u30f3 \u306b\u7d9a\u304f\n\u306a\u3093\u3068\u306a\u304f\u306f\u7406\u89e3\u3057\u3066\u3044\u308b\u3051\u3069\u3001\u304d\u3061\u3093\u3068\u628a\u63e1\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u308b\n\n![](http://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Template_Method_UML_class_diagram.svg/450px-Template_Method_UML_class_diagram.svg.png)\n\n```\n\u300c\u632f\u308b\u821e\u3044\u306b\u95a2\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u300d\u306b\u5c5e\u3059\u308b\u3002Template Method \u30d1\u30bf\u30fc\u30f3\u306e\u76ee\u7684\u306f\u3001\u3042\u308b\u51e6\u7406\u306e\u304a\u304a\u307e\u304b\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u3042\u3089\u304b\u3058\u3081\u6c7a\u3081\u3066\u304a\u3044\u3066\u3001\u305d\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5177\u4f53\u7684\u306a\u8a2d\u8a08\u3092\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u4efb\u305b\u308b\u3053\u3068\u3067\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u30b7\u30b9\u30c6\u30e0\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u624b\u6bb5\u3068\u3057\u3066\u3088\u304f\u6d3b\u7528\u3055\u308c\u308b\u3002\n```\n\n- [Template Method \u30d1\u30bf\u30fc\u30f3 - Wikipedia](http://ja.wikipedia.org/wiki/Template_Method_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3)\n\n## \u3064\u304b\u3044\u307f\u3061\n\n- \u91cd\u8907\u3057\u305f\u5b9f\u88c5\u306e\u6d17\u7df4\u30fb\u6574\u7406\n- \u6d41\u308c\u306f\u4e00\u7dd2\u3060\u3051\u308c\u3069\u3082\u3001\u5185\u90e8\u306e\u51e6\u7406\u304c\u7570\u306a\u308b\u5b9f\u88c5\u306b\u304a\u3044\u3066\u3001\u6d41\u308c\u3068\u3001\u5185\u90e8\u306e\u51e6\u7406\u306e\u5b9f\u88c5\u3092\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n  - \u500b\u5225\u306e\u51e6\u7406\u306e\u5b9f\u88c5\u3060\u3051\u3067\u3001\u6a5f\u80fd\u304c\u8ffd\u52a0\u3067\u304d\u308b\n\n### \u5177\u4f53\u7684\u306a\u4f7f\u3044\u9053\n\n- \u8907\u6570\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u306e\u7d50\u679c\u306e\u51fa\u529b(TXT\u3001HTML\u3001CSV)\n- \u8907\u6570\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u51e6\u7406(HTTP\u3001FTP\u3001SCP\u7b49)\n\n## \u5b9f\u88c5\u4f8b\n\n\u914d\u5217\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001HTML\u3084\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u51fa\u529b\u3059\u308b class \u3092\u4f5c\u3063\u3066\u307f\u308b\n\n- StringLister : \u57fa\u5e95 class\n- PlainTextStringLister : \u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u51fa\u529b\n- HtmlStringLister : HTML\u3067\u51fa\u529b\n\n```factory_method.rb\n\n# \u57fa\u5e95class\n#\nclass StringLister\n  attr_reader :items\n  def initialize(items)\n    @items = items\n  end\n\n  def header; end\n\n  def body(item)\n    # \u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u304a\u3044\u3066\u3001\n    # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u304c\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3055\u308c\u308b\u3053\u3068\u3092\u8981\u6c42\u3059\u308b\u5834\u5408\u3001\n    # \u3053\u306e\u4f8b\u5916\u3092\u9001\u51fa\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n    #\n    raise NotImplementedError\n  end\n\n  def footer; end\n\n  # \u30d8\u30c3\u30c0\u3001\u672c\u6587\u3001\u30d5\u30c3\u30bf\u306e\u9806\u306b\u51fa\u529b\u3059\u308b\n  def display\n    result = []\n    result << header\n    items.each{|item| result << body(item)}\n    result << footer\n    result.compact.join(\"\\n\")\n  end\nend\n\nclass PlainTextStringLister < StringLister\n  def body(item)\n    item\n  end\nend\n\nclass HtmlStringLister < StringLister\n  def header\n    '<html><body>'\n  end\n\n  def body(item)\n    \"<div>#{item}</div>\"\n  end\n\n  def footer \n    '<html><body>'\n  end\nend\n\nitems = %w[abc def ghi]\nputs PlainTextStringLister.new(items).display\n# abc\n# def\n# ghi\n\nputs HtmlStringLister.new(items).display\n# <html><body>\n# <div>abc</div>\n# <div>def</div>\n# <div>ghi</div>\n# <html><body>\n```\n\n- #initialize\u3001#display \u3068\u3044\u3063\u305f\u3001\u51e6\u7406\u306e\u6d41\u308c\u306e\u90e8\u5206\u306f\u57fa\u5e95class\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\nPlainTextStringLister\u3001HtmlStringLister \u3067\u306f\u3001\u500b\u5225\u306e\u5b9f\u88c5\u306b\u96c6\u4e2d\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\n  - PlainTextStringLister \u306b\u81f3\u3063\u3066\u306f\u3001#body \u306e\u5b9f\u88c5\u306e\u307f\u3067\u6e08\u3093\u3060\n- \u3053\u306e\u5f8c\u3001CSV\u51fa\u529b\u304c\u5fc5\u8981\u306b\u306a\u3063\u3066\u3082\u3001StringLister\u3092\u7d99\u627f\u3059\u308b\u3060\u3051\u3067\u3001\u6700\u4f4e\u9650\u306e\u5b9f\u88c5\u3067\u5b9f\u73fe\u3067\u304d\u308b\n\n## \u7b2c\u4e00\u7d1a\u95a2\u6570\u3092\u4f7f\u7528\u3057\u305f Template Method \u30d1\u30bf\u30fc\u30f3\n\nStringLister \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5f15\u6570\u3067\u6e21\u3059\u65b9\u6cd5\n\u95a2\u6570\u3092\u5909\u6570\u306b\u3067\u304d\u308b Ruby \u3063\u307d\u3044\u3084\u308a\u65b9\n\u67d4\u8edf\u306b\u5b9f\u88c5\u3059\u308b\u306a\u3089\u3070\u3053\u3063\u3061\u306e\u65b9\u304c\u826f\u3044\u3068\u601d\u3046\n\u305f\u3060\u3001\u3053\u308c\u3063\u3066\u3069\u3061\u3089\u304b\u3068\u8a00\u3046\u3068\u3001Strategy \u30d1\u30bf\u30fc\u30f3 \u306b\u306a\u308b?\n\n```template_method.rb\n# \u57fa\u5e95class\n#\nclass StringLister\n  attr_reader :items\n  def initialize(items, options={}, &body)\n    @items = items\n    @header = options[:header] if options.has_key?(:header)\n    @body   = body\n    @footer = options[:footer] if options.has_key?(:footer)\n  end\n\n  # \u30d8\u30c3\u30c0\u3001\u672c\u6587\u3001\u30d5\u30c3\u30bf\u306e\u9806\u306b\u51fa\u529b\u3059\u308b\n  def display\n    result = []\n    result << @header.call if @header\n    items.each{|item| result << @body.call(item)}\n    result << @footer.call if @footer\n    result.compact.join(\"\\n\")\n  end\nend\n\nitems = %w[abc def ghi]\ndisp = StringLister.new(items) do |item|\n  item\nend.display\nputs disp\n\ndisp = StringLister.new(items,\n  :header => ->(){ \"<html></body>\" },\n  :footer => ->(){ \"</body></html>\" }\n) do |item|\n  \"<div>#{item}</div>\"\nend.display\nputs disp\n```\n\n## Strategy \u30d1\u30bf\u30fc\u30f3 \u3068\u306e\u9055\u3044\n\n- Template Method \u30d1\u30bf\u30fc\u30f3 : \u51e6\u7406\u3092\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u4efb\u305b\u308b\u30d1\u30bf\u30fc\u30f3\n- Strategy \u30d1\u30bf\u30fc\u30f3 : \u51e6\u7406\u3092\u79fb\u8b72\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\n## \u53c2\u8003\n\n- [Template Method \u30d1\u30bf\u30fc\u30f3 - Wikipedia](http://ja.wikipedia.org/wiki/Template_Method_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3)\n- [\u95a2\u6570\u578b\u306e\u8003\u3048\u65b9: \u95a2\u6570\u578b\u306e\u30c7\u30b6\u30a4\u30f3\u30fb\u30d1\u30bf\u30fc\u30f3\u3001\u7b2c 1 \u56de](http://www.ibm.com/developerworks/jp/java/library/j-ft10/)\n- [Template Method\u30d1\u30bf\u30fc\u30f3#Strategy\u30d1\u30bf\u30fc\u30f3\u3068\u306e\u95a2\u4fc2](http://www.aerith.net/design/TemplateMethod-j.html#Strategy)\n\n\u2192 [Factory Method \u30d1\u30bf\u30fc\u30f3](http://qiita.com/kasei-san/items/2d56fd1114b98b9b9905) \u306b\u7d9a\u304f\n\u2192 [Strategy \u30d1\u30bf\u30fc\u30f3](http://qiita.com/kasei-san/items/91ab181443df03da0343) \u306b\u7d9a\u304f\n"}