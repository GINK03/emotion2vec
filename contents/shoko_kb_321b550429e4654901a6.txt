{"tags": ["Meteor"], "context": "\n\n\u6982\u8981\n\nReact - Meteor\uff08Tutorial\uff09...simple-todos\u3092\u4f5c\u6210\n\nVirtual DOM\u3067\u9ad8\u901f\u306bDOM\u3092\u64cd\u4f5c\u3057\u305f\u3044\n\n\nDOM\uff08Documment Object Model\uff09...\u30bf\u30b0\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u307f\u306a\u3057\u3001\u5404\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u69d8\u3005\u306a\u547d\u4ee4\u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306bJavaScript\u304cHTML/XML\u3092\u8a8d\u8b58\u3057\u306a\u304a\u3057\u305f\u69cb\u9020\u4f53\u3002\n\nVirtualDOM...DOM\u3092JSON\u306b\u66f8\u51fa\u3057\u305f\u3082\u306e\u3002\nDOM\u306b\u64cd\u4f5c\u3059\u308b\u5834\u5408\u306f\u3001\u4eee\u60f3DOM\u3092\u64cd\u4f5c\u3057\u305f\u7d50\u679c\u3092DOM\u306b\u53cd\u6620\u3059\u308b\u3002\nDOM\u3092\u76f4\u63a5\u64cd\u4f5c\u3057\u306a\u304f\u306a\u308b\u305f\u3081\u3001\u6700\u5c0f\u9650\u306eDOM\u64cd\u4f5c\u3060\u3051\u3067\u6e08\u307e\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\n[VirtualDOM\u3068\u306f@\u306e\u3093\u3073\u308a\u30b3\u30fc\u30c9]\n\n\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u6307\u5411\n\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u95a2\u6570\u578b\u8a00\u8a9e\uff08\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\uff09\n\n\n\u30b5\u30f3\u30d7\u30eb\uff08DB\u672a\u63a5\u7d9a\uff09\n\nsimple-todos\n\n1.\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\nCreating your first app @ Meteor Tutorial\n\n\nconsole\n$ meteor cretate simple-todos\n$ cd simple-todos/\n\n\n\nnpm\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\nconsole\n$ meteor npm install\n\n\n3.\u8d77\u52d5\u78ba\u8a8d\n\nconsole\n$ meteor\n\n\n4.react\u8ffd\u52a0\n\nDefining views with React components @ Meteor Tutorial\n\n\nconsole\n$ meteor npm install --save react react-dom\n\n\n5.React View Component \u5b9a\u7fa9\n\nclient/main.html\n<head>\n  <title>Todo List</title>\n</head>\n\n<body>\n  <div id=\"render-target\"></div><!-- App Component \u3092\u5c55\u958b-->\n</body>\n\n\n\nclient/main.js\nimport React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport App from '../imports/ui/App.jsx';\n\nMeteor.startup(() => {\n  // 'render-target'\u306bApp Component\u3092\u5c55\u958b\u3059\u308b\u3002\n  render(<App />, document.getElementById('render-target'));\n});\n\n\n\n\nimports/ui/App.jsx\nimport React, { Component } from 'react';\n\nimport Task from './Task.jsx';\n\n// App component - represents the whole app\nexport default class App extends Component {\n  getTasks() {\n    // JSON\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\u3002\n    return [\n      { _id: 1, text: 'This is task 1' },\n      { _id: 2, text: 'This is task 2' },\n      { _id: 3, text: 'This is task 3' },\n    ];\n  }\n\n  // Task\u3092\u53d6\u5f97\u3057\u3001map\u95a2\u6570\u3067Task\u3092\u8868\u793a\u3059\u308b\u3002\n  renderTasks() {\n    return this.getTasks().map((task) => (<Task key={task._id} task={task} />));\n  }\n\n  // App render <App/>\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List</h1>\n        </header>\n\n        <ul>\n          {this.renderTasks()} \n        </ul>\n      </div>\n    );\n  }\n}\n\n\n\nimports/ui/Task.jsx\nimport React, { Component, PropTypes } from 'react';\n\n// Task component - represents a single todo item\nexport default class Task extends Component {\n  render() {\n    return (\n      <li>{this.props.task.text}</li>\n      //<li>{this.props.task.text}(id={this.props.task._id})</li>\n    );\n  }\n}\n\nTask.propTypes = {\n  // This component gets the task to display through a React prop.\n  // We can use propTypes to indicate it is required\n  task: PropTypes.object.isRequired,\n};\n\n\n\nclient/main.css\n/* CSS declarations go here */\nbody {\n  font-family: sans-serif;\n  background-color: #315481;\n  background-image: linear-gradient(to bottom, #315481, #918e82 100%);\n  background-attachment: fixed;\n\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 0;\n  margin: 0;\n\n  font-size: 14px;\n}\n\n.container {\n  max-width: 600px;\n  margin: 0 auto;\n  min-height: 100%;\n  background: white;\n}\n\nheader {\n  background: #d2edf4;\n  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);\n  padding: 20px 15px 15px 15px;\n  position: relative;\n}\n\n#login-buttons {\n  display: block;\n}\n\nh1 {\n  font-size: 1.5em;\n  margin: 0;\n  margin-bottom: 10px;\n  display: inline-block;\n  margin-right: 1em;\n}\n\nform {\n  margin-top: 10px;\n  margin-bottom: -10px;\n  position: relative;\n}\n\n.new-task input {\n  box-sizing: border-box;\n  padding: 10px 0;\n  background: transparent;\n  border: none;\n  width: 100%;\n  padding-right: 80px;\n  font-size: 1em;\n}\n\n.new-task input:focus{\n  outline: 0;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n  background: white;\n}\n\n.delete {\n  float: right;\n  font-weight: bold;\n  background: none;\n  font-size: 1em;\n  border: none;\n  position: relative;\n}\n\nli {\n  position: relative;\n  list-style: none;\n  padding: 15px;\n  border-bottom: #eee solid 1px;\n}\n\nli .text {\n  margin-left: 10px;\n}\n\nli.checked {\n  color: #888;\n}\n\nli.checked .text {\n  text-decoration: line-through;\n}\n\nli.private {\n  background: #eee;\n  border-color: #ddd;\n}\n\nheader .hide-completed {\n  float: right;\n}\n\n.toggle-private {\n  margin-left: 5px;\n}\n\n@media (max-width: 600px) {\n  li {\n    padding: 12px 15px;\n  }\n\n  .search {\n    width: 150px;\n    clear: both;\n  }\n\n  .new-task input {\n    padding-bottom: 5px;\n  }\n}\n\n\n6.\u52d5\u4f5c\u78ba\u8a8d\n\nconsole\n$ meteor\n\n\n\nDB\u63a5\u7d9a\n\nStoring tasks in a collection @ Meteor Tutorial\nMongoDB\u306etasks\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068Task\u3092\u95a2\u9023\u4ed8\u3051\u308b\u3002 \n\n\nimports/api/tasks.js\n  :\nimport { Mongo } from 'meteor/mongo';\nexport const Tasks = new Mongo.Collection('tasks');\n  :\n\n\n\nserver/main.js\n  :\nimport '../imports/api/tasks.js';\n  :\n\n\n\n\nReact Meteor \u95a2\u9023\u4ed8\u3051\n\nReact Component\u306b\u542b\u307e\u308c\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u3001Atmosphere \u30d1\u30c3\u30b1\u30fc\u30b8 react-meteor-data\u3092\u4f7f\u7528\u3059\u308b\nreact-meteor-data\u3067\u306f\u3001Meteor\u306e\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30c7\u30fc\u30bf\u3092React\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u968e\u5c64\u306b\u53d7\u3051\u6e21\u3059\u30c7\u30fc\u30bf\u30b3\u30f3\u30c6\u30ca\u3092\u751f\u6210\u3067\u304d\u308b\u3002\n\n\nconsole\n$ meteor npm install --save react-addons-pure-render-mixin\n$ meteor add react-meteor-data\n\n\n\nApp.jsx\nimport React, { Component, PropTypes } from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.jsx';\n\n// \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306b\u63d0\u793a\u3055\u308c\u308bApp Component\n// App component - represents the whole app\nclass App extends Component {\n// export default class App extends Component {\n\n  // getTasks() {\n  //   // JSON\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\u3002\n  //   return [\n  //     { _id: 1, text: 'This is task 1' },\n  //     { _id: 2, text: 'This is task 2' },\n  //     { _id: 3, text: 'This is task 3' },\n  //   ];\n  // }\n\n  // Task\u3092\u53d6\u5f97\u3057\u3001map\u95a2\u6570\u3067Task\u3092\u8868\u793a\u3059\u308b\u3002\n  renderTasks() {\n    // (3)App(this).props\u306b\u5bfe\u3057\u3066\u3001Task Component\u3092\u8868\u793a\u3059\u308b\u3002\n    return this.props.tasks.map((task) => (\n    // return this.getTasks().map((task) => (\n      <Task key={task._id} task={task} />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List</h1>\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  // (2) App(this).props.tasks\n  tasks: PropTypes.array.isRequired,\n};\n\nexport default createContainer(() => {\n    return {\n      // (1)tasks\u306bDB\u306eTasks(tasks)\u306e\u5168\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001\u30d5\u30a7\u30c3\u30c1\u3059\u308b\n      tasks: Tasks.find({}).fetch(),\n    }\n  };\n}, App);\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d \nDB\u306b\u30c0\u30df\u30fc\u30c7\u30fc\u30bf\u30fc\u3092\u767b\u9332\u3057\u3001DB\u304b\u3089\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\nconsole\n$ meteor mongo\n> db.tasks.insert({ text: \"Hello world!\", createdAt: new Date() });\n> exit\n$ meteor\n\n\n\n\n\u30c7\u30fc\u30bf\u8ffd\u52a0\n\nAdding tasks with a form @ Meteor Tutorial\n\n# \u6982\u8981\n\n- [React - Meteor](https://www.meteor.com/tutorials/react/creating-an-app)\uff08Tutorial\uff09...simple-todos\u3092\u4f5c\u6210\n\n- **Virtual DOM**\u3067\u9ad8\u901f\u306bDOM\u3092\u64cd\u4f5c\u3057\u305f\u3044\n - **DOM**\uff08Documment Object Model\uff09...\u30bf\u30b0\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u307f\u306a\u3057\u3001\u5404\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u69d8\u3005\u306a\u547d\u4ee4\u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306bJavaScript\u304cHTML/XML\u3092\u8a8d\u8b58\u3057\u306a\u304a\u3057\u305f\u69cb\u9020\u4f53\u3002\n - **VirtualDOM**...DOM\u3092JSON\u306b\u66f8\u51fa\u3057\u305f\u3082\u306e\u3002\n - DOM\u306b\u64cd\u4f5c\u3059\u308b\u5834\u5408\u306f\u3001\u4eee\u60f3DOM\u3092\u64cd\u4f5c\u3057\u305f\u7d50\u679c\u3092DOM\u306b\u53cd\u6620\u3059\u308b\u3002\n - DOM\u3092\u76f4\u63a5\u64cd\u4f5c\u3057\u306a\u304f\u306a\u308b\u305f\u3081\u3001\u6700\u5c0f\u9650\u306eDOM\u64cd\u4f5c\u3060\u3051\u3067\u6e08\u307e\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\n - [VirtualDOM\u3068\u306f@\u306e\u3093\u3073\u308a\u30b3\u30fc\u30c9]\n- \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u6307\u5411\n- \u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n- \u95a2\u6570\u578b\u8a00\u8a9e\uff08\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\uff09\n\n# \u30b5\u30f3\u30d7\u30eb\uff08DB\u672a\u63a5\u7d9a\uff09\n\n- simple-todos\n\n1.\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\n- [Creating your first app @ Meteor Tutorial](https://www.meteor.com/tutorials/react/creating-an-app)\n\n```bash:console\n$ meteor cretate simple-todos\n$ cd simple-todos/\n```\n\n2. npm\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash:console\n$ meteor npm install\n```\n\n3.\u8d77\u52d5\u78ba\u8a8d\n\n```bash:console\n$ meteor\n```\n\n4.react\u8ffd\u52a0\n\n- [Defining views with React components @ Meteor Tutorial](https://www.meteor.com/tutorials/react/components)\n\n```bash:console\n$ meteor npm install --save react react-dom\n```\n\n5.React View Component \u5b9a\u7fa9\n\n\n```html:client/main.html\n<head>\n  <title>Todo List</title>\n</head>\n\n<body>\n  <div id=\"render-target\"></div><!-- App Component \u3092\u5c55\u958b-->\n</body>\n```\n\n```js:client/main.js\nimport React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport App from '../imports/ui/App.jsx';\n\nMeteor.startup(() => {\n  // 'render-target'\u306bApp Component\u3092\u5c55\u958b\u3059\u308b\u3002\n  render(<App />, document.getElementById('render-target'));\n});\n\n```\n\n```jsx:imports/ui/App.jsx\nimport React, { Component } from 'react';\n\nimport Task from './Task.jsx';\n\n// App component - represents the whole app\nexport default class App extends Component {\n  getTasks() {\n    // JSON\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\u3002\n    return [\n      { _id: 1, text: 'This is task 1' },\n      { _id: 2, text: 'This is task 2' },\n      { _id: 3, text: 'This is task 3' },\n    ];\n  }\n\n  // Task\u3092\u53d6\u5f97\u3057\u3001map\u95a2\u6570\u3067Task\u3092\u8868\u793a\u3059\u308b\u3002\n  renderTasks() {\n    return this.getTasks().map((task) => (<Task key={task._id} task={task} />));\n  }\n\n  // App render <App/>\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List</h1>\n        </header>\n\n        <ul>\n          {this.renderTasks()} \n        </ul>\n      </div>\n    );\n  }\n}\n```\n\n```jsx:imports/ui/Task.jsx\nimport React, { Component, PropTypes } from 'react';\n\n// Task component - represents a single todo item\nexport default class Task extends Component {\n  render() {\n    return (\n      <li>{this.props.task.text}</li>\n      //<li>{this.props.task.text}(id={this.props.task._id})</li>\n    );\n  }\n}\n\nTask.propTypes = {\n  // This component gets the task to display through a React prop.\n  // We can use propTypes to indicate it is required\n  task: PropTypes.object.isRequired,\n};\n```\n\n```css:client/main.css\n/* CSS declarations go here */\nbody {\n  font-family: sans-serif;\n  background-color: #315481;\n  background-image: linear-gradient(to bottom, #315481, #918e82 100%);\n  background-attachment: fixed;\n\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  padding: 0;\n  margin: 0;\n\n  font-size: 14px;\n}\n\n.container {\n  max-width: 600px;\n  margin: 0 auto;\n  min-height: 100%;\n  background: white;\n}\n\nheader {\n  background: #d2edf4;\n  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);\n  padding: 20px 15px 15px 15px;\n  position: relative;\n}\n\n#login-buttons {\n  display: block;\n}\n\nh1 {\n  font-size: 1.5em;\n  margin: 0;\n  margin-bottom: 10px;\n  display: inline-block;\n  margin-right: 1em;\n}\n\nform {\n  margin-top: 10px;\n  margin-bottom: -10px;\n  position: relative;\n}\n\n.new-task input {\n  box-sizing: border-box;\n  padding: 10px 0;\n  background: transparent;\n  border: none;\n  width: 100%;\n  padding-right: 80px;\n  font-size: 1em;\n}\n\n.new-task input:focus{\n  outline: 0;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n  background: white;\n}\n\n.delete {\n  float: right;\n  font-weight: bold;\n  background: none;\n  font-size: 1em;\n  border: none;\n  position: relative;\n}\n\nli {\n  position: relative;\n  list-style: none;\n  padding: 15px;\n  border-bottom: #eee solid 1px;\n}\n\nli .text {\n  margin-left: 10px;\n}\n\nli.checked {\n  color: #888;\n}\n\nli.checked .text {\n  text-decoration: line-through;\n}\n\nli.private {\n  background: #eee;\n  border-color: #ddd;\n}\n\nheader .hide-completed {\n  float: right;\n}\n\n.toggle-private {\n  margin-left: 5px;\n}\n\n@media (max-width: 600px) {\n  li {\n    padding: 12px 15px;\n  }\n\n  .search {\n    width: 150px;\n    clear: both;\n  }\n\n  .new-task input {\n    padding-bottom: 5px;\n  }\n}\n```\n\n6.\u52d5\u4f5c\u78ba\u8a8d\n\n```bash:console\n$ meteor\n```\n\n# DB\u63a5\u7d9a\n\n- [Storing tasks in a collection @ Meteor Tutorial](https://www.meteor.com/tutorials/react/collections)\n\n- MongoDB\u306etasks\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068Task\u3092\u95a2\u9023\u4ed8\u3051\u308b\u3002 \n\n```jsx:imports/api/tasks.js\n  :\nimport { Mongo } from 'meteor/mongo';\nexport const Tasks = new Mongo.Collection('tasks');\n  :\n```\n\n```js:server/main.js\n  :\nimport '../imports/api/tasks.js';\n  :\n```\n\n----\n\n# React Meteor \u95a2\u9023\u4ed8\u3051\n\n- React Component\u306b\u542b\u307e\u308c\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u3001Atmosphere \u30d1\u30c3\u30b1\u30fc\u30b8 **react-meteor-data**\u3092\u4f7f\u7528\u3059\u308b\n- react-meteor-data\u3067\u306f\u3001Meteor\u306e\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30c7\u30fc\u30bf\u3092React\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u968e\u5c64\u306b\u53d7\u3051\u6e21\u3059\u30c7\u30fc\u30bf\u30b3\u30f3\u30c6\u30ca\u3092\u751f\u6210\u3067\u304d\u308b\u3002\n\n\n```bash:console\n$ meteor npm install --save react-addons-pure-render-mixin\n$ meteor add react-meteor-data\n```\n\n```jsx:App.jsx\nimport React, { Component, PropTypes } from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.jsx';\n\n// \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306b\u63d0\u793a\u3055\u308c\u308bApp Component\n// App component - represents the whole app\nclass App extends Component {\n// export default class App extends Component {\n\n  // getTasks() {\n  //   // JSON\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\u3002\n  //   return [\n  //     { _id: 1, text: 'This is task 1' },\n  //     { _id: 2, text: 'This is task 2' },\n  //     { _id: 3, text: 'This is task 3' },\n  //   ];\n  // }\n\n  // Task\u3092\u53d6\u5f97\u3057\u3001map\u95a2\u6570\u3067Task\u3092\u8868\u793a\u3059\u308b\u3002\n  renderTasks() {\n    // (3)App(this).props\u306b\u5bfe\u3057\u3066\u3001Task Component\u3092\u8868\u793a\u3059\u308b\u3002\n    return this.props.tasks.map((task) => (\n    // return this.getTasks().map((task) => (\n      <Task key={task._id} task={task} />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List</h1>\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  // (2) App(this).props.tasks\n  tasks: PropTypes.array.isRequired,\n};\n\nexport default createContainer(() => {\n    return {\n      // (1)tasks\u306bDB\u306eTasks(tasks)\u306e\u5168\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001\u30d5\u30a7\u30c3\u30c1\u3059\u308b\n      tasks: Tasks.find({}).fetch(),\n    }\n  };\n}, App);\n```\n\n- \u52d5\u4f5c\u78ba\u8a8d \n- DB\u306b\u30c0\u30df\u30fc\u30c7\u30fc\u30bf\u30fc\u3092\u767b\u9332\u3057\u3001DB\u304b\u3089\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n```bash:console\n$ meteor mongo\n> db.tasks.insert({ text: \"Hello world!\", createdAt: new Date() });\n> exit\n$ meteor\n```\n\n----\n\n# \u30c7\u30fc\u30bf\u8ffd\u52a0\n\n\n- [Adding tasks with a form @ Meteor Tutorial](https://www.meteor.com/tutorials/react/forms-and-events)\n\n\n"}