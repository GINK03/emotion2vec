{"context": " More than 1 year has passed since last update.\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u306e\u57fa\u790e\nspawn\u3067\u8efd\u91cf\u30b9\u30ec\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u3067\u30b9\u30b1\u30fc\u30eb\u3059\u308bFizzBuzz\u304c\u51fa\u6765\u308b\u306f\u305a...\u306f\u305a\n\nnon-mp\nmain() ->\n  printer(\"test message\").\nprinter(M) ->\n  io:format(\"M: ~p~n\",[M]).\n\n\n\nmp\nmain() ->\n  Pid = spawn(fun() -> printer() end),\n  Pid ! \"test message\".\n\nprinter() ->\n  receive\n    M -> io:format(\"M: ~p~n\",[M])\n  end. \n\n\n\n\u307e\u305a\u306f\u666e\u901a\u306bFizzBuzz\u66f8\u304f\nmain() ->\n  lists:foreach(fun(X) -> printer(fizzbuzz(X)) end, lists:seq(1, 100)).\n\nfizzbuzz(X) ->\n  case X of\n    X when X rem 15 =:= 0 -> fizzbuzz;\n    X when X rem 5 =:= 0 -> buzz;\n    X when X rem 3 =:= 0 -> fizz;\n    X -> X\n  end.\n\nprinter(M) ->\n  io:format(\"~p~n\",[M]).\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3067\u66f8\u304f\nmain() ->\n  Pid = spawn(fun() -> queue() end),\n  lists:foreach(fun(X) -> Pid ! X end, lists:seq(1, 100)).\n\nqueue() ->\n  receive\n    M -> printer(fizzbuzz(M))\n  end,\n  queue(). %% \u30d7\u30ed\u30bb\u30b9\u304c\u9014\u4e2d\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u672b\u5c3e\u518d\u5e30\n\nfizzbuzz(X) ->\n  timer:sleep(100),  %% fizzbuzz\u304c\u91cd\u3044\u51e6\u7406\u3060\u3068\u4eee\u5b9a\n  case X of\n    X when X rem 15 =:= 0 -> fizzbuzz;\n    X when X rem 5 =:= 0 -> buzz;\n    X when X rem 3 =:= 0 -> fizz;\n    X -> X\n  end.\n\nprinter(M) ->\n  io:format(\"~p~n\",[M]).\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3067\u66f8\u304f\u3053\u3068\u306e\u526f\u4f5c\u7528\n\u3053\u306e\u51e6\u7406\u306e\u554f\u984c\u70b9\u306f\u3001\u5225\u30d7\u30ed\u30bb\u30b9\u3067fizzbuzz\u3092\u8a08\u7b97\u3057\u3066\u3044\u308b\u305f\u3081\nfizzbuzz\u51e6\u7406\u304c\u91cd\u3044\u51e6\u7406\u3060\u3063\u305f\u308a\u3001\u8a08\u7b97\u56de\u6570\u304c\u591a\u3044\u5834\u5408\n\u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u304c\u8a08\u7b97\u7d42\u4e86\u524d\u306b\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u3001\u6700\u5f8c\u307e\u3067\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308c\u306a\u3044\u3053\u3068\u3002\n\u5b9f\u969b\u306btimer:sleep(100)\u3092\u5165\u308c\u308b\u3068\u3001\u9014\u4e2d\u3067\u5207\u308c\u308b\u3002\n\u89e3\u6c7a\u65b9\u6cd5\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u8a08\u7b97\u304c\u7d42\u4e86\u3059\u308b\u307e\u3067\u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u306b\u5f85\u6a5f\u51e6\u7406\u3092\u8ffd\u52a0\u3059\u308b\u3068\u89e3\u6d88\u3059\u308b\n\n\u540c\u671f\u3057\u3066\u7d42\u4e86\u307e\u3067\u5f85\u3064\nmain() ->\n  printer(\"Start\"),\n  Pid = spawn(fun() -> queue() end),\n  PidMain = self(),\n  Count = 100,\n  lists:foreach(fun(X) -> Pid ! {X, PidMain } end, lists:seq(1, Count)),\n  join(Count),  %% queue\u304b\u3089\u7d42\u4e86\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\n  printer(\"Finish\").\n\nqueue() ->\n  receive\n    {M, PidMain} ->\n      PidMain ! fizzbuzz(M)  %% \u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\n  end,\n  queue(). %% \u30d7\u30ed\u30bb\u30b9\u304c\u9014\u4e2d\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u672b\u5c3e\u518d\u5e30\n\nfizzbuzz(X) ->\n  timer:sleep(100),  %% fizzbuzz\u304c\u91cd\u3044\u51e6\u7406\u3060\u3068\u4eee\u5b9a\n  case X of\n    X when X rem 15 =:= 0 -> fizzbuzz;\n    X when X rem 5 =:= 0 -> buzz;\n    X when X rem 3 =:= 0 -> fizz;\n    X -> X\n  end.\n\nprinter(M) ->\n  io:format(\"~p~n\",[M]).\n\njoin(0) -> ok;\njoin(Count) ->\n  receive\n    M ->\n      printer(M),\n      join(Count - 1)\n  end.\n\n\n\u4e26\u5217\u5ea6\u3092\u4e0a\u3052\u308b\n\u300e\u540c\u671f\u3057\u3066\u7d42\u4e86\u307e\u3067\u5f85\u3064ver\u300f\u306fspawn\u30921\u56de\u306e\u307f\u3057\u304b\u547c\u3070\u306a\u3044\u305f\u3081\u3001\u4e26\u5217\u5ea61\u306e\u305f\u3081\ncpu\u3092\u4e0a\u624b\u306b\u4f7f\u3048\u3066\u3044\u306a\u3044\u305f\u3081\u3001fizzbuzz\u8a08\u7b97\u3059\u308b\u305f\u3073\u306bspawn\u3059\u308b\u3053\u3068\u3067\n\u4e26\u5217\u5ea6\u3092\u4e0a\u3052\u308b\u3002spawn\u306f\u8efd\u91cf\u30b9\u30ec\u30c3\u30c9\u3067\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3001\u307b\u307c\u7121\u8996\u3067\u304d\u308b\u3002\n\u307e\u305f\u30e1\u30e2\u30ea\u30824kb\u304f\u3089\u3044\u3057\u304b\u4f7f\u308f\u306a\u3044\u3089\u3057\u3044\nmain() ->\n  printer(\"Start\"),\n%%   Pid = spawn(fun() -> queue() end),\n  PidMain = self(),\n  Count = 100,\n%%   lists:foreach(fun(X) -> Pid ! {X, PidMain } end, lists:seq(1, Count)),\n  lists:foreach(fun(X) -> spawn(fun() -> queue() end) ! {X, PidMain } end, lists:seq(1, Count)),\n  join(Count),  %% queue\u304b\u3089\u7d42\u4e86\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\n  printer(\"Finish\").\n\nqueue() ->\n  receive\n    {M, PidMain} ->\n      PidMain ! fizzbuzz(M) %% \u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\n  end,\n  queue(). %% \u30d7\u30ed\u30bb\u30b9\u304c\u9014\u4e2d\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u672b\u5c3e\u518d\u5e30\n\nfizzbuzz(X) ->\n  timer:sleep(100),  %% fizzbuzz\u304c\u91cd\u3044\u51e6\u7406\u3060\u3068\u4eee\u5b9a\n  case X of\n    X when X rem 15 =:= 0 -> fizzbuzz;\n    X when X rem 5 =:= 0 -> buzz;\n    X when X rem 3 =:= 0 -> fizz;\n    X -> X\n  end.\n\nprinter(M) ->\n  io:format(\"~p~n\",[M]).\n\njoin(0) -> ok;\njoin(Count) ->\n  receive\n    M ->\n      printer(M),\n      join(Count - 1)\n  end.\n\n\n\n\u4e26\u5217\u5ea6\u3092\u4e0a\u3052\u308b\u3053\u3068\u306e\u526f\u4f5c\u7528\n\u4e26\u5217\u8a08\u7b97\u3057\u305f\u7d50\u679c\u3001\u8a08\u7b97\u901f\u5ea6\u306f\u3061\u3087\u3063\u65e9\u306b\u306a\u3063\u305f\u304c\u3001\u9806\u756a\u30d0\u30e9\u30d0\u30e9\u3067\u7d50\u679c\u304c\u5c4a\u304f\u3002\u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f...\n\n# \u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u306e\u57fa\u790e\nspawn\u3067\u8efd\u91cf\u30b9\u30ec\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u3067\u30b9\u30b1\u30fc\u30eb\u3059\u308bFizzBuzz\u304c\u51fa\u6765\u308b\u306f\u305a...\u306f\u305a\n\n```erlang:non-mp\nmain() ->\n  printer(\"test message\").\nprinter(M) ->\n  io:format(\"M: ~p~n\",[M]).\n```\n\n\n```erlang:mp\nmain() ->\n  Pid = spawn(fun() -> printer() end),\n  Pid ! \"test message\".\n\nprinter() ->\n  receive\n    M -> io:format(\"M: ~p~n\",[M])\n  end. \n```\n\n# \u307e\u305a\u306f\u666e\u901a\u306bFizzBuzz\u66f8\u304f\n```erlang\nmain() ->\n  lists:foreach(fun(X) -> printer(fizzbuzz(X)) end, lists:seq(1, 100)).\n\nfizzbuzz(X) ->\n  case X of\n    X when X rem 15 =:= 0 -> fizzbuzz;\n    X when X rem 5 =:= 0 -> buzz;\n    X when X rem 3 =:= 0 -> fizz;\n    X -> X\n  end.\n\nprinter(M) ->\n  io:format(\"~p~n\",[M]).\n```\n\n# \u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3067\u66f8\u304f\n```erlang\nmain() ->\n  Pid = spawn(fun() -> queue() end),\n  lists:foreach(fun(X) -> Pid ! X end, lists:seq(1, 100)).\n\nqueue() ->\n  receive\n    M -> printer(fizzbuzz(M))\n  end,\n  queue(). %% \u30d7\u30ed\u30bb\u30b9\u304c\u9014\u4e2d\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u672b\u5c3e\u518d\u5e30\n\nfizzbuzz(X) ->\n  timer:sleep(100),  %% fizzbuzz\u304c\u91cd\u3044\u51e6\u7406\u3060\u3068\u4eee\u5b9a\n  case X of\n    X when X rem 15 =:= 0 -> fizzbuzz;\n    X when X rem 5 =:= 0 -> buzz;\n    X when X rem 3 =:= 0 -> fizz;\n    X -> X\n  end.\n\nprinter(M) ->\n  io:format(\"~p~n\",[M]).\n```\n\n# \u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3067\u66f8\u304f\u3053\u3068\u306e\u526f\u4f5c\u7528\n\u3053\u306e\u51e6\u7406\u306e\u554f\u984c\u70b9\u306f\u3001\u5225\u30d7\u30ed\u30bb\u30b9\u3067fizzbuzz\u3092\u8a08\u7b97\u3057\u3066\u3044\u308b\u305f\u3081\nfizzbuzz\u51e6\u7406\u304c\u91cd\u3044\u51e6\u7406\u3060\u3063\u305f\u308a\u3001\u8a08\u7b97\u56de\u6570\u304c\u591a\u3044\u5834\u5408\n\u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u304c\u8a08\u7b97\u7d42\u4e86\u524d\u306b\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u3001\u6700\u5f8c\u307e\u3067\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308c\u306a\u3044\u3053\u3068\u3002\n\u5b9f\u969b\u306btimer:sleep(100)\u3092\u5165\u308c\u308b\u3068\u3001\u9014\u4e2d\u3067\u5207\u308c\u308b\u3002\n\u89e3\u6c7a\u65b9\u6cd5\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u8a08\u7b97\u304c\u7d42\u4e86\u3059\u308b\u307e\u3067\u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u306b\u5f85\u6a5f\u51e6\u7406\u3092\u8ffd\u52a0\u3059\u308b\u3068\u89e3\u6d88\u3059\u308b\n\n# \u540c\u671f\u3057\u3066\u7d42\u4e86\u307e\u3067\u5f85\u3064\n```erlang\nmain() ->\n  printer(\"Start\"),\n  Pid = spawn(fun() -> queue() end),\n  PidMain = self(),\n  Count = 100,\n  lists:foreach(fun(X) -> Pid ! {X, PidMain } end, lists:seq(1, Count)),\n  join(Count),  %% queue\u304b\u3089\u7d42\u4e86\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\n  printer(\"Finish\").\n\nqueue() ->\n  receive\n    {M, PidMain} ->\n      PidMain ! fizzbuzz(M)  %% \u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\n  end,\n  queue(). %% \u30d7\u30ed\u30bb\u30b9\u304c\u9014\u4e2d\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u672b\u5c3e\u518d\u5e30\n\nfizzbuzz(X) ->\n  timer:sleep(100),  %% fizzbuzz\u304c\u91cd\u3044\u51e6\u7406\u3060\u3068\u4eee\u5b9a\n  case X of\n    X when X rem 15 =:= 0 -> fizzbuzz;\n    X when X rem 5 =:= 0 -> buzz;\n    X when X rem 3 =:= 0 -> fizz;\n    X -> X\n  end.\n\nprinter(M) ->\n  io:format(\"~p~n\",[M]).\n\njoin(0) -> ok;\njoin(Count) ->\n  receive\n    M ->\n      printer(M),\n      join(Count - 1)\n  end.\n```\n\n# \u4e26\u5217\u5ea6\u3092\u4e0a\u3052\u308b\n\u300e\u540c\u671f\u3057\u3066\u7d42\u4e86\u307e\u3067\u5f85\u3064ver\u300f\u306fspawn\u30921\u56de\u306e\u307f\u3057\u304b\u547c\u3070\u306a\u3044\u305f\u3081\u3001\u4e26\u5217\u5ea61\u306e\u305f\u3081\ncpu\u3092\u4e0a\u624b\u306b\u4f7f\u3048\u3066\u3044\u306a\u3044\u305f\u3081\u3001fizzbuzz\u8a08\u7b97\u3059\u308b\u305f\u3073\u306bspawn\u3059\u308b\u3053\u3068\u3067\n\u4e26\u5217\u5ea6\u3092\u4e0a\u3052\u308b\u3002spawn\u306f\u8efd\u91cf\u30b9\u30ec\u30c3\u30c9\u3067\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3001\u307b\u307c\u7121\u8996\u3067\u304d\u308b\u3002\n\u307e\u305f\u30e1\u30e2\u30ea\u30824kb\u304f\u3089\u3044\u3057\u304b\u4f7f\u308f\u306a\u3044\u3089\u3057\u3044\n\n```erlang\nmain() ->\n  printer(\"Start\"),\n%%   Pid = spawn(fun() -> queue() end),\n  PidMain = self(),\n  Count = 100,\n%%   lists:foreach(fun(X) -> Pid ! {X, PidMain } end, lists:seq(1, Count)),\n  lists:foreach(fun(X) -> spawn(fun() -> queue() end) ! {X, PidMain } end, lists:seq(1, Count)),\n  join(Count),  %% queue\u304b\u3089\u7d42\u4e86\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\n  printer(\"Finish\").\n\nqueue() ->\n  receive\n    {M, PidMain} ->\n      PidMain ! fizzbuzz(M) %% \u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\n  end,\n  queue(). %% \u30d7\u30ed\u30bb\u30b9\u304c\u9014\u4e2d\u7d42\u4e86\u3057\u306a\u3044\u3088\u3046\u306b\u672b\u5c3e\u518d\u5e30\n\nfizzbuzz(X) ->\n  timer:sleep(100),  %% fizzbuzz\u304c\u91cd\u3044\u51e6\u7406\u3060\u3068\u4eee\u5b9a\n  case X of\n    X when X rem 15 =:= 0 -> fizzbuzz;\n    X when X rem 5 =:= 0 -> buzz;\n    X when X rem 3 =:= 0 -> fizz;\n    X -> X\n  end.\n\nprinter(M) ->\n  io:format(\"~p~n\",[M]).\n\njoin(0) -> ok;\njoin(Count) ->\n  receive\n    M ->\n      printer(M),\n      join(Count - 1)\n  end.\n\n```\n\n# \u4e26\u5217\u5ea6\u3092\u4e0a\u3052\u308b\u3053\u3068\u306e\u526f\u4f5c\u7528\n\u4e26\u5217\u8a08\u7b97\u3057\u305f\u7d50\u679c\u3001\u8a08\u7b97\u901f\u5ea6\u306f\u3061\u3087\u3063\u65e9\u306b\u306a\u3063\u305f\u304c\u3001\u9806\u756a\u30d0\u30e9\u30d0\u30e9\u3067\u7d50\u679c\u304c\u5c4a\u304f\u3002\u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f...\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-09-29 13.28.04.png](https://qiita-image-store.s3.amazonaws.com/0/65312/d67649a0-9c97-97b7-6004-51b73d97e952.png)\n\n\n", "tags": ["Erlang"]}