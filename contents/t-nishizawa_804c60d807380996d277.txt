{"tags": ["rails3.2", "ruby2.1"], "context": "URL\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u305d\u306e\u307e\u307e\u306b\u3057\u3066\u304a\u304d\u305f\u3044\u3002\n\u3067\u3082\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u5168\u3066\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u6301\u305f\u305b\u308b\u306e\u306f\u9762\u5012\u3002\n\u305d\u3053\u3067\u3001\u30ea\u30d5\u30a1\u30e9\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u62dd\u501f\u3057\u3066\u3057\u307e\u304a\u3046\u3002\u3068\u3044\u3046\u4f5c\u6226\u304c\u63d0\u6848\u3055\u308c\u2026\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30cf\u30c3\u30b7\u30e5\u306b\u3059\u308c\u3070rails\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30d8\u30eb\u30d1\u30fc\u306b\u6e21\u3057\u3084\u3059\u3044\u304b\u306a\uff1f\n\u3068\u601d\u3063\u305f\u6240\u3067\u30bf\u30a4\u30c8\u30eb\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u914d\u5217\u304c\u306a\u3044\u5834\u5408\n# require 'uri'\nuri = URI::parse(request.referer)\nbegin\n  q_array = URI::decode_www_form(uri.query)\n  q_hash = Hash[q_array]\nrescue\n  q_hash = {}\nend\n\n\u5927\u4f53\u306f\u3053\u308c\u3067OK\u3002\n\u3060\u3051\u3069\u3001\u914d\u5217\u304c\u6df7\u3056\u308b\u3068\u56f0\u308b\u3002\n\u4f8b\u3048\u3070\"tags[]=hoge&tags[]=fuga\"\u306f{\"tags[]\"=>\"fuga\"}\u3068\u306a\u308a\u3001\n\u6700\u5f8c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u4ee5\u5916\u304c\u6b20\u640d\u3059\u308b\u3002\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u914d\u5217\u304c\u3042\u308b\u5834\u5408\n# require 'uri'\n# require 'rack'\nuri = URI::parse(request.referer)\nq_hash = Rack::Utils.parse_nested_query(uri.query)\n\n\u3053\u308c\u306a\u3089\n\"tags[]=hoge&tags[]=fuga\"\u3082\n{\"tags[]\"=>[\"hoge\", \"fuga\"]}\u3068\u306a\u308b\u3002\n\u3064\u3044\u3067\u306b\n\"test[][hash]=1&test[][hash]=2\"\u306f\n{\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}\u3002\n\n\u6ce8\u610f\u4e8b\u9805\n\n\nrequest.referer\u306e\u691c\u67fb\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5fd8\u308c\u305a\u306b\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30d8\u30eb\u30d1\u30fc\u304c\u4f5c\u3063\u305fURL\u6587\u5b57\u5217\u306b\u30ea\u30d5\u30a1\u30e9\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8db3\u3059\u3060\u3051\u3067\u62dd\u501f\u306f\u3067\u304d\u308b\u3002\u30cf\u30c3\u30b7\u30e5\u3092\u4f5c\u308b\u5fc5\u8981\u306f\u306a\u3044\n\n# require 'uri'\nuri = URI(request.referer)\n[xxx_path, uri.query].compact.join('?')\n\n\n\u88dc\u8db3\n# \u6587\u5b57\u5217 => \u30cf\u30c3\u30b7\u30e5\nRack::Utils.parse_nested_query(\"test[][hash]=1&test[][hash]=2\")                 # => {\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}\nRack::Utils.parse_nested_query(\"test%5B%5D%5Bhash%5D=1&test%5B%5D%5Bhash%5D=2\") # => {\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}\nRack::Utils.parse_nested_query(\"test%5B%5D%5Bhash%5D=1&test%5B%5D%5Bhash%5D=%E3%81%82%E3%81%82%E3%81%82\") # => {\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"\u3042\u3042\u3042\"}]}\n\n# \u30cf\u30c3\u30b7\u30e5 => \u6587\u5b57\u5217\nRack::Utils.build_nested_query({\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}) # => \"test[][hash]=1&test[][hash]=2\"\nRack::Utils.build_nested_query({\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"\u3042\u3042\u3042\"}]}) # => \"test[][hash]=1&test[][hash]=%E3%81%82%E3%81%82%E3%81%82\"\n\n# \u304a\u307e\u3051\n# require 'active_support'\n# require 'active_support/core_ext'\n{\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}.to_param # => \"test%5B%5D%5Bhash%5D=1&test%5B%5D%5Bhash%5D=2\"\n{\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"\u3042\u3042\u3042\"}]}.to_param # => \"test%5B%5D%5Bhash%5D=1&test%5B%5D%5Bhash%5D=%E3%81%82%E3%81%82%E3%81%82\"\n\n\n\u53c2\u8003\u6587\u732e\n[Ruby]URL\u306e\u30af\u30a8\u30ea\u6587\u5b57\u5217\u304b\u3089Hash\u3092\u751f\u6210\u3059\u308b\nHow to turn a Ruby Hash into HTTP Params\n[GitHub]rack/rack\nURL\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u305d\u306e\u307e\u307e\u306b\u3057\u3066\u304a\u304d\u305f\u3044\u3002\n\u3067\u3082\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u5168\u3066\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u6301\u305f\u305b\u308b\u306e\u306f\u9762\u5012\u3002\n\u305d\u3053\u3067\u3001\u30ea\u30d5\u30a1\u30e9\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u62dd\u501f\u3057\u3066\u3057\u307e\u304a\u3046\u3002\u3068\u3044\u3046\u4f5c\u6226\u304c\u63d0\u6848\u3055\u308c\u2026\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30cf\u30c3\u30b7\u30e5\u306b\u3059\u308c\u3070rails\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30d8\u30eb\u30d1\u30fc\u306b\u6e21\u3057\u3084\u3059\u3044\u304b\u306a\uff1f\n\u3068\u601d\u3063\u305f\u6240\u3067\u30bf\u30a4\u30c8\u30eb\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u914d\u5217\u304c\u306a\u3044\u5834\u5408\n\n```rb\n# require 'uri'\nuri = URI::parse(request.referer)\nbegin\n  q_array = URI::decode_www_form(uri.query)\n  q_hash = Hash[q_array]\nrescue\n  q_hash = {}\nend\n```\n\u5927\u4f53\u306f\u3053\u308c\u3067OK\u3002\n\u3060\u3051\u3069\u3001\u914d\u5217\u304c\u6df7\u3056\u308b\u3068\u56f0\u308b\u3002\n\u4f8b\u3048\u3070`\"tags[]=hoge&tags[]=fuga\"`\u306f`{\"tags[]\"=>\"fuga\"}`\u3068\u306a\u308a\u3001\n\u6700\u5f8c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u4ee5\u5916\u304c\u6b20\u640d\u3059\u308b\u3002\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u914d\u5217\u304c\u3042\u308b\u5834\u5408\n\n```rb\n# require 'uri'\n# require 'rack'\nuri = URI::parse(request.referer)\nq_hash = Rack::Utils.parse_nested_query(uri.query)\n```\n\u3053\u308c\u306a\u3089\n`\"tags[]=hoge&tags[]=fuga\"`\u3082\n`{\"tags[]\"=>[\"hoge\", \"fuga\"]}`\u3068\u306a\u308b\u3002\n\u3064\u3044\u3067\u306b\n`\"test[][hash]=1&test[][hash]=2\"`\u306f\n`{\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}`\u3002\n\n# \u6ce8\u610f\u4e8b\u9805\n1. `request.referer`\u306e\u691c\u67fb\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5fd8\u308c\u305a\u306b\n2. \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30d8\u30eb\u30d1\u30fc\u304c\u4f5c\u3063\u305fURL\u6587\u5b57\u5217\u306b\u30ea\u30d5\u30a1\u30e9\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8db3\u3059\u3060\u3051\u3067\u62dd\u501f\u306f\u3067\u304d\u308b\u3002\u30cf\u30c3\u30b7\u30e5\u3092\u4f5c\u308b\u5fc5\u8981\u306f\u306a\u3044\n\n```rb\n# require 'uri'\nuri = URI(request.referer)\n[xxx_path, uri.query].compact.join('?')\n```\n# \u88dc\u8db3\n```rb\n# \u6587\u5b57\u5217 => \u30cf\u30c3\u30b7\u30e5\nRack::Utils.parse_nested_query(\"test[][hash]=1&test[][hash]=2\")                 # => {\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}\nRack::Utils.parse_nested_query(\"test%5B%5D%5Bhash%5D=1&test%5B%5D%5Bhash%5D=2\") # => {\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}\nRack::Utils.parse_nested_query(\"test%5B%5D%5Bhash%5D=1&test%5B%5D%5Bhash%5D=%E3%81%82%E3%81%82%E3%81%82\") # => {\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"\u3042\u3042\u3042\"}]}\n\n# \u30cf\u30c3\u30b7\u30e5 => \u6587\u5b57\u5217\nRack::Utils.build_nested_query({\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}) # => \"test[][hash]=1&test[][hash]=2\"\nRack::Utils.build_nested_query({\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"\u3042\u3042\u3042\"}]}) # => \"test[][hash]=1&test[][hash]=%E3%81%82%E3%81%82%E3%81%82\"\n\n# \u304a\u307e\u3051\n# require 'active_support'\n# require 'active_support/core_ext'\n{\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"2\"}]}.to_param # => \"test%5B%5D%5Bhash%5D=1&test%5B%5D%5Bhash%5D=2\"\n{\"test\"=>[{\"hash\"=>\"1\"}, {\"hash\"=>\"\u3042\u3042\u3042\"}]}.to_param # => \"test%5B%5D%5Bhash%5D=1&test%5B%5D%5Bhash%5D=%E3%81%82%E3%81%82%E3%81%82\"\n```\n\n# \u53c2\u8003\u6587\u732e\n[[Ruby]URL\u306e\u30af\u30a8\u30ea\u6587\u5b57\u5217\u304b\u3089Hash\u3092\u751f\u6210\u3059\u308b](http://qiita.com/gotohiro55/items/010b27b8f1db47188139)\n[How to turn a Ruby Hash into HTTP Params](http://stackoverflow.com/questions/798710/how-to-turn-a-ruby-hash-into-http-params)\n[[GitHub]rack/rack](https://github.com/rack/rack/tree/1.5.2)\n"}