{"context": " More than 1 year has passed since last update.\u5148\u65e5 Lambda \u306e VPC \u30b5\u30dd\u30fc\u30c8\u5b9f\u88c5\u304c\u30a2\u30ca\u30a6\u30f3\u30b9\u3055\u308c\u3066\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nVPC \u30b5\u30dd\u30fc\u30c8\u306e\u5b9f\u88c5\u306b\u3088\u308a\u3001Lambda \u3068 RDS, ElasticCache \u306a\u3069\u3092\u9023\u643a\u3055\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u4f7f\u3063\u3066\u307f\u305f\u6240\u611f\u3068\u3057\u3066\u306f\u3001\u4eca\u307e\u3067\u7528\u9014\u304c\u9650\u5b9a\u3055\u308c\u3066\u3044\u305f\u6c17\u304c\u3059\u308b Lambda \u306e\u4f7f\u3044\u3069\u3053\u308d\u304c\u304b\u306a\u308a\u5e83\u304c\u3063\u305f\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5c0f\u898f\u6a21\u306a\u6848\u4ef6\u306a\u3089\u672c\u5f53\u306b\u30b5\u30fc\u30d0\u3044\u3089\u306a\u304f\u306a\u308b\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u8af8\u3005\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f jaws \u306e\u5f8c\u7d99 serverless \u3092\u4f7f\u3044\u307e\u3059\u3002\n\u52d5\u4f5c\u306b\u306f node V4 \u304c\u5fc5\u8981\u3067\u3059\u3002\n\u4f5c\u696d\u306f\u9069\u5f53\u306b\u7acb\u3061\u4e0a\u3052\u305f EC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4e0a\u3067\u884c\u3044\u307e\u3057\u305f\u3002\n$ git clone git://github.com/creationix/nvm.git ~/.nvm\n$ source ~/.nvm/nvm.sh\n$ nvm ls-remote # \u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\n$ nvm install 4.3.1\n$ nvm use v4.3.1\nNow using node v4.3.1 (npm v2.14.12)\n$ npm install serverless\n$ mkdir ~/.aws\n$ vi ~/.aws/credentials\n===\n[default]\naws_access_key_id=<<\u30a2\u30af\u30bb\u30b9\u30ad\u30fc>>\naws_secret_access_key=<<\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc>>\n===\n\n$ vi ~/.bashrc # \u30d1\u30b9\u901a\u3059\n===\n...\nPATH=\"$PATH\":/usr/local/bin:~/node_modules/.bin\nif [[ -s ~/.nvm/nvm.sh ]];\n then source ~/.nvm/nvm.sh\nfi\n===\n\n$ sls help  # \u52d5\u4f5c\u78ba\u8a8d\n _______                             __\n|   _   .-----.----.--.--.-----.----|  .-----.-----.-----.\n|   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|\n|____   |_____|__|  \\___/|_____|__| |__|_____|_____|_____|\n|   |   |             The Serverless Application Framework\n|       |                           serverless.com, v0.4.2\n`-------'\n\n\n\n\nRDS \u8a2d\u5b9a\n\nVPC: \u300c\u30c7\u30d5\u30a9\u30eb\u30c8 VPC\u300d \u3092\u9078\u629e\n\u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u53ef\u80fd: \u3044\u3044\u3048\nVPC \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7: \u4e0b\u8a18\u306e\u3088\u3046\u306b\u540c\u3058\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e MySQL \u306e\u901a\u4fe1\u3092\u8a31\u53ef\n\n\n\u305d\u308c\u4ee5\u5916\u306f\u9069\u5f53\u306b\u8a2d\u5b9a\u3002\n\n\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n$ mysql {RDS DB \u540d} -h {RDS \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8} -u {RDS \u30e6\u30fc\u30b6\u540d} -p \n\nmysql> CREATE TABLE lambda_test (\n`id` INT( 11 ) NOT NULL AUTO_INCREMENT,\n`text` TEXT NOT NULL ,\n`created` TimeStamp DEFAULT '0000000000',\nPRIMARY KEY ( `id` )\n);\n\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30c6\u30b9\u30c8\u7528\u306b EC2 \u4e0a\u3067\u3082 MySQL \u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\n$ sudo yum install mysql-server\n$ sudo chkconfig mysqld on\n$ sudo chkconfig --list # mysqld on \u306b\u306a\u3063\u3066\u308b\u306e\u78ba\u8a8d\n$ sudo service mysqld start\n$ sudo /usr/bin/mysql_secure_installation\n\u5bfe\u8a71\u5f62\u5f0f\u3067\u5168\u90e8 Y\n$ mysql -u root -p\nmysql> CREATE DATABASE  `lambda_test` CHARACTER SET utf8 COLLATE utf8_general_ci;\n\nmysql> use lambda_test\n\nmysql> CREATE TABLE lambda_test (\n`id` INT( 11 ) NOT NULL AUTO_INCREMENT,\n`text` TEXT NOT NULL ,\n`created` TimeStamp DEFAULT '0000000000',\nPRIMARY KEY ( `id` )\n);\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n$ sls project create\nServerless: Initializing Serverless Project...  \nServerless: Enter a name for this project:  (serverless-nkeoqm) SayHello # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3092\u5165\u529b\nServerless: Enter a universally unique project bucket name:  (serverless-nkeoqm) sayhello.masarun.co # S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u5165\u529b\nServerless: Enter an email to use for AWS alarms:  (me@serverless-nkeoqm.com) someone+aws@example.com # \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u529b\nerror:   Please enter a valid email # shit!\nServerless: Enter an email to use for AWS alarms:  (me@serverless-nkeoqm.com) someone@example.com\nServerless: Select a region for your project: # \u30ea\u30fc\u30b8\u30e7\u30f3\u9078\u629e\n    us-east-1\n    us-west-2\n    eu-west-1\n  > ap-northeast-1\nServerless: Select an AWS profile for your project: \n  > runco # \u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u9078\u629e\nServerless: Creating stage \"dev\"...  \nServerless: Creating region \"ap-northeast-1\" in stage \"dev\"...  \nServerless: Creating your project bucket on S3: serverless.ap-northeast-1.sayhello.masarun.co...  \nServerless: Deploying resources to stage \"dev\" in region \"ap-northeast-1\" via Cloudformation (~3 minutes)...  \nServerless: Successfully deployed \"dev\" resources to \"ap-northeast-1\"  \nServerless: Successfully created region \"ap-northeast-1\" within stage \"dev\"  \nServerless: Successfully created stage \"dev\"  \nServerless: Successfully initialized project \"SayHello\" \n\n$ tree\n.\n\u251c\u2500\u2500 admin.env\n\u251c\u2500\u2500 _meta\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 resources\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 s-resources-cf-dev-apnortheast1.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 variables\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 s-variables-common.json\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 s-variables-dev-apnortheast1.json\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 s-variables-dev.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 s-project.json\n\u2514\u2500\u2500 s-resources-cf.json\n\n\n\nComponent, Function \u4f5c\u6210\n\u3061\u3087\u3063\u3068\u524d\u307e\u3067 Module \u3068\u547c\u3070\u308c\u3066\u3044\u305f\u3082\u306e\u304c Component \u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\u30d8\u30eb\u30d7\u3068\u304b\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u306f\u307e\u3060\u6df7\u5728\u3057\u3066\u308b\u7b87\u6240\u3082\u3042\u308b\u306e\u3067\u6ce8\u610f\u3002\n$ sls component create greetings\n\u2514\u2500\u2500 dotenv@1.2.0\nServerless: -----------------  \nServerless: Successfully created new serverless component: greetings  \n\n$ sls function create greetings/say\nServerless: Successfully created function: \"greetings/say\"  \n\n$ tree\n.\n\u251c\u2500\u2500 admin.env\n\u251c\u2500\u2500 greetings\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 node_modules\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 say\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 event.json\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 handler.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 s-function.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 s-component.json\n\u251c\u2500\u2500 _meta\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 resources\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 s-resources-cf-dev-apnortheast1.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 variables\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 s-variables-common.json\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 s-variables-dev-apnortheast1.json\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 s-variables-dev.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 s-project.json\n\u2514\u2500\u2500 s-resources-cf.json\n\n\nComponent, Function \u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3067\u304d\u307e\u3057\u305f\u3002\ngreetings/say/handler.js \u3092\u898b\u3066\u307f\u308b\u3068\u3001\n\ngreetings/say/handler.js\n// Require Logic\nvar lib = require('../lib');\n\n\nComponent \u76f4\u4e0b\u306e lib \u304b\u3089\u8aad\u3082\u3046\u3068\u3057\u3066\u308b\u306e\u3067\u3001\n\u3053\u3053\u306b Function \u306e\u4e2d\u8eab\u8a18\u8ff0\u3059\u308b\u306e\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\u4ed6\u306b\u3082 Function \u4f5c\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3053\u3046\u3057\u3068\u304d\u307e\u3057\u305f\u3002\n$ mv greetings/lib/index.js greetings/lib/say.js\n$ vi greetings/say/handler.js\n===\nvar lib = require('../lib/say'); \n===\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\n$ sls function run greetings/say\nServerless: Running greetings/say...  \nServerless: -----------------  \nServerless: Success! - This Response Was Returned:  \nServerless: {\"message\":\"Your Serverless function ran successfully!\"}  \n\n\nServerless \u306e stage \u306b\u3064\u3044\u3066\n\nServerless \u3067\u306f stage (dev, beta, prod, etc..) \u3092\u4f5c\u6210\u3057\u3066\u3001stage \u5225\u306b\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\u3053\u308c\u306b\u3088\u308a\u958b\u767a\u74b0\u5883\u30fbBETA\u74b0\u5883\u30fb\u672c\u756a\u74b0\u5883\u306a\u3069\u9055\u3046\u74b0\u5883\u306e\u30bd\u30fc\u30b9\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u3063\u305f\u6642\u70b9\u3067\u3000local, dev \u30b9\u30c6\u30fc\u30b8\u304c\u3067\u304d\u308b\nlocal \u3067\u30b9\u30c6\u30fc\u30b8\u3092\u6307\u5b9a\u305b\u305a\u306b\u30c6\u30b9\u30c8\u5b9f\u884c\u3057\u305f\u5834\u5408\u3001local \u30b9\u30c6\u30fc\u30b8\u304c\u4f7f\u308f\u308c\u308b\n\u30b9\u30c6\u30fc\u30b8\u5225\u306b env \u3092\u8a2d\u5b9a\u3067\u304d\u308b\nenv \u306f\u3053\u3046\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3067\u8a2d\u5b9a\u3059\u308b\n\n$ sls env set -k {\u30ad\u30fc\u540d} -v {\u5024} -s {\u30b9\u30c6\u30fc\u30b8\u540d}\n\n\n\u30b9\u30c6\u30fc\u30b8\u3054\u3068\u306b1\u500b1\u500b\u8a2d\u5b9a\u3057\u3066\u3044\u304f\u306e\u306f\u3068\u3066\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u305e\n\u81ea\u52d5\u5316\u3057\u306a\u3044\u3068\u30df\u30b9\u308a\u305d\u3046\n\n\nlocal \u30b9\u30c6\u30fc\u30b8\u306e env \u3060\u3051\u306f .env \u306b\u8a18\u9332\u3055\u308c\u3066\u308b\n\n\u8a73\u3057\u304f\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u53c2\u7167\u304f\u3060\u3055\u3044\n\nenv \u8a2d\u5b9a\n\u524d\u8ff0\u306e\u3068\u304a\u308a\u3001env \u306e\u8a2d\u5b9a\u304c\u3068\u3066\u3082\u3081\u3093\u3069\u304f\u3055\u304b\u3063\u305f\u306e\u3067 JSON \u3067\u307e\u3068\u3081\u3066\u8a2d\u5b9a\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u306e\u3084\u308a\u65b9\u3067\u554f\u984c\u51fa\u306a\u3044\u306e\u304b\u306f\u77e5\u308a\u307e\u305b\u3093\u3002\n# dev \u30b9\u30c6\u30fc\u30b8\u306e MySQL \u63a5\u7d9a\u60c5\u5831\uff08RDS\uff09\n$ sls env set -s dev -k mysqlconfig -v '{\"host\": \"{RDS \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8}\", \"user\": \"{RDS \u306e\u30e6\u30fc\u30b6\u540d}\", \"db\": \"{RDS \u306e DB\u540d}\", \"password\": \"{RDS \u306e\u30d1\u30b9\u30ef\u30fc\u30c9}\"}'\n\n# local \u30b9\u30c6\u30fc\u30b8\u306e MySQL \u63a5\u7d9a\u60c5\u5831\n$ sls env set -s dev -k mysqlconfig -v '{\"host\": \"localhost\", \"user\": \"{MySQL \u306e\u30e6\u30fc\u30b6\u540d}\", \"db\": \"{MySQL \u306e DB\u540d}\", \"password\": \"{MySQL \u306e\u30d1\u30b9\u30ef\u30fc\u30c9}\"}'\n\n# \u78ba\u8a8d\n$ sls env list -s dev\n$ sls env list -s local\n\n\n\n\u30b3\u30fc\u30c9\nMySQL \u4f7f\u3046\u306e\u3067 node-mysql \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ npm install mysql --save\n\n\u30b3\u30fc\u30c9\u306f\u3068\u308a\u3042\u3048\u305a\u3053\u3093\u306a\u3093\u3067\u3059\u3002\n\u3059\u3050\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5730\u7344\u306b\u306a\u308b\u306e\u3067\u30d7\u30ed\u30df\u30b9\u3068\u304b\u4f7f\u3063\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\ngreetings/lib/say.js\n/**\n * Lib\n */\nvar mysql = require('mysql');\n\nmodule.exports.respond = function(event, cb) {\n  mysqlconfig = JSON.parse(process.env.mysqlconfig);\n  var connection = mysql.createConnection({\n    host     : mysqlconfig.host, \n    user     : mysqlconfig.user,\n    password : mysqlconfig.password,\n    database : mysqlconfig.db,\n    acquireTimeout: 1000\n  });\n\n  connection.connect(function(err){\n    if (err) throw err;\n  });\n\n  connection.query(\"insert into lambda_test values(0, ?, NOW())\", [event.text], function(err, re) {\n    if (err) throw err;\n    connection.end();\n\n    var response = {\n      message: \"Your Message: \" + event.text\n    };\n    return cb(null, response);\n  });\n};\n\n\n\n\u4e0b\u8a18\u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30c6\u30b9\u30c8\u7528\u3067\u3059\u3002\n\nsay/event.json\n{\"text\": \"hello!\"}\n\n\n\n\u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\n$ sls function run greetings/say\nServerless: Running greetings/say...  \nServerless: -----------------  \nServerless: Success! - This Response Was Returned:  \nServerless: {\"message\":\"Your Message: hello!\"}  \n\n# mysql \u3067\u3082\u78ba\u8a8d\nmysql> SELECT * FROM lambda_test ;\n+----+--------+---------------------+\n| id | text   | created             |\n+----+--------+---------------------+\n|  1 | hello! | 2016-03-01 06:54:03 |\n+----+--------+---------------------+\n1 row in set (0.00 sec)\n\n\n\u30c7\u30d7\u30ed\u30a4\n\u30ed\u30fc\u30ab\u30eb\u3067 OK \u307d\u3044\u3093\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\n# \u5bfe\u8a71\u5f0f\u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d7\u30ed\u30a4\n$ sls dash deploy\nServerless: Select the assets you wish to deploy:\n    greetings/say\n      function - greetings/say  # Enter \u3067\u9078\u629e\n      endpoint - greetings/say@say~GET  # Enter \u3067\u9078\u629e\n    - - - - -\n  > Deploy  # Enter \u3067\u9078\u629e\n    Cancel\n\nServerless: Deploying functions in \"dev\" to the following regions: ap-northeast-1  \nServerless: ------------------------  \nServerless: Successfully deployed functions in \"dev\" to the following regions:   \nServerless: ap-northeast-1 ------------------------  \nServerless:   greetings/say (SayHello-greetings-say): arn:aws:lambda:ap-northeast-1:908049199897:function:SayHello-greetings-say:dev  \n\nServerless: Deploying endpoints in \"dev\" to the following regions: ap-northeast-1  \nServerless: Successfully deployed endpoints in \"dev\" to the following regions:  \nServerless: ap-northeast-1 ------------------------  \nServerless:   GET - say - https://***.execute-api.ap-northeast-1.amazonaws.com/dev/say  \n\n\u3053\u308c\u3067\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\u3067\u3082\u9593\u9055\u3048\u3066 GET \u306e\u307e\u307e\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u3053\u306e\u307e\u307e\u3060\u3068\u8b0e\u306e 403 \u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002\n$ curl -v -d '{\"text\":\"Piyo-\"}' https://***.execute-api.ap-northeast-1.amazonaws.com/dev/say{\"message\":\"Missing Authentication Token\"}\n\n405 \u3067\u306f\u306a\u3044\u3093\u3067\u3059\u306d...\ns-function.json \u306e method \u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\ngreetings/say/s-function.json\n...\n  \"endpoints\": [\n    { \n      \"path\": \"say\",\n      \"method\": \"POST\",  # GET \u304b\u3089\u5909\u66f4\n...\n\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u76f4\u3057\u3066\u518d\u5b9f\u884c\n$ curl -v -d '{\"text\":\"Piyo-\"}' https://***.execute-api.ap-northeast-1.amazonaws.com/dev/say\n{\"errorMessage\":\"2016-03-01T07:14:09.991Z 2d851397-df7d-11e5-b9a2-494cd39b6049 Task timed out after 6.00 seconds\"}\n\n\n\u3048\u3089\u3044\u5177\u4f53\u7684\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u3051\u3069\u307e\u3042\u60f3\u5b9a\u901a\u308a\u3067\u3059\u3002\nConsole \u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001Lambda VPC \u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\nLambda > Functions > {\u8a72\u5f53\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3} \u306e Configuration \u30bf\u30d6\u3092\u8868\u793a\n\n\nRole: \u300cBasic with VPC\u300d\u304b\u3089\u65b0\u305f\u306b\u4f5c\u6210\nVPC: Default VPC \u3092\u9078\u629e\nSecurity Groups \u304b\u3089 RDS \u306b\u8a2d\u5b9a\u3057\u305f\u306e\u3068\u540c\u3058\u3082\u306e\u3092\u9078\u629e\n\n\n\n\nSave and Test\n\n\n\u30c6\u30b9\u30c8\u7528\u5165\u529b\u5024\u306e JSON \u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001event.js \u3068\u540c\u69d8\u306b\u8a18\u8ff0\u3059\u308b\n\n\n\n\n\u6210\u529f\u3057\u307e\u3057\u305f\u3002\ncurl \u304b\u3089\u3082\u3046\u4e00\u5ea6\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\n$ curl -v -d '{\"text\":\"Piyo-\"}' https://***.execute-api.ap-northeast-1.amazonaws.com/dev/say\n{\"message\":\"Your Message: Piyo-\"}\n\nRDS \u304b\u3089\u3082\u78ba\u8a8d\nmysql> select * FROM lambda_test;\n+----+-------------+---------------------+\n| id | text        | created             |\n+----+-------------+---------------------+\n|  1 | Piyo-       | 2016-03-01 07:34:06 |\n+----+-------------+---------------------+\n1 rows in set (0.01 sec)\n\n\nOK!!\n\n\u30ab\u30b9\u30bf\u30e0\u30ed\u30fc\u30eb\u306e\u8a2d\u5b9a\n\u4e0a\u8a18\u3067 Lambda \u306b Basic with VPC \u304b\u3089\u4f5c\u6210\u3057\u305f Role \u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u307e\u307e\u3060\u3068\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5ea6\u306b\u3082\u3068\u3082\u3068\u8a2d\u5b9a\u3055\u308c\u3066\u305f\u3084\u3064\u306b\u623b\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001s-function.json \u306e customRole \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\ngreetings/say/s-function.json\n\n  \"customRole\": \"arn:aws:iam::***:role/lambda_basic_vpc_execution\",\n\n\n\n\n\u6c17\u306b\u306a\u3063\u3066\u308b\u70b9\n\u4e00\u901a\u308a\u3084\u3063\u3066\u307f\u3066\u6c17\u306b\u306a\u3063\u305f\u4e0b\u8a18\u306b\u3064\u3044\u3066\u3082\u8ffd\u3005\u8abf\u3079\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nAPI \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u306f\u4f7f\u3048\u308b\u3093\u3060\u308d\u3046\u304b\n\u8cbb\u7528\u306e\u7b97\u51fa\u65b9\u6cd5\n\n\nEC2 \u4f7f\u3063\u3066 API \u4f5c\u3063\u3066\u305f\u6642\u3068\u306f\u307e\u305f\u5909\u308f\u308b\u3068\u601d\u3046\u306e\u3067\u3069\u3046\u3057\u3088\u3046\u304b\u306a\uff1f\n\n\n\u5b9f\u884c\u901f\u5ea6\u30fb\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u5177\u5408\n\n\n\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u3081\u3063\u3061\u3083\u8ca0\u8377\u304b\u3051\u3066\u307f\u305f\u3044\u3051\u3069\u3001\u81ea\u524d\u3067\u3084\u308a\u305f\u304f\u306a\u3044\n\n\n\n\u5148\u65e5 [Lambda \u306e VPC \u30b5\u30dd\u30fc\u30c8\u5b9f\u88c5\u304c\u30a2\u30ca\u30a6\u30f3\u30b9\u3055\u308c\u3066\u305f](https://aws.amazon.com/jp/blogs/aws/new-access-resources-in-a-vpc-from-your-lambda-functions/)\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nVPC \u30b5\u30dd\u30fc\u30c8\u306e\u5b9f\u88c5\u306b\u3088\u308a\u3001Lambda \u3068 RDS, ElasticCache \u306a\u3069\u3092\u9023\u643a\u3055\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u4f7f\u3063\u3066\u307f\u305f\u6240\u611f\u3068\u3057\u3066\u306f\u3001\u4eca\u307e\u3067\u7528\u9014\u304c\u9650\u5b9a\u3055\u308c\u3066\u3044\u305f\u6c17\u304c\u3059\u308b Lambda \u306e\u4f7f\u3044\u3069\u3053\u308d\u304c\u304b\u306a\u308a\u5e83\u304c\u3063\u305f\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5c0f\u898f\u6a21\u306a\u6848\u4ef6\u306a\u3089\u672c\u5f53\u306b\u30b5\u30fc\u30d0\u3044\u3089\u306a\u304f\u306a\u308b\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n## \u8af8\u3005\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f jaws \u306e\u5f8c\u7d99 serverless \u3092\u4f7f\u3044\u307e\u3059\u3002\n\u52d5\u4f5c\u306b\u306f node V4 \u304c\u5fc5\u8981\u3067\u3059\u3002\n\u4f5c\u696d\u306f\u9069\u5f53\u306b\u7acb\u3061\u4e0a\u3052\u305f EC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4e0a\u3067\u884c\u3044\u307e\u3057\u305f\u3002\n\n```bash\n$ git clone git://github.com/creationix/nvm.git ~/.nvm\n$ source ~/.nvm/nvm.sh\n$ nvm ls-remote # \u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\n$ nvm install 4.3.1\n$ nvm use v4.3.1\nNow using node v4.3.1 (npm v2.14.12)\n$ npm install serverless\n$ mkdir ~/.aws\n$ vi ~/.aws/credentials\n===\n[default]\naws_access_key_id=<<\u30a2\u30af\u30bb\u30b9\u30ad\u30fc>>\naws_secret_access_key=<<\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc>>\n===\n\n$ vi ~/.bashrc # \u30d1\u30b9\u901a\u3059\n===\n...\nPATH=\"$PATH\":/usr/local/bin:~/node_modules/.bin\nif [[ -s ~/.nvm/nvm.sh ]];\n then source ~/.nvm/nvm.sh\nfi\n===\n\n$ sls help  # \u52d5\u4f5c\u78ba\u8a8d\n _______                             __\n|   _   .-----.----.--.--.-----.----|  .-----.-----.-----.\n|   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|\n|____   |_____|__|  \\___/|_____|__| |__|_____|_____|_____|\n|   |   |             The Serverless Application Framework\n|       |                           serverless.com, v0.4.2\n`-------'\n\n\n```\n\n## RDS \u8a2d\u5b9a\n* VPC: \u300c\u30c7\u30d5\u30a9\u30eb\u30c8 VPC\u300d \u3092\u9078\u629e\n* \u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u53ef\u80fd: \u3044\u3044\u3048\n* VPC \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7: \u4e0b\u8a18\u306e\u3088\u3046\u306b\u540c\u3058\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e MySQL \u306e\u901a\u4fe1\u3092\u8a31\u53ef\n\n![ScreenShot 2016-03-01 at 14.27.01.png](https://qiita-image-store.s3.amazonaws.com/0/10160/e89aa500-92af-b4e9-40eb-010d32857c38.png \"ScreenShot 2016-03-01 at 14.27.01.png\")\n\n\u305d\u308c\u4ee5\u5916\u306f\u9069\u5f53\u306b\u8a2d\u5b9a\u3002\n\n### \u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n```bash\n$ mysql {RDS DB \u540d} -h {RDS \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8} -u {RDS \u30e6\u30fc\u30b6\u540d} -p \n\nmysql> CREATE TABLE lambda_test (\n`id` INT( 11 ) NOT NULL AUTO_INCREMENT,\n`text` TEXT NOT NULL ,\n`created` TimeStamp DEFAULT '0000000000',\nPRIMARY KEY ( `id` )\n);\n```\n\n### \u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30c6\u30b9\u30c8\u7528\u306b EC2 \u4e0a\u3067\u3082 MySQL \u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\n```bash\n$ sudo yum install mysql-server\n$ sudo chkconfig mysqld on\n$ sudo chkconfig --list # mysqld on \u306b\u306a\u3063\u3066\u308b\u306e\u78ba\u8a8d\n$ sudo service mysqld start\n$ sudo /usr/bin/mysql_secure_installation\n\u5bfe\u8a71\u5f62\u5f0f\u3067\u5168\u90e8 Y\n$ mysql -u root -p\nmysql> CREATE DATABASE  `lambda_test` CHARACTER SET utf8 COLLATE utf8_general_ci;\n\nmysql> use lambda_test\n\nmysql> CREATE TABLE lambda_test (\n`id` INT( 11 ) NOT NULL AUTO_INCREMENT,\n`text` TEXT NOT NULL ,\n`created` TimeStamp DEFAULT '0000000000',\nPRIMARY KEY ( `id` )\n);\n```\n\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n```bash\n$ sls project create\nServerless: Initializing Serverless Project...  \nServerless: Enter a name for this project:  (serverless-nkeoqm) SayHello # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3092\u5165\u529b\nServerless: Enter a universally unique project bucket name:  (serverless-nkeoqm) sayhello.masarun.co # S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u5165\u529b\nServerless: Enter an email to use for AWS alarms:  (me@serverless-nkeoqm.com) someone+aws@example.com # \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u529b\nerror:   Please enter a valid email # shit!\nServerless: Enter an email to use for AWS alarms:  (me@serverless-nkeoqm.com) someone@example.com\nServerless: Select a region for your project: # \u30ea\u30fc\u30b8\u30e7\u30f3\u9078\u629e\n    us-east-1\n    us-west-2\n    eu-west-1\n  > ap-northeast-1\nServerless: Select an AWS profile for your project: \n  > runco # \u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u9078\u629e\nServerless: Creating stage \"dev\"...  \nServerless: Creating region \"ap-northeast-1\" in stage \"dev\"...  \nServerless: Creating your project bucket on S3: serverless.ap-northeast-1.sayhello.masarun.co...  \nServerless: Deploying resources to stage \"dev\" in region \"ap-northeast-1\" via Cloudformation (~3 minutes)...  \nServerless: Successfully deployed \"dev\" resources to \"ap-northeast-1\"  \nServerless: Successfully created region \"ap-northeast-1\" within stage \"dev\"  \nServerless: Successfully created stage \"dev\"  \nServerless: Successfully initialized project \"SayHello\" \n\n$ tree\n.\n\u251c\u2500\u2500 admin.env\n\u251c\u2500\u2500 _meta\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 resources\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 s-resources-cf-dev-apnortheast1.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 variables\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 s-variables-common.json\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 s-variables-dev-apnortheast1.json\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 s-variables-dev.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 s-project.json\n\u2514\u2500\u2500 s-resources-cf.json\n\n```\n\n## Component, Function \u4f5c\u6210\n\u3061\u3087\u3063\u3068\u524d\u307e\u3067 Module \u3068\u547c\u3070\u308c\u3066\u3044\u305f\u3082\u306e\u304c Component \u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\u30d8\u30eb\u30d7\u3068\u304b\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u306f\u307e\u3060\u6df7\u5728\u3057\u3066\u308b\u7b87\u6240\u3082\u3042\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n```bash\n$ sls component create greetings\n\u2514\u2500\u2500 dotenv@1.2.0\nServerless: -----------------  \nServerless: Successfully created new serverless component: greetings  \n\n$ sls function create greetings/say\nServerless: Successfully created function: \"greetings/say\"  \n\n$ tree\n.\n\u251c\u2500\u2500 admin.env\n\u251c\u2500\u2500 greetings\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 node_modules\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 say\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 event.json\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 handler.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 s-function.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 s-component.json\n\u251c\u2500\u2500 _meta\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 resources\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 s-resources-cf-dev-apnortheast1.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 variables\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 s-variables-common.json\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 s-variables-dev-apnortheast1.json\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 s-variables-dev.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 s-project.json\n\u2514\u2500\u2500 s-resources-cf.json\n\n```\nComponent, Function \u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3067\u304d\u307e\u3057\u305f\u3002\ngreetings/say/handler.js \u3092\u898b\u3066\u307f\u308b\u3068\u3001\n\n```greetings/say/handler.js\n// Require Logic\nvar lib = require('../lib');\n```\n\nComponent \u76f4\u4e0b\u306e lib \u304b\u3089\u8aad\u3082\u3046\u3068\u3057\u3066\u308b\u306e\u3067\u3001\n\u3053\u3053\u306b Function \u306e\u4e2d\u8eab\u8a18\u8ff0\u3059\u308b\u306e\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u4ed6\u306b\u3082 Function \u4f5c\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3053\u3046\u3057\u3068\u304d\u307e\u3057\u305f\u3002\n\n```bash\n$ mv greetings/lib/index.js greetings/lib/say.js\n$ vi greetings/say/handler.js\n===\nvar lib = require('../lib/say'); \n===\n\n```\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\n\n```bash\n$ sls function run greetings/say\nServerless: Running greetings/say...  \nServerless: -----------------  \nServerless: Success! - This Response Was Returned:  \nServerless: {\"message\":\"Your Serverless function ran successfully!\"}  \n```\n\n## Serverless \u306e stage \u306b\u3064\u3044\u3066\n* Serverless \u3067\u306f stage (dev, beta, prod, etc..) \u3092\u4f5c\u6210\u3057\u3066\u3001stage \u5225\u306b\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n* \u3053\u308c\u306b\u3088\u308a\u958b\u767a\u74b0\u5883\u30fbBETA\u74b0\u5883\u30fb\u672c\u756a\u74b0\u5883\u306a\u3069\u9055\u3046\u74b0\u5883\u306e\u30bd\u30fc\u30b9\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\n* \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u3063\u305f\u6642\u70b9\u3067\u3000local, dev \u30b9\u30c6\u30fc\u30b8\u304c\u3067\u304d\u308b\n* local \u3067\u30b9\u30c6\u30fc\u30b8\u3092\u6307\u5b9a\u305b\u305a\u306b\u30c6\u30b9\u30c8\u5b9f\u884c\u3057\u305f\u5834\u5408\u3001local \u30b9\u30c6\u30fc\u30b8\u304c\u4f7f\u308f\u308c\u308b\n* \u30b9\u30c6\u30fc\u30b8\u5225\u306b env \u3092\u8a2d\u5b9a\u3067\u304d\u308b\n* env \u306f\u3053\u3046\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3067\u8a2d\u5b9a\u3059\u308b\n```\n$ sls env set -k {\u30ad\u30fc\u540d} -v {\u5024} -s {\u30b9\u30c6\u30fc\u30b8\u540d}\n```\n\t* \u30b9\u30c6\u30fc\u30b8\u3054\u3068\u306b1\u500b1\u500b\u8a2d\u5b9a\u3057\u3066\u3044\u304f\u306e\u306f\u3068\u3066\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u305e\n\t* \u81ea\u52d5\u5316\u3057\u306a\u3044\u3068\u30df\u30b9\u308a\u305d\u3046\n* local \u30b9\u30c6\u30fc\u30b8\u306e env \u3060\u3051\u306f .env \u306b\u8a18\u9332\u3055\u308c\u3066\u308b\n\n\u8a73\u3057\u304f\u306f[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.serverless.com/docs/env-list)\u53c2\u7167\u304f\u3060\u3055\u3044\n\n## env \u8a2d\u5b9a\n\u524d\u8ff0\u306e\u3068\u304a\u308a\u3001env \u306e\u8a2d\u5b9a\u304c\u3068\u3066\u3082\u3081\u3093\u3069\u304f\u3055\u304b\u3063\u305f\u306e\u3067 JSON \u3067\u307e\u3068\u3081\u3066\u8a2d\u5b9a\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u306e\u3084\u308a\u65b9\u3067\u554f\u984c\u51fa\u306a\u3044\u306e\u304b\u306f\u77e5\u308a\u307e\u305b\u3093\u3002\n\n```bash\n# dev \u30b9\u30c6\u30fc\u30b8\u306e MySQL \u63a5\u7d9a\u60c5\u5831\uff08RDS\uff09\n$ sls env set -s dev -k mysqlconfig -v '{\"host\": \"{RDS \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8}\", \"user\": \"{RDS \u306e\u30e6\u30fc\u30b6\u540d}\", \"db\": \"{RDS \u306e DB\u540d}\", \"password\": \"{RDS \u306e\u30d1\u30b9\u30ef\u30fc\u30c9}\"}'\n\n# local \u30b9\u30c6\u30fc\u30b8\u306e MySQL \u63a5\u7d9a\u60c5\u5831\n$ sls env set -s dev -k mysqlconfig -v '{\"host\": \"localhost\", \"user\": \"{MySQL \u306e\u30e6\u30fc\u30b6\u540d}\", \"db\": \"{MySQL \u306e DB\u540d}\", \"password\": \"{MySQL \u306e\u30d1\u30b9\u30ef\u30fc\u30c9}\"}'\n\n# \u78ba\u8a8d\n$ sls env list -s dev\n$ sls env list -s local\n\n```\n\n\n## \u30b3\u30fc\u30c9\nMySQL \u4f7f\u3046\u306e\u3067 node-mysql \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash\n$ npm install mysql --save\n```\n\n\u30b3\u30fc\u30c9\u306f\u3068\u308a\u3042\u3048\u305a\u3053\u3093\u306a\u3093\u3067\u3059\u3002\n\u3059\u3050\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5730\u7344\u306b\u306a\u308b\u306e\u3067\u30d7\u30ed\u30df\u30b9\u3068\u304b\u4f7f\u3063\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```greetings/lib/say.js \n/**\n * Lib\n */\nvar mysql = require('mysql');\n\nmodule.exports.respond = function(event, cb) {\n  mysqlconfig = JSON.parse(process.env.mysqlconfig);\n  var connection = mysql.createConnection({\n    host     : mysqlconfig.host, \n    user     : mysqlconfig.user,\n    password : mysqlconfig.password,\n    database : mysqlconfig.db,\n    acquireTimeout: 1000\n  });\n\n  connection.connect(function(err){\n    if (err) throw err;\n  });\n\n  connection.query(\"insert into lambda_test values(0, ?, NOW())\", [event.text], function(err, re) {\n    if (err) throw err;\n    connection.end();\n\n    var response = {\n      message: \"Your Message: \" + event.text\n    };\n    return cb(null, response);\n  });\n};\n\n```\n\n\n\u4e0b\u8a18\u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30c6\u30b9\u30c8\u7528\u3067\u3059\u3002\n\n```say/event.json \n{\"text\": \"hello!\"}\n```\n\n\n## \u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\n```bash\n$ sls function run greetings/say\nServerless: Running greetings/say...  \nServerless: -----------------  \nServerless: Success! - This Response Was Returned:  \nServerless: {\"message\":\"Your Message: hello!\"}  \n\n# mysql \u3067\u3082\u78ba\u8a8d\nmysql> SELECT * FROM lambda_test ;\n+----+--------+---------------------+\n| id | text   | created             |\n+----+--------+---------------------+\n|  1 | hello! | 2016-03-01 06:54:03 |\n+----+--------+---------------------+\n1 row in set (0.00 sec)\n```\n\n## \u30c7\u30d7\u30ed\u30a4\n\u30ed\u30fc\u30ab\u30eb\u3067 OK \u307d\u3044\u3093\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\n\n```bash\n# \u5bfe\u8a71\u5f0f\u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d7\u30ed\u30a4\n$ sls dash deploy\nServerless: Select the assets you wish to deploy:\n    greetings/say\n      function - greetings/say  # Enter \u3067\u9078\u629e\n      endpoint - greetings/say@say~GET  # Enter \u3067\u9078\u629e\n    - - - - -\n  > Deploy  # Enter \u3067\u9078\u629e\n    Cancel\n\nServerless: Deploying functions in \"dev\" to the following regions: ap-northeast-1  \nServerless: ------------------------  \nServerless: Successfully deployed functions in \"dev\" to the following regions:   \nServerless: ap-northeast-1 ------------------------  \nServerless:   greetings/say (SayHello-greetings-say): arn:aws:lambda:ap-northeast-1:908049199897:function:SayHello-greetings-say:dev  \n\nServerless: Deploying endpoints in \"dev\" to the following regions: ap-northeast-1  \nServerless: Successfully deployed endpoints in \"dev\" to the following regions:  \nServerless: ap-northeast-1 ------------------------  \nServerless:   GET - say - https://***.execute-api.ap-northeast-1.amazonaws.com/dev/say  \n```\n\n\u3053\u308c\u3067\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\u3067\u3082\u9593\u9055\u3048\u3066 GET \u306e\u307e\u307e\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u3053\u306e\u307e\u307e\u3060\u3068\u8b0e\u306e 403 \u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002\n\n```bash\n$ curl -v -d '{\"text\":\"Piyo-\"}' https://***.execute-api.ap-northeast-1.amazonaws.com/dev/say{\"message\":\"Missing Authentication Token\"}\n```\n\n405 \u3067\u306f\u306a\u3044\u3093\u3067\u3059\u306d...\n\ns-function.json \u306e method \u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```greetings/say/s-function.json \n...\n  \"endpoints\": [\n    { \n      \"path\": \"say\",\n      \"method\": \"POST\",  # GET \u304b\u3089\u5909\u66f4\n...\n```\n\u30c7\u30d7\u30ed\u30a4\u3057\u76f4\u3057\u3066\u518d\u5b9f\u884c\n\n```bash\n$ curl -v -d '{\"text\":\"Piyo-\"}' https://***.execute-api.ap-northeast-1.amazonaws.com/dev/say\n{\"errorMessage\":\"2016-03-01T07:14:09.991Z 2d851397-df7d-11e5-b9a2-494cd39b6049 Task timed out after 6.00 seconds\"}\n\n```\n\u3048\u3089\u3044\u5177\u4f53\u7684\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u3051\u3069\u307e\u3042\u60f3\u5b9a\u901a\u308a\u3067\u3059\u3002\n\nConsole \u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001Lambda VPC \u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n* Lambda > Functions > {\u8a72\u5f53\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3} \u306e Configuration \u30bf\u30d6\u3092\u8868\u793a\n * Role: \u300cBasic with VPC\u300d\u304b\u3089\u65b0\u305f\u306b\u4f5c\u6210\n * VPC: Default VPC \u3092\u9078\u629e\n * Security Groups \u304b\u3089 RDS \u306b\u8a2d\u5b9a\u3057\u305f\u306e\u3068\u540c\u3058\u3082\u306e\u3092\u9078\u629e\n![ScreenShot 2016-03-01 at 16.23.00.png](https://qiita-image-store.s3.amazonaws.com/0/10160/e02d89e1-9665-c4b0-3390-4cc9ec44205f.png \"ScreenShot 2016-03-01 at 16.23.00.png\")\n* Save and Test\n\t* \u30c6\u30b9\u30c8\u7528\u5165\u529b\u5024\u306e JSON \u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001event.js \u3068\u540c\u69d8\u306b\u8a18\u8ff0\u3059\u308b\n\n![ScreenShot 2016-03-01 at 16.29.49.png](https://qiita-image-store.s3.amazonaws.com/0/10160/22c33710-e407-549b-eb23-b8f7539dadf7.png \"ScreenShot 2016-03-01 at 16.29.49.png\")\n\n\u6210\u529f\u3057\u307e\u3057\u305f\u3002\n\ncurl \u304b\u3089\u3082\u3046\u4e00\u5ea6\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\n\n```bash\n$ curl -v -d '{\"text\":\"Piyo-\"}' https://***.execute-api.ap-northeast-1.amazonaws.com/dev/say\n{\"message\":\"Your Message: Piyo-\"}\n```\n\nRDS \u304b\u3089\u3082\u78ba\u8a8d\n\n```bash\nmysql> select * FROM lambda_test;\n+----+-------------+---------------------+\n| id | text        | created             |\n+----+-------------+---------------------+\n|  1 | Piyo-       | 2016-03-01 07:34:06 |\n+----+-------------+---------------------+\n1 rows in set (0.01 sec)\n\n```\nOK!!\n\n## \u30ab\u30b9\u30bf\u30e0\u30ed\u30fc\u30eb\u306e\u8a2d\u5b9a\n\u4e0a\u8a18\u3067 Lambda \u306b Basic with VPC \u304b\u3089\u4f5c\u6210\u3057\u305f Role \u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u307e\u307e\u3060\u3068\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5ea6\u306b\u3082\u3068\u3082\u3068\u8a2d\u5b9a\u3055\u308c\u3066\u305f\u3084\u3064\u306b\u623b\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001s-function.json \u306e customRole \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```greetings/say/s-function.json \n\n  \"customRole\": \"arn:aws:iam::***:role/lambda_basic_vpc_execution\",\n\n```\n\n## \u6c17\u306b\u306a\u3063\u3066\u308b\u70b9\n\u4e00\u901a\u308a\u3084\u3063\u3066\u307f\u3066\u6c17\u306b\u306a\u3063\u305f\u4e0b\u8a18\u306b\u3064\u3044\u3066\u3082\u8ffd\u3005\u8abf\u3079\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n* API \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u306f\u4f7f\u3048\u308b\u3093\u3060\u308d\u3046\u304b\n* \u8cbb\u7528\u306e\u7b97\u51fa\u65b9\u6cd5\n\t* EC2 \u4f7f\u3063\u3066 API \u4f5c\u3063\u3066\u305f\u6642\u3068\u306f\u307e\u305f\u5909\u308f\u308b\u3068\u601d\u3046\u306e\u3067\u3069\u3046\u3057\u3088\u3046\u304b\u306a\uff1f\n* \u5b9f\u884c\u901f\u5ea6\u30fb\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u5177\u5408\n\t* \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u3081\u3063\u3061\u3083\u8ca0\u8377\u304b\u3051\u3066\u307f\u305f\u3044\u3051\u3069\u3001\u81ea\u524d\u3067\u3084\u308a\u305f\u304f\u306a\u3044\n", "tags": ["lambda", "AWS", "serverless"]}