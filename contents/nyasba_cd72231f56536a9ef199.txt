{"context": " More than 1 year has passed since last update.\u8abf\u3079\u3066\u3082\u3044\u308d\u3093\u306a\u65b9\u6cd5\u304c\u3042\u3063\u305f\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\u304b\u306a\u308a\u9069\u5f53\u3067\u3059\u304c\u3053\u3093\u306a\u611f\u3058\u306bSpringFramework\u3067DI\u3057\u3066\u3044\u308bRepositoryB\u306e\u307f\u3092Mock\u306b\u3057\u3001RepositoryB\u3078\u306eInput\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u306e\u304c\u52d5\u6a5f\u3002\nclass ServiceA{\n\n    @Autowired\n    RepositoryB repositoryB;\n\n    @Autowired\n    RepositoryC repositoryC;\n\n    public void order1(String item){\n        repositoryB.save(item);\n    }\n\n    public void order2(String item){\n        repositoryB.save(item);\n        repositoryC.save(item);\n    }\n\n}\n\n\uff08\u6ce8\u610f\uff09\u5b9f\u969b\u306b\u8a66\u3057\u305f\u30b3\u30fc\u30c9\u306f\u696d\u52d9\u3067\u4f7f\u3063\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306a\u306e\u3067\u516c\u958b\u3067\u304d\u307e\u305b\u3093\u3002\u8003\u3048\u65b9\u306e\u53c2\u8003\u306b\u3059\u308b\u305f\u3081\u306b\u3053\u3093\u306a\u611f\u3058\u3067\u8003\u3048\u307e\u3057\u305f\u3068\u3044\u3046\u7a0b\u5ea6\u306e\u60c5\u5831\u3067\u3059\u306e\u3067\u3001\u305d\u306e\u70b9\u306f\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306fgroovy\u306eSpockFramework\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n(1) Mockito\u3092\u4f7f\u3046\n\u4f9d\u5b58\u95a2\u4fc2\u306bmockito\u3092\u8ffd\u52a0\u3002\n\nbuild.gradle\ntestCompile \"org.mockito:mockito-all:1.10.19\"\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304f\u3068RepositoryB\u3060\u3051\u306a\u3089\u4e0a\u624b\u304f\u3044\u304f\u306e\u3067\u3059\u304c\u3001RepositoryC\u3092\u4f7f\u3046\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u3069\u3046\u3082RepositoryC\u3082Mock\u306b\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3063\u307d\u3044\u3002\n@ContextConfiguration(locations = \"classpath:context.xml\")\nclass ServiceASpec extends Specification {\n\n    @InjectMocks\n    private ServiceA serviceA\n\n    @Mock\n    private RepositoryB repositoryB\n\n    def setup() {\n        MockitoAnnotations.initMocks(this)\n    }\n\n    def \"RepositoryB\u3092Mock\u306b\u3057\u305f\u30c6\u30b9\u30c8\"() {\n        when:\n        sut.order1(\"test\")\n\n        then:\n        Mockito.verify(repositoryB).save(\"test\")\n    }\n}\n\n\n(2) Springockito\u3092\u4f7f\u3046\n\u4f9d\u5b58\u95a2\u4fc2\u306bSpringockito\u3092\u8ffd\u52a0\u3002\n\nbuild.gradle\ntestCompile \"org.kubek2k:springockito-annotations:1.0.9\"\n\n\n\u3053\u308c\u3060\u3068RepositoryC\u3092\u4f7f\u3063\u3066\u3082Mock\u3055\u308c\u3066\u306a\u3044\u72b6\u614b\u3067\u52d5\u304f\u306f\u305a\u3067\u3057\u305f\u3002\n\u305f\u3060\u3001\u5b9f\u969b\u696d\u52d9\u3067\u4f7f\u3063\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3068IllegalStateException\u304c\u51fa\u307e\u3057\u305f\u3002RepositoryC\u306f\u547c\u3070\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u305f\u304c\u306a\u305c\u304b\u306f\u3088\u304f\u308f\u304b\u3089\u305a\u65ad\u5ff5\u3002\n@ContextConfiguration(locations = \"classpath:context.xml\", loader = SpringockitoContextLoader.class)\nclass ServiceASpec extends Specification {\n\n    @Autowired\n    private ServiceA serviceA\n\n    @ReplaceWithMock\n    @Autowired\n    private RepositoryB repositoryB\n\n    def \"RepositoryB\u3092Mock\u306b\u3057\u305f\u30c6\u30b9\u30c8\"() {\n        when:\n        sut.order1(\"test\")\n\n        then:\n        Mockito.verify(repositoryB).save(\"test\")\n    }\n}\n\n\n(3) Spock\u306eMock\u3092\u4f7f\u3046\nSpock\u306b\u3082Mock\u3042\u308b\u306e\u3067\u305d\u308c\u3067\u8003\u3048\u3066\u307f\u305f\u3002\nRepositoryB\u306eMock\u3092\u4f5c\u3063\u3066\u5f37\u5236\u7684\u306b\u7f6e\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3067\u3059\u304c\u3001\u610f\u56f3\u3057\u305f\u3053\u3068\u306f\u3067\u304d\u307e\u3057\u305f\u3002\n@ContextConfiguration(locations = \"classpath:context.xml\")\nclass ServiceASpec extends Specification {\n\n    @Autowired\n    private ServiceA serviceA\n\n    def setup() {\n        RepositoryB repositoryB = Mock()\n        ServiceA.metaClass.setAttribute(serviceA, \"repositoryB\", repositoryB)\n    }\n\n    def \"RepositoryB\u3092Mock\u306b\u3057\u305f\u30c6\u30b9\u30c8\"() {\n        when:\n        sut.order1(\"test\")\n\n        then:\n        // repositoryB.save(\"test\")\u304c1\u56de\u547c\u3070\u308c\u305f\n        1 * repositoryB.save(\"test\")\n\n        // \u4e0a\u8a18\u4ee5\u5916\u3067Mock\u304c\u547c\u3070\u308c\u3066\u3044\u306a\u3044\n        0 * _\n    }\n}\n\n\n\u307e\u3068\u3081\n\u306a\u3093\u3068\u304b\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\u306f\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u8868\u9762\u7684\u306b\u3057\u304b\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u3059\u3063\u304d\u308a\u305b\u305a\u3002\u3002\u3082\u3063\u3068\u52c9\u5f37\u3057\u306a\u304d\u3083\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n2015/4/24 \u8ffd\u8a18\n\u300cSpring\u3067DI\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eMock\u30c6\u30b9\u30c8\u305d\u306e\uff12\u300d\u3067\n(4)Mockito+RelfectionUtils\u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u307b\u307c(3)\u3068\u540c\u3058\u3067\u3059\u304c\u3002\n\n\u8abf\u3079\u3066\u3082\u3044\u308d\u3093\u306a\u65b9\u6cd5\u304c\u3042\u3063\u305f\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\n\u304b\u306a\u308a\u9069\u5f53\u3067\u3059\u304c\u3053\u3093\u306a\u611f\u3058\u306bSpringFramework\u3067DI\u3057\u3066\u3044\u308bRepositoryB\u306e\u307f\u3092Mock\u306b\u3057\u3001RepositoryB\u3078\u306eInput\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u306e\u304c\u52d5\u6a5f\u3002\n\n```\nclass ServiceA{\n\n    @Autowired\n    RepositoryB repositoryB;\n    \n    @Autowired\n    RepositoryC repositoryC;\n    \n    public void order1(String item){\n    \trepositoryB.save(item);\n    }\n    \n    public void order2(String item){\n    \trepositoryB.save(item);\n    \trepositoryC.save(item);\n    }\n\n}\n```\n\n\uff08\u6ce8\u610f\uff09\u5b9f\u969b\u306b\u8a66\u3057\u305f\u30b3\u30fc\u30c9\u306f\u696d\u52d9\u3067\u4f7f\u3063\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306a\u306e\u3067\u516c\u958b\u3067\u304d\u307e\u305b\u3093\u3002\u8003\u3048\u65b9\u306e\u53c2\u8003\u306b\u3059\u308b\u305f\u3081\u306b\u3053\u3093\u306a\u611f\u3058\u3067\u8003\u3048\u307e\u3057\u305f\u3068\u3044\u3046\u7a0b\u5ea6\u306e\u60c5\u5831\u3067\u3059\u306e\u3067\u3001\u305d\u306e\u70b9\u306f\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306fgroovy\u306eSpockFramework\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n\n\n## (1) Mockito\u3092\u4f7f\u3046\n\n\u4f9d\u5b58\u95a2\u4fc2\u306bmockito\u3092\u8ffd\u52a0\u3002\n\n```build.gradle\ntestCompile \"org.mockito:mockito-all:1.10.19\"\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304f\u3068RepositoryB\u3060\u3051\u306a\u3089\u4e0a\u624b\u304f\u3044\u304f\u306e\u3067\u3059\u304c\u3001RepositoryC\u3092\u4f7f\u3046\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u3069\u3046\u3082RepositoryC\u3082Mock\u306b\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3063\u307d\u3044\u3002\n\n```\n@ContextConfiguration(locations = \"classpath:context.xml\")\nclass ServiceASpec extends Specification {\n\n    @InjectMocks\n    private ServiceA serviceA\n\n    @Mock\n    private RepositoryB repositoryB\n\n    def setup() {\n        MockitoAnnotations.initMocks(this)\n    }\n\n    def \"RepositoryB\u3092Mock\u306b\u3057\u305f\u30c6\u30b9\u30c8\"() {\n        when:\n        sut.order1(\"test\")\n\n        then:\n        Mockito.verify(repositoryB).save(\"test\")\n    }\n}\n```\n\n## (2) Springockito\u3092\u4f7f\u3046\n\n\u4f9d\u5b58\u95a2\u4fc2\u306bSpringockito\u3092\u8ffd\u52a0\u3002\n\n```build.gradle\ntestCompile \"org.kubek2k:springockito-annotations:1.0.9\"\n```\n\n\u3053\u308c\u3060\u3068RepositoryC\u3092\u4f7f\u3063\u3066\u3082Mock\u3055\u308c\u3066\u306a\u3044\u72b6\u614b\u3067\u52d5\u304f\u306f\u305a\u3067\u3057\u305f\u3002\n\u305f\u3060\u3001\u5b9f\u969b\u696d\u52d9\u3067\u4f7f\u3063\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3068IllegalStateException\u304c\u51fa\u307e\u3057\u305f\u3002RepositoryC\u306f\u547c\u3070\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u305f\u304c\u306a\u305c\u304b\u306f\u3088\u304f\u308f\u304b\u3089\u305a\u65ad\u5ff5\u3002\n\n```\n@ContextConfiguration(locations = \"classpath:context.xml\", loader = SpringockitoContextLoader.class)\nclass ServiceASpec extends Specification {\n\n    @Autowired\n    private ServiceA serviceA\n\n    @ReplaceWithMock\n    @Autowired\n    private RepositoryB repositoryB\n\n    def \"RepositoryB\u3092Mock\u306b\u3057\u305f\u30c6\u30b9\u30c8\"() {\n        when:\n        sut.order1(\"test\")\n\n        then:\n        Mockito.verify(repositoryB).save(\"test\")\n    }\n}\n```\n\n## (3) Spock\u306eMock\u3092\u4f7f\u3046\n\nSpock\u306b\u3082Mock\u3042\u308b\u306e\u3067\u305d\u308c\u3067\u8003\u3048\u3066\u307f\u305f\u3002\nRepositoryB\u306eMock\u3092\u4f5c\u3063\u3066\u5f37\u5236\u7684\u306b\u7f6e\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3067\u3059\u304c\u3001\u610f\u56f3\u3057\u305f\u3053\u3068\u306f\u3067\u304d\u307e\u3057\u305f\u3002\n\n```\n@ContextConfiguration(locations = \"classpath:context.xml\")\nclass ServiceASpec extends Specification {\n\n    @Autowired\n    private ServiceA serviceA\n\n    def setup() {\n        RepositoryB repositoryB = Mock()\n        ServiceA.metaClass.setAttribute(serviceA, \"repositoryB\", repositoryB)\n    }\n\n    def \"RepositoryB\u3092Mock\u306b\u3057\u305f\u30c6\u30b9\u30c8\"() {\n        when:\n        sut.order1(\"test\")\n\n        then:\n        // repositoryB.save(\"test\")\u304c1\u56de\u547c\u3070\u308c\u305f\n        1 * repositoryB.save(\"test\")\n        \n        // \u4e0a\u8a18\u4ee5\u5916\u3067Mock\u304c\u547c\u3070\u308c\u3066\u3044\u306a\u3044\n        0 * _\n    }\n}\n```\n\n## \u307e\u3068\u3081\n\u306a\u3093\u3068\u304b\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\u306f\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u8868\u9762\u7684\u306b\u3057\u304b\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u3059\u3063\u304d\u308a\u305b\u305a\u3002\u3002\u3082\u3063\u3068\u52c9\u5f37\u3057\u306a\u304d\u3083\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\n### 2015/4/24 \u8ffd\u8a18\n\u300c[Spring\u3067DI\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eMock\u30c6\u30b9\u30c8\u305d\u306e\uff12](http://qiita.com/nyasba/items/16daeff7b9a2a65ef07f)\u300d\u3067\n(4)Mockito+RelfectionUtils\u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u307b\u307c(3)\u3068\u540c\u3058\u3067\u3059\u304c\u3002\n", "tags": ["spock", "spring"]}