{"context": " More than 1 year has passed since last update.redux-localstorage v1.0.0-rc4 \u3068 redux-localstorage-filter v0.1.1 \u3067\u3001\u4e00\u90e8\u306e\u30b9\u30c6\u30fc\u30c8\u3092\u30ed\u30fc\u30ab\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u7ba1\u7406\u3057\u3001\u5225\u306e\u4e00\u90e8\u306e\u30b9\u30c6\u30fc\u30c8\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u7ba1\u7406\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a\u3067\u3059\u3002new configureStore() \u3057\u3066\u3001Root \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067 store \u5c5e\u6027\u306b\u6e21\u3059\u60f3\u5b9a\u3067\u3059\u3002mergePersistedState() \u3092\u3069\u3053\u306b\u66f8\u304f\u306e\u304b\u3067\u8ff7\u3044\u307e\u3057\u305f\u3002\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u306b\u3068\u3063\u3066\u672c\u8cea\u7684\u3067\u306f\u306a\u3044\u7b87\u6240\u306f\u3001\u8aad\u307f\u3084\u3059\u3055\u3092\u8003\u616e\u3057\u3066\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n// import { createStore, applyMiddleware, compose } from 'redux';\n// import { reduxReactRouter } from 'redux-router';\n// import createHistory from 'history/lib/createBrowserHistory';\n// import routes from '../routes';\n// import thunk from 'redux-thunk';\n// import createLogger from 'redux-logger';\n// import rootReducer from '../reducers';\n\nimport persistState, { mergePersistedState } from 'redux-localstorage';\nimport sessionStorageAdapter from 'redux-localstorage/lib/adapters/sessionStorage';\nimport localStorageAdapter from 'redux-localstorage/lib/adapters/localStorage';\nimport reduxLocalstorageFilter from 'redux-localstorage-filter';\n\n// const middlewares = [thunk];\n\nconst localStorage = compose(\n  reduxLocalstorageFilter(['\u30ed\u30fc\u30ab\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u4fdd\u5b58\u3057\u305f\u3044\u90e8\u5206\u30b9\u30c6\u30fc\u30c8\u540d'])\n)(localStorageAdapter(window.localStorage));\n\nconst sessionStorage = compose(\n  reduxLocalstorageFilter(['\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u4fdd\u5b58\u3057\u305f\u3044\u90e8\u5206\u30b9\u30c6\u30fc\u30c8\u540d'])\n)(sessionStorageAdapter(window.sessionStorage));\n\nconst finalCreateStore = compose(\n  persistState(localStorage, '\u30ad\u30fc\u540d\u3092\u6307\u5b9a\u3057\u305f\u3051\u308c\u3070\u305d\u306e\u30ad\u30fc\u540d'),\n  persistState(sessionStorage, '\u30ad\u30fc\u540d\u3092\u6307\u5b9a\u3057\u305f\u3051\u308c\u3070\u305d\u306e\u30ad\u30fc\u540d'),\n  // applyMiddleware(...middlewares),\n  // reduxReactRouter({ routes, createHistory })\n)(createStore);\n\nexport default function configureStore(initialState) {\n  const reducer = compose(mergePersistedState())(rootReducer);\n  return finalCreateStore(reducer, initialState);\n}\n\n[redux-localstorage v1.0.0-rc4](https://github.com/elgerlambert/redux-localstorage/tree/v0.4.0) \u3068 redux-localstorage-filter v0.1.1 \u3067\u3001\u4e00\u90e8\u306e\u30b9\u30c6\u30fc\u30c8\u3092\u30ed\u30fc\u30ab\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u7ba1\u7406\u3057\u3001\u5225\u306e\u4e00\u90e8\u306e\u30b9\u30c6\u30fc\u30c8\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u7ba1\u7406\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a\u3067\u3059\u3002new configureStore() \u3057\u3066\u3001Root \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067 store \u5c5e\u6027\u306b\u6e21\u3059\u60f3\u5b9a\u3067\u3059\u3002mergePersistedState() \u3092\u3069\u3053\u306b\u66f8\u304f\u306e\u304b\u3067\u8ff7\u3044\u307e\u3057\u305f\u3002\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u306b\u3068\u3063\u3066\u672c\u8cea\u7684\u3067\u306f\u306a\u3044\u7b87\u6240\u306f\u3001\u8aad\u307f\u3084\u3059\u3055\u3092\u8003\u616e\u3057\u3066\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n```.javascript\n// import { createStore, applyMiddleware, compose } from 'redux';\n// import { reduxReactRouter } from 'redux-router';\n// import createHistory from 'history/lib/createBrowserHistory';\n// import routes from '../routes';\n// import thunk from 'redux-thunk';\n// import createLogger from 'redux-logger';\n// import rootReducer from '../reducers';\n\nimport persistState, { mergePersistedState } from 'redux-localstorage';\nimport sessionStorageAdapter from 'redux-localstorage/lib/adapters/sessionStorage';\nimport localStorageAdapter from 'redux-localstorage/lib/adapters/localStorage';\nimport reduxLocalstorageFilter from 'redux-localstorage-filter';\n\n// const middlewares = [thunk];\n\nconst localStorage = compose(\n  reduxLocalstorageFilter(['\u30ed\u30fc\u30ab\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u4fdd\u5b58\u3057\u305f\u3044\u90e8\u5206\u30b9\u30c6\u30fc\u30c8\u540d'])\n)(localStorageAdapter(window.localStorage));\n\nconst sessionStorage = compose(\n  reduxLocalstorageFilter(['\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u4fdd\u5b58\u3057\u305f\u3044\u90e8\u5206\u30b9\u30c6\u30fc\u30c8\u540d'])\n)(sessionStorageAdapter(window.sessionStorage));\n\nconst finalCreateStore = compose(\n  persistState(localStorage, '\u30ad\u30fc\u540d\u3092\u6307\u5b9a\u3057\u305f\u3051\u308c\u3070\u305d\u306e\u30ad\u30fc\u540d'),\n  persistState(sessionStorage, '\u30ad\u30fc\u540d\u3092\u6307\u5b9a\u3057\u305f\u3051\u308c\u3070\u305d\u306e\u30ad\u30fc\u540d'),\n  // applyMiddleware(...middlewares),\n  // reduxReactRouter({ routes, createHistory })\n)(createStore);\n\nexport default function configureStore(initialState) {\n  const reducer = compose(mergePersistedState())(rootReducer);\n  return finalCreateStore(reducer, initialState);\n}\n```\n", "tags": ["react.js", "redux"]}