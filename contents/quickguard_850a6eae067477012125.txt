{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\ndrone0.4 \u306e terraform plugin \u3067 \u30a4\u30f3\u30d5\u30e9CI \u3059\u308b\n\n\u30ec\u30dd\u30b8\u30c8\u30ea\u306f Github \u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\n\u30c7\u30d7\u30ed\u30a4\u5148\u306f AWS\n\ndrone 0.4 \u306e\u74b0\u5883\u69cb\u7bc9\u306b\u95a2\u3057\u3066\u306f\u4ee5\u524d\u306e\u8a18\u4e8b\u53c2\u7167\nterraform plugin \u306e\u8a73\u7d30\u306f\u3053\u3061\u3089\n\n\u524d\u63d0\n\ndrone \u306e OAuth applications \u767b\u9332\u6e08\u307f\nterraform \u306e tfstate \u306f S3 \u3067\u7ba1\u7406\u3059\u308b\n\n\n\u6e96\u5099\n\u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u4f5c\u6210\nGithub \u4e0a\u3067 CI \u7528\u306e\u65b0\u898f\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\n\n\u30ec\u30dd\u30b8\u30c8\u30ea\u3092 Activate \u3059\u308b\nDrone \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u4f5c\u6210\u3057\u305f\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u9078\u629e\u3057\u3066 Activate \u3059\u308b\n\nDeploy Key \u306f\u81ea\u52d5\u3067\u767b\u9332\u3055\u308c\u308b\u305f\u3081\u3001Github, Drone \u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u306f\u3053\u308c\u3067\u5b8c\u4e86\n\nS3 Bucket \u4f5c\u6210\ntfstate \u7ba1\u7406\u7528\u306e S3 Bucket \u3092\u4f5c\u6210\u3059\u308b\n$ aws s3 mb s3://quickguard-terraform-config\n\n\nsecret variable \u4f5c\u6210\nDrone \u753b\u9762\u306e SECRETS \u3088\u308a\u74b0\u5883\u5909\u6570\u3092\u5165\u529b\u3057\u3066 secret variable \u3092\u4f5c\u6210\u3059\u308b\n\n\u74b0\u5883\u5909\u6570\u306e\u5185\u5bb9\n\nAWS_ACCESS_KEY_ID\nAWS_SECRET_ACCESS_KEY \nAWS_DEFAULT_REGION\nSSH_KEY_NAME \uff1a EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u8a2d\u5b9a\u3059\u308b SSH Key Name\nTFSTATE_BUCKET \uff1a tfstate \u7ba1\u7406\u7528\u306e S3 Bucket Name\nTFSTATE_KEY \uff1a tfstate Name\n\n\u4f5c\u6210\u3055\u308c\u305f secret variable \u3092 .drone.sec \u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u30b3\u30df\u30c3\u30c8\u3057\u3066\u304a\u304f\n$ git add .drone.sec\n$ git commit -m \"[CI SKIP]added .drone.sec file\"\n\n\n.drone.yml \u3092\u4f5c\u6210\n\n.drone.yml\nbuild:\n  image: docker-registry:5000/terraform\n  environment:\n    - AWS_ACCESS_KEY_ID=$$AWS_ACCESS_KEY_ID\n    - AWS_SECRET_ACCESS_KEY=$$AWS_SECRET_ACCESS_KEY\n    - AWS_DEFAULT_REGION=$$AWS_DEFAULT_REGION\n    - SSH_KEY_NAME=$$SSH_KEY_NAME\n    - TFSTATE_BUCKET=$$TFSTATE_BUCKET\n    - TFSTATE_KEY=$$TFSTATE_KEY\n  commands:\n    - cd $DRONE_DIR\n    - rm -rf .terraform\n    - terraform remote config -backend=s3 -backend-config=region=${AWS_DEFAULT_REGION} -backend-config=bucket=${TFSTATE_BUCKET} -backend-config=key=${TFSTATE_KEY}\n    - terraform remote pull\n    - terraform plan -var access_key=${AWS_ACCESS_KEY_ID} -var secret_key=${AWS_SECRET_ACCESS_KEY} -var region=${AWS_DEFAULT_REGION} -var key_name=${SSH_KEY_NAME}\n  when:\n    branch: \"!master\"\n\ndeploy:\n  terraform:\n    plan: false\n    sensitive: true\n    remote:\n      backend: S3\n      config:\n        access_key: $$AWS_ACCESS_KEY_ID\n        secret_key: $$AWS_SECRET_ACCESS_KEY\n        region: $$AWS_DEFAULT_REGION\n        bucket: $$TFSTATE_BUCKET\n        key: $$TFSTATE_KEY\n    vars:\n      access_key: $$AWS_ACCESS_KEY_ID\n      secret_key: $$AWS_SECRET_ACCESS_KEY\n      region: $$AWS_DEFAULT_REGION\n      key_name: $$SSH_KEY_NAME\n    when:\n      branch: master\n\n\n\u203bimage \u306f alpine \u3092\u30d9\u30fc\u30b9\u306b terraterm 0.6.11 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u7528\n\u203bterraform plan \u306f master branch \u4ee5\u5916\u306b commit \u3055\u308c\u305f\u969b\u306b\u5b9f\u884c\n\u203bterraform apply \u306f master branch \u306b commit \u6642\u306e\u307f\u5b9f\u884c\n\u30c6\u30b9\u30c8\u6642\u306e terraform \u30b3\u30f3\u30c6\u30ca\u306e Dockerfile \u306f\u4ee5\u4e0b\n\nDockerfile\nFROM alpine:3.2\n\nENV TERRAFORM_VERSION 0.6.11\n\nRUN apk add --update wget bash git perl libxml2-utils openssh ca-certificates unzip && \\\n    wget -q \"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-2.21-r2.apk\" && \\\n    apk add --allow-untrusted glibc-2.21-r2.apk && \\\n    wget -q -O /terraform.zip \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" && \\\n    unzip /terraform.zip -d /bin && \\\n    apk del --purge wget ca-certificates unzip && \\\n    rm -rf /var/cache/apk/* glibc-2.21-r2.apk /terraform.zip\n\nVOLUME [\"/data\"]\n\nWORKDIR /data\n\nENTRYPOINT [\"/bin/terraform\"]\n\nCMD [\"--help\"]\n\n\n.drone.sec \u30d5\u30a1\u30a4\u30eb\u3068 .drone.yml \u30d5\u30a1\u30a4\u30eb\u3092\u30ec\u30dd\u30b8\u30c8\u30ea\u306b commit \u3057\u3066\u304a\u304f\n(terraform \u306e\u30b3\u30fc\u30c9\u304c\u307e\u3060\u306a\u3044\u305f\u3081\u3001commit \u30e1\u30c3\u30bb\u30fc\u30b8\u306b [CI SKIP] \u3092\u5165\u529b\u3057\u3066\u30b9\u30ad\u30c3\u30d7\u3057\u3066\u304a\u304f)\n\n\u30a4\u30f3\u30d5\u30e9CI\u3057\u3066\u307f\u308b\nterraform \u306e\u30b3\u30fc\u30c9\u306f\u3068\u308a\u3042\u3048\u305a example \u3092\u9069\u5f53\u306b\u4fee\u6b63\u3057\u3066\u4f5c\u6210\n\nmain.tf\nprovider \"aws\" {\n    access_key = \"${var.access_key}\"\n    secret_key = \"${var.secret_key}\"\n    region = \"${var.region}\"\n}\n\nresource \"aws_eip\" \"default\" {\n  instance = \"${aws_instance.web.id}\"\n  vpc = true\n}\n\nresource \"aws_security_group\" \"default\" {\n  name = \"eip_example\"\n  description = \"Used in the terraform\"\n\n  ingress {\n    from_port = 22\n    to_port = 22\n    protocol = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  ingress {\n    from_port = 80\n    to_port = 80\n    protocol = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  egress {\n    from_port = 0\n    to_port = 0\n    protocol = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n}\n\nresource \"aws_instance\" \"web\" {\n  instance_type = \"t2.micro\"\n  ami = \"${lookup(var.aws_amis, var.region)}\"\n  key_name = \"${var.key_name}\"\n  security_groups = [\"${aws_security_group.default.name}\"]\n\n  user_data = \"${file(\"userdata.sh\")}\"\n  tags {\n    Name = \"eip-example\"\n  }\n}\n\n\n\noutputs.tf\noutput \"address\" {\n  value = \"${aws_instance.web.private_ip}\"\n}\noutput \"elastic ip\" {\n  value = \"${aws_eip.default.public_ip}\"\n}\n\n\n\nvariables.tf\nvariable \"access_key\" {\n  description = \"AWS access key\"\n}\n\nvariable \"secret_key\" {\n  description = \"AWS secret key\"\n}\n\nvariable \"region\" {\n  description = \"The AWS region to create things in.\"\n}\n\n# ubuntu-trusty-14.04 (x64)\nvariable \"aws_amis\" {\n  default = {\n    \"ap-northeast-1\" = \"ami-a21529cc\"\n  }\n}\n\nvariable \"key_name\" {\n  description = \"Name of the SSH keypair to use in AWS.\"\n}\n\n\n\nuserdata.sh\n#!/bin/bash -v\napt-get update -y\napt-get install -y nginx > /tmp/nginx.log\n\n\n\u9069\u5f53\u306a branch \u4f5c\u6210\u3057\u3066 terraform \u306e\u30b3\u30fc\u30c9\u3092 push ,\u3000Pull Request \u3092\u4f5c\u6210\u3059\u308b\n\n\u30c6\u30b9\u30c8(terraform plan)\u7d50\u679c\n\n\u554f\u984c\u306a\u3051\u308c\u3070 Merge \u3059\u308b\nterraform apply \u7d50\u679c\n\nterraform \u306e output \u3082\u78ba\u8a8d\u3067\u304d\u308b\n#\u6982\u8981\ndrone0.4 \u306e terraform plugin \u3067 \u30a4\u30f3\u30d5\u30e9CI \u3059\u308b\n\n - \u30ec\u30dd\u30b8\u30c8\u30ea\u306f Github \u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\n - \u30c7\u30d7\u30ed\u30a4\u5148\u306f AWS\n\n\ndrone 0.4 \u306e\u74b0\u5883\u69cb\u7bc9\u306b\u95a2\u3057\u3066\u306f[\u4ee5\u524d\u306e\u8a18\u4e8b](http://qiita.com/quickguard/items/06747c1762a0373b8204)\u53c2\u7167\n\nterraform plugin \u306e\u8a73\u7d30\u306f[\u3053\u3061\u3089](http://readme.drone.io/plugins/terraform/)\n\n#\u524d\u63d0\n- drone \u306e OAuth applications \u767b\u9332\u6e08\u307f\n- terraform \u306e tfstate \u306f S3 \u3067\u7ba1\u7406\u3059\u308b\n\n#\u6e96\u5099\n**\u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u4f5c\u6210**\nGithub \u4e0a\u3067 CI \u7528\u306e\u65b0\u898f\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\n![01.png](https://qiita-image-store.s3.amazonaws.com/0/105824/4d73b322-594b-fc1d-9560-7debd64c34e3.png)\n\n**\u30ec\u30dd\u30b8\u30c8\u30ea\u3092 Activate \u3059\u308b**\nDrone \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u4f5c\u6210\u3057\u305f\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u9078\u629e\u3057\u3066 Activate \u3059\u308b\n![02.png](https://qiita-image-store.s3.amazonaws.com/0/105824/189882c0-471a-65cf-2493-1ede8421a930.png)\n\nDeploy Key \u306f\u81ea\u52d5\u3067\u767b\u9332\u3055\u308c\u308b\u305f\u3081\u3001Github, Drone \u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u306f\u3053\u308c\u3067\u5b8c\u4e86\n\n#S3 Bucket \u4f5c\u6210\ntfstate \u7ba1\u7406\u7528\u306e S3 Bucket \u3092\u4f5c\u6210\u3059\u308b\n\n```\n$ aws s3 mb s3://quickguard-terraform-config\n```\n\n#secret variable \u4f5c\u6210\nDrone \u753b\u9762\u306e SECRETS \u3088\u308a\u74b0\u5883\u5909\u6570\u3092\u5165\u529b\u3057\u3066 secret variable \u3092\u4f5c\u6210\u3059\u308b\n\n![03.png](https://qiita-image-store.s3.amazonaws.com/0/105824/10dc05ee-cd5f-6d4a-0906-c87f76a066e9.png)\n\n**\u74b0\u5883\u5909\u6570\u306e\u5185\u5bb9**\n\n- AWS_ACCESS_KEY_ID\n- AWS_SECRET_ACCESS_KEY \n- AWS_DEFAULT_REGION\n- SSH_KEY_NAME \uff1a EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u8a2d\u5b9a\u3059\u308b SSH Key Name\n- TFSTATE_BUCKET \uff1a tfstate \u7ba1\u7406\u7528\u306e S3 Bucket Name\n- TFSTATE_KEY \uff1a tfstate Name\n\n\u4f5c\u6210\u3055\u308c\u305f secret variable \u3092 .drone.sec \u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u30b3\u30df\u30c3\u30c8\u3057\u3066\u304a\u304f\n\n```\n$ git add .drone.sec\n$ git commit -m \"[CI SKIP]added .drone.sec file\"\n```\n\n#.drone.yml \u3092\u4f5c\u6210\n\n```bash:.drone.yml\nbuild:\n  image: docker-registry:5000/terraform\n  environment:\n    - AWS_ACCESS_KEY_ID=$$AWS_ACCESS_KEY_ID\n    - AWS_SECRET_ACCESS_KEY=$$AWS_SECRET_ACCESS_KEY\n    - AWS_DEFAULT_REGION=$$AWS_DEFAULT_REGION\n    - SSH_KEY_NAME=$$SSH_KEY_NAME\n    - TFSTATE_BUCKET=$$TFSTATE_BUCKET\n    - TFSTATE_KEY=$$TFSTATE_KEY\n  commands:\n    - cd $DRONE_DIR\n    - rm -rf .terraform\n    - terraform remote config -backend=s3 -backend-config=region=${AWS_DEFAULT_REGION} -backend-config=bucket=${TFSTATE_BUCKET} -backend-config=key=${TFSTATE_KEY}\n    - terraform remote pull\n    - terraform plan -var access_key=${AWS_ACCESS_KEY_ID} -var secret_key=${AWS_SECRET_ACCESS_KEY} -var region=${AWS_DEFAULT_REGION} -var key_name=${SSH_KEY_NAME}\n  when:\n    branch: \"!master\"\n\ndeploy:\n  terraform:\n    plan: false\n    sensitive: true\n    remote:\n      backend: S3\n      config:\n        access_key: $$AWS_ACCESS_KEY_ID\n        secret_key: $$AWS_SECRET_ACCESS_KEY\n        region: $$AWS_DEFAULT_REGION\n        bucket: $$TFSTATE_BUCKET\n        key: $$TFSTATE_KEY\n    vars:\n      access_key: $$AWS_ACCESS_KEY_ID\n      secret_key: $$AWS_SECRET_ACCESS_KEY\n      region: $$AWS_DEFAULT_REGION\n      key_name: $$SSH_KEY_NAME\n    when:\n      branch: master\n```\n\u203bimage \u306f alpine \u3092\u30d9\u30fc\u30b9\u306b terraterm 0.6.11 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u7528\n\u203b`terraform plan` \u306f master branch \u4ee5\u5916\u306b commit \u3055\u308c\u305f\u969b\u306b\u5b9f\u884c\n\u203b`terraform apply` \u306f master branch \u306b commit \u6642\u306e\u307f\u5b9f\u884c\n\n\u30c6\u30b9\u30c8\u6642\u306e terraform \u30b3\u30f3\u30c6\u30ca\u306e Dockerfile \u306f\u4ee5\u4e0b\n\n```bash:Dockerfile\nFROM alpine:3.2\n\nENV TERRAFORM_VERSION 0.6.11\n\nRUN apk add --update wget bash git perl libxml2-utils openssh ca-certificates unzip && \\\n    wget -q \"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-2.21-r2.apk\" && \\\n    apk add --allow-untrusted glibc-2.21-r2.apk && \\\n    wget -q -O /terraform.zip \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" && \\\n    unzip /terraform.zip -d /bin && \\\n    apk del --purge wget ca-certificates unzip && \\\n    rm -rf /var/cache/apk/* glibc-2.21-r2.apk /terraform.zip\n\nVOLUME [\"/data\"]\n\nWORKDIR /data\n\nENTRYPOINT [\"/bin/terraform\"]\n\nCMD [\"--help\"]\n```\n\n`.drone.sec` \u30d5\u30a1\u30a4\u30eb\u3068 `.drone.yml` \u30d5\u30a1\u30a4\u30eb\u3092\u30ec\u30dd\u30b8\u30c8\u30ea\u306b commit \u3057\u3066\u304a\u304f\n(terraform \u306e\u30b3\u30fc\u30c9\u304c\u307e\u3060\u306a\u3044\u305f\u3081\u3001commit \u30e1\u30c3\u30bb\u30fc\u30b8\u306b `[CI SKIP]` \u3092\u5165\u529b\u3057\u3066\u30b9\u30ad\u30c3\u30d7\u3057\u3066\u304a\u304f)\n\n#\u30a4\u30f3\u30d5\u30e9CI\u3057\u3066\u307f\u308b\n\nterraform \u306e\u30b3\u30fc\u30c9\u306f\u3068\u308a\u3042\u3048\u305a [example](https://github.com/hashicorp/terraform/tree/master/examples/aws-eip) \u3092\u9069\u5f53\u306b\u4fee\u6b63\u3057\u3066\u4f5c\u6210\n\n```bash:main.tf\nprovider \"aws\" {\n    access_key = \"${var.access_key}\"\n    secret_key = \"${var.secret_key}\"\n    region = \"${var.region}\"\n}\n\nresource \"aws_eip\" \"default\" {\n  instance = \"${aws_instance.web.id}\"\n  vpc = true\n}\n\nresource \"aws_security_group\" \"default\" {\n  name = \"eip_example\"\n  description = \"Used in the terraform\"\n\n  ingress {\n    from_port = 22\n    to_port = 22\n    protocol = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  ingress {\n    from_port = 80\n    to_port = 80\n    protocol = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  egress {\n    from_port = 0\n    to_port = 0\n    protocol = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n}\n\nresource \"aws_instance\" \"web\" {\n  instance_type = \"t2.micro\"\n  ami = \"${lookup(var.aws_amis, var.region)}\"\n  key_name = \"${var.key_name}\"\n  security_groups = [\"${aws_security_group.default.name}\"]\n\n  user_data = \"${file(\"userdata.sh\")}\"\n  tags {\n    Name = \"eip-example\"\n  }\n}\n```\n\n```bash:outputs.tf\noutput \"address\" {\n  value = \"${aws_instance.web.private_ip}\"\n}\noutput \"elastic ip\" {\n  value = \"${aws_eip.default.public_ip}\"\n}\n```\n\n```bash:variables.tf\nvariable \"access_key\" {\n  description = \"AWS access key\"\n}\n\nvariable \"secret_key\" {\n  description = \"AWS secret key\"\n}\n\nvariable \"region\" {\n  description = \"The AWS region to create things in.\"\n}\n\n# ubuntu-trusty-14.04 (x64)\nvariable \"aws_amis\" {\n  default = {\n    \"ap-northeast-1\" = \"ami-a21529cc\"\n  }\n}\n\nvariable \"key_name\" {\n  description = \"Name of the SSH keypair to use in AWS.\"\n}\n```\n\n```bash:userdata.sh\n#!/bin/bash -v\napt-get update -y\napt-get install -y nginx > /tmp/nginx.log\n```\n\n\u9069\u5f53\u306a branch \u4f5c\u6210\u3057\u3066 terraform \u306e\u30b3\u30fc\u30c9\u3092 push ,\u3000Pull Request \u3092\u4f5c\u6210\u3059\u308b\n\n![06.png](https://qiita-image-store.s3.amazonaws.com/0/105824/c7657246-e84b-e495-8952-d75b2c8ba2b0.png)\n\n**\u30c6\u30b9\u30c8(terraform plan)\u7d50\u679c**\n![07.png](https://qiita-image-store.s3.amazonaws.com/0/105824/0c66f29c-6377-70c2-1d37-ddf7eba2b651.png)\n\n\u554f\u984c\u306a\u3051\u308c\u3070 Merge \u3059\u308b\n\n**terraform apply \u7d50\u679c**\n![08.png](https://qiita-image-store.s3.amazonaws.com/0/105824/eb4f5f78-664e-a0ce-c526-edbdf40fe49a.png)\n\nterraform \u306e output \u3082\u78ba\u8a8d\u3067\u304d\u308b\n", "tags": ["drone.io", "Terraform", "CI", "AWS"]}