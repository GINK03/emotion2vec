{"context": "\n\n\u554f\u984c\nMockery\u3067overload\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u6bd4\u8f03\u7684\u4f9d\u5b58\u5ea6\u306e\u9ad8\u3044\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Mockery\u306b\u3064\u3044\u3066\u306f\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nPHP - Mockery\u3067\u30e1\u30bd\u30c3\u30c9\u3092overload\u3059\u308b\u30b5\u30f3\u30d7\u30eb\uff08\u5225\u30e1\u30bd\u30c3\u30c9\u3067Mock\u3092\u4f5c\u6210\u3059\u308b\uff09 - Qiita\n\nMockery\u3092\u4f7f\u3063\u3066 Hoge \u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3059\u308b HogeTest \u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3001phpunit\u3092\u5b9f\u884c\u3057\u305f\u3068\u3053\u308d\u3001\u6b21\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u306b\u51fa\u304f\u308f\u3057\u307e\u3057\u305f\u3002\n1) path\\to\\HogeTest::fooTest\nMockery\\Exception\\RuntimeException: Could not load mock path\\to\\ClassUsedInTest, class already exists\n\n\n\u89e3\u6c7a\u7b56\n\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b\u4ee5\u4e0b\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3002\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8aac\u660e\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u306d\u3002\n\nHogeTest.php\nclass HogeTest extends \\TestCase\n{\n    /**\n     * @runInSeparateProcess\n     * @preserveGlobalState disabled\n     */\n    public function fooTest()\n    {\n        // Hoge\u30af\u30e9\u30b9\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u3001ClassUsedInTest\u30af\u30e9\u30b9\u306e\u30e2\u30c3\u30af\u3092\u4f5c\u308b\n        $mock = \\Mockery::mock('overload:' . \\path\\to\\ClassUsedInTest::class);\n        // \u4ee5\u4e0b\u3001\u30c6\u30b9\u30c8\u306e\u5177\u4f53\u7684\u306a\u51e6\u7406\u304c\u7d9a\u304f...\n    }\n}\n\n\n\n\u539f\u56e0\n\nThis works best when using an autoloader in your tests. If any code is encountered that uses a class that hasn\u2019t yet been loaded, it invokes the autoloader to load the class. Mockery allows you to overload this behavior by injecting a class with the same name, so that when the class is encountered in your code, it is already loaded, and the autoloader doesn\u2019t try to load your real class. If you\u2019re usingComposer\u2019s autoloader with your tests, you\u2019re all set.\nThis is not without some problems, though. If previous tests have already autoloaded the class, then Mockery won\u2019t be able to inject a class with the same name. This will result in an error:\n\n\u5f15\u7528\u5143\uff1ahttp://devzone.zend.com/6073/mocking-hard-dependencies-in-legacy-code/\n\n\u65e5\u672c\u8a9e\u3067\u304a\uff4b\nMockery\u3067overload\u3059\u308b\u3068\u3001\u30aa\u30fc\u30c8\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u969b\u306bDI\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3067\u3082\u3001\u3082\u3057\u524d\u306e\u30c6\u30b9\u30c8\u304c\u30e2\u30c3\u30af\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u3092\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b\u3068\uff08\u3064\u307e\u308a\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u3092new\u3057\u305f\u308a\u3057\u3066\u3044\u308b\u3068\uff09DI\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001 HogeTest \u30af\u30e9\u30b9\u3067\u5229\u7528\u3057\u3066\u3044\u308b ClassUsedInTest \u30af\u30e9\u30b9\u3092\u3001\u3069\u3053\u304b\u3053\u308c\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u3067\u65e2\u306b\u4f7f\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u539f\u56e0\u3067\u3059\u3002\u4f8b\u3048\u3070 ClassUsedInTest \u30af\u30e9\u30b9\u81ea\u4f53\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u3067new ClassUsedInTest\u3092\u3057\u3066\u3044\u308b\u304b\u3082\uff1f\n\u3053\u306e\u72b6\u6cc1\u306f\u3001Static\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u3059\u308b\u969b\u306b\u3082\u304a\u3053\u308a\u307e\u3059\u3002\n\n# \u554f\u984c\nMockery\u3067overload\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u6bd4\u8f03\u7684\u4f9d\u5b58\u5ea6\u306e\u9ad8\u3044\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Mockery\u306b\u3064\u3044\u3066\u306f\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n- [PHP - Mockery\u3067\u30e1\u30bd\u30c3\u30c9\u3092overload\u3059\u308b\u30b5\u30f3\u30d7\u30eb\uff08\u5225\u30e1\u30bd\u30c3\u30c9\u3067Mock\u3092\u4f5c\u6210\u3059\u308b\uff09 - Qiita](http://qiita.com/kadoyau/items/48413245386b6b21a073)\n\nMockery\u3092\u4f7f\u3063\u3066 **Hoge** \u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3059\u308b **HogeTest** \u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3001phpunit\u3092\u5b9f\u884c\u3057\u305f\u3068\u3053\u308d\u3001\u6b21\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u306b\u51fa\u304f\u308f\u3057\u307e\u3057\u305f\u3002\n\n```\u30a8\u30e9\u30fc\u5185\u5bb9\n1) path\\to\\HogeTest::fooTest\nMockery\\Exception\\RuntimeException: Could not load mock path\\to\\ClassUsedInTest, class already exists\n```\n\n# \u89e3\u6c7a\u7b56\n\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b\u4ee5\u4e0b\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3002[\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8aac\u660e\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u306d](https://phpunit.de/manual/current/ja/appendixes.annotations.html#appendixes.annotations.preserveGlobalState)\u3002\n\n```php:HogeTest.php\nclass HogeTest extends \\TestCase\n{\n\t/**\n\t * @runInSeparateProcess\n\t * @preserveGlobalState disabled\n\t */\n\tpublic function fooTest()\n\t{\n\t\t// Hoge\u30af\u30e9\u30b9\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u3001ClassUsedInTest\u30af\u30e9\u30b9\u306e\u30e2\u30c3\u30af\u3092\u4f5c\u308b\n\t\t$mock = \\Mockery::mock('overload:' . \\path\\to\\ClassUsedInTest::class);\n\t\t// \u4ee5\u4e0b\u3001\u30c6\u30b9\u30c8\u306e\u5177\u4f53\u7684\u306a\u51e6\u7406\u304c\u7d9a\u304f...\n\t}\n}\n```\n\n# \u539f\u56e0\n> This works best when using an autoloader in your tests. If any code is encountered that uses a class that hasn\u2019t yet been loaded, it invokes the autoloader to load the class. Mockery allows you to overload this behavior by injecting a class with the same name, so that when the class is encountered in your code, it is already loaded, and the autoloader doesn\u2019t try to load your real class. If you\u2019re usingComposer\u2019s autoloader with your tests, you\u2019re all set.\n\n> This is not without some problems, though. If previous tests have already autoloaded the class, then Mockery won\u2019t be able to inject a class with the same name. This will result in an error:\n\n\u5f15\u7528\u5143\uff1ahttp://devzone.zend.com/6073/mocking-hard-dependencies-in-legacy-code/\n\n## \u65e5\u672c\u8a9e\u3067\u304a\uff4b\nMockery\u3067overload\u3059\u308b\u3068\u3001\u30aa\u30fc\u30c8\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u969b\u306bDI\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3067\u3082\u3001\u3082\u3057\u524d\u306e\u30c6\u30b9\u30c8\u304c\u30e2\u30c3\u30af\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u3092\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b\u3068\uff08\u3064\u307e\u308a\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u3092new\u3057\u305f\u308a\u3057\u3066\u3044\u308b\u3068\uff09DI\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3064\u307e\u308a\u3001 **HogeTest** \u30af\u30e9\u30b9\u3067\u5229\u7528\u3057\u3066\u3044\u308b **ClassUsedInTest** \u30af\u30e9\u30b9\u3092\u3001\u3069\u3053\u304b\u3053\u308c\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u3067\u65e2\u306b\u4f7f\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u539f\u56e0\u3067\u3059\u3002\u4f8b\u3048\u3070 **ClassUsedInTest** \u30af\u30e9\u30b9\u81ea\u4f53\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u3067`new ClassUsedInTest`\u3092\u3057\u3066\u3044\u308b\u304b\u3082\uff1f\n\n\u3053\u306e\u72b6\u6cc1\u306f\u3001Static\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u3059\u308b\u969b\u306b\u3082\u304a\u3053\u308a\u307e\u3059\u3002\n", "tags": ["PHPUnit4.8.11", "mockery0.9.4", "PHP5.6"]}