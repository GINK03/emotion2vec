{"context": "\u57fa\u672c\u7684\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u30eb\u30fc\u30eb\u306e\u8ffd\u52a0\u53ca\u3073\u66f4\u65b0\u3092\u884c\u3046\u3060\u3051\u306a\u306e\u3067\u3001\u5bfe\u8c61\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u3059\u3067\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u4e8b\u304c\u6761\u4ef6\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u3061\u3087\u3063\u3068\u3060\u3051\u8aac\u660e\n\n\u524d\u8a18\u4e8b\u306e\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\u3068IP\u53d6\u5f97\u306e`my_token.txt`\u3068`my_ip.txt`\u3092\u4f7f\u7528\u3057\u307e\u3059\n\u57fa\u672c\u7684\u306b\u306fRequests\u3067\u3084\u308a\u53d6\u308a\u3092\u884c\u3046\njson\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u53d7\u3051\u53d6\u3063\u305fjson\u30c7\u30fc\u30bf\u306e\u51e6\u7406\u3092\u5b9f\u65bd\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u65e7IP\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u524a\u9664\u3082\u884c\u3044\u65b0\u305f\u306b\u30eb\u30fc\u30eb\u3092\u8ffd\u52a0\n\u6295\u7a3f\u306b\u5408\u308f\u305b\u3066\u30b3\u30e1\u30f3\u30c8\u3092\u65e5\u672c\u8a9e\u3067\u5165\u308c\u3066\u307e\u3059\u3002\u524a\u9664\u3059\u308b\u304b\u66f8\u304d\u76f4\u3057\u3066\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u30b3\u30fc\u30c9\n\nset_acl.py\n#!/usr/bin/env python\nimport requests\nimport json\nimport os\n\nclass set_rule():\n\n        def __init__(self): #\u521d\u671f\u5316\n                my_ip = \"\"\n                my_token = \"\"\n                my_rule =\"\"\n\n        def set_data(self,rule): #\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7ID\u3001\u30c8\u30fc\u30af\u30f3\u3001\u73fe\u5728\u306eIP\u306e\u30bb\u30c3\u30c8\n                self.my_rule = rule\n                with open('my_ip.txt','r') as f:\n                        self.my_ip = f.read()\n\n                with open('my_token.txt','r') as f:\n                        self.my_token = f.read()\n\n        def remove(self): #\u65e7\u767b\u9332\u60c5\u5831\u306e\u524a\u9664\n                rule_data = ''\n                rule_flug = os.path.exists(\"./my_rule.txt\")\n\n                if rule_flug: #\u30d5\u30a1\u30a4\u30eb\u304c\u7121\u3051\u308c\u3070\u524a\u9664\u3092\u884c\u308f\u306a\u3044\n                        with open('my_rule.txt', 'r') as f:\n                                rule_data = f.read()\n                        url='https://networking.tyo1.conoha.io/v2.0/security-group-rules/'+rule_data\n                        header={'Accept':'application/json','X-Auth-Token':''}\n                        header['X-Auth-Token']=self.my_token\n                        r = requests.delete(url,headers=header)\n                        print \"delete_rule_data=\"+rule_data\n\n                if rule_flug == False:\n                        print \"no_rule_data\"\n\n        def set_ip(self): #\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3078\u30eb\u30fc\u30eb\u306e\u8ffd\u52a0 \u5916\u90e8\u306e\u6307\u5b9aIP\u304b\u3089tcp\u901a\u4fe1\u3092\u8a31\u53ef\u3059\u308b\u8a2d\u5b9a\u3001\u30dd\u30fc\u30c8\u5236\u9650\u306a\u3057\n                url = \"https://networking.tyo1.conoha.io/v2.0/security-group-rules\"\n                header = {'Accept':'application/json','X-Auth-Token':''}\n                header['X-Auth-Token']=self.my_token\n                data = {\"security_group_rule\":{\"direction\": \"ingress\",\"ethertype\": \"IPv4\",\"security_group_id\":\"\",\"protocol\":\"tcp\" ,\"remote_ip_prefix\":\"\"}}\n                data[\"security_group_rule\"][\"security_group_id\"]=self.my_rule\n                data[\"security_group_rule\"][\"remote_ip_prefix\"]=self.my_ip\n\n                r = requests.post(url,data=json.dumps(data),headers=header)\n\n                with open('rule_data.json','w') as f:\n                        f.write(r.text)\n\n                with open('rule_data.json','r') as f:\n                        jsonData = json.loads(f.read())\n\n                with open('my_rule.txt','w') as f: #\u30eb\u30fc\u30ebID\u3092\u8a18\u9332\n                        f.write(jsonData[\"security_group_rule\"][\"id\"])\n                        print \"set_rule=\"+jsonData[\"security_group_rule\"][\"id\"]\n\ndef set_rule_main(group): #\u30e1\u30a4\u30f3\u306e\u51e6\u7406\n        groupid = group\n        rule_setter = set_rule()\n        rule_setter.set_data(groupid)\n        rule_setter.remove()\n        rule_setter.set_ip()\n\n\nif __name__ == '__main__':\n        set_rule_main(\"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7ID\")\n\n\n\n\u66f4\u65b0\u3060\u3051\u306a\u3089\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\u3068IP\u53d6\u5f97\u3068\u4eca\u56de\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u4e00\u62ec\u51e6\u7406\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\n\n\u4f7f\u7528\u4f8b\n\nset_acl_main.py\n#!/usr/bin/env python\nimport ip\nimport get_token\nimport set_acl\n\nget_ip_url = \"http://www.axisnetworks.biz/tools/gip/\"\nuser = 'XXXXXX'\nkey = 'XXXXXX'\ntenantId = 'XXXXXXX'\nsecurity_group = \"XXXXXXXXX\"\n\nif __name__ == '__main__':\n        ip.ip_get(get_ip_url)\n        get_token.token_get_main(user,key,tenantId)\n        set_acl.set_rule_main(security_group)\n\n\nACL\u306b\u81ea\u5b85\u306eIP\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u81ea\u5b85\u306e\u30eb\u30fc\u30bf\u304c\u518d\u8d77\u52d5\u3057\u305f\u3068\u304d\u306bIP\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3044\u3001\u305d\u306e\u6642\u306e\u518d\u8a2d\u5b9a\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u4f5c\u6210\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u6700\u8fd1\u56de\u7dda\u3092\u5909\u3048\u305f\u3089\u307b\u307c\u5fc5\u8981\u7121\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u57fa\u672c\u7684\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u30eb\u30fc\u30eb\u306e\u8ffd\u52a0\u53ca\u3073\u66f4\u65b0\u3092\u884c\u3046\u3060\u3051\u306a\u306e\u3067\u3001\u5bfe\u8c61\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u3059\u3067\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u4e8b\u304c\u6761\u4ef6\u3068\u306a\u308a\u307e\u3059\u3002\n\n#\u3061\u3087\u3063\u3068\u3060\u3051\u8aac\u660e\n+ \u524d\u8a18\u4e8b\u306e[\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97](http://qiita.com/ototo/items/a0bfd65af8c460d563b1)\u3068[IP\u53d6\u5f97](http://qiita.com/ototo/items/3a1212e785fc53114b5b)\u306e`` `my_token.txt` ``\u3068`` `my_ip.txt` ``\u3092\u4f7f\u7528\u3057\u307e\u3059\n+ \u57fa\u672c\u7684\u306b\u306f[Requests](http://requests-docs-ja.readthedocs.io/en/latest/)\u3067\u3084\u308a\u53d6\u308a\u3092\u884c\u3046\n+ json\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u53d7\u3051\u53d6\u3063\u305fjson\u30c7\u30fc\u30bf\u306e\u51e6\u7406\u3092\u5b9f\u65bd\n+ \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u65e7IP\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u524a\u9664\u3082\u884c\u3044\u65b0\u305f\u306b\u30eb\u30fc\u30eb\u3092\u8ffd\u52a0\n+ \u6295\u7a3f\u306b\u5408\u308f\u305b\u3066\u30b3\u30e1\u30f3\u30c8\u3092\u65e5\u672c\u8a9e\u3067\u5165\u308c\u3066\u307e\u3059\u3002\u524a\u9664\u3059\u308b\u304b\u66f8\u304d\u76f4\u3057\u3066\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n#\u30b3\u30fc\u30c9\n```python:set_acl.py\n#!/usr/bin/env python\nimport requests\nimport json\nimport os\n\nclass set_rule():\n\n        def __init__(self): #\u521d\u671f\u5316\n                my_ip = \"\"\n                my_token = \"\"\n                my_rule =\"\"\n\n        def set_data(self,rule): #\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7ID\u3001\u30c8\u30fc\u30af\u30f3\u3001\u73fe\u5728\u306eIP\u306e\u30bb\u30c3\u30c8\n                self.my_rule = rule\n                with open('my_ip.txt','r') as f:\n                        self.my_ip = f.read()\n\n                with open('my_token.txt','r') as f:\n                        self.my_token = f.read()\n\n        def remove(self): #\u65e7\u767b\u9332\u60c5\u5831\u306e\u524a\u9664\n                rule_data = ''\n                rule_flug = os.path.exists(\"./my_rule.txt\")\n\n                if rule_flug: #\u30d5\u30a1\u30a4\u30eb\u304c\u7121\u3051\u308c\u3070\u524a\u9664\u3092\u884c\u308f\u306a\u3044\n                        with open('my_rule.txt', 'r') as f:\n                                rule_data = f.read()\n                        url='https://networking.tyo1.conoha.io/v2.0/security-group-rules/'+rule_data\n                        header={'Accept':'application/json','X-Auth-Token':''}\n                        header['X-Auth-Token']=self.my_token\n                        r = requests.delete(url,headers=header)\n                        print \"delete_rule_data=\"+rule_data\n\n                if rule_flug == False:\n                        print \"no_rule_data\"\n\n        def set_ip(self): #\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3078\u30eb\u30fc\u30eb\u306e\u8ffd\u52a0 \u5916\u90e8\u306e\u6307\u5b9aIP\u304b\u3089tcp\u901a\u4fe1\u3092\u8a31\u53ef\u3059\u308b\u8a2d\u5b9a\u3001\u30dd\u30fc\u30c8\u5236\u9650\u306a\u3057\n                url = \"https://networking.tyo1.conoha.io/v2.0/security-group-rules\"\n                header = {'Accept':'application/json','X-Auth-Token':''}\n                header['X-Auth-Token']=self.my_token\n                data = {\"security_group_rule\":{\"direction\": \"ingress\",\"ethertype\": \"IPv4\",\"security_group_id\":\"\",\"protocol\":\"tcp\" ,\"remote_ip_prefix\":\"\"}}\n                data[\"security_group_rule\"][\"security_group_id\"]=self.my_rule\n                data[\"security_group_rule\"][\"remote_ip_prefix\"]=self.my_ip\n\n                r = requests.post(url,data=json.dumps(data),headers=header)\n\n                with open('rule_data.json','w') as f:\n                        f.write(r.text)\n\n                with open('rule_data.json','r') as f:\n                        jsonData = json.loads(f.read())\n\n                with open('my_rule.txt','w') as f: #\u30eb\u30fc\u30ebID\u3092\u8a18\u9332\n                        f.write(jsonData[\"security_group_rule\"][\"id\"])\n                        print \"set_rule=\"+jsonData[\"security_group_rule\"][\"id\"]\n\ndef set_rule_main(group): #\u30e1\u30a4\u30f3\u306e\u51e6\u7406\n        groupid = group\n        rule_setter = set_rule()\n        rule_setter.set_data(groupid)\n        rule_setter.remove()\n        rule_setter.set_ip()\n\n\nif __name__ == '__main__':\n        set_rule_main(\"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7ID\")\n\n```\n\u66f4\u65b0\u3060\u3051\u306a\u3089\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b[\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97](http://qiita.com/ototo/items/a0bfd65af8c460d563b1)\u3068[IP\u53d6\u5f97](http://qiita.com/ototo/items/3a1212e785fc53114b5b)\u3068\u4eca\u56de\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u4e00\u62ec\u51e6\u7406\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\n\n#\u4f7f\u7528\u4f8b\n\n```python:set_acl_main.py\n#!/usr/bin/env python\nimport ip\nimport get_token\nimport set_acl\n\nget_ip_url = \"http://www.axisnetworks.biz/tools/gip/\"\nuser = 'XXXXXX'\nkey = 'XXXXXX'\ntenantId = 'XXXXXXX'\nsecurity_group = \"XXXXXXXXX\"\n\nif __name__ == '__main__':\n        ip.ip_get(get_ip_url)\n        get_token.token_get_main(user,key,tenantId)\n        set_acl.set_rule_main(security_group)\n```\n\nACL\u306b\u81ea\u5b85\u306eIP\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u81ea\u5b85\u306e\u30eb\u30fc\u30bf\u304c\u518d\u8d77\u52d5\u3057\u305f\u3068\u304d\u306bIP\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3044\u3001\u305d\u306e\u6642\u306e\u518d\u8a2d\u5b9a\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u4f5c\u6210\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u6700\u8fd1\u56de\u7dda\u3092\u5909\u3048\u305f\u3089\u307b\u307c\u5fc5\u8981\u7121\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n", "tags": ["Python", "Conoha"]}