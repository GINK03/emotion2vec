{"context": "Gyazo + Amazon CloudFront \u3067\u7c21\u5358\u2606\u9ad8\u901f\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u5171\u6709\n\u500b\u4eba\u7528\u306e Gyazo \u74b0\u5883\u5411\u3051\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u624b\u3092\u5165\u308c\u3066\u76f4\u63a5 Dropbox \u3084 S3 \u3078\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3044\u3046\u30c6\u30af\u30cb\u30c3\u30af\u304c\u3042\u308b\u3002\u81ea\u524d\u30b5\u30fc\u30d0\u3092\u7ba1\u7406\u3059\u308b\u3053\u3068\u306a\u304f\u5229\u7528\u3067\u304d\u3066\u5927\u5909\u30ca\u30a4\u30b9\u306a\u3082\u306e\u306e\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u6bd4\u8f03\u7684\u91cd\u8981\u306a\u56fa\u6709\u60c5\u5831\u3092\u542b\u3093\u3060\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u53d6\u308a\u6271\u3044\u304c\u82e5\u5e72\u96e3\u3057\u3044\u3068\u601d\u3063\u305f\u3002\n\u305d\u3053\u3067 AWS Lambda \u3092\u5229\u7528\u3057\u3066\u3001S3 \u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3092\u884c\u3046\u7f72\u540d\u4ed8\u304d URL \u306e\u767a\u884c\u3092\u305d\u3061\u3089\u3067\u884c\u3044\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u306f\u53d7\u3051\u53d6\u3063\u305f\u60c5\u5831\u3060\u3051\u3067\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51e6\u7406\u304c\u9032\u3081\u308c\u308b\u3088\u3046\u306a\u4f53\u5236\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\u51e6\u7406\u306e\u6d41\u308c\u3068\u5f79\u5272\n\n\nGyazo\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u64ae\u308b\u3002\n\u901a\u5e38\u306a\u3089\u3070 Gyazo \u30b5\u30fc\u30d0\u3078\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3053\u308d\u3092\u3001\u5f8c\u8ff0\u3059\u308b AWS Lambda \u3078 S3 \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u305f\u3081\u306e\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3059\u308b\u3088\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3002\u305d\u306e\u5f8c\u3001\u7f72\u540d\u4ed8\u304d URL \u3092\u4f7f\u3063\u3066 S3 \u3078\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3002\n\nAmazon S3\nGyazo \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u3068\u5171\u306b\u53c2\u7167\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3002\n\nAWS Lambda\naws-sdk \u3092\u4f7f\u3063\u3066 S3 \u3078\u306e\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u305f\u3081\u306e\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3059\u308b\u3002\n\nAmazon API Gateway\n\u4e0a\u8a18\u306e Lambda Function \u3092 HTTPS \u7d4c\u7531\u3067\u3084\u308a\u3068\u308a\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\n\u69cb\u7bc9\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u624b\u9806\n\nAmazon S3\n\u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\nGyazo \u306f\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u64ae\u3063\u305f\u6b21\u306e\u77ac\u9593\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u305d\u306e\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u304c\u8efd\u5feb\u3067\u7d20\u6674\u3089\u3057\u304f\u3001\u305d\u308c\u306f\u540c\u7b49\u306e\u52d5\u304d\u306b\u306a\u3063\u3066\u6b32\u3057\u3044\u3002\u305d\u3053\u3067\u3053\u306e\u30d0\u30b1\u30c3\u30c8\u5185\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u516c\u958b\u72b6\u614b\u306b\u3059\u308b\u3079\u304f\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\u3002 (BUCKET_NAME \u306e\u90e8\u5206\u306f\u5b9f\u969b\u306e S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u8a18\u8ff0)\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1462499000000\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::BUCKET_NAME/*\"\n        }\n    ]\n}\n\n\nAWS Identity and Access Management (IAM)\nIAM \u3067 Lambda \u7528\u306e\u30ed\u30fc\u30eb\u3092\u4f5c\u308b\u3002\u3053\u3053\u3067\u306f S3 \u3078\u306e PutObject \u64cd\u4f5c\u3068\u3001Lambda \u81ea\u8eab\u306e\u30ed\u30b0\u306e\u66f8\u304d\u51fa\u3057\u6a29\u9650\u3092\u4ed8\u4e0e\u3059\u308b\u3002(BUCKET_NAME \u306e\u90e8\u5206\u306f\u5b9f\u969b\u306e S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u8a18\u8ff0)\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:PutObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::BUCKET_NAME\",\n                \"arn:aws:s3:::BUCKET_NAME/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": \"arn:aws:logs:*:*:*\"\n        }\n    ]\n}\n\n\nAWS Lambda\naws-sdk \u3092\u4f7f\u3063\u3066 S3 \u3078\u306e PutObject \u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3059\u308b\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3059\u308b\u3002\nOSS\u3068\u3057\u3066\u516c\u958b\u3055\u308c\u3066\u3044\u308b Gyazo \u306e\u30b5\u30fc\u30d0\u306e\u632f\u308b\u821e\u3044\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a MD5 \u30cf\u30c3\u30b7\u30e5\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u3092\u7b97\u51fa\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6c7a\u5b9a\u3057\u305f\u308a\u3057\u3066\u3044\u308b\u304c\u3001\u4eca\u56de\u306e Lambda \u306e\u30b3\u30fc\u30c9\u3067\u306f\u753b\u50cf\u30c7\u30fc\u30bf\u81ea\u4f53\u306f\u53d7\u3051\u53d6\u3089\u305a\u5fc5\u8981\u30c7\u30fc\u30bf\u3092 Gyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u304b\u3089\u53d7\u3051\u53d6\u3063\u3066\u51e6\u7406\u3092\u3059\u308b\u5f62\u5f0f\u306b\u3057\u305f\u3002\u3057\u305f\u304c\u3063\u3066\u5143\u3005\u30b5\u30fc\u30d0\u5074\u3067\u3084\u3063\u3066\u3044\u305f\u51e6\u7406\u306e\u4e00\u90e8\u304c Gyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u79fb\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002(BUCKET_NAME \u306e\u90e8\u5206\u306f\u5b9f\u969b\u306e S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u8a18\u8ff0)\n\u30d5\u30a1\u30a4\u30eb\u306e\u30cf\u30c3\u30b7\u30e5\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u3068 Content-Type \u3092\u53d7\u3051\u53d6\u308a\u5185\u5bb9\u3092\u691c\u8a3c\u3001\u305d\u306e\u5185\u5bb9\u306b\u57fa\u3065\u3044\u3066 S3 \u306e\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3057\u3066\u8fd4\u5374\u3057\u3066\u3044\u308b\u3002\n\u4f59\u5206\u306a\u304c\u3089\u3001PNG, GIF\u3068\u3044\u3063\u305f\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u6271\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067JPEG\u753b\u50cf\u3082\u53d7\u3051\u5165\u308c\u53ef\u80fd\u306b\u3057\u3066\u304a\u3044\u305f\u3002\n\nLambda\u95a2\u6570(node.js)\nvar aws = require('aws-sdk');\nvar s3 = new aws.S3();\n\nvar BUCKET = \"BUCKET_NAME\";\nvar URL_PREFIX = 'https://s3-ap-northeast-1.amazonaws.com/' + BUCKET + '/';\n\nexports.handler = function (event, context, callback) {\n    var hash = event.hash;\n    var contentType = event.contentType;\n\n    if (!hash) {\n        callback('no set a file hash digest.');\n        return;\n    }\n\n    if (!contentType) {\n        callback('no set content type.');\n        return;\n    }\n\n    var key;\n\n    if (contentType.match(/(\\.|\\/)png$/i)) {\n        key = hash + \".png\";\n    } else if (contentType.match(/(\\.|\\/)gif$/i)) {\n        key = hash + \".gif\";\n    } else if (contentType.match(/(\\.|\\/)jpe?g$/i)) {\n        key = hash + \".jpg\";\n    } else {\n        callback('invalid content type (gif, jpg, or png)');\n        return;\n    }\n\n    // console.log('Content-Type: ' + contentType);\n\n    var params = {\n        Bucket: BUCKET,\n        Key: key,\n        Body: '',\n        ContentType: contentType,\n        Expires: 60\n    };\n    s3.getSignedUrl('putObject', params, function (err, url) {\n        if (err) {\n            callback(err);\n            return;\n        }\n\n        // console.log('Signed-URL: ', url);\n\n        callback(null, {\n            'signedUrl': url,\n            'imageUrl': URL_PREFIX + key\n        });\n    });\n};\n\n\n\n\u4f5c\u6210\u3057\u305f Lambda function \u306e\u8a2d\u5b9a\u753b\u9762\u304b\u3089\u300cAPI endpoints\u300d\u3092\u30bf\u30d6\u3092\u958b\u3044\u3066 API Gateway \u7d4c\u7531\u3067\u3053\u306e function \u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\u4f5c\u6210\u5f8c\u306b API Gateway \u5074\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u3053\u306e function \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 URL \u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\nGyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\nGyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066\u632f\u308b\u821e\u3044\u306f\u3001OSX \u7248\u306e\u5834\u5408 Gyazo.app/Contents/Resources/script \u306b ruby \u30b3\u30fc\u30c9\u3068\u3057\u3066\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092 AWS \u5411\u3051\u306e\u632f\u308b\u821e\u3044\u3068\u306a\u308b\u3088\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u63db\u3048\u308b\u3002\uff08\u5143\u306e Gyazo.app \u3092\u5225\u540d\u306b\u30b3\u30d4\u30fc\u3057\u305f\u4e0a\u3067\u5225\u30a2\u30d7\u30ea\u3068\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\uff09\n\u307e\u305a\u306f\u30b3\u30fc\u30c9\u306e\u5148\u982d\u3067\u3001\u8ffd\u52a0\u3067\u5fc5\u8981\u306b\u306a\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u3002\n\n\u8aad\u307f\u8fbc\u307f\u30e2\u30b8\u30e5\u30fc\u30eb\u8ffd\u52a0\nrequire 'uri'\nrequire 'mime/types'\nrequire 'digest/md5'\n\n\n\u7d9a\u3051\u3066 AWS \u5411\u3051\u306e\u65b0\u3057\u3044\u632f\u308b\u821e\u3044\u3092\u95a2\u6570\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n\n\u7f72\u540d\u4ed8\u304dURL\u306e\u767a\u884c\u30ea\u30af\u30a8\u30b9\u30c8\nS3\u3078\u306e\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\n\n\u307e\u305a\u306f\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3059\u308b\u95a2\u6570\u3002\u3053\u3053\u3067\u306f API Gateway \u3092\u901a\u3058\u3066 Lambda \u3078\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8 URL \u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u7528\u7f72\u540d\u4ed8\u304dURL\u3092\u767a\u884c\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\n@resource = \"https://example.execute-api.ap-northeast-1.amazonaws.com/prod/s3_put_url\"\n\ndef create_upload_url(hash, content_type)\n  uri = URI.parse(@resource)\n  use_ssl = uri.scheme == 'https' ? true : false\n\n  begin\n    res = Net::HTTP.start(uri.host, uri.port, :use_ssl => use_ssl) do |http|\n      body = {\n        \"hash\" => hash,\n        \"contentType\" => content_type,\n      }.to_json\n      header = {\n        \"Content-Type\" => \"application/json\"\n      }\n\n      http.open_timeout = 10\n      http.read_timeout = 10\n      http.post(uri.request_uri, body, header)\n    end\n\n    case res\n    when Net::HTTPSuccess\n      JSON.parse(res.body)\n    else\n      abort(\"Failed to upload url creation.\\n#{res.code}: #{res.message}\")\n    end\n  rescue => e\n    abort(\"Failed to upload url creation.\\n#{e}\")\n    nil\n  end\nend\n\n\n\u3082\u3046\u4e00\u3064\u306e S3 \u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3092\u884c\u3046\u95a2\u6570\u3002\u767a\u884c\u3055\u308c\u305f\u7f72\u540d\u4ed8\u304d URL \u3092\u6e21\u3057\u3066\u51e6\u7406\u3092\u884c\u3046\u306e\u3067\u3001S3 \u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u306f\u3053\u3053\u3067\u306f\u767b\u5834\u3057\u306a\u3044\u3002\n\n\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u7528\u7f72\u540d\u4ed8\u304dURL\u3092\u4f7f\u3063\u3066S3\u3078\u30d5\u30a1\u30a4\u30eb\u3092\u683c\u7d0d\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\ndef upload_file(url, data, content_type)\n  uri = URI.parse(url)\n  use_ssl = uri.scheme == 'https' ? true : false\n\n  begin\n    res = Net::HTTP.start(uri.host, uri.port, :use_ssl => use_ssl) do |http|\n      req = Net::HTTP::Put.new(uri.request_uri)\n      req[\"Content-Type\"] = content_type\n      req.body = data\n      http.request(req)\n    end\n\n    case res\n    when Net::HTTPSuccess\n      res\n    else\n      abort(\"Failed to upload.\\n#{res.code}: #{res.message}\")\n    end\n  rescue => e\n    abort(\"Failed to upload.\\n#{e}\")\n    nil\n  end\nend\n\n\n\u6700\u5f8c\u306b\u3001\u5143\u3005\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u7b87\u6240\u306e\u30b3\u30fc\u30c9\u4ee5\u4e0b\u3092\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u524d\u8ff0\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u30b3\u30fc\u30c9\u3078\u66f8\u304d\u63db\u3048\u308b\u3002\n\n\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51e6\u7406\u30b3\u30fc\u30c9\u306e\u5909\u66f4\n# upload\nhash = Digest::MD5.hexdigest(imagedata)\ncontent_type = \"image/png\"\nurls = create_upload_url(hash, content_type)\nres = upload_file(urls[\"signedUrl\"], imagedata, content_type)\n\nif res.code.to_i >= 400\n  abort(\"Failed to upload.\\n#{res.code}: #{res.message}\")\nend\n\nIO.popen(\"pbcopy\",\"r+\"){|io|\n  io.write urls[\"imageUrl\"]\n  io.close\n}\nsystem \"open #{urls[\"imageUrl\"]}\"\n\n\n\n\u4ee5\u4e0a\u3067\u5b8c\u4e86\u3002\n\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u7248 Gyazo.app \u3092\u4f7f\u3063\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u64ae\u3063\u3066\u307f\u308b\u3068\u3001\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u8868\u793a\u3055\u308c\u308b\u753b\u50cf\u3084\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3078\u30b3\u30d4\u30fc\u3055\u308c\u308b URL \u306f S3 \u3078\u30a2\u30c3\u30d7\u3055\u308c\u305f\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3002\n\n\u307e\u3068\u3081\nGyazo \u306e\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u6d41\u308c\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3001AWS Lambda \u3067 S3 \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u305f\u3081\u306e\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3057\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u683c\u7d0d\u3059\u308b\u4ed5\u7d44\u307f\u3092\u7d39\u4ecb\u3057\u305f\u3002\n\u3053\u306e\u4ed5\u7d44\u307f\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08\uff1d Gyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff09\u306b AWS \u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u60c5\u5831\u306a\u3069\u304c\u4e00\u5207\u767b\u5834\u3059\u308b\u3053\u3068\u304c\u306a\u304f\u552f\u4e00 Lambda \u3092\u53e9\u304f API Gateway \u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8 URL \u304c\u73fe\u308c\u308b\u306e\u307f\u306a\u306e\u3067\u3001\u305f\u3068\u3048\u3070\u30c1\u30fc\u30e0\u306a\u3069\u3067\u5229\u7528\u3059\u308b\u969b\u306b\u3082\u5b89\u5168\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u914d\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n[Gyazo + Amazon CloudFront \u3067\u7c21\u5358\u2606\u9ad8\u901f\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u5171\u6709](http://d.hatena.ne.jp/naoya/20130218/1361162225)\n\n\n\u500b\u4eba\u7528\u306e Gyazo \u74b0\u5883\u5411\u3051\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u624b\u3092\u5165\u308c\u3066\u76f4\u63a5 Dropbox \u3084 S3 \u3078\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3044\u3046\u30c6\u30af\u30cb\u30c3\u30af\u304c\u3042\u308b\u3002\u81ea\u524d\u30b5\u30fc\u30d0\u3092\u7ba1\u7406\u3059\u308b\u3053\u3068\u306a\u304f\u5229\u7528\u3067\u304d\u3066\u5927\u5909\u30ca\u30a4\u30b9\u306a\u3082\u306e\u306e\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u6bd4\u8f03\u7684\u91cd\u8981\u306a\u56fa\u6709\u60c5\u5831\u3092\u542b\u3093\u3060\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u53d6\u308a\u6271\u3044\u304c\u82e5\u5e72\u96e3\u3057\u3044\u3068\u601d\u3063\u305f\u3002\n\n\u305d\u3053\u3067 AWS Lambda \u3092\u5229\u7528\u3057\u3066\u3001S3 \u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3092\u884c\u3046\u7f72\u540d\u4ed8\u304d URL \u306e\u767a\u884c\u3092\u305d\u3061\u3089\u3067\u884c\u3044\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u306f\u53d7\u3051\u53d6\u3063\u305f\u60c5\u5831\u3060\u3051\u3067\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51e6\u7406\u304c\u9032\u3081\u308c\u308b\u3088\u3046\u306a\u4f53\u5236\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\n## \u51e6\u7406\u306e\u6d41\u308c\u3068\u5f79\u5272\n\n![a200ceb299ac1e3739b6a9dc9d80c34b.png](https://qiita-image-store.s3.amazonaws.com/0/18511/ad8471ca-e8fd-6915-3a07-627e605f698d.png \"a200ceb299ac1e3739b6a9dc9d80c34b.png\")\n\n\n### Gyazo\n\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u64ae\u308b\u3002\n\u901a\u5e38\u306a\u3089\u3070 Gyazo \u30b5\u30fc\u30d0\u3078\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3053\u308d\u3092\u3001\u5f8c\u8ff0\u3059\u308b AWS Lambda \u3078 S3 \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u305f\u3081\u306e\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3059\u308b\u3088\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3002\u305d\u306e\u5f8c\u3001\u7f72\u540d\u4ed8\u304d URL \u3092\u4f7f\u3063\u3066 S3 \u3078\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3002\n\n### Amazon S3\n\nGyazo \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u3068\u5171\u306b\u53c2\u7167\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3002\n\n### AWS Lambda\n\naws-sdk \u3092\u4f7f\u3063\u3066 S3 \u3078\u306e\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u305f\u3081\u306e\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3059\u308b\u3002\n\n### Amazon API Gateway\n\n\u4e0a\u8a18\u306e Lambda Function \u3092 HTTPS \u7d4c\u7531\u3067\u3084\u308a\u3068\u308a\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\n\n\n## \u69cb\u7bc9\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u624b\u9806\n\n### Amazon S3\n\n\u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nGyazo \u306f\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u64ae\u3063\u305f\u6b21\u306e\u77ac\u9593\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u305d\u306e\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u304c\u8efd\u5feb\u3067\u7d20\u6674\u3089\u3057\u304f\u3001\u305d\u308c\u306f\u540c\u7b49\u306e\u52d5\u304d\u306b\u306a\u3063\u3066\u6b32\u3057\u3044\u3002\u305d\u3053\u3067\u3053\u306e\u30d0\u30b1\u30c3\u30c8\u5185\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u516c\u958b\u72b6\u614b\u306b\u3059\u308b\u3079\u304f\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\u3002 (`BUCKET_NAME` \u306e\u90e8\u5206\u306f\u5b9f\u969b\u306e S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u8a18\u8ff0)\n\n```S3\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1462499000000\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::BUCKET_NAME/*\"\n        }\n    ]\n}\n```\n\n\n### AWS Identity and Access Management (IAM)\n\nIAM \u3067 Lambda \u7528\u306e\u30ed\u30fc\u30eb\u3092\u4f5c\u308b\u3002\u3053\u3053\u3067\u306f S3 \u3078\u306e PutObject \u64cd\u4f5c\u3068\u3001Lambda \u81ea\u8eab\u306e\u30ed\u30b0\u306e\u66f8\u304d\u51fa\u3057\u6a29\u9650\u3092\u4ed8\u4e0e\u3059\u308b\u3002(`BUCKET_NAME` \u306e\u90e8\u5206\u306f\u5b9f\u969b\u306e S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u8a18\u8ff0)\n\n```Lambda\u7528\u30ed\u30fc\u30eb\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:PutObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::BUCKET_NAME\",\n                \"arn:aws:s3:::BUCKET_NAME/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": \"arn:aws:logs:*:*:*\"\n        }\n    ]\n}\n```\n\n### AWS Lambda\n\naws-sdk \u3092\u4f7f\u3063\u3066 S3 \u3078\u306e PutObject \u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3059\u308b\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3059\u308b\u3002\n\n[OSS\u3068\u3057\u3066\u516c\u958b\u3055\u308c\u3066\u3044\u308b Gyazo](https://github.com/gyazo/Gyazo) \u306e\u30b5\u30fc\u30d0\u306e\u632f\u308b\u821e\u3044\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a MD5 \u30cf\u30c3\u30b7\u30e5\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u3092\u7b97\u51fa\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6c7a\u5b9a\u3057\u305f\u308a\u3057\u3066\u3044\u308b\u304c\u3001\u4eca\u56de\u306e Lambda \u306e\u30b3\u30fc\u30c9\u3067\u306f\u753b\u50cf\u30c7\u30fc\u30bf\u81ea\u4f53\u306f\u53d7\u3051\u53d6\u3089\u305a\u5fc5\u8981\u30c7\u30fc\u30bf\u3092 Gyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u304b\u3089\u53d7\u3051\u53d6\u3063\u3066\u51e6\u7406\u3092\u3059\u308b\u5f62\u5f0f\u306b\u3057\u305f\u3002\u3057\u305f\u304c\u3063\u3066\u5143\u3005\u30b5\u30fc\u30d0\u5074\u3067\u3084\u3063\u3066\u3044\u305f\u51e6\u7406\u306e\u4e00\u90e8\u304c Gyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u79fb\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002(`BUCKET_NAME` \u306e\u90e8\u5206\u306f\u5b9f\u969b\u306e S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u8a18\u8ff0)\n\u30d5\u30a1\u30a4\u30eb\u306e\u30cf\u30c3\u30b7\u30e5\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u3068 Content-Type \u3092\u53d7\u3051\u53d6\u308a\u5185\u5bb9\u3092\u691c\u8a3c\u3001\u305d\u306e\u5185\u5bb9\u306b\u57fa\u3065\u3044\u3066 S3 \u306e\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3057\u3066\u8fd4\u5374\u3057\u3066\u3044\u308b\u3002\n\u4f59\u5206\u306a\u304c\u3089\u3001PNG, GIF\u3068\u3044\u3063\u305f\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u6271\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067JPEG\u753b\u50cf\u3082\u53d7\u3051\u5165\u308c\u53ef\u80fd\u306b\u3057\u3066\u304a\u3044\u305f\u3002\n\n\n```javascript:Lambda\u95a2\u6570(node.js)\nvar aws = require('aws-sdk');\nvar s3 = new aws.S3();\n\nvar BUCKET = \"BUCKET_NAME\";\nvar URL_PREFIX = 'https://s3-ap-northeast-1.amazonaws.com/' + BUCKET + '/';\n\nexports.handler = function (event, context, callback) {\n    var hash = event.hash;\n    var contentType = event.contentType;\n\n    if (!hash) {\n        callback('no set a file hash digest.');\n        return;\n    }\n\n    if (!contentType) {\n        callback('no set content type.');\n        return;\n    }\n\n    var key;\n\n    if (contentType.match(/(\\.|\\/)png$/i)) {\n        key = hash + \".png\";\n    } else if (contentType.match(/(\\.|\\/)gif$/i)) {\n        key = hash + \".gif\";\n    } else if (contentType.match(/(\\.|\\/)jpe?g$/i)) {\n        key = hash + \".jpg\";\n    } else {\n        callback('invalid content type (gif, jpg, or png)');\n        return;\n    }\n\n    // console.log('Content-Type: ' + contentType);\n\n    var params = {\n        Bucket: BUCKET,\n        Key: key,\n        Body: '',\n        ContentType: contentType,\n        Expires: 60\n    };\n    s3.getSignedUrl('putObject', params, function (err, url) {\n        if (err) {\n            callback(err);\n            return;\n        }\n\n        // console.log('Signed-URL: ', url);\n\n        callback(null, {\n            'signedUrl': url,\n            'imageUrl': URL_PREFIX + key\n        });\n    });\n};\n\n```\n\n\u4f5c\u6210\u3057\u305f Lambda function \u306e\u8a2d\u5b9a\u753b\u9762\u304b\u3089\u300cAPI endpoints\u300d\u3092\u30bf\u30d6\u3092\u958b\u3044\u3066 API Gateway \u7d4c\u7531\u3067\u3053\u306e function \u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\u4f5c\u6210\u5f8c\u306b API Gateway \u5074\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u3053\u306e function \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 URL \u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\n### Gyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n\nGyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066\u632f\u308b\u821e\u3044\u306f\u3001OSX \u7248\u306e\u5834\u5408 `Gyazo.app/Contents/Resources/script` \u306b ruby \u30b3\u30fc\u30c9\u3068\u3057\u3066\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092 AWS \u5411\u3051\u306e\u632f\u308b\u821e\u3044\u3068\u306a\u308b\u3088\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u63db\u3048\u308b\u3002\uff08\u5143\u306e Gyazo.app \u3092\u5225\u540d\u306b\u30b3\u30d4\u30fc\u3057\u305f\u4e0a\u3067\u5225\u30a2\u30d7\u30ea\u3068\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\uff09\n\n\u307e\u305a\u306f\u30b3\u30fc\u30c9\u306e\u5148\u982d\u3067\u3001\u8ffd\u52a0\u3067\u5fc5\u8981\u306b\u306a\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u3002\n\n```ruby:\u8aad\u307f\u8fbc\u307f\u30e2\u30b8\u30e5\u30fc\u30eb\u8ffd\u52a0\nrequire 'uri'\nrequire 'mime/types'\nrequire 'digest/md5'\n```\n\n\u7d9a\u3051\u3066 AWS \u5411\u3051\u306e\u65b0\u3057\u3044\u632f\u308b\u821e\u3044\u3092\u95a2\u6570\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3002\n\n* \u7f72\u540d\u4ed8\u304dURL\u306e\u767a\u884c\u30ea\u30af\u30a8\u30b9\u30c8\n* S3\u3078\u306e\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\n\n\u307e\u305a\u306f\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3059\u308b\u95a2\u6570\u3002\u3053\u3053\u3067\u306f API Gateway \u3092\u901a\u3058\u3066 Lambda \u3078\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8 URL \u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```ruby:\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u7528\u7f72\u540d\u4ed8\u304dURL\u3092\u767a\u884c\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\n@resource = \"https://example.execute-api.ap-northeast-1.amazonaws.com/prod/s3_put_url\"\n\ndef create_upload_url(hash, content_type)\n  uri = URI.parse(@resource)\n  use_ssl = uri.scheme == 'https' ? true : false\n\n  begin\n    res = Net::HTTP.start(uri.host, uri.port, :use_ssl => use_ssl) do |http|\n      body = {\n        \"hash\" => hash,\n        \"contentType\" => content_type,\n      }.to_json\n      header = {\n        \"Content-Type\" => \"application/json\"\n      }\n\n      http.open_timeout = 10\n      http.read_timeout = 10\n      http.post(uri.request_uri, body, header)\n    end\n\n    case res\n    when Net::HTTPSuccess\n      JSON.parse(res.body)\n    else\n      abort(\"Failed to upload url creation.\\n#{res.code}: #{res.message}\")\n    end\n  rescue => e\n    abort(\"Failed to upload url creation.\\n#{e}\")\n    nil\n  end\nend\n```\n\n\u3082\u3046\u4e00\u3064\u306e S3 \u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3092\u884c\u3046\u95a2\u6570\u3002\u767a\u884c\u3055\u308c\u305f\u7f72\u540d\u4ed8\u304d URL \u3092\u6e21\u3057\u3066\u51e6\u7406\u3092\u884c\u3046\u306e\u3067\u3001S3 \u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u306f\u3053\u3053\u3067\u306f\u767b\u5834\u3057\u306a\u3044\u3002\n\n```ruby:\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u7528\u7f72\u540d\u4ed8\u304dURL\u3092\u4f7f\u3063\u3066S3\u3078\u30d5\u30a1\u30a4\u30eb\u3092\u683c\u7d0d\u3059\u308b\u95a2\u6570\u3092\u8ffd\u52a0\ndef upload_file(url, data, content_type)\n  uri = URI.parse(url)\n  use_ssl = uri.scheme == 'https' ? true : false\n\n  begin\n    res = Net::HTTP.start(uri.host, uri.port, :use_ssl => use_ssl) do |http|\n      req = Net::HTTP::Put.new(uri.request_uri)\n      req[\"Content-Type\"] = content_type\n      req.body = data\n      http.request(req)\n    end\n\n    case res\n    when Net::HTTPSuccess\n      res\n    else\n      abort(\"Failed to upload.\\n#{res.code}: #{res.message}\")\n    end\n  rescue => e\n    abort(\"Failed to upload.\\n#{e}\")\n    nil\n  end\nend\n```\n\n\n\u6700\u5f8c\u306b\u3001\u5143\u3005\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u7b87\u6240\u306e\u30b3\u30fc\u30c9\u4ee5\u4e0b\u3092\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u524d\u8ff0\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u30b3\u30fc\u30c9\u3078\u66f8\u304d\u63db\u3048\u308b\u3002\n\n```ruby:\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51e6\u7406\u30b3\u30fc\u30c9\u306e\u5909\u66f4\n# upload\nhash = Digest::MD5.hexdigest(imagedata)\ncontent_type = \"image/png\"\nurls = create_upload_url(hash, content_type)\nres = upload_file(urls[\"signedUrl\"], imagedata, content_type)\n\nif res.code.to_i >= 400\n  abort(\"Failed to upload.\\n#{res.code}: #{res.message}\")\nend\n\nIO.popen(\"pbcopy\",\"r+\"){|io|\n  io.write urls[\"imageUrl\"]\n  io.close\n}\nsystem \"open #{urls[\"imageUrl\"]}\"\n\n```\n\n\n\u4ee5\u4e0a\u3067\u5b8c\u4e86\u3002\n\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u7248 Gyazo.app \u3092\u4f7f\u3063\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u64ae\u3063\u3066\u307f\u308b\u3068\u3001\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u8868\u793a\u3055\u308c\u308b\u753b\u50cf\u3084\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3078\u30b3\u30d4\u30fc\u3055\u308c\u308b URL \u306f S3 \u3078\u30a2\u30c3\u30d7\u3055\u308c\u305f\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3002\n\n\n\n## \u307e\u3068\u3081\n\nGyazo \u306e\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u6d41\u308c\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3001AWS Lambda \u3067 S3 \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u305f\u3081\u306e\u7f72\u540d\u4ed8\u304d URL \u3092\u767a\u884c\u3057\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u683c\u7d0d\u3059\u308b\u4ed5\u7d44\u307f\u3092\u7d39\u4ecb\u3057\u305f\u3002\n\n\u3053\u306e\u4ed5\u7d44\u307f\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08\uff1d Gyazo \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff09\u306b AWS \u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u60c5\u5831\u306a\u3069\u304c\u4e00\u5207\u767b\u5834\u3059\u308b\u3053\u3068\u304c\u306a\u304f\u552f\u4e00 Lambda \u3092\u53e9\u304f API Gateway \u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8 URL \u304c\u73fe\u308c\u308b\u306e\u307f\u306a\u306e\u3067\u3001\u305f\u3068\u3048\u3070\u30c1\u30fc\u30e0\u306a\u3069\u3067\u5229\u7528\u3059\u308b\u969b\u306b\u3082\u5b89\u5168\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u914d\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n", "tags": ["AWS", "S3", "Gyazo", "lambda"]}