{"context": " More than 1 year has passed since last update.\u3044\u3061\u3044\u3061gem\u306b\u3057\u3066\u30ea\u30dd\u30b8\u30c8\u30ea\u3064\u304f\u308b\u307b\u3069\u3067\u3082\u306a\u3044\u5358\u7d14\u306a\u3082\u306e\u306a\u306e\u3067\u30b3\u30d4\u30da\u3067\u306f\u3063\u3064\u3051\u3066\u304a\u304d\u307e\u3059\u304c\nhttps://github.com/kkosuge/hatena-bookmark\n\u2191\u3053\u306egem\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\nout_hatena_bookmark.rb\nclass Fluent::HatenaBookmarkOutput < Fluent::Output\n  Fluent::Plugin.register_output('hatena_bookmark', self)\n\n  config_param :consumer_key, :string\n  config_param :consumer_secret, :string\n  config_param :request_token, :string\n  config_param :request_secret, :string\n\n  def initialize\n    super\n    require 'hatena-bookmark'\n  end \n\n  def configure(conf)\n    super\n    @hatebu = Hatena::Bookmark.new(\n      consumer_key:    conf['consumer_key'],\n      consumer_secret: conf['consumer_secret'],\n      request_token:   conf['request_token'],\n      request_secret:  conf['request_secret']\n    )   \n  end \n\n  def emit(tag, es, chain)\n    es.each do |time, record|\n      create_or_edit(record)\n    end \n    chain.next\n  end \n\n  def create_or_edit(record)\n    begin\n      if record['tag'].class == String\n        tag = [record['tag']]\n      else\n        tag = record['tag']\n      end\n      comment = tag.map{|t| \"[#{t}]\"}.join('')\n      res = @hatebu.create(:url => record['url'], :comment => comment)\n      res_comment = res[\"entry\"][\"summary\"]\n      # \u30ec\u30b9\u30dd\u30f3\u30b9\u306esummary\u304c\u6295\u7a3f\u3057\u305f\u5185\u5bb9\u3068\u540c\u4e00\u3067\u306a\u3044\u3068\u304d\u3001\n      # \u30d6\u30c3\u30af\u30de\u30fc\u30af\u6e08\u307f\u306eURL\u3092create\u3057\u3088\u3046\u3068\u3057\u305f\u305f\u3081\u7121\u8996\u3055\u308c\u3066\u3044\u308b\n      if res_comment != comment\n        eid = res[\"entry\"][\"id\"].split(\"-\").last\n        # \u91cd\u8907\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3060\u3051tag\u6587\u5b57\u5217\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\n        res_tags = res_comment.scan(/\\[(.*?)\\]/).map{|t| p t[0]}\n        new_tags = (tag - res_tags).map{|t| \"[#{t}]\"}.join('')\n        new_comment = \"#{new_tags}#{res[\"entry\"][\"summary\"]}\"\n        $log.info(new_comment)\n        rese = @hatebu.put_edit(:eid => eid, :url => record['url'], :comment => new_comment)\n      end\n    rescue => e\n      $log.error(e)\n      $log.error('hatebu post failed')\n    end\n  end\n\nend\n\n\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aJSON\u69cb\u9020\u304cemit\u3055\u308c\u3066\u304f\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u307e\u3059\u3002\n{\"tag\":[\"tech\",\"ruby\"],\"title\":\"hatena-bookmark | RubyGems.org | your community gem host\",\"url\":\"https://rubygems.org/gems/hatena-bookmark\"}\n\n\u307e\u305f\u306f\n{\"tag\":\"tech\",\"title\":\"hatena-bookmark | RubyGems.org | your community gem host\",\"url\":\"https://rubygems.org/gems/hatena-bookmark\"}\n\ntitle\u306f\u4f7f\u3063\u3066\u306a\u3044\u306e\u3067\u3042\u3063\u3066\u3082\u306a\u304f\u3066\u3082\u3088\u3044\u3002\n\u3059\u3067\u306b\u30d6\u30c3\u30af\u30de\u30fc\u30af\u6e08\u307f\u306e\u30da\u30fc\u30b8\u3060\u3063\u305f\u5834\u5408\u306f\u30bf\u30b0\u3092\u4e0a\u66f8\u304d\u3067\u8ffd\u52a0\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3002\nfluentd\u306ein_http\u306e\u3088\u3046\u306bHTTP\u5f85\u3061\u53d7\u3051\u3059\u308b\u6a5f\u80fd\u3092\u3064\u304b\u3048\u3070\u3001\u306f\u3066\u30d6\u306eWebHook API\u3092\u53d7\u4fe1\u3057\u3066input\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3060\u304c\u3001\u3044\u307e\u306e\u3068\u3053\u308d\u4f7f\u3046\u3042\u3066\u304c\u306a\u3044\u5272\u306b\u306f\u5927\u5909\u305d\u3046\u306a\u306e\u3067\u4eca\u56de\u306f\u3084\u3089\u306a\u3044\n\u3044\u3061\u3044\u3061gem\u306b\u3057\u3066\u30ea\u30dd\u30b8\u30c8\u30ea\u3064\u304f\u308b\u307b\u3069\u3067\u3082\u306a\u3044\u5358\u7d14\u306a\u3082\u306e\u306a\u306e\u3067\u30b3\u30d4\u30da\u3067\u306f\u3063\u3064\u3051\u3066\u304a\u304d\u307e\u3059\u304c\n\nhttps://github.com/kkosuge/hatena-bookmark\n\n\u2191\u3053\u306egem\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\n```ruby:out_hatena_bookmark.rb\nclass Fluent::HatenaBookmarkOutput < Fluent::Output\n  Fluent::Plugin.register_output('hatena_bookmark', self)\n\n  config_param :consumer_key, :string\n  config_param :consumer_secret, :string\n  config_param :request_token, :string\n  config_param :request_secret, :string\n\n  def initialize\n    super\n    require 'hatena-bookmark'\n  end \n\n  def configure(conf)\n    super\n    @hatebu = Hatena::Bookmark.new(\n      consumer_key:    conf['consumer_key'],\n      consumer_secret: conf['consumer_secret'],\n      request_token:   conf['request_token'],\n      request_secret:  conf['request_secret']\n    )   \n  end \n\n  def emit(tag, es, chain)\n    es.each do |time, record|\n      create_or_edit(record)\n    end \n    chain.next\n  end \n\n  def create_or_edit(record)\n    begin\n      if record['tag'].class == String\n        tag = [record['tag']]\n      else\n        tag = record['tag']\n      end\n      comment = tag.map{|t| \"[#{t}]\"}.join('')\n      res = @hatebu.create(:url => record['url'], :comment => comment)\n      res_comment = res[\"entry\"][\"summary\"]\n      # \u30ec\u30b9\u30dd\u30f3\u30b9\u306esummary\u304c\u6295\u7a3f\u3057\u305f\u5185\u5bb9\u3068\u540c\u4e00\u3067\u306a\u3044\u3068\u304d\u3001\n      # \u30d6\u30c3\u30af\u30de\u30fc\u30af\u6e08\u307f\u306eURL\u3092create\u3057\u3088\u3046\u3068\u3057\u305f\u305f\u3081\u7121\u8996\u3055\u308c\u3066\u3044\u308b\n      if res_comment != comment\n        eid = res[\"entry\"][\"id\"].split(\"-\").last\n        # \u91cd\u8907\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3060\u3051tag\u6587\u5b57\u5217\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\n        res_tags = res_comment.scan(/\\[(.*?)\\]/).map{|t| p t[0]}\n        new_tags = (tag - res_tags).map{|t| \"[#{t}]\"}.join('')\n        new_comment = \"#{new_tags}#{res[\"entry\"][\"summary\"]}\"\n        $log.info(new_comment)\n        rese = @hatebu.put_edit(:eid => eid, :url => record['url'], :comment => new_comment)\n      end\n    rescue => e\n      $log.error(e)\n      $log.error('hatebu post failed')\n    end\n  end\n\nend\n```\n\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aJSON\u69cb\u9020\u304cemit\u3055\u308c\u3066\u304f\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js:\n{\"tag\":[\"tech\",\"ruby\"],\"title\":\"hatena-bookmark | RubyGems.org | your community gem host\",\"url\":\"https://rubygems.org/gems/hatena-bookmark\"}\n```\n\n\u307e\u305f\u306f\n\n```js:\n{\"tag\":\"tech\",\"title\":\"hatena-bookmark | RubyGems.org | your community gem host\",\"url\":\"https://rubygems.org/gems/hatena-bookmark\"}\n```\n\ntitle\u306f\u4f7f\u3063\u3066\u306a\u3044\u306e\u3067\u3042\u3063\u3066\u3082\u306a\u304f\u3066\u3082\u3088\u3044\u3002\n\n\u3059\u3067\u306b\u30d6\u30c3\u30af\u30de\u30fc\u30af\u6e08\u307f\u306e\u30da\u30fc\u30b8\u3060\u3063\u305f\u5834\u5408\u306f\u30bf\u30b0\u3092\u4e0a\u66f8\u304d\u3067\u8ffd\u52a0\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\nfluentd\u306ein_http\u306e\u3088\u3046\u306bHTTP\u5f85\u3061\u53d7\u3051\u3059\u308b\u6a5f\u80fd\u3092\u3064\u304b\u3048\u3070\u3001\u306f\u3066\u30d6\u306eWebHook API\u3092\u53d7\u4fe1\u3057\u3066input\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3060\u304c\u3001\u3044\u307e\u306e\u3068\u3053\u308d\u4f7f\u3046\u3042\u3066\u304c\u306a\u3044\u5272\u306b\u306f\u5927\u5909\u305d\u3046\u306a\u306e\u3067\u4eca\u56de\u306f\u3084\u3089\u306a\u3044", "tags": ["Ruby", "fluentd", "hatenabookmark"]}