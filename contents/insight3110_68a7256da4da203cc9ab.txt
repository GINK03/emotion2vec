{"context": "\n\nExpress\u3067\u3082Let's Encrypt\u3067https\u901a\u4fe1\u3092\u3057\u305f\u3044\n\n\u5bfe\u8c61\nhttps\u3067\u516c\u958b\u3059\u308b\u305f\u3081\u306b\u7121\u6599\u3067\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3057\u3066\u304f\u308c\u308bLet's Encrypt\u3092\u5229\u7528\u3059\u308b\u969b\u3001\u516c\u5f0f\u30da\u30fc\u30b8\u3092\u542b\u3081apache\u3084nginx\u306e\u8a2d\u5b9a\u4e8b\u4f8b\u306f\u6570\u591a\u304f\u767a\u898b\u3067\u304d\u307e\u3059\u3002\n\u3067\u3059\u304c\u3001\u304a\u624b\u8efd\u30b5\u30a4\u30c8\u306f\u308f\u3056\u308f\u3056nginx\u3092\u305f\u3066\u308b\u307e\u3067\u306e\u5fc5\u8981\u3082\u306a\u3044\u3001Express\u3067\u30b5\u30af\u30c3\u3068\u516c\u958b\u3057\u3066\u30b5\u30af\u30c3\u3068https\u5316\u3067\u304d\u308c\u3070\u3044\u3044\u3001\u3068\u3044\u3046\u65b9\u304c\u5bfe\u8c61\u3067\u3059\u3002\n\u5b9f\u306f\u3001\u5358\u306a\u308bletsencrypt-express\u306e\u7d39\u4ecb\u3067\u3001\u306a\u306b\u3082\u76ee\u65b0\u3057\u3044\u3082\u306e\u306f\u3042\u308a\u307e\u305b\u3093\u30fb\u30fb\u30fb\n\n\u74b0\u5883\nCentOS 7.2\nNode v5.9.1\nExpress v4.13.4\n\u3067\u3059\u304c\u3001\u305d\u308c\u307b\u3069\u74b0\u5883\u306f\u9078\u3070\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5c0e\u5165\n\nletsencrypt-express\u3068\u306f\uff1f\n\u516c\u5f0f\u3067\u306fcertbot\u3092\u5c0e\u5165\u3057\u3066\u30fb\u30fb\u30fb\u3068\u3044\u3046\u306e\u304c\u672c\u7b4b\u3067\u3059\u304c\u3001node.js\u3067express\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001letsencrypt-express\u3068\u3044\u3046\u7d20\u6674\u3089\u3057\u3044\u30c4\u30fc\u30eb\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u3053\u306eletsencrypt-express\u3001\u4ee5\u4e0b\u306e\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u81ea\u52d5\u3067Let's Encrypt\u3078\u306e\u767b\u9332\u3092\u3057\u3066\u304f\u308c\u307e\u3059\nLet's Encrypt\u306f90\u65e5\u3067\u671f\u9650\u304c\u5207\u308c\u308b\u305f\u3081\u3001cron\u7b49\u3067\u81ea\u52d5\u518d\u8a8d\u8a3c\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u3057\u3066\u304f\u308c\u307e\u3059\u304c\u3001\u3053\u306e\u66f4\u65b0\u4f5c\u696d\u3082\u81ea\u52d5\u3067\u3057\u3066\u304f\u308c\u307e\u3059\nvhost / virtual hosting\u3092\u81ea\u52d5\u3067\u3057\u3066\u304f\u308c\u307e\u3059\n\n\u3068\u3044\u3063\u305f\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u7279\u306b\u3001\u81ea\u52d5\u66f4\u65b0\u3092\u3057\u3066\u304f\u308c\u308b\u306a\u3089\u30e9\u30af\u30c1\u30f3\u3067\u3059\u3002\n\nletsencrypt-express\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nnpm install --save letsencrypt-express\n\n\u3067\u4e00\u767a\u3067\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3001express\u30b3\u30fc\u30c9\u3078\u306e\u57cb\u3081\u8fbc\u307f\n\u4e0b\u8a18\u306e\u3054\u304f\u5358\u7d14\u306aexpress\u7528\u306e\u30b3\u30fc\u30c9\u3092\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3044\u3058\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nvar express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\napp.listen(80);\n\n\u3053\u3053\u306b\u3001letsencrypt-express\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u3092\u633f\u5165\u3057\u307e\u3059\u3002\nvar express = require('express');\n\n// letsencrypt-express\u7528\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u958b\u59cb\n\n// \u6b21\u306e\u884c\u306e.testing()\u306f\u672c\u756a\u74b0\u5883\u3067\u306f\u5916\u3057\u3066\u4e0b\u3055\u3044\nvar LEX = require('letsencrypt-express').testing();\n\n// \u4ee5\u4e0b\u306e2\u884c\u306f\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\uff01\nvar DOMAIN = 'myservice.example.com';\nvar EMAIL = 'user@example.com';\n\nvar lex = LEX.create({\n  configDir: require('os').homedir() + '/letsencrypt/etc'\n, approveRegistration: function (hostname, approve) { // leave `null` to disable automatic registration\n    if (hostname === DOMAIN) { // Or check a database or list of allowed domains\n      approve(null, {\n        domains: [DOMAIN]\n      , email: EMAIL\n      , agreeTos: true\n      });\n    }\n  }\n});\n\n// \u3053\u3053\u307e\u3067\u521d\u671f\u5316\u7528\u30b3\u30fc\u30c9\n\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\napp.listen(80);\n\n\n\u66f4\u306b\u3001letsencrypt-express\u306e\u5b9f\u884c\u90e8\u3092\u633f\u5165\u3057\u307e\u3059\u3002\nvar express = require('express');\n\n// letsencrypt-express\u7528\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u958b\u59cb\n\n// \u6b21\u306e\u884c\u306e.testing()\u306f\u672c\u756a\u74b0\u5883\u3067\u306f\u5916\u3057\u3066\u4e0b\u3055\u3044\nvar LEX = require('letsencrypt-express').testing();\n\n// \u4ee5\u4e0b\u306e2\u884c\u306f\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\uff01\nvar DOMAIN = 'myservice.example.com';\nvar EMAIL = 'user@example.com';\n\nvar lex = LEX.create({\n  configDir: require('os').homedir() + '/letsencrypt/etc'\n, approveRegistration: function (hostname, approve) { // leave `null` to disable automatic registration\n    if (hostname === DOMAIN) { // Or check a database or list of allowed domains\n      approve(null, {\n        domains: [DOMAIN]\n      , email: EMAIL\n      , agreeTos: true\n      });\n    }\n  }\n});\n\n// \u3053\u3053\u307e\u3067\u521d\u671f\u5316\u7528\u30b3\u30fc\u30c9\n\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\n// \u3053\u3053\u304b\u3089lets\u7528\u306e\u5b9f\u884c\u90e8\u30b3\u30fc\u30c9\nlex.onRequest = app;\n\nlex.listen([80], [443, 5001], function () {\n  var protocol = ('requestCert' in this) ? 'https': 'http';\n  console.log(\"Listening at \" + protocol + '://localhost:' + this.address().port);\n});\n\n\n\u901a\u5e38\u306f\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\u52d5\u304f\u306f\u305a\u3067\u3059\u3002\u4ee5\u4e0b\u306f\u5225\u30b5\u30f3\u30d7\u30eb\u3067\u300180\u756a\u30dd\u30fc\u30c8\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u304d\u305f\u3089\u3001443\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u305b\u305f\u3044\u5834\u5408\u3067\u3059\u3002http\u3001spdy\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u307e\u3059\u3002npm install --save spdy\u3067spdy\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3042\u3068\u3001\nvar express = require('express');\nvar http = require('http');\nvar https = require('spdy');\n\n// letsencrypt-express\u7528\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u958b\u59cb\n\n// \u6b21\u306e\u884c\u306e.testing()\u306f\u672c\u756a\u74b0\u5883\u3067\u306f\u5916\u3057\u3066\u4e0b\u3055\u3044\nvar LEX = require('letsencrypt-express').testing();\n\n// \u4ee5\u4e0b\u306e2\u884c\u306f\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\uff01\nvar DOMAIN = 'myservice.example.com';\nvar EMAIL = 'user@example.com';\n\nvar lex = LEX.create({\n  configDir: require('os').homedir() + '/letsencrypt/etc'\n, approveRegistration: function (hostname, approve) { // leave `null` to disable automatic registration\n    if (hostname === DOMAIN) { // Or check a database or list of allowed domains\n      approve(null, {\n        domains: [DOMAIN]\n      , email: EMAIL\n      , agreeTos: true\n      });\n    }\n  }\n});\n\n// \u3053\u3053\u307e\u3067\u521d\u671f\u5316\u7528\u30b3\u30fc\u30c9\n\n// \u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u7528\nfunction redirectHttp() {\n  http.createServer(LEX.createAcmeResponder(lex, function redirectHttps(req, res) {\n    res.setHeader('Location', 'https://' + req.headers.host + req.url);\n    res.statusCode = 302;\n    res.end('<!-- Hello Developer Person! Please use HTTPS instead -->');\n  })).listen(80);\n}\n\n// \u901a\u5e38\u306e443\u63a5\u7d9a\nfunction serveHttps() {\n  var app = express();\n\n  app.use('/', function (req, res) {\n    res.end('Hello World!');\n  });\n\n  https.createServer(lex.httpsOptions, LEX.createAcmeResponder(lex, app)).listen(443);\n}\n\nredirectHttp();\nserveHttps();\n\n\n\u30fb\u30fb\u30fb\u30b5\u30f3\u30d7\u30eb\u305d\u306e\u307e\u3093\u307e\u3067\u3059\u30fb\u30fb\u30fb\n\n\u5b9f\u884c\n\u3042\u3068\u306fnode app.js\u7b49\u3067\u5b9f\u884c\u3059\u308c\u3070\u3001\u81ea\u52d5\u3067\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u4e0a\u3001\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u3066\u304f\u308c\u307e\u3059\u3002\nCentOS7\u306e\u5834\u5408\u306ffirewall\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001https\u3092\u8a31\u53ef\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u4e8b\u524d\u306b\n$ firewall-cmd --permanent --zone=public --add-service=https\n$ firewall-cmd --reload\n\n\u3092\u304a\u5fd8\u308c\u306a\u304f\u3002\n\n\u307e\u3068\u3081\n\u3084\u3063\u3071\u308a\u7d20\u76f4\u306bnginx\u7b49\u3092\u5229\u7528\u3057\u305f\u307b\u3046\u304c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u7c21\u5358\u3067\u3059\u304c\uff08\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u63db\u3048\u3067\u5b8c\u4e86\uff09\u3001\u306a\u306b\u304b\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3002\n# Express\u3067\u3082Let's Encrypt\u3067https\u901a\u4fe1\u3092\u3057\u305f\u3044\n## \u5bfe\u8c61\nhttps\u3067\u516c\u958b\u3059\u308b\u305f\u3081\u306b\u7121\u6599\u3067\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3057\u3066\u304f\u308c\u308bLet's Encrypt\u3092\u5229\u7528\u3059\u308b\u969b\u3001\u516c\u5f0f\u30da\u30fc\u30b8\u3092\u542b\u3081apache\u3084nginx\u306e\u8a2d\u5b9a\u4e8b\u4f8b\u306f\u6570\u591a\u304f\u767a\u898b\u3067\u304d\u307e\u3059\u3002\n\u3067\u3059\u304c\u3001\u304a\u624b\u8efd\u30b5\u30a4\u30c8\u306f\u308f\u3056\u308f\u3056nginx\u3092\u305f\u3066\u308b\u307e\u3067\u306e\u5fc5\u8981\u3082\u306a\u3044\u3001Express\u3067\u30b5\u30af\u30c3\u3068\u516c\u958b\u3057\u3066\u30b5\u30af\u30c3\u3068https\u5316\u3067\u304d\u308c\u3070\u3044\u3044\u3001\u3068\u3044\u3046\u65b9\u304c\u5bfe\u8c61\u3067\u3059\u3002\n\n\u5b9f\u306f\u3001\u5358\u306a\u308b[letsencrypt-express](https://github.com/Daplie/letsencrypt-express)\u306e\u7d39\u4ecb\u3067\u3001\u306a\u306b\u3082\u76ee\u65b0\u3057\u3044\u3082\u306e\u306f\u3042\u308a\u307e\u305b\u3093\u30fb\u30fb\u30fb\n\n## \u74b0\u5883\nCentOS 7.2\nNode v5.9.1\nExpress v4.13.4\n\u3067\u3059\u304c\u3001\u305d\u308c\u307b\u3069\u74b0\u5883\u306f\u9078\u3070\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u5c0e\u5165\n### letsencrypt-express\u3068\u306f\uff1f\n\u516c\u5f0f\u3067\u306f[certbot](https://certbot.eff.org/)\u3092\u5c0e\u5165\u3057\u3066\u30fb\u30fb\u30fb\u3068\u3044\u3046\u306e\u304c\u672c\u7b4b\u3067\u3059\u304c\u3001node.js\u3067express\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001[letsencrypt-express](https://github.com/Daplie/letsencrypt-express)\u3068\u3044\u3046\u7d20\u6674\u3089\u3057\u3044\u30c4\u30fc\u30eb\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\u3053\u306eletsencrypt-express\u3001\u4ee5\u4e0b\u306e\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n- \u81ea\u52d5\u3067Let's Encrypt\u3078\u306e\u767b\u9332\u3092\u3057\u3066\u304f\u308c\u307e\u3059\n- Let's Encrypt\u306f90\u65e5\u3067\u671f\u9650\u304c\u5207\u308c\u308b\u305f\u3081\u3001cron\u7b49\u3067\u81ea\u52d5\u518d\u8a8d\u8a3c\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u3057\u3066\u304f\u308c\u307e\u3059\u304c\u3001\u3053\u306e\u66f4\u65b0\u4f5c\u696d\u3082\u81ea\u52d5\u3067\u3057\u3066\u304f\u308c\u307e\u3059\n- vhost / virtual hosting\u3092\u81ea\u52d5\u3067\u3057\u3066\u304f\u308c\u307e\u3059\n\n\u3068\u3044\u3063\u305f\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u7279\u306b\u3001\u81ea\u52d5\u66f4\u65b0\u3092\u3057\u3066\u304f\u308c\u308b\u306a\u3089\u30e9\u30af\u30c1\u30f3\u3067\u3059\u3002\n\n### letsencrypt-express\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash\nnpm install --save letsencrypt-express\n```\n\u3067\u4e00\u767a\u3067\u3059\u3002\n\n### \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3001express\u30b3\u30fc\u30c9\u3078\u306e\u57cb\u3081\u8fbc\u307f\n\u4e0b\u8a18\u306e\u3054\u304f\u5358\u7d14\u306aexpress\u7528\u306e\u30b3\u30fc\u30c9\u3092\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3044\u3058\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n```js\nvar express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\napp.listen(80);\n```\n\n\u3053\u3053\u306b\u3001letsencrypt-express\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u3092\u633f\u5165\u3057\u307e\u3059\u3002\n\n```js\nvar express = require('express');\n\n// letsencrypt-express\u7528\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u958b\u59cb\n\n// \u6b21\u306e\u884c\u306e.testing()\u306f\u672c\u756a\u74b0\u5883\u3067\u306f\u5916\u3057\u3066\u4e0b\u3055\u3044\nvar LEX = require('letsencrypt-express').testing();\n\n// \u4ee5\u4e0b\u306e2\u884c\u306f\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\uff01\nvar DOMAIN = 'myservice.example.com';\nvar EMAIL = 'user@example.com';\n\nvar lex = LEX.create({\n  configDir: require('os').homedir() + '/letsencrypt/etc'\n, approveRegistration: function (hostname, approve) { // leave `null` to disable automatic registration\n    if (hostname === DOMAIN) { // Or check a database or list of allowed domains\n      approve(null, {\n        domains: [DOMAIN]\n      , email: EMAIL\n      , agreeTos: true\n      });\n    }\n  }\n});\n\n// \u3053\u3053\u307e\u3067\u521d\u671f\u5316\u7528\u30b3\u30fc\u30c9\n\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\napp.listen(80);\n\n```\n\n\u66f4\u306b\u3001letsencrypt-express\u306e\u5b9f\u884c\u90e8\u3092\u633f\u5165\u3057\u307e\u3059\u3002\n\n```js\nvar express = require('express');\n\n// letsencrypt-express\u7528\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u958b\u59cb\n\n// \u6b21\u306e\u884c\u306e.testing()\u306f\u672c\u756a\u74b0\u5883\u3067\u306f\u5916\u3057\u3066\u4e0b\u3055\u3044\nvar LEX = require('letsencrypt-express').testing();\n\n// \u4ee5\u4e0b\u306e2\u884c\u306f\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\uff01\nvar DOMAIN = 'myservice.example.com';\nvar EMAIL = 'user@example.com';\n\nvar lex = LEX.create({\n  configDir: require('os').homedir() + '/letsencrypt/etc'\n, approveRegistration: function (hostname, approve) { // leave `null` to disable automatic registration\n    if (hostname === DOMAIN) { // Or check a database or list of allowed domains\n      approve(null, {\n        domains: [DOMAIN]\n      , email: EMAIL\n      , agreeTos: true\n      });\n    }\n  }\n});\n\n// \u3053\u3053\u307e\u3067\u521d\u671f\u5316\u7528\u30b3\u30fc\u30c9\n\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\n// \u3053\u3053\u304b\u3089lets\u7528\u306e\u5b9f\u884c\u90e8\u30b3\u30fc\u30c9\nlex.onRequest = app;\n\nlex.listen([80], [443, 5001], function () {\n  var protocol = ('requestCert' in this) ? 'https': 'http';\n  console.log(\"Listening at \" + protocol + '://localhost:' + this.address().port);\n});\n\n```\n\n\u901a\u5e38\u306f\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\u52d5\u304f\u306f\u305a\u3067\u3059\u3002\u4ee5\u4e0b\u306f\u5225\u30b5\u30f3\u30d7\u30eb\u3067\u300180\u756a\u30dd\u30fc\u30c8\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u304d\u305f\u3089\u3001443\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u305b\u305f\u3044\u5834\u5408\u3067\u3059\u3002http\u3001spdy\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u307e\u3059\u3002`npm install --save spdy`\u3067spdy\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3042\u3068\u3001\n\n\n```js\nvar express = require('express');\nvar http = require('http');\nvar https = require('spdy');\n\n// letsencrypt-express\u7528\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u958b\u59cb\n\n// \u6b21\u306e\u884c\u306e.testing()\u306f\u672c\u756a\u74b0\u5883\u3067\u306f\u5916\u3057\u3066\u4e0b\u3055\u3044\nvar LEX = require('letsencrypt-express').testing();\n\n// \u4ee5\u4e0b\u306e2\u884c\u306f\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\uff01\nvar DOMAIN = 'myservice.example.com';\nvar EMAIL = 'user@example.com';\n\nvar lex = LEX.create({\n  configDir: require('os').homedir() + '/letsencrypt/etc'\n, approveRegistration: function (hostname, approve) { // leave `null` to disable automatic registration\n    if (hostname === DOMAIN) { // Or check a database or list of allowed domains\n      approve(null, {\n        domains: [DOMAIN]\n      , email: EMAIL\n      , agreeTos: true\n      });\n    }\n  }\n});\n\n// \u3053\u3053\u307e\u3067\u521d\u671f\u5316\u7528\u30b3\u30fc\u30c9\n\n// \u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u7528\nfunction redirectHttp() {\n  http.createServer(LEX.createAcmeResponder(lex, function redirectHttps(req, res) {\n    res.setHeader('Location', 'https://' + req.headers.host + req.url);\n    res.statusCode = 302;\n    res.end('<!-- Hello Developer Person! Please use HTTPS instead -->');\n  })).listen(80);\n}\n\n// \u901a\u5e38\u306e443\u63a5\u7d9a\nfunction serveHttps() {\n  var app = express();\n\n  app.use('/', function (req, res) {\n    res.end('Hello World!');\n  });\n\n  https.createServer(lex.httpsOptions, LEX.createAcmeResponder(lex, app)).listen(443);\n}\n\nredirectHttp();\nserveHttps();\n\n```\n\n\u30fb\u30fb\u30fb\u30b5\u30f3\u30d7\u30eb\u305d\u306e\u307e\u3093\u307e\u3067\u3059\u30fb\u30fb\u30fb\n\n### \u5b9f\u884c\n\u3042\u3068\u306f`node app.js`\u7b49\u3067\u5b9f\u884c\u3059\u308c\u3070\u3001\u81ea\u52d5\u3067\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u4e0a\u3001\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u3066\u304f\u308c\u307e\u3059\u3002\nCentOS7\u306e\u5834\u5408\u306ffirewall\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001https\u3092\u8a31\u53ef\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u4e8b\u524d\u306b\n\n```bash\n$ firewall-cmd --permanent --zone=public --add-service=https\n$ firewall-cmd --reload\n```\n\n\u3092\u304a\u5fd8\u308c\u306a\u304f\u3002\n\n### \u307e\u3068\u3081\n\u3084\u3063\u3071\u308a\u7d20\u76f4\u306bnginx\u7b49\u3092\u5229\u7528\u3057\u305f\u307b\u3046\u304c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u7c21\u5358\u3067\u3059\u304c\uff08\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u63db\u3048\u3067\u5b8c\u4e86\uff09\u3001\u306a\u306b\u304b\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3002\n", "tags": ["Express", "HTTPS", "Node.js"]}