{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u4eca\u56de\u306f\u5916\u90e8\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf(txt)\u3092\u53d6\u5f97\u5f8c\u3001\u30ab\u30f3\u30de\u3067\u533a\u5207\u3089\u308c\u3066\u3044\u308b\u5358\u8a9e\u3092\u914d\u5217\u306b\u5165\u308c\u3066\u3044\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\nboot\u3068\u304b\u4f7f\u3046\u65b9\u6cd5\u306f\u30cd\u30c3\u30c8\u306b\u305f\u304f\u3055\u3093\u843d\u3061\u3066\u305f\u3093\u3067\u3059\u3051\u3069\u3001\u81ea\u5206\u306e\u74b0\u5883\u4e0b\u306bboot\u3092\u5165\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3082\u3042\u3063\u3066\u4f7f\u308f\u306a\u3044\u3067\u5b9f\u88c5\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u8ffd\u8a18\u3042\u308a\u3002\n\nhoge.txt\n\nhoge.txt\n\"2015/01/01\",\"00:00:00.321\",\"Japan\",\"32.3\",\"9099\"\n\"2015/01/01\",\"00:00:01.213\",\"Japan\",\"33.5\",\"9092\"\n\"2015/01/01\",\"00:00:01.345\",\"China\",\"31.3\",\"9399\"\n\"2015/01/01\",\"00:00:02.390\",\"Japan\",\"34.6\",\"9129\"\n\"2015/01/01\",\"00:00:02.908\",\"China\",\"30.4\",\"8899\"\n\"2015/01/01\",\"00:00:03.001\",\"Japan\",\"35.1\",\"1299\"\n\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\nhoge.cpp\n#include <fstream>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint twoArrayOfDepth(string tDF,string com,int *count,int *count2);\n\nint main(){\n    string str,str2;\n    string textDataFile = \"hoge.txt\";\n    string com = \",\";\n    int number,number2,number3,c1,c2,i,j;\n\n    twoArrayOfDepth(textDataFile,com,&c1,&c2);\n\n    string** textData = new string*[c1];\n    for (i=0; i<c1; i++)textData[i] = new string[c2];\n\n    ifstream fileText(textDataFile);\n    if(fileText.fail())return EXIT_FAILURE;\n    number = 1;\n    while (getline(fileText,str)) {\n        number2 = 1;\n        number3 = 0;\n        string::size_type idx = str.find(com);\n        while (idx != string::npos) {\n            if (number2==1) {\n                textData[number-1][number2-1] = str.substr(number3,idx - number3).c_str();\n                number3 = idx;\n                number2++;\n                idx = str.find(com, idx + 1);\n                textData[number-1][number2-1] = str.substr(number3+1,idx - number3-1).c_str();\n\n            }else{\n                idx = str.find(com, idx + 1);\n                textData[number-1][number2-1] = str.substr(number3+1,idx - number3-1).c_str();\n            }\n            number3 = idx;\n            number2++;\n        }\n        number++;\n    }\n\n    fileText.close();\n\n    for (i=0; i<c1; i++)for (j=0; j<c2; j++)cout<<textData[i][j]<<endl;\n    return 0;\n}\n\nint twoArrayOfDepth(string tDF,string com,int *count,int *count2){\n    string str2;\n    ifstream fileText2(tDF);\n    if(fileText2.fail())return EXIT_FAILURE;\n\n    *count = 0;\n    while (getline(fileText2,str2)) {\n        *count2 = 1;\n        string::size_type idx2 = str2.find(com);\n        while (idx2 != string::npos) {\n            idx2 = str2.find(com, idx2 + 1);\n            *count2 = *count2 + 1;\n        }\n        *count = *count + 1;\n    }\n    fileText2.close();\n    return 0;\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\n\u89e3\u8aac\uff1f\n\ntwoArrayOfDepth()\n2\u6b21\u5143\u914d\u5217\u306e\u6df1\u3055(\u8981\u7d20\u6570)\u3092\u6c7a\u5b9a\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\ntwoArrayOfDepth()\nint twoArrayOfDepth(string tDF,string com,int *count,int *count2){\n    string str2;\n    ifstream fileText2(tDF);\n    if(fileText2.fail())return EXIT_FAILURE;\n\n    *count = 0;\n    while (getline(fileText2,str2)) {\n        *count2 = 1;\n        string::size_type idx2 = str2.find(com);\n        while (idx2 != string::npos) {\n            idx2 = str2.find(com, idx2 + 1);\n            *count2 = *count2 + 1;\n        }\n        *count = *count + 1;\n    }\n    fileText2.close();\n    return 0;\n}\n\n\ncount\uff1a\u884c\u6570\ncount2\uff1a\u30ab\u30f3\u30de(,)\u3067\u533a\u5207\u3089\u308c\u3066\u3044\u308b\u5358\u8a9e\u6570\n\n\u8ffd\u8a18\n\u30b3\u30e1\u30f3\u30c8\u6b04\u3067\u3082\u3063\u3068\u826f\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u304f\u308c\u305f\u65b9\u304c\u3044\u307e\u3059\u306e\u3067\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u305f\u3060\u3044\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093m(_ _)m!\n\u6ce8\uff1a$c++ hoge.cpp\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306aWarning\u304c\u51fa\u307e\u3059\u3002\n\n\u305f\u3060\u3057\u3001\u3053\u308c\u306f$c++ hoge.cpp\u3067\u306f\u306a\u304f\u3001$clang++ -std=c++11 hoge.cpp\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068Warning\u306a\u3057\u3067\u884c\u3048\u307e\u3059\u3002\n\u53c2\u8003\uff1aC++ auto type specifier is a C++11 extension\n#\u306f\u3058\u3081\u306b\n\u4eca\u56de\u306f\u5916\u90e8\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf(txt)\u3092\u53d6\u5f97\u5f8c\u3001\u30ab\u30f3\u30de\u3067\u533a\u5207\u3089\u308c\u3066\u3044\u308b\u5358\u8a9e\u3092\u914d\u5217\u306b\u5165\u308c\u3066\u3044\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\nboot\u3068\u304b\u4f7f\u3046\u65b9\u6cd5\u306f\u30cd\u30c3\u30c8\u306b\u305f\u304f\u3055\u3093\u843d\u3061\u3066\u305f\u3093\u3067\u3059\u3051\u3069\u3001\u81ea\u5206\u306e\u74b0\u5883\u4e0b\u306bboot\u3092\u5165\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3082\u3042\u3063\u3066\u4f7f\u308f\u306a\u3044\u3067\u5b9f\u88c5\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u8ffd\u8a18\u3042\u308a\u3002\n\n# hoge.txt\n```text:hoge.txt\n\"2015/01/01\",\"00:00:00.321\",\"Japan\",\"32.3\",\"9099\"\n\"2015/01/01\",\"00:00:01.213\",\"Japan\",\"33.5\",\"9092\"\n\"2015/01/01\",\"00:00:01.345\",\"China\",\"31.3\",\"9399\"\n\"2015/01/01\",\"00:00:02.390\",\"Japan\",\"34.6\",\"9129\"\n\"2015/01/01\",\"00:00:02.908\",\"China\",\"30.4\",\"8899\"\n\"2015/01/01\",\"00:00:03.001\",\"Japan\",\"35.1\",\"1299\"\n```\n\n#\u30d7\u30ed\u30b0\u30e9\u30e0\n\n```cpp:hoge.cpp\n#include <fstream>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint twoArrayOfDepth(string tDF,string com,int *count,int *count2);\n\nint main(){\n    string str,str2;\n    string textDataFile = \"hoge.txt\";\n    string com = \",\";\n    int number,number2,number3,c1,c2,i,j;\n    \n    twoArrayOfDepth(textDataFile,com,&c1,&c2);\n    \n    string** textData = new string*[c1];\n    for (i=0; i<c1; i++)textData[i] = new string[c2];\n    \n    ifstream fileText(textDataFile);\n    if(fileText.fail())return EXIT_FAILURE;\n    number = 1;\n    while (getline(fileText,str)) {\n        number2 = 1;\n        number3 = 0;\n        string::size_type idx = str.find(com);\n        while (idx != string::npos) {\n            if (number2==1) {\n                textData[number-1][number2-1] = str.substr(number3,idx - number3).c_str();\n                number3 = idx;\n                number2++;\n                idx = str.find(com, idx + 1);\n                textData[number-1][number2-1] = str.substr(number3+1,idx - number3-1).c_str();\n                \n            }else{\n                idx = str.find(com, idx + 1);\n                textData[number-1][number2-1] = str.substr(number3+1,idx - number3-1).c_str();\n            }\n            number3 = idx;\n            number2++;\n        }\n        number++;\n    }\n    \n    fileText.close();\n    \n    for (i=0; i<c1; i++)for (j=0; j<c2; j++)cout<<textData[i][j]<<endl;\n    return 0;\n}\n\nint twoArrayOfDepth(string tDF,string com,int *count,int *count2){\n    string str2;\n    ifstream fileText2(tDF);\n    if(fileText2.fail())return EXIT_FAILURE;\n    \n    *count = 0;\n    while (getline(fileText2,str2)) {\n        *count2 = 1;\n        string::size_type idx2 = str2.find(com);\n        while (idx2 != string::npos) {\n            idx2 = str2.find(com, idx2 + 1);\n            *count2 = *count2 + 1;\n        }\n        *count = *count + 1;\n    }\n    fileText2.close();\n    return 0;\n}\n```\n\n#\u5b9f\u884c\u7d50\u679c\n![programExecution.png](https://qiita-image-store.s3.amazonaws.com/0/32946/25393c57-abdc-dc41-2143-d4e3cb9ad8ba.png)\n\n#\u89e3\u8aac\uff1f\n##twoArrayOfDepth()\n2\u6b21\u5143\u914d\u5217\u306e\u6df1\u3055(\u8981\u7d20\u6570)\u3092\u6c7a\u5b9a\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\n```cpp:twoArrayOfDepth()\nint twoArrayOfDepth(string tDF,string com,int *count,int *count2){\n    string str2;\n    ifstream fileText2(tDF);\n    if(fileText2.fail())return EXIT_FAILURE;\n    \n    *count = 0;\n    while (getline(fileText2,str2)) {\n        *count2 = 1;\n        string::size_type idx2 = str2.find(com);\n        while (idx2 != string::npos) {\n            idx2 = str2.find(com, idx2 + 1);\n            *count2 = *count2 + 1;\n        }\n        *count = *count + 1;\n    }\n    fileText2.close();\n    return 0;\n}\n```\n\n`count `\uff1a\u884c\u6570\n`count2`\uff1a\u30ab\u30f3\u30de(,)\u3067\u533a\u5207\u3089\u308c\u3066\u3044\u308b\u5358\u8a9e\u6570\n\n#\u8ffd\u8a18\n\u30b3\u30e1\u30f3\u30c8\u6b04\u3067\u3082\u3063\u3068\u826f\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u304f\u308c\u305f\u65b9\u304c\u3044\u307e\u3059\u306e\u3067\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u305f\u3060\u3044\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093m(_ _)m!\n\n\u6ce8\uff1a`$c++ hoge.cpp`\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306aWarning\u304c\u51fa\u307e\u3059\u3002\n![warning.png](https://qiita-image-store.s3.amazonaws.com/0/32946/4d1d9da8-5e82-c0d0-ff3d-925f18301611.png)\n\n\u305f\u3060\u3057\u3001\u3053\u308c\u306f`$c++ hoge.cpp`\u3067\u306f\u306a\u304f\u3001`$clang++ -std=c++11 hoge.cpp`\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068Warning\u306a\u3057\u3067\u884c\u3048\u307e\u3059\u3002\n\u53c2\u8003\uff1a[C++ auto type specifier is a C++11 extension](http://kaworu.jpn.org/kaworu/2013-10-30-1.php)\n", "tags": ["C++", "\u6b63\u898f\u8868\u73fe", "2\u6b21\u5143", "\u30c6\u30ad\u30b9\u30c8"]}