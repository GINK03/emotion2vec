{"context": "\n\n\u6982\u8981\nxUnit\u3067\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u3059\u308b\u969b\u3001\u30c6\u30b9\u30c8\u5b9f\u884c\u306e\u305f\u3081\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5fc5\u8981\u3068\u306a\u308b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u3069\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u3089\u826f\u3044\u304b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u3053\u3053\u3067\u306fNHibernate + SQLite\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u5834\u5408\u306e\u30b3\u30fc\u30c9\u3092\u4f8b\u793a\u3057\u3066\u3044\u307e\u3059\u304c\u3001Entity Framework + SQL Database\u306a\u3069\u306e\u5834\u5408\u3082\u540c\u3058\u3088\u3046\u306a\u8003\u3048\u65b9\u3067\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\n\u5b9f\u88c5\u65b9\u91dd\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u8a18\u8ff0\u3057\u305f\u30af\u30e9\u30b9\u3067IClassFixture<TFixture>\u3092\u7d99\u627f\u3057\u3066\u304a\u304f\u3068\u3001xUnit\u306b\u3088\u3063\u3066\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306bTFixture\u30af\u30e9\u30b9\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\n\u5f93\u3063\u3066\u3001\u4eca\u56de\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u5fc5\u8981\u3068\u3059\u308b\u30c6\u30b9\u30c8\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u65b9\u91dd\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\nTFixture\u30af\u30e9\u30b9\u306bDB\u5468\u308a\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u3067\u306f\u3001IClassFixture<TFixture>\u3092\u7d99\u627f\u3057\u3066\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067TFixture\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u308b\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u5185\u3067TFixture\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089DB\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u53d6\u308a\u51fa\u3057\u3066DB\u64cd\u4f5c\u3059\u308b\n\n\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u4f8b\n\nSQLite\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eFixture\u30af\u30e9\u30b9\u4f8b\nFixture\u30af\u30e9\u30b9\u5074\u3067\u306f\u3001\u30a4\u30f3\u30e1\u30e2\u30ea\u306aSQLite\u306b\u63a5\u7d9a\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u3001NHibernate\u3068FluentNHibernate\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001IDisposable\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304f\u3068\u3001xUnit\u304c\u30c6\u30b9\u30c8\u7d42\u4e86\u6642\u306bDispose()\u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u308c\u308b\u305f\u3081\u3001DB\u306e\u63a5\u7d9a\u3092\u9589\u3058\u308b\u30b3\u30fc\u30c9\u306a\u3069\u3092\u66f8\u3044\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u307e\u305fSchemaExport\u3092\u5229\u7528\u3057\u3001O/R\u30de\u30c3\u30d1\u30fc\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30de\u30c3\u30d4\u30f3\u30b0\u60c5\u5831\u3092\u5143\u306b\u3001SQLite\u4e0a\u306b\u5fc5\u8981\u306a\u30c6\u30fc\u30d6\u30eb\u3092\u81ea\u52d5\u7684\u306b\u4f5c\u3063\u305f\u4e0a\u3067DB\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306b\u6e21\u3059\u3001\u3068\u3044\u3046\u3053\u3068\u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\nusing FluentNHibernate.Cfg;\nusing FluentNHibernate.Cfg.Db;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.PlatformAbstractions;\nusing NHibernate;\nusing NHibernate.Cfg;\nusing NHibernate.Tool.hbm2ddl;\nusing System;\nusing System.Linq;\nusing System.Reflection;\nusing Xunit;\nusing Xunit.Abstractions;\n\npublic class SQLiteInMemoryDatabaseFixture: IDisposable\n{\n    private static ISessionFactory sessionFactory;\n    private static Configuration configuration;\n    public static ISessionFactory SessionFactory {\n        get\n        {\n            if (sessionFactory == null)\n            {\n                sessionFactory = Fluently.Configure()\n                    .Database(\n                        SQLiteConfiguration.Standard\n                            .InMemory()\n                            .ShowSql()\n                        )\n                    .Mappings(m =>\n                    {\n                        m.FluentMappings.AddFromAssembly(Assembly.GetExecutingAssembly());\n                    })\n                    .ExposeConfiguration(cfg => {\n                        configuration = cfg;\n                    })\n                    .BuildSessionFactory();\n            }\n            return sessionFactory;\n        }\n    }\n\n    public ISession GetSession()\n    {\n        ISession session = SessionFactory.OpenSession();\n\n        var export = new SchemaExport(configuration);\n        export.Execute(true, true, false, session.Connection, null);\n\n        return session;\n    }\n\n\n    #region IDisposable Support\n    private bool disposedValue = false; // \u91cd\u8907\u3059\u308bDispose()\u547c\u3073\u51fa\u3057\u3092\u691c\u51fa\u3059\u308b\n\n    protected virtual void Dispose(bool disposing)\n    {\n        if (!disposedValue)\n        {\n            if (disposing)\n            {\n                if (sessionFactory != null)\n                    sessionFactory.Dispose();\n            }\n\n            sessionFactory = null;\n            configuration = null;\n\n            disposedValue = true;\n        }\n    }\n\n    //IDisposable\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304f\u3068\u3001xUnit\u304c\u30c6\u30b9\u30c8\u7d42\u4e86\u6642\u306b\u547c\u3073\u51fa\u3057\u3066\u304f\u308c\u308b\n    // https://xunit.github.io/docs/shared-context.html#class-fixture\n    public void Dispose()\n    {\n        Dispose(true);\n    }\n    #endregion\n\n}\n\n\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067Fixture\u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304cIClassFixture<TFixture>\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u3068\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306bTFixture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\n\u6e21\u3055\u308c\u305ffixture\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u683c\u7d0d\u3057\u3066\u304a\u304d\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u5185\u304b\u3089\u9069\u5b9c\u5229\u7528\u3059\u308b\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\npublic class MyServiceTest: IClassFixture<SQLiteInMemoryDatabaseFixture>\n{\n    private readonly SQLiteInMemoryDatabaseFixture _fixture;\n\n    public MyServiceTest(SQLiteInMemoryDatabaseFixture fixture)\n    {\n        _fixture = fixture;\n    }\n\n    [Fact]\n    public void InterfaceImplimentationTest()\n    {\n        var session = _fixture.GetSession();\n        var uowFactory = new NHibernateUnitOfWorkFactory(session: session);\n\n        // \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304c\u7d9a\u304f\uff0e\uff0e\uff0e\uff0e\uff0e\uff0e\uff0e\n    }\n}\n\n\n\u5229\u7528\u3057\u305fNuGet\u30e9\u30a4\u30d6\u30e9\u30ea\nproject.json\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\"dependencies\": {\n    \"NHibernate\": \"4.0.4.4000\",\n    \"xunit\": \"2.1.0\",\n    \"dotnet-test-xunit\": \"1.0.0-rc2-build10025\",\n    \"xunit.runner.visualstudio\": \"2.1.0\",\n    \"FluentNHibernate\": \"2.0.3\",\n    \"FluentMigrator\": \"1.6.2\",\n    \"FluentMigrator.Tools\": \"1.6.2\",\n    \"System.Data.SQLite\": \"1.0.101\",\n    \"System.Data.SQLite.Core\": \"1.0.101\",\n    \"System.Data.SQLite.Linq\": \"1.0.101\",\n    \"System.Data.SQLite.x64\": \"1.0.101\"\n}\n\n\n# \u6982\u8981\n\n[xUnit](https://xunit.github.io/)\u3067\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u3059\u308b\u969b\u3001\u30c6\u30b9\u30c8\u5b9f\u884c\u306e\u305f\u3081\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5fc5\u8981\u3068\u306a\u308b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u3069\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u3089\u826f\u3044\u304b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u3053\u3053\u3067\u306f[NHibernate](http://nhibernate.info/) + [SQLite](https://www.nuget.org/packages/System.Data.SQLite)\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u5834\u5408\u306e\u30b3\u30fc\u30c9\u3092\u4f8b\u793a\u3057\u3066\u3044\u307e\u3059\u304c\u3001[Entity Framework](https://github.com/aspnet/EntityFramework) + SQL Database\u306a\u3069\u306e\u5834\u5408\u3082\u540c\u3058\u3088\u3046\u306a\u8003\u3048\u65b9\u3067\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\n\n# \u5b9f\u88c5\u65b9\u91dd\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u8a18\u8ff0\u3057\u305f\u30af\u30e9\u30b9\u3067`IClassFixture<TFixture>`\u3092\u7d99\u627f\u3057\u3066\u304a\u304f\u3068\u3001xUnit\u306b\u3088\u3063\u3066\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b`TFixture`\u30af\u30e9\u30b9\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\n\n\u5f93\u3063\u3066\u3001\u4eca\u56de\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u5fc5\u8981\u3068\u3059\u308b\u30c6\u30b9\u30c8\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u65b9\u91dd\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n1. `TFixture`\u30af\u30e9\u30b9\u306bDB\u5468\u308a\u306e\u521d\u671f\u5316\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n2. \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u3067\u306f\u3001`IClassFixture<TFixture>`\u3092\u7d99\u627f\u3057\u3066\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067TFixture\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u308b\n3. \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u5185\u3067TFixture\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089DB\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u53d6\u308a\u51fa\u3057\u3066DB\u64cd\u4f5c\u3059\u308b\n\n\n# \u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u4f8b\n\n## SQLite\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eFixture\u30af\u30e9\u30b9\u4f8b\n\nFixture\u30af\u30e9\u30b9\u5074\u3067\u306f\u3001\u30a4\u30f3\u30e1\u30e2\u30ea\u306aSQLite\u306b\u63a5\u7d9a\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u3001NHibernate\u3068FluentNHibernate\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n\u306a\u304a\u3001IDisposable\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304f\u3068\u3001xUnit\u304c\u30c6\u30b9\u30c8\u7d42\u4e86\u6642\u306bDispose()\u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u308c\u308b\u305f\u3081\u3001DB\u306e\u63a5\u7d9a\u3092\u9589\u3058\u308b\u30b3\u30fc\u30c9\u306a\u3069\u3092\u66f8\u3044\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u305f`SchemaExport`\u3092\u5229\u7528\u3057\u3001O/R\u30de\u30c3\u30d1\u30fc\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30de\u30c3\u30d4\u30f3\u30b0\u60c5\u5831\u3092\u5143\u306b\u3001SQLite\u4e0a\u306b\u5fc5\u8981\u306a\u30c6\u30fc\u30d6\u30eb\u3092\u81ea\u52d5\u7684\u306b\u4f5c\u3063\u305f\u4e0a\u3067DB\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306b\u6e21\u3059\u3001\u3068\u3044\u3046\u3053\u3068\u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\n```csharp\nusing FluentNHibernate.Cfg;\nusing FluentNHibernate.Cfg.Db;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.PlatformAbstractions;\nusing NHibernate;\nusing NHibernate.Cfg;\nusing NHibernate.Tool.hbm2ddl;\nusing System;\nusing System.Linq;\nusing System.Reflection;\nusing Xunit;\nusing Xunit.Abstractions;\n\npublic class SQLiteInMemoryDatabaseFixture: IDisposable\n{\n    private static ISessionFactory sessionFactory;\n    private static Configuration configuration;\n    public static ISessionFactory SessionFactory {\n        get\n        {\n            if (sessionFactory == null)\n            {\n                sessionFactory = Fluently.Configure()\n                    .Database(\n                        SQLiteConfiguration.Standard\n                            .InMemory()\n                            .ShowSql()\n                        )\n                    .Mappings(m =>\n                    {\n                        m.FluentMappings.AddFromAssembly(Assembly.GetExecutingAssembly());\n                    })\n                    .ExposeConfiguration(cfg => {\n                        configuration = cfg;\n                    })\n                    .BuildSessionFactory();\n            }\n            return sessionFactory;\n        }\n    }\n\n    public ISession GetSession()\n    {\n        ISession session = SessionFactory.OpenSession();\n\n        var export = new SchemaExport(configuration);\n        export.Execute(true, true, false, session.Connection, null);\n\n        return session;\n    }\n    \n\n    #region IDisposable Support\n    private bool disposedValue = false; // \u91cd\u8907\u3059\u308bDispose()\u547c\u3073\u51fa\u3057\u3092\u691c\u51fa\u3059\u308b\n\n    protected virtual void Dispose(bool disposing)\n    {\n        if (!disposedValue)\n        {\n            if (disposing)\n            {\n                if (sessionFactory != null)\n                    sessionFactory.Dispose();\n            }\n\n            sessionFactory = null;\n            configuration = null;\n\n            disposedValue = true;\n        }\n    }\n\n    //IDisposable\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304f\u3068\u3001xUnit\u304c\u30c6\u30b9\u30c8\u7d42\u4e86\u6642\u306b\u547c\u3073\u51fa\u3057\u3066\u304f\u308c\u308b\n    // https://xunit.github.io/docs/shared-context.html#class-fixture\n    public void Dispose()\n    {\n        Dispose(true);\n    }\n    #endregion\n\n}\n\n```\n\n\n## \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067Fixture\u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304c`IClassFixture<TFixture>`\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u3068\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b`TFixture`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\n\u6e21\u3055\u308c\u305ffixture\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u683c\u7d0d\u3057\u3066\u304a\u304d\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u5185\u304b\u3089\u9069\u5b9c\u5229\u7528\u3059\u308b\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```csharp\n\npublic class MyServiceTest: IClassFixture<SQLiteInMemoryDatabaseFixture>\n{\n    private readonly SQLiteInMemoryDatabaseFixture _fixture;\n\n    public MyServiceTest(SQLiteInMemoryDatabaseFixture fixture)\n    {\n        _fixture = fixture;\n    }\n\n    [Fact]\n    public void InterfaceImplimentationTest()\n    {\n        var session = _fixture.GetSession();\n        var uowFactory = new NHibernateUnitOfWorkFactory(session: session);\n\n        // \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304c\u7d9a\u304f\uff0e\uff0e\uff0e\uff0e\uff0e\uff0e\uff0e\n    }\n}\n```\n\n\n## \u5229\u7528\u3057\u305fNuGet\u30e9\u30a4\u30d6\u30e9\u30ea\n\nproject.json\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```json\n\"dependencies\": {\n    \"NHibernate\": \"4.0.4.4000\",\n    \"xunit\": \"2.1.0\",\n    \"dotnet-test-xunit\": \"1.0.0-rc2-build10025\",\n    \"xunit.runner.visualstudio\": \"2.1.0\",\n    \"FluentNHibernate\": \"2.0.3\",\n    \"FluentMigrator\": \"1.6.2\",\n    \"FluentMigrator.Tools\": \"1.6.2\",\n    \"System.Data.SQLite\": \"1.0.101\",\n    \"System.Data.SQLite.Core\": \"1.0.101\",\n    \"System.Data.SQLite.Linq\": \"1.0.101\",\n    \"System.Data.SQLite.x64\": \"1.0.101\"\n}\n```\n", "tags": ["C#", "xUnit", "NHibernate", "\u30c6\u30b9\u30c8", ".NET"]}