{"tags": ["C++", "OpenGL"], "context": "\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u30b2\u30fc\u30e0\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002  \nMac\u74b0\u5883\u306e\u88fd\u4f5c\u3067\u3059\u3002\n\u30e6\u30cb\u30c3\u30c8\u306e\u79fb\u52d5\u3001\u5f3e\u306e\u767a\u5c04\u3001\u5f53\u305f\u308a\u5224\u5b9a\u306a\u3069\u3002\n\n#include <iostream>\n#include <GLUT/glut.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <ctime>\nusing namespace std;\n\n#define WIDTH 640                       //\u753b\u9762\u306e\u6a2a\u5e45\n#define HEIGHT 480                      //\u753b\u9762\u306e\u7e26\u5e45\n#define PI 3.14159265358979             //\u5186\u5468\u7387\n\n//////////////////////////////////////////////////////////\n\nint invcop;                             //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u8907\u88fd\u306e\u5ea7\u6a19\nstatic float invxm = 0;                 //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u79fb\u52d5\u5024\nstatic int invym = 0;                   //\u7aef\u306b\u884c\u304f\u3054\u3068\u306b\u4e0b\u304c\u308b\u5024\nint il1,il2,il3,il4,il5,il6,il7,il8;    //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u751f\u6b7b\u5224\u5b9a\nstatic int inv_Bx;                      //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u5f3e\u306ex\u5ea7\u6a19\nstatic float inv_By = 80;               //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f3e\u306ey\u5ea7\u6a19\nint invr = 20;                          //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u534a\u5f84\nint inv_Bcop;                           //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f3e\u306e\u8907\u88fd\u306e\u5ea7\u6a19\nint sei = 0;                            //\u5e38\u306b\u6b63\u306b\u306a\u308b\u5024\nint b1,b2,b3,b4,b5,b6,b7,b8;            //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f3e\u306e\u767a\u5c04\u6761\u4ef6\n\n//////////////////////////////////////////////////////////\n\nint uxm;                                //\u30e6\u30cb\u30c3\u30c8\u306e\u79fb\u52d5\u5024\nint ul;                                 //\u30e6\u30cb\u30c3\u30c8\u306e\u751f\u6b7b\u5224\u5b9a\nint bull;                               //\u30e6\u30cb\u30c3\u30c8\u306e\u5f3e\u306e\u30ad\u30fc\u30dc\u30fc\u30c9\nstatic int unitx = 312, unity = 300;    //\u30e6\u30cb\u30c3\u30c8\u306ex\u5ea7\u6a19\nstatic int unit_Bx;                     //\u30e6\u30cb\u30c3\u30c8\u5f3e\u306ex\u5ea7\u6a19\nstatic int unit_By = 408;               //\u30e6\u30cb\u30c3\u30c8\u306e\u5f3e\u306ey\u5ea7\u6a19\n\n//////////////////////////////////////////////////////////\n\n//1\u30d6\u30ed\u30c3\u30af\nvoid Quad(int x,int y){ \n    glBegin(GL_QUADS);\n    glVertex2f(x,y);\n    glVertex2f(x,y+4);\n    glVertex2f(x+4,y+4);\n    glVertex2f(x+4,y);\n    glEnd();\n}\n\n//\u5f3e\nvoid Point(int x,int y,float size){ \n    glPointSize(size);\n    glBegin(GL_POINTS);\n    glVertex2i(x , y);\n    glEnd();\n}\n\n//////////////////////////////////////////////////////////\n\n//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u30af\u30e9\u30b9\nclass Inv{\npublic:\n    void inv();\n    void copy();\n};\n\n//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f62\nvoid Inv::inv(){\n    for(int n = 0; n <= 20; n += 20){       //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u6a2a\u4e00\u5217\n        glColor4f(1.0f,0.0f,0.0f,1.0f);\n        Quad(n+48+invcop+invxm,44+invym);\n    }\n    for(int n = 0; n <= 12; n += 12){\n        glColor4f(1.0f,0.0f,0.0f,1.0f);\n        Quad(n+52+invcop+invxm,48+invym);\n    }\n    for(int n = 0; n <= 20; n += 4){\n        glColor4f(1.0f,0.0f,0.0f,1.0f);\n        Quad(n+48+invcop+invxm,52+invym);\n    }\n    for(int n = 0; n <= 28; n += 4){\n        glColor4f(1.0f,0.0f,0.0f,1.0f);\n        Quad(n+44+invcop+invxm,56+invym);\n    }\n    for(int n = 0; n <= 12; n += 12){\n        glColor4f(0.0f,0.0f,0.0f,1.0f);\n        Quad(n+52+invcop+invxm,56+invym);\n    }\n    for(int n = 0; n <= 36; n += 4){\n        glColor4f(1.0f,0.0f,0.0f,1.0f);\n        Quad(n+40+invcop+invxm,60+invym);\n    }\n    for(int n = 0; n <= 36; n += 4){\n        glColor4f(1.0f,0.0f,0.0f,1.0f);\n        Quad(n+40+invcop+invxm,64+invym);\n    }\n    for(int n = 0; n <= 28; n += 28){\n        glColor4f(0.0f,0.0f,0.0f,1.0f);\n        Quad(n+44+invcop+invxm,64+invym);\n    }\n    for(int n = 0; n <= 8; n += 8){\n        glColor4f(1.0f,0.0f,0.0f,1.0f);\n        Quad(n+40+invcop+invxm,68+invym);\n    }\n    for(int n = 0; n <= 8; n += 8){\n        glColor4f(1.0f,0.0f,0.0f,1.0f);\n        Quad(n+68+invcop+invxm,68+invym);\n    }\n    for(int n = 0; n <= 12; n += 12){\n        glColor4f(1.0f,0.0f,0.0f,1.0f);\n        Quad(n+52+invcop+invxm,72+invym);\n    }\n    glFlush();\n}\n\n//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u30928\u4f53\u63cf\u753b\u3059\u308b\u5f15\u6570\nvoid Inv::copy(){\n    static GLboolean isUp;\n    if (invxm > 0)isUp = GL_FALSE;              //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306ex\u5ea7\u6a19\u306e\u79fb\u52d5\u5024\n    else if (invxm <= -40)isUp = GL_TRUE;\n    invxm += (isUp == GL_TRUE ? 0.4 : -0.4);\n    if(invxm > 0){                              //y\u5ea7\u6a19\u306e\u79fb\u52d5\u5024\n        invym += 20;\n    }else if(invxm <= -40){\n        invym += 20;\n    }\n    if(il1 == 1){                               //\u6b7b\u3093\u3067\u3044\u308b\u3068\u63cf\u753b\u3057\u306a\u3044\u3088\u3046\u306b\n\n    }else{\n        invcop = 0;\n        inv();\n    }\n    if(il2 == 2){\n\n    }else{\n        invcop = 80;\n        inv();\n    }\n    if(il3 == 3){\n\n    }else{\n        invcop = 160;\n        inv();\n    }\n    if(il4 == 4){\n\n    }else{\n        invcop = 240;\n        inv();\n    }\n    if(il5 == 5){\n\n    }else{\n        invcop = 320;\n        inv();\n    }\n    if(il6 == 6){\n\n    }else{\n        invcop = 400;\n        inv();\n    }\n    if(il7 == 7){\n\n    }else{\n        invcop = 480;\n        inv();\n    }\n    if(il8 == 8){\n\n    }else{\n        invcop = 560;\n        inv();\n    }\n}   \n\n//////////////////////////////////////////////////////////\n\n//\u30e6\u30cb\u30c3\u30c8\u306e\u30af\u30e9\u30b9\nclass Unit{\npublic:\n    void unit();\n};\n\n//\u30e6\u30cb\u30c3\u30c8\u3092\u63cf\u753b\u3059\u308b\u5f15\u6570\nvoid Unit::unit(){\n    if(uxm == 1){                           //\u30e6\u30cb\u30c3\u30c8\u306e\u79fb\u52d5\u5024\n        if(unitx < 586 || unity < 594){\n        unitx+=4; unity+=4;\n        }\n    }else if(uxm == 2){ \n        if(unitx > 8 || unity > 0){\n        unitx-=4; unity-=4;\n        }\n    }\n    if(ul == 1){                            //\u6b7b\u3093\u3067\u3044\u308b\u3068\u63cf\u753b\u3057\u306a\u3044\u3088\u3046\u306b\n        exit(0);\n    }else{\n        glColor4f(1.0f,1.0f,1.0f,1.0f);\n        for(int n = 0; n <= 16; n += 4){\n            Quad(n+unitx,408);\n        }\n        for(int n = 0; n <= 16; n += 4){\n            Quad(n+unitx,412);\n        }\n        for(int n = 0; n <= 16; n += 4){\n            Quad(n+unitx,416);\n        }\n        for(int n = 0; n <= 40; n += 4){\n            Quad(n+unity,420);\n        }\n        for(int n = 0; n <= 40; n += 4){\n            Quad(n+unity,424);\n        }\n        for(int n = 0; n <= 40; n += 4){\n            Quad(n+unity,428);\n        }\n        for(int n = 0; n <= 40; n += 4){\n            Quad(n+unity,432);\n        }\n        glFlush();\n    }\n}\n\n//////////////////////////////////////////////////////////\n\n//\u30e6\u30cb\u30c3\u30c8\u306e\u5f3e\u306e\u30af\u30e9\u30b9\nclass Bullet{\npublic:\n    void bullet();\n};\n\n//\u5f3e\u306e\u63cf\u753b\u3001\u5f53\u305f\u308a\u5224\u5b9a\nvoid Bullet::bullet(){\n    int y2 = 60;                                //\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u4e2d\u5fc3\u306ey\u5ea7\u6a19\n    glColor4f(1.0f,1.0f,1.0f,1.0f);\n    if(bull == 3 && ul != 1){                   //\u6b7b\u3093\u3067\u3044\u308b\u3068\u767a\u5c04\u3057\u306a\u3044\u3088\u3046\u306b\n        if(unit_By == 408){                     //\u5f3e\u306e\u767a\u5c04\u6642\u306e\u307f\u30e6\u30cb\u30c3\u30c8\u306ex\u5ea7\u6a19\u3092\u3068\u308b\n            unit_Bx = unitx+8;\n        }\n        unit_By -= 12;                          //\u5f3e\u306e\u901f\u5ea6\n        Point(unit_Bx, unit_By, 4);\n        if((unit_Bx-(60+invxm))*(unit_Bx-(60+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n            il1 = 1;\n        }\n        if((unit_Bx-(140+invxm))*(unit_Bx-(140+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n            il2 = 2;\n        }\n        if((unit_Bx-(220+invxm))*(unit_Bx-(220+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n            il3 = 3;\n        }\n        if((unit_Bx-(300+invxm))*(unit_Bx-(300+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n            il4 = 4;\n        }\n        if((unit_Bx-(380+invxm))*(unit_Bx-(380+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n            il5 = 5;\n        }\n        if((unit_Bx-(460+invxm))*(unit_Bx-(460+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n            il6 = 6;\n        }\n        if((unit_Bx-(540+invxm))*(unit_Bx-(540+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n            il7 = 7;\n        }\n        if((unit_Bx-(620+invxm))*(unit_Bx-(620+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n            il8 = 8;        \n        }\n        if(unit_By < 0){                        //\u5f3e\u304c\u753b\u9762\u5916\u306b\u51fa\u305f\u6642\u5143\u306e\u4f4d\u7f6e\u306b\n            unit_By = 408;\n            bull = 0;\n        }\n    }\n}\n\n//////////////////////////////////////////////////////////\n\n//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f3e\u306e\u30af\u30e9\u30b9\nclass Ibullet{\npublic:\n    void ibullet();\n    void shot();\n};\n\nvoid Ibullet::ibullet(){                        //\u5f3e\u306e\u63cf\u753b\u3001\u5f53\u305f\u308a\u5224\u5b9a\n    glColor4f(1.0f,1.0f,1.0f,1.0f);\n    if(sei == 0){\n        if(inv_By == 80){                       //\u5f3e\u306e\u767a\u5c04\u6642\u306e\u307f\u30e6\u30cb\u30c3\u30c8\u306ex\u5ea7\u6a19\u3092\u3068\u308b\n            inv_Bx = invxm+60;\n        }\n        Point(inv_Bx+inv_Bcop, inv_By+invym, 4);\n        if((inv_Bx+inv_Bcop-unitx-10)*(inv_Bx+inv_Bcop-unitx-10)+(inv_By+invym-420)*(inv_By+invym-420) <= (20*20)){\n            ul = 1;\n        }\n    }\n}\n\n//\u5f3e\u306e\u6761\u4ef6\u3001\u8907\u88fd\nvoid Ibullet::shot(){\n    inv_By += 10;                               //\u5f3e\u306e\u901f\u5ea6\n    if(inv_By > 480){                           //2\u5206\u306e1\u306e\u78ba\u7387\u3067\u767a\u5c04\u3059\u308b\n            b1 = rand() % 2 + 1;\n            b2 = rand() % 2 + 1;\n            b3 = rand() % 2 + 1;\n            b4 = rand() % 2 + 1;\n            b5 = rand() % 2 + 1;\n            b6 = rand() % 2 + 1;\n            b7 = rand() % 2 + 1;\n            b8 = rand() % 2 + 1;\n            inv_By = 80;\n            sei = 0;\n    }\n    if(il1 == 1){                               //\u6b7b\u3093\u3067\u3044\u308b\u3068\u767a\u5c04\u3057\u306a\u3044\u3088\u3046\u306b\n\n    }else if(b1 == 1){\n        inv_Bcop = 0;\n        ibullet();\n    }\n    if(il2 == 2){\n\n    }else if(b2 == 1){\n        inv_Bcop = 80;\n        ibullet();\n    }\n    if(il3 == 3){\n\n    }else if(b3 == 1){\n        inv_Bcop = 160;\n        ibullet();\n    }\n    if(il4 == 4){\n\n    }else if(b4 == 1){\n        inv_Bcop = 240;\n        ibullet();\n    }\n    if(il5 == 5){\n\n    }else if(b5 == 1){\n        inv_Bcop = 320;\n        ibullet();\n    }\n    if(il6 == 6){\n\n    }else if(b6 == 1){\n        inv_Bcop = 400;\n        ibullet();\n    }\n    if(il7 == 7){\n\n    }else if(b7 == 1){\n        inv_Bcop = 480;\n        ibullet();\n    }\n    if(il8 == 8){\n\n    }else if(b8 == 1){\n        inv_Bcop = 560;\n        ibullet();\n    }\n    if(il1 == 1 && il2 == 2 && il3 == 3 && il4 == 4 && il5 == 5 && il6 == 6 && il7 == 7 && il8 == 8){\n        exit(0);\n    }\n}\n\nvoid display(void){\n    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n    Inv i;\n    Unit u;\n    Bullet b;\n    Ibullet ib;\n    i.copy();\n    u.unit();\n    b.bullet();\n    ib.shot();\n    glutSwapBuffers();\n}\n\nvoid Idle() {\n    glutPostRedisplay();\n}\n\nvoid keyboard(unsigned char key, int x, int y){\n    switch(key){\n        case ' ': bull = 3;                 //[ ]\u3092\u62bc\u3059\u3068\u5f3e\u3092\u767a\u5c04\u3059\u308b\n            glutPostRedisplay();\n            break;\n    }\n}\n\nvoid Skey(int key, int x, int y){\n    switch(key){\n        case GLUT_KEY_LEFT: uxm = 2;        //[\u2190]\u3092\u62bc\u3059\u3068\u5de6\u306b\u52d5\u304f\n            glutPostRedisplay();\n            break;\n        case GLUT_KEY_RIGHT: uxm = 1;       //[\u2192]\u3092\u62bc\u3059\u3068\u53f3\u306b\u52d5\u304f\n            glutPostRedisplay();\n            break;\n    }\n}\n\nvoid Supkey(int key, int x, int y){\n    switch(key){\n        case GLUT_KEY_LEFT: uxm = 0;        //[\u2190]\u3092\u96e2\u3059\u3068\u6b62\u307e\u308b\n            glutPostRedisplay();\n            break;\n        case GLUT_KEY_RIGHT: uxm = 0;       //[\u2192]\u3092\u96e2\u3059\u3068\u6b62\u307e\u308b\n            glutPostRedisplay();\n            break;\n    }\n}\n\nvoid Init(){\n    glClearColor(0.0, 0.0, 0.0, 1.0);\n    glOrtho(0, WIDTH, HEIGHT, 0, -1, 1);\n}\n\nint main(int argc, char *argv[]){\n    glutInitWindowSize(WIDTH, HEIGHT);\n    glutInit(&argc, argv);\n    glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE);\n    glutCreateWindow(\"test\");\n    glutDisplayFunc(display);\n    glutKeyboardFunc(keyboard);\n    glutSpecialFunc(Skey);\n    glutSpecialUpFunc(Supkey);\n    glutIdleFunc(Idle);\n    Init();\n    glutMainLoop();\n    return 0;\n}\n\n\n\n\u4eca\u5ea6\u306fSE\u3084BGM\u3001\u30b9\u30b3\u30a2\u3001\u6b8b\u6a5f\u306a\u3069\u3082\u5165\u308c\u3066\u307f\u305f\u3044\u3067\u3059\u3002  \n\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u30b2\u30fc\u30e0\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002 :smile: \nMac\u74b0\u5883\u306e\u88fd\u4f5c\u3067\u3059\u3002\n\u30e6\u30cb\u30c3\u30c8\u306e\u79fb\u52d5\u3001\u5f3e\u306e\u767a\u5c04\u3001\u5f53\u305f\u308a\u5224\u5b9a\u306a\u3069\u3002\n\n```\n\n#include <iostream>\n#include <GLUT/glut.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <ctime>\nusing namespace std;\n\n#define WIDTH 640\t\t\t\t\t\t//\u753b\u9762\u306e\u6a2a\u5e45\n#define HEIGHT 480\t\t\t\t\t\t//\u753b\u9762\u306e\u7e26\u5e45\n#define PI 3.14159265358979\t\t\t\t//\u5186\u5468\u7387\n\n//////////////////////////////////////////////////////////\n\nint invcop; \t\t\t\t\t\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u8907\u88fd\u306e\u5ea7\u6a19\nstatic float invxm = 0; \t\t\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u79fb\u52d5\u5024\nstatic int invym = 0; \t\t\t\t\t//\u7aef\u306b\u884c\u304f\u3054\u3068\u306b\u4e0b\u304c\u308b\u5024\nint il1,il2,il3,il4,il5,il6,il7,il8; \t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u751f\u6b7b\u5224\u5b9a\nstatic int inv_Bx; \t\t\t\t\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u5f3e\u306ex\u5ea7\u6a19\nstatic float inv_By = 80; \t\t\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f3e\u306ey\u5ea7\u6a19\nint invr = 20; \t\t\t\t\t\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u534a\u5f84\nint inv_Bcop;\t\t\t\t\t\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f3e\u306e\u8907\u88fd\u306e\u5ea7\u6a19\nint sei = 0; \t\t\t\t\t\t\t//\u5e38\u306b\u6b63\u306b\u306a\u308b\u5024\nint b1,b2,b3,b4,b5,b6,b7,b8; \t\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f3e\u306e\u767a\u5c04\u6761\u4ef6\n\n//////////////////////////////////////////////////////////\n\nint uxm; \t\t\t\t\t\t\t\t//\u30e6\u30cb\u30c3\u30c8\u306e\u79fb\u52d5\u5024\nint ul; \t\t\t\t\t\t\t\t//\u30e6\u30cb\u30c3\u30c8\u306e\u751f\u6b7b\u5224\u5b9a\nint bull; \t\t\t\t\t\t\t\t//\u30e6\u30cb\u30c3\u30c8\u306e\u5f3e\u306e\u30ad\u30fc\u30dc\u30fc\u30c9\nstatic int unitx = 312, unity = 300; \t//\u30e6\u30cb\u30c3\u30c8\u306ex\u5ea7\u6a19\nstatic int unit_Bx; \t\t\t\t\t//\u30e6\u30cb\u30c3\u30c8\u5f3e\u306ex\u5ea7\u6a19\nstatic int unit_By = 408; \t\t\t\t//\u30e6\u30cb\u30c3\u30c8\u306e\u5f3e\u306ey\u5ea7\u6a19\n\n//////////////////////////////////////////////////////////\n\n//1\u30d6\u30ed\u30c3\u30af\nvoid Quad(int x,int y){ \n\tglBegin(GL_QUADS);\n\tglVertex2f(x,y);\n\tglVertex2f(x,y+4);\n\tglVertex2f(x+4,y+4);\n\tglVertex2f(x+4,y);\n\tglEnd();\n}\n\n//\u5f3e\nvoid Point(int x,int y,float size){ \n\tglPointSize(size);\n\tglBegin(GL_POINTS);\n\tglVertex2i(x , y);\n\tglEnd();\n}\n\n//////////////////////////////////////////////////////////\n\n//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u30af\u30e9\u30b9\nclass Inv{\npublic:\n\tvoid inv();\n\tvoid copy();\n};\n\n//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f62\nvoid Inv::inv(){\n\tfor(int n = 0; n <= 20; n += 20){\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u6a2a\u4e00\u5217\n\t\tglColor4f(1.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+48+invcop+invxm,44+invym);\n\t}\n\tfor(int n = 0; n <= 12; n += 12){\n\t\tglColor4f(1.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+52+invcop+invxm,48+invym);\n\t}\n\tfor(int n = 0; n <= 20; n += 4){\n\t\tglColor4f(1.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+48+invcop+invxm,52+invym);\n\t}\n\tfor(int n = 0; n <= 28; n += 4){\n\t\tglColor4f(1.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+44+invcop+invxm,56+invym);\n\t}\n\tfor(int n = 0; n <= 12; n += 12){\n\t\tglColor4f(0.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+52+invcop+invxm,56+invym);\n\t}\n\tfor(int n = 0; n <= 36; n += 4){\n\t\tglColor4f(1.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+40+invcop+invxm,60+invym);\n\t}\n\tfor(int n = 0; n <= 36; n += 4){\n\t\tglColor4f(1.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+40+invcop+invxm,64+invym);\n\t}\n\tfor(int n = 0; n <= 28; n += 28){\n\t\tglColor4f(0.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+44+invcop+invxm,64+invym);\n\t}\n\tfor(int n = 0; n <= 8; n += 8){\n\t\tglColor4f(1.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+40+invcop+invxm,68+invym);\n\t}\n\tfor(int n = 0; n <= 8; n += 8){\n\t\tglColor4f(1.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+68+invcop+invxm,68+invym);\n\t}\n\tfor(int n = 0; n <= 12; n += 12){\n\t\tglColor4f(1.0f,0.0f,0.0f,1.0f);\n\t\tQuad(n+52+invcop+invxm,72+invym);\n\t}\n\tglFlush();\n}\n\n//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u30928\u4f53\u63cf\u753b\u3059\u308b\u5f15\u6570\nvoid Inv::copy(){\n\tstatic GLboolean isUp;\n\tif (invxm > 0)isUp = GL_FALSE;\t\t\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306ex\u5ea7\u6a19\u306e\u79fb\u52d5\u5024\n\telse if (invxm <= -40)isUp = GL_TRUE;\n\tinvxm += (isUp == GL_TRUE ? 0.4 : -0.4);\n\tif(invxm > 0){\t\t\t\t\t\t\t\t//y\u5ea7\u6a19\u306e\u79fb\u52d5\u5024\n\t\tinvym += 20;\n\t}else if(invxm <= -40){\n\t\tinvym += 20;\n\t}\n\tif(il1 == 1){\t\t\t\t\t\t\t\t//\u6b7b\u3093\u3067\u3044\u308b\u3068\u63cf\u753b\u3057\u306a\u3044\u3088\u3046\u306b\n\t\n\t}else{\n\t\tinvcop = 0;\n\t\tinv();\n\t}\n\tif(il2 == 2){\n\n\t}else{\n\t\tinvcop = 80;\n\t\tinv();\n\t}\n\tif(il3 == 3){\n\n\t}else{\n\t\tinvcop = 160;\n\t\tinv();\n\t}\n\tif(il4 == 4){\n\n\t}else{\n\t\tinvcop = 240;\n\t\tinv();\n\t}\n\tif(il5 == 5){\n\n\t}else{\n\t\tinvcop = 320;\n\t\tinv();\n\t}\n\tif(il6 == 6){\n\n\t}else{\n\t\tinvcop = 400;\n\t\tinv();\n\t}\n\tif(il7 == 7){\n\n\t}else{\n\t\tinvcop = 480;\n\t\tinv();\n\t}\n\tif(il8 == 8){\n\n\t}else{\n\t\tinvcop = 560;\n\t\tinv();\n\t}\n}\t\n\n//////////////////////////////////////////////////////////\n\n//\u30e6\u30cb\u30c3\u30c8\u306e\u30af\u30e9\u30b9\nclass Unit{\npublic:\n\tvoid unit();\n};\n\t\n//\u30e6\u30cb\u30c3\u30c8\u3092\u63cf\u753b\u3059\u308b\u5f15\u6570\nvoid Unit::unit(){\n\tif(uxm == 1){\t\t\t\t\t\t\t//\u30e6\u30cb\u30c3\u30c8\u306e\u79fb\u52d5\u5024\n\t\tif(unitx < 586 || unity < 594){\n\t\tunitx+=4; unity+=4;\n\t\t}\n\t}else if(uxm == 2){ \n\t\tif(unitx > 8 || unity > 0){\n\t\tunitx-=4; unity-=4;\n\t\t}\n\t}\n\tif(ul == 1){\t\t\t\t\t\t\t//\u6b7b\u3093\u3067\u3044\u308b\u3068\u63cf\u753b\u3057\u306a\u3044\u3088\u3046\u306b\n\t\texit(0);\n\t}else{\n\t\tglColor4f(1.0f,1.0f,1.0f,1.0f);\n\t\tfor(int n = 0; n <= 16; n += 4){\n\t\t\tQuad(n+unitx,408);\n\t\t}\n\t\tfor(int n = 0; n <= 16; n += 4){\n\t\t\tQuad(n+unitx,412);\n\t\t}\n\t\tfor(int n = 0; n <= 16; n += 4){\n\t\t\tQuad(n+unitx,416);\n\t\t}\n\t\tfor(int n = 0; n <= 40; n += 4){\n\t\t\tQuad(n+unity,420);\n\t\t}\n\t\tfor(int n = 0; n <= 40; n += 4){\n\t\t\tQuad(n+unity,424);\n\t\t}\n\t\tfor(int n = 0; n <= 40; n += 4){\n\t\t\tQuad(n+unity,428);\n\t\t}\n\t\tfor(int n = 0; n <= 40; n += 4){\n\t\t\tQuad(n+unity,432);\n\t\t}\n\t\tglFlush();\n\t}\n}\n\n//////////////////////////////////////////////////////////\n\n//\u30e6\u30cb\u30c3\u30c8\u306e\u5f3e\u306e\u30af\u30e9\u30b9\nclass Bullet{\npublic:\n\tvoid bullet();\n};\n\n//\u5f3e\u306e\u63cf\u753b\u3001\u5f53\u305f\u308a\u5224\u5b9a\nvoid Bullet::bullet(){\n\tint y2 = 60; \t\t\t\t\t\t\t\t//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u4e2d\u5fc3\u306ey\u5ea7\u6a19\n\tglColor4f(1.0f,1.0f,1.0f,1.0f);\n\tif(bull == 3 && ul != 1){\t\t\t\t\t//\u6b7b\u3093\u3067\u3044\u308b\u3068\u767a\u5c04\u3057\u306a\u3044\u3088\u3046\u306b\n\t\tif(unit_By == 408){\t\t\t\t\t\t//\u5f3e\u306e\u767a\u5c04\u6642\u306e\u307f\u30e6\u30cb\u30c3\u30c8\u306ex\u5ea7\u6a19\u3092\u3068\u308b\n\t\t\tunit_Bx = unitx+8;\n\t\t}\n\t\tunit_By -= 12;\t\t\t\t\t\t\t//\u5f3e\u306e\u901f\u5ea6\n\t\tPoint(unit_Bx, unit_By, 4);\n\t\tif((unit_Bx-(60+invxm))*(unit_Bx-(60+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n\t\t\til1 = 1;\n\t\t}\n\t\tif((unit_Bx-(140+invxm))*(unit_Bx-(140+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n\t\t\til2 = 2;\n\t\t}\n\t\tif((unit_Bx-(220+invxm))*(unit_Bx-(220+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n\t\t\til3 = 3;\n\t\t}\n\t\tif((unit_Bx-(300+invxm))*(unit_Bx-(300+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n\t\t\til4 = 4;\n\t\t}\n\t\tif((unit_Bx-(380+invxm))*(unit_Bx-(380+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n\t\t\til5 = 5;\n\t\t}\n\t\tif((unit_Bx-(460+invxm))*(unit_Bx-(460+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n\t\t\til6 = 6;\n\t\t}\n\t\tif((unit_Bx-(540+invxm))*(unit_Bx-(540+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n\t\t\til7 = 7;\n\t\t}\n\t\tif((unit_Bx-(620+invxm))*(unit_Bx-(620+invxm))+(unit_By-(y2+invym))*(unit_By-(y2+invym)) <= (invr*invr)){\n\t\t\til8 = 8;\t\t\n\t\t}\n\t\tif(unit_By < 0){\t\t\t\t\t\t//\u5f3e\u304c\u753b\u9762\u5916\u306b\u51fa\u305f\u6642\u5143\u306e\u4f4d\u7f6e\u306b\n\t\t\tunit_By = 408;\n\t\t\tbull = 0;\n\t\t}\n\t}\n}\n\n//////////////////////////////////////////////////////////\n\n//\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc\u306e\u5f3e\u306e\u30af\u30e9\u30b9\nclass Ibullet{\npublic:\n\tvoid ibullet();\n\tvoid shot();\n};\n\nvoid Ibullet::ibullet(){\t\t\t\t\t\t//\u5f3e\u306e\u63cf\u753b\u3001\u5f53\u305f\u308a\u5224\u5b9a\n\tglColor4f(1.0f,1.0f,1.0f,1.0f);\n\tif(sei == 0){\n\t\tif(inv_By == 80){\t\t\t\t\t\t//\u5f3e\u306e\u767a\u5c04\u6642\u306e\u307f\u30e6\u30cb\u30c3\u30c8\u306ex\u5ea7\u6a19\u3092\u3068\u308b\n\t\t\tinv_Bx = invxm+60;\n\t\t}\n\t\tPoint(inv_Bx+inv_Bcop, inv_By+invym, 4);\n\t\tif((inv_Bx+inv_Bcop-unitx-10)*(inv_Bx+inv_Bcop-unitx-10)+(inv_By+invym-420)*(inv_By+invym-420) <= (20*20)){\n\t\t\tul = 1;\n\t\t}\n\t}\n}\n\n//\u5f3e\u306e\u6761\u4ef6\u3001\u8907\u88fd\nvoid Ibullet::shot(){\n\tinv_By += 10;\t\t\t\t\t\t\t\t//\u5f3e\u306e\u901f\u5ea6\n\tif(inv_By > 480){\t\t\t\t\t\t\t//2\u5206\u306e1\u306e\u78ba\u7387\u3067\u767a\u5c04\u3059\u308b\n\t\t\tb1 = rand() % 2 + 1;\n\t\t\tb2 = rand() % 2 + 1;\n\t\t\tb3 = rand() % 2 + 1;\n\t\t\tb4 = rand() % 2 + 1;\n\t\t\tb5 = rand() % 2 + 1;\n\t\t\tb6 = rand() % 2 + 1;\n\t\t\tb7 = rand() % 2 + 1;\n\t\t\tb8 = rand() % 2 + 1;\n\t\t\tinv_By = 80;\n\t\t\tsei = 0;\n\t}\n\tif(il1 == 1){\t\t\t\t\t\t\t\t//\u6b7b\u3093\u3067\u3044\u308b\u3068\u767a\u5c04\u3057\u306a\u3044\u3088\u3046\u306b\n\t\n\t}else if(b1 == 1){\n\t\tinv_Bcop = 0;\n\t\tibullet();\n\t}\n\tif(il2 == 2){\n\n\t}else if(b2 == 1){\n\t\tinv_Bcop = 80;\n\t\tibullet();\n\t}\n\tif(il3 == 3){\n\n\t}else if(b3 == 1){\n\t\tinv_Bcop = 160;\n\t\tibullet();\n\t}\n\tif(il4 == 4){\n\n\t}else if(b4 == 1){\n\t\tinv_Bcop = 240;\n\t\tibullet();\n\t}\n\tif(il5 == 5){\n\n\t}else if(b5 == 1){\n\t\tinv_Bcop = 320;\n\t\tibullet();\n\t}\n\tif(il6 == 6){\n\n\t}else if(b6 == 1){\n\t\tinv_Bcop = 400;\n\t\tibullet();\n\t}\n\tif(il7 == 7){\n\n\t}else if(b7 == 1){\n\t\tinv_Bcop = 480;\n\t\tibullet();\n\t}\n\tif(il8 == 8){\n\n\t}else if(b8 == 1){\n\t\tinv_Bcop = 560;\n\t\tibullet();\n\t}\n\tif(il1 == 1 && il2 == 2 && il3 == 3 && il4 == 4 && il5 == 5 && il6 == 6 && il7 == 7 && il8 == 8){\n\t\texit(0);\n\t}\n}\n\nvoid display(void){\n\tglClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n\tInv i;\n\tUnit u;\n\tBullet b;\n\tIbullet ib;\n\ti.copy();\n\tu.unit();\n\tb.bullet();\n\tib.shot();\n\tglutSwapBuffers();\n}\n\nvoid Idle() {\n\tglutPostRedisplay();\n}\n\nvoid keyboard(unsigned char key, int x, int y){\n\tswitch(key){\n\t\tcase ' ': bull = 3;\t\t\t\t \t//[ ]\u3092\u62bc\u3059\u3068\u5f3e\u3092\u767a\u5c04\u3059\u308b\n\t\t\tglutPostRedisplay();\n    \t\tbreak;\n    }\n}\n\nvoid Skey(int key, int x, int y){\n\tswitch(key){\n\t\tcase GLUT_KEY_LEFT: uxm = 2;\t\t//[\u2190]\u3092\u62bc\u3059\u3068\u5de6\u306b\u52d5\u304f\n\t\t\tglutPostRedisplay();\n\t\t\tbreak;\n\t\tcase GLUT_KEY_RIGHT: uxm = 1;\t\t//[\u2192]\u3092\u62bc\u3059\u3068\u53f3\u306b\u52d5\u304f\n\t\t\tglutPostRedisplay();\n\t\t\tbreak;\n\t}\n}\n\nvoid Supkey(int key, int x, int y){\n\tswitch(key){\n\t\tcase GLUT_KEY_LEFT: uxm = 0;\t\t//[\u2190]\u3092\u96e2\u3059\u3068\u6b62\u307e\u308b\n\t\t\tglutPostRedisplay();\n\t\t\tbreak;\n\t\tcase GLUT_KEY_RIGHT: uxm = 0;\t\t//[\u2192]\u3092\u96e2\u3059\u3068\u6b62\u307e\u308b\n\t\t\tglutPostRedisplay();\n\t\t\tbreak;\n\t}\n}\n\nvoid Init(){\n\tglClearColor(0.0, 0.0, 0.0, 1.0);\n\tglOrtho(0, WIDTH, HEIGHT, 0, -1, 1);\n}\n\nint main(int argc, char *argv[]){\n\tglutInitWindowSize(WIDTH, HEIGHT);\n\tglutInit(&argc, argv);\n\tglutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE);\n\tglutCreateWindow(\"test\");\n\tglutDisplayFunc(display);\n\tglutKeyboardFunc(keyboard);\n\tglutSpecialFunc(Skey);\n\tglutSpecialUpFunc(Supkey);\n\tglutIdleFunc(Idle);\n\tInit();\n\tglutMainLoop();\n\treturn 0;\n}\n\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-20 12.15.48.png](https://qiita-image-store.s3.amazonaws.com/0/121174/ebdb0b64-f9e4-6a6d-6932-bd762f1f9cf7.png)\n\n\u4eca\u5ea6\u306fSE\u3084BGM\u3001\u30b9\u30b3\u30a2\u3001\u6b8b\u6a5f\u306a\u3069\u3082\u5165\u308c\u3066\u307f\u305f\u3044\u3067\u3059\u3002 :satisfied: \n"}