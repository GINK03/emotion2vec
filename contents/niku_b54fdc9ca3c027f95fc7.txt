{"context": " More than 1 year has passed since last update.http://www.phoenixframework.org/v0.8.0/docs/overview \u3092\u7ffb\u8a33\u3057\u307e\u3057\u305f\uff0e\n\u7ffb\u8a33\u306e\u8aa4\u308a\u306a\u3069\u3042\u308c\u3070\u3054\u6307\u6458\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\uff0e\n\n\nPhoenix is a web development framework written in Elixir which implements the server-side MVC pattern. If you've ever used a similar framework, say Ruby on Rails or Python's Django, many of the concepts will be familiar to you. Phoenix is not, however, simply a Rails clone. It aims to have the best of both worlds, high developer productivity and high application performance. Phoenix also has some interesting new twists, channels for managing Websockets, pre-compiled templates and the potential for alternative architectures which may make services more manageable from the very beginning of your project.\n\nPhoenix \u306f Elixir \u3067\u66f8\u304b\u308c\u305f\uff0c\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9 MVC \u30d1\u30bf\u30fc\u30f3\u3067\u5b9f\u88c5\u3057\u305f Web \u958b\u767a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\uff0e\n\u3082\u3057 Ruby on Rails \u3084 Python \u306e Django \u3068\u3044\u3063\u305f\uff0c\u3053\u308c\u3068\u4f3c\u3066\u3044\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u3042\u308c\u3070\uff0c\u591a\u304f\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3042\u306a\u305f\u306b\u99b4\u67d3\u307f\u306e\u3042\u308b\u3082\u306e\u3067\u3057\u3087\u3046\uff0e\nPhoenix \u306f\u3057\u304b\u3057\uff0c\u5358\u306a\u308b Rails \u306e\u30af\u30ed\u30fc\u30f3\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\n\u9ad8\u3044\u751f\u7523\u6027\u3068\u9ad8\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\uff0c\u4e21\u65b9\u306e\u9577\u6240\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\uff0e\nPhoenix \u306f\u3044\u304f\u3064\u304b\u9762\u767d\u3044\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0eWebsockets \u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e channnel\uff0c\u30d7\u30ea\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff0c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5f53\u521d\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308a\u3084\u3059\u304f\uff0c\u7ba1\u7406\u3057\u3084\u3059\u304f\u306a\u308b\uff0c\u65e2\u5b58\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u4ee3\u66ff\u3068\u306a\u308b\u53ef\u80fd\u6027\u3092\u79d8\u3081\u3066\u3044\u307e\u3059\uff0e\n\nIf you are already familiar with Elixir, great! If not, there are a number of places you can go to learn. You might want to read through the Elixir guides first. You might also want to look through any of the books, blogs or videos listed in the Resources Guide.\n\n\u3082\u3057\u65e2\u306b Elixir \u306b\u6163\u308c\u3066\u3044\u308b\u306a\u3089\uff0c\u3059\u3070\u3089\u3057\u3044\u3053\u3068\u3067\u3059\uff01\n\u3082\u3057\u305d\u3046\u3067\u306f\u306a\u3044\u306a\u3089\uff0c\u5b66\u3079\u308b\u5834\u6240\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\uff0e\n\u6700\u521d\u306b Elixir guides \u3092\u901a\u3057\u3066\u8aad\u3080\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0cResources Guide \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u66f8\u7c4d\uff0c\u30d6\u30ed\u30b0\uff0c\u30d3\u30c7\u30aa\u306e\u3044\u305a\u308c\u304b\u306b\u76ee\u3092\u901a\u3059\u3068\u3088\u3044\u3067\u3057\u3087\u3046\uff0e\n\nThe aim of this introductory guide is to present a brief, high level overview of Phoenix, the parts that make it up, and the layers underneath that support it.\n\n\u3053\u306e\u5165\u9580\u30ac\u30a4\u30c9\u3067\u306f\uff0cPhoenix \u306e\u5927\u307e\u304b\u306a\u6982\u8981\u3068\uff0c\u305d\u308c\u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u306e\u90e8\u54c1\uff0c\u968e\u5c64\u3092\u7c21\u6f54\u306b\u793a\u3057\u307e\u3059\uff0e\n\nPhoenix is actually the top layer of a multi-layer system designed to be modular and flexible. The other layers are the Elixir middleware project, Plug, and the Erlang web server, Cowboy. Plug and Cowboy are covered in the next sections of this guide.\n\n\u5b9f\u969b\u306e\u3068\u3053\u308d Phoenix \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3068\u67d4\u8edf\u6027\u306e\u5411\u4e0a\u3092\u76ee\u7684\u306b\u30c7\u30b6\u30a4\u30f3\u3055\u308c\u305f\u8907\u6570\u306e\u968e\u5c64\u306e\u4e0a\u306b\u306a\u308a\u305f\u3063\u3066\u3044\u307e\u3059\uff0e\nPhoenix \u3068\u5225\u306e\u968e\u5c64\u3068\u306f Elixir \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b Plug\uff0cErlang \u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u3042\u308b Cowboy \u3067\u3059\uff0e\nPlug \u3068 Cowboy \u306b\u3064\u3044\u3066\u306f\u3053\u306e\u30ac\u30a4\u30c9\u306e\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u8aac\u660e\u3057\u307e\u3059\uff0e\n\nPhoenix is made up of a number of distinct parts, each with its own purpose and role to play in building a web application. We will cover them all in depth throughout these guides, but here's a quick breakdown.\n\nPhoenix \u306f\uff0c\u500b\u3005\u306e\u76ee\u7684\u3092\u6301\u3063\u305f\u72ec\u7acb\u3057\u305f\u90e8\u54c1\u3067\u69cb\u6210\u3055\u308c\u3066\u304a\u308a\uff0c\u305d\u308c\u305e\u308c\u304c web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9\u306e\u4e2d\u3067\u5f79\u5272\u3092\u306f\u305f\u3059\u3053\u3068\u3067\u7d44\u307f\u3042\u3052\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\n\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u306f\u5f8c\u307b\u3069\u3053\u306e\u30ac\u30a4\u30c9\u3067\u6398\u308a\u4e0b\u3052\u307e\u3059\u304c\uff0c\u3053\u3053\u3067\u306f\u7c21\u5358\u306b\u5206\u985e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\nThe Router\n\nparses incoming requests and dispatches to the correct controller/action, passing parameters as needed\nprovides helpers to generate route paths or urls to resources\n\n\nThe Router\n\n\u6765\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3066\uff0c\u6b63\u3057\u3044\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc/\u30a2\u30af\u30b7\u30e7\u30f3\u3078\u3068\u9001\u308a\u307e\u3059\uff0e\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3082\u6e21\u3057\u307e\u3059\n\u30d1\u30b9\u3084 url \u3092\u30ea\u30bd\u30fc\u30b9\u3078\u3068\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\n\n\nThe Endpoint\n\nhandles all aspects of requests up until the beginning of our applications\n\n\nThe Endpoint\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u307e\u3067\u306b\uff0c\u5168\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3044\u3066\u8208\u5473\u306e\u3042\u308b\u90e8\u5206\u3092\u6271\u3044\u307e\u3059\n\n\nControllers\n\nprovide functions called actions to handle requests\nActions\n\n\nprepare data and pass it into views\ninvoke rendering via views\nperform redirects\n\n\n\n\nControllers\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6271\u3046\u305f\u3081\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u304b\u3089\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u307e\u3059\nActions\n\n\n\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066 View \u306b\u6e21\u3057\u307e\u3059\nview \u3092\u901a\u3057\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\n\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\n\n\n\n\nViews\n\nrender templates\ndefine helper functions, available in templates, to decorate raw data\n\n\nViews\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\n\u751f\u306e\u30c7\u30fc\u30bf\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u305f\u3081\uff0c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u3067\u4f7f\u3048\u308b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\n\n\nTemplates\n\nare what they sound like :)\n\n\nTemplates\n\n\u540d\u306f\u4f53\u3092\u8868\u3057\u307e\u3059 :)\n\n\nChannels\n\nmanage sockets\nare roughly analogous to controllers except that they are bi-directional and persistent\n\n\nChannels\n\nsocket \u3092\u7ba1\u7406\u3057\u307e\u3059\n\u53cc\u65b9\u5411\u901a\u4fe1\u304c\u3067\u304d\u3066\uff0c\u305a\u3063\u3068\u7e4b\u3063\u3066\u3044\u308b\uff0e\u3068\u3044\u3046\u3053\u3068\u3092\u9664\u3051\u3070\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3068\u4f3c\u3066\u3044\u307e\u3059\n\n\nSockets\n\nare multiplexed, persistent connections\n\n\nSockets\n\n\u3068\u306f\uff0c\u591a\u91cd\u5316\u3055\u308c\u305f\u6301\u7d9a\u7684\u306a\u63a5\u7d9a\u306e\u3053\u3068\u3067\u3059\n\n\nTopics\n\nserve as a PubSub broadcast layer\n\n\nTopics\n\nPubSub \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u5c64\u3092\u63d0\u4f9b\u3057\u307e\u3059\n\n\nPlug\n\nPlug is Elixir's middleware layer. Conceptually, it shares a lot with other middleware layers like Rack for Ruby or WSGI for Python. Plugs are reusable modules that share the same very small, very regular public api. They provide discreet behaviors - like request header parsing or logging. Because the Plug api is so consistent, they can be stacked and executed in a set order, like a pipeline. They can also be re-used within a project or across projects.\n\nPlug \u306f Elixir \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u5c64\u3067\u3059\uff0e\u6982\u5ff5\u3068\u3057\u3066\u306f\uff0cRuby \u306e Rack\uff0cPython \u306e WSGI \u306e\u3088\u3046\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u5171\u901a\u3057\u3066\u3044\u307e\u3059\uff0e\nPlugs \u306f\u3068\u3066\u3082\u5c0f\u3055\u304f\uff0c\u3068\u3066\u3082\u4e00\u822c\u7684\u306a\u516c\u958bAPI\u3092\u3082\u3063\u305f\u518d\u5229\u7528\u53ef\u80fd\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\uff0e\n\u305d\u308c\u3089\u306f\u63a7\u3048\u3081\u306a\u632f\u821e\u3044\u3092\u63d0\u4f9b\u3057\u307e\u3059 - \u4f8b\u3048\u3070\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u30fc\u3092\u30d1\u30fc\u30b9\u3057\u305f\u308a\uff0c\u30ed\u30b0\u3092\u53d6\u308b\u3068\u3044\u3063\u305f\u3053\u3068\u3067\u3059\uff0e\n\u3067\u3059\u304b\u3089\uff0cPlug \u306e API \u306f\u3068\u3066\u3082\u5b89\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u305d\u308c\u3089\u306f\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307f\u4e0a\u3052\u3089\u308c\uff0c\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u3088\u3046\u306b\u9806\u756a\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\n\u305d\u308c\u3089\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u3084\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u307e\u305f\u304c\u3063\u3066\u518d\u5229\u7528\u3067\u304d\u307e\u3059\uff0e\n\nPlugs can be written to handle almost anything, from authentication to parameter pre-processing, and even rendering.\n\nPlugs \u306f\u8a8d\u8a3c\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u524d\u51e6\u7406\uff0c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u3055\u3048\u3082\uff0c\u307b\u3068\u3093\u3069\u5168\u3066\u306e\u3053\u3068\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\uff0e\n\nPhoenix takes great advantage of Plug in general - the router and controllers especially so.\n\nPhoenix \u306f Plug \u306b\u5099\u308f\u3063\u3066\u3044\u308b\u305d\u306e\u3059\u3070\u3089\u3057\u3044\u5229\u70b9\u3092\u5f97\u3066\u3044\u307e\u3059 - router \u3068 controllers \u3067\u306f\u7279\u306b\u305d\u3046\u3067\u3059\uff0e\n\nOne of the most important things about Plug, is that it provides adapters to HTTP servers which will ultimately deliver application content to your users. Currently, Plug only provides an adapter to Cowboy, which we will talk about next, but there are plans to provide adapters for other servers in the future.\n\nPlug \u3067\u6700\u3082\u5927\u4e8b\u306a\u3053\u3068\u306e\u4e00\u3064\u306b\uff0c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u3092\u6700\u7d42\u7684\u306b\u30e6\u30fc\u30b6\u30fc\u3078\u3068\u5c4a\u3051\u308b\u305f\u3081\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\n\u73fe\u5728\uff0cPlug \u306f Cowboy \u3078\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u307f\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e\u4eca\u5f8c\u3078\u306e\u8a71\u3092\u3059\u308b\u3068\uff0c\u4ed6\u306e\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u63d0\u4f9b\u3059\u308b\u4e88\u5b9a\u304c\u3042\u308a\u307e\u3059\uff0e\n\nLinks to more in-depth information on Plug can be found in the Resources Guide.\n\nPlug \u306e\u3082\u3063\u3068\u8a73\u3057\u3044\u60c5\u5831\u3078\u306e\u30ea\u30f3\u30af\u306f Resources Guide \u306b\u3042\u308a\u307e\u3059\uff0e\n\nCowboy\n\nCowboy is an HTTP server written in Erlang by Lo\u00efc Hoguin of 99s. Cowboy is built in a modular way on top of Ranch, Bullet, and Sheriff. This is how 99s describes them.\n\nCowboy \u306f 99s \u306e Lo\u00efc Hoguin \u306b\u3088\u3063\u3066 Erlang \u3067\u66f8\u304b\u308c\u3066 HTTP \u30b5\u30fc\u30d0\u30fc\u3067\u3059\uff0e\nCowboy \u306f \u7d44\u7acb\u5f0f\u3067 Ranch, Bullet, Sheriff \u3068\u3044\u3063\u305f\u3082\u306e\u306e\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306f 99s \u304c\u66f8\u3044\u305f\u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\u3067\u3059\uff0e\n\n\nCowboy is a small, fast, modular HTTP server supporting Websockets, SPDY and more.\nRanch is a socket acceptor pool for TCP protocols. It is also a standalone library for building networked applications.\nBullet is a simple, reliable, efficient streaming library.\nSheriff uses parse transforms for type based validation. Sheriff also validates data dynamically using Erlang's type system with no extra code required.\n\n\n\nCowboy \u306f\u5c0f\u3055\u304f\uff0c\u901f\u304f\uff0c\u7d44\u7acb\u5f0f\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u3067 Websockets \u3084 SPDY \u306a\u3069\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e\nRanch \u306f TCP \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u305f\u3081\u306e\u30bd\u30b1\u30c3\u30c8\u53d7\u3051\u5165\u308c\u30d7\u30fc\u30eb\u3067\u3059\uff0e\u3053\u308c\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u72ec\u7acb\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3082\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\nBullet \u306f\u7c21\u6f54\u3067\uff0c\u4fe1\u983c\u6027\u306e\u9ad8\u3044\uff0c\u52b9\u679c\u7684\u306a\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\nSheriff \u306f\u578b\u30d9\u30fc\u30b9\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b parse transform \u3092\u4f7f\u3044\u307e\u3059\uff0eSheriff \u306f\u5916\u90e8\u306e\u8ffd\u52a0\u30b3\u30fc\u30c9\u3092\u5fc5\u8981\u3068\u305b\u305a\u306b Erlang \u306e\u578b\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3057\u307e\u3059\uff0e\n\n\nCowboy has fantastic documentation. The Guides are especially helpful. Learning more about Cowboy will surely help you to understand Phoenix more fully.\n\nCowboy \u306b\u306f\u7d20\u6674\u3057\u3044\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\uff0e\u7279\u306b Guides \u304c\u305f\u3081\u306b\u306a\u308a\u307e\u3059\uff0e\nCowboy \u306b\u3064\u3044\u3066\u5b66\u3076\u3053\u3068\u306f\u304d\u3063\u3068 Phoenix \u3092\u3082\u3063\u3068\u77e5\u308b\u305f\u3081\u306e\u52a9\u3051\u306b\u306a\u308b\u3067\u3057\u3087\u3046\uff0e\n\nCowboy has its own section of links in the Resources Guide.\n\nResources Guide \u306e\u4e2d\u306b Cowboy \u3078\u306e\u30ea\u30f3\u30af\u304c\u3042\u308a\u307e\u3059\uff0e\nhttp://www.phoenixframework.org/v0.8.0/docs/overview \u3092\u7ffb\u8a33\u3057\u307e\u3057\u305f\uff0e\n\u7ffb\u8a33\u306e\u8aa4\u308a\u306a\u3069\u3042\u308c\u3070\u3054\u6307\u6458\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\uff0e\n\n----\n\n> Phoenix is a web development framework written in Elixir which implements the server-side MVC pattern. If you've ever used a similar framework, say Ruby on Rails or Python's Django, many of the concepts will be familiar to you. Phoenix is not, however, simply a Rails clone. It aims to have the best of both worlds, high developer productivity and high application performance. Phoenix also has some interesting new twists, channels for managing Websockets, pre-compiled templates and the potential for alternative architectures which may make services more manageable from the very beginning of your project.\n\nPhoenix \u306f Elixir \u3067\u66f8\u304b\u308c\u305f\uff0c\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9 MVC \u30d1\u30bf\u30fc\u30f3\u3067\u5b9f\u88c5\u3057\u305f Web \u958b\u767a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\uff0e\n\u3082\u3057 Ruby on Rails \u3084 Python \u306e Django \u3068\u3044\u3063\u305f\uff0c\u3053\u308c\u3068\u4f3c\u3066\u3044\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u3042\u308c\u3070\uff0c\u591a\u304f\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3042\u306a\u305f\u306b\u99b4\u67d3\u307f\u306e\u3042\u308b\u3082\u306e\u3067\u3057\u3087\u3046\uff0e\nPhoenix \u306f\u3057\u304b\u3057\uff0c\u5358\u306a\u308b Rails \u306e\u30af\u30ed\u30fc\u30f3\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\n\u9ad8\u3044\u751f\u7523\u6027\u3068\u9ad8\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\uff0c\u4e21\u65b9\u306e\u9577\u6240\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\uff0e\nPhoenix \u306f\u3044\u304f\u3064\u304b\u9762\u767d\u3044\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0eWebsockets \u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e channnel\uff0c\u30d7\u30ea\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff0c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5f53\u521d\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308a\u3084\u3059\u304f\uff0c\u7ba1\u7406\u3057\u3084\u3059\u304f\u306a\u308b\uff0c\u65e2\u5b58\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u4ee3\u66ff\u3068\u306a\u308b\u53ef\u80fd\u6027\u3092\u79d8\u3081\u3066\u3044\u307e\u3059\uff0e\n\n> If you are already familiar with Elixir, great! If not, there are a number of places you can go to learn. You might want to read through the Elixir guides first. You might also want to look through any of the books, blogs or videos listed in the Resources Guide.\n\n\u3082\u3057\u65e2\u306b Elixir \u306b\u6163\u308c\u3066\u3044\u308b\u306a\u3089\uff0c\u3059\u3070\u3089\u3057\u3044\u3053\u3068\u3067\u3059\uff01\n\u3082\u3057\u305d\u3046\u3067\u306f\u306a\u3044\u306a\u3089\uff0c\u5b66\u3079\u308b\u5834\u6240\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\uff0e\n\u6700\u521d\u306b [Elixir guides](http://elixir-lang.org/getting_started/1.html) \u3092\u901a\u3057\u3066\u8aad\u3080\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0c[Resources Guide](http://www.phoenixframework.org/docs/resources) \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u66f8\u7c4d\uff0c\u30d6\u30ed\u30b0\uff0c\u30d3\u30c7\u30aa\u306e\u3044\u305a\u308c\u304b\u306b\u76ee\u3092\u901a\u3059\u3068\u3088\u3044\u3067\u3057\u3087\u3046\uff0e\n\n> The aim of this introductory guide is to present a brief, high level overview of Phoenix, the parts that make it up, and the layers underneath that support it.\n\n\u3053\u306e\u5165\u9580\u30ac\u30a4\u30c9\u3067\u306f\uff0cPhoenix \u306e\u5927\u307e\u304b\u306a\u6982\u8981\u3068\uff0c\u305d\u308c\u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u306e\u90e8\u54c1\uff0c\u968e\u5c64\u3092\u7c21\u6f54\u306b\u793a\u3057\u307e\u3059\uff0e\n\n> Phoenix is actually the top layer of a multi-layer system designed to be modular and flexible. The other layers are the Elixir middleware project, Plug, and the Erlang web server, Cowboy. Plug and Cowboy are covered in the next sections of this guide.\n\n\u5b9f\u969b\u306e\u3068\u3053\u308d Phoenix \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3068\u67d4\u8edf\u6027\u306e\u5411\u4e0a\u3092\u76ee\u7684\u306b\u30c7\u30b6\u30a4\u30f3\u3055\u308c\u305f\u8907\u6570\u306e\u968e\u5c64\u306e\u4e0a\u306b\u306a\u308a\u305f\u3063\u3066\u3044\u307e\u3059\uff0e\nPhoenix \u3068\u5225\u306e\u968e\u5c64\u3068\u306f Elixir \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b Plug\uff0cErlang \u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u3042\u308b Cowboy \u3067\u3059\uff0e\nPlug \u3068 Cowboy \u306b\u3064\u3044\u3066\u306f\u3053\u306e\u30ac\u30a4\u30c9\u306e\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u8aac\u660e\u3057\u307e\u3059\uff0e\n\n> Phoenix is made up of a number of distinct parts, each with its own purpose and role to play in building a web application. We will cover them all in depth throughout these guides, but here's a quick breakdown.\n\nPhoenix \u306f\uff0c\u500b\u3005\u306e\u76ee\u7684\u3092\u6301\u3063\u305f\u72ec\u7acb\u3057\u305f\u90e8\u54c1\u3067\u69cb\u6210\u3055\u308c\u3066\u304a\u308a\uff0c\u305d\u308c\u305e\u308c\u304c web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9\u306e\u4e2d\u3067\u5f79\u5272\u3092\u306f\u305f\u3059\u3053\u3068\u3067\u7d44\u307f\u3042\u3052\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\n\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u306f\u5f8c\u307b\u3069\u3053\u306e\u30ac\u30a4\u30c9\u3067\u6398\u308a\u4e0b\u3052\u307e\u3059\u304c\uff0c\u3053\u3053\u3067\u306f\u7c21\u5358\u306b\u5206\u985e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n> The Router\n>\n> - parses incoming requests and dispatches to the correct controller/action, passing parameters as needed\n> - provides helpers to generate route paths or urls to resources\n\nThe Router\n\n- \u6765\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3066\uff0c\u6b63\u3057\u3044\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc/\u30a2\u30af\u30b7\u30e7\u30f3\u3078\u3068\u9001\u308a\u307e\u3059\uff0e\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3082\u6e21\u3057\u307e\u3059\n- \u30d1\u30b9\u3084 url \u3092\u30ea\u30bd\u30fc\u30b9\u3078\u3068\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\n\n> The Endpoint\n>\n> - handles all aspects of requests up until the beginning of our applications\n\nThe Endpoint\n\n- \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u307e\u3067\u306b\uff0c\u5168\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3044\u3066\u8208\u5473\u306e\u3042\u308b\u90e8\u5206\u3092\u6271\u3044\u307e\u3059\n\n> Controllers\n>\n> - provide functions called actions to handle requests\n> - Actions\n>   - prepare data and pass it into views\n>   - invoke rendering via views\n>   - perform redirects\n\nControllers\n\n- \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6271\u3046\u305f\u3081\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u304b\u3089\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u307e\u3059\n- Actions\n  - \u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066 View \u306b\u6e21\u3057\u307e\u3059\n  - view \u3092\u901a\u3057\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\n  - \u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\n\n> Views\n>\n> - render templates\n> - define helper functions, available in templates, to decorate raw data\n\nViews\n\n- \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\n- \u751f\u306e\u30c7\u30fc\u30bf\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u305f\u3081\uff0c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u3067\u4f7f\u3048\u308b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\n\n> Templates\n>\n> - are what they sound like :)\n\nTemplates\n\n- \u540d\u306f\u4f53\u3092\u8868\u3057\u307e\u3059 :)\n\n> Channels\n>\n> - manage sockets\n> - are roughly analogous to controllers except that they are bi-directional and persistent\n\nChannels\n\n- socket \u3092\u7ba1\u7406\u3057\u307e\u3059\n- \u53cc\u65b9\u5411\u901a\u4fe1\u304c\u3067\u304d\u3066\uff0c\u305a\u3063\u3068\u7e4b\u3063\u3066\u3044\u308b\uff0e\u3068\u3044\u3046\u3053\u3068\u3092\u9664\u3051\u3070\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3068\u4f3c\u3066\u3044\u307e\u3059\n\n> Sockets\n>\n> - are multiplexed, persistent connections\n\nSockets\n\n- \u3068\u306f\uff0c\u591a\u91cd\u5316\u3055\u308c\u305f\u6301\u7d9a\u7684\u306a\u63a5\u7d9a\u306e\u3053\u3068\u3067\u3059\n\n> Topics\n>\n> - serve as a PubSub broadcast layer\n\nTopics\n\n- PubSub \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u5c64\u3092\u63d0\u4f9b\u3057\u307e\u3059\n\n## Plug\n\n> Plug is Elixir's middleware layer. Conceptually, it shares a lot with other middleware layers like Rack for Ruby or WSGI for Python. Plugs are reusable modules that share the same very small, very regular public api. They provide discreet behaviors - like request header parsing or logging. Because the Plug api is so consistent, they can be stacked and executed in a set order, like a pipeline. They can also be re-used within a project or across projects.\n\n[Plug](http://hexdocs.pm/plug/) \u306f Elixir \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u5c64\u3067\u3059\uff0e\u6982\u5ff5\u3068\u3057\u3066\u306f\uff0cRuby \u306e Rack\uff0cPython \u306e WSGI \u306e\u3088\u3046\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u5171\u901a\u3057\u3066\u3044\u307e\u3059\uff0e\nPlugs \u306f\u3068\u3066\u3082\u5c0f\u3055\u304f\uff0c\u3068\u3066\u3082\u4e00\u822c\u7684\u306a\u516c\u958bAPI\u3092\u3082\u3063\u305f\u518d\u5229\u7528\u53ef\u80fd\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\uff0e\n\u305d\u308c\u3089\u306f\u63a7\u3048\u3081\u306a\u632f\u821e\u3044\u3092\u63d0\u4f9b\u3057\u307e\u3059 - \u4f8b\u3048\u3070\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u30fc\u3092\u30d1\u30fc\u30b9\u3057\u305f\u308a\uff0c\u30ed\u30b0\u3092\u53d6\u308b\u3068\u3044\u3063\u305f\u3053\u3068\u3067\u3059\uff0e\n\u3067\u3059\u304b\u3089\uff0cPlug \u306e API \u306f\u3068\u3066\u3082\u5b89\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u305d\u308c\u3089\u306f\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307f\u4e0a\u3052\u3089\u308c\uff0c\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u3088\u3046\u306b\u9806\u756a\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\n\u305d\u308c\u3089\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u3084\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u307e\u305f\u304c\u3063\u3066\u518d\u5229\u7528\u3067\u304d\u307e\u3059\uff0e\n\n> Plugs can be written to handle almost anything, from authentication to parameter pre-processing, and even rendering.\n\nPlugs \u306f\u8a8d\u8a3c\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u524d\u51e6\u7406\uff0c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u3055\u3048\u3082\uff0c\u307b\u3068\u3093\u3069\u5168\u3066\u306e\u3053\u3068\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\uff0e\n\n> Phoenix takes great advantage of Plug in general - the router and controllers especially so.\n\nPhoenix \u306f Plug \u306b\u5099\u308f\u3063\u3066\u3044\u308b\u305d\u306e\u3059\u3070\u3089\u3057\u3044\u5229\u70b9\u3092\u5f97\u3066\u3044\u307e\u3059 - router \u3068 controllers \u3067\u306f\u7279\u306b\u305d\u3046\u3067\u3059\uff0e\n\n> One of the most important things about Plug, is that it provides adapters to HTTP servers which will ultimately deliver application content to your users. Currently, Plug only provides an adapter to Cowboy, which we will talk about next, but there are plans to provide adapters for other servers in the future.\n\nPlug \u3067\u6700\u3082\u5927\u4e8b\u306a\u3053\u3068\u306e\u4e00\u3064\u306b\uff0c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u3092\u6700\u7d42\u7684\u306b\u30e6\u30fc\u30b6\u30fc\u3078\u3068\u5c4a\u3051\u308b\u305f\u3081\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\n\u73fe\u5728\uff0cPlug \u306f Cowboy \u3078\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u307f\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e\u4eca\u5f8c\u3078\u306e\u8a71\u3092\u3059\u308b\u3068\uff0c\u4ed6\u306e\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u63d0\u4f9b\u3059\u308b\u4e88\u5b9a\u304c\u3042\u308a\u307e\u3059\uff0e\n\n> Links to more in-depth information on Plug can be found in the Resources Guide.\n\nPlug \u306e\u3082\u3063\u3068\u8a73\u3057\u3044\u60c5\u5831\u3078\u306e\u30ea\u30f3\u30af\u306f [Resources Guide](http://www.phoenixframework.org/docs/resources) \u306b\u3042\u308a\u307e\u3059\uff0e\n\n## Cowboy\n\n> Cowboy is an HTTP server written in Erlang by Lo\u00efc Hoguin of 99s. Cowboy is built in a modular way on top of Ranch, Bullet, and Sheriff. This is how 99s describes them.\n\nCowboy \u306f [99s](http://ninenines.eu/) \u306e Lo\u00efc Hoguin \u306b\u3088\u3063\u3066 Erlang \u3067\u66f8\u304b\u308c\u3066 HTTP \u30b5\u30fc\u30d0\u30fc\u3067\u3059\uff0e\nCowboy \u306f \u7d44\u7acb\u5f0f\u3067 Ranch, Bullet, Sheriff \u3068\u3044\u3063\u305f\u3082\u306e\u306e\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306f 99s \u304c\u66f8\u3044\u305f\u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\u3067\u3059\uff0e\n\n> - Cowboy is a small, fast, modular HTTP server supporting Websockets, SPDY and more.\n> - Ranch is a socket acceptor pool for TCP protocols. It is also a standalone library for building networked applications.\n> - Bullet is a simple, reliable, efficient streaming library.\n> - Sheriff uses parse transforms for type based validation. Sheriff also validates data dynamically using Erlang's type system with no extra code required.\n\n- Cowboy \u306f\u5c0f\u3055\u304f\uff0c\u901f\u304f\uff0c\u7d44\u7acb\u5f0f\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u3067 Websockets \u3084 SPDY \u306a\u3069\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e\n- Ranch \u306f TCP \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u305f\u3081\u306e\u30bd\u30b1\u30c3\u30c8\u53d7\u3051\u5165\u308c\u30d7\u30fc\u30eb\u3067\u3059\uff0e\u3053\u308c\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u72ec\u7acb\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3082\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n- Bullet \u306f\u7c21\u6f54\u3067\uff0c\u4fe1\u983c\u6027\u306e\u9ad8\u3044\uff0c\u52b9\u679c\u7684\u306a\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\n- Sheriff \u306f\u578b\u30d9\u30fc\u30b9\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b parse transform \u3092\u4f7f\u3044\u307e\u3059\uff0eSheriff \u306f\u5916\u90e8\u306e\u8ffd\u52a0\u30b3\u30fc\u30c9\u3092\u5fc5\u8981\u3068\u305b\u305a\u306b Erlang \u306e\u578b\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3057\u307e\u3059\uff0e\n\n> Cowboy has fantastic documentation. The Guides are especially helpful. Learning more about Cowboy will surely help you to understand Phoenix more fully.\n\nCowboy \u306b\u306f\u7d20\u6674\u3057\u3044\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\uff0e\u7279\u306b [Guides](http://ninenines.eu/docs/en/cowboy/HEAD/guide/) \u304c\u305f\u3081\u306b\u306a\u308a\u307e\u3059\uff0e\nCowboy \u306b\u3064\u3044\u3066\u5b66\u3076\u3053\u3068\u306f\u304d\u3063\u3068 Phoenix \u3092\u3082\u3063\u3068\u77e5\u308b\u305f\u3081\u306e\u52a9\u3051\u306b\u306a\u308b\u3067\u3057\u3087\u3046\uff0e\n\n> Cowboy has its own section of links in the Resources Guide.\n\n[Resources Guide](http://www.phoenixframework.org/docs/resources) \u306e\u4e2d\u306b Cowboy \u3078\u306e\u30ea\u30f3\u30af\u304c\u3042\u308a\u307e\u3059\uff0e\n", "tags": ["Phoenix0.8", "Elixir"]}