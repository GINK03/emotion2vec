{"tags": ["iOS", "Xcode", "Swift", "JavaScript", "canvas"], "context": " More than 1 year has passed since last update.WebView+Canvas+JavaScript\u3068\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b\u3001\u5b9f\u9a13\u3092\u884c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u975e\u5e38\u306b\u5927\u96d1\u628a\u306a\u6bd4\u8f03\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u70b9\u306f\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\n\n\u691c\u8a3c\u65b9\u6cd5\n\u2192\u8272\u306e\u3064\u3044\u305f\u6b63\u65b9\u5f62\u3092\u8907\u6570\u753b\u9762\u5185\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u65b9\u5411\u306b\u79fb\u52d5\u3055\u305b\u308b\u3002WebView\u3068\u30cd\u30a4\u30c6\u30a3\u30d6\u3067\u305d\u308c\u305e\u308c\u6b63\u65b9\u5f62\u306e\u6570\u3092\u5909\u5316\u3055\u305b\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u63a8\u79fb\u3092\u6e2c\u5b9a\u3059\u308b\u3002\n\u691c\u8a3c\u74b0\u5883\n\u2192Xcode7.2.1 iPhone6 Plus iOS9.2.1\nWebView+Canvas+JavaScript\u5074\u306e\u5b9f\u88c5\n\u2192Canvas\u3068JavaScript\u306e\u30ed\u30b8\u30c3\u30af\u3092\u542b\u3080index.html\u3092\u30d0\u30f3\u30c9\u30eb\u3057\u3001UIWebView\u3067\u8868\u793a\u3055\u305b\u308b\u300220\u30df\u30ea\u79d2\u9593\u9694\u3067\u3001fillRect\u95a2\u6570\u3092\u7528\u3044\u3066\u8907\u6570\u306e\u6b63\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\u3002WKWebView\u306f\u539f\u56e0\u4e0d\u660e\u306e\u7406\u7531\u306b\u3088\u308a\u30ed\u30b8\u30c3\u30af\u304c\u3046\u307e\u304f\u52d5\u4f5c\u305b\u305a\u3001\u307e\u305f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u305f\u3081\u7528\u3044\u306a\u3044\u3002\n\u30cd\u30a4\u30c6\u30a3\u30d6\u5074\u306e\u5b9f\u88c5\n\u2192UIView\u3067\u8907\u6570\u306e\u9752\u3044\u6b63\u65b9\u5f62\u3092\u4f5c\u308aself.view\u306baddSubView\u3059\u308b\u300220\u30df\u30ea\u79d2\u9593\u9694\u3067\u3001\u6b63\u65b9\u5f62\u306e\u5ea7\u6a19\u3092\u5909\u66f4\u3059\u308b\u3002\n\u7d50\u679c\n\nN\u306f\u6b63\u65b9\u5f62\u306e\u6570\u3067\u3059\u3002\n\n\n\u4e88\u60f3\u901a\u308a\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u65b9\u304c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u4e0a\u3067\u3059\u304c\u3001WebView\u306e\u65b9\u304c\u3069\u3046\u3057\u3088\u3046\u3082\u306a\u3044\u307b\u3069\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u52a3\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\u306a\u304a\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u65b9\u306fN\u6570\u304c\u5927\u304d\u304f\u306a\u308b\u3068CPU\u306e\u4f7f\u7528\u91cf\u304c\u982d\u6253\u3061\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u5206fps\u3092\u843d\u3068\u3057\u3066\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002WebView\u306e\u65b9\u306f\u3001N\u6570\u304c\u5897\u3048\u3066\u3082\u78ba\u8a8d\u3067\u304d\u308b\u7bc4\u56f2\u3067\u306fCPU\u306e\u6d88\u8cbb\u91cf\u306f\u982d\u6253\u3061\u306b\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u305d\u306e\u305f\u3081\u3001N\u6570\u304c\u591a\u3044\u3068iPhone\u304c\u767a\u71b1\u3059\u308b\u306e\u3067\u5c11\u3005\u5371\u967a\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u753b\u50cf\u3092\u7528\u3044\u305f\u308a\u3001\u8272\u6570\u3092\u5897\u3084\u3057\u305f\u308a\u3059\u308b\u3068\u7d50\u679c\u304c\u7570\u306a\u3063\u3066\u304f\u308b\u3068\u306f\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u5927\u96d1\u628a\u306bWebView+Canvas+JavaScript\u3068\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5dee\u304c\u628a\u63e1\u3067\u304d\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nWeb\u306e\u666e\u904d\u6027\u3092\u512a\u5148\u3059\u308b\u306e\u304b\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u512a\u5148\u3059\u308b\u306e\u304b\u5224\u65ad\u3059\u308b\u969b\u306e\u4e00\u52a9\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\nAndroid\u3067\u3082\u540c\u69d8\u306e\u5b9f\u9a13\u3092\u884c\u3063\u3066\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u6a5f\u7a2e\u5dee\u304c\u6fc0\u3057\u305d\u3046\u3067\u3059\u306d\u3002\n\u4ee5\u4e0b\u306b\u3001\u4eca\u56de\u7528\u3044\u305f\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u2192WebView + Canvas + JavaScript\n\nindex.html\n<!DOCTYPE html>\n\n<html>\n<head>\n  <title>-Experiment-</title>\n</head>\n\n<body style=\"padding:0px;margin:0px;\">\n  <canvas id=\"main_canvas\"></canvas>\n  <script type=\"text/javascript\">\n\n  var canvas = document.getElementById(\"main_canvas\");\n  canvas.style.width = window.innerWidth + 'px';\n  canvas.style.height = window.innerHeight + 'px';\n  canvas.style.margin = \"0px\";\n  canvas.style.transform = \"translate3d(0, 0, 0)\";\n  canvas.width = window.innerWidth * window.devicePixelRatio;\n  canvas.height = window.innerHeight * window.devicePixelRatio;\n  var context = canvas.getContext(\"2d\");\n\n  var balls = [];\n  var speed = canvas.width * 0.002;\n  var size = canvas.width * 0.05;\n  for (var i=0; i<1000; i++) {\n    var angle = Math.PI*2*Math.random();\n    var ball = {\n      size:size,\n      position:{x:canvas.width/2, y:canvas.height/2},\n      speed:{x:speed*Math.cos(angle), y:speed*Math.sin(angle)},\n      border:{left:size/2, right:canvas.width-size/2, top:size/2, bottom:canvas.height-size/2},\n    };\n    balls.push(ball);\n  }\n\n  context.fillStyle = \"#0000ff\";\n\n  var timer = setInterval(function(){\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (var i=0; i<balls.length; i++){\n      var ball = balls[i];\n      ball.position.x += ball.speed.x;\n      if (ball.position.x < ball.border.left) {\n        ball.position.x = ball.border.left;\n        ball.speed.x = Math.abs(ball.speed.x);\n      };\n      if (ball.position.x > ball.border.right) {\n        ball.position.x = ball.border.right;\n        ball.speed.x = -Math.abs(ball.speed.x);\n      };\n      ball.position.y += ball.speed.y;\n      if (ball.position.y < ball.border.top) {\n        ball.position.y = ball.border.top;\n        ball.speed.y = Math.abs(ball.speed.y);\n      };\n      if (ball.position.y > ball.border.bottom) {\n        ball.position.y = ball.border.bottom;\n        ball.speed.y = -Math.abs(ball.speed.y);\n      };\n\n      context.fillRect(\n        Math.round(ball.position.x-ball.size/2),\n        Math.round(ball.position.y-ball.size/2),\n        Math.round(ball.size),\n        Math.round(ball.size)\n      );\n    }\n  } , 20);\n\n</script>\n</body>\n</html>\n\n\n\nViewController.swift\nimport UIKit\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n\n        let url = NSBundle.mainBundle().pathForResource(\"index\", ofType: \"html\");\n        let reqURL = NSURL(string: url!)\n        let req = NSURLRequest(URL: reqURL!)\n        let webView = UIWebView(frame: CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height))\n        webView.backgroundColor = UIColor.yellowColor()\n        self.view.addSubview(webView)\n        webView.loadRequest(req)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n\n\n\u2192\u30cd\u30a4\u30c6\u30a3\u30d6\n\nViewController.swift\nimport UIKit\n\nclass ViewController: UIViewController {\n\n    var balls:[Ball] = []\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n\n        let speed = self.view.frame.size.width * 0.002\n        let size = self.view.frame.size.width * 0.05\n        for var i=0; i<1000; ++i{\n            let ball = Ball()\n            ball.frame = CGRectMake(0, 0, size, size)\n            ball.center = self.view.center\n            let rand = CGFloat(arc4random_uniform(UINT32_MAX)) / CGFloat(UINT32_MAX)\n            let angle = CGFloat(M_PI*2)*rand\n            ball.speed = CGVectorMake(speed*cos(angle), speed*sin(angle))\n            ball.border = Border(\n                left:size/2,\n                right:self.view.frame.size.width-size/2,\n                top:size/2,\n                bottom:self.view.frame.size.height-size/2\n            )\n            ball.backgroundColor = UIColor.blueColor()\n            self.view.addSubview(ball)\n            balls.append(ball)\n        }\n\n        NSTimer.scheduledTimerWithTimeInterval(\n            0.02,\n            target: self,\n            selector: \"doFrame\",\n            userInfo: nil,\n            repeats: true\n        )\n    }\n\n    func doFrame(){\n        for var i=0; i<balls.count; ++i {\n            let ball = balls[i]\n            ball.center.x += ball.speed!.dx\n            if ball.center.x < ball.border?.left{\n                ball.center.x = ball.border!.left!\n                ball.speed?.dx = abs(ball.speed!.dx)\n            }\n            if ball.center.x > ball.border?.right{\n                ball.center.x = ball.border!.right!\n                ball.speed?.dx = -abs(ball.speed!.dx)\n            }\n            ball.center.y += ball.speed!.dy\n            if ball.center.y < ball.border?.top{\n                ball.center.y = ball.border!.top!\n                ball.speed?.dy = abs(ball.speed!.dy)\n            }\n            if ball.center.y > ball.border?.bottom{\n                ball.center.y = ball.border!.bottom!\n                ball.speed?.dy = -abs(ball.speed!.dy)\n            }\n        }\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n\n\n\nBall.swift\nimport UIKit\n\nclass Ball: UIView {\n    var speed:CGVector?\n    var border:Border?\n}\n\nstruct Border {\n    var left:CGFloat?\n    var right:CGFloat?\n    var top:CGFloat?\n    var bottom:CGFloat?\n}\n\n\nWebView+Canvas+JavaScript\u3068\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b\u3001\u5b9f\u9a13\u3092\u884c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u975e\u5e38\u306b\u5927\u96d1\u628a\u306a\u6bd4\u8f03\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u70b9\u306f\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\n![Simulator Screen Shot 2016.02.29 11.37.23.png](https://qiita-image-store.s3.amazonaws.com/0/35297/72b54ef9-4af5-b1d9-28fb-db6786674f86.png)\n\n\u691c\u8a3c\u65b9\u6cd5\n\u2192\u8272\u306e\u3064\u3044\u305f\u6b63\u65b9\u5f62\u3092\u8907\u6570\u753b\u9762\u5185\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u65b9\u5411\u306b\u79fb\u52d5\u3055\u305b\u308b\u3002WebView\u3068\u30cd\u30a4\u30c6\u30a3\u30d6\u3067\u305d\u308c\u305e\u308c\u6b63\u65b9\u5f62\u306e\u6570\u3092\u5909\u5316\u3055\u305b\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u63a8\u79fb\u3092\u6e2c\u5b9a\u3059\u308b\u3002\n\n\u691c\u8a3c\u74b0\u5883\n\u2192Xcode7.2.1 iPhone6 Plus iOS9.2.1\n\nWebView+Canvas+JavaScript\u5074\u306e\u5b9f\u88c5\n\u2192Canvas\u3068JavaScript\u306e\u30ed\u30b8\u30c3\u30af\u3092\u542b\u3080index.html\u3092\u30d0\u30f3\u30c9\u30eb\u3057\u3001UIWebView\u3067\u8868\u793a\u3055\u305b\u308b\u300220\u30df\u30ea\u79d2\u9593\u9694\u3067\u3001fillRect\u95a2\u6570\u3092\u7528\u3044\u3066\u8907\u6570\u306e\u6b63\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\u3002WKWebView\u306f\u539f\u56e0\u4e0d\u660e\u306e\u7406\u7531\u306b\u3088\u308a\u30ed\u30b8\u30c3\u30af\u304c\u3046\u307e\u304f\u52d5\u4f5c\u305b\u305a\u3001\u307e\u305f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u305f\u3081\u7528\u3044\u306a\u3044\u3002\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u5074\u306e\u5b9f\u88c5\n\u2192UIView\u3067\u8907\u6570\u306e\u9752\u3044\u6b63\u65b9\u5f62\u3092\u4f5c\u308aself.view\u306baddSubView\u3059\u308b\u300220\u30df\u30ea\u79d2\u9593\u9694\u3067\u3001\u6b63\u65b9\u5f62\u306e\u5ea7\u6a19\u3092\u5909\u66f4\u3059\u308b\u3002\n\n\u7d50\u679c\n<img width=\"691\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-29 11.05.36.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/35297/d4fa9bae-c8d7-f1ed-420d-8318e9822ed0.png\">\nN\u306f\u6b63\u65b9\u5f62\u306e\u6570\u3067\u3059\u3002\n<img width=\"411\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-29 11.05.51.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/35297/e8eba6ec-a050-0452-7eed-1d941107909d.png\">\n<img width=\"397\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-29 11.06.01.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/35297/3333e6fb-0b33-a65f-f5fc-83e895ae3689.png\">\n\u4e88\u60f3\u901a\u308a\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u65b9\u304c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u4e0a\u3067\u3059\u304c\u3001WebView\u306e\u65b9\u304c\u3069\u3046\u3057\u3088\u3046\u3082\u306a\u3044\u307b\u3069\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u52a3\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\u306a\u304a\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u65b9\u306fN\u6570\u304c\u5927\u304d\u304f\u306a\u308b\u3068CPU\u306e\u4f7f\u7528\u91cf\u304c\u982d\u6253\u3061\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u5206fps\u3092\u843d\u3068\u3057\u3066\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002WebView\u306e\u65b9\u306f\u3001N\u6570\u304c\u5897\u3048\u3066\u3082\u78ba\u8a8d\u3067\u304d\u308b\u7bc4\u56f2\u3067\u306fCPU\u306e\u6d88\u8cbb\u91cf\u306f\u982d\u6253\u3061\u306b\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u305d\u306e\u305f\u3081\u3001N\u6570\u304c\u591a\u3044\u3068iPhone\u304c\u767a\u71b1\u3059\u308b\u306e\u3067\u5c11\u3005\u5371\u967a\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u753b\u50cf\u3092\u7528\u3044\u305f\u308a\u3001\u8272\u6570\u3092\u5897\u3084\u3057\u305f\u308a\u3059\u308b\u3068\u7d50\u679c\u304c\u7570\u306a\u3063\u3066\u304f\u308b\u3068\u306f\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u5927\u96d1\u628a\u306bWebView+Canvas+JavaScript\u3068\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5dee\u304c\u628a\u63e1\u3067\u304d\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nWeb\u306e\u666e\u904d\u6027\u3092\u512a\u5148\u3059\u308b\u306e\u304b\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u512a\u5148\u3059\u308b\u306e\u304b\u5224\u65ad\u3059\u308b\u969b\u306e\u4e00\u52a9\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\nAndroid\u3067\u3082\u540c\u69d8\u306e\u5b9f\u9a13\u3092\u884c\u3063\u3066\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u6a5f\u7a2e\u5dee\u304c\u6fc0\u3057\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u4ee5\u4e0b\u306b\u3001\u4eca\u56de\u7528\u3044\u305f\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u2192WebView + Canvas + JavaScript\n\n```html:index.html\n<!DOCTYPE html>\n\n<html>\n<head>\n  <title>-Experiment-</title>\n</head>\n\n<body style=\"padding:0px;margin:0px;\">\n  <canvas id=\"main_canvas\"></canvas>\n  <script type=\"text/javascript\">\n\n  var canvas = document.getElementById(\"main_canvas\");\n  canvas.style.width = window.innerWidth + 'px';\n  canvas.style.height = window.innerHeight + 'px';\n  canvas.style.margin = \"0px\";\n  canvas.style.transform = \"translate3d(0, 0, 0)\";\n  canvas.width = window.innerWidth * window.devicePixelRatio;\n  canvas.height = window.innerHeight * window.devicePixelRatio;\n  var context = canvas.getContext(\"2d\");\n\n  var balls = [];\n  var speed = canvas.width * 0.002;\n  var size = canvas.width * 0.05;\n  for (var i=0; i<1000; i++) {\n    var angle = Math.PI*2*Math.random();\n    var ball = {\n      size:size,\n      position:{x:canvas.width/2, y:canvas.height/2},\n      speed:{x:speed*Math.cos(angle), y:speed*Math.sin(angle)},\n      border:{left:size/2, right:canvas.width-size/2, top:size/2, bottom:canvas.height-size/2},\n    };\n    balls.push(ball);\n  }\n\n  context.fillStyle = \"#0000ff\";\n\n  var timer = setInterval(function(){\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (var i=0; i<balls.length; i++){\n      var ball = balls[i];\n      ball.position.x += ball.speed.x;\n      if (ball.position.x < ball.border.left) {\n        ball.position.x = ball.border.left;\n        ball.speed.x = Math.abs(ball.speed.x);\n      };\n      if (ball.position.x > ball.border.right) {\n        ball.position.x = ball.border.right;\n        ball.speed.x = -Math.abs(ball.speed.x);\n      };\n      ball.position.y += ball.speed.y;\n      if (ball.position.y < ball.border.top) {\n        ball.position.y = ball.border.top;\n        ball.speed.y = Math.abs(ball.speed.y);\n      };\n      if (ball.position.y > ball.border.bottom) {\n        ball.position.y = ball.border.bottom;\n        ball.speed.y = -Math.abs(ball.speed.y);\n      };\n\n      context.fillRect(\n        Math.round(ball.position.x-ball.size/2),\n        Math.round(ball.position.y-ball.size/2),\n        Math.round(ball.size),\n        Math.round(ball.size)\n      );\n    }\n  } , 20);\n\n</script>\n</body>\n</html>\n```\n```swift:ViewController.swift\nimport UIKit\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n        \n        let url = NSBundle.mainBundle().pathForResource(\"index\", ofType: \"html\");\n        let reqURL = NSURL(string: url!)\n        let req = NSURLRequest(URL: reqURL!)\n        let webView = UIWebView(frame: CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height))\n        webView.backgroundColor = UIColor.yellowColor()\n        self.view.addSubview(webView)\n        webView.loadRequest(req)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n```\n\n\u2192\u30cd\u30a4\u30c6\u30a3\u30d6\n\n```swift:ViewController.swift\nimport UIKit\n\nclass ViewController: UIViewController {\n    \n    var balls:[Ball] = []\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n        \n        let speed = self.view.frame.size.width * 0.002\n        let size = self.view.frame.size.width * 0.05\n        for var i=0; i<1000; ++i{\n            let ball = Ball()\n            ball.frame = CGRectMake(0, 0, size, size)\n            ball.center = self.view.center\n            let rand = CGFloat(arc4random_uniform(UINT32_MAX)) / CGFloat(UINT32_MAX)\n            let angle = CGFloat(M_PI*2)*rand\n            ball.speed = CGVectorMake(speed*cos(angle), speed*sin(angle))\n            ball.border = Border(\n                left:size/2,\n                right:self.view.frame.size.width-size/2,\n                top:size/2,\n                bottom:self.view.frame.size.height-size/2\n            )\n            ball.backgroundColor = UIColor.blueColor()\n            self.view.addSubview(ball)\n            balls.append(ball)\n        }\n        \n        NSTimer.scheduledTimerWithTimeInterval(\n            0.02,\n            target: self,\n            selector: \"doFrame\",\n            userInfo: nil,\n            repeats: true\n        )\n    }\n    \n    func doFrame(){\n        for var i=0; i<balls.count; ++i {\n            let ball = balls[i]\n            ball.center.x += ball.speed!.dx\n            if ball.center.x < ball.border?.left{\n                ball.center.x = ball.border!.left!\n                ball.speed?.dx = abs(ball.speed!.dx)\n            }\n            if ball.center.x > ball.border?.right{\n                ball.center.x = ball.border!.right!\n                ball.speed?.dx = -abs(ball.speed!.dx)\n            }\n            ball.center.y += ball.speed!.dy\n            if ball.center.y < ball.border?.top{\n                ball.center.y = ball.border!.top!\n                ball.speed?.dy = abs(ball.speed!.dy)\n            }\n            if ball.center.y > ball.border?.bottom{\n                ball.center.y = ball.border!.bottom!\n                ball.speed?.dy = -abs(ball.speed!.dy)\n            }\n        }\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n```\n```swift:Ball.swift\nimport UIKit\n\nclass Ball: UIView {\n    var speed:CGVector?\n    var border:Border?\n}\n\nstruct Border {\n    var left:CGFloat?\n    var right:CGFloat?\n    var top:CGFloat?\n    var bottom:CGFloat?\n}\n```\n"}