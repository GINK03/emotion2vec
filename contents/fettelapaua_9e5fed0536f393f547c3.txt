{"context": "\n\nMac\u4e0a\u306b\u3042\u308b\u5927\u91cf\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u30ea\u30b5\u30a4\u30ba\u3057\u305f\u3044\n\u30d7\u30ec\u30d3\u30e5\u30fcApp\u3092\u4f7f\u3063\u3066\u306e\u30ea\u30b5\u30a4\u30ba\u306f\u3055\u3059\u304c\u306b\u624b\u9593\u3067\u3059\u3002\nAutomator\u304c\u4f7f\u3048\u308c\u3070\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u632b\u6298\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u5927\u307e\u304b\u8a71\u306b\u5206\u3051\u3066\u4ee5\u4e0b\u306e\u4e8c\u70b9\u3002\n1.\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u3068\u66f8\u304d\u51fa\u3057\u3002\n2.\u30ea\u30b5\u30a4\u30ba\u3002\n\nCommand Line Tools\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u521d\u4f53\u9a13\niOS\u30d7\u30ed\u30b0\u30e9\u30de\u304b\u3089Xcode\u3092\u89e6\u308a\u59cb\u3081\u305f\u79c1\u306fCocoa\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\u3069\u3046\u3084\u3063\u3066Finder\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\u306e\u304b\u3002\n\u30d5\u30a9\u30eb\u30c0\u3063\u3066\u3069\u3046\u6271\u3046\u306e\u3002\nUIImage\u306f\u4f7f\u3048\u306a\u3044\u3002->NSImage\u3092\u4f7f\u3046\u3002\n@import AppKit\u3057\u3066\u3042\u3052\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nargc, argv[]\u3063\u3066\u306a\u3093\u3060\u3063\u3051\u3002\n\n1.\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u3068\u30ea\u30b5\u30a4\u30ba\u30d5\u30a1\u30a4\u30eb\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\nTerminal.app\u3067\u5b9f\u884c\u3059\u308b\u306e\u3067\u5b9f\u884c\u65b9\u6cd5\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\napp import\u30d5\u30a9\u30eb\u30c0\u30d1\u30b9 export\u30d5\u30a9\u30eb\u30c0\u30d1\u30b9\n@import AppKit\n\n        if (argc < 3) {\n            NSLog(@\"argment count error!\");\n            return -1;\n        }\n        //! \u30d5\u30a9\u30eb\u30c0\u30d1\u30b9\u306e\u53d6\u5f97\u3001\n        NSString* importPath = [NSString stringWithUTF8String:argv[1]];\n        NSString* exportPath = [NSString stringWithUTF8String:argv[2]];\n\n\n2.\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u3092NSArray\u306b\u683c\u7d0d\n        NSFileManager* fileManager = [NSFileManager defaultManager];\n        NSArray* arrayFilePath = [fileManager contentsOfDirectoryAtPath:importFolderPath error:nil];\n\n\n3.\u30d5\u30a1\u30a4\u30eb\u306e\u62e1\u5f35\u5b50\u304cimage\u7cfb\u306e\u307f\u3092\u9078\u5225\u3057\u3066\u53d6\u5f97\n        NSMutableArray* arrayfileImage = [[NSMutableArray alloc] init];\n        for (NSString* fileName in arrayFilePath) {\n            //! file\u306e\u62e1\u5f35\u5b50\u3092\u53d6\u5f97\n            CFStringRef fileExtension = (__bridge CFStringRef) [fileName pathExtension];\n            CFStringRef fileUTI = UTTypeCreatePreferredIdentifierForTag(kUTTagClassFilenameExtension, fileExtension, NULL);\n\n            //! \u753b\u50cf\u5168\u822c\u3092\u6271\u3046\u306a\u3089kUTTypeImage\n            if (!UTTypeConformsTo(fileUTI, kUTTypeImage)) {\n                NSLog(@\"It's NOT an image\");\n                continue;\n            }\n            [arrayfileImage addObject:fileName];\n        }\n\n\n4.\u753b\u50cf\u306e\u7e2e\u5c0f\u3068\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u30d5\u30a9\u30eb\u30c0\u3078\u306e\u66f8\u304d\u8fbc\u307f\n\n\u7e2e\u5c0f\u5f8c\u306f640x360(retina\u3060\u30681280x720)\u306e\u30b5\u30a4\u30ba\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u306fresize1.png, resize2.png\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u307e\u3059\u3002\n        for (int i=0; i<[arrayfileImage count]; i++) {\n            NSString* stringFileName = [arrayfileImage objectAtIndex:i];\n            NSString* filePath = [NSString stringWithFormat:@\"%@/%@\", importFolderPath, stringFileName];\n\n            NSImage* imageOriginal;\n            imageOriginal = [[NSImage alloc] initWithContentsOfFile:filePath];\n\n            NSRect resize = NSMakeRect(0, 0, 640, 360);\n\n            NSImage* newImage = [[NSImage alloc] initWithSize:NSMakeSize(resize.size.width, resize.size.height)];\n            NSLog(@\"resizeSize width = %f, height = %f\", newImage.size.width, newImage.size.height);\n            [newImage lockFocus];\n            [imageOriginal drawInRect:resize\n                             fromRect:NSMakeRect(0, 0, imageOriginal.size.width, imageOriginal.size.height)\n                            operation:NSCompositeSourceOver\n                             fraction:1.0];\n            [newImage unlockFocus];\n            CGImageRef cgRef = [newImage CGImageForProposedRect:NULL\n                                                        context:nil\n                                                          hints:nil];\n            NSBitmapImageRep *newRep = [[NSBitmapImageRep alloc] initWithCGImage:cgRef];\n\n            [newRep setSize:[newImage size]];   // if you want the same resolution\n\n            NSData *data = [newRep representationUsingType: NSPNGFileType\n                                                properties: [NSDictionary\n                                                             dictionaryWithObjectsAndKeys:[NSNumber numberWithFloat:2.0],\n                                                             NSImageCompressionFactor, nil]];\n\n            [data writeToFile:[NSString stringWithFormat:@\"%@/resize%d.png\",exportFolderPath,i] atomically: NO];\n        }\n\n\n\u4f7f\u3044\u65b9\n\u30a2\u30d7\u30ea\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\u5b9f\u4f53\u3092Terminal.app\u306b\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3057\u307e\u3059\u3002\n\n\u753b\u50cf\u304c\u305f\u3093\u307e\u308a\u5165\u3063\u305fimport\u30d5\u30a9\u30eb\u30c0\u3082D&D\u3057\u307e\u3059\u3002\n\u7a7a\u306eexport\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308a\u304a\u306a\u3058\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u5b9f\u884c\u3059\u308b\u3068export\u30d5\u30a9\u30eb\u30c0\u5185\u306bresize1.png\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u308b\u3068\u304a\u3082\u3044\u307e\u3059\u3002\nPNG\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u30c6\u30b9\u30c8\u6e08\u307f\u3067\u3059\u3002\n#Mac\u4e0a\u306b\u3042\u308b\u5927\u91cf\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u30ea\u30b5\u30a4\u30ba\u3057\u305f\u3044\n\u30d7\u30ec\u30d3\u30e5\u30fcApp\u3092\u4f7f\u3063\u3066\u306e\u30ea\u30b5\u30a4\u30ba\u306f\u3055\u3059\u304c\u306b\u624b\u9593\u3067\u3059\u3002\nAutomator\u304c\u4f7f\u3048\u308c\u3070\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u632b\u6298\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u5927\u307e\u304b\u8a71\u306b\u5206\u3051\u3066\u4ee5\u4e0b\u306e\u4e8c\u70b9\u3002\n\n1.\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u3068\u66f8\u304d\u51fa\u3057\u3002\n2.\u30ea\u30b5\u30a4\u30ba\u3002\n\n###Command Line Tools\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u521d\u4f53\u9a13\n\niOS\u30d7\u30ed\u30b0\u30e9\u30de\u304b\u3089Xcode\u3092\u89e6\u308a\u59cb\u3081\u305f\u79c1\u306fCocoa\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\u3069\u3046\u3084\u3063\u3066Finder\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\u306e\u304b\u3002\n\u30d5\u30a9\u30eb\u30c0\u3063\u3066\u3069\u3046\u6271\u3046\u306e\u3002\nUIImage\u306f\u4f7f\u3048\u306a\u3044\u3002->NSImage\u3092\u4f7f\u3046\u3002\n@import AppKit\u3057\u3066\u3042\u3052\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nargc, argv[]\u3063\u3066\u306a\u3093\u3060\u3063\u3051\u3002\n\n#1.\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u3068\u30ea\u30b5\u30a4\u30ba\u30d5\u30a1\u30a4\u30eb\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\nTerminal.app\u3067\u5b9f\u884c\u3059\u308b\u306e\u3067\u5b9f\u884c\u65b9\u6cd5\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n**app import\u30d5\u30a9\u30eb\u30c0\u30d1\u30b9 export\u30d5\u30a9\u30eb\u30c0\u30d1\u30b9**\n\n```\n@import AppKit\n```\n```\n        if (argc < 3) {\n            NSLog(@\"argment count error!\");\n            return -1;\n        }\n        //! \u30d5\u30a9\u30eb\u30c0\u30d1\u30b9\u306e\u53d6\u5f97\u3001\n        NSString* importPath = [NSString stringWithUTF8String:argv[1]];\n        NSString* exportPath = [NSString stringWithUTF8String:argv[2]];\n```\n#2.\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u3092NSArray\u306b\u683c\u7d0d\n```\n        NSFileManager* fileManager = [NSFileManager defaultManager];\n        NSArray* arrayFilePath = [fileManager contentsOfDirectoryAtPath:importFolderPath error:nil];\n```\n\n#3.\u30d5\u30a1\u30a4\u30eb\u306e\u62e1\u5f35\u5b50\u304cimage\u7cfb\u306e\u307f\u3092\u9078\u5225\u3057\u3066\u53d6\u5f97\n```\n        NSMutableArray* arrayfileImage = [[NSMutableArray alloc] init];\n        for (NSString* fileName in arrayFilePath) {\n            //! file\u306e\u62e1\u5f35\u5b50\u3092\u53d6\u5f97\n            CFStringRef fileExtension = (__bridge CFStringRef) [fileName pathExtension];\n            CFStringRef fileUTI = UTTypeCreatePreferredIdentifierForTag(kUTTagClassFilenameExtension, fileExtension, NULL);\n            \n            //! \u753b\u50cf\u5168\u822c\u3092\u6271\u3046\u306a\u3089kUTTypeImage\n            if (!UTTypeConformsTo(fileUTI, kUTTypeImage)) {\n                NSLog(@\"It's NOT an image\");\n                continue;\n            }\n            [arrayfileImage addObject:fileName];\n        }\n```\n#4.\u753b\u50cf\u306e\u7e2e\u5c0f\u3068\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u30d5\u30a9\u30eb\u30c0\u3078\u306e\u66f8\u304d\u8fbc\u307f\n###\u7e2e\u5c0f\u5f8c\u306f640x360(retina\u3060\u30681280x720)\u306e\u30b5\u30a4\u30ba\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u306fresize1.png, resize2.png\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u307e\u3059\u3002\n```\n        for (int i=0; i<[arrayfileImage count]; i++) {\n            NSString* stringFileName = [arrayfileImage objectAtIndex:i];\n            NSString* filePath = [NSString stringWithFormat:@\"%@/%@\", importFolderPath, stringFileName];\n            \n            NSImage* imageOriginal;\n            imageOriginal = [[NSImage alloc] initWithContentsOfFile:filePath];\n            \n            NSRect resize = NSMakeRect(0, 0, 640, 360);\n            \n            NSImage* newImage = [[NSImage alloc] initWithSize:NSMakeSize(resize.size.width, resize.size.height)];\n            NSLog(@\"resizeSize width = %f, height = %f\", newImage.size.width, newImage.size.height);\n            [newImage lockFocus];\n            [imageOriginal drawInRect:resize\n                             fromRect:NSMakeRect(0, 0, imageOriginal.size.width, imageOriginal.size.height)\n                            operation:NSCompositeSourceOver\n                             fraction:1.0];\n            [newImage unlockFocus];\n            CGImageRef cgRef = [newImage CGImageForProposedRect:NULL\n                                                        context:nil\n                                                          hints:nil];\n            NSBitmapImageRep *newRep = [[NSBitmapImageRep alloc] initWithCGImage:cgRef];\n            \n            [newRep setSize:[newImage size]];   // if you want the same resolution\n            \n            NSData *data = [newRep representationUsingType: NSPNGFileType\n                                                properties: [NSDictionary\n                                                             dictionaryWithObjectsAndKeys:[NSNumber numberWithFloat:2.0],\n                                                             NSImageCompressionFactor, nil]];\n            \n            [data writeToFile:[NSString stringWithFormat:@\"%@/resize%d.png\",exportFolderPath,i] atomically: NO];\n        }\n```\n\n#\u4f7f\u3044\u65b9\n\u30a2\u30d7\u30ea\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\u5b9f\u4f53\u3092Terminal.app\u306b\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3057\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-08-15 23.47.16.png](https://qiita-image-store.s3.amazonaws.com/0/58032/7b031353-ce4b-6785-7c9e-b0b2a8397a26.png)\n\n\n\u753b\u50cf\u304c\u305f\u3093\u307e\u308a\u5165\u3063\u305fimport\u30d5\u30a9\u30eb\u30c0\u3082D&D\u3057\u307e\u3059\u3002\n\u7a7a\u306eexport\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308a\u304a\u306a\u3058\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u5b9f\u884c\u3059\u308b\u3068export\u30d5\u30a9\u30eb\u30c0\u5185\u306bresize1.png\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u308b\u3068\u304a\u3082\u3044\u307e\u3059\u3002\nPNG\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u30c6\u30b9\u30c8\u6e08\u307f\u3067\u3059\u3002\n", "tags": ["Xcode7.3", "OSX", "Objective-C", "command"]}