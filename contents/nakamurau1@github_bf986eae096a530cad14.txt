{"context": "UITableViewCell\u306e\u9ad8\u3055\u3092\u81ea\u52d5\u8abf\u6574\u3059\u308b\u306b\u306f\u3001\nUITableView\u306erowHeight\u30d7\u30ed\u30d1\u30c6\u30a3\u306bUITableViewAutomaticDimension\u3092\u8a2d\u5b9a\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\u3060\u3051\u3069\u3001\u3053\u306e\u65b9\u6cd5\u3092\u4f7f\u3046\u306b\u306fTableView\u5185\u306e\u5168\u3066\u306e\u30bb\u30eb\u306bAutoLayout\u304c\u4e0d\u8db3\u306a\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\u3057\u304b\u3057\u30ec\u30ac\u30b7\u30fc\u306a\u30a2\u30d7\u30ea\u3060\u3068\u3001AutoLayout\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308a\u3001\u3059\u3079\u3066\u306e\u30bb\u30eb\u306b\u5bfe\u3057\u3066\u8a2d\u5b9a\u3057\u76f4\u3059\u3068\u3044\u3046\u306e\u306f\u9762\u5012\u3002\n\u305d\u3093\u306a\u6642\u306f\u3001\u6b21\u306e\u3088\u3046\u306btableView:heightForRowAt\u30e1\u30bd\u30c3\u30c9\u3067\u5185\u5bb9\u306b\u3088\u3063\u3066\u9ad8\u3055\u3092\u8abf\u6574\u3057\u305f\u3044\u30bb\u30eb\u306e\u9ad8\u3055\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3059\u3002\nimport UIKit\n\n//\u5404TableViewCell\u306eIdentifier\nprivate let topCellID = \"topCellID\"\nprivate let middleCellID = \"middleCellID\"\nprivate let bottomCellID = \"bottomCellID\"\n\nclass ViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {\n\n    @IBOutlet weak var mainTable: UITableView!\n\n    static let cellIDs: [String] = [topCellID, middleCellID, bottomCellID]\n\n    var cellTexts: [String: String] = [:]\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n\n        mainTable.delegate = self\n        mainTable.dataSource = self\n\n        cellTexts[topCellID] = self.reapeatChar(targetChar: \"\u4e0a\", repeatNum: 100) + \"\u7d42\"\n        cellTexts[middleCellID] = self.reapeatChar(targetChar: \"\u4e2d\", repeatNum: 200) + \"\u7d42\"\n        cellTexts[bottomCellID] = self.reapeatChar(targetChar: \"\u4e0b\", repeatNum: 300) + \"\u7d42\"\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n    // \u884c\u6570\n    public func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return ViewController.cellIDs.count\n    }\n\n    // \u30bb\u30eb\u306e\u9ad8\u3055\n    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {\n        let cellId: String = ViewController.cellIDs[indexPath.row]\n        let cell: UITableViewCell = tableView.dequeueReusableCell(withIdentifier: cellId)!\n\n        if [topCellID, middleCellID, bottomCellID].contains(cellId) {\n            return self.getCellHeight(tableView: tableView, text: self.cellTexts[cellId]!)\n        }\n\n        return cell.bounds.height\n    }\n\n    // \u30bb\u30eb\u306e\u4e2d\u8eab\n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        let cellId: String = ViewController.cellIDs[indexPath.row]\n        let cell: UITableViewCell = tableView.dequeueReusableCell(withIdentifier: cellId)!\n\n        if cellId == topCellID {\n            let label = cell.viewWithTag(100) as! UILabel\n            label.text = cellTexts[cellId]\n        } else if cellId == middleCellID {\n            let label = cell.viewWithTag(100) as! UILabel\n            label.text = cellTexts[cellId]\n        } else if cellId == bottomCellID {\n            let label = cell.viewWithTag(100) as! UILabel\n            label.text = cellTexts[cellId]\n        }\n\n        return cell\n    }\n\n    // \u30bb\u30af\u30b7\u30e7\u30f3\u6570\n    func numberOfSections(in tableView: UITableView) -> Int {\n        return 1\n    }\n\n    // \u30bb\u30eb\u306e\u9ad8\u3055\u3092\u8fd4\u3059\n    private func getCellHeight(tableView: UITableView, text: String) -> CGFloat {\n\n        let maxMessageLabelWidth: CGFloat = UIScreen.main.bounds.size.width\n        let messageLabelHeight: CGFloat = self.getLabelSize(text: text, font: UIFont.systemFont(ofSize: 13.0), width: maxMessageLabelWidth, height: CGFloat.greatestFiniteMagnitude).height\n\n        return messageLabelHeight + 16 //\u30e9\u30d9\u30eb\u306e\u4e0a\u4e0b\u306b\u306f\u9593\u9694\u304c\u7a7a\u304f\u306e\u306716pt\u307b\u3069\u4f59\u5206\u306b\u9ad8\u3055\u3092\u8a2d\u5b9a\n    }\n\n    // \u9ad8\u3055\u3068\u5e45\u3092\u8a08\u7b97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n    private func getLabelSize(text: String, font: UIFont, width: CGFloat, height: CGFloat) -> CGSize {\n        let maxSize: CGSize = CGSize(width: width, height: height)\n        let attr = [NSFontAttributeName: font]\n\n        let size: CGSize = text.boundingRect(with: maxSize,\n                                             options: [NSStringDrawingOptions.usesLineFragmentOrigin, NSStringDrawingOptions.truncatesLastVisibleLine],\n                                             attributes: attr,\n                                             context: nil).size\n        return size\n    }\n\n    private func reapeatChar(targetChar: String, repeatNum: Int) -> String {\n        var resStr: String = \"\"\n        for _ in 1 ... repeatNum {\n            resStr += targetChar\n        }\n        return resStr\n    }\n}\n\nUITableViewCell\u306e\u9ad8\u3055\u3092\u81ea\u52d5\u8abf\u6574\u3059\u308b\u306b\u306f\u3001\nUITableView\u306erowHeight\u30d7\u30ed\u30d1\u30c6\u30a3\u306b[UITableViewAutomaticDimension\u3092\u8a2d\u5b9a\u3059\u308b\u65b9\u6cd5](http://qiita.com/nakamurau1@github/items/e1432086991bc3733c06)\u304c\u3042\u308b\u3002\n\n\u3060\u3051\u3069\u3001\u3053\u306e\u65b9\u6cd5\u3092\u4f7f\u3046\u306b\u306fTableView\u5185\u306e\u5168\u3066\u306e\u30bb\u30eb\u306bAutoLayout\u304c\u4e0d\u8db3\u306a\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\u3057\u304b\u3057\u30ec\u30ac\u30b7\u30fc\u306a\u30a2\u30d7\u30ea\u3060\u3068\u3001AutoLayout\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308a\u3001\u3059\u3079\u3066\u306e\u30bb\u30eb\u306b\u5bfe\u3057\u3066\u8a2d\u5b9a\u3057\u76f4\u3059\u3068\u3044\u3046\u306e\u306f\u9762\u5012\u3002\n\u305d\u3093\u306a\u6642\u306f\u3001\u6b21\u306e\u3088\u3046\u306btableView:heightForRowAt\u30e1\u30bd\u30c3\u30c9\u3067\u5185\u5bb9\u306b\u3088\u3063\u3066\u9ad8\u3055\u3092\u8abf\u6574\u3057\u305f\u3044\u30bb\u30eb\u306e\u9ad8\u3055\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3059\u3002\n\n```swift\nimport UIKit\n\n//\u5404TableViewCell\u306eIdentifier\nprivate let topCellID = \"topCellID\"\nprivate let middleCellID = \"middleCellID\"\nprivate let bottomCellID = \"bottomCellID\"\n\nclass ViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {\n    \n    @IBOutlet weak var mainTable: UITableView!\n    \n    static let cellIDs: [String] = [topCellID, middleCellID, bottomCellID]\n    \n    var cellTexts: [String: String] = [:]\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n    \n        mainTable.delegate = self\n        mainTable.dataSource = self\n        \n        cellTexts[topCellID] = self.reapeatChar(targetChar: \"\u4e0a\", repeatNum: 100) + \"\u7d42\"\n        cellTexts[middleCellID] = self.reapeatChar(targetChar: \"\u4e2d\", repeatNum: 200) + \"\u7d42\"\n        cellTexts[bottomCellID] = self.reapeatChar(targetChar: \"\u4e0b\", repeatNum: 300) + \"\u7d42\"\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n    \n    // \u884c\u6570\n    public func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return ViewController.cellIDs.count\n    }\n    \n    // \u30bb\u30eb\u306e\u9ad8\u3055\n    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {\n        let cellId: String = ViewController.cellIDs[indexPath.row]\n        let cell: UITableViewCell = tableView.dequeueReusableCell(withIdentifier: cellId)!\n        \n        if [topCellID, middleCellID, bottomCellID].contains(cellId) {\n            return self.getCellHeight(tableView: tableView, text: self.cellTexts[cellId]!)\n        }\n        \n        return cell.bounds.height\n    }\n    \n    // \u30bb\u30eb\u306e\u4e2d\u8eab\n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        let cellId: String = ViewController.cellIDs[indexPath.row]\n        let cell: UITableViewCell = tableView.dequeueReusableCell(withIdentifier: cellId)!\n        \n        if cellId == topCellID {\n            let label = cell.viewWithTag(100) as! UILabel\n            label.text = cellTexts[cellId]\n        } else if cellId == middleCellID {\n            let label = cell.viewWithTag(100) as! UILabel\n            label.text = cellTexts[cellId]\n        } else if cellId == bottomCellID {\n            let label = cell.viewWithTag(100) as! UILabel\n            label.text = cellTexts[cellId]\n        }\n    \n        return cell\n    }\n    \n    // \u30bb\u30af\u30b7\u30e7\u30f3\u6570\n    func numberOfSections(in tableView: UITableView) -> Int {\n        return 1\n    }\n    \n    // \u30bb\u30eb\u306e\u9ad8\u3055\u3092\u8fd4\u3059\n    private func getCellHeight(tableView: UITableView, text: String) -> CGFloat {\n        \n        let maxMessageLabelWidth: CGFloat = UIScreen.main.bounds.size.width\n        let messageLabelHeight: CGFloat = self.getLabelSize(text: text, font: UIFont.systemFont(ofSize: 13.0), width: maxMessageLabelWidth, height: CGFloat.greatestFiniteMagnitude).height\n        \n        return messageLabelHeight + 16 //\u30e9\u30d9\u30eb\u306e\u4e0a\u4e0b\u306b\u306f\u9593\u9694\u304c\u7a7a\u304f\u306e\u306716pt\u307b\u3069\u4f59\u5206\u306b\u9ad8\u3055\u3092\u8a2d\u5b9a\n    }\n    \n    // \u9ad8\u3055\u3068\u5e45\u3092\u8a08\u7b97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n    private func getLabelSize(text: String, font: UIFont, width: CGFloat, height: CGFloat) -> CGSize {\n        let maxSize: CGSize = CGSize(width: width, height: height)\n        let attr = [NSFontAttributeName: font]\n        \n        let size: CGSize = text.boundingRect(with: maxSize,\n                                             options: [NSStringDrawingOptions.usesLineFragmentOrigin, NSStringDrawingOptions.truncatesLastVisibleLine],\n                                             attributes: attr,\n                                             context: nil).size\n        return size\n    }\n    \n    private func reapeatChar(targetChar: String, repeatNum: Int) -> String {\n        var resStr: String = \"\"\n        for _ in 1 ... repeatNum {\n            resStr += targetChar\n        }\n        return resStr\n    }\n}\n```\n", "tags": ["iOS", "Xcode", "UITableView", "\u65b0\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u5fdc\u63f4"]}