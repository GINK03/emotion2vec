{"context": " More than 1 year has passed since last update.PeerJS\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u76f8\u624b\u306bP2P\u30ad\u30fc\u3092\u4f1d\u3048\u308b\u3053\u3068\u3067\u3001\u97f3\u58f0\u3084\u6620\u50cf\u3092\u5171\u6709\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3001PeerJSCloud\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u30d6\u30e9\u30a6\u30b6\u306b\u8868\u793a\u3055\u308c\u305fP2P\u30ad\u30fc\u3092\u624b\u52d5\u3067\u5165\u529b\u3057\u306a\u3051\u308c\u3070\u3001\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u3001\u516c\u5f0f\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bPeerJSServer\u3092Express4\u4e0a\u306b\u8a2d\u7f6e\u3057\u3001\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u3092\u7121\u5dee\u5225\u306b\u5171\u6709\u3059\u308b\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u74b0\u5883\n\nNodeJS v5.7.0\nNpm v3.6.0\n\nGoogleChrome 48.0.2564.116 (OSX 10.11.3 64-bit)\n\n\u4e0b\u8a18package.json\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n.\nmkdir voicechat\ncd voicechat\n\ntouch package.json #\u4e0b\u8a18\u3092 copy&paste\n\n\n\npackage.json\n{\n  \"main\": \"server.js\",\n  \"private\": true,\n\n  \"dependencies\": {\n    \"express\": \"^4.13.4\",\n    \"peer\": \"^0.2.8\",\n    \"socket.io\": \"^1.4.5\"\n  },\n  \"scripts\": {\n    \"server\": \"node server.js\"\n  }\n}\n\n\nnpm install\n\n\u4f9d\u5b58\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u3089\u3001\u6b21\u3078\u9032\u307f\u307e\u3059\u3002\n\n\u5404\u30b5\u30fc\u30d0\u30fc\u306e\u4f9d\u5b58\u95a2\u4fc2\n\u307e\u305a\u3001Express4\u3068Socket.io\u3001peerServer\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4f9d\u5b58\u3055\u305b\u3001\u6307\u5b9aPORT\u306b\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nserver.js\n// Dependencies\nconst express = require('express');\nconst createHttpServer = require('http').createServer;\nconst createIo = require('socket.io');\nconst createPeerServer = require('peer').ExpressPeerServer;\n\n// Environment\nconst port = process.env.PORT || 59798;\n\n// Routes\nconst app = express();\nconst httpServer = createHttpServer(app);\nconst io = createIo(httpServer);\nconst peerServer = createPeerServer(httpServer);\n\napp.use('/api', peerServer);\napp.use(express.static(__dirname));\n\n// Boot\nhttpServer.listen(port, () => {\n  console.log(`Boot on http://localhost:${port}`);\n});\n\n\n\u540c\u6642\u306b\u3001\u4ee5\u4e0b\u306eindex.html\u3092\u7528\u610f\u3057\u3001\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nindex.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Voicechat</title>\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/peerjs/0.3.14/peer.js\"></script>\n  <script>\nnavigator.webkitGetUserMedia({audio:true}, function(stream) {\n  var audio = new Audio;\n  audio.src = URL.createObjectURL(stream);\n  audio.controls = true;\n  audio.play();\n  document.body.appendChild(audio);\n}, function(error) {\n  alert('Failed to get local stream' ,error);\n});\n  </script>\n</head>\n<body>\n\n</body>\n</html>\n\n\npackage.json\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\nnpm start\n# Boot on http://localhost:59798\n\n\n\u30de\u30a4\u30af\u306e\u8a31\u53ef\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30de\u30a4\u30af\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u7981\u6b62\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u8a31\u53ef\u3059\u308b\u3068\u3001\u53f3\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u3088\u3046\u306b\u78ba\u8a8d\u7528\u306eAudio\u8981\u7d20\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067\u30de\u30a4\u30af\u306b\u558b\u308b\u3068\u3001\u30de\u30a4\u30af\u306e\u97f3\u58f0\u304c\u305d\u306e\u307e\u307e\u518d\u751f\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u30de\u30a4\u30af\u63a5\u7d9a\u2192Socket.io\u63a5\u7d9a\u2192PeerJS\u63a5\u7d9a\nPeerJS\u306b\u306fP2P\u30ad\u30fc\u3092\u7ba1\u7406\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306bSocket.io\u3067\u3053\u308c\u3092\u901a\u77e5\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u8b58\u5225id\u3067\u3042\u308bsocket.id\u3092P2P\u30ad\u30fc\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\nindex.html\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\nindex.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Voicechat</title>\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/peerjs/0.3.14/peer.js\"></script>\n  <script>\nnavigator.webkitGetUserMedia({ audio: true }, function (stream) {\n  var peer;\n  var socket = io();\n  socket.on('connect', function () {\n    var options = {\n      host: location.hostname,\n      port: location.port,\n      path: '/api', // app.use('/api', peerServer);\u3068\u540c\u3058\u4f4d\u7f6e\u306b\u306a\u308b\u3088\u3046\u306b\n    };\n    peer = new Peer(socket.id, options);\n  });\n}, function(error) {\n  alert('Failed to get local stream', error);\n});\n  </script>\n</head>\n<body>\n\n</body>\n</html>\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304cnew Peer\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d0\u30fc\u306fpeerServer.on('connection')1\u304b\u3089P2P\u30ad\u30fc\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u51fa\u6765\u307e\u3059\u3002\n\nserver.js\n// Dependencies\nconst express = require('express');\nconst createHttpServer = require('http').createServer;\nconst createIo = require('socket.io');\nconst createPeerServer = require('peer').ExpressPeerServer;\n\n// Environment\nconst port = process.env.PORT || 59798;\n\n// Routes\nconst app = express();\nconst httpServer = createHttpServer(app);\nconst io = createIo(httpServer);\nconst peerServer = createPeerServer(httpServer);\n\napp.use('/api', peerServer);\napp.use(express.static(__dirname));\n\n// Boot\nhttpServer.listen(port, () => {\n  console.log(`Boot on http://localhost:${port}`);\n});\n\n// Manage p2p keys\nconst keys = [];\npeerServer.on('connection', (key) => {\n  keys.push(key);\n\n  console.log('connected', keys);\n\n  io.emit('keys', keys);// \u63a5\u7d9a\u4e2d\u306e\u5168\u3066\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078`keys`\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\n});\npeerServer.on('disconnect', (key) => {\n  const index = keys.indexOf(key);\n  if (index > -1) {\n    keys.splice(index, 1);\n  }\n  console.log('disconnect', keys);\n\n  io.emit('keys', keys);// \u540c\u4e0a\n});\n\n\nnpm start\n# Boot on http://localhost:59798\n# connected [ 'ZJ4vZ-bmXXE405AyAAAA' ]\n\n\n\u2192\u5f85\u6a5f\u2192\u5171\u6709\n\u524d\u8ff0\u306eserver.js\u306b\u3088\u308a\u3001\u63a5\u7d9a\u304c\u66f4\u65b0\u3055\u308c\u308b\u5ea6\u306bkeys\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u306e\u3067\u3001\u53d7\u4fe1\u3057\u305fP2P\u3092\u5143\u306bAudio\u8981\u7d20\u3092\u751f\u6210\u3059\u308c\u3070\u3001\u30de\u30a4\u30af\u97f3\u58f0\u306e\u5171\u6709\u304c\u53ef\u80fd\u3067\u3059\u3002\n\nindex.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Voicechat</title>\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/peerjs/0.3.14/peer.js\"></script>\n  <script>\nnavigator.webkitGetUserMedia({ audio: true }, function (stream) {\n  var peer;\n  var socket = io();\n  socket.on('connect', function () {\n    var options = {\n      host: location.hostname,\n      port: location.port,\n      path: '/api', // app.use('/api', peerServer);\u3068\u540c\u3058\u4f4d\u7f6e\u306b\u306a\u308b\u3088\u3046\u306b\n    };\n    peer = new Peer(socket.id, options);\n    peer.on('call', function (call) {\n      console.log('%s\u306bcall\u3055\u308c\u307e\u3057\u305f', call.peer);\n      call.answer(stream);\n    });\n  });\n\n  // \u53d7\u4fe1\u3057\u305f\u5168\u3066\u306eP2Pkey\u3092audio\u8981\u7d20\u306b\u5909\u63db\u3059\u308b\n  socket.on('keys', function (keys) {\n    var audios = document.querySelector('#audios');\n    audios.innerHTML = '';\n\n    var index = keys.indexOf(socket.id);\n    if (index > -1) {\n      keys.splice(index, 1);// \u81ea\u5206\u81ea\u8eab\u3092\u7121\u8996\n    }\n    keys.forEach(function (key) {\n      var call = peer.call(key, stream);\n      if (call === undefined) {\n        console.log(key + '\u306a\u3093\u3066\u5c45\u307e\u305b\u3093');\n        return;\n      }\n      call.on('stream', function (remoteStream) {\n        var audio = new Audio;\n        audio.src = URL.createObjectURL(remoteStream);\n        audio.controls = true;\n        audio.play();\n\n        audios.appendChild(audio);\n      });\n    });\n  });\n}, function (error) {\n  alert('Failed to get local stream', error);\n});\n  </script>\n</head>\n<body>\n\n<section id=\"audios\">\n  <p>\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u5f85\u3063\u3066\u3044\u307e\u3059\u2026</p>\n</section>\n\n</body>\n</html>\n\n\n\n\n\u305d\u306e\u4ed6\u6ce8\u610f\u4e8b\u9805\nhttps://\u304blocalhost\u4e0a\u3067\u306a\u3051\u308c\u3070\u3001getUserMedia\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8b66\u544a\u6587\u304c\u8868\u793a\u3055\u308c\u3066\u5931\u6557\u3057\u307e\u3059\u3002\n\nhttp\u4e0a\u3067\u958b\u767a\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u3044\u3066\u5165\u529b\u3059\u308b\nnavigator.webkitGetUserMedia({audio:true},x => null,x => null)\n// getUserMedia() no longer works on insecure origins. To use this feature, you should consider switching your application to a secure origin, such as HTTPS. See https://goo.gl/rStTGz for more details.\n\n\n\u305d\u306e\u305f\u3081\u3001https\u4e0a\u3067\u30c7\u30d7\u30ed\u30a4\u51fa\u6765\u308b\u74b0\u5883\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002Heroku\u3084c9\u306a\u3069\u3002\n\n\u304a\u308f\u308a\u306b\n\n\u52d5\u4f5c\u78ba\u8a8d\u7528\u30ea\u30dd\u30b8\u30c8\u30ea\uff1a 59naga/peerjs-voicechat - github\n\n\u53cb\u9054\u304c\u5c45\u306a\u304f\u3066\uff13\u6a5f\u4ee5\u4e0a\u306e\u52d5\u4f5c\u78ba\u8a8d\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f (\u25de\u2038\u25df\uff09\n\n\n\n\nExpressPeerServer() < express() \u306e\u3088\u3046\u306a\u4f9d\u5b58\u3002\u2026\u63a5\u7d9a\u78ba\u7acb\u6642\u306b.emit('connection')\u00a0\u21a9\n\n\n\n[PeerJS](http://peerjs.com/)\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u76f8\u624b\u306bP2P\u30ad\u30fc\u3092\u4f1d\u3048\u308b\u3053\u3068\u3067\u3001\u97f3\u58f0\u3084\u6620\u50cf\u3092\u5171\u6709\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3001[PeerJSCloud](http://peerjs.com/peerserver)\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001__\u30d6\u30e9\u30a6\u30b6\u306b\u8868\u793a\u3055\u308c\u305fP2P\u30ad\u30fc\u3092\u624b\u52d5\u3067\u5165\u529b\u3057\u306a\u3051\u308c\u3070__\u3001\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u305d\u3053\u3067\u3001\u516c\u5f0f\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b[PeerJSServer](https://github.com/peers/peerjs-server)\u3092[Express4](http://expressjs.com/)\u4e0a\u306b\u8a2d\u7f6e\u3057\u3001\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u3092\u7121\u5dee\u5225\u306b\u5171\u6709\u3059\u308b\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\n# \u74b0\u5883\n\n* NodeJS v5.7.0\n* Npm v3.6.0\n* [GoogleChrome](https://www.google.co.jp/chrome/browser/features.html) 48.0.2564.116 (OSX 10.11.3 64-bit)\n\n\u4e0b\u8a18`package.json`\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```bash:.\nmkdir voicechat\ncd voicechat\n\ntouch package.json #\u4e0b\u8a18\u3092 copy&paste\n```\n\n```json:package.json\n{\n  \"main\": \"server.js\",\n  \"private\": true,\n  \n  \"dependencies\": {\n    \"express\": \"^4.13.4\",\n    \"peer\": \"^0.2.8\",\n    \"socket.io\": \"^1.4.5\"\n  },\n  \"scripts\": {\n    \"server\": \"node server.js\"\n  }\n}\n```\n\n```bash\nnpm install\n```\n\n\u4f9d\u5b58\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u3089\u3001\u6b21\u3078\u9032\u307f\u307e\u3059\u3002\n\n# \u5404\u30b5\u30fc\u30d0\u30fc\u306e\u4f9d\u5b58\u95a2\u4fc2\n\u307e\u305a\u3001[Express4](http://expressjs.com/ja/api.html#app.listen)\u3068[Socket.io](http://socket.io/docs/#using-with-node-http-server)\u3001[peerServer](https://github.com/peers/peerjs-server#combining-with-existing-express-app)\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4f9d\u5b58\u3055\u305b\u3001\u6307\u5b9a`PORT`\u306b\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```js:server.js\n// Dependencies\nconst express = require('express');\nconst createHttpServer = require('http').createServer;\nconst createIo = require('socket.io');\nconst createPeerServer = require('peer').ExpressPeerServer;\n\n// Environment\nconst port = process.env.PORT || 59798;\n\n// Routes\nconst app = express();\nconst httpServer = createHttpServer(app);\nconst io = createIo(httpServer);\nconst peerServer = createPeerServer(httpServer);\n\napp.use('/api', peerServer);\napp.use(express.static(__dirname));\n\n// Boot\nhttpServer.listen(port, () => {\n  console.log(`Boot on http://localhost:${port}`);\n});\n```\n\n\u540c\u6642\u306b\u3001\u4ee5\u4e0b\u306e`index.html`\u3092\u7528\u610f\u3057\u3001\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```html:index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Voicechat</title>\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/peerjs/0.3.14/peer.js\"></script>\n  <script>\nnavigator.webkitGetUserMedia({audio:true}, function(stream) {\n  var audio = new Audio;\n  audio.src = URL.createObjectURL(stream);\n  audio.controls = true;\n  audio.play();\n  document.body.appendChild(audio);\n}, function(error) {\n  alert('Failed to get local stream' ,error);\n});\n  </script>\n</head>\n<body>\n  \n</body>\n</html>\n```\n\n`package.json`\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```bash\nnpm start\n# Boot on http://localhost:59798\n```\n\n# \u30de\u30a4\u30af\u306e\u8a31\u53ef\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2016-02-24_22_01_13.png](https://qiita-image-store.s3.amazonaws.com/0/28576/b50f1bf0-d64d-ba69-60ea-da8b7f30e3da.png)\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30de\u30a4\u30af\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u7981\u6b62\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u8a31\u53ef\u3059\u308b\u3068\u3001\u53f3\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u3088\u3046\u306b\u78ba\u8a8d\u7528\u306eAudio\u8981\u7d20\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067\u30de\u30a4\u30af\u306b\u558b\u308b\u3068\u3001\u30de\u30a4\u30af\u306e\u97f3\u58f0\u304c\u305d\u306e\u307e\u307e\u518d\u751f\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n# \u30de\u30a4\u30af\u63a5\u7d9a\u2192Socket.io\u63a5\u7d9a\u2192PeerJS\u63a5\u7d9a\n\nPeerJS\u306b\u306fP2P\u30ad\u30fc\u3092\u7ba1\u7406\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306bSocket.io\u3067\u3053\u308c\u3092\u901a\u77e5\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u8b58\u5225id\u3067\u3042\u308b`socket.id`\u3092P2P\u30ad\u30fc\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n`index.html`\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```html:index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Voicechat</title>\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/peerjs/0.3.14/peer.js\"></script>\n  <script>\nnavigator.webkitGetUserMedia({ audio: true }, function (stream) {\n  var peer;\n  var socket = io();\n  socket.on('connect', function () {\n    var options = {\n      host: location.hostname,\n      port: location.port,\n      path: '/api', // app.use('/api', peerServer);\u3068\u540c\u3058\u4f4d\u7f6e\u306b\u306a\u308b\u3088\u3046\u306b\n    };\n    peer = new Peer(socket.id, options);\n  });\n}, function(error) {\n  alert('Failed to get local stream', error);\n});\n  </script>\n</head>\n<body>\n  \n</body>\n</html>\n```\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c`new Peer`\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d0\u30fc\u306f`peerServer.on('connection')`[^1]\u304b\u3089P2P\u30ad\u30fc\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u51fa\u6765\u307e\u3059\u3002\n\n```js:server.js\n// Dependencies\nconst express = require('express');\nconst createHttpServer = require('http').createServer;\nconst createIo = require('socket.io');\nconst createPeerServer = require('peer').ExpressPeerServer;\n\n// Environment\nconst port = process.env.PORT || 59798;\n\n// Routes\nconst app = express();\nconst httpServer = createHttpServer(app);\nconst io = createIo(httpServer);\nconst peerServer = createPeerServer(httpServer);\n\napp.use('/api', peerServer);\napp.use(express.static(__dirname));\n\n// Boot\nhttpServer.listen(port, () => {\n  console.log(`Boot on http://localhost:${port}`);\n});\n\n// Manage p2p keys\nconst keys = [];\npeerServer.on('connection', (key) => {\n  keys.push(key);\n\n  console.log('connected', keys);\n\n  io.emit('keys', keys);// \u63a5\u7d9a\u4e2d\u306e\u5168\u3066\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078`keys`\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\n});\npeerServer.on('disconnect', (key) => {\n  const index = keys.indexOf(key);\n  if (index > -1) {\n    keys.splice(index, 1);\n  }\n  console.log('disconnect', keys);\n\n  io.emit('keys', keys);// \u540c\u4e0a\n});\n```\n\n```bash\nnpm start\n# Boot on http://localhost:59798\n# connected [ 'ZJ4vZ-bmXXE405AyAAAA' ]\n```\n\n# \u2192\u5f85\u6a5f\u2192\u5171\u6709\n\n\u524d\u8ff0\u306e`server.js`\u306b\u3088\u308a\u3001\u63a5\u7d9a\u304c\u66f4\u65b0\u3055\u308c\u308b\u5ea6\u306b`keys`\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u306e\u3067\u3001\u53d7\u4fe1\u3057\u305fP2P\u3092\u5143\u306bAudio\u8981\u7d20\u3092\u751f\u6210\u3059\u308c\u3070\u3001\u30de\u30a4\u30af\u97f3\u58f0\u306e\u5171\u6709\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n```index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Voicechat</title>\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/peerjs/0.3.14/peer.js\"></script>\n  <script>\nnavigator.webkitGetUserMedia({ audio: true }, function (stream) {\n  var peer;\n  var socket = io();\n  socket.on('connect', function () {\n    var options = {\n      host: location.hostname,\n      port: location.port,\n      path: '/api', // app.use('/api', peerServer);\u3068\u540c\u3058\u4f4d\u7f6e\u306b\u306a\u308b\u3088\u3046\u306b\n    };\n    peer = new Peer(socket.id, options);\n    peer.on('call', function (call) {\n      console.log('%s\u306bcall\u3055\u308c\u307e\u3057\u305f', call.peer);\n      call.answer(stream);\n    });\n  });\n\n  // \u53d7\u4fe1\u3057\u305f\u5168\u3066\u306eP2Pkey\u3092audio\u8981\u7d20\u306b\u5909\u63db\u3059\u308b\n  socket.on('keys', function (keys) {\n    var audios = document.querySelector('#audios');\n    audios.innerHTML = '';\n    \n    var index = keys.indexOf(socket.id);\n    if (index > -1) {\n      keys.splice(index, 1);// \u81ea\u5206\u81ea\u8eab\u3092\u7121\u8996\n    }\n    keys.forEach(function (key) {\n      var call = peer.call(key, stream);\n      if (call === undefined) {\n        console.log(key + '\u306a\u3093\u3066\u5c45\u307e\u305b\u3093');\n        return;\n      }\n      call.on('stream', function (remoteStream) {\n        var audio = new Audio;\n        audio.src = URL.createObjectURL(remoteStream);\n        audio.controls = true;\n        audio.play();\n\n        audios.appendChild(audio);\n      });\n    });\n  });\n}, function (error) {\n  alert('Failed to get local stream', error);\n});\n  </script>\n</head>\n<body>\n  \n<section id=\"audios\">\n  <p>\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u5f85\u3063\u3066\u3044\u307e\u3059\u2026</p>\n</section>\n\n</body>\n</html>\n```\n\n![\u307c\u3063\u3061](https://cloud.githubusercontent.com/assets/1548478/13287700/bb8b780a-db4b-11e5-9ef7-5cfda6ad8450.gif)\n\n# \u305d\u306e\u4ed6\u6ce8\u610f\u4e8b\u9805\n`https://`\u304b`localhost`\u4e0a\u3067\u306a\u3051\u308c\u3070\u3001getUserMedia\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8b66\u544a\u6587\u304c\u8868\u793a\u3055\u308c\u3066\u5931\u6557\u3057\u307e\u3059\u3002\n\n```js:http\u4e0a\u3067\u958b\u767a\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u3044\u3066\u5165\u529b\u3059\u308b\nnavigator.webkitGetUserMedia({audio:true},x => null,x => null)\n// getUserMedia() no longer works on insecure origins. To use this feature, you should consider switching your application to a secure origin, such as HTTPS. See https://goo.gl/rStTGz for more details.\n```\n\n\u305d\u306e\u305f\u3081\u3001https\u4e0a\u3067\u30c7\u30d7\u30ed\u30a4\u51fa\u6765\u308b\u74b0\u5883\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002[Heroku](https://www.heroku.com/)\u3084[c9](http://c9.io/)\u306a\u3069\u3002\n\n\u304a\u308f\u308a\u306b\n---\n> \u52d5\u4f5c\u78ba\u8a8d\u7528\u30ea\u30dd\u30b8\u30c8\u30ea\uff1a [59naga/peerjs-voicechat - github](https://github.com/59naga/peerjs-voicechat)\n\n\u53cb\u9054\u304c\u5c45\u306a\u304f\u3066\uff13\u6a5f\u4ee5\u4e0a\u306e\u52d5\u4f5c\u78ba\u8a8d\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f (\u25de\u2038\u25df\uff09\n\n[^1]: [ExpressPeerServer()](https://github.com/peers/peerjs-server/blob/0.2.8/lib/index.js#L8) < [express()](https://github.com/expressjs/express/blob/4.9.8/lib/express.js#L32) \u306e\u3088\u3046\u306a\u4f9d\u5b58\u3002\u2026\u63a5\u7d9a\u78ba\u7acb\u6642\u306b[.emit('connection')](https://github.com/peers/peerjs-server/blob/0.2.8/lib/server.js#L107)\n", "tags": ["JavaScript", "WebRTC", "PeerJS", "Socket.io", "Node.js"]}