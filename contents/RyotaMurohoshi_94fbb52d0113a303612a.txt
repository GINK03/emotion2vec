{"tags": ["Groovy"], "context": " More than 1 year has passed since last update.Unity\u3092\u59cb\u3081\u3068\u3059\u308b\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u958b\u767a\u74b0\u5883\u3067\u3001\u672c\u756a\u306e\u30a2\u30a4\u30b3\u30f3\u306f\u307e\u3060\u3067\u304d\u3066\u3044\u306a\u3044\u3051\u308c\u3069\u4eee\u306e\u753b\u50cf\u3067\u3084\u308a\u904e\u3054\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u6642\u3063\u3066\u3042\u308a\u307e\u3059\u3088\u306d\u3002(\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\u306a\u3044\u3067\u3059\u304b\u305d\u3046\u3067\u3059\u304b\u3002)\n\u3068\u308a\u3042\u3048\u305a\u4e00\u679a\u3060\u3051\u753b\u50cf\u306f\u3082\u3089\u3063\u305f\u3051\u308c\u3069\u3001\u672c\u756a\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u306f\u5404\u7a2e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u30fb\u5404\u7a2e\u30b5\u30a4\u30ba\u306f\u3082\u3089\u3048\u306a\u305d\u3046\u306a\u305d\u3093\u306a\u6642\u3001\u3053\u306eGroovy\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u3048\u3070\u5fc5\u8981\u306a\u30b5\u30a4\u30ba\u306e\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff01\nimport java.awt.Image\nimport java.awt.image.BufferedImage\nimport javax.imageio.ImageIO\n\ndef iconSizes = [\n    // iOS\n    57,\n    72,\n    76,\n    114,\n    120,\n    144,\n    152,\n    180,\n\n    // Android\n    36,\n    48,\n    72,\n    96,\n    144,\n    192,\n]\n\nif (args.size() != 1) {\n    println(\"usage : groovy create_icons.groovy YOUR_ICON_IMAGE_NAME\")\n    return\n}\n\ndef imagePath = args[0]\ndef inputImage = ImageIO.read(new File(imagePath))\n\niconSizes.each { iconSize ->\n    def iconName = \"icon${iconSize}x${iconSize}.png\"\n    createResizedIcon (inputImage, iconName, iconSize, iconSize)\n}\n\ndef createResizedIcon (def inputImage, def outputFilename, def width, def height) {\n    def outputFile = new File(outputFilename)\n    def scaledImage = inputImage.getScaledInstance(width,height,Image.SCALE_SMOOTH)\n\n    def bufferedImage = new BufferedImage((int)scaledImage.width,(int)scaledImage.height,BufferedImage.TYPE_4BYTE_ABGR)\n    def graphics = bufferedImage.getGraphics();\n    graphics.drawImage(scaledImage,0,0,null)\n    graphics.dispose()\n\n    ImageIO.write(bufferedImage,'PNG',outputFile)\n}\n\nUnity\u3092\u59cb\u3081\u3068\u3059\u308b\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u958b\u767a\u74b0\u5883\u3067\u3001\u672c\u756a\u306e\u30a2\u30a4\u30b3\u30f3\u306f\u307e\u3060\u3067\u304d\u3066\u3044\u306a\u3044\u3051\u308c\u3069\u4eee\u306e\u753b\u50cf\u3067\u3084\u308a\u904e\u3054\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u6642\u3063\u3066\u3042\u308a\u307e\u3059\u3088\u306d\u3002(\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\u306a\u3044\u3067\u3059\u304b\u305d\u3046\u3067\u3059\u304b\u3002)\n\n\u3068\u308a\u3042\u3048\u305a\u4e00\u679a\u3060\u3051\u753b\u50cf\u306f\u3082\u3089\u3063\u305f\u3051\u308c\u3069\u3001\u672c\u756a\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u306f\u5404\u7a2e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u30fb\u5404\u7a2e\u30b5\u30a4\u30ba\u306f\u3082\u3089\u3048\u306a\u305d\u3046\u306a\u305d\u3093\u306a\u6642\u3001\u3053\u306eGroovy\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u3048\u3070\u5fc5\u8981\u306a\u30b5\u30a4\u30ba\u306e\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff01\n\n```groovy:\nimport java.awt.Image\nimport java.awt.image.BufferedImage\nimport javax.imageio.ImageIO\n\ndef iconSizes = [\n    // iOS\n    57,\n    72,\n    76,\n    114,\n    120,\n    144,\n    152,\n    180,\n\n    // Android\n    36,\n    48,\n    72,\n    96,\n    144,\n    192,\n]\n\nif (args.size() != 1) {\n    println(\"usage : groovy create_icons.groovy YOUR_ICON_IMAGE_NAME\")\n    return\n}\n\ndef imagePath = args[0]\ndef inputImage = ImageIO.read(new File(imagePath))\n\niconSizes.each { iconSize ->\n    def iconName = \"icon${iconSize}x${iconSize}.png\"\n    createResizedIcon (inputImage, iconName, iconSize, iconSize)\n}\n\ndef createResizedIcon (def inputImage, def outputFilename, def width, def height) {\n    def outputFile = new File(outputFilename)\n    def scaledImage = inputImage.getScaledInstance(width,height,Image.SCALE_SMOOTH)\n\n    def bufferedImage = new BufferedImage((int)scaledImage.width,(int)scaledImage.height,BufferedImage.TYPE_4BYTE_ABGR)\n    def graphics = bufferedImage.getGraphics();\n    graphics.drawImage(scaledImage,0,0,null)\n    graphics.dispose()\n\n    ImageIO.write(bufferedImage,'PNG',outputFile)\n}\n```\n\n\n"}