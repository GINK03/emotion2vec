{"context": " More than 1 year has passed since last update.\n\n\u524d\u63d0\u6761\u4ef6\n\n\u30ed\u30fc\u30ab\u30eb\u3067Rails\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u52d5\u304f\nHeroku\u306bRails\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u30a2\u30c3\u30d7\u6e08\n\n\nHeroku\u5074\nGemfile\u306b\u8ffd\u8a18\uff1a\n\nGemfile\n# API\ngem 'grape'\n\n\ngem\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff1a\n$ bundle install\n\n{\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d}/app/\u76f4\u4e0b\u306bapi\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3059\u308b\u3002\napi\u30d5\u30a9\u30eb\u30c0\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3059\u308b\u3088\u3046application.rb\u306b\u8a18\u8ff0\uff1a\n\napplication.rb\nconfig.paths.add File.join('app', 'api'), glob: File.join('**', '*.rb')\n    config.autoload_paths += Dir[Rails.root.join('app', 'api', '*')]\n\n\n\u30eb\u30fc\u30c8\u8a2d\u5b9a\uff1a\n\nroutes.rb\nmount API_v1::API => '/'\n\n\n{\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d}/app/api/\u306b\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\uff1a\n\napi_v1.rb\nmodule API_v1\n  class API < Grape::API\n    version 'v1', using: :path\n    format :json\n    prefix :api\n\n    # responses\n    SUCCESS = 0\n    FAILURE = 400\n\n    helpers do\n      def response(ret, obj=nil)\n        if obj.nil?\n          return {ret: ret}\n        else\n          return {ret: ret, obj: obj}\n        end\n      end\n    end\n\n    resource :test do\n      get :rettest do\n        response(SUCCESS, {foo: \"bar\"})\n      end\n    end\n  end\nend\n\n\n\u4ee5\u4e0a\u306e\u5185\u5bb9\u3067Heroku\u3078push\u3001\u30da\u30fc\u30b8\u3092\u958b\u304f\uff1a\n$ git add -A\n$ git commit -m \"Grape\u5b9f\u88c5\"\n$ git push heroku master\n$ heroku open\n\nheroku open\u306eURL\u306b\u300c/api/v1/test/rettest\u300d\u3092\u8ffd\u52a0\u3057\u3066\u53e9\u304f\uff1a\n$ curl {Heoku\u306e\u30a2\u30d7\u30eaURL}/api/v1/test/rettest\n{\"ret\":0,\"obj\":{\"foo\":\"bar\"}}\n\nJSON\u8fd4\u3063\u3066\u304d\u3066\u308b\u306e\u3067Heroku\u5074\u306fOK\u3002\n\niOS\u5074\n\u3055\u304f\u3063\u3068AFNetworking\u3067\u5b9f\u88c5\u3059\u308b\u3002\n\u4eca\u56de\u306fPPNetworkManager\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3001\u4ee5\u4e0b\u8a18\u8ff0\u3057\u305f\uff1a\n\nPPNetworkManager.h\n@interface PPNetworkManager : NSObject\n\n+ (instancetype)sharedManager;\n- (void)responseTest;\n\n@end\n\n\n\nPPNetworkManager.m\n#import \"PPNetworkManager.h\"\n#import \"AFNetworking.h\"\n\n@implementation PPNetworkManager\n\nstatic PPNetworkManager *sharedManager = nil;\n+ (instancetype)sharedManager\n{\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        sharedManager = [[PPNetworkManager alloc] init];\n    });\n    return sharedManager;\n}\n\n- (void)responseTest\n{\n    AFHTTPRequestOperationManager* manager = [AFHTTPRequestOperationManager manager];\n\n    // URL\u5909\u66f4\u4e88\u5b9a\n    [manager GET:@\"{Heoku\u306e\u30a2\u30d7\u30eaURL}/api/v1/test/rettest\"\n      parameters:nil success:^(AFHTTPRequestOperation *operation, id responseObject) {\n          NSLog(@\"response: %@\", responseObject);\n      } failure:^(AFHTTPRequestOperation *operation, NSError *error) {\n          NSLog(@\"Error: %@\", error);\n      }];\n}\n\n@end\n\n\n\u3042\u3068\u306fViewController\u306a\u308aAppDelegate\u306a\u308a\u3067\u547c\u3073\u51fa\u3057\uff1a\n#import \"PPNetworkManager.h\"\n\n// -- \u4e2d\u7565 -- \n\n[[PPNetworkManager sharedManager] responseTest];\n\n\n## \u524d\u63d0\u6761\u4ef6\n\n- \u30ed\u30fc\u30ab\u30eb\u3067Rails\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u52d5\u304f\n- Heroku\u306bRails\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u30a2\u30c3\u30d7\u6e08\n\n\n## Heroku\u5074\n\nGemfile\u306b\u8ffd\u8a18\uff1a\n\n```ruby:Gemfile\n# API\ngem 'grape'\n```\n\ngem\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff1a\n\n```shell:\n$ bundle install\n```\n\n{\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d}/app/\u76f4\u4e0b\u306bapi\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3059\u308b\u3002\n\napi\u30d5\u30a9\u30eb\u30c0\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3059\u308b\u3088\u3046application.rb\u306b\u8a18\u8ff0\uff1a\n\n```ruby:application.rb\nconfig.paths.add File.join('app', 'api'), glob: File.join('**', '*.rb')\n    config.autoload_paths += Dir[Rails.root.join('app', 'api', '*')]\n```\n\n\u30eb\u30fc\u30c8\u8a2d\u5b9a\uff1a\n\n```ruby:routes.rb\nmount API_v1::API => '/'\n```\n\n{\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d}/app/api/\u306b\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\uff1a\n\n```ruby:api_v1.rb\nmodule API_v1\n  class API < Grape::API\n    version 'v1', using: :path\n    format :json\n    prefix :api\n\n    # responses\n    SUCCESS = 0\n    FAILURE = 400\n \n    helpers do\n      def response(ret, obj=nil)\n        if obj.nil?\n          return {ret: ret}\n        else\n          return {ret: ret, obj: obj}\n        end\n      end\n    end\n\n    resource :test do\n      get :rettest do\n        response(SUCCESS, {foo: \"bar\"})\n      end\n    end\n  end\nend\n```\n\n\u4ee5\u4e0a\u306e\u5185\u5bb9\u3067Heroku\u3078push\u3001\u30da\u30fc\u30b8\u3092\u958b\u304f\uff1a\n\n```shell:\n$ git add -A\n$ git commit -m \"Grape\u5b9f\u88c5\"\n$ git push heroku master\n$ heroku open\n```\n\nheroku open\u306eURL\u306b\u300c/api/v1/test/rettest\u300d\u3092\u8ffd\u52a0\u3057\u3066\u53e9\u304f\uff1a\n\n```\n$ curl {Heoku\u306e\u30a2\u30d7\u30eaURL}/api/v1/test/rettest\n{\"ret\":0,\"obj\":{\"foo\":\"bar\"}}\n```\n\nJSON\u8fd4\u3063\u3066\u304d\u3066\u308b\u306e\u3067Heroku\u5074\u306fOK\u3002\n\n\n## iOS\u5074\n\n\u3055\u304f\u3063\u3068AFNetworking\u3067\u5b9f\u88c5\u3059\u308b\u3002\n\u4eca\u56de\u306fPPNetworkManager\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3001\u4ee5\u4e0b\u8a18\u8ff0\u3057\u305f\uff1a\n\n```ObjC:PPNetworkManager.h\n@interface PPNetworkManager : NSObject\n\n+ (instancetype)sharedManager;\n- (void)responseTest;\n\n@end\n```\n\n\n```ObjC:PPNetworkManager.m\n#import \"PPNetworkManager.h\"\n#import \"AFNetworking.h\"\n\n@implementation PPNetworkManager\n\nstatic PPNetworkManager *sharedManager = nil;\n+ (instancetype)sharedManager\n{\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        sharedManager = [[PPNetworkManager alloc] init];\n    });\n    return sharedManager;\n}\n\n- (void)responseTest\n{\n    AFHTTPRequestOperationManager* manager = [AFHTTPRequestOperationManager manager];\n    \n    // URL\u5909\u66f4\u4e88\u5b9a\n    [manager GET:@\"{Heoku\u306e\u30a2\u30d7\u30eaURL}/api/v1/test/rettest\"\n      parameters:nil success:^(AFHTTPRequestOperation *operation, id responseObject) {\n          NSLog(@\"response: %@\", responseObject);\n      } failure:^(AFHTTPRequestOperation *operation, NSError *error) {\n          NSLog(@\"Error: %@\", error);\n      }];\n}\n\n@end\n```\n\n\u3042\u3068\u306fViewController\u306a\u308aAppDelegate\u306a\u308a\u3067\u547c\u3073\u51fa\u3057\uff1a\n\n```ObjC:\n#import \"PPNetworkManager.h\"\n\n// -- \u4e2d\u7565 -- \n\n[[PPNetworkManager sharedManager] responseTest];\n```\n", "tags": ["iOS", "afnetworking", "grape", "Rails", "Heroku"]}