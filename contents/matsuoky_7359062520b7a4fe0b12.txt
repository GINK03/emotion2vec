{"context": "(\u30a8\u30d4\u30bd\u30fc\u30c90)\n\u3082\u3068\u3082\u3068\u306fLineBot\u3067Twitter\u60c5\u5831\u3092\u6d41\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u305f\u3063\u305f\u3068\u3053\u308d\u304b\u3089\u306f\u3058\u307e\u308b\u3002\nLine\u30a2\u30ab\u30a6\u30f3\u30c8\u3068Twitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u9023\u643a\u304c\u5fc5\u8981\u3060\u306a\u3002\nTwitter\u306eGo OAuth\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3075\u3080\u3075\u3080Anaconda\u3067\u4f7f\u3063\u3066\u308b\u3084\u3064\u3067\u3044\u3044\u304b\u3002\nLine\u306f\u3001\u3001\u3042\u308c\u3001\u898b\u3064\u304b\u3089\u306a\u3044\u306a\u3002\n\u3042\u30fc\u3001Line\u306eOAuth\u4ed5\u69d8\u3063\u3066\u697d\u3061\u3093\u3060\u304b\u3089\u307f\u3093\u306a\u30a4\u30c1\u304b\u3089\u66f8\u3044\u3066\u308b\u306e\u304b\u3002\n\u3046\u30fc\u3093\u3067\u3082\u5c11\u3057\u3067\u3082\u697d\u3057\u305f\u3044\u4eba\u306f\u3044\u308b\u3060\u308d\u3046\u3057\u30b5\u30f3\u30d7\u30eb\u306b\u3082\u306a\u308b\u3088\u306d\u3002\n\u307f\u3093Go\u8aad\u3093\u3067\u610f\u8b58\u9ad8\u304f\u306a\u3063\u305f\u3057Github\u306b\u516c\u958b\u3060\u3002\n\uff76\uff77\uff76\uff77\u3002\n\u30b3\u30fc\u30c9\u91cf\u3059\u304f\u306d\u3047\u30fc\u30fc\n\u3051\u3069\u305b\u3063\u304b\u304f\u3060\u3057\u8ab0\u304b\u306e\u5f79\u306b\u7acb\u3064\u3053\u3068\u3092\u7948\u3063\u3066\u516c\u958b\u3057\u3088\u3046\u3002\u30ad\u30fc\u30bf\u3082\u66f8\u3053\u3046\u3002\u3002\n\ngithub\u306f\u3053\u3053\nhttps://github.com/matsuoky/linein\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\nLine\u3067OAuth\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3044\nREST API\u7528\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u305f\u3044\n\n\nLine\u3067OAuth\u30ed\u30b0\u30a4\u30f3\nLine\u306e\u753b\u50cf\u3092\u62fe\u3063\u3066\u304f\u308b\u306a\u308a\u3057\u3066\u9069\u5f53\u306a\u30ed\u30b0\u30a4\u30f3\u30dc\u30bf\u30f3\u3092\u4f5c\u308b\u3002\n\u30ed\u30b0\u30a4\u30f3\u30dc\u30bf\u30f3\u3092\u30dd\u30c1\u3063\u305f\u3068\u304d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u5148\u3067\u3053\u3093\u306a\u611f\u3058\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u3002\nfunc (f GetLineOauthHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n        l := linein.NewLinein(clientId, clientSecret)\n        url, values, err := l.GetWebLoginURL(\"http://\"+r.Host+\"/line_auth_callback\", \"\") \n        if err != nil {\n                fmt.Fprintf(w, \"%v\", err)\n                return\n        }   \n        http.Redirect(w, r, url+\"?\"+values.Encode(), http.StatusFound)\n}\n\n\u3042\u3001linein\u30d1\u30c3\u30b1\u30fc\u30b8\u306fimport\u3057\u3066\u3042\u308b\u524d\u63d0\u3067\u3059\u3002\nimport \"github.com/matsuoky/linein\"\nclientId clientSecret \u306fLineLogin\u306e\u30c1\u30e3\u30cd\u30eb\u3092\u4f5c\u6210\u3057\u305f\u969b\u306b\u8868\u793a\u3055\u308c\u308b Channel ID, Channel Secret \u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\nID, Secret\u3092\u672a\u53d6\u5f97\u306e\u65b9\u306f \u3053\u3061\u3089 \u306e\u30ea\u30f3\u30af\u304b\u3089\u3069\u3046\u305e\n\u8a71\u3082\u3069\u3063\u3066\u3001\u3001\u3059\u308b\u3068Line\u3055\u3093\u304c\u7528\u610f\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u3002\n\u9077\u79fb\u5f8c\u306e\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068 l.GetWebLoginURL(\"http://\"+r.Host+\"/line_auth_callback\", \"\") \u3067\u30bb\u30c3\u30c8\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL\u306b\u3055\u3089\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u3002\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5148\u3067\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u3053\u3093\u306a\u611f\u3058\u3002\nfunc (f GetLineAuthCallbackHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n        code := r.FormValue(\"code\")\n        if code == \"\" {\n                fmt.Fprintf(w, \"code is not found\")\n                return\n        }\n        l := linein.NewLinein(clientId, clientSecret)\n        url, values, err := l.GetAccessTokenURL(code, \"\")\n        if err != nil {\n                fmt.Fprintf(w, \"GetAccessTokenURL: %v\", err)\n                return\n        }\n        c := appengine.NewContext(r)\n        client := urlfetch.Client(c)\n        res, err := linein.Post(client, url, values)\n        if err != nil {\n                fmt.Fprintf(w, \"line auth post err: %v\", err)\n                return\n        }\n        defer res.Body.Close()\n        lUser := new(LineUser)\n        if err := json.NewDecoder(res.Body).Decode(lUser); err != nil {\n                fmt.Fprintf(w, \"decode err: %v\", err)\n                return\n        }\n        ...\n\n\u3053\u3053\u306b\u6765\u305f\u6642\u70b9\u3067\u306f\u307e\u3060REST API\u7528\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3082\u30e6\u30fc\u30b6\u60c5\u5831\u3082\u5165\u3063\u3066\u3044\u306a\u3044\u3002\n\u3053\u308c\u3089\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u4e00\u6642\u7684\u306a\u30c8\u30fc\u30af\u30f3(code)\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\u3067\u306f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306eURL\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3002\nurl, values, err := l.GetAccessTokenURL(code, \"\")\n\nvalues\u306fnet/url.Values\u578b\u306a\u306e\u3067\u3053\u308c\u3092\u305d\u306e\u307e\u307ePost\u3059\u308c\u3070OK\u3002\n\u4e00\u5fdcPost\u306e\u30e9\u30c3\u30d1\u30fc\u3082\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u4eca\u56de\u306f\u3053\u308c\u3092\u4f7f\u3046\u3002\nres, err := linein.Post(nil, url, values)\n\nappengine\u30e6\u30fc\u30b6\u306f\u3053\u3053\u3067HTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5165\u308c\u66ff\u3048\u308b\u3002\nc := appengine.NewContext(r)\nclient := urlfetch.Client(c)\nres, err := linein.Post(client, url, values)\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u969b\u306b\u4f7f\u3046\u578b\u306e\u4f8b\u3002\ntype LineUser struct {\n        Mid          string `json:\"mid\"`\n        AccessToken  string `json:\"access_token\"`\n        ExpiresIn    int    `json:\"expires_in\"`\n        RefreshToken string `json:\"refresh_token\"`\n}\n\nAccessToken \u306e\u5024\u3092\u5229\u7528\u3059\u308c\u3070Line\u306e\u63d0\u4f9b\u3059\u308bREST API\u3092\u4f7f\u3048\u308b\u3002\nMid \u306e\u5024\u3092\u4fdd\u5b58\u3057\u3066\u30ed\u30b0\u30a4\u30f3\u7528\u306e\u8b58\u5225\u5b50\u3068\u3057\u3066\u4f7f\u3044\u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3002\n\u307e\u305f\u3001Messaging API \u3067\u4f7f\u7528\u3055\u308c\u308bUserId\u3068Mid\u306f\u4e00\u81f4\u3059\u308b\u306f\u305a\u3002\n(\u30a8\u30d4\u30bd\u30fc\u30c90)\n\u3082\u3068\u3082\u3068\u306fLineBot\u3067Twitter\u60c5\u5831\u3092\u6d41\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u305f\u3063\u305f\u3068\u3053\u308d\u304b\u3089\u306f\u3058\u307e\u308b\u3002\nLine\u30a2\u30ab\u30a6\u30f3\u30c8\u3068Twitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u9023\u643a\u304c\u5fc5\u8981\u3060\u306a\u3002\nTwitter\u306eGo OAuth\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3075\u3080\u3075\u3080Anaconda\u3067\u4f7f\u3063\u3066\u308b\u3084\u3064\u3067\u3044\u3044\u304b\u3002\nLine\u306f\u3001\u3001\u3042\u308c\u3001\u898b\u3064\u304b\u3089\u306a\u3044\u306a\u3002\n\u3042\u30fc\u3001Line\u306eOAuth\u4ed5\u69d8\u3063\u3066\u697d\u3061\u3093\u3060\u304b\u3089\u307f\u3093\u306a\u30a4\u30c1\u304b\u3089\u66f8\u3044\u3066\u308b\u306e\u304b\u3002\n\u3046\u30fc\u3093\u3067\u3082\u5c11\u3057\u3067\u3082\u697d\u3057\u305f\u3044\u4eba\u306f\u3044\u308b\u3060\u308d\u3046\u3057\u30b5\u30f3\u30d7\u30eb\u306b\u3082\u306a\u308b\u3088\u306d\u3002\n[\u307f\u3093Go](http://gihyo.jp/book/2016/978-4-7741-8392-3)\u8aad\u3093\u3067\u610f\u8b58\u9ad8\u304f\u306a\u3063\u305f\u3057Github\u306b\u516c\u958b\u3060\u3002\n\uff76\uff77\uff76\uff77\u3002\n\u30b3\u30fc\u30c9\u91cf\u3059\u304f\u306d\u3047\u30fc\u30fc\n\u3051\u3069\u305b\u3063\u304b\u304f\u3060\u3057\u8ab0\u304b\u306e\u5f79\u306b\u7acb\u3064\u3053\u3068\u3092\u7948\u3063\u3066\u516c\u958b\u3057\u3088\u3046\u3002\u30ad\u30fc\u30bf\u3082\u66f8\u3053\u3046\u3002\u3002\n\n## github\u306f\u3053\u3053 ##\nhttps://github.com/matsuoky/linein\n\n## \u3084\u308a\u305f\u3044\u3053\u3068\n- Line\u3067OAuth\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3044\n- REST API\u7528\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u305f\u3044\n\n## Line\u3067OAuth\u30ed\u30b0\u30a4\u30f3\nLine\u306e\u753b\u50cf\u3092\u62fe\u3063\u3066\u304f\u308b\u306a\u308a\u3057\u3066\u9069\u5f53\u306a\u30ed\u30b0\u30a4\u30f3\u30dc\u30bf\u30f3\u3092\u4f5c\u308b\u3002\n\u30ed\u30b0\u30a4\u30f3\u30dc\u30bf\u30f3\u3092\u30dd\u30c1\u3063\u305f\u3068\u304d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u5148\u3067\u3053\u3093\u306a\u611f\u3058\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u3002\n\n```go\nfunc (f GetLineOauthHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n        l := linein.NewLinein(clientId, clientSecret)\n        url, values, err := l.GetWebLoginURL(\"http://\"+r.Host+\"/line_auth_callback\", \"\") \n        if err != nil {\n                fmt.Fprintf(w, \"%v\", err)\n                return\n        }   \n        http.Redirect(w, r, url+\"?\"+values.Encode(), http.StatusFound)\n}\n```\n\n\u3042\u3001linein\u30d1\u30c3\u30b1\u30fc\u30b8\u306fimport\u3057\u3066\u3042\u308b\u524d\u63d0\u3067\u3059\u3002\n``` import \"github.com/matsuoky/linein\" ```\n\n``` clientId ``` ``` clientSecret ``` \u306fLineLogin\u306e\u30c1\u30e3\u30cd\u30eb\u3092\u4f5c\u6210\u3057\u305f\u969b\u306b\u8868\u793a\u3055\u308c\u308b Channel ID, Channel Secret \u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\nID, Secret\u3092\u672a\u53d6\u5f97\u306e\u65b9\u306f [\u3053\u3061\u3089](https://business.line.me/ja/) \u306e\u30ea\u30f3\u30af\u304b\u3089\u3069\u3046\u305e\n\n\u8a71\u3082\u3069\u3063\u3066\u3001\u3001\u3059\u308b\u3068Line\u3055\u3093\u304c\u7528\u610f\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u3002\n\u9077\u79fb\u5f8c\u306e\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068 ``` l.GetWebLoginURL(\"http://\"+r.Host+\"/line_auth_callback\", \"\") ``` \u3067\u30bb\u30c3\u30c8\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL\u306b\u3055\u3089\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u3002\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5148\u3067\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```\nfunc (f GetLineAuthCallbackHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n        code := r.FormValue(\"code\")\n        if code == \"\" {\n                fmt.Fprintf(w, \"code is not found\")\n                return\n        }\n        l := linein.NewLinein(clientId, clientSecret)\n        url, values, err := l.GetAccessTokenURL(code, \"\")\n        if err != nil {\n                fmt.Fprintf(w, \"GetAccessTokenURL: %v\", err)\n                return\n        }\n        c := appengine.NewContext(r)\n        client := urlfetch.Client(c)\n        res, err := linein.Post(client, url, values)\n        if err != nil {\n                fmt.Fprintf(w, \"line auth post err: %v\", err)\n                return\n        }\n        defer res.Body.Close()\n        lUser := new(LineUser)\n        if err := json.NewDecoder(res.Body).Decode(lUser); err != nil {\n                fmt.Fprintf(w, \"decode err: %v\", err)\n                return\n        }\n        ...\n```\n\n\u3053\u3053\u306b\u6765\u305f\u6642\u70b9\u3067\u306f\u307e\u3060REST API\u7528\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3082\u30e6\u30fc\u30b6\u60c5\u5831\u3082\u5165\u3063\u3066\u3044\u306a\u3044\u3002\n\u3053\u308c\u3089\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u4e00\u6642\u7684\u306a\u30c8\u30fc\u30af\u30f3(code)\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\u3067\u306f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306eURL\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3002\n\n```\nurl, values, err := l.GetAccessTokenURL(code, \"\")\n```\n\nvalues\u306fnet/url.Values\u578b\u306a\u306e\u3067\u3053\u308c\u3092\u305d\u306e\u307e\u307ePost\u3059\u308c\u3070OK\u3002\n\u4e00\u5fdcPost\u306e\u30e9\u30c3\u30d1\u30fc\u3082\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u4eca\u56de\u306f\u3053\u308c\u3092\u4f7f\u3046\u3002\n\n```\nres, err := linein.Post(nil, url, values)\n```\n\nappengine\u30e6\u30fc\u30b6\u306f\u3053\u3053\u3067HTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5165\u308c\u66ff\u3048\u308b\u3002\n\n```\nc := appengine.NewContext(r)\nclient := urlfetch.Client(c)\nres, err := linein.Post(client, url, values)\n```\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u969b\u306b\u4f7f\u3046\u578b\u306e\u4f8b\u3002\n\n```go\ntype LineUser struct {\n        Mid          string `json:\"mid\"`\n        AccessToken  string `json:\"access_token\"`\n        ExpiresIn    int    `json:\"expires_in\"`\n        RefreshToken string `json:\"refresh_token\"`\n}\n```\n\n``` AccessToken ``` \u306e\u5024\u3092\u5229\u7528\u3059\u308c\u3070Line\u306e\u63d0\u4f9b\u3059\u308bREST API\u3092\u4f7f\u3048\u308b\u3002\n``` Mid ``` \u306e\u5024\u3092\u4fdd\u5b58\u3057\u3066\u30ed\u30b0\u30a4\u30f3\u7528\u306e\u8b58\u5225\u5b50\u3068\u3057\u3066\u4f7f\u3044\u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3002\n\u307e\u305f\u3001Messaging API \u3067\u4f7f\u7528\u3055\u308c\u308bUserId\u3068Mid\u306f\u4e00\u81f4\u3059\u308b\u306f\u305a\u3002\n", "tags": ["Go", "LineLogin", "linebot"]}