{"context": "myshell \u3092\u4f5c\u3063\u3066\u307f\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u6642\u66f8\u3044\u305f\u3082\u306e\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u6e21\u3055\u308c\u308b\u74b0\u5883\u5909\u6570\u306b\u5165\u3063\u3066\u3044\u308b\u3001\u30b3\u30de\u30f3\u30c9\u306e\u5728\u308a\u51e6\u3092 char * \u578b\u306e\u914d\u5217\u306b\u5165\u308c\u307e\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u74b0\u5883\u5909\u6570\u304c\u5165\u3063\u3066\u3044\u308b envp[] \u306f\u3069\u3093\u306a\u72b6\u614b\u306a\u306e\u304b\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\nshow_all.c\nint show_all(char *envp[])\n{\n  while(*envp)\n      printf(\"%s\\n\",*envp++);\n\n  return 0;\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 envp[18] \u306b\u6b21\u306e\u3088\u3046\u306a\u5024\u304c\u5165\u3063\u3066\u3044\u307e\u3057\u305f\u3002\nPATH=/Library/Frameworks/Python.framework/Versions/3.5/bin:/Users/rild/.pyenv/bin:/Users/rild/.rbenv/shims:/opt/local/bin:/opt/local/sbin:/opt/local/bin:/opt/local/sbin:/Users/rild/.nvm/versions/node/v5.5.0/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Library/TeX/texbin:/Library/Frameworks/Python.framework/Versions/3.5/bin:/Users/rild/.pyenv/bin:/Users/rild/.rbenv/shims:/opt/local/bin:/opt/local/sbin:/Users/rild/.sdkman/candidates/kotlin/current/bin:/Users/rild/.sdkman/candidates/gradle/current/bin:/Users/rild/Library/Android/sdk/platform-tools:/Users/rild/Documents/android/apktool.jar:/usr/local/share/python:/Users/rild/Library/Android/sdk/platform-tools:/Users/rild/Documents/android/apktool.jar:/usr/local/share/python\n\n\u3053\u3053\u304b\u3089\u3001 : \u3067\u533a\u5207\u3089\u308c\u305f\u3001\u30b3\u30de\u30f3\u30c9\u306e\u30d1\u30b9\u3092\u53d6\u308a\u51fa\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u3002\n\n\u76ee\u6a19\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\npath[0]=/Library/Frameworks/Python.framework/Versions/3.5/bin\npath[1]=/Users/rild/.pyenv/bin\npath[2]=/Users/rild/.rbenv/shims\npath[3]=/opt/local/bin\npath[4]=/opt/local/sbin\npath[5]=/opt/local/bin\npath[6]=/opt/local/sbin\npath[7]=/Users/rild/.nvm/versions/node/v5.5.0/bin\npath[8]=/usr/local/bin\npath[9]=/usr/bin\npath[10]=/bin\npath[11]=/usr/sbin\npath[12]=/sbin\npath[13]=/opt/X11/bin\npath[14]=/Library/TeX/texbin\npath[15]=/Library/Frameworks/Python.framework/Versions/3.5/bin\npath[16]=/Users/rild/.pyenv/bin\npath[17]=/Users/rild/.rbenv/shims\npath[18]=/opt/local/bin\npath[19]=/opt/local/sbin\npath[20]=/Users/rild/.sdkman/candidates/kotlin/current/bin\npath[21]=/Users/rild/.sdkman/candidates/gradle/current/bin\npath[22]=/Users/rild/Library/Android/sdk/platform-tools\npath[23]=/Users/rild/Documents/android/apktool.jar\npath[24]=/usr/local/share/python\npath[25]=/Users/rild/Library/Android/sdk/platform-tools\npath[26]=/Users/rild/Documents/android/apktool.jar\npath[27]=/usr/local/share/python\n\n\n\u30b3\u30fc\u30c9\n\nenvp.c\n#include <string.h>\n#include <stdio.h>\n\n// split funtion with `:`---> start\nint iscolon(char p)\n{\n  return p == ':';\n}\n\nvoid\nsplit_wthcolon(int *path_c, char *path[], char *p)\n{\n    *path_c = 0;\n\n    for(;;) {\n      while (iscolon(*p))\n          p++;\n      if (*p == '\\0') return;\n      path[(*path_c)++] = p;\n\n      while (*p && !iscolon(*p)) {\n        p++;\n      }\n      if (*p == '\\0')\n        return;\n      *p++ = '\\0';\n    }\n}\n// split funtion <--- end\n\n// search \"PATH=\" index --->\nint get_path_index(char *envp[])\n{\n  int envc = 0;\n\n  // find char * pointing \"PATH=...\"\n  while(*envp) {\n    if (!strncmp(*envp, \"PATH=\", 5)) {\n      return envc;\n    }\n    envc++;\n    envp++;\n  }\n  return 0;\n}\n// search \"PATH=\" index <--- end\n\n// split to path array\nint get_path_from_buf(int * path_c, char *path[], char *buf)\n{\n  int i;\n  for (i = 0; i < 5; i++) buf++; // rm \"PATH=\"\n  split_wthcolon(path_c, path, buf);\n\n  return 0;\n}\n\nint main(int argc, char *argv[], char *envp[])\n{\n  char buf[1024]; // PATH contains '762 words'\n\n  strcpy(buf, envp[get_path_index(envp)]);\n  fprintf(stderr, \"%d\\n\", get_path_index(envp)); // 18\n  fprintf(stderr, \"%s\\n\", buf); // envp[18]\n\n  char *path[32]; // PATH contatins '27' colon ':'\n  int path_c; // path count\n  get_path_from_buf(&path_c, path, buf);\n\n  int i;\n  for (i = 0; i < path_c; i++) {\n    fprintf(stderr, \"%s\\n\", path[i]);\n  }\n\n  return 0;\n}\n\n\n\u6700\u521d\u3001 get_path_from_buf \u306b\u76f4\u63a5 envp[get_path_index(envp)] \u3092\u6e21\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u4e2d\u8eab\u304c\u66f8\u304d\u63db\u308f\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u5024\u3092\u30b3\u30d4\u30fc\u3057\u3066\u5f15\u6570\u306b\u6e21\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u6700\u5f8c\u306b\nfor (i = 0; i < 5; i++) buf++; // rm \"PATH=\" \u306e\u3042\u305f\u308a\u3068\u304b\u3059\u3054\u304f\u3044\u3051\u3066\u306a\u3044\u306e\u3067\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308b\u306f\u305a\u3002\u3002\u3002\n\n\u53c2\u8003\n\nstrncmp function\n\n\n\u8ffd\u8a18\ngetenv\u95a2\u6570\u306bPATH\u3092\u6307\u5b9a\u3059\u308c\u3070\u3001get_path_index\u3068\u304b\u306f\u3044\u3089\u306a\u304b\u3063\u305f\u3067\u3059\u306d\u3002\nhttp://www.c-lang.net/general29/index.html\nmyshell \u3092\u4f5c\u3063\u3066\u307f\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u6642\u66f8\u3044\u305f\u3082\u306e\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n# \u3084\u308a\u305f\u3044\u3053\u3068\n\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u6e21\u3055\u308c\u308b\u74b0\u5883\u5909\u6570\u306b\u5165\u3063\u3066\u3044\u308b\u3001\u30b3\u30de\u30f3\u30c9\u306e\u5728\u308a\u51e6\u3092 `char *` \u578b\u306e\u914d\u5217\u306b\u5165\u308c\u307e\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\u74b0\u5883\u5909\u6570\u304c\u5165\u3063\u3066\u3044\u308b `envp[]` \u306f\u3069\u3093\u306a\u72b6\u614b\u306a\u306e\u304b\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\n```show_all.c\nint show_all(char *envp[])\n{\n  while(*envp)\n      printf(\"%s\\n\",*envp++);\n\n  return 0;\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 `envp[18]` \u306b\u6b21\u306e\u3088\u3046\u306a\u5024\u304c\u5165\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n\n```logos\nPATH=/Library/Frameworks/Python.framework/Versions/3.5/bin:/Users/rild/.pyenv/bin:/Users/rild/.rbenv/shims:/opt/local/bin:/opt/local/sbin:/opt/local/bin:/opt/local/sbin:/Users/rild/.nvm/versions/node/v5.5.0/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Library/TeX/texbin:/Library/Frameworks/Python.framework/Versions/3.5/bin:/Users/rild/.pyenv/bin:/Users/rild/.rbenv/shims:/opt/local/bin:/opt/local/sbin:/Users/rild/.sdkman/candidates/kotlin/current/bin:/Users/rild/.sdkman/candidates/gradle/current/bin:/Users/rild/Library/Android/sdk/platform-tools:/Users/rild/Documents/android/apktool.jar:/usr/local/share/python:/Users/rild/Library/Android/sdk/platform-tools:/Users/rild/Documents/android/apktool.jar:/usr/local/share/python\n```\n\n\n\u3053\u3053\u304b\u3089\u3001 `:` \u3067\u533a\u5207\u3089\u308c\u305f\u3001\u30b3\u30de\u30f3\u30c9\u306e\u30d1\u30b9\u3092\u53d6\u308a\u51fa\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u3002\n\n# \u76ee\u6a19\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\n\n```logos\npath[0]=/Library/Frameworks/Python.framework/Versions/3.5/bin\npath[1]=/Users/rild/.pyenv/bin\npath[2]=/Users/rild/.rbenv/shims\npath[3]=/opt/local/bin\npath[4]=/opt/local/sbin\npath[5]=/opt/local/bin\npath[6]=/opt/local/sbin\npath[7]=/Users/rild/.nvm/versions/node/v5.5.0/bin\npath[8]=/usr/local/bin\npath[9]=/usr/bin\npath[10]=/bin\npath[11]=/usr/sbin\npath[12]=/sbin\npath[13]=/opt/X11/bin\npath[14]=/Library/TeX/texbin\npath[15]=/Library/Frameworks/Python.framework/Versions/3.5/bin\npath[16]=/Users/rild/.pyenv/bin\npath[17]=/Users/rild/.rbenv/shims\npath[18]=/opt/local/bin\npath[19]=/opt/local/sbin\npath[20]=/Users/rild/.sdkman/candidates/kotlin/current/bin\npath[21]=/Users/rild/.sdkman/candidates/gradle/current/bin\npath[22]=/Users/rild/Library/Android/sdk/platform-tools\npath[23]=/Users/rild/Documents/android/apktool.jar\npath[24]=/usr/local/share/python\npath[25]=/Users/rild/Library/Android/sdk/platform-tools\npath[26]=/Users/rild/Documents/android/apktool.jar\npath[27]=/usr/local/share/python\n```\n\n# \u30b3\u30fc\u30c9\n\n```envp.c\n#include <string.h>\n#include <stdio.h>\n\n// split funtion with `:`---> start\nint iscolon(char p)\n{\n  return p == ':';\n}\n\nvoid\nsplit_wthcolon(int *path_c, char *path[], char *p)\n{\n    *path_c = 0;\n\n    for(;;) {\n      while (iscolon(*p))\n          p++;\n      if (*p == '\\0') return;\n      path[(*path_c)++] = p;\n\n      while (*p && !iscolon(*p)) {\n        p++;\n      }\n      if (*p == '\\0')\n        return;\n      *p++ = '\\0';\n    }\n}\n// split funtion <--- end\n\n// search \"PATH=\" index --->\nint get_path_index(char *envp[])\n{\n  int envc = 0;\n\n  // find char * pointing \"PATH=...\"\n  while(*envp) {\n    if (!strncmp(*envp, \"PATH=\", 5)) {\n      return envc;\n    }\n    envc++;\n    envp++;\n  }\n  return 0;\n}\n// search \"PATH=\" index <--- end\n\n// split to path array\nint get_path_from_buf(int * path_c, char *path[], char *buf)\n{\n  int i;\n  for (i = 0; i < 5; i++) buf++; // rm \"PATH=\"\n  split_wthcolon(path_c, path, buf);\n\n  return 0;\n}\n\nint main(int argc, char *argv[], char *envp[])\n{\n  char buf[1024]; // PATH contains '762 words'\n\n  strcpy(buf, envp[get_path_index(envp)]);\n  fprintf(stderr, \"%d\\n\", get_path_index(envp)); // 18\n  fprintf(stderr, \"%s\\n\", buf); // envp[18]\n\n  char *path[32]; // PATH contatins '27' colon ':'\n  int path_c; // path count\n  get_path_from_buf(&path_c, path, buf);\n\n  int i;\n  for (i = 0; i < path_c; i++) {\n    fprintf(stderr, \"%s\\n\", path[i]);\n  }\n\n  return 0;\n}\n```\n\n\u6700\u521d\u3001 `get_path_from_buf` \u306b\u76f4\u63a5 `envp[get_path_index(envp)]` \u3092\u6e21\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u4e2d\u8eab\u304c\u66f8\u304d\u63db\u308f\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u5024\u3092\u30b3\u30d4\u30fc\u3057\u3066\u5f15\u6570\u306b\u6e21\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u6700\u5f8c\u306b\n`for (i = 0; i < 5; i++) buf++; // rm \"PATH=\"` \u306e\u3042\u305f\u308a\u3068\u304b\u3059\u3054\u304f\u3044\u3051\u3066\u306a\u3044\u306e\u3067\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308b\u306f\u305a\u3002\u3002\u3002\n\n# \u53c2\u8003\n- [strncmp function](http://www9.plala.or.jp/sgwr-t/lib/strncmp.html)\n\n# \u8ffd\u8a18\n`getenv`\u95a2\u6570\u306bPATH\u3092\u6307\u5b9a\u3059\u308c\u3070\u3001get_path_index\u3068\u304b\u306f\u3044\u3089\u306a\u304b\u3063\u305f\u3067\u3059\u306d\u3002\nhttp://www.c-lang.net/general29/index.html\n", "tags": ["C", "\u74b0\u5883\u5909\u6570"]}