{"context": "Machine Learning Advent Calendar 2016\u306e 2 \u65e5\u76ee\u3067\u3059\u3002\n\u521d\u65e5\uff1f\u306f\u975e\u5e38\u306b\u6c17\u5408\u5165\u3063\u305f\u5185\u5bb9\u3067\u3057\u305f\u306d\u3002\u672c\u65e5\u306f\u3042\u3063\u3055\u308a\u3057\u305f\u5185\u5bb9\u306b\u306a\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\u4eca\u5e74\u304b\u3089\u6a5f\u68b0\u5b66\u7fd2\u306e\u52c9\u5f37\u3092\u306f\u3058\u3081\u307e\u3057\u305f\u3002\u7406\u89e3\u3092\u6df1\u3081\u308b\u305f\u3081\u306b\u3053\u306e\u8a18\u4e8b\u3067\u306f PRML \u7b2c 6 \u7ae0\u306e\u30ac\u30a6\u30b9\u904e\u7a0b\u306b\u3088\u308b\u56de\u5e30\u306e\u3001python \u3067\u306e\u5b9f\u88c5\u3092\u8a66\u307f\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306e\u5bfe\u8c61\u8aad\u8005\u306f\u3001\u81ea\u5206\u3068\u540c\u3058\u3088\u3046\u306b PRML \u3092\u52c9\u5f37\u3057\u3066\u3044\u308b\u4eba\u3068\u306a\u308a\u307e\u3059\u3002PRML \u7247\u624b\u306b\u8aad\u3080\u3068\u3088\u3044\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306e\u30b4\u30fc\u30eb\u306f\u3001PRML \u306e\u56f3 6.8 \u306e\u3088\u3046\u306a\u3001\u53f3\u306e\u65b9\u306b\u884c\u304f\u306b\u5f93\u3063\u3066\u4e0d\u78ba\u304b\u3055\u304c\u5927\u304d\u304f\u306a\u308b\u69d8\u5b50\u3092\u51fa\u6765\u308b\u9650\u308a\u518d\u73fe\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u5b9f\u88c5\u306b\u3042\u305f\u3063\u3066\u306f @naoya_t \u3055\u3093\u306e\u8a18\u4e8b(\u30ab\u30fc\u30cd\u30eb\u6cd5\u3068\u30ac\u30a6\u30b9\u904e\u7a0b\uff08PRML\u4e0b\u5dfb \u7b2c6\u7ae0\uff09)\u3092\u7279\u306b\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002(\u3068\u3044\u3046\u304b\u7d50\u679c\u7684\u306b\u307b\u3068\u3093\u3069 python \u306b\u8a33\u3057\u305f\u3060\u3051\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f)\n\n\u697d\u3057\u304b\u3063\u305f\u3067\u3059 \u270c ('\u03c9' \u270c )\u4e09 \u270c ('\u03c9') \u270c \u4e09( \u270c '\u03c9') \u270c \n\n\u7d50\u679c\n\u3068\u308a\u3042\u3048\u305a\u7d50\u679c\u3067\u3059\u3002\n\n\u3053\u3061\u3089\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b0\u30e9\u30d5\u3067\u3059\n\n\u7d42\u70b9\u306f\u5143\u306e\u30b0\u30e9\u30d5\u3088\u308a\u5c0f\u3055\u3081\u3067\u3059\u304c\u3001\u3060\u3044\u305f\u3044\u671b\u307f\u3069\u304a\u308a\u306e\u30b0\u30e9\u30d5\u304c\u66f8\u3051\u307e\u3057\u305f\u3002\n\u3053\u3053\u3067\u8a18\u4e8b\u3092\u7d42\u3048\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u4e00\u5fdc\u4ee5\u4e0b\u3067\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\u307e\u305f\u3001PRML \u3092\u53c2\u7167\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3001\u30b3\u30fc\u30c9\u306b\u5bfe\u5fdc\u3059\u308b\u5f0f\u306e\u756a\u53f7\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n\u30ac\u30a6\u30b9\u904e\u7a0b\u306b\u3064\u3044\u3066\n\u30ac\u30a6\u30b9\u904e\u7a0b\u56de\u5e30\u3067\u306f\u3001\u4e88\u6e2c\u6642\u306b\u8a13\u7df4\u30c7\u30fc\u30bf\u70b9\u306e\u5168\u90e8\u307e\u305f\u306f\u4e00\u90e8\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30d9\u30a4\u30ba\u7dda\u5f62\u56de\u5e30\u304c\u8a13\u7df4\u6642\u306b\u3057\u304b\u8a13\u7df4\u30c7\u30fc\u30bf\u3092\u4f7f\u308f\u306a\u3044\u306e\u3068\u7570\u306a\u308a\u307e\u3059\u3002\u30d9\u30a4\u30ba\u7dda\u5f62\u56de\u5e30\u306b\u6bd4\u3079\u3066\u8907\u96d1\u306a\u4e88\u6e2c\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u904e\u5b66\u7fd2\u3057\u3084\u3059\u304f\u3082\u3042\u308a\u307e\u3059\u3002\n\u30ac\u30a6\u30b9\u904e\u7a0b\u56de\u5e30\u306e\u8a08\u7b97\u91cf\u306f\u8a13\u7df4\u70b9\u306e\u500b\u6570\u3092N\u3068\u3059\u308b\u3068O(N3)O(N^3)\u304b\u304b\u308a\u307e\u3059\u3002\u4e00\u65b9\u3067\u30d9\u30a4\u30ba\u7dda\u5f62\u56de\u5e30\u3067\u306f\u3001\u57fa\u5e95\u95a2\u6570\u306e\u500b\u6570\u3092M\u3068\u3059\u308b\u3068O(M3)O(M^3)\u3067\u3059\u3002\u8a13\u7df4\u70b9\u306f\u591a\u304f\u306a\u308a\u304c\u3061\u306a\u305f\u3081\u3001\u30ac\u30a6\u30b9\u904e\u7a0b\u56de\u5e30\u3067\u306f\u8a08\u7b97\u306b\u591a\u304f\u306e\u6642\u9593\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n\n\u5b9f\u88c5\u3068\u89e3\u8aac\n\u5b9f\u88c5\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u306b\u5165\u529b\u306f1\u6b21\u5143\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\u884c\u5217\u8a08\u7b97\u306f numpy \u3092\u4f7f\u3044\u3001pylab \u3067\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3057\u307e\u3057\u305f\u3002\npython \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 2.7 \u3067\u3059\u3002\n\n\u5165\u529b\n\u540c\u3058\u56f3\u7248\u3092\u518d\u73fe\u3059\u308b\u305f\u3081\u306b\u306f\u5c11\u306a\u304f\u3068\u3082\u540c\u3058\u5165\u529b\u304c\u5fc5\u8981\u3067\u3059\u3002\u5165\u529b\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u306f PRML \u4e0a\u5dfb\u4ed8\u9332 A \u306e\u4eba\u5de5\u30c7\u30fc\u30bf(\u6b63\u5f26\u95a2\u6570)\u306e\u53f3\u304b\u3089 3 \u3064\u306e\u70b9\u3092\u53d6\u308a\u9664\u3044\u305f\u3082\u306e\u3067\u3059\u3002\u6b8b\u5ff5\u306a\u304c\u3089\u516c\u5f0f\u304b\u3089\u3059\u3067\u306b\u6d88\u3048\u3066\u3044\u308b\u305f\u3081\u3001webarchive \u304b\u3089\u63a2\u3057\u3066\u304d\u307e\u3057\u305f\u3002\nhttps://web.archive.org/web/20110206181056/http://research.microsoft.com/en-us/um/people/cmbishop/prml/webdatasets/curvefitting.txt\n\u30b3\u30fc\u30c9\u4e2d\u3067\u306f\u3001PRML \u306e\u56f3\u3068\u540c\u3058\u304f\u6700\u5f8c\u306e3\u70b9\u3092\u53d6\u308a\u9664\u3044\u3066\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n  x_train = [\n    0.000000,\n    0.111111,\n    0.222222,\n    0.333333,\n    0.444444,\n    0.555556,\n    0.666667,\n  ]\n\n  y_train = [\n    0.349486,\n    0.830839,\n    1.007332,\n    0.971507,\n    0.133066,\n    0.166823,\n    -0.848307,\n  ]\n\n\n\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\n\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3068\u3057\u3066\u306f\u30ac\u30a6\u30b9\u30ab\u30fc\u30cd\u30eb(6.23)\u3084\u3001\nk(x, x') = exp(-||x-x'||^2/2\\sigma^2)\nk(x,x\u2032)=exp(\u2212||x\u2212x\u2032||2/2\u03c32){k(x, x') = exp(-||x-x'||^2/2\\sigma^2)\n}\ndef gaussian_kernel(sigma):\n  return lambda x1, x2: math.exp(-(x1 - x2) ** 2 / (2 * sigma ** 2))\n\n2\u6b21\u5f62\u5f0f\u306e\u6307\u6570\u3092\u53d6\u3063\u305f\u3082\u306e\u306b\u3001\u5b9a\u6570\u3068\u7dda\u5f62\u306e\u9805\u3092\u52a0\u3048\u305f\u3082\u306e(6.63)\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\nk(x, x') = \\theta_0exp \\bigl\\{- \\frac{\\theta_1}{2}||x-x'||^2 \\bigl\\} + \\theta_2 + \\theta_3 x x'\nk(x,x\u2032)=\u03b80exp{\u2212\u03b812||x\u2212x\u2032||2}+\u03b82+\u03b83xx\u2032{k(x, x') = \\theta_0exp \\bigl\\{- \\frac{\\theta_1}{2}||x-x'||^2 \\bigl\\} + \\theta_2 + \\theta_3 x x'\n}\ndef regression_kernel(t0, t1, t2, t3):\n  return lambda x1, x2: t0 * math.exp(- (t1 / 2) * (x1 - x2) ** 2) + t2  + t3 * x1 * x2\n\n\u30ac\u30a6\u30b9\u904e\u7a0b\u56de\u5e30\u3067\u306f\u5f8c\u8005\u304c\u5e83\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u4eca\u56de\u306e\u5b9f\u88c5\u3067\u306f\u5f8c\u8005\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n\u5e73\u5747\u3068\u5171\u5206\u6563\n\u30ac\u30a6\u30b9\u904e\u7a0b\u306b\u3088\u3063\u3066\u3001\u672a\u77e5\u306e\u70b9 xN+1x_{N+1} \u306e\u5e73\u5747\u3068\u5171\u5206\u6563\u306f\u3001\u6b21\u306e\u5f0f(6.66, 6.67)\u3067\u5f97\u3089\u308c\u307e\u3059\u3002\nm(x_{N+1}) = \\mathbf{k^TC^{-1}_Nt}\nm(xN+1)=kTC\u22121Nt{m(x_{N+1}) = \\mathbf{k^TC^{-1}_Nt}\n}\ndef mean(xv, tv, x, kernel, beta):\n  kv = k(xv, x, kernel)\n  cn = Cn(xv, x, kernel, beta)\n  return kv.T.dot(numpy.linalg.inv(cn)).dot(tv)\n\n\\sigma^2(x_{N+1}) = c - \\mathbf{k^TC^{-1}_Nk}\n\u03c32(xN+1)=c\u2212kTC\u22121Nk{\\sigma^2(x_{N+1}) = c - \\mathbf{k^TC^{-1}_Nk}\n}\ndef s2(xv, x, kernel, beta):\n  c = kernel(x, x) + 1 / beta\n  cn = Cn(xv, x, kernel, beta)\n  kv = k(xv, x, kernel)\n  return c - kv.T.dot(numpy.linalg.inv(cn)).dot(kv)\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u4e2d\u306e kernel \u306f\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3067\u3059\u3002\n\u3053\u3053\u3067\u306e CN\\mathbf{C_N}\u306fN\u00d7NN \\times N\u306e\u5171\u5206\u6563\u884c\u5217\u3067\u3001\u8981\u7d20\u3068\u3057\u3066 k(xn,xm)k(x_n, x_m) (\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306b xn,xmx_n, x_m \u3092\u4e0e\u3048\u305f\u3082\u306e)\u3092\u6301\u3064\u884c\u5217\u306b\u3001\u5358\u4f4d\u884c\u5217\u3092\u03b2\u22121\\beta^{-1}\u500d\u3057\u305f\u884c\u5217\u3092\u8db3\u3057\u3042\u308f\u305b\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002C(xn,xm)C(x_n, x_m)\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059(6.62)\u3002\nC(x_n, x_m) = k(x_n, x_m) + \\beta ^{-1} \\delta_{nm}\nC(xn,xm)=k(xn,xm)+\u03b2\u22121\u03b4nm{C(x_n, x_m) = k(x_n, x_m) + \\beta ^{-1} \\delta_{nm}\n}\nCN\\mathbf{C_N}\u3092\u30b3\u30fc\u30c9\u306b\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ndef Cn(xv, x, kernel, beta):\n  N = len(xv)\n  I = numpy.identity(N)\n  return numpy.array(\n      [kernel(xi, xj) for xi in xv for xj in xv]).reshape(N, N) + I / beta\n\n\u307e\u305f k\\mathbf{k} \u306f\u8981\u7d20 k(xn,xN+1)(n=1,\u22ef,N)k(x_n, x_{N+1}) (n=1, \\cdots , N) \u3092\u6301\u3064\u30d9\u30af\u30c8\u30eb\u3067\u3059\u3002\ndef k(xv, x, kernel):\n  N = len(xv)\n  return numpy.array([kernel(xi, x) for xi in xv]).reshape(N, 1)\n\n\n\u63cf\u753b\n\u30b0\u30e9\u30d5\u306f\u5206\u6563\u306e\u7bc4\u56f2\u3092 PRML \u3068\u540c\u3058\u304f 95% \u533a\u9593\u3068\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u56f3 6.8 \u3092\u76ee\u6e2c\u3057\u305f\u7d50\u679c\u3001 x\u8ef8 0.0 \u301c 1.0\u3001y\u8ef8 -1.4 \u301c 1.4 \u306e\u533a\u9593\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\u6700\u521d\u304b\u3089\u4e0e\u3048\u3089\u308c\u305f\u70b9\u306f\u9752\u3044\u30c9\u30c3\u30c8\u3067\u8868\u793a\u3057\u3001\u3082\u3068\u306e\u95a2\u6570\u306f\u7dd1\u306e\u7dda\u3067\u3001\u4e0e\u3048\u3089\u308c\u305f\u70b9\u304b\u3089\u4e88\u60f3\u3055\u308c\u308b\u7dda\u306f\u8d64\u3067\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\nPRML \u306e\u3088\u3046\u306a\u30b0\u30e9\u30d5\u306b\u3059\u308b\u305f\u3081\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u624b\u63a2\u308a\u3067\u8272\u3005\u8a66\u3057\u3001(\u03b80,\u03b81,\u03b82,\u03b83,\u03b2)=(0.5,12,0,0,25)(\\theta_0, \\theta_1, \\theta_2, \\theta_3, \\beta) = (0.5, 12, 0, 0, 25) \u3068\u3059\u308b\u3053\u3068\u3067\u7d50\u679c\u306e\u30b0\u30e9\u30d5\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\n\u4e0a\u8a18\u3092\u3059\u3079\u3066\u8a18\u8ff0\u3057\u305f\u30b3\u30fc\u30c9\u306f github \u3067\u3054\u89a7\u3044\u305f\u3060\u3051\u307e\u3059\u3002\u95a2\u6570\u3068 PRML \u306e\u8a72\u5f53\u7b87\u6240\u306e\u5bfe\u5fdc\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u3001\u30b3\u30e1\u30f3\u30c8\u3067\u5bfe\u5fdc\u3059\u308b\u5f0f\u306e\u756a\u53f7\u3092\u8a18\u8ff0\u3057\u3066\u3042\u308a\u307e\u3059\u3002\ngithub\n\n\u7d42\u308f\u308a\u306b\n\u3068\u308a\u3042\u3048\u305a\u52d5\u304f\u3082\u306e\u306f\u5b9f\u88c5\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u8a18\u4e8b\u3092\u66f8\u304f\u4e2d\u3067\u81ea\u5206\u304c\u3044\u304b\u306b\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u304b\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u52c9\u5f37\u306e\u305f\u3081\u3001\u307e\u305f\u4f55\u304b\u5b9f\u88c5\u3057\u3066\u8a18\u4e8b\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u660e\u65e5\u306f @ytakashina \u3055\u3093\u306b\u3088\u308b\u300cPetuum \u306b\u3064\u3044\u3066\u300d\u3067\u3059\uff01\n[Machine Learning Advent Calendar 2016](http://qiita.com/advent-calendar/2016/machine-learning)\u306e 2 \u65e5\u76ee\u3067\u3059\u3002\n\u521d\u65e5\uff1f\u306f\u975e\u5e38\u306b\u6c17\u5408\u5165\u3063\u305f\u5185\u5bb9\u3067\u3057\u305f\u306d\u3002\u672c\u65e5\u306f\u3042\u3063\u3055\u308a\u3057\u305f\u5185\u5bb9\u306b\u306a\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u4eca\u5e74\u304b\u3089\u6a5f\u68b0\u5b66\u7fd2\u306e\u52c9\u5f37\u3092\u306f\u3058\u3081\u307e\u3057\u305f\u3002\u7406\u89e3\u3092\u6df1\u3081\u308b\u305f\u3081\u306b\u3053\u306e\u8a18\u4e8b\u3067\u306f PRML \u7b2c 6 \u7ae0\u306e\u30ac\u30a6\u30b9\u904e\u7a0b\u306b\u3088\u308b\u56de\u5e30\u306e\u3001python \u3067\u306e\u5b9f\u88c5\u3092\u8a66\u307f\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306e\u5bfe\u8c61\u8aad\u8005\u306f\u3001\u81ea\u5206\u3068\u540c\u3058\u3088\u3046\u306b PRML \u3092\u52c9\u5f37\u3057\u3066\u3044\u308b\u4eba\u3068\u306a\u308a\u307e\u3059\u3002PRML \u7247\u624b\u306b\u8aad\u3080\u3068\u3088\u3044\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306e\u30b4\u30fc\u30eb\u306f\u3001PRML \u306e\u56f3 6.8 \u306e\u3088\u3046\u306a\u3001\u53f3\u306e\u65b9\u306b\u884c\u304f\u306b\u5f93\u3063\u3066\u4e0d\u78ba\u304b\u3055\u304c\u5927\u304d\u304f\u306a\u308b\u69d8\u5b50\u3092\u51fa\u6765\u308b\u9650\u308a\u518d\u73fe\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\n\u5b9f\u88c5\u306b\u3042\u305f\u3063\u3066\u306f @naoya_t \u3055\u3093\u306e\u8a18\u4e8b([\u30ab\u30fc\u30cd\u30eb\u6cd5\u3068\u30ac\u30a6\u30b9\u904e\u7a0b\uff08PRML\u4e0b\u5dfb \u7b2c6\u7ae0\uff09](http://naoyat.hatenablog.jp/entry/2012/11/13/220933))\u3092\u7279\u306b\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002(\u3068\u3044\u3046\u304b\u7d50\u679c\u7684\u306b\u307b\u3068\u3093\u3069 python \u306b\u8a33\u3057\u305f\u3060\u3051\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f)\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">PRML\u8aad\u3093\u3067\u3066\u4e00\u756a\u697d\u3057\u3044\u306e\u306f\u56f3\u8868\u306e\u518d\u73fe\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3053\u3068</p>&mdash; naoya t (@naoya_t) <a href=\"https://twitter.com/naoya_t/status/267983025952935936\">2012\u5e7411\u670812\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\u697d\u3057\u304b\u3063\u305f\u3067\u3059 \u270c ('\u03c9' \u270c )\u4e09 \u270c ('\u03c9') \u270c \u4e09( \u270c '\u03c9') \u270c \n\n# \u7d50\u679c\n\u3068\u308a\u3042\u3048\u305a\u7d50\u679c\u3067\u3059\u3002\n\n![\u5b8c\u6210\u56f3](https://qiita-image-store.s3.amazonaws.com/0/14320/801f8b39-4ca0-b2df-dbe3-1c64df477ae3.png)\n\n\u3053\u3061\u3089\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b0\u30e9\u30d5\u3067\u3059\n![Screen Shot 2016-12-02 at 6.06.31 PM.png](https://qiita-image-store.s3.amazonaws.com/0/14320/2f560ada-0bc7-d6ee-2dee-b3a20596c7ef.png)\n\n\n\u7d42\u70b9\u306f\u5143\u306e\u30b0\u30e9\u30d5\u3088\u308a\u5c0f\u3055\u3081\u3067\u3059\u304c\u3001\u3060\u3044\u305f\u3044\u671b\u307f\u3069\u304a\u308a\u306e\u30b0\u30e9\u30d5\u304c\u66f8\u3051\u307e\u3057\u305f\u3002\n\u3053\u3053\u3067\u8a18\u4e8b\u3092\u7d42\u3048\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u4e00\u5fdc\u4ee5\u4e0b\u3067\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\u307e\u305f\u3001PRML \u3092\u53c2\u7167\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3001\u30b3\u30fc\u30c9\u306b\u5bfe\u5fdc\u3059\u308b\u5f0f\u306e\u756a\u53f7\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n# \u30ac\u30a6\u30b9\u904e\u7a0b\u306b\u3064\u3044\u3066\n\u30ac\u30a6\u30b9\u904e\u7a0b\u56de\u5e30\u3067\u306f\u3001\u4e88\u6e2c\u6642\u306b\u8a13\u7df4\u30c7\u30fc\u30bf\u70b9\u306e\u5168\u90e8\u307e\u305f\u306f\u4e00\u90e8\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30d9\u30a4\u30ba\u7dda\u5f62\u56de\u5e30\u304c\u8a13\u7df4\u6642\u306b\u3057\u304b\u8a13\u7df4\u30c7\u30fc\u30bf\u3092\u4f7f\u308f\u306a\u3044\u306e\u3068\u7570\u306a\u308a\u307e\u3059\u3002\u30d9\u30a4\u30ba\u7dda\u5f62\u56de\u5e30\u306b\u6bd4\u3079\u3066\u8907\u96d1\u306a\u4e88\u6e2c\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u904e\u5b66\u7fd2\u3057\u3084\u3059\u304f\u3082\u3042\u308a\u307e\u3059\u3002\n\u30ac\u30a6\u30b9\u904e\u7a0b\u56de\u5e30\u306e\u8a08\u7b97\u91cf\u306f\u8a13\u7df4\u70b9\u306e\u500b\u6570\u3092N\u3068\u3059\u308b\u3068$O(N^3)$\u304b\u304b\u308a\u307e\u3059\u3002\u4e00\u65b9\u3067\u30d9\u30a4\u30ba\u7dda\u5f62\u56de\u5e30\u3067\u306f\u3001\u57fa\u5e95\u95a2\u6570\u306e\u500b\u6570\u3092M\u3068\u3059\u308b\u3068$O(M^3)$\u3067\u3059\u3002\u8a13\u7df4\u70b9\u306f\u591a\u304f\u306a\u308a\u304c\u3061\u306a\u305f\u3081\u3001\u30ac\u30a6\u30b9\u904e\u7a0b\u56de\u5e30\u3067\u306f\u8a08\u7b97\u306b\u591a\u304f\u306e\u6642\u9593\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n\n# \u5b9f\u88c5\u3068\u89e3\u8aac\n\n\u5b9f\u88c5\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u306b\u5165\u529b\u306f1\u6b21\u5143\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\u884c\u5217\u8a08\u7b97\u306f numpy \u3092\u4f7f\u3044\u3001pylab \u3067\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3057\u307e\u3057\u305f\u3002\npython \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 2.7 \u3067\u3059\u3002\n\n## \u5165\u529b\n\n\u540c\u3058\u56f3\u7248\u3092\u518d\u73fe\u3059\u308b\u305f\u3081\u306b\u306f\u5c11\u306a\u304f\u3068\u3082\u540c\u3058\u5165\u529b\u304c\u5fc5\u8981\u3067\u3059\u3002\u5165\u529b\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u306f PRML \u4e0a\u5dfb\u4ed8\u9332 A \u306e\u4eba\u5de5\u30c7\u30fc\u30bf(\u6b63\u5f26\u95a2\u6570)\u306e\u53f3\u304b\u3089 3 \u3064\u306e\u70b9\u3092\u53d6\u308a\u9664\u3044\u305f\u3082\u306e\u3067\u3059\u3002\u6b8b\u5ff5\u306a\u304c\u3089\u516c\u5f0f\u304b\u3089\u3059\u3067\u306b\u6d88\u3048\u3066\u3044\u308b\u305f\u3081\u3001webarchive \u304b\u3089\u63a2\u3057\u3066\u304d\u307e\u3057\u305f\u3002\nhttps://web.archive.org/web/20110206181056/http://research.microsoft.com/en-us/um/people/cmbishop/prml/webdatasets/curvefitting.txt\n\u30b3\u30fc\u30c9\u4e2d\u3067\u306f\u3001PRML \u306e\u56f3\u3068\u540c\u3058\u304f\u6700\u5f8c\u306e3\u70b9\u3092\u53d6\u308a\u9664\u3044\u3066\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n```python\n  x_train = [\n    0.000000,\n    0.111111,\n    0.222222,\n    0.333333,\n    0.444444,\n    0.555556,\n    0.666667,\n  ]\n\n  y_train = [\n    0.349486,\n    0.830839,\n    1.007332,\n    0.971507,\n    0.133066,\n    0.166823,\n    -0.848307,\n  ]\n```\n\n## \u30ab\u30fc\u30cd\u30eb\u95a2\u6570\n\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3068\u3057\u3066\u306f\u30ac\u30a6\u30b9\u30ab\u30fc\u30cd\u30eb(6.23)\u3084\u3001\n\n```math\nk(x, x') = exp(-||x-x'||^2/2\\sigma^2)\n```\n\n```python\ndef gaussian_kernel(sigma):\n  return lambda x1, x2: math.exp(-(x1 - x2) ** 2 / (2 * sigma ** 2))\n```\n\n2\u6b21\u5f62\u5f0f\u306e\u6307\u6570\u3092\u53d6\u3063\u305f\u3082\u306e\u306b\u3001\u5b9a\u6570\u3068\u7dda\u5f62\u306e\u9805\u3092\u52a0\u3048\u305f\u3082\u306e(6.63)\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\n```math\nk(x, x') = \\theta_0exp \\bigl\\{- \\frac{\\theta_1}{2}||x-x'||^2 \\bigl\\} + \\theta_2 + \\theta_3 x x'\n```\n\n```python\ndef regression_kernel(t0, t1, t2, t3):\n  return lambda x1, x2: t0 * math.exp(- (t1 / 2) * (x1 - x2) ** 2) + t2  + t3 * x1 * x2\n```\n\n\u30ac\u30a6\u30b9\u904e\u7a0b\u56de\u5e30\u3067\u306f\u5f8c\u8005\u304c\u5e83\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u4eca\u56de\u306e\u5b9f\u88c5\u3067\u306f\u5f8c\u8005\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n## \u5e73\u5747\u3068\u5171\u5206\u6563\n\n\u30ac\u30a6\u30b9\u904e\u7a0b\u306b\u3088\u3063\u3066\u3001\u672a\u77e5\u306e\u70b9 $x_{N+1}$ \u306e\u5e73\u5747\u3068\u5171\u5206\u6563\u306f\u3001\u6b21\u306e\u5f0f(6.66, 6.67)\u3067\u5f97\u3089\u308c\u307e\u3059\u3002\n\n```math\nm(x_{N+1}) = \\mathbf{k^TC^{-1}_Nt}\n```\n\n```python\ndef mean(xv, tv, x, kernel, beta):\n  kv = k(xv, x, kernel)\n  cn = Cn(xv, x, kernel, beta)\n  return kv.T.dot(numpy.linalg.inv(cn)).dot(tv)\n```\n\n```math\n\\sigma^2(x_{N+1}) = c - \\mathbf{k^TC^{-1}_Nk}\n```\n\n```python\ndef s2(xv, x, kernel, beta):\n  c = kernel(x, x) + 1 / beta\n  cn = Cn(xv, x, kernel, beta)\n  kv = k(xv, x, kernel)\n  return c - kv.T.dot(numpy.linalg.inv(cn)).dot(kv)\n```\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u4e2d\u306e kernel \u306f\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3067\u3059\u3002\n\u3053\u3053\u3067\u306e $\\mathbf{C_N}$\u306f$N \\times N$\u306e\u5171\u5206\u6563\u884c\u5217\u3067\u3001\u8981\u7d20\u3068\u3057\u3066 $k(x_n, x_m)$ (\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306b $x_n, x_m$ \u3092\u4e0e\u3048\u305f\u3082\u306e)\u3092\u6301\u3064\u884c\u5217\u306b\u3001\u5358\u4f4d\u884c\u5217\u3092$\\beta^{-1}$\u500d\u3057\u305f\u884c\u5217\u3092\u8db3\u3057\u3042\u308f\u305b\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002$C(x_n, x_m)$\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059(6.62)\u3002\n\n```math\nC(x_n, x_m) = k(x_n, x_m) + \\beta ^{-1} \\delta_{nm}\n```\n\n$\\mathbf{C_N}$\u3092\u30b3\u30fc\u30c9\u306b\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```python\ndef Cn(xv, x, kernel, beta):\n  N = len(xv)\n  I = numpy.identity(N)\n  return numpy.array(\n      [kernel(xi, xj) for xi in xv for xj in xv]).reshape(N, N) + I / beta\n```\n\n\u307e\u305f $\\mathbf{k}$ \u306f\u8981\u7d20 $k(x_n, x_{N+1}) (n=1, \\cdots , N)$ \u3092\u6301\u3064\u30d9\u30af\u30c8\u30eb\u3067\u3059\u3002\n\n```python\ndef k(xv, x, kernel):\n  N = len(xv)\n  return numpy.array([kernel(xi, x) for xi in xv]).reshape(N, 1)\n```\n\n## \u63cf\u753b\n\n\u30b0\u30e9\u30d5\u306f\u5206\u6563\u306e\u7bc4\u56f2\u3092 PRML \u3068\u540c\u3058\u304f 95% \u533a\u9593\u3068\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u56f3 6.8 \u3092\u76ee\u6e2c\u3057\u305f\u7d50\u679c\u3001 x\u8ef8 0.0 \u301c 1.0\u3001y\u8ef8 -1.4 \u301c 1.4 \u306e\u533a\u9593\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n\u6700\u521d\u304b\u3089\u4e0e\u3048\u3089\u308c\u305f\u70b9\u306f\u9752\u3044\u30c9\u30c3\u30c8\u3067\u8868\u793a\u3057\u3001\u3082\u3068\u306e\u95a2\u6570\u306f\u7dd1\u306e\u7dda\u3067\u3001\u4e0e\u3048\u3089\u308c\u305f\u70b9\u304b\u3089\u4e88\u60f3\u3055\u308c\u308b\u7dda\u306f\u8d64\u3067\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\nPRML \u306e\u3088\u3046\u306a\u30b0\u30e9\u30d5\u306b\u3059\u308b\u305f\u3081\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u624b\u63a2\u308a\u3067\u8272\u3005\u8a66\u3057\u3001$(\\theta_0, \\theta_1, \\theta_2, \\theta_3, \\beta) = (0.5, 12, 0, 0, 25)$ \u3068\u3059\u308b\u3053\u3068\u3067\u7d50\u679c\u306e\u30b0\u30e9\u30d5\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n# \u30b3\u30fc\u30c9\n\n\u4e0a\u8a18\u3092\u3059\u3079\u3066\u8a18\u8ff0\u3057\u305f\u30b3\u30fc\u30c9\u306f github \u3067\u3054\u89a7\u3044\u305f\u3060\u3051\u307e\u3059\u3002\u95a2\u6570\u3068 PRML \u306e\u8a72\u5f53\u7b87\u6240\u306e\u5bfe\u5fdc\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u3001\u30b3\u30e1\u30f3\u30c8\u3067\u5bfe\u5fdc\u3059\u308b\u5f0f\u306e\u756a\u53f7\u3092\u8a18\u8ff0\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n[github](https://github.com/ororog/prml/blob/master/prml6_2.py)\n\n# \u7d42\u308f\u308a\u306b\n\n\u3068\u308a\u3042\u3048\u305a\u52d5\u304f\u3082\u306e\u306f\u5b9f\u88c5\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u8a18\u4e8b\u3092\u66f8\u304f\u4e2d\u3067\u81ea\u5206\u304c\u3044\u304b\u306b\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u304b\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u52c9\u5f37\u306e\u305f\u3081\u3001\u307e\u305f\u4f55\u304b\u5b9f\u88c5\u3057\u3066\u8a18\u4e8b\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u660e\u65e5\u306f @ytakashina \u3055\u3093\u306b\u3088\u308b\u300cPetuum \u306b\u3064\u3044\u3066\u300d\u3067\u3059\uff01\n", "tags": ["MachineLearning", "PRML", "Python"]}