{"context": " More than 1 year has passed since last update.\n\nThree.js\u306e\u6295\u7a3f\u304c\u3042\u3063\u305f\u306e\u3067\u81ea\u5206\u3082\n\u753b\u50cf\u30d5\u30a1\u30a4\u30ebJPEG\u3084PNG\u3068\u304b\u3092\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3068\u30c8\u30f3\u30cd\u30eb\u306e\u4e2d\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u8cbc\u3089\u308c\u307e\u3059\u3002\n\n\u30bf\u30a4\u30c8\u30eb\u307e\u3093\u307e\u306e\u30bd\u30fc\u30b9\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" /><title>\u30c8\u30fc\u30e9\u30b9\u306e\u306a\u304b\u3092\u9032\u3080 \u30c6\u30af\u30b9\u30c1\u30e3\u7248 - js do it</title>\n<meta name=\"Description\" content=\"jsdo.it - share JavaScript, HTML5 and CSS - \" />\n<meta name=\"Keywords\"  content=\"JavaScript,HTML5,CSS\" />\n<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1\">\n\n<style type=\"text/css\">body { background-color: #DDDDDD; font: 30px sans-serif; }</style></head>\n<body>\n<div id=\"dropImg\">\u3053\u3053\u306b\u753b\u50cf\u3092\u30c9\u30ed\u30c3\u30d7</div>\n<script type=\"text/javascript\" src=\"/lib/Three.js-r42/js\"></script>\n\n<script type=\"text/javascript\">\nwindow.onload=function(){\n\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize( 450, 300 );\ndocument.body.appendChild( renderer.domElement );\n\nvar scene = new THREE.Scene();\n\nvar camera = new THREE.Camera(\n                75,     // Field of view\n                450 / 300,  // Aspect ratio\n                0.02,   // Near\n                1000    // Far\n            );\ncamera.position.set( 0, 5, 5.5 );\nscene.addLight( new THREE.AmbientLight( 0x101010 ) );\n\nvar directionalLight = new THREE.DirectionalLight(  0xffffff );\n                directionalLight.position.x = 0;\n                directionalLight.position.y = 0;\n                directionalLight.position.z = 1;\n                directionalLight.position.normalize();\n//scene.addLight( directionalLight );\nvar directionalLight2 = new THREE.DirectionalLight(  0x00ff00 );\n                directionalLight2.position.x = 1;\n                directionalLight2.position.y = 0;\n                directionalLight2.position.z = 0;\n                directionalLight2.position.normalize();\n//scene.addLight( directionalLight2 );\nvar directionalLight3 = new THREE.DirectionalLight(  0x0000ff );\n            directionalLight3.position.x = 0;\n                directionalLight3.position.y = 1;\n                directionalLight3.position.z = 0;\n                directionalLight3.position.normalize();\n            //  scene.addLight( directionalLight3 );\n\nvar ptlight = new THREE.PointLight( 0xFFFFFF );\nptlight.position.set( 0, 100, 0 );\nscene.addLight( ptlight);\n\nmaterial=new THREE.MeshLambertMaterial( { color: 0xaaaaaa, shading: THREE.FlatShading } );\n//material=new THREE.MeshBasicMaterial( { color:0x0afaaf, vertexColors:false, shading: THREE.FlatShading } );\n\nobject = new THREE.Mesh( MakeTorus(), material);\nobject.overdraw=true;\nobject.doubleSided = true;\nobject.flipSided=true;\n//object.matrixAutoUpdate=false;\nscene.addChild(object);\n\nif ( !window.requestAnimationFrame ) {\n\n    window.requestAnimationFrame = ( function() {\n\n        return window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {\n\n            window.setTimeout( callback, 1000 / 60 );\n\n        };\n\n    } )();\n\n}\nanimate();\n\nfunction Cross( v1, v2 )\n    {\n        var vx = v1.y * v2.z - v1.z * v2.y;\n        var vy = v1.z * v2.x - v1.x * v2.z;\n        var vz = v1.x * v2.y - v1.y * v2.x;\n\n        return new THREE.Vector3(vx,vy,vz);\n}\n\n// calculate Roman surface by u,v parameter.\nfunction TorusSurface(u,v) {\n    var a=1/3;\n    var c = 1;\n     var x = Math.cos(u)*(Math.cos(v)*a+c);\n     var y = Math.sin(v)*a;\n     var z = Math.sin(u)*(Math.cos(v)*a+c);\n     //document.write(x +\",\" + y + \",\"+z +\"\\n\");\n     return new THREE.Vector3(x, y, z);\n}\n\nfunction animate() {\n    requestAnimationFrame( animate );\n    render();\n}\n\nfunction render() {\n    var a=1/2;\n    var c = 1;\n    var time = new Date().getTime() * 0.001;\n\n    camera.position.set( 1.1*Math.cos(time), 0.34*Math.sin(time/10),  1.1*Math.sin(time) );\n    camera.target.position.set( 1.0*Math.cos(time+0.5), 0,  1.0*Math.sin(time+0.5) );\n    //camera.target.position.set(0, 0.1, 0);\n    ptlight.position.set(1.0*Math.cos(time+0.5), 0,  1.0*Math.sin(time+0.5) );\n    renderer.render( scene, camera );\n}\nvar dropArea = document.getElementById('dropImg');\nvar image = new Image();\n\n// \u30c6\u30af\u30b9\u30c1\u30e3\u753b\u50cf\u304c\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406\nimage.onload = function() {\n    console.log('image.onload start');\n    var canvas = document.createElement(\"canvas\");\n    canvas.width=image.width;\n    canvas.height=image.height;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(image,0,0,image.width,image.height,0,0,image.width,image.height);\n\n    var texture = new THREE.Texture( canvas, new THREE.UVMapping(), THREE.ClampToEdgeWrapping, THREE.ClampToEdgeWrapping,\n                   THREE.NearestFilter,THREE.NearestMipMapLinearFilter);\n    texture.needsUpdate = true;\n    var material1 = [\n    new THREE.MeshLambertMaterial( { map: texture } ),\n    new THREE.MeshBasicMaterial( { color: 0xffffff, wireframe: false, opacity: 0.1 } )\n    ];\n    scene.removeObject(object);\n\n    object = new THREE.Mesh( MakeTorus(), material1 );\n    object.overdraw=true;\n    object.doubleSided = true;\n    object.flipSided=true;\n\n    scene.addObject(object);\n\n};\n\n//dropArea.addEventListener('dragenter', function(e) {\n//  e.stopPropagation();\n//}, false);\n\ndropArea.addEventListener('dragleave', function(e) {\n  e.preventDefault();\n}, false);\n\ndropArea.addEventListener('drop', function(e) {\n        console.log('Drop start');\ne.preventDefault();    \n    var file = e.dataTransfer.files[0];\n    if( !file.type.match(/image/)) {\n        console.log(\"oops!\");\n        e.stopPropagation();\n        return false;\n    }\n\n    var reader = new FileReader();\n    reader.onload = function(e) {\n        console.innerText = 'Reader onload start';  \n        var fileContent = reader.result;\n        image.src = fileContent;\n        console.log('Reader onload end');\n    };\n\n    reader.readAsDataURL(file);\n    //e.stopPropagation();\n        console.log('Drop end');\n}, false);\n\ndocument.body.addEventListener('dragover', function(e) {\n  e.preventDefault();\n}, false);\n\nfunction MakeTorus() {\n    var geom = new THREE.Geometry();\n    var ustep = 0.1;\n    var vstep = 0.1;\n\n    var pCount = 0;\n    var geom = new THREE.Geometry();\n    var vv,uu;\n\n    for(var v =0; v < Math.PI*2; v+=vstep) {\n    for(var u =0; u < 2*Math.PI; u+=ustep) {\n        v1 = TorusSurface(u, v);\n        v2 = TorusSurface(u+ustep, v);\n        v3 = TorusSurface(u+ustep, v+vstep);\n        v4 = TorusSurface(u, v+vstep);\n\n        geom.vertices.push(new THREE.Vertex(v1));\n        geom.vertices.push(new THREE.Vertex(v2));\n        geom.vertices.push(new THREE.Vertex(v3));\n        geom.vertices.push(new THREE.Vertex(v4));\n\n        var nvx1 = v1.x - v2.x;\n        var nvy1 = v1.y - v2.y;\n        var nvz1 = v1.z - v2.z;\n\n        var nvx2 = v4.x - v2.x;\n        var nvy2 = v4.y - v2.y;\n        var nvz2 = v4.z - v2.z;\n\n        var faceVertical = Cross(\n                    new THREE.Vector3(nvx1,nvy1,nvz1), \n                    new THREE.Vector3(nvx2,nvy2,nvz2)\n            );\n\n        var length = Math.sqrt( (faceVertical.x * faceVertical.x\n                                + faceVertical.y * faceVertical.y\n                            + faceVertical.z * faceVertical.z) );\n        var faceNormal = new THREE.Vector3(-faceVertical.x / length, -faceVertical.y / length, -faceVertical.z / length );\n\n            var face1 = new THREE.Face3( pCount, pCount + 2 , pCount + 1 );\n        face1.normal = faceNormal;\n        geom.faces.push(face1  );\n        geom.faceVertexUvs[ 0 ].push( [\n        new THREE.UV( (u/(2*Math.PI)), (v/(2*Math.PI)) ),\n        new THREE.UV( ((u+ustep)/(2*Math.PI)), ((v+vstep)/(2*Math.PI)) ),\n        new THREE.UV( ((u+ustep)/(2*Math.PI)), (v/(2*Math.PI)) )\n        ] );\n\n        var face2 = new THREE.Face3( pCount, pCount + 3 , pCount + 2 );\n        face2.normal = faceNormal;\n        geom.faces.push( face2 );\n        geom.faceVertexUvs[ 0 ].push( [\n        new THREE.UV( (u/(2*Math.PI)), (v/(2*Math.PI) )),\n        new THREE.UV( (u/(2*Math.PI)),( (v+vstep)/(2*Math.PI)) ),\n        new THREE.UV( ((u+ustep)/(2*Math.PI)), ((v+vstep)/(2*Math.PI) ))\n        ] );\n\n        pCount = pCount + 4;\n     }\n    }\n    return geom;\n}\n};\n\n</script>\n</body>\n</html>\n\n\n\u304a\u8a66\u3057\u306f\u3053\u3061\u3089\nhttp://jsdo.it/kjunichi/3t5w\n\n\u95a2\u9023\u30d6\u30ed\u30b0\u8a18\u4e8b\n\n[webgl]Three.js\u3067\u30dd\u30ea\u30b4\u30f3\u3092\u63cf\u753b\u3059\u308b\u306b\u306f\n\n# Three.js\u306e\u6295\u7a3f\u304c\u3042\u3063\u305f\u306e\u3067\u81ea\u5206\u3082\n\u753b\u50cf\u30d5\u30a1\u30a4\u30ebJPEG\u3084PNG\u3068\u304b\u3092\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3068\u30c8\u30f3\u30cd\u30eb\u306e\u4e2d\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u8cbc\u3089\u308c\u307e\u3059\u3002\n\n# \u30bf\u30a4\u30c8\u30eb\u307e\u3093\u307e\u306e\u30bd\u30fc\u30b9\n\n``` html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" /><title>\u30c8\u30fc\u30e9\u30b9\u306e\u306a\u304b\u3092\u9032\u3080 \u30c6\u30af\u30b9\u30c1\u30e3\u7248 - js do it</title>\n<meta name=\"Description\" content=\"jsdo.it - share JavaScript, HTML5 and CSS - \" />\n<meta name=\"Keywords\"  content=\"JavaScript,HTML5,CSS\" />\n<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1\">\n\n<style type=\"text/css\">body { background-color: #DDDDDD; font: 30px sans-serif; }</style></head>\n<body>\n<div id=\"dropImg\">\u3053\u3053\u306b\u753b\u50cf\u3092\u30c9\u30ed\u30c3\u30d7</div>\n<script type=\"text/javascript\" src=\"/lib/Three.js-r42/js\"></script>\n\n<script type=\"text/javascript\">\nwindow.onload=function(){\n\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize( 450, 300 );\ndocument.body.appendChild( renderer.domElement );\n\nvar scene = new THREE.Scene();\n\nvar camera = new THREE.Camera(\n                75,     // Field of view\n                450 / 300,  // Aspect ratio\n                0.02,   // Near\n                1000    // Far\n            );\ncamera.position.set( 0, 5, 5.5 );\nscene.addLight( new THREE.AmbientLight( 0x101010 ) );\n\nvar directionalLight = new THREE.DirectionalLight(  0xffffff );\n    \t\t\tdirectionalLight.position.x = 0;\n                directionalLight.position.y = 0;\n\t\t\t\tdirectionalLight.position.z = 1;\n\t\t\t\tdirectionalLight.position.normalize();\n//scene.addLight( directionalLight );\nvar directionalLight2 = new THREE.DirectionalLight(  0x00ff00 );\n        \t\tdirectionalLight2.position.x = 1;\n                directionalLight2.position.y = 0;\n\t\t\t\tdirectionalLight2.position.z = 0;\n\t\t\t\tdirectionalLight2.position.normalize();\n//scene.addLight( directionalLight2 );\nvar directionalLight3 = new THREE.DirectionalLight(  0x0000ff );\n         \tdirectionalLight3.position.x = 0;\n                directionalLight3.position.y = 1;\n\t\t\t\tdirectionalLight3.position.z = 0;\n\t\t\t\tdirectionalLight3.position.normalize();\n\t\t\t//\tscene.addLight( directionalLight3 );\n\nvar ptlight = new THREE.PointLight( 0xFFFFFF );\nptlight.position.set( 0, 100, 0 );\nscene.addLight( ptlight);\n\nmaterial=new THREE.MeshLambertMaterial( { color: 0xaaaaaa, shading: THREE.FlatShading } );\n//material=new THREE.MeshBasicMaterial( { color:0x0afaaf, vertexColors:false, shading: THREE.FlatShading } );\n\nobject = new THREE.Mesh( MakeTorus(), material);\nobject.overdraw=true;\nobject.doubleSided = true;\nobject.flipSided=true;\n//object.matrixAutoUpdate=false;\nscene.addChild(object);\n\nif ( !window.requestAnimationFrame ) {\n\n    window.requestAnimationFrame = ( function() {\n\n\t\treturn window.webkitRequestAnimationFrame ||\n\t\twindow.mozRequestAnimationFrame ||\n\t\twindow.oRequestAnimationFrame ||\n\t\twindow.msRequestAnimationFrame ||\n\t\tfunction( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {\n\n\t\t\twindow.setTimeout( callback, 1000 / 60 );\n\n\t\t};\n\n\t} )();\n\n}\nanimate();\n\nfunction Cross( v1, v2 )\n\t{\n        var vx = v1.y * v2.z - v1.z * v2.y;\n        var vy = v1.z * v2.x - v1.x * v2.z;\n        var vz = v1.x * v2.y - v1.y * v2.x;\n        \n\t    return new THREE.Vector3(vx,vy,vz);\n}\n\n// calculate Roman surface by u,v parameter.\nfunction TorusSurface(u,v) {\n    var a=1/3;\n    var c = 1;\n     var x = Math.cos(u)*(Math.cos(v)*a+c);\n     var y = Math.sin(v)*a;\n     var z = Math.sin(u)*(Math.cos(v)*a+c);\n     //document.write(x +\",\" + y + \",\"+z +\"\\n\");\n     return new THREE.Vector3(x, y, z);\n}\n\nfunction animate() {\n    requestAnimationFrame( animate );\n    render();\n}\n\nfunction render() {\n    var a=1/2;\n    var c = 1;\n    var time = new Date().getTime() * 0.001;\n    \n    camera.position.set( 1.1*Math.cos(time), 0.34*Math.sin(time/10),  1.1*Math.sin(time) );\n    camera.target.position.set( 1.0*Math.cos(time+0.5), 0,  1.0*Math.sin(time+0.5) );\n    //camera.target.position.set(0, 0.1, 0);\n    ptlight.position.set(1.0*Math.cos(time+0.5), 0,  1.0*Math.sin(time+0.5) );\n    renderer.render( scene, camera );\n}\nvar dropArea = document.getElementById('dropImg');\nvar image = new Image();\n\n// \u30c6\u30af\u30b9\u30c1\u30e3\u753b\u50cf\u304c\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406\nimage.onload = function() {\n    console.log('image.onload start');\n    var canvas = document.createElement(\"canvas\");\n    canvas.width=image.width;\n    canvas.height=image.height;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(image,0,0,image.width,image.height,0,0,image.width,image.height);\n    \n    var texture = new THREE.Texture( canvas, new THREE.UVMapping(), THREE.ClampToEdgeWrapping, THREE.ClampToEdgeWrapping,\n\t\t\t\t   THREE.NearestFilter,THREE.NearestMipMapLinearFilter);\n    texture.needsUpdate = true;\n    var material1 = [\n\tnew THREE.MeshLambertMaterial( { map: texture } ),\n\tnew THREE.MeshBasicMaterial( { color: 0xffffff, wireframe: false, opacity: 0.1 } )\n    ];\n    scene.removeObject(object);\n\n    object = new THREE.Mesh( MakeTorus(), material1 );\n    object.overdraw=true;\n    object.doubleSided = true;\n    object.flipSided=true;\n\n    scene.addObject(object);\n \n};\n\n//dropArea.addEventListener('dragenter', function(e) {\n//  e.stopPropagation();\n//}, false);\n\ndropArea.addEventListener('dragleave', function(e) {\n  e.preventDefault();\n}, false);\n\ndropArea.addEventListener('drop', function(e) {\n    \tconsole.log('Drop start');\ne.preventDefault();    \n\tvar file = e.dataTransfer.files[0];\n\tif( !file.type.match(/image/)) {\n\t    console.log(\"oops!\");\n\t\te.stopPropagation();\n\t\treturn false;\n\t}\n  \n\tvar reader = new FileReader();\n\treader.onload = function(e) {\n\t\tconsole.innerText = 'Reader onload start';\t\n\t\tvar fileContent = reader.result;\n\t\timage.src = fileContent;\n   \t\tconsole.log('Reader onload end');\n\t};\n\n\treader.readAsDataURL(file);\n\t//e.stopPropagation();\n      \tconsole.log('Drop end');\n}, false);\n\ndocument.body.addEventListener('dragover', function(e) {\n  e.preventDefault();\n}, false);\n\nfunction MakeTorus() {\n    var geom = new THREE.Geometry();\n    var ustep = 0.1;\n    var vstep = 0.1;\n    \n    var pCount = 0;\n    var geom = new THREE.Geometry();\n    var vv,uu;\n    \n    for(var v =0; v < Math.PI*2; v+=vstep) {\n\tfor(var u =0; u < 2*Math.PI; u+=ustep) {\n\t    v1 = TorusSurface(u, v);\n\t    v2 = TorusSurface(u+ustep, v);\n\t    v3 = TorusSurface(u+ustep, v+vstep);\n\t    v4 = TorusSurface(u, v+vstep);\n\t    \n\t    geom.vertices.push(new THREE.Vertex(v1));\n\t    geom.vertices.push(new THREE.Vertex(v2));\n\t    geom.vertices.push(new THREE.Vertex(v3));\n\t    geom.vertices.push(new THREE.Vertex(v4));\n\t    \n\t    var nvx1 = v1.x - v2.x;\n\t    var nvy1 = v1.y - v2.y;\n\t    var nvz1 = v1.z - v2.z;\n\t    \n\t    var nvx2 = v4.x - v2.x;\n\t    var nvy2 = v4.y - v2.y;\n\t    var nvz2 = v4.z - v2.z;\n\t    \n\t    var faceVertical = Cross(\n                    new THREE.Vector3(nvx1,nvy1,nvz1), \n                    new THREE.Vector3(nvx2,nvy2,nvz2)\n            );\n\t    \n\t    var length = Math.sqrt( (faceVertical.x * faceVertical.x\n    \t                        + faceVertical.y * faceVertical.y\n\t                        + faceVertical.z * faceVertical.z) );\n\t    var faceNormal = new THREE.Vector3(-faceVertical.x / length, -faceVertical.y / length, -faceVertical.z / length );\n\t    \n            var face1 = new THREE.Face3( pCount, pCount + 2 , pCount + 1 );\n\t    face1.normal = faceNormal;\n\t    geom.faces.push(face1  );\n\t    geom.faceVertexUvs[ 0 ].push( [\n\t\tnew THREE.UV( (u/(2*Math.PI)), (v/(2*Math.PI)) ),\n\t\tnew THREE.UV( ((u+ustep)/(2*Math.PI)), ((v+vstep)/(2*Math.PI)) ),\n\t\tnew THREE.UV( ((u+ustep)/(2*Math.PI)), (v/(2*Math.PI)) )\n\t    ] );\n\n\t    var face2 = new THREE.Face3( pCount, pCount + 3 , pCount + 2 );\n\t    face2.normal = faceNormal;\n\t    geom.faces.push( face2 );\n\t    geom.faceVertexUvs[ 0 ].push( [\n\t\tnew THREE.UV( (u/(2*Math.PI)), (v/(2*Math.PI) )),\n\t\tnew THREE.UV( (u/(2*Math.PI)),( (v+vstep)/(2*Math.PI)) ),\n\t\tnew THREE.UV( ((u+ustep)/(2*Math.PI)), ((v+vstep)/(2*Math.PI) ))\n\t    ] );\n\t    \n\t    pCount = pCount + 4;\n\t }\n    }\n    return geom;\n}\n};\n\n</script>\n</body>\n</html>\n```\n\n# \u304a\u8a66\u3057\u306f\u3053\u3061\u3089\n[http://jsdo.it/kjunichi/3t5w](http://jsdo.it/kjunichi/3t5w)\n\n# \u95a2\u9023\u30d6\u30ed\u30b0\u8a18\u4e8b\n- [[webgl]Three.js\u3067\u30dd\u30ea\u30b4\u30f3\u3092\u63cf\u753b\u3059\u308b\u306b\u306f](http://kjunichi.cocolog-nifty.com/misc/2011/08/webglthreejs-bf.html)", "tags": ["three.js", "JavaScript"]}