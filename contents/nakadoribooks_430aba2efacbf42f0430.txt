{"context": "\u524d\u56de(Vol1)\u306f\u3053\u3061\u3089\nhttp://qiita.com/nakadoribooks/items/c5f53071abdfafd47d4f\njavascript\u5b9f\u88c5\u306f\u3053\u3061\u3089\nhttp://qiita.com/nakadoribooks/items/f7f48197d6d5723a96d5\n\u6210\u679c\u7269\nhttps://github.com/nakadoribooks/CalilClient-ios/releases/tag/vol2\n\nActionCreator \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\nActionCreator \u5185\u3067\u306eDispatch\u3057\u306a\u3044\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u53d6\u308a\u8fbc\u307f\n\nPodfile\nuse_frameworks!\nsource 'https://github.com/CocoaPods/Specs.git'\nplatform :ios, '8.0'\n\ntarget 'CalilClient' do\n  pod 'ReSwift'\n  pod \"PromiseKit\", \"~> 4.0\"\n  pod 'PromiseKit/Alamofire' \nend\n\n\nPromiseKit\u3092\u4f7f\u3044\u307e\u3059\nhttps://github.com/mxcl/PromiseKit\n\nActionCreator\n\nActionCreator.swift\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")-> Promise<Action>{\n\n    return Promise { fulfill, reject in\n\n        let parameters: Parameters = [\"appkey\": Config.API_KEY, \"pref\":prefName, \"format\":\"json\", \"callback\":\"\"]\n        Alamofire.request(Config.API_LIBRARY, parameters: parameters).responseJSON().then { responseAny -> Void in\n\n            guard let json = responseAny as? [NSDictionary] else{\n                // \u301c \u7565 \u301c\n                let failAction = LibraryListFailLoadAction()\n                fulfill(failAction)\n                return\n            }\n\n            print(\"ok json\")\n            let results = Library.createList(list: json)\n            let loadedAction = LibraryListLoadedAction(libraryList: results)\n            fulfill(loadedAction)\n        }.catch { error in\n            let failAction = LibraryListFailLoadAction()\n            fulfill(failAction)\n        }\n    }\n}\n\nstatic func loadLibrariesAction()->Action{\n    return LibraryListLoadAction()\n}\n\n\n\n\n\u5909\u66f4\u524d\n// ActionCreator interface\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")->Action\n\n// \u4f7f\u3046\u5074 (View)\nlet loadAction = ActionCreator.loadLibraries()\nmainStore.dispatch(loadAction)\n\n\n\n\u5909\u66f4\u5f8c\n\n// ActionCreator interface\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")-> Promise<Action>\nstatic func loadLibrariesAction()->Action\n\n// \u4f7f\u3046\u5074 (View)\nActionCreator.loadLibraries().then { (action) -> Void in\n    mainStore.dispatch(action)\n}\nlet loadAction = ActionCreator.loadLibrariesAction()\nmainStore.dispatch(loadAction)\n\n\n\u305f\u3076\u3093\u3053\u3063\u3061\u306e\u65b9\u304c\u597d\u307e\u3057\u3044\u3002\n\n\u203b \u8ffd\u8a18 AsyncActionCreator \u4f7f\u7528\u30d0\u30fc\u30b8\u30e7\u30f3\nWeb\u306e\u65b9\nhttp://qiita.com/nakadoribooks/items/f7f48197d6d5723a96d5\n\u3067 redux-thunk \u306e\u30aa\u30b9\u30b9\u30e1\u30b3\u30e1\u30f3\u30c8\u3044\u305f\u3060\u3044\u305f\u306e\u3067\u3001\u3053\u3063\u3061\u3082\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u63c3\u3048\u308b\u3002\nAsyncActionCreator\nReswift\u306e\u4e2d\u306b\u5165\u3063\u3066\u308b\u3002\n\u3053\u3044\u3064\u304c dispatch\u3000\u306b\u6e21\u305b\u308b\ntypealias AsyncActionCreator = (\n    _ state: State,\n    _ store: Store,\n    _ actionCreatorCallback: @escaping ((ActionCreator) -> Void)\n) -> Void\n\nmainStore.dispatch(AsyncActionCreator)\n\n\u6210\u679c\u7269\nhttps://github.com/nakadoribooks/CalilClient-ios/releases/tag/vol2.5\n\n\u6e96\u5099\n\u7279\u306b\u306a\u3057\u3002\n\nActionCreator\n\nActionCreator.swift\nimport ReSwift\nimport Alamofire\nimport PromiseKit\n\npublic enum ActionCreatorError: Error {\n    case unknown\n    case json\n}\n\nstruct ActionCreator{\n\n    static func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")->Store<AppState>.AsyncActionCreator {\n        return { (state, store, callback) in\n            _loadLibraries(prefName: prefName).then(execute: { (action) -> Void in\n                callback({ (_, _) -> Action? in action })\n            }).catch(execute: { (error) in\n                let failAction = LibraryListFailLoadAction()\n                callback({ (_, _) -> Action? in failAction })\n            })\n        }\n    }\n\n    static func _loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")-> Promise<Action>{\n\n        return Promise { fulfill, reject in\n\n            let parameters: Parameters = [\"appkey\": Config.API_KEY, \"pref\":prefName, \"format\":\"json\", \"callback\":\"\"]\n\n            Alamofire.request(Config.API_LIBRARY, parameters: parameters).responseJSON().then { responseAny -> Void in\n\n                guard let json = responseAny as? [NSDictionary] else{\n                    print(\"fail json\")\n\n                    reject(ActionCreatorError.json)\n                    return\n                }\n\n                print(\"ok json\")\n                let results = Library.createList(list: json)\n                let loadedAction = LibraryListLoadedAction(libraryList: results)\n\n                // \u6642\u9593\u304b\u304b\u3063\u3066\u3044\u308b\u3066\u3044\n                DispatchQueue.global(qos: .default).async {\n                    Thread.sleep(forTimeInterval: 1)\n                    DispatchQueue.main.async {\n                        fulfill(loadedAction)\n                    }\n                }\n\n            }.catch { error in\n                reject(ActionCreatorError.unknown)\n            }\n\n        }\n\n    }\n\n    static func loadLibrariesAction()->Action{\n        return LibraryListLoadAction()\n    }\n\n}\n\n\n\n\u5909\u66f4\u524d\n\n// ActionCreator interface\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")-> Promise<Action>\nstatic func loadLibrariesAction()->Action\n\n// \u4f7f\u3046\u5074 (View)\nActionCreator.loadLibraries().then { (action) -> Void in\n    mainStore.dispatch(action)\n}\nlet loadAction = ActionCreator.loadLibrariesAction()\nmainStore.dispatch(loadAction)\n\n\n\n\u5909\u66f4\u5f8c\n// ActionCreator interface\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")->Store<AppState>.AsyncActionCreator\nstatic func loadLibrariesAction()->Action\n\n// \u4f7f\u3046\u5074 (View)\nmainStore.dispatch(ActionCreator.loadLibraries())\nmainStore.dispatch(ActionCreator.loadLibrariesAction())\n\n\n\u306a\u308b\u307b\u3069\u3002\n\u524d\u56de(Vol1)\u306f\u3053\u3061\u3089\nhttp://qiita.com/nakadoribooks/items/c5f53071abdfafd47d4f\n\njavascript\u5b9f\u88c5\u306f\u3053\u3061\u3089\nhttp://qiita.com/nakadoribooks/items/f7f48197d6d5723a96d5\n\n\u6210\u679c\u7269\nhttps://github.com/nakadoribooks/CalilClient-ios/releases/tag/vol2\n\n# ActionCreator \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\n- ActionCreator \u5185\u3067\u306eDispatch\u3057\u306a\u3044\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u53d6\u308a\u8fbc\u307f\n\n```ruby:Podfile\nuse_frameworks!\nsource 'https://github.com/CocoaPods/Specs.git'\nplatform :ios, '8.0'\n\ntarget 'CalilClient' do\n  pod 'ReSwift'\n  pod \"PromiseKit\", \"~> 4.0\"\n  pod 'PromiseKit/Alamofire' \nend\n```\n\nPromiseKit\u3092\u4f7f\u3044\u307e\u3059\nhttps://github.com/mxcl/PromiseKit\n\n## ActionCreator\n\n```swift:ActionCreator.swift\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")-> Promise<Action>{\n        \n    return Promise { fulfill, reject in\n        \n        let parameters: Parameters = [\"appkey\": Config.API_KEY, \"pref\":prefName, \"format\":\"json\", \"callback\":\"\"]\n        Alamofire.request(Config.API_LIBRARY, parameters: parameters).responseJSON().then { responseAny -> Void in\n            \n            guard let json = responseAny as? [NSDictionary] else{\n                // \u301c \u7565 \u301c\n                let failAction = LibraryListFailLoadAction()\n                fulfill(failAction)\n                return\n            }\n            \n            print(\"ok json\")\n            let results = Library.createList(list: json)\n            let loadedAction = LibraryListLoadedAction(libraryList: results)\n            fulfill(loadedAction)\n        }.catch { error in\n            let failAction = LibraryListFailLoadAction()\n            fulfill(failAction)\n        }\n    }\n}\n\nstatic func loadLibrariesAction()->Action{\n    return LibraryListLoadAction()\n}\n\n```\n\n\n### \u5909\u66f4\u524d \n\n```\n// ActionCreator interface\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")->Action\n\n// \u4f7f\u3046\u5074 (View)\nlet loadAction = ActionCreator.loadLibraries()\nmainStore.dispatch(loadAction)\n\n```\n\n### \u5909\u66f4\u5f8c\n\n```\n\n// ActionCreator interface\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")-> Promise<Action>\nstatic func loadLibrariesAction()->Action\n\n// \u4f7f\u3046\u5074 (View)\nActionCreator.loadLibraries().then { (action) -> Void in\n    mainStore.dispatch(action)\n}\nlet loadAction = ActionCreator.loadLibrariesAction()\nmainStore.dispatch(loadAction)\n\n```\n\n\u305f\u3076\u3093\u3053\u3063\u3061\u306e\u65b9\u304c\u597d\u307e\u3057\u3044\u3002\n\n\n# \u203b \u8ffd\u8a18 AsyncActionCreator \u4f7f\u7528\u30d0\u30fc\u30b8\u30e7\u30f3\n\nWeb\u306e\u65b9\nhttp://qiita.com/nakadoribooks/items/f7f48197d6d5723a96d5\n\u3067 redux-thunk \u306e\u30aa\u30b9\u30b9\u30e1\u30b3\u30e1\u30f3\u30c8\u3044\u305f\u3060\u3044\u305f\u306e\u3067\u3001\u3053\u3063\u3061\u3082\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u63c3\u3048\u308b\u3002\n\nAsyncActionCreator\nReswift\u306e\u4e2d\u306b\u5165\u3063\u3066\u308b\u3002\n\u3053\u3044\u3064\u304c dispatch\u3000\u306b\u6e21\u305b\u308b\n\n```\ntypealias AsyncActionCreator = (\n    _ state: State,\n    _ store: Store,\n    _ actionCreatorCallback: @escaping ((ActionCreator) -> Void)\n) -> Void\n\nmainStore.dispatch(AsyncActionCreator)\n```\n\n\u6210\u679c\u7269\nhttps://github.com/nakadoribooks/CalilClient-ios/releases/tag/vol2.5\n\n## \u6e96\u5099\n\n\u7279\u306b\u306a\u3057\u3002\n\n## ActionCreator\n\n```swift:ActionCreator.swift\nimport ReSwift\nimport Alamofire\nimport PromiseKit\n\npublic enum ActionCreatorError: Error {\n    case unknown\n    case json\n}\n\nstruct ActionCreator{\n    \n    static func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")->Store<AppState>.AsyncActionCreator {\n        return { (state, store, callback) in\n            _loadLibraries(prefName: prefName).then(execute: { (action) -> Void in\n                callback({ (_, _) -> Action? in action })\n            }).catch(execute: { (error) in\n                let failAction = LibraryListFailLoadAction()\n                callback({ (_, _) -> Action? in failAction })\n            })\n        }\n    }\n    \n    static func _loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")-> Promise<Action>{\n        \n        return Promise { fulfill, reject in\n            \n            let parameters: Parameters = [\"appkey\": Config.API_KEY, \"pref\":prefName, \"format\":\"json\", \"callback\":\"\"]\n            \n            Alamofire.request(Config.API_LIBRARY, parameters: parameters).responseJSON().then { responseAny -> Void in\n                \n                guard let json = responseAny as? [NSDictionary] else{\n                    print(\"fail json\")\n                    \n                    reject(ActionCreatorError.json)\n                    return\n                }\n                \n                print(\"ok json\")\n                let results = Library.createList(list: json)\n                let loadedAction = LibraryListLoadedAction(libraryList: results)\n                \n                // \u6642\u9593\u304b\u304b\u3063\u3066\u3044\u308b\u3066\u3044\n                DispatchQueue.global(qos: .default).async {\n                    Thread.sleep(forTimeInterval: 1)\n                    DispatchQueue.main.async {\n                        fulfill(loadedAction)\n                    }\n                }\n                \n            }.catch { error in\n                reject(ActionCreatorError.unknown)\n            }\n            \n        }\n        \n    }\n    \n    static func loadLibrariesAction()->Action{\n        return LibraryListLoadAction()\n    }\n    \n}\n```\n\n\n### \u5909\u66f4\u524d \n\n```\n\n// ActionCreator interface\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")-> Promise<Action>\nstatic func loadLibrariesAction()->Action\n\n// \u4f7f\u3046\u5074 (View)\nActionCreator.loadLibraries().then { (action) -> Void in\n    mainStore.dispatch(action)\n}\nlet loadAction = ActionCreator.loadLibrariesAction()\nmainStore.dispatch(loadAction)\n\n```\n\n### \u5909\u66f4\u5f8c\n\n```\n// ActionCreator interface\nstatic func loadLibraries(prefName:String=\"\u79cb\u7530\u770c\")->Store<AppState>.AsyncActionCreator\nstatic func loadLibrariesAction()->Action\n\n// \u4f7f\u3046\u5074 (View)\nmainStore.dispatch(ActionCreator.loadLibraries())\nmainStore.dispatch(ActionCreator.loadLibrariesAction())\n\n```\n\n\u306a\u308b\u307b\u3069\u3002\n", "tags": ["iOS", "ReSwift", "redux"]}