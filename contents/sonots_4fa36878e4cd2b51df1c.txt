{"context": " More than 1 year has passed since last update.\n\n\u8ab2\u984c\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a Line Delimited \u306a JSON \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3001\n\ninput.json\n{\"a\":\"foo\",\"b\":\"bar\"}\n{\"a\":\"foo\",\"b\":\"bar\"}\n\n\njq \u30b3\u30de\u30f3\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3046\u3068\u3001\n$ cat input.json | jq -r '.a,.b'\nfoo\nbar\nfoo\nbar\n\n\u306e\u3088\u3046\u306b\u884c\u6307\u5411\u306b\u306a\u3063\u3066\u3044\u306a\u304f\u3066\u3001\u305d\u306e\u3042\u3068 awk \u3068\u304b grep \u3068\u304b\u306b pipe \u3067\u308f\u305f\u3057\u3066\u3054\u306b\u3087\u3054\u306b\u3087\u3059\u308b\u306e\u304c\u8f9b\u3044\u3002\nfoo bar\nfoo bar\n\n\u306e\u3088\u3046\u306b\u51fa\u529b\u3057\u3066\u6b32\u3057\u3044\n\n\u3084\u308a\u304b\u305f\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068 TSV \u306b\u5909\u63db\u3067\u304d\u3066\u3001\u884c\u6307\u5411\u306b\u306a\u308b\u3002\n$ cat input.json | jq -r '\"\\(.a)\\t\\(.b)\"'\nfoo bar\nfoo bar\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\n\u899a\u3048\u306b\u304f\u304f\u3066\u6bce\u56de\u6253\u3063\u3066\u3089\u308c\u306a\u3044\u611f\u3042\u308b\u306e\u3067\u3001\u30e9\u30c3\u30d1\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u305f\u3002\u540d\u524d\u306f\u3066\u304d\u3068\u3046\u306b jjq \u306b\u3057\u305f\u3002\n\njjq\n#!/bin/bash\n\nusage_exit() {\n    echo \"Usage: $0 [-k keys] [file]\"                                   1>&2\n    echo \"\"                                                             1>&2\n    echo \"List specified keys of Line Delimited JSON file\"              1>&2\n    echo \"\"                                                             1>&2\n    echo \"  OPTIONS\"                                                    1>&2\n    echo \"    -k keys    keys to output (multiple keys separated by ,)\" 1>&2\n    echo \"\"                                                             1>&2\n    exit 1\n}\n\nwhile getopts k:Kh OPT\ndo\n    case $OPT in\n        k)  # Converting like \"\\(.foo)\\t\\(.bar)\"\n            KEYS=$(echo $OPTARG | sed 's/,/)\\\\t\\\\(./g')\n            KEYS=$(echo \"\\\"\\(.$KEYS)\\\"\")\n            ;;\n        h)  usage_exit\n            ;;\n        \\?) usage_exit\n            ;;\n    esac\ndone\nshift $((OPTIND - 1))\n\nif [ $# -eq 0 ]; then\n  exec jq -r \"${KEYS}\"\nelse\n  FILE=${@:$#}\n  exec jq -r \"${KEYS}\" $FILE\nfi\n\n\n\u3053\u308c\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n$ cat input.json | jjq -k a,b\n\n\u304a\u3057\u307e\u3044\n# \u8ab2\u984c\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a Line Delimited \u306a JSON \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3001\n\n```json:input.json\n{\"a\":\"foo\",\"b\":\"bar\"}\n{\"a\":\"foo\",\"b\":\"bar\"}\n```\n\n[jq](http://stedolan.github.io/jq/) \u30b3\u30de\u30f3\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3046\u3068\u3001\n\n```bash\n$ cat input.json | jq -r '.a,.b'\nfoo\nbar\nfoo\nbar\n```\n\n\u306e\u3088\u3046\u306b\u884c\u6307\u5411\u306b\u306a\u3063\u3066\u3044\u306a\u304f\u3066\u3001\u305d\u306e\u3042\u3068 awk \u3068\u304b grep \u3068\u304b\u306b pipe \u3067\u308f\u305f\u3057\u3066\u3054\u306b\u3087\u3054\u306b\u3087\u3059\u308b\u306e\u304c\u8f9b\u3044\u3002\n\n```\nfoo bar\nfoo bar\n```\n\n\u306e\u3088\u3046\u306b\u51fa\u529b\u3057\u3066\u6b32\u3057\u3044\n\n# \u3084\u308a\u304b\u305f\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068 TSV \u306b\u5909\u63db\u3067\u304d\u3066\u3001\u884c\u6307\u5411\u306b\u306a\u308b\u3002\n\n```\n$ cat input.json | jq -r '\"\\(.a)\\t\\(.b)\"'\nfoo\tbar\nfoo\tbar\n```\n\n# \u30b9\u30af\u30ea\u30d7\u30c8\n\n\u899a\u3048\u306b\u304f\u304f\u3066\u6bce\u56de\u6253\u3063\u3066\u3089\u308c\u306a\u3044\u611f\u3042\u308b\u306e\u3067\u3001\u30e9\u30c3\u30d1\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u305f\u3002\u540d\u524d\u306f\u3066\u304d\u3068\u3046\u306b jjq \u306b\u3057\u305f\u3002\n\n```bash:jjq\n#!/bin/bash\n\nusage_exit() {\n    echo \"Usage: $0 [-k keys] [file]\"                                   1>&2\n    echo \"\"                                                             1>&2\n    echo \"List specified keys of Line Delimited JSON file\"              1>&2\n    echo \"\"                                                             1>&2\n    echo \"  OPTIONS\"                                                    1>&2\n    echo \"    -k keys    keys to output (multiple keys separated by ,)\" 1>&2\n    echo \"\"                                                             1>&2\n    exit 1\n}\n\nwhile getopts k:Kh OPT\ndo\n    case $OPT in\n        k)  # Converting like \"\\(.foo)\\t\\(.bar)\"\n            KEYS=$(echo $OPTARG | sed 's/,/)\\\\t\\\\(./g')\n            KEYS=$(echo \"\\\"\\(.$KEYS)\\\"\")\n            ;;\n        h)  usage_exit\n            ;;\n        \\?) usage_exit\n            ;;\n    esac\ndone\nshift $((OPTIND - 1))\n\nif [ $# -eq 0 ]; then\n  exec jq -r \"${KEYS}\"\nelse\n  FILE=${@:$#}\n  exec jq -r \"${KEYS}\" $FILE\nfi\n```\n\n\u3053\u308c\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n```\n$ cat input.json | jjq -k a,b\n```\n\n\u304a\u3057\u307e\u3044\n", "tags": ["JSON", "command"]}