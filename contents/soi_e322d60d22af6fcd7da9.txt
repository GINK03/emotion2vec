{"context": "\n\n\u306f\u3058\u3081\u306b\nWPF\u3067\u30c0\u30a4\u30a2\u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3061\u3087\u3063\u3068\u30ab\u30c3\u30b3\u826f\u304f\u51fa\u3057\u305f\u3044\uff01\n\u305d\u3046\u601d\u3063\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304b\u3002\nMahApps\u3068Material Design In XAML Toolkit\u306fWPF\u3067\u7c21\u5358\u306b\u898b\u305f\u76ee\u3092\u30ab\u30c3\u30b3\u826f\u304f\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u4e0a\u8a182\u3064\u306e\u57fa\u672c\u7684\u306a\u8aac\u660e\u306f\nMaterial Design In XAML Toolkit\u3067WPF\u30a2\u30d7\u30ea\u306b\u30e2\u30c0\u30f3\u306aUI\u3092\uff01\nMaterial Design In XAML Toolkit\u3067\u304a\u624b\u8efd\u306bWPF\u30a2\u30d7\u30ea\u3092\u7f8e\u3057\u304f\n\u7b49\u3092\u3054\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\n\nMahApps\u30c0\u30a4\u30a2\u30ed\u30b0\nMaterial\u30c0\u30a4\u30a2\u30ed\u30b0\nMaterial\u30b9\u30ca\u30c3\u30af\u30d0\u30fc(\u756a\u5916\u7de8)\n\n\u306e3\u3064\u306b\u3064\u3044\u3066\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3068ViewModel\u304b\u3089\u306e\u4f7f\u7528\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\nMahApps\u30c0\u30a4\u30a2\u30ed\u30b0\n\u6700\u521d\u306bWindow\u306e\u4e2d\u592e\u3092\u5e2f\u72b6\u306b\u8986\u3046MahApps\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u3059\u3002\n\u524d\u63d0\u3068\u3057\u3066MahApps\u3092\u4f7f\u3046\u305f\u3081\u306bMainWindow\u306fWindow\u3067\u306f\u306a\u304fMetroWindow\u304b\u3089\u7d99\u627f\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u304b\u3089\n\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u304b\u3089\u51fa\u3059\u65b9\u6cd5\u306f\u7c21\u5358\u3067\u3001MetroWindow\u306eShowMessageAsync()\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n\nMainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"MahApps Dialog from Code Behind\"\n        Click=\"ButtonMahappsDialog_Click\"/>\n\n\n\nMainWindow.xaml.cs(\u90e8\u5206\uff09\nprivate async void ButtonMahappsDialog_Click(object sender, RoutedEventArgs e)\n{\n    await this.ShowMessageAsync(\"Dialog from CodeBehind\", $\"Now = {DateTime.Now}\");\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\nViewModel\u304b\u3089\nViewModel\u304b\u3089\u306e\u5834\u5408\u306fIDialogCoordinator\u3092\u4f7f\u3063\u3066\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\u307e\u305aView\u306eDialogCoordinator\u3092ViewModel\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7d4c\u7531\u304b\u30d7\u30ed\u30d1\u30c6\u30a3\u7d4c\u7531\u3067\u6e21\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3092\u306a\u308b\u3079\u304f\u66f8\u304b\u306a\u3044\u305f\u3081\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u7d4c\u7531\u3067\u6e21\u3057\u307e\u3059\u3002\nMahApps\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7d4c\u7531\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\nMainWindow.xaml(\u90e8\u5206\uff09\n<Controls:MetroWindow\n\uff5e\u7701\u7565\uff5e\n    Dialog:DialogParticipation.Register=\"{Binding}\">\n<Controls:MetroWindow.DataContext>\n    <vm:MainWindowViewModel>\n        <vm:MainWindowViewModel.MahAppsDialogCoordinator>\n            <Dialog:DialogCoordinator/>\n        </vm:MainWindowViewModel.MahAppsDialogCoordinator>\n    </vm:MainWindowViewModel>\n</Controls:MetroWindow.DataContext>\n\uff5e\u7701\u7565\uff5e\n            <Button Content=\"Mahapps Dialog from ViewModel\"\n                    Command=\"{Binding ShowDialogMahappsCommand}\"\n\n\n\nMainWindowViewModel.cs(\u90e8\u5206\uff09\npublic IDialogCoordinator MahAppsDialogCoordinator { get; set; }\n\uff5e\u7701\u7565\uff5e\nShowDialogMahappsCommand.Subscribe(async _ =>\n    await this.MahAppsDialogCoordinator.ShowMessageAsync(\n        this, \"Dialog from ViewModel\", $\"Now = {DateTime.Now}\"));\n\n\n\u5b9f\u884c\u7d50\u679c\u306f\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u7248\u3068\u307b\u307c\u540c\u3058\u306a\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\n\nMaterial\u30c0\u30a4\u30a2\u30ed\u30b0\n\u6b21\u306f\u4e2d\u592e\u306b\u6d6e\u304d\u4e0a\u304c\u3063\u3066\u898b\u3048\u308bMaterial\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u51fa\u3059\u90e8\u5206\u3092<material:DialogHost>\u306e\u76f4\u4e0b\u306b\u7f6e\u304f\u3053\u3068\u3067\u3059\u3002\n\u307e\u305fMahApps\u3068\u9055\u3063\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u3068\u304b\u306f\u3042\u308a\u307e\u305b\u3093\u304b\u3089\u3001\u81ea\u524d\u3067\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u30c0\u30a4\u30a2\u30ed\u30b0\u30db\u30b9\u30c8\u306b\u6e21\u3059View\u3092Window\u304b\u3089\u7d99\u627f\u3059\u308b\u3068\u30a8\u30e9\u30fc\u3057\u307e\u3059\u3002\n\n\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\uff08\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u30fbViewModel\u5171\u901a\uff09\n\nMaterialDialog.xaml\n<UserControl x:Class=\"TestMaterial.Views.MaterialDialog\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"             \n             xmlns:material=\"http://materialdesigninxaml.net/winfx/xaml/themes\">\n    <StackPanel Margin=\"16\">\n        <Label Content=\"{Binding Title}\" x:Name=\"labelTitle\" FontSize=\"24\"/>\n        <Label Content=\"{Binding Message}\" x:Name=\"labelMessage\"/>\n        <Button Content=\"OK\"\n                Style=\"{DynamicResource MaterialDesignFlatButton}\"\n                Command=\"{x:Static material:DialogHost.CloseDialogCommand}\"/>\n    </StackPanel>\n</UserControl>\n\n\n\n\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u304b\u3089\n\u81ea\u524d\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u8868\u793a\u3059\u308b\u5185\u5bb9\u3092\u6e21\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u305d\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u3092MainWindow\u306eDialogHost\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n\nMainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"Material Dialog from Code Behind\"\n        Click=\"ButtonMaterialDialog_Click\"/>\n\n\n\nMainWindow.xaml.cs(\u90e8\u5206\uff09\nprivate async void ButtonMaterialDialog_Click(object sender, RoutedEventArgs e)\n{\n    var dialogView = new MaterialDialog(\"Dialog from Code Behind\", $\"Now = {DateTime.Now}\");\n    var result = await DialogHost.Show(dialogView);\n}\n\n\n\nMaterialDialog.xaml.cs\uff08\u90e8\u5206\uff09\npublic MaterialDialog(string title, string message) : this()\n{\n    labelTitle.Content = title;\n    labelMessage.Content = message;\n}\n\n\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n\n\nViewModel\u304b\u3089\nViewModel\u306e\u5834\u5408\u3067\u3042\u3063\u3066\u3082DialogHost.Show()\u3067MainWindow\u306eDialogHost\u304c\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\nMainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"Material Dialog from ViewModel\"\n        Command=\"{Binding ShowDialogMaterialCommand}\"/>\n\n\n\u3053\u3061\u3089\u306f\u81ea\u524d\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7d4c\u7531\u3067\u306f\u306a\u304f\u3001\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u306eViewModel\u3092\u4f5c\u3063\u3066\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u964d\u306f\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3068\u540c\u69d8\u306bDialogHost\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n\u203b\u8ffd\u8a18\u3000ViewModel\u3067View\u3092\u751f\u6210\u3059\u308b\u306e\u3092\u6b62\u3081\u3066\u3001View\u5074\u306eDataTemplate\u3067\u30c0\u30a4\u30a2\u30ed\u30b0\u306eView\u3068ViewModel\u3092\u7d50\u3073\u3064\u3051\u308b\u5f62\u306b\u5909\u66f4\n\nMainWindowViewModel.cs(\u90e8\u5206\uff09\nShowDialogMaterialCommand.Subscribe(async _ =>\n    {\n        var dialogVM = new MaterialDialogViewModel(\n                \"Dialog from ViewModel\",\n                $\"Now = { DateTime.Now}\");\n\n        var result = await DialogHost.Show(dialogVM);\n    });\n\n\n\nMaterialDialogViewModel.cs\nusing Livet;\nnamespace TestMaterial.ViewModels\n{\n    public class MaterialDialogViewModel : ViewModel\n    {\n        public string Title { get; set; }\n        public string Message { get; set; }\n\n        public MaterialDialogViewModel(string title, string message)\n        {\n            this.Title = title;\n            this.Message = message;\n        }\n    }\n}\n\n\n\nMainWindow.xaml(\u90e8\u5206\uff09\n<Controls:MetroWindow.Resources>\n\uff5e\u7701\u7565\uff5e\n    <DataTemplate DataType=\"{x:Type vm:MaterialDialogViewModel}\">\n        <v:MaterialDialog/>\n    </DataTemplate>\n</Controls:MetroWindow.Resources>\n\n\n\u5b9f\u884c\u7d50\u679c\u306f\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3068\u307b\u307c\u540c\u3058\u306a\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\n\nMaterial\u30b9\u30ca\u30c3\u30af\u30d0\u30fc(\u756a\u5916\u7de8)\n\u30c0\u30a4\u30a2\u30ed\u30b0\u3068\u306f\u3061\u3087\u3063\u3068\u9055\u3044\u307e\u3059\u304c\u3001\u540c\u3058\u304f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306eUI\u3068\u3057\u3066\u30b9\u30ca\u30c3\u30af\u30d0\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\n\u30c0\u30a4\u30a2\u30ed\u30b0\u3068\u306f\u9055\u3044\u3001\u30b9\u30ec\u30c3\u30c9\u3092\u30d6\u30ed\u30c3\u30af\u305b\u305a\u3001\u3057\u3070\u3089\u304f\u7acb\u3064\u3068\u81ea\u52d5\u3067\u6d88\u3048\u307e\u3059\u3002\n\u4e00\u756a\u826f\u304f\u898b\u308b\u306e\u306f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u901a\u77e5\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u3059\u306d\u3002\n\n\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u304b\u3089\n\u30b9\u30ca\u30c3\u30af\u30d0\u30fc\u3092\u8868\u793a\u3057\u305f\u3044\u5834\u6240\u306b<material:Snackbar>\u3092\u7f6e\u304d\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u7121\u3044\u306e\u3067\u6700\u521d\u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002\n\nMainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"SnackBar from Code Behind\"\n        Click=\"ButtonSnackBar_Click\"/>\n<material:Snackbar x:Name=\"Snackbar1\"\n                    MessageQueue=\"{material:MessageQueue}\"/>\n\n\nSnackbar\u306eMessageQueue\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\u3002\nQueue\u3068\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u304b\u3089\u5206\u304b\u308b\u3088\u3046\u306b\u3001\n\u8907\u6570\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3068\u9806\u756a\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\nMainWindow.xaml.cs(\u90e8\u5206\uff09\nprivate void ButtonSnackBar_Click(object sender, RoutedEventArgs e)\n{\n    Snackbar1.MessageQueue\n        .Enqueue($\"SnackBar from Code Behind Now = {DateTime.Now}\");\n}\n\n\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n\n\nViewModel\u304b\u3089\nViewModel\u5074\u306bSnackbarMessageQueue\u3092\u4fdd\u6301\u3057\u3066View\u306f\u305d\u308c\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\nMainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"SnackBar from ViewModel\"\n        Command=\"{Binding ShowSnackBarCommand}\"/>\n<material:Snackbar MessageQueue=\"{Binding SnackBarMessageQueue}\"\n                    Background=\"{StaticResource AccentColorBrush}\"/>\n\n\n\nMainWindowViewModel.cs\uff08\u90e8\u5206\uff09\npublic SnackbarMessageQueue SnackBarMessageQueue { get; private set; }\n\uff5e\u7701\u7565\uff5e\nShowSnackBarCommand.Subscribe(_ =>\n    this.SnackBarMessageQueue.Enqueue(\n        $\"SnackBar from ViewModel Now = { DateTime.Now}\"));\n\n\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n\n\n\u5168\u4f53\u30b3\u30fc\u30c9\n\u4e00\u90e8\u629c\u7c8b\u3057\u3066\u8868\u793a\u3057\u3066\u3044\u305f\u30b3\u30fc\u30c9\u5168\u4f53\u3067\u3059\u3002\n\nMainWindow.xaml\uff08\u5168\u4f53\uff09\n<Controls:MetroWindow\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:vm=\"clr-namespace:TestMaterial.ViewModels\"\n    xmlns:v=\"clr-namespace:TestMaterial.Views\"\n\n    xmlns:Controls=\"clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro\"\n    xmlns:material=\"http://materialdesigninxaml.net/winfx/xaml/themes\"\n    xmlns:Dialog=\"clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro\"\n\n    Dialog:DialogParticipation.Register=\"{Binding}\"\n\n    Height=\"400\" Width=\"525\"\n    x:Class=\"TestMaterial.Views.MainWindow\"\n    x:Name=\"Window\">\n    <Controls:MetroWindow.DataContext>\n        <vm:MainWindowViewModel>\n            <vm:MainWindowViewModel.MahAppsDialogCoordinator>\n                <Dialog:DialogCoordinator/>\n            </vm:MainWindowViewModel.MahAppsDialogCoordinator>\n        </vm:MainWindowViewModel>\n    </Controls:MetroWindow.DataContext>\n\n    <Controls:MetroWindow.Resources>\n        <Style TargetType=\"{x:Type Button}\" BasedOn=\"{StaticResource MaterialDesignRaisedAccentButton}\">\n            <Setter Property=\"Margin\" Value=\"10\"/>\n        </Style>\n        <DataTemplate DataType=\"{x:Type vm:MaterialDialogViewModel}\">\n            <v:MaterialDialog/>\n        </DataTemplate>\n    </Controls:MetroWindow.Resources>\n\n    <material:DialogHost>\n        <StackPanel>\n            <!--MahApps\u30c0\u30a4\u30a2\u30ed\u30b0-->\n            <Button Content=\"MahApps Dialog from Code Behind\"\n                    Click=\"ButtonMahappsDialog_Click\"/>\n            <Button Content=\"Mahapps Dialog from ViewModel\"\n                    Command=\"{Binding ShowDialogMahappsCommand}\"\n                    />\n            <!--Material\u30c0\u30a4\u30a2\u30ed\u30b0-->\n            <Button Content=\"Material Dialog from Code Behind\"\n                    Click=\"ButtonMaterialDialog_Click\"/>\n            <Button Content=\"Material Dialog from ViewModel\"\n                    Command=\"{Binding ShowDialogMaterialCommand}\"/>\n            <!--Material\u30b9\u30ca\u30c3\u30af\u30d0\u30fc-->\n            <Button Content=\"SnackBar from Code Behind\"\n                    Click=\"ButtonSnackBar_Click\"/>\n            <material:Snackbar x:Name=\"Snackbar1\"\n                               MessageQueue=\"{material:MessageQueue}\"/>\n            <Button Content=\"SnackBar from ViewModel\"\n                    Command=\"{Binding ShowSnackBarCommand}\"/>\n            <material:Snackbar MessageQueue=\"{Binding SnackBarMessageQueue}\"\n                               Background=\"{StaticResource AccentColorBrush}\"/>\n        </StackPanel>\n    </material:DialogHost>\n</Controls:MetroWindow>\n\n\nMainWindow\u753b\u9762\n\n\nMainWindow.xaml.cs(\u90e8\u5206\uff09\nusing System;\nusing System.Windows;\nusing MahApps.Metro.Controls.Dialogs;\nusing MaterialDesignThemes.Wpf;\n\nnamespace TestMaterial.Views\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n        }\n\n        private async void ButtonMahappsDialog_Click(object sender, RoutedEventArgs e)\n        {\n            await this.ShowMessageAsync(\"Dialog from CodeBehind\", $\"Now = {DateTime.Now}\");\n        }\n\n        private async void ButtonMaterialDialog_Click(object sender, RoutedEventArgs e)\n        {\n            var dialogView = new MaterialDialog(\"Dialog from Code Behind\", $\"Now = {DateTime.Now}\");\n            var result = await DialogHost.Show(dialogView);\n        }\n\n        private void ButtonSnackBar_Click(object sender, RoutedEventArgs e)\n        {\n            Snackbar1.MessageQueue\n                .Enqueue($\"SnackBar from Code Behind Now = {DateTime.Now}\");\n        }\n    }\n}\n\n\n\nMainWindowViewModel.cs(\u5168\u4f53\uff09\nusing System;\n\nusing System.Reactive.Linq;\nusing Reactive.Bindings;\n\nusing MahApps.Metro.Controls.Dialogs;\nusing MaterialDesignThemes.Wpf;\n\nnamespace TestMaterial.ViewModels\n{\n    public class MainWindowViewModel\n    {\n        public IDialogCoordinator MahAppsDialogCoordinator { get; set; }\n        public ReactiveCommand ShowDialogMahappsCommand { get; }\n            = new ReactiveCommand();\n\n        public ReactiveCommand ShowDialogMaterialCommand { get; }\n            = new ReactiveCommand();\n\n        public ReactiveCommand ShowSnackBarCommand { get; }\n            = new ReactiveCommand();\n        public SnackbarMessageQueue SnackBarMessageQueue { get; private set; }\n            = new SnackbarMessageQueue();\n\n        public MainWindowViewModel()\n        {\n            ShowDialogMahappsCommand.Subscribe(async _ =>\n                await this.MahAppsDialogCoordinator.ShowMessageAsync(\n                    this, \"Dialog from ViewModel\", $\"Now = {DateTime.Now}\"));\n\n            ShowDialogMaterialCommand.Subscribe(async _ =>\n                {\n                    var dialogVM = new MaterialDialogViewModel(\n                            \"Dialog from ViewModel\",\n                            $\"Now = { DateTime.Now}\");\n\n                    var result = await DialogHost.Show(dialogVM);\n                });\n\n            ShowSnackBarCommand.Subscribe(_ =>\n                this.SnackBarMessageQueue.Enqueue(\n                    $\"SnackBar from ViewModel Now = { DateTime.Now}\"));\n        }\n    }\n}\n\n\n\n\u307e\u3068\u3081\nMahApps\u3068Material Design In XAML Toolkit\u3092\u4f7f\u3063\u30663\u3064\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067\u3082\u3046WPF\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u3060\u3055\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u30c0\u30a4\u30a2\u30ed\u30b0\u3068\u306f\u304a\u3055\u3089\u3070\u51fa\u6765\u307e\u3059\u306d\uff01\n\n\u74b0\u5883\nVisualStudio2015\n.NET Framework 4.6\nC#6\nReactiveProperty\n#\u306f\u3058\u3081\u306b\nWPF\u3067\u30c0\u30a4\u30a2\u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3061\u3087\u3063\u3068\u30ab\u30c3\u30b3\u826f\u304f\u51fa\u3057\u305f\u3044\uff01\n\u305d\u3046\u601d\u3063\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304b\u3002\nMahApps\u3068Material Design In XAML Toolkit\u306fWPF\u3067\u7c21\u5358\u306b\u898b\u305f\u76ee\u3092\u30ab\u30c3\u30b3\u826f\u304f\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u4e0a\u8a182\u3064\u306e\u57fa\u672c\u7684\u306a\u8aac\u660e\u306f\n[Material Design In XAML Toolkit\u3067WPF\u30a2\u30d7\u30ea\u306b\u30e2\u30c0\u30f3\u306aUI\u3092\uff01](\nhttp://qiita.com/smbkrysk14/items/3423c3202974ef21d1c0)\n[Material Design In XAML Toolkit\u3067\u304a\u624b\u8efd\u306bWPF\u30a2\u30d7\u30ea\u3092\u7f8e\u3057\u304f](http://neue.cc/2015/09/10_515.html)\n\u7b49\u3092\u3054\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\n\n- MahApps\u30c0\u30a4\u30a2\u30ed\u30b0\n- Material\u30c0\u30a4\u30a2\u30ed\u30b0\n- Material\u30b9\u30ca\u30c3\u30af\u30d0\u30fc(\u756a\u5916\u7de8)\n\n\u306e3\u3064\u306b\u3064\u3044\u3066\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3068ViewModel\u304b\u3089\u306e\u4f7f\u7528\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n#MahApps\u30c0\u30a4\u30a2\u30ed\u30b0\n\u6700\u521d\u306bWindow\u306e\u4e2d\u592e\u3092\u5e2f\u72b6\u306b\u8986\u3046MahApps\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u3059\u3002\n\u524d\u63d0\u3068\u3057\u3066MahApps\u3092\u4f7f\u3046\u305f\u3081\u306bMainWindow\u306fWindow\u3067\u306f\u306a\u304fMetroWindow\u304b\u3089\u7d99\u627f\u3057\u307e\u3059\u3002\n\n##\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u304b\u3089\n\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u304b\u3089\u51fa\u3059\u65b9\u6cd5\u306f\u7c21\u5358\u3067\u3001MetroWindow\u306e```ShowMessageAsync()```\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n\n```xml:MainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"MahApps Dialog from Code Behind\"\n        Click=\"ButtonMahappsDialog_Click\"/>\n```\n\n```CSharp:MainWindow.xaml.cs(\u90e8\u5206\uff09\nprivate async void ButtonMahappsDialog_Click(object sender, RoutedEventArgs e)\n{\n    await this.ShowMessageAsync(\"Dialog from CodeBehind\", $\"Now = {DateTime.Now}\");\n}\n```\n\u5b9f\u884c\u7d50\u679c\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-07 22.48.55.png](https://qiita-image-store.s3.amazonaws.com/0/120077/d5db0da8-00da-f3ec-f72d-85a98121bbcc.png)\n\n##ViewModel\u304b\u3089\nViewModel\u304b\u3089\u306e\u5834\u5408\u306fIDialogCoordinator\u3092\u4f7f\u3063\u3066\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\u307e\u305aView\u306eDialogCoordinator\u3092ViewModel\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7d4c\u7531\u304b\u30d7\u30ed\u30d1\u30c6\u30a3\u7d4c\u7531\u3067\u6e21\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3092\u306a\u308b\u3079\u304f\u66f8\u304b\u306a\u3044\u305f\u3081\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u7d4c\u7531\u3067\u6e21\u3057\u307e\u3059\u3002\nMahApps\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7d4c\u7531\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n```xml:MainWindow.xaml(\u90e8\u5206\uff09\n<Controls:MetroWindow\n\uff5e\u7701\u7565\uff5e\n    Dialog:DialogParticipation.Register=\"{Binding}\">\n<Controls:MetroWindow.DataContext>\n    <vm:MainWindowViewModel>\n        <vm:MainWindowViewModel.MahAppsDialogCoordinator>\n            <Dialog:DialogCoordinator/>\n        </vm:MainWindowViewModel.MahAppsDialogCoordinator>\n    </vm:MainWindowViewModel>\n</Controls:MetroWindow.DataContext>\n\uff5e\u7701\u7565\uff5e\n            <Button Content=\"Mahapps Dialog from ViewModel\"\n                    Command=\"{Binding ShowDialogMahappsCommand}\"\n```\n\n```csharp:MainWindowViewModel.cs(\u90e8\u5206\uff09\npublic IDialogCoordinator MahAppsDialogCoordinator { get; set; }\n\uff5e\u7701\u7565\uff5e\nShowDialogMahappsCommand.Subscribe(async _ =>\n    await this.MahAppsDialogCoordinator.ShowMessageAsync(\n        this, \"Dialog from ViewModel\", $\"Now = {DateTime.Now}\"));\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u7248\u3068\u307b\u307c\u540c\u3058\u306a\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\n\n#Material\u30c0\u30a4\u30a2\u30ed\u30b0\n\u6b21\u306f\u4e2d\u592e\u306b\u6d6e\u304d\u4e0a\u304c\u3063\u3066\u898b\u3048\u308bMaterial\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u51fa\u3059\u90e8\u5206\u3092```<material:DialogHost>```\u306e\u76f4\u4e0b\u306b\u7f6e\u304f\u3053\u3068\u3067\u3059\u3002\n\u307e\u305fMahApps\u3068\u9055\u3063\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u3068\u304b\u306f\u3042\u308a\u307e\u305b\u3093\u304b\u3089\u3001\u81ea\u524d\u3067\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u30c0\u30a4\u30a2\u30ed\u30b0\u30db\u30b9\u30c8\u306b\u6e21\u3059View\u3092Window\u304b\u3089\u7d99\u627f\u3059\u308b\u3068\u30a8\u30e9\u30fc\u3057\u307e\u3059\u3002\n\n##\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\uff08\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u30fbViewModel\u5171\u901a\uff09\n```xml:MaterialDialog.xaml\n<UserControl x:Class=\"TestMaterial.Views.MaterialDialog\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"             \n             xmlns:material=\"http://materialdesigninxaml.net/winfx/xaml/themes\">\n    <StackPanel Margin=\"16\">\n        <Label Content=\"{Binding Title}\" x:Name=\"labelTitle\" FontSize=\"24\"/>\n        <Label Content=\"{Binding Message}\" x:Name=\"labelMessage\"/>\n        <Button Content=\"OK\"\n                Style=\"{DynamicResource MaterialDesignFlatButton}\"\n                Command=\"{x:Static material:DialogHost.CloseDialogCommand}\"/>\n    </StackPanel>\n</UserControl>\n```\n\n##\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u304b\u3089\n\u81ea\u524d\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u8868\u793a\u3059\u308b\u5185\u5bb9\u3092\u6e21\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u305d\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u3092MainWindow\u306eDialogHost\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n\n```xml:MainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"Material Dialog from Code Behind\"\n        Click=\"ButtonMaterialDialog_Click\"/>\n```\n\n```CSharp:MainWindow.xaml.cs(\u90e8\u5206\uff09\nprivate async void ButtonMaterialDialog_Click(object sender, RoutedEventArgs e)\n{\n    var dialogView = new MaterialDialog(\"Dialog from Code Behind\", $\"Now = {DateTime.Now}\");\n    var result = await DialogHost.Show(dialogView);\n}\n```\n\n```csharp:MaterialDialog.xaml.cs\uff08\u90e8\u5206\uff09\npublic MaterialDialog(string title, string message) : this()\n{\n    labelTitle.Content = title;\n    labelMessage.Content = message;\n}\n```\n\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-08 00.31.24.png](https://qiita-image-store.s3.amazonaws.com/0/120077/cbcfbbe0-aa21-16e4-1e97-b2f4526f2385.png)\n\n##ViewModel\u304b\u3089\nViewModel\u306e\u5834\u5408\u3067\u3042\u3063\u3066\u3082```DialogHost.Show()```\u3067MainWindow\u306eDialogHost\u304c\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n```xml:MainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"Material Dialog from ViewModel\"\n        Command=\"{Binding ShowDialogMaterialCommand}\"/>\n```\n\n\u3053\u3061\u3089\u306f\u81ea\u524d\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7d4c\u7531\u3067\u306f\u306a\u304f\u3001\u30c0\u30a4\u30a2\u30ed\u30b0\u30a6\u30a4\u30f3\u30c9\u30a6\u306eViewModel\u3092\u4f5c\u3063\u3066\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u964d\u306f\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3068\u540c\u69d8\u306bDialogHost\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n\u203b\u8ffd\u8a18\u3000ViewModel\u3067View\u3092\u751f\u6210\u3059\u308b\u306e\u3092\u6b62\u3081\u3066\u3001View\u5074\u306eDataTemplate\u3067\u30c0\u30a4\u30a2\u30ed\u30b0\u306eView\u3068ViewModel\u3092\u7d50\u3073\u3064\u3051\u308b\u5f62\u306b\u5909\u66f4\n\n```csharp:MainWindowViewModel.cs(\u90e8\u5206\uff09\nShowDialogMaterialCommand.Subscribe(async _ =>\n    {\n        var dialogVM = new MaterialDialogViewModel(\n                \"Dialog from ViewModel\",\n                $\"Now = { DateTime.Now}\");\n\n        var result = await DialogHost.Show(dialogVM);\n    });\n```\n\n```csharp:MaterialDialogViewModel.cs\nusing Livet;\nnamespace TestMaterial.ViewModels\n{\n    public class MaterialDialogViewModel : ViewModel\n    {\n        public string Title { get; set; }\n        public string Message { get; set; }\n\n        public MaterialDialogViewModel(string title, string message)\n        {\n            this.Title = title;\n            this.Message = message;\n        }\n    }\n}\n```\n\n```xml:MainWindow.xaml(\u90e8\u5206\uff09\n<Controls:MetroWindow.Resources>\n\uff5e\u7701\u7565\uff5e\n    <DataTemplate DataType=\"{x:Type vm:MaterialDialogViewModel}\">\n        <v:MaterialDialog/>\n    </DataTemplate>\n</Controls:MetroWindow.Resources>\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3068\u307b\u307c\u540c\u3058\u306a\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\n\n#Material\u30b9\u30ca\u30c3\u30af\u30d0\u30fc(\u756a\u5916\u7de8)\n\u30c0\u30a4\u30a2\u30ed\u30b0\u3068\u306f\u3061\u3087\u3063\u3068\u9055\u3044\u307e\u3059\u304c\u3001\u540c\u3058\u304f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306eUI\u3068\u3057\u3066\u30b9\u30ca\u30c3\u30af\u30d0\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\n\u30c0\u30a4\u30a2\u30ed\u30b0\u3068\u306f\u9055\u3044\u3001\u30b9\u30ec\u30c3\u30c9\u3092\u30d6\u30ed\u30c3\u30af\u305b\u305a\u3001\u3057\u3070\u3089\u304f\u7acb\u3064\u3068\u81ea\u52d5\u3067\u6d88\u3048\u307e\u3059\u3002\n\u4e00\u756a\u826f\u304f\u898b\u308b\u306e\u306f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u901a\u77e5\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u3059\u306d\u3002\n\n##\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u304b\u3089\n\u30b9\u30ca\u30c3\u30af\u30d0\u30fc\u3092\u8868\u793a\u3057\u305f\u3044\u5834\u6240\u306b```<material:Snackbar>```\u3092\u7f6e\u304d\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u7121\u3044\u306e\u3067\u6700\u521d\u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002\n\n```xml:MainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"SnackBar from Code Behind\"\n        Click=\"ButtonSnackBar_Click\"/>\n<material:Snackbar x:Name=\"Snackbar1\"\n                    MessageQueue=\"{material:MessageQueue}\"/>\n```\n\nSnackbar\u306eMessageQueue\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\u3002\nQueue\u3068\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u304b\u3089\u5206\u304b\u308b\u3088\u3046\u306b\u3001\n\u8907\u6570\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3068\u9806\u756a\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```CSharp:MainWindow.xaml.cs(\u90e8\u5206\uff09\nprivate void ButtonSnackBar_Click(object sender, RoutedEventArgs e)\n{\n    Snackbar1.MessageQueue\n        .Enqueue($\"SnackBar from Code Behind Now = {DateTime.Now}\");\n}\n```\n\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-08 00.49.59.png](https://qiita-image-store.s3.amazonaws.com/0/120077/b552d8de-6487-4778-bc5d-a01d1d5bb6ba.png)\n\n##ViewModel\u304b\u3089\nViewModel\u5074\u306bSnackbarMessageQueue\u3092\u4fdd\u6301\u3057\u3066View\u306f\u305d\u308c\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\n```xml:MainWindow.xaml(\u90e8\u5206\uff09\n<Button Content=\"SnackBar from ViewModel\"\n        Command=\"{Binding ShowSnackBarCommand}\"/>\n<material:Snackbar MessageQueue=\"{Binding SnackBarMessageQueue}\"\n                    Background=\"{StaticResource AccentColorBrush}\"/>\n```\n\n```csharp:MainWindowViewModel.cs\uff08\u90e8\u5206\uff09\npublic SnackbarMessageQueue SnackBarMessageQueue { get; private set; }\n\uff5e\u7701\u7565\uff5e\nShowSnackBarCommand.Subscribe(_ =>\n    this.SnackBarMessageQueue.Enqueue(\n        $\"SnackBar from ViewModel Now = { DateTime.Now}\"));\n```\n\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-08 00.50.05.png](https://qiita-image-store.s3.amazonaws.com/0/120077/7828521b-c477-6fb4-c3db-004290124b1a.png)\n\n#\u5168\u4f53\u30b3\u30fc\u30c9\n\u4e00\u90e8\u629c\u7c8b\u3057\u3066\u8868\u793a\u3057\u3066\u3044\u305f\u30b3\u30fc\u30c9\u5168\u4f53\u3067\u3059\u3002\n\n```xml:MainWindow.xaml\uff08\u5168\u4f53\uff09\n<Controls:MetroWindow\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:vm=\"clr-namespace:TestMaterial.ViewModels\"\n    xmlns:v=\"clr-namespace:TestMaterial.Views\"\n\n    xmlns:Controls=\"clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro\"\n    xmlns:material=\"http://materialdesigninxaml.net/winfx/xaml/themes\"\n    xmlns:Dialog=\"clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro\"\n    \n    Dialog:DialogParticipation.Register=\"{Binding}\"\n        \n    Height=\"400\" Width=\"525\"\n    x:Class=\"TestMaterial.Views.MainWindow\"\n    x:Name=\"Window\">\n    <Controls:MetroWindow.DataContext>\n        <vm:MainWindowViewModel>\n            <vm:MainWindowViewModel.MahAppsDialogCoordinator>\n                <Dialog:DialogCoordinator/>\n            </vm:MainWindowViewModel.MahAppsDialogCoordinator>\n        </vm:MainWindowViewModel>\n    </Controls:MetroWindow.DataContext>\n\n    <Controls:MetroWindow.Resources>\n        <Style TargetType=\"{x:Type Button}\" BasedOn=\"{StaticResource MaterialDesignRaisedAccentButton}\">\n            <Setter Property=\"Margin\" Value=\"10\"/>\n        </Style>\n        <DataTemplate DataType=\"{x:Type vm:MaterialDialogViewModel}\">\n            <v:MaterialDialog/>\n        </DataTemplate>\n    </Controls:MetroWindow.Resources>\n\n    <material:DialogHost>\n        <StackPanel>\n            <!--MahApps\u30c0\u30a4\u30a2\u30ed\u30b0-->\n            <Button Content=\"MahApps Dialog from Code Behind\"\n                    Click=\"ButtonMahappsDialog_Click\"/>\n            <Button Content=\"Mahapps Dialog from ViewModel\"\n                    Command=\"{Binding ShowDialogMahappsCommand}\"\n                    />\n            <!--Material\u30c0\u30a4\u30a2\u30ed\u30b0-->\n            <Button Content=\"Material Dialog from Code Behind\"\n                    Click=\"ButtonMaterialDialog_Click\"/>\n            <Button Content=\"Material Dialog from ViewModel\"\n                    Command=\"{Binding ShowDialogMaterialCommand}\"/>\n            <!--Material\u30b9\u30ca\u30c3\u30af\u30d0\u30fc-->\n            <Button Content=\"SnackBar from Code Behind\"\n                    Click=\"ButtonSnackBar_Click\"/>\n            <material:Snackbar x:Name=\"Snackbar1\"\n                               MessageQueue=\"{material:MessageQueue}\"/>\n            <Button Content=\"SnackBar from ViewModel\"\n                    Command=\"{Binding ShowSnackBarCommand}\"/>\n            <material:Snackbar MessageQueue=\"{Binding SnackBarMessageQueue}\"\n                               Background=\"{StaticResource AccentColorBrush}\"/>\n        </StackPanel>\n    </material:DialogHost>\n</Controls:MetroWindow>\n```\nMainWindow\u753b\u9762\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-07 22.37.18.png](https://qiita-image-store.s3.amazonaws.com/0/120077/1feb3bcd-d7ce-a227-1bd4-e2bd10fd499e.png)\n\n```csharp:MainWindow.xaml.cs(\u90e8\u5206\uff09\nusing System;\nusing System.Windows;\nusing MahApps.Metro.Controls.Dialogs;\nusing MaterialDesignThemes.Wpf;\n\nnamespace TestMaterial.Views\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n        }\n\n        private async void ButtonMahappsDialog_Click(object sender, RoutedEventArgs e)\n        {\n            await this.ShowMessageAsync(\"Dialog from CodeBehind\", $\"Now = {DateTime.Now}\");\n        }\n\n        private async void ButtonMaterialDialog_Click(object sender, RoutedEventArgs e)\n        {\n            var dialogView = new MaterialDialog(\"Dialog from Code Behind\", $\"Now = {DateTime.Now}\");\n            var result = await DialogHost.Show(dialogView);\n        }\n\n        private void ButtonSnackBar_Click(object sender, RoutedEventArgs e)\n        {\n            Snackbar1.MessageQueue\n                .Enqueue($\"SnackBar from Code Behind Now = {DateTime.Now}\");\n        }\n    }\n}\n```\n\n```csharp:MainWindowViewModel.cs(\u5168\u4f53\uff09\nusing System;\n\nusing System.Reactive.Linq;\nusing Reactive.Bindings;\n\nusing MahApps.Metro.Controls.Dialogs;\nusing MaterialDesignThemes.Wpf;\n\nnamespace TestMaterial.ViewModels\n{\n    public class MainWindowViewModel\n    {\n        public IDialogCoordinator MahAppsDialogCoordinator { get; set; }\n        public ReactiveCommand ShowDialogMahappsCommand { get; }\n            = new ReactiveCommand();\n\n        public ReactiveCommand ShowDialogMaterialCommand { get; }\n            = new ReactiveCommand();\n\n        public ReactiveCommand ShowSnackBarCommand { get; }\n            = new ReactiveCommand();\n        public SnackbarMessageQueue SnackBarMessageQueue { get; private set; }\n            = new SnackbarMessageQueue();\n\n        public MainWindowViewModel()\n        {\n            ShowDialogMahappsCommand.Subscribe(async _ =>\n                await this.MahAppsDialogCoordinator.ShowMessageAsync(\n                    this, \"Dialog from ViewModel\", $\"Now = {DateTime.Now}\"));\n\n            ShowDialogMaterialCommand.Subscribe(async _ =>\n                {\n                    var dialogVM = new MaterialDialogViewModel(\n                            \"Dialog from ViewModel\",\n                            $\"Now = { DateTime.Now}\");\n\n                    var result = await DialogHost.Show(dialogVM);\n                });\n\n            ShowSnackBarCommand.Subscribe(_ =>\n                this.SnackBarMessageQueue.Enqueue(\n                    $\"SnackBar from ViewModel Now = { DateTime.Now}\"));\n        }\n    }\n}\n```\n\n#\u307e\u3068\u3081\nMahApps\u3068Material Design In XAML Toolkit\u3092\u4f7f\u3063\u30663\u3064\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067\u3082\u3046WPF\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u3060\u3055\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u30c0\u30a4\u30a2\u30ed\u30b0\u3068\u306f\u304a\u3055\u3089\u3070\u51fa\u6765\u307e\u3059\u306d\uff01\n\n#\u74b0\u5883\nVisualStudio2015\n.NET Framework 4.6\nC#6\nReactiveProperty\n\n\n\n\n\n\n\n\n\n\n\n", "tags": ["C#", "WPF", "Xaml"]}