{"context": " More than 1 year has passed since last update.\u5f62\u5f0f\u624b\u6cd5\u306e\u30c4\u30fc\u30ebAlloy\u3067\u30b9\u30ea\u30b6\u30fc\u30ea\u30f3\u30af\u306e\u554f\u984c\u309230\u884c\u3067\u89e3\u3044\u3066\u307f\u305f\u3002\n\u30b9\u30ea\u30b6\u30fc\u30ea\u30f3\u30af\u306e\u30eb\u30fc\u30eb\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3002\n\n\u6570\u5b57\u306f\u5468\u56f2\u306e\u7dda\u306e\u672c\u6570\u3092\u793a\u3059\u3002\n\u7dda\u306f\u4ea4\u5dee\u3084\u679d\u5206\u304b\u308c\u3057\u306a\u3044\u3002\n\u7dda\u306f\u5168\u4f53\u3067\u4e00\u3064\u306e\u8f2a\u306b\u306a\u308b\u3002\n\n\u8a73\u3057\u3044\u89e3\u8aac http://www.nikoli.com/ja/puzzles/slitherlink/rule.html\n\u77ed\u304f\u66f8\u304f\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u30eb\u30fc\u30eb2\u30683\u3092\u6b21\u306e\u3088\u3046\u306b\u89e3\u91c8\u3059\u308b\u3053\u3068\u3002\n\n\u8981\u306f\u7dda\u3068\u3044\u3046\u306e\u306f\u5185\u5074\u30a8\u30ea\u30a2\u3068\u5916\u5074\u30a8\u30ea\u30a2\u306b\u5206\u3051\u308b\u5883\u754c\u7dda\u3002\n\u5185\u5074\u30de\u30b9\u306f\u5168\u90e8\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3002\n\u5916\u5074\u30de\u30b9\u306f\u8fba\u306e\u5916\u5074\u30de\u30b9\u306b\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3002\n\n\u3053\u3046\u3059\u308b\u3068\u3001\u7dda\u306e\u679d\u5206\u304b\u308c\u3068\u304b\u30eb\u30fc\u30d7\u3068\u304b\u306e\u5224\u5b9a\u306f\u3001\u7279\u306b\u5fc5\u8981\u306a\u3044\u3002\n\nalloy\nabstract sig Board {\n  maxadjs: Int\n}\n\nabstract sig Side {}\none sig Inside, Outside extends Side {}\n\nabstract sig Cell {\n  adjacent: some Cell,\n  num: Int,\n  side: one Side\n}\n\nfact { adjacent = ~adjacent }\nfact { all c: Cell | c not in c.adjacent }\n\nfun ourside: Cell -> Cell {\n  {c0, c1: Cell | c1.side = c0.side and c1 in c0.adjacent}\n}\n\nfun adj_inside: Cell -> Cell {\n  {c0, c1: Cell | c1.side = Inside and c1 in c0.adjacent}\n}\n\nfact { all c: Cell | c.side = Inside => c.num = sub[Board.maxadjs, #c.adj_inside] }\nfact { all c: Cell | c.side = Outside => c.num = #c.adj_inside }\n\nfact { all c0, c1: Cell | (c0 + c1).side = Inside => c1 in c0.*ourside }\nfact { all c0: Cell | c0.side = Outside =>\n  some c1: Cell | c1 in c0.*ourside and #(c1.adjacent) < Board.maxadjs }\n\n\n// Example\n// _ _ 3 _ _\n// _ 3 _ 2 2\n// 2 2 _ _ 2\n// 3 _ 3 _ _\n// _ _ _ 1 _\n\none sig SquareBoard extends Board {} { maxadjs = 4 }\none sig C_0_0 extends Cell {}\none sig C_0_1 extends Cell {}\none sig C_0_2 extends Cell {} { num = 3 }\none sig C_0_3 extends Cell {}\none sig C_0_4 extends Cell {}\none sig C_1_0 extends Cell {}\none sig C_1_1 extends Cell {} { num = 3 }\none sig C_1_2 extends Cell {}\none sig C_1_3 extends Cell {} { num = 2 }\none sig C_1_4 extends Cell {} { num = 2 }\none sig C_2_0 extends Cell {} { num = 2 }\none sig C_2_1 extends Cell {} { num = 2 }\none sig C_2_2 extends Cell {}\none sig C_2_3 extends Cell {}\none sig C_2_4 extends Cell {} { num = 2 }\none sig C_3_0 extends Cell {} { num = 3 }\none sig C_3_1 extends Cell {}\none sig C_3_2 extends Cell {} { num = 3 }\none sig C_3_3 extends Cell {}\none sig C_3_4 extends Cell {}\none sig C_4_0 extends Cell {}\none sig C_4_1 extends Cell {}\none sig C_4_2 extends Cell {}\none sig C_4_3 extends Cell {} { num = 1 }\none sig C_4_4 extends Cell {}\n\nfact { C_0_0.adjacent = C_0_1 + C_1_0 }\nfact { C_1_0.adjacent = C_1_1 + C_0_0 + C_2_0 }\nfact { C_2_0.adjacent = C_2_1 + C_1_0 + C_3_0 }\nfact { C_3_0.adjacent = C_3_1 + C_2_0 + C_4_0 }\nfact { C_4_0.adjacent = C_4_1 + C_3_0 }\nfact { C_0_1.adjacent = C_0_0 + C_0_2 + C_1_1 }\nfact { C_1_1.adjacent = C_1_0 + C_1_2 + C_0_1 + C_2_1 }\nfact { C_2_1.adjacent = C_2_0 + C_2_2 + C_1_1 + C_3_1 }\nfact { C_3_1.adjacent = C_3_0 + C_3_2 + C_2_1 + C_4_1 }\nfact { C_4_1.adjacent = C_4_0 + C_4_2 + C_3_1 }\nfact { C_0_2.adjacent = C_0_1 + C_0_3 + C_1_2 }\nfact { C_1_2.adjacent = C_1_1 + C_1_3 + C_0_2 + C_2_2 }\nfact { C_2_2.adjacent = C_2_1 + C_2_3 + C_1_2 + C_3_2 }\nfact { C_3_2.adjacent = C_3_1 + C_3_3 + C_2_2 + C_4_2 }\nfact { C_4_2.adjacent = C_4_1 + C_4_3 + C_3_2 }\nfact { C_0_3.adjacent = C_0_2 + C_0_4 + C_1_3 }\nfact { C_1_3.adjacent = C_1_2 + C_1_4 + C_0_3 + C_2_3 }\nfact { C_2_3.adjacent = C_2_2 + C_2_4 + C_1_3 + C_3_3 }\nfact { C_3_3.adjacent = C_3_2 + C_3_4 + C_2_3 + C_4_3 }\nfact { C_4_3.adjacent = C_4_2 + C_4_4 + C_3_3 }\nfact { C_0_4.adjacent = C_0_3 + C_1_4 }\nfact { C_1_4.adjacent = C_1_3 + C_0_4 + C_2_4 }\nfact { C_2_4.adjacent = C_2_3 + C_1_4 + C_3_4 }\nfact { C_3_4.adjacent = C_3_3 + C_2_4 + C_4_4 }\nfact { C_4_4.adjacent = C_4_3 + C_3_4 }\n\nrun {} for 3\n\n//Executing \"Run run$1 for 3\"\n//   Solver=sat4j Bitwidth=4 MaxSeq=3 SkolemDepth=1 Symmetry=20\n//   103562 vars. 1091 primary vars. 220440 clauses. 967ms.\n//   Instance found. Predicate is consistent. 2199ms.\n\n// Instance\n// O O O X O \n// O X X X O \n// O O X O O \n// X O X O X \n// O O O O O \n\n\nInstance\u306e\u4e2d\u306eO\u306f\u5185\u5074\u30de\u30b9\u3001X\u306f\u5916\u5074\u30de\u30b9\u306a\u306e\u3067\u3001\u305d\u306e\u5883\u754c\u7dda\u304c\u3053\u306e\u554f\u984c\u306e\u89e3\u3068\u306a\u308b\u3002\n\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u5224\u5b9a\u306e\u3068\u3053\u308d\u3067\u3001\u53cd\u5c04\u63a8\u79fb\u9589\u5305\u3092\u4f7f\u3063\u3066\u3044\u308b\u305b\u3044\u304b\u3069\u3046\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u304c\u3001\u3042\u307e\u308a\u8a08\u7b97\u52b9\u7387\u306f\u826f\u304f\u306a\u3044\u6a21\u69d8\u3002\n\u5f62\u5f0f\u624b\u6cd5\u306e\u30c4\u30fc\u30ebAlloy\u3067\u30b9\u30ea\u30b6\u30fc\u30ea\u30f3\u30af\u306e\u554f\u984c\u309230\u884c\u3067\u89e3\u3044\u3066\u307f\u305f\u3002\n\n\u30b9\u30ea\u30b6\u30fc\u30ea\u30f3\u30af\u306e\u30eb\u30fc\u30eb\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3002\n\n1. \u6570\u5b57\u306f\u5468\u56f2\u306e\u7dda\u306e\u672c\u6570\u3092\u793a\u3059\u3002\n2. \u7dda\u306f\u4ea4\u5dee\u3084\u679d\u5206\u304b\u308c\u3057\u306a\u3044\u3002\n3. \u7dda\u306f\u5168\u4f53\u3067\u4e00\u3064\u306e\u8f2a\u306b\u306a\u308b\u3002\n\n\u8a73\u3057\u3044\u89e3\u8aac http://www.nikoli.com/ja/puzzles/slitherlink/rule.html\n\n\u77ed\u304f\u66f8\u304f\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u30eb\u30fc\u30eb2\u30683\u3092\u6b21\u306e\u3088\u3046\u306b\u89e3\u91c8\u3059\u308b\u3053\u3068\u3002\n\n* \u8981\u306f\u7dda\u3068\u3044\u3046\u306e\u306f\u5185\u5074\u30a8\u30ea\u30a2\u3068\u5916\u5074\u30a8\u30ea\u30a2\u306b\u5206\u3051\u308b\u5883\u754c\u7dda\u3002\n* \u5185\u5074\u30de\u30b9\u306f\u5168\u90e8\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3002\n* \u5916\u5074\u30de\u30b9\u306f\u8fba\u306e\u5916\u5074\u30de\u30b9\u306b\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3002\n\n\u3053\u3046\u3059\u308b\u3068\u3001\u7dda\u306e\u679d\u5206\u304b\u308c\u3068\u304b\u30eb\u30fc\u30d7\u3068\u304b\u306e\u5224\u5b9a\u306f\u3001\u7279\u306b\u5fc5\u8981\u306a\u3044\u3002\n\n```lang:alloy\nabstract sig Board {\n  maxadjs: Int\n}\n\nabstract sig Side {}\none sig Inside, Outside extends Side {}\n\nabstract sig Cell {\n  adjacent: some Cell,\n  num: Int,\n  side: one Side\n}\n\nfact { adjacent = ~adjacent }\nfact { all c: Cell | c not in c.adjacent }\n\nfun ourside: Cell -> Cell {\n  {c0, c1: Cell | c1.side = c0.side and c1 in c0.adjacent}\n}\n\nfun adj_inside: Cell -> Cell {\n  {c0, c1: Cell | c1.side = Inside and c1 in c0.adjacent}\n}\n\nfact { all c: Cell | c.side = Inside => c.num = sub[Board.maxadjs, #c.adj_inside] }\nfact { all c: Cell | c.side = Outside => c.num = #c.adj_inside }\n\nfact { all c0, c1: Cell | (c0 + c1).side = Inside => c1 in c0.*ourside }\nfact { all c0: Cell | c0.side = Outside =>\n  some c1: Cell | c1 in c0.*ourside and #(c1.adjacent) < Board.maxadjs }\n\n\n// Example\n// _ _ 3 _ _\n// _ 3 _ 2 2\n// 2 2 _ _ 2\n// 3 _ 3 _ _\n// _ _ _ 1 _\n\none sig SquareBoard extends Board {} { maxadjs = 4 }\none sig C_0_0 extends Cell {}\none sig C_0_1 extends Cell {}\none sig C_0_2 extends Cell {} { num = 3 }\none sig C_0_3 extends Cell {}\none sig C_0_4 extends Cell {}\none sig C_1_0 extends Cell {}\none sig C_1_1 extends Cell {} { num = 3 }\none sig C_1_2 extends Cell {}\none sig C_1_3 extends Cell {} { num = 2 }\none sig C_1_4 extends Cell {} { num = 2 }\none sig C_2_0 extends Cell {} { num = 2 }\none sig C_2_1 extends Cell {} { num = 2 }\none sig C_2_2 extends Cell {}\none sig C_2_3 extends Cell {}\none sig C_2_4 extends Cell {} { num = 2 }\none sig C_3_0 extends Cell {} { num = 3 }\none sig C_3_1 extends Cell {}\none sig C_3_2 extends Cell {} { num = 3 }\none sig C_3_3 extends Cell {}\none sig C_3_4 extends Cell {}\none sig C_4_0 extends Cell {}\none sig C_4_1 extends Cell {}\none sig C_4_2 extends Cell {}\none sig C_4_3 extends Cell {} { num = 1 }\none sig C_4_4 extends Cell {}\n\nfact { C_0_0.adjacent = C_0_1 + C_1_0 }\nfact { C_1_0.adjacent = C_1_1 + C_0_0 + C_2_0 }\nfact { C_2_0.adjacent = C_2_1 + C_1_0 + C_3_0 }\nfact { C_3_0.adjacent = C_3_1 + C_2_0 + C_4_0 }\nfact { C_4_0.adjacent = C_4_1 + C_3_0 }\nfact { C_0_1.adjacent = C_0_0 + C_0_2 + C_1_1 }\nfact { C_1_1.adjacent = C_1_0 + C_1_2 + C_0_1 + C_2_1 }\nfact { C_2_1.adjacent = C_2_0 + C_2_2 + C_1_1 + C_3_1 }\nfact { C_3_1.adjacent = C_3_0 + C_3_2 + C_2_1 + C_4_1 }\nfact { C_4_1.adjacent = C_4_0 + C_4_2 + C_3_1 }\nfact { C_0_2.adjacent = C_0_1 + C_0_3 + C_1_2 }\nfact { C_1_2.adjacent = C_1_1 + C_1_3 + C_0_2 + C_2_2 }\nfact { C_2_2.adjacent = C_2_1 + C_2_3 + C_1_2 + C_3_2 }\nfact { C_3_2.adjacent = C_3_1 + C_3_3 + C_2_2 + C_4_2 }\nfact { C_4_2.adjacent = C_4_1 + C_4_3 + C_3_2 }\nfact { C_0_3.adjacent = C_0_2 + C_0_4 + C_1_3 }\nfact { C_1_3.adjacent = C_1_2 + C_1_4 + C_0_3 + C_2_3 }\nfact { C_2_3.adjacent = C_2_2 + C_2_4 + C_1_3 + C_3_3 }\nfact { C_3_3.adjacent = C_3_2 + C_3_4 + C_2_3 + C_4_3 }\nfact { C_4_3.adjacent = C_4_2 + C_4_4 + C_3_3 }\nfact { C_0_4.adjacent = C_0_3 + C_1_4 }\nfact { C_1_4.adjacent = C_1_3 + C_0_4 + C_2_4 }\nfact { C_2_4.adjacent = C_2_3 + C_1_4 + C_3_4 }\nfact { C_3_4.adjacent = C_3_3 + C_2_4 + C_4_4 }\nfact { C_4_4.adjacent = C_4_3 + C_3_4 }\n\nrun {} for 3\n\n//Executing \"Run run$1 for 3\"\n//   Solver=sat4j Bitwidth=4 MaxSeq=3 SkolemDepth=1 Symmetry=20\n//   103562 vars. 1091 primary vars. 220440 clauses. 967ms.\n//   Instance found. Predicate is consistent. 2199ms.\n\n// Instance\n// O O O X O \n// O X X X O \n// O O X O O \n// X O X O X \n// O O O O O \n```\n\nInstance\u306e\u4e2d\u306e`O`\u306f\u5185\u5074\u30de\u30b9\u3001`X`\u306f\u5916\u5074\u30de\u30b9\u306a\u306e\u3067\u3001\u305d\u306e\u5883\u754c\u7dda\u304c\u3053\u306e\u554f\u984c\u306e\u89e3\u3068\u306a\u308b\u3002\n\n\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u5224\u5b9a\u306e\u3068\u3053\u308d\u3067\u3001\u53cd\u5c04\u63a8\u79fb\u9589\u5305\u3092\u4f7f\u3063\u3066\u3044\u308b\u305b\u3044\u304b\u3069\u3046\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u304c\u3001\u3042\u307e\u308a\u8a08\u7b97\u52b9\u7387\u306f\u826f\u304f\u306a\u3044\u6a21\u69d8\u3002\n", "tags": ["AlloyAnalyzer", "Alloy"]}