{"context": " More than 1 year has passed since last update.GCD \u3067 dispatch \u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u3044\u30b1\u30fc\u30b9\u3068\u3044\u3046\u306e\u304c\u3088\u304f\u3042\u308a\u307e\u3057\u3066 1\u3001Objective-C \u306e\u5834\u5408\u306f\u3044\u3064\u3082\u4f7f\u3063\u3066\u308b\u30b9\u30cb\u30da\u30c3\u30c8\u304c\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001Swift\u3067\u306f\u3069\u3046\u66f8\u304f\u306e\u304b\u306a\u3068\u30b0\u30b0\u3063\u305f\u3089\u3001\u3053\u3061\u3089 \u306e\u30b3\u30fc\u30c9\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\n\u3067\u3001\u547d\u540d\u306b\u9055\u548c\u611f\u304c\u3042\u3063\u305f\u308a\u3001\u9045\u5ef6\u5b9f\u884c\u30ad\u30e5\u30fc\u304c\u30e1\u30a4\u30f3\u30ad\u30e5\u30fc\u9650\u5b9a\u3060\u3063\u305f\u308a\u3001Swift\u7684\u3067\u306a\u3044\u66f8\u304d\u65b9\u3060\u3063\u305f\u308a\u3057\u305f\u306e\u3092\u4fee\u6b63\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\nCancelableBlock.swift\ntypealias dispatch_cancelable_block_t = (cancel:Bool) -> (Void)\n\nprivate func dispatch_after_delay(delay: Double, queue: dispatch_queue_t, block: dispatch_block_t?) -> dispatch_cancelable_block_t? {\n    guard let block = block else { return nil }\n    var originalBlock: dispatch_block_t? = block\n    var cancelableBlock: dispatch_cancelable_block_t? = nil\n    let delayBlock: dispatch_cancelable_block_t = {(cancel: Bool) -> Void in\n        if let originalBlock = originalBlock where !cancel {\n            dispatch_async(queue, originalBlock)\n        }\n        cancelableBlock = nil\n        originalBlock = nil\n    }\n    cancelableBlock = delayBlock\n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, Int64(delay * Double(NSEC_PER_SEC))), queue) { () -> Void in\n        if let cancelableBlock = cancelableBlock {\n            cancelableBlock(cancel: false)\n        }\n    }\n    return cancelableBlock\n}\n\nfunc dispatch_after_delay(delay: Double, block: dispatch_block_t?) -> dispatch_cancelable_block_t? {\n    let queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0)\n    return dispatch_after_delay(delay, queue: queue, block: block)\n}\n\nfunc dispatch_on_main_queue_after_delay(delay: Double, block: dispatch_block_t?) -> dispatch_cancelable_block_t? {\n    return dispatch_after_delay(delay, queue: dispatch_get_main_queue(), block: block)\n}\n\nfunc cancel_block(block: dispatch_cancelable_block_t?) {\n    if let block = block {\n        block(cancel: true)\n    }\n}\n\n\nGist \u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u3002\nhttps://gist.github.com/shu223/e7e4ab419d1e53061249\n\n\u4f7f\u3044\u65b9\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u3066\u3001\nvar block: dispatch_cancelable_block_t?\n\n\u9045\u5ef6\u51e6\u7406\u5b9f\u884c\u6642\u306b\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\nblock = dispatch_after_delay(delay, block: { [weak self] () -> Void in\n    // Something\n})\n\n\uff08\u30e1\u30a4\u30f3\u30ad\u30e5\u30fc\u3067\u51e6\u7406\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\uff09\nblock = dispatch_on_main_queue_after_delay(delay, block: { [weak self] () -> Void in\n    // Something\n})\n\n\u975e\u540c\u671f\uff0f\u9045\u5ef6\u51e6\u7406\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u3044\u5834\u5408\u306f cancel_block \u3092\u547c\u3073\u307e\u3059\u3002\ncancel_block(block)\n\n\uff08block \u304c nil \u3067\u3042\u308c\u3070\u4f55\u3082\u3057\u306a\u3044\u3060\u3051\u306a\u306e\u3067\u3001if let \u3068\u304b\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff09\n\n\n\n\n\u4f8b\uff1a watchOS 2 \u3067\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u5b8c\u4e86\u6642\u306b\u51e6\u7406\u3092\u3055\u305b\u305f\u3044\u5834\u5408\u3068\u304b\u3002\u6a19\u6e96\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u305d\u3046\u3044\u3046\u30d6\u30ed\u30c3\u30af\u3092\u6e21\u305b\u306a\u3044\u306e\u3067GCD\u3067\u9045\u5ef6\u51e6\u7406\u3092dispatch\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u304c\u3001InterfaceObject\u3092\u8ffd\u52a0\u3057\u305f\u308a\u6d88\u3057\u305f\u308a\u96a0\u3057\u305f\u308a\u304ciOS\u307b\u3069\u81ea\u7531\u3058\u3083\u306a\u3044\u306e\u3067\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u9069\u5207\u306b\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u308a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u00a0\u21a9\n\n\n\nGCD \u3067 dispatch \u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u3044\u30b1\u30fc\u30b9\u3068\u3044\u3046\u306e\u304c\u3088\u304f\u3042\u308a\u307e\u3057\u3066 [^1]\u3001Objective-C \u306e\u5834\u5408\u306f\u3044\u3064\u3082\u4f7f\u3063\u3066\u308b\u30b9\u30cb\u30da\u30c3\u30c8\u304c\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001Swift\u3067\u306f\u3069\u3046\u66f8\u304f\u306e\u304b\u306a\u3068\u30b0\u30b0\u3063\u305f\u3089\u3001[\u3053\u3061\u3089](https://github.com/katleta3000/CancelBlocks/blob/master/CancelBlocks.swift) \u306e\u30b3\u30fc\u30c9\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\n\n[^1]: \u4f8b\uff1a watchOS 2 \u3067\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u5b8c\u4e86\u6642\u306b\u51e6\u7406\u3092\u3055\u305b\u305f\u3044\u5834\u5408\u3068\u304b\u3002\u6a19\u6e96\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u305d\u3046\u3044\u3046\u30d6\u30ed\u30c3\u30af\u3092\u6e21\u305b\u306a\u3044\u306e\u3067GCD\u3067\u9045\u5ef6\u51e6\u7406\u3092dispatch\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u304c\u3001InterfaceObject\u3092\u8ffd\u52a0\u3057\u305f\u308a\u6d88\u3057\u305f\u308a\u96a0\u3057\u305f\u308a\u304ciOS\u307b\u3069\u81ea\u7531\u3058\u3083\u306a\u3044\u306e\u3067\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u9069\u5207\u306b\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u308a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\n\u3067\u3001\u547d\u540d\u306b\u9055\u548c\u611f\u304c\u3042\u3063\u305f\u308a\u3001\u9045\u5ef6\u5b9f\u884c\u30ad\u30e5\u30fc\u304c\u30e1\u30a4\u30f3\u30ad\u30e5\u30fc\u9650\u5b9a\u3060\u3063\u305f\u308a\u3001Swift\u7684\u3067\u306a\u3044\u66f8\u304d\u65b9\u3060\u3063\u305f\u308a\u3057\u305f\u306e\u3092\u4fee\u6b63\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```swift:CancelableBlock.swift\ntypealias dispatch_cancelable_block_t = (cancel:Bool) -> (Void)\n\nprivate func dispatch_after_delay(delay: Double, queue: dispatch_queue_t, block: dispatch_block_t?) -> dispatch_cancelable_block_t? {\n    guard let block = block else { return nil }\n    var originalBlock: dispatch_block_t? = block\n    var cancelableBlock: dispatch_cancelable_block_t? = nil\n    let delayBlock: dispatch_cancelable_block_t = {(cancel: Bool) -> Void in\n        if let originalBlock = originalBlock where !cancel {\n            dispatch_async(queue, originalBlock)\n        }\n        cancelableBlock = nil\n        originalBlock = nil\n    }\n    cancelableBlock = delayBlock\n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, Int64(delay * Double(NSEC_PER_SEC))), queue) { () -> Void in\n        if let cancelableBlock = cancelableBlock {\n            cancelableBlock(cancel: false)\n        }\n    }\n    return cancelableBlock\n}\n\nfunc dispatch_after_delay(delay: Double, block: dispatch_block_t?) -> dispatch_cancelable_block_t? {\n    let queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0)\n    return dispatch_after_delay(delay, queue: queue, block: block)\n}\n\nfunc dispatch_on_main_queue_after_delay(delay: Double, block: dispatch_block_t?) -> dispatch_cancelable_block_t? {\n    return dispatch_after_delay(delay, queue: dispatch_get_main_queue(), block: block)\n}\n\nfunc cancel_block(block: dispatch_cancelable_block_t?) {\n    if let block = block {\n        block(cancel: true)\n    }\n}\n```\n\n\nGist \u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\nhttps://gist.github.com/shu223/e7e4ab419d1e53061249\n\n##\u4f7f\u3044\u65b9\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u3066\u3001\n\n```swift\nvar block: dispatch_cancelable_block_t?\n```\n\n\u9045\u5ef6\u51e6\u7406\u5b9f\u884c\u6642\u306b\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\n\n```swift\nblock = dispatch_after_delay(delay, block: { [weak self] () -> Void in\n    // Something\n})\n```\n\n\uff08\u30e1\u30a4\u30f3\u30ad\u30e5\u30fc\u3067\u51e6\u7406\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\uff09\n\n```swift\nblock = dispatch_on_main_queue_after_delay(delay, block: { [weak self] () -> Void in\n    // Something\n})\n```\n\n\u975e\u540c\u671f\uff0f\u9045\u5ef6\u51e6\u7406\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u3044\u5834\u5408\u306f `cancel_block` \u3092\u547c\u3073\u307e\u3059\u3002\n\n```\ncancel_block(block)\n```\n\n\uff08`block` \u304c `nil` \u3067\u3042\u308c\u3070\u4f55\u3082\u3057\u306a\u3044\u3060\u3051\u306a\u306e\u3067\u3001`if let` \u3068\u304b\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff09\n\n\n", "tags": ["Swift", "iOS", "watchOS"]}