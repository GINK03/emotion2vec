{"context": " More than 1 year has passed since last update.\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\n$ tree -I \"*pyc\"\n.\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hoge.py\n\u2514\u2500\u2500 test\n    \u2514\u2500\u2500 hoge_test.py\n\n\n\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\n\nhoge.py\n1 class Hoge:\n2   def moge(self):\n3     return True\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\nhoge_test.py\n 1 try:\n 2     import unittest2 as unittest\n 3 except (ImportError):\n 4     import unittest\n 5 from mock import *\n 6\n 7 import sys, os\n 8 dir_path = os.path.dirname(os.path.abspath(__file__))\n 9 sys.path.append(dir_path + '/../src')\n10 from hoge import Hoge\n11\n12\n13 class TestHoge(unittest.TestCase):\n14\n15   def setUp(self):\n16     self.sut = Hoge()\n17\n18   def test_hoge_mock(self):\n19     self.sut.moge = MagicMock(return_value=False)\n20     self.assertFalse(self.sut.moge())\n21\n22   def test_hoge_raw(self):\n23     self.assertTrue(self.sut.moge())\n24\n25 if __name__ == '__main__':\n26   unittest.main()\n\n\n\n\u30c6\u30b9\u30c8\u7d50\u679c\n..\n----------------------------------------------------------------------\nRan 2 tests in 0.000s\n\nOK\n\n\n## \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\n```\n$ tree -I \"*pyc\"\n.\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hoge.py\n\u2514\u2500\u2500 test\n    \u2514\u2500\u2500 hoge_test.py\n```\n\n## \u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\n```python:hoge.py\n1 class Hoge:\n2   def moge(self):\n3     return True\n```\n\n## \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n```python:hoge_test.py\n 1 try:\n 2     import unittest2 as unittest\n 3 except (ImportError):\n 4     import unittest\n 5 from mock import *\n 6\n 7 import sys, os\n 8 dir_path = os.path.dirname(os.path.abspath(__file__))\n 9 sys.path.append(dir_path + '/../src')\n10 from hoge import Hoge\n11\n12\n13 class TestHoge(unittest.TestCase):\n14\n15   def setUp(self):\n16     self.sut = Hoge()\n17\n18   def test_hoge_mock(self):\n19     self.sut.moge = MagicMock(return_value=False)\n20     self.assertFalse(self.sut.moge())\n21\n22   def test_hoge_raw(self):\n23     self.assertTrue(self.sut.moge())\n24\n25 if __name__ == '__main__':\n26   unittest.main()\n```\n\n## \u30c6\u30b9\u30c8\u7d50\u679c\n```\n..\n----------------------------------------------------------------------\nRan 2 tests in 0.000s\n\nOK\n```\n", "tags": ["Python", "TDD"]}