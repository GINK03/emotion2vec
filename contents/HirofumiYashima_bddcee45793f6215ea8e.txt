{"context": "\n\n1. DataFrame\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e \u7528\u610f\n\n\n\uff08\u4f8b\uff09 csv\u30d5\u30a1\u30a4\u30eb \u3092 pandas.DataFrame \u306b \u8aad\u307f\u8fbc\u3080\n\n\nPython REPL\n>>> import pandas as pd\n>>> import numpy as np\n>>>\n>>> df_sample = pd.read_csv(\"sample_data.csv\")\n>>>\n>>> col_name_list = list(df_sample.columns)\n\n\n\n\n2. \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9 \u3067 \u5217\u540d\u30ea\u30b9\u30c8 \u3092 \u751f\u6210\u3067\u304d\u308b\n\n\nstr\u578b\u306e\u5024 \u3092 \uff11\u884c\u3067\u3082\u6301\u3064\u5217 \u306e \u5217\u540d \u3092 \u5217\u6319\n\n\nPython REPL\n>>> str_type_colname_list = []\n>>>\n>>> for col_name in col_name_list:\n...     if True in map(lambda x: type(x) == str, list(df_sample.ix[:, col_name])):\n...             str_type_colname_list.append(col_name)\n...\n>>>\n>>> len(str_type_colname_list)\n5\n>>>\n>>> print(str_type_colname_list)\n['employee_name', 'boss_name', 'department_name', 'address', 'description']\n>>>\n\n\n\uff08 \u4ee5\u4e0b \u3067\u3082 \u3067\u304d\u308b \uff09 \n\nPython REPL\n>>> str_type_colname_list = []\n>>>\n>>> str_type_colname_list\n[]\n>>>\n>>> for col_name in col_name_list:\n...     if True in map(lambda x: isinstance(x, str), list(df_sample.ix[:, col_name])):\n...             str_type_colname_list.append(col_name)\n...\n>>>\n5\n>>> print(str_type_colname_list)\n['employee_name', 'boss_name', 'department_name', 'address', 'description']\n>>>\n\n\n\n\ntype()\u30e1\u30bd\u30c3\u30c9 \u3068 isinstance()\u30e1\u30bd\u30c3\u30c9 \u306e \u9055\u3044\n\n\nLife with Python\uff082014/06/16\uff09\u300cPython Tips\uff1a\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u300d\n\n\nisinstance \u304c type \u3068\u7570\u306a\u308b\u306e\u306f\u3001\u30af\u30e9\u30b9\u304c\u7d99\u627f\u5143\u306e\u5834\u5408\u306b\u3082 True \u3092\u8fd4\u3059\u70b9\u3067\u3059\u3002\n\nPython\nclass Parent(object):\n   pass\n\nclass Child(Parent):\n   pass\n\nc1 = Child()\nprint isinstance(c1, Parent)  # => True\n# \u7d99\u627f\u5143\u306e\u30af\u30e9\u30b9\u3067\u3082 True \u3068\u306a\u308b\n\nprint isinstance(c1, object)  # => True\n# object \u3082\u540c\u69d8\n\n\n\n\n\nNumpy.float64\u578b \u306e \u5024 \u3092\uff11\u884c\u3067\u3082\u6301\u3064\u5217 \u306e \u5217\u540d \u3092 \u5217\u6319\u3059\u308b\u5834\u5408\n\n\nPython REPL\n>>> df_sample.ix[0, \"XYZ_digit\"]\n2.3615400790000001\n>>>\n\n\n\uff08 \u30c7\u30fc\u30bf\u578b \u306f\u3001'numpy.float64' \u578b \uff09\n\nPython REPL\n>>> type(df_sample.ix[0, \"XYZ_digit\"])\n<type 'numpy.float64'>\n>>>\n\n\n\uff08 \u4ee5\u4e0b\u306e\u6761\u4ef6\u5f0f \u3067 \u8a72\u5426\u5224\u5b9a \u3067\u304d\u308b \uff09\n\nPython REPL\n>>> type(df_sample.ix[0, \"XYZ_digit\"]) == np.float64\nTrue\n>>>\n\n\n\nPython REPL\n>>> import numpy\n>>>\n>>> type(df_sample.ix[0, \"XYZ_digit\"]) == numpy.float64\nTrue\n>>>\n\n\n\nPython REPL\n>>> type(df_sample.ix[0, \"XYZ_digit\"]) == int\nFalse\n>>>\n>>> type(df_sample.ix[0, \"XYZ_digit\"]) == float\nFalse\n>>>\n\n\n\uff08 \u53c2\u8003 \uff09\nnumpy.float64 \u306f float\u578b\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306a\u306e\u3067\u3001\n\nisinstance(numpy.float64\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8, float)\n\n\u306f\u3001True \u304c \u8fd4\u308b\u3002\n\nPython REPL\n>>> isinstance(df_sample.ix[0, \"XYZ_digit\"], float)\nTrue\n>>>\n\n\n\nPython REPL\n>>> isinstance(df_sample.ix[0, \"XYZ_digit\"], int)\nFalse\n>>>\n\n\n\u7d50\u8ad6\u3068\u3057\u3066\u3001\u4ee5\u4e0b \u3067 \u5217\u540d \u3092 \u5217\u6319\u3067\u304d\u308b\n\nPython REPL\n>>> numpyfloat64_type_colname_list = []\n>>>\n>>> for col_name in col_name_list:\n...     if True in map(lambda x: type(x) == numpy.float64, list(df_sample.ix[:, col_name])):\n...             numpyfloat64_type_colname_list.append(col_name)\n...\n>>>\n\n\n\nPython REPL\n>>> len(numpyfloat64_type_colname_list)\n12\n>>>\n>>> print(numpyfloat64_type_colname_list[0:3])\n['AAA_digit', 'ABC_digit', 'CFG_digit']\n>>>\n>>>\n\n\n##__1. DataFrame\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e \u7528\u610f__\n\n####__\uff08\u4f8b\uff09 csv\u30d5\u30a1\u30a4\u30eb \u3092 pandas.DataFrame \u306b \u8aad\u307f\u8fbc\u3080__\n\n\n```{python:Python REPL}\n>>> import pandas as pd\n>>> import numpy as np\n>>>\n>>> df_sample = pd.read_csv(\"sample_data.csv\")\n>>>\n>>> col_name_list = list(df_sample.columns)\n```\n\n___\n\n##__2. \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9 \u3067 \u5217\u540d\u30ea\u30b9\u30c8 \u3092 \u751f\u6210\u3067\u304d\u308b__\n\n* __str\u578b\u306e\u5024 \u3092 \uff11\u884c\u3067\u3082\u6301\u3064\u5217 \u306e \u5217\u540d \u3092 \u5217\u6319__\n\n```{python:Python REPL}\n>>> str_type_colname_list = []\n>>>\n>>> for col_name in col_name_list:\n...     if True in map(lambda x: type(x) == str, list(df_sample.ix[:, col_name])):\n...             str_type_colname_list.append(col_name)\n...\n>>>\n>>> len(str_type_colname_list)\n5\n>>>\n>>> print(str_type_colname_list)\n['employee_name', 'boss_name', 'department_name', 'address', 'description']\n>>>\n```\n\n__\uff08 \u4ee5\u4e0b \u3067\u3082 \u3067\u304d\u308b \uff09__ \n\n\n```{python:Python REPL}\n>>> str_type_colname_list = []\n>>>\n>>> str_type_colname_list\n[]\n>>>\n>>> for col_name in col_name_list:\n...     if True in map(lambda x: isinstance(x, str), list(df_sample.ix[:, col_name])):\n...             str_type_colname_list.append(col_name)\n...\n>>>\n5\n>>> print(str_type_colname_list)\n['employee_name', 'boss_name', 'department_name', 'address', 'description']\n>>>\n```\n\n___\n\n###__type()\u30e1\u30bd\u30c3\u30c9 \u3068 isinstance()\u30e1\u30bd\u30c3\u30c9 \u306e \u9055\u3044__\n\n* [Life with Python\uff082014/06/16\uff09\u300cPython Tips\uff1a\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u300d](http://www.lifewithpython.com/2014/06/python-check-object-instance-class-relationship-by-type-isinstance.html)\n\n> isinstance \u304c type \u3068\u7570\u306a\u308b\u306e\u306f\u3001\u30af\u30e9\u30b9\u304c\u7d99\u627f\u5143\u306e\u5834\u5408\u306b\u3082 True \u3092\u8fd4\u3059\u70b9\u3067\u3059\u3002\n>\n>```{python:Python}\n>class Parent(object):\n>    pass\n>\n>class Child(Parent):\n>    pass\n>\n>c1 = Child()\n>print isinstance(c1, Parent)  # => True\n># \u7d99\u627f\u5143\u306e\u30af\u30e9\u30b9\u3067\u3082 True \u3068\u306a\u308b\n>\n>print isinstance(c1, object)  # => True\n># object \u3082\u540c\u69d8\n>```\n\n\n___\n\n###__Numpy.float64\u578b \u306e \u5024 \u3092\uff11\u884c\u3067\u3082\u6301\u3064\u5217 \u306e \u5217\u540d \u3092 \u5217\u6319\u3059\u308b\u5834\u5408__\n\n```{python:Python REPL}\n>>> df_sample.ix[0, \"XYZ_digit\"]\n2.3615400790000001\n>>>\n```\n\n__\uff08 \u30c7\u30fc\u30bf\u578b \u306f\u3001'numpy.float64' \u578b \uff09__\n\n```{python:Python REPL}\n>>> type(df_sample.ix[0, \"XYZ_digit\"])\n<type 'numpy.float64'>\n>>>\n```\n\n__\uff08 \u4ee5\u4e0b\u306e\u6761\u4ef6\u5f0f \u3067 \u8a72\u5426\u5224\u5b9a \u3067\u304d\u308b \uff09__\n\n```{python:Python REPL}\n>>> type(df_sample.ix[0, \"XYZ_digit\"]) == np.float64\nTrue\n>>>\n```\n\n```{python:Python REPL}\n>>> import numpy\n>>>\n>>> type(df_sample.ix[0, \"XYZ_digit\"]) == numpy.float64\nTrue\n>>>\n```\n\n\n```{python:Python REPL}\n>>> type(df_sample.ix[0, \"XYZ_digit\"]) == int\nFalse\n>>>\n>>> type(df_sample.ix[0, \"XYZ_digit\"]) == float\nFalse\n>>>\n```\n\n__\uff08 \u53c2\u8003 \uff09__\n\nnumpy.float64 \u306f float\u578b\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306a\u306e\u3067\u3001\n\n> isinstance(numpy.float64\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8, float)\n\n\u306f\u3001True \u304c \u8fd4\u308b\u3002\n\n\n```{python:Python REPL}\n>>> isinstance(df_sample.ix[0, \"XYZ_digit\"], float)\nTrue\n>>>\n```\n\n```{python:Python REPL}\n>>> isinstance(df_sample.ix[0, \"XYZ_digit\"], int)\nFalse\n>>>\n```\n\n__\u7d50\u8ad6\u3068\u3057\u3066\u3001\u4ee5\u4e0b \u3067 \u5217\u540d \u3092 \u5217\u6319\u3067\u304d\u308b__\n\n\n```{python:Python REPL}\n>>> numpyfloat64_type_colname_list = []\n>>>\n>>> for col_name in col_name_list:\n...     if True in map(lambda x: type(x) == numpy.float64, list(df_sample.ix[:, col_name])):\n...             numpyfloat64_type_colname_list.append(col_name)\n...\n>>>\n```\n\n\n```{python:Python REPL}\n>>> len(numpyfloat64_type_colname_list)\n12\n>>>\n>>> print(numpyfloat64_type_colname_list[0:3])\n['AAA_digit', 'ABC_digit', 'CFG_digit']\n>>>\n>>>\n```\n", "tags": ["Python", "python2.7", "pandas", "DataFrame", "\u30c7\u30fc\u30bf\u5206\u6790"]}