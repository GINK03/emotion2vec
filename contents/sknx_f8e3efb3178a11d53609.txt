{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f\u30ea\u30af\u30eb\u30fc\u30c8\u30e9\u30a4\u30d5\u30b9\u30bf\u30a4\u30eb Advent Calendar 2015 - Qiita \u306e23\u65e5\u76ee\u3067\u3059\u3002\n\u3053\u3093\u306b\u3061\u306f\u3002\u73fe\u5728\u3001Java\u3067\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306eAPI\u3092\u4f5c\u3063\u3066\u3044\u308b\u95a2\u6839\u3067\u3059\u3002\nJava\u3068\u3044\u3048\u3070\u6700\u8fd1\u306fSpring Boot\u3092\u4f7f\u3046\u306e\u304c\u30c8\u30ec\u30f3\u30c9\u3067\u3059\u306d\u3002\n\n\u59cb\u3081\u306b\nSpring Boot \u306fJava8 \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\n\u5b9f\u306f\u3001Java8\u65e5\u6642API\uff08LocalDateTime, LocalDate, LocalTime\uff09\u3092\u4f7f\u7528\u3057\u3066\u3001\n\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u5165\u51fa\u529b\u3059\u308b\u969b\u306b\u306f\u3044\u304f\u3064\u304b\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3093\u3067\u3059\u3088\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Spring Boot\u3067Java8 \u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u65e5\u6642API\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5bfe\u8c61\n\u4eca\u56de\u3001\u4f7f\u7528\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\nSpring Boot\nTemplate Engines\uff1aThymeleaf\nO/R\u30de\u30c3\u30d1\u30fc\uff1aMybatis\n\nHibernate, Velocity\u3068\u304b\u306f\u4eca\u56de\u5bfe\u8c61\u3067\u306a\u3044\u3067\u3059\u306e\u3067\u3001\u3054\u6ce8\u610f\u3092\u3002\n\n\u74b0\u5883\n\u8a66\u3057\u305f\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\nJava 1.8.0_51\nSpring Boot 1.3.0.RELEASE\nMyBatis 3.3.0\nmybatis-spring 1.2.3\nMaven 3.0.5\n\n\nJackson\n@RequestBody, @ResponseBody \u7b49\u306eJSON\u5909\u63db\u306b Jackson \u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n1. pom.xml \u306bjackson-datatype-jsr310 \u3092\u8ffd\u52a0\u3002\n\npom.xml\n        <dependency>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-jsr310</artifactId>\n            <version>2.6.2</version>\n        </dependency>\n\n\n2.Configuration \u306bObjectMapper \u3092\u8ffd\u52a0\u3002 \n\nJacksonConfiguration\n@Configuration\npublic class JacksonConfiguration {\n  @Bean\n  @Primary\n  public ObjectMapper objectMapper() {\n    ObjectMapper objectMapper = new ObjectMapper();\n\n    // JSR310 Date and Time API \u5909\u63db\u5bfe\u5fdc\n    objectMapper.registerModule(new JavaTimeModule());\n    return objectMapper;\n  }\n}\n\n\n\u66f8\u5f0f\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001@JsonFormat \u3092\u3064\u3051\u308c\u3070OK\u3002\n    @JsonFormat(pattern = \"yyyy-MM-dd\")\n    private LocalDate date;\n\n\n@RequestParam\u3001@PathValiable\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\u5834\u5408\u306b\u306f\u3001\u3068\u304f\u306b\u7279\u5225\u306a\u3053\u3068\u306f\u3057\u306a\u304f\u3066\u69cb\u3044\u307e\u305b\u3093\u3002\njava.util.Date\u306e\u3068\u304d\u3068\u540c\u3058\u304f\u3001@DateTimeFormat \u3092\u3064\u3051\u308b\u3053\u3068\u3067\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nDemoRestController\n  @RequestMapping(value = \"/path/{pathDate}\", method = RequestMethod.GET)\n  public String path(\n      @DateTimeFormat(pattern = \"yyyyMMdd\") @PathVariable LocalDate pathDate,\n      @DateTimeFormat(pattern = \"yyyyMMdd\") @RequestParam LocalDate requestDate) {\n\n    return \"pathDate:\" + pathDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))\n        + \" requestDate:\" + requestDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n  }\n\n\n\nMyBatis\nMybatis\u3067Java8 \u65e5\u6642API\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u3001BaseTypeHandler \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u3089\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3053\u3053\u3067LocalDate\u3092\u6271\u3046TypeHandler\u30af\u30e9\u30b9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n1.BaseTypeHandler \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\n    \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306fjava.time.LocalDate \u306b\u3059\u308b\u3002\n\nLocalDateTypeHandler\npackage com.example.typeHandler;\n\nimport org.apache.ibatis.type.BaseTypeHandler;\nimport org.apache.ibatis.type.JdbcType;\nimport org.apache.ibatis.type.MappedTypes;\n\nimport java.sql.CallableStatement;\nimport java.sql.Date;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.time.LocalDate;\n\n/**\n * MyBatis\u3067{@link LocalDate}\u3092\u6271\u3046\u305f\u3081\u306e\u30cf\u30f3\u30c9\u30e9\u30fc.\n */\n@MappedTypes(LocalDate.class)\npublic class LocalDateTypeHandler\n    extends BaseTypeHandler<java.time.LocalDate> {\n\n  @Override\n  public void setNonNullParameter(PreparedStatement ps, int i, java.time.LocalDate parameter,\n      JdbcType jdbcType) throws SQLException {\n    ps.setDate(i, Date.valueOf(parameter));\n  }\n\n  @Override\n  public java.time.LocalDate getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    Date date = rs.getDate(columnName);\n    if (date == null) {\n      return null;\n    } else {\n      return date.toLocalDate();\n    }\n  }\n\n  @Override\n  public java.time.LocalDate getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    Date date = rs.getDate(columnIndex);\n    if (date == null) {\n      return null;\n    } else {\n      return date.toLocalDate();\n    }\n  }\n\n  @Override\n  public java.time.LocalDate getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    Date date = cs.getDate(columnIndex);\n    if (date == null) {\n      return null;\n    } else {\n      return date.toLocalDate();\n    }\n  }\n}\n\n\n2.Mybatis \u306econfig.xml \u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nconfig.xml\n<configuration>\n    <settings>\n        <setting name=\"mapUnderscoreToCamelCase\" value=\"true\"/>\n        <setting name=\"useColumnLabel\" value=\"true\"/>\n    </settings>\n    <!-- typeHandler \u3092\u8ffd\u52a0 -->\n    <typeHandlers>\n        <typeHandler handler=\"com.example.typeHandler.LocalDateTypeHandler\"/>\n    </typeHandlers>\n</configuration>\n\n\n\u540c\u69d8\u306bLocalDateTime\u3001LocalTime\u306eTypeHandler \u3092\u4f5c\u6210\u3057\u3001\u767b\u9332\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\nThymeleaf\nThymeleaf \u306b\u3064\u3044\u3066\u306f\u3001thymeleaf-extras-java8time \u306e\u8ffd\u52a0\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n#dates \u306fJava8 \u65e5\u6642API\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001#temporals \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n1.pom.xml \u306bthymeleaf-extras-java8time \u3092\u8ffd\u52a0\u3002\n\npom.xml\n        <dependency>\n            <groupId>org.thymeleaf.extras</groupId>\n            <artifactId>thymeleaf-extras-java8time</artifactId>\n            <version>2.1.0.RELEASE</version>\n        </dependency>\n\n\n2.Java8TimeDialect \u30af\u30e9\u30b9\u3092Bean\u767b\u9332\u3059\u308b\u3002\n\nThymeleafConfiguration\n  @Bean\n  public Java8TimeDialect java8TimeDialect() {\n    return new Java8TimeDialect();\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f#temporals \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n            <label name=\"testDate\" th:text=\"${#temporals.format(testDate, 'yyyy-MM-dd')}\" />\n\n\n\u307e\u3068\u3081\n\u3069\u3046\u3067\u3057\u305f\u304b\uff1f\n\u3044\u308d\u3044\u308d\u8a2d\u5b9a\u304c\u5fc5\u8981\u306a\u306e\u304c\u73fe\u72b6\u3067\u3059\u3002\n\u65b0\u3057\u304fJava8 \u65e5\u6642API \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u307e\u3060\u307e\u3060\u4f7f\u3044\u52dd\u624b\u304c\u3088\u308d\u3057\u304f\u306a\u3044\u304b\u306a\u3001\u3068\u3044\u3063\u305f\u5370\u8c61\u3092\u79c1\u306f\u611f\u3058\u307e\u3057\u305f\u3002\n\u65e9\u304f\u7279\u5225\u306a\u8a2d\u5b9a\u306a\u3057\u3067Java8 \u65e5\u6642API \u304c\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u3044\u3044\u3067\u3059\u306d\uff01\n\u3053\u306e\u8a18\u4e8b\u306f\u30ea\u30af\u30eb\u30fc\u30c8\u30e9\u30a4\u30d5\u30b9\u30bf\u30a4\u30eb [Advent Calendar 2015 - Qiita](http://qiita.com/advent-calendar/2015/recruitlifestyle) \u306e23\u65e5\u76ee\u3067\u3059\u3002\n\n\u3053\u3093\u306b\u3061\u306f\u3002\u73fe\u5728\u3001Java\u3067\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306eAPI\u3092\u4f5c\u3063\u3066\u3044\u308b\u95a2\u6839\u3067\u3059\u3002\nJava\u3068\u3044\u3048\u3070\u6700\u8fd1\u306fSpring Boot\u3092\u4f7f\u3046\u306e\u304c\u30c8\u30ec\u30f3\u30c9\u3067\u3059\u306d\u3002\n\n## \u59cb\u3081\u306b\nSpring Boot \u306fJava8 \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\n\u5b9f\u306f\u3001Java8\u65e5\u6642API\uff08LocalDateTime, LocalDate, LocalTime\uff09\u3092\u4f7f\u7528\u3057\u3066\u3001\n\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u5165\u51fa\u529b\u3059\u308b\u969b\u306b\u306f\u3044\u304f\u3064\u304b\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3093\u3067\u3059\u3088\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Spring Boot\u3067Java8 \u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u65e5\u6642API\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u5bfe\u8c61\n\u4eca\u56de\u3001\u4f7f\u7528\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n* Spring Boot\n* Template Engines\uff1aThymeleaf\n* O/R\u30de\u30c3\u30d1\u30fc\uff1aMybatis\n\nHibernate, Velocity\u3068\u304b\u306f\u4eca\u56de\u5bfe\u8c61\u3067\u306a\u3044\u3067\u3059\u306e\u3067\u3001\u3054\u6ce8\u610f\u3092\u3002\n\n\n## \u74b0\u5883\n\u8a66\u3057\u305f\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n* Java 1.8.0_51\n* Spring Boot 1.3.0.RELEASE\n* MyBatis 3.3.0\n* mybatis-spring 1.2.3\n* Maven 3.0.5\n\n## Jackson\n`@RequestBody`, `@ResponseBody` \u7b49\u306eJSON\u5909\u63db\u306b Jackson \u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n1. pom.xml \u306bjackson-datatype-jsr310 \u3092\u8ffd\u52a0\u3002\n\n   ```xml:pom.xml\n        <dependency>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-jsr310</artifactId>\n            <version>2.6.2</version>\n        </dependency>\n   ```\n \n2.Configuration \u306bObjectMapper \u3092\u8ffd\u52a0\u3002 \n\n```java:JacksonConfiguration\n@Configuration\npublic class JacksonConfiguration {\n  @Bean\n  @Primary\n  public ObjectMapper objectMapper() {\n    ObjectMapper objectMapper = new ObjectMapper();\n\n    // JSR310 Date and Time API \u5909\u63db\u5bfe\u5fdc\n    objectMapper.registerModule(new JavaTimeModule());\n    return objectMapper;\n  }\n}\n```\n\n\u66f8\u5f0f\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001`@JsonFormat` \u3092\u3064\u3051\u308c\u3070OK\u3002\n\n```java\n    @JsonFormat(pattern = \"yyyy-MM-dd\")\n    private LocalDate date;\n```\n\n## `@RequestParam`\u3001`@PathValiable`\n\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\u5834\u5408\u306b\u306f\u3001\u3068\u304f\u306b\u7279\u5225\u306a\u3053\u3068\u306f\u3057\u306a\u304f\u3066\u69cb\u3044\u307e\u305b\u3093\u3002\njava.util.Date\u306e\u3068\u304d\u3068\u540c\u3058\u304f\u3001`@DateTimeFormat` \u3092\u3064\u3051\u308b\u3053\u3068\u3067\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:DemoRestController\n  @RequestMapping(value = \"/path/{pathDate}\", method = RequestMethod.GET)\n  public String path(\n      @DateTimeFormat(pattern = \"yyyyMMdd\") @PathVariable LocalDate pathDate,\n      @DateTimeFormat(pattern = \"yyyyMMdd\") @RequestParam LocalDate requestDate) {\n\n    return \"pathDate:\" + pathDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))\n        + \" requestDate:\" + requestDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n  }\n```\n\n## MyBatis\nMybatis\u3067Java8 \u65e5\u6642API\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u3001`BaseTypeHandler` \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u3089\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3053\u3053\u3067`LocalDate`\u3092\u6271\u3046TypeHandler\u30af\u30e9\u30b9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n1.`BaseTypeHandler` \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\n    \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306f`java.time.LocalDate` \u306b\u3059\u308b\u3002\n\n```java:LocalDateTypeHandler\npackage com.example.typeHandler;\n\nimport org.apache.ibatis.type.BaseTypeHandler;\nimport org.apache.ibatis.type.JdbcType;\nimport org.apache.ibatis.type.MappedTypes;\n\nimport java.sql.CallableStatement;\nimport java.sql.Date;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.time.LocalDate;\n\n/**\n * MyBatis\u3067{@link LocalDate}\u3092\u6271\u3046\u305f\u3081\u306e\u30cf\u30f3\u30c9\u30e9\u30fc.\n */\n@MappedTypes(LocalDate.class)\npublic class LocalDateTypeHandler\n    extends BaseTypeHandler<java.time.LocalDate> {\n\n  @Override\n  public void setNonNullParameter(PreparedStatement ps, int i, java.time.LocalDate parameter,\n      JdbcType jdbcType) throws SQLException {\n    ps.setDate(i, Date.valueOf(parameter));\n  }\n\n  @Override\n  public java.time.LocalDate getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    Date date = rs.getDate(columnName);\n    if (date == null) {\n      return null;\n    } else {\n      return date.toLocalDate();\n    }\n  }\n\n  @Override\n  public java.time.LocalDate getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    Date date = rs.getDate(columnIndex);\n    if (date == null) {\n      return null;\n    } else {\n      return date.toLocalDate();\n    }\n  }\n\n  @Override\n  public java.time.LocalDate getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    Date date = cs.getDate(columnIndex);\n    if (date == null) {\n      return null;\n    } else {\n      return date.toLocalDate();\n    }\n  }\n}\n```\n\n\n2.Mybatis \u306econfig.xml \u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```config.xml\n<configuration>\n    <settings>\n        <setting name=\"mapUnderscoreToCamelCase\" value=\"true\"/>\n        <setting name=\"useColumnLabel\" value=\"true\"/>\n    </settings>\n    <!-- typeHandler \u3092\u8ffd\u52a0 -->\n    <typeHandlers>\n        <typeHandler handler=\"com.example.typeHandler.LocalDateTypeHandler\"/>\n    </typeHandlers>\n</configuration>\n```\n\n\u540c\u69d8\u306b`LocalDateTime`\u3001`LocalTime`\u306eTypeHandler \u3092\u4f5c\u6210\u3057\u3001\u767b\u9332\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\n## Thymeleaf\nThymeleaf \u306b\u3064\u3044\u3066\u306f\u3001thymeleaf-extras-java8time \u306e\u8ffd\u52a0\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n`#dates` \u306fJava8 \u65e5\u6642API\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001`#temporals` \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\n1.pom.xml \u306bthymeleaf-extras-java8time \u3092\u8ffd\u52a0\u3002\n\n```xml:pom.xml\n\t\t<dependency>\n\t\t\t<groupId>org.thymeleaf.extras</groupId>\n\t\t\t<artifactId>thymeleaf-extras-java8time</artifactId>\n\t\t\t<version>2.1.0.RELEASE</version>\n\t\t</dependency>\n```\n\n2.`Java8TimeDialect` \u30af\u30e9\u30b9\u3092Bean\u767b\u9332\u3059\u308b\u3002\n\n```java:ThymeleafConfiguration\n  @Bean\n  public Java8TimeDialect java8TimeDialect() {\n    return new Java8TimeDialect();\n```\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f`#temporals` \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```html\n            <label name=\"testDate\" th:text=\"${#temporals.format(testDate, 'yyyy-MM-dd')}\" />\n```\n\n## \u307e\u3068\u3081\n\u3069\u3046\u3067\u3057\u305f\u304b\uff1f\n\u3044\u308d\u3044\u308d\u8a2d\u5b9a\u304c\u5fc5\u8981\u306a\u306e\u304c\u73fe\u72b6\u3067\u3059\u3002\n\u65b0\u3057\u304fJava8 \u65e5\u6642API \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u307e\u3060\u307e\u3060\u4f7f\u3044\u52dd\u624b\u304c\u3088\u308d\u3057\u304f\u306a\u3044\u304b\u306a\u3001\u3068\u3044\u3063\u305f\u5370\u8c61\u3092\u79c1\u306f\u611f\u3058\u307e\u3057\u305f\u3002\n\n\u65e9\u304f\u7279\u5225\u306a\u8a2d\u5b9a\u306a\u3057\u3067Java8 \u65e5\u6642API \u304c\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u3044\u3044\u3067\u3059\u306d\uff01\n\n\n", "tags": ["Java", "java8", "Thymeleaf", "MyBatis", "spring-boot"]}