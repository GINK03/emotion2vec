{"tags": ["Java", "Stream", "java8"], "context": "\u3069\u3046\u3082\u3001Java\u306eStream\u306b\u3064\u3044\u3066\u6295\u7a3f\u3057\u3066\u3044\u305f\u3089\u3060\u3093\u3060\u3093\u697d\u3057\u304f\u306a\u3063\u3066\u304d\u305f\u3082\u306e\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\n\u30ea\u30b9\u30c8\u30af\u30e9\u30b9\u3068\u306f\n\u30ea\u30b9\u30c8\u30af\u30e9\u30b9\u4f5c\u3063\u3066\u307e\u3059\u304b\uff1f\u30ea\u30b9\u30c8\u30af\u30e9\u30b9\u3068\u8a00\u3063\u3066\u3082\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u62e1\u5f35\u3067\u306f\u306a\u304f\u3066\u3001\u96c6\u7d04\u30af\u30e9\u30b9\u3068\u3057\u3066\u4fbf\u5b9c\u4e0a\u305d\u3046\u547c\u3093\u3067\u3044\u308b\u7269\u3067\u3059\u3002\n\u300c\u6c42\u3081\u308b\u306a\u3001\u547d\u3058\u3088\u300d\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u96c6\u7d04\u306fList<T>\u3067\u306f\u306a\u304f\u305d\u308c\u5c02\u7528\u306e\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3068\u3044\u3046\u65b9\u91dd\u3067\u4ed5\u4e8b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n// \u6c42\u3081\u308b\u4f8b \u5229\u7528\u5074\u304c\u4e2d\u8eab\u306e\u5b9f\u72b6\u306b\u8a73\u3057\u3044\n\nList<Item> items = Arrays.asList();\n\nList<Item> news = items\n        .stream()\n        .filter(item -> item.state == State.NEW)\n        .collect(Collectors.toList());\n\nList<Item> used = items\n        .stream()\n        .map(item -> new Item(item.name, State.USED))\n        .collect(Collectors.toList());\n\n// \u547d\u3058\u308b\u4f8b \u8a73\u3057\u3044\u3053\u3068\u306f\u77e5\u3089\u306a\u3044\u3051\u3069\u547d\u3058\u308b\u3060\u3051\n\nItems items = Items.empty();\n\nItems news = items.pickNews();\n\nItems used = items.toUsed();\n\nstream -> map/filter -> toList\u306e\u4e00\u9023\u306e\u6d41\u308c\u306b\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u4ed8\u3051\u3066\u96c6\u7d04\u30af\u30e9\u30b9\u306b\u62bc\u3057\u8fbc\u3081\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u306e\u3067\n\u300c\u8a00\u8a9e\u4e0a\u5fc5\u8981\u3060\u304b\u3089\u66f8\u3044\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092\u6e1b\u3089\u3057\u300d\u300c\u9069\u5207\u306a\u540d\u524d\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u696d\u52d9\u30ed\u30b8\u30c3\u30af\u3060\u3051\u3092\u76ee\u7acb\u305f\u305b\u308b\u300d\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u307e\u305f\u3001\u300c\u7a7a\u306e\u72b6\u614b\u3067\u751f\u6210\u3059\u308b\u300d\u3068\u304b\u300c\u65b0\u54c1\u5224\u5b9a\u306fState.NEW\u3067\u884c\u3046\u300d\u3068\u304b\u300c\u4e2d\u53e4\u72b6\u614b\u3068\u306fState\u304cUSED\u3067\u3042\u308b\u300d\u3068\u304b\u8a00\u3046Item\u30af\u30e9\u30b9\u306e\u90fd\u5408\u3092\nItem\u30af\u30e9\u30b9\u3001\u304a\u3088\u3073Items\u30af\u30e9\u30b9\u304b\u3089\u4e00\u5207\u5916\u306b\u6f0f\u3089\u3055\u305a\u30ab\u30d7\u30bb\u30eb\u5316\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u300c\u65b0\u54c1\u5224\u5b9a\u306e\u4ed5\u69d8\u304c\u5909\u308f\u3063\u305f\u308a\u300d\u300c\u4e2d\u53e4\u72b6\u614b\u306f\u66f4\u306b\u540d\u524d\u306bSold\u304c\u4ed8\u304f\u300d\u3068\u304b\u8a00\u3046\u4ed5\u69d8\u5909\u66f4\u6642\u306b\u3082\n\u4fee\u6b63\u3059\u308b\u30af\u30e9\u30b9\u30921\u7b87\u6240\u306b\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\u30ea\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u4e2d\u8eab\n\u5f53\u7136\u3067\u3059\u304c\u3001\u62bc\u3057\u8fbc\u3081\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067Items\u30af\u30e9\u30b9\u306e\u4e2d\u8eab\u306e\u30b3\u30fc\u30c9\u91cf\u81ea\u4f53\u306f\u6e1b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\nItems\u30af\u30e9\u30b9\u3092\u958b\u3051\u3070stream()\u3068\u304b.collect(Collectors.toList())\u3068\u304bnew Items(\u3068\u304b\u305a\u3089\u305a\u3089\u66f8\u3044\u3066\u3042\u308b\u308f\u3051\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u305d\u306eJava\u3092\u66f8\u304f\u4e0a\u3067\u306a\u304f\u305b\u306a\u3044\u3051\u3069\u3001\u300c\u4ed5\u69d8\u4e0a\u306e\u610f\u5473\u306f\u7279\u306b\u6301\u3063\u3066\u306a\u3044\u30b3\u30fc\u30c9\u3092\u524a\u6e1b\u3059\u308b\u300d\u3053\u3068\u3092\u8a66\u307f\u308b\u8a18\u4e8b\u3067\u3059\u3002\n\u305d\u308c\u306b\u3088\u308a\u6975\u529b\u300c\u696d\u52d9\u30ed\u30b8\u30c3\u30af\u306e\u8aad\u307f\u66f8\u304d\u306b\u96c6\u4e2d\u3067\u304d\u308b\u30b3\u30fc\u30c9\u306b\u3059\u308b\u300d\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u7528\u30af\u30e9\u30b9\n\u4f8b\u306b\u3088\u3063\u3066\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7b49\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\uff08\u5b9f\u969b\u306b\u306flombok\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\uff09\n\uff08\u4e0a\u3067\u4f7f\u3063\u305fItems/Item\u3067\u306f\u306a\u304f\u3066\u3059\u3044\u307e\u305b\u3093...\uff09\n\nContract\npublic class Contract {\n    private final UserId userId;\n    private final Plan plan;\n\n    public boolean isPremium() {\n        return plan.isPremium();\n    }\n\n    // \u81ea\u8eab\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308b\u69d8\u306a\u30e1\u30bd\u30c3\u30c9\n    // \u305f\u3060 Immutable object \u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u65b0\u305f\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u3066\u8fd4\u3057\u3066\u3044\u308b\n    public Contract toNormal() {\n        return new Contract(userId, Plan.NORMAL);\n    }\n}\n\n\n\nContractList\npublic class ContractList {\n    private final List<Contract> values;\n}\n\n\n\n\u7d20\u306e\u30b3\u30fc\u30c9\u3068\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u305f\u30b3\u30fc\u30c9\u306e\u6bd4\u8f03\n\u4eca\u5f8cContracts\u3092ListClass\u3001Contract\u3092ElementClass\u3068\u3057\u307e\u3059\n\n\u751f\u6210\n\u305d\u3082\u305d\u3082\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\u306e\u304c\u9762\u5012\u3063\u3066\u30d1\u30bf\u30fc\u30f3\u304c\u5927\u534a\u3067\u3059\n\nList<ElementClass> -> ListClass\n\n\u3061\u306a\u307f\u306b\u3001\u4eca\u5f8c\u51fa\u3066\u304f\u308b\u5909\u6570constracts\u306f\u3053\u3053\u3067\u4f5c\u3063\u305f\u3082\u306e\u3068\u540c\u3058\u5024\u3060\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\n\nplain\nContractList contracts = new ContractList(\n        findAll()\n                .collect(Collectors.toList())\n);\n\n\n\u524d\u306b\u6295\u7a3f\u3057\u305fListUtil#construct\u3092\u4f7f\u3046\n\u3053\u308c\u6c17\u306b\u5165\u3063\u305f\u306e\uff57\n\nrefactored\nContractList contracts = findAll()\n        .collect(ListUtil.construct(ContractList::new));\n\n\n\n[] -> ListClass\n\n\u7a7a\u30ea\u30b9\u30c8\u304b\u3089\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3042\u308b\u3088\u306d\n\nplain\nContractList empty = new ContractList(\n        Collections.emptyList()\n);\n\n\nListClass\u306bempty()\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u307f\u308b\n\nContractList\npublic class ContractList {\n    // \u8272\u3005\u7565\n\n    public static ContractList empty() {\n        return new ContractList(Collections.emptyList());\n    }\n}\n\n\n\nrefactored\nContractList empty = ContractList.empty();\n\n\n\u30b7\u30f3\u30d7\u30eb\u3060\u3057\u3001Stream.empty()\u3084Optional.empty()\u3068\u3082\u96f0\u56f2\u6c17\u304c\u3042\u3046\n\u7a7a\u30ea\u30b9\u30c8\u306e\u4f5c\u308a\u65b9\u3082\u3076\u308c\u306a\u3044\uff08Arrays.asList()\u3068\u304b\u3067\u3082\u52d5\u304f\u3051\u3069\uff09\u304b\u3089\u751f\u6210\u306fListClass\u306b\u3084\u3089\u305b\u308b\u65b9\u304c\u826f\u3044\u3088\u306d\n\nElementClass -> List<ElementClass> -> ListClass\n\n\u5358\u4e00\u306eElementClass\u3092\u305f\u3060\u30ea\u30b9\u30c8\u306b\u3057\u3066ListClass\u306b\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\u5730\u5473\u306b\u5fc5\u8981\u306b\u306a\u308b\u3093\u3060\u3051\u3069\u3001\u601d\u3044\u306e\u5916\u5999\u306b\u9762\u5012\u306a\u306e\u304c\u3053\u308c\n\u9577\u3044\u3060\u308d...\n\nplain\nContractList singleton = new ContractList(\n        Collections.singletonList(\n                new Contract(new UserId(\"001\"), Plan.NORMAL)\n        )\n);\n\n\n\u3044\u307e\u3044\u3061\u826f\u304f\u5b9f\u88c5\u3067\u304d\u306a\u304b\u3063\u305f\u3051\u3069\u3001empty()\u3068\u4f3c\u305f\u767a\u60f3\u3067ElementClass\u306b\u3084\u3089\u305b\u308b\u306e\u304c\u826f\u3044\u304b\u306a\n\nContract\npublic class Contract {\n    // \u540c\u3058\u304f\u8272\u3005\u7565\n\n    public ContractList toList() {\n        return new ContractList(Collections.singletonList(this));\n    }\n}\n\n\n\nrefactored\nContractList singleton = new Contract(new UserId(\"001\"), Plan.NORMAL).toList();\n\n\n\nStream\n\u96c6\u5408\u306a\u3093\u3060\u3057stream\u51e6\u7406\u3057\u305f\u3044\u3088\u306d\n\u3068\u3044\u3046\u3053\u3068\u3067\u305d\u308c\u3089\u306e\u30b3\u30fc\u30c9\u3092\u524a\u6e1b\u3059\u308b\u305f\u3081\u306bListOf<ListClass, ElementClass>\u3068\u3044\u3046interface\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\n\u5b9f\u88c5\u3057\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u306fgetValues()\u3060\u3051\u3067\u3059\n\u3053\u3093\u306a\u611f\u3058\u3067\u5b9f\u88c5\u3057\u307e\u3059\n\u66f8\u304f\u3079\u304d\u4e8b\u306f\u3068\u3066\u3082\u5c11\u306a\u304f\u51fa\u6765\u307e\u3057\u305f\uff08lombok\u4f7f\u3063\u3066\u3044\u308c\u3070values\u306b@Getter\u4ed8\u3051\u308b\u3060\u3051\uff01\uff09\n\nContractList\npublic class ContractList implements ListOf<ContractList, Contract> {\n    @Getter\n    private final List<Contract> values;\n}\n\n\n\nListOf\npublic interface ListOf<ListClass, ElementClass> {\n    public List<ElementClass> getValues();\n\n    public default Stream<ElementClass> stream() {\n        return getValues().stream();\n    }\n\n    public default <AnotherListClass, AnotherElementClass> AnotherListClass map(\n            Function<ElementClass, AnotherElementClass> mapper,\n            Function<List<AnotherElementClass>, AnotherListClass> constructor\n    ) {\n        return stream().map(mapper).collect(ListUtil.construct(constructor));\n    }\n\n    public default ListClass filter(\n            Predicate<ElementClass> predicate,\n            Function<List<ElementClass>, ListClass> constructor\n    ) {\n        return stream().filter(predicate).collect(ListUtil.construct(constructor));\n    }\n}\n\n\n\u4ee5\u964d\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u30b3\u30fc\u30c9\u306f\u3053\u308c\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\n\nListClass -> Stream<ElementClass>\n\n\u4e2d\u8eab\u51fa\u3057\u3061\u3083\u3046\u306e\u3067\u4f55\u3067\u3082\u3055\u308c\u5f97\u3066\u3057\u307e\u3046...\n\nplain\ncontracts.getValues().stream();\n\n\n\u305f\u3060\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3063\u3066\u611f\u3058\u3060\u3051\u3069\u3001\u30ab\u30d7\u30bb\u30eb\u5316\u306e\u89b3\u70b9\u304b\u3089\u25cb\n\nrefactored\ncontracts.stream();\n\n\n\nListClass --map--> AnotherListClass\n\nmap\u3057\u305f\u7d50\u679c\u578b\u304c\u5909\u308f\u308b\u30d1\u30bf\u30fc\u30f3\n\u3060\u3093\u3060\u3093\u3068\u6587\u5b57\u6570\u3068\u884c\u6570\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u305f...\n\u5b9f\u30ed\u30b8\u30c3\u30af\u306f3\u884c\u76ee\u3060\u3051\u306a\u306e\u306b\u30015\u884c\u3082\u3042\u308b...\n\nplain\nUserIdList userIds = new UserIdList(\n        contracts.getValues().stream()\n                .map(Contract::getUserId)\n                .collect(Collectors.toList())\n);\n\n\nstream()\u3092\u8a2d\u3051\u305f\u767a\u60f3\u306e\u5ef6\u9577\u3067\u3001map()\u3082\u76f4\u63a5ListClass\u306b\u8a2d\u3051\u3066\u307f\u305f\n\u305d\u3057\u3066map()\u306e\u7b2c2\u5f15\u6570\u306b\u5909\u63db\u5f8c\u306e\u30af\u30e9\u30b9\u307e\u3067\u6559\u3048\u3066\u3042\u3052\u3066\u307f\u305f\u3089\u3001\u3053\u3046\u306a\u3063\u305f\n\nrefactored\nUserIdList userIds = contracts\n        .map(Contract::getUserId, UserIdList::new);\n\n\n\nListClass --filter--> ListClass\n\nfilter\u306f\u578b\u306f\u5909\u308f\u3089\u306a\u3044\u70b9\u3092\u9664\u3051\u3070map\u3068\u307b\u307c\u540c\u3058\n\u3084\u308a\u305f\u3044\u3053\u3068\u306f1\u884c\u3060\u3051\u306a\u306e\u306b5\u884c\u5fc5\u8981\u306a\u306e\u3082\u540c\u3058\n\nplain\nContractList premiums = new ContractList(\n        contracts.getValues().stream()\n                .filter(Contract::isPremium)\n                .collect(Collectors.toList())\n);\n\n\n\nrefactored\nContractList premiums = contracts\n        .filter(Contract::isPremium, ContractList::new);\n\n\n\nListClass --filter--> ListClass --map--> ListClass\n\n\u5f53\u7136\u9023\u7d50\u3082\u3059\u308b\u3060\u308d\u3046\n\nplain\nContractList normals = new ContractList(\n        contracts.getValues().stream()\n                .filter(Contract::isPremium)\n                .map(Contract::toNormal)\n                .collect(Collectors.toList())\n);\n\n\n\nrefactored\nContractList normals = contracts\n        .filter(Contract::isPremium, ContractList::new)\n        .map(Contract::toNormal, ContractList::new);\n\n\n\n\u8981\u7d20\u53d6\u5f97\n\u3053\u3053\u306f\u524d\u56de\u6295\u7a3f\u30cd\u30bf\u306a\u306e\u3067\u304a\u307e\u3051\u3067\u3059\nListUtil\u3082ListOf\u3068\u540c\u3058\u304f\u300c\u696d\u52d9\u30ed\u30b8\u30c3\u30af\u306b\u96c6\u4e2d\u3059\u308b\u3053\u3068\u300d\u3092\u76ee\u7684\u3068\u3057\u3066\u66f8\u3044\u305f\u3053\u3068\u3092\u793a\u3059\u76ee\u7684\u3067\u8f09\u305b\u3066\u307e\u3059\n\uff08\u3061\u3083\u3093\u3068\u5b9f\u88c5\u3057\u3066\u306a\u3044\u3051\u3069\uff09\u3053\u306e\u4f8b\u3067\u306f\u3042\u308b\u30e6\u30fc\u30b6\u306e\u6709\u52b9\u306a\u5951\u7d04\u3092\u53d6\u5f97\u3057\u307e\u3059\n\u904e\u53bb\u306e\u7121\u52b9\u306a\u5951\u7d04\u306f\u3044\u304f\u3064\u3082\u3042\u308b\u3051\u3069\u3001\u6709\u52b9\u306a\u5951\u7d04\u306f1\u3064\u3060\u3051\u306e\u306f\u305a\u3001\u3068\u3044\u3046\u67b6\u7a7a\u4ed5\u69d8\u3067\u3059\n\u5b9f\u969b\u306f\u305f\u3060\u306ewhere\u53e5\u306e\u7d50\u5408\u3060\u304b\u3089DB\u7684\u306b\u306f\u3044\u304f\u3064\u53d6\u308c\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u305f\u3081\u3001\u8907\u6570\u4ef6\u623b\u3059\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\nListClass -> ElementClass\n\n\u3042\u308b\u30e6\u30fc\u30b6\u306e\u6709\u52b9\u306a\u5951\u7d04\u306b\u5bfe\u3057\u3066\u306a\u3093\u3089\u304b\u306e\u64cd\u4f5c\u3092\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\u6709\u52b9\u306a\u5951\u7d04\u304c\u3042\u308b\u306f\u305a\u3068\u3044\u3046\u4ed5\u69d8\u306b\u5bfe\u3057\u3066\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\n\nplain\nList<Contract> list = findEnablingBy(new UserId(\"001\")).collect(Collectors.toList());\n\nif (list.size() == 1) {\n    Contract found = list.get(0);\n} else {\n    throw new RuntimeException(\"not be unique\");\n}\n\n\n\u524d\u306b\u6295\u7a3f\u3057\u305fListUtil.exactlyOne\u3092\u4f7f\u3063\u3066\u7d42\u7aef\u64cd\u4f5c\u3067\u6e08\u307e\u3059\n\nrefactored\nContract found = findEnablingBy(new UserId(\"001\"))\n        .collect(ListUtil.exactlyOne(() -> new RuntimeException(\"not be unique\")));\n\n\n\nListClass -> Optional<ElementClass>\n\n\u3053\u306e\u5f62\u3082\u7d50\u69cb\u3042\u308b\u3068\u601d\u3046\n\u3053\u3061\u3089\u306f\u3082\u3057\u6709\u52b9\u306a\u5951\u7d04\u304c\u3042\u3063\u305f\u3089\u4f55\u3089\u304b\u306e\u64cd\u4f5c\u3092\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\u6709\u52b9\u306a\u5951\u7d04\u304c\u7121\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u3044\u3046\u4ed5\u69d8\u306b\u5bfe\u3057\u3066\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\n\nplain\nList<Contract> list = findAll()\n        .filter(Contract::isPremium)\n        .collect(Collectors.toList());\n\nif (list.size() == 0) {\n    Optional<Contract> found = Optional.empty();\n} else {\n    Optional<Contract> found = Optional.of(list.get(0));\n}\n\n\n\u3053\u308c\u3082\u524d\u306b\u6295\u7a3f\u3057\u305fListUtil.headOpt\u3092\u4f7f\u3063\u3066\u7d42\u7aef\u64cd\u4f5c\u3067\u6e08\u307e\u3059\n\nrefactored\nOptional<Contract> found = findAll()\n        .filter(Contract::isPremium)\n        .collect(ListUtil.headOpt());\n\n\n\n\u3082\u3063\u3068\uff01\u3082\u3063\u3068\u66f8\u304f\u3053\u3068\u3092\u3092\u6e1b\u3089\u3057\u305f\u3044\uff01\n\u91cd\u306d\u3066\u8a00\u3046\u3051\u3069\u3001\u5225\u306b\u5999\u306a\u3053\u3068\u304c\u66f8\u304d\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u304f\u3066\n\u8a00\u8a9e\u7684\u306b\u5fc5\u8981\u306a\u624b\u66f8\u304d\u90e8\u5206\u3092\u305d\u304e\u843d\u3068\u3057\u3066\u30ed\u30b8\u30c3\u30af\u306b\u96c6\u4e2d\u3057\u305f\u3044\u3068\u8a00\u3046\u306e\u304c\u610f\u56f3\u3067\u3059\n\n\u751f\u6210\n\n[] -> ListClass\n\n\u7a7a\u30ea\u30b9\u30c8\u304b\u3089\u306e\u751f\u6210\u306f\u5168\u3066\u306eElementClass\u306b\u624b\u66f8\u304d\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u30af\u30e9\u30b9\u3092\u8a2d\u3051\u3066\u307f\u305f\n\nEmpty\npublic class Empty {\n    public static <ListClass, ElementClass> ListClass of(Function<List<ElementClass>, ListClass> constructor) {\n        return constructor.apply(Collections.emptyList());\n    }\n}\n\n\n\nrefactored\nContractList empty = Empty.of(ContractList::new);\n\n\n\u672c\u5f53\u306fContractList.empty()\u304c\u826f\u3044\u3093\u3060...\n\u3051\u3069Java\u3063\u3066static\u306a\u30e1\u30bd\u30c3\u30c9\u306fdefault\u5b9f\u88c5\u3092\u6301\u3063\u305f\u308aabstract\u30e1\u30bd\u30c3\u30c9\u6301\u3063\u305f\u308a\u51fa\u6765\u306a\u3044\u3093\u3060\u3088\u306d\uff1f\nContractList\u306b\u624b\u66f8\u304d\u3092\u305b\u305a\u306bContractList.empty()\u3092\u7528\u610f\u3059\u308b\u65b9\u6cd5\u306f\u7121\u3044\u306e\u304b...\n\u3051\u3069\u65b0\u3057\u3044ListClass\u3092\u4f5c\u308b\u3068\u304d\u306b\u66f8\u304f\u3079\u304d\u4e8b\u304c\u4e00\u5207\u306a\u3044\u70b9\u306f\u25cb\n\nStream\nstream\u306f\u578b\u304c\u5909\u308f\u3089\u306a\u3044\u5834\u5408\u306f\u7b2c2\u5f15\u6570\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u7121\u304f\u3057\u3066\u307f\u305f\u304b\u3063\u305f\n\u3042\u306e\u5999\u306a\u7b2c2\u5f15\u6570\u304c\u7121\u304f\u306a\u308b\u3068\u3001\u300c\u7bb1\u304c\u3042\u308b\u3001\u4e2d\u8eab\u306b\u4f55\u304b\u3057\u3066\u3001\u7bb1\u306b\u623b\u3059\u300d\u3068\u3044\u3046\u98a8\u306b\u306a\u3063\u3066\nListClass(\u7bb1)\u306emap/filter\u306fStream(\u7bb1)\u306emap/filter\u3068\u96f0\u56f2\u6c17\u304c\u540c\u3058\u306b\u306a\u308b\u3088\u306d\n\u3061\u3087\u3063\u3068\u3069\u3046\u304b\u306a\u3068\u306f\u601d\u3046\u3051\u3069\u3001ListOf\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u624b\u306b\u5165\u308c\u308b\u65b9\u6cd5\u3092\u6559\u3048\u3066\u3042\u3052\u3066\u307f\u305f\n\nListOf\npublic interface ListOf<ListClass, ElementClass> {\n    // \u4e00\u90e8\u7565\n\n    // \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u8ffd\u52a0\u3001\u4ee5\u4e0b\u306fdefault\n    public Function<List<ElementClass>, ListClass> getConstructor();\n\n    public default ListClass map(\n            Function<ElementClass, ElementClass> mapper\n    ) {\n        return map(mapper, getConstructor());\n    }\n\n    public default ListClass filter(\n            Predicate<ElementClass> predicate\n    ) {\n        return stream().filter(predicate).collect(ListUtil.construct(getConstructor()));\n    }\n}\n\n\n\nContractList\npublic class ContractList implements ListOf<ContractList, Contract> {\n    // \u8272\u3005\u7565\n\n    @Override\n    public Function<List<Contract>, ContractList> getConstructor() {\n        return ContractList::new;\n    }\n}\n\n\n\nListClass --map--> ListClass\n\nmap\u3057\u305f\u7d50\u679c\u578b\u304c\u5909\u308f\u3089\u306a\u3044\u30d1\u30bf\u30fc\u30f3\n\u578b\u304c\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u3042\u308c\u3070map\u306f\u81ea\u5206\u3067ListClass\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u624b\u306b\u5165\u308c\u308b\n\nrefactored\nContractList normals = contracts\n        .map(Contract::toNormal);\n\n\n\nListClass --filter--> ListClass\n\nfilter\u306f\u578b\u304c\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6559\u3048\u308b\u5fc5\u8981\u306f\u306a\u3044\n\nrefactored\nContractList premiums = contracts\n        .filter(Contract::isPremium);\n\n\n\nListClass --filter--> ListClass --map--> ListClass\n\n\u5f53\u7136\u9023\u7d50\u3082\u53ef\u80fd\n\nrefactored\nContractList normals = contracts\n        .filter(Contract::isPremium)\n        .map(Contract::toNormal);\n\n\n\u3053\u308c\u306f\u7d20\u3088\u308a\u5927\u5206\u3059\u3063\u304d\u308a\u3057\u305f\u3068\u601d\u3046\n\u30ed\u30b8\u30c3\u30af\u30b3\u30fc\u30c9\u3057\u304b\u306a\u3044\n\nListClass --filter--> ListClass --map--> AnotherListClass\n\nfilter\u3068\u3001\u578b\u304c\u7570\u306a\u308bmap\u306e\u9023\u7d50\n\nrefactored\nUserIdList premiumIds = contracts\n        .filter(Contract::isPremium)\n        .map(Contract::getUserId, UserIdList::new);\n\n\nfilter\u3068map\u3067\u5f15\u6570\u306e\u6570\u304c\u9055\u3046\u306e\u3001\u5fae\u5999...\nmap\u306fElementClass\u306e\u5909\u63db\u307e\u3067\u3067\u3001UserIdList\u306e\u751f\u6210\u306f\u307e\u305f\u5225\u3067\u3042\u308b\u3079\u304d\u306a\u3093\u3060\u308d\u3046\u304b...\n\n\u304a\u308f\u308a\u306b\n\u96a0\u853d\u3082\u5ea6\u304c\u904e\u304e\u308b\u3068\u826f\u304f\u306a\u3044\u3057\u3001\u66f8\u304d\u7d42\u308f\u3063\u3066\u300c\u3042\u3001forEach\u5fd8\u308c\u3066\u305f\u300d\u3068\u304b\u3042\u3063\u3066\u307e\u3041\u5f53\u7136\u5168\u3066\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u3067\n\u5b9f\u904b\u7528\u3092\u3082\u3057\u3059\u308b\u306a\u3089\u3082\u3063\u3068\u7d30\u304b\u3044\u3053\u3068\u3092\u30c1\u30fc\u30e0\u3067\u8003\u3048\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u3088\u306d\u30fc\n\u3051\u3069\u591a\u7528\u3059\u308bstream -> map/filter -> .collect(Collectors.toList())\u306f\u76f8\u5f53\u30b9\u30c3\u30ad\u30ea\u3057\u305f\u306e\u3067\u305d\u3053\u306f\u6e80\u8db3\u3057\u305f\uff01\nJava\u5225\u306b\u5168\u304f\u597d\u304d\u3058\u3083\u3042\u7121\u3044\u3093\u3060\u3051\u3069\u3001\u4ed5\u4e8b\u3067\u4f7f\u3046\u4ee5\u4e0a\u306f\u65e5\u4e2d\u3092\u5c11\u3057\u3067\u3082\u5feb\u9069\u306b\u3057\u305f\u3044\u3058\u3083\u3093\u304b\uff01\u3068\u601d\u3063\u3066\u8003\u3048\u3066\u307f\u305f\u3051\u3069\u6848\u5916\u697d\u3057\u304b\u3063\u305f\uff57\n\u307e\u305f\u306d\uff89\uff7c\n\n\u3069\u3046\u3082\u3001[Java](http://qiita.com/suzuki-hoge/items/6c5e25eaf48160c1fedf)\u306e[Stream](http://qiita.com/suzuki-hoge/items/fb662ec2ba32747d5a2c)\u306b\u3064\u3044\u3066\u6295\u7a3f\u3057\u3066\u3044\u305f\u3089\u3060\u3093\u3060\u3093\u697d\u3057\u304f\u306a\u3063\u3066\u304d\u305f\u3082\u306e\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n## \u30ea\u30b9\u30c8\u30af\u30e9\u30b9\u3068\u306f\n\u30ea\u30b9\u30c8\u30af\u30e9\u30b9\u4f5c\u3063\u3066\u307e\u3059\u304b\uff1f\u30ea\u30b9\u30c8\u30af\u30e9\u30b9\u3068\u8a00\u3063\u3066\u3082\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u62e1\u5f35\u3067\u306f\u306a\u304f\u3066\u3001\u96c6\u7d04\u30af\u30e9\u30b9\u3068\u3057\u3066\u4fbf\u5b9c\u4e0a\u305d\u3046\u547c\u3093\u3067\u3044\u308b\u7269\u3067\u3059\u3002\n\u300c\u6c42\u3081\u308b\u306a\u3001\u547d\u3058\u3088\u300d\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u96c6\u7d04\u306f`List<T>`\u3067\u306f\u306a\u304f\u305d\u308c\u5c02\u7528\u306e\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3068\u3044\u3046\u65b9\u91dd\u3067\u4ed5\u4e8b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n```Java\n// \u6c42\u3081\u308b\u4f8b \u5229\u7528\u5074\u304c\u4e2d\u8eab\u306e\u5b9f\u72b6\u306b\u8a73\u3057\u3044\n\nList<Item> items = Arrays.asList();\n\nList<Item> news = items\n        .stream()\n        .filter(item -> item.state == State.NEW)\n        .collect(Collectors.toList());\n\nList<Item> used = items\n        .stream()\n        .map(item -> new Item(item.name, State.USED))\n        .collect(Collectors.toList());\n```\n\n```Java\n// \u547d\u3058\u308b\u4f8b \u8a73\u3057\u3044\u3053\u3068\u306f\u77e5\u3089\u306a\u3044\u3051\u3069\u547d\u3058\u308b\u3060\u3051\n\nItems items = Items.empty();\n\nItems news = items.pickNews();\n\nItems used = items.toUsed();\n```\n\n`stream` -> `map/filter` -> `toList`\u306e\u4e00\u9023\u306e\u6d41\u308c\u306b\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u4ed8\u3051\u3066\u96c6\u7d04\u30af\u30e9\u30b9\u306b\u62bc\u3057\u8fbc\u3081\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u306e\u3067\n\u300c\u8a00\u8a9e\u4e0a\u5fc5\u8981\u3060\u304b\u3089\u66f8\u3044\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092\u6e1b\u3089\u3057\u300d\u300c\u9069\u5207\u306a\u540d\u524d\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u696d\u52d9\u30ed\u30b8\u30c3\u30af\u3060\u3051\u3092\u76ee\u7acb\u305f\u305b\u308b\u300d\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u300c\u7a7a\u306e\u72b6\u614b\u3067\u751f\u6210\u3059\u308b\u300d\u3068\u304b\u300c\u65b0\u54c1\u5224\u5b9a\u306f`State.NEW`\u3067\u884c\u3046\u300d\u3068\u304b\u300c\u4e2d\u53e4\u72b6\u614b\u3068\u306f`State`\u304c`USED`\u3067\u3042\u308b\u300d\u3068\u304b\u8a00\u3046`Item`\u30af\u30e9\u30b9\u306e\u90fd\u5408\u3092\n`Item`\u30af\u30e9\u30b9\u3001\u304a\u3088\u3073`Items`\u30af\u30e9\u30b9\u304b\u3089\u4e00\u5207\u5916\u306b\u6f0f\u3089\u3055\u305a\u30ab\u30d7\u30bb\u30eb\u5316\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u306b\u3088\u308a\u300c\u65b0\u54c1\u5224\u5b9a\u306e\u4ed5\u69d8\u304c\u5909\u308f\u3063\u305f\u308a\u300d\u300c\u4e2d\u53e4\u72b6\u614b\u306f\u66f4\u306b\u540d\u524d\u306b`Sold`\u304c\u4ed8\u304f\u300d\u3068\u304b\u8a00\u3046\u4ed5\u69d8\u5909\u66f4\u6642\u306b\u3082\n\u4fee\u6b63\u3059\u308b\u30af\u30e9\u30b9\u30921\u7b87\u6240\u306b\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n## \u30ea\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u4e2d\u8eab\n\u5f53\u7136\u3067\u3059\u304c\u3001\u62bc\u3057\u8fbc\u3081\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067`Items`\u30af\u30e9\u30b9\u306e\u4e2d\u8eab\u306e\u30b3\u30fc\u30c9\u91cf\u81ea\u4f53\u306f\u6e1b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n`Items`\u30af\u30e9\u30b9\u3092\u958b\u3051\u3070`stream()`\u3068\u304b`.collect(Collectors.toList())`\u3068\u304b`new Items(`\u3068\u304b\u305a\u3089\u305a\u3089\u66f8\u3044\u3066\u3042\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306f\u305d\u306eJava\u3092\u66f8\u304f\u4e0a\u3067\u306a\u304f\u305b\u306a\u3044\u3051\u3069\u3001\u300c\u4ed5\u69d8\u4e0a\u306e\u610f\u5473\u306f\u7279\u306b\u6301\u3063\u3066\u306a\u3044\u30b3\u30fc\u30c9\u3092\u524a\u6e1b\u3059\u308b\u300d\u3053\u3068\u3092\u8a66\u307f\u308b\u8a18\u4e8b\u3067\u3059\u3002\n\u305d\u308c\u306b\u3088\u308a\u6975\u529b\u300c\u696d\u52d9\u30ed\u30b8\u30c3\u30af\u306e\u8aad\u307f\u66f8\u304d\u306b\u96c6\u4e2d\u3067\u304d\u308b\u30b3\u30fc\u30c9\u306b\u3059\u308b\u300d\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u7528\u30af\u30e9\u30b9\n\u4f8b\u306b\u3088\u3063\u3066\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7b49\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\uff08\u5b9f\u969b\u306b\u306f`lombok`\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\uff09\n\uff08\u4e0a\u3067\u4f7f\u3063\u305f`Items/Item`\u3067\u306f\u306a\u304f\u3066\u3059\u3044\u307e\u305b\u3093...\uff09\n\n```Java:Contract\npublic class Contract {\n    private final UserId userId;\n    private final Plan plan;\n\n    public boolean isPremium() {\n        return plan.isPremium();\n    }\n\n    // \u81ea\u8eab\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308b\u69d8\u306a\u30e1\u30bd\u30c3\u30c9\n    // \u305f\u3060 Immutable object \u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u65b0\u305f\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u3066\u8fd4\u3057\u3066\u3044\u308b\n    public Contract toNormal() {\n        return new Contract(userId, Plan.NORMAL);\n    }\n}\n```\n\n```Java:ContractList\npublic class ContractList {\n    private final List<Contract> values;\n}\n```\n\n# \u7d20\u306e\u30b3\u30fc\u30c9\u3068\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u305f\u30b3\u30fc\u30c9\u306e\u6bd4\u8f03\n\u4eca\u5f8c`Contracts`\u3092`ListClass`\u3001`Contract`\u3092`ElementClass`\u3068\u3057\u307e\u3059\n\n## \u751f\u6210\n\u305d\u3082\u305d\u3082\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\u306e\u304c\u9762\u5012\u3063\u3066\u30d1\u30bf\u30fc\u30f3\u304c\u5927\u534a\u3067\u3059\n\n### `List<ElementClass>` -> `ListClass`\n\u3061\u306a\u307f\u306b\u3001\u4eca\u5f8c\u51fa\u3066\u304f\u308b\u5909\u6570`constracts`\u306f\u3053\u3053\u3067\u4f5c\u3063\u305f\u3082\u306e\u3068\u540c\u3058\u5024\u3060\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\n\n```Java:plain\nContractList contracts = new ContractList(\n        findAll()\n                .collect(Collectors.toList())\n);\n```\n\n\u524d\u306b\u6295\u7a3f\u3057\u305f[ListUtil#construct](http://qiita.com/suzuki-hoge/items/fb662ec2ba32747d5a2c#construct)\u3092\u4f7f\u3046\n\u3053\u308c\u6c17\u306b\u5165\u3063\u305f\u306e\uff57\n\n```Java:refactored\nContractList contracts = findAll()\n        .collect(ListUtil.construct(ContractList::new));\n```\n\n### `[]` -> `ListClass`\n\u7a7a\u30ea\u30b9\u30c8\u304b\u3089\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3042\u308b\u3088\u306d\n\n```Java:plain\nContractList empty = new ContractList(\n        Collections.emptyList()\n);\n```\n\n`ListClass`\u306b`empty()`\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u307f\u308b\n\n```Java:ContractList\npublic class ContractList {\n    // \u8272\u3005\u7565\n\n    public static ContractList empty() {\n        return new ContractList(Collections.emptyList());\n    }\n}\n```\n\n```Java:refactored\nContractList empty = ContractList.empty();\n```\n\n\u30b7\u30f3\u30d7\u30eb\u3060\u3057\u3001`Stream.empty()`\u3084`Optional.empty()`\u3068\u3082\u96f0\u56f2\u6c17\u304c\u3042\u3046\n\u7a7a\u30ea\u30b9\u30c8\u306e\u4f5c\u308a\u65b9\u3082\u3076\u308c\u306a\u3044\uff08`Arrays.asList()`\u3068\u304b\u3067\u3082\u52d5\u304f\u3051\u3069\uff09\u304b\u3089\u751f\u6210\u306f`ListClass`\u306b\u3084\u3089\u305b\u308b\u65b9\u304c\u826f\u3044\u3088\u306d\n\n### `ElementClass` -> `List<ElementClass>` -> `ListClass`\n\u5358\u4e00\u306e`ElementClass`\u3092\u305f\u3060\u30ea\u30b9\u30c8\u306b\u3057\u3066`ListClass`\u306b\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\u5730\u5473\u306b\u5fc5\u8981\u306b\u306a\u308b\u3093\u3060\u3051\u3069\u3001\u601d\u3044\u306e\u5916\u5999\u306b\u9762\u5012\u306a\u306e\u304c\u3053\u308c\n\n\u9577\u3044\u3060\u308d...\n\n```Java:plain\nContractList singleton = new ContractList(\n        Collections.singletonList(\n                new Contract(new UserId(\"001\"), Plan.NORMAL)\n        )\n);\n```\n\n\u3044\u307e\u3044\u3061\u826f\u304f\u5b9f\u88c5\u3067\u304d\u306a\u304b\u3063\u305f\u3051\u3069\u3001`empty()`\u3068\u4f3c\u305f\u767a\u60f3\u3067`ElementClass`\u306b\u3084\u3089\u305b\u308b\u306e\u304c\u826f\u3044\u304b\u306a\n\n```Java:Contract\npublic class Contract {\n    // \u540c\u3058\u304f\u8272\u3005\u7565\n\n    public ContractList toList() {\n        return new ContractList(Collections.singletonList(this));\n    }\n}\n```\n\n```Java:refactored\nContractList singleton = new Contract(new UserId(\"001\"), Plan.NORMAL).toList();\n```\n\n## Stream\n\u96c6\u5408\u306a\u3093\u3060\u3057`stream`\u51e6\u7406\u3057\u305f\u3044\u3088\u306d\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u305d\u308c\u3089\u306e\u30b3\u30fc\u30c9\u3092\u524a\u6e1b\u3059\u308b\u305f\u3081\u306b`ListOf<ListClass, ElementClass>`\u3068\u3044\u3046`interface`\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\n\u5b9f\u88c5\u3057\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u306f`getValues()`\u3060\u3051\u3067\u3059\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u5b9f\u88c5\u3057\u307e\u3059\n\u66f8\u304f\u3079\u304d\u4e8b\u306f\u3068\u3066\u3082\u5c11\u306a\u304f\u51fa\u6765\u307e\u3057\u305f\uff08`lombok`\u4f7f\u3063\u3066\u3044\u308c\u3070`values`\u306b`@Getter`\u4ed8\u3051\u308b\u3060\u3051\uff01\uff09\n\n```Java:ContractList\npublic class ContractList implements ListOf<ContractList, Contract> {\n    @Getter\n    private final List<Contract> values;\n}\n```\n\n```Java:ListOf\npublic interface ListOf<ListClass, ElementClass> {\n    public List<ElementClass> getValues();\n\n    public default Stream<ElementClass> stream() {\n        return getValues().stream();\n    }\n\n    public default <AnotherListClass, AnotherElementClass> AnotherListClass map(\n            Function<ElementClass, AnotherElementClass> mapper,\n            Function<List<AnotherElementClass>, AnotherListClass> constructor\n    ) {\n        return stream().map(mapper).collect(ListUtil.construct(constructor));\n    }\n\n    public default ListClass filter(\n            Predicate<ElementClass> predicate,\n            Function<List<ElementClass>, ListClass> constructor\n    ) {\n        return stream().filter(predicate).collect(ListUtil.construct(constructor));\n    }\n}\n```\n\n\u4ee5\u964d\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u30b3\u30fc\u30c9\u306f\u3053\u308c\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\n\n### `ListClass` -> `Stream<ElementClass>`\n\u4e2d\u8eab\u51fa\u3057\u3061\u3083\u3046\u306e\u3067\u4f55\u3067\u3082\u3055\u308c\u5f97\u3066\u3057\u307e\u3046...\n\n```Java:plain\ncontracts.getValues().stream();\n```\n\n\u305f\u3060\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3063\u3066\u611f\u3058\u3060\u3051\u3069\u3001\u30ab\u30d7\u30bb\u30eb\u5316\u306e\u89b3\u70b9\u304b\u3089\u25cb\n\n```Java:refactored\ncontracts.stream();\n```\n\n### `ListClass` --map--> `AnotherListClass`\n`map`\u3057\u305f\u7d50\u679c\u578b\u304c\u5909\u308f\u308b\u30d1\u30bf\u30fc\u30f3\n\n\u3060\u3093\u3060\u3093\u3068\u6587\u5b57\u6570\u3068\u884c\u6570\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u305f...\n\u5b9f\u30ed\u30b8\u30c3\u30af\u306f3\u884c\u76ee\u3060\u3051\u306a\u306e\u306b\u30015\u884c\u3082\u3042\u308b...\n\n```Java:plain\nUserIdList userIds = new UserIdList(\n        contracts.getValues().stream()\n                .map(Contract::getUserId)\n                .collect(Collectors.toList())\n);\n```\n\n`stream()`\u3092\u8a2d\u3051\u305f\u767a\u60f3\u306e\u5ef6\u9577\u3067\u3001`map()`\u3082\u76f4\u63a5`ListClass`\u306b\u8a2d\u3051\u3066\u307f\u305f\n\u305d\u3057\u3066`map()`\u306e\u7b2c2\u5f15\u6570\u306b\u5909\u63db\u5f8c\u306e\u30af\u30e9\u30b9\u307e\u3067\u6559\u3048\u3066\u3042\u3052\u3066\u307f\u305f\u3089\u3001\u3053\u3046\u306a\u3063\u305f\n\n```Java:refactored\nUserIdList userIds = contracts\n        .map(Contract::getUserId, UserIdList::new);\n```\n\n### `ListClass` --filter--> `ListClass`\n`filter`\u306f\u578b\u306f\u5909\u308f\u3089\u306a\u3044\u70b9\u3092\u9664\u3051\u3070`map`\u3068\u307b\u307c\u540c\u3058\n\u3084\u308a\u305f\u3044\u3053\u3068\u306f1\u884c\u3060\u3051\u306a\u306e\u306b5\u884c\u5fc5\u8981\u306a\u306e\u3082\u540c\u3058\n\n```Java:plain\nContractList premiums = new ContractList(\n        contracts.getValues().stream()\n                .filter(Contract::isPremium)\n                .collect(Collectors.toList())\n);\n```\n\n```Java:refactored\nContractList premiums = contracts\n        .filter(Contract::isPremium, ContractList::new);\n```\n\n### `ListClass` --filter--> `ListClass` --map--> `ListClass`\n\u5f53\u7136\u9023\u7d50\u3082\u3059\u308b\u3060\u308d\u3046\n\n```Java:plain\nContractList normals = new ContractList(\n        contracts.getValues().stream()\n                .filter(Contract::isPremium)\n                .map(Contract::toNormal)\n                .collect(Collectors.toList())\n);\n```\n\n```Java:refactored\nContractList normals = contracts\n        .filter(Contract::isPremium, ContractList::new)\n        .map(Contract::toNormal, ContractList::new);\n```\n\n## \u8981\u7d20\u53d6\u5f97\n\u3053\u3053\u306f\u524d\u56de\u6295\u7a3f\u30cd\u30bf\u306a\u306e\u3067\u304a\u307e\u3051\u3067\u3059\n`ListUtil`\u3082`ListOf`\u3068\u540c\u3058\u304f\u300c\u696d\u52d9\u30ed\u30b8\u30c3\u30af\u306b\u96c6\u4e2d\u3059\u308b\u3053\u3068\u300d\u3092\u76ee\u7684\u3068\u3057\u3066\u66f8\u3044\u305f\u3053\u3068\u3092\u793a\u3059\u76ee\u7684\u3067\u8f09\u305b\u3066\u307e\u3059\n\n\uff08\u3061\u3083\u3093\u3068\u5b9f\u88c5\u3057\u3066\u306a\u3044\u3051\u3069\uff09\u3053\u306e\u4f8b\u3067\u306f\u3042\u308b\u30e6\u30fc\u30b6\u306e\u6709\u52b9\u306a\u5951\u7d04\u3092\u53d6\u5f97\u3057\u307e\u3059\n\u904e\u53bb\u306e\u7121\u52b9\u306a\u5951\u7d04\u306f\u3044\u304f\u3064\u3082\u3042\u308b\u3051\u3069\u3001\u6709\u52b9\u306a\u5951\u7d04\u306f1\u3064\u3060\u3051\u306e\u306f\u305a\u3001\u3068\u3044\u3046\u67b6\u7a7a\u4ed5\u69d8\u3067\u3059\n\u5b9f\u969b\u306f\u305f\u3060\u306e`where\u53e5`\u306e\u7d50\u5408\u3060\u304b\u3089DB\u7684\u306b\u306f\u3044\u304f\u3064\u53d6\u308c\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u305f\u3081\u3001\u8907\u6570\u4ef6\u623b\u3059\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\n### `ListClass` -> `ElementClass`\n\u3042\u308b\u30e6\u30fc\u30b6\u306e\u6709\u52b9\u306a\u5951\u7d04\u306b\u5bfe\u3057\u3066\u306a\u3093\u3089\u304b\u306e\u64cd\u4f5c\u3092\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\u6709\u52b9\u306a\u5951\u7d04\u304c\u3042\u308b\u306f\u305a\u3068\u3044\u3046\u4ed5\u69d8\u306b\u5bfe\u3057\u3066\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\n\n```Java:plain\nList<Contract> list = findEnablingBy(new UserId(\"001\")).collect(Collectors.toList());\n\nif (list.size() == 1) {\n    Contract found = list.get(0);\n} else {\n    throw new RuntimeException(\"not be unique\");\n}\n```\n\n\u524d\u306b\u6295\u7a3f\u3057\u305f[ListUtil.exactlyOne](http://qiita.com/suzuki-hoge/items/fb662ec2ba32747d5a2c#exactlyone)\u3092\u4f7f\u3063\u3066\u7d42\u7aef\u64cd\u4f5c\u3067\u6e08\u307e\u3059\n\n```Java:refactored\nContract found = findEnablingBy(new UserId(\"001\"))\n        .collect(ListUtil.exactlyOne(() -> new RuntimeException(\"not be unique\")));\n```\n\n### `ListClass` -> `Optional<ElementClass>`\n\u3053\u306e\u5f62\u3082\u7d50\u69cb\u3042\u308b\u3068\u601d\u3046\n\n\u3053\u3061\u3089\u306f\u3082\u3057\u6709\u52b9\u306a\u5951\u7d04\u304c\u3042\u3063\u305f\u3089\u4f55\u3089\u304b\u306e\u64cd\u4f5c\u3092\u3059\u308b\u30d1\u30bf\u30fc\u30f3\n\u6709\u52b9\u306a\u5951\u7d04\u304c\u7121\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u3044\u3046\u4ed5\u69d8\u306b\u5bfe\u3057\u3066\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\n\n```Java:plain\nList<Contract> list = findAll()\n        .filter(Contract::isPremium)\n        .collect(Collectors.toList());\n\nif (list.size() == 0) {\n    Optional<Contract> found = Optional.empty();\n} else {\n    Optional<Contract> found = Optional.of(list.get(0));\n}\n```\n\n\u3053\u308c\u3082\u524d\u306b\u6295\u7a3f\u3057\u305f[ListUtil.headOpt](http://qiita.com/suzuki-hoge/items/fb662ec2ba32747d5a2c#headopt)\u3092\u4f7f\u3063\u3066\u7d42\u7aef\u64cd\u4f5c\u3067\u6e08\u307e\u3059\n\n```Java:refactored\nOptional<Contract> found = findAll()\n        .filter(Contract::isPremium)\n        .collect(ListUtil.headOpt());\n```\n\n# \u3082\u3063\u3068\uff01\u3082\u3063\u3068\u66f8\u304f\u3053\u3068\u3092\u3092\u6e1b\u3089\u3057\u305f\u3044\uff01\n\u91cd\u306d\u3066\u8a00\u3046\u3051\u3069\u3001\u5225\u306b\u5999\u306a\u3053\u3068\u304c\u66f8\u304d\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u304f\u3066\n\u8a00\u8a9e\u7684\u306b\u5fc5\u8981\u306a\u624b\u66f8\u304d\u90e8\u5206\u3092\u305d\u304e\u843d\u3068\u3057\u3066\u30ed\u30b8\u30c3\u30af\u306b\u96c6\u4e2d\u3057\u305f\u3044\u3068\u8a00\u3046\u306e\u304c\u610f\u56f3\u3067\u3059\n\n## \u751f\u6210\n### `[]` -> `ListClass`\n\u7a7a\u30ea\u30b9\u30c8\u304b\u3089\u306e\u751f\u6210\u306f\u5168\u3066\u306e`ElementClass`\u306b\u624b\u66f8\u304d\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u30af\u30e9\u30b9\u3092\u8a2d\u3051\u3066\u307f\u305f\n\n```Java:Empty\npublic class Empty {\n    public static <ListClass, ElementClass> ListClass of(Function<List<ElementClass>, ListClass> constructor) {\n        return constructor.apply(Collections.emptyList());\n    }\n}\n```\n\n```Java:refactored\nContractList empty = Empty.of(ContractList::new);\n```\n\n\u672c\u5f53\u306f`ContractList.empty()`\u304c\u826f\u3044\u3093\u3060...\n\u3051\u3069Java\u3063\u3066`static`\u306a\u30e1\u30bd\u30c3\u30c9\u306f`default`\u5b9f\u88c5\u3092\u6301\u3063\u305f\u308a`abstract`\u30e1\u30bd\u30c3\u30c9\u6301\u3063\u305f\u308a\u51fa\u6765\u306a\u3044\u3093\u3060\u3088\u306d\uff1f\n`ContractList`\u306b\u624b\u66f8\u304d\u3092\u305b\u305a\u306b`ContractList.empty()`\u3092\u7528\u610f\u3059\u308b\u65b9\u6cd5\u306f\u7121\u3044\u306e\u304b...\n\n\u3051\u3069\u65b0\u3057\u3044`ListClass`\u3092\u4f5c\u308b\u3068\u304d\u306b\u66f8\u304f\u3079\u304d\u4e8b\u304c\u4e00\u5207\u306a\u3044\u70b9\u306f\u25cb\n\n## Stream\n`stream`\u306f\u578b\u304c\u5909\u308f\u3089\u306a\u3044\u5834\u5408\u306f\u7b2c2\u5f15\u6570\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u7121\u304f\u3057\u3066\u307f\u305f\u304b\u3063\u305f\n\u3042\u306e\u5999\u306a\u7b2c2\u5f15\u6570\u304c\u7121\u304f\u306a\u308b\u3068\u3001\u300c\u7bb1\u304c\u3042\u308b\u3001\u4e2d\u8eab\u306b\u4f55\u304b\u3057\u3066\u3001\u7bb1\u306b\u623b\u3059\u300d\u3068\u3044\u3046\u98a8\u306b\u306a\u3063\u3066\n`ListClass(\u7bb1)`\u306e`map/filter`\u306f`Stream(\u7bb1)`\u306e`map/filter`\u3068\u96f0\u56f2\u6c17\u304c\u540c\u3058\u306b\u306a\u308b\u3088\u306d\n\n\u3061\u3087\u3063\u3068\u3069\u3046\u304b\u306a\u3068\u306f\u601d\u3046\u3051\u3069\u3001`ListOf`\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u624b\u306b\u5165\u308c\u308b\u65b9\u6cd5\u3092\u6559\u3048\u3066\u3042\u3052\u3066\u307f\u305f\n\n```Java:ListOf\npublic interface ListOf<ListClass, ElementClass> {\n    // \u4e00\u90e8\u7565\n\n    // \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u8ffd\u52a0\u3001\u4ee5\u4e0b\u306fdefault\n    public Function<List<ElementClass>, ListClass> getConstructor();\n\n    public default ListClass map(\n            Function<ElementClass, ElementClass> mapper\n    ) {\n        return map(mapper, getConstructor());\n    }\n\n    public default ListClass filter(\n            Predicate<ElementClass> predicate\n    ) {\n        return stream().filter(predicate).collect(ListUtil.construct(getConstructor()));\n    }\n}\n```\n\n```Java:ContractList\npublic class ContractList implements ListOf<ContractList, Contract> {\n    // \u8272\u3005\u7565\n\n    @Override\n    public Function<List<Contract>, ContractList> getConstructor() {\n        return ContractList::new;\n    }\n}\n```\n\n### `ListClass` --map--> `ListClass`\n`map`\u3057\u305f\u7d50\u679c\u578b\u304c\u5909\u308f\u3089\u306a\u3044\u30d1\u30bf\u30fc\u30f3\n\u578b\u304c\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u3042\u308c\u3070`map`\u306f\u81ea\u5206\u3067`ListClass`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u624b\u306b\u5165\u308c\u308b\n\n```Java:refactored\nContractList normals = contracts\n        .map(Contract::toNormal);\n```\n\n### `ListClass` --filter--> `ListClass`\n`filter`\u306f\u578b\u304c\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6559\u3048\u308b\u5fc5\u8981\u306f\u306a\u3044\n\n```Java:refactored\nContractList premiums = contracts\n        .filter(Contract::isPremium);\n```\n\n### `ListClass` --filter--> `ListClass` --map--> `ListClass`\n\u5f53\u7136\u9023\u7d50\u3082\u53ef\u80fd\n\n```Java:refactored\nContractList normals = contracts\n        .filter(Contract::isPremium)\n        .map(Contract::toNormal);\n```\n\n\u3053\u308c\u306f\u7d20\u3088\u308a\u5927\u5206\u3059\u3063\u304d\u308a\u3057\u305f\u3068\u601d\u3046\n\u30ed\u30b8\u30c3\u30af\u30b3\u30fc\u30c9\u3057\u304b\u306a\u3044\n\n### `ListClass` --filter--> `ListClass` --map--> `AnotherListClass`\n`filter`\u3068\u3001\u578b\u304c\u7570\u306a\u308b`map`\u306e\u9023\u7d50\n\n```Java:refactored\nUserIdList premiumIds = contracts\n        .filter(Contract::isPremium)\n        .map(Contract::getUserId, UserIdList::new);\n```\n\n`filter`\u3068`map`\u3067\u5f15\u6570\u306e\u6570\u304c\u9055\u3046\u306e\u3001\u5fae\u5999...\n`map`\u306f`ElementClass`\u306e\u5909\u63db\u307e\u3067\u3067\u3001`UserIdList`\u306e\u751f\u6210\u306f\u307e\u305f\u5225\u3067\u3042\u308b\u3079\u304d\u306a\u3093\u3060\u308d\u3046\u304b...\n\n# \u304a\u308f\u308a\u306b\n\u96a0\u853d\u3082\u5ea6\u304c\u904e\u304e\u308b\u3068\u826f\u304f\u306a\u3044\u3057\u3001\u66f8\u304d\u7d42\u308f\u3063\u3066\u300c\u3042\u3001`forEach`\u5fd8\u308c\u3066\u305f\u300d\u3068\u304b\u3042\u3063\u3066\u307e\u3041\u5f53\u7136\u5168\u3066\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u3067\n\u5b9f\u904b\u7528\u3092\u3082\u3057\u3059\u308b\u306a\u3089\u3082\u3063\u3068\u7d30\u304b\u3044\u3053\u3068\u3092\u30c1\u30fc\u30e0\u3067\u8003\u3048\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u3088\u306d\u30fc\n\n\u3051\u3069\u591a\u7528\u3059\u308b`stream` -> `map/filter` -> `.collect(Collectors.toList())`\u306f\u76f8\u5f53\u30b9\u30c3\u30ad\u30ea\u3057\u305f\u306e\u3067\u305d\u3053\u306f\u6e80\u8db3\u3057\u305f\uff01\n\nJava\u5225\u306b\u5168\u304f\u597d\u304d\u3058\u3083\u3042\u7121\u3044\u3093\u3060\u3051\u3069\u3001\u4ed5\u4e8b\u3067\u4f7f\u3046\u4ee5\u4e0a\u306f\u65e5\u4e2d\u3092\u5c11\u3057\u3067\u3082\u5feb\u9069\u306b\u3057\u305f\u3044\u3058\u3083\u3093\u304b\uff01\u3068\u601d\u3063\u3066\u8003\u3048\u3066\u307f\u305f\u3051\u3069\u6848\u5916\u697d\u3057\u304b\u3063\u305f\uff57\n\u307e\u305f\u306d\uff89\uff7c\n"}