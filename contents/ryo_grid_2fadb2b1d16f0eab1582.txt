{"context": "\u30bf\u30a4\u30c8\u30eb\u306f\u91e3\u308a\u3067\u3059w\nTensorFlow\u306eMNIST\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb(for Beginner)\u306e\u89e3\u8aac\u306f\u6570\u3042\u308c\u3069\u3001\u7cbe\u5ea6\u3092\u3061\u3087\u308d\u3063\u3068\u51fa\u3057\u3066\u304a\u7d42\u3044\u3067\u3001\u305d\u306e\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u3069\u3046\u4e88\u6e2c\u3092\u884c\u3048\u3070\u826f\u3044\u304b\u3092\u66f8\u3044\u3066\u3044\u308b\u8a18\u4e8b\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3059\u3002\u3042\u3068\u3001\u826f\u3044\u5165\u9580\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u305d\u308c\u3082\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u306f\u3058\u3081\u306b\u8aad\u3093\u3067\u304a\u304f\u3068\u826f\u3044\u8a18\u4e8b\n\u3053\u3061\u3089\u306e\u9023\u8f09\u3092\u8aad\u3080\u3068TensorFlow\u306e\u7406\u89e3\u304c\u6df1\u307e\u308b\u306e\u3067\u307e\u305a\u306f\u8aad\u3093\u3067\u304a\u304f\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\nhttp://www.buildinsider.net/small/booktensorflow/0001\nhttp://msyksphinz.hatenablog.com/entry/2015/11/19/022254\n\nTensorFlow\u306eMNIST\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb(for Beginner)\u306e\u89e3\u8aac\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u5927\u5909\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059 (\u4e38\u6295\u3052)\nhttp://qiita.com/tuno-tky/items/cf7068f14ceea08802e8\n\n\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u305f\u4e88\u6e2c\n\u4ee5\u4e0b\u306e\u6700\u5f8c\u306e3\u884c\u3067\u5b66\u7fd2\u7d50\u679c\u3092\u4f7f\u3063\u305f\u4e88\u6e2c\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u3001\u5b9a\u7fa9\u6e08\u307f\u306ey\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u3001argmax\u3067\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u305d\u308c\u305e\u308c\u306e\u30e9\u30d9\u30eb\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\nmnist_beginner.py\nimport input_data\nimport tensorflow as tf\n\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n\nW = tf.Variable(tf.zeros([784, 10]))\nb = tf.Variable(tf.zeros([10]))\n\nx = tf.placeholder(\"float\", [None, 784])\n\ny = tf.nn.softmax(tf.matmul(x, W) + b)\n\ny_ = tf.placeholder(\"float\", [None,10])\n\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y))\n\ntrain_step = tf.train.GradientDescentOptimizer(0.005).minimize(cross_entropy)\n\nsess = tf.Session()\n\ninit = tf.initialize_all_variables()\nsess.run(init)\n\n# \u5b9f\u884c\u6642\u9593\u77ed\u7e2e\u306e\u305f\u308110000\u56de\u304b\u3089100\u56de\u306b\u6e1b\u3089\u3057\u3066\u3044\u308b\nfor i in range(100):\n    batch_xs, batch_ys = mnist.train.next_batch(100)\n    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\n\n    correct_prediction = tf.equal(tf.argmax(y, 1), tf.argmax(y_, 1))\n    accuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n\n    print sess.run(accuracy, feed_dict={x: mnist.test.images,y_:mnist.test.labels})\n\n# prediction\nbatch_xs, batch_ys = mnist.train.next_batch(5)\npred_rslt = sess.run(tf.argmax(y, 1), feed_dict={x: batch_xs})\n\nprint(pred_rslt)\n\n\nhttps://github.com/ryogrid/learnDeepLearning/blob/29130e36246c20e0509e9e642b6a1343707187ab/tensorflow_mnist_pred.py\n\u5b9f\u884c\u7d50\u679c\n\n(\u7701\u7565)\n0.8672\n0.8766\n0.889\n0.8943\n[5 1 1 3 6]\n\n\n\u305d\u306e\u4ed6\u53c2\u8003\nhttp://qiita.com/tawago/items/c977c79b76c5979874e8\nhttp://qiita.com/tawago/items/931bea2ff6d56e32d693\n\u30bf\u30a4\u30c8\u30eb\u306f\u91e3\u308a\u3067\u3059w\nTensorFlow\u306eMNIST\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb(for Beginner)\u306e\u89e3\u8aac\u306f\u6570\u3042\u308c\u3069\u3001\u7cbe\u5ea6\u3092\u3061\u3087\u308d\u3063\u3068\u51fa\u3057\u3066\u304a\u7d42\u3044\u3067\u3001\u305d\u306e\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u3069\u3046\u4e88\u6e2c\u3092\u884c\u3048\u3070\u826f\u3044\u304b\u3092\u66f8\u3044\u3066\u3044\u308b\u8a18\u4e8b\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3059\u3002\u3042\u3068\u3001\u826f\u3044\u5165\u9580\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u305d\u308c\u3082\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n#\u306f\u3058\u3081\u306b\u8aad\u3093\u3067\u304a\u304f\u3068\u826f\u3044\u8a18\u4e8b\n\u3053\u3061\u3089\u306e\u9023\u8f09\u3092\u8aad\u3080\u3068TensorFlow\u306e\u7406\u89e3\u304c\u6df1\u307e\u308b\u306e\u3067\u307e\u305a\u306f\u8aad\u3093\u3067\u304a\u304f\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\nhttp://www.buildinsider.net/small/booktensorflow/0001\nhttp://msyksphinz.hatenablog.com/entry/2015/11/19/022254\n\n#TensorFlow\u306eMNIST\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb(for Beginner)\u306e\u89e3\u8aac\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u5927\u5909\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059 (\u4e38\u6295\u3052)\nhttp://qiita.com/tuno-tky/items/cf7068f14ceea08802e8\n\n# \u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u305f\u4e88\u6e2c\n\u4ee5\u4e0b\u306e\u6700\u5f8c\u306e3\u884c\u3067\u5b66\u7fd2\u7d50\u679c\u3092\u4f7f\u3063\u305f\u4e88\u6e2c\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u3001\u5b9a\u7fa9\u6e08\u307f\u306ey\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u3001argmax\u3067\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u305d\u308c\u305e\u308c\u306e\u30e9\u30d9\u30eb\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n```python:mnist_beginner.py\nimport input_data\nimport tensorflow as tf\n\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n\nW = tf.Variable(tf.zeros([784, 10]))\nb = tf.Variable(tf.zeros([10]))\n\nx = tf.placeholder(\"float\", [None, 784])\n\ny = tf.nn.softmax(tf.matmul(x, W) + b)\n\ny_ = tf.placeholder(\"float\", [None,10])\n\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y))\n\ntrain_step = tf.train.GradientDescentOptimizer(0.005).minimize(cross_entropy)\n\nsess = tf.Session()\n\ninit = tf.initialize_all_variables()\nsess.run(init)\n\n# \u5b9f\u884c\u6642\u9593\u77ed\u7e2e\u306e\u305f\u308110000\u56de\u304b\u3089100\u56de\u306b\u6e1b\u3089\u3057\u3066\u3044\u308b\nfor i in range(100):\n    batch_xs, batch_ys = mnist.train.next_batch(100)\n    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\n\n    correct_prediction = tf.equal(tf.argmax(y, 1), tf.argmax(y_, 1))\n    accuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n\n    print sess.run(accuracy, feed_dict={x: mnist.test.images,y_:mnist.test.labels})\n\n# prediction\nbatch_xs, batch_ys = mnist.train.next_batch(5)\npred_rslt = sess.run(tf.argmax(y, 1), feed_dict={x: batch_xs})\n\nprint(pred_rslt)\n```\nhttps://github.com/ryogrid/learnDeepLearning/blob/29130e36246c20e0509e9e642b6a1343707187ab/tensorflow_mnist_pred.py\n\n\n\u5b9f\u884c\u7d50\u679c\n>(\u7701\u7565)\n0.8672\n0.8766\n0.889\n0.8943\n[5 1 1 3 6]\n\n#\u305d\u306e\u4ed6\u53c2\u8003\nhttp://qiita.com/tawago/items/c977c79b76c5979874e8\nhttp://qiita.com/tawago/items/931bea2ff6d56e32d693\n", "tags": ["TensorFlow", "DeepLearning", "MNIST", "MachineLearning"]}