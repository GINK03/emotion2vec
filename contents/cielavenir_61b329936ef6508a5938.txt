{"context": "\n\n\n\u30b7\u30ea\u30fc\u30ba\uff1a\u6383\u304d\u51fa\u3057\u6cd5\u306b\u3064\u3044\u3066\nURL\n\n\n\n\n\u554f\u984c\uff1a\u5341\u6587\u5b57\u306b\u53cd\u8ee2\u3057\u3066\u8272\u3092\u63c3\u3048\u3066\uff01(\u6700\u77ed\u624b\u6570\u306e\u6700\u5927\u5316)\nhttps://codeiq.jp/q/2972\n\n\nsingle/OpenMP\nhttps://qiita.com/cielavenir/items/2fa1f1149132de579a46\n\n\nstd::async\nhttps://qiita.com/cielavenir/items/61b329936ef6508a5938\n\n\n\u756a\u5916\u7de8\uff1a\u30aa\u30f3\u30e9\u30a4\u30f3\u30b8\u30e3\u30c3\u30b8\u3067\u4e26\u5217\u5b9f\u884c\u306f\u4f7f\u3048\u308b\u304b\uff1f\nhttps://qiita.com/cielavenir/items/ade2b7c0b5a63b2687f0\n\n\n\u554f\u984c\uff1a\u88cf\u8868\u3061\u308f\u30fc\u308f(\u89e3\u306e\u5b58\u5728\u5224\u5b9a)\n\nhttp://yukicoder.me/problems/no/460https://www.codeeval.com/public_sc/191/\n\n\n\n\u89e3\u8aac\nhttps://qiita.com/cielavenir/items/c6b15ff4e28fb5f492ec\n\n\n\n(\u6982\u8981\u7b49\u306fsingle/OpenMP\u7248\u3092\u53c2\u7167\u4e0b\u3055\u3044)\n\n\u4eca\u307e\u3067\u4e26\u5217\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u306fOpenMP\u3092\u4f7f\u3063\u3066\u304d\u305f\u304c\u3001std::async\u3092vector\u306b\u7a81\u3063\u8fbc\u3080\u3053\u3068\u3067\u3082\u3067\u304d\u308b\u3089\u3057\u3044\u306e\u3067\u3001\u3084\u3063\u3066\u307f\u305f\u3002\n\n\ntyama_codeiq2972_async.cpp\n// async\n// 5 5: 0.08s\n// 3 9: 1.47s\n// 5 6: 15.53s\n// 4 8: 83.18s\n// 6 6: 772.15s\n\n#include <vector>\n#include <algorithm>\n#include <future>\n#include <cstdio>\nusing namespace std;\n\ntypedef unsigned long long val_t;\n#define popcnt __builtin_popcountll\n//typedef unsigned int val_t;\n//#define popcnt __builtin_popcount\n//typedef mpz_class val_t;\n//int popcnt(const val_t &x){int r=0;val_t z=x;for(;z;z/=2)r+=z%2;return r;}\n\nint lightsout(int x,int y){\n    vector<vector<val_t>>a(x*y);\n    for(int i=0;i<x*y;i++)a[i].resize(2);\n\n    //create problem\n    for(int i=0;i<x;i++){\n        for(int j=0;j<y;j++){\n            a[i+j*x][0]=(val_t)1<<(i+j*x);\n            a[i+j*x][1]= 0 +\n                ((val_t)1<<(i+j*x)) +\n                (i>0   ? (val_t)1<<(i-1+j*x) : 0) +\n                (i<x-1 ? (val_t)1<<(i+1+j*x) : 0) +\n                (j>0   ? (val_t)1<<(i+(j-1)*x) : 0) +\n                (j<y-1 ? (val_t)1<<(i+(j+1)*x) : 0) +\n                0;\n        }\n    }\n\n    //solve\n    val_t badbits=0;\n    int i=0;\n    for(;i<x*y;i++){\n        if((a[i][1]&((val_t)1<<i))==0){\n            int j=i+1;\n            for(;j<x*y;j++){\n                if((a[j][1]&((val_t)1<<i))!=0){\n                    swap(a[i],a[j]);\n                    break;\n                }\n            }\n            if(j==x*y){\n                badbits|=(val_t)1<<i;\n                continue;\n            }\n        }\n\n        for(int j=0;j<x*y;j++){\n            if(i==j)continue;\n            if((a[j][1]&((val_t)1<<i))!=0){\n                a[j][0]^=a[i][0];\n                a[j][1]^=a[i][1];\n            }\n        }\n    }\n    int k=x*y-popcnt(badbits);\n    fprintf(stderr,\"quiet pattern=%d\\n\",x*y-k);\n\n    //0\u89e3(quiet pattern)\u306e\u96c6\u5408t\u3092\u7528\u610f\u3059\u308b\n    val_t tmsk=0;\n    vector<val_t>t;\n    vector<pair<int,val_t>>a_ok;\n    for(int i=0;i<x*y;i++){\n        if((badbits>>i)&1){\n            t.push_back(a[i][0]);\n        }else{\n            a_ok.emplace_back(i,a[i][0]);\n            tmsk|=(val_t)1<<i;\n        }\n    }\n\n#if 0\n    //\u5165\u529b\u30fb\u89e3\u306e\u5b58\u5728\u5224\u5b9a\n    val_t input=0;\n    for(int i=0;i<x*y;i++){\n        int t;\n        scanf(\"%d\",&t);\n        input|=(val_t)t<<i;\n    }\n    if(any_of(t.begin(),t.end(),[&](val_t &e)->bool{\n        return popcnt(e&input)&1;\n    })){\n        return -1;\n    }\n#endif\n\n    vector<val_t>tlst(1<<(x*y-k)); // \u3053\u306e\u30e1\u30e2\u30ea\u306f\u3042\u307e\u308a\u5927\u304d\u304f\u306a\u3089\u306a\u3044\u306f\u305a\n    for(val_t l=0;l<1<<(x*y-k);l++){\n        val_t r=0;\n        for(int j=0;j<x*y-k;j++)if(l&((val_t)1<<j))r^=t[j];\n        tlst[l]=r;\n    }\n\n    //\u5168\u76e4\u9762\u306b\u5bfe\u3057\u6700\u77ed\u624b\u6570\u3092\u8a08\u7b97\u3059\u308b\n    int num_threads=thread::hardware_concurrency();\n    auto f=[&](val_t start)->int{\n        int r=0;\n        for(val_t i_=start;i_<(val_t)1<<k;i_+=num_threads){\n            //i_\u306eiteration\u306f\u672c\u6765\u306fbadbits\u3092\u9664\u3044\u305f\u30d3\u30c3\u30c8\n            //\u30e9\u30a4\u30c4\u30a2\u30a6\u30c8\u3067\u306fbadbits\u306f\u672b\u7aef\u306b\u96c6\u4e2d\u3057\u3066\u3044\u308b\u305f\u3081\u3053\u308c\u3067\u826f\u3044\n            //\u672c\u6765\u306ftlist/a_ok\u306e\u30d3\u30c3\u30c8\u3092badbits\u4ee5\u5916\u306b\u8a70\u3081\u308b\u306e\u304c\u6b63\u89e3\n\n            if(popcnt(i_)*2>k)continue;\n            //\u5b8c\u5168\u53cd\u8ee2\u306b\u3064\u3044\u3066\u3082\u6c42\u3081\u3001\u6700\u5c0f\u5024\u3092\u53d6\u308b\n            int c=1<<29;\n            for(val_t i:{i_,i_^tmsk}){\n                val_t r0=0;\n                for(auto &j:a_ok)if(i&((val_t)1<<j.first))r0^=j.second;\n                //0\u89e3\u306e\u91cd\u306d\u5408\u308f\u305b\u3092\u3059\u3079\u3066\u8a66\u3059\n                int c0=1<<29;\n                for(val_t l=0;l<(val_t)1<<(x*y-k);l++){\n                    val_t r1=r0;\n                    //for(int j=0;j<x*y-k;j++)if(l&((val_t)1<<j))r1^=t[j];\n                    r1^=tlst[l];\n                    c0=min(c0,popcnt(r1));\n                }\n                c=min(c,c0);\n            }\n            r=max(r,c);\n        }\n        return r;\n    };\n    vector<future<int>>task;\n    for(int i=1;i<num_threads;i++)task.push_back(async(launch::async,f,i));\n    int r=f(0);\n    for(auto &t:task)r=max(r,t.get());\n    return r;\n}\n\nint main(){\n    int m,n;\n    scanf(\"%d%d\",&m,&n);\n    printf(\"%d\\n\",lightsout(m,n));\n}\n\n\n\n\u3084\u306f\u308a\u52b9\u7387\u306fOpenMP\u306b\u6bd4\u3079\u308b\u3068\u843d\u3061\u308b\u3089\u3057\u3044\u3002\n\u305f\u3060\u3001C++11\u6a19\u6e96\u306a\u306e\u3067\u3001clang\u3067\u3082\u4f7f\u3048\u308b\u306e\u304c\u826f\u3044\u3067\u3059\u306d\u3002\n\n\n|\u30b7\u30ea\u30fc\u30ba\uff1a\u6383\u304d\u51fa\u3057\u6cd5\u306b\u3064\u3044\u3066|URL|\n|:--|:--|\n|\u554f\u984c\uff1a\u5341\u6587\u5b57\u306b\u53cd\u8ee2\u3057\u3066\u8272\u3092\u63c3\u3048\u3066\uff01(\u6700\u77ed\u624b\u6570\u306e\u6700\u5927\u5316)|https://codeiq.jp/q/2972|\n|single/OpenMP|https://qiita.com/cielavenir/items/2fa1f1149132de579a46|\n|std::async|https://qiita.com/cielavenir/items/61b329936ef6508a5938|\n|\u756a\u5916\u7de8\uff1a\u30aa\u30f3\u30e9\u30a4\u30f3\u30b8\u30e3\u30c3\u30b8\u3067\u4e26\u5217\u5b9f\u884c\u306f\u4f7f\u3048\u308b\u304b\uff1f|https://qiita.com/cielavenir/items/ade2b7c0b5a63b2687f0|\n|\u554f\u984c\uff1a\u88cf\u8868\u3061\u308f\u30fc\u308f(\u89e3\u306e\u5b58\u5728\u5224\u5b9a)|http://yukicoder.me/problems/no/460<br>https://www.codeeval.com/public_sc/191/|\n|\u89e3\u8aac|https://qiita.com/cielavenir/items/c6b15ff4e28fb5f492ec|\n\n(\u6982\u8981\u7b49\u306fsingle/OpenMP\u7248\u3092\u53c2\u7167\u4e0b\u3055\u3044)\n\n- \u4eca\u307e\u3067\u4e26\u5217\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u306fOpenMP\u3092\u4f7f\u3063\u3066\u304d\u305f\u304c\u3001std::async\u3092vector\u306b\u7a81\u3063\u8fbc\u3080\u3053\u3068\u3067\u3082\u3067\u304d\u308b\u3089\u3057\u3044\u306e\u3067\u3001\u3084\u3063\u3066\u307f\u305f\u3002\n\n```cpp:tyama_codeiq2972_async.cpp\n// async\n// 5 5: 0.08s\n// 3 9: 1.47s\n// 5 6: 15.53s\n// 4 8: 83.18s\n// 6 6: 772.15s\n\n#include <vector>\n#include <algorithm>\n#include <future>\n#include <cstdio>\nusing namespace std;\n\ntypedef unsigned long long val_t;\n#define popcnt __builtin_popcountll\n//typedef unsigned int val_t;\n//#define popcnt __builtin_popcount\n//typedef mpz_class val_t;\n//int popcnt(const val_t &x){int r=0;val_t z=x;for(;z;z/=2)r+=z%2;return r;}\n\nint lightsout(int x,int y){\n\tvector<vector<val_t>>a(x*y);\n\tfor(int i=0;i<x*y;i++)a[i].resize(2);\n\n\t//create problem\n\tfor(int i=0;i<x;i++){\n\t\tfor(int j=0;j<y;j++){\n\t\t\ta[i+j*x][0]=(val_t)1<<(i+j*x);\n\t\t\ta[i+j*x][1]= 0 +\n\t\t\t\t((val_t)1<<(i+j*x)) +\n\t\t\t\t(i>0   ? (val_t)1<<(i-1+j*x) : 0) +\n\t\t\t\t(i<x-1 ? (val_t)1<<(i+1+j*x) : 0) +\n\t\t\t\t(j>0   ? (val_t)1<<(i+(j-1)*x) : 0) +\n\t\t\t\t(j<y-1 ? (val_t)1<<(i+(j+1)*x) : 0) +\n\t\t\t\t0;\n\t\t}\n\t}\n\n\t//solve\n\tval_t badbits=0;\n\tint i=0;\n\tfor(;i<x*y;i++){\n\t\tif((a[i][1]&((val_t)1<<i))==0){\n\t\t\tint j=i+1;\n\t\t\tfor(;j<x*y;j++){\n\t\t\t\tif((a[j][1]&((val_t)1<<i))!=0){\n\t\t\t\t\tswap(a[i],a[j]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j==x*y){\n\t\t\t\tbadbits|=(val_t)1<<i;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tfor(int j=0;j<x*y;j++){\n\t\t\tif(i==j)continue;\n\t\t\tif((a[j][1]&((val_t)1<<i))!=0){\n\t\t\t\ta[j][0]^=a[i][0];\n\t\t\t\ta[j][1]^=a[i][1];\n\t\t\t}\n\t\t}\n\t}\n\tint k=x*y-popcnt(badbits);\n\tfprintf(stderr,\"quiet pattern=%d\\n\",x*y-k);\n\n\t//0\u89e3(quiet pattern)\u306e\u96c6\u5408t\u3092\u7528\u610f\u3059\u308b\n\tval_t tmsk=0;\n\tvector<val_t>t;\n\tvector<pair<int,val_t>>a_ok;\n\tfor(int i=0;i<x*y;i++){\n\t\tif((badbits>>i)&1){\n\t\t\tt.push_back(a[i][0]);\n\t\t}else{\n\t\t\ta_ok.emplace_back(i,a[i][0]);\n\t\t\ttmsk|=(val_t)1<<i;\n\t\t}\n\t}\n\n#if 0\n\t//\u5165\u529b\u30fb\u89e3\u306e\u5b58\u5728\u5224\u5b9a\n\tval_t input=0;\n\tfor(int i=0;i<x*y;i++){\n\t\tint t;\n\t\tscanf(\"%d\",&t);\n\t\tinput|=(val_t)t<<i;\n\t}\n\tif(any_of(t.begin(),t.end(),[&](val_t &e)->bool{\n\t\treturn popcnt(e&input)&1;\n\t})){\n\t\treturn -1;\n\t}\n#endif\n\n\tvector<val_t>tlst(1<<(x*y-k)); // \u3053\u306e\u30e1\u30e2\u30ea\u306f\u3042\u307e\u308a\u5927\u304d\u304f\u306a\u3089\u306a\u3044\u306f\u305a\n\tfor(val_t l=0;l<1<<(x*y-k);l++){\n\t\tval_t r=0;\n\t\tfor(int j=0;j<x*y-k;j++)if(l&((val_t)1<<j))r^=t[j];\n\t\ttlst[l]=r;\n\t}\n\n\t//\u5168\u76e4\u9762\u306b\u5bfe\u3057\u6700\u77ed\u624b\u6570\u3092\u8a08\u7b97\u3059\u308b\n\tint num_threads=thread::hardware_concurrency();\n\tauto f=[&](val_t start)->int{\n\t\tint r=0;\n\t\tfor(val_t i_=start;i_<(val_t)1<<k;i_+=num_threads){\n\t\t\t//i_\u306eiteration\u306f\u672c\u6765\u306fbadbits\u3092\u9664\u3044\u305f\u30d3\u30c3\u30c8\n\t\t\t//\u30e9\u30a4\u30c4\u30a2\u30a6\u30c8\u3067\u306fbadbits\u306f\u672b\u7aef\u306b\u96c6\u4e2d\u3057\u3066\u3044\u308b\u305f\u3081\u3053\u308c\u3067\u826f\u3044\n\t\t\t//\u672c\u6765\u306ftlist/a_ok\u306e\u30d3\u30c3\u30c8\u3092badbits\u4ee5\u5916\u306b\u8a70\u3081\u308b\u306e\u304c\u6b63\u89e3\n\n\t\t\tif(popcnt(i_)*2>k)continue;\n\t\t\t//\u5b8c\u5168\u53cd\u8ee2\u306b\u3064\u3044\u3066\u3082\u6c42\u3081\u3001\u6700\u5c0f\u5024\u3092\u53d6\u308b\n\t\t\tint c=1<<29;\n\t\t\tfor(val_t i:{i_,i_^tmsk}){\n\t\t\t\tval_t r0=0;\n\t\t\t\tfor(auto &j:a_ok)if(i&((val_t)1<<j.first))r0^=j.second;\n\t\t\t\t//0\u89e3\u306e\u91cd\u306d\u5408\u308f\u305b\u3092\u3059\u3079\u3066\u8a66\u3059\n\t\t\t\tint c0=1<<29;\n\t\t\t\tfor(val_t l=0;l<(val_t)1<<(x*y-k);l++){\n\t\t\t\t\tval_t r1=r0;\n\t\t\t\t\t//for(int j=0;j<x*y-k;j++)if(l&((val_t)1<<j))r1^=t[j];\n\t\t\t\t\tr1^=tlst[l];\n\t\t\t\t\tc0=min(c0,popcnt(r1));\n\t\t\t\t}\n\t\t\t\tc=min(c,c0);\n\t\t\t}\n\t\t\tr=max(r,c);\n\t\t}\n\t\treturn r;\n\t};\n\tvector<future<int>>task;\n\tfor(int i=1;i<num_threads;i++)task.push_back(async(launch::async,f,i));\n\tint r=f(0);\n\tfor(auto &t:task)r=max(r,t.get());\n\treturn r;\n}\n\nint main(){\n\tint m,n;\n\tscanf(\"%d%d\",&m,&n);\n\tprintf(\"%d\\n\",lightsout(m,n));\n}\n```\n\n- \u3084\u306f\u308a\u52b9\u7387\u306fOpenMP\u306b\u6bd4\u3079\u308b\u3068\u843d\u3061\u308b\u3089\u3057\u3044\u3002\n- \u305f\u3060\u3001C++11\u6a19\u6e96\u306a\u306e\u3067\u3001clang\u3067\u3082\u4f7f\u3048\u308b\u306e\u304c\u826f\u3044\u3067\u3059\u306d\u3002\n", "tags": ["codeiq", "C++"]}