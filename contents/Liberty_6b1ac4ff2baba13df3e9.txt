{"tags": ["Java", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"], "context": " More than 1 year has passed since last update.\u4e0d\u5b8c\u5168\u71c3\u713c\u3068\u8a00\u3044\u3064\u3064\u4e57\u305b\u305f\u306e\u306f\u3001\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ALDS1_6_A\n\u306e\u554f\u984c\u3067\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b99\u4ee5\u964d\u304b\u3089\u30e1\u30e2\u30ea\u3060\u3063\u305f\u308a\u5b9f\u884c\u6642\u9593\u3067\u8e74\u3089\u308c\u3066\u3057\u307e\u3063\u305f\u304b\u3089\u3067\u3059\u3002\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7684\u306b\u306f\u6b63\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u3082\u3063\u3068\u52b9\u7387\u306e\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308b\u306e\u304b\u6a21\u7d22\u4e2d\u3067\u3059\u3002\n\u3068\u306f\u8a00\u3048\u3001\u6c17\u3065\u3044\u305f\u65b9\u3001\u30a2\u30c9\u30d0\u30a4\u30b9\u3044\u305f\u3060\u3051\u308b\u3068\u3059\u3054\u304f\u5b09\u3057\u3044\u3067\u3059\u3002\n\u203b\u6700\u5f8c\u306e\u51fa\u529b\u305d\u306e\u3082\u306e\u3067\u8e74\u3089\u308c\u3066\u3044\u308b\u6c17\u304c\u3002\u3002\u3002\n\n\u5206\u5e03\u6570\u3048\u4e0a\u3052\u30bd\u30fc\u30c8\n\u4f8b\u306b\u3088\u3063\u3066\u3001\u30bd\u30fc\u30b9\u3078\u76f4\u63a5\u30b3\u30e1\u30f3\u30c8\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u6982\u5ff5\u306a\u3069\u306f\u4e0b\u8a18URL\u304c\u4e00\u756a\u5206\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://www.codereading.com/algo_and_ds/algo/counting_sort.html\n\u8981\u306f\u3001\u30b5\u30a4\u30ba\u3084\u5024\u306e\u7bc4\u56f2\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u914d\u5217\u3067\u3042\u308b\u5834\u5408\u306b\u6709\u52b9\u306a\u30bd\u30fc\u30c8\u65b9\u6cd5\u3067\u3042\u308a\u3001\n\u5024\u306e\u767a\u751f\u56de\u6570\u3092\u5143\u306b\u3001\u5024\u306e\u4f4d\u7f6e\u3092\u6c7a\u3081\u3066\u3044\u304f\u3082\u306e\u3067\u3059\u3002\n\u901f\u5ea6\u7684\u306b\u306f\u4e00\u5fdc\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e2d\u3067\u6700\u901f\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\nCountingSort.java\npackage aoj.sort;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class CountingSort {\n\n    public static void main(String args[]) throws IOException {\n        // \u5165\u529b\u306e\u53d7\u4ed8\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        // \u8981\u7d20\u6570\u304c\u5165\u3063\u3066\u304f\u308b\u304c\u3001\u8981\u7d20\u6570\u304b\u3089\u30b5\u30a4\u30ba\u3092\u53d6\u308c\u308b\u306e\u3067\u8aad\u307f\u6368\u3066\n        br.readLine();\n        String line = br.readLine();\n        // \u6574\u6570\u5024\u306e\u914d\u5217\u3092\u53d6\u5f97\n        int[] befSort = parseInt(getSplitLine(line));\n\n        /**\n         * \u3053\u3053\u304b\u3089\u8a08\u6570\u30bd\u30fc\u30c8\n         */\n        // \u524d\u63d0\u6761\u4ef6\n        // 1 \u2264 n \u2264 2,000,000 : \u8981\u7d20\u6570\n        // 0 \u2264 A[i] \u2264 10,000 : \u542b\u307e\u308c\u308b\u6574\u6570\u5024\n\n        // \u30ab\u30a6\u30f3\u30bf\u914d\u5217\uff08\u51fa\u73fe\u56de\u6570\uff09\u306e\u521d\u671f\u5316\n        // \u6570\u5024\u306e\u6700\u5927\u5024+1\u3067\u521d\u671f\u5316\u3059\u308b\n        int maxSize = 2000001;\n        int[] counter = new int[maxSize];\n\n        int i;\n        for (i = 0; i < befSort.length; i++) {\n            // numArray\u306b\u542b\u307e\u308c\u308b\u6570\u5024\u306e\u51fa\u73fe\u56de\u6570\u3092\u8a08\u7b97\u3059\u308b\n            counter[befSort[i]]++;\n            // 2, 5, 1, 3, 2, 3, 0 \u306e\u914d\u5217\u3067\u3042\u308b\u5834\u5408\u3001\n            // counter[0] = 1 \u56de\uff080\uff09\n            // counter[1] = 1 \u56de\uff081\uff09\n            // counter[2] = 2 \u56de\uff082\uff09\n            // counter[3] = 2 \u56de\uff083\uff09\n            // counter[4] = 0 \u56de\uff084\uff09\n            // counter[5] = 1 \u56de\uff085\uff09\n            // \u306e\u69d8\u306a\u8a08\u7b97\u7d50\u679c\u306b\u306a\u308b\n        }\n        //\n        for (i = 1; i < counter.length; i++) {\n            // i \u4ee5\u4e0b\u306e\u51fa\u73fe\u56de\u6570\u3092\u8a08\u7b97\u3059\u308b\n            counter[i] = counter[i] + counter[i - 1];\n            // i = 0; counter[i] = 1; 0\u4ee5\u4e0b\u306f1\u3064\n            // i = 1; counter[i] = 2; 1\u4ee5\u4e0b\u306f2\u3064\n            // i = 2; counter[i] = 4; 2\u4ee5\u4e0b\u306f3\u3064\n            // i = 3; counter[i] = 6; 3\u4ee5\u4e0b\u306f6\u3064\n            // i = 4; counter[i] = 6; 4\u4ee5\u4e0b\u306f6\u3064\n            // i = 5; counter[i] = 7; 5\u4ee5\u4e0b\u306f7\u3064\n        }\n\n        // output(\u30bd\u30fc\u30c8\u7d50\u679c\u3092\u767b\u9332\u3059\u308b\u914d\u5217)\u3078\u8a08\u7b97\u3057\u305f\u7d50\u679c\u3092\u767b\u9332\u3059\u308b\n        int[] output = new int[maxSize];\n        for (i = befSort.length - 1; i >= 0; i--) {\n            output[counter[befSort[i]]] = befSort[i];\n            // i = 0; output[counter[2]] = 2;\n            // i = 0; output[4] = 2;\n            // i = 1; output[counter[5]] = 5;\n            // i = 1; output[7] = 5;\n            // \u306e\u3088\u3046\u306b\u3001\u5165\u529b\u914d\u5217\u306e\u51fa\u73fe\u56de\u6570(count[i])\u306e\u5834\u6240\u3078\n            // \u6570\u5024\u3092\u767b\u9332\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u30bd\u30fc\u30c8\u3055\u308c\u308b\n            counter[befSort[i]]--;\n        }\n\n        // \u51fa\u529b\n        System.out.print(output[1]);\n        for (i = 2; i <= befSort.length; i++) {\n            System.out.print(\" \" + output[i]);\n        }\n        System.out.println();\n    }\n\n    private static String[] getSplitLine(String line) {\n        return line.split(\"\\\\s\");\n    }\n\n    private static int[] parseInt(String[] line) {\n        int[] numArray = new int[line.length];\n        for (int i = 0; i < line.length; i++) {\n            numArray[i] = Integer.parseInt(line[i]);\n        }\n        return numArray;\n    }\n\n}\n\n\n\u4e0d\u5b8c\u5168\u71c3\u713c\u3068\u8a00\u3044\u3064\u3064\u4e57\u305b\u305f\u306e\u306f\u3001\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ALDS1_6_A\n\u306e\u554f\u984c\u3067\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b99\u4ee5\u964d\u304b\u3089\u30e1\u30e2\u30ea\u3060\u3063\u305f\u308a\u5b9f\u884c\u6642\u9593\u3067\u8e74\u3089\u308c\u3066\u3057\u307e\u3063\u305f\u304b\u3089\u3067\u3059\u3002\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7684\u306b\u306f\u6b63\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u3082\u3063\u3068\u52b9\u7387\u306e\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308b\u306e\u304b\u6a21\u7d22\u4e2d\u3067\u3059\u3002\n\u3068\u306f\u8a00\u3048\u3001\u6c17\u3065\u3044\u305f\u65b9\u3001\u30a2\u30c9\u30d0\u30a4\u30b9\u3044\u305f\u3060\u3051\u308b\u3068\u3059\u3054\u304f\u5b09\u3057\u3044\u3067\u3059\u3002\n\u203b\u6700\u5f8c\u306e\u51fa\u529b\u305d\u306e\u3082\u306e\u3067\u8e74\u3089\u308c\u3066\u3044\u308b\u6c17\u304c\u3002\u3002\u3002\n\n#\u5206\u5e03\u6570\u3048\u4e0a\u3052\u30bd\u30fc\u30c8\n\u4f8b\u306b\u3088\u3063\u3066\u3001\u30bd\u30fc\u30b9\u3078\u76f4\u63a5\u30b3\u30e1\u30f3\u30c8\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u6982\u5ff5\u306a\u3069\u306f\u4e0b\u8a18URL\u304c\u4e00\u756a\u5206\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://www.codereading.com/algo_and_ds/algo/counting_sort.html\n\n\u8981\u306f\u3001\u30b5\u30a4\u30ba\u3084\u5024\u306e\u7bc4\u56f2\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u914d\u5217\u3067\u3042\u308b\u5834\u5408\u306b\u6709\u52b9\u306a\u30bd\u30fc\u30c8\u65b9\u6cd5\u3067\u3042\u308a\u3001\n\u5024\u306e\u767a\u751f\u56de\u6570\u3092\u5143\u306b\u3001\u5024\u306e\u4f4d\u7f6e\u3092\u6c7a\u3081\u3066\u3044\u304f\u3082\u306e\u3067\u3059\u3002\n\u901f\u5ea6\u7684\u306b\u306f\u4e00\u5fdc\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e2d\u3067\u6700\u901f\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n#\u30b3\u30fc\u30c9\n```java:CountingSort.java\npackage aoj.sort;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class CountingSort {\n\n\tpublic static void main(String args[]) throws IOException {\n\t\t// \u5165\u529b\u306e\u53d7\u4ed8\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// \u8981\u7d20\u6570\u304c\u5165\u3063\u3066\u304f\u308b\u304c\u3001\u8981\u7d20\u6570\u304b\u3089\u30b5\u30a4\u30ba\u3092\u53d6\u308c\u308b\u306e\u3067\u8aad\u307f\u6368\u3066\n\t\tbr.readLine();\n\t\tString line = br.readLine();\n\t\t// \u6574\u6570\u5024\u306e\u914d\u5217\u3092\u53d6\u5f97\n\t\tint[] befSort = parseInt(getSplitLine(line));\n\n\t\t/**\n\t\t * \u3053\u3053\u304b\u3089\u8a08\u6570\u30bd\u30fc\u30c8\n\t\t */\n\t\t// \u524d\u63d0\u6761\u4ef6\n\t\t// 1 \u2264 n \u2264 2,000,000 : \u8981\u7d20\u6570\n\t\t// 0 \u2264 A[i] \u2264 10,000 : \u542b\u307e\u308c\u308b\u6574\u6570\u5024\n\n\t\t// \u30ab\u30a6\u30f3\u30bf\u914d\u5217\uff08\u51fa\u73fe\u56de\u6570\uff09\u306e\u521d\u671f\u5316\n\t\t// \u6570\u5024\u306e\u6700\u5927\u5024+1\u3067\u521d\u671f\u5316\u3059\u308b\n\t\tint maxSize = 2000001;\n\t\tint[] counter = new int[maxSize];\n\n\t\tint i;\n\t\tfor (i = 0; i < befSort.length; i++) {\n\t\t\t// numArray\u306b\u542b\u307e\u308c\u308b\u6570\u5024\u306e\u51fa\u73fe\u56de\u6570\u3092\u8a08\u7b97\u3059\u308b\n\t\t\tcounter[befSort[i]]++;\n\t\t\t// 2, 5, 1, 3, 2, 3, 0 \u306e\u914d\u5217\u3067\u3042\u308b\u5834\u5408\u3001\n\t\t\t// counter[0] = 1 \u56de\uff080\uff09\n\t\t\t// counter[1] = 1 \u56de\uff081\uff09\n\t\t\t// counter[2] = 2 \u56de\uff082\uff09\n\t\t\t// counter[3] = 2 \u56de\uff083\uff09\n\t\t\t// counter[4] = 0 \u56de\uff084\uff09\n\t\t\t// counter[5] = 1 \u56de\uff085\uff09\n\t\t\t// \u306e\u69d8\u306a\u8a08\u7b97\u7d50\u679c\u306b\u306a\u308b\n\t\t}\n\t\t//\n\t\tfor (i = 1; i < counter.length; i++) {\n\t\t\t// i \u4ee5\u4e0b\u306e\u51fa\u73fe\u56de\u6570\u3092\u8a08\u7b97\u3059\u308b\n\t\t\tcounter[i] = counter[i] + counter[i - 1];\n\t\t\t// i = 0; counter[i] = 1; 0\u4ee5\u4e0b\u306f1\u3064\n\t\t\t// i = 1; counter[i] = 2; 1\u4ee5\u4e0b\u306f2\u3064\n\t\t\t// i = 2; counter[i] = 4; 2\u4ee5\u4e0b\u306f3\u3064\n\t\t\t// i = 3; counter[i] = 6; 3\u4ee5\u4e0b\u306f6\u3064\n\t\t\t// i = 4; counter[i] = 6; 4\u4ee5\u4e0b\u306f6\u3064\n\t\t\t// i = 5; counter[i] = 7; 5\u4ee5\u4e0b\u306f7\u3064\n\t\t}\n\n\t\t// output(\u30bd\u30fc\u30c8\u7d50\u679c\u3092\u767b\u9332\u3059\u308b\u914d\u5217)\u3078\u8a08\u7b97\u3057\u305f\u7d50\u679c\u3092\u767b\u9332\u3059\u308b\n\t\tint[] output = new int[maxSize];\n\t\tfor (i = befSort.length - 1; i >= 0; i--) {\n\t\t\toutput[counter[befSort[i]]] = befSort[i];\n\t\t\t// i = 0; output[counter[2]] = 2;\n\t\t\t// i = 0; output[4] = 2;\n\t\t\t// i = 1; output[counter[5]] = 5;\n\t\t\t// i = 1; output[7] = 5;\n\t\t\t// \u306e\u3088\u3046\u306b\u3001\u5165\u529b\u914d\u5217\u306e\u51fa\u73fe\u56de\u6570(count[i])\u306e\u5834\u6240\u3078\n\t\t\t// \u6570\u5024\u3092\u767b\u9332\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u30bd\u30fc\u30c8\u3055\u308c\u308b\n\t\t\tcounter[befSort[i]]--;\n\t\t}\n\n\t\t// \u51fa\u529b\n\t\tSystem.out.print(output[1]);\n\t\tfor (i = 2; i <= befSort.length; i++) {\n\t\t\tSystem.out.print(\" \" + output[i]);\n\t\t}\n\t\tSystem.out.println();\n\t}\n\n\tprivate static String[] getSplitLine(String line) {\n\t\treturn line.split(\"\\\\s\");\n\t}\n\n\tprivate static int[] parseInt(String[] line) {\n\t\tint[] numArray = new int[line.length];\n\t\tfor (int i = 0; i < line.length; i++) {\n\t\t\tnumArray[i] = Integer.parseInt(line[i]);\n\t\t}\n\t\treturn numArray;\n\t}\n\n}\n```\n"}