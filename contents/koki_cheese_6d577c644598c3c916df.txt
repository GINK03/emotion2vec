{"context": "\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u8272\u3005\u8a66\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3063\u307d\u304f\u3057\u3066\u307e\u3059\n\nnotify.go\n//usr/bin/env go run $0 $@ ; exit\n\npackage main\n\nimport (\n    \"flag\"\n    \"fmt\"\n    \"io/ioutil\"\n    \"log\"\n    \"net/http\"\n    \"net/url\"\n    \"strings\"\n)\n\nfunc main() {\n    token := flag.String(\"token\", \"\", \"LINE notify token\")\n    flag.Parse()\n\n    text := flag.Arg(0)\n\n    if *token == \"\" {\n        log.Fatal(\"not token\")\n    }\n\n    if text == \"\" {\n        log.Fatal(\"not text\")\n    }\n\n    data := url.Values{\"message\": {text}}\n    r, _ := http.NewRequest(\"POST\", \"https://notify-api.line.me/api/notify\", strings.NewReader(data.Encode()))\n    r.Header.Set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n    r.Header.Set(\"Authorization\", \"Bearer \"+*token)\n    resp, err := http.DefaultClient.Do(r)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer resp.Body.Close()\n    body, err := ioutil.ReadAll(resp.Body)\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Printf(\"%s\\n\", body)\n}\n\n\n\u4f7f\u3044\u65b9\u306fnotify.go\u3068\u304b\u8a00\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002\n$TOKEN\u306b\u306fLINE Notify\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nchmod +x notify.go\n./notify.go -token $TOKEN hogehoge\n\n\u3082\u3061\u308d\u3093build\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\ngo build -o notify notify.go\n./notify -token $TOKEN hogehoge\n\nGo\u3067\u3084\u308b\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066GOOS\u30aa\u30d7\u30b7\u30e7\u30f3\u3067windows\u3084linux\u5411\u3051\u306b\u3082\u30d3\u30eb\u30c9\u3067\u304d\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u8272\u3005\u8a66\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3063\u307d\u304f\u3057\u3066\u307e\u3059\n\n```go:notify.go\n//usr/bin/env go run $0 $@ ; exit\n\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net/http\"\n\t\"net/url\"\n\t\"strings\"\n)\n\nfunc main() {\n\ttoken := flag.String(\"token\", \"\", \"LINE notify token\")\n\tflag.Parse()\n\n\ttext := flag.Arg(0)\n\n\tif *token == \"\" {\n\t\tlog.Fatal(\"not token\")\n\t}\n\n\tif text == \"\" {\n\t\tlog.Fatal(\"not text\")\n\t}\n\n\tdata := url.Values{\"message\": {text}}\n\tr, _ := http.NewRequest(\"POST\", \"https://notify-api.line.me/api/notify\", strings.NewReader(data.Encode()))\n\tr.Header.Set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\tr.Header.Set(\"Authorization\", \"Bearer \"+*token)\n\tresp, err := http.DefaultClient.Do(r)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer resp.Body.Close()\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tfmt.Printf(\"%s\\n\", body)\n}\n```\n\n\n\u4f7f\u3044\u65b9\u306f`notify.go`\u3068\u304b\u8a00\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002\n`$TOKEN`\u306b\u306fLINE Notify\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash\nchmod +x notify.go\n./notify.go -token $TOKEN hogehoge\n```\n\n\u3082\u3061\u308d\u3093build\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```\ngo build -o notify notify.go\n./notify -token $TOKEN hogehoge\n```\n\nGo\u3067\u3084\u308b\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066GOOS\u30aa\u30d7\u30b7\u30e7\u30f3\u3067windows\u3084linux\u5411\u3051\u306b\u3082\u30d3\u30eb\u30c9\u3067\u304d\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\n", "tags": ["Go", "LineNotify"]}