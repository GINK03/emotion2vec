{"context": "\n\nSource\nExcelGrep (gist on GitHub)\nhttps://gist.github.com/TatsuoWatanabe/2ed13d04d9dd686e9b23206c88a7e1a4\n\nDownload\nExcelGrep.xlsm (gist on GitHub)\nhttps://gist.github.com/TatsuoWatanabe/2ed13d04d9dd686e9b23206c88a7e1a4/raw/7732a40d7c5bdaa50f4372d9a4681d0c404ce74d/ExcelGrep.xlsm\n\nImage\n\n\nExcel\u306e\u691c\u7d22\u6a5f\u80fd\u3068\u306e\u9055\u3044\n\n\u6307\u5b9a\u30d5\u30a9\u30eb\u30c0\u914d\u4e0b\u306eExcel\u30d5\u30a1\u30a4\u30eb(.xlsx .xls .xlsm)\u3092\u5168\u3066\u691c\u7d22\u3057\u307e\u3059\u3002 \n\u691c\u7d22\u6587\u5b57\u5217\u3092\u6b63\u898f\u8868\u73fe\u30d1\u30bf\u30fc\u30f3\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u56f3\u5f62\u3084\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u5185\u90e8\u306e\u30c6\u30ad\u30b9\u30c8\u3082\u691c\u7d22\u3057\u307e\u3059\u3002\n\n\n\u6982\u8981\n\u4ed5\u7d44\u307f\u306f\u5358\u7d14\u3067\u3059\u3002\n\n\u6307\u5b9a\u30d5\u30a9\u30eb\u30c0\u3092\u518d\u5e30\u691c\u7d22\n\u8a72\u5f53\u30d5\u30a1\u30a4\u30eb\u3092Excel\u3067\u958b\u304f\n\u5168\u30b7\u30fc\u30c8\u3092\u691c\u7d22\n\u30b7\u30fc\u30c8\u5185\u30bb\u30eb\u306e\u5024\u3092\u6b63\u898f\u8868\u73fe\u3067\u8a55\u4fa1\n\u30b7\u30fc\u30c8\u5185\u56f3\u5f62\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u6b63\u898f\u8868\u73fe\u3067\u8a55\u4fa1\n\u8a72\u5f53\u306e\u5024\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\n\n\u3068\u3044\u3046\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u8a73\u7d30\n\u30d5\u30a9\u30eb\u30c0\u3092\u518d\u5e30\u691c\u7d22\n\nExcelGrep.cls\nPrivate Sub SearchFolder(objFolder As Folder)\n    If ShouldSearch = False Then Exit Sub\n\n    Dim objFile   As File\n    Dim SubFolder As Folder\n\n    Call DisplayStatus(objFolder.Path)\n\n    For Each objFile In objFolder.Files\n        Select Case FSO.GetExtensionName(objFile.Path)\n            Case \"xls\", \"xlsx\", \"xlsm\"\n                Call SearchBook(objFile)\n        End Select\n    Next\n\n    For Each SubFolder In objFolder.SubFolders\n        Call SearchFolder(SubFolder) 'recursive call\n    Next\nEnd Sub\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092Excel\u3067\u958b\u304f(\u5225\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)\n\nExcelGrep.cls\n\nPrivate Sub SearchBook(objFile As File)\n    If ShouldSearch = False Then Exit Sub\n\n    On Error Resume Next\n    If InvisibleExcel Is Nothing Then\n        Set InvisibleExcel = New Excel.Application\n        InvisibleExcel.Visible = False\n        InvisibleExcel.ScreenUpdating = False\n    End If\n\n    Dim Book As Workbook: Set Book = InvisibleExcel.Workbooks.Open(Filename:=objFile.Path, ReadOnly:=True)\n    If Book Is Nothing Then\n        MsgBox objFile.Path & vbCrLf & \" \u304c\u958b\u3051\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"\n        Exit Sub\n    End If\n    On Error GoTo 0\n\n    Dim Sheet      As Worksheet\n    For Each Sheet In Book.Worksheets\n        Call SearchSheet(Sheet)\n    Next\n\n    Call Book.Close(SaveChanges:=False)\nEnd Sub\n\n\n\u30b7\u30fc\u30c8\u3092\u691c\u7d22\n\nExcelGrep.cls\n\nPrivate Sub SearchSheet(Sheet As Worksheet)\n    If ShouldSearch = False Then Exit Sub\n\n    Dim TargetRange As Range\n    Dim Cell        As Range\n\n    'Search Cells\n    Set TargetRange = Sheet.UsedRange.Cells\n    For Each Cell In TargetRange\n        DoEvents\n        Call DisplayStatus(Sheet.Parent.FullName)\n\n        If Cell.Value <> \"\" Then\n            If REG.Test(Cell.Value) Then\n                Call ProcessCell(Cell)\n            End If\n        End If\n    Next\n\n    'Search Shapes\n    Dim objShape As Shape\n    For Each objShape In Sheet.Shapes\n        DoEvents\n        Call DisplayStatus(Sheet.Parent.FullName)\n\n        If HasTextFrameCharactersText(objShape) Then\n            If REG.Test(objShape.TextFrame.Characters.Text) Then\n                Call ProcessShape(objShape)\n            End If\n        End If\n    Next\nEnd Sub\n\n\n\u8a72\u5f53\u306e\u5024\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\n\nExcelGrep.cls\n\nPrivate Sub SetNewRowData(FoundSheet As Worksheet, Name As String, Value As String)\n    Dim Row      As Range: Set Row = GetNewRow()\n    Dim PathCell As Range: Set PathCell = Row.Cells(ResultColumns.Path)\n    Dim BookCell As Range: Set BookCell = Row.Cells(ResultColumns.Book)\n\n    '\u30d1\u30b9\n    PathCell.Value = FoundSheet.Parent.FullName\n    PathCell.WrapText = False\n    Call MainSheet.Hyperlinks.Add(Anchor:=PathCell, Address:=PathCell.Value)\n    '\u30d6\u30c3\u30af\n    BookCell.Value = FoundSheet.Parent.Name\n    Call MainSheet.Hyperlinks.Add(Anchor:=BookCell, Address:=PathCell.Value)\n    '\u30b7\u30fc\u30c8\n    Row.Cells(ResultColumns.Sheet).Value = FoundSheet.Name\n    '\u540d\u524d\n    Row.Cells(ResultColumns.Name).Value = Name\n    '\u5024\n    Row.Cells(ResultColumns.Value).Value = Value\n    Row.Cells(ResultColumns.Value).WrapText = False\n    '--- \u7f6b\u7dda ---\n    Row.Borders.LineStyle = xlContinuous\nEnd Sub\n\n\ngist \u306b\u5168\u30bd\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u3054\u8208\u5473\u306e\u304a\u3042\u308a\u306e\u65b9\u306f\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nhttps://gist.github.com/TatsuoWatanabe/2ed13d04d9dd686e9b23206c88a7e1a4/raw/7732a40d7c5bdaa50f4372d9a4681d0c404ce74d/ExcelGrep.xlsm\n# Source\nExcelGrep (gist on GitHub)\nhttps://gist.github.com/TatsuoWatanabe/2ed13d04d9dd686e9b23206c88a7e1a4\n\n# Download\nExcelGrep.xlsm (gist on GitHub)\nhttps://gist.github.com/TatsuoWatanabe/2ed13d04d9dd686e9b23206c88a7e1a4/raw/7732a40d7c5bdaa50f4372d9a4681d0c404ce74d/ExcelGrep.xlsm\n\n# Image\n![UserInterface.png](https://gist.github.com/TatsuoWatanabe/2ed13d04d9dd686e9b23206c88a7e1a4/raw/7732a40d7c5bdaa50f4372d9a4681d0c404ce74d/UserInterface.png \"UserInterface.png\")\n\n\n# Excel\u306e\u691c\u7d22\u6a5f\u80fd\u3068\u306e\u9055\u3044\n- \u6307\u5b9a\u30d5\u30a9\u30eb\u30c0\u914d\u4e0b\u306eExcel\u30d5\u30a1\u30a4\u30eb(.xlsx .xls .xlsm)\u3092\u5168\u3066\u691c\u7d22\u3057\u307e\u3059\u3002 \n\n- \u691c\u7d22\u6587\u5b57\u5217\u3092\u6b63\u898f\u8868\u73fe\u30d1\u30bf\u30fc\u30f3\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n- \u56f3\u5f62\u3084\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u5185\u90e8\u306e\u30c6\u30ad\u30b9\u30c8\u3082\u691c\u7d22\u3057\u307e\u3059\u3002\n\n\n# \u6982\u8981\n\n\u4ed5\u7d44\u307f\u306f\u5358\u7d14\u3067\u3059\u3002\n\n- \u6307\u5b9a\u30d5\u30a9\u30eb\u30c0\u3092\u518d\u5e30\u691c\u7d22\n\n- \u8a72\u5f53\u30d5\u30a1\u30a4\u30eb\u3092Excel\u3067\u958b\u304f\n\n- \u5168\u30b7\u30fc\u30c8\u3092\u691c\u7d22\n\n- \u30b7\u30fc\u30c8\u5185\u30bb\u30eb\u306e\u5024\u3092\u6b63\u898f\u8868\u73fe\u3067\u8a55\u4fa1\n\n- \u30b7\u30fc\u30c8\u5185\u56f3\u5f62\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u6b63\u898f\u8868\u73fe\u3067\u8a55\u4fa1\n\n- \u8a72\u5f53\u306e\u5024\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\n\n\u3068\u3044\u3046\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n# \u8a73\u7d30\n\n__\u30d5\u30a9\u30eb\u30c0\u3092\u518d\u5e30\u691c\u7d22__\n\n ```vbnet:ExcelGrep.cls\nPrivate Sub SearchFolder(objFolder As Folder)\n    If ShouldSearch = False Then Exit Sub\n    \n    Dim objFile   As File\n    Dim SubFolder As Folder\n    \n    Call DisplayStatus(objFolder.Path)\n    \n    For Each objFile In objFolder.Files\n        Select Case FSO.GetExtensionName(objFile.Path)\n            Case \"xls\", \"xlsx\", \"xlsm\"\n                Call SearchBook(objFile)\n        End Select\n    Next\n    \n    For Each SubFolder In objFolder.SubFolders\n        Call SearchFolder(SubFolder) 'recursive call\n    Next\nEnd Sub\n ```\n\n\n__\u30d5\u30a1\u30a4\u30eb\u3092Excel\u3067\u958b\u304f(\u5225\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)__\n\n ```vbnet:ExcelGrep.cls\n\nPrivate Sub SearchBook(objFile As File)\n    If ShouldSearch = False Then Exit Sub\n    \n    On Error Resume Next\n    If InvisibleExcel Is Nothing Then\n        Set InvisibleExcel = New Excel.Application\n        InvisibleExcel.Visible = False\n        InvisibleExcel.ScreenUpdating = False\n    End If\n    \n    Dim Book As Workbook: Set Book = InvisibleExcel.Workbooks.Open(Filename:=objFile.Path, ReadOnly:=True)\n    If Book Is Nothing Then\n        MsgBox objFile.Path & vbCrLf & \" \u304c\u958b\u3051\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"\n        Exit Sub\n    End If\n    On Error GoTo 0\n    \n    Dim Sheet      As Worksheet\n    For Each Sheet In Book.Worksheets\n        Call SearchSheet(Sheet)\n    Next\n    \n    Call Book.Close(SaveChanges:=False)\nEnd Sub\n ```\n\n__\u30b7\u30fc\u30c8\u3092\u691c\u7d22__\n\n ```vbnet:ExcelGrep.cls\n\nPrivate Sub SearchSheet(Sheet As Worksheet)\n    If ShouldSearch = False Then Exit Sub\n    \n    Dim TargetRange As Range\n    Dim Cell        As Range\n\n    'Search Cells\n    Set TargetRange = Sheet.UsedRange.Cells\n    For Each Cell In TargetRange\n        DoEvents\n        Call DisplayStatus(Sheet.Parent.FullName)\n        \n        If Cell.Value <> \"\" Then\n            If REG.Test(Cell.Value) Then\n                Call ProcessCell(Cell)\n            End If\n        End If\n    Next\n    \n    'Search Shapes\n    Dim objShape As Shape\n    For Each objShape In Sheet.Shapes\n        DoEvents\n        Call DisplayStatus(Sheet.Parent.FullName)\n        \n        If HasTextFrameCharactersText(objShape) Then\n            If REG.Test(objShape.TextFrame.Characters.Text) Then\n                Call ProcessShape(objShape)\n            End If\n        End If\n    Next\nEnd Sub\n ```\n\n__\u8a72\u5f53\u306e\u5024\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7__\n\n ```vbnet:ExcelGrep.cls\n\nPrivate Sub SetNewRowData(FoundSheet As Worksheet, Name As String, Value As String)\n    Dim Row      As Range: Set Row = GetNewRow()\n    Dim PathCell As Range: Set PathCell = Row.Cells(ResultColumns.Path)\n    Dim BookCell As Range: Set BookCell = Row.Cells(ResultColumns.Book)\n    \n    '\u30d1\u30b9\n    PathCell.Value = FoundSheet.Parent.FullName\n    PathCell.WrapText = False\n    Call MainSheet.Hyperlinks.Add(Anchor:=PathCell, Address:=PathCell.Value)\n    '\u30d6\u30c3\u30af\n    BookCell.Value = FoundSheet.Parent.Name\n    Call MainSheet.Hyperlinks.Add(Anchor:=BookCell, Address:=PathCell.Value)\n    '\u30b7\u30fc\u30c8\n    Row.Cells(ResultColumns.Sheet).Value = FoundSheet.Name\n    '\u540d\u524d\n    Row.Cells(ResultColumns.Name).Value = Name\n    '\u5024\n    Row.Cells(ResultColumns.Value).Value = Value\n    Row.Cells(ResultColumns.Value).WrapText = False\n    '--- \u7f6b\u7dda ---\n    Row.Borders.LineStyle = xlContinuous\nEnd Sub\n ```\n\ngist \u306b\u5168\u30bd\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u3054\u8208\u5473\u306e\u304a\u3042\u308a\u306e\u65b9\u306f\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nhttps://gist.github.com/TatsuoWatanabe/2ed13d04d9dd686e9b23206c88a7e1a4/raw/7732a40d7c5bdaa50f4372d9a4681d0c404ce74d/ExcelGrep.xlsm\n", "tags": ["ExcelVBA", "VBA"]}