{"context": " More than 1 year has passed since last update.\u30b5\u30fc\u30d0\u79fb\u8ee2\u3068\u304b\u3057\u305f\u3068\u304d\u306b\u3001\u3069\u306e\u3078\u3093\u307e\u3067DNS\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u3066\u308b\u304b\u77e5\u308a\u305f\u3044\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002\n2012-04-04 \u8ffd\u8a18:\n\u30b3\u30e1\u30f3\u30c8\u306b\u3066geekpage\u3055\u3093\u304c\u3053\u306e\u30c4\u30fc\u30eb\u306e\u554f\u984c\u3092\u6307\u6458\u3057\u3066\u3044\u307e\u3059\u3002\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u306e\u4e0a\u3001\u5404\u81ea\u306e\u4fee\u6b63\u3059\u308b\u306a\u308a\u3057\u3066\u72b6\u6cc1\u306b\u5bfe\u5fdc\u3057\u3066\u304f\u3060\u3055\u3044m(_ _)m \u3054\u6307\u6458\u304f\u3060\u3055\u3063\u305fgeekpage\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\n\ndns-penetration-monitor.php\n#!/usr/bin/env php\n<?php\n\n//$monitor = new DNSPenetrationMonitor(\u30c9\u30e1\u30a4\u30f3, \u65b0\u3057\u3044IP);\n$monitor = new DNSPenetrationMonitor('suin.asia', '59.106.173.151');\n$monitor->monitor();\n\nclass DNSPenetrationMonitor\n{\n    protected static $providers = array(\n        '202.234.232.6'     => 'OCN',\n        '221.113.139.250'   => 'OCN',\n        '210.196.3.183'     => 'auone',\n        '210.141.112.163'   => 'auone',\n        '202.248.37.74'     => '@nifty',\n        '202.248.20.133'    => '@nifty',\n        '202.238.95.24'     => 'So-net',\n        '202.238.95.26'     => 'So-net',\n        '143.90.130.165'    => 'odn',\n        '143.90.130.39'     => 'odn',\n        '8.8.8.8'           => 'google',\n        'dns3.sakura.ad.jp' => 'sakura',\n        'exnsa.plala.or.jp' => 'plala',\n        '198.153.192.1'     => 'Norton',\n        '198.153.194.1'     => 'Norton',\n        '208.67.222.222'    => 'OpenDNS',\n        '208.67.220.220'    => 'OpenDNS',\n        '4.2.2.1'           => 'GTEIDNS',\n        '4.2.2.2'           => 'GTEIDNS',\n        '156.154.70.1'      => 'Dnsadvantage',\n        '156.154.71.1'      => 'Dnsadvantage',\n    );\n\n    protected $hostName   = '';\n    protected $newAddress = '';\n    protected $intervalSeconds = 5;\n    protected $providerStringLength = 0;\n\n    /**\n     * @param string $hostName\n     * @param string $newAddress\n     * @param int $intervalSeconds\n     */\n    public function __construct($hostName, $newAddress, $intervalSeconds = 5)\n    {\n        $this->hostName = $hostName;\n        $this->newAddress = $newAddress;\n        $this->intervalSeconds = $intervalSeconds;\n        $this->providerStringLength = $this->_calculateProviderStringLength();\n    }\n\n    /**\n     * @return void\n     */\n    public function monitor()\n    {\n        $this->_print(\"Start monitor: {$this->hostName}\");\n        $this->_print(\"To quit: Ctrl + C\");\n\n        while ( true )\n        {\n            $this->lookup();\n            $this->_print(\"Sleep {$this->intervalSeconds} seconds...\");\n            sleep($this->intervalSeconds);\n        }\n    }\n\n    /**\n     * @return void\n     */\n    public function lookup()\n    {\n        foreach ( self::$providers as $providerAddress => $providerName )\n        {\n            $currentAddress = $this->_getAddress($this->hostName, $providerAddress);\n            $this->_printLookupResult($currentAddress, $providerAddress);\n        }\n    }\n\n    protected function _calculateProviderStringLength()\n    {\n        $maxLength = 0;\n\n        foreach ( self::$providers as $address => $name )\n        {\n            $length = strlen($address.$name);\n\n            if ( $maxLength < $length )\n            {\n                $maxLength = $length;\n            }\n        }\n\n        return $maxLength;\n    }\n\n    protected function _isNewAddress($currentAddress)\n    {\n        return ( strpos($currentAddress, $this->newAddress) !== false );\n    }\n\n    protected function _getAddress($hostName, $nameServerName)\n    {\n        $command = sprintf('nslookup %s %s', $hostName, $nameServerName);\n        $output  = array();\n        exec($command, $output);\n        $output = array_filter($output);\n        return array_pop($output);\n    }\n\n    protected function _getStatusString($currentAddress)\n    {\n        if ( $this->_isNewAddress($currentAddress) )\n        {\n            return  \"\\033[32mNEW\\033[0m\";\n        }\n\n        return \"\\033[31mOLD\\033[0m\";\n    }\n\n    protected function _printLookupResult($currentAddress, $providerAddress)\n    {\n        $now = date('Y-m-d H:i:s');\n        $status = $this->_getStatusString($currentAddress);\n        $providerName = self::$providers[$providerAddress];\n        $providerString = str_pad(\"$providerName($providerAddress)\", $this->providerStringLength + 2, ' ', STR_PAD_RIGHT);\n        $message = \"[$now] $providerString $status $currentAddress\";\n        $this->_print($message);\n    }\n\n    protected function _print($message)\n    {\n        file_put_contents('php://stdout', $message.PHP_EOL);\n    }\n}\n\n\n\u30b5\u30fc\u30d0\u79fb\u8ee2\u3068\u304b\u3057\u305f\u3068\u304d\u306b\u3001\u3069\u306e\u3078\u3093\u307e\u3067DNS\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u3066\u308b\u304b\u77e5\u308a\u305f\u3044\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n2012-04-04 \u8ffd\u8a18:\n\n\u30b3\u30e1\u30f3\u30c8\u306b\u3066geekpage\u3055\u3093\u304c\u3053\u306e\u30c4\u30fc\u30eb\u306e\u554f\u984c\u3092\u6307\u6458\u3057\u3066\u3044\u307e\u3059\u3002\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u306e\u4e0a\u3001\u5404\u81ea\u306e\u4fee\u6b63\u3059\u308b\u306a\u308a\u3057\u3066\u72b6\u6cc1\u306b\u5bfe\u5fdc\u3057\u3066\u304f\u3060\u3055\u3044m(_ _)m \u3054\u6307\u6458\u304f\u3060\u3055\u3063\u305fgeekpage\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\n![](http://dl.dropbox.com/u/949822/qiita.com/120330-dns-penetration-monitor.png)\n\n```php:dns-penetration-monitor.php\n#!/usr/bin/env php\n<?php\n\n//$monitor = new DNSPenetrationMonitor(\u30c9\u30e1\u30a4\u30f3, \u65b0\u3057\u3044IP);\n$monitor = new DNSPenetrationMonitor('suin.asia', '59.106.173.151');\n$monitor->monitor();\n\nclass DNSPenetrationMonitor\n{\n\tprotected static $providers = array(\n\t\t'202.234.232.6'     => 'OCN',\n\t\t'221.113.139.250'   => 'OCN',\n\t\t'210.196.3.183'     => 'auone',\n\t\t'210.141.112.163'   => 'auone',\n\t\t'202.248.37.74'     => '@nifty',\n\t\t'202.248.20.133'    => '@nifty',\n\t\t'202.238.95.24'     => 'So-net',\n\t\t'202.238.95.26'     => 'So-net',\n\t\t'143.90.130.165'    => 'odn',\n\t\t'143.90.130.39'     => 'odn',\n\t\t'8.8.8.8'           => 'google',\n\t\t'dns3.sakura.ad.jp' => 'sakura',\n\t\t'exnsa.plala.or.jp' => 'plala',\n\t\t'198.153.192.1'     => 'Norton',\n\t\t'198.153.194.1'     => 'Norton',\n\t\t'208.67.222.222'    => 'OpenDNS',\n\t\t'208.67.220.220'    => 'OpenDNS',\n\t\t'4.2.2.1'           => 'GTEIDNS',\n\t\t'4.2.2.2'           => 'GTEIDNS',\n\t\t'156.154.70.1'      => 'Dnsadvantage',\n\t\t'156.154.71.1'      => 'Dnsadvantage',\n\t);\n\n\tprotected $hostName   = '';\n\tprotected $newAddress = '';\n\tprotected $intervalSeconds = 5;\n\tprotected $providerStringLength = 0;\n\n\t/**\n\t * @param string $hostName\n\t * @param string $newAddress\n\t * @param int $intervalSeconds\n\t */\n\tpublic function __construct($hostName, $newAddress, $intervalSeconds = 5)\n\t{\n\t\t$this->hostName = $hostName;\n\t\t$this->newAddress = $newAddress;\n\t\t$this->intervalSeconds = $intervalSeconds;\n\t\t$this->providerStringLength = $this->_calculateProviderStringLength();\n\t}\n\n\t/**\n\t * @return void\n\t */\n\tpublic function monitor()\n\t{\n\t\t$this->_print(\"Start monitor: {$this->hostName}\");\n\t\t$this->_print(\"To quit: Ctrl + C\");\n\n\t\twhile ( true )\n\t\t{\n\t\t\t$this->lookup();\n\t\t\t$this->_print(\"Sleep {$this->intervalSeconds} seconds...\");\n\t\t\tsleep($this->intervalSeconds);\n\t\t}\n\t}\n\n\t/**\n\t * @return void\n\t */\n\tpublic function lookup()\n\t{\n\t\tforeach ( self::$providers as $providerAddress => $providerName )\n\t\t{\n\t\t\t$currentAddress = $this->_getAddress($this->hostName, $providerAddress);\n\t\t\t$this->_printLookupResult($currentAddress, $providerAddress);\n\t\t}\n\t}\n\n\tprotected function _calculateProviderStringLength()\n\t{\n\t\t$maxLength = 0;\n\n\t\tforeach ( self::$providers as $address => $name )\n\t\t{\n\t\t\t$length = strlen($address.$name);\n\n\t\t\tif ( $maxLength < $length )\n\t\t\t{\n\t\t\t\t$maxLength = $length;\n\t\t\t}\n\t\t}\n\n\t\treturn $maxLength;\n\t}\n\t\n\tprotected function _isNewAddress($currentAddress)\n\t{\n\t\treturn ( strpos($currentAddress, $this->newAddress) !== false );\n\t}\n\t\n\tprotected function _getAddress($hostName, $nameServerName)\n\t{\n\t\t$command = sprintf('nslookup %s %s', $hostName, $nameServerName);\n\t\t$output  = array();\n\t\texec($command, $output);\n\t\t$output = array_filter($output);\n\t\treturn array_pop($output);\n\t}\n\t\n\tprotected function _getStatusString($currentAddress)\n\t{\n\t\tif ( $this->_isNewAddress($currentAddress) )\n\t\t{\n\t\t\treturn  \"\\033[32mNEW\\033[0m\";\n\t\t}\n\t\t\n\t\treturn \"\\033[31mOLD\\033[0m\";\n\t}\n\t\n\tprotected function _printLookupResult($currentAddress, $providerAddress)\n\t{\n\t\t$now = date('Y-m-d H:i:s');\n\t\t$status = $this->_getStatusString($currentAddress);\n\t\t$providerName = self::$providers[$providerAddress];\n\t\t$providerString = str_pad(\"$providerName($providerAddress)\", $this->providerStringLength + 2, ' ', STR_PAD_RIGHT);\n\t\t$message = \"[$now] $providerString $status $currentAddress\";\n\t\t$this->_print($message);\n\t}\n\t\n\tprotected function _print($message)\n\t{\n\t\tfile_put_contents('php://stdout', $message.PHP_EOL);\n\t}\n}\n```", "tags": ["PHP", "Network", "server"]}