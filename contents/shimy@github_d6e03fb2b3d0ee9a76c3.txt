{"tags": ["AWS", "lambda", "Kinesis", "cognito"], "context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nLambda\u3067\u30b8\u30e3\u30f3\u30b1\u30f3\u30b2\u30fc\u30e0\u3092\u4f5c\u308a\u307e\u3059\u3002\nhttp://lambda-janken.s3-website-ap-northeast-1.amazonaws.com [\u505c\u6b62\u4e2d]\n\n\n\u203b\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u3066\u3044\u308b\u90e8\u5206\u3092\u67a0\u3067\u8868\u793a\u3057\u3066\u3044\u307e\u3059\n\u3000\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\n\n\u203b\u30b0\u30fc\u30c1\u30e7\u30ad\u30d1\u30fc\u3067\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\n\u203b\u7d20\u6750\uff1a\u3054\u3063\u3053\u3042\u305d\u3073 - http://gokkoasobi.com/omen_jyanken.html\nAWS\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u30d5\u30eb\u6d3b\u7528\u3057\u307e\u3059\u3002\n\u300cJavaScript\u3060\u3051\u3067\u51fa\u6765\u308b\u3084\u3093\u30fb\u30fb\u300d\u3068\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u7f6e\u3044\u3066\u304a\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\nAmazon Cognito\nAmazon Kinesis\nAmazon Lambda\nAmazon SQS\nAmazon S3\n\u30d6\u30e9\u30a6\u30b6\u3067\u53d7\u3051\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3092Kinesis \u306b\u6d41\u3057\u8fbc\u307f\u3001\u3053\u308c\u3092\u53d7\u3051\u3066\u767a\u706b\u3057\u305fLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3067\u3001\u30b0\u30fc\u30fb\u30c1\u30e7\u30ad\u30fb\u30d1\u30fc\u3092\u8868\u3059\u4e71\u6570\u3092\u751f\u6210\u3057\u3001SQS\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066\u306b\u7d50\u679c\u3092\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3057\u307e\u3059\u3002\u30d6\u30e9\u30a6\u30b6\u306f\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3055\u308c\u305fSQS\u3092\u53d6\u5f97\u3057\u3001\u30b0\u30fc\u30fb\u30c1\u30e7\u30ad\u30fb\u30d1\u30fc\u306e\u30a4\u30e9\u30b9\u30c8\u3092\u8868\u793a\u3057\u3066\u5207\u308a\u66ff\u3048\u307e\u3059\u3002\n\u203b\u73fe\u6642\u70b9\u3067Lambda\u306f\u30d7\u30ec\u30d3\u30e5\u30fc\u306e\u305f\u3081\u3001\u3059\u3079\u3066 us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\nKinesis \u8a2d\u5b9a\nAWS\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u9069\u5f53\u306a\u540d\u524d\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nsetting\nstream_name = LambdaJanken\nARN = arn:aws:kinesis:us-east-1:xxxxxxxxxx:stream/LambdaJanken\nnumber of shard = 1\n\n\n\nSQS \u8a2d\u5b9a\nAWS\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u9069\u5f53\u306a\u540d\u524d\u3067\u30ad\u30e5\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nsetting\nqueue_name = LambdaJanken\nURL = https://sqs.us-east-1.amazonaws.com/xxxxxxxxxx/LambdaJanken\"\nARN = arn:aws:sqs:us-east-1: xxxxxxxxxx:LambdaJanken\n\n\n\nLambda \u8a2d\u5b9a\nindex.js\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nindex.js\nvar aws = require('aws-sdk');\nvar kinesis = new aws.Kinesis({region:'us-east-1'});\nvar sqs = new aws.SQS({region:'us-east-1'});\nexports.handler = function(event, context) {\n   var rand = Math.floor( Math.random() * 3 );\n   var params = {\n      MessageBody: String(rand),\n      QueueUrl: 'https://sqs.us-east-1.amazonaws.com/xxxxxxxxxx/LambdaJanken',\n      DelaySeconds: 0,\n   };\n   sqs.sendMessage(params, function(err, data) {\n     if (err) {\n        console.log(err, err.stack);\n     }else{\n       console.log(data);\n       context.done();\n     }\n   });\n}\n\n\nindex.js\u3092zip\u5316\u3057\u3066\u3001index.zip\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nAWS CLI\u304b\u3089Function\u3092\u4f5c\u6210\u3001\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nupload-function\naws lambda upload-function \\\n--region us-east-1 \\\n--function-name LambdaJanken \\\n--function-zip index.zip \\\n--runtime nodejs \\\n--role arn:aws:iam::xxxxxxxxxx:role/lambda_exec_role \\\n--handler index.handler \\\n--mode event \\\n--timeout 30\n\n\nAWS CLI\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u307e\u3059\u3002\n\nadd-event-source\naws lambda add-event-source \\\n--region us-east-1 \\\n--function-name LambdaJanken \\\n--role arn:aws:iam::xxxxxxxxxx:stream:role/lambda_invoke_role \\\n--event-source arn:aws:kinesis:us-east-1:xxxxxxxxxx:stream/LambdaJanken \\\n--batch-size 1 \\\n--parameters InitialPositionInStream=LATEST\n\n\n\nCognito \u8a2d\u5b9a\nAWS\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u9069\u5f53\u306a\u540d\u524d\u3067\u30d7\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nsetting\nidentity_pool_name = LambdaJanken\nidentity_pool_id = us-east-1:cf2xxxx-1xxx-4xxx-9xxx-1856xxxxxxxx\nUnauthenticated Identities is checked\n\n\n\nIAM \u8a2d\u5b9a\n\nCognito_LambdaJankenUnauth_DefaultRole\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Action\": [\n            \"mobileanalytics:PutEvents\",\n            \"cognito-sync:*\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n            \"*\"\n        ]\n    }]\n}\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"kinesis:*\",\n      \"Resource\": \"arn:aws:kinesis:us-east-1:xxxxxxxxxx:stream/LambdaJanken\"\n    }\n  ]\n}\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"sqs:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:sqs:us-east-1:xxxxxxxxxx:LambdaJanken\"\n    }\n  ]\n}\n\n\n\nEntities-cognito-identity.amazonaws.com\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Federated\": \"cognito-identity.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"cognito-identity.amazonaws.com:aud\": \"us-east-1:cxxxxx-1xxx-4xxx-9xxx-1xxxxxxxx\"\n        },\n        \"ForAnyValue:StringLike\": {\n          \"cognito-identity.amazonaws.com:amr\": \"unauthenticated\"\n        }\n      }\n    }\n  ]\n}\n\n\n\nHTML \u4f5c\u6210\n\nindex.html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Lambda \u30b8\u30e3\u30f3\u30b1\u30f3</title>\n<script src=\"https://sdk.amazonaws.com/js/aws-sdk-2.0.28.min.js\"></script>\n<style type=\"text/css\"><!--\n    .waku{  position: absolute; top: 180px; left: 95px; z-index: 1; }\n    .gu{    position: absolute; top: 20px; left: 180px; z-index: 1; display: none;  }\n    .choki{ position: absolute; top: 20px; left: 180px; z-index: 1; display: none;  }\n    .pa{    position: absolute; top: 20px; left: 180px; z-index: 1; display: none;  }\n    textarea {  margin-left: 50px; width: 850px; height: 300px; line-height: 1.5em; }\n--></style>\n</head>\n<body>\n<img src=\"LambdaJanken.png\" />\n<img src=\"LambdaJanken_waku.png\" class=\"waku\" id=\"waku\" />\n<img src=\"gu.png\" class=\"gu\" id=\"gu\" />\n<img src=\"choki.png\" class=\"choki\" id=\"choki\" />\n<img src=\"pa.png\" class=\"pa\" id=\"pa\" />\n<textarea cols=\"40\" rows=\"7\" id=\"tex\"></textarea>\n<p style=\"padding-left:50px\">\u7d20\u6750\u63d0\u4f9b\uff1a\u3054\u3063\u3053\u3042\u305d\u3073 - http://gokkoasobi.com/omen_jyanken.html</p>\n\n<script>\nvar janken;\nvar tex = document.getElementById('tex');\nvar waku = document.getElementById('waku');\n\n//Cognito\nvar params = {\n    AccountId: \"xxxxxxx\",\n    RoleArn: \"arn:aws:iam::xxxxxxx:role/Cognito_LambdaJankenUnauth_DefaultRole\",\n    IdentityPoolId: \"us-east-1:cxxxxxx-1xxx-4xxx-9xxx-1xxxxxxx\"\n};\nAWS.config.region = 'us-east-1';\nAWS.config.credentials = new AWS.CognitoIdentityCredentials(params);\nAWS.config.credentials.get(function(err) {\n    if (!err) {\n        //Log\n        tex.value = tex.value + \"===== Cognito authentication =====\" + \"\\n\"\n        tex.value = tex.value + \"Cognito Identity Id: \" + AWS.config.credentials.identityId + \"\\n\";     \n        //CSS\n        waku.style.left = \"280px\";\n    }\n});\n\n//Kinesis\nvar kinesis = new AWS.Kinesis();\nvar params1 = {\n          Data: 'Hello', /* required */\n          PartitionKey: 'partitionkey', /* required */\n          StreamName: 'LambdaJanken', /* required */\n};\nkinesis.putRecord(params1, function(err, data) {\n    if (err){\n        console.log(err, err.stack); // an error occurred\n    }else{\n        //Log\n        tex.value = tex.value + \"===== Kinesis put object =====\" + \"\\n\";\n        tex.value = tex.value + \"SequenceNumber: \" + data.SequenceNumber + \"\\n\";\n        tex.value = tex.value + \"ShardId: \" + data.ShardId + \"\\n\";  \n        //Lambda\n        tex.value = tex.value + \"===== Lambda invoke function =====\" + \"\\n\";\n\n        //CSS\n        waku.style.left = \"465px\";\n\n        //Log\n        tex.value = tex.value + \"===== SQS send message =====\" + \"\\n\";      \n\n        //SQS\n        var sqs = new AWS.SQS();\n        var params2 = {\n            QueueUrl: 'https://sqs.us-east-1.amazonaws.com/xxxxxxxx/LambdaJanken', /* required */\n            MaxNumberOfMessages: 1,\n            WaitTimeSeconds: 5\n        };\n        sqs.receiveMessage(params2, function(err, data) {\n            if (err) {\n                console.log(err, err.stack); // an error occurred\n            }else{              \n                janken = data.Messages[0].Body;\n\n                //CSS\n                waku.style.left = \"650px\";\n\n                //Log\n                tex.value = tex.value + \"===== SQS retrieve message =====\" + \"\\n\";\n                tex.value = tex.value + \"ReceiptHandle: \" + data.Messages[0].ReceiptHandle + \"\\n\";\n                tex.value = tex.value + \"Body: \" + data.Messages[0].Body + \"\\n\";\n\n                var params3 = {\n                              QueueUrl: 'https://sqs.us-east-1.amazonaws.com/xxxxxxxxxxx/LambdaJanken', /* required */\n                              ReceiptHandle: data.Messages[0].ReceiptHandle /* required */\n                };\n                sqs.deleteMessage(params3, function(err, data) {\n                    if (err){\n                        console.log(err, err.stack); // an error occurred\n                    }else{\n                        //Log\n                        tex.value = tex.value + \"===== SQS delete message =====\" + \"\\n\";\n                        tex.value = tex.value + \"RequestId: \" + data.ResponseMetadata.RequestId + \"\\n\";\n\n                        //CSS\n                        waku.style.display = \"none\";\n\n                        //Display Janken\n                        switch (Number(janken)){\n                            case 0:\n                                var ele = document.getElementById('gu');\n                                ele.style.display = \"block\";\n                                break;\n                            case 1:\n                                var ele = document.getElementById('choki');\n                                ele.style.display = \"block\";\n                                break;\n                            case 2:\n                                var ele = document.getElementById('pa');\n                                ele.style.display = \"block\";\n                                break;\n                        }\n                    }\n                });\n            }\n        });\n    }\n});\n</script>\n</body>\n</html>\n\n\n\n\u30bd\u30fc\u30b9\u30c4\u30ea\u30fc\n|-index.html\uff08\u672c\u4f53\uff09\n|-LambdaJanken.png (\u80cc\u666f)\n|-LambdaJanken_waku.png (\u30aa\u30ec\u30f3\u30b8\u67a0)\n|-gu.png\uff08\u30b0\u30fc\uff09\n|-choki.png\uff08\u30c1\u30e7\u30ad\uff09\n|-pa.png\uff08\u30d1\u30fc\uff09\n\n\n\u3053\u308c\u3089\u30d5\u30a1\u30a4\u30eb\u3092S3\u3078\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u516c\u958b\u3057\u307e\u3059\u3002\n\u514d\u8cac\n\u3053\u3061\u3089\u306f\u500b\u4eba\u306e\u610f\u898b\u3067\u4f1a\u793e\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n# \u6982\u8981\n\nLambda\u3067\u30b8\u30e3\u30f3\u30b1\u30f3\u30b2\u30fc\u30e0\u3092\u4f5c\u308a\u307e\u3059\u3002\nhttp://lambda-janken.s3-website-ap-northeast-1.amazonaws.com [\u505c\u6b62\u4e2d]\n\u001c\n\n![Screen Shot 2014-11-26 at 5.52.41 PM.png](https://qiita-image-store.s3.amazonaws.com/0/19485/58d1bf45-d754-0c76-ce99-0292175b6d52.png)\n\u203b\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u3066\u3044\u308b\u90e8\u5206\u3092\u67a0\u3067\u8868\u793a\u3057\u3066\u3044\u307e\u3059\n\u3000\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\n![Screen Shot 2014-11-26 at 5.52.49 PM.png](https://qiita-image-store.s3.amazonaws.com/0/19485/8b6d4e35-014c-3d04-6bd3-0d4fdb1ec4d1.png)\n\u203b\u30b0\u30fc\u30c1\u30e7\u30ad\u30d1\u30fc\u3067\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\n\u203b\u7d20\u6750\uff1a\u3054\u3063\u3053\u3042\u305d\u3073 - http://gokkoasobi.com/omen_jyanken.html\n\nAWS\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u30d5\u30eb\u6d3b\u7528\u3057\u307e\u3059\u3002\n\u300cJavaScript\u3060\u3051\u3067\u51fa\u6765\u308b\u3084\u3093\u30fb\u30fb\u300d\u3068\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u7f6e\u3044\u3066\u304a\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\b\u5b9f\u88c5\u3057\u307e\u3059\u3002\nAmazon Cognito\nAmazon Kinesis\nAmazon Lambda\nAmazon SQS\nAmazon S3\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u53d7\u3051\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u001dKinesis \u306b\u6d41\u3057\u8fbc\u307f\u3001\u3053\u308c\u3092\u53d7\u3051\u3066\u767a\u706b\u3057\u305fLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3067\u3001\u30b0\u30fc\u30fb\u30c1\u30e7\u30ad\u30fb\u30d1\u30fc\u3092\u8868\u3059\u4e71\u6570\u3092\u751f\u6210\u3057\u3001SQS\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066\u306b\u7d50\u679c\u3092\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3057\u307e\u3059\u3002\u30d6\u30e9\u30a6\u30b6\u306f\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3055\u308c\u305fSQS\u3092\u53d6\u5f97\u3057\u3001\u30b0\u30fc\u30fb\u30c1\u30e7\u30ad\u30fb\u30d1\u30fc\u306e\u30a4\u30e9\u30b9\u30c8\u3092\u8868\u793a\u3057\u3066\u5207\u308a\u66ff\u3048\u307e\u3059\u3002\n\n\u203b\u73fe\u6642\u70b9\u3067Lambda\u306f\u30d7\u30ec\u30d3\u30e5\u30fc\u306e\u305f\u3081\u3001\u3059\u3079\u3066 us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n# Kinesis \u8a2d\u5b9a\nAWS\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u9069\u5f53\u306a\u540d\u524d\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```lang:setting\nstream_name = LambdaJanken\nARN = arn:aws:kinesis:us-east-1:xxxxxxxxxx:stream/LambdaJanken\nnumber of shard = 1\n```\n\n# SQS \u8a2d\u5b9a\nAWS\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u9069\u5f53\u306a\u540d\u524d\u3067\u30ad\u30e5\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```lang:setting\nqueue_name = LambdaJanken\nURL = https://sqs.us-east-1.amazonaws.com/xxxxxxxxxx/LambdaJanken\"\nARN = arn:aws:sqs:us-east-1: xxxxxxxxxx:LambdaJanken\n```\n\n# Lambda \u8a2d\u5b9a\nindex.js\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```lang:index.js\nvar aws = require('aws-sdk');\nvar kinesis = new aws.Kinesis({region:'us-east-1'});\nvar sqs = new aws.SQS({region:'us-east-1'});\nexports.handler = function(event, context) {\n   var rand = Math.floor( Math.random() * 3 );\n   var params = {\n      MessageBody: String(rand),\n      QueueUrl: 'https://sqs.us-east-1.amazonaws.com/xxxxxxxxxx/LambdaJanken',\n      DelaySeconds: 0,\n   };\n   sqs.sendMessage(params, function(err, data) {\n     if (err) {\n        console.log(err, err.stack);\n     }else{\n       console.log(data);\n       context.done();\n     }\n   });\n}\n```\n\nindex.js\u3092zip\u5316\u3057\u3066\u3001index.zip\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nAWS CLI\u304b\u3089Function\u3092\u4f5c\u6210\u3001\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n```lang:upload-function\naws lambda upload-function \\\n--region us-east-1 \\\n--function-name LambdaJanken \\\n--function-zip index.zip \\\n--runtime nodejs \\\n--role arn:aws:iam::xxxxxxxxxx:role/lambda_exec_role \\\n--handler index.handler \\\n--mode event \\\n--timeout 30\n```\n\nAWS CLI\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u307e\u3059\u3002\n\n```lang:add-event-source\naws lambda add-event-source \\\n--region us-east-1 \\\n--function-name LambdaJanken \\\n--role arn:aws:iam::xxxxxxxxxx:stream:role/lambda_invoke_role \\\n--event-source arn:aws:kinesis:us-east-1:xxxxxxxxxx:stream/LambdaJanken \\\n--batch-size 1 \\\n--parameters InitialPositionInStream=LATEST\n```\n\n# Cognito \u8a2d\u5b9a\nAWS\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u9069\u5f53\u306a\u540d\u524d\u3067\u30d7\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```lang:setting\nidentity_pool_name = LambdaJanken\nidentity_pool_id = us-east-1:cf2xxxx-1xxx-4xxx-9xxx-1856xxxxxxxx\nUnauthenticated Identities is checked\n```\n\n# IAM \u8a2d\u5b9a\n\n```lang:Cognito_LambdaJankenUnauth_DefaultRole\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Action\": [\n            \"mobileanalytics:PutEvents\",\n            \"cognito-sync:*\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n            \"*\"\n        ]\n    }]\n}\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"kinesis:*\",\n      \"Resource\": \"arn:aws:kinesis:us-east-1:xxxxxxxxxx:stream/LambdaJanken\"\n    }\n  ]\n}\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"sqs:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:sqs:us-east-1:xxxxxxxxxx:LambdaJanken\"\n    }\n  ]\n}\n```\n\n```lang:Entities-cognito-identity.amazonaws.com\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Federated\": \"cognito-identity.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"cognito-identity.amazonaws.com:aud\": \"us-east-1:cxxxxx-1xxx-4xxx-9xxx-1xxxxxxxx\"\n        },\n        \"ForAnyValue:StringLike\": {\n          \"cognito-identity.amazonaws.com:amr\": \"unauthenticated\"\n        }\n      }\n    }\n  ]\n}\n```\n\n# HTML \u4f5c\u6210\n```lang:index.html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Lambda \u30b8\u30e3\u30f3\u30b1\u30f3</title>\n<script src=\"https://sdk.amazonaws.com/js/aws-sdk-2.0.28.min.js\"></script>\n<style type=\"text/css\"><!--\n\t.waku{\tposition: absolute; top: 180px; left: 95px; z-index: 1;\t}\n\t.gu{\tposition: absolute; top: 20px; left: 180px; z-index: 1; display: none;\t}\n\t.choki{\tposition: absolute; top: 20px; left: 180px; z-index: 1; display: none;\t}\n\t.pa{\tposition: absolute; top: 20px; left: 180px; z-index: 1; display: none;\t}\n\ttextarea {\tmargin-left: 50px; width: 850px; height: 300px; line-height: 1.5em;\t}\n--></style>\n</head>\n<body>\n<img src=\"LambdaJanken.png\" />\n<img src=\"LambdaJanken_waku.png\" class=\"waku\" id=\"waku\" />\n<img src=\"gu.png\" class=\"gu\" id=\"gu\" />\n<img src=\"choki.png\" class=\"choki\" id=\"choki\" />\n<img src=\"pa.png\" class=\"pa\" id=\"pa\" />\n<textarea cols=\"40\" rows=\"7\" id=\"tex\"></textarea>\n<p style=\"padding-left:50px\">\u7d20\u6750\u63d0\u4f9b\uff1a\u3054\u3063\u3053\u3042\u305d\u3073 - http://gokkoasobi.com/omen_jyanken.html</p>\n\n<script>\nvar janken;\nvar tex = document.getElementById('tex');\nvar waku = document.getElementById('waku');\n\n//Cognito\nvar params = {\n\tAccountId: \"xxxxxxx\",\n\tRoleArn: \"arn:aws:iam::xxxxxxx:role/Cognito_LambdaJankenUnauth_DefaultRole\",\n\tIdentityPoolId: \"us-east-1:cxxxxxx-1xxx-4xxx-9xxx-1xxxxxxx\"\n};\nAWS.config.region = 'us-east-1';\nAWS.config.credentials = new AWS.CognitoIdentityCredentials(params);\nAWS.config.credentials.get(function(err) {\n\tif (!err) {\n\t\t//Log\n\t\ttex.value = tex.value + \"===== Cognito authentication =====\" + \"\\n\"\n\t\ttex.value = tex.value + \"Cognito Identity Id: \" + AWS.config.credentials.identityId + \"\\n\";\t\t\n\t\t//CSS\n\t\twaku.style.left = \"280px\";\n\t}\n});\n\n//Kinesis\nvar kinesis = new AWS.Kinesis();\nvar params1 = {\n\t\t  Data: 'Hello', /* required */\n\t\t  PartitionKey: 'partitionkey', /* required */\n\t\t  StreamName: 'LambdaJanken', /* required */\n};\nkinesis.putRecord(params1, function(err, data) {\n\tif (err){\n\t\tconsole.log(err, err.stack); // an error occurred\n\t}else{\n\t\t//Log\n\t\ttex.value = tex.value + \"===== Kinesis put object =====\" + \"\\n\";\n\t\ttex.value = tex.value + \"SequenceNumber: \" + data.SequenceNumber + \"\\n\";\n\t\ttex.value = tex.value + \"ShardId: \" + data.ShardId + \"\\n\";\t\n\t\t//Lambda\n\t\ttex.value = tex.value + \"===== Lambda invoke function =====\" + \"\\n\";\n\n\t\t//CSS\n\t\twaku.style.left = \"465px\";\n\n\t\t//Log\n\t\ttex.value = tex.value + \"===== SQS send message =====\" + \"\\n\";\t\t\n\t\t\n\t\t//SQS\n\t\tvar sqs = new AWS.SQS();\n\t\tvar params2 = {\n\t\t\tQueueUrl: 'https://sqs.us-east-1.amazonaws.com/xxxxxxxx/LambdaJanken', /* required */\n\t\t\tMaxNumberOfMessages: 1,\n\t\t\tWaitTimeSeconds: 5\n\t\t};\n\t\tsqs.receiveMessage(params2, function(err, data) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t\t}else{\t\t\t\t\n\t\t\t\tjanken = data.Messages[0].Body;\n\n\t\t\t\t//CSS\n\t\t\t\twaku.style.left = \"650px\";\n\t\t\t\t\n\t\t\t\t//Log\n\t\t\t\ttex.value = tex.value + \"===== SQS retrieve message =====\" + \"\\n\";\n\t\t\t\ttex.value = tex.value + \"ReceiptHandle: \" + data.Messages[0].ReceiptHandle + \"\\n\";\n\t\t\t\ttex.value = tex.value + \"Body: \" + data.Messages[0].Body + \"\\n\";\n\t\t\t\t\t\t\t\t\n\t\t\t\tvar params3 = {\n\t\t\t  \t\t\t\t  QueueUrl: 'https://sqs.us-east-1.amazonaws.com/xxxxxxxxxxx/LambdaJanken', /* required */\n\t\t\t  \t\t\t\t  ReceiptHandle: data.Messages[0].ReceiptHandle /* required */\n\t\t\t  \t};\n\t\t\t\tsqs.deleteMessage(params3, function(err, data) {\n\t\t\t\t\tif (err){\n\t\t\t\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t\t\t\t}else{\n\t\t\t\t\t\t//Log\n\t\t\t\t\t\ttex.value = tex.value + \"===== SQS delete message =====\" + \"\\n\";\n\t\t\t\t\t\ttex.value = tex.value + \"RequestId: \" + data.ResponseMetadata.RequestId + \"\\n\";\n\n\t\t\t\t\t\t//CSS\n\t\t\t\t\t\twaku.style.display = \"none\";\n\n\t\t\t\t\t\t//Display Janken\n\t\t\t\t\t\tswitch (Number(janken)){\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tvar ele = document.getElementById('gu');\n\t\t\t\t\t\t\t\tele.style.display = \"block\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tvar ele = document.getElementById('choki');\n\t\t\t\t\t\t\t\tele.style.display = \"block\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tvar ele = document.getElementById('pa');\n\t\t\t\t\t\t\t\tele.style.display = \"block\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n});\n</script>\n</body>\n</html>\n```\n\n```lang:\u30bd\u30fc\u30b9\u30c4\u30ea\u30fc\n|-index.html\uff08\u672c\u4f53\uff09\n|-LambdaJanken.png (\u80cc\u666f)\n|-LambdaJanken_waku.png (\u30aa\u30ec\u30f3\u30b8\u67a0)\n|-gu.png\uff08\u30b0\u30fc\uff09\n|-choki.png\uff08\u30c1\u30e7\u30ad\uff09\n|-pa.png\uff08\u30d1\u30fc\uff09\n```\n\u3053\u308c\u3089\u30d5\u30a1\u30a4\u30eb\u3092S3\u3078\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u516c\u958b\u3057\u307e\u3059\u3002\n\n\n\u514d\u8cac\n\u3053\u3061\u3089\u306f\u500b\u4eba\u306e\u610f\u898b\u3067\u4f1a\u793e\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n"}