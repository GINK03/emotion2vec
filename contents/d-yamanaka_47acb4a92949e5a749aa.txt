{"tags": ["APIGateway", "lambda", "Slack", "Node.js", "SNS"], "context": "\n\n\u76ee\u7684\n\u8acb\u6c42\u60c5\u5831\u3092Slack\u304b\u3089\u7c21\u5358\u306b\u78ba\u8a8d\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u5b9f\u73fe\u3059\u308b\u6a5f\u80fd\n\u4efb\u610f\u306eSlack\u30c1\u30e3\u30f3\u30cd\u30eb\u3067\u300c/billing\u300d\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e00\u62ec\u8acb\u6c42\u3067\u7d10\u4ed8\u3044\u3066\u3044\u308b\u30a2\u30ab\u30a6\u30f3\u30c8\u3054\u3068\u306e\u6599\u91d1\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n\u69cb\u6210\u56f3\n\uff11\uff0eSlack\u306e\u4efb\u610f\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u304b\u3089\u30b9\u30e9\u30c3\u30b7\u30e5\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\n\uff12\uff0eAPI Gateway\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u547c\u3073\u51fa\u3057\n\uff13\uff0eLambda\u3067\u30b9\u30e9\u30c3\u30b7\u30e5\u30b3\u30de\u30f3\u30c9\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30c1\u30a7\u30c3\u30af\n\u3000\u203bAWS KMS\u3092\u5229\u7528\n\uff14\uff0eS3\u306e\u8acb\u6c42\u60c5\u5831CSV\u304b\u3089\u5fc5\u8981\u306a\u60c5\u5831\u3092\u62bd\u51fa\u3057SNS\u547c\u3073\u51fa\u3057\n\uff15\uff0eSNS\u304b\u3089Slack\u8fd4\u5374\u7528\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528Lambda\u3092\u547c\u3073\u51fa\u3057\n\uff16\uff0eSlack\u306b\u60c5\u5831\u3092\u901a\u77e5\n\nSNS\u3092\u4f7f\u3046\u7406\u7531\u306f\u3001Slash Commands\u304c3\u79d2\u4ee5\u5185\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u304b\u3089\u3067\u3059\u3002\n\u9023\u643a\u3055\u305b\u3066\u307f\u305f\u304b\u3063\u305f\u304b\u3089\u3067\u3059\u3002\n\n\u4e00\u62ec\u8acb\u6c42\uff08\u30b3\u30f3\u30bd\u30ea\u30c7\u30fc\u30c6\u30a3\u30c3\u30c9\u30d3\u30ea\u30f3\u30b0\uff09\u3068\u306f\uff1f\n\u8907\u6570\u306eAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u6240\u6709\u3057\u3066\u3044\u308b\u5834\u5408\u652f\u6255\u3044\u3092\uff11\u3064\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4e00\u62ec\u8acb\u6c42\u3092\u4f7f\u7528\u3057\u305f\u8907\u6570\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u6599\u91d1\u306e\u652f\u6255\u3044\n\n\u4e00\u62ec\u8acb\u6c42\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u30011 \u3064\u3092\u652f\u6255\u3044\u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u7d44\u7e54\u5185\u306e\u8907\u6570\u306e\u30a2\u30de\u30be\u30f3 \u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9 (AWS) \u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u8907\u6570\u306e Amazon International Services Pvt. Ltd (AISPL) \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u652f\u6255\u3044\u3092\u7d71\u5408\u3067\u304d\u307e\u3059\u3002\n\n\n\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u306e\u8a2d\u5b9a\n\u4e8b\u524d\u306b\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u3092\u7279\u5b9a\u306e\u30d0\u30b1\u30c3\u30c8\u306b\u51fa\u529b\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u3067\u4f7f\u7528\u91cf\u3092\u78ba\u8a8d\u3059\u308b\n\u4eca\u56de\u306e\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n(AWS account number)-aws-billing-csv-yyyy-mm.csv\n\nSNS\u306e\u8a2d\u5b9a\n\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u65b0\u3057\u3044\u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56deTopicName\u306f\u300cbilling-lambda\u300d\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nIAM\u306e\u8a2d\u5b9a\n\n\u6697\u53f7\u5316\u30ad\u30fc\u306e\u4f5c\u6210\nSlack\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u969b\u306eToken\u3092\u6697\u53f7\u5316\u3059\u308b\u305f\u3081\u306eKMS\u30ad\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30ea\u30fc\u30b8\u30e7\u30f3\u306f\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4eca\u56de\u3001\u30ad\u30fc\u7ba1\u7406\u8005\u306b\u306f\u81ea\u8eab\u306eIAM\u30e6\u30fc\u30b6\u30fc\u3001\u30ad\u30fc\u30e6\u30fc\u30b6\u30fc\u306b\u306f\u307e\u3060\u4f55\u3082\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u5927\u4e08\u592b\u3067\u3059\u3002\n\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u306e\u30ed\u30fc\u30eb\u4f5c\u6210\nAPI Gateway\u7d4c\u7531\u3067\u5b9f\u884c\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u306e\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u6a29\u9650\u3092\u6301\u3063\u305f\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u4e00\u62ec\u8acb\u6c42\u7528S3\u30d0\u30b1\u30c3\u30c8\u304b\u3089\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u3092\u53d6\u5f97\u3059\u308b\nCloudWatch Logs\u306b\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b \n\u30ec\u30b9\u30dd\u30f3\u30b9\u7528Lambda\u306e\u547c\u3073\u51fa\u3057SNS\u306bPublish\u3092\u884c\u3046\n\u6697\u53f7\u5316\u3055\u308c\u305fToken\u3092\u5fa9\u53f7\u3059\u308b\n\n\u4eca\u56de\u306f\u3001yamanaka_acceptBillingRequest\u3068\u3044\u3046\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u203bS3\u306eResource\u306e\u6700\u5f8c\u306b\u30a2\u30b9\u30bf\u30ea\u30b9\u30af(*)\u304c\u5fc5\u8981\uff01\n\nacceptBillingRequestPolicy\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1473241089000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::<\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30d0\u30b1\u30c3\u30c8\u306e\u30d0\u30b1\u30c3\u30c8\u540d>/*\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1473241213000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"kms:Decrypt\"\n            ],\n            \"Resource\": [\n                \"<\u4f5c\u6210\u3057\u305f\u6697\u53f7\u5316\u30ad\u30fc\u306eARN>\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1473241313000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1473241406000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sns:Publish\"\n            ],\n            \"Resource\": [\n                \"<\u30ec\u30b9\u30dd\u30f3\u30b9\u7528Lambda\u547c\u3073\u51fa\u3057SNS\u306eARN>\"\n            ]\n        }\n    ]\n}\n\n\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528Lambda\u306e\u30ed\u30fc\u30eb\u4f5c\u6210\nSNS\u7d4c\u7531\u3067\u5b9f\u884c\u3055\u308c\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528Lambda\u306e\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u6a29\u9650\u3092\u6301\u3063\u305f\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nCloudWatch Logs\u306b\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b \n\n\u4eca\u56de\u306f\u3001yamanaka_acceptBillingResponse\u3068\u3044\u3046\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\nacceptBillingResponsePolicy\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1473241745000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        }\n    ]\n}\n\n\n\nKMS\u306e\u30ad\u30fc\u30e6\u30fc\u30b6\u30fc\u8a2d\u5b9a\nKMS\u306e\u8a2d\u5b9a\u753b\u9762\u306b\u623b\u308a\u30ad\u30fc\u30e6\u30fc\u30b6\u30fc\u3068\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528\u306e\u30ed\u30fc\u30eb\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3067IAM\u3067\u306e\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3yamanaka_lambda_acceptBillingRequest\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u5404\u7a2e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u3000Runtime \uff1a Node.js 4.3\n\u3000Role \uff1a \u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528\u306e\u30ed\u30fc\u30eb(yamanaka_acceptBillingRequest)\n\u307e\u305f\u3001\u4eca\u56de\u306f\n\u3000Memory \uff1a 192MB\n\u3000Timeout \uff1a 3 sec\n\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n Slack\u306e\u30d1\u30e9\u30e1\u30bf\u304b\u3089Token\u3092\u53d6\u5f97\u3057\u3001\u30c8\u30fc\u30af\u30f3\u304c\u6b63\u3057\u3044\u304b\u30c1\u30a7\u30c3\u30af\n \u8a72\u5f53\u6708\u306e\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u3092S3\u30d0\u30b1\u30c3\u30c8\u304b\u3089\u53d6\u5f97\n \u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u304b\u3089\u5404\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8acb\u6c42\u91d1\u984d\u3092\u53d6\u5f97\u53ca\u3073\u914d\u5217\u306b\u683c\u7d0d\n \u683c\u7d0d\u3057\u305f\u60c5\u5831\u3092\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066SNS\u3092\u767a\u884c\u3059\u308b\n\n\nyamanaka_lambda_acceptBillingRequest.js\n/*jshint esversion: 6 */\n/*jshint strict: true */\n/* jshint node: true */\n'use strict';\n\nconsole.log('Loading function');\nconst AWS = require(\"aws-sdk\");\nconst querystring = require('querystring');\nconst region = 'ap-northeast-1';\nconst now = new Date();\n\nexports.handler = function(event, context, callback) {\n\n    const generator  = (function *() {\n\n        try {\n            // FunctionArn\u304b\u3089accountId\u3092\u53d6\u5f97\n            const accountId = context.invokedFunctionArn.match(/\\d{3,}/)[0];\n            const commandParams = querystring.parse(event[\"body-json\"]);\n\n            let targetMonth;\n            if(!isNaN(parseInt(commandParams.text, 10))) {\n                // \u6708\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u5f15\u6570\u3092\u8a2d\u5b9a\n                targetMonth = commandParams.text;\n            } else {\n                // \u6708\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u5b9f\u884c\u6708\u3092\u8a2d\u5b9a\n                targetMonth = now.getUTCMonth() + 1;\n            }\n\n            // Slack\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30c1\u30a7\u30c3\u30af\n            yield tokenCheck(commandParams.token, generator);\n\n            // S3\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\n            const billingCsvFile = yield getBillingFile(accountId, targetMonth, generator);\n\n            // \u5fc5\u8981\u306a\u60c5\u5831\u3092\u53d6\u5f97\n            const costList = pickUpCostList(billingCsvFile);\n            // \u901a\u77e5\u5143\u30c1\u30e3\u30f3\u30cd\u30eb\u540d\u3092\u683c\u7d0d\n            costList[costList.length - 1].channelName = commandParams.channel_name;\n            costList[costList.length - 1].month = targetMonth;\n\n            // SNS\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\n            yield responseCall(accountId, costList, generator);\n\n            callback(null,'Request is accepted');\n\n        } catch (e) {\n            callback(e.message);\n        }\n    })();\n\n    /* \u51e6\u7406\u958b\u59cb */\n    generator.next();\n};\n\n// \u30c8\u30fc\u30af\u30f3\u30c1\u30a7\u30c3\u30af\nfunction tokenCheck(token, generator) {\n    const kms = new AWS.KMS({'region':region});\n    const encryptedToken = '';\n    const encryptedBuf = new Buffer(encryptedToken, 'base64');\n\n    const kmsParams = {\n        CiphertextBlob: encryptedBuf\n    };\n\n    kms.decrypt(kmsParams, function(err, data) {\n      if (err) {\n          console.log(err, err.stack);\n          generator.throw(new Error('Kms Decrypt Error'));\n          return;\n      } else {\n          if (data.Plaintext.toString() !== token) {\n              generator.throw(new Error('Slash Commands Token Error'));\n          }\n          console.log('token is OK');\n          generator.next();\n      }\n    });\n}\n\nfunction getBillingFile(accountId, targetMonth, generator) {\n\n    const s3 = new AWS.S3();\n    const bucketName = '<\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30d0\u30b1\u30c3\u30c8\u306e\u30d0\u30b1\u30c3\u30c8\u540d>';\n    const key = accountId + '-aws-billing-csv-' +\n        now.getUTCFullYear() + '-' + ('0' + targetMonth).substr(-2) + '.csv';\n\n    console.log('getting S3 file %s ..', key);\n\n    const params = {\n        Bucket: bucketName,\n        Key: key\n    };\n\n    s3.getObject(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('S3 Error'));\n            return;\n        }\n        console.log('got S3 stream ..');\n        generator.next(data.Body.toString());\n    });\n}\n\n// Totalcost\u3092\u4e8c\u6b21\u5143\u914d\u5217\u306b\u3068\u3057\u3066\u8fd4\u5374\nfunction pickUpCostList(csvFile){\n    let estimateStatus = 'exact';\n    const costList = [];\n    // \u4e00\u884c\u305a\u3064\u914d\u5217\u3068\u3057\u3066tmp\u306b\u683c\u7d0d\n    const tmp = csvFile.split(\"\\n\");\n\n    // \u5404\u884c\u3054\u3068\u306b\u30ab\u30f3\u30de\u3067\u533a\u5207\u3063\u305f\u6587\u5b57\u5217\u3092\u8981\u7d20\u3068\u3057\u305f\u4e8c\u6b21\u5143\u914d\u5217\u3092\u751f\u6210\n    for(let i = 0, listCount = 0, csvLine; i < tmp.length; ++i){\n        csvLine = tmp[i].replace(/\\\"/g,\"\").split(',');\n        if (csvLine[3] === 'AccountTotal') {\n            costList[listCount] = {};\n            // \u5fc5\u8981\u306a\u7b87\u6240\u3060\u3051\u914d\u5217\u306b\u683c\u7d0d\n            costList[listCount].accountId   = csvLine[2];\n            costList[listCount].accountName = csvLine[9];\n            costList[listCount].totalCost   = csvLine[csvLine.length - 1];\n            listCount++;\n        } else if (csvLine[3] === 'EstimatedDisclaimer') {\n            // \u6700\u7d42\u884c\u306bEstimatedDesclaimer\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u3001rough\uff08\u6982\u7b97\uff09\u3092\u8a2d\u5b9a\n            estimateStatus = 'rough';\n        }\n    }\n\n    // accountName\u3067\u6607\u9806\u306b\u30bd\u30fc\u30c8\n    costList.sort(function(a,b) {\n       if(a.accountName<b.accountName) {\n           return -1;\n       }\n       if(a.accountName>b.accountName) {\n           return 1;\n       }\n       return 0;\n    });\n\n    costList[costList.length] = {};\n    // costList\u306e\u6700\u5f8c\u306e\u8981\u7d20\u306b\u78ba\u5b9a\u30fb\u6982\u7b97\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u8ffd\u52a0\n    costList[costList.length - 1].estimateStatus = estimateStatus;\n\n    return costList;\n}\n\n// SNS\u3067Lambda\u3092\u547c\u3073\u51fa\u3057\nfunction responseCall(accountId, costList, generator) {\n    const sns = new AWS.SNS({'region':region});\n    const topicName = 'billing-lambda';\n\n    const params = {\n        Message: JSON.stringify(costList),\n        TopicArn: 'arn:aws:sns:' + region + ':' + accountId + ':' + topicName\n    };\n\n    console.log('publishing SNS ..');\n    sns.publish(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('SNS Error'));\n            return;\n        } else {\n            console.log('published SNS ..');\n            console.log(data);\n            generator.next();\n        }\n    });\n}\n\n\n\n\nAPI Gateway\u306e\u8a2d\u5b9a\n\u4efb\u610f\u306e\u540d\u524d\u3067API\u3092\u65b0\u3057\u304f\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30ea\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u3000\u30ea\u30bd\u30fc\u30b9 \uff1a /slackcommand\n\u3000\u30e1\u30bd\u30c3\u30c9 \uff1a POST\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u4ee5\u4e0b\u306e\u901a\u308a\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u7d71\u5408\u30bf\u30a4\u30d7 \uff1a Lambda\u95a2\u6570\nLambda\u30ea\u30fc\u30b8\u30e7\u30f3 \uff1a ap-northeast-1\nLambda\u95a2\u6570 \uff1a \u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda(yamanaka_lambda_acceptBillingRequest)\n\n\n\u7d71\u5408\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u8a2d\u5b9a\n\u30ea\u30af\u30a8\u30b9\u30c8\u672c\u6587\u306e\u30d1\u30b9\u30b9\u30eb\u30fc \uff1a \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\nContent-Type \uff1a application/x-www-form-urlencoded\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u751f\u6210 \uff1a \u30e1\u30bd\u30c3\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30b9\u30b9\u30eb\u30fc\n\n\u203bContent-Type\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u3000\u3000Slash Commands\n\nTypically, this data will be sent to your URL as a HTTP POST with a content-type header set as application/x-www-form-urlencodedred. If you've chosen to have your slash command's URL receive invocations as a GET request, no explicit content-type header will be set.\n\n\u4fdd\u5b58\u3057\u305f\u3089\u3001\u65b0\u3057\u3044\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203b\u4eca\u56de\u306fdev\u30b9\u30c6\u30fc\u30b8\u306b\u30c7\u30d7\u30ed\u30a4\n\n\u3053\u308c\u3067API Gateway\u306e\u4f5c\u6210\u306f\u5b8c\u4e86\u3067\u3059\uff01\n\nSlash Commands\u306e\u8a2d\u5b9a\n\nSlash Commands\u3068\u306f\uff1f\nSlash Commands\u3068\u306f\u3001\u4efb\u610f\u306eSlack\u30c1\u30e3\u30f3\u30cd\u30eb\u3067/commands\u3068\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u6ce8\u610f\u3068\u3057\u3066\u3001Slash Commands\u306f\u5b9f\u884c\u5f8c\u30013\u79d2\u4ee5\u5185\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3055\u306a\u3044\u3068\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u8a2d\u5b9a\u624b\u9806\n\nSlack\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u72b6\u614b\u3067https://.slack.com/services/new\u306b\u30a2\u30af\u30bb\u30b9\n\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306b\u300cSlash Commands\u300d\u3068\u5165\u529b\u3057\u9078\u629e\u3059\u308b\n\u300cAdd Configuration\u300d\u3092\u9078\u629e\nChoose a Command\u306b\u300c/billing\u300d\u3092\u5165\u529b\u3057\u3001\u300cAdd Slash Command Integration\u300d\u3092\u9078\u629e\u3059\u308b\n\u4ee5\u4e0b\u306e\u901a\u308a\u8a2d\u5b9a\n\n\u3000\u3000Command \uff1a /billing\n\u3000\u3000URL \uff1a API Gateway\u306eURL\u3092\u8a2d\u5b9a\n\u3000\u3000Method \uff1a POST\n\u3000\u3000\u203bToken\u306f\u5f8c\u307b\u3069\u4f7f\u7528\u3059\u308b\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304f\uff01\n\n\n\u30c8\u30fc\u30af\u30f3\u306e\u6697\u53f7\u5316\n\u4f5c\u6210\u3057\u305f\u6697\u53f7\u5316\u30ad\u30fc\u3067Slash Commands\u306eToken\u3092\u6697\u53f7\u5316\u3057\u307e\u3059\u3002\n\u30ed\u30fc\u30ab\u30eb\u306ePC\u3067\u4ee5\u4e0b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001Token\u306e\u6697\u53f7\u5316\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\uff08AWS CLI\u306e\u74b0\u5883\u306f\u6574\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\uff09\n$ aws kms encrypt --key-id alias/<\u6697\u53f7\u5316\u30ad\u30fc\u306ealias> --plaintext=\"<Slash Commands\u306eToken>\"\n\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001CiphertextBlob\u306e\u5024\u3092\u30e1\u30e2\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n{    \"KeyId\": \"arn:aws:kms:ap-northeast-1:XXXXXXXXXXXX:key/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n     \"CiphertextBlob\": \"BASE64-encoded-string\"}\n\n\n\u6697\u53f7\u5316\u6e08\u307fToken\u306e\u8a2d\u5b9a\n\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u5185\u306e\u4ee5\u4e0b\u306e\u7b87\u6240\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nacceptBillingRequest.js(\u4fee\u6b63\u524d)\nconst encryptedToken = '';\n\n\n\nacceptBillingRequest.js(\u4fee\u6b63\u5f8c)\nconst encryptedToken = '<\u30e1\u30e2\u3057\u305fCiphertextBlob\u306e\u5024>';\n\n\n\nSlack\u306eincoming webhook\u306e\u8a2d\u5b9a\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u8a2d\u5b9a\u3057\u3001Webhook URL\u3092\u63a7\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\nSlack\u306bincoming webhook\u7d4c\u7531\u3067python\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092POST\u3059\u308b\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3yamanaka_lambda_acceptBillingResponse\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u5404\u7a2e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u3000Runtime \uff1a Node.js 4.3\n\u3000Role \uff1a \u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528\u306e\u30ed\u30fc\u30eb(yamanaka_acceptBillingResponse)\n\u307e\u305f\u3001\u4eca\u56de\u306f\n\u3000Memory \uff1a 256MB\n\u3000Timeout \uff1a 3 sec\n\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\u203b\u3053\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306b\u306fslack-node\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001Lambda\u306ejs\u30d5\u30a1\u30a4\u30eb\u3068\u4e00\u7dd2\u306b\u4ee5\u4e0bslack-node\u30e2\u30b8\u30e5\u30fc\u30eb\u3082zip\u5316\u3057\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nslack-node\n\n\u30b3\u30fc\u30c9\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\u3053\u3063\u3061\u3082\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n SNS\u304b\u3089\u5404\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8acb\u6c42\u91d1\u984d\u3092\u53d6\u5f97\n \u901a\u77e5\u5148\u306eSlack\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u8a2d\u5b9a\n \u901a\u77e5\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f5c\u6210\n Slack\u901a\u77e5\n\nwebhookUri\u306b\u306f\u30e1\u30e2\u3057\u3066\u304a\u3044\u305fWebhook URL\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nyamanaka_lambda_acceptBillingResponse.js\n/*jshint esversion: 6 */\n/*jshint strict: true */\n/* jshint node: true */\n'use strict';\n\nconsole.log('Loading function');\n\nexports.handler = function(event, context, callback) {\n    try {\n        const billingInfo = JSON.parse(event.Records[0].Sns.Message);\n        // \u30c1\u30e3\u30f3\u30cd\u30eb\u540d\u3092\u8a2d\u5b9a\n        const channelName = billingInfo[billingInfo.length - 1].channelName;\n\n        // Slack\u3067\u901a\u77e5\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f5c\u6210\n        const message = createMessage(billingInfo);\n\n        // Slack\u901a\u77e5\n        postMessage(channelName, message);\n\n        callback(null, 'success');\n\n    } catch (e) {\n        callback(e.message);\n    }\n};\n\n// Slack\u3067\u901a\u77e5\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f5c\u6210\nfunction createMessage(billingInfo) {\n\n    // \u898b\u7a4d\u3082\u308a\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u8a2d\u5b9a\n    const estimateStatus = billingInfo[billingInfo.length - 1].estimateStatus;\n    // \u5bfe\u8c61\u6708\u3092\u8a2d\u5b9a\n    const month = billingInfo[billingInfo.length - 1].month;\n\n    const message = {\n        text : '',\n        messageAttachments : []\n    };\n\n    // \u91d1\u984d\u304c\u78ba\u5b9a\u304b\u6982\u7b97\u304b\n    if (estimateStatus === 'rough') {\n        message.text = month + '\u6708\u5206 \u6982\u7b97';\n    } else if(estimateStatus === 'exact') {\n        message.text = month + '\u6708\u5206 \u78ba\u5b9a';\n    }\n\n    for (let i = 0, max = billingInfo.length - 1, account; i < max; i++) {\n\n        if (billingInfo[i].accountName) {\n            // accountName\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306faccountName\u3092\u4f7f\u7528\n            account = billingInfo[i].accountName;\n        } else {\n            // accountName\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306faccountId\u3092\u4f7f\u7528\n            account = billingInfo[i].accountId;\n        }\n\n        // \u5c0f\u6570\u70b9\u7b2c3\u4f4d\u3067\u56db\u6368\u4e94\u5165\n        const totalCost = Math.round(billingInfo[i].totalCost * 100) / 100;\n\n        message.messageAttachments[i] = {\n            color : '#36a64f',\n            title : account,\n            text  : '$ ' + totalCost\n        };\n    }\n\n    return message;\n}\n\n// Slack\u901a\u77e5\nfunction postMessage(channel, message) {\n    const Slack = require('slack-node');\n    const slack = new Slack();\n    // webhook\u7528URI\n    const webhookUri = 'https://hooks.slack.com/services/xxxxxxxxxxxxxxxxxx';\n    slack.setWebhook(webhookUri);\n\n    const slackParams = {\n        channel : channel,\n        username : \"billingmaster\",\n        text : message.text,\n        icon_emoji : \":aws:\",\n        attachments : message.messageAttachments\n    };\n\n    console.log('Send Message ..');\n\n    slack.webhook(slackParams, function(err, response) {\n        if (err) {\n            console.log(err, err.stack);\n            throw new Error('Could not send message');\n        }\n        console.log('Sent Message..');\n        console.log(response);\n    });\n}\n\n\n\n\u8a66\u3057\u3066\u307f\u308b\n\u4e00\u901a\u308a\u306e\u6e96\u5099\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u3001\u5b9f\u969b\u306b\u8a66\u3057\u3066\u898b\u307e\u3059\u3002\n\u4efb\u610fSlack\u30c1\u30e3\u30f3\u30cd\u30eb\u5185\u3067/billing\u3068\u5165\u529b\u3057\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u5b9f\u884c\u5f8c\u3057\u3070\u3089\u304f\u7d4c\u3064\u3068\u3001\u5404\u30a2\u30ab\u30a6\u30f3\u30c8\u3054\u3068\u306b\u5f53\u6708\u5206\u306e\u91d1\u984d\u304c\u51fa\u529b\u3055\u308c\u307e\u3057\u305f\u3002\n\u4eca\u6708\u306f\u307e\u3060\u91d1\u984d\u304c\u78ba\u5b9a\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u6982\u7b97\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306f\u3001\u5f15\u6570\u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n/billing [month]\u3068\u3044\u3046\u5f62\u3067\u6307\u5b9a\u6708\u306e\u60c5\u5831\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n/billing 8\u3092\u5b9f\u884c\u3057\u30668\u6708\u5206\u306e\u91d1\u984d\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u3061\u3083\u3093\u30688\u6708\u5206\u306e\u78ba\u5b9a\u91d1\u984d\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u5ff5\u306e\u305f\u30818\u6708\u5206\u306e\u8acb\u6c42\u60c5\u5831\u3092AWS\u306e\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u8868\u793a\u3055\u305b\u3066\u307f\u308b\u3068\n\n\u91d1\u984d\u304c\u3061\u3083\u3093\u3068\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\uff01\n\n\u5099\u8003\nS3\u306e\u30c8\u30ea\u30ac\u30fc\u30a4\u30d9\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u91d1\u984d\u304c\u78ba\u5b9a\u3057\u305f\u969b\u306b\u3060\u3051Slack\u306e\u901a\u77e5\u3082\u884c\u3048\u308b\u306a\u30fc\u3068\u306f\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u78ba\u5b9a\u3057\u305f\u3089AWS\u304b\u3089PDF\u304c\u304f\u308b\u3057\u3044\u3044\u304b\u306a\u3068\u601d\u3044\u3084\u3081\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001\u73fe\u5728\u306e\u30b3\u30fc\u30c9\u306f\u76f4\u8fd1\u306e\u91d1\u984d\u78ba\u8a8d\u3057\u304b\u610f\u8b58\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u3068\u540c\u3058\u5e74\u306e\u60c5\u5831\u3057\u304b\u3082\u3063\u3066\u3053\u308c\u307e\u305b\u3093\u3002\n\u305d\u3053\u3089\u3078\u3093\u306f\u4f7f\u3063\u3066\u3044\u304f\u4e2d\u3067\u4e0d\u4fbf\u306b\u601d\u3063\u305f\u3089\u9069\u5b9c\u4fee\u6b63\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\u5f15\u6570\u30c1\u30a7\u30c3\u30af\u7b49\u3082\u3084\u3063\u3066\u306a\u3044\u306e\u3067\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\n\u975e\u5e38\u306b\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u30b5\u30a4\u30c8\u3067\u3059\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\nSlack\u306eSlash command\u306e\u51e6\u7406\u3092AWS Lambda\u3067\u5b9f\u88c5\naws-billing\n\n\u4ee5\u4e0a\n\u4e88\u60f3\u4ee5\u4e0a\u306b\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3057\u305f\uff01\n# \u76ee\u7684\n\u8acb\u6c42\u60c5\u5831\u3092Slack\u304b\u3089\u7c21\u5358\u306b\u78ba\u8a8d\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n# \u5b9f\u73fe\u3059\u308b\u6a5f\u80fd\n\u4efb\u610f\u306eSlack\u30c1\u30e3\u30f3\u30cd\u30eb\u3067\u300c/billing\u300d\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001**\u4e00\u62ec\u8acb\u6c42\u3067\u7d10\u4ed8\u3044\u3066\u3044\u308b**\u30a2\u30ab\u30a6\u30f3\u30c8\u3054\u3068\u306e\u6599\u91d1\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n# \u69cb\u6210\u56f3\n\uff11\uff0eSlack\u306e\u4efb\u610f\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u304b\u3089\u30b9\u30e9\u30c3\u30b7\u30e5\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\n\uff12\uff0eAPI Gateway\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u547c\u3073\u51fa\u3057\n\uff13\uff0eLambda\u3067\u30b9\u30e9\u30c3\u30b7\u30e5\u30b3\u30de\u30f3\u30c9\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30c1\u30a7\u30c3\u30af\n\u3000\u203bAWS KMS\u3092\u5229\u7528\n\uff14\uff0eS3\u306e\u8acb\u6c42\u60c5\u5831CSV\u304b\u3089\u5fc5\u8981\u306a\u60c5\u5831\u3092\u62bd\u51fa\u3057SNS\u547c\u3073\u51fa\u3057\n\uff15\uff0eSNS\u304b\u3089Slack\u8fd4\u5374\u7528\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528Lambda\u3092\u547c\u3073\u51fa\u3057\n\uff16\uff0eSlack\u306b\u60c5\u5831\u3092\u901a\u77e5\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/40136/4f9056a4-7aa2-1164-8abf-44417ce7dbc3.png)\n\nSNS\u3092\u4f7f\u3046\u7406\u7531\u306f\u3001~~Slash Commands\u304c3\u79d2\u4ee5\u5185\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u304b\u3089\u3067\u3059\u3002~~\n\u9023\u643a\u3055\u305b\u3066\u307f\u305f\u304b\u3063\u305f\u304b\u3089\u3067\u3059\u3002\n\n# \u4e00\u62ec\u8acb\u6c42\uff08\u30b3\u30f3\u30bd\u30ea\u30c7\u30fc\u30c6\u30a3\u30c3\u30c9\u30d3\u30ea\u30f3\u30b0\uff09\u3068\u306f\uff1f\n\u8907\u6570\u306eAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u6240\u6709\u3057\u3066\u3044\u308b\u5834\u5408\u652f\u6255\u3044\u3092\uff11\u3064\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n[\u4e00\u62ec\u8acb\u6c42\u3092\u4f7f\u7528\u3057\u305f\u8907\u6570\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u6599\u91d1\u306e\u652f\u6255\u3044](https://docs.aws.amazon.com/ja_jp/awsaccountbilling/latest/aboutv2/consolidated-billing.html \"\u4e00\u62ec\u8acb\u6c42\u3092\u4f7f\u7528\u3057\u305f\u8907\u6570\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u6599\u91d1\u306e\u652f\u6255\u3044\")\n>\u4e00\u62ec\u8acb\u6c42\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u30011 \u3064\u3092\u652f\u6255\u3044\u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u7d44\u7e54\u5185\u306e\u8907\u6570\u306e\u30a2\u30de\u30be\u30f3 \u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9 (AWS) \u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u8907\u6570\u306e Amazon International Services Pvt. Ltd (AISPL) \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u652f\u6255\u3044\u3092\u7d71\u5408\u3067\u304d\u307e\u3059\u3002\n\n# \u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u306e\u8a2d\u5b9a\n\u4e8b\u524d\u306b\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u3092\u7279\u5b9a\u306e\u30d0\u30b1\u30c3\u30c8\u306b\u51fa\u529b\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n[\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u3067\u4f7f\u7528\u91cf\u3092\u78ba\u8a8d\u3059\u308b](http://docs.aws.amazon.com/ja_jp/awsaccountbilling/latest/aboutv2/detailed-billing-reports.html)\n\n\u4eca\u56de\u306e\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n**(AWS account number)-aws-billing-csv-yyyy-mm.csv**\n\n# SNS\u306e\u8a2d\u5b9a\n\n\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u65b0\u3057\u3044\u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56deTopicName\u306f\u300cbilling-lambda\u300d\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n<img width=\"405\" alt=\"AWS_SNS.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/108f8787-13e0-4f6b-c409-99ed952c87f3.png\">\n\n# IAM\u306e\u8a2d\u5b9a\n\n## \u6697\u53f7\u5316\u30ad\u30fc\u306e\u4f5c\u6210\nSlack\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u969b\u306eToken\u3092\u6697\u53f7\u5316\u3059\u308b\u305f\u3081\u306eKMS\u30ad\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30ea\u30fc\u30b8\u30e7\u30f3\u306f**\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3**\u3067\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4eca\u56de\u3001\u30ad\u30fc\u7ba1\u7406\u8005\u306b\u306f\u81ea\u8eab\u306eIAM\u30e6\u30fc\u30b6\u30fc\u3001\u30ad\u30fc\u30e6\u30fc\u30b6\u30fc\u306b\u306f\u307e\u3060\u4f55\u3082\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u5927\u4e08\u592b\u3067\u3059\u3002\n\n<img width=\"895\" alt=\"IAM_Management_Console.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/8bb15ee0-748f-dff0-0592-10c465ae2f2b.png\">\n\n<img width=\"1096\" alt=\"IAM_Management_Console.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/3fb30755-5d8f-b1a9-7ec4-7d64abd1adc6.png\">\n\n## \u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u306e\u30ed\u30fc\u30eb\u4f5c\u6210\nAPI Gateway\u7d4c\u7531\u3067\u5b9f\u884c\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u306e\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u6a29\u9650\u3092\u6301\u3063\u305f\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n+ \u4e00\u62ec\u8acb\u6c42\u7528S3\u30d0\u30b1\u30c3\u30c8\u304b\u3089\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u3092\u53d6\u5f97\u3059\u308b\n+ CloudWatch Logs\u306b\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b \n+ \u30ec\u30b9\u30dd\u30f3\u30b9\u7528Lambda\u306e\u547c\u3073\u51fa\u3057SNS\u306bPublish\u3092\u884c\u3046\n+ \u6697\u53f7\u5316\u3055\u308c\u305fToken\u3092\u5fa9\u53f7\u3059\u308b\n\n\u4eca\u56de\u306f\u3001yamanaka_acceptBillingRequest\u3068\u3044\u3046\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u203bS3\u306eResource\u306e\u6700\u5f8c\u306b\u30a2\u30b9\u30bf\u30ea\u30b9\u30af(*)\u304c\u5fc5\u8981\uff01\n\n```json:acceptBillingRequestPolicy\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1473241089000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::<\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30d0\u30b1\u30c3\u30c8\u306e\u30d0\u30b1\u30c3\u30c8\u540d>/*\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1473241213000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"kms:Decrypt\"\n            ],\n            \"Resource\": [\n                \"<\u4f5c\u6210\u3057\u305f\u6697\u53f7\u5316\u30ad\u30fc\u306eARN>\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1473241313000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1473241406000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sns:Publish\"\n            ],\n            \"Resource\": [\n                \"<\u30ec\u30b9\u30dd\u30f3\u30b9\u7528Lambda\u547c\u3073\u51fa\u3057SNS\u306eARN>\"\n            ]\n        }\n    ]\n}\n```\n\n## \u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528Lambda\u306e\u30ed\u30fc\u30eb\u4f5c\u6210\nSNS\u7d4c\u7531\u3067\u5b9f\u884c\u3055\u308c\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528Lambda\u306e\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u6a29\u9650\u3092\u6301\u3063\u305f\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n+ CloudWatch Logs\u306b\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b \n\n\u4eca\u56de\u306f\u3001yamanaka_acceptBillingResponse\u3068\u3044\u3046\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n```json:acceptBillingResponsePolicy\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1473241745000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        }\n    ]\n}\n```\n\n## KMS\u306e\u30ad\u30fc\u30e6\u30fc\u30b6\u30fc\u8a2d\u5b9a\n\nKMS\u306e\u8a2d\u5b9a\u753b\u9762\u306b\u623b\u308a\u30ad\u30fc\u30e6\u30fc\u30b6\u30fc\u3068\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528\u306e\u30ed\u30fc\u30eb\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n<img width=\"1103\" alt=\"IAM_Management_Console.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/462b5718-68e6-249c-b831-945be69be0b4.png\">\n\n\u3053\u308c\u3067IAM\u3067\u306e\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n# \u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3yamanaka_lambda_acceptBillingRequest\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u5404\u7a2e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u3000Runtime \uff1a **Node.js 4.3**\n\u3000Role \uff1a **\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528\u306e\u30ed\u30fc\u30eb(yamanaka_acceptBillingRequest)**\n\n\u307e\u305f\u3001\u4eca\u56de\u306f\n\u3000Memory \uff1a **192MB**\n\u3000Timeout \uff1a **3 sec**\n\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u30b3\u30fc\u30c9\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n1.  Slack\u306e\u30d1\u30e9\u30e1\u30bf\u304b\u3089Token\u3092\u53d6\u5f97\u3057\u3001\u30c8\u30fc\u30af\u30f3\u304c\u6b63\u3057\u3044\u304b\u30c1\u30a7\u30c3\u30af\n1.  \u8a72\u5f53\u6708\u306e\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u3092S3\u30d0\u30b1\u30c3\u30c8\u304b\u3089\u53d6\u5f97\n1.  \u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u304b\u3089\u5404\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8acb\u6c42\u91d1\u984d\u3092\u53d6\u5f97\u53ca\u3073\u914d\u5217\u306b\u683c\u7d0d\n1.  \u683c\u7d0d\u3057\u305f\u60c5\u5831\u3092\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066SNS\u3092\u767a\u884c\u3059\u308b\n\n```js:yamanaka_lambda_acceptBillingRequest.js\n/*jshint esversion: 6 */\n/*jshint strict: true */\n/* jshint node: true */\n'use strict';\n\nconsole.log('Loading function');\nconst AWS = require(\"aws-sdk\");\nconst querystring = require('querystring');\nconst region = 'ap-northeast-1';\nconst now = new Date();\n\nexports.handler = function(event, context, callback) {\n\n\tconst generator  = (function *() {\n\n        try {\n\t\t\t// FunctionArn\u304b\u3089accountId\u3092\u53d6\u5f97\n\t\t\tconst accountId = context.invokedFunctionArn.match(/\\d{3,}/)[0];\n\t\t\tconst commandParams = querystring.parse(event[\"body-json\"]);\n\n\t\t\tlet targetMonth;\n\t\t\tif(!isNaN(parseInt(commandParams.text, 10))) {\n\t\t\t\t// \u6708\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u5f15\u6570\u3092\u8a2d\u5b9a\n\t\t\t\ttargetMonth = commandParams.text;\n\t\t\t} else {\n\t\t\t\t// \u6708\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u5b9f\u884c\u6708\u3092\u8a2d\u5b9a\n\t\t\t\ttargetMonth = now.getUTCMonth() + 1;\n\t\t\t}\n\n\t\t\t// Slack\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30c1\u30a7\u30c3\u30af\n\t\t\tyield tokenCheck(commandParams.token, generator);\n\n\t\t\t// S3\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\n\t\t\tconst billingCsvFile = yield getBillingFile(accountId, targetMonth, generator);\n\n\t\t\t// \u5fc5\u8981\u306a\u60c5\u5831\u3092\u53d6\u5f97\n\t\t\tconst costList = pickUpCostList(billingCsvFile);\n\t\t\t// \u901a\u77e5\u5143\u30c1\u30e3\u30f3\u30cd\u30eb\u540d\u3092\u683c\u7d0d\n\t\t\tcostList[costList.length - 1].channelName = commandParams.channel_name;\n\t\t\tcostList[costList.length - 1].month = targetMonth;\n\n\t\t\t// SNS\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\n\t\t\tyield responseCall(accountId, costList, generator);\n\n\t\t\tcallback(null,'Request is accepted');\n\n\t\t} catch (e) {\n\t\t    callback(e.message);\n\t\t}\n\t})();\n\n\t/* \u51e6\u7406\u958b\u59cb */\n\tgenerator.next();\n};\n\n// \u30c8\u30fc\u30af\u30f3\u30c1\u30a7\u30c3\u30af\nfunction tokenCheck(token, generator) {\n\tconst kms = new AWS.KMS({'region':region});\n\tconst encryptedToken = '';\n\tconst encryptedBuf = new Buffer(encryptedToken, 'base64');\n\n\tconst kmsParams = {\n\t\tCiphertextBlob: encryptedBuf\n\t};\n\n\tkms.decrypt(kmsParams, function(err, data) {\n\t  if (err) {\n\t\t  console.log(err, err.stack);\n\t\t  generator.throw(new Error('Kms Decrypt Error'));\n\t\t  return;\n\t  } else {\n\t\t  if (data.Plaintext.toString() !== token) {\n\t\t\t  generator.throw(new Error('Slash Commands Token Error'));\n\t\t  }\n\t\t  console.log('token is OK');\n\t\t  generator.next();\n\t  }\n\t});\n}\n\nfunction getBillingFile(accountId, targetMonth, generator) {\n\n\tconst s3 = new AWS.S3();\n\tconst bucketName = '<\u8acb\u6c42\u30ec\u30dd\u30fc\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30d0\u30b1\u30c3\u30c8\u306e\u30d0\u30b1\u30c3\u30c8\u540d>';\n\tconst key = accountId + '-aws-billing-csv-' +\n\t\tnow.getUTCFullYear() + '-' + ('0' + targetMonth).substr(-2) + '.csv';\n\n\tconsole.log('getting S3 file %s ..', key);\n\n\tconst params = {\n\t\tBucket: bucketName,\n\t\tKey: key\n\t};\n\n\ts3.getObject(params, function(err, data) {\n\t\tif (err) {\n\t\t\tconsole.log(err, err.stack);\n\t\t\tgenerator.throw(new Error('S3 Error'));\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('got S3 stream ..');\n\t\tgenerator.next(data.Body.toString());\n\t});\n}\n\n// Totalcost\u3092\u4e8c\u6b21\u5143\u914d\u5217\u306b\u3068\u3057\u3066\u8fd4\u5374\nfunction pickUpCostList(csvFile){\n    let estimateStatus = 'exact';\n\tconst costList = [];\n\t// \u4e00\u884c\u305a\u3064\u914d\u5217\u3068\u3057\u3066tmp\u306b\u683c\u7d0d\n\tconst tmp = csvFile.split(\"\\n\");\n\n\t// \u5404\u884c\u3054\u3068\u306b\u30ab\u30f3\u30de\u3067\u533a\u5207\u3063\u305f\u6587\u5b57\u5217\u3092\u8981\u7d20\u3068\u3057\u305f\u4e8c\u6b21\u5143\u914d\u5217\u3092\u751f\u6210\n\tfor(let i = 0, listCount = 0, csvLine; i < tmp.length; ++i){\n\t\tcsvLine = tmp[i].replace(/\\\"/g,\"\").split(',');\n\t\tif (csvLine[3] === 'AccountTotal') {\n\t\t    costList[listCount] = {};\n\t\t    // \u5fc5\u8981\u306a\u7b87\u6240\u3060\u3051\u914d\u5217\u306b\u683c\u7d0d\n\t\t    costList[listCount].accountId   = csvLine[2];\n\t\t    costList[listCount].accountName = csvLine[9];\n\t\t    costList[listCount].totalCost   = csvLine[csvLine.length - 1];\n\t\t\tlistCount++;\n\t\t} else if (csvLine[3] === 'EstimatedDisclaimer') {\n\t\t    // \u6700\u7d42\u884c\u306bEstimatedDesclaimer\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u3001rough\uff08\u6982\u7b97\uff09\u3092\u8a2d\u5b9a\n\t\t    estimateStatus = 'rough';\n\t\t}\n\t}\n\n\t// accountName\u3067\u6607\u9806\u306b\u30bd\u30fc\u30c8\n\tcostList.sort(function(a,b) {\n\t   if(a.accountName<b.accountName) {\n\t       return -1;\n\t   }\n\t   if(a.accountName>b.accountName) {\n\t       return 1;\n\t   }\n\t   return 0;\n\t});\n\n\tcostList[costList.length] = {};\n\t// costList\u306e\u6700\u5f8c\u306e\u8981\u7d20\u306b\u78ba\u5b9a\u30fb\u6982\u7b97\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u8ffd\u52a0\n\tcostList[costList.length - 1].estimateStatus = estimateStatus;\n\n\treturn costList;\n}\n\n// SNS\u3067Lambda\u3092\u547c\u3073\u51fa\u3057\nfunction responseCall(accountId, costList, generator) {\n    const sns = new AWS.SNS({'region':region});\n\tconst topicName = 'billing-lambda';\n\n    const params = {\n        Message: JSON.stringify(costList),\n        TopicArn: 'arn:aws:sns:' + region + ':' + accountId + ':' + topicName\n    };\n\n    console.log('publishing SNS ..');\n    sns.publish(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack);\n\t\t\tgenerator.throw(new Error('SNS Error'));\n\t\t\treturn;\n        } else {\n            console.log('published SNS ..');\n            console.log(data);\n            generator.next();\n        }\n    });\n}\n\n```\n\n# API Gateway\u306e\u8a2d\u5b9a\n\n\u4efb\u610f\u306e\u540d\u524d\u3067API\u3092\u65b0\u3057\u304f\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30ea\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u3000\u30ea\u30bd\u30fc\u30b9 \uff1a **/slackcommand**\n\u3000\u30e1\u30bd\u30c3\u30c9 \uff1a **POST**\n\n\n\n## \u30e1\u30bd\u30c3\u30c9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u4ee5\u4e0b\u306e\u901a\u308a\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u7d71\u5408\u30bf\u30a4\u30d7 \uff1a **Lambda\u95a2\u6570**\nLambda\u30ea\u30fc\u30b8\u30e7\u30f3 \uff1a **ap-northeast-1**\nLambda\u95a2\u6570 \uff1a **\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda(yamanaka_lambda_acceptBillingRequest)**\n\n<img width=\"1063\" alt=\"API_Gateway.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/af2b1277-17ce-b2b3-451f-d0a9040127f7.png\">\n\n## \u7d71\u5408\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u8a2d\u5b9a\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u672c\u6587\u306e\u30d1\u30b9\u30b9\u30eb\u30fc \uff1a **\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408**\nContent-Type \uff1a **application/x-www-form-urlencoded**\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u751f\u6210 \uff1a **\u30e1\u30bd\u30c3\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30b9\u30b9\u30eb\u30fc**\n\n<img width=\"1067\" alt=\"API_Gateway.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/f9876f09-d696-ded2-948e-851e688bde87.png\">\n\n\n\u203bContent-Type\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u3000\u3000[Slash Commands](https://api.slack.com/slash-commands)\n>Typically, this data will be sent to your URL as a HTTP POST with a content-type header set as **<Font color=\"red\">application/x-www-form-urlencodedred</font>**. If you've chosen to have your slash command's URL receive invocations as a GET request, no explicit content-type header will be set.\n\n\u4fdd\u5b58\u3057\u305f\u3089\u3001\u65b0\u3057\u3044\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203b\u4eca\u56de\u306fdev\u30b9\u30c6\u30fc\u30b8\u306b\u30c7\u30d7\u30ed\u30a4\n\n<img width=\"1068\" alt=\"API_Gateway.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/43e6eca4-1874-2efc-a94a-6b6ffa2606a5.png\">\n\n\u3053\u308c\u3067API Gateway\u306e\u4f5c\u6210\u306f\u5b8c\u4e86\u3067\u3059\uff01\n\n# Slash Commands\u306e\u8a2d\u5b9a\n\n## Slash Commands\u3068\u306f\uff1f\nSlash Commands\u3068\u306f\u3001\u4efb\u610f\u306eSlack\u30c1\u30e3\u30f3\u30cd\u30eb\u3067``/commands``\u3068\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\n\u6ce8\u610f\u3068\u3057\u3066\u3001Slash Commands\u306f\u5b9f\u884c\u5f8c\u30013\u79d2\u4ee5\u5185\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3055\u306a\u3044\u3068\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n## \u8a2d\u5b9a\u624b\u9806\n\n1. Slack\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u72b6\u614b\u3067https://.slack.com/services/new\u306b\u30a2\u30af\u30bb\u30b9\n2. \u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306b\u300cSlash Commands\u300d\u3068\u5165\u529b\u3057\u9078\u629e\u3059\u308b\n3. \u300cAdd Configuration\u300d\u3092\u9078\u629e\n4. Choose a Command\u306b\u300c/billing\u300d\u3092\u5165\u529b\u3057\u3001\u300cAdd Slash Command Integration\u300d\u3092\u9078\u629e\u3059\u308b\n5. \u4ee5\u4e0b\u306e\u901a\u308a\u8a2d\u5b9a\n\n\u3000\u3000Command \uff1a **/billing**\n\u3000\u3000URL \uff1a **API Gateway\u306eURL\u3092\u8a2d\u5b9a**\n\u3000\u3000Method \uff1a **POST**\n\n\u3000\u3000**\u203bToken\u306f\u5f8c\u307b\u3069\u4f7f\u7528\u3059\u308b\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304f\uff01**\n\n<img width=\"857\" alt=\"Slash_Commands___sks-2sp_Slack.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/8f8846ae-27fb-400f-5c4b-14da1b7a8561.png\">\n\n\n\n# \u30c8\u30fc\u30af\u30f3\u306e\u6697\u53f7\u5316\n\u4f5c\u6210\u3057\u305f\u6697\u53f7\u5316\u30ad\u30fc\u3067Slash Commands\u306eToken\u3092\u6697\u53f7\u5316\u3057\u307e\u3059\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u306ePC\u3067\u4ee5\u4e0b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001Token\u306e\u6697\u53f7\u5316\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\uff08AWS CLI\u306e\u74b0\u5883\u306f\u6574\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\uff09\n\n```$ aws kms encrypt --key-id alias/<\u6697\u53f7\u5316\u30ad\u30fc\u306ealias> --plaintext=\"<Slash Commands\u306eToken>\"```\n\n\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001CiphertextBlob\u306e\u5024\u3092\u30e1\u30e2\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```json:\n{    \"KeyId\": \"arn:aws:kms:ap-northeast-1:XXXXXXXXXXXX:key/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n     \"CiphertextBlob\": \"BASE64-encoded-string\"}\n```\n\n# \u6697\u53f7\u5316\u6e08\u307fToken\u306e\u8a2d\u5b9a\n\u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\u7528Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u5185\u306e\u4ee5\u4e0b\u306e\u7b87\u6240\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```js:acceptBillingRequest.js(\u4fee\u6b63\u524d)\nconst encryptedToken = '';\n```\n\n```js:acceptBillingRequest.js(\u4fee\u6b63\u5f8c)\nconst encryptedToken = '<\u30e1\u30e2\u3057\u305fCiphertextBlob\u306e\u5024>';\n```\n\n# Slack\u306eincoming webhook\u306e\u8a2d\u5b9a\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u8a2d\u5b9a\u3057\u3001Webhook URL\u3092\u63a7\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n[Slack\u306bincoming webhook\u7d4c\u7531\u3067python\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092POST\u3059\u308b](http://qiita.com/satoshi03/items/14495bf431b1932cb90b)\n\n\n# \u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3yamanaka_lambda_acceptBillingResponse\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u5404\u7a2e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u3000Runtime \uff1a **Node.js 4.3**\n\u3000Role \uff1a **\u30ec\u30b9\u30dd\u30f3\u30b9\u5b9f\u884c\u7528\u306e\u30ed\u30fc\u30eb(yamanaka_acceptBillingResponse)**\n\n\u307e\u305f\u3001\u4eca\u56de\u306f\n\u3000Memory \uff1a **256MB**\n\u3000Timeout \uff1a **3 sec**\n\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u203b\u3053\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306b\u306fslack-node\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001Lambda\u306ejs\u30d5\u30a1\u30a4\u30eb\u3068\u4e00\u7dd2\u306b\u4ee5\u4e0bslack-node\u30e2\u30b8\u30e5\u30fc\u30eb\u3082zip\u5316\u3057\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n[slack-node](https://www.npmjs.com/package/slack-node)\n\n## \u30b3\u30fc\u30c9\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\u3053\u3063\u3061\u3082\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n1.  SNS\u304b\u3089\u5404\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8acb\u6c42\u91d1\u984d\u3092\u53d6\u5f97\n1.  \u901a\u77e5\u5148\u306eSlack\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u8a2d\u5b9a\n1.  \u901a\u77e5\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f5c\u6210\n1.  Slack\u901a\u77e5\n\nwebhookUri\u306b\u306f\u30e1\u30e2\u3057\u3066\u304a\u3044\u305fWebhook URL\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n```js:yamanaka_lambda_acceptBillingResponse.js\n/*jshint esversion: 6 */\n/*jshint strict: true */\n/* jshint node: true */\n'use strict';\n\nconsole.log('Loading function');\n\nexports.handler = function(event, context, callback) {\n    try {\n        const billingInfo = JSON.parse(event.Records[0].Sns.Message);\n        // \u30c1\u30e3\u30f3\u30cd\u30eb\u540d\u3092\u8a2d\u5b9a\n        const channelName = billingInfo[billingInfo.length - 1].channelName;\n\n        // Slack\u3067\u901a\u77e5\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f5c\u6210\n        const message = createMessage(billingInfo);\n\n        // Slack\u901a\u77e5\n        postMessage(channelName, message);\n\n        callback(null, 'success');\n\n    } catch (e) {\n        callback(e.message);\n    }\n};\n\n// Slack\u3067\u901a\u77e5\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f5c\u6210\nfunction createMessage(billingInfo) {\n\n    // \u898b\u7a4d\u3082\u308a\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u8a2d\u5b9a\n    const estimateStatus = billingInfo[billingInfo.length - 1].estimateStatus;\n    // \u5bfe\u8c61\u6708\u3092\u8a2d\u5b9a\n    const month = billingInfo[billingInfo.length - 1].month;\n\n    const message = {\n        text : '',\n        messageAttachments : []\n    };\n\n    // \u91d1\u984d\u304c\u78ba\u5b9a\u304b\u6982\u7b97\u304b\n    if (estimateStatus === 'rough') {\n        message.text = month + '\u6708\u5206 \u6982\u7b97';\n    } else if(estimateStatus === 'exact') {\n        message.text = month + '\u6708\u5206 \u78ba\u5b9a';\n    }\n\n    for (let i = 0, max = billingInfo.length - 1, account; i < max; i++) {\n\n        if (billingInfo[i].accountName) {\n            // accountName\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306faccountName\u3092\u4f7f\u7528\n            account = billingInfo[i].accountName;\n        } else {\n            // accountName\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306faccountId\u3092\u4f7f\u7528\n            account = billingInfo[i].accountId;\n        }\n\n        // \u5c0f\u6570\u70b9\u7b2c3\u4f4d\u3067\u56db\u6368\u4e94\u5165\n        const totalCost = Math.round(billingInfo[i].totalCost * 100) / 100;\n\n        message.messageAttachments[i] = {\n            color : '#36a64f',\n            title : account,\n            text  : '$ ' + totalCost\n        };\n    }\n\n    return message;\n}\n\n// Slack\u901a\u77e5\nfunction postMessage(channel, message) {\n    const Slack = require('slack-node');\n    const slack = new Slack();\n    // webhook\u7528URI\n    const webhookUri = 'https://hooks.slack.com/services/xxxxxxxxxxxxxxxxxx';\n    slack.setWebhook(webhookUri);\n\n    const slackParams = {\n        channel : channel,\n        username : \"billingmaster\",\n        text : message.text,\n        icon_emoji : \":aws:\",\n        attachments : message.messageAttachments\n    };\n\n    console.log('Send Message ..');\n\n    slack.webhook(slackParams, function(err, response) {\n        if (err) {\n            console.log(err, err.stack);\n            throw new Error('Could not send message');\n        }\n        console.log('Sent Message..');\n        console.log(response);\n    });\n}\n```\n\n# \u8a66\u3057\u3066\u307f\u308b\n\n\u4e00\u901a\u308a\u306e\u6e96\u5099\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u3001\u5b9f\u969b\u306b\u8a66\u3057\u3066\u898b\u307e\u3059\u3002\n\n\u4efb\u610fSlack\u30c1\u30e3\u30f3\u30cd\u30eb\u5185\u3067```/billing```\u3068\u5165\u529b\u3057\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_090916_102041_AM.jpg](https://qiita-image-store.s3.amazonaws.com/0/40136/eaff4b81-b953-a3f9-993f-83ff9cb6781a.jpeg)\n\n\u5b9f\u884c\u5f8c\u3057\u3070\u3089\u304f\u7d4c\u3064\u3068\u3001\u5404\u30a2\u30ab\u30a6\u30f3\u30c8\u3054\u3068\u306b\u5f53\u6708\u5206\u306e\u91d1\u984d\u304c\u51fa\u529b\u3055\u308c\u307e\u3057\u305f\u3002\n\u4eca\u6708\u306f\u307e\u3060\u91d1\u984d\u304c\u78ba\u5b9a\u3057\u3066\u3044\u306a\u3044\u305f\u3081**\u6982\u7b97**\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n<img width=\"845\" alt=\"Slack 2.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/f8cf34b9-bf68-8a17-1b95-67e405dfed07.png\">\n\n\u6b21\u306f\u3001\u5f15\u6570\u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n```/billing [month]```\u3068\u3044\u3046\u5f62\u3067\u6307\u5b9a\u6708\u306e\u60c5\u5831\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n```/billing 8```\u3092\u5b9f\u884c\u3057\u30668\u6708\u5206\u306e\u91d1\u984d\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n<img width=\"960\" alt=\"Slack 3.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/b636023d-12b4-52d0-513f-18f0f14cde9d.png\">\n\n\u3061\u3083\u3093\u30688\u6708\u5206\u306e\u78ba\u5b9a\u91d1\u984d\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n<img width=\"783\" alt=\"Slack 4.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40136/008b85b4-a740-ed00-c83c-b0f7a81eb9dd.png\">\n\n\u5ff5\u306e\u305f\u30818\u6708\u5206\u306e\u8acb\u6c42\u60c5\u5831\u3092AWS\u306e\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u8868\u793a\u3055\u305b\u3066\u307f\u308b\u3068\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_090916_101923_AM.jpg](https://qiita-image-store.s3.amazonaws.com/0/40136/8c1aca22-74b7-0a8b-0356-5937d31b6324.jpeg)\n\n\u91d1\u984d\u304c\u3061\u3083\u3093\u3068\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\uff01\n\n# \u5099\u8003\nS3\u306e\u30c8\u30ea\u30ac\u30fc\u30a4\u30d9\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u91d1\u984d\u304c\u78ba\u5b9a\u3057\u305f\u969b\u306b\u3060\u3051Slack\u306e\u901a\u77e5\u3082\u884c\u3048\u308b\u306a\u30fc\u3068\u306f\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u78ba\u5b9a\u3057\u305f\u3089AWS\u304b\u3089PDF\u304c\u304f\u308b\u3057\u3044\u3044\u304b\u306a\u3068\u601d\u3044\u3084\u3081\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001\u73fe\u5728\u306e\u30b3\u30fc\u30c9\u306f\u76f4\u8fd1\u306e\u91d1\u984d\u78ba\u8a8d\u3057\u304b\u610f\u8b58\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u3068\u540c\u3058\u5e74\u306e\u60c5\u5831\u3057\u304b\u3082\u3063\u3066\u3053\u308c\u307e\u305b\u3093\u3002\n\u305d\u3053\u3089\u3078\u3093\u306f\u4f7f\u3063\u3066\u3044\u304f\u4e2d\u3067\u4e0d\u4fbf\u306b\u601d\u3063\u305f\u3089\u9069\u5b9c\u4fee\u6b63\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n\u5f15\u6570\u30c1\u30a7\u30c3\u30af\u7b49\u3082\u3084\u3063\u3066\u306a\u3044\u306e\u3067\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\n\u975e\u5e38\u306b\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u30b5\u30a4\u30c8\u3067\u3059\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\n[Slack\u306eSlash command\u306e\u51e6\u7406\u3092AWS Lambda\u3067\u5b9f\u88c5](http://qiita.com/komeda-shinji/items/bd7bb3c2680e20218023)\n\n[aws-billing](https://github.com/segmentio/aws-billing/blob/master/index.js)\n\n# \u4ee5\u4e0a\n\u4e88\u60f3\u4ee5\u4e0a\u306b\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3057\u305f\uff01\n"}