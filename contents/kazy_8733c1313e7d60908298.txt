{"context": " More than 1 year has passed since last update.\n\nTLDR\n\n\ncompose\u306f\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306e\u4e2d\u3067Obseravble\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u6700\u9ad8\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\n\nlift\u3068\u306e\u9055\u3044\u306fObseravble\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304b\u3069\u3046\u304b\n\nflatmap\u3068\u306e\u9055\u3044\u306fObseravble\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304b\u3069\u3046\u304b + \u5b9f\u884c\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\nRxLifecycle\u306ftakeUntil\u3067\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u3092bind\u3057\u3066\u308b\u3002\n\nRxJava Advent Calendar 5\u65e5\u76ee\u306e\u4eca\u65e5\u306f\u3001compose\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\ncompose\u3068\u3044\u3048\u3070\u3001\u6700\u8fd1\u3067\u306ftrello/RxLifecycle\u3067\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u99b4\u67d3\u307f\u306e\u3042\u308b\u65b9\u3082\u591a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002 \ncompose\u306f\u521d\u65e5\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u7d39\u4ecb\u3057\u305flift\u3068\u540c\u3058\u304fRxJava\u306e\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u8981\u7d20\u306e\u4e00\u3064\u3067\u3059\u3002\u3067\u306f\u3053\u306e\u4e8c\u3064\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u306b\u306f\u3069\u306e\u3088\u3046\u306a\u9055\u3044\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304b?\n\nlift\u3068compose\u306e\u9055\u3044\nlift\u3068compose\u306e\u4f7f\u3044\u5206\u3051\u306fjavadoc\u306e\u4e2d\u306b\u6307\u91dd\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u8a72\u5f53\u7b87\u6240\u3092\u629c\u7c8b\u3067\u3059\u3002\nIf the operator you are creating is designed to act on the individual items emitted by a source Observable, use Observable.lift(rx.Observable.Operator<? extends R, ? super T>). If your operator is designed to transform the source Observable as a whole (for instance, by applying a particular set of existing RxJava operators to it) use compose.\n\n\u96d1\u306b\u8a33\u3059\u3068\u3001\n\u3042\u306a\u305f\u304c\u4f5c\u3063\u305f\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u304c\u3001Obeservable\u304b\u3089\u653e\u51fa\u3055\u308c\u308b\u500b\u3005\u306e\u8981\u7d20\u306b\u4f5c\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001\"lift\"\u3092\u4f7f\u3046\u3079\u304d\u3067\u3059\u3002\u4e00\u65b9\u3067\u3001\n\u3042\u306a\u305f\u304c\u4f5c\u3063\u305f\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u304c\u3001Observable\u305d\u306e\u3082\u306e\u306b\u4f5c\u7528\u3059\u308b\u5834\u5408\u306b\u306f\"compose\"\u3092\u4f7f\u3046\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\nlift\u3068compose\u306f\u4f3c\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u5b9f\u969b\u306b\u306f\u51fa\u6765\u308b\u3053\u3068\u304c\u7570\u306a\u308a\u307e\u3059\u3002\u8868\u306b\u307e\u3068\u3081\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\n\u76f4\u63a5Observable\u3092\u89e6\u308c\u308b\u304b\nObservable\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304b\n\n\n\n\ncompose\n\u51fa\u6765\u308b\n\u51fa\u6765\u306a\u3044\n\n\nlift\n\u51fa\u6765\u306a\u3044\n\u51fa\u6765\u308b\n\n\n\ncompose\u306f\u76f4\u63a5\u5024\u306b\u89e6\u308c\u308b\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u306e\u3067\u3001map\u306e\u3088\u3046\u306a\u51e6\u7406\u306f\u884c\u3048\u307e\u305b\u3093\u3002\n\u4e00\u65b9\u3067compose\u306fObservable\u306b\u76f4\u63a5\u89e6\u308c\u308b\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002RxlifeCycle\u306f\u3053\u306e\u7279\u6027\u3092\u5229\u7528\u3057\u3066\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u3092Observable\u306b\u5bfe\u3057\u3066bind\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u306d\u3002\n\ncompose\u306e\u4ed5\u7d44\u307f\n\u3067\u306f\u5b9f\u969b\u306bcompose\u304c\u3069\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u306e\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002compose\u306e\u5b9f\u88c5\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\npublic <R> Observable<R> compose(Transformer<? super T, ? extends R> transformer) {\n    return ((Transformer<T, R>) transformer).call(this);\n}\n\nTransformer<? super T, ? extends R>\u3092\u5f15\u6570\u306b\u3068\u3063\u3066\u3001Transformer\u306b\u3088\u308b\u5909\u63db\u3092\u81ea\u5206\u81ea\u8eab\u306b\u9069\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u306d\u3002\n\u3067\u306f\u6b21\u306b\u5f15\u6570\u306b\u767b\u5834\u3059\u308bTransformer\u306e\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\npublic interface Transformer<T, R> extends Func1<Observable<T>, Observable<R>> {\n    // cover for generics insanity\n}\n\nTransformer\u306f\u3001Obseravble<T>\u3092\u53d7\u3051\u53d6\u308aObservable<R>\u3092\u8fd4\u3059Func1\u306e\u3088\u3046\u3067\u3059\u306d\u3002 \u3053\u3061\u3089\u3082\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3057\u305f\u3002\n\u3064\u307e\u308aTransformer\u3068\u306f \u300cObservable\u3092\u53d7\u3051\u53d6\u308a\u3001\u52a0\u5de5\u3057\u3066\u3001\u8fd4\u3059\u95a2\u6570\u300d \u306a\u306e\u3067\u3001compose\u3068\u306f \u300cObservable\u304c\u81ea\u5206\u81ea\u8eab\u306b\u95a2\u6570\u3092\u9069\u5fdc\u3059\u308b\u305f\u3081\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u300d \u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002 lift\u306e\u5b9f\u88c5\u3088\u308a\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u308f\u304b\u308a\u3084\u3059\u3044\u5370\u8c61\u3067\u3059\u306d\u3002 \n\ncompose\u3068flatmap\u306e\u9055\u3044\u306b\u3064\u3044\u3066\nRxJava\u306e\u51e6\u7406\u3067\u3088\u304f\u4f7f\u3046\u3082\u306e\u3067flatmap\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3082Observable\u3092\u8fd4\u3059\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u304c\u3001\u3069\u306e\u3088\u3046\u306a\u9055\u3044\u304c\u3042\u308b\u3093\u3067\u3057\u3087\u3046\u304b\u3002\n\n\n\n\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\n\u547c\u3070\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\n\u8fd4\u308a\u5024\n\u76f4\u63a5Observable\u3092\u89e6\u308c\u308b\u304b\nObservable\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304b\n\n\n\n\ncompose\nsubscribe\u3055\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0(\u4e00\u5ea6\u3060\u3051)\nObservable\n\u51fa\u6765\u308b\n\u51fa\u6765\u306a\u3044\n\n\nflatmap\nonNext\u304c\u547c\u3070\u308c\u308b\u3054\u3068(\u8907\u6570\u56de)\nObservable\n\u51fa\u6765\u306a\u3044\n\u51fa\u6765\u308b\n\n\n\ncompose\u3068flatmap\u3082\u3068\u3066\u3082\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u3089\u3082\u7528\u9014\u306f\u5168\u7136\u9055\u3044\u307e\u3059\u3002\nflatmap\u306fObservable\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u306e\u5024\u3092\u5143\u306b\u65b0\u3057\u3044Observable\u3092\u4f5c\u308a\u30ea\u30bf\u30fc\u30f3\u3057\u307e\u3059\u3002\u6ce8\u76ee\u3059\u3079\u304d\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u5f15\u6570\u3068\u8fd4\u308a\u5024\u306eObservable\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7570\u306a\u308b\u70b9\u3067\u3059\u3002\u3053\u308c\u306fflatmap\u306f\u5143\u306eObservable\u81ea\u4f53\u306b\u306f\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u4e8b\u304c\u7406\u7531\u3067\u3059\u3002\n\u4e00\u65b9\u3067\u3001compose\u306fObservable\u306e\u4e2d\u306e\u5024\u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u5143\u306eObservable\u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u306e\u3067\u3001\u5143\u306eObservable\u3092\u52a0\u5de5\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\n\u3064\u307e\u308acompose\u306e\u5834\u5408\u306f\u3001\u4e00\u822c\u7684\u306b\u306f\u5f15\u6570\u3068\u8fd4\u308a\u5024\u306eObservable\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002[^1]\n[^1] Transformer\u306f\u5225\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eObservable\u3092\u8fd4\u3059\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u60f3\u5b9a\u3055\u308c\u305f\u4f7f\u3044\u65b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\nRxLifeCycle\u306b\u3064\u3044\u3066\n\u3067\u306f\u5192\u982d\u3067\u7d39\u4ecb\u3057\u305ftrello/RxLifecycle\u306f\u3069\u306e\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3067\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\u5b9f\u88c5\u3092\u8ffd\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nRxlifecycle\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u3067\u3059\u3002\npublic class MyActivity extends RxActivity {\n    @Override\n    public void onResume() {\n        super.onResume();\n        myObservable\n            .compose(bindToLifecycle())\n            .subscribe();\n    }\n}\n\ncompose\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u306d\u3002 \u5f15\u6570\u306b\u6e21\u3055\u305b\u308c\u3066\u3044\u308bbindToLifeCycle\u3068\u306f\u306a\u3093\u3067\u3057\u3087\u3046\u304b\u3002\u5b9f\u88c5\u3092\u8ffd\u3063\u3066\u307f\u307e\u3059\u3002\n@Override\npublic final <T> Observable.Transformer<? super T, ? extends T> bindToLifecycle() {\n    return RxLifecycle.bindActivity(lifecycleSubject);\n}\n\nbindToLifecycle\u3068\u306f\u3001RxLifecycle.bindActivity(lifecycleSubject)\u3092\u8fd4\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3001\u3053\u3053\u306b\u306f\u30ed\u30b8\u30c3\u30af\u306f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u3069\u3093\u3069\u3093\u5b9f\u88c5\u3092\u6df1\u6398\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002RxLifecycle.bindActivity\u306f\u6b21\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3067\u3059\u3002\npublic static <T> Observable.Transformer<? super T, ? extends T> bindActivity(Observable<ActivityEvent> lifecycle) {\n    return bind(lifecycle, ACTIVITY_LIFECYCLE);\n}\n\n\u3053\u308c\u3082bind\u3092\u30ea\u30bf\u30fc\u30f3\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\u3002\u3067\u306fbind\u306e\u5b9f\u88c5\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n private static <T, R> Observable.Transformer<? super T, ? extends T> bind(Observable<R> lifecycle,\n                                                      final Func1<R, R> correspondingEvents) {\n  final Observable<R> sharedLifecycle = lifecycle.share();\n  return new Observable.Transformer<T, T>() {\n      @Override\n      public Observable<T> call(Observable<T> source) {\n          return source.takeUntil(\n              Observable.combineLatest(\n                  sharedLifecycle.take(1).map(correspondingEvents),\n                  sharedLifecycle.skip(1),\n                  new Func2<R, R, Boolean>() {\n                      @Override\n                      public Boolean call(R bindUntilEvent, R lifecycleEvent) {\n                          return lifecycleEvent == bindUntilEvent;\n                      }\n                  })\n                  .takeFirst(SHOULD_COMPLETE)\n          );\n      }\n  };\n}        \n\n\u3069\u3046\u3084\u3089\u3053\u306ebind(Observable<R> lifecycle, Func1<R, R> correspondingEvents)\u306e\u5b9f\u88c5\u304c\u30b3\u30a2\u306e\u90e8\u5206\u306e\u3088\u3046\u3067\u3059\u306d\u3002\u9806\u756a\u306b\u51e6\u7406\u3092\u8ffd\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002(\u4e00\u90e8\u51e6\u7406\u3092\u7c21\u7565\u5316\u3057\u3066\u3042\u308a\u307e\u3059)\n\u307e\u305a\u3001final Observable<R> sharedLifecycle = lifecycle.share(); \u306e\u90e8\u5206\u3067\u3059\u306d\u3002\u3053\u3053\u3067\u306fHotObservable\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u306e\u691c\u51fa\u6f0f\u308c\u304c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306a\u306e\u3067\u3059\u304c\u3001\u8a73\u3057\u3044\u8a71\u306f\u7701\u7565\u3057\u307e\u3059(\u50d5\u3082\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044) \u3054\u8208\u5473\u304c\u3042\u308c\u3070\u7d20\u6674\u3089\u3057\u3044\u8a18\u4e8b\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\nreturn source.takeUntil(\n      Observable.combineLatest(\n          sharedLifecycle.take(1).map(correspondingEvents),\n          sharedLifecycle.skip(1),\n          new Func2<R, R, Boolean>() {\n              @Override\n              public Boolean call(R bindUntilEvent, R lifecycleEvent) {\n                  return lifecycleEvent == bindUntilEvent;\n              }\n          })\n          .takeFirst(SHOULD_COMPLETE)\n  );\n\n\u6b21\u306b\u3053\u306e\u672c\u4f53\u90e8\u5206\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002combineLatest\u306e\u4e2d\u8eab\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002(combineLatest\u3068\u306f\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u5f85\u3061\u5408\u308f\u305b\u3066\u3001\u95a2\u6570\u3092\u9069\u5fdc\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059)\nObservable.combineLatest(\n  sharedLifecycle.take(1).map(correspondingEvents),\n  sharedLifecycle.skip(1),\n  new Func2<R, R, Boolean>() {\n      @Override\n      public Boolean call(R bindUntilEvent, R lifecycleEvent) {\n          return lifecycleEvent == bindUntilEvent;\n      }\n});\n\nsharedLifecycle\u3068\u3044\u3046\u306e\u306f\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u3067\u3059\u306d\u3002sharedLifecycle.take(1).map(correspondingEvents) \u3067\u306f\u3001Observable\u306b\u3088\u308b\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u3068\u5bfe\u5fdc\u95a2\u4fc2\u306b\u3042\u305f\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002onCreate\u3067\u547c\u3070\u308c\u305f\u306a\u3089\u3070onDestory\u3068\u306a\u308a\u307e\u3059\u3002 sharedLifecycle.skip(1)\u306f\u30b7\u30f3\u30d7\u30eb\u30672\u3064\u76ee\u79fb\u884c\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u9806\u756a\u306b\u53d6\u5f97\u3057\u3066\u3044\u304d\u307e\u3059\u3002Func2\u306e\u5b9f\u88c5\u3067\u306f\u3001\u3053\u308c\u3089\u4e8c\u3064\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u4e00\u81f4\u3059\u308b\u304b\u78ba\u304b\u3081\u3066\u3044\u307e\u3059\u3002\nreturn source.takeUntil(\n      Observable.combineLatest(\n          Observable[\u5bfe\u5fdc\u3059\u308b\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u304c\u547c\u3070\u308c\u308b\u3068\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308bObservable]\n          .takeFirst(SHOULD_COMPLETE)\n  );\n\ntakeUntil\u306f\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u3063\u305fObservable\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\u3055\u308c\u305f\u3089\u3001\u30ec\u30b7\u30fc\u30d0\u30fc\u306eObservable\u306e\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u884c\u3092\u30b9\u30c8\u30c3\u30d7\u3055\u305b\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u3002\ntakeFirst\u306f\u5f15\u6570\u306eFunc1\u3067\u66f8\u304b\u308c\u305f\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u4e00\u5ea6\u3060\u3051\u767a\u884c\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u3002\n\u3053\u306e\u4e8c\u3064\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u5bfe\u3068\u306a\u308b\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8(onCreate\u3067\u547c\u3070\u308c\u305f\u3089onDestory)\u304c\u547c\u3070\u308c\u305f\u3089\u3001\u5143Observable(compose\u306e\u30ec\u30b7\u30fc\u30d0\u30fc)\u304b\u3089\u306e\u30a4\u30d9\u30f3\u30c8\u767a\u706b\u3092\u6b62\u3081\u308b\u3053\u3068\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u3068\u3081\ncompose\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306b\u3064\u3044\u3066\u3054\u7406\u89e3\u9802\u3051\u305f\u3067\u3057\u3087\u3046\u304b\u3002 RxJava\u3092Android\u958b\u767a\u3092\u3057\u3066\u3044\u308b\u3068RxLifecycle\u3082\u4f7f\u3044\u305f\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u5185\u90e8\u5b9f\u88c5\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u3067\u3088\u308a\u5b89\u5fc3\u3057\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3088\u306d\u3002\n\u5168\u4f53\u7684\u306b\u96d1\u306a\u30a8\u30f3\u30c8\u30ea\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u7533\u3057\u8a33\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u6642\u9593\u3092\u898b\u3064\u3051\u3066\u4fee\u6b63\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059  \n\n### TLDR\n\n* `compose`\u306f\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306e\u4e2d\u3067`Obseravble`\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u6700\u9ad8\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\n* `lift`\u3068\u306e\u9055\u3044\u306f`Obseravble`\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304b\u3069\u3046\u304b\n* `flatmap`\u3068\u306e\u9055\u3044\u306f`Obseravble`\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304b\u3069\u3046\u304b + \u5b9f\u884c\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\n* RxLifecycle\u306ftakeUntil\u3067\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u3092bind\u3057\u3066\u308b\u3002\n\n\nRxJava Advent Calendar 5\u65e5\u76ee\u306e\u4eca\u65e5\u306f\u3001`compose`\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\n`compose`\u3068\u3044\u3048\u3070\u3001\u6700\u8fd1\u3067\u306f[trello/RxLifecycle](https://github.com/trello/RxLifecycle)\u3067\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u99b4\u67d3\u307f\u306e\u3042\u308b\u65b9\u3082\u591a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002 \n`compose`\u306f[\u521d\u65e5\u306e\u30a8\u30f3\u30c8\u30ea](http://qiita.com/kazy/items/69d56c171bd4a393385c)\u3067\u7d39\u4ecb\u3057\u305f`lift`\u3068\u540c\u3058\u304fRxJava\u306e\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u8981\u7d20\u306e\u4e00\u3064\u3067\u3059\u3002\u3067\u306f\u3053\u306e\u4e8c\u3064\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u306b\u306f\u3069\u306e\u3088\u3046\u306a\u9055\u3044\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304b?\n\n### lift\u3068compose\u306e\u9055\u3044\n\nlift\u3068compose\u306e\u4f7f\u3044\u5206\u3051\u306fjavadoc\u306e\u4e2d\u306b\u6307\u91dd\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u8a72\u5f53\u7b87\u6240\u3092\u629c\u7c8b\u3067\u3059\u3002\n\n```\nIf the operator you are creating is designed to act on the individual items emitted by a source Observable, use Observable.lift(rx.Observable.Operator<? extends R, ? super T>). If your operator is designed to transform the source Observable as a whole (for instance, by applying a particular set of existing RxJava operators to it) use compose.\n```\n\n\u96d1\u306b\u8a33\u3059\u3068\u3001\n\n```\n\u3042\u306a\u305f\u304c\u4f5c\u3063\u305f\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u304c\u3001Obeservable\u304b\u3089\u653e\u51fa\u3055\u308c\u308b\u500b\u3005\u306e\u8981\u7d20\u306b\u4f5c\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001\"lift\"\u3092\u4f7f\u3046\u3079\u304d\u3067\u3059\u3002\u4e00\u65b9\u3067\u3001\n\u3042\u306a\u305f\u304c\u4f5c\u3063\u305f\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u304c\u3001Observable\u305d\u306e\u3082\u306e\u306b\u4f5c\u7528\u3059\u308b\u5834\u5408\u306b\u306f\"compose\"\u3092\u4f7f\u3046\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n```\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n`lift`\u3068`compose`\u306f\u4f3c\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u5b9f\u969b\u306b\u306f\u51fa\u6765\u308b\u3053\u3068\u304c\u7570\u306a\u308a\u307e\u3059\u3002\u8868\u306b\u307e\u3068\u3081\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n|  \u30aa\u30da\u30ec\u30fc\u30bf\u30fc  | \u76f4\u63a5Observable\u3092\u89e6\u308c\u308b\u304b | Observable\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304b |\n|:-----------|:-----------------------|:--------------------------------|\n| compose    |        \u51fa\u6765\u308b           |     \u51fa\u6765\u306a\u3044                      |\n| lift       |      \u51fa\u6765\u306a\u3044           |     \u51fa\u6765\u308b                        |\n\n`compose`\u306f\u76f4\u63a5\u5024\u306b\u89e6\u308c\u308b\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u306e\u3067\u3001`map`\u306e\u3088\u3046\u306a\u51e6\u7406\u306f\u884c\u3048\u307e\u305b\u3093\u3002\n\u4e00\u65b9\u3067`compose`\u306fObservable\u306b\u76f4\u63a5\u89e6\u308c\u308b\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002`RxlifeCycle`\u306f\u3053\u306e\u7279\u6027\u3092\u5229\u7528\u3057\u3066\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u3092Observable\u306b\u5bfe\u3057\u3066bind\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u306d\u3002\n\n### compose\u306e\u4ed5\u7d44\u307f\n\n\u3067\u306f\u5b9f\u969b\u306b`compose`\u304c\u3069\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u306e\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002`compose`\u306e\u5b9f\u88c5\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```java\npublic <R> Observable<R> compose(Transformer<? super T, ? extends R> transformer) {\n    return ((Transformer<T, R>) transformer).call(this);\n}\n```\n\n`Transformer<? super T, ? extends R>`\u3092\u5f15\u6570\u306b\u3068\u3063\u3066\u3001Transformer\u306b\u3088\u308b\u5909\u63db\u3092\u81ea\u5206\u81ea\u8eab\u306b\u9069\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u306d\u3002\n\n\u3067\u306f\u6b21\u306b\u5f15\u6570\u306b\u767b\u5834\u3059\u308b`Transformer`\u306e\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```java\npublic interface Transformer<T, R> extends Func1<Observable<T>, Observable<R>> {\n    // cover for generics insanity\n}\n```\n\nTransformer\u306f\u3001`Obseravble<T>`\u3092\u53d7\u3051\u53d6\u308a`Observable<R>`\u3092\u8fd4\u3059`Func1`\u306e\u3088\u3046\u3067\u3059\u306d\u3002 \u3053\u3061\u3089\u3082\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3057\u305f\u3002\n\n\u3064\u307e\u308a`Transformer`\u3068\u306f \u300cObservable\u3092\u53d7\u3051\u53d6\u308a\u3001\u52a0\u5de5\u3057\u3066\u3001\u8fd4\u3059\u95a2\u6570\u300d \u306a\u306e\u3067\u3001`compose`\u3068\u306f **\u300cObservable\u304c\u81ea\u5206\u81ea\u8eab\u306b\u95a2\u6570\u3092\u9069\u5fdc\u3059\u308b\u305f\u3081\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u300d** \u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002 `lift`\u306e\u5b9f\u88c5\u3088\u308a\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u308f\u304b\u308a\u3084\u3059\u3044\u5370\u8c61\u3067\u3059\u306d\u3002 \n\n### compose\u3068flatmap\u306e\u9055\u3044\u306b\u3064\u3044\u3066\n\nRxJava\u306e\u51e6\u7406\u3067\u3088\u304f\u4f7f\u3046\u3082\u306e\u3067`flatmap`\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3082`Observable`\u3092\u8fd4\u3059\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u304c\u3001\u3069\u306e\u3088\u3046\u306a\u9055\u3044\u304c\u3042\u308b\u3093\u3067\u3057\u3087\u3046\u304b\u3002\n\n|  \u30aa\u30da\u30ec\u30fc\u30bf\u30fc  | \u547c\u3070\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0                  | \u8fd4\u308a\u5024                  | \u76f4\u63a5Observable\u3092\u89e6\u308c\u308b\u304b| Observable\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304b |\n|:-----------    |:----------------------- |:----------------------- |:----------------------- |:--------------------------------|\n| compose        |        subscribe\u3055\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0(\u4e00\u5ea6\u3060\u3051)       |        Observable       |        \u51fa\u6765\u308b           |     \u51fa\u6765\u306a\u3044                      |\n| flatmap        |      onNext\u304c\u547c\u3070\u308c\u308b\u3054\u3068(\u8907\u6570\u56de)         |      Observable         |      \u51fa\u6765\u306a\u3044           |     \u51fa\u6765\u308b                        |\n\n\n`compose`\u3068`flatmap`\u3082\u3068\u3066\u3082\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u3089\u3082\u7528\u9014\u306f\u5168\u7136\u9055\u3044\u307e\u3059\u3002\n\n`flatmap`\u306f`Observable`\u306e\u4e2d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u306e\u5024\u3092\u5143\u306b\u65b0\u3057\u3044Observable\u3092\u4f5c\u308a\u30ea\u30bf\u30fc\u30f3\u3057\u307e\u3059\u3002\u6ce8\u76ee\u3059\u3079\u304d\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u5f15\u6570\u3068\u8fd4\u308a\u5024\u306e`Observable`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7570\u306a\u308b\u70b9\u3067\u3059\u3002\u3053\u308c\u306f`flatmap`\u306f\u5143\u306e`Observable`\u81ea\u4f53\u306b\u306f\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u4e8b\u304c\u7406\u7531\u3067\u3059\u3002\n\u4e00\u65b9\u3067\u3001`compose`\u306f`Observable`\u306e\u4e2d\u306e\u5024\u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u5143\u306e`Observable`\u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u306e\u3067\u3001\u5143\u306e`Observable`\u3092\u52a0\u5de5\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\n\u3064\u307e\u308a`compose`\u306e\u5834\u5408\u306f\u3001\u4e00\u822c\u7684\u306b\u306f\u5f15\u6570\u3068\u8fd4\u308a\u5024\u306e`Observable`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002[^1]\n\n[^1] Transformer\u306f\u5225\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eObservable\u3092\u8fd4\u3059\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u60f3\u5b9a\u3055\u308c\u305f\u4f7f\u3044\u65b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n### RxLifeCycle\u306b\u3064\u3044\u3066\n\n\u3067\u306f\u5192\u982d\u3067\u7d39\u4ecb\u3057\u305f[trello/RxLifecycle](https://github.com/trello/RxLifecycle)\u306f\u3069\u306e\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3067\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\u5b9f\u88c5\u3092\u8ffd\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nRxlifecycle\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u3067\u3059\u3002\n\n```java\npublic class MyActivity extends RxActivity {\n    @Override\n    public void onResume() {\n        super.onResume();\n        myObservable\n            .compose(bindToLifecycle())\n            .subscribe();\n    }\n}\n```\n\n`compose`\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u306d\u3002 \u5f15\u6570\u306b\u6e21\u3055\u305b\u308c\u3066\u3044\u308b`bindToLifeCycle`\u3068\u306f\u306a\u3093\u3067\u3057\u3087\u3046\u304b\u3002\u5b9f\u88c5\u3092\u8ffd\u3063\u3066\u307f\u307e\u3059\u3002\n\n```java\n@Override\npublic final <T> Observable.Transformer<? super T, ? extends T> bindToLifecycle() {\n    return RxLifecycle.bindActivity(lifecycleSubject);\n}\n```    \n\n`bindToLifecycle`\u3068\u306f\u3001`RxLifecycle.bindActivity(lifecycleSubject)`\u3092\u8fd4\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3001\u3053\u3053\u306b\u306f\u30ed\u30b8\u30c3\u30af\u306f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u3069\u3093\u3069\u3093\u5b9f\u88c5\u3092\u6df1\u6398\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002`RxLifecycle.bindActivity`\u306f\u6b21\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3067\u3059\u3002\n\n```java\npublic static <T> Observable.Transformer<? super T, ? extends T> bindActivity(Observable<ActivityEvent> lifecycle) {\n    return bind(lifecycle, ACTIVITY_LIFECYCLE);\n}\n```\n\n\u3053\u308c\u3082`bind`\u3092\u30ea\u30bf\u30fc\u30f3\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\u3002\u3067\u306f`bind`\u306e\u5b9f\u88c5\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n    \n```java\n private static <T, R> Observable.Transformer<? super T, ? extends T> bind(Observable<R> lifecycle,\n                                                      final Func1<R, R> correspondingEvents) {\n  final Observable<R> sharedLifecycle = lifecycle.share();\n  return new Observable.Transformer<T, T>() {\n      @Override\n      public Observable<T> call(Observable<T> source) {\n          return source.takeUntil(\n              Observable.combineLatest(\n                  sharedLifecycle.take(1).map(correspondingEvents),\n                  sharedLifecycle.skip(1),\n                  new Func2<R, R, Boolean>() {\n                      @Override\n                      public Boolean call(R bindUntilEvent, R lifecycleEvent) {\n                          return lifecycleEvent == bindUntilEvent;\n                      }\n                  })\n                  .takeFirst(SHOULD_COMPLETE)\n          );\n      }\n  };\n}        \n```                                    \n\n\u3069\u3046\u3084\u3089\u3053\u306e`bind(Observable<R> lifecycle, Func1<R, R> correspondingEvents)`\u306e\u5b9f\u88c5\u304c\u30b3\u30a2\u306e\u90e8\u5206\u306e\u3088\u3046\u3067\u3059\u306d\u3002\u9806\u756a\u306b\u51e6\u7406\u3092\u8ffd\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002(\u4e00\u90e8\u51e6\u7406\u3092\u7c21\u7565\u5316\u3057\u3066\u3042\u308a\u307e\u3059)\n\n\u307e\u305a\u3001`final Observable<R> sharedLifecycle = lifecycle.share();` \u306e\u90e8\u5206\u3067\u3059\u306d\u3002\u3053\u3053\u3067\u306fHotObservable\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u306e\u691c\u51fa\u6f0f\u308c\u304c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306a\u306e\u3067\u3059\u304c\u3001\u8a73\u3057\u3044\u8a71\u306f\u7701\u7565\u3057\u307e\u3059(\u50d5\u3082\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044) \u3054\u8208\u5473\u304c\u3042\u308c\u3070[\u7d20\u6674\u3089\u3057\u3044\u8a18\u4e8b](http://qiita.com/toRisouP/items/f6088963037bfda658d3)\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n```java\nreturn source.takeUntil(\n      Observable.combineLatest(\n          sharedLifecycle.take(1).map(correspondingEvents),\n          sharedLifecycle.skip(1),\n          new Func2<R, R, Boolean>() {\n              @Override\n              public Boolean call(R bindUntilEvent, R lifecycleEvent) {\n                  return lifecycleEvent == bindUntilEvent;\n              }\n          })\n          .takeFirst(SHOULD_COMPLETE)\n  );\n```\n\n\u6b21\u306b\u3053\u306e\u672c\u4f53\u90e8\u5206\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002`combineLatest`\u306e\u4e2d\u8eab\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002(`combineLatest`\u3068\u306f\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u5f85\u3061\u5408\u308f\u305b\u3066\u3001\u95a2\u6570\u3092\u9069\u5fdc\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059)\n\n```java\nObservable.combineLatest(\n  sharedLifecycle.take(1).map(correspondingEvents),\n  sharedLifecycle.skip(1),\n  new Func2<R, R, Boolean>() {\n      @Override\n      public Boolean call(R bindUntilEvent, R lifecycleEvent) {\n          return lifecycleEvent == bindUntilEvent;\n      }\n});\n```                        \n\n`sharedLifecycle`\u3068\u3044\u3046\u306e\u306f\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u3067\u3059\u306d\u3002`sharedLifecycle.take(1).map(correspondingEvents)` \u3067\u306f\u3001Observable\u306b\u3088\u308b\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u3068\u5bfe\u5fdc\u95a2\u4fc2\u306b\u3042\u305f\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002`onCreate`\u3067\u547c\u3070\u308c\u305f\u306a\u3089\u3070`onDestory`\u3068\u306a\u308a\u307e\u3059\u3002 `sharedLifecycle.skip(1)`\u306f\u30b7\u30f3\u30d7\u30eb\u30672\u3064\u76ee\u79fb\u884c\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u9806\u756a\u306b\u53d6\u5f97\u3057\u3066\u3044\u304d\u307e\u3059\u3002`Func2`\u306e\u5b9f\u88c5\u3067\u306f\u3001\u3053\u308c\u3089\u4e8c\u3064\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u4e00\u81f4\u3059\u308b\u304b\u78ba\u304b\u3081\u3066\u3044\u307e\u3059\u3002\n\n```java\nreturn source.takeUntil(\n      Observable.combineLatest(\n          Observable[\u5bfe\u5fdc\u3059\u308b\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u304c\u547c\u3070\u308c\u308b\u3068\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308bObservable]\n          .takeFirst(SHOULD_COMPLETE)\n  );\n```\n\n`takeUntil`\u306f\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u3063\u305f`Observable`\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\u3055\u308c\u305f\u3089\u3001\u30ec\u30b7\u30fc\u30d0\u30fc\u306eObservable\u306e\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u884c\u3092\u30b9\u30c8\u30c3\u30d7\u3055\u305b\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u3002\n`takeFirst`\u306f\u5f15\u6570\u306eFunc1\u3067\u66f8\u304b\u308c\u305f\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u4e00\u5ea6\u3060\u3051\u767a\u884c\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u3002\n\u3053\u306e\u4e8c\u3064\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u5bfe\u3068\u306a\u308b\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8(`onCreate`\u3067\u547c\u3070\u308c\u305f\u3089`onDestory`)\u304c\u547c\u3070\u308c\u305f\u3089\u3001\u5143Observable(compose\u306e\u30ec\u30b7\u30fc\u30d0\u30fc)\u304b\u3089\u306e\u30a4\u30d9\u30f3\u30c8\u767a\u706b\u3092\u6b62\u3081\u308b\u3053\u3068\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\n\n### \u307e\u3068\u3081\n\n`compose`\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306b\u3064\u3044\u3066\u3054\u7406\u89e3\u9802\u3051\u305f\u3067\u3057\u3087\u3046\u304b\u3002 RxJava\u3092Android\u958b\u767a\u3092\u3057\u3066\u3044\u308b\u3068RxLifecycle\u3082\u4f7f\u3044\u305f\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u5185\u90e8\u5b9f\u88c5\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u3067\u3088\u308a\u5b89\u5fc3\u3057\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3088\u306d\u3002\n\u5168\u4f53\u7684\u306b\u96d1\u306a\u30a8\u30f3\u30c8\u30ea\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u7533\u3057\u8a33\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u6642\u9593\u3092\u898b\u3064\u3051\u3066\u4fee\u6b63\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059 :bow: \n", "tags": ["Android", "RxJava"]}