{"context": " More than 1 year has passed since last update.\u4eca\u56de\u3001\u4eca\u307e\u3067\u767a\u751f\u3057\u306a\u304b\u3063\u305f\u4e8b\u8c61\u3068\u305d\u308c\u306e\u89e3\u6c7a\u306b\u81f3\u308b\u307e\u3067\u306e\u30c7\u30d0\u30c3\u30b0\u3092\n\u540c\u69d8\u306e\u4e8b\u8c61\u304c\u8d77\u304d\u305f\u969b\u306b\u30b9\u30d4\u30fc\u30c9\u611f\u3092\u6301\u3063\u3066\u89e3\u6c7a\u51fa\u6765\u308b\u3088\u3046\u306b\u7e8f\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4e8b\u8c61\n\n\ndeploy gate\u3067\u914d\u5e03\u3057\u305f\u30a2\u30d7\u30ea\u3092\u78ba\u8a8d\u4e2d\u306b\u4eca\u307e\u3067\u6b63\u5e38\u306b\u8d77\u52d5\u3057\u3066\u3044\u305f\u4e3b\u8981\u6a5f\u80fd\u306e\u307b\u307c\u5168\u3066\u306b\u304a\u3044\u3066\u6025\u306b\u843d\u3061\u308b\u4e8b\u8c61\u304c\u767a\u751f\u3002\n\n\n\u72b6\u614b\n\n\u843d\u3061\u308b\u5834\u5408\u3068\u843d\u3061\u306a\u3044\u5834\u5408\u306e\u5dee\u5206\u304c\u5206\u304b\u308a\u3065\u3089\u304f\u3001\u898f\u5247\u6027\u3082\u7121\u3044\u72b6\u614b\u3002\niOS7,iOS8\u306a\u3069\u306eOS\u306b\u3088\u308b\u554f\u984c\u306f\u306a\u304f\u3069\u3061\u3089\u3067\u3082\u4e8b\u8c61\u304c\u767a\u751f\u3059\u308b\u3002\n\n\n\u89e3\u6c7a\u307e\u3067\u306e\u6240\u8981\u6642\u9593\n\u7d041h \n\n\u30c7\u30d0\u30c3\u30b0\n\n\n\u4e8b\u8c61\u306e\u518d\u73fe\u78ba\u8a8d\n\n\ndeploy gate\u3067\u914d\u5e03\u3057\u305f\u30a2\u30d7\u30ea\u306e\u307f\u8d77\u304d\u308b\u4e8b\u8c61\u304b\u305d\u3046\u3067\u306a\u3044\u306e\u304b\u306e\u4e8b\u8c61\u5207\u308a\u5206\u3051\u3092\u884c\u3046\u3002\n\u958b\u767a\u74b0\u5883\u3067\u3082\u518d\u73fe\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\u3069\u306e\u4e8b\u8c61\u3067\u767a\u751f\u3059\u308b\u306e\u304b\u4e8b\u8c61\u306e\u6d17\u3044\u51fa\u3057\u3002\u5927\u4f53\u300110\u30d1\u30bf\u30fc\u30f3\u307e\u3067\u51fa\u305f\u6bb5\u968e\u3067STOP\u3002\n\n\n\n\u958b\u767a\u74b0\u5883\u3067\u30ed\u30b0\u78ba\u8a8d\n\n\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\u76f4\u524d\u307e\u3067\u51fa\u529b\u3057\u3066\u3044\u305f\u30ed\u30b0\u304b\u3089URL\u3001image_path\u306b\u554f\u984c\u306a\u3044\u304b\u78ba\u8a8d\u3002\n\u3053\u306e\u6642\u70b9\u3067not found\u306b\u306a\u308b\u753b\u50cf\u3068\u305d\u3046\u3067\u306a\u3044\u753b\u50cf\u304c\u3042\u308b\u3068\u3053\u308d\u307e\u3067\u3057\u304b\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3002\n\u539f\u56e0\u306fimage_path\u304cnot found\u306b\u306a\u3063\u305f\u5834\u5408\u306e\u5b9f\u88c5\u6f0f\u308c\u3068\u7279\u5b9a\u3002\n\u3053\u306e\u6642\u70b9\u3067\u753b\u50cf\u306e\u547c\u3073\u51fa\u3057\u5143\u306f\u753b\u50cf\u306e\u975e\u540c\u671f\u51e6\u7406\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n\n\n\u753b\u50cf\u306e\u975e\u540c\u671f\u51e6\u7406\u304c\u539f\u56e0\u3067\u3042\u3063\u305f\u305f\u3081\u3001optional\u578b\u3092\u96c6\u4e2d\u7684\u306b\u8abf\u67fb\n\n\u3053\u306e\u6642\u70b9\u3067\u306foptional\u578b\u306e\u300clet cache = UIImage(data: data)!\u300d\u304c\u539f\u56e0\u3068\u3044\u3046\u3068\u3053\u308d\u307e\u3067\u3057\u304b\u5206\u304b\u3063\u3066\u306a\u3044\u3002\n\u3053\u3053\u304b\u3089\u30b0\u30b0\u308a\u59cb\u3081\u308b\u3002\noptional\u578b\u306b\u95a2\u3059\u308b\u60c5\u5831\u306b\u306fhit\u3057\u3001\u8a66\u3057\u3066\u307f\u308b\u304c\u4e8b\u8c61\u304c\u89e3\u6c7a\u3055\u308c\u306a\u3044\u3002\n\u30b0\u30b0\u308b\u306e\u3092\u6b62\u3081\u3066optional\u578b\u306e\u7406\u89e3\u3078\u30b7\u30d5\u30c8\u3002\n\u539f\u56e0\u3092\u7279\u5b9a\u3002\n\n\n\n4.\u30b3\u30fc\u30c9\u4fee\u6b63\n\noptional\u578b\u3067\u3042\u308blet cache\u304c\u539f\u56e0\u3068\u5206\u304b\u308a\u3001\u305d\u308c\u306b\u6e96\u3058\u305f\u5185\u5bb9\u3067\u5bfe\u5fdc\u3002\u8a73\u7d30\u306f\u5f8c\u8ff0\u306e\u4fee\u6b63\u524d\u306e\u30bd\u30fc\u30b9\u3001\u4fee\u6b63\u5f8c\u306e\u30bd\u30fc\u30b9\u3092\u53c2\u7167\u3002\n\n5.\u4e8b\u8c61\u304c\u89e3\u6c7a\u3055\u308c\u305f\u304b\u78ba\u8a8d\n\n\u958b\u767a\u74b0\u5883\u3067\u4e8b\u8c61\u304c\u89e3\u6c7a\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\ndeploy gate\u3067\u518d\u914d\u5e03\u3057\u4e8b\u8c61\u304c\u89e3\u6c7a\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\nfatal error: unexpectedly found nil while unwrapping an Optional value\n\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u753b\u9762\u30ad\u30e3\u30d7\u30c1\u30e3(\u30b3\u30f3\u30bd\u30fc\u30eb\u90e8\u5206\u306e\u307f\u62bd\u51fa)\n\n\n\u975e\u540c\u671f\u5074\u306e\u51e6\u7406\n\nUtility.swif\n// \u975e\u540c\u671f\u51e6\u7406\u306e\u30e9\u30c3\u30d1\u30fc\nstruct Async {\n    // \u975e\u540c\u671f\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\n    static func runAsyncThread(block: () -> ()) {\n        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), block)\n    }\n\n    // \u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\n    static func runMainThread(block: () -> ()) {\n        dispatch_async(dispatch_get_main_queue(), block)\n    }\n}\n\n\n\n\u4fee\u6b63\u524d\u306e\u30bd\u30fc\u30b9\uff1a\n\n\u975e\u540c\u671f\u306e\u547c\u3073\u51fa\u3057\u5074\u306e\u51e6\u7406\n\nImageManager.swift\nclass ImageManager {\n    class var sharedInstance: ImageManager {\n        struct Singleton {\n            static let instance = ImageManager()\n        }\n\n        return Singleton.instance\n    }\n\n    // \u753b\u50cf\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\u914d\u5217\n    private var imageCache: Dictionary<String, UIImage> = [:]\n\n    // \u753b\u50cf\u3092\u53d6\u5f97\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\n    func fetch(imageURL: String, callback: UIImage -> ()) {\n        Utility.debug(\"string\\(imageURL)\")\n        let noImage = \"http://g08m11.co.jp/images/noimage.jpg\"\n        // \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\n        if let cache = self.imageCache[imageURL] {\n            Async.runMainThread({\n                callback(cache)\n            })\n\n            // \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\n        } else {\n            if let imgURL = NSURL(string: imageURL) {\n\n                let request: NSURLRequest = NSURLRequest(URL: imgURL)\n\n                Async.runAsyncThread({\n                    NSURLConnection.sendAsynchronousRequest(request, queue: NSOperationQueue.mainQueue(), completionHandler: {(response: NSURLResponse!,data: NSData!, error: NSError!) -> Void in\n                        if error == nil {\n                            let cache = UIImage(data: data)!\n\n                            // Store the image in to our cache\n                            self.imageCache[imageURL] = cache\n\n                            Async.runMainThread({\n                                callback(cache)\n                            })\n                        } else {\n                            Utility.debug(\"Image Cache Error: \\(error.localizedDescription)\")\n                        }\n                    })\n                })\n\n            } else {\n                Utility.debug(\"Image Cache Error: URL is nil\")\n                let noImageCache = self.imageCache[noImage]\n\n                Async.runMainThread({\n                    callback(noImageCache!)\n                })\n            }\n        }\n    }\n}\n\n\n\n\n\u4fee\u6b63\u5f8c\u306e\u30bd\u30fc\u30b9\n\n\u975e\u540c\u671f\u306e\u547c\u3073\u51fa\u3057\u5074\u306e\u51e6\u7406\n\nImageManager.swift\nclass ImageManager {\n    class var sharedInstance: ImageManager {\n        struct Singleton {\n            static let instance = ImageManager()\n        }\n\n        return Singleton.instance\n    }\n\n    // \u753b\u50cf\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\u914d\u5217\n    private var imageCache: Dictionary<String, UIImage> = [:]\n\n    // \u753b\u50cf\u3092\u53d6\u5f97\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\n    func fetch(imageURL: String, callback: UIImage -> ()) {\n        let noImage = \"http://g08m11.co.jp/images/noimage.jpg\"\n        // \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\n        if let cache = self.imageCache[imageURL] {\n            Async.runMainThread({\n                callback(cache)\n            })\n\n            // \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\n        } else {\n            if let imgURL = NSURL(string: imageURL) {\n                Utility.debug(\"string\\(imageURL)\")\n\n                let request: NSURLRequest = NSURLRequest(URL: imgURL)\n\n                Async.runAsyncThread({\n                    NSURLConnection.sendAsynchronousRequest(request, queue: NSOperationQueue.mainQueue(), completionHandler: {(response: NSURLResponse!,data: NSData!, error: NSError!) -> Void in\n                        if error == nil {\n                            if let cache = UIImage(data: data){\n                                // Store the image in to our cache\n                                self.imageCache[imageURL] = cache\n\n                                Async.runMainThread({\n                                    callback(cache)\n                                })\n\n                            }\n\n                        } else {\n                            Utility.debug(\"Image Cache Error: \\(error.localizedDescription)\")\n                        }\n                    })\n                })\n\n            } else {\n                Utility.debug(\"Image Cache Error: URL is nil\")\n                let noImageCache = self.imageCache[noImage]\n\n                Async.runMainThread({\n                    callback(noImageCache!)\n                })\n            }\n        }\n    }\n}\n\n\n\n\n\n\u4fee\u6b63\u70b9\u629c\u7c8b\n\n\u4fee\u6b63\u524d\n                        if error == nil {\n                            let cache = UIImage(data: data)!\n\n                            // Store the image in to our cache\n                            self.imageCache[imageURL] = cache\n\n                            Async.runMainThread({\n                                callback(cache)\n                            })\n                        } else {\n                            Utility.debug(\"Image Cache Error: \\(error.localizedDescription)\")\n                        }\n                    })\n                })\n\n\n\n\n\u4fee\u6b63\u5f8c\n\n                        if error == nil {\n                            if let cache = UIImage(data: data){\n                                // Store the image in to our cache\n                                self.imageCache[imageURL] = cache\n\n                                Async.runMainThread({\n                                    callback(cache)\n                                })\n\n                            }\n\n                        } else {\n                            Utility.debug(\"Image Cache Error: \\(error.localizedDescription)\")\n                        }\n                    })\n                })\n\n\n\n\u8981\u306f\u300clet cache = UIImage(data: data)!\u300d\u3068\u6c7a\u3081\u6253\u3061\u3067\u5165\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u4f7f\u3063\u305f\u3068\u3044\u3046\u4fee\u6b63\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u8ab2\u984c\n\n\u73fe\u6642\u70b9\u3067\u306fnot found\u306e\u753b\u50cf\u306b\u5bfe\u3057\u3066no_image\u306a\u3069\u306e\u753b\u50cf\u8868\u793a\u5bfe\u5fdc\u304c\u3067\u304d\u3066\u304a\u3089\u305a\u7a7a\u767d\u8868\u793a\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u3092\u4e0b\u3052\u3066\u3057\u307e\u3046\u3002\u3002\u3002\n\n\n\u5b66\u3073\n\noptional\u578b\u306enil\u30b1\u30fc\u30b9\u306fnil\u305d\u306e\u307e\u307e\u306f\u3082\u3061\u308d\u3093\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u3082nil\u306b\u306a\u308b\u30b1\u30fc\u30b9\u3092\u8003\u616e\u3057\u3066\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3060\u3051\u3067\u306a\u304f\u6b63\u5e38\u306b\u6a5f\u80fd\u3059\u308b\u3053\u3068\u304c\u78ba\u8a8d\u6e08(\u30c6\u30b9\u30c8\u6e08)\u3067\u3082\u6642\u9593\u304c\u7d4c\u3066\u3070\u30d0\u30b0\u3063\u305f\u308a\u3059\u308b\u3053\u3068\u3092\u5ff5\u982d\u306b\u304a\u3044\u3066\u958b\u767a\u3092\u9032\u3081\u308b\u3002\n\u30c7\u30d0\u30c3\u30b0\u3092\u8a00\u8a9e\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u81ea\u5206\u306e\u601d\u8003\u304c\u5c11\u3057\u6574\u7406\u3055\u308c\u305f\u6c17\u304c\u3059\u308b\u3002(\u307e\u3060\u307e\u3060\u6539\u5584\u306e\u4f59\u5730\u304c\u3042\u308b\u306e\u3067\u3082\u3063\u3068\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3057\u3066\u3044\u304d\u305f\u3044\u3002)\n\n\n\u540c\u69d8\u306e\u30ed\u30b8\u30c3\u30af\u3067\u753b\u50cf\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u5bfe\u5fdc\u3092\u3055\u308c\u3066\u3044\u308b\u65b9\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u4eca\u56de\u3001\u4eca\u307e\u3067\u767a\u751f\u3057\u306a\u304b\u3063\u305f\u4e8b\u8c61\u3068\u305d\u308c\u306e\u89e3\u6c7a\u306b\u81f3\u308b\u307e\u3067\u306e\u30c7\u30d0\u30c3\u30b0\u3092\n\u540c\u69d8\u306e\u4e8b\u8c61\u304c\u8d77\u304d\u305f\u969b\u306b\u30b9\u30d4\u30fc\u30c9\u611f\u3092\u6301\u3063\u3066\u89e3\u6c7a\u51fa\u6765\u308b\u3088\u3046\u306b\u7e8f\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n## \u4e8b\u8c61\n- [deploy gate](https://deploygate.com/)\u3067\u914d\u5e03\u3057\u305f\u30a2\u30d7\u30ea\u3092\u78ba\u8a8d\u4e2d\u306b\u4eca\u307e\u3067\u6b63\u5e38\u306b\u8d77\u52d5\u3057\u3066\u3044\u305f\u4e3b\u8981\u6a5f\u80fd\u306e\u307b\u307c\u5168\u3066\u306b\u304a\u3044\u3066\u6025\u306b\u843d\u3061\u308b\u4e8b\u8c61\u304c\u767a\u751f\u3002\n\n## \u72b6\u614b\n- \u843d\u3061\u308b\u5834\u5408\u3068\u843d\u3061\u306a\u3044\u5834\u5408\u306e\u5dee\u5206\u304c\u5206\u304b\u308a\u3065\u3089\u304f\u3001\u898f\u5247\u6027\u3082\u7121\u3044\u72b6\u614b\u3002\n- iOS7,iOS8\u306a\u3069\u306eOS\u306b\u3088\u308b\u554f\u984c\u306f\u306a\u304f\u3069\u3061\u3089\u3067\u3082\u4e8b\u8c61\u304c\u767a\u751f\u3059\u308b\u3002\n\n\n## \u89e3\u6c7a\u307e\u3067\u306e\u6240\u8981\u6642\u9593\n\u7d041h \n\n## \u30c7\u30d0\u30c3\u30b0\n 1. \u4e8b\u8c61\u306e\u518d\u73fe\u78ba\u8a8d\n   - [deploy gate](https://deploygate.com/)\u3067\u914d\u5e03\u3057\u305f\u30a2\u30d7\u30ea\u306e\u307f\u8d77\u304d\u308b\u4e8b\u8c61\u304b\u305d\u3046\u3067\u306a\u3044\u306e\u304b\u306e\u4e8b\u8c61\u5207\u308a\u5206\u3051\u3092\u884c\u3046\u3002\n   - \u958b\u767a\u74b0\u5883\u3067\u3082\u518d\u73fe\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n   - \u3069\u306e\u4e8b\u8c61\u3067\u767a\u751f\u3059\u308b\u306e\u304b\u4e8b\u8c61\u306e\u6d17\u3044\u51fa\u3057\u3002\u5927\u4f53\u300110\u30d1\u30bf\u30fc\u30f3\u307e\u3067\u51fa\u305f\u6bb5\u968e\u3067STOP\u3002\n\n\n 2. \u958b\u767a\u74b0\u5883\u3067\u30ed\u30b0\u78ba\u8a8d\n   - \u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n   - \u76f4\u524d\u307e\u3067\u51fa\u529b\u3057\u3066\u3044\u305f\u30ed\u30b0\u304b\u3089URL\u3001image_path\u306b\u554f\u984c\u306a\u3044\u304b\u78ba\u8a8d\u3002\n   - \u3053\u306e\u6642\u70b9\u3067not found\u306b\u306a\u308b\u753b\u50cf\u3068\u305d\u3046\u3067\u306a\u3044\u753b\u50cf\u304c\u3042\u308b\u3068\u3053\u308d\u307e\u3067\u3057\u304b\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3002\n   - \u539f\u56e0\u306fimage_path\u304cnot found\u306b\u306a\u3063\u305f\u5834\u5408\u306e\u5b9f\u88c5\u6f0f\u308c\u3068\u7279\u5b9a\u3002\n   - \u3053\u306e\u6642\u70b9\u3067\u753b\u50cf\u306e\u547c\u3073\u51fa\u3057\u5143\u306f\u753b\u50cf\u306e\u975e\u540c\u671f\u51e6\u7406\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n       \n 3. \u753b\u50cf\u306e\u975e\u540c\u671f\u51e6\u7406\u304c\u539f\u56e0\u3067\u3042\u3063\u305f\u305f\u3081\u3001optional\u578b\u3092\u96c6\u4e2d\u7684\u306b\u8abf\u67fb\n   - \u3053\u306e\u6642\u70b9\u3067\u306foptional\u578b\u306e\u300clet cache = UIImage(data: data)!\u300d\u304c\u539f\u56e0\u3068\u3044\u3046\u3068\u3053\u308d\u307e\u3067\u3057\u304b\u5206\u304b\u3063\u3066\u306a\u3044\u3002\n   - \u3053\u3053\u304b\u3089\u30b0\u30b0\u308a\u59cb\u3081\u308b\u3002\n   - optional\u578b\u306b\u95a2\u3059\u308b\u60c5\u5831\u306b\u306fhit\u3057\u3001\u8a66\u3057\u3066\u307f\u308b\u304c\u4e8b\u8c61\u304c\u89e3\u6c7a\u3055\u308c\u306a\u3044\u3002\n   - \u30b0\u30b0\u308b\u306e\u3092\u6b62\u3081\u3066optional\u578b\u306e\u7406\u89e3\u3078\u30b7\u30d5\u30c8\u3002\n   - \u539f\u56e0\u3092\u7279\u5b9a\u3002\n\n4.\u30b3\u30fc\u30c9\u4fee\u6b63\n\n   - optional\u578b\u3067\u3042\u308blet cache\u304c\u539f\u56e0\u3068\u5206\u304b\u308a\u3001\u305d\u308c\u306b\u6e96\u3058\u305f\u5185\u5bb9\u3067\u5bfe\u5fdc\u3002\u8a73\u7d30\u306f\u5f8c\u8ff0\u306e\u4fee\u6b63\u524d\u306e\u30bd\u30fc\u30b9\u3001\u4fee\u6b63\u5f8c\u306e\u30bd\u30fc\u30b9\u3092\u53c2\u7167\u3002\n\n\n5.\u4e8b\u8c61\u304c\u89e3\u6c7a\u3055\u308c\u305f\u304b\u78ba\u8a8d\n\n   - \u958b\u767a\u74b0\u5883\u3067\u4e8b\u8c61\u304c\u89e3\u6c7a\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3002\n   - [deploy gate](https://deploygate.com/)\u3067\u518d\u914d\u5e03\u3057\u4e8b\u8c61\u304c\u89e3\u6c7a\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n\n\n\n## \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\n\n```\nfatal error: unexpectedly found nil while unwrapping an Optional value\n```\n\n## \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u753b\u9762\u30ad\u30e3\u30d7\u30c1\u30e3(\u30b3\u30f3\u30bd\u30fc\u30eb\u90e8\u5206\u306e\u307f\u62bd\u51fa)\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-04-18 18.19.24.png](https://qiita-image-store.s3.amazonaws.com/0/15812/382c487b-e84a-ac15-d405-3dac08498da9.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-04-18 18.19.24.png\")\n\n\n\n\n### \u975e\u540c\u671f\u5074\u306e\u51e6\u7406\n\n```Utility.swif\n// \u975e\u540c\u671f\u51e6\u7406\u306e\u30e9\u30c3\u30d1\u30fc\nstruct Async {\n    // \u975e\u540c\u671f\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\n    static func runAsyncThread(block: () -> ()) {\n        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), block)\n    }\n\n    // \u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\n    static func runMainThread(block: () -> ()) {\n        dispatch_async(dispatch_get_main_queue(), block)\n    }\n}\n```\n\n## \u4fee\u6b63\u524d\u306e\u30bd\u30fc\u30b9\uff1a\n\n### \u975e\u540c\u671f\u306e\u547c\u3073\u51fa\u3057\u5074\u306e\u51e6\u7406\n\n````ImageManager.swift\nclass ImageManager {\n    class var sharedInstance: ImageManager {\n        struct Singleton {\n            static let instance = ImageManager()\n        }\n\n        return Singleton.instance\n    }\n\n    // \u753b\u50cf\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\u914d\u5217\n    private var imageCache: Dictionary<String, UIImage> = [:]\n\n    // \u753b\u50cf\u3092\u53d6\u5f97\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\n    func fetch(imageURL: String, callback: UIImage -> ()) {\n        Utility.debug(\"string\\(imageURL)\")\n        let noImage = \"http://g08m11.co.jp/images/noimage.jpg\"\n        // \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\n        if let cache = self.imageCache[imageURL] {\n            Async.runMainThread({\n                callback(cache)\n            })\n\n            // \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\n        } else {\n            if let imgURL = NSURL(string: imageURL) {\n\n                let request: NSURLRequest = NSURLRequest(URL: imgURL)\n\n                Async.runAsyncThread({\n                    NSURLConnection.sendAsynchronousRequest(request, queue: NSOperationQueue.mainQueue(), completionHandler: {(response: NSURLResponse!,data: NSData!, error: NSError!) -> Void in\n                        if error == nil {\n                            let cache = UIImage(data: data)!\n\n                            // Store the image in to our cache\n                            self.imageCache[imageURL] = cache\n\n                            Async.runMainThread({\n                                callback(cache)\n                            })\n                        } else {\n                            Utility.debug(\"Image Cache Error: \\(error.localizedDescription)\")\n                        }\n                    })\n                })\n\n            } else {\n                Utility.debug(\"Image Cache Error: URL is nil\")\n                let noImageCache = self.imageCache[noImage]\n\n                Async.runMainThread({\n                    callback(noImageCache!)\n                })\n            }\n        }\n    }\n}\n\n````\n\n## \u4fee\u6b63\u5f8c\u306e\u30bd\u30fc\u30b9\n### \u975e\u540c\u671f\u306e\u547c\u3073\u51fa\u3057\u5074\u306e\u51e6\u7406\n\n````ImageManager.swift\nclass ImageManager {\n    class var sharedInstance: ImageManager {\n        struct Singleton {\n            static let instance = ImageManager()\n        }\n        \n        return Singleton.instance\n    }\n    \n    // \u753b\u50cf\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\u914d\u5217\n    private var imageCache: Dictionary<String, UIImage> = [:]\n    \n    // \u753b\u50cf\u3092\u53d6\u5f97\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\n    func fetch(imageURL: String, callback: UIImage -> ()) {\n        let noImage = \"http://g08m11.co.jp/images/noimage.jpg\"\n        // \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\n        if let cache = self.imageCache[imageURL] {\n            Async.runMainThread({\n                callback(cache)\n            })\n            \n            // \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\n        } else {\n            if let imgURL = NSURL(string: imageURL) {\n                Utility.debug(\"string\\(imageURL)\")\n                \n                let request: NSURLRequest = NSURLRequest(URL: imgURL)\n                \n                Async.runAsyncThread({\n                    NSURLConnection.sendAsynchronousRequest(request, queue: NSOperationQueue.mainQueue(), completionHandler: {(response: NSURLResponse!,data: NSData!, error: NSError!) -> Void in\n                        if error == nil {\n                            if let cache = UIImage(data: data){\n                                // Store the image in to our cache\n                                self.imageCache[imageURL] = cache\n                                \n                                Async.runMainThread({\n                                    callback(cache)\n                                })\n                                \n                            }\n                            \n                        } else {\n                            Utility.debug(\"Image Cache Error: \\(error.localizedDescription)\")\n                        }\n                    })\n                })\n                \n            } else {\n                Utility.debug(\"Image Cache Error: URL is nil\")\n                let noImageCache = self.imageCache[noImage]\n                \n                Async.runMainThread({\n                    callback(noImageCache!)\n                })\n            }\n        }\n    }\n}\n\n\n````\n\n## \u4fee\u6b63\u70b9\u629c\u7c8b\n\n### \u4fee\u6b63\u524d\n\n```\n                        if error == nil {\n                            let cache = UIImage(data: data)!\n\n                            // Store the image in to our cache\n                            self.imageCache[imageURL] = cache\n\n                            Async.runMainThread({\n                                callback(cache)\n                            })\n                        } else {\n                            Utility.debug(\"Image Cache Error: \\(error.localizedDescription)\")\n                        }\n                    })\n                })\n\n\n```\n\n### \u4fee\u6b63\u5f8c\n\n````\n\n                        if error == nil {\n                            if let cache = UIImage(data: data){\n                                // Store the image in to our cache\n                                self.imageCache[imageURL] = cache\n                                \n                                Async.runMainThread({\n                                    callback(cache)\n                                })\n                                \n                            }\n                            \n                        } else {\n                            Utility.debug(\"Image Cache Error: \\(error.localizedDescription)\")\n                        }\n                    })\n                })\n\n\n````\n\n\u8981\u306f\u300clet cache = UIImage(data: data)!\u300d\u3068\u6c7a\u3081\u6253\u3061\u3067\u5165\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u4f7f\u3063\u305f\u3068\u3044\u3046\u4fee\u6b63\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n## \u8ab2\u984c\n - \u73fe\u6642\u70b9\u3067\u306fnot found\u306e\u753b\u50cf\u306b\u5bfe\u3057\u3066no_image\u306a\u3069\u306e\u753b\u50cf\u8868\u793a\u5bfe\u5fdc\u304c\u3067\u304d\u3066\u304a\u3089\u305a\u7a7a\u767d\u8868\u793a\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u3092\u4e0b\u3052\u3066\u3057\u307e\u3046\u3002\u3002\u3002\n\n\n## \u5b66\u3073\n - optional\u578b\u306enil\u30b1\u30fc\u30b9\u306fnil\u305d\u306e\u307e\u307e\u306f\u3082\u3061\u308d\u3093\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u3082nil\u306b\u306a\u308b\u30b1\u30fc\u30b9\u3092\u8003\u616e\u3057\u3066\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n - \u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3060\u3051\u3067\u306a\u304f\u6b63\u5e38\u306b\u6a5f\u80fd\u3059\u308b\u3053\u3068\u304c\u78ba\u8a8d\u6e08(\u30c6\u30b9\u30c8\u6e08)\u3067\u3082\u6642\u9593\u304c\u7d4c\u3066\u3070\u30d0\u30b0\u3063\u305f\u308a\u3059\u308b\u3053\u3068\u3092\u5ff5\u982d\u306b\u304a\u3044\u3066\u958b\u767a\u3092\u9032\u3081\u308b\u3002\n - \u30c7\u30d0\u30c3\u30b0\u3092\u8a00\u8a9e\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u81ea\u5206\u306e\u601d\u8003\u304c\u5c11\u3057\u6574\u7406\u3055\u308c\u305f\u6c17\u304c\u3059\u308b\u3002(\u307e\u3060\u307e\u3060\u6539\u5584\u306e\u4f59\u5730\u304c\u3042\u308b\u306e\u3067\u3082\u3063\u3068\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3057\u3066\u3044\u304d\u305f\u3044\u3002)\n\n\n<br>\n\n\u540c\u69d8\u306e\u30ed\u30b8\u30c3\u30af\u3067\u753b\u50cf\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u5bfe\u5fdc\u3092\u3055\u308c\u3066\u3044\u308b\u65b9\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\n", "tags": ["iOS8", "Swift", "ios7", "iOS", "\u521d\u5fc3\u8005"]}