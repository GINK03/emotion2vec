{"context": " More than 1 year has passed since last update.\n\n\u3000\u554f\u984c\u70b9\n\nOAuth\u8a8d\u8a3c\u3057\u3066\u3044\u306a\u3044\u305b\u3044\u304b\u3059\u304f\u3099\u306bAPI\u5236\u9650\u306b\u304b\u304b\u308b\u3002\nAPI\u5236\u9650\u306b\u304b\u304b\u308b\u306e\u3066\u3099\u5168\u3066\u306e\u30d5\u30a9\u30ed\u30a4\u30fc\u30fb\u30d5\u30a9\u30ed\u30ef\u30fc\u306e\u30a2\u30a4\u30b3\u30f3\u3092\u4fdd\u5b58\u3066\u3099\u304d\u306a\u3044\u3002\n\u4fdd\u5b58\u304b\u3099\u3066\u3099\u304d\u3066\u3044\u308b\u306e\u306f150\u679a\u524d\u5f8c\u3002 \n\n\nimg-twitter.scm\n#!/usr/local/bin/gosh\n(use srfi-1)\n(use rfc.http)\n(use sxml.ssax)\n(use sxml.sxpath)\n(use file.util)\n(use rfc.uri)\n(use file.util)\n(define (img uri)\n  (receive \n    (uri-scheme user-info hostname port path query fragment) \n    (uri-parse uri)\n    (receive (dir file ext) (decompose-path path)\n      (receive (status head body) (http-get hostname path)\n               (if (boolean? ext)\n                 (with-output-to-file file (pa$ print body))\n                 (with-output-to-file (string-append file \".\" ext) (pa$ print body)))))))\n(define (follow-get user)\n  (receive (status head body)\n           (http-get \"api.twitter.com\"\n                     (string-append \"/1/friends/ids/\" user \".xml\"))\n           (ssax:xml->sxml (open-input-string body) '())))\n(define (follower-get user)\n  (receive (status head body)\n           (http-get \"api.twitter.com\"\n                     (string-append \"/1/followers/ids/\" user \".xml\"))\n           (ssax:xml->sxml (open-input-string body) '())))\n(define (user-get id)\n  (receive (status head body)\n           (http-get \"api.twitter.com\"\n                     (string-append \"/1/users/show.xml?id=\" id))\n           (ssax:xml->sxml (open-input-string body) '())))\n(define (main args)\n  (display \">> \")\n  (flush)\n  (let1 user (read)\n        (display \"cmd> \")\n        (flush)\n        (let1 cmd (read)\n              (make-directory* (string-append (x->string user) \"-\" (x->string cmd)))\n              (print \"Maked...\")(flush)\n              (current-directory (string-append (x->string user) \"-\" (x->string cmd)))\n              (print \"In \" (string-append (x->string user) \"-\" (x->string cmd))\"...\")(flush)\n              (cond ((eq? cmd ':q)(exit))\n                    ((eq? cmd ':follow)\n                     (begin (print \"Follow get\")(flush)(solve (map (lambda(x)(cadr x)) ((sxpath \"/id_list/ids/id\")(follow-get (x->string user)))))))\n                    ((eq? cmd ':follower)\n                     (begin (print \"Follower get\")(flush)(solve (map (lambda(x)(cadr x)) ((sxpath \"/id_list/ids/id\")(follower-get (x->string user)))))))\n                    (else (print \"ERROR\"))))))\n(define (solve lst)\n  (print \"\u30d5\u30a9\u30ed*\u30fc\u6570: \"(length lst))\n  (let loop ((lst lst)(n 1))\n    (if (null? lst)\n      (print \"Empty\")\n      (let1 result ((sxpath \"/user/profile_image_url/text()\") (user-get (car lst)))\n            (if (null? result)\n              (print \"Done\")\n              (begin (print \"GET\")\n                     (print \"[\"n\"]Downloads...\"(car result))\n                     (img (car result))\n                     (loop (cdr lst) (+ n 1))))))))\n\n\n###\u3000\u554f\u984c\u70b9 ###\n+ OAuth\u8a8d\u8a3c\u3057\u3066\u3044\u306a\u3044\u305b\u3044\u304b\u3059\u304f\u3099\u306bAPI\u5236\u9650\u306b\u304b\u304b\u308b\u3002\n+ API\u5236\u9650\u306b\u304b\u304b\u308b\u306e\u3066\u3099\u5168\u3066\u306e\u30d5\u30a9\u30ed\u30a4\u30fc\u30fb\u30d5\u30a9\u30ed\u30ef\u30fc\u306e\u30a2\u30a4\u30b3\u30f3\u3092\u4fdd\u5b58\u3066\u3099\u304d\u306a\u3044\u3002\n+ \u4fdd\u5b58\u304b\u3099\u3066\u3099\u304d\u3066\u3044\u308b\u306e\u306f150\u679a\u524d\u5f8c\u3002 \n\n``` scheme:img-twitter.scm\n#!/usr/local/bin/gosh\n(use srfi-1)\n(use rfc.http)\n(use sxml.ssax)\n(use sxml.sxpath)\n(use file.util)\n(use rfc.uri)\n(use file.util)\n(define (img uri)\n  (receive \n\t(uri-scheme user-info hostname port path query fragment) \n\t(uri-parse uri)\n\t(receive (dir file ext) (decompose-path path)\n\t  (receive (status head body) (http-get hostname path)\n\t\t\t   (if (boolean? ext)\n\t\t\t\t (with-output-to-file file (pa$ print body))\n\t\t\t\t (with-output-to-file (string-append file \".\" ext) (pa$ print body)))))))\n(define (follow-get user)\n  (receive (status head body)\n\t\t   (http-get \"api.twitter.com\"\n\t\t\t\t\t (string-append \"/1/friends/ids/\" user \".xml\"))\n\t\t   (ssax:xml->sxml (open-input-string body) '())))\n(define (follower-get user)\n  (receive (status head body)\n\t\t   (http-get \"api.twitter.com\"\n\t\t\t\t\t (string-append \"/1/followers/ids/\" user \".xml\"))\n\t\t   (ssax:xml->sxml (open-input-string body) '())))\n(define (user-get id)\n  (receive (status head body)\n\t\t   (http-get \"api.twitter.com\"\n\t\t\t\t\t (string-append \"/1/users/show.xml?id=\" id))\n\t\t   (ssax:xml->sxml (open-input-string body) '())))\n(define (main args)\n  (display \">> \")\n  (flush)\n  (let1 user (read)\n\t\t(display \"cmd> \")\n\t\t(flush)\n\t\t(let1 cmd (read)\n\t\t\t  (make-directory* (string-append (x->string user) \"-\" (x->string cmd)))\n\t\t\t  (print \"Maked...\")(flush)\n\t\t\t  (current-directory (string-append (x->string user) \"-\" (x->string cmd)))\n\t\t\t  (print \"In \" (string-append (x->string user) \"-\" (x->string cmd))\"...\")(flush)\n\t\t\t  (cond ((eq? cmd ':q)(exit))\n\t\t\t\t\t((eq? cmd ':follow)\n\t\t\t\t\t (begin (print \"Follow get\")(flush)(solve (map (lambda(x)(cadr x)) ((sxpath \"/id_list/ids/id\")(follow-get (x->string user)))))))\n\t\t\t\t\t((eq? cmd ':follower)\n\t\t\t\t\t (begin (print \"Follower get\")(flush)(solve (map (lambda(x)(cadr x)) ((sxpath \"/id_list/ids/id\")(follower-get (x->string user)))))))\n\t\t\t\t\t(else (print \"ERROR\"))))))\n(define (solve lst)\n  (print \"\u30d5\u30a9\u30ed*\u30fc\u6570: \"(length lst))\n  (let loop ((lst lst)(n 1))\n\t(if (null? lst)\n\t  (print \"Empty\")\n\t  (let1 result ((sxpath \"/user/profile_image_url/text()\") (user-get (car lst)))\n\t\t\t(if (null? result)\n\t\t\t  (print \"Done\")\n\t\t\t  (begin (print \"GET\")\n\t\t\t\t\t (print \"[\"n\"]Downloads...\"(car result))\n\t\t\t\t\t (img (car result))\n\t\t\t\t\t (loop (cdr lst) (+ n 1))))))))\n```", "tags": ["Scheme"]}