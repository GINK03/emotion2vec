{"tags": ["PHP", "cakephp3", "CakePHP"], "context": "\u793e\u5185\u7528\u306b\u307e\u3068\u3081\u305f\u5185\u5bb9\u306e\u8ee2\u8f09\u3002\n\n\u30b3\u30b3\u3089\u3078\u3093\u306e\u8a71\u3092\u3057\u307e\u3059\n\nTable\u3001Entity\u3068 Type\u306b\u3064\u3044\u3066\nDB\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u305f\u5024\u304cPHP\u306e\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3055\u308c\u308b\u3053\u3068\u3001\u305d\u306e\u9006\u306bPHP\u306e\u30c7\u30fc\u30bf\u304cDB\u306bwrite\u53ef\u80fd\u306a\u5f62\u306b\u5909\u63db\u3055\u308c\u308b\u3053\u3068\n\u72ec\u81eaType\u306e\u4f5c\u6210\n\n\nEntity \u306eproperty\u306f\u3001\u3069\u306e\u3088\u3046\u306b\u6c7a\u5b9a\u3055\u308c\u308b(\u751f\u6210\u3055\u308c\u308b)\u304b\uff1f\n\u4f8b\u3048\u3070\u3053\u3093\u306a\u30b1\u30fc\u30b9\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n\u4f8b)\u300cUser\u304c\u767b\u9332\u3057\u305f\u5e74\u3092\u8868\u793a\u3059\u308b\u300d\n$user = $this->Users->get(1);\n$reggedYear = $user->created->year;\n\n\u3082\u3046\u5c11\u3057\u8a73\u7d30\u306b\u898b\u3066\u307f\u308b\u3068\u3001 User::$created \u306f\u3053\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n// $created =\nobject(Cake\\I18n\\FrozenTime) {\n    'time' => '2014-05-02T06:09:17+09:00',\n    'timezone' => 'Asia/Tokyo',\n    'fixedNowTime' => false\n}\n\n\u3053\u3053\u3067\u8b70\u8ad6\u3059\u3079\u304d\u306f\u3001\u3053\u306e\\Cake\\l18n\\FrozenTime \u304c\u3069\u3053\u304b\u3089\u6765\u3066\u3001\u3044\u3064\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u304b\uff1f\u3068\u3044\u3046\u70b9\u3067\u3059\u3002\ncf) Class Cake\\I18n\\FrozenTime | CakePHP\n\n\u306a\u305c created\u304c FrozenTime\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304b\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001 CakePHP\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3068\u3057\u3066 \u300cdatetime\u578b\u30ab\u30e9\u30e0\u3092\u3001FrozenTime\u3068\u3057\u3066\u6271\u3046\u300d\u3068\u3044\u3046\u3088\u3046\u306b\u7d10\u4ed8\u3051\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u7d10\u4ed8\u3051\u304c Type \u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3059\u3002\ncf) \u30c7\u30fc\u30bf\u306e\u578b\n\u3053\u3053\u3067\u306f\u3055\u3089\u3063\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u304c\u3001\nDatabase(datetime\u578b) \n-> ORM\u304c\u30ed\u30fc\u30c9 \n-> Type\u306e\u6307\u5b9a\u306b\u5f93\u3044\u3001CakePHP\u304c\u89e6\u308b\u578b\u306b\u5909\u63db (FrozenDate)\n-> Entity\u306eproperty\u3068\u3057\u3066\u30bb\u30c3\u30c8\n\n\u3068\u3044\u3046\u30d5\u30ed\u30fc\u306b\u306a\u308a\u307e\u3059\n\n\u203b FrozenTime\u306b\u3064\u3044\u3066\u306f\u6b21\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\n\u4e0d\u5909\u306a\u65e5\u4ed8\u3068\u6642\u523b\n\u65b0\u3057\u3044\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a Date \u3068 Time \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb DateTime \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6709\u52b9\u5316\n\n\n\n\nColumn <=> Type\u306e\u7d10\u4ed8\u3051\n\u539f\u5247\u3068\u3057\u3066\u3001(\u524d\u9805\u3067\u6319\u3052\u3066\u3044\u308b)\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7d10\u4ed8\u3051\u8a2d\u5b9a\u306e\u307e\u307e\u5229\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u300c\u5404\u30ab\u30e9\u30e0\u306b\u5bfe\u5fdc\u3059\u308bType\u306f\u3069\u3053\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u300d\u3092\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001(\u5f53\u7136\u306e\u3088\u3046\u306b)\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u304b\u3089\u72ec\u81ea\u306e\u7d10\u4ed8\u3051\u8a2d\u5b9a\u3092\u884c\u3046\u30fb\u3082\u3057\u304f\u306f\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u3053\u308c\u306fTable\u5185\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u306f\u3001\u300cDatabase\u7684\u306b\u306f\u53ef\u5909\u9577\u6587\u5b57\u5217\u306b\u904e\u304e\u306a\u3044\u304c\u3001\u5185\u5bb9\u3068\u3057\u3066\u69cb\u9020\u30c7\u30fc\u30bf(json)\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u30ab\u30e9\u30e0\u300d\u3092\u6271\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306e\u5b9f\u88c5\u3067\u3059\u3002\nnamespace App\\Model\\Table;\n\nuse Cake\\Database\\Schema\\Table as Schema;\n\nclass SpecialSales extends Table\n{\n   protected function _initializeSchema(Schema $schema)\n   {\n        parent::_initializeSchema($schema);\n        $schema->columnType('data', 'json');\n        return $schema;\n   }\n}\n\n\u3053\u308c\u306b\u3088\u308a\u3001\u300c$SpecialSales->data\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u305f\u6642\u70b9\u3067\u65e2\u306bjson_decode\u6e08\u307f=(\u5358\u306a\u308b\u6587\u5b57\u5217\u3067\u306f\u306a\u304f)Object\u5316\u3055\u308c\u3066\u3044\u308b\u300d\u4e8b\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3057\u305f\u3002\u5b9f\u88c5\u8005\u306f\u3001\u660e\u793a\u7684\u306bdecode\u51e6\u7406\u3092\u3059\u308b\u3068\u3044\u3046\u4e00\u624b\u9593\u3092\u610f\u8b58\u305b\u305a\u306b\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\ncf) Schema\\Table Objects\n\u3082\u3046\u5c11\u3057\u3060\u3051\u5b9f\u614b\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u6301\u3064\u305f\u3081\u306e\u88dc\u8db3\u3092\u52a0\u3048\u308b\u3068\u3001\n\nDatabase\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\nTable\u30af\u30e9\u30b9\u306e\u4fdd\u6301\u3057\u3066\u3044\u308b\u30b9\u30ad\u30fc\u30de\u60c5\u5831(\u3053\u3053\u306bType\u3092\u542b\u3080)\u306b\u5f93\u3063\u3066\nEntity\u3092\u5410\u304d\u51fa\u3059\n\n\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u300cEntity\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306fTable\u304c\u6301\u3063\u3066\u3044\u308b\u300d\u306e\u3067\u3059\u3002\n\nDatabase <> PHP\u9593\u306e\u5909\u63db\n\u3067\u306f\u3001\u5148\u306e\u4f8b\u3067\u6319\u3052\u305f\u3088\u3046\u306a\u300c(PDO\u7684\u306b\u306f)\u65e5\u6642\u578b\u6587\u5b57\u5217\u306b\u3059\u304e\u306a\u3044\u3082\u306e\u3092\u3001Date\u7cfb\u62e1\u5f35\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u51e6\u7406\u3092\u65bd\u3059\u300d\u300c(PDO\u7684\u306b\u306f)json-serialized\u6587\u5b57\u5217\u306b\u3059\u304e\u306a\u3044\u3082\u306e\u3092\u3001json_decode()\u3092\u65bd\u3057\u305fObject\u306b\u5909\u63db\u3059\u308b\u300d\u3068\u3044\u3063\u305f\u51e6\u7406\u3068\u3044\u3046\u306e\u306f\u3001\u3069\u306e\u6bb5\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u307e\u305f\u3001PHP\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u5b58\u3059\u308b = Database\u306b\u6295\u3052\u8fbc\u3080\u969b\u306e\u5909\u63db\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n\u305d\u306e\u4ed5\u4e8b\u3092\u62c5\u3046\u6b63\u4f53\u304c Type \u306b\u306a\u308a\u307e\u3059\u3002\nDatabase\u3068(Cake)PHP\u306e\u6a4b\u6e21\u3057\u7684\u5b58\u5728\u3067\u3059\u3002\n\u5927\u307e\u304b\u306b\u8a00\u3063\u3066\u3001\u6b21\u306e\u8a18\u4e8b\u304c\u6700\u3082\u5165\u9580\u7684\u306a\u89e3\u8aac\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\ncf) \u72ec\u81ea\u306e\u578b\u3092\u4f5c\u6210\u3059\u308b\n\ntoPHP()\n\u307e\u305a\u3001\u30b3\u30ec\u304c\u300cDatabase\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u305f\u5024\u3092PHP\u306e\u30af\u30e9\u30b9(\u3084\u5024)\u306b\u5909\u63db\u3059\u308b\u300d\u4ed5\u4e8b\u3092\u884c\u3063\u3066\u3044\u308b\u6b63\u4f53\u3067\u3059\u3002\n\u4f8b\u3068\u3057\u3066\u3001\u6b21\u306f\u300cType\u3068\u3057\u3066Boolean\u3092\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306b\u3001\u30d5\u30a7\u30c3\u30c1\u76f4\u5f8c\u306b\u901a\u308b\u51e6\u7406\u300d\u3067\u3059\u3002\n// https://github.com/cakephp/cakephp/blob/master/src/Database/Type/BoolType.php#L68\npublic function toPHP($value, Driver $driver)\n{\n    if ($value === null) {\n        return null;\n    }\n    if (is_string($value) && !is_numeric($value)) {\n        return strtolower($value) === 'true' ? true : false;\n    }\n    return !empty($value);\n}\n\n\u6a19\u6e96\u3067\u68b1\u5305\u3055\u308c\u3066\u3044\u308bType\u3092\u898b\u308b\u9650\u308a\u3001(PDO\u306e)\u8fd4\u308a\u5024\u304cNULL\u3060\u3063\u305f\u5834\u5408\u306b(\u5404\u7a2e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u6709\u52b9\u5024\u3067\u306f\u306a\u304f)NULL\u3092\u8fd4\u3059\u3068\u3044\u3046\u306e\u304c\u304a\u4f5c\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u3001(string)true\u3068\u540c\u5024\u3067\u306a\u3051\u308c\u3070false\u3092\u8fd4\u3059\u3057\u3001\u6570\u5024\u3084\u6570\u5b57\u6587\u5b57\u5217\u3067\u3042\u308c\u3070\u300c== 0\u4ee5\u5916\u306fFALSE\u300d\u3068\u5224\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u3001\u300c\u5f15\u3063\u5f35\u3063\u3066\u304d\u305f\u5024\u3092boolean\u3068\u3057\u3066\u89e3\u91c8\u3059\u308b\u300d\u51e6\u7406\u304c\u65bd\u3055\u308c\u308b\u306e\u3067\u3059\u3002\n\nmarshal()\n\u3053\u3061\u3089\u3082\u300cPHP\u306e\u5024\u306b\u5909\u63db\u3059\u308b\u300d\u50cd\u304d\u3092\u6301\u3064\u306e\u3067 toPHP()\u3068\u6df7\u540c\u3057\u304c\u3061\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u300c\u30e6\u30fc\u30b6\u30fc\u304b\u3089request\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u304c\u96c6\u7d04\u3057\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3057\u3001Entity\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b(or \u66f4\u65b0\u3059\u308b)\u300d\u969b\u306e\u51e6\u7406\u306b\u306a\u308a\u307e\u3059\u3002\n\u3059\u306a\u308f\u3061\u3001 $Table->newEntity($data) \u3060\u3063\u305f\u308a $Table->patchEntity($entity, $data)\u306a\u3069\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u30d5\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\n\u6b21\u306f IntegerType \u306e\u4f8b\u3067\u3001\u300c\u6574\u6570\u5024\u3068\u3057\u3066\u89e3\u91c8\u53ef\u80fd\u3067\u3042\u308c\u3070int\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u305f\u5024\u3092\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070null\u3092\u300d\u8fd4\u3059\u3088\u3046\u306b\u51e6\u7406\u3092\u65bd\u3057\u3066\u3044\u307e\u3059\u3002\n\u3059\u306a\u308f\u3061\u3001\u300cEntity\u306eproperty\u3068\u3057\u3066\u6574\u6570\u5024\u304c\u4fdd\u6301\u3055\u308c\u308b\u3001\u3042\u308b\u3044\u306f\u4e0d\u9069\u5408\u306a\u3089null\u3089\u305b\u308b\u300d\u4e8b\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n// https://github.com/cakephp/cakephp/blob/master/src/Database/Type/IntegerType.php#L79\npublic function marshal($value)\n{\n    if ($value === null || $value === '') {\n        return null;\n    }\n    if (is_numeric($value) || ctype_digit($value)) {\n        return (int)$value;\n    }\n    if (is_array($value)) {\n        return 1;\n    }\n    return null;\n}\n\n\u4ed6\u65b9\u3067\u3001\u8208\u5473\u6df1\u3044\u3053\u3068\u306bJsonType\u3067\u306f\u300c\u4e0e\u3048\u3089\u308c\u305f\u5024\u3092\u305d\u306e\u307e\u307e\u4fdd\u6301\u3059\u308b\u300d\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n// https://github.com/cakephp/cakephp/blob/master/src/Database/Type/JsonType.php#L72\n    /**\n     * Marshalls request data into a JSON compatible structure.\n     *\n     * @param mixed $value The value to convert.\n     * @return mixed Converted value.\n     */\n    public function marshal($value)\n    {\n        return $value;\n    }\n\n\n\u3053\u308c\u306f\u3001\u300cDatabase\u306b\u7a81\u3063\u8fbc\u3080\u300d\u3082\u3057\u304f\u306f\u300c\u8fd4\u308a\u5024\u3092\u30e6\u30fc\u30b6\u30fc\u306b(=\u30d6\u30e9\u30a6\u30b6\u306b)\u8868\u793a\u3059\u308b\u300d\u307e\u3067\u306f \u4f55\u304b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3060\u308d\u3046\u3068\u914d\u5217\u3060\u308d\u3046\u3068\u3001\u76f4\u524d\u307e\u3067\u751f\u30c7\u30fc\u30bf\u306e\u307e\u307e\u6271\u3048\u308b \u72b6\u614b\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4fbf\u5229\u3002\n\ntoDatabase, toStatement, toExpression\n\u6700\u5f8c\u304c toDatabase() / toStatement(), toExpression() \u306e3\u3064\u3067\u3059\u3002\n\u3053\u308c\u3089\u306f\u5168\u3066\u300cPHP\u30c7\u30fc\u30bf\u3092Database\u306b\u7a81\u3063\u8fbc\u3080\u300d\u969b\u306b\u547c\u3070\u308c\u3001\u5404driver\u306b\u55b0\u308f\u305b\u308b\u30c7\u30fc\u30bf\u3078\u3068\u5909\u63db\u3092\u884c\u3044\u307e\u3059\u3002\n\ntoDatabase + toStatement\ntoDatabase\u306f\u300cDatabase\u306b\u633f\u5165\u3059\u308bvalue\u300d\u3092\u3001toStatement\u306f\u300cDatabase\u306b\u901a\u77e5\u3059\u308btype\u300d\u3092\u6307\u5b9a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\u518d\u5ea6IntegerType\u3092\u4f8b\u306b\u7528\u3044\u308b\u3068\u3001\u305d\u308c\u305e\u308c\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n// https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/Type/IntegerType.php#L31\n/**\n * Convert integer data into the database format.\n *\n * @param mixed $value The value to convert.\n * @param \\Cake\\Database\\Driver $driver The driver instance to convert with.\n * @return int\n */\npublic function toDatabase($value, Driver $driver)\n{\n    if ($value === null || $value === '') {\n        return null;\n    }\n    if (!is_scalar($value)) {\n        throw new InvalidArgumentException('Cannot convert value to integer');\n    }\n    return (int)$value;\n}\n\n// https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/Type/IntegerType.php#L67\n/**\n * Get the correct PDO binding type for integer data.\n *\n * @param mixed $value The value being bound.\n * @param \\Cake\\Database\\Driver $driver The driver.\n * @return int\n */\npublic function toStatement($value, Driver $driver)\n{\n    return PDO::PARAM_INT;\n}\n\n\u3053\u308c\u304c\u5b9f\u969b\u306b\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u306f\u3001\u30c9\u30e9\u30a4\u30d0\u30fc\u5185\u306e\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3059\u3002\n// https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/Statement/PDOStatement.php#L64\n// @see \npublic function bindValue($column, $value, $type = 'string')\n{\n    if ($type === null) {\n        $type = 'string';\n    }\n    if (!ctype_digit($type)) {\n        list($value, $type) = $this->cast($value, $type);\n    }\n    $this->_statement->bindValue($column, $value, $type);\n}\n\n// https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/TypeConverterTrait.php#L31\n/**\n * Converts a give value to a suitable database value based on type\n * and return relevant internal statement type\n *\n * @param mixed $value The value to cast\n * @param \\Cake\\Database\\Type|string $type The type name or type instance to use.\n * @return array list containing converted value and internal type\n */\npublic function cast($value, $type)\n{\n    if (is_string($type)) {\n        $type = Type::build($type);\n    }\n    if ($type instanceof TypeInterface) {\n        $value = $type->toDatabase($value, $this->_driver);\n        $type = $type->toStatement($value, $this->_driver);\n    }\n    return [$value, $type];\n}\n\n\ntoExpression\n\u524d\u4e8c\u8005\u3068\u306f\u7d4c\u8def\u304c\u4e8b\u306a\u308a\u3001\u300c\u5b9f\u969b\u306b\u5229\u7528\u3055\u308c\u308b\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u300d\u306e\u304ctoExpression \u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3061\u3089\u306f\u7531\u6765\u3059\u308bInterface\u304c\u7570\u306a\u308a\u3001 ExpressionTypeInterface \u3068\u306a\u3063\u3066\u3044\u308b\u70b9\u306b\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u3053\u3061\u3089\u306b\u3064\u3044\u3066\u306f\u30b3\u30a2\u30b3\u30fc\u30c9\u5185\u3067\u306e\u5b9f\u88c5\u4f8b\u304c\u5c11\u306a\u304f\u3001\u307e\u305fbook\u3067\u306e\u4f8b \u304c\u660e\u77ad\u3060\u3063\u305f\u306e\u3067\u305d\u3061\u3089\u306b\u8aac\u660e\u3092\u8b72\u308a\u307e\u3059\u3002\n(MySQL\u7b49\u306e)Database\u95a2\u6570\u3092\u7528\u3044\u305f\u51e6\u7406\u3092\u884c\u3046\u969b\u306a\u3069\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002\n\n\u72ec\u81eaType\u306e\u4f5c\u6210\n\u524d\u7ae0\u306e\u5185\u5bb9\u304c\u7406\u89e3\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u72ec\u81ea\u306eType\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u7c21\u5358\u306a\u4ed5\u4e8b\u3067\u3059\u3002\nApp\\Database\\Type\u4ee5\u4e0b\u306b\u3001  HogeType\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u8a2d\u7f6e\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306b\u306f\u3001 Cake\\Database\\Type\\ExpressionTypeInterface \u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f Cake\\Database\\Type \u3092\u7d99\u627f\u3057\u3066\u3057\u307e\u3048\u3070\u3001\u5fc5\u8981\u6700\u4f4e\u9650\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3060\u3051\u3067\u6e08\u307f\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u30b3\u30a2\u30b3\u30fc\u30c9\u3092\u8997\u3044\u3066\u307f\u308b\u3068 UuidType \u306fStringType\u3092\u89aa\u306b\u6301\u3063\u3066\u304a\u308a\u3001\u30b3\u30e1\u30f3\u30c8\u3092\u9664\u3051\u3070\u6570\u884c\u7a0b\u5ea6\u306e\u5b9f\u88c5\u91cf\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u72ec\u81eaType\u306e\u8aad\u307f\u8fbc\u307f\u30fb\u7d10\u4ed8\u3051\n\u72ec\u81ea\u306b\u4f5c\u6210\u3057\u305fType\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u7c21\u5358\u306b\u547c\u3073\u51fa\u3059\u305f\u3081\u306b\u3001\u300c\u5b9a\u7fa9\u6e08\u307fType\u306e\u767b\u9332\u300d\u3092\u884c\u3044\u307e\u3059\u3002\n\u3053\u306e\u4ed5\u4e8b\u3092\u62c5\u3046\u306e\u304cType::map()\u3067\u3059\u3002\n\u4f8b\u3048\u3070php serialized\u306a\u6587\u5b57\u5217\u3092\u6271\u3046App\\Database\\Type\\PhpSerializedType\u3092\u4f5c\u6210\u3057\u3001serialized\u3068\u3044\u3046\u540d\u524d\u3067\u767b\u9332\u3059\u308b\u306e\u3067\u3042\u308c\u3070\nType::map('serialized', 'App\\Database\\Type\\PhpSerializedType');\n\n\u3068\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092config/boostrap.php\u306a\u3069\u9069\u5207\u306a\u7b87\u6240\u306b\u8a18\u8ff0\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u305d\u306e\u4e0a\u3067\u3001\u5404Table\u30af\u30e9\u30b9\u306einitializeschema()\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u5bfe\u5fdcfield\u306b\u5bfe\u3057\u3066\u7d10\u4ed8\u3051\u3092\u884c\u3044\u307e\u3059\u3002(\u5148\u8ff0\u306e\u5185\u5bb9)\nprotected function _initializeSchema(Schema $schema)\n{\n     parent::_initializeSchema($schema);\n     $schema->columnType('data', 'serialized');\n     return $schema;\n}\n\n\u793e\u5185\u7528\u306b\u307e\u3068\u3081\u305f\u5185\u5bb9\u306e\u8ee2\u8f09\u3002\n\n### \u30b3\u30b3\u3089\u3078\u3093\u306e\u8a71\u3092\u3057\u307e\u3059\n* Table\u3001Entity\u3068 Type\u306b\u3064\u3044\u3066\n* DB\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u305f\u5024\u304cPHP\u306e\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3055\u308c\u308b\u3053\u3068\u3001\u305d\u306e\u9006\u306bPHP\u306e\u30c7\u30fc\u30bf\u304cDB\u306bwrite\u53ef\u80fd\u306a\u5f62\u306b\u5909\u63db\u3055\u308c\u308b\u3053\u3068\n* \u72ec\u81eaType\u306e\u4f5c\u6210\n\n### `Entity` \u306eproperty\u306f\u3001\u3069\u306e\u3088\u3046\u306b\u6c7a\u5b9a\u3055\u308c\u308b(\u751f\u6210\u3055\u308c\u308b)\u304b\uff1f\n\u4f8b\u3048\u3070\u3053\u3093\u306a\u30b1\u30fc\u30b9\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n\n**\u4f8b)\u300cUser\u304c\u767b\u9332\u3057\u305f\u5e74\u3092\u8868\u793a\u3059\u308b\u300d**\n\n```php\n$user = $this->Users->get(1);\n$reggedYear = $user->created->year;\n```\n\u3082\u3046\u5c11\u3057\u8a73\u7d30\u306b\u898b\u3066\u307f\u308b\u3068\u3001 `User::$created` \u306f\u3053\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\n```\n// $created =\nobject(Cake\\I18n\\FrozenTime) {\n\t'time' => '2014-05-02T06:09:17+09:00',\n\t'timezone' => 'Asia/Tokyo',\n\t'fixedNowTime' => false\n}\n```\n\u3053\u3053\u3067\u8b70\u8ad6\u3059\u3079\u304d\u306f\u3001\u3053\u306e`\\Cake\\l18n\\FrozenTime` \u304c\u3069\u3053\u304b\u3089\u6765\u3066\u3001\u3044\u3064\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u304b\uff1f\u3068\u3044\u3046\u70b9\u3067\u3059\u3002\ncf) [Class Cake\\\\I18n\\\\FrozenTime \\| CakePHP](http://api.cakephp.org/3.3/class-Cake.I18n.FrozenTime.html)\n\n#### \u306a\u305c `created`\u304c `FrozenTime`\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304b\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001 CakePHP\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3068\u3057\u3066 \u300cdatetime\u578b\u30ab\u30e9\u30e0\u3092\u3001`FrozenTime`\u3068\u3057\u3066\u6271\u3046\u300d\u3068\u3044\u3046\u3088\u3046\u306b\u7d10\u4ed8\u3051\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u7d10\u4ed8\u3051\u304c **Type** \u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3059\u3002\ncf) [\u30c7\u30fc\u30bf\u306e\u578b](http://book.cakephp.org/3.0/ja/orm/database-basics.html#id8)\n\n\u3053\u3053\u3067\u306f\u3055\u3089\u3063\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u304c\u3001\n\n```\nDatabase(datetime\u578b) \n-> ORM\u304c\u30ed\u30fc\u30c9 \n-> Type\u306e\u6307\u5b9a\u306b\u5f93\u3044\u3001CakePHP\u304c\u89e6\u308b\u578b\u306b\u5909\u63db (FrozenDate)\n-> Entity\u306eproperty\u3068\u3057\u3066\u30bb\u30c3\u30c8\n```\n\u3068\u3044\u3046\u30d5\u30ed\u30fc\u306b\u306a\u308a\u307e\u3059\n\n* \u203b FrozenTime\u306b\u3064\u3044\u3066\u306f\u6b21\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n    * [\u4e0d\u5909\u306a\u65e5\u4ed8\u3068\u6642\u523b](http://book.cakephp.org/3.0/ja/core-libraries/time.html)\n    * [\u65b0\u3057\u3044\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a Date \u3068 Time \u30aa\u30d6\u30b8\u30a7\u30af\u30c8](http://book.cakephp.org/3.0/ja/appendices/3-2-migration-guide.html)\n    * [\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb DateTime \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6709\u52b9\u5316](http://book.cakephp.org/3.0/ja/orm/database-basics.html#datetime)\n\n#### Column <=> Type\u306e\u7d10\u4ed8\u3051\n\u539f\u5247\u3068\u3057\u3066\u3001(\u524d\u9805\u3067\u6319\u3052\u3066\u3044\u308b)\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7d10\u4ed8\u3051\u8a2d\u5b9a\u306e\u307e\u307e\u5229\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u300c\u5404\u30ab\u30e9\u30e0\u306b\u5bfe\u5fdc\u3059\u308bType\u306f\u3069\u3053\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u300d\u3092\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001(\u5f53\u7136\u306e\u3088\u3046\u306b)\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u304b\u3089\u72ec\u81ea\u306e\u7d10\u4ed8\u3051\u8a2d\u5b9a\u3092\u884c\u3046\u30fb\u3082\u3057\u304f\u306f\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u3053\u308c\u306fTable\u5185\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u306f\u3001\u300cDatabase\u7684\u306b\u306f`\u53ef\u5909\u9577\u6587\u5b57\u5217`\u306b\u904e\u304e\u306a\u3044\u304c\u3001\u5185\u5bb9\u3068\u3057\u3066\u69cb\u9020\u30c7\u30fc\u30bf(json)\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u30ab\u30e9\u30e0\u300d\u3092\u6271\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\n```php\nnamespace App\\Model\\Table;\n\nuse Cake\\Database\\Schema\\Table as Schema;\n\nclass SpecialSales extends Table\n{\n   protected function _initializeSchema(Schema $schema)\n   {\n        parent::_initializeSchema($schema);\n        $schema->columnType('data', 'json');\n        return $schema;\n   }\n}\n```\n\u3053\u308c\u306b\u3088\u308a\u3001\u300c`$SpecialSales->data`\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u305f\u6642\u70b9\u3067\u65e2\u306bjson_decode\u6e08\u307f=(\u5358\u306a\u308b\u6587\u5b57\u5217\u3067\u306f\u306a\u304f)Object\u5316\u3055\u308c\u3066\u3044\u308b\u300d\u4e8b\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3057\u305f\u3002\u5b9f\u88c5\u8005\u306f\u3001\u660e\u793a\u7684\u306bdecode\u51e6\u7406\u3092\u3059\u308b\u3068\u3044\u3046\u4e00\u624b\u9593\u3092\u610f\u8b58\u305b\u305a\u306b\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\ncf) [Schema\\\\Table Objects](http://book.cakephp.org/3.0/en/orm/schema-system.html)\n\n\u3082\u3046\u5c11\u3057\u3060\u3051\u5b9f\u614b\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u6301\u3064\u305f\u3081\u306e\u88dc\u8db3\u3092\u52a0\u3048\u308b\u3068\u3001\n\n1. Database\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\n2. Table\u30af\u30e9\u30b9\u306e\u4fdd\u6301\u3057\u3066\u3044\u308b\u30b9\u30ad\u30fc\u30de\u60c5\u5831(\u3053\u3053\u306bType\u3092\u542b\u3080)\u306b\u5f93\u3063\u3066\n3. Entity\u3092\u5410\u304d\u51fa\u3059\n\n\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u300cEntity\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306fTable\u304c\u6301\u3063\u3066\u3044\u308b\u300d\u306e\u3067\u3059\u3002\n\n### Database <> PHP\u9593\u306e\u5909\u63db\n\u3067\u306f\u3001\u5148\u306e\u4f8b\u3067\u6319\u3052\u305f\u3088\u3046\u306a\u300c(PDO\u7684\u306b\u306f)\u65e5\u6642\u578b\u6587\u5b57\u5217\u306b\u3059\u304e\u306a\u3044\u3082\u306e\u3092\u3001Date\u7cfb\u62e1\u5f35\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u51e6\u7406\u3092\u65bd\u3059\u300d\u300c(PDO\u7684\u306b\u306f)json-serialized\u6587\u5b57\u5217\u306b\u3059\u304e\u306a\u3044\u3082\u306e\u3092\u3001json_decode()\u3092\u65bd\u3057\u305fObject\u306b\u5909\u63db\u3059\u308b\u300d\u3068\u3044\u3063\u305f\u51e6\u7406\u3068\u3044\u3046\u306e\u306f\u3001\u3069\u306e\u6bb5\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u307e\u305f\u3001PHP\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u5b58\u3059\u308b = Database\u306b\u6295\u3052\u8fbc\u3080\u969b\u306e\u5909\u63db\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u305d\u306e\u4ed5\u4e8b\u3092\u62c5\u3046\u6b63\u4f53\u304c `Type` \u306b\u306a\u308a\u307e\u3059\u3002\nDatabase\u3068(Cake)PHP\u306e\u6a4b\u6e21\u3057\u7684\u5b58\u5728\u3067\u3059\u3002\n\u5927\u307e\u304b\u306b\u8a00\u3063\u3066\u3001\u6b21\u306e\u8a18\u4e8b\u304c\u6700\u3082\u5165\u9580\u7684\u306a\u89e3\u8aac\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\ncf) [\u72ec\u81ea\u306e\u578b\u3092\u4f5c\u6210\u3059\u308b](http://book.cakephp.org/3.0/ja/orm/database-basics.html#adding-custom-database-types)\n\n#### toPHP()\n\u307e\u305a\u3001\u30b3\u30ec\u304c\u300cDatabase\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u305f\u5024\u3092PHP\u306e\u30af\u30e9\u30b9(\u3084\u5024)\u306b\u5909\u63db\u3059\u308b\u300d\u4ed5\u4e8b\u3092\u884c\u3063\u3066\u3044\u308b\u6b63\u4f53\u3067\u3059\u3002\n\u4f8b\u3068\u3057\u3066\u3001\u6b21\u306f\u300cType\u3068\u3057\u3066Boolean\u3092\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306b\u3001\u30d5\u30a7\u30c3\u30c1\u76f4\u5f8c\u306b\u901a\u308b\u51e6\u7406\u300d\u3067\u3059\u3002\n\n```php\n// https://github.com/cakephp/cakephp/blob/master/src/Database/Type/BoolType.php#L68\npublic function toPHP($value, Driver $driver)\n{\n    if ($value === null) {\n        return null;\n    }\n    if (is_string($value) && !is_numeric($value)) {\n        return strtolower($value) === 'true' ? true : false;\n    }\n    return !empty($value);\n}\n```   \n\u6a19\u6e96\u3067\u68b1\u5305\u3055\u308c\u3066\u3044\u308bType\u3092\u898b\u308b\u9650\u308a\u3001(PDO\u306e)\u8fd4\u308a\u5024\u304cNULL\u3060\u3063\u305f\u5834\u5408\u306b(\u5404\u7a2e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u6709\u52b9\u5024\u3067\u306f\u306a\u304f)NULL\u3092\u8fd4\u3059\u3068\u3044\u3046\u306e\u304c\u304a\u4f5c\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u3001`(string)true`\u3068\u540c\u5024\u3067\u306a\u3051\u308c\u3070false\u3092\u8fd4\u3059\u3057\u3001\u6570\u5024\u3084\u6570\u5b57\u6587\u5b57\u5217\u3067\u3042\u308c\u3070\u300c`== 0`\u4ee5\u5916\u306fFALSE\u300d\u3068\u5224\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u3001\u300c\u5f15\u3063\u5f35\u3063\u3066\u304d\u305f\u5024\u3092boolean\u3068\u3057\u3066\u89e3\u91c8\u3059\u308b\u300d\u51e6\u7406\u304c\u65bd\u3055\u308c\u308b\u306e\u3067\u3059\u3002\n\n#### marshal()\n\u3053\u3061\u3089\u3082\u300cPHP\u306e\u5024\u306b\u5909\u63db\u3059\u308b\u300d\u50cd\u304d\u3092\u6301\u3064\u306e\u3067 `toPHP()`\u3068\u6df7\u540c\u3057\u304c\u3061\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u300c\u30e6\u30fc\u30b6\u30fc\u304b\u3089request\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u304c\u96c6\u7d04\u3057\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3057\u3001Entity\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b(or \u66f4\u65b0\u3059\u308b)\u300d\u969b\u306e\u51e6\u7406\u306b\u306a\u308a\u307e\u3059\u3002\n\u3059\u306a\u308f\u3061\u3001 `$Table->newEntity($data)` \u3060\u3063\u305f\u308a `$Table->patchEntity($entity, $data)`\u306a\u3069\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u30d5\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\n\n\u6b21\u306f `IntegerType` \u306e\u4f8b\u3067\u3001\u300c\u6574\u6570\u5024\u3068\u3057\u3066\u89e3\u91c8\u53ef\u80fd\u3067\u3042\u308c\u3070int\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u305f\u5024\u3092\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070null\u3092\u300d\u8fd4\u3059\u3088\u3046\u306b\u51e6\u7406\u3092\u65bd\u3057\u3066\u3044\u307e\u3059\u3002\n\u3059\u306a\u308f\u3061\u3001\u300cEntity\u306eproperty\u3068\u3057\u3066\u6574\u6570\u5024\u304c\u4fdd\u6301\u3055\u308c\u308b\u3001\u3042\u308b\u3044\u306f\u4e0d\u9069\u5408\u306a\u3089null\u3089\u305b\u308b\u300d\u4e8b\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\n```php\n// https://github.com/cakephp/cakephp/blob/master/src/Database/Type/IntegerType.php#L79\npublic function marshal($value)\n{\n    if ($value === null || $value === '') {\n        return null;\n    }\n    if (is_numeric($value) || ctype_digit($value)) {\n        return (int)$value;\n    }\n    if (is_array($value)) {\n        return 1;\n    }\n    return null;\n}\n```\n\n\u4ed6\u65b9\u3067\u3001\u8208\u5473\u6df1\u3044\u3053\u3068\u306b`JsonType`\u3067\u306f\u300c\u4e0e\u3048\u3089\u308c\u305f\u5024\u3092\u305d\u306e\u307e\u307e\u4fdd\u6301\u3059\u308b\u300d\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```php\n// https://github.com/cakephp/cakephp/blob/master/src/Database/Type/JsonType.php#L72\n    /**\n     * Marshalls request data into a JSON compatible structure.\n     *\n     * @param mixed $value The value to convert.\n     * @return mixed Converted value.\n     */\n    public function marshal($value)\n    {\n        return $value;\n    }\n    \n```\n\n\u3053\u308c\u306f\u3001\u300cDatabase\u306b\u7a81\u3063\u8fbc\u3080\u300d\u3082\u3057\u304f\u306f\u300c\u8fd4\u308a\u5024\u3092\u30e6\u30fc\u30b6\u30fc\u306b(=\u30d6\u30e9\u30a6\u30b6\u306b)\u8868\u793a\u3059\u308b\u300d\u307e\u3067\u306f **\u4f55\u304b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3060\u308d\u3046\u3068\u914d\u5217\u3060\u308d\u3046\u3068\u3001\u76f4\u524d\u307e\u3067\u751f\u30c7\u30fc\u30bf\u306e\u307e\u307e\u6271\u3048\u308b** \u72b6\u614b\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4fbf\u5229\u3002\n\n#### toDatabase, toStatement, toExpression\n\u6700\u5f8c\u304c `toDatabase()` / `toStatement()`, `toExpression()` \u306e3\u3064\u3067\u3059\u3002\n\u3053\u308c\u3089\u306f\u5168\u3066\u300cPHP\u30c7\u30fc\u30bf\u3092Database\u306b\u7a81\u3063\u8fbc\u3080\u300d\u969b\u306b\u547c\u3070\u308c\u3001\u5404driver\u306b\u55b0\u308f\u305b\u308b\u30c7\u30fc\u30bf\u3078\u3068\u5909\u63db\u3092\u884c\u3044\u307e\u3059\u3002\n\n##### toDatabase + toStatement\n`toDatabase`\u306f\u300cDatabase\u306b\u633f\u5165\u3059\u308bvalue\u300d\u3092\u3001`toStatement`\u306f\u300cDatabase\u306b\u901a\u77e5\u3059\u308btype\u300d\u3092\u6307\u5b9a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\u518d\u5ea6`IntegerType`\u3092\u4f8b\u306b\u7528\u3044\u308b\u3068\u3001\u305d\u308c\u305e\u308c\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```php\n// https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/Type/IntegerType.php#L31\n/**\n * Convert integer data into the database format.\n *\n * @param mixed $value The value to convert.\n * @param \\Cake\\Database\\Driver $driver The driver instance to convert with.\n * @return int\n */\npublic function toDatabase($value, Driver $driver)\n{\n    if ($value === null || $value === '') {\n        return null;\n    }\n    if (!is_scalar($value)) {\n        throw new InvalidArgumentException('Cannot convert value to integer');\n    }\n    return (int)$value;\n}\n```\n\n```php\n// https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/Type/IntegerType.php#L67\n/**\n * Get the correct PDO binding type for integer data.\n *\n * @param mixed $value The value being bound.\n * @param \\Cake\\Database\\Driver $driver The driver.\n * @return int\n */\npublic function toStatement($value, Driver $driver)\n{\n    return PDO::PARAM_INT;\n}\n```\n\n\u3053\u308c\u304c\u5b9f\u969b\u306b\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u306f\u3001\u30c9\u30e9\u30a4\u30d0\u30fc\u5185\u306e\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```php\n// https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/Statement/PDOStatement.php#L64\n// @see \npublic function bindValue($column, $value, $type = 'string')\n{\n    if ($type === null) {\n        $type = 'string';\n    }\n    if (!ctype_digit($type)) {\n        list($value, $type) = $this->cast($value, $type);\n    }\n    $this->_statement->bindValue($column, $value, $type);\n}\n```\n\n```php\n// https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/TypeConverterTrait.php#L31\n/**\n * Converts a give value to a suitable database value based on type\n * and return relevant internal statement type\n *\n * @param mixed $value The value to cast\n * @param \\Cake\\Database\\Type|string $type The type name or type instance to use.\n * @return array list containing converted value and internal type\n */\npublic function cast($value, $type)\n{\n    if (is_string($type)) {\n        $type = Type::build($type);\n    }\n    if ($type instanceof TypeInterface) {\n        $value = $type->toDatabase($value, $this->_driver);\n        $type = $type->toStatement($value, $this->_driver);\n    }\n    return [$value, $type];\n}\n```\n\n##### toExpression\n\u524d\u4e8c\u8005\u3068\u306f\u7d4c\u8def\u304c\u4e8b\u306a\u308a\u3001\u300c\u5b9f\u969b\u306b\u5229\u7528\u3055\u308c\u308b\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u300d\u306e\u304c`toExpression` \u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3061\u3089\u306f\u7531\u6765\u3059\u308bInterface\u304c\u7570\u306a\u308a\u3001 [ExpressionTypeInterface](https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/Type/ExpressionTypeInterface.php) \u3068\u306a\u3063\u3066\u3044\u308b\u70b9\u306b\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u3053\u3061\u3089\u306b\u3064\u3044\u3066\u306f\u30b3\u30a2\u30b3\u30fc\u30c9\u5185\u3067\u306e\u5b9f\u88c5\u4f8b\u304c\u5c11\u306a\u304f\u3001\u307e\u305f[book\u3067\u306e\u4f8b](http://book.cakephp.org/3.0/ja/orm/database-basics.html#sql) \u304c\u660e\u77ad\u3060\u3063\u305f\u306e\u3067\u305d\u3061\u3089\u306b\u8aac\u660e\u3092\u8b72\u308a\u307e\u3059\u3002\n(MySQL\u7b49\u306e)Database\u95a2\u6570\u3092\u7528\u3044\u305f\u51e6\u7406\u3092\u884c\u3046\u969b\u306a\u3069\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002\n\n### \u72ec\u81eaType\u306e\u4f5c\u6210\n\u524d\u7ae0\u306e\u5185\u5bb9\u304c\u7406\u89e3\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u72ec\u81ea\u306eType\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u7c21\u5358\u306a\u4ed5\u4e8b\u3067\u3059\u3002\n`App\\Database\\Type`\u4ee5\u4e0b\u306b\u3001  `HogeType`\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u8a2d\u7f6e\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306b\u306f\u3001 [`Cake\\Database\\Type\\ExpressionTypeInterface`](https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/TypeInterface.php) \u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f [`Cake\\Database\\Type`](https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/Type.php) \u3092\u7d99\u627f\u3057\u3066\u3057\u307e\u3048\u3070\u3001\u5fc5\u8981\u6700\u4f4e\u9650\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3060\u3051\u3067\u6e08\u307f\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u30b3\u30a2\u30b3\u30fc\u30c9\u3092\u8997\u3044\u3066\u307f\u308b\u3068 [UuidType](https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Database/Type/UuidType.php) \u306fStringType\u3092\u89aa\u306b\u6301\u3063\u3066\u304a\u308a\u3001\u30b3\u30e1\u30f3\u30c8\u3092\u9664\u3051\u3070\u6570\u884c\u7a0b\u5ea6\u306e\u5b9f\u88c5\u91cf\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\n\n#### \u72ec\u81eaType\u306e\u8aad\u307f\u8fbc\u307f\u30fb\u7d10\u4ed8\u3051\n\u72ec\u81ea\u306b\u4f5c\u6210\u3057\u305fType\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u7c21\u5358\u306b\u547c\u3073\u51fa\u3059\u305f\u3081\u306b\u3001\u300c\u5b9a\u7fa9\u6e08\u307fType\u306e\u767b\u9332\u300d\u3092\u884c\u3044\u307e\u3059\u3002\n\u3053\u306e\u4ed5\u4e8b\u3092\u62c5\u3046\u306e\u304c[Type::map()](http://api.cakephp.org/3.3/class-Cake.Database.Type.html#_map)\u3067\u3059\u3002\n\u4f8b\u3048\u3070php serialized\u306a\u6587\u5b57\u5217\u3092\u6271\u3046`App\\Database\\Type\\PhpSerializedType`\u3092\u4f5c\u6210\u3057\u3001`serialized`\u3068\u3044\u3046\u540d\u524d\u3067\u767b\u9332\u3059\u308b\u306e\u3067\u3042\u308c\u3070\n\n```php\nType::map('serialized', 'App\\Database\\Type\\PhpSerializedType');\n```\n\u3068\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092`config/boostrap.php`\u306a\u3069\u9069\u5207\u306a\u7b87\u6240\u306b\u8a18\u8ff0\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u305d\u306e\u4e0a\u3067\u3001\u5404Table\u30af\u30e9\u30b9\u306e`initializeschema()`\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u5bfe\u5fdcfield\u306b\u5bfe\u3057\u3066\u7d10\u4ed8\u3051\u3092\u884c\u3044\u307e\u3059\u3002(\u5148\u8ff0\u306e\u5185\u5bb9)\n\n```php\nprotected function _initializeSchema(Schema $schema)\n{\n     parent::_initializeSchema($schema);\n     $schema->columnType('data', 'serialized');\n     return $schema;\n}\n```\n"}