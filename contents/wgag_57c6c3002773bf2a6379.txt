{"context": "\u3053\u306e\u8a18\u4e8b\u306f Windows & Microsoft \u6280\u8853\u57fa\u790e Advent Calendar 2015 \u306e21\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u300c\u66f8\u304b\u308c\u3066\u3082\u3042\u3093\u307e\u308a\u30b7\u30a7\u30a2\u3055\u308c\u306a\u3044\u3088\u3046\u306a\u30cd\u30bf\u300d\u6b53\u8fce\u3089\u3057\u3044\u306e\u3067\uff0c\u30de\u30a4\u30ca\u30fc\u306a\u691c\u8a3c\u6280\u8853\u306b\u95a2\u3059\u308b\u8a71\u3092\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u691c\u8a3c\u306b\u95a2\u3059\u308b\u57fa\u790e\u7684\u306a\u7814\u7a76\u3082\u884c\u3063\u3066\u304a\u308a\uff0c\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u304c\u958b\u767a\u3057\u305f\u691c\u8a3c\u30c4\u30fc\u30eb\u306e\u3044\u304f\u3064\u304b\u304c rise4fun \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3053\u3053\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30c4\u30fc\u30eb\u304b\u3089\u4ee5\u4e0b\u306e3\u3064\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nVCC\nBoogie\nZ3\n\n3\u8005\u3068\u3082 rise4fun \u306e\u30b5\u30a4\u30c8\u4e0a\u306b\u30d7\u30ec\u30a4\u30b0\u30e9\u30a6\u30f3\u30c9\u304c\u3042\u308a\uff0c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u7c21\u5358\u306b\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nVCC\nVCC  \u306f\u6ce8\u91c8\u4ed8\u304d C \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6b63\u5f53\u6027\u691c\u8a3c\u30c4\u30fc\u30eb\u3067\u3059\u3002\u4e26\u884c\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u691c\u8a3c\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\u7c21\u5358\u306a\u4f8b\u3068\u3057\u3066\uff0c\u4ee5\u4e0b\u306e strlen \u95a2\u6570\u3092 VCC \u3067\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002Playground \u3067\u3082\u8a66\u305b\u307e\u3059\u3002\n#include <vcc.h>\n\n// \u6587\u5b57\u5217 str \u306e\u9577\u3055 (max_len \u4ee5\u4e0b) \u3092\u8fd4\u3059\u3002\nunsigned strlen(char *str, unsigned max_len)\n  // \u4e8b\u524d\u6761\u4ef6\n  _(requires \\thread_local_array(str, max_len))\n  _(requires str != NULL)\n  // \u4e8b\u5f8c\u6761\u4ef6\n  _(ensures \\result < max_len ==> str[\\result] == 0)\n  _(ensures \\forall unsigned i; i < \\result ==> str[i] != 0)\n{\n  unsigned i;\n  for (i = 0; i < max_len; i++)\n    // \u30eb\u30fc\u30d7\u4e0d\u5909\u5f0f\n    _(invariant \\forall unsigned j; j < i ==> str[j] != 0)\n  {\n    if (str[i] == 0) break;\n  }\n\n  return i;\n}\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e8b\u524d\u6761\u4ef6\u3068\u4e8b\u5f8c\u6761\u4ef6\u3092\u6ce8\u91c8 _(requires ...) \u3068 _(eusures ...) \u3067\u4e0e\u3048\u3066\u3044\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u9014\u4e2d\u306b\u8868\u660e _(assert ...) \u3092\u5165\u308c\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u30db\u30fc\u30a2\u8ad6\u7406\u306f\u7686\u3055\u3093\u3088\u304f\u3054\u5b58\u77e5\u3067\u3059\u3088\u306d\uff01 \u30eb\u30fc\u30d7\u3092\u542b\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\uff0c\u591a\u304f\u306e\u5834\u5408\uff0c\u691c\u8a3c\u306e\u969b\u306b\u30eb\u30fc\u30d7\u4e0d\u5909\u5f0f\u304c\u5fc5\u8981\u3067\u3059\u3002VCC \u3067\u306f\u6ce8\u91c8 _(invariant ...) \u3067\u30eb\u30fc\u30d7\u4e0d\u5909\u5f0f\u3092\u660e\u793a\u7684\u306b\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5bfe\u3059\u308b\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\u691c\u8a3c\u306b\u6210\u529f\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\nVerification of strlen succeeded. [3.16]\n\n\nBoogie\nBoogie \u306f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u691c\u8a3c\u5668\u306e\u305f\u3081\u306e\u4e2d\u9593\u8a00\u8a9e\u3067\u3059\u3002\u306a\u304a\uff0cBoogie\u306f Boogie\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u6ce8\u91c8\u4ed8\u304d\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u691c\u8a3c\u30c4\u30fc\u30eb\u306e\u540d\u524d\u3067\u3082\u3042\u308a\u307e\u3059\u3002VCC \u3084 Spec# \u306a\u3069\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u691c\u8a3c\u5668\u306e\u5185\u90e8\u3067\u5229\u7528\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\nVCC \u3067\u691c\u8a3c\u3092\u884c\u3063\u305f\u5148\u306e\u4f8b\u306f\uff0c\uff08\u3042\u307e\u308a\u5fe0\u5b9f\u306b\u306f\u518d\u73fe\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u304c\uff09Boogie \u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059 (Playground)\u3002\nprocedure strlen(str: [int]int, max_len: int) returns (result: int)\n  // \u4e8b\u524d\u6761\u4ef6\n  requires max_len >= 0;\n  // \u4e8b\u5f8c\u6761\u4ef6\n  ensures result < max_len ==> str[result] == 0;\n  ensures (forall i: int :: 0 <= i && i < result ==> str[i] != 0);\n{\n  var i: int;\n  i := 0;\n  while (i < max_len)\n    // \u30eb\u30fc\u30d7\u4e0d\u5909\u5f0f\n    invariant (forall j: int :: 0 <= j && j < i ==> str[j] != 0);\n  {\n    if (str[i] == 0) { break; } \n  }\n\n  result := i;\n}\n\n\u691c\u8a3c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\nBoogie program verifier finished with 1 verified, 0 errors\n\n\nZ3\nZ3  \u306f SMT \u30bd\u30eb\u30d0\u3068\u547c\u3070\u308c\u308b\u7a2e\u985e\u306e\u30c4\u30fc\u30eb\u3067\uff0c\u7b97\u8853\u5f0f\u306a\u3069\u3092\u542b\u3080\u8ad6\u7406\u5f0f\u306e\u5145\u8db3\u53ef\u80fd\u6027\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Boogie \u3092\u306f\u3058\u3081\u3068\u3059\u308b\u69d8\u3005\u306a\u8a3c\u660e\u5668\u306e\u5185\u90e8\u3067\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u7c21\u5358\u306a\u4f8b\u3068\u3057\u3066\uff0cx>1\u2227y>1\u22272x+3y<11x > 1 \\land y > 1 \\land 2x + 3y < 11 \u304c\u6574\u6570\u4e0a\u3067\u5145\u8db3\u53ef\u80fd\u304b\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002Playground \u3067\u3082\u8a66\u305b\u307e\u3059\u3002\n(declare-fun x () Int)\n(declare-fun y () Int)\n\n(assert (> x 1))\n(assert (> y 1))\n(assert (< (+ (* 2 x) (* 3 y)) 11))\n\n(check-sat)  ; \u5145\u8db3\u53ef\u80fd\u6027\u3092\u5224\u5b9a\n(get-model)  ; \u5f0f\u3092\u5145\u8db3\u3059\u308b\u5272\u5f53\u3066\u3092\u8868\u793a\uff08\u3042\u308c\u3070\uff09\n\n\u3053\u308c\u3092 Z3 \u306b\u6295\u3052\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\nsat\n(model \n  (define-fun y () Int \n    2)\n  (define-fun x () Int\n    2) \n)\n\n1\u884c\u76ee\u306b\u8868\u793a\u3055\u308c\u308b sat \u306f (check-sat) \u306e\u7d50\u679c\u3067\u3042\u308a\uff0cx>1\u2227y>1\u22272x+3y<11x > 1 \\land y > 1 \\land 2x + 3y < 11 \u304c\u5145\u8db3\u53ef\u80fd\u3067\u3042\u308b\u3068\u5224\u5b9a\u3055\u308c\u305f\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u5145\u8db3\u4e0d\u80fd\u3068\u5224\u5b9a\u3055\u308c\u308b\u3068 unsat \u304c\u8fd4\u308a\uff0cZ3 \u304c\u529b\u5c3d\u304d\u3066\u5224\u5b9a\u3092\u8ae6\u3081\u308b\u3068 unknown \u304c\u8fd4\u308a\u307e\u3059\u3002\n\u5145\u8db3\u53ef\u80fd\u3067\u3042\u3063\u305f\u5834\u5408\uff0c(get-model) \u3067\u5f0f\u3092\u5145\u8db3\u3059\u308b\u5272\u5f53\u3066\uff08\u30e2\u30c7\u30eb\uff09\u306e\u4e00\u3064\u3092\u8868\u793a\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306e\u30e2\u30c7\u30eb\u306f {x\u21a62,\u00a0y\u21a62}\\{ x \\mapsto 2,\\ y \\mapsto  2 \\} \u3068\u4e00\u610f\u306b\u6c7a\u307e\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u3055\u3059\u304c\u306b VCC \u3068 Boogie \u3068 Z3 \u3092\u4e00\u7dd2\u306b\u7d39\u4ecb\u3057\u3066\u3044\u308b\u65e5\u672c\u8a9e\u306e\u6587\u732e\u306f\u3053\u308c\u304c\u521d\u3081\u3066\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f \u4eca\u5ea6\u306fZ3\u306e\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u305f\u3044\u306a\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [Windows & Microsoft \u6280\u8853\u57fa\u790e Advent Calendar 2015](http://qiita.com/advent-calendar/2015/ms) \u306e21\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u300c\u66f8\u304b\u308c\u3066\u3082\u3042\u3093\u307e\u308a\u30b7\u30a7\u30a2\u3055\u308c\u306a\u3044\u3088\u3046\u306a\u30cd\u30bf\u300d\u6b53\u8fce\u3089\u3057\u3044\u306e\u3067\uff0c\u30de\u30a4\u30ca\u30fc\u306a\u691c\u8a3c\u6280\u8853\u306b\u95a2\u3059\u308b\u8a71\u3092\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u691c\u8a3c\u306b\u95a2\u3059\u308b\u57fa\u790e\u7684\u306a\u7814\u7a76\u3082\u884c\u3063\u3066\u304a\u308a\uff0c\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u304c\u958b\u767a\u3057\u305f\u691c\u8a3c\u30c4\u30fc\u30eb\u306e\u3044\u304f\u3064\u304b\u304c [rise4fun](http://www.rise4fun.com/) \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3053\u3053\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30c4\u30fc\u30eb\u304b\u3089\u4ee5\u4e0b\u306e3\u3064\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n- VCC\n- Boogie\n- Z3\n\n3\u8005\u3068\u3082 rise4fun \u306e\u30b5\u30a4\u30c8\u4e0a\u306b\u30d7\u30ec\u30a4\u30b0\u30e9\u30a6\u30f3\u30c9\u304c\u3042\u308a\uff0c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u7c21\u5358\u306b\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n# VCC\n\n[VCC](http://research.microsoft.com/en-us/projects/vcc/)  \u306f\u6ce8\u91c8\u4ed8\u304d C \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6b63\u5f53\u6027\u691c\u8a3c\u30c4\u30fc\u30eb\u3067\u3059\u3002\u4e26\u884c\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u691c\u8a3c\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u7c21\u5358\u306a\u4f8b\u3068\u3057\u3066\uff0c\u4ee5\u4e0b\u306e ``strlen`` \u95a2\u6570\u3092 VCC \u3067\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002[Playground](http://www.rise4fun.com/Vcc/slRss) \u3067\u3082\u8a66\u305b\u307e\u3059\u3002\n\n```c\n#include <vcc.h>\n\n// \u6587\u5b57\u5217 str \u306e\u9577\u3055 (max_len \u4ee5\u4e0b) \u3092\u8fd4\u3059\u3002\nunsigned strlen(char *str, unsigned max_len)\n  // \u4e8b\u524d\u6761\u4ef6\n  _(requires \\thread_local_array(str, max_len))\n  _(requires str != NULL)\n  // \u4e8b\u5f8c\u6761\u4ef6\n  _(ensures \\result < max_len ==> str[\\result] == 0)\n  _(ensures \\forall unsigned i; i < \\result ==> str[i] != 0)\n{\n  unsigned i;\n  for (i = 0; i < max_len; i++)\n    // \u30eb\u30fc\u30d7\u4e0d\u5909\u5f0f\n    _(invariant \\forall unsigned j; j < i ==> str[j] != 0)\n  {\n    if (str[i] == 0) break;\n  }\n\n  return i;\n}\n```\n\n<!--\n// by tnagao at wgag.net\n#include <vcc.h>\n\n// Returns the length of str (at most max_len).\nunsigned strlen(char *str, unsigned max_len)\n  // preconditions\n  _(requires \\thread_local_array(str, max_len))\n  _(requires str != NULL)\n  // postconditoins\n  _(ensures \\result < max_len ==> str[\\result] == 0)\n  _(ensures \\forall unsigned i; i < \\result ==> str[i] != 0)\n{\n  unsigned i;\n  for (i = 0; i < max_len; i++)\n    // loop invariants\n    _(invariant \\forall unsigned j; j < i ==> str[j] != 0)\n  {\n    if (str[i] == 0) break;\n  }\n\n  return i;\n}\n-->\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e8b\u524d\u6761\u4ef6\u3068\u4e8b\u5f8c\u6761\u4ef6\u3092\u6ce8\u91c8 ``_(requires ...)`` \u3068 ``_(eusures ...)`` \u3067\u4e0e\u3048\u3066\u3044\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u9014\u4e2d\u306b\u8868\u660e ``_(assert ...)`` \u3092\u5165\u308c\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n\u30db\u30fc\u30a2\u8ad6\u7406\u306f\u7686\u3055\u3093\u3088\u304f\u3054\u5b58\u77e5\u3067\u3059\u3088\u306d\uff01 \u30eb\u30fc\u30d7\u3092\u542b\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\uff0c\u591a\u304f\u306e\u5834\u5408\uff0c\u691c\u8a3c\u306e\u969b\u306b\u30eb\u30fc\u30d7\u4e0d\u5909\u5f0f\u304c\u5fc5\u8981\u3067\u3059\u3002VCC \u3067\u306f\u6ce8\u91c8 ``_(invariant ...)`` \u3067\u30eb\u30fc\u30d7\u4e0d\u5909\u5f0f\u3092\u660e\u793a\u7684\u306b\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5bfe\u3059\u308b\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\u691c\u8a3c\u306b\u6210\u529f\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```\nVerification of strlen succeeded. [3.16]\n```\n\n# Boogie\n\n[Boogie](http://research.microsoft.com/en-us/projects/boogie/) \u306f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u691c\u8a3c\u5668\u306e\u305f\u3081\u306e\u4e2d\u9593\u8a00\u8a9e\u3067\u3059\u3002\u306a\u304a\uff0cBoogie\u306f Boogie\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u6ce8\u91c8\u4ed8\u304d\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u691c\u8a3c\u30c4\u30fc\u30eb\u306e\u540d\u524d\u3067\u3082\u3042\u308a\u307e\u3059\u3002VCC \u3084 Spec# \u306a\u3069\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u691c\u8a3c\u5668\u306e\u5185\u90e8\u3067\u5229\u7528\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\nVCC \u3067\u691c\u8a3c\u3092\u884c\u3063\u305f\u5148\u306e\u4f8b\u306f\uff0c\uff08\u3042\u307e\u308a\u5fe0\u5b9f\u306b\u306f\u518d\u73fe\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u304c\uff09Boogie \u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059 ([Playground](http://rise4fun.com/Boogie/aygT))\u3002\n\n```c\nprocedure strlen(str: [int]int, max_len: int) returns (result: int)\n  // \u4e8b\u524d\u6761\u4ef6\n  requires max_len >= 0;\n  // \u4e8b\u5f8c\u6761\u4ef6\n  ensures result < max_len ==> str[result] == 0;\n  ensures (forall i: int :: 0 <= i && i < result ==> str[i] != 0);\n{\n  var i: int;\n  i := 0;\n  while (i < max_len)\n    // \u30eb\u30fc\u30d7\u4e0d\u5909\u5f0f\n    invariant (forall j: int :: 0 <= j && j < i ==> str[j] != 0);\n  {\n    if (str[i] == 0) { break; } \n  }\n    \n  result := i;\n}\n```\n\n<!--\n// by tnagao at wgag.net\n\nprocedure strlen(str: [int]int, max_len: int) returns (result: int)\n  // preconditions \n  requires max_len >= 0;\n  // postconditions\n  ensures result < max_len ==> str[result] == 0;\n  ensures (forall i: int :: 0 <= i && i < result ==> str[i] != 0);\n{\n  var i: int;\n  i := 0;\n  while (i < max_len)\n    // loop invariants\n    invariant (forall j: int :: 0 <= j && j < i ==> str[j] != 0);\n  {\n    if (str[i] == 0) { break; } \n  }\n   \n  result := i;\n}\n-->\n\n\n\u691c\u8a3c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```\nBoogie program verifier finished with 1 verified, 0 errors\n```\n\n\n# Z3\n\n[Z3](https://z3.codeplex.com/)  \u306f SMT \u30bd\u30eb\u30d0\u3068\u547c\u3070\u308c\u308b\u7a2e\u985e\u306e\u30c4\u30fc\u30eb\u3067\uff0c\u7b97\u8853\u5f0f\u306a\u3069\u3092\u542b\u3080\u8ad6\u7406\u5f0f\u306e\u5145\u8db3\u53ef\u80fd\u6027\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Boogie \u3092\u306f\u3058\u3081\u3068\u3059\u308b\u69d8\u3005\u306a\u8a3c\u660e\u5668\u306e\u5185\u90e8\u3067\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u7c21\u5358\u306a\u4f8b\u3068\u3057\u3066\uff0c$x > 1 \\land y > 1 \\land 2x + 3y < 11$ \u304c\u6574\u6570\u4e0a\u3067\u5145\u8db3\u53ef\u80fd\u304b\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002[Playground](http://rise4fun.com/Z3/Aqz2) \u3067\u3082\u8a66\u305b\u307e\u3059\u3002\n\n```\n(declare-fun x () Int)\n(declare-fun y () Int)\n\n(assert (> x 1))\n(assert (> y 1))\n(assert (< (+ (* 2 x) (* 3 y)) 11))\n\n(check-sat)  ; \u5145\u8db3\u53ef\u80fd\u6027\u3092\u5224\u5b9a\n(get-model)  ; \u5f0f\u3092\u5145\u8db3\u3059\u308b\u5272\u5f53\u3066\u3092\u8868\u793a\uff08\u3042\u308c\u3070\uff09\n```\n<!--\n; by tnagao at wgag.net\n\n(declare-fun x () Int)\n(declare-fun y () Int)\n\n(assert (> x 1))\n(assert (> y 1))\n(assert (< (+ (* 2 x) (* 3 y)) 11))\n\n(check-sat)  ; check satisfiability\n(get-model)  ; show an assignment satisfying the formula (if any)\n-->\n\n\u3053\u308c\u3092 Z3 \u306b\u6295\u3052\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n```\nsat\n(model \n  (define-fun y () Int \n    2)\n  (define-fun x () Int\n    2) \n)\n```\n\n1\u884c\u76ee\u306b\u8868\u793a\u3055\u308c\u308b ``sat`` \u306f ``(check-sat)`` \u306e\u7d50\u679c\u3067\u3042\u308a\uff0c$x > 1 \\land y > 1 \\land 2x + 3y < 11$ \u304c\u5145\u8db3\u53ef\u80fd\u3067\u3042\u308b\u3068\u5224\u5b9a\u3055\u308c\u305f\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u5145\u8db3\u4e0d\u80fd\u3068\u5224\u5b9a\u3055\u308c\u308b\u3068 ``unsat`` \u304c\u8fd4\u308a\uff0cZ3 \u304c\u529b\u5c3d\u304d\u3066\u5224\u5b9a\u3092\u8ae6\u3081\u308b\u3068 ``unknown`` \u304c\u8fd4\u308a\u307e\u3059\u3002\n\n\u5145\u8db3\u53ef\u80fd\u3067\u3042\u3063\u305f\u5834\u5408\uff0c``(get-model)`` \u3067\u5f0f\u3092\u5145\u8db3\u3059\u308b\u5272\u5f53\u3066\uff08\u30e2\u30c7\u30eb\uff09\u306e\u4e00\u3064\u3092\u8868\u793a\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306e\u30e2\u30c7\u30eb\u306f $\\\\{ x \\mapsto 2,\\ y \\mapsto  2 \\\\}$ \u3068\u4e00\u610f\u306b\u6c7a\u307e\u308b\u306f\u305a\u3067\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u3055\u3059\u304c\u306b VCC \u3068 Boogie \u3068 Z3 \u3092\u4e00\u7dd2\u306b\u7d39\u4ecb\u3057\u3066\u3044\u308b\u65e5\u672c\u8a9e\u306e\u6587\u732e\u306f\u3053\u308c\u304c\u521d\u3081\u3066\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f \u4eca\u5ea6\u306fZ3\u306e\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u305f\u3044\u306a\u3002\n\n", "tags": ["Microsoft"]}