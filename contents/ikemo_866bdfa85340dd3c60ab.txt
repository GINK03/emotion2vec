{"context": " More than 1 year has passed since last update.AssertJ\u3067\u72ec\u81ea\u30af\u30e9\u30b9\u306e\u30ea\u30b9\u30c8\u3092\u30c6\u30b9\u30c8\u3059\u308b\u5834\u5408\u306f\u3001Extract\u3092\u4f7f\u3046\u306e\u304c\u697d\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\npublic class User {\n    public String id;\n    public int rank;\n\n    public User(String id, int rank) {\n        this.id = id;\n        this.rank = rank;\n    }\n}\n\n\u305d\u306e\u3068\u304d\u306b\u3001\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002\nList<User> users = new ArrayList<>();\nusers.add(new User(\"abc\", 10));\nusers.add(new User(\"def\", 20));\n\n\u3053\u306e\u3068\u304d\u306f\u3001Extractor\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\u307e\u305a\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u66f8\u304d\u65b9\u3002\nimport static org.assertj.core.api.Assertions.*;\n\nimport org.assertj.core.api.iterable.Extractor;\nimport org.assertj.core.groups.Tuple;\n\n// 1\u3064\u76ee\u304c\u5c55\u958b\u5143\u30012\u3064\u76ee\u304c\u5c55\u958b\u5148(\u901a\u5e38\u306fTuple)\npublic class UserExtractor implements Extractor<User, Tuple>\n{\n    @Override\n    public Tuple extract(User user)\n    {\n        // tuple\u306fObject\u306e\u53ef\u5909\u9577\u5f15\u6570\u3092\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\n        return tuple(user.id, user.rank);\n    }\n}\n\n\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nassertThat(users).extracting(new UserExtractor())\n    .contains(tuple(\"abc\", 10))\n    .contains(tuple(\"def\", 20));\n\n\u3082\u3061\u308d\u3093\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\nassertThat(users).extracting((u) -> tuple(u.id, u.rank))\n    .contains(tuple(\"abc\", 10))\n    .contains(tuple(\"def\", 20));\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3092\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\nassertThat(users).extracting(\"id\", \"rank\")\n    .contains(tuple(\"abc\", 10))\n    .contains(tuple(\"def\", 20));\n\nAssertJ\u3067\u72ec\u81ea\u30af\u30e9\u30b9\u306e\u30ea\u30b9\u30c8\u3092\u30c6\u30b9\u30c8\u3059\u308b\u5834\u5408\u306f\u3001Extract\u3092\u4f7f\u3046\u306e\u304c\u697d\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\n\n```java\npublic class User {\n    public String id;\n    public int rank;\n\n    public User(String id, int rank) {\n        this.id = id;\n        this.rank = rank;\n    }\n}\n```\n\n\u305d\u306e\u3068\u304d\u306b\u3001\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\n```java\nList<User> users = new ArrayList<>();\nusers.add(new User(\"abc\", 10));\nusers.add(new User(\"def\", 20));\n```\n\n\u3053\u306e\u3068\u304d\u306f\u3001Extractor\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\u307e\u305a\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u66f8\u304d\u65b9\u3002\n\n```java\nimport static org.assertj.core.api.Assertions.*;\n\nimport org.assertj.core.api.iterable.Extractor;\nimport org.assertj.core.groups.Tuple;\n\n// 1\u3064\u76ee\u304c\u5c55\u958b\u5143\u30012\u3064\u76ee\u304c\u5c55\u958b\u5148(\u901a\u5e38\u306fTuple)\npublic class UserExtractor implements Extractor<User, Tuple>\n{\n    @Override\n    public Tuple extract(User user)\n    {\n        // tuple\u306fObject\u306e\u53ef\u5909\u9577\u5f15\u6570\u3092\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\n        return tuple(user.id, user.rank);\n    }\n}\n```\n\n\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```java\nassertThat(users).extracting(new UserExtractor())\n    .contains(tuple(\"abc\", 10))\n    .contains(tuple(\"def\", 20));\n```\n\n\u3082\u3061\u308d\u3093\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```java\nassertThat(users).extracting((u) -> tuple(u.id, u.rank))\n    .contains(tuple(\"abc\", 10))\n    .contains(tuple(\"def\", 20));\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3092\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```java\nassertThat(users).extracting(\"id\", \"rank\")\n    .contains(tuple(\"abc\", 10))\n    .contains(tuple(\"def\", 20));\n```\n", "tags": ["Java", "unittest", "assertj"]}