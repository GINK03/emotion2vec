{"context": "jupyter qtconsole\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\nConfiguration options\nshow source\n\n\u4f7f\u3044\u65b9\n\n\n~/.jupyer/jupyter_qtconsole_config.py\u3092\u4f5c\u6210\u3057\u3066\u4ee5\u4e0b\u3092\u30b3\u30d4\u30da\u3057\u3001:\u3092=\u306b\u5909\u3048\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8#\u3092c.\u306b\u5909\u3048\u3066\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\nc.JupyterQtConsoleApp.hide_menubar : True  # \u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u96a0\u3059\nc.JupyterWidget.syntax_style = 'monokai'  # monokai(\u80cc\u666f\u9ed2)\u30b9\u30bf\u30a4\u30eb\u306b\u3059\u308b\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067qtconsole\u3092\u7acb\u3061\u4e0a\u3052\u305f\u3068\u304d\u3001\u5e38\u306b\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306a\u3057\u306e\u80cc\u666f\u9ed2\u8272\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u7acb\u3061\u4e0a\u304c\u308a\u307e\u3059\u3002\n\njupyter_qtconsole_config.py\n# https://jupyter.org/qtconsole/stable/config_options.html\n# Configuration options\n# =====================\n\n# These options can be set in ``~/.jupyer/jupyter_qtconsole_config.py``, or\n# at the command line when you start it.\n\n\n# ConnectionFileMixin.connection_file : Unicode\n#     Default: ``''``\n\n#     JSON file in which to store connection info [default: kernel-<pid>.json]\n\n#     This file will contain the IP, ports, and authentication key needed to connect\n#     clients to this kernel. By default, this file will be created in the security dir\n#     of the current profile, but can be specified by absolute path.\n\n\n# ConnectionFileMixin.control_port : Int\n#     Default: ``0``\n\n#     set the control (ROUTER) port [default: random]\n\n# ConnectionFileMixin.hb_port : Int\n#     Default: ``0``\n\n#     set the heartbeat port [default: random]\n\n# ConnectionFileMixin.iopub_port : Int\n#     Default: ``0``\n\n#     set the iopub (PUB) port [default: random]\n\n# ConnectionFileMixin.ip : Unicode\n#     Default: ``''``\n\n#     Set the kernel's IP address [default localhost].\n#     If the IP address is something other than localhost, then\n#     Consoles on other machines will be able to connect\n#     to the Kernel, so be careful!\n\n# ConnectionFileMixin.shell_port : Int\n#     Default: ``0``\n\n#     set the shell (ROUTER) port [default: random]\n\n# ConnectionFileMixin.stdin_port : Int\n#     Default: ``0``\n\n#     set the stdin (ROUTER) port [default: random]\n\n# ConnectionFileMixin.transport : 'tcp'|'ipc'\n#     Default: ``'tcp'``\n\n#     No description\n\n# JupyterConsoleApp.confirm_exit : CBool\n#     Default: ``True``\n\n\n#     Set to display confirmation dialog on exit. You can always use 'exit' or 'quit',\n#     to force a direct exit without any confirmation.\n\n# JupyterConsoleApp.existing : CUnicode\n#     Default: ``''``\n\n#     Connect to an already running kernel\n\n# JupyterConsoleApp.kernel_name : Unicode\n#     Default: ``'python'``\n\n#     The name of the default kernel to start.\n\n# JupyterConsoleApp.sshkey : Unicode\n#     Default: ``''``\n\n#     Path to the ssh key to use for logging in to the ssh server.\n\n# JupyterConsoleApp.sshserver : Unicode\n#     Default: ``''``\n\n#     The SSH server to use to connect to the kernel.\n\n\n# Application.log_datefmt : Unicode\n#     Default: ``'%Y-%m-%d %H:%M:%S'``\n\n#     The date format used by logging formatters for %(asctime)s\n\n# Application.log_format : Unicode\n#     Default: ``'[%(name)s]%(highlevel)s %(message)s'``\n\n#     The Logging format template\n\n# Application.log_level : 0|10|20|30|40|50|'DEBUG'|'INFO'|'WARN'|'ERROR'|'CRITICAL'\n#     Default: ``30``\n\n#     Set the log level by value or name.\n\n# JupyterApp.answer_yes : Bool\n#     Default: ``False``\n\n#     Answer yes to any prompts.\n\n# JupyterApp.config_file : Unicode\n#     Default: ``''``\n\n#     Full path of a config file.\n\n# JupyterApp.config_file_name : Unicode\n#     Default: ``''``\n\n#     Specify a config file to load.\n\n# JupyterApp.generate_config : Bool\n#     Default: ``False``\n\n#     Generate default config file.\n\n# JupyterQtConsoleApp.display_banner : CBool\n#     Default: ``True``\n\n#     Whether to display a banner upon starting the QtConsole.\n\n# JupyterQtConsoleApp.hide_menubar : CBool\n#     Default: ``False``\n\n#     Start the console window with the menu bar hidden.\n\n# JupyterQtConsoleApp.maximize : CBool\n#     Default: ``False``\n\n#     Start the console window maximized.\n\n# JupyterQtConsoleApp.plain : CBool\n#     Default: ``False``\n\n#     Use a plaintext widget instead of rich text (plain can't print/save).\n\n# JupyterQtConsoleApp.stylesheet : Unicode\n#     Default: ``''``\n\n#     path to a custom CSS stylesheet\n\n\n# ConsoleWidget.ansi_codes : Bool\n#     Default: ``True``\n\n#     Whether to process ANSI escape codes.\n\n# ConsoleWidget.buffer_size : Int\n#     Default: ``500``\n\n\n#     The maximum number of lines of text before truncation. Specifying a\n#     non-positive number disables text truncation (not recommended).\n\n\n# ConsoleWidget.execute_on_complete_input : Bool\n#     Default: ``True``\n\n#     Whether to automatically execute on syntactically complete input.\n\n#     If False, Shift-Enter is required to submit each execution.\n#     Disabling this is mainly useful for non-Python kernels,\n#     where the completion check would be wrong.\n\n\n# ConsoleWidget.font_family : Unicode\n#     Default: ``''``\n\n#     The font family to use for the console.\n#     On OSX this defaults to Monaco, on Windows the default is\n#     Consolas with fallback of Courier, and on other platforms\n#     the default is Monospace.\n\n\n# ConsoleWidget.font_size : Int\n#     Default: ``0``\n\n#     The font size. If unconfigured, Qt will be entrusted\n#     with the size of the font.\n\n\n# ConsoleWidget.gui_completion : 'plain'|'droplist'|'ncurses'\n#     Default: ``'ncurses'``\n\n\n#     The type of completer to use. Valid values are:\n\n#     'plain'   : Show the available completion as a text list\n#                 Below the editing area.\n#     'droplist': Show the completion in a drop down list navigable\n#                 by the arrow keys, and from which you can select\n#                 completion by pressing Return.\n#     'ncurses' : Show the completion as a text list which is navigable by\n#                 `tab` and arrow keys.\n\n\n# ConsoleWidget.height : Int\n#     Default: ``25``\n\n#     The height of the console at start time in number\n#     of characters (will double with `vsplit` paging)\n\n\n# ConsoleWidget.include_other_output : Bool\n#     Default: ``False``\n\n#     Whether to include output from clients\n#     other than this one sharing the same kernel.\n\n#     Outputs are not displayed until enter is pressed.\n\n\n# ConsoleWidget.kind : 'plain'|'rich'\n#     Default: ``'plain'``\n\n\n#     The type of underlying text widget to use. Valid values are 'plain',\n#     which specifies a QPlainTextEdit, and 'rich', which specifies a\n#     QTextEdit.\n\n\n# ConsoleWidget.paging : 'inside'|'hsplit'|'vsplit'|'custom'|'none'\n#     Default: ``'inside'``\n\n\n#     The type of paging to use. Valid values are:\n\n#     'inside'\n#        The widget pages like a traditional terminal.\n#     'hsplit'\n#        When paging is requested, the widget is split horizontally. The top\n#        pane contains the console, and the bottom pane contains the paged text.\n#     'vsplit'\n#        Similar to 'hsplit', except that a vertical splitter is used.\n#     'custom'\n#        No action is taken by the widget beyond emitting a\n#        'custom_page_requested(str)' signal.\n#     'none'\n#        The text is written directly to the console.\n\n\n# ConsoleWidget.width : Int\n#     Default: ``81``\n\n#     The width of the console at start time in number\n#     of characters (will double with `hsplit` paging)\n\n\n# HistoryConsoleWidget.history_lock : Bool\n#     Default: ``False``\n\n#     No description\n\n# FrontendWidget.banner : Unicode\n#     Default: ``''``\n\n#     No description\n\n# FrontendWidget.clear_on_kernel_restart : Bool\n#     Default: ``True``\n\n#     Whether to clear the console when the kernel is restarted\n\n# FrontendWidget.confirm_restart : Bool\n#     Default: ``True``\n\n#     Whether to ask for user confirmation when restarting kernel\n\n# FrontendWidget.enable_calltips : Bool\n#     Default: ``True``\n\n#     Whether to draw information calltips on open-parentheses.\n\n# FrontendWidget.is_complete_timeout : Float\n#     Default: ``0.25``\n\n#     Seconds to wait for is_complete replies from the kernel.\n\n# FrontendWidget.lexer_class : DottedObjectName\n#     Default: ``traitlets.Undefined``\n\n#     The pygments lexer class to use.\n\n\n# JupyterWidget.editor : Unicode\n#     Default: ``''``\n\n\n#     A command for invoking a system text editor. If the string contains a\n#     {filename} format specifier, it will be used. Otherwise, the filename\n#     will be appended to the end the command.\n\n\n# JupyterWidget.editor_line : Unicode\n#     Default: ``''``\n\n\n#     The editor command to use when a specific line number is requested. The\n#     string should contain two format specifiers: {line} and {filename}. If\n#     this parameter is not specified, the line number option to the %edit\n#     magic will be ignored.\n\n\n# JupyterWidget.in_prompt : Unicode\n#     Default: ``'In [<span class=\"in-prompt-number\">%i</span>]: '``\n\n#     No description\n\n# JupyterWidget.input_sep : Unicode\n#     Default: ``'\\\\n'``\n\n#     No description\n\n# JupyterWidget.out_prompt : Unicode\n#     Default: ``'Out[<span class=\"out-prompt-number\">%i</span>]: '``\n\n#     No description\n\n# JupyterWidget.output_sep : Unicode\n#     Default: ``''``\n\n#     No description\n\n# JupyterWidget.output_sep2 : Unicode\n#     Default: ``''``\n\n#     No description\n\n# JupyterWidget.style_sheet : Unicode\n#     Default: ``''``\n\n\n#     A CSS stylesheet. The stylesheet can contain classes for:\n#         1. Qt: QPlainTextEdit, QFrame, QWidget, etc\n#         2. Pygments: .c, .k, .o, etc. (see PygmentsHighlighter)\n#         3. QtConsole: .error, .in-prompt, .out-prompt, etc\n\n\n# JupyterWidget.syntax_style : Unicode\n#     Default: ``''``\n\n\n#     If not empty, use this Pygments style for syntax highlighting.\n#     Otherwise, the style sheet is queried for Pygments style\n#     information.\n\n\n# KernelManager.autorestart : Bool\n#     Default: ``False``\n\n#     Should we autorestart the kernel if it dies.\n\n# KernelManager.kernel_cmd : List\n#     Default: ``[]``\n\n#     DEPRECATED: Use kernel_name instead.\n\n#     The Popen Command to launch the kernel.\n#     Override this if you have a custom kernel.\n#     If kernel_cmd is specified in a configuration file,\n#     Jupyter does not pass any arguments to the kernel,\n#     because it cannot make any assumptions about the\n#     arguments that the kernel understands. In particular,\n#     this means that the kernel does not receive the\n#     option --debug if it given on the Jupyter command line.\n\n\n# Session.buffer_threshold : Int\n#     Default: ``1024``\n\n#     Threshold (in bytes) beyond which an object's buffer should be extracted to avoid pickling.\n\n# Session.copy_threshold : Int\n#     Default: ``65536``\n\n#     Threshold (in bytes) beyond which a buffer should be sent without copying.\n\n# Session.debug : Bool\n#     Default: ``False``\n\n#     Debug output in the Session\n\n# Session.digest_history_size : Int\n#     Default: ``65536``\n\n#     The maximum number of digests to remember.\n\n#     The digest history will be culled when it exceeds this value.\n\n\n# Session.item_threshold : Int\n#     Default: ``64``\n\n#     The maximum number of items for a container to be introspected for custom serialization.\n#     Containers larger than this are pickled outright.\n\n\n# Session.key : CBytes\n#     Default: ``b''``\n\n#     execution key, for signing messages.\n\n# Session.keyfile : Unicode\n#     Default: ``''``\n\n#     path to file containing execution key.\n\n# Session.metadata : Dict\n#     Default: ``{}``\n\n#     Metadata dictionary, which serves as the default top-level metadata dict for each message.\n\n# Session.packer : DottedObjectName\n#     Default: ``'json'``\n\n#     The name of the packer for serializing messages.\n#     Should be one of 'json', 'pickle', or an import name\n#     for a custom callable serializer.\n\n# Session.session : CUnicode\n#     Default: ``''``\n\n#     The UUID identifying this session.\n\n# Session.signature_scheme : Unicode\n#     Default: ``'hmac-sha256'``\n\n#     The digest scheme used to construct the message signatures.\n#     Must have the form 'hmac-HASH'.\n\n# Session.unpacker : DottedObjectName\n#     Default: ``'json'``\n\n#     The name of the unpacker for unserializing messages.\n#     Only used with custom functions for `packer`.\n\n# Session.username : Unicode\n#     Default: ``'minrk'``\n\n#     Username for the Session. Default is your system username.\n\n\njupyter qtconsole\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\n* [Configuration options](https://jupyter.org/qtconsole/stable/config_options.html)\n* [show source](https://jupyter.org/qtconsole/stable/_sources/config_options.txt)\n\n\n\u4f7f\u3044\u65b9\n\n* `~/.jupyer/jupyter_qtconsole_config.py`\u3092\u4f5c\u6210\u3057\u3066\u4ee5\u4e0b\u3092\u30b3\u30d4\u30da\u3057\u3001`:`\u3092`=`\u306b\u5909\u3048\u307e\u3059\u3002\n* \u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8`#`\u3092`c.`\u306b\u5909\u3048\u3066\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\n\n```\nc.JupyterQtConsoleApp.hide_menubar : True  # \u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u96a0\u3059\nc.JupyterWidget.syntax_style = 'monokai'  # monokai(\u80cc\u666f\u9ed2)\u30b9\u30bf\u30a4\u30eb\u306b\u3059\u308b\n```\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067qtconsole\u3092\u7acb\u3061\u4e0a\u3052\u305f\u3068\u304d\u3001\u5e38\u306b\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306a\u3057\u306e\u80cc\u666f\u9ed2\u8272\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u7acb\u3061\u4e0a\u304c\u308a\u307e\u3059\u3002\n\n\n\n```python:jupyter_qtconsole_config.py\n# https://jupyter.org/qtconsole/stable/config_options.html\n# Configuration options\n# =====================\n\n# These options can be set in ``~/.jupyer/jupyter_qtconsole_config.py``, or\n# at the command line when you start it.\n\n\n# ConnectionFileMixin.connection_file : Unicode\n#     Default: ``''``\n\n#     JSON file in which to store connection info [default: kernel-<pid>.json]\n\n#     This file will contain the IP, ports, and authentication key needed to connect\n#     clients to this kernel. By default, this file will be created in the security dir\n#     of the current profile, but can be specified by absolute path.\n\n\n# ConnectionFileMixin.control_port : Int\n#     Default: ``0``\n\n#     set the control (ROUTER) port [default: random]\n\n# ConnectionFileMixin.hb_port : Int\n#     Default: ``0``\n\n#     set the heartbeat port [default: random]\n\n# ConnectionFileMixin.iopub_port : Int\n#     Default: ``0``\n\n#     set the iopub (PUB) port [default: random]\n\n# ConnectionFileMixin.ip : Unicode\n#     Default: ``''``\n\n#     Set the kernel's IP address [default localhost].\n#     If the IP address is something other than localhost, then\n#     Consoles on other machines will be able to connect\n#     to the Kernel, so be careful!\n\n# ConnectionFileMixin.shell_port : Int\n#     Default: ``0``\n\n#     set the shell (ROUTER) port [default: random]\n\n# ConnectionFileMixin.stdin_port : Int\n#     Default: ``0``\n\n#     set the stdin (ROUTER) port [default: random]\n\n# ConnectionFileMixin.transport : 'tcp'|'ipc'\n#     Default: ``'tcp'``\n\n#     No description\n\n# JupyterConsoleApp.confirm_exit : CBool\n#     Default: ``True``\n\n\n#     Set to display confirmation dialog on exit. You can always use 'exit' or 'quit',\n#     to force a direct exit without any confirmation.\n\n# JupyterConsoleApp.existing : CUnicode\n#     Default: ``''``\n\n#     Connect to an already running kernel\n\n# JupyterConsoleApp.kernel_name : Unicode\n#     Default: ``'python'``\n\n#     The name of the default kernel to start.\n\n# JupyterConsoleApp.sshkey : Unicode\n#     Default: ``''``\n\n#     Path to the ssh key to use for logging in to the ssh server.\n\n# JupyterConsoleApp.sshserver : Unicode\n#     Default: ``''``\n\n#     The SSH server to use to connect to the kernel.\n\n\n# Application.log_datefmt : Unicode\n#     Default: ``'%Y-%m-%d %H:%M:%S'``\n\n#     The date format used by logging formatters for %(asctime)s\n\n# Application.log_format : Unicode\n#     Default: ``'[%(name)s]%(highlevel)s %(message)s'``\n\n#     The Logging format template\n\n# Application.log_level : 0|10|20|30|40|50|'DEBUG'|'INFO'|'WARN'|'ERROR'|'CRITICAL'\n#     Default: ``30``\n\n#     Set the log level by value or name.\n\n# JupyterApp.answer_yes : Bool\n#     Default: ``False``\n\n#     Answer yes to any prompts.\n\n# JupyterApp.config_file : Unicode\n#     Default: ``''``\n\n#     Full path of a config file.\n\n# JupyterApp.config_file_name : Unicode\n#     Default: ``''``\n\n#     Specify a config file to load.\n\n# JupyterApp.generate_config : Bool\n#     Default: ``False``\n\n#     Generate default config file.\n\n# JupyterQtConsoleApp.display_banner : CBool\n#     Default: ``True``\n\n#     Whether to display a banner upon starting the QtConsole.\n\n# JupyterQtConsoleApp.hide_menubar : CBool\n#     Default: ``False``\n\n#     Start the console window with the menu bar hidden.\n\n# JupyterQtConsoleApp.maximize : CBool\n#     Default: ``False``\n\n#     Start the console window maximized.\n\n# JupyterQtConsoleApp.plain : CBool\n#     Default: ``False``\n\n#     Use a plaintext widget instead of rich text (plain can't print/save).\n\n# JupyterQtConsoleApp.stylesheet : Unicode\n#     Default: ``''``\n\n#     path to a custom CSS stylesheet\n\n\n# ConsoleWidget.ansi_codes : Bool\n#     Default: ``True``\n\n#     Whether to process ANSI escape codes.\n\n# ConsoleWidget.buffer_size : Int\n#     Default: ``500``\n\n\n#     The maximum number of lines of text before truncation. Specifying a\n#     non-positive number disables text truncation (not recommended).\n\n\n# ConsoleWidget.execute_on_complete_input : Bool\n#     Default: ``True``\n\n#     Whether to automatically execute on syntactically complete input.\n\n#     If False, Shift-Enter is required to submit each execution.\n#     Disabling this is mainly useful for non-Python kernels,\n#     where the completion check would be wrong.\n\n\n# ConsoleWidget.font_family : Unicode\n#     Default: ``''``\n\n#     The font family to use for the console.\n#     On OSX this defaults to Monaco, on Windows the default is\n#     Consolas with fallback of Courier, and on other platforms\n#     the default is Monospace.\n\n\n# ConsoleWidget.font_size : Int\n#     Default: ``0``\n\n#     The font size. If unconfigured, Qt will be entrusted\n#     with the size of the font.\n\n\n# ConsoleWidget.gui_completion : 'plain'|'droplist'|'ncurses'\n#     Default: ``'ncurses'``\n\n\n#     The type of completer to use. Valid values are:\n\n#     'plain'   : Show the available completion as a text list\n#                 Below the editing area.\n#     'droplist': Show the completion in a drop down list navigable\n#                 by the arrow keys, and from which you can select\n#                 completion by pressing Return.\n#     'ncurses' : Show the completion as a text list which is navigable by\n#                 `tab` and arrow keys.\n\n\n# ConsoleWidget.height : Int\n#     Default: ``25``\n\n#     The height of the console at start time in number\n#     of characters (will double with `vsplit` paging)\n\n\n# ConsoleWidget.include_other_output : Bool\n#     Default: ``False``\n\n#     Whether to include output from clients\n#     other than this one sharing the same kernel.\n\n#     Outputs are not displayed until enter is pressed.\n\n\n# ConsoleWidget.kind : 'plain'|'rich'\n#     Default: ``'plain'``\n\n\n#     The type of underlying text widget to use. Valid values are 'plain',\n#     which specifies a QPlainTextEdit, and 'rich', which specifies a\n#     QTextEdit.\n\n\n# ConsoleWidget.paging : 'inside'|'hsplit'|'vsplit'|'custom'|'none'\n#     Default: ``'inside'``\n\n\n#     The type of paging to use. Valid values are:\n\n#     'inside'\n#        The widget pages like a traditional terminal.\n#     'hsplit'\n#        When paging is requested, the widget is split horizontally. The top\n#        pane contains the console, and the bottom pane contains the paged text.\n#     'vsplit'\n#        Similar to 'hsplit', except that a vertical splitter is used.\n#     'custom'\n#        No action is taken by the widget beyond emitting a\n#        'custom_page_requested(str)' signal.\n#     'none'\n#        The text is written directly to the console.\n\n\n# ConsoleWidget.width : Int\n#     Default: ``81``\n\n#     The width of the console at start time in number\n#     of characters (will double with `hsplit` paging)\n\n\n# HistoryConsoleWidget.history_lock : Bool\n#     Default: ``False``\n\n#     No description\n\n# FrontendWidget.banner : Unicode\n#     Default: ``''``\n\n#     No description\n\n# FrontendWidget.clear_on_kernel_restart : Bool\n#     Default: ``True``\n\n#     Whether to clear the console when the kernel is restarted\n\n# FrontendWidget.confirm_restart : Bool\n#     Default: ``True``\n\n#     Whether to ask for user confirmation when restarting kernel\n\n# FrontendWidget.enable_calltips : Bool\n#     Default: ``True``\n\n#     Whether to draw information calltips on open-parentheses.\n\n# FrontendWidget.is_complete_timeout : Float\n#     Default: ``0.25``\n\n#     Seconds to wait for is_complete replies from the kernel.\n\n# FrontendWidget.lexer_class : DottedObjectName\n#     Default: ``traitlets.Undefined``\n\n#     The pygments lexer class to use.\n\n\n# JupyterWidget.editor : Unicode\n#     Default: ``''``\n\n\n#     A command for invoking a system text editor. If the string contains a\n#     {filename} format specifier, it will be used. Otherwise, the filename\n#     will be appended to the end the command.\n\n\n# JupyterWidget.editor_line : Unicode\n#     Default: ``''``\n\n\n#     The editor command to use when a specific line number is requested. The\n#     string should contain two format specifiers: {line} and {filename}. If\n#     this parameter is not specified, the line number option to the %edit\n#     magic will be ignored.\n\n\n# JupyterWidget.in_prompt : Unicode\n#     Default: ``'In [<span class=\"in-prompt-number\">%i</span>]: '``\n\n#     No description\n\n# JupyterWidget.input_sep : Unicode\n#     Default: ``'\\\\n'``\n\n#     No description\n\n# JupyterWidget.out_prompt : Unicode\n#     Default: ``'Out[<span class=\"out-prompt-number\">%i</span>]: '``\n\n#     No description\n\n# JupyterWidget.output_sep : Unicode\n#     Default: ``''``\n\n#     No description\n\n# JupyterWidget.output_sep2 : Unicode\n#     Default: ``''``\n\n#     No description\n\n# JupyterWidget.style_sheet : Unicode\n#     Default: ``''``\n\n\n#     A CSS stylesheet. The stylesheet can contain classes for:\n#         1. Qt: QPlainTextEdit, QFrame, QWidget, etc\n#         2. Pygments: .c, .k, .o, etc. (see PygmentsHighlighter)\n#         3. QtConsole: .error, .in-prompt, .out-prompt, etc\n\n\n# JupyterWidget.syntax_style : Unicode\n#     Default: ``''``\n\n\n#     If not empty, use this Pygments style for syntax highlighting.\n#     Otherwise, the style sheet is queried for Pygments style\n#     information.\n\n\n# KernelManager.autorestart : Bool\n#     Default: ``False``\n\n#     Should we autorestart the kernel if it dies.\n\n# KernelManager.kernel_cmd : List\n#     Default: ``[]``\n\n#     DEPRECATED: Use kernel_name instead.\n\n#     The Popen Command to launch the kernel.\n#     Override this if you have a custom kernel.\n#     If kernel_cmd is specified in a configuration file,\n#     Jupyter does not pass any arguments to the kernel,\n#     because it cannot make any assumptions about the\n#     arguments that the kernel understands. In particular,\n#     this means that the kernel does not receive the\n#     option --debug if it given on the Jupyter command line.\n\n\n# Session.buffer_threshold : Int\n#     Default: ``1024``\n\n#     Threshold (in bytes) beyond which an object's buffer should be extracted to avoid pickling.\n\n# Session.copy_threshold : Int\n#     Default: ``65536``\n\n#     Threshold (in bytes) beyond which a buffer should be sent without copying.\n\n# Session.debug : Bool\n#     Default: ``False``\n\n#     Debug output in the Session\n\n# Session.digest_history_size : Int\n#     Default: ``65536``\n\n#     The maximum number of digests to remember.\n\n#     The digest history will be culled when it exceeds this value.\n\n\n# Session.item_threshold : Int\n#     Default: ``64``\n\n#     The maximum number of items for a container to be introspected for custom serialization.\n#     Containers larger than this are pickled outright.\n\n\n# Session.key : CBytes\n#     Default: ``b''``\n\n#     execution key, for signing messages.\n\n# Session.keyfile : Unicode\n#     Default: ``''``\n\n#     path to file containing execution key.\n\n# Session.metadata : Dict\n#     Default: ``{}``\n\n#     Metadata dictionary, which serves as the default top-level metadata dict for each message.\n\n# Session.packer : DottedObjectName\n#     Default: ``'json'``\n\n#     The name of the packer for serializing messages.\n#     Should be one of 'json', 'pickle', or an import name\n#     for a custom callable serializer.\n\n# Session.session : CUnicode\n#     Default: ``''``\n\n#     The UUID identifying this session.\n\n# Session.signature_scheme : Unicode\n#     Default: ``'hmac-sha256'``\n\n#     The digest scheme used to construct the message signatures.\n#     Must have the form 'hmac-HASH'.\n\n# Session.unpacker : DottedObjectName\n#     Default: ``'json'``\n\n#     The name of the unpacker for unserializing messages.\n#     Only used with custom functions for `packer`.\n\n# Session.username : Unicode\n#     Default: ``'minrk'``\n\n#     Username for the Session. Default is your system username.\n```\n", "tags": ["Jupyter", "Config", "Python", "qtconsole"]}