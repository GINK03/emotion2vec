{"context": " More than 1 year has passed since last update.\u524d\u56de\u306b\u7d9a\u3044\u3066Build RESTful API Using Node and Hapi\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u8aad\u307f\u306a\u304c\u3089MongoDB\u3092\u4f7f\u3063\u305fCRUD\u306e\u5b9f\u88c5\u3092\u52c9\u5f37\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089\u306bpush\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\u524d\u56de\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bmodel\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n$ tree\n.\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 app.js\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 models\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 job.js\n\u251c\u2500\u2500 mongo\n\u251c\u2500\u2500 node_modules -> /dist/node_modules\n\u2514\u2500\u2500 package.json\n\n\nMongoDB\u30b5\u30fc\u30d3\u30b9\ndocker-compose.yml\u306bMongoDB\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306fDocker\u30db\u30b9\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u958b\u767a\u4e2d\u306f\u6c17\u8efd\u306b\u30b3\u30f3\u30c6\u30ca\u306e\u7834\u68c4\u3092\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\ndocker-compose.yml\nhapi:\n  build: .\n  ports:\n    - 3000:3000\n  volumes:\n    - .:/app\n  links:\n    - mongo\nmongo:\n  image: mongo\n  volumes:\n    - ./mongo:/data/db\n\n\n\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306broot\u30e6\u30fc\u30b6\u30fc\u304c\u6240\u6709\u3059\u308bmongo\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3067\u304d\u308b\u306e\u3067\u3001Docker\u306e\u7ba1\u7406\u5916\u306b\u3057\u307e\u3059\u3002\n\n.dockerignore\nmongo\n\n\n\nMongoose\u3068joi\nMongoDB\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306bMongoose\u3092\u4f7f\u3044\u307e\u3059\u3002MongoDB\u306f\u30b9\u30ad\u30fc\u30de\u30ec\u30b9\u3067\u3059\u304cMongoose\u306f\u30b9\u30ad\u30fc\u30de\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002JSON\u306b\u30b9\u30ad\u30fc\u30de\u3092\u6301\u305f\u305b\u3066\u3042\u308b\u7a0b\u5ea6\u304d\u3063\u3061\u308a\u30ec\u30b3\u30fc\u30c9\u3092\u7ba1\u7406\u3057\u305f\u3044\u5834\u5408\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\u306ejoi\u3068\u4f75\u305b\u3066\u4f7f\u3046\u3068\u7169\u96d1\u306b\u306a\u308a\u304c\u3061\u306a\u30b3\u30fc\u30c9\u304c\u5ba3\u8a00\u578b\u3067\u3059\u3063\u304d\u308a\u3057\u307e\u3059\u3002\n\napp.js\n'use strict';\n\nvar Hapi = require('hapi'),\n    server = new Hapi.Server(),\n    Joi = require('joi'),\n    mongoose = require('mongoose');\n\nmongoose.connect('mongodb://'+process.env.MONGO_PORT_27017_TCP_ADDR+':'\n              +process.env.MONGO_PORT_27017_TCP_PORT+'/jobdb');\n\nvar JobModel = require('./models/job');\n\nserver.connection({port: 3000});\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e2\u30c7\u30eb\u306e\u30b9\u30ad\u30fc\u30de\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002Hapi.js\u306fagenda\u306e\u30d5\u30ed\u30f3\u30c8\u306b\u4f7f\u3046\u4e88\u5b9a\u306a\u306e\u3067\u30b8\u30e7\u30d6\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\nmodels/job.js\n'use strict';\n\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\n\nvar JobSchema = new Schema({\n    name: String,\n    query: String\n});\n\nmodule.exports = mongoose.model('Job', JobSchema);\n\n\n\nCRUD\nLoopBack\u306e\u5834\u5408\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u304a\u304b\u3052\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u304f\u3066\u3082CRUD\u306e\u64cd\u4f5c\u304c\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306eHapi.js\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u30b9\u30ab\u30c3\u30d5\u30a9\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u3067\u5341\u5206\u306a\u304f\u3089\u3044\u5358\u7d14\u3067\u3059\u304c\u3001Mongoose\u3068joi\u3092\u4f7f\u3063\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u6271\u3044\u3092\u7406\u89e3\u3059\u308c\u3070\u30b5\u30af\u30b5\u30af\u5b9f\u88c5\u3067\u304d\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\nPOST /api/jobs\nPOST\u30e1\u30bd\u30c3\u30c9\u3092\u4f8b\u306b\u3057\u307e\u3059\u3002tags: ['api']\u306fSwagger\u7528\u306b\u5fc5\u9808\u9805\u76ee\u306b\u306a\u308a\u307e\u3059\u3002\u30e2\u30c7\u30eb\u4fdd\u5b58\u5f8c\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u5197\u9577\u306a\u611f\u3058\u3067\u3059\u3002pyramid of doom.\n\napp.js\nserver.route({\n    method: 'POST',\n    path: '/api/jobs',\n    config: {\n        tags: ['api'],\n        description: 'Save job data',\n        notes: 'Save job data',\n        validate: {\n            payload: {\n                name: Joi.string().required(),\n                query: Joi.string().required()\n            }\n        }\n    },\n    handler: function(request, reply) {\n        var job = new JobModel(request.payload);\n        job.save(function(error) {\n            if(error) {\n                reply({\n                    statusCode: 503,\n                    message: error\n                });\n            } else {\n                reply({\n                    statusCode: 201,\n                    message: 'Job Saved Successfully'\n                });\n            }\n        });\n    }\n});\n\n\n\nSwagger\u306e\u8d77\u52d5\nDocker Compose\u304b\u3089hapi\u30b5\u30fc\u30d3\u30b9\u3092up\u3057\u307e\u3059\u3002\n$ docker-compose up hapi\nRecreating dockerhapi_mongo_1...\nRecreating dockerhapi_hapi_1...\nAttaching to dockerhapi_hapi_1\nhapi_1 |\nhapi_1 | > docker-hapi@0.0.1 start /app\nhapi_1 | > node app.js\nhapi_1 |\nhapi_1 | Server running at: http://22fb2b92f597:3000\n\n\u30d6\u30e9\u30a6\u30b6\u3067Swagger UI\u3092\u8868\u793a\u3057\u307e\u3059\u3002CRUD\u51e6\u7406\u306eAPI\u306e\u52d5\u304f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3057\u305f\u3002\n\n[\u524d\u56de](http://qiita.com/masato/items/87c2bbcf506a729b706b)\u306b\u7d9a\u3044\u3066[Build RESTful API Using Node and Hapi](http://www.tothenew.com/blog/build-restful-api-using-node-and-hapi/)\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u8aad\u307f\u306a\u304c\u3089MongoDB\u3092\u4f7f\u3063\u305fCRUD\u306e\u5b9f\u88c5\u3092\u52c9\u5f37\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306f[\u3053\u3061\u3089](https://github.com/masato/docker-swagger/tree/mongo)\u306bpush\u3057\u3066\u3044\u307e\u3059\u3002\n\n<!-- more -->\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\n\u524d\u56de\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bmodel\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n```bash\n$ tree\n.\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 app.js\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 models\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 job.js\n\u251c\u2500\u2500 mongo\n\u251c\u2500\u2500 node_modules -> /dist/node_modules\n\u2514\u2500\u2500 package.json\n```\n\n### MongoDB\u30b5\u30fc\u30d3\u30b9\n\ndocker-compose.yml\u306bMongoDB\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306fDocker\u30db\u30b9\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u958b\u767a\u4e2d\u306f\u6c17\u8efd\u306b\u30b3\u30f3\u30c6\u30ca\u306e\u7834\u68c4\u3092\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```yaml:docker-compose.yml\nhapi:\n  build: .\n  ports:\n    - 3000:3000\n  volumes:\n    - .:/app\n  links:\n    - mongo\nmongo:\n  image: mongo\n  volumes:\n    - ./mongo:/data/db\n```\n\n\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306broot\u30e6\u30fc\u30b6\u30fc\u304c\u6240\u6709\u3059\u308b`mongo`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3067\u304d\u308b\u306e\u3067\u3001Docker\u306e\u7ba1\u7406\u5916\u306b\u3057\u307e\u3059\u3002\n\n```bash:.dockerignore\nmongo\n```\n\n### Mongoose\u3068joi\n\nMongoDB\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306b[Mongoose](http://mongoosejs.com/)\u3092\u4f7f\u3044\u307e\u3059\u3002MongoDB\u306f\u30b9\u30ad\u30fc\u30de\u30ec\u30b9\u3067\u3059\u304cMongoose\u306f\u30b9\u30ad\u30fc\u30de\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002JSON\u306b\u30b9\u30ad\u30fc\u30de\u3092\u6301\u305f\u305b\u3066\u3042\u308b\u7a0b\u5ea6\u304d\u3063\u3061\u308a\u30ec\u30b3\u30fc\u30c9\u3092\u7ba1\u7406\u3057\u305f\u3044\u5834\u5408\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\u306e[joi](https://github.com/hapijs/joi)\u3068\u4f75\u305b\u3066\u4f7f\u3046\u3068\u7169\u96d1\u306b\u306a\u308a\u304c\u3061\u306a\u30b3\u30fc\u30c9\u304c\u5ba3\u8a00\u578b\u3067\u3059\u3063\u304d\u308a\u3057\u307e\u3059\u3002\n\n```js:app.js\n'use strict';\n\nvar Hapi = require('hapi'),\n    server = new Hapi.Server(),\n    Joi = require('joi'),\n    mongoose = require('mongoose');\n\nmongoose.connect('mongodb://'+process.env.MONGO_PORT_27017_TCP_ADDR+':'\n              +process.env.MONGO_PORT_27017_TCP_PORT+'/jobdb');\n\nvar JobModel = require('./models/job');\n\nserver.connection({port: 3000});\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e2\u30c7\u30eb\u306e\u30b9\u30ad\u30fc\u30de\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002Hapi.js\u306f[agenda](https://github.com/rschmukler/agenda)\u306e\u30d5\u30ed\u30f3\u30c8\u306b\u4f7f\u3046\u4e88\u5b9a\u306a\u306e\u3067\u30b8\u30e7\u30d6\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n```js:models/job.js\n'use strict';\n\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\n\nvar JobSchema = new Schema({\n    name: String,\n    query: String\n});\n\nmodule.exports = mongoose.model('Job', JobSchema);\n```\n\n## CRUD\n\n[LoopBack](http://loopback.io/)\u306e\u5834\u5408\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u304a\u304b\u3052\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u304f\u3066\u3082CRUD\u306e\u64cd\u4f5c\u304c\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306eHapi.js\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u30b9\u30ab\u30c3\u30d5\u30a9\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u3067\u5341\u5206\u306a\u304f\u3089\u3044\u5358\u7d14\u3067\u3059\u304c\u3001Mongoose\u3068joi\u3092\u4f7f\u3063\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u6271\u3044\u3092\u7406\u89e3\u3059\u308c\u3070\u30b5\u30af\u30b5\u30af\u5b9f\u88c5\u3067\u304d\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\n### POST /api/jobs\n\nPOST\u30e1\u30bd\u30c3\u30c9\u3092\u4f8b\u306b\u3057\u307e\u3059\u3002`tags: ['api']`\u306fSwagger\u7528\u306b\u5fc5\u9808\u9805\u76ee\u306b\u306a\u308a\u307e\u3059\u3002\u30e2\u30c7\u30eb\u4fdd\u5b58\u5f8c\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u5197\u9577\u306a\u611f\u3058\u3067\u3059\u3002`pyramid of doom`.\n\n```js:app.js\nserver.route({\n    method: 'POST',\n    path: '/api/jobs',\n    config: {\n        tags: ['api'],\n        description: 'Save job data',\n        notes: 'Save job data',\n        validate: {\n            payload: {\n                name: Joi.string().required(),\n                query: Joi.string().required()\n            }\n        }\n    },\n    handler: function(request, reply) {\n        var job = new JobModel(request.payload);\n        job.save(function(error) {\n            if(error) {\n                reply({\n                    statusCode: 503,\n                    message: error\n                });\n            } else {\n                reply({\n                    statusCode: 201,\n                    message: 'Job Saved Successfully'\n                });\n            }\n        });\n    }\n});\n```\n\n## Swagger\u306e\u8d77\u52d5\n\nDocker Compose\u304b\u3089hapi\u30b5\u30fc\u30d3\u30b9\u3092up\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-compose up hapi\nRecreating dockerhapi_mongo_1...\nRecreating dockerhapi_hapi_1...\nAttaching to dockerhapi_hapi_1\nhapi_1 |\nhapi_1 | > docker-hapi@0.0.1 start /app\nhapi_1 | > node app.js\nhapi_1 |\nhapi_1 | Server running at: http://22fb2b92f597:3000\n```\n\n\u30d6\u30e9\u30a6\u30b6\u3067Swagger UI\u3092\u8868\u793a\u3057\u307e\u3059\u3002CRUD\u51e6\u7406\u306eAPI\u306e\u52d5\u304f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3057\u305f\u3002\n\n![swagger-crud.png](https://qiita-image-store.s3.amazonaws.com/0/43745/786170b6-f311-7ca5-039d-87dcbb163ef1.png)\n", "tags": ["Node.js0.10.38", "Hapi.js8.6.1", "MongoDB3.0.3", "swagger"]}