{"context": " More than 1 year has passed since last update.Windows\u306e\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u304b\u3089\u4e00\u30f6\u6708\u306e\u65e5\u3054\u3068\u306ePC\u958b\u59cb\u6642\u9593\u30fb\u7d42\u4e86\u6642\u9593\u3092\u53d6\u5f97\u3057\u3001\u8868\u793a\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\u203b\u6ce8\u3000\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3057\u751f\u3058\u308b\u7d50\u679c\u306b\u5bfe\u3057\u3001\u79c1stofu\u306f\u4e00\u5207\u306e\u8cac\u4efb\u3092\u8ca0\u3044\u304b\u306d\u307e\u3059\u3002\u81ea\u5df1\u8cac\u4efb\u3067\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nPS *:\\*********> .\\Get-TimesAboutComputerPower.ps1 11\n2015/11/01(\u65e5) no data\n2015/11/02(\u6708) **:**:** **:**:**\n2015/11/03(\u706b) no data\n2015/11/04(\u6c34) **:**:** **:**:**\n2015/11/05(\u6728) **:**:** **:**:**\n2015/11/06(\u91d1) **:**:** **:**:**\n2015/11/07(\u571f) no data\n2015/11/08(\u65e5) no data\n2015/11/09(\u6708) **:**:** **:**:**\n2015/11/10(\u706b) **:**:** **:**:**\n2015/11/11(\u6c34) **:**:** **:**:**\n2015/11/12(\u6728) **:**:** **:**:**\n2015/11/13(\u91d1) **:**:** **:**:**\n2015/11/14(\u571f) no data\n2015/11/15(\u65e5) no data\n2015/11/16(\u6708) **:**:** **:**:**\n2015/11/17(\u706b) **:**:** **:**:**\n2015/11/18(\u6c34) **:**:** **:**:**\n2015/11/19(\u6728) **:**:** **:**:**\n2015/11/20(\u91d1) **:**:** **:**:**\n2015/11/21(\u571f) no data\n2015/11/22(\u65e5) no data\n2015/11/23(\u6708) no data\n2015/11/24(\u706b) **:**:** **:**:**\n2015/11/25(\u6c34) **:**:** **:**:**\n2015/11/26(\u6728) **:**:** **:**:**\n2015/11/27(\u91d1) **:**:** **:**:**\n2015/11/28(\u571f) no data\n2015/11/29(\u65e5) no data\n2015/11/30(\u6708) **:**:** **:**:**\n\n\nGet-TimesAboutComputerPower.ps1\n[CmdletBinding()]\nParam(\n   [Parameter(Position=0)]\n      [string]$Month = (Get-Date).Month ,\n\n   [Parameter(Position=1)]\n      [string]$Year  = (Get-Date).Year\n)\n\nfunction Get-DaysOfMonth($month , $year){\n   $firstDay = Get-Date -Year   $year  `\n                        -Month  $month `\n                        -Day    1\n   $lastDay  = Get-Date -Year   $year  `\n                        -Month  $month `\n                        -Day    $firstDay.AddMonths(1).AddDays(-1).Day\n   1..($lastDay.Day) | % {\n#-Millisecond<Int32>\n#Specifies the milliseconds in the date. \n#Enter a value from 0 to 999. \n#The default is the current number of milliseconds.\n#This parameter is introduced in Windows PowerShell 3.0. \n#Win7_PSVersion2.0\u3060\u3068-Millisecond<Int32>\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n      if($PSVersionTable.PSVersion -eq \"2.0\") {\n         Get-Date -Year        $year  `\n                  -Month       $month `\n                  -Day         $_     `\n                  -Hour        0      `\n                  -Minute      0      `\n                  -Second      0 \n      } else {\n         Get-Date -Year        $year  `\n                  -Month       $month `\n                  -Day         $_     `\n                  -Hour        0      `\n                  -Minute      0      `\n                  -Second      0      `\n                  -Millisecond 0\n      }\n   }\n}\nfunction Get-TimesAboutComputerPower($month , $year){\n   $event = Get-EventLog -LogName System\n\n   Get-DaysOfMonth $month $year | % {\n      $today = $_\n      $nextday = $today.AddDays(1)\n      $todaysEvent = $event | ? {\n         # \u4eca\u65e5 <= \u5f53\u8a72\u30a4\u30d9\u30f3\u30c8\u66f8\u304d\u8fbc\u307f\u6642\u9593 < \u660e\u65e5\n         $today -le $_.TimeWritten -and $_.TimeWritten -lt $nextday\n      }\n      if($todaysEvent -ne $null) {\n          # PC\u958b\u59cb\u30fb\u7d42\u4e86\u6642\u9593\u8868\u793a\uff08\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u306f\u964d\u9806\u306a\u306e\u3067\u7d42\u7aef\u304b\u3089\u53d6\u5f97\uff09\n            $today.ToString(\"yyyy/MM/dd(ddd)\") `\n          + \" \" + $todaysEvent[-1].TimeWritten.ToString(\"HH:mm:dd\") `\n          + \" \" + $todaysEvent[0].TimeWritten.ToString(\"HH:mm:dd\")\n      } else {\n            $today.ToString(\"yyyy/MM/dd(ddd)\") + \" no data\"\n      }\n   }\n}\n\n## Entry Point\n#$year = 2015\n#$month = 11\n\nGet-TimesAboutComputerPower $month $year\n\n\nWindows\u306e\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u304b\u3089\u4e00\u30f6\u6708\u306e\u65e5\u3054\u3068\u306ePC\u958b\u59cb\u6642\u9593\u30fb\u7d42\u4e86\u6642\u9593\u3092\u53d6\u5f97\u3057\u3001\u8868\u793a\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\u203b\u6ce8\u3000\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3057\u751f\u3058\u308b\u7d50\u679c\u306b\u5bfe\u3057\u3001\u79c1stofu\u306f\u4e00\u5207\u306e\u8cac\u4efb\u3092\u8ca0\u3044\u304b\u306d\u307e\u3059\u3002\u81ea\u5df1\u8cac\u4efb\u3067\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n<pre>\nPS *:\\*********> .\\Get-TimesAboutComputerPower.ps1 11\n2015/11/01(\u65e5) no data\n2015/11/02(\u6708) **:**:** **:**:**\n2015/11/03(\u706b) no data\n2015/11/04(\u6c34) **:**:** **:**:**\n2015/11/05(\u6728) **:**:** **:**:**\n2015/11/06(\u91d1) **:**:** **:**:**\n2015/11/07(\u571f) no data\n2015/11/08(\u65e5) no data\n2015/11/09(\u6708) **:**:** **:**:**\n2015/11/10(\u706b) **:**:** **:**:**\n2015/11/11(\u6c34) **:**:** **:**:**\n2015/11/12(\u6728) **:**:** **:**:**\n2015/11/13(\u91d1) **:**:** **:**:**\n2015/11/14(\u571f) no data\n2015/11/15(\u65e5) no data\n2015/11/16(\u6708) **:**:** **:**:**\n2015/11/17(\u706b) **:**:** **:**:**\n2015/11/18(\u6c34) **:**:** **:**:**\n2015/11/19(\u6728) **:**:** **:**:**\n2015/11/20(\u91d1) **:**:** **:**:**\n2015/11/21(\u571f) no data\n2015/11/22(\u65e5) no data\n2015/11/23(\u6708) no data\n2015/11/24(\u706b) **:**:** **:**:**\n2015/11/25(\u6c34) **:**:** **:**:**\n2015/11/26(\u6728) **:**:** **:**:**\n2015/11/27(\u91d1) **:**:** **:**:**\n2015/11/28(\u571f) no data\n2015/11/29(\u65e5) no data\n2015/11/30(\u6708) **:**:** **:**:**\n</pre>\n\n\n\n```powershell:Get-TimesAboutComputerPower.ps1\n[CmdletBinding()]\nParam(\n   [Parameter(Position=0)]\n      [string]$Month = (Get-Date).Month ,\n   \n   [Parameter(Position=1)]\n      [string]$Year  = (Get-Date).Year\n)\n\nfunction Get-DaysOfMonth($month , $year){\n   $firstDay = Get-Date -Year   $year  `\n                        -Month  $month `\n                        -Day    1\n   $lastDay  = Get-Date -Year   $year  `\n                        -Month  $month `\n                        -Day    $firstDay.AddMonths(1).AddDays(-1).Day\n   1..($lastDay.Day) | % {\n#-Millisecond<Int32>\n#Specifies the milliseconds in the date. \n#Enter a value from 0 to 999. \n#The default is the current number of milliseconds.\n#This parameter is introduced in Windows PowerShell 3.0. \n#Win7_PSVersion2.0\u3060\u3068-Millisecond<Int32>\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n      if($PSVersionTable.PSVersion -eq \"2.0\") {\n         Get-Date -Year        $year  `\n                  -Month       $month `\n                  -Day         $_     `\n                  -Hour        0      `\n                  -Minute      0      `\n                  -Second      0 \n      } else {\n         Get-Date -Year        $year  `\n                  -Month       $month `\n                  -Day         $_     `\n                  -Hour        0      `\n                  -Minute      0      `\n                  -Second      0      `\n                  -Millisecond 0\n      }\n   }\n}\nfunction Get-TimesAboutComputerPower($month , $year){\n   $event = Get-EventLog -LogName System\n   \n   Get-DaysOfMonth $month $year | % {\n      $today = $_\n      $nextday = $today.AddDays(1)\n      $todaysEvent = $event | ? {\n         # \u4eca\u65e5 <= \u5f53\u8a72\u30a4\u30d9\u30f3\u30c8\u66f8\u304d\u8fbc\u307f\u6642\u9593 < \u660e\u65e5\n         $today -le $_.TimeWritten -and $_.TimeWritten -lt $nextday\n      }\n      if($todaysEvent -ne $null) {\n          # PC\u958b\u59cb\u30fb\u7d42\u4e86\u6642\u9593\u8868\u793a\uff08\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u306f\u964d\u9806\u306a\u306e\u3067\u7d42\u7aef\u304b\u3089\u53d6\u5f97\uff09\n            $today.ToString(\"yyyy/MM/dd(ddd)\") `\n          + \" \" + $todaysEvent[-1].TimeWritten.ToString(\"HH:mm:dd\") `\n          + \" \" + $todaysEvent[0].TimeWritten.ToString(\"HH:mm:dd\")\n      } else {\n            $today.ToString(\"yyyy/MM/dd(ddd)\") + \" no data\"\n      }\n   }\n}\n\n## Entry Point\n#$year = 2015\n#$month = 11\n\nGet-TimesAboutComputerPower $month $year\n```\n", "tags": ["PowerShell", "Windows", "windows7", "Windows8", "Windows10"]}