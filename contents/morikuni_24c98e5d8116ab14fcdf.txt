{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nGo\u3067\u306finterface\u3092\u4f7f\u3046\u3053\u3068\u3067\u6a5f\u80fd\u3068\u5b9f\u88c5\u3092\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u95a2\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u3084\u304c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306e\u307f\u4f9d\u5b58\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u30c6\u30b9\u30c8\u306e\u6642\u306b\u3060\u3051\u5b9f\u88c5\u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001interface\u3092\u4f7f\u3063\u3066\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u66f8\u304d\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u3092\u4f7f\u308f\u305a\u306b\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3057\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4f5c\u308b\u3082\u306e\n2\u3064\u306e\u30e6\u30fc\u30b6ID\u3092\u53d7\u3051\u53d6\u308a\u3001\u30e6\u30fc\u30b6\u306e\u540d\u524d\u304c\u540c\u3058\u304b\u3069\u3046\u304b\u8abf\u3079\u308b\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u4ee5\u4e0b\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u8868\u3055\u308c\u307e\u3059\u3002\ntype UserNameService interface {\n    IsSameName(id1, id2 UserID) (bool, error)\n}\n\n2\u3064\u306e\u30e6\u30fc\u30b6ID\u3092\u53d7\u3051\u53d6\u3063\u3066\u540d\u524d\u304c\u7b49\u3057\u3051\u308c\u3070true\u3092\u8fd4\u3059\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u6307\u5b9a\u3055\u308c\u305fID\u306b\u5bfe\u5fdc\u3059\u308b\u30e6\u30fc\u30b6\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u306ferror\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\n\u5b9f\u88c5\n\n\u6e96\u5099\n\u307e\u305a\u306f\u3001User\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nuser.go\npackage sample\n\ntype UserID uint\n\ntype User struct {\n    ID   UserID\n    Name string\n}\n\n\nUserNameService\u306f\u3053\u306eUser\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eName\u304c\u7b49\u3057\u3044\u304b\u3092\u8abf\u3079\u308b\u306e\u3067\u3059\u304c\u3001IsSameName\u304c\u5f15\u6570\u3067\u53d7\u3051\u53d6\u308b\u306e\u306fUserID\u306a\u306e\u3067\u3001UserID\u304b\u3089User\u3092\u89e3\u6c7a\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\nUserNameService\u306e\u5f79\u5272\u306f\u30e6\u30fc\u30b6\u306e\u540d\u524d\u306b\u95a2\u3059\u308b\u64cd\u4f5c\u3092\u884c\u3046\u3053\u3068\u306a\u306e\u3067\u3001User\u306e\u89e3\u6c7a\u3092\u884c\u3046\u3053\u3068\u306f\u5358\u4e00\u8cac\u4efb\u306e\u539f\u5247\u306b\u53cd\u3057\u307e\u3059\u3002\n\u305d\u3053\u3067UserRepository\u3092\u5b9a\u7fa9\u3057\u3066\u3001User\u306e\u89e3\u6c7a\u3092\u4efb\u305b\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\nUserRepository\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ntype UserRepository interface {\n    FindByID(UserID) (*User, error)\n}\n\n\u3053\u308c\u3067\u3001UserNameService\u304c\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nUserNameService\nUserRepository\u3092\u4f7f\u3063\u305fUserNameService\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nuser_name_service.go\npackage sample\n\ntype UserNameService interface {\n    IsSameName(id1, id2 UserID) (bool, error)\n}\n\n// UserRepositoryImpl\u306f UserRepository \u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\ntype UserNameServiceImpl struct {\n    userRepository UserRepository\n}\n\nfunc (impl *UserNameServiceImpl) IsSameName(id1, id2 UserID) (bool, error) {\n    u1, err := impl.userRepository.FindByID(id1)\n    if err != nil {\n        return false, err\n    }\n    u2, err := impl.userRepository.FindByID(id2)\n    if err != nil {\n        return false, err\n    }\n    return (u1.Name == u2.Name), nil\n}\n\nfunc NewUserNameService() UserNameService {\n    // \u4f9d\u5b58\u306b\u5b9f\u88c5\u3092\u6ce8\u5165\u3057\u3001UserNameService\u3092\u69cb\u7bc9\u3059\u308b\n    return &UserNameServiceImpl{\n        NewUserRepository(), // UserRepository\u3092\u6ce8\u5165\n    }\n}\n\n\nUserNameServiceImpl\u304cUserNameService\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\u5185\u90e8\u306bUserRepository\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u304b\u3089UserRepositoryImpl\u306fUserRepository\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3068\u3044\u3048\u307e\u3059\u3002\nIsSameName\u306fUserRepository\u3092\u4f7f\u3063\u3066User\u3092\u691c\u7d22\u3057\u3001\u540d\u524d\u304c\u7b49\u3057\u3044\u304b\u3092\u8abf\u3079\u3066\u3044\u307e\u3059\u3002\nUserNameService\u306e\u5b9f\u88c5\u306f\u3053\u308c\u3067\u7d42\u308f\u308a\u3067\u3059\u304c\u3001\u3053\u306e\u30b5\u30fc\u30d3\u30b9(\u53b3\u5bc6\u306b\u306fImpl)\u306f\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u3084\u3059\u3044\u72b6\u614b\u3060\u3068\u3044\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n\u305d\u306e\u7406\u7531\u3068\u3057\u3066\u3001\n\n\u5185\u90e8\u72b6\u614b\u304c\u306a\u3044(UserRepository\u306bUser\u306e\u7ba1\u7406\u3092\u4efb\u305b\u3066\u3044\u308b)\u305f\u3081\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u306f\u5f15\u6570\u3068UserRepository\u306e\u307f\u8003\u3048\u308c\u3070\u3088\u3044\n\nUserRepository\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067\u30c6\u30b9\u30c8\u6642\u3060\u3051\u5b9f\u88c5\u3092\u5909\u66f4\u3067\u304d\u308b\n\n\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306f\u3001\u305d\u306e\u540d\u306e\u901a\u308a1\u3064\u306e\u632f\u308b\u821e\u3044\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u306a\u306e\u3067\u3001\u4ed6\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u72b6\u614b\u3067\u306f\u66f8\u304f\u3053\u3068\u304c\u56f0\u96e3\u306b\u306a\u308a\u307e\u3059\u3002(\u4f9d\u5b58\u5148\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u3053\u3068\u306b\u306a\u308b\u3001\u3064\u307e\u308a\u3001\u4f9d\u5b58\u5148\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u30c6\u30b9\u30c8\u3082\u6697\u9ed9\u7684\u306b\u542b\u3093\u3067\u3057\u307e\u3046\u305f\u3081\u3002)\n\u30c6\u30b9\u30c8\u6642\u3060\u3051\u5b9f\u88c5\u3092\u5909\u66f4\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u4f9d\u5b58\u5148\u306e\u52d5\u4f5c\u3092\u81ea\u5728\u306b\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u4f9d\u5b58\u5148\u304c\u60f3\u5b9a\u5185\u306e\u52d5\u4f5c\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u81ea\u8eab\u3082\u6b63\u3057\u304f\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nNewUserNameService()\u306fUserNameService\u3078\u306e\u4f9d\u5b58\u306b\u5bfe\u3057\u3066\u5b9f\u88c5\u3092\u6ce8\u5165\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\u5185\u90e8\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bNewUserRepository()\u306f\u540c\u69d8\u306bUserRepository\u3078\u306e\u4f9d\u5b58\u306b\u5bfe\u3057\u3066\u5b9f\u88c5\u3092\u6ce8\u5165\u3059\u308b\u95a2\u6570\u3067\u3001\u6b21\u7bc0\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u6642\u4ee5\u5916\u3067\u5b9f\u88c5\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4f9d\u5b58\u6027\u6ce8\u5165\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u4ed6\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3082\u554f\u984c\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\nUserRepository\nUserRepository\u3082\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u901a\u5e38\u306a\u3089\u3070KVS\u3084RDB\u3092\u4f7f\u3063\u3066User\u3092\u691c\u7d22\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306fmap[UserID]*User\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\nuser_repository.go\npackage sample\n\nimport (\n    \"errors\"\n)\n\ntype UserRepository interface {\n    FindByID(UserID) (*User, error)\n}\n\nvar NoSuchUserError = errors.New(\"no such user\")\n\n// UserRepositoryImpl\u306f map[UserID]*User \u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\ntype UserRepositoryImpl struct {\n    m map[UserID]*User\n}\n\nfunc (impl *UserRepositoryImpl) FindByID(id UserID) (*User, error) {\n    user, ok := impl.m[id]\n    if !ok {\n        return nil, NoSuchUserError\n    }\n    return user, nil\n}\n\nfunc NewUserRepository() UserRepository {\n    // \u4f9d\u5b58\u306b\u5b9f\u88c5\u3092\u6ce8\u5165\u3057\u3001UserRepository\u3092\u69cb\u7bc9\u3059\u308b\n    m := make(map[UserID]*User)\n    m[1] = &User{1, \"tarou\"}\n    m[2] = &User{2, \"tarou\"}\n    m[3] = &User{3, \"hanako\"}\n    return &UserRepositoryImpl{m}\n}\n\n\nUserRepository\u306fmap\u3068\u3044\u3046\u5b9f\u88c5\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u66f8\u304d\u3084\u3059\u3044\u72b6\u614b\u3060\u3068\u3044\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n\u306a\u305c\u306a\u3089\u3001map\u306e\u5b9f\u88c5\u3092\u30c6\u30b9\u30c8\u6642\u306b\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001map\u3068\u3044\u3046\u30c7\u30fc\u30bf\u69cb\u9020\u81ea\u4f53\u304c\u5185\u90e8\u72b6\u614b\u3092\u5236\u5fa1\u3057\u3084\u3059\u3044\u305f\u3081\u3001\u30c6\u30b9\u30c8\u6642\u306b\u4efb\u610f\u306e\u72b6\u614b\u3092\u4f5c\u308a\u51fa\u305b\u308b\u304b\u3089\u3067\u3059\u3002\n\u3082\u3061\u308d\u3093map\u306e\u3088\u3046\u306a\u632f\u308b\u821e\u3044\u3092\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u3063\u3066\u305d\u308c\u306b\u4f9d\u5b58\u3055\u305b\u305f\u307b\u3046\u304c\u67d4\u8edf\u306a\u8a2d\u8a08\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306e\u5834\u5408\u305d\u3053\u307e\u3067\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\u3061\u306a\u307f\u306b\u3001\u4eca\u56de\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u3084\u3059\u3044\u306e\u306fmap\u3092\u4f7f\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3042\u3063\u3066\u3001database/sql\u3092\u4f7f\u3044struct\u3067\u3042\u308bDB\u306b\u4f9d\u5b58\u3059\u308b\u306a\u3069\u3057\u3066\u3044\u308b\u3068\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u306e\u306f\u5927\u5909\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u306fDB\u3092\u5305\u3080\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u308b\u3053\u3068\u3082\u9078\u629e\u80a2\u306b\u5165\u308a\u307e\u3059\u3002\nNewUserRepository()\u3067\u306fmap\u3092\u6ce8\u5165\u3057UserRepository\u3092\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f3\u3064\u306eUser\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u901a\u3057\u3066RDB\u306b\u63a5\u7d9a\u3057\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u306a\u3069\u3057\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\n\nUserRepository\n\u307e\u305a\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u30c6\u30b9\u30c8\u304c\u66f8\u3051\u308bUserRepository\u304b\u3089\u59cb\u3081\u307e\u3059\u3002\n\nuser_repository_test.go\npackage sample\n\nimport (\n    \"testing\"\n)\n\nfunc TestUserRepository(t *testing.T) {\n    m := make(map[UserID]*User)\n    m[1] = &User{1, \"tarou\"}\n    repository := &UserRepositoryImpl{\n        m,\n    }\n\n    if u, _ := repository.FindByID(1); u == nil {\n        t.Error(\"FindByID must be successful when the map including a specified key\")\n    }\n\n    if _, err := repository.FindByID(2); err != NoSuchUserError {\n        t.Error(\"FindByID must be fail with NoSuchUserError when no users have such id\")\n    }\n\n    delete(m, 1)\n    if _, err := repository.FindByID(1); err != NoSuchUserError {\n        t.Error(\"FindByID must be fail with NoSuchUserError when a specified user was deleted\")\n    }\n}\n\n\n\u30c6\u30b9\u30c8\u306e\u521d\u3081\u306bmap\u3092\u4f5c\u6210\u3057\u3066ID\u304c1\u306eUser\u3092\u8ffd\u52a0\u3057\u3001UserRepository\u306b\u6ce8\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\n\n\nmap\u306b\u542b\u307e\u308c\u308b\u30e6\u30fc\u30b6ID\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306fUser\u3092\u8fd4\u3059\n\nmap\u306b\u542b\u307e\u308c\u306a\u3044\u30e6\u30fc\u30b6ID\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306fNoSuchUserError\u3092\u8fd4\u3059\n\nmap\u304b\u3089\u30e6\u30fc\u30b6\u304c\u524a\u9664\u3055\u308c\u305f\u5834\u5408\u306b\u306fNoSuchUserError\u3092\u8fd4\u3059\n\n\u3068\u3044\u30463\u3064\u306e\u9805\u76ee\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\nm[1] = &User{1, \"tarou\"}\u3084delete(m, 1)\u306e\u3088\u3046\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3068\u304d\u306emap\u306e\u72b6\u614b\u3092\u81ea\u5728\u306b\u5236\u5fa1\u3067\u304d\u308b(m[1]\u306e\u3088\u3046\u306a\u547c\u3073\u51fa\u3057\u306e\u7d50\u679c\u3092\u5236\u5fa1\u3067\u304d\u308b)\u305f\u3081\u3001FindByID\u306e\u30ed\u30b8\u30c3\u30af\u306e\u307f\u3092\u30c6\u30b9\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u30e2\u30c3\u30af\u306e\u4f5c\u6210\nUserRepository\u306fmap\u3068\u3044\u3046\u5bb9\u6613\u306b\u5236\u5fa1\u3067\u304d\u308b\u30c7\u30fc\u30bf\u306b\u4f9d\u5b58\u3057\u3066\u3044\u305f\u305f\u3081\u3001\u30c6\u30b9\u30c8\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001UserNameService\u306e\u5834\u5408\u3001\u4f9d\u5b58\u3059\u308bUserRepository\u306e\u5185\u90e8\u72b6\u614b\u3092\u81ea\u5728\u306b\u5236\u5fa1\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093(UserNameService\u304b\u3089\u306fUserRepository\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3057\u304b\u898b\u3048\u306a\u3044\u305f\u3081)\u3002\n\u4e00\u65b9\u3067\u3001UserRepository\u306finterface\u3067\u3042\u308b\u305f\u3081\u3001\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308c\u3070\u30c6\u30b9\u30c8\u306b\u304a\u3044\u3066\u90fd\u5408\u306e\u3044\u3044\u632f\u308b\u821e\u3044\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\u30e2\u30c3\u30af\u306e\u4f5c\u6210\u306b\u306fgomock\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u81ea\u4f5c\u3057\u3066\u3082\u305d\u308c\u307b\u3069\u624b\u9593\u304c\u304b\u304b\u3089\u306a\u304b\u3063\u305f\u308a\u3001\u30e2\u30c3\u30af\u52d5\u4f5c\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306e\u8abf\u67fb\u304c\u697d\u3060\u3063\u305f\u308a\u3059\u308b\u3068\u601d\u3046\u306e\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4f7f\u308f\u306a\u3044\u3067\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u4f5c\u6210\u3057\u305fUserRepository\u306e\u30e2\u30c3\u30af\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nuser_repository_mock.go\npackage sample\n\ntype UserRepositoryMock struct {\n    FindByIDMock func(UserID) (*User, error)\n}\n\nfunc (m *UserRepositoryMock) FindByID(id UserID) (*User, error) {\n    return m.FindByIDMock(id)\n}\n\n\n\u30e2\u30c3\u30af\u306e\u4f5c\u6210\u306f\u3001\u5b9f\u88c5\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u540c\u3058\u578b\u306e\u95a2\u6570\u3092\u6301\u3064struct\u3092\u4f5c\u6210\u3057\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u3067\u306f\u305d\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n\nUserNameService\n\u4f5c\u6210\u3057\u305f\u30e2\u30c3\u30af\u3092\u4f7f\u3063\u3066\u66f8\u3044\u305fUserNameService\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nuser_name_service_test.go\npackage sample\n\nimport (\n    \"testing\"\n)\n\nfunc TestUserNameService(t *testing.T) {\n    userRepositoryMock := &UserRepositoryMock{}\n    service := &UserNameServiceImpl{\n        userRepositoryMock,\n    }\n\n    count := 0\n    userRepositoryMock.FindByIDMock = func(id UserID) (*User, error) {\n        count++\n        return &User{id, \"tarou\"}, nil\n    }\n    if b, _ := service.IsSameName(1, 2); b != true {\n        t.Error(\"IsSameName must be true when users have a same name\")\n    }\n    if count != 2 {\n        t.Error(\"IsSameName must call UserRepository.FindByID just twice\")\n    }\n\n    userRepositoryMock.FindByIDMock = func(id UserID) (*User, error) {\n        if id == 1 {\n            return &User{1, \"tarou\"}, nil\n        } else if id == 2 {\n            return &User{2, \"hanako\"}, nil\n        } else {\n            return nil, NoSuchUserError\n        }\n    }\n    if b, err := service.IsSameName(1, 2); b != false || err != nil {\n        t.Error(\"IsSameName must be false when users have diffferent names\")\n    }\n\n    userRepositoryMock.FindByIDMock = func(id UserID) (*User, error) {\n        if id == 1 {\n            return &User{1, \"tarou\"}, nil\n        } else {\n            return nil, NoSuchUserError\n        }\n    }\n    if _, err := service.IsSameName(1, 2); err != NoSuchUserError {\n        t.Error(\"IsSameName must be fail with NoSuchUserError when some user not found\")\n    }\n}\n\n\n\u30c6\u30b9\u30c8\u306e\u521d\u3081\u306bUserRepository\u306e\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3057\u3001UserNameService\u306b\u6ce8\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e(3+1)\u3064\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u540d\u524d\u304c\u540c\u3058\u30e6\u30fc\u30b6\u306e\u5834\u5408\u306b\u306ftrue\u3092\u8fd4\u3059\n(\u4e00\u5ea6\u306eIsSameName\u3067UserRepository.FindByID\u304c2\u56de\u547c\u3070\u308c\u308b)\n\u30e6\u30fc\u30b6\u306e\u540d\u524d\u304c\u7570\u306a\u308b\u5834\u5408\u306b\u306ffalse\u3092\u8fd4\u3057\u3001\u304b\u3064\u3001\u305d\u306e\u5834\u5408\u306eerror\u306fnil\u3067\u3042\u308b\n\u30e6\u30fc\u30b6\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u306fNoSuchUserError\u3092\u8fd4\u3059\n\n\u5404\u30c6\u30b9\u30c8\u306e\u524d\u306bFindByIDMock\u306b\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001IsSameName\u306e\u30ed\u30b8\u30c3\u30af\u306e\u307f\u3092\u30c6\u30b9\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u56de\u6570\u3092\u8abf\u3079\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306e1\u3064\u3081\u306e\u30c6\u30b9\u30c8\u306e\u3088\u3046\u306b\u5916\u90e8\u306b\u30ab\u30a6\u30f3\u30bf\u3092\u8a2d\u7f6e\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\u6bce\u56defunc(...){...}\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u5197\u9577\u306a\u90e8\u5206\u3082\u3042\u308a\u307e\u3059\u304c\u3001X.Expect().Method(\"Y\").Return(Z)\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u4f9d\u5b58\u306e\u69cb\u6587\u3092\u899a\u3048\u306a\u304f\u3066\u3088\u3044\u3068\u3044\u3046\u5229\u70b9\u3082\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56deUserNameService\u306b\u4f9d\u5b58\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u306f\u4f5c\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u3082\u3057\u4f9d\u5b58\u3059\u308b\u3082\u306e\u304c\u3042\u308c\u3070UserRepositoryMock\u3068\u540c\u3058\u3088\u3046\u306b\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3057\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u5b9f\u88c5\u3092\u5206\u3051\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u66f8\u304d\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306e\u8a2d\u8a08\u3092\u30d1\u30bf\u30fc\u30f3\u5316\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4f5c\u6210\u3057\u305f\u3044\u6a5f\u80fd\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u8868\u73fe\u3057\u3001\u5b9f\u88c5\u306fImpl\u306b\u66f8\u304f\n\u4f9d\u5b58\u5148\u306b\u5b9f\u88c5\u3092\u6ce8\u5165\u3059\u308b\u305f\u3081\u306bNew+\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u540d\u3068\u3044\u3046\u540d\u524d\u3067\u5f15\u6570\u3092\u3068\u3089\u306a\u3044\u95a2\u6570\u3092\u4f5c\u308b\n\u30c6\u30b9\u30c8\u6642\u306b\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308b\n\n\u3053\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u3067\u8a2d\u8a08\u3059\u308c\u3070\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u3067\u60a9\u3080\u3053\u3068\u304c\u6e1b\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n## \u306f\u3058\u3081\u306b\n\nGo\u3067\u306f`interface`\u3092\u4f7f\u3046\u3053\u3068\u3067\u6a5f\u80fd\u3068\u5b9f\u88c5\u3092\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u95a2\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u3084\u304c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306e\u307f\u4f9d\u5b58\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u30c6\u30b9\u30c8\u306e\u6642\u306b\u3060\u3051\u5b9f\u88c5\u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001`interface`\u3092\u4f7f\u3063\u3066\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u66f8\u304d\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u3092\u4f7f\u308f\u305a\u306b\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3057\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u4f5c\u308b\u3082\u306e\n\n2\u3064\u306e\u30e6\u30fc\u30b6ID\u3092\u53d7\u3051\u53d6\u308a\u3001\u30e6\u30fc\u30b6\u306e\u540d\u524d\u304c\u540c\u3058\u304b\u3069\u3046\u304b\u8abf\u3079\u308b\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u4ee5\u4e0b\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u8868\u3055\u308c\u307e\u3059\u3002\n\n```go\ntype UserNameService interface {\n\tIsSameName(id1, id2 UserID) (bool, error)\n}\n```\n\n2\u3064\u306e\u30e6\u30fc\u30b6ID\u3092\u53d7\u3051\u53d6\u3063\u3066\u540d\u524d\u304c\u7b49\u3057\u3051\u308c\u3070`true`\u3092\u8fd4\u3059\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u6307\u5b9a\u3055\u308c\u305fID\u306b\u5bfe\u5fdc\u3059\u308b\u30e6\u30fc\u30b6\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u306f`error`\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\n\n## \u5b9f\u88c5\n\n### \u6e96\u5099\n\n\u307e\u305a\u306f\u3001`User`\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```go:user.go\npackage sample\n\ntype UserID uint\n\ntype User struct {\n\tID   UserID\n\tName string\n}\n```\n\n`UserNameService`\u306f\u3053\u306e`User`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e`Name`\u304c\u7b49\u3057\u3044\u304b\u3092\u8abf\u3079\u308b\u306e\u3067\u3059\u304c\u3001`IsSameName`\u304c\u5f15\u6570\u3067\u53d7\u3051\u53d6\u308b\u306e\u306f`UserID`\u306a\u306e\u3067\u3001`UserID`\u304b\u3089`User`\u3092\u89e3\u6c7a\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n`UserNameService`\u306e\u5f79\u5272\u306f\u30e6\u30fc\u30b6\u306e\u540d\u524d\u306b\u95a2\u3059\u308b\u64cd\u4f5c\u3092\u884c\u3046\u3053\u3068\u306a\u306e\u3067\u3001`User`\u306e\u89e3\u6c7a\u3092\u884c\u3046\u3053\u3068\u306f\u5358\u4e00\u8cac\u4efb\u306e\u539f\u5247\u306b\u53cd\u3057\u307e\u3059\u3002\n\u305d\u3053\u3067`UserRepository`\u3092\u5b9a\u7fa9\u3057\u3066\u3001`User`\u306e\u89e3\u6c7a\u3092\u4efb\u305b\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n`UserRepository`\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```go\ntype UserRepository interface {\n\tFindByID(UserID) (*User, error)\n}\n```\n\n\u3053\u308c\u3067\u3001`UserNameService`\u304c\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n### UserNameService\n\n`UserRepository`\u3092\u4f7f\u3063\u305f`UserNameService`\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```go:user_name_service.go\npackage sample\n\ntype UserNameService interface {\n\tIsSameName(id1, id2 UserID) (bool, error)\n}\n\n// UserRepositoryImpl\u306f UserRepository \u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\ntype UserNameServiceImpl struct {\n\tuserRepository UserRepository\n}\n\nfunc (impl *UserNameServiceImpl) IsSameName(id1, id2 UserID) (bool, error) {\n\tu1, err := impl.userRepository.FindByID(id1)\n\tif err != nil {\n\t\treturn false, err\n\t}\n\tu2, err := impl.userRepository.FindByID(id2)\n\tif err != nil {\n\t\treturn false, err\n\t}\n\treturn (u1.Name == u2.Name), nil\n}\n\nfunc NewUserNameService() UserNameService {\n\t// \u4f9d\u5b58\u306b\u5b9f\u88c5\u3092\u6ce8\u5165\u3057\u3001UserNameService\u3092\u69cb\u7bc9\u3059\u308b\n\treturn &UserNameServiceImpl{\n\t\tNewUserRepository(), // UserRepository\u3092\u6ce8\u5165\n\t}\n}\n```\n\n`UserNameServiceImpl`\u304c`UserNameService`\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\u5185\u90e8\u306b`UserRepository`\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u304b\u3089`UserRepositoryImpl`\u306f`UserRepository`\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3068\u3044\u3048\u307e\u3059\u3002\n\n`IsSameName`\u306f`UserRepository`\u3092\u4f7f\u3063\u3066`User`\u3092\u691c\u7d22\u3057\u3001\u540d\u524d\u304c\u7b49\u3057\u3044\u304b\u3092\u8abf\u3079\u3066\u3044\u307e\u3059\u3002\n\n`UserNameService`\u306e\u5b9f\u88c5\u306f\u3053\u308c\u3067\u7d42\u308f\u308a\u3067\u3059\u304c\u3001\u3053\u306e\u30b5\u30fc\u30d3\u30b9(\u53b3\u5bc6\u306b\u306f`Impl`)\u306f\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u3084\u3059\u3044\u72b6\u614b\u3060\u3068\u3044\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n\u305d\u306e\u7406\u7531\u3068\u3057\u3066\u3001\n\n- \u5185\u90e8\u72b6\u614b\u304c\u306a\u3044(`UserRepository`\u306b`User`\u306e\u7ba1\u7406\u3092\u4efb\u305b\u3066\u3044\u308b)\u305f\u3081\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u306f\u5f15\u6570\u3068`UserRepository`\u306e\u307f\u8003\u3048\u308c\u3070\u3088\u3044\n- `UserRepository`\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067\u30c6\u30b9\u30c8\u6642\u3060\u3051\u5b9f\u88c5\u3092\u5909\u66f4\u3067\u304d\u308b\n\n\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306f\u3001\u305d\u306e\u540d\u306e\u901a\u308a1\u3064\u306e\u632f\u308b\u821e\u3044\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u306a\u306e\u3067\u3001\u4ed6\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u72b6\u614b\u3067\u306f\u66f8\u304f\u3053\u3068\u304c\u56f0\u96e3\u306b\u306a\u308a\u307e\u3059\u3002(\u4f9d\u5b58\u5148\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u3053\u3068\u306b\u306a\u308b\u3001\u3064\u307e\u308a\u3001\u4f9d\u5b58\u5148\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u30c6\u30b9\u30c8\u3082\u6697\u9ed9\u7684\u306b\u542b\u3093\u3067\u3057\u307e\u3046\u305f\u3081\u3002)\n\u30c6\u30b9\u30c8\u6642\u3060\u3051\u5b9f\u88c5\u3092\u5909\u66f4\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u4f9d\u5b58\u5148\u306e\u52d5\u4f5c\u3092\u81ea\u5728\u306b\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001**\u4f9d\u5b58\u5148\u304c\u60f3\u5b9a\u5185\u306e\u52d5\u4f5c\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u81ea\u8eab\u3082\u6b63\u3057\u304f\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u30c6\u30b9\u30c8**\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n`NewUserNameService()`\u306f`UserNameService`\u3078\u306e\u4f9d\u5b58\u306b\u5bfe\u3057\u3066\u5b9f\u88c5\u3092\u6ce8\u5165\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\u5185\u90e8\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b`NewUserRepository()`\u306f\u540c\u69d8\u306b`UserRepository`\u3078\u306e\u4f9d\u5b58\u306b\u5bfe\u3057\u3066\u5b9f\u88c5\u3092\u6ce8\u5165\u3059\u308b\u95a2\u6570\u3067\u3001\u6b21\u7bc0\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u6642\u4ee5\u5916\u3067\u5b9f\u88c5\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4f9d\u5b58\u6027\u6ce8\u5165\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u4ed6\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3082\u554f\u984c\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n### UserRepository\n\n`UserRepository`\u3082\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u901a\u5e38\u306a\u3089\u3070KVS\u3084RDB\u3092\u4f7f\u3063\u3066`User`\u3092\u691c\u7d22\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f`map[UserID]*User`\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n```go:user_repository.go\npackage sample\n\nimport (\n\t\"errors\"\n)\n\ntype UserRepository interface {\n\tFindByID(UserID) (*User, error)\n}\n\nvar NoSuchUserError = errors.New(\"no such user\")\n\n// UserRepositoryImpl\u306f map[UserID]*User \u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\ntype UserRepositoryImpl struct {\n\tm map[UserID]*User\n}\n\nfunc (impl *UserRepositoryImpl) FindByID(id UserID) (*User, error) {\n\tuser, ok := impl.m[id]\n\tif !ok {\n\t\treturn nil, NoSuchUserError\n\t}\n\treturn user, nil\n}\n\nfunc NewUserRepository() UserRepository {\n\t// \u4f9d\u5b58\u306b\u5b9f\u88c5\u3092\u6ce8\u5165\u3057\u3001UserRepository\u3092\u69cb\u7bc9\u3059\u308b\n\tm := make(map[UserID]*User)\n\tm[1] = &User{1, \"tarou\"}\n\tm[2] = &User{2, \"tarou\"}\n\tm[3] = &User{3, \"hanako\"}\n\treturn &UserRepositoryImpl{m}\n}\n```\n\n`UserRepository`\u306f`map`\u3068\u3044\u3046\u5b9f\u88c5\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u66f8\u304d\u3084\u3059\u3044\u72b6\u614b\u3060\u3068\u3044\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n\u306a\u305c\u306a\u3089\u3001`map`\u306e\u5b9f\u88c5\u3092\u30c6\u30b9\u30c8\u6642\u306b\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001`map`\u3068\u3044\u3046\u30c7\u30fc\u30bf\u69cb\u9020\u81ea\u4f53\u304c\u5185\u90e8\u72b6\u614b\u3092\u5236\u5fa1\u3057\u3084\u3059\u3044\u305f\u3081\u3001\u30c6\u30b9\u30c8\u6642\u306b\u4efb\u610f\u306e\u72b6\u614b\u3092\u4f5c\u308a\u51fa\u305b\u308b\u304b\u3089\u3067\u3059\u3002\n\u3082\u3061\u308d\u3093`map`\u306e\u3088\u3046\u306a\u632f\u308b\u821e\u3044\u3092\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u3063\u3066\u305d\u308c\u306b\u4f9d\u5b58\u3055\u305b\u305f\u307b\u3046\u304c\u67d4\u8edf\u306a\u8a2d\u8a08\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306e\u5834\u5408\u305d\u3053\u307e\u3067\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u4eca\u56de\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u3084\u3059\u3044\u306e\u306f`map`\u3092\u4f7f\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3042\u3063\u3066\u3001`database/sql`\u3092\u4f7f\u3044`struct`\u3067\u3042\u308b`DB`\u306b\u4f9d\u5b58\u3059\u308b\u306a\u3069\u3057\u3066\u3044\u308b\u3068\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u306e\u306f\u5927\u5909\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u306f`DB`\u3092\u5305\u3080\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u308b\u3053\u3068\u3082\u9078\u629e\u80a2\u306b\u5165\u308a\u307e\u3059\u3002\n\n`NewUserRepository()`\u3067\u306f`map`\u3092\u6ce8\u5165\u3057`UserRepository`\u3092\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f3\u3064\u306e`User`\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u901a\u3057\u3066RDB\u306b\u63a5\u7d9a\u3057\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u306a\u3069\u3057\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n## \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\n\n### UserRepository\n\n\u307e\u305a\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u30c6\u30b9\u30c8\u304c\u66f8\u3051\u308b`UserRepository`\u304b\u3089\u59cb\u3081\u307e\u3059\u3002\n\n```go:user_repository_test.go\npackage sample\n\nimport (\n\t\"testing\"\n)\n\nfunc TestUserRepository(t *testing.T) {\n\tm := make(map[UserID]*User)\n\tm[1] = &User{1, \"tarou\"}\n\trepository := &UserRepositoryImpl{\n\t\tm,\n\t}\n\n\tif u, _ := repository.FindByID(1); u == nil {\n\t\tt.Error(\"FindByID must be successful when the map including a specified key\")\n\t}\n\n\tif _, err := repository.FindByID(2); err != NoSuchUserError {\n\t\tt.Error(\"FindByID must be fail with NoSuchUserError when no users have such id\")\n\t}\n\n\tdelete(m, 1)\n\tif _, err := repository.FindByID(1); err != NoSuchUserError {\n\t\tt.Error(\"FindByID must be fail with NoSuchUserError when a specified user was deleted\")\n\t}\n}\n```\n\n\u30c6\u30b9\u30c8\u306e\u521d\u3081\u306b`map`\u3092\u4f5c\u6210\u3057\u3066ID\u304c1\u306e`User`\u3092\u8ffd\u52a0\u3057\u3001`UserRepository`\u306b\u6ce8\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\n\n- `map`\u306b\u542b\u307e\u308c\u308b\u30e6\u30fc\u30b6ID\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306f`User`\u3092\u8fd4\u3059\n- `map`\u306b\u542b\u307e\u308c\u306a\u3044\u30e6\u30fc\u30b6ID\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306f`NoSuchUserError`\u3092\u8fd4\u3059\n- `map`\u304b\u3089\u30e6\u30fc\u30b6\u304c\u524a\u9664\u3055\u308c\u305f\u5834\u5408\u306b\u306f`NoSuchUserError`\u3092\u8fd4\u3059\n\n\u3068\u3044\u30463\u3064\u306e\u9805\u76ee\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n`m[1] = &User{1, \"tarou\"}`\u3084`delete(m, 1)`\u306e\u3088\u3046\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3068\u304d\u306e`map`\u306e\u72b6\u614b\u3092\u81ea\u5728\u306b\u5236\u5fa1\u3067\u304d\u308b(`m[1]`\u306e\u3088\u3046\u306a\u547c\u3073\u51fa\u3057\u306e\u7d50\u679c\u3092\u5236\u5fa1\u3067\u304d\u308b)\u305f\u3081\u3001`FindByID`\u306e\u30ed\u30b8\u30c3\u30af\u306e\u307f\u3092\u30c6\u30b9\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n### \u30e2\u30c3\u30af\u306e\u4f5c\u6210\n\n`UserRepository`\u306f`map`\u3068\u3044\u3046\u5bb9\u6613\u306b\u5236\u5fa1\u3067\u304d\u308b\u30c7\u30fc\u30bf\u306b\u4f9d\u5b58\u3057\u3066\u3044\u305f\u305f\u3081\u3001\u30c6\u30b9\u30c8\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001`UserNameService`\u306e\u5834\u5408\u3001\u4f9d\u5b58\u3059\u308b`UserRepository`\u306e\u5185\u90e8\u72b6\u614b\u3092\u81ea\u5728\u306b\u5236\u5fa1\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093(`UserNameService`\u304b\u3089\u306f`UserRepository`\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3057\u304b\u898b\u3048\u306a\u3044\u305f\u3081)\u3002\n\u4e00\u65b9\u3067\u3001`UserRepository`\u306f`interface`\u3067\u3042\u308b\u305f\u3081\u3001\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308c\u3070\u30c6\u30b9\u30c8\u306b\u304a\u3044\u3066\u90fd\u5408\u306e\u3044\u3044\u632f\u308b\u821e\u3044\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30e2\u30c3\u30af\u306e\u4f5c\u6210\u306b\u306f[gomock](https://github.com/golang/mock)\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u81ea\u4f5c\u3057\u3066\u3082\u305d\u308c\u307b\u3069\u624b\u9593\u304c\u304b\u304b\u3089\u306a\u304b\u3063\u305f\u308a\u3001\u30e2\u30c3\u30af\u52d5\u4f5c\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306e\u8abf\u67fb\u304c\u697d\u3060\u3063\u305f\u308a\u3059\u308b\u3068\u601d\u3046\u306e\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4f7f\u308f\u306a\u3044\u3067\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4f5c\u6210\u3057\u305f`UserRepository`\u306e\u30e2\u30c3\u30af\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```go:user_repository_mock.go\npackage sample\n\ntype UserRepositoryMock struct {\n\tFindByIDMock func(UserID) (*User, error)\n}\n\nfunc (m *UserRepositoryMock) FindByID(id UserID) (*User, error) {\n\treturn m.FindByIDMock(id)\n}\n```\n\n\u30e2\u30c3\u30af\u306e\u4f5c\u6210\u306f\u3001\u5b9f\u88c5\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u540c\u3058\u578b\u306e\u95a2\u6570\u3092\u6301\u3064`struct`\u3092\u4f5c\u6210\u3057\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u3067\u306f\u305d\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n\n### UserNameService\n\n\u4f5c\u6210\u3057\u305f\u30e2\u30c3\u30af\u3092\u4f7f\u3063\u3066\u66f8\u3044\u305f`UserNameService`\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```go:user_name_service_test.go\npackage sample\n\nimport (\n\t\"testing\"\n)\n\nfunc TestUserNameService(t *testing.T) {\n\tuserRepositoryMock := &UserRepositoryMock{}\n\tservice := &UserNameServiceImpl{\n\t\tuserRepositoryMock,\n\t}\n\n\tcount := 0\n\tuserRepositoryMock.FindByIDMock = func(id UserID) (*User, error) {\n\t\tcount++\n\t\treturn &User{id, \"tarou\"}, nil\n\t}\n\tif b, _ := service.IsSameName(1, 2); b != true {\n\t\tt.Error(\"IsSameName must be true when users have a same name\")\n\t}\n\tif count != 2 {\n\t\tt.Error(\"IsSameName must call UserRepository.FindByID just twice\")\n\t}\n\n\tuserRepositoryMock.FindByIDMock = func(id UserID) (*User, error) {\n\t\tif id == 1 {\n\t\t\treturn &User{1, \"tarou\"}, nil\n\t\t} else if id == 2 {\n\t\t\treturn &User{2, \"hanako\"}, nil\n\t\t} else {\n\t\t\treturn nil, NoSuchUserError\n\t\t}\n\t}\n\tif b, err := service.IsSameName(1, 2); b != false || err != nil {\n\t\tt.Error(\"IsSameName must be false when users have diffferent names\")\n\t}\n\n\tuserRepositoryMock.FindByIDMock = func(id UserID) (*User, error) {\n\t\tif id == 1 {\n\t\t\treturn &User{1, \"tarou\"}, nil\n\t\t} else {\n\t\t\treturn nil, NoSuchUserError\n\t\t}\n\t}\n\tif _, err := service.IsSameName(1, 2); err != NoSuchUserError {\n\t\tt.Error(\"IsSameName must be fail with NoSuchUserError when some user not found\")\n\t}\n}\n```\n\n\u30c6\u30b9\u30c8\u306e\u521d\u3081\u306b`UserRepository`\u306e\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3057\u3001`UserNameService`\u306b\u6ce8\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e(3+1)\u3064\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n- \u540d\u524d\u304c\u540c\u3058\u30e6\u30fc\u30b6\u306e\u5834\u5408\u306b\u306f`true`\u3092\u8fd4\u3059\n- (\u4e00\u5ea6\u306e`IsSameName`\u3067`UserRepository.FindByID`\u304c2\u56de\u547c\u3070\u308c\u308b)\n- \u30e6\u30fc\u30b6\u306e\u540d\u524d\u304c\u7570\u306a\u308b\u5834\u5408\u306b\u306f`false`\u3092\u8fd4\u3057\u3001\u304b\u3064\u3001\u305d\u306e\u5834\u5408\u306e`error`\u306f`nil`\u3067\u3042\u308b\n- \u30e6\u30fc\u30b6\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u306f`NoSuchUserError`\u3092\u8fd4\u3059\n\n\u5404\u30c6\u30b9\u30c8\u306e\u524d\u306b`FindByIDMock`\u306b\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001`IsSameName`\u306e\u30ed\u30b8\u30c3\u30af\u306e\u307f\u3092\u30c6\u30b9\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u56de\u6570\u3092\u8abf\u3079\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306e1\u3064\u3081\u306e\u30c6\u30b9\u30c8\u306e\u3088\u3046\u306b\u5916\u90e8\u306b\u30ab\u30a6\u30f3\u30bf\u3092\u8a2d\u7f6e\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\u6bce\u56de`func(...){...}`\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u5197\u9577\u306a\u90e8\u5206\u3082\u3042\u308a\u307e\u3059\u304c\u3001`X.Expect().Method(\"Y\").Return(Z)`\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u4f9d\u5b58\u306e\u69cb\u6587\u3092\u899a\u3048\u306a\u304f\u3066\u3088\u3044\u3068\u3044\u3046\u5229\u70b9\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u4eca\u56de`UserNameService`\u306b\u4f9d\u5b58\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u306f\u4f5c\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u3082\u3057\u4f9d\u5b58\u3059\u308b\u3082\u306e\u304c\u3042\u308c\u3070`UserRepositoryMock`\u3068\u540c\u3058\u3088\u3046\u306b\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3057\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u5b9f\u88c5\u3092\u5206\u3051\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u66f8\u304d\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306e\u8a2d\u8a08\u3092\u30d1\u30bf\u30fc\u30f3\u5316\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. \u4f5c\u6210\u3057\u305f\u3044\u6a5f\u80fd\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u8868\u73fe\u3057\u3001\u5b9f\u88c5\u306f`Impl`\u306b\u66f8\u304f\n2. \u4f9d\u5b58\u5148\u306b\u5b9f\u88c5\u3092\u6ce8\u5165\u3059\u308b\u305f\u3081\u306b`New+\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u540d`\u3068\u3044\u3046\u540d\u524d\u3067\u5f15\u6570\u3092\u3068\u3089\u306a\u3044\u95a2\u6570\u3092\u4f5c\u308b\n3. \u30c6\u30b9\u30c8\u6642\u306b\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308b\n\n\u3053\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u3067\u8a2d\u8a08\u3059\u308c\u3070\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u3067\u60a9\u3080\u3053\u3068\u304c\u6e1b\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\n", "tags": ["Go", "golang", "\u30c6\u30b9\u30c8", "test"]}