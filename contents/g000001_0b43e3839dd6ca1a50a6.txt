{"tags": ["common-lisp"], "context": " More than 1 year has passed since last update.constexpr \u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0:\u300c\u901f\u5ea6\u304c\u6b32\u3057\u3044\u304b\u2026 \u306a\u3089\u3070\u304f\u308c\u3066\u3084\u308b!\u300d\nhttp://zakkas783.tumblr.com/post/7842759252/constexpr\n\u3092\u8aad\u3093\u3067\u3001Common Lisp\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u8a08\u7b97\u304c\u5f97\u610f\u3060\u306a\u3068\u601d\u3063\u3066\u66f8\u3044\u3066\u307f\u305f\n(defun primep (n)\n  #+sbcl (sb-int:positive-primep n))\n\n;; (primep 4461926290642603313185756658254841232481376192090294129197)\n;; ....\n\n(define-compiler-macro primep (&whole form n)\n  (if (integerp n)\n      (and (ppcre:scan \"is a prime number\"\n                       (drakma:http-request\n                        (format nil\n                                \"http://www.wolframalpha.com/input/?i=~D\"\n                                n)))\n           'T)\n      form))\n\n(defun prime-test ()\n  (list :primep\n        4461926290642603313185756658254841232481376192090294129197\n        '=>\n        (primep 4461926290642603313185756658254841232481376192090294129197)))\n\n(prime-test)\n;\u21d2 (:PRIMEP 4461926290642603313185756658254841232481376192090294129197 => T)\n----------\nEvaluation took:\n  0.000 seconds of real time\n  0.000000 seconds of total run time (0.000000 user, 0.000000 system)\n  100.00% CPU\n  2,448 processor cycles\n  0 bytes consed\n\nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n\nconstexpr \u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0:\u300c\u901f\u5ea6\u304c\u6b32\u3057\u3044\u304b\u2026 \u306a\u3089\u3070\u304f\u308c\u3066\u3084\u308b!\u300d\nhttp://zakkas783.tumblr.com/post/7842759252/constexpr\n\u3092\u8aad\u3093\u3067\u3001Common Lisp\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u8a08\u7b97\u304c\u5f97\u610f\u3060\u306a\u3068\u601d\u3063\u3066\u66f8\u3044\u3066\u307f\u305f\n\n```common-lisp\n(defun primep (n)\n  #+sbcl (sb-int:positive-primep n))\n\n;; (primep 4461926290642603313185756658254841232481376192090294129197)\n;; ....\n\n(define-compiler-macro primep (&whole form n)\n  (if (integerp n)\n      (and (ppcre:scan \"is a prime number\"\n                       (drakma:http-request\n                        (format nil\n                                \"http://www.wolframalpha.com/input/?i=~D\"\n                                n)))\n           'T)\n      form))\n\n(defun prime-test ()\n  (list :primep\n        4461926290642603313185756658254841232481376192090294129197\n        '=>\n        (primep 4461926290642603313185756658254841232481376192090294129197)))\n\n(prime-test)\n;\u21d2 (:PRIMEP 4461926290642603313185756658254841232481376192090294129197 => T)\n----------\nEvaluation took:\n  0.000 seconds of real time\n  0.000000 seconds of total run time (0.000000 user, 0.000000 system)\n  100.00% CPU\n  2,448 processor cycles\n  0 bytes consed\n\nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n```\n"}