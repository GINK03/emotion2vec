{"context": "\n\n\u306f\u3058\u3081\u306b\nVHDL\u3067\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u95a2\u6570\u3084\u5b9a\u6570\u3092\u5b9a\u7fa9\u3057\u305f\u969b\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d.\u95a2\u6570\u540d \u3068\u3044\u3046\u5f62\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u3066\u540d\u524d\u304c\u304b\u3076\u3063\u305f\u308a\u3057\u305f\u6642\u3084\u3001\u3069\u306e\u95a2\u6570\u304c\u3069\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u304b\u4e00\u76ee\u77ad\u7136\u306a\u306e\u3067\u3001\u5927\u5909\u91cd\u5b9d\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3084\u3089 Altera \u306e Quartus \u3067\u306f\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\u524d\u56de( Altera \u306e Quartus \u3067VHDL\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5f15\u6570\u7121\u3057\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306e\u6ce8\u610f\u70b9 )\u3067\u306f\u3001\u3042\u305f\u304b\u3082\u56de\u907f\u51fa\u6765\u308b\u3088\u3046\u306b\u66f8\u3044\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u5b9f\u969b\u306e\u6240\u3001\u3082\u3063\u3068\u30d2\u30c9\u3044\u76ee\u306b\u3042\u3063\u305f\u306e\u3067\u3053\u3053\u306b\u30e1\u30e2\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30c8\u30e9\u30d6\u30eb\u304c\u767a\u751f\u3057\u305f\u74b0\u5883\n\nAltera \u793e Quartus Prime Verion 15.1.0 Build 185 10/21/2015 SJ Lite Edition \n\n\n\u30c8\u30e9\u30d6\u30eb\u304c\u767a\u751f\u3057\u305f VHDL \u8a18\u8ff0\n\u6b21\u306e\u3088\u3046\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u5185\u306b\u5f15\u6570\u306e\u7121\u3044\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nsample.vhd\nlibrary ieee;\nuse     ieee.std_logic_1164.all;\npackage Sample is\n    subtype   Code_Type  is std_logic_vector(3 downto 0);\n    function  New_Code_0 return Code_Type;\n    function  New_Code_1 return Code_Type;\n    function  New_Code_2 return Code_Type;\n    function  New_Code_3 return Code_Type;\nend Sample;\npackage body Sample is\n    function  New_Code_0 return Code_Type is begin\n        return std_logic_vector'(\"0001\");\n    end function;\n    function  New_Code_1 return Code_Type is begin\n        return std_logic_vector'(\"0010\");\n    end function;\n    function  New_Code_2 return Code_Type is begin\n        return std_logic_vector'(\"0100\");\n    end function;\n    function  New_Code_3 return Code_Type is begin\n        return std_logic_vector'(\"1000\");\n    end function;\nend Sample;\n\n\n\u3067\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u5b9a\u7fa9\u3057\u305f\u5f15\u6570\u306e\u7121\u3044\u95a2\u6570\u3092\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d.\u95a2\u6570\u540d\u3068\u3044\u3046\u5f62\u3067\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\nsample_ng.vhd\nlibrary ieee;\nuse     ieee.std_logic_1164.all;\nuse     ieee.numeric_std.all;\nuse     work.Sample;\nentity  Sample_NG is\n    port (CLK: in  std_logic;\n          CLR: in  std_logic;\n          O  : out Sample.Code_Type\n    );\nend     Sample_NG;\narchitecture RTL of Sample_NG is\n    signal count : integer range 0 to 3 := 0;\nbegin\n    process(CLK) begin\n        if (CLK'event and CLK = '1') then\n            if (CLR = '1' or count >= 3) then\n                count <= 0;\n            else\n                count <= count + 1;\n            end if;\n        end if;\n    end process;\n    O <= Sample.New_Code_3 when (count = 3) else\n         Sample.New_Code_2 when (count = 2) else\n         Sample.New_Code_1 when (count = 1) else\n         Sample.New_Code_0;\nend RTL;\n\n\n\nAnalysis & Synthesis \u306e\u7d50\u679c\n\u3053\u308c\u3092 Altera Quartus Prime Verion \u3067 Analysis & Synthesis \u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u307e\u3059\u3002\nInfo: *******************************************************************\nInfo: Running Quartus Prime Analysis & Synthesis\n    Info: Version 15.1.0 Build 185 10/21/2015 SJ Lite Edition\n    Info: Processing started: Tue Mar 15 00:50:13 2016\nInfo: Command: quartus_map --read_settings_files=on --write_settings_files=off 0020 -c sample_ng\nInfo (20030): Parallel compilation is enabled and will use 4 of the 4 processors detected\nInfo (12021): Found 2 design units, including 1 entities, in source file sample_ng.vhd\n    Info (12022): Found design unit 1: Sample_NG-RTL\n    Info (12023): Found entity 1: Sample_NG\nInfo (12021): Found 2 design units, including 0 entities, in source file sample.vhd\n    Info (12022): Found design unit 1: Sample\n    Info (12022): Found design unit 2: Sample-body\nInfo (12127): Elaborating entity \"sample_ng\" for the top level hierarchy\nWarning (10873): Using initial value X (don't care) for net \"O\" at sample_ng.vhd(8)\nWarning (13024): Output pins are stuck at VCC or GND\n    Warning (13410): Pin \"O[0]\" is stuck at GND\n    Warning (13410): Pin \"O[1]\" is stuck at GND\n    Warning (13410): Pin \"O[2]\" is stuck at GND\n    Warning (13410): Pin \"O[3]\" is stuck at GND\nInfo (16010): Generating hard_block partition \"hard_block:auto_generated_inst\"\n    Info (16011): Adding 0 node(s), including 0 DDIO, 0 PLL, 0 transceiver and 0 LCELL\nWarning (21074): Design contains 2 input pin(s) that do not drive logic\n    Warning (15610): No output dependent on input pin \"CLK\"\n    Warning (15610): No output dependent on input pin \"CLR\"\nInfo (21057): Implemented 6 device resources after synthesis - the final resource count might be different\n    Info (21058): Implemented 2 input pins\n    Info (21059): Implemented 4 output pins\nInfo: Quartus Prime Analysis & Synthesis was successful. 0 errors, 9 warnings\n    Info: Peak virtual memory: 870 megabytes\n    Info: Processing ended: Tue Mar 15 00:50:38 2016\n    Info: Elapsed time: 00:00:25\n    Info: Total CPU time (on all processors): 00:00:56\n\n\u4f55\u6545\u304b \u30d1\u30c3\u30b1\u30fc\u30b8\u540d.\u95a2\u6570\u540d \u3067\u547c\u3073\u51fa\u3057\u305f\u3068\u3053\u308d\u304c\u3001X(don't care) \u306b\u306a\u3063\u3061\u3083\u3063\u3066\u307e\u3059\u3002\n\u6319\u3052\u53e5\u306e\u679c\u3066\u306b All-0 \u3068\u3055\u308c\u3066\u3057\u307e\u3044\u3001\u51fa\u529b\u4fe1\u53f7\u304c\u5168\u3066GND\u306b\u63a5\u7d9a\u3055\u308c\u3061\u3083\u3063\u3066\u307e\u3059\u3002\n\n\u305d\u306e\u4ed6\n\u3068\u308a\u3042\u3048\u305a\u3001Altera Forum \u306b\u3082\u3042\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\nWrong logic synthesis when call function named <package_name>.<function_name>\n#\u306f\u3058\u3081\u306b\n\nVHDL\u3067\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u95a2\u6570\u3084\u5b9a\u6570\u3092\u5b9a\u7fa9\u3057\u305f\u969b\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d.\u95a2\u6570\u540d \u3068\u3044\u3046\u5f62\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u3066\u540d\u524d\u304c\u304b\u3076\u3063\u305f\u308a\u3057\u305f\u6642\u3084\u3001\u3069\u306e\u95a2\u6570\u304c\u3069\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u304b\u4e00\u76ee\u77ad\u7136\u306a\u306e\u3067\u3001\u5927\u5909\u91cd\u5b9d\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3084\u3089 Altera \u306e Quartus \u3067\u306f\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\u524d\u56de( [Altera \u306e Quartus \u3067VHDL\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5f15\u6570\u7121\u3057\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306e\u6ce8\u610f\u70b9](http://qiita.com/ikwzm/items/7e00483e773b05a881ba) )\u3067\u306f\u3001\u3042\u305f\u304b\u3082\u56de\u907f\u51fa\u6765\u308b\u3088\u3046\u306b\u66f8\u3044\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u5b9f\u969b\u306e\u6240\u3001\u3082\u3063\u3068\u30d2\u30c9\u3044\u76ee\u306b\u3042\u3063\u305f\u306e\u3067\u3053\u3053\u306b\u30e1\u30e2\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n#\u30c8\u30e9\u30d6\u30eb\u304c\u767a\u751f\u3057\u305f\u74b0\u5883\n\n- Altera \u793e Quartus Prime Verion 15.1.0 Build 185 10/21/2015 SJ Lite Edition \n\n#\u30c8\u30e9\u30d6\u30eb\u304c\u767a\u751f\u3057\u305f VHDL \u8a18\u8ff0\n\n\u6b21\u306e\u3088\u3046\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u5185\u306b\u5f15\u6570\u306e\u7121\u3044\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n````VHDL:sample.vhd\nlibrary ieee;\nuse     ieee.std_logic_1164.all;\npackage Sample is\n    subtype   Code_Type  is std_logic_vector(3 downto 0);\n    function  New_Code_0 return Code_Type;\n    function  New_Code_1 return Code_Type;\n    function  New_Code_2 return Code_Type;\n    function  New_Code_3 return Code_Type;\nend Sample;\npackage body Sample is\n    function  New_Code_0 return Code_Type is begin\n        return std_logic_vector'(\"0001\");\n    end function;\n    function  New_Code_1 return Code_Type is begin\n        return std_logic_vector'(\"0010\");\n    end function;\n    function  New_Code_2 return Code_Type is begin\n        return std_logic_vector'(\"0100\");\n    end function;\n    function  New_Code_3 return Code_Type is begin\n        return std_logic_vector'(\"1000\");\n    end function;\nend Sample;\n````\n\n\u3067\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u5b9a\u7fa9\u3057\u305f\u5f15\u6570\u306e\u7121\u3044\u95a2\u6570\u3092\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d.\u95a2\u6570\u540d\u3068\u3044\u3046\u5f62\u3067\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n````VHDL:sample_ng.vhd\nlibrary ieee;\nuse     ieee.std_logic_1164.all;\nuse     ieee.numeric_std.all;\nuse     work.Sample;\nentity  Sample_NG is\n    port (CLK: in  std_logic;\n          CLR: in  std_logic;\n          O  : out Sample.Code_Type\n    );\nend     Sample_NG;\narchitecture RTL of Sample_NG is\n    signal count : integer range 0 to 3 := 0;\nbegin\n    process(CLK) begin\n        if (CLK'event and CLK = '1') then\n            if (CLR = '1' or count >= 3) then\n                count <= 0;\n            else\n                count <= count + 1;\n            end if;\n        end if;\n    end process;\n    O <= Sample.New_Code_3 when (count = 3) else\n         Sample.New_Code_2 when (count = 2) else\n         Sample.New_Code_1 when (count = 1) else\n         Sample.New_Code_0;\nend RTL;\n````\n\n#Analysis & Synthesis \u306e\u7d50\u679c\n\n\u3053\u308c\u3092 Altera Quartus Prime Verion \u3067 Analysis & Synthesis \u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u307e\u3059\u3002\n\n````\nInfo: *******************************************************************\nInfo: Running Quartus Prime Analysis & Synthesis\n\tInfo: Version 15.1.0 Build 185 10/21/2015 SJ Lite Edition\n\tInfo: Processing started: Tue Mar 15 00:50:13 2016\nInfo: Command: quartus_map --read_settings_files=on --write_settings_files=off 0020 -c sample_ng\nInfo (20030): Parallel compilation is enabled and will use 4 of the 4 processors detected\nInfo (12021): Found 2 design units, including 1 entities, in source file sample_ng.vhd\n\tInfo (12022): Found design unit 1: Sample_NG-RTL\n\tInfo (12023): Found entity 1: Sample_NG\nInfo (12021): Found 2 design units, including 0 entities, in source file sample.vhd\n\tInfo (12022): Found design unit 1: Sample\n\tInfo (12022): Found design unit 2: Sample-body\nInfo (12127): Elaborating entity \"sample_ng\" for the top level hierarchy\nWarning (10873): Using initial value X (don't care) for net \"O\" at sample_ng.vhd(8)\nWarning (13024): Output pins are stuck at VCC or GND\n\tWarning (13410): Pin \"O[0]\" is stuck at GND\n\tWarning (13410): Pin \"O[1]\" is stuck at GND\n\tWarning (13410): Pin \"O[2]\" is stuck at GND\n\tWarning (13410): Pin \"O[3]\" is stuck at GND\nInfo (16010): Generating hard_block partition \"hard_block:auto_generated_inst\"\n\tInfo (16011): Adding 0 node(s), including 0 DDIO, 0 PLL, 0 transceiver and 0 LCELL\nWarning (21074): Design contains 2 input pin(s) that do not drive logic\n\tWarning (15610): No output dependent on input pin \"CLK\"\n\tWarning (15610): No output dependent on input pin \"CLR\"\nInfo (21057): Implemented 6 device resources after synthesis - the final resource count might be different\n\tInfo (21058): Implemented 2 input pins\n\tInfo (21059): Implemented 4 output pins\nInfo: Quartus Prime Analysis & Synthesis was successful. 0 errors, 9 warnings\n\tInfo: Peak virtual memory: 870 megabytes\n\tInfo: Processing ended: Tue Mar 15 00:50:38 2016\n\tInfo: Elapsed time: 00:00:25\n\tInfo: Total CPU time (on all processors): 00:00:56\n````\n\n\u4f55\u6545\u304b \u30d1\u30c3\u30b1\u30fc\u30b8\u540d.\u95a2\u6570\u540d \u3067\u547c\u3073\u51fa\u3057\u305f\u3068\u3053\u308d\u304c\u3001X(don't care) \u306b\u306a\u3063\u3061\u3083\u3063\u3066\u307e\u3059\u3002\n\u6319\u3052\u53e5\u306e\u679c\u3066\u306b All-0 \u3068\u3055\u308c\u3066\u3057\u307e\u3044\u3001\u51fa\u529b\u4fe1\u53f7\u304c\u5168\u3066GND\u306b\u63a5\u7d9a\u3055\u308c\u3061\u3083\u3063\u3066\u307e\u3059\u3002\n\n#\u305d\u306e\u4ed6\n\n\u3068\u308a\u3042\u3048\u305a\u3001[Altera Forum](http://www.alteraforum.com/forum/forum.php) \u306b\u3082\u3042\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n[Wrong logic synthesis when call function named \\<package_name\\>.\\<function_name\\>](http://www.alteraforum.com/forum/showthread.php?t=51727)\n\n\n\n", "tags": ["FPGA", "VHDL", "quartus", "Altera"]}