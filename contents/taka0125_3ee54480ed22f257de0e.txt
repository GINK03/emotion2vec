{"tags": ["GoogleSpreadSheet", "Ruby"], "context": " More than 1 year has passed since last update.http://qiita.com/niku4i/items/294abc8fec33b6cc301f\n\u3092\u53c2\u8003\u306b\u3084\u3063\u3066\u307f\u305f\u3051\u3069\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n\u767a\u751f\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\ngoogle-api-client\u306e0.8.1.1\u3067\u767a\u751f\u3002\n\n\u30a8\u30e9\u30fc\u5185\u5bb9\n`write_credentials': undefined method `authorization=' for #<Google::APIClient::FileStorage:0x007fbecca58b78> (NoMethodError)\n\n\u307f\u305f\u3044\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u8a8d\u8a3c\u60c5\u5831\u3092\u4fdd\u5b58\u3067\u304d\u306a\u304b\u3063\u305f\u3002\ngoogle-api-client-0.8.1.1/lib/google/api_client/auth/file_storage.rb\n\u3092\u898b\u3066\u307f\u308b\u3068deprecated\u3067Google::APIClient::Storage\u3068Google::APIClient::FileStore\u3092\u4f7f\u3048\u3068\u66f8\u3044\u3066\u3042\u3063\u305f\n\n\u3068\u3044\u3046\u308f\u3051\u3067\nhttp://qiita.com/niku4i/items/294abc8fec33b6cc301f\n\u306esetup\u30e1\u30bd\u30c3\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u305f\u3089\u52d5\u3044\u305f\ndef setup()\n  client = Google::APIClient.new(application_name: 'Sample', application_version: '1.0.0')\n  store = Google::APIClient::FileStore.new(CREDENTIAL_STORE_FILE)\n  storage = Google::APIClient::Storage.new(store)\n  storage.authorize\n\n  if storage.authorization.nil?\n    client_secrets = Google::APIClient::ClientSecrets.load\n\n    flow = Google::APIClient::InstalledAppFlow.new(\n      client_id: client_secrets.client_id,\n      client_secret: client_secrets.client_secret,\n      scope: %w(\n        https://www.googleapis.com/auth/drive\n        https://docs.google.com/feeds/\n        https://docs.googleusercontent.com/\n        https://spreadsheets.google.com/feeds/\n      ),\n    )\n\n    client.authorization = flow.authorize\n    storage.write_credentials(client.authorization)\n  else\n    client.authorization = storage.authorization\n  end\n\n  return client\nend\n\n\nhttp://qiita.com/niku4i/items/294abc8fec33b6cc301f\n\n\u3092\u53c2\u8003\u306b\u3084\u3063\u3066\u307f\u305f\u3051\u3069\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n# \u767a\u751f\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\n\ngoogle-api-client\u306e`0.8.1.1`\u3067\u767a\u751f\u3002\n\n# \u30a8\u30e9\u30fc\u5185\u5bb9\n\n```\n`write_credentials': undefined method `authorization=' for #<Google::APIClient::FileStorage:0x007fbecca58b78> (NoMethodError)\n```\n\n\u307f\u305f\u3044\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u8a8d\u8a3c\u60c5\u5831\u3092\u4fdd\u5b58\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n\n`google-api-client-0.8.1.1/lib/google/api_client/auth/file_storage.rb`\n\n\u3092\u898b\u3066\u307f\u308b\u3068`deprecated`\u3067`Google::APIClient::Storage`\u3068`Google::APIClient::FileStore`\u3092\u4f7f\u3048\u3068\u66f8\u3044\u3066\u3042\u3063\u305f\n\n# \u3068\u3044\u3046\u308f\u3051\u3067\n\nhttp://qiita.com/niku4i/items/294abc8fec33b6cc301f\n\n\u306esetup\u30e1\u30bd\u30c3\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u305f\u3089\u52d5\u3044\u305f\n\n```\ndef setup()\n  client = Google::APIClient.new(application_name: 'Sample', application_version: '1.0.0')\n  store = Google::APIClient::FileStore.new(CREDENTIAL_STORE_FILE)\n  storage = Google::APIClient::Storage.new(store)\n  storage.authorize\n\n  if storage.authorization.nil?\n    client_secrets = Google::APIClient::ClientSecrets.load\n\n    flow = Google::APIClient::InstalledAppFlow.new(\n      client_id: client_secrets.client_id,\n      client_secret: client_secrets.client_secret,\n      scope: %w(\n        https://www.googleapis.com/auth/drive\n        https://docs.google.com/feeds/\n        https://docs.googleusercontent.com/\n        https://spreadsheets.google.com/feeds/\n      ),\n    )\n\n    client.authorization = flow.authorize\n    storage.write_credentials(client.authorization)\n  else\n    client.authorization = storage.authorization\n  end\n\n  return client\nend\n```\n"}