{"context": "\n\n\u6982\u8981\nruby\u3067\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u4e00\u901a\u308a\u66f8\u3044\u3066\u3044\u304f\u3002\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u4e0b\u8a18\nhttps://github.com/colorbox/designpattern\n\n\nIterator\nIterator\u306f\u96c6\u5408\u3092\u6570\u3048\u4e0a\u3052\u308b\u51e6\u7406\u3092\u5171\u901a\u5316\u3059\u308b\u3053\u3068\u3067\u3001\u96c6\u5408\u3092\u6271\u3044\u3084\u3059\u304f\u3059\u308b\u3002\n\u307e\u305f\u3001\u96c6\u5408\u306e\u60c5\u5831\u3092\u96a0\u853d\u3057\u3059\u308b\u3053\u3068\u3067\u3001\u30ed\u30b8\u30c3\u30af\u306e\u5909\u66f4\u3092\u884c\u3044\u3084\u3059\u304f\u3059\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\niterator.rb\nclass Iterator\n\n  def initialize(array)\n    @array = array\n    @index = 0\n  end\n\n  def has_next\n    # compare with index\n    return (@index + 1) <= @array.count\n  end\n\n  def next\n    value = @array[@index]\n    @index = @index + 1\n    value\n  end\n\nend\n\n\n\nmain.rb\nrequire_relative 'iterator'\n\niterator = Iterator.new(%w(hoge huga piyo))\n\nwhile iterator.has_next\n  puts(iterator.next)\nend\n\n\n\n\nAdaptor\n\u65e2\u5b58\u306e\u30af\u30e9\u30b9\u306e\u51fa\u529b\u3084\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5fc5\u8981\u306a\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308b\u3002\n\u5b9f\u73fe\u65b9\u6cd5\u306f\u7d99\u627f\u306b\u3088\u308b\u3082\u306e\u3068\u4ee5\u4e0a\u306b\u3088\u308b\u3082\u306e\u306e\u3001\u5927\u304d\u304f\u4e8c\u901a\u308a\u5b58\u5728\u3059\u308b\u3002\n\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u65e2\u306b\u30c6\u30b9\u30c8\u3055\u308c\u305f\u30af\u30e9\u30b9\u3092\u305d\u306e\u307e\u307e\u7528\u3044\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u5b89\u5168\u6027\u304c\u62c5\u4fdd\u3055\u308c\u308b\u3002\n\n\u7d99\u627f\u306b\u3088\u308b\u5b9f\u73fe\n\u65e2\u5b58\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u308c\u3092\u30a2\u30c0\u30d7\u30bf\u3068\u3057\u3066\u7528\u3044\u308b\u65b9\u6cd5\u3002\n\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u65b0\u3057\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u8a18\u8ff0\u3057\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u901a\u3057\u3066\u30a2\u30c0\u30d7\u30bf\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\n\u59d4\u8b72\u306b\u3088\u308b\u5b9f\u73fe\n\u65e2\u5b58\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30a2\u30c0\u30d7\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4fdd\u6301\u3055\u305b\u308b\u65b9\u6cd5\u3002\n\u30a2\u30c0\u30d7\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u5185\u304b\u3089\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u65e2\u5b58\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u30a2\u30c0\u30d7\u30bf\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\n\u7d99\u627f\u3068\u59d4\u8b72\u306b\u3064\u3044\u3066\n\u500b\u4eba\u7684\u306a\u6240\u611f\u3067\u3059\u304c\u3001\u65e2\u5b58\u30af\u30e9\u30b9\u3092\u305d\u306e\u307e\u307e\u6d41\u7528\u3057\u3066\u5b89\u5168\u6027\u3092\u62c5\u4fdd\u3059\u308b\u3068\u3044\u3046\u5074\u9762\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u59d4\u8b72\u306b\u3088\u308b\u5b9f\u73fe\u3092\u884c\u3046\u307b\u3046\u304c\u7121\u96e3\u306b\u601d\u3048\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\n\nadaptor\n\nclass Adaptee\n  def initialize\n  end\n\n  def hoge\n    \"hoge\"\n  end\n\nend\n\nclass Adaptor\n  def initialize\n    @adaptee = Adaptee.new()\n  end\n\n  def hoge\n    \"<H1>\" + @adaptee.hoge + \"</H1>\"\n  end\n\n\nend\n\n\n\nmain\nrequire_relative 'adaptor'\nadaptor = Adaptor.new()\nputs adaptor.hoge\n\n\n\n\nTemplate Method\n\u51e6\u7406\u306e\u62bd\u8c61\u5316\u3092\u884c\u3046\u3002\n\u51e6\u7406\u306e\u5927\u67a0\u3092\u57fa\u5e95\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3057\u3001\u5177\u4f53\u7684\u306a\u51e6\u7406\u3092\u5404\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u8a18\u8f09\u3059\u308b\u3002\n\u4e8b\u524d\u306b\u51e6\u7406\u306e\u5927\u67a0\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n\u5927\u67a0\u306e\u51e6\u7406\u3092\u57fa\u5e95\u30af\u30e9\u30b9\u3067\u8a18\u8ff0\u3001\u305d\u306e\u969b\u4f7f\u7528\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u308b\u4e8b\u304c\u524d\u63d0\u3068\u306a\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\ntemplate_method\n\nclass TemplateMethod\n\n  def initialize\n\n  end\n\n  def hoge\n    hoge1\n    print(\"\\n\")\n    hoge2\n    print(\"\\n\")\n    hoge3\n    print(\"\\n\")\n  end\n\n  def hoge1\n  end\n\n  def hoge2\n  end\n\n  def hoge3\n  end\n\nend\n\nclass TemplateMethodSub1 < TemplateMethod\n  def hoge1\n    print(\"--hoge1--\")\n  end\n\n  def hoge2\n    print(\"--hoge2--\")\n  end\n\n  def hoge3\n    print(\"--hoge3--\")\n  end\n\nend\n\nclass TemplateMethodSub2 < TemplateMethod\n  def hoge1\n    print(\"**hoge1**\")\n  end\n\n  def hoge2\n    print(\"**hoge2**\")\n  end\n\n  def hoge3\n    print(\"**hoge3**\")\n  end\n\nend\n\ntm = TemplateMethod.new()\ntm.hoge\n\n\ntm1 = TemplateMethodSub1.new()\ntm1.hoge\n\ntm2 = TemplateMethodSub2.new()\ntm2.hoge\n\n\n\n\nFactory Method\n\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u3092\u884c\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u3067\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u306e\u524d\u51e6\u7406\u3084\u5f8c\u51e6\u7406\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3002\nFactory \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u90e8\u5206\u306fTemplate Method\u306e\u5fdc\u7528\u3067\u3082\u3042\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\nfactory_method\n\n\nclass Product\n\n  def initialize\n  end\n\nend\n\nclass ProductFactory\n\n  def initialize\n  end\n\n  def create_product\n    pre_create\n    product = create\n    post_create\n    return product\n  end\n\nend\n\nclass ConcreteProductA < Product\nend\n\nclass ConcreteProductAFactory < ProductFactory\n\n  def pre_create\n    print \"pre A create\\n\"\n  end\n\n  def create\n    print \"A create\\n\"\n    return ConcreteProductA.new\n  end\n\n  def post_create\n    print \"post A create\\n\"\n  end\nend\n\nfactory = ConcreteProductAFactory.new\n\nfactory.create_product\n\n\n\n\n\nSingleton\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4e00\u3064\u3057\u304b\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092private\u306b\u3057\u3066\u304a\u304d\u3001\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u552f\u4e00\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3002\n\u305d\u306e\u552f\u4e00\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4e00\u3064\u3057\u304b\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u3002\n\u4f46\u3057\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u7684\u306a\u6271\u308f\u308c\u65b9\u3092\u3059\u308b\u305f\u3081\u3001\u5426\u5b9a\u7684\u306b\u898b\u3089\u308c\u304c\u3061\u3002\n\n\u30bd\u30fc\u30b9\n\nsingleton\n\nclass Singleton\n\n  @@singleton = self.new\n\n  def self.get_singleton\n    return @@singleton\n  end\n\n  private\n  def initialize\n  end\n\nend\n\nprint(Singleton.get_singleton)\nprint(\"\\n\")\nprint(Singleton.get_singleton)\nprint(\"\\n\")\nprint(Singleton.get_singleton)\nprint(\"\\n\")\n\n\n\n\n\nPrototype\n\u751f\u6210\u304c\u8907\u96d1\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30b3\u30d4\u30fc\u3057\u3066\u521d\u671f\u5316\u3059\u308b\u624b\u6cd5\u3002\nRuby\u3060\u3068clone\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u305f\u3081\u305d\u3082\u305d\u3082\u30d1\u30bf\u30fc\u30f3\u3068\u3057\u3066\u81ea\u5206\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u304b\u3082\u3002\n\n\u30bd\u30fc\u30b9\n\nprototype\nclass Prototype\n\n  attr_accessor :hoge\n\n  @hoge = \"\"\n\n  def initialize(str)\n    @hoge = str\n  end\n\nend\n\npro = Prototype.new(\"hugahuga\")\nprint pro.hoge\nprint pro\n\nprint(\"\\n\")\npro2 = pro.clone\nprint pro2.hoge\nprint pro2\n\n\n\n\n\nBuilder\n\u8907\u96d1\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u3092\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8(Director)\u306b\u307e\u304b\u305b\u308b\u3002\n\u307e\u305f\u3001\u751f\u6210\u3092\u62c5\u5f53\u3059\u308bDirector\u30af\u30e9\u30b9\u306fBuilder\u30af\u30e9\u30b9\u306e\u516c\u958b\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u3092\u884c\u3046\u3002\n\u751f\u6210\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u5897\u3084\u3059\u6642\u306f\u3001Builer\u30af\u30e9\u30b9\u3092\u5897\u3084\u3059\u3053\u3068\u3067\u5bfe\u5fdc\u3059\u308b\u3002\n\u3053\u306e\u6642\u3001Director\u3068Builder\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u95a2\u4fc2\u306fTemplate Method\u3068\u540c\u69d8\u306b\u306a\u308b\u3002\n\nBuilder\u3068Template Method\nBuilder\u30d1\u30bf\u30fc\u30f3\u3068Template Method\u306e\u76f8\u9055\u70b9\u306f\u3001\u51e6\u7406\u306e\u6d41\u308c\u3092\u628a\u63e1\u3057\u3066\u3044\u308b\u306e\u304c\u3069\u306e\u30af\u30e9\u30b9\u304b\u3001\u3068\u3044\u3046\u70b9\u306b\u3042\u308b\u3002\nTemplate Method\u30d1\u30bf\u30fc\u30f3\u306e\u5834\u5408\u306f\u3001\u51e6\u7406\u306e\u6d41\u308c\u3092\u628a\u63e1\u3057\u3066\u3044\u308b\u306e\u306f\u57fa\u5e95\u30af\u30e9\u30b9\u3060\u304c\u3001Builder\u306e\u5834\u5408\u306fDirector\u30af\u30e9\u30b9\u3068\u306a\u308b\u3002\n\u53c2\u8003:\nTemplateMEthod\u3068Builder\u306e\u9055\u3044\u306b\u3064\u3044\u3066\nhttp://hamasyou.com/blog/2004/06/09/builder/\n\n\u30bd\u30fc\u30b9\n\nbuilder.rb\n\nclass Director\n\n  def initialize\n  end\n\n  def construct(builder)\n    str = \"hogehoge\"\n    str = builder.pre_operation(str)\n    str = builder.operation(str)\n    str = builder.post_operation(str)\n    return str\n  end\n\nend\n\nclass LineBuilder\n  def initialize\n  end\n\n  def pre_operation(str)\n    \"---\" + str\n  end\n\n  def operation(str)\n    \"---\" + str + \"---\"\n  end\n\n  def post_operation(str)\n    str + \"---\"\n\n  end\n\nend\n\nclass BraceBuilder\n  def initialize\n  end\n\n  def pre_operation(str)\n    \"{\" + str\n\n  end\n\n  def operation(str)\n    \"(\" + str + \")\"\n  end\n\n  def post_operation(str)\n    str + \"}\"\n  end\n\nend\n\nb_builder = BraceBuilder.new\nl_builder = LineBuilder.new\n\nprint Director.new.construct(b_builder)\nprint \"\\n\"\nprint Director.new.construct(l_builder)\n\n\n\n\n\nAbstract Factory\n\u62bd\u8c61\u5316\u3055\u308c\u305f\u30d5\u30a1\u30af\u30c8\u30ea\u3002\nFactory\u3068Template Method\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30d1\u30bf\u30fc\u30f3\u3002\n\n\u30bd\u30fc\u30b9\n\nabstract_factory.rb\nclass DinnaerFactory\n  def initialize\n  end\n\n  def createDinner\n    return [createAppetizer,createMain]\n  end\n\n  def createMain\n  end\n\n  def createAppetizer\n  end\nend\n\nclass Soup\n  def initialize\n  end\nend\n\nclass Rice\n  def initialize\n  end\nend\n\nclass Salad\n  def initialize\n  end\nend\n\nclass Pizza\n  def initialize\n  end\nend\n\nclass JapaneseFactory < DinnaerFactory\n  def createMain\n    Rice.new\n  end\n\n  def createAppetizer\n    Soup.new\n  end\nend\n\nclass ItalyFactory < DinnaerFactory\n  def createMain\n    Pizza.new\n  end\n\n  def createAppetizer\n    Salad.new\n  end\nend\n\njapanese_f = JapaneseFactory.new\nprint japanese_f.createDinner\nprint \"\\n\"\n\nitaly_f = ItalyFactory.new\nprint italy_f.createDinner\n\n\n\u53c2\u8003\nhttp://futurismo.biz/archives/2805\n\n\nBridge\n\u30af\u30e9\u30b9\u306b\u304a\u3051\u308b\u300c\u5b9f\u88c5\u300d\u3068\u300c\u6a5f\u80fd\u300d\u3092\u5206\u5272\u3059\u308b\u3002\n\u30af\u30e9\u30b9\u3092\u3001\u81ea\u5206\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u3067\u5b9f\u73fe\u53ef\u80fd\u306a\u300c\u6a5f\u80fd\u300d\u3068\u3001\u305d\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u8ff0\u3057\u305f\u300c\u5b9f\u88c5\u300d\u3068\u306b\u5206\u5272\u3059\u308b\u3002\n\u300c\u5b9f\u88c5\u300d\u306f\u30af\u30e9\u30b9\u5185\u306b\u59d4\u8b72\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u4fdd\u6301\u3057\u3066\u304a\u304f\u3002\n\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u3067\u6a5f\u80fd\u3068\u5b9f\u88c5\u3092\u5206\u96e2\u3057\u3001\u5bb9\u6613\u306b\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u53ef\u80fd\u3002\nTemplate Method\u306e\u5fdc\u7528\u3068\u3082\u53d6\u308c\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\nbridge.rb\nclass OutputImpleHoge\n  def initialize\n  end\n  def output\n    \"hoge\"\n  end\nend\n\nclass OutputImpleOptional\n  @option = \"\"\n  def initialize(str)\n    @option = str\n  end\n  def output\n    @option\n  end\nend\n\nclass Output\n\n  attr_accessor :impl\n  @impl = nil\n\n  def initialize(impl)\n    @impl = impl\n  end\n\n  def output\n    @impl.output\n  end\n\n  def multiple\n    [@impl.output,@impl.output,@impl.output]\n  end\n\nend\n\nop = Output.new(OutputImpleHoge.new)\nprint op.output\nprint\"\\n\"\nprint op.multiple\nprint\"\\n\"\n\nopo = Output.new(OutputImpleOptional.new(\"piyo\"))\nprint opo.output\nprint\"\\n\"\nprint opo.multiple\nprint\"\\n\"\n\n\n\n\nStrategy\n\u51e6\u7406\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\u300c\u51e6\u7406\u300d\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u5207\u308a\u51fa\u3059\u3053\u3068\u3067\u3001\u305d\u306e\u5207\u66ff\u3092\u5bb9\u6613\u306b\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u4f8b\u3048\u3070\u3001\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b2\u30fc\u30e0\u306e\u6575\u306e\u5f3e\u30d1\u30bf\u30fc\u30f3\u3084\u3001\u6575\u306e\u79fb\u52d5\u30d1\u30bf\u30fc\u30f3\u306e\u5207\u308a\u66ff\u3048\u306b\u4f7f\u3048\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\nstrategy.rb\nclass Enemy\n\n  attr_accessor :move_pattern, :x, :y\n\n  def initialize(move_pattern)\n    @move_pattern = move_pattern\n    @x = 0\n    @y = 0\n  end\n\n  def move\n    @move_pattern.run(self)\n  end\n\nend\n\nclass SideStraghtPattern\n  def initialize\n  end\n\n  def run(enemy)\n    enemy.x = enemy.x+1\n  end\nend\n\nclass StraightPattern\n  def initialize\n  end\n\n  def run(enemy)\n    enemy.y = enemy.y+1\n  end\nend\n\nenemy = Enemy.new(StraightPattern.new)\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\nenemy.move\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\nenemy.move\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\n\nenemy = Enemy.new(SideStraghtPattern.new)\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\nenemy.move\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\nenemy.move\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\n\n\n\n\nComposite\n\u5165\u308c\u5b50\u3084\u6728\u306e\u3088\u3046\u306a\u518d\u5e30\u69cb\u9020\u3092\u5b9f\u73fe\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u679d\u8449\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3001\u518d\u5e30\u69cb\u9020\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\ncomposite.rb\nclass Entry\n  def initialize(name)\n    @name = name\n  end\n  def add\n  end\n  def prints\n    print @name + \"\\n\"\n  end\nend\n\nclass CompositeFile < Entry\nend\n\nclass Directory < Entry\n  def initialize(name)\n    super(name)\n    @entries = []\n  end\n  def add(entry)\n    @entries.push(entry)\n  end\n\n  def prints\n    super\n    @entries.each do |entry|\n      entry.prints\n    end\n  end\n\nend\n\ndir1 = Directory.new(\"dir1\")\ndir1.add(CompositeFile.new(\"1\"))\ndir1.add(CompositeFile.new(\"2\"))\ndir1.add(CompositeFile.new(\"3\"))\n\ndir1.prints\n\n\n\n\n\nDecorator\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u6301\u3057\u3066\u304a\u304d\u3001\u305d\u306e\u51e6\u7406\u306b\u6a5f\u80fd\u8ffd\u52a0\u3092\u884c\u3046\u3002\n\u3053\u306e\u69cb\u9020\u304c\u968e\u5c64\u69cb\u9020\u306b\u306a\u308b\u3088\u3046\u306a\u5834\u5408\u306e\u30d1\u30bf\u30fc\u30f3\u3002\n\u5358\u306a\u308bwrapper\u3092\u968e\u5c64\u7684\u306b\u3057\u305f\u30d1\u30bf\u30fc\u30f3\u3068\u3082\u8a00\u3048\u308b\u3002\n\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u4fdd\u6301\u3057\u3066\u968e\u5c64\u69cb\u9020\u3092\u5b9f\u73fe\u3059\u308b\u3068\u3044\u3046\u70b9\u3067Composite\u30d1\u30bf\u30fc\u30f3\u3068\u540c\u3058\u3002\nComposite\u30d1\u30bf\u30fc\u30f3\u3092\u5185\u5305\u3057\u305f\u30d1\u30bf\u30fc\u30f3\u3068\u3082\u8a00\u3048\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\ndecorator.rb\nclass BaseOutputer\n\n  def initialize(str)\n    @str = str\n  end\n\n  def run\n    return @str\n  end\n\nend\n\nclass Decorator < BaseOutputer\n  def initialize(outputer)\n    @outputer = outputer\n  end\n\nend\nclass LineDecorator < Decorator\n  def run\n    return \"|\" + @outputer.run + \"|\"\n  end\nend\n\nclass CurlyBraceDecorator < Decorator\n  def run\n    return \"{\" + @outputer.run + \"}\"\n  end\nend\n\nld = LineDecorator.new(BaseOutputer.new(\"hoge\"))\nprint ld.run + \"\\n\"\ncd = CurlyBraceDecorator.new(ld)\nprint cd.run\n\n\n\n\nVisitor\n\u51e6\u7406\u3068\u69cb\u9020\u3092\u5206\u5272\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u51e6\u7406\u30af\u30e9\u30b9\u3068\u69cb\u9020\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3002\n\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u51e6\u7406\u306b\u5bfe\u3057\u3066\u958b\u3044\u3066\u304a\u308a\u3001\u69cb\u9020\u306b\u5bfe\u3057\u3066\u9589\u3058\u305f\u5b9f\u88c5\u3068\u306a\u308b\u3002\n\u51e6\u7406\u306e\u8ffd\u52a0\u306f\u697d\u3060\u304c\u3001\u69cb\u9020\u3092\u4fee\u6b63\u3059\u308b\u3068\u3001\u305d\u308c\u306b\u4ed8\u968f\u3057\u3066\u5168\u3066\u306e\u51e6\u7406\u30af\u30e9\u30b9\u3092\u4fee\u6b63\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u304f\u306a\u308b\u305f\u3081\u3001\u624b\u9593\u304c\u5927\u304d\u3044\u3002\n\u53c2\u8003\nhttp://objectclub.jp/community/memorial/homepage3.nifty.com/masarl/article/dp-ocp-2.html\n\n\u30bd\u30fc\u30b9\n\nvisitor.rb\nclass Entry\n  def initialize(name)\n    @name = name\n  end\n  def add\n  end\n  def prints\n    @name\n  end\nend\n\nclass CompositeFile < Entry\n  def accept(visitor)\n    visitor.visit(self)\n  end\nend\n\nclass Directory < Entry\n  def initialize(name)\n    super(name)\n    @entries = []\n  end\n  def add(entry)\n    @entries.push(entry)\n  end\n\n  def prints\n    @name\n  end\n\n  def members\n    @entries\n  end\n\n  def accept(visitor)\n    visitor.visit(self)\n  end\n\nend\n\nclass Visitor\n  def initialize\n  end\n  def visit(entry)\n    if entry.class.to_s ==\"Directory\"\n      visit_directory(entry)\n    else\n      visit_file(entry)\n    end\n  end\nend\n\nclass UpcaseVisitor < Visitor\n  def visit_file(entry)\n    print entry.prints.upcase + \"\\n\"\n  end\n  def visit_directory(entry)\n    print entry.prints.upcase + \"\\n\"\n    entry.members.each do |member|\n      member.accept self\n    end\n  end\nend\n\nclass DowncaseVisitor < Visitor\n  def visit_file(entry)\n    print entry.prints.downcase + \"\\n\"\n  end\n  def visit_directory(entry)\n    print entry.prints.downcase + \"\\n\"\n    entry.members.each do |member|\n      member.accept self\n    end\n  end\nend\n\ndir1 = Directory.new(\"dir1\")\ndir1.add(CompositeFile.new(\"a1\"))\ndir1.add(CompositeFile.new(\"b2\"))\ndir1.add(CompositeFile.new(\"C3\"))\n\nup_visitor = UpcaseVisitor.new\ndir1.accept up_visitor\n\ndown_visitor = DowncaseVisitor.new\ndir1.accept down_visitor\n\n\n\n\nChain of Responsibility\n\u8cac\u4efb\u306e\u305f\u3089\u3044\u56de\u3057\u3002\n\u7279\u5b9a\u306e\u51e6\u7406\u304c\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u884c\u304d\u7740\u304f\u307e\u3067\u305d\u306e\u51e6\u7406\u3092\u305f\u3089\u3044\u56de\u3057\u306b\u3059\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\nchain_of_responsibility\nclass Problem\n  attr_accessor :difficulty\n  def initialize(difficulty)\n    @difficulty = difficulty\n  end\nend\n\nclass Resolver\n  attr_accessor :next\n  def initialize\n    @next = nil\n  end\nend\n\nclass OddResolver < Resolver\n  def resolve(problem)\n    if problem.difficulty%2==1\n      print(\"resolved by odd\\n\")\n      true\n    else\n      print(\"odd cannot resolve\\n\")\n      return false unless @next\n      @next.resolve(problem)\n    end\n  end\nend\n\nclass WeakResolver < Resolver\n  def resolve(problem)\n    if problem.difficulty < 10\n      print(\"resolved by weak\\n\")\n      true\n    else\n      print(\"weak cannot resolve\\n\")\n      return false unless @next\n      @next.resolve(problem)\n    end\n  end\nend\n\nclass StrongResolver < Resolver\n  def resolve(problem)\n    if problem.difficulty < 100\n      print(\"resolved by strong\\n\")\n      true\n    else\n      print(\"strong cannot resolve\\n\")\n      return false unless @next\n      @next.resolve(problem)\n    end\n  end\nend\n\n\nodd_r = OddResolver.new\nwr = WeakResolver.new\nsr = StrongResolver.new\n\nodd_r.next = wr\nwr.next = sr\n\npro1 = Problem.new(11)\nodd_r.resolve(pro1)\nprint\"---\\n\"\npro2 = Problem.new(8)\nodd_r.resolve(pro2)\nprint\"---\\n\"\npro3 = Problem.new(100)\nodd_r.resolve(pro3)\nprint\"---\\n\"\n\n\n\n\n\nFacade\n\u30af\u30e9\u30b9\u306eAPI\u3092\u5236\u9650\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001\u547c\u3073\u51fa\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5c11\u306a\u304f\u3059\u308b\u3053\u3068\u3067\u3001\u547c\u3073\u51fa\u3057\u3084\u3059\u304f\u3059\u308b\u3002\n\u4e00\u822c\u7684\u306a\u30ab\u30d7\u30bb\u30eb\u5316\u3001\u60c5\u5831\u96a0\u853d\u3068\u3082\u8a00\u3048\u308b\u3002\n\n\nMediator\n\u591a\u304f\u306e\u8981\u7d20\u304c\u3042\u308b\u969b\u306e\u3001\u3054\u610f\u898b\u5f79\u3068\u3057\u3066\u6a5f\u80fd\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\u3002\n\u8907\u6570\u306e\u30af\u30e9\u30b9\u304c\u76f8\u4e92\u306b\u9023\u52d5\u3057\u3066\u52d5\u304f\u3088\u3046\u306a\u5834\u5408\u3001\u4e00\u62ec\u3067\u7ba1\u7406\u53ca\u3073\u51e6\u7406\u3092\u884c\u3046\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4e2d\u5fc3\u306b\u52d5\u4f5c\u3092\u304a\u3053\u306a\u308f\u305b\u308b\u3002\n\u500b\u3005\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3084\u308a\u53d6\u308a\u3092\u884c\u3046\u3068\u3001\u30ab\u30d7\u30bb\u30eb\u5316\u304c\u58ca\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3067\u3042\u308b\u3002\niOS\u306b\u304a\u3051\u308bUIViewController\u306a\u3069\u304c\u3053\u308c\u306b\u3042\u305f\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\nmediator.rb\n\nclass PartsManager\n  attr_accessor :door, :switch\n  def collegue_changed\n    return if (@switch.on && @door.is_open)||(!@switch.on && !@door.is_open)\n    if @switch.on\n      @door.open\n    else\n      @door.close if @door.is_open\n    end\n  end\nend\n\nclass Part\n  attr_accessor :mediator\n  def initialize(mediator)\n    @mediator = mediator\n  end\nend\n\nclass Door < Part\n  attr_accessor :is_open\n  def initialize(mediator)\n    super(mediator)\n    @is_open = false\n  end\n  def open\n    print \"\u30c9\u30a2\u304c\u7a7a\u3044\u305f\\n\"\n    @is_open = true\n    @mediator.collegue_changed\n  end\nend\n\nclass Switch < Part\n  attr_accessor :on\n  def initialize(mediator)\n    super(mediator)\n    @on = false\n  end\n  def push\n    print \"\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\\n\"\n    @on = true\n    @mediator.collegue_changed\n  end\nend\n\npm = PartsManager.new\n\ndoor = Door.new(pm)\nswitch = Switch.new(pm)\n\npm.door = door\npm.switch = switch\n\nprint pm.door\nprint pm.switch\n\n\nswitch.push\n\n\n\n\n\nObserver\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u76e3\u8996\u3092\u884c\u3046\u30d1\u30bf\u30fc\u30f3\u3002\n\u76e3\u8996\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u5316\u304c\u767a\u751f\u3057\u305f\u6642\u3001\u305d\u306e\u5909\u5316\u3092\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u901a\u77e5\u3055\u305b\u305f\u3044\u6642\u306b\u4f7f\u7528\u3059\u308b\u3002\nGUI\u306a\u3069\u306f\u305d\u306e\u5178\u578b\u4f8b\u3002\nRuby\u306b\u306f\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306eObservable\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\nobserver.rb\nclass NumberGenerator\n\n  attr_accessor :observer, :number\n  def initialize(observer)\n    @observer = observer\n    @number = 0\n  end\n  def update\n    observer.notify(self)\n  end\n  def execute\n    @number = Random.new.rand(20)\n    update\n  end\nend\n\nclass NumberObserver\n  def notify(generator)\n    print(generator.number)\n  end\nend\n\no = NumberObserver.new\ng = NumberGenerator.new(o)\n\n(1..100).to_a.each do\n  g.execute\n  print(\",\")\nend\n\n\n\n\nMemento\n\u72b6\u614b\u3092\u4fdd\u5b58\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u7279\u5b9a\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u304a\u3051\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u72b6\u614b\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304d\u3001\u305d\u308c\u3092\u5fa9\u5143\u53ef\u80fd\u3068\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u5fa9\u5143\u53ef\u80fd\u3068\u3044\u3046\u70b9\u304c\u3001\u5358\u590f\u5c65\u6b74\u3068\u306f\u7570\u306a\u308b\u3002\n\u307e\u305f\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u95a2\u9023\u3057\u3066\u3001\u300c\u72ed\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u300d\u300c\u5e83\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u300d\u3068\u3044\u3046\u8003\u3048\u65b9\u304c\u5b58\u5728\u3059\u308b\u3002\n\n\u5e83\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u72ed\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\u3053\u306e\uff12\u3064\u306e\u5358\u8a9e\u306f\u3001\u5143\u3005GoF\u304c\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u306e\u307f\u88dc\u8db3\u7684\u306b\u7528\u3044\u3066\u3044\u308b\u7528\u8a9e\u3067\u3042\u308b\u3002\n\u72b6\u614b\u3092\u4fdd\u5b58\u3059\u308b\u969b\u306f\u3001\u4fdd\u5b58\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5168\u3066\u77e5\u3063\u3066\u304a\u304b\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u3002(wide interface)\n\u307e\u305f\u3001\u72b6\u614b\u4fdd\u5b58\u3092\u884c\u308f\u306a\u3044\u5916\u90e8\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u306f\u3001\u9069\u5207\u306b\u60c5\u5831\u96a0\u853d\u3092\u884c\u3046\u3002(narrow interface)\n\n\u30bd\u30fc\u30b9\n\nmemento.rb\nclass Memento\n  attr_accessor :money\n  def initialize(money)\n    @money = money\n  end\nend\n\nclass Gamer\n  attr_accessor :money\n  def initialize\n    @money = 0\n  end\n  def save\n    return Memento.new(money)\n  end\n  def load(memento)\n    @money = memento.money\n  end\nend\n\ng = Gamer.new\nprint(g.money)\nprint(\"\\n\")\ng.money = 200\nm = g.save\nprint(g.money)\nprint(\"\\n\")\ng.money = 19\nprint(g.money)\nprint(\"\\n\")\ng.load(m)\nprint(g.money)\nprint(\"\\n\")\n\n\n\n\nState\n\u72b6\u614b\u3092\u8868\u73fe\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u72b6\u614b\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u308c\u3089\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u3067\u72b6\u614b\u9077\u79fb\u306a\u3069\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\u6b21\u306b\u3069\u306e\u72b6\u614b\u306b\u9077\u79fb\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u304c\u5404\u72b6\u614b\u30af\u30e9\u30b9\u306e\u4e2d\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3002\n\u72b6\u614b\u6570\u304c\u591a\u304f\u306a\u308a\u3059\u304e\u308b\u3068\u72b6\u614b\u9077\u79fb\u56f3\u306a\u3069\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n\u5404\u72b6\u614b\u3067\u3084\u3089\u305b\u308b\u51e6\u7406\u304c\u5358\u7d14\u306a\u5834\u5408\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3059\u308b\u306e\u306f\u9006\u306b\u624b\u9593\u3068\u306a\u308b\u3002\n\u305d\u306e\u5834\u5408\u306f\u5358\u7d14\u306aenum\u3068\uff53\uff57\uff49\uff54\uff43\uff48\u3067\u826f\u3044\u3002\n\u5404\u72b6\u614b\u3067\u884c\u308f\u305b\u308b\u51e6\u7406\u304c\u7169\u96d1\u306a\u5834\u5408\u3001switch\u3067\u51e6\u7406\u3092\u3055\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u30b3\u30fc\u30c9\u304c\u975e\u5e38\u306b\u9577\u304f\u306a\u308b\u3002\n\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306e\u307f\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3059\u3079\u304d\u3060\u308d\u3046\u3002\n\n\u30bd\u30fc\u30b9\n\nstate.rb\n\nclass State\n  attr_accessor :count, :context\n  def initialize(context)\n    @count = 0\n    @context = context\n  end\nend\n\nclass RunState < State\n  def do_something\n    print\"running\\n\"\n    @count = @count+1\n    if @count > 3\n      @context.change_state(StopState.new(@context))\n    end\n  end\nend\n\nclass StopState < State\n  def do_something\n    print\"stoping\\n\"\n    @count = @count+1\n    if @count > 3\n      @context.change_state(RunState.new(@context))\n    end\n\n  end\nend\n\nclass Person\n  attr_accessor :state\n  def initialize\n  end\n  def set_state(state)\n    @state = state\n  end\n  def change_state(state)\n    @state = state\n  end\n  def do_something\n    @state.do_something\n  end\nend\n\np = Person.new\np.set_state(StopState.new(p))\n\n(1..10).each do\n  p.do_something\nend\n\n\n\n\n\nFlyweight\n\u30ea\u30bd\u30fc\u30b9\u306e\u4f7f\u3044\u56de\u3057\u3092\u884c\u3046\u305f\u3081\u306e\u30d1\u30bf\u30fc\u30f3\u3002\n\u3044\u3061\u3044\u3061\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3069\u304c\u8fd1\u3044\u3002\n\n\u30bd\u30fc\u30b9\n\nflyweight.rb\nclass Flyweight\n  attr_accessor :pool\n  def initialize\n    @pool = {}\n  end\n  def get_number(key)\n    if @pool[key]\n      print \"use cache #{key}\\n\"\n      return @pool[key]\n    end\n    print \"created #{key}\\n\"\n    @pool[key] = key\n    return @pool[key]\n  end\nend\n\nf = Flyweight.new\n\nf.get_number(1)\nf.get_number(1)\nf.get_number(2)\nf.get_number(2)\n\n\n\n\n\nProxy\n\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u306b\u304a\u3051\u308b\u4e2d\u9593\u5c64\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u4e2d\u9593\u5c64\u306b\u4ed8\u968f\u7684\u306a\u51e6\u7406\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u305d\u306e\u3082\u306e\u3068\u305d\u308c\u306b\u4ed8\u968f\u3059\u308b\u51e6\u7406\u3092\u5206\u96e2\u3067\u304d\u308b\u3002\n\n\u30bd\u30fc\u30b9\n\nproxy.rb\nclass RealObject\n  attr_accessor :secret_info\n  def initialize(secret_info)\n    @secret_info = secret_info\n  end\nend\n\nclass Proxy\n  attr_accessor :real_object\n  def initialize(real_object)\n    @real_object = real_object\n  end\n  def secret_info\n    print \"warning use secret_infoz\\n\"\n    return @real_object.secret_info\n  end\nend\n\n\n\np = Proxy.new(RealObject.new(\"secret\"))\n\nprint p.secret_info\n\n\n\n\nCommand\n\u547d\u4ee4\u3068\u305d\u308c\u306b\u7d10\u3065\u304f\u51e6\u7406\u3092\u30af\u30e9\u30b9\u3068\u3057\u3066\u5207\u308a\u51fa\u3059\u30d1\u30bf\u30fc\u30f3\n\n\u30bd\u30fc\u30b9\n\ncommand.rb\nclass Target\n  attr_accessor :value\n  def initialize(value)\n    @value = value\n  end\nend\n\nclass Command\n  def execute\n  end\nend\n\nclass PlusCommnad < Command\n  attr_accessor :target, :value\n  def initialize(target,value)\n    @target = target\n    @value = value\n  end\n  def execute\n    @target.value = @target.value + @value\n  end\nend\n\nclass Multicommand < Command\n  def initialize(target,value)\n    @target = target\n    @value = value\n  end\n  attr_accessor :target, :value\n  def execute\n    @target.value = @target.value * @value\n  end\nend\n\nclass CompositeCommand < Command\n  attr_accessor :commands\n  def initialize(commands)\n    @commands = commands\n  end\n  def add_command\n    @commands.push(command)\n  end\n  def execute\n    @commands.each do |command|\n      command.execute\n    end\n  end\n\nend\n\nt = Target.new(10)\ncc = CompositeCommand.new([PlusCommnad.new(t,1),Multicommand.new(t,2)])\nprint(t.value)\nprint\"\\n\"\ncc.execute\nprint(t.value)\nprint\"\\n\"\n\n\n\n\n\n\nInterpreter\n\u4e2d\u9593\u8a00\u8a9e\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306ep\u30bf\u30fc\u30f3\u3001\u4f7f\u3044\u6240\u306f\u9650\u3089\u308c\u308b\u305f\u3081\u5272\u611b\u3002\n\u53c2\u8003\nhttp://www.techscore.com/tech/DesignPattern/index.html/\nhttp://morizyun.github.io/blog/categories/design-pattern/\nhttp://www002.upp.so-net.ne.jp/ys_oota//mdp/index.htm\nhttp://www.blackwasp.co.uk/gofpatterns.aspx\n#### \u6982\u8981\nruby\u3067\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u4e00\u901a\u308a\u66f8\u3044\u3066\u3044\u304f\u3002\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u4e0b\u8a18\nhttps://github.com/colorbox/designpattern\n\n---\n\n\n#### Iterator\n\nIterator\u306f\u96c6\u5408\u3092\u6570\u3048\u4e0a\u3052\u308b\u51e6\u7406\u3092\u5171\u901a\u5316\u3059\u308b\u3053\u3068\u3067\u3001\u96c6\u5408\u3092\u6271\u3044\u3084\u3059\u304f\u3059\u308b\u3002\n\u307e\u305f\u3001\u96c6\u5408\u306e\u60c5\u5831\u3092\u96a0\u853d\u3057\u3059\u308b\u3053\u3068\u3067\u3001\u30ed\u30b8\u30c3\u30af\u306e\u5909\u66f4\u3092\u884c\u3044\u3084\u3059\u304f\u3059\u308b\u3002\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:iterator.rb\nclass Iterator\n\n  def initialize(array)\n    @array = array\n    @index = 0\n  end\n\n  def has_next\n    # compare with index\n    return (@index + 1) <= @array.count\n  end\n\n  def next\n    value = @array[@index]\n    @index = @index + 1\n    value\n  end\n\nend\n```\n\n\n```ruby:main.rb\nrequire_relative 'iterator'\n\niterator = Iterator.new(%w(hoge huga piyo))\n\nwhile iterator.has_next\n  puts(iterator.next)\nend\n```\n\n---\n\n#### Adaptor\n\n\u65e2\u5b58\u306e\u30af\u30e9\u30b9\u306e\u51fa\u529b\u3084\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5fc5\u8981\u306a\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308b\u3002\n\u5b9f\u73fe\u65b9\u6cd5\u306f\u7d99\u627f\u306b\u3088\u308b\u3082\u306e\u3068\u4ee5\u4e0a\u306b\u3088\u308b\u3082\u306e\u306e\u3001\u5927\u304d\u304f\u4e8c\u901a\u308a\u5b58\u5728\u3059\u308b\u3002\n\n\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u65e2\u306b\u30c6\u30b9\u30c8\u3055\u308c\u305f\u30af\u30e9\u30b9\u3092\u305d\u306e\u307e\u307e\u7528\u3044\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u5b89\u5168\u6027\u304c\u62c5\u4fdd\u3055\u308c\u308b\u3002\n\n##### \u7d99\u627f\u306b\u3088\u308b\u5b9f\u73fe\n\n\u65e2\u5b58\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u308c\u3092\u30a2\u30c0\u30d7\u30bf\u3068\u3057\u3066\u7528\u3044\u308b\u65b9\u6cd5\u3002\n\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u65b0\u3057\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u8a18\u8ff0\u3057\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u901a\u3057\u3066\u30a2\u30c0\u30d7\u30bf\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\n##### \u59d4\u8b72\u306b\u3088\u308b\u5b9f\u73fe\n\n\u65e2\u5b58\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30a2\u30c0\u30d7\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4fdd\u6301\u3055\u305b\u308b\u65b9\u6cd5\u3002\n\u30a2\u30c0\u30d7\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u5185\u304b\u3089\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u65e2\u5b58\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u30a2\u30c0\u30d7\u30bf\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\n\n##### \u7d99\u627f\u3068\u59d4\u8b72\u306b\u3064\u3044\u3066\n\n\u500b\u4eba\u7684\u306a\u6240\u611f\u3067\u3059\u304c\u3001\u65e2\u5b58\u30af\u30e9\u30b9\u3092\u305d\u306e\u307e\u307e\u6d41\u7528\u3057\u3066\u5b89\u5168\u6027\u3092\u62c5\u4fdd\u3059\u308b\u3068\u3044\u3046\u5074\u9762\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u59d4\u8b72\u306b\u3088\u308b\u5b9f\u73fe\u3092\u884c\u3046\u307b\u3046\u304c\u7121\u96e3\u306b\u601d\u3048\u307e\u3059\u3002\n\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:adaptor\n\nclass Adaptee\n  def initialize\n  end\n\n  def hoge\n    \"hoge\"\n  end\n\nend\n\nclass Adaptor\n  def initialize\n    @adaptee = Adaptee.new()\n  end\n\n  def hoge\n    \"<H1>\" + @adaptee.hoge + \"</H1>\"\n  end\n\n\nend\n```\n\n```ruby:main\nrequire_relative 'adaptor'\nadaptor = Adaptor.new()\nputs adaptor.hoge\n```\n\n---\n\n#### Template Method\n\n\u51e6\u7406\u306e\u62bd\u8c61\u5316\u3092\u884c\u3046\u3002\n\u51e6\u7406\u306e\u5927\u67a0\u3092\u57fa\u5e95\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3057\u3001\u5177\u4f53\u7684\u306a\u51e6\u7406\u3092\u5404\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u8a18\u8f09\u3059\u308b\u3002\n\n\u4e8b\u524d\u306b\u51e6\u7406\u306e\u5927\u67a0\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n\u5927\u67a0\u306e\u51e6\u7406\u3092\u57fa\u5e95\u30af\u30e9\u30b9\u3067\u8a18\u8ff0\u3001\u305d\u306e\u969b\u4f7f\u7528\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u308b\u4e8b\u304c\u524d\u63d0\u3068\u306a\u308b\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:template_method\n\nclass TemplateMethod\n\n  def initialize\n\n  end\n\n  def hoge\n    hoge1\n    print(\"\\n\")\n    hoge2\n    print(\"\\n\")\n    hoge3\n    print(\"\\n\")\n  end\n\n  def hoge1\n  end\n\n  def hoge2\n  end\n\n  def hoge3\n  end\n\nend\n\nclass TemplateMethodSub1 < TemplateMethod\n  def hoge1\n    print(\"--hoge1--\")\n  end\n\n  def hoge2\n    print(\"--hoge2--\")\n  end\n\n  def hoge3\n    print(\"--hoge3--\")\n  end\n\nend\n\nclass TemplateMethodSub2 < TemplateMethod\n  def hoge1\n    print(\"**hoge1**\")\n  end\n\n  def hoge2\n    print(\"**hoge2**\")\n  end\n\n  def hoge3\n    print(\"**hoge3**\")\n  end\n\nend\n\ntm = TemplateMethod.new()\ntm.hoge\n\n\ntm1 = TemplateMethodSub1.new()\ntm1.hoge\n\ntm2 = TemplateMethodSub2.new()\ntm2.hoge\n```\n\n\n---\n\n#### Factory Method\n\n\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u3092\u884c\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u3067\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u306e\u524d\u51e6\u7406\u3084\u5f8c\u51e6\u7406\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3002\nFactory \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u90e8\u5206\u306fTemplate Method\u306e\u5fdc\u7528\u3067\u3082\u3042\u308b\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:factory_method\n\n\nclass Product\n\n  def initialize\n  end\n\nend\n\nclass ProductFactory\n\n  def initialize\n  end\n\n  def create_product\n    pre_create\n    product = create\n    post_create\n    return product\n  end\n\nend\n\nclass ConcreteProductA < Product\nend\n\nclass ConcreteProductAFactory < ProductFactory\n\n  def pre_create\n    print \"pre A create\\n\"\n  end\n\n  def create\n    print \"A create\\n\"\n    return ConcreteProductA.new\n  end\n\n  def post_create\n    print \"post A create\\n\"\n  end\nend\n\nfactory = ConcreteProductAFactory.new\n\nfactory.create_product\n\n```\n\n---\n\n#### Singleton\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4e00\u3064\u3057\u304b\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092private\u306b\u3057\u3066\u304a\u304d\u3001\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u552f\u4e00\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3002\n\u305d\u306e\u552f\u4e00\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4e00\u3064\u3057\u304b\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u3002\n\u4f46\u3057\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u7684\u306a\u6271\u308f\u308c\u65b9\u3092\u3059\u308b\u305f\u3081\u3001\u5426\u5b9a\u7684\u306b\u898b\u3089\u308c\u304c\u3061\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:singleton\n\nclass Singleton\n\n  @@singleton = self.new\n\n  def self.get_singleton\n    return @@singleton\n  end\n\n  private\n  def initialize\n  end\n\nend\n\nprint(Singleton.get_singleton)\nprint(\"\\n\")\nprint(Singleton.get_singleton)\nprint(\"\\n\")\nprint(Singleton.get_singleton)\nprint(\"\\n\")\n\n```\n\n---\n\n#### Prototype\n\n\u751f\u6210\u304c\u8907\u96d1\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30b3\u30d4\u30fc\u3057\u3066\u521d\u671f\u5316\u3059\u308b\u624b\u6cd5\u3002\nRuby\u3060\u3068clone\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u305f\u3081\u305d\u3082\u305d\u3082\u30d1\u30bf\u30fc\u30f3\u3068\u3057\u3066\u81ea\u5206\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u304b\u3082\u3002\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:prototype\nclass Prototype\n\n  attr_accessor :hoge\n\n  @hoge = \"\"\n\n  def initialize(str)\n    @hoge = str\n  end\n\nend\n\npro = Prototype.new(\"hugahuga\")\nprint pro.hoge\nprint pro\n\nprint(\"\\n\")\npro2 = pro.clone\nprint pro2.hoge\nprint pro2\n\n```\n\n\n---\n\n#### Builder\n\n\u8907\u96d1\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u3092\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8(Director)\u306b\u307e\u304b\u305b\u308b\u3002\n\u307e\u305f\u3001\u751f\u6210\u3092\u62c5\u5f53\u3059\u308bDirector\u30af\u30e9\u30b9\u306fBuilder\u30af\u30e9\u30b9\u306e\u516c\u958b\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u3092\u884c\u3046\u3002\n\u751f\u6210\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u5897\u3084\u3059\u6642\u306f\u3001Builer\u30af\u30e9\u30b9\u3092\u5897\u3084\u3059\u3053\u3068\u3067\u5bfe\u5fdc\u3059\u308b\u3002\n\u3053\u306e\u6642\u3001Director\u3068Builder\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u95a2\u4fc2\u306fTemplate Method\u3068\u540c\u69d8\u306b\u306a\u308b\u3002\n\n##### Builder\u3068Template Method\nBuilder\u30d1\u30bf\u30fc\u30f3\u3068Template Method\u306e\u76f8\u9055\u70b9\u306f\u3001\u51e6\u7406\u306e\u6d41\u308c\u3092\u628a\u63e1\u3057\u3066\u3044\u308b\u306e\u304c\u3069\u306e\u30af\u30e9\u30b9\u304b\u3001\u3068\u3044\u3046\u70b9\u306b\u3042\u308b\u3002\nTemplate Method\u30d1\u30bf\u30fc\u30f3\u306e\u5834\u5408\u306f\u3001\u51e6\u7406\u306e\u6d41\u308c\u3092\u628a\u63e1\u3057\u3066\u3044\u308b\u306e\u306f\u57fa\u5e95\u30af\u30e9\u30b9\u3060\u304c\u3001Builder\u306e\u5834\u5408\u306fDirector\u30af\u30e9\u30b9\u3068\u306a\u308b\u3002\n\n\n\n\u53c2\u8003:\nTemplateMEthod\u3068Builder\u306e\u9055\u3044\u306b\u3064\u3044\u3066\nhttp://hamasyou.com/blog/2004/06/09/builder/\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:builder.rb\n\nclass Director\n\n  def initialize\n  end\n\n  def construct(builder)\n    str = \"hogehoge\"\n    str = builder.pre_operation(str)\n    str = builder.operation(str)\n    str = builder.post_operation(str)\n    return str\n  end\n\nend\n\nclass LineBuilder\n  def initialize\n  end\n\n  def pre_operation(str)\n    \"---\" + str\n  end\n\n  def operation(str)\n    \"---\" + str + \"---\"\n  end\n\n  def post_operation(str)\n    str + \"---\"\n\n  end\n\nend\n\nclass BraceBuilder\n  def initialize\n  end\n\n  def pre_operation(str)\n    \"{\" + str\n\n  end\n\n  def operation(str)\n    \"(\" + str + \")\"\n  end\n\n  def post_operation(str)\n    str + \"}\"\n  end\n\nend\n\nb_builder = BraceBuilder.new\nl_builder = LineBuilder.new\n\nprint Director.new.construct(b_builder)\nprint \"\\n\"\nprint Director.new.construct(l_builder)\n\n```\n\n\n---\n\n#### Abstract Factory\n\n\u62bd\u8c61\u5316\u3055\u308c\u305f\u30d5\u30a1\u30af\u30c8\u30ea\u3002\nFactory\u3068Template Method\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30d1\u30bf\u30fc\u30f3\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:abstract_factory.rb\nclass DinnaerFactory\n  def initialize\n  end\n\n  def createDinner\n    return [createAppetizer,createMain]\n  end\n\n  def createMain\n  end\n\n  def createAppetizer\n  end\nend\n\nclass Soup\n  def initialize\n  end\nend\n\nclass Rice\n  def initialize\n  end\nend\n\nclass Salad\n  def initialize\n  end\nend\n\nclass Pizza\n  def initialize\n  end\nend\n\nclass JapaneseFactory < DinnaerFactory\n  def createMain\n    Rice.new\n  end\n\n  def createAppetizer\n    Soup.new\n  end\nend\n\nclass ItalyFactory < DinnaerFactory\n  def createMain\n    Pizza.new\n  end\n\n  def createAppetizer\n    Salad.new\n  end\nend\n\njapanese_f = JapaneseFactory.new\nprint japanese_f.createDinner\nprint \"\\n\"\n\nitaly_f = ItalyFactory.new\nprint italy_f.createDinner\n```\n\n\u53c2\u8003\nhttp://futurismo.biz/archives/2805\n\n\n---\n\n#### Bridge\n\n\u30af\u30e9\u30b9\u306b\u304a\u3051\u308b\u300c\u5b9f\u88c5\u300d\u3068\u300c\u6a5f\u80fd\u300d\u3092\u5206\u5272\u3059\u308b\u3002\n\u30af\u30e9\u30b9\u3092\u3001\u81ea\u5206\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u3067\u5b9f\u73fe\u53ef\u80fd\u306a\u300c\u6a5f\u80fd\u300d\u3068\u3001\u305d\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u8ff0\u3057\u305f\u300c\u5b9f\u88c5\u300d\u3068\u306b\u5206\u5272\u3059\u308b\u3002\n\u300c\u5b9f\u88c5\u300d\u306f\u30af\u30e9\u30b9\u5185\u306b\u59d4\u8b72\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u4fdd\u6301\u3057\u3066\u304a\u304f\u3002\n\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u3067\u6a5f\u80fd\u3068\u5b9f\u88c5\u3092\u5206\u96e2\u3057\u3001\u5bb9\u6613\u306b\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u53ef\u80fd\u3002\nTemplate Method\u306e\u5fdc\u7528\u3068\u3082\u53d6\u308c\u308b\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:bridge.rb\nclass OutputImpleHoge\n  def initialize\n  end\n  def output\n    \"hoge\"\n  end\nend\n\nclass OutputImpleOptional\n  @option = \"\"\n  def initialize(str)\n    @option = str\n  end\n  def output\n    @option\n  end\nend\n\nclass Output\n\n  attr_accessor :impl\n  @impl = nil\n\n  def initialize(impl)\n    @impl = impl\n  end\n\n  def output\n    @impl.output\n  end\n\n  def multiple\n    [@impl.output,@impl.output,@impl.output]\n  end\n\nend\n\nop = Output.new(OutputImpleHoge.new)\nprint op.output\nprint\"\\n\"\nprint op.multiple\nprint\"\\n\"\n\nopo = Output.new(OutputImpleOptional.new(\"piyo\"))\nprint opo.output\nprint\"\\n\"\nprint opo.multiple\nprint\"\\n\"\n```\n\n---\n\n#### Strategy\n\n\u51e6\u7406\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\u300c\u51e6\u7406\u300d\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u5207\u308a\u51fa\u3059\u3053\u3068\u3067\u3001\u305d\u306e\u5207\u66ff\u3092\u5bb9\u6613\u306b\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u4f8b\u3048\u3070\u3001\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b2\u30fc\u30e0\u306e\u6575\u306e\u5f3e\u30d1\u30bf\u30fc\u30f3\u3084\u3001\u6575\u306e\u79fb\u52d5\u30d1\u30bf\u30fc\u30f3\u306e\u5207\u308a\u66ff\u3048\u306b\u4f7f\u3048\u308b\u3002\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:strategy.rb\nclass Enemy\n\n  attr_accessor :move_pattern, :x, :y\n\n  def initialize(move_pattern)\n    @move_pattern = move_pattern\n    @x = 0\n    @y = 0\n  end\n\n  def move\n    @move_pattern.run(self)\n  end\n\nend\n\nclass SideStraghtPattern\n  def initialize\n  end\n\n  def run(enemy)\n    enemy.x = enemy.x+1\n  end\nend\n\nclass StraightPattern\n  def initialize\n  end\n\n  def run(enemy)\n    enemy.y = enemy.y+1\n  end\nend\n\nenemy = Enemy.new(StraightPattern.new)\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\nenemy.move\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\nenemy.move\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\n\nenemy = Enemy.new(SideStraghtPattern.new)\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\nenemy.move\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\nenemy.move\nprint enemy.x.to_s + \",\" + enemy.y.to_s + \"\\n\"\n```\n\n---\n\n#### Composite\n\n\u5165\u308c\u5b50\u3084\u6728\u306e\u3088\u3046\u306a\u518d\u5e30\u69cb\u9020\u3092\u5b9f\u73fe\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u679d\u8449\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3001\u518d\u5e30\u69cb\u9020\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:composite.rb\nclass Entry\n  def initialize(name)\n    @name = name\n  end\n  def add\n  end\n  def prints\n    print @name + \"\\n\"\n  end\nend\n\nclass CompositeFile < Entry\nend\n\nclass Directory < Entry\n  def initialize(name)\n    super(name)\n    @entries = []\n  end\n  def add(entry)\n    @entries.push(entry)\n  end\n\n  def prints\n    super\n    @entries.each do |entry|\n      entry.prints\n    end\n  end\n\nend\n\ndir1 = Directory.new(\"dir1\")\ndir1.add(CompositeFile.new(\"1\"))\ndir1.add(CompositeFile.new(\"2\"))\ndir1.add(CompositeFile.new(\"3\"))\n\ndir1.prints\n\n```\n\n---\n\n#### Decorator\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u6301\u3057\u3066\u304a\u304d\u3001\u305d\u306e\u51e6\u7406\u306b\u6a5f\u80fd\u8ffd\u52a0\u3092\u884c\u3046\u3002\n\u3053\u306e\u69cb\u9020\u304c\u968e\u5c64\u69cb\u9020\u306b\u306a\u308b\u3088\u3046\u306a\u5834\u5408\u306e\u30d1\u30bf\u30fc\u30f3\u3002\n\u5358\u306a\u308bwrapper\u3092\u968e\u5c64\u7684\u306b\u3057\u305f\u30d1\u30bf\u30fc\u30f3\u3068\u3082\u8a00\u3048\u308b\u3002\n\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u4fdd\u6301\u3057\u3066\u968e\u5c64\u69cb\u9020\u3092\u5b9f\u73fe\u3059\u308b\u3068\u3044\u3046\u70b9\u3067Composite\u30d1\u30bf\u30fc\u30f3\u3068\u540c\u3058\u3002\nComposite\u30d1\u30bf\u30fc\u30f3\u3092\u5185\u5305\u3057\u305f\u30d1\u30bf\u30fc\u30f3\u3068\u3082\u8a00\u3048\u308b\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:decorator.rb\nclass BaseOutputer\n\n  def initialize(str)\n    @str = str\n  end\n\n  def run\n    return @str\n  end\n\nend\n\nclass Decorator < BaseOutputer\n  def initialize(outputer)\n    @outputer = outputer\n  end\n\nend\nclass LineDecorator < Decorator\n  def run\n    return \"|\" + @outputer.run + \"|\"\n  end\nend\n\nclass CurlyBraceDecorator < Decorator\n  def run\n    return \"{\" + @outputer.run + \"}\"\n  end\nend\n\nld = LineDecorator.new(BaseOutputer.new(\"hoge\"))\nprint ld.run + \"\\n\"\ncd = CurlyBraceDecorator.new(ld)\nprint cd.run\n```\n\n---\n\n#### Visitor\n\n\u51e6\u7406\u3068\u69cb\u9020\u3092\u5206\u5272\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u51e6\u7406\u30af\u30e9\u30b9\u3068\u69cb\u9020\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3002\n\n\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u51e6\u7406\u306b\u5bfe\u3057\u3066\u958b\u3044\u3066\u304a\u308a\u3001\u69cb\u9020\u306b\u5bfe\u3057\u3066\u9589\u3058\u305f\u5b9f\u88c5\u3068\u306a\u308b\u3002\n\u51e6\u7406\u306e\u8ffd\u52a0\u306f\u697d\u3060\u304c\u3001\u69cb\u9020\u3092\u4fee\u6b63\u3059\u308b\u3068\u3001\u305d\u308c\u306b\u4ed8\u968f\u3057\u3066\u5168\u3066\u306e\u51e6\u7406\u30af\u30e9\u30b9\u3092\u4fee\u6b63\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u304f\u306a\u308b\u305f\u3081\u3001\u624b\u9593\u304c\u5927\u304d\u3044\u3002\n\n\u53c2\u8003\nhttp://objectclub.jp/community/memorial/homepage3.nifty.com/masarl/article/dp-ocp-2.html\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:visitor.rb\nclass Entry\n  def initialize(name)\n    @name = name\n  end\n  def add\n  end\n  def prints\n    @name\n  end\nend\n\nclass CompositeFile < Entry\n  def accept(visitor)\n    visitor.visit(self)\n  end\nend\n\nclass Directory < Entry\n  def initialize(name)\n    super(name)\n    @entries = []\n  end\n  def add(entry)\n    @entries.push(entry)\n  end\n\n  def prints\n    @name\n  end\n\n  def members\n    @entries\n  end\n\n  def accept(visitor)\n    visitor.visit(self)\n  end\n\nend\n\nclass Visitor\n  def initialize\n  end\n  def visit(entry)\n    if entry.class.to_s ==\"Directory\"\n      visit_directory(entry)\n    else\n      visit_file(entry)\n    end\n  end\nend\n\nclass UpcaseVisitor < Visitor\n  def visit_file(entry)\n    print entry.prints.upcase + \"\\n\"\n  end\n  def visit_directory(entry)\n    print entry.prints.upcase + \"\\n\"\n    entry.members.each do |member|\n      member.accept self\n    end\n  end\nend\n\nclass DowncaseVisitor < Visitor\n  def visit_file(entry)\n    print entry.prints.downcase + \"\\n\"\n  end\n  def visit_directory(entry)\n    print entry.prints.downcase + \"\\n\"\n    entry.members.each do |member|\n      member.accept self\n    end\n  end\nend\n\ndir1 = Directory.new(\"dir1\")\ndir1.add(CompositeFile.new(\"a1\"))\ndir1.add(CompositeFile.new(\"b2\"))\ndir1.add(CompositeFile.new(\"C3\"))\n\nup_visitor = UpcaseVisitor.new\ndir1.accept up_visitor\n\ndown_visitor = DowncaseVisitor.new\ndir1.accept down_visitor\n```\n\n\n---\n\n#### Chain of Responsibility\n\n\u8cac\u4efb\u306e\u305f\u3089\u3044\u56de\u3057\u3002\n\u7279\u5b9a\u306e\u51e6\u7406\u304c\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u884c\u304d\u7740\u304f\u307e\u3067\u305d\u306e\u51e6\u7406\u3092\u305f\u3089\u3044\u56de\u3057\u306b\u3059\u308b\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:chain_of_responsibility\nclass Problem\n  attr_accessor :difficulty\n  def initialize(difficulty)\n    @difficulty = difficulty\n  end\nend\n\nclass Resolver\n  attr_accessor :next\n  def initialize\n    @next = nil\n  end\nend\n\nclass OddResolver < Resolver\n  def resolve(problem)\n    if problem.difficulty%2==1\n      print(\"resolved by odd\\n\")\n      true\n    else\n      print(\"odd cannot resolve\\n\")\n      return false unless @next\n      @next.resolve(problem)\n    end\n  end\nend\n\nclass WeakResolver < Resolver\n  def resolve(problem)\n    if problem.difficulty < 10\n      print(\"resolved by weak\\n\")\n      true\n    else\n      print(\"weak cannot resolve\\n\")\n      return false unless @next\n      @next.resolve(problem)\n    end\n  end\nend\n\nclass StrongResolver < Resolver\n  def resolve(problem)\n    if problem.difficulty < 100\n      print(\"resolved by strong\\n\")\n      true\n    else\n      print(\"strong cannot resolve\\n\")\n      return false unless @next\n      @next.resolve(problem)\n    end\n  end\nend\n\n\nodd_r = OddResolver.new\nwr = WeakResolver.new\nsr = StrongResolver.new\n\nodd_r.next = wr\nwr.next = sr\n\npro1 = Problem.new(11)\nodd_r.resolve(pro1)\nprint\"---\\n\"\npro2 = Problem.new(8)\nodd_r.resolve(pro2)\nprint\"---\\n\"\npro3 = Problem.new(100)\nodd_r.resolve(pro3)\nprint\"---\\n\"\n\n```\n\n\n---\n\n\n#### Facade\n\n\u30af\u30e9\u30b9\u306eAPI\u3092\u5236\u9650\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001\u547c\u3073\u51fa\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5c11\u306a\u304f\u3059\u308b\u3053\u3068\u3067\u3001\u547c\u3073\u51fa\u3057\u3084\u3059\u304f\u3059\u308b\u3002\n\u4e00\u822c\u7684\u306a\u30ab\u30d7\u30bb\u30eb\u5316\u3001\u60c5\u5831\u96a0\u853d\u3068\u3082\u8a00\u3048\u308b\u3002\n\n\n---\n\n#### Mediator\n\n\u591a\u304f\u306e\u8981\u7d20\u304c\u3042\u308b\u969b\u306e\u3001\u3054\u610f\u898b\u5f79\u3068\u3057\u3066\u6a5f\u80fd\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\u3002\n\u8907\u6570\u306e\u30af\u30e9\u30b9\u304c\u76f8\u4e92\u306b\u9023\u52d5\u3057\u3066\u52d5\u304f\u3088\u3046\u306a\u5834\u5408\u3001\u4e00\u62ec\u3067\u7ba1\u7406\u53ca\u3073\u51e6\u7406\u3092\u884c\u3046\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4e2d\u5fc3\u306b\u52d5\u4f5c\u3092\u304a\u3053\u306a\u308f\u305b\u308b\u3002\n\u500b\u3005\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3084\u308a\u53d6\u308a\u3092\u884c\u3046\u3068\u3001\u30ab\u30d7\u30bb\u30eb\u5316\u304c\u58ca\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3067\u3042\u308b\u3002\niOS\u306b\u304a\u3051\u308bUIViewController\u306a\u3069\u304c\u3053\u308c\u306b\u3042\u305f\u308b\u3002\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:mediator.rb\n\nclass PartsManager\n  attr_accessor :door, :switch\n  def collegue_changed\n    return if (@switch.on && @door.is_open)||(!@switch.on && !@door.is_open)\n    if @switch.on\n      @door.open\n    else\n      @door.close if @door.is_open\n    end\n  end\nend\n\nclass Part\n  attr_accessor :mediator\n  def initialize(mediator)\n    @mediator = mediator\n  end\nend\n\nclass Door < Part\n  attr_accessor :is_open\n  def initialize(mediator)\n    super(mediator)\n    @is_open = false\n  end\n  def open\n    print \"\u30c9\u30a2\u304c\u7a7a\u3044\u305f\\n\"\n    @is_open = true\n    @mediator.collegue_changed\n  end\nend\n\nclass Switch < Part\n  attr_accessor :on\n  def initialize(mediator)\n    super(mediator)\n    @on = false\n  end\n  def push\n    print \"\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\\n\"\n    @on = true\n    @mediator.collegue_changed\n  end\nend\n\npm = PartsManager.new\n\ndoor = Door.new(pm)\nswitch = Switch.new(pm)\n\npm.door = door\npm.switch = switch\n\nprint pm.door\nprint pm.switch\n\n\nswitch.push\n\n```\n\n\n---\n\n#### Observer\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u76e3\u8996\u3092\u884c\u3046\u30d1\u30bf\u30fc\u30f3\u3002\n\u76e3\u8996\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u5316\u304c\u767a\u751f\u3057\u305f\u6642\u3001\u305d\u306e\u5909\u5316\u3092\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u901a\u77e5\u3055\u305b\u305f\u3044\u6642\u306b\u4f7f\u7528\u3059\u308b\u3002\nGUI\u306a\u3069\u306f\u305d\u306e\u5178\u578b\u4f8b\u3002\nRuby\u306b\u306f\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306eObservable\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:observer.rb\nclass NumberGenerator\n\n  attr_accessor :observer, :number\n  def initialize(observer)\n    @observer = observer\n    @number = 0\n  end\n  def update\n    observer.notify(self)\n  end\n  def execute\n    @number = Random.new.rand(20)\n    update\n  end\nend\n\nclass NumberObserver\n  def notify(generator)\n    print(generator.number)\n  end\nend\n\no = NumberObserver.new\ng = NumberGenerator.new(o)\n\n(1..100).to_a.each do\n  g.execute\n  print(\",\")\nend\n```\n\n---\n\n#### Memento\n\n\n\u72b6\u614b\u3092\u4fdd\u5b58\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u7279\u5b9a\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u304a\u3051\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u72b6\u614b\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304d\u3001\u305d\u308c\u3092\u5fa9\u5143\u53ef\u80fd\u3068\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u5fa9\u5143\u53ef\u80fd\u3068\u3044\u3046\u70b9\u304c\u3001\u5358\u590f\u5c65\u6b74\u3068\u306f\u7570\u306a\u308b\u3002\n\u307e\u305f\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u95a2\u9023\u3057\u3066\u3001\u300c\u72ed\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u300d\u300c\u5e83\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u300d\u3068\u3044\u3046\u8003\u3048\u65b9\u304c\u5b58\u5728\u3059\u308b\u3002\n\n\n##### \u5e83\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u72ed\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\n\u3053\u306e\uff12\u3064\u306e\u5358\u8a9e\u306f\u3001\u5143\u3005GoF\u304c\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u306e\u307f\u88dc\u8db3\u7684\u306b\u7528\u3044\u3066\u3044\u308b\u7528\u8a9e\u3067\u3042\u308b\u3002\n\u72b6\u614b\u3092\u4fdd\u5b58\u3059\u308b\u969b\u306f\u3001\u4fdd\u5b58\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5168\u3066\u77e5\u3063\u3066\u304a\u304b\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u3002(wide interface)\n\u307e\u305f\u3001\u72b6\u614b\u4fdd\u5b58\u3092\u884c\u308f\u306a\u3044\u5916\u90e8\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u306f\u3001\u9069\u5207\u306b\u60c5\u5831\u96a0\u853d\u3092\u884c\u3046\u3002(narrow interface)\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:memento.rb\nclass Memento\n  attr_accessor :money\n  def initialize(money)\n    @money = money\n  end\nend\n\nclass Gamer\n  attr_accessor :money\n  def initialize\n    @money = 0\n  end\n  def save\n    return Memento.new(money)\n  end\n  def load(memento)\n    @money = memento.money\n  end\nend\n\ng = Gamer.new\nprint(g.money)\nprint(\"\\n\")\ng.money = 200\nm = g.save\nprint(g.money)\nprint(\"\\n\")\ng.money = 19\nprint(g.money)\nprint(\"\\n\")\ng.load(m)\nprint(g.money)\nprint(\"\\n\")\n```\n\n---\n\n#### State\n\n\u72b6\u614b\u3092\u8868\u73fe\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u72b6\u614b\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u308c\u3089\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u3067\u72b6\u614b\u9077\u79fb\u306a\u3069\u3092\u5b9f\u73fe\u3059\u308b\u3002\n\u6b21\u306b\u3069\u306e\u72b6\u614b\u306b\u9077\u79fb\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u304c\u5404\u72b6\u614b\u30af\u30e9\u30b9\u306e\u4e2d\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3002\n\u72b6\u614b\u6570\u304c\u591a\u304f\u306a\u308a\u3059\u304e\u308b\u3068\u72b6\u614b\u9077\u79fb\u56f3\u306a\u3069\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n\u5404\u72b6\u614b\u3067\u3084\u3089\u305b\u308b\u51e6\u7406\u304c\u5358\u7d14\u306a\u5834\u5408\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3059\u308b\u306e\u306f\u9006\u306b\u624b\u9593\u3068\u306a\u308b\u3002\n\u305d\u306e\u5834\u5408\u306f\u5358\u7d14\u306aenum\u3068\uff53\uff57\uff49\uff54\uff43\uff48\u3067\u826f\u3044\u3002\n\u5404\u72b6\u614b\u3067\u884c\u308f\u305b\u308b\u51e6\u7406\u304c\u7169\u96d1\u306a\u5834\u5408\u3001switch\u3067\u51e6\u7406\u3092\u3055\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u30b3\u30fc\u30c9\u304c\u975e\u5e38\u306b\u9577\u304f\u306a\u308b\u3002\n\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306e\u307f\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3059\u3079\u304d\u3060\u308d\u3046\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:state.rb\n\nclass State\n  attr_accessor :count, :context\n  def initialize(context)\n    @count = 0\n    @context = context\n  end\nend\n\nclass RunState < State\n  def do_something\n    print\"running\\n\"\n    @count = @count+1\n    if @count > 3\n      @context.change_state(StopState.new(@context))\n    end\n  end\nend\n\nclass StopState < State\n  def do_something\n    print\"stoping\\n\"\n    @count = @count+1\n    if @count > 3\n      @context.change_state(RunState.new(@context))\n    end\n\n  end\nend\n\nclass Person\n  attr_accessor :state\n  def initialize\n  end\n  def set_state(state)\n    @state = state\n  end\n  def change_state(state)\n    @state = state\n  end\n  def do_something\n    @state.do_something\n  end\nend\n\np = Person.new\np.set_state(StopState.new(p))\n\n(1..10).each do\n  p.do_something\nend\n\n```\n\n\n---\n\n#### Flyweight\n\n\u30ea\u30bd\u30fc\u30b9\u306e\u4f7f\u3044\u56de\u3057\u3092\u884c\u3046\u305f\u3081\u306e\u30d1\u30bf\u30fc\u30f3\u3002\n\u3044\u3061\u3044\u3061\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3069\u304c\u8fd1\u3044\u3002\n\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:flyweight.rb\nclass Flyweight\n  attr_accessor :pool\n  def initialize\n    @pool = {}\n  end\n  def get_number(key)\n    if @pool[key]\n      print \"use cache #{key}\\n\"\n      return @pool[key]\n    end\n    print \"created #{key}\\n\"\n    @pool[key] = key\n    return @pool[key]\n  end\nend\n\nf = Flyweight.new\n\nf.get_number(1)\nf.get_number(1)\nf.get_number(2)\nf.get_number(2)\n\n```\n\n\n---\n\n#### Proxy\n\n\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u306b\u304a\u3051\u308b\u4e2d\u9593\u5c64\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u4e2d\u9593\u5c64\u306b\u4ed8\u968f\u7684\u306a\u51e6\u7406\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u305d\u306e\u3082\u306e\u3068\u305d\u308c\u306b\u4ed8\u968f\u3059\u308b\u51e6\u7406\u3092\u5206\u96e2\u3067\u304d\u308b\u3002\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:proxy.rb\nclass RealObject\n  attr_accessor :secret_info\n  def initialize(secret_info)\n    @secret_info = secret_info\n  end\nend\n\nclass Proxy\n  attr_accessor :real_object\n  def initialize(real_object)\n    @real_object = real_object\n  end\n  def secret_info\n    print \"warning use secret_infoz\\n\"\n    return @real_object.secret_info\n  end\nend\n\n\n\np = Proxy.new(RealObject.new(\"secret\"))\n\nprint p.secret_info\n```\n\n---\n\n#### Command\n\n\u547d\u4ee4\u3068\u305d\u308c\u306b\u7d10\u3065\u304f\u51e6\u7406\u3092\u30af\u30e9\u30b9\u3068\u3057\u3066\u5207\u308a\u51fa\u3059\u30d1\u30bf\u30fc\u30f3\n\n##### \u30bd\u30fc\u30b9\n\n```ruby:command.rb\nclass Target\n  attr_accessor :value\n  def initialize(value)\n    @value = value\n  end\nend\n\nclass Command\n  def execute\n  end\nend\n\nclass PlusCommnad < Command\n  attr_accessor :target, :value\n  def initialize(target,value)\n    @target = target\n    @value = value\n  end\n  def execute\n    @target.value = @target.value + @value\n  end\nend\n\nclass Multicommand < Command\n  def initialize(target,value)\n    @target = target\n    @value = value\n  end\n  attr_accessor :target, :value\n  def execute\n    @target.value = @target.value * @value\n  end\nend\n\nclass CompositeCommand < Command\n  attr_accessor :commands\n  def initialize(commands)\n    @commands = commands\n  end\n  def add_command\n    @commands.push(command)\n  end\n  def execute\n    @commands.each do |command|\n      command.execute\n    end\n  end\n\nend\n\nt = Target.new(10)\ncc = CompositeCommand.new([PlusCommnad.new(t,1),Multicommand.new(t,2)])\nprint(t.value)\nprint\"\\n\"\ncc.execute\nprint(t.value)\nprint\"\\n\"\n\n\n```\n\n---\n\n#### Interpreter\n\n\u4e2d\u9593\u8a00\u8a9e\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306ep\u30bf\u30fc\u30f3\u3001\u4f7f\u3044\u6240\u306f\u9650\u3089\u308c\u308b\u305f\u3081\u5272\u611b\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u53c2\u8003\n\nhttp://www.techscore.com/tech/DesignPattern/index.html/\nhttp://morizyun.github.io/blog/categories/design-pattern/\nhttp://www002.upp.so-net.ne.jp/ys_oota//mdp/index.htm\nhttp://www.blackwasp.co.uk/gofpatterns.aspx\n\n", "tags": ["Ruby", "\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3"]}