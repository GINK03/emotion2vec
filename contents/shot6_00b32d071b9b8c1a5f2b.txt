{"context": " More than 1 year has passed since last update.Rust\u3068\u306f\n* Type safety\n* Memory safety\n* Concurrency and performance\n\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u8a00\u8a9e\u3068\u306e\u3053\u3068\u3002\u306a\u308b\u307b\u3069\u3061\u3087\u3063\u3068\u9762\u767d\u305d\u3046\u306d\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u89e6\u3063\u3066\u307f\u307e\u3059\u3002\n\nRust\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ncurl -s https://static.rust-lang.org/rustup.sh | sudo sh\n\n\u7d50\u69cb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u307e\u3067\u304b\u304b\u308b\u30fb\u30fb\u30fb\n\u81ea\u52d5\u3067Rust\u3068\u305d\u306e\u4e0a\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308bCargo\u3082\u5165\u308b\u307f\u305f\u3044\u3067\u3059\u3002\nmypc:examples shot$ rustc --version\nrustc 0.13.0-nightly (ffc111889 2014-12-12 21:07:19 +0000)\n\nmypc:examples shot$ cargo --version\ncargo 0.0.1-pre-nightly (0f6667c 2014-12-08 21:19:01 +0000)\n\nCargo\u306f\u3053\u3053\u307f\u308b\u3068\u65e9\u305d\u3046\u3002\nhttp://doc.crates.io/guide.html\n\nHello World\n\u4e0b\u8a18\u30b5\u30a4\u30c8\u3067\u8272\u3005\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u3063\u3066\u3001\u307e\u305a\u306f\u3053\u3053\u3092\u5199\u7d4c\u3002\nhttp://rustbyexample.com/\n\u30b3\u30fc\u30c9\u3082\u5168\u90e8\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3072\u3068\u307e\u305aclone.\ngit clone https://github.com/rust-lang/rust-by-example.git\n\n\u307e\u305a\u306fHello World. fn\u304c\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3(macro\u3068\u547c\u3076\u307f\u305f\u3044)\u306e\u3088\u3046\u3067\u3059\u306d\u30fc\u3002\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u547c\u3073\u51fa\u3057\u306f!\u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u3002\n// This is the main function\nfn main() {\n    // The statements here will be executed when the compiled binary is called\n\n    // Print text to the console\n    println!(\"Hello Rust!\");\n}\n\n\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u306frustc\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u751f\u6210\u3059\u308b\u3088\u3046\u3067\u3059\u3002\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nmypc:hello shot$ rustc hello.rs \nmypc:hello shot$ ./hello \nHello Rust!\n\n\nFormatted Print\n\u6b21\u306fprint\u7cfb\u30de\u30af\u30ed\u3067\u6574\u5f62\u3057\u306a\u304c\u3089\u51fa\u529b\u3057\u3066\u307f\u307e\u3059\u3002\nfn main() {\n    // \u666e\u901a\u306eprint\u306e\u547c\u3073\u51fa\u3057\n    print!(\"January has \");\n\n    // {}\u3067\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u304c\u4f7f\u3048\u308b\u3002\u578b\u306e\u8a71\u306f\u6b21\u3067\u3002i\u306finteger\u307d\u3044\n    println!(\"{} days\", 31i);\n\n    println!(\"-----------------\")\n\n    // {0}, {1}\u306e\u3088\u3046\u306a\u6570\u5024\u3064\u304d\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u3082\u4f7f\u3048\u308b\n    println!(\"{0}, this is {1}. {1}, this is {0}\", \"Alice\", \"Bob\");\n\n    // \u540d\u524d\u4ed8\u304d\u306f\u308f\u304b\u308a\u3084\u3059\u304f\u3066\u3001\u5b09\u3057\u3044\n    println!(\"{subject} {verb} {predicate}\",\n             predicate=\"over the lazy dog\",\n             subject=\"the quick brown fox\",\n             verb=\"jumps\");\n\n    // `:`\u3067\u7279\u6b8a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u307f\u305f\u3044\u3060\u3051\u3069\u3001\u4eca\u306e\u6240\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044\n    println!(\"{} of {:b} people know binary, the other half don't\", 1i, 2i);\n\n    // \u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u3068\u5f15\u6570\u306e\u6570\u304c\u3042\u3063\u3066\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\n    println!(\"My name is {0}, {1} {0}\", \"Bond\");\n}\n\nrustc\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u51fa\u3059\u3068\u3001\u304d\u3061\u3093\u3068\u3057\u305f\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u306d\u3002\u3046\u3093\u3001\u308f\u304b\u308a\u3084\u3059\u3044\u3002\nmypc:print shot$ rustc print.rs \nprint.rs:25:14: 25:39 error: invalid reference to argument `1` (there is 1 argument)\nprint.rs:25     println!(\"My name is {0}, {1} {0}\", \"Bond\");\n                         ^~~~~~~~~~~~~~~~~~~~~~~~~\nerror: aborting due to previous error\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u30a8\u30e9\u30fc\u306e\u51fa\u308b\u30b3\u30fc\u30c9\u3092\u306a\u304a\u3057\u3066\u3001\u5b9f\u884c\u3002\nmypc:print shot$ rustc print.rs \nmypc:print shot$ \nmypc:print shot$ ./print \nJanuary has 31 days\n-----------------\nAlice, this is Bob. Bob, this is Alice\nthe quick brown fox jumps over the lazy dog\n1 of 10 people know binary, the other half don't\nMy name is Bond, James Bond\n\n\nLiterals and Operators\n\u6b21\u306f\u30ea\u30c6\u30e9\u30eb\u3068\u6f14\u7b97\u5b50\u3002\nfn main() {\n    // \u666e\u901a\u306e\u8db3\u3057\u7b97\n    println!(\"1 + 2 = {}\", 1u + 2);\n\n    // \u578b\u3092\u304d\u3061\u3093\u3068\u3042\u308f\u305b\u306a\u3044\u3068\u7d50\u679c\u304c\u3001\u3068\u3044\u3046\u4f8b\n    println!(\"1i - 2 = {}\", 1i - 2);\n    println!(\"1u - 2 = {}\", 1u - 2);\n\n    // &&, ||, !\u306a\u3069\u306e\u30d6\u30fc\u30ea\u30a2\u30f3\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u304c\u4f7f\u3048\u308b\n    println!(\"true AND false is {}\", (true && false));\n    println!(\"true OR false is {}\", true || false);\n    println!(\"NOT true is {}\", !true);\n\n    // \u30d3\u30c3\u30c8\u6f14\u7b97\n    println!(\"0011 AND 0101 is {:04b}\", 0b0011u & 0b0101);\n    println!(\"0011 OR 0101 is {:04b}\", 0b0011u | 0b0101);\n    println!(\"0011 XOR 0101 is {:04b}\", 0b0011u ^ 0b0101);\n    println!(\"1 << 5 is {}\", 1u << 5);\n    println!(\"0x80 >> 2 is 0x{:x}\", 0x80u >> 2);\n\n    // \u30a2\u30f3\u30b9\u30b3\u3067\u30ea\u30fc\u30c0\u30d3\u30ea\u30c6\u30a3\u3042\u304c\u308b\u3068\u8a00\u3063\u3066\u308b\u3051\u3069\u3001\u3061\u3087\u3063\u3068\u5fae\u5999\u304b\u306a\u30fb\u30fb\u30fb\n    println!(\"One million(1_000_000) is written as {}\", 1_000_000u);\n}\n\n\u307e\u3042\u4e00\u822c\u7684\u306a\u6f14\u7b97\u5b50\u304c\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\n\nVariables\n\u3061\u3087\u3063\u3068\u30b3\u30fc\u30c9\u3092\u306a\u304a\u3057\u3066\u3001\u5909\u6570\u6e21\u3057\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u3082\u3046\u4e00\u5ea6\u4ee3\u5165\u3057\u3066\u307f\u305f(let\u3063\u3066\u304d\u3066\u308b\u306e\u3067\u30a2\u30c8\u30df\u30c3\u30af\u3067\u51fa\u6765\u306a\u3044\u60f3\u5b9a)\u3002\nfn main() {\n    //let\u3067\u5909\u6570\u3092\u5b9a\u7fa9\n    let an_integer = 1u;\n    let a_boolean = true;\n    let unit = ();\n\n    // \u5909\u6570\u306e\u30b3\u30d4\u30fc\n    let copied_integer = an_integer;\n\n    println!(\"An integer: {}\", copied_integer);\n    println!(\"A boolean: {}\", a_boolean);\n    println!(\"Meet the unit value: {}\", unit);\n\n    an_integer = 123u;\n    println!(\"An integer: {}\", copied_integer);\n\n    // \u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u304c\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u5909\u6570\u306f\u8b66\u544a\u3002\u30a2\u30f3\u30b9\u30b3\u3064\u3051\u308b\u3068\u3001\u8b66\u544a\u3057\u306a\u3044\u307f\u305f\u3044\n    let _unused_variable = 3u;\n    let noisy_unused_variable = 2u;\n}\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\u51fa\u6765\u306a\u3044\u3002\u30a8\u30e9\u30fc\u3082\u4e01\u5be7\u306a\u5370\u8c61\u3067\u3001\u518d\u30a2\u30b5\u30a4\u30f3\u3057\u305f\u6240\u3068\u5143\u306e\u8a2d\u5b9a\u306e\u3068\u3053\u308d\u306e2\u3064\u304c\u51fa\u308b\u3002\u5b9f\u7528\u30ec\u30d9\u30eb\u306f\u307e\u3060\u308f\u304b\u3093\u306a\u3044\u3051\u3069\u3001\u826f\u3044\u611f\u3058\u3067\u3059\u3002\nmypc:variables shot$ rustc variables.rs \nvariables.rs:14:2: 14:19 error: re-assignment of immutable variable `an_integer`\nvariables.rs:14     an_integer = 123u;\n                    ^~~~~~~~~~~~~~~~~\nvariables.rs:3:9: 3:19 note: prior assignment occurs here\nvariables.rs:3     let an_integer = 1u;\n                       ^~~~~~~~~~\nerror: aborting due to previous error\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u30b3\u30fc\u30c9\u3067\u518d\u30a2\u30b5\u30a4\u30f3\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u53d6\u308a\u9664\u3044\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c\u3002unused\u306a\u5909\u6570\u3082\u304d\u3063\u3061\u308a\u6355\u6349\u3055\u308c\u3066\u3044\u3066\u3088\u3044\u611f\u3058\u3067\u3059\u3002_\u3067\u59cb\u3081\u305f\u5909\u6570\u306f\u3072\u3063\u304b\u304b\u3089\u306a\u3044\u307f\u305f\u3044\u3002\n5cf93891c702:variables ohtani$ rustc variables.rs \nvariables.rs:16:9: 16:30 warning: unused variable: `noisy_unused_variable`, #[warn(unused_variables)] on by default\nvariables.rs:16     let noisy_unused_variable = 2u;\n                        ^~~~~~~~~~~~~~~~~~~~~\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u57fa\u672c\u306f\u5909\u6570\u306flet\u3067\u5b9a\u7fa9\u3057\u3066\u3001\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u5909\u66f4\u53ef\u80fd\u306a\u5909\u6570\u306fmut\u3067\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u3067\u3059\u3002\nfn main() {\n    //\u5909\u66f4\u4e0d\u53ef\u80fd\n    let _immutable_variable = 1i;\n    //mut\u5b9a\u7fa9\u3067\u5909\u6570\u3092\u5909\u66f4\u53ef\u80fd\u306b\u51fa\u6765\u308b\n    let mut mutable_variable = 1i;\n\n    println!(\"Before mutation: {}\", mutable_variable);\n\n    // \u5909\u66f4\n    mutable_variable += 1;\n\n    println!(\"After mutation: {}\", mutable_variable);\n\n    // \u3082\u3061\u308d\u3093let\u5b9a\u7fa9\u3060\u3051\u306e\u5909\u6570\u306f\u5909\u66f4\u4e0d\u53ef\u80fd\n    //_immutable_variable += 1;\n}\n\n\nmypc:mut shot$ rustc mut.rs \nmypc:mut shot$ ./mut \nBefore mutation: 1\nAfter mutation: 2```\n\n\u30b9\u30b3\u30fc\u30d7\u3068\u5909\u6570\u5ba3\u8a00\u306e\u3068\u3053\u308d\u306f\u306a\u3093\u304b\u5f53\u305f\u308a\u524d\u3060\u3063\u305f\u306e\u3067\u3001\u7701\u7565\u3067\u3002\n* \u30b9\u30b3\u30fc\u30d7\u304c\u7570\u306a\u308b\u5909\u6570\u306f\u4f7f\u3048\u306a\u3044\n* \u5909\u6570\u306e\u521d\u671f\u5316\u3059\u308b\u524d\u306b\u306f\u5909\u6570\u306f\u4f7f\u3048\u306a\u3044\n\u304f\u3089\u3044\u304b\u306a\u3042\u3002\u5909\u6570\u306f\u5ba3\u8a00\u6642\u306b\u3082\u3046\u5229\u7528\u3059\u308b\u72b6\u614b\u306b\u3057\u3068\u3051\u3063\u3066\u3053\u3068\u3067\u3002\n\nTypes\n\u578b\u306fRust\u3067\u6c7a\u3081\u3089\u308c\u305f\u3082\u306e\u306e\u4ed6\u306b\u81ea\u5206\u3067\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u3088\u3046\u306b\u4f5c\u308b\u4e8b\u3082\u51fa\u6765\u308b\u3051\u3069\u3001\u65b0\u3057\u3044\u578b\u304c\u4f5c\u3089\u308c\u308b\u8a33\u3058\u3083\u306a\u3055\u305d\u3046\u3002\u57fa\u672c\u7684\u306b\u306f\u660e\u793a\u7684\u306a\u30ad\u30e3\u30b9\u30c8\u3092as xxx\u3067\u5b9f\u65bd\u3059\u308b\u307f\u305f\u3044\u3002\u578b\u3092\u521d\u671f\u3067\u6c7a\u3081\u306a\u3044\u3088\u3046\u306b\u3082\u5b9a\u7fa9\u3067\u304d\u308b\u307f\u305f\u3044\u3060\u3051\u3069\u3001\u3042\u3068\u3067\u6c7a\u5b9a\u3067\u304d\u308b\u8981\u7d20\uff08\u3064\u307e\u308a\u5024\u306e\u4ee3\u5165\uff09\u304c\u7121\u3044\u5834\u5408\u306b\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u307f\u305f\u3044\u3002Inference\u3063\u3066\u8a00\u3046\u307f\u305f\u3044\u3063\u3059\u3002\n// `NanoSecond` is a new name for `u64`\ntype NanoSecond = u64;\ntype Inch = u64;\n\n// Use an attribute to silence warning\n#[allow(non_camel_case_types)]\ntype uint64_t = u64;\n// TODO ^ Try removing the attribute\n\nfn main(){\n    // \u30bf\u30a4\u30d7\u5074\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u3064\u3044\u3066\u3044\u308b\u5834\u5408\n    let a_float: f64 = 1.0;\n\n    // \u5024\u5074\u306b\u30bf\u30a4\u30d7\u3092\u3064\u3051\u308b\n    let mut an_integer = 5i;\n\n    // mut\u306e\u3064\u3044\u305f\u5909\u6570\u3067\u3082\u578b\u3092\u5909\u66f4\u3059\u308b\u4e8b\u306f\u51fa\u6765\u306a\u3044\n    // an_integer = true;\n\n    println!(\"{}\", a_float);\n    println!(\"{}\",an_integer);\n\n    let decimal = 65.4321_f32;\n\n    // \u6697\u9ed9\u7684\u306a\u30ad\u30e3\u30b9\u30c8\u306f\u8a31\u53ef\u3055\u308c\u306a\u3044\n    // let integer: u8 = decimal;\n\n    // \u660e\u793a\u7684\u306a\u30ad\u30e3\u30b9\u30c8\n    let integer = decimal as u8;\n    let character = integer as char;\n\n    println!(\"Casting: {} -> {} -> {}\", decimal, integer, character);\n\n\n        // \u30a8\u30a4\u30ea\u30a2\u30b9 \n    // `NanoSecond` = `Inch` = `uint64_t` = `u64`\n    let nanoseconds: NanoSecond = 5 as uint64_t;\n    let inches: Inch = 2 as uint64_t;\n\n    println!(\"{} nanoseconds + {} inches = {} unit?\",\n             nanoseconds,\n             inches,\n             nanoseconds + inches);\n\n        let xx = 1u8;\n        let yy = 2u;\n        let zz = 3f32;\n        let i = 1;\n        let f = 1.0;\n    println!(\"size of `x` in bytes: {}\", std::mem::size_of_val(&xx));\n    println!(\"size of `y` in bytes: {}\", std::mem::size_of_val(&yy));\n    println!(\"size of `z` in bytes: {}\", std::mem::size_of_val(&zz));\n    println!(\"size of `i` in bytes: {}\", std::mem::size_of_val(&i));\n\n    //\u3053\u308c\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068\u3001i, f\u304c\u578b\u304c\u6c7a\u307e\u3089\u306a\u3044\u305f\u3081\u3001\u30a8\u30e9\u30fc\n    let _constraint_i = xx + i;\n    let _constraint_f = zz + f;\n\n}\n\n\nmypc:type shot$ rustc type.rs \ntype.rs:48:6: 48:11 error: cannot determine a type for this local variable: cannot determine the type of this integer; add a suffix to specify the type explicitly [E0102]\ntype.rs:48  let i = 1;\n                ^~~~~\nerror: aborting due to previous error\n\n\nExpression\nRust\u3067\u306f\u307b\u307c\u5168\u90e8\u304c\u30a8\u30af\u30b9\u30d7\u30ec\u30c3\u30b7\u30e7\u30f3\u306a\u306e\u3067\u3001\u5024\u3092\u8fd4\u3059\u4e8b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u5f0f\u3068\u3057\u3066\u66f8\u3044\u3066\u3082\u6700\u5f8c\u306b\u306f\u5024\u3092\u8fd4\u3059\u4e8b\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001\u8fd4\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u6700\u5f8c\u3092\u30bb\u30df\u30b3\u30ed\u30f3\u3067\u7d42\u3048\u308b\u3068()\u3092\u8fd4\u3059\u307f\u305f\u3044\u3002\u3046\u3046\u3001\u3053\u308c\u306f\u307e\u308a\u305d\u3046\u3060\u306a\u30fb\u30fb\u30fb\nExpression\u306f\u5024\u3092\u8fd4\u3059\u3082\u306e\u3067\u3001Statement\u306f\u5024\u3092\u8fd4\u3055\u306a\u3044\u3082\u306e\u3068\u3044\u3046\u533a\u5206\u3051\u306e\u3088\u3046\u3060\u3002let\u304cStatement\u3067\u4ed6\u306fExpression\u3067\u3042\u308b\u3068\u3002\u3053\u306e\u6982\u5ff5\u306f\u5927\u4e8b\u3060\u306a(\u6b63\u78ba\u306b\u306fDeclaritive statement vs Expression statement)\u3002\n\u3061\u3087\u3063\u3068\u30b3\u30fc\u30c9\u3067\u3002\nfn main(){\n        let x = 5u;\n\n        //\u6700\u5f8c\u306e\u884c\u304cy\u306b\u5272\u5f53\n        let y = {\n                let xx = x * x;\n                let xxx = xx * x;\n                xxx + xx + x\n        };\n\n        //;\u3092\u3064\u3051\u308b\u3068\u3001\u30b5\u30d7\u30ec\u30b9\u3055\u308c\u3066()\u304c\u5272\u5f53\n        let z = {\n                2 * x;\n        };\n        println!(\"x is {}\", x);\n        println!(\"y is {}\", y);\n        println!(\"z is {}\", z);\n\n        let n2 = if n == 5i { n * n } else { n };\n        //let n2:int = if n == 5i { n * n; } else { n; };\n        println!(\"{}\", n2); \n\n}\n\n\u5148\u307b\u3069\u306e\u30bb\u30df\u30b3\u30ed\u30f3\u306e\u8a71\u306b\u3082\u3069\u3063\u3066\u304f\u308b\u3051\u3069\u3001\u4eee\u306b\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\nrust\nlet n2:int = if n == 5i { n * n; } else { n; };\n\n\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u3068\u3063\u3066\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u306fint\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u306e\u306b\u3001if\u30af\u30ed\u30fc\u30ba\u306e\u4e2d\u3067\u30bb\u30df\u30b3\u30ed\u30f3\u304c\u3042\u308b\u305f\u3081\u3001\u30b5\u30d7\u30ec\u30b9\u3055\u308c\u3066()\u304c\u8fd4\u308b\u3002Rust\u306e\u4e2d\u3067\u3001()\u306funit\u3068\u547c\u3070\u308c\u3001\u7279\u6b8a\u306a\u578b\u3067\u3042\u308b\u307f\u305f\u3044\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nmypc:expression shot$ rustc expr.rs \nexpr.rs:40:15: 40:48 error: mismatched types: expected `int`, found `()` (expected int, found ())\nexpr.rs:40  let n2:int = if n == 5i { n * n; } else { n; };\n                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nerror: aborting due to previous error\n\n\u3046\u30fc\u3093\u3001\u3053\u306e\u30b1\u30fc\u30b9\u306e\u4f7f\u3044\u3069\u3053\u308d\u306f\u307e\u3060\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u30fb\u30fb\u30fb\n\n\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\nRust\u3092\u3053\u3053\u307e\u3067\u89e6\u3063\u3066\u307f\u3066\u3001\u306a\u304b\u306a\u304b\u30b7\u30f3\u30d7\u30eb\u3067Type safety\u3082\u3042\u308b\u8a00\u8a9e\u3060\u3068\u3044\u3046\u3053\u3068\u306f\u308f\u304b\u3063\u305f\u3002\u3082\u3046\u3061\u3087\u3063\u3068\u89e6\u3063\u3066\u307f\u306a\u3044\u3068\u771f\u4fa1\u306f\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3060\u3051\u3069\u3002\u9577\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\u3053\u306e\u8fba\u3067\u5207\u3063\u3066\u307f\u308b\u3002\n\nRust\u3068\u306f\n* Type safety\n* Memory safety\n* Concurrency and performance\n\n\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u8a00\u8a9e\u3068\u306e\u3053\u3068\u3002\u306a\u308b\u307b\u3069\u3061\u3087\u3063\u3068\u9762\u767d\u305d\u3046\u306d\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u89e6\u3063\u3066\u307f\u307e\u3059\u3002\n\nRust\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n-\n\n```bash\ncurl -s https://static.rust-lang.org/rustup.sh | sudo sh\n```\n\n\u7d50\u69cb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u307e\u3067\u304b\u304b\u308b\u30fb\u30fb\u30fb\n\n\u81ea\u52d5\u3067Rust\u3068\u305d\u306e\u4e0a\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308bCargo\u3082\u5165\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n```bash\nmypc:examples shot$ rustc --version\nrustc 0.13.0-nightly (ffc111889 2014-12-12 21:07:19 +0000)\n\nmypc:examples shot$ cargo --version\ncargo 0.0.1-pre-nightly (0f6667c 2014-12-08 21:19:01 +0000)\n```\n\nCargo\u306f\u3053\u3053\u307f\u308b\u3068\u65e9\u305d\u3046\u3002\nhttp://doc.crates.io/guide.html\n\n\nHello World\n-\n\n\u4e0b\u8a18\u30b5\u30a4\u30c8\u3067\u8272\u3005\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u3063\u3066\u3001\u307e\u305a\u306f\u3053\u3053\u3092\u5199\u7d4c\u3002\nhttp://rustbyexample.com/\n\n\n\u30b3\u30fc\u30c9\u3082\u5168\u90e8\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3072\u3068\u307e\u305aclone.\n\n```\ngit clone https://github.com/rust-lang/rust-by-example.git\n```\n\n\u307e\u305a\u306fHello World. fn\u304c\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3(macro\u3068\u547c\u3076\u307f\u305f\u3044)\u306e\u3088\u3046\u3067\u3059\u306d\u30fc\u3002\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u547c\u3073\u51fa\u3057\u306f!\u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u3002\n\n```rust\n// This is the main function\nfn main() {\n    // The statements here will be executed when the compiled binary is called\n\n    // Print text to the console\n    println!(\"Hello Rust!\");\n}\n```\n\n\n\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u306frustc\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u751f\u6210\u3059\u308b\u3088\u3046\u3067\u3059\u3002\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```bash\nmypc:hello shot$ rustc hello.rs \nmypc:hello shot$ ./hello \nHello Rust!\n```\n\nFormatted Print\n-\n\n\u6b21\u306fprint\u7cfb\u30de\u30af\u30ed\u3067\u6574\u5f62\u3057\u306a\u304c\u3089\u51fa\u529b\u3057\u3066\u307f\u307e\u3059\u3002\n\n```rust\nfn main() {\n    // \u666e\u901a\u306eprint\u306e\u547c\u3073\u51fa\u3057\n    print!(\"January has \");\n\n    // {}\u3067\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u304c\u4f7f\u3048\u308b\u3002\u578b\u306e\u8a71\u306f\u6b21\u3067\u3002i\u306finteger\u307d\u3044\n    println!(\"{} days\", 31i);\n\n    println!(\"-----------------\")\n \n    // {0}, {1}\u306e\u3088\u3046\u306a\u6570\u5024\u3064\u304d\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u3082\u4f7f\u3048\u308b\n    println!(\"{0}, this is {1}. {1}, this is {0}\", \"Alice\", \"Bob\");\n\n    // \u540d\u524d\u4ed8\u304d\u306f\u308f\u304b\u308a\u3084\u3059\u304f\u3066\u3001\u5b09\u3057\u3044\n    println!(\"{subject} {verb} {predicate}\",\n             predicate=\"over the lazy dog\",\n             subject=\"the quick brown fox\",\n             verb=\"jumps\");\n\n    // `:`\u3067\u7279\u6b8a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u307f\u305f\u3044\u3060\u3051\u3069\u3001\u4eca\u306e\u6240\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044\n    println!(\"{} of {:b} people know binary, the other half don't\", 1i, 2i);\n\n    // \u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u3068\u5f15\u6570\u306e\u6570\u304c\u3042\u3063\u3066\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\n    println!(\"My name is {0}, {1} {0}\", \"Bond\");\n}\n```\n\n\nrustc\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u51fa\u3059\u3068\u3001\u304d\u3061\u3093\u3068\u3057\u305f\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u306d\u3002\u3046\u3093\u3001\u308f\u304b\u308a\u3084\u3059\u3044\u3002\n\n```bash\nmypc:print shot$ rustc print.rs \nprint.rs:25:14: 25:39 error: invalid reference to argument `1` (there is 1 argument)\nprint.rs:25     println!(\"My name is {0}, {1} {0}\", \"Bond\");\n                         ^~~~~~~~~~~~~~~~~~~~~~~~~\nerror: aborting due to previous error\n```\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u30a8\u30e9\u30fc\u306e\u51fa\u308b\u30b3\u30fc\u30c9\u3092\u306a\u304a\u3057\u3066\u3001\u5b9f\u884c\u3002\n\n```bash\nmypc:print shot$ rustc print.rs \nmypc:print shot$ \nmypc:print shot$ ./print \nJanuary has 31 days\n-----------------\nAlice, this is Bob. Bob, this is Alice\nthe quick brown fox jumps over the lazy dog\n1 of 10 people know binary, the other half don't\nMy name is Bond, James Bond\n```\n\n\nLiterals and Operators\n-\n\n\u6b21\u306f\u30ea\u30c6\u30e9\u30eb\u3068\u6f14\u7b97\u5b50\u3002\n\n```rust\nfn main() {\n    // \u666e\u901a\u306e\u8db3\u3057\u7b97\n    println!(\"1 + 2 = {}\", 1u + 2);\n\n    // \u578b\u3092\u304d\u3061\u3093\u3068\u3042\u308f\u305b\u306a\u3044\u3068\u7d50\u679c\u304c\u3001\u3068\u3044\u3046\u4f8b\n    println!(\"1i - 2 = {}\", 1i - 2);\n    println!(\"1u - 2 = {}\", 1u - 2);\n\n    // &&, ||, !\u306a\u3069\u306e\u30d6\u30fc\u30ea\u30a2\u30f3\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u304c\u4f7f\u3048\u308b\n    println!(\"true AND false is {}\", (true && false));\n    println!(\"true OR false is {}\", true || false);\n    println!(\"NOT true is {}\", !true);\n\n    // \u30d3\u30c3\u30c8\u6f14\u7b97\n    println!(\"0011 AND 0101 is {:04b}\", 0b0011u & 0b0101);\n    println!(\"0011 OR 0101 is {:04b}\", 0b0011u | 0b0101);\n    println!(\"0011 XOR 0101 is {:04b}\", 0b0011u ^ 0b0101);\n    println!(\"1 << 5 is {}\", 1u << 5);\n    println!(\"0x80 >> 2 is 0x{:x}\", 0x80u >> 2);\n\n    // \u30a2\u30f3\u30b9\u30b3\u3067\u30ea\u30fc\u30c0\u30d3\u30ea\u30c6\u30a3\u3042\u304c\u308b\u3068\u8a00\u3063\u3066\u308b\u3051\u3069\u3001\u3061\u3087\u3063\u3068\u5fae\u5999\u304b\u306a\u30fb\u30fb\u30fb\n    println!(\"One million(1_000_000) is written as {}\", 1_000_000u);\n}\n```\n\n\u307e\u3042\u4e00\u822c\u7684\u306a\u6f14\u7b97\u5b50\u304c\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\n\n\nVariables\n-\n\n\u3061\u3087\u3063\u3068\u30b3\u30fc\u30c9\u3092\u306a\u304a\u3057\u3066\u3001\u5909\u6570\u6e21\u3057\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u3082\u3046\u4e00\u5ea6\u4ee3\u5165\u3057\u3066\u307f\u305f(let\u3063\u3066\u304d\u3066\u308b\u306e\u3067\u30a2\u30c8\u30df\u30c3\u30af\u3067\u51fa\u6765\u306a\u3044\u60f3\u5b9a)\u3002\n\n```rust\nfn main() {\n    //let\u3067\u5909\u6570\u3092\u5b9a\u7fa9\n    let an_integer = 1u;\n    let a_boolean = true;\n    let unit = ();\n\n    // \u5909\u6570\u306e\u30b3\u30d4\u30fc\n    let copied_integer = an_integer;\n\n    println!(\"An integer: {}\", copied_integer);\n    println!(\"A boolean: {}\", a_boolean);\n    println!(\"Meet the unit value: {}\", unit);\n\n    an_integer = 123u;\n    println!(\"An integer: {}\", copied_integer);\n\n    // \u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u304c\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u5909\u6570\u306f\u8b66\u544a\u3002\u30a2\u30f3\u30b9\u30b3\u3064\u3051\u308b\u3068\u3001\u8b66\u544a\u3057\u306a\u3044\u307f\u305f\u3044\n    let _unused_variable = 3u;\n    let noisy_unused_variable = 2u;\n}\n```\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068\u3001\u51fa\u6765\u306a\u3044\u3002\u30a8\u30e9\u30fc\u3082\u4e01\u5be7\u306a\u5370\u8c61\u3067\u3001\u518d\u30a2\u30b5\u30a4\u30f3\u3057\u305f\u6240\u3068\u5143\u306e\u8a2d\u5b9a\u306e\u3068\u3053\u308d\u306e2\u3064\u304c\u51fa\u308b\u3002\u5b9f\u7528\u30ec\u30d9\u30eb\u306f\u307e\u3060\u308f\u304b\u3093\u306a\u3044\u3051\u3069\u3001\u826f\u3044\u611f\u3058\u3067\u3059\u3002\n\n\n```bash\nmypc:variables shot$ rustc variables.rs \nvariables.rs:14:2: 14:19 error: re-assignment of immutable variable `an_integer`\nvariables.rs:14 \tan_integer = 123u;\n                \t^~~~~~~~~~~~~~~~~\nvariables.rs:3:9: 3:19 note: prior assignment occurs here\nvariables.rs:3     let an_integer = 1u;\n                       ^~~~~~~~~~\nerror: aborting due to previous error\n```\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u30b3\u30fc\u30c9\u3067\u518d\u30a2\u30b5\u30a4\u30f3\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u53d6\u308a\u9664\u3044\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c\u3002unused\u306a\u5909\u6570\u3082\u304d\u3063\u3061\u308a\u6355\u6349\u3055\u308c\u3066\u3044\u3066\u3088\u3044\u611f\u3058\u3067\u3059\u3002_\u3067\u59cb\u3081\u305f\u5909\u6570\u306f\u3072\u3063\u304b\u304b\u3089\u306a\u3044\u307f\u305f\u3044\u3002\n\n```bash\n5cf93891c702:variables ohtani$ rustc variables.rs \nvariables.rs:16:9: 16:30 warning: unused variable: `noisy_unused_variable`, #[warn(unused_variables)] on by default\nvariables.rs:16     let noisy_unused_variable = 2u;\n                        ^~~~~~~~~~~~~~~~~~~~~\n```\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u57fa\u672c\u306f\u5909\u6570\u306flet\u3067\u5b9a\u7fa9\u3057\u3066\u3001\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u5909\u66f4\u53ef\u80fd\u306a\u5909\u6570\u306fmut\u3067\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n```rust\nfn main() {\n    //\u5909\u66f4\u4e0d\u53ef\u80fd\n    let _immutable_variable = 1i;\n    //mut\u5b9a\u7fa9\u3067\u5909\u6570\u3092\u5909\u66f4\u53ef\u80fd\u306b\u51fa\u6765\u308b\n    let mut mutable_variable = 1i;\n\n    println!(\"Before mutation: {}\", mutable_variable);\n\n    // \u5909\u66f4\n    mutable_variable += 1;\n\n    println!(\"After mutation: {}\", mutable_variable);\n\n    // \u3082\u3061\u308d\u3093let\u5b9a\u7fa9\u3060\u3051\u306e\u5909\u6570\u306f\u5909\u66f4\u4e0d\u53ef\u80fd\n    //_immutable_variable += 1;\n}\n\n```\n\n\n```bash\nmypc:mut shot$ rustc mut.rs \nmypc:mut shot$ ./mut \nBefore mutation: 1\nAfter mutation: 2```\n```\n\n\u30b9\u30b3\u30fc\u30d7\u3068\u5909\u6570\u5ba3\u8a00\u306e\u3068\u3053\u308d\u306f\u306a\u3093\u304b\u5f53\u305f\u308a\u524d\u3060\u3063\u305f\u306e\u3067\u3001\u7701\u7565\u3067\u3002\n* \u30b9\u30b3\u30fc\u30d7\u304c\u7570\u306a\u308b\u5909\u6570\u306f\u4f7f\u3048\u306a\u3044\n* \u5909\u6570\u306e\u521d\u671f\u5316\u3059\u308b\u524d\u306b\u306f\u5909\u6570\u306f\u4f7f\u3048\u306a\u3044\n\n\u304f\u3089\u3044\u304b\u306a\u3042\u3002\u5909\u6570\u306f\u5ba3\u8a00\u6642\u306b\u3082\u3046\u5229\u7528\u3059\u308b\u72b6\u614b\u306b\u3057\u3068\u3051\u3063\u3066\u3053\u3068\u3067\u3002\n\n\nTypes\n-\n\n\u578b\u306fRust\u3067\u6c7a\u3081\u3089\u308c\u305f\u3082\u306e\u306e\u4ed6\u306b\u81ea\u5206\u3067\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u3088\u3046\u306b\u4f5c\u308b\u4e8b\u3082\u51fa\u6765\u308b\u3051\u3069\u3001\u65b0\u3057\u3044\u578b\u304c\u4f5c\u3089\u308c\u308b\u8a33\u3058\u3083\u306a\u3055\u305d\u3046\u3002\u57fa\u672c\u7684\u306b\u306f\u660e\u793a\u7684\u306a\u30ad\u30e3\u30b9\u30c8\u3092<b>as xxx</b>\u3067\u5b9f\u65bd\u3059\u308b\u307f\u305f\u3044\u3002\u578b\u3092\u521d\u671f\u3067\u6c7a\u3081\u306a\u3044\u3088\u3046\u306b\u3082\u5b9a\u7fa9\u3067\u304d\u308b\u307f\u305f\u3044\u3060\u3051\u3069\u3001\u3042\u3068\u3067\u6c7a\u5b9a\u3067\u304d\u308b\u8981\u7d20\uff08\u3064\u307e\u308a\u5024\u306e\u4ee3\u5165\uff09\u304c\u7121\u3044\u5834\u5408\u306b\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u307f\u305f\u3044\u3002Inference\u3063\u3066\u8a00\u3046\u307f\u305f\u3044\u3063\u3059\u3002\n\n\n```rust\n// `NanoSecond` is a new name for `u64`\ntype NanoSecond = u64;\ntype Inch = u64;\n\n// Use an attribute to silence warning\n#[allow(non_camel_case_types)]\ntype uint64_t = u64;\n// TODO ^ Try removing the attribute\n\nfn main(){\n    // \u30bf\u30a4\u30d7\u5074\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u3064\u3044\u3066\u3044\u308b\u5834\u5408\n    let a_float: f64 = 1.0;\n\n    // \u5024\u5074\u306b\u30bf\u30a4\u30d7\u3092\u3064\u3051\u308b\n    let mut an_integer = 5i;\n\n    // mut\u306e\u3064\u3044\u305f\u5909\u6570\u3067\u3082\u578b\u3092\u5909\u66f4\u3059\u308b\u4e8b\u306f\u51fa\u6765\u306a\u3044\n    // an_integer = true;\n\n    println!(\"{}\", a_float);\n    println!(\"{}\",an_integer);\n\n    let decimal = 65.4321_f32;\n\n    // \u6697\u9ed9\u7684\u306a\u30ad\u30e3\u30b9\u30c8\u306f\u8a31\u53ef\u3055\u308c\u306a\u3044\n    // let integer: u8 = decimal;\n\n    // \u660e\u793a\u7684\u306a\u30ad\u30e3\u30b9\u30c8\n    let integer = decimal as u8;\n    let character = integer as char;\n\n    println!(\"Casting: {} -> {} -> {}\", decimal, integer, character);\n\n\n        // \u30a8\u30a4\u30ea\u30a2\u30b9 \n    // `NanoSecond` = `Inch` = `uint64_t` = `u64`\n    let nanoseconds: NanoSecond = 5 as uint64_t;\n    let inches: Inch = 2 as uint64_t;\n\n    println!(\"{} nanoseconds + {} inches = {} unit?\",\n             nanoseconds,\n             inches,\n             nanoseconds + inches);\n\n        let xx = 1u8;\n        let yy = 2u;\n        let zz = 3f32;\n        let i = 1;\n        let f = 1.0;\n    println!(\"size of `x` in bytes: {}\", std::mem::size_of_val(&xx));\n    println!(\"size of `y` in bytes: {}\", std::mem::size_of_val(&yy));\n    println!(\"size of `z` in bytes: {}\", std::mem::size_of_val(&zz));\n    println!(\"size of `i` in bytes: {}\", std::mem::size_of_val(&i));\n    \n    //\u3053\u308c\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068\u3001i, f\u304c\u578b\u304c\u6c7a\u307e\u3089\u306a\u3044\u305f\u3081\u3001\u30a8\u30e9\u30fc\n    let _constraint_i = xx + i;\n    let _constraint_f = zz + f;\n\n}\n\n```\n\n```bash\nmypc:type shot$ rustc type.rs \ntype.rs:48:6: 48:11 error: cannot determine a type for this local variable: cannot determine the type of this integer; add a suffix to specify the type explicitly [E0102]\ntype.rs:48 \tlet i = 1;\n           \t    ^~~~~\nerror: aborting due to previous error\n```\n\n\nExpression\n-\n\nRust\u3067\u306f\u307b\u307c\u5168\u90e8\u304c\u30a8\u30af\u30b9\u30d7\u30ec\u30c3\u30b7\u30e7\u30f3\u306a\u306e\u3067\u3001\u5024\u3092\u8fd4\u3059\u4e8b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u5f0f\u3068\u3057\u3066\u66f8\u3044\u3066\u3082\u6700\u5f8c\u306b\u306f\u5024\u3092\u8fd4\u3059\u4e8b\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001\u8fd4\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u6700\u5f8c\u3092\u30bb\u30df\u30b3\u30ed\u30f3\u3067\u7d42\u3048\u308b\u3068()\u3092\u8fd4\u3059\u307f\u305f\u3044\u3002\u3046\u3046\u3001\u3053\u308c\u306f\u307e\u308a\u305d\u3046\u3060\u306a\u30fb\u30fb\u30fb\n\nExpression\u306f\u5024\u3092\u8fd4\u3059\u3082\u306e\u3067\u3001Statement\u306f\u5024\u3092\u8fd4\u3055\u306a\u3044\u3082\u306e\u3068\u3044\u3046\u533a\u5206\u3051\u306e\u3088\u3046\u3060\u3002let\u304cStatement\u3067\u4ed6\u306fExpression\u3067\u3042\u308b\u3068\u3002\u3053\u306e\u6982\u5ff5\u306f\u5927\u4e8b\u3060\u306a(\u6b63\u78ba\u306b\u306fDeclaritive statement vs Expression statement)\u3002\n\n\u3061\u3087\u3063\u3068\u30b3\u30fc\u30c9\u3067\u3002\n\n```rust\nfn main(){\n        let x = 5u;\n\n        //\u6700\u5f8c\u306e\u884c\u304cy\u306b\u5272\u5f53\n        let y = {\n                let xx = x * x;\n                let xxx = xx * x;\n                xxx + xx + x\n        };\n\n        //;\u3092\u3064\u3051\u308b\u3068\u3001\u30b5\u30d7\u30ec\u30b9\u3055\u308c\u3066()\u304c\u5272\u5f53\n        let z = {\n                2 * x;\n        };\n        println!(\"x is {}\", x);\n        println!(\"y is {}\", y);\n        println!(\"z is {}\", z);\n\n        let n2 = if n == 5i { n * n } else { n };\n        //let n2:int = if n == 5i { n * n; } else { n; };\n        println!(\"{}\", n2); \n\n}\n```\n\n\u5148\u307b\u3069\u306e\u30bb\u30df\u30b3\u30ed\u30f3\u306e\u8a71\u306b\u3082\u3069\u3063\u3066\u304f\u308b\u3051\u3069\u3001\u4eee\u306b\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\n```rust\nlet n2:int = if n == 5i { n * n; } else { n; };\n```\n\n\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u3068\u3063\u3066\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u306fint\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u306e\u306b\u3001if\u30af\u30ed\u30fc\u30ba\u306e\u4e2d\u3067\u30bb\u30df\u30b3\u30ed\u30f3\u304c\u3042\u308b\u305f\u3081\u3001\u30b5\u30d7\u30ec\u30b9\u3055\u308c\u3066()\u304c\u8fd4\u308b\u3002Rust\u306e\u4e2d\u3067\u3001()\u306funit\u3068\u547c\u3070\u308c\u3001\u7279\u6b8a\u306a\u578b\u3067\u3042\u308b\u307f\u305f\u3044\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n\n```bash\nmypc:expression shot$ rustc expr.rs \nexpr.rs:40:15: 40:48 error: mismatched types: expected `int`, found `()` (expected int, found ())\nexpr.rs:40 \tlet n2:int = if n == 5i { n * n; } else { n; };\n           \t             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nerror: aborting due to previous error\n```\n\n\u3046\u30fc\u3093\u3001\u3053\u306e\u30b1\u30fc\u30b9\u306e\u4f7f\u3044\u3069\u3053\u308d\u306f\u307e\u3060\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u30fb\u30fb\u30fb\n\n\n\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\n-\n\nRust\u3092\u3053\u3053\u307e\u3067\u89e6\u3063\u3066\u307f\u3066\u3001\u306a\u304b\u306a\u304b\u30b7\u30f3\u30d7\u30eb\u3067Type safety\u3082\u3042\u308b\u8a00\u8a9e\u3060\u3068\u3044\u3046\u3053\u3068\u306f\u308f\u304b\u3063\u305f\u3002\u3082\u3046\u3061\u3087\u3063\u3068\u89e6\u3063\u3066\u307f\u306a\u3044\u3068\u771f\u4fa1\u306f\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3060\u3051\u3069\u3002\u9577\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\u3053\u306e\u8fba\u3067\u5207\u3063\u3066\u307f\u308b\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n", "tags": ["rust"]}