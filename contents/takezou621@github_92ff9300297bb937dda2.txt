{"context": "\n\n\u4f55\u304c\u3067\u304d\u308b\u306e\u304b\uff1f\nSwiftalytics\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u3001Google Analytics\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3092\u30d5\u30a1\u30a4\u30eb\uff11\u3064\u3067\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nViewController\u306b\u306f\u624b\u3092\u89e6\u308c\u305a\u306b\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3067\u304d\u308b\u306e\u304c\u826f\u3055\u3052\u3067\u3059\u3002\n\n\u74b0\u5883\n\nXcode 7.2.1\nOS X 10.11.3\n\n\n\u624b\u9806\n\nSwiftalytics\u3068Google Analytics\u8a2d\u5b9a\nXcode\u306eProject\u306b\u4e0b\u8a18\u306ePodfile\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nPodfile\nsource 'https://github.com/CocoaPods/Specs.git'\nplatform :ios, '8.0'\n\nuse_frameworks!\n\npod 'Swiftalytics', '~> 0.2'\npod 'GoogleAnalytics'\n\n\npod setup\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$pod setup\n\n\u6b21\u306bBridge-Header.h\u306bGoogleAnalytics\u306e\u30d8\u30c3\u30c0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nBridge-Header.h\n#import <GoogleAnalytics/GAI.h>\n#import <GoogleAnalytics/GAIFields.h>\n#import <GoogleAnalytics/GAILogger.h>\n#import <GoogleAnalytics/GAIDictionaryBuilder.h>\n\n\n\nSwiftalytics\u7528\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nSwiftalytics\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306fMethodSwizzling\u3092\u5229\u7528\u3057\u3066swiftalytics_viewDidAppear\u2192viewDidAppear\u306e\u9806\u306b\u51e6\u7406\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3057\u3087\u3046\u304b\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001UIViewController\u306e\u5b9f\u88c5\u306b\u306f\u624b\u3092\u52a0\u3048\u305a\u306bviewDidAppear\u306e\u76f4\u524d\u306bswiftalytics_viewDidAppear\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nScreenTracking.swift\nimport UIKit\nimport Swiftalytics\n\nstruct ScreenTracking {\n    static func setup() {\n        FirstViewController.self >> \"First Screen\"\n        SecondViewController.self >> \"Second Screen\"\n    }\n}\n\nextension UIViewController {\n    public override class func initialize() {\n        struct Static {\n            static var token: dispatch_once_t = 0\n        }\n\n        // make sure this isn't a subclass\n        if self !== UIViewController.self {\n            return\n        }\n\n        dispatch_once(&Static.token) {\n            let originalSelector = Selector(\"viewDidAppear:\")\n            let swizzledSelector = Selector(\"swiftalytics_viewDidAppear:\")\n\n            let originalMethod = class_getInstanceMethod(self, originalSelector)\n            let swizzledMethod = class_getInstanceMethod(self, swizzledSelector)\n\n            let didAddMethod = class_addMethod(self, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))\n\n            if didAddMethod {\n                class_replaceMethod(self, swizzledSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod))\n            } else {\n                method_exchangeImplementations(originalMethod, swizzledMethod)\n            }\n        }\n    }\n\n    func swiftalytics_viewDidAppear(animated: Bool) {\n        swiftalytics_viewDidAppear(animated)\n        if let name = Swiftalytics.trackingNameForViewController(self) {\n            print(\"\\(name)\")\n            let tracker = GAI.sharedInstance().defaultTracker\n            tracker.set(kGAIScreenName, value: name)\n            let builder = GAIDictionaryBuilder.createScreenView()\n            tracker.send(builder.build() as [NSObject: AnyObject])\n        }\n    }\n}\n\npostfix operator << {}\nprivate postfix func << <T: UIViewController>(trackClassFunction: (T -> () -> String)) {\n   Swiftalytics.setTrackingNameForViewController(trackClassFunction)\n}\n\nprivate func >> <T: UIViewController>(left: T.Type, @autoclosure right: () -> String) {\n    Swiftalytics.setTrackingNameForViewController(left, name: right)\n}\n\nprivate func >> <T: UIViewController>(left: T.Type, right: TrackingNameType) {\n    Swiftalytics.setTrackingNameForViewController(left, trackingType: right)\n}\n\nprivate func >> <T: UIViewController>(left: T.Type, right: (T -> String)) {\n    Swiftalytics.setTrackingNameForViewController(left, nameFunction: right)\n}\n\n\n\n\ndidFinishLaunchingWithOptions\u3092\u7de8\u96c6\nAppDelegate.swift\u306edidFinishLaunchingWithOptions\u306b\u5148\u307b\u3069\u4f5c\u6210\u3057\u305fScreenTracking\u306esetup()\u3068GoogleAnalytics\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nAppDelegate.swift\n    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n        ScreenTracking.setup()\n\n        // Configure tracker from GoogleService-Info.plist.\n        let gai = GAI.sharedInstance()\n        gai.trackUncaughtExceptions = true\n        gai.dispatchInterval = 20\n        gai.logger.logLevel = .Verbose\n        gai.trackerWithTrackingId(\"GA-xxxxxx\") // \u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n\n        return true\n    }\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u753b\u9762\u304c\u5207\u308a\u66ff\u308f\u308b\u305f\u3073\u306bswiftalytics_viewDidAppear\u304c\u547c\u3070\u308c\u3001\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/takezou621/SwiftalyticsGASample\n# \u4f55\u304c\u3067\u304d\u308b\u306e\u304b\uff1f\n[Swiftalytics](https://github.com/MrAlek/Swiftalytics)\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u3001Google Analytics\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3092\u30d5\u30a1\u30a4\u30eb\uff11\u3064\u3067\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nViewController\u306b\u306f\u624b\u3092\u89e6\u308c\u305a\u306b\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3067\u304d\u308b\u306e\u304c\u826f\u3055\u3052\u3067\u3059\u3002\n\n# \u74b0\u5883\n* Xcode 7.2.1\n* OS X 10.11.3\n\n# \u624b\u9806\n\n## Swiftalytics\u3068Google Analytics\u8a2d\u5b9a\n\nXcode\u306eProject\u306b\u4e0b\u8a18\u306ePodfile\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```:Podfile\nsource 'https://github.com/CocoaPods/Specs.git'\nplatform :ios, '8.0'\n\nuse_frameworks!\n\npod 'Swiftalytics', '~> 0.2'\npod 'GoogleAnalytics'\n```\n\npod setup\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\n$pod setup\n```\n\n\u6b21\u306b`Bridge-Header.h`\u306bGoogleAnalytics\u306e\u30d8\u30c3\u30c0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```:Bridge-Header.h\n#import <GoogleAnalytics/GAI.h>\n#import <GoogleAnalytics/GAIFields.h>\n#import <GoogleAnalytics/GAILogger.h>\n#import <GoogleAnalytics/GAIDictionaryBuilder.h>\n```\n\n## [Swiftalytics](https://github.com/MrAlek/Swiftalytics)\u7528\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n[Swiftalytics](https://github.com/MrAlek/Swiftalytics)\u306e[\u30b5\u30f3\u30d7\u30eb](https://github.com/MrAlek/Swiftalytics/blob/master/Example/ScreenTracking.swift)\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u30dd\u30a4\u30f3\u30c8\u306f[MethodSwizzling](http://qiita.com/paming/items/25eaf89e4f448ab05752)\u3092\u5229\u7528\u3057\u3066`swiftalytics_viewDidAppear`\u2192`viewDidAppear`\u306e\u9806\u306b\u51e6\u7406\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3057\u3087\u3046\u304b\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001UIViewController\u306e\u5b9f\u88c5\u306b\u306f\u624b\u3092\u52a0\u3048\u305a\u306b`viewDidAppear`\u306e\u76f4\u524d\u306b`swiftalytics_viewDidAppear`\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift:ScreenTracking.swift\nimport UIKit\nimport Swiftalytics\n\nstruct ScreenTracking {\n    static func setup() {\n        FirstViewController.self >> \"First Screen\"\n        SecondViewController.self >> \"Second Screen\"\n    }\n}\n\nextension UIViewController {\n    public override class func initialize() {\n        struct Static {\n            static var token: dispatch_once_t = 0\n        }\n        \n        // make sure this isn't a subclass\n        if self !== UIViewController.self {\n            return\n        }\n        \n        dispatch_once(&Static.token) {\n            let originalSelector = Selector(\"viewDidAppear:\")\n            let swizzledSelector = Selector(\"swiftalytics_viewDidAppear:\")\n            \n            let originalMethod = class_getInstanceMethod(self, originalSelector)\n            let swizzledMethod = class_getInstanceMethod(self, swizzledSelector)\n            \n            let didAddMethod = class_addMethod(self, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))\n            \n            if didAddMethod {\n                class_replaceMethod(self, swizzledSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod))\n            } else {\n                method_exchangeImplementations(originalMethod, swizzledMethod)\n            }\n        }\n    }\n    \n    func swiftalytics_viewDidAppear(animated: Bool) {\n        swiftalytics_viewDidAppear(animated)\n        if let name = Swiftalytics.trackingNameForViewController(self) {\n            print(\"\\(name)\")\n            let tracker = GAI.sharedInstance().defaultTracker\n            tracker.set(kGAIScreenName, value: name)\n            let builder = GAIDictionaryBuilder.createScreenView()\n            tracker.send(builder.build() as [NSObject: AnyObject])\n        }\n    }\n}\n\npostfix operator << {}\nprivate postfix func << <T: UIViewController>(trackClassFunction: (T -> () -> String)) {\n   Swiftalytics.setTrackingNameForViewController(trackClassFunction)\n}\n\nprivate func >> <T: UIViewController>(left: T.Type, @autoclosure right: () -> String) {\n    Swiftalytics.setTrackingNameForViewController(left, name: right)\n}\n\nprivate func >> <T: UIViewController>(left: T.Type, right: TrackingNameType) {\n    Swiftalytics.setTrackingNameForViewController(left, trackingType: right)\n}\n\nprivate func >> <T: UIViewController>(left: T.Type, right: (T -> String)) {\n    Swiftalytics.setTrackingNameForViewController(left, nameFunction: right)\n}\n\n```\n\n## `didFinishLaunchingWithOptions`\u3092\u7de8\u96c6\n\nAppDelegate.swift\u306e`didFinishLaunchingWithOptions`\u306b\u5148\u307b\u3069\u4f5c\u6210\u3057\u305fScreenTracking\u306esetup()\u3068GoogleAnalytics\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```swift:AppDelegate.swift\n    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n        ScreenTracking.setup()\n        \n        // Configure tracker from GoogleService-Info.plist.\n        let gai = GAI.sharedInstance()\n        gai.trackUncaughtExceptions = true\n        gai.dispatchInterval = 20\n        gai.logger.logLevel = .Verbose\n        gai.trackerWithTrackingId(\"GA-xxxxxx\") // \u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n            \n        return true\n    }\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u753b\u9762\u304c\u5207\u308a\u66ff\u308f\u308b\u305f\u3073\u306b`swiftalytics_viewDidAppear`\u304c\u547c\u3070\u308c\u3001\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/takezou621/SwiftalyticsGASample\n", "tags": ["Swift2.1", "Swift", "Swift2"]}