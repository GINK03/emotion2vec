{"context": "\u30ed\u30b0\u306e\u904b\u7528\u3092\u3069\u3046\u3057\u3088\u3046\u304b\u306a\u30fc\u3001\u3068Akka Http\u306e\u30da\u30fc\u30b8\u3092\u898b\u3066\u3044\u305f\u3089SLF4J\u4f7f\u3048\u308b\u3088\u30fc\u3001\u3068\u306e\u3053\u3068\u3067\u3057\u305f\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\n1. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u306e\u8a2d\u5b9a\n\nMain.scala\n\nMain.scala\nimport akka.event.{Logging, LoggingAdapter}\n\nobject Main {\n  implicit val system: ActorSystem  = ActorSystem(\"your application name\")\n  implicit val executor: ExecutionContextExecutor = system.dispatcher\n  implicit val materializer: Materializer = ActorMaterializer()\n\n  val logger = Logging(system, getClass)\n}\n\n\n\u3068\u3057\u3066\u3042\u3052\u3066\u3001routing\u3084supervisor\u306estrategy\u3001actor\u306eoverride def\u7b49\u3067logging\u3092\u4ed5\u8fbc\u3080\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\nbuild.sbt\n\nbuild.sbt\nlibraryDependencies ++= {\n  val akkaV       = \"2.4.4\"\n  val akkaStreamV = \"2.*.*\"\n  Seq(\n    \"com.typesafe.akka\" %% \"akka-actor\"                           % akkaV,\n    \"com.typesafe.akka\" %% \"akka-slf4j\"                           % akkaV,\n    \"ch.qos.logback\"    %  \"logback-classic\"                      % \"1.1.7\",\n    \"com.typesafe.akka\" %% \"akka-stream....\uff08\u5272\u611b\uff09\n\n    \"eu.inn\" %% \"fluentd-scala\" % \"0.1.20\",\n\n\n\napplication.conf\n\nsrc/main/resources/application.conf\nakka {\n  loglevel = \"INFO\"\n  loggers = [\"akka.event.slf4j.Slf4jLogger\"]\n}\n\n\n\nlogback.xml\nappender\u3067\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3068fluentd\u304b\u307e\u3059\u3082\u306e\u306e\uff12\u3064\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306bfluentd\u3067\u3067\u304d\u308b\u306e\u304b\u306a\u3001\u3001\u3068\u3044\u3046\u306e\u304c\u308f\u304b\u3089\u305a\u306b\u3072\u3088\u3063\u305f\u7d50\u679c\u3001\u524d\u8005\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\nsrc/main/resources/logback.xml\n<configuration>\n    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n        <file>log/app.log</file>\n        <append>true</append>\n        <!-- encoders are assigned the type\n             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->\n        <encoder>\n            <pattern>%d,%msg%n</pattern>\n        </encoder>\n    </appender>\n\n    <root level=\"DEBUG\">\n        <appender-ref ref=\"FILE\" />\n    </root>\n\n    <appender name=\"FLUENT\" class=\"eu.inn.fluentd.FluentdAppender\">\n        <tag>my-tag</tag>\n        <remoteHost>localhost</remoteHost>\n        <port>24224</port>\n    </appender>\n\n    <root level=\"INFO\">\n        <appender-ref ref=\"FLUENT\"/>\n    </root>\n</configuration>\n\n\n\n2. AWS\u306e\u8a2d\u5b9a\uff08S3\u306e\u4f5c\u6210\uff09\n\u3053\u3061\u3089\u306b\u3064\u3044\u3066\u306faws cli\u3067\u3082\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3082\u3088\u3057\u306a\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n3. fluentd on Docker\u306e\u8a2d\u5b9a\n\n\u53c2\u8003\u30bd\u30fc\u30b9\ncrowdworks\u3055\u3093\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\nfluentd\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u3001forest\u3068s3\u306e\uff12\u3064\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\nhttps://github.com/fluent/fluent-plugin-s3\nhttps://github.com/tagomoris/fluent-plugin-forest\n\n\nfluent.conf\n\nfluent.conf\n<match pattern>\n  @type s3\n\n  aws_key_id \"#{ENV['AWS_ACCESS_KEY_ID']}\"\n  aws_sec_key \"#{ENV['AWS_SECRET_ACCESS_KEY']}\"\n  s3_bucket \"#{ENV['FLUENTD_S3_BUCKET']}\"\n  s3_region \"#{ENV['FLUENTD_S3_REGION']}\"\n  s3_object_key_format %{path}%{time_slice}_%{index}.%{file_extension}\n  path logs/\n  buffer_path /var/log/fluent/s3\n\n  time_slice_format %Y%m%d-%H\n  time_slice_wait 10m\n  utc\n</match>\n\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306afluent.conf\u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3080Docker\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\ndocker-compose\u306b\u3088\u308b\u8d77\u52d5\nAWS\u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u7b49\u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3068\u3053\u308d\u3060\u3051\u3001instance role\u306b\u5909\u66f4\u3067\u304d\u306a\u3044\u304b\u306f\u8981\u78ba\u8a8d\u4e8b\u9805\u3068\u306a\u308a\u307e\u3059\u3002\nDocker\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u7d42\u308f\u3063\u305f\u3089\u3001docker-compose.yml\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\ndocker-compose.yml\nfluentd-s3:\n        image: local/docker-fluentd-s3\n        environment:\n                - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n                - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n                - FLUENTD_S3_BUCKET=${FLUENTD_S3_BUCKET}\n                - FLUENTD_S3_REGION=${FLUENTD_S3_REGION}\n        expose:\n                - 24224 \n                - 5140\n        ports:\n                - 24224:24224\n\n\n\u3053\u308c\u3067\u3001\ndocker-compose up\n\n\u3068\u3059\u308b\u3053\u3068\u3067\u3001fluentd\u306e\u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u3001logging\u306e\u51fa\u529b\u7d50\u679c\u304cS3\u306b\u683c\u7d0d\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u304a\u624b\u8efd\u304b\u3064\u4fbf\u5229\u3067\u3059\u306d\uff01\n\n4. TODO\n\nkubernetes\u306b\u7d44\u307f\u8fbc\u307f\u3084\u3059\u3044\u3088\u3046\u306b\u4f5c\u308a\u3053\u307f\u3092\u5b9f\u65bd\u3059\u308b\n\u30ed\u30b0\u306e\u8ee2\u9001\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u3067\u3001fluentd\u306e\u8a2d\u5b9a\u3092\u898b\u76f4\u3059\nzipkin\u7b49\u306eapplication tracing\u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u6642\u306e\u4f4f\u307f\u5206\u3051\nelastic search/kibana\u3092\u5229\u7528\u3057\u305f\u53ef\u8996\u5316\u307e\u3067\u3084\u308b\u304b\u3001\u6b63\u76f4\u7121\u99c4\u306a\u53ef\u8996\u5316\u306b\u306a\u3089\u306a\u3044\u304b\u3001\u306a\u3069\u306e\u898b\u6975\u3081\nkey\u7b49\u306e\u60c5\u5831\u3092\u74b0\u5883\u5909\u6570\u3067\u6301\u3064\u306e\u304c\u3046\u3056\u3044\u306e\u3067instance role\u306e\u5229\u7528\u691c\u8a3c\u3092\u884c\u3046\n\n\n\u672c\u65e5\u306f\u4ee5\u4e0a\u3068\u306a\u308a\u307e\u3059\uff3e\uff3e\n\u30ed\u30b0\u306e\u904b\u7528\u3092\u3069\u3046\u3057\u3088\u3046\u304b\u306a\u30fc\u3001\u3068[Akka Http\u306e\u30da\u30fc\u30b8](http://doc.akka.io/docs/akka/current/java/logging.html#SLF4J)\u3092\u898b\u3066\u3044\u305f\u3089SLF4J\u4f7f\u3048\u308b\u3088\u30fc\u3001\u3068\u306e\u3053\u3068\u3067\u3057\u305f\u3002\n\n\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\n## 1. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u306e\u8a2d\u5b9a\n\n###Main.scala\n\n```Main.scala\nimport akka.event.{Logging, LoggingAdapter}\n\nobject Main {\n  implicit val system: ActorSystem  = ActorSystem(\"your application name\")\n  implicit val executor: ExecutionContextExecutor = system.dispatcher\n  implicit val materializer: Materializer = ActorMaterializer()\n\n  val logger = Logging(system, getClass)\n}\n```\n\n\u3068\u3057\u3066\u3042\u3052\u3066\u3001routing\u3084supervisor\u306estrategy\u3001actor\u306eoverride def\u7b49\u3067logging\u3092\u4ed5\u8fbc\u3080\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\n### build.sbt\n\n```build.sbt\nlibraryDependencies ++= {\n  val akkaV       = \"2.4.4\"\n  val akkaStreamV = \"2.*.*\"\n  Seq(\n    \"com.typesafe.akka\" %% \"akka-actor\"                           % akkaV,\n    \"com.typesafe.akka\" %% \"akka-slf4j\"                           % akkaV,\n    \"ch.qos.logback\"    %  \"logback-classic\"                      % \"1.1.7\",\n    \"com.typesafe.akka\" %% \"akka-stream....\uff08\u5272\u611b\uff09\n\n    \"eu.inn\" %% \"fluentd-scala\" % \"0.1.20\",\n```\n\n### application.conf\n\n```src/main/resources/application.conf\nakka {\n  loglevel = \"INFO\"\n  loggers = [\"akka.event.slf4j.Slf4jLogger\"]\n}\n```\n\n### logback.xml\n\nappender\u3067\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3068fluentd\u304b\u307e\u3059\u3082\u306e\u306e\uff12\u3064\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306bfluentd\u3067\u3067\u304d\u308b\u306e\u304b\u306a\u3001\u3001\u3068\u3044\u3046\u306e\u304c\u308f\u304b\u3089\u305a\u306b\u3072\u3088\u3063\u305f\u7d50\u679c\u3001\u524d\u8005\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n```src/main/resources/logback.xml\n<configuration>\n    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n        <file>log/app.log</file>\n        <append>true</append>\n        <!-- encoders are assigned the type\n             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->\n        <encoder>\n            <pattern>%d,%msg%n</pattern>\n        </encoder>\n    </appender>\n\n    <root level=\"DEBUG\">\n        <appender-ref ref=\"FILE\" />\n    </root>\n\n    <appender name=\"FLUENT\" class=\"eu.inn.fluentd.FluentdAppender\">\n        <tag>my-tag</tag>\n        <remoteHost>localhost</remoteHost>\n        <port>24224</port>\n    </appender>\n\n    <root level=\"INFO\">\n        <appender-ref ref=\"FLUENT\"/>\n    </root>\n</configuration>\n```\n\n## 2. AWS\u306e\u8a2d\u5b9a\uff08S3\u306e\u4f5c\u6210\uff09\n\n\u3053\u3061\u3089\u306b\u3064\u3044\u3066\u306faws cli\u3067\u3082\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3082\u3088\u3057\u306a\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n## 3. fluentd on Docker\u306e\u8a2d\u5b9a\n\n### \u53c2\u8003\u30bd\u30fc\u30b9\n\n[crowdworks\u3055\u3093\u306e\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/crowdworks/docker-fluentd-s3)\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\nfluentd\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u3001forest\u3068s3\u306e\uff12\u3064\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\n* https://github.com/fluent/fluent-plugin-s3\n* https://github.com/tagomoris/fluent-plugin-forest\n\n### fluent.conf\n\n```fluent.conf\n<match pattern>\n  @type s3\n\n  aws_key_id \"#{ENV['AWS_ACCESS_KEY_ID']}\"\n  aws_sec_key \"#{ENV['AWS_SECRET_ACCESS_KEY']}\"\n  s3_bucket \"#{ENV['FLUENTD_S3_BUCKET']}\"\n  s3_region \"#{ENV['FLUENTD_S3_REGION']}\"\n  s3_object_key_format %{path}%{time_slice}_%{index}.%{file_extension}\n  path logs/\n  buffer_path /var/log/fluent/s3\n\n  time_slice_format %Y%m%d-%H\n  time_slice_wait 10m\n  utc\n</match>\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306afluent.conf\u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3080Docker\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n### docker-compose\u306b\u3088\u308b\u8d77\u52d5\n\nAWS\u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u7b49\u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3068\u3053\u308d\u3060\u3051\u3001instance role\u306b\u5909\u66f4\u3067\u304d\u306a\u3044\u304b\u306f\u8981\u78ba\u8a8d\u4e8b\u9805\u3068\u306a\u308a\u307e\u3059\u3002\n\nDocker\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u7d42\u308f\u3063\u305f\u3089\u3001docker-compose.yml\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n```docker-compose.yml\nfluentd-s3:\n        image: local/docker-fluentd-s3\n        environment:\n                - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n                - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n                - FLUENTD_S3_BUCKET=${FLUENTD_S3_BUCKET}\n                - FLUENTD_S3_REGION=${FLUENTD_S3_REGION}\n        expose:\n                - 24224 \n                - 5140\n        ports:\n                - 24224:24224\n```\n\n\u3053\u308c\u3067\u3001\n\n```bash\ndocker-compose up\n```\n\n\u3068\u3059\u308b\u3053\u3068\u3067\u3001fluentd\u306e\u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u3001logging\u306e\u51fa\u529b\u7d50\u679c\u304cS3\u306b\u683c\u7d0d\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u304a\u624b\u8efd\u304b\u3064\u4fbf\u5229\u3067\u3059\u306d\uff01\n\n## 4. TODO\n\n* kubernetes\u306b\u7d44\u307f\u8fbc\u307f\u3084\u3059\u3044\u3088\u3046\u306b\u4f5c\u308a\u3053\u307f\u3092\u5b9f\u65bd\u3059\u308b\n* \u30ed\u30b0\u306e\u8ee2\u9001\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u3067\u3001fluentd\u306e\u8a2d\u5b9a\u3092\u898b\u76f4\u3059\n* zipkin\u7b49\u306eapplication tracing\u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u6642\u306e\u4f4f\u307f\u5206\u3051\n* elastic search/kibana\u3092\u5229\u7528\u3057\u305f\u53ef\u8996\u5316\u307e\u3067\u3084\u308b\u304b\u3001\u6b63\u76f4\u7121\u99c4\u306a\u53ef\u8996\u5316\u306b\u306a\u3089\u306a\u3044\u304b\u3001\u306a\u3069\u306e\u898b\u6975\u3081\n* key\u7b49\u306e\u60c5\u5831\u3092\u74b0\u5883\u5909\u6570\u3067\u6301\u3064\u306e\u304c\u3046\u3056\u3044\u306e\u3067instance role\u306e\u5229\u7528\u691c\u8a3c\u3092\u884c\u3046\n\n\n---\n\n\u672c\u65e5\u306f\u4ee5\u4e0a\u3068\u306a\u308a\u307e\u3059\uff3e\uff3e\n\n\n", "tags": ["Akka", "slf4j", "docker", "fluentd", "S3"]}