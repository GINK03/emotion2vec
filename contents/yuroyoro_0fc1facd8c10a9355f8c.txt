{"context": " More than 1 year has passed since last update.\u4f55\u6c17\u306a\u304f\u4f7f\u3063\u3066\u308b\u4e00\u6642\u30d5\u30a1\u30a4\u30eb(tempfile)\u3067\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\u5c11\u3057\u5b9f\u88c5\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30c6\u30b9\u30c8\u304c\u9ad8\u901f\u5316\u3055\u308c\u305f\u3053\u3068\u3067\u3001tmp file\u3092unixtime\u3067\u81ea\u524d\u751f\u6210\u3057\u3066\u3044\u305ftest case\u304c\u8ed2\u4e26\u307ffail\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u30c6\u30b9\u30c8\u7528\u306b\u751f\u6210\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306ftmpfile(3)\u4f7f\u3044\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u77e5\u898b\u2014 \u2070\u2070\u2070\u2070null (@yuroyoro) September 11,  2014\n\n\n\u4e00\u6642\u30d5\u30a1\u30a4\u30eb(tempfile)\u306b\u671f\u5f85\u3055\u308c\u308b\u6319\u52d5\n\n\u30e6\u30cb\u30fc\u30af\u3067\u63a8\u6e2c\u3057\u306b\u304f\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u751f\u6210\u3055\u308c\u308b\n\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u308b\n\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306f\u898b\u3048\u306a\u3044\n\n\u5b9f\u969b\u306b\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u969b\u306f\u3001\u3053\u308c\u3089\u306e\u8981\u4ef6\u306e\u3046\u3061\u306e\u3044\u304f\u3064\u304b\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u3053\u306e\u3088\u3046\u306a\u7279\u6027\u3092\u6301\u3064\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u901a\u5e38\u306f\u306a\u3093\u3089\u304b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u306f\u305a\u3067\u3059\u3002\n\u3068\u3044\u3046\u304b\u3001\u666e\u901a\u306bunixtime\u3092\u5143\u306b\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067open\u3057\u3066write\u3057\u3066\u3001\u4f7f\u3044\u7d42\u308f\u3063\u305f\u3089close/unlink\u3059\u308b\u3088\u3046\u306a\u7d20\u6734\u306a\u5b9f\u88c5\u306f\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\u304c\u3001\u5229\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5b9f\u88c5\u3084\u4f7f\u3044\u65b9\u306b\u3088\u3063\u3066\u306f\u3001\u4e0a\u8a18\u306e\u8981\u4ef6\u5168\u3066\u3092\u6e80\u305f\u3055\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u30bb\u30ad\u30e5\u30a2\u306btmpfile\u3092\u53d6\u308a\u6271\u3046\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u6587\u66f8\u3092\u898b\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\nIPA ISEC\u3000\u30bb\u30ad\u30e5\u30a2\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8b1b\u5ea7\uff1aC/C++\u8a00\u8a9e\u7de8\u3000\u7b2c7\u7ae0 \u30c7\u30fc\u30bf\u6f0f\u3048\u3044\u5bfe\u7b56\uff1a\u30c6\u30f3\u30dd\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\uff08Unix \u306e\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\uff09\n\u4e0a\u8a18\u306e\u6587\u66f8\u3067\u306f\u3001mkstemp(3) \u307e\u305f\u306f tmpfile(3)\u3092\u4f7f\u7528\u3059\u3079\u304d\u3001\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u304c\u3001\u3053\u306e\u95a2\u6570\u3092\u5229\u7528\u3057\u306a\u3044\u5b9f\u88c5\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5b58\u5728\u3057\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306fRuby\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306eTempfile\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u304c\u3001\u3053\u306e\u5b9f\u88c5\u3068ISO C\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u306f\u3001\u5f8c\u307b\u3069\u89e3\u8aac\u3057\u307e\u3059\u3002\n\ntmpfile(3)\ntmpfile(3): create temporary file - Linux man page\ntmpfile(3)\u306f\u30011\u30682\u30683\u306e\u3059\u3079\u3066\u306e\u8981\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\u304c\u3001glibc\u306a\u3069\u306e\u30e1\u30b8\u30e3\u30fc\u306a\u5b9f\u88c5\u3067\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u3092open\u3057\u305f\u76f4\u5f8c\u306bunlink\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u5177\u4f53\u7684\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u5229\u7528\u8005\u304c\u77e5\u308b\u8853\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304cread/write\u3059\u308b\u3053\u3068\u3082\u4e0d\u53ef\u80fd\u3067\u3059\u3002\nopen\u5f8c\u306bunlink\u3057\u3066\u3044\u307e\u3059\u304c\u3001FILE\u69cb\u9020\u4f53\u3092\u901a\u3057\u3066\u64cd\u4f5c\u3059\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3059\u3002\u660e\u793a\u7684\u306bclose\u3059\u308b\u304b\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3059\u308b\u3053\u3068\u3067\u524a\u9664\u3055\u308c\u307e\u3059\u3002\nglibc\u306e\u5b9f\u88c5\u3092\u898b\u308b\u3068\u3001\u78ba\u304b\u306b\u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u751f\u6210\u3057\u3066open\u3057\u305f\u5f8c\u306bunlink\u3057\u3066\u3044\u307e\u3059\u3002\n\nstdio-common/tmpfile.c\nFILE *\ntmpfile (void)\n{\n  char buf[FILENAME_MAX];\n  int fd;\n  FILE *f;\n\n  if (__path_search (buf, FILENAME_MAX, NULL, \"tmpf\", 0))\n    return NULL;\n  int flags = 0;\n#ifdef FLAGS\n  flags = FLAGS;\n#endif\n\n  /*\n     __gen_tempname\u306f\u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u751f\u6210\u3057\u3066open\u3059\u308b \u3002\n     KIND\u304c__GT_FILE\u306e\u5834\u5408\u306f\u3001open(O_CREAT|O_EXCL) \u3092\u7528\u3044\u308b\u306e\u3067\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u885d\u7a81\u306f\u306a\u3044\u3002\n   */\n  fd = __gen_tempname (buf, 0, flags, __GT_FILE);\n  if (fd < 0)\n    return NULL;\n\n  /* Note that this relies on the Unix semantics that\n     a file is not really removed until it is closed.\n\n     Unix\u74b0\u5883\u3067\u306f\u3001unlink\u3057\u305f\u3068\u3057\u3066\u3082\u5b9f\u969b\u306b\u524a\u9664\u3055\u308c\u308b\u306e\u306f\n     close\u3055\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3042\u308b\u3053\u3068\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\n     unlink\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306bos\u5074\u304cfd\u3092\n     \u56de\u53ce\u3057\u3066close\u3059\u308b\u3002\u3088\u3063\u3066\u7d42\u4e86\u6642\u306b\u5b9f\u4f53\u306f\u524a\u9664\u3055\u308c\u308b\u3002\n   */\n  (void) __unlink (buf);\n\n  if ((f = __fdopen (fd, \"w+b\")) == NULL)\n    __close (fd);\n\n  return f;\n}\n\n\n\nsourceware.org Git - glibc.git/blob - stdio-common/tmpfile.c\n\u306a\u304a\u3001\u3053\u3053\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b__gen_tempname\u95a2\u6570\u306f\u3001\u5f8c\u8ff0\u3059\u308bmkstemp(3)\u306e\u5b9f\u4f53\u3067\u3082\u3042\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001glibc\u306e\u5b9f\u88c5\u3067\u306f\u3001mkstemp(3)\u3092\u547c\u3073\u51fa\u3057\u305f\u5f8c\u306bunlink\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\n\nsysdeps/posix/tempname.c\nint\n__gen_tempname (char *tmpl, int suffixlen, int flags, int kind)\n{\n  /* \u4e2d\u7565 */\n\n  value += random_time_bits ^ __getpid ();\n\n  /* \u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u304copen\u3067\u304d\u308b\u307e\u3067\u30ea\u30c8\u30e9\u30a4\u3057\u3065\u3065\u3051\u308b */\n  for (count = 0; count < attempts; value += 7777, ++count)\n    {\n      uint64_t v = value;\n\n      /* Fill in the random bits.  */\n      XXXXXX[0] = letters[v % 62];\n      v /= 62;\n      /* \u4ee5\u4e0bXXXXXX[5]\u307e\u3067\u540c\u69d8\u306a\u306e\u3067\u7701\u7565 */\n\n\n      switch (kind)\n        {\n        case __GT_FILE:\n          fd = __open (tmpl,\n                       (flags & ~O_ACCMODE)\n                       | O_RDWR | O_CREAT | O_EXCL, S_IRUSR | S_IWUSR);\n          break;\n\n        case __GT_DIR:\n          /* \u7701\u7565 */\n\n        case __GT_NOCREATE:\n         /* \u7701\u7565 */\n\n        default:\n          assert (! \"invalid KIND in __gen_tempname\");\n          abort ();\n        }\n\n      /* oepn\u3067\u304d\u305f\u3089return\u3059\u308b */\n      if (fd >= 0)\n        {\n          __set_errno (save_errno);\n          return fd;\n        }\n      /* \u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b(EEXSIT)\u4ee5\u5916\u306eerror\u306freturn */\n      else if (errno != EEXIST)\n        return -1;\n    }\n\n  /* We got out of the loop because we ran out of combinations to try.  */\n  /* \u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3092\u8d85\u3048\u305f\u5834\u5408\u306f\u30a8\u30e9\u30fc */\n  __set_errno (EEXIST);\n  return -1;\n}\n\n\n\u4ee5\u4e0b\u306f\u3001tmpfile(3)\u3067\u53d6\u5f97\u3057\u305fFILE\u69cb\u9020\u4f53\u3092\u901a\u3057\u3066\u64cd\u4f5c\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <unistd.h>\n\nint\nmain(void)\n{\n\n    FILE *fp;\n    int fd;\n    struct stat stat_buf;\n    char str[] = \"foo\";\n    int c;\n\n    printf(\"pid => %ld\\n\", (long)getpid());\n\n    if ((fp = tmpfile()) == NULL){\n        perror(\"tmpfile\");\n        return EXIT_FAILURE;\n    }\n\n    fwrite(str, 1, sizeof(str), fp );\n    fflush(fp);\n    rewind(fp);\n\n    fd = fileno(fp);\n    if (fstat(fd, &stat_buf) == 0) {\n        printf(\"Created tempfile(inode) => %llu\\n\", stat_buf.st_ino);\n    } else {\n        perror(\"stat\");\n        return EXIT_FAILURE;\n    }\n\n    printf(\"Tempfile body => \");\n    while ((c = getc(fp)) != EOF) {\n        putc(c, stdout);\n    }\n    printf(\"\\n\");\n    fflush(stdout);\n\n    for(;;){}\n\n    fclose(fp);\n    return EXIT_SUCCESS;\n}\n\n\n\u306a\u304a\u3001tmpfile\u7528\u306b\u4e00\u610f\u306a\u30d1\u30b9\u540d\u3092\u751f\u6210\u3059\u308btmpnam(3)\u3068\u3044\u3046\u95a2\u6570\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306b\u3064\u3044\u3066\u306f\u8106\u5f31\u6027\u304c\u3042\u308b\u305f\u3081\u4f7f\u7528\u3092\u907f\u3051\u308b\u3088\u3046\u306b\u3001\u5192\u982d\u306e\u8cc7\u6599\u3067\u3082\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\ntmpnam(3): create name for temporary file - Linux man page\n\nmkstemp(3)\nmkstemp(3): create unique temporary file - Linux man page\nmkstemp(3)\u306f\u3001\u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u30d5\u30a1\u30a4\u30eb\u3092open\u3057\u307e\u3059\u3002tmpfile(3)\u3068\u7570\u306a\u308a\u3001open\u5f8c\u306bunlink\u3057\u306a\u3044\u305f\u3081\u3001\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u5916\u90e8\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u3059\u3057\u3001\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u5f8c\u3082\u524a\u9664\u3055\u308c\u307e\u305b\u3093\u3002\n\u5192\u982d\u306b\u793a\u3057\u305f\u8981\u4ef6\u306e\u3046\u3061\u30011. \u30e6\u30cb\u30fc\u30af\u3067\u63a8\u6e2c\u3057\u306b\u304f\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u751f\u6210\u3055\u308c\u308b\u306e\u307f\u3092\u6e80\u305f\u3059\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u660e\u793a\u7684\u306bunlink\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3001tmpfile(3)\u3068\u540c\u3058\u304f\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u5f8c\u306b\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n    /* \u4e00\u6642\u30d5\u30a1\u30a4\u30ebopen */\n    if ((fd = mkstemp(template)) < 0){\n        perror(\"mkstemp\");\n        return EXIT_FAILURE;\n    }\n\n    dosomething();\n\n    /* unlink\u3067\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u5f8c\u306b\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b */\n    unlink(template);\n\n\ntmpfile(3)\u3068\u7570\u306a\u308b\u70b9\u306f\u3001unlink\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u4efb\u610f\u306b\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u70b9\u3067\u3057\u3087\u3046\u3002mkstemp(3)\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u304a\u3044\u3066\u3001\u4f7f\u3044\u7d42\u308f\u3063\u305f\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067unlink\u3055\u305b\u308b\u3053\u3068\u3067\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u3067\u3082\u30d5\u30a1\u30a4\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3055\u305b\u3064\u3064\u3001\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u5f8c\u8ff0\u306eRuby\u306eTempfile\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u540c\u69d8\u306e\u554f\u984c\u3082\u767a\u751f\u3057\u3046\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u306a\u304a\u3001\u5f15\u6570\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u3072\u306a\u5f62\u3068\u306a\u308b\u6587\u5b57\u5217\u3092\u308f\u305f\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001foo_bar_XXXXXX\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u6e21\u3057\u305f\u5834\u5408\u3001XXXXXX\u304c\u4e00\u610f\u306b\u306a\u308b\u3088\u3046\u306b\u7f6e\u63db\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u5f15\u6570\u306fmkstemp(3)\u5074\u3067\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059(\u8a73\u7d30\u306f\u300c\u8a73\u89e3Unix\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u300d\u53c2\u7167)\u3002\nglibc\u306e\u5b9f\u88c5\u3067\u306f\u3001tmpfile(3)\u3067\u793a\u3057\u305f__gen_tempname\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\nmisc/mkstemp.c\nint\nmkstemps (template, suffixlen)\n     char *template;\n     int suffixlen;\n{\n  if (suffixlen < 0)\n    {\n      __set_errno (EINVAL);\n      return -1;\n    }\n\n  return __gen_tempname (template, suffixlen, 0, __GT_FILE);\n}\n\n\nsourceware.org Git - glibc.git/blob - misc/mkstemps.c\n\nRuby : Tempfile\nclass Tempfile\n\u4eca\u5ea6\u306f\u3001Ruby\u306eTempfile\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\ntmpfile(3)\u3068\u7570\u306a\u308a\u3001Ruby\u306eTempfile.open\u95a2\u6570\u306funlink\u3092\u547c\u3073\u51fa\u3057\u307e\u305b\u3093\u3002\n\u3067\u3059\u304c\u3001Tempfile.open\u3067\u751f\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u5192\u982d\u306b\u793a\u3057\u305f\u8981\u4ef6\u306e\u3046\u3061\u30011. \u30e6\u30cb\u30fc\u30af\u3067\u63a8\u6e2c\u3057\u306b\u304f\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u751f\u6210\u3055\u308c\u308b\u30682. \u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u308b\u3092\u6e80\u305f\u3059\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3055\u3066\u3001\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u56de\u53ce\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\u5b9f\u88c5\u3092\u306e\u305e\u3044\u3066\u307f\u308b\u3068\u3001Tempfile\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u3001ObjectScape.define_finalizer\u3092\u7528\u3044\u3066\u3001GC\u307e\u305f\u306f\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306bunlink\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\nlib/tempfile.rb\n  def initialize(basename, *rest)\n    if block_given?\n      warn \"Tempfile.new doesn't call the given block.\"\n    end\n    @data = []\n    @clean_proc = Remover.new(@data)\n    ObjectSpace.define_finalizer(self, @clean_proc)\n\n    # \u7565\n  end\n\n  class Remover\n\n    def call(*args)\n      return if @pid != $$ #\u5b50\u30d7\u30ed\u30bb\u30b9\u3067\u306f\u306a\u306b\u3082\u3057\u306a\u3044\n\n      path, tmpfile = *@data\n\n      STDERR.print \"removing \", path, \"...\" if $DEBUG\n\n      tmpfile.close if tmpfile\n\n      if path\n        begin\n          File.unlink(path) # \u3053\u3053\u3067unlink\n        rescue Errno::ENOENT\n        end\n      end\n\n      STDERR.print \"done\\n\" if $DEBUG\n    end\n  end\n\n\n\nruby/tempfile.rb at trunk \u00b7 ruby/ruby\nObjectScape.define_finalizer\u3067unlink\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001tmpfile(3)\u3068\u7570\u306a\u308a\u3001OS\u304cfd\u3092\u56de\u53ce\u3059\u308b\u6a5f\u69cb\u306b\u4f9d\u5b58\u3057\u3066\u3044\u306a\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\ndefine_finalizer\u3067\u767b\u9332\u3055\u308c\u305f\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u305a\u306b\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3057\u305f\u5834\u5408\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306f\u305d\u306e\u307e\u307e\u6b8b\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7528\u610f\u3057\u307e\u3059\u3002Tempfile.open\u3057\u3066\u5f97\u3089\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u51fa\u529b\u3057\u305f\u3042\u3068\u7121\u9650loop\u306b\u7a81\u5165\u3059\u308b\u3060\u3051\u306e\u7c21\u5358\u306a\u3082\u306e\u3067\u3059\u3002\n#!/usr/bin/env ruby\n\nrequire 'tempfile'\n\nputs \"RUBY_VERSION => #{RUBY_VERSION}\"\nputs \"uname => #{`uname -a`}\"\nputs \"pid => #{Process.pid}\"\n\n# Tempfile\u4f5c\u6210\nf = Tempfile.open(\"hoge\")\n\nf.write(\"foo\")\nf.flush\nf.rewind\n\nputs \"Created tempfile => #{f.path}\"\nputs \"Tempfile body => #{f.read}\"\n\n# \u5922\u5e7bLOOOOOOOOOOOOOOP\nloop do\nend\n\nf.close\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u8868\u793a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u8aad\u307f\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n# \u7aef\u672b\u305d\u306e1\u3067\u5b9f\u884c\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ ./tempfile_experiment1.rb\nRUBY_VERSION => 2.1.1\nuname => Darwin mbp-2.local 13.3.0 Darwin Kernel Version 13.3.0: Tue Jun  3 21:27:35 PDT 2014; root:xnu-2422.110.17~1/RELEASE_X86_64 x86_64\npid => 74791\nCreated tempfile => /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-74791-14fu29q\nTempfile body => foo\n\n\n# \u5225\u306a\u7aef\u672b\u305d\u306e2\u304b\u3089\u8aad\u307f\u8fbc\u307f\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ cat /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-74791-14fu29q\nfoo%\n\n# \u5225\u306a\u7aef\u672b\u304b\u3089SIGTERM\u3067\u7d42\u4e86\u3055\u305b\u308b\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ kill -TERM 74791\n\n# tempfile\u306f\u524a\u9664\u3055\u308c\u3066\u3044\u308b\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ cat /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-74791-14fu29q\ncat: /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-74791-14fu29q: No such file or directory\n\n\n\u3053\u3053\u3067\u3001SIGKILL\u3067\u30d7\u30ed\u30bb\u30b9\u3092\u6bba\u3057\u3066\u307f\u307e\u3059\u3002\n# \u7aef\u672b\u305d\u306e1\u3067\u5b9f\u884c\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ ./tempfile_experiment1.rb\nRUBY_VERSION => 2.1.1\nuname => Darwin mbp-2.local 13.3.0 Darwin Kernel Version 13.3.0: Tue Jun  3 21:27:35 PDT 2014; root:xnu-2422.110.17~1/RELEASE_X86_64 x86_64\npid => 75487\nCreated tempfile => /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-75487-10b4zyz\nTempfile body => foo\n\n# \u5225\u306a\u7aef\u672b\u305d\u306e2\u304b\u3089\u8aad\u307f\u8fbc\u307f\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ cat /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-75487-10b4zyz\nfoo%\n\n# \u5225\u306a\u7aef\u672b\u304b\u3089SIGKILL\u3067\u7d42\u4e86\u3055\u305b\u308b\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ kill -KILL 75487\n\n# tempfile\u306f\u6b8b\u3063\u3066\u3044\u308b\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ cat /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-75487-10b4zyz\nfoo%\n\nSIGKILL\u3067\u7d42\u4e86\u3055\u305b\u305f\u5834\u5408\u3001'ObjectScape.define_finalizer`\u3067\u767b\u9332\u3055\u308c\u305f\u51e6\u7406\u306f\u5b9f\u884c\u3055\u308c\u305a\u3001\u30d5\u30a1\u30a4\u30eb\u306f\u6b8b\u3063\u305f\u307e\u307e\u306b\u306a\u308a\u307e\u3059\u3002\nRuby\u3067\u306eTempfile\u3067\u3082\u3001\u660e\u793a\u7684\u306bunlink\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3001tmpfile(3)\u3068\u540c\u69d8\u306b\u3001\u78ba\u5b9f\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n#!/usr/bin/env ruby\n\nrequire 'tempfile'\n\nputs \"RUBY_VERSION => #{RUBY_VERSION}\"\nputs \"uname => #{`uname -a`}\"\nputs \"pid => #{Process.pid}\"\n\n# Tempfile\u4f5c\u6210\nf = Tempfile.open(\"hoge\")\n\nf.write(\"foo\")\nf.flush\nf.rewind\n\nputs \"Created tempfile => #{f.path}\"\n\nf.unlink # unlink\u3057\u3066\u304a\u304f\nputs 'unlink'\n\nputs \"Tempfile body => #{f.read}\"\n\n# \u5922\u5e7bLOOOOOOOOOOOOOOP\nloop do\nend\n\nf.close\n\n\u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3048\u306a\u304f\u306a\u308b\u4ee3\u308f\u308a\u306b\u3001\u78ba\u5b9f\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3082\u3061\u3083\u3093\u3068\u66f8\u304b\u308c\u3066\u3042\u308a\u307e\u3059\u3002\ninstance method Tempfile#delete\n\n\u307e\u3068\u3081\n\n\ntmpfile(3)\u307e\u305f\u306fmkstemp(3)\u3092\u4f7f\u304a\u3046\n\nunlink\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u308b\nRuby\u306eTempfile\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f\u3001\u30d7\u30ed\u30bb\u30b9\u304c\u7570\u5e38\u7d42\u4e86\u6642\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u6b8b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306b\u671f\u5f85\u3059\u308b\u8981\u4ef6\u3092\u6574\u7406\u3057\u3001\u9069\u5207\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u30fb\u95a2\u6570\u3092\u4f7f\u304a\u3046\u305e\u3044\n\nglibc\u3068Ruby\u3067\u306e\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306e\u305e\u3044\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4ed6\u306e\u8a00\u8a9e\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u306e\u304b\u8abf\u3079\u3066\u307f\u308b\u306e\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u300c\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u300d\u3092\u610f\u5473\u3059\u308b\u5909\u6570\u540d\u3092\u300ctmpFile\u300d\u306b\u3059\u308b\u306e\u3092\u3084\u3081\u308d\u3068\u3042\u308c\u307b\u3069\uff01\uff01\uff01\uff01\uff01\uff01\u2014 \u30d4\u30b6\u304c\u3063\u3071 (@erogappa) April 17, 2013\n\nEnjoy, tmpfile!!!\n\u4f55\u6c17\u306a\u304f\u4f7f\u3063\u3066\u308b\u4e00\u6642\u30d5\u30a1\u30a4\u30eb(tempfile)\u3067\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\u5c11\u3057\u5b9f\u88c5\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>\u30c6\u30b9\u30c8\u304c\u9ad8\u901f\u5316\u3055\u308c\u305f\u3053\u3068\u3067\u3001tmp file\u3092unixtime\u3067\u81ea\u524d\u751f\u6210\u3057\u3066\u3044\u305ftest case\u304c\u8ed2\u4e26\u307ffail\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u30c6\u30b9\u30c8\u7528\u306b\u751f\u6210\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306ftmpfile(3)\u4f7f\u3044\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u77e5\u898b</p>&mdash; \u2070\u2070\u2070\u2070null (@yuroyoro) <a href=\"https://twitter.com/yuroyoro/status/509895197371531265\">September 11,  2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n# \u4e00\u6642\u30d5\u30a1\u30a4\u30eb(tempfile)\u306b\u671f\u5f85\u3055\u308c\u308b\u6319\u52d5\n\n1. \u30e6\u30cb\u30fc\u30af\u3067\u63a8\u6e2c\u3057\u306b\u304f\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u751f\u6210\u3055\u308c\u308b\n1. \u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u308b\n1. \u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306f\u898b\u3048\u306a\u3044\n\n\u5b9f\u969b\u306b\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u969b\u306f\u3001\u3053\u308c\u3089\u306e\u8981\u4ef6\u306e\u3046\u3061\u306e\u3044\u304f\u3064\u304b\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u3053\u306e\u3088\u3046\u306a\u7279\u6027\u3092\u6301\u3064\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u901a\u5e38\u306f\u306a\u3093\u3089\u304b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u304b\u3001\u666e\u901a\u306bunixtime\u3092\u5143\u306b\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067`open`\u3057\u3066`write`\u3057\u3066\u3001\u4f7f\u3044\u7d42\u308f\u3063\u305f\u3089`close/unlink`\u3059\u308b\u3088\u3046\u306a\u7d20\u6734\u306a\u5b9f\u88c5\u306f\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u304c\u3001\u5229\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5b9f\u88c5\u3084\u4f7f\u3044\u65b9\u306b\u3088\u3063\u3066\u306f\u3001\u4e0a\u8a18\u306e\u8981\u4ef6\u5168\u3066\u3092\u6e80\u305f\u3055\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\n\u30bb\u30ad\u30e5\u30a2\u306btmpfile\u3092\u53d6\u308a\u6271\u3046\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u6587\u66f8\u3092\u898b\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n[IPA ISEC\u3000\u30bb\u30ad\u30e5\u30a2\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8b1b\u5ea7\uff1aC/C++\u8a00\u8a9e\u7de8\u3000\u7b2c7\u7ae0 \u30c7\u30fc\u30bf\u6f0f\u3048\u3044\u5bfe\u7b56\uff1a\u30c6\u30f3\u30dd\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\uff08Unix \u306e\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\uff09](https://www.ipa.go.jp/security/awareness/vendor/programmingv2/contents/c603.html)\n\n\u4e0a\u8a18\u306e\u6587\u66f8\u3067\u306f\u3001`mkstemp(3)` \u307e\u305f\u306f `tmpfile(3)`\u3092\u4f7f\u7528\u3059\u3079\u304d\u3001\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u304c\u3001\u3053\u306e\u95a2\u6570\u3092\u5229\u7528\u3057\u306a\u3044\u5b9f\u88c5\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5b58\u5728\u3057\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306fRuby\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e`Tempfile`\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u304c\u3001\u3053\u306e\u5b9f\u88c5\u3068ISO C\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u306f\u3001\u5f8c\u307b\u3069\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n# tmpfile(3)\n\n[tmpfile(3): create temporary file - Linux man page](http://linux.die.net/man/3/tmpfile)\n\n`tmpfile(3)`\u306f\u3001`1`\u3068`2`\u3068`3`\u306e\u3059\u3079\u3066\u306e\u8981\u4ef6\u3092\u6e80\u305f\u3057\u307e\u3059\u3002\u304c\u3001glibc\u306a\u3069\u306e\u30e1\u30b8\u30e3\u30fc\u306a\u5b9f\u88c5\u3067\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u3092`open`\u3057\u305f\u76f4\u5f8c\u306b`unlink`\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u5177\u4f53\u7684\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u5229\u7528\u8005\u304c\u77e5\u308b\u8853\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304c`read/write`\u3059\u308b\u3053\u3068\u3082\u4e0d\u53ef\u80fd\u3067\u3059\u3002\n\n`open`\u5f8c\u306b`unlink`\u3057\u3066\u3044\u307e\u3059\u304c\u3001`FILE`\u69cb\u9020\u4f53\u3092\u901a\u3057\u3066\u64cd\u4f5c\u3059\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3059\u3002\u660e\u793a\u7684\u306b`close`\u3059\u308b\u304b\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3059\u308b\u3053\u3068\u3067\u524a\u9664\u3055\u308c\u307e\u3059\u3002\n\nglibc\u306e\u5b9f\u88c5\u3092\u898b\u308b\u3068\u3001\u78ba\u304b\u306b\u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u751f\u6210\u3057\u3066`open`\u3057\u305f\u5f8c\u306b`unlink`\u3057\u3066\u3044\u307e\u3059\u3002\n\n```c:stdio-common/tmpfile.c\nFILE *\ntmpfile (void)\n{\n  char buf[FILENAME_MAX];\n  int fd;\n  FILE *f;\n\n  if (__path_search (buf, FILENAME_MAX, NULL, \"tmpf\", 0))\n    return NULL;\n  int flags = 0;\n#ifdef FLAGS\n  flags = FLAGS;\n#endif\n\n  /*\n     __gen_tempname\u306f\u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u751f\u6210\u3057\u3066open\u3059\u308b \u3002\n     KIND\u304c__GT_FILE\u306e\u5834\u5408\u306f\u3001open(O_CREAT|O_EXCL) \u3092\u7528\u3044\u308b\u306e\u3067\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u885d\u7a81\u306f\u306a\u3044\u3002\n   */\n  fd = __gen_tempname (buf, 0, flags, __GT_FILE);\n  if (fd < 0)\n    return NULL;\n\n  /* Note that this relies on the Unix semantics that\n     a file is not really removed until it is closed.\n\n     Unix\u74b0\u5883\u3067\u306f\u3001unlink\u3057\u305f\u3068\u3057\u3066\u3082\u5b9f\u969b\u306b\u524a\u9664\u3055\u308c\u308b\u306e\u306f\n     close\u3055\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3042\u308b\u3053\u3068\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\n     unlink\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306bos\u5074\u304cfd\u3092\n     \u56de\u53ce\u3057\u3066close\u3059\u308b\u3002\u3088\u3063\u3066\u7d42\u4e86\u6642\u306b\u5b9f\u4f53\u306f\u524a\u9664\u3055\u308c\u308b\u3002\n   */\n  (void) __unlink (buf);\n\n  if ((f = __fdopen (fd, \"w+b\")) == NULL)\n    __close (fd);\n\n  return f;\n}\n\n```\n\n[sourceware.org Git - glibc.git/blob - stdio-common/tmpfile.c](https://sourceware.org/git/?p=glibc.git;a=blob;f=stdio-common/tmpfile.c;h=022c2f650bc97ac467b5a5019552e6a6ae882c94;hb=HEAD)\n\n\u306a\u304a\u3001\u3053\u3053\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b`__gen_tempname`\u95a2\u6570\u306f\u3001\u5f8c\u8ff0\u3059\u308b`mkstemp(3)`\u306e\u5b9f\u4f53\u3067\u3082\u3042\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001glibc\u306e\u5b9f\u88c5\u3067\u306f\u3001`mkstemp(3)`\u3092\u547c\u3073\u51fa\u3057\u305f\u5f8c\u306b`unlink`\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\n\n```c:sysdeps/posix/tempname.c\nint\n__gen_tempname (char *tmpl, int suffixlen, int flags, int kind)\n{\n  /* \u4e2d\u7565 */\n\n  value += random_time_bits ^ __getpid ();\n\n  /* \u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u304copen\u3067\u304d\u308b\u307e\u3067\u30ea\u30c8\u30e9\u30a4\u3057\u3065\u3065\u3051\u308b */\n  for (count = 0; count < attempts; value += 7777, ++count)\n    {\n      uint64_t v = value;\n\n      /* Fill in the random bits.  */\n      XXXXXX[0] = letters[v % 62];\n      v /= 62;\n      /* \u4ee5\u4e0bXXXXXX[5]\u307e\u3067\u540c\u69d8\u306a\u306e\u3067\u7701\u7565 */\n\n\n      switch (kind)\n        {\n        case __GT_FILE:\n          fd = __open (tmpl,\n                       (flags & ~O_ACCMODE)\n                       | O_RDWR | O_CREAT | O_EXCL, S_IRUSR | S_IWUSR);\n          break;\n\n        case __GT_DIR:\n          /* \u7701\u7565 */\n\n        case __GT_NOCREATE:\n         /* \u7701\u7565 */\n\n        default:\n          assert (! \"invalid KIND in __gen_tempname\");\n          abort ();\n        }\n\n      /* oepn\u3067\u304d\u305f\u3089return\u3059\u308b */\n      if (fd >= 0)\n        {\n          __set_errno (save_errno);\n          return fd;\n        }\n      /* \u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b(EEXSIT)\u4ee5\u5916\u306eerror\u306freturn */\n      else if (errno != EEXIST)\n        return -1;\n    }\n\n  /* We got out of the loop because we ran out of combinations to try.  */\n  /* \u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3092\u8d85\u3048\u305f\u5834\u5408\u306f\u30a8\u30e9\u30fc */\n  __set_errno (EEXIST);\n  return -1;\n}\n```\n\n\u4ee5\u4e0b\u306f\u3001`tmpfile(3)`\u3067\u53d6\u5f97\u3057\u305f`FILE`\u69cb\u9020\u4f53\u3092\u901a\u3057\u3066\u64cd\u4f5c\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <unistd.h>\n\nint\nmain(void)\n{\n\n    FILE *fp;\n    int fd;\n    struct stat stat_buf;\n    char str[] = \"foo\";\n    int c;\n\n    printf(\"pid => %ld\\n\", (long)getpid());\n\n    if ((fp = tmpfile()) == NULL){\n        perror(\"tmpfile\");\n        return EXIT_FAILURE;\n    }\n\n    fwrite(str, 1, sizeof(str), fp );\n    fflush(fp);\n    rewind(fp);\n\n    fd = fileno(fp);\n    if (fstat(fd, &stat_buf) == 0) {\n        printf(\"Created tempfile(inode) => %llu\\n\", stat_buf.st_ino);\n    } else {\n        perror(\"stat\");\n        return EXIT_FAILURE;\n    }\n\n    printf(\"Tempfile body => \");\n    while ((c = getc(fp)) != EOF) {\n        putc(c, stdout);\n    }\n    printf(\"\\n\");\n    fflush(stdout);\n\n    for(;;){}\n\n    fclose(fp);\n    return EXIT_SUCCESS;\n}\n\n```\n\n\u306a\u304a\u3001tmpfile\u7528\u306b\u4e00\u610f\u306a\u30d1\u30b9\u540d\u3092\u751f\u6210\u3059\u308b`tmpnam(3)`\u3068\u3044\u3046\u95a2\u6570\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306b\u3064\u3044\u3066\u306f\u8106\u5f31\u6027\u304c\u3042\u308b\u305f\u3081\u4f7f\u7528\u3092\u907f\u3051\u308b\u3088\u3046\u306b\u3001\u5192\u982d\u306e\u8cc7\u6599\u3067\u3082\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n[tmpnam(3): create name for temporary file - Linux man page](http://linux.die.net/man/3/tmpnam)\n\n# mkstemp(3)\n\n[mkstemp(3): create unique temporary file - Linux man page](http://linux.die.net/man/3/mkstemp)\n\n`mkstemp(3)`\u306f\u3001\u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u30d5\u30a1\u30a4\u30eb\u3092open\u3057\u307e\u3059\u3002`tmpfile(3)`\u3068\u7570\u306a\u308a\u3001`open`\u5f8c\u306b`unlink`\u3057\u306a\u3044\u305f\u3081\u3001\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u5916\u90e8\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u3059\u3057\u3001\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u5f8c\u3082\u524a\u9664\u3055\u308c\u307e\u305b\u3093\u3002\n\u5192\u982d\u306b\u793a\u3057\u305f\u8981\u4ef6\u306e\u3046\u3061\u3001`1. \u30e6\u30cb\u30fc\u30af\u3067\u63a8\u6e2c\u3057\u306b\u304f\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u751f\u6210\u3055\u308c\u308b`\u306e\u307f\u3092\u6e80\u305f\u3059\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u660e\u793a\u7684\u306bunlink\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3001`tmpfile(3)`\u3068\u540c\u3058\u304f\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u5f8c\u306b\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```c\n\n    /* \u4e00\u6642\u30d5\u30a1\u30a4\u30ebopen */\n    if ((fd = mkstemp(template)) < 0){\n        perror(\"mkstemp\");\n        return EXIT_FAILURE;\n    }\n\n    dosomething();\n\n    /* unlink\u3067\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u5f8c\u306b\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b */\n    unlink(template);\n\n```\n\n`tmpfile(3)`\u3068\u7570\u306a\u308b\u70b9\u306f\u3001`unlink`\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u4efb\u610f\u306b\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u70b9\u3067\u3057\u3087\u3046\u3002`mkstemp(3)`\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u304a\u3044\u3066\u3001\u4f7f\u3044\u7d42\u308f\u3063\u305f\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067`unlink`\u3055\u305b\u308b\u3053\u3068\u3067\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u3067\u3082\u30d5\u30a1\u30a4\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3055\u305b\u3064\u3064\u3001\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u5f8c\u8ff0\u306eRuby\u306e`Tempfile`\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u540c\u69d8\u306e\u554f\u984c\u3082\u767a\u751f\u3057\u3046\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u306a\u304a\u3001\u5f15\u6570\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u3072\u306a\u5f62\u3068\u306a\u308b\u6587\u5b57\u5217\u3092\u308f\u305f\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001`foo_bar_XXXXXX`\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u6e21\u3057\u305f\u5834\u5408\u3001`XXXXXX`\u304c\u4e00\u610f\u306b\u306a\u308b\u3088\u3046\u306b\u7f6e\u63db\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u5f15\u6570\u306f`mkstemp(3)`\u5074\u3067\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059(\u8a73\u7d30\u306f\u300c\u8a73\u89e3Unix\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u300d\u53c2\u7167)\u3002\n\n\n\nglibc\u306e\u5b9f\u88c5\u3067\u306f\u3001`tmpfile(3)`\u3067\u793a\u3057\u305f`__gen_tempname`\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n```c:misc/mkstemp.c\nint\nmkstemps (template, suffixlen)\n     char *template;\n     int suffixlen;\n{\n  if (suffixlen < 0)\n    {\n      __set_errno (EINVAL);\n      return -1;\n    }\n\n  return __gen_tempname (template, suffixlen, 0, __GT_FILE);\n}\n```\n\n[sourceware.org Git - glibc.git/blob - misc/mkstemps.c](https://sourceware.org/git/?p=glibc.git;a=blob;f=misc/mkstemps.c;h=d58fce36da436c658c2475f10c6791b56d80c5ad;hb=HEAD)\n\n# Ruby : Tempfile\n\n[class Tempfile](http://docs.ruby-lang.org/ja/2.1.0/class/Tempfile.html)\n\n\n\u4eca\u5ea6\u306f\u3001Ruby\u306e`Tempfile`\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n`tmpfile(3)`\u3068\u7570\u306a\u308a\u3001Ruby\u306e`Tempfile.open`\u95a2\u6570\u306f`unlink`\u3092\u547c\u3073\u51fa\u3057\u307e\u305b\u3093\u3002\n\u3067\u3059\u304c\u3001`Tempfile.open`\u3067\u751f\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u5192\u982d\u306b\u793a\u3057\u305f\u8981\u4ef6\u306e\u3046\u3061\u3001`1. \u30e6\u30cb\u30fc\u30af\u3067\u63a8\u6e2c\u3057\u306b\u304f\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u751f\u6210\u3055\u308c\u308b`\u3068`2. \u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u308b`\u3092\u6e80\u305f\u3059\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3055\u3066\u3001\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u56de\u53ce\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\u5b9f\u88c5\u3092\u306e\u305e\u3044\u3066\u307f\u308b\u3068\u3001`Tempfile`\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u3001`ObjectScape.define_finalizer`\u3092\u7528\u3044\u3066\u3001GC\u307e\u305f\u306f\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b`unlink`\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n```ruby:lib/tempfile.rb\n  def initialize(basename, *rest)\n    if block_given?\n      warn \"Tempfile.new doesn't call the given block.\"\n    end\n    @data = []\n    @clean_proc = Remover.new(@data)\n    ObjectSpace.define_finalizer(self, @clean_proc)\n\n    # \u7565\n  end\n\n  class Remover\n\n    def call(*args)\n      return if @pid != $$ #\u5b50\u30d7\u30ed\u30bb\u30b9\u3067\u306f\u306a\u306b\u3082\u3057\u306a\u3044\n\n      path, tmpfile = *@data\n\n      STDERR.print \"removing \", path, \"...\" if $DEBUG\n\n      tmpfile.close if tmpfile\n\n      if path\n        begin\n          File.unlink(path) # \u3053\u3053\u3067unlink\n        rescue Errno::ENOENT\n        end\n      end\n\n      STDERR.print \"done\\n\" if $DEBUG\n    end\n  end\n\n```\n\n[ruby/tempfile.rb at trunk \u00b7 ruby/ruby](https://github.com/ruby/ruby/blob/trunk/lib/tempfile.rb#L133)\n\n`ObjectScape.define_finalizer`\u3067unlink\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001`tmpfile(3)`\u3068\u7570\u306a\u308a\u3001OS\u304cfd\u3092\u56de\u53ce\u3059\u308b\u6a5f\u69cb\u306b\u4f9d\u5b58\u3057\u3066\u3044\u306a\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n`define_finalizer`\u3067\u767b\u9332\u3055\u308c\u305f\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u305a\u306b\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3057\u305f\u5834\u5408\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306f\u305d\u306e\u307e\u307e\u6b8b\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7528\u610f\u3057\u307e\u3059\u3002`Tempfile.open`\u3057\u3066\u5f97\u3089\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u51fa\u529b\u3057\u305f\u3042\u3068\u7121\u9650loop\u306b\u7a81\u5165\u3059\u308b\u3060\u3051\u306e\u7c21\u5358\u306a\u3082\u306e\u3067\u3059\u3002\n\n```ruby\n#!/usr/bin/env ruby\n\nrequire 'tempfile'\n\nputs \"RUBY_VERSION => #{RUBY_VERSION}\"\nputs \"uname => #{`uname -a`}\"\nputs \"pid => #{Process.pid}\"\n\n# Tempfile\u4f5c\u6210\nf = Tempfile.open(\"hoge\")\n\nf.write(\"foo\")\nf.flush\nf.rewind\n\nputs \"Created tempfile => #{f.path}\"\nputs \"Tempfile body => #{f.read}\"\n\n# \u5922\u5e7bLOOOOOOOOOOOOOOP\nloop do\nend\n\nf.close\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u8868\u793a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u8aad\u307f\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n```\n# \u7aef\u672b\u305d\u306e1\u3067\u5b9f\u884c\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ ./tempfile_experiment1.rb\nRUBY_VERSION => 2.1.1\nuname => Darwin mbp-2.local 13.3.0 Darwin Kernel Version 13.3.0: Tue Jun  3 21:27:35 PDT 2014; root:xnu-2422.110.17~1/RELEASE_X86_64 x86_64\npid => 74791\nCreated tempfile => /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-74791-14fu29q\nTempfile body => foo\n\n\n# \u5225\u306a\u7aef\u672b\u305d\u306e2\u304b\u3089\u8aad\u307f\u8fbc\u307f\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ cat /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-74791-14fu29q\nfoo%\n\n# \u5225\u306a\u7aef\u672b\u304b\u3089SIGTERM\u3067\u7d42\u4e86\u3055\u305b\u308b\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ kill -TERM 74791\n\n# tempfile\u306f\u524a\u9664\u3055\u308c\u3066\u3044\u308b\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ cat /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-74791-14fu29q\ncat: /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-74791-14fu29q: No such file or directory\n\n```\n\n\u3053\u3053\u3067\u3001`SIGKILL`\u3067\u30d7\u30ed\u30bb\u30b9\u3092\u6bba\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n# \u7aef\u672b\u305d\u306e1\u3067\u5b9f\u884c\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ ./tempfile_experiment1.rb\nRUBY_VERSION => 2.1.1\nuname => Darwin mbp-2.local 13.3.0 Darwin Kernel Version 13.3.0: Tue Jun  3 21:27:35 PDT 2014; root:xnu-2422.110.17~1/RELEASE_X86_64 x86_64\npid => 75487\nCreated tempfile => /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-75487-10b4zyz\nTempfile body => foo\n\n# \u5225\u306a\u7aef\u672b\u305d\u306e2\u304b\u3089\u8aad\u307f\u8fbc\u307f\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ cat /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-75487-10b4zyz\nfoo%\n\n# \u5225\u306a\u7aef\u672b\u304b\u3089SIGKILL\u3067\u7d42\u4e86\u3055\u305b\u308b\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ kill -KILL 75487\n\n# tempfile\u306f\u6b8b\u3063\u3066\u3044\u308b\nozaki@mbp-2 ( \ua4aa\u2313\ua4aa) $ cat /var/folders/xz/mwpm_6qj439dlsmz0rp73bd40000gp/T/hoge20140911-75487-10b4zyz\nfoo%\n```\n\n`SIGKILL`\u3067\u7d42\u4e86\u3055\u305b\u305f\u5834\u5408\u3001'ObjectScape.define_finalizer`\u3067\u767b\u9332\u3055\u308c\u305f\u51e6\u7406\u306f\u5b9f\u884c\u3055\u308c\u305a\u3001\u30d5\u30a1\u30a4\u30eb\u306f\u6b8b\u3063\u305f\u307e\u307e\u306b\u306a\u308a\u307e\u3059\u3002\n\nRuby\u3067\u306e`Tempfile`\u3067\u3082\u3001\u660e\u793a\u7684\u306b`unlink`\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3001`tmpfile(3)`\u3068\u540c\u69d8\u306b\u3001\u78ba\u5b9f\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```ruby\n#!/usr/bin/env ruby\n\nrequire 'tempfile'\n\nputs \"RUBY_VERSION => #{RUBY_VERSION}\"\nputs \"uname => #{`uname -a`}\"\nputs \"pid => #{Process.pid}\"\n\n# Tempfile\u4f5c\u6210\nf = Tempfile.open(\"hoge\")\n\nf.write(\"foo\")\nf.flush\nf.rewind\n\nputs \"Created tempfile => #{f.path}\"\n\nf.unlink # unlink\u3057\u3066\u304a\u304f\nputs 'unlink'\n\nputs \"Tempfile body => #{f.read}\"\n\n# \u5922\u5e7bLOOOOOOOOOOOOOOP\nloop do\nend\n\nf.close\n```\n\n\u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3048\u306a\u304f\u306a\u308b\u4ee3\u308f\u308a\u306b\u3001\u78ba\u5b9f\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3082\u3061\u3083\u3093\u3068\u66f8\u304b\u308c\u3066\u3042\u308a\u307e\u3059\u3002\n\n[instance method Tempfile#delete](http://docs.ruby-lang.org/ja/1.9.3/method/Tempfile/i/delete.html)\n\n# \u307e\u3068\u3081\n\n\n- `tmpfile(3)`\u307e\u305f\u306f`mkstemp(3)`\u3092\u4f7f\u304a\u3046\n- `unlink`\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306b\u524a\u9664\u3055\u308c\u308b\n- Ruby\u306e`Tempfile`\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f\u3001\u30d7\u30ed\u30bb\u30b9\u304c\u7570\u5e38\u7d42\u4e86\u6642\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u6b8b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n- \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306b\u671f\u5f85\u3059\u308b\u8981\u4ef6\u3092\u6574\u7406\u3057\u3001\u9069\u5207\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u30fb\u95a2\u6570\u3092\u4f7f\u304a\u3046\u305e\u3044\n\nglibc\u3068Ruby\u3067\u306e\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306e\u305e\u3044\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4ed6\u306e\u8a00\u8a9e\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u306e\u304b\u8abf\u3079\u3066\u307f\u308b\u306e\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>\u300c\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u300d\u3092\u610f\u5473\u3059\u308b\u5909\u6570\u540d\u3092\u300ctmpFile\u300d\u306b\u3059\u308b\u306e\u3092\u3084\u3081\u308d\u3068\u3042\u308c\u307b\u3069\uff01\uff01\uff01\uff01\uff01\uff01</p>&mdash; \u30d4\u30b6\u304c\u3063\u3071 (@erogappa) <a href=\"https://twitter.com/erogappa/status/324410285236559872\">April 17, 2013</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nEnjoy, tmpfile!!!\n", "tags": ["UNIX", "Ruby"]}