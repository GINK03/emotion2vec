{"context": " More than 1 year has passed since last update.\u524d\u56de\u306e CoffeeScript \u306e\u5c0e\u5165\uff08\u21d2AngularJS\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092CoffeeScript\u3067\u66f8\u304f\u3088\uff09\u306b\u5f15\u304d\u7d9a\u304d\u3001\u4eca\u56de\u306f Haml \u3092 AngularJS \u306e\u958b\u767a\u74b0\u5883\u3078\u7d44\u307f\u8fbc\u3093\u3060\u969b\u306e\u30e1\u30e2\u3067\u3059\u3002\nHaml\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u3063\u304d\u308a\u3057\u305f\u69cb\u6587\u3067 HTML \u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306aHTML\u306f\u3001\n\nsample.html\n<section class=\u201dcontainer\u201d>\n  <h1><%= post.title %></h1>\n  <h2><%= post.subtitle %></h2>\n  <div class=\u201dcontent\u201d>\n    <%= post.content %>\n  </div>\n</section>\n\n\nHaml\u3067\u66f8\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\uff08\u4f8b\u306fHaml \u306e\u30b5\u30a4\u30c8\u304b\u3089\u5f15\u7528\uff09\u3002\n\nsample.haml\n%section.container\n  %h1= post.title\n  %h2= post.subtitle\n  .content\n    = post.content\n\n\nAngularJS\u306e\u958b\u767a\u74b0\u5883\u306b\u3001Grunt \u306e\u30d3\u30eb\u30c9\u30d7\u30ed\u30bb\u30b9\u542b\u3081\u3066\u5c0e\u5165\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u524d\u63d0\n\n\u74b0\u5883\u306f Mac OS \u3067\u3059\u3002\nYeoman \u304a\u3088\u3073 AngularJS\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf(generator-angular)\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\n\u3082\u3057 Yeoman \u3084 \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf \u3092\u307e\u3060\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044 \u2192 Yeoman \u3067 AngularJS \uff06 UI Bootstrap \u306e\u958b\u767a\u74b0\u5883\u69cb\u7bc9\n\n\n\u624b\u9806\n\n\u2460 Haml\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u307e\u305a gem \u30b3\u30de\u30f3\u30c9\u3067 Haml\u81ea\u4f53\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n# gem install haml\n\n\u3053\u308c\u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30d9\u30fc\u30b9\u3067 Haml \u304c\u5b9f\u884c\u3067\u304d\u308b\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u2461 AngularJS\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96db\u578b\u3092\u4f5c\u6210\n\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3064\u3044\u3067\u306b CoffeeScript \u3082\u5c0e\u5165\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\uff08\u3082\u3057\u4e0d\u8981\u306a\u3089 --coffee \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n$ yo angular --minsafe --coffee\n\n\n\u2462 \u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3078 grunt-haml \u3092\u5c0e\u5165\nHaml \u3092 Grunt \u3068\u9023\u52d5\u3055\u305b\u305f\u3044\u306e\u3067\u3001grunt-haml \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ npm install grunt-haml\n\n\u203b\u4eca\u56de\u306f\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3060\u3051\u306b\u9069\u7528\u3057\u305f\u3044\u306e\u3067 -g \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3064\u3051\u307e\u305b\u3093\u3002\n\u305d\u3046\u3059\u308b\u3068\u3001node_modules \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u3001\u6b21\u306e\u3088\u3046\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n\n\n\u2463 Grunt\u306e\u8a2d\u5b9a\u3092\u3059\u308b\n\u3061\u3087\u3063\u3068\u9577\u304f\u306a\u308a\u307e\u3059\u304c\u3001Gruntfile.js \u3067 \u6b21\u306e\u3088\u3046\u306b\uff15\u30ab\u6240\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\uff08+\u3067\u793a\u3057\u305f\u3068\u3053\u308d\u3067\u3059\u3002\uff09\n\nGruntfile.js\n// Generated on 2014-04-07 using generator-angular 0.7.1\n'use strict';\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n\n  // Load grunt tasks automatically\n  require('load-grunt-tasks')(grunt);\n\n  // Time how long tasks take. Can help when optimizing build times\n  require('time-grunt')(grunt);\n\n+  grunt.loadNpmTasks('grunt-haml');\n\n  // Define the configuration for all the tasks\n  grunt.initConfig({\n\n    // Project settings\n    yeoman: {\n      // configurable paths\n      app: require('./bower.json').appPath || 'app',\n      dist: 'dist'\n    },\n\n    // Watches files for changes and runs tasks based on the changed files\n    watch: {\n      coffee: {\n        files: ['<%= yeoman.app %>/scripts/{,*/}*.{coffee,litcoffee,coffee.md}'],\n        tasks: ['newer:coffee:dist']\n      },\n      coffeeTest: {\n        files: ['test/spec/{,*/}*.{coffee,litcoffee,coffee.md}'],\n        tasks: ['newer:coffee:test', 'karma']\n      },\n+      haml: {\n+        files: ['<%= yeoman.app %>/{,*/}*.haml'],\n+        tasks: ['haml']\n+      },\n      styles: {\n        files: ['<%= yeoman.app %>/styles/{,*/}*.css'],\n        tasks: ['newer:copy:styles', 'autoprefixer']\n      },\n      gruntfile: {\n        files: ['Gruntfile.js']\n      },\n      livereload: {\n        options: {\n          livereload: '<%= connect.options.livereload %>'\n        },\n        files: [\n          '<%= yeoman.app %>/{,*/}*.html',\n          '.tmp/styles/{,*/}*.css',\n          '.tmp/scripts/{,*/}*.js',\n          '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'\n        ]\n      }\n    },\n\n    // The actual grunt server settings\n    connect: {\n      options: {\n        port: 9000,\n        // Change this to '0.0.0.0' to access the server from outside.\n        hostname: 'localhost',\n        livereload: 35729\n      },\n      livereload: {\n        options: {\n          open: true,\n          base: [\n            '.tmp',\n            '<%= yeoman.app %>'\n          ]\n        }\n      },\n      test: {\n        options: {\n          port: 9001,\n          base: [\n            '.tmp',\n            'test',\n            '<%= yeoman.app %>'\n          ]\n        }\n      },\n      dist: {\n        options: {\n          base: '<%= yeoman.dist %>'\n        }\n      }\n    },\n\n    // Make sure code styles are up to par and there are no obvious mistakes\n    jshint: {\n      options: {\n        jshintrc: '.jshintrc',\n        reporter: require('jshint-stylish')\n      },\n      all: [\n        'Gruntfile.js'\n      ]\n    },\n\n    // Empties folders to start fresh\n    clean: {\n      dist: {\n        files: [{\n          dot: true,\n          src: [\n            '.tmp',\n            '<%= yeoman.dist %>/*',\n            '!<%= yeoman.dist %>/.git*'\n          ]\n        }]\n      },\n      server: '.tmp'\n    },\n\n    // Add vendor prefixed styles\n    autoprefixer: {\n      options: {\n        browsers: ['last 1 version']\n      },\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/styles/',\n          src: '{,*/}*.css',\n          dest: '.tmp/styles/'\n        }]\n      }\n    },\n\n    // Automatically inject Bower components into the app\n    'bower-install': {\n      app: {\n        html: '<%= yeoman.app %>/index.html',\n        ignorePath: '<%= yeoman.app %>/'\n      }\n    },\n\n\n    // Compiles CoffeeScript to JavaScript\n    coffee: {\n      options: {\n        sourceMap: true,\n        sourceRoot: ''\n      },\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/scripts',\n          src: '{,*/}*.coffee',\n          dest: '.tmp/scripts',\n          ext: '.js'\n        }]\n      },\n      test: {\n        files: [{\n          expand: true,\n          cwd: 'test/spec',\n          src: '{,*/}*.coffee',\n          dest: '.tmp/spec',\n          ext: '.js'\n        }]\n      }\n    },\n\n\n+    haml: {\n+      two: {\n+        files: grunt.file.expandMapping(['app/views/*.haml'], './',{\n+          rename: function(base, path) {\n+            return base + path.replace(/\\.haml$/, '.html');\n+          }\n+        }),\n+        options: {\n+          language: 'ruby'\n+        }\n+      }\n+    },\n\n\n    // Renames files for browser caching purposes\n    rev: {\n      dist: {\n        files: {\n          src: [\n            '<%= yeoman.dist %>/scripts/{,*/}*.js',\n            '<%= yeoman.dist %>/styles/{,*/}*.css',\n            '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}',\n            '<%= yeoman.dist %>/styles/fonts/*'\n          ]\n        }\n      }\n    },\n\n    // Reads HTML for usemin blocks to enable smart builds that automatically\n    // concat, minify and revision files. Creates configurations in memory so\n    // additional tasks can operate on them\n    useminPrepare: {\n      html: '<%= yeoman.app %>/index.html',\n      options: {\n        dest: '<%= yeoman.dist %>'\n      }\n    },\n\n    // Performs rewrites based on rev and the useminPrepare configuration\n    usemin: {\n      html: ['<%= yeoman.dist %>/{,*/}*.html'],\n      css: ['<%= yeoman.dist %>/styles/{,*/}*.css'],\n      options: {\n        assetsDirs: ['<%= yeoman.dist %>']\n      }\n    },\n\n    // The following *-min tasks produce minified files in the dist folder\n    imagemin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/images',\n          src: '{,*/}*.{png,jpg,jpeg,gif}',\n          dest: '<%= yeoman.dist %>/images'\n        }]\n      }\n    },\n    svgmin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/images',\n          src: '{,*/}*.svg',\n          dest: '<%= yeoman.dist %>/images'\n        }]\n      }\n    },\n    htmlmin: {\n      dist: {\n        options: {\n          collapseWhitespace: true,\n          collapseBooleanAttributes: true,\n          removeCommentsFromCDATA: true,\n          removeOptionalTags: true\n        },\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.dist %>',\n          src: ['*.html', 'views/{,*/}*.html'],\n          dest: '<%= yeoman.dist %>'\n        }]\n      }\n    },\n\n    // Allow the use of non-minsafe AngularJS files. Automatically makes it\n    // minsafe compatible so Uglify does not destroy the ng references\n    ngmin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/concat/scripts',\n          src: '*.js',\n          dest: '.tmp/concat/scripts'\n        }]\n      }\n    },\n\n    // Replace Google CDN references\n    cdnify: {\n      dist: {\n        html: ['<%= yeoman.dist %>/*.html']\n      }\n    },\n\n    // Copies remaining files to places other tasks can use\n    copy: {\n      dist: {\n        files: [{\n          expand: true,\n          dot: true,\n          cwd: '<%= yeoman.app %>',\n          dest: '<%= yeoman.dist %>',\n          src: [\n            '*.{ico,png,txt}',\n            '.htaccess',\n            '*.html',\n            'views/{,*/}*.html',\n            'bower_components/**/*',\n            'images/{,*/}*.{webp}',\n            'fonts/*'\n          ]\n        }, {\n          expand: true,\n          cwd: '.tmp/images',\n          dest: '<%= yeoman.dist %>/images',\n          src: ['generated/*']\n        }]\n      },\n      styles: {\n        expand: true,\n        cwd: '<%= yeoman.app %>/styles',\n        dest: '.tmp/styles/',\n        src: '{,*/}*.css'\n      }\n    },\n\n    // Run some tasks in parallel to speed up the build process\n    concurrent: {\n      server: [\n        'coffee:dist',\n+        'haml',\n        'copy:styles'\n      ],\n      test: [\n        'coffee',\n        'copy:styles'\n      ],\n      dist: [\n        'coffee',\n+        'haml',\n        'copy:styles',\n        'imagemin',\n        'svgmin'\n      ]\n    },\n\n    // By default, your `index.html`'s <!-- Usemin block --> will take care of\n    // minification. These next options are pre-configured if you do not wish\n    // to use the Usemin blocks.\n    // cssmin: {\n    //   dist: {\n    //     files: {\n    //       '<%= yeoman.dist %>/styles/main.css': [\n    //         '.tmp/styles/{,*/}*.css',\n    //         '<%= yeoman.app %>/styles/{,*/}*.css'\n    //       ]\n    //     }\n    //   }\n    // },\n    // uglify: {\n    //   dist: {\n    //     files: {\n    //       '<%= yeoman.dist %>/scripts/scripts.js': [\n    //         '<%= yeoman.dist %>/scripts/scripts.js'\n    //       ]\n    //     }\n    //   }\n    // },\n    // concat: {\n    //   dist: {}\n    // },\n\n    // Test settings\n    karma: {\n      unit: {\n        configFile: 'karma.conf.js',\n        singleRun: true\n      }\n    }\n\n  });\n\n\n  grunt.registerTask('serve', function (target) {\n    if (target === 'dist') {\n      return grunt.task.run(['build', 'connect:dist:keepalive']);\n    }\n\n    grunt.task.run([\n      'clean:server',\n      'bower-install',\n      'concurrent:server',\n      'autoprefixer',\n      'connect:livereload',\n      'watch'\n    ]);\n  });\n\n  grunt.registerTask('server', function () {\n    grunt.log.warn('The `server` task has been deprecated. Use `grunt serve` to start a server.');\n    grunt.task.run(['serve']);\n  });\n\n  grunt.registerTask('test', [\n    'clean:server',\n    'concurrent:test',\n    'autoprefixer',\n    'connect:test',\n    'karma'\n  ]);\n\n  grunt.registerTask('build', [\n    'clean:dist',\n    'bower-install',\n    'useminPrepare',\n    'concurrent:dist',\n    'autoprefixer',\n    'concat',\n    'ngmin',\n    'copy:dist',\n    'cdnify',\n    'cssmin',\n    'uglify',\n    'rev',\n    'usemin',\n    'htmlmin'\n  ]);\n\n  grunt.registerTask('default', [\n    'newer:jshint',\n    'test',\n    'build'\n  ]);\n};\n\n\n\n\u5909\u66f4\u7b87\u6240\u306e\u8aac\u660e\uff1a\n\n\n\uff11\u30ab\u6240\u76ee\n\n\n\ngrunt-haml\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n\n\uff12\u30ab\u6240\u76ee\n\n\n\u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u306e\u76e3\u8996\u3067\u3059\u3002.haml \u30d5\u30a1\u30a4\u30eb\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u30bf\u30b9\u30af\u3092\u8d70\u3089\u305b\u307e\u3059\u3002\n\n\n\uff13\u30ab\u6240\u76ee\n\n\ngrunt-haml \u306e\u5909\u63db\u8a2d\u5b9a\u3067\u3059\u3002\u4efb\u610f\u306e .haml \u30d5\u30a1\u30a4\u30eb\u3092\u540c\u540d\u306e .html \u30d5\u30a1\u30a4\u30eb\u3078\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\n\u30d1\u30b9\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3053\u3092\u9069\u5f53\u306b\u5909\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\n\uff14\u30ab\u6240\u76ee\n\n\n\n$ grunt serve \u3057\u305f\u6642\u306b grunt-haml \u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\n\n\uff15\u30ab\u6240\u76ee\n\n\n\n$ grunt build \u3057\u305f\u6642\u306b grunt-haml \u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\n\n\n\n\n\u4ee5\u4e0a\u3067\u5c0e\u5165\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n\u8a66\u3057\u3066\u307f\u308b\n\n\nmain.coffee \u3092\u898b\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u7279\u306b\u5909\u66f4\u305b\u305a\u306b\u3001\u3053\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b awesomeThings(\u914d\u5217) \u306e\u5024\u3092\u3001\u30d6\u30e9\u30a6\u30b6\u3078\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n\napp/scripts/controllers/main.coffee\n'use strict'\n\nangular.module('hamlTest2App')\n  .controller 'MainCtrl', ['$scope', ($scope) ->\n    $scope.awesomeThings = [\n      'HTML5 Boilerplate'\n      'AngularJS'\n      'Karma'\n    ]\n  ]\n\n\n\nHaml \u306e\u8a18\u6cd5\u306b\u5f93\u3063\u3066\u3001main.haml \u3092\u6b21\u306e\u3088\u3046\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n\napp/views/main.haml\n%div{\"ng-controller\" => \"MainCtrl\"}\n  %span{\"ng-repeat\" => \"awe in awesomeThings\"}\n    {{awe}}\n    %br\n\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067 $ grunt serve \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u30d6\u30e9\u30a6\u30b6\u3078\u5148\u307b\u3069\u306e\u6587\u5b57\u5217\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u898b\u3066\u307f\u308b\u3068\u3001main.haml \u3068\u540c\u4e00\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b main.html \u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\napp/views/main.html\n<div ng-controller='MainCtrl'>\n<span ng-repeat='awe in awesomeThings'>\n{{awe}}\n<br>\n</span>\n</div>\n\n\n\n\u88dc\u8db3\n\ngrunt-haml \u4ee5\u5916\u306b grunt-contrib-haml\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u300c\u4efb\u610f\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u300d\u306e .haml \u30d5\u30a1\u30a4\u30eb\u3092 .html \u30d5\u30a1\u30a4\u30eb\u3078\u5909\u63db\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u305a\u3001\u3053\u3063\u3061\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nHaml \u3092\u5c0e\u5165\u3057\u305f\u304b\u3089\u3068\u3044\u3063\u3066\u3001\u5168\u3066\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 Haml\u5f62\u5f0f\u3067\u66f8\u304b\u306a\u304b\u308c\u3070\u306a\u3089\u306a\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002HTML\u5f62\u5f0f\u306e\u307e\u307e\u306e\u65b9\u304c\u90fd\u5408\u304c\u826f\u3044\u5834\u5408\u306f\u3001.haml \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3089\u306a\u3051\u308c\u3070\u3044\u3044\u3060\u3051\u3067\u3059\u3002\n\u3044\u307e\u3055\u3089\u3067\u3059\u304c\u3001\u306a\u3093\u3068\u306a\u304f AngularJS \u306e\u5834\u5408\u3001Haml \u3067\u66f8\u3044\u3066\u3082\u8a18\u8ff0\u91cf\u304c\u6e1b\u3089\u306a\u3044\u3088\u3046\u306a..\n\n\nHaml \u3067 class= \u3092\u7701\u7565\u3067\u304d\u3066\u3082\u3001\u305d\u3082\u305d\u3082\u4f7f\u308f\u306a\u3044\u306e\u3067..\n\u66f8\u304d\u65b9\u304c\u60aa\u3044\u306e\u304b\u306a\u3002\u3082\u3046\u3061\u3087\u3044\u691c\u8a3c\u3057\u3066\u307f\u307e\u3059^^;\n\n\n\n\n\u524d\u56de\u306e CoffeeScript \u306e\u5c0e\u5165\uff08\u21d2[AngularJS\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092CoffeeScript\u3067\u66f8\u304f\u3088](http://qiita.com/hkusu/items/e7d4ef58626cdda22a59)\uff09\u306b\u5f15\u304d\u7d9a\u304d\u3001\u4eca\u56de\u306f [Haml](http://haml.info) \u3092 AngularJS \u306e\u958b\u767a\u74b0\u5883\u3078\u7d44\u307f\u8fbc\u3093\u3060\u969b\u306e\u30e1\u30e2\u3067\u3059\u3002\n\nHaml\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u3063\u304d\u308a\u3057\u305f\u69cb\u6587\u3067 HTML \u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306aHTML\u306f\u3001\n\n```:sample.html\n<section class=\u201dcontainer\u201d>\n  <h1><%= post.title %></h1>\n  <h2><%= post.subtitle %></h2>\n  <div class=\u201dcontent\u201d>\n    <%= post.content %>\n  </div>\n</section>\n```\n\nHaml\u3067\u66f8\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\uff08\u4f8b\u306f[Haml](http://haml.info) \u306e\u30b5\u30a4\u30c8\u304b\u3089\u5f15\u7528\uff09\u3002\n\n```html:sample.haml\n%section.container\n  %h1= post.title\n  %h2= post.subtitle\n  .content\n    = post.content\n```\n\nAngularJS\u306e\u958b\u767a\u74b0\u5883\u306b\u3001Grunt \u306e\u30d3\u30eb\u30c9\u30d7\u30ed\u30bb\u30b9\u542b\u3081\u3066\u5c0e\u5165\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u524d\u63d0\n\n- \u74b0\u5883\u306f Mac OS \u3067\u3059\u3002\n- Yeoman \u304a\u3088\u3073 AngularJS\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf(generator-angular)\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n> \u3082\u3057 Yeoman \u3084 \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf \u3092\u307e\u3060\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044 \u2192 [Yeoman \u3067 AngularJS \uff06 UI Bootstrap \u306e\u958b\u767a\u74b0\u5883\u69cb\u7bc9](http://qiita.com/hkusu/items/7d748b55ba73cc8a3675)\n\n## \u624b\u9806\n\n### \u2460 Haml\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u307e\u305a gem \u30b3\u30de\u30f3\u30c9\u3067 Haml\u81ea\u4f53\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\n# gem install haml\n```\n\n\u3053\u308c\u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30d9\u30fc\u30b9\u3067 Haml \u304c\u5b9f\u884c\u3067\u304d\u308b\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n### \u2461 AngularJS\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96db\u578b\u3092\u4f5c\u6210\n\n\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3064\u3044\u3067\u306b CoffeeScript \u3082\u5c0e\u5165\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\uff08\u3082\u3057\u4e0d\u8981\u306a\u3089 `--coffee` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n\n```\n$ yo angular --minsafe --coffee\n```\n\n### \u2462 \u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3078 grunt-haml \u3092\u5c0e\u5165\n\nHaml \u3092 Grunt \u3068\u9023\u52d5\u3055\u305b\u305f\u3044\u306e\u3067\u3001[grunt-haml](https://github.com/concordusapps/grunt-haml) \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\n$ npm install grunt-haml\n```\n\n\u203b\u4eca\u56de\u306f\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3060\u3051\u306b\u9069\u7528\u3057\u305f\u3044\u306e\u3067 `-g` \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3064\u3051\u307e\u305b\u3093\u3002\n\n\u305d\u3046\u3059\u308b\u3068\u3001`node_modules` \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u3001\u6b21\u306e\u3088\u3046\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-04-07 23.32.51.png](https://qiita-image-store.s3.amazonaws.com/0/35733/4eb2364b-761a-d915-c0df-aaf364c09647.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-04-07 23.32.51.png\")\n\n### \u2463 Grunt\u306e\u8a2d\u5b9a\u3092\u3059\u308b\n\n\u3061\u3087\u3063\u3068\u9577\u304f\u306a\u308a\u307e\u3059\u304c\u3001`Gruntfile.js` \u3067 \u6b21\u306e\u3088\u3046\u306b\uff15\u30ab\u6240\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\uff08+\u3067\u793a\u3057\u305f\u3068\u3053\u308d\u3067\u3059\u3002\uff09\n\n```diff:Gruntfile.js\n// Generated on 2014-04-07 using generator-angular 0.7.1\n'use strict';\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n\n  // Load grunt tasks automatically\n  require('load-grunt-tasks')(grunt);\n\n  // Time how long tasks take. Can help when optimizing build times\n  require('time-grunt')(grunt);\n\n+  grunt.loadNpmTasks('grunt-haml');\n\n  // Define the configuration for all the tasks\n  grunt.initConfig({\n\n    // Project settings\n    yeoman: {\n      // configurable paths\n      app: require('./bower.json').appPath || 'app',\n      dist: 'dist'\n    },\n\n    // Watches files for changes and runs tasks based on the changed files\n    watch: {\n      coffee: {\n        files: ['<%= yeoman.app %>/scripts/{,*/}*.{coffee,litcoffee,coffee.md}'],\n        tasks: ['newer:coffee:dist']\n      },\n      coffeeTest: {\n        files: ['test/spec/{,*/}*.{coffee,litcoffee,coffee.md}'],\n        tasks: ['newer:coffee:test', 'karma']\n      },\n+      haml: {\n+        files: ['<%= yeoman.app %>/{,*/}*.haml'],\n+        tasks: ['haml']\n+      },\n      styles: {\n        files: ['<%= yeoman.app %>/styles/{,*/}*.css'],\n        tasks: ['newer:copy:styles', 'autoprefixer']\n      },\n      gruntfile: {\n        files: ['Gruntfile.js']\n      },\n      livereload: {\n        options: {\n          livereload: '<%= connect.options.livereload %>'\n        },\n        files: [\n          '<%= yeoman.app %>/{,*/}*.html',\n          '.tmp/styles/{,*/}*.css',\n          '.tmp/scripts/{,*/}*.js',\n          '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'\n        ]\n      }\n    },\n\n    // The actual grunt server settings\n    connect: {\n      options: {\n        port: 9000,\n        // Change this to '0.0.0.0' to access the server from outside.\n        hostname: 'localhost',\n        livereload: 35729\n      },\n      livereload: {\n        options: {\n          open: true,\n          base: [\n            '.tmp',\n            '<%= yeoman.app %>'\n          ]\n        }\n      },\n      test: {\n        options: {\n          port: 9001,\n          base: [\n            '.tmp',\n            'test',\n            '<%= yeoman.app %>'\n          ]\n        }\n      },\n      dist: {\n        options: {\n          base: '<%= yeoman.dist %>'\n        }\n      }\n    },\n\n    // Make sure code styles are up to par and there are no obvious mistakes\n    jshint: {\n      options: {\n        jshintrc: '.jshintrc',\n        reporter: require('jshint-stylish')\n      },\n      all: [\n        'Gruntfile.js'\n      ]\n    },\n\n    // Empties folders to start fresh\n    clean: {\n      dist: {\n        files: [{\n          dot: true,\n          src: [\n            '.tmp',\n            '<%= yeoman.dist %>/*',\n            '!<%= yeoman.dist %>/.git*'\n          ]\n        }]\n      },\n      server: '.tmp'\n    },\n\n    // Add vendor prefixed styles\n    autoprefixer: {\n      options: {\n        browsers: ['last 1 version']\n      },\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/styles/',\n          src: '{,*/}*.css',\n          dest: '.tmp/styles/'\n        }]\n      }\n    },\n\n    // Automatically inject Bower components into the app\n    'bower-install': {\n      app: {\n        html: '<%= yeoman.app %>/index.html',\n        ignorePath: '<%= yeoman.app %>/'\n      }\n    },\n\n\n    // Compiles CoffeeScript to JavaScript\n    coffee: {\n      options: {\n        sourceMap: true,\n        sourceRoot: ''\n      },\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/scripts',\n          src: '{,*/}*.coffee',\n          dest: '.tmp/scripts',\n          ext: '.js'\n        }]\n      },\n      test: {\n        files: [{\n          expand: true,\n          cwd: 'test/spec',\n          src: '{,*/}*.coffee',\n          dest: '.tmp/spec',\n          ext: '.js'\n        }]\n      }\n    },\n\n\n+    haml: {\n+      two: {\n+        files: grunt.file.expandMapping(['app/views/*.haml'], './',{\n+          rename: function(base, path) {\n+            return base + path.replace(/\\.haml$/, '.html');\n+          }\n+        }),\n+        options: {\n+          language: 'ruby'\n+        }\n+      }\n+    },\n\n\n    // Renames files for browser caching purposes\n    rev: {\n      dist: {\n        files: {\n          src: [\n            '<%= yeoman.dist %>/scripts/{,*/}*.js',\n            '<%= yeoman.dist %>/styles/{,*/}*.css',\n            '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}',\n            '<%= yeoman.dist %>/styles/fonts/*'\n          ]\n        }\n      }\n    },\n\n    // Reads HTML for usemin blocks to enable smart builds that automatically\n    // concat, minify and revision files. Creates configurations in memory so\n    // additional tasks can operate on them\n    useminPrepare: {\n      html: '<%= yeoman.app %>/index.html',\n      options: {\n        dest: '<%= yeoman.dist %>'\n      }\n    },\n\n    // Performs rewrites based on rev and the useminPrepare configuration\n    usemin: {\n      html: ['<%= yeoman.dist %>/{,*/}*.html'],\n      css: ['<%= yeoman.dist %>/styles/{,*/}*.css'],\n      options: {\n        assetsDirs: ['<%= yeoman.dist %>']\n      }\n    },\n\n    // The following *-min tasks produce minified files in the dist folder\n    imagemin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/images',\n          src: '{,*/}*.{png,jpg,jpeg,gif}',\n          dest: '<%= yeoman.dist %>/images'\n        }]\n      }\n    },\n    svgmin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/images',\n          src: '{,*/}*.svg',\n          dest: '<%= yeoman.dist %>/images'\n        }]\n      }\n    },\n    htmlmin: {\n      dist: {\n        options: {\n          collapseWhitespace: true,\n          collapseBooleanAttributes: true,\n          removeCommentsFromCDATA: true,\n          removeOptionalTags: true\n        },\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.dist %>',\n          src: ['*.html', 'views/{,*/}*.html'],\n          dest: '<%= yeoman.dist %>'\n        }]\n      }\n    },\n\n    // Allow the use of non-minsafe AngularJS files. Automatically makes it\n    // minsafe compatible so Uglify does not destroy the ng references\n    ngmin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/concat/scripts',\n          src: '*.js',\n          dest: '.tmp/concat/scripts'\n        }]\n      }\n    },\n\n    // Replace Google CDN references\n    cdnify: {\n      dist: {\n        html: ['<%= yeoman.dist %>/*.html']\n      }\n    },\n\n    // Copies remaining files to places other tasks can use\n    copy: {\n      dist: {\n        files: [{\n          expand: true,\n          dot: true,\n          cwd: '<%= yeoman.app %>',\n          dest: '<%= yeoman.dist %>',\n          src: [\n            '*.{ico,png,txt}',\n            '.htaccess',\n            '*.html',\n            'views/{,*/}*.html',\n            'bower_components/**/*',\n            'images/{,*/}*.{webp}',\n            'fonts/*'\n          ]\n        }, {\n          expand: true,\n          cwd: '.tmp/images',\n          dest: '<%= yeoman.dist %>/images',\n          src: ['generated/*']\n        }]\n      },\n      styles: {\n        expand: true,\n        cwd: '<%= yeoman.app %>/styles',\n        dest: '.tmp/styles/',\n        src: '{,*/}*.css'\n      }\n    },\n\n    // Run some tasks in parallel to speed up the build process\n    concurrent: {\n      server: [\n        'coffee:dist',\n+        'haml',\n        'copy:styles'\n      ],\n      test: [\n        'coffee',\n        'copy:styles'\n      ],\n      dist: [\n        'coffee',\n+        'haml',\n        'copy:styles',\n        'imagemin',\n        'svgmin'\n      ]\n    },\n\n    // By default, your `index.html`'s <!-- Usemin block --> will take care of\n    // minification. These next options are pre-configured if you do not wish\n    // to use the Usemin blocks.\n    // cssmin: {\n    //   dist: {\n    //     files: {\n    //       '<%= yeoman.dist %>/styles/main.css': [\n    //         '.tmp/styles/{,*/}*.css',\n    //         '<%= yeoman.app %>/styles/{,*/}*.css'\n    //       ]\n    //     }\n    //   }\n    // },\n    // uglify: {\n    //   dist: {\n    //     files: {\n    //       '<%= yeoman.dist %>/scripts/scripts.js': [\n    //         '<%= yeoman.dist %>/scripts/scripts.js'\n    //       ]\n    //     }\n    //   }\n    // },\n    // concat: {\n    //   dist: {}\n    // },\n\n    // Test settings\n    karma: {\n      unit: {\n        configFile: 'karma.conf.js',\n        singleRun: true\n      }\n    }\n\n  });\n\n\n  grunt.registerTask('serve', function (target) {\n    if (target === 'dist') {\n      return grunt.task.run(['build', 'connect:dist:keepalive']);\n    }\n\n    grunt.task.run([\n      'clean:server',\n      'bower-install',\n      'concurrent:server',\n      'autoprefixer',\n      'connect:livereload',\n      'watch'\n    ]);\n  });\n\n  grunt.registerTask('server', function () {\n    grunt.log.warn('The `server` task has been deprecated. Use `grunt serve` to start a server.');\n    grunt.task.run(['serve']);\n  });\n\n  grunt.registerTask('test', [\n    'clean:server',\n    'concurrent:test',\n    'autoprefixer',\n    'connect:test',\n    'karma'\n  ]);\n\n  grunt.registerTask('build', [\n    'clean:dist',\n    'bower-install',\n    'useminPrepare',\n    'concurrent:dist',\n    'autoprefixer',\n    'concat',\n    'ngmin',\n    'copy:dist',\n    'cdnify',\n    'cssmin',\n    'uglify',\n    'rev',\n    'usemin',\n    'htmlmin'\n  ]);\n\n  grunt.registerTask('default', [\n    'newer:jshint',\n    'test',\n    'build'\n  ]);\n};\n```\n\n- \u5909\u66f4\u7b87\u6240\u306e\u8aac\u660e\uff1a\n\t- \uff11\u30ab\u6240\u76ee\n\t\t- `grunt-haml`\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\t- \uff12\u30ab\u6240\u76ee\n\t\t- \u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u306e\u76e3\u8996\u3067\u3059\u3002`.haml` \u30d5\u30a1\u30a4\u30eb\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u30bf\u30b9\u30af\u3092\u8d70\u3089\u305b\u307e\u3059\u3002\n\t- \uff13\u30ab\u6240\u76ee\n\t\t- grunt-haml \u306e\u5909\u63db\u8a2d\u5b9a\u3067\u3059\u3002\u4efb\u610f\u306e `.haml` \u30d5\u30a1\u30a4\u30eb\u3092\u540c\u540d\u306e `.html` \u30d5\u30a1\u30a4\u30eb\u3078\u51fa\u529b\u3057\u307e\u3059\u3002\n\t\t\t- \u30d1\u30b9\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3053\u3092\u9069\u5f53\u306b\u5909\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\t- \uff14\u30ab\u6240\u76ee\n\t\t- `$ grunt serve` \u3057\u305f\u6642\u306b grunt-haml \u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\t- \uff15\u30ab\u6240\u76ee\n\t\t- `$ grunt build` \u3057\u305f\u6642\u306b grunt-haml \u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u5c0e\u5165\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n## \u8a66\u3057\u3066\u307f\u308b\n\n- `main.coffee` \u3092\u898b\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u7279\u306b\u5909\u66f4\u305b\u305a\u306b\u3001\u3053\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b `awesomeThings(\u914d\u5217)` \u306e\u5024\u3092\u3001\u30d6\u30e9\u30a6\u30b6\u3078\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n```javascript:app/scripts/controllers/main.coffee\n'use strict'\n\nangular.module('hamlTest2App')\n  .controller 'MainCtrl', ['$scope', ($scope) ->\n    $scope.awesomeThings = [\n      'HTML5 Boilerplate'\n      'AngularJS'\n      'Karma'\n    ]\n  ]\n```\n\n- Haml \u306e\u8a18\u6cd5\u306b\u5f93\u3063\u3066\u3001`main.haml` \u3092\u6b21\u306e\u3088\u3046\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```javascript:app/views/main.haml\n%div{\"ng-controller\" => \"MainCtrl\"}\n  %span{\"ng-repeat\" => \"awe in awesomeThings\"}\n    {{awe}}\n    %br\n```\n\n- \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067 `$ grunt serve` \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u30d6\u30e9\u30a6\u30b6\u3078\u5148\u307b\u3069\u306e\u6587\u5b57\u5217\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-04-08 11.33.15.png](https://qiita-image-store.s3.amazonaws.com/0/35733/a0d5a3dd-67a9-0cd3-fef8-18afdfaddf8b.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-04-08 11.33.15.png\")\n\n- \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u898b\u3066\u307f\u308b\u3068\u3001`main.haml` \u3068\u540c\u4e00\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b `main.html` \u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```html:app/views/main.html\n<div ng-controller='MainCtrl'>\n<span ng-repeat='awe in awesomeThings'>\n{{awe}}\n<br>\n</span>\n</div>\n```\n\n## \u88dc\u8db3\n\n- grunt-haml \u4ee5\u5916\u306b [grunt-contrib-haml](https://github.com/jhchen/grunt-contrib-haml)\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u300c\u4efb\u610f\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u300d\u306e `.haml` \u30d5\u30a1\u30a4\u30eb\u3092 `.html` \u30d5\u30a1\u30a4\u30eb\u3078\u5909\u63db\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u305a\u3001\u3053\u3063\u3061\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n- Haml \u3092\u5c0e\u5165\u3057\u305f\u304b\u3089\u3068\u3044\u3063\u3066\u3001\u5168\u3066\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 Haml\u5f62\u5f0f\u3067\u66f8\u304b\u306a\u304b\u308c\u3070\u306a\u3089\u306a\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002HTML\u5f62\u5f0f\u306e\u307e\u307e\u306e\u65b9\u304c\u90fd\u5408\u304c\u826f\u3044\u5834\u5408\u306f\u3001`.haml` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3089\u306a\u3051\u308c\u3070\u3044\u3044\u3060\u3051\u3067\u3059\u3002\n- \u3044\u307e\u3055\u3089\u3067\u3059\u304c\u3001\u306a\u3093\u3068\u306a\u304f AngularJS \u306e\u5834\u5408\u3001Haml \u3067\u66f8\u3044\u3066\u3082\u8a18\u8ff0\u91cf\u304c\u6e1b\u3089\u306a\u3044\u3088\u3046\u306a..\n\t- Haml \u3067 `class=` \u3092\u7701\u7565\u3067\u304d\u3066\u3082\u3001\u305d\u3082\u305d\u3082\u4f7f\u308f\u306a\u3044\u306e\u3067..\n\t- \u66f8\u304d\u65b9\u304c\u60aa\u3044\u306e\u304b\u306a\u3002\u3082\u3046\u3061\u3087\u3044\u691c\u8a3c\u3057\u3066\u307f\u307e\u3059^^;\n", "tags": ["yeoman", "grunt", "AngularJS", "haml", "JavaScript"]}