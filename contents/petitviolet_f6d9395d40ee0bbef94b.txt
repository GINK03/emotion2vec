{"context": " More than 1 year has passed since last update.RxJava\u306eAndroid\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u3042\u308bRxAndroid\u3092\u4f7f\u3044\u59cb\u3081\u3066Backpressure\u3067\u306f\u307e\u3063\u305f\u306e\u3067\u6574\u7406\nretrolambda\u3067lambda\u5f0f\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u4f7f\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u9069\u5b9cnew\u3059\u308b\u30b3\u30fc\u30c9\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\nBackpressure\nBackpressure \u00b7 ReactiveX/RxJava Wiki\n\u901a\u4fe1\u51e6\u7406\u306bRxJava\u4f7f\u3063\u305f\u6642\u306b\u3001\nSystem.err\ufe55 rx.exceptions.MissingBackpressureException\n\n\u307f\u305f\u3044\u306a\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u306e\u5bfe\u7b56\n\n\u554f\u984c\u306e\u3042\u308b\u30b3\u30fc\u30c9\n\u901a\u4fe1\u90e8\u5206\u306f\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\n\nClient.java\npublic Observable<Item> get() {\n    return Observable.create(subscriber -> {\n        subscriber.onStart();\n        List<Object> items = // \u901a\u4fe1\n        for (int i = 0; i < items.size(); i++) {\n            Item item = // parse\u3059\u308b\n            subscriber.onNext(Item);\n        }\n        subscriber.onCompleted();\n    });\n}\n\n\n\u4f55\u304b\u901a\u4fe1\u3057\u3066\u53d6\u3063\u3066\u304d\u3066\u30d1\u30fc\u30b9\u3057\u3066Item\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3057\u3066\u304b\u3089subscriber#onNext\u3067subscriber\u306b\u8fd4\u3059\u3001\u3068\u3044\u3046\u6d41\u308c\n\u3053\u308c\u3092subscribe\u3059\u308b\u5074\u306f\u3053\u3093\u306a\u611f\u3058\n\nMainActivity.java\nprivate void fetchItems(String url) {\n    new Client(url).get()\n            .subscribeOn(Schedulers.io())\n            .observeOn(AndroidSchedulers.mainThread())\n            .subscribe(\n                    this::setResult,\n                    Throwable::printStackTrace,\n                    () -> Log.d(TAG, \"complete\"));\n}\n\nprivate void setResult(Item item) {\n    // \u901a\u4fe1\u7d50\u679c\u3092\u4f55\u304b\u3059\u308b\n}\n\n\nio\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u4fe1\u3057\u3066\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067setResult\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3001\u3068\u3044\u3046\u6d41\u308c\n\u3053\u308c\u3060\u3068\u4e0a\u306b\u3082\u4e0a\u3052\u305f\u3088\u3046\u306a\u30a8\u30e9\u30fc\u306estacktrace\u304c\u8868\u793a\u3055\u308c\u305f\nW/System.err\ufe55 rx.exceptions.MissingBackpressureException\nW/System.err\ufe55 at rx.internal.util.RxRingBuffer.onNext(RxRingBuffer.java:338)\nW/System.err\ufe55 at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.onNext(OperatorObserveOn.java:115)\nW/System.err\ufe55 at rx.internal.operators.OperatorSubscribeOn$1$1$1.onNext(OperatorSubscribeOn.java:76)\n\n\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308b\u30c7\u30fc\u30bf\u306b\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u306e\u51e6\u7406\u304c\u9593\u306b\u5408\u3063\u3066\u306a\u3044\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3060\u3068\u601d\u3046\n\n\u89e3\u6c7a\u7b56\nRxJava Wiki\u306b\u3082\u3042\u308b\u3088\u3046\u306b\u3044\u304f\u3064\u304b\u89e3\u6c7a\u7b56\u304c\u3042\u3063\u305f\nnew Client(url).get()\n        .onBackpressureBuffer() // \u3053\u3053\n        .subscribeOn(Schedulers.io())\n        .observeOn(AndroidSchedulers.mainThread())\n        // .onBackpressureBuffer() \u3053\u3053\u3060\u3068\u30c0\u30e1\n        .subscribe(/** \u306a\u306b\u304b\u51e6\u7406 **/);\n\n\u3053\u306e\u4f8b\u306e\u3088\u3046\u306bonBackpressureBuffer\u3084\u305d\u306e\u4ed6onBackpressureDrop\u3001onBackpressureBlock\u306a\u3069\u3092\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3067call\u3059\u308b\u3068\u3044\u3044\u611f\u3058\u306b\u5b8c\u4e86\u3067\u304d\u308b\n\n\nonBackpressureBuffer\n\n\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u306e\u901a\u77e5\u3092\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3059\u308b\n\n\n\nonBackpressureDrop\n\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u306e\u51e6\u7406\u4e2d\u306b\u306f\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u901a\u77e5\u305b\u305a\u306b\u6368\u3066\u308b\n\n\n\nonBackpressureBlock\n\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306e\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u51e6\u7406\u3092\u4e00\u6642\u505c\u6b62\u3055\u305b\u308b\n\n\n\n\u7406\u89e3\u304c\u3084\u3084\u66d6\u6627\u3067\u3059\u304c\u3001\u3053\u3093\u306a\u611f\u3058\u306e\u306f\u305a\nobserveOn\u3088\u308a\u524d\u306bcall\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u70b9\u306b\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\n\nRxJava\u306eAndroid\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u3042\u308b[RxAndroid](https://github.com/ReactiveX/RxAndroid)\u3092\u4f7f\u3044\u59cb\u3081\u3066Backpressure\u3067\u306f\u307e\u3063\u305f\u306e\u3067\u6574\u7406\n[retrolambda](https://github.com/orfjackal/retrolambda)\u3067lambda\u5f0f\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u4f7f\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u9069\u5b9c`new`\u3059\u308b\u30b3\u30fc\u30c9\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\n# Backpressure\n\n[Backpressure \u00b7 ReactiveX/RxJava Wiki](https://github.com/ReactiveX/RxJava/wiki/Backpressure)\n\n\u901a\u4fe1\u51e6\u7406\u306bRxJava\u4f7f\u3063\u305f\u6642\u306b\u3001\n\n```\nSystem.err\ufe55 rx.exceptions.MissingBackpressureException\n```\n\n\u307f\u305f\u3044\u306a\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u306e\u5bfe\u7b56\n\n## \u554f\u984c\u306e\u3042\u308b\u30b3\u30fc\u30c9\n\n\u901a\u4fe1\u90e8\u5206\u306f\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\n\n```java:Client.java\npublic Observable<Item> get() {\n    return Observable.create(subscriber -> {\n        subscriber.onStart();\n        List<Object> items = // \u901a\u4fe1\n        for (int i = 0; i < items.size(); i++) {\n            Item item = // parse\u3059\u308b\n            subscriber.onNext(Item);\n        }\n        subscriber.onCompleted();\n    });\n}\n```\n\n\u4f55\u304b\u901a\u4fe1\u3057\u3066\u53d6\u3063\u3066\u304d\u3066\u30d1\u30fc\u30b9\u3057\u3066`Item`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3057\u3066\u304b\u3089`subscriber#onNext`\u3067subscriber\u306b\u8fd4\u3059\u3001\u3068\u3044\u3046\u6d41\u308c\n\u3053\u308c\u3092`subscribe`\u3059\u308b\u5074\u306f\u3053\u3093\u306a\u611f\u3058\n\n```java:MainActivity.java\nprivate void fetchItems(String url) {\n\tnew Client(url).get()\n    \t    .subscribeOn(Schedulers.io())\n\t        .observeOn(AndroidSchedulers.mainThread())\n    \t    .subscribe(\n    \t    \t\tthis::setResult,\n    \t    \t\tThrowable::printStackTrace,\n    \t    \t\t() -> Log.d(TAG, \"complete\"));\n}\n\nprivate void setResult(Item item) {\n    // \u901a\u4fe1\u7d50\u679c\u3092\u4f55\u304b\u3059\u308b\n}\n```\n\nio\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u4fe1\u3057\u3066\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067`setResult`\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3001\u3068\u3044\u3046\u6d41\u308c\n\u3053\u308c\u3060\u3068\u4e0a\u306b\u3082\u4e0a\u3052\u305f\u3088\u3046\u306a\u30a8\u30e9\u30fc\u306estacktrace\u304c\u8868\u793a\u3055\u308c\u305f\n\n```\nW/System.err\ufe55 rx.exceptions.MissingBackpressureException\nW/System.err\ufe55 at rx.internal.util.RxRingBuffer.onNext(RxRingBuffer.java:338)\nW/System.err\ufe55 at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.onNext(OperatorObserveOn.java:115)\nW/System.err\ufe55 at rx.internal.operators.OperatorSubscribeOn$1$1$1.onNext(OperatorSubscribeOn.java:76)\n```\n\n\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308b\u30c7\u30fc\u30bf\u306b\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u306e\u51e6\u7406\u304c\u9593\u306b\u5408\u3063\u3066\u306a\u3044\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3060\u3068\u601d\u3046\n\n# \u89e3\u6c7a\u7b56\n\n[RxJava Wiki](https://github.com/ReactiveX/RxJava/wiki/Backpressure)\u306b\u3082\u3042\u308b\u3088\u3046\u306b\u3044\u304f\u3064\u304b\u89e3\u6c7a\u7b56\u304c\u3042\u3063\u305f\n\n```java\nnew Client(url).get()\n\t\t.onBackpressureBuffer() // \u3053\u3053\n   \t    .subscribeOn(Schedulers.io())\n        .observeOn(AndroidSchedulers.mainThread())\n        // .onBackpressureBuffer() \u3053\u3053\u3060\u3068\u30c0\u30e1\n   \t    .subscribe(/** \u306a\u306b\u304b\u51e6\u7406 **/);\n```\n\n\u3053\u306e\u4f8b\u306e\u3088\u3046\u306b`onBackpressureBuffer`\u3084\u305d\u306e\u4ed6`onBackpressureDrop`\u3001`onBackpressureBlock`\u306a\u3069\u3092\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3067call\u3059\u308b\u3068\u3044\u3044\u611f\u3058\u306b\u5b8c\u4e86\u3067\u304d\u308b\n\n- `onBackpressureBuffer`\n\t- \u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u306e\u901a\u77e5\u3092\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3059\u308b\n- `onBackpressureDrop`\n\t- \u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u306e\u51e6\u7406\u4e2d\u306b\u306f\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u901a\u77e5\u305b\u305a\u306b\u6368\u3066\u308b\n- `onBackpressureBlock`\n\t- \u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306e\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u51e6\u7406\u3092\u4e00\u6642\u505c\u6b62\u3055\u305b\u308b\n\n\u7406\u89e3\u304c\u3084\u3084\u66d6\u6627\u3067\u3059\u304c\u3001\u3053\u3093\u306a\u611f\u3058\u306e\u306f\u305a\n`observeOn`\u3088\u308a\u524d\u306bcall\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u70b9\u306b\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\n", "tags": ["Android", "RxJava"]}