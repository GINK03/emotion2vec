{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\nDjango1.7 + MySQL5.5\u4ee5\u4e0a\u3067\u3001utf8mb4\u3092\u4f7f\u3046\n\n\u666e\u901a\u306b\u3084\u308b\u3068\n\nsettings.py\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'hoge',\n        'USER': 'hoge',\n        'OPTIONS': {\n            'charset': 'utf8mb4',\n        }\n    }\n}\n\n\n\nmodels.py\nfrom django.db import models\n\nclass User(models.Model):\n    screen_name = models.CharField(max_length=255, unique=True)\n\n\nDjango1.7\u7cfb\u304b\u3089Migration\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066Model\u3092\u5b9a\u7fa9\u3059\u308b\n\ncreate-db\ncreate database hoge DEFAULT CHARSET utf8mb4;\n\n\n\nshell\n$ python manage.py makemigrations\n$ python manage.py migrate\n\n> django.db.utils.OperationalError: (1709, 'Index column size too large. The maximum column size is 767 bytes.')\n\n\n\u3088\u304f\u3042\u308b\u3001InnoDB\u306eindex size\u306e\u554f\u984c\u3067\u3042\u308b\n\n\u89e3\u6c7a\u6cd5\nhttp://blog.kamipo.net/entry/2012/11/13/102024\n\u3053\u306e\u8fba\u306b\u3042\u308b\u3088\u3046\u306binnodb_large_prefix\u3092\u4f7f\u3046\u306e\u304c\u826f\u3055\u3052\n\nmy.cnf\n[client]\ndefault-character-set = utf8mb4\n\n[mysqld]\ncharacter-set-server = utf8mb4\ninnodb_file_format = Barracuda\ninnodb_file_per_table = 1\ninnodb_large_prefix\n\n\n\u3057\u304b\u3057\u3001ROW_FORMAT\u306f\u3069\u3046\u3084\u3063\u3066\u6307\u5b9a\u3059\u308b\u3093\u3084\n\nROW_FORMAT\u6307\u5b9a\u65b9\u6cd5\u305d\u306e\uff11\nhttp://qiita.com/miyagi389/items/ffc9918fd8ef2f2a1a45\n\u3057\u304b\u3057\u3001\u3053\u308c\u3067\u306fmigrations\u3067\u4f5c\u3063\u305fModel\u306b\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\uff01\uff01\n\nROW_FORMAT\u6307\u5b9a\u65b9\u6cd5\u305d\u306e2\n\nmanage.py\n#!/usr/bin/env python\n# coding: utf-8\nfrom __future__ import unicode_literals\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"testapp.settings\")\n\n    from django.db.backends.mysql.schema import DatabaseSchemaEditor\n    DatabaseSchemaEditor.sql_create_table += \" ROW_FORMAT=DYNAMIC\"\n\n    from django.core.management import execute_from_command_line\n\n    execute_from_command_line(sys.argv)\n\n\nmigrate\u3067\u3082ROW_FORMAT=DYNAMIC\u304c\u9069\u7528\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3088\uff01\n\n\u88dc\u8db3\nDjango\u306b\u7d44\u307f\u8fbc\u3080\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3088\u3063\u3066\u306f\u3001\nmigration\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3001\u4e21\u65b9\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3068\u3088\u3055\u3052\n# \u76ee\u7684\nDjango1.7 + MySQL5.5\u4ee5\u4e0a\u3067\u3001utf8mb4\u3092\u4f7f\u3046\n\n# \u666e\u901a\u306b\u3084\u308b\u3068\n```py:settings.py\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'hoge',\n        'USER': 'hoge',\n        'OPTIONS': {\n            'charset': 'utf8mb4',\n        }\n    }\n}\n```\n```py:models.py\nfrom django.db import models\n\nclass User(models.Model):\n    screen_name = models.CharField(max_length=255, unique=True)\n```\n\nDjango1.7\u7cfb\u304b\u3089Migration\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066Model\u3092\u5b9a\u7fa9\u3059\u308b\n\n```sql:create-db\ncreate database hoge DEFAULT CHARSET utf8mb4;\n```\n\n```shell-session:shell\n$ python manage.py makemigrations\n$ python manage.py migrate\n\n> django.db.utils.OperationalError: (1709, 'Index column size too large. The maximum column size is 767 bytes.')\n```\n\u3088\u304f\u3042\u308b\u3001InnoDB\u306eindex size\u306e\u554f\u984c\u3067\u3042\u308b\n\n# \u89e3\u6c7a\u6cd5\nhttp://blog.kamipo.net/entry/2012/11/13/102024\n\u3053\u306e\u8fba\u306b\u3042\u308b\u3088\u3046\u306b`innodb_large_prefix`\u3092\u4f7f\u3046\u306e\u304c\u826f\u3055\u3052\n\n```my.cnf\n[client]\ndefault-character-set = utf8mb4\n\n[mysqld]\ncharacter-set-server = utf8mb4\ninnodb_file_format = Barracuda\ninnodb_file_per_table = 1\ninnodb_large_prefix\n```\n\u3057\u304b\u3057\u3001ROW_FORMAT\u306f\u3069\u3046\u3084\u3063\u3066\u6307\u5b9a\u3059\u308b\u3093\u3084\n\n## ROW_FORMAT\u6307\u5b9a\u65b9\u6cd5\u305d\u306e\uff11\nhttp://qiita.com/miyagi389/items/ffc9918fd8ef2f2a1a45\n\n\u3057\u304b\u3057\u3001\u3053\u308c\u3067\u306fmigrations\u3067\u4f5c\u3063\u305fModel\u306b\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\uff01\uff01\n\n## ROW_FORMAT\u6307\u5b9a\u65b9\u6cd5\u305d\u306e2\n```py:manage.py\n#!/usr/bin/env python\n# coding: utf-8\nfrom __future__ import unicode_literals\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"testapp.settings\")\n\n    from django.db.backends.mysql.schema import DatabaseSchemaEditor\n    DatabaseSchemaEditor.sql_create_table += \" ROW_FORMAT=DYNAMIC\"\n\n    from django.core.management import execute_from_command_line\n\n    execute_from_command_line(sys.argv)\n```\nmigrate\u3067\u3082ROW_FORMAT=DYNAMIC\u304c\u9069\u7528\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3088\uff01\n\n# \u88dc\u8db3\nDjango\u306b\u7d44\u307f\u8fbc\u3080\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3088\u3063\u3066\u306f\u3001\nmigration\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3001\u4e21\u65b9\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3068\u3088\u3055\u3052\n", "tags": ["Django", "MySQL", "Python"]}