{"context": " More than 1 year has passed since last update.\n\n\u6761\u4ef6\u30af\u30e9\u30b9(ExpectedConditions)\nSelenium\u3067\u300c\u7279\u5b9a\u306e\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u308b\u307e\u3067\u5f85\u6a5f\u3059\u308b\u300d\u3092\u3088\u304f\u4f7f\u3044\u307e\u3059\u3002\nlocator\u304c\u898b\u3048\u308b\u307e\u3067\u5f85\u6a5f\u3059\u308b\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u7c21\u5358\u3002\n\nTest.cs\npublic void WaitUntilElementIsVisible(By locator)\n{\n    wait.Until(ExpectedConditions.ElementIsVisible(locator));\n}\n\n\n\nlocator\u304c\u898b\u3048\u306a\u304f\u306a\u308b\u6761\u4ef6\u30af\u30e9\u30b9\nC#\u7248\u3060\u3068\u6761\u4ef6\u30af\u30e9\u30b9(ExpectedConditions)\u304c\u8ca7\u76f8\u306a\u306e\u3067\u3001\u65b0\u305f\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u203bJava\u306b\u306fnot(ExpectedCondition)\u30e1\u30bd\u30c3\u30c9\u304c\u3044\u308b\u306e\u3067\u4e0d\u8981\u3067\u3059\u3002\uff08Java: ExpectedConditions\uff09\n\nExpectedConditionsEx.cs\npublic static Func<IWebDriver, IWebElement> ElementIsInvisible(By locator)\n{\n    return (driver) =>\n    {\n        try\n        {\n            // \u63a2\u3059\n            ReadOnlyCollection<IWebElement> elements = driver.FindElements(locator);\n\n            // \u898b\u3048\u3066\u308b\u8981\u7d20\u306b\u7d5e\u308a\u8fbc\u3080\n            List<IWebElement> result = elements.Where(e => e.Displayed).ToList();\n\n            // \u306a\u304f\u306a\u308b or \u5168\u90e8\u898b\u3048\u306a\u304f\u306a\u308b\u306f\u305a\n            if (result.Count == 0)\n                // \u30c0\u30df\u30fc\u3068\u3057\u3066\u30da\u30fc\u30b8\u306e\u30eb\u30fc\u30c8\u8981\u7d20\u3092\u8fd4\u3059\n                return driver.FindElement(By.CssSelector(\":root\"));\n            else\n                return null;\n        }\n        catch (StaleElementReferenceException)\n        {\n            return null;\n        }\n    };\n}\n\n\n\nExpectedConditions.ElementIsInvisible\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3044\u3066\u3082\u3088\u3044\u3068\u601d\u3046\u3002\nC#: ExpectedConditions\n\n\u6761\u4ef6\u3092\u3072\u3063\u304f\u308a\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9 Not(ExpectedCondition)\u3000\n\u6761\u4ef6\u3092\u5426\u5b9a\u3057\u3066True/False\u3092\u5165\u308c\u66ff\u3048\u308b\u30e1\u30bd\u30c3\u30c9\nJava\u306eNot(ExpectedCondition)\u3092C#\u3067\u3082\u4f5c\u308c\u3070\u826f\u3044\u306e\u3067\u306f\u3002\n\nExpectedConditionsEx.cs\npublic static Func<IWebDriver, IWebElement> Not(Func<IWebDriver, IWebElement> condition)\n{\n    return (driver) =>\n    {\n        IWebElement e = condition.Invoke(driver);\n        return e == null ? driver.FindElement(By.CssSelector(\":root\")) : null;\n    };\n}\n\npublic static Func<IWebDriver, bool> Not(Func<IWebDriver, bool> condition)\n{\n    return (driver) => !condition.Invoke(driver);\n}\n\n\n\n\n\u30da\u30fc\u30b8\u304c\u30ed\u30fc\u30c9\u3055\u308c\u308b\u307e\u3067\u5f85\u3064\n\u6307\u5b9a\u3055\u308c\u305f\u30bf\u30a4\u30c8\u30eb\u304c\u73fe\u308c\u308b\u307e\u3067\u5f85\u3061\u3001\u51e6\u7406\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u4fbf\u5229\u3002\n\nExpectedConditionsEx.cs\npublic static Func<IWebDriver, bool> TitleIs(string title)\n{\n    return (driver) =>\n    {\n        try\n        {\n            return driver.Title == title;\n        }\n        catch (Exception)\n        {\n            return false;\n        }\n    };\n}\n\npublic static Func<IWebDriver, bool> TitleStartsWith(string title)\n{\n    return (driver) =>\n    {\n        try\n        {\n            return driver.Title.StartsWith(title);\n        }\n        catch (Exception)\n        {\n            return false;\n        }\n    };\n}\n\n\n\n\u30a2\u30e9\u30fc\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u5f85\u3064\n\u203b\u30d6\u30e9\u30af\u30e9\u8907\u6570\u30a2\u30e9\u30fc\u30c8\u72b6\u614b\u3067\u4f7f\u3046\u3068\u3001\u304a\u305d\u3089\u304f\u60f3\u5b9a\u901a\u308a\u306b\u52d5\u304d\u307e\u305b\u3093\u3002\n\nExpectedConditionsEx.cs\npublic static Func<IWebDriver, bool> AlertIsVisible()\n{\n    return (driver) =>\n    {\n        try\n        {\n            driver.SwitchTo().Alert();\n            return true;\n        }\n        catch (NoAlertPresentException)\n        {\n            return false;\n        }\n    };\n}\n\n\n\n\u96d1\u611f\n\u30c0\u30df\u30fc\u306eIWebElement\u3092\u8fd4\u3059\u306b\u306f\u4f55\u304c\u826f\u3044\u306e\u3060\u308d\u3046\u3002\n##\u6761\u4ef6\u30af\u30e9\u30b9(ExpectedConditions)\nSelenium\u3067\u300c\u7279\u5b9a\u306e\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u308b\u307e\u3067\u5f85\u6a5f\u3059\u308b\u300d\u3092\u3088\u304f\u4f7f\u3044\u307e\u3059\u3002\nlocator\u304c\u898b\u3048\u308b\u307e\u3067\u5f85\u6a5f\u3059\u308b\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u7c21\u5358\u3002\n\n```csharp:Test.cs\npublic void WaitUntilElementIsVisible(By locator)\n{\n    wait.Until(ExpectedConditions.ElementIsVisible(locator));\n}\n```\n\n##locator\u304c\u898b\u3048\u306a\u304f\u306a\u308b\u6761\u4ef6\u30af\u30e9\u30b9\nC#\u7248\u3060\u3068\u6761\u4ef6\u30af\u30e9\u30b9(ExpectedConditions)\u304c\u8ca7\u76f8\u306a\u306e\u3067\u3001\u65b0\u305f\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u203bJava\u306b\u306fnot(ExpectedCondition)\u30e1\u30bd\u30c3\u30c9\u304c\u3044\u308b\u306e\u3067\u4e0d\u8981\u3067\u3059\u3002\uff08[Java: ExpectedConditions](http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/support/ui/ExpectedConditions.html)\uff09\n\n```csharp:ExpectedConditionsEx.cs\npublic static Func<IWebDriver, IWebElement> ElementIsInvisible(By locator)\n{\n    return (driver) =>\n    {\n        try\n        {\n            // \u63a2\u3059\n            ReadOnlyCollection<IWebElement> elements = driver.FindElements(locator);\n            \n            // \u898b\u3048\u3066\u308b\u8981\u7d20\u306b\u7d5e\u308a\u8fbc\u3080\n            List<IWebElement> result = elements.Where(e => e.Displayed).ToList();\n            \n            // \u306a\u304f\u306a\u308b or \u5168\u90e8\u898b\u3048\u306a\u304f\u306a\u308b\u306f\u305a\n            if (result.Count == 0)\n                // \u30c0\u30df\u30fc\u3068\u3057\u3066\u30da\u30fc\u30b8\u306e\u30eb\u30fc\u30c8\u8981\u7d20\u3092\u8fd4\u3059\n                return driver.FindElement(By.CssSelector(\":root\"));\n            else\n                return null;\n        }\n        catch (StaleElementReferenceException)\n        {\n            return null;\n        }\n    };\n}\n\n```\nExpectedConditions.ElementIsInvisible\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3044\u3066\u3082\u3088\u3044\u3068\u601d\u3046\u3002\n[C#: ExpectedConditions](http://selenium.googlecode.com/svn/trunk/docs/api/dotnet/html/AllMembers_T_OpenQA_Selenium_Support_UI_ExpectedConditions.htm)\n\n\n\n##\u6761\u4ef6\u3092\u3072\u3063\u304f\u308a\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9 Not(ExpectedCondition)\u3000\n\u6761\u4ef6\u3092\u5426\u5b9a\u3057\u3066True/False\u3092\u5165\u308c\u66ff\u3048\u308b\u30e1\u30bd\u30c3\u30c9\nJava\u306eNot(ExpectedCondition)\u3092C#\u3067\u3082\u4f5c\u308c\u3070\u826f\u3044\u306e\u3067\u306f\u3002\n\n```csharp:ExpectedConditionsEx.cs\npublic static Func<IWebDriver, IWebElement> Not(Func<IWebDriver, IWebElement> condition)\n{\n    return (driver) =>\n    {\n        IWebElement e = condition.Invoke(driver);\n        return e == null ? driver.FindElement(By.CssSelector(\":root\")) : null;\n    };\n}\n\npublic static Func<IWebDriver, bool> Not(Func<IWebDriver, bool> condition)\n{\n    return (driver) => !condition.Invoke(driver);\n}\n\n```\n\n##\u30da\u30fc\u30b8\u304c\u30ed\u30fc\u30c9\u3055\u308c\u308b\u307e\u3067\u5f85\u3064\n\u6307\u5b9a\u3055\u308c\u305f\u30bf\u30a4\u30c8\u30eb\u304c\u73fe\u308c\u308b\u307e\u3067\u5f85\u3061\u3001\u51e6\u7406\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u4fbf\u5229\u3002\n\n```csharp:ExpectedConditionsEx.cs\npublic static Func<IWebDriver, bool> TitleIs(string title)\n{\n    return (driver) =>\n    {\n        try\n        {\n            return driver.Title == title;\n        }\n        catch (Exception)\n        {\n            return false;\n        }\n    };\n}\n\npublic static Func<IWebDriver, bool> TitleStartsWith(string title)\n{\n    return (driver) =>\n    {\n        try\n        {\n            return driver.Title.StartsWith(title);\n        }\n        catch (Exception)\n        {\n            return false;\n        }\n    };\n}\n```\n\n##\u30a2\u30e9\u30fc\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u5f85\u3064\n\u203b\u30d6\u30e9\u30af\u30e9\u8907\u6570\u30a2\u30e9\u30fc\u30c8\u72b6\u614b\u3067\u4f7f\u3046\u3068\u3001\u304a\u305d\u3089\u304f\u60f3\u5b9a\u901a\u308a\u306b\u52d5\u304d\u307e\u305b\u3093\u3002\n\n```csharp:ExpectedConditionsEx.cs\npublic static Func<IWebDriver, bool> AlertIsVisible()\n{\n    return (driver) =>\n    {\n        try\n        {\n            driver.SwitchTo().Alert();\n            return true;\n        }\n        catch (NoAlertPresentException)\n        {\n            return false;\n        }\n    };\n}\n```\n\n##\u96d1\u611f\n\u30c0\u30df\u30fc\u306eIWebElement\u3092\u8fd4\u3059\u306b\u306f\u4f55\u304c\u826f\u3044\u306e\u3060\u308d\u3046\u3002\n", "tags": ["Selenium", "C#"]}