{"context": " More than 1 year has passed since last update.\u7e70\u308a\u8fd4\u3057\u30d1\u30bf\u30fc\u30f3\u306e\u884c\u5217\u3092\u4f5c\u308b\u65b9\u6cd5\u3002\n\u3044\u308f\u3086\u308b\u3001Matlab\u3067\u3044\u3046\u3068\u3053\u308d\u306erepmat\u3092\u3084\u308a\u305f\u3044\u6642\n\u65b9\u6cd5\u306f\uff12\u3064\u3042\u308b\u3002\n1. numpy.matlib.repmat\u3092\u4f7f\u3046\n2. numpy.tile\u3092\u4f7f\u3046\n\n1. numpy.matlib.repmat\u3092\u4f7f\u3046\u65b9\u6cd5\nnumpy.matlib.repmat(a, m, n)\n\nipython\nIn [1]: import numpy as np\n\nIn [2]: import numpy.matlib\n\nIn [3]: np.matlib.repmat((1,2,3),1,5)\nOut[3]: array([[1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]])\n\nIn [4]: A = np.diag((100,200,300))\n\nIn [5]: print A\n[[100   0   0]\n [  0 200   0]\n [  0   0 300]]\n\nIn [6]: np.matlib.repmat(A,2,2)\nOut[6]: \narray([[100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300],\n       [100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300]])\n\nIn [7]: np.matlib.repmat(A,1,2)\nOut[7]: \narray([[100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300]])\n\nIn [8]: np.matlib.repmat(A,2,1)\nOut[8]: \narray([[100,   0,   0],\n       [  0, 200,   0],\n       [  0,   0, 300],\n       [100,   0,   0],\n       [  0, 200,   0],\n       [  0,   0, 300]])\n\n\n\n2. numpy.tile\u3092\u4f7f\u3046\u65b9\u6cd5\nnumpy.tile(a, reps)\n\nipython\nIn [9]: np.tile((1,2,3),(1,5))\nOut[9]: array([[1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]])\n\nIn [10]: np.tile(A,(2,2))\nOut[10]: \narray([[100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300],\n       [100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300]])\n\nIn [11]: np.tile(A,(1,2))\nOut[11]: \narray([[100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300]])\n\nIn [12]: np.tile(A,(2,1))\nOut[12]: \narray([[100,   0,   0],\n       [  0, 200,   0],\n       [  0,   0, 300],\n       [100,   0,   0],\n       [  0, 200,   0],\n       [  0,   0, 300]])\n\n\nrepmat\u3092\u4f7f\u3046\u3068\u4f8b\u3048\u3070\u4e8c\u6b21\u5143\u914d\u5217\u306e\u5076\u6570\u4f4d\u7f6e\u3060\u3051\u6b8b\u3057\u3066\u3001\u6b8b\u308a\u306f\uff10\u306b\u3057\u305f\u3044\u3068\u304d\u306a\u3069\u306b\u4f7f\u3048\u308b\u3002\n\nipython\nIn [27]: X = np.arange(100).reshape(10,10)\n\nIn [28]: Y = np.matlib.repmat(np.array([[1,0],[0,0]]),5,5)\n\nIn [29]: print X\n[[ 0  1  2  3  4  5  6  7  8  9]\n [10 11 12 13 14 15 16 17 18 19]\n [20 21 22 23 24 25 26 27 28 29]\n [30 31 32 33 34 35 36 37 38 39]\n [40 41 42 43 44 45 46 47 48 49]\n [50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69]\n [70 71 72 73 74 75 76 77 78 79]\n [80 81 82 83 84 85 86 87 88 89]\n [90 91 92 93 94 95 96 97 98 99]]\n\nIn [30]: print Y\n[[1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]]\n\nIn [31]: Z = X * Y\n\nIn [32]: print Z\n[[ 0  0  2  0  4  0  6  0  8  0]\n [ 0  0  0  0  0  0  0  0  0  0]\n [20  0 22  0 24  0 26  0 28  0]\n [ 0  0  0  0  0  0  0  0  0  0]\n [40  0 42  0 44  0 46  0 48  0]\n [ 0  0  0  0  0  0  0  0  0  0]\n [60  0 62  0 64  0 66  0 68  0]\n [ 0  0  0  0  0  0  0  0  0  0]\n [80  0 82  0 84  0 86  0 88  0]\n [ 0  0  0  0  0  0  0  0  0  0]]\n\n\n\u30ab\u30e9\u30fc\u753b\u50cf\u306e\u5834\u5408\u306f\u4e09\u6b21\u5143\u30c7\u30fc\u30bf\u306a\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\nipython\nIn [1]: from skimage import data\n\nIn [2]: from skimage import io\n\nIn [3]: import numpy as np\n\nIn [4]: sz = 48\n\nIn [5]: image = data.lena()\n\nIn [6]: patch1 = image[250:250+sz,250:250+sz,:]\n\nIn [7]: patch1.shape\nOut[7]: (48, 48, 3)\n\nIn [8]: mask = np.tile(np.array([[[1],[0]],[[0],[0]]],dtype=np.uint8),(sz/2,sz/2,3))\n\nIn [9]: mask.shape\nOut[9]: (48, 48, 3)\n\nIn [10]: print mask\n[[[1 1 1]\n  [0 0 0]\n  [1 1 1]\n  ..., \n  [0 0 0]\n  [1 1 1]\n  [0 0 0]]\n\n\n [[0 0 0]\n  [0 0 0]\n  [0 0 0]\n  ..., \n  [0 0 0]\n  [0 0 0]\n  [0 0 0]]]\n\nIn [11]: patch2 = patch1 * mask\n\nIn [12]: patch12 = np.hstack((patch1,patch2))\n\n\n\n\n\u7e70\u308a\u8fd4\u3057\u30d1\u30bf\u30fc\u30f3\u306e\u884c\u5217\u3092\u4f5c\u308b\u65b9\u6cd5\u3002\n\u3044\u308f\u3086\u308b\u3001Matlab\u3067\u3044\u3046\u3068\u3053\u308d\u306erepmat\u3092\u3084\u308a\u305f\u3044\u6642\n\n\u65b9\u6cd5\u306f\uff12\u3064\u3042\u308b\u3002\n1. numpy.matlib.repmat\u3092\u4f7f\u3046\n2. numpy.tile\u3092\u4f7f\u3046\n\n# 1. numpy.matlib.repmat\u3092\u4f7f\u3046\u65b9\u6cd5\nnumpy.matlib.repmat(a, m, n)\n\n```lang:ipython\nIn [1]: import numpy as np\n\nIn [2]: import numpy.matlib\n\nIn [3]: np.matlib.repmat((1,2,3),1,5)\nOut[3]: array([[1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]])\n\nIn [4]: A = np.diag((100,200,300))\n\nIn [5]: print A\n[[100   0   0]\n [  0 200   0]\n [  0   0 300]]\n\nIn [6]: np.matlib.repmat(A,2,2)\nOut[6]: \narray([[100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300],\n       [100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300]])\n\nIn [7]: np.matlib.repmat(A,1,2)\nOut[7]: \narray([[100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300]])\n\nIn [8]: np.matlib.repmat(A,2,1)\nOut[8]: \narray([[100,   0,   0],\n       [  0, 200,   0],\n       [  0,   0, 300],\n       [100,   0,   0],\n       [  0, 200,   0],\n       [  0,   0, 300]])\n```\n# 2. numpy.tile\u3092\u4f7f\u3046\u65b9\u6cd5\nnumpy.tile(a, reps)\n\n```lang:ipython\nIn [9]: np.tile((1,2,3),(1,5))\nOut[9]: array([[1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]])\n\nIn [10]: np.tile(A,(2,2))\nOut[10]: \narray([[100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300],\n       [100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300]])\n\nIn [11]: np.tile(A,(1,2))\nOut[11]: \narray([[100,   0,   0, 100,   0,   0],\n       [  0, 200,   0,   0, 200,   0],\n       [  0,   0, 300,   0,   0, 300]])\n\nIn [12]: np.tile(A,(2,1))\nOut[12]: \narray([[100,   0,   0],\n       [  0, 200,   0],\n       [  0,   0, 300],\n       [100,   0,   0],\n       [  0, 200,   0],\n       [  0,   0, 300]])\n```\n\nrepmat\u3092\u4f7f\u3046\u3068\u4f8b\u3048\u3070\u4e8c\u6b21\u5143\u914d\u5217\u306e\u5076\u6570\u4f4d\u7f6e\u3060\u3051\u6b8b\u3057\u3066\u3001\u6b8b\u308a\u306f\uff10\u306b\u3057\u305f\u3044\u3068\u304d\u306a\u3069\u306b\u4f7f\u3048\u308b\u3002\n\n```lang:ipython\nIn [27]: X = np.arange(100).reshape(10,10)\n\nIn [28]: Y = np.matlib.repmat(np.array([[1,0],[0,0]]),5,5)\n\nIn [29]: print X\n[[ 0  1  2  3  4  5  6  7  8  9]\n [10 11 12 13 14 15 16 17 18 19]\n [20 21 22 23 24 25 26 27 28 29]\n [30 31 32 33 34 35 36 37 38 39]\n [40 41 42 43 44 45 46 47 48 49]\n [50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69]\n [70 71 72 73 74 75 76 77 78 79]\n [80 81 82 83 84 85 86 87 88 89]\n [90 91 92 93 94 95 96 97 98 99]]\n\nIn [30]: print Y\n[[1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]\n [1 0 1 0 1 0 1 0 1 0]\n [0 0 0 0 0 0 0 0 0 0]]\n\nIn [31]: Z = X * Y\n\nIn [32]: print Z\n[[ 0  0  2  0  4  0  6  0  8  0]\n [ 0  0  0  0  0  0  0  0  0  0]\n [20  0 22  0 24  0 26  0 28  0]\n [ 0  0  0  0  0  0  0  0  0  0]\n [40  0 42  0 44  0 46  0 48  0]\n [ 0  0  0  0  0  0  0  0  0  0]\n [60  0 62  0 64  0 66  0 68  0]\n [ 0  0  0  0  0  0  0  0  0  0]\n [80  0 82  0 84  0 86  0 88  0]\n [ 0  0  0  0  0  0  0  0  0  0]]\n```\n\n\u30ab\u30e9\u30fc\u753b\u50cf\u306e\u5834\u5408\u306f\u4e09\u6b21\u5143\u30c7\u30fc\u30bf\u306a\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```lang:ipython\nIn [1]: from skimage import data\n\nIn [2]: from skimage import io\n\nIn [3]: import numpy as np\n\nIn [4]: sz = 48\n\nIn [5]: image = data.lena()\n\nIn [6]: patch1 = image[250:250+sz,250:250+sz,:]\n\nIn [7]: patch1.shape\nOut[7]: (48, 48, 3)\n\nIn [8]: mask = np.tile(np.array([[[1],[0]],[[0],[0]]],dtype=np.uint8),(sz/2,sz/2,3))\n\nIn [9]: mask.shape\nOut[9]: (48, 48, 3)\n\nIn [10]: print mask\n[[[1 1 1]\n  [0 0 0]\n  [1 1 1]\n  ..., \n  [0 0 0]\n  [1 1 1]\n  [0 0 0]]\n\n\n [[0 0 0]\n  [0 0 0]\n  [0 0 0]\n  ..., \n  [0 0 0]\n  [0 0 0]\n  [0 0 0]]]\n\nIn [11]: patch2 = patch1 * mask\n\nIn [12]: patch12 = np.hstack((patch1,patch2))\n```\n\n![20160104_6.png](https://qiita-image-store.s3.amazonaws.com/0/100523/6ce02510-56fc-3113-a536-3f10d82d3b76.png)\n", "tags": ["Python", "numpy"]}