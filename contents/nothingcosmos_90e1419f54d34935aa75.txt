{"context": " More than 1 year has passed since last update.C\u8a00\u8a9e\u3078\u306e\u611f\u8b1d\u306e\u6b63\u62f3\u7a81\u304d \u4eca\u65e5\u306f10\u65e5\u76ee\u3067\u3059\uff01\n\u3053\u3093\u306a\u306e\u66f8\u3044\u3066\u308b\u6687\u3042\u3063\u305f\u3089\u9032\u6357\u3059\u3059\u3081\u3066\u304f\u3060\u3055\u3044\u3068\u3044\u3046\u58f0\u3082\u3042\u308b\u306a\u304b\u3001\n\u8a66\u9a13\u52c9\u5f37\u4e2d\u306f\u90e8\u5c4b\u306e\u6383\u9664\u304c\u6357\u308b\u3068\u304b\u305d\u3046\u3044\u3046\u3053\u3068\u306a\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3002\n\u4eca\u56de\u3082OSS\u3092\u8aad\u3093\u3067\u3044\u3066\u52c9\u5f37\u306b\u306a\u3063\u305f\u30de\u30af\u30ed\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nmacro\u3068\u306e\u51fa\u4f1a\u3044\nC\u8a00\u8a9e\u306e\u52c9\u5f37\u304c\u3066\u3089C\u3067\u66f8\u304b\u308c\u305fOSS\u3092\u63a2\u3057\u3066\u306f\n\u3068\u308a\u3042\u3048\u305agrep\u3068\u304b\u3067define\u30de\u30af\u30ed\u3092\u63a2\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u4eee\u306blinux\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9(linux-4.3.1/include/linux)\u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\n66,184\u884c\u7a0b\u5ea6\u898b\u3064\u304b\u308a\u307e\u3059\u3001\u3053\u3093\u306a\u306e\u898b\u3066\u3089\u3093\u306a\u3044\u3002\u3002\n\u5927\u534a\u306e\u30b1\u30fc\u30b9\u306b\u304a\u3044\u3066\u3001\u7dba\u9e97\u306a\u30de\u30af\u30ed\u306e\u4f7f\u3044\u65b9\u3092\u3059\u308bOSS\u304c\u591a\u3044\u306a\u304b\u3001\n\u3068\u304d\u3069\u304d\u3067\u3059\u304c\u3001\u304a\u3063\uff01\uff1f\u3068\u3044\u3046\u30de\u30af\u30ed\u306e\u5b9a\u7fa9\u3068\u3001\u4f7f\u3044\u65b9\u3092\u3059\u308b\u3082\u306e\u304c\u3042\u308a\u3001\u5927\u5909\u52c9\u5f37\u306b\u306a\u308a\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070h2o\u3067\u3059\u3002\n\nh2o\u306e\u4f8b\nhttps://github.com/h2o/h2o\n\nh2o/memory.h\n#define H2O_STRUCT_FROM_MEMBER(s, m, p) ((s *)((char *)(p)-offsetof(s, m)))\n\n\noffsetof\u30de\u30af\u30ed\u306b\u95a2\u3057\u3066\u306f\u3053\u3061\u3089\u306e\u30da\u30fc\u30b8\u304c\u8a73\u3057\u3044\nhttp://www5d.biglobe.ne.jp/~noocyte/Programming/CMacros.html#StructBase\n\u3069\u3046\u3044\u3046\u30b1\u30fc\u30b9\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u305f\u3068\u3048\u3070\u3067\u3059\u306d\u3002\n\ninclude/h2o/timeout.h\ntypedef struct st_h2o_timeout_entry_t h2o_timeout_entry_t;\ntypedef void (*h2o_timeout_cb)(h2o_timeout_entry_t *entry);\n/**\n * an entry linked to h2o_timeout_t.\n * Modules willing to use timeouts should embed this object as part of itself, and link it to a specific timeout by calling\n * h2o_timeout_link.\n */\nstruct st_h2o_timeout_entry_t {\n    uint64_t registered_at;\n    h2o_timeout_cb cb;\n    h2o_linklist_t _link;\n};\n\n\ntimeout_entry\u3068timeout_cb\u306f\u3044\u308d\u3044\u308d\u306a\u3068\u3053\u308d\u3067\u4f7f\u3044\u307e\u308f\u305b\u308b\u6c4e\u7528\u7684\u306a\u5b9a\u7fa9\u306b\u306a\u3063\u3066\u304a\u308a\u3001\n\u8907\u6570\u306e\u69cb\u9020\u4f53\u306e\u30e1\u30f3\u30d0\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u5ba3\u8a00\u3092\u898b\u305f\u3068\u304d\u3001timeout_cb\u306e\u5f15\u6570\u3001timeout_entry\u3057\u304b\u306a\u3044\u3058\u3083\u3093\u3001\n\u89aacontext\u304buser_data\u306a\u304f\u3066\u3082\u3044\u3044\u3093\u3060\u3063\u3051\uff1f\u3068\u7591\u554f\u306b\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3002\n\nh2o/lib/http1.c\n\nstruct st_h2o_http1_conn_t {\n    h2o_conn_t super;\n    h2o_socket_t *sock;\n    /* internal structure */\n    h2o_timeout_t *_timeout;\n    h2o_timeout_entry_t _timeout_entry;           <-- timeout_entry\u3092\u8d77\u70b9\u306bst_h2o_http1_conn_t\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u8a08\u7b97\n    ...\n    /* the HTTP request / response (intentionally placed at the last, since it is a large structure and has it's own ctor) */\n    h2o_req_t req;\n};\n\nstatic void reqread_on_timeout(h2o_timeout_entry_t *entry)\n{\n    struct st_h2o_http1_conn_t *conn = H2O_STRUCT_FROM_MEMBER(struct st_h2o_http1_conn_t, _timeout_entry, entry);   <-- h2o_timeout_cb\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u306e\u4e2d\u3067\u3001\u89aa\u306econtext\u3092\u5f15\u304d\u5f53\u3066\u3066timeout\u6642\u306e\u51e6\u7406\u3092\u3059\u308b\n\n    /* TODO log */\n    conn->req.http1_is_persistent = 0;\n    close_connection(conn);\n}\n\n\n\n\u5f15\u6570\u3067\u53d7\u3051\u3063\u305fcontext\u3092void*\u304b\u3089\u76ee\u7684\u306e\u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3088\u308a\u3001\n\u5909\u306a\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6012\u3089\u308c\u3066\u826f\u3044\u304b\u3082\u3002\u3002\u4eca\u5ea6\u8a66\u3057\u3066\u307f\u3088\u3046\u304b\u306a\u3068\u601d\u3063\u3061\u3083\u3044\u307e\u3057\u305f\u3002\n\u5927\u5909\u52c9\u5f37\u306b\u306a\u308a\u307e\u3059\uff01\n\ngrpc\u306e\u4f8b\nhttps://github.com/grpc/grpc\ngrpc\u306ecore\u90e8\u5206\u306fC\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u3066\u304a\u308a\u3001\n\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306a\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306f\u7d20\u6674\u3089\u3057\u3044\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u3082\u3061\u308d\u3093define\u30de\u30af\u30ed\u3092\u3055\u3089\u3063\u3068\u773a\u3081\u3066\u9762\u767d\u305d\u3046\u306a\u3082\u306e\u3092\u63a2\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\ngrpc/src/core/transport/metadata.h\ngrpc/src/core/transport/metadata.c\n/* Reference counting */\n#ifdef GRPC_METADATA_REFCOUNT_DEBUG\n#define GRPC_MDSTR_REF(s) grpc_mdstr_ref((s), __FILE__, __LINE__)\n#define GRPC_MDSTR_UNREF(s) grpc_mdstr_unref((s), __FILE__, __LINE__)\n#define GRPC_MDELEM_REF(s) grpc_mdelem_ref((s), __FILE__, __LINE__)\n#define GRPC_MDELEM_UNREF(s) grpc_mdelem_unref((s), __FILE__, __LINE__)\ngrpc_mdstr *grpc_mdstr_ref(grpc_mdstr *s, const char *file, int line);\nvoid grpc_mdstr_unref(grpc_mdstr *s, const char *file, int line);\ngrpc_mdelem *grpc_mdelem_ref(grpc_mdelem *md, const char *file, int line);\nvoid grpc_mdelem_unref(grpc_mdelem *md, const char *file, int line);\n#else\n#define GRPC_MDSTR_REF(s) grpc_mdstr_ref((s))\n#define GRPC_MDSTR_UNREF(s) grpc_mdstr_unref((s))\n#define GRPC_MDELEM_REF(s) grpc_mdelem_ref((s))\n#define GRPC_MDELEM_UNREF(s) grpc_mdelem_unref((s))\ngrpc_mdstr *grpc_mdstr_ref(grpc_mdstr *s);\nvoid grpc_mdstr_unref(grpc_mdstr *s);\ngrpc_mdelem *grpc_mdelem_ref(grpc_mdelem *md);\nvoid grpc_mdelem_unref(grpc_mdelem *md);\n#endif\n\n\n\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u7528\u306eref/unref\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u969b\u306b\u3001\u30c7\u30d0\u30c3\u30b0\u7528\u306bFILE/LINE\u3092\u4ed8\u52a0\u3057\u3066\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u304b\u3001\n\u9762\u767d\u3044\u306a\u30fc\u3063\u3066\u601d\u3063\u3066\u305f\u3089\u3001\u3001\u5f15\u6570\u5897\u3048\u3066\u308b\u3093\u3067\u3059\u3051\u3069\u3002\u3002\n\ngrpc/src/core/transport/metadata.c\n#define DEBUG_ARGS , const char *file, int line    // <-- __FILE__\u3068__LINE__\u7528\u306e\u5f15\u6570\u8ffd\u52a0\n#define FWD_DEBUG_ARGS , file, line\n...\n\ngrpc_mdstr *grpc_mdstr_ref(grpc_mdstr *gs DEBUG_ARGS) { //<-- \u4eee\u5f15\u6570\u5897\u3084\u3057\u3066\u3044\u308b\n  internal_string *s = (internal_string *)gs;\n  grpc_mdctx *ctx = s->context;\n  lock(ctx);\n  internal_string_ref(s FWD_DEBUG_ARGS);                //<-- \u66f4\u306b\u6b21\u306e\u95a2\u6570\u306b\u6e21\u3057\u3066\u3044\u308b\n  unlock(ctx);\n  return gs;\n}\n\nvoid grpc_mdstr_unref(grpc_mdstr *gs DEBUG_ARGS) {\n  internal_string *s = (internal_string *)gs;\n  grpc_mdctx *ctx = s->context;\n  lock(ctx);\n  internal_string_unref(s FWD_DEBUG_ARGS);\n  unlock(ctx);\n}\n\n\n\nDEBUG_ARGS\u3067\u5f15\u6570file\u3068line\u3092\u7d99\u304e\u3060\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\u305d\u308c\u3092\u3055\u3089\u306bFWD_DEBUG_ARGS\u3063\u3066\u30de\u30af\u30ed\u3067\u66f4\u306b\u6b21\u306e\u95a2\u6570\u306b\u6e21\u3057\u3066\u3044\u308b\u3002\n\ngrpc/src/core/transport/metadata.c\n#ifdef GRPC_METADATA_REFCOUNT_DEBUG\n#define DEBUG_ARGS , const char *file, int line\n#define FWD_DEBUG_ARGS , file, line\n#define INTERNAL_STRING_REF(s) internal_string_ref((s), __FILE__, __LINE__)\n#define INTERNAL_STRING_UNREF(s) internal_string_unref((s), __FILE__, __LINE__)\n#define REF_MD_LOCKED(s) ref_md_locked((s), __FILE__, __LINE__)\n#else\n#define DEBUG_ARGS\n#define FWD_DEBUG_ARGS\n#define INTERNAL_STRING_REF(s) internal_string_ref((s))\n#define INTERNAL_STRING_UNREF(s) internal_string_unref((s))\n#define REF_MD_LOCKED(s) ref_md_locked((s))\n#endif\n\n\nstatic void internal_string_ref(internal_string *s DEBUG_ARGS) {\n#ifdef GRPC_METADATA_REFCOUNT_DEBUG\n  gpr_log(file, line, GPR_LOG_SEVERITY_DEBUG, \"STR   REF:%p:%d->%d: '%s'\", s,\u3000// <-- \u3053\u3053\u3067file, line\u3092\u53c2\u7167\n          s->refs, s->refs + 1, grpc_mdstr_as_c_string((grpc_mdstr *)s));\n#endif\n  ++s->refs;\n}\n\n\nFILE\u3068LINE\u3092\u30de\u30af\u30ed\u306e\u4e2d\u306b\u8a18\u8ff0\u3057\u3066\u304a\u3044\u3066\u3001\n\u30de\u30af\u30ed\u304c\u5c55\u958b\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e0a\u3067\u8a55\u4fa1\u3057\u3066\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u307f\u305f\u3044\u306e\u306f\u6642\u3005\u3084\u308a\u307e\u3059\u304c\u3001\nref/unref\u306e\u30c7\u30d0\u30c3\u30b0\u3067\u4f7f\u3063\u3066\u3044\u308b\u306e\u306f\u521d\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u203b\u6614\u306fmalloc/free\u3082\u4f3c\u305f\u3088\u3046\u306a\u3053\u3068\u3084\u3063\u3066\u305f\u6642\u671f\u304c\u3042\u308b\u3093\u3067\u3059\u3051\u3069\u3001\u6700\u8fd1\u306fclang asan\u3068\u304b\u3067\u6f0f\u308c\u306a\u304f\u691c\u8a3c\u3067\u304d\u308b\u3002\u3002\nFILE\u3084LINE\u30de\u30af\u30ed\u306f\u3001\u5c55\u958b\u3055\u308c\u305f\u7b87\u6240\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3059\u308b\u305f\u3081\u3001\n\u3046\u307e\u304f\u30de\u30af\u30ed\u3067\u5c55\u958b\u3059\u308b\u305f\u3081\u306b\u3001\u5927\u91cf\u306b\u30de\u30af\u30ed\u3092\u66f8\u3044\u3066\u305f\u308a\u3059\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\n\u5f15\u6570\u3092\u30de\u30af\u30ed\u3067\u5897\u3084\u3057\u3066\u6b21\u3005\u6e21\u3057\u3066\u3044\u3051\u3070\u3001\u95a2\u6570\u306e\u30cd\u30b9\u30c8\u304c\u6df1\u304f\u3066\u3082\u5de7\u304fFILE,LINE\u304c\u53c2\u7167\u3067\u304d\u308b\u306e\u304b\u30fc\u3001\n\u306a\u308b\u307b\u3069\u30fc\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u5927\u5909\u52c9\u5f37\u306b\u306a\u308a\u307e\u3059\uff01\n\u4ed6\u306b\u3053\u3093\u306a\u306e\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\ngrpc/src/core/surface/api_trace.h\n\n/* Provide unwrapping macros because we're in C89 and variadic macros weren't\n   introduced until C99... */\n#define GRPC_API_TRACE_UNWRAP0()\n#define GRPC_API_TRACE_UNWRAP1(a) , a\n#define GRPC_API_TRACE_UNWRAP2(a, b) , a, b\n#define GRPC_API_TRACE_UNWRAP3(a, b, c) , a, b, c\n#define GRPC_API_TRACE_UNWRAP4(a, b, c, d) , a, b, c, d\n#define GRPC_API_TRACE_UNWRAP5(a, b, c, d, e) , a, b, c, d, e\n#define GRPC_API_TRACE_UNWRAP6(a, b, c, d, e, f) , a, b, c, d, e, f\n#define GRPC_API_TRACE_UNWRAP7(a, b, c, d, e, f, g) , a, b, c, d, e, f, g\n#define GRPC_API_TRACE_UNWRAP8(a, b, c, d, e, f, g, h) , a, b, c, d, e, f, g, h\n#define GRPC_API_TRACE_UNWRAP9(a, b, c, d, e, f, g, h, i) \\\n  , a, b, c, d, e, f, g, h, i\n#define GRPC_API_TRACE_UNWRAP10(a, b, c, d, e, f, g, h, i, j) \\\n  , a, b, c, d, e, f, g, h, i, j\n\n/* Due to the limitations of C89's preprocessor, the arity of the var-arg list\n   'nargs' must be specified. */\n#define GRPC_API_TRACE(fmt, nargs, args)                      \\\n  if (grpc_api_trace) {                                       \\\n    gpr_log(GPR_INFO, fmt GRPC_API_TRACE_UNWRAP##nargs args); \\\n  }\n\n\n\nC99\u306evar-arg\u306e\u4ee3\u308f\u308a\u306b\u529b\u6280\u3067\u30de\u30af\u30ed\u5c55\u958b\u3059\u308b\u3063\u307d\u3044\u3001\u3001C89\u304b\u30fc\u3001\u307e\u3041\u30fc\u3053\u3046\u3044\u3046\u306e\u306f\u4f7f\u3046\u6a5f\u4f1a\u304c\u6765\u306a\u3044\u3068\u3044\u3044\u306a\u3002\u3002\n\n\u307e\u3068\u3081\n(1) callback\u306e\u898b\u901a\u3057\u3092\u826f\u304f\u3059\u308b\u30de\u30af\u30ed\u306e\u4f7f\u3044\u65b9\u3068\u3001FILE LINE\u3092\u95a2\u6570\u547c\u3073\u51fa\u3057\u304c\u30cd\u30b9\u30c8\u3057\u305f\u3068\u3053\u306b\u5de7\u3044\u3053\u3068\u4f1d\u642c\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n(2) C\u306eOSS\u306f\u3053\u3046\u3044\u3046\u697d\u3057\u307f\u65b9\u3082\u3042\u308b\u3093\u3067\u3059\u3088\u3002\n(3) Modern C++\u3067\u66f8\u304b\u308c\u305fOSS\u306e\u5834\u5408\u3001define macro\u3092\u63a2\u3057\u305f\u308a\u3057\u307e\u305b\u3093\u3002\n\u3053\u306eOSS(\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30de\u30af\u30ed)\u306f\u7d20\u6674\u3089\u3057\u3044\uff01\u307f\u305f\u3044\u306a\u8a71\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0a\nC\u8a00\u8a9e\u3078\u306e\u611f\u8b1d\u306e\u6b63\u62f3\u7a81\u304d \u4eca\u65e5\u306f10\u65e5\u76ee\u3067\u3059\uff01\n\n\u3053\u3093\u306a\u306e\u66f8\u3044\u3066\u308b\u6687\u3042\u3063\u305f\u3089\u9032\u6357\u3059\u3059\u3081\u3066\u304f\u3060\u3055\u3044\u3068\u3044\u3046\u58f0\u3082\u3042\u308b\u306a\u304b\u3001\n\u8a66\u9a13\u52c9\u5f37\u4e2d\u306f\u90e8\u5c4b\u306e\u6383\u9664\u304c\u6357\u308b\u3068\u304b\u305d\u3046\u3044\u3046\u3053\u3068\u306a\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3002\n\n\u4eca\u56de\u3082OSS\u3092\u8aad\u3093\u3067\u3044\u3066\u52c9\u5f37\u306b\u306a\u3063\u305f\u30de\u30af\u30ed\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# macro\u3068\u306e\u51fa\u4f1a\u3044\nC\u8a00\u8a9e\u306e\u52c9\u5f37\u304c\u3066\u3089C\u3067\u66f8\u304b\u308c\u305fOSS\u3092\u63a2\u3057\u3066\u306f\n\u3068\u308a\u3042\u3048\u305agrep\u3068\u304b\u3067define\u30de\u30af\u30ed\u3092\u63a2\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u4eee\u306blinux\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9(linux-4.3.1/include/linux)\u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\n66,184\u884c\u7a0b\u5ea6\u898b\u3064\u304b\u308a\u307e\u3059\u3001\u3053\u3093\u306a\u306e\u898b\u3066\u3089\u3093\u306a\u3044\u3002\u3002\n\n\u5927\u534a\u306e\u30b1\u30fc\u30b9\u306b\u304a\u3044\u3066\u3001\u7dba\u9e97\u306a\u30de\u30af\u30ed\u306e\u4f7f\u3044\u65b9\u3092\u3059\u308bOSS\u304c\u591a\u3044\u306a\u304b\u3001\n\u3068\u304d\u3069\u304d\u3067\u3059\u304c\u3001\u304a\u3063\uff01\uff1f\u3068\u3044\u3046\u30de\u30af\u30ed\u306e\u5b9a\u7fa9\u3068\u3001\u4f7f\u3044\u65b9\u3092\u3059\u308b\u3082\u306e\u304c\u3042\u308a\u3001\u5927\u5909\u52c9\u5f37\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070h2o\u3067\u3059\u3002\n\n# h2o\u306e\u4f8b\nhttps://github.com/h2o/h2o\n\n```C:h2o/memory.h\n#define H2O_STRUCT_FROM_MEMBER(s, m, p) ((s *)((char *)(p)-offsetof(s, m)))\n```\n\noffsetof\u30de\u30af\u30ed\u306b\u95a2\u3057\u3066\u306f\u3053\u3061\u3089\u306e\u30da\u30fc\u30b8\u304c\u8a73\u3057\u3044\nhttp://www5d.biglobe.ne.jp/~noocyte/Programming/CMacros.html#StructBase\n\n\u3069\u3046\u3044\u3046\u30b1\u30fc\u30b9\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u305f\u3068\u3048\u3070\u3067\u3059\u306d\u3002\n\n```C:include/h2o/timeout.h\ntypedef struct st_h2o_timeout_entry_t h2o_timeout_entry_t;\ntypedef void (*h2o_timeout_cb)(h2o_timeout_entry_t *entry);\n/**\n * an entry linked to h2o_timeout_t.\n * Modules willing to use timeouts should embed this object as part of itself, and link it to a specific timeout by calling\n * h2o_timeout_link.\n */\nstruct st_h2o_timeout_entry_t {\n    uint64_t registered_at;\n    h2o_timeout_cb cb;\n    h2o_linklist_t _link;\n};\n```\n\ntimeout_entry\u3068timeout_cb\u306f\u3044\u308d\u3044\u308d\u306a\u3068\u3053\u308d\u3067\u4f7f\u3044\u307e\u308f\u305b\u308b\u6c4e\u7528\u7684\u306a\u5b9a\u7fa9\u306b\u306a\u3063\u3066\u304a\u308a\u3001\n\u8907\u6570\u306e\u69cb\u9020\u4f53\u306e\u30e1\u30f3\u30d0\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u5ba3\u8a00\u3092\u898b\u305f\u3068\u304d\u3001timeout_cb\u306e\u5f15\u6570\u3001timeout_entry\u3057\u304b\u306a\u3044\u3058\u3083\u3093\u3001\n\u89aacontext\u304buser_data\u306a\u304f\u3066\u3082\u3044\u3044\u3093\u3060\u3063\u3051\uff1f\u3068\u7591\u554f\u306b\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3002\n\n```C:h2o/lib/http1.c\n\nstruct st_h2o_http1_conn_t {\n    h2o_conn_t super;\n    h2o_socket_t *sock;\n    /* internal structure */\n    h2o_timeout_t *_timeout;\n    h2o_timeout_entry_t _timeout_entry;           <-- timeout_entry\u3092\u8d77\u70b9\u306bst_h2o_http1_conn_t\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u8a08\u7b97\n    ...\n    /* the HTTP request / response (intentionally placed at the last, since it is a large structure and has it's own ctor) */\n    h2o_req_t req;\n};\n\nstatic void reqread_on_timeout(h2o_timeout_entry_t *entry)\n{\n    struct st_h2o_http1_conn_t *conn = H2O_STRUCT_FROM_MEMBER(struct st_h2o_http1_conn_t, _timeout_entry, entry);   <-- h2o_timeout_cb\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u306e\u4e2d\u3067\u3001\u89aa\u306econtext\u3092\u5f15\u304d\u5f53\u3066\u3066timeout\u6642\u306e\u51e6\u7406\u3092\u3059\u308b\n\n    /* TODO log */\n    conn->req.http1_is_persistent = 0;\n    close_connection(conn);\n}\n\n````\n\n\u5f15\u6570\u3067\u53d7\u3051\u3063\u305fcontext\u3092void*\u304b\u3089\u76ee\u7684\u306e\u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3088\u308a\u3001\n\u5909\u306a\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6012\u3089\u308c\u3066\u826f\u3044\u304b\u3082\u3002\u3002\u4eca\u5ea6\u8a66\u3057\u3066\u307f\u3088\u3046\u304b\u306a\u3068\u601d\u3063\u3061\u3083\u3044\u307e\u3057\u305f\u3002\n\u5927\u5909\u52c9\u5f37\u306b\u306a\u308a\u307e\u3059\uff01\n\n#grpc\u306e\u4f8b\n\nhttps://github.com/grpc/grpc\n\ngrpc\u306ecore\u90e8\u5206\u306fC\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u3066\u304a\u308a\u3001\n\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306a\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306f\u7d20\u6674\u3089\u3057\u3044\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u3082\u3061\u308d\u3093define\u30de\u30af\u30ed\u3092\u3055\u3089\u3063\u3068\u773a\u3081\u3066\u9762\u767d\u305d\u3046\u306a\u3082\u306e\u3092\u63a2\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```C:grpc/src/core/transport/metadata.h\ngrpc/src/core/transport/metadata.c\n/* Reference counting */\n#ifdef GRPC_METADATA_REFCOUNT_DEBUG\n#define GRPC_MDSTR_REF(s) grpc_mdstr_ref((s), __FILE__, __LINE__)\n#define GRPC_MDSTR_UNREF(s) grpc_mdstr_unref((s), __FILE__, __LINE__)\n#define GRPC_MDELEM_REF(s) grpc_mdelem_ref((s), __FILE__, __LINE__)\n#define GRPC_MDELEM_UNREF(s) grpc_mdelem_unref((s), __FILE__, __LINE__)\ngrpc_mdstr *grpc_mdstr_ref(grpc_mdstr *s, const char *file, int line);\nvoid grpc_mdstr_unref(grpc_mdstr *s, const char *file, int line);\ngrpc_mdelem *grpc_mdelem_ref(grpc_mdelem *md, const char *file, int line);\nvoid grpc_mdelem_unref(grpc_mdelem *md, const char *file, int line);\n#else\n#define GRPC_MDSTR_REF(s) grpc_mdstr_ref((s))\n#define GRPC_MDSTR_UNREF(s) grpc_mdstr_unref((s))\n#define GRPC_MDELEM_REF(s) grpc_mdelem_ref((s))\n#define GRPC_MDELEM_UNREF(s) grpc_mdelem_unref((s))\ngrpc_mdstr *grpc_mdstr_ref(grpc_mdstr *s);\nvoid grpc_mdstr_unref(grpc_mdstr *s);\ngrpc_mdelem *grpc_mdelem_ref(grpc_mdelem *md);\nvoid grpc_mdelem_unref(grpc_mdelem *md);\n#endif\n```\n\n\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u7528\u306eref/unref\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u969b\u306b\u3001\u30c7\u30d0\u30c3\u30b0\u7528\u306bFILE/LINE\u3092\u4ed8\u52a0\u3057\u3066\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u304b\u3001\n\u9762\u767d\u3044\u306a\u30fc\u3063\u3066\u601d\u3063\u3066\u305f\u3089\u3001\u3001\u5f15\u6570\u5897\u3048\u3066\u308b\u3093\u3067\u3059\u3051\u3069\u3002\u3002\n\n```C:grpc/src/core/transport/metadata.c\n#define DEBUG_ARGS , const char *file, int line    // <-- __FILE__\u3068__LINE__\u7528\u306e\u5f15\u6570\u8ffd\u52a0\n#define FWD_DEBUG_ARGS , file, line\n...\n\ngrpc_mdstr *grpc_mdstr_ref(grpc_mdstr *gs DEBUG_ARGS) { //<-- \u4eee\u5f15\u6570\u5897\u3084\u3057\u3066\u3044\u308b\n  internal_string *s = (internal_string *)gs;\n  grpc_mdctx *ctx = s->context;\n  lock(ctx);\n  internal_string_ref(s FWD_DEBUG_ARGS);                //<-- \u66f4\u306b\u6b21\u306e\u95a2\u6570\u306b\u6e21\u3057\u3066\u3044\u308b\n  unlock(ctx);\n  return gs;\n}\n\nvoid grpc_mdstr_unref(grpc_mdstr *gs DEBUG_ARGS) {\n  internal_string *s = (internal_string *)gs;\n  grpc_mdctx *ctx = s->context;\n  lock(ctx);\n  internal_string_unref(s FWD_DEBUG_ARGS);\n  unlock(ctx);\n}\n\n```\nDEBUG_ARGS\u3067\u5f15\u6570file\u3068line\u3092\u7d99\u304e\u3060\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\u305d\u308c\u3092\u3055\u3089\u306bFWD_DEBUG_ARGS\u3063\u3066\u30de\u30af\u30ed\u3067\u66f4\u306b\u6b21\u306e\u95a2\u6570\u306b\u6e21\u3057\u3066\u3044\u308b\u3002\n\n\n```C:grpc/src/core/transport/metadata.c\n#ifdef GRPC_METADATA_REFCOUNT_DEBUG\n#define DEBUG_ARGS , const char *file, int line\n#define FWD_DEBUG_ARGS , file, line\n#define INTERNAL_STRING_REF(s) internal_string_ref((s), __FILE__, __LINE__)\n#define INTERNAL_STRING_UNREF(s) internal_string_unref((s), __FILE__, __LINE__)\n#define REF_MD_LOCKED(s) ref_md_locked((s), __FILE__, __LINE__)\n#else\n#define DEBUG_ARGS\n#define FWD_DEBUG_ARGS\n#define INTERNAL_STRING_REF(s) internal_string_ref((s))\n#define INTERNAL_STRING_UNREF(s) internal_string_unref((s))\n#define REF_MD_LOCKED(s) ref_md_locked((s))\n#endif\n\n\nstatic void internal_string_ref(internal_string *s DEBUG_ARGS) {\n#ifdef GRPC_METADATA_REFCOUNT_DEBUG\n  gpr_log(file, line, GPR_LOG_SEVERITY_DEBUG, \"STR   REF:%p:%d->%d: '%s'\", s,\u3000// <-- \u3053\u3053\u3067file, line\u3092\u53c2\u7167\n          s->refs, s->refs + 1, grpc_mdstr_as_c_string((grpc_mdstr *)s));\n#endif\n  ++s->refs;\n}\n```\n\n__FILE__\u3068__LINE__\u3092\u30de\u30af\u30ed\u306e\u4e2d\u306b\u8a18\u8ff0\u3057\u3066\u304a\u3044\u3066\u3001\n\u30de\u30af\u30ed\u304c\u5c55\u958b\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e0a\u3067\u8a55\u4fa1\u3057\u3066\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u307f\u305f\u3044\u306e\u306f\u6642\u3005\u3084\u308a\u307e\u3059\u304c\u3001\nref/unref\u306e\u30c7\u30d0\u30c3\u30b0\u3067\u4f7f\u3063\u3066\u3044\u308b\u306e\u306f\u521d\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u203b\u6614\u306fmalloc/free\u3082\u4f3c\u305f\u3088\u3046\u306a\u3053\u3068\u3084\u3063\u3066\u305f\u6642\u671f\u304c\u3042\u308b\u3093\u3067\u3059\u3051\u3069\u3001\u6700\u8fd1\u306fclang asan\u3068\u304b\u3067\u6f0f\u308c\u306a\u304f\u691c\u8a3c\u3067\u304d\u308b\u3002\u3002\n\n__FILE__\u3084__LINE__\u30de\u30af\u30ed\u306f\u3001\u5c55\u958b\u3055\u308c\u305f\u7b87\u6240\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3059\u308b\u305f\u3081\u3001\n\u3046\u307e\u304f\u30de\u30af\u30ed\u3067\u5c55\u958b\u3059\u308b\u305f\u3081\u306b\u3001\u5927\u91cf\u306b\u30de\u30af\u30ed\u3092\u66f8\u3044\u3066\u305f\u308a\u3059\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\n\u5f15\u6570\u3092\u30de\u30af\u30ed\u3067\u5897\u3084\u3057\u3066\u6b21\u3005\u6e21\u3057\u3066\u3044\u3051\u3070\u3001\u95a2\u6570\u306e\u30cd\u30b9\u30c8\u304c\u6df1\u304f\u3066\u3082\u5de7\u304fFILE,LINE\u304c\u53c2\u7167\u3067\u304d\u308b\u306e\u304b\u30fc\u3001\n\u306a\u308b\u307b\u3069\u30fc\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u5927\u5909\u52c9\u5f37\u306b\u306a\u308a\u307e\u3059\uff01\n\n\u4ed6\u306b\u3053\u3093\u306a\u306e\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\n```C:grpc/src/core/surface/api_trace.h\n\n/* Provide unwrapping macros because we're in C89 and variadic macros weren't\n   introduced until C99... */\n#define GRPC_API_TRACE_UNWRAP0()\n#define GRPC_API_TRACE_UNWRAP1(a) , a\n#define GRPC_API_TRACE_UNWRAP2(a, b) , a, b\n#define GRPC_API_TRACE_UNWRAP3(a, b, c) , a, b, c\n#define GRPC_API_TRACE_UNWRAP4(a, b, c, d) , a, b, c, d\n#define GRPC_API_TRACE_UNWRAP5(a, b, c, d, e) , a, b, c, d, e\n#define GRPC_API_TRACE_UNWRAP6(a, b, c, d, e, f) , a, b, c, d, e, f\n#define GRPC_API_TRACE_UNWRAP7(a, b, c, d, e, f, g) , a, b, c, d, e, f, g\n#define GRPC_API_TRACE_UNWRAP8(a, b, c, d, e, f, g, h) , a, b, c, d, e, f, g, h\n#define GRPC_API_TRACE_UNWRAP9(a, b, c, d, e, f, g, h, i) \\\n  , a, b, c, d, e, f, g, h, i\n#define GRPC_API_TRACE_UNWRAP10(a, b, c, d, e, f, g, h, i, j) \\\n  , a, b, c, d, e, f, g, h, i, j\n\n/* Due to the limitations of C89's preprocessor, the arity of the var-arg list\n   'nargs' must be specified. */\n#define GRPC_API_TRACE(fmt, nargs, args)                      \\\n  if (grpc_api_trace) {                                       \\\n    gpr_log(GPR_INFO, fmt GRPC_API_TRACE_UNWRAP##nargs args); \\\n  }\n\n```\n\nC99\u306evar-arg\u306e\u4ee3\u308f\u308a\u306b\u529b\u6280\u3067\u30de\u30af\u30ed\u5c55\u958b\u3059\u308b\u3063\u307d\u3044\u3001\u3001C89\u304b\u30fc\u3001\u307e\u3041\u30fc\u3053\u3046\u3044\u3046\u306e\u306f\u4f7f\u3046\u6a5f\u4f1a\u304c\u6765\u306a\u3044\u3068\u3044\u3044\u306a\u3002\u3002\n\n#\u307e\u3068\u3081 \n(1) callback\u306e\u898b\u901a\u3057\u3092\u826f\u304f\u3059\u308b\u30de\u30af\u30ed\u306e\u4f7f\u3044\u65b9\u3068\u3001__FILE__ __LINE__\u3092\u95a2\u6570\u547c\u3073\u51fa\u3057\u304c\u30cd\u30b9\u30c8\u3057\u305f\u3068\u3053\u306b\u5de7\u3044\u3053\u3068\u4f1d\u642c\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n(2) C\u306eOSS\u306f\u3053\u3046\u3044\u3046\u697d\u3057\u307f\u65b9\u3082\u3042\u308b\u3093\u3067\u3059\u3088\u3002\n(3) Modern C++\u3067\u66f8\u304b\u308c\u305fOSS\u306e\u5834\u5408\u3001define macro\u3092\u63a2\u3057\u305f\u308a\u3057\u307e\u305b\u3093\u3002\n\n\u3053\u306eOSS(\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30de\u30af\u30ed)\u306f\u7d20\u6674\u3089\u3057\u3044\uff01\u307f\u305f\u3044\u306a\u8a71\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4ee5\u4e0a\n", "tags": ["C\u8a00\u8a9e", "macro"]}