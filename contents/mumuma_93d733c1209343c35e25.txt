{"context": "DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u9805\u76ee\u6570\u3084\u30b9\u30c8\u30ec\u30fc\u30b8\u5bb9\u91cf\u306b\u3064\u3044\u3066\u306f\u3001\u753b\u9762\u4e0a\u306b\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u306f\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3002\u300c\u3053\u308c\u3089\u306f\u3001\u304a\u3088\u305d 6 \u6642\u9593\u3054\u3068\u306b\u5b9a\u671f\u7684\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u300d\u3068\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\nDynamoDB\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3084\u524a\u9664\u306a\u3069\u306e\u958b\u767a\u3092\u3059\u308b\u5834\u5408\u3001\u975e\u5e38\u306b\u4e0d\u4fbf\u3067\u3059\u3002\u30c6\u30fc\u30d6\u30eb\u306e\u9805\u76ee\u6570\u306e\u53d6\u5f97\u65b9\u6cd5\u306b\u3064\u3044\u3066\u4e0b\u8a18\u306e\u5e7e\u3064\u304b\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4e8b\u524d\u6e96\u5099\nlet aws = require('aws-sdk');\nlet util = require('util');\nlet awsConfiguration = {\n    \"accessKeyId\": \"accessKeyId\",\n    \"secretAccessKey\": \"secretAccessKey\",\n    \"region\": \"ap-northeast-1\" //tokyo\n  };\naws.config.update(awsConfiguration);\n\nlet dynamodb = new aws.DynamoDB({apiVersion: '2012-08-10'});\nlet params = {TableName:'scan_table'};\n\n\ndescribe-table \uff08\u30c6\u30fc\u30d6\u30eb\u8a73\u7d30\u8868\u793a\uff09\ndynamodb.describeTable(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n    }\n});\n\n\n\u51fa\u529b\n{\n    \"TableDescription\": {\n        \"TableArn\": \"arn:aws:dynamodb:ap-northeast-1:0:table/scan_table\",\n        \"AttributeDefinitions\": [\n            {\n                \"AttributeName\": \"id\",\n                \"AttributeType\": \"N\"\n            },\n            {\n                \"AttributeName\": \"name\",\n                \"AttributeType\": \"S\"\n            }\n        ],\n        \"ProvisionedThroughput\": {\n            \"NumberOfDecreasesToday\": 0,\n            \"WriteCapacityUnits\": 1,\n            \"ReadCapacityUnits\": 100,\n            \"LastDecreaseDateTime\": 1484895396.199\n        },\n        \"TableSizeBytes\": 0,\n        \"TableName\": \"scan_table\",\n        \"TableStatus\": \"ACTIVE\",\n        \"KeySchema\": [\n            {\n                \"KeyType\": \"HASH\",\n                \"AttributeName\": \"name\"\n            },\n            {\n                \"KeyType\": \"RANGE\",\n                \"AttributeName\": \"id\"\n            }\n        ],\n        \"ItemCount\": 0,\n        \"CreationDateTime\": 1484890557.888\n    }\n}\n\n\"ItemCount\": 0 \u306f\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u6570\u3002\ndescribe-table\u306f\u753b\u9762\u306e\u6982\u8981\u3092\u8868\u793a\u3059\u308b\u3060\u3051\u3067\u3001\u753b\u9762\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u66f4\u65b0\u3055\u308c\u306a\u3044\u5834\u5408\u3001\u3053\u3061\u3089\u306e\u60c5\u5831\u3082\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3002\n\nscan\u3000\uff08\u5168\u4ef6\u51fa\u529b\uff09\nlet params = {\n    TableName: \"scan_table\",\n    Select: \"COUNT\"\n};\n//DynamoDB scan only returns up to 1MB of data, so we need to keep scanning.\ndynamodb.scan(params, function (err, res) {\n    console.log(util.inspect(res, false, null));\n});\n\n\n\u51fa\u529b\n{ Count: 14171,\n  ScannedCount: 14171,\n  LastEvaluatedKey:\n   { name: { S: 'testtesttestetettsetstetesse' },\n     id: { N: '14171' } } }\n\n14171\u306e\u30ec\u30b3\u30fc\u30c9\u6570\u304c\u53d6\u5f97\u3055\u308c\u305f\u3060\u3051\u3067\u3059\u3002\u5b9f\u306f1\u5104\u3050\u3089\u3044\u30ec\u30b3\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u539f\u56e0\u306fDynamoDB\u306escan\u306f1MB\u306e\u30c7\u30fc\u30bf\u306e\u5236\u9650\u304c\u3042\u308b\u306e\u3067\u30011MB\u8d85\u3048\u305f\u3089\u3001scan\u505c\u6b62\u3057\u3066\u7d50\u679c\u3092return\u3057\u307e\u3059\u3002LastEvaluatedKey\u3092\u4f7f\u3063\u3066\u7e70\u308a\u8fd4\u3057scan\u3057\u3066\u3001\u5168\u30ec\u30b3\u30fc\u30c9\u6570\u3092return\u3067\u304d\u307e\u3059\u3002\n\n\u5b9f\u88c5\u65b9\u6cd5\nlet scanTable = function(callback) {\n    let params = {\n        TableName: \"scan_table\"\n    };\n\n    //let items = []\n    let records = 0;\n\n    let scanExecute = function(callback) {\n\n        dynamodb.scan(params,function(err,result) {\n\n            if(err) {\n                callback(err);\n            } else {\n                 //\u30ec\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u3092\u53d6\u5f97\u5834\u5408\n                //items = items.concat(result.Items); \n                records += result.Count;\n                console.log('records=' + records);\n                if(result.LastEvaluatedKey) {\n                   params.ExclusiveStartKey = result.LastEvaluatedKey;\n                    scanExecute(callback);\n                } else {\n                    callback(err,records);\n                    //callback(err,items);\n                }\n            }\n        });\n    }\n    scanExecute(callback);\n};\n\nscanTable(function(err, all) {\n    console.log(err, all);\n});\n\n\n\u51fa\u529b\nrecords=14171\nrecords=28342\nrecords=42513\nrecords=56684\nrecords=70855\nrecords=85026\nrecords=99197\nrecords=113368\nrecords=127539\nrecords=141710\nrecords=155881\nrecords=170052\nrecords=184223\nrecords=198394\nrecords=212565\nrecords=226736\nrecords=240907\nrecords=255078\nrecords=269249\nrecords=283420\nrecords=297591\nrecords=311762\nrecords=325933\nrecords=340104\nrecords=354275\nrecords=368446\nrecords=382617\n....\n\n\nDynamoDB\u306e\u8aad\u307f\u8fbc\u307f\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30fc\u304c\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u624b\u9806\u3067\u5168\u30ec\u30b3\u30fc\u30c9\u6570\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\nDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u9805\u76ee\u6570\u3084\u30b9\u30c8\u30ec\u30fc\u30b8\u5bb9\u91cf\u306b\u3064\u3044\u3066\u306f\u3001\u753b\u9762\u4e0a\u306b\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u306f\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3002\u300c\u3053\u308c\u3089\u306f\u3001\u304a\u3088\u305d 6 \u6642\u9593\u3054\u3068\u306b\u5b9a\u671f\u7684\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u300d\u3068\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\nDynamoDB\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3084\u524a\u9664\u306a\u3069\u306e\u958b\u767a\u3092\u3059\u308b\u5834\u5408\u3001\u975e\u5e38\u306b\u4e0d\u4fbf\u3067\u3059\u3002\u30c6\u30fc\u30d6\u30eb\u306e\u9805\u76ee\u6570\u306e\u53d6\u5f97\u65b9\u6cd5\u306b\u3064\u3044\u3066\u4e0b\u8a18\u306e\u5e7e\u3064\u304b\u304c\u3042\u308a\u307e\u3059\u3002\n\n## \u4e8b\u524d\u6e96\u5099\n```\nlet aws = require('aws-sdk');\nlet util = require('util');\nlet awsConfiguration = {\n    \"accessKeyId\": \"accessKeyId\",\n    \"secretAccessKey\": \"secretAccessKey\",\n    \"region\": \"ap-northeast-1\" //tokyo\n  };\naws.config.update(awsConfiguration);\n\nlet dynamodb = new aws.DynamoDB({apiVersion: '2012-08-10'});\nlet params = {TableName:'scan_table'};\n```\n## describe-table \uff08\u30c6\u30fc\u30d6\u30eb\u8a73\u7d30\u8868\u793a\uff09\n\n```\ndynamodb.describeTable(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n    }\n});\n```\n\n### \u51fa\u529b\n\n```\n{\n    \"TableDescription\": {\n        \"TableArn\": \"arn:aws:dynamodb:ap-northeast-1:0:table/scan_table\",\n        \"AttributeDefinitions\": [\n            {\n                \"AttributeName\": \"id\",\n                \"AttributeType\": \"N\"\n            },\n            {\n                \"AttributeName\": \"name\",\n                \"AttributeType\": \"S\"\n            }\n        ],\n        \"ProvisionedThroughput\": {\n            \"NumberOfDecreasesToday\": 0,\n            \"WriteCapacityUnits\": 1,\n            \"ReadCapacityUnits\": 100,\n            \"LastDecreaseDateTime\": 1484895396.199\n        },\n        \"TableSizeBytes\": 0,\n        \"TableName\": \"scan_table\",\n        \"TableStatus\": \"ACTIVE\",\n        \"KeySchema\": [\n            {\n                \"KeyType\": \"HASH\",\n                \"AttributeName\": \"name\"\n            },\n            {\n                \"KeyType\": \"RANGE\",\n                \"AttributeName\": \"id\"\n            }\n        ],\n        \"ItemCount\": 0,\n        \"CreationDateTime\": 1484890557.888\n    }\n}\n```\n\"ItemCount\": 0 \u306f\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u6570\u3002\ndescribe-table\u306f\u753b\u9762\u306e\u6982\u8981\u3092\u8868\u793a\u3059\u308b\u3060\u3051\u3067\u3001\u753b\u9762\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u66f4\u65b0\u3055\u308c\u306a\u3044\u5834\u5408\u3001\u3053\u3061\u3089\u306e\u60c5\u5831\u3082\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3002\n\n## scan\u3000\uff08\u5168\u4ef6\u51fa\u529b\uff09\n```\nlet params = {\n    TableName: \"scan_table\",\n    Select: \"COUNT\"\n};\n//DynamoDB scan only returns up to 1MB of data, so we need to keep scanning.\ndynamodb.scan(params, function (err, res) {\n    console.log(util.inspect(res, false, null));\n});\n```\n\n### \u51fa\u529b\n```\n{ Count: 14171,\n  ScannedCount: 14171,\n  LastEvaluatedKey:\n   { name: { S: 'testtesttestetettsetstetesse' },\n     id: { N: '14171' } } }\n```\n14171\u306e\u30ec\u30b3\u30fc\u30c9\u6570\u304c\u53d6\u5f97\u3055\u308c\u305f\u3060\u3051\u3067\u3059\u3002\u5b9f\u306f1\u5104\u3050\u3089\u3044\u30ec\u30b3\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u539f\u56e0\u306fDynamoDB\u306escan\u306f1MB\u306e\u30c7\u30fc\u30bf\u306e\u5236\u9650\u304c\u3042\u308b\u306e\u3067\u30011MB\u8d85\u3048\u305f\u3089\u3001scan\u505c\u6b62\u3057\u3066\u7d50\u679c\u3092return\u3057\u307e\u3059\u3002LastEvaluatedKey\u3092\u4f7f\u3063\u3066\u7e70\u308a\u8fd4\u3057scan\u3057\u3066\u3001\u5168\u30ec\u30b3\u30fc\u30c9\u6570\u3092return\u3067\u304d\u307e\u3059\u3002\n\n### \u5b9f\u88c5\u65b9\u6cd5\n\n```\nlet scanTable = function(callback) {\n    let params = {\n        TableName: \"scan_table\"\n    };\n\n    //let items = []\n    let records = 0;\n\n    let scanExecute = function(callback) {\n\n        dynamodb.scan(params,function(err,result) {\n\n            if(err) {\n                callback(err);\n            } else {\n                 //\u30ec\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u3092\u53d6\u5f97\u5834\u5408\n                //items = items.concat(result.Items); \n                records += result.Count;\n                console.log('records=' + records);\n                if(result.LastEvaluatedKey) {\n                   params.ExclusiveStartKey = result.LastEvaluatedKey;\n                    scanExecute(callback);\n                } else {\n                    callback(err,records);\n                    //callback(err,items);\n                }\n            }\n        });\n    }\n    scanExecute(callback);\n};\n\nscanTable(function(err, all) {\n    console.log(err, all);\n});\n```\n\n### \u51fa\u529b\n\n```\nrecords=14171\nrecords=28342\nrecords=42513\nrecords=56684\nrecords=70855\nrecords=85026\nrecords=99197\nrecords=113368\nrecords=127539\nrecords=141710\nrecords=155881\nrecords=170052\nrecords=184223\nrecords=198394\nrecords=212565\nrecords=226736\nrecords=240907\nrecords=255078\nrecords=269249\nrecords=283420\nrecords=297591\nrecords=311762\nrecords=325933\nrecords=340104\nrecords=354275\nrecords=368446\nrecords=382617\n....\n\n```\nDynamoDB\u306e\u8aad\u307f\u8fbc\u307f\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30fc\u304c\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u624b\u9806\u3067\u5168\u30ec\u30b3\u30fc\u30c9\u6570\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n", "tags": ["AWS", "DynamoDB", "aws-sdk", "nodejs", "bigdata"]}