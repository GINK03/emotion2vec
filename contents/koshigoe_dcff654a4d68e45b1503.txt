{"context": "CSV \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001CSV \u30c7\u30fc\u30bf\u3092\u6301\u3064 IO \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 @io \u3068\u3044\u3046\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3067\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f CSV \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3044\u304f\u3064\u304b\u306e IO \u30e1\u30bd\u30c3\u30c9\u3092 @io \u306b\u59d4\u8b72\u3057\u3066\u3044\u307e\u3059\u3002\n\ncsv.rb\n  ### IO and StringIO Delegation ###\n\n  extend Forwardable\n  def_delegators :@io, :binmode, :binmode?, :close, :close_read, :close_write,\n                       :closed?, :eof, :eof?, :external_encoding, :fcntl,\n                       :fileno, :flock, :flush, :fsync, :internal_encoding,\n                       :ioctl, :isatty, :path, :pid, :pos, :pos=, :reopen,\n                       :seek, :stat, :string, :sync, :sync=, :tell, :to_i,\n                       :to_io, :truncate, :tty?\n\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u611f\u3058\u3067 malformed \u306a(\u7269\u7406)\u884c\u3092\u62bd\u51fa\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\ntest.rb\nrequire 'csv'\nrequire 'tempfile'\n\nTempfile.create('malformed-csv') do |temp|\n  temp.write(<<EOF)\nid,name,value\n\"1\",\"NAME\",\"VALUE\"\n\"2\",\"NAME\",\"VALUE\"\n\"3\",NAME\"\",\"VAL\nUE\"\nEOF\n  temp.flush\n\n  processed_position = 0\n  begin\n    csv = CSV.open(temp.path)\n    csv.each do |_|\n      processed_position = csv.pos\n    end\n  rescue CSV::MalformedCSVError\n    aborted_position = csv.pos\n    io = csv.to_io\n    io.seek(processed_position)\n    p io.read(aborted_position - processed_position)\n  end\nend\n\n__END__\n\"\\\"3\\\",NAME\\\"\\\",\\\"VAL\\n\"\n\n\n`CSV` \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001CSV \u30c7\u30fc\u30bf\u3092\u6301\u3064 IO \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 `@io` \u3068\u3044\u3046\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3067\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f `CSV` \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3044\u304f\u3064\u304b\u306e IO \u30e1\u30bd\u30c3\u30c9\u3092 `@io` \u306b\u59d4\u8b72\u3057\u3066\u3044\u307e\u3059\u3002\n\n```ruby:csv.rb\n  ### IO and StringIO Delegation ###\n\n  extend Forwardable\n  def_delegators :@io, :binmode, :binmode?, :close, :close_read, :close_write,\n                       :closed?, :eof, :eof?, :external_encoding, :fcntl,\n                       :fileno, :flock, :flush, :fsync, :internal_encoding,\n                       :ioctl, :isatty, :path, :pid, :pos, :pos=, :reopen,\n                       :seek, :stat, :string, :sync, :sync=, :tell, :to_i,\n                       :to_io, :truncate, :tty?\n```\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u611f\u3058\u3067 malformed \u306a(\u7269\u7406)\u884c\u3092\u62bd\u51fa\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n```ruby:test.rb\nrequire 'csv'\nrequire 'tempfile'\n\nTempfile.create('malformed-csv') do |temp|\n  temp.write(<<EOF)\nid,name,value\n\"1\",\"NAME\",\"VALUE\"\n\"2\",\"NAME\",\"VALUE\"\n\"3\",NAME\"\",\"VAL\nUE\"\nEOF\n  temp.flush\n\n  processed_position = 0\n  begin\n    csv = CSV.open(temp.path)\n    csv.each do |_|\n      processed_position = csv.pos\n    end\n  rescue CSV::MalformedCSVError\n    aborted_position = csv.pos\n    io = csv.to_io\n    io.seek(processed_position)\n    p io.read(aborted_position - processed_position)\n  end\nend\n\n__END__\n\"\\\"3\\\",NAME\\\"\\\",\\\"VAL\\n\"\n```\n", "tags": ["Ruby", "CSV"]}