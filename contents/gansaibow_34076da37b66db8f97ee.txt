{"context": "\n\nSequencer\u6539\u9020 2\n\n\u524d\u56de\nSequencer\u6539\u9020\nhttp://qiita.com/gansaibow/items/d47874de4628ca8fa93d\n\n\u7d9a\u304d\nLOCTEXT\u306e\u7b2c\u4e00\u5f15\u6570\u3082Pokopen\u306b\u3059\u308b\u3053\u3068\u3067\u3001Delete\u304c\u8868\u793a\u3055\u308c\u305f\n\u3069\u3053\u304b\u306bKey\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u91cd\u8907\u3057\u306a\u3055\u305d\u3046\u306aKey\u540d\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u826f\u3055\u305d\u3046\u3002\n\n\n\n1\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u30ad\u30fc\u3092\u6253\u3064\nToolTip\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u691c\u7d22\u30ef\u30fc\u30c9\u3068\u3057\u3066\u53d6\u5f97\u3059\u308b\n[Add a new key at the current time]\n\n\u691c\u7d22\u7bc4\u56f2\u3092\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306b\u8a2d\u5b9a\u3057\u3066\u3001\u691c\u7d22\u30ef\u30fc\u30c9\u3092\u5165\u308c\u3066\u691c\u7d22\u3059\u308b\u3068\u8a72\u5f53\u7b87\u6240\u304c\u898b\u3064\u304b\u308b\n\n\u8a72\u5f53\u306e\u30dc\u30bf\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nOnAddKeyClicked\u3068\u3044\u3046\u30a4\u30d9\u30f3\u30c8\u3067\u30ad\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\nOnClicked(this, &SKeyNavigationButtons::OnAddKeyClicked)\n\nSKeyNavigationButtons.h\n            // Add key slot\n            + SHorizontalBox::Slot()\n            .VAlign(VAlign_Center)\n            .AutoWidth()\n            [\n                SNew(SBorder)\n                .Padding(0)\n                .BorderImage(NoBorder)\n                .ColorAndOpacity(HoverTint)\n                .IsEnabled(!InDisplayNode->GetSequencer().IsReadOnly())\n                [\n                    SNew(SButton)\n                    .ButtonStyle(FEditorStyle::Get(), \"FlatButton\")\n                    .ToolTipText(LOCTEXT(\"AddKeyButton\", \"Add a new key at the current time\"))\n                    .OnClicked(this, &SKeyNavigationButtons::OnAddKeyClicked)\n                    .ForegroundColor( FSlateColor::UseForeground() )\n                    .ContentPadding(0)\n                    .IsFocusable(false)\n                    [\n                        SNew(STextBlock)\n                        .Font(FEditorStyle::Get().GetFontStyle(\"FontAwesome.7\"))\n                        .Text(FText::FromString(FString(TEXT(\"\\xf055\"))) /*fa-plus-circle*/)\n                    ]\n                ]\n            ]\n\n\nOnAddKeyClicked\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u5b9a\u7fa9\u306b\u79fb\u52d5\n\n\nSKeyNavigationButtons.h\n    FReply OnAddKeyClicked()\n    {\n        FSequencer& Sequencer = DisplayNode->GetSequencer();\n        float CurrentTime = Sequencer.GetLocalTime();\n\n        TSet<TSharedPtr<IKeyArea>> KeyAreas;\n        SequencerHelpers::GetAllKeyAreas(DisplayNode, KeyAreas);\n\n        TArray<UMovieSceneSection*> KeyAreaSections;\n        for (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n        {\n            UMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n            KeyAreaSections.Add(OwningSection);\n        }\n\n        UMovieSceneSection* NearestSection = MovieSceneHelpers::FindNearestSectionAtTime(KeyAreaSections, CurrentTime);\n        if (!NearestSection)\n        {\n            return FReply::Unhandled();\n        }\n\n        FScopedTransaction Transaction(LOCTEXT(\"AddKeys\", \"Add Keys at Current Time\"));\n        for (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n        {\n            UMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n            if (OwningSection == NearestSection)\n            {\n                OwningSection->SetFlags(RF_Transactional);\n                if (OwningSection->TryModify())\n                {\n                    KeyArea->AddKeyUnique(CurrentTime, Sequencer.GetKeyInterpolation());\n                }\n            }\n        }\n\n        Sequencer.UpdatePlaybackRange();\n\n        return FReply::Handled();\n    }\n\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30dc\u30bf\u30f3\u3092\u8ffd\u52a0\u3057\u3066\nOnAddKeyClicked\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001\u65b0\u3057\u3044\u95a2\u6570OnAddKeyAllFrameClicked\u3092\u4f5c\u6210\u3059\u308b\n\nSKeyNavigationButtons.h\n            // Add key slot\n            + SHorizontalBox::Slot()\n            .VAlign(VAlign_Center)\n            .AutoWidth()\n            [\n                SNew(SBorder)\n                .Padding(0)\n                .BorderImage(NoBorder)\n                .ColorAndOpacity(HoverTint)\n                .IsEnabled(!InDisplayNode->GetSequencer().IsReadOnly())\n                [\n                    SNew(SButton)\n                    .ButtonStyle(FEditorStyle::Get(), \"FlatButton\")\n                    .ToolTipText(LOCTEXT(\"AddKeyButton\", \"Add a new key at the current time\"))\n                    .OnClicked(this, &SKeyNavigationButtons::OnAddKeyClicked)\n                    .ForegroundColor( FSlateColor::UseForeground() )\n                    .ContentPadding(0)\n                    .IsFocusable(false)\n                    [\n                        SNew(STextBlock)\n                        .Font(FEditorStyle::Get().GetFontStyle(\"FontAwesome.7\"))\n                        .Text(FText::FromString(FString(TEXT(\"\\xf055\"))) /*fa-plus-circle*/)\n                    ]\n                ]\n            ]\n            // Add key slot 2\n            + SHorizontalBox::Slot()\n            .VAlign(VAlign_Center)\n            .AutoWidth()\n            [\n                SNew(SBorder)\n                .Padding(0)\n                .BorderImage(NoBorder)\n                .ColorAndOpacity(HoverTint)\n                .IsEnabled(!InDisplayNode->GetSequencer().IsReadOnly())\n                [\n                    SNew(SButton)\n                    .ButtonStyle(FEditorStyle::Get(), \"FlatButton\")\n                    .ToolTipText(LOCTEXT(\"AddKeyAllButton\", \"Add a new key All frame\"))\n                    .OnClicked(this, &SKeyNavigationButtons::OnAddKeyAllFrameClicked)\n                    .ForegroundColor( FSlateColor::UseForeground() )\n                    .ContentPadding(0)\n                    .IsFocusable(false)\n                    [\n                        SNew(STextBlock)\n                        .Font(FEditorStyle::Get().GetFontStyle(\"FontAwesome.7\"))\n                        .Text(FText::FromString(FString(TEXT(\"\\xf055\"))) /*fa-plus-circle*/)\n                    ]\n                ]\n            ]\n\n\n\nCurrentFrame\u306b1\u3092\u8db3\u3057\u3066\u3001\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u30ad\u30fc\u3092\u6253\u3063\u3066\u307f\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u5909\u3048\u3066\u307f\u308b\n\nSKeyNavigationButtons.h\n    FReply OnAddKeyAllFrameClicked()\n    {\n        FSequencer& Sequencer = DisplayNode->GetSequencer();\n\n        float CurrentTime = Sequencer.GetGlobalTime();\n        CurrentTime = CurrentTime + 1;\n        Sequencer.SetGlobalTime(CurrentTime);\n\n        TSet<TSharedPtr<IKeyArea>> KeyAreas;\n        SequencerHelpers::GetAllKeyAreas(DisplayNode, KeyAreas);\n\n        TArray<UMovieSceneSection*> KeyAreaSections;\n        for (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n        {\n            UMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n            KeyAreaSections.Add(OwningSection);\n        }\n\n        UMovieSceneSection* NearestSection = MovieSceneHelpers::FindNearestSectionAtTime(KeyAreaSections, CurrentTime);\n        if (!NearestSection)\n        {\n            return FReply::Unhandled();\n        }\n\n        FScopedTransaction Transaction(LOCTEXT(\"AddKeys\", \"Add Keys at Current Time\"));\n        for (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n        {\n            UMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n            if (OwningSection == NearestSection)\n            {\n                OwningSection->SetFlags(RF_Transactional);\n                if (OwningSection->TryModify())\n                {\n                    KeyArea->AddKeyUnique(CurrentTime, Sequencer.GetKeyInterpolation());\n                }\n            }\n        }\n\n        Sequencer.UpdatePlaybackRange();\n\n        return FReply::Handled();\n    }\n\n\n\u30dc\u30bf\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u305f\u304c\u3001\uff13\uff10\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u30ad\u30fc\u304c\u6253\u305f\u308c\u3066\u3057\u307e\u3046\nCurrentTime = CurrentTime + 1;\n\u3068\u3059\u308b\u3068\u3001\u8a2d\u5b9a\u3057\u3066\u3044\u308bFPS x 1\u304c\u9032\u3093\u3067\u3057\u307e\u3046\n1\u30d5\u30ec\u30fc\u30e0\u5206\u3092\u53d6\u5f97\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\n\n1\u30d5\u30ec\u30fc\u30e0\u5206\u306e\u6642\u9593\u306fSequencer.cpp\u3067Settings->GetTimeSnapInterval()\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3088\u3046\u3060\u3002\nSequencer.h\u3068Sequencer.cpp\u306bGetOneFrameTime\u3092\u8ffd\u52a0\u3059\u308b\n\nSequencer.h\npublic:\n\n    FMovieSceneRootEvaluationTemplateInstance& GetSequenceInstance() { return RootTemplateInstance; }\n    float GetOneFrameTime();\n\n\n\nSequencer.cpp\nfloat FSequencer::GetOneFrameTime()\n{\n    return Settings->GetTimeSnapInterval();\n}\n\n\nOnAddKeyAllFrameClicked\u30921\u30d5\u30ec\u30fc\u30e0\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u30ad\u30fc\u3092\u6253\u3064\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u307f\u308b\n\nSKeyNavigationButtons.h\n    FReply OnAddKeyAllFrameClicked()\n    {\n        FSequencer& Sequencer = DisplayNode->GetSequencer();\n\n        float oneFrameTime = Sequencer.GetOneFrameTime();\n        float CurrentTime = Sequencer.GetGlobalTime();\n        CurrentTime = CurrentTime + oneFrameTime;\n        Sequencer.SetGlobalTime(CurrentTime);\n\n        TSet<TSharedPtr<IKeyArea>> KeyAreas;\n        SequencerHelpers::GetAllKeyAreas(DisplayNode, KeyAreas);\n\n        TArray<UMovieSceneSection*> KeyAreaSections;\n        for (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n        {\n            UMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n            KeyAreaSections.Add(OwningSection);\n        }\n\n        UMovieSceneSection* NearestSection = MovieSceneHelpers::FindNearestSectionAtTime(KeyAreaSections, CurrentTime);\n        if (!NearestSection)\n        {\n            return FReply::Unhandled();\n        }\n\n        FScopedTransaction Transaction(LOCTEXT(\"AddKeys\", \"Add Keys at Current Time\"));\n        for (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n        {\n            UMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n            if (OwningSection == NearestSection)\n            {\n                OwningSection->SetFlags(RF_Transactional);\n                if (OwningSection->TryModify())\n                {\n                    KeyArea->AddKeyUnique(CurrentTime, Sequencer.GetKeyInterpolation());\n                }\n            }\n        }\n\n        Sequencer.UpdatePlaybackRange();\n\n        return FReply::Handled();\n    }\n\n\n1\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u30ad\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u308b\n\n\n\u5168\u30d5\u30ec\u30fc\u30e0\u306b\u30ad\u30fc\u3092\u6253\u3064\n\u3042\u3068\u306f\u958b\u59cb\u30d5\u30ec\u30fc\u30e0\u3068\u7d42\u4e86\u30d5\u30ec\u30fc\u30e0\u304c\u53d6\u5f97\u3067\u304d\u308c\u3070\u3001\u5168\u30d5\u30ec\u30fc\u30e0\u306b\u30ad\u30fc\u304c\u6253\u3066\u305d\u3046\u3060\n\u958b\u59cb\u30d5\u30ec\u30fc\u30e0\u3068\u7d42\u4e86\u30d5\u30ec\u30fc\u30e0\u306fGetPlaybackRange()\u3067\u53d6\u5f97\u3067\u304d\u308b\n\u7d42\u4e86\u30d5\u30ec\u30fc\u30e0\u306e\u30d5\u30ec\u30fc\u30e0\u30c8\u30fc\u30bf\u30eb\u6642\u9593\u306f\nPlaybackRange\u306e\u7d42\u4e86\u30d5\u30ec\u30fc\u30e0 * (\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8 * 1\u30d5\u30ec\u30fc\u30e0\u306e\u6642\u9593)\u3067\u51fa\u305b\u308b\u3002\n\u958b\u59cb\u30c8\u30fc\u30bf\u30eb\u6642\u9593\u3068\u7d42\u4e86\u30c8\u30fc\u30bf\u30eb\u6642\u9593\u306e1\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306e\u6642\u9593\u3092\u914d\u5217\u306b\u5165\u308c\u3066\u623b\u308a\u5024\u3068\u3057\u3066\u8fd4\u3059\nGetAllFrameTimes\u3092Sequencer.h(Public)\u3068Sequencer.cpp\u306b\u8ffd\u52a0\n\nSequencer.h\n    TArray<float> GetAllFrameTimes();\n\n\nOnAddKeyAllFrameClicked\u304b\u3089GetAllFrameTimes\u3067\u5168\u30d5\u30ec\u30fc\u30e0\u306e\u30ad\u30fc\u30d5\u30ec\u30fc\u30e0\u6642\u9593\u914d\u5217\u3092\u53d6\u5f97\u3057\u3066\u3001\u5168\u30d5\u30ec\u30fc\u30e0\u30ad\u30fc\u3092\u6253\u3064\u3088\u3046\u306b\u4fee\u6b63\u3059\u308b\n\nSequencer.cpp\nTArray<float> FSequencer::GetAllFrameTimes()\n{\n    TArray<float> allFrameTimes;\n    float frameRate = 1.0f / Settings->GetTimeSnapInterval();\n    float oneFrameTime = Settings->GetTimeSnapInterval();\n\n    TRange<float> range = GetPlaybackRange();\n    float StartTime = range.GetLowerBoundValue();\n    float EndTime = range.GetUpperBoundValue();\n\n    float startFrame = StartTime * (frameRate * oneFrameTime);\n    float endFrame = EndTime * (frameRate * oneFrameTime);\n\n    for (float i = startFrame; i < endFrame; i = i + oneFrameTime)\n    {\n        allFrameTimes.Add(i);\n    }\n\n    return allFrameTimes;\n}\n\n\nOnAddKeyAllFrameClicked\u306bGetAllFrameTimes\u3067\u5168\u30d5\u30ec\u30fc\u30e0\u306e\u6642\u9593\u3092\u53d6\u5f97\u3057\u3066\u3001\u30ad\u30fc\u3092\u6253\u3064\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\n\nSKeyNavigationButtons.h\n    FReply OnAddKeyAllFrameClicked()\n    {\n        FSequencer& Sequencer = DisplayNode->GetSequencer();\n\n        TArray<float> allFrameTimes = Sequencer.GetAllFrameTimes();\n\n        for (float CurrentTime : allFrameTimes)\n        {\n            Sequencer.SetGlobalTime(CurrentTime);\n\n            TSet<TSharedPtr<IKeyArea>> KeyAreas;\n            SequencerHelpers::GetAllKeyAreas(DisplayNode, KeyAreas);\n\n            TArray<UMovieSceneSection*> KeyAreaSections;\n            for (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n            {\n                UMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n                KeyAreaSections.Add(OwningSection);\n            }\n\n            UMovieSceneSection* NearestSection = MovieSceneHelpers::FindNearestSectionAtTime(KeyAreaSections, CurrentTime);\n            if (!NearestSection)\n            {\n                return FReply::Unhandled();\n            }\n\n            FScopedTransaction Transaction(LOCTEXT(\"AddKeys\", \"Add Keys at Current Time\"));\n            for (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n            {\n                UMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n                if (OwningSection == NearestSection)\n                {\n                    OwningSection->SetFlags(RF_Transactional);\n                    if (OwningSection->TryModify())\n                    {\n                        KeyArea->AddKeyUnique(CurrentTime, Sequencer.GetKeyInterpolation());\n                    }\n                }\n            }\n\n        }\n\n        Sequencer.UpdatePlaybackRange();\n\n        return FReply::Handled();\n    }\n\n\n\n# Sequencer\u6539\u9020 2\n## \u524d\u56de\nSequencer\u6539\u9020\nhttp://qiita.com/gansaibow/items/d47874de4628ca8fa93d\n\n## \u7d9a\u304d\n\nLOCTEXT\u306e\u7b2c\u4e00\u5f15\u6570\u3082Pokopen\u306b\u3059\u308b\u3053\u3068\u3067\u3001Delete\u304c\u8868\u793a\u3055\u308c\u305f\n\u3069\u3053\u304b\u306bKey\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u91cd\u8907\u3057\u306a\u3055\u305d\u3046\u306aKey\u540d\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u826f\u3055\u305d\u3046\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/111261/f9ad231b-3acc-82d5-98ce-cd57bd3e8ba9.png)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/111261/f0530014-f0a0-52d9-d1a5-903e940ad0aa.png)\n\n\n## 1\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u30ad\u30fc\u3092\u6253\u3064\n\nToolTip\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u691c\u7d22\u30ef\u30fc\u30c9\u3068\u3057\u3066\u53d6\u5f97\u3059\u308b\n[Add a new key at the current time]\n![image](https://qiita-image-store.s3.amazonaws.com/0/111261/119b24b3-bfa4-5edb-d695-47df8ad64fec.png)\n\n\u691c\u7d22\u7bc4\u56f2\u3092\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306b\u8a2d\u5b9a\u3057\u3066\u3001\u691c\u7d22\u30ef\u30fc\u30c9\u3092\u5165\u308c\u3066\u691c\u7d22\u3059\u308b\u3068\u8a72\u5f53\u7b87\u6240\u304c\u898b\u3064\u304b\u308b\n![image](https://qiita-image-store.s3.amazonaws.com/0/111261/f4b686e4-62a9-ec43-8d56-952abbb17c82.png)\n\n\u8a72\u5f53\u306e\u30dc\u30bf\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nOnAddKeyClicked\u3068\u3044\u3046\u30a4\u30d9\u30f3\u30c8\u3067\u30ad\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\nOnClicked(this, &SKeyNavigationButtons::OnAddKeyClicked)\n\n\n```C++:SKeyNavigationButtons.h\n\t\t\t// Add key slot\n\t\t\t+ SHorizontalBox::Slot()\n\t\t\t.VAlign(VAlign_Center)\n\t\t\t.AutoWidth()\n\t\t\t[\n\t\t\t\tSNew(SBorder)\n\t\t\t\t.Padding(0)\n\t\t\t\t.BorderImage(NoBorder)\n\t\t\t\t.ColorAndOpacity(HoverTint)\n\t\t\t\t.IsEnabled(!InDisplayNode->GetSequencer().IsReadOnly())\n\t\t\t\t[\n\t\t\t\t\tSNew(SButton)\n\t\t\t\t\t.ButtonStyle(FEditorStyle::Get(), \"FlatButton\")\n\t\t\t\t\t.ToolTipText(LOCTEXT(\"AddKeyButton\", \"Add a new key at the current time\"))\n\t\t\t\t\t.OnClicked(this, &SKeyNavigationButtons::OnAddKeyClicked)\n\t\t\t\t\t.ForegroundColor( FSlateColor::UseForeground() )\n\t\t\t\t\t.ContentPadding(0)\n\t\t\t\t\t.IsFocusable(false)\n\t\t\t\t\t[\n\t\t\t\t\t\tSNew(STextBlock)\n\t\t\t\t\t\t.Font(FEditorStyle::Get().GetFontStyle(\"FontAwesome.7\"))\n\t\t\t\t\t\t.Text(FText::FromString(FString(TEXT(\"\\xf055\"))) /*fa-plus-circle*/)\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n```\nOnAddKeyClicked\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u5b9a\u7fa9\u306b\u79fb\u52d5\n![image](https://qiita-image-store.s3.amazonaws.com/0/111261/b62a920d-39a7-db4f-a908-f56cae8c4fca.png)\n\n\n```C++:SKeyNavigationButtons.h\n\tFReply OnAddKeyClicked()\n\t{\n\t\tFSequencer& Sequencer = DisplayNode->GetSequencer();\n\t\tfloat CurrentTime = Sequencer.GetLocalTime();\n\n\t\tTSet<TSharedPtr<IKeyArea>> KeyAreas;\n\t\tSequencerHelpers::GetAllKeyAreas(DisplayNode, KeyAreas);\n\n\t\tTArray<UMovieSceneSection*> KeyAreaSections;\n\t\tfor (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n\t\t{\n\t\t\tUMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n\t\t\tKeyAreaSections.Add(OwningSection);\n\t\t}\n\n\t\tUMovieSceneSection* NearestSection = MovieSceneHelpers::FindNearestSectionAtTime(KeyAreaSections, CurrentTime);\n\t\tif (!NearestSection)\n\t\t{\n\t\t\treturn FReply::Unhandled();\n\t\t}\n\n\t\tFScopedTransaction Transaction(LOCTEXT(\"AddKeys\", \"Add Keys at Current Time\"));\n\t\tfor (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n\t\t{\n\t\t\tUMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n\t\t\tif (OwningSection == NearestSection)\n\t\t\t{\n\t\t\t\tOwningSection->SetFlags(RF_Transactional);\n\t\t\t\tif (OwningSection->TryModify())\n\t\t\t\t{\n\t\t\t\t\tKeyArea->AddKeyUnique(CurrentTime, Sequencer.GetKeyInterpolation());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSequencer.UpdatePlaybackRange();\n\n\t\treturn FReply::Handled();\n\t}\n```\n\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30dc\u30bf\u30f3\u3092\u8ffd\u52a0\u3057\u3066\nOnAddKeyClicked\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001\u65b0\u3057\u3044\u95a2\u6570OnAddKeyAllFrameClicked\u3092\u4f5c\u6210\u3059\u308b\n\n```C++:SKeyNavigationButtons.h\n\t\t\t// Add key slot\n\t\t\t+ SHorizontalBox::Slot()\n\t\t\t.VAlign(VAlign_Center)\n\t\t\t.AutoWidth()\n\t\t\t[\n\t\t\t\tSNew(SBorder)\n\t\t\t\t.Padding(0)\n\t\t\t\t.BorderImage(NoBorder)\n\t\t\t\t.ColorAndOpacity(HoverTint)\n\t\t\t\t.IsEnabled(!InDisplayNode->GetSequencer().IsReadOnly())\n\t\t\t\t[\n\t\t\t\t\tSNew(SButton)\n\t\t\t\t\t.ButtonStyle(FEditorStyle::Get(), \"FlatButton\")\n\t\t\t\t\t.ToolTipText(LOCTEXT(\"AddKeyButton\", \"Add a new key at the current time\"))\n\t\t\t\t\t.OnClicked(this, &SKeyNavigationButtons::OnAddKeyClicked)\n\t\t\t\t\t.ForegroundColor( FSlateColor::UseForeground() )\n\t\t\t\t\t.ContentPadding(0)\n\t\t\t\t\t.IsFocusable(false)\n\t\t\t\t\t[\n\t\t\t\t\t\tSNew(STextBlock)\n\t\t\t\t\t\t.Font(FEditorStyle::Get().GetFontStyle(\"FontAwesome.7\"))\n\t\t\t\t\t\t.Text(FText::FromString(FString(TEXT(\"\\xf055\"))) /*fa-plus-circle*/)\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\t// Add key slot 2\n\t\t\t+ SHorizontalBox::Slot()\n\t\t\t.VAlign(VAlign_Center)\n\t\t\t.AutoWidth()\n\t\t\t[\n\t\t\t\tSNew(SBorder)\n\t\t\t\t.Padding(0)\n\t\t\t\t.BorderImage(NoBorder)\n\t\t\t\t.ColorAndOpacity(HoverTint)\n\t\t\t\t.IsEnabled(!InDisplayNode->GetSequencer().IsReadOnly())\n\t\t\t\t[\n\t\t\t\t\tSNew(SButton)\n\t\t\t\t\t.ButtonStyle(FEditorStyle::Get(), \"FlatButton\")\n\t\t\t\t\t.ToolTipText(LOCTEXT(\"AddKeyAllButton\", \"Add a new key All frame\"))\n\t\t\t\t\t.OnClicked(this, &SKeyNavigationButtons::OnAddKeyAllFrameClicked)\n\t\t\t\t\t.ForegroundColor( FSlateColor::UseForeground() )\n\t\t\t\t\t.ContentPadding(0)\n\t\t\t\t\t.IsFocusable(false)\n\t\t\t\t\t[\n\t\t\t\t\t\tSNew(STextBlock)\n\t\t\t\t\t\t.Font(FEditorStyle::Get().GetFontStyle(\"FontAwesome.7\"))\n\t\t\t\t\t\t.Text(FText::FromString(FString(TEXT(\"\\xf055\"))) /*fa-plus-circle*/)\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\n```\n\nCurrentFrame\u306b1\u3092\u8db3\u3057\u3066\u3001\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u30ad\u30fc\u3092\u6253\u3063\u3066\u307f\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u5909\u3048\u3066\u307f\u308b\n\n```C++:SKeyNavigationButtons.h\n\tFReply OnAddKeyAllFrameClicked()\n\t{\n\t\tFSequencer& Sequencer = DisplayNode->GetSequencer();\n\n\t\tfloat CurrentTime = Sequencer.GetGlobalTime();\n\t\tCurrentTime = CurrentTime + 1;\n\t\tSequencer.SetGlobalTime(CurrentTime);\n\t\t\n\t\tTSet<TSharedPtr<IKeyArea>> KeyAreas;\n\t\tSequencerHelpers::GetAllKeyAreas(DisplayNode, KeyAreas);\n\n\t\tTArray<UMovieSceneSection*> KeyAreaSections;\n\t\tfor (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n\t\t{\n\t\t\tUMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n\t\t\tKeyAreaSections.Add(OwningSection);\n\t\t}\n\n\t\tUMovieSceneSection* NearestSection = MovieSceneHelpers::FindNearestSectionAtTime(KeyAreaSections, CurrentTime);\n\t\tif (!NearestSection)\n\t\t{\n\t\t\treturn FReply::Unhandled();\n\t\t}\n\n\t\tFScopedTransaction Transaction(LOCTEXT(\"AddKeys\", \"Add Keys at Current Time\"));\n\t\tfor (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n\t\t{\n\t\t\tUMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n\t\t\tif (OwningSection == NearestSection)\n\t\t\t{\n\t\t\t\tOwningSection->SetFlags(RF_Transactional);\n\t\t\t\tif (OwningSection->TryModify())\n\t\t\t\t{\n\t\t\t\t\tKeyArea->AddKeyUnique(CurrentTime, Sequencer.GetKeyInterpolation());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSequencer.UpdatePlaybackRange();\n\n\t\treturn FReply::Handled();\n\t}\n```\n\n\u30dc\u30bf\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u305f\u304c\u3001\uff13\uff10\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u30ad\u30fc\u304c\u6253\u305f\u308c\u3066\u3057\u307e\u3046\nCurrentTime = CurrentTime + 1;\n\u3068\u3059\u308b\u3068\u3001\u8a2d\u5b9a\u3057\u3066\u3044\u308bFPS x 1\u304c\u9032\u3093\u3067\u3057\u307e\u3046\n1\u30d5\u30ec\u30fc\u30e0\u5206\u3092\u53d6\u5f97\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/111261/291890d4-9c41-62b9-a516-5f169d0336ef.png)\n\n1\u30d5\u30ec\u30fc\u30e0\u5206\u306e\u6642\u9593\u306fSequencer.cpp\u3067Settings->GetTimeSnapInterval()\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3088\u3046\u3060\u3002\n\nSequencer.h\u3068Sequencer.cpp\u306bGetOneFrameTime\u3092\u8ffd\u52a0\u3059\u308b\n\n```C++:Sequencer.h\npublic:\n\n\tFMovieSceneRootEvaluationTemplateInstance& GetSequenceInstance() { return RootTemplateInstance; }\n\tfloat GetOneFrameTime();\n```\n\n```C++:Sequencer.cpp\nfloat FSequencer::GetOneFrameTime()\n{\n\treturn Settings->GetTimeSnapInterval();\n}\n```\n\nOnAddKeyAllFrameClicked\u30921\u30d5\u30ec\u30fc\u30e0\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u30ad\u30fc\u3092\u6253\u3064\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u307f\u308b\n\n```C++:SKeyNavigationButtons.h\n\tFReply OnAddKeyAllFrameClicked()\n\t{\n\t\tFSequencer& Sequencer = DisplayNode->GetSequencer();\n\n\t\tfloat oneFrameTime = Sequencer.GetOneFrameTime();\n\t\tfloat CurrentTime = Sequencer.GetGlobalTime();\n\t\tCurrentTime = CurrentTime + oneFrameTime;\n\t\tSequencer.SetGlobalTime(CurrentTime);\n\t\n\t\tTSet<TSharedPtr<IKeyArea>> KeyAreas;\n\t\tSequencerHelpers::GetAllKeyAreas(DisplayNode, KeyAreas);\n\n\t\tTArray<UMovieSceneSection*> KeyAreaSections;\n\t\tfor (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n\t\t{\n\t\t\tUMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n\t\t\tKeyAreaSections.Add(OwningSection);\n\t\t}\n\n\t\tUMovieSceneSection* NearestSection = MovieSceneHelpers::FindNearestSectionAtTime(KeyAreaSections, CurrentTime);\n\t\tif (!NearestSection)\n\t\t{\n\t\t\treturn FReply::Unhandled();\n\t\t}\n\n\t\tFScopedTransaction Transaction(LOCTEXT(\"AddKeys\", \"Add Keys at Current Time\"));\n\t\tfor (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n\t\t{\n\t\t\tUMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n\t\t\tif (OwningSection == NearestSection)\n\t\t\t{\n\t\t\t\tOwningSection->SetFlags(RF_Transactional);\n\t\t\t\tif (OwningSection->TryModify())\n\t\t\t\t{\n\t\t\t\t\tKeyArea->AddKeyUnique(CurrentTime, Sequencer.GetKeyInterpolation());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSequencer.UpdatePlaybackRange();\n\n\t\treturn FReply::Handled();\n\t}\n```\n\n1\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u30ad\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u308b\n![image](https://qiita-image-store.s3.amazonaws.com/0/111261/605dd896-8c47-323e-b607-4e6d3381cb93.png)\n\n## \u5168\u30d5\u30ec\u30fc\u30e0\u306b\u30ad\u30fc\u3092\u6253\u3064\n\n\u3042\u3068\u306f\u958b\u59cb\u30d5\u30ec\u30fc\u30e0\u3068\u7d42\u4e86\u30d5\u30ec\u30fc\u30e0\u304c\u53d6\u5f97\u3067\u304d\u308c\u3070\u3001\u5168\u30d5\u30ec\u30fc\u30e0\u306b\u30ad\u30fc\u304c\u6253\u3066\u305d\u3046\u3060\n\n\u958b\u59cb\u30d5\u30ec\u30fc\u30e0\u3068\u7d42\u4e86\u30d5\u30ec\u30fc\u30e0\u306fGetPlaybackRange()\u3067\u53d6\u5f97\u3067\u304d\u308b\n\n\u7d42\u4e86\u30d5\u30ec\u30fc\u30e0\u306e\u30d5\u30ec\u30fc\u30e0\u30c8\u30fc\u30bf\u30eb\u6642\u9593\u306f\nPlaybackRange\u306e\u7d42\u4e86\u30d5\u30ec\u30fc\u30e0 * (\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8 * 1\u30d5\u30ec\u30fc\u30e0\u306e\u6642\u9593)\u3067\u51fa\u305b\u308b\u3002\n\u958b\u59cb\u30c8\u30fc\u30bf\u30eb\u6642\u9593\u3068\u7d42\u4e86\u30c8\u30fc\u30bf\u30eb\u6642\u9593\u306e1\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306e\u6642\u9593\u3092\u914d\u5217\u306b\u5165\u308c\u3066\u623b\u308a\u5024\u3068\u3057\u3066\u8fd4\u3059\n\nGetAllFrameTimes\u3092Sequencer.h(Public)\u3068Sequencer.cpp\u306b\u8ffd\u52a0\n\n```C++:Sequencer.h\n\tTArray<float> GetAllFrameTimes();\n```\n\nOnAddKeyAllFrameClicked\u304b\u3089GetAllFrameTimes\u3067\u5168\u30d5\u30ec\u30fc\u30e0\u306e\u30ad\u30fc\u30d5\u30ec\u30fc\u30e0\u6642\u9593\u914d\u5217\u3092\u53d6\u5f97\u3057\u3066\u3001\u5168\u30d5\u30ec\u30fc\u30e0\u30ad\u30fc\u3092\u6253\u3064\u3088\u3046\u306b\u4fee\u6b63\u3059\u308b\n\n```C++:Sequencer.cpp\nTArray<float> FSequencer::GetAllFrameTimes()\n{\n\tTArray<float> allFrameTimes;\n\tfloat frameRate = 1.0f / Settings->GetTimeSnapInterval();\n\tfloat oneFrameTime = Settings->GetTimeSnapInterval();\n\n\tTRange<float> range = GetPlaybackRange();\n\tfloat StartTime = range.GetLowerBoundValue();\n\tfloat EndTime = range.GetUpperBoundValue();\n\n\tfloat startFrame = StartTime * (frameRate * oneFrameTime);\n\tfloat endFrame = EndTime * (frameRate * oneFrameTime);\n\n\tfor (float i = startFrame; i < endFrame; i = i + oneFrameTime)\n\t{\n\t\tallFrameTimes.Add(i);\n\t}\n\n\treturn allFrameTimes;\n}\n```\n\nOnAddKeyAllFrameClicked\u306bGetAllFrameTimes\u3067\u5168\u30d5\u30ec\u30fc\u30e0\u306e\u6642\u9593\u3092\u53d6\u5f97\u3057\u3066\u3001\u30ad\u30fc\u3092\u6253\u3064\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\n\n```C++:SKeyNavigationButtons.h\n\tFReply OnAddKeyAllFrameClicked()\n\t{\n\t\tFSequencer& Sequencer = DisplayNode->GetSequencer();\n\n\t\tTArray<float> allFrameTimes = Sequencer.GetAllFrameTimes();\n\n\t\tfor (float CurrentTime : allFrameTimes)\n\t\t{\n\t\t\tSequencer.SetGlobalTime(CurrentTime);\n\n\t\t\tTSet<TSharedPtr<IKeyArea>> KeyAreas;\n\t\t\tSequencerHelpers::GetAllKeyAreas(DisplayNode, KeyAreas);\n\n\t\t\tTArray<UMovieSceneSection*> KeyAreaSections;\n\t\t\tfor (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n\t\t\t{\n\t\t\t\tUMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n\t\t\t\tKeyAreaSections.Add(OwningSection);\n\t\t\t}\n\n\t\t\tUMovieSceneSection* NearestSection = MovieSceneHelpers::FindNearestSectionAtTime(KeyAreaSections, CurrentTime);\n\t\t\tif (!NearestSection)\n\t\t\t{\n\t\t\t\treturn FReply::Unhandled();\n\t\t\t}\n\n\t\t\tFScopedTransaction Transaction(LOCTEXT(\"AddKeys\", \"Add Keys at Current Time\"));\n\t\t\tfor (TSharedPtr<IKeyArea> KeyArea : KeyAreas)\n\t\t\t{\n\t\t\t\tUMovieSceneSection* OwningSection = KeyArea->GetOwningSection();\n\t\t\t\tif (OwningSection == NearestSection)\n\t\t\t\t{\n\t\t\t\t\tOwningSection->SetFlags(RF_Transactional);\n\t\t\t\t\tif (OwningSection->TryModify())\n\t\t\t\t\t{\n\t\t\t\t\t\tKeyArea->AddKeyUnique(CurrentTime, Sequencer.GetKeyInterpolation());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tSequencer.UpdatePlaybackRange();\n\n\t\treturn FReply::Handled();\n\t}\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/111261/d0cf524b-28ed-3fd0-2dcb-5c29eeb0a1d5.png)\n", "tags": ["UnrealEngine"]}