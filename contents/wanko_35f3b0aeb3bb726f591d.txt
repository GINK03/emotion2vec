{"tags": ["Line", "EC2", "CloudFront", "Go"], "context": "\n\nLINE BOT \u3063\u3066\u306a\u3093\u305e\n\n2016/4/7\u306bBOT API Trial Account\u304c\u7121\u511f\u3067\u516c\u958b\u3055\u308c\u305f \nBOT\u7528\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u767a\u884c\u304c\u53ef\u80fd\n\u53cb\u9054\u8ffd\u52a0\u3001\u30c8\u30fc\u30af\u306e\u53d7\u4fe1\u306a\u3069\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u81ea\u8eab\u304c\u7528\u610f\u3055\u3044\u305f\u30b5\u30fc\u30d0\u30fc\u306b\u60c5\u5831\u304c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u6e21\u3055\u308c\u308b\n\n\n\u4f55\u304c\u3067\u304d\u308b\u306e\n\n\u5bc2\u3057\u3055\u3092\u7d1b\u3089\u308f\u305b\u3089\u308c\u308b\n50\u4eba\u307e\u3067\u53cb\u9054\u4f5c\u308c\u308b\n\u53cb\u9054\u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u306e\u95b2\u89a7\n\u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n\u753b\u50cf\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n\u52d5\u753b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n\u97f3\u58f0\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n\u4f4d\u7f6e\u60c5\u5831\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n\u30b9\u30bf\u30f3\u30d7\u306e\u9001\u4fe1\n\n\n\u6e96\u5099\u7269\n\nLINE Business Center\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\nChannnels\uff08BOT\u306e\u30a2\u30ab\u30a6\u30f3\u30c8)\nHTTPS\u901a\u4fe1\u304c\u30dd\u30fc\u30c8\u6307\u5b9a\u3067\u53d7\u3051\u3089\u308c\u308b\u30b5\u30fc\u30d0\u30fc\n\n\n\u74b0\u5883\u4f5c\u3063\u3066\u307f\u3088\u3046\n\u4eca\u56de\u306f\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3067\u306f\u8a31\u3057\u3066\u3082\u3089\u3048\u306a\u3044\u306e\u3067\u3001\u3061\u3083\u3093\u3068\u3057\u305f\u8a3c\u660e\u66f8\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u304a\u904a\u3073\u3067\u4f5c\u308b\u306e\u3067\u3001\u308f\u3093\u3053\u3002\u306e\u304a\u5c0f\u9063\u3044\u3067\u307e\u304b\u306a\u3048\u308b\u3088\u3046\u3067\u304d\u308b\u3060\u3051\u4f4e\u30b3\u30b9\u30c8\u306b\u2026\u3002\n\nLINE \u95a2\u4fc2\u30a2\u30ab\u30a6\u30f3\u30c8\n\u304a\u3050\u3050\u308a\u304f\u3060\u3055\u3044\u307e\u305b\u3002\n\nHTTPS\u901a\u4fe1\u3067\u304d\u308b\u30b5\u30fc\u30d0\u30fc\u306e\u6e96\u5099\n\u4eca\u56de\u306fAWS\u3067\u69cb\u7bc9\u3057\u307e\u3059\u3002\nAWS\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u7b49\u306f\u304a\u3050\u3050\u308a\u304f\u3060\u3055\u3044\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001CloudFront\u3067\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u306eSSL\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u3001\nEC2\u3067http\u3092\u53d7\u3051\u53d6\u308b\u74b0\u5883\u306b\u3057\u307e\u3057\u305f\n\u4eca\u56de\u308f\u3093\u3053\u3002\u304c\u4f7f\u3063\u305f\u3082\u306e\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\nEC2\nElasticIP\nCertificate Manager\nCloudFront\nRoute53\n\n\nEC2\nt2.nano \u3092\u7528\u610f\u3057\u307e\u3059\u3002\nOS\u306f\u306a\u3093\u3067\u3082\u3044\u3044\u3067\u3059\u3002\u304a\u597d\u304d\u306a\u3082\u306e\u3092\u3069\u3046\u305e\u3002\n(t2\u7cfb\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306fEC2-Classic\u3067\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u7bc9\u306f\u51fa\u6765\u306a\u3044\u306e\u3067\u3001\u5f37\u5236\u7684\u306bVPC\u306b\u306a\u308a\u307e\u3059\n\nElasticIP\n\u65b0\u3057\u3044IP\u3092\u767a\u884c\u3057\u3066\u3001EC2\u306e\u3044\u308bVPC\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u306e\u6642\u4f55\u6545\u304b\u308f\u3093\u3053\u3002\u306e\u74b0\u5883\u3067\u306f\u3001\u30d1\u30d6\u30ea\u30c3\u30afDNS\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u304c\u3001\u6240\u8a6eEC2\u306a\u306e\u3067\u3001ec2-{IP-ADDRESS}.ap-northeast-1.compute.amazonaws.com\u307f\u305f\u3044\u306a\u611f\u3058\u3067ping\u6253\u3063\u3066\u307f\u305f\u3089\u901a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u4f7f\u3044\u307e\u3059\u3002\n(CloudFront\u306eorigin\u306b\u306fIP\u3060\u3051\u3058\u3083\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u540d\u524d\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\nCertificate Manager\n\u3053\u308c\u306f\u7d50\u69cb\u6700\u8fd1\uff1f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305fAWS\u306e\u8a3c\u660e\u66f8\u7ba1\u7406\u306e\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\nCloudFront\u3084\u3001ELB\u306b\u5bfe\u3057\u3066\u3001\u7121\u6599\u3067\u5171\u7528\u306e\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u7d20\u6674\u3089\u3057\u3044!!!!!\uff08\u30d0\u30fc\u30b8\u30cb\u30a2\u30ea\u30fc\u30b8\u30e7\u30f3\u3060\u3051\u306a\u3093\u3067\u3059\u3051\u3069\u306d\n\u4eca\u56de\u306f\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u3092\u5229\u7528\u3059\u308b\u306e\u3067\u3001line.{\u81ea\u5206\u306e\u30c9\u30e1\u30a4\u30f3.com}\u306e\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3057\u307e\u3057\u305f\u3002\n(\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u6307\u5b9a\u3082\u51fa\u6765\u307e\u3059\n\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u3067\u64cd\u4f5c\u3059\u308b\u3068\u3001\u30c9\u30e1\u30a4\u30f3\u306e\u7ba1\u7406\u8005\u306bAWS\u304b\u3089\u30e1\u30fc\u30eb\u304c\u5c4a\u304d\u307e\u3059\u306e\u3067\u3001\u5185\u5bb9\u306b\u554f\u984c\u304c\u306a\u3051\u308c\u3070\u627f\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u308c\u3067\u8a3c\u660e\u66f8\u306e\u767a\u884c\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\n\u7c21\u5358\uff01\u7d20\u6674\u3089\u3057\u3044!!!!\n\nCloudFront\n\u65b0\u3057\u3044Distribution\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u3059\u308b\u9805\u76ee\u306f\n\nAlternate Domain Names(CNAMEs)\nSSL Certificate\nCustom SSL Client Support\nOrigin Domain Name\n\n\u4e0a\u8a18 4\u9805\u76ee\u3067\u3059\u3002\n\nAlternate Domain Names(CNAMEs)\n\u3053\u308c\u306fCloudFront\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306eFQDN\u3067\u3059\u3002\nline.{\u81ea\u5206\u306e\u30c9\u30e1\u30a4\u30f3.com}\u3068\u5165\u529b\u3057\u307e\u3057\u3087\u3046\u3002\n\nSSL Certificate\n\u3053\u3053\u304c\u91cd\u8981\u3067\u3059\u3002\nCustom SSL Certificate \u3092\u9078\u629e\u3057\u3001\u5148\u307b\u3069Certificate Manager\u3067\u4f5c\u6210\u3057\u305f\u8a3c\u660e\u66f8\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\nCustom SSL Client Support\nOnly Clients that Support Server Name Indication (SNI)\u3092\u9078\u629e\nAllClients\u3060\u3068\u3001\u6bce\u6708\u3055\u3089\u306b\u6599\u91d1\u304b\u304b\u3063\u3061\u3083\u3046\u2026\u3002\n\nOrigin Domain Name\n\u3053\u3053\u306bEC2\u306e\u30d1\u30d6\u30ea\u30c3\u30afDNS\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\nRoute53\n\u3053\u306e\u307e\u307e\u3060\u3068\u3001\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u304c\u307e\u3060CloudFront\u306b\u5411\u3044\u3066\u306a\u3044\u306e\u3067\nA\u30ec\u30b3\u30fc\u30c9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nCreateRecordSet\u3092\u9078\u629e\u3057\u3001\n\nName\u306bline\u3068\u5165\u529b\nAlias \u3092 Yes\n\nAlias Target \u306b\u5148\u307b\u3069\u4f5c\u3063\u305fCloudFront\u306eDistribution\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0a!!!\n\u305d\u3046\u3059\u308b\u3053\u3068\u3067\nLINE BOT Serevr <-https-> CloudFront <-HTTP-> EC2 \n\u3053\u306e\u3088\u3046\u306a\u901a\u4fe1\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\u3084\u3063\u305f\u306d\uff01\n\n\u3084\u3063\u3068go\u306e\u8a71\nLINE\u306eBOT SERVER\u304b\u3089\u304f\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001\n\u81ea\u8eab\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u304d\u3061\u3093\u3068\u53d7\u9818\u3057\u305f\u72b6\u614b\u3060\u3068\u3044\u3046\u3053\u3068\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u8fd4\u305b\u3070\u3044\u3044\u306e\u3067\u3001\u53d7\u3051\u53d6\u3063\u305f\u3089\u30d8\u30c3\u30c0\u30fc\u3068BODY\u3092\u8aad\u307f\u53d6\u3063\u3066\u3001\u3055\u3063\u3055\u3068StatusOK\u3092\u8fd4\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\n\nlineBothandler.go\n// LineBotHandler /line/bot \u3078\u306e\u30cf\u30f3\u30c9\u30e9\nfunc LineBotHandler(w http.ResponseWriter, r *http.Request) {\n    w.WriteHeader(200)\n    if body, err := ioutil.ReadAll(r.Body); err == nil {\n        // \u3055\u3063\u3055\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3060\u3051\u8fd4\u3057\u3066\u3042\u3052\u308b\u305f\u3081\u306b \u30b4\u30eb\u30fc\u30c1\u30f3\u3067\u51e6\u7406\u3057\u307e\u3059\n        go line.Receive(body)\n    } else {\n        glog.Errorf(\"\u8aad\u307f\u8fbc\u3081\u306a\u304b\u3063\u305f\u3088 %v\", err)\n    }\n    defer r.Body.Close()\n\n    // \u3068\u308a\u3042\u3048\u305a\u3059\u3050\u8fd4\u3059\n    w.Header().Set(\"Content-Type\", \"text/html; charset=utf8\")\n    w.Write([]byte(\"OK\"))\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u3082\u306e\u3092net/http\u306e\u30cf\u30f3\u30c9\u30e9\u306b\u767b\u9332\u3057\u3066\u3042\u3052\u308c\u3070\u51fa\u6765\u4e0a\u304c\u308a\u3067\u3059\u3002\n\nBOT SERVER \u304b\u3089\u306e\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308b\n\u4e0a\u8a18\u3067\u306f\u5185\u5bb9\u306f\u7121\u8996\u3057\u3066\u30ec\u30b9\u30dd\u30f3\u30b9\u8fd4\u3057\u3066\u305f\u306e\u3067\u3001\u9001\u3089\u308c\u305f\u304d\u305fJSON\u3092\u89e3\u8aad\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\n\nreceive.go\n\n// Notification \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u53e9\u304b\u308c\u305f\u3068\u304d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d1\u30fc\u30b9\u3059\u308b\u3088\ntype Notification struct {\n    Result []*Event `json:\"result\"`\n}\n\n// Event \u4e00\u3064\u306e\u6295\u7a3f\u3092\u3042\u308f\u3089\u3059\ntype Event struct {\n    Content     *Content  `json:\"content\"`\n    CreatedTime *JsonTime `json:\"createdTime\"`\n    EventType   string    `json:\"eventType\"`\n    From        string    `json:\"from\"`\n    FromChannel int       `json:\"fromChannel\"`\n    ID          string    `json:\"id\"`\n    To          []string  `json:\"to\"`\n    ToChannel   int       `json:\"toChannel\"`\n}\n\n// Content \u4e2d\u8eab\ntype Content struct {\n    ContentMetadata *ContentMetadata `json:\"contentMedadata\"`\n    ContentType     int              `json:\"contentType\"`\n    CreatedTime     *JsonTime        `json:\"createdTime\"`\n    DeliveredTime   int              `json:\"deliveredTime\"`\n    From            string           `json:\"from\"`\n    ID              string           `json:\"id\"`\n    Location        *Location        `json:\"location\"`\n    Seq             string           `json:\"seq\"`\n    Text            string           `json:\"text\"`\n    To              []string         `json:\"to\"`\n}\n\n// ContentMetadata \u30e1\u30bf\u30c7\u30fc\u30bf\ntype ContentMetadata struct {\n    RecvMode int `json:\"AT_RECV_MODE\"`\n    Emtver   int `json:\"EMTVER\"`\n}\n\n// JsonTime parse\u7528\u306e\u6642\u9593\ntype JsonTime struct {\n    time.Time\n}\n\n// UnmarshalJSON JSON\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304b\u3089\u5909\u63db\u3059\u308b\u7528\nfunc (j *JsonTime) UnmarshalJSON(data []byte) error {\n    i, err := strconv.ParseInt(string(data), 10, 64)\n    if err != nil {\n        return err\n    }\n    j.Time = time.Unix(i, 0)\n    return nil\n}\n\nvar _ json.Unmarshaler = (*JsonTime)(nil)\n\n// Location \u4f4d\u7f6e\u60c5\u5831\ntype Location struct {\n    Title     string  `json:\"title\"`\n    Address   string  `json:\"address\"`\n    Latitude  float32 `json:\"latitude\"`\n    Longitude float32 `json:\"longitude\"`\n}\n\n\nUnix\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304b\u3089\u305d\u306e\u307e\u307etime.Time\u306b\u306ftime.UnmarshalJSON\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u81ea\u5206\u3067\u4f5c\u308a\u307e\u3059\u3002\n\n\u6295\u7a3f\u3057\u307e\u3057\u3087\u3002\nEvent\u3092\u53d7\u3051\u53d6\u3063\u3066\u3069\u3093\u306a\u5185\u5bb9\u3092\u8fd4\u3059\u306e\u304b\u3001\u5c06\u53c8\u8fd4\u3055\u306a\u3044\u304b\u306f\u5b9f\u88c5\u6b21\u7b2c\u3067\u3059\u3002\n\u30b7\u30e5\u30fc\u30eb\u306aBOT\u3067\u304d\u305f\u3089\u62db\u5f85\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u697d\u3057\u307f\u305f\u3044\u3067\u3059\u3002\n\nsend.go\n// Event \u5b9f\u969b\u306b\u9001\u4fe1\u3055\u308c\u308b\u69cb\u9020\u4f53\ntype Event struct {\n    To        []string    `json:\"to\"`\n    ToChannel int         `json:\"toChannel\"`\n    EventType string      `json:\"eventType\"`\n    Content   interface{} `json:\"content\"`\n}\n\n\n// Content \u5168\u3066\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30d9\u30fc\u30b9\ntype Content struct {\n    ContentType int `json:\"contentType\"`\n    ToType      int `json:\"toType\"`\n}\n\n// TextContent \u30c6\u30ad\u30b9\u30c8\u9001\u4fe1\u7cfb\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\ntype TextContent struct {\n    *Content\n    Text string `json:\"text\"`\n}\n\n// ImageContent \u30a4\u30e1\u30fc\u30b8\u9001\u4fe1\u7528\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\ntype ImageContent struct {\n    *Content\n    OriginalContentUrl string `json:\"originalContentUrl\"`\n    PreviewImageUrl string `json:\"previewImageUrl\"`\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u30c6\u30ad\u30b9\u30c8\u3068\u753b\u50cf\u306e\u6295\u7a3f\u7528\u306eEvent\u3092\u4f5c\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nEvent.Content \u306b\u5bfe\u3057\u3066\u3001TextContent or ImageContent\u3092\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308b\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u9001\u4fe1\u7528\u30ef\u30fc\u30ab\u30fc\n\u4e0a\u8a18\u306eEvent\u3092chan\u3067\u53d7\u3051\u53d6\u3063\u3066\u3001\u5225\u306e\u30b4\u30eb\u30fc\u30c1\u30f3\u3067\u9001\u4fe1\u51e6\u7406\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nsender.go\n\n// API_ENDOINT LINE \u306eAPI\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\nconst API_ENDOINT string = \"https://trialbot-api.line.me/v1/events\"\n\nvar sender chan *Event\n\nfunc init() {\n    sender = make(chan *Event)\n}\n\n// Send \u9001\u4fe1\u7528\u30eb\u30fc\u30c1\u30f3\nfunc Send() {\n    for event := range sender {\n        go func(e *send.Event) {\n            // \u3058\u3083\u3042API\u53e9\u3044\u3066\u9001\u308b\u3079\u3055\n            Request(jsonEncode(e))\n        }(event)\n    }\n}\n// \u9001\u4fe1\u7528\u306eJSON\u306b\u3057\u3066\u8fd4\u3059\u3088\nfunc jsonEncode(event *Event) string {\n    j, err := json.Marshal(event)\n    if err != nil {\n        glog.Errorf(\"json\u306b\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f[%v]\", err)\n        return \"\"\n    }\n    return string(j)\n}\n// Request API\u305f\u305f\u304f\u30fc\u3088\nfunc Request(body string) error {\n    client := &http.Client{}\n    //body := io.Reader\n    req, err := http.NewRequest(\"POST\", API_ENDOINT, strings.NewReader(body))\n    if err != nil {\n        return err\n    }\n    req.Header.Add(\"Content-type\", \"application/json; charset=UTF-8\")\n    req.Header.Add(\"X-Line-ChannelID\", account.CHANNEL_ID)\n    req.Header.Add(\"X-Line-ChannelSecret\", account.CHANNEL_SECRET)\n    req.Header.Add(\"X-Line-Trusted-User-With-ACL\", account.MID)\n    resp, err := client.Do(req)\n    if err != nil {\n        return err\n    }\n    if b, err := ioutil.ReadAll(resp.Body); err == nil {\n        glog.Info(string(b))\n    } else {\n        glog.Errorf(\"\u8aad\u307f\u8fbc\u3081\u306a\u304b\u3063\u305f\u3051\u3069 %v\", err)\n    }\n    defer resp.Body.Close()\n    return nil\n}\n\n\n\u30c6\u30ad\u30b9\u30c8\u3068\u753b\u50cf\u304c\u9001\u4fe1\u3067\u304d\u308c\u3070\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u3053\u3068\u306f\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u307f\u3093\u306a\u3067\u30b7\u30e5\u30fc\u30eb\u306aBOT\u304c\u3042\u3075\u308c\u308b\u4e16\u306e\u4e2d\u306b\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u6240\u611f\n\n\nContentType\u306b\u3088\u3063\u3066\u3001JSON\u306e\u4e2d\u306e\u69cb\u9020\u304c\u7d50\u69cb\u5909\u308f\u308b\u306e\u3067(\u30b9\u30bf\u30f3\u30d7\u3068\u304b\u2026)\u3001interface{}\u306b1\u56de\u843d\u3068\u3057\u3066\u304b\u3089\u518d\u5ea6\u30d1\u30fc\u30b9\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u304b\u3063\u305f\uff08\u591a\u5206\u3053\u308c\u306b\u9650\u3063\u305f\u8a71\u3067\u306f\u306a\u3044\u3051\u3069\n\u753b\u50cf\u3084\u52d5\u753b\u3001\u97f3\u58f0\u306e\u914d\u4fe1\u306f\u30d0\u30a4\u30ca\u30ea\u81ea\u4f53\u3092POST\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001URL\u5f62\u5f0f\u3067\u6e21\u3059\u5f62\u306b\u306a\u308b\u3002\u4e00\u5ea6\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306b\u516c\u958b\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u6065\u305a\u304b\u3057\u3044\u306e\u306f\u9001\u308a\u306b\u304f\u3044\n\u305d\u3093\u306a\u306b\u5bc2\u3057\u3055\u306f\u7d1b\u308c\u306a\u304b\u3063\u305f\nEC2\u304b\u3089AWS IoT\u306b\u3064\u306a\u3052\u3066\u3001RaspberryPi\u3068\u304b\u306b\u901a\u77e5\u9001\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u50d5\u306f\u6700\u4f4e\u8cc3\u91d1\u3092\u8fd4\u3057\u3066\u304f\u308c\u308bBOT\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n# LINE BOT \u3063\u3066\u306a\u3093\u305e\n* 2016/4/7\u306bBOT API Trial Account\u304c\u7121\u511f\u3067\u516c\u958b\u3055\u308c\u305f \n* BOT\u7528\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u767a\u884c\u304c\u53ef\u80fd\n* \u53cb\u9054\u8ffd\u52a0\u3001\u30c8\u30fc\u30af\u306e\u53d7\u4fe1\u306a\u3069\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u81ea\u8eab\u304c\u7528\u610f\u3055\u3044\u305f\u30b5\u30fc\u30d0\u30fc\u306b\u60c5\u5831\u304c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u6e21\u3055\u308c\u308b\n\n# \u4f55\u304c\u3067\u304d\u308b\u306e\n* \u5bc2\u3057\u3055\u3092\u7d1b\u3089\u308f\u305b\u3089\u308c\u308b\n* 50\u4eba\u307e\u3067\u53cb\u9054\u4f5c\u308c\u308b\n* \u53cb\u9054\u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u306e\u95b2\u89a7\n* \u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n* \u753b\u50cf\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n* \u52d5\u753b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n* \u97f3\u58f0\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n* \u4f4d\u7f6e\u60c5\u5831\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n* \u30b9\u30bf\u30f3\u30d7\u306e\u9001\u4fe1\n\n# \u6e96\u5099\u7269\n* LINE Business Center\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\n* Channnels\uff08BOT\u306e\u30a2\u30ab\u30a6\u30f3\u30c8)\n* HTTPS\u901a\u4fe1\u304c\u30dd\u30fc\u30c8\u6307\u5b9a\u3067\u53d7\u3051\u3089\u308c\u308b\u30b5\u30fc\u30d0\u30fc\n\n# \u74b0\u5883\u4f5c\u3063\u3066\u307f\u3088\u3046\n\u4eca\u56de\u306f\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3067\u306f\u8a31\u3057\u3066\u3082\u3089\u3048\u306a\u3044\u306e\u3067\u3001\u3061\u3083\u3093\u3068\u3057\u305f\u8a3c\u660e\u66f8\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u304a\u904a\u3073\u3067\u4f5c\u308b\u306e\u3067\u3001\u308f\u3093\u3053\u3002\u306e\u304a\u5c0f\u9063\u3044\u3067\u307e\u304b\u306a\u3048\u308b\u3088\u3046\u3067\u304d\u308b\u3060\u3051\u4f4e\u30b3\u30b9\u30c8\u306b\u2026\u3002\n\n\n# LINE \u95a2\u4fc2\u30a2\u30ab\u30a6\u30f3\u30c8\n\u304a\u3050\u3050\u308a\u304f\u3060\u3055\u3044\u307e\u305b\u3002\n\n# HTTPS\u901a\u4fe1\u3067\u304d\u308b\u30b5\u30fc\u30d0\u30fc\u306e\u6e96\u5099\n\u4eca\u56de\u306fAWS\u3067\u69cb\u7bc9\u3057\u307e\u3059\u3002\nAWS\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u7b49\u306f\u304a\u3050\u3050\u308a\u304f\u3060\u3055\u3044\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001CloudFront\u3067\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u306eSSL\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u3001\nEC2\u3067http\u3092\u53d7\u3051\u53d6\u308b\u74b0\u5883\u306b\u3057\u307e\u3057\u305f\n\n\u4eca\u56de\u308f\u3093\u3053\u3002\u304c\u4f7f\u3063\u305f\u3082\u306e\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n* EC2\n* ElasticIP\n* Certificate Manager\n* CloudFront\n* Route53\n\n## EC2\n**t2.nano** \u3092\u7528\u610f\u3057\u307e\u3059\u3002\nOS\u306f\u306a\u3093\u3067\u3082\u3044\u3044\u3067\u3059\u3002\u304a\u597d\u304d\u306a\u3082\u306e\u3092\u3069\u3046\u305e\u3002\n(t2\u7cfb\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306fEC2-Classic\u3067\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u7bc9\u306f\u51fa\u6765\u306a\u3044\u306e\u3067\u3001\u5f37\u5236\u7684\u306bVPC\u306b\u306a\u308a\u307e\u3059\n\n## ElasticIP\n\u65b0\u3057\u3044IP\u3092\u767a\u884c\u3057\u3066\u3001EC2\u306e\u3044\u308bVPC\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u306e\u6642\u4f55\u6545\u304b\u308f\u3093\u3053\u3002\u306e\u74b0\u5883\u3067\u306f\u3001\u30d1\u30d6\u30ea\u30c3\u30afDNS\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u304c\u3001\u6240\u8a6eEC2\u306a\u306e\u3067\u3001` ec2-{IP-ADDRESS}.ap-northeast-1.compute.amazonaws.com`\u307f\u305f\u3044\u306a\u611f\u3058\u3067ping\u6253\u3063\u3066\u307f\u305f\u3089\u901a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u4f7f\u3044\u307e\u3059\u3002\n(CloudFront\u306eorigin\u306b\u306fIP\u3060\u3051\u3058\u3083\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u540d\u524d\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n## Certificate Manager\n\u3053\u308c\u306f\u7d50\u69cb\u6700\u8fd1\uff1f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305fAWS\u306e\u8a3c\u660e\u66f8\u7ba1\u7406\u306e\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\nCloudFront\u3084\u3001ELB\u306b\u5bfe\u3057\u3066\u3001**\u7121\u6599**\u3067\u5171\u7528\u306e\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u7d20\u6674\u3089\u3057\u3044!!!!!\uff08\u30d0\u30fc\u30b8\u30cb\u30a2\u30ea\u30fc\u30b8\u30e7\u30f3\u3060\u3051\u306a\u3093\u3067\u3059\u3051\u3069\u306d\n\u4eca\u56de\u306f\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u3092\u5229\u7528\u3059\u308b\u306e\u3067\u3001`line.{\u81ea\u5206\u306e\u30c9\u30e1\u30a4\u30f3.com}`\u306e\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3057\u307e\u3057\u305f\u3002\n(\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u6307\u5b9a\u3082\u51fa\u6765\u307e\u3059\n\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u3067\u64cd\u4f5c\u3059\u308b\u3068\u3001\u30c9\u30e1\u30a4\u30f3\u306e\u7ba1\u7406\u8005\u306bAWS\u304b\u3089\u30e1\u30fc\u30eb\u304c\u5c4a\u304d\u307e\u3059\u306e\u3067\u3001\u5185\u5bb9\u306b\u554f\u984c\u304c\u306a\u3051\u308c\u3070\u627f\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u308c\u3067\u8a3c\u660e\u66f8\u306e\u767a\u884c\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\n\u7c21\u5358\uff01\u7d20\u6674\u3089\u3057\u3044!!!!\n\n## CloudFront\n\u65b0\u3057\u3044Distribution\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u3059\u308b\u9805\u76ee\u306f\n\n* Alternate Domain Names(CNAMEs)\n* SSL Certificate\n* Custom SSL Client Support\n* Origin Domain Name\n\n\u4e0a\u8a18 4\u9805\u76ee\u3067\u3059\u3002\n\n#### Alternate Domain Names(CNAMEs)\n\u3053\u308c\u306fCloudFront\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306eFQDN\u3067\u3059\u3002\n`line.{\u81ea\u5206\u306e\u30c9\u30e1\u30a4\u30f3.com}`\u3068\u5165\u529b\u3057\u307e\u3057\u3087\u3046\u3002\n#### SSL Certificate\n\u3053\u3053\u304c\u91cd\u8981\u3067\u3059\u3002\n`Custom SSL Certificate` \u3092\u9078\u629e\u3057\u3001\u5148\u307b\u3069`Certificate Manager`\u3067\u4f5c\u6210\u3057\u305f\u8a3c\u660e\u66f8\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n### Custom SSL Client Support\n`Only Clients that Support Server Name Indication (SNI)`\u3092\u9078\u629e\nAllClients\u3060\u3068\u3001\u6bce\u6708\u3055\u3089\u306b\u6599\u91d1\u304b\u304b\u3063\u3061\u3083\u3046\u2026\u3002\n\n### Origin Domain Name\n\u3053\u3053\u306bEC2\u306e\u30d1\u30d6\u30ea\u30c3\u30afDNS\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n\n## Route53\n\u3053\u306e\u307e\u307e\u3060\u3068\u3001\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u304c\u307e\u3060CloudFront\u306b\u5411\u3044\u3066\u306a\u3044\u306e\u3067\nA\u30ec\u30b3\u30fc\u30c9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n`CreateRecordSet`\u3092\u9078\u629e\u3057\u3001\n\n* Name\u306b`line`\u3068\u5165\u529b\n* Alias \u3092 `Yes`\n* Alias Target \u306b\u5148\u307b\u3069\u4f5c\u3063\u305fCloudFront\u306eDistribution\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\n\u4ee5\u4e0a!!!\n\u305d\u3046\u3059\u308b\u3053\u3068\u3067\nLINE BOT Serevr <-https-> CloudFront <-HTTP-> EC2 \n\u3053\u306e\u3088\u3046\u306a\u901a\u4fe1\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\u3084\u3063\u305f\u306d\uff01\n\n\n# \u3084\u3063\u3068go\u306e\u8a71\nLINE\u306eBOT SERVER\u304b\u3089\u304f\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001\n\u81ea\u8eab\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u304d\u3061\u3093\u3068\u53d7\u9818\u3057\u305f\u72b6\u614b\u3060\u3068\u3044\u3046\u3053\u3068\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u8fd4\u305b\u3070\u3044\u3044\u306e\u3067\u3001\u53d7\u3051\u53d6\u3063\u305f\u3089\u30d8\u30c3\u30c0\u30fc\u3068BODY\u3092\u8aad\u307f\u53d6\u3063\u3066\u3001\u3055\u3063\u3055\u3068StatusOK\u3092\u8fd4\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\n\n```lineBothandler.go\n// LineBotHandler /line/bot \u3078\u306e\u30cf\u30f3\u30c9\u30e9\nfunc LineBotHandler(w http.ResponseWriter, r *http.Request) {\n\tw.WriteHeader(200)\n\tif body, err := ioutil.ReadAll(r.Body); err == nil {\n\t\t// \u3055\u3063\u3055\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3060\u3051\u8fd4\u3057\u3066\u3042\u3052\u308b\u305f\u3081\u306b \u30b4\u30eb\u30fc\u30c1\u30f3\u3067\u51e6\u7406\u3057\u307e\u3059\n\t\tgo line.Receive(body)\n\t} else {\n\t\tglog.Errorf(\"\u8aad\u307f\u8fbc\u3081\u306a\u304b\u3063\u305f\u3088 %v\", err)\n\t}\n\tdefer r.Body.Close()\n\n\t// \u3068\u308a\u3042\u3048\u305a\u3059\u3050\u8fd4\u3059\n\tw.Header().Set(\"Content-Type\", \"text/html; charset=utf8\")\n\tw.Write([]byte(\"OK\"))\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u3082\u306e\u3092`net/http`\u306e\u30cf\u30f3\u30c9\u30e9\u306b\u767b\u9332\u3057\u3066\u3042\u3052\u308c\u3070\u51fa\u6765\u4e0a\u304c\u308a\u3067\u3059\u3002\n\n## BOT SERVER \u304b\u3089\u306e\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308b\n\u4e0a\u8a18\u3067\u306f\u5185\u5bb9\u306f\u7121\u8996\u3057\u3066\u30ec\u30b9\u30dd\u30f3\u30b9\u8fd4\u3057\u3066\u305f\u306e\u3067\u3001\u9001\u3089\u308c\u305f\u304d\u305fJSON\u3092\u89e3\u8aad\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\n\n```receive.go\n\n// Notification \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u53e9\u304b\u308c\u305f\u3068\u304d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d1\u30fc\u30b9\u3059\u308b\u3088\ntype Notification struct {\n\tResult []*Event `json:\"result\"`\n}\n\n// Event \u4e00\u3064\u306e\u6295\u7a3f\u3092\u3042\u308f\u3089\u3059\ntype Event struct {\n\tContent     *Content  `json:\"content\"`\n\tCreatedTime *JsonTime `json:\"createdTime\"`\n\tEventType   string    `json:\"eventType\"`\n\tFrom        string    `json:\"from\"`\n\tFromChannel int       `json:\"fromChannel\"`\n\tID          string    `json:\"id\"`\n\tTo          []string  `json:\"to\"`\n\tToChannel   int       `json:\"toChannel\"`\n}\n\n// Content \u4e2d\u8eab\ntype Content struct {\n\tContentMetadata *ContentMetadata `json:\"contentMedadata\"`\n\tContentType     int              `json:\"contentType\"`\n\tCreatedTime     *JsonTime        `json:\"createdTime\"`\n\tDeliveredTime   int              `json:\"deliveredTime\"`\n\tFrom            string           `json:\"from\"`\n\tID              string           `json:\"id\"`\n\tLocation        *Location        `json:\"location\"`\n\tSeq             string           `json:\"seq\"`\n\tText            string           `json:\"text\"`\n\tTo              []string         `json:\"to\"`\n}\n\n// ContentMetadata \u30e1\u30bf\u30c7\u30fc\u30bf\ntype ContentMetadata struct {\n\tRecvMode int `json:\"AT_RECV_MODE\"`\n\tEmtver   int `json:\"EMTVER\"`\n}\n\n// JsonTime parse\u7528\u306e\u6642\u9593\ntype JsonTime struct {\n\ttime.Time\n}\n\n// UnmarshalJSON JSON\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304b\u3089\u5909\u63db\u3059\u308b\u7528\nfunc (j *JsonTime) UnmarshalJSON(data []byte) error {\n\ti, err := strconv.ParseInt(string(data), 10, 64)\n\tif err != nil {\n\t\treturn err\n\t}\n\tj.Time = time.Unix(i, 0)\n\treturn nil\n}\n\nvar _ json.Unmarshaler = (*JsonTime)(nil)\n\n// Location \u4f4d\u7f6e\u60c5\u5831\ntype Location struct {\n\tTitle     string  `json:\"title\"`\n\tAddress   string  `json:\"address\"`\n\tLatitude  float32 `json:\"latitude\"`\n\tLongitude float32 `json:\"longitude\"`\n}\n```\n\nUnix\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304b\u3089\u305d\u306e\u307e\u307e`time.Time`\u306b\u306ftime.UnmarshalJSON\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u81ea\u5206\u3067\u4f5c\u308a\u307e\u3059\u3002\n\n\n### \u6295\u7a3f\u3057\u307e\u3057\u3087\u3002\nEvent\u3092\u53d7\u3051\u53d6\u3063\u3066\u3069\u3093\u306a\u5185\u5bb9\u3092\u8fd4\u3059\u306e\u304b\u3001\u5c06\u53c8\u8fd4\u3055\u306a\u3044\u304b\u306f\u5b9f\u88c5\u6b21\u7b2c\u3067\u3059\u3002\n\u30b7\u30e5\u30fc\u30eb\u306aBOT\u3067\u304d\u305f\u3089\u62db\u5f85\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u697d\u3057\u307f\u305f\u3044\u3067\u3059\u3002\n\n```send.go\n// Event \u5b9f\u969b\u306b\u9001\u4fe1\u3055\u308c\u308b\u69cb\u9020\u4f53\ntype Event struct {\n\tTo        []string    `json:\"to\"`\n\tToChannel int         `json:\"toChannel\"`\n\tEventType string      `json:\"eventType\"`\n\tContent   interface{} `json:\"content\"`\n}\n\n\n// Content \u5168\u3066\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30d9\u30fc\u30b9\ntype Content struct {\n\tContentType int `json:\"contentType\"`\n\tToType      int `json:\"toType\"`\n}\n\n// TextContent \u30c6\u30ad\u30b9\u30c8\u9001\u4fe1\u7cfb\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\ntype TextContent struct {\n\t*Content\n    Text string `json:\"text\"`\n}\n\n// ImageContent \u30a4\u30e1\u30fc\u30b8\u9001\u4fe1\u7528\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\ntype ImageContent struct {\n    *Content\n    OriginalContentUrl string `json:\"originalContentUrl\"`\n    PreviewImageUrl string `json:\"previewImageUrl\"`\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u30c6\u30ad\u30b9\u30c8\u3068\u753b\u50cf\u306e\u6295\u7a3f\u7528\u306eEvent\u3092\u4f5c\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nEvent.Content \u306b\u5bfe\u3057\u3066\u3001`TextContent` or `ImageContent`\u3092\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308b\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n### \u9001\u4fe1\u7528\u30ef\u30fc\u30ab\u30fc\n\u4e0a\u8a18\u306eEvent\u3092chan\u3067\u53d7\u3051\u53d6\u3063\u3066\u3001\u5225\u306e\u30b4\u30eb\u30fc\u30c1\u30f3\u3067\u9001\u4fe1\u51e6\u7406\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```sender.go\n\n// API_ENDOINT LINE \u306eAPI\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\nconst API_ENDOINT string = \"https://trialbot-api.line.me/v1/events\"\n\nvar sender chan *Event\n\nfunc init() {\n\tsender = make(chan *Event)\n}\n\n// Send \u9001\u4fe1\u7528\u30eb\u30fc\u30c1\u30f3\nfunc Send() {\n\tfor event := range sender {\n\t\tgo func(e *send.Event) {\n\t\t\t// \u3058\u3083\u3042API\u53e9\u3044\u3066\u9001\u308b\u3079\u3055\n\t\t\tRequest(jsonEncode(e))\n\t\t}(event)\n\t}\n}\n// \u9001\u4fe1\u7528\u306eJSON\u306b\u3057\u3066\u8fd4\u3059\u3088\nfunc jsonEncode(event *Event) string {\n\tj, err := json.Marshal(event)\n\tif err != nil {\n\t\tglog.Errorf(\"json\u306b\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f[%v]\", err)\n\t\treturn \"\"\n\t}\n\treturn string(j)\n}\n// Request API\u305f\u305f\u304f\u30fc\u3088\nfunc Request(body string) error {\n\tclient := &http.Client{}\n\t//body := io.Reader\n\treq, err := http.NewRequest(\"POST\", API_ENDOINT, strings.NewReader(body))\n\tif err != nil {\n\t\treturn err\n\t}\n\treq.Header.Add(\"Content-type\", \"application/json; charset=UTF-8\")\n\treq.Header.Add(\"X-Line-ChannelID\", account.CHANNEL_ID)\n\treq.Header.Add(\"X-Line-ChannelSecret\", account.CHANNEL_SECRET)\n\treq.Header.Add(\"X-Line-Trusted-User-With-ACL\", account.MID)\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\tif b, err := ioutil.ReadAll(resp.Body); err == nil {\n\t\tglog.Info(string(b))\n\t} else {\n\t\tglog.Errorf(\"\u8aad\u307f\u8fbc\u3081\u306a\u304b\u3063\u305f\u3051\u3069 %v\", err)\n\t}\n\tdefer resp.Body.Close()\n\treturn nil\n}\n```\n\n\u30c6\u30ad\u30b9\u30c8\u3068\u753b\u50cf\u304c\u9001\u4fe1\u3067\u304d\u308c\u3070\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u3053\u3068\u306f\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u307f\u3093\u306a\u3067\u30b7\u30e5\u30fc\u30eb\u306aBOT\u304c\u3042\u3075\u308c\u308b\u4e16\u306e\u4e2d\u306b\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\n# \u6240\u611f\n* `ContentType`\u306b\u3088\u3063\u3066\u3001JSON\u306e\u4e2d\u306e\u69cb\u9020\u304c\u7d50\u69cb\u5909\u308f\u308b\u306e\u3067(\u30b9\u30bf\u30f3\u30d7\u3068\u304b\u2026)\u3001`interface{}`\u306b1\u56de\u843d\u3068\u3057\u3066\u304b\u3089\u518d\u5ea6\u30d1\u30fc\u30b9\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u304b\u3063\u305f\uff08\u591a\u5206\u3053\u308c\u306b\u9650\u3063\u305f\u8a71\u3067\u306f\u306a\u3044\u3051\u3069\n* \u753b\u50cf\u3084\u52d5\u753b\u3001\u97f3\u58f0\u306e\u914d\u4fe1\u306f\u30d0\u30a4\u30ca\u30ea\u81ea\u4f53\u3092POST\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001URL\u5f62\u5f0f\u3067\u6e21\u3059\u5f62\u306b\u306a\u308b\u3002\u4e00\u5ea6\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306b\u516c\u958b\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u6065\u305a\u304b\u3057\u3044\u306e\u306f\u9001\u308a\u306b\u304f\u3044\n* \u305d\u3093\u306a\u306b\u5bc2\u3057\u3055\u306f\u7d1b\u308c\u306a\u304b\u3063\u305f\n* EC2\u304b\u3089AWS IoT\u306b\u3064\u306a\u3052\u3066\u3001RaspberryPi\u3068\u304b\u306b\u901a\u77e5\u9001\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u50d5\u306f\u6700\u4f4e\u8cc3\u91d1\u3092\u8fd4\u3057\u3066\u304f\u308c\u308bBOT\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n"}