{"context": "\u7686\u3055\u3093\u3053\u3093\u306b\u3061\u306f\u3002@best_not_best\u3067\u3059\u3002\n\u73fe\u5728\u306e\u304a\u4ed5\u4e8b\u306f\u3001\u6c42\u4eba\u30b5\u30a4\u30c8\u306e\u6848\u4ef6\u30ec\u30b3\u30e1\u30f3\u30c9\u6a5f\u80fd\u306e\u5b9f\u88c5\u3084\u3001Google Analytics\u3084Adobe Analytics\u3092\u4f7f\u3063\u3066\u3001\u305d\u306e\u30b5\u30a4\u30c8\u306e\u5206\u6790\u3092\u3057\u3066\u3044\u307e\u3059\u3002\uff08\u3042\u3068\u306f\u52d5\u7269\u753b\u50cf\u3092\u793e\u5185Slack\u306b\u3072\u305f\u3059\u3089Post\u3057\u3066\u3044\u307e\u3059\u3002\uff09\n\u524d\u56de\u306eAdvent Calendar\u3067\u306f\u3001Deep Learning\u3092\u4f7f\u3063\u305f\u753b\u50cf\u985e\u4f3c\u5ea6\u5224\u5b9a\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u7cbe\u5ea6\u306f\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3084\u306f\u308a\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3059\u308b\u3053\u3068\u304c\u30cd\u30c3\u30af\u3068\u306a\u308a\u307e\u3059\u30fb\u30fb\u30fb\u3002\u4eca\u56de\u306f\u3001\u5358\u7d14\u306b2\u679a\u306e\u753b\u50cf\u3092\u6bd4\u8f03\u3057\u3066\u753b\u50cf\u306e\u985e\u4f3c\u5ea6\u3092\u6c42\u3081\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3084\u308b\u3053\u3068\n\u4ee5\u4e0b\u306e\u304a\u3044\u306c\u69d8\u306e\u753b\u50cf\u306e\u985e\u4f3c\u5ea6\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\u753b\u50cf\u306fGoogle\u5148\u751f\u304b\u3089\u62fe\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u305f\u3081\u3001\u6b63\u9762\u3092\u5411\u3044\u3066\u3044\u308b\u753b\u50cf\u3092\u9078\u3073\u307e\u3057\u305f\u3002\n\u6bd4\u8f03\u753b\u50cf\n\n\n\n\u30d5\u30a1\u30a4\u30eb\u540d\n\u753b\u50cf\n\u8aac\u660e\n\n\n\n\n05.png\n\n\u67f4\u72ac\uff08\u304b\u308f\u3044\u3044\uff09\n\n\n\n\u6bd4\u8f03\u5bfe\u8c61\n\n\n\n\u30d5\u30a1\u30a4\u30eb\u540d\n\u753b\u50cf\n\u8aac\u660e\n\n\n\n\n01.png\n\n\u30c0\u30c3\u30af\u30b9\u30d5\u30f3\u30c8\uff08\u304b\u308f\u3044\u3044\uff09\n\n\n02.png\n\n\u30b3\u30fc\u30ae\u30fc\uff08\u304b\u308f\u3044\u3044\uff09\n\n\n03.png\n\n\u30b4\u30fc\u30eb\u30c7\u30f3\u30fb\u30ec\u30c8\u30ea\u30d0\u30fc\uff08\u304b\u308f\u3044\u3044\uff09\n\n\n04.png\n\n\u67f4\u72ac\uff08\u304b\u308f\u3044\u3044\uff09\n\n\n06.png\n\n\u30e9\u30d6\u30e9\u30c9\u30fc\u30eb\u30fb\u30ec\u30c8\u30ea\u30fc\u30d0\u30fc\uff08\u304b\u308f\u3044\u3044\uff09\n\n\n\n\u540c\u3058\u72ac\u7a2e\u3067\u3042\u308b\u300105.png\u306804.png\u306e\u985e\u4f3c\u5ea6\u304c\u9ad8\u304f\u306a\u308c\u3070\uff08\u3044\u3061\u304a\u3046\uff09\u6210\u529f\u3067\u3059\u3002\n\n\u74b0\u5883\n\n\u30de\u30b7\u30f3/OS\n\n\nMacBook Pro (Retina, 15-inch, Mid 2014)\nOS X Yosemite 10.10.5\n\n\nPython\n\n\nPython 3.5.2 :: Anaconda 4.1.1 (x86_64)\n\n\nPython\u30d1\u30c3\u30b1\u30fc\u30b8\n\n\nopencv3 3.1.0\uff08conda\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\uff09\n\n\n\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\nhist_matching.py\nfeature_detection.py\nimages\n \u251c\u2500 01.png\n \u251c\u2500 02.png\n \u251c\u2500 03.png\n \u251c\u2500 04.png\n \u251c\u2500 05.png\n \u2514\u2500 06.png\n\n\n\u691c\u8a3c1: \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u6bd4\u8f03\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u3001\u8272\u5408\u3044\u3067\u6bd4\u8f03\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002\u8a73\u7d30\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\u985e\u4f3c\u753b\u50cf\u691c\u7d22\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046 - \u4eba\u5de5\u77e5\u80fd\u306b\u95a2\u3059\u308b\u65ad\u5275\u9332\nPython OpenCV3\u3067\u5ea6\u6570\u5206\u5e03\u3092\u7b97\u51fa\u3057\u3066\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u51fa\u529b - from umentu import stupid\n\n\u8272\u5408\u3044\u3067\u6bd4\u8f03\u3059\u308b\u306e\u3067\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db\u306f\u884c\u3044\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u753b\u50cf\u30b5\u30a4\u30ba\u306f\u4e00\u5f8b200px \u00d7 200px\u306b\u5909\u63db\u3057\u3066\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u3002\n\nhist_matching.py\n#!/usr/bin/env python\n# -*- coding: UTF-8 -*-\n\n\"\"\"hist matching.\"\"\"\n\nimport cv2\nimport os\n\nTARGET_FILE = '05.png'\nIMG_DIR = os.path.abspath(os.path.dirname(__file__)) + '/images/'\nIMG_SIZE = (200, 200)\n\ntarget_img_path = IMG_DIR + TARGET_FILE\ntarget_img = cv2.imread(target_img_path)\ntarget_img = cv2.resize(target_img, IMG_SIZE)\ntarget_hist = cv2.calcHist([target_img], [0], None, [256], [0, 256])\n\nprint('TARGET_FILE: %s' % (TARGET_FILE))\n\nfiles = os.listdir(IMG_DIR)\nfor file in files:\n    if file == '.DS_Store' or file == TARGET_FILE:\n        continue\n\n    comparing_img_path = IMG_DIR + file\n    comparing_img = cv2.imread(comparing_img_path)\n    comparing_img = cv2.resize(comparing_img, IMG_SIZE)\n    comparing_hist = cv2.calcHist([comparing_img], [0], None, [256], [0, 256])\n\n    ret = cv2.compareHist(target_hist, comparing_hist, 0)\n    print(file, ret)\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30e1\u30e2\u30ea\u3092\u6d88\u8cbb\u3059\u308b\u306e\u304bSegmentation fault: 11\u3084python(18114,0x7fff7a45b000) malloc: *** error for object 0x102000e00: incorrect checksum for freed object - object was probably modified after being freed.\u3068\u3044\u3063\u305f\u30a8\u30e9\u30fc\u304c\u307e\u308c\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u89e3\u6c7a\u7b56\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\uff08\u3059\u3044\u307e\u305b\u3093\uff09\u304c\u3001\u5927\u91cf\u306e\u753b\u50cf\u3092\u6271\u3046\u5834\u5408\u306f\u3001\u6bd4\u8f03\u753b\u50cf\u306e\u6570\u3092\u7d5e\u3063\u3066\u8907\u6570\u56de\u51e6\u7406\u3092\u884c\u3063\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\nTARGET_FILE: 05.png\n01.png 0.3064316801821619\n02.png -0.09702013809004943\n03.png 0.5273343981076624\n04.png 0.5453261576844468\n06.png 0.1256772923432995\n\n\n\u5168\u304f\u540c\u3058\u753b\u50cf\u306e\u5834\u5408\u3001\u985e\u4f3c\u5ea6\u306f1\u3068\u306a\u308a\u307e\u3059\u300205.png\u306804.png\u306e\u985e\u4f3c\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u300201.png\u3068\u306e\u985e\u4f3c\u5ea6\u304c\u9ad8\u3044\u306e\u306f\u610f\u5916\u3067\u3057\u305f\u3002\n\n\u691c\u8a3c2: \u7279\u5fb4\u70b9\u306e\u30de\u30c3\u30c1\u30f3\u30b0\n2\u753b\u50cf\u306e\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3057\u3001\u305d\u308c\u3089\u306e\u8ddd\u96e2\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n3\u65e5\u3067\u4f5c\u308b\u9ad8\u901f\u7279\u5b9a\u7269\u4f53\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0 (4) \u7279\u5fb4\u70b9\u306e\u30de\u30c3\u30c1\u30f3\u30b0 - \u4eba\u5de5\u77e5\u80fd\u306b\u95a2\u3059\u308b\u65ad\u5275\u9332\n[OpenCV] \u3044\u307e\u3055\u3089\u5c40\u6240\u7279\u5fb4\u91cf\u3067\u7269\u4f53\u691c\u51fa\uff01\uff1f - Qiita\n\u7279\u5fb4\u70b9\u306e\u30de\u30c3\u30c1\u30f3\u30b0 - OpenCV-Python Tutorials 1 documentation\n\n\u62bd\u51fa\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u305f\u3081\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u524d\u9805\u3068\u540c\u69d8\u306b\u3001\u753b\u50cf\u30b5\u30a4\u30ba\u306f\u4e00\u5f8b200px \u00d7 200px\u306b\u5909\u63db\u3057\u3066\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u3002\n\nfeature_detection.py\n#!/usr/bin/env python\n# -*- coding: UTF-8 -*-\n\n\"\"\"feature detection.\"\"\"\n\nimport cv2\nimport os\n\nTARGET_FILE = '05.png'\nIMG_DIR = os.path.abspath(os.path.dirname(__file__)) + '/images/'\nIMG_SIZE = (200, 200)\n\ntarget_img_path = IMG_DIR + TARGET_FILE\ntarget_img = cv2.imread(target_img_path, cv2.IMREAD_GRAYSCALE)\ntarget_img = cv2.resize(target_img, IMG_SIZE)\n\nbf = cv2.BFMatcher(cv2.NORM_HAMMING)\n# detector = cv2.ORB_create()\ndetector = cv2.AKAZE_create()\n(target_kp, target_des) = detector.detectAndCompute(target_img, None)\n\nprint('TARGET_FILE: %s' % (TARGET_FILE))\n\nfiles = os.listdir(IMG_DIR)\nfor file in files:\n    if file == '.DS_Store' or file == TARGET_FILE:\n        continue\n\n    comparing_img_path = IMG_DIR + file\n    try:\n        comparing_img = cv2.imread(comparing_img_path, cv2.IMREAD_GRAYSCALE)\n        comparing_img = cv2.resize(comparing_img, IMG_SIZE)\n        (comparing_kp, comparing_des) = detector.detectAndCompute(comparing_img, None)\n        matches = bf.match(target_des, comparing_des)\n        dist = [m.distance for m in matches]\n        ret = sum(dist) / len(dist)\n    except cv2.error:\n        ret = 100000\n\n    print(file, ret)\n\n\n\u307e\u308c\u306bcv2.error\u3092\u5410\u304f\u305f\u3081\u3001try except\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u62bd\u51fa\u624b\u6cd5\u306fAKAZE\u3068ORB\u3067\u8a66\u3057\u307e\u3057\u305f\u3002\n\n\u5b9f\u884c\u7d50\u679c\uff08AKAZE\uff09\nTARGET_FILE: 05.png\n01.png 143.925\n02.png 134.05\n03.png 140.775\n04.png 127.8\n06.png 148.725\n\n\n\n\u5b9f\u884c\u7d50\u679c\uff08ORB\uff09\nTARGET_FILE: 05.png\n01.png 67.59139784946237\n02.png 58.60931899641577\n03.png 59.354838709677416\n04.png 53.59498207885304\n06.png 63.55913978494624\n\n\n\u8ddd\u96e2\u3092\u7b97\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5168\u304f\u540c\u3058\u753b\u50cf\u306e\u5834\u5408\u306e\u5024\u306f0\u3068\u306a\u308a\u3001\u5024\u304c\u5c0f\u3055\u3044\u307b\u3069\u985e\u4f3c\u5ea6\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002\u5b9f\u65bd\u3057\u305f\u3069\u3061\u3089\u306e\u624b\u6cd5\u3067\u3082\u3001\u524d\u9805\u3068\u540c\u69d8\u306b05.png\u306804.png\u306e\u985e\u4f3c\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\nDeep Learning\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u305d\u308c\u306a\u308a\u306e\u7cbe\u5ea6\u306f\u51fa\u305b\u308b\n\u624b\u6cd5\u306b\u5fdc\u3058\u3066\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db\u3001\u30b5\u30a4\u30ba\u5909\u63db\u3092\u884c\u3046\n\u7279\u5fb4\u70b9\u62bd\u51fa\u306e\u5834\u5408\u3001\u5411\u304d\u304c\u7570\u306a\u308b\u753b\u50cf\u306e\u6bd4\u8f03\u306f\u96e3\u3057\u3044\u306e\u3067\u3001\u540c\u3058\u5411\u304d\u306e\u753b\u50cf\u3092\u6bd4\u8f03\u3055\u305b\u308b\n\u4f8b\u3048\u3070\u3001\u5fc5\u305a\u6b63\u9762\u3092\u5411\u3044\u3066\u3044\u308b\u793e\u54e1\u8a3c\u306e\u753b\u50cf\u3069\u3046\u3057\u306f\u6bd4\u8f03\u3057\u6613\u3044\u6c17\u304c\u3059\u308b\n\u304a\u3044\u306c\u69d8 is GOD.\n\n\u7686\u3055\u3093\u3053\u3093\u306b\u3061\u306f\u3002@best_not_best\u3067\u3059\u3002\n\u73fe\u5728\u306e\u304a\u4ed5\u4e8b\u306f\u3001\u6c42\u4eba\u30b5\u30a4\u30c8\u306e\u6848\u4ef6\u30ec\u30b3\u30e1\u30f3\u30c9\u6a5f\u80fd\u306e\u5b9f\u88c5\u3084\u3001Google Analytics\u3084Adobe Analytics\u3092\u4f7f\u3063\u3066\u3001\u305d\u306e\u30b5\u30a4\u30c8\u306e\u5206\u6790\u3092\u3057\u3066\u3044\u307e\u3059\u3002\uff08\u3042\u3068\u306f\u52d5\u7269\u753b\u50cf\u3092\u793e\u5185Slack\u306b\u3072\u305f\u3059\u3089Post\u3057\u3066\u3044\u307e\u3059\u3002\uff09\n\n[\u524d\u56de\u306eAdvent Calendar](http://qiita.com/best_not_best/items/7946f55a4978ac1a8b2e)\u3067\u306f\u3001Deep Learning\u3092\u4f7f\u3063\u305f\u753b\u50cf\u985e\u4f3c\u5ea6\u5224\u5b9a\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u7cbe\u5ea6\u306f\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3084\u306f\u308a\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3059\u308b\u3053\u3068\u304c\u30cd\u30c3\u30af\u3068\u306a\u308a\u307e\u3059\u30fb\u30fb\u30fb\u3002\u4eca\u56de\u306f\u3001\u5358\u7d14\u306b2\u679a\u306e\u753b\u50cf\u3092\u6bd4\u8f03\u3057\u3066\u753b\u50cf\u306e\u985e\u4f3c\u5ea6\u3092\u6c42\u3081\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u3084\u308b\u3053\u3068\n\n\u4ee5\u4e0b\u306e\u304a\u3044\u306c\u69d8\u306e\u753b\u50cf\u306e\u985e\u4f3c\u5ea6\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\u753b\u50cf\u306fGoogle\u5148\u751f\u304b\u3089\u62fe\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u305f\u3081\u3001\u6b63\u9762\u3092\u5411\u3044\u3066\u3044\u308b\u753b\u50cf\u3092\u9078\u3073\u307e\u3057\u305f\u3002\n\n\u6bd4\u8f03\u753b\u50cf\n\n| \u30d5\u30a1\u30a4\u30eb\u540d | \u753b\u50cf | \u8aac\u660e |\n|:-----------:|:------------:|:------------:|\n| 05.png | <img src=\"https://qiita-image-store.s3.amazonaws.com/0/17452/bb7eeb2f-e0fe-f3f7-0221-f9f8f89b2b31.png\" alt=\"05\" width=\"200px\"> | \u67f4\u72ac\uff08\u304b\u308f\u3044\u3044\uff09 | \n\n\u6bd4\u8f03\u5bfe\u8c61\n\n| \u30d5\u30a1\u30a4\u30eb\u540d | \u753b\u50cf | \u8aac\u660e |\n|:-----------:|:------------:|:------------:|\n| 01.png | <img src=\"https://qiita-image-store.s3.amazonaws.com/0/17452/18c09e7c-c514-8e06-b852-8e7d6a1fdf1d.png\" alt=\"01\" width=\"200px\"> | \u30c0\u30c3\u30af\u30b9\u30d5\u30f3\u30c8\uff08\u304b\u308f\u3044\u3044\uff09 | \n| 02.png | <img src=\"https://qiita-image-store.s3.amazonaws.com/0/17452/93e6fc81-5ab9-ddf1-74d1-c1612ae98755.png\" alt=\"02\" width=\"200px\"> | \u30b3\u30fc\u30ae\u30fc\uff08\u304b\u308f\u3044\u3044\uff09 | \n| 03.png | <img src=\"https://qiita-image-store.s3.amazonaws.com/0/17452/faf70354-01d0-1f42-b140-cb94a36c038a.png\" alt=\"03\" width=\"200px\"> | \u30b4\u30fc\u30eb\u30c7\u30f3\u30fb\u30ec\u30c8\u30ea\u30d0\u30fc\uff08\u304b\u308f\u3044\u3044\uff09 | \n| 04.png | <img src=\"https://qiita-image-store.s3.amazonaws.com/0/17452/b27f891f-edfb-3dd9-433c-ae5d70b2b38e.png\" alt=\"04\" width=\"200px\"> | \u67f4\u72ac\uff08\u304b\u308f\u3044\u3044\uff09 | \n| 06.png | <img src=\"https://qiita-image-store.s3.amazonaws.com/0/17452/4b2714cc-1ebb-a061-f428-91db85059ce7.png\" alt=\"06\" width=\"200px\"> | \u30e9\u30d6\u30e9\u30c9\u30fc\u30eb\u30fb\u30ec\u30c8\u30ea\u30fc\u30d0\u30fc\uff08\u304b\u308f\u3044\u3044\uff09 | \n\n\u540c\u3058\u72ac\u7a2e\u3067\u3042\u308b\u300105.png\u306804.png\u306e\u985e\u4f3c\u5ea6\u304c\u9ad8\u304f\u306a\u308c\u3070\uff08\u3044\u3061\u304a\u3046\uff09\u6210\u529f\u3067\u3059\u3002\n\n## \u74b0\u5883\n\n* \u30de\u30b7\u30f3/OS\n  * MacBook Pro (Retina, 15-inch, Mid 2014)\n  * OS X Yosemite 10.10.5\n* Python\n  * Python 3.5.2 :: Anaconda 4.1.1 (x86_64)\n* Python\u30d1\u30c3\u30b1\u30fc\u30b8\n  * opencv3 3.1.0\uff08[conda](https://anaconda.org/menpo/opencv3)\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\uff09\n\n## \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\n\n```shell-session\nhist_matching.py\nfeature_detection.py\nimages\n \u251c\u2500 01.png\n \u251c\u2500 02.png\n \u251c\u2500 03.png\n \u251c\u2500 04.png\n \u251c\u2500 05.png\n \u2514\u2500 06.png\n```\n\n## \u691c\u8a3c1: \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u6bd4\u8f03\n\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u3001\u8272\u5408\u3044\u3067\u6bd4\u8f03\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002\u8a73\u7d30\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n* <a href=\"http://aidiary.hatenablog.com/entry/20091003/1254574041\" target=\"_blank\">\u985e\u4f3c\u753b\u50cf\u691c\u7d22\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046 - \u4eba\u5de5\u77e5\u80fd\u306b\u95a2\u3059\u308b\u65ad\u5275\u9332</a>\n* <a href=\"https://www.blog.umentu.work/python-opencv3%E3%81%A7%E5%BA%A6%E6%95%B0%E5%88%86%E5%B8%83%E3%82%92%E7%AE%97%E5%87%BA%E3%81%97%E3%81%A6%E3%83%92%E3%82%B9%E3%83%88%E3%82%B0%E3%83%A9%E3%83%A0%E5%87%BA%E5%8A%9B/\" target=\"_blank\">Python OpenCV3\u3067\u5ea6\u6570\u5206\u5e03\u3092\u7b97\u51fa\u3057\u3066\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u51fa\u529b - from umentu import stupid</a>\n\n\u8272\u5408\u3044\u3067\u6bd4\u8f03\u3059\u308b\u306e\u3067\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db\u306f\u884c\u3044\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u753b\u50cf\u30b5\u30a4\u30ba\u306f\u4e00\u5f8b200px \u00d7 200px\u306b\u5909\u63db\u3057\u3066\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u3002\n\n```py3:hist_matching.py\n#!/usr/bin/env python\n# -*- coding: UTF-8 -*-\n\n\"\"\"hist matching.\"\"\"\n\nimport cv2\nimport os\n\nTARGET_FILE = '05.png'\nIMG_DIR = os.path.abspath(os.path.dirname(__file__)) + '/images/'\nIMG_SIZE = (200, 200)\n\ntarget_img_path = IMG_DIR + TARGET_FILE\ntarget_img = cv2.imread(target_img_path)\ntarget_img = cv2.resize(target_img, IMG_SIZE)\ntarget_hist = cv2.calcHist([target_img], [0], None, [256], [0, 256])\n\nprint('TARGET_FILE: %s' % (TARGET_FILE))\n\nfiles = os.listdir(IMG_DIR)\nfor file in files:\n    if file == '.DS_Store' or file == TARGET_FILE:\n        continue\n\n    comparing_img_path = IMG_DIR + file\n    comparing_img = cv2.imread(comparing_img_path)\n    comparing_img = cv2.resize(comparing_img, IMG_SIZE)\n    comparing_hist = cv2.calcHist([comparing_img], [0], None, [256], [0, 256])\n\n    ret = cv2.compareHist(target_hist, comparing_hist, 0)\n    print(file, ret)\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30e1\u30e2\u30ea\u3092\u6d88\u8cbb\u3059\u308b\u306e\u304b`Segmentation fault: 11`\u3084`python(18114,0x7fff7a45b000) malloc: *** error for object 0x102000e00: incorrect checksum for freed object - object was probably modified after being freed.`\u3068\u3044\u3063\u305f\u30a8\u30e9\u30fc\u304c\u307e\u308c\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u89e3\u6c7a\u7b56\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\uff08\u3059\u3044\u307e\u305b\u3093\uff09\u304c\u3001\u5927\u91cf\u306e\u753b\u50cf\u3092\u6271\u3046\u5834\u5408\u306f\u3001\u6bd4\u8f03\u753b\u50cf\u306e\u6570\u3092\u7d5e\u3063\u3066\u8907\u6570\u56de\u51e6\u7406\u3092\u884c\u3063\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n```shell-session:\u5b9f\u884c\u7d50\u679c\nTARGET_FILE: 05.png\n01.png 0.3064316801821619\n02.png -0.09702013809004943\n03.png 0.5273343981076624\n04.png 0.5453261576844468\n06.png 0.1256772923432995\n```\n\n\u5168\u304f\u540c\u3058\u753b\u50cf\u306e\u5834\u5408\u3001\u985e\u4f3c\u5ea6\u306f1\u3068\u306a\u308a\u307e\u3059\u300205.png\u306804.png\u306e\u985e\u4f3c\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u300201.png\u3068\u306e\u985e\u4f3c\u5ea6\u304c\u9ad8\u3044\u306e\u306f\u610f\u5916\u3067\u3057\u305f\u3002\n\n## \u691c\u8a3c2: \u7279\u5fb4\u70b9\u306e\u30de\u30c3\u30c1\u30f3\u30b0\n\n2\u753b\u50cf\u306e\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3057\u3001\u305d\u308c\u3089\u306e\u8ddd\u96e2\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n* <a href=\"http://aidiary.hatenablog.com/entry/20091102/1257167398\" target=\"_blank\">3\u65e5\u3067\u4f5c\u308b\u9ad8\u901f\u7279\u5b9a\u7269\u4f53\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0 (4) \u7279\u5fb4\u70b9\u306e\u30de\u30c3\u30c1\u30f3\u30b0 - \u4eba\u5de5\u77e5\u80fd\u306b\u95a2\u3059\u308b\u65ad\u5275\u9332</a>\n* <a href=\"http://qiita.com/hmichu/items/f5f1c778a155c7c414fd\" target=\"_blank\">[OpenCV] \u3044\u307e\u3055\u3089\u5c40\u6240\u7279\u5fb4\u91cf\u3067\u7269\u4f53\u691c\u51fa\uff01\uff1f - Qiita</a>\n* <a href=\"http://labs.eecs.tottori-u.ac.jp/sd/Member/oyamada/OpenCV/html/py_tutorials/py_feature2d/py_matcher/py_matcher.html\" target=\"_blank\">\u7279\u5fb4\u70b9\u306e\u30de\u30c3\u30c1\u30f3\u30b0 - OpenCV-Python Tutorials 1 documentation</a>\n\n\u62bd\u51fa\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u305f\u3081\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u524d\u9805\u3068\u540c\u69d8\u306b\u3001\u753b\u50cf\u30b5\u30a4\u30ba\u306f\u4e00\u5f8b200px \u00d7 200px\u306b\u5909\u63db\u3057\u3066\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u3002\n\n```py3:feature_detection.py\n#!/usr/bin/env python\n# -*- coding: UTF-8 -*-\n\n\"\"\"feature detection.\"\"\"\n\nimport cv2\nimport os\n\nTARGET_FILE = '05.png'\nIMG_DIR = os.path.abspath(os.path.dirname(__file__)) + '/images/'\nIMG_SIZE = (200, 200)\n\ntarget_img_path = IMG_DIR + TARGET_FILE\ntarget_img = cv2.imread(target_img_path, cv2.IMREAD_GRAYSCALE)\ntarget_img = cv2.resize(target_img, IMG_SIZE)\n\nbf = cv2.BFMatcher(cv2.NORM_HAMMING)\n# detector = cv2.ORB_create()\ndetector = cv2.AKAZE_create()\n(target_kp, target_des) = detector.detectAndCompute(target_img, None)\n\nprint('TARGET_FILE: %s' % (TARGET_FILE))\n\nfiles = os.listdir(IMG_DIR)\nfor file in files:\n    if file == '.DS_Store' or file == TARGET_FILE:\n        continue\n\n    comparing_img_path = IMG_DIR + file\n    try:\n        comparing_img = cv2.imread(comparing_img_path, cv2.IMREAD_GRAYSCALE)\n        comparing_img = cv2.resize(comparing_img, IMG_SIZE)\n        (comparing_kp, comparing_des) = detector.detectAndCompute(comparing_img, None)\n        matches = bf.match(target_des, comparing_des)\n        dist = [m.distance for m in matches]\n        ret = sum(dist) / len(dist)\n    except cv2.error:\n        ret = 100000\n\n    print(file, ret)\n```\n\n\u307e\u308c\u306b`cv2.error`\u3092\u5410\u304f\u305f\u3081\u3001`try except`\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u62bd\u51fa\u624b\u6cd5\u306fAKAZE\u3068ORB\u3067\u8a66\u3057\u307e\u3057\u305f\u3002\n\n```shell-session:\u5b9f\u884c\u7d50\u679c\uff08AKAZE\uff09\nTARGET_FILE: 05.png\n01.png 143.925\n02.png 134.05\n03.png 140.775\n04.png 127.8\n06.png 148.725\n```\n\n```shell-session:\u5b9f\u884c\u7d50\u679c\uff08ORB\uff09\nTARGET_FILE: 05.png\n01.png 67.59139784946237\n02.png 58.60931899641577\n03.png 59.354838709677416\n04.png 53.59498207885304\n06.png 63.55913978494624\n```\n\n\u8ddd\u96e2\u3092\u7b97\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5168\u304f\u540c\u3058\u753b\u50cf\u306e\u5834\u5408\u306e\u5024\u306f0\u3068\u306a\u308a\u3001\u5024\u304c\u5c0f\u3055\u3044\u307b\u3069\u985e\u4f3c\u5ea6\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002\u5b9f\u65bd\u3057\u305f\u3069\u3061\u3089\u306e\u624b\u6cd5\u3067\u3082\u3001\u524d\u9805\u3068\u540c\u69d8\u306b05.png\u306804.png\u306e\u985e\u4f3c\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\n* Deep Learning\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u305d\u308c\u306a\u308a\u306e\u7cbe\u5ea6\u306f\u51fa\u305b\u308b\n* \u624b\u6cd5\u306b\u5fdc\u3058\u3066\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db\u3001\u30b5\u30a4\u30ba\u5909\u63db\u3092\u884c\u3046\n* \u7279\u5fb4\u70b9\u62bd\u51fa\u306e\u5834\u5408\u3001\u5411\u304d\u304c\u7570\u306a\u308b\u753b\u50cf\u306e\u6bd4\u8f03\u306f\u96e3\u3057\u3044\u306e\u3067\u3001\u540c\u3058\u5411\u304d\u306e\u753b\u50cf\u3092\u6bd4\u8f03\u3055\u305b\u308b\n* \u4f8b\u3048\u3070\u3001\u5fc5\u305a\u6b63\u9762\u3092\u5411\u3044\u3066\u3044\u308b\u793e\u54e1\u8a3c\u306e\u753b\u50cf\u3069\u3046\u3057\u306f\u6bd4\u8f03\u3057\u6613\u3044\u6c17\u304c\u3059\u308b\n* \u304a\u3044\u306c\u69d8 is GOD.\n", "tags": ["Python", "OpenCV", "\u3044\u306c"]}