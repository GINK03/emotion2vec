{"tags": ["Android", "Espresso", "testing"], "context": "\n\nTextInputLayout\u306e\u30a8\u30e9\u30fc\u8868\u793a\u3092\u78ba\u8a8d\u3059\u308b\nEditText\u7528\u306e\u30a8\u30e9\u30fc\u30c6\u30ad\u30b9\u30c8\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308bMatcher\u306f\u5b58\u5728\u3059\u308b\u304c\u3001InputTextLayout\u7528\u304c\u306a\u304b\u3063\u305f\u306e\u3067\n\u30ab\u30b9\u30bf\u30e0Matcher\u3092withText\u306eMatcher\u3092\u53c2\u8003\u306b\u4f5c\u6210\u3057\u305f\n\u30a8\u30e9\u30fc\u304b\u3069\u3046\u304b\u3001\u30a8\u30e9\u30fc\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u6587\u5b57\u5217\u3001\u307e\u305f\u306f\u6587\u5b57\u5217\u30ea\u30bd\u30fc\u30b9\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\n    public static Matcher<View> withErrorText(String text) {\n        return withErrorText(is(text));\n    }\n\n\n    public static Matcher<View> withErrorText(final Matcher<String> stringMatcher) {\n        return new BoundedMatcher<View, TextInputLayout>(TextInputLayout.class) {\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"with Error Text: \");\n                stringMatcher.describeTo(description);\n            }\n\n            @Override\n            public boolean matchesSafely(TextInputLayout textInputLayout) {\n                CharSequence error = textInputLayout.getError();\n                return error != null && stringMatcher.matches(error.toString());\n            }\n        };\n    }\n\n    public static Matcher<View> withErrorText(final int resourceId) {\n        return new BoundedMatcher<View, TextInputLayout>(TextInputLayout.class) {\n            private String resourceName = null;\n            private String expectedText = null;\n\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"with string from resource id: \");\n                description.appendValue(resourceId);\n                if (null != resourceName) {\n                    description.appendText(\"[\");\n                    description.appendText(resourceName);\n                    description.appendText(\"]\");\n                }\n                if (null != expectedText) {\n                    description.appendText(\" value: \");\n                    description.appendText(expectedText);\n                }\n            }\n\n            @Override\n            public boolean matchesSafely(TextInputLayout textInputLayout) {\n                if (null == expectedText) {\n                    try {\n                        expectedText = textInputLayout.getResources().getString(resourceId);\n                        resourceName = textInputLayout.getResources().getResourceEntryName(resourceId);\n                    } catch (Resources.NotFoundException ignored) {\n                        // NOP\n                    }\n                }\n                CharSequence actualText = null;\n\n                actualText = textInputLayout.getError();\n\n\n                if (null != expectedText && null != actualText) {\n                    // FYI: actualText may not be string ... its just a char sequence convert to string.\n                    return expectedText.equals(actualText.toString());\n                } else {\n                    return false;\n                }\n            }\n        };\n    }\n\n    public static Matcher<View> hasError() {\n        return new BoundedMatcher<View, TextInputLayout>(TextInputLayout.class) {\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"has Error\");\n            }\n\n            @Override\n            public boolean matchesSafely(TextInputLayout textInputLayout) {\n                CharSequence error = textInputLayout.getError();\n                return error != null;\n            }\n        };\n    }\n\n\n\u4f7f\u7528\u4f8b\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3067\u540c\u3058\u5185\u5bb9\u306e\u30a8\u30e9\u30fc\u6587\u8a00\u304c\u4e26\u3076\u5834\u5408\u306a\u3069\u3067\u52b9\u679c\u3092\u767a\u63ee\u3059\u308b\nallOf(withId(),withText())\u3067\u3082\u78ba\u8a8d\u3067\u304d\u308b\u304c\u3001\u30ab\u30b9\u30bf\u30e0matcher\u306e\u65b9\u304c\u30b9\u30c3\u30ad\u30ea\u3059\u308b\u3068\u601d\u3063\u305f\n    public void \u30a8\u30e9\u30fc\u30c6\u30b9\u30c8() {\n        onView(withId(R.id.textInputLayout_mail)).check(matches(isDisplayed()));\n        onView(withId(R.id.textInputLayout_mail)).check(matches(hasError()));\n        onView(withId(R.id.textInputLayout_mail)).check(matches(withErrorText(\"\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")));\n        onView(withId(R.id.textInputLayout_mail)).check(matches(withErrorText(R.string.error_message_required)));\n        onView(withId(R.id.textInputLayout_password)).check(matches(not(hasError())));\n    }\n\n\u53c2\u8003\uff1a\nhttps://developer.android.com/reference/android/support/test/espresso/matcher/ViewMatchers.html?hl=ja\n\n#TextInputLayout\u306e\u30a8\u30e9\u30fc\u8868\u793a\u3092\u78ba\u8a8d\u3059\u308b\nEditText\u7528\u306e\u30a8\u30e9\u30fc\u30c6\u30ad\u30b9\u30c8\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308bMatcher\u306f\u5b58\u5728\u3059\u308b\u304c\u3001InputTextLayout\u7528\u304c\u306a\u304b\u3063\u305f\u306e\u3067\n\u30ab\u30b9\u30bf\u30e0Matcher\u3092withText\u306eMatcher\u3092\u53c2\u8003\u306b\u4f5c\u6210\u3057\u305f\n\u30a8\u30e9\u30fc\u304b\u3069\u3046\u304b\u3001\u30a8\u30e9\u30fc\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u6587\u5b57\u5217\u3001\u307e\u305f\u306f\u6587\u5b57\u5217\u30ea\u30bd\u30fc\u30b9\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\n\n```java:\n    public static Matcher<View> withErrorText(String text) {\n        return withErrorText(is(text));\n    }\n\n\n    public static Matcher<View> withErrorText(final Matcher<String> stringMatcher) {\n        return new BoundedMatcher<View, TextInputLayout>(TextInputLayout.class) {\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"with Error Text: \");\n                stringMatcher.describeTo(description);\n            }\n\n            @Override\n            public boolean matchesSafely(TextInputLayout textInputLayout) {\n                CharSequence error = textInputLayout.getError();\n                return error != null && stringMatcher.matches(error.toString());\n            }\n        };\n    }\n\n    public static Matcher<View> withErrorText(final int resourceId) {\n        return new BoundedMatcher<View, TextInputLayout>(TextInputLayout.class) {\n            private String resourceName = null;\n            private String expectedText = null;\n\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"with string from resource id: \");\n                description.appendValue(resourceId);\n                if (null != resourceName) {\n                    description.appendText(\"[\");\n                    description.appendText(resourceName);\n                    description.appendText(\"]\");\n                }\n                if (null != expectedText) {\n                    description.appendText(\" value: \");\n                    description.appendText(expectedText);\n                }\n            }\n\n            @Override\n            public boolean matchesSafely(TextInputLayout textInputLayout) {\n                if (null == expectedText) {\n                    try {\n                        expectedText = textInputLayout.getResources().getString(resourceId);\n                        resourceName = textInputLayout.getResources().getResourceEntryName(resourceId);\n                    } catch (Resources.NotFoundException ignored) {\n                        // NOP\n                    }\n                }\n                CharSequence actualText = null;\n\n                actualText = textInputLayout.getError();\n\n\n                if (null != expectedText && null != actualText) {\n                    // FYI: actualText may not be string ... its just a char sequence convert to string.\n                    return expectedText.equals(actualText.toString());\n                } else {\n                    return false;\n                }\n            }\n        };\n    }\n\n    public static Matcher<View> hasError() {\n        return new BoundedMatcher<View, TextInputLayout>(TextInputLayout.class) {\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"has Error\");\n            }\n\n            @Override\n            public boolean matchesSafely(TextInputLayout textInputLayout) {\n                CharSequence error = textInputLayout.getError();\n                return error != null;\n            }\n        };\n    }\n```\n\n# \u4f7f\u7528\u4f8b\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3067\u540c\u3058\u5185\u5bb9\u306e\u30a8\u30e9\u30fc\u6587\u8a00\u304c\u4e26\u3076\u5834\u5408\u306a\u3069\u3067\u52b9\u679c\u3092\u767a\u63ee\u3059\u308b\nallOf(withId(),withText())\u3067\u3082\u78ba\u8a8d\u3067\u304d\u308b\u304c\u3001\u30ab\u30b9\u30bf\u30e0matcher\u306e\u65b9\u304c\u30b9\u30c3\u30ad\u30ea\u3059\u308b\u3068\u601d\u3063\u305f\n\n```java:\n    public void \u30a8\u30e9\u30fc\u30c6\u30b9\u30c8() {\n        onView(withId(R.id.textInputLayout_mail)).check(matches(isDisplayed()));\n        onView(withId(R.id.textInputLayout_mail)).check(matches(hasError()));\n        onView(withId(R.id.textInputLayout_mail)).check(matches(withErrorText(\"\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")));\n        onView(withId(R.id.textInputLayout_mail)).check(matches(withErrorText(R.string.error_message_required)));\n        onView(withId(R.id.textInputLayout_password)).check(matches(not(hasError())));\n    }\n```\n\u53c2\u8003\uff1a\nhttps://developer.android.com/reference/android/support/test/espresso/matcher/ViewMatchers.html?hl=ja\n"}