{"tags": ["Ruby1.9.2p180", "oauth20.5.2"], "context": " More than 1 year has passed since last update.ruby\u306eoauth2\u3092\u4f7f\u3063\u3066facebook\u3068\u306eOAuth\u9023\u643a\u3092\u8a66\u307f\u3066\u307f\u305f\u3002\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\nruby: 1.9.2p180\noauth2: 0.5.2\n\n\u307e\u305a\u306f\u3001facebook\u8a8d\u8a3c\u306eURL\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\nrequire 'oauth2'\n\nsite = \"https://graph.facebook.com\"\ntoken_url= \"/oauth/access_token\"\nkey=\"xxxx\"                          # facebook\u306eAPP ID\nsecret=\"xxx\"                        # facebook\u306eAPP SECRET\ncallback_url=\"http://xxx.com/\"      # callback\u3057\u3066\u307b\u3057\u3044URL\n\n#\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\nclient = OAuth2::Client.new(key,secret,:site => site,:token_url => token_url)\n\n#URL\u4f5c\u6210\nurl = client.auth_code.authorize_url( :redirect_uri => callback_url)\n\n#URL\u8868\u793a\nputs url\n\n\u3053\u308c\u3067\u51fa\u6765\u305fURL\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001facebook\u306e\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u304c\u51fa\u308b\u306e\u3067\u3001\u305d\u3053\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306aLocation\u3092\u6307\u5b9a\u3057\u305f\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u8981\u6c42\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\nLocation: (callback\u3057\u307b\u3057\u3044URL)/?code=\"(\u8a8d\u8a3c\u30b3\u30fc\u30c9)\"\n\n\u6b21\u306b\u8a8d\u8a3c\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u3001token\u3092\u53d6\u5f97\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\nrequire 'oauth2'\n\nsite = \"https://graph.facebook.com\"\ntoken_url= \"/oauth/access_token\"\nkey=\"xxxx\"                          # facebook\u306eAPP ID\nsecret=\"xxx\"                        # facebook\u306eAPP SECRET\ncallback_url=\"http://xxx.com/\"      # callback\u3057\u3066\u307b\u3057\u3044URL\ncode =\"xxxx\"                        # \u524d\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u53d6\u5f97\u3057\u305fcode\n\n#\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\nclient = OAuth2::Client.new(key, secret, :site => site, :token_url => token_url)\n\n#token\u306e\u53d6\u5f97\naccess_token = client.auth_code.get_token( code, { :redirect_uri => callback_url })\n\n#token\u8868\u793a\nputs access_token.token\n\n\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u3067\u305f\u3002\n/usr/local/lib/ruby/gems/1.9.1/gems/oauth2-0.5.2/lib/oauth2/client.rb:129:in `get_token': OAuth2::Error (OAuth2::Error) \n\n\u307e\u3063\u305f\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30bd\u30fc\u30b9\u3092\u898b\u308b\u3068\u3001\u554f\u984c\u306e\u500b\u6240\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001\nresponse = request(options[:token_method], token_url, opts)\nraise Error.new(response) if options[:raise_errors] && !(response.parsed.is_a?(Hash) && response.parsed['access_token'])\n\n\u3053\u3053\u306eoptions[:raise_errors]\u3068\u3044\u3046\u306e\u304ctrue\u306e\u305f\u3081\u4f8b\u5916\u3092\u98db\u3070\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n\u539f\u56e0\u3092\u8abf\u67fb\u3057\u3066\u3044\u308b\u3068\u3001github\u306e\u63b2\u793a\u677f\u306b\u3053\u306e\u3053\u3068\u304c\u66f8\u3044\u3066\u3042\u308a\u3001acvwilson\u3055\u3093\u304c\u89e3\u6c7a\u7b56\u3092\u66f8\u3044\u3066\u304f\u308c\u3066\u3044\u308b\u3002\n\u307e\u3068\u3081\u308b\u3068\u300cfacebook\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5f62\u5f0f(=\u304c\u5165\u3063\u3066\u3044\u308b\u3084\u3064)\u306b\u5bfe\u5fdc\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u30d1\u30fc\u30b5\u3092\u5bfe\u5fdc\u3055\u305b\u3066\u304f\u308c\u3002\u300d\u3068\u306e\u3053\u3068\nOAuth2::Response.register_parser(:text, 'text/plain') do |body|\n  key, value = body.split('=')\n  {key => value}\nend\n\n\u3053\u308c\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3046\u307e\u304f\u52d5\u3044\u305f\uff01\nruby\u306eoauth2\u3092\u4f7f\u3063\u3066facebook\u3068\u306eOAuth\u9023\u643a\u3092\u8a66\u307f\u3066\u307f\u305f\u3002\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n* ruby: 1.9.2p180\n* oauth2: 0.5.2\n\n\u307e\u305a\u306f\u3001facebook\u8a8d\u8a3c\u306eURL\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\n```rb\nrequire 'oauth2'\n\nsite = \"https://graph.facebook.com\"\ntoken_url= \"/oauth/access_token\"\nkey=\"xxxx\"                          # facebook\u306eAPP ID\nsecret=\"xxx\"                        # facebook\u306eAPP SECRET\ncallback_url=\"http://xxx.com/\"      # callback\u3057\u3066\u307b\u3057\u3044URL\n\n#\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\nclient = OAuth2::Client.new(key,secret,:site => site,:token_url => token_url)\n\n#URL\u4f5c\u6210\nurl = client.auth_code.authorize_url( :redirect_uri => callback_url)\n\n#URL\u8868\u793a\nputs url\n```\n\n\u3053\u308c\u3067\u51fa\u6765\u305fURL\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001facebook\u306e\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u304c\u51fa\u308b\u306e\u3067\u3001\u305d\u3053\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306aLocation\u3092\u6307\u5b9a\u3057\u305f\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u8981\u6c42\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\n    Location: (callback\u3057\u307b\u3057\u3044URL)/?code=\"(\u8a8d\u8a3c\u30b3\u30fc\u30c9)\"\n\n\u6b21\u306b\u8a8d\u8a3c\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u3001token\u3092\u53d6\u5f97\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\n```rb\nrequire 'oauth2'\n\nsite = \"https://graph.facebook.com\"\ntoken_url= \"/oauth/access_token\"\nkey=\"xxxx\"                          # facebook\u306eAPP ID\nsecret=\"xxx\"                        # facebook\u306eAPP SECRET\ncallback_url=\"http://xxx.com/\"      # callback\u3057\u3066\u307b\u3057\u3044URL\ncode =\"xxxx\"                        # \u524d\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u53d6\u5f97\u3057\u305fcode\n\n#\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\nclient = OAuth2::Client.new(key, secret, :site => site, :token_url => token_url)\n\n#token\u306e\u53d6\u5f97\naccess_token = client.auth_code.get_token( code, { :redirect_uri => callback_url })\n\n#token\u8868\u793a\nputs access_token.token\n```\n\n\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u3067\u305f\u3002\n\n    /usr/local/lib/ruby/gems/1.9.1/gems/oauth2-0.5.2/lib/oauth2/client.rb:129:in `get_token': OAuth2::Error (OAuth2::Error) \n\n\u307e\u3063\u305f\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30bd\u30fc\u30b9\u3092\u898b\u308b\u3068\u3001\u554f\u984c\u306e\u500b\u6240\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001\n\n```rb\nresponse = request(options[:token_method], token_url, opts)\nraise Error.new(response) if options[:raise_errors] && !(response.parsed.is_a?(Hash) && response.parsed['access_token'])\n```\n\n\u3053\u3053\u306eoptions[:raise_errors]\u3068\u3044\u3046\u306e\u304ctrue\u306e\u305f\u3081\u4f8b\u5916\u3092\u98db\u3070\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n\n\u539f\u56e0\u3092\u8abf\u67fb\u3057\u3066\u3044\u308b\u3068\u3001github\u306e\u63b2\u793a\u677f\u306b\u3053\u306e\u3053\u3068\u304c\u66f8\u3044\u3066\u3042\u308a\u3001acvwilson\u3055\u3093\u304c\u89e3\u6c7a\u7b56\u3092\u66f8\u3044\u3066\u304f\u308c\u3066\u3044\u308b\u3002\n\n\u307e\u3068\u3081\u308b\u3068\u300cfacebook\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5f62\u5f0f(=\u304c\u5165\u3063\u3066\u3044\u308b\u3084\u3064)\u306b\u5bfe\u5fdc\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u30d1\u30fc\u30b5\u3092\u5bfe\u5fdc\u3055\u305b\u3066\u304f\u308c\u3002\u300d\u3068\u306e\u3053\u3068\n\n```rb\nOAuth2::Response.register_parser(:text, 'text/plain') do |body|\n  key, value = body.split('=')\n  {key => value}\nend\n```\n\n\u3053\u308c\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3046\u307e\u304f\u52d5\u3044\u305f\uff01"}