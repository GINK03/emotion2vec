{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3084\u30da\u30a4\u30f3\u30c8\u30bd\u30d5\u30c8\u3067\u3088\u304f\u3042\u308bUndo/Redo\u3092\u3001\u81ea\u524d\u3067\u5b9f\u88c5\u3059\u308b\u306e\u306f\u5927\u5909\u305d\u3046\u3067\u3059\u304c\u3001Qt\u306eUndo Framework\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u305f\u306e\u3067\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u5b9f\u88c5\u306e\u6d41\u308c\n\u3056\u3063\u304f\u308a\u793a\u3059\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u64cd\u4f5c\u3092\u30b3\u30de\u30f3\u30c9\u5316\u3059\u308b\uff08QUndoCommand\uff09\n\u30b3\u30de\u30f3\u30c9\u3092\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u3080\uff08QUndoStack::push()\uff09\n\u30b9\u30bf\u30c3\u30af\u304b\u3089\u30b3\u30de\u30f3\u30c9\u3092\u53d6\u308a\u51fa\u3057\u3066\u3001Undo/Redo\u3092\u884c\u3046\n\n\u4f8b\u3048\u3070\u3001\u300c\u30ad\u30e3\u30f3\u30d0\u30b9\u306b\u9802\u70b9\u3092\u6253\u3064\u300d\u3068\u3044\u3046\u64cd\u4f5c\u306b\u3088\u3063\u3066\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u9802\u70b9\u60c5\u5831\u3092\u8ffd\u52a0\u3055\u308c\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u306e\u300c\u9802\u70b9\u60c5\u5831\u3092\u8ffd\u52a0\u3059\u308b\u300d\u3068\u3044\u3046\u306e\u3092QUndoCommand::redo()\u306b\u66f8\u304d\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u3053\u308c\u3060\u3051\u3067\u306f\u3069\u3046\u3059\u308c\u3070\u5143\u306e\u72b6\u614b\u306b\u623b\u305b\u308b\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001\u623b\u3059\u65b9\u6cd5\u3082\u66f8\u3044\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u5834\u5408\u3001\u300c\u9802\u70b9\u3092\u524a\u9664\u300d\u3059\u308b\u3053\u3068\u3067\u3001\u524d\u306e\u72b6\u614b\u306b\u623b\u305b\u308b\u306e\u3067\u3001\u3053\u308c\u3092QUndoCommand::undo()\u306b\u66f8\u304d\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u6642\u306f\u3001\u751f\u6210\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092QUndoStack\u306b\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u3042\u3052\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u5b9f\u88c5\u65b9\u6cd5\n\u64cd\u4f5c\u3092\u30b3\u30de\u30f3\u30c9\u5316\u3059\u308b\u3068\u304d\u306fQUndoCommand\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u5148\u306e\u4f8b\u3060\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\u307e\u305a\u306f\u3001\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\nAddPointCommand.h\n#ifndef ADDPOINTCOMMAND_H\n#define ADDPOINTCOMMAND_H\n\n#include <QUndoCommand>\n#include <QPoint>\n\nclass AddPointCommand : public QUndoCommand\n{\n    public:\n        AddPointCommand(const QPoint &point, QList<QPoint> *pointList, QUndoCommand *parent = 0);\n\n        // QUndoCommand interface\n    public:\n        void undo() Q_DECL_OVERRIDE;\n        void redo() Q_DECL_OVERRIDE;\n\n    private:\n        QPoint m_point;\n        QList<QPoint> *m_pointList;\n};\n\n#endif // ADDPOINTCOMMAND_H\n\n\n\u7d9a\u3044\u3066\u3001\u5b9f\u88c5\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\nAddPointCommand.cpp\n\n#include \"AddPointCommand.h\"\n\nAddPointCommand::AddPointCommand(const QPoint &point, QList<QPoint> *pointList, QUndoCommand *parent):\n    QUndoCommand(parent),\n    m_point(point),\n    m_pointList(pointList)\n{\n\n}\n\nvoid AddPointCommand::undo()\n{\n    if (m_pointList->isEmpty())\n    {\n        return;\n    }\n\n    // \u9802\u70b9\u30ea\u30b9\u30c8\u306e\u6700\u5f8c\u306b\u70b9\u304c\u6700\u5f8c\u306b\u8ffd\u52a0\u3057\u305f\u70b9\u306a\u306e\u3067\u3001\u305d\u308c\u3092\u53d6\u308a\u9664\u304f\n    auto point = m_pointList->takeLast();\n\n    // \u5b9f\u884c\u3057\u305f\u64cd\u4f5c\u306b\u8aac\u660e\u3092\u3064\u3051\u308b\n    setText(QString(\"Remove : (%1, %2)\").arg(point.x()).arg(point.y()));\n}\n\nvoid AddPointCommand::redo()\n{\n    // \u9802\u70b9\u30ea\u30b9\u30c8\u306e\u6700\u5f8c\u306b\u70b9\u3092\u8ffd\u52a0\n    m_pointList->push_back(m_point);\n\n    // \u5b9f\u884c\u3057\u305f\u64cd\u4f5c\u306b\u8aac\u660e\u3092\u3064\u3051\u308b\n    setText(QString(\"Add : (%1, %2)\").arg(m_point.x()).arg(m_point.y()));\n}\n\n\n\nAddPointCommand\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u3067\u3001\u8ffd\u52a0\u3057\u305f\u3044\u70b9\u3068\u5909\u66f4\u3092\u52a0\u3048\u305f\u3044\u9802\u70b9\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u3068\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001redo()\u306b\u9802\u70b9\u3092\u8ffd\u52a0\u3059\u308b\u51e6\u7406\u3001undo()\u306b\u9802\u70b9\u3092\u524a\u9664\u3059\u308b\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306eAddPointCommand\u306f\u3001MainWindow\u306emouseReleaseEvent\u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\nMainWindow.h\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n\n#include <QMainWindow>\n#include <QUndoStack>\n\nnamespace Ui {\n    class MainWindow;\n}\n\nclass MainWindow : public QMainWindow\n{\n        Q_OBJECT\n\n    public:\n        explicit MainWindow(QWidget *parent = 0);\n        ~MainWindow();\n\n        // QWidget interface\n    protected:\n        void mouseReleaseEvent(QMouseEvent *e) Q_DECL_OVERRIDE;\n\n    private:\n        Ui::MainWindow *ui;\n        QList<QPoint> m_pointList;\n        QUndoStack *m_undoStack;\n\n};\n\n#endif // MAINWINDOW_H\n\n\n\nMainWindow.cpp\n#include \"MainWindow.h\"\n#include \"ui_MainWindow.h\"\n\n#include <QMouseEvent>\n\n#include \"AddPointCommand.h\"\n\nMainWindow::MainWindow(QWidget *parent) :\n    QMainWindow(parent),\n    ui(new Ui::MainWindow),\n    m_undoStack(new QUndoStack)\n{\n    ui->setupUi(this);\n\n    connect(ui->btnUndo, &QPushButton::clicked, m_undoStack, &QUndoStack::undo);\n    connect(ui->btnRedo, &QPushButton::clicked, m_undoStack, &QUndoStack::redo);\n}\n\nMainWindow::~MainWindow()\n{\n    delete ui;\n}\n\nvoid MainWindow::mouseReleaseEvent(QMouseEvent *e)\n{\n    AddPointCommand *addPointCommand = new AddPointCommand(e->pos(), &m_pointList);\n    m_undoStack->push(addPointCommand);\n}\n\n\nQUndoStack\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9m_undoStack\u3092\u751f\u6210\u3057\u3001push()\u3092\u4f7f\u3063\u3066\u3001addPointCommand\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u3044\u307e\u3059\u3002\n\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u3068\u3001\u81ea\u52d5\u7684\u306baddPointCommand\u306eredo()\u304c\u547c\u3070\u308c\u3066\u3001\u9802\u70b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\u300c\u5143\u306b\u623b\u3059\u300d\u3068\u300c\u3084\u308a\u76f4\u3057\u300d\u306f\u3001QUndoStack\u306eundo()\u3001redo()\u3067\u884c\u3048\u307e\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001QPushButton\u306eclicked\u30b7\u30b0\u30ca\u30eb\u3068\u63a5\u7d9a\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u540c\u3058\u30b3\u30de\u30f3\u30c9\u3092\u307e\u3068\u3081\u308bmergeWith\n\u4e0a\u8a18\u306e\u4f8b\u3068\u540c\u3058\u30ce\u30ea\u3067\u3001\u300c\u9802\u70b9\u3092\u52d5\u304b\u3059\u300d\u3068\u3044\u3046\u64cd\u4f5c\u3092\u30b3\u30de\u30f3\u30c9\u5316\u3059\u308b\u3068\u3001\u5c11\u3057\u9762\u5012\u306a\u3053\u3068\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001MovePointCommand\u3092\u4f5c\u308a\u3001\u3042\u308b\u70b9\u3092(0, 0)\u304b\u3089(0, 300)\u307e\u3067\u52d5\u304b\u3059\u3068\u3001\u6570\u30d4\u30af\u30bb\u30eb\u52d5\u304f\u305f\u3073\u306bMovePointCommand\u304c\u7a4d\u307e\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u306e\u72b6\u614b\u3067\u64cd\u4f5c\u3092\u623b\u305d\u3046\u3068\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u306f\u4f55\u56de\u3082\u300c\u5143\u306b\u623b\u3059\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u3001\u540c\u3058\u30b3\u30de\u30f3\u30c9\u304c\u7d9a\u304f\u6642\u306f\u3001mergeWith\u3092\u4f7f\u3063\u3066\u30b3\u30de\u30f3\u30c9\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u304c\u540c\u3058\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\u306b\u306fid()\u3092\u4f7f\u3046\u306e\u3067\u3001\u4ed6\u306e\u30b3\u30de\u30f3\u30c9\u3068\u304b\u3076\u3089\u306a\u3044\u3088\u3046\u306a\u6574\u6570\u3092\u8fd4\u3059\u3088\u3046\u306b\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nmergeWith\u306e\u4e2d\u3067\u3001\u76f4\u524d\u306e\u30b3\u30de\u30f3\u30c9\u3068\u73fe\u5728\u306e\u30b3\u30de\u30f3\u30c9\u306eid\u3092\u8a55\u4fa1\u3057\u3001-1\u4ee5\u5916\u3067\u3001\u304b\u3064\u7b49\u3057\u3044\u5834\u5408\u306btrue\u3092\u8fd4\u3057\u3066\u3084\u308c\u3070\u3001\u76f4\u524d\u306e\u30b3\u30de\u30f3\u30c9\u306b\u73fe\u5728\u306e\u30b3\u30de\u30f3\u30c9\u304c\u307e\u3068\u3081\u3089\u308c\u307e\u3059\u3002\n\u4ee5\u4e0b\u306b\u3001\u9802\u70b9\u3092\u52d5\u304b\u3059MovePointCommand\u306eid\u3068mergeWith\u3092\u793a\u3057\u307e\u3059\u3002\n\nMovePointCommand.h\n#ifndef MOVEPOINTCOMMAND_H\n#define MOVEPOINTCOMMAND_H\n\n#include <QUndoCommand>\n#include <QPoint>\n\nclass MovePointCommand : public QUndoCommand\n{\n    public:\n        MovePointCommand(const QPoint &newPos, int index, QList<QPoint> *pointList, QUndoCommand *parent = 0);\n\n        QPoint m_newPosition;\n\n        // QUndoCommand interface\n    public:\n        enum { ID = 1234 };\n\n        void undo() Q_DECL_OVERRIDE;\n        void redo() Q_DECL_OVERRIDE;\n\n        int id() const Q_DECL_OVERRIDE;\n        bool mergeWith(const QUndoCommand *other) Q_DECL_OVERRIDE;\n\n    private:\n        int m_index;\n        QList<QPoint> *m_pointList;\n};\n\n#endif // MOVEPOINTCOMMAND_H\n\n\n\nMovePointCommand.cpp\n#include \"MovePointCommand.h\"\n\nMovePointCommand::MovePointCommand(const QPoint &newPos, int index, QList<QPoint> *pointList, QUndoCommand *parent):\n    QUndoCommand(parent),\n    m_newPosition(newPos),\n    m_index(index),\n    m_pointList(pointList)\n{\n\n}\n\nvoid MovePointCommand::undo()\n{\n    ...\n}\n\nvoid MovePointCommand::redo()\n{\n    ...\n}\n\nint MovePointCommand::id() const\n{\n    return ID;\n}\n\nbool MovePointCommand::mergeWith(const QUndoCommand *other)\n{\n    // \u6700\u5f8c\u306e\u30b3\u30de\u30f3\u30c9\u304cMovePointCommand\u4ee5\u5916\u306a\u3089\u30de\u30fc\u30b8\u3057\u306a\u3044\n    if (other->id() != id())\n    {\n        return false;\n    }\n\n    m_newPosition = static_cast<const MovePointCommand*>(other)->m_newPosition;\n\n    return true;\n}\n\n\n\u4e0a\u8a18\u306eMovePointCommand\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u3067\u52d5\u304b\u3057\u305f\u3044\u9802\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u3001\u65b0\u3057\u3044\u4f4d\u7f6e\u3068\u9802\u70b9\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001redo()\u3067\u6307\u5b9a\u3055\u308c\u305f\u9802\u70b9\u3092\u3001\u6307\u5b9a\u3055\u308c\u305f\u4f4d\u7f6e\u306b\u52d5\u304b\u3057\u3066\u3044\u307e\u3059\u3002\nMovePointCommand\u306fMainWindow\u306emouseMoveEvent\u304b\u3089\u547c\u3093\u3067\u3044\u307e\u3059\u3002\n\nMainWindow.cpp\nvoid MainWindow::mouseMoveEvent(QMouseEvent *e)\n{\n    MovePointCommand *movePointCommand = new MovePointCommand(e->pos(), m_targetIndex, &m_pointList);\n    m_undoStack->push(movePointCommand);\n}\n\n\n\u30de\u30a6\u30b9\u306e\u79fb\u52d5\u306b\u5408\u308f\u305b\u3066\u3001\u9023\u7d9a\u3067\u767a\u751f\u3059\u308bMovePointCommand\u304c\u4e00\u3064\u306b\u307e\u3068\u307e\u308b\u306e\u3067\u3001\u300c\u5143\u306b\u623b\u3059\u300d\u3092\u884c\u3048\u3070\u3001\u79fb\u52d5\u958b\u59cb\u76f4\u524d\u306e\u4f4d\u7f6e\u306b\u623b\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\nQUndoView\u3067\u3001QUndoStack\u306b\u7a4d\u307e\u308c\u305f\u30b3\u30de\u30f3\u30c9\u3092\u307f\u308b\n\u6700\u5f8c\u306b\u3001QUndoView\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001QListView\u6d3e\u751f\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3067\u3001QUndoStack\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u3066\u304a\u304f\u3068\u3001\u305d\u3053\u306b\u7a4d\u307e\u308c\u308b\u30b3\u30de\u30f3\u30c9\u3092\u30ea\u30b9\u30c8\u3067\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001\u30de\u30a6\u30b9\u64cd\u4f5c\u3067Undo/Redo\u3092\u884c\u304d\u6765\u3067\u304d\u3066\u4fbf\u5229\u3067\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\u7c21\u5358\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n    QUndoView *undoView = new QUndoView(m_undoStack);\n    undoView->show();\n\n\u30ea\u30b9\u30c8\u306b\u306f\u3001\u5404\u30b3\u30de\u30f3\u30c9\u306eUndo/redo\u6642\u306b\u3001setText\u3067\u8a2d\u5b9a\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u4f8b\u306b\u3088\u3063\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u3092GitHub\u306b\u3042\u3052\u3066\u304a\u304d\u307e\u3059\u3002\n\u30af\u30ea\u30c3\u30af\u3067\u70b9\u3092\u8ffd\u52a0\u3001\u30c9\u30e9\u30c3\u30b0\u3067\u70b9\u3092\u79fb\u52d5\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\nGitHub - QtUndoFrameworkSample\n\u4eca\u56de\u306f\u3001\u7121\u3044\u3068\u56f0\u308b\u3051\u3069\u3001\u81ea\u5206\u3067\u4ed5\u7d44\u307f\u3092\u4f5c\u308b\u306b\u306f\u9762\u5012\u81ed\u3044Undo/Redo\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u3082\u3063\u3068\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u3092\u6271\u3046\u5927\u898f\u6a21\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u3055\u3089\u306b\u5de5\u592b\u304c\u5fc5\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u53c2\u8003\nQt Documentation - Undo Framework Example\nQt Documentation - Overview of Qt's Undo Framework\n# \u306f\u3058\u3081\u306b\n\n\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3084\u30da\u30a4\u30f3\u30c8\u30bd\u30d5\u30c8\u3067\u3088\u304f\u3042\u308bUndo/Redo\u3092\u3001\u81ea\u524d\u3067\u5b9f\u88c5\u3059\u308b\u306e\u306f\u5927\u5909\u305d\u3046\u3067\u3059\u304c\u3001Qt\u306eUndo Framework\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u305f\u306e\u3067\u307e\u3068\u3081\u307e\u3059\u3002\n\n# \u5b9f\u88c5\u306e\u6d41\u308c\n\n\u3056\u3063\u304f\u308a\u793a\u3059\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n1. \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u64cd\u4f5c\u3092\u30b3\u30de\u30f3\u30c9\u5316\u3059\u308b\uff08QUndoCommand\uff09\n1. \u30b3\u30de\u30f3\u30c9\u3092\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u3080\uff08QUndoStack::push()\uff09\n1. \u30b9\u30bf\u30c3\u30af\u304b\u3089\u30b3\u30de\u30f3\u30c9\u3092\u53d6\u308a\u51fa\u3057\u3066\u3001Undo/Redo\u3092\u884c\u3046\n\n\u4f8b\u3048\u3070\u3001\u300c\u30ad\u30e3\u30f3\u30d0\u30b9\u306b\u9802\u70b9\u3092\u6253\u3064\u300d\u3068\u3044\u3046\u64cd\u4f5c\u306b\u3088\u3063\u3066\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u9802\u70b9\u60c5\u5831\u3092\u8ffd\u52a0\u3055\u308c\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u306e\u300c\u9802\u70b9\u60c5\u5831\u3092\u8ffd\u52a0\u3059\u308b\u300d\u3068\u3044\u3046\u306e\u3092QUndoCommand::redo()\u306b\u66f8\u304d\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u3053\u308c\u3060\u3051\u3067\u306f\u3069\u3046\u3059\u308c\u3070\u5143\u306e\u72b6\u614b\u306b\u623b\u305b\u308b\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001\u623b\u3059\u65b9\u6cd5\u3082\u66f8\u3044\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u5834\u5408\u3001\u300c\u9802\u70b9\u3092\u524a\u9664\u300d\u3059\u308b\u3053\u3068\u3067\u3001\u524d\u306e\u72b6\u614b\u306b\u623b\u305b\u308b\u306e\u3067\u3001\u3053\u308c\u3092QUndoCommand::undo()\u306b\u66f8\u304d\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u6642\u306f\u3001\u751f\u6210\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092QUndoStack\u306b\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u3042\u3052\u308b\u3060\u3051\u3067\u3059\u3002\n\n# \u5b9f\u88c5\u65b9\u6cd5\n\n\u64cd\u4f5c\u3092\u30b3\u30de\u30f3\u30c9\u5316\u3059\u308b\u3068\u304d\u306fQUndoCommand\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u5148\u306e\u4f8b\u3060\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u307e\u305a\u306f\u3001\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\n```cpp:AddPointCommand.h\n#ifndef ADDPOINTCOMMAND_H\n#define ADDPOINTCOMMAND_H\n\n#include <QUndoCommand>\n#include <QPoint>\n\nclass AddPointCommand : public QUndoCommand\n{\n\tpublic:\n\t\tAddPointCommand(const QPoint &point, QList<QPoint> *pointList, QUndoCommand *parent = 0);\n\n\t\t// QUndoCommand interface\n\tpublic:\n\t\tvoid undo() Q_DECL_OVERRIDE;\n\t\tvoid redo() Q_DECL_OVERRIDE;\n\n\tprivate:\n\t\tQPoint m_point;\n\t\tQList<QPoint> *m_pointList;\n};\n\n#endif // ADDPOINTCOMMAND_H\n```\n\n\u7d9a\u3044\u3066\u3001\u5b9f\u88c5\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\n```cpp:AddPointCommand.cpp\n\n#include \"AddPointCommand.h\"\n\nAddPointCommand::AddPointCommand(const QPoint &point, QList<QPoint> *pointList, QUndoCommand *parent):\n\tQUndoCommand(parent),\n\tm_point(point),\n\tm_pointList(pointList)\n{\n\n}\n\nvoid AddPointCommand::undo()\n{\n\tif (m_pointList->isEmpty())\n\t{\n\t\treturn;\n\t}\n\n\t// \u9802\u70b9\u30ea\u30b9\u30c8\u306e\u6700\u5f8c\u306b\u70b9\u304c\u6700\u5f8c\u306b\u8ffd\u52a0\u3057\u305f\u70b9\u306a\u306e\u3067\u3001\u305d\u308c\u3092\u53d6\u308a\u9664\u304f\n\tauto point = m_pointList->takeLast();\n\n\t// \u5b9f\u884c\u3057\u305f\u64cd\u4f5c\u306b\u8aac\u660e\u3092\u3064\u3051\u308b\n\tsetText(QString(\"Remove : (%1, %2)\").arg(point.x()).arg(point.y()));\n}\n\nvoid AddPointCommand::redo()\n{\n\t// \u9802\u70b9\u30ea\u30b9\u30c8\u306e\u6700\u5f8c\u306b\u70b9\u3092\u8ffd\u52a0\n\tm_pointList->push_back(m_point);\n\n\t// \u5b9f\u884c\u3057\u305f\u64cd\u4f5c\u306b\u8aac\u660e\u3092\u3064\u3051\u308b\n\tsetText(QString(\"Add : (%1, %2)\").arg(m_point.x()).arg(m_point.y()));\n}\n\n```\n\nAddPointCommand\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u3067\u3001\u8ffd\u52a0\u3057\u305f\u3044\u70b9\u3068\u5909\u66f4\u3092\u52a0\u3048\u305f\u3044\u9802\u70b9\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u3068\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001redo()\u306b\u9802\u70b9\u3092\u8ffd\u52a0\u3059\u308b\u51e6\u7406\u3001undo()\u306b\u9802\u70b9\u3092\u524a\u9664\u3059\u308b\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306eAddPointCommand\u306f\u3001MainWindow\u306emouseReleaseEvent\u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n```cpp:MainWindow.h\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n\n#include <QMainWindow>\n#include <QUndoStack>\n\nnamespace Ui {\n\tclass MainWindow;\n}\n\nclass MainWindow : public QMainWindow\n{\n\t\tQ_OBJECT\n\n\tpublic:\n\t\texplicit MainWindow(QWidget *parent = 0);\n\t\t~MainWindow();\n\n\t\t// QWidget interface\n\tprotected:\n\t\tvoid mouseReleaseEvent(QMouseEvent *e) Q_DECL_OVERRIDE;\n\n\tprivate:\n\t\tUi::MainWindow *ui;\n\t\tQList<QPoint> m_pointList;\n\t\tQUndoStack *m_undoStack;\n\n};\n\n#endif // MAINWINDOW_H\n```\n\n```cpp:MainWindow.cpp\n#include \"MainWindow.h\"\n#include \"ui_MainWindow.h\"\n\n#include <QMouseEvent>\n\n#include \"AddPointCommand.h\"\n\nMainWindow::MainWindow(QWidget *parent) :\n\tQMainWindow(parent),\n\tui(new Ui::MainWindow),\n\tm_undoStack(new QUndoStack)\n{\n\tui->setupUi(this);\n\n\tconnect(ui->btnUndo, &QPushButton::clicked, m_undoStack, &QUndoStack::undo);\n\tconnect(ui->btnRedo, &QPushButton::clicked, m_undoStack, &QUndoStack::redo);\n}\n\nMainWindow::~MainWindow()\n{\n\tdelete ui;\n}\n\nvoid MainWindow::mouseReleaseEvent(QMouseEvent *e)\n{\n\tAddPointCommand *addPointCommand = new AddPointCommand(e->pos(), &m_pointList);\n\tm_undoStack->push(addPointCommand);\n}\n```\n\nQUndoStack\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9m_undoStack\u3092\u751f\u6210\u3057\u3001push()\u3092\u4f7f\u3063\u3066\u3001addPointCommand\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u3066\u3044\u307e\u3059\u3002\n\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u3068\u3001\u81ea\u52d5\u7684\u306baddPointCommand\u306eredo()\u304c\u547c\u3070\u308c\u3066\u3001\u9802\u70b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\u300c\u5143\u306b\u623b\u3059\u300d\u3068\u300c\u3084\u308a\u76f4\u3057\u300d\u306f\u3001QUndoStack\u306eundo()\u3001redo()\u3067\u884c\u3048\u307e\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001QPushButton\u306eclicked\u30b7\u30b0\u30ca\u30eb\u3068\u63a5\u7d9a\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u540c\u3058\u30b3\u30de\u30f3\u30c9\u3092\u307e\u3068\u3081\u308bmergeWith\n\n\u4e0a\u8a18\u306e\u4f8b\u3068\u540c\u3058\u30ce\u30ea\u3067\u3001\u300c\u9802\u70b9\u3092\u52d5\u304b\u3059\u300d\u3068\u3044\u3046\u64cd\u4f5c\u3092\u30b3\u30de\u30f3\u30c9\u5316\u3059\u308b\u3068\u3001\u5c11\u3057\u9762\u5012\u306a\u3053\u3068\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001MovePointCommand\u3092\u4f5c\u308a\u3001\u3042\u308b\u70b9\u3092(0, 0)\u304b\u3089(0, 300)\u307e\u3067\u52d5\u304b\u3059\u3068\u3001\u6570\u30d4\u30af\u30bb\u30eb\u52d5\u304f\u305f\u3073\u306bMovePointCommand\u304c\u7a4d\u307e\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u306e\u72b6\u614b\u3067\u64cd\u4f5c\u3092\u623b\u305d\u3046\u3068\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u306f\u4f55\u56de\u3082\u300c\u5143\u306b\u623b\u3059\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u540c\u3058\u30b3\u30de\u30f3\u30c9\u304c\u7d9a\u304f\u6642\u306f\u3001mergeWith\u3092\u4f7f\u3063\u3066\u30b3\u30de\u30f3\u30c9\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\u304c\u540c\u3058\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\u306b\u306fid()\u3092\u4f7f\u3046\u306e\u3067\u3001\u4ed6\u306e\u30b3\u30de\u30f3\u30c9\u3068\u304b\u3076\u3089\u306a\u3044\u3088\u3046\u306a\u6574\u6570\u3092\u8fd4\u3059\u3088\u3046\u306b\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nmergeWith\u306e\u4e2d\u3067\u3001\u76f4\u524d\u306e\u30b3\u30de\u30f3\u30c9\u3068\u73fe\u5728\u306e\u30b3\u30de\u30f3\u30c9\u306eid\u3092\u8a55\u4fa1\u3057\u3001-1\u4ee5\u5916\u3067\u3001\u304b\u3064\u7b49\u3057\u3044\u5834\u5408\u306btrue\u3092\u8fd4\u3057\u3066\u3084\u308c\u3070\u3001\u76f4\u524d\u306e\u30b3\u30de\u30f3\u30c9\u306b\u73fe\u5728\u306e\u30b3\u30de\u30f3\u30c9\u304c\u307e\u3068\u3081\u3089\u308c\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306b\u3001\u9802\u70b9\u3092\u52d5\u304b\u3059MovePointCommand\u306eid\u3068mergeWith\u3092\u793a\u3057\u307e\u3059\u3002\n\n```cpp:MovePointCommand.h\n#ifndef MOVEPOINTCOMMAND_H\n#define MOVEPOINTCOMMAND_H\n\n#include <QUndoCommand>\n#include <QPoint>\n\nclass MovePointCommand : public QUndoCommand\n{\n\tpublic:\n\t\tMovePointCommand(const QPoint &newPos, int index, QList<QPoint> *pointList, QUndoCommand *parent = 0);\n\n\t\tQPoint m_newPosition;\n\n\t\t// QUndoCommand interface\n\tpublic:\n\t\tenum { ID = 1234 };\n\n\t\tvoid undo() Q_DECL_OVERRIDE;\n\t\tvoid redo() Q_DECL_OVERRIDE;\n\n\t\tint id() const Q_DECL_OVERRIDE;\n\t\tbool mergeWith(const QUndoCommand *other) Q_DECL_OVERRIDE;\n\n\tprivate:\n\t\tint m_index;\n\t\tQList<QPoint> *m_pointList;\n};\n\n#endif // MOVEPOINTCOMMAND_H\n```\n\n\n```cpp:MovePointCommand.cpp\n#include \"MovePointCommand.h\"\n\nMovePointCommand::MovePointCommand(const QPoint &newPos, int index, QList<QPoint> *pointList, QUndoCommand *parent):\n\tQUndoCommand(parent),\n\tm_newPosition(newPos),\n\tm_index(index),\n\tm_pointList(pointList)\n{\n\n}\n\nvoid MovePointCommand::undo()\n{\n\t...\n}\n\nvoid MovePointCommand::redo()\n{\n\t...\n}\n\nint MovePointCommand::id() const\n{\n\treturn ID;\n}\n\nbool MovePointCommand::mergeWith(const QUndoCommand *other)\n{\n\t// \u6700\u5f8c\u306e\u30b3\u30de\u30f3\u30c9\u304cMovePointCommand\u4ee5\u5916\u306a\u3089\u30de\u30fc\u30b8\u3057\u306a\u3044\n\tif (other->id() != id())\n\t{\n\t\treturn false;\n\t}\n\n\tm_newPosition = static_cast<const MovePointCommand*>(other)->m_newPosition;\n\n\treturn true;\n}\n```\n\n\u4e0a\u8a18\u306eMovePointCommand\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u3067\u52d5\u304b\u3057\u305f\u3044\u9802\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u3001\u65b0\u3057\u3044\u4f4d\u7f6e\u3068\u9802\u70b9\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001redo()\u3067\u6307\u5b9a\u3055\u308c\u305f\u9802\u70b9\u3092\u3001\u6307\u5b9a\u3055\u308c\u305f\u4f4d\u7f6e\u306b\u52d5\u304b\u3057\u3066\u3044\u307e\u3059\u3002\n\nMovePointCommand\u306fMainWindow\u306emouseMoveEvent\u304b\u3089\u547c\u3093\u3067\u3044\u307e\u3059\u3002\n\n```cpp:MainWindow.cpp\nvoid MainWindow::mouseMoveEvent(QMouseEvent *e)\n{\n\tMovePointCommand *movePointCommand = new MovePointCommand(e->pos(), m_targetIndex, &m_pointList);\n\tm_undoStack->push(movePointCommand);\n}\n```\n\n\u30de\u30a6\u30b9\u306e\u79fb\u52d5\u306b\u5408\u308f\u305b\u3066\u3001\u9023\u7d9a\u3067\u767a\u751f\u3059\u308bMovePointCommand\u304c\u4e00\u3064\u306b\u307e\u3068\u307e\u308b\u306e\u3067\u3001\u300c\u5143\u306b\u623b\u3059\u300d\u3092\u884c\u3048\u3070\u3001\u79fb\u52d5\u958b\u59cb\u76f4\u524d\u306e\u4f4d\u7f6e\u306b\u623b\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n# QUndoView\u3067\u3001QUndoStack\u306b\u7a4d\u307e\u308c\u305f\u30b3\u30de\u30f3\u30c9\u3092\u307f\u308b\n\n\u6700\u5f8c\u306b\u3001QUndoView\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u3001QListView\u6d3e\u751f\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3067\u3001QUndoStack\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u3066\u304a\u304f\u3068\u3001\u305d\u3053\u306b\u7a4d\u307e\u308c\u308b\u30b3\u30de\u30f3\u30c9\u3092\u30ea\u30b9\u30c8\u3067\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001\u30de\u30a6\u30b9\u64cd\u4f5c\u3067Undo/Redo\u3092\u884c\u304d\u6765\u3067\u304d\u3066\u4fbf\u5229\u3067\u3059\u3002\n\n\u4f7f\u3044\u65b9\u306f\u7c21\u5358\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n```cpp\n\tQUndoView *undoView = new QUndoView(m_undoStack);\n\tundoView->show();\n```\n\n\u30ea\u30b9\u30c8\u306b\u306f\u3001\u5404\u30b3\u30de\u30f3\u30c9\u306eUndo/redo\u6642\u306b\u3001setText\u3067\u8a2d\u5b9a\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u4f8b\u306b\u3088\u3063\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u3092GitHub\u306b\u3042\u3052\u3066\u304a\u304d\u307e\u3059\u3002\n\u30af\u30ea\u30c3\u30af\u3067\u70b9\u3092\u8ffd\u52a0\u3001\u30c9\u30e9\u30c3\u30b0\u3067\u70b9\u3092\u79fb\u52d5\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\n\n[GitHub - QtUndoFrameworkSample](https://github.com/tatsuteb/QtUndoFrameworkSample)\n\n\u4eca\u56de\u306f\u3001\u7121\u3044\u3068\u56f0\u308b\u3051\u3069\u3001\u81ea\u5206\u3067\u4ed5\u7d44\u307f\u3092\u4f5c\u308b\u306b\u306f\u9762\u5012\u81ed\u3044Undo/Redo\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u3082\u3063\u3068\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u3092\u6271\u3046\u5927\u898f\u6a21\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u3055\u3089\u306b\u5de5\u592b\u304c\u5fc5\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n# \u53c2\u8003\n\n[Qt Documentation - Undo Framework Example](http://doc.qt.io/qt-5/qtwidgets-tools-undoframework-example.html)\n[Qt Documentation - Overview of Qt's Undo Framework](http://doc.qt.io/qt-5/qundo.html)\n", "tags": ["Qt", "qt5"]}