{"context": "\u82e5\u5e72\u306e\u91e3\u308a\u6c17\u5473\u3067\u3059\u304c\u3001RxJava\u3092\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u65b9\u306b\u306f\u7d50\u69cb\u91cd\u8981\u305d\u3046\u3060\u3088\u306a\u2212\u3068\u601d\u3046\u8a71\u984c\u3060\u3063\u305f\u306e\u3067Qiita\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u3053\u3068\u306e\u306f\u3058\u307e\u308a\n\nCheck out the new fromAsync() operator for adapting callback-based sources into Observables. Stop using create()! https://t.co/3SvYMmgeWx\u2014 Jake Wharton (@JakeWharton) 2016\u5e747\u670810\u65e5\n\n\u306a\u3093\u3060\u304bJake\u304c\u904e\u6fc0\u306a\u3053\u3068\u8a00\u3063\u3066\u308b\u6c17\u914d\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u80cc\u666f\u3092\u8abf\u3079\u308b\u305f\u3081\u306b\u5c11\u3057issue\u3092\u6f01\u308a\u59cb\u3081\u307e\u3057\u305f\u3002\n\u304d\u3063\u304b\u3051\u306eissue\nhttps://github.com/ReactiveX/RxJava/issues/4177\n\u3059\u3054\u304f\u96d1\u306b3\u884c\u3067\u307e\u3068\u3081\u308b\u3068\u3001\n\n\u975eRx\u306e\u4e16\u754c\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u30e9\u30c3\u30d7\u3059\u308b\u306e\u306bObservable#create\u4f7f\u3046\u3088\u306d\n\u3067\u3082back-puressure\u307e\u3067\u3061\u3083\u3093\u3068\u8003\u616e\u3057\u3066\u5b9f\u88c5\u3059\u308b\u306e\u30af\u30bd\u96e3\u3057\u3044\u3088\u306d(\u50d5\u3082\u591a\u304f\u306e\u5931\u6557\u304b\u3089\u5b66\u3093\u3067\u3084\u3063\u3068\u6b63\u3057\u3044\u5b9f\u88c5\u3092\u3084\u3063\u3068\u7406\u89e3\u3057\u305f\u3088)\n\u307f\u3093\u306a\u3082\u9593\u9055\u3063\u305f\u5b9f\u88c5\u3057\u304c\u3061\u3060\u304b\u3089\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u30e9\u30c3\u30d7\u3057\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3042\u3063\u305f\u307b\u3046\u304c\u3088\u304f\u306a\u3044\u304b\u306a\uff1f\n\n\u3068\u3044\u3046\u63d0\u6848\u3067\u3059\u3002\u3082\u3046\u5c11\u3057\u3060\u3051\u6587\u8108\u3092\u88dc\u8db3\u3059\u308b\u3068\u3001\u524d\u63d0\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u306fn\u500b\u306eitem\u3092emit\u3059\u308b\u3088\u3046\u306aObservable\u306b\u3064\u3044\u3066\u3067\u3059\u3002Http\u901a\u4fe1\u306e\u3084\u308a\u53d6\u308a\u306a\u3069rx.Single\u3067\u4e8b\u8db3\u308a\u308b\u5834\u5408\u306f\u4eca\u56de\u306e\u8b70\u8ad6\u306e\u5bfe\u8c61\u3067\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u3069\u3046\u306a\u3063\u305f\u306e\uff1f\n2016/07/12\u5730\u70b9\u3067\u6700\u65b0\u306ever 1.1.7\u306b\u304a\u3044\u3066\u3001Observablue#fromAsync\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fObservable#create\u3092\u4f7f\u3046\u5834\u5408\u3068\u307b\u3068\u3093\u3069\u4e00\u7dd2\u3067\u3059\u304c\u3001\u7b2c\u4e8c\u5f15\u6570\u306bBackpressureMode\u3068\u3044\u3046\u3082\u306e\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u3066\u3001item\u3092\u8caf\u3081\u3066\u304a\u304d\u305f\u3044\u306e\u304b\u3001\u6700\u65b0\u3060\u3051\u4fdd\u6301\u3057\u305f\u3044\u306e\u304b\u306a\u3069\u6c7a\u3081\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u69d8\u3005\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001BUFFER\u3068LATEST\u8fba\u308a\u304c\u3088\u304f\u4f7f\u308f\u308c\u305d\u3046\u3067\u3059\u306d\u3002\n        Observable.fromAsync(new Action1<AsyncEmitter<Item>>() {\n            @Override\n            public void call(final AsyncEmitter<Item> emitter) {\n                XyzClient.enqueue(new Callback<List<Item>>() {\n                    @Override\n                    public void onResponse(Response<Item> response) {\n                        emitter.onNext(response.body);\n                    }\n                    @Override\n                    public void onFailure(Call<List<Item>> call, Throwable t) {\n                        emitter.onError(t);\n                    }\n                });\n\n            }\n        }, AsyncEmitter.BackpressureMode.BUFFER);\n\n\u79c1\u306f\u666e\u6bb5Promise\u7684\u306a\u4f7f\u3044\u65b9\u3057\u304b\u307b\u3068\u3093\u3069\u5229\u7528\u3057\u306a\u3044\u306e\u3067\u3001\u306a\u308b\u307b\u3069\u3068\u3044\u3046\u6c17\u6301\u3061\u3082\u3042\u308a\u3064\u3064\u3001\u3042\u307e\u308a\u30d4\u30f3\u3068\u304d\u3066\u3044\u307e\u305b\u3093\u3002\u305f\u3060\u4eca\u5f8cObservable#create\u3092\u6562\u3048\u3066\u5229\u7528\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u3082\u7279\u306b\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001Observablue#fromAsync\u3067\u66f8\u3044\u3066\u3044\u3053\u3046\u3068\u3044\u3046\u6c17\u6301\u3061\u3067\u3059\u3002 \u6b63\u76f4\u308f\u304b\u3063\u3066\u306a\u3044\u90e8\u5206\u3082\u3042\u308b\u306e\u3067\u3001\u3088\u308a\u8a73\u3057\u3044\u4eba\u304c\u8a73\u7d30\u306b\u89e3\u8aac\u3057\u3066\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff01 \u304a\u5f85\u3061\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u82e5\u5e72\u306e\u91e3\u308a\u6c17\u5473\u3067\u3059\u304c\u3001RxJava\u3092\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u65b9\u306b\u306f\u7d50\u69cb\u91cd\u8981\u305d\u3046\u3060\u3088\u306a\u2212\u3068\u601d\u3046\u8a71\u984c\u3060\u3063\u305f\u306e\u3067Qiita\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n### \u3053\u3068\u306e\u306f\u3058\u307e\u308a\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"en\" dir=\"ltr\">Check out the new fromAsync() operator for adapting callback-based sources into Observables. Stop using create()! <a href=\"https://t.co/3SvYMmgeWx\">https://t.co/3SvYMmgeWx</a></p>&mdash; Jake Wharton (@JakeWharton) <a href=\"https://twitter.com/JakeWharton/status/752162360916258816\">2016\u5e747\u670810\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\u306a\u3093\u3060\u304bJake\u304c\u904e\u6fc0\u306a\u3053\u3068\u8a00\u3063\u3066\u308b\u6c17\u914d\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u80cc\u666f\u3092\u8abf\u3079\u308b\u305f\u3081\u306b\u5c11\u3057issue\u3092\u6f01\u308a\u59cb\u3081\u307e\u3057\u305f\u3002\n\n\u304d\u3063\u304b\u3051\u306eissue\nhttps://github.com/ReactiveX/RxJava/issues/4177\n\n\u3059\u3054\u304f\u96d1\u306b3\u884c\u3067\u307e\u3068\u3081\u308b\u3068\u3001\n\n* \u975eRx\u306e\u4e16\u754c\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u30e9\u30c3\u30d7\u3059\u308b\u306e\u306b`Observable#create`\u4f7f\u3046\u3088\u306d\n* \u3067\u3082back-puressure\u307e\u3067\u3061\u3083\u3093\u3068\u8003\u616e\u3057\u3066\u5b9f\u88c5\u3059\u308b\u306e\u30af\u30bd\u96e3\u3057\u3044\u3088\u306d(\u50d5\u3082\u591a\u304f\u306e\u5931\u6557\u304b\u3089\u5b66\u3093\u3067\u3084\u3063\u3068\u6b63\u3057\u3044\u5b9f\u88c5\u3092\u3084\u3063\u3068\u7406\u89e3\u3057\u305f\u3088)\n* \u307f\u3093\u306a\u3082\u9593\u9055\u3063\u305f\u5b9f\u88c5\u3057\u304c\u3061\u3060\u304b\u3089\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u30e9\u30c3\u30d7\u3057\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3042\u3063\u305f\u307b\u3046\u304c\u3088\u304f\u306a\u3044\u304b\u306a\uff1f\n\n\u3068\u3044\u3046\u63d0\u6848\u3067\u3059\u3002\u3082\u3046\u5c11\u3057\u3060\u3051\u6587\u8108\u3092\u88dc\u8db3\u3059\u308b\u3068\u3001\u524d\u63d0\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u306fn\u500b\u306eitem\u3092emit\u3059\u308b\u3088\u3046\u306aObservable\u306b\u3064\u3044\u3066\u3067\u3059\u3002Http\u901a\u4fe1\u306e\u3084\u308a\u53d6\u308a\u306a\u3069rx.Single\u3067\u4e8b\u8db3\u308a\u308b\u5834\u5408\u306f\u4eca\u56de\u306e\u8b70\u8ad6\u306e\u5bfe\u8c61\u3067\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\n### \u3069\u3046\u306a\u3063\u305f\u306e\uff1f\n\n2016/07/12\u5730\u70b9\u3067\u6700\u65b0\u306ever 1.1.7\u306b\u304a\u3044\u3066\u3001[`Observablue#fromAsync`](https://github.com/ReactiveX/RxJava/pull/4179)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f`Observable#create`\u3092\u4f7f\u3046\u5834\u5408\u3068\u307b\u3068\u3093\u3069\u4e00\u7dd2\u3067\u3059\u304c\u3001\u7b2c\u4e8c\u5f15\u6570\u306bBackpressureMode\u3068\u3044\u3046\u3082\u306e\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u3066\u3001item\u3092\u8caf\u3081\u3066\u304a\u304d\u305f\u3044\u306e\u304b\u3001\u6700\u65b0\u3060\u3051\u4fdd\u6301\u3057\u305f\u3044\u306e\u304b\u306a\u3069\u6c7a\u3081\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u69d8\u3005\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001BUFFER\u3068LATEST\u8fba\u308a\u304c\u3088\u304f\u4f7f\u308f\u308c\u305d\u3046\u3067\u3059\u306d\u3002\n\n```java\n        Observable.fromAsync(new Action1<AsyncEmitter<Item>>() {\n            @Override\n            public void call(final AsyncEmitter<Item> emitter) {\n                XyzClient.enqueue(new Callback<List<Item>>() {\n                    @Override\n                    public void onResponse(Response<Item> response) {\n                        emitter.onNext(response.body);\n                    }\n                    @Override\n                    public void onFailure(Call<List<Item>> call, Throwable t) {\n                        emitter.onError(t);\n                    }\n                });\n\n            }\n        }, AsyncEmitter.BackpressureMode.BUFFER);\n```        \n\n\u79c1\u306f\u666e\u6bb5Promise\u7684\u306a\u4f7f\u3044\u65b9\u3057\u304b\u307b\u3068\u3093\u3069\u5229\u7528\u3057\u306a\u3044\u306e\u3067\u3001\u306a\u308b\u307b\u3069\u3068\u3044\u3046\u6c17\u6301\u3061\u3082\u3042\u308a\u3064\u3064\u3001\u3042\u307e\u308a\u30d4\u30f3\u3068\u304d\u3066\u3044\u307e\u305b\u3093\u3002\u305f\u3060\u4eca\u5f8c`Observable#create`\u3092\u6562\u3048\u3066\u5229\u7528\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u3082\u7279\u306b\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001`Observablue#fromAsync`\u3067\u66f8\u3044\u3066\u3044\u3053\u3046\u3068\u3044\u3046\u6c17\u6301\u3061\u3067\u3059\u3002 \u6b63\u76f4\u308f\u304b\u3063\u3066\u306a\u3044\u90e8\u5206\u3082\u3042\u308b\u306e\u3067\u3001\u3088\u308a\u8a73\u3057\u3044\u4eba\u304c\u8a73\u7d30\u306b\u89e3\u8aac\u3057\u3066\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff01 \u304a\u5f85\u3061\u3057\u3066\u3044\u307e\u3059\u3002\n", "tags": ["Android", "RxJava"]}