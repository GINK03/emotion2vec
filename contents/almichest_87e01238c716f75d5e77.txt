{"context": "\u3053\u306e\u8a18\u4e8b\u306f iOS\u305d\u306e2 Advent Calendar 2016 \u7b2c17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30a8\u30f3\u30b8\u30cb\u30a2\u306a\u306e\u306b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3053\u3068\u5168\u304f\u308f\u304b\u3089\u306a\u3044\u306e\u306f\u3061\u3087\u3063\u3068\u3069\u3046\u304b\u3068\u601d\u3044\u3001\nSwift\u306e\u7df4\u7fd2\u304c\u3066\u3089\u87fb\u672c\u306e\u554f\u984c\u3092\u89e3\u3044\u3066\u3044\u308b\u3002\niOS\u3068\u3044\u3046\u3088\u308a\u306f\u5b8c\u5168\u306bSwift\u306e\u8a71\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u304c\u3001\u307e\u3041\u3044\u3044\u3084\u2026\u3002\n\n\u7b46\u8005\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3084\u8a08\u7b97\u6a5f\u79d1\u5b66\u3092\u3057\u3063\u304b\u308a\u5b66\u3093\u3060\u3053\u3068\u306f\u7121\u3044\u3002\n\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u3053\u308d\u3067\u306f\u3001AtCoder Beginner Contest\u306eC\u554f\u984c\u304c\u89e3\u3051\u305f\u308a\u89e3\u3051\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u304f\u3089\u3044\u3002\n\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\n\u4e0a\u8a18\u306e\u901a\u308a\u3001\u87fb\u672c\u306e\u5185\u5bb9\u3092Swift\u3067\u5b9f\u88c5\u3057\u306a\u304c\u3089\u8aad\u307f\u9032\u3081\u3066\u3044\u308b\u3002\n\u87fb\u672c\u81ea\u4f53\u306e\u30b5\u30f3\u30d7\u30eb\u306fC\u3084C++\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3002\n\u30ec\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3053\u3002\nhttps://github.com/almichest/Ari\n\n\u9032\u3081\u65b9\n\u87fb\u672c\u306e\u30da\u30fc\u30b8\u6570\u306b\u5bfe\u5fdc\u3057\u305f\u540d\u524d\u306eclass\u3092\u4f5c\u308a\u5b9f\u88c5\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u3057\u305f\u3089\u3084\u306f\u308a\u87fb\u672c\u306e\u30da\u30fc\u30b8\u6570\u306b\u5bfe\u5fdc\u3057\u305f\u5185\u5bb9\u3067\u30b3\u30df\u30c3\u30c8\u3002\n\u3042\u3068\u3067\u78ba\u8a8d\u3059\u308b\u3068\u304d\u306b\u308f\u304b\u308a\u3084\u3059\u304f\u3066\u826f\u3044\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u3057\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u307e\u3067\u30d3\u30eb\u30c9\u5bfe\u8c61\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u306f\u9b31\u9676\u3057\u3044\u304c\u3001\u5927\u3057\u305f\u6642\u9593\u304c\u304b\u304b\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3002\n\nlower_bound\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u8a71\n\u8aad\u307f\u9032\u3081\u3066\u3044\u304f\u4e2d\u3067\u3001STL\u306elower_bound \u304c\u4f7f\u308f\u308c\u3066\u3044\u305f\u3002\n(Swift\u3067\u306fSTL\u7121\u3044\u3057\u3069\u3046\u3057\u305f\u3082\u3093\u304b\u306a\u30fc\u3002c++\u3092objc\u3067\u30e9\u30c3\u30d7\u3057\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3082\u4f5c\u308b\u304b\u306a\u301c)\n\u3068\u304b\u8003\u3048\u305f\u306e\u3060\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001\u3068Swift\u306eGenerics\u3092\u6d3b\u304b\u3057\u305flower_bound\u7684\u306aextension\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u30d0\u30a4\u30ca\u30ea\u30b5\u30fc\u30c1\u3082\u5b9f\u88c5\u3057\u3066\u3042\u308b\u3002\n\nArrayExtension.swift\n\nimport Foundation\n\nenum ArrayExtensionError: Error {\n    case generics\n    case invalidTarget\n}\n\nprotocol Target: Equatable, Comparable {\n}\n\nextension Int: Target {}\nextension Float: Target {}\nextension Double: Target {}\nextension UInt64: Target {}\n\nextension Array where Element: Target {\n\n    /* value <= array[x] \u3068\u306a\u308b \u6700\u5c0f\u306ex\u3092\u8fd4\u3059 */\n    func lowerBound<T: Target>(_ value: T) throws -> Int {\n        guard value is Array.Iterator.Element else { throw ArrayExtensionError.generics }\n        guard let last = self.last , value <= last as! T else { throw ArrayExtensionError.invalidTarget }\n\n        let index = try! binarySearch(value)\n\n        if self.count <= index {\n            throw ArrayExtensionError.invalidTarget\n        }\n\n        let found = self[index] as! T\n\n        if value <= found {\n            return index\n        }\n\n        if found <= value && index < self.count - 1 {\n            return index + 1\n        }\n\n        throw ArrayExtensionError.invalidTarget\n    }\n\n    func binarySearch<T: Target>(_ value: T) throws -> Int {\n        guard value is Array.Iterator.Element else { throw ArrayExtensionError.generics }\n        var lo = 0\n        var hi = self.count - 1\n        while lo < hi {\n            let mid = lo + (hi - lo) / 2\n            if (self[mid] as! T) < value {\n                lo = mid + 1\n            } else {\n                hi = mid\n            }\n        }\n        return lo\n    }\n}\n\n\nEquatable\u3068Comparable\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u306eArray\u306a\u3089\u306a\u3093\u3067\u3082\u4f7f\u3048\u308b\u3002\n\u591a\u5206\u3061\u3083\u3093\u3068\u52d5\u3044\u3066\u3044\u308b\u3068\u601d\u3046\u3002\u52d5\u304b\u306a\u3044\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3084\u3063\u3066\u307f\u3066\u601d\u3063\u305f\u3053\u3068\n\n\u8584\u3005\u611f\u3065\u3044\u3066\u306f\u3044\u305f\u304c\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u30bb\u30f3\u30b9\u304c\u306a\u3044\u3002\u521d\u7d1a\u306e\u6642\u70b9\u3067\u3060\u3044\u3076\u3064\u3089\u3044\u3002\n\u3068\u306f\u8a00\u3048\u3001\u5358\u7d14\u306b\u540c\u3058\u8a00\u8a9e\u3067\u5199\u7d4c\u3059\u308b\u3088\u308a\u306f\u8003\u3048\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001\u8eab\u306b\u306a\u308b\u3053\u3068\u306f\u3042\u308b\u3002\u3068\u601d\u3046\u3002\n\u554f\u984c\u3092\u89e3\u304f\u3068\u304d\u306b\u5e45\u512a\u5148\u304b\u306a\uff5e\u6df1\u3055\u512a\u5148\u304b\u306a\u301cdp\u306b\u3059\u308b\u3068\u3057\u305f\u3089\u306a\u306b\u3067\u6f38\u5316\u5f0f\u7acb\u3066\u308b\u304b\u306a\u301c\u3001\u7a0b\u5ea6\u306e\u3053\u3068\u306f\u8003\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u304d\u3063\u3068\u7121\u99c4\u3067\u306f\u306a\u3044\u3002\n\u65b0\u3057\u3044\u8a00\u8a9e\u3092\u52c9\u5f37\u3059\u308b\u3068\u304d\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30cd\u30bf\u306b\u3059\u308b\u306e\u306f\u5272\u3068\u826f\u3044\u6c17\u304c\u3057\u3066\u304d\u305f\u3002\n\u6a19\u6e96\u5165\u51fa\u529b\u3001Array\u3001HashMap\u306a\u3069\u306e\u57fa\u672c\u7684\u306a\u8981\u7d20\u306f\u7db2\u7f85\u3067\u304d\u308b\u3057\u3002\n\n\n\u7d42\u308f\u308a\u306b\n\u3068\u308a\u3042\u3048\u305a\u6642\u9593\u3092\u304b\u3051\u3066\u3082\u3044\u3044\u304b\u3089ARC\u306e\u554f\u984c\u3092\u89e3\u3051\u308b\u304f\u3089\u3044\u306b\u306f\u306a\u308a\u305f\u3044\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [iOS\u305d\u306e2 Advent Calendar 2016](http://qiita.com/advent-calendar/2016/ios2) \u7b2c17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30a8\u30f3\u30b8\u30cb\u30a2\u306a\u306e\u306b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3053\u3068\u5168\u304f\u308f\u304b\u3089\u306a\u3044\u306e\u306f\u3061\u3087\u3063\u3068\u3069\u3046\u304b\u3068\u601d\u3044\u3001\nSwift\u306e\u7df4\u7fd2\u304c\u3066\u3089[\u87fb\u672c](https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%B3%E3%83%B3%E3%83%86%E3%82%B9%E3%83%88%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%96%E3%83%83%E3%82%AF-%E7%AC%AC2%E7%89%88-%EF%BD%9E%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA%E3%81%AE%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E6%B4%BB%E7%94%A8%E5%8A%9B%E3%81%A8%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF%E3%82%92%E9%8D%9B%E3%81%88%E3%82%8B%EF%BD%9E-%E7%A7%8B%E8%91%89-%E6%8B%93%E5%93%89-ebook/dp/B00CY9256C)\u306e\u554f\u984c\u3092\u89e3\u3044\u3066\u3044\u308b\u3002\n\niOS\u3068\u3044\u3046\u3088\u308a\u306f\u5b8c\u5168\u306bSwift\u306e\u8a71\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u304c\u3001\u307e\u3041\u3044\u3044\u3084\u2026\u3002\n\n# \u7b46\u8005\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3084\u8a08\u7b97\u6a5f\u79d1\u5b66\u3092\u3057\u3063\u304b\u308a\u5b66\u3093\u3060\u3053\u3068\u306f\u7121\u3044\u3002\n\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u3053\u308d\u3067\u306f\u3001AtCoder Beginner Contest\u306eC\u554f\u984c\u304c\u89e3\u3051\u305f\u308a\u89e3\u3051\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u304f\u3089\u3044\u3002\n\n# \u3084\u3063\u3066\u3044\u308b\u3053\u3068\n\u4e0a\u8a18\u306e\u901a\u308a\u3001[\u87fb\u672c](https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%B3%E3%83%B3%E3%83%86%E3%82%B9%E3%83%88%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%96%E3%83%83%E3%82%AF-%E7%AC%AC2%E7%89%88-%EF%BD%9E%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA%E3%81%AE%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E6%B4%BB%E7%94%A8%E5%8A%9B%E3%81%A8%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF%E3%82%92%E9%8D%9B%E3%81%88%E3%82%8B%EF%BD%9E-%E7%A7%8B%E8%91%89-%E6%8B%93%E5%93%89-ebook/dp/B00CY9256C)\u306e\u5185\u5bb9\u3092Swift\u3067\u5b9f\u88c5\u3057\u306a\u304c\u3089\u8aad\u307f\u9032\u3081\u3066\u3044\u308b\u3002\n\u87fb\u672c\u81ea\u4f53\u306e\u30b5\u30f3\u30d7\u30eb\u306fC\u3084C++\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u30ec\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3053\u3002\nhttps://github.com/almichest/Ari\n\n# \u9032\u3081\u65b9\n\u87fb\u672c\u306e\u30da\u30fc\u30b8\u6570\u306b\u5bfe\u5fdc\u3057\u305f\u540d\u524d\u306eclass\u3092\u4f5c\u308a\u5b9f\u88c5\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u3057\u305f\u3089\u3084\u306f\u308a\u87fb\u672c\u306e\u30da\u30fc\u30b8\u6570\u306b\u5bfe\u5fdc\u3057\u305f\u5185\u5bb9\u3067\u30b3\u30df\u30c3\u30c8\u3002\n\u3042\u3068\u3067\u78ba\u8a8d\u3059\u308b\u3068\u304d\u306b\u308f\u304b\u308a\u3084\u3059\u304f\u3066\u826f\u3044\u3002\n\n\u52d5\u4f5c\u78ba\u8a8d\u3057\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u307e\u3067\u30d3\u30eb\u30c9\u5bfe\u8c61\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u306f\u9b31\u9676\u3057\u3044\u304c\u3001\u5927\u3057\u305f\u6642\u9593\u304c\u304b\u304b\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3002\n\n# lower_bound\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u8a71\n\u8aad\u307f\u9032\u3081\u3066\u3044\u304f\u4e2d\u3067\u3001STL\u306e`lower_bound` \u304c\u4f7f\u308f\u308c\u3066\u3044\u305f\u3002\n(Swift\u3067\u306fSTL\u7121\u3044\u3057\u3069\u3046\u3057\u305f\u3082\u3093\u304b\u306a\u30fc\u3002c++\u3092objc\u3067\u30e9\u30c3\u30d7\u3057\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3082\u4f5c\u308b\u304b\u306a\u301c)\n\u3068\u304b\u8003\u3048\u305f\u306e\u3060\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001\u3068Swift\u306eGenerics\u3092\u6d3b\u304b\u3057\u305flower_bound\u7684\u306aextension\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u30d0\u30a4\u30ca\u30ea\u30b5\u30fc\u30c1\u3082\u5b9f\u88c5\u3057\u3066\u3042\u308b\u3002\n\n```ArrayExtension.swift\n\nimport Foundation\n\nenum ArrayExtensionError: Error {\n    case generics\n    case invalidTarget\n}\n\nprotocol Target: Equatable, Comparable {\n}\n\nextension Int: Target {}\nextension Float: Target {}\nextension Double: Target {}\nextension UInt64: Target {}\n\nextension Array where Element: Target {\n\n    /* value <= array[x] \u3068\u306a\u308b \u6700\u5c0f\u306ex\u3092\u8fd4\u3059 */\n    func lowerBound<T: Target>(_ value: T) throws -> Int {\n        guard value is Array.Iterator.Element else { throw ArrayExtensionError.generics }\n        guard let last = self.last , value <= last as! T else { throw ArrayExtensionError.invalidTarget }\n\n        let index = try! binarySearch(value)\n\n        if self.count <= index {\n            throw ArrayExtensionError.invalidTarget\n        }\n\n        let found = self[index] as! T\n\n        if value <= found {\n            return index\n        }\n\n        if found <= value && index < self.count - 1 {\n            return index + 1\n        }\n\n        throw ArrayExtensionError.invalidTarget\n    }\n\n    func binarySearch<T: Target>(_ value: T) throws -> Int {\n        guard value is Array.Iterator.Element else { throw ArrayExtensionError.generics }\n        var lo = 0\n        var hi = self.count - 1\n        while lo < hi {\n            let mid = lo + (hi - lo) / 2\n            if (self[mid] as! T) < value {\n                lo = mid + 1\n            } else {\n                hi = mid\n            }\n        }\n        return lo\n    }\n}\n```\n\n`Equatable`\u3068`Comparable`\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u306eArray\u306a\u3089\u306a\u3093\u3067\u3082\u4f7f\u3048\u308b\u3002\n\u591a\u5206\u3061\u3083\u3093\u3068\u52d5\u3044\u3066\u3044\u308b\u3068\u601d\u3046\u3002\u52d5\u304b\u306a\u3044\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u3084\u3063\u3066\u307f\u3066\u601d\u3063\u305f\u3053\u3068\n* \u8584\u3005\u611f\u3065\u3044\u3066\u306f\u3044\u305f\u304c\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u30bb\u30f3\u30b9\u304c\u306a\u3044\u3002\u521d\u7d1a\u306e\u6642\u70b9\u3067\u3060\u3044\u3076\u3064\u3089\u3044\u3002\n* \u3068\u306f\u8a00\u3048\u3001\u5358\u7d14\u306b\u540c\u3058\u8a00\u8a9e\u3067\u5199\u7d4c\u3059\u308b\u3088\u308a\u306f\u8003\u3048\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001\u8eab\u306b\u306a\u308b\u3053\u3068\u306f\u3042\u308b\u3002\u3068\u601d\u3046\u3002\n* \u554f\u984c\u3092\u89e3\u304f\u3068\u304d\u306b\u5e45\u512a\u5148\u304b\u306a\uff5e\u6df1\u3055\u512a\u5148\u304b\u306a\u301cdp\u306b\u3059\u308b\u3068\u3057\u305f\u3089\u306a\u306b\u3067\u6f38\u5316\u5f0f\u7acb\u3066\u308b\u304b\u306a\u301c\u3001\u7a0b\u5ea6\u306e\u3053\u3068\u306f\u8003\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002  \n\u304d\u3063\u3068\u7121\u99c4\u3067\u306f\u306a\u3044\u3002\n* \u65b0\u3057\u3044\u8a00\u8a9e\u3092\u52c9\u5f37\u3059\u308b\u3068\u304d\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30cd\u30bf\u306b\u3059\u308b\u306e\u306f\u5272\u3068\u826f\u3044\u6c17\u304c\u3057\u3066\u304d\u305f\u3002  \n\u6a19\u6e96\u5165\u51fa\u529b\u3001Array\u3001HashMap\u306a\u3069\u306e\u57fa\u672c\u7684\u306a\u8981\u7d20\u306f\u7db2\u7f85\u3067\u304d\u308b\u3057\u3002\n\n# \u7d42\u308f\u308a\u306b\n\u3068\u308a\u3042\u3048\u305a\u6642\u9593\u3092\u304b\u3051\u3066\u3082\u3044\u3044\u304b\u3089ARC\u306e\u554f\u984c\u3092\u89e3\u3051\u308b\u304f\u3089\u3044\u306b\u306f\u306a\u308a\u305f\u3044\u3002\n", "tags": ["Swift", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]}