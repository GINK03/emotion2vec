{"context": " More than 1 year has passed since last update.Phoenix \u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u306f render(conn, \"index.html\", foos: foos) \u306e\u3088\u3046\u306b render/3 \u3092\u547c\u3076\u3053\u3068\u3067\u30d3\u30e5\u30fc\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3082\u308d\u3082\u308d\u306e\u4e8b\u60c5\u304c\u3042\u3063\u3066\u3001\u3053\u306e\u51e6\u7406\u306e\u9014\u4e2d\u306b\u30d5\u30c3\u30af\u3057\u3066\u5f15\u6570\u306e\u5024\u3092\u66f8\u304d\u63db\u3048\u3066\u307f\u305f\u3044\u3068\u601d\u3063\u305f\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067 render/3 \u3092\u547c\u3093\u3060\u3089\u4f55\u304c\u3069\u3046\u306a\u3063\u3066 HTML \u304c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u306e\u304b\u8ffd\u3044\u304b\u3051\u3066\u307f\u305f\u3002\n\n\u30cd\u30bf\u30d0\u30ec\uff1a\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u5f97\u3089\u308c\u308b\u3053\u3068\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u3082\u306e\u306e\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u5206\u304b\u3089\u306a\u3044\u95a2\u6570\u304b\u3089\u59cb\u307e\u3063\u3066\u3001\u30de\u30af\u30ed\u3067\u751f\u6210\u3055\u308c\u305f\u95a2\u6570\u5b9a\u7fa9\u306b\u8fbf\u308a\u7740\u304f\u307e\u3067\u3092\u9806\u3092\u8ffd\u3063\u3066\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\u30de\u30af\u30ed\u3092\u99c6\u4f7f\u3057\u305f Elixir \u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u3001\u95a2\u6570\u304c\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u63a2\u3059\u65b9\u6cd5\u3084\u8003\u3048\u65b9\u306e\u30d2\u30f3\u30c8\u3092\u5f97\u3089\u308c\u308b\u2026\u2026\u306f\u305a\u3067\u3059\u3002\u5206\u304b\u308a\u3065\u3089\u3044\u7b87\u6240\u304c\u3042\u308c\u3070\u304a\u6c17\u8efd\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u304f\u3060\u3055\u3044\u3002\n\n\u6e96\u5099\uff1a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\n\uff08\u3053\u3053\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u3082OK\uff09\n\u8aac\u660e\u7528\u306b\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 my_app \u3092\u4f5c\u308b\u3002 mix phoenix.gen.html \u30b3\u30de\u30f3\u30c9\u3067 Foo \u30e2\u30c7\u30eb\uff08\u3068\u95a2\u9023\u3059\u308b\u30d3\u30e5\u30fc\u3068\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u4ed6\uff09\u3092\u751f\u6210\u3059\u308b\u3002\nmix phoenix.new my_app --no-brunch\ncd my_app\nmix do deps.get, compile\nmix phoenix.gen.html Foo foos bar:string\n\n\n\u51fa\u767a\uff1aFooController\n\u51fa\u767a\u70b9\u306f MyApp \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e FooController \u3002 index/2 \u306e\u4e2d\u3067 render/3 \u3092\u547c\u3093\u3067\u3044\u308b\u3002\n\nweb/controllers/foo_controller.ex\ndefmodule MyApp.FooController do\n  use MyApp.Web, :controller\n\n  alias MyApp.Foo\n\n  plug :scrub_params, \"foo\" when action in [:create, :update]\n\n  def index(conn, _params) do\n    foos = Repo.all(Foo)\n    render(conn, \"index.html\", foos: foos)  # \u2190 \u3053\u3053\u304b\u3089\u51fa\u767a\n  end\n\n  # ...\nend\n\n\n\u3053\u306e render/3 \u306f\u4f55\u8005\u3060\u308d\u3046\uff1f\u3000\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\n\n\u95a2\u6570\u306f\u3069\u3053\u304b\u3089\u6765\u308b\u304b\nElixir \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u95a2\u6570\u3092\u547c\u3093\u3067\u3044\u308b\u3068\u304d\u3001\u305d\u306e\u95a2\u6570\u304c\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u306f4\u3064\u306e\u53ef\u80fd\u6027\u306b\u7d5e\u3089\u308c\u308b\uff1a\n\n\u305d\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306e def \u307e\u305f\u306f defp \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n\u305d\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306e import OtherModule \u3067\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\n\u305d\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306e use OtherModule \u304c\u3001 def \u304b defp \u304b import \u304b use \u304b @before_compile \u306b\u5c55\u958b\u3055\u308c\u308b\n\u305d\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306e @before_compile \u5c5e\u6027\u3067\u6307\u5b9a\u3057\u305f\u30de\u30af\u30ed\u304c\u3001 def \u304b defp \u304b import \u304b use \u306b\u5c55\u958b\u3055\u308c\u308b\n\ndef \u307e\u305f\u306f defp \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u306a\u3051\u308c\u3070\u3001 import \u307e\u305f\u306f use \u3057\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u308b\u3002\u305d\u306e\u4e2d\u3067\u3082\u307e\u305f import \u304b use \u3057\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u5148\u3092\u8ffd\u3063\u3066\u3044\u304f\u3068\u3044\u305a\u308c def \u307e\u305f\u306f defp \u306b\u8fbf\u308a\u3064\u304f\u306f\u305a\u3060\u3002\n\n\u88dc\u8db3\n\uff08\u3053\u3053\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u3082OK\uff09\n\u95a2\u6570\u306e\u5b9a\u7fa9\u306e\u5834\u6240\u306b\u3064\u3044\u3066\u3001\u53b3\u5bc6\u306b\u306f\u4ed6\u306e\u53ef\u80fd\u6027\u3082\u3042\u308b\u3002\u3072\u3068\u3064\u306f Elixir \u306e\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3068\u3057\u3066 Kernel \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u53ef\u80fd\u6027\u3060\u304c\u3001\u3053\u308c\u306f\u4eca\u56de\u306f\u8003\u3048\u306a\u304f\u3066\u3044\u3044\u3002\n\u307e\u305f\u3001\u52d5\u7684\u306b\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u624b\u6bb5\u3068\u3057\u3066 eval \u7cfb\u306e\u95a2\u6570\u304c\u3042\u308b\uff1a\ndefmodule MyModule do\n  Code.eval_string(\"def answer, do: 42\", [], __ENV__)\nend\n# MyModule.answer => 42\n\n\u3068\u306f\u3044\u3048\u3001 Elixir \u306f\u30de\u30af\u30ed\u304c\u5341\u5206\u306b\u30d1\u30ef\u30d5\u30eb\u306a\u306e\u3067 eval \u3092\u76ee\u306b\u3059\u308b\u6a5f\u4f1a\u306f\u307b\u3068\u3093\u3069\u306a\u3044\u3060\u308d\u3046\u3002\u4eca\u56de\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067 grep eval \u3057\u3066\u307f\u308b\u3068\u3001 eval \u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u306f ecto/lib/ecto/schema.ex \u3067 Module.eval_quoted/4 \u3092\u547c\u3093\u3067\u3044\u308b1\u7b87\u6240\u3060\u3051\u3060\u3063\u305f\u3002\n\nuse MyApp.Web, :controller\n\n\u3055\u3066\u3001 MyApp.FooController \u306b def render \u306f\u898b\u5f53\u305f\u3089\u306a\u3044\u3002\u3068\u3059\u308c\u3070 render/3 \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5916\u304b\u3089\u6765\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u602a\u3057\u3044\u306e\u306f use MyApp.Web, :controller \u3060\u3002\n\nweb/controllers/foo_controller.ex\ndefmodule MyApp.FooController do\n  use MyApp.Web, :controller  # \u2190\u3053\u308c\n  # ...\nend\n\n\nMyApp.Web \u306f\u3001\u5404\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3084\u30d3\u30e5\u30fc\u306b\u5171\u901a\u3059\u308b\u5b9a\u7fa9\u3092\u307e\u3068\u3081\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3002\u5404\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u5148\u982d\u306b use MyApp.Web, :controller \u30681\u884c\u66f8\u3051\u3070\u8907\u6570\u306e use \u3084 import \u306b\u5c55\u958b\u3055\u308c\u308b\u3002\nMyApp.Web \u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u3088\u3046\u3002\n\nweb/web.ex\ndefmodule MyApp.Web do\n  # ...\n\n  def controller do\n    quote do\n      use Phoenix.Controller\n\n      alias MyApp.Repo\n      import Ecto.Model\n      import Ecto.Query, only: [from: 2]\n\n      import MyApp.Router.Helpers\n    end\n  end\n\n  # ...\n\n  defmacro __using__(which) when is_atom(which) do\n    apply(__MODULE__, which, [])\n  end\n\n\n__using__/1 \u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\u5225\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067 use MyApp.Web, :controller \u3059\u308b\u3068 MyApp.Web.controller/0 \u3092\u547c\u3076\u4ed5\u639b\u3051\u3060\u3002\u305d\u306e\u8fd4\u308a\u5024\u306e quote \u3055\u308c\u305f\u30b3\u30fc\u30c9\u7247\u306f\u3001\u7d50\u5c40 use \u3057\u305f\u5074\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3002\ncontroller/0 \u304c\u8fd4\u3059\u30b3\u30fc\u30c9\u7247\u306b\u306f\u3044\u304f\u3064\u304b\u306e use \u3068 import \u304c\u3042\u3063\u3066\u3001\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u95a2\u6570\u3092\u53d6\u308a\u8fbc\u3093\u3067\u3044\u308b\u3002\n\u3088\u3046\u3059\u308b\u306b\u3001\u3053\u3053\u306e use \u3068 import \u304c\u53d6\u308a\u8fbc\u3093\u3060\u95a2\u6570\u306f MyApp.FooController \u5185\u306b\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u3002\u3053\u306e\u4e2d\u306e\u3069\u308c\u304b\u304c render/3 \u3092\u53d6\u308a\u8fbc\u3093\u3067\u3044\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u305d\u308c\u305e\u308c\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8abf\u3079\u308b\u904e\u7a0b\u306f\u7701\u7565\u3057\u3088\u3046\u3002\u30de\u30cb\u30e5\u30a2\u30eb\u3084\u30b3\u30fc\u30c9\u3092\u8abf\u3079\u305f\u7d50\u679c\u3001\u63a2\u3057\u3066\u3044\u308b\u95a2\u6570 render/3 \u306f use Phoenix.Controller \u304b\u3089\u6765\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n\nuse Phoenix.Controller\n\n\u3053\u3053\u304b\u3089\u306f Phoenix \u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u3063\u3066\u3044\u304f\u3002 Phoenix \u306e\u95a2\u6570\u3092\u8abf\u3079\u308b\u3068\u304d\u306f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 http://hexdocs.pm/phoenix/ \u3092\u8aad\u3080\u3068\u3044\u3044\u3060\u308d\u3046\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e2d\u306e \u201cSource\u201d \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u5bfe\u5fdc\u3059\u308b\u30b3\u30fc\u30c9\u3092 GitHub \u3067\u958b\u304f\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30b5\u30a4\u30c9\u30d0\u30fc\u3067 render \u3092\u691c\u7d22\u3059\u308b\u3068\u4f55\u4ef6\u304b\u5019\u88dc\u304c\u51fa\u3066\u304f\u308b\u3002 Phoenix.Controller.render \u306e\u3069\u308c\u304b\u304c\u6b63\u89e3\u3060\u3002\n\nPhoenix.Controller.render\n\nPhoenix.Controller.render \u306b\u306f arity \u304c2, 3, 4\u3068\u3042\u308b\u304c\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u305d\u306e\u3069\u308c\u3082\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570 do_render/4 \u3092\u547c\u3093\u3067\u3044\u308b\u3002 do_render/4 \u306f\u3053\u3046\u306a\u3063\u3066\u3044\u308b\uff1a\n\nphoenix/controller.ex\n  defp do_render(conn, template, format, assigns) do\n    assigns = to_map(assigns)\n    content_type = Plug.MIME.type(format)\n    conn =\n      conn\n      |> put_private(:phoenix_template, template)\n      |> prepare_assigns(assigns, format)\n\n    view = Map.get(conn.private, :phoenix_view) ||\n            raise \"a view module was not specified, set one with put_view/2\"\n    data = Phoenix.View.render_to_iodata(view, template,\n                                         Map.put(conn.assigns, :conn, conn))\n    send_resp(conn, conn.status || 200, content_type, data)\n  end\n\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/controller.ex#L571-L584 )\n\u5f15\u6570\u306b\u3064\u3044\u3066\u88dc\u8db3\u3057\u3066\u304a\u304f\u3068\u3001 conn \u306f Plug.Conn \u69cb\u9020\u4f53\u3060\u3002 template \u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u540d\u524d\u3002\u3072\u3068\u3064\u98db\u3070\u3057\u3066assigns \u306f Dict \u306a\u5024\u3002\u3053\u308c\u3089\u306f\u4e00\u756a\u6700\u521d\u306e render/3 \u306b\u6e21\u3057\u305f\u3082\u306e\u3068\u540c\u3058\u3002\u3053\u3053\u3067\u306f template = \"index.html\", assigns = [foos: foos] \u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u6b8b\u308b format \u5f15\u6570\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u540d \"index.html\" \u306b\u5bfe\u5fdc\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306f web/templates/page/index.html.eex \u3060\u304c\u3001\u3053\u306e\u6700\u5f8c\u306e\u62e1\u5f35\u5b50\u304c\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306a\u308b\u3002\u3064\u307e\u308a format = \"eex\" \u3060\u3002\n\u307e\u305f\u3001\u95a2\u6570\u5185\u3067 view = Map.get(conn.private, :phoenix_view) \u3068\u3057\u3066\u3044\u308b\u304c\u3001\u3053\u3053\u3067 view \u306f MyApp.FooView \u306b\u306a\u308b\u3002\n\u3053\u306e\u95a2\u6570\u306f\u3069\u3046\u3084\u3089 Phoenix.View.render_to_iodata/3 \u3092\u547c\u3093\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\nPhoenix.View.render_to_iodata/3\n\n\nphoenix/view.ex\n  def render_to_iodata(module, template, assign) do\n    render(module, template, assign) |> encode(template)\n  end\n\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/view.ex#L431-L433 )\nrender_to_iodata/3 \u306f render/3 \u3092\u547c\u3093\u3067\u3044\u308b\u3002 \u305d\u308c\u3092 encode/2 \u306b\u6e21\u3057\u3066 iodata \u306a\u308b\u3082\u306e\u306b\u5909\u63db\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3001\u305d\u3063\u3061\u306f\u63aa\u3044\u3066\u304a\u3053\u3046\u3002 render/3 \u3092\u898b\u3066\u307f\u308b\u3002\n\nPhoenix.View.render/3\n\n\nphoenix/view.ex\n  def render(module, template, assigns) do\n    assigns\n    |> to_map()\n    |> Map.pop(:layout, false)\n    |> render_within(module, template)\n  end\n\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/view.ex#L188-L193 )\n\u82e5\u5e72\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u3064\u3051\u3066\u307f\u305f\u3002\n  def render(module, template, assigns) do\n    assigns     # == %{conn: conn, foos: foos}\n                # \u5143\u3005\u306f [foos: foos] \u3060\u3063\u305f\u304c\u3001\n                # `do_render/4` \u306b\u3088\u3063\u3066 `conn` \u304c\u8ffd\u52a0\u3055\u308c\u3001\n                # \u3055\u3089\u306b `render_to_iodata/3` \u306e\u4e2d\u3067\n                # `to_map(assigns)` \u306b\u3088\u3063\u3066 Map \u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n    |> to_map() # \u2026\u306e\u3067\u3053\u308c\u306f noop\n\n    |> Map.pop(:layout, false) # assigns \u304b\u3089 :layout \u30ad\u30fc\u306e\u5024\u3092\u53d6\u308a\u51fa\u3059\u3002\n                               # \u3053\u3053\u3067\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067 {false, assigns} \u304c\u8fd4\u308b\n\n    |> render_within(module, template)\n  end\n\n\u6700\u5f8c\u306b\u306f render_within({false, assigns}, module, template) \u3092\u547c\u3093\u3067\u3044\u308b\u3002\u3053\u308c\u306f Phoenix.View \u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\u3060\u3002\n\nPhoenix.View.render_within/3\n\n\nphoenix/view.ex\n  defp render_within({{layout_mod, layout_tpl}, assigns}, inner_mod, template) do\n    # ...\n  end\n\n  defp render_within({false, assigns}, module, template) do\n    template\n    |> module.render(assigns)\n  end\n\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/view.ex#L195-L209 )\n\u5019\u88dc\u304c2\u3064\u3042\u308b\u304c\u3001\u7b2c1\u5f15\u6570\u306b {false, assigns} \u3092\u6e21\u3057\u3066\u30de\u30c3\u30c1\u3059\u308b\u306e\u306f2\u3064\u76ee\u306e\u307b\u3046\u3060\u3002 template |> module.render(assigns) \u3068\u3042\u308b\u304c\u3001 module \u306f\u4f55\u3060\u308d\u3046\uff1f\n\u7b54\u3048\u306f\u3053\u306e\u8a18\u4e8b\u3092 Phoenix.Controller.render \u307e\u3067\u9061\u3063\u305f\u3068\u3053\u308d\u306b\u3042\u308b\u3002 view = MyApp.FooView \u3068\u3042\u308a\u3001\u305d\u308c\u304c\u3053\u3053\u3078\u304d\u3066 module \u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u3002\n\u3064\u307e\u308a\u3053\u3053\u3067\u306f MyApp.FooView.render(template, assigns) \u3092\u547c\u3093\u3067\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u3002\n\nMyApp.FooView.render/2\n\n\u307e\u305f MyApp \u306e\u30b3\u30fc\u30c9\u306b\u623b\u3063\u3066\u304d\u305f\u3002 FooView \u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u2026\u2026\n\nweb/views/foo_view.ex\ndefmodule MyApp.FooView do\n  use MyApp.Web, :view\nend\n\n\n\u3053\u308c\u3060\u3051\u3002 render/2 \u306f use MyApp.Web, :view \u304b\u3089\u6765\u3066\u3044\u308b\u306b\u9055\u3044\u306a\u3044\u3002\nMyApp.Web \u306f\u3044\u304f\u3064\u304b\u306e use \u3084 import \u3092\u675f\u306d\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3063\u305f\u306e\u3092\u899a\u3048\u3066\u3044\u308b\u3060\u308d\u3046\u304b\u3002\u4e2d\u8eab\u3092\u8aad\u3080\u904e\u7a0b\u306f\u4e00\u5ea6\u3084\u3063\u305f\u306e\u3067\u7701\u7565\u3057\u3088\u3046\u3002 render/2 \u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u305d\u306e\u3046\u3061\u306e use Phoenix.View, root: \"web/templates\" \u3060\u3002\n\nuse Phoenix.View\n\nuse Phoenix.View \u3059\u308b\u3068 Phoenix.View.__using__/1 \u30de\u30af\u30ed\u304c\u547c\u3070\u308c\u308b\u3002\n\nphoenix/view.ex\n  defmacro __using__(options) do\n    if root = Keyword.get(options, :root) do\n      namespace =\n        # ...\n\n      quote do\n        import Phoenix.View\n\n        use Phoenix.Template, root:\n          Path.join(unquote(root),\n                    Phoenix.Template.module_to_template_root(__MODULE__, unquote(namespace), \"View\"))\n\n        # ...\n      end\n    else\n      raise \"expected :root to be given as an option\"\n    end\n  end\n\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/view.ex#L120-L147 )\n\u3053\u3053\u306b\u306f render/2 \u306e\u5b9a\u7fa9\u306f\u306a\u3044\u3002\u3068\u3059\u308c\u3070 use Phoenix.Template, root: ... \u306e\u4e2d\u3060\u3002\n\nuse Phoenix.Template\n\n\nphoenix/view.ex\n  defmacro __using__(options) do\n    root = Dict.fetch! options, :root\n\n    quote do\n      @template_root Path.relative_to_cwd(unquote(root))\n      @before_compile unquote(__MODULE__)\n\n      @doc \"\"\"\n      Renders the given template locally.\n      \"\"\"\n      def render(template, assigns \\\\ %{})\n\n      def render(template, assigns) when is_list(assigns) do\n        render(template, Enum.into(assigns, %{}))\n      end\n\n      def render(module, template) when is_atom(module) do\n        Phoenix.View.render(module, template, %{})\n      end\n\n      # ...\n    end\n  end\n\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/template.ex#L110-L147 )\n\u3064\u3044\u306b render/2 \u306e\u5b9a\u7fa9\u304c\u51fa\u3066\u304d\u305f\uff01\n\u3060\u304c\u3001\u3088\u304f\u898b\u308b\u30681\u3064\u76ee\u306b\u306f\u672c\u4f53\u304c\u306a\u304f\u30012\u3064\u76ee\u306b\u306f\u30ac\u30fc\u30c9\u304c\u3064\u3044\u3066\u3044\u308b\u30023\u3064\u76ee\u306b\u3082\u30ac\u30fc\u30c9\u304c\u3042\u308b\u3046\u3048\u306b\u5f15\u6570\u304c (module, template) \u3068\u4ed6\u3068\u306f\u9055\u3063\u3066\u3044\u308b\u3002\n\u3053\u306e\u6642\u70b9\u3067\u3001 render/2 \u306e\u5f15\u6570\u306f (template, assigns) \u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3060\uff08\u601d\u3044\u51fa\u305b\u306a\u3051\u308c\u3070\u3053\u306e\u8a18\u4e8b\u3092 MyApp.FooView.render(template, assigns) \u3067\u691c\u7d22\uff09\u3002\u3055\u3089\u306b assigns \u306f Map \u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u30893\u3064\u306e render/2 \u306e\u3069\u308c\u306b\u3082\u30de\u30c3\u30c1\u3057\u306a\u3044\u3002\n\u3068\u3059\u308c\u3070\u3001\u6b8b\u308b\u306f @before_compile unquote(__MODULE__) \u304c\u602a\u3057\u3044\u3002\n\u3053\u306e\u5c5e\u6027\u304c\u3053\u3053\u306b\u3042\u308b\u3068\u3001 use Phoenix.Template \u3057\u305f\u5074\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b Phoenix.Template.__before_compile__/1 \u30de\u30af\u30ed\u304c\u8fd4\u3059\u30b3\u30fc\u30c9\u7247\u304c\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3053\u3068\u306b\u306a\u308b\uff08\u7406\u7531\u306f Elixir \u306e Module \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167 http://elixir-lang.org/docs/v1.0/elixir/Module.html \uff09\u3002\n\u305d\u306e\u30b3\u30fc\u30c9\u7247\u306e\u4e2d\u306b\u6c42\u3081\u308b render/2 \u304c\u3042\u308b\u306f\u305a\u3060\u3002\n\nPhoenix.Template.__before_compile__/1\n\n\u4ee5\u4e0b\u304c __before_compile__/1 \u306e\u30b3\u30fc\u30c9\u3002\u5c11\u3057\u9577\u3044\u304c\u91cd\u8981\u306a\u7b87\u6240\u306a\u306e\u3067\u7701\u7565\u305b\u305a\u306b\u63b2\u8f09\u3059\u308b\u3002\u5f8c\u534a\u306e quote line: -1 do ... end \u304c\u8fd4\u308a\u5024\u3068\u306a\u308b\u30b3\u30fc\u30c9\u7247\u3060\u3002\n\nphoenix/template.ex\n  defmacro __before_compile__(env) do\n    root = Module.get_attribute(env.module, :template_root)\n\n    pairs = for path <- find_all(root) do\n      compile(path, root)\n    end\n\n    names = Enum.map(pairs, &elem(&1, 0))\n    codes = Enum.map(pairs, &elem(&1, 1))\n\n    # We are using line -1 because we don't want warnings coming from\n    # render/2 to be reported in case the user has defined a catch all\n    # render/2 clause.\n    quote line: -1 do\n      unquote(codes)\n\n      def render(tpl, %{render_existing: {__MODULE__, tpl}}) do\n        nil\n      end\n      def render(template, assigns) do\n        template_not_found(template, assigns)\n      end\n\n      @doc \"\"\"\n      Returns the template root alongside all templates.\n      \"\"\"\n      def __templates__ do\n        {@template_root, unquote(names)}\n      end\n\n      @doc \"\"\"\n      Returns true whenever the list of templates changes in the filesystem.\n      \"\"\"\n      def __phoenix_recompile__? do\n        unquote(hash(root)) != Template.hash(@template_root)\n      end\n    end\n  end\n\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/template.ex#L150-L187 )\n\u3053\u306e\u4e2d\u3067 render/2 \u306e\u5b9a\u7fa9\u306f2\u7b87\u6240\u3002\u7e70\u308a\u8fd4\u3059\u304c\u3001\u3053\u3053\u3067 render/2 \u306b\u4e0e\u3048\u308b\u5f15\u6570\u306f (template, assigns) \u3060\u3002\u305d\u3057\u3066\u3053\u306e\u3068\u304d assigns = %{conn: conn, foos: foos} \u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\u3068\u3059\u308b\u3068\u30011\u3064\u76ee\u306e def render(tpl, %{render_existing: {__MODULE__, tpl}}) \u306f\u7b2c2\u5f15\u6570\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u3002\n\u6b8b\u308b2\u3064\u76ee\u306b\u306f\u7121\u4e8b\u30de\u30c3\u30c1\u3059\u308b\u304c\u30012\u3064\u76ee\u306f template_not_found(template, assigns) \u3068\u3044\u3046\u4e0d\u7a4f\u306a\u95a2\u6570\u3092\u547c\u3093\u3067\u3044\u308b\u3002\u305d\u3057\u3066\u3053\u306e\u95a2\u6570\u306f\u898b\u305f\u76ee\u3069\u304a\u308a\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\uff01\n\u3053\u3053\u307e\u3067\u6765\u3066\u884c\u304d\u8a70\u307e\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u5192\u982d\u3067\u6319\u3052\u305f\u95a2\u6570\u5b9a\u7fa9\u306e4\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u306e\u3069\u308c\u306b\u3082\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u3002 def render \u306f\u3042\u308b\u304c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u51e6\u7406\u3067\u306f\u306a\u304f\u4f8b\u5916\u3092\u6295\u3052\u3066\u3044\u308b\u3002 use \u3082 import \u3082\u898b\u3042\u305f\u3089\u306a\u3044\u3057 @before_compile \u3082\u306a\u3044\u3002\n\u6c17\u3092\u53d6\u308a\u76f4\u3057\u3066\u3082\u3046\u4e00\u5ea6\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u3088\u3046\u3002\u3053\u306e\u4e2d\u3067\u4e00\u898b\u3057\u3066\u305d\u308c\u3068\u5206\u304b\u3089\u306a\u3044 render/2 \u306e\u5b9a\u7fa9\u304c\u73fe\u308c\u308b\u4f59\u5730\u304c\u3042\u308b\u3068\u3059\u308c\u3070\u3001\u305d\u308c\u306f quote line: -1 do \u76f4\u5f8c\u306e unquote(codes) \u3060\u3002\u4eee\u306b\u3053\u3053\u3067 render/2 \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u4e0b\u306b\u7d9a\u304f def render \u3088\u308a\u3082\u5148\u306b\u30de\u30c3\u30c1\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\ncodes \u306f\u4f55\u304b\u3068\u3044\u3046\u3068\u3001 compile(path, root) \u3092\u4f55\u56de\u3082\u547c\u3073\u3001\u305d\u306e\u8fd4\u308a\u5024\u3092\u96c6\u3081\u3066\u4f5c\u3089\u308c\u3066\u3044\u308b\u3002 compile/2 \u306f\u540c\u3058\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\u3060\u3002\u898b\u3066\u307f\u3088\u3046\u3002\n\nPhoenix.Template.compile/2\n\n\nphoenix/template.ex\n  defp compile(path, root) do\n    name   = template_path_to_name(path, root)\n    defp   = String.to_atom(name)\n    ext    = Path.extname(path) |> String.lstrip(?.) |> String.to_atom\n    engine = Map.fetch!(engines(), ext)\n    quoted = engine.compile(path, name)\n\n    {name, quote do\n      @file unquote(path)\n      @external_resource unquote(path)\n\n      defp unquote(defp)(var!(assigns)) do\n        _ = var!(assigns)\n        unquote(quoted)\n      end\n\n      def render(unquote(name), assigns) do\n        unquote(defp)(assigns)\n      end\n    end}\n  end\n\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/template.ex#L315-L335 )\ndef render(unquote(name), assigns) \u304c\u3042\u308b\uff01\u3000\u3053\u306e name \u306e\u5024\u3092\u6c42\u3081\u308b\u306b\u3082\u7d06\u4f59\u66f2\u6298\u3042\u308b\u306e\u3060\u304c\u3001\u3059\u3063\u98db\u3070\u3057\u3066\u7b54\u3048\u3092\u66f8\u3044\u3066\u3057\u307e\u3046\u3068 MyApp.FooView \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u540d\u524d\u306e\u3069\u308c\u304b\u306b\u306a\u308b\u3002 \"index.html\" \u3084 \"edit.html\" \u306a\u3069\u3060\u3002\ncompile/2 \u3092\u4f55\u56de\u3082\u547c\u3093\u3067\u3044\u308b\u3068\u3059\u3050\u4e0a\u3067\u66f8\u3044\u305f\u304c\u3001\u6b63\u78ba\u306b\u8a00\u3048\u3070 MyApp.FooView \u306b\u95a2\u9023\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3059\u3079\u3066\u3092\u9806\u306b\u5f15\u6570\u306b\u3057\u3066 compile/2 \u3092\u547c\u3093\u3067\u3044\u308b\u306e\u3060\u3002\n\u3068\u3059\u308b\u3068\u3001\u3053\u306e def render \u306f\u6b21\u306e\u3088\u3046\u306b\u5c55\u958b\u3055\u308c\u308b\uff1a\ndef render(\"index.html\", assigns) do\n  quote(defp)(assigns)\nend\n\n# \u6ce8\u610f\uff1a quote(defp) \u306f :\"index.html\" \u306b\u5c55\u958b\u3055\u308c\u308b\u304c\u3001\n# \u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u3067\u6587\u5b57\u901a\u308a :\"index.html\"(assigns) \u3068\u66f8\u304f\u3068\u69cb\u6587\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n# quote do ... end \u306e\u4e2d\u3067\u3060\u3051\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u304c\u8a31\u3055\u308c\u308b\u3002\n# \u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u3067\u8a18\u53f7\u3092\u542b\u3080\u540d\u524d\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u306b\u306f MyModule.\"foo.bar\"() \u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n\u7121\u4e8b\u306b render/2 \u306e\u5b9a\u7fa9\u304c\u73fe\u308c\u305f\u3002\u3053\u306e\u5148\u3092\u8fbf\u308b\u3068\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u307e\u3067\u884c\u304d\u7740\u304f\u304c\u3001\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u306b\u3057\u3066\u304a\u3053\u3046\u3002\n\u3053\u306e render/2 \u306e\u5b9a\u7fa9\u306f @before_compile \u306e\u306f\u305f\u3089\u304d\u3067 MyApp.View \u306b\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u307e\u3068\u3081\uff1a\u4f55\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u305f\u306e\u304b\nPhoenix \u306e MyApp.FooController \u3067 render(conn, \"index.html\", foos: foos) \u3092\u547c\u3076\u3068\u3001 MyApp.FooView.render/2 \u306e\u547c\u3073\u51fa\u3057\u306b\u884c\u304d\u7740\u304f\u3002\u3053\u306e render/2 \u306f\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff1a\n\nweb/views/foo_view.ex\ndefmodule MyApp.FooView do\n  use MyApp.Web, :view\n\n  # ---- \u2193\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u633f\u5165\u3055\u308c\u308b\n\n  def render(\"index.html\", assigns) do\n    # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u3092\u547c\u3076\n  end\n  def render(\"edit.html\", assigns) do\n    # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u3092\u547c\u3076\n  end\n  # ...\n\n  # ----\nend\n\n\n\u3082\u3057\u3082 MyApp.FooView.render/2 \u306e\u51e6\u7406\u306b\u30d5\u30c3\u30af\u3057\u305f\u3044\u306a\u3089\u3001 MayApp.FooView \u306b render/2 \u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3044\u3044\u3002\u305f\u3060\u3057\u6700\u7d42\u7684\u306b\u306f\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u633f\u5165\u3055\u308c\u305f render/2 \u3092\u547c\u3070\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u5de5\u592b\u3059\u308b\u3053\u3068\u3002\u3055\u3082\u306a\u3044\u3068\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u305f\u307b\u3046\u306e\u95a2\u6570\u304c\u518d\u5e30\u7684\u306b\u547c\u3070\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\nweb/views/foo_view.ex\ndefmodule MyApp.FooView do\n  use MyApp.Web, :view\n\n  def render(\"index.html\", %{foos: foos} = assigns) do\n    assigns = assigns\n    |> Map.drop([:foos])          # \u4ee5\u964d\u3053\u306e render/2 \u306b\u30de\u30c3\u30c1\u3055\u305b\u306a\u3044\n    |> Map.put(:new_foos, ...)\n    render(\"index.html\", assigns) # \u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u633f\u5165\u3055\u308c\u305f\u307b\u3046\u306e render/2 \u3092\u547c\u3076\n  end\n\n  # ---- \u2193\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u633f\u5165\u3055\u308c\u308b\n  # \u7565\n  # ----\nend\n\n\nPhoenix \u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u306f `render(conn, \"index.html\", foos: foos)` \u306e\u3088\u3046\u306b `render/3` \u3092\u547c\u3076\u3053\u3068\u3067\u30d3\u30e5\u30fc\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3082\u308d\u3082\u308d\u306e\u4e8b\u60c5\u304c\u3042\u3063\u3066\u3001\u3053\u306e\u51e6\u7406\u306e\u9014\u4e2d\u306b\u30d5\u30c3\u30af\u3057\u3066\u5f15\u6570\u306e\u5024\u3092\u66f8\u304d\u63db\u3048\u3066\u307f\u305f\u3044\u3068\u601d\u3063\u305f\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067 `render/3` \u3092\u547c\u3093\u3060\u3089\u4f55\u304c\u3069\u3046\u306a\u3063\u3066 HTML \u304c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u306e\u304b\u8ffd\u3044\u304b\u3051\u3066\u307f\u305f\u3002\n\n## \u30cd\u30bf\u30d0\u30ec\uff1a\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u5f97\u3089\u308c\u308b\u3053\u3068\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u3082\u306e\u306e\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u5206\u304b\u3089\u306a\u3044\u95a2\u6570\u304b\u3089\u59cb\u307e\u3063\u3066\u3001\u30de\u30af\u30ed\u3067\u751f\u6210\u3055\u308c\u305f\u95a2\u6570\u5b9a\u7fa9\u306b\u8fbf\u308a\u7740\u304f\u307e\u3067\u3092\u9806\u3092\u8ffd\u3063\u3066\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\u30de\u30af\u30ed\u3092\u99c6\u4f7f\u3057\u305f Elixir \u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u3001\u95a2\u6570\u304c\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u63a2\u3059\u65b9\u6cd5\u3084\u8003\u3048\u65b9\u306e\u30d2\u30f3\u30c8\u3092\u5f97\u3089\u308c\u308b\u2026\u2026\u306f\u305a\u3067\u3059\u3002\u5206\u304b\u308a\u3065\u3089\u3044\u7b87\u6240\u304c\u3042\u308c\u3070\u304a\u6c17\u8efd\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u304f\u3060\u3055\u3044\u3002\n\n## \u6e96\u5099\uff1a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\n\n\uff08\u3053\u3053\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u3082OK\uff09\n\n\u8aac\u660e\u7528\u306b\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 `my_app` \u3092\u4f5c\u308b\u3002 `mix phoenix.gen.html` \u30b3\u30de\u30f3\u30c9\u3067 `Foo` \u30e2\u30c7\u30eb\uff08\u3068\u95a2\u9023\u3059\u308b\u30d3\u30e5\u30fc\u3068\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u4ed6\uff09\u3092\u751f\u6210\u3059\u308b\u3002\n\n```bash\nmix phoenix.new my_app --no-brunch\ncd my_app\nmix do deps.get, compile\nmix phoenix.gen.html Foo foos bar:string\n```\n\n## \u51fa\u767a\uff1aFooController\n\n\u51fa\u767a\u70b9\u306f `MyApp` \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e `FooController` \u3002 `index/2` \u306e\u4e2d\u3067 `render/3` \u3092\u547c\u3093\u3067\u3044\u308b\u3002\n\n```ex:web/controllers/foo_controller.ex\ndefmodule MyApp.FooController do\n  use MyApp.Web, :controller\n\n  alias MyApp.Foo\n\n  plug :scrub_params, \"foo\" when action in [:create, :update]\n\n  def index(conn, _params) do\n    foos = Repo.all(Foo)\n    render(conn, \"index.html\", foos: foos)  # \u2190 \u3053\u3053\u304b\u3089\u51fa\u767a\n  end\n\n  # ...\nend\n```\n\n\u3053\u306e `render/3` \u306f\u4f55\u8005\u3060\u308d\u3046\uff1f\u3000\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\n\n## \u95a2\u6570\u306f\u3069\u3053\u304b\u3089\u6765\u308b\u304b\n\nElixir \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u95a2\u6570\u3092\u547c\u3093\u3067\u3044\u308b\u3068\u304d\u3001\u305d\u306e\u95a2\u6570\u304c\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u306f4\u3064\u306e\u53ef\u80fd\u6027\u306b\u7d5e\u3089\u308c\u308b\uff1a\n\n- \u305d\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306e `def` \u307e\u305f\u306f `defp` \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n- \u305d\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306e `import OtherModule` \u3067\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\n- \u305d\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306e `use OtherModule` \u304c\u3001 `def` \u304b `defp` \u304b `import` \u304b `use` \u304b `@before_compile` \u306b\u5c55\u958b\u3055\u308c\u308b\n- \u305d\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306e `@before_compile` \u5c5e\u6027\u3067\u6307\u5b9a\u3057\u305f\u30de\u30af\u30ed\u304c\u3001 `def` \u304b `defp` \u304b `import` \u304b `use` \u306b\u5c55\u958b\u3055\u308c\u308b\n\n`def` \u307e\u305f\u306f `defp` \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u306a\u3051\u308c\u3070\u3001 `import` \u307e\u305f\u306f `use` \u3057\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u308b\u3002\u305d\u306e\u4e2d\u3067\u3082\u307e\u305f `import` \u304b `use` \u3057\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u5148\u3092\u8ffd\u3063\u3066\u3044\u304f\u3068\u3044\u305a\u308c `def` \u307e\u305f\u306f `defp` \u306b\u8fbf\u308a\u3064\u304f\u306f\u305a\u3060\u3002\n\n### \u88dc\u8db3\n\n\uff08\u3053\u3053\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u3082OK\uff09\n\n\u95a2\u6570\u306e\u5b9a\u7fa9\u306e\u5834\u6240\u306b\u3064\u3044\u3066\u3001\u53b3\u5bc6\u306b\u306f\u4ed6\u306e\u53ef\u80fd\u6027\u3082\u3042\u308b\u3002\u3072\u3068\u3064\u306f Elixir \u306e\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3068\u3057\u3066 `Kernel` \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u53ef\u80fd\u6027\u3060\u304c\u3001\u3053\u308c\u306f\u4eca\u56de\u306f\u8003\u3048\u306a\u304f\u3066\u3044\u3044\u3002\n\n\u307e\u305f\u3001\u52d5\u7684\u306b\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u624b\u6bb5\u3068\u3057\u3066 eval \u7cfb\u306e\u95a2\u6570\u304c\u3042\u308b\uff1a\n\n```ex\ndefmodule MyModule do\n  Code.eval_string(\"def answer, do: 42\", [], __ENV__)\nend\n# MyModule.answer => 42\n```\n\n\u3068\u306f\u3044\u3048\u3001 Elixir \u306f\u30de\u30af\u30ed\u304c\u5341\u5206\u306b\u30d1\u30ef\u30d5\u30eb\u306a\u306e\u3067 eval \u3092\u76ee\u306b\u3059\u308b\u6a5f\u4f1a\u306f\u307b\u3068\u3093\u3069\u306a\u3044\u3060\u308d\u3046\u3002\u4eca\u56de\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067 `grep eval` \u3057\u3066\u307f\u308b\u3068\u3001 eval \u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u306f ecto/lib/ecto/schema.ex \u3067 `Module.eval_quoted/4` \u3092\u547c\u3093\u3067\u3044\u308b1\u7b87\u6240\u3060\u3051\u3060\u3063\u305f\u3002\n\n## `use MyApp.Web, :controller`\n\n\u3055\u3066\u3001 `MyApp.FooController` \u306b `def render` \u306f\u898b\u5f53\u305f\u3089\u306a\u3044\u3002\u3068\u3059\u308c\u3070 `render/3` \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5916\u304b\u3089\u6765\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u602a\u3057\u3044\u306e\u306f `use MyApp.Web, :controller` \u3060\u3002\n\n```ex:web/controllers/foo_controller.ex\ndefmodule MyApp.FooController do\n  use MyApp.Web, :controller  # \u2190\u3053\u308c\n  # ...\nend\n```\n\n`MyApp.Web` \u306f\u3001\u5404\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3084\u30d3\u30e5\u30fc\u306b\u5171\u901a\u3059\u308b\u5b9a\u7fa9\u3092\u307e\u3068\u3081\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3002\u5404\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u5148\u982d\u306b `use MyApp.Web, :controller` \u30681\u884c\u66f8\u3051\u3070\u8907\u6570\u306e `use` \u3084 `import` \u306b\u5c55\u958b\u3055\u308c\u308b\u3002\n\n`MyApp.Web` \u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u3088\u3046\u3002\n\n```ex:web/web.ex\ndefmodule MyApp.Web do\n  # ...\n\n  def controller do\n    quote do\n      use Phoenix.Controller\n\n      alias MyApp.Repo\n      import Ecto.Model\n      import Ecto.Query, only: [from: 2]\n\n      import MyApp.Router.Helpers\n    end\n  end\n  \n  # ...\n\n  defmacro __using__(which) when is_atom(which) do\n    apply(__MODULE__, which, [])\n  end\n```\n\n`__using__/1` \u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\u5225\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067 `use MyApp.Web, :controller` \u3059\u308b\u3068 `MyApp.Web.controller/0` \u3092\u547c\u3076\u4ed5\u639b\u3051\u3060\u3002\u305d\u306e\u8fd4\u308a\u5024\u306e quote \u3055\u308c\u305f\u30b3\u30fc\u30c9\u7247\u306f\u3001\u7d50\u5c40 `use` \u3057\u305f\u5074\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3002\n\n`controller/0` \u304c\u8fd4\u3059\u30b3\u30fc\u30c9\u7247\u306b\u306f\u3044\u304f\u3064\u304b\u306e `use` \u3068 `import` \u304c\u3042\u3063\u3066\u3001\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u95a2\u6570\u3092\u53d6\u308a\u8fbc\u3093\u3067\u3044\u308b\u3002\n\n\u3088\u3046\u3059\u308b\u306b\u3001\u3053\u3053\u306e `use` \u3068 `import` \u304c\u53d6\u308a\u8fbc\u3093\u3060\u95a2\u6570\u306f `MyApp.FooController` \u5185\u306b\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u3002\u3053\u306e\u4e2d\u306e\u3069\u308c\u304b\u304c `render/3` \u3092\u53d6\u308a\u8fbc\u3093\u3067\u3044\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u305d\u308c\u305e\u308c\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8abf\u3079\u308b\u904e\u7a0b\u306f\u7701\u7565\u3057\u3088\u3046\u3002\u30de\u30cb\u30e5\u30a2\u30eb\u3084\u30b3\u30fc\u30c9\u3092\u8abf\u3079\u305f\u7d50\u679c\u3001\u63a2\u3057\u3066\u3044\u308b\u95a2\u6570 `render/3` \u306f `use Phoenix.Controller` \u304b\u3089\u6765\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n\n## `use Phoenix.Controller`\n\n\u3053\u3053\u304b\u3089\u306f Phoenix \u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u3063\u3066\u3044\u304f\u3002 Phoenix \u306e\u95a2\u6570\u3092\u8abf\u3079\u308b\u3068\u304d\u306f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 http://hexdocs.pm/phoenix/ \u3092\u8aad\u3080\u3068\u3044\u3044\u3060\u308d\u3046\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e2d\u306e \u201cSource\u201d \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u5bfe\u5fdc\u3059\u308b\u30b3\u30fc\u30c9\u3092 GitHub \u3067\u958b\u304f\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30b5\u30a4\u30c9\u30d0\u30fc\u3067 `render` \u3092\u691c\u7d22\u3059\u308b\u3068\u4f55\u4ef6\u304b\u5019\u88dc\u304c\u51fa\u3066\u304f\u308b\u3002 `Phoenix.Controller.render` \u306e\u3069\u308c\u304b\u304c\u6b63\u89e3\u3060\u3002\n\n## `Phoenix.Controller.render`\n\n `Phoenix.Controller.render` \u306b\u306f arity \u304c2, 3, 4\u3068\u3042\u308b\u304c\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u305d\u306e\u3069\u308c\u3082\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570 `do_render/4` \u3092\u547c\u3093\u3067\u3044\u308b\u3002 `do_render/4` \u306f\u3053\u3046\u306a\u3063\u3066\u3044\u308b\uff1a\n\n```ex:phoenix/controller.ex\n  defp do_render(conn, template, format, assigns) do\n    assigns = to_map(assigns)\n    content_type = Plug.MIME.type(format)\n    conn =\n      conn\n      |> put_private(:phoenix_template, template)\n      |> prepare_assigns(assigns, format)\n\n    view = Map.get(conn.private, :phoenix_view) ||\n            raise \"a view module was not specified, set one with put_view/2\"\n    data = Phoenix.View.render_to_iodata(view, template,\n                                         Map.put(conn.assigns, :conn, conn))\n    send_resp(conn, conn.status || 200, content_type, data)\n  end\n```\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/controller.ex#L571-L584 )\n\n\u5f15\u6570\u306b\u3064\u3044\u3066\u88dc\u8db3\u3057\u3066\u304a\u304f\u3068\u3001 `conn` \u306f `Plug.Conn` \u69cb\u9020\u4f53\u3060\u3002 `template` \u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u540d\u524d\u3002\u3072\u3068\u3064\u98db\u3070\u3057\u3066`assigns` \u306f `Dict` \u306a\u5024\u3002\u3053\u308c\u3089\u306f\u4e00\u756a\u6700\u521d\u306e `render/3` \u306b\u6e21\u3057\u305f\u3082\u306e\u3068\u540c\u3058\u3002\u3053\u3053\u3067\u306f `template = \"index.html\"`, `assigns = [foos: foos]` \u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u6b8b\u308b `format` \u5f15\u6570\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u540d `\"index.html\"` \u306b\u5bfe\u5fdc\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306f web/templates/page/index.html.eex \u3060\u304c\u3001\u3053\u306e\u6700\u5f8c\u306e\u62e1\u5f35\u5b50\u304c\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306a\u308b\u3002\u3064\u307e\u308a `format = \"eex\"` \u3060\u3002\n\n\u307e\u305f\u3001\u95a2\u6570\u5185\u3067 `view = Map.get(conn.private, :phoenix_view)` \u3068\u3057\u3066\u3044\u308b\u304c\u3001\u3053\u3053\u3067 `view` \u306f `MyApp.FooView` \u306b\u306a\u308b\u3002\n\n\u3053\u306e\u95a2\u6570\u306f\u3069\u3046\u3084\u3089 `Phoenix.View.render_to_iodata/3` \u3092\u547c\u3093\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\n## `Phoenix.View.render_to_iodata/3`\n\n```ex:phoenix/view.ex\n  def render_to_iodata(module, template, assign) do\n    render(module, template, assign) |> encode(template)\n  end\n```\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/view.ex#L431-L433 )\n\n`render_to_iodata/3` \u306f `render/3` \u3092\u547c\u3093\u3067\u3044\u308b\u3002 \u305d\u308c\u3092 `encode/2` \u306b\u6e21\u3057\u3066 iodata \u306a\u308b\u3082\u306e\u306b\u5909\u63db\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3001\u305d\u3063\u3061\u306f\u63aa\u3044\u3066\u304a\u3053\u3046\u3002 `render/3` \u3092\u898b\u3066\u307f\u308b\u3002\n\n## `Phoenix.View.render/3`\n\n```ex:phoenix/view.ex\n  def render(module, template, assigns) do\n    assigns\n    |> to_map()\n    |> Map.pop(:layout, false)\n    |> render_within(module, template)\n  end\n```\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/view.ex#L188-L193 )\n\n\u82e5\u5e72\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u3064\u3051\u3066\u307f\u305f\u3002\n\n```ex\n  def render(module, template, assigns) do\n    assigns     # == %{conn: conn, foos: foos}\n                # \u5143\u3005\u306f [foos: foos] \u3060\u3063\u305f\u304c\u3001\n                # `do_render/4` \u306b\u3088\u3063\u3066 `conn` \u304c\u8ffd\u52a0\u3055\u308c\u3001\n                # \u3055\u3089\u306b `render_to_iodata/3` \u306e\u4e2d\u3067\n                # `to_map(assigns)` \u306b\u3088\u3063\u3066 Map \u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n    |> to_map() # \u2026\u306e\u3067\u3053\u308c\u306f noop\n\n    |> Map.pop(:layout, false) # assigns \u304b\u3089 :layout \u30ad\u30fc\u306e\u5024\u3092\u53d6\u308a\u51fa\u3059\u3002\n                               # \u3053\u3053\u3067\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067 {false, assigns} \u304c\u8fd4\u308b\n                               \n    |> render_within(module, template)\n  end\n```\n\n\u6700\u5f8c\u306b\u306f `render_within({false, assigns}, module, template)` \u3092\u547c\u3093\u3067\u3044\u308b\u3002\u3053\u308c\u306f `Phoenix.View` \u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\u3060\u3002\n\n## `Phoenix.View.render_within/3`\n\n```ex:phoenix/view.ex\n  defp render_within({{layout_mod, layout_tpl}, assigns}, inner_mod, template) do\n    # ...\n  end\n\n  defp render_within({false, assigns}, module, template) do\n    template\n    |> module.render(assigns)\n  end\n```\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/view.ex#L195-L209 )\n\n\u5019\u88dc\u304c2\u3064\u3042\u308b\u304c\u3001\u7b2c1\u5f15\u6570\u306b `{false, assigns}` \u3092\u6e21\u3057\u3066\u30de\u30c3\u30c1\u3059\u308b\u306e\u306f2\u3064\u76ee\u306e\u307b\u3046\u3060\u3002 `template |> module.render(assigns)` \u3068\u3042\u308b\u304c\u3001 `module` \u306f\u4f55\u3060\u308d\u3046\uff1f\n\n\u7b54\u3048\u306f\u3053\u306e\u8a18\u4e8b\u3092 `Phoenix.Controller.render` \u307e\u3067\u9061\u3063\u305f\u3068\u3053\u308d\u306b\u3042\u308b\u3002 `view = MyApp.FooView` \u3068\u3042\u308a\u3001\u305d\u308c\u304c\u3053\u3053\u3078\u304d\u3066 `module` \u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u3064\u307e\u308a\u3053\u3053\u3067\u306f `MyApp.FooView.render(template, assigns)` \u3092\u547c\u3093\u3067\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u3002\n\n## `MyApp.FooView.render/2`\n\n\u307e\u305f `MyApp` \u306e\u30b3\u30fc\u30c9\u306b\u623b\u3063\u3066\u304d\u305f\u3002 `FooView` \u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u2026\u2026\n\n```ex:web/views/foo_view.ex\ndefmodule MyApp.FooView do\n  use MyApp.Web, :view\nend\n```\n\n\u3053\u308c\u3060\u3051\u3002 `render/2` \u306f `use MyApp.Web, :view` \u304b\u3089\u6765\u3066\u3044\u308b\u306b\u9055\u3044\u306a\u3044\u3002\n\n`MyApp.Web` \u306f\u3044\u304f\u3064\u304b\u306e `use` \u3084 `import` \u3092\u675f\u306d\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3063\u305f\u306e\u3092\u899a\u3048\u3066\u3044\u308b\u3060\u308d\u3046\u304b\u3002\u4e2d\u8eab\u3092\u8aad\u3080\u904e\u7a0b\u306f\u4e00\u5ea6\u3084\u3063\u305f\u306e\u3067\u7701\u7565\u3057\u3088\u3046\u3002 `render/2` \u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u305d\u306e\u3046\u3061\u306e `use Phoenix.View, root: \"web/templates\"` \u3060\u3002\n\n## `use Phoenix.View`\n\n`use Phoenix.View` \u3059\u308b\u3068 `Phoenix.View.__using__/1` \u30de\u30af\u30ed\u304c\u547c\u3070\u308c\u308b\u3002\n\n```ex:phoenix/view.ex\n  defmacro __using__(options) do\n    if root = Keyword.get(options, :root) do\n      namespace =\n        # ...\n\n      quote do\n        import Phoenix.View\n\n        use Phoenix.Template, root:\n          Path.join(unquote(root),\n                    Phoenix.Template.module_to_template_root(__MODULE__, unquote(namespace), \"View\"))\n\n        # ...\n      end\n    else\n      raise \"expected :root to be given as an option\"\n    end\n  end\n```\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/view.ex#L120-L147 )\n\n\u3053\u3053\u306b\u306f `render/2` \u306e\u5b9a\u7fa9\u306f\u306a\u3044\u3002\u3068\u3059\u308c\u3070 `use Phoenix.Template, root: ...` \u306e\u4e2d\u3060\u3002\n\n## `use Phoenix.Template`\n\n```ex:phoenix/view.ex\n  defmacro __using__(options) do\n    root = Dict.fetch! options, :root\n\n    quote do\n      @template_root Path.relative_to_cwd(unquote(root))\n      @before_compile unquote(__MODULE__)\n\n      @doc \"\"\"\n      Renders the given template locally.\n      \"\"\"\n      def render(template, assigns \\\\ %{})\n\n      def render(template, assigns) when is_list(assigns) do\n        render(template, Enum.into(assigns, %{}))\n      end\n\n      def render(module, template) when is_atom(module) do\n        Phoenix.View.render(module, template, %{})\n      end\n\n      # ...\n    end\n  end\n```\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/template.ex#L110-L147 )\n\n\u3064\u3044\u306b `render/2` \u306e\u5b9a\u7fa9\u304c\u51fa\u3066\u304d\u305f\uff01\n\n\u3060\u304c\u3001\u3088\u304f\u898b\u308b\u30681\u3064\u76ee\u306b\u306f\u672c\u4f53\u304c\u306a\u304f\u30012\u3064\u76ee\u306b\u306f\u30ac\u30fc\u30c9\u304c\u3064\u3044\u3066\u3044\u308b\u30023\u3064\u76ee\u306b\u3082\u30ac\u30fc\u30c9\u304c\u3042\u308b\u3046\u3048\u306b\u5f15\u6570\u304c `(module, template)` \u3068\u4ed6\u3068\u306f\u9055\u3063\u3066\u3044\u308b\u3002\n\n\u3053\u306e\u6642\u70b9\u3067\u3001 `render/2` \u306e\u5f15\u6570\u306f `(template, assigns)` \u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3060\uff08\u601d\u3044\u51fa\u305b\u306a\u3051\u308c\u3070\u3053\u306e\u8a18\u4e8b\u3092 `MyApp.FooView.render(template, assigns)` \u3067\u691c\u7d22\uff09\u3002\u3055\u3089\u306b `assigns` \u306f Map \u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u30893\u3064\u306e `render/2` \u306e\u3069\u308c\u306b\u3082\u30de\u30c3\u30c1\u3057\u306a\u3044\u3002\n\n\u3068\u3059\u308c\u3070\u3001\u6b8b\u308b\u306f `@before_compile unquote(__MODULE__)` \u304c\u602a\u3057\u3044\u3002\n\n\u3053\u306e\u5c5e\u6027\u304c\u3053\u3053\u306b\u3042\u308b\u3068\u3001 `use Phoenix.Template` \u3057\u305f\u5074\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b `Phoenix.Template.__before_compile__/1` \u30de\u30af\u30ed\u304c\u8fd4\u3059\u30b3\u30fc\u30c9\u7247\u304c\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3053\u3068\u306b\u306a\u308b\uff08\u7406\u7531\u306f Elixir \u306e Module \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167 http://elixir-lang.org/docs/v1.0/elixir/Module.html \uff09\u3002\n\n\u305d\u306e\u30b3\u30fc\u30c9\u7247\u306e\u4e2d\u306b\u6c42\u3081\u308b `render/2` \u304c\u3042\u308b\u306f\u305a\u3060\u3002\n\n## `Phoenix.Template.__before_compile__/1`\n\n\u4ee5\u4e0b\u304c `__before_compile__/1` \u306e\u30b3\u30fc\u30c9\u3002\u5c11\u3057\u9577\u3044\u304c\u91cd\u8981\u306a\u7b87\u6240\u306a\u306e\u3067\u7701\u7565\u305b\u305a\u306b\u63b2\u8f09\u3059\u308b\u3002\u5f8c\u534a\u306e `quote line: -1 do ... end` \u304c\u8fd4\u308a\u5024\u3068\u306a\u308b\u30b3\u30fc\u30c9\u7247\u3060\u3002\n\n```ex:phoenix/template.ex\n  defmacro __before_compile__(env) do\n    root = Module.get_attribute(env.module, :template_root)\n\n    pairs = for path <- find_all(root) do\n      compile(path, root)\n    end\n\n    names = Enum.map(pairs, &elem(&1, 0))\n    codes = Enum.map(pairs, &elem(&1, 1))\n\n    # We are using line -1 because we don't want warnings coming from\n    # render/2 to be reported in case the user has defined a catch all\n    # render/2 clause.\n    quote line: -1 do\n      unquote(codes)\n\n      def render(tpl, %{render_existing: {__MODULE__, tpl}}) do\n        nil\n      end\n      def render(template, assigns) do\n        template_not_found(template, assigns)\n      end\n\n      @doc \"\"\"\n      Returns the template root alongside all templates.\n      \"\"\"\n      def __templates__ do\n        {@template_root, unquote(names)}\n      end\n\n      @doc \"\"\"\n      Returns true whenever the list of templates changes in the filesystem.\n      \"\"\"\n      def __phoenix_recompile__? do\n        unquote(hash(root)) != Template.hash(@template_root)\n      end\n    end\n  end\n```\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/template.ex#L150-L187 )\n\n\u3053\u306e\u4e2d\u3067 `render/2` \u306e\u5b9a\u7fa9\u306f2\u7b87\u6240\u3002\u7e70\u308a\u8fd4\u3059\u304c\u3001\u3053\u3053\u3067 `render/2` \u306b\u4e0e\u3048\u308b\u5f15\u6570\u306f `(template, assigns)` \u3060\u3002\u305d\u3057\u3066\u3053\u306e\u3068\u304d `assigns = %{conn: conn, foos: foos}` \u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u3068\u3059\u308b\u3068\u30011\u3064\u76ee\u306e `def render(tpl, %{render_existing: {__MODULE__, tpl}})` \u306f\u7b2c2\u5f15\u6570\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u3002\n\n\u6b8b\u308b2\u3064\u76ee\u306b\u306f\u7121\u4e8b\u30de\u30c3\u30c1\u3059\u308b\u304c\u30012\u3064\u76ee\u306f `template_not_found(template, assigns)` \u3068\u3044\u3046\u4e0d\u7a4f\u306a\u95a2\u6570\u3092\u547c\u3093\u3067\u3044\u308b\u3002\u305d\u3057\u3066\u3053\u306e\u95a2\u6570\u306f\u898b\u305f\u76ee\u3069\u304a\u308a\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\uff01\n\n\u3053\u3053\u307e\u3067\u6765\u3066\u884c\u304d\u8a70\u307e\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u5192\u982d\u3067\u6319\u3052\u305f\u95a2\u6570\u5b9a\u7fa9\u306e4\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u306e\u3069\u308c\u306b\u3082\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u3002 `def render` \u306f\u3042\u308b\u304c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u51e6\u7406\u3067\u306f\u306a\u304f\u4f8b\u5916\u3092\u6295\u3052\u3066\u3044\u308b\u3002 `use` \u3082 `import` \u3082\u898b\u3042\u305f\u3089\u306a\u3044\u3057 `@before_compile` \u3082\u306a\u3044\u3002\n\n\u6c17\u3092\u53d6\u308a\u76f4\u3057\u3066\u3082\u3046\u4e00\u5ea6\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u3088\u3046\u3002\u3053\u306e\u4e2d\u3067\u4e00\u898b\u3057\u3066\u305d\u308c\u3068\u5206\u304b\u3089\u306a\u3044 `render/2` \u306e\u5b9a\u7fa9\u304c\u73fe\u308c\u308b\u4f59\u5730\u304c\u3042\u308b\u3068\u3059\u308c\u3070\u3001\u305d\u308c\u306f `quote line: -1 do` \u76f4\u5f8c\u306e `unquote(codes)` \u3060\u3002\u4eee\u306b\u3053\u3053\u3067 `render/2` \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u4e0b\u306b\u7d9a\u304f `def render` \u3088\u308a\u3082\u5148\u306b\u30de\u30c3\u30c1\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n`codes` \u306f\u4f55\u304b\u3068\u3044\u3046\u3068\u3001 `compile(path, root)` \u3092\u4f55\u56de\u3082\u547c\u3073\u3001\u305d\u306e\u8fd4\u308a\u5024\u3092\u96c6\u3081\u3066\u4f5c\u3089\u308c\u3066\u3044\u308b\u3002 `compile/2` \u306f\u540c\u3058\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\u3060\u3002\u898b\u3066\u307f\u3088\u3046\u3002\n\n## `Phoenix.Template.compile/2`\n\n```ex:phoenix/template.ex\n  defp compile(path, root) do\n    name   = template_path_to_name(path, root)\n    defp   = String.to_atom(name)\n    ext    = Path.extname(path) |> String.lstrip(?.) |> String.to_atom\n    engine = Map.fetch!(engines(), ext)\n    quoted = engine.compile(path, name)\n\n    {name, quote do\n      @file unquote(path)\n      @external_resource unquote(path)\n\n      defp unquote(defp)(var!(assigns)) do\n        _ = var!(assigns)\n        unquote(quoted)\n      end\n\n      def render(unquote(name), assigns) do\n        unquote(defp)(assigns)\n      end\n    end}\n  end\n```\n\n( https://github.com/phoenixframework/phoenix/blob/v0.15.0/lib/phoenix/template.ex#L315-L335 )\n\n`def render(unquote(name), assigns)` \u304c\u3042\u308b\uff01\u3000\u3053\u306e `name` \u306e\u5024\u3092\u6c42\u3081\u308b\u306b\u3082\u7d06\u4f59\u66f2\u6298\u3042\u308b\u306e\u3060\u304c\u3001\u3059\u3063\u98db\u3070\u3057\u3066\u7b54\u3048\u3092\u66f8\u3044\u3066\u3057\u307e\u3046\u3068 `MyApp.FooView` \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u540d\u524d\u306e\u3069\u308c\u304b\u306b\u306a\u308b\u3002 `\"index.html\"` \u3084 `\"edit.html\"` \u306a\u3069\u3060\u3002\n\n`compile/2` \u3092\u4f55\u56de\u3082\u547c\u3093\u3067\u3044\u308b\u3068\u3059\u3050\u4e0a\u3067\u66f8\u3044\u305f\u304c\u3001\u6b63\u78ba\u306b\u8a00\u3048\u3070 `MyApp.FooView` \u306b\u95a2\u9023\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3059\u3079\u3066\u3092\u9806\u306b\u5f15\u6570\u306b\u3057\u3066 `compile/2` \u3092\u547c\u3093\u3067\u3044\u308b\u306e\u3060\u3002\n\n\u3068\u3059\u308b\u3068\u3001\u3053\u306e `def render` \u306f\u6b21\u306e\u3088\u3046\u306b\u5c55\u958b\u3055\u308c\u308b\uff1a\n\n```ex\ndef render(\"index.html\", assigns) do\n  quote(defp)(assigns)\nend\n\n# \u6ce8\u610f\uff1a quote(defp) \u306f :\"index.html\" \u306b\u5c55\u958b\u3055\u308c\u308b\u304c\u3001\n# \u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u3067\u6587\u5b57\u901a\u308a :\"index.html\"(assigns) \u3068\u66f8\u304f\u3068\u69cb\u6587\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n# quote do ... end \u306e\u4e2d\u3067\u3060\u3051\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u304c\u8a31\u3055\u308c\u308b\u3002\n# \u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u3067\u8a18\u53f7\u3092\u542b\u3080\u540d\u524d\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u306b\u306f MyModule.\"foo.bar\"() \u306e\u3088\u3046\u306b\u3059\u308b\u3002\n```\n\n\u7121\u4e8b\u306b `render/2` \u306e\u5b9a\u7fa9\u304c\u73fe\u308c\u305f\u3002\u3053\u306e\u5148\u3092\u8fbf\u308b\u3068\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u307e\u3067\u884c\u304d\u7740\u304f\u304c\u3001\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u306b\u3057\u3066\u304a\u3053\u3046\u3002\n\n\u3053\u306e `render/2` \u306e\u5b9a\u7fa9\u306f `@before_compile` \u306e\u306f\u305f\u3089\u304d\u3067 `MyApp.View` \u306b\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n## \u307e\u3068\u3081\uff1a\u4f55\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u305f\u306e\u304b\n\nPhoenix \u306e `MyApp.FooController` \u3067 `render(conn, \"index.html\", foos: foos)` \u3092\u547c\u3076\u3068\u3001 `MyApp.FooView.render/2` \u306e\u547c\u3073\u51fa\u3057\u306b\u884c\u304d\u7740\u304f\u3002\u3053\u306e `render/2` \u306f\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff1a\n\n```ex:web/views/foo_view.ex\ndefmodule MyApp.FooView do\n  use MyApp.Web, :view\n  \n  # ---- \u2193\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u633f\u5165\u3055\u308c\u308b\n  \n  def render(\"index.html\", assigns) do\n    # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u3092\u547c\u3076\n  end\n  def render(\"edit.html\", assigns) do\n    # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u3092\u547c\u3076\n  end\n  # ...\n  \n  # ----\nend\n```\n\n\u3082\u3057\u3082 `MyApp.FooView.render/2` \u306e\u51e6\u7406\u306b\u30d5\u30c3\u30af\u3057\u305f\u3044\u306a\u3089\u3001 `MayApp.FooView` \u306b `render/2` \u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3044\u3044\u3002\u305f\u3060\u3057\u6700\u7d42\u7684\u306b\u306f\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u633f\u5165\u3055\u308c\u305f `render/2` \u3092\u547c\u3070\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u5de5\u592b\u3059\u308b\u3053\u3068\u3002\u3055\u3082\u306a\u3044\u3068\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u305f\u307b\u3046\u306e\u95a2\u6570\u304c\u518d\u5e30\u7684\u306b\u547c\u3070\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n```ex:web/views/foo_view.ex\ndefmodule MyApp.FooView do\n  use MyApp.Web, :view\n  \n  def render(\"index.html\", %{foos: foos} = assigns) do\n    assigns = assigns\n    |> Map.drop([:foos])          # \u4ee5\u964d\u3053\u306e render/2 \u306b\u30de\u30c3\u30c1\u3055\u305b\u306a\u3044\n    |> Map.put(:new_foos, ...)\n    render(\"index.html\", assigns) # \u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u633f\u5165\u3055\u308c\u305f\u307b\u3046\u306e render/2 \u3092\u547c\u3076\n  end\n  \n  # ---- \u2193\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u633f\u5165\u3055\u308c\u308b\n  # \u7565\n  # ----\nend\n```\n", "tags": ["Elixir1.0.5", "Phoenix0.15.0"]}