{"context": "\u3053\u306e\u524d\u306e\u8ad6\u6587\u3067\u306f\u90f5\u4fbf\u756a\u53f7\u304b\u3089\u7def\u5ea6\u7d4c\u5ea6\u5ea7\u6a19\u3092\u6c42\u3081\u308b\u306e\u306bGoogle Maps Geocoding API\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\uff0c\u305d\u308c\u4ee5\u5916\u306b\u3082HeartRails\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u90f5\u4fbf\u756a\u53f7\u3084\u4f4f\u6240\u30c7\u30fc\u30bf\u306e\u5909\u63db\u7528API\uff08HeartRails Geo API\uff09\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306eAPI\u3092python\u304b\u3089\u4f7f\u3046\u5834\u5408\uff0crequests\u30d1\u30c3\u30b1\u30fc\u30b8\u3068json\u30d0\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308c\u3070\u4e8b\u8db3\u308a\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306a\u624b\u9806\u3068\u3057\u3066\u306f\uff0c\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30bf\u30fc\u3092payload\u306b\u8a2d\u5b9a\u3057\uff0crequests.get()\u3067API\u306eURL\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u6b63\u3057\u304f\u63a5\u7d9a\u3055\u308c\u308c\u3070\uff0c\u7d50\u679c\u304cjson\u5f62\u5f0f\u3067\u8fd4\u3063\u3066\u304d\u307e\u3059\u306e\u3067\uff0c\u3042\u3068\u306f\u5fc5\u8981\u306a\u90e8\u5206\u3060\u3051\u629c\u304d\u51fa\u3057\u307e\u3059\u3002\n\ngeo_coding2.py\n### sample script\nimport requests\nimport json\n\nurl = 'http://geoapi.heartrails.com/api/json'\npayload = {'method':'searchByPostal'}\npayload['postal']= '100-0001'\n\nres = requests.get(url, params=payload).json()['response']['location'][0]\nprint('%s, %s, %s, %s, %s, %s\\n' % (res['postal'], res['prefecture'], res['city'], res['town'], res['y'],res['x']))\n\n\n\u4e0a\u306e\u4f8b\u3067\u306f\uff0c\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u65b9\u6cd5\u3092searchByPostal\uff08\u90f5\u4fbf\u756a\u53f7\u691c\u7d22\uff09\u306b\uff0c\u691c\u7d22\u3059\u308b\u90f5\u4fbf\u756a\u53f7\u3092100-0001\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u5909\u63db\u3059\u3079\u304d\u90f5\u4fbf\u756a\u53f7\u30c7\u30fc\u30bf\u304c\u305f\u304f\u3055\u3093\u3042\u308b\u5834\u5408\u306b\u306f\uff0c\u305d\u308c\u3092\u30ea\u30b9\u30c8\u306b\u683c\u7d0d\u3057\u3066for\u30eb\u30fc\u30d7\u306a\u3069\u3067\u51e6\u7406\u3059\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u305f\u3060\u3057\uff0c\u4e00\u5ea6\u306b\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u5909\u63db\u3057\u305f\u5834\u5408\uff0c\u30a2\u30af\u30bb\u30b9\u5236\u9650\u304c\u304b\u3051\u3089\u308c\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f7f\u7528\u306b\u3042\u305f\u3063\u3066\u306f\uff0cAPI\u30b5\u30fc\u30d3\u30b9\u306e\u5229\u7528\u898f\u7d04\u3092\u9075\u5b88\u3059\u308b\u3088\u3046\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\n[\u3053\u306e\u524d\u306e\u8ad6\u6587](http://dx.doi.org/10.4992/jjpsy.87.14075)\u3067\u306f\u90f5\u4fbf\u756a\u53f7\u304b\u3089\u7def\u5ea6\u7d4c\u5ea6\u5ea7\u6a19\u3092\u6c42\u3081\u308b\u306e\u306bGoogle Maps Geocoding API\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\uff0c\u305d\u308c\u4ee5\u5916\u306b\u3082HeartRails\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u90f5\u4fbf\u756a\u53f7\u3084\u4f4f\u6240\u30c7\u30fc\u30bf\u306e\u5909\u63db\u7528API\uff08[HeartRails Geo API](http://geoapi.heartrails.com)\uff09\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306eAPI\u3092python\u304b\u3089\u4f7f\u3046\u5834\u5408\uff0c`requests`\u30d1\u30c3\u30b1\u30fc\u30b8\u3068`json`\u30d0\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308c\u3070\u4e8b\u8db3\u308a\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306a\u624b\u9806\u3068\u3057\u3066\u306f\uff0c\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30bf\u30fc\u3092`payload`\u306b\u8a2d\u5b9a\u3057\uff0c`requests.get()`\u3067API\u306eURL\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u6b63\u3057\u304f\u63a5\u7d9a\u3055\u308c\u308c\u3070\uff0c\u7d50\u679c\u304c`json`\u5f62\u5f0f\u3067\u8fd4\u3063\u3066\u304d\u307e\u3059\u306e\u3067\uff0c\u3042\u3068\u306f\u5fc5\u8981\u306a\u90e8\u5206\u3060\u3051\u629c\u304d\u51fa\u3057\u307e\u3059\u3002\n\n```python:geo_coding2.py\n### sample script\nimport requests\nimport json\n\nurl = 'http://geoapi.heartrails.com/api/json'\npayload = {'method':'searchByPostal'}\npayload['postal']= '100-0001'\n\nres = requests.get(url, params=payload).json()['response']['location'][0]\nprint('%s, %s, %s, %s, %s, %s\\n' % (res['postal'], res['prefecture'], res['city'], res['town'], res['y'],res['x']))\n```\n\n\u4e0a\u306e\u4f8b\u3067\u306f\uff0c\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u65b9\u6cd5\u3092`searchByPostal`\uff08\u90f5\u4fbf\u756a\u53f7\u691c\u7d22\uff09\u306b\uff0c\u691c\u7d22\u3059\u308b\u90f5\u4fbf\u756a\u53f7\u3092`100-0001`\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u5909\u63db\u3059\u3079\u304d\u90f5\u4fbf\u756a\u53f7\u30c7\u30fc\u30bf\u304c\u305f\u304f\u3055\u3093\u3042\u308b\u5834\u5408\u306b\u306f\uff0c\u305d\u308c\u3092\u30ea\u30b9\u30c8\u306b\u683c\u7d0d\u3057\u3066`for`\u30eb\u30fc\u30d7\u306a\u3069\u3067\u51e6\u7406\u3059\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u305f\u3060\u3057\uff0c\u4e00\u5ea6\u306b\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u5909\u63db\u3057\u305f\u5834\u5408\uff0c\u30a2\u30af\u30bb\u30b9\u5236\u9650\u304c\u304b\u3051\u3089\u308c\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f7f\u7528\u306b\u3042\u305f\u3063\u3066\u306f\uff0cAPI\u30b5\u30fc\u30d3\u30b9\u306e\u5229\u7528\u898f\u7d04\u3092\u9075\u5b88\u3059\u308b\u3088\u3046\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Python", "geo_coding", "GIS"]}