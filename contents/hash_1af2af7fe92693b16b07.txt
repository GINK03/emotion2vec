{"tags": ["Scheme"], "context": " More than 1 year has passed since last update.\u304c\u4fbf\u5229\u3060\u3063\u305f\u3002\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\u3002\n(define-syntax eqt\n  (syntax-rules ()\n    ((_ a b)\n     (test* (quote b) a b))))\n\n\u3053\u3044\u3064\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u3051\u3070\u3001\n(test* \"(tree->list-2  mytree)\" '(1 2 3 4 5 6 7) (tree->list-2 mytree))\n\n\u2191\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u305f\u30c6\u30b9\u30c8\u3092\u3001\n(eqt '(1 2 3 4 5 6 7) (tree->list-2 mytree))\n\n\u3053\u306e\u3088\u3046\u306b\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\u306a\u308b\u307b\u3069\u4fbf\u5229\u3002\u30c6\u30b9\u30c8\u306e\u30bf\u30a4\u30c8\u30eb\u5909\u66f4\u3057\u305f\u306e\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u5909\u66f4\u3057\u3066\u306a\u304b\u3063\u305f\u30fc\uff01\u3068\u304b\u9632\u6b62\u3067\u304d\u308b\u3002\n\n\u30c6\u30b9\u30c8\u4f8b\n\ntree->list-2\n(define (tree->list-2 tree)\n  (define (copy-to-list tree result-list)\n    (if (null? tree)\n      result-list\n      (copy-to-list (left-branch tree)\n                    (cons (entry tree)\n                          (copy-to-list (right-branch tree)\n                                        result-list)))))\n  (copy-to-list tree '()))\n\n\n\nmytree\n(define mytree\n  (make-tree 4\n             (make-tree 2\n                        (make-tree 1 '() '())\n                        (make-tree 3 '() '()))\n             (make-tree 6\n                        (make-tree 5 '() '())\n                        (make-tree 7 '() '()))))\n\n\n\ngosh\ngosh> mytree\n(4 (2 (1 () ()) (3 () ())) (6 (5 () ()) (7 () ())))\n\n\n\ngosh\ngosh> (eqt '(1 2 3 4 5 6 7) (tree->list-2 mytree))\ntest (tree->list-2 mytree), expects (1 2 3 4 5 6 7) ==> ok\n#<undef>\n\n\n\n\u304c\u4fbf\u5229\u3060\u3063\u305f\u3002\u30bd\u30fc\u30b9\u306f[\u3053\u3061\u3089](http://d.hatena.ne.jp/higepon/20071107/1194447993)\u3002\n\n~~~~scheme\n(define-syntax eqt\n  (syntax-rules ()\n    ((_ a b)\n     (test* (quote b) a b))))\n~~~~\n\n\u3053\u3044\u3064\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u3051\u3070\u3001\n\n~~~~scheme\n(test* \"(tree->list-2  mytree)\" '(1 2 3 4 5 6 7) (tree->list-2 mytree))\n~~~~\n\n\u2191\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u305f\u30c6\u30b9\u30c8\u3092\u3001\n\n~~~~scheme\n(eqt '(1 2 3 4 5 6 7) (tree->list-2 mytree))\n~~~~\n\n\u3053\u306e\u3088\u3046\u306b\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\u306a\u308b\u307b\u3069\u4fbf\u5229\u3002\u30c6\u30b9\u30c8\u306e\u30bf\u30a4\u30c8\u30eb\u5909\u66f4\u3057\u305f\u306e\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u5909\u66f4\u3057\u3066\u306a\u304b\u3063\u305f\u30fc\uff01\u3068\u304b\u9632\u6b62\u3067\u304d\u308b\u3002\n\n\n## \u30c6\u30b9\u30c8\u4f8b\n\n~~~~scheme:tree->list-2\n(define (tree->list-2 tree)\n  (define (copy-to-list tree result-list)\n    (if (null? tree)\n      result-list\n      (copy-to-list (left-branch tree)\n                    (cons (entry tree)\n                          (copy-to-list (right-branch tree)\n                                        result-list)))))\n  (copy-to-list tree '()))\n~~~~\n\n~~~~scheme:mytree\n(define mytree\n  (make-tree 4\n             (make-tree 2\n                        (make-tree 1 '() '())\n                        (make-tree 3 '() '()))\n             (make-tree 6\n                        (make-tree 5 '() '())\n                        (make-tree 7 '() '()))))\n~~~~\n\n~~~~scheme:gosh\ngosh> mytree\n(4 (2 (1 () ()) (3 () ())) (6 (5 () ()) (7 () ())))\n~~~~\n\n\n~~~~scheme:gosh\ngosh> (eqt '(1 2 3 4 5 6 7) (tree->list-2 mytree))\ntest (tree->list-2 mytree), expects (1 2 3 4 5 6 7) ==> ok\n#<undef>\n~~~~\n"}