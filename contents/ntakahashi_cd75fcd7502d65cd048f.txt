{"context": "\n\n\u516c\u5f0f\u30da\u30fc\u30b8\n\n\u516c\u5f0f\u30da\u30fc\u30b8\u306b\u3088\u308b\u3068Apache Storm\u306f'distributed realtime computation system'\uff0c\u5206\u6563\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u3002\u8a18\u4e8b\u306e\u57f7\u7b46\u6642\u70b9(2017\u5e742\u6708)\u3067v1.0.3\u304c\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\u4ee5\u4e0b\uff0c\u57fa\u672c\u7684\u306b\u516c\u5f0f\u30da\u30fc\u30b8\u306e\u5185\u5bb9\u306b\u6cbf\u3063\u3066\u66f8\u3044\u3066\u3044\u304f\u3002\n\nRationale\n\nMapReduce\u3084Hadoop\u306a\u3069\u306e\u9055\u3044\u306f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u51e6\u7406\u304c\u53ef\u80fd\u306a\u3053\u3068\u3002(\u4ee5\u524d\u306f\u30d0\u30c3\u30c1\u51e6\u7406\u306e\u307f)\n\u7279\u5fb4\u306f\u6b21\u306e\u901a\u308a\u3002\n\n\u5e45\u5e83\u3044\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\n\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u3002\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u30de\u30b7\u30f3\u3092\u5897\u3084\u3059\u3060\u3051\u3002\n\u30c7\u30fc\u30bf\u30ed\u30b9\u304c\u306a\u3044\u3002\n\u5805\u7262\u6027\nFault-tolerant (\u8010\u969c\u5bb3\u6027)\nProgramming language agnostic (\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u975e\u4f9d\u5b58)\n\n\n\u30b3\u30f3\u30bb\u30d7\u30c8\n\n\n\u30c8\u30dd\u30ed\u30b8\u30fc\n\u30b9\u30c8\u30ea\u30fc\u30e0\n\u30b9\u30d1\u30a6\u30c8 (spout)\n\u30dc\u30eb\u30c8 (bolt)\n\u30b9\u30c8\u30ea\u30fc\u30e0\u30b0\u30eb\u30fc\u30d7\n\u4fe1\u983c\u6027 (Reliability)\n\u30bf\u30b9\u30af\n\u30ef\u30fc\u30ab\u30fc (Workers)\n\n\n\u30c8\u30dd\u30ed\u30b8\u30fc\n\u30c8\u30dd\u30ed\u30b8\u30fc\u306f\u30b9\u30d1\u30a6\u30c8\u3068\u30dc\u30eb\u30c8\u306e\u3064\u306a\u304c\u308a\u306e\u3053\u3068\u3002\n\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\nStreams are defined with a schema that names the fields in the stream's tuples.\u3000\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6b21\u306e\u578b\u304c\u3042\u308b\u3002\n\nintegers, longs, shorts, bytes, strings, doubles, floats, booleans, and byte arrays. \n\n\n\u30b9\u30d1\u30a6\u30c8\n\u30b9\u30d1\u30a6\u30c8\u306f\u30c8\u30dd\u30ed\u30b8\u30fc\u306b\u304a\u3044\u3066\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u6e90\u3002(Spout\u306f\u6c34\u306a\u3069\u306e\u5674\u51fa\u3057\u306e\u3053\u3068)\n\u30b9\u30d1\u30a6\u30c8\u306b\u306f\u3000reliable \u304b unreliable\u304c\u3042\u308b. reliable spout\u306f\u51e6\u7406\u306b\u5931\u6557\u3057\u305f\u3089\u518d\u9001\u6a5f\u80fd\u304c\u3042\u308b\u3002 whereas an unreliable spout forgets about the tuple as soon as it is emitted.\n\n\n\u30dc\u30eb\u30c8\n\u3059\u3079\u3066\u306e\u8a08\u7b97\u306f\u30dc\u30eb\u30c8\u306e\u4e2d\u3067\u884c\u308f\u308c\u308b\n\u4f8b\u3048\u3070\uff0cfiltering, functions, aggregations, joins, talking to databases, \n\u8907\u96d1\u306a\u30c8\u30dd\u30ed\u30b8\u30fc\u3067\u306f\u30dc\u30eb\u30c8\u306f\u8907\u6570\u6bb5\u306b\u306a\u3063\u3066\u3082\u304b\u307e\u308f\u306a\u3044\u3002\n\u30dc\u30eb\u30c8\u306f\u8907\u6570\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u51fa\u529b\u3057\u3066\u3082\u304b\u307e\u308f\u306a\u3044\u3002declareStream method \u3092\u4f7f\u3063\u3066\u8907\u6570\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u30b0\u30eb\u30fc\u30d7\n\u30b9\u30c8\u30ea\u30fc\u30e0\u30b0\u30eb\u30fc\u30d7\u306f\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u30bf\u30b9\u30af\u306e\u9593\u3067\u3069\u306e\u3088\u3046\u306b\u5206\u5272\u3055\u308c\u308b\u306e\u304b\uff1f\u3092\u5b9a\u7fa9\u3059\u308b)\n\u300d\n\n8\u7a2e\u985e\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30b0\u30eb\u30fc\u30d7\u304c\u5b58\u5728\u3059\u308b\u3002\n1. Shuffle grouping : \u30bf\u30d7\u30eb\u304c\u30e9\u30f3\u30c0\u30e0\u306b\u30bf\u30b9\u30af\u306b\u5206\u914d\u3055\u308c\u308b\u3002\n2. Fields grouping\n3. Partial Key grouping\n4. All grouping : \u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u306b\u8907\u88fd\u3055\u308c\u308b\u3002\u6ce8\u610f\u3057\u3066\u4f7f\u3046\u3053\u3068\u3002\n5. Global grouping\n6. None grouping : \u73fe\u6642\u70b9\u3067\u306fShuffle grouping\u3068\u540c\u3058\u3002\n7. Direct grouping\n8. Local or shuffle grouping\n\n\u4fe1\u983c\u6027\nStorm guarantees that every spout tuple will be fully processed by the topology. (\u3059\u3079\u3066\u306e\u30b9\u30d1\u30a6\u30c8\u306f\u30c8\u30dd\u30ed\u30b8\u30fc\u306b\u3088\u308a\u5b8c\u5168\u306b\u51e6\u7406\u3055\u308c\u308b)\nEvery topology has a \"message timeout\" associated with it. If Storm fails to detect that a spout tuple has been completed within that timeout, then it fails the tuple and replays it later.(\u3059\u3079\u3066\u306e\u30c8\u30dd\u30ed\u30b8\u30fc\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u304c\u3042\u308b\u3002Storm\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u51fa\u3059\u308b\u3068\uff0c\u5f8c\u306b\u518d\u9001\u3059\u308b)\n\n\u30bf\u30b9\u30af\nEach spout or bolt executes as many tasks across the cluster.\n\n\u30ef\u30fc\u30ab\u30fc\nEach worker process is a physical JVM and executes a subset of all the tasks for the topology.\n\nAPI\nREST API\n\nhttp://<ui-host>:<ui-port>/api/v1/...\n\n\nTrident\n\nTrident is a high-level abstraction for doing realtime computing on top of Storm.\nStorm \u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\uff1f\u30e9\u30c3\u30d1\u30fc\u307f\u305f\u3044\u306a\u3082\u306e\uff1fJava\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nSet up a Zookeeper cluster\nInstall dependencies on Nimbus and worker machines\nDownload and extract a Storm release to Nimbus and worker machines\nFill in mandatory configurations into storm.yaml\nLaunch daemons under supervision using \"storm\" script and a supervisor of your choice\n\n\nZooKeeper\nStorm\u3067\u306fZooKeeper\u306f\u30af\u30e9\u30b9\u30bf\u306e\u8abf\u6574\u306e\u307f\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u51e6\u7406\u306b\u306f\u5229\u7528\u3055\u308c\u306a\u3044\u3002\n\nNimbus\u3068worker\u30de\u30b7\u30f3\u306e\u524d\u63d0\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nJava7 and Python 2.6.6\n(\u3053\u308c\u4ee5\u5916\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u52d5\u304f\u304b\u3082\u3057\u308c\u306a\u3044\u3057\uff0c\u52d5\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3002\u3002)\n\nStorm\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30fb\u89e3\u51cd\n\u3053\u3053\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttps://github.com/apache/storm/releases\n\nstorm.yaml\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306fconf/storm.yaml\n\u8a2d\u5b9a\u9805\u76ee\u306f\uff0c\n1 storm.zookeeper.servers (zookeeper\u30b5\u30fc\u30d0\u30fc\u306eIP)\uff0cstorm.zookeeper.port(\u540c\u3058\u304f\u30dd\u30fc\u30c8\u756a\u53f7)\n\nconf/storm.yaml\nstorm.zookeeper.servers:\n  - \"111.222.333.444\"\n  - \"555.666.777.888\"\n\n\n2 storm.local.dir\u3000(\u30c7\u30fc\u30e2\u30f3\u304c\u4f7f\u3046\u5834\u6240)\n\nconf/storm.yaml\nstorm.local.dir: \"/mnt/storm\"\n\n\n3 nimbus.seeds : The worker nodes need to know which machines are the candidate of master in order to download topology jars and confs. \n\nconf/storm.yaml\nnimbus.seeds: [\"111.222.333.44\"]\n\n\n4 supervisor.slots.ports (worker\u304c\u4f7f\u3046\u30dd\u30fc\u30c8)\n\nconf/storm.yaml\nsupervisor.slots.ports:\n    - 6700\n    - 6701\n    - 6702\n    - 6703\n\n\n\n\u8d77\u52d5\n\u6700\u5f8c\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u30c7\u30fc\u30e2\u30f3\u306e\u8d77\u52d5\u3002Storm\u306f\u72b6\u614b\u3092\u6301\u305f\u306a\u3044\u306e\u3067\uff0c\u3044\u3064\u3067\u3082\u5b89\u5168\u306b\u505c\u6b62\u3067\u304d\u308b\u3002\n\u30c7\u30fc\u30e2\u30f3\u306e\u8d77\u52d5\u65b9\u6cd5\n\nNimbus : \"bin/storm nimbus\" under supervision on the master machine.\nSupervisor : \"bin/storm supervisor\" under supervision on each worker machine\nUI : \"bin/storm ui\" under supervision. http://{ui host}:8080.\n\n\n\n\u6b21\u8aad\u3080\u3082\u306e\nTutorial\n# [\u516c\u5f0f\u30da\u30fc\u30b8](http://storm.apache.org/)\n\u516c\u5f0f\u30da\u30fc\u30b8\u306b\u3088\u308b\u3068Apache Storm\u306f'distributed realtime computation system'\uff0c\u5206\u6563\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u3002\u8a18\u4e8b\u306e\u57f7\u7b46\u6642\u70b9(2017\u5e742\u6708)\u3067v1.0.3\u304c\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\u4ee5\u4e0b\uff0c\u57fa\u672c\u7684\u306b\u516c\u5f0f\u30da\u30fc\u30b8\u306e\u5185\u5bb9\u306b\u6cbf\u3063\u3066\u66f8\u3044\u3066\u3044\u304f\u3002\n\n## [Rationale](http://storm.apache.org/releases/current/Rationale.html)\nMapReduce\u3084Hadoop\u306a\u3069\u306e\u9055\u3044\u306f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u51e6\u7406\u304c\u53ef\u80fd\u306a\u3053\u3068\u3002(\u4ee5\u524d\u306f\u30d0\u30c3\u30c1\u51e6\u7406\u306e\u307f)\n\u7279\u5fb4\u306f\u6b21\u306e\u901a\u308a\u3002\n\n- \u5e45\u5e83\u3044\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\n- \u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u3002\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u30de\u30b7\u30f3\u3092\u5897\u3084\u3059\u3060\u3051\u3002\n- \u30c7\u30fc\u30bf\u30ed\u30b9\u304c\u306a\u3044\u3002\n- \u5805\u7262\u6027\n- Fault-tolerant (\u8010\u969c\u5bb3\u6027)\n- Programming language agnostic (\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u975e\u4f9d\u5b58)\n\n# [\u30b3\u30f3\u30bb\u30d7\u30c8](http://storm.apache.org/releases/1.0.3/Concepts.html)\n1. \u30c8\u30dd\u30ed\u30b8\u30fc\n2. \u30b9\u30c8\u30ea\u30fc\u30e0\n3. \u30b9\u30d1\u30a6\u30c8 (spout)\n4. \u30dc\u30eb\u30c8 (bolt)\n5. \u30b9\u30c8\u30ea\u30fc\u30e0\u30b0\u30eb\u30fc\u30d7\n6. \u4fe1\u983c\u6027 (Reliability)\n7. \u30bf\u30b9\u30af\n8. \u30ef\u30fc\u30ab\u30fc (Workers)\n\n## \u30c8\u30dd\u30ed\u30b8\u30fc\n\u30c8\u30dd\u30ed\u30b8\u30fc\u306f\u30b9\u30d1\u30a6\u30c8\u3068\u30dc\u30eb\u30c8\u306e\u3064\u306a\u304c\u308a\u306e\u3053\u3068\u3002\n\n![topology.png](https://qiita-image-store.s3.amazonaws.com/0/26865/b088d8ec-0b6d-d8eb-0f27-b6414982a652.png)\n\n## \u30b9\u30c8\u30ea\u30fc\u30e0\nStreams are defined with a schema that names the fields in the stream's tuples.\u3000\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6b21\u306e\u578b\u304c\u3042\u308b\u3002\n>integers, longs, shorts, bytes, strings, doubles, floats, booleans, and byte arrays. \n\n## \u30b9\u30d1\u30a6\u30c8\n\u30b9\u30d1\u30a6\u30c8\u306f\u30c8\u30dd\u30ed\u30b8\u30fc\u306b\u304a\u3044\u3066\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u6e90\u3002(Spout\u306f\u6c34\u306a\u3069\u306e\u5674\u51fa\u3057\u306e\u3053\u3068)\n\u30b9\u30d1\u30a6\u30c8\u306b\u306f\u3000**reliable \u304b unreliable**\u304c\u3042\u308b. reliable spout\u306f\u51e6\u7406\u306b\u5931\u6557\u3057\u305f\u3089\u518d\u9001\u6a5f\u80fd\u304c\u3042\u308b\u3002 whereas an unreliable spout forgets about the tuple as soon as it is emitted.\n\n![storm-flow.png](https://qiita-image-store.s3.amazonaws.com/0/26865/7517e6c0-f814-440a-04a2-6d47989e2e45.png)\n\n## \u30dc\u30eb\u30c8\n\u3059\u3079\u3066\u306e\u8a08\u7b97\u306f\u30dc\u30eb\u30c8\u306e\u4e2d\u3067\u884c\u308f\u308c\u308b\n\u4f8b\u3048\u3070\uff0cfiltering, functions, aggregations, joins, talking to databases, \n\n\u8907\u96d1\u306a\u30c8\u30dd\u30ed\u30b8\u30fc\u3067\u306f\u30dc\u30eb\u30c8\u306f\u8907\u6570\u6bb5\u306b\u306a\u3063\u3066\u3082\u304b\u307e\u308f\u306a\u3044\u3002\n\u30dc\u30eb\u30c8\u306f\u8907\u6570\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u51fa\u529b\u3057\u3066\u3082\u304b\u307e\u308f\u306a\u3044\u3002**declareStream** method \u3092\u4f7f\u3063\u3066\u8907\u6570\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n## \u30b9\u30c8\u30ea\u30fc\u30e0\u30b0\u30eb\u30fc\u30d7\n\u30b9\u30c8\u30ea\u30fc\u30e0\u30b0\u30eb\u30fc\u30d7\u306f\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u30bf\u30b9\u30af\u306e\u9593\u3067\u3069\u306e\u3088\u3046\u306b\u5206\u5272\u3055\u308c\u308b\u306e\u304b\uff1f\u3092\u5b9a\u7fa9\u3059\u308b)\n\u300d\n![topology-tasks.png](https://qiita-image-store.s3.amazonaws.com/0/26865/6d0538be-73aa-7ea3-3408-31dff7ee6de0.png)\n\n8\u7a2e\u985e\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30b0\u30eb\u30fc\u30d7\u304c\u5b58\u5728\u3059\u308b\u3002\n1. Shuffle grouping : \u30bf\u30d7\u30eb\u304c\u30e9\u30f3\u30c0\u30e0\u306b\u30bf\u30b9\u30af\u306b\u5206\u914d\u3055\u308c\u308b\u3002\n2. Fields grouping\n3. Partial Key grouping\n4. All grouping : \u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u306b\u8907\u88fd\u3055\u308c\u308b\u3002\u6ce8\u610f\u3057\u3066\u4f7f\u3046\u3053\u3068\u3002\n5. Global grouping\n6. None grouping : \u73fe\u6642\u70b9\u3067\u306fShuffle grouping\u3068\u540c\u3058\u3002\n7. Direct grouping\n8. Local or shuffle grouping\n\n## \u4fe1\u983c\u6027\nStorm guarantees that every spout tuple will be **fully processed** by the topology. (\u3059\u3079\u3066\u306e\u30b9\u30d1\u30a6\u30c8\u306f\u30c8\u30dd\u30ed\u30b8\u30fc\u306b\u3088\u308a\u5b8c\u5168\u306b\u51e6\u7406\u3055\u308c\u308b)\nEvery topology has a \"message timeout\" associated with it. If Storm fails to detect that a spout tuple has been completed within that timeout, then it fails the tuple and replays it later.(\u3059\u3079\u3066\u306e\u30c8\u30dd\u30ed\u30b8\u30fc\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u304c\u3042\u308b\u3002Storm\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u51fa\u3059\u308b\u3068\uff0c\u5f8c\u306b\u518d\u9001\u3059\u308b)\n\n## \u30bf\u30b9\u30af\nEach spout or bolt executes as many tasks across the cluster.\n\n## \u30ef\u30fc\u30ab\u30fc\nEach worker process is a physical JVM and executes a subset of all the tasks for the topology.\n\n#API\n[REST API](http://storm.apache.org/releases/1.0.3/STORM-UI-REST-API.html)\n> http://\\<ui-host\\>:\\<ui-port\\>/api/v1/...\n\n#[Trident](http://storm.apache.org/releases/1.0.3/Trident-tutorial.html)\nTrident is a high-level abstraction for doing realtime computing on top of Storm.\nStorm \u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\uff1f\u30e9\u30c3\u30d1\u30fc\u307f\u305f\u3044\u306a\u3082\u306e\uff1fJava\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\n# \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n1. Set up a Zookeeper cluster\n2. Install dependencies on Nimbus and worker machines\n3. Download and extract a Storm release to Nimbus and worker machines\n4. Fill in mandatory configurations into storm.yaml\n5. Launch daemons under supervision using \"storm\" script and a supervisor of your choice\n\n## ZooKeeper\nStorm\u3067\u306fZooKeeper\u306f\u30af\u30e9\u30b9\u30bf\u306e\u8abf\u6574\u306e\u307f\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u51e6\u7406\u306b\u306f\u5229\u7528\u3055\u308c\u306a\u3044\u3002\n\n## Nimbus\u3068worker\u30de\u30b7\u30f3\u306e\u524d\u63d0\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nJava7 and Python 2.6.6\n(\u3053\u308c\u4ee5\u5916\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u52d5\u304f\u304b\u3082\u3057\u308c\u306a\u3044\u3057\uff0c\u52d5\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3002\u3002)\n\n## Storm\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30fb\u89e3\u51cd\n\u3053\u3053\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttps://github.com/apache/storm/releases\n\n## storm.yaml\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f**conf/storm.yaml**\n\u8a2d\u5b9a\u9805\u76ee\u306f\uff0c\n1 storm.zookeeper.servers (zookeeper\u30b5\u30fc\u30d0\u30fc\u306eIP)\uff0cstorm.zookeeper.port(\u540c\u3058\u304f\u30dd\u30fc\u30c8\u756a\u53f7)\n\n```conf/storm.yaml\nstorm.zookeeper.servers:\n  - \"111.222.333.444\"\n  - \"555.666.777.888\"\n```\n\n2 storm.local.dir\u3000(\u30c7\u30fc\u30e2\u30f3\u304c\u4f7f\u3046\u5834\u6240)\n\n```conf/storm.yaml\nstorm.local.dir: \"/mnt/storm\"\n```\n\n3 nimbus.seeds : The worker nodes need to know which machines are the candidate of master in order to download topology jars and confs. \n\n```conf/storm.yaml\nnimbus.seeds: [\"111.222.333.44\"]\n```\n\n4 supervisor.slots.ports (worker\u304c\u4f7f\u3046\u30dd\u30fc\u30c8)\n\n```conf/storm.yaml\nsupervisor.slots.ports:\n    - 6700\n    - 6701\n    - 6702\n    - 6703\n```\n\n# \u8d77\u52d5\n\u6700\u5f8c\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u30c7\u30fc\u30e2\u30f3\u306e\u8d77\u52d5\u3002Storm\u306f\u72b6\u614b\u3092\u6301\u305f\u306a\u3044\u306e\u3067\uff0c\u3044\u3064\u3067\u3082\u5b89\u5168\u306b\u505c\u6b62\u3067\u304d\u308b\u3002\n\u30c7\u30fc\u30e2\u30f3\u306e\u8d77\u52d5\u65b9\u6cd5\n\n1. Nimbus : \"bin/storm nimbus\" under supervision on the master machine.\n2. Supervisor : \"bin/storm supervisor\" under supervision on each worker machine\n3. UI : \"bin/storm ui\" under supervision. http://{ui host}:8080.\n\n![storm-cluster.png](https://qiita-image-store.s3.amazonaws.com/0/26865/e6ba0cc1-1563-57a6-14ba-6495e1d1c2c5.png)\n\n# \u6b21\u8aad\u3080\u3082\u306e\n[Tutorial](http://storm.apache.org/releases/current/Tutorial.html)\n\n\n\n", "tags": ["storm"]}