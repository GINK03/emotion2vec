{"context": " More than 1 year has passed since last update.\n\nPython API\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3059\u308c\u3070\u52d5\u304f\u3002\nimport ansible.runner\n\nrunner = ansible.runner.Runner(\n   module_name='\u30e2\u30b8\u30e5\u30fc\u30eb\u540d',\n   module_args='\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u6e21\u3059\u5f15\u6570',\n   pattern='\u30b0\u30eb\u30fc\u30d7\u540d\u306e\u30d1\u30bf\u30fc\u30f3(\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u306f*)',\n   forks=\u4e26\u5217\u6570\n)\ndatastructure = runner.run()\n\n\n\u4f8b\n\u4ee5\u4e0b\u306b\u3001\u5bfe\u8c61\u306e\u30b5\u30fc\u30d0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308bPython\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8abf\u3079\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8868\u793a\u3059\u308b\u3002\n\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u8fd4\u3055\u308c\u305f\u5834\u5408\u306b\u306f[NG]\u3068\u305d\u306e\u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u3092\u8868\u793a\u3057\u3001\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f[OK]\u3068Python\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a\u3059\u308b\u3002\n#!/usr/bin/python\n\nimport ansible.runner\nimport sys\n\n# construct the ansible runner and execute on all hosts\nresults = ansible.runner.Runner(\n    pattern='*', forks=10,\n    module_name='shell', module_args='python -V',\n).run()\n\nif results is None:\n   print \"No hosts found\"\n   sys.exit(1)\n\nfor (hostname, result) in results['contacted'].items():\n    if 'stderr' in result:\n        content = '[NG] ' + result['stderr']\n    else:\n        content = '[OK] ' + result['stdout']\n    print '%s:%s' %(hostname, )\n\n\u660e\u65e5\u306f\u65e5\u672c\u6700\u5927\u7d1a\u306e\u533b\u7642\u5f93\u4e8b\u8005\u5c02\u7528\u30b5\u30a4\u30c8m3.com\u3092\u904b\u55b6\u3059\u308b\u30a8\u30e0\u30b9\u30ea\u30fc\u306e\u5bfa\u5ca1 \u826f\u77e9\u3055\u3093\u3067\u3059\u3002\u3069\u3093\u306a\u30c8\u30d4\u30c3\u30af\u304c\u5f85\u3061\u53d7\u3051\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u305d\u308c\u306f\u660e\u65e5\u306e\u304a\u697d\u3057\u307f\u3067\u3059\u3002\u305d\u308c\u3067\u306f\u4eca\u65e5\u306f\u3053\u3053\u307e\u3067\u3002\n## Python API\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3059\u308c\u3070\u52d5\u304f\u3002\n\n```py\nimport ansible.runner\n\nrunner = ansible.runner.Runner(\n   module_name='\u30e2\u30b8\u30e5\u30fc\u30eb\u540d',\n   module_args='\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u6e21\u3059\u5f15\u6570',\n   pattern='\u30b0\u30eb\u30fc\u30d7\u540d\u306e\u30d1\u30bf\u30fc\u30f3(\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u306f*)',\n   forks=\u4e26\u5217\u6570\n)\ndatastructure = runner.run()\n```\n\n## \u4f8b\n\u4ee5\u4e0b\u306b\u3001\u5bfe\u8c61\u306e\u30b5\u30fc\u30d0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308bPython\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8abf\u3079\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8868\u793a\u3059\u308b\u3002\n\u6a19\u6e96\u30a8\u30e9\u30fc\u304c\u8fd4\u3055\u308c\u305f\u5834\u5408\u306b\u306f[NG]\u3068\u305d\u306e\u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u3092\u8868\u793a\u3057\u3001\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f[OK]\u3068Python\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a\u3059\u308b\u3002\n\n```py\n#!/usr/bin/python\n\nimport ansible.runner\nimport sys\n\n# construct the ansible runner and execute on all hosts\nresults = ansible.runner.Runner(\n    pattern='*', forks=10,\n    module_name='shell', module_args='python -V',\n).run()\n\nif results is None:\n   print \"No hosts found\"\n   sys.exit(1)\n\nfor (hostname, result) in results['contacted'].items():\n    if 'stderr' in result:\n        content = '[NG] ' + result['stderr']\n    else:\n        content = '[OK] ' + result['stdout']\n    print '%s:%s' %(hostname, )\n```\n\n\u660e\u65e5\u306f\u65e5\u672c\u6700\u5927\u7d1a\u306e\u533b\u7642\u5f93\u4e8b\u8005\u5c02\u7528\u30b5\u30a4\u30c8m3.com\u3092\u904b\u55b6\u3059\u308b\u30a8\u30e0\u30b9\u30ea\u30fc\u306e[\u5bfa\u5ca1 \u826f\u77e9](http://qiita.com/yteraoka)\u3055\u3093\u3067\u3059\u3002\u3069\u3093\u306a\u30c8\u30d4\u30c3\u30af\u304c\u5f85\u3061\u53d7\u3051\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u305d\u308c\u306f\u660e\u65e5\u306e\u304a\u697d\u3057\u307f\u3067\u3059\u3002\u305d\u308c\u3067\u306f\u4eca\u65e5\u306f\u3053\u3053\u307e\u3067\u3002", "tags": ["Ansible", "Python", "pip", "easy_install", "YAML"]}