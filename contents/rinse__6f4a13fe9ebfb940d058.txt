{"context": "\n\n\u30e9\u30e0\u30c0\u5f0f\u3068\u306f\nC++\u306e\u30e9\u30e0\u30c0\u5f0f\u306f\u3001\u6700\u5c0f\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3067\u3059\u3002\n\n\u30ad\u30e3\u30d7\u30c1\u30e3\n\u30ad\u30e3\u30d7\u30c1\u30e3\u3068\u306f\u3001\u30e9\u30e0\u30c0\u5f0f\u306e\u5916\u306e\u5909\u6570\u306a\u3069\u3092\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001\u30e1\u30f3\u30d0\u5909\u6570\u3068\u3057\u3066\u6301\u305f\u305b\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u4f8b\u3067\u3059\u304c\u3001\u53c2\u7167\u30ad\u30e3\u30d7\u30c1\u30e3\u3082\u5927\u5dee\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u305f\u3060\u3057\u3001\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u306f\u5185\u90e8\u306b\u30b3\u30d4\u30fc\u3092\u6301\u3064\u306e\u3067\u3001\u5927\u304d\u306a\u69cb\u9020\u4f53\u306a\u3093\u304b\u3092\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u3067\u6301\u3064\u3068sizeof( lambda )\u304c\u81a8\u308c\u4e0a\u304c\u308a\u307e\u3059\u3002\u5f53\u7136\u3067\u3059\u304c\u3001\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u969b\u306b\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u307e\u3059\u306e\u3067\u3001\u30b3\u30d4\u30fc\u304c\u91cd\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u306e\u306f\u304a\u3059\u3059\u3081\u3067\u304d\u307e\u305b\u3093\u3002\n\u6ce8\u610f\u3059\u308b\u3068\u3053\u308d\u306f\u3001\u30e9\u30e0\u30c0\u5f0f\u306eoperator()\u306fconst\u4fee\u98fe\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u5834\u5408const\u4fee\u98fe\u3055\u308c\u3066\u3044\u306a\u3044\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\u30e9\u30e0\u30c0\u5f0f\u306econst\u4fee\u98fe\u3092\u5916\u3059\u306b\u306f\u3001mutable\u3092\u4f7f\u3044\u307e\u3059\u3002[]() mutable ->void {};\n[s]{ s.memfun(); };\n\nclass _Lambda\n{\npublic:\n  _Lambda( const something& s ) : s( s ) {}\n  void operator()() const { s.memfun(); }\nprivate:\n  something s;\n};\n_Lambda lambda( s );\n\n\n\u30e0\u30fc\u30d6\u30ad\u30e3\u30d7\u30c1\u30e3\nC++14\u304b\u3089\u3001\u30ad\u30e3\u30d7\u30c1\u30e3\u306b\u521d\u671f\u5316\u5b50\u3068\u5225\u540d\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n[ vvlln = very_very_long_long_name ]{ vvlln.dosomething(); };\n[ N_plus_1 = n + 1 ] { std::cout << N_plus_1 << std::endl; };\n\n\u3053\u308c\u306b\u3088\u308a\u3001C++11\u3067\u306f\u3067\u304d\u306a\u304b\u3063\u305f\u30e0\u30fc\u30d6\u30ad\u30e3\u30d7\u30c1\u30e3\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n[ something = std::move( something ) ] { something.dosomething(); };\n\n\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\n\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u72ec\u81ea\u306b\u751f\u6210\u3059\u308b\u4e00\u610f\u306e\u578b\u3068\u3044\u3046\u304b\u305f\u3061\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u306fdecltype\u306a\u3069\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u306b\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u3092\u4e0e\u3048\u305f\u3044\u5834\u5408\u306a\u3069\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u3067\u63a8\u8ad6\u3057\u3066\u3042\u3052\u308b\u306e\u307f\u3068\u306a\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u3092\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u30e9\u30e0\u30c0\u5f0f\u306f\u30b3\u30d4\u30fc\u3001\u30e0\u30fc\u30d6\u4ee5\u5916\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u57fa\u672c\u7684\u306bdelete\u3055\u308c\u3066\u3044\u308b(operator= \u306f\u30b3\u30d4\u30fc/\u30e0\u30fc\u30d6\u3082\u542b\u3081\u3066\u524a\u9664\u3055\u308c\u3066\u3044\u308b)\u306e\u3067\u3001\u7d99\u627f\u3057\u3066\u3082\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\ntemplate < class _Base >\nstruct test0 : public _Base\n{\n};\n\ntemplate < class Ty >\ntest0 < Ty > test1( const Ty & )\n{\n  return test0 < Ty >();  // test0() is implicitly deleted!\n}\n\nint main( int arg, char** argv )\n{\n  auto _Test = test1( [] { std::cout << \"abc\" << std::endl; } );\n  _Test();\n}\n\n\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e9\u30e0\u30c0\n// \u4ee5\u964d\u30015/9\u306b\u8ffd\u8a18\u3068\u4fee\u6b63\u3092\u52a0\u3048\u307e\u3057\u305f\u3002\nC++14\u304b\u3089\u3001\u30e9\u30e0\u30c0\u5f0f\u306f\u5f15\u6570\u306bauto\u3092\u53d7\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nauto lambda0 = []( auto a, auto b ) { return a + b; };\n\u3053\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e9\u30e0\u30c0\u306f\u30e1\u30f3\u30d0\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u307e\u3059\u3002\n\u4e0a\u306e\u30e9\u30e0\u30c0\u5f0f\u3067\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u3067\u3057\u3087\u3046\u3002\n\nclass _Lambda0\n{\npublic:\n  template< class Ty1, class Ty2 >\n  auto operator()( Ty1 a, Ty2 b ) const { return a + b; }\n};\n_Lambda0 lambda0;\n\n\u623b\u308a\u5024\u306fauto\u3067\u3059\u3002decltype(auto)\u3068\u306f\u7570\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nauto lambda1 = []( auto& a ) { return a; }\nauto lambda2 = []( auto& a ) -> decltype( auto ) { return ( a ); }\nlambda1( value ) = 12; // oops, lvalue required\nlambda2( value ) = 13; // OK, the return type is int&\n\n\u307e\u305f\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e9\u30e0\u30c0\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u308b\u306e\u3067\u3001\u5f53\u7136\u53ef\u5909\u9577\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u53d7\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u306d\u3002\n\nauto lambda3 =\n  []( auto func, auto&&... args ) -> decltype( auto )\n  {\n    return func( std::forward < decltype( args ) >( args )... );\n  };\n\n\u771f\u9762\u76ee\u306b\u66f8\u304f\u3068\u5927\u5909\u3067\u3059\u3002\u306a\u304a\u3001mutable\u306fsth.dosomething\u304cconst\u4fee\u98fe\u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u547c\u3079\u308b\u3088\u3046\u306b\u3064\u3051\u3066\u3044\u307e\u3059\u3002\n\u4e88\u5b9a\u3057\u3066\u3044\u305f\u3088\u308a\u3082\u3060\u3089\u3060\u3089\u3068\u8ffd\u8a18\u3092\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e9\u30e0\u30c0\u306e\u8a73\u7d30\u3092\u304b\u304d\u8db3\u3057\u305f\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30e9\u30e0\u30c0\u5f0f\u306e\u623b\u308a\u5024\u306e\u578b\n// \u4ee5\u964d\u306f10/25\u306b\u8ffd\u8a18\u3057\u305f\u5185\u5bb9\u3067\u3059\u3002\n\u30e9\u30e0\u30c0\u5f0f\u306e\u623b\u308a\u5024\u306f\u660e\u793a\u3057\u306a\u3044\u9650\u308aauto\u306b\u306a\u308a\u307e\u3059\uff08\u901a\u5e38\u306e\u95a2\u6570\u306bauto\u3092\u6307\u5b9a\u3067\u304d\u306a\u3044C++11\u3067\u3082\u540c\u69d8\u3067\u3059\uff09\u3002\n\u9593\u9055\u3044\u306a\u3069\u6c17\u3065\u3044\u305f\u70b9\u304c\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3092\u304f\u3060\u3055\u3044\u3002\n#\u30e9\u30e0\u30c0\u5f0f\u3068\u306f\nC++\u306e\u30e9\u30e0\u30c0\u5f0f\u306f\u3001\u6700\u5c0f\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3067\u3059\u3002\n\n#\u30ad\u30e3\u30d7\u30c1\u30e3\n\u30ad\u30e3\u30d7\u30c1\u30e3\u3068\u306f\u3001\u30e9\u30e0\u30c0\u5f0f\u306e\u5916\u306e\u5909\u6570\u306a\u3069\u3092\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001\u30e1\u30f3\u30d0\u5909\u6570\u3068\u3057\u3066\u6301\u305f\u305b\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u4f8b\u3067\u3059\u304c\u3001\u53c2\u7167\u30ad\u30e3\u30d7\u30c1\u30e3\u3082\u5927\u5dee\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u305f\u3060\u3057\u3001\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u306f\u5185\u90e8\u306b\u30b3\u30d4\u30fc\u3092\u6301\u3064\u306e\u3067\u3001\u5927\u304d\u306a\u69cb\u9020\u4f53\u306a\u3093\u304b\u3092\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u3067\u6301\u3064\u3068sizeof( lambda )\u304c\u81a8\u308c\u4e0a\u304c\u308a\u307e\u3059\u3002\u5f53\u7136\u3067\u3059\u304c\u3001\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u969b\u306b\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u307e\u3059\u306e\u3067\u3001\u30b3\u30d4\u30fc\u304c\u91cd\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u306e\u306f\u304a\u3059\u3059\u3081\u3067\u304d\u307e\u305b\u3093\u3002\n\u6ce8\u610f\u3059\u308b\u3068\u3053\u308d\u306f\u3001\u30e9\u30e0\u30c0\u5f0f\u306eoperator()\u306fconst\u4fee\u98fe\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u5834\u5408const\u4fee\u98fe\u3055\u308c\u3066\u3044\u306a\u3044\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\u30e9\u30e0\u30c0\u5f0f\u306econst\u4fee\u98fe\u3092\u5916\u3059\u306b\u306f\u3001mutable\u3092\u4f7f\u3044\u307e\u3059\u3002`[]() mutable ->void {};`\n\n```cpp\n[s]{ s.memfun(); };\n\nclass _Lambda\n{\npublic:\n  _Lambda( const something& s ) : s( s ) {}\n  void operator()() const { s.memfun(); }\nprivate:\n  something s;\n};\n_Lambda lambda( s );\n```\n\n##\u30e0\u30fc\u30d6\u30ad\u30e3\u30d7\u30c1\u30e3\nC++14\u304b\u3089\u3001\u30ad\u30e3\u30d7\u30c1\u30e3\u306b\u521d\u671f\u5316\u5b50\u3068\u5225\u540d\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```cpp\n\n[ vvlln = very_very_long_long_name ]{ vvlln.dosomething(); };\n[ N_plus_1 = n + 1 ] { std::cout << N_plus_1 << std::endl; };\n```\n\n\u3053\u308c\u306b\u3088\u308a\u3001C++11\u3067\u306f\u3067\u304d\u306a\u304b\u3063\u305f\u30e0\u30fc\u30d6\u30ad\u30e3\u30d7\u30c1\u30e3\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n`[ something = std::move( something ) ] { something.dosomething(); };`\n\n#\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\n\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u72ec\u81ea\u306b\u751f\u6210\u3059\u308b\u4e00\u610f\u306e\u578b\u3068\u3044\u3046\u304b\u305f\u3061\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u306fdecltype\u306a\u3069\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u306b\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u3092\u4e0e\u3048\u305f\u3044\u5834\u5408\u306a\u3069\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u3067\u63a8\u8ad6\u3057\u3066\u3042\u3052\u308b\u306e\u307f\u3068\u306a\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u3092\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u30e9\u30e0\u30c0\u5f0f\u306f\u30b3\u30d4\u30fc\u3001\u30e0\u30fc\u30d6\u4ee5\u5916\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u57fa\u672c\u7684\u306bdelete\u3055\u308c\u3066\u3044\u308b(operator= \u306f\u30b3\u30d4\u30fc/\u30e0\u30fc\u30d6\u3082\u542b\u3081\u3066\u524a\u9664\u3055\u308c\u3066\u3044\u308b)\u306e\u3067\u3001\u7d99\u627f\u3057\u3066\u3082\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n```cpp\n\ntemplate < class _Base >\nstruct test0 : public _Base\n{\n};\n\ntemplate < class Ty >\ntest0 < Ty > test1( const Ty & )\n{\n  return test0 < Ty >();  // test0() is implicitly deleted!\n}\n\nint main( int arg, char** argv )\n{\n  auto _Test = test1( [] { std::cout << \"abc\" << std::endl; } );\n  _Test();\n}\n```\n\n#\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e9\u30e0\u30c0\n// \u4ee5\u964d\u30015/9\u306b\u8ffd\u8a18\u3068\u4fee\u6b63\u3092\u52a0\u3048\u307e\u3057\u305f\u3002\n\nC++14\u304b\u3089\u3001\u30e9\u30e0\u30c0\u5f0f\u306f\u5f15\u6570\u306bauto\u3092\u53d7\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n`auto lambda0 = []( auto a, auto b ) { return a + b; };`\n\n\u3053\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e9\u30e0\u30c0\u306f\u30e1\u30f3\u30d0\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u307e\u3059\u3002\n\u4e0a\u306e\u30e9\u30e0\u30c0\u5f0f\u3067\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u3067\u3057\u3087\u3046\u3002\n\n```cpp\n\nclass _Lambda0\n{\npublic:\n  template< class Ty1, class Ty2 >\n  auto operator()( Ty1 a, Ty2 b ) const { return a + b; }\n};\n_Lambda0 lambda0;\n```\n\n\u623b\u308a\u5024\u306f`auto`\u3067\u3059\u3002`decltype(auto)`\u3068\u306f\u7570\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```cpp\n\nauto lambda1 = []( auto& a ) { return a; }\nauto lambda2 = []( auto& a ) -> decltype( auto ) { return ( a ); }\nlambda1( value ) = 12; // oops, lvalue required\nlambda2( value ) = 13; // OK, the return type is int&\n```\n\n\u307e\u305f\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e9\u30e0\u30c0\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u308b\u306e\u3067\u3001\u5f53\u7136\u53ef\u5909\u9577\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u53d7\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u306d\u3002\n\n```cpp\n\nauto lambda3 =\n  []( auto func, auto&&... args ) -> decltype( auto )\n  {\n    return func( std::forward < decltype( args ) >( args )... );\n  };\n```\n\n\u771f\u9762\u76ee\u306b\u66f8\u304f\u3068\u5927\u5909\u3067\u3059\u3002\u306a\u304a\u3001mutable\u306fsth.dosomething\u304cconst\u4fee\u98fe\u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u547c\u3079\u308b\u3088\u3046\u306b\u3064\u3051\u3066\u3044\u307e\u3059\u3002\n\n\u4e88\u5b9a\u3057\u3066\u3044\u305f\u3088\u308a\u3082\u3060\u3089\u3060\u3089\u3068\u8ffd\u8a18\u3092\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e9\u30e0\u30c0\u306e\u8a73\u7d30\u3092\u304b\u304d\u8db3\u3057\u305f\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u30e9\u30e0\u30c0\u5f0f\u306e\u623b\u308a\u5024\u306e\u578b\n// \u4ee5\u964d\u306f10/25\u306b\u8ffd\u8a18\u3057\u305f\u5185\u5bb9\u3067\u3059\u3002\n\u30e9\u30e0\u30c0\u5f0f\u306e\u623b\u308a\u5024\u306f\u660e\u793a\u3057\u306a\u3044\u9650\u308aauto\u306b\u306a\u308a\u307e\u3059\uff08\u901a\u5e38\u306e\u95a2\u6570\u306bauto\u3092\u6307\u5b9a\u3067\u304d\u306a\u3044C++11\u3067\u3082\u540c\u69d8\u3067\u3059\uff09\u3002\n\n\u9593\u9055\u3044\u306a\u3069\u6c17\u3065\u3044\u305f\u70b9\u304c\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3092\u304f\u3060\u3055\u3044\u3002\n", "tags": ["C++", "C++11", "C++14"]}