{"context": "\n\n\u3084\u308d\u3046\u3068\u3057\u305f\u3053\u3068\n\u81ea\u5206\u304c\u3084\u3063\u3066\u308b\u9ebb\u96c0AI\u3092mruby\u3067\u66f8\u3053\u3046\u3068\u3057\u307e\u3057\u305f\u3002\nhttps://osdn.jp/projects/openmahjong/\n\u4eca\u307e\u3067\u306fC\u8a00\u8a9e\u3067\u66f8\u3044\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u8aad\u307f\u8fd4\u3059\u3068\u8a33\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u3057\u3001\u305f\u3076\u3093\u3069\u3053\u304b\u30d0\u30b0\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3092\u8ffd\u8de1\u3059\u308b\u3053\u3068\u304c\u4e0d\u53ef\u80fd\u306b\u601d\u3048\u3066\u3044\u307e\u3059\u3002ruby\u3067\u66f8\u3051\u3070\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3092\u76f4\u611f\u7684\u3067\u7c21\u6f54\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3057\u3001malloc\u3001free\u304c\u30fc\u3068\u304b\u914d\u5217\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u30fc\u3068\u304b\u304b\u3089\u89e3\u653e\u3055\u308c\u307e\u3059\u306e\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u30b9\u30c8\u30ec\u30b9\u89e3\u6d88\u306b\u3064\u306a\u304c\u308b\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u3044\u304d\u306a\u308aAI\u3092\u5168\u90e8\u66f8\u304d\u51fa\u3059\u306e\u306f\u6483\u6c88\u30ea\u30b9\u30af\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u307e\u305a\u306fAI\u306e\u4e00\u90e8\u3067\u4f7f\u3063\u3066\u3044\u308b\u5c71\u306b\u3042\u308b\u724c\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u8aad\u3080\u30e1\u30bd\u30c3\u30c9(MJ0)\u3092mruby\u3067\u66f8\u3044\u3066\u5b9f\u9a13\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nC\u8a00\u8a9e\nint MJ0(/* inputs */\n        MJ0PARAM *pParam,int *pDora,int dlength,\n        /* outputs */\n        double *pNokorihai,double *pKikenhai,\n        double *pMentsuSimo,double *pMentsuToimen,double *pMentsuKami)\n{\n    int i,j,k;\n    int sum;\n    int index;\n    int mindex;\n    int pai;\n    int furiten;\n    unsigned int r;\n    int aNokorihai[34];\n    int iniMentsu[3];\n    int aPaikukan[4][34];\n    int curMentsu[3];\n    MJ0PARAM *pCurPrm;\n    MJ0_COMBI aCombi[21+34];\n    int aAnpai[3][34];\n    int aRiichi[3];\n    int aMentsu[3][5];\n    int aMachi[34];\n\n    iniMentsu[0] = 0;\n    iniMentsu[1] = 0;\n    iniMentsu[2] = 0;\n    aRiichi[0] = 0;\n    aRiichi[1] = 0;\n    aRiichi[2] = 0;\n\n    memset(aAnpai,0,sizeof(aAnpai));\n\n    for(i=0;i<34;i++){\n        pNokorihai[i] = 0.0;\n        pKikenhai[i] = 0.0;\n        aNokorihai[i] = 4;\n    }\n\n    for(i=0;i<21+34;i++){\n        pMentsuSimo[i] = 0.0;\n        pMentsuToimen[i] = 0.0;\n        pMentsuKami[i] = 0.0;\n    }\n\n    /* \u6b8b\u308a\u724c\u3092\u521d\u671f\u5316 */\n    pCurPrm = pParam;\n    for(j=0;j<pCurPrm->pTehai->tehai_max;j++){\n        aNokorihai[pCurPrm->pTehai->tehai[j] & 63]--;\n    }\n    for(i=0;i<4;i++){\n\n        for(j=0;j<pCurPrm->pTehai->minshun_max;j++){\n            aNokorihai[pCurPrm->pTehai->minshun[j] & 63]--;\n            aNokorihai[(pCurPrm->pTehai->minshun[j] & 63) + 1]--;\n            aNokorihai[(pCurPrm->pTehai->minshun[j] & 63) + 2]--;\n        }\n        if(i!=0) iniMentsu[i-1]+= pCurPrm->pTehai->minshun_max;\n\n        for(j=0;j<pCurPrm->pTehai->minkou_max;j++){\n            aNokorihai[pCurPrm->pTehai->minkou[j] & 63]-=3;\n        }\n        if(i!=0) iniMentsu[i-1]+= pCurPrm->pTehai->minkou_max;\n\n        for(j=0;j<pCurPrm->pTehai->minkan_max;j++){\n            aNokorihai[pCurPrm->pTehai->minkan[j] & 63]-=4;\n        }\n        if(i!=0) iniMentsu[i-1]+= pCurPrm->pTehai->minkan_max;\n\n        for(j=0;j<pCurPrm->pTehai->ankan_max;j++){\n            aNokorihai[pCurPrm->pTehai->ankan[j] & 63]-=4;\n        }\n        if(i!=0) iniMentsu[i-1]+= pCurPrm->pTehai->ankan_max;\n\n        /* \u9cf4\u304b\u308c\u305f\u724c\u306f\u65e2\u306b\u52d8\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u9664\u304f */\n        for(j=0;j<pCurPrm->kawalength;j++){\n            if(!(pCurPrm->pKawahai[j].state & MJKS_NAKI)) aNokorihai[pCurPrm->pKawahai[j].hai & 63]--;\n            /* \u73fe\u7269\u3092\u5b89\u724c\u306b\u3059\u308b */\n            if(i!=0){\n                aAnpai[i-1][pCurPrm->pKawahai[j].hai & 63] = 1;\n            }\n\n        }\n\n        /* \u3082\u3057\u65e2\u306b\u56fa\u5b9a\u3057\u3066\u304a\u304f\u9762\u5b50\u304c\u3042\u308b\u306e\u3067\u3042\u308c\u3070\u305d\u308c\u3092\u3053\u3053\u3067\u884c\u3046(TODO) */\n\n        pCurPrm++;\n    }\n\n    /* \u30ea\u30fc\u30c1\u5f8c\u306e\u6368\u3066\u724c\u3092\u5b89\u30d1\u30a4\u306b\u3059\u308b(\u6368\u3066\u9806\u3092\u8003\u616e\u3057\u3066\u306a\u3044\u3051\u3069) */\n    i = 0;\n    j = 0;\n    while(1){\n        if(j >= pParam[i].kawalength) break;\n        if(i!=0){\n            if(pParam[i].pKawahai[j].state & MJKS_REACH){\n                aRiichi[i - 1] = 1;\n            }\n            for(k=1;k<4;k++){\n                if(aRiichi[k - 1]){\n                    aAnpai[k - 1][pParam[i].pKawahai[j].hai & 63] = 1;\n                }\n            }\n        }\n\n        i = (i + 1) & 3;\n        if(i==0) j++;\n    }\n\n    for(i=0;i<dlength;i++){\n        int dora = pDora[i] & 63;\n        /* \u30c9\u30e9\u8868\u793a\u724c\u3092\u53d6\u5f97 */\n        if (dora < 27){\n            if ((dora % 9) == 0) {\n                dora += 8;\n            }\n            else{\n                dora--;\n            }\n        }\n        else if (dora == 27){\n            dora = 30;\n        }\n        else if (dora == 31){\n            dora = 33;\n        }\n        else{\n            dora--;\n        }\n        aNokorihai[dora]--;\n    }\n\n\n    /* \u6307\u5b9a\u56de\u6570\u5206\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7e70\u308a\u8fd4\u3059 */\n    for(i=0;i<SIMU_SIZE;i++){\n        for(j=0;j<4;j++){\n            memcpy(&aPaikukan[j][0],aNokorihai,sizeof(aNokorihai));\n        }\n\n        memset(aMentsu,0xFF,sizeof(aMentsu));\n        memcpy(curMentsu,iniMentsu,sizeof(iniMentsu));\n\n        /* \u3082\u3057\u3001\u4e00\u8272\u7cfb\u306a\u3069\u3092\u8aad\u3080\u306e\u3067\u3042\u308c\u3070\u3053\u3053\u3067\u724c\u7a7a\u9593\u3092\u5909\u66f4\u3057\u3066\u304a\u304f\u3068\u826f\u3044(TODO) */\n\n\n        /* 4\u9762\u5b50\u5168\u3066\u306e\u76f8\u624b\u304c\u63c3\u3046\u307e\u3067\u7e70\u308a\u8fd4\u3059 */\n        while(curMentsu[0] != 4 || curMentsu[1] != 4 || curMentsu[2] != 4){\n            for(j=0;j<3;j++){\n                if(curMentsu[j] == 4) continue;\n                /* \u7d44\u307f\u5408\u308f\u305b\u6570\u306e\u521d\u671f\u5316 */\n\n                /* \u9806\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b */\n                for(k=0;k<21;k++){\n                    pai = (k / 7) * 9 + k % 7; // \u8a08\u7b97\u3059\u308b\u724c\u756a\u53f7\u306e\u5148\u982d\u306e\u5024\n                    aCombi[k].num = aPaikukan[j][pai] * aPaikukan[j][pai+1] * aPaikukan[j][pai+2];\n                }\n\n                /* \u523b\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b */\n                for(k=0;k<34;k++){\n                    if(aPaikukan[j][k-21] == 4){\n                        aCombi[k+21].num = 4;\n                    }else if(aPaikukan[j][k-21] == 3){\n                        aCombi[k+21].num = 1;\n                    }else{\n                        aCombi[k+21].num = 0;\n                    }\n                }\n\n                /* \u5f85\u3061\u8aad\u307f\u306b\u3088\u308b\u7d44\u307f\u5408\u308f\u305b\u6570\u306e\u66f4\u65b0(TODO) */\n\n                /* \u5408\u8a08\u3092\u8a08\u7b97 */\n                sum = 0;\n                for(k=0;k<21+34;k++){\n                    aCombi[k].sum = sum;\n                    sum += aCombi[k].num;\n                }\n\n                /* \u4e71\u6570\u306b\u3088\u308a\u9762\u5b50\u3092\u751f\u6210 */\n                if(sum == 0) goto failure;\n                r = ((unsigned int)rand()) % sum;\n\n                /* \u305d\u3093\u306a\u306b\u305f\u304f\u3055\u3093\u306a\u3044\u304b\u3089\u30b7\u30fc\u30b1\u30f3\u30b7\u30e3\u30eb\u30b5\u30fc\u30c1\u3067 */\n                for(k=0;k<21+34;k++){\n                    if(r < aCombi[k].sum + aCombi[k].num && aCombi[k].num != 0){\n                        /* \u3053\u306e\u9762\u5b50\u306b\u6c7a\u5b9a\uff01 */\n                        aMentsu[j][curMentsu[j]] = k;\n\n                        /* \u9762\u5b50\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb */\n                        if(k<21){\n                            if(aPaikukan[0][k] > 0)   aPaikukan[0][k]--;\n                            if(aPaikukan[0][k+1] > 0) aPaikukan[0][k+1]--;\n                            if(aPaikukan[0][k+2] > 0) aPaikukan[0][k+2]--;\n                            if(aPaikukan[1][k] > 0)   aPaikukan[1][k]--;\n                            if(aPaikukan[1][k+1] > 0) aPaikukan[1][k+1]--;\n                            if(aPaikukan[1][k+2] > 0) aPaikukan[1][k+2]--;\n                            if(aPaikukan[2][k] > 0)   aPaikukan[2][k]--;\n                            if(aPaikukan[2][k+1] > 0) aPaikukan[2][k+1]--;\n                            if(aPaikukan[2][k+2] > 0) aPaikukan[2][k+2]--;\n                            if(aPaikukan[3][k] > 0)   aPaikukan[3][k]--;\n                            if(aPaikukan[3][k+1] > 0) aPaikukan[3][k+1]--;\n                            if(aPaikukan[3][k+2] > 0) aPaikukan[3][k+2]--;\n                        }else{\n                            if(aPaikukan[0][k-21] >= 3) aPaikukan[0][k-21]-=3;\n                            if(aPaikukan[1][k-21] >= 3) aPaikukan[1][k-21]-=3;\n                            if(aPaikukan[2][k-21] >= 3) aPaikukan[2][k-21]-=3;\n                            if(aPaikukan[3][k-21] >= 3) aPaikukan[3][k-21]-=3;\n                        }\n\n                        if(j==0){\n                            pMentsuSimo[k] += 1.0;\n                        }else if(j==1){\n                            pMentsuToimen[k] += 1.0;\n                        }else{\n                            pMentsuKami[k] += 1.0;\n                        }\n\n                        curMentsu[j]++;\n                        break;\n                    }\n                }\n\n            }\n\n        }\n\n        /* \u30a2\u30bf\u30de\u306e\u751f\u6210 */\n        for(j=0;j<3;j++){\n            for(k=0;k<34;k++){\n                if(aPaikukan[j][k] == 4){\n                    aCombi[k].num = 6;  // 4 C 2\n                }else if(aPaikukan[j][k] == 3){\n                    aCombi[k].num = 3;  // 3 C 2\n                }else if(aPaikukan[j][k] == 2){\n                    aCombi[k].num = 1;  // 2 C 2\n                }else{\n                    aCombi[k].num = 0;\n                }\n            }\n            /* \u5f85\u3061\u8aad\u307f\u306b\u3088\u308b\u7d44\u307f\u5408\u308f\u305b\u6570\u306e\u66f4\u65b0(TODO) */\n\n            /* \u5408\u8a08\u3092\u8a08\u7b97 */\n            sum = 0;\n            for(k=0;k<34;k++){\n                aCombi[k].sum = sum;\n                sum += aCombi[k].num;\n            }\n\n            /* \u4e71\u6570\u306b\u3088\u308a\u5bfe\u5b50\u3092\u751f\u6210 */\n            if(sum == 0) goto failure;\n            r = ((unsigned int)rand()) % sum;\n            /* \u305d\u3093\u306a\u306b\u305f\u304f\u3055\u3093\u306a\u3044\u304b\u3089\u30b7\u30fc\u30b1\u30f3\u30b7\u30e3\u30eb\u30b5\u30fc\u30c1\u3067 */\n            for(k=0;k<34;k++){\n                if(r < aCombi[k].sum + aCombi[k].num && aCombi[k].num != 0){\n                    /* \u3053\u306e\u724c\u306b\u6c7a\u5b9a\uff01 */\n                    aMentsu[j][4] = k;\n                    /* \u30a2\u30bf\u30de\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb */\n                    if(aPaikukan[0][k] >= 2) aPaikukan[0][k]-=2;\n                    if(aPaikukan[1][k] >= 2) aPaikukan[1][k]-=2;\n                    if(aPaikukan[2][k] >= 2) aPaikukan[2][k]-=2;\n                    if(aPaikukan[3][k] >= 2) aPaikukan[3][k]-=2;\n                    break;\n                }\n            }\n        }\n\n\n\n        /* \u5f53\u305f\u308a\u724c\u3092\u6c7a\u5b9a\u3059\u308b */\n        for(;;){\n            memset(aMachi,0,sizeof(aMachi));\n\n            j = rand() % 3; // \u8ab0\u306e\u9762\u5b50\u3092\u5f53\u305f\u308a\u306b\u3059\u308b\u304b\n            mindex = rand() % ((4 - iniMentsu[j]) * 3 + 2); // \u3069\u306e\u724c\u3092\u5f53\u305f\u308a\u724c\u306b\u3059\u308b\u304b\n            if(mindex >= (4 - iniMentsu[j]) * 3){\n                /* \u5358\u9a0e\u5f85\u3061 */\n                assert(aMentsu[j][4] >= 0 && aMentsu[j][4] < 34);\n                aMachi[aMentsu[j][4]] = 1;\n\n\n                if(aMentsu[j][4] < 27){\n                    /* \u5ef6\u3079\u5358\u9a0e */\n                    for(k=0;k<4;k++){\n                        if(aMentsu[j][k] >= 0 && (aMentsu[j][k] % 7) != 6 && \n                            (aMentsu[j][k] / 7)*9 + (aMentsu[j][k] % 7) + 3 == aMentsu[j][4]){\n                            assert(aMentsu[j][4] >= 3);\n                            aMachi[aMentsu[j][4] - 3] = 1;\n                        }\n                        if (aMentsu[j][k] >= 0 && (aMentsu[j][k] % 7) != 0 &&\n                            (aMentsu[j][k] / 7)*9 + (aMentsu[j][k] % 7) - 1 == aMentsu[j][4]){\n                            assert(aMentsu[j][4] + 3 < 34);\n                            aMachi[aMentsu[j][4] + 3] = 1;\n                        }\n                    }\n                }\n            }else{\n                /* \u9762\u5b50\u5f85\u3061 */\n                index = iniMentsu[j] + mindex/3;\n\n                if(aMentsu[j][index] < 21){\n                    /* \u9806\u5b50 */\n                    pai = (aMentsu[j][index] / 7) * 9 + (aMentsu[j][index] % 7);\n                    assert(pai >= 0 && pai < 34);\n                    if((mindex % 3) == 1){\n                        /* \u30ab\u30f3\u30c1\u30e3\u30f3 */\n                        aMachi[pai+1] = 1;\n\n                        /* \u6697\u523b\u30ab\u30d6\u30ea */\n                        if(aMentsu[j][4] == pai + 2){\n                            if (pai < 0) {\n                                assert(pai >= 0);\n                            }\n                            aMachi[pai] = 1;\n                        }else if(aMentsu[j][4] == pai - 1){\n                            assert(pai + 2 < 34);\n                            aMachi[pai + 2] = 1;\n                        }\n\n                    }else if((mindex % 3) == 0 && (pai % 9) == 6){\n                        /* \u30da\u30f3\u30c1\u30e3\u30f3 */\n                        aMachi[pai] = 1;\n                        /* \u6697\u523b\u30ab\u30d6\u30ea */\n                        if(aMentsu[j][4] == pai + 1){\n                            assert(pai + 2 < 34);\n                            aMachi[pai + 2] = 1;\n                        }else if(aMentsu[j][4] == pai + 2){\n                            assert(pai + 1 < 34);\n                            aMachi[pai + 1] = 1;\n                        }\n\n                    }else if((mindex % 3) == 2 && (pai % 9) == 0){\n                        /* \u30da\u30f3\u30c1\u30e3\u30f3 */\n                        aMachi[pai+2] = 1;\n                        /* \u6697\u523b\u30ab\u30d6\u30ea */\n                        if(aMentsu[j][4] == pai){\n                            assert(pai + 1 < 34);\n                            aMachi[pai + 1] = 1;\n                        }else if(aMentsu[j][4] == pai + 1){\n                            aMachi[pai] = 1;\n                        }\n                    }else{\n                        /* \u4e21\u9762 */\n                        if((mindex % 3) == 0){\n                            assert(pai + 3 < 34);\n                            aMachi[pai] = 1;\n                            aMachi[pai+3] = 1;\n                            /* \u6697\u523b\u30ab\u30d6\u30ea */\n                            if(aMentsu[j][4] == pai + 1){\n                                aMachi[pai+2] = 1;\n                            }else if(aMentsu[j][4] == pai + 2){\n                                aMachi[pai+1] = 1;\n                            }\n\n                        }else{\n                            assert(pai + 2 < 34);\n                            assert(pai >= 1);\n                            aMachi[pai + 2] = 1;\n                            aMachi[pai-1] = 1;\n                            /* \u6697\u523b\u30ab\u30d6\u30ea */\n                            if(aMentsu[j][4] == pai){\n                                aMachi[pai+1] = 1;\n                            }else if(aMentsu[j][4] == pai + 1){\n                                aMachi[pai] = 1;\n                            }\n                        }\n\n                    }\n                }else{\n                    /* \u523b\u5b50\u306f\u30b7\u30e3\u30f3\u30dd\u30f3\u5f85\u3061 */\n                    assert(aMentsu[j][4] >= 0 && aMentsu[j][4] < 34);\n                    aMachi[aMentsu[j][index] - 21] = 1;\n                    aMachi[aMentsu[j][4]] = 1;\n                }\n\n            }\n\n            furiten = 0;\n            for(k=0;k<34;k++){\n                if(aMachi[k] && aAnpai[j][k]){\n                    furiten = 1;\n                }\n            }\n\n            if(furiten == 0){\n                for(k=0;k<34;k++){\n                    if(aMachi[k]){\n                        pKikenhai[k] += 1.0;\n                    }\n                }\n            }\n            break;\n\n        }\n\n\n        /* \u6b8b\u3063\u305f\u724c\u3092\u5c71\u306e\u6570\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8 */\n        for(j=0;j<34;j++){\n            pNokorihai[j] += aPaikukan[3][j];\n        }\nfailure:\n        j=0;\n\n    }\n\n    /* \u8a66\u884c\u56de\u6570\u3067\u5272\u308a\u7b97\u3092\u3057\u3066\u5e73\u5747\u5024\u3068\u3059\u308b */\n    for(i=0;i<34;i++){\n        pNokorihai[i] /= SIMU_SIZE;\n        pKikenhai[i] /= SIMU_SIZE;\n    }\n\n    for(i=0;i<27+34;i++){\n        pMentsuSimo[i] /= SIMU_SIZE;\n        pMentsuToimen[i] /= SIMU_SIZE;\n        pMentsuKami[i] /= SIMU_SIZE;\n    }\n\n    return 1;\n}\n\n\nC++\n    void MJ0::simulate(Players *players, Player *myself, vector<Pai> *doras)\n    {\n        PaiArray nokorihai(4.0f), pai_kukan;\n        auto mentsu_full = [](Player &p) {return p._mentsu.size() + p._naki_mentsu.size() < 4; };\n\n        for (auto &player : *players) {\n            player._anpai = PaiArray();\n            player._kikenhai = PaiArray();\n            for (auto pai : player._tehai) {\n                nokorihai[pai.getNum()] -= 1.0f;\n            }\n\n            for (auto pai : player._kawahai) {\n                if (!pai.isNaki()) nokorihai[pai.getNum()] -= 1.0f;\n                player._anpai[pai.getNum()] = 1.0f;\n            }\n\n            for (auto m : player._naki_mentsu) {\n                m.sub(&nokorihai);\n            }\n\n            player._mentsu.clear();\n        }\n\n        myself->_kikenhai = PaiArray();\n\n        for (auto dora : *doras) {\n            nokorihai[dora.getDorahyouji()] -= 1.0f;\n        }\n\n        for (size_t i = 0; i < SIMU_SIZE; i++) {\n            for (auto &player : *players) {\n                player._pai_kukan = nokorihai;\n            }\n\n            myself->_pai_kukan = nokorihai;\n\n            Players::iterator it;\n            while ((it = find_if(players->begin(), players->end(), mentsu_full))\n                   != players->end()) {\n                while ((it = find_if(it, players->end(), mentsu_full))\n                       != players->end()) {\n                    auto all = Mentsu::all();\n                    const auto &pai_kukan = it->_pai_kukan;\n                    // \u30e1\u30f3\u30c4\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u62bd\u51fa\u3059\u308b\n                    float sum = accumulate(all.cbegin(), all.cend(), 0.0f, [pai_kukan](float a,const Mentsu &m) { return a + m.weight(pai_kukan); });\n                    float val = rand() * sum / RAND_MAX;\n                    float tmp = 0.0f;\n                    auto mentsu = find_if(all.cbegin(), all.cend(), [val, tmp, pai_kukan](const Mentsu &m) mutable { tmp += m.weight(pai_kukan); return val < tmp; });\n                    (it->_mentsu).push_back(*mentsu);\n\n                    // \u30e1\u30f3\u30c4\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb\u3059\u308b\n                    for (auto &p2 : *players)\n                    {\n                        mentsu->sub(&p2._pai_kukan);\n                    }\n                    mentsu->sub(&myself->_pai_kukan);\n\n                    // \u724c\u306e\u5371\u967a\u5ea6\u3092\u66f4\u65b0\u3059\u308b\n                    mentsu->addKiken(&it->_kikenhai);\n                    mentsu->addKiken(&myself->_kikenhai);\n                    it++;\n                }\n            }\n\n            for (auto &player : *players) {\n                auto all = Mentsu::all_atama();\n                const auto &pai_kukan = player._pai_kukan;\n                // \u30a2\u30bf\u30de\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u62bd\u51fa\u3059\u308b\n                float sum = accumulate(all.cbegin(), all.cend(), 0.0f, [pai_kukan](float a, const Mentsu &m) { return a + m.weight(pai_kukan); });\n                float val = rand() * sum / RAND_MAX;\n                float tmp = 0.0f;\n                auto mentsu = find_if(all.cbegin(), all.cend(), [val, tmp, pai_kukan](const Mentsu &m) mutable { tmp += m.weight(pai_kukan); return val <= tmp; });\n                (player._mentsu).push_back(*mentsu);\n\n                // \u30a2\u30bf\u30de\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb\u3059\u308b\n                for (auto &p2 : *players)\n                {\n                    mentsu->sub(&p2._pai_kukan);\n                }\n                mentsu->sub(&myself->_pai_kukan);\n\n                // \u724c\u306e\u5371\u967a\u5ea6\u3092\u66f4\u65b0\u3059\u308b\n                mentsu->addKiken(&player._kikenhai);\n                mentsu->addKiken(&myself->_kikenhai);\n            }\n\n            pai_kukan += myself->_pai_kukan;\n        }\n\n        myself->_pai_kukan = pai_kukan / SIMU_SIZE;\n        myself->_kikenhai = myself->_kikenhai / SIMU_SIZE;\n    }\n\n\nruby\u304a\u3088\u3073mruby\nclass MJ0\n  SIMU_SIZE=5000\n\n  def self.simulate(players, myself, doras)\n    _nokorihai = Array.new(34, 4.0)\n    pai_kukan = Array.new(34, 0.0)\n\n    players_w_myself = (players + [myself])\n\n    players_w_myself.each do |player| \n      player.anpai = Array.new(34, false)\n      player.kikenhai = Array.new(34, 0.0)\n      player.tehai.each { |hai| _nokorihai[hai.num] -= 1 }\n\n      player.kawahai.each do |hai|\n        _nokorihai[hai.num] -= 1 unless hai.naki\n        player.anpai[hai.num] = true\n      end\n      player.naki_mentsu.each { |m| m.sub(_nokorihai) }\n      player.mentsu = []\n    end\n\n    myself.kikenhai = Array.new(34, 0.0)\n\n    doras.each { |dora| _nokorihai[dora.getDoraHyouji] -= 1 }\n\n    SIMU_SIZE.times do\n      players_w_myself.each do |player|\n        player.pai_kukan = _nokorihai.clone\n        # TODO \u624b\u8aad\u307f\u3067\u724c\u7a7a\u9593\u3092\u5909\u3048\u308b\n      end\n\n      while !(subjects = players.select { |player| player.naki_mentsu.size + player.mentsu.size < 4 }).empty?\n        subjects.each do |player|\n          # \u30e1\u30f3\u30c4\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u62bd\u51fa\u3059\u308b\n          mentsu = Mentsu.all.w_sample { |m| m.weight(player.pai_kukan) }\n          player.mentsu.push(mentsu)\n          # \u30e1\u30f3\u30c4\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb\u3059\u308b\n          players_w_myself.each { |p2| mentsu.sub(p2.pai_kukan) }\n          # \u5371\u967a\u5ea6\u3092\u66f4\u65b0\u3059\u308b\n          mentsu.kiken(myself.kikenhai)\n        end\n      end\n\n      players.each do |player|\n        # \u982d\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u62bd\u51fa\u3059\u308b\n        mentsu = Mentsu.all_atama.w_sample { |m| m.weight(player.pai_kukan) }\n        player.mentsu.push(mentsu)\n        # \u30e1\u30f3\u30c4\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb\u3059\u308b\n        players_w_myself.each { |p2| mentsu.sub(p2.pai_kukan) }\n        # \u5371\u967a\u5ea6\u3092\u66f4\u65b0\u3059\u308b\n        mentsu.kiken(myself.kikenhai)\n      end\n\n      pai_kukan.each_with_index { |pai, idx| pai_kukan[idx] += myself.pai_kukan[idx] }\n    end\n    myself.pai_kukan = pai_kukan.map { |pai| pai / SIMU_SIZE }\n    myself.kikenhai.map! { |pai| pai / SIMU_SIZE }\n  end\nend\n\n\n\u7d50\u679c\nmruby\u306fmbrc\u3067\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5f8c\u3001mruby -b\u3067\u6e2c\u5b9a\n\n\n\n\u8a00\u8a9e\n\u6e2c\u5b9a\u7d50\u679c(ms)\n\n\n\n\nC\u8a00\u8a9e\n16\n\n\nC++\n7\n\n\nruby(2.3.1)\n895\n\n\nmruby(1.2.0)\n4659\n\n\n\n\u5b9f\u884c\u3057\u305f\u77ac\u9593\u76ee\u3092\u7591\u3044\u307e\u3057\u305f\u30011\u56de\u306e\u5b9f\u884c\u30674\u79d2!?\u306a\u3093\u3060\u3063\u3066\u30fc\u3002C++\u304b\u3089ruby\u3067\u3082100\u500d\u9045\u3044\u306e\u3067\u3046\u30fc\u3093\u3068\u304a\u3082\u3046\u306e\u3067\u3059\u304c\u3001mruby\u3067\u306f\u306a\u3093\u3068600\u500d\u4ee5\u4e0a\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\u3002ruby\u306e\u30b3\u30fc\u30c9\u3092\u3082\u3046\u5c11\u3057\u66f8\u304d\u76f4\u305b\u3070\u591a\u5c11\u306f\u901f\u304f\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3061\u3087\u3063\u3068\u81ea\u5206\u306e\u6c42\u3081\u308b\u54c1\u8cea(100ms\u4ee5\u5185)\u307e\u3067\u3044\u3051\u308b\u6c17\u304c\u305b\u305a\u3001\u3061\u3087\u3063\u3068\u65ad\u5ff5\u3057\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\u73fe\u72b6mruby\u3067\u306f\u8efd\u3044\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8d70\u3089\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001AI\u3092\u304c\u3063\u3064\u308a\u8a18\u8ff0\u3057\u3066\u5b9f\u884c\u3059\u308b\u306b\u306f10\u5e74\u304f\u3089\u3044\u65e9\u3059\u304e\u305f\u3088\u3046\u3067\u3059\u3002\u5f8c\u3005\u306e\u6539\u826f\u3092\u5f85\u3061\u307e\u3057\u3087\u3046\u3002\n\u8ab0\u304bmruby\u306e\u30b3\u30fc\u30c9\u309210\u500d\u304f\u3089\u3044\u901f\u304f\u3059\u308b\u65b9\u6cd5\u3092\u3054\u5b58\u3058\u3067\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044m(_ _)m\n# \u3084\u308d\u3046\u3068\u3057\u305f\u3053\u3068\n\u81ea\u5206\u304c\u3084\u3063\u3066\u308b\u9ebb\u96c0AI\u3092mruby\u3067\u66f8\u3053\u3046\u3068\u3057\u307e\u3057\u305f\u3002\n\nhttps://osdn.jp/projects/openmahjong/\n\n\u4eca\u307e\u3067\u306fC\u8a00\u8a9e\u3067\u66f8\u3044\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u8aad\u307f\u8fd4\u3059\u3068\u8a33\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u3057\u3001\u305f\u3076\u3093\u3069\u3053\u304b\u30d0\u30b0\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3092\u8ffd\u8de1\u3059\u308b\u3053\u3068\u304c\u4e0d\u53ef\u80fd\u306b\u601d\u3048\u3066\u3044\u307e\u3059\u3002ruby\u3067\u66f8\u3051\u3070\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3092\u76f4\u611f\u7684\u3067\u7c21\u6f54\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3057\u3001malloc\u3001free\u304c\u30fc\u3068\u304b\u914d\u5217\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u30fc\u3068\u304b\u304b\u3089\u89e3\u653e\u3055\u308c\u307e\u3059\u306e\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u30b9\u30c8\u30ec\u30b9\u89e3\u6d88\u306b\u3064\u306a\u304c\u308b\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u3044\u304d\u306a\u308aAI\u3092\u5168\u90e8\u66f8\u304d\u51fa\u3059\u306e\u306f\u6483\u6c88\u30ea\u30b9\u30af\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u307e\u305a\u306fAI\u306e\u4e00\u90e8\u3067\u4f7f\u3063\u3066\u3044\u308b\u5c71\u306b\u3042\u308b\u724c\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u8aad\u3080\u30e1\u30bd\u30c3\u30c9(MJ0)\u3092mruby\u3067\u66f8\u3044\u3066\u5b9f\u9a13\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n## C\u8a00\u8a9e\n```C\nint MJ0(/* inputs */\n\t\tMJ0PARAM *pParam,int *pDora,int dlength,\n\t\t/* outputs */\n\t\tdouble *pNokorihai,double *pKikenhai,\n\t\tdouble *pMentsuSimo,double *pMentsuToimen,double *pMentsuKami)\n{\n\tint i,j,k;\n\tint sum;\n\tint index;\n\tint mindex;\n\tint pai;\n\tint furiten;\n\tunsigned int r;\n\tint aNokorihai[34];\n\tint iniMentsu[3];\n\tint aPaikukan[4][34];\n\tint curMentsu[3];\n\tMJ0PARAM *pCurPrm;\n\tMJ0_COMBI aCombi[21+34];\n\tint aAnpai[3][34];\n\tint aRiichi[3];\n\tint aMentsu[3][5];\n\tint aMachi[34];\n\n\tiniMentsu[0] = 0;\n\tiniMentsu[1] = 0;\n\tiniMentsu[2] = 0;\n\taRiichi[0] = 0;\n\taRiichi[1] = 0;\n\taRiichi[2] = 0;\n\n\tmemset(aAnpai,0,sizeof(aAnpai));\n\n\tfor(i=0;i<34;i++){\n\t\tpNokorihai[i] = 0.0;\n\t\tpKikenhai[i] = 0.0;\n\t\taNokorihai[i] = 4;\n\t}\n\n\tfor(i=0;i<21+34;i++){\n\t\tpMentsuSimo[i] = 0.0;\n\t\tpMentsuToimen[i] = 0.0;\n\t\tpMentsuKami[i] = 0.0;\n\t}\n\n\t/* \u6b8b\u308a\u724c\u3092\u521d\u671f\u5316 */\n\tpCurPrm = pParam;\n\tfor(j=0;j<pCurPrm->pTehai->tehai_max;j++){\n\t\taNokorihai[pCurPrm->pTehai->tehai[j] & 63]--;\n\t}\n\tfor(i=0;i<4;i++){\n\n\t\tfor(j=0;j<pCurPrm->pTehai->minshun_max;j++){\n\t\t\taNokorihai[pCurPrm->pTehai->minshun[j] & 63]--;\n\t\t\taNokorihai[(pCurPrm->pTehai->minshun[j] & 63) + 1]--;\n\t\t\taNokorihai[(pCurPrm->pTehai->minshun[j] & 63) + 2]--;\n\t\t}\n\t\tif(i!=0) iniMentsu[i-1]+= pCurPrm->pTehai->minshun_max;\n\n\t\tfor(j=0;j<pCurPrm->pTehai->minkou_max;j++){\n\t\t\taNokorihai[pCurPrm->pTehai->minkou[j] & 63]-=3;\n\t\t}\n\t\tif(i!=0) iniMentsu[i-1]+= pCurPrm->pTehai->minkou_max;\n\t\t\n\t\tfor(j=0;j<pCurPrm->pTehai->minkan_max;j++){\n\t\t\taNokorihai[pCurPrm->pTehai->minkan[j] & 63]-=4;\n\t\t}\n\t\tif(i!=0) iniMentsu[i-1]+= pCurPrm->pTehai->minkan_max;\n\t\t\n\t\tfor(j=0;j<pCurPrm->pTehai->ankan_max;j++){\n\t\t\taNokorihai[pCurPrm->pTehai->ankan[j] & 63]-=4;\n\t\t}\n\t\tif(i!=0) iniMentsu[i-1]+= pCurPrm->pTehai->ankan_max;\n\n\t\t/* \u9cf4\u304b\u308c\u305f\u724c\u306f\u65e2\u306b\u52d8\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u9664\u304f */\n\t\tfor(j=0;j<pCurPrm->kawalength;j++){\n\t\t\tif(!(pCurPrm->pKawahai[j].state & MJKS_NAKI)) aNokorihai[pCurPrm->pKawahai[j].hai & 63]--;\n\t\t\t/* \u73fe\u7269\u3092\u5b89\u724c\u306b\u3059\u308b */\n\t\t\tif(i!=0){\n\t\t\t\taAnpai[i-1][pCurPrm->pKawahai[j].hai & 63] = 1;\n\t\t\t}\n\n\t\t}\n\n\t\t/* \u3082\u3057\u65e2\u306b\u56fa\u5b9a\u3057\u3066\u304a\u304f\u9762\u5b50\u304c\u3042\u308b\u306e\u3067\u3042\u308c\u3070\u305d\u308c\u3092\u3053\u3053\u3067\u884c\u3046(TODO) */\n\n\t\tpCurPrm++;\n\t}\n\n\t/* \u30ea\u30fc\u30c1\u5f8c\u306e\u6368\u3066\u724c\u3092\u5b89\u30d1\u30a4\u306b\u3059\u308b(\u6368\u3066\u9806\u3092\u8003\u616e\u3057\u3066\u306a\u3044\u3051\u3069) */\n\ti = 0;\n\tj = 0;\n\twhile(1){\n\t\tif(j >= pParam[i].kawalength) break;\n\t\tif(i!=0){\n\t\t\tif(pParam[i].pKawahai[j].state & MJKS_REACH){\n\t\t\t\taRiichi[i - 1] = 1;\n\t\t\t}\n\t\t\tfor(k=1;k<4;k++){\n\t\t\t\tif(aRiichi[k - 1]){\n\t\t\t\t\taAnpai[k - 1][pParam[i].pKawahai[j].hai & 63] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti = (i + 1) & 3;\n\t\tif(i==0) j++;\n\t}\n\n\tfor(i=0;i<dlength;i++){\n\t\tint dora = pDora[i] & 63;\n\t\t/* \u30c9\u30e9\u8868\u793a\u724c\u3092\u53d6\u5f97 */\n\t\tif (dora < 27){\n\t\t\tif ((dora % 9) == 0) {\n\t\t\t\tdora += 8;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdora--;\n\t\t\t}\n\t\t}\n\t\telse if (dora == 27){\n\t\t\tdora = 30;\n\t\t}\n\t\telse if (dora == 31){\n\t\t\tdora = 33;\n\t\t}\n\t\telse{\n\t\t\tdora--;\n\t\t}\n\t\taNokorihai[dora]--;\n\t}\n\n\n\t/* \u6307\u5b9a\u56de\u6570\u5206\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7e70\u308a\u8fd4\u3059 */\n\tfor(i=0;i<SIMU_SIZE;i++){\n\t\tfor(j=0;j<4;j++){\n\t\t\tmemcpy(&aPaikukan[j][0],aNokorihai,sizeof(aNokorihai));\n\t\t}\n\n\t\tmemset(aMentsu,0xFF,sizeof(aMentsu));\n\t\tmemcpy(curMentsu,iniMentsu,sizeof(iniMentsu));\n\n\t\t/* \u3082\u3057\u3001\u4e00\u8272\u7cfb\u306a\u3069\u3092\u8aad\u3080\u306e\u3067\u3042\u308c\u3070\u3053\u3053\u3067\u724c\u7a7a\u9593\u3092\u5909\u66f4\u3057\u3066\u304a\u304f\u3068\u826f\u3044(TODO) */\n\n\n\t\t/* 4\u9762\u5b50\u5168\u3066\u306e\u76f8\u624b\u304c\u63c3\u3046\u307e\u3067\u7e70\u308a\u8fd4\u3059 */\n\t\twhile(curMentsu[0] != 4 || curMentsu[1] != 4 || curMentsu[2] != 4){\n\t\t\tfor(j=0;j<3;j++){\n\t\t\t\tif(curMentsu[j] == 4) continue;\n\t\t\t\t/* \u7d44\u307f\u5408\u308f\u305b\u6570\u306e\u521d\u671f\u5316 */\n\n\t\t\t\t/* \u9806\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b */\n\t\t\t\tfor(k=0;k<21;k++){\n\t\t\t\t\tpai = (k / 7) * 9 + k % 7; // \u8a08\u7b97\u3059\u308b\u724c\u756a\u53f7\u306e\u5148\u982d\u306e\u5024\n\t\t\t\t\taCombi[k].num = aPaikukan[j][pai] * aPaikukan[j][pai+1] * aPaikukan[j][pai+2];\n\t\t\t\t}\n\n\t\t\t\t/* \u523b\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b */\n\t\t\t\tfor(k=0;k<34;k++){\n\t\t\t\t\tif(aPaikukan[j][k-21] == 4){\n\t\t\t\t\t\taCombi[k+21].num = 4;\n\t\t\t\t\t}else if(aPaikukan[j][k-21] == 3){\n\t\t\t\t\t\taCombi[k+21].num = 1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\taCombi[k+21].num = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* \u5f85\u3061\u8aad\u307f\u306b\u3088\u308b\u7d44\u307f\u5408\u308f\u305b\u6570\u306e\u66f4\u65b0(TODO) */\n\n\t\t\t\t/* \u5408\u8a08\u3092\u8a08\u7b97 */\n\t\t\t\tsum = 0;\n\t\t\t\tfor(k=0;k<21+34;k++){\n\t\t\t\t\taCombi[k].sum = sum;\n\t\t\t\t\tsum += aCombi[k].num;\n\t\t\t\t}\n\n\t\t\t\t/* \u4e71\u6570\u306b\u3088\u308a\u9762\u5b50\u3092\u751f\u6210 */\n\t\t\t\tif(sum == 0) goto failure;\n\t\t\t\tr = ((unsigned int)rand()) % sum;\n\n\t\t\t\t/* \u305d\u3093\u306a\u306b\u305f\u304f\u3055\u3093\u306a\u3044\u304b\u3089\u30b7\u30fc\u30b1\u30f3\u30b7\u30e3\u30eb\u30b5\u30fc\u30c1\u3067 */\n\t\t\t\tfor(k=0;k<21+34;k++){\n\t\t\t\t\tif(r < aCombi[k].sum + aCombi[k].num && aCombi[k].num != 0){\n\t\t\t\t\t\t/* \u3053\u306e\u9762\u5b50\u306b\u6c7a\u5b9a\uff01 */\n\t\t\t\t\t\taMentsu[j][curMentsu[j]] = k;\n\n\t\t\t\t\t\t/* \u9762\u5b50\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb */\n\t\t\t\t\t\tif(k<21){\n\t\t\t\t\t\t\tif(aPaikukan[0][k] > 0)   aPaikukan[0][k]--;\n\t\t\t\t\t\t\tif(aPaikukan[0][k+1] > 0) aPaikukan[0][k+1]--;\n\t\t\t\t\t\t\tif(aPaikukan[0][k+2] > 0) aPaikukan[0][k+2]--;\n\t\t\t\t\t\t\tif(aPaikukan[1][k] > 0)   aPaikukan[1][k]--;\n\t\t\t\t\t\t\tif(aPaikukan[1][k+1] > 0) aPaikukan[1][k+1]--;\n\t\t\t\t\t\t\tif(aPaikukan[1][k+2] > 0) aPaikukan[1][k+2]--;\n\t\t\t\t\t\t\tif(aPaikukan[2][k] > 0)   aPaikukan[2][k]--;\n\t\t\t\t\t\t\tif(aPaikukan[2][k+1] > 0) aPaikukan[2][k+1]--;\n\t\t\t\t\t\t\tif(aPaikukan[2][k+2] > 0) aPaikukan[2][k+2]--;\n\t\t\t\t\t\t\tif(aPaikukan[3][k] > 0)   aPaikukan[3][k]--;\n\t\t\t\t\t\t\tif(aPaikukan[3][k+1] > 0) aPaikukan[3][k+1]--;\n\t\t\t\t\t\t\tif(aPaikukan[3][k+2] > 0) aPaikukan[3][k+2]--;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif(aPaikukan[0][k-21] >= 3) aPaikukan[0][k-21]-=3;\n\t\t\t\t\t\t\tif(aPaikukan[1][k-21] >= 3) aPaikukan[1][k-21]-=3;\n\t\t\t\t\t\t\tif(aPaikukan[2][k-21] >= 3) aPaikukan[2][k-21]-=3;\n\t\t\t\t\t\t\tif(aPaikukan[3][k-21] >= 3) aPaikukan[3][k-21]-=3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(j==0){\n\t\t\t\t\t\t\tpMentsuSimo[k] += 1.0;\n\t\t\t\t\t\t}else if(j==1){\n\t\t\t\t\t\t\tpMentsuToimen[k] += 1.0;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tpMentsuKami[k] += 1.0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurMentsu[j]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t/* \u30a2\u30bf\u30de\u306e\u751f\u6210 */\n\t\tfor(j=0;j<3;j++){\n\t\t\tfor(k=0;k<34;k++){\n\t\t\t\tif(aPaikukan[j][k] == 4){\n\t\t\t\t\taCombi[k].num = 6;  // 4 C 2\n\t\t\t\t}else if(aPaikukan[j][k] == 3){\n\t\t\t\t\taCombi[k].num = 3;  // 3 C 2\n\t\t\t\t}else if(aPaikukan[j][k] == 2){\n\t\t\t\t\taCombi[k].num = 1;  // 2 C 2\n\t\t\t\t}else{\n\t\t\t\t\taCombi[k].num = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* \u5f85\u3061\u8aad\u307f\u306b\u3088\u308b\u7d44\u307f\u5408\u308f\u305b\u6570\u306e\u66f4\u65b0(TODO) */\n\n\t\t\t/* \u5408\u8a08\u3092\u8a08\u7b97 */\n\t\t\tsum = 0;\n\t\t\tfor(k=0;k<34;k++){\n\t\t\t\taCombi[k].sum = sum;\n\t\t\t\tsum += aCombi[k].num;\n\t\t\t}\n\n\t\t\t/* \u4e71\u6570\u306b\u3088\u308a\u5bfe\u5b50\u3092\u751f\u6210 */\n\t\t\tif(sum == 0) goto failure;\n\t\t\tr = ((unsigned int)rand()) % sum;\n\t\t\t/* \u305d\u3093\u306a\u306b\u305f\u304f\u3055\u3093\u306a\u3044\u304b\u3089\u30b7\u30fc\u30b1\u30f3\u30b7\u30e3\u30eb\u30b5\u30fc\u30c1\u3067 */\n\t\t\tfor(k=0;k<34;k++){\n\t\t\t\tif(r < aCombi[k].sum + aCombi[k].num && aCombi[k].num != 0){\n\t\t\t\t\t/* \u3053\u306e\u724c\u306b\u6c7a\u5b9a\uff01 */\n\t\t\t\t\taMentsu[j][4] = k;\n\t\t\t\t\t/* \u30a2\u30bf\u30de\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb */\n\t\t\t\t\tif(aPaikukan[0][k] >= 2) aPaikukan[0][k]-=2;\n\t\t\t\t\tif(aPaikukan[1][k] >= 2) aPaikukan[1][k]-=2;\n\t\t\t\t\tif(aPaikukan[2][k] >= 2) aPaikukan[2][k]-=2;\n\t\t\t\t\tif(aPaikukan[3][k] >= 2) aPaikukan[3][k]-=2;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\t/* \u5f53\u305f\u308a\u724c\u3092\u6c7a\u5b9a\u3059\u308b */\n\t\tfor(;;){\n\t\t\tmemset(aMachi,0,sizeof(aMachi));\n\n\t\t\tj = rand() % 3; // \u8ab0\u306e\u9762\u5b50\u3092\u5f53\u305f\u308a\u306b\u3059\u308b\u304b\n\t\t\tmindex = rand() % ((4 - iniMentsu[j]) * 3 + 2); // \u3069\u306e\u724c\u3092\u5f53\u305f\u308a\u724c\u306b\u3059\u308b\u304b\n\t\t\tif(mindex >= (4 - iniMentsu[j]) * 3){\n\t\t\t\t/* \u5358\u9a0e\u5f85\u3061 */\n\t\t\t\tassert(aMentsu[j][4] >= 0 && aMentsu[j][4] < 34);\n\t\t\t\taMachi[aMentsu[j][4]] = 1;\n          \n\n\t\t\t\tif(aMentsu[j][4] < 27){\n\t\t\t\t\t/* \u5ef6\u3079\u5358\u9a0e */\n\t\t\t\t\tfor(k=0;k<4;k++){\n\t\t\t\t\t\tif(aMentsu[j][k] >= 0 && (aMentsu[j][k] % 7) != 6 && \n\t\t\t\t\t\t\t(aMentsu[j][k] / 7)*9 + (aMentsu[j][k] % 7) + 3 == aMentsu[j][4]){\n\t\t\t\t\t\t\tassert(aMentsu[j][4] >= 3);\n\t\t\t\t\t\t\taMachi[aMentsu[j][4] - 3] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (aMentsu[j][k] >= 0 && (aMentsu[j][k] % 7) != 0 &&\n\t\t\t\t\t\t\t(aMentsu[j][k] / 7)*9 + (aMentsu[j][k] % 7) - 1 == aMentsu[j][4]){\n\t\t\t\t\t\t\tassert(aMentsu[j][4] + 3 < 34);\n\t\t\t\t\t\t\taMachi[aMentsu[j][4] + 3] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t/* \u9762\u5b50\u5f85\u3061 */\n\t\t\t\tindex = iniMentsu[j] + mindex/3;\n\t\t\t\t\n\t\t\t\tif(aMentsu[j][index] < 21){\n\t\t\t\t\t/* \u9806\u5b50 */\n\t\t\t\t\tpai = (aMentsu[j][index] / 7) * 9 + (aMentsu[j][index] % 7);\n\t\t\t\t\tassert(pai >= 0 && pai < 34);\n\t\t\t\t\tif((mindex % 3) == 1){\n\t\t\t\t\t\t/* \u30ab\u30f3\u30c1\u30e3\u30f3 */\n\t\t\t\t\t\taMachi[pai+1] = 1;\n\n\t\t\t\t\t\t/* \u6697\u523b\u30ab\u30d6\u30ea */\n\t\t\t\t\t\tif(aMentsu[j][4] == pai + 2){\n\t\t\t\t\t\t\tif (pai < 0) {\n\t\t\t\t\t\t\t\tassert(pai >= 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taMachi[pai] = 1;\n\t\t\t\t\t\t}else if(aMentsu[j][4] == pai - 1){\n\t\t\t\t\t\t\tassert(pai + 2 < 34);\n\t\t\t\t\t\t\taMachi[pai + 2] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}else if((mindex % 3) == 0 && (pai % 9) == 6){\n\t\t\t\t\t\t/* \u30da\u30f3\u30c1\u30e3\u30f3 */\n\t\t\t\t\t\taMachi[pai] = 1;\n\t\t\t\t\t\t/* \u6697\u523b\u30ab\u30d6\u30ea */\n\t\t\t\t\t\tif(aMentsu[j][4] == pai + 1){\n\t\t\t\t\t\t\tassert(pai + 2 < 34);\n\t\t\t\t\t\t\taMachi[pai + 2] = 1;\n\t\t\t\t\t\t}else if(aMentsu[j][4] == pai + 2){\n\t\t\t\t\t\t\tassert(pai + 1 < 34);\n\t\t\t\t\t\t\taMachi[pai + 1] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}else if((mindex % 3) == 2 && (pai % 9) == 0){\n\t\t\t\t\t\t/* \u30da\u30f3\u30c1\u30e3\u30f3 */\n\t\t\t\t\t\taMachi[pai+2] = 1;\n\t\t\t\t\t\t/* \u6697\u523b\u30ab\u30d6\u30ea */\n\t\t\t\t\t\tif(aMentsu[j][4] == pai){\n\t\t\t\t\t\t\tassert(pai + 1 < 34);\n\t\t\t\t\t\t\taMachi[pai + 1] = 1;\n\t\t\t\t\t\t}else if(aMentsu[j][4] == pai + 1){\n\t\t\t\t\t\t\taMachi[pai] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\t/* \u4e21\u9762 */\n\t\t\t\t\t\tif((mindex % 3) == 0){\n\t\t\t\t\t\t\tassert(pai + 3 < 34);\n\t\t\t\t\t\t\taMachi[pai] = 1;\n\t\t\t\t\t\t\taMachi[pai+3] = 1;\n\t\t\t\t\t\t\t/* \u6697\u523b\u30ab\u30d6\u30ea */\n\t\t\t\t\t\t\tif(aMentsu[j][4] == pai + 1){\n\t\t\t\t\t\t\t\taMachi[pai+2] = 1;\n\t\t\t\t\t\t\t}else if(aMentsu[j][4] == pai + 2){\n\t\t\t\t\t\t\t\taMachi[pai+1] = 1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tassert(pai + 2 < 34);\n\t\t\t\t\t\t\tassert(pai >= 1);\n\t\t\t\t\t\t\taMachi[pai + 2] = 1;\n\t\t\t\t\t\t\taMachi[pai-1] = 1;\n\t\t\t\t\t\t\t/* \u6697\u523b\u30ab\u30d6\u30ea */\n\t\t\t\t\t\t\tif(aMentsu[j][4] == pai){\n\t\t\t\t\t\t\t\taMachi[pai+1] = 1;\n\t\t\t\t\t\t\t}else if(aMentsu[j][4] == pai + 1){\n\t\t\t\t\t\t\t\taMachi[pai] = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t/* \u523b\u5b50\u306f\u30b7\u30e3\u30f3\u30dd\u30f3\u5f85\u3061 */\n\t\t\t\t\tassert(aMentsu[j][4] >= 0 && aMentsu[j][4] < 34);\n\t\t\t\t\taMachi[aMentsu[j][index] - 21] = 1;\n\t\t\t\t\taMachi[aMentsu[j][4]] = 1;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfuriten = 0;\n\t\t\tfor(k=0;k<34;k++){\n\t\t\t\tif(aMachi[k] && aAnpai[j][k]){\n\t\t\t\t\tfuriten = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(furiten == 0){\n\t\t\t\tfor(k=0;k<34;k++){\n\t\t\t\t\tif(aMachi[k]){\n\t\t\t\t\t\tpKikenhai[k] += 1.0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\t}\n\n\n\t\t/* \u6b8b\u3063\u305f\u724c\u3092\u5c71\u306e\u6570\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8 */\n\t\tfor(j=0;j<34;j++){\n\t\t\tpNokorihai[j] += aPaikukan[3][j];\n\t\t}\nfailure:\n\t\tj=0;\n\n\t}\n\n\t/* \u8a66\u884c\u56de\u6570\u3067\u5272\u308a\u7b97\u3092\u3057\u3066\u5e73\u5747\u5024\u3068\u3059\u308b */\n\tfor(i=0;i<34;i++){\n\t\tpNokorihai[i] /= SIMU_SIZE;\n\t\tpKikenhai[i] /= SIMU_SIZE;\n\t}\n\n\tfor(i=0;i<27+34;i++){\n\t\tpMentsuSimo[i] /= SIMU_SIZE;\n\t\tpMentsuToimen[i] /= SIMU_SIZE;\n\t\tpMentsuKami[i] /= SIMU_SIZE;\n\t}\n\n\treturn 1;\n}\n```\n\n## C++\n```C++\n\tvoid MJ0::simulate(Players *players, Player *myself, vector<Pai> *doras)\n\t{\n\t\tPaiArray nokorihai(4.0f), pai_kukan;\n\t\tauto mentsu_full = [](Player &p) {return p._mentsu.size() + p._naki_mentsu.size() < 4; };\n\n\t\tfor (auto &player : *players) {\n\t\t\tplayer._anpai = PaiArray();\n\t\t\tplayer._kikenhai = PaiArray();\n\t\t\tfor (auto pai : player._tehai) {\n\t\t\t\tnokorihai[pai.getNum()] -= 1.0f;\n\t\t\t}\n\n\t\t\tfor (auto pai : player._kawahai) {\n\t\t\t\tif (!pai.isNaki()) nokorihai[pai.getNum()] -= 1.0f;\n\t\t\t\tplayer._anpai[pai.getNum()] = 1.0f;\n\t\t\t}\n\n\t\t\tfor (auto m : player._naki_mentsu) {\n\t\t\t\tm.sub(&nokorihai);\n\t\t\t}\n\n\t\t\tplayer._mentsu.clear();\n\t\t}\n\n\t\tmyself->_kikenhai = PaiArray();\n\n\t\tfor (auto dora : *doras) {\n\t\t\tnokorihai[dora.getDorahyouji()] -= 1.0f;\n\t\t}\n\n\t\tfor (size_t i = 0; i < SIMU_SIZE; i++) {\n\t\t\tfor (auto &player : *players) {\n\t\t\t\tplayer._pai_kukan = nokorihai;\n\t\t\t}\n\n\t\t\tmyself->_pai_kukan = nokorihai;\n\n\t\t\tPlayers::iterator it;\n\t\t\twhile ((it = find_if(players->begin(), players->end(), mentsu_full))\n\t\t\t\t   != players->end()) {\n\t\t\t\twhile ((it = find_if(it, players->end(), mentsu_full))\n\t\t\t\t\t   != players->end()) {\n\t\t\t\t\tauto all = Mentsu::all();\n\t\t\t\t\tconst auto &pai_kukan = it->_pai_kukan;\n\t\t\t\t\t// \u30e1\u30f3\u30c4\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u62bd\u51fa\u3059\u308b\n\t\t\t\t\tfloat sum = accumulate(all.cbegin(), all.cend(), 0.0f, [pai_kukan](float a,const Mentsu &m) { return a + m.weight(pai_kukan); });\n\t\t\t\t\tfloat val = rand() * sum / RAND_MAX;\n\t\t\t\t\tfloat tmp = 0.0f;\n\t\t\t\t\tauto mentsu = find_if(all.cbegin(), all.cend(), [val, tmp, pai_kukan](const Mentsu &m) mutable { tmp += m.weight(pai_kukan); return val < tmp; });\n\t\t\t\t\t(it->_mentsu).push_back(*mentsu);\n\n\t\t\t\t\t// \u30e1\u30f3\u30c4\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb\u3059\u308b\n\t\t\t\t\tfor (auto &p2 : *players)\n\t\t\t\t\t{\n\t\t\t\t\t\tmentsu->sub(&p2._pai_kukan);\n\t\t\t\t\t}\n\t\t\t\t\tmentsu->sub(&myself->_pai_kukan);\n\n\t\t\t\t\t// \u724c\u306e\u5371\u967a\u5ea6\u3092\u66f4\u65b0\u3059\u308b\n\t\t\t\t\tmentsu->addKiken(&it->_kikenhai);\n\t\t\t\t\tmentsu->addKiken(&myself->_kikenhai);\n\t\t\t\t\tit++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (auto &player : *players) {\n\t\t\t\tauto all = Mentsu::all_atama();\n\t\t\t\tconst auto &pai_kukan = player._pai_kukan;\n\t\t\t\t// \u30a2\u30bf\u30de\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u62bd\u51fa\u3059\u308b\n\t\t\t\tfloat sum = accumulate(all.cbegin(), all.cend(), 0.0f, [pai_kukan](float a, const Mentsu &m) { return a + m.weight(pai_kukan); });\n\t\t\t\tfloat val = rand() * sum / RAND_MAX;\n\t\t\t\tfloat tmp = 0.0f;\n\t\t\t\tauto mentsu = find_if(all.cbegin(), all.cend(), [val, tmp, pai_kukan](const Mentsu &m) mutable { tmp += m.weight(pai_kukan); return val <= tmp; });\n\t\t\t\t(player._mentsu).push_back(*mentsu);\n\n\t\t\t\t// \u30a2\u30bf\u30de\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb\u3059\u308b\n\t\t\t\tfor (auto &p2 : *players)\n\t\t\t\t{\n\t\t\t\t\tmentsu->sub(&p2._pai_kukan);\n\t\t\t\t}\n\t\t\t\tmentsu->sub(&myself->_pai_kukan);\n\n\t\t\t\t// \u724c\u306e\u5371\u967a\u5ea6\u3092\u66f4\u65b0\u3059\u308b\n\t\t\t\tmentsu->addKiken(&player._kikenhai);\n\t\t\t\tmentsu->addKiken(&myself->_kikenhai);\n\t\t\t}\n\n\t\t\tpai_kukan += myself->_pai_kukan;\n\t\t}\n\n\t\tmyself->_pai_kukan = pai_kukan / SIMU_SIZE;\n\t\tmyself->_kikenhai = myself->_kikenhai / SIMU_SIZE;\n\t}\n```\n\n## ruby\u304a\u3088\u3073mruby\n```ruby\nclass MJ0\n  SIMU_SIZE=5000\n  \n  def self.simulate(players, myself, doras)\n    _nokorihai = Array.new(34, 4.0)\n    pai_kukan = Array.new(34, 0.0)\n    \n    players_w_myself = (players + [myself])\n    \n    players_w_myself.each do |player| \n      player.anpai = Array.new(34, false)\n      player.kikenhai = Array.new(34, 0.0)\n      player.tehai.each { |hai| _nokorihai[hai.num] -= 1 }\n      \n      player.kawahai.each do |hai|\n        _nokorihai[hai.num] -= 1 unless hai.naki\n        player.anpai[hai.num] = true\n      end\n      player.naki_mentsu.each { |m| m.sub(_nokorihai) }\n      player.mentsu = []\n    end\n    \n    myself.kikenhai = Array.new(34, 0.0)\n    \n    doras.each { |dora| _nokorihai[dora.getDoraHyouji] -= 1 }\n    \n    SIMU_SIZE.times do\n      players_w_myself.each do |player|\n        player.pai_kukan = _nokorihai.clone\n        # TODO \u624b\u8aad\u307f\u3067\u724c\u7a7a\u9593\u3092\u5909\u3048\u308b\n      end\n      \n      while !(subjects = players.select { |player| player.naki_mentsu.size + player.mentsu.size < 4 }).empty?\n        subjects.each do |player|\n          # \u30e1\u30f3\u30c4\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u62bd\u51fa\u3059\u308b\n          mentsu = Mentsu.all.w_sample { |m| m.weight(player.pai_kukan) }\n          player.mentsu.push(mentsu)\n          # \u30e1\u30f3\u30c4\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb\u3059\u308b\n          players_w_myself.each { |p2| mentsu.sub(p2.pai_kukan) }\n          # \u5371\u967a\u5ea6\u3092\u66f4\u65b0\u3059\u308b\n          mentsu.kiken(myself.kikenhai)\n        end\n      end\n      \n      players.each do |player|\n        # \u982d\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u62bd\u51fa\u3059\u308b\n        mentsu = Mentsu.all_atama.w_sample { |m| m.weight(player.pai_kukan) }\n        player.mentsu.push(mentsu)\n        # \u30e1\u30f3\u30c4\u3092\u69cb\u6210\u3059\u308b\u724c\u3092\u724c\u7a7a\u9593\u304b\u3089\u9664\u53bb\u3059\u308b\n        players_w_myself.each { |p2| mentsu.sub(p2.pai_kukan) }\n        # \u5371\u967a\u5ea6\u3092\u66f4\u65b0\u3059\u308b\n        mentsu.kiken(myself.kikenhai)\n      end\n    \n      pai_kukan.each_with_index { |pai, idx| pai_kukan[idx] += myself.pai_kukan[idx] }\n    end\n    myself.pai_kukan = pai_kukan.map { |pai| pai / SIMU_SIZE }\n    myself.kikenhai.map! { |pai| pai / SIMU_SIZE }\n  end\nend\n```\n\n# \u7d50\u679c\nmruby\u306fmbrc\u3067\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5f8c\u3001mruby -b\u3067\u6e2c\u5b9a\n\n| \u8a00\u8a9e | \u6e2c\u5b9a\u7d50\u679c(ms) |\n|:---|:---|\n| C\u8a00\u8a9e | 16 |\n| C++ | 7 |\n| ruby(2.3.1) | 895 |\n| mruby(1.2.0) | 4659 |\n\n\u5b9f\u884c\u3057\u305f\u77ac\u9593\u76ee\u3092\u7591\u3044\u307e\u3057\u305f\u30011\u56de\u306e\u5b9f\u884c\u30674\u79d2!?\u306a\u3093\u3060\u3063\u3066\u30fc\u3002C++\u304b\u3089ruby\u3067\u3082100\u500d\u9045\u3044\u306e\u3067\u3046\u30fc\u3093\u3068\u304a\u3082\u3046\u306e\u3067\u3059\u304c\u3001mruby\u3067\u306f\u306a\u3093\u3068600\u500d\u4ee5\u4e0a\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\u3002ruby\u306e\u30b3\u30fc\u30c9\u3092\u3082\u3046\u5c11\u3057\u66f8\u304d\u76f4\u305b\u3070\u591a\u5c11\u306f\u901f\u304f\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3061\u3087\u3063\u3068\u81ea\u5206\u306e\u6c42\u3081\u308b\u54c1\u8cea(100ms\u4ee5\u5185)\u307e\u3067\u3044\u3051\u308b\u6c17\u304c\u305b\u305a\u3001\u3061\u3087\u3063\u3068\u65ad\u5ff5\u3057\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\n\u73fe\u72b6mruby\u3067\u306f\u8efd\u3044\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8d70\u3089\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001AI\u3092\u304c\u3063\u3064\u308a\u8a18\u8ff0\u3057\u3066\u5b9f\u884c\u3059\u308b\u306b\u306f10\u5e74\u304f\u3089\u3044\u65e9\u3059\u304e\u305f\u3088\u3046\u3067\u3059\u3002\u5f8c\u3005\u306e\u6539\u826f\u3092\u5f85\u3061\u307e\u3057\u3087\u3046\u3002\n\u8ab0\u304bmruby\u306e\u30b3\u30fc\u30c9\u309210\u500d\u304f\u3089\u3044\u901f\u304f\u3059\u308b\u65b9\u6cd5\u3092\u3054\u5b58\u3058\u3067\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044m(_ _)m\n", "tags": ["\u9ebb\u96c0", "AI", "mruby"]}