{"tags": ["spring", "spring-boot", "Transaction", "Java"], "context": "\u5148\u307b\u3069\u300cSpring\u306eDB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u5171\u6709\u65b9\u6cd5(DB\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3)\u3092\u7406\u89e3\u3059\u308b\u300d\u3092\u6295\u7a3f\u3057\u307e\u3057\u305f\u304c\u30013rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea(Doma\u3068\u304b)\u3084\u30aa\u30ec\u30aa\u30ecJDBC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3082\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u52d5\u4f5c\u691c\u8a3c\u30d0\u30fc\u30b8\u30e7\u30f3\n\nSpring Boot 1.5.1.RELEASE\nSpring Framework 4.3.6.RELEASE\n\n\n\u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd\u3092\u4f7f\u3063\u305fSQL\u306e\u5b9f\u884c\n\u307e\u305a\u3001DataSource\u304b\u3089\u53d6\u5f97\u3057\u305fConnection\u3092\u4f7f\u3063\u3066SQL\u3092\u5b9f\u884c\u3059\u308b\u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\npackage com.example;\n\nimport java.sql.*;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport java.util.Properties;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jdbc.datasource.SimpleDriverDataSource;\nimport org.springframework.transaction.annotation.Transactional;\n\n@SpringBootApplication\npublic class SpringTxDemoApplication implements CommandLineRunner {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringTxDemoApplication.class, args);\n    }\n\n    private final SqlRunner sqlRunner;\n\n    public SpringTxDemoApplication(SqlRunner sqlRunner) {\n        this.sqlRunner = sqlRunner;\n    }\n\n    @Transactional\n    @Override\n    public void run(String... args) throws Exception {\n\n        sqlRunner.insert(\"INSERT INTO city (name, state, country) VALUES ('San Francisco', 'CA', 'US')\");\n\n        Map<String, Object> city = sqlRunner.find(\"SELECT id, name, state, country FROM city WHERE id = 1\");\n\n        System.out.println(city);\n\n    }\n\n    // \u2605\u2605\u2605 \u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd \u2605\u2605\u2605\n    static class SqlRunner {\n\n        private final DataSource dataSource;\n\n        SqlRunner(DataSource dataSource) {\n            this.dataSource = dataSource;\n        }\n\n        int insert(String sql) throws SQLException {\n            try (Connection connection = dataSource.getConnection(); Statement statement = connection.createStatement()) {\n                return statement.executeUpdate(sql);\n            }\n        }\n\n        Map<String, Object> find(String sql) throws SQLException {\n            Map<String, Object> record = null;\n            try (Connection connection = dataSource.getConnection();\n                    Statement statement = connection.createStatement();\n                    ResultSet resultSet = statement.executeQuery(sql)) {\n                ResultSetMetaData metaData = resultSet.getMetaData();\n                if (resultSet.next()) {\n                    record = new LinkedHashMap<>();\n                    for (int i = 0; i < metaData.getColumnCount(); i++) {\n                        record.put(metaData.getColumnName(i + 1), resultSet.getObject(i + 1));\n                    }\n                }\n            }\n            return record;\n        }\n\n    }\n\n    @Configuration\n    static class DataSourceConfiguration {\n        @Bean\n        public DataSource dataSource(DataSourceProperties properties) throws ClassNotFoundException {\n            SimpleDriverDataSource dataSource = new SimpleDriverDataSource();\n            dataSource.setDriverClass((Class<? extends Driver>) Class.forName(properties.determineDriverClassName()));\n            dataSource.setUrl(properties.determineUrl());\n            dataSource.setUsername(properties.determineUsername());\n            dataSource.setPassword(properties.determinePassword());\n            Properties connectionProperties = new Properties();\n            connectionProperties.setProperty(\"autoCommit\", \"false\");\n            dataSource.setConnectionProperties(connectionProperties);\n            return dataSource;\n        }\n\n        // \u2605\u2605\u2605 \u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd\u306eBean\u5b9a\u7fa9 \u2605\u2605\u2605\n        @Bean\n        public SqlRunner sqlRunner(DataSource dataSource) {\n            return new SqlRunner(dataSource);\n        }\n    }\n\n}\n\n\u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd\u3092\u4f7f\u3063\u3066SQL\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n$ ./mvnw spring-boot:run\n...\n2017-02-12 23:24:29.820 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Creating new transaction with name [com.example.SpringTxDemoApplication$$EnhancerBySpringCGLIB$$28c8c8e4.run]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''\n2017-02-12 23:24:29.821 DEBUG 46942 --- [           main] o.s.j.datasource.SimpleDriverDataSource  : Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]\n2017-02-12 23:24:29.821 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Acquired Connection [conn1: url=jdbc:h2:mem:testdb user=SA] for JDBC transaction\n2017-02-12 23:24:29.842 DEBUG 46942 --- [           main] o.s.j.datasource.SimpleDriverDataSource  : Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]\n2017-02-12 23:24:29.847 DEBUG 46942 --- [           main] o.s.j.datasource.SimpleDriverDataSource  : Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]\nnull\n2017-02-12 23:24:29.861 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Initiating transaction commit\n2017-02-12 23:24:29.861 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Committing JDBC transaction on Connection [conn1: url=jdbc:h2:mem:testdb user=SA]\n2017-02-12 23:24:29.861 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Releasing JDBC Connection [conn1: url=jdbc:h2:mem:testdb user=SA] after transaction\n2017-02-12 23:24:29.862 DEBUG 46942 --- [           main] o.s.jdbc.datasource.DataSourceUtils      : Returning JDBC Connection to DataSource\n...\n\nSpring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u306f\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001INSERT\u5f8c\u306eSELECT\u3067\u30ec\u30b3\u30fc\u30c9\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\n\u30ed\u30b0\u3092\u307f\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\u300cCreating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]\u300d\u304c\uff13\u56de\u51fa\u529b\u3055\u308c\u3066\u304a\u308a\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u958b\u59cb\u6642\u306b\u53d6\u5f97\u3057\u305fConnection\u304c\u5171\u6709\u3067\u304d\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\nSpring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u3078\u306e\u53c2\u52a0\n3rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea(Doma\u3068\u304b)\u3084\u30aa\u30ec\u30aa\u30ecJDBC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u306b\u53c2\u52a0\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306eDataSource\u3092TransactionAwareDataSourceProxy\u306b\u30e9\u30c3\u30d7\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\n@Bean\npublic SqlRunner sqlRunner(DataSource dataSource) {\n    return new SqlRunner(new TransactionAwareDataSourceProxy(dataSource)); // \u2605\u2605\u2605 TransactionAwareDataSourceProxy\u306b\u30e9\u30c3\u30d7\u3059\u308b \u2605\u2605\u2605\n}\n\nTransactionAwareDataSourceProxy\u306b\u30e9\u30c3\u30d7\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u3001INSERT\u5f8c\u306eSELECT\u3067\u30ec\u30b3\u30fc\u30c9\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u30ed\u30b0\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001Connection\u306e\u751f\u6210\u304c\uff11\u56de\u306b\u306a\u3063\u3066\u304a\u308a\u3001Connection\u304c\u5171\u6709\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n$ ./mvnw spring-boot:run\n...\n2017-02-13 00:50:24.228 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Creating new transaction with name [com.example.SpringTxDemoApplication$$EnhancerBySpringCGLIB$$8ef74f1f.run]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''\n2017-02-13 00:50:24.229 DEBUG 47173 --- [           main] o.s.j.datasource.SimpleDriverDataSource  : Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]\n2017-02-13 00:50:24.229 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Acquired Connection [conn1: url=jdbc:h2:mem:testdb user=SA] for JDBC transaction\n{ID=1, NAME=San Francisco, STATE=CA, COUNTRY=US}\n2017-02-13 00:50:24.257 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Initiating transaction commit\n2017-02-13 00:50:24.257 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Committing JDBC transaction on Connection [conn1: url=jdbc:h2:mem:testdb user=SA]\n2017-02-13 00:50:24.258 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Releasing JDBC Connection [conn1: url=jdbc:h2:mem:testdb user=SA] after transaction\n2017-02-13 00:50:24.258 DEBUG 47173 --- [           main] o.s.jdbc.datasource.DataSourceUtils      : Returning JDBC Connection to DataSource\n...\n\nTransactionAwareDataSourceProxy\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u56f3\u3067\u793a\u3059\u3088\u3046\u306bSpring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305fConnection\u306b\u51e6\u7406\u3092\u59d4\u8b72\u3059\u308b\u305f\u3081\u30013rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u3067\u767a\u884c\u3059\u308bSQL\u3092Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n\n\u9805\u756a\n\u8aac\u660e\n\n\n\n\n\u2460\nController\u304b\u3089Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u306eService\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u306eService\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u5b9f\u969b\u306b\u306fProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5236\u5fa1\u3092\u884c\u3046\u30af\u30e9\u30b9(TransactionInterceptor)\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u2461\n\nTransactionInterceptor\u306f\u3001DataSourceTransactionManager\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u3092\u4f9d\u983c\u3059\u308b\u3002\n\n\n\u2462\n\nDataSourceTransactionManager\u306f\u3001\u81ea\u8eab\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305fDataSource\u304b\u3089Connection(autoCommit\u306ffalse\u3068\u306a\u308b)\u3092\u53d6\u5f97\u3057ConnectionHolder(\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5185\u3067\u5171\u6709\u3059\u308bConnection\u3092\u4fdd\u6301\u3059\u308b\u9818\u57df)\u3092\u751f\u6210\u3059\u308b\u3002\u751f\u6210\u3057\u305fConnectionHolder\u306f\u3001TransactionSynchronizationManager\u30af\u30e9\u30b9\u4e0a\u306e\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u306aMap\u578b\u306e\u5909\u6570\u306b\u683c\u7d0d\u3055\u308c\u308b\u3002\n\n\n\u2463\n\nTransactionInterceptor\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u958b\u59cb\u5f8c\u306bService\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\n\n\n\u2464\nService\u304b\u30893rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\n\n\n\u2465\n3rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001DataSource(TransactionAwareDataSourceProxy)\u304b\u3089Connection\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n\n\u2466\n\nDataSource\u304b\u3089\u53d6\u5f97\u3057\u305fConnection\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066SQL\u306e\u5b9f\u884c\u3092\u4f9d\u983c\u3059\u308b\u3002TransactionAwareDataSourceProxy\u304b\u3089\u53d6\u5f97\u3057\u305fConnection\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u5b9f\u969b\u306b\u306fConnection\u306eProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3001Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305fConnection\u306b\u51e6\u7406\u3092\u59d4\u8b72\u3059\u308b\u30af\u30e9\u30b9(TransactionAwareInvocationHandler)\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u2467\n\nTransactionAwareInvocationHandler\u306f\u3001DataSourceUtil#doGetConnection(DataSource)\u3092\u4ecb\u3057\u3066\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308bConnection\u3092\u53d6\u5f97\u3057\u3001\u53d6\u5f97\u3057\u305fConnection\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066SQL\u306e\u5b9f\u884c\u3092\u4f9d\u983c\u3059\u308b\u3002\n\n\n\n\nMyBatis(MyBatis-Spring)\u4f7f\u7528\u6642\u306fTransactionAwareDataSourceProxy\u306f\u4e0d\u8981\n\u79c1\u304c\u4ed5\u4e8b\u3067\u3088\u304f\u3064\u304b\u3046MyBatis(MyBatis-Spring)\u306f3rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001DataSource\u3092TransactionAwareDataSourceProxy\u3067\u30e9\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3053\u308c\u306f\u3001MyBatis-Spring\u304cMyBatis\u672c\u4f53\u306e\u4e2d\u3067\u4f7f\u3046Connection\u3092DataSourceUtil#getConnection(DataSource)\u30e1\u30bd\u30c3\u30c9\u3092\u4ecb\u3057\u3066\u53d6\u5f97\u3059\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\u4eee\u306bTransactionAwareDataSourceProxy\u3067\u30e9\u30c3\u30d7\u3057\u3066\u3082\u3001MyBatis-Spring\u306e\u4e2d\u3067TransactionAwareDataSourceProxy\u306e\u4e2d\u306b\u4fdd\u6301\u3059\u308b\u30aa\u30ea\u30b8\u30ca\u30eb\u306eDataSource\u3092\u53d6\u5f97\u3057\u3066\u5229\u7528\u3059\u308b\u4ed5\u7d44\u307f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nSpring\u307e\u305f\u306fSpring\u3068\u306e\u9023\u643a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u63d0\u4f9b\u304c\u306a\u30443rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u5834\u5408\u3067\u3082\u3001Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u3067SQL\u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\uff01\uff01\u3068\u3044\u3046\u7d39\u4ecb\u3067\u3057\u305f\u3002\u79c1\u306f\u4ed5\u4e8b\u3067\u306fSpring\u306eJdbcTemplate\u3084MyBatis\u3092\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001\u307b\u3068\u3093\u3069TransactionAwareDataSourceProxy\u3092\u4f7f\u3063\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u304a\u6c17\u306b\u5165\u308a\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u9023\u643a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001TransactionAwareDataSourceProxy\u3092\u4f7f\u3046\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#tx-resource-synchronization-tadsp\n\n\u5148\u307b\u3069\u300c[Spring\u306eDB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u5171\u6709\u65b9\u6cd5(DB\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3)\u3092\u7406\u89e3\u3059\u308b](http://qiita.com/kazuki43zoo/items/48061b82933e9b3d4ca8)\u300d\u3092\u6295\u7a3f\u3057\u307e\u3057\u305f\u304c\u30013rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea(Doma\u3068\u304b)\u3084\u30aa\u30ec\u30aa\u30ecJDBC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3082\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n# \u52d5\u4f5c\u691c\u8a3c\u30d0\u30fc\u30b8\u30e7\u30f3\n\n* Spring Boot 1.5.1.RELEASE\n* Spring Framework 4.3.6.RELEASE\n\n# \u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd\u3092\u4f7f\u3063\u305fSQL\u306e\u5b9f\u884c\n\n\u307e\u305a\u3001`DataSource`\u304b\u3089\u53d6\u5f97\u3057\u305f`Connection`\u3092\u4f7f\u3063\u3066SQL\u3092\u5b9f\u884c\u3059\u308b\u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\n```java\npackage com.example;\n\nimport java.sql.*;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport java.util.Properties;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jdbc.datasource.SimpleDriverDataSource;\nimport org.springframework.transaction.annotation.Transactional;\n\n@SpringBootApplication\npublic class SpringTxDemoApplication implements CommandLineRunner {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SpringTxDemoApplication.class, args);\n\t}\n\n\tprivate final SqlRunner sqlRunner;\n\n\tpublic SpringTxDemoApplication(SqlRunner sqlRunner) {\n\t\tthis.sqlRunner = sqlRunner;\n\t}\n\n\t@Transactional\n\t@Override\n\tpublic void run(String... args) throws Exception {\n\n\t\tsqlRunner.insert(\"INSERT INTO city (name, state, country) VALUES ('San Francisco', 'CA', 'US')\");\n\n\t\tMap<String, Object> city = sqlRunner.find(\"SELECT id, name, state, country FROM city WHERE id = 1\");\n\n\t\tSystem.out.println(city);\n\n\t}\n\n\t// \u2605\u2605\u2605 \u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd \u2605\u2605\u2605\n\tstatic class SqlRunner {\n\n\t\tprivate final DataSource dataSource;\n\n\t\tSqlRunner(DataSource dataSource) {\n\t\t\tthis.dataSource = dataSource;\n\t\t}\n\n\t\tint insert(String sql) throws SQLException {\n\t\t\ttry (Connection connection = dataSource.getConnection(); Statement statement = connection.createStatement()) {\n\t\t\t\treturn statement.executeUpdate(sql);\n\t\t\t}\n\t\t}\n\n\t\tMap<String, Object> find(String sql) throws SQLException {\n\t\t\tMap<String, Object> record = null;\n\t\t\ttry (Connection connection = dataSource.getConnection();\n\t\t\t\t\tStatement statement = connection.createStatement();\n\t\t\t\t\tResultSet resultSet = statement.executeQuery(sql)) {\n\t\t\t\tResultSetMetaData metaData = resultSet.getMetaData();\n\t\t\t\tif (resultSet.next()) {\n\t\t\t\t\trecord = new LinkedHashMap<>();\n\t\t\t\t\tfor (int i = 0; i < metaData.getColumnCount(); i++) {\n\t\t\t\t\t\trecord.put(metaData.getColumnName(i + 1), resultSet.getObject(i + 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn record;\n\t\t}\n\n\t}\n\n\t@Configuration\n\tstatic class DataSourceConfiguration {\n\t\t@Bean\n\t\tpublic DataSource dataSource(DataSourceProperties properties) throws ClassNotFoundException {\n\t\t\tSimpleDriverDataSource dataSource = new SimpleDriverDataSource();\n\t\t\tdataSource.setDriverClass((Class<? extends Driver>) Class.forName(properties.determineDriverClassName()));\n\t\t\tdataSource.setUrl(properties.determineUrl());\n\t\t\tdataSource.setUsername(properties.determineUsername());\n\t\t\tdataSource.setPassword(properties.determinePassword());\n\t\t\tProperties connectionProperties = new Properties();\n\t\t\tconnectionProperties.setProperty(\"autoCommit\", \"false\");\n\t\t\tdataSource.setConnectionProperties(connectionProperties);\n\t\t\treturn dataSource;\n\t\t}\n\n\t\t// \u2605\u2605\u2605 \u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd\u306eBean\u5b9a\u7fa9 \u2605\u2605\u2605\n\t\t@Bean\n\t\tpublic SqlRunner sqlRunner(DataSource dataSource) {\n\t\t\treturn new SqlRunner(dataSource);\n\t\t}\n\t}\n\n}\n```\n\n\u30aa\u30ec\u30aa\u30ecDB\u30a2\u30af\u30bb\u30b9\u6a5f\u80fd\u3092\u4f7f\u3063\u3066SQL\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n$ ./mvnw spring-boot:run\n...\n2017-02-12 23:24:29.820 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Creating new transaction with name [com.example.SpringTxDemoApplication$$EnhancerBySpringCGLIB$$28c8c8e4.run]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''\n2017-02-12 23:24:29.821 DEBUG 46942 --- [           main] o.s.j.datasource.SimpleDriverDataSource  : Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]\n2017-02-12 23:24:29.821 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Acquired Connection [conn1: url=jdbc:h2:mem:testdb user=SA] for JDBC transaction\n2017-02-12 23:24:29.842 DEBUG 46942 --- [           main] o.s.j.datasource.SimpleDriverDataSource  : Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]\n2017-02-12 23:24:29.847 DEBUG 46942 --- [           main] o.s.j.datasource.SimpleDriverDataSource  : Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]\nnull\n2017-02-12 23:24:29.861 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Initiating transaction commit\n2017-02-12 23:24:29.861 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Committing JDBC transaction on Connection [conn1: url=jdbc:h2:mem:testdb user=SA]\n2017-02-12 23:24:29.861 DEBUG 46942 --- [           main] o.s.j.d.DataSourceTransactionManager     : Releasing JDBC Connection [conn1: url=jdbc:h2:mem:testdb user=SA] after transaction\n2017-02-12 23:24:29.862 DEBUG 46942 --- [           main] o.s.jdbc.datasource.DataSourceUtils      : Returning JDBC Connection to DataSource\n...\n```\n\nSpring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u306f\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001INSERT\u5f8c\u306eSELECT\u3067\u30ec\u30b3\u30fc\u30c9\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\n\u30ed\u30b0\u3092\u307f\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\u300c`Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]`\u300d\u304c\uff13\u56de\u51fa\u529b\u3055\u308c\u3066\u304a\u308a\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u958b\u59cb\u6642\u306b\u53d6\u5f97\u3057\u305f`Connection`\u304c\u5171\u6709\u3067\u304d\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n# Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u3078\u306e\u53c2\u52a0\n\n3rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea(Doma\u3068\u304b)\u3084\u30aa\u30ec\u30aa\u30ecJDBC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u306b\u53c2\u52a0\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306e`DataSource`\u3092`TransactionAwareDataSourceProxy`\u306b\u30e9\u30c3\u30d7\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```java\n@Bean\npublic SqlRunner sqlRunner(DataSource dataSource) {\n\treturn new SqlRunner(new TransactionAwareDataSourceProxy(dataSource)); // \u2605\u2605\u2605 TransactionAwareDataSourceProxy\u306b\u30e9\u30c3\u30d7\u3059\u308b \u2605\u2605\u2605\n}\n```\n\n`TransactionAwareDataSourceProxy`\u306b\u30e9\u30c3\u30d7\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u3001INSERT\u5f8c\u306eSELECT\u3067\u30ec\u30b3\u30fc\u30c9\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u30ed\u30b0\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001`Connection`\u306e\u751f\u6210\u304c\uff11\u56de\u306b\u306a\u3063\u3066\u304a\u308a\u3001`Connection`\u304c\u5171\u6709\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```\n$ ./mvnw spring-boot:run\n...\n2017-02-13 00:50:24.228 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Creating new transaction with name [com.example.SpringTxDemoApplication$$EnhancerBySpringCGLIB$$8ef74f1f.run]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''\n2017-02-13 00:50:24.229 DEBUG 47173 --- [           main] o.s.j.datasource.SimpleDriverDataSource  : Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE]\n2017-02-13 00:50:24.229 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Acquired Connection [conn1: url=jdbc:h2:mem:testdb user=SA] for JDBC transaction\n{ID=1, NAME=San Francisco, STATE=CA, COUNTRY=US}\n2017-02-13 00:50:24.257 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Initiating transaction commit\n2017-02-13 00:50:24.257 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Committing JDBC transaction on Connection [conn1: url=jdbc:h2:mem:testdb user=SA]\n2017-02-13 00:50:24.258 DEBUG 47173 --- [           main] o.s.j.d.DataSourceTransactionManager     : Releasing JDBC Connection [conn1: url=jdbc:h2:mem:testdb user=SA] after transaction\n2017-02-13 00:50:24.258 DEBUG 47173 --- [           main] o.s.jdbc.datasource.DataSourceUtils      : Returning JDBC Connection to DataSource\n...\n```\n\n\n\n`TransactionAwareDataSourceProxy`\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u56f3\u3067\u793a\u3059\u3088\u3046\u306bSpring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f`Connection`\u306b\u51e6\u7406\u3092\u59d4\u8b72\u3059\u308b\u305f\u3081\u30013rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u3067\u767a\u884c\u3059\u308bSQL\u3092Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![spring-jdbc-aware-tx.png](https://qiita-image-store.s3.amazonaws.com/0/117313/45dabd48-accf-a5b9-73bf-45e8b6cf1499.png)\n\n| \u9805\u756a | \u8aac\u660e |\n| :---: | --- |\n| \u2460 | Controller\u304b\u3089Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u306eService\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u306eService\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u5b9f\u969b\u306b\u306fProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5236\u5fa1\u3092\u884c\u3046\u30af\u30e9\u30b9(`TransactionInterceptor`)\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002|\n| \u2461 | `TransactionInterceptor`\u306f\u3001`DataSourceTransactionManager`\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u3092\u4f9d\u983c\u3059\u308b\u3002|\n| \u2462 | `DataSourceTransactionManager`\u306f\u3001\u81ea\u8eab\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f`DataSource`\u304b\u3089`Connection`(`autoCommit`\u306f`false`\u3068\u306a\u308b)\u3092\u53d6\u5f97\u3057`ConnectionHolder`(\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5185\u3067\u5171\u6709\u3059\u308b`Connection`\u3092\u4fdd\u6301\u3059\u308b\u9818\u57df)\u3092\u751f\u6210\u3059\u308b\u3002\u751f\u6210\u3057\u305f`ConnectionHolder`\u306f\u3001`TransactionSynchronizationManager`\u30af\u30e9\u30b9\u4e0a\u306e\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u306a`Map`\u578b\u306e\u5909\u6570\u306b\u683c\u7d0d\u3055\u308c\u308b\u3002|\n| \u2463 | `TransactionInterceptor`\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u958b\u59cb\u5f8c\u306bService\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002|\n| \u2464 | Service\u304b\u30893rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002 |\n| \u2465 | 3rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001`DataSource`(`TransactionAwareDataSourceProxy`)\u304b\u3089`Connection`\u3092\u53d6\u5f97\u3059\u308b\u3002|\n| \u2466 | `DataSource`\u304b\u3089\u53d6\u5f97\u3057\u305f`Connection`\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066SQL\u306e\u5b9f\u884c\u3092\u4f9d\u983c\u3059\u308b\u3002`TransactionAwareDataSourceProxy`\u304b\u3089\u53d6\u5f97\u3057\u305f`Connection`\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u5b9f\u969b\u306b\u306f`Connection`\u306eProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3001Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f`Connection`\u306b\u51e6\u7406\u3092\u59d4\u8b72\u3059\u308b\u30af\u30e9\u30b9(`TransactionAwareInvocationHandler`)\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002|\n| \u2467 | `TransactionAwareInvocationHandler`\u306f\u3001`DataSourceUtil#doGetConnection(DataSource)`\u3092\u4ecb\u3057\u3066\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b`Connection`\u3092\u53d6\u5f97\u3057\u3001\u53d6\u5f97\u3057\u305f`Connection`\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066SQL\u306e\u5b9f\u884c\u3092\u4f9d\u983c\u3059\u308b\u3002 |\n\n\n# MyBatis(MyBatis-Spring)\u4f7f\u7528\u6642\u306f`TransactionAwareDataSourceProxy`\u306f\u4e0d\u8981\n\n\u79c1\u304c\u4ed5\u4e8b\u3067\u3088\u304f\u3064\u304b\u3046MyBatis(MyBatis-Spring)\u306f3rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001`DataSource`\u3092`TransactionAwareDataSourceProxy`\u3067\u30e9\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3053\u308c\u306f\u3001MyBatis-Spring\u304cMyBatis\u672c\u4f53\u306e\u4e2d\u3067\u4f7f\u3046`Connection`\u3092`DataSourceUtil#getConnection(DataSource)`\u30e1\u30bd\u30c3\u30c9\u3092\u4ecb\u3057\u3066\u53d6\u5f97\u3059\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\u4eee\u306b`TransactionAwareDataSourceProxy`\u3067\u30e9\u30c3\u30d7\u3057\u3066\u3082\u3001MyBatis-Spring\u306e\u4e2d\u3067`TransactionAwareDataSourceProxy`\u306e\u4e2d\u306b\u4fdd\u6301\u3059\u308b\u30aa\u30ea\u30b8\u30ca\u30eb\u306e`DataSource`\u3092\u53d6\u5f97\u3057\u3066\u5229\u7528\u3059\u308b\u4ed5\u7d44\u307f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n# \u307e\u3068\u3081\n\nSpring\u307e\u305f\u306fSpring\u3068\u306e\u9023\u643a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u63d0\u4f9b\u304c\u306a\u30443rd\u30d1\u30fc\u30c6\u30a3\u88fd\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u5834\u5408\u3067\u3082\u3001Spring\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u4e0b\u3067SQL\u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\uff01\uff01\u3068\u3044\u3046\u7d39\u4ecb\u3067\u3057\u305f\u3002\u79c1\u306f\u4ed5\u4e8b\u3067\u306fSpring\u306e`JdbcTemplate`\u3084MyBatis\u3092\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001\u307b\u3068\u3093\u3069`TransactionAwareDataSourceProxy`\u3092\u4f7f\u3063\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u304a\u6c17\u306b\u5165\u308a\u306eDB\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u9023\u643a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001`TransactionAwareDataSourceProxy`\u3092\u4f7f\u3046\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n\n* http://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#tx-resource-synchronization-tadsp\n"}