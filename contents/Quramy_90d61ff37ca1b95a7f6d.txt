{"context": "\n\n\u306f\u3058\u3081\u306b\nElectron\u306fNode.js + HTML5\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u3044\u3044\u3068\u3053\u53d6\u308a\u306a\u958b\u767a\u304c\u884c\u3048\u308b\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\u305d\u306e\u5206\u3001\u958b\u767a\u74b0\u5883\u3082Electron\u306a\u3089\u3067\u306f\u306e\u8003\u616e\u30fb\u5de5\u592b\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059.\n\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u306f, Electron\u30a2\u30d7\u30ea\u3092\u5feb\u9069\u306b\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u958b\u767a\u74b0\u5883Tips\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059. \n\u305d\u3082\u305d\u3082\u300cElecron\u3063\u3066\u306a\u3093\u305e\u3084\uff1f\u300d\u3068\u304b\u300c\u3069\u3046\u3044\u3046\u98a8\u306b\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u306e\uff1f\u300d\u3068\u3044\u3046\u65b9\u306b\u3064\u3044\u3066\u306f, \u624b\u524d\u5473\u564c\u3067\u6050\u7e2e\u3067\u306f\u3042\u308a\u307e\u3059\u304c, Electron\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046 \u3092\u76ee\u3092\u901a\u3059\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059.\n\u307e\u305f, \u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u306e\u5143\u3068\u3057\u3066\u3001Quramy/electron-jsx-babel-boilerplate \u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u304c\u51fa\u6765\u4e0a\u304c\u3063\u3066\u3044\u307e\u3059.\nReact + Bable + Sass + Livereload + Platform\u7528Packaging \u5165\u308a\u306eBoilerplate\u3067\u3059\u306e\u3067, \u3053\u308c\u4ee5\u964d\u306e\u8a18\u4e8b\u3092\u8aad\u3080\u306e\u304c\u9762\u5012\u306a\u4eba\u306f\u4f7f\u3048\u3070\u3044\u3044\u3068\u601d\u3046.\n\n\n\u753b\u9762\u7cfb\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n\u50d5\u306f\u65e5\u9803\u306e\u4ed5\u4e8b\u3067\u3042\u308bWeb\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a\u3067\u306f\u3001AngularJS + TypeScript(or CoffeeScript)\u3067\u958b\u767a\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u6562\u3048\u3066React\u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3059\u3002\nAngularJS\u306fView\u3068\u95a2\u4fc2\u306e\u7121\u3044\u6a5f\u80fd\u3082\u542b\u307e\u308c\u305f(Web\u30d6\u30e9\u30a6\u30b6\u3092\u52d5\u4f5c\u74b0\u5883\u3068\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u306b\u304a\u3044\u3066\u306e)Full Stack\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u901a\u4fe1\u7cfb\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3001Ajax\u3092\u30e9\u30c3\u30d7\u3057\u305f$http \u3084 Promise\u5b9f\u88c5\u3067\u3042\u308b $q \u7b49\u304c\u6700\u521d\u304b\u3089\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\u4e00\u65b9\u3001Electron\u306e\u958b\u767a\u3067\u306f\u3001Node.js\u3067\u51fa\u6765\u308b\u3053\u3068\u306f\u7d20\u76f4\u306bNode.js\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u305f\u65b9\u304c\u65e9\u3044\u3053\u3068\u3082\u591a\u304f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u8c4a\u5bcc\u3067\u3059\u3002HTTP\u901a\u4fe1\u3092\u3057\u305f\u3051\u308c\u3070\u3001\u7d20\u76f4\u306brequire('http').request\u3092\u547c\u3073\u51fa\u305b\u3070\u826f\u3044\u306e\u3067\u3059\u3002\n\u305d\u3093\u306a\u3053\u3068\u3092\u8003\u3048\u305f\u7d50\u679c\u3001\u30b7\u30f3\u30d7\u30eb\u306aView\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bReact\u3092\u9078\u629e\u3057\u307e\u3057\u305f. \n\u307e\u305f, React\u306ev0.13.x\u306b\u3088\u308aES6\u306eClass\u8a18\u6cd5\u3068\u306e\u76f8\u6027\u304c\u683c\u6bb5\u306b\u4e0a\u304c\u3063\u305f\u306e\u3067\u3001Babel\u3067ES6, JSX\u3092\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u3059\u308b\u69cb\u6210\u3068\u3057\u3066\u3044\u307e\u3059.\n\nsrc/app.js\n'use strict';\nimport polyfill from 'babel/polyfill';\nimport app from 'app';\nimport BrowserWindow from 'browser-window';\nimport crashReporter from 'crash-reporter';\n\nlet mainWindow = null;\nif(process.env.NODE_ENV === 'develop'){\n  crashReporter.start();\n}\n\napp.on('window-all-closed', () => {\n  app.quit();\n});\n\napp.on('ready', () => {\n  mainWindow = new BrowserWindow({width: 580, height: 365});\n  mainWindow.loadUrl('file://' + __dirname + '/renderer/index.html');\n});\n\n\n\nsrc/renderer/index.html\n<html>\n<head>\n<!-- \u4e2d\u7565 -->\n</head>\n<body>\n<div id=\"app\"></div>\n<script src=\"bootstrap.js\"></script>\n</body>\n</html>\n\n\n\nsrc/renderer/components/main.jsx\n'use strict';\n\nimport React from 'react';\n\nexport class Main extends React.Component {\n  state = {\n    message: 'Hello, Electron'\n  }\n  constructor () {\n    super();\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron main\">\n          <h1>{this.state.message}</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nsrc/renderer/bootstrap.js\n'use strict';\n\nimport polyfill from 'babel/polyfill';\nimport React from 'react';\nimport {Main} from './components/main';\n\nReact.render(React.createElement(Main), document.getElementById('app'));\n\n\ngulp\u3067\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u90e8\u5206\u306e\u30bf\u30b9\u30af\u3092\u66f8\u304f\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\ngulpfile.js\nvar gulp = require('gulp'), $ = require('gulp-load-plugins');\n\ngulp.task('compile:scripts', function () {\n  return gulp.src('src/**/*.{js,jsx}')\n  .pipe($.sourcemaps.init())\n  .pipe($.babel({\n    stage: 0\n  }))\n  .pipe($.sourcemaps.write('.'))\n  .pipe(gulp.dest('.serve'))\n  ;\n});\n\n\nJSX -> JavaScript\u5909\u63db\u3082Babel\u3067\u51fa\u6765\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u304b\u306a\u308a\u30b7\u30f3\u30d7\u30eb\u3067\u3059. \n\u307e\u305f\u3001\u901a\u5e38\u306e\u30d6\u30e9\u30a6\u30b6\u5411\u3051\u30a2\u30d7\u30ea\u306e\u958b\u767a\u3067\u3042\u308c\u3070\u3001bootstrap.js\u3092\u30a8\u30f3\u30c8\u30ea\u3068\u3057\u3066Browserify(+ Reactify or Babelify)\u3067bundle.js\u3092\u4f5c\u308b\u306e\u304c\u738b\u9053\u3067\u3059\u304c, \u4f55\u305bElectron\u306fRenderer Process\u7528\u306e\u30b3\u30fc\u30c9\u304b\u3089\u76f4\u63a5require\u3067\u304d\u308b\u306e\u3067\u3001Browserify\u7b49\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u5b9f\u884c\u53ef\u80fd\u3067\u3059.\n\u305d\u306e\u4ed6\u30dd\u30a4\u30f3\u30c8\u3092\u6319\u3052\u308b\u3068\u3059\u308c\u3070, babel\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306b--stage 0\u76f8\u5f53\u3092\u6e21\u3057\u3066\u3044\u308b\u6240\u3067\u3057\u3087\u3046\u304b(Electron\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3067\u3059\u304c).\n\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u7121\u3044\u5834\u5408, JSX\u306e\u30b3\u30fc\u30c9\u4e2d\u306estate: {...}\u306e\u521d\u671f\u5316\u90e8\u5206\u3067Compile Error\u3068\u306a\u308a\u307e\u3059.\nClass\u5ba3\u8a00\u3067\u306e\u30e1\u30f3\u30d0\u5909\u6570\u521d\u671f\u5316\u306fES6\u4ed5\u69d8\u306b\u306f\u542b\u307e\u308c\u305a, ES7\u306e\u4ed5\u69d8\u3068\u3057\u3066\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u305f\u3081, Babel\u306eExperimental\u6a5f\u80fd\u3092\u4f7f\u3046\u5f62\u306b\u306a\u308a\u307e\u3059.\n\u3061\u306a\u307f\u306b, babel/register\u3092index.html\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3067\u3057\u307e\u3048\u3070, \u5b9f\u884c\u6642\u306btranspile\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c, \u3069\u3046\u305b\u914d\u5e03\u7528\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u969b\u306f\u4e8b\u524d\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u3067, \u6700\u521d\u304b\u3089\u30bf\u30b9\u30af\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059.\n\nLivereload\nElectron\u3067\u306e\u958b\u767a\u3067\u3082Livereload\u3057\u305f\u3044\u3067\u3059\u3088\u306d.\n\u3053\u3053\u3067, Livereload\u306e\u8981\u4ef6\u306f\u4ee5\u4e0b\u306e2\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308a\u307e\u3059.\n\nRendererProcess\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u30b3\u30fc\u30c9\u304c\u5909\u66f4\u3055\u308c\u305f\u3089, \u753b\u9762\u3092reload.\nBrowserProcess(MainProcess, app.js\u306a\u3069)\u3067\u52d5\u4f5c\u3059\u308b\u30b3\u30fc\u30c9\u304c\u5909\u66f4\u3055\u308c\u305f\u3089, RendererProcess\u3082\u308d\u3068\u3082BrowserProcess\u3092\u518d\u8d77\u52d5\n\n1.\u306f\u901a\u5e38\u306eWeb\u958b\u767a\u306b\u304a\u3051\u308bLivereload\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u307b\u307c\u540c\u69d8\u3067\u3059. 2.\u306flivereload\u3068\u3044\u3046\u3088\u308a\u306fnodemon\u306e\u30a4\u30e1\u30fc\u30b8\u306b\u8fd1\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093.\n1.\u306b\u3064\u3044\u3066\u306f, Stackoverflow\u306a\u3069\u3067\u3082\u53d6\u308a\u6c99\u6c70\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b, gulp-livereload\u3042\u305f\u308a\u3067\u5b9f\u73fe\u3067\u304d\u308b\u306e\u3067\u3059\u304c, 2.\u3068\u306e\u7d71\u5408\u3082\u8996\u91ce\u306b\u5165\u308c\u305f\u7d50\u679c\u3068\u3057\u3066, electron-connect \u3068\u3044\u3046npm\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3066, 1.\u30682.\u3092\u7c21\u5358\u306b\u30bf\u30b9\u30af\u306b\u7d44\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f.\ngulpfile.js\u5074\u3067\u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u3092\u901a\u77e5\u3059\u308b\u30b5\u30fc\u30d0\u3092\u7acb\u3066, Electron\u306eProcess\u5074\u304b\u3089\u30b5\u30fc\u30d0\u3078\u63a5\u7d9a\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u6642\u306b\u5185\u90e8\u7684\u306bBrowserWindow.reloadIgnoringCache\u3067\u30ea\u30ed\u30fc\u30c9\u3092\u304b\u3051\u308b\u4ed5\u7d44\u307f\u3067\u3059.\n2.\u306e\u6a5f\u80fd\u3068\u3057\u3066\u306f, BrowserProcess\u3092\u5fa9\u5e30\u3055\u305b\u305f\u969b\u306b, \u518d\u8d77\u52d5\u524d\u306e\u8868\u793a\u4f4d\u7f6e\u3078Position\u3092\u5fa9\u5e30\u3055\u305b\u308b\u3068\u3044\u3063\u305f\u7d30\u304b\u3044\u6a5f\u80fd\u3082\u4ed5\u8fbc\u3093\u3067\u3044\u307e\u3059.\n\u5229\u7528\u3059\u308b\u969b\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n\ngulpfile.js\n'use strict';\nvar gulp, electron = require('electron-connect').server.create();\n\ngulp.task('serve', function () {\n\n  // Electron\u306e\u8d77\u52d5\n  electron.start();\n\n  // BrowserProcess(MainProcess)\u304c\u8aad\u307f\u8fbc\u3080\u30ea\u30bd\u30fc\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f\u3089, Electron\u81ea\u4f53\u3092\u518d\u8d77\u52d5\n  gulp.watch(['.serve/app.js', '.serve/browser/**/*.js'], electron.restart);\n\n  // RendererProcess\u304c\u8aad\u307f\u8fbc\u3080\u30ea\u30bd\u30fc\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f\u3089, RendererProcess\u306breload\u3055\u305b\u308b\n  gulp.watch(['.serve/styles/**/*.css', '.serve/renderer/**/*.{html,js}'], electron.reload);\n});\n\n\n\nsrc/renderer/index.html\n<html>\n<head>\n<!-- \u4e2d\u7565 -->\n</head>\n<body>\n<div id=\"app\"></div>\n\n<!-- gulp\u5074\u3067\u7acb\u3066\u305fserver\u3078\u63a5\u7d9a\u3059\u308b -->\n<script>require('electron-connect').client.create()</script>\n\n<script src=\"bootstrap.js\"></script>\n</body>\n</html>\n\n\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\n\u914d\u5e03\u7528\u306e\u30a2\u30d7\u30ea\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306b\u306f, electron-packager \u3092\u7528\u3044\u307e\u3059.\n\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u3068, \u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306edistribution\u30ac\u30a4\u30c9\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306e\u4f5c\u696d\u3092\u81ea\u52d5\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n\ngulpfile.js\n'use strict';\n\nvar gulp = require('gulp'), packager = require('electron-packager');\n\ngulp.task('package:darwin', ['build'], function (done) {\n  packager({\n    dir: 'dist',              // \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u306a\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n    out: 'release/darwin',    // .app \u3084 .exe\u306e\u51fa\u529b\u5148\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n    name: 'ElectronApp',      // \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\n    arch: 'x64',              // CPU\u7a2e\u5225. x64 or ia32\n    platform: 'darwin',       // OS\u7a2e\u5225. darwin or win32 or linux\n    version: '0.28.1'         // Electron\u306eversion\n  }, function (err, path) {\n    // \u8ffd\u52a0\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u624b\u3092\u52a0\u3048\u305f\u3051\u308c\u3070, path\u914d\u4e0b\u3092\u9069\u5b9c\u3044\u3058\u308b\n    done();\n  });\n});\n\n\n\u4e0a\u8a18\u4ee5\u5916\u306b\u3082, \u8ffd\u52a0\u3067\u304d\u308boption\u306f\u3042\u308a\u307e\u3059\u304c, electron-packager\u306eREADME\u306b\u3042\u308b\u901a\u308a, platform: win32\u306b\u5bfe\u3057\u3066icon\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f, rcedit.exe \u304c\u52d5\u4f5c\u3059\u308b\u74b0\u5883\u3067\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059.\nwine\u3084AppVeyor\u306e\u5229\u7528\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046.\n\nBrowserify\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u6700\u521d\u306b\u6295\u7a3f\u3057\u305f\u5f53\u521d\u306f, browserify\u3069\u3046\u3067\u3082\u3088\u304f\u306d\uff1f\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u304c, @mizchi \u6c0f\u304b\u3089node_modules\u914d\u4e0b\u306eminify\u52b9\u679c\u3092\u5177\u4f53\u7684\u306a\u6570\u5024\u3068\u3057\u3066\u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u3082\u3089\u3063\u305f\u305f\u3081\u3001minify\u6b32\u6c42\u304c\u518d\u3073\u938c\u9996\u3092\u3082\u305f\u3052\u3066\u304d\u307e\u3057\u305f(\u672c\u7bc0\u306f\u6295\u7a3f\u5f8c\u306b\u66f8\u304d\u76f4\u3057\u3066\u3044\u307e\u3059).\n\u6700\u521d\u306bBrowserify\u3067\u4e0d\u8981\u30b3\u30fc\u30c9\u306e\u524a\u9664\u306b\u53d6\u308a\u7d44\u3093\u3060\u969b\u306f\u3001BrowserProcess\u5411\u3051\u3068RendererProcess\u5411\u3051\u306e.js\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u3001Browserify\u3067\u305d\u308c\u305e\u308c\u306ebundle.js\u3092\u4f5c\u3063\u3066\u307f\u305f\u306e\u3067\u3059\u304c, \u3053\u308c\u306f\u5358\u7d14\u306b\u306f\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f. \nBrowserProcess\u5074\u306e\u30b3\u30fc\u30c9\u3092Browserify\u3057\u3066\u3057\u307e\u3046\u3068, RendererProcess\u5074\u3067require('remote').require('...') \u304c\u8a18\u8f09\u3057\u3066\u3042\u308b\u5834\u5408\u306b\u52d5\u4f5c\u3057\u306a\u304f\u306a\u308b\u306e\u3067\u3059.\nElectron\u672c\u4f53\u306e\u30b3\u30fc\u30c9atom/browser/lib/rpc-server.coffee\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u4e0b\u8a18\u304c\u66f2\u8005\u3067\u3059.\nprocess.mainModule.require(module)\n\nBrowserProcess\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u304cbundle\u306b\u307e\u3068\u3081\u3089\u308c\u308b\u3068, remote.require\u5b9f\u884c\u6642\u306b\u306fmodule\u304c\u5b58\u5728\u3057\u306a\u3044\u306e\u304c\u539f\u56e0\u3067\u3059.\n\u73fe\u72b6\u3067\u306f, node_modulse\u5185\u306e\u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u6bce\u306bBrowserify\u3067bundle\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059(Appendix\u306ebundle:dependencies\u30bf\u30b9\u30af).\n\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u308a, BrowserProcess\u3068node_modules\u306e\u95a2\u4fc2\u304c\u4fdd\u305f\u308c\u308b\u305f\u3081, remote.require('...')\u3082\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u307e\u3059. \n\n2016.08.16 \u8ffd\u8a18\nbundle\u306e\u4f5c\u6210\u306b\u3064\u3044\u3066\u306f\u3001\u6700\u8fd1\u306fwebpack\u306b\u843d\u3061\u7740\u304d\u3064\u3064\u3042\u308a\u307e\u3059\u3002\n\nwebpack.config.js\n\"use strict\";\n\nvar webpack = require(\"webpack\");\nvar path = require(\"path\");\n\nmodule.exports = {\n  target: \"electron\",\n  node: {\n    __dirname: false,\n    __filename: false\n  },\n  entry: {\n    \"main/index\": \"./src/main/index.js\",\n    \"renderer/app\": \"./src/renderer/app.jsx\"\n  },\n  resolve: {\n    extensions: [\"\", \".js\", \".jsx\"]\n  },\n  module: {\n    loaders: [\n      { exclude: /node_modules/, test: /\\.jsx?$/, loader: \"babel\" }\n    ]\n  },\n  output: {\n    path: path.join(__dirname, \"dist\"),\n    filename: \"[name].js\"\n  }\n};\n\n\n\n\u3053\u307c\u308c\u8a71\n\u3053\u3053\u304b\u3089\u306f, \u6bd4\u8f03\u7684\u3069\u3046\u3067\u3082\u826f\u3055\u3052\u306a\u5185\u5bb9\u3092\u30aa\u30de\u30b1\u7684\u306b\u66f8\u3044\u3066\u304a\u304d\u307e\u3059.\n\u524d\u8ff0\u306e\u901a\u308a, RendererProcess\u306ehtml\u304b\u3089electron-connect\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059. electron-connect\u306f\u958b\u767a\u88dc\u52a9\u5c02\u7528\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308a, \u5b9f\u884c\u6642\u306f\u4e0d\u8981\u3067\u3059. \u308f\u3056\u308f\u3056Packaging\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30b3\u30d4\u30fc\u3057\u305f\u304f\u3042\u308a\u307e\u305b\u3093.\n\u4e0b\u8a18\u306e\u3088\u3046\u306b, <!-- build:remove --> \u3068gulp-useref \u3092\u5229\u7528\u3057, Packaging\u3059\u308bhtml\u304b\u3089\u306f <script> \u304c\u6d88\u53bb\u3055\u308c\u308b\u3088\u3046\u306b\u30bf\u30b9\u30af\u3092\u7d44\u3093\u3067\u3044\u307e\u3059.\n\nsrc/renderer/index.html\n<!-- build:remove-->\n<script>require('electron-connect').client.create()</script>\n<!-- endbuild -->\n\n\n\nAsync/Await\n\u4eca\u56de\u4f5c\u6210\u3057\u305fboilerplate \u306b\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u3057\u3066\u542b\u3081\u3066\u3044\u307e\u305b\u3093\u304c, Babel\u306eoption\u306bstage: 0 \u3092\u8ffd\u52a0\u3057\u305f\u526f\u6b21\u7684(?)\u306a\u52b9\u679c\u3068\u3057\u3066, ES7\u306eAsync/Await\u3082\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n\u3068\u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u3092\u4f5c\u6210\u3057\u3066\u3044\u305f\u3068\u304d\u306b\u975e\u540c\u671f\u306e\u30b3\u30fc\u30c9\u304cAsync/Await\u3067\u7dba\u9e97\u306b\u304b\u3051\u308b\u3053\u3068\u3092\u5b9f\u611f\u3057\u307e\u3057\u305f.\nAsync/Await\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f, ES7 \u306e Async/Await \u3092\u4f7f\u3063\u3066\u307f\u305f\u7b49\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044. \n\nAppendix\n\n\u5b8c\u6210\u5f62\u306egulpfile\n\ngulpfile.js\n'use strict';\n\nvar gulp = require('gulp');\nvar $ = require('gulp-load-plugins')();\nvar _ = require('lodash');\nvar fs = require('fs');\nvar path = require('path');\nvar del = require('del');\nvar mainBowerFiles = require('main-bower-files');\nvar electronServer = require('electron-connect').server;\nvar packager = require('electron-packager');\nvar merge = require('merge2');\nvar browserify = require('browserify');\nvar source = require('vinyl-source-stream');\nvar buffer = require('vinyl-buffer');\nvar packageJson = require('./package.json');\n\nvar srcDir      = 'src';      // source directory\nvar serveDir    = '.serve';   // directory for serve task\nvar distDir     = 'dist';     // directory for serve:dist task\nvar releaseDir  = 'release';  // directory for application packages\n\n// Compile *.scss files with sourcemaps\ngulp.task('compile:styles', function () {\n  return gulp.src([srcDir + '/styles/**/*.scss'])\n    .pipe($.sourcemaps.init())\n    .pipe($.sass())\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest(serveDir + '/styles'))\n    ;\n});\n\n// Inject *.css(compiled and depedent) files into *.html\ngulp.task('inject:css', ['compile:styles'], function() {\n  return gulp.src(srcDir + '/**/*.html')\n    .pipe($.inject(gulp.src(mainBowerFiles().concat([serveDir + '/styles/**/*.css'])), {\n      relative: true,\n      ignorePath: ['../../.serve', '..'],\n      addPrefix: '..'\n    }))\n    .pipe(gulp.dest(serveDir))\n  ;\n});\n\n// Copy assets\ngulp.task('misc', function () {\n  return gulp.src(srcDir + '/assets/**/*')\n    .pipe(gulp.dest(serveDir + '/assets'))\n    .pipe(gulp.dest(distDir + '/assets'))\n  ;\n});\n\n// Incremental compile ES6, JSX files with sourcemaps\ngulp.task('compile:scripts:watch', function (done) {\n  gulp.src('src/**/*.{js,jsx}')\n    .pipe($.watch('src/**/*.{js,jsx}', {verbose: true}))\n    .pipe($.plumber())\n    .pipe($.sourcemaps.init())\n    .pipe($.babel({stage: 0}))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest(serveDir))\n  ;\n  done();\n});\n\n// Compile scripts for distribution\ngulp.task('compile:scripts', function () {\n  return gulp.src('src/**/*.{js,jsx}')\n    .pipe($.babel({stage: 0}))\n    .pipe($.uglify())\n    .pipe(gulp.dest(distDir))\n  ;\n});\n\n// Make HTML and concats CSS files.\ngulp.task('html', ['inject:css'], function () {\n  var assets = $.useref.assets({searchPath: ['bower_components', serveDir + '/styles']});\n  return gulp.src(serveDir + '/renderer/**/*.html')\n    .pipe(assets)\n    .pipe($.if('*.css', $.minifyCss()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe(gulp.dest(distDir + '/renderer'))\n  ;\n});\n\n// Copy fonts file. You don't need to copy *.ttf nor *.svg nor *.otf.\ngulp.task('copy:fonts', function () {\n  return gulp.src('bower_components/**/fonts/*.woff')\n    .pipe($.flatten())\n    .pipe(gulp.dest(distDir + '/fonts'))\n  ;\n});\n\n// Minify dependent modules.\ngulp.task('bundle:dependencies', function () {\n  var streams = [], dependencies = [];\n  var defaultModules = ['assert', 'buffer', 'console', 'constants', 'crypto', 'domain', 'events', 'http', 'https', 'os', 'path', 'punycode', 'querystring', 'stream', 'string_decoder', 'timers', 'tty', 'url', 'util', 'vm', 'zlib'],\n      electronModules = ['app', 'auto-updater', 'browser-window', 'content-tracing', 'dialog', 'global-shortcut', 'ipc', 'menu', 'menu-item', 'power-monitor', 'protocol', 'tray', 'remote', 'web-frame', 'clipboard', 'crash-reporter', 'native-image', 'screen', 'shell'];\n\n  // Because Electron's node integration, bundle files don't need to include browser-specific shim.\n  var excludeModules = defaultModules.concat(electronModules);\n\n  for(var name in packageJson.dependencies) {\n    dependencies.push(name);\n  }\n\n  // create a list of dependencies' main files\n  var modules = dependencies.map(function (dep) {\n    var packageJson = require(dep + '/package.json');\n    var main;\n    if(!packageJson.main) {\n      main = ['index.js'];\n    }else if(Array.isArray(packageJson.main)){\n      main = packageJson.main;\n    }else{\n      main = [packageJson.main];\n    }\n    return {name: dep, main: main.map(function (it) {return path.basename(it);})};\n  });\n\n  // add babel/polyfill module\n  modules.push({name: 'babel', main: ['polyfill.js']});\n\n  // create bundle file and minify for each main files\n  modules.forEach(function (it) {\n    it.main.forEach(function (entry) {\n      var b = browserify('node_modules/' + it.name + '/' + entry, {\n        detectGlobal: false,\n        standalone: entry\n      });\n      excludeModules.forEach(function (moduleName) {b.exclude(moduleName)});\n      streams.push(b.bundle()\n        .pipe(source(entry))\n        .pipe(buffer())\n        .pipe($.uglify())\n        .pipe(gulp.dest(distDir + '/node_modules/' + it.name))\n      );\n    });\n    streams.push(\n      // copy modules' package.json\n      gulp.src('node_modules/' + it.name + '/package.json')\n        .pipe(gulp.dest(distDir + '/node_modules/' + it.name))\n    );\n  });\n\n  return merge(streams);\n});\n\n// Write a package.json for distribution\ngulp.task('packageJson', ['bundle:dependencies'], function (done) {\n  var json = _.cloneDeep(packageJson);\n  json.main = 'app.js';\n  fs.writeFile(distDir + '/package.json', JSON.stringify(json), function (err) {\n    done();\n  });\n});\n\n// Package for each platforms\ngulp.task('package', ['win32', 'darwin', 'linux'].map(function (platform) {\n  var taskName = 'package:' + platform;\n  gulp.task(taskName, ['build'], function (done) {\n    packager({\n      dir: distDir,\n      name: 'ElectronApp',\n      arch: 'x64',\n      platform: platform,\n      out: releaseDir + '/' + platform,\n      version: '0.28.1'\n    }, function (err) {\n      done();\n    });\n  });\n  return taskName;\n}));\n\n// Delete generated directories.\ngulp.task('clean', function (done) {\n  del([serveDir, distDir, releaseDir], function () {\n    done();\n  });\n});\n\ngulp.task('serve', ['inject:css', 'compile:scripts:watch', 'compile:styles', 'misc'], function () {\n  var electron = electronServer.create();\n  electron.start();\n  gulp.watch(['bower.json', srcDir + '/renderer/index.html'], ['inject:css']);\n  gulp.watch([serveDir + '/app.js', serveDir + '/browser/**/*.js'], electron.restart);\n  gulp.watch([serveDir + '/styles/**/*.css', serveDir + '/renderer/**/*.html', serveDir + '/renderer/**/*.js'], electron.reload);\n});\n\ngulp.task('build', ['html', 'compile:scripts', 'packageJson', 'copy:fonts', 'misc']);\n\ngulp.task('serve:dist', ['build'], function () {\n  electronServer.create({path: distDir}).start();\n});\n\ngulp.task('default', ['build']);\n\n\n# \u306f\u3058\u3081\u306b\n\n[Electron](http://electron.atom.io/)\u306fNode.js + HTML5\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u3044\u3044\u3068\u3053\u53d6\u308a\u306a\u958b\u767a\u304c\u884c\u3048\u308b\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\u305d\u306e\u5206\u3001\u958b\u767a\u74b0\u5883\u3082Electron\u306a\u3089\u3067\u306f\u306e\u8003\u616e\u30fb\u5de5\u592b\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059.\n\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u306f, Electron\u30a2\u30d7\u30ea\u3092\u5feb\u9069\u306b\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u958b\u767a\u74b0\u5883Tips\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059. \n\n\u305d\u3082\u305d\u3082\u300cElecron\u3063\u3066\u306a\u3093\u305e\u3084\uff1f\u300d\u3068\u304b\u300c\u3069\u3046\u3044\u3046\u98a8\u306b\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u306e\uff1f\u300d\u3068\u3044\u3046\u65b9\u306b\u3064\u3044\u3066\u306f, \u624b\u524d\u5473\u564c\u3067\u6050\u7e2e\u3067\u306f\u3042\u308a\u307e\u3059\u304c, [Electron\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046](http://qiita.com/Quramy/items/a4be32769366cfe55778) \u3092\u76ee\u3092\u901a\u3059\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059.\n\n\u307e\u305f, \u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u306e\u5143\u3068\u3057\u3066\u3001[Quramy/electron-jsx-babel-boilerplate](https://github.com/Quramy/electron-jsx-babel-boilerplate) \u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u304c\u51fa\u6765\u4e0a\u304c\u3063\u3066\u3044\u307e\u3059.\nReact + Bable + Sass + Livereload + Platform\u7528Packaging \u5165\u308a\u306eBoilerplate\u3067\u3059\u306e\u3067, \u3053\u308c\u4ee5\u964d\u306e\u8a18\u4e8b\u3092\u8aad\u3080\u306e\u304c\u9762\u5012\u306a\u4eba\u306f\u4f7f\u3048\u3070\u3044\u3044\u3068\u601d\u3046.\n\n![Electron_App.png](https://qiita-image-store.s3.amazonaws.com/0/8808/b3cfbbb9-763d-30a3-797b-e7dbc7c6e8c4.png)\n\n# \u753b\u9762\u7cfb\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n\u50d5\u306f\u65e5\u9803\u306e\u4ed5\u4e8b\u3067\u3042\u308bWeb\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a\u3067\u306f\u3001AngularJS + TypeScript(or CoffeeScript)\u3067\u958b\u767a\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u6562\u3048\u3066React\u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3059\u3002\n\nAngularJS\u306fView\u3068\u95a2\u4fc2\u306e\u7121\u3044\u6a5f\u80fd\u3082\u542b\u307e\u308c\u305f(Web\u30d6\u30e9\u30a6\u30b6\u3092\u52d5\u4f5c\u74b0\u5883\u3068\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u306b\u304a\u3044\u3066\u306e)Full Stack\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u901a\u4fe1\u7cfb\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3001Ajax\u3092\u30e9\u30c3\u30d7\u3057\u305f`$http` \u3084 Promise\u5b9f\u88c5\u3067\u3042\u308b `$q` \u7b49\u304c\u6700\u521d\u304b\u3089\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\u4e00\u65b9\u3001Electron\u306e\u958b\u767a\u3067\u306f\u3001Node.js\u3067\u51fa\u6765\u308b\u3053\u3068\u306f\u7d20\u76f4\u306bNode.js\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u305f\u65b9\u304c\u65e9\u3044\u3053\u3068\u3082\u591a\u304f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u8c4a\u5bcc\u3067\u3059\u3002HTTP\u901a\u4fe1\u3092\u3057\u305f\u3051\u308c\u3070\u3001\u7d20\u76f4\u306b`require('http').request`\u3092\u547c\u3073\u51fa\u305b\u3070\u826f\u3044\u306e\u3067\u3059\u3002\n\u305d\u3093\u306a\u3053\u3068\u3092\u8003\u3048\u305f\u7d50\u679c\u3001\u30b7\u30f3\u30d7\u30eb\u306aView\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bReact\u3092\u9078\u629e\u3057\u307e\u3057\u305f. \n\n\u307e\u305f, React\u306ev0.13.x\u306b\u3088\u308aES6\u306eClass\u8a18\u6cd5\u3068\u306e\u76f8\u6027\u304c\u683c\u6bb5\u306b\u4e0a\u304c\u3063\u305f\u306e\u3067\u3001Babel\u3067ES6, JSX\u3092\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u3059\u308b\u69cb\u6210\u3068\u3057\u3066\u3044\u307e\u3059.\n\n<!-- {{{ \u753b\u9762\u5468\u308a\u306e\u30b3\u30fc\u30c9 -->\n\n```js:src/app.js\n'use strict';\nimport polyfill from 'babel/polyfill';\nimport app from 'app';\nimport BrowserWindow from 'browser-window';\nimport crashReporter from 'crash-reporter';\n\nlet mainWindow = null;\nif(process.env.NODE_ENV === 'develop'){\n  crashReporter.start();\n}\n\napp.on('window-all-closed', () => {\n  app.quit();\n});\n\napp.on('ready', () => {\n  mainWindow = new BrowserWindow({width: 580, height: 365});\n  mainWindow.loadUrl('file://' + __dirname + '/renderer/index.html');\n});\n```\n\n```html:src/renderer/index.html\n<html>\n<head>\n<!-- \u4e2d\u7565 -->\n</head>\n<body>\n<div id=\"app\"></div>\n<script src=\"bootstrap.js\"></script>\n</body>\n</html>\n```\n\n```js:src/renderer/components/main.jsx\n'use strict';\n\nimport React from 'react';\n\nexport class Main extends React.Component {\n  state = {\n    message: 'Hello, Electron'\n  }\n  constructor () {\n    super();\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron main\">\n          <h1>{this.state.message}</h1>\n        </div>\n      </div>\n    );\n  }\n}\n```\n\n```js:src/renderer/bootstrap.js\n'use strict';\n\nimport polyfill from 'babel/polyfill';\nimport React from 'react';\nimport {Main} from './components/main';\n\nReact.render(React.createElement(Main), document.getElementById('app'));\n```\n\n<!-- }}} \u753b\u9762\u5468\u308a\u306e\u30b3\u30fc\u30c9 -->\n\ngulp\u3067\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u90e8\u5206\u306e\u30bf\u30b9\u30af\u3092\u66f8\u304f\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```js:gulpfile.js\nvar gulp = require('gulp'), $ = require('gulp-load-plugins');\n\ngulp.task('compile:scripts', function () {\n  return gulp.src('src/**/*.{js,jsx}')\n  .pipe($.sourcemaps.init())\n  .pipe($.babel({\n    stage: 0\n  }))\n  .pipe($.sourcemaps.write('.'))\n  .pipe(gulp.dest('.serve'))\n  ;\n});\n```\n\nJSX -> JavaScript\u5909\u63db\u3082Babel\u3067\u51fa\u6765\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u304b\u306a\u308a\u30b7\u30f3\u30d7\u30eb\u3067\u3059. \n\u307e\u305f\u3001\u901a\u5e38\u306e\u30d6\u30e9\u30a6\u30b6\u5411\u3051\u30a2\u30d7\u30ea\u306e\u958b\u767a\u3067\u3042\u308c\u3070\u3001bootstrap.js\u3092\u30a8\u30f3\u30c8\u30ea\u3068\u3057\u3066Browserify(+ Reactify or Babelify)\u3067bundle.js\u3092\u4f5c\u308b\u306e\u304c\u738b\u9053\u3067\u3059\u304c, \u4f55\u305bElectron\u306fRenderer Process\u7528\u306e\u30b3\u30fc\u30c9\u304b\u3089\u76f4\u63a5`require`\u3067\u304d\u308b\u306e\u3067\u3001Browserify\u7b49\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u5b9f\u884c\u53ef\u80fd\u3067\u3059.\n\n\u305d\u306e\u4ed6\u30dd\u30a4\u30f3\u30c8\u3092\u6319\u3052\u308b\u3068\u3059\u308c\u3070, `babel`\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306b`--stage 0`\u76f8\u5f53\u3092\u6e21\u3057\u3066\u3044\u308b\u6240\u3067\u3057\u3087\u3046\u304b(Electron\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3067\u3059\u304c).\n\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u7121\u3044\u5834\u5408, JSX\u306e\u30b3\u30fc\u30c9\u4e2d\u306e`state: {...}`\u306e\u521d\u671f\u5316\u90e8\u5206\u3067Compile Error\u3068\u306a\u308a\u307e\u3059.\nClass\u5ba3\u8a00\u3067\u306e\u30e1\u30f3\u30d0\u5909\u6570\u521d\u671f\u5316\u306fES6\u4ed5\u69d8\u306b\u306f\u542b\u307e\u308c\u305a, ES7\u306e\u4ed5\u69d8\u3068\u3057\u3066\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u305f\u3081, Babel\u306eExperimental\u6a5f\u80fd\u3092\u4f7f\u3046\u5f62\u306b\u306a\u308a\u307e\u3059.\n\n\u3061\u306a\u307f\u306b, `babel/register`\u3092index.html\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3067\u3057\u307e\u3048\u3070, \u5b9f\u884c\u6642\u306btranspile\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c, \u3069\u3046\u305b\u914d\u5e03\u7528\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u969b\u306f\u4e8b\u524d\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u3067, \u6700\u521d\u304b\u3089\u30bf\u30b9\u30af\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059.\n\n# Livereload\nElectron\u3067\u306e\u958b\u767a\u3067\u3082Livereload\u3057\u305f\u3044\u3067\u3059\u3088\u306d.\n\n\u3053\u3053\u3067, Livereload\u306e\u8981\u4ef6\u306f\u4ee5\u4e0b\u306e2\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308a\u307e\u3059.\n\n1. RendererProcess\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u30b3\u30fc\u30c9\u304c\u5909\u66f4\u3055\u308c\u305f\u3089, \u753b\u9762\u3092reload.\n1. BrowserProcess(MainProcess, app.js\u306a\u3069)\u3067\u52d5\u4f5c\u3059\u308b\u30b3\u30fc\u30c9\u304c\u5909\u66f4\u3055\u308c\u305f\u3089, RendererProcess\u3082\u308d\u3068\u3082BrowserProcess\u3092\u518d\u8d77\u52d5\n\n1.\u306f\u901a\u5e38\u306eWeb\u958b\u767a\u306b\u304a\u3051\u308bLivereload\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u307b\u307c\u540c\u69d8\u3067\u3059. 2.\u306flivereload\u3068\u3044\u3046\u3088\u308a\u306fnodemon\u306e\u30a4\u30e1\u30fc\u30b8\u306b\u8fd1\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093.\n\n1.\u306b\u3064\u3044\u3066\u306f, [Stackoverflow](http://stackoverflow.com/questions/30445766/live-reload-for-electron-application)\u306a\u3069\u3067\u3082\u53d6\u308a\u6c99\u6c70\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b, gulp-livereload\u3042\u305f\u308a\u3067\u5b9f\u73fe\u3067\u304d\u308b\u306e\u3067\u3059\u304c, 2.\u3068\u306e\u7d71\u5408\u3082\u8996\u91ce\u306b\u5165\u308c\u305f\u7d50\u679c\u3068\u3057\u3066, [electron-connect](https://github.com/Quramy/electron-connect) \u3068\u3044\u3046npm\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3066, 1.\u30682.\u3092\u7c21\u5358\u306b\u30bf\u30b9\u30af\u306b\u7d44\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f.\n\ngulpfile.js\u5074\u3067\u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u3092\u901a\u77e5\u3059\u308b\u30b5\u30fc\u30d0\u3092\u7acb\u3066, Electron\u306eProcess\u5074\u304b\u3089\u30b5\u30fc\u30d0\u3078\u63a5\u7d9a\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u6642\u306b\u5185\u90e8\u7684\u306b`BrowserWindow.reloadIgnoringCache`\u3067\u30ea\u30ed\u30fc\u30c9\u3092\u304b\u3051\u308b\u4ed5\u7d44\u307f\u3067\u3059.\n2.\u306e\u6a5f\u80fd\u3068\u3057\u3066\u306f, BrowserProcess\u3092\u5fa9\u5e30\u3055\u305b\u305f\u969b\u306b, \u518d\u8d77\u52d5\u524d\u306e\u8868\u793a\u4f4d\u7f6e\u3078Position\u3092\u5fa9\u5e30\u3055\u305b\u308b\u3068\u3044\u3063\u305f\u7d30\u304b\u3044\u6a5f\u80fd\u3082\u4ed5\u8fbc\u3093\u3067\u3044\u307e\u3059.\n\u5229\u7528\u3059\u308b\u969b\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n\n<!-- livereload task {{{ -->\n\n```js:gulpfile.js\n'use strict';\nvar gulp, electron = require('electron-connect').server.create();\n\ngulp.task('serve', function () {\n\n  // Electron\u306e\u8d77\u52d5\n  electron.start();\n\n  // BrowserProcess(MainProcess)\u304c\u8aad\u307f\u8fbc\u3080\u30ea\u30bd\u30fc\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f\u3089, Electron\u81ea\u4f53\u3092\u518d\u8d77\u52d5\n  gulp.watch(['.serve/app.js', '.serve/browser/**/*.js'], electron.restart);\n\n  // RendererProcess\u304c\u8aad\u307f\u8fbc\u3080\u30ea\u30bd\u30fc\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f\u3089, RendererProcess\u306breload\u3055\u305b\u308b\n  gulp.watch(['.serve/styles/**/*.css', '.serve/renderer/**/*.{html,js}'], electron.reload);\n});\n```\n\n```html:src/renderer/index.html\n<html>\n<head>\n<!-- \u4e2d\u7565 -->\n</head>\n<body>\n<div id=\"app\"></div>\n\n<!-- gulp\u5074\u3067\u7acb\u3066\u305fserver\u3078\u63a5\u7d9a\u3059\u308b -->\n<script>require('electron-connect').client.create()</script>\n\n<script src=\"bootstrap.js\"></script>\n</body>\n</html>\n```\n\n<!-- livereload task }}} -->\n\n# \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\n\u914d\u5e03\u7528\u306e\u30a2\u30d7\u30ea\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306b\u306f, [electron-packager](https://www.npmjs.com/package/electron-packager) \u3092\u7528\u3044\u307e\u3059.\n\n\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u3068, [\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306edistribution\u30ac\u30a4\u30c9](https://github.com/atom/electron/blob/master/docs/tutorial/application-distribution.md)\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306e\u4f5c\u696d\u3092\u81ea\u52d5\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n\n```js:gulpfile.js\n'use strict';\n\nvar gulp = require('gulp'), packager = require('electron-packager');\n\ngulp.task('package:darwin', ['build'], function (done) {\n  packager({\n    dir: 'dist',              // \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u306a\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n    out: 'release/darwin',    // .app \u3084 .exe\u306e\u51fa\u529b\u5148\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n    name: 'ElectronApp',      // \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\n    arch: 'x64',              // CPU\u7a2e\u5225. x64 or ia32\n    platform: 'darwin',       // OS\u7a2e\u5225. darwin or win32 or linux\n    version: '0.28.1'         // Electron\u306eversion\n  }, function (err, path) {\n    // \u8ffd\u52a0\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u624b\u3092\u52a0\u3048\u305f\u3051\u308c\u3070, path\u914d\u4e0b\u3092\u9069\u5b9c\u3044\u3058\u308b\n    done();\n  });\n});\n```\n\n\u4e0a\u8a18\u4ee5\u5916\u306b\u3082, \u8ffd\u52a0\u3067\u304d\u308boption\u306f\u3042\u308a\u307e\u3059\u304c, electron-packager\u306eREADME\u306b\u3042\u308b\u901a\u308a, `platform: win32`\u306b\u5bfe\u3057\u3066`icon`\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f, `rcedit.exe` \u304c\u52d5\u4f5c\u3059\u308b\u74b0\u5883\u3067\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059.\n[wine](https://www.winehq.org/)\u3084[AppVeyor](http://www.appveyor.com/)\u306e\u5229\u7528\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046.\n\n## Browserify\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u6700\u521d\u306b\u6295\u7a3f\u3057\u305f\u5f53\u521d\u306f, browserify\u3069\u3046\u3067\u3082\u3088\u304f\u306d\uff1f\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u304c, @mizchi \u6c0f\u304b\u3089node_modules\u914d\u4e0b\u306eminify\u52b9\u679c\u3092\u5177\u4f53\u7684\u306a\u6570\u5024\u3068\u3057\u3066\u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u3082\u3089\u3063\u305f\u305f\u3081\u3001minify\u6b32\u6c42\u304c\u518d\u3073\u938c\u9996\u3092\u3082\u305f\u3052\u3066\u304d\u307e\u3057\u305f(\u672c\u7bc0\u306f\u6295\u7a3f\u5f8c\u306b\u66f8\u304d\u76f4\u3057\u3066\u3044\u307e\u3059).\n\n\u6700\u521d\u306bBrowserify\u3067\u4e0d\u8981\u30b3\u30fc\u30c9\u306e\u524a\u9664\u306b\u53d6\u308a\u7d44\u3093\u3060\u969b\u306f\u3001BrowserProcess\u5411\u3051\u3068RendererProcess\u5411\u3051\u306e.js\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u3001Browserify\u3067\u305d\u308c\u305e\u308c\u306ebundle.js\u3092\u4f5c\u3063\u3066\u307f\u305f\u306e\u3067\u3059\u304c, \u3053\u308c\u306f\u5358\u7d14\u306b\u306f\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f. \n\nBrowserProcess\u5074\u306e\u30b3\u30fc\u30c9\u3092Browserify\u3057\u3066\u3057\u307e\u3046\u3068, RendererProcess\u5074\u3067`require('remote').require('...')` \u304c\u8a18\u8f09\u3057\u3066\u3042\u308b\u5834\u5408\u306b\u52d5\u4f5c\u3057\u306a\u304f\u306a\u308b\u306e\u3067\u3059.\nElectron\u672c\u4f53\u306e\u30b3\u30fc\u30c9[atom/browser/lib/rpc-server.coffee](https://github.com/atom/electron/blob/4b12a95d370c023e8fbb54b9144b45744ccafdfe/atom/browser/lib/rpc-server.coffee#L91)\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u4e0b\u8a18\u304c\u66f2\u8005\u3067\u3059.\n\n```js\nprocess.mainModule.require(module)\n```\n\nBrowserProcess\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u304cbundle\u306b\u307e\u3068\u3081\u3089\u308c\u308b\u3068, `remote.require`\u5b9f\u884c\u6642\u306b\u306fmodule\u304c\u5b58\u5728\u3057\u306a\u3044\u306e\u304c\u539f\u56e0\u3067\u3059.\n\n\u73fe\u72b6\u3067\u306f, node_modulse\u5185\u306e\u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u6bce\u306bBrowserify\u3067bundle\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059([Appendix](#appendix)\u306e`bundle:dependencies`\u30bf\u30b9\u30af).\n\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u308a, BrowserProcess\u3068node_modules\u306e\u95a2\u4fc2\u304c\u4fdd\u305f\u308c\u308b\u305f\u3081, `remote.require('...')`\u3082\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u307e\u3059. \n\n### 2016.08.16 \u8ffd\u8a18\nbundle\u306e\u4f5c\u6210\u306b\u3064\u3044\u3066\u306f\u3001\u6700\u8fd1\u306fwebpack\u306b\u843d\u3061\u7740\u304d\u3064\u3064\u3042\u308a\u307e\u3059\u3002\n\n```js:webpack.config.js\n\"use strict\";\n\nvar webpack = require(\"webpack\");\nvar path = require(\"path\");\n\nmodule.exports = {\n  target: \"electron\",\n  node: {\n    __dirname: false,\n    __filename: false\n  },\n  entry: {\n    \"main/index\": \"./src/main/index.js\",\n    \"renderer/app\": \"./src/renderer/app.jsx\"\n  },\n  resolve: {\n    extensions: [\"\", \".js\", \".jsx\"]\n  },\n  module: {\n    loaders: [\n      { exclude: /node_modules/, test: /\\.jsx?$/, loader: \"babel\" }\n    ]\n  },\n  output: {\n    path: path.join(__dirname, \"dist\"),\n    filename: \"[name].js\"\n  }\n};\n```\n\n# \u3053\u307c\u308c\u8a71\n\u3053\u3053\u304b\u3089\u306f, \u6bd4\u8f03\u7684\u3069\u3046\u3067\u3082\u826f\u3055\u3052\u306a\u5185\u5bb9\u3092\u30aa\u30de\u30b1\u7684\u306b\u66f8\u3044\u3066\u304a\u304d\u307e\u3059.\n\n## \n\n[\u524d\u8ff0\u306e\u901a\u308a](#livereload), RendererProcess\u306ehtml\u304b\u3089`electron-connect`\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059. `electron-connect`\u306f\u958b\u767a\u88dc\u52a9\u5c02\u7528\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308a, \u5b9f\u884c\u6642\u306f\u4e0d\u8981\u3067\u3059. \u308f\u3056\u308f\u3056Packaging\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30b3\u30d4\u30fc\u3057\u305f\u304f\u3042\u308a\u307e\u305b\u3093.\n\u4e0b\u8a18\u306e\u3088\u3046\u306b, `<!-- build:remove -->` \u3068[gulp-useref](https://www.npmjs.com/package/gulp-useref) \u3092\u5229\u7528\u3057, Packaging\u3059\u308bhtml\u304b\u3089\u306f `<script>` \u304c\u6d88\u53bb\u3055\u308c\u308b\u3088\u3046\u306b\u30bf\u30b9\u30af\u3092\u7d44\u3093\u3067\u3044\u307e\u3059.\n\n```html:src/renderer/index.html\n<!-- build:remove-->\n<script>require('electron-connect').client.create()</script>\n<!-- endbuild -->\n```\n\n## Async/Await\n\n\u4eca\u56de\u4f5c\u6210\u3057\u305f[boilerplate](https://github.com/Quramy/electron-jsx-babel-boilerplate) \u306b\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u3057\u3066\u542b\u3081\u3066\u3044\u307e\u305b\u3093\u304c, Babel\u306eoption\u306b`stage: 0` \u3092\u8ffd\u52a0\u3057\u305f\u526f\u6b21\u7684(?)\u306a\u52b9\u679c\u3068\u3057\u3066, ES7\u306eAsync/Await\u3082\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n[\u3068\u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](http://qiita.com/Quramy/items/df6415f832a4339716f0) \u3092\u4f5c\u6210\u3057\u3066\u3044\u305f\u3068\u304d\u306b\u975e\u540c\u671f\u306e\u30b3\u30fc\u30c9\u304cAsync/Await\u3067\u7dba\u9e97\u306b\u304b\u3051\u308b\u3053\u3068\u3092\u5b9f\u611f\u3057\u307e\u3057\u305f.\nAsync/Await\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f, [ES7 \u306e Async/Await \u3092\u4f7f\u3063\u3066\u307f\u305f](http://qiita.com/mohayonao/items/435665065d997a4cc50c)\u7b49\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044. \n\n# Appendix\n\n## \u5b8c\u6210\u5f62\u306egulpfile\n\n<!-- gulp all {{{ -->\n\n```js:gulpfile.js\n'use strict';\n\nvar gulp = require('gulp');\nvar $ = require('gulp-load-plugins')();\nvar _ = require('lodash');\nvar fs = require('fs');\nvar path = require('path');\nvar del = require('del');\nvar mainBowerFiles = require('main-bower-files');\nvar electronServer = require('electron-connect').server;\nvar packager = require('electron-packager');\nvar merge = require('merge2');\nvar browserify = require('browserify');\nvar source = require('vinyl-source-stream');\nvar buffer = require('vinyl-buffer');\nvar packageJson = require('./package.json');\n\nvar srcDir      = 'src';      // source directory\nvar serveDir    = '.serve';   // directory for serve task\nvar distDir     = 'dist';     // directory for serve:dist task\nvar releaseDir  = 'release';  // directory for application packages\n\n// Compile *.scss files with sourcemaps\ngulp.task('compile:styles', function () {\n  return gulp.src([srcDir + '/styles/**/*.scss'])\n    .pipe($.sourcemaps.init())\n    .pipe($.sass())\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest(serveDir + '/styles'))\n    ;\n});\n\n// Inject *.css(compiled and depedent) files into *.html\ngulp.task('inject:css', ['compile:styles'], function() {\n  return gulp.src(srcDir + '/**/*.html')\n    .pipe($.inject(gulp.src(mainBowerFiles().concat([serveDir + '/styles/**/*.css'])), {\n      relative: true,\n      ignorePath: ['../../.serve', '..'],\n      addPrefix: '..'\n    }))\n    .pipe(gulp.dest(serveDir))\n  ;\n});\n\n// Copy assets\ngulp.task('misc', function () {\n  return gulp.src(srcDir + '/assets/**/*')\n    .pipe(gulp.dest(serveDir + '/assets'))\n    .pipe(gulp.dest(distDir + '/assets'))\n  ;\n});\n\n// Incremental compile ES6, JSX files with sourcemaps\ngulp.task('compile:scripts:watch', function (done) {\n  gulp.src('src/**/*.{js,jsx}')\n    .pipe($.watch('src/**/*.{js,jsx}', {verbose: true}))\n    .pipe($.plumber())\n    .pipe($.sourcemaps.init())\n    .pipe($.babel({stage: 0}))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest(serveDir))\n  ;\n  done();\n});\n\n// Compile scripts for distribution\ngulp.task('compile:scripts', function () {\n  return gulp.src('src/**/*.{js,jsx}')\n    .pipe($.babel({stage: 0}))\n    .pipe($.uglify())\n    .pipe(gulp.dest(distDir))\n  ;\n});\n\n// Make HTML and concats CSS files.\ngulp.task('html', ['inject:css'], function () {\n  var assets = $.useref.assets({searchPath: ['bower_components', serveDir + '/styles']});\n  return gulp.src(serveDir + '/renderer/**/*.html')\n    .pipe(assets)\n    .pipe($.if('*.css', $.minifyCss()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe(gulp.dest(distDir + '/renderer'))\n  ;\n});\n\n// Copy fonts file. You don't need to copy *.ttf nor *.svg nor *.otf.\ngulp.task('copy:fonts', function () {\n  return gulp.src('bower_components/**/fonts/*.woff')\n    .pipe($.flatten())\n    .pipe(gulp.dest(distDir + '/fonts'))\n  ;\n});\n\n// Minify dependent modules.\ngulp.task('bundle:dependencies', function () {\n  var streams = [], dependencies = [];\n  var defaultModules = ['assert', 'buffer', 'console', 'constants', 'crypto', 'domain', 'events', 'http', 'https', 'os', 'path', 'punycode', 'querystring', 'stream', 'string_decoder', 'timers', 'tty', 'url', 'util', 'vm', 'zlib'],\n      electronModules = ['app', 'auto-updater', 'browser-window', 'content-tracing', 'dialog', 'global-shortcut', 'ipc', 'menu', 'menu-item', 'power-monitor', 'protocol', 'tray', 'remote', 'web-frame', 'clipboard', 'crash-reporter', 'native-image', 'screen', 'shell'];\n\n  // Because Electron's node integration, bundle files don't need to include browser-specific shim.\n  var excludeModules = defaultModules.concat(electronModules);\n\n  for(var name in packageJson.dependencies) {\n    dependencies.push(name);\n  }\n\n  // create a list of dependencies' main files\n  var modules = dependencies.map(function (dep) {\n    var packageJson = require(dep + '/package.json');\n    var main;\n    if(!packageJson.main) {\n      main = ['index.js'];\n    }else if(Array.isArray(packageJson.main)){\n      main = packageJson.main;\n    }else{\n      main = [packageJson.main];\n    }\n    return {name: dep, main: main.map(function (it) {return path.basename(it);})};\n  });\n\n  // add babel/polyfill module\n  modules.push({name: 'babel', main: ['polyfill.js']});\n\n  // create bundle file and minify for each main files\n  modules.forEach(function (it) {\n    it.main.forEach(function (entry) {\n      var b = browserify('node_modules/' + it.name + '/' + entry, {\n        detectGlobal: false,\n        standalone: entry\n      });\n      excludeModules.forEach(function (moduleName) {b.exclude(moduleName)});\n      streams.push(b.bundle()\n        .pipe(source(entry))\n        .pipe(buffer())\n        .pipe($.uglify())\n        .pipe(gulp.dest(distDir + '/node_modules/' + it.name))\n      );\n    });\n    streams.push(\n      // copy modules' package.json\n      gulp.src('node_modules/' + it.name + '/package.json')\n        .pipe(gulp.dest(distDir + '/node_modules/' + it.name))\n    );\n  });\n\n  return merge(streams);\n});\n\n// Write a package.json for distribution\ngulp.task('packageJson', ['bundle:dependencies'], function (done) {\n  var json = _.cloneDeep(packageJson);\n  json.main = 'app.js';\n  fs.writeFile(distDir + '/package.json', JSON.stringify(json), function (err) {\n    done();\n  });\n});\n\n// Package for each platforms\ngulp.task('package', ['win32', 'darwin', 'linux'].map(function (platform) {\n  var taskName = 'package:' + platform;\n  gulp.task(taskName, ['build'], function (done) {\n    packager({\n      dir: distDir,\n      name: 'ElectronApp',\n      arch: 'x64',\n      platform: platform,\n      out: releaseDir + '/' + platform,\n      version: '0.28.1'\n    }, function (err) {\n      done();\n    });\n  });\n  return taskName;\n}));\n\n// Delete generated directories.\ngulp.task('clean', function (done) {\n  del([serveDir, distDir, releaseDir], function () {\n    done();\n  });\n});\n\ngulp.task('serve', ['inject:css', 'compile:scripts:watch', 'compile:styles', 'misc'], function () {\n  var electron = electronServer.create();\n  electron.start();\n  gulp.watch(['bower.json', srcDir + '/renderer/index.html'], ['inject:css']);\n  gulp.watch([serveDir + '/app.js', serveDir + '/browser/**/*.js'], electron.restart);\n  gulp.watch([serveDir + '/styles/**/*.css', serveDir + '/renderer/**/*.html', serveDir + '/renderer/**/*.js'], electron.reload);\n});\n\ngulp.task('build', ['html', 'compile:scripts', 'packageJson', 'copy:fonts', 'misc']);\n\ngulp.task('serve:dist', ['build'], function () {\n  electronServer.create({path: distDir}).start();\n});\n\ngulp.task('default', ['build']);\n```\n\n<!-- gulp all }}} -->\n", "tags": ["Electron", "reactjs", "babel", "gulp", "JavaScript"]}