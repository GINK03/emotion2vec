{"tags": ["rust"], "context": " More than 1 year has passed since last update.trait \u306f\u8272\u3005\u306a\u4f7f\u308f\u308c\u65b9\u3068\u69cb\u6587\u304c\u3042\u308b\u306e\u3067\u3001\u7591\u554f\u70b9\u3092\u30e1\u30e2\u3063\u3068\u304f\u3002\nRust 1.6.0 \u3067\u8a66\u3057\u305f\u3002\n\ntrait \u4ed5\u69d8\u307e\u3068\u3081\nhttps://doc.rust-lang.org/book/traits.html \u3092\u8aad\u3093\u3060\u3060\u3051\u306e\u77e5\u8b58\u3067\u3042\u308b\u304c\u3001\u3056\u3063\u3068\u307e\u3068\u3081\u308b\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u306e\u66f8\u3051\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u307f\u305f\u3044\u306a\u3082\u306e\n\u65e2\u5b58\u306e\u578b\u306b\u5bfe\u3057\u3066 trait \u306e\u5b9f\u88c5\u3092\u66f8\u3051\u308b\n\ntrait X { fn x(&self); }\nstruct A;\nimpl X for A { fn x(&self) { println!(\"x\"); }\n\n\n\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u306b trait \u3092\u6e80\u305f\u3059\u5236\u7d04\u3092\u66f8\u3051\u308b\n\nfn foo<T:X>(&x) { x.x(); } \n\nstruct G<T> { g:T }\nimpl <T:X> G<T> {\n  fn g(&self) { self.x(); println!(\"and {}\", self.g); }\n}\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u6574\u7406\u3059\u308b\u3068\u3001\n\ntrait \u3092\u5b9a\u7fa9\u3059\u308b\n\u3042\u308b\u578b\u306b\u5bfe\u3057\u3066\u3001trait \u3092\u6e80\u305f\u3059\u305f\u3081\u306b\u5b9f\u88c5\u3092\u8a18\u8ff0\u3059\u308b\n\u3042\u308b\u578b\u3092\u4f7f\u3046\u5834\u9762\u3067\u3001\u305d\u306e\u578b\u304c trait \u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u6307\u5b9a\u3059\u308b\n\n\u306e\u4e09\u901a\u308a\u3060\u306a\u3002\n\n\u7591\u554f\n\ntrait \u306e\u5b9f\u88c5\u6642\u306b\u3001trait\u3092\u57cb\u3081\u8fbc\u3080\u578b\u306b\u5bfe\u3057\u3066 trait \u5236\u7d04\u306f\u66f8\u3051\u308b\u306e\uff1f\n\n\u4f7f\u3046\u6642\u306f  \u3067\u6307\u5b9a\u3067\u304d\u308b\u3002\ntrait \u306b\u5bfe\u3057\u3066\u306f\u3001\u7d99\u627f\u3059\u308c\u3070\u3044\u3044\u304b\u306a\u3002\n\n\u3067\u306f\u3001trait \u5b9f\u88c5\u6642\u306b\u306f\u66f8\u3051\u308b\u306e\u3060\u308d\u3046\u304b\u3002\n\u30b3\u30fc\u30c9\u3067\u3044\u3046\u3068\u3001\nTraitA { fn a(); }\nTraitB { fn b(); }\nstruct StructA;\nstruct StructB;\n\nimpl TraitA for StructA { fn a() { println!(\"a\"); } }\nimpl TraitB for StructA {\n  fn b() { a(); println!(\"and b\"); }\n}\n\nTraitB for StructA \u3067\u306f\u3001StructA \u3068\u3044\u3046\u7279\u5b9a\u306e\u578b\u304c TraitA \u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u306e\u306f\u5206\u304b\u308b\u306e\u3067\u3001fn a \u3092\u4f7f\u3063\u3066\u3082\u5e73\u6c17\u3002\n\u3053\u3053\u3067\u3001StructA \u3092\u6c4e\u7528\u578b\u306b\u3059\u308b\u306b\u306f\u3069\u3046\u3059\u308b\u304b\u3002\n\u3064\u307e\u308a\u3001\u300cTraitA \u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u4efb\u610f\u306e\u578b\u306b\u5bfe\u3057\u3066\u306e TraitB \u306e\u5b9f\u88c5\u300d\u3092\u66f8\u304d\u305f\u3044\u3002\ntrait \u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3067\u3082\u4ee3\u7528\u3067\u304d\u305d\u3046\u3067\u3042\u308b\u304c\u3002\nimpl <T:TraitA> TraitB for T { ... }\n\n\u3067\u3044\u3051\u305f\u3002\n\u3057\u304b\u3057\u300cTraitA \u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u578b\u300d\u3068\u3044\u3046\u5236\u7d04\u304c\u66f8\u3051\u306a\u3044\u307d\u304f\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3092\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3059\u308b\u306e\u306f\u7121\u7406\uff1f\nimpl <T> TraitB for T { ... }\n\n\u3060\u3068\u3001impl <T:TraitA> TraitB for T \u3068\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u3057\u3061\u3083\u3046\u3002\n\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u306a\u3044\u306a\u3089\u3001\nimpl TraitB for StructB { ... }\n\n\u3068\u66f8\u304f\u3053\u3068\u3067\u3001StructB \u306e TraitB \u3092\u5225\u306e\u5b9f\u88c5\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u305f\u3002\n\u203b\u8ffd\u8a18 operator overload\u306e\u3068\u3053\u306b\u4f3c\u305f\u8a71\u304c\u51fa\u3066\u3044\u305f\u3002\n\ntrait \u306f\u8272\u3005\u306a\u4f7f\u308f\u308c\u65b9\u3068\u69cb\u6587\u304c\u3042\u308b\u306e\u3067\u3001\u7591\u554f\u70b9\u3092\u30e1\u30e2\u3063\u3068\u304f\u3002\n\nRust 1.6.0 \u3067\u8a66\u3057\u305f\u3002\n\n\n# trait \u4ed5\u69d8\u307e\u3068\u3081\nhttps://doc.rust-lang.org/book/traits.html \u3092\u8aad\u3093\u3060\u3060\u3051\u306e\u77e5\u8b58\u3067\u3042\u308b\u304c\u3001\u3056\u3063\u3068\u307e\u3068\u3081\u308b\u3002\n\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u306e\u66f8\u3051\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u307f\u305f\u3044\u306a\u3082\u306e\n\n- \u65e2\u5b58\u306e\u578b\u306b\u5bfe\u3057\u3066 trait \u306e\u5b9f\u88c5\u3092\u66f8\u3051\u308b\n\n```\ntrait X { fn x(&self); }\nstruct A;\nimpl X for A { fn x(&self) { println!(\"x\"); }\n```\n\n- \u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u306b trait \u3092\u6e80\u305f\u3059\u5236\u7d04\u3092\u66f8\u3051\u308b\n\n```\nfn foo<T:X>(&x) { x.x(); } \n```\n\n```\nstruct G<T> { g:T }\nimpl <T:X> G<T> {\n  fn g(&self) { self.x(); println!(\"and {}\", self.g); }\n}\n```\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u3092\u6574\u7406\u3059\u308b\u3068\u3001\n\n- trait \u3092\u5b9a\u7fa9\u3059\u308b\n- \u3042\u308b\u578b\u306b\u5bfe\u3057\u3066\u3001trait \u3092\u6e80\u305f\u3059\u305f\u3081\u306b\u5b9f\u88c5\u3092\u8a18\u8ff0\u3059\u308b\n- \u3042\u308b\u578b\u3092\u4f7f\u3046\u5834\u9762\u3067\u3001\u305d\u306e\u578b\u304c trait \u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u6307\u5b9a\u3059\u308b\n\n\u306e\u4e09\u901a\u308a\u3060\u306a\u3002\n\n\n# \u7591\u554f\n## trait \u306e\u5b9f\u88c5\u6642\u306b\u3001trait\u3092\u57cb\u3081\u8fbc\u3080\u578b\u306b\u5bfe\u3057\u3066 trait \u5236\u7d04\u306f\u66f8\u3051\u308b\u306e\uff1f\n\n- \u4f7f\u3046\u6642\u306f <T:Trait> \u3067\u6307\u5b9a\u3067\u304d\u308b\u3002\n- trait \u306b\u5bfe\u3057\u3066\u306f\u3001\u7d99\u627f\u3059\u308c\u3070\u3044\u3044\u304b\u306a\u3002\n\n\u3067\u306f\u3001trait \u5b9f\u88c5\u6642\u306b\u306f\u66f8\u3051\u308b\u306e\u3060\u308d\u3046\u304b\u3002\n\u30b3\u30fc\u30c9\u3067\u3044\u3046\u3068\u3001\n\n```\nTraitA { fn a(); }\nTraitB { fn b(); }\nstruct StructA;\nstruct StructB;\n\nimpl TraitA for StructA { fn a() { println!(\"a\"); } }\nimpl TraitB for StructA {\n  fn b() { a(); println!(\"and b\"); }\n}\n```\n\nTraitB for StructA \u3067\u306f\u3001StructA \u3068\u3044\u3046\u7279\u5b9a\u306e\u578b\u304c TraitA \u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u306e\u306f\u5206\u304b\u308b\u306e\u3067\u3001fn a \u3092\u4f7f\u3063\u3066\u3082\u5e73\u6c17\u3002\n\n\u3053\u3053\u3067\u3001StructA \u3092\u6c4e\u7528\u578b\u306b\u3059\u308b\u306b\u306f\u3069\u3046\u3059\u308b\u304b\u3002\n\u3064\u307e\u308a\u3001\u300cTraitA \u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u4efb\u610f\u306e\u578b\u306b\u5bfe\u3057\u3066\u306e TraitB \u306e\u5b9f\u88c5\u300d\u3092\u66f8\u304d\u305f\u3044\u3002\ntrait \u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3067\u3082\u4ee3\u7528\u3067\u304d\u305d\u3046\u3067\u3042\u308b\u304c\u3002\n\n```\nimpl <T:TraitA> TraitB for T { ... }\n```\n\n\u3067\u3044\u3051\u305f\u3002\n\u3057\u304b\u3057\u300cTraitA \u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u578b\u300d\u3068\u3044\u3046\u5236\u7d04\u304c\u66f8\u3051\u306a\u3044\u307d\u304f\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3092\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3059\u308b\u306e\u306f\u7121\u7406\uff1f\n\n```\nimpl <T> TraitB for T { ... }\n```\n\n\u3060\u3068\u3001`impl <T:TraitA> TraitB for T` \u3068\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u3057\u3061\u3083\u3046\u3002\n\n\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u306a\u3044\u306a\u3089\u3001\n\n```\nimpl TraitB for StructB { ... }\n```\n\n\u3068\u66f8\u304f\u3053\u3068\u3067\u3001StructB \u306e TraitB \u3092\u5225\u306e\u5b9f\u88c5\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u305f\u3002\n\n\u203b\u8ffd\u8a18 [operator overload](https://doc.rust-lang.org/book/operators-and-overloading.html#using-operator-traits-in-generic-structs)\u306e\u3068\u3053\u306b\u4f3c\u305f\u8a71\u304c\u51fa\u3066\u3044\u305f\u3002\n\n"}