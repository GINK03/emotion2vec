{"tags": ["Rails", "ActiveRecord"], "context": "\n\nRails 4.2.6, Ruby 2.3.1, PostgreSQL 9.5.2 \u306e\u8a71\n1MB\u304f\u3089\u3044\u306e\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u3089(!?)\u3001SELECT \u5f8c\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u521d\u671f\u5316\u3067\u975e\u5e38\u306b\u5f85\u305f\u3055\u308c\u307e\u3057\u305f\u3002\n\u8a66\u3057\u306b\u30ab\u30e9\u30e0\u306e\u578b\u3092 jsonb \u306b\u5909\u66f4\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u591a\u5c11\u306f\u30de\u30b7\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nActiveRecord \u306e\u30b3\u30fc\u30c9\u3092\u63a2\u3063\u3066\u307f\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Ruby \u3067\u66f8\u304b\u308c\u305f\u30d1\u30fc\u30b5\u306b\u3088\u3063\u3066 PostgreSQL \u306e Array \u3092 Ruby \u306e Array \u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u3044\u308b\u4e8b\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\nrails/array_parser.rb at 4-2-stable \u00b7 rails/rails\nrails/array.rb at 4-2-stable \u00b7 rails/rails\n\n\nlib/active_record/connection_adapters/postgresql/oid/array.rb\nmodule ActiveRecord\n  module ConnectionAdapters\n    module PostgreSQL\n      module OID # :nodoc:\n        class Array < Type::Value # :nodoc:\n          include Type::Mutable\n\n          # Loads pg_array_parser if available. String parsing can be\n          # performed quicker by a native extension, which will not create\n          # a large amount of Ruby objects that will need to be garbage\n          # collected. pg_array_parser has a C and Java extension\n          begin\n            require 'pg_array_parser'\n            include PgArrayParser\n          rescue LoadError\n            require 'active_record/connection_adapters/postgresql/array_parser'\n            include PostgreSQL::ArrayParser\n          end\n\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001PostgreSQL \u306e Array \u3092\u4f7f\u3046\u5834\u5408\u306f DockYard/pg_array_parser \u3092\u4f7f\u3063\u3066\u304a\u304f\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n(DockYard/pg_array_parser \u306e\u30b3\u30fc\u30c9\u306f\u8aad\u3093\u3067\u307e\u305b\u3093\u3057\u30012013\u5e74\u3067\u30b3\u30df\u30c3\u30c8\u306f\u6b62\u307e\u3063\u3066\u3044\u308b\u69d8\u3067\u3059\u3002)\n\n\u4e00\u65b9\u305d\u306e\u9803 Rails 5.0.0 \u306f\npg \u304c\u6301\u3063\u3066\u3044\u308b\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3044\u308b\u69d8\u3067\u3059\u3002\n\nlib/active_record/connection_adapters/postgresql/oid/array.rb\nmodule ActiveRecord\n  module ConnectionAdapters\n    module PostgreSQL\n      module OID # :nodoc:\n        class Array < Type::Value # :nodoc:\n          include Type::Helpers::Mutable\n\n          attr_reader :subtype, :delimiter\n          delegate :type, :user_input_in_time_zone, :limit, to: :subtype\n\n          def initialize(subtype, delimiter = ',')\n            @subtype = subtype\n            @delimiter = delimiter\n\n            @pg_encoder = PG::TextEncoder::Array.new name: \"#{type}[]\", delimiter: delimiter\n            @pg_decoder = PG::TextDecoder::Array.new name: \"#{type}[]\", delimiter: delimiter\n          end\n\n\n\nPostgreSQL, Use ruby-pg's built-in capabilities for array en-/decodin\u2026 \u00b7 rails/rails@647eb2c\n\nRails 4.2.6, Ruby 2.3.1, PostgreSQL 9.5.2 \u306e\u8a71\n----\n\n1MB\u304f\u3089\u3044\u306e\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u3089(!?)\u3001SELECT \u5f8c\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u521d\u671f\u5316\u3067\u975e\u5e38\u306b\u5f85\u305f\u3055\u308c\u307e\u3057\u305f\u3002\n\u8a66\u3057\u306b\u30ab\u30e9\u30e0\u306e\u578b\u3092 `jsonb` \u306b\u5909\u66f4\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u591a\u5c11\u306f\u30de\u30b7\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nActiveRecord \u306e\u30b3\u30fc\u30c9\u3092\u63a2\u3063\u3066\u307f\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Ruby \u3067\u66f8\u304b\u308c\u305f\u30d1\u30fc\u30b5\u306b\u3088\u3063\u3066 PostgreSQL \u306e Array \u3092 Ruby \u306e Array \u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u3044\u308b\u4e8b\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\n- [rails/array_parser.rb at 4-2-stable \u00b7 rails/rails](https://github.com/rails/rails/blob/4-2-stable/activerecord/lib/active_record/connection_adapters/postgresql/array_parser.rb)\n- [rails/array.rb at 4-2-stable \u00b7 rails/rails](https://github.com/rails/rails/blob/4-2-stable/activerecord/lib/active_record/connection_adapters/postgresql/oid/array.rb#L8-L18)\n\n```ruby:lib/active_record/connection_adapters/postgresql/oid/array.rb\nmodule ActiveRecord\n  module ConnectionAdapters\n    module PostgreSQL\n      module OID # :nodoc:\n        class Array < Type::Value # :nodoc:\n          include Type::Mutable\n\n          # Loads pg_array_parser if available. String parsing can be\n          # performed quicker by a native extension, which will not create\n          # a large amount of Ruby objects that will need to be garbage\n          # collected. pg_array_parser has a C and Java extension\n          begin\n            require 'pg_array_parser'\n            include PgArrayParser\n          rescue LoadError\n            require 'active_record/connection_adapters/postgresql/array_parser'\n            include PostgreSQL::ArrayParser\n          end\n```\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001PostgreSQL \u306e Array \u3092\u4f7f\u3046\u5834\u5408\u306f [DockYard/pg_array_parser](https://github.com/DockYard/pg_array_parser) \u3092\u4f7f\u3063\u3066\u304a\u304f\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n([DockYard/pg_array_parser](https://github.com/DockYard/pg_array_parser) \u306e\u30b3\u30fc\u30c9\u306f\u8aad\u3093\u3067\u307e\u305b\u3093\u3057\u30012013\u5e74\u3067\u30b3\u30df\u30c3\u30c8\u306f\u6b62\u307e\u3063\u3066\u3044\u308b\u69d8\u3067\u3059\u3002)\n\n\n\u4e00\u65b9\u305d\u306e\u9803 Rails 5.0.0 \u306f\n----\n\n`pg` \u304c\u6301\u3063\u3066\u3044\u308b\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3044\u308b\u69d8\u3067\u3059\u3002\n\n```ruby:lib/active_record/connection_adapters/postgresql/oid/array.rb\nmodule ActiveRecord\n  module ConnectionAdapters\n    module PostgreSQL\n      module OID # :nodoc:\n        class Array < Type::Value # :nodoc:\n          include Type::Helpers::Mutable\n\n          attr_reader :subtype, :delimiter\n          delegate :type, :user_input_in_time_zone, :limit, to: :subtype\n\n          def initialize(subtype, delimiter = ',')\n            @subtype = subtype\n            @delimiter = delimiter\n\n            @pg_encoder = PG::TextEncoder::Array.new name: \"#{type}[]\", delimiter: delimiter\n            @pg_decoder = PG::TextDecoder::Array.new name: \"#{type}[]\", delimiter: delimiter\n          end\n```\n\n- [PostgreSQL, Use ruby-pg's built-in capabilities for array en-/decodin\u2026 \u00b7 rails/rails@647eb2c](https://github.com/rails/rails/commit/647eb2cf1cd65b0391e3584361f0fc76246e64f3)\n"}