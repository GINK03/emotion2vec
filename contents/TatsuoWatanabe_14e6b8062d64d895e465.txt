{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n2014\u5e7402\u670825\u65e5\u306b TypeScript1.0RC(compilerVersion 0.9.7) \u304c\u516c\u958b\u3055\u308c\u307e\u3057\u305f\u3002\nAnnouncing TypeScript 1.0RC\nTitanium + Alloy + TypeScript1.0RC \u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u3082\u60c5\u5831\u3092\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u81ea\u5206\u3067\u306a\u3093\u3068\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\nMacOS X 10.9.2\nTitanium SDK 3.3.0\nAlloy 1.3.1\nTypeScript1.0RC\n\n\u53c2\u8003\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\nTitanium + Alloy + TypeScript \u3067\u3001iOS & Android \u30a2\u30d7\u30ea\u3092\u4f5c\u308b\n\n\u8a73\u7d30\n\n\u30d5\u30a1\u30a4\u30eb\u306e\u30b3\u30d4\u30fc\nTypescript \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0\u306e tsc.js \u3068 lib.d.ts \u3092\nAlloy \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0\u5185\u306e bin \u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002\n\u79c1\u306e\u74b0\u5883\u3067\u306f\u4ee5\u4e0b\u306epath\u3067\u3059\u3002\n/usr/local/lib/node_modules/alloy/bin/\n\nalloy.jmk \u306e\u4f5c\u6210\nalloy.jmk \u3092\u7de8\u96c6\u3057\u3066\u3001tsc.js \u3092\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u3059\u308b\u3002\ntypescript.js \u3067\u306f\u306a\u304f\u3001tsc.js\u3092\u4f7f\u3046\u3002\nwrench.readdirSyncRecursive \u306e\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u524d\u306bBatchCompiler\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u6587\u3092\u633f\u5165\u3002\n\nalloy.jmk\nvar batch = new TypeScript.BatchCompiler(TypeScript.IO);\n\n\nwrench.readdirSyncRecursive \u306e\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u3001\u5404\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092BatchCompiler\u306einputFiles\u914d\u5217\u306b\u8ffd\u52a0\u3059\u308b\u3002\n\nalloy.jmk\nbatch.inputFiles.push(filename);\n\n\nwrench.readdirSyncRecursive \u306e\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u5f8c\u306bBatchCompiler\u306ecompile\u5b9f\u884c\u6587\u3092\u8ffd\u52a0\u3002\n\nalloy.jmk\nbatch.batchCompile(); \n\n\n\u5b8c\u6210\u3057\u305f alloy.jmk \u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\nalloy.jmk\ntask(\"pre:compile\", function(event,logger) {\n    var wrench = require(\"wrench\"),\n        fs = require(\"fs\"),\n        path = require(\"path\");\n\n    var code = [\n        fs.readFileSync(\"/usr/local/lib/node_modules/alloy/bin/tsc.js\"), // <- path to tsc.js in your environment\n        \"module.exports = TypeScript;\"\n    ].join(\"\");\n    fs.writeFileSync(process.env.TMPDIR + \"tsc.js\", code);\n    var TypeScript = require(process.env.TMPDIR + \"tsc.js\");\n    fs.unlinkSync(process.env.TMPDIR + \"tsc.js\");\n\n    event.alloyConfig.tsc = [];\n\n    var batch = new TypeScript.BatchCompiler(TypeScript.IO);\n    wrench.readdirSyncRecursive(event.dir.home).forEach(function(target){\n        if (target.match(/\\.ts$/) && ! target.match(/\\.d\\.ts$/)) {\n            var filename = path.join(event.dir.home + \"/\" + target);\n            batch.inputFiles.push(filename);\n            event.alloyConfig.tsc.push(target.replace(/.ts$/, \".js\"));\n        }\n    });\n    batch.batchCompile();\n});\n\ntask(\"post:compile\",function(event,logger){\n  var fs = require(\"fs\");\n\n  event.alloyConfig.tsc.forEach(function(target){\n    fs.unlinkSync(event.dir.home + \"/\" + target);\n  });\n});\n\n\n\ntsc.js \u306e\u7de8\u96c6\nAlloy \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0\u5185\u306e bin \u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3057\u305f tsc.js \u3092\u7de8\u96c6\u3059\u308b\u3002\n\u30d5\u30a1\u30a4\u30eb\u306e\u672b\u5c3e\u4ed8\u8fd1\u306eBatchCompiler\u5b9f\u884c\u6587\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3002\n\ntsc.js\n//var batch = new TypeScript.BatchCompiler(TypeScript.IO);\n//batch.batchCompile();\n\n\nBatchCompiler\u30af\u30e9\u30b9\u306eparseOptions\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u6587\u306e\u5f8c\u534a opts.parse(this.ioHost.arguments) \u306e\u524d\u306b\n1\u6587\u8ffd\u52a0\u3057\u3066\u4f59\u5206\u306aoption\u3092\u9664\u5916\u3059\u308b\u3002\n\ntsc.js\nthis.ioHost.arguments = this.ioHost.arguments.filter(function(arg) { \n    return arg !== '--config';\n});\n\n\n\nBatchCompiler\u30af\u30e9\u30b9\u306eresolve\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u6587\u306e\u524d\u534a var resolutionResults = ... \u306e\u524d\u306b\n1\u6587\u8ffd\u52a0\u3057\u3066\u4f59\u5206\u306aarguments\u3092\u9664\u5916\u3059\u308b\u3002\n\ntsc.js\nthis.inputFiles = this.inputFiles.filter(function(file) { \n    return file.match(/\\.ts$/);\n});\n\n\n\u30ed\u30b0\u306e\u51fa\u529b\u3092\u3059\u308b\u5834\u5408\u306f\u3001CompilationSettings\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5185 this.gatherDiagnostics = false; -> true\u306b\u5909\u66f4\u3059\u308b\u3002\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306eget/set\u30a2\u30af\u30bb\u30b5\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\nthis.codeGenTarget = 0; -> 1\u306b\u5909\u66f4\u3057\u3066ECMAScript5\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3059\u308b\u3002\n\n\u8ffd\u8a18\nAnnouncing TypeScript 1.0\nTypeScript1.0 \u3067\u3082\u540c\u69d8\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3057\u305f\u3002\n#\u6982\u8981\n2014\u5e7402\u670825\u65e5\u306b TypeScript1.0RC(compilerVersion 0.9.7) \u304c\u516c\u958b\u3055\u308c\u307e\u3057\u305f\u3002\n[Announcing TypeScript 1.0RC](http://blogs.msdn.com/b/typescript/archive/2014/02/25/announcing-typescript-1-0rc.aspx?Redirected=true)\n\nTitanium + Alloy + TypeScript1.0RC \u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u3082\u60c5\u5831\u3092\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u81ea\u5206\u3067\u306a\u3093\u3068\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n#\u74b0\u5883\nMacOS X 10.9.2\nTitanium SDK 3.3.0\nAlloy 1.3.1\nTypeScript1.0RC\n\n#\u53c2\u8003\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n[Titanium + Alloy + TypeScript \u3067\u3001iOS & Android \u30a2\u30d7\u30ea\u3092\u4f5c\u308b](http://qiita.com/JunSuzukiJapan@github/items/09d9feabaad68724e384#3-1)\n\n#\u8a73\u7d30\n## \u30d5\u30a1\u30a4\u30eb\u306e\u30b3\u30d4\u30fc\nTypescript \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0\u306e tsc.js \u3068 lib.d.ts \u3092\nAlloy \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0\u5185\u306e bin \u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002\n\n\u79c1\u306e\u74b0\u5883\u3067\u306f\u4ee5\u4e0b\u306epath\u3067\u3059\u3002\n/usr/local/lib/node_modules/alloy/bin/\n\n## alloy.jmk \u306e\u4f5c\u6210\nalloy.jmk \u3092\u7de8\u96c6\u3057\u3066\u3001tsc.js \u3092\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u3059\u308b\u3002\n\ntypescript.js \u3067\u306f\u306a\u304f\u3001tsc.js\u3092\u4f7f\u3046\u3002\n\nwrench.readdirSyncRecursive \u306e\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u524d\u306bBatchCompiler\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u6587\u3092\u633f\u5165\u3002\n\n```js:alloy.jmk\nvar batch = new TypeScript.BatchCompiler(TypeScript.IO);\n```\n    \nwrench.readdirSyncRecursive \u306e\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u3001\u5404\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092BatchCompiler\u306einputFiles\u914d\u5217\u306b\u8ffd\u52a0\u3059\u308b\u3002\n\n```js:alloy.jmk\nbatch.inputFiles.push(filename);\n```\n    \nwrench.readdirSyncRecursive \u306e\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u5f8c\u306bBatchCompiler\u306ecompile\u5b9f\u884c\u6587\u3092\u8ffd\u52a0\u3002\n\n```js:alloy.jmk\nbatch.batchCompile(); \n```\n\u5b8c\u6210\u3057\u305f alloy.jmk \u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n```js:alloy.jmk\ntask(\"pre:compile\", function(event,logger) {\n    var wrench = require(\"wrench\"),\n        fs = require(\"fs\"),\n        path = require(\"path\");\n\n    var code = [\n        fs.readFileSync(\"/usr/local/lib/node_modules/alloy/bin/tsc.js\"), // <- path to tsc.js in your environment\n        \"module.exports = TypeScript;\"\n    ].join(\"\");\n    fs.writeFileSync(process.env.TMPDIR + \"tsc.js\", code);\n    var TypeScript = require(process.env.TMPDIR + \"tsc.js\");\n    fs.unlinkSync(process.env.TMPDIR + \"tsc.js\");\n\n    event.alloyConfig.tsc = [];\n    \n    var batch = new TypeScript.BatchCompiler(TypeScript.IO);\n    wrench.readdirSyncRecursive(event.dir.home).forEach(function(target){\n        if (target.match(/\\.ts$/) && ! target.match(/\\.d\\.ts$/)) {\n            var filename = path.join(event.dir.home + \"/\" + target);\n            batch.inputFiles.push(filename);\n            event.alloyConfig.tsc.push(target.replace(/.ts$/, \".js\"));\n        }\n    });\n    batch.batchCompile();\n});\n\ntask(\"post:compile\",function(event,logger){\n  var fs = require(\"fs\");\n\n  event.alloyConfig.tsc.forEach(function(target){\n    fs.unlinkSync(event.dir.home + \"/\" + target);\n  });\n});\n```\n\n##tsc.js \u306e\u7de8\u96c6\nAlloy \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0\u5185\u306e bin \u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3057\u305f tsc.js \u3092\u7de8\u96c6\u3059\u308b\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u306e\u672b\u5c3e\u4ed8\u8fd1\u306eBatchCompiler\u5b9f\u884c\u6587\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3002\n\n```js:tsc.js\n//var batch = new TypeScript.BatchCompiler(TypeScript.IO);\n//batch.batchCompile();\n```\n\nBatchCompiler\u30af\u30e9\u30b9\u306eparseOptions\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u6587\u306e\u5f8c\u534a opts.parse(this.ioHost.arguments) \u306e\u524d\u306b\n1\u6587\u8ffd\u52a0\u3057\u3066\u4f59\u5206\u306aoption\u3092\u9664\u5916\u3059\u308b\u3002\n\n```js:tsc.js\nthis.ioHost.arguments = this.ioHost.arguments.filter(function(arg) { \n    return arg !== '--config';\n});\n\n```\n\nBatchCompiler\u30af\u30e9\u30b9\u306eresolve\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u6587\u306e\u524d\u534a var resolutionResults = ... \u306e\u524d\u306b\n1\u6587\u8ffd\u52a0\u3057\u3066\u4f59\u5206\u306aarguments\u3092\u9664\u5916\u3059\u308b\u3002\n\n```js:tsc.js\nthis.inputFiles = this.inputFiles.filter(function(file) { \n    return file.match(/\\.ts$/);\n});\n```\n\n\u30ed\u30b0\u306e\u51fa\u529b\u3092\u3059\u308b\u5834\u5408\u306f\u3001CompilationSettings\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5185 this.gatherDiagnostics = false; -> true\u306b\u5909\u66f4\u3059\u308b\u3002\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306eget/set\u30a2\u30af\u30bb\u30b5\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\nthis.codeGenTarget = 0; -> 1\u306b\u5909\u66f4\u3057\u3066ECMAScript5\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3059\u308b\u3002\n\n#\u8ffd\u8a18\n[Announcing TypeScript 1.0](http://blogs.msdn.com/b/typescript/archive/2014/04/02/announcing-typescript-1-0.aspx)\nTypeScript1.0 \u3067\u3082\u540c\u69d8\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3057\u305f\u3002\n", "tags": ["Titanium", "TypeScript", "Alloy", "alloy.jmk"]}