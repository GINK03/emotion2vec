{"context": "API\u3084fluend\u3067\u3053\u3061\u3089\u306ePlugin\u3092\u4f7f\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u306eDogStatsD\u306b\u5bfe\u3057\u3066Event\u5f62\u5f0f\u3067\u9001\u4fe1\u3059\u308b\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u4ee5\u4e0b\u306e\u69d8\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\n2016-02-17 22:14:54 JST | ERROR | dd.dogstatsd | dogstatsd(dogstatsd.py:174) | Error flushing metrics\nTraceback (most recent call last):\n  File \"/opt/datadog-agent/agent/dogstatsd.py\", line 144, in flush\n    self.submit_events(events)\n  File \"/opt/datadog-agent/agent/dogstatsd.py\", line 202, in submit_events\n    self.submit_http(url, json.dumps(payload), headers)\n  File \"/opt/datadog-agent/embedded/lib/python2.7/site-packages/simplejson/__init__.py\", line 370, in dumps\n    return _default_encoder.encode(obj)\n  File \"/opt/datadog-agent/embedded/lib/python2.7/site-packages/simplejson/encoder.py\", line 269, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File \"/opt/datadog-agent/embedded/lib/python2.7/site-packages/simplejson/encoder.py\", line 348, in iterencode\n    return _iterencode(o, 0)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xe5 in position 105: unexpected end of data\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u554f\u984c\u3067\u3001UTF-8\u306e\u30c7\u30b3\u30fc\u30c9\u3092\u884c\u308f\u306a\u3044\u8a2d\u5b9a\u3068\u306a\u3063\u3066\u3044\u308b\u6a21\u69d8\nhttps://github.com/DataDog/dd-agent/pull/1279\n\u8a2d\u5b9a\u5909\u66f4\u306f\u3088\u304f\u898b\u308c\u3070\u308f\u304b\u308b\u304c\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u6240\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n/etc/dd-agent/datadog.conf\n# \u5927\u4f53131\u884c\u76ee\n\n# By default, dogstatsd supports only plain ASCII packets. However, most\n# (dog)statsd client support UTF8 by encoding packets before sending them\n# this option enables UTF8 decoding in case you need it.\n# However, it comes with a performance overhead of ~10% in the dogstatsd\n# server. This will be taken care of properly in the new gen agent core.\n# utf8_decoding: false\nutf8_decoding: true <-- # \u3053\u308c\u3067UTF-8\u30c7\u30b3\u30fc\u30c9\u6709\u52b9\u5316\n\n\n\n\u5099\u8003\n\u4e0a\u8a18\u3067\u9001\u4fe1\u53ef\u80fd\u306a\u3088\u3046\u306b\u306a\u308b\u304c\u3001\n\u3082\u3057 type: event \u3067\u30ed\u30b0\u3092\u30da\u30a4\u30ed\u30fc\u30c9\u3068\u3057\u3066\u8f09\u305b\u3066\u3044\u308b\u5834\u5408\u3001\n\u9001\u4fe1\u53ef\u80fd\u306a\u30da\u30a4\u30ed\u30fc\u30c9\u306b4000bytes\u306e\u4e0a\u9650\u304c\u3042\u308b\u6a21\u69d8\u3002\n# dd-agent\u306e\u3069\u3053\u304b\u306b\u30de\u30b8\u30c3\u30af\u30ca\u30f3\u30d0\u30fc\u7684\u306b\u5236\u9650\u304c\u8a18\u8f09\u3055\u308c\u3066\u305f\u306f\u305a\n\u53d7\u4ed8\u6642\u306b\u305d\u306e\u8fba\u306e\u30c1\u30a7\u30c3\u30af\u3092\u3057\u3066\u5207\u308a\u843d\u3068\u3057\u3066\u304f\u308c\u305f\u308a\u3057\u306a\u3044\u306e\u3067\u3001\nfluentd\u3092\u4f7f\u3046\u6642\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u5207\u308a\u843d\u3068\u3057\u3066\u304b\u3089Dogstatsd\u306b\u9001\u3063\u3066\u308b\u3002\n<match dd.event.error>\n  type record_reformer\n  tag reformed.dd.event.error\n  renew_record false\n  enable_ruby true\n\n  <record>\n    type event\n    key production\n    title production\n    text ${message[0, 4000].gsub(/(\\n)/, '')}\n  </record>\n</match>\n\n<match reformed.dd.event.error>\n  type dogstatsd\n\n  host localhost\n  port 8125\n\n  use_tag_as_key false\n\n  flat_tags true\n</match>\n\n\nAPI\u3084fluend\u3067[\u3053\u3061\u3089](https://github.com/ryotarai/fluent-plugin-dogstatsd)\u306ePlugin\u3092\u4f7f\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u306eDogStatsD\u306b\u5bfe\u3057\u3066Event\u5f62\u5f0f\u3067\u9001\u4fe1\u3059\u308b\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u4ee5\u4e0b\u306e\u69d8\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\n\n```\n2016-02-17 22:14:54 JST | ERROR | dd.dogstatsd | dogstatsd(dogstatsd.py:174) | Error flushing metrics\nTraceback (most recent call last):\n  File \"/opt/datadog-agent/agent/dogstatsd.py\", line 144, in flush\n    self.submit_events(events)\n  File \"/opt/datadog-agent/agent/dogstatsd.py\", line 202, in submit_events\n    self.submit_http(url, json.dumps(payload), headers)\n  File \"/opt/datadog-agent/embedded/lib/python2.7/site-packages/simplejson/__init__.py\", line 370, in dumps\n    return _default_encoder.encode(obj)\n  File \"/opt/datadog-agent/embedded/lib/python2.7/site-packages/simplejson/encoder.py\", line 269, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File \"/opt/datadog-agent/embedded/lib/python2.7/site-packages/simplejson/encoder.py\", line 348, in iterencode\n    return _iterencode(o, 0)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xe5 in position 105: unexpected end of data\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u554f\u984c\u3067\u3001UTF-8\u306e\u30c7\u30b3\u30fc\u30c9\u3092\u884c\u308f\u306a\u3044\u8a2d\u5b9a\u3068\u306a\u3063\u3066\u3044\u308b\u6a21\u69d8\n\nhttps://github.com/DataDog/dd-agent/pull/1279\n\n\u8a2d\u5b9a\u5909\u66f4\u306f\u3088\u304f\u898b\u308c\u3070\u308f\u304b\u308b\u304c\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u6240\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n```/etc/dd-agent/datadog.conf\n# \u5927\u4f53131\u884c\u76ee\n\n# By default, dogstatsd supports only plain ASCII packets. However, most\n# (dog)statsd client support UTF8 by encoding packets before sending them\n# this option enables UTF8 decoding in case you need it.\n# However, it comes with a performance overhead of ~10% in the dogstatsd\n# server. This will be taken care of properly in the new gen agent core.\n# utf8_decoding: false\nutf8_decoding: true <-- # \u3053\u308c\u3067UTF-8\u30c7\u30b3\u30fc\u30c9\u6709\u52b9\u5316\n```\n\n# \u5099\u8003\n\n\u4e0a\u8a18\u3067\u9001\u4fe1\u53ef\u80fd\u306a\u3088\u3046\u306b\u306a\u308b\u304c\u3001\n\u3082\u3057 `type: event` \u3067\u30ed\u30b0\u3092\u30da\u30a4\u30ed\u30fc\u30c9\u3068\u3057\u3066\u8f09\u305b\u3066\u3044\u308b\u5834\u5408\u3001\n\u9001\u4fe1\u53ef\u80fd\u306a\u30da\u30a4\u30ed\u30fc\u30c9\u306b4000bytes\u306e\u4e0a\u9650\u304c\u3042\u308b\u6a21\u69d8\u3002\n\\# dd-agent\u306e\u3069\u3053\u304b\u306b\u30de\u30b8\u30c3\u30af\u30ca\u30f3\u30d0\u30fc\u7684\u306b\u5236\u9650\u304c\u8a18\u8f09\u3055\u308c\u3066\u305f\u306f\u305a\n\n\u53d7\u4ed8\u6642\u306b\u305d\u306e\u8fba\u306e\u30c1\u30a7\u30c3\u30af\u3092\u3057\u3066\u5207\u308a\u843d\u3068\u3057\u3066\u304f\u308c\u305f\u308a\u3057\u306a\u3044\u306e\u3067\u3001\nfluentd\u3092\u4f7f\u3046\u6642\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u5207\u308a\u843d\u3068\u3057\u3066\u304b\u3089Dogstatsd\u306b\u9001\u3063\u3066\u308b\u3002\n\n```\n<match dd.event.error>\n  type record_reformer\n  tag reformed.dd.event.error\n  renew_record false\n  enable_ruby true\n\n  <record>\n    type event\n    key production\n    title production\n    text ${message[0, 4000].gsub(/(\\n)/, '')}\n  </record>\n</match>\n\n<match reformed.dd.event.error>\n  type dogstatsd\n\n  host localhost\n  port 8125\n\n  use_tag_as_key false\n\n  flat_tags true\n</match>\n```\n", "tags": ["Datadog"]}