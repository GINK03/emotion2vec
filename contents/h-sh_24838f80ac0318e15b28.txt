{"context": "\n\nvalgrind\u306e\u30c1\u30a7\u30c3\u30af\u3067\u3072\u3063\u304b\u304b\u3063\u305f\nmapTmp[key] = value;\n\n\u307f\u305f\u3044\u306a\u4f7f\u3044\u65b9\u3092\u3057\u3066\u3044\u305f\u3089\u304a\u3053\u3089\u308c\u305f\u306e\u3067\nauto find = mapTmp.find(key);\nif(find == mapTmp.end()){\n     mapTmp[key] = value;\n}else{\n     find->second = value;\n}\n\n\u3053\u3046\u3057\u305f\u3002\n\u3067\u3082\u307e\u3060\u304a\u3053\u3089\u308c\u3066\u305f\u306e\u3067\nauto find = mapTmp.find(key);\nif(find == mapTmp.end()){\n     mapTmp.insert(std::make_pair(key,value));\n}else{\n     find->second = value;\n}\n\n\u7d50\u5c40\u3053\u3046\u306a\u3063\u305f\u3002\n#valgrind\u306e\u30c1\u30a7\u30c3\u30af\u3067\u3072\u3063\u304b\u304b\u3063\u305f\n\n```cpp\nmapTmp[key] = value;\n```\n\n\u307f\u305f\u3044\u306a\u4f7f\u3044\u65b9\u3092\u3057\u3066\u3044\u305f\u3089\u304a\u3053\u3089\u308c\u305f\u306e\u3067\n\n```cpp\nauto find = mapTmp.find(key);\nif(find == mapTmp.end()){\n     mapTmp[key] = value;\n}else{\n     find->second = value;\n}\n```\n\u3053\u3046\u3057\u305f\u3002\n\u3067\u3082\u307e\u3060\u304a\u3053\u3089\u308c\u3066\u305f\u306e\u3067\n\n```cpp\nauto find = mapTmp.find(key);\nif(find == mapTmp.end()){\n     mapTmp.insert(std::make_pair(key,value));\n}else{\n     find->second = value;\n}\n```\n\u7d50\u5c40\u3053\u3046\u306a\u3063\u305f\u3002\n", "tags": ["C++", "STL", "map"]}