{"tags": ["Clojure1.6.0"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002Clojure\u3067\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059write-lines\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u306a\u304a\u3001clojure.contrib\u306b\u3082\u4f3c\u305f\u3088\u3046\u306a\u3082\u306e\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3059\u3089\u6307\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3042\u307e\u308a\u5f79\u306b\u7acb\u305f\u3061\u307e\u305b\u3093\u3002\n\nwrite-lines.clj\n(def line-separator (System/getProperty \"line.separator\"))\n\n(defn write-lines\n  [f lines & {:keys [separator add-bom]\n              :or {separator line-separator add-bom false} :as opts}]\n  (with-open [^java.io.Writer w (apply clojure.java.io/writer f (apply concat opts))]\n    (when add-bom (.write w \"\\ufeff\"))\n    (doseq [line lines] (.write w (str line separator)))))\n\n\n\u305f\u307e\u306bBOM\uff08Byte Order Mark\uff09\u304c\u5fc5\u8981\u306a\u3068\u304d\u304c\u3042\u308b\u306e\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\n(write-lines \"sample.txt\" [\"\u3042\u3044\u3046\"] :encoding \"Windows-31J\")\n(write-lines \"sample2.txt\" (range 10) :add-bom true :separator \"x\")\n\n:encoding\u306f\u6307\u5b9a\u3057\u306a\u3044\u3068\u304d\u306fUTF-8\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\u3053\u308c\u306fclojure.java.io\u306ereader, writer\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u52d5\u4f5c\u304c\u305d\u3046\u3067\u3042\u308b\u305f\u3081\u3067\u3059\u3002\nClojure\u3067\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059write-lines\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u306a\u304a\u3001clojure.contrib\u306b\u3082\u4f3c\u305f\u3088\u3046\u306a\u3082\u306e\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3059\u3089\u6307\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3042\u307e\u308a\u5f79\u306b\u7acb\u305f\u3061\u307e\u305b\u3093\u3002\n\n```write-lines.clj\n(def line-separator (System/getProperty \"line.separator\"))\n\n(defn write-lines\n  [f lines & {:keys [separator add-bom]\n              :or {separator line-separator add-bom false} :as opts}]\n  (with-open [^java.io.Writer w (apply clojure.java.io/writer f (apply concat opts))]\n    (when add-bom (.write w \"\\ufeff\"))\n    (doseq [line lines] (.write w (str line separator)))))\n```\n\n\u305f\u307e\u306bBOM\uff08Byte Order Mark\uff09\u304c\u5fc5\u8981\u306a\u3068\u304d\u304c\u3042\u308b\u306e\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\n\n```clj\n(write-lines \"sample.txt\" [\"\u3042\u3044\u3046\"] :encoding \"Windows-31J\")\n(write-lines \"sample2.txt\" (range 10) :add-bom true :separator \"x\")\n```\n\n:encoding\u306f\u6307\u5b9a\u3057\u306a\u3044\u3068\u304d\u306fUTF-8\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\u3053\u308c\u306fclojure.java.io\u306ereader, writer\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u52d5\u4f5c\u304c\u305d\u3046\u3067\u3042\u308b\u305f\u3081\u3067\u3059\u3002\n"}