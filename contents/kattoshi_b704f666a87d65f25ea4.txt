{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3000\u524d\u56de\u306e\u6295\u7a3f\u3067\u306f\u3001\u30ab\u30e1\u30e9\u30ad\u30e3\u30d7\u30c1\u30e3\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002Rx\u3068OpenCVSharp\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u7c21\u5358\u306b\u3067\u304d\u308b\u4e8b\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\u3000\u3053\u3053\u307e\u3067\u304f\u308b\u3068\u6b32\u3092\u51fa\u3057\u305f\u304f\u306a\u308b\u7269\u3067\u3001OpenCV\u306b\u306f\u9854\u8a8d\u8a3c\u304c\u3067\u304d\u308b\u4ed5\u7d44\u307f\u304c\u6e96\u5099\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u9854\u8a8d\u8b58\u3092\u3055\u305b\u3088\u3046\u3068\u3044\u3046\u7269\u3067\u3059\u3002\n\n\u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u5165\u308c\u3066\u307f\u3088\u3046\n\u9854\u8a8d\u8b58\u306e\u524d\u306b\u753b\u9762\u306e\u5de6\u4e0a\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u5165\u308c\u3066\u307f\u3088\u3046\u3002\n\n\u5b9f\u88c5\n\n1. \u30d5\u30a9\u30f3\u30c8\u306e\u5b9a\u7fa9\n\n(\u5909\u66f4\u524d)\n/// <summary>\n/// \u521d\u671f\u5316\n/// </summary>\npublic void Initialize()\n{\n    // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n    var capture = new CvCapture(0);\n\n\n\u2193\n\n(\u5909\u66f4\u5f8c)\n/// <summary>\n/// \u521d\u671f\u5316\n/// </summary>\npublic void Initialize()\n{\n    // \u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u5b9a\u7fa9\n    var font = default(CvFont);\n    Cv.InitFont(out font, FontFace.HersheyScriptComplex, 0.5, 0.5);\n\n    // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n    var capture = new CvCapture(0);\n\n\n\n2.Rx\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u9014\u4e2d\u306b\u30c6\u30ad\u30b9\u30c8\u63cf\u753b\u51e6\u7406\u3092\u8ffd\u52a0\n\n(\u5909\u66f4\u524d)\nvar capture = new CvCapture(0);\nObservable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n    .Select(_ => Cv.QueryFrame(capture))\n    .Where(frame => frame != null)\n    .Subscribe(frame =>\n    {\n\n\n\u2193\n\n(\u5909\u66f4\u5f8c)\nvar capture = new CvCapture(0);\nObservable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n    .Select(_ => Cv.QueryFrame(capture))\n    .Where(frame => frame != null)\n    .Do(frame => frame.PutText(string.Format(\"{0:MM/dd HH:mm:ss}\", DateTime.Now), new CvPoint(0, 15), font, Cv.RGB(255, 255, 255)))\n    .Subscribe(frame =>\n    {\n\n\nDo()\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3057\u305f\u753b\u50cf\u306eframe\u306e\u5de6\u4e0a\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n\u5b9f\u884c\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u5de6\u4e0a\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304c\u8868\u793a\u3057\u307e\u3059\u3002\n\n\u9854\u8a8d\u8b58\u3092\u3055\u305b\u308b\n\u3055\u3066\u3001\u9854\u8a8d\u8b58\u3092\u3055\u305b\u307e\u3057\u3087\u3046\u3002\nOpenCV\u3067\u306f\u300c\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u300d\u3068\u547c\u3070\u308c\u308b\u7269\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u308c\u3092\u5229\u7528\u3059\u308b\u3068\uff81\uff6e\uff70\u7c21\u5358\u306b\u9854\u8a8d\u8b58\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u5b9f\u88c5\n\n1.\u9854\u8a8d\u8b58\u5206\u985e\u5668\u306e\u4f5c\u6210\n\n(\u5909\u66f4\u524d)\n/// <summary>\n/// \u521d\u671f\u5316\n/// </summary>\npublic void Initialize()\n{\n    // \u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u5b9a\u7fa9\n    var font = default(CvFont);\n    Cv.InitFont(out font, FontFace.HersheyScriptComplex, 0.5, 0.5);\n\n    // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n    var capture = new CvCapture(0);\n\n\n\u2193\n\n(\u5909\u66f4\u5f8c)\n/// <summary>\n/// \u521d\u671f\u5316\n/// </summary>\npublic void Initialize()\n{\n    // \u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u5b9a\u7fa9\n    var font = default(CvFont);\n    Cv.InitFont(out font, FontFace.HersheyScriptComplex, 0.5, 0.5);\n\n    // \u9854\u306e\u5206\u985e\u5668\u4f5c\u6210\n    var faceDetector = Cv.Load<CvHaarClassifierCascade>(\"haarcascade_frontalface_default.xml\");\n\n    // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n    var capture = new CvCapture(0);\n\n\n\u9854\u306e\u5206\u985e\u5668\u306e\u4f5c\u6210\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\"haarcascade_frontalface_default.xml\"\u306f\u3001OpenCVSharp\u306b\u306f\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002OpenCV\u672c\u4f53\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u89e3\u51cd\u5f8c\u3001\u81ea\u529b\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\nOpenCV\u306e\u672c\u4f53\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u89e3\u51cd\u3059\u308b\u3002\n\u89e3\u51cd\u5148\u306e\u30d5\u30a9\u30eb\u30c0opencv\\sources\\data\\haarcascades\u306bhaarcascade_frontalface_default.xml\u304c\u3042\u308b\u306e\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u53d6\u308a\u8fbc\u3080\u3002\n\u53d6\u308a\u8fbc\u307f\u65b9\u6cd5\u306f\u3001VS2013\u306e\u300c\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u300d\u3067\u300cLivetWPFApplication1\u300d\u3092\u9078\u629e\u3057\u3001\u53f3\u30af\u30ea\u30c3\u30af[\u8ffd\u52a0]-[\u65e2\u5b58\u306e\u9805\u76ee]\u3092\u9078\u629e\u3002\u30d5\u30a1\u30a4\u30eb\u9078\u629e\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u304c\u958b\u304f\u306e\u3067\u3001\u4e0a\u8a18xml\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u53d6\u308a\u8fbc\u307f\u5f8c\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u306bhaarcascade_frontalface_default.xml\u304c\u8ffd\u52a0\u3055\u308c\u308b\u306e\u3067\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8868\u793a\u3057\u3001\u300c\u30d3\u30eb\u30c9\u30a2\u30af\u30b7\u30e7\u30f3\u300d\u306f\u300c\u306a\u3057\u300d\u3001\u300c\u51fa\u529b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u306b\u30b3\u30d4\u30fc\u300d\u3082\u300c\u65b0\u3057\u3044\u5834\u5408\u306b\u30b3\u30d4\u30fc\u300d\u3092\u9078\u629e\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\n\n\n2. \u9854\u8a8d\u8b58\u51e6\u7406\u3092\u8ffd\u52a0\n\u9854\u8a8d\u8b58\u3092\u884c\u3044\u3001\u8a8d\u8b58\u3057\u305f\u5834\u6240\u306b\u56db\u89d2\u306e\u77e9\u5f62\u67a0\u3092\u63cf\u753b\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\n(\u8ffd\u52a0\u30e1\u30bd\u30c3\u30c9)\n/// <summary>\n/// \u9854\u8a8d\u8b58\u3092\u884c\u3044\u3001\u77e9\u5f62\u67a0\u3092\u63cf\u753b\u3059\u308b\n/// </summary>\n/// <param name=\"frame\">\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3057\u305f\u753b\u50cf</param>\n/// <param name=\"faceDetector\">\u9854\u306e\u5206\u985e\u5668</param>\nprivate void ImageProcess(IplImage frame, CvHaarClassifierCascade faceDetector)\n{\n    using (var frameMatImage = Cv.GetMat(frame))\n    {\n        using (var grayMatImage = new CvMat(frameMatImage.Rows, frameMatImage.Cols, MatrixType.U8C1))\n        {\n            // \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3078\u5909\u63db\n            frameMatImage.CvtColor(grayMatImage, ColorConversion.BgraToGray);\n            var grayImage = Cv.GetImage(grayMatImage);\n            //\u6b63\u898f\u5316\u3059\u308b\n            grayImage.EqualizeHist(grayImage);\n            using (var cvMem = new OpenCvSharp.CvMemStorage())\n            {\n                //\u691c\u51fa\u3092\u884c\u3046\n                Cv.HaarDetectObjects(\n                                    grayImage,\n                                    faceDetector,\n                                    cvMem,\n                                    1.1,\n                                    10,\n                                    0,\n                                    new CvSize(10, 10))\n                .Where(face => face.HasValue)\n                .Select(face => face.Value.Rect)\n                .ToList()\n                .ForEach(faceRect =>\n                {\n                    //\u691c\u51fa\u5834\u6240\u3078\u77e9\u5f62\u8868\u793a\n                    frame.DrawRect(faceRect, Cv.RGB(255, 0, 0), 2);\n                });\n            }\n        }\n    }\n}\n\n\n\n\n3. Rx\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u8ffd\u52a0\u3059\u308b\n\u8ffd\u52a0\u3057\u305f\u30e1\u30bd\u30c3\u30c9(ImageProcess)\u3092\u3001Rx\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u633f\u5165\u3057\u307e\u3059\u3002\n\n(\u5909\u66f4\u524d)\nvar capture = new CvCapture(0);\nObservable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n    .Select(_ => Cv.QueryFrame(capture))\n    .Where(frame => frame != null)\n    .Do(frame => frame.PutText(string.Format(\"{0:MM/dd HH:mm:ss}\", DateTime.Now), new CvPoint(0, 15), font, Cv.RGB(255, 255, 255)))\n    .Subscribe(frame =>\n    {\n\n\n\u2193\n\n(\u5909\u66f4\u5f8c)\nvar capture = new CvCapture(0);\nObservable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n    .Select(_ => Cv.QueryFrame(capture))\n    .Where(frame => frame != null)\n    .Do(frame => frame.PutText(string.Format(\"{0:MM/dd HH:mm:ss}\", DateTime.Now), new CvPoint(0, 15), font, Cv.RGB(255, 255, 255)))\n    .Do(frame => ImageProcess(frame, faceDetector))\n    .Subscribe(frame =>\n    {\n\n\n\n\u5b9f\u884c\n\u5b9f\u884c\u3057\u3066\u81ea\u5206\u306e\u9854\u3078\u30ab\u30e1\u30e9\u3092\u5411\u3051\u3066\u4e0b\u3055\u3044\u3002\u9854\u306e\u5468\u308a\u306b\u77e9\u5f62\u67a0\u304c\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\nOpenCV\u306b\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\u30ab\u30b9\u30b1\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u306f\u7cbe\u5ea6\u304c\u4f4e\u3044\u306e\u3067\u3001\u771f\u6b63\u9762\u3058\u3083\u306a\u3044\u3068\u8a8d\u8b58\u3057\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u9854\u4ee5\u5916\u3092\u8a8d\u8b58\u3059\u308b\u30ab\u30b9\u30b1\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u300c\u9854\u4ee5\u5916\u300d\u306e\u3082\u306e\u3092\u753b\u50cf\u8a8d\u8b58\u3059\u308b\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\nViewModel\u30bd\u30fc\u30b9\n\u6700\u5f8c\u306b\u3001ViewModel\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u3066\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002View\u5074\u306f\u5909\u66f4\u7121\u3057\u3067\u3059\u3002\n\u9577\u3044\u8aac\u660e\u3068\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\nMainWindowViewModel.cs\npublic class MainWindowViewModel : ViewModel\n{\n    #region ImageSource \u8868\u793a\u753b\u50cf\n    private BitmapSource _CaptureImageSource;\n    /// <summary>\n    /// \u8868\u793a\u753b\u50cf\n    /// </summary>\n    public BitmapSource CaptureImageSource\n    {\n        get\n        { return _CaptureImageSource; }\n        set\n        {\n            if (_CaptureImageSource == value)\n                return;\n            _CaptureImageSource = value;\n            RaisePropertyChanged();\n        }\n    }\n    #endregion\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public void Initialize()\n    {\n        // \u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u5b9a\u7fa9\n        var font = default(CvFont);\n        Cv.InitFont(out font, FontFace.HersheyScriptComplex, 0.5, 0.5);\n\n        // \u9854\u306e\u5206\u985e\u5668\u4f5c\u6210\n        var faceDetector = Cv.Load<CvHaarClassifierCascade>(\"haarcascade_frontalface_default.xml\");\n\n        // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n        var capture = new CvCapture(0);\n        Observable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n            .Select(_ => Cv.QueryFrame(capture))\n            .Where(frame => frame != null)\n            .Do(frame => frame.PutText(string.Format(\"{0:MM/dd HH:mm:ss}\", DateTime.Now), new CvPoint(0, 15), font, Cv.RGB(255, 255, 255)))\n            .Do(frame => ImageProcess(frame, faceDetector))\n            .Subscribe(frame =>\n            {\n                var bitmapSource = frame.ToBitmapSource();\n                frame.Dispose();\n                this.CaptureImageSource = bitmapSource;\n            });\n    }\n    /// <summary>\n    /// \u9854\u8a8d\u8b58\u3092\u884c\u3044\u3001\u77e9\u5f62\u67a0\u3092\u63cf\u753b\u3059\u308b\n    /// </summary>\n    /// <param name=\"frame\">\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3057\u305f\u753b\u50cf</param>\n    /// <param name=\"faceDetector\">\u9854\u306e\u5206\u985e\u5668</param>\n    private void ImageProcess(IplImage frame, CvHaarClassifierCascade faceDetector)\n    {\n        using (var frameMatImage = Cv.GetMat(frame))\n        {\n            using (var grayMatImage = new CvMat(frameMatImage.Rows, frameMatImage.Cols, MatrixType.U8C1))\n            {\n                // \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3078\u5909\u63db\n                frameMatImage.CvtColor(grayMatImage, ColorConversion.BgraToGray);\n                var grayImage = Cv.GetImage(grayMatImage);\n                //\u6b63\u898f\u5316\u3059\u308b\n                grayImage.EqualizeHist(grayImage);\n                using (var cvMem = new OpenCvSharp.CvMemStorage())\n                {\n                    //\u691c\u51fa\u3092\u884c\u3046\n                    Cv.HaarDetectObjects(\n                                        grayImage,\n                                        faceDetector,\n                                        cvMem,\n                                        1.1,\n                                        10,\n                                        0,\n                                        new CvSize(10, 10))\n                    .Where(face => face.HasValue)\n                    .Select(face => face.Value.Rect)\n                    .ToList()\n                    .ForEach(faceRect =>\n                    {\n                        //\u691c\u51fa\u5834\u6240\u3078\u77e9\u5f62\u8868\u793a\n                        frame.DrawRect(faceRect, Cv.RGB(255, 0, 0), 2);\n                    });\n                }\n            }\n        }\n    }\n}\n\n\n#\u306f\u3058\u3081\u306b\n\u3000[\u524d\u56de](http://qiita.com/kattoshi/items/d65c231865fbfddf82fa)\u306e\u6295\u7a3f\u3067\u306f\u3001\u30ab\u30e1\u30e9\u30ad\u30e3\u30d7\u30c1\u30e3\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002`Rx`\u3068`OpenCVSharp`\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u7c21\u5358\u306b\u3067\u304d\u308b\u4e8b\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\u3000\u3053\u3053\u307e\u3067\u304f\u308b\u3068\u6b32\u3092\u51fa\u3057\u305f\u304f\u306a\u308b\u7269\u3067\u3001OpenCV\u306b\u306f\u9854\u8a8d\u8a3c\u304c\u3067\u304d\u308b\u4ed5\u7d44\u307f\u304c\u6e96\u5099\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u9854\u8a8d\u8b58\u3092\u3055\u305b\u3088\u3046\u3068\u3044\u3046\u7269\u3067\u3059\u3002\n\n#\u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u5165\u308c\u3066\u307f\u3088\u3046\n\u9854\u8a8d\u8b58\u306e\u524d\u306b\u753b\u9762\u306e\u5de6\u4e0a\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u5165\u308c\u3066\u307f\u3088\u3046\u3002\n\n###\u5b9f\u88c5\n#####1. \u30d5\u30a9\u30f3\u30c8\u306e\u5b9a\u7fa9\n\n```C#:(\u5909\u66f4\u524d)\n/// <summary>\n/// \u521d\u671f\u5316\n/// </summary>\npublic void Initialize()\n{\n    // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n    var capture = new CvCapture(0);\n```\n\u2193\n\n```C#:(\u5909\u66f4\u5f8c)\n/// <summary>\n/// \u521d\u671f\u5316\n/// </summary>\npublic void Initialize()\n{\n    // \u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u5b9a\u7fa9\n    var font = default(CvFont);\n    Cv.InitFont(out font, FontFace.HersheyScriptComplex, 0.5, 0.5);\n\n    // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n    var capture = new CvCapture(0);\n```\n\n#####2.Rx\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u9014\u4e2d\u306b\u30c6\u30ad\u30b9\u30c8\u63cf\u753b\u51e6\u7406\u3092\u8ffd\u52a0\n```C#:(\u5909\u66f4\u524d)\nvar capture = new CvCapture(0);\nObservable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n    .Select(_ => Cv.QueryFrame(capture))\n    .Where(frame => frame != null)\n    .Subscribe(frame =>\n    {\n```\n\u2193\n\n```C#:(\u5909\u66f4\u5f8c)\nvar capture = new CvCapture(0);\nObservable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n    .Select(_ => Cv.QueryFrame(capture))\n    .Where(frame => frame != null)\n    .Do(frame => frame.PutText(string.Format(\"{0:MM/dd HH:mm:ss}\", DateTime.Now), new CvPoint(0, 15), font, Cv.RGB(255, 255, 255)))\n    .Subscribe(frame =>\n    {\n```\n`Do()`\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3057\u305f\u753b\u50cf\u306e`frame`\u306e\u5de6\u4e0a\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n###\u5b9f\u884c\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u5de6\u4e0a\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304c\u8868\u793a\u3057\u307e\u3059\u3002\n\n#\u9854\u8a8d\u8b58\u3092\u3055\u305b\u308b\n\u3055\u3066\u3001\u9854\u8a8d\u8b58\u3092\u3055\u305b\u307e\u3057\u3087\u3046\u3002\nOpenCV\u3067\u306f\u300c[\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668](http://opencv.jp/opencv-2.2/py/objdetect_cascade_classification.html\"\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\")\u300d\u3068\u547c\u3070\u308c\u308b\u7269\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u308c\u3092\u5229\u7528\u3059\u308b\u3068\uff81\uff6e\uff70\u7c21\u5358\u306b\u9854\u8a8d\u8b58\u304c\u3067\u304d\u307e\u3059\u3002\n\n###\u5b9f\u88c5\n#####1.\u9854\u8a8d\u8b58\u5206\u985e\u5668\u306e\u4f5c\u6210\n```C#:(\u5909\u66f4\u524d)\n/// <summary>\n/// \u521d\u671f\u5316\n/// </summary>\npublic void Initialize()\n{\n    // \u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u5b9a\u7fa9\n    var font = default(CvFont);\n    Cv.InitFont(out font, FontFace.HersheyScriptComplex, 0.5, 0.5);\n\n    // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n    var capture = new CvCapture(0);\n```\n\u2193\n\n```C#:(\u5909\u66f4\u5f8c)\n/// <summary>\n/// \u521d\u671f\u5316\n/// </summary>\npublic void Initialize()\n{\n    // \u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u5b9a\u7fa9\n    var font = default(CvFont);\n    Cv.InitFont(out font, FontFace.HersheyScriptComplex, 0.5, 0.5);\n\n    // \u9854\u306e\u5206\u985e\u5668\u4f5c\u6210\n    var faceDetector = Cv.Load<CvHaarClassifierCascade>(\"haarcascade_frontalface_default.xml\");\n\n    // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n    var capture = new CvCapture(0);\n```\n\n\u9854\u306e\u5206\u985e\u5668\u306e\u4f5c\u6210\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b`\"haarcascade_frontalface_default.xml\"`\u306f\u3001OpenCVSharp\u306b\u306f\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002OpenCV\u672c\u4f53\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u89e3\u51cd\u5f8c\u3001\u81ea\u529b\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n* [OpenCV](http://sourceforge.net/projects/opencvlibrary/)\u306e\u672c\u4f53\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u89e3\u51cd\u3059\u308b\u3002\n* \u89e3\u51cd\u5148\u306e\u30d5\u30a9\u30eb\u30c0`opencv\\sources\\data\\haarcascades`\u306b`haarcascade_frontalface_default.xml`\u304c\u3042\u308b\u306e\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u53d6\u308a\u8fbc\u3080\u3002\n* \u53d6\u308a\u8fbc\u307f\u65b9\u6cd5\u306f\u3001VS2013\u306e\u300c\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u300d\u3067\u300cLivetWPFApplication1\u300d\u3092\u9078\u629e\u3057\u3001\u53f3\u30af\u30ea\u30c3\u30af\\[\u8ffd\u52a0]-\\[\u65e2\u5b58\u306e\u9805\u76ee]\u3092\u9078\u629e\u3002\u30d5\u30a1\u30a4\u30eb\u9078\u629e\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u304c\u958b\u304f\u306e\u3067\u3001\u4e0a\u8a18xml\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3066\u4e0b\u3055\u3044\u3002\n* \u53d6\u308a\u8fbc\u307f\u5f8c\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u306b`haarcascade_frontalface_default.xml`\u304c\u8ffd\u52a0\u3055\u308c\u308b\u306e\u3067\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8868\u793a\u3057\u3001\u300c\u30d3\u30eb\u30c9\u30a2\u30af\u30b7\u30e7\u30f3\u300d\u306f\u300c\u306a\u3057\u300d\u3001\u300c\u51fa\u529b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u306b\u30b3\u30d4\u30fc\u300d\u3082\u300c\u65b0\u3057\u3044\u5834\u5408\u306b\u30b3\u30d4\u30fc\u300d\u3092\u9078\u629e\u3057\u3066\u4e0b\u3055\u3044\u3002<p/>![10.png](https://qiita-image-store.s3.amazonaws.com/0/28247/de32e2f9-b71e-4c85-3bad-cae1d8648359.png)<p/>\n\n#####2. \u9854\u8a8d\u8b58\u51e6\u7406\u3092\u8ffd\u52a0\n\u9854\u8a8d\u8b58\u3092\u884c\u3044\u3001\u8a8d\u8b58\u3057\u305f\u5834\u6240\u306b\u56db\u89d2\u306e\u77e9\u5f62\u67a0\u3092\u63cf\u753b\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\n```C#:(\u8ffd\u52a0\u30e1\u30bd\u30c3\u30c9)\n/// <summary>\n/// \u9854\u8a8d\u8b58\u3092\u884c\u3044\u3001\u77e9\u5f62\u67a0\u3092\u63cf\u753b\u3059\u308b\n/// </summary>\n/// <param name=\"frame\">\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3057\u305f\u753b\u50cf</param>\n/// <param name=\"faceDetector\">\u9854\u306e\u5206\u985e\u5668</param>\nprivate void ImageProcess(IplImage frame, CvHaarClassifierCascade faceDetector)\n{\n    using (var frameMatImage = Cv.GetMat(frame))\n    {\n        using (var grayMatImage = new CvMat(frameMatImage.Rows, frameMatImage.Cols, MatrixType.U8C1))\n        {\n            // \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3078\u5909\u63db\n            frameMatImage.CvtColor(grayMatImage, ColorConversion.BgraToGray);\n            var grayImage = Cv.GetImage(grayMatImage);\n            //\u6b63\u898f\u5316\u3059\u308b\n            grayImage.EqualizeHist(grayImage);\n            using (var cvMem = new OpenCvSharp.CvMemStorage())\n            {\n                //\u691c\u51fa\u3092\u884c\u3046\n                Cv.HaarDetectObjects(\n                                    grayImage,\n                                    faceDetector,\n                                    cvMem,\n                                    1.1,\n                                    10,\n                                    0,\n                                    new CvSize(10, 10))\n                .Where(face => face.HasValue)\n                .Select(face => face.Value.Rect)\n                .ToList()\n                .ForEach(faceRect =>\n                {\n                    //\u691c\u51fa\u5834\u6240\u3078\u77e9\u5f62\u8868\u793a\n                    frame.DrawRect(faceRect, Cv.RGB(255, 0, 0), 2);\n                });\n            }\n        }\n    }\n}\n\n```\n\n####3. Rx\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u8ffd\u52a0\u3059\u308b\n\u8ffd\u52a0\u3057\u305f\u30e1\u30bd\u30c3\u30c9(`ImageProcess`)\u3092\u3001Rx\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u633f\u5165\u3057\u307e\u3059\u3002\n\n```C#:(\u5909\u66f4\u524d)\nvar capture = new CvCapture(0);\nObservable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n    .Select(_ => Cv.QueryFrame(capture))\n    .Where(frame => frame != null)\n    .Do(frame => frame.PutText(string.Format(\"{0:MM/dd HH:mm:ss}\", DateTime.Now), new CvPoint(0, 15), font, Cv.RGB(255, 255, 255)))\n    .Subscribe(frame =>\n    {\n```\n\u2193\n\n```C#:(\u5909\u66f4\u5f8c)\nvar capture = new CvCapture(0);\nObservable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n    .Select(_ => Cv.QueryFrame(capture))\n    .Where(frame => frame != null)\n    .Do(frame => frame.PutText(string.Format(\"{0:MM/dd HH:mm:ss}\", DateTime.Now), new CvPoint(0, 15), font, Cv.RGB(255, 255, 255)))\n    .Do(frame => ImageProcess(frame, faceDetector))\n    .Subscribe(frame =>\n    {\n```\n\n###\u5b9f\u884c\n\u5b9f\u884c\u3057\u3066\u81ea\u5206\u306e\u9854\u3078\u30ab\u30e1\u30e9\u3092\u5411\u3051\u3066\u4e0b\u3055\u3044\u3002\u9854\u306e\u5468\u308a\u306b\u77e9\u5f62\u67a0\u304c\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n`OpenCV`\u306b\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\u30ab\u30b9\u30b1\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u306f\u7cbe\u5ea6\u304c\u4f4e\u3044\u306e\u3067\u3001\u771f\u6b63\u9762\u3058\u3083\u306a\u3044\u3068\u8a8d\u8b58\u3057\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u9854\u4ee5\u5916\u3092\u8a8d\u8b58\u3059\u308b\u30ab\u30b9\u30b1\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u306f\u3001[\u300c\u9854\u4ee5\u5916\u300d\u306e\u3082\u306e\u3092\u753b\u50cf\u8a8d\u8b58\u3059\u308b](http://qiita.com/shu223/items/ffd2202eaf92d342f83d)\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n#ViewModel\u30bd\u30fc\u30b9\n\u6700\u5f8c\u306b\u3001ViewModel\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u3066\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002View\u5074\u306f\u5909\u66f4\u7121\u3057\u3067\u3059\u3002\n\u9577\u3044\u8aac\u660e\u3068\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n```C#:MainWindowViewModel.cs\npublic class MainWindowViewModel : ViewModel\n{\n    #region ImageSource \u8868\u793a\u753b\u50cf\n    private BitmapSource _CaptureImageSource;\n    /// <summary>\n    /// \u8868\u793a\u753b\u50cf\n    /// </summary>\n    public BitmapSource CaptureImageSource\n    {\n        get\n        { return _CaptureImageSource; }\n        set\n        {\n            if (_CaptureImageSource == value)\n                return;\n            _CaptureImageSource = value;\n            RaisePropertyChanged();\n        }\n    }\n    #endregion\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public void Initialize()\n    {\n        // \u753b\u9762\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u30d5\u30a9\u30f3\u30c8\u5b9a\u7fa9\n        var font = default(CvFont);\n        Cv.InitFont(out font, FontFace.HersheyScriptComplex, 0.5, 0.5);\n\n        // \u9854\u306e\u5206\u985e\u5668\u4f5c\u6210\n        var faceDetector = Cv.Load<CvHaarClassifierCascade>(\"haarcascade_frontalface_default.xml\");\n\n        // \u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u30c7\u30d0\u30a4\u30b9\n        var capture = new CvCapture(0);\n        Observable.Interval(TimeSpan.FromMilliseconds(1), DispatcherScheduler.Current)\n            .Select(_ => Cv.QueryFrame(capture))\n            .Where(frame => frame != null)\n            .Do(frame => frame.PutText(string.Format(\"{0:MM/dd HH:mm:ss}\", DateTime.Now), new CvPoint(0, 15), font, Cv.RGB(255, 255, 255)))\n            .Do(frame => ImageProcess(frame, faceDetector))\n            .Subscribe(frame =>\n            {\n                var bitmapSource = frame.ToBitmapSource();\n                frame.Dispose();\n                this.CaptureImageSource = bitmapSource;\n            });\n    }\n    /// <summary>\n    /// \u9854\u8a8d\u8b58\u3092\u884c\u3044\u3001\u77e9\u5f62\u67a0\u3092\u63cf\u753b\u3059\u308b\n    /// </summary>\n    /// <param name=\"frame\">\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3057\u305f\u753b\u50cf</param>\n    /// <param name=\"faceDetector\">\u9854\u306e\u5206\u985e\u5668</param>\n    private void ImageProcess(IplImage frame, CvHaarClassifierCascade faceDetector)\n    {\n        using (var frameMatImage = Cv.GetMat(frame))\n        {\n            using (var grayMatImage = new CvMat(frameMatImage.Rows, frameMatImage.Cols, MatrixType.U8C1))\n            {\n                // \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3078\u5909\u63db\n                frameMatImage.CvtColor(grayMatImage, ColorConversion.BgraToGray);\n                var grayImage = Cv.GetImage(grayMatImage);\n                //\u6b63\u898f\u5316\u3059\u308b\n                grayImage.EqualizeHist(grayImage);\n                using (var cvMem = new OpenCvSharp.CvMemStorage())\n                {\n                    //\u691c\u51fa\u3092\u884c\u3046\n                    Cv.HaarDetectObjects(\n                                        grayImage,\n                                        faceDetector,\n                                        cvMem,\n                                        1.1,\n                                        10,\n                                        0,\n                                        new CvSize(10, 10))\n                    .Where(face => face.HasValue)\n                    .Select(face => face.Value.Rect)\n                    .ToList()\n                    .ForEach(faceRect =>\n                    {\n                        //\u691c\u51fa\u5834\u6240\u3078\u77e9\u5f62\u8868\u793a\n                        frame.DrawRect(faceRect, Cv.RGB(255, 0, 0), 2);\n                    });\n                }\n            }\n        }\n    }\n}\n```\n", "tags": ["MVVM", "Livet", "WPF", "OpenCvSharp", "Rx"]}