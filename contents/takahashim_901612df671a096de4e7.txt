{"context": "opal\u30b3\u30de\u30f3\u30c9\u306f\u3001\u901a\u5e38Ruby\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092JavaScript\u306b\u5909\u63db\u3057\u3001\u5b9f\u884c\u307e\u3067\u884c\u3044\u307e\u3059\u3002\n$ cat test.rb\np \"hello\"\n$ opal test.rb\n\"hello\"\n\nRuby\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u305b\u305a\u306b\u3001JavaScript\u306b\u5909\u63db\u3059\u308b\u5834\u5408\u306b\u306f\u3001-c\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u307e\u3059\u3002\n$ opal -c test.rb\n(function(undefined) {\n  // @note\n  //   A few conventions for the documentation of this file:\n  //   1. Always use \"//\" (in contrast with \"/**/\")\n  //   2. The syntax used is Yardoc (yardoc.org), which is intended for Ruby (se below)\n  //   3. `@param` and `@return` types should be preceded by `JS.` when referring to\n  //      JavaScript constructors (e.g. `JS.Function`) otherwise Ruby is assumed.\n  //   4. `nil` and `null` being unambiguous refer to the respective\n  //      objects/values in Ruby and JavaScript\n  //   5. This is still WIP :) so please give feedback and suggestions on how\n  //      to improve or for alternative solutions\n  //\n  //   The way the code is digested before going through Yardoc is a secret kept\n  //   in the docs repo (https://github.com/opal/docs/tree/master).\n\n  if (typeof(this.Opal) !== 'undefined') {\n    console.warn('Opal already loaded. Loading twice can cause troubles, please fix your setup.');\n    return this.Opal;\n  }\n\n  var nil;\n\n  // The actual class for BasicObject\n  var BasicObject;\n(\u4ee5\u4e0b\u7565)\n\n\u6700\u521d\u306e\u90e8\u5206\u306fOpal\u672c\u4f53\u3067\u3001\u672b\u5c3e\u306b\u5909\u63db\u3057\u305fRuby\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u7d9a\u304d\u307e\u3059\u3002\u5909\u63db\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u307f\u3092\u51fa\u529b\u3059\u308b\u306b\u306f\u3001-O\u30aa\u30d7\u30b7\u30e7\u30f3\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n$ opal -cO test.rb\n/* Generated by Opal 0.10.2 */\n(function(Opal) {\n  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$p']);\n  return self.$p(\"hello\")\n})(Opal);\n\n/* Generated by Opal 0.10.2 */\n(function(Opal) {\n  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$exit']);\n  return $scope.get('Kernel').$exit()\n})(Opal);\n\n/* Generated by Opal 0.10.2 */\u304c\uff12\u3064\u3042\u308a\u3001\uff12\u3064\u306e\u7121\u540d\u95a2\u6570\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5f8c\u8005\u306e\u65b9\u306f\u96f0\u56f2\u6c17\u7684\u306bKernel.exit()\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u3053\u308c\u306fopal\u304c\u3042\u3048\u3066\u8ffd\u52a0\u3057\u3066\u3044\u308b\u3082\u306e\u3067\u3001\u3053\u308c\u3092\u524a\u308b\u306b\u306f-E\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3055\u3089\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n$ opal -cOE test.rb\n/* Generated by Opal 0.10.2 */\n(function(Opal) {\n  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$p']);\n  return self.$p(\"hello\")\n})(Opal);\n\n\u3053\u308c\u3067\u5fc5\u8981\u6700\u4f4e\u9650\u306e\u30b3\u30fc\u30c9\u306e\u307f\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001method_missing\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001-M\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3082\u3063\u3068\u77ed\u304f\u306a\u308a\u307e\u3059\u3002\n$ opal -cOEM test.rb\n/* Generated by Opal 0.10.2 */\n(function(Opal) {\n  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  return self.$p(\"hello\")\n})(Opal);\n\n`opal`\u30b3\u30de\u30f3\u30c9\u306f\u3001\u901a\u5e38Ruby\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092JavaScript\u306b\u5909\u63db\u3057\u3001\u5b9f\u884c\u307e\u3067\u884c\u3044\u307e\u3059\u3002\n\n```\n$ cat test.rb\np \"hello\"\n$ opal test.rb\n\"hello\"\n```\n\nRuby\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u305b\u305a\u306b\u3001JavaScript\u306b\u5909\u63db\u3059\u308b\u5834\u5408\u306b\u306f\u3001`-c`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u307e\u3059\u3002\n\n```\n$ opal -c test.rb\n(function(undefined) {\n  // @note\n  //   A few conventions for the documentation of this file:\n  //   1. Always use \"//\" (in contrast with \"/**/\")\n  //   2. The syntax used is Yardoc (yardoc.org), which is intended for Ruby (se below)\n  //   3. `@param` and `@return` types should be preceded by `JS.` when referring to\n  //      JavaScript constructors (e.g. `JS.Function`) otherwise Ruby is assumed.\n  //   4. `nil` and `null` being unambiguous refer to the respective\n  //      objects/values in Ruby and JavaScript\n  //   5. This is still WIP :) so please give feedback and suggestions on how\n  //      to improve or for alternative solutions\n  //\n  //   The way the code is digested before going through Yardoc is a secret kept\n  //   in the docs repo (https://github.com/opal/docs/tree/master).\n\n  if (typeof(this.Opal) !== 'undefined') {\n    console.warn('Opal already loaded. Loading twice can cause troubles, please fix your setup.');\n    return this.Opal;\n  }\n\n  var nil;\n\n  // The actual class for BasicObject\n  var BasicObject;\n(\u4ee5\u4e0b\u7565)\n```\n\n\u6700\u521d\u306e\u90e8\u5206\u306fOpal\u672c\u4f53\u3067\u3001\u672b\u5c3e\u306b\u5909\u63db\u3057\u305fRuby\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u7d9a\u304d\u307e\u3059\u3002\u5909\u63db\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u307f\u3092\u51fa\u529b\u3059\u308b\u306b\u306f\u3001`-O`\u30aa\u30d7\u30b7\u30e7\u30f3\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```\n$ opal -cO test.rb\n/* Generated by Opal 0.10.2 */\n(function(Opal) {\n  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$p']);\n  return self.$p(\"hello\")\n})(Opal);\n\n/* Generated by Opal 0.10.2 */\n(function(Opal) {\n  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$exit']);\n  return $scope.get('Kernel').$exit()\n})(Opal);\n```\n\n`/* Generated by Opal 0.10.2 */`\u304c\uff12\u3064\u3042\u308a\u3001\uff12\u3064\u306e\u7121\u540d\u95a2\u6570\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5f8c\u8005\u306e\u65b9\u306f\u96f0\u56f2\u6c17\u7684\u306b`Kernel.exit()`\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u3053\u308c\u306fopal\u304c\u3042\u3048\u3066\u8ffd\u52a0\u3057\u3066\u3044\u308b\u3082\u306e\u3067\u3001\u3053\u308c\u3092\u524a\u308b\u306b\u306f`-E`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3055\u3089\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```\n$ opal -cOE test.rb\n/* Generated by Opal 0.10.2 */\n(function(Opal) {\n  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$p']);\n  return self.$p(\"hello\")\n})(Opal);\n```\n\n\u3053\u308c\u3067\u5fc5\u8981\u6700\u4f4e\u9650\u306e\u30b3\u30fc\u30c9\u306e\u307f\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u306a\u304a\u3001`method_missing`\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001`-M`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3082\u3063\u3068\u77ed\u304f\u306a\u308a\u307e\u3059\u3002\n\n```\n$ opal -cOEM test.rb\n/* Generated by Opal 0.10.2 */\n(function(Opal) {\n  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  return self.$p(\"hello\")\n})(Opal);\n```\n\n", "tags": ["Ruby", "Opal", "JavaScript"]}