{"context": " More than 1 year has passed since last update.\n\n\u307e\u3068\u3081\n\u5bb6\u65cf\u306e\u30a4\u30f3\u30d5\u30eb\u30a8\u30f3\u30b6\u4e88\u9632\u306e\u305f\u3081\u306b\u3082\u3001\u5ba4\u5185\u306e\u6e29\u5ea6\u30fb\u6e7f\u5ea6\u3092\u7ba1\u7406\u3057\u305f\u304f\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u8a71\u984c\u306eESP8266\u304c\u306e\u3063\u3066\u308bSwitch Science\u306eESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9\u307b\u3057\u3044\u306e\u306b\u305a\u3063\u3068\u58f2\u308a\u5207\u308c\u30fb\u30fb\u3068\u601d\u3044\u306a\u304c\u3089\u5343\u77f3\u96fb\u5546\u306b\u884c\u3063\u3066\u307f\u305f\u3089\u666e\u901a\u306b\u58f2\u3063\u3066\u3044\u305f\u306e\u3067\u8cb7\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u914d\u7dda\u3082\u307b\u304b\u306e\u30d1\u30fc\u30c4\u3082\u5fc5\u8981\u306a\u304f\u3001\u30cd\u30c3\u30c8\u306b\u3064\u306a\u3050\u306e\u3082\u3059\u3050\u306b\u3067\u304d\u308b\u3057\u3001\u3053\u306e\u4fa1\u683c\u306f\u30b2\u30fc\u30e0\u30c1\u30a7\u30f3\u30b8\u3060\u306a\u3041\u3001\u3068\u611f\u3058\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001\u96fb\u6e90\u304c\u306a\u3044\u3068\u3053\u308d\u3067\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u3084\u3063\u3071\u308a\u96fb\u6c60\u306e\u554f\u984c\u3092\u3069\u3046\u3059\u308b\u304b\u3001\u3068\u3044\u3046\u554f\u984c\u306f\u6b8b\u308b\u306e\u3067\u3001\u30c7\u30a3\u30fc\u30d7\u30b9\u30ea\u30fc\u30d7\u30e2\u30fc\u30c9\u3067\u3069\u308c\u3050\u3089\u3044\u9023\u7d9a\u7a3c\u50cd\u3067\u304d\u308b\u304b\u8a66\u3057\u3066\u307f\u305f\u3044\u3002\n\u30c7\u30a3\u30fc\u30d7\u30b9\u30ea\u30fc\u30d7\u30e2\u30fc\u30c9\u3067\u5fa9\u5e301s\u4ee5\u5185\u306bWifi\u3067POST\u3067\u304d\u3066\u3001\u3059\u3050\u306b\u30c7\u30a3\u30fc\u30d7\u30b9\u30ea\u30fc\u30d7\u30e2\u30fc\u30c9\u306b\u5165\u308b\u306a\u3089twe-lite\u3088\u308a\u3082\u7c21\u5358\u306b\u96fb\u6c60\u7a3c\u50cd\u306e\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u304c\u3067\u304d\u308b\u304b\u3082\u3002\nBlynk\u3082\u7d20\u6674\u3089\u3057\u304f\u3066\u3001\u7701\u30a8\u30cd\u3068\u304b\u8003\u3048\u306a\u3051\u308c\u3070\u7c21\u5358\u306b\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\uff0b\u8868\u793a\u3059\u308b\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u914d\u5e03\u307e\u3067\u3067\u304d\u308b\u306e\u3067\u5bb6\u5ead\u5185\u3060\u3068\u3084\u308a\u305f\u3044\u3053\u3068\u304c\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u3066\u3059\u3070\u3089\u3057\u3044\u3002\n\u79cb\u8449\u539f\u304c\u3082\u3063\u3068\u8fd1\u304f\u306b\u3042\u308b\u304b\u3001Amazon\u3067\u96fb\u5b50\u5de5\u4f5c\u306e\u30d1\u30fc\u30c4\u3092Prime\u3067\u8cb7\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3001\u3001\u3002\n\n\u5fc5\u8981\u306a\u3082\u306e\n\u5408\u8a083000\u5186\u3050\u3089\u3044\u304b\u306a\u3002ESP8266\uff0b\u30d6\u30ec\u30fc\u30af\u30a2\u30a6\u30c8\u30dc\u30fc\u30c9\u3067\u4f5c\u308c\u30702000\u5186\u3050\u3089\u3044\u306b\u306a\u308b\u306f\u305a\u3002ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9\u306fUSB\u30b7\u30ea\u30a2\u30eb\u5909\u63db\u30c1\u30c3\u30d7\u3082\u4e57\u3063\u3066\u308b\u306e\u3067\u3001\u958b\u767a\u306f\u3053\u306e\u30dc\u30fc\u30c9\u3067\u3084\u3063\u3066\u3001\u904b\u7528\u306f\u5b89\u3044\u69cb\u6210\u306b\u3057\u3066\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3080\u3001\u304c\u826f\u3044\u306e\u304b\u3082\u3002\n\nESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9(Switch Science)\n\u30d4\u30f3\u30d8\u30c3\u30c0\n\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\n\uff22\uff2d\uff25\uff12\uff18\uff10\u4f7f\u7528\u3000\u6e29\u6e7f\u5ea6\u30fb\u6c17\u5727\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30eb\u30ad\u30c3\u30c8(\u79cb\u6708\u96fb\u5b50)\n\n\u79cb\u6708\u306eBME280\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u30ad\u30c3\u30c8\u306f\u3001\u30d7\u30eb\u30a2\u30c3\u30d7\u62b5\u6297\u3082\u30aa\u30f3\u30dc\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u3066\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u306b\u4e57\u305b\u308b\u6642\u3082\u3059\u3063\u304d\u308a\u3057\u305f\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4f5c\u308a\u65b9\nhttp://todotani.cocolog-nifty.com/blog/2015/10/esp-wroom-02i2c.html\n\u3067\u7d39\u4ecb\u3057\u3066\u304f\u308c\u3066\u308b\u306e\u3092\u53c2\u8003\u306b\u3001\n- IO4 -> SDI\n- IO5 -> SCK\n\u3092\u7e4b\u3044\u3067\u3042\u3052\u308c\u3070OK\u3002\n\u30b9\u30b1\u30c3\u30c1\u3082\u4e0b\u8a18\u306b\u7d39\u4ecb\u3055\u308c\u3066\u304f\u308c\u3066\u3044\u308b\u901a\u308a\u3067OK\u3002\u3042\u308a\u304c\u305f\u3084\u3002\nBME280, Blynk\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306fgithub\u304b\u3089zip\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u8ffd\u52a0\u3057\u3066\u304a\u3051\u3070OK\u3002\n\n\n\u30b3\u30fc\u30c9\nhttp://todotani.cocolog-nifty.com/blog/2015/10/esp-wroom-02i2c.html\n\u3067\u7d39\u4ecb\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306e\u307b\u3068\u3093\u3069\u30b3\u30d4\u30da\u3067\u3059\u3002\n\u3044\u304f\u3064\u304b\u30c7\u30d0\u30c3\u30b0\u7528\u306bPrint\u8ffd\u52a0\u3057\u3066\u3042\u308b\u3050\u3089\u3044\u3002\n/**************************************************************\n * Blynk is a platform with iOS and Android apps to control\n * Arduino, Raspberry Pi and the likes over the Internet.\n * You can easily build graphic interfaces for all your\n * projects by simply dragging and dropping widgets.\n *\n *   Downloads, docs, tutorials: http://www.blynk.cc\n *   Blynk community:            http://community.blynk.cc\n *   Social networks:            http://www.fb.com/blynkapp\n *                               http://twitter.com/blynk_app\n *\n * Blynk library is licensed under MIT license\n * This example code is in public domain.\n *\n **************************************************************\n * This example runs directly on ESP8266 chip.\n *\n * You need to install this for ESP8266 development:\n *   https://github.com/esp8266/Arduino\n * \n * Please be sure to select hte right ESP8266 module\n * in the Tools -> Board menu!\n *\n * Change WiFi ssid, pass, and Blynk auth token to run :)\n *\n **************************************************************/\n\n#define BLYNK_PRINT Serial    // Comment this out to disable prints and save space\n#include <ESP8266WiFi.h>\n#include <BlynkSimpleEsp8266.h>\n#include <BME280_MOD-1022.h>\n#include <Wire.h>\n\n// You should get Auth Token in the Blynk App.\n// Go to the Project Settings (nut icon).\nchar auth[] = \"blynk auth token\";\n\nunsigned long lastCheck = 0;\ndouble tempMostAccurate, humidityMostAccurate, pressureMostAccurate;\nchar buff[50];\n\n// Arduino needs this to pring pretty numbers\n\nvoid printFormattedFloat(float x, uint8_t precision) {\n  char buffer[10];\n\n  dtostrf(x, 7, precision, buffer);\n  Serial.print(buffer);\n}\n\nvoid setup()\n{\n  Serial.begin(115200);\n  Blynk.begin(auth, \"ssid\", \"pass\");\n  Wire.begin(); \n  pinMode(12, OUTPUT);\n\n  // need to read the NVM compensation parameters\n  BME280.readCompensationParams();\n\n  BME280.writeStandbyTime(tsb_0p5ms);         // tsb = 0.5ms\n  BME280.writeFilterCoefficient(fc_16);       // IIR Filter coefficient 16\n  BME280.writeOversamplingPressure(os16x);    // pressure x16\n  BME280.writeOversamplingTemperature(os2x);  // temperature x2\n  BME280.writeOversamplingHumidity(os1x);     // humidity x1\n\n  BME280.writeMode(smNormal);\n}\n\nvoid formattedFloat(float x, uint8_t precision, char *buff) {\n  dtostrf(x, 7, precision, buff);\n}\n\nBLYNK_READ(V0) \n{ \n  tempMostAccurate = BME280.getTemperatureMostAccurate();\n\n  Serial.print(\"Temp \");\n  printFormattedFloat(tempMostAccurate, 2);\n  Serial.println();\n\n  formattedFloat(tempMostAccurate, 2, buff);\n  Blynk.virtualWrite(V0, buff);\n}\n\nBLYNK_READ(V1) \n{ \n  humidityMostAccurate = BME280.getHumidityMostAccurate();\n\n  Serial.print(\"humid \");\n  printFormattedFloat(humidityMostAccurate, 2);\n  Serial.println();\n\n\n  formattedFloat(humidityMostAccurate, 2, buff);\n  Blynk.virtualWrite(V1, buff);\n}\n\nBLYNK_READ(V2) \n{ \n  pressureMostAccurate = BME280.getPressureMostAccurate();\n\n  Serial.print(\"pressure \");\n  printFormattedFloat(pressureMostAccurate, 2);\n  Serial.println();\n\n  formattedFloat(pressureMostAccurate, 2, buff);\n  Blynk.virtualWrite(V2, buff);\n}\n\nvoid loop()\n{\n  Blynk.run();\n\n  int diff = millis() - lastCheck;\n  if (diff > 1000) {\n    while (BME280.isMeasuring()) {\n\n    }\n    // read out the data - must do this before calling the getxxxxx routines\n    BME280.readMeasurements();\n    lastCheck = millis();\n  } else if (diff < 0) {\n    lastCheck = 0;\n  }\n}\n\n\nBlynk\u306e\u8868\u793a\n\u3059\u3050\u306b\u304b\u3063\u3053\u3044\u3044\u611f\u3058\u3067\u8868\u793a\u3067\u304d\u308b\uff01\u3044\u3044\u306a\u3053\u308c\u3002\u30c7\u30fc\u30bf\u3092\u84c4\u7a4d\u3059\u308b\u306e\u3068\u3001\u30b0\u30e9\u30d5\u3067\u53ef\u8996\u5316\u3057\u305f\u3044\u3001\u3068\u3044\u3046\u306e\u306f\u3088\u304f\u3042\u308b\u30b1\u30fc\u30b9\u306a\u306e\u3067\u3088\u304f\u308f\u304b\u3063\u3066\u308b\u306a\u3001\u3068\u3044\u3046\u611f\u3058\u304c\u3059\u308b\u3002\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u307f\u305f\u3044\u306a\u306e\u3067\u3001\u5206\u6790\u3057\u305f\u3044\u3001\u307f\u305f\u3044\u306a\u7528\u9014\u306b\u306f\u4f7f\u3048\u306a\u305d\u3046\u3060\u3051\u3069\u3002\n\n\n\u30c8\u30e9\u30d6\u30eb\nESP8266\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u66f8\u304d\u8fbc\u307f\u30e2\u30fc\u30c9\u306b\u3059\u308b\u306b\u306f\u3001IO0=L\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001IO0\u306e\u30b9\u30a4\u30c3\u30c1\u3092\u62bc\u3057\u306a\u304c\u3089\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3060\u3051\u3067\u306f\u30c0\u30e1\u3067\u3001\u66f8\u304d\u8fbc\u307f\u958b\u59cb\u3092Arduino IDE\u5074\u3067\u884c\u3046\u307e\u3067IO0\u306e\u30b9\u30a4\u30c3\u30c1\u3092\u62bc\u3057\u7d9a\u3051\u3066\u4e0a\u3052\u308b\u611f\u3058\u3067\u3084\u308b\u3068\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n\u6700\u521d\u306a\u305c\u66f8\u304d\u8fbc\u307f\u30e2\u30fc\u30c9\u306b\u306a\u3089\u306a\u3044\u304b\u5168\u304f\u308f\u304b\u3089\u305a\u30cf\u30de\u308a\u307e\u3057\u305f\u30fb\u30fb\u30fb\u3002\n# \u307e\u3068\u3081\n\n\u5bb6\u65cf\u306e\u30a4\u30f3\u30d5\u30eb\u30a8\u30f3\u30b6\u4e88\u9632\u306e\u305f\u3081\u306b\u3082\u3001\u5ba4\u5185\u306e\u6e29\u5ea6\u30fb\u6e7f\u5ea6\u3092\u7ba1\u7406\u3057\u305f\u304f\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u8a71\u984c\u306eESP8266\u304c\u306e\u3063\u3066\u308bSwitch Science\u306eESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9\u307b\u3057\u3044\u306e\u306b\u305a\u3063\u3068\u58f2\u308a\u5207\u308c\u30fb\u30fb\u3068\u601d\u3044\u306a\u304c\u3089\u5343\u77f3\u96fb\u5546\u306b\u884c\u3063\u3066\u307f\u305f\u3089\u666e\u901a\u306b\u58f2\u3063\u3066\u3044\u305f\u306e\u3067\u8cb7\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u914d\u7dda\u3082\u307b\u304b\u306e\u30d1\u30fc\u30c4\u3082\u5fc5\u8981\u306a\u304f\u3001\u30cd\u30c3\u30c8\u306b\u3064\u306a\u3050\u306e\u3082\u3059\u3050\u306b\u3067\u304d\u308b\u3057\u3001\u3053\u306e\u4fa1\u683c\u306f\u30b2\u30fc\u30e0\u30c1\u30a7\u30f3\u30b8\u3060\u306a\u3041\u3001\u3068\u611f\u3058\u3066\u3044\u307e\u3059\u3002\n\n\u305f\u3060\u3001\u96fb\u6e90\u304c\u306a\u3044\u3068\u3053\u308d\u3067\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u3084\u3063\u3071\u308a\u96fb\u6c60\u306e\u554f\u984c\u3092\u3069\u3046\u3059\u308b\u304b\u3001\u3068\u3044\u3046\u554f\u984c\u306f\u6b8b\u308b\u306e\u3067\u3001\u30c7\u30a3\u30fc\u30d7\u30b9\u30ea\u30fc\u30d7\u30e2\u30fc\u30c9\u3067\u3069\u308c\u3050\u3089\u3044\u9023\u7d9a\u7a3c\u50cd\u3067\u304d\u308b\u304b\u8a66\u3057\u3066\u307f\u305f\u3044\u3002\n\u30c7\u30a3\u30fc\u30d7\u30b9\u30ea\u30fc\u30d7\u30e2\u30fc\u30c9\u3067\u5fa9\u5e301s\u4ee5\u5185\u306bWifi\u3067POST\u3067\u304d\u3066\u3001\u3059\u3050\u306b\u30c7\u30a3\u30fc\u30d7\u30b9\u30ea\u30fc\u30d7\u30e2\u30fc\u30c9\u306b\u5165\u308b\u306a\u3089twe-lite\u3088\u308a\u3082\u7c21\u5358\u306b\u96fb\u6c60\u7a3c\u50cd\u306e\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u304c\u3067\u304d\u308b\u304b\u3082\u3002\n\nBlynk\u3082\u7d20\u6674\u3089\u3057\u304f\u3066\u3001\u7701\u30a8\u30cd\u3068\u304b\u8003\u3048\u306a\u3051\u308c\u3070\u7c21\u5358\u306b\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\uff0b\u8868\u793a\u3059\u308b\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u914d\u5e03\u307e\u3067\u3067\u304d\u308b\u306e\u3067\u5bb6\u5ead\u5185\u3060\u3068\u3084\u308a\u305f\u3044\u3053\u3068\u304c\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u3066\u3059\u3070\u3089\u3057\u3044\u3002\n\n\u79cb\u8449\u539f\u304c\u3082\u3063\u3068\u8fd1\u304f\u306b\u3042\u308b\u304b\u3001Amazon\u3067\u96fb\u5b50\u5de5\u4f5c\u306e\u30d1\u30fc\u30c4\u3092Prime\u3067\u8cb7\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3001\u3001\u3002\n\n# \u5fc5\u8981\u306a\u3082\u306e\n\n\u5408\u8a083000\u5186\u3050\u3089\u3044\u304b\u306a\u3002ESP8266\uff0b\u30d6\u30ec\u30fc\u30af\u30a2\u30a6\u30c8\u30dc\u30fc\u30c9\u3067\u4f5c\u308c\u30702000\u5186\u3050\u3089\u3044\u306b\u306a\u308b\u306f\u305a\u3002ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9\u306fUSB\u30b7\u30ea\u30a2\u30eb\u5909\u63db\u30c1\u30c3\u30d7\u3082\u4e57\u3063\u3066\u308b\u306e\u3067\u3001\u958b\u767a\u306f\u3053\u306e\u30dc\u30fc\u30c9\u3067\u3084\u3063\u3066\u3001\u904b\u7528\u306f\u5b89\u3044\u69cb\u6210\u306b\u3057\u3066\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3080\u3001\u304c\u826f\u3044\u306e\u304b\u3082\u3002\n\n- [ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9(Switch Science)](https://www.switch-science.com/catalog/2500/)\n- \u30d4\u30f3\u30d8\u30c3\u30c0\n- \u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\n- [\uff22\uff2d\uff25\uff12\uff18\uff10\u4f7f\u7528\u3000\u6e29\u6e7f\u5ea6\u30fb\u6c17\u5727\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30eb\u30ad\u30c3\u30c8(\u79cb\u6708\u96fb\u5b50)](http://akizukidenshi.com/catalog/g/gK-09421/)\n\n\u79cb\u6708\u306eBME280\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u30ad\u30c3\u30c8\u306f\u3001\u30d7\u30eb\u30a2\u30c3\u30d7\u62b5\u6297\u3082\u30aa\u30f3\u30dc\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u3066\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u306b\u4e57\u305b\u308b\u6642\u3082\u3059\u3063\u304d\u308a\u3057\u305f\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u4f5c\u308a\u65b9\n\nhttp://todotani.cocolog-nifty.com/blog/2015/10/esp-wroom-02i2c.html\n\u3067\u7d39\u4ecb\u3057\u3066\u304f\u308c\u3066\u308b\u306e\u3092\u53c2\u8003\u306b\u3001\n- IO4 -> SDI\n- IO5 -> SCK\n\u3092\u7e4b\u3044\u3067\u3042\u3052\u308c\u3070OK\u3002\n\n\u30b9\u30b1\u30c3\u30c1\u3082\u4e0b\u8a18\u306b\u7d39\u4ecb\u3055\u308c\u3066\u304f\u308c\u3066\u3044\u308b\u901a\u308a\u3067OK\u3002\u3042\u308a\u304c\u305f\u3084\u3002\nBME280, Blynk\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306fgithub\u304b\u3089zip\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u8ffd\u52a0\u3057\u3066\u304a\u3051\u3070OK\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/1592/c03ba2f0-1cd2-94ed-73fd-39b1471acf2d.png)\n\n## \u30b3\u30fc\u30c9\n\nhttp://todotani.cocolog-nifty.com/blog/2015/10/esp-wroom-02i2c.html\n\u3067\u7d39\u4ecb\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306e\u307b\u3068\u3093\u3069\u30b3\u30d4\u30da\u3067\u3059\u3002\n\u3044\u304f\u3064\u304b\u30c7\u30d0\u30c3\u30b0\u7528\u306bPrint\u8ffd\u52a0\u3057\u3066\u3042\u308b\u3050\u3089\u3044\u3002\n\n```c\n/**************************************************************\n * Blynk is a platform with iOS and Android apps to control\n * Arduino, Raspberry Pi and the likes over the Internet.\n * You can easily build graphic interfaces for all your\n * projects by simply dragging and dropping widgets.\n *\n *   Downloads, docs, tutorials: http://www.blynk.cc\n *   Blynk community:            http://community.blynk.cc\n *   Social networks:            http://www.fb.com/blynkapp\n *                               http://twitter.com/blynk_app\n *\n * Blynk library is licensed under MIT license\n * This example code is in public domain.\n *\n **************************************************************\n * This example runs directly on ESP8266 chip.\n *\n * You need to install this for ESP8266 development:\n *   https://github.com/esp8266/Arduino\n * \n * Please be sure to select hte right ESP8266 module\n * in the Tools -> Board menu!\n *\n * Change WiFi ssid, pass, and Blynk auth token to run :)\n *\n **************************************************************/\n \n#define BLYNK_PRINT Serial    // Comment this out to disable prints and save space\n#include <ESP8266WiFi.h>\n#include <BlynkSimpleEsp8266.h>\n#include <BME280_MOD-1022.h>\n#include <Wire.h>\n \n// You should get Auth Token in the Blynk App.\n// Go to the Project Settings (nut icon).\nchar auth[] = \"blynk auth token\";\n \nunsigned long lastCheck = 0;\ndouble tempMostAccurate, humidityMostAccurate, pressureMostAccurate;\nchar buff[50];\n\n// Arduino needs this to pring pretty numbers\n \nvoid printFormattedFloat(float x, uint8_t precision) {\n  char buffer[10];\n \n  dtostrf(x, 7, precision, buffer);\n  Serial.print(buffer);\n}\n \nvoid setup()\n{\n  Serial.begin(115200);\n  Blynk.begin(auth, \"ssid\", \"pass\");\n  Wire.begin(); \n  pinMode(12, OUTPUT);\n \n  // need to read the NVM compensation parameters\n  BME280.readCompensationParams();\n \n  BME280.writeStandbyTime(tsb_0p5ms);         // tsb = 0.5ms\n  BME280.writeFilterCoefficient(fc_16);       // IIR Filter coefficient 16\n  BME280.writeOversamplingPressure(os16x);    // pressure x16\n  BME280.writeOversamplingTemperature(os2x);  // temperature x2\n  BME280.writeOversamplingHumidity(os1x);     // humidity x1\n \n  BME280.writeMode(smNormal);\n}\n \nvoid formattedFloat(float x, uint8_t precision, char *buff) {\n  dtostrf(x, 7, precision, buff);\n}\n \nBLYNK_READ(V0) \n{ \n  tempMostAccurate = BME280.getTemperatureMostAccurate();\n\n  Serial.print(\"Temp \");\n  printFormattedFloat(tempMostAccurate, 2);\n  Serial.println();\n  \n  formattedFloat(tempMostAccurate, 2, buff);\n  Blynk.virtualWrite(V0, buff);\n}\n \nBLYNK_READ(V1) \n{ \n  humidityMostAccurate = BME280.getHumidityMostAccurate();\n  \n  Serial.print(\"humid \");\n  printFormattedFloat(humidityMostAccurate, 2);\n  Serial.println();\n  \n  \n  formattedFloat(humidityMostAccurate, 2, buff);\n  Blynk.virtualWrite(V1, buff);\n}\n \nBLYNK_READ(V2) \n{ \n  pressureMostAccurate = BME280.getPressureMostAccurate();\n\n  Serial.print(\"pressure \");\n  printFormattedFloat(pressureMostAccurate, 2);\n  Serial.println();\n  \n  formattedFloat(pressureMostAccurate, 2, buff);\n  Blynk.virtualWrite(V2, buff);\n}\n \nvoid loop()\n{\n  Blynk.run();\n \n  int diff = millis() - lastCheck;\n  if (diff > 1000) {\n    while (BME280.isMeasuring()) {\n \n    }\n    // read out the data - must do this before calling the getxxxxx routines\n    BME280.readMeasurements();\n    lastCheck = millis();\n  } else if (diff < 0) {\n    lastCheck = 0;\n  }\n}\n```\n\n# Blynk\u306e\u8868\u793a\n\n\u3059\u3050\u306b\u304b\u3063\u3053\u3044\u3044\u611f\u3058\u3067\u8868\u793a\u3067\u304d\u308b\uff01\u3044\u3044\u306a\u3053\u308c\u3002\u30c7\u30fc\u30bf\u3092\u84c4\u7a4d\u3059\u308b\u306e\u3068\u3001\u30b0\u30e9\u30d5\u3067\u53ef\u8996\u5316\u3057\u305f\u3044\u3001\u3068\u3044\u3046\u306e\u306f\u3088\u304f\u3042\u308b\u30b1\u30fc\u30b9\u306a\u306e\u3067\u3088\u304f\u308f\u304b\u3063\u3066\u308b\u306a\u3001\u3068\u3044\u3046\u611f\u3058\u304c\u3059\u308b\u3002\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u307f\u305f\u3044\u306a\u306e\u3067\u3001\u5206\u6790\u3057\u305f\u3044\u3001\u307f\u305f\u3044\u306a\u7528\u9014\u306b\u306f\u4f7f\u3048\u306a\u305d\u3046\u3060\u3051\u3069\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/1592/ef830ce6-1b96-0212-6430-527e6f0bf007.png)\n\n\n# \u30c8\u30e9\u30d6\u30eb\n\nESP8266\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u66f8\u304d\u8fbc\u307f\u30e2\u30fc\u30c9\u306b\u3059\u308b\u306b\u306f\u3001IO0=L\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001IO0\u306e\u30b9\u30a4\u30c3\u30c1\u3092\u62bc\u3057\u306a\u304c\u3089\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3060\u3051\u3067\u306f\u30c0\u30e1\u3067\u3001\u66f8\u304d\u8fbc\u307f\u958b\u59cb\u3092Arduino IDE\u5074\u3067\u884c\u3046\u307e\u3067IO0\u306e\u30b9\u30a4\u30c3\u30c1\u3092\u62bc\u3057\u7d9a\u3051\u3066\u4e0a\u3052\u308b\u611f\u3058\u3067\u3084\u308b\u3068\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n\u6700\u521d\u306a\u305c\u66f8\u304d\u8fbc\u307f\u30e2\u30fc\u30c9\u306b\u306a\u3089\u306a\u3044\u304b\u5168\u304f\u308f\u304b\u3089\u305a\u30cf\u30de\u308a\u307e\u3057\u305f\u30fb\u30fb\u30fb\u3002\n", "tags": ["ESP-WROOM-02", "ESP8266", "\u96fb\u5b50\u5de5\u4f5c", "IoT", "Arduino"]}