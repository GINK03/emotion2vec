{"context": "\n\n\u5143\u30cd\u30bf\nhttp://qiita.com/shunsugai@github/items/971a15461de29563bf90\n\nGo\u4e26\u5217\u7248\n\u9014\u4e2d\u7d4c\u904e\u306e\u51fa\u529b\u4e0d\u53ef\u80fd\u3067\u3059\u304c\npackage main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"runtime\"\n    \"sync\"\n    \"time\"\n)\n\n// Zundoko is \u30ba\u30f3\u30c9\u30b3\u914d\u5217\nvar Zundoko = [2]string{\"\u30ba\u30f3\", \"\u30c9\u30b3\"}\n\nfunc main() {\n    cpus := runtime.NumCPU()\n    runtime.GOMAXPROCS(cpus)\n    kiyoshiCh := make(chan bool, 1)\n    var m sync.Mutex\n    for i := 0; i < cpus; i++ {\n        go zndk(kiyoshiCh, &m)\n    }\n\n    <-kiyoshiCh\n    close(kiyoshiCh)\n    fmt.Println(\"\u30ad\u30fb\u30e8\u30fb\u30b7!\")\n}\n\nfunc zndk(kiyoshiCh chan bool, m *sync.Mutex) {\n    zdk := make([]string, 5)\n    for {\n        for i := 0; i < 5; i++ {\n            zdk[i] = getZndk(m)\n        }\n        if zdk[0] == \"\u30ba\u30f3\" && zdk[1] == \"\u30ba\u30f3\" && zdk[2] == \"\u30ba\u30f3\" && zdk[3] == \"\u30ba\u30f3\" && zdk[4] == \"\u30c9\u30b3\" {\n            for _, s := range zdk {\n                fmt.Println(s)\n            }\n            kiyoshiCh <- true\n            break\n        }\n    }\n}\n\nfunc getZndk(m *sync.Mutex) string {\n    m.Lock()\n    defer m.Unlock()\n    rand.Seed(time.Now().UnixNano())\n    return Zundoko[rand.Intn(2)]\n}\n\n#\u5143\u30cd\u30bf\n\nhttp://qiita.com/shunsugai@github/items/971a15461de29563bf90\n\n\n#Go\u4e26\u5217\u7248\n\n\u9014\u4e2d\u7d4c\u904e\u306e\u51fa\u529b\u4e0d\u53ef\u80fd\u3067\u3059\u304c\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"runtime\"\n\t\"sync\"\n\t\"time\"\n)\n\n// Zundoko is \u30ba\u30f3\u30c9\u30b3\u914d\u5217\nvar Zundoko = [2]string{\"\u30ba\u30f3\", \"\u30c9\u30b3\"}\n\nfunc main() {\n\tcpus := runtime.NumCPU()\n\truntime.GOMAXPROCS(cpus)\n\tkiyoshiCh := make(chan bool, 1)\n\tvar m sync.Mutex\n\tfor i := 0; i < cpus; i++ {\n\t\tgo zndk(kiyoshiCh, &m)\n\t}\n\n\t<-kiyoshiCh\n\tclose(kiyoshiCh)\n\tfmt.Println(\"\u30ad\u30fb\u30e8\u30fb\u30b7!\")\n}\n\nfunc zndk(kiyoshiCh chan bool, m *sync.Mutex) {\n\tzdk := make([]string, 5)\n\tfor {\n\t\tfor i := 0; i < 5; i++ {\n\t\t\tzdk[i] = getZndk(m)\n\t\t}\n\t\tif zdk[0] == \"\u30ba\u30f3\" && zdk[1] == \"\u30ba\u30f3\" && zdk[2] == \"\u30ba\u30f3\" && zdk[3] == \"\u30ba\u30f3\" && zdk[4] == \"\u30c9\u30b3\" {\n\t\t\tfor _, s := range zdk {\n\t\t\t\tfmt.Println(s)\n\t\t\t}\n\t\t\tkiyoshiCh <- true\n\t\t\tbreak\n\t\t}\n\t}\n}\n\nfunc getZndk(m *sync.Mutex) string {\n\tm.Lock()\n\tdefer m.Unlock()\n\trand.Seed(time.Now().UnixNano())\n\treturn Zundoko[rand.Intn(2)]\n}\n```\n", "tags": ["golang", "Go", "\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7"]}