{"context": "\n\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n\n\nTensorFlow\u3068\u3044\u3046Deep Learning\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5b66\u7fd2\u4e2d\u3002\nTensorFlow\u3092\u904a\u3073\u5012\u3059\uff01 4-1. Convolutional Neural Networks\nhttp://blog.brainpad.co.jp/entry/2016/04/22/170000\nCIFAR-10\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u51e6\u7406\u3059\u308bTutorial\u3092\u8aad\u3093\u3067\u3044\u308b\u3002\ncifar10_train.py\u306e\u4ee5\u4e0b\u306eassert not np.isnan()\u306e\u8a18\u8f09\u306f\u672a\u6d88\u5316\u3060\u3063\u305f\u3002\n\ncifar10_train.py\n...\n    for step in xrange(FLAGS.max_steps):\n      start_time = time.time()\n      _, loss_value = sess.run([train_op, loss])\n      duration = time.time() - start_time\n\n      assert not np.isnan(loss_value), 'Model diverged with loss = NaN'\n...\n\n\nloss_value\u304cNaN\u306b\u306a\u3063\u305f\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u3088\u3046\u3060\u3002\nhttps://docs.scipy.org/doc/numpy/reference/generated/numpy.isnan.html\nhttp://docs.python.jp/2.4/ref/assert.html\n```txt:\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n```\n\nTensorFlow\u3068\u3044\u3046Deep Learning\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5b66\u7fd2\u4e2d\u3002\n\nTensorFlow\u3092\u904a\u3073\u5012\u3059\uff01 4-1. Convolutional Neural Networks\nhttp://blog.brainpad.co.jp/entry/2016/04/22/170000\n\nCIFAR-10\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u51e6\u7406\u3059\u308bTutorial\u3092\u8aad\u3093\u3067\u3044\u308b\u3002\n\ncifar10_train.py\u306e\u4ee5\u4e0b\u306eassert not np.isnan()\u306e\u8a18\u8f09\u306f\u672a\u6d88\u5316\u3060\u3063\u305f\u3002\n\n```cifar10_train.py\n...\n    for step in xrange(FLAGS.max_steps):\n      start_time = time.time()\n      _, loss_value = sess.run([train_op, loss])\n      duration = time.time() - start_time\n\n      assert not np.isnan(loss_value), 'Model diverged with loss = NaN'\n...\n```\n\nloss_value\u304cNaN\u306b\u306a\u3063\u305f\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u3088\u3046\u3060\u3002\n\nhttps://docs.scipy.org/doc/numpy/reference/generated/numpy.isnan.html\nhttp://docs.python.jp/2.4/ref/assert.html\n\n", "tags": ["Python", "borgWarp"]}