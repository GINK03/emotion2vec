{"tags": ["Swift", "RxSwift"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nSwift \u3067\u4f7f\u3044\u3084\u3059\u3044 API \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u300e\u4f7f\u3044\u3084\u3059\u3044\u300f\u306e\u5b9a\u7fa9\u306f\u305d\u308c\u305e\u308c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\n\u53ef\u8aad\u6027\u304c\u9ad8\u3044\n\u30e1\u30f3\u30c6\u30ca\u30d6\u30eb\u306a\u3082\u306e\n\n\u306a\u3082\u306e\u3092\u76ee\u6307\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4f5c\u308b\u3082\u306e\n\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001GitHub \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u516c\u958b API\uff08https://api.github.com/users/GITHUB_USERNAME/repos\uff09 \u3078\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u74b0\u5883\n\nXcode 7.2\uff08Swift 2.1.1\uff09\nCarthage 0.11.0\n\n\n\u4f7f\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\n\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3068 Entity \u306e\u30de\u30c3\u30d4\u30f3\u30b0 ->  Hearst-DD/ObjectMapper\n\nAPI \u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u90e8\u5206\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0 -> \u578b\u5b89\u5168\u3092\u671f\u5f85\u3057\u3066\u3001 ishkawa/APIKit\n\nAPI \u547c\u3073\u51fa\u3057\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0 -> ReactiveX/RxSwift\n\n\uff08API \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3068\u3044\u3046\u3068\u3001\u53b3\u5bc6\u306b\u306f\u305d\u306e\u5916\u5074\u306b\u306f\u306a\u308b\u306e\u3067\u3059\u304c\uff09\n\n\n\n\n1. \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n1.a. Carthage \u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCLI \u3067\u306e\u4f5c\u696d\u306b\u306a\u308a\u307e\u3059\u3002\nCartfile \u3092\u4f5c\u308a\u3001Carthage \u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\uff08Carthage \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001brew install carthage \u7b49\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff09\nCartfile \u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\ngithub \"ishkawa/APIKit\" ~> 1.1.2\ngithub \"ReactiveX/RxSwift\" \"2.0.0-beta.4\"\ngithub \"Hearst-DD/ObjectMapper\" ~> 1.0\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u4ee5\u4e0b\u30b3\u30de\u30f3\u30c9\u3067\u884c\u3044\u307e\u3059\u3002\ncarthage update --platform iOS\n\n\n1.b. Linked Frameworks and Libraries \u306b framework \u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\nXcode \u4e0a\u3067\u306e\u4f5c\u696d\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n\u5de6\u306b\u3042\u308b TARGETS \u3067 APISample \u3092\u9078\u629e\n\u4e0a\u90e8\u306e General \u30bf\u30d6\u3092\u9078\u629e\n\nLinked Frameworks and Libraries \u306e + \u30dc\u30bf\u30f3\u3092\u9078\u629e\n\nAdd Other... \u30dc\u30bf\u30f3\u3092\u9078\u629e\n\n{RepoRoot}/Carthage/Build/iOS/ \u4ee5\u4e0b\u306e .framework \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\n\n\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n1.c. Build Phases \u306b framework \u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\n\u5f15\u304d\u7d9a\u304d Xcode \u4e0a\u3067\u306e\u4f5c\u696d\u3067\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n\u5de6\u306b\u3042\u308b TARGETS \u3067 APISample \u3092\u9078\u629e\n\u4e0a\u90e8\u306e Build Phases \u30bf\u30d6\u3092\u9078\u629e\n\u5de6\u4e0a\u306e + \u30dc\u30bf\u30f3\u3092\u9078\u629e\n\nNew Run Script Phase \u3092\u9078\u629e\nShell \u306e\u5185\u5bb9\u3092 /usr/local/bin/carthage copy-frameworks \u306b\u7f6e\u304d\u63db\u3048\uff08carthage \u306e\u30d1\u30b9\u304c\u7570\u306a\u308b\u5834\u5408\u306f\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\uff09\nInput \u306e\u5185\u5bb9\u3092 2 \u3067\u8ffd\u52a0\u3057\u305f framework \u4ee5\u4e0b\u306b\u5909\u66f4\n\n\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n2. \u5b9f\u88c5\n\n2.a. Entity\nAPI \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u307e\u305a\u8abf\u3079\u307e\u3059\u3002\ncurl https://api.github.com/users/pm11/repos | jq .\n\n[\n  .\n  .\n  .\n  {\n    \"id\": 48208108,\n    \"name\": \"APISample\",\n    \"full_name\": \"pm11/APISample\",\n    \"owner\": {\n      \"login\": \"pm11\",\n      \"id\": 1546425,\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1546425?v=3\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/pm11\",\n      \"html_url\": \"https://github.com/pm11\",\n      \"followers_url\": \"https://api.github.com/users/pm11/followers\",\n      \"following_url\": \"https://api.github.com/users/pm11/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/pm11/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/pm11/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/pm11/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/pm11/orgs\",\n      \"repos_url\": \"https://api.github.com/users/pm11/repos\",\n      \"events_url\": \"https://api.github.com/users/pm11/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/pm11/received_events\",\n      \"type\": \"User\",\n      \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/pm11/APISample\",\n    \"description\": \"\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/pm11/APISample\",\n    \"forks_url\": \"https://api.github.com/repos/pm11/APISample/forks\",\n    \"keys_url\": \"https://api.github.com/repos/pm11/APISample/keys{/key_id}\",\n    \"collaborators_url\": \"https://api.github.com/repos/pm11/APISample/collaborators{/collaborator}\",\n    \"teams_url\": \"https://api.github.com/repos/pm11/APISample/teams\",\n    \"hooks_url\": \"https://api.github.com/repos/pm11/APISample/hooks\",\n    \"issue_events_url\": \"https://api.github.com/repos/pm11/APISample/issues/events{/number}\",\n    \"events_url\": \"https://api.github.com/repos/pm11/APISample/events\",\n    \"assignees_url\": \"https://api.github.com/repos/pm11/APISample/assignees{/user}\",\n    \"branches_url\": \"https://api.github.com/repos/pm11/APISample/branches{/branch}\",\n    \"tags_url\": \"https://api.github.com/repos/pm11/APISample/tags\",\n    \"blobs_url\": \"https://api.github.com/repos/pm11/APISample/git/blobs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/pm11/APISample/git/tags{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/pm11/APISample/git/refs{/sha}\",\n    \"trees_url\": \"https://api.github.com/repos/pm11/APISample/git/trees{/sha}\",\n    \"statuses_url\": \"https://api.github.com/repos/pm11/APISample/statuses/{sha}\",\n    \"languages_url\": \"https://api.github.com/repos/pm11/APISample/languages\",\n    \"stargazers_url\": \"https://api.github.com/repos/pm11/APISample/stargazers\",\n    \"contributors_url\": \"https://api.github.com/repos/pm11/APISample/contributors\",\n    \"subscribers_url\": \"https://api.github.com/repos/pm11/APISample/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/pm11/APISample/subscription\",\n    \"commits_url\": \"https://api.github.com/repos/pm11/APISample/commits{/sha}\",\n    \"git_commits_url\": \"https://api.github.com/repos/pm11/APISample/git/commits{/sha}\",\n    \"comments_url\": \"https://api.github.com/repos/pm11/APISample/comments{/number}\",\n    \"issue_comment_url\": \"https://api.github.com/repos/pm11/APISample/issues/comments{/number}\",\n    \"contents_url\": \"https://api.github.com/repos/pm11/APISample/contents/{+path}\",\n    \"compare_url\": \"https://api.github.com/repos/pm11/APISample/compare/{base}...{head}\",\n    \"merges_url\": \"https://api.github.com/repos/pm11/APISample/merges\",\n    \"archive_url\": \"https://api.github.com/repos/pm11/APISample/{archive_format}{/ref}\",\n    \"downloads_url\": \"https://api.github.com/repos/pm11/APISample/downloads\",\n    \"issues_url\": \"https://api.github.com/repos/pm11/APISample/issues{/number}\",\n    \"pulls_url\": \"https://api.github.com/repos/pm11/APISample/pulls{/number}\",\n    \"milestones_url\": \"https://api.github.com/repos/pm11/APISample/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/pm11/APISample/notifications{?since,all,participating}\",\n    \"labels_url\": \"https://api.github.com/repos/pm11/APISample/labels{/name}\",\n    \"releases_url\": \"https://api.github.com/repos/pm11/APISample/releases{/id}\",\n    \"created_at\": \"2015-12-18T01:43:55Z\",\n    \"updated_at\": \"2015-12-21T02:45:19Z\",\n    \"pushed_at\": \"2015-12-18T01:43:55Z\",\n    \"git_url\": \"git://github.com/pm11/APISample.git\",\n    \"ssh_url\": \"git@github.com:pm11/APISample.git\",\n    \"clone_url\": \"https://github.com/pm11/APISample.git\",\n    \"svn_url\": \"https://github.com/pm11/APISample\",\n    \"homepage\": null,\n    \"size\": 0,\n    \"stargazers_count\": 0,\n    \"watchers_count\": 0,\n    \"language\": null,\n    \"has_issues\": true,\n    \"has_downloads\": true,\n    \"has_wiki\": true,\n    \"has_pages\": false,\n    \"forks_count\": 0,\n    \"mirror_url\": null,\n    \"open_issues_count\": 0,\n    \"forks\": 0,\n    \"open_issues\": 0,\n    \"watchers\": 0,\n    \"default_branch\": \"master\"\n  }\n  .\n  .\n  .\n]\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u60c5\u5831\u304c\u914d\u5217\u306b\u306a\u3063\u3066\u8fd4\u5374\u3055\u308c\u3066\u3044\u307e\u3059\u3002\uff081\u3064\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u7d50\u69cb\u306a\u60c5\u5831\u91cf\u304c\u3042\u308a\u307e\u3059\u306d\u3002\u3002)\n\u4eca\u56de\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u3053\u306e\u3046\u3061\u3001\n\nfull_name\n\nowner \u5185\u306e avater_url\n\nupdated_at\nurl\n\n\u3092\u6301\u3064 Entity GitHubRepository \u3092\u4f5c\u308a\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092 ObjectMapper \u3092\u7528\u3044\u3066\u5b9f\u88c5\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\nEntity \u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3068 JSON \u306e key \u306e\u7d10\u4ed8\u3051\u304c\u3068\u3066\u3082\u697d\u306b\u611f\u3058\u3089\u308c\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\uff08\u7279\u306b\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\uff09\nimport ObjectMapper\n\nclass GitHubRepository: Mappable {\n    var fullName: String?\n    var ownerAvaterUrl: String?\n    var updatedAt: String?\n    var url: String?\n\n    static func buildWithArray(repositories: [[String: AnyObject]]) -> [GitHubRepository] {\n        var arr: [GitHubRepository] = []\n        for repositoryDict in repositories {\n            if let repository = Mapper<GitHubRepository>().map(repositoryDict) {\n                arr.append(repository)\n            }\n        }\n        return arr\n    }\n\n    required init?(_ map: Map) {\n    }\n\n    func mapping(map: Map) {\n        fullName       <- map[\"full_name\"]\n        ownerAvaterUrl <- map[\"owner.avatar_url\"]\n        updatedAt      <- map[\"updated_at\"]\n        url            <- map[\"url\"]\n    }\n}\n\n\u306a\u304a\u3001API \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u914d\u5217\u3067\u8fd4\u308b\u306e\u3067\u3001\u914d\u5217\u306eJSON\u3092\u6e21\u3057\u305f\u6642\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3082\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n2.b. API\nAPI\u306e\u5b9a\u7fa9\u90e8\u5206\u53ca\u3073\u901a\u4fe1\u90e8\u5206\u306f APIKit \u4f7f\u3044\u307e\u3059\u3002\n\u8a18\u4e8b\u6295\u7a3f\u6bb5\u968e\u3067\u306f\u3001multipart/form-data \u306a\u3069\u4e00\u90e8\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u304c\u3042\u308b\uff08issue\u306f\u3042\u308b\u307f\u305f\u3044\u3067\u3059\uff09\u306e\u3067\u3001\u3082\u3057\u304b\u3059\u308b\u3068\u8981\u4ef6\u306b\u5408\u308f\u306a\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u305f\u3060\u3001\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u306f\u554f\u984c\u306a\u3044\u3053\u3068\u53ca\u3073\u3001\u578b\u5b89\u5168\u306b\u8a18\u8ff0\u3067\u304d\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u3068\u3066\u3082\u5927\u304d\u304f\u3001\u4f7f\u3063\u3066\u3044\u3066\u6c17\u6301\u3061\u304c\u826f\u3044\u306e\u3067\u3001\u63a1\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nAPIKit \u3092\u7528\u3044\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4e00\u3064\u306e type \u306e struct \u3067\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\nimport Foundation\nimport APIKit\n\nprotocol GitHubRequestType: RequestType {\n}\n\nextension GitHubRequestType {\n    var baseURL: NSURL {\n        return NSURL(string: \"https://api.github.com\")!\n    }\n}\n\nstruct FetchRepositoryRequest: GitHubRequestType {\n    typealias Response = [GitHubRepository]\n\n    var method: HTTPMethod {\n        return .GET\n    }\n\n    var userName: String\n    var path: String {\n        return String(format: \"/users/%@/repos\", self.userName)\n    }\n\n    init(userName: String) {\n        self.userName = userName\n    }\n\n    func responseFromObject(object: AnyObject, URLResponse: NSHTTPURLResponse) -> Response? {\n        guard let dictionary = object as? [[String: AnyObject]] else {\n            return nil\n        }\n\n        guard let repos: [GitHubRepository] = GitHubRepository.buildWithArray(dictionary) else {\n            return nil\n        }\n        return repos\n    }\n}\n\n\u4f7f\u3044\u65b9\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3001\nantitypical/Result \u306e\u578b\u3067\u6210\u5426\u304c\u5305\u307e\u308c\u3066\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u308b\u306e\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3057\u3066\u3042\u3052\u307e\u3059\u3002\nlet request = FetchRepositoryRequest(userName: \"pm11\")\nSession.sendRequest(request) { result in\n    switch result {\n    case .Success(let repos):\n        // something to do\n    case .Failure(let error):\n        // do error handling\n    }\n}\n\n\n2.c. RxSwift\uff08\u6e96\u5099\uff09\n\u5b9f\u884c\u30b9\u30ec\u30c3\u30c9\u306e\u5207\u308a\u66ff\u3048\u3084\u3001\u51e6\u7406\u306e\u6d41\u308c\u3092\u5ba3\u8a00\u7684\u306b\u66f8\u3051\u308b\u306e\u3067\u63a1\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nRxSwift \u81ea\u4f53\u306e\u8aac\u660e\u3092\u3059\u308b\u3068\u3055\u3089\u306b\u9577\u304f\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u5272\u611b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nAPIKit \u3068 RxSwift \u306e\u7e4b\u304e\u3053\u307f\n\u524d\u8ff0\u306e APIKit \u306e Session.sendRequest(request) \u306b\u306f Observable \u3092\u8fd4\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u5225\u3067\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nRxSwift\uff08RxCocoa\uff09\u3067\u306f NSURLSession \u306b rx_response \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\uff08\u8a72\u5f53\u90e8\u5206\uff09\n\u3053\u308c\u3092\u307e\u305a\u3001\u53c2\u8003\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\npublic func rx_response(request: NSURLRequest) -> Observable<(NSData, NSHTTPURLResponse)> {\n    return create { observer in\n\n        // smart compiler should be able to optimize this out\n        var d: NSDate?\n\n        if Logging.URLRequests(request) {\n            d = NSDate()\n        }\n\n        let task = self.dataTaskWithRequest(request) { (data, response, error) in\n\n            if Logging.URLRequests(request) {\n                let interval = NSDate().timeIntervalSinceDate(d ?? NSDate())\n                print(convertURLRequestToCurlCommand(request))\n                print(convertResponseToString(data, response, error, interval))\n            }\n\n            guard let response = response, data = data else {\n                observer.on(.Error(error ?? RxCocoaURLError.Unknown))\n                return\n            }\n\n            guard let httpResponse = response as? NSHTTPURLResponse else {\n                observer.on(.Error(RxCocoaURLError.NonHTTPResponse(response: response)))\n                return\n            }\n\n            observer.on(.Next(data, httpResponse))\n            observer.on(.Completed)\n        }\n\n        let t = task\n        t.resume()\n\n        return AnonymousDisposable {\n            task.cancel()\n        }\n    }\n}\n\n\u773a\u3081\u305f\u3068\u3053\u308d\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066\u3001\u7d50\u679c\u306b\u6cbf\u3063\u3066\u5206\u5c90\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3068\u3053\u308d\u3060\u3051\u4f5c\u3063\u3066\u3042\u3052\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\nAPIKit \u306e Session \u306b rx_response \u3092\u751f\u3084\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\uff08\u30ed\u30ae\u30f3\u30b0\u306f\u7121\u8996\u3057\u307e\u3059\uff09\nimport APIKit\nimport RxSwift\n\nextension Session {\n    public static func rx_response<T: RequestType>(request: T) -> Observable<T.Response> {\n        return create { observer in\n            let task = sendRequest(request) { result in\n                switch result {\n                case .Success(let response):\n                    observer.onNext(response)\n                    observer.onCompleted()\n                case .Failure(let error):\n                    observer.onError(error)\n                }\n            }\n            let t = task\n            t?.resume()\n\n            return AnonymousDisposable {\n                task?.cancel()\n            }\n        }\n    }\n}\n\n\u3053\u308c\u3067\u3001 Session.rx_response(request) \u3068\u3059\u308b\u3068\u3001Observable \u3092\u8fd4\u3059\u69d8\u306b\u3067\u304d\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001\u3053\u308c\u306f\u3001API\u51e6\u7406\u3067\u5171\u901a\u306b\u4f7f\u3048\u308b\u51e6\u7406\u306b\u306a\u308b\u306e\u3067\u3001\u4e00\u5ea6\u8a18\u8ff0\u3059\u308c\u3070\u826f\u3044\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\n2.d. RxSwift\uff08\u547c\u3073\u51fa\u3057\u90e8\u5206\uff09\n\u3055\u3066\u3001\u8a71\u3092\u623b\u3057\u3066\u3001\u4eca\u56de\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8981\u4ef6\u306f\n\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b -> API\u30ea\u30af\u30a8\u30b9\u30c8 -> \u7d50\u679c\u3092\u8868\u793a \n\u3067\u3057\u305f\u3002\n\u3053\u306e\u3046\u3061\u3001\u6700\u521d\u3068\u6700\u5f8c\u306f UI \u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u304c\u7d61\u3080\u90e8\u5206\u306a\u306e\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3057\u3001API\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u307f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u5b9f\u884c\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u306a\u306e\u3067\u3001ViewController \u306b\u307e\u3068\u3081\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\nimport UIKit\nimport APIKit\nimport RxSwift\nimport RxCocoa\n\nclass ViewController: UIViewController {\n    @IBOutlet weak var button: UIButton!\n    @IBOutlet weak var resultLabel: UILabel!\n    let disposeBag = DisposeBag()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        let mainScheduler: SerialDispatchQueueScheduler = MainScheduler.sharedInstance\n        let backgroundScheduler: OperationQueueScheduler = OperationQueueScheduler(operationQueue: NSOperationQueue())\n        let request = FetchRepositoryRequest(userName: \"pm11\")\n        button.rx_tap\n            .subscribeOn(backgroundScheduler)\n            .flatMap {\n                return Session.rx_response(request)\n            }\n            .observeOn(mainScheduler)\n            .subscribeNext { [unowned self] response in\n                let r = response[0]\n                self.resultLabel.text = \"name: \\(r.fullName!)\\nurl: \\(r.url!)\\nicon: \\(r.ownerAvaterUrl!)\\nupdated_at: \\(r.updatedAt!)\"\n            }\n            .addDisposableTo(disposeBag)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n}\n\n\u30bd\u30fc\u30b9\u4e0a\u3067\u3082\u308f\u304b\u308a\u3084\u3059\u304f\u3001\n\nbutton \u306e\u30bf\u30c3\u30d7\n\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u306b\u5207\u308a\u66ff\u3048\nAPI\u30ea\u30af\u30a8\u30b9\u30c8\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306b\u623b\u3059\nlabel \u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n\n\u3068\u3044\u3046\u6d41\u308c\u304c\u5b9f\u73fe\u3067\u304d\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u7c21\u5358\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001RxSwift, ObjectMapper, APIKit \u3092\u7528\u3044\u305f API \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5b9f\u88c5\u306e\u6d41\u308c\u3092\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\nSwift \u3092\u66f8\u3044\u305f\u306e\u306f\u4e45\u3057\u3076\u308a\u306a\u306e\u3067\u3001\u624b\u843d\u3061\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4f55\u304b\u3042\u308a\u307e\u3057\u305f\u3089\u30c4\u30c3\u30b3\u30df\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001RxSwift \u81ea\u4f53\u306e\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306f\u691c\u7d22\u3057\u3066\u3082\u3042\u307e\u308a\u591a\u304f\u306a\u3044\u5370\u8c61\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\n\u4eca\u56de\u30ab\u30d0\u30fc\u3067\u304d\u306a\u304b\u3063\u305f\u90e8\u5206\u306f\u6c17\u304c\u5411\u3051\u3070\u5225\u306e\u6a5f\u4f1a\u306b\u66f8\u3044\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4f5c\u3063\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\npm11/APISample \u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u53c2\u8003\n\nRxSwift x APIKit\n\n## \u306f\u3058\u3081\u306b\nSwift \u3067\u4f7f\u3044\u3084\u3059\u3044 API \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u300e\u4f7f\u3044\u3084\u3059\u3044\u300f\u306e\u5b9a\u7fa9\u306f\u305d\u308c\u305e\u308c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\n* \u53ef\u8aad\u6027\u304c\u9ad8\u3044\n* \u30e1\u30f3\u30c6\u30ca\u30d6\u30eb\u306a\u3082\u306e\n\n\u306a\u3082\u306e\u3092\u76ee\u6307\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n\n## \u4f5c\u308b\u3082\u306e\n\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001GitHub \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u516c\u958b API\uff08`https://api.github.com/users/GITHUB_USERNAME/repos`\uff09 \u3078\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\n\n\n## \u74b0\u5883\n* Xcode 7.2\uff08Swift 2.1.1\uff09\n* Carthage 0.11.0\n\n\n\n## \u4f7f\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\n\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n* \u30ec\u30b9\u30dd\u30f3\u30b9\u3068 Entity \u306e\u30de\u30c3\u30d4\u30f3\u30b0 ->  [Hearst-DD/ObjectMapper](https://github.com/Hearst-DD/ObjectMapper)\n* API \u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u90e8\u5206\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0 -> \u578b\u5b89\u5168\u3092\u671f\u5f85\u3057\u3066\u3001 [ishkawa/APIKit](https://github.com/ishkawa/APIKit)\n* API \u547c\u3073\u51fa\u3057\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0 -> [ReactiveX/RxSwift](https://github.com/ReactiveX/RxSwift)\n\t* \uff08API \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3068\u3044\u3046\u3068\u3001\u53b3\u5bc6\u306b\u306f\u305d\u306e\u5916\u5074\u306b\u306f\u306a\u308b\u306e\u3067\u3059\u304c\uff09\n\n\n\n## 1. \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n#### 1.a. Carthage \u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCLI \u3067\u306e\u4f5c\u696d\u306b\u306a\u308a\u307e\u3059\u3002\nCartfile \u3092\u4f5c\u308a\u3001Carthage \u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\uff08Carthage \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001`brew install carthage` \u7b49\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\nCartfile \u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```\ngithub \"ishkawa/APIKit\" ~> 1.1.2\ngithub \"ReactiveX/RxSwift\" \"2.0.0-beta.4\"\ngithub \"Hearst-DD/ObjectMapper\" ~> 1.0\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u4ee5\u4e0b\u30b3\u30de\u30f3\u30c9\u3067\u884c\u3044\u307e\u3059\u3002\n\n```\ncarthage update --platform iOS\n```\n\n#### 1.b. Linked Frameworks and Libraries \u306b framework \u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\nXcode \u4e0a\u3067\u306e\u4f5c\u696d\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n2. \u5de6\u306b\u3042\u308b `TARGETS` \u3067 `APISample` \u3092\u9078\u629e\n3. \u4e0a\u90e8\u306e `General` \u30bf\u30d6\u3092\u9078\u629e\n4. `Linked Frameworks and Libraries` \u306e `+` \u30dc\u30bf\u30f3\u3092\u9078\u629e\n5. `Add Other...` \u30dc\u30bf\u30f3\u3092\u9078\u629e\n6. `{RepoRoot}/Carthage/Build/iOS/` \u4ee5\u4e0b\u306e `.framework` \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\n\n\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n![ss0.png](https://qiita-image-store.s3.amazonaws.com/0/19737/31d7644f-7fdd-b7ae-fe79-c83cfde02504.png \"ss0.png\")\n\n#### 1.c. Build\u0010 Phases \u306b framework \u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\n\u5f15\u304d\u7d9a\u304d Xcode \u4e0a\u3067\u306e\u4f5c\u696d\u3067\u3059\u3002\n\n1. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n2. \u5de6\u306b\u3042\u308b `TARGETS` \u3067 `APISample` \u3092\u9078\u629e\n3. \u4e0a\u90e8\u306e `Build Phases` \u30bf\u30d6\u3092\u9078\u629e\n4. \u5de6\u4e0a\u306e `+` \u30dc\u30bf\u30f3\u3092\u9078\u629e\n5. `New Run Script Phase` \u3092\u9078\u629e\n6. Shell \u306e\u5185\u5bb9\u3092 `/usr/local/bin/carthage copy-frameworks` \u306b\u7f6e\u304d\u63db\u3048\uff08`carthage` \u306e\u30d1\u30b9\u304c\u7570\u306a\u308b\u5834\u5408\u306f\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n7. Input \u306e\u5185\u5bb9\u3092 2 \u3067\u8ffd\u52a0\u3057\u305f framework \u4ee5\u4e0b\u306b\u5909\u66f4\n\n\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n![ss1.png](https://qiita-image-store.s3.amazonaws.com/0/19737/a911bc15-4481-de51-5c51-9a5c1fc343ca.png \"ss1.png\")\n\n\n\n## 2. \u5b9f\u88c5\n### 2.a. Entity\nAPI \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u307e\u305a\u8abf\u3079\u307e\u3059\u3002\n\n```\ncurl https://api.github.com/users/pm11/repos | jq .\n```\n\n```json\n[\n  .\n  .\n  .\n  {\n    \"id\": 48208108,\n    \"name\": \"APISample\",\n    \"full_name\": \"pm11/APISample\",\n    \"owner\": {\n      \"login\": \"pm11\",\n      \"id\": 1546425,\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1546425?v=3\",\n      \"gravatar_id\": \"\",\n      \"url\": \"https://api.github.com/users/pm11\",\n      \"html_url\": \"https://github.com/pm11\",\n      \"followers_url\": \"https://api.github.com/users/pm11/followers\",\n      \"following_url\": \"https://api.github.com/users/pm11/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/pm11/gists{/gist_id}\",\n      \"starred_url\": \"https://api.github.com/users/pm11/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/pm11/subscriptions\",\n      \"organizations_url\": \"https://api.github.com/users/pm11/orgs\",\n      \"repos_url\": \"https://api.github.com/users/pm11/repos\",\n      \"events_url\": \"https://api.github.com/users/pm11/events{/privacy}\",\n      \"received_events_url\": \"https://api.github.com/users/pm11/received_events\",\n      \"type\": \"User\",\n      \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/pm11/APISample\",\n    \"description\": \"\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/pm11/APISample\",\n    \"forks_url\": \"https://api.github.com/repos/pm11/APISample/forks\",\n    \"keys_url\": \"https://api.github.com/repos/pm11/APISample/keys{/key_id}\",\n    \"collaborators_url\": \"https://api.github.com/repos/pm11/APISample/collaborators{/collaborator}\",\n    \"teams_url\": \"https://api.github.com/repos/pm11/APISample/teams\",\n    \"hooks_url\": \"https://api.github.com/repos/pm11/APISample/hooks\",\n    \"issue_events_url\": \"https://api.github.com/repos/pm11/APISample/issues/events{/number}\",\n    \"events_url\": \"https://api.github.com/repos/pm11/APISample/events\",\n    \"assignees_url\": \"https://api.github.com/repos/pm11/APISample/assignees{/user}\",\n    \"branches_url\": \"https://api.github.com/repos/pm11/APISample/branches{/branch}\",\n    \"tags_url\": \"https://api.github.com/repos/pm11/APISample/tags\",\n    \"blobs_url\": \"https://api.github.com/repos/pm11/APISample/git/blobs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/pm11/APISample/git/tags{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/pm11/APISample/git/refs{/sha}\",\n    \"trees_url\": \"https://api.github.com/repos/pm11/APISample/git/trees{/sha}\",\n    \"statuses_url\": \"https://api.github.com/repos/pm11/APISample/statuses/{sha}\",\n    \"languages_url\": \"https://api.github.com/repos/pm11/APISample/languages\",\n    \"stargazers_url\": \"https://api.github.com/repos/pm11/APISample/stargazers\",\n    \"contributors_url\": \"https://api.github.com/repos/pm11/APISample/contributors\",\n    \"subscribers_url\": \"https://api.github.com/repos/pm11/APISample/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/pm11/APISample/subscription\",\n    \"commits_url\": \"https://api.github.com/repos/pm11/APISample/commits{/sha}\",\n    \"git_commits_url\": \"https://api.github.com/repos/pm11/APISample/git/commits{/sha}\",\n    \"comments_url\": \"https://api.github.com/repos/pm11/APISample/comments{/number}\",\n    \"issue_comment_url\": \"https://api.github.com/repos/pm11/APISample/issues/comments{/number}\",\n    \"contents_url\": \"https://api.github.com/repos/pm11/APISample/contents/{+path}\",\n    \"compare_url\": \"https://api.github.com/repos/pm11/APISample/compare/{base}...{head}\",\n    \"merges_url\": \"https://api.github.com/repos/pm11/APISample/merges\",\n    \"archive_url\": \"https://api.github.com/repos/pm11/APISample/{archive_format}{/ref}\",\n    \"downloads_url\": \"https://api.github.com/repos/pm11/APISample/downloads\",\n    \"issues_url\": \"https://api.github.com/repos/pm11/APISample/issues{/number}\",\n    \"pulls_url\": \"https://api.github.com/repos/pm11/APISample/pulls{/number}\",\n    \"milestones_url\": \"https://api.github.com/repos/pm11/APISample/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/pm11/APISample/notifications{?since,all,participating}\",\n    \"labels_url\": \"https://api.github.com/repos/pm11/APISample/labels{/name}\",\n    \"releases_url\": \"https://api.github.com/repos/pm11/APISample/releases{/id}\",\n    \"created_at\": \"2015-12-18T01:43:55Z\",\n    \"updated_at\": \"2015-12-21T02:45:19Z\",\n    \"pushed_at\": \"2015-12-18T01:43:55Z\",\n    \"git_url\": \"git://github.com/pm11/APISample.git\",\n    \"ssh_url\": \"git@github.com:pm11/APISample.git\",\n    \"clone_url\": \"https://github.com/pm11/APISample.git\",\n    \"svn_url\": \"https://github.com/pm11/APISample\",\n    \"homepage\": null,\n    \"size\": 0,\n    \"stargazers_count\": 0,\n    \"watchers_count\": 0,\n    \"language\": null,\n    \"has_issues\": true,\n    \"has_downloads\": true,\n    \"has_wiki\": true,\n    \"has_pages\": false,\n    \"forks_count\": 0,\n    \"mirror_url\": null,\n    \"open_issues_count\": 0,\n    \"forks\": 0,\n    \"open_issues\": 0,\n    \"watchers\": 0,\n    \"default_branch\": \"master\"\n  }\n  .\n  .\n  .\n]\n```\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u60c5\u5831\u304c\u914d\u5217\u306b\u306a\u3063\u3066\u8fd4\u5374\u3055\u308c\u3066\u3044\u307e\u3059\u3002\uff081\u3064\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u7d50\u69cb\u306a\u60c5\u5831\u91cf\u304c\u3042\u308a\u307e\u3059\u306d\u3002\u3002)\n\u4eca\u56de\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u3053\u306e\u3046\u3061\u3001\n\n* `full_name`\n* `owner` \u5185\u306e `avater_url`\n* `updated_at`\n* `url`\n\n\u3092\u6301\u3064 Entity `GitHubRepository` \u3092\u4f5c\u308a\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092 ObjectMapper \u3092\u7528\u3044\u3066\u5b9f\u88c5\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\nEntity \u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3068 JSON \u306e key \u306e\u7d10\u4ed8\u3051\u304c\u3068\u3066\u3082\u697d\u306b\u611f\u3058\u3089\u308c\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\uff08\u7279\u306b\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\uff09\n\n```swift\nimport ObjectMapper\n\nclass GitHubRepository: Mappable {\n    var fullName: String?\n    var ownerAvaterUrl: String?\n    var updatedAt: String?\n    var url: String?\n\n    static func buildWithArray(repositories: [[String: AnyObject]]) -> [GitHubRepository] {\n        var arr: [GitHubRepository] = []\n        for repositoryDict in repositories {\n            if let repository = Mapper<GitHubRepository>().map(repositoryDict) {\n                arr.append(repository)\n            }\n        }\n        return arr\n    }\n    \n    required init?(_ map: Map) {\n    }\n    \n    func mapping(map: Map) {\n        fullName       <- map[\"full_name\"]\n        ownerAvaterUrl <- map[\"owner.avatar_url\"]\n        updatedAt      <- map[\"updated_at\"]\n        url            <- map[\"url\"]\n    }\n}\n```\n\n\u306a\u304a\u3001API \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u914d\u5217\u3067\u8fd4\u308b\u306e\u3067\u3001\u914d\u5217\u306eJSON\u3092\u6e21\u3057\u305f\u6642\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3082\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n### 2.b. API\nAPI\u306e\u5b9a\u7fa9\u90e8\u5206\u53ca\u3073\u901a\u4fe1\u90e8\u5206\u306f APIKit \u4f7f\u3044\u307e\u3059\u3002\n\u8a18\u4e8b\u6295\u7a3f\u6bb5\u968e\u3067\u306f\u3001`multipart/form-data` \u306a\u3069\u4e00\u90e8\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u304c\u3042\u308b\uff08issue\u306f\u3042\u308b\u307f\u305f\u3044\u3067\u3059\uff09\u306e\u3067\u3001\u3082\u3057\u304b\u3059\u308b\u3068\u8981\u4ef6\u306b\u5408\u308f\u306a\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u305f\u3060\u3001\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u306f\u554f\u984c\u306a\u3044\u3053\u3068\u53ca\u3073\u3001\u578b\u5b89\u5168\u306b\u8a18\u8ff0\u3067\u304d\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u3068\u3066\u3082\u5927\u304d\u304f\u3001\u4f7f\u3063\u3066\u3044\u3066\u6c17\u6301\u3061\u304c\u826f\u3044\u306e\u3067\u3001\u63a1\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nAPIKit \u3092\u7528\u3044\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4e00\u3064\u306e type \u306e struct \u3067\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\n```swift\nimport Foundation\nimport APIKit\n\nprotocol GitHubRequestType: RequestType {\n}\n\nextension GitHubRequestType {\n    var baseURL: NSURL {\n        return NSURL(string: \"https://api.github.com\")!\n    }\n}\n\nstruct FetchRepositoryRequest: GitHubRequestType {\n    typealias Response = [GitHubRepository]\n    \n    var method: HTTPMethod {\n        return .GET\n    }\n    \n    var userName: String\n    var path: String {\n        return String(format: \"/users/%@/repos\", self.userName)\n    }\n    \n    init(userName: String) {\n        self.userName = userName\n    }\n    \n    func responseFromObject(object: AnyObject, URLResponse: NSHTTPURLResponse) -> Response? {\n        guard let dictionary = object as? [[String: AnyObject]] else {\n            return nil\n        }\n        \n        guard let repos: [GitHubRepository] = GitHubRepository.buildWithArray(dictionary) else {\n            return nil\n        }\n        return repos\n    }\n}\n```\n\n\u4f7f\u3044\u65b9\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3001\n[antitypical/Result](https://github.com/antitypical/Result) \u306e\u578b\u3067\u6210\u5426\u304c\u5305\u307e\u308c\u3066\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u308b\u306e\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\n```swift\nlet request = FetchRepositoryRequest(userName: \"pm11\")\nSession.sendRequest(request) { result in\n    switch result {\n    case .Success(let repos):\n        // something to do\n    case .Failure(let error):\n        // do error handling\n    }\n}\n```\n\n\n\n### 2.c. RxSwift\uff08\u6e96\u5099\uff09\n\u5b9f\u884c\u30b9\u30ec\u30c3\u30c9\u306e\u5207\u308a\u66ff\u3048\u3084\u3001\u51e6\u7406\u306e\u6d41\u308c\u3092\u5ba3\u8a00\u7684\u306b\u66f8\u3051\u308b\u306e\u3067\u63a1\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nRxSwift \u81ea\u4f53\u306e\u8aac\u660e\u3092\u3059\u308b\u3068\u3055\u3089\u306b\u9577\u304f\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u5272\u611b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n#### APIKit \u3068 RxSwift \u306e\u7e4b\u304e\u3053\u307f\n\u524d\u8ff0\u306e APIKit \u306e `Session.sendRequest(request)` \u306b\u306f `Observable` \u3092\u8fd4\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u5225\u3067\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nRxSwift\uff08RxCocoa\uff09\u3067\u306f `NSURLSession` \u306b `rx_response` \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\uff08[\u8a72\u5f53\u90e8\u5206](https://github.com/ReactiveX/RxSwift/blob/master/RxCocoa/Common/Observables/NSURLSession%2BRx.swift#L119-L160)\uff09\n\u3053\u308c\u3092\u307e\u305a\u3001\u53c2\u8003\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```swift\npublic func rx_response(request: NSURLRequest) -> Observable<(NSData, NSHTTPURLResponse)> {\n    return create { observer in\n\n        // smart compiler should be able to optimize this out\n        var d: NSDate?\n\n        if Logging.URLRequests(request) {\n            d = NSDate()\n        }\n\n        let task = self.dataTaskWithRequest(request) { (data, response, error) in\n\n            if Logging.URLRequests(request) {\n                let interval = NSDate().timeIntervalSinceDate(d ?? NSDate())\n                print(convertURLRequestToCurlCommand(request))\n                print(convertResponseToString(data, response, error, interval))\n            }\n            \n            guard let response = response, data = data else {\n                observer.on(.Error(error ?? RxCocoaURLError.Unknown))\n                return\n            }\n\n            guard let httpResponse = response as? NSHTTPURLResponse else {\n                observer.on(.Error(RxCocoaURLError.NonHTTPResponse(response: response)))\n                return\n            }\n\n            observer.on(.Next(data, httpResponse))\n            observer.on(.Completed)\n        }\n\n        let t = task\n        t.resume()\n\n        return AnonymousDisposable {\n            task.cancel()\n        }\n    }\n}\n```\n\n\u773a\u3081\u305f\u3068\u3053\u308d\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066\u3001\u7d50\u679c\u306b\u6cbf\u3063\u3066\u5206\u5c90\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3068\u3053\u308d\u3060\u3051\u4f5c\u3063\u3066\u3042\u3052\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\nAPIKit \u306e `Session` \u306b `rx_response` \u3092\u751f\u3084\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\uff08\u30ed\u30ae\u30f3\u30b0\u306f\u7121\u8996\u3057\u307e\u3059\uff09\n\n```swift\nimport APIKit\nimport RxSwift\n\nextension Session {\n    public static func rx_response<T: RequestType>(request: T) -> Observable<T.Response> {\n        return create { observer in\n            let task = sendRequest(request) { result in\n                switch result {\n                case .Success(let response):\n                    observer.onNext(response)\n                    observer.onCompleted()\n                case .Failure(let error):\n                    observer.onError(error)\n                }\n            }\n            let t = task\n            t?.resume()\n            \n            return AnonymousDisposable {\n                task?.cancel()\n            }\n        }\n    }\n}\n```\n\n\u3053\u308c\u3067\u3001 `Session.rx_response(request)` \u3068\u3059\u308b\u3068\u3001`Observable` \u3092\u8fd4\u3059\u69d8\u306b\u3067\u304d\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001\u3053\u308c\u306f\u3001API\u51e6\u7406\u3067\u5171\u901a\u306b\u4f7f\u3048\u308b\u51e6\u7406\u306b\u306a\u308b\u306e\u3067\u3001\u4e00\u5ea6\u8a18\u8ff0\u3059\u308c\u3070\u826f\u3044\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\n### 2.d. RxSwift\uff08\u547c\u3073\u51fa\u3057\u90e8\u5206\uff09\n\u3055\u3066\u3001\u8a71\u3092\u623b\u3057\u3066\u3001\u4eca\u56de\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8981\u4ef6\u306f\n\n`\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b` -> `API\u30ea\u30af\u30a8\u30b9\u30c8` -> `\u7d50\u679c\u3092\u8868\u793a` \n\n\u3067\u3057\u305f\u3002\n\u3053\u306e\u3046\u3061\u3001\u6700\u521d\u3068\u6700\u5f8c\u306f UI \u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u304c\u7d61\u3080\u90e8\u5206\u306a\u306e\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3057\u3001API\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u307f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u5b9f\u884c\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u306a\u306e\u3067\u3001ViewController \u306b\u307e\u3068\u3081\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\nimport UIKit\nimport APIKit\nimport RxSwift\nimport RxCocoa\n\nclass ViewController: UIViewController {\n    @IBOutlet weak var button: UIButton!\n    @IBOutlet weak var resultLabel: UILabel!\n    let disposeBag = DisposeBag()\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let mainScheduler: SerialDispatchQueueScheduler = MainScheduler.sharedInstance\n        let backgroundScheduler: OperationQueueScheduler = OperationQueueScheduler(operationQueue: NSOperationQueue())\n        let request = FetchRepositoryRequest(userName: \"pm11\")\n        button.rx_tap\n            .subscribeOn(backgroundScheduler)\n            .flatMap {\n                return Session.rx_response(request)\n            }\n            .observeOn(mainScheduler)\n            .subscribeNext { [unowned self] response in\n                let r = response[0]\n                self.resultLabel.text = \"name: \\(r.fullName!)\\nurl: \\(r.url!)\\nicon: \\(r.ownerAvaterUrl!)\\nupdated_at: \\(r.updatedAt!)\"\n            }\n            .addDisposableTo(disposeBag)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n}\n```\n\n\u30bd\u30fc\u30b9\u4e0a\u3067\u3082\u308f\u304b\u308a\u3084\u3059\u304f\u3001\n\n* button \u306e\u30bf\u30c3\u30d7\n* \u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u306b\u5207\u308a\u66ff\u3048\n* API\u30ea\u30af\u30a8\u30b9\u30c8\n* \u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306b\u623b\u3059\n* label \u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n\n\u3068\u3044\u3046\u6d41\u308c\u304c\u5b9f\u73fe\u3067\u304d\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n\n## \u304a\u308f\u308a\u306b\n\u7c21\u5358\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001RxSwift, ObjectMapper, APIKit \u3092\u7528\u3044\u305f API \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5b9f\u88c5\u306e\u6d41\u308c\u3092\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\nSwift \u3092\u66f8\u3044\u305f\u306e\u306f\u4e45\u3057\u3076\u308a\u306a\u306e\u3067\u3001\u624b\u843d\u3061\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4f55\u304b\u3042\u308a\u307e\u3057\u305f\u3089\u30c4\u30c3\u30b3\u30df\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u307e\u305f\u3001RxSwift \u81ea\u4f53\u306e\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306f\u691c\u7d22\u3057\u3066\u3082\u3042\u307e\u308a\u591a\u304f\u306a\u3044\u5370\u8c61\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\n\u4eca\u56de\u30ab\u30d0\u30fc\u3067\u304d\u306a\u304b\u3063\u305f\u90e8\u5206\u306f\u6c17\u304c\u5411\u3051\u3070\u5225\u306e\u6a5f\u4f1a\u306b\u66f8\u3044\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n## \u4f5c\u3063\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n[pm11/APISample](https://github.com/pm11/APISample) \u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n\n## \u53c2\u8003\n* [RxSwift x APIKit](http://www.slideshare.net/kosukeusami/rxswift-x-apikit)\n"}