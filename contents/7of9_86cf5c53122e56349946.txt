{"tags": ["adamTaylor", "AXI4"], "context": "MicroZed Chronicles \u30ea\u30b9\u30c8 http://adiuvoengineering.com/?page_id=285\n@ Adam Taylor blog\nhttps://forums.xilinx.com/t5/Xcell-Daily-Blog/The-Zynq-PS-PL-Part-Four-Adam-Taylor-s-MicroZed-Chronicles-Part/ba-p/428548\n\nFor this example, I am going to introduce use the first register as a control register. Specific bits in this register define whether the contents of registers 2 and 3 are to be added, subtracted, or multiplied together. The result of the operation will be stored in the fourth register. We make the fourth register read-only with respect to the microprocessor to ensure that the microprocessor cannot corrupt the results. In addition, the peripheral will be able to generate an interrupt if enabled by the control register.\n\n\u4e0a\u8a18\u306e\u66f8\u3044\u3066\u3044\u308b\u3053\u3068\u3092\u5b9f\u969b\u306b\u3069\u3053\u3067\u5b9f\u884c\u3057\u3066\u3044\u308b\u304bVHDL\u304c\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u3082\u4eca\u306f\u5206\u304b\u3089\u306a\u3044\u3002\n\u307e\u305f\u3001blog\u306b\u66f8\u3044\u3066\u3044\u308bs00_axi_aclk\u306ePROCESS\u3068\u3044\u3046\u306e\u3082blog\u306e\u8a18\u8f09(\u753b\u50cf)\u3068\u3001\u305d\u3053\u306b\u63b2\u8f09\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u306e\u8a18\u8f09\uff08\u4e0b\u8a18\uff09\u3082\u4e56\u96e2\u3057\u3066\u3044\u308b\u3002\nPROCESS(s00_axi_aclk)\nBEGIN\n    IF rising_edge(s00_axi_aclk) THEN\n      squared <= signed( '0'& reg1(15 DOWNTO 0)) * signed('0'& reg1(15 DOWNTO 0)); \n      cx2 <= (squared * c);\n      bx <= (signed('0'& reg1(15 DOWNTO 0))* b);\n      res_int <= a + cx2(48 DOWNTO 32) + (\"000\"& bx(32 DOWNTO 19));\n      result(15 downto 0) <= std_logic_vector(res_int(res_int'high -1 DOWNTO 0));\n    END IF;\nEND PROCESS;\n\nblog\u306e\u753b\u50cf\u3067\u306fresult(31 downto 16)\u306b\u3082\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3001\u4e0a\u8a18\u3067\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308b\u306e\u306fresult(15 downto 0)\u306e\u307f\u3002\n\u3042\u3068\u3067\u30bd\u30fc\u30b9\u3060\u3051\u5909\u66f4\u3057\u305f\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\nMicroZed Chronicles \u30ea\u30b9\u30c8 http://adiuvoengineering.com/?page_id=285\n@ Adam Taylor blog\nhttps://forums.xilinx.com/t5/Xcell-Daily-Blog/The-Zynq-PS-PL-Part-Four-Adam-Taylor-s-MicroZed-Chronicles-Part/ba-p/428548\n\n> For this example, I am going to introduce use the first register as a control register. Specific bits in this register define whether the contents of registers 2 and 3 are to be added, subtracted, or multiplied together. The result of the operation will be stored in the fourth register. We make the fourth register read-only with respect to the microprocessor to ensure that the microprocessor cannot corrupt the results. In addition, the peripheral will be able to generate an interrupt if enabled by the control register.\n\n\u4e0a\u8a18\u306e\u66f8\u3044\u3066\u3044\u308b\u3053\u3068\u3092\u5b9f\u969b\u306b\u3069\u3053\u3067\u5b9f\u884c\u3057\u3066\u3044\u308b\u304bVHDL\u304c\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u3082\u4eca\u306f\u5206\u304b\u3089\u306a\u3044\u3002\n\n\u307e\u305f\u3001blog\u306b\u66f8\u3044\u3066\u3044\u308bs00_axi_aclk\u306ePROCESS\u3068\u3044\u3046\u306e\u3082blog\u306e\u8a18\u8f09(\u753b\u50cf)\u3068\u3001\u305d\u3053\u306b\u63b2\u8f09\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u306e\u8a18\u8f09\uff08\u4e0b\u8a18\uff09\u3082\u4e56\u96e2\u3057\u3066\u3044\u308b\u3002\n\n```vhdl\nPROCESS(s00_axi_aclk)\nBEGIN\n    IF rising_edge(s00_axi_aclk) THEN\n      squared <= signed( '0'& reg1(15 DOWNTO 0)) * signed('0'& reg1(15 DOWNTO 0)); \n      cx2 <= (squared * c);\n      bx <= (signed('0'& reg1(15 DOWNTO 0))* b);\n      res_int <= a + cx2(48 DOWNTO 32) + (\"000\"& bx(32 DOWNTO 19));\n      result(15 downto 0) <= std_logic_vector(res_int(res_int'high -1 DOWNTO 0));\n    END IF;\nEND PROCESS;\n```\n\nblog\u306e\u753b\u50cf\u3067\u306fresult(31 downto 16)\u306b\u3082\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3001\u4e0a\u8a18\u3067\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308b\u306e\u306fresult(15 downto 0)\u306e\u307f\u3002\n\u3042\u3068\u3067\u30bd\u30fc\u30b9\u3060\u3051\u5909\u66f4\u3057\u305f\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\n"}