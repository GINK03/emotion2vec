{"context": " More than 1 year has passed since last update.Production\u3067toyama0919/fluent-plugin-exec_cron\u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u3063\u3066\u52d5\u304b\u3057\u3066\u3044\u307e\u3059\u3002\nFluentd\u306eoutput plugin\u306b\u306fTimeslicedOutput\u3068BufferedOutput\u3068\u304c\u3042\u3063\u3066\u3001TimeslicedOutput\u3067\u300c\u3042\u308b\u7a0b\u5ea6\u306e\u6642\u523b\u6307\u5b9a\u300d\u306b\u3088\u308bflush\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u305f\u3060input plugin\u306b\u3064\u3044\u3066\u306finterval\u3092\u6307\u5b9a\u3057\u305fflush\u306f\u3067\u304d\u307e\u3059\u304c\u3001\u6642\u523b\u6307\u5b9a\u306f\u51fa\u6765\u307e\u305b\u3093\u3002\nInput\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u308b\u6642\u523b\u306f\u3001\u518d\u8d77\u52d5\u3057\u305f\u6642\u523b\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\n\u305d\u3053\u3067Cron\u306b\u3088\u308b\u6642\u523b\u6307\u5b9a\u304c\u53ef\u80fd\u306aInput plugin\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f3c\u305f\u3088\u3046\u306a\u8a71\u3060\u3068\u3001AWS\u306eLambda\u3082Cron\u306b\u3088\u308b\u6642\u523b\u6307\u5b9a\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002((\u30ec\u30dd\u30fc\u30c8) CMP407: Cron \u3068\u3057\u3066\u306e Lambda: AWS Lambda \u3067\u306e\u547c\u3073\u51fa\u3057\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb #reinvent \uff5c Developers.IO)\n\n\u4f7f\u3044\u65b9\n<source>\n  type exec_cron\n  tag exec_cron.example\n  command echo '{\"a\":\"a\"}'\n  format json\n  cron * * * * *\n  #cron */5 * * * * 5\u5206\u304a\u304d\n  #cron 0 * * * * 1\u6642\u9593\u304a\u304d\n</source>\n\n<match exec_cron.example>\n  type stdout\n</match>\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3053\u3093\u306a\u611f\u3058\n2015-05-27 13:07:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:08:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:09:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:10:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:11:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:12:00 +0900 exec_cron.example: {\"a\":\"a\"}\n\n\u6642\u523b\u304c\u30d4\u30c3\u30bf\u30ea\u5206\u523b\u307f\u3067\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u3001\u518d\u8d77\u52d5\u3057\u3066\u3082\u6642\u9593\u306f\u305a\u308c\u307e\u305b\u3093\u3002\n\n\u5b9f\u88c5\u7684\u306b\u306f\n\nin_exec\u3068\u51e6\u7406\u306f\u5927\u4f53\u540c\u3058\u3067\u3059\u3002\n\n\nin_exec\u306b\u306f\u73fe\u5728\u3001\u6b21\u306e\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067shutdown\u3092\u5f85\u3063\u3066\u3057\u307e\u3046\u554f\u984c\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\n\ninterval\u306b\u3088\u308b\u5f85\u3061\u6642\u9593\u3092cron syntax\u304b\u3089\u52d5\u7684\u306b\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u81ea\u5206\u3067\u4f5c\u308a\u305f\u3044\u5834\u5408\nsiebertm/parse-cron\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u51fa\u6765\u307e\u3059\u3002\n\nin_exec_cron.rb\n  def initialize\n    ...\n    require 'parse-cron'\n    ...\n  end\n\n  def configure(conf)\n    ...\n    @cron_parser = CronParser.new(@cron)\n    ...\n  end\n\n  def start\n    @finished = false\n    @thread = Thread.new(&method(:run_periodic))\n  end\n\n  def run_periodic\n    until @finished\n      begin\n        secs = @cron_parser.next(Time.now) - Time.now\n        sleep secs\n        # \u51e6\u7406\n      rescue\n        log.error \"exec failed to run or shutdown child process\", :error => $!.to_s, :error_class => $!.class.to_s\n        log.warn_backtrace $!.backtrace\n      end\n    end\n  end\n\n\n\n\u307e\u3068\u3081\n\n\u3042\u308b\u7a0b\u5ea6\u6642\u523b\u3092\u6c7a\u3081\u6253\u3061\u305f\u3044\u5834\u5408\u306b\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\nFluentd\u306eInput Plugin\u306b\u904e\u304e\u306a\u3044\u306e\u3067\u3001Fluentd\u304c\u52d5\u3044\u3066\u3044\u306a\u3051\u308c\u3070\u5f53\u7136\u51e6\u7406\u306f\u52d5\u304d\u307e\u305b\u3093^^\n\u307e\u305f\u3001buffer\u304c\u8a70\u307e\u3063\u3066Input\u306b\u623b\u3063\u3066\u3053\u308c\u306a\u3044\u5834\u5408\u3082\u540c\u69d8\u3067\u3059\u3002\n\n\n\u53c2\u8003\n\ntoyama0919/fluent-plugin-exec_cron\nsiebertm/parse-cron\n\u6642\u9593\u3092\u5b88\u308b\u65e5\u672c\u4eba\uff5c\u904e\u53bb\u8a18\u4e8b | \u3072\u3089\u304c\u306a\u30bf\u30a4\u30e0\u30ba\n\n\nProduction\u3067[toyama0919/fluent-plugin-exec_cron](https://github.com/toyama0919/fluent-plugin-exec_cron)\u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u3063\u3066\u52d5\u304b\u3057\u3066\u3044\u307e\u3059\u3002\n\nFluentd\u306eoutput plugin\u306b\u306fTimeslicedOutput\u3068BufferedOutput\u3068\u304c\u3042\u3063\u3066\u3001TimeslicedOutput\u3067\u300c\u3042\u308b\u7a0b\u5ea6\u306e\u6642\u523b\u6307\u5b9a\u300d\u306b\u3088\u308bflush\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u305f\u3060input plugin\u306b\u3064\u3044\u3066\u306finterval\u3092\u6307\u5b9a\u3057\u305fflush\u306f\u3067\u304d\u307e\u3059\u304c\u3001\u6642\u523b\u6307\u5b9a\u306f\u51fa\u6765\u307e\u305b\u3093\u3002\nInput\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u308b\u6642\u523b\u306f\u3001\u518d\u8d77\u52d5\u3057\u305f\u6642\u523b\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\n\n\u305d\u3053\u3067Cron\u306b\u3088\u308b\u6642\u523b\u6307\u5b9a\u304c\u53ef\u80fd\u306aInput plugin\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4f3c\u305f\u3088\u3046\u306a\u8a71\u3060\u3068\u3001AWS\u306eLambda\u3082Cron\u306b\u3088\u308b\u6642\u523b\u6307\u5b9a\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002([(\u30ec\u30dd\u30fc\u30c8) CMP407: Cron \u3068\u3057\u3066\u306e Lambda: AWS Lambda \u3067\u306e\u547c\u3073\u51fa\u3057\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb #reinvent \uff5c Developers.IO](http://dev.classmethod.jp/cloud/aws/reinvent-cmp407/))\n\n## \u4f7f\u3044\u65b9\n\n```\n<source>\n  type exec_cron\n  tag exec_cron.example\n  command echo '{\"a\":\"a\"}'\n  format json\n  cron * * * * *\n  #cron */5 * * * * 5\u5206\u304a\u304d\n  #cron 0 * * * * 1\u6642\u9593\u304a\u304d\n</source>\n\n<match exec_cron.example>\n  type stdout\n</match>\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3053\u3093\u306a\u611f\u3058\n\n```\n2015-05-27 13:07:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:08:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:09:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:10:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:11:00 +0900 exec_cron.example: {\"a\":\"a\"}\n2015-05-27 13:12:00 +0900 exec_cron.example: {\"a\":\"a\"}\n```\n\n\u6642\u523b\u304c\u30d4\u30c3\u30bf\u30ea\u5206\u523b\u307f\u3067\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3082\u3061\u308d\u3093\u3001\u518d\u8d77\u52d5\u3057\u3066\u3082\u6642\u9593\u306f\u305a\u308c\u307e\u305b\u3093\u3002\n\n## \u5b9f\u88c5\u7684\u306b\u306f\n* in_exec\u3068\u51e6\u7406\u306f\u5927\u4f53\u540c\u3058\u3067\u3059\u3002\n  * in_exec\u306b\u306f\u73fe\u5728\u3001\u6b21\u306e\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067shutdown\u3092\u5f85\u3063\u3066\u3057\u307e\u3046[\u554f\u984c](https://github.com/fluent/fluentd/pull/526)\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n* interval\u306b\u3088\u308b\u5f85\u3061\u6642\u9593\u3092cron syntax\u304b\u3089\u52d5\u7684\u306b\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u81ea\u5206\u3067\u4f5c\u308a\u305f\u3044\u5834\u5408\n[siebertm/parse-cron](https://github.com/siebertm/parse-cron)\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u51fa\u6765\u307e\u3059\u3002\n\n```ruby:in_exec_cron.rb\n  def initialize\n    ...\n    require 'parse-cron'\n    ...\n  end\n\n  def configure(conf)\n    ...\n    @cron_parser = CronParser.new(@cron)\n    ...\n  end\n\n  def start\n    @finished = false\n    @thread = Thread.new(&method(:run_periodic))\n  end\n\n  def run_periodic\n    until @finished\n      begin\n        secs = @cron_parser.next(Time.now) - Time.now\n        sleep secs\n        # \u51e6\u7406\n      rescue\n        log.error \"exec failed to run or shutdown child process\", :error => $!.to_s, :error_class => $!.class.to_s\n        log.warn_backtrace $!.backtrace\n      end\n    end\n  end\n```\n\n## \u307e\u3068\u3081\n* \u3042\u308b\u7a0b\u5ea6\u6642\u523b\u3092\u6c7a\u3081\u6253\u3061\u305f\u3044\u5834\u5408\u306b\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\n* Fluentd\u306eInput Plugin\u306b\u904e\u304e\u306a\u3044\u306e\u3067\u3001Fluentd\u304c\u52d5\u3044\u3066\u3044\u306a\u3051\u308c\u3070\u5f53\u7136\u51e6\u7406\u306f\u52d5\u304d\u307e\u305b\u3093^^\n* \u307e\u305f\u3001buffer\u304c\u8a70\u307e\u3063\u3066[Input\u306b\u623b\u3063\u3066\u3053\u308c\u306a\u3044\u5834\u5408](https://gist.github.com/sonots/c54882f73e3e747f4b20#\u5927\u4e8b\u306a\u88dc\u8db3)\u3082\u540c\u69d8\u3067\u3059\u3002\n\n## \u53c2\u8003\n* [toyama0919/fluent-plugin-exec_cron](https://github.com/toyama0919/fluent-plugin-exec_cron)\n* [siebertm/parse-cron](https://github.com/siebertm/parse-cron)\n* [\u6642\u9593\u3092\u5b88\u308b\u65e5\u672c\u4eba\uff5c\u904e\u53bb\u8a18\u4e8b | \u3072\u3089\u304c\u306a\u30bf\u30a4\u30e0\u30ba](http://www.hiraganatimes.com/ja/past-articles/society/1876/)\n\n", "tags": ["fluentd"]}