{"context": " More than 1 year has passed since last update.\u554f\u984c\u306f\u3053\u3061\u3089\u3002\n'1' \u3068 '2' \u306e\u5411\u304d\u3092\u30d9\u30af\u30c8\u30eb\u3067\u8868\u3057\u305f\u3002\u7121\u99c4\u306b\u8907\u96d1\u304b\u3082\u30021\u6642\u9593\u3050\u3089\u3044\uff1f\n\ndoukaku12.fs\ntype Vector = X | InvX | Y | InvY | Z | InvZ\n\nlet roll = function\n  | 'N' -> function X->X | InvX->InvX | Y->InvZ | InvY->Z | Z->Y | InvZ->InvY\n  | 'S' -> function X->X | InvX->InvX | Y->Z | InvY->InvZ | Z->InvY | InvZ->Y\n  | 'E' -> function X->InvZ | InvX->Z | Y->Y | InvY->InvY | Z->X | InvZ->InvX\n  | 'W' -> function X->Z | InvX->InvZ | Y->Y | InvY->InvY | Z->InvX | InvZ->X\n  | _   -> failwith \"Invalid Input\"\n\nlet roll2 (p1,p2) d = (roll d p1,roll d p2)\n\nlet inline xor a b = (a && not b) || (not a && b)\n\nlet top = function\n  | (   Z,   _) -> '1'\n  | (InvZ,   _) -> '6'\n  | (_   ,   Z) -> '2'\n  | (_   ,InvZ) -> '5'\n  | (   x,   y) -> let p = (x=X || x=Y)\n                   let q = (y=Y || y=InvX)\n                   if (xor p q) then '4' else '3'\n\nlet solve (s:string) =\n  s.ToCharArray()\n  |> Array.scan roll2 (Z,Y)\n  |> Array.map top\n  |> fun x -> new string(x)\n\n(* for test *)\n\ntype TestResult = Success | Failure\n\nlet test target expected =\n  let actual = solve target\n  printfn \"%A\" (if expected = actual then Success else Failure)\n\n[<EntryPoint>]\nlet main args =\n  test \"NNESWWS\" \"15635624\"\n  test \"EEEE\" \"13641\"\n  test \"WWWW\" \"14631\"\n  test \"SSSS\" \"12651\"\n  test \"NNNN\" \"15621\"\n  test \"EENN\" \"13651\"\n  test \"WWNN\" \"14651\"\n  test \"SSNN\" \"12621\"\n  test \"NENNN\" \"153641\"\n  test \"NWNNN\" \"154631\"\n  test \"SWWWSNEEEN\" \"12453635421\"\n  test \"SENWSWSNSWE\" \"123123656545\"\n  test \"SSSWNNNE\" \"126546315\"\n  test \"SWNWSSSWWE\" \"12415423646\"\n  test \"ENNWWS\" \"1354135\"\n  test \"ESWNNW\" \"1321365\"\n  test \"NWSSE\" \"154135\"\n  test \"SWNWEWSEEN\" \"12415154135\"\n  test \"EWNWEEEEWN\" \"13154532426\"\n  test \"WNEWEWWWSNW\" \"145151562421\"\n  test \"NNEE\" \"15631\"\n  test \"EEEEWNWSW\" \"1364145642\"\n  test \"SENNWWES\" \"123142321\"\n  test \"SWWWSNSNESWW\" \"1245363635631\"\n  test \"WESSENSE\" \"141263231\"\n  test \"SWNSSESESSS\" \"124146231562\"\n  test \"ENS\" \"1353\"\n  test \"WNN\" \"1453\"\n  test \"SSEENEEEN\" \"1263124536\"\n  test \"NWSNNNW\" \"15414632\"\n  test \"ESSSSSWW\" \"132453215\"\n  test \"ESE\" \"1326\"\n  test \"SNWNWWNSSSS\" \"121456232453\"\n  test \"SWEESEN\" \"12423653\"\n  test \"NEEWNSSWWW\" \"15323631562\"\n  test \"WSEW\" \"14212\"\n  test \"SWSNNNSNWE\" \"12464131353\"\n  test \"ENWEWSEEW\" \"1351513545\"\n  test \"WSEWN\" \"142124\"\n  test \"EWNEESEWE\" \"1315321414\"\n  test \"NESEEN\" \"1531263\"\n  test \"WSW\" \"1426\"\n  test \"ENEWE\" \"135656\"\n  0\n\n\n[\u554f\u984c\u306f\u3053\u3061\u3089\u3002](http://qiita.com/Nabetani/items/f3cca410428f90333e28)\n\n'1' \u3068 '2' \u306e\u5411\u304d\u3092\u30d9\u30af\u30c8\u30eb\u3067\u8868\u3057\u305f\u3002\u7121\u99c4\u306b\u8907\u96d1\u304b\u3082\u30021\u6642\u9593\u3050\u3089\u3044\uff1f\n\n```fsharp:doukaku12.fs\ntype Vector = X | InvX | Y | InvY | Z | InvZ\n\nlet roll = function\n  | 'N' -> function X->X | InvX->InvX | Y->InvZ | InvY->Z | Z->Y | InvZ->InvY\n  | 'S' -> function X->X | InvX->InvX | Y->Z | InvY->InvZ | Z->InvY | InvZ->Y\n  | 'E' -> function X->InvZ | InvX->Z | Y->Y | InvY->InvY | Z->X | InvZ->InvX\n  | 'W' -> function X->Z | InvX->InvZ | Y->Y | InvY->InvY | Z->InvX | InvZ->X\n  | _   -> failwith \"Invalid Input\"\n\nlet roll2 (p1,p2) d = (roll d p1,roll d p2)\n\nlet inline xor a b = (a && not b) || (not a && b)\n\nlet top = function\n  | (   Z,   _) -> '1'\n  | (InvZ,   _) -> '6'\n  | (_   ,   Z) -> '2'\n  | (_   ,InvZ) -> '5'\n  | (   x,   y) -> let p = (x=X || x=Y)\n                   let q = (y=Y || y=InvX)\n                   if (xor p q) then '4' else '3'\n\nlet solve (s:string) =\n  s.ToCharArray()\n  |> Array.scan roll2 (Z,Y)\n  |> Array.map top\n  |> fun x -> new string(x)\n\n(* for test *)\n\ntype TestResult = Success | Failure\n\nlet test target expected =\n  let actual = solve target\n  printfn \"%A\" (if expected = actual then Success else Failure)\n\n[<EntryPoint>]\nlet main args =\n  test \"NNESWWS\" \"15635624\"\n  test \"EEEE\" \"13641\"\n  test \"WWWW\" \"14631\"\n  test \"SSSS\" \"12651\"\n  test \"NNNN\" \"15621\"\n  test \"EENN\" \"13651\"\n  test \"WWNN\" \"14651\"\n  test \"SSNN\" \"12621\"\n  test \"NENNN\" \"153641\"\n  test \"NWNNN\" \"154631\"\n  test \"SWWWSNEEEN\" \"12453635421\"\n  test \"SENWSWSNSWE\" \"123123656545\"\n  test \"SSSWNNNE\" \"126546315\"\n  test \"SWNWSSSWWE\" \"12415423646\"\n  test \"ENNWWS\" \"1354135\"\n  test \"ESWNNW\" \"1321365\"\n  test \"NWSSE\" \"154135\"\n  test \"SWNWEWSEEN\" \"12415154135\"\n  test \"EWNWEEEEWN\" \"13154532426\"\n  test \"WNEWEWWWSNW\" \"145151562421\"\n  test \"NNEE\" \"15631\"\n  test \"EEEEWNWSW\" \"1364145642\"\n  test \"SENNWWES\" \"123142321\"\n  test \"SWWWSNSNESWW\" \"1245363635631\"\n  test \"WESSENSE\" \"141263231\"\n  test \"SWNSSESESSS\" \"124146231562\"\n  test \"ENS\" \"1353\"\n  test \"WNN\" \"1453\"\n  test \"SSEENEEEN\" \"1263124536\"\n  test \"NWSNNNW\" \"15414632\"\n  test \"ESSSSSWW\" \"132453215\"\n  test \"ESE\" \"1326\"\n  test \"SNWNWWNSSSS\" \"121456232453\"\n  test \"SWEESEN\" \"12423653\"\n  test \"NEEWNSSWWW\" \"15323631562\"\n  test \"WSEW\" \"14212\"\n  test \"SWSNNNSNWE\" \"12464131353\"\n  test \"ENWEWSEEW\" \"1351513545\"\n  test \"WSEWN\" \"142124\"\n  test \"EWNEESEWE\" \"1315321414\"\n  test \"NESEEN\" \"1531263\"\n  test \"WSW\" \"1426\"\n  test \"ENEWE\" \"135656\"\n  0\n```", "tags": ["\u3069\u3046\u66f8\u304f", "yhpg", "F#"]}