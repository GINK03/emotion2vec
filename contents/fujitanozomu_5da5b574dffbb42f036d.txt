{"context": "\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u3092\u5897\u3084\u3059\u5b9f\u9a13(4)\u3067\u8ffd\u52a0\u3057\u305f\u95a2\u6570 inumsize() \u306b\u3064\u3044\u3066\u3001\u5f53\u521d\u306f\nunsigned char inumsize(unsigned char *lp) {\n  unsigned char i_num = *lp;\n\n  switch (i_num) {\n  case I_NUM_0 ... I_NUM_9:\n    return 1;\n  case I_NUM_B:\n    return 2;\n  case I_NUM_W:\n    return 3;\n  default:\n    return 0;\n  }\n}\n\n\u3068\u66f8\u3044\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3068\u30d3\u30eb\u30c9\u6642\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\n\u6700\u59272,048\u30d0\u30a4\u30c8\u306eRAM\u306e\u3046\u3061\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u304c749\u30d0\u30a4\u30c8\uff0836%\uff09\u3092\u4f7f\u3063\u3066\u3044\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u30671,299\u30d0\u30a4\u30c8\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3068\u306a\u308a\u307e\u3057\u305f\u3002inumsize() \u3092\u8ffd\u52a0\u3059\u308b\u4ee5\u524d\u3067\u306f\u4f7f\u7528\u53ef\u80fd\u306a\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306f 1311\u30d0\u30a4\u30c8\u3060\u3063\u305f\u306e\u3067\u300112\u30d0\u30a4\u30c8\u6e1b\u3063\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306e\u4ed6\u306f\u5927\u57df\u5909\u6570\u7b49\u306f\u5897\u3048\u3066\u304a\u3089\u305a\u3001RAM \u306e\u6d88\u8cbb\u306e\u539f\u56e0\u3092\u63a2\u308b\u305f\u3081\u306b\u30d3\u30eb\u30c9\u6642\u306b\u751f\u6210\u3055\u308c\u305f .elf \u30d5\u30a1\u30a4\u30eb\u3092\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\n00000908 <_Z8inumsizePh>:\n     908:   dc 01           movw    r26, r24\n     90a:   ec 91           ld  r30, X\n     90c:   e2 52           subi    r30, 0x22   ; 34\n     90e:   ec 30           cpi r30, 0x0C   ; 12\n     910:   28 f4           brcc    .+10        ; 0x91c <_Z8inumsizePh+0x14>\n     912:   f0 e0           ldi r31, 0x00   ; 0\n     914:   eb 5f           subi    r30, 0xFB   ; 251\n     916:   fe 4f           sbci    r31, 0xFE   ; 254\n     918:   80 81           ld  r24, Z\n     91a:   08 95           ret\n     91c:   80 e0           ldi r24, 0x00   ; 0\n     91e:   08 95           ret\n\n00800105 <CSWTCH.240>:\n  800105:   01 01           movw    r0, r2\n  800107:   01 01           movw    r0, r2\n  800109:   01 01           movw    r0, r2\n  80010b:   01 01           movw    r0, r2\n  80010d:   01 01           movw    r0, r2\n  80010f:   02 03           mulsu   r16, r18\n\n\n\u304c\u539f\u56e0\u3068\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u898b\u6613\u3044\u69d8\u3001\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\u3067\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u51fa\u529b\u3059\u308b\u30a2\u30bb\u30f3\u30d6\u30eb\u30ea\u30b9\u30c8\u3092\u793a\u3059\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n.global _Z8inumsizePh\n    .type   _Z8inumsizePh, @function\n_Z8inumsizePh:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n    movw r26,r24\n    ld r30,X\n    subi r30,lo8(-(-34))\n    cpi r30,lo8(12)\n    brsh .L128\n    ldi r31,0\n    subi r30,lo8(-(CSWTCH.240))\n    sbci r31,hi8(-(CSWTCH.240))\n    ld r24,Z\n    ret\n.L128:\n    ldi r24,0\n    ret\n    .size   _Z8inumsizePh, .-_Z8inumsizePh\n/* \u7565 */\n    .section    .rodata\n    .type   CSWTCH.240, @object\n    .size   CSWTCH.240, 12\nCSWTCH.240:\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   2\n    .byte   3\n\nswitch \uff5e case \u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\u304c\u6700\u9069\u5316\u306b\u3088\u308a\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u306b\u5909\u63db\u3055\u308c\u3066\u304a\u308a\u3001\u53c2\u7167\u3055\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u304c .rodata \u306b\u914d\u7f6e\u3055\u308c\u3066\u304a\u308a\u3001ArduinoIDE \u304c\u4f7f\u7528\u3057\u3066\u3044\u308b avr-gcc \u3067\u306f .rodata \u306f RAM \u306b\u914d\u7f6e\u3059\u308b\u305f\u3081\u3001\u30d3\u30eb\u30c9\u6642\u306e\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306e\u7a7a\u304d\u30a8\u30ea\u30a2\u304c\u6e1b\u308b\u76f4\u63a5\u306e\u539f\u56e0\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u3092\u51fa\u529b\u3059\u308b C \u30bd\u30fc\u30b9\u306e\u4f8b\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\nunsigned char inumsize(unsigned char *lp) {\n  unsigned char i_num = *lp - I_NUM_0;\n\n  if (i_num <= I_NUM_W - I_NUM_0) {\n      static const unsigned char t[] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3};\n      return t[i_num];\n  } else {\n      return 0;\n  }\n}\n\n\u3053\u308c\u3092\u30d3\u30eb\u30c9\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3068\u5148\u306e\u4f8b\u3068\u307b\u307c\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n.global _Z8inumsizePh\n    .type   _Z8inumsizePh, @function\n_Z8inumsizePh:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n    movw r26,r24\n    ld r30,X\n    subi r30,lo8(-(-34))\n    cpi r30,lo8(12)\n    brsh .L128\n    ldi r31,0\n    subi r30,lo8(-(_ZZ8inumsizePhE1t))\n    sbci r31,hi8(-(_ZZ8inumsizePhE1t))\n    ld r24,Z\n    ret\n.L128:\n    ldi r24,0\n    ret\n/* \u7565 */\n    .section    .rodata\n    .type   _ZZ8inumsizePhE1t, @object\n    .size   _ZZ8inumsizePhE1t, 12\n_ZZ8inumsizePhE1t:\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   2\n    .byte   3\n\n\u3082\u3057\u3001\u53c2\u7167\u3055\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u304c PROGMEM \u306b\u914d\u7f6e\u3055\u308c\u3001\nunsigned char inumsize(unsigned char *lp) {\n  unsigned char i_num = *lp - I_NUM_0;\n\n  if (i_num <= I_NUM_W - I_NUM_0) {\n      static const unsigned char PROGMEM t[] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3};\n      return pgm_read_byte_near(&t[i_num]);\n  } else {\n      return 0;\n  }\n}\n\n.global _Z8inumsizePh\n    .type   _Z8inumsizePh, @function\n_Z8inumsizePh:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n    movw r26,r24\n    ld r30,X\n    subi r30,lo8(-(-34))\n    cpi r30,lo8(12)\n    brsh .L128\n    ldi r31,0\n    subi r30,lo8(-(_ZZ8inumsizePhE1t))\n    sbci r31,hi8(-(_ZZ8inumsizePhE1t))\n/* #APP */\n ;  592 \"basic.cpp\" 1\n    lpm r24, Z\n\n ;  0 \"\" 2\n/* #NOAPP */\n    ret\n.L128:\n    ldi r24,0\n    ret\n    .size   _Z8inumsizePh, .-_Z8inumsizePh\n\n    .type   _ZZ8inumsizePhE1t, @object\n    .size   _ZZ8inumsizePhE1t, 12\n_ZZ8inumsizePhE1t:\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   1\n    .byte   2\n    .byte   3\n\n\u4ee5\u4e0a\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u308c\u3070 RAM \u306e\u6d88\u8cbb\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001ArduinoIDE 1.6.8 \u304c\u63a1\u7528\u3057\u3066\u3044\u308b avr-gcc 4.8.1 \u306f\nPROGMEM \u9818\u57df\u3092\u8aad\u307f\u51fa\u3059 lpm \u547d\u4ee4\u3088\u308a RAM \u3092\u8aad\u307f\u51fa\u3059 ld \u547d\u4ee4\u306e\u65b9\u304c\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u30b5\u30a4\u30af\u30eb\u6570\u304c 1 \u5c11\u306a\u3044\u3053\u3068\u3092\u512a\u5148\u3057\u3066\u304b switch \uff5e case \u3092\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u3068\u6700\u9069\u5316\u3059\u308b\u5834\u5408\u306b\u306f\u30c6\u30fc\u30d6\u30eb\u3092 RAM \u306b\u7f6e\u304f\u3088\u3046\u3067\u3059\u3002\n\u4ee5\u4e0a\u3092\u8e0f\u307e\u3048\u3066\u3001\u300e\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u3092\u5897\u3084\u3059\u5b9f\u9a13(4)\u300f\u3067\u306f\u3001switch \uff5e case \u3092\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u3068\u3055\u308c\u308b\u6700\u9069\u5316\u3092\u907f\u3051\u308b\u305f\u3081\u306b inumsize() \u3092\u4ee5\u4e0b\u306e\u5185\u5bb9\u3068\u3057\u307e\u3057\u305f\u3002\nunsigned char inumsize(unsigned char *lp) {\n  unsigned char i_num = *lp;\n\n  if (i_num >= I_NUM_0 && i_num <= I_NUM_9) {\n    return 1;\n  } else if (i_num == I_NUM_B) {\n    return 2;\n  } else if (i_num == I_NUM_W) {\n    return 3;\n  } else {\n    return 0;\n  }\n}\n\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3001RAM \u306e\u6d88\u8cbb\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n.global _Z8inumsizePh\n    .type   _Z8inumsizePh, @function\n_Z8inumsizePh:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n    movw r30,r24\n    ld r24,Z\n    ldi r25,lo8(-34)\n    add r25,r24\n    cpi r25,lo8(10)\n    brlo .L128\n    cpi r24,lo8(44)\n    breq .L129\n    cpi r24,lo8(45)\n    brne .L130\n    ldi r24,lo8(3)\n    ret\n.L128:\n    ldi r24,lo8(1)\n    ret\n.L129:\n    ldi r24,lo8(2)\n    ret\n.L130:\n    ldi r24,0\n    ret\n    .size   _Z8inumsizePh, .-_Z8inumsizePh\n\n\u4ee5\u4e0a\u306e\u30b3\u30fc\u30c9\u306f\u30d5\u30e9\u30c3\u30b7\u30e5\u30e1\u30e2\u30ea\u3092 36\u30d0\u30a4\u30c8\u4f7f\u7528\u3057\u3001\u5b9f\u884c\u306b\u306f\u5f15\u6570 lp \u306e\u6307\u3059\u5185\u5bb9\u304c I_NUM_0 \u304b\u3089 I_NUM_9 \u306e\u5834\u5408\u306f 13\u30af\u30ed\u30c3\u30af\u3001I_NUM_B \u3067 15\u30af\u30ed\u30c3\u30af\u3001I_NUM_W \u3067 16\u30af\u30ed\u30c3\u30af\u3001\u305d\u308c\u4ee5\u5916\u306717\u30af\u30ed\u30c3\u30af\u3092\u6d88\u8cbb\u3057\u307e\u3059\u3002\n\u6700\u521d\u306e\u4f8b\u3067\u306f\u30d5\u30e9\u30c3\u30b7\u30e5\u30e1\u30e2\u30ea\u3092 36\u30d0\u30a4\u30c8\u3001RAM \u3092 12\u30d0\u30a4\u30c8\u3001\u5b9f\u884c\u306b\u306f\u5f15\u6570 lp \u306e\u6307\u3059\u5185\u5bb9\u304c I_NUM_0 \u304b\u3089 I_NUM_W \u306e\u5834\u5408\u306f 15\u30af\u30ed\u30c3\u30af\u3001\u305d\u308c\u4ee5\u5916\u3067 12\u30af\u30ed\u30c3\u30af\u3092\u6d88\u8cbb\u3057\u307e\u3059\u3002\n\u30d5\u30e9\u30b7\u30e5\u30e1\u30e2\u30ea\u306e\u6d88\u8cbb\u91cf\u306f\u540c\u7b49\u3067\u3042\u308a\u3001\u5b9f\u884c\u30af\u30ed\u30c3\u30af\u6570\u306f\u3055\u307b\u3069\u5dee\u304c\u306a\u304f\u3001RAM \u306e\u6d88\u8cbb\u304c\u306a\u3044\u3053\u3068\u3067\u4ee5\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nArduino Uno \u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308b ATMEGA328P \u306f\u642d\u8f09\u3055\u308c\u3066\u3044\u308b RAM \u306e\u5bb9\u91cf\u304c 2kB\u3068\u5c11\u306a\u304f\u3001\u305d\u308c\u306e\u6d88\u8cbb\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u51fa\u529b\u30b3\u30fc\u30c9\u3092\u8a55\u4fa1\u3057\u3066\u30b3\u30fc\u30c9\u306e\u66f8\u304d\u65b9\u3092\u691c\u8a0e\u3059\u308b\u3053\u3068\u3082\u6642\u3068\u3057\u3066\u6709\u52b9\u306a\u624b\u6bb5\u3068\u306a\u308a\u307e\u3059\u3002\n\u5c1a\u3001\u4ee5\u4e0a\u306e\u5185\u5bb9\u3068\u306f\u9055\u3044\u307e\u3059\u304c\u3001switch \uff5e case \u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\u304c\u6700\u9069\u5316\u306b\u3088\u308a\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u306b\u5909\u63db\u3055\u308c\u306a\u3044\u5834\u5408\u3001\u30b8\u30e3\u30f3\u30d7\u30c6\u30fc\u30d6\u30eb\u304c PROGMEM \u4e0a\u306e\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4\u3068\u3057\u3066\u751f\u6210\u3055\u308c\u308b\u306e\u307f\u3067 RAM \u306e\u6d88\u8cbb\u306f\u306a\u3044\u3088\u3046\u3067\u3059\nunsigned char hoge(unsigned char x, unsigned char y)\n{\n    switch (x) {\n    case 0:\n        return x + y;\n    case 1:\n        return x - y;\n    case 2:\n        return x * y;\n    case 3:\n        return x / y;\n    case 4:\n        return x % y;\n    case 5:\n        return x & y;\n    case 6:\n        return x | y;\n    case 7:\n        return x ^ y;\n    default:\n        return 0;\n    }\n}\n\n    .file   \"hoge.c\"\n__SP_H__ = 0x3e\n__SP_L__ = 0x3d\n__SREG__ = 0x3f\n__tmp_reg__ = 0\n__zero_reg__ = 1\n    .text\n.global hoge\n    .type   hoge, @function\nhoge:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n    ldi r25,0\n    cpi r24,8\n    cpc r25,__zero_reg__\n    brsh .L2\n    mov r30,r24\n    mov r31,r25\n    subi r30,lo8(-(gs(.L4)))\n    sbci r31,hi8(-(gs(.L4)))\n    ijmp\n    .section    .progmem.gcc_sw_table,\"ax\",@progbits\n    .p2align    1\n.L4:\n    rjmp .L12\n    rjmp .L5\n    rjmp .L6\n    rjmp .L7\n    rjmp .L8\n    rjmp .L9\n    rjmp .L10\n    rjmp .L11\n    .text\n.L2:\n    ldi r24,0\n    ret\n.L5:\n    ldi r24,lo8(1)\n    sub r24,r22\n    ret\n.L6:\n    mov r24,r22\n    lsl r24\n    ret\n.L7:\n    ldi r24,lo8(3)\n    rcall __udivmodqi4\n    ret\n.L8:\n    ldi r24,lo8(4)\n    rcall __udivmodqi4\n    mov r24,r25\n    ret\n.L9:\n    mov r24,r22\n    andi r24,lo8(5)\n    ret\n.L10:\n    mov r24,r22\n    ori r24,lo8(6)\n    ret\n.L11:\n    ldi r24,lo8(7)\n    eor r24,r22\n    ret\n.L12:\n    mov r24,r22\n    ret\n    .size   hoge, .-hoge\n    .ident  \"GCC: (GNU) 4.8.1\"\n\n[\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u3092\u5897\u3084\u3059\u5b9f\u9a13(4)](http://qiita.com/fujitanozomu/items/05a6b8b3a34bdb4930c5)\u3067\u8ffd\u52a0\u3057\u305f\u95a2\u6570 inumsize() \u306b\u3064\u3044\u3066\u3001\u5f53\u521d\u306f\n\n```c:\nunsigned char inumsize(unsigned char *lp) {\n  unsigned char i_num = *lp;\n\n  switch (i_num) {\n  case I_NUM_0 ... I_NUM_9:\n    return 1;\n  case I_NUM_B:\n    return 2;\n  case I_NUM_W:\n    return 3;\n  default:\n    return 0;\n  }\n}\n```\n\u3068\u66f8\u3044\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3068\u30d3\u30eb\u30c9\u6642\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\n\n```text:\n\u6700\u59272,048\u30d0\u30a4\u30c8\u306eRAM\u306e\u3046\u3061\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u304c749\u30d0\u30a4\u30c8\uff0836%\uff09\u3092\u4f7f\u3063\u3066\u3044\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u30671,299\u30d0\u30a4\u30c8\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n```\n\u3068\u306a\u308a\u307e\u3057\u305f\u3002inumsize() \u3092\u8ffd\u52a0\u3059\u308b\u4ee5\u524d\u3067\u306f\u4f7f\u7528\u53ef\u80fd\u306a\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306f 1311\u30d0\u30a4\u30c8\u3060\u3063\u305f\u306e\u3067\u300112\u30d0\u30a4\u30c8\u6e1b\u3063\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306e\u4ed6\u306f\u5927\u57df\u5909\u6570\u7b49\u306f\u5897\u3048\u3066\u304a\u3089\u305a\u3001RAM \u306e\u6d88\u8cbb\u306e\u539f\u56e0\u3092\u63a2\u308b\u305f\u3081\u306b\u30d3\u30eb\u30c9\u6642\u306b\u751f\u6210\u3055\u308c\u305f .elf \u30d5\u30a1\u30a4\u30eb\u3092\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\n\n```text:\n00000908 <_Z8inumsizePh>:\n     908:\tdc 01       \tmovw\tr26, r24\n     90a:\tec 91       \tld\tr30, X\n     90c:\te2 52       \tsubi\tr30, 0x22\t; 34\n     90e:\tec 30       \tcpi\tr30, 0x0C\t; 12\n     910:\t28 f4       \tbrcc\t.+10     \t; 0x91c <_Z8inumsizePh+0x14>\n     912:\tf0 e0       \tldi\tr31, 0x00\t; 0\n     914:\teb 5f       \tsubi\tr30, 0xFB\t; 251\n     916:\tfe 4f       \tsbci\tr31, 0xFE\t; 254\n     918:\t80 81       \tld\tr24, Z\n     91a:\t08 95       \tret\n     91c:\t80 e0       \tldi\tr24, 0x00\t; 0\n     91e:\t08 95       \tret\n\n00800105 <CSWTCH.240>:\n  800105:\t01 01       \tmovw\tr0, r2\n  800107:\t01 01       \tmovw\tr0, r2\n  800109:\t01 01       \tmovw\tr0, r2\n  80010b:\t01 01       \tmovw\tr0, r2\n  80010d:\t01 01       \tmovw\tr0, r2\n  80010f:\t02 03       \tmulsu\tr16, r18\n\n```\n\u304c\u539f\u56e0\u3068\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u898b\u6613\u3044\u69d8\u3001\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\u3067\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u51fa\u529b\u3059\u308b\u30a2\u30bb\u30f3\u30d6\u30eb\u30ea\u30b9\u30c8\u3092\u793a\u3059\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n\n```text:\n.global\t_Z8inumsizePh\n\t.type\t_Z8inumsizePh, @function\n_Z8inumsizePh:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n\tmovw r26,r24\n\tld r30,X\n\tsubi r30,lo8(-(-34))\n\tcpi r30,lo8(12)\n\tbrsh .L128\n\tldi r31,0\n\tsubi r30,lo8(-(CSWTCH.240))\n\tsbci r31,hi8(-(CSWTCH.240))\n\tld r24,Z\n\tret\n.L128:\n\tldi r24,0\n\tret\n\t.size\t_Z8inumsizePh, .-_Z8inumsizePh\n/* \u7565 */\n\t.section\t.rodata\n\t.type\tCSWTCH.240, @object\n\t.size\tCSWTCH.240, 12\nCSWTCH.240:\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t2\n\t.byte\t3\n```\nswitch \uff5e case \u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\u304c\u6700\u9069\u5316\u306b\u3088\u308a\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u306b\u5909\u63db\u3055\u308c\u3066\u304a\u308a\u3001\u53c2\u7167\u3055\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u304c .rodata \u306b\u914d\u7f6e\u3055\u308c\u3066\u304a\u308a\u3001ArduinoIDE \u304c\u4f7f\u7528\u3057\u3066\u3044\u308b avr-gcc \u3067\u306f .rodata \u306f RAM \u306b\u914d\u7f6e\u3059\u308b\u305f\u3081\u3001\u30d3\u30eb\u30c9\u6642\u306e\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306e\u7a7a\u304d\u30a8\u30ea\u30a2\u304c\u6e1b\u308b\u76f4\u63a5\u306e\u539f\u56e0\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u3092\u51fa\u529b\u3059\u308b C \u30bd\u30fc\u30b9\u306e\u4f8b\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```c:\nunsigned char inumsize(unsigned char *lp) {\n  unsigned char i_num = *lp - I_NUM_0;\n\n  if (i_num <= I_NUM_W - I_NUM_0) {\n      static const unsigned char t[] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3};\n      return t[i_num];\n  } else {\n      return 0;\n  }\n}\n```\n\u3053\u308c\u3092\u30d3\u30eb\u30c9\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3068\u5148\u306e\u4f8b\u3068\u307b\u307c\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n\n```text:\n.global\t_Z8inumsizePh\n\t.type\t_Z8inumsizePh, @function\n_Z8inumsizePh:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n\tmovw r26,r24\n\tld r30,X\n\tsubi r30,lo8(-(-34))\n\tcpi r30,lo8(12)\n\tbrsh .L128\n\tldi r31,0\n\tsubi r30,lo8(-(_ZZ8inumsizePhE1t))\n\tsbci r31,hi8(-(_ZZ8inumsizePhE1t))\n\tld r24,Z\n\tret\n.L128:\n\tldi r24,0\n\tret\n/* \u7565 */\n\t.section\t.rodata\n\t.type\t_ZZ8inumsizePhE1t, @object\n\t.size\t_ZZ8inumsizePhE1t, 12\n_ZZ8inumsizePhE1t:\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t2\n\t.byte\t3\n```\n\u3082\u3057\u3001\u53c2\u7167\u3055\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u304c PROGMEM \u306b\u914d\u7f6e\u3055\u308c\u3001\n\n```c:\nunsigned char inumsize(unsigned char *lp) {\n  unsigned char i_num = *lp - I_NUM_0;\n\n  if (i_num <= I_NUM_W - I_NUM_0) {\n      static const unsigned char PROGMEM t[] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3};\n      return pgm_read_byte_near(&t[i_num]);\n  } else {\n      return 0;\n  }\n}\n```\n```text:\n.global\t_Z8inumsizePh\n\t.type\t_Z8inumsizePh, @function\n_Z8inumsizePh:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n\tmovw r26,r24\n\tld r30,X\n\tsubi r30,lo8(-(-34))\n\tcpi r30,lo8(12)\n\tbrsh .L128\n\tldi r31,0\n\tsubi r30,lo8(-(_ZZ8inumsizePhE1t))\n\tsbci r31,hi8(-(_ZZ8inumsizePhE1t))\n/* #APP */\n ;  592 \"basic.cpp\" 1\n\tlpm r24, Z\n\t\n ;  0 \"\" 2\n/* #NOAPP */\n\tret\n.L128:\n\tldi r24,0\n\tret\n\t.size\t_Z8inumsizePh, .-_Z8inumsizePh\n\n\t.type\t_ZZ8inumsizePhE1t, @object\n\t.size\t_ZZ8inumsizePhE1t, 12\n_ZZ8inumsizePhE1t:\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t1\n\t.byte\t2\n\t.byte\t3\n```\n\u4ee5\u4e0a\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u308c\u3070 RAM \u306e\u6d88\u8cbb\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001ArduinoIDE 1.6.8 \u304c\u63a1\u7528\u3057\u3066\u3044\u308b avr-gcc 4.8.1 \u306f\nPROGMEM \u9818\u57df\u3092\u8aad\u307f\u51fa\u3059 lpm \u547d\u4ee4\u3088\u308a RAM \u3092\u8aad\u307f\u51fa\u3059 ld \u547d\u4ee4\u306e\u65b9\u304c\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u30b5\u30a4\u30af\u30eb\u6570\u304c 1 \u5c11\u306a\u3044\u3053\u3068\u3092\u512a\u5148\u3057\u3066\u304b switch \uff5e case \u3092\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u3068\u6700\u9069\u5316\u3059\u308b\u5834\u5408\u306b\u306f\u30c6\u30fc\u30d6\u30eb\u3092 RAM \u306b\u7f6e\u304f\u3088\u3046\u3067\u3059\u3002\n\u4ee5\u4e0a\u3092\u8e0f\u307e\u3048\u3066\u3001\u300e\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u3092\u5897\u3084\u3059\u5b9f\u9a13(4)\u300f\u3067\u306f\u3001switch \uff5e case \u3092\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u3068\u3055\u308c\u308b\u6700\u9069\u5316\u3092\u907f\u3051\u308b\u305f\u3081\u306b inumsize() \u3092\u4ee5\u4e0b\u306e\u5185\u5bb9\u3068\u3057\u307e\u3057\u305f\u3002\n\n```c:\nunsigned char inumsize(unsigned char *lp) {\n  unsigned char i_num = *lp;\n\n  if (i_num >= I_NUM_0 && i_num <= I_NUM_9) {\n    return 1;\n  } else if (i_num == I_NUM_B) {\n    return 2;\n  } else if (i_num == I_NUM_W) {\n    return 3;\n  } else {\n    return 0;\n  }\n}\n```\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3001RAM \u306e\u6d88\u8cbb\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n```text:\n.global\t_Z8inumsizePh\n\t.type\t_Z8inumsizePh, @function\n_Z8inumsizePh:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n\tmovw r30,r24\n\tld r24,Z\n\tldi r25,lo8(-34)\n\tadd r25,r24\n\tcpi r25,lo8(10)\n\tbrlo .L128\n\tcpi r24,lo8(44)\n\tbreq .L129\n\tcpi r24,lo8(45)\n\tbrne .L130\n\tldi r24,lo8(3)\n\tret\n.L128:\n\tldi r24,lo8(1)\n\tret\n.L129:\n\tldi r24,lo8(2)\n\tret\n.L130:\n\tldi r24,0\n\tret\n\t.size\t_Z8inumsizePh, .-_Z8inumsizePh\n```\n\u4ee5\u4e0a\u306e\u30b3\u30fc\u30c9\u306f\u30d5\u30e9\u30c3\u30b7\u30e5\u30e1\u30e2\u30ea\u3092 36\u30d0\u30a4\u30c8\u4f7f\u7528\u3057\u3001\u5b9f\u884c\u306b\u306f\u5f15\u6570 lp \u306e\u6307\u3059\u5185\u5bb9\u304c I_NUM_0 \u304b\u3089 I_NUM_9 \u306e\u5834\u5408\u306f 13\u30af\u30ed\u30c3\u30af\u3001I_NUM_B \u3067 15\u30af\u30ed\u30c3\u30af\u3001I_NUM_W \u3067 16\u30af\u30ed\u30c3\u30af\u3001\u305d\u308c\u4ee5\u5916\u306717\u30af\u30ed\u30c3\u30af\u3092\u6d88\u8cbb\u3057\u307e\u3059\u3002\n\u6700\u521d\u306e\u4f8b\u3067\u306f\u30d5\u30e9\u30c3\u30b7\u30e5\u30e1\u30e2\u30ea\u3092 36\u30d0\u30a4\u30c8\u3001RAM \u3092 12\u30d0\u30a4\u30c8\u3001\u5b9f\u884c\u306b\u306f\u5f15\u6570 lp \u306e\u6307\u3059\u5185\u5bb9\u304c I_NUM_0 \u304b\u3089 I_NUM_W \u306e\u5834\u5408\u306f 15\u30af\u30ed\u30c3\u30af\u3001\u305d\u308c\u4ee5\u5916\u3067 12\u30af\u30ed\u30c3\u30af\u3092\u6d88\u8cbb\u3057\u307e\u3059\u3002\n\u30d5\u30e9\u30b7\u30e5\u30e1\u30e2\u30ea\u306e\u6d88\u8cbb\u91cf\u306f\u540c\u7b49\u3067\u3042\u308a\u3001\u5b9f\u884c\u30af\u30ed\u30c3\u30af\u6570\u306f\u3055\u307b\u3069\u5dee\u304c\u306a\u304f\u3001RAM \u306e\u6d88\u8cbb\u304c\u306a\u3044\u3053\u3068\u3067\u4ee5\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nArduino Uno \u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308b ATMEGA328P \u306f\u642d\u8f09\u3055\u308c\u3066\u3044\u308b RAM \u306e\u5bb9\u91cf\u304c 2kB\u3068\u5c11\u306a\u304f\u3001\u305d\u308c\u306e\u6d88\u8cbb\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u51fa\u529b\u30b3\u30fc\u30c9\u3092\u8a55\u4fa1\u3057\u3066\u30b3\u30fc\u30c9\u306e\u66f8\u304d\u65b9\u3092\u691c\u8a0e\u3059\u308b\u3053\u3068\u3082\u6642\u3068\u3057\u3066\u6709\u52b9\u306a\u624b\u6bb5\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u5c1a\u3001\u4ee5\u4e0a\u306e\u5185\u5bb9\u3068\u306f\u9055\u3044\u307e\u3059\u304c\u3001switch \uff5e case \u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\u304c\u6700\u9069\u5316\u306b\u3088\u308a\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u306b\u5909\u63db\u3055\u308c\u306a\u3044\u5834\u5408\u3001\u30b8\u30e3\u30f3\u30d7\u30c6\u30fc\u30d6\u30eb\u304c PROGMEM \u4e0a\u306e\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4\u3068\u3057\u3066\u751f\u6210\u3055\u308c\u308b\u306e\u307f\u3067 RAM \u306e\u6d88\u8cbb\u306f\u306a\u3044\u3088\u3046\u3067\u3059\n\n```c:\nunsigned char hoge(unsigned char x, unsigned char y)\n{\n    switch (x) {\n    case 0:\n        return x + y;\n    case 1:\n        return x - y;\n    case 2:\n        return x * y;\n    case 3:\n        return x / y;\n    case 4:\n        return x % y;\n    case 5:\n        return x & y;\n    case 6:\n        return x | y;\n    case 7:\n        return x ^ y;\n    default:\n        return 0;\n    }\n}\n```\n\n```text:\n\t.file\t\"hoge.c\"\n__SP_H__ = 0x3e\n__SP_L__ = 0x3d\n__SREG__ = 0x3f\n__tmp_reg__ = 0\n__zero_reg__ = 1\n\t.text\n.global\thoge\n\t.type\thoge, @function\nhoge:\n/* prologue: function */\n/* frame size = 0 */\n/* stack size = 0 */\n.L__stack_usage = 0\n\tldi r25,0\n\tcpi r24,8\n\tcpc r25,__zero_reg__\n\tbrsh .L2\n\tmov r30,r24\n\tmov r31,r25\n\tsubi r30,lo8(-(gs(.L4)))\n\tsbci r31,hi8(-(gs(.L4)))\n\tijmp\n\t.section\t.progmem.gcc_sw_table,\"ax\",@progbits\n\t.p2align\t1\n.L4:\n\trjmp .L12\n\trjmp .L5\n\trjmp .L6\n\trjmp .L7\n\trjmp .L8\n\trjmp .L9\n\trjmp .L10\n\trjmp .L11\n\t.text\n.L2:\n\tldi r24,0\n\tret\n.L5:\n\tldi r24,lo8(1)\n\tsub r24,r22\n\tret\n.L6:\n\tmov r24,r22\n\tlsl r24\n\tret\n.L7:\n\tldi r24,lo8(3)\n\trcall __udivmodqi4\n\tret\n.L8:\n\tldi r24,lo8(4)\n\trcall __udivmodqi4\n\tmov r24,r25\n\tret\n.L9:\n\tmov r24,r22\n\tandi r24,lo8(5)\n\tret\n.L10:\n\tmov r24,r22\n\tori r24,lo8(6)\n\tret\n.L11:\n\tldi r24,lo8(7)\n\teor r24,r22\n\tret\n.L12:\n\tmov r24,r22\n\tret\n\t.size\thoge, .-hoge\n\t.ident\t\"GCC: (GNU) 4.8.1\"\n```\n", "tags": ["Arduino", "AVR", "avr-gcc"]}