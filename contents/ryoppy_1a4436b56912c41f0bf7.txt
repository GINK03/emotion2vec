{"context": "\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30ba\u30f3\u30c9\u30b3\u3059\u308b\u3002\u305d\u308c\u304c\u578b\u30ec\u30d9\u30eb\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u3002\n\u578b\u3060\u3051\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3089\u3057\u3044\u3067\u3059\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3042\u304d\u3089\u3081\u3066\u30de\u30af\u30ed\u4f7f\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3060\u308c\u304b\u304a\u9858\u3044\u3057\u307e\u3059\u3002 \u66f8\u3044\u3066\u304f\u308c\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\n\u307e\u305a\u30e9\u30f3\u30c0\u30e0\u306b\u30ba\u30f3\u304b\u30c9\u30b3\u3092\u6c7a\u3081\u308b\u305f\u3081\u30012\u3064\u306e\u578b\u3092\u3068\u3063\u3066\u3069\u3063\u3061\u304b\u8fd4\u3059\u307f\u305f\u3044\u306a\u30de\u30af\u30ed\u3092\u7528\u610f\u3002\nimport scala.language.experimental.macros\nimport scala.reflect.macros.whitebox.Context\n\ntrait Which[A, B] {\n  type Out\n}\nobject Which {\n  type Aux[A, B, C] = Which[A, B] {type Out = C}\n  def randImpl[A: c.WeakTypeTag, B: c.WeakTypeTag](c: Context): c.Tree = {\n    import c.universe._\n    val tpeA = weakTypeOf[A]\n    val tpeB = weakTypeOf[B]\n    val tpeC = if (scala.util.Random.nextBoolean) tpeA else tpeB\n    q\"new Which[$tpeA, $tpeB] { type Out = $tpeC }: Which.Aux[$tpeA, $tpeB, $tpeC]\"\n  }\n  implicit def which[A, B, C]: Which.Aux[A, B, C] = macro randImpl[A, B]\n}\n\n\u30ba\u30f3\u304b\u30c9\u30b3\u3092Which\u3067\u53d6\u5f97\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u3092HList\u306b\u305f\u3081\u3066\u3044\u304d\u307e\u3059\u3002\u4f8b\u306e\u6587\u8a00\u306b\u306a\u3063\u305f\u3089\u30ad\u30e8\u30b7\u3092\u4ed8\u3051\u3066\u8fd4\u3059\u3060\u3051\u3067\u3059\u3002\nimport shapeless._\nimport shapeless.ops.hlist.Reverse\n\nobject Main extends App {\n  trait \u30ba\u30f3\n  trait \u30c9\u30b3\n  trait `\u30ad\u30fb\u30e8\u30fb\u30b7\uff01`\n  implicit case object \u30ba\u30f3 extends \u30ba\u30f3\n  implicit case object \u30c9\u30b3 extends \u30c9\u30b3\n  case object `\u30ad\u30fb\u30e8\u30fb\u30b7\uff01` extends `\u30ad\u30fb\u30e8\u30fb\u30b7\uff01`\n\n  trait Kiyoshi[A <: HList] {\n    type Out <: HList\n    def apply(a: A): Out\n  }\n  object Kiyoshi extends LowPriority {\n    implicit def k0[L <: HList](implicit r: Reverse[`\u30ad\u30fb\u30e8\u30fb\u30b7\uff01` :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: L]) = new Kiyoshi[\u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: L] {\n      type Out = r.Out\n      def apply(l: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: L) = r(`\u30ad\u30fb\u30e8\u30fb\u30b7\uff01` :: l)\n    }\n  }\n  trait LowPriority {\n    implicit def k1[A, L <: HList](implicit w: Which.Aux[\u30ba\u30f3, \u30c9\u30b3, A], a: A, k: Lazy[Kiyoshi[A :: L]]) = {\n      new Kiyoshi[L] {\n        type Out = k.value.Out\n        def apply(l: L) = k.value(a :: l)\n      }\n    }\n  }\n\n  println(the[Kiyoshi[HNil]].apply(HNil: HNil))\n}\n\n\n\u5b9f\u884c\n> run\n[info] Compiling 1 Scala source to /Volumes/USB1/Documents/my/macro-sample/core/target/scala-2.11/classes...\n[info] Running Main\n\u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ad\u30fb\u30e8\u30fb\u30b7\uff01 :: HNil\n[success] Total time: 4 s, completed 2016/03/28 21:14:53\n\n\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u306a\u3044\u9650\u308a\u540c\u3058\u3082\u306e\u3092\u51fa\u529b\u3002\n> run\n[info] Running Main\n\u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ad\u30fb\u30e8\u30fb\u30b7\uff01 :: HNil\n[success] Total time: 0 s, completed 2016/03/28 21:15:51\n\n\u518d\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u7d50\u679c\u304c\u5909\u308f\u308a\u307e\u3059\u3002\n> run\n[info] Compiling 1 Scala source to /Volumes/USB1/Documents/my/macro-sample/core/target/scala-2.11/classes...\n[info] Running Main\n\u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ad\u30fb\u30e8\u30fb\u30b7\uff01 :: HNil\n[success] Total time: 3 s, completed 2016/03/28 21:16:54\n\n**\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30ba\u30f3\u30c9\u30b3\u3059\u308b\u3002\u305d\u308c\u304c\u578b\u30ec\u30d9\u30eb\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u3002**\n\n\u578b\u3060\u3051\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3089\u3057\u3044\u3067\u3059\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3042\u304d\u3089\u3081\u3066\u30de\u30af\u30ed\u4f7f\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002~~\u3060\u308c\u304b\u304a\u9858\u3044\u3057\u307e\u3059\u3002~~ [\u66f8\u3044\u3066\u304f\u308c\u307e\u3057\u305f\u3002](http://qiita.com/ocadaruma/items/866c83f9c697a910da44)\n\n## \u30b3\u30fc\u30c9\n\n\u307e\u305a\u30e9\u30f3\u30c0\u30e0\u306b\u30ba\u30f3\u304b\u30c9\u30b3\u3092\u6c7a\u3081\u308b\u305f\u3081\u30012\u3064\u306e\u578b\u3092\u3068\u3063\u3066\u3069\u3063\u3061\u304b\u8fd4\u3059\u307f\u305f\u3044\u306a\u30de\u30af\u30ed\u3092\u7528\u610f\u3002\n\n```scala\nimport scala.language.experimental.macros\nimport scala.reflect.macros.whitebox.Context\n\ntrait Which[A, B] {\n  type Out\n}\nobject Which {\n  type Aux[A, B, C] = Which[A, B] {type Out = C}\n  def randImpl[A: c.WeakTypeTag, B: c.WeakTypeTag](c: Context): c.Tree = {\n    import c.universe._\n    val tpeA = weakTypeOf[A]\n    val tpeB = weakTypeOf[B]\n    val tpeC = if (scala.util.Random.nextBoolean) tpeA else tpeB\n    q\"new Which[$tpeA, $tpeB] { type Out = $tpeC }: Which.Aux[$tpeA, $tpeB, $tpeC]\"\n  }\n  implicit def which[A, B, C]: Which.Aux[A, B, C] = macro randImpl[A, B]\n}\n```\n\n\u30ba\u30f3\u304b\u30c9\u30b3\u3092Which\u3067\u53d6\u5f97\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u3092HList\u306b\u305f\u3081\u3066\u3044\u304d\u307e\u3059\u3002\u4f8b\u306e\u6587\u8a00\u306b\u306a\u3063\u305f\u3089\u30ad\u30e8\u30b7\u3092\u4ed8\u3051\u3066\u8fd4\u3059\u3060\u3051\u3067\u3059\u3002\n\n```scala\nimport shapeless._\nimport shapeless.ops.hlist.Reverse\n\nobject Main extends App {\n  trait \u30ba\u30f3\n  trait \u30c9\u30b3\n  trait `\u30ad\u30fb\u30e8\u30fb\u30b7\uff01`\n  implicit case object \u30ba\u30f3 extends \u30ba\u30f3\n  implicit case object \u30c9\u30b3 extends \u30c9\u30b3\n  case object `\u30ad\u30fb\u30e8\u30fb\u30b7\uff01` extends `\u30ad\u30fb\u30e8\u30fb\u30b7\uff01`\n\n  trait Kiyoshi[A <: HList] {\n    type Out <: HList\n    def apply(a: A): Out\n  }\n  object Kiyoshi extends LowPriority {\n    implicit def k0[L <: HList](implicit r: Reverse[`\u30ad\u30fb\u30e8\u30fb\u30b7\uff01` :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: L]) = new Kiyoshi[\u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: L] {\n      type Out = r.Out\n      def apply(l: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: L) = r(`\u30ad\u30fb\u30e8\u30fb\u30b7\uff01` :: l)\n    }\n  }\n  trait LowPriority {\n    implicit def k1[A, L <: HList](implicit w: Which.Aux[\u30ba\u30f3, \u30c9\u30b3, A], a: A, k: Lazy[Kiyoshi[A :: L]]) = {\n      new Kiyoshi[L] {\n        type Out = k.value.Out\n        def apply(l: L) = k.value(a :: l)\n      }\n    }\n  }\n\n  println(the[Kiyoshi[HNil]].apply(HNil: HNil))\n}\n```\n\n## \u5b9f\u884c\n\n```\n> run\n[info] Compiling 1 Scala source to /Volumes/USB1/Documents/my/macro-sample/core/target/scala-2.11/classes...\n[info] Running Main\n\u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ad\u30fb\u30e8\u30fb\u30b7\uff01 :: HNil\n[success] Total time: 4 s, completed 2016/03/28 21:14:53\n```\n\n\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u306a\u3044\u9650\u308a\u540c\u3058\u3082\u306e\u3092\u51fa\u529b\u3002\n\n```\n> run\n[info] Running Main\n\u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ad\u30fb\u30e8\u30fb\u30b7\uff01 :: HNil\n[success] Total time: 0 s, completed 2016/03/28 21:15:51\n```\n\n\u518d\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u7d50\u679c\u304c\u5909\u308f\u308a\u307e\u3059\u3002\n\n\n```\n> run\n[info] Compiling 1 Scala source to /Volumes/USB1/Documents/my/macro-sample/core/target/scala-2.11/classes...\n[info] Running Main\n\u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30c9\u30b3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30ba\u30f3 :: \u30c9\u30b3 :: \u30ad\u30fb\u30e8\u30fb\u30b7\uff01 :: HNil\n[success] Total time: 3 s, completed 2016/03/28 21:16:54\n```\n", "tags": ["shapeless", "Scala", "\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7"]}