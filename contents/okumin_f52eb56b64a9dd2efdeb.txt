{"context": " More than 1 year has passed since last update.\n\nAkka\u306eactor\u3068Erlang\u306e\u30d7\u30ed\u30bb\u30b9\u9593\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3057\u3066\u307f\u305f\nScala Advent Calendar 2014\u306e17\u65e5\u76ee\u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\n\u300cakka\u304cerlang\u306e\u6a5f\u80fd\u3092\u3069\u306e\u3088\u3046\u306b\u30d1\u30af\u3063\u3066\u3044\u308b\u304b\u66f8\u304d\u305f\u3044\u3067\u3059\u300d\u3068\u66f8\u3044\u3066\u67a0\u3092\u78ba\u4fdd\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089Erlang\u306e\u52c9\u5f37\u306e\u9032\u6357\u304c\u30c0\u30e1\u306a\u306e\u3067\u6025\u907d\u5225\u30c6\u30fc\u30de\u3067\u8a18\u4e8b\u3092\u66f8\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u591a\u304f\u306e\u65b9\u306b\u697d\u3057\u307f\u306b\u3057\u3066\u3044\u305f\u3060\u3044\u3066\u3044\u305f\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u3053\u306e\u3088\u3046\u306a\u7d50\u679c\u3068\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u5fc3\u82e6\u3057\u3044\u9650\u308a\u3067\u3059(\u25de\u2038\u25df)\nhttps://twitter.com/scalajp_gitter/status/544853401050177536\nhttps://twitter.com/scalajp_gitter/status/544853634844852224\nhttps://twitter.com/scalajp_gitter/status/544853702079545344\nhttps://twitter.com/scalajp_gitter/status/544853750133690371\n\u79c1\u7121\u8b00\u306b\u3082\u300cakka vs erlang\u300d\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u3067Erlang Advent Calendar 2014\u306e\u67a0\u3082\u62bc\u3055\u3048\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u304a\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u3067\u4eca\u56de\u66f8\u304d\u305f\u304b\u3063\u305f\u3053\u3068\u306b\u3082\u89e6\u308c\u3089\u308c\u305f\u3089\u3068\u601d\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\u8ffd\u8a18: \u300c\u4eca\u56de\u66f8\u304d\u305f\u304b\u3063\u305f\u3053\u3068\u300d\u306b\u306f\u307b\u3068\u3093\u3069\u89e6\u308c\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u8a18\u4e8b\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nAkka vs Erlang\n\n\u5206\u6563Erlang\u306b\u3064\u3044\u3066\nAkka\u3068\u540c\u3058\u304f\u3001Erlang\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306flocation transparency\u304c\u5099\u308f\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b9\u30e2\u30fc\u30eb\u306a\u5b9f\u884c\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n$ erl -sname mofu\nErlang/OTP 17 [erts-6.2.1] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]\n\nEshell V6.2.1  (abort with ^G)\n(mofu@okumin-no-Mac-mini)1> register(mofu_shell, self()).\ntrue\n(mofu@okumin-no-Mac-mini)2> receive\n(mofu@okumin-no-Mac-mini)2>     {From, hello} -> From\n(mofu@okumin-no-Mac-mini)2> end.\n\n\u307e\u305a\u306fmofu\u3068\u3044\u3046\u540d\u524d\u3067\u30b7\u30a7\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u3001\u81ea\u5206\u81ea\u8eab\u3092\u300cmofu_shell\u300d\u3068\u3044\u3046\u540d\u524d\u3067\u767b\u9332\u3057\u307e\u3059\u3002\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001Akka\u306eActorPath\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3088\u3046\u306b\u3001\u76f4\u63a5\u540d\u524d\u6307\u5b9a\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n2\u756a\u76ee\u306e\u51e6\u7406\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u3082\u306e\u3067\u3001Akka\u30a2\u30af\u30bf\u30fc\u306ereceive\u306e\u3088\u3046\u306b\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u53d7\u3051\u53d6\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3001\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u51e6\u7406\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4eca\u306f\u307e\u3060\u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u304c\u7a7a\u306a\u306e\u3067\u3001\u4f55\u304b\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u307e\u3067\u30b7\u30a7\u30eb\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\nerl -sname poyo\nErlang/OTP 17 [erts-6.2.1] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]\n\nEshell V6.2.1  (abort with ^G)\n(poyo@okumin-no-Mac-mini)1> net_adm:names().\n{ok,[{\"mofu\",60995},{\"poyo\",60997}]}\n(poyo@okumin-no-Mac-mini)2> {mofu_shell, 'mofu@okumin-no-Mac-mini'} ! {self(), hello}.\n{<0.38.0>,hello}\n\n\u30b7\u30a7\u30eb\u3092\u3082\u3046\u4e00\u3064\u3001\u4eca\u5ea6\u306fpoyo\u3068\u3044\u3046\u540d\u524d\u3067\u7acb\u3061\u4e0a\u3052\u307e\u3059\u3002\n\u6700\u521d\u306b\u30ed\u30fc\u30ab\u30eb\u306b\u3044\u308bErlang VM\u306eHOST\u3092\u5217\u6319(net_adm:names())\u3057\u3066\u307f\u307e\u3059\u3002mofu\u304c\u3044\u307e\u3059\u306d\u3002\n\u6b21\u306b\u5148\u307b\u3069\u767b\u9332\u3057\u305fmofu\u30b7\u30a7\u30eb\u306emofu_shell\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u3063\u3066\u307f\u307e\u3059\u3002Akka\u3067\u3044\u3048\u3070\u3001ActorSelection\u306b\u5bfe\u3057\u3066\u300c!\u300d\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\nAkka\u3068\u9055\u3044Erlang\u306e\u300c!\u300d\u6f14\u7b97\u5b50\u306f\u9001\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7d50\u679c\u3068\u3057\u3066\u8fd4\u3059\u306e\u3067\u3001\u300c{<0.38.0>,hello}\u300d\u3068\u3044\u3046\u5024\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u300c<0.38.0>\u300d\u306f\u30d7\u30ed\u30bb\u30b9ID(Akka\u3067\u3044\u3046ActorRef)\u3067\u3001\u300cself()\u300d\u304c\u8a55\u4fa1\u3055\u308c\u305f\u3082\u306e\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u30d7\u30ed\u30bb\u30b9ID\u306e\u6700\u521d\u306e\u6570\u5b57\u306f\u30db\u30b9\u30c8\u3092\u8868\u3057\u3001\u81ea\u5206\u3068\u540c\u3058VM\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u5834\u5408\u306f\u5fc5\u305a0\u3068\u306a\u308a\u307e\u3059\u3002\n(mofu@okumin-no-Mac-mini)2> receive\n(mofu@okumin-no-Mac-mini)2>     {From, hello} -> From\n(mofu@okumin-no-Mac-mini)2> end.\n<7250.38.0>\n(mofu@okumin-no-Mac-mini)3>\n\nmofu\u30b7\u30a7\u30eb\u306b\u79fb\u52d5\u3059\u308b\u3068\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5c4a\u304d\u3001\u300c<7250.38.0>\u300d\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u307e\u3057\u305f\u3002\npoyo\u30b7\u30a7\u30eb\u3067\u898b\u305f\u3068\u304d\u306f\u300c<0.38.0>\u300d\u3067\u3057\u305f\u304c\u3001mofu\u30b7\u30a7\u30eb\u306b\u3068\u3063\u3066\u306f\u5225VM\u306b\u5b58\u5728\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u306a\u306e\u3067\u3001\u6700\u521d\u306e\u6570\u5b57\u304c\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\u3082\u3061\u308d\u3093\u3001\u3053\u306e\u30d7\u30ed\u30bb\u30b9ID\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0a\u304cErlang\u306b\u304a\u3051\u308b\u30ea\u30e2\u30fc\u30c8\u3068\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u306e\u4f8b\u3067\u3059\u3002\nAkka\u3068\u540c\u3058\u8981\u9818\u3067\u901a\u4fe1\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u305f\u3060\u3051\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\nErlactor\n\u4eca\u56de\u4f5c\u3063\u305fAkka\u30a2\u30af\u30bf\u30fc\u304b\u3089Erlang\u30d7\u30ed\u30bb\u30b9\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u7c21\u5358\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\nErlactor\nErlang\u304c\u3059\u3054\u3044\u5f97\u610f\u306a\u77e5\u308a\u5408\u3044O\u3055\u3093\u306b\u3001\u5206\u6563Erlang\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3057\u305fJava\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3068\u6559\u308f\u3063\u305f\u306e\u3067\u305d\u308c\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nErlang\u30d7\u30ed\u30bb\u30b9\u3092\u8868\u73fe\u3057\u305fActor\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092Scala\u5074\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001(\u9001\u4fe1\u53ef\u80fd\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5236\u9650\u3055\u308c\u308b\u304c)\u666e\u901a\u306eAkka\u30a2\u30af\u30bf\u30fc\u3068\u3084\u308a\u3068\u308a\u3059\u308b\u306e\u3068\u540c\u3058\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3001\u3068\u3044\u3063\u305f\u5b9f\u88c5\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u8a73\u7d30\u306fgithub\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u2026\u2026Echo\u30b5\u30fc\u30d0\u3092Erlang\u3067\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092Akka\u3067\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u305f\u306e\u3067\u30c7\u30e2\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d0\n-module(yamabiko_server).\n-export([start_link/0]).\n\nstart_link() ->\n    spawn_link(fun loop/0).\n\nloop() ->\n    receive\n        {From, identity} -> % \u30d7\u30ed\u30bb\u30b9\u3092\u53d6\u5f97\u3059\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\n            send(From, self()),\n            loop();\n        {From, Term} -> % Echo\n            send(From, Term),\n            loop();\n        Unexpected ->\n            io:format(\"Received an unexpected message, ~s~n\", [Unexpected]),\n            loop()\n    end.\n\nsend({Pid, Ref}, Message) ->\n    Pid ! {Ref, Message}.\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\nobject Sample {\n  val system = ActorSystem(\"erlactor\")\n  val yamabikoClient = system.actorOf(Props(classOf[YamabikoClient]), name = \"yamabiko-client\")\n\n  implicit val timeout = Timeout(3.seconds)\n\n  case class YamabikoRequest(name: RemoteProcessName, term: ErlangTerm)\n  case class KillYamabiko(name: RemoteProcessName)\n\n  class YamabikoClient extends Actor with ActorLogging {\n    private[this] val extension = ErlactorExtension(system)\n\n    override def receive: Receive = {\n      case YamabikoRequest(name, term) =>\n        val response = for {\n          process <- extension.resolveByName(name)\n          response <- (process ? Ask(term)).mapTo[ErlangTerm]\n        } yield response\n        response.onComplete {\n          case Success(t) =>\n            log.info(s\"Yamabiko returned. $t\")\n          case Failure(e) =>\n            log.error(e, \"Yamabiko failed.\")\n        }\n    }\n  }\n}\n\n\n\u30c7\u30e2\n\u307e\u305aEcho\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ erl -sname mofu                                                                   \nErlang/OTP 17 [erts-6.2.1] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]\n\nEshell V6.2.1  (abort with ^G)\n(mofu@okumin-no-Mac-mini)1> c(yamabiko_server).\n{ok,yamabiko_server}\n(mofu@okumin-no-Mac-mini)2> Pid = yamabiko_server:start_link().\n<0.45.0>\n(mofu@okumin-no-Mac-mini)3> register(server, Pid).\ntrue\n\n\u300cmofu\u300d\u3068\u3044\u3046\u540d\u524d\u3067VM\u3092\u8d77\u52d5\u3057\u3066\u3001\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u3092\u300cserver\u300d\u3068\u3044\u3046\u540d\u524d\u3067\u767b\u9332\u3057\u307e\u3059\u3002\nsbt console                                                                \u23ce \u2739 \u272d\nUse of ~/.sbtconfig is deprecated, please migrate global settings to /usr/local/etc/sbtopts\n[info] Loading global plugins from /Users/okumin/.sbt/0.13/plugins\n[info] Loading project definition from /Users/okumin/Documents/program/product/erlactor/project\n[info] Set current project to erlactor (in build file:/Users/okumin/Documents/program/product/erlactor/)\n[info] Starting scala interpreter...\n[info]\nWelcome to Scala version 2.10.4 (Java HotSpot(TM) 64-Bit Server VM, Java 1.7.0_55).\nType in expressions to have them evaluated.\nType :help for more information.\n\nscala> import sample.Sample._\nimport sample.Sample._\n\nscala> import erlactor.ErlactorSelection._\nimport erlactor.ErlactorSelection._\n\nscala> import erlactor.ErlangTerm._\nimport erlactor.ErlangTerm._\n\nscala> sample.Sample // \u521d\u671f\u5316\nres0: sample.Sample.type = sample.Sample$@2d147608\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3082\u7acb\u3061\u4e0a\u3052\u308b\u3068\u3001\n(mofu@okumin-no-Mac-mini)4> net_adm:ping('erlactor@okumin-no-Mac-mini').\npong\n\nErlang\u5074\u304b\u3089Akka\u306b\u3064\u306a\u304c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3061\u306a\u307f\u306b\u3053\u306eping\u306a\u3057\u3060\u3068\u3053\u308c\u4ee5\u964d\u306e\u51e6\u7406\u304c\u306a\u305c\u304b\u52d5\u304d\u307e\u305b\u3093\u3002\nscala> yamabikoClient ! YamabikoRequest(RemoteProcessName(node = \"mofu\", name = \"server\"), ErlangList(\"yahoo!\"))\n\nscala> [INFO] [12/17/2014 10:28:26.152] [erlactor-akka.actor.default-dispatcher-6] [akka://erlactor/user/erlactor-selection] Waiting the response...\n[INFO] [12/17/2014 10:28:26.169] [erlactor-akka.actor.default-dispatcher-6] [akka://erlactor/user/erlactor-selection] Get Erlactor Actor[akka://erlactor/user/erlactor-selection/erlactor-mofu@okumin-no-Mac-mini-45-0-1#-1919978540]\n[INFO] [12/17/2014 10:28:26.179] [ForkJoinPool-2-worker-5] [akka://erlactor/user/yamabiko-client] Yamabiko returned. ErlangTuple2(ErlangRef(erlactor@okumin-no-Mac-mini,[I@6fa33b9d,2),ErlangList(List(ErlangInteger(121), ErlangInteger(97), ErlangInteger(104), ErlangInteger(111), ErlangInteger(111), ErlangInteger(33))))\n\nscala> yamabikoClient ! YamabikoRequest(RemoteProcessName(node = \"mofu\", name = \"server\"), ErlangTrue)\n\nscala> [INFO] [12/17/2014 10:29:07.341] [ForkJoinPool-2-worker-1] [akka://erlactor/user/yamabiko-client] Yamabiko returned. ErlangTuple2(ErlangRef(erlactor@okumin-no-Mac-mini,[I@3a34b8fd,2),ErlangAtom(true))\n\n\u9001\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3061\u3083\u3093\u3068\u8fd4\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u6210\u529f\u3067\u3059\u3002\n\nJInterface\u306e\u611f\u60f3\nAPI\u81ea\u4f53\u306f\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3001\u4f7f\u3044\u3084\u3059\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3057\u305f\u3002\nPING\u3084node\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308bAPI\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30c7\u30d0\u30c3\u30b0\u3082\u7c21\u5358\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u6c17\u306b\u306a\u3063\u305f\u306e\u306f\u4ee5\u4e0b\u306e2\u70b9\u3067\u3057\u3087\u3046\u304b\u3002\n\nErlang\u5074\u304b\u3089\u4e00\u5ea6ping\u3092\u6483\u3063\u3066\u3082\u3089\u308f\u306a\u3044\u3068\u306a\u305c\u304b\u63a5\u7d9a\u3067\u304d\u306a\u3044\n\u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u306e\u4e2d\u8eab\u3092\u53d6\u308a\u51fa\u3059API\u304c\u30b9\u30ec\u30c3\u30c9\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\n\n\u5206\u6563Erlang\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u8aad\u3093\u3067\u81ea\u5206\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\u306e\u3082\u697d\u3057\u305d\u3046\u3060\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n# Akka\u306eactor\u3068Erlang\u306e\u30d7\u30ed\u30bb\u30b9\u9593\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3057\u3066\u307f\u305f\n\n[Scala Advent Calendar 2014](http://qiita.com/advent-calendar/2014/scala)\u306e17\u65e5\u76ee\u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\n\u300cakka\u304cerlang\u306e\u6a5f\u80fd\u3092\u3069\u306e\u3088\u3046\u306b\u30d1\u30af\u3063\u3066\u3044\u308b\u304b\u66f8\u304d\u305f\u3044\u3067\u3059\u300d\u3068\u66f8\u3044\u3066\u67a0\u3092\u78ba\u4fdd\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089Erlang\u306e\u52c9\u5f37\u306e\u9032\u6357\u304c\u30c0\u30e1\u306a\u306e\u3067\u6025\u907d\u5225\u30c6\u30fc\u30de\u3067\u8a18\u4e8b\u3092\u66f8\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u591a\u304f\u306e\u65b9\u306b\u697d\u3057\u307f\u306b\u3057\u3066\u3044\u305f\u3060\u3044\u3066\u3044\u305f\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u3053\u306e\u3088\u3046\u306a\u7d50\u679c\u3068\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u5fc3\u82e6\u3057\u3044\u9650\u308a\u3067\u3059(\u25de\u2038\u25df)\n\n[https://twitter.com/scalajp_gitter/status/544853401050177536](https://twitter.com/scalajp_gitter/status/544853401050177536)\n[https://twitter.com/scalajp_gitter/status/544853634844852224](https://twitter.com/scalajp_gitter/status/544853634844852224)\n[https://twitter.com/scalajp_gitter/status/544853702079545344](https://twitter.com/scalajp_gitter/status/544853702079545344)\n[https://twitter.com/scalajp_gitter/status/544853750133690371](https://twitter.com/scalajp_gitter/status/544853750133690371)\n\n\u79c1\u7121\u8b00\u306b\u3082\u300cakka vs erlang\u300d\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u3067[Erlang Advent Calendar 2014](http://qiita.com/advent-calendar/2014/erlang)\u306e\u67a0\u3082\u62bc\u3055\u3048\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u304a\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u3067\u4eca\u56de\u66f8\u304d\u305f\u304b\u3063\u305f\u3053\u3068\u306b\u3082\u89e6\u308c\u3089\u308c\u305f\u3089\u3068\u601d\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u8ffd\u8a18: \u300c\u4eca\u56de\u66f8\u304d\u305f\u304b\u3063\u305f\u3053\u3068\u300d\u306b\u306f\u307b\u3068\u3093\u3069\u89e6\u308c\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u8a18\u4e8b\u516c\u958b\u3057\u307e\u3057\u305f\u3002\n[Akka vs Erlang](http://qiita.com/okumin/items/b0e85704268dfb4741b5)\n\n## \u5206\u6563Erlang\u306b\u3064\u3044\u3066\n\nAkka\u3068\u540c\u3058\u304f\u3001Erlang\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306flocation transparency\u304c\u5099\u308f\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b9\u30e2\u30fc\u30eb\u306a\u5b9f\u884c\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n```\n$ erl -sname mofu\nErlang/OTP 17 [erts-6.2.1] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]\n\nEshell V6.2.1  (abort with ^G)\n(mofu@okumin-no-Mac-mini)1> register(mofu_shell, self()).\ntrue\n(mofu@okumin-no-Mac-mini)2> receive\n(mofu@okumin-no-Mac-mini)2>     {From, hello} -> From\n(mofu@okumin-no-Mac-mini)2> end.\n```\n\n\u307e\u305a\u306fmofu\u3068\u3044\u3046\u540d\u524d\u3067\u30b7\u30a7\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u3001\u81ea\u5206\u81ea\u8eab\u3092\u300cmofu_shell\u300d\u3068\u3044\u3046\u540d\u524d\u3067\u767b\u9332\u3057\u307e\u3059\u3002\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001Akka\u306eActorPath\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3088\u3046\u306b\u3001\u76f4\u63a5\u540d\u524d\u6307\u5b9a\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n2\u756a\u76ee\u306e\u51e6\u7406\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u3082\u306e\u3067\u3001Akka\u30a2\u30af\u30bf\u30fc\u306ereceive\u306e\u3088\u3046\u306b\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u53d7\u3051\u53d6\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3001\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u51e6\u7406\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4eca\u306f\u307e\u3060\u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u304c\u7a7a\u306a\u306e\u3067\u3001\u4f55\u304b\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u307e\u3067\u30b7\u30a7\u30eb\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\n\n```\nerl -sname poyo\nErlang/OTP 17 [erts-6.2.1] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]\n\nEshell V6.2.1  (abort with ^G)\n(poyo@okumin-no-Mac-mini)1> net_adm:names().\n{ok,[{\"mofu\",60995},{\"poyo\",60997}]}\n(poyo@okumin-no-Mac-mini)2> {mofu_shell, 'mofu@okumin-no-Mac-mini'} ! {self(), hello}.\n{<0.38.0>,hello}\n```\n\n\u30b7\u30a7\u30eb\u3092\u3082\u3046\u4e00\u3064\u3001\u4eca\u5ea6\u306fpoyo\u3068\u3044\u3046\u540d\u524d\u3067\u7acb\u3061\u4e0a\u3052\u307e\u3059\u3002\n\u6700\u521d\u306b\u30ed\u30fc\u30ab\u30eb\u306b\u3044\u308bErlang VM\u306eHOST\u3092\u5217\u6319(net_adm:names())\u3057\u3066\u307f\u307e\u3059\u3002mofu\u304c\u3044\u307e\u3059\u306d\u3002\n\u6b21\u306b\u5148\u307b\u3069\u767b\u9332\u3057\u305fmofu\u30b7\u30a7\u30eb\u306emofu_shell\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u3063\u3066\u307f\u307e\u3059\u3002Akka\u3067\u3044\u3048\u3070\u3001ActorSelection\u306b\u5bfe\u3057\u3066\u300c!\u300d\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\nAkka\u3068\u9055\u3044Erlang\u306e\u300c!\u300d\u6f14\u7b97\u5b50\u306f\u9001\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7d50\u679c\u3068\u3057\u3066\u8fd4\u3059\u306e\u3067\u3001\u300c{\\<0.38.0\\>,hello}\u300d\u3068\u3044\u3046\u5024\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u300c\\<0.38.0\\>\u300d\u306f\u30d7\u30ed\u30bb\u30b9ID(Akka\u3067\u3044\u3046ActorRef)\u3067\u3001\u300cself()\u300d\u304c\u8a55\u4fa1\u3055\u308c\u305f\u3082\u306e\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u30d7\u30ed\u30bb\u30b9ID\u306e\u6700\u521d\u306e\u6570\u5b57\u306f\u30db\u30b9\u30c8\u3092\u8868\u3057\u3001\u81ea\u5206\u3068\u540c\u3058VM\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u5834\u5408\u306f\u5fc5\u305a0\u3068\u306a\u308a\u307e\u3059\u3002\n\n```\n(mofu@okumin-no-Mac-mini)2> receive\n(mofu@okumin-no-Mac-mini)2>     {From, hello} -> From\n(mofu@okumin-no-Mac-mini)2> end.\n<7250.38.0>\n(mofu@okumin-no-Mac-mini)3>\n```\n\nmofu\u30b7\u30a7\u30eb\u306b\u79fb\u52d5\u3059\u308b\u3068\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5c4a\u304d\u3001\u300c\\<7250.38.0\\>\u300d\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u307e\u3057\u305f\u3002\npoyo\u30b7\u30a7\u30eb\u3067\u898b\u305f\u3068\u304d\u306f\u300c\\<0.38.0\\>\u300d\u3067\u3057\u305f\u304c\u3001mofu\u30b7\u30a7\u30eb\u306b\u3068\u3063\u3066\u306f\u5225VM\u306b\u5b58\u5728\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u306a\u306e\u3067\u3001\u6700\u521d\u306e\u6570\u5b57\u304c\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\u3082\u3061\u308d\u3093\u3001\u3053\u306e\u30d7\u30ed\u30bb\u30b9ID\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u304cErlang\u306b\u304a\u3051\u308b\u30ea\u30e2\u30fc\u30c8\u3068\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u306e\u4f8b\u3067\u3059\u3002\nAkka\u3068\u540c\u3058\u8981\u9818\u3067\u901a\u4fe1\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u305f\u3060\u3051\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Erlactor\n\n\u4eca\u56de\u4f5c\u3063\u305fAkka\u30a2\u30af\u30bf\u30fc\u304b\u3089Erlang\u30d7\u30ed\u30bb\u30b9\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u7c21\u5358\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\n[Erlactor](https://github.com/okumin/erlactor)\n\nErlang\u304c\u3059\u3054\u3044\u5f97\u610f\u306a\u77e5\u308a\u5408\u3044O\u3055\u3093\u306b\u3001[\u5206\u6563Erlang\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3057\u305fJava\u30e9\u30a4\u30d6\u30e9\u30ea](http://www.erlang.org/doc/apps/jinterface/jinterface_users_guide.html)\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3068\u6559\u308f\u3063\u305f\u306e\u3067\u305d\u308c\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nErlang\u30d7\u30ed\u30bb\u30b9\u3092\u8868\u73fe\u3057\u305fActor\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092Scala\u5074\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001(\u9001\u4fe1\u53ef\u80fd\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5236\u9650\u3055\u308c\u308b\u304c)\u666e\u901a\u306eAkka\u30a2\u30af\u30bf\u30fc\u3068\u3084\u308a\u3068\u308a\u3059\u308b\u306e\u3068\u540c\u3058\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3001\u3068\u3044\u3063\u305f\u5b9f\u88c5\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u8a73\u7d30\u306fgithub\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u2026\u2026Echo\u30b5\u30fc\u30d0\u3092Erlang\u3067\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092Akka\u3067\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u305f\u306e\u3067\u30c7\u30e2\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\n### \u30b5\u30fc\u30d0\n\n```erlang\n-module(yamabiko_server).\n-export([start_link/0]).\n\nstart_link() ->\n    spawn_link(fun loop/0).\n\nloop() ->\n    receive\n        {From, identity} -> % \u30d7\u30ed\u30bb\u30b9\u3092\u53d6\u5f97\u3059\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\n            send(From, self()),\n            loop();\n        {From, Term} -> % Echo\n            send(From, Term),\n            loop();\n        Unexpected ->\n            io:format(\"Received an unexpected message, ~s~n\", [Unexpected]),\n            loop()\n    end.\n\nsend({Pid, Ref}, Message) ->\n    Pid ! {Ref, Message}.\n```\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n\n```scala\nobject Sample {\n  val system = ActorSystem(\"erlactor\")\n  val yamabikoClient = system.actorOf(Props(classOf[YamabikoClient]), name = \"yamabiko-client\")\n\n  implicit val timeout = Timeout(3.seconds)\n\n  case class YamabikoRequest(name: RemoteProcessName, term: ErlangTerm)\n  case class KillYamabiko(name: RemoteProcessName)\n\n  class YamabikoClient extends Actor with ActorLogging {\n    private[this] val extension = ErlactorExtension(system)\n\n    override def receive: Receive = {\n      case YamabikoRequest(name, term) =>\n        val response = for {\n          process <- extension.resolveByName(name)\n          response <- (process ? Ask(term)).mapTo[ErlangTerm]\n        } yield response\n        response.onComplete {\n          case Success(t) =>\n            log.info(s\"Yamabiko returned. $t\")\n          case Failure(e) =>\n            log.error(e, \"Yamabiko failed.\")\n        }\n    }\n  }\n}\n```\n\n### \u30c7\u30e2\n\n\u307e\u305aEcho\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```\n$ erl -sname mofu                                                                   \nErlang/OTP 17 [erts-6.2.1] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]\n\nEshell V6.2.1  (abort with ^G)\n(mofu@okumin-no-Mac-mini)1> c(yamabiko_server).\n{ok,yamabiko_server}\n(mofu@okumin-no-Mac-mini)2> Pid = yamabiko_server:start_link().\n<0.45.0>\n(mofu@okumin-no-Mac-mini)3> register(server, Pid).\ntrue\n```\n\n\u300cmofu\u300d\u3068\u3044\u3046\u540d\u524d\u3067VM\u3092\u8d77\u52d5\u3057\u3066\u3001\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u3092\u300cserver\u300d\u3068\u3044\u3046\u540d\u524d\u3067\u767b\u9332\u3057\u307e\u3059\u3002\n\n```\nsbt console                                                                \u23ce \u2739 \u272d\nUse of ~/.sbtconfig is deprecated, please migrate global settings to /usr/local/etc/sbtopts\n[info] Loading global plugins from /Users/okumin/.sbt/0.13/plugins\n[info] Loading project definition from /Users/okumin/Documents/program/product/erlactor/project\n[info] Set current project to erlactor (in build file:/Users/okumin/Documents/program/product/erlactor/)\n[info] Starting scala interpreter...\n[info]\nWelcome to Scala version 2.10.4 (Java HotSpot(TM) 64-Bit Server VM, Java 1.7.0_55).\nType in expressions to have them evaluated.\nType :help for more information.\n\nscala> import sample.Sample._\nimport sample.Sample._\n\nscala> import erlactor.ErlactorSelection._\nimport erlactor.ErlactorSelection._\n\nscala> import erlactor.ErlangTerm._\nimport erlactor.ErlangTerm._\n\nscala> sample.Sample // \u521d\u671f\u5316\nres0: sample.Sample.type = sample.Sample$@2d147608\n```\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3082\u7acb\u3061\u4e0a\u3052\u308b\u3068\u3001\n\n```\n(mofu@okumin-no-Mac-mini)4> net_adm:ping('erlactor@okumin-no-Mac-mini').\npong\n```\n\nErlang\u5074\u304b\u3089Akka\u306b\u3064\u306a\u304c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3061\u306a\u307f\u306b\u3053\u306eping\u306a\u3057\u3060\u3068\u3053\u308c\u4ee5\u964d\u306e\u51e6\u7406\u304c\u306a\u305c\u304b\u52d5\u304d\u307e\u305b\u3093\u3002\n\n```\nscala> yamabikoClient ! YamabikoRequest(RemoteProcessName(node = \"mofu\", name = \"server\"), ErlangList(\"yahoo!\"))\n\nscala> [INFO] [12/17/2014 10:28:26.152] [erlactor-akka.actor.default-dispatcher-6] [akka://erlactor/user/erlactor-selection] Waiting the response...\n[INFO] [12/17/2014 10:28:26.169] [erlactor-akka.actor.default-dispatcher-6] [akka://erlactor/user/erlactor-selection] Get Erlactor Actor[akka://erlactor/user/erlactor-selection/erlactor-mofu@okumin-no-Mac-mini-45-0-1#-1919978540]\n[INFO] [12/17/2014 10:28:26.179] [ForkJoinPool-2-worker-5] [akka://erlactor/user/yamabiko-client] Yamabiko returned. ErlangTuple2(ErlangRef(erlactor@okumin-no-Mac-mini,[I@6fa33b9d,2),ErlangList(List(ErlangInteger(121), ErlangInteger(97), ErlangInteger(104), ErlangInteger(111), ErlangInteger(111), ErlangInteger(33))))\n\nscala> yamabikoClient ! YamabikoRequest(RemoteProcessName(node = \"mofu\", name = \"server\"), ErlangTrue)\n\nscala> [INFO] [12/17/2014 10:29:07.341] [ForkJoinPool-2-worker-1] [akka://erlactor/user/yamabiko-client] Yamabiko returned. ErlangTuple2(ErlangRef(erlactor@okumin-no-Mac-mini,[I@3a34b8fd,2),ErlangAtom(true))\n```\n\n\u9001\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3061\u3083\u3093\u3068\u8fd4\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u6210\u529f\u3067\u3059\u3002\n\n## JInterface\u306e\u611f\u60f3\n\nAPI\u81ea\u4f53\u306f\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3001\u4f7f\u3044\u3084\u3059\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3057\u305f\u3002\nPING\u3084node\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308bAPI\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30c7\u30d0\u30c3\u30b0\u3082\u7c21\u5358\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u6c17\u306b\u306a\u3063\u305f\u306e\u306f\u4ee5\u4e0b\u306e2\u70b9\u3067\u3057\u3087\u3046\u304b\u3002\n\n* Erlang\u5074\u304b\u3089\u4e00\u5ea6ping\u3092\u6483\u3063\u3066\u3082\u3089\u308f\u306a\u3044\u3068\u306a\u305c\u304b\u63a5\u7d9a\u3067\u304d\u306a\u3044\n* \u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u306e\u4e2d\u8eab\u3092\u53d6\u308a\u51fa\u3059API\u304c\u30b9\u30ec\u30c3\u30c9\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\n\n[\u5206\u6563Erlang\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u308b](http://erlang.org/doc/apps/erts/erl_dist_protocol.html)\u306e\u3067\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u8aad\u3093\u3067\u81ea\u5206\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\u306e\u3082\u697d\u3057\u305d\u3046\u3060\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n", "tags": ["Scala", "Akka", "Erlang"]}