{"context": "React \u3084 Redux \u306b\u306f\u63a8\u5968\u3055\u308c\u3066\u3044\u308b\u898f\u7d04\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\nT.J. \u306e Frontend Boilerplate \u3084 Airbnb React Style Guide \u3092\u53c2\u8003\u306b\u3057\u3066\n\u524d\u56de \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u898f\u7d04\u3092\u9069\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nLearning\n\n\u30d5\u30a1\u30a4\u30eb\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e \u547d\u540d\u898f\u7d04 \u3092\u9069\u7528\u3059\u308b\u3002\n\u30a2\u30af\u30b7\u30e7\u30f3\u306b Flux Standard Action \u3092\u5229\u7528\u3059\u308b\u3002\n\n\nConvention\nReact \u306e Data Flow \u306f Container -> Component \u306e\u5358\u4e00\u65b9\u5411\u3067\u3059\u3002\nRedux \u306e Data Flow \u306f Action -> Reducer -> Store \u306e\u5358\u4e00\u65b9\u5411\u3067\u3059\u3002\n\u3064\u307e\u308a Data Flow \u306e Context \u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea, \u30d5\u30a1\u30a4\u30eb\u306b\u5206\u96e2\u3057\u307e\u3059\u3002\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306f index.js \u304c\u8a2d\u7f6e\u3055\u308c import \u3067\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n\u30b3\u30f3\u30c6\u30ca \u3084 \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u306f\u30ad\u30e3\u30e1\u30eb\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n\u30b3\u30f3\u30c6\u30ca \u3084 \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u306f1\u3064\u306e \u30d5\u30a1\u30a4\u30eb \u30671\u3064\u306e \u30af\u30e9\u30b9 \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u30a2\u30af\u30b7\u30e7\u30f3\u306f Flux Standard Action \u3067\u5b9a\u7fa9\u3059\u308b\u3002\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u540d\u524d\u3067\u8a2d\u7f6e\u3059\u308b\u7a2e\u985e\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n\n\ncontainers: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u90e8\u54c1\uff09\u3092\u8f09\u305b\u308b \u30b3\u30f3\u30c6\u30ca \u3092\u8a2d\u7f6e\u3059\u308b\u3002\n\ncomponents: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u90e8\u54c1\uff09\u3092\u8a2d\u7f6e\u3059\u308b\u3002\n\nactions: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30af\u30b7\u30e7\u30f3\uff08\u884c\u52d5\uff09\u3092\u8a2d\u7f6e\u3059\u308b\u3002\n\nreducers: \u30a2\u30af\u30b7\u30e7\u30f3\uff08\u884c\u52d5\uff09\u306b\u3088\u308b\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u6a5f\u80fd\u3092\u8a2d\u7f6e\u3059\u308b\u3002\n\nstore: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u6a5f\u69cb\u3092\u8a2d\u7f6e\u3059\u308b\u3002\n\n\n\n\nEnvironment\n\nnode: v4.4.5\nnpm: v3.9.6\n\n\nComment Box Form\n\n\u5b8c\u6210\u3055\u308c\u308b Source Code \u306e\u30d5\u30a1\u30a4\u30eb\u30ea\u30b9\u30c8\u3067\u3059\u3002\n\n$ tree -a -I node_modules\n.\n\u251c\u2500\u2500 .babelrc\n\u251c\u2500\u2500 app\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 actions\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 components\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Comment\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CommentBox\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CommentForm\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 CommentList\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 containers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 App\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 reducers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 store\n\u2502\u00a0\u00a0      \u2514\u2500\u2500 index.js\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 style.css\n\u2514\u2500\u2500 webpack.config.js\n\nLet's hands-on\n\nSetup application\n\n\ngit clone \u30b3\u30de\u30f3\u30c9\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nnpm install \u30b3\u30de\u30f3\u30c9\u3067\u4f9d\u5b58\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n$ git clone https://github.com/ogom/react-comment-box-example.git\n$ cd react-comment-box-example\n$ git checkout es2015\n$ npm install\n\n\nStart HTTP Server\n\n\nnpm start \u30b3\u30de\u30f3\u30c9\u3067 Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u30d6\u30e9\u30a6\u30b6\u3067 http://localhost:4000 \u3092\u30ed\u30fc\u30c9\u3059\u308b\u3068 Comment Box Example \u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n$ npm start\n$ open http://localhost:4000\n\n(API Server \u306f React Tutorial Example (Express) \u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002)\n\nWebpack Entry\n\n\u307e\u305a\u306f app \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u305d\u3053\u306b index.js \u30d5\u30a1\u30a4\u30eb\u3092\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n$ mkdir app/\n$ mv index.js app/.\n\n\n\napp/index.js \u306b\u79fb\u52d5\u3057\u305f\u306e\u3067 entry \u3092 app/index \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\nwebpack.config.js\n var webpack = require('webpack')\n\n module.exports = {\n-  entry: './index',\n+  entry: './app/index',\n   output: {\n     filename: 'bundle.js'\n   },\n\n\n\n\napp.js \u306f\u4e00\u3064\u4e0a\u306e\u968e\u5c64\u306a\u306e\u3067 ../app \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\napp/index.js\n-import CommentBox from './app'\n+import CommentBox from '../app'\n\n\n\nContainers\n\n\u3064\u304e\u306b\u30b3\u30f3\u30c6\u30ca\u306e app/containers \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u305d\u3053\u306b app.js \u30d5\u30a1\u30a4\u30eb\u3092\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n$ mkdir app/containers\n$ mkdir app/containers/App\n$ mv app.js app/containers/App/index.js\n\n\n\n../app \u3092 ./containers/App \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\napp/index.js\n-import CommentBox from '../app'\n+import CommentBox from './containers/App'\n\n\n\nComponents\n\n\u305d\u3057\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e app/components \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n$ mkdir app/components\n\n\nComment\n\n\napp/components/Comment/index.js \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n$ mkdir app/components/Comment\n$ touch app/components/Comment/index.js\n\n\n\u30b3\u30f3\u30c6\u30ca\u306e class Comment \u3092 app/components/Comment/index.js \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n\n\u30b3\u30fc\u30c9\u304c\u5dee\u5206\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u5168\u3066\u5dee\u3057\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\napp/components/Comment/index.js\nimport React, { Component } from 'react'\nimport Remarkable from 'remarkable'\n\nclass Comment extends Component {\n  rawMarkup() {\n    const md = new Remarkable()\n    const rawMarkup = md.render(this.props.children.toString())\n    return { __html: rawMarkup }\n  }\n\n  render() {\n    return (\n      <div className=\"comment\">\n        <h2 className=\"commentAuthor\">\n          {this.props.author}\n        </h2>\n        <span dangerouslySetInnerHTML={this.rawMarkup()} />\n      </div>\n    )\n  }\n}\n\nexport default Comment\n\n\n\n\u30b3\u30f3\u30c6\u30ca\u306e Remarkable \u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u79fb\u52d5\u3057\u305f\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\n\u30b3\u30f3\u30c6\u30ca\u306b Comment \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\napp/containers/App/index.js\n-import Remarkable from 'remarkable'\n+import Comment from '../../components/Comment'\n\n\n\nCommentList\n\n\napp/components/CommentList/index.js \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n$ mkdir app/components/CommentList\n$ touch app/components/CommentList/index.js\n\n\n\u30b3\u30f3\u30c6\u30ca\u306e class CommentList \u3092 app/components/CommentList/index.js \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n\napp/components/CommentList/index.js\nimport React, { Component } from 'react'\nimport Comment from '../../components/Comment'\n\nclass CommentList extends Component {\n  render() {\n    const commentNodes = this.props.data.map((comment) => {\n      return (\n        <Comment author={comment.author} key={comment.id}>\n          {comment.text}\n        </Comment>\n      )\n    })\n    return (\n      <div className=\"commentList\">\n        {commentNodes}\n      </div>\n    )\n  }\n}\n\nexport default CommentList\n\n\n\n\u30b3\u30f3\u30c6\u30ca\u306e Comment \u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u79fb\u52d5\u3057\u305f\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\n\u30b3\u30f3\u30c6\u30ca\u306b CommentList \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\napp/containers/App/index.js\n-import Comment from '../../components/Comment'\n+import CommentList from '../../components/CommentList'\n\n\n\nCommentForm\n\n\napp/components/CommentForm/index.js \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n$ mkdir app/components/CommentForm\n$ touch app/components/CommentForm/index.js\n\n\n\u30b3\u30f3\u30c6\u30ca\u306e class CommentForm \u3092 app/components/CommentForm/index.js \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n\napp/components/CommentForm/index.js\nimport React, { Component } from 'react'\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {author: '', text: ''}\n  }\n\n  handleAuthorChange(e) {\n    this.setState({author: e.target.value})\n  }\n\n  handleTextChange(e) {\n    this.setState({text: e.target.value})\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    const author = this.state.author.trim()\n    const text = this.state.text.trim()\n    if (!text || !author) {\n      return\n    }\n    this.props.onCommentSubmit({author: author, text: text})\n    this.setState({author: '', text: ''})\n  }\n\n  render() {\n    return (\n      <form className=\"commentForm\" onSubmit={this.handleSubmit.bind(this)}>\n        <input\n          type=\"text\"\n          placeholder=\"Your name\"\n          value={this.state.author}\n          onChange={this.handleAuthorChange.bind(this)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Say something...\"\n          value={this.state.text}\n          onChange={this.handleTextChange.bind(this)}\n        />\n        <input type=\"submit\" value=\"Post\" />\n      </form>\n    )\n  }\n}\n\nexport default CommentForm\n\n\n\n\u30b3\u30f3\u30c6\u30ca\u306b CommentForm \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\napp/containers/App/index.js\n+import CommentForm from '../../components/CommentForm'\n\n\n\nCommentBox\n\n\napp/components/CommentBox/index.js \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n$ mkdir app/components/CommentBox\n$ touch app/components/CommentBox/index.js\n\n\n\u30b3\u30f3\u30c6\u30ca\u306e class CommentBox \u3092 app/components/CommentBox/index.js \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\nthis.props.showComments \u3092 this.props.actions.showComments \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\nthis.props.addComment \u3092 this.props.actions.addComment \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n(Middleware \u306f\u5229\u7528\u3057\u306a\u3044\u3067\u30b3\u30f3\u30c6\u30ca\u306b Ajax \u3092\u6b8b\u3057\u3066\u3044\u307e\u3059\u3002)\n\napp/components/CommentBox/index.js\nimport React, { Component } from 'react'\nimport CommentList from '../../components/CommentList'\nimport CommentForm from '../../components/CommentForm'\nimport $ from 'jquery'\n\nclass CommentBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {data: []}\n  }\n\n  loadCommentsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: function(data) {\n        this.props.actions.showComments(data)\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.error(this.props.url, status, err.toString())\n      }.bind(this)\n    })\n  }\n\n  handleCommentSubmit(comment) {\n    const comments = this.state.data\n    // Optimistically set an id on the new comment. It will be replaced by an\n    // id generated by the server. In a production application you would likely\n    // not use Date.now() for this and would have a more robust system in place.\n    comment.id = Date.now()\n    this.props.actions.addComment(comment)\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      type: 'POST',\n      data: comment,\n      success: function(data) {\n        this.props.actions.showComments(data)\n      }.bind(this),\n      error: function(xhr, status, err) {\n        this.props.actions.showComments(comments)\n        console.error(this.props.url, status, err.toString())\n      }.bind(this)\n    })\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer()\n    setInterval(this.loadCommentsFromServer.bind(this), this.props.pollInterval)\n  }\n\n  render() {\n    return (\n      <div className=\"commentBox\">\n        <h1>Comments</h1>\n        <CommentList data={this.props.data} />\n        <CommentForm onCommentSubmit={this.handleCommentSubmit.bind(this)} />\n      </div>\n    )\n  }\n}\n\nexport default CommentBox\n\n\n\n\u30b3\u30f3\u30c6\u30ca\u306b CommentBox \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\nCommentBox \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b data \u3068 actions \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\napp/containers/index.js\nimport React, { Component } from 'react'\nimport CommentBox from '../../components/CommentBox'\nimport { connect } from 'react-redux'\n\nclass App extends Component {\n  render() {\n    const { data, actions } = this.props\n    return (\n      <div>\n        <CommentBox\n          data={data}\n          actions={actions}\n          url=\"http://localhost:3000/api/comments\"\n          pollInterval={2000}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: {\n      showComments(comments) {\n        dispatch({type: 'show_comments', comments: comments})\n      },\n      addComment(comment) {\n        dispatch({type: 'add_comment', comment: comment})\n      }\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n\n\n\nCommentBox \u3092 App \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\nApp \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092 <App /> \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\napp/index.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport App from './containers/App'\n\nconst store = createStore((state=[], action) => {\n  switch (action.type) {\n  case 'show_comments':\n    return action.comments\n  case 'add_comment':\n    return state.concat([action.comment])\n  default:\n    return state\n  }\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('content')\n)\n\n\n\nStore\n\n\napp/store/index.js \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n$ mkdir app/store\n$ touch app/store/index.js\n\n\n\ncreateStore \u3092 app/store/index.js \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n\napp/store/index.js\nimport { createStore } from 'redux'\n\nexport default () => {\n  const store = createStore((state=[], action) => {\n    switch (action.type) {\n    case 'show_comments':\n      return action.comments\n    case 'add_comment':\n      return state.concat([action.comment])\n    default:\n      return state\n    }\n  })\n\n  return store\n}\n\n\n\n\nconfigureStore \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\napp/index.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './containers/App'\nimport configureStore from './store'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('content')\n)\n\n\n\nReducers\n\n\napp/reducers/index.js \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n$ mkdir app/reducers\n$ touch app/reducers/index.js\n\n\n\u30ea\u30c7\u30e5\u30fc\u30b5\u3092 app/reducers/index.js \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n\napp/reducers/index.js\nexport default (state=[], action) => {\n  switch (action.type) {\n  case 'show_comments':\n    return action.comments\n  case 'add_comment':\n    return state.concat([action.comment])\n  default:\n    return state\n  }\n}\n\n\n\n\u30b9\u30c8\u30a2\u306b reducers \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\napp/store/index.js\nimport { createStore } from 'redux'\nimport reducers from '../reducers'\n\nexport default () => {\n  return createStore(reducers)\n}\n\n\n\nActions\n\nFlux Standard Action \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n$ npm install redux-actions --save-dev\n\n\n\napp/reducers/index.js \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n$ mkdir app/actions\n$ touch app/actions/index.js\n\n\n\u30a2\u30af\u30b7\u30e7\u30f3\u306b createAction \u3067 showComments \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30a2\u30af\u30b7\u30e7\u30f3\u306b createAction \u3067 addComment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\napp/actions/index.js\nimport { createAction } from 'redux-actions'\n\nexport const showComments = createAction('show_comments')\nexport const addComment = createAction('add_comment')\n\n\n\n\u30ea\u30c7\u30e5\u30fc\u30b5\u306b handleActions \u3067 reducerMap \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\napp/reducers/index.js\nimport { handleActions } from 'redux-actions'\n\nconst initialState = []\n\nconst reducerMap = {\n  show_comments(state, action) {\n    return action.payload\n  },\n  add_comment(state, action) {\n    return state.concat([action.payload])\n  }\n}\n\nexport default handleActions(reducerMap, initialState)\n\n\n\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b bindActionCreators \u3067 Actions \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\napp/containers/App/index.js\nimport React, { Component } from 'react'\nimport CommentBox from '../../components/CommentBox'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as Actions from '../../actions'\n\nclass App extends Component {\n  render() {\n    const { data, actions } = this.props\n    return (\n      <div>\n        <CommentBox\n          data={data}\n          actions={actions}\n          url=\"http://localhost:3000/api/comments\"\n          pollInterval={2000}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(Actions, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n\nCongrats!\n\n\u30b3\u30fc\u30c9 \u3092 Component, Container, Action, Reducer, Store \u306e \u30d5\u30a1\u30a4\u30eb \u306b\u5206\u96e2\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306f CSS \u3092 \u30ed\u30fc\u30ab\u30eb\u30b9\u30b3\u30fc\u30d7 \u306b\u3057\u307e\u3057\u3087\u3046\uff01\n\n[React](https://facebook.github.io/react/) \u3084 [Redux](http://redux.js.org/) \u306b\u306f\u63a8\u5968\u3055\u308c\u3066\u3044\u308b\u898f\u7d04\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n[T.J. \u306e Frontend Boilerplate](https://github.com/tj/frontend-boilerplate) \u3084 [Airbnb React Style Guide](https://github.com/airbnb/javascript/tree/master/react) \u3092\u53c2\u8003\u306b\u3057\u3066\n[\u524d\u56de](http://qiita.com/ogomr/items/3f0d7a35d5d0184db019) \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u898f\u7d04\u3092\u9069\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## Learning\n\n* \u30d5\u30a1\u30a4\u30eb\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e *\u547d\u540d\u898f\u7d04* \u3092\u9069\u7528\u3059\u308b\u3002\n* \u30a2\u30af\u30b7\u30e7\u30f3\u306b *Flux Standard Action* \u3092\u5229\u7528\u3059\u308b\u3002\n\n## Convention\n\nReact \u306e Data Flow \u306f *Container -> Component* \u306e\u5358\u4e00\u65b9\u5411\u3067\u3059\u3002\nRedux \u306e Data Flow \u306f *Action -> Reducer -> Store* \u306e\u5358\u4e00\u65b9\u5411\u3067\u3059\u3002\n\u3064\u307e\u308a Data Flow \u306e Context \u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea, \u30d5\u30a1\u30a4\u30eb\u306b\u5206\u96e2\u3057\u307e\u3059\u3002\n\n* \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306f `index.js` \u304c\u8a2d\u7f6e\u3055\u308c `import` \u3067\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002\n* *\u30b3\u30f3\u30c6\u30ca* \u3084 *\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8* \u306f\u30ad\u30e3\u30e1\u30eb\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002\n* *\u30b3\u30f3\u30c6\u30ca* \u3084 *\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8* \u306f1\u3064\u306e *\u30d5\u30a1\u30a4\u30eb* \u30671\u3064\u306e *\u30af\u30e9\u30b9* \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n* \u30a2\u30af\u30b7\u30e7\u30f3\u306f [Flux Standard Action](https://github.com/acdlite/flux-standard-action) \u3067\u5b9a\u7fa9\u3059\u308b\u3002\n* \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u540d\u524d\u3067\u8a2d\u7f6e\u3059\u308b\u7a2e\u985e\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n    * `containers`: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u90e8\u54c1\uff09\u3092\u8f09\u305b\u308b \u30b3\u30f3\u30c6\u30ca \u3092\u8a2d\u7f6e\u3059\u308b\u3002\n    * `components`: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u90e8\u54c1\uff09\u3092\u8a2d\u7f6e\u3059\u308b\u3002\n    * `actions`: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30af\u30b7\u30e7\u30f3\uff08\u884c\u52d5\uff09\u3092\u8a2d\u7f6e\u3059\u308b\u3002\n    * `reducers`: \u30a2\u30af\u30b7\u30e7\u30f3\uff08\u884c\u52d5\uff09\u306b\u3088\u308b\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u6a5f\u80fd\u3092\u8a2d\u7f6e\u3059\u308b\u3002\n    * `store`: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u6a5f\u69cb\u3092\u8a2d\u7f6e\u3059\u308b\u3002\n\n## Environment\n\n* node: v4.4.5\n* npm: v3.9.6\n\n## Comment Box Form\n\n* \u5b8c\u6210\u3055\u308c\u308b [Source Code](https://github.com/ogom/react-comment-box-example/tree/convention) \u306e\u30d5\u30a1\u30a4\u30eb\u30ea\u30b9\u30c8\u3067\u3059\u3002\n\n```bash\n$ tree -a -I node_modules\n.\n\u251c\u2500\u2500 .babelrc\n\u251c\u2500\u2500 app\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 actions\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 components\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Comment\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CommentBox\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CommentForm\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 CommentList\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 containers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 App\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 reducers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 store\n\u2502\u00a0\u00a0      \u2514\u2500\u2500 index.js\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 style.css\n\u2514\u2500\u2500 webpack.config.js\n```\n\n*Let's hands-on*\n\n### Setup application\n\n* `git clone` \u30b3\u30de\u30f3\u30c9\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n* `npm install` \u30b3\u30de\u30f3\u30c9\u3067\u4f9d\u5b58\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash\n$ git clone https://github.com/ogom/react-comment-box-example.git\n$ cd react-comment-box-example\n$ git checkout es2015\n$ npm install\n```\n\n### Start HTTP Server\n\n* `npm start` \u30b3\u30de\u30f3\u30c9\u3067 *Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3* \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n* \u30d6\u30e9\u30a6\u30b6\u3067 http://localhost:4000 \u3092\u30ed\u30fc\u30c9\u3059\u308b\u3068 **Comment Box Example** \u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ npm start\n$ open http://localhost:4000\n```\n\n(API Server \u306f [React Tutorial Example (Express)](http://qiita.com/ogomr/items/b90c68764c3c75cf501e) \u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002)\n\n### Webpack Entry\n\n* \u307e\u305a\u306f `app` \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n* \u305d\u3053\u306b `index.js` \u30d5\u30a1\u30a4\u30eb\u3092\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/\n$ mv index.js app/.\n```\n\n* `app/index.js` \u306b\u79fb\u52d5\u3057\u305f\u306e\u3067 `entry` \u3092 `app/index` \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```diff:webpack.config.js\n var webpack = require('webpack')\n\n module.exports = {\n-  entry: './index',\n+  entry: './app/index',\n   output: {\n     filename: 'bundle.js'\n   },\n```\n\n* `app.js` \u306f\u4e00\u3064\u4e0a\u306e\u968e\u5c64\u306a\u306e\u3067 `../app` \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```diff:app/index.js\n-import CommentBox from './app'\n+import CommentBox from '../app'\n```\n\n### Containers\n\n* \u3064\u304e\u306b\u30b3\u30f3\u30c6\u30ca\u306e `app/containers` \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n* \u305d\u3053\u306b `app.js` \u30d5\u30a1\u30a4\u30eb\u3092\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/containers\n$ mkdir app/containers/App\n$ mv app.js app/containers/App/index.js\n```\n\n* `../app` \u3092 `./containers/App` \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```diff:app/index.js\n-import CommentBox from '../app'\n+import CommentBox from './containers/App'\n```\n\n### Components\n\n* \u305d\u3057\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e `app/components` \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/components\n```\n\n#### Comment\n\n* `app/components/Comment/index.js` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/components/Comment\n$ touch app/components/Comment/index.js\n```\n\n* \u30b3\u30f3\u30c6\u30ca\u306e `class Comment` \u3092 `app/components/Comment/index.js` \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n    * *\u30b3\u30fc\u30c9\u304c\u5dee\u5206\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u5168\u3066\u5dee\u3057\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002*\n\n```js:app/components/Comment/index.js\nimport React, { Component } from 'react'\nimport Remarkable from 'remarkable'\n\nclass Comment extends Component {\n  rawMarkup() {\n    const md = new Remarkable()\n    const rawMarkup = md.render(this.props.children.toString())\n    return { __html: rawMarkup }\n  }\n\n  render() {\n    return (\n      <div className=\"comment\">\n        <h2 className=\"commentAuthor\">\n          {this.props.author}\n        </h2>\n        <span dangerouslySetInnerHTML={this.rawMarkup()} />\n      </div>\n    )\n  }\n}\n\nexport default Comment\n```\n\n* \u30b3\u30f3\u30c6\u30ca\u306e `Remarkable` \u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u79fb\u52d5\u3057\u305f\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\n* \u30b3\u30f3\u30c6\u30ca\u306b `Comment` \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```diff:app/containers/App/index.js\n-import Remarkable from 'remarkable'\n+import Comment from '../../components/Comment'\n```\n\n#### CommentList\n\n* `app/components/CommentList/index.js` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/components/CommentList\n$ touch app/components/CommentList/index.js\n```\n\n* \u30b3\u30f3\u30c6\u30ca\u306e `class CommentList` \u3092 `app/components/CommentList/index.js` \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n```app/components/CommentList/index.js\nimport React, { Component } from 'react'\nimport Comment from '../../components/Comment'\n\nclass CommentList extends Component {\n  render() {\n    const commentNodes = this.props.data.map((comment) => {\n      return (\n        <Comment author={comment.author} key={comment.id}>\n          {comment.text}\n        </Comment>\n      )\n    })\n    return (\n      <div className=\"commentList\">\n        {commentNodes}\n      </div>\n    )\n  }\n}\n\nexport default CommentList\n```\n\n* \u30b3\u30f3\u30c6\u30ca\u306e `Comment` \u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u79fb\u52d5\u3057\u305f\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\n* \u30b3\u30f3\u30c6\u30ca\u306b `CommentList` \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```diff:app/containers/App/index.js\n-import Comment from '../../components/Comment'\n+import CommentList from '../../components/CommentList'\n```\n\n#### CommentForm\n\n* `app/components/CommentForm/index.js` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/components/CommentForm\n$ touch app/components/CommentForm/index.js\n```\n\n* \u30b3\u30f3\u30c6\u30ca\u306e `class CommentForm` \u3092 `app/components/CommentForm/index.js` \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n```app/components/CommentForm/index.js\nimport React, { Component } from 'react'\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {author: '', text: ''}\n  }\n\n  handleAuthorChange(e) {\n    this.setState({author: e.target.value})\n  }\n\n  handleTextChange(e) {\n    this.setState({text: e.target.value})\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    const author = this.state.author.trim()\n    const text = this.state.text.trim()\n    if (!text || !author) {\n      return\n    }\n    this.props.onCommentSubmit({author: author, text: text})\n    this.setState({author: '', text: ''})\n  }\n\n  render() {\n    return (\n      <form className=\"commentForm\" onSubmit={this.handleSubmit.bind(this)}>\n        <input\n          type=\"text\"\n          placeholder=\"Your name\"\n          value={this.state.author}\n          onChange={this.handleAuthorChange.bind(this)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Say something...\"\n          value={this.state.text}\n          onChange={this.handleTextChange.bind(this)}\n        />\n        <input type=\"submit\" value=\"Post\" />\n      </form>\n    )\n  }\n}\n\nexport default CommentForm\n```\n\n* \u30b3\u30f3\u30c6\u30ca\u306b `CommentForm` \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```diff:app/containers/App/index.js\n+import CommentForm from '../../components/CommentForm'\n```\n\n#### CommentBox\n\n* `app/components/CommentBox/index.js` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/components/CommentBox\n$ touch app/components/CommentBox/index.js\n```\n\n* \u30b3\u30f3\u30c6\u30ca\u306e `class CommentBox` \u3092 `app/components/CommentBox/index.js` \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n* `this.props.showComments` \u3092 `this.props.actions.showComments` \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n* `this.props.addComment` \u3092 `this.props.actions.addComment` \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n(*Middleware* \u306f\u5229\u7528\u3057\u306a\u3044\u3067\u30b3\u30f3\u30c6\u30ca\u306b *Ajax* \u3092\u6b8b\u3057\u3066\u3044\u307e\u3059\u3002)\n\n```app/components/CommentBox/index.js\nimport React, { Component } from 'react'\nimport CommentList from '../../components/CommentList'\nimport CommentForm from '../../components/CommentForm'\nimport $ from 'jquery'\n\nclass CommentBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {data: []}\n  }\n\n  loadCommentsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: function(data) {\n        this.props.actions.showComments(data)\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.error(this.props.url, status, err.toString())\n      }.bind(this)\n    })\n  }\n\n  handleCommentSubmit(comment) {\n    const comments = this.state.data\n    // Optimistically set an id on the new comment. It will be replaced by an\n    // id generated by the server. In a production application you would likely\n    // not use Date.now() for this and would have a more robust system in place.\n    comment.id = Date.now()\n    this.props.actions.addComment(comment)\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      type: 'POST',\n      data: comment,\n      success: function(data) {\n        this.props.actions.showComments(data)\n      }.bind(this),\n      error: function(xhr, status, err) {\n        this.props.actions.showComments(comments)\n        console.error(this.props.url, status, err.toString())\n      }.bind(this)\n    })\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer()\n    setInterval(this.loadCommentsFromServer.bind(this), this.props.pollInterval)\n  }\n\n  render() {\n    return (\n      <div className=\"commentBox\">\n        <h1>Comments</h1>\n        <CommentList data={this.props.data} />\n        <CommentForm onCommentSubmit={this.handleCommentSubmit.bind(this)} />\n      </div>\n    )\n  }\n}\n\nexport default CommentBox\n```\n\n* \u30b3\u30f3\u30c6\u30ca\u306b `CommentBox` \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n* `CommentBox` \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b `data` \u3068 `actions` \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```app/containers/index.js\nimport React, { Component } from 'react'\nimport CommentBox from '../../components/CommentBox'\nimport { connect } from 'react-redux'\n\nclass App extends Component {\n  render() {\n    const { data, actions } = this.props\n    return (\n      <div>\n        <CommentBox\n          data={data}\n          actions={actions}\n          url=\"http://localhost:3000/api/comments\"\n          pollInterval={2000}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: {\n      showComments(comments) {\n        dispatch({type: 'show_comments', comments: comments})\n      },\n      addComment(comment) {\n        dispatch({type: 'add_comment', comment: comment})\n      }\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n```\n\n* `CommentBox` \u3092 `App` \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n* `App` \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092 `<App />` \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```app/index.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport App from './containers/App'\n\nconst store = createStore((state=[], action) => {\n  switch (action.type) {\n  case 'show_comments':\n    return action.comments\n  case 'add_comment':\n    return state.concat([action.comment])\n  default:\n    return state\n  }\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('content')\n)\n```\n\n### Store\n\n* `app/store/index.js` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/store\n$ touch app/store/index.js\n```\n\n* `createStore` \u3092 `app/store/index.js` \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n```js:app/store/index.js\nimport { createStore } from 'redux'\n\nexport default () => {\n  const store = createStore((state=[], action) => {\n    switch (action.type) {\n    case 'show_comments':\n      return action.comments\n    case 'add_comment':\n      return state.concat([action.comment])\n    default:\n      return state\n    }\n  })\n\n  return store\n}\n```\n\n* `configureStore` \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```js:app/index.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './containers/App'\nimport configureStore from './store'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('content')\n)\n```\n\n### Reducers\n\n* `app/reducers/index.js` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/reducers\n$ touch app/reducers/index.js\n```\n\n* \u30ea\u30c7\u30e5\u30fc\u30b5\u3092 `app/reducers/index.js` \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n```js:app/reducers/index.js\nexport default (state=[], action) => {\n  switch (action.type) {\n  case 'show_comments':\n    return action.comments\n  case 'add_comment':\n    return state.concat([action.comment])\n  default:\n    return state\n  }\n}\n```\n\n* \u30b9\u30c8\u30a2\u306b `reducers` \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```js:app/store/index.js\nimport { createStore } from 'redux'\nimport reducers from '../reducers'\n\nexport default () => {\n  return createStore(reducers)\n}\n```\n\n### Actions\n\n* Flux Standard Action \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash\n$ npm install redux-actions --save-dev\n```\n\n* `app/reducers/index.js` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir app/actions\n$ touch app/actions/index.js\n```\n\n* \u30a2\u30af\u30b7\u30e7\u30f3\u306b `createAction` \u3067 `showComments` \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n* \u30a2\u30af\u30b7\u30e7\u30f3\u306b `createAction` \u3067 `addComment` \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```app/actions/index.js\nimport { createAction } from 'redux-actions'\n\nexport const showComments = createAction('show_comments')\nexport const addComment = createAction('add_comment')\n```\n\n* \u30ea\u30c7\u30e5\u30fc\u30b5\u306b `handleActions` \u3067 `reducerMap` \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```app/reducers/index.js\nimport { handleActions } from 'redux-actions'\n\nconst initialState = []\n\nconst reducerMap = {\n  show_comments(state, action) {\n    return action.payload\n  },\n  add_comment(state, action) {\n    return state.concat([action.payload])\n  }\n}\n\nexport default handleActions(reducerMap, initialState)\n```\n\n* \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b `bindActionCreators` \u3067 `Actions` \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```app/containers/App/index.js\nimport React, { Component } from 'react'\nimport CommentBox from '../../components/CommentBox'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as Actions from '../../actions'\n\nclass App extends Component {\n  render() {\n    const { data, actions } = this.props\n    return (\n      <div>\n        <CommentBox\n          data={data}\n          actions={actions}\n          url=\"http://localhost:3000/api/comments\"\n          pollInterval={2000}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(Actions, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n```\n\n*Congrats!*\n\n----\n\n*\u30b3\u30fc\u30c9* \u3092 **Component**, **Container**, **Action**, **Reducer**, **Store** \u306e *\u30d5\u30a1\u30a4\u30eb* \u306b\u5206\u96e2\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306f [CSS \u3092 \u30ed\u30fc\u30ab\u30eb\u30b9\u30b3\u30fc\u30d7](http://qiita.com/ogomr/items/1f8f18a18ac9c2e79179) \u306b\u3057\u307e\u3057\u3087\u3046\uff01\n", "tags": ["redux", "reactjs", "Node.js"]}