{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nKotlin Reference\u306e\u65e5\u672c\u8a9e\u8a33\u3002\u8907\u6570\u306e\u8a18\u4e8b\u306b\u5206\u3051\u3066\u3044\u3066\u3001\u3053\u306e\u8a18\u4e8b\u306fBasic\u7ae0\u306b\u76f8\u5f53\u3059\u308b\u3002\n\u4e00\u6c17\u306b\u3056\u3063\u3068\u6587\u6cd5\u5168\u4f53\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u300c\uff13\uff10\u5206\u3067\u899a\u3048\u308bKotlin\u6587\u6cd5\u300d\u3092\u7528\u610f\u3057\u305f\u306e\u3067\u305d\u3061\u3089\u3092\u3069\u3046\u305e\u3002\n\u82f1\u8a9e\u3092\u305d\u306e\u307e\u307e\u8a33\u3057\u305f\u3082\u306e\u306f\u3069\u3046\u3057\u3066\u3082\u5206\u304b\u308a\u306b\u304f\u304f\u306a\u308a\u304c\u3061\u3002\u3053\u3053\u3067\u306f\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u305d\u306e\u307e\u307e\u306b\u3053\u3060\u308f\u3063\u3066\u306a\u304f\u3066\u3001\u5185\u5bb9\u3092\u7406\u89e3\u3057\u305f\u4e0a\u3067\u9069\u5b9c\u8868\u73fe\u3092\u5909\u3048\u305f\u308a\u88dc\u8db3\u3057\u305f\u308a\u7701\u7565\u3057\u305f\u308a\u3057\u3066\u3044\u308b\u3002\n\u4ed6\u306e\u4eba\u306e\u8a18\u4e8b\u3067\u300cKotlin\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u65e5\u672c\u8a9e\u5316\u3057\u3066\u307f\u305f[\u524d\u7de8]\u300d\u3063\u3066\u3044\u3046\u306e\u3082\u3042\u3063\u3066\u3001\u6700\u521d\u306eGetting Started\u7ae0\u304b\u3089\u8a33\u3055\u308c\u3066\u308b\u3002\n\n\u76ee\u6b21\n\u8907\u6570\u306e\u8a18\u4e8b\u306b\u5206\u3051\u3066\u3044\u308b\u306e\u3067\u3053\u3053\u306b\u5168\u4f53\u50cf\u306e\u30ea\u30f3\u30af\u3092\u8cbc\u3063\u3066\u304a\u304f\u3002\n\n\u57fa\u672c \uff08\u3053\u306e\u8a18\u4e8b\uff09\n\u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\n\u30af\u30e9\u30b9\u3001\u7d99\u627f\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3001\u30a2\u30af\u30bb\u30b9\u4fee\u98fe\u5b50\u3001\u62e1\u5f35\n\u30c7\u30fc\u30bf\u30af\u30e9\u30b9, \u30b8\u30a7\u30cd\u30ea\u30af\u30b9\n\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30af\u30e9\u30b9\u3001Enum\u30af\u30e9\u30b9\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u59d4\u8b72\u3001\u59d4\u8b72\u3055\u308c\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\n\n\n\u95a2\u6570\u3068\u30e9\u30e0\u30c0\n\u305d\u306e\u4ed6\n\n\n\u5206\u89e3\u5ba3\u8a00\u3001\u7bc4\u56f2\u3001\u578b\u30c1\u30a7\u30c3\u30af\u3068\u30ad\u30e3\u30b9\u30c8\nthis\u3001\u7b49\u4fa1\u6027\u3001\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3001Null\u5b89\u5168\u3001\u4f8b\u5916\n \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3001\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3001\u578b\u5b89\u5168\u306a\u30d3\u30eb\u30c0\u30fc\u3001\u52d5\u7684\u578b\n\n\n\nJava\u3068\u306e\u76f8\u4e92\u904b\u7528\n\n\nNullable\u306b\u3064\u3044\u3066\n\u3053\u306e\u7ae0\u3088\u308a\u5f8c\u3067\u8aac\u660e\u3055\u308c\u308b Nullable \u3068\u3044\u3046\u306e\u304c\u8aac\u660e\u306b\u51fa\u3066\u304f\u308b\u3002Kotlin\u3067\u306f\u5909\u6570\u306b null \u306f\u5165\u308c\u3089\u308c\u306a\u3044\u306e\u3067\u3001null \u304b\u53c2\u7167\u3092\u5165\u308c\u3089\u308c\u308b\u7279\u5225\u306a Nullable \u3068\u3044\u3046\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\nInt \u306e\u53c2\u7167\u304b null \u304c\u5165\u308c\u3089\u308c\u308b Nullable \u306f Int? \u3068\u8a18\u8ff0\u3059\u308b\u3002\u305d\u306e\u4ed6\u306e\u69cb\u6587\u306f\u5f8c\u307b\u3069\u3002\u69cb\u6587\u3082\u542b\u3081\u3066Swift\u3067\u306eOptional\u3068\u540c\u69d8\u306e\u3082\u306e\u3002\n\n\u57fa\u672c\u578b\nKotlin\u3067\u306f\u5168\u3066\u304c\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\u5b9f\u969b\u306b\u306f\u901f\u5ea6\u7684\u306a\u89b3\u70b9\u304b\u3089\u30d3\u30eb\u30c8\u30a4\u30f3\u578b\u3082\u3042\u308b\u304c\u3001\u305d\u308c\u3089\u3082\u5229\u7528\u8005\u304b\u3089\u306f\u666e\u901a\u306e\u30af\u30e9\u30b9\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u3002\n\n\u6570\u5024\n\u6570\u5024\u306e\u6271\u3044\u306fJava\u306b\u8fd1\u3044\u304c\u5168\u304f\u540c\u3058\u3067\u306f\u306a\u3044\u3002\u6570\u5024\u306f\u6697\u9ed9\u306e\u578b\u5909\u63db\u304c\u884c\u308f\u308c\u305a\u3001\u8a18\u6cd5\u3082\u5c11\u3057\u9055\u3046\u5834\u5408\u304c\u3042\u308b\u3002\n\n\n\n\u578b\n\u30d3\u30c3\u30c8\u6570\n\n\n\n\nDouble\n64\n\n\nFloat\n32\n\n\nLong\n64\n\n\nInt\n32\n\n\nShort\n16\n\n\nByte\n8\n\n\n\n\n\u6570\u5024\u5b9a\u6570\n\n\uff11\uff10\u9032\u6570: 123\n\n\nLong\u306a\u3089\u5f8c\u308d\u306bL\u3092\u3064\u3051\u308b: 123L\n\n\n\uff11\uff16\u9032\u6570: 0x0F\n\uff12\u9032\u6570: 0b00001011\n\n\uff08\uff18\u9032\u6570\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\uff09\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fDouble: 123.5, 123.5e10\nFloat\u306f\u5f8c\u308d\u306bf\u304bF\u3092\u3064\u3051\u308b: 123.5f\n\n\n\u8868\u73fe\nInt? \u306a\u3069\u306eNullable\u3084\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u306f\u3001\u6570\u5024\u306fboxing\u3055\u308c\u308b\u3002\nval a: Int = 10000 // \u3053\u308c\u306fJVM\u306e\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u308b\nprint(a === a) // 'true'\u3068\u8868\u793a\u3055\u308c\u308b\nval boxedA: Int? = a    // boxing\u3055\u308c\u308b\nval anotherBoxedA: Int? = a // boxing\u3055\u308c\u308b\nprint(boxedA === anotherBoxedA) // !!!'false'\u3068\u8868\u793a\u3055\u308c\u308b!!!\n// \u5185\u90e8\u306e\u5024\u306e\u7b49\u4fa1\u6027\u306f\u4fdd\u6301\u3055\u308c\u308b\nprint(boxedA == anotherBoxedA) // 'true'\u3068\u8868\u793a\u3055\u308c\u308b\n\n\uff08\u6ce8: ===\u306f\u53c2\u7167\u306e\u7b49\u4fa1\u6027, ==\u306f\u69cb\u9020\u306e\u7b49\u4fa1\u6027\u306e\u6bd4\u8f03\u3002\u3064\u307e\u308a==\u306fJava\u3067\u3044\u3046equals\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308b\u6bd4\u8f03\u3002\uff09\n\n\u660e\u793a\u7684\u306a\u578b\u5909\u63db\n\u5c0f\u3055\u3044\u578b\u306f\u5927\u304d\u3044\u578b\u306e\u30b5\u30d6\u578b\u3063\u3066\u308f\u3051\u3058\u3083\u306a\u3044\u3002\u3082\u3057\u305d\u3046\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u3067\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3002\n// \u3082\u3057\u301c\u3060\u3063\u305f\u3089\u7684\u306a\u4eee\u60f3\u30b3\u30fc\u30c9\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u3002\nval a: Int? = 1 // Int (java.lang.Integer)\u306bBoxing\u3055\u308c\u308b\nval b: Long? = a // \u6697\u9ed9\u5909\u63db\u3067 Long (java.lang.Long)\u306bBoxing\u3055\u308c\u308b\nprint(a == b) // \u3061\u3087www\u3053\u3044\u3064\"false\"\u3068\u304b\u8a00\u3046www\n// Long\u306eequals()\u304c\u3082\u3046\u4e00\u65b9\u306e\u578b\u3082Long\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u304b\u3089\u306a\u3093\u3067\u3059\u306d\u301c\n\n\u305d\u3093\u306a\u308f\u3051\u3067\u5c0f\u3055\u3044\u578b\u306f\u5927\u304d\u3044\u65b9\u306b\u6697\u9ed9\u7684\u306b\u5909\u63db\u3055\u308c\u306a\u3044\u3002\n// 1\u306fInt\u3060\u3051\u3069\u5909\u6570\u578b\u304cByte\u306a\u306e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306bByte\u578b\u306e\u6570\u5024\u3068\u3057\u3066\u6271\u308f\u308c\u308b\nval b: Byte = 1 // OK, \u6570\u5024\u306f\u9759\u7684\u306b\u30c1\u30a7\u30c3\u30af\u3055\u308c\u308b\n// Byte\u578b\u306e\u5024\u3092Int\u578b\u306b\u683c\u7d0d\u3057\u3066\u3082\u6697\u9ed9\u578b\u5909\u63db\u306f\u3055\u308c\u306a\u3044\nval i: Int = b // ERROR\n\nval i: Int = b.toInt() // OK: \u660e\u793a\u7684\u306b\u578b\u5909\u63db\n\n\u5168\u3066\u306e\u6570\u5024\u578b\u306f\u6b21\u306e\u578b\u5909\u63db\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u3002\n\ntoByte(): Byte\ntoShort(): Short\ntoInt(): Int\ntoLong(): Long\ntoFloat(): Float\ntoDouble(): Double\ntoChar(): Char\n\n\u6697\u9ed9\u306e\u578b\u5909\u63db\u304c\u306a\u3044\u3053\u3068\u306f\u578b\u63a8\u8ad6\u3068\u7b97\u8853\u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306b\u3088\u308a\u307b\u3068\u3093\u3069\u6c17\u306b\u306a\u3089\u306a\u3044\u3002\n// a + b \u3067\u306f a.plus(b) \u304c\u547c\u3070\u308c\u308b\u3002Long\u304cInt\u3092\u53d7\u3051\u53d6\u308bplus\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3002\nval l = 1L + 3 // Long + Int => Long\n\n\n\u6f14\u7b97\u5b50\n\u6570\u5024\u306b\u5bfe\u3057\u3066\u6a19\u6e96\u7684\u306a\u7b97\u8853\u6f14\u7b97\u5b50\u304c\u5229\u7528\u3067\u304d\u308b\u3002\u6f14\u7b97\u5b50\u306f\u5b9f\u969b\u306b\u306f\u9069\u5207\u306a\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u304c\u547c\u3073\u51fa\u3055\u308c\u308b1\u3002\u8a73\u7d30\u306f\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u7ae0\u3067\u8aac\u660e\u3059\u308b\u3002\n\u30d3\u30c3\u30c8\u6f14\u7b97\u306b\u306f\u7279\u5225\u306a\u8a18\u53f7\u306f\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u306a\u3044\u304c\u3001\u6b21\u306e\u3088\u3046\u306b\u633f\u5165\u5f62\u5f0f\u3067\u4f7f\u3048\u308b\u95a2\u6570\u304c\u3042\u308b\u3002\n// shl\u306f\u7b97\u8853\u5de6\u30b7\u30d5\u30c8\u3092\u884c\u3046\nval x = (1 shl 2) and 0x000FF000\n\nInt\u3068Long\u306b\u306f\u4ee5\u4e0b\u306e\u30d3\u30c3\u30c8\u6f14\u7b97\u304c\u3042\u308b\u3002\n\nshl(bits) \u2013 \u7b26\u53f7\u4ed8\u5de6\u30b7\u30d5\u30c8 (Java\u306e <<)\nshr(bits) \u2013 \u7b26\u53f7\u4ed8\u53f3\u30b7\u30d5\u30c8 (Java\u306e >>)\nushr(bits) \u2013 \u7b26\u53f7\u306a\u3057\u53f3\u30b7\u30d5\u30c8 (Java\u306e >>>)\nand(bits) \u2013 \u30d3\u30c3\u30c8AND\nor(bits) \u2013 \u30d3\u30c3\u30c8OR\nxor(bits) \u2013 \u30d3\u30c3\u30c8XOR\ninv() \u2013 \u30d3\u30c3\u30c8\u53cd\u8ee2\n\n\n\u6587\u5b57\n\u6587\u5b57\u578b\u306fChar\u3001\u3082\u3046\u308f\u304b\u3063\u3066\u308b\u3068\u601d\u3046\u3051\u3069\u6697\u9ed9\u306e\u578b\u5909\u63db\u306f\u306a\u3044\u3002\nfun check(c: Char) {\n  if (c == 1) { // ERROR: \u6697\u9ed9\u306e\u578b\u5909\u63db\n    // ...\n  }\n}\n\n\u30ea\u30c6\u30e9\u30eb\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u3080 '1', '\\n', '\\uFF00' \u307f\u305f\u3044\u306b\u3002\u660e\u793a\u7684\u306bInt\u578b\u306b\u5909\u63db\u3067\u304d\u308b\u3002\nfun decimalDigitValue(c: Char): Int {\n  if (c !in '0'..'9')\n    throw IllegalArgumentException(\"Out of range\")\n  return c.toInt() - '0'.toInt() // \u660e\u793a\u7684\u306b\u6570\u5024\u306b\u5909\u63db\n}\n\n\u6570\u5024\u3068\u540c\u69d8\u306b Nullable \u3067\u306fBoxing\u3055\u308c\u308b\u3002\n\n\u771f\u507d\u5024\nBoolean \u306f true \u304b false \u3092\u53d6\u308b\u3002Nullable \u3067\u306fBoxing\u3055\u308c\u308b\u3002\uff13\u3064\u306e\u7d44\u307f\u8fbc\u307f\u6f14\u7b97\u5b50 * ||, && , !* \u304c\u3042\u308b\u3002\n\n\u914d\u5217\nArray\u30af\u30e9\u30b9\u3067\u8868\u3055\u308c\u308b\u3002get/set\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\uff08[]\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\uff09\u3001size\u3092\u6301\u3061\u3001\u4ed6\u306b\u5e7e\u3064\u304b\u306e\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3002\nclass Array<T> private constructor() {\n  val size: Int\n  fun get(index: Int): T\n  fun set(index: Int, value: T): Unit\n\n  fun iterator(): Iterator<T>\n  // ...\n}\n\n// [1, 2, 3]\u3092\u4f5c\u308b\nval list = arrayOf(1, 2, 3)\n// null\u3067\u57cb\u3081\u3089\u308c\u305f\u30b5\u30a4\u30ba3\u306e\u914d\u5217\u3092\u4f5c\u308b\nvar arr: Array<Int?> = arrayOfNulls(3)\n// Array<String>\u578b\u3067\u5024\u304c [\"0\", \"1\", \"4\", \"9\", \"16\"]\u306e\u914d\u5217\u3092\u4f5c\u308b\nval asc = Array(5, { i -> (i * i).toString() })\n\n\u6ce8: Java\u3068\u9055\u3063\u3066 Array<String> \u578b\u3092 Array<Any> \u578b\u306b\u4ee3\u5165\u306f\u3067\u304d\u306a\u30442\u3002\u3053\u308c\u306f\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306e\u767a\u751f\u3092\u9632\u3044\u3067\u304f\u308c\u308b\u3002\uff08\u305f\u3060\u3057 Array<out Any> \u3092\u5229\u7528\u3067\u304d\u308b\u3002Type Projection\u306e\u7ae0\u3092\u53c2\u7167\u3002\uff09\nBoxing\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u751f\u3058\u306a\u3044\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306e\u914d\u5217\u3092\u8868\u3059\u7279\u5225\u306a\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3002ByteArray, ShortArray, IntArray\u306a\u3069\u3002\u3053\u308c\u3089\u306fArray\u3092\u7d99\u627f\u3057\u3066\u306f\u3044\u306a\u3044\u304c\u3001\u540c\u3058\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u3089\u3082\u5bfe\u5fdc\u3059\u308b\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3092\u6301\u3063\u3066\u3044\u308b\u3002\n// \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306e\u914d\u5217\u3067\u3042\u308b IntArray \u3092\u7528\u3044\u308b\nval x: IntArray = intArrayOf(1, 2, 3)  // \u578b\u3092\u660e\u793a\u3057\u305f\u304c\u3001\u63a8\u8ad6\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u7701\u7565\u53ef\u80fd\nx[0] = x[1] + x[2]\n\n\n\u6587\u5b57\u5217\n\u6587\u5b57\u5217\u306fString\u578b\u3067\u8868\u3055\u308c\u3001immutable\uff08\u4e2d\u8eab\u304c\u5909\u66f4\u4e0d\u53ef\uff09\u3067\u3042\u308b\u3002\u69cb\u6210\u8981\u7d20\u306f\u6587\u5b57\u3067\u3042\u308a\u3001s[i]\u3068\u3044\u3046\u5f62\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6307\u5b9a\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002for\u30eb\u30fc\u30d7\u3067\u30a4\u30c6\u30ec\u30fc\u30c8\u3067\u304d\u308b\u3002\nfor (c in str) {\n  println(c)\n}\n\n\n\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\n// Java\u306e\u6587\u5b57\u5217\u3068\u540c\u3058\u611f\u3058\u306e\u3084\u3064\nval s = \"Hello, world!\\n\"\n\n// \u30c8\u30ea\u30d7\u30eb\u30af\u30a9\u30fc\u30c8\u3092\u4f7f\u3046\u3068\u30b9\u30b1\u30fc\u30d7\u304c\u52b9\u304b\u306a\u3044\u751f\u6587\u5b57\u5217\u306b\u306a\u308b\nval text = \"\"\"\n  for (c in \"foo\")\n    print(c)\n\"\"\"\n\n\n\u6587\u5b57\u5217\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n$\u3092\u4f7f\u3063\u3066\u6587\u5b57\u5217\u306e\u4e2d\u306b\u5909\u6570\u306e\u5024\u3084\u8a08\u7b97\u7d50\u679c\u3092\u57cb\u3081\u8fbc\u3081\u308b\u3002\nval i = 10\nval s = \"i = $i\" // i = 10\n\nval s = \"abc\"\nval str = \"$s.length is ${s.length}\" // abc.length is 3\n\n// $\u305d\u306e\u3082\u306e\u3092\u8868\u73fe\u3059\u308b\u306b\u306f\nval price = \"${'$'}9.99\" // $9.99\n\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\n// \u6240\u5c5e\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u6307\u5b9a\npackage foo.bar\n\n// \u30d5\u30eb\u30cd\u30fc\u30e0\u306ffoo.bar.baz\nfun baz() {}\n\n// \u30d5\u30eb\u30cd\u30fc\u30e0\u306ffoo.bar.Goo\nclass Goo {}\n\n// ...\n\n\n\u30a4\u30f3\u30dd\u30fc\u30c8\nimport foo.Bar // \u3053\u308c\u3067Bar\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\nimport foo.* // foo\u306e\u4e0b\u306b\u3042\u308b\u3082\u306e\u304c\u5168\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\nimport foo.Bar // Bar\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\nimport bar.Bar as bBar // bBar\u306f'bar.Bar'\u3092\u8868\u3059\n\n\u30af\u30e9\u30b9\u4ee5\u5916\u306b\u3082\u4ee5\u4e0b\u3092import\u3067\u304d\u308b\u3002\n\n\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u95a2\u6570\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\nobject\u5ba3\u8a00\u306e\u4e2d\u306e\u95a2\u6570\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\nenum\u5b9a\u6570\n\nJava\u3068\u9055\u3063\u3066\u7279\u5225\u306b\"import static\"\u3068\u3044\u3046\u306e\u306f\u306a\u3044\u3002\u901a\u5e38\u306eimport\u3067\u3044\u3051\u308b\u3002\n\n\u5236\u5fa1\u69cb\u6587\n\nif\nKotlin\u3067\u306fif\u306f\u5f0f\u3067\u3042\u308a\u623b\u308a\u5024\u3092\u8fd4\u305b\u308b\u3002\u306a\u306e\u3067\u4e09\u9805\u6f14\u7b97\u5b50\u306f\u5fc5\u8981\u306a\u3044\u306e\u3067\u5b58\u5728\u3057\u306a\u3044\u3002\n// \u4f1d\u7d71\u7684\u306a\u4f7f\u3044\u65b9\nvar max = a \nif (a < b) \n  max = b \n\n// else\u4ed8\u304d\nvar max: Int\nif (a > b) \n  max = a \nelse \n  max = b \n\n// if\u304c\u5f0f\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u305f\u4e09\u9805\u6f14\u7b97\u5b50\u7684\u4f7f\u3044\u65b9\nval max = if (a > b) a else b\n\n\u5206\u5c90\u306f\u30d6\u30ed\u30c3\u30af\u306b\u3067\u304d\u308b\u3002\u6700\u5f8c\u306e\u884c\u306e\u5f0f\u306e\u8a55\u4fa1\u7d50\u679c\u304c\u30d6\u30ed\u30c3\u30af\u306e\u5024\u306b\u306a\u308b\u3002\nval max = if (a > b) { \n    print(\"Choose a\") \n    a \n  } \n  else { \n    print(\"Choose b\") \n    b \n  }\n\nif\u306e\u7d50\u679c\u3092\u5229\u7528\u3059\u308b\u306a\u3089else\u7bc0\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n\nwhen\nwhen\u306fC\u7cfb\u8a00\u8a9e\u3067\u3044\u3046switch\u306e\u7f6e\u304d\u63db\u3048\u3002\nwhen (x) {\n  1 -> print(\"x == 1\")\n  2 -> print(\"x == 2\")\n  // \u3069\u308c\u306b\u3082\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u306a\u3089else\u304c\u5b9f\u884c\u3055\u308c\u308b\n  else -> { // \u30d6\u30ed\u30c3\u30af\u3082\u4f7f\u3048\u308b\n    print(\"x is neither 1 nor 2\")\n  }\n}\n\nwhen\u3082\u5f0f\u3068\u3057\u3066\u5024\u3092\u8fd4\u305b\u308b\u3002\u305d\u306e\u5834\u5408else\u7bc0\u306f\u5fc5\u9808\u3067\u3001\u5168\u3066\u306e\u5206\u5c90\u304c\u5024\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\u30d6\u30ed\u30c3\u30af\u304c\u8907\u6570\u884c\u306a\u3089if\u3068\u540c\u69d8\u306b\u6700\u5f8c\u306b\u8a55\u4fa1\u3055\u308c\u305f\u5024\u3092\u8fd4\u3059\u3002\nwhen (x) {\n  // 0\u30681\u3067\u540c\u3058\u51e6\u7406\u306a\u3089\u3001\u30b3\u30f3\u30de\u3067\u7d50\u5408\u3067\u304d\u308b\n  0, 1 -> print(\"x == 0 or x == 1\")\n  else -> print(\"otherwise\")\n}\n\nwhen (x) {\n  // \u5b9a\u6570\u3067\u306a\u304f\u3066\u3082\u30de\u30c3\u30c1\u3055\u305b\u3089\u308c\u308b\n  parseInt(s) -> print(\"s encodes x\")\n  else -> print(\"s does not encode x\")\n}\n\nwhen (x) {\n  // \u7bc4\u56f2\u306b\u542b\u307e\u308c\u308b\u304b\n  in 1..10 -> print(\"x is in the range\")\n  // \u914d\u5217\u306a\u3069\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u542b\u307e\u308c\u308b\u304b\n  in validNumbers -> print(\"x is valid\")\n  // \u5426\u5b9a\u3082\u4f7f\u3048\u308b\u3002\u7bc4\u56f2\u306b\u542b\u307e\u308c\u306a\u3051\u308c\u3070\u5b9f\u884c\u3055\u308c\u308b\u3002\n  !in 10..20 -> print(\"x is outside the range\")\n  else -> print(\"none of the above\")\n}\n\nval hasPrefix = when(x) {\n  // \u578b\u30c1\u30a7\u30c3\u30af\u3082\u3067\u304d\u308b\u3002\u30c1\u30a7\u30c3\u30af\u5f8c\u306f\u81ea\u52d5\u7684\u306b\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u308b\u3002\n  is String -> x.startsWith(\"prefix\") // x\u306fString\u3068\u3057\u3066\u6271\u3048\u308b\n  else -> false\n}\n\nwhen\u306b\u5f15\u6570\u3092\u4e0e\u3048\u306a\u3044\u3068\u3001if\u306e\u4ee3\u308f\u308a\u306b\u5229\u7528\u3067\u304d\u308b\u3002\u5404\u6761\u4ef6\u306f\u5358\u7d14\u306b\u771f\u507d\u5024\u5224\u5b9a\u3055\u308c\u308b\u3002\nwhen {\n  x.isOdd() -> print(\"x is odd\")\n  x.isEven() -> print(\"x is even\")\n  else -> print(\"x is funny\")\n}\n\n\nfor\n// \u307e\u3041\u3053\u308c\u306f\u8aac\u660e\u3044\u3089\u306a\u3044\u3088\u306d\nfor (item in collection)\n  print(item)\n\n// \u3082\u3061\u308d\u3093\u30dc\u30c7\u30a3\u306f\u30d6\u30ed\u30c3\u30af\u306b\u3067\u304d\u308b\nfor (item: Int in ints) {\n  // ...\n}\n\nfor \u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308b\u3082\u306e\u306a\u3089\u4f55\u3067\u3082\u30a4\u30c6\u30ec\u30fc\u30c8\u3067\u304d\u308b\u3002\u3059\u306a\u308f\u3061\u3001\n\n\u30e1\u30f3\u30d0\u30fc\u307e\u305f\u306f\u62e1\u5f35\u3068\u3057\u3066 iterator() \u3092\u6301\u3061\u3001\u305d\u306e\u623b\u308a\u5024\u306e\u578b\u304c\n\n\n\u30e1\u30f3\u30d0\u30fc\u307e\u305f\u306f\u62e1\u5f35\u3068\u3057\u3066 next() \u3092\u6301\u3061\u3001\u304b\u3064\n\u30e1\u30f3\u30d0\u30fc\u307e\u305f\u306f\u62e1\u5f35\u3068\u3057\u3066 Boolean \u3092\u8fd4\u3059 hasNext() \u3092\u6301\u3064\n\n\n\n\u3053\u308c\u3089\uff13\u3064\u5168\u3066\u306e\u95a2\u6570\u306f operator \u3068\u3057\u3066\u30de\u30fc\u30af\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ed8\u304d\u306b\u3057\u305f\u3044\u306a\u3089\n// \u6700\u9069\u5316\u306b\u3088\u3063\u3066indices\u306f\u5b9f\u969b\u306b\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u306a\u3044\u306e\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u52a3\u5316\u306f\u306a\u3044\nfor (i in array.indices)\n  print(array[i])\n\n// withIndex()\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u5024\u306e\u30da\u30a2\u3067\u56de\u3059\u3053\u3068\u3082\u3067\u304d\u308b\nfor ((index, value) in array.withIndex()) {\n    println(\"the element at $index is $value\")\n}\n\n\nwhile\nwhile, do-while\u306f\u666e\u901a\u3002\nwhile (x > 0) {\n  x--\n}\n\ndo {\n  val y = retrieveData()\n} while (y != null) // \u3053\u3053\u3067y\u304c\u898b\u3048\u308b\uff01\n\n\n\u30ea\u30bf\u30fc\u30f3\u3068\u30b8\u30e3\u30f3\u30d7\n\uff13\u3064\u306e\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4\u304c\u3042\u308b\u3002\n\n\nreturn : \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u76f4\u8fd1\u306e\uff08\u7121\u540d\u3092\u542b\u3080\uff09\u95a2\u6570\u3092\u629c\u3051\u308b\u3002\u6ce8\uff1a\u30e9\u30e0\u30c0\u306f\u9055\u3046\u3002\n\nbreak : \u76f4\u8fd1\u306e\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\n\ncontinue : \u76f4\u8fd1\u306e\u30eb\u30fc\u30d7\u306e\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u9032\u3080\n\n\nbreak, continue\u3068\u30e9\u30d9\u30eb\n// \u30e9\u30d9\u30eb\u3092\u4f7f\u3063\u3066\u76f4\u8fd1\u3067\u306a\u304f\u6307\u5b9a\u30e9\u30d9\u30eb\u306e\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\nloop@ for (i in 1..100) {\n  for (j in 1..100) {\n    if (...)\n      break@loop\n  }\n}\n\n\nreturn\u3068\u30e9\u30d9\u30eb\nreturn \u306f\u76f4\u8fd1\u306e\u95a2\u6570\u3092\u629c\u3051\u308b\u3002\u30e9\u30e0\u30c0\u3058\u3083\u306a\u3044\u3002\nfun foo() {\n  ints.forEach {\n    if (it == 0) return // \u3053\u308c\u306fforEach\u3067\u306a\u304ffoo\u3092\u629c\u3051\u308b\n    print(it)\n  }\n}\n\n\u3082\u3057\u30e9\u30e0\u30c0\u3092\u629c\u3051\u305f\u3044\u306a\u3089\u30e9\u30d9\u30eb\u3092\u4f7f\u3046\u3002\nfun foo() {\n  ints.forEach lit@ {\n    if (it == 0) return@lit\n    print(it)\n  }\n}\n\n\u3053\u306e\u7a0b\u5ea6\u3067\u30e9\u30d9\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u6697\u9ed9\u306e\u30e9\u30d9\u30eb\uff08\u30e9\u30e0\u30c0\u304c\u6e21\u3055\u308c\u308b\u95a2\u6570\u306e\u540d\u524d\uff09\u3092\u4f7f\u3063\u305f\u65b9\u304c\u4fbf\u5229\u3002\nfun foo() {\n  ints.forEach {\n    if (it == 0) return@forEach // forEach\u3092\u629c\u3051\u308b\n    print(it)\n  }\n}\n\n\u307e\u305f\u306f\u30e9\u30e0\u30c0\u3058\u3083\u306a\u304f\u7121\u540d\u95a2\u6570\u3092\u6e21\u3059\u3002\nfun foo() {\n  ints.forEach(fun(value: Int) {\n    if (value == 0) return // \u3053\u308c\u306fforEach\u3092\u629c\u3051\u308b\n    print(value)\n  })\n}\n\n\u30e9\u30d9\u30eb\u3092\u4f7f\u3044\u3064\u3064\u5024\u3092\u8fd4\u3057\u305f\u3044\u306a\u3089\u3053\u3046\u66f8\u304f\u3002\nreturn@a 1\n\n\n\u6b21\u306e\u7ae0\u3078\n\u6b21\u306fKotlin\u6587\u6cd5 - \u30af\u30e9\u30b9\u3001\u7d99\u627f\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3078GO!\n\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u6700\u9069\u5316\u306e\u305f\u3081\u306b\u5bfe\u5fdc\u3059\u308b\u547d\u4ee4\u306b\u66f8\u304d\u4e0b\u3059\u3053\u3068\u306f\u3042\u308b\u3002\u00a0\u21a9\n\n\n\u5143\u306e\u6587\u7ae0\u3067\u306finvariant\u3068\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002\u3053\u308c\u306f\u5171\u5909\u6027\u3068\u53cd\u5909\u6027\u306e\u8aac\u660e\u306b\u3088\u308b\u3068\u3053\u308d\u306einvariant\u3068\u3044\u3046\u3053\u3068\u3002\u00a0\u21a9\n\n\n\n\n# \u306f\u3058\u3081\u306b\n\n[Kotlin Reference](https://kotlinlang.org/docs/reference/)\u306e\u65e5\u672c\u8a9e\u8a33\u3002\u8907\u6570\u306e\u8a18\u4e8b\u306b\u5206\u3051\u3066\u3044\u3066\u3001\u3053\u306e\u8a18\u4e8b\u306fBasic\u7ae0\u306b\u76f8\u5f53\u3059\u308b\u3002\n\n\u4e00\u6c17\u306b\u3056\u3063\u3068\u6587\u6cd5\u5168\u4f53\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u300c[\uff13\uff10\u5206\u3067\u899a\u3048\u308bKotlin\u6587\u6cd5](http://qiita.com/k5n/items/cc0377b75d8537ef8a85)\u300d\u3092\u7528\u610f\u3057\u305f\u306e\u3067\u305d\u3061\u3089\u3092\u3069\u3046\u305e\u3002\n\n\u82f1\u8a9e\u3092\u305d\u306e\u307e\u307e\u8a33\u3057\u305f\u3082\u306e\u306f\u3069\u3046\u3057\u3066\u3082\u5206\u304b\u308a\u306b\u304f\u304f\u306a\u308a\u304c\u3061\u3002\u3053\u3053\u3067\u306f\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u305d\u306e\u307e\u307e\u306b\u3053\u3060\u308f\u3063\u3066\u306a\u304f\u3066\u3001\u5185\u5bb9\u3092\u7406\u89e3\u3057\u305f\u4e0a\u3067\u9069\u5b9c\u8868\u73fe\u3092\u5909\u3048\u305f\u308a\u88dc\u8db3\u3057\u305f\u308a\u7701\u7565\u3057\u305f\u308a\u3057\u3066\u3044\u308b\u3002\n\n\u4ed6\u306e\u4eba\u306e\u8a18\u4e8b\u3067\u300c[Kotlin\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u65e5\u672c\u8a9e\u5316\u3057\u3066\u307f\u305f[\u524d\u7de8]](http://qiita.com/dogwood008/items/6e8d3225ea9bb0fe3099)\u300d\u3063\u3066\u3044\u3046\u306e\u3082\u3042\u3063\u3066\u3001\u6700\u521d\u306eGetting Started\u7ae0\u304b\u3089\u8a33\u3055\u308c\u3066\u308b\u3002\n\n# \u76ee\u6b21\n\n\u8907\u6570\u306e\u8a18\u4e8b\u306b\u5206\u3051\u3066\u3044\u308b\u306e\u3067\u3053\u3053\u306b\u5168\u4f53\u50cf\u306e\u30ea\u30f3\u30af\u3092\u8cbc\u3063\u3066\u304a\u304f\u3002\n\n - \u57fa\u672c \uff08\u3053\u306e\u8a18\u4e8b\uff09\n - \u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n     - [\u30af\u30e9\u30b9\u3001\u7d99\u627f\u3001\u30d7\u30ed\u30d1\u30c6\u30a3](http://qiita.com/k5n/items/35e76d79ee9de4effb89)\n     - [\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3001\u30a2\u30af\u30bb\u30b9\u4fee\u98fe\u5b50\u3001\u62e1\u5f35](http://qiita.com/k5n/items/98332a406ddb9170217c)\n     - [\u30c7\u30fc\u30bf\u30af\u30e9\u30b9, \u30b8\u30a7\u30cd\u30ea\u30af\u30b9](http://qiita.com/k5n/items/18adb5c3503a54e96c22)\n     - [\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30af\u30e9\u30b9\u3001Enum\u30af\u30e9\u30b9\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u59d4\u8b72\u3001\u59d4\u8b72\u3055\u308c\u305f\u30d7\u30ed\u30d1\u30c6\u30a3](http://qiita.com/k5n/items/57d362295c2299090d8d)\n - [\u95a2\u6570\u3068\u30e9\u30e0\u30c0](http://qiita.com/k5n/items/964d765767a65cc3de5b)\n - \u305d\u306e\u4ed6\n     - [\u5206\u89e3\u5ba3\u8a00\u3001\u7bc4\u56f2\u3001\u578b\u30c1\u30a7\u30c3\u30af\u3068\u30ad\u30e3\u30b9\u30c8](http://qiita.com/k5n/items/c8bf7a507b64f20eebd0)\n     - [this\u3001\u7b49\u4fa1\u6027\u3001\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3001Null\u5b89\u5168\u3001\u4f8b\u5916](http://qiita.com/k5n/items/6fe586bf2e5530684681)\n     -  [\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3001\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3001\u578b\u5b89\u5168\u306a\u30d3\u30eb\u30c0\u30fc\u3001\u52d5\u7684\u578b](http://qiita.com/k5n/items/3eaafc5aa5a07cd02f5c)\n - [Java\u3068\u306e\u76f8\u4e92\u904b\u7528](http://qiita.com/k5n/items/ceb1f921b27d62fc9fcb)\n\n# Nullable\u306b\u3064\u3044\u3066\n\n\u3053\u306e\u7ae0\u3088\u308a\u5f8c\u3067\u8aac\u660e\u3055\u308c\u308b *Nullable* \u3068\u3044\u3046\u306e\u304c\u8aac\u660e\u306b\u51fa\u3066\u304f\u308b\u3002Kotlin\u3067\u306f\u5909\u6570\u306b *null* \u306f\u5165\u308c\u3089\u308c\u306a\u3044\u306e\u3067\u3001*null* \u304b\u53c2\u7167\u3092\u5165\u308c\u3089\u308c\u308b\u7279\u5225\u306a *Nullable* \u3068\u3044\u3046\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n*Int* \u306e\u53c2\u7167\u304b *null* \u304c\u5165\u308c\u3089\u308c\u308b *Nullable* \u306f *Int?* \u3068\u8a18\u8ff0\u3059\u308b\u3002\u305d\u306e\u4ed6\u306e\u69cb\u6587\u306f\u5f8c\u307b\u3069\u3002\u69cb\u6587\u3082\u542b\u3081\u3066Swift\u3067\u306eOptional\u3068\u540c\u69d8\u306e\u3082\u306e\u3002\n\n# \u57fa\u672c\u578b\n\nKotlin\u3067\u306f\u5168\u3066\u304c\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\u5b9f\u969b\u306b\u306f\u901f\u5ea6\u7684\u306a\u89b3\u70b9\u304b\u3089\u30d3\u30eb\u30c8\u30a4\u30f3\u578b\u3082\u3042\u308b\u304c\u3001\u305d\u308c\u3089\u3082\u5229\u7528\u8005\u304b\u3089\u306f\u666e\u901a\u306e\u30af\u30e9\u30b9\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u3002\n\n## \u6570\u5024\n\n\u6570\u5024\u306e\u6271\u3044\u306fJava\u306b\u8fd1\u3044\u304c\u5168\u304f\u540c\u3058\u3067\u306f\u306a\u3044\u3002\u6570\u5024\u306f\u6697\u9ed9\u306e\u578b\u5909\u63db\u304c\u884c\u308f\u308c\u305a\u3001\u8a18\u6cd5\u3082\u5c11\u3057\u9055\u3046\u5834\u5408\u304c\u3042\u308b\u3002\n\n| \u578b | \u30d3\u30c3\u30c8\u6570 |\n|:---|:----------|\n| Double | 64 |\n| Float | 32 |\n| Long | 64 |\n| Int | 32 |\n| Short | 16 |\n| Byte | 8 |\n\n### \u6570\u5024\u5b9a\u6570\n\n - \uff11\uff10\u9032\u6570: 123\n   - Long\u306a\u3089\u5f8c\u308d\u306bL\u3092\u3064\u3051\u308b: 123L\n - \uff11\uff16\u9032\u6570: 0x0F\n - \uff12\u9032\u6570: 0b00001011\n \n \uff08\uff18\u9032\u6570\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\uff09\n \n - \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fDouble: 123.5, 123.5e10\n - Float\u306f\u5f8c\u308d\u306bf\u304bF\u3092\u3064\u3051\u308b: 123.5f\n\n### \u8868\u73fe\n\n*Int?* \u306a\u3069\u306e__Nullable__\u3084\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u306f\u3001\u6570\u5024\u306fboxing\u3055\u308c\u308b\u3002\n\n```kotlin\nval a: Int = 10000 // \u3053\u308c\u306fJVM\u306e\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u308b\nprint(a === a) // 'true'\u3068\u8868\u793a\u3055\u308c\u308b\nval boxedA: Int? = a    // boxing\u3055\u308c\u308b\nval anotherBoxedA: Int? = a // boxing\u3055\u308c\u308b\nprint(boxedA === anotherBoxedA) // !!!'false'\u3068\u8868\u793a\u3055\u308c\u308b!!!\n// \u5185\u90e8\u306e\u5024\u306e\u7b49\u4fa1\u6027\u306f\u4fdd\u6301\u3055\u308c\u308b\nprint(boxedA == anotherBoxedA) // 'true'\u3068\u8868\u793a\u3055\u308c\u308b\n```\n\n\uff08\u6ce8: ===\u306f\u53c2\u7167\u306e\u7b49\u4fa1\u6027, ==\u306f\u69cb\u9020\u306e\u7b49\u4fa1\u6027\u306e\u6bd4\u8f03\u3002\u3064\u307e\u308a==\u306fJava\u3067\u3044\u3046equals\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308b\u6bd4\u8f03\u3002\uff09\n\n### \u660e\u793a\u7684\u306a\u578b\u5909\u63db\n\n\u5c0f\u3055\u3044\u578b\u306f\u5927\u304d\u3044\u578b\u306e\u30b5\u30d6\u578b\u3063\u3066\u308f\u3051\u3058\u3083\u306a\u3044\u3002\u3082\u3057\u305d\u3046\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u3067\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3002\n\n```kotlin\n// \u3082\u3057\u301c\u3060\u3063\u305f\u3089\u7684\u306a\u4eee\u60f3\u30b3\u30fc\u30c9\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u3002\nval a: Int? = 1 // Int (java.lang.Integer)\u306bBoxing\u3055\u308c\u308b\nval b: Long? = a // \u6697\u9ed9\u5909\u63db\u3067 Long (java.lang.Long)\u306bBoxing\u3055\u308c\u308b\nprint(a == b) // \u3061\u3087www\u3053\u3044\u3064\"false\"\u3068\u304b\u8a00\u3046www\n// Long\u306eequals()\u304c\u3082\u3046\u4e00\u65b9\u306e\u578b\u3082Long\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u304b\u3089\u306a\u3093\u3067\u3059\u306d\u301c\n```\n\n\u305d\u3093\u306a\u308f\u3051\u3067__\u5c0f\u3055\u3044\u578b\u306f\u5927\u304d\u3044\u65b9\u306b\u6697\u9ed9\u7684\u306b\u5909\u63db\u3055\u308c\u306a\u3044__\u3002\n\n```kotlin\n// 1\u306fInt\u3060\u3051\u3069\u5909\u6570\u578b\u304cByte\u306a\u306e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306bByte\u578b\u306e\u6570\u5024\u3068\u3057\u3066\u6271\u308f\u308c\u308b\nval b: Byte = 1 // OK, \u6570\u5024\u306f\u9759\u7684\u306b\u30c1\u30a7\u30c3\u30af\u3055\u308c\u308b\n// Byte\u578b\u306e\u5024\u3092Int\u578b\u306b\u683c\u7d0d\u3057\u3066\u3082\u6697\u9ed9\u578b\u5909\u63db\u306f\u3055\u308c\u306a\u3044\nval i: Int = b // ERROR\n```\n\n```kotlin\nval i: Int = b.toInt() // OK: \u660e\u793a\u7684\u306b\u578b\u5909\u63db\n```\n\n\u5168\u3066\u306e\u6570\u5024\u578b\u306f\u6b21\u306e\u578b\u5909\u63db\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u3002\n\n - toByte(): Byte\n - toShort(): Short\n - toInt(): Int\n - toLong(): Long\n - toFloat(): Float\n - toDouble(): Double\n - toChar(): Char\n\n\u6697\u9ed9\u306e\u578b\u5909\u63db\u304c\u306a\u3044\u3053\u3068\u306f\u578b\u63a8\u8ad6\u3068\u7b97\u8853\u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306b\u3088\u308a\u307b\u3068\u3093\u3069\u6c17\u306b\u306a\u3089\u306a\u3044\u3002\n\n```kotlin\n// a + b \u3067\u306f a.plus(b) \u304c\u547c\u3070\u308c\u308b\u3002Long\u304cInt\u3092\u53d7\u3051\u53d6\u308bplus\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3002\nval l = 1L + 3 // Long + Int => Long\n```\n\n### \u6f14\u7b97\u5b50\n\n\u6570\u5024\u306b\u5bfe\u3057\u3066\u6a19\u6e96\u7684\u306a\u7b97\u8853\u6f14\u7b97\u5b50\u304c\u5229\u7528\u3067\u304d\u308b\u3002\u6f14\u7b97\u5b50\u306f\u5b9f\u969b\u306b\u306f\u9069\u5207\u306a\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u304c\u547c\u3073\u51fa\u3055\u308c\u308b[^2]\u3002\u8a73\u7d30\u306f\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u7ae0\u3067\u8aac\u660e\u3059\u308b\u3002\n\n[^2]: \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u6700\u9069\u5316\u306e\u305f\u3081\u306b\u5bfe\u5fdc\u3059\u308b\u547d\u4ee4\u306b\u66f8\u304d\u4e0b\u3059\u3053\u3068\u306f\u3042\u308b\u3002\n\n\u30d3\u30c3\u30c8\u6f14\u7b97\u306b\u306f\u7279\u5225\u306a\u8a18\u53f7\u306f\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u306a\u3044\u304c\u3001\u6b21\u306e\u3088\u3046\u306b\u633f\u5165\u5f62\u5f0f\u3067\u4f7f\u3048\u308b\u95a2\u6570\u304c\u3042\u308b\u3002\n\n```kotlin\n// shl\u306f\u7b97\u8853\u5de6\u30b7\u30d5\u30c8\u3092\u884c\u3046\nval x = (1 shl 2) and 0x000FF000\n```\n\nInt\u3068Long\u306b\u306f\u4ee5\u4e0b\u306e\u30d3\u30c3\u30c8\u6f14\u7b97\u304c\u3042\u308b\u3002\n\n - shl(bits) \u2013 \u7b26\u53f7\u4ed8\u5de6\u30b7\u30d5\u30c8 (Java\u306e <<)\n - shr(bits) \u2013 \u7b26\u53f7\u4ed8\u53f3\u30b7\u30d5\u30c8 (Java\u306e >>)\n - ushr(bits) \u2013 \u7b26\u53f7\u306a\u3057\u53f3\u30b7\u30d5\u30c8 (Java\u306e >>>)\n - and(bits) \u2013 \u30d3\u30c3\u30c8AND\n - or(bits) \u2013 \u30d3\u30c3\u30c8OR\n - xor(bits) \u2013 \u30d3\u30c3\u30c8XOR\n - inv() \u2013 \u30d3\u30c3\u30c8\u53cd\u8ee2\n\n## \u6587\u5b57\n\n\u6587\u5b57\u578b\u306fChar\u3001\u3082\u3046\u308f\u304b\u3063\u3066\u308b\u3068\u601d\u3046\u3051\u3069\u6697\u9ed9\u306e\u578b\u5909\u63db\u306f\u306a\u3044\u3002\n\n```kotlin\nfun check(c: Char) {\n  if (c == 1) { // ERROR: \u6697\u9ed9\u306e\u578b\u5909\u63db\n    // ...\n  }\n}\n```\n\n\u30ea\u30c6\u30e9\u30eb\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u3080 '1', '\\n', '\\uFF00' \u307f\u305f\u3044\u306b\u3002\u660e\u793a\u7684\u306bInt\u578b\u306b\u5909\u63db\u3067\u304d\u308b\u3002\n\n```kotlin\nfun decimalDigitValue(c: Char): Int {\n  if (c !in '0'..'9')\n    throw IllegalArgumentException(\"Out of range\")\n  return c.toInt() - '0'.toInt() // \u660e\u793a\u7684\u306b\u6570\u5024\u306b\u5909\u63db\n}\n```\n\n\u6570\u5024\u3068\u540c\u69d8\u306b *Nullable* \u3067\u306fBoxing\u3055\u308c\u308b\u3002\n\n## \u771f\u507d\u5024\n\n*Boolean* \u306f *true* \u304b *false* \u3092\u53d6\u308b\u3002*Nullable* \u3067\u306fBoxing\u3055\u308c\u308b\u3002\uff13\u3064\u306e\u7d44\u307f\u8fbc\u307f\u6f14\u7b97\u5b50 * ||, && , !* \u304c\u3042\u308b\u3002\n\n## \u914d\u5217\n\nArray\u30af\u30e9\u30b9\u3067\u8868\u3055\u308c\u308b\u3002get/set\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\uff08[]\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\uff09\u3001size\u3092\u6301\u3061\u3001\u4ed6\u306b\u5e7e\u3064\u304b\u306e\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3002\n\n```kotlin\nclass Array<T> private constructor() {\n  val size: Int\n  fun get(index: Int): T\n  fun set(index: Int, value: T): Unit\n\n  fun iterator(): Iterator<T>\n  // ...\n}\n```\n\n```kotlin\n// [1, 2, 3]\u3092\u4f5c\u308b\nval list = arrayOf(1, 2, 3)\n// null\u3067\u57cb\u3081\u3089\u308c\u305f\u30b5\u30a4\u30ba3\u306e\u914d\u5217\u3092\u4f5c\u308b\nvar arr: Array<Int?> = arrayOfNulls(3)\n// Array<String>\u578b\u3067\u5024\u304c [\"0\", \"1\", \"4\", \"9\", \"16\"]\u306e\u914d\u5217\u3092\u4f5c\u308b\nval asc = Array(5, { i -> (i * i).toString() })\n```\n\n\u6ce8: Java\u3068\u9055\u3063\u3066 *Array&lt;String&gt;* \u578b\u3092 *Array&lt;Any&gt;* \u578b\u306b\u4ee3\u5165\u306f\u3067\u304d\u306a\u3044[^3]\u3002\u3053\u308c\u306f\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306e\u767a\u751f\u3092\u9632\u3044\u3067\u304f\u308c\u308b\u3002\uff08\u305f\u3060\u3057 *Array&lt;out Any&gt;* \u3092\u5229\u7528\u3067\u304d\u308b\u3002Type Projection\u306e\u7ae0\u3092\u53c2\u7167\u3002\uff09\n\n[^3]: \u5143\u306e\u6587\u7ae0\u3067\u306finvariant\u3068\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002\u3053\u308c\u306f[\u5171\u5909\u6027\u3068\u53cd\u5909\u6027](https://ja.wikipedia.org/wiki/\u5171\u5909\u6027\u3068\u53cd\u5909\u6027_(\u8a08\u7b97\u6a5f\u79d1\u5b66))\u306e\u8aac\u660e\u306b\u3088\u308b\u3068\u3053\u308d\u306einvariant\u3068\u3044\u3046\u3053\u3068\u3002\n\nBoxing\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u751f\u3058\u306a\u3044\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306e\u914d\u5217\u3092\u8868\u3059\u7279\u5225\u306a\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3002ByteArray, ShortArray, IntArray\u306a\u3069\u3002\u3053\u308c\u3089\u306fArray\u3092\u7d99\u627f\u3057\u3066\u306f\u3044\u306a\u3044\u304c\u3001\u540c\u3058\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u3089\u3082\u5bfe\u5fdc\u3059\u308b\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3092\u6301\u3063\u3066\u3044\u308b\u3002\n\n```kotlin\n// \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306e\u914d\u5217\u3067\u3042\u308b IntArray \u3092\u7528\u3044\u308b\nval x: IntArray = intArrayOf(1, 2, 3)  // \u578b\u3092\u660e\u793a\u3057\u305f\u304c\u3001\u63a8\u8ad6\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u7701\u7565\u53ef\u80fd\nx[0] = x[1] + x[2]\n```\n\n## \u6587\u5b57\u5217\n\n\u6587\u5b57\u5217\u306fString\u578b\u3067\u8868\u3055\u308c\u3001immutable\uff08\u4e2d\u8eab\u304c\u5909\u66f4\u4e0d\u53ef\uff09\u3067\u3042\u308b\u3002\u69cb\u6210\u8981\u7d20\u306f\u6587\u5b57\u3067\u3042\u308a\u3001s[i]\u3068\u3044\u3046\u5f62\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6307\u5b9a\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002for\u30eb\u30fc\u30d7\u3067\u30a4\u30c6\u30ec\u30fc\u30c8\u3067\u304d\u308b\u3002\n\n```kotlin\nfor (c in str) {\n  println(c)\n}\n```\n\n### \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\n\n```kotlin\n// Java\u306e\u6587\u5b57\u5217\u3068\u540c\u3058\u611f\u3058\u306e\u3084\u3064\nval s = \"Hello, world!\\n\"\n\n// \u30c8\u30ea\u30d7\u30eb\u30af\u30a9\u30fc\u30c8\u3092\u4f7f\u3046\u3068\u30b9\u30b1\u30fc\u30d7\u304c\u52b9\u304b\u306a\u3044\u751f\u6587\u5b57\u5217\u306b\u306a\u308b\nval text = \"\"\"\n  for (c in \"foo\")\n    print(c)\n\"\"\"\n```\n\n### \u6587\u5b57\u5217\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n$\u3092\u4f7f\u3063\u3066\u6587\u5b57\u5217\u306e\u4e2d\u306b\u5909\u6570\u306e\u5024\u3084\u8a08\u7b97\u7d50\u679c\u3092\u57cb\u3081\u8fbc\u3081\u308b\u3002\n\n```kotlin\nval i = 10\nval s = \"i = $i\" // i = 10\n\nval s = \"abc\"\nval str = \"$s.length is ${s.length}\" // abc.length is 3\n\n// $\u305d\u306e\u3082\u306e\u3092\u8868\u73fe\u3059\u308b\u306b\u306f\nval price = \"${'$'}9.99\" // $9.99\n```\n# \u30d1\u30c3\u30b1\u30fc\u30b8\n\n```kotlin\n// \u6240\u5c5e\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u6307\u5b9a\npackage foo.bar\n\n// \u30d5\u30eb\u30cd\u30fc\u30e0\u306ffoo.bar.baz\nfun baz() {}\n\n// \u30d5\u30eb\u30cd\u30fc\u30e0\u306ffoo.bar.Goo\nclass Goo {}\n\n// ...\n```\n\n## \u30a4\u30f3\u30dd\u30fc\u30c8\n\n```kotlin\nimport foo.Bar // \u3053\u308c\u3067Bar\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n```\n\n```kotlin\nimport foo.* // foo\u306e\u4e0b\u306b\u3042\u308b\u3082\u306e\u304c\u5168\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n```\n\n```kotlin\nimport foo.Bar // Bar\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\nimport bar.Bar as bBar // bBar\u306f'bar.Bar'\u3092\u8868\u3059\n```\n\n\u30af\u30e9\u30b9\u4ee5\u5916\u306b\u3082\u4ee5\u4e0b\u3092import\u3067\u304d\u308b\u3002\n\n - \u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u95a2\u6570\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\n - object\u5ba3\u8a00\u306e\u4e2d\u306e\u95a2\u6570\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\n - enum\u5b9a\u6570\n\nJava\u3068\u9055\u3063\u3066\u7279\u5225\u306b\"import static\"\u3068\u3044\u3046\u306e\u306f\u306a\u3044\u3002\u901a\u5e38\u306eimport\u3067\u3044\u3051\u308b\u3002\n\n# \u5236\u5fa1\u69cb\u6587\n\n## if\n\nKotlin\u3067\u306fif\u306f\u5f0f\u3067\u3042\u308a\u623b\u308a\u5024\u3092\u8fd4\u305b\u308b\u3002\u306a\u306e\u3067\u4e09\u9805\u6f14\u7b97\u5b50\u306f\u5fc5\u8981\u306a\u3044\u306e\u3067\u5b58\u5728\u3057\u306a\u3044\u3002\n\n```kotlin\n// \u4f1d\u7d71\u7684\u306a\u4f7f\u3044\u65b9\nvar max = a \nif (a < b) \n  max = b \n \n// else\u4ed8\u304d\nvar max: Int\nif (a > b) \n  max = a \nelse \n  max = b \n \n// if\u304c\u5f0f\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u305f\u4e09\u9805\u6f14\u7b97\u5b50\u7684\u4f7f\u3044\u65b9\nval max = if (a > b) a else b\n```\n\n\u5206\u5c90\u306f\u30d6\u30ed\u30c3\u30af\u306b\u3067\u304d\u308b\u3002\u6700\u5f8c\u306e\u884c\u306e\u5f0f\u306e\u8a55\u4fa1\u7d50\u679c\u304c\u30d6\u30ed\u30c3\u30af\u306e\u5024\u306b\u306a\u308b\u3002\n\n```kotlin\nval max = if (a > b) { \n    print(\"Choose a\") \n    a \n  } \n  else { \n    print(\"Choose b\") \n    b \n  }\n```\n\nif\u306e\u7d50\u679c\u3092\u5229\u7528\u3059\u308b\u306a\u3089else\u7bc0\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n\n## when\n\nwhen\u306fC\u7cfb\u8a00\u8a9e\u3067\u3044\u3046switch\u306e\u7f6e\u304d\u63db\u3048\u3002\n\n```kotlin\nwhen (x) {\n  1 -> print(\"x == 1\")\n  2 -> print(\"x == 2\")\n  // \u3069\u308c\u306b\u3082\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u306a\u3089else\u304c\u5b9f\u884c\u3055\u308c\u308b\n  else -> { // \u30d6\u30ed\u30c3\u30af\u3082\u4f7f\u3048\u308b\n    print(\"x is neither 1 nor 2\")\n  }\n}\n```\n\nwhen\u3082\u5f0f\u3068\u3057\u3066\u5024\u3092\u8fd4\u305b\u308b\u3002\u305d\u306e\u5834\u5408else\u7bc0\u306f\u5fc5\u9808\u3067\u3001\u5168\u3066\u306e\u5206\u5c90\u304c\u5024\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\u30d6\u30ed\u30c3\u30af\u304c\u8907\u6570\u884c\u306a\u3089if\u3068\u540c\u69d8\u306b\u6700\u5f8c\u306b\u8a55\u4fa1\u3055\u308c\u305f\u5024\u3092\u8fd4\u3059\u3002\n\n```kotlin\nwhen (x) {\n  // 0\u30681\u3067\u540c\u3058\u51e6\u7406\u306a\u3089\u3001\u30b3\u30f3\u30de\u3067\u7d50\u5408\u3067\u304d\u308b\n  0, 1 -> print(\"x == 0 or x == 1\")\n  else -> print(\"otherwise\")\n}\n```\n\n```kotlin\nwhen (x) {\n  // \u5b9a\u6570\u3067\u306a\u304f\u3066\u3082\u30de\u30c3\u30c1\u3055\u305b\u3089\u308c\u308b\n  parseInt(s) -> print(\"s encodes x\")\n  else -> print(\"s does not encode x\")\n}\n```\n\n```kotlin\nwhen (x) {\n  // \u7bc4\u56f2\u306b\u542b\u307e\u308c\u308b\u304b\n  in 1..10 -> print(\"x is in the range\")\n  // \u914d\u5217\u306a\u3069\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u542b\u307e\u308c\u308b\u304b\n  in validNumbers -> print(\"x is valid\")\n  // \u5426\u5b9a\u3082\u4f7f\u3048\u308b\u3002\u7bc4\u56f2\u306b\u542b\u307e\u308c\u306a\u3051\u308c\u3070\u5b9f\u884c\u3055\u308c\u308b\u3002\n  !in 10..20 -> print(\"x is outside the range\")\n  else -> print(\"none of the above\")\n}\n```\n\n```kotlin\nval hasPrefix = when(x) {\n  // \u578b\u30c1\u30a7\u30c3\u30af\u3082\u3067\u304d\u308b\u3002\u30c1\u30a7\u30c3\u30af\u5f8c\u306f\u81ea\u52d5\u7684\u306b\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u308b\u3002\n  is String -> x.startsWith(\"prefix\") // x\u306fString\u3068\u3057\u3066\u6271\u3048\u308b\n  else -> false\n}\n```\n\nwhen\u306b\u5f15\u6570\u3092\u4e0e\u3048\u306a\u3044\u3068\u3001if\u306e\u4ee3\u308f\u308a\u306b\u5229\u7528\u3067\u304d\u308b\u3002\u5404\u6761\u4ef6\u306f\u5358\u7d14\u306b\u771f\u507d\u5024\u5224\u5b9a\u3055\u308c\u308b\u3002\n\n```kotlin\nwhen {\n  x.isOdd() -> print(\"x is odd\")\n  x.isEven() -> print(\"x is even\")\n  else -> print(\"x is funny\")\n}\n```\n\n## for\n\n```kotlin\n// \u307e\u3041\u3053\u308c\u306f\u8aac\u660e\u3044\u3089\u306a\u3044\u3088\u306d\nfor (item in collection)\n  print(item)\n  \n// \u3082\u3061\u308d\u3093\u30dc\u30c7\u30a3\u306f\u30d6\u30ed\u30c3\u30af\u306b\u3067\u304d\u308b\nfor (item: Int in ints) {\n  // ...\n}\n```\n\n*for* \u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308b\u3082\u306e\u306a\u3089\u4f55\u3067\u3082\u30a4\u30c6\u30ec\u30fc\u30c8\u3067\u304d\u308b\u3002\u3059\u306a\u308f\u3061\u3001\n\n - \u30e1\u30f3\u30d0\u30fc\u307e\u305f\u306f\u62e1\u5f35\u3068\u3057\u3066 *iterator()* \u3092\u6301\u3061\u3001\u305d\u306e\u623b\u308a\u5024\u306e\u578b\u304c\n  - \u30e1\u30f3\u30d0\u30fc\u307e\u305f\u306f\u62e1\u5f35\u3068\u3057\u3066 *next()* \u3092\u6301\u3061\u3001\u304b\u3064\n  - \u30e1\u30f3\u30d0\u30fc\u307e\u305f\u306f\u62e1\u5f35\u3068\u3057\u3066 *Boolean* \u3092\u8fd4\u3059 *hasNext()* \u3092\u6301\u3064\n\n\u3053\u308c\u3089\uff13\u3064\u5168\u3066\u306e\u95a2\u6570\u306f *operator* \u3068\u3057\u3066\u30de\u30fc\u30af\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ed8\u304d\u306b\u3057\u305f\u3044\u306a\u3089\n\n```kotlin\n// \u6700\u9069\u5316\u306b\u3088\u3063\u3066indices\u306f\u5b9f\u969b\u306b\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u306a\u3044\u306e\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u52a3\u5316\u306f\u306a\u3044\nfor (i in array.indices)\n  print(array[i])\n  \n// withIndex()\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u5024\u306e\u30da\u30a2\u3067\u56de\u3059\u3053\u3068\u3082\u3067\u304d\u308b\nfor ((index, value) in array.withIndex()) {\n    println(\"the element at $index is $value\")\n}\n```\n\n## while\n\nwhile, do-while\u306f\u666e\u901a\u3002\n\n```kotlin\nwhile (x > 0) {\n  x--\n}\n\ndo {\n  val y = retrieveData()\n} while (y != null) // \u3053\u3053\u3067y\u304c\u898b\u3048\u308b\uff01\n```\n\n# \u30ea\u30bf\u30fc\u30f3\u3068\u30b8\u30e3\u30f3\u30d7\n\n\uff13\u3064\u306e\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4\u304c\u3042\u308b\u3002\n\n - *return* : \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u76f4\u8fd1\u306e\uff08\u7121\u540d\u3092\u542b\u3080\uff09\u95a2\u6570\u3092\u629c\u3051\u308b\u3002\u6ce8\uff1a\u30e9\u30e0\u30c0\u306f\u9055\u3046\u3002\n - *break* : \u76f4\u8fd1\u306e\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\n - *continue* : \u76f4\u8fd1\u306e\u30eb\u30fc\u30d7\u306e\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u9032\u3080\n\n \n## break, continue\u3068\u30e9\u30d9\u30eb \n\n```kotlin\n// \u30e9\u30d9\u30eb\u3092\u4f7f\u3063\u3066\u76f4\u8fd1\u3067\u306a\u304f\u6307\u5b9a\u30e9\u30d9\u30eb\u306e\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\nloop@ for (i in 1..100) {\n  for (j in 1..100) {\n    if (...)\n      break@loop\n  }\n}\n```\n\n## return\u3068\u30e9\u30d9\u30eb\n\n*return* \u306f\u76f4\u8fd1\u306e\u95a2\u6570\u3092\u629c\u3051\u308b\u3002\u30e9\u30e0\u30c0\u3058\u3083\u306a\u3044\u3002\n\n```kotlin\nfun foo() {\n  ints.forEach {\n    if (it == 0) return // \u3053\u308c\u306fforEach\u3067\u306a\u304ffoo\u3092\u629c\u3051\u308b\n    print(it)\n  }\n}\n```\n\n\u3082\u3057\u30e9\u30e0\u30c0\u3092\u629c\u3051\u305f\u3044\u306a\u3089\u30e9\u30d9\u30eb\u3092\u4f7f\u3046\u3002\n\n```kotlin\nfun foo() {\n  ints.forEach lit@ {\n    if (it == 0) return@lit\n    print(it)\n  }\n}\n```\n\n\u3053\u306e\u7a0b\u5ea6\u3067\u30e9\u30d9\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u6697\u9ed9\u306e\u30e9\u30d9\u30eb\uff08\u30e9\u30e0\u30c0\u304c\u6e21\u3055\u308c\u308b\u95a2\u6570\u306e\u540d\u524d\uff09\u3092\u4f7f\u3063\u305f\u65b9\u304c\u4fbf\u5229\u3002\n\n```kotlin\nfun foo() {\n  ints.forEach {\n    if (it == 0) return@forEach // forEach\u3092\u629c\u3051\u308b\n    print(it)\n  }\n}\n```\n\n\u307e\u305f\u306f\u30e9\u30e0\u30c0\u3058\u3083\u306a\u304f\u7121\u540d\u95a2\u6570\u3092\u6e21\u3059\u3002\n\n```kotlin\nfun foo() {\n  ints.forEach(fun(value: Int) {\n    if (value == 0) return // \u3053\u308c\u306fforEach\u3092\u629c\u3051\u308b\n    print(value)\n  })\n}\n```\n\n\u30e9\u30d9\u30eb\u3092\u4f7f\u3044\u3064\u3064\u5024\u3092\u8fd4\u3057\u305f\u3044\u306a\u3089\u3053\u3046\u66f8\u304f\u3002\n\n```kotlin\nreturn@a 1\n```\n\n# \u6b21\u306e\u7ae0\u3078\n\n\u6b21\u306f[Kotlin\u6587\u6cd5 - \u30af\u30e9\u30b9\u3001\u7d99\u627f\u3001\u30d7\u30ed\u30d1\u30c6\u30a3](http://qiita.com/k5n/items/35e76d79ee9de4effb89)\u3078GO!\n", "tags": ["Kotlin"]}