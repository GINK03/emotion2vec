{"tags": ["redux", "RxJS", "cycle.js", "TypeScript", "JavaScript"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\nFlux \u306e\u3088\u3046\u306a unidirectional \u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u8208\u5473\u304c\u3042\u3063\u3066\u3001\u8a55\u5224\u306e\u3088\u3044\u3082\u306e\u306b\u89e6\u3063\u3066\u307f\u305f\u611f\u3058\u3067\u3059\u3002\n\u5b9f\u969b\u306b\u696d\u52d9\u3067\u3084\u3063\u3066\u307f\u305f\u3053\u3068\u306f\u306a\u3044\u306e\u3067\u3001\u30ac\u30c1\u52e2\u306e\u65b9\u304b\u3089\u898b\u305f\u3089\u307e\u3060\u307e\u3060\u7518\u3044\u3068\u601d\u308f\u308c\u308b\u70b9\u304c\u591a\u3005\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\nTL;DR (\u6295\u7a3f\u304b\u3089\u4e00\u65e5\u305f\u3063\u3066\u5c11\u3057\u8003\u3048\u304c\u307e\u3068\u307e\u3063\u3066\u304d\u305f\u306e\u3067\u8ffd\u8a18)\n\nRedux \u306e\u5370\u8c61 before\n\n\u601d\u60f3\u306f\u5206\u304b\u308a\u3084\u3059\u3044 (Three Principles)\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b (state) \u3092\u5358\u4e00\u306e store \u3067\u7ba1\u7406\nstate \u306f read-only (\u76f4\u63a5\u66f4\u65b0\u3067\u304d\u306a\u3044), \u66f4\u65b0\u306f action \u306e\u767a\u884c\u3092\u4ecb\u3057\u3066\u884c\u3046\nstate \u3092\u66f4\u65b0\u3059\u308b reducer \u306f\u7d14\u7c8b\u306a\u95a2\u6570\n\n\n\u3067\u3082 action.type \u3067 switch \u3059\u308b\u66f8\u304d\u65b9\u304c\u597d\u304d\u306b\u306a\u308c\u306a\u3044\n\n\nRx \u3067\u7c21\u5358\u306b re-implement \u3067\u304d\u308b\u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001 switch \u306a\u3057\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u3061\u3087\u3063\u3068\u3084\u3063\u3066\u307f\u3088\u3046\n\n\n\n\nRedux \u306e\u5370\u8c61 after\n\n\u975e\u540c\u671f\u51e6\u7406\u304c\u5b9f\u88c5\u3057\u3065\u3089\u3044\n\n\n\u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308b\u3001 action \u306e\u4e2d\u3067 dispatch \u3059\u308b\u3084\u308a\u65b9\u306f\u3001\u540c\u671f/\u975e\u540c\u671f\u306e action \u3067\u51e6\u7406\u306e\u5185\u5bb9\u304c\u304b\u3051\u96e2\u308c\u3066\u3057\u307e\u3063\u3066\u3001\u300c\u7d50\u5c40 action \u3066\u4f55\u306a\u306e\uff1f\u300d\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\nreducer \u306b\u3088\u308a state \u304c\u66f4\u65b0\u3055\u308c\u305f\u7d50\u679c\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e API \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3001\u3068\u3044\u3046\u3088\u3046\u306a\u5834\u5408\u3001\u4f55\u3092\u30c8\u30ea\u30ac\u30fc\u3068\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308c\u3070\u3044\u3044\u306e\u304b\uff1f\u3053\u306e\u3068\u304d\u3001\u300c\u30dc\u30fc\u30eb\u300d\u306f view \u304c\u6301\u3063\u3066\u3044\u308b\u72b6\u614b\u3060\u304c\u3001 view \u304c\u30e6\u30fc\u30b6\u30fc\u306e\u64cd\u4f5c\u306b\u3088\u3089\u306a\u3044 action \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u306e\u306f\u9055\u548c\u611f\u304c\u3042\u308b\u3002\n[2015/11/24] \u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u3044\u3066\u3001\u52d8\u9055\u3044\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u306e\u3067\u4fee\u6b63\u3002 component == view \u3067\u306f\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u306f view \u3067\u306a\u3044 component \u306b\u3084\u3089\u305b\u308c\u3070\u3088\u3044\u3002\n\n\n\n\n\u305d\u308c\u306b\u5bfe\u3057\u3066 Cycle.js \u3067\u306f\n\nHTTP request \u3092\u3001 DOM \u3068\u540c\u69d8\u306b\u6271\u3046\n\n\n\u3069\u3061\u3089\u3082\u526f\u4f5c\u7528\u304c\u3042\u308b\n\u3069\u3061\u3089\u3082 (\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u898b\u3066) \u975e\u540c\u671f\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304f\u308b\n\u9055\u3044\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u306b\u5bfe\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304b\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304b\n\n\n\u305d\u306e\u3088\u3046\u306a\u3001\u5916\u90e8\u306b\u5bfe\u3057\u3066\u526f\u4f5c\u7528\u3092\u53ca\u307c\u3059\u3088\u3046\u306a\u51e6\u7406\u306f\u3001 Drivers \u3068\u547c\u3070\u308c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9f\u88c5\u3059\u308b\n\n\nHTTPDriver, DOMDriver\n\n\nRedux \u3063\u307d\u304f\u4f5c\u308d\u3046\u3068\u3057\u3066\u3044\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u3053\u306e\u8003\u3048\u65b9\u3092\u53d6\u308a\u5165\u308c\u3066\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u305f\u3089\u3001\u3068\u3066\u3082\u3057\u3063\u304f\u308a\u304f\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n\n\nPolymer \u3068\u304b\u3060\u3068\u3001 <foo-api></foo-api> \u307f\u305f\u3044\u306b DOM \u3063\u307d\u304f\u66f8\u3051\u308b\u3051\u3069\u3001 DOM \u3068\u3057\u3066\u306f\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u305a\u306b\u305f\u3060\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e API \u5b9f\u884c\u3092\u62c5\u3046\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u308b\u3088\u3046\u306a\u767a\u60f3\u304c\u3042\u3063\u305f\u6c17\u304c\u3059\u308b (\u306a\u304b\u3063\u305f\u3067\u3057\u305f\u3063\u3051\uff1f) \u306e\u3067\u3001\u305d\u3046\u3044\u3046\u306e\u3067\u3082\u3088\u3055\u305d\u3046\n[2015/11/24] \u4e0a\u3067\u66f8\u3044\u305f\u3088\u3046\u306b Redux \u306b\u3082\u3042\u308b\u3002\u305f\u3060\u3057\u3001\u4f8b\u3048\u3070 HTTP request \u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306b\u305d\u306e\u3088\u3046\u306a component \u3092\u4f7f\u3046\u306e\u3067\u3042\u308c\u3070\u3001 HTTP request, response \u306e\u51e6\u7406\u307e\u3067 component \u5185\u3067\u51e6\u7406\u3059\u308b\u307b\u3046\u304c\u3001 view \u3068\u3057\u3066\u4f7f\u308f\u308c\u308b component \u3068\u8cac\u52d9\u304c\u63c3\u3063\u3066\u3044\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u611f\u3058\u308b (\u4e0b\u8868\u53c2\u7167)\u3002\u540c\u671f/\u975e\u540c\u671f\u306e action \u3067\u51e6\u7406\u5185\u5bb9\u304c\u304b\u3051\u96e2\u308c\u308b\u3068\u3044\u3046\u554f\u984c\u3082\u7121\u304f\u306a\u308b\u3002\n\n\n\n\n\n\ncomponent type\n\u5916\u90e8\u3078\u306e output\n\u5916\u90e8\u304b\u3089\u306e input \u306e\u51e6\u7406\n\n\n\n\nview\nDOM \u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\nDOM \u306b\u5bfe\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u64cd\u4f5c\u3092\u53d7\u3051\u3066 action \u3092\u5b9f\u884c\n\n\nhttp\nHTTP request \u306e\u9001\u4fe1\nHTTP response \u3092\u53d7\u3051\u3066 action \u3092\u5b9f\u884c\n\n\n\n\u306a\u3093\u3060\u304b Redux dis \u307f\u305f\u3044\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001 Redux \u3092\u611b\u7528\u3055\u308c\u3066\u3044\u308b\u65b9\u3005\u304c\u3053\u306e\u3042\u305f\u308a\u306e\u3053\u3068\u3092\u3069\u3046\u8003\u3048\u3066\u3044\u308b\u306e\u304b\u306f\u3068\u3066\u3082\u8208\u5473\u304c\u3042\u308b\u306e\u3067\u3001\u3054\u610f\u898b\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u4f5c\u308d\u3046\u3068\u3057\u305f\u3082\u306e\n\n\nTodoMVC\n\n\u304a\u306a\u3058\u307f\u306e\u30a2\u30ec\n\u3067\u304d\u305f\u3082\u306e\u306f https://github.com/kimamula/ts-react/tree/feature/rxjs \n\n\n\nFlux Challenge\n\n\u540c\u3058\u4ed5\u69d8\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3001 Flux \u3063\u307d\u3044\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u5404\u81ea\u5b9f\u88c5\u3057\u3001\u305d\u308c\u305e\u308c\u306e pros, cons \u3092\u8b70\u8ad6\u3057\u307e\u3057\u3087\u3046\u3001\u3068\u3044\u3046\u3082\u306e\n\u3067\u304d\u305f\u3082\u306e\u306f https://github.com/kimamula/flux-challenge/tree/feature/kimamula/submissions/kimamula\n\n\n\n\n\n\u5b9f\u88c5\u65b9\u91dd\n\nRedux \u3063\u307d\u304f\u4f5c\u308d\u3046\n\nRedux \u3063\u307d\u3044\u3068\u306f\uff1f\n\nRedux \u306f\u3001\u73fe\u6642\u70b9\u3067 Flux \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4e2d\u3067\u4e00\u756a\u4eba\u6c17\u304c\u3042\u308a\u305d\u3046\u3002\n\u3057\u304b\u3057\u3001\u500b\u4eba\u7684\u306b (\u672c\u5bb6 Flux \u4ee5\u6765) action.type \u3067 switch \u3059\u308b\u3068\u3053\u308d\u304c\u3042\u307e\u308a\u597d\u304d\u306b\u306a\u308c\u306a\u3044\u3002\n\n\n\u3053\u3093\u306a\u306e\u2193\n\n\n\nfunction todoApp(state = initialState, action) {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return Object.assign({}, state, {\n        visibilityFilter: action.filter\n      })\n    case ADD_TODO:\n      return Object.assign({}, state, {\n        todos: [\n          ...state.todos,\n          {\n            text: action.text,\n            completed: false\n          }\n        ]\n      })    \n    default:\n      return state\n  }\n}\n\n\u5f15\u7528\u5143: http://rackt.org/redux/docs/basics/Reducers.html\n\n\u300cRedux \u306f Rx \u3067\u7c21\u5358\u306b\u518d\u5b9f\u88c5\u3067\u304d\u308b\u3088\uff01\u300d\u307f\u305f\u3044\u306a\u3053\u3068\u304c\u672c\u5bb6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\n\n\nThe question is: do you really need Redux if you already use Rx? Maybe not. It\u2019s not hard to re-implement Redux in Rx. Some say it\u2019s a two-liner using Rx.scan() method. It may very well be!\n\n\u5f15\u7528\u5143: http://rackt.org/redux/docs/introduction/PriorArt.html\n\n\u306a\u3089\u3070\u3001 siwtch \u306a\u3057\u3067\u5b9f\u88c5\u3067\u304d\u308b Redux \u3063\u307d\u3044\u3082\u306e\u3092\u3001 Rx \u3067\u4f5c\u3063\u3066\u307f\u3088\u3046\u3002 Rx \u306e\u52c9\u5f37\u306b\u3082\u306a\u308b\u3057\u3002\n\u3061\u306a\u307f\u306b\n\n\n\u6700\u521d\u304b\u3089\u3001\u30aa\u30c1\u306b\u51fa\u3066\u304f\u308b Cycle.js \u306b\u89e6\u3063\u3066\u307f\u308b\u3068\u3044\u3046\u6848\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001 Cycle.js \u306f DefinitelyTyped \u306b\u578b\u5b9a\u7fa9\u304c\u306a\u304f\u3001\u81ea\u5206\u3067\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u3082\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u308f\u308a\u3068\u65e9\u3044\u6bb5\u968e\u3067\u632b\u6298\u3002\n\u6700\u8fd1\u306f TypeScript \u3067\u306a\u3044\u3068 JS \u304c\u66f8\u3051\u306a\u3044\u4f53\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3072\u3068\u307e\u305a\u4f7f\u308f\u306a\u3044\u3053\u3068\u306b\u3002\n\n\n\n\n\u307e\u305a\u306f TodoMVC\n\n\u5192\u982d\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u5b8c\u6210\u54c1\u306f github \u306b\u3042\u308b\u306e\u3067\u3001\u8a73\u3057\u304f\u306f\u305d\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\nhttps://github.com/kimamula/ts-react/tree/feature/rxjs\n\n\n\n\nreducer\n\nTypeScript \u306e \"Overload on constants\" \u306e\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3001 action \u306e\u540d\u524d\u3054\u3068\u306b\u578b\u3092\u5b9a\u7fa9\u3057\u3064\u3064 reducer \u3092\u4f5c\u308b\u3002\n\n\n\u79c1\u3053\u306e\u6a5f\u80fd\u597d\u304d\u306a\u3093\u3067\u3059\u3001\u3048\u3048\u3002\n\u904e\u53bb\u306b\u306f\u3053\u3093\u306a\u6295\u7a3f\u3082\u3002 http://qiita.com/kimamula/items/82704786af4ef49630fe\n\n\n\n\u4e0b\u306e\u3088\u3046\u306b\u3001 switch \u306e\u304b\u308f\u308a\u306b for(actionType).register(reducer) \u306e\u3088\u3046\u306a\u5f62\u5f0f\u3067 reducer \u3092\u767b\u9332\u3057\u3066\u3044\u304f\u3002\nRedux \u306e reducer \u306e\u57fa\u672c\u7684\u306a\u30eb\u30fc\u30eb\u3068\u3057\u3066\u3001\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f state \u3092\u5909\u66f4\u3057\u3066\u306f\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u3001\u305d\u308c\u306b\u306f\u5f53\u7136\u5247\u308b\u3002\n\nTodoReducers.ts\nexport interface TodoReducers {\n  // 'create' \u3068\u3044\u3046 action \u306e payload \u306f {text: string}\n  for(action: 'create'): TodoReducerAccesor<{text: string}>;\n  // 'complete' \u3068\u3044\u3046 action \u306e payload \u306f {index: number}\n  for(action: 'complete'): TodoReducerAccesor<{index: number}>;\n  // ...\u4ee5\u4e0b\u7565\n}\n\nexport namespace TodoReducersFactory {\n  export function create(): TodoReducers {\n    // Register reducers\n    return (<TodoReducers>new Reducers<TodoState>())\n    .for('create').register(({text}, state) => {\n      const _text = text.trim();\n      return _text === '' ? state : [...state, new Todo(false, _text)];\n    })\n    .for('complete').register(({index}, state) =>\n      // todo.setCompleted(true) \u306f\u3001\u6307\u5b9a\u3055\u308c\u305f completed \u3092\u6301\u3063\u305f\u65b0\u3057\u3044 todo \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u526f\u4f5c\u7528\u306e\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u3001\u5f15\u6570\u306e state \u306f\u66f4\u65b0\u3055\u308c\u306a\u3044\n      state.map((todo, _index) => _index === index ? todo.setCompleted(true) : todo) \n    )\n    // ... \u4ee5\u4e0b\u7565\n  }\n}\n\nexport default TodoReducers;\n\n\naction\n\nRedux \u3068\u3044\u3046\u3088\u308a\u306f Flux \u306e action \u3063\u307d\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u5404 action \u7528\u306e reducer \u3092\u53d6\u308a\u51fa\u3057\u3066 payload \u3092\u90e8\u5206\u9069\u7528 (\u5185\u90e8\u7684\u306b\u306f Function.prototype.bind \u3092\u5229\u7528) \u3057\u3001 Rx.Observer.prototype.onNext \u306b\u6e21\u3059\u3002\nactions \u306e\u4e2d\u3067 reducer \u3092\u53d6\u308a\u51fa\u3059\u306e\u306f\u5c11\u3057\u5fae\u5999\u306a\u306e\u3067\u3059\u304c\u3001 \"Overload on constants\" \u306e\u6a5f\u80fd\u3067 action \u3054\u3068\u306b\u578b\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3053\u3046\u305b\u3056\u308b\u3092\u5f97\u306a\u3044\u611f\u3058\u3067\u3059><\n\nTodoActions.ts\nexport default class TodoActions {\n  private subject = new Rx.Subject<(state: TodoState) => TodoState>();\n  observable = this.subject.asObservable();\n  constructor(private todoReducers: TodoReducers) {\n  }\n  create(text: string): void {\n    this.subject.onNext(this.todoReducers.for('create').applyPayload({text}));\n  }\n\n  toggleComplete(index: number, todo: Todo): void {\n    if (todo.isCompleted()) {\n      this.subject.onNext(this.todoReducers.for('undoComplete').applyPayload({index}));\n    } else {\n      this.subject.onNext(this.todoReducers.for('complete').applyPayload({index}));\n    }\n  }\n  // ... \u4ee5\u4e0b\u7565\n}\n\n\nstore\n\n\u672c\u5bb6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u3063\u305f\u3088\u3046\u306b\u3001 Rx.Observable.prototype.scan \u3067 (payload \u304c\u90e8\u5206\u9069\u7528\u6e08\u307f\u306e) reducer \u3092\u4f7f\u3063\u3066 state \u3092\u66f4\u65b0\u3002\n\nRx.Observable.prototype.scan \u306f\u3001 Array.prototype.reduce \u306e\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3001 observable \u306e stream \u4e00\u3064\u4e00\u3064\u304b\u3089 state \u3092\u66f4\u65b0\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3092\u4f5c\u3063\u3066\u3053\u308c\u3092\u9806\u6b21\u9069\u7528\u3057\u3066\u3044\u304f\u3002\n\n\n\nRx.Observable.prototype.reduce \u3068\u3044\u3046\u95a2\u6570\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306f stream \u304c\u5b8c\u4e86\u3057\u305f\u6700\u7d42\u7d50\u679c\u306e\u307f\u3092\u5f8c\u7d9a\u306e observer \u306b\u6e21\u3059\u3082\u306e\u3067\u3001\u9014\u4e2d\u7d4c\u904e\u3092\u968f\u6642\u53d6\u5f97\u3059\u308b\u306b\u306f scan \u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\nStores.ts\nexport default class Store<State> {\n  observable: Rx.Observable<State>;\n  constructor(\n    observable: Rx.Observable<(state: State) => State>,\n    initialState: State\n  ) {\n    this.observable = observable.scan(\n      (state, partiallyAppliedReducer) => partiallyAppliedReducer(state),\n      initialState\n    ).startWith(initialState);\n  }\n}\n\nTodoStores.ts\nimport Store from './store';\n\nexport default class TodoStore extends Store<TodoState> {\n}\n\nexport class Todo {\n  // ... \u7565\n}\n\nexport type TodoState = Todo[];\n\n\nview\n\nReact \u3067\u5b9f\u88c5\u3002\nroot \u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b reducers, actions, store \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001 store \u306e state \u306e\u66f4\u65b0\u3092 observe \u3059\u308b\u3002\n\nTodoApp.tsx\nexport default class TodoApp extends React.Component<{}, {state: TodoState}> {\n  private actions: TodoActions;\n\n  constructor(props: {}) {\n    super(props);\n\n    const reducers = TodoReducersFactory.create();\n    this.actions = new TodoActions(reducers);\n    const store = new TodoStore(this.actions.observable, []);\n\n    store.observable.subscribe(\n      (state) => this.state ? this.setState({state}) : this.state = {state}\n    );\n  }\n\n  render() {\n    // ... \u7565\n  }\n\n\nTodoMVC \u307e\u3068\u3081\n\nreducer \u304c\u3042\u308b\u3068\u3044\u3046\u3060\u3051\u3067\u305d\u3093\u306a\u306b Redux \u3063\u307d\u304f\u306a\u3044\u3068\u3044\u3046\u3054\u6279\u5224\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3059\u307f\u307e\u305b\u3093\u3002\n\n\n\u7279\u306b action \u306e\u3068\u3053\u308d\u306f\u3001 action.type \u3067 switch \u3059\u308b\u306e\u3092\u56de\u907f\u3057\u305f\u4ee3\u308f\u308a\u306b\u3001\u307e\u305f\u5225\u306e\u5fae\u5999\u3055\u3092\u6301\u3061\u8fbc\u3093\u3067\u3057\u307e\u3063\u305f\u611f\u3002\n\n\n\u5168\u4f53\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n                    Reducers\n                      ^ |\n                      | |\n                      | | fetch reducer\n                      | |\n                      | v   observe\n                --> Actions <------ Store <--\nimperative call |                           | observe\n                ----------- View ------------\n\n\n\u7d9a\u3044\u3066 Flux Challenge\n\n\u5b8c\u6210\u54c1 https://github.com/kimamula/flux-challenge/tree/feature/kimamula/submissions/kimamula\n\n\n\n\u8981\u4ef6\n\n\u8a73\u7d30\u306a\u8981\u4ef6\u306f\u3053\u3061\u3089\u306e README \u306b\u3042\u308a\u307e\u3059\n\n\nhttps://github.com/staltz/flux-challenge\n\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001\n\n\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e API \u3092\u5b9f\u884c\u3059\u308b (TodoMVC \u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u306a\u3044)\n\u30e6\u30fc\u30b6\u30fc\u306e\u64cd\u4f5c\u7b49\u306b\u4f34\u3063\u3066\u3001 API \u306e\u5b9f\u884c\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u304c\u3042\u308b\n\n\n\n\nreducer\n\nTodoMVC \u306e\u3068\u304d\u540c\u69d8\u306a\u306e\u3067\u3001\u5272\u611b\n\n\nstore\n\n\u3053\u3061\u3089\u3082 TodoMVC \u306e\u3068\u304d\u3068\u540c\u69d8\u3060\u304c\u3001\u4e0a\u8a18\u306e\u8981\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u72b6\u614b\u3068\u3057\u3066\u4fdd\u6301\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\nSithLordsStore.ts\nexport interface SithLordsState {\n  currentPlanet: string;\n  sithList: Array<Sith | SithToBeFetched | EmptySith>;\n  onGoingRequests: {[url: string]: JQueryXHR}; // \u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n}\n\nexport default class SithLordsStore extends Store<SithLordsState> {\n  // ... \u7565\n}\n\n\naction\n\nRedux \u306e\u5834\u5408\u3001\u975e\u540c\u671f\u306f\u3053\u3053\u3067\u51e6\u7406\u3059\u308b\n\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u306e\u4f8b\n\n\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306e\u3046\u3061\u3001 requestPosts, receivePosts \u306f\u540c\u671f\u306a action \u3067\u3001 fetchPosts \u306f\u975e\u540c\u671f\u306a action\n\ndispatch \u306f action \u3092\u767a\u884c\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3001\u540c\u671f\u306e\u5834\u5408\u306f view \u304b\u3089 dispatch(requestPosts) \u306a\u3069\u3068\u3057\u3066\u4f7f\u3046\u3002\u975e\u540c\u671f\u306e\u3068\u304d\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092 action \u306e\u4e2d\u3067\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u3001\u500b\u4eba\u7684\u306b\u306f\u304b\u306a\u308a\u9055\u548c\u611f\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u306a\u3093\u3067\u3057\u3087\u3046\uff1f\uff1f\n\n\n\nimport fetch from 'isomorphic-fetch'\n\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\nfunction requestPosts(reddit) {\n  return {\n    type: REQUEST_POSTS,\n    reddit\n  }\n}\n\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\nfunction receivePosts(reddit, json) {\n  return {\n    type: RECEIVE_POSTS,\n    reddit,\n    posts: json.data.children.map(child => child.data),\n    receivedAt: Date.now()\n  }\n}\n\nexport function fetchPosts(reddit) {\n\n  // Thunk middleware knows how to handle functions.\n  // It passes the dispatch method as an argument to the function,\n  // thus making it able to dispatch actions itself.\n\n  return function (dispatch) {\n\n    // First dispatch: the app state is updated to inform\n    // that the API call is starting.\n\n    dispatch(requestPosts(reddit))\n\n    // The function called by the thunk middleware can return a value,\n    // that is passed on as the return value of the dispatch method.\n\n    // In this case, we return a promise to wait for.\n    // This is not required by thunk middleware, but it is convenient for us.\n\n    return fetch(`http://www.reddit.com/r/${reddit}.json`)\n      .then(response => response.json())\n      .then(json =>\n\n        // We can dispatch many times!\n        // Here, we update the app state with the results of the API call.\n\n        dispatch(receivePosts(reddit, json))\n      )\n\n      // In a real world app, you also want to\n      // catch any error in the network call.\n  }\n}\n\n\u5f15\u7528\u5143: http://rackt.org/redux/docs/advanced/AsyncActions.html\n\n\u300c\u9055\u548c\u611f\u304c\u3042\u308b\u300d\u306a\u3069\u3068\u8a00\u3063\u305f\u3082\u306e\u306e\u3001\u3072\u3068\u307e\u305a Redux \u3068\u540c\u69d8\u306b\u4f5c\u308d\u3046\u3068\u3057\u3066\u307f\u308b\n\n\n\u3068\u3053\u308d\u304c\n\n\u56f0\u3063\u305f\u3053\u3068\u306b\u306a\u308b\u3002\n\u6b63\u78ba\u306b\u306f\u3001 actions \u3092\u4f5c\u308b\u6bb5\u968e\u3067\u306f\u7279\u306b\u56f0\u3089\u306a\u304b\u3063\u305f\u306e\u3060\u304c\u3001 view \u3068\u3064\u306a\u304e\u3053\u3080\u6bb5\u968e\u3067\u56f0\u308b\u3002\n\u4f55\u306b\u56f0\u3063\u305f\u306e\u304b\u3001\u6587\u7ae0\u3060\u3051\u3067\u6b63\u78ba\u306b\u4f1d\u3048\u3089\u308c\u308b\u304b\u81ea\u4fe1\u304c\u306a\u3044\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\nFlux Challenge \u306e\u30a2\u30d7\u30ea\u3067\u3001 API \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u751f\u3059\u308b\u6d41\u308c\n\n\u30e6\u30fc\u30b6\u30fc\u304c\u3001\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u305f\u4e00\u89a7\u306b\u5bfe\u3057\u3066\u3001 scroll up/down \u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u4e0a\u4e0b\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u3088\u3046\u3068\u3059\u308b\nview \u304b\u3089 scroll up/down \u306e action \u3092\u767a\u884c (\u5b9f\u884c) \u3059\u308b\nreducer \u3067\u3001 scroll \u5f8c\u306e\u65b0\u3057\u3044\u72b6\u614b\u3092\u751f\u6210\u3059\u308b (scroll \u306b\u3088\u308a\u65b0\u305f\u306b\u8868\u793a\u3055\u308c\u308b\u884c\u306f\u6700\u521d\u306f\u7a7a\u3068\u306a\u308b)\nstore \u306e state \u304c\u66f4\u65b0\u3055\u308c\u3001\u305d\u308c\u306b\u4f34\u3063\u3066 view \u3082\u66f4\u65b0\u3055\u308c\u308b\n\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001\u7a7a\u306e\u884c\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n\n\u3067\u3001 5 \u3067\u5b9f\u884c\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3063\u3066\u3001\u3069\u3053\u304b\u3089\u3069\u3046\u30c8\u30ea\u30ac\u30fc\u3059\u308c\u3070\u3044\u3044\u306e\uff1f\n\n5 \u306e\u6642\u70b9\u3067\u306f\u3001\u300c\u30dc\u30fc\u30eb\u300d\u306f view \u306b\u3042\u308b\u72b6\u614b\u306a\u306e\u3067\u3001 Flux \u7684\u306b\u306f view \u304b\u3089\u975e\u540c\u671f\u306a action \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u306a\u308b\uff1f\uff1f\n\u3067\u3082\u305d\u308c\u3063\u3066\u6c17\u6301\u3061\u60aa\u304f\u306a\u3044\u3067\u3059\u304b\uff1f\n\n\nview \u306f\u30e6\u30fc\u30b6\u30fc\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3042\u308b\u3079\u304d\u306a\u306e\u306b\u5bfe\u3057\u3001 5 \u306e\u51e6\u7406\u306f\u5358\u4f53\u3067\u306f\u5b8c\u5168\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5185\u90e8\u7684\u306a\u51e6\u7406\u3002\n\u305d\u306e\u3088\u3046\u306a\u51e6\u7406\u3092 view \u306e\u8cac\u52d9\u3068\u3057\u3066\u3057\u307e\u3046\u306e\u306f\u304b\u306a\u308a\u306e\u9055\u548c\u611f\u3002\n\n\n\n\nCycle.js \u7684\u306a\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\n\n\u5916\u90e8\u3078\u306e\u526f\u4f5c\u7528\u3092\u6301\u3064\u3068\u3044\u3046\u70b9\u3067\u3001 HTTP request \u3068 DOM \u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u898b\u3066\u540c\u69d8\u306e\u3082\u306e\u3068\u3057\u3066\u6349\u3048\u308b\u3002\n\n\n\u65e5\u672c\u8a9e\u3060\u3068\u3053\u306e\u8a18\u4e8b\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002 http://amagitakayosi.hatenablog.com/entry/2015/10/13/080000\n\n\n\nHTTP request \u3092\u62c5\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u65b0\u305f\u306b\u4f5c\u308b\u3002\n\n\n5 \u306e\u51e6\u7406\u306f\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8cac\u52d9\u3002\nAPI \u306e\u5b9f\u884c\u3082\u3001 action \u304b\u3089\u3067\u306f\u306a\u304f\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u884c\u3046\u3002\n\u7d50\u679c\u3001 action \u304b\u3089\u975e\u540c\u671f\u51e6\u7406\u306f\u6d88\u3048\u3001\u5b9f\u88c5\u306f TodoMVC \u306e\u3068\u304d\u3068\u540c\u69d8\u306b\u3002 (\u306a\u306e\u3067\u30b3\u30fc\u30c9\u306f\u5272\u611b)\n\n\n\n\nhttp\n\n\u4e0a\u8a18\u3067\u7d39\u4ecb\u3057\u305f\u3001 HTTP request \u3092\u62c5\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3002\n\u6982\u8981\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002 (\u30b3\u30fc\u30c9\u306f\u5c11\u3057\u9577\u3044\u306e\u3067\u5272\u611b\u3057\u307e\u3059)\n\n\nstore \u306e state \u306e\u66f4\u65b0\u3092\u76e3\u8996\u3057\u3001\u66f4\u65b0\u3055\u308c\u305f state \u306e\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u3001\u65b0\u305f\u306b API \u3092\u767a\u884c\u3057\u305f\u308a\u3001\u65e2\u5b58\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u308a\u3059\u308b\u3002\nAPI \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304d\u305f\u3089\u3001\u305d\u308c\u306b\u5fdc\u3058\u305f action \u3092\u5b9f\u884c\u3059\u308b\u3002\n\n\n\n\nview\n\n\u57fa\u672c\u7684\u306b\u306f TodoMVC \u3068\u540c\u69d8\u3060\u304c\u3001 http \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u3092\u8ffd\u52a0\u3002\nview \u3068 http \u306e\u95a2\u4fc2\u3092\u8003\u3048\u308b\u3068\u3001 view \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067 http \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u306e\u306f\u9055\u548c\u611f\u304c\u3042\u308b\u304c\u3001 React \u306e\u5834\u5408\u53b3\u5bc6\u306b\u306f render \u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u304c view \u3067\u3042\u3063\u3066\u3001 root \u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u3001\u305d\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5168\u4f53\u306e\u521d\u671f\u5316\u3092\u62c5\u3063\u3066\u3044\u3044\u306f\u305a\u3001\u3068\u3044\u3046\u8003\u3048\u65b9\u3002\n\nSithLordsUI.tsx\nexport default class SithLordsUI extends React.Component<{scrollSize: number}, SithLordsState> {\n  private actions: SithLordsActions;\n\n  constructor(props: {scrollSize: number}) {\n    super(props);\n\n    this.actions = new SithLordsActions(SithLordsReducersFactory.create());\n    const store = new SithLordsStore(this.actions.observable, initialState);\n    const http = new SithLordsHttp(this.actions, store);\n\n    store.observable.subscribe((state) =>\n      this.state ? this.setState(state) : this.state = state\n    );\n  }\n\n\nFlux challenge \u307e\u3068\u3081\n\n\u5168\u4f53\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n                      Reducers\n                        ^ |\n                        | |\n                        | | fetch reducer\n                        | |\n                        | v   observe\n                ----> Actions <------ Store <----\n                | |                           | |\nimperative call | ----------- View ------------ | observe\n                |                               |\n                ------------- HTTP --------------\n\n\n\u611f\u60f3\n\nRedux \u3063\u307d\u3044\u3082\u306e\u3092 Rx \u3067\u5b9f\u88c5\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u521d\u3081\u3066\u307f\u305f\u3089\u554f\u984c\u306b\u3076\u3064\u304b\u308a\u3001\u7d50\u5c40 Cycle.js \u306e\u8003\u3048\u65b9\u5206\u304b\u308a\u3084\u3059\u304f\u3066\u3044\u3044\u306a\u3001\u3068\u3044\u3046\u3068\u3053\u308d\u306b\u843d\u3061\u7740\u3044\u305f\u3002\n\n\nHTTP request \u3068 DOM \u3092\u540c\u69d8\u306b\u6271\u3046\u3002\n\u9055\u3044\u306f\u3001\u524d\u8005\u304c\u30b5\u30fc\u30d0\u30fc\u306b\u5bfe\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3001\u5f8c\u8005\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3042\u308b\u3053\u3068\u3002\n\n\n\u305d\u3082\u305d\u3082 Flux challenge \u81ea\u4f53 Cycle.js \u306e\u4f5c\u8005\u304c\u4e3b\u50ac\u306a\u305f\u3081\u3001\u3053\u306e\u3088\u3046\u306a\u611f\u60f3\u3092\u6301\u3064\u306b\u81f3\u3063\u305f\u306e\u306f\u5f7c\u306e\u8853\u4e2d\u306b\u306f\u307e\u3063\u305f\u611f\u306f\u3042\u308b\u3002\n\n\n\u5f7c\u306f Flux \u306f\u975e\u540c\u671f\u51e6\u7406\u306b\u5f31\u3044\u3068\u8003\u3048\u3066\u3044\u3066\u3001 Flux \u30e6\u30fc\u30b6\u30fc\u304c\u3069\u306e\u3088\u3046\u306b\u3053\u306e\u554f\u984c\u306b\u5bfe\u51e6\u3059\u308b\u304b\u3092\u898b\u308b\u305f\u3081\u306b\u3053\u306e\u304a\u984c\u3092\u8003\u3048\u305f\u3089\u3057\u3044\u3002\n\u8a73\u7d30\u306f https://github.com/staltz/flux-challenge#purpose\n\n\u307e\u3042\u3067\u3082\u78ba\u304b\u306b\u3001 Flux \u3084 Redux \u306e\u975e\u540c\u671f\u51e6\u7406\u3063\u3066\u304d\u308c\u3044\u3058\u3083\u306a\u3044\u306a\u3042\u3068\u601d\u3046\u3002\n\n\nCycle.js \u3078\u306e\u8208\u5473\u304c\u6df1\u307e\u308b\u304c\u3001\u81ea\u524d\u306e\u5b9f\u88c5\u3082\u4eca\u306e\u3068\u3053\u308d\u305d\u3093\u306a\u306b\u60aa\u3044\u6c17\u304c\u3057\u306a\u3044\u306e\u3067\u3001\u4eca\u3059\u3050\u89e6\u3089\u306a\u304f\u3066\u3082\u3044\u3044\u304b\u306a\u3068\u3044\u3046\u611f\u3058\u3002\n\n\nVirtual DOM \u3068 Rx \u3078\u306e\u4f9d\u5b58\u3060\u3051\u3067\u4f5c\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u3044\u3044\u3002\n\n\n\n# \u306f\u3058\u3081\u306b\n* Flux \u306e\u3088\u3046\u306a unidirectional \u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u8208\u5473\u304c\u3042\u3063\u3066\u3001\u8a55\u5224\u306e\u3088\u3044\u3082\u306e\u306b\u89e6\u3063\u3066\u307f\u305f\u611f\u3058\u3067\u3059\u3002\n* \u5b9f\u969b\u306b\u696d\u52d9\u3067\u3084\u3063\u3066\u307f\u305f\u3053\u3068\u306f\u306a\u3044\u306e\u3067\u3001\u30ac\u30c1\u52e2\u306e\u65b9\u304b\u3089\u898b\u305f\u3089\u307e\u3060\u307e\u3060\u7518\u3044\u3068\u601d\u308f\u308c\u308b\u70b9\u304c\u591a\u3005\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n# TL;DR (\u6295\u7a3f\u304b\u3089\u4e00\u65e5\u305f\u3063\u3066\u5c11\u3057\u8003\u3048\u304c\u307e\u3068\u307e\u3063\u3066\u304d\u305f\u306e\u3067\u8ffd\u8a18)\n## Redux \u306e\u5370\u8c61 before\n* \u601d\u60f3\u306f\u5206\u304b\u308a\u3084\u3059\u3044 ([Three Principles](http://rackt.org/redux/docs/introduction/ThreePrinciples.html))\n  * \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b (state) \u3092\u5358\u4e00\u306e store \u3067\u7ba1\u7406\n  * state \u306f read-only (\u76f4\u63a5\u66f4\u65b0\u3067\u304d\u306a\u3044), \u66f4\u65b0\u306f action \u306e\u767a\u884c\u3092\u4ecb\u3057\u3066\u884c\u3046\n  * state \u3092\u66f4\u65b0\u3059\u308b reducer \u306f\u7d14\u7c8b\u306a\u95a2\u6570\n* \u3067\u3082 action.type \u3067 switch \u3059\u308b\u66f8\u304d\u65b9\u304c\u597d\u304d\u306b\u306a\u308c\u306a\u3044\n  * Rx \u3067\u7c21\u5358\u306b re-implement \u3067\u304d\u308b\u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001 switch \u306a\u3057\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u3061\u3087\u3063\u3068\u3084\u3063\u3066\u307f\u3088\u3046\n\n## Redux \u306e\u5370\u8c61 after\n* \u975e\u540c\u671f\u51e6\u7406\u304c\u5b9f\u88c5\u3057\u3065\u3089\u3044\n  * \u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308b\u3001 action \u306e\u4e2d\u3067 dispatch \u3059\u308b\u3084\u308a\u65b9\u306f\u3001\u540c\u671f/\u975e\u540c\u671f\u306e action \u3067\u51e6\u7406\u306e\u5185\u5bb9\u304c\u304b\u3051\u96e2\u308c\u3066\u3057\u307e\u3063\u3066\u3001\u300c\u7d50\u5c40 action \u3066\u4f55\u306a\u306e\uff1f\u300d\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\n  * <del>reducer \u306b\u3088\u308a state \u304c\u66f4\u65b0\u3055\u308c\u305f\u7d50\u679c\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e API \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3001\u3068\u3044\u3046\u3088\u3046\u306a\u5834\u5408\u3001\u4f55\u3092\u30c8\u30ea\u30ac\u30fc\u3068\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308c\u3070\u3044\u3044\u306e\u304b\uff1f\u3053\u306e\u3068\u304d\u3001\u300c\u30dc\u30fc\u30eb\u300d\u306f view \u304c\u6301\u3063\u3066\u3044\u308b\u72b6\u614b\u3060\u304c\u3001 view \u304c\u30e6\u30fc\u30b6\u30fc\u306e\u64cd\u4f5c\u306b\u3088\u3089\u306a\u3044 action \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u306e\u306f\u9055\u548c\u611f\u304c\u3042\u308b\u3002</del>\n  * [2015/11/24] \u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u3044\u3066\u3001\u52d8\u9055\u3044\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u306e\u3067\u4fee\u6b63\u3002 component == view \u3067\u306f\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u306f view \u3067\u306a\u3044 component \u306b\u3084\u3089\u305b\u308c\u3070\u3088\u3044\u3002\n\n## \u305d\u308c\u306b\u5bfe\u3057\u3066 Cycle.js \u3067\u306f\n* HTTP request \u3092\u3001 DOM \u3068\u540c\u69d8\u306b\u6271\u3046\n  * \u3069\u3061\u3089\u3082\u526f\u4f5c\u7528\u304c\u3042\u308b\n  * \u3069\u3061\u3089\u3082 (\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u898b\u3066) \u975e\u540c\u671f\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304f\u308b\n  * \u9055\u3044\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u306b\u5bfe\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304b\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304b\n* \u305d\u306e\u3088\u3046\u306a\u3001\u5916\u90e8\u306b\u5bfe\u3057\u3066\u526f\u4f5c\u7528\u3092\u53ca\u307c\u3059\u3088\u3046\u306a\u51e6\u7406\u306f\u3001 Drivers \u3068\u547c\u3070\u308c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9f\u88c5\u3059\u308b\n    * HTTPDriver, DOMDriver\n* Redux \u3063\u307d\u304f\u4f5c\u308d\u3046\u3068\u3057\u3066\u3044\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u3053\u306e\u8003\u3048\u65b9\u3092\u53d6\u308a\u5165\u308c\u3066\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u305f\u3089\u3001\u3068\u3066\u3082\u3057\u3063\u304f\u308a\u304f\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n    * Polymer \u3068\u304b\u3060\u3068\u3001 `<foo-api></foo-api>` \u307f\u305f\u3044\u306b DOM \u3063\u307d\u304f\u66f8\u3051\u308b\u3051\u3069\u3001 DOM \u3068\u3057\u3066\u306f\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u305a\u306b\u305f\u3060\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e API \u5b9f\u884c\u3092\u62c5\u3046\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u308b\u3088\u3046\u306a\u767a\u60f3\u304c\u3042\u3063\u305f\u6c17\u304c\u3059\u308b (\u306a\u304b\u3063\u305f\u3067\u3057\u305f\u3063\u3051\uff1f) \u306e\u3067\u3001\u305d\u3046\u3044\u3046\u306e\u3067\u3082\u3088\u3055\u305d\u3046\n    * [2015/11/24] \u4e0a\u3067\u66f8\u3044\u305f\u3088\u3046\u306b Redux \u306b\u3082\u3042\u308b\u3002\u305f\u3060\u3057\u3001\u4f8b\u3048\u3070 HTTP request \u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306b\u305d\u306e\u3088\u3046\u306a component \u3092\u4f7f\u3046\u306e\u3067\u3042\u308c\u3070\u3001 HTTP request, response \u306e\u51e6\u7406\u307e\u3067 component \u5185\u3067\u51e6\u7406\u3059\u308b\u307b\u3046\u304c\u3001 view \u3068\u3057\u3066\u4f7f\u308f\u308c\u308b component \u3068\u8cac\u52d9\u304c\u63c3\u3063\u3066\u3044\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u611f\u3058\u308b (\u4e0b\u8868\u53c2\u7167)\u3002\u540c\u671f/\u975e\u540c\u671f\u306e action \u3067\u51e6\u7406\u5185\u5bb9\u304c\u304b\u3051\u96e2\u308c\u308b\u3068\u3044\u3046\u554f\u984c\u3082\u7121\u304f\u306a\u308b\u3002\n\n| component type | \u5916\u90e8\u3078\u306e output     | \u5916\u90e8\u304b\u3089\u306e input \u306e\u51e6\u7406                      |\n| -------------- | ------------------ | ------------------------------------------- |\n| view           | DOM \u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0   | DOM \u306b\u5bfe\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u64cd\u4f5c\u3092\u53d7\u3051\u3066 action \u3092\u5b9f\u884c |\n| http           | HTTP request \u306e\u9001\u4fe1 | HTTP response \u3092\u53d7\u3051\u3066 action \u3092\u5b9f\u884c         |\n\n**\u306a\u3093\u3060\u304b Redux dis \u307f\u305f\u3044\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001 Redux \u3092\u611b\u7528\u3055\u308c\u3066\u3044\u308b\u65b9\u3005\u304c\u3053\u306e\u3042\u305f\u308a\u306e\u3053\u3068\u3092\u3069\u3046\u8003\u3048\u3066\u3044\u308b\u306e\u304b\u306f\u3068\u3066\u3082\u8208\u5473\u304c\u3042\u308b\u306e\u3067\u3001\u3054\u610f\u898b\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002**\n\n# \u4f5c\u308d\u3046\u3068\u3057\u305f\u3082\u306e\n* [TodoMVC](http://todomvc.com/)\n  * \u304a\u306a\u3058\u307f\u306e\u30a2\u30ec\n  * \u3067\u304d\u305f\u3082\u306e\u306f https://github.com/kimamula/ts-react/tree/feature/rxjs \n* [Flux Challenge](https://github.com/staltz/flux-challenge)\n  * \u540c\u3058\u4ed5\u69d8\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3001 Flux \u3063\u307d\u3044\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u5404\u81ea\u5b9f\u88c5\u3057\u3001\u305d\u308c\u305e\u308c\u306e pros, cons \u3092\u8b70\u8ad6\u3057\u307e\u3057\u3087\u3046\u3001\u3068\u3044\u3046\u3082\u306e\n  * \u3067\u304d\u305f\u3082\u306e\u306f https://github.com/kimamula/flux-challenge/tree/feature/kimamula/submissions/kimamula\n\n# \u5b9f\u88c5\u65b9\u91dd\n## Redux \u3063\u307d\u304f\u4f5c\u308d\u3046\n### Redux \u3063\u307d\u3044\u3068\u306f\uff1f\n* Redux \u306f\u3001\u73fe\u6642\u70b9\u3067 Flux \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4e2d\u3067\u4e00\u756a\u4eba\u6c17\u304c\u3042\u308a\u305d\u3046\u3002\n* \u3057\u304b\u3057\u3001\u500b\u4eba\u7684\u306b (\u672c\u5bb6 Flux \u4ee5\u6765) `action.type` \u3067 `switch` \u3059\u308b\u3068\u3053\u308d\u304c\u3042\u307e\u308a\u597d\u304d\u306b\u306a\u308c\u306a\u3044\u3002\n  * \u3053\u3093\u306a\u306e\u2193\n\n```js\nfunction todoApp(state = initialState, action) {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return Object.assign({}, state, {\n        visibilityFilter: action.filter\n      })\n    case ADD_TODO:\n      return Object.assign({}, state, {\n        todos: [\n          ...state.todos,\n          {\n            text: action.text,\n            completed: false\n          }\n        ]\n      })    \n    default:\n      return state\n  }\n}\n```\n\n\u5f15\u7528\u5143: http://rackt.org/redux/docs/basics/Reducers.html\n\n* \u300cRedux \u306f Rx \u3067\u7c21\u5358\u306b\u518d\u5b9f\u88c5\u3067\u304d\u308b\u3088\uff01\u300d\u307f\u305f\u3044\u306a\u3053\u3068\u304c\u672c\u5bb6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\n\n> The question is: do you really need Redux if you already use Rx? Maybe not. It\u2019s not hard to re-implement Redux in Rx. Some say it\u2019s a two-liner using Rx.scan() method. It may very well be!\n\n\u5f15\u7528\u5143: http://rackt.org/redux/docs/introduction/PriorArt.html\n\n* \u306a\u3089\u3070\u3001 `siwtch` \u306a\u3057\u3067\u5b9f\u88c5\u3067\u304d\u308b Redux \u3063\u307d\u3044\u3082\u306e\u3092\u3001 Rx \u3067\u4f5c\u3063\u3066\u307f\u3088\u3046\u3002 Rx \u306e\u52c9\u5f37\u306b\u3082\u306a\u308b\u3057\u3002\n* \u3061\u306a\u307f\u306b\n  * \u6700\u521d\u304b\u3089\u3001\u30aa\u30c1\u306b\u51fa\u3066\u304f\u308b Cycle.js \u306b\u89e6\u3063\u3066\u307f\u308b\u3068\u3044\u3046\u6848\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n  * \u305f\u3060\u3001 Cycle.js \u306f [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped) \u306b\u578b\u5b9a\u7fa9\u304c\u306a\u304f\u3001\u81ea\u5206\u3067\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u3082\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u308f\u308a\u3068\u65e9\u3044\u6bb5\u968e\u3067\u632b\u6298\u3002\n  * \u6700\u8fd1\u306f TypeScript \u3067\u306a\u3044\u3068 JS \u304c\u66f8\u3051\u306a\u3044\u4f53\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3072\u3068\u307e\u305a\u4f7f\u308f\u306a\u3044\u3053\u3068\u306b\u3002\n\n# \u307e\u305a\u306f TodoMVC\n\n* \u5192\u982d\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u5b8c\u6210\u54c1\u306f github \u306b\u3042\u308b\u306e\u3067\u3001\u8a73\u3057\u304f\u306f\u305d\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n  * https://github.com/kimamula/ts-react/tree/feature/rxjs\n\n## reducer\n* TypeScript \u306e \"Overload on constants\" \u306e\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3001 action \u306e\u540d\u524d\u3054\u3068\u306b\u578b\u3092\u5b9a\u7fa9\u3057\u3064\u3064 reducer \u3092\u4f5c\u308b\u3002\n  * \u79c1\u3053\u306e\u6a5f\u80fd\u597d\u304d\u306a\u3093\u3067\u3059\u3001\u3048\u3048\u3002\n  * \u904e\u53bb\u306b\u306f\u3053\u3093\u306a\u6295\u7a3f\u3082\u3002 http://qiita.com/kimamula/items/82704786af4ef49630fe\n* \u4e0b\u306e\u3088\u3046\u306b\u3001 `switch` \u306e\u304b\u308f\u308a\u306b `for(actionType).register(reducer)` \u306e\u3088\u3046\u306a\u5f62\u5f0f\u3067 reducer \u3092\u767b\u9332\u3057\u3066\u3044\u304f\u3002\n* Redux \u306e reducer \u306e\u57fa\u672c\u7684\u306a\u30eb\u30fc\u30eb\u3068\u3057\u3066\u3001\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f state \u3092\u5909\u66f4\u3057\u3066\u306f\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u3001\u305d\u308c\u306b\u306f\u5f53\u7136\u5247\u308b\u3002\n\nTodoReducers.ts\n\n```ts\nexport interface TodoReducers {\n  // 'create' \u3068\u3044\u3046 action \u306e payload \u306f {text: string}\n  for(action: 'create'): TodoReducerAccesor<{text: string}>;\n  // 'complete' \u3068\u3044\u3046 action \u306e payload \u306f {index: number}\n  for(action: 'complete'): TodoReducerAccesor<{index: number}>;\n  // ...\u4ee5\u4e0b\u7565\n}\n\nexport namespace TodoReducersFactory {\n  export function create(): TodoReducers {\n    // Register reducers\n    return (<TodoReducers>new Reducers<TodoState>())\n    .for('create').register(({text}, state) => {\n      const _text = text.trim();\n      return _text === '' ? state : [...state, new Todo(false, _text)];\n    })\n    .for('complete').register(({index}, state) =>\n      // todo.setCompleted(true) \u306f\u3001\u6307\u5b9a\u3055\u308c\u305f completed \u3092\u6301\u3063\u305f\u65b0\u3057\u3044 todo \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u526f\u4f5c\u7528\u306e\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u3001\u5f15\u6570\u306e state \u306f\u66f4\u65b0\u3055\u308c\u306a\u3044\n      state.map((todo, _index) => _index === index ? todo.setCompleted(true) : todo) \n    )\n    // ... \u4ee5\u4e0b\u7565\n  }\n}\n\nexport default TodoReducers;\n```\n\n## action\n\n* Redux \u3068\u3044\u3046\u3088\u308a\u306f Flux \u306e action \u3063\u307d\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n* \u5404 action \u7528\u306e reducer \u3092\u53d6\u308a\u51fa\u3057\u3066 payload \u3092\u90e8\u5206\u9069\u7528 (\u5185\u90e8\u7684\u306b\u306f `Function.prototype.bind` \u3092\u5229\u7528) \u3057\u3001 `Rx.Observer.prototype.onNext` \u306b\u6e21\u3059\u3002\n* actions \u306e\u4e2d\u3067 reducer \u3092\u53d6\u308a\u51fa\u3059\u306e\u306f\u5c11\u3057\u5fae\u5999\u306a\u306e\u3067\u3059\u304c\u3001 \"Overload on constants\" \u306e\u6a5f\u80fd\u3067 action \u3054\u3068\u306b\u578b\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3053\u3046\u305b\u3056\u308b\u3092\u5f97\u306a\u3044\u611f\u3058\u3067\u3059><\n\nTodoActions.ts\n\n```ts\nexport default class TodoActions {\n  private subject = new Rx.Subject<(state: TodoState) => TodoState>();\n  observable = this.subject.asObservable();\n  constructor(private todoReducers: TodoReducers) {\n  }\n  create(text: string): void {\n    this.subject.onNext(this.todoReducers.for('create').applyPayload({text}));\n  }\n\n  toggleComplete(index: number, todo: Todo): void {\n    if (todo.isCompleted()) {\n      this.subject.onNext(this.todoReducers.for('undoComplete').applyPayload({index}));\n    } else {\n      this.subject.onNext(this.todoReducers.for('complete').applyPayload({index}));\n    }\n  }\n  // ... \u4ee5\u4e0b\u7565\n}\n```\n\n## store\n\n* \u672c\u5bb6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u3063\u305f\u3088\u3046\u306b\u3001 `Rx.Observable.prototype.scan` \u3067 (payload \u304c\u90e8\u5206\u9069\u7528\u6e08\u307f\u306e) reducer \u3092\u4f7f\u3063\u3066 state \u3092\u66f4\u65b0\u3002\n* `Rx.Observable.prototype.scan` \u306f\u3001 `Array.prototype.reduce` \u306e\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3001 observable \u306e stream \u4e00\u3064\u4e00\u3064\u304b\u3089 state \u3092\u66f4\u65b0\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3092\u4f5c\u3063\u3066\u3053\u308c\u3092\u9806\u6b21\u9069\u7528\u3057\u3066\u3044\u304f\u3002\n  * `Rx.Observable.prototype.reduce` \u3068\u3044\u3046\u95a2\u6570\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306f stream \u304c\u5b8c\u4e86\u3057\u305f\u6700\u7d42\u7d50\u679c\u306e\u307f\u3092\u5f8c\u7d9a\u306e observer \u306b\u6e21\u3059\u3082\u306e\u3067\u3001\u9014\u4e2d\u7d4c\u904e\u3092\u968f\u6642\u53d6\u5f97\u3059\u308b\u306b\u306f scan \u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nStores.ts\n\n```ts\nexport default class Store<State> {\n  observable: Rx.Observable<State>;\n  constructor(\n    observable: Rx.Observable<(state: State) => State>,\n    initialState: State\n  ) {\n    this.observable = observable.scan(\n      (state, partiallyAppliedReducer) => partiallyAppliedReducer(state),\n      initialState\n    ).startWith(initialState);\n  }\n}\n```\n\nTodoStores.ts\n\n```ts\nimport Store from './store';\n\nexport default class TodoStore extends Store<TodoState> {\n}\n\nexport class Todo {\n  // ... \u7565\n}\n\nexport type TodoState = Todo[];\n```\n\n## view\n* React \u3067\u5b9f\u88c5\u3002\n* root \u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b reducers, actions, store \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001 store \u306e state \u306e\u66f4\u65b0\u3092 observe \u3059\u308b\u3002\n\nTodoApp.tsx\n\n```ts\nexport default class TodoApp extends React.Component<{}, {state: TodoState}> {\n  private actions: TodoActions;\n\n  constructor(props: {}) {\n    super(props);\n\n    const reducers = TodoReducersFactory.create();\n    this.actions = new TodoActions(reducers);\n    const store = new TodoStore(this.actions.observable, []);\n\n    store.observable.subscribe(\n      (state) => this.state ? this.setState({state}) : this.state = {state}\n    );\n  }\n\n  render() {\n    // ... \u7565\n  }\n```\n\n## TodoMVC \u307e\u3068\u3081\n* reducer \u304c\u3042\u308b\u3068\u3044\u3046\u3060\u3051\u3067\u305d\u3093\u306a\u306b Redux \u3063\u307d\u304f\u306a\u3044\u3068\u3044\u3046\u3054\u6279\u5224\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3059\u307f\u307e\u305b\u3093\u3002\n  * \u7279\u306b action \u306e\u3068\u3053\u308d\u306f\u3001 action.type \u3067 switch \u3059\u308b\u306e\u3092\u56de\u907f\u3057\u305f\u4ee3\u308f\u308a\u306b\u3001\u307e\u305f\u5225\u306e\u5fae\u5999\u3055\u3092\u6301\u3061\u8fbc\u3093\u3067\u3057\u307e\u3063\u305f\u611f\u3002\n* \u5168\u4f53\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n```\n                    Reducers\n                      ^ |\n                      | |\n                      | | fetch reducer\n                      | |\n                      | v   observe\n                --> Actions <------ Store <--\nimperative call |                           | observe\n                ----------- View ------------\n```\n\n# \u7d9a\u3044\u3066 Flux Challenge\n* \u5b8c\u6210\u54c1 https://github.com/kimamula/flux-challenge/tree/feature/kimamula/submissions/kimamula\n\n## \u8981\u4ef6\n* \u8a73\u7d30\u306a\u8981\u4ef6\u306f\u3053\u3061\u3089\u306e README \u306b\u3042\u308a\u307e\u3059\n  * https://github.com/staltz/flux-challenge\n* \u30dd\u30a4\u30f3\u30c8\u306f\u3001\n  * \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e API \u3092\u5b9f\u884c\u3059\u308b (TodoMVC \u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u306a\u3044)\n  * \u30e6\u30fc\u30b6\u30fc\u306e\u64cd\u4f5c\u7b49\u306b\u4f34\u3063\u3066\u3001 API \u306e\u5b9f\u884c\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u304c\u3042\u308b\n\n## reducer\n* TodoMVC \u306e\u3068\u304d\u540c\u69d8\u306a\u306e\u3067\u3001\u5272\u611b\n\n## store\n* \u3053\u3061\u3089\u3082 TodoMVC \u306e\u3068\u304d\u3068\u540c\u69d8\u3060\u304c\u3001\u4e0a\u8a18\u306e\u8981\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u72b6\u614b\u3068\u3057\u3066\u4fdd\u6301\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\nSithLordsStore.ts\n\n```ts\nexport interface SithLordsState {\n  currentPlanet: string;\n  sithList: Array<Sith | SithToBeFetched | EmptySith>;\n  onGoingRequests: {[url: string]: JQueryXHR}; // \u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n}\n\nexport default class SithLordsStore extends Store<SithLordsState> {\n  // ... \u7565\n}\n```\n\n## action\n* Redux \u306e\u5834\u5408\u3001\u975e\u540c\u671f\u306f\u3053\u3053\u3067\u51e6\u7406\u3059\u308b\n* \u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u306e\u4f8b\n  * \u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306e\u3046\u3061\u3001 `requestPosts`, `receivePosts` \u306f\u540c\u671f\u306a action \u3067\u3001 `fetchPosts` \u306f\u975e\u540c\u671f\u306a action\n  * `dispatch` \u306f action \u3092\u767a\u884c\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3001\u540c\u671f\u306e\u5834\u5408\u306f view \u304b\u3089 `dispatch(requestPosts)` \u306a\u3069\u3068\u3057\u3066\u4f7f\u3046\u3002\u975e\u540c\u671f\u306e\u3068\u304d\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092 action \u306e\u4e2d\u3067\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u3001\u500b\u4eba\u7684\u306b\u306f\u304b\u306a\u308a\u9055\u548c\u611f\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u306a\u3093\u3067\u3057\u3087\u3046\uff1f\uff1f\n\n```js\nimport fetch from 'isomorphic-fetch'\n\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\nfunction requestPosts(reddit) {\n  return {\n    type: REQUEST_POSTS,\n    reddit\n  }\n}\n\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\nfunction receivePosts(reddit, json) {\n  return {\n    type: RECEIVE_POSTS,\n    reddit,\n    posts: json.data.children.map(child => child.data),\n    receivedAt: Date.now()\n  }\n}\n\nexport function fetchPosts(reddit) {\n\n  // Thunk middleware knows how to handle functions.\n  // It passes the dispatch method as an argument to the function,\n  // thus making it able to dispatch actions itself.\n\n  return function (dispatch) {\n\n    // First dispatch: the app state is updated to inform\n    // that the API call is starting.\n\n    dispatch(requestPosts(reddit))\n\n    // The function called by the thunk middleware can return a value,\n    // that is passed on as the return value of the dispatch method.\n\n    // In this case, we return a promise to wait for.\n    // This is not required by thunk middleware, but it is convenient for us.\n\n    return fetch(`http://www.reddit.com/r/${reddit}.json`)\n      .then(response => response.json())\n      .then(json =>\n\n        // We can dispatch many times!\n        // Here, we update the app state with the results of the API call.\n\n        dispatch(receivePosts(reddit, json))\n      )\n\n      // In a real world app, you also want to\n      // catch any error in the network call.\n  }\n}\n```\n\n\u5f15\u7528\u5143: http://rackt.org/redux/docs/advanced/AsyncActions.html\n\n* \u300c\u9055\u548c\u611f\u304c\u3042\u308b\u300d\u306a\u3069\u3068\u8a00\u3063\u305f\u3082\u306e\u306e\u3001\u3072\u3068\u307e\u305a Redux \u3068\u540c\u69d8\u306b\u4f5c\u308d\u3046\u3068\u3057\u3066\u307f\u308b\n\n### \u3068\u3053\u308d\u304c\n* \u56f0\u3063\u305f\u3053\u3068\u306b\u306a\u308b\u3002\n* \u6b63\u78ba\u306b\u306f\u3001 actions \u3092\u4f5c\u308b\u6bb5\u968e\u3067\u306f\u7279\u306b\u56f0\u3089\u306a\u304b\u3063\u305f\u306e\u3060\u304c\u3001 view \u3068\u3064\u306a\u304e\u3053\u3080\u6bb5\u968e\u3067\u56f0\u308b\u3002\n* \u4f55\u306b\u56f0\u3063\u305f\u306e\u304b\u3001\u6587\u7ae0\u3060\u3051\u3067\u6b63\u78ba\u306b\u4f1d\u3048\u3089\u308c\u308b\u304b\u81ea\u4fe1\u304c\u306a\u3044\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n### Flux Challenge \u306e\u30a2\u30d7\u30ea\u3067\u3001 API \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u751f\u3059\u308b\u6d41\u308c\n1. \u30e6\u30fc\u30b6\u30fc\u304c\u3001\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u305f\u4e00\u89a7\u306b\u5bfe\u3057\u3066\u3001 scroll up/down \u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u4e0a\u4e0b\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u3088\u3046\u3068\u3059\u308b\n2. view \u304b\u3089 scroll up/down \u306e action \u3092\u767a\u884c (\u5b9f\u884c) \u3059\u308b\n3. reducer \u3067\u3001 scroll \u5f8c\u306e\u65b0\u3057\u3044\u72b6\u614b\u3092\u751f\u6210\u3059\u308b (scroll \u306b\u3088\u308a\u65b0\u305f\u306b\u8868\u793a\u3055\u308c\u308b\u884c\u306f\u6700\u521d\u306f\u7a7a\u3068\u306a\u308b)\n4. store \u306e state \u304c\u66f4\u65b0\u3055\u308c\u3001\u305d\u308c\u306b\u4f34\u3063\u3066 view \u3082\u66f4\u65b0\u3055\u308c\u308b\n5. \u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001\u7a7a\u306e\u884c\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n### \u3067\u3001 5 \u3067\u5b9f\u884c\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3063\u3066\u3001\u3069\u3053\u304b\u3089\u3069\u3046\u30c8\u30ea\u30ac\u30fc\u3059\u308c\u3070\u3044\u3044\u306e\uff1f\n* 5 \u306e\u6642\u70b9\u3067\u306f\u3001\u300c\u30dc\u30fc\u30eb\u300d\u306f view \u306b\u3042\u308b\u72b6\u614b\u306a\u306e\u3067\u3001 Flux \u7684\u306b\u306f view \u304b\u3089\u975e\u540c\u671f\u306a action \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u306a\u308b\uff1f\uff1f\n* \u3067\u3082\u305d\u308c\u3063\u3066\u6c17\u6301\u3061\u60aa\u304f\u306a\u3044\u3067\u3059\u304b\uff1f\n  * view \u306f\u30e6\u30fc\u30b6\u30fc\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3042\u308b\u3079\u304d\u306a\u306e\u306b\u5bfe\u3057\u3001 5 \u306e\u51e6\u7406\u306f\u5358\u4f53\u3067\u306f\u5b8c\u5168\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5185\u90e8\u7684\u306a\u51e6\u7406\u3002\n  * \u305d\u306e\u3088\u3046\u306a\u51e6\u7406\u3092 view \u306e\u8cac\u52d9\u3068\u3057\u3066\u3057\u307e\u3046\u306e\u306f\u304b\u306a\u308a\u306e\u9055\u548c\u611f\u3002\n\n### Cycle.js \u7684\u306a\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\n* \u5916\u90e8\u3078\u306e\u526f\u4f5c\u7528\u3092\u6301\u3064\u3068\u3044\u3046\u70b9\u3067\u3001 HTTP request \u3068 DOM \u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u898b\u3066\u540c\u69d8\u306e\u3082\u306e\u3068\u3057\u3066\u6349\u3048\u308b\u3002\n  * \u65e5\u672c\u8a9e\u3060\u3068\u3053\u306e\u8a18\u4e8b\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002 http://amagitakayosi.hatenablog.com/entry/2015/10/13/080000\n* HTTP request \u3092\u62c5\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u65b0\u305f\u306b\u4f5c\u308b\u3002\n  * 5 \u306e\u51e6\u7406\u306f\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8cac\u52d9\u3002\n  * API \u306e\u5b9f\u884c\u3082\u3001 action \u304b\u3089\u3067\u306f\u306a\u304f\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u884c\u3046\u3002\n  * \u7d50\u679c\u3001 action \u304b\u3089\u975e\u540c\u671f\u51e6\u7406\u306f\u6d88\u3048\u3001\u5b9f\u88c5\u306f TodoMVC \u306e\u3068\u304d\u3068\u540c\u69d8\u306b\u3002 (\u306a\u306e\u3067\u30b3\u30fc\u30c9\u306f\u5272\u611b)\n\n## http\n* \u4e0a\u8a18\u3067\u7d39\u4ecb\u3057\u305f\u3001 HTTP request \u3092\u62c5\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3002\n* \u6982\u8981\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002 (\u30b3\u30fc\u30c9\u306f\u5c11\u3057\u9577\u3044\u306e\u3067\u5272\u611b\u3057\u307e\u3059)\n    1. store \u306e state \u306e\u66f4\u65b0\u3092\u76e3\u8996\u3057\u3001\u66f4\u65b0\u3055\u308c\u305f state \u306e\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u3001\u65b0\u305f\u306b API \u3092\u767a\u884c\u3057\u305f\u308a\u3001\u65e2\u5b58\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u308a\u3059\u308b\u3002\n    2. API \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304d\u305f\u3089\u3001\u305d\u308c\u306b\u5fdc\u3058\u305f action \u3092\u5b9f\u884c\u3059\u308b\u3002\n\n## view\n* \u57fa\u672c\u7684\u306b\u306f TodoMVC \u3068\u540c\u69d8\u3060\u304c\u3001 http \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u3092\u8ffd\u52a0\u3002\n* view \u3068 http \u306e\u95a2\u4fc2\u3092\u8003\u3048\u308b\u3068\u3001 view \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067 http \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u306e\u306f\u9055\u548c\u611f\u304c\u3042\u308b\u304c\u3001 React \u306e\u5834\u5408\u53b3\u5bc6\u306b\u306f `render` \u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u304c view \u3067\u3042\u3063\u3066\u3001 root \u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u3001\u305d\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5168\u4f53\u306e\u521d\u671f\u5316\u3092\u62c5\u3063\u3066\u3044\u3044\u306f\u305a\u3001\u3068\u3044\u3046\u8003\u3048\u65b9\u3002\n\nSithLordsUI.tsx\n\n```ts\nexport default class SithLordsUI extends React.Component<{scrollSize: number}, SithLordsState> {\n  private actions: SithLordsActions;\n\n  constructor(props: {scrollSize: number}) {\n    super(props);\n\n    this.actions = new SithLordsActions(SithLordsReducersFactory.create());\n    const store = new SithLordsStore(this.actions.observable, initialState);\n    const http = new SithLordsHttp(this.actions, store);\n\n    store.observable.subscribe((state) =>\n      this.state ? this.setState(state) : this.state = state\n    );\n  }\n```\n\n## Flux challenge \u307e\u3068\u3081\n* \u5168\u4f53\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n```\n                      Reducers\n                        ^ |\n                        | |\n                        | | fetch reducer\n                        | |\n                        | v   observe\n                ----> Actions <------ Store <----\n                | |                           | |\nimperative call | ----------- View ------------ | observe\n                |                               |\n                ------------- HTTP --------------\n```\n\n# \u611f\u60f3\n* Redux \u3063\u307d\u3044\u3082\u306e\u3092 Rx \u3067\u5b9f\u88c5\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u521d\u3081\u3066\u307f\u305f\u3089\u554f\u984c\u306b\u3076\u3064\u304b\u308a\u3001\u7d50\u5c40 Cycle.js \u306e\u8003\u3048\u65b9\u5206\u304b\u308a\u3084\u3059\u304f\u3066\u3044\u3044\u306a\u3001\u3068\u3044\u3046\u3068\u3053\u308d\u306b\u843d\u3061\u7740\u3044\u305f\u3002\n  * HTTP request \u3068 DOM \u3092\u540c\u69d8\u306b\u6271\u3046\u3002\n  * \u9055\u3044\u306f\u3001\u524d\u8005\u304c\u30b5\u30fc\u30d0\u30fc\u306b\u5bfe\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3001\u5f8c\u8005\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3042\u308b\u3053\u3068\u3002\n* \u305d\u3082\u305d\u3082 Flux challenge \u81ea\u4f53 Cycle.js \u306e\u4f5c\u8005\u304c\u4e3b\u50ac\u306a\u305f\u3081\u3001\u3053\u306e\u3088\u3046\u306a\u611f\u60f3\u3092\u6301\u3064\u306b\u81f3\u3063\u305f\u306e\u306f\u5f7c\u306e\u8853\u4e2d\u306b\u306f\u307e\u3063\u305f\u611f\u306f\u3042\u308b\u3002\n  * \u5f7c\u306f Flux \u306f\u975e\u540c\u671f\u51e6\u7406\u306b\u5f31\u3044\u3068\u8003\u3048\u3066\u3044\u3066\u3001 Flux \u30e6\u30fc\u30b6\u30fc\u304c\u3069\u306e\u3088\u3046\u306b\u3053\u306e\u554f\u984c\u306b\u5bfe\u51e6\u3059\u308b\u304b\u3092\u898b\u308b\u305f\u3081\u306b\u3053\u306e\u304a\u984c\u3092\u8003\u3048\u305f\u3089\u3057\u3044\u3002\n  * \u8a73\u7d30\u306f https://github.com/staltz/flux-challenge#purpose\n  * \u307e\u3042\u3067\u3082\u78ba\u304b\u306b\u3001 Flux \u3084 Redux \u306e\u975e\u540c\u671f\u51e6\u7406\u3063\u3066\u304d\u308c\u3044\u3058\u3083\u306a\u3044\u306a\u3042\u3068\u601d\u3046\u3002\n* Cycle.js \u3078\u306e\u8208\u5473\u304c\u6df1\u307e\u308b\u304c\u3001\u81ea\u524d\u306e\u5b9f\u88c5\u3082\u4eca\u306e\u3068\u3053\u308d\u305d\u3093\u306a\u306b\u60aa\u3044\u6c17\u304c\u3057\u306a\u3044\u306e\u3067\u3001\u4eca\u3059\u3050\u89e6\u3089\u306a\u304f\u3066\u3082\u3044\u3044\u304b\u306a\u3068\u3044\u3046\u611f\u3058\u3002\n  * Virtual DOM \u3068 Rx \u3078\u306e\u4f9d\u5b58\u3060\u3051\u3067\u4f5c\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u3044\u3044\u3002\n"}