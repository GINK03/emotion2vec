{"context": " More than 1 year has passed since last update.\u96fb\u6c17\u901a\u4fe1\u5927\u5b66\u306e\u5927\u5c71\u3067\u3059\uff0e\nBitVisor\u306eATA\u30c9\u30e9\u30a4\u30d0\u3084AHCI\u30c9\u30e9\u30a4\u30d0\u3092\u6539\u9020\u3059\u308b\u3068\uff0c\u30b9\u30c8\u30ec\u30fc\u30b8I/O\u30c7\u30fc\u30bf\u306e\u76e3\u8996\u3084\u52a0\u5de5\u304c\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\uff0e\n\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\uff0c\u4e0d\u9069\u5207\u30ef\u30fc\u30c9\u306e\u81ea\u52d5\u524a\u9664\uff0c\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u63db\u3048\u306a\u3069\uff0c\u8272\u3005\u306a\u5fdc\u7528\u304c\u3042\u308a\u307e\u3059\uff0e\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0c\n\nHDD\u304b\u3089OS\u306b\u8aad\u307f\u8fbc\u3080\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\uff0cBitVisor\u304c\u6587\u5b57\u5217\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u308a\u76e3\u8996\u3059\u308b\n\u30de\u30c3\u30c1\u3057\u305f\u3089\uff0cBitVisor\u304c\u305d\u306e\u6587\u5b57\u5217\u3092\u5225\u306e\u6587\u5b57\u5217\u3067\u7f6e\u304d\u63db\u3048\u308b\n\n\u3068\u3044\u3046\u51e6\u7406\u3092\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\uff0e\nAHCI\u3067HDD\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\uff0cBitVisor 1.4\u306eahci.c\u306eahci_copy_dmabuf\u95a2\u6570\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6539\u9020\u3059\u308b\u3068\uff0c\u305d\u308c\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\uff0e#if 1\u3068#endif\u3067\u56f2\u307e\u308c\u305f\u90e8\u5206\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\nahci.c\nstatic void\nahci_copy_dmabuf (struct ahci_port *port, int cmdhdr_index, bool wr,\n                  struct command_table *cmdtbl, u16 prdtl)\n{\n        u8 *mybuf = port->my[cmdhdr_index].dmabuf;\n        u32 dba, dbau, dbc;\n        phys_t db_phys;\n        void *gbuf;\n        int i;\n        u32 remain;\n\n        ASSERT (mybuf);\n        remain = port->my[cmdhdr_index].dmabuflen;\n        if (wr) {\n                /* copy guest buffer to shadow buffer */\n                ...\n                }\n        } else {\n                /* copy shadow buffer to guest buffer */\n                for (i = 0; i < prdtl; i++) {\n                        dba = cmdtbl->prdt[i].dba;\n                        dbau = cmdtbl->prdt[i].dbau;\n                        dbc = (cmdtbl->prdt[i].dbc & 0x3FFFFE) + 2;\n                        ASSERT (remain >= dbc);\n                        remain -= dbc;\n                        db_phys = ahci_get_phys (dba & ~1, dbau);\n                        gbuf = mapmem_gphys (db_phys, dbc, MAPMEM_WRITE);\n                        memcpy (gbuf, mybuf, dbc);\n#if 1\n                        {\n                          char *keyword     = \"Merry Christmas\";\n                          char *new_keyword = \"Meri Krushmimas\";\n                          u32 keyword_len = strlen(keyword);\n                          u32 j;\n                          u8* p = gbuf;\n                          if (dbc >= 4096) {\n                            for (j = 0; j <= dbc - keyword_len; j++) {\n                              if (p[j] == keyword[0] && p[j+1] == keyword[1]) {\n                                if (memcmp(p + j, keyword, keyword_len) == 0) {\n                                  printf(\"Keyword \\\"%s\\\" found!  I replace it with \\\"%s\\\".\\n\", keyword, new_keyword);\n                                  memcpy(p + j, new_keyword, keyword_len);\n                                }\n                              }\n                            }\n                          }\n                        }\n#endif\n                        mybuf += dbc;\n                        unmapmem (gbuf, dbc);\n                }\n        }\n        ASSERT (remain == 0);\n}\n\n\n\nkeyword\u304c\u6587\u5b57\u5217\u30de\u30c3\u30c1\u30f3\u30b0\u5bfe\u8c61\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\uff0cnew_keyword\u304c\u305d\u308c\u3092\u7f6e\u63db\u3059\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u3059\uff0enew_keyword\u306fkeyword\u3088\u308a\u3082\u77ed\u3044\u6587\u5b57\u5217\u306b\u3057\u307e\u3059\uff0e\n\u5143\u3005\u306f\u2193\u3053\u306e\u3088\u3046\u306b\u5b9f\u884c\u3055\u308c\u3066\u3044\u305f\u3082\u306e\u304c\n\n$ cat message.txt\nI wish you a Merry Christmas!\n\n\u3053\u306eBitVisor\u304cOS\u306e\u4e0b\u3067\u52d5\u3044\u3066\u3044\u308b\u3068\u304d\u306f\u2193\u3053\u306e\u3088\u3046\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\n\n$ cat message.txt\nI wish you a Meri Krushmimas!\n\n\u591a\u5206\uff0c\u30d6\u30e9\u30a6\u30b6\u306a\u3069\u306e\u5927\u304d\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8868\u793a\u306b\u3082\u5f71\u97ff\u3092\u4e0e\u3048\u3089\u308c\u308b\u306f\u305a\u3067\u3059\uff0e\n\u30b9\u30c8\u30ec\u30fc\u30b8\u304b\u3089\u30e1\u30e2\u30ea\u306b\u8f09\u305b\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u7f6e\u63db\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u30b9\u30c8\u30ec\u30fc\u30b8\u4e0a\u306e\u30c7\u30fc\u30bf\u306f\u5909\u308f\u308a\u307e\u305b\u3093\uff0e\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306fkeyword\u306e\u6700\u521d\u306e2\u6587\u5b57\u3060\u3051\u3092\u5148\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066memcmp\u306e\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u6e1b\u3089\u3057\u3066\u3044\u307e\u3059\uff0e\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306f\u304b\u306a\u308a\u7701\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\nAHCI\u3067\u306f\u306a\u304fATA\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306f\uff0cata_bm.c\u306eata_copy_shadow_buf\u3092\u6539\u9020\u3059\u308c\u3070\uff0c\u3046\u307e\u304f\u3044\u304f\u3068\u601d\u3044\u307e\u3059\uff0e\n\u30b9\u30c8\u30ec\u30fc\u30b8I/O\u30c7\u30fc\u30bf\u306e\u76e3\u8996\u3084\u52a0\u5de5\u306b\u3042\u305f\u3063\u3066\u306f\uff0cBitVisor\u306eATA\u30c9\u30e9\u30a4\u30d0\u3092\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\uff0cdefconfig\u30d5\u30a1\u30a4\u30eb\u306eata\u306e\u90e8\u5206\u30921\u306b\u3057\u305f\u308a\uff0cconfig.sh\u3067ATA_DRIVER\u3092\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\uff0c\u591a\u5206\u3042\u308a\u307e\u3059\uff0e\n\n\u8cc7\u6599\u3084\u767a\u8868\nBitVisor\u306b\u3088\u308bI/O\u30c7\u30fc\u30bf\u306e\u6587\u5b57\u5217\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u767a\u8868\u304c\u3042\u308a\u307e\u3059\uff0e\n\n\u6cb3\u5d0e \u96c4\u5927, \u5927\u5c71 \u6075\u5f18. \"BitVisor\u306e\u305f\u3081\u306e\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u691c\u51fa\u6a5f\u80fd\", BitVisor Summit, \u6771\u4eac, 2012\u5e7412\u6708. \u30b9\u30e9\u30a4\u30c9\n\u5927\u5c71 \u6075\u5f18, \u6cb3\u5d0e \u96c4\u5927.  \"\u30cf\u30a4\u30d1\u30d0\u30a4\u30b6\u5185\u30b7\u30b0\u30cd\u30c1\u30e3\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\", \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b7\u30f3\u30dd\u30b8\u30a6\u30e02012\uff08CSS2012\uff09\uff0c\u30de\u30eb\u30a6\u30a7\u30a2\u5bfe\u7b56\u7814\u7a76\u4eba\u6750\u80b2\u6210\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d72012\uff08MWS2012\uff09, pages 122-129, \u677e\u6c5f, 2012\u5e7410\u6708. \u8ad6\u6587\n\u6cb3\u5d0e \u96c4\u5927, \u5927\u5c71 \u6075\u5f18.  \"VMM\u3092\u7528\u3044\u305f\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\u30b7\u30b9\u30c6\u30e0\u306e\u305f\u3081\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u30c7\u30fc\u30bf\u66f4\u65b0\u6a5f\u80fd\u3068\u30e1\u30e2\u30ea\u30c7\u30fc\u30bf\u691c\u67fb\u6a5f\u80fd\", \u60c5\u5831\u51e6\u7406\u5b66\u4f1a2012\u5e74\u4e26\u5217\uff0f\u5206\u6563\uff0f\u5354\u8abf\u51e6\u7406\u306b\u95a2\u3059\u308b\u300e\u9ce5\u53d6\u300f\u30b5\u30de\u30fc\u30fb\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\uff08SWoPP\u9ce5\u53d62012\uff09, 7 pages, \u9ce5\u53d6, 2012\u5e748\u6708. \u8ad6\u6587\nYoshihiro Oyama, Tran Truong Duc Giang, Yosuke Chubachi, Takahiro Shinagawa, Kazuhiko Kato.  \"Detecting Malware Signatures in a Thin Hypervisor\", In Proceedings of the 27th Annual ACM Symposium on Applied Computing (SAC 2012), pages 1807-1814, Riva del Garda, Italy, March 2012. Paper\nTran Truong Duc Giang, \u5927\u5c71 \u6075\u5f18, \u5fe0\u9262 \u6d0b\u8f14, \u54c1\u5ddd \u9ad8\u5ee3, \u52a0\u85e4 \u548c\u5f66.  \"\u6e96\u30d1\u30b9\u30b9\u30eb\u30fc\u578b\u4eee\u60f3\u30de\u30b7\u30f3\u30e2\u30cb\u30bf\u3078\u306e\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\u6a5f\u80fd\u306e\u62e1\u5f35\", \u7b2c22\u56de \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u30fb\u30b7\u30f3\u30dd\u30b8\u30a6\u30e0 (ComSys 2010), pages 13-20, \u5927\u962a\u5927\u5b66 \u4e2d\u4e4b\u5cf6\u30bb\u30f3\u30bf\u30fc, 2010\u5e7411\u6708.\nTran Truong Duc Giang, \u5927\u5c71 \u6075\u5f18, \u5fe0\u9262 \u6d0b\u8f14, \u54c1\u5ddd \u9ad8\u5ee3, \u52a0\u85e4 \u548c\u5f66.  \"\u6e96\u30d1\u30b9\u30b9\u30eb\u30fc\u578bVMM\u306e\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\u6a5f\u80fd\u306b\u3088\u308b\u62e1\u5f35\", \u60c5\u5831\u51e6\u7406\u5b66\u4f1a \u7b2c142\u56de\u30de\u30eb\u30c1\u30e1\u30c7\u30a3\u30a2\u901a\u4fe1\u3068\u5206\u6563\u51e6\u7406\u30fb\u7b2c48\u56de\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5408\u540c\u7814\u7a76\u767a\u8868\u4f1a, \u4ed9\u53f0, 2010\u5e743\u6708. \u8ad6\u6587\n\n\u96fb\u6c17\u901a\u4fe1\u5927\u5b66\u306e\u5927\u5c71\u3067\u3059\uff0e\n\nBitVisor\u306eATA\u30c9\u30e9\u30a4\u30d0\u3084AHCI\u30c9\u30e9\u30a4\u30d0\u3092\u6539\u9020\u3059\u308b\u3068\uff0c\u30b9\u30c8\u30ec\u30fc\u30b8I/O\u30c7\u30fc\u30bf\u306e\u76e3\u8996\u3084\u52a0\u5de5\u304c\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\uff0e\n\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\uff0c\u4e0d\u9069\u5207\u30ef\u30fc\u30c9\u306e\u81ea\u52d5\u524a\u9664\uff0c\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u63db\u3048\u306a\u3069\uff0c\u8272\u3005\u306a\u5fdc\u7528\u304c\u3042\u308a\u307e\u3059\uff0e\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0c\n\n- HDD\u304b\u3089OS\u306b\u8aad\u307f\u8fbc\u3080\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\uff0cBitVisor\u304c\u6587\u5b57\u5217\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u308a\u76e3\u8996\u3059\u308b\n- \u30de\u30c3\u30c1\u3057\u305f\u3089\uff0cBitVisor\u304c\u305d\u306e\u6587\u5b57\u5217\u3092\u5225\u306e\u6587\u5b57\u5217\u3067\u7f6e\u304d\u63db\u3048\u308b\n\n\u3068\u3044\u3046\u51e6\u7406\u3092\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\uff0e\n\nAHCI\u3067HDD\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\uff0cBitVisor 1.4\u306eahci.c\u306eahci_copy_dmabuf\u95a2\u6570\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6539\u9020\u3059\u308b\u3068\uff0c\u305d\u308c\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\uff0e#if 1\u3068#endif\u3067\u56f2\u307e\u308c\u305f\u90e8\u5206\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\n```c:ahci.c\nstatic void\nahci_copy_dmabuf (struct ahci_port *port, int cmdhdr_index, bool wr,\n                  struct command_table *cmdtbl, u16 prdtl)\n{\n        u8 *mybuf = port->my[cmdhdr_index].dmabuf;\n        u32 dba, dbau, dbc;\n        phys_t db_phys;\n        void *gbuf;\n        int i;\n        u32 remain;\n\n        ASSERT (mybuf);\n        remain = port->my[cmdhdr_index].dmabuflen;\n        if (wr) {\n                /* copy guest buffer to shadow buffer */\n                ...\n                }\n        } else {\n                /* copy shadow buffer to guest buffer */\n                for (i = 0; i < prdtl; i++) {\n                        dba = cmdtbl->prdt[i].dba;\n                        dbau = cmdtbl->prdt[i].dbau;\n                        dbc = (cmdtbl->prdt[i].dbc & 0x3FFFFE) + 2;\n                        ASSERT (remain >= dbc);\n                        remain -= dbc;\n                        db_phys = ahci_get_phys (dba & ~1, dbau);\n                        gbuf = mapmem_gphys (db_phys, dbc, MAPMEM_WRITE);\n                        memcpy (gbuf, mybuf, dbc);\n#if 1\n                        {\n                          char *keyword     = \"Merry Christmas\";\n                          char *new_keyword = \"Meri Krushmimas\";\n                          u32 keyword_len = strlen(keyword);\n                          u32 j;\n                          u8* p = gbuf;\n                          if (dbc >= 4096) {\n                            for (j = 0; j <= dbc - keyword_len; j++) {\n                              if (p[j] == keyword[0] && p[j+1] == keyword[1]) {\n                                if (memcmp(p + j, keyword, keyword_len) == 0) {\n                                  printf(\"Keyword \\\"%s\\\" found!  I replace it with \\\"%s\\\".\\n\", keyword, new_keyword);\n                                  memcpy(p + j, new_keyword, keyword_len);\n                                }\n                              }\n                            }\n                          }\n                        }\n#endif\n                        mybuf += dbc;\n                        unmapmem (gbuf, dbc);\n                }\n        }\n        ASSERT (remain == 0);\n}\n\n```\n\nkeyword\u304c\u6587\u5b57\u5217\u30de\u30c3\u30c1\u30f3\u30b0\u5bfe\u8c61\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\uff0cnew_keyword\u304c\u305d\u308c\u3092\u7f6e\u63db\u3059\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u3059\uff0enew_keyword\u306fkeyword\u3088\u308a\u3082\u77ed\u3044\u6587\u5b57\u5217\u306b\u3057\u307e\u3059\uff0e\n\n\u5143\u3005\u306f\u2193\u3053\u306e\u3088\u3046\u306b\u5b9f\u884c\u3055\u308c\u3066\u3044\u305f\u3082\u306e\u304c\n\n> $ cat message.txt\n> I wish you a Merry Christmas!\n\n\u3053\u306eBitVisor\u304cOS\u306e\u4e0b\u3067\u52d5\u3044\u3066\u3044\u308b\u3068\u304d\u306f\u2193\u3053\u306e\u3088\u3046\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\n\n> $ cat message.txt\n> I wish you a Meri Krushmimas!\n\n\u591a\u5206\uff0c\u30d6\u30e9\u30a6\u30b6\u306a\u3069\u306e\u5927\u304d\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8868\u793a\u306b\u3082\u5f71\u97ff\u3092\u4e0e\u3048\u3089\u308c\u308b\u306f\u305a\u3067\u3059\uff0e\n\n\u30b9\u30c8\u30ec\u30fc\u30b8\u304b\u3089\u30e1\u30e2\u30ea\u306b\u8f09\u305b\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u7f6e\u63db\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u30b9\u30c8\u30ec\u30fc\u30b8\u4e0a\u306e\u30c7\u30fc\u30bf\u306f\u5909\u308f\u308a\u307e\u305b\u3093\uff0e\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306fkeyword\u306e\u6700\u521d\u306e2\u6587\u5b57\u3060\u3051\u3092\u5148\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066memcmp\u306e\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u6e1b\u3089\u3057\u3066\u3044\u307e\u3059\uff0e\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306f\u304b\u306a\u308a\u7701\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\n\nAHCI\u3067\u306f\u306a\u304fATA\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306f\uff0cata_bm.c\u306eata_copy_shadow_buf\u3092\u6539\u9020\u3059\u308c\u3070\uff0c\u3046\u307e\u304f\u3044\u304f\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u30b9\u30c8\u30ec\u30fc\u30b8I/O\u30c7\u30fc\u30bf\u306e\u76e3\u8996\u3084\u52a0\u5de5\u306b\u3042\u305f\u3063\u3066\u306f\uff0cBitVisor\u306eATA\u30c9\u30e9\u30a4\u30d0\u3092\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\uff0cdefconfig\u30d5\u30a1\u30a4\u30eb\u306eata\u306e\u90e8\u5206\u30921\u306b\u3057\u305f\u308a\uff0cconfig.sh\u3067ATA_DRIVER\u3092\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\uff0c\u591a\u5206\u3042\u308a\u307e\u3059\uff0e\n\n## \u8cc7\u6599\u3084\u767a\u8868\n\nBitVisor\u306b\u3088\u308bI/O\u30c7\u30fc\u30bf\u306e\u6587\u5b57\u5217\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u767a\u8868\u304c\u3042\u308a\u307e\u3059\uff0e\n\n- \u6cb3\u5d0e \u96c4\u5927, \u5927\u5c71 \u6075\u5f18. \"BitVisor\u306e\u305f\u3081\u306e\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u691c\u51fa\u6a5f\u80fd\", BitVisor Summit, \u6771\u4eac, 2012\u5e7412\u6708. [\u30b9\u30e9\u30a4\u30c9](http://www.bitvisor.org/summit/slides/BitVisor-Summit-08-kawasaki.pdf)\n\n- \u5927\u5c71 \u6075\u5f18, \u6cb3\u5d0e \u96c4\u5927.  \"\u30cf\u30a4\u30d1\u30d0\u30a4\u30b6\u5185\u30b7\u30b0\u30cd\u30c1\u30e3\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\", \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b7\u30f3\u30dd\u30b8\u30a6\u30e02012\uff08CSS2012\uff09\uff0c\u30de\u30eb\u30a6\u30a7\u30a2\u5bfe\u7b56\u7814\u7a76\u4eba\u6750\u80b2\u6210\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d72012\uff08MWS2012\uff09, pages 122-129, \u677e\u6c5f, 2012\u5e7410\u6708. [\u8ad6\u6587](http://www.iwsec.org/mws/2012/manuscript/1A2-3.pdf)\n\n- \u6cb3\u5d0e \u96c4\u5927, \u5927\u5c71 \u6075\u5f18.  \"VMM\u3092\u7528\u3044\u305f\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\u30b7\u30b9\u30c6\u30e0\u306e\u305f\u3081\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u30c7\u30fc\u30bf\u66f4\u65b0\u6a5f\u80fd\u3068\u30e1\u30e2\u30ea\u30c7\u30fc\u30bf\u691c\u67fb\u6a5f\u80fd\", \u60c5\u5831\u51e6\u7406\u5b66\u4f1a2012\u5e74\u4e26\u5217\uff0f\u5206\u6563\uff0f\u5354\u8abf\u51e6\u7406\u306b\u95a2\u3059\u308b\u300e\u9ce5\u53d6\u300f\u30b5\u30de\u30fc\u30fb\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\uff08SWoPP\u9ce5\u53d62012\uff09, 7 pages, \u9ce5\u53d6, 2012\u5e748\u6708. [\u8ad6\u6587](http://id.nii.ac.jp/1001/00083238/)\n\n- Yoshihiro Oyama, Tran Truong Duc Giang, Yosuke Chubachi, Takahiro Shinagawa, Kazuhiko Kato.  \"Detecting Malware Signatures in a Thin Hypervisor\", In Proceedings of the 27th Annual ACM Symposium on Applied Computing (SAC 2012), pages 1807-1814, Riva del Garda, Italy, March 2012. [Paper](http://dx.doi.org/10.1145/2245276.2232070)\n\n- Tran Truong Duc Giang, \u5927\u5c71 \u6075\u5f18, \u5fe0\u9262 \u6d0b\u8f14, \u54c1\u5ddd \u9ad8\u5ee3, \u52a0\u85e4 \u548c\u5f66.  \"\u6e96\u30d1\u30b9\u30b9\u30eb\u30fc\u578b\u4eee\u60f3\u30de\u30b7\u30f3\u30e2\u30cb\u30bf\u3078\u306e\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\u6a5f\u80fd\u306e\u62e1\u5f35\", \u7b2c22\u56de \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u30fb\u30b7\u30f3\u30dd\u30b8\u30a6\u30e0 (ComSys 2010), pages 13-20, \u5927\u962a\u5927\u5b66 \u4e2d\u4e4b\u5cf6\u30bb\u30f3\u30bf\u30fc, 2010\u5e7411\u6708.\n\n- Tran Truong Duc Giang, \u5927\u5c71 \u6075\u5f18, \u5fe0\u9262 \u6d0b\u8f14, \u54c1\u5ddd \u9ad8\u5ee3, \u52a0\u85e4 \u548c\u5f66.  \"\u6e96\u30d1\u30b9\u30b9\u30eb\u30fc\u578bVMM\u306e\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u51fa\u6a5f\u80fd\u306b\u3088\u308b\u62e1\u5f35\", \u60c5\u5831\u51e6\u7406\u5b66\u4f1a \u7b2c142\u56de\u30de\u30eb\u30c1\u30e1\u30c7\u30a3\u30a2\u901a\u4fe1\u3068\u5206\u6563\u51e6\u7406\u30fb\u7b2c48\u56de\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5408\u540c\u7814\u7a76\u767a\u8868\u4f1a, \u4ed9\u53f0, 2010\u5e743\u6708. [\u8ad6\u6587](http://id.nii.ac.jp/1001/00068208/)\n", "tags": ["BitVisor"]}