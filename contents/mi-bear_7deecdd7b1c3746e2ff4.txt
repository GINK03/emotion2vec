{"context": " More than 1 year has passed since last update.filter\u306fIE8\u3060\u3068\u5229\u7528\u3067\u304d\u306a\u3044\u3067\u3059\u3002\n\nlinks.js\nvar  page = require('webpage').create()\n    ,system = require('system')\n    ,ua, url;\n\nif (system.args.length != 3) {\n    console.log('[Error] Invalid Argument...');\n    phantom.exit();\n} else {\n    url = system.args[1];\n    ua = system.args[2];\n\n    page.settings.userAgent = ua;\n    page.open(url, function (status) {\n        if (status !== 'success') {\n            console.log('[Error] Unable to load the [' + url + '] ...');\n        } else {\n            var ret = page.evaluate(function () {\n                var aTag = document.links;\n                var aTagList = [];\n                var domain = location.href.match(/^[httpsfile]+:\\/{2,3}([0-9a-z\\.\\-:]+?):?[0-9]*?\\//i)[1];\n\n                for (var i = 0, len = aTag.length; i < len; i++) {\n                    if (aTag[i].href.indexOf(domain) == -1) continue;\n                    aTagList.push(aTag[i].href);\n                }\n\n                var aTagUniqueList = aTagList.filter(function (x, index, self) {\n                    return self.indexOf(x) === index;\n                });\n                return aTagUniqueList.join(\"\\n\");\n            });\n            console.log(ret);\n        }\n        phantom.exit();\n    });\n}\n\n\nfilter\u306fIE8\u3060\u3068\u5229\u7528\u3067\u304d\u306a\u3044\u3067\u3059\u3002\n\n```js:links.js\nvar  page = require('webpage').create()\n\t,system = require('system')\n\t,ua, url;\n\nif (system.args.length != 3) {\n\tconsole.log('[Error] Invalid Argument...');\n\tphantom.exit();\n} else {\n\turl = system.args[1];\n\tua = system.args[2];\n\t\n\tpage.settings.userAgent = ua;\n\tpage.open(url, function (status) {\n\t\tif (status !== 'success') {\n\t\t\tconsole.log('[Error] Unable to load the [' + url + '] ...');\n\t\t} else {\n\t\t\tvar ret = page.evaluate(function () {\n\t\t\t\tvar aTag = document.links;\n\t\t\t\tvar aTagList = [];\n\t\t\t\tvar domain = location.href.match(/^[httpsfile]+:\\/{2,3}([0-9a-z\\.\\-:]+?):?[0-9]*?\\//i)[1];\n\t\t\t\t\n\t\t\t\tfor (var i = 0, len = aTag.length; i < len; i++) {\n\t\t\t\t\tif (aTag[i].href.indexOf(domain) == -1) continue;\n\t\t\t\t\taTagList.push(aTag[i].href);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar aTagUniqueList = aTagList.filter(function (x, index, self) {\n\t\t\t\t\treturn self.indexOf(x) === index;\n\t\t\t\t});\n\t\t\t\treturn aTagUniqueList.join(\"\\n\");\n\t\t\t});\n\t\t\tconsole.log(ret);\n\t\t}\n\t\tphantom.exit();\n\t});\n}\n```\n", "tags": ["PhantomJS"]}