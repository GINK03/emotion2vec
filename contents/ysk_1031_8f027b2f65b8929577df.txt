{"context": "React Tutorial\u3092ES2015\u3067\u66f8\u3044\u305f\u6642\u306e\u30e1\u30e2\u3002\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u69cb\u9020\u306f\u4ee5\u4e0b\u3002\n- CommentBox\n  - CommentList\n    - Comment\n  - CommentForm\n\n\n\u6e96\u5099\n\u3044\u308d\u3044\u308d\u3068npm install\u3057\u305f\u7d50\u679c\u306epackage.json\u3002\n\npackage.json\n{\n  \"scripts\": {\n    \"build\": \"webpack\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.9.0\",\n    \"babel-loader\": \"^6.2.4\",\n    \"babel-preset-es2015\": \"^6.9.0\",\n    \"babel-preset-react\": \"^6.5.0\",\n    \"webpack\": \"^1.13.1\"\n  },\n  \"dependencies\": {\n    \"marked\": \"^0.3.5\",\n    \"react\": \"^15.1.0\",\n    \"react-dom\": \"^15.1.0\",\n    \"superagent\": \"^1.8.3\"\n  }\n}\n\n\nwebpack\u3067\u30d3\u30eb\u30c9\u3059\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u306e\u8a2d\u5b9a\u3082\u3002\n\nwebpack.config.babel.js\nimport path from 'path';\n\nconst src = path.resolve(__dirname, 'src');\nconst dist = path.resolve(__dirname, 'dist');\n\nexport default {\n  entry: `${src}/app.js`,\n\n  output: {\n    path: dist,\n    filename: 'bundle.js'\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.jsx?$/,\n        include: [src],\n        loader: 'babel'\n      }\n    ]\n  }\n};\n\n\n\nES2015 + React \u3067\u8a18\u8ff0\njs\u3092\u8aad\u307f\u8fbc\u3080HTML\u3092\u7528\u610f\u3002\n\nindex.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>React Tutorial</title>\n  </head>\n  <body>\n    <div id=\"container\"></div>\n    <script src=\"./dist/bundle.js\"></script>\n  </body>\n</html>\n\n\n\u4e00\u756a\u4e0a\u306e\u30ec\u30a4\u30e4\u30fc\u306eCommentBox\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092render\u3059\u308bjs\u3002Webpack\u306e\u8a2d\u5b9a\u306b\u3082\u66f8\u3044\u305f\u3088\u3046\u306b\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\nsrc/app.js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport CommentBox from './components/CommentBox';\n\nrender(\n  <CommentBox url=\"http://localhost:4567/api/comments\" pollInterval={2000} />,\n  document.getElementById('container')\n);\n\n\n\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8a18\u8ff0\u3002\nclass\u8a18\u6cd5\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u6210\u3002\n\nsrc/components/CommentBox.js\nimport React from 'react';\nimport request from 'superagent';\nimport CommentList from './CommentList';\nimport CommentForm from './CommentForm';\n\nexport default class CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {data: []};\n\n    this.loadCommentsFromServer = this.loadCommentsFromServer.bind(this);\n    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n  }\n  loadCommentsFromServer () {\n    request\n      .get(this.props.url)\n      .end((error, response) =>\n        this.setState({data: JSON.parse(response.text)}));\n  }\n  handleCommentSubmit(comment) {\n    const comments = this.state.data;\n    comment.id = Date.now();\n    const newComments = [...comments, comment];\n    this.setState({data: newComments});\n\n    request\n      .post(this.props.url)\n      .send(comment)\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n      .end((error, response) => {\n        if (error !== null) {\n          this.setState({data: comments});\n        } else {\n          this.setState({data: JSON.parse(response.text)});\n        }\n      });\n  }\n  componentDidMount() {\n    this.loadCommentsFromServer();\n    setInterval(this.loadCommentsFromServer, this.props.pollInterval);\n  }\n  render() {\n    return (\n      <div className=\"commentBox\">\n        <h1>Comments</h1>\n        <CommentList data={this.state.data} />\n        <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n      </div>\n    );\n  }\n}\n\n\n\nsrc/components/CommentList.js\nimport React from 'react';\nimport Comment from './Comment';\n\nexport default class CommentList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const commentNodes = this.props.data.map((comment) =>\n      <Comment author={comment.author} key={comment.id}>{comment.text}</Comment>);\n    return (\n      <div className=\"commentList\">{commentNodes}</div>\n    );\n  }\n}\n\n\n\nsrc/components/Comment.js\nimport React from 'react';\nimport marked from 'marked';\n\nexport default class Comment extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  rawMarkup() {\n    const rawMarkup = marked(this.props.children.toString(), {sanitize: true});\n    return { __html: rawMarkup };\n  }\n  render() {\n    return (\n      <div className=\"comment\">\n        <h2 className=\"commentAuthor\">\n          {this.props.author}\n        </h2>\n        <span dangerouslySetInnerHTML={this.rawMarkup()} />\n      </div>\n    );\n  }\n}\n\n\n\nsrc/components/CommentForm.js\nimport React from 'react';\n\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'author': '',\n      'text': ''\n    };\n\n    this.handleAuthorChange = this.handleAuthorChange.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleAuthorChange(e) {\n    this.setState({author: e.target.value});\n  }\n  handleTextChange(e) {\n    this.setState({text: e.target.value});\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const author = this.state.author.trim();\n    const text = this.state.text.trim();\n    if (!text || !author) {\n      return;\n    }\n    this.props.onCommentSubmit({author: author, text: text});\n    this.setState({\n      'author': '',\n      'text': ''\n    });\n  }\n  render() {\n    return (\n      <form className=\"commentForm\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Your name\"\n          value={this.state.author}\n          onChange={this.handleAuthorChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Say something...\"\n          value={this.state.text}\n          onChange={this.handleTextChange}\n        />\n        <input type=\"submit\" value=\"Post\" />\n      </form>\n    );\n  }\n}\n\n\n\u3053\u308c\u3067\u7d42\u308f\u308a\u3002\nnpm run build\u3059\u308b\u3068\u3001\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u3055\u308c\u305fdist/bundle.js\u304c\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u308c\u3092HTML\u3067\u8aad\u307f\u8fbc\u3080\u3002\n\n\u203b\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\nRuby\u306eSinatra\u3067\u3001\u975e\u5e38\u306b\u96d1\u306a\u5b9f\u88c5\u306e\u3084\u3064\u3092\u66f8\u3044\u305f\u3002\n\nGemfile\ngem 'sinatra'\ngem 'sinatra-contrib'\n\n\n\napp.rb\nrequire 'sinatra'\nrequire 'sinatra/reloader' if development?\nrequire 'json'\n\nresponse_body = [\n  { id: 1,\n    author: \"Peter Hunt\",\n    text: \"This is one comment\"\n  },\n  {\n    id: 2,\n    author: \"Jordan Walke\",\n    text: \"This is *another* comment\"\n  }\n]\n\nget '/api/comments' do\n  headers 'Access-Control-Allow-Origin' => '*'\n  body response_body.to_json\nend\n\npost '/api/comments' do\n  response_body << {\n    id: response_body.last[:id] + 1,\n    author: params[\"author\"],\n    text: params[\"text\"]\n  }\n\n  headers 'Access-Control-Allow-Origin' => '*'\n  body response_body.to_json\nend\n\n\nruby app.rb\u3092\u5b9f\u884c\u3059\u308b\u3068http://localhost:4567\u3067\u958b\u767a\u30b5\u30fc\u30d0\u304c\u8d77\u52d5\u3057\u3001API\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306b\u306a\u308b\u3002\n\n[React Tutorial](https://facebook.github.io/react/docs/tutorial.html)\u3092ES2015\u3067\u66f8\u3044\u305f\u6642\u306e\u30e1\u30e2\u3002\n\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u69cb\u9020\u306f\u4ee5\u4e0b\u3002\n\n```\n- CommentBox\n  - CommentList\n    - Comment\n  - CommentForm\n```\n\n## \u6e96\u5099\n\u3044\u308d\u3044\u308d\u3068`npm install`\u3057\u305f\u7d50\u679c\u306e`package.json`\u3002\n\n```json:package.json\n{\n  \"scripts\": {\n    \"build\": \"webpack\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.9.0\",\n    \"babel-loader\": \"^6.2.4\",\n    \"babel-preset-es2015\": \"^6.9.0\",\n    \"babel-preset-react\": \"^6.5.0\",\n    \"webpack\": \"^1.13.1\"\n  },\n  \"dependencies\": {\n    \"marked\": \"^0.3.5\",\n    \"react\": \"^15.1.0\",\n    \"react-dom\": \"^15.1.0\",\n    \"superagent\": \"^1.8.3\"\n  }\n}\n```\n\n[webpack](https://webpack.github.io/)\u3067\u30d3\u30eb\u30c9\u3059\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u306e\u8a2d\u5b9a\u3082\u3002\n\n```js:webpack.config.babel.js\nimport path from 'path';\n\nconst src = path.resolve(__dirname, 'src');\nconst dist = path.resolve(__dirname, 'dist');\n\nexport default {\n  entry: `${src}/app.js`,\n\n  output: {\n    path: dist,\n    filename: 'bundle.js'\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.jsx?$/,\n        include: [src],\n        loader: 'babel'\n      }\n    ]\n  }\n};\n```\n\n## ES2015 + React \u3067\u8a18\u8ff0\njs\u3092\u8aad\u307f\u8fbc\u3080HTML\u3092\u7528\u610f\u3002\n\n```html:index.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>React Tutorial</title>\n  </head>\n  <body>\n    <div id=\"container\"></div>\n    <script src=\"./dist/bundle.js\"></script>\n  </body>\n</html>\n```\n\n\u4e00\u756a\u4e0a\u306e\u30ec\u30a4\u30e4\u30fc\u306eCommentBox\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092`render`\u3059\u308bjs\u3002Webpack\u306e\u8a2d\u5b9a\u306b\u3082\u66f8\u3044\u305f\u3088\u3046\u306b\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n```js:src/app.js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport CommentBox from './components/CommentBox';\n\nrender(\n  <CommentBox url=\"http://localhost:4567/api/comments\" pollInterval={2000} />,\n  document.getElementById('container')\n);\n```\n\n\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8a18\u8ff0\u3002\nclass\u8a18\u6cd5\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u6210\u3002\n\n```js:src/components/CommentBox.js\nimport React from 'react';\nimport request from 'superagent';\nimport CommentList from './CommentList';\nimport CommentForm from './CommentForm';\n\nexport default class CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {data: []};\n\n    this.loadCommentsFromServer = this.loadCommentsFromServer.bind(this);\n    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n  }\n  loadCommentsFromServer () {\n    request\n      .get(this.props.url)\n      .end((error, response) =>\n        this.setState({data: JSON.parse(response.text)}));\n  }\n  handleCommentSubmit(comment) {\n    const comments = this.state.data;\n    comment.id = Date.now();\n    const newComments = [...comments, comment];\n    this.setState({data: newComments});\n\n    request\n      .post(this.props.url)\n      .send(comment)\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n      .end((error, response) => {\n        if (error !== null) {\n          this.setState({data: comments});\n        } else {\n          this.setState({data: JSON.parse(response.text)});\n        }\n      });\n  }\n  componentDidMount() {\n    this.loadCommentsFromServer();\n    setInterval(this.loadCommentsFromServer, this.props.pollInterval);\n  }\n  render() {\n    return (\n      <div className=\"commentBox\">\n        <h1>Comments</h1>\n        <CommentList data={this.state.data} />\n        <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n      </div>\n    );\n  }\n}\n```\n```js:src/components/CommentList.js\nimport React from 'react';\nimport Comment from './Comment';\n\nexport default class CommentList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const commentNodes = this.props.data.map((comment) =>\n      <Comment author={comment.author} key={comment.id}>{comment.text}</Comment>);\n    return (\n      <div className=\"commentList\">{commentNodes}</div>\n    );\n  }\n}\n```\n```js:src/components/Comment.js\nimport React from 'react';\nimport marked from 'marked';\n\nexport default class Comment extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  rawMarkup() {\n    const rawMarkup = marked(this.props.children.toString(), {sanitize: true});\n    return { __html: rawMarkup };\n  }\n  render() {\n    return (\n      <div className=\"comment\">\n        <h2 className=\"commentAuthor\">\n          {this.props.author}\n        </h2>\n        <span dangerouslySetInnerHTML={this.rawMarkup()} />\n      </div>\n    );\n  }\n}\n```\n```js:src/components/CommentForm.js\nimport React from 'react';\n\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'author': '',\n      'text': ''\n    };\n\n    this.handleAuthorChange = this.handleAuthorChange.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleAuthorChange(e) {\n    this.setState({author: e.target.value});\n  }\n  handleTextChange(e) {\n    this.setState({text: e.target.value});\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const author = this.state.author.trim();\n    const text = this.state.text.trim();\n    if (!text || !author) {\n      return;\n    }\n    this.props.onCommentSubmit({author: author, text: text});\n    this.setState({\n      'author': '',\n      'text': ''\n    });\n  }\n  render() {\n    return (\n      <form className=\"commentForm\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Your name\"\n          value={this.state.author}\n          onChange={this.handleAuthorChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Say something...\"\n          value={this.state.text}\n          onChange={this.handleTextChange}\n        />\n        <input type=\"submit\" value=\"Post\" />\n      </form>\n    );\n  }\n}\n```\n\n\u3053\u308c\u3067\u7d42\u308f\u308a\u3002\n`npm run build`\u3059\u308b\u3068\u3001\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u3055\u308c\u305f`dist/bundle.js`\u304c\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u308c\u3092HTML\u3067\u8aad\u307f\u8fbc\u3080\u3002\n\n### \u203b\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\nRuby\u306eSinatra\u3067\u3001\u975e\u5e38\u306b\u96d1\u306a\u5b9f\u88c5\u306e\u3084\u3064\u3092\u66f8\u3044\u305f\u3002\n\n```rb:Gemfile\ngem 'sinatra'\ngem 'sinatra-contrib'\n```\n\n```rb:app.rb\nrequire 'sinatra'\nrequire 'sinatra/reloader' if development?\nrequire 'json'\n\nresponse_body = [\n  { id: 1,\n    author: \"Peter Hunt\",\n    text: \"This is one comment\"\n  },\n  {\n    id: 2,\n    author: \"Jordan Walke\",\n    text: \"This is *another* comment\"\n  }\n]\n\nget '/api/comments' do\n  headers 'Access-Control-Allow-Origin' => '*'\n  body response_body.to_json\nend\n\npost '/api/comments' do\n  response_body << {\n    id: response_body.last[:id] + 1,\n    author: params[\"author\"],\n    text: params[\"text\"]\n  }\n\n  headers 'Access-Control-Allow-Origin' => '*'\n  body response_body.to_json\nend\n```\n\n`ruby app.rb`\u3092\u5b9f\u884c\u3059\u308b\u3068`http://localhost:4567`\u3067\u958b\u767a\u30b5\u30fc\u30d0\u304c\u8d77\u52d5\u3057\u3001API\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306b\u306a\u308b\u3002\n", "tags": ["React", "JavaScript"]}