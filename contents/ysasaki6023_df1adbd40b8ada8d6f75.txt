{"context": "\n\n\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u306e\u8a2d\u5b9a\n\u307e\u305a\u3001\u30b7\u30b9\u30c6\u30e0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30f3\u30c8\u3092\u5217\u6319\u3059\u308b\u3002\nimport matplotlib.font_manager as fm\nimport pandas as pd\nd = []\nfonts = fm.findSystemFonts()\nfor f in fonts:\n    font = fm.FontProperties(fname=f)\n    try:\n        d.append((f, font.get_name()))\n    except:\n        print(\"could not find: {0}\".format(f))\ndf = pd.DataFrame(d, columns=['path', 'name'])\nprint(df)\n\n\u305d\u306e\u5f8c\u3001\u4ee5\u4e0b\u3067\u8a2d\u5b9a\nimport matplotlib.font_manager\nfont = matplotlib.font_manager.FontProperties(fname='/usr/share/fonts/truetype/takao-gothic/TakaoGothic.ttf')\n# or\nfont = matplotlib.font_manager.FontProperties(fname='/Library/Fonts/Arial Unicode.ttf')\n\n\u4f7f\u7528\u3059\u308b\u969b\u306b\u306f\u3001fontproperties\u306b\u5148\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3002\nfor i, w in enumerate(words):\n    plt.annotate(w, xy = (xs[i], ys[i]), xytext = (3, 3), textcoords = 'offset points', ha = 'left', va = 'top', fontproperties=font, fontsize=10)\n\n\n\u753b\u50cf\u3092\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a+\u03b1\n%matplotlib inline\n# -*- coding: utf-8 -*-\nfrom __future__ import print_function\n...\n\n\n\n\u8868\u793a\u3055\u308c\u308b\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092\u5927\u304d\u304f\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\nfigsize\u306b\u5927\u304d\u306a\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\nplt.figure(figsize=(8,6))\n\n\n# \u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u306e\u8a2d\u5b9a\n\u307e\u305a\u3001\u30b7\u30b9\u30c6\u30e0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30f3\u30c8\u3092\u5217\u6319\u3059\u308b\u3002\n\n``` Python\nimport matplotlib.font_manager as fm\nimport pandas as pd\nd = []\nfonts = fm.findSystemFonts()\nfor f in fonts:\n    font = fm.FontProperties(fname=f)\n    try:\n        d.append((f, font.get_name()))\n    except:\n        print(\"could not find: {0}\".format(f))\ndf = pd.DataFrame(d, columns=['path', 'name'])\nprint(df)\n```\n\u305d\u306e\u5f8c\u3001\u4ee5\u4e0b\u3067\u8a2d\u5b9a\n\n``` Python\nimport matplotlib.font_manager\nfont = matplotlib.font_manager.FontProperties(fname='/usr/share/fonts/truetype/takao-gothic/TakaoGothic.ttf')\n# or\nfont = matplotlib.font_manager.FontProperties(fname='/Library/Fonts/Arial Unicode.ttf')\n```\n\n\u4f7f\u7528\u3059\u308b\u969b\u306b\u306f\u3001fontproperties\u306b\u5148\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n``` Python\nfor i, w in enumerate(words):\n    plt.annotate(w, xy = (xs[i], ys[i]), xytext = (3, 3), textcoords = 'offset points', ha = 'left', va = 'top', fontproperties=font, fontsize=10)\n```\n\n# \u753b\u50cf\u3092\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a+\u03b1\n\n``` Python\n%matplotlib inline\n# -*- coding: utf-8 -*-\nfrom __future__ import print_function\n...\n\n```\n\n# \u8868\u793a\u3055\u308c\u308b\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092\u5927\u304d\u304f\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\nfigsize\u306b\u5927\u304d\u306a\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\n\n``` Python\nplt.figure(figsize=(8,6))\n```\n", "tags": ["Jupyter"]}