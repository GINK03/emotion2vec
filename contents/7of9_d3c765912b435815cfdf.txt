{"context": "\n\u52d5\u4f5c\u74b0\u5883\nESP-WROOM-02\nMPU-9250 https://strawberry-linux.com/catalog/items?code=12250\n\u30e9\u30a4\u30d6\u30e9\u30ea https://github.com/jrowberg/i2cdevlib/\n\n\nMPU-9250\u3067\u52a0\u901f\u5ea6\u306e\u6821\u6b63\u304c\u3067\u304d\u305f\u3088\u3046\u3060\u3002\u65b9\u6cd5\u306b\u95a2\u3059\u308b\u8cc7\u6599\u306f\u306a\u304f\u3001\u7d50\u679c\u3092\u898b\u306a\u304c\u3089\u306e\u63a8\u6e2c\u3002\n\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n`1. Arduino\\libraries\\MPU9150\\MPU9150.h\u306e\u30ec\u30b8\u30b9\u30bf\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\n  (\u3053\u308c\u306f\u30ec\u30b8\u30b9\u30bf\u30de\u30c3\u30d7\u3092\u53c2\u7167\u3057\u305f)\n\nMPU9150.h\n/*\n#define MPU9150_RA_XA_OFFS_H        0x06 //[15:0] XA_OFFS\n#define MPU9150_RA_XA_OFFS_L_TC     0x07\n#define MPU9150_RA_YA_OFFS_H        0x08 //[15:0] YA_OFFS\n#define MPU9150_RA_YA_OFFS_L_TC     0x09\n#define MPU9150_RA_ZA_OFFS_H        0x0A //[15:0] ZA_OFFS\n#define MPU9150_RA_ZA_OFFS_L_TC     0x0B\n*/\n#define MPU9150_RA_XA_OFFS_H        0x77 //[15:0] XA_OFFS\n#define MPU9150_RA_XA_OFFS_L_TC     0x78\n#define MPU9150_RA_YA_OFFS_H        0x7A //[15:0] YA_OFFS\n#define MPU9150_RA_YA_OFFS_L_TC     0x7B\n#define MPU9150_RA_ZA_OFFS_H        0x7D //[15:0] ZA_OFFS\n#define MPU9150_RA_ZA_OFFS_L_TC     0x7E\n\n\n`2. getXAccelOffset()\u306a\u3069\u3067\u5143\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n    (\u4f8b: XOFFSET:-5170, YOFFSET:5390. ZOFFSET:8424)\n  Serial.println(accelgyro.getXAccelOffset());\n  Serial.println(accelgyro.getYAccelOffset());\n  Serial.println(accelgyro.getZAccelOffset());\n\n`3. \u5143\u306e\u5024\u306b2\u306e\u500d\u6570\u3092\u8db3\u3057\u5f15\u304d\u3059\u308b\n    \u6e2c\u5b9a\u5024\u3068\u6b63\u8ca0\u53cd\u5bfe\u306e\u5024\u30928\u3067\u5272\u3063\u305f\u5024\u306b\u8fd1\u30442\u306e\u500d\u6570\u3068\u3059\u308b\u3002\n    (\u5947\u6570\u3092\u8db3\u3057\u5f15\u304d\u3059\u308b\u3068\u5168\u304f\u7570\u306a\u308b\u5024\u306b\u306a\u308b)\n  accelgyro.setXAccelOffset(-5170 - 8); // divide by 8, but should be even not odd number\n  accelgyro.setYAccelOffset(5390 - 38); // divide by 8, but should be even not odd number \n  accelgyro.setZAccelOffset(8424 + 16); // divide by 8, but should be even not odd number\n\n\ncode v0.2\nv0.2 @ github\n/*\n * v0.2 2016 Jul. 05\n *   - add calibration example\n * v0.1 2016 Jul. 03\n *   - remove Calibration()\n *   - use Interrupt\n *   - import for MPU-9250\n *   - based on the code at\n *   http://www.i2cdevlib.com/forums/topic/96-arduino-sketch-to-automatically-calculate-mpu6050-offsets/\n */\n\n#include \"I2Cdev.h\"\n#include \"MPU9150_9Axis_MotionApps41.h\"\n#include \"Wire.h\"\n#include <ESP8266WiFi.h>\nMPU9150 accelgyro;\n\n#define INTERRUPT_PIN 14  // ESP8266\n\nint buffersize = 1000;     //Amount of readings used to average, make it higher to get more precision but sketch will be slower  (default:1000)\nint16_t ax, ay, az,gx, gy, gz;\n\nint mean_ax, mean_ay, mean_az;\nint mean_gx, mean_gy, mean_gz;\nint state=0;\nint ax_offset, ay_offset, az_offset;\nint gx_offset, gy_offset, gz_offset;\n\nuint16_t packetSize;\nuint16_t fifoCount;\n\nvoid meansensors();\nvoid showData();\n\nvolatile bool mpuInterrupt = false;     // indicates whether MPU interrupt pin has gone high\nvoid dmpDataReady() {\n    mpuInterrupt = true;\n}\n\nvoid setup() {\n  WiFi.disconnect();\n  Wire.begin();\n  Wire.setClock(400000L); // 400kHz\n  Serial.begin(115200);\n\n  accelgyro.initialize();\n  pinMode(INTERRUPT_PIN, INPUT);\n\n  while (Serial.available() && Serial.read()); // empty buffer\n  while (!Serial.available()){\n    Serial.println(F(\"Send any character to start sketch.\\n\"));\n    delay(1500);\n  }                \n  while (Serial.available() && Serial.read()); // empty buffer again\n\n  packetSize = accelgyro.dmpGetFIFOPacketSize();\n\n  Serial.println(\"\\nYour MPU-9250 should be placed in horizontal position, with package letters facing up. \\nDon't touch it until you see a finish message.\\n\");\n  delay(3000);\n//  // verify connection\n//  Serial.println(accelgyro.testConnection() ? \"MPU9250 connection successful\" : \"MPU9250 connection failed\");\n//  delay(1000);\n}\n\nvoid loop() {\n  if (state==0){\n    Serial.println(\"\\nReading sensors for first time...\");\n    meansensors();\n    state++;\n    delay(1000);\n  }\n\n  if (state==1) {\n    Serial.println(\"\\nMeasuring...\");\n    showData(); \n    state++;\n    delay(1000);\n  }\n\n  if (state==2) {\n    meansensors();\n    Serial.print(\"\\nSensor readings with zero offsets:\\t\");\n    Serial.print(mean_ax); \n    Serial.print(\"\\t\");\n    Serial.print(mean_ay); \n    Serial.print(\"\\t\");\n    Serial.print(mean_az); \n    Serial.print(\"\\t\");\n    Serial.print(mean_gx); \n    Serial.print(\"\\t\");\n    Serial.print(mean_gy); \n    Serial.print(\"\\t\");\n    Serial.println(mean_gz);\n    Serial.println(\"\\nData is printed as: acelX acelY acelZ giroX giroY giroZ\");\n    Serial.println(\"Check that your sensor readings are close to 0 0 16384 0 0 0\");\n    state++;\n  }\n}\n\n///////////////////////////////////   FUNCTIONS   ////////////////////////////////////\nvoid meansensors(){\n  long i=0;\n  int buff_ax=0;\n  int buff_ay=0;\n  int buff_az=0;\n  int buff_gx=0;\n  int buff_gy=0;\n  int buff_gz=0;\n\n  while (i < (buffersize + 101) ){\n    fifoCount = accelgyro.getFIFOCount();\n    if (!mpuInterrupt && fifoCount < packetSize) {\n      continue;\n    }\n    mpuInterrupt = false;\n\n    accelgyro.getMotion6(&ax, &ay, &az, &gx, &gy, &gz);\n\n    if ( (i > 100) && i <= (buffersize + 100) ){ // First 100 discarded\n      buff_ax = buff_ax + ax;\n      buff_ay = buff_ay + ay;\n      buff_az = buff_az + az;\n      buff_gx = buff_gx + gx;\n      buff_gy = buff_gy + gy;\n      buff_gz = buff_gz + gz;\n    }\n    if ( i == (buffersize + 100) ) {\n      mean_ax = buff_ax / buffersize;\n      mean_ay = buff_ay / buffersize;\n      mean_az = buff_az / buffersize;\n      mean_gx = buff_gx / buffersize;\n      mean_gy = buff_gy / buffersize;\n      mean_gz = buff_gz / buffersize;\n    }\n    i++;\n  }\n}\n\nvoid showData()\n{\n  Serial.println(accelgyro.getXAccelOffset());\n  Serial.println(accelgyro.getYAccelOffset());\n  Serial.println(accelgyro.getZAccelOffset());\n\n//  accelgyro.setXAccelOffset(0);\n//  accelgyro.setYAccelOffset(0);\n//  accelgyro.setZAccelOffset(0);\n//  accelgyro.setXGyroOffset(0);\n//  accelgyro.setYGyroOffset(0);\n//  accelgyro.setZGyroOffset(0);\n\n  for(int loop = 0; loop < 10; loop++) {\n    meansensors();\n    Serial.print(\" ,mean_ax:\");\n    Serial.print(mean_ax);\n    Serial.print(\" ,mean_ay:\");\n    Serial.print(mean_ay);\n    Serial.print(\" ,mean_az:\");\n    Serial.print(mean_az);\n    //\n    Serial.print(\" ,mean_gx:\");\n    Serial.print(mean_gx);\n    Serial.print(\" ,mean_gy:\");\n    Serial.print(mean_gy);\n    Serial.print(\" ,mean_gz:\");\n    Serial.print(mean_gz);\n    //\n    Serial.println();\n  }\n\n  accelgyro.setXAccelOffset(-5170 - 8); // divide by 8, but should be even not odd number\n  accelgyro.setYAccelOffset(5390 - 38); // divide by 8, but should be even not odd number \n  accelgyro.setZAccelOffset(8424 + 16); // divide by 8, but should be even not odd number\n  accelgyro.setXGyroOffset( 80 / 4); // divide by 4 \n  accelgyro.setYGyroOffset( 8 / 4); // divide by 4\n  accelgyro.setZGyroOffset( 286 / 4); // divide by 4\n\n  for(int loop = 0; loop < 10; loop++) {\n    meansensors();\n    Serial.print(\" ,mean_ax:\");\n    Serial.print(mean_ax);\n    Serial.print(\" ,mean_ay:\");\n    Serial.print(mean_ay);\n    Serial.print(\" ,mean_az:\");\n    Serial.print(mean_az);\n    //\n    Serial.print(\" ,mean_gx:\");\n    Serial.print(mean_gx);\n    Serial.print(\" ,mean_gy:\");\n    Serial.print(mean_gy);\n    Serial.print(\" ,mean_gz:\");\n    Serial.print(mean_gz);\n    //\n    Serial.println();\n  }\n\n}\n\n\n\u7d50\u679c\nSend any character to start sketch.\n\nSend any character to start sketch.\n\n\nYour MPU-9250 should be placed in horizontal position, with package letters facing up. \nDon't touch it until you see a finish message.\n\n\nReading sensors for first time...\n\nMeasuring...\n-5170\n5390\n8424\n ,mean_ax:63 ,mean_ay:304 ,mean_az:16262 ,mean_gx:-78 ,mean_gy:-10 ,mean_gz:-287\n ,mean_ax:63 ,mean_ay:306 ,mean_az:16261 ,mean_gx:-78 ,mean_gy:-10 ,mean_gz:-285\n ,mean_ax:60 ,mean_ay:307 ,mean_az:16264 ,mean_gx:-77 ,mean_gy:-8 ,mean_gz:-285\n ,mean_ax:60 ,mean_ay:308 ,mean_az:16264 ,mean_gx:-78 ,mean_gy:-8 ,mean_gz:-286\n ,mean_ax:62 ,mean_ay:309 ,mean_az:16267 ,mean_gx:-78 ,mean_gy:-9 ,mean_gz:-285\n ,mean_ax:65 ,mean_ay:309 ,mean_az:16263 ,mean_gx:-77 ,mean_gy:-8 ,mean_gz:-286\n ,mean_ax:66 ,mean_ay:309 ,mean_az:16255 ,mean_gx:-77 ,mean_gy:-7 ,mean_gz:-286\n ,mean_ax:64 ,mean_ay:309 ,mean_az:16258 ,mean_gx:-79 ,mean_gy:-8 ,mean_gz:-285\n ,mean_ax:65 ,mean_ay:304 ,mean_az:16260 ,mean_gx:-79 ,mean_gy:-9 ,mean_gz:-285\n ,mean_ax:55 ,mean_ay:305 ,mean_az:16256 ,mean_gx:-78 ,mean_gy:-8 ,mean_gz:-285\n ,mean_ax:-3 ,mean_ay:7 ,mean_az:16388 ,mean_gx:2 ,mean_gy:0 ,mean_gz:-2\n ,mean_ax:-4 ,mean_ay:1 ,mean_az:16388 ,mean_gx:1 ,mean_gy:0 ,mean_gz:-1\n ,mean_ax:0 ,mean_ay:3 ,mean_az:16388 ,mean_gx:1 ,mean_gy:0 ,mean_gz:-2\n ,mean_ax:0 ,mean_ay:7 ,mean_az:16390 ,mean_gx:1 ,mean_gy:0 ,mean_gz:-2\n ,mean_ax:0 ,mean_ay:4 ,mean_az:16387 ,mean_gx:1 ,mean_gy:-2 ,mean_gz:-1\n ,mean_ax:0 ,mean_ay:6 ,mean_az:16389 ,mean_gx:2 ,mean_gy:-1 ,mean_gz:-1\n ,mean_ax:-1 ,mean_ay:5 ,mean_az:16388 ,mean_gx:0 ,mean_gy:0 ,mean_gz:-1\n ,mean_ax:0 ,mean_ay:1 ,mean_az:16390 ,mean_gx:1 ,mean_gy:0 ,mean_gz:-1\n ,mean_ax:0 ,mean_ay:5 ,mean_az:16383 ,mean_gx:0 ,mean_gy:0 ,mean_gz:0\n ,mean_ax:-3 ,mean_ay:1 ,mean_az:16391 ,mean_gx:0 ,mean_gy:-2 ,mean_gz:-2\n\nSensor readings with zero offsets:  0   9   16387   2   -2  -2\n\nData is printed as: acelX acelY acelZ giroX giroY giroZ\nCheck that your sensor readings are close to 0 0 16384 0 0 0\n\n\n\n\u88dc\u8db3\n\n\u52a0\u901f\u5ea6\u306e\u88dc\u6b63\u5024\u30928\u3067\u5272\u3063\u305f\u308a\u3001\u30b8\u30e3\u30a4\u30ed\u306e\u88dc\u6b63\u5024\u30924\u3067\u5272\u308b\u7406\u7531\u306f\u4e0d\u660e\u3060\u304c\u3001MPU-6050\u306e\u88dc\u6b63\u3067\u30828\u30844\u3067\u5272\u3063\u3066\u3044\u305f\u3002\n\n\u88dc\u6b63\u5024\u3092\u5947\u6570\u306b\u3059\u308b\u3068\u5024\u304c\u304a\u304b\u3057\u304f\u306a\u308b\n\n\n\u30ec\u30b8\u30b9\u30bf\u30de\u30c3\u30d7\u306ep.44, XA_OFFS_L\u306e\u8aac\u660e\u306bBIT[7:1]\u3068\u3042\u308a\u3001LSB([0]\u306e\u3053\u3068)\u306b\u3064\u3044\u3066\u306f\u8a2d\u5b9a\u3057\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u5947\u6570\u306e\u5834\u5408(LSB=1)\u304a\u304b\u3057\u306a\u6e2c\u5b9a\u5024\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u3068\u95a2\u4fc2\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\n\n\naz\u306f16384\u306b\u8fd1\u3051\u308c\u3070\u88dc\u6b63\u3067\u304d\u3066\u3044\u308b\u3002\u4ed6\u306e\u5024\u306f0\u306b\u8fd1\u3044\u3053\u3068\u3002\n\u4e00\u756a\u6700\u521d\u306b\u52a0\u901f\u5ea6\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u30920\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u5143\u306e\u5024\u3068\u307e\u3063\u305f\u304f\u7570\u306a\u308b\u5024\u306b\u306a\u308a\u300132768\u3084-32768\u306e\u6e2c\u5b9a\u5024\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u5143\u306e\u5024\u304b\u3089\u306e\u88dc\u6b63\u306b\u3059\u308b\u3053\u3068\u3002\n\n```txt:\u52d5\u4f5c\u74b0\u5883\nESP-WROOM-02\nMPU-9250 https://strawberry-linux.com/catalog/items?code=12250\n\u30e9\u30a4\u30d6\u30e9\u30ea https://github.com/jrowberg/i2cdevlib/\n```\n\nMPU-9250\u3067\u52a0\u901f\u5ea6\u306e\u6821\u6b63\u304c\u3067\u304d\u305f\u3088\u3046\u3060\u3002\u65b9\u6cd5\u306b\u95a2\u3059\u308b\u8cc7\u6599\u306f\u306a\u304f\u3001\u7d50\u679c\u3092\u898b\u306a\u304c\u3089\u306e\u63a8\u6e2c\u3002\n\n\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n`1. Arduino\\libraries\\MPU9150\\MPU9150.h\u306e\u30ec\u30b8\u30b9\u30bf\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\n  (\u3053\u308c\u306f\u30ec\u30b8\u30b9\u30bf\u30de\u30c3\u30d7\u3092\u53c2\u7167\u3057\u305f)\n\n```MPU9150.h\n/*\n#define MPU9150_RA_XA_OFFS_H        0x06 //[15:0] XA_OFFS\n#define MPU9150_RA_XA_OFFS_L_TC     0x07\n#define MPU9150_RA_YA_OFFS_H        0x08 //[15:0] YA_OFFS\n#define MPU9150_RA_YA_OFFS_L_TC     0x09\n#define MPU9150_RA_ZA_OFFS_H        0x0A //[15:0] ZA_OFFS\n#define MPU9150_RA_ZA_OFFS_L_TC     0x0B\n*/\n#define MPU9150_RA_XA_OFFS_H        0x77 //[15:0] XA_OFFS\n#define MPU9150_RA_XA_OFFS_L_TC     0x78\n#define MPU9150_RA_YA_OFFS_H        0x7A //[15:0] YA_OFFS\n#define MPU9150_RA_YA_OFFS_L_TC     0x7B\n#define MPU9150_RA_ZA_OFFS_H        0x7D //[15:0] ZA_OFFS\n#define MPU9150_RA_ZA_OFFS_L_TC     0x7E\n```\n\n`2. getXAccelOffset()\u306a\u3069\u3067\u5143\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n    (\u4f8b: XOFFSET:-5170, YOFFSET:5390. ZOFFSET:8424)\n\n```\n  Serial.println(accelgyro.getXAccelOffset());\n  Serial.println(accelgyro.getYAccelOffset());\n  Serial.println(accelgyro.getZAccelOffset());\n```\n\n`3. \u5143\u306e\u5024\u306b2\u306e\u500d\u6570\u3092\u8db3\u3057\u5f15\u304d\u3059\u308b\n    \u6e2c\u5b9a\u5024\u3068\u6b63\u8ca0\u53cd\u5bfe\u306e\u5024\u30928\u3067\u5272\u3063\u305f\u5024\u306b\u8fd1\u30442\u306e\u500d\u6570\u3068\u3059\u308b\u3002\n    (\u5947\u6570\u3092\u8db3\u3057\u5f15\u304d\u3059\u308b\u3068\u5168\u304f\u7570\u306a\u308b\u5024\u306b\u306a\u308b)\n\n```\n  accelgyro.setXAccelOffset(-5170 - 8); // divide by 8, but should be even not odd number\n  accelgyro.setYAccelOffset(5390 - 38); // divide by 8, but should be even not odd number \n  accelgyro.setZAccelOffset(8424 + 16); // divide by 8, but should be even not odd number\n```\n\n## code v0.2\n\n[v0.2 @ github](https://github.com/yasokada/esp8266_160703_calibMPU9250/releases/tag/v0.2)\n\n```esp8266_160703_calibMPU9250\n/*\n * v0.2 2016 Jul. 05\n *   - add calibration example\n * v0.1 2016 Jul. 03\n *   - remove Calibration()\n *   - use Interrupt\n *   - import for MPU-9250\n *   - based on the code at\n *   http://www.i2cdevlib.com/forums/topic/96-arduino-sketch-to-automatically-calculate-mpu6050-offsets/\n */\n\n#include \"I2Cdev.h\"\n#include \"MPU9150_9Axis_MotionApps41.h\"\n#include \"Wire.h\"\n#include <ESP8266WiFi.h>\nMPU9150 accelgyro;\n\n#define INTERRUPT_PIN 14  // ESP8266\n\nint buffersize = 1000;     //Amount of readings used to average, make it higher to get more precision but sketch will be slower  (default:1000)\nint16_t ax, ay, az,gx, gy, gz;\n\nint mean_ax, mean_ay, mean_az;\nint mean_gx, mean_gy, mean_gz;\nint state=0;\nint ax_offset, ay_offset, az_offset;\nint gx_offset, gy_offset, gz_offset;\n\nuint16_t packetSize;\nuint16_t fifoCount;\n\nvoid meansensors();\nvoid showData();\n\nvolatile bool mpuInterrupt = false;     // indicates whether MPU interrupt pin has gone high\nvoid dmpDataReady() {\n    mpuInterrupt = true;\n}\n\nvoid setup() {\n  WiFi.disconnect();\n  Wire.begin();\n  Wire.setClock(400000L); // 400kHz\n  Serial.begin(115200);\n\n  accelgyro.initialize();\n  pinMode(INTERRUPT_PIN, INPUT);\n\n  while (Serial.available() && Serial.read()); // empty buffer\n  while (!Serial.available()){\n    Serial.println(F(\"Send any character to start sketch.\\n\"));\n    delay(1500);\n  }                \n  while (Serial.available() && Serial.read()); // empty buffer again\n\n  packetSize = accelgyro.dmpGetFIFOPacketSize();\n\n  Serial.println(\"\\nYour MPU-9250 should be placed in horizontal position, with package letters facing up. \\nDon't touch it until you see a finish message.\\n\");\n  delay(3000);\n//  // verify connection\n//  Serial.println(accelgyro.testConnection() ? \"MPU9250 connection successful\" : \"MPU9250 connection failed\");\n//  delay(1000);\n}\n\nvoid loop() {\n  if (state==0){\n    Serial.println(\"\\nReading sensors for first time...\");\n    meansensors();\n    state++;\n    delay(1000);\n  }\n\n  if (state==1) {\n    Serial.println(\"\\nMeasuring...\");\n    showData(); \n    state++;\n    delay(1000);\n  }\n\n  if (state==2) {\n    meansensors();\n    Serial.print(\"\\nSensor readings with zero offsets:\\t\");\n    Serial.print(mean_ax); \n    Serial.print(\"\\t\");\n    Serial.print(mean_ay); \n    Serial.print(\"\\t\");\n    Serial.print(mean_az); \n    Serial.print(\"\\t\");\n    Serial.print(mean_gx); \n    Serial.print(\"\\t\");\n    Serial.print(mean_gy); \n    Serial.print(\"\\t\");\n    Serial.println(mean_gz);\n    Serial.println(\"\\nData is printed as: acelX acelY acelZ giroX giroY giroZ\");\n    Serial.println(\"Check that your sensor readings are close to 0 0 16384 0 0 0\");\n    state++;\n  }\n}\n\n///////////////////////////////////   FUNCTIONS   ////////////////////////////////////\nvoid meansensors(){\n  long i=0;\n  int buff_ax=0;\n  int buff_ay=0;\n  int buff_az=0;\n  int buff_gx=0;\n  int buff_gy=0;\n  int buff_gz=0;\n\n  while (i < (buffersize + 101) ){\n    fifoCount = accelgyro.getFIFOCount();\n    if (!mpuInterrupt && fifoCount < packetSize) {\n      continue;\n    }\n    mpuInterrupt = false;\n    \n    accelgyro.getMotion6(&ax, &ay, &az, &gx, &gy, &gz);\n        \n    if ( (i > 100) && i <= (buffersize + 100) ){ // First 100 discarded\n      buff_ax = buff_ax + ax;\n      buff_ay = buff_ay + ay;\n      buff_az = buff_az + az;\n      buff_gx = buff_gx + gx;\n      buff_gy = buff_gy + gy;\n      buff_gz = buff_gz + gz;\n    }\n    if ( i == (buffersize + 100) ) {\n      mean_ax = buff_ax / buffersize;\n      mean_ay = buff_ay / buffersize;\n      mean_az = buff_az / buffersize;\n      mean_gx = buff_gx / buffersize;\n      mean_gy = buff_gy / buffersize;\n      mean_gz = buff_gz / buffersize;\n    }\n    i++;\n  }\n}\n\nvoid showData()\n{\n  Serial.println(accelgyro.getXAccelOffset());\n  Serial.println(accelgyro.getYAccelOffset());\n  Serial.println(accelgyro.getZAccelOffset());\n  \n//  accelgyro.setXAccelOffset(0);\n//  accelgyro.setYAccelOffset(0);\n//  accelgyro.setZAccelOffset(0);\n//  accelgyro.setXGyroOffset(0);\n//  accelgyro.setYGyroOffset(0);\n//  accelgyro.setZGyroOffset(0);\n\n  for(int loop = 0; loop < 10; loop++) {\n    meansensors();\n    Serial.print(\" ,mean_ax:\");\n    Serial.print(mean_ax);\n    Serial.print(\" ,mean_ay:\");\n    Serial.print(mean_ay);\n    Serial.print(\" ,mean_az:\");\n    Serial.print(mean_az);\n    //\n    Serial.print(\" ,mean_gx:\");\n    Serial.print(mean_gx);\n    Serial.print(\" ,mean_gy:\");\n    Serial.print(mean_gy);\n    Serial.print(\" ,mean_gz:\");\n    Serial.print(mean_gz);\n    //\n    Serial.println();\n  }\n\n  accelgyro.setXAccelOffset(-5170 - 8); // divide by 8, but should be even not odd number\n  accelgyro.setYAccelOffset(5390 - 38); // divide by 8, but should be even not odd number \n  accelgyro.setZAccelOffset(8424 + 16); // divide by 8, but should be even not odd number\n  accelgyro.setXGyroOffset( 80 / 4); // divide by 4 \n  accelgyro.setYGyroOffset( 8 / 4); // divide by 4\n  accelgyro.setZGyroOffset( 286 / 4); // divide by 4\n\n  for(int loop = 0; loop < 10; loop++) {\n    meansensors();\n    Serial.print(\" ,mean_ax:\");\n    Serial.print(mean_ax);\n    Serial.print(\" ,mean_ay:\");\n    Serial.print(mean_ay);\n    Serial.print(\" ,mean_az:\");\n    Serial.print(mean_az);\n    //\n    Serial.print(\" ,mean_gx:\");\n    Serial.print(mean_gx);\n    Serial.print(\" ,mean_gy:\");\n    Serial.print(mean_gy);\n    Serial.print(\" ,mean_gz:\");\n    Serial.print(mean_gz);\n    //\n    Serial.println();\n  }\n  \n}\n```\n\n```txt:\u7d50\u679c\nSend any character to start sketch.\n\nSend any character to start sketch.\n\n\nYour MPU-9250 should be placed in horizontal position, with package letters facing up. \nDon't touch it until you see a finish message.\n\n\nReading sensors for first time...\n\nMeasuring...\n-5170\n5390\n8424\n ,mean_ax:63 ,mean_ay:304 ,mean_az:16262 ,mean_gx:-78 ,mean_gy:-10 ,mean_gz:-287\n ,mean_ax:63 ,mean_ay:306 ,mean_az:16261 ,mean_gx:-78 ,mean_gy:-10 ,mean_gz:-285\n ,mean_ax:60 ,mean_ay:307 ,mean_az:16264 ,mean_gx:-77 ,mean_gy:-8 ,mean_gz:-285\n ,mean_ax:60 ,mean_ay:308 ,mean_az:16264 ,mean_gx:-78 ,mean_gy:-8 ,mean_gz:-286\n ,mean_ax:62 ,mean_ay:309 ,mean_az:16267 ,mean_gx:-78 ,mean_gy:-9 ,mean_gz:-285\n ,mean_ax:65 ,mean_ay:309 ,mean_az:16263 ,mean_gx:-77 ,mean_gy:-8 ,mean_gz:-286\n ,mean_ax:66 ,mean_ay:309 ,mean_az:16255 ,mean_gx:-77 ,mean_gy:-7 ,mean_gz:-286\n ,mean_ax:64 ,mean_ay:309 ,mean_az:16258 ,mean_gx:-79 ,mean_gy:-8 ,mean_gz:-285\n ,mean_ax:65 ,mean_ay:304 ,mean_az:16260 ,mean_gx:-79 ,mean_gy:-9 ,mean_gz:-285\n ,mean_ax:55 ,mean_ay:305 ,mean_az:16256 ,mean_gx:-78 ,mean_gy:-8 ,mean_gz:-285\n ,mean_ax:-3 ,mean_ay:7 ,mean_az:16388 ,mean_gx:2 ,mean_gy:0 ,mean_gz:-2\n ,mean_ax:-4 ,mean_ay:1 ,mean_az:16388 ,mean_gx:1 ,mean_gy:0 ,mean_gz:-1\n ,mean_ax:0 ,mean_ay:3 ,mean_az:16388 ,mean_gx:1 ,mean_gy:0 ,mean_gz:-2\n ,mean_ax:0 ,mean_ay:7 ,mean_az:16390 ,mean_gx:1 ,mean_gy:0 ,mean_gz:-2\n ,mean_ax:0 ,mean_ay:4 ,mean_az:16387 ,mean_gx:1 ,mean_gy:-2 ,mean_gz:-1\n ,mean_ax:0 ,mean_ay:6 ,mean_az:16389 ,mean_gx:2 ,mean_gy:-1 ,mean_gz:-1\n ,mean_ax:-1 ,mean_ay:5 ,mean_az:16388 ,mean_gx:0 ,mean_gy:0 ,mean_gz:-1\n ,mean_ax:0 ,mean_ay:1 ,mean_az:16390 ,mean_gx:1 ,mean_gy:0 ,mean_gz:-1\n ,mean_ax:0 ,mean_ay:5 ,mean_az:16383 ,mean_gx:0 ,mean_gy:0 ,mean_gz:0\n ,mean_ax:-3 ,mean_ay:1 ,mean_az:16391 ,mean_gx:0 ,mean_gy:-2 ,mean_gz:-2\n\nSensor readings with zero offsets:\t0\t9\t16387\t2\t-2\t-2\n\nData is printed as: acelX acelY acelZ giroX giroY giroZ\nCheck that your sensor readings are close to 0 0 16384 0 0 0\n```\n\n### \u88dc\u8db3\n\n- \u52a0\u901f\u5ea6\u306e\u88dc\u6b63\u5024\u30928\u3067\u5272\u3063\u305f\u308a\u3001\u30b8\u30e3\u30a4\u30ed\u306e\u88dc\u6b63\u5024\u30924\u3067\u5272\u308b\u7406\u7531\u306f\u4e0d\u660e\u3060\u304c\u3001MPU-6050\u306e\u88dc\u6b63\u3067\u30828\u30844\u3067\u5272\u3063\u3066\u3044\u305f\u3002\n\n- \u88dc\u6b63\u5024\u3092\u5947\u6570\u306b\u3059\u308b\u3068\u5024\u304c\u304a\u304b\u3057\u304f\u306a\u308b\n  - [\u30ec\u30b8\u30b9\u30bf\u30de\u30c3\u30d7](https://strawberry-linux.com/pub/RM-MPU-9250A-00.pdf)\u306ep.44, XA_OFFS_L\u306e\u8aac\u660e\u306bBIT[7:1]\u3068\u3042\u308a\u3001LSB([0]\u306e\u3053\u3068)\u306b\u3064\u3044\u3066\u306f\u8a2d\u5b9a\u3057\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u5947\u6570\u306e\u5834\u5408(LSB=1)\u304a\u304b\u3057\u306a\u6e2c\u5b9a\u5024\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u3068\u95a2\u4fc2\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\n\n- az\u306f16384\u306b\u8fd1\u3051\u308c\u3070\u88dc\u6b63\u3067\u304d\u3066\u3044\u308b\u3002\u4ed6\u306e\u5024\u306f0\u306b\u8fd1\u3044\u3053\u3068\u3002\n\n- \u4e00\u756a\u6700\u521d\u306b\u52a0\u901f\u5ea6\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u30920\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u5143\u306e\u5024\u3068\u307e\u3063\u305f\u304f\u7570\u306a\u308b\u5024\u306b\u306a\u308a\u300132768\u3084-32768\u306e\u6e2c\u5b9a\u5024\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u5143\u306e\u5024\u304b\u3089\u306e\u88dc\u6b63\u306b\u3059\u308b\u3053\u3068\u3002\n\n", "tags": ["borgSensorSystem1", "DMP"]}