{"context": "\u5143\u30cd\u30bf\n\u30b5\u30a4\u30b3\u30ed\u3067\u540c\u3058\u76ee\u304c100\u56de\u9023\u7d9a\u3067\u5b9f\u969b\u306b\u51fa\u308b\u304b - Qiita\n\u4e26\u5217\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u984c\u6750\u306b\u4e01\u5ea6\u3044\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u3002\n\n\u4ed5\u69d8\n\u8a66\u884c: 1\u5ea6\u30b5\u30a4\u30b3\u30ed\u3092\u632f\u3063\u3066\u76ee\u3092\u6c7a\u3081\u308b\u3001\u305d\u306e\u5f8c\u30b5\u30a4\u30b3\u30ed\u3092\u632f\u308a\u305d\u306e\u76ee\u304c\u6700\u521d\u306e\u76ee\u3068\u540c\u3058\u306a\u3089\u3070\u307e\u305f\u30b5\u30a4\u30b3\u30ed\u3092\u632f\u308b\u3001\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u6700\u5927100\u56de\u7e70\u308a\u8fd4\u3059\n\u8a66\u884c\u306e\u7d50\u679c: \u8a66\u884c\u306b\u3066\u632f\u3063\u305f\u30b5\u30a4\u30b3\u30ed\u306e\u56de\u6570\u3002\u6700\u521d\u306e\u3082\u306e\u3092\u9664\u304f\u30020~100\u306e\u7bc4\u56f2\u3092\u53d6\u308b\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0: \u8a66\u884c\u306e\u7d50\u679c\u304c100\u306b\u306a\u308b\u3001\u3042\u308b\u3044\u306f10\u5104\u56de\u8a66\u884c\u3092\u884c\u3063\u305f\u3089\u505c\u6b62\u3059\u308b\u3002\u307e\u305f\u3001\u505c\u6b62\u3059\u308b\u307e\u3067\u306b\u884c\u3063\u305f\u8a66\u884c\u306b\u304a\u3044\u3066\u3001\u4f55\u56de\u8a66\u884c\u3092\u884c\u3063\u305f\u304b\u3068\u8a66\u884c\u306e\u7d50\u679c\u304cn\u3067\u3042\u308b\u56de\u6570\u304ci\u56de\u3067\u3042\u3063\u305f\u304b\u3092\u8a18\u9332\u3059\u308b\n\u307e\u3042\u3001\u78ba\u7387\u7684\u306b10\u5104\u56de\u7a0b\u5ea6\u306e\u8a66\u884c\u3058\u3083\u8a66\u884c\u306e\u7d50\u679c\u304c100\u306b\u306a\u308b\u3053\u3068\u306a\u3093\u3066\u307b\u3068\u3093\u3069\u306a\u3044\u3068\u601d\u3046\u3051\u3069\u3002\n\n\u5b9f\u88c5\n\n\u65b9\u91dd\n\n\u30bf\u30b9\u30af\u3092\u5c0f\u5206\u3051\u306b\u3057\u3066num_ths\u500b\u306e\u30b9\u30ec\u30c3\u30c9\u306b\u6295\u3052\u308b\n1\u8a66\u884c\u6bce\u306b\u6295\u3052\u3066\u3044\u3066\u306f\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30b9\u30c8\u304c\u5d69\u3080\u306e\u3067batch_size\u500b\u307e\u3068\u3081\u3066\u6295\u3052\u308b\n\u30b9\u30ec\u30c3\u30c9\u5168\u3066\u306b\u30bf\u30b9\u30af\u3092\u6295\u3052\u3066\u30b9\u30ec\u30c3\u30c9\u5168\u3066\u304b\u3089\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308a\u3001\u7d50\u679c\u3092\u691c\u67fb\u3059\u308b\u306e\u6d41\u308c\u309210\u5104/(num_ths*batch_size)\u56de\u884c\u306a\u3046((num_ths*batch_size)\u306f10\u5104\u306e\u7d04\u6570\u306b\u306a\u308b\u3088\u3046\u306b\u8abf\u6574\u3059\u308b)\n\n\n\u30b3\u30fc\u30c9\n\u4e71\u6570\u3092\u7528\u3044\u308b\u306e\u3067 rand = \"0.3\" \u3092Cargo.toml\u306b\u8ffd\u8a18\u3057\u3066\u304a\u304f\u3002\nextern crate rand;\n\nuse rand::thread_rng;\nuse rand::Rng;\nuse std::thread::spawn;\nuse std::sync::mpsc::channel;\n\nconst NUM_SAME: usize = 100;\n\n\nfn main() {\n    let num_ths = 10;\n    let batch = 10000;\n    let mut txs = Vec::new();\n    let mut rxs = Vec::new();\n    let mut table = [0;NUM_SAME+1];\n    let mut tries = 1;\n\n    for _ in 0..num_ths {\n        let (com_tx, rx) = channel();\n        let (tx, res_rx) = channel();\n        txs.push(com_tx);\n        rxs.push(res_rx);\n        spawn(move||{\n            let mut rng = thread_rng();\n            loop {\n                match rx.recv() {\n                    Err(_) => return,\n                    Ok(0) => return,\n                    Ok(tries) => {\n                        let res = (0..batch).map(|_| {\n                            let base = rng.gen::<usize>() % 6;\n                            for i in 0..NUM_SAME {\n                                let eye = rng.gen::<usize>() % 6;\n                                if eye != base {\n                                    return i;\n                                }\n                            }\n                            return NUM_SAME;\n                        }).collect::<Vec<_>>();\n                        let _ = tx.send((tries, res));\n                    }\n                }\n            }\n        });\n    }\n    'outer2: for _ in 0..10000 {\n        for i in 0..num_ths {\n            txs[i].send(tries).unwrap();\n            tries += batch;\n        }\n        for i in 0..num_ths {\n            let (tries, res) = rxs[i].recv().unwrap();\n            for (j, n) in res.iter().enumerate() {\n                table[*n] += 1;\n                if *n == NUM_SAME {\n                    println!(\"suceeded after {} tries\", tries + j);\n                    break 'outer2;\n                }\n            }\n        }\n    }\n    for i in 0..(NUM_SAME+1) {\n        println!(\"{}:{}\", i, table[i]);\n    }\n    for i in 0..num_ths {\n        txs[i].send(0).unwrap();\n    }\n\n}\n\n\n\u7d50\u679c\n$ time cargo run --release\n   Compiling 100dices v0.1.0 (file:///home/kim/Rust/100dices)\n     Running `target/release/100dices`\n0:833318652\n1:138900235\n2:23150884\n3:3858697\n4:642567\n5:107421\n6:17943\n7:3019\n8:489\n9:77\n10:13\n11:3\n12:0\n13:0\n14:0\n15:0\n16:0\n17:0\n18:0\n19:0\n20:0\n21:0\n22:0\n23:0\n24:0\n25:0\n26:0\n27:0\n28:0\n29:0\n30:0\n31:0\n32:0\n33:0\n34:0\n35:0\n36:0\n37:0\n38:0\n39:0\n40:0\n41:0\n42:0\n43:0\n44:0\n45:0\n46:0\n47:0\n48:0\n49:0\n50:0\n51:0\n52:0\n53:0\n54:0\n55:0\n56:0\n57:0\n58:0\n59:0\n60:0\n61:0\n62:0\n63:0\n64:0\n65:0\n66:0\n67:0\n68:0\n69:0\n70:0\n71:0\n72:0\n73:0\n74:0\n75:0\n76:0\n77:0\n78:0\n79:0\n80:0\n81:0\n82:0\n83:0\n84:0\n85:0\n86:0\n87:0\n88:0\n89:0\n90:0\n91:0\n92:0\n93:0\n94:0\n95:0\n96:0\n97:0\n98:0\n99:0\n100:0\ncargo run --release  34.20s user 449.97s system 637% cpu 1:15.99 total\n\nIntel(R) Core(TM) i7-4910MQ CPU @ 2.90GHz\u306e4\u30b3\u30a28\u30b9\u30ec\u30c3\u30c9\u306e\u30de\u30b7\u30f3\u3067\u5b9f\u884c\u30021\u5206\u3061\u3087\u3063\u3068\u3002\n\u3069\u3093\u3076\u308a\u52d8\u5b9a\u3059\u308b\u6642\u306f\u5358\u7d14\u306a\u51e6\u7406\u306a\u30891\u5104\u30eb\u30fc\u30d7\u306b1\u79d2\u3089\u3057\u3044\u3051\u3069(10\u30b9\u30ec\u30c3\u30c9\u4f7f\u3063\u3066)10\u5104\u30eb\u30fc\u30d7\u306b1\u5206\u306a\u306e\u30671\u56de\u306e\u51e6\u7406\u304c60\u500d\u304f\u3089\u3044\u8907\u96d1\u3060\u3063\u305f\u3063\u307d\u3044\uff1f\u8a66\u884c\u306e\u7d50\u679c\u306b\u3088\u3063\u3066\u91cd\u3055\u304c\u5909\u308f\u308b\u306e\u3067\u5e73\u5747\u3059\u308b\u3068\u305d\u3093\u306a\u3082\u3093\u304b\u3002\n11\u307e\u3067\u5c4a\u3044\u305f\u3082\u306e\u304c3\u56de\u3002\u307e\u3042\u3001\u3053\u3093\u306a\u3082\u306e\u304b\u306a\u3002n\u304c1\u4e0a\u304c\u308b\u3068\u56de\u6570\u304c1/6\u306b\u306a\u3063\u3066\u308b\u306e\u304c\u898b\u3066\u3068\u308c\u308b\u3002\n\n\u304a\u308f\u308a\u306b\n\u6700\u521d\u306b\u898b\u305f\u6642\u306bRust\u306a\u3089\u7c21\u5358\u306b\u66f8\u3051\u305d\u3046\u3063\u3066\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u306f\u3044\u3044\u3082\u306e\u306e1\u8a66\u884c\u6bce\u306b\u30c1\u30e3\u30cd\u30eb\u4f7f\u3063\u3066\u3084\u308a\u3068\u308a\u3057\u3066\u305f\u3089\u305d\u3053\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u3063\u3061\u3083\u3063\u3066CPU\u306b\u5bfe\u3057\u3066\u5168\u7136\u30b9\u30b1\u30fc\u30eb\u3057\u306a\u304b\u3063\u305f\u3002\n\u3053\u3046\u3044\u3046\u306e\u306f\u5b9f\u969b\u306b\u624b\u3092\u52d5\u304b\u3057\u3066\u307f\u306a\u3044\u3068\u5206\u304b\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u3044\u3002\n\n\u8ffd\u8a18 2016-04-21\n\u30b3\u30fc\u30c9\u306f\u3053\u3053\u3002\u3053\u3053\u306b\u63b2\u8f09\u3057\u305f\u3082\u306e\u304b\u3089\u82e5\u5e72\u3044\u3058\u3063\u3066\u3042\u308b\u3002\nhttps://github.com/KeenS/100dices\n\u5143\u30cd\u30bf\n[\u30b5\u30a4\u30b3\u30ed\u3067\u540c\u3058\u76ee\u304c100\u56de\u9023\u7d9a\u3067\u5b9f\u969b\u306b\u51fa\u308b\u304b - Qiita](http://qiita.com/sudnonk12/items/d3e0a530c6e331a3ead1)\n\n\u4e26\u5217\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u984c\u6750\u306b\u4e01\u5ea6\u3044\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u3002\n\n# \u4ed5\u69d8\n\n\u8a66\u884c: 1\u5ea6\u30b5\u30a4\u30b3\u30ed\u3092\u632f\u3063\u3066\u76ee\u3092\u6c7a\u3081\u308b\u3001\u305d\u306e\u5f8c\u30b5\u30a4\u30b3\u30ed\u3092\u632f\u308a\u305d\u306e\u76ee\u304c\u6700\u521d\u306e\u76ee\u3068\u540c\u3058\u306a\u3089\u3070\u307e\u305f\u30b5\u30a4\u30b3\u30ed\u3092\u632f\u308b\u3001\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u6700\u5927100\u56de\u7e70\u308a\u8fd4\u3059\n\n\u8a66\u884c\u306e\u7d50\u679c: \u8a66\u884c\u306b\u3066\u632f\u3063\u305f\u30b5\u30a4\u30b3\u30ed\u306e\u56de\u6570\u3002\u6700\u521d\u306e\u3082\u306e\u3092\u9664\u304f\u30020~100\u306e\u7bc4\u56f2\u3092\u53d6\u308b\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0: \u8a66\u884c\u306e\u7d50\u679c\u304c100\u306b\u306a\u308b\u3001\u3042\u308b\u3044\u306f10\u5104\u56de\u8a66\u884c\u3092\u884c\u3063\u305f\u3089\u505c\u6b62\u3059\u308b\u3002\u307e\u305f\u3001\u505c\u6b62\u3059\u308b\u307e\u3067\u306b\u884c\u3063\u305f\u8a66\u884c\u306b\u304a\u3044\u3066\u3001\u4f55\u56de\u8a66\u884c\u3092\u884c\u3063\u305f\u304b\u3068\u8a66\u884c\u306e\u7d50\u679c\u304cn\u3067\u3042\u308b\u56de\u6570\u304ci\u56de\u3067\u3042\u3063\u305f\u304b\u3092\u8a18\u9332\u3059\u308b\n\n\u307e\u3042\u3001\u78ba\u7387\u7684\u306b10\u5104\u56de\u7a0b\u5ea6\u306e\u8a66\u884c\u3058\u3083\u8a66\u884c\u306e\u7d50\u679c\u304c100\u306b\u306a\u308b\u3053\u3068\u306a\u3093\u3066\u307b\u3068\u3093\u3069\u306a\u3044\u3068\u601d\u3046\u3051\u3069\u3002\n\n# \u5b9f\u88c5\n## \u65b9\u91dd\n* \u30bf\u30b9\u30af\u3092\u5c0f\u5206\u3051\u306b\u3057\u3066num_ths\u500b\u306e\u30b9\u30ec\u30c3\u30c9\u306b\u6295\u3052\u308b\n* 1\u8a66\u884c\u6bce\u306b\u6295\u3052\u3066\u3044\u3066\u306f\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30b9\u30c8\u304c\u5d69\u3080\u306e\u3067batch_size\u500b\u307e\u3068\u3081\u3066\u6295\u3052\u308b\n* \u30b9\u30ec\u30c3\u30c9\u5168\u3066\u306b\u30bf\u30b9\u30af\u3092\u6295\u3052\u3066\u30b9\u30ec\u30c3\u30c9\u5168\u3066\u304b\u3089\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308a\u3001\u7d50\u679c\u3092\u691c\u67fb\u3059\u308b\u306e\u6d41\u308c\u309210\u5104/(num_ths*batch_size)\u56de\u884c\u306a\u3046((num_ths*batch_size)\u306f10\u5104\u306e\u7d04\u6570\u306b\u306a\u308b\u3088\u3046\u306b\u8abf\u6574\u3059\u308b)\n\n## \u30b3\u30fc\u30c9\n\u4e71\u6570\u3092\u7528\u3044\u308b\u306e\u3067 `rand = \"0.3\"` \u3092Cargo.toml\u306b\u8ffd\u8a18\u3057\u3066\u304a\u304f\u3002\n\n\n``` rust\nextern crate rand;\n\nuse rand::thread_rng;\nuse rand::Rng;\nuse std::thread::spawn;\nuse std::sync::mpsc::channel;\n\nconst NUM_SAME: usize = 100;\n\n\nfn main() {\n    let num_ths = 10;\n    let batch = 10000;\n    let mut txs = Vec::new();\n    let mut rxs = Vec::new();\n    let mut table = [0;NUM_SAME+1];\n    let mut tries = 1;\n\n    for _ in 0..num_ths {\n        let (com_tx, rx) = channel();\n        let (tx, res_rx) = channel();\n        txs.push(com_tx);\n        rxs.push(res_rx);\n        spawn(move||{\n            let mut rng = thread_rng();\n            loop {\n                match rx.recv() {\n                    Err(_) => return,\n                    Ok(0) => return,\n                    Ok(tries) => {\n                        let res = (0..batch).map(|_| {\n                            let base = rng.gen::<usize>() % 6;\n                            for i in 0..NUM_SAME {\n                                let eye = rng.gen::<usize>() % 6;\n                                if eye != base {\n                                    return i;\n                                }\n                            }\n                            return NUM_SAME;\n                        }).collect::<Vec<_>>();\n                        let _ = tx.send((tries, res));\n                    }\n                }\n            }\n        });\n    }\n    'outer2: for _ in 0..10000 {\n        for i in 0..num_ths {\n            txs[i].send(tries).unwrap();\n            tries += batch;\n        }\n        for i in 0..num_ths {\n            let (tries, res) = rxs[i].recv().unwrap();\n            for (j, n) in res.iter().enumerate() {\n                table[*n] += 1;\n                if *n == NUM_SAME {\n                    println!(\"suceeded after {} tries\", tries + j);\n                    break 'outer2;\n                }\n            }\n        }\n    }\n    for i in 0..(NUM_SAME+1) {\n        println!(\"{}:{}\", i, table[i]);\n    }\n    for i in 0..num_ths {\n        txs[i].send(0).unwrap();\n    }\n\n}\n```\n\n\n## \u7d50\u679c\n```\n$ time cargo run --release\n   Compiling 100dices v0.1.0 (file:///home/kim/Rust/100dices)\n     Running `target/release/100dices`\n0:833318652\n1:138900235\n2:23150884\n3:3858697\n4:642567\n5:107421\n6:17943\n7:3019\n8:489\n9:77\n10:13\n11:3\n12:0\n13:0\n14:0\n15:0\n16:0\n17:0\n18:0\n19:0\n20:0\n21:0\n22:0\n23:0\n24:0\n25:0\n26:0\n27:0\n28:0\n29:0\n30:0\n31:0\n32:0\n33:0\n34:0\n35:0\n36:0\n37:0\n38:0\n39:0\n40:0\n41:0\n42:0\n43:0\n44:0\n45:0\n46:0\n47:0\n48:0\n49:0\n50:0\n51:0\n52:0\n53:0\n54:0\n55:0\n56:0\n57:0\n58:0\n59:0\n60:0\n61:0\n62:0\n63:0\n64:0\n65:0\n66:0\n67:0\n68:0\n69:0\n70:0\n71:0\n72:0\n73:0\n74:0\n75:0\n76:0\n77:0\n78:0\n79:0\n80:0\n81:0\n82:0\n83:0\n84:0\n85:0\n86:0\n87:0\n88:0\n89:0\n90:0\n91:0\n92:0\n93:0\n94:0\n95:0\n96:0\n97:0\n98:0\n99:0\n100:0\ncargo run --release  34.20s user 449.97s system 637% cpu 1:15.99 total\n```\n\nIntel(R) Core(TM) i7-4910MQ CPU @ 2.90GHz\u306e4\u30b3\u30a28\u30b9\u30ec\u30c3\u30c9\u306e\u30de\u30b7\u30f3\u3067\u5b9f\u884c\u30021\u5206\u3061\u3087\u3063\u3068\u3002\n\u3069\u3093\u3076\u308a\u52d8\u5b9a\u3059\u308b\u6642\u306f\u5358\u7d14\u306a\u51e6\u7406\u306a\u30891\u5104\u30eb\u30fc\u30d7\u306b1\u79d2\u3089\u3057\u3044\u3051\u3069(10\u30b9\u30ec\u30c3\u30c9\u4f7f\u3063\u3066)10\u5104\u30eb\u30fc\u30d7\u306b1\u5206\u306a\u306e\u30671\u56de\u306e\u51e6\u7406\u304c60\u500d\u304f\u3089\u3044\u8907\u96d1\u3060\u3063\u305f\u3063\u307d\u3044\uff1f\u8a66\u884c\u306e\u7d50\u679c\u306b\u3088\u3063\u3066\u91cd\u3055\u304c\u5909\u308f\u308b\u306e\u3067\u5e73\u5747\u3059\u308b\u3068\u305d\u3093\u306a\u3082\u3093\u304b\u3002\n\n11\u307e\u3067\u5c4a\u3044\u305f\u3082\u306e\u304c3\u56de\u3002\u307e\u3042\u3001\u3053\u3093\u306a\u3082\u306e\u304b\u306a\u3002n\u304c1\u4e0a\u304c\u308b\u3068\u56de\u6570\u304c1/6\u306b\u306a\u3063\u3066\u308b\u306e\u304c\u898b\u3066\u3068\u308c\u308b\u3002\n\n\n\n# \u304a\u308f\u308a\u306b\n\u6700\u521d\u306b\u898b\u305f\u6642\u306bRust\u306a\u3089\u7c21\u5358\u306b\u66f8\u3051\u305d\u3046\u3063\u3066\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u306f\u3044\u3044\u3082\u306e\u306e1\u8a66\u884c\u6bce\u306b\u30c1\u30e3\u30cd\u30eb\u4f7f\u3063\u3066\u3084\u308a\u3068\u308a\u3057\u3066\u305f\u3089\u305d\u3053\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u3063\u3061\u3083\u3063\u3066CPU\u306b\u5bfe\u3057\u3066\u5168\u7136\u30b9\u30b1\u30fc\u30eb\u3057\u306a\u304b\u3063\u305f\u3002\n\u3053\u3046\u3044\u3046\u306e\u306f\u5b9f\u969b\u306b\u624b\u3092\u52d5\u304b\u3057\u3066\u307f\u306a\u3044\u3068\u5206\u304b\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u3044\u3002\n\n# \u8ffd\u8a18 2016-04-21\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3053\u3002\u3053\u3053\u306b\u63b2\u8f09\u3057\u305f\u3082\u306e\u304b\u3089\u82e5\u5e72\u3044\u3058\u3063\u3066\u3042\u308b\u3002\nhttps://github.com/KeenS/100dices\n", "tags": ["\u6570\u5b66", "rust"]}