{"context": " More than 1 year has passed since last update.\n\u554f\u984c : http://d.hatena.ne.jp/torazuka/20140509/yhpg\n\n\u4ed6\u306e\u5b9f\u88c5\u3078\u306e\u30ea\u30f3\u30af : http://qiita.com/torazuka/items/cbdb6b581a57e4754dd4\n\n\u30a4\u30d9\u30f3\u30c8 : http://yhpg.doorkeeper.jp/events/10503\n\n\n\u5f53\u65e5\u305d\u306e\u5834\u3067\u66f8\u3044\u305f ruby\u3002\u3053\u308c\u3067\u3060\u3044\u305f\u3044\uff11\u6642\u9593\u3002\ndef solve_impl( src )\n  fixed={}\n  5.times.each_with_object(Hash.new{ |h,k| h[k]=[] }) do |pri, r|\n    src.each do |num, w|\n      next if fixed[num] || 4<=r[w[pri]].size\n      r[w[pri]].push num\n      fixed[num]=true\n    end\n  end\nend\n\ndef format( r )\n  r.keys.select{ |k| ! r[k].empty? }.sort.map{ |k|\n    [k, r[k].sort.join(\":\")].join(\"_\")\n  }.join(\"|\")\nend\n\ndef parse( src )\n  src.split(\"|\").map{ |i| \n    a,b=i.split(\"_\")\n    [a.to_i, b.chars ]\n  }\nend\n\ndef solve(src)\n  format solve_impl( parse( src ) )\nend\n\n$stdout.sync=true\nDATA.map do |line|\n  num, src, exp = line.split(/\\s+/)\n  actual = solve( src )\n  ok = actual==exp\n  puts( \"%d %s\\n   A:%s\\n   E:%s\\n\" % [ num, src, actual.inspect, exp.inspect ] ) unless ok\n  ok\nend.all?{ |x| x }.tap{ |x| puts( x ? \"Okay!\" : \"**NG**\" ) }\n\n__END__\n0 1_12345 1_1\n1 30_32451  3_30\n19  55_13524|64_41523|40_23451|99_25314|65_21453|69_31524|77_45231|62_51432|21_13542|81_13452|66_21534|33_41352|5_52314|90_31452|6_42135|93_42351|84_43125|54_45213|76_21453|19_52134|50_21435|61_13542|30_35421|43_25431|24_25341|31_15234|39_15243|20_51423|67_13524  1_21:55:61:81|2_40:65:66:99|3_30:69:84:90|4_6:33:64:77|5_5:19:20:62\n\n\u3044\u3064\u3082\u901a\u308a\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5927\u534a\u306f\u7701\u7565\u3002\n\u521d\u3081\u3066\u306e\u975e\u51fa\u984c\u8005\u3067\u306e\u53c2\u52a0\u3067\u3069\u304d\u3069\u304d\u3057\u305f\u3051\u3069\u3001\u6642\u9593\u5185\u306b\u66f8\u3051\u305f\u3002\u307b\u3002\n\u3057\u304b\u3057\u3002\n\u5236\u9650\u6642\u9593\u5185\u306b groovy \u3082\u66f8\u3053\u3046\u3068\u3044\u3046\u91ce\u671b\u306f\u3064\u3044\u3048\u305f\u3002\u6b8b\u5ff5\u3002\n\u5b9f\u88c5\u6226\u7565\u306f\u305f\u3076\u3093\u9806\u5f53\u306a\u611f\u3058\u3060\u3068\u601d\u3046\u3002\n\u4e0a\u8a18\u306e\u5b9f\u88c5\u306f\u3001parse \u8a08\u7b97 \u6574\u5f62 \u306b\u5206\u304b\u308c\u3066\u3044\u308b\u3051\u3069\u3001\u6700\u521d\u306f \u8a08\u7b97\u3068\u6574\u5f62\u304c\u4e00\u7dd2\u306b\u306a\u3063\u3066\u305f\u3002\u3042\u3068\u3001each_with_object \u304c\u597d\u304d\u3002\n\n* \u554f\u984c : http://d.hatena.ne.jp/torazuka/20140509/yhpg\n* \u4ed6\u306e\u5b9f\u88c5\u3078\u306e\u30ea\u30f3\u30af : http://qiita.com/torazuka/items/cbdb6b581a57e4754dd4\n* \u30a4\u30d9\u30f3\u30c8 : http://yhpg.doorkeeper.jp/events/10503\n\n\u5f53\u65e5\u305d\u306e\u5834\u3067\u66f8\u3044\u305f ruby\u3002\u3053\u308c\u3067\u3060\u3044\u305f\u3044\uff11\u6642\u9593\u3002\n\n\n```ruby\ndef solve_impl( src )\n  fixed={}\n  5.times.each_with_object(Hash.new{ |h,k| h[k]=[] }) do |pri, r|\n    src.each do |num, w|\n      next if fixed[num] || 4<=r[w[pri]].size\n      r[w[pri]].push num\n      fixed[num]=true\n    end\n  end\nend\n\ndef format( r )\n  r.keys.select{ |k| ! r[k].empty? }.sort.map{ |k|\n    [k, r[k].sort.join(\":\")].join(\"_\")\n  }.join(\"|\")\nend\n\ndef parse( src )\n  src.split(\"|\").map{ |i| \n    a,b=i.split(\"_\")\n    [a.to_i, b.chars ]\n  }\nend\n\ndef solve(src)\n  format solve_impl( parse( src ) )\nend\n\n$stdout.sync=true\nDATA.map do |line|\n  num, src, exp = line.split(/\\s+/)\n  actual = solve( src )\n  ok = actual==exp\n  puts( \"%d %s\\n   A:%s\\n   E:%s\\n\" % [ num, src, actual.inspect, exp.inspect ] ) unless ok\n  ok\nend.all?{ |x| x }.tap{ |x| puts( x ? \"Okay!\" : \"**NG**\" ) }\n\n__END__\n0 1_12345 1_1\n1 30_32451  3_30\n19  55_13524|64_41523|40_23451|99_25314|65_21453|69_31524|77_45231|62_51432|21_13542|81_13452|66_21534|33_41352|5_52314|90_31452|6_42135|93_42351|84_43125|54_45213|76_21453|19_52134|50_21435|61_13542|30_35421|43_25431|24_25341|31_15234|39_15243|20_51423|67_13524  1_21:55:61:81|2_40:65:66:99|3_30:69:84:90|4_6:33:64:77|5_5:19:20:62\n```\n\n\u3044\u3064\u3082\u901a\u308a\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5927\u534a\u306f\u7701\u7565\u3002\n\u521d\u3081\u3066\u306e\u975e\u51fa\u984c\u8005\u3067\u306e\u53c2\u52a0\u3067\u3069\u304d\u3069\u304d\u3057\u305f\u3051\u3069\u3001\u6642\u9593\u5185\u306b\u66f8\u3051\u305f\u3002\u307b\u3002\n\u3057\u304b\u3057\u3002\n\u5236\u9650\u6642\u9593\u5185\u306b groovy \u3082\u66f8\u3053\u3046\u3068\u3044\u3046\u91ce\u671b\u306f\u3064\u3044\u3048\u305f\u3002\u6b8b\u5ff5\u3002\n\n\u5b9f\u88c5\u6226\u7565\u306f\u305f\u3076\u3093\u9806\u5f53\u306a\u611f\u3058\u3060\u3068\u601d\u3046\u3002\n\u4e0a\u8a18\u306e\u5b9f\u88c5\u306f\u3001parse \u8a08\u7b97 \u6574\u5f62 \u306b\u5206\u304b\u308c\u3066\u3044\u308b\u3051\u3069\u3001\u6700\u521d\u306f \u8a08\u7b97\u3068\u6574\u5f62\u304c\u4e00\u7dd2\u306b\u306a\u3063\u3066\u305f\u3002\u3042\u3068\u3001`each_with_object` \u304c\u597d\u304d\u3002\n", "tags": ["yhpg", "\u3069\u3046\u66f8\u304f", "Ruby"]}