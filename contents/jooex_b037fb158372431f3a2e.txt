{"tags": ["Elm0.14.1", "HTML"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u3001\u6587\u5b57\u3092\u5165\u529b\u3057\u3066\u3001\u30ea\u30b9\u30c8\u3092\u4f5c\u3063\u305f\u308a\u6d88\u3057\u305f\u308a\u3067\u304d\u308b\u30a2\u30d7\u30ea\u306b\u3001\n\n\u884c\u52d5\u6bce\u306e\u81ea\u52d5\u5c65\u6b74\u4fdd\u5b58\u6a5f\u80fd\u3092\u3064\u3051\u3066\u307f\u308b\u3002\uff08\u3061\u3087\u3063\u3068\u30ec\u30f3\u30b8\u306e\u6319\u52d5\u304c\u602a\u3057\u3044\u304c\uff09\n\n\nMVU\u3068\u306f\uff1f\n\n    \u3000 channel     -------------------\u2192\u3000   channel\n    \u3000   \u2191 send+merge                         \u2193 subscribe      \nmain = View ---------- fopdp update ---------\n            \u30001 : 1          \u2195          \n                           Model \n\n\u3000main\u306e\u524d\u304cmain = view <~ model\u3068\u306a\u308a\u3001\u3053\u306emodel\u3092\u4f5c\u308b\u306e\u306bmodel = foldp update initModel (subscribe appChannel)\u3068\u3044\u3046\u3075\u3046\u306b\u3001\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u307e\u3068\u3081\u305fChannel\u304c\u3042\u308a\u3001update\u5185\u306ecase\u5f0f\u3067\u30a2\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306e\u51e6\u7406\u3092\u66f8\u304f\u3002\u307f\u305f\u3044\u306a\u611f\u3058\u306b\u66f8\u304f\u30b9\u30bf\u30a4\u30eb\u3002\nElm\u4f7f\u3063\u3066\u308b\u3068\u3060\u3044\u305f\u3044\u3053\u3046\u306a\u308b\u3002\n\u3000\u3053\u306e\u5f62\u306fChannel\u3068Message\u304c\u30a4\u30d9\u30f3\u30c8\u3068\u30cf\u30f3\u30c9\u30e9\u306b\u5f53\u305f\u308a\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066View\u3068Model\u304c\u901a\u4fe1\u3059\u308b\u306e\u3067MVC\u3068\u8a00\u3048\u308b\u3002\u305d\u3053\u306bElm\u3060\u3068\u3001GUI\u7528\u306eFRP\u306a\u306e\u3067\u3001foldp\u3068update\u95a2\u6570\u304c\u73fe\u308c\u308b\u306e\u3067\u3001MVU(Model View Update)\u306a\u3093\u3066\u547c\u3093\u3060\u308a\u3059\u308b\u3002\n\u516c\u5f0f\u306eTODO\u30a2\u30d7\u30ea\u3067\u3042\u308bElm-tomvc\u3067\u3082\u73fe\u5728\u3053\u306e\u30b9\u30bf\u30a4\u30eb\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\n\u307e\u305a\u6a5f\u80fd\u3092\u4ed8\u3051\u308b\u524d\u306e\u30b3\u30fc\u30c9\u306eMVU\u3092\u773a\u3081\u3066\u307f\u308b\u3002\nmodule App where\n\nimport Text(asText)\nimport Html(Html,div,toElement,text,input,Attribute,li)\nimport Html.Attributes(class,type',value,style,id,max)\nimport Html.Attributes as Attri\nimport Html.Events(on, targetValue,onKeyDown,keyCode)\nimport Signal(..)\nimport List(tail)\nimport List\nimport String\nimport Array\nimport Array(Array)\nimport Time(..)\nimport Json.Decode as Json\nimport Result (..)\nimport Debug\n\n---Model\ntype alias NameList = List String\ntype alias Model = { input :String \n                    ,nameList : NameList}\n\ninitState : Model\ninitState = {input = \"\", nameList = []}\n\n\ntype Actions \n    = None \n    | Input String \n    | Add String \n    | Delete () \n\n\n----channel\n\nappChannel : Channel Actions\nappChannel = channel None\n\n\n---update\n\nmodel : Signal Model\nmodel = foldp update initState (subscribe appChannel)\n\nupdate : Actions -> Model -> Model\nupdate action state =\n\n case action of \n\n            Input str ->  {state| input <- str }\n\n            Add str -> {state| input <- \"\"\n                             , nameList <- state.nameList ++ [str]}\n\n            Delete x ->if List.isEmpty state.nameList then state\n                       else {state | nameList <- tail state.nameList}\n\n            _ -> state\n\n---view\n\nmain : Signal Html\nmain = view <~ model\n\n\nview : Model -> Html\nview state = \n    div []\n        [ textbox state.input\n        , text state.input\n        , div [] (List.map listHtml state.nameList)\n        ]\n\nlistHtml : String -> Html\nlistHtml str = li [] [text str]\n\ntextbox : String -> Html\ntextbox str = input [value str\n                    ,id \"nameInput\"\n                    ,on \"input\" targetValue (send appChannel << Input)\n                    ,onBackEnter (send appChannel)]\n                    []\n\nonBackEnter : (Actions -> Message) -> Attribute\nonBackEnter message = on \"keydown\" (eventObjDecoder) (message)\n\neventObjDecoder : Json.Decoder Actions\neventObjDecoder = \n  Json.customDecoder\n    (Json.object2 (,) \n        keyCode \n        targetValue)\n    (\\(num, str)-> if| num == 8 && String.isEmpty str -> Ok (Delete ())\n                     | num == 13 && (not <|String.isEmpty str) -> Ok (Add str)\n                     | otherwise -> Err \"\")\n\n\n\n\n\nModel\nModel\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u4f7f\u3046\u5168\u3066\u306e\u30c7\u30fc\u30bf\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u6642\u306e\u6587\u5b57\u3084\u3001\u305d\u308c\u3092\u4fdd\u6301\u3059\u308b\u30ea\u30b9\u30c8\u306e\u578b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u3002\ntype Actions\u3000\u578b\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u52d5\u4f5c\u3092\u578b\u3067\u8868\u73fe\u3057\u3066\u3044\u308b\u3002\n\n---Model\ntype alias NameList = List String\ntype alias Model = { input :String \n                    ,nameList : NameList}\n\ninitState : Model\ninitState = {input = \"\", nameList = []}\n\n\ntype Actions \n    = None \n    | Input String \n    | Add String \n    | Delete () \n\n\u5f62\u5f0f\u7684\u3043\n\nChannel\nChannel\u306f\u3072\u3068\u3064\u3002\u305d\u308c\u305e\u308c\u306eInput\u304b\u3089channel\u306bsend\u3059\u308b\u3068\u3001\u81ea\u52d5\u3067merge\u3055\u308c\u308b\u3002\n----channel\n\nappChannel : Channel Actions\nappChannel = channel None\n\n\n\nView\n\u8868\u793a\u3084\u753b\u9762\u3092\u4f5c\u308bview\u95a2\u6570\u306e\u3053\u3068\u3002\nModel\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089\u3001Html\uff08\u307e\u305f\u306fElement\uff09\u3092\u8fd4\u3059\u3002\n\n\n---view\n\nmain : Signal Html\nmain = view <~ model\n\n\nview : Model -> Html\nview state = \n    div []\n        [ textbox state.input\n        , text state.input\n        , div [] (List.map listHtml state.nameList)\n        ]\n\nlistHtml : String -> Html\nlistHtml str = li [] [text str]\n\ntextbox : String -> Html\ntextbox str = input [value str\n                    ,id \"nameInput\"\n                    ,on \"input\" targetValue (send appChannel << Input)\n                    ,onBackEnter (send appChannel)]\n                    []\n\nonBackEnter : (Actions -> Message) -> Attribute\nonBackEnter message = on \"keydown\" (eventObjDecoder) (message)\n\neventObjDecoder : Json.Decoder Actions\neventObjDecoder = \n  Json.customDecoder\n    (Json.object2 (,) \n        keyCode \n        targetValue)\n    (\\(num, str)-> if| num == 8 && String.isEmpty str -> Ok (Delete ())\n                     | num == 13 && (not <|String.isEmpty str) -> Ok (Add str)\n                     | otherwise -> Err \"\")\n\n\nUpdate\nfoldp\u3067\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306eSignal\u304c\u3042\u308b\u3068\u3001Model\u3092\u66f4\u65b0\u3059\u308b\u3002\nupdate\u95a2\u6570\u3067\u306fcase\u5f0f\u3067\u305d\u308c\u305e\u308c\u306eSignal\u306e\u51e6\u7406\u3092\u308f\u3051\u308b\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96c6\u5408\u8def\u3002\n\n---update\n\nmodel : Signal Model\nmodel = foldp update initState (subscribe appChannel)\n\nupdate : Actions -> Model -> Model\nupdate action state =\n\n case action of \n\n            Input str ->  {state| input <- str }\n\n            Add str -> {state| input <- \"\"\n                             , nameList <- state.nameList ++ [str]}\n\n            Delete x ->if List.isEmpty state.nameList then state\n                       else {state | nameList <- tail state.nameList}\n\n            _ -> state\n\n\n\u3053\u3053\u304b\u3089\u3001MVU\u306b\u6a5f\u80fd\u3092\u4ed8\u3051\u8db3\u3057\u3066\u81ea\u52d5\u5c65\u6b74\u4fdd\u5b58\u3092\u4ed8\u3051\u3066\u307f\u308b\u3002\n\nModel\u3092\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u578b\u306b\u3059\u308b\nGUI\u306e\u73fe\u5728\u306e\u72b6\u614b\u3092Array\u306b\u9010\u6b21\u3001\u9806\u756a\u306b\u4fdd\u5b58\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\u65b0\u3057\u3044Model\u578b\u306b\u306a\u3063\u305f\u3002\n\u3042\u3068\u52d5\u4f5c\u3092\u8868\u3059Actions\u578b\u306b\u3001\u5c65\u6b74\u304b\u3089\u3068\u308a\u3060\u3059\u52d5\u4f5c\uff08ArchiveSelect Int\uff09\u3092\u4ed8\u3051\u8db3\u3057\u305f\u3002\n\ntype alias NameList = List String\ntype alias State = { input :String \n                    ,nameList : NameList}\n\ntype alias Model = {state:State\n                   ,archive:Array State\n                   ,current :Int}\n\ninitState : State\ninitState = {input = \"\", nameList = []}\n\ninitModel : Model\ninitModel = { state = initState\n            , archive = Array.fromList [initState]\n            , current = 0}\n\ntype Actions \n    = None \n    | Input String \n    | Add String \n    | Delete () \n    | ArchiveSelect Int\n\n\n\nChannel\nchannel\u306f\u5909\u308f\u3089\u305a\uff11\u3064\u3002\nappChannel : Channel Actions\nappChannel = channel None\n\n\n\nView\u306b\u3001\u30ec\u30f3\u30b8\u30bf\u30d6\u3092\u4f5c\u308b\u3002\nrangInput\u3092\u4f5c\u308b\u3002DOM\u306e\u6319\u52d5\u3067\u3001\u5024\u3092\u53d6\u308a\u51fa\u3057\u305f\u3089\u6587\u5b57\u5217\u578b\u3067\u3001\u5165\u308c\u308b\u6642\u306f\u6570\u5b57\u3067\u3082\u6587\u5b57\u5217\u578b\u3067\u3082\u3044\u3044\u306e\u3067\u3061\u3087\u3063\u3068\u305d\u306e\u5909\u63db\u3067\u308f\u304b\u308a\u3065\u3089\u304f\u306a\u3063\u3066\u308b\u3002\n\n--\u30ec\u30f3\u30b8\u30a4\u30f3\u30d7\u30c3\u30c8\u3001\u6700\u5927\u5024\u3068\u73fe\u5728\u4f4d\u7f6e\u3092\u5f15\u6570\u306b\u53d6\u308b\nrangeInput :Int -> Int -> Html \nrangeInput max current =\n        div [] [ \n                div [] [\n                        text \"0\"                  \n                       ,input\n                           [ type' \"range\"\n                           , value (toString current)\n                           , Attri.max (toString (max))\n                           , on \"input\" (targetValue) ((send appChannel)<<ArchiveSelect<<toInt' )] []\n                       ,text <|toString max ] \n                ,text (toString current)]\n\n---input\u306fvalue\u3092\u53d6\u308a\u51fa\u3059\u3068\u3001String\u578b\u306b\u306a\u308b\u306e\u3067Int\u306b\u5909\u63db\ntoInt' x = case String.toInt x of\n                Ok x -> x\n                Err str -> Debug.crash str\n\n\nUpdate\u306b\u81ea\u52d5\u5c65\u6b74\u51e6\u7406\u3092\u8db3\u3059\u3002\n\u30ec\u30f3\u30b8\u306e\u5165\u529b\u52d5\u4f5c\u3001\u81ea\u52d5\u5c65\u6b74\u6a5f\u80fd\u3092\u3001\u30ec\u30b3\u30fc\u30c9\u8868\u8a18\u3067\u4fdd\u5b58\u3057\u305f\u3044\u51e6\u7406\u3060\u3051\u306b\u4ed8\u3051\u8db3\u3057\u305f\u3002\n\n\u30ec\u30b3\u30fc\u30c9\u8868\u8a18\u3068\u306f\uff1f\n\u3000\u30ec\u30b3\u30fc\u30c9\u8868\u8a18\u3092\u4f7f\u3046\u3068\u3001\u578b\u306e\u90e8\u5206\u3092\u6307\u5b9a\u3057\u3066\u65b0\u3057\u3044\u578b\u3092\u4f5c\u308b\u51e6\u7406\u3092\u66f8\u3051\u308b\u3002\u69cb\u6587\n\u305d\u308c\u306b\u3088\u308a\u30c7\u30fc\u30bf\u578b\u306b\u5bfe\u3059\u308b\u8a08\u7b97\u3092\u69cb\u9020\u306e\u3088\u3046\u306b\u51fa\u6765\u308b\u3002\u53c2\u8003\u2192making pong\ncase\u5f0f\u306e\u524d\u306blet\u3092\u4f7f\u3046\u3068case\u524d\u306b\u4e8b\u524d\u51e6\u7406\u3092\u306f\u3055\u3081\u308b\u3002\n\u305d\u306elet\u5f0f\u5185\u3067\u3001model\u304b\u3089state\u306e\u53d6\u308a\u51fa\u3059\u306e\u3068\u3001\u66f4\u65b0\u3057\u305fstate\u3092\u4fdd\u5b58\u3059\u308b\u95a2\u6570\uff08write\uff09\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u5206\u5c90\u306b\u4ed8\u3051\u8db3\u3057\u305f\u3002\uff08\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u3042\u308b\u304b\u3082\u77e5\u308c\u306a\u3044\uff09\n\n---update\n\nmodel : Signal Model\nmodel = foldp update initModel (subscribe appChannel)\n\nupdate : Actions -> Model -> Model\nupdate action model =\n    let state  = model.state \n        write state' = let target = model.current + 1\n                       in {model | state <- state'\n                                 , current <- target\n                                 , archive <-if target > (Array.length model.archive) - 1  \n                                            then Array.push state' model.archive\n                                            else Array.set target state' model.archive\n                                 }\n    in case action of \n\n            Input str -> write <| {state| input <- str }\n\n            Add str -> write <| {state| input <- \"\"\n                                      , nameList <- state.nameList ++ [str]}\n\n            Delete x ->if List.isEmpty state.nameList then model\n                       else write <| {state | nameList <- tail state.nameList}\n\n            ArchiveSelect v -> {model | current <- v \n                                     \u3000,\u3000state <- case Array.get v model.archive of\n                                                        Just ste -> ste\n                                                        Nothing -> Debug.crash \"Unexpected access\"}\n            _ -> model\n\n\nview\u306e\u5f15\u6570\u90e8\u5206\nModel\u304c\u5909\u308f\u3063\u305f\u306e\u3067\u3001view\u95a2\u6570\u306e\u5f15\u6570\u90e8\u5206\u3092\u5909\u3048\u308b\u3002\u30ec\u30b3\u30fc\u30c9\u8868\u8a18\u3067\u53d7\u3051\u53d6\u308b\u3088\u3046\u306b\u5909\u3048\u305f\u3002\u5909\u66f4\u306f\u6700\u5c0f\u9650\u306b\u306a\u308b\u30a2\u30d4\u30fc\u30eb\u3002\n\nview : Model -> Html\nview {state, current , archive} = \n    div []\n        [rangeInput ((Array.length archive)-1) current\n        ,textbox state.input\n        , text state.input\n        , div [] (List.map listHtml state.nameList)\n        ]\n\nmain : Signal Html\nmain = view <~ model\n\n\n\u307e\u3068\u3081\n\n    \u3000 channel     -------------------\u2192\u3000   channel\n    \u3000   \u2191 send+merge                         \u2193 subscribe      \nmain = View ---------- fopdp update ---------\n            \u30001 : 1          \u2195          \n                           Model \n\n\u3000Elm\u306f\u69cb\u6587\u304b\u3089\u4f55\u304b\u3089\u30b7\u30f3\u30d7\u30eb\u3067\u898b\u3084\u3059\u3044\u3002FRP\u306b\u3088\u308a\u6a5f\u80fd\u3092\u62e1\u5f35\u3059\u308b\u6642\uff08\u4f55\u304b\u30a4\u30d9\u30f3\u30c8\u3092\u5897\u3084\u3059\u6642\uff09\u306f\u4ed8\u3051\u8db3\u3059\u3060\u3051\u3067\u3067\u304d\u308b\u3002\n\u3000\u5c65\u6b74\u6a5f\u80fd\u306b\u3057\u305f\u306e\u306fview\u3068\u72b6\u614b\u3092\u4e00\u3064\u3065\u3064\u306e1:1\u306b\u3059\u308b\u3068\u3001\u4fdd\u5b58\u3057\u305f\u72b6\u614b\u3092\u53d6\u308a\u51fa\u3057\u3066\u904e\u53bb\u306e\u72b6\u614b\u306b\u3059\u308c\u3070\u3001\u5373\u5ea7\u306bGUI\u306e\u8868\u793a\u3082\u305d\u306e\u6642\u305d\u306e\u5834\u9762\u306e\u72b6\u614b\u306b\u306a\u308b\u3001\u3053\u306e\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u6319\u52d5\u9762\u767d\u3044\u306a\u3068\u3002\uff08\u30bf\u30a4\u30e0\u30c8\u30e9\u30d9\u30eb\u30c7\u30d0\u30c3\u30ac\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u307f\u305f\u3002\uff09\u308f\u308a\u3068\u30c8\u30ec\u30f3\u30c9\u3067\u3082\u3042\u308b\u3002\n\u3000Elm\u66f8\u3044\u3066\u307f\u308b\u3068\u3001Html\u3084Signal\u3084\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u706b\u306e\u6319\u52d5\u3092\u52d8\u9055\u3044\u3057\u3066\u305f\u308a\u3001Signal\u306f\u3053\u306d\u304f\u308a\u56de\u3059\u3068\u5f8c\u304b\u3089\u89e6\u308c\u3089\u308c\u306a\u304b\u3063\u305f\u308a\u3057\u305f\u3002\u3051\u308c\u3069foldp\u5468\u308a\u306f\u3001\u67d4\u8edf\u3067\u3001\u5168\u3066\u578b\u4ed8\u3051\u3055\u308c\u308b\u306e\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u3068\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u8d8a\u3048\u305f\u3042\u3068\u306fElm\u306f\u5168\u4f53\u3067\u4e00\u679a\u5ca9\u3067\u30c6\u30b9\u30c8\u3082\u3057\u3084\u3059\u3044\u3002\u3058\u3083\u3042MVU\u3060\u3051Elm\u3067\u307b\u304bjs\u3068\u304b\u51fa\u6765\u308b\u304b\u3001\u3068\u805e\u304b\u308c\u305f\u3089\uff08port\u306f\u30e1\u30a4\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3057\u304b\u66f8\u3051\u306a\u3044\u306e\u3068\u3001native\u306f\u53c2\u7167\u900f\u904e\u306b\u66f8\u304b\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u3053\u3068\u304b\u3089\u4e00\u884c\u304f\u3089\u3044js\u3067\u66f8\u3044\u3066\u3042\u3068\uff09\u306a\u308b\u3079\u304f\uff11\u3064\u306e\u8a00\u8a9e\u306b\u3057\u305f\u65b9\u304c\u697d\u3060\u306a\u30c3\u3066\u611f\u3058\u3002\u6b21\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3069\u3046\u306a\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u304c\u3002\n\u3000\u4eca\u56deMVU\u305d\u308c\u305e\u308c\u306b\u4ed8\u3051\u8db3\u3059\u3088\u3046\u306b\u62e1\u5f35\u3057\u305f\u3002\u3055\u3089\u306b\u3001\u305d\u306e\u307e\u307eMVU\u3092\u30ef\u30f3\u30bb\u30c3\u30c8\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3059\u308b\u66f8\u304d\u65b9\u304c\u3042\u308b\uff08LocalChannel\uff09\u3002\u6b21\u3084\u3063\u3066\u307f\u308b\u3002\n\n\n\u4eca\u56de\u3001\u6587\u5b57\u3092\u5165\u529b\u3057\u3066\u3001\u30ea\u30b9\u30c8\u3092\u4f5c\u3063\u305f\u308a\u6d88\u3057\u305f\u308a\u3067\u304d\u308b\u30a2\u30d7\u30ea\u306b\u3001\n![recode_1.gif](https://qiita-image-store.s3.amazonaws.com/0/32808/9fa718fe-00cb-fe20-65b2-10fe4b76010e.gif)\n\n\u884c\u52d5\u6bce\u306e\u81ea\u52d5\u5c65\u6b74\u4fdd\u5b58\u6a5f\u80fd\u3092\u3064\u3051\u3066\u307f\u308b\u3002\uff08\u3061\u3087\u3063\u3068\u30ec\u30f3\u30b8\u306e\u6319\u52d5\u304c\u602a\u3057\u3044\u304c\uff09\n\n![recode_3.gif](https://qiita-image-store.s3.amazonaws.com/0/32808/a83852f2-44f7-5e22-8f02-5d8558fb7b50.gif)\n\n\n##MVU\u3068\u306f\uff1f\n```\n                          \n    \u3000 channel     -------------------\u2192\u3000   channel\n    \u3000   \u2191 send+merge                         \u2193 subscribe      \nmain = View ---------- fopdp update ---------\n            \u30001 : 1          \u2195          \n                           Model \n```\n\u3000main\u306e\u524d\u304c`main = view <~ model`\u3068\u306a\u308a\u3001\u3053\u306emodel\u3092\u4f5c\u308b\u306e\u306b`model = foldp update initModel (subscribe appChannel)`\u3068\u3044\u3046\u3075\u3046\u306b\u3001\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u307e\u3068\u3081\u305fChannel\u304c\u3042\u308a\u3001update\u5185\u306ecase\u5f0f\u3067\u30a2\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306e\u51e6\u7406\u3092\u66f8\u304f\u3002\u307f\u305f\u3044\u306a\u611f\u3058\u306b\u66f8\u304f\u30b9\u30bf\u30a4\u30eb\u3002\nElm\u4f7f\u3063\u3066\u308b\u3068\u3060\u3044\u305f\u3044\u3053\u3046\u306a\u308b\u3002\n\n\u3000\u3053\u306e\u5f62\u306fChannel\u3068Message\u304c\u30a4\u30d9\u30f3\u30c8\u3068\u30cf\u30f3\u30c9\u30e9\u306b\u5f53\u305f\u308a\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066View\u3068Model\u304c\u901a\u4fe1\u3059\u308b\u306e\u3067**MVC**\u3068\u8a00\u3048\u308b\u3002\u305d\u3053\u306bElm\u3060\u3068\u3001GUI\u7528\u306eFRP\u306a\u306e\u3067\u3001foldp\u3068update\u95a2\u6570\u304c\u73fe\u308c\u308b\u306e\u3067\u3001**MVU**(Model View Update)\u306a\u3093\u3066\u547c\u3093\u3060\u308a\u3059\u308b\u3002\n\n\u516c\u5f0f\u306eTODO\u30a2\u30d7\u30ea\u3067\u3042\u308b[Elm-tomvc](https://github.com/evancz/elm-todomvc/tree/trim)\u3067\u3082\u73fe\u5728\u3053\u306e\u30b9\u30bf\u30a4\u30eb\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\n\n\u307e\u305a\u6a5f\u80fd\u3092\u4ed8\u3051\u308b\u524d\u306e\u30b3\u30fc\u30c9\u306eMVU\u3092\u773a\u3081\u3066\u307f\u308b\u3002\n\n```hs\nmodule App where\n\nimport Text(asText)\nimport Html(Html,div,toElement,text,input,Attribute,li)\nimport Html.Attributes(class,type',value,style,id,max)\nimport Html.Attributes as Attri\nimport Html.Events(on, targetValue,onKeyDown,keyCode)\nimport Signal(..)\nimport List(tail)\nimport List\nimport String\nimport Array\nimport Array(Array)\nimport Time(..)\nimport Json.Decode as Json\nimport Result (..)\nimport Debug\n\n---Model\ntype alias NameList = List String\ntype alias Model = { input :String \n                    ,nameList : NameList}\n\ninitState : Model\ninitState = {input = \"\", nameList = []}\n\n\ntype Actions \n    = None \n    | Input String \n    | Add String \n    | Delete () \n\n\n----channel\n\nappChannel : Channel Actions\nappChannel = channel None\n\n\n---update\n\nmodel : Signal Model\nmodel = foldp update initState (subscribe appChannel)\n\nupdate : Actions -> Model -> Model\nupdate action state =\n\n case action of \n\n            Input str ->  {state| input <- str }\n        \n            Add str -> {state| input <- \"\"\n                             , nameList <- state.nameList ++ [str]}\n        \n            Delete x ->if List.isEmpty state.nameList then state\n                       else {state | nameList <- tail state.nameList}\n        \n            _ -> state\n\n---view\n\nmain : Signal Html\nmain = view <~ model\n\n\nview : Model -> Html\nview state = \n    div []\n        [ textbox state.input\n        , text state.input\n        , div [] (List.map listHtml state.nameList)\n        ]\n\nlistHtml : String -> Html\nlistHtml str = li [] [text str]\n\ntextbox : String -> Html\ntextbox str = input [value str\n                    ,id \"nameInput\"\n                    ,on \"input\" targetValue (send appChannel << Input)\n                    ,onBackEnter (send appChannel)]\n                    []\n\nonBackEnter : (Actions -> Message) -> Attribute\nonBackEnter message = on \"keydown\" (eventObjDecoder) (message)\n\neventObjDecoder : Json.Decoder Actions\neventObjDecoder = \n  Json.customDecoder\n    (Json.object2 (,) \n        keyCode \n        targetValue)\n    (\\(num, str)-> if| num == 8 && String.isEmpty str -> Ok (Delete ())\n                     | num == 13 && (not <|String.isEmpty str) -> Ok (Add str)\n                     | otherwise -> Err \"\")\n\n\n\n```\n\n##Model\nModel\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u4f7f\u3046\u5168\u3066\u306e\u30c7\u30fc\u30bf\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u6642\u306e\u6587\u5b57\u3084\u3001\u305d\u308c\u3092\u4fdd\u6301\u3059\u308b\u30ea\u30b9\u30c8\u306e\u578b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u3002\ntype Actions\u3000\u578b\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u52d5\u4f5c\u3092\u578b\u3067\u8868\u73fe\u3057\u3066\u3044\u308b\u3002\n\n```hs\n\n---Model\ntype alias NameList = List String\ntype alias Model = { input :String \n                    ,nameList : NameList}\n\ninitState : Model\ninitState = {input = \"\", nameList = []}\n\n\ntype Actions \n    = None \n    | Input String \n    | Add String \n    | Delete () \n```\n\u5f62\u5f0f\u7684\u3043\n##Channel\nChannel\u306f\u3072\u3068\u3064\u3002\u305d\u308c\u305e\u308c\u306eInput\u304b\u3089channel\u306bsend\u3059\u308b\u3068\u3001\u81ea\u52d5\u3067merge\u3055\u308c\u308b\u3002\n\n```\n----channel\n\nappChannel : Channel Actions\nappChannel = channel None\n\n```\n\n##View\n\n\u8868\u793a\u3084\u753b\u9762\u3092\u4f5c\u308bview\u95a2\u6570\u306e\u3053\u3068\u3002\nModel\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089\u3001Html\uff08\u307e\u305f\u306fElement\uff09\u3092\u8fd4\u3059\u3002\n\n```hs\n\n\n---view\n\nmain : Signal Html\nmain = view <~ model\n\n\nview : Model -> Html\nview state = \n    div []\n        [ textbox state.input\n        , text state.input\n        , div [] (List.map listHtml state.nameList)\n        ]\n\nlistHtml : String -> Html\nlistHtml str = li [] [text str]\n\ntextbox : String -> Html\ntextbox str = input [value str\n                    ,id \"nameInput\"\n                    ,on \"input\" targetValue (send appChannel << Input)\n                    ,onBackEnter (send appChannel)]\n                    []\n\nonBackEnter : (Actions -> Message) -> Attribute\nonBackEnter message = on \"keydown\" (eventObjDecoder) (message)\n\neventObjDecoder : Json.Decoder Actions\neventObjDecoder = \n  Json.customDecoder\n    (Json.object2 (,) \n        keyCode \n        targetValue)\n    (\\(num, str)-> if| num == 8 && String.isEmpty str -> Ok (Delete ())\n                     | num == 13 && (not <|String.isEmpty str) -> Ok (Add str)\n                     | otherwise -> Err \"\")\n```\n\n##Update\nfoldp\u3067\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306eSignal\u304c\u3042\u308b\u3068\u3001Model\u3092\u66f4\u65b0\u3059\u308b\u3002\nupdate\u95a2\u6570\u3067\u306fcase\u5f0f\u3067\u305d\u308c\u305e\u308c\u306eSignal\u306e\u51e6\u7406\u3092\u308f\u3051\u308b\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96c6\u5408\u8def\u3002\n\n```hs\n\n---update\n\nmodel : Signal Model\nmodel = foldp update initState (subscribe appChannel)\n\nupdate : Actions -> Model -> Model\nupdate action state =\n\n case action of \n\n            Input str ->  {state| input <- str }\n        \n            Add str -> {state| input <- \"\"\n                             , nameList <- state.nameList ++ [str]}\n        \n            Delete x ->if List.isEmpty state.nameList then state\n                       else {state | nameList <- tail state.nameList}\n        \n            _ -> state\n\n```\n\n\u3053\u3053\u304b\u3089\u3001MVU\u306b\u6a5f\u80fd\u3092\u4ed8\u3051\u8db3\u3057\u3066\u81ea\u52d5\u5c65\u6b74\u4fdd\u5b58\u3092\u4ed8\u3051\u3066\u307f\u308b\u3002\n\n\n##Model\u3092\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u578b\u306b\u3059\u308b\n\nGUI\u306e\u73fe\u5728\u306e\u72b6\u614b\u3092Array\u306b\u9010\u6b21\u3001\u9806\u756a\u306b\u4fdd\u5b58\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\u65b0\u3057\u3044Model\u578b\u306b\u306a\u3063\u305f\u3002\n\n\u3042\u3068\u52d5\u4f5c\u3092\u8868\u3059Actions\u578b\u306b\u3001\u5c65\u6b74\u304b\u3089\u3068\u308a\u3060\u3059\u52d5\u4f5c\uff08`ArchiveSelect Int`\uff09\u3092\u4ed8\u3051\u8db3\u3057\u305f\u3002\n\n```hs\n\ntype alias NameList = List String\ntype alias State = { input :String \n                    ,nameList : NameList}\n\ntype alias Model = {state:State\n                   ,archive:Array State\n                   ,current :Int}\n\ninitState : State\ninitState = {input = \"\", nameList = []}\n\ninitModel : Model\ninitModel = { state = initState\n            , archive = Array.fromList [initState]\n            , current = 0}\n\ntype Actions \n    = None \n    | Input String \n    | Add String \n    | Delete () \n    | ArchiveSelect Int\n\n```\n\n##Channel\nchannel\u306f\u5909\u308f\u3089\u305a\uff11\u3064\u3002\n\n```\nappChannel : Channel Actions\nappChannel = channel None\n\n```\n\n##View\u306b\u3001\u30ec\u30f3\u30b8\u30bf\u30d6\u3092\u4f5c\u308b\u3002\nrangInput\u3092\u4f5c\u308b\u3002DOM\u306e\u6319\u52d5\u3067\u3001\u5024\u3092\u53d6\u308a\u51fa\u3057\u305f\u3089\u6587\u5b57\u5217\u578b\u3067\u3001\u5165\u308c\u308b\u6642\u306f\u6570\u5b57\u3067\u3082\u6587\u5b57\u5217\u578b\u3067\u3082\u3044\u3044\u306e\u3067\u3061\u3087\u3063\u3068\u305d\u306e\u5909\u63db\u3067\u308f\u304b\u308a\u3065\u3089\u304f\u306a\u3063\u3066\u308b\u3002\n\n```hs \n\n--\u30ec\u30f3\u30b8\u30a4\u30f3\u30d7\u30c3\u30c8\u3001\u6700\u5927\u5024\u3068\u73fe\u5728\u4f4d\u7f6e\u3092\u5f15\u6570\u306b\u53d6\u308b\nrangeInput :Int -> Int -> Html \nrangeInput max current =\n        div [] [ \n                div [] [\n                        text \"0\"                  \n                       ,input\n                           [ type' \"range\"\n                           , value (toString current)\n                           , Attri.max (toString (max))\n                           , on \"input\" (targetValue) ((send appChannel)<<ArchiveSelect<<toInt' )] []\n                       ,text <|toString max ] \n                ,text (toString current)]\n\n---input\u306fvalue\u3092\u53d6\u308a\u51fa\u3059\u3068\u3001String\u578b\u306b\u306a\u308b\u306e\u3067Int\u306b\u5909\u63db\ntoInt' x = case String.toInt x of\n                Ok x -> x\n                Err str -> Debug.crash str\n```\n\n##Update\u306b\u81ea\u52d5\u5c65\u6b74\u51e6\u7406\u3092\u8db3\u3059\u3002\n\n\u30ec\u30f3\u30b8\u306e\u5165\u529b\u52d5\u4f5c\u3001\u81ea\u52d5\u5c65\u6b74\u6a5f\u80fd\u3092\u3001\u30ec\u30b3\u30fc\u30c9\u8868\u8a18\u3067\u4fdd\u5b58\u3057\u305f\u3044\u51e6\u7406\u3060\u3051\u306b\u4ed8\u3051\u8db3\u3057\u305f\u3002\n\n####\u30ec\u30b3\u30fc\u30c9\u8868\u8a18\u3068\u306f\uff1f\n\n\u3000\u30ec\u30b3\u30fc\u30c9\u8868\u8a18\u3092\u4f7f\u3046\u3068\u3001\u578b\u306e\u90e8\u5206\u3092\u6307\u5b9a\u3057\u3066\u65b0\u3057\u3044\u578b\u3092\u4f5c\u308b\u51e6\u7406\u3092\u66f8\u3051\u308b\u3002[\u69cb\u6587](http://elm-lang.org/learn/Records.elm)\n\u305d\u308c\u306b\u3088\u308a\u30c7\u30fc\u30bf\u578b\u306b\u5bfe\u3059\u308b\u8a08\u7b97\u3092\u69cb\u9020\u306e\u3088\u3046\u306b\u51fa\u6765\u308b\u3002\u53c2\u8003\u2192[making pong](http://elm-lang.org/blog/Pong.elm)\n\n\n case\u5f0f\u306e\u524d\u306blet\u3092\u4f7f\u3046\u3068case\u524d\u306b\u4e8b\u524d\u51e6\u7406\u3092\u306f\u3055\u3081\u308b\u3002\n\u305d\u306elet\u5f0f\u5185\u3067\u3001model\u304b\u3089state\u306e\u53d6\u308a\u51fa\u3059\u306e\u3068\u3001\u66f4\u65b0\u3057\u305fstate\u3092\u4fdd\u5b58\u3059\u308b\u95a2\u6570\uff08write\uff09\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u5206\u5c90\u306b\u4ed8\u3051\u8db3\u3057\u305f\u3002\uff08\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u3042\u308b\u304b\u3082\u77e5\u308c\u306a\u3044\uff09\n\n```hs\n\n---update\n\nmodel : Signal Model\nmodel = foldp update initModel (subscribe appChannel)\n\nupdate : Actions -> Model -> Model\nupdate action model =\n    let state  = model.state \n        write state' = let target = model.current + 1\n                       in {model | state <- state'\n                                 , current <- target\n                                 , archive <-if target > (Array.length model.archive) - 1  \n                                            then Array.push state' model.archive\n                                            else Array.set target state' model.archive\n                                 }\n    in case action of \n\n            Input str -> write <| {state| input <- str }\n        \n            Add str -> write <| {state| input <- \"\"\n                                      , nameList <- state.nameList ++ [str]}\n        \n            Delete x ->if List.isEmpty state.nameList then model\n                       else write <| {state | nameList <- tail state.nameList}\n        \n            ArchiveSelect v -> {model | current <- v \n                                     \u3000,\u3000state <- case Array.get v model.archive of\n                                                        Just ste -> ste\n                                                        Nothing -> Debug.crash \"Unexpected access\"}\n            _ -> model\n```\n\n##view\u306e\u5f15\u6570\u90e8\u5206\nModel\u304c\u5909\u308f\u3063\u305f\u306e\u3067\u3001view\u95a2\u6570\u306e\u5f15\u6570\u90e8\u5206\u3092\u5909\u3048\u308b\u3002\u30ec\u30b3\u30fc\u30c9\u8868\u8a18\u3067\u53d7\u3051\u53d6\u308b\u3088\u3046\u306b\u5909\u3048\u305f\u3002\u5909\u66f4\u306f\u6700\u5c0f\u9650\u306b\u306a\u308b\u30a2\u30d4\u30fc\u30eb\u3002\n\n```hs\n\nview : Model -> Html\nview {state, current , archive} = \n    div []\n        [rangeInput ((Array.length archive)-1) current\n        ,textbox state.input\n        , text state.input\n        , div [] (List.map listHtml state.nameList)\n        ]\n\nmain : Signal Html\nmain = view <~ model\n```\n\n##\u307e\u3068\u3081\n\n```\n                          \n    \u3000 channel     -------------------\u2192\u3000   channel\n    \u3000   \u2191 send+merge                         \u2193 subscribe      \nmain = View ---------- fopdp update ---------\n            \u30001 : 1          \u2195          \n                           Model \n```\n\n\u3000Elm\u306f\u69cb\u6587\u304b\u3089\u4f55\u304b\u3089\u30b7\u30f3\u30d7\u30eb\u3067\u898b\u3084\u3059\u3044\u3002FRP\u306b\u3088\u308a\u6a5f\u80fd\u3092\u62e1\u5f35\u3059\u308b\u6642\uff08\u4f55\u304b\u30a4\u30d9\u30f3\u30c8\u3092\u5897\u3084\u3059\u6642\uff09\u306f\u4ed8\u3051\u8db3\u3059\u3060\u3051\u3067\u3067\u304d\u308b\u3002\n\n\u3000\u5c65\u6b74\u6a5f\u80fd\u306b\u3057\u305f\u306e\u306fview\u3068\u72b6\u614b\u3092\u4e00\u3064\u3065\u3064\u306e1:1\u306b\u3059\u308b\u3068\u3001\u4fdd\u5b58\u3057\u305f\u72b6\u614b\u3092\u53d6\u308a\u51fa\u3057\u3066\u904e\u53bb\u306e\u72b6\u614b\u306b\u3059\u308c\u3070\u3001\u5373\u5ea7\u306bGUI\u306e\u8868\u793a\u3082\u305d\u306e\u6642\u305d\u306e\u5834\u9762\u306e\u72b6\u614b\u306b\u306a\u308b\u3001\u3053\u306e\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u6319\u52d5\u9762\u767d\u3044\u306a\u3068\u3002\uff08\u30bf\u30a4\u30e0\u30c8\u30e9\u30d9\u30eb\u30c7\u30d0\u30c3\u30ac\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u307f\u305f\u3002\uff09\u308f\u308a\u3068\u30c8\u30ec\u30f3\u30c9\u3067\u3082\u3042\u308b\u3002\n\n\u3000Elm\u66f8\u3044\u3066\u307f\u308b\u3068\u3001Html\u3084Signal\u3084\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u706b\u306e\u6319\u52d5\u3092\u52d8\u9055\u3044\u3057\u3066\u305f\u308a\u3001Signal\u306f\u3053\u306d\u304f\u308a\u56de\u3059\u3068\u5f8c\u304b\u3089\u89e6\u308c\u3089\u308c\u306a\u304b\u3063\u305f\u308a\u3057\u305f\u3002\u3051\u308c\u3069foldp\u5468\u308a\u306f\u3001\u67d4\u8edf\u3067\u3001\u5168\u3066\u578b\u4ed8\u3051\u3055\u308c\u308b\u306e\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u3068\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u8d8a\u3048\u305f\u3042\u3068\u306fElm\u306f\u5168\u4f53\u3067\u4e00\u679a\u5ca9\u3067\u30c6\u30b9\u30c8\u3082\u3057\u3084\u3059\u3044\u3002\u3058\u3083\u3042MVU\u3060\u3051Elm\u3067\u307b\u304bjs\u3068\u304b\u51fa\u6765\u308b\u304b\u3001\u3068\u805e\u304b\u308c\u305f\u3089\uff08port\u306f\u30e1\u30a4\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3057\u304b\u66f8\u3051\u306a\u3044\u306e\u3068\u3001native\u306f\u53c2\u7167\u900f\u904e\u306b\u66f8\u304b\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u3053\u3068\u304b\u3089\u4e00\u884c\u304f\u3089\u3044js\u3067\u66f8\u3044\u3066\u3042\u3068\uff09\u306a\u308b\u3079\u304f\uff11\u3064\u306e\u8a00\u8a9e\u306b\u3057\u305f\u65b9\u304c\u697d\u3060\u306a\u30c3\u3066\u611f\u3058\u3002\u6b21\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3069\u3046\u306a\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u304c\u3002\n\n\u3000\u4eca\u56deMVU\u305d\u308c\u305e\u308c\u306b\u4ed8\u3051\u8db3\u3059\u3088\u3046\u306b\u62e1\u5f35\u3057\u305f\u3002\u3055\u3089\u306b\u3001\u305d\u306e\u307e\u307eMVU\u3092\u30ef\u30f3\u30bb\u30c3\u30c8\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3059\u308b\u66f8\u304d\u65b9\u304c\u3042\u308b\uff08LocalChannel\uff09\u3002\u6b21\u3084\u3063\u3066\u307f\u308b\u3002\n\n [^1]: ...\u3069\u3046\u3084\u3089IE\u3067\u306frange\u30a4\u30f3\u30d7\u30c3\u30c8\u306e\"input\"\u30a4\u30d9\u30f3\u30c8\u306f\u6319\u52d5\u304c\u9055\u3046\u3089\u3057\u3044\u3002\u4ffa\u306f\u898b\u306a\u3044\u3053\u3068\u306b\u3057\u305f\u3002\n"}