{"context": " More than 1 year has passed since last update.\n\n\u3010 PC \u74b0\u5883 \u3011\n\n\u30fb OS : Windows 7 (64-bit)\n\n\n\u30fb  R  : version 3.1.0\n\n\n1. RStudio \u3068 R \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u3092\u3001\u30d1\u30b9\u540d\u306b\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30d5\u30a9\u30eb\u30c0\u306b\u79fb\u52d5\n\n\u3000\u2192 \u300cRStudio\\bin\u300d\u3092C\u30c9\u30e9\u30a4\u30d6\u76f4\u4e0b\u306b\u79fb\u52d5\u3057\u305f\n\n2. {Rtools} \u30d1\u30c3\u30b1\u30fc\u30b8\u3092 R \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\nhttp://cran.r-project.org/bin/windows/Rtools/ \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n\u203b \u4eca\u56de\u306f\u3001 Rtools31.exe \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3002\n\n\uff08\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3092\u898b\u3066\u3001\u81ea\u5206\u304c\u3044\u307e\u4f7f\u7528\u3057\u3066\u3044\u308b R \u306e version \u306b\u9069\u5408\u3059\u308b\u3082\u306e\u3092\u9078\u3076\uff09\n\n\n2-1. Rtools31.exe \u30d5\u30a1\u30a4\u30eb\u3092\u3001 C \u30c9\u30e9\u30a4\u30d6\u76f4\u4e0b\u306b\u79fb\u52d5\n\n2-2.\u4ee5\u4e0b\u3092\u74b0\u5883\u5909\u6570  Path \u3092\u3001\u30d1\u30b9\u306e\u5148\u982d\u306b\u8a18\u8ff0\u3000\u203b\u30d1\u30b9\u306e\u5148\u982d\u306b\u3059\u308b\n\n\u203b \u2462\u306f\u3001 \u304a\u4f7f\u3044\u306e R \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u5408\u308f\u305b\u305f\u30d1\u30b9\u540d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\n   \u2460 C:\\Rtools\\bin\n   \u2461 C:\\Rtools\\gcc-4.6.3\\bin\n   \u2462 C:\\Program Files\\R\\R-3.1.0\\bin\n   \u2463 C:\\RStudio\\bin\n   \u2464 C:\\Windows\\system32;\n\n\n\n2-3.  Rtools \u306e\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\n\n\uff08\u53c2\u8003\uff09 \uff08\u30ea\u30f3\u30af\u5148\uff09Rtools \u516c\u5f0f\u30da\u30fc\u30b8 \u5185\u306e\"Check if Rtools can be used in R\"\u9805\u76ee \n\n\n\n\n\u203b R \u306e Sys.getenv() \u95a2\u6570\u3067\u3001 R \u306e\u4e2d\u304b\u3089\u3001 Windows OS \u306e\u74b0\u5883\u5909\u6570 \u8a2d\u5b9a\u60c5\u5831\u3092\u8868\u793a\u3055\u305b\u308b\n\nRStudio\nSys.getenv('PATH')\n\n\n\n\u203b Rtools\\bin \u3068\u3001 Rtools\\gcc-4.6.3\\bin \u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\n\uff08\u4ee5\u4e0b\u306e\u5b9f\u884c\u7d50\u679c\u306f\u3001\u81ea\u5206\u304c\u4f7f\u7528\u4e2d\u306e PC \u306e\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u5185\u5bb9\u306b\u3088\u3063\u3066\u5909\u308f\u308b\uff09\n\nRStudio\n   [1] \"C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin\\\\x64;C:\\\\Rtools\\\\bin;C:\\\\Rtools\\\\gcc-4.6.3\\\\bin;C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin;C:\\\\RStudio\\\\bin;C:\\\\Windows\\\\system32;C:\\\\Program Files\\\\Java\\\\jdk1.7.0_51\\\\bin;C:\\\\apache-maven-3.2.1\\\\bin;c:\\\\usr\\\\local\\\\bin;c:\\\\gs\\\\gs7.07\\\\bin;\\\\c:\\\\gs\\\\gs7.07\\\\lib;c:\\\\dviout;C:C:\\\\Program Files (x86)\\\\MeCab\\\\bin;C:\\\\Program Files (x86)\\\\MeCab;C:\\\\Python34;C:\\\\Python34\\\\Scripts;C:\\\\Rtools\\\\bin;C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin;C:\\\\julia-e44b593905\\\\bin;C:\\\\Rtools\\\\bin;C:\\\\Rtools\\\\gcc-4.6.3\\\\bin;C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin;C:\\\\RStudio\\\\bin;C:\\\\Windows\\\\system32;C:\\\\Program Files\\\\Java\\\\jdk1.7.0_51\\\\bin;C:\\\\apache-maven-3.2.1\\\\bin;c:\\\\usr\\\\local\\\\bin;c:\\\\gs\\\\gs7.07\\\\bin;\\\\c:\\\\gs\\\\gs7.07\\\\lib;c:\\\\dviout;C:C:\\\\Program Files (x86)\\\\MeCab\\\\bin;C:\\\\Program Files (x86)\\\\MeCab;C:\\\\Python34;C:\\\\Python34\\\\Scripts;C:\\\\Rtools\\\\bin;C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin;C:\\\\julia-e44b593905\\\\bin;\"\n\n\n\n\u7d9a\u3051\u3066\u3001 C++ \u306e\u30b3\u30f3\u30d1\u30a4\u30e9 g++ \u304c Windows \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u547c\u3073\u51fa\u305b\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\n\n\u203b R \u306e system() \u95a2\u6570\u3067\u3001 R \u306e\u4e2d\u304b\u3089\u3001 Windows OS \u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u547d\u4ee4\u6307\u793a\n\nRStudio\nsystem('g++ -v')\n\n\n\n\u8a8d\u8b58\u3055\u308c\u305f g++ \u306e\u60c5\u5831\u304c\u8868\u793a\u3055\u308c\u305f\u3002\u672b\u5c3e\u306b\u3001 gcc version 4.6.3 \u3068\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u304c\u8868\u793a\n\nRStudio\nUsing built-in specs.\nCOLLECT_GCC=C:\\Rtools\\GCC-46~1.3\\bin\\G__~1.EXE\nCOLLECT_LTO_WRAPPER=c:/rtools/gcc-46~1.3/bin/../libexec/gcc/i686-w64-mingw32/4.6.3/lto-wrapper.exe\nTarget: i686-w64-mingw32\nConfigured with: /data/gannet/ripley/Sources/mingw-test3/src/gcc/configure --host=i686-w64-mingw32 --build=x86_64-linux-gnu --target=i686-w64-mingw32 --with-sysroot=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/mingw32 --prefix=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/mingw32 --with-gmp=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/prereq_install --with-mpfr=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/prereq_install --with-mpc=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/prereq_install --disable-shared --enable-static --enable-targets=all --enable-languages=c,c++,fortran --enable-libgomp --enable-sjlj-exceptions --enable-fully-dynamic-string --disable-nls --disable-werror --enable-checking=release --disable-win32-registry --disable-rpath --disable-werror CFLAGS='-O2 -mtune=core2 -fomit-frame-pointer' LDFLAGS=\nThread model: win32\ngcc version 4.6.3 20111208 (prerelease) (GCC) \n\n\n\n\u3010 Rtools \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306f\u7121\u4e8b\u306b\u5b8c\u4e86\u3000\u3011\n\n3.\u3010 \u6b21\u306b\u3001 R \u306e\u30d1\u30c3\u30b1\u30fc\u30b8 {inline} \u3068 {Rcpp} \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3011\n\n3-1. R \u3092\u7acb\u3061\u4e0a\u3052\u3066\u3001 R \u306e\u30d1\u30c3\u30b1\u30fc\u30b8 {inline} \u3068 {Rcpp} \u3092 install.pacakges() \u3067\u8aad\u307f\u8fbc\u307f\u5f8c\u3001 library() \u3067\u30e1\u30e2\u30ea\u306b\u8aad\u307f\u8fbc\u3080\n\nRStudio\ninstall.packages(\"inline\")\ninstall.packages(\"Rcpp\")\n\nlibrary(Rcpp)\nlibrary(inline)\n\n\n\n4.\u3010\u3000\u7d9a\u3044\u3066\u3001 {RStan} \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3011\n\n\uff08\u53c2\u8003\uff09 \uff08\u30ea\u30f3\u30af\u5148\uff09RStan github\u30da\u30fc\u30b8 \n\n\n\n\u203b \u4e0a\u8a18\u306e \u6e96\u5099\u5de5\u7a0b Prerequistics \u306e\u9805\u76ee\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u4e0b\u8a18\u306f\u3001\u3059\u3067\u306b\u5c0e\u5165\u6e08\u307f\n\n\uff08\u74b0\u5883\u5909\u6570 PATH \u306e\u8a2d\u5b9a\u3082\u7d42\u308f\u3063\u3066\u3044\u308b\uff09\n\n\nR \u672c\u4f53\n\nRtools\n\n\n\n\u4ee5\u4e0b\u306e\u8a18\u8f09\u6307\u793a\u306b\u5f93\u3044\u3001 RStan \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n\nRStudio \u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3001\u4e0b\u8a18\u3092\u5165\u529b\u3057\u3066\u5b9f\u884c\n\nRStudio\nSys.setenv(MAKEFLAGS = \"-j4\") \n\nsource('http://mc-stan.org/rstan/install.R', echo = TRUE, max.deparse.length = 2000)\n\ninstall_rstan() \n\n\n\n\u203b\u9577\u3044\u8868\u793a\u304c\u7d9a\u3044\u305f\u5f8c\u3001\u4ee5\u4e0b\u304c\u672b\u5c3e\u306b\u8868\u793a\u3055\u308c\u308b\u3002\n\nRStudio\n g++ -m64 -I\"C:/PROGRA~1/R/R-31~1.0/include\" -DNDEBUG -I\"../inst/include/stansrc\"   -I\"../inst/include/stanlib/eigen_3.2.0\"  -I\"../inst/include/stanlib/eigen_3.2.0/unsupported\"  -I\"../inst/include/stanlib/boost_1.54.0\" -I\"../inst/include\"  -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS   -I\"c:/usr/local/home/R/win-library/3.1/Rcpp/include\" -I\"d:/RCompile/CRANpkg/extralibs64/local/include\"     -O3  -c gm__grammars__whitespace_grammar_inst.cpp -o gm__grammars__whitespace_grammar_inst.o\ng++ -m64 -I\"C:/PROGRA~1/R/R-31~1.0/include\" -DNDEBUG -I\"../inst/include/stansrc\"   -I\"../inst/include/stanlib/eigen_3.2.0\"  -I\"../inst/include/stanlib/eigen_3.2.0/unsupported\"  -I\"../inst/include/stanlib/boost_1.54.0\" -I\"../inst/include\"  -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS   -I\"c:/usr/local/home/R/win-library/3.1/Rcpp/include\" -I\"d:/RCompile/CRANpkg/extralibs64/local/include\"     -O3  -c agrad__rev__var_stack.cpp -o agrad__rev__var_stack.o\nar qc libstan.a agrad__rev__var_stack.o \n# -@if test ! -e ../inst/libstan/x64; then mkdir -p ../inst/libstan/x64; fi\n# cp libstan.a ../inst/libstan/x64\n# rm libstan.a \ng++ -m64 -shared -s -static-libgcc -o rstan.dll tmp.def stanc.o chains.o misc.o init.o gm__ast_def.o gm__grammars__bare_type_grammar_inst.o gm__grammars__expression07_grammar_inst.o gm__grammars__expression_grammar_inst.o gm__grammars__functions_grammar_inst.o gm__grammars__program_grammar_inst.o gm__grammars__statement_2_grammar_inst.o gm__grammars__statement_grammar_inst.o gm__grammars__term_grammar_inst.o gm__grammars__var_deccls_grammar_inst.o gm__grammars__whitespace_grammar_inst.o -Ld:/RCompile/CRANpkg/extralibs64/local/lib/x64 -Ld:/RCompile/CRANpkg/extralibs64/local/lib -LC:/PROGRA~1/R/R-31~1.0/bin/x64 -lR\ninstalling via 'install.libs.R' to c:/usr/local/home/R/win-library/3.1/rstan\ninstalling rstan libs to c:/usr/local/home/R/win-library/3.1/rstan/libs/x64\ninstalling libstan.a to c:/usr/local/home/R/win-library/3.1/rstan/libstan/x64\n** R\n** inst\n** preparing package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** installing vignettes\n** testing if installed package can be loaded\n* DONE (rstan)\n\nThe downloaded source packages are in\n    \u2018C:\\Users\\HirofumiYashima\\AppData\\Local\\Temp\\Rtmpo59GaD\\downloaded_packages\u2019\nrstan (Version 2.3.0, packaged: 2014-06-23 19:44:07 UTC, GitRev: 5dd1fe5a323a)\nmode fast without NDEBUG for compiling C++ code has been set already\n\n\n\n{RStan} \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001 R \u306e\u30e1\u30e2\u30ea\u306b\u8aad\u307f\u8fbc\u3080\n\nRStudio\nlibrary(rstan) \n\n\n\n\uff08\u5b9f\u884c\u7d50\u679c\uff09\n\nRStudio\nrstan (Version 2.3.0, packaged: 2014-06-23 19:44:07 UTC, GitRev: 5dd1fe5a323a)\n\n\n\n5.  Rstan \u3092\u4f7f\u3063\u3066\u307f\u308b\n\n\uff08\u53c2\u8003\uff09 \uff08\u30ea\u30f3\u30af\u5148\uff09RStan github\u30da\u30fc\u30b8\u5185 \"Example 1: Eight Schools\"\u9805\u76ee \n\n\n\n\u4ee5\u4e0b\u3092\u3001R (or RStudio)\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u5165\u529b\n\u2460\n\nRStudio\nschools_code <- '\n  data {\n    int<lower=0> J; // number of schools \n    real y[J]; // estimated treatment effects\n    real<lower=0> sigma[J]; // s.e. of effect estimates \n  }\n  parameters {\n    real mu; \n    real<lower=0> tau;\n    real eta[J];\n  }\n  transformed parameters {\n    real theta[J];\n    for (j in 1:J)\n      theta[j] <- mu + tau * eta[j];\n  }\n  model {\n    eta ~ normal(0, 1);\n    y ~ normal(theta, sigma);\n  }\n'\n\n\n\u2461\n\nRStudio\n\nschools_dat <- list(J = 8, \n                    y = c(28,  8, -3,  7, -1,  1, 18, 12),\n                    sigma = c(15, 10, 16, 11,  9, 11, 10, 18))\n\n\n\u2462\n\nRStudio\nfit <- stan(model_code = schools_code, data = schools_dat, \n            iter = 1000, chains = 4)\n\n\n\n\u3010\u5b9f\u884c\u7d50\u679c\u3011\n\n\uff08\u4ee5\u4e0b\u304c\u8868\u793a\u3055\u308c\u305f\u3042\u3068\u3001\u6570\u5341\u79d2 \u5f85\u3064\uff09\n\nRStudio\nTRANSLATING MODEL 'schools_code' FROM Stan CODE TO C++ CODE NOW.\nCOMPILING THE C++ CODE FOR MODEL 'schools_code' NOW.\n\n\n\n\uff08\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u5b9f\u884c\u904e\u7a0b\u304c\u8868\u793a\u3055\u308c\u308b\uff09\n\nRStudio\ncygwin warning:\n  MS-DOS style path detected: C:/PROGRA~1/R/R-31~1.0/etc/x64/Makeconf\n  Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-31~1.0/etc/x64/Makeconf\n  CYGWIN environment variable option \"nodosfilewarning\" turns off this warning.\n  Consult the user's guide for more details about POSIX paths:\n    http://cygwin.com/cygwin-ug-net/using.html#using-pathnames\nc:/usr/local/home/R/win-library/3.1/rstan/include//stansrc/stan/agrad/rev/var_stack.hpp:49:17: warning: 'void stan::agrad::free_memory()' defined but not used [-Wunused-function]\n\nSAMPLING FOR MODEL 'schools_code' NOW (CHAIN 1).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.016 seconds (Warm-up)\n#                0.016 seconds (Sampling)\n#                0.032 seconds (Total)\n\n\nSAMPLING FOR MODEL 'schools_code' NOW (CHAIN 2).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.015 seconds (Warm-up)\n#                0.013 seconds (Sampling)\n#                0.028 seconds (Total)\n\n\nSAMPLING FOR MODEL 'schools_code' NOW (CHAIN 3).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.015 seconds (Warm-up)\n#                0.012 seconds (Sampling)\n#                0.027 seconds (Total)\n\n\nSAMPLING FOR MODEL 'schools_code' NOW (CHAIN 4).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.017 seconds (Warm-up)\n#                0.011 seconds (Sampling)\n#                0.028 seconds (Total)\n\n> \n\n\n\n\u5b9f\u884c\u7d50\u679c\u3092\u8868\u793a\u3055\u305b\u308b\n\nRStudio\nprint(fit);\n\n\n\n\u5b9f\u884c\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u305f\n\nRStudio\nInference for Stan model: schools_code.\n4 chains, each with iter=1000; warmup=500; thin=1; \npost-warmup draws per chain=500, total post-warmup draws=2000.\n\n          mean se_mean   sd   2.5%   25%   50%   75% 97.5% n_eff Rhat\nmu        8.00    0.16 4.88  -1.24  4.81  7.84 11.11 17.77   904 1.00\ntau       6.14    0.20 4.93   0.19  2.37  5.10  8.69 18.71   625 1.01\neta[1]    0.41    0.03 0.94  -1.42 -0.22  0.39  1.05  2.24  1263 1.00\neta[2]   -0.02    0.02 0.90  -1.79 -0.63 -0.02  0.60  1.71  1426 1.00\neta[3]   -0.21    0.02 0.90  -1.98 -0.80 -0.24  0.39  1.62  1351 1.00\neta[4]   -0.03    0.02 0.90  -1.78 -0.63 -0.05  0.54  1.75  1506 1.00\neta[5]   -0.34    0.02 0.87  -2.05 -0.93 -0.37  0.24  1.39  1442 1.00\neta[6]   -0.20    0.02 0.95  -1.98 -0.81 -0.27  0.43  1.71  1578 1.00\neta[7]    0.33    0.02 0.86  -1.41 -0.22  0.35  0.91  1.92  1421 1.00\neta[8]    0.05    0.02 0.93  -1.86 -0.57  0.04  0.69  1.84  1525 1.00\ntheta[1] 11.28    0.21 7.92  -1.58  6.11 10.25 15.30 31.04  1364 1.00\ntheta[2]  7.88    0.14 6.25  -3.70  3.83  7.84 11.84 20.74  1932 1.00\ntheta[3]  6.13    0.20 7.50 -10.91  2.12  6.48 10.64 19.97  1365 1.00\ntheta[4]  7.55    0.16 6.45  -4.76  3.53  7.47 11.44 21.30  1645 1.00\ntheta[5]  5.41    0.15 6.07  -7.74  1.77  5.94  9.32 16.60  1545 1.00\ntheta[6]  6.35    0.16 6.49  -7.57  2.49  6.63 10.32 18.90  1597 1.00\ntheta[7] 10.47    0.18 6.77  -1.28  6.02  9.81 14.31 25.08  1487 1.00\ntheta[8]  8.57    0.21 7.47  -5.54  4.12  8.37 12.67 24.10  1230 1.00\nlp__     -4.95    0.11 2.53 -10.76 -6.45 -4.72 -3.23 -0.51   566 1.01\n\nSamples were drawn using NUTS(diag_e) at Mon Jun 30 16:36:51 2014.\nFor each parameter, n_eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor on split chains (at \nconvergence, Rhat=1).\n\n\n\n\u6b21\u306b\u3001\u4ee5\u4e0b\u306e\u4f8b\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\uff08\u203b\u4e0a\u8a18\u3001RStan \u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3088\u308a\uff09\n\n\nIn RStan, we can also specify the Stan model using a file. For example, we can download 8schools.stan file to our working directory and use the following usage of function stan instead.\n\n\n\u203b \u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089\u3001 8schools.stan \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u4ee5\u4e0b\u3092\u5b9f\u884c\n\n\u203b \u5148\u307b\u3069\u3001 schools_code \u5909\u6570\u306b\u683c\u7d0d\u3057\u3066\u3044\u305f Stan \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u3001\u5916\u90e8\u30d5\u30a1\u30a4\u30eb \uff08\u30d5\u30a1\u30a4\u30eb\u540d  8schools.stan \uff09\u306b\u4fdd\u5b58\u3057\u3066\u3001 R \u304b\u3089\u547c\u3073\u51fa\u3059\u65b9\u5f0f\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\n\n8schools.stan \u306e\u9752\u6587\u5b57\u306b\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u5408\u308f\u305b\u3066\u4ee5\u4e0b\u3092\u5b9f\u884c\n\n\u30de\u30a6\u30b9\u53f3\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u2192\u300c\u540d\u524d\u3092\u3064\u3051\u3066\u30ea\u30f3\u30af\u5148\u3092\u4fdd\u5b58\u300d\u3092\u30af\u30ea\u30c3\u30af\u3000\n\n\u203b\u3059\u308b\u3068\u3001\u4fdd\u5b58\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u753b\u9762\u304c\u958b\u304f\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u7a2e\u985e\u306f\u3001\u81ea\u52d5\u7684\u306b\u300cSTAN\u30d5\u30a1\u30a4\u30eb(.stan)\u300d\u306b\u306a\u3063\u3066\u3044\u308b\n\n\u203b setwd()\u3067\u3001\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u306e\u683c\u7d0d\u5148\u30d5\u30a9\u30eb\u30c0\u306b\u3001R\u306e\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3092\u3042\u308f\u305b\u308b\n\n\u21d2 list.files()\u3067\u3001\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u304c\u8868\u793a\u3055\u308c\u308b\u304b\u78ba\u8a8d\n\n\u4e0b\u8a18\u3092\u5b9f\u884c\n\nRStudio\nfit1 <- stan(file = '8schools.stan', data = schools_dat, \n             iter = 1000, chains = 4)\n\n\n\n\uff08\u5b9f\u884c\u904e\u7a0b\u306e\u8868\u793a\uff09\n\nRStudio\nTRANSLATING MODEL '8schools' FROM Stan CODE TO C++ CODE NOW.\nCOMPILING THE C++ CODE FOR MODEL '8schools' NOW.\ncygwin warning:\n  MS-DOS style path detected: C:/PROGRA~1/R/R-31~1.0/etc/x64/Makeconf\n  Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-31~1.0/etc/x64/Makeconf\n  CYGWIN environment variable option \"nodosfilewarning\" turns off this warning.\n  Consult the user's guide for more details about POSIX paths:\n    http://cygwin.com/cygwin-ug-net/using.html#using-pathnames\nc:/usr/local/home/R/win-library/3.1/rstan/include//stansrc/stan/agrad/rev/var_stack.hpp:49:17: warning: 'void stan::agrad::free_memory()' defined but not used [-Wunused-function]\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 1).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.017 seconds (Warm-up)\n#                0.012 seconds (Sampling)\n#                0.029 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 2).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.019 seconds (Warm-up)\n#                0.015 seconds (Sampling)\n#                0.034 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 3).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.015 seconds (Warm-up)\n#                0.014 seconds (Sampling)\n#                0.029 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 4).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.018 seconds (Warm-up)\n#                0.019 seconds (Sampling)\n#                0.037 seconds (Total)\n\n\n\n\uff08\u5b9f\u884c\u304c\u5b8c\u4e86\u3057\u305f\uff09\n\n\uff08\u5b9f\u884c\u7d50\u679c\u3092\u8868\u793a\uff09\n\nRStudio\nprint(fit1);\n\n\n\n\uff08\u5b9f\u884c\u7d50\u679c\uff09\n\nRStudio\nInference for Stan model: 8schools.\n4 chains, each with iter=1000; warmup=500; thin=1; \npost-warmup draws per chain=500, total post-warmup draws=2000.\n\n          mean se_mean   sd   2.5%   25%   50%   75% 97.5% n_eff Rhat\nmu        7.95    0.23 4.98  -1.61  4.79  7.86 11.10 17.83   455 1.01\ntau       6.48    0.32 5.76   0.27  2.34  5.05  8.85 19.88   328 1.01\neta[1]    0.38    0.03 0.97  -1.61 -0.25  0.39  1.04  2.24  1152 1.00\neta[2]    0.00    0.03 0.87  -1.67 -0.57 -0.02  0.58  1.77   923 1.00\neta[3]   -0.21    0.03 0.93  -2.01 -0.85 -0.22  0.41  1.69  1313 1.00\neta[4]   -0.03    0.02 0.90  -1.87 -0.62 -0.01  0.58  1.72  1462 1.00\neta[5]   -0.31    0.02 0.88  -1.92 -0.87 -0.34  0.22  1.54  1413 1.00\neta[6]   -0.18    0.02 0.87  -1.83 -0.77 -0.22  0.39  1.61  1456 1.00\neta[7]    0.35    0.03 0.90  -1.53 -0.24  0.38  0.95  2.05   991 1.00\neta[8]    0.05    0.03 1.00  -1.97 -0.62  0.06  0.72  1.97  1294 1.00\ntheta[1] 11.67    0.60 9.86  -2.52  5.90 10.09 15.47 33.96   274 1.01\ntheta[2]  7.93    0.16 6.16  -4.79  4.12  7.89 11.79 20.70  1487 1.00\ntheta[3]  6.01    0.22 7.63 -11.99  2.31  6.67 10.80 19.12  1186 1.00\ntheta[4]  7.63    0.16 6.48  -5.90  3.77  7.60 11.51 20.95  1555 1.00\ntheta[5]  5.23    0.15 6.19  -7.87  1.53  5.63  9.15 16.14  1618 1.00\ntheta[6]  6.27    0.18 6.68  -7.36  2.37  6.49 10.64 18.57  1418 1.00\ntheta[7] 10.75    0.19 6.80  -0.36  6.27  9.93 14.67 25.67  1305 1.00\ntheta[8]  8.35    0.22 7.87  -6.52  3.94  7.84 12.36 26.45  1240 1.00\nlp__     -4.98    0.10 2.57 -10.64 -6.56 -4.72 -3.13 -0.75   693 1.00\n\nSamples were drawn using NUTS(diag_e) at Mon Jun 30 16:37:52 2014.\nFor each parameter, n_eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor on split chains (at \nconvergence, Rhat=1).\n\n\n\n\uff08\u518d\u3073\u3001\u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306b\u623b\u308b\uff09\n\n\nOnce a model is fitted, we can use the fitted result as an input to fit the model with other data or settings. This would save us time of compiling the C++ code for the model. By specifying parameter fit for function stan, we can fit the model again. For example, if we want to sample more iterations, we can proceed as follows.\nfit2 <- stan(fit = fit1, data = schools_dat, iter = 10000, chains = 4)\n\n\u4e0a\u8a18\u306e\u8a18\u8ff0\u306b\u5f93\u3044\u3001\n\u3055\u304d\u307b\u3069\u3001\u751f\u6210\u3057\u305f\u30e2\u30c7\u30eb\u300cfit1\u300d\u3092\u5165\u529b\u5f15\u6570\u306b\u3057\u3066\u3001\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\n\nRStudio\nfit2 <- stan(fit = fit1, data = schools_dat, iter = 10000, chains = 4)\n\n\n\n\uff08\u5b9f\u884c\u904e\u7a0b\uff09\n\nRStudio\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 1).\n\nIteration:    1 / 10000 [  0%]  (Warmup)\nIteration: 1000 / 10000 [ 10%]  (Warmup)\nIteration: 2000 / 10000 [ 20%]  (Warmup)\nIteration: 3000 / 10000 [ 30%]  (Warmup)\nIteration: 4000 / 10000 [ 40%]  (Warmup)\nIteration: 5000 / 10000 [ 50%]  (Warmup)\nIteration: 5001 / 10000 [ 50%]  (Sampling)\nIteration: 6000 / 10000 [ 60%]  (Sampling)\nIteration: 7000 / 10000 [ 70%]  (Sampling)\nIteration: 8000 / 10000 [ 80%]  (Sampling)\nIteration: 9000 / 10000 [ 90%]  (Sampling)\nIteration: 10000 / 10000 [100%]  (Sampling)\n#  Elapsed Time: 0.162 seconds (Warm-up)\n#                0.14 seconds (Sampling)\n#                0.302 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 2).\n\nIteration:    1 / 10000 [  0%]  (Warmup)\nIteration: 1000 / 10000 [ 10%]  (Warmup)\nIteration: 2000 / 10000 [ 20%]  (Warmup)\nIteration: 3000 / 10000 [ 30%]  (Warmup)\nIteration: 4000 / 10000 [ 40%]  (Warmup)\nIteration: 5000 / 10000 [ 50%]  (Warmup)\nIteration: 5001 / 10000 [ 50%]  (Sampling)\nIteration: 6000 / 10000 [ 60%]  (Sampling)\nIteration: 7000 / 10000 [ 70%]  (Sampling)\nIteration: 8000 / 10000 [ 80%]  (Sampling)\nIteration: 9000 / 10000 [ 90%]  (Sampling)\nIteration: 10000 / 10000 [100%]  (Sampling)\n#  Elapsed Time: 0.132 seconds (Warm-up)\n#                0.141 seconds (Sampling)\n#                0.273 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 3).\n\nIteration:    1 / 10000 [  0%]  (Warmup)\nIteration: 1000 / 10000 [ 10%]  (Warmup)\nIteration: 2000 / 10000 [ 20%]  (Warmup)\nIteration: 3000 / 10000 [ 30%]  (Warmup)\nIteration: 4000 / 10000 [ 40%]  (Warmup)\nIteration: 5000 / 10000 [ 50%]  (Warmup)\nIteration: 5001 / 10000 [ 50%]  (Sampling)\nIteration: 6000 / 10000 [ 60%]  (Sampling)\nIteration: 7000 / 10000 [ 70%]  (Sampling)\nIteration: 8000 / 10000 [ 80%]  (Sampling)\nIteration: 9000 / 10000 [ 90%]  (Sampling)\nIteration: 10000 / 10000 [100%]  (Sampling)\n#  Elapsed Time: 0.131 seconds (Warm-up)\n#                0.162 seconds (Sampling)\n#                0.293 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 4).\n\nIteration:    1 / 10000 [  0%]  (Warmup)\nIteration: 1000 / 10000 [ 10%]  (Warmup)\nIteration: 2000 / 10000 [ 20%]  (Warmup)\nIteration: 3000 / 10000 [ 30%]  (Warmup)\nIteration: 4000 / 10000 [ 40%]  (Warmup)\nIteration: 5000 / 10000 [ 50%]  (Warmup)\nIteration: 5001 / 10000 [ 50%]  (Sampling)\nIteration: 6000 / 10000 [ 60%]  (Sampling)\nIteration: 7000 / 10000 [ 70%]  (Sampling)\nIteration: 8000 / 10000 [ 80%]  (Sampling)\nIteration: 9000 / 10000 [ 90%]  (Sampling)\nIteration: 10000 / 10000 [100%]  (Sampling)\n#  Elapsed Time: 0.14 seconds (Warm-up)\n#                0.114 seconds (Sampling)\n#                0.254 seconds (Total)\n\n\n\n\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306e\u4e0b\u8a18\u306e\u8a18\u8f09\u306b\u5f93\u3044\u3001\u7d50\u679c\u3092\u8868\u793a\u3055\u305b\u308b\n\n\nThe object fit2, returned from function stan is an S4 object of class stanfit. Methods such as print and plot are associated with the fitted result so we can use the following code to check out the results in fit2. print provides a summary for the parameter of the model as well as the log-posterior with name lp__ (see the following example output).\nFor more methods and details of class stanfit, see the help of class stanfit.\nIn particular, we can use extract function on stanfit objects to obtain the samples. extract extracts samples from the stanfit object as a list of arrays for parameters of interest, or just an array. In addition, S3 functions as.array and as.matrix are defined for stanfit object (using help(\"as.array.stanfit\") to check out the help document in R).\n\n\n\uff08\u5b9f\u884c\u7d50\u679c\u3092\u8868\u793a\u3055\u305b\u308b\uff09\n\nRStudio\nprint(fit2)\n\n\n\n\uff08\u5b9f\u884c\u7d50\u679c\uff09\n\nRStudio\nInference for Stan model: 8schools.\n4 chains, each with iter=10000; warmup=5000; thin=1; \npost-warmup draws per chain=5000, total post-warmup draws=20000.\n\n          mean se_mean   sd   2.5%   25%   50%   75% 97.5% n_eff Rhat\nmu        8.01    0.07 5.09  -1.84  4.67  7.96 11.25 18.27  5540    1\ntau       6.60    0.08 5.49   0.25  2.49  5.34  9.21 20.77  5017    1\neta[1]    0.38    0.01 0.94  -1.52 -0.22  0.40  1.02  2.20 10731    1\neta[2]    0.00    0.01 0.87  -1.72 -0.57  0.00  0.56  1.72 12225    1\neta[3]   -0.21    0.01 0.93  -2.03 -0.82 -0.21  0.40  1.67 13288    1\neta[4]   -0.04    0.01 0.89  -1.81 -0.62 -0.05  0.54  1.74 12446    1\neta[5]   -0.37    0.01 0.87  -2.06 -0.94 -0.39  0.19  1.45 11499    1\neta[6]   -0.21    0.01 0.89  -1.95 -0.80 -0.22  0.36  1.56 13001    1\neta[7]    0.33    0.01 0.90  -1.49 -0.25  0.35  0.93  2.08 11393    1\neta[8]    0.06    0.01 0.94  -1.83 -0.56  0.07  0.69  1.88 12202    1\ntheta[1] 11.47    0.09 8.41  -1.91  5.94 10.22 15.58 31.76  7993    1\ntheta[2]  7.94    0.05 6.25  -4.74  4.05  7.87 11.87 20.34 15143    1\ntheta[3]  6.12    0.08 7.76 -11.40  2.10  6.66 10.84 20.37 10693    1\ntheta[4]  7.69    0.05 6.58  -5.52  3.65  7.75 11.74 21.02 14920    1\ntheta[5]  5.09    0.05 6.34  -8.95  1.28  5.56  9.36 16.38 13846    1\ntheta[6]  6.20    0.06 6.73  -8.44  2.29  6.54 10.46 18.81 13474    1\ntheta[7] 10.74    0.06 6.83  -1.07  6.12 10.13 14.72 26.12 11121    1\ntheta[8]  8.57    0.07 7.99  -6.97  3.92  8.26 12.89 25.89 11535    1\nlp__     -4.87    0.04 2.66 -10.82 -6.46 -4.61 -3.01 -0.39  5191    1\n\nSamples were drawn using NUTS(diag_e) at Mon Jun 30 16:40:45 2014.\nFor each parameter, n_eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor on split chains (at \nconvergence, Rhat=1).\n\n\n\n\uff08\u5b9f\u884c\u7d50\u679c\u306e\u63cf\u753b\uff09\n\nRStudio\nplot(fit2)\n\n\n\n\n\uff08\u4ee5\u4e0b\u3092\u5b9f\u884c\uff09\n\nRStudio\nprint(fit, digits = 1)\n\n\n\n\uff08\u5b9f\u884c\u7d50\u679c\uff09\n\nRStudio\nInference for Stan model: schools_code.\n4 chains, each with iter=1000; warmup=500; thin=1; \npost-warmup draws per chain=500, total post-warmup draws=2000.\n\n         mean se_mean  sd  2.5%  25%  50%  75% 97.5% n_eff Rhat\nmu        8.0     0.2 4.9  -1.2  4.8  7.8 11.1  17.8   904    1\ntau       6.1     0.2 4.9   0.2  2.4  5.1  8.7  18.7   625    1\neta[1]    0.4     0.0 0.9  -1.4 -0.2  0.4  1.0   2.2  1263    1\neta[2]    0.0     0.0 0.9  -1.8 -0.6  0.0  0.6   1.7  1426    1\neta[3]   -0.2     0.0 0.9  -2.0 -0.8 -0.2  0.4   1.6  1351    1\neta[4]    0.0     0.0 0.9  -1.8 -0.6  0.0  0.5   1.8  1506    1\neta[5]   -0.3     0.0 0.9  -2.1 -0.9 -0.4  0.2   1.4  1442    1\neta[6]   -0.2     0.0 0.9  -2.0 -0.8 -0.3  0.4   1.7  1578    1\neta[7]    0.3     0.0 0.9  -1.4 -0.2  0.4  0.9   1.9  1421    1\neta[8]    0.1     0.0 0.9  -1.9 -0.6  0.0  0.7   1.8  1525    1\ntheta[1] 11.3     0.2 7.9  -1.6  6.1 10.3 15.3  31.0  1364    1\ntheta[2]  7.9     0.1 6.2  -3.7  3.8  7.8 11.8  20.7  1932    1\ntheta[3]  6.1     0.2 7.5 -10.9  2.1  6.5 10.6  20.0  1365    1\ntheta[4]  7.5     0.2 6.4  -4.8  3.5  7.5 11.4  21.3  1645    1\ntheta[5]  5.4     0.2 6.1  -7.7  1.8  5.9  9.3  16.6  1545    1\ntheta[6]  6.4     0.2 6.5  -7.6  2.5  6.6 10.3  18.9  1597    1\ntheta[7] 10.5     0.2 6.8  -1.3  6.0  9.8 14.3  25.1  1487    1\ntheta[8]  8.6     0.2 7.5  -5.5  4.1  8.4 12.7  24.1  1230    1\nlp__     -5.0     0.1 2.5 -10.8 -6.4 -4.7 -3.2  -0.5   566    1\n\nSamples were drawn using NUTS(diag_e) at Mon Jun 30 16:36:51 2014.\nFor each parameter, n_eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor on split chains (at \nconvergence, Rhat=1).\n\n\n\n\uff08 RStan \u306f\u3001\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u305f\uff01\uff09  \u3000\n\n\u3010\u5099\u8003: \uff08\u53c2\u8003\uff09 MCMC Sampler RStan \u3092\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u89e3\u6790\u3011\n\n\u203b Stan \u30d5\u30a1\u30a4\u30eb\u306e\u8a18\u8ff0\u6587\u6cd5\u3084\u3001 R \u304b\u3089 RStan \u7d4c\u7531\u3067 Stan \u3092\u52d5\u304b\u3057\u3066\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u5206\u6790\u3092\u884c\u3063\u305f\u4e8b\u4f8b\u306f\u3001\u4e0b\u8a18\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\n\n \uff08\u30ea\u30f3\u30af\uff09\u9280\u5ea7\u3067\u50cd\u304f\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u306e\u30d6\u30ed\u30b0 \u300cMCMC\u306e\u8a08\u7b97\u306bStan\u3092\u4f7f\u3063\u3066\u307f\u305f\uff08\u8d85\u57fa\u790e\u30fb\u5c0e\u5165\u7de8\uff09\u300d\n\n\n\n\n\n\n# \u3010 _PC_ \u74b0\u5883 \u3011\n\n### \u30fb _OS_ : _Windows 7 (64-bit)_\n### \u30fb  _R_  : _version 3.1.0_\n\n# 1. _RStudio_ \u3068 _R_ \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u3092\u3001\u30d1\u30b9\u540d\u306b\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30d5\u30a9\u30eb\u30c0\u306b\u79fb\u52d5\n###\u3000\u2192 \u300cRStudio\\bin\u300d\u3092C\u30c9\u30e9\u30a4\u30d6\u76f4\u4e0b\u306b\u79fb\u52d5\u3057\u305f\n\n# 2. _{Rtools}_ \u30d1\u30c3\u30b1\u30fc\u30b8\u3092 _R_ \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n##  http://cran.r-project.org/bin/windows/Rtools/ \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n### \u203b \u4eca\u56de\u306f\u3001 _Rtools31.exe_ \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3002\n#### \uff08\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3092\u898b\u3066\u3001\u81ea\u5206\u304c\u3044\u307e\u4f7f\u7528\u3057\u3066\u3044\u308b _R_ \u306e _version_ \u306b\u9069\u5408\u3059\u308b\u3082\u306e\u3092\u9078\u3076\uff09\n![Rtools.download.site.png](https://qiita-image-store.s3.amazonaws.com/0/43487/70f4d8fd-4d0e-ad2e-f37c-45822ad6bb4a.png)\n\n##  2-1. _Rtools31.exe_ \u30d5\u30a1\u30a4\u30eb\u3092\u3001 _C_ \u30c9\u30e9\u30a4\u30d6\u76f4\u4e0b\u306b\u79fb\u52d5\n##  2-2.\u4ee5\u4e0b\u3092\u74b0\u5883\u5909\u6570  _Path_ \u3092\u3001\u30d1\u30b9\u306e\u5148\u982d\u306b\u8a18\u8ff0\u3000\u203b\u30d1\u30b9\u306e\u5148\u982d\u306b\u3059\u308b\n#### \u203b \u2462\u306f\u3001 \u304a\u4f7f\u3044\u306e _R_ \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u5408\u308f\u305b\u305f\u30d1\u30b9\u540d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044 \n       \u2460 C:\\Rtools\\bin\n       \u2461 C:\\Rtools\\gcc-4.6.3\\bin\n       \u2462 C:\\Program Files\\R\\R-3.1.0\\bin\n       \u2463 C:\\RStudio\\bin\n       \u2464 C:\\Windows\\system32;\n\n![environment.var.setting.png](https://qiita-image-store.s3.amazonaws.com/0/43487/890bc579-0c40-a22e-303d-7b72122f5feb.png)\n\n\n##  2-3.  _Rtools_ \u306e\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\n###\uff08\u53c2\u8003\uff09[ _\uff08\u30ea\u30f3\u30af\u5148\uff09Rtools \u516c\u5f0f\u30da\u30fc\u30b8_ \u5185\u306e\"Check if Rtools can be used in R\"\u9805\u76ee ](https://github.com/stan-dev/rstan/wiki/Install-Rtools-for-Windows) \n\n![Rtools.official.site.png](https://qiita-image-store.s3.amazonaws.com/0/43487/0f17fe24-6fd7-eab8-dba0-346f63c17e07.png)\n\n![Rtools.official.site.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/d3781ba3-f8c9-eb9c-6cf2-95e66d1053b0.png)\n\n#### \u203b _R_ \u306e _Sys.getenv()_ \u95a2\u6570\u3067\u3001 _R_ \u306e\u4e2d\u304b\u3089\u3001 _Windows OS_ \u306e\u74b0\u5883\u5909\u6570 \u8a2d\u5b9a\u60c5\u5831\u3092\u8868\u793a\u3055\u305b\u308b\n```{r:RStudio} \nSys.getenv('PATH')\n```\n   \n#### \u203b _Rtools\\\\bin_ \u3068\u3001 _Rtools\\\\gcc-4.6.3\\\\bin_ \u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\n#### \uff08\u4ee5\u4e0b\u306e\u5b9f\u884c\u7d50\u679c\u306f\u3001\u81ea\u5206\u304c\u4f7f\u7528\u4e2d\u306e _PC_ \u306e\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u5185\u5bb9\u306b\u3088\u3063\u3066\u5909\u308f\u308b\uff09\n```{r:RStudio} \n   [1] \"C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin\\\\x64;C:\\\\Rtools\\\\bin;C:\\\\Rtools\\\\gcc-4.6.3\\\\bin;C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin;C:\\\\RStudio\\\\bin;C:\\\\Windows\\\\system32;C:\\\\Program Files\\\\Java\\\\jdk1.7.0_51\\\\bin;C:\\\\apache-maven-3.2.1\\\\bin;c:\\\\usr\\\\local\\\\bin;c:\\\\gs\\\\gs7.07\\\\bin;\\\\c:\\\\gs\\\\gs7.07\\\\lib;c:\\\\dviout;C:C:\\\\Program Files (x86)\\\\MeCab\\\\bin;C:\\\\Program Files (x86)\\\\MeCab;C:\\\\Python34;C:\\\\Python34\\\\Scripts;C:\\\\Rtools\\\\bin;C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin;C:\\\\julia-e44b593905\\\\bin;C:\\\\Rtools\\\\bin;C:\\\\Rtools\\\\gcc-4.6.3\\\\bin;C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin;C:\\\\RStudio\\\\bin;C:\\\\Windows\\\\system32;C:\\\\Program Files\\\\Java\\\\jdk1.7.0_51\\\\bin;C:\\\\apache-maven-3.2.1\\\\bin;c:\\\\usr\\\\local\\\\bin;c:\\\\gs\\\\gs7.07\\\\bin;\\\\c:\\\\gs\\\\gs7.07\\\\lib;c:\\\\dviout;C:C:\\\\Program Files (x86)\\\\MeCab\\\\bin;C:\\\\Program Files (x86)\\\\MeCab;C:\\\\Python34;C:\\\\Python34\\\\Scripts;C:\\\\Rtools\\\\bin;C:\\\\Program Files\\\\R\\\\R-3.1.0\\\\bin;C:\\\\julia-e44b593905\\\\bin;\"\n```\n\n#### \u7d9a\u3051\u3066\u3001 _C++_ \u306e\u30b3\u30f3\u30d1\u30a4\u30e9 _g++_ \u304c _Windows_ \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u547c\u3073\u51fa\u305b\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\n#### \u203b _R_ \u306e _system()_ \u95a2\u6570\u3067\u3001 _R_ \u306e\u4e2d\u304b\u3089\u3001 _Windows OS_ \u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u547d\u4ee4\u6307\u793a\n```{r:RStudio} \nsystem('g++ -v')\n```\n\n#### \u8a8d\u8b58\u3055\u308c\u305f _g++_ \u306e\u60c5\u5831\u304c\u8868\u793a\u3055\u308c\u305f\u3002\u672b\u5c3e\u306b\u3001 _gcc version 4.6.3_ \u3068\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u304c\u8868\u793a\n```{r:RStudio} \nUsing built-in specs.\nCOLLECT_GCC=C:\\Rtools\\GCC-46~1.3\\bin\\G__~1.EXE\nCOLLECT_LTO_WRAPPER=c:/rtools/gcc-46~1.3/bin/../libexec/gcc/i686-w64-mingw32/4.6.3/lto-wrapper.exe\nTarget: i686-w64-mingw32\nConfigured with: /data/gannet/ripley/Sources/mingw-test3/src/gcc/configure --host=i686-w64-mingw32 --build=x86_64-linux-gnu --target=i686-w64-mingw32 --with-sysroot=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/mingw32 --prefix=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/mingw32 --with-gmp=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/prereq_install --with-mpfr=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/prereq_install --with-mpc=/data/gannet/ripley/Sources/mingw-test3/mingw32mingw32/prereq_install --disable-shared --enable-static --enable-targets=all --enable-languages=c,c++,fortran --enable-libgomp --enable-sjlj-exceptions --enable-fully-dynamic-string --disable-nls --disable-werror --enable-checking=release --disable-win32-registry --disable-rpath --disable-werror CFLAGS='-O2 -mtune=core2 -fomit-frame-pointer' LDFLAGS=\nThread model: win32\ngcc version 4.6.3 20111208 (prerelease) (GCC) \n```\n\n# \u3010 _Rtools_ \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306f\u7121\u4e8b\u306b\u5b8c\u4e86\u3000\u3011\n\n# 3.\u3010 \u6b21\u306b\u3001 _R_ \u306e\u30d1\u30c3\u30b1\u30fc\u30b8 _{inline}_ \u3068 _{Rcpp}_ \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3011 \n### 3-1. _R_ \u3092\u7acb\u3061\u4e0a\u3052\u3066\u3001 _R_ \u306e\u30d1\u30c3\u30b1\u30fc\u30b8 _{inline}_ \u3068 _{Rcpp}_ \u3092 _install.pacakges()_ \u3067\u8aad\u307f\u8fbc\u307f\u5f8c\u3001 _library()_ \u3067\u30e1\u30e2\u30ea\u306b\u8aad\u307f\u8fbc\u3080\n\n```{r:RStudio} \ninstall.packages(\"inline\")\ninstall.packages(\"Rcpp\")\n\nlibrary(Rcpp)\nlibrary(inline)\n```\n\n# 4.\u3010\u3000\u7d9a\u3044\u3066\u3001 _{RStan}_ \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3011\n###\uff08\u53c2\u8003\uff09[ _\uff08\u30ea\u30f3\u30af\u5148\uff09RStan github\u30da\u30fc\u30b8_ ](https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started#how-to-install-rstan)\n![RStan.install.site.png](https://qiita-image-store.s3.amazonaws.com/0/43487/b6c77ad9-db44-9a94-3684-e95a031adffb.png)\n\n### \u203b \u4e0a\u8a18\u306e \u6e96\u5099\u5de5\u7a0b _Prerequistics_ \u306e\u9805\u76ee\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u4e0b\u8a18\u306f\u3001\u3059\u3067\u306b\u5c0e\u5165\u6e08\u307f\n#### \uff08\u74b0\u5883\u5909\u6570 _PATH_ \u306e\u8a2d\u5b9a\u3082\u7d42\u308f\u3063\u3066\u3044\u308b\uff09\n- _R_ \u672c\u4f53\n- _Rtools_  \n\n### \u4ee5\u4e0b\u306e\u8a18\u8f09\u6307\u793a\u306b\u5f93\u3044\u3001 _RStan_ \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n![RStan.install.site.3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/fe6b8a3b-5f50-8145-a25c-ad7dd6d55ae5.png)\n\n\n#### _RStudio_ \u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3001\u4e0b\u8a18\u3092\u5165\u529b\u3057\u3066\u5b9f\u884c\n```{r:RStudio} \nSys.setenv(MAKEFLAGS = \"-j4\") \n \nsource('http://mc-stan.org/rstan/install.R', echo = TRUE, max.deparse.length = 2000)\n\ninstall_rstan() \n```\n\n#### \u203b\u9577\u3044\u8868\u793a\u304c\u7d9a\u3044\u305f\u5f8c\u3001\u4ee5\u4e0b\u304c\u672b\u5c3e\u306b\u8868\u793a\u3055\u308c\u308b\u3002\n```{r:RStudio} \n g++ -m64 -I\"C:/PROGRA~1/R/R-31~1.0/include\" -DNDEBUG -I\"../inst/include/stansrc\"   -I\"../inst/include/stanlib/eigen_3.2.0\"  -I\"../inst/include/stanlib/eigen_3.2.0/unsupported\"  -I\"../inst/include/stanlib/boost_1.54.0\" -I\"../inst/include\"  -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS   -I\"c:/usr/local/home/R/win-library/3.1/Rcpp/include\" -I\"d:/RCompile/CRANpkg/extralibs64/local/include\"     -O3  -c gm__grammars__whitespace_grammar_inst.cpp -o gm__grammars__whitespace_grammar_inst.o\ng++ -m64 -I\"C:/PROGRA~1/R/R-31~1.0/include\" -DNDEBUG -I\"../inst/include/stansrc\"   -I\"../inst/include/stanlib/eigen_3.2.0\"  -I\"../inst/include/stanlib/eigen_3.2.0/unsupported\"  -I\"../inst/include/stanlib/boost_1.54.0\" -I\"../inst/include\"  -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS   -I\"c:/usr/local/home/R/win-library/3.1/Rcpp/include\" -I\"d:/RCompile/CRANpkg/extralibs64/local/include\"     -O3  -c agrad__rev__var_stack.cpp -o agrad__rev__var_stack.o\nar qc libstan.a agrad__rev__var_stack.o \n# -@if test ! -e ../inst/libstan/x64; then mkdir -p ../inst/libstan/x64; fi\n# cp libstan.a ../inst/libstan/x64\n# rm libstan.a \ng++ -m64 -shared -s -static-libgcc -o rstan.dll tmp.def stanc.o chains.o misc.o init.o gm__ast_def.o gm__grammars__bare_type_grammar_inst.o gm__grammars__expression07_grammar_inst.o gm__grammars__expression_grammar_inst.o gm__grammars__functions_grammar_inst.o gm__grammars__program_grammar_inst.o gm__grammars__statement_2_grammar_inst.o gm__grammars__statement_grammar_inst.o gm__grammars__term_grammar_inst.o gm__grammars__var_deccls_grammar_inst.o gm__grammars__whitespace_grammar_inst.o -Ld:/RCompile/CRANpkg/extralibs64/local/lib/x64 -Ld:/RCompile/CRANpkg/extralibs64/local/lib -LC:/PROGRA~1/R/R-31~1.0/bin/x64 -lR\ninstalling via 'install.libs.R' to c:/usr/local/home/R/win-library/3.1/rstan\ninstalling rstan libs to c:/usr/local/home/R/win-library/3.1/rstan/libs/x64\ninstalling libstan.a to c:/usr/local/home/R/win-library/3.1/rstan/libstan/x64\n** R\n** inst\n** preparing package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** installing vignettes\n** testing if installed package can be loaded\n* DONE (rstan)\n\nThe downloaded source packages are in\n\t\u2018C:\\Users\\HirofumiYashima\\AppData\\Local\\Temp\\Rtmpo59GaD\\downloaded_packages\u2019\nrstan (Version 2.3.0, packaged: 2014-06-23 19:44:07 UTC, GitRev: 5dd1fe5a323a)\nmode fast without NDEBUG for compiling C++ code has been set already\n```\n\n#### _{RStan}_ \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001 _R_ \u306e\u30e1\u30e2\u30ea\u306b\u8aad\u307f\u8fbc\u3080\n```{r:RStudio} \nlibrary(rstan) \n```\n\n#### \uff08\u5b9f\u884c\u7d50\u679c\uff09\n```{r:RStudio} \nrstan (Version 2.3.0, packaged: 2014-06-23 19:44:07 UTC, GitRev: 5dd1fe5a323a)\n```\n\n# 5.  _Rstan_ \u3092\u4f7f\u3063\u3066\u307f\u308b\n\n###\uff08\u53c2\u8003\uff09[ _\uff08\u30ea\u30f3\u30af\u5148\uff09RStan github\u30da\u30fc\u30b8\u5185 \"Example 1: Eight Schools\"\u9805\u76ee_ ](https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started#how-to-install-rstan)\n\n![RStan.install.site.4.examples.png](https://qiita-image-store.s3.amazonaws.com/0/43487/73cba4fe-16d5-7b89-25d0-2fdd7550d997.png)\n\n#### \u4ee5\u4e0b\u3092\u3001R (or RStudio)\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u5165\u529b\n\n\u2460\n\n```{r:RStudio} \nschools_code <- '\n  data {\n    int<lower=0> J; // number of schools \n    real y[J]; // estimated treatment effects\n    real<lower=0> sigma[J]; // s.e. of effect estimates \n  }\n  parameters {\n    real mu; \n    real<lower=0> tau;\n    real eta[J];\n  }\n  transformed parameters {\n    real theta[J];\n    for (j in 1:J)\n      theta[j] <- mu + tau * eta[j];\n  }\n  model {\n    eta ~ normal(0, 1);\n    y ~ normal(theta, sigma);\n  }\n'\n```\n\n\u2461\n\n```{r:RStudio} \n\nschools_dat <- list(J = 8, \n                    y = c(28,  8, -3,  7, -1,  1, 18, 12),\n                    sigma = c(15, 10, 16, 11,  9, 11, 10, 18))\n```\n\n\u2462\n\n```{r:RStudio} \nfit <- stan(model_code = schools_code, data = schools_dat, \n            iter = 1000, chains = 4)\n```\n\n###\u3010\u5b9f\u884c\u7d50\u679c\u3011\n\n#### \uff08\u4ee5\u4e0b\u304c\u8868\u793a\u3055\u308c\u305f\u3042\u3068\u3001\u6570\u5341\u79d2 \u5f85\u3064\uff09\n\n```{r:RStudio} \nTRANSLATING MODEL 'schools_code' FROM Stan CODE TO C++ CODE NOW.\nCOMPILING THE C++ CODE FOR MODEL 'schools_code' NOW.\n```\n\n#### \uff08\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u5b9f\u884c\u904e\u7a0b\u304c\u8868\u793a\u3055\u308c\u308b\uff09\n\n```{r:RStudio} \ncygwin warning:\n  MS-DOS style path detected: C:/PROGRA~1/R/R-31~1.0/etc/x64/Makeconf\n  Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-31~1.0/etc/x64/Makeconf\n  CYGWIN environment variable option \"nodosfilewarning\" turns off this warning.\n  Consult the user's guide for more details about POSIX paths:\n    http://cygwin.com/cygwin-ug-net/using.html#using-pathnames\nc:/usr/local/home/R/win-library/3.1/rstan/include//stansrc/stan/agrad/rev/var_stack.hpp:49:17: warning: 'void stan::agrad::free_memory()' defined but not used [-Wunused-function]\n\nSAMPLING FOR MODEL 'schools_code' NOW (CHAIN 1).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.016 seconds (Warm-up)\n#                0.016 seconds (Sampling)\n#                0.032 seconds (Total)\n\n\nSAMPLING FOR MODEL 'schools_code' NOW (CHAIN 2).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.015 seconds (Warm-up)\n#                0.013 seconds (Sampling)\n#                0.028 seconds (Total)\n\n\nSAMPLING FOR MODEL 'schools_code' NOW (CHAIN 3).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.015 seconds (Warm-up)\n#                0.012 seconds (Sampling)\n#                0.027 seconds (Total)\n\n\nSAMPLING FOR MODEL 'schools_code' NOW (CHAIN 4).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.017 seconds (Warm-up)\n#                0.011 seconds (Sampling)\n#                0.028 seconds (Total)\n\n> \n```\n\n#### \u5b9f\u884c\u7d50\u679c\u3092\u8868\u793a\u3055\u305b\u308b\n\n```{r:RStudio} \nprint(fit);\n```\n\n#### \u5b9f\u884c\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u305f\n```{r:RStudio} \nInference for Stan model: schools_code.\n4 chains, each with iter=1000; warmup=500; thin=1; \npost-warmup draws per chain=500, total post-warmup draws=2000.\n\n          mean se_mean   sd   2.5%   25%   50%   75% 97.5% n_eff Rhat\nmu        8.00    0.16 4.88  -1.24  4.81  7.84 11.11 17.77   904 1.00\ntau       6.14    0.20 4.93   0.19  2.37  5.10  8.69 18.71   625 1.01\neta[1]    0.41    0.03 0.94  -1.42 -0.22  0.39  1.05  2.24  1263 1.00\neta[2]   -0.02    0.02 0.90  -1.79 -0.63 -0.02  0.60  1.71  1426 1.00\neta[3]   -0.21    0.02 0.90  -1.98 -0.80 -0.24  0.39  1.62  1351 1.00\neta[4]   -0.03    0.02 0.90  -1.78 -0.63 -0.05  0.54  1.75  1506 1.00\neta[5]   -0.34    0.02 0.87  -2.05 -0.93 -0.37  0.24  1.39  1442 1.00\neta[6]   -0.20    0.02 0.95  -1.98 -0.81 -0.27  0.43  1.71  1578 1.00\neta[7]    0.33    0.02 0.86  -1.41 -0.22  0.35  0.91  1.92  1421 1.00\neta[8]    0.05    0.02 0.93  -1.86 -0.57  0.04  0.69  1.84  1525 1.00\ntheta[1] 11.28    0.21 7.92  -1.58  6.11 10.25 15.30 31.04  1364 1.00\ntheta[2]  7.88    0.14 6.25  -3.70  3.83  7.84 11.84 20.74  1932 1.00\ntheta[3]  6.13    0.20 7.50 -10.91  2.12  6.48 10.64 19.97  1365 1.00\ntheta[4]  7.55    0.16 6.45  -4.76  3.53  7.47 11.44 21.30  1645 1.00\ntheta[5]  5.41    0.15 6.07  -7.74  1.77  5.94  9.32 16.60  1545 1.00\ntheta[6]  6.35    0.16 6.49  -7.57  2.49  6.63 10.32 18.90  1597 1.00\ntheta[7] 10.47    0.18 6.77  -1.28  6.02  9.81 14.31 25.08  1487 1.00\ntheta[8]  8.57    0.21 7.47  -5.54  4.12  8.37 12.67 24.10  1230 1.00\nlp__     -4.95    0.11 2.53 -10.76 -6.45 -4.72 -3.23 -0.51   566 1.01\n\nSamples were drawn using NUTS(diag_e) at Mon Jun 30 16:36:51 2014.\nFor each parameter, n_eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor on split chains (at \nconvergence, Rhat=1).\n```\n\n### \u6b21\u306b\u3001\u4ee5\u4e0b\u306e\u4f8b\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\uff08\u203b\u4e0a\u8a18\u3001RStan \u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3088\u308a\uff09\n\n![RStan.install.site.5.examples.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/2affca19-3ce3-d87b-097a-567b73e94ba6.png)\n\n\n> In RStan, we can also specify the Stan model using a file. For example, we can download 8schools.stan file to our working directory and use the following usage of function stan instead.\n\n### \u203b \u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089\u3001 _8schools.stan_ \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u4ee5\u4e0b\u3092\u5b9f\u884c\n### \u203b \u5148\u307b\u3069\u3001 _schools_code_ \u5909\u6570\u306b\u683c\u7d0d\u3057\u3066\u3044\u305f _Stan_ \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u3001\u5916\u90e8\u30d5\u30a1\u30a4\u30eb \uff08\u30d5\u30a1\u30a4\u30eb\u540d  _8schools.stan_ \uff09\u306b\u4fdd\u5b58\u3057\u3066\u3001 _R_ \u304b\u3089\u547c\u3073\u51fa\u3059\u65b9\u5f0f\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\n \n#####  _8schools.stan_ \u306e\u9752\u6587\u5b57\u306b\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u5408\u308f\u305b\u3066\u4ee5\u4e0b\u3092\u5b9f\u884c\n#####  \u30de\u30a6\u30b9\u53f3\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u2192\u300c\u540d\u524d\u3092\u3064\u3051\u3066\u30ea\u30f3\u30af\u5148\u3092\u4fdd\u5b58\u300d\u3092\u30af\u30ea\u30c3\u30af\u3000\n##### \u203b\u3059\u308b\u3068\u3001\u4fdd\u5b58\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u753b\u9762\u304c\u958b\u304f\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u7a2e\u985e\u306f\u3001\u81ea\u52d5\u7684\u306b\u300cSTAN\u30d5\u30a1\u30a4\u30eb(.stan)\u300d\u306b\u306a\u3063\u3066\u3044\u308b\n\n##### \u203b setwd()\u3067\u3001\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u306e\u683c\u7d0d\u5148\u30d5\u30a9\u30eb\u30c0\u306b\u3001R\u306e\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3092\u3042\u308f\u305b\u308b\n##### \u21d2 list.files()\u3067\u3001\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u304c\u8868\u793a\u3055\u308c\u308b\u304b\u78ba\u8a8d\n \n\n### \u4e0b\u8a18\u3092\u5b9f\u884c\n\n```{r:RStudio} \nfit1 <- stan(file = '8schools.stan', data = schools_dat, \n             iter = 1000, chains = 4)\n```\n\n### \uff08\u5b9f\u884c\u904e\u7a0b\u306e\u8868\u793a\uff09\n\n```{r:RStudio} \nTRANSLATING MODEL '8schools' FROM Stan CODE TO C++ CODE NOW.\nCOMPILING THE C++ CODE FOR MODEL '8schools' NOW.\ncygwin warning:\n  MS-DOS style path detected: C:/PROGRA~1/R/R-31~1.0/etc/x64/Makeconf\n  Preferred POSIX equivalent is: /cygdrive/c/PROGRA~1/R/R-31~1.0/etc/x64/Makeconf\n  CYGWIN environment variable option \"nodosfilewarning\" turns off this warning.\n  Consult the user's guide for more details about POSIX paths:\n    http://cygwin.com/cygwin-ug-net/using.html#using-pathnames\nc:/usr/local/home/R/win-library/3.1/rstan/include//stansrc/stan/agrad/rev/var_stack.hpp:49:17: warning: 'void stan::agrad::free_memory()' defined but not used [-Wunused-function]\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 1).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.017 seconds (Warm-up)\n#                0.012 seconds (Sampling)\n#                0.029 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 2).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.019 seconds (Warm-up)\n#                0.015 seconds (Sampling)\n#                0.034 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 3).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.015 seconds (Warm-up)\n#                0.014 seconds (Sampling)\n#                0.029 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 4).\n\nIteration:   1 / 1000 [  0%]  (Warmup)\nIteration: 100 / 1000 [ 10%]  (Warmup)\nIteration: 200 / 1000 [ 20%]  (Warmup)\nIteration: 300 / 1000 [ 30%]  (Warmup)\nIteration: 400 / 1000 [ 40%]  (Warmup)\nIteration: 500 / 1000 [ 50%]  (Warmup)\nIteration: 501 / 1000 [ 50%]  (Sampling)\nIteration: 600 / 1000 [ 60%]  (Sampling)\nIteration: 700 / 1000 [ 70%]  (Sampling)\nIteration: 800 / 1000 [ 80%]  (Sampling)\nIteration: 900 / 1000 [ 90%]  (Sampling)\nIteration: 1000 / 1000 [100%]  (Sampling)\n#  Elapsed Time: 0.018 seconds (Warm-up)\n#                0.019 seconds (Sampling)\n#                0.037 seconds (Total)\n```\n\n### \uff08\u5b9f\u884c\u304c\u5b8c\u4e86\u3057\u305f\uff09\n### \uff08\u5b9f\u884c\u7d50\u679c\u3092\u8868\u793a\uff09\n\n```{r:RStudio} \nprint(fit1);\n```\n\n### \uff08\u5b9f\u884c\u7d50\u679c\uff09\n```{r:RStudio} \nInference for Stan model: 8schools.\n4 chains, each with iter=1000; warmup=500; thin=1; \npost-warmup draws per chain=500, total post-warmup draws=2000.\n\n          mean se_mean   sd   2.5%   25%   50%   75% 97.5% n_eff Rhat\nmu        7.95    0.23 4.98  -1.61  4.79  7.86 11.10 17.83   455 1.01\ntau       6.48    0.32 5.76   0.27  2.34  5.05  8.85 19.88   328 1.01\neta[1]    0.38    0.03 0.97  -1.61 -0.25  0.39  1.04  2.24  1152 1.00\neta[2]    0.00    0.03 0.87  -1.67 -0.57 -0.02  0.58  1.77   923 1.00\neta[3]   -0.21    0.03 0.93  -2.01 -0.85 -0.22  0.41  1.69  1313 1.00\neta[4]   -0.03    0.02 0.90  -1.87 -0.62 -0.01  0.58  1.72  1462 1.00\neta[5]   -0.31    0.02 0.88  -1.92 -0.87 -0.34  0.22  1.54  1413 1.00\neta[6]   -0.18    0.02 0.87  -1.83 -0.77 -0.22  0.39  1.61  1456 1.00\neta[7]    0.35    0.03 0.90  -1.53 -0.24  0.38  0.95  2.05   991 1.00\neta[8]    0.05    0.03 1.00  -1.97 -0.62  0.06  0.72  1.97  1294 1.00\ntheta[1] 11.67    0.60 9.86  -2.52  5.90 10.09 15.47 33.96   274 1.01\ntheta[2]  7.93    0.16 6.16  -4.79  4.12  7.89 11.79 20.70  1487 1.00\ntheta[3]  6.01    0.22 7.63 -11.99  2.31  6.67 10.80 19.12  1186 1.00\ntheta[4]  7.63    0.16 6.48  -5.90  3.77  7.60 11.51 20.95  1555 1.00\ntheta[5]  5.23    0.15 6.19  -7.87  1.53  5.63  9.15 16.14  1618 1.00\ntheta[6]  6.27    0.18 6.68  -7.36  2.37  6.49 10.64 18.57  1418 1.00\ntheta[7] 10.75    0.19 6.80  -0.36  6.27  9.93 14.67 25.67  1305 1.00\ntheta[8]  8.35    0.22 7.87  -6.52  3.94  7.84 12.36 26.45  1240 1.00\nlp__     -4.98    0.10 2.57 -10.64 -6.56 -4.72 -3.13 -0.75   693 1.00\n\nSamples were drawn using NUTS(diag_e) at Mon Jun 30 16:37:52 2014.\nFor each parameter, n_eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor on split chains (at \nconvergence, Rhat=1).\n```\n\n### \uff08\u518d\u3073\u3001\u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306b\u623b\u308b\uff09\n![RStan.install.site.5.examples.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/2affca19-3ce3-d87b-097a-567b73e94ba6.png)\n\n\n> Once a model is fitted, we can use the fitted result as an input to fit the model with other data or settings. This would save us time of compiling the C++ code for the model. By specifying parameter fit for function stan, we can fit the model again. For example, if we want to sample more iterations, we can proceed as follows.\n\n> fit2 <- stan(fit = fit1, data = schools_dat, iter = 10000, chains = 4)\n\n\n\u4e0a\u8a18\u306e\u8a18\u8ff0\u306b\u5f93\u3044\u3001\n\u3055\u304d\u307b\u3069\u3001\u751f\u6210\u3057\u305f\u30e2\u30c7\u30eb\u300cfit1\u300d\u3092\u5165\u529b\u5f15\u6570\u306b\u3057\u3066\u3001\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\n\n```{r:RStudio} \nfit2 <- stan(fit = fit1, data = schools_dat, iter = 10000, chains = 4)\n```\n\n#### \uff08\u5b9f\u884c\u904e\u7a0b\uff09\n```{r:RStudio} \nSAMPLING FOR MODEL '8schools' NOW (CHAIN 1).\n\nIteration:    1 / 10000 [  0%]  (Warmup)\nIteration: 1000 / 10000 [ 10%]  (Warmup)\nIteration: 2000 / 10000 [ 20%]  (Warmup)\nIteration: 3000 / 10000 [ 30%]  (Warmup)\nIteration: 4000 / 10000 [ 40%]  (Warmup)\nIteration: 5000 / 10000 [ 50%]  (Warmup)\nIteration: 5001 / 10000 [ 50%]  (Sampling)\nIteration: 6000 / 10000 [ 60%]  (Sampling)\nIteration: 7000 / 10000 [ 70%]  (Sampling)\nIteration: 8000 / 10000 [ 80%]  (Sampling)\nIteration: 9000 / 10000 [ 90%]  (Sampling)\nIteration: 10000 / 10000 [100%]  (Sampling)\n#  Elapsed Time: 0.162 seconds (Warm-up)\n#                0.14 seconds (Sampling)\n#                0.302 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 2).\n\nIteration:    1 / 10000 [  0%]  (Warmup)\nIteration: 1000 / 10000 [ 10%]  (Warmup)\nIteration: 2000 / 10000 [ 20%]  (Warmup)\nIteration: 3000 / 10000 [ 30%]  (Warmup)\nIteration: 4000 / 10000 [ 40%]  (Warmup)\nIteration: 5000 / 10000 [ 50%]  (Warmup)\nIteration: 5001 / 10000 [ 50%]  (Sampling)\nIteration: 6000 / 10000 [ 60%]  (Sampling)\nIteration: 7000 / 10000 [ 70%]  (Sampling)\nIteration: 8000 / 10000 [ 80%]  (Sampling)\nIteration: 9000 / 10000 [ 90%]  (Sampling)\nIteration: 10000 / 10000 [100%]  (Sampling)\n#  Elapsed Time: 0.132 seconds (Warm-up)\n#                0.141 seconds (Sampling)\n#                0.273 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 3).\n\nIteration:    1 / 10000 [  0%]  (Warmup)\nIteration: 1000 / 10000 [ 10%]  (Warmup)\nIteration: 2000 / 10000 [ 20%]  (Warmup)\nIteration: 3000 / 10000 [ 30%]  (Warmup)\nIteration: 4000 / 10000 [ 40%]  (Warmup)\nIteration: 5000 / 10000 [ 50%]  (Warmup)\nIteration: 5001 / 10000 [ 50%]  (Sampling)\nIteration: 6000 / 10000 [ 60%]  (Sampling)\nIteration: 7000 / 10000 [ 70%]  (Sampling)\nIteration: 8000 / 10000 [ 80%]  (Sampling)\nIteration: 9000 / 10000 [ 90%]  (Sampling)\nIteration: 10000 / 10000 [100%]  (Sampling)\n#  Elapsed Time: 0.131 seconds (Warm-up)\n#                0.162 seconds (Sampling)\n#                0.293 seconds (Total)\n\n\nSAMPLING FOR MODEL '8schools' NOW (CHAIN 4).\n\nIteration:    1 / 10000 [  0%]  (Warmup)\nIteration: 1000 / 10000 [ 10%]  (Warmup)\nIteration: 2000 / 10000 [ 20%]  (Warmup)\nIteration: 3000 / 10000 [ 30%]  (Warmup)\nIteration: 4000 / 10000 [ 40%]  (Warmup)\nIteration: 5000 / 10000 [ 50%]  (Warmup)\nIteration: 5001 / 10000 [ 50%]  (Sampling)\nIteration: 6000 / 10000 [ 60%]  (Sampling)\nIteration: 7000 / 10000 [ 70%]  (Sampling)\nIteration: 8000 / 10000 [ 80%]  (Sampling)\nIteration: 9000 / 10000 [ 90%]  (Sampling)\nIteration: 10000 / 10000 [100%]  (Sampling)\n#  Elapsed Time: 0.14 seconds (Warm-up)\n#                0.114 seconds (Sampling)\n#                0.254 seconds (Total)\n```\n### \u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306e\u4e0b\u8a18\u306e\u8a18\u8f09\u306b\u5f93\u3044\u3001\u7d50\u679c\u3092\u8868\u793a\u3055\u305b\u308b\n![RStan.install.site.5.examples.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/2affca19-3ce3-d87b-097a-567b73e94ba6.png)\n\n\n> The object fit2, returned from function stan is an S4 object of class stanfit. Methods such as print and plot are associated with the fitted result so we can use the following code to check out the results in fit2. print provides a summary for the parameter of the model as well as the log-posterior with name lp__ (see the following example output).\nFor more methods and details of class stanfit, see the help of class stanfit.\n\n> In particular, we can use extract function on stanfit objects to obtain the samples. extract extracts samples from the stanfit object as a list of arrays for parameters of interest, or just an array. In addition, S3 functions as.array and as.matrix are defined for stanfit object (using help(\"as.array.stanfit\") to check out the help document in R).\n\n#### \uff08\u5b9f\u884c\u7d50\u679c\u3092\u8868\u793a\u3055\u305b\u308b\uff09\n```{r:RStudio} \nprint(fit2)\n```\n\n#### \uff08\u5b9f\u884c\u7d50\u679c\uff09\n```{r:RStudio} \nInference for Stan model: 8schools.\n4 chains, each with iter=10000; warmup=5000; thin=1; \npost-warmup draws per chain=5000, total post-warmup draws=20000.\n\n          mean se_mean   sd   2.5%   25%   50%   75% 97.5% n_eff Rhat\nmu        8.01    0.07 5.09  -1.84  4.67  7.96 11.25 18.27  5540    1\ntau       6.60    0.08 5.49   0.25  2.49  5.34  9.21 20.77  5017    1\neta[1]    0.38    0.01 0.94  -1.52 -0.22  0.40  1.02  2.20 10731    1\neta[2]    0.00    0.01 0.87  -1.72 -0.57  0.00  0.56  1.72 12225    1\neta[3]   -0.21    0.01 0.93  -2.03 -0.82 -0.21  0.40  1.67 13288    1\neta[4]   -0.04    0.01 0.89  -1.81 -0.62 -0.05  0.54  1.74 12446    1\neta[5]   -0.37    0.01 0.87  -2.06 -0.94 -0.39  0.19  1.45 11499    1\neta[6]   -0.21    0.01 0.89  -1.95 -0.80 -0.22  0.36  1.56 13001    1\neta[7]    0.33    0.01 0.90  -1.49 -0.25  0.35  0.93  2.08 11393    1\neta[8]    0.06    0.01 0.94  -1.83 -0.56  0.07  0.69  1.88 12202    1\ntheta[1] 11.47    0.09 8.41  -1.91  5.94 10.22 15.58 31.76  7993    1\ntheta[2]  7.94    0.05 6.25  -4.74  4.05  7.87 11.87 20.34 15143    1\ntheta[3]  6.12    0.08 7.76 -11.40  2.10  6.66 10.84 20.37 10693    1\ntheta[4]  7.69    0.05 6.58  -5.52  3.65  7.75 11.74 21.02 14920    1\ntheta[5]  5.09    0.05 6.34  -8.95  1.28  5.56  9.36 16.38 13846    1\ntheta[6]  6.20    0.06 6.73  -8.44  2.29  6.54 10.46 18.81 13474    1\ntheta[7] 10.74    0.06 6.83  -1.07  6.12 10.13 14.72 26.12 11121    1\ntheta[8]  8.57    0.07 7.99  -6.97  3.92  8.26 12.89 25.89 11535    1\nlp__     -4.87    0.04 2.66 -10.82 -6.46 -4.61 -3.01 -0.39  5191    1\n\nSamples were drawn using NUTS(diag_e) at Mon Jun 30 16:40:45 2014.\nFor each parameter, n_eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor on split chains (at \nconvergence, Rhat=1).\n```\n\n### \uff08\u5b9f\u884c\u7d50\u679c\u306e\u63cf\u753b\uff09\n```{r:RStudio} \nplot(fit2)\n```\n\n![graph.png](https://qiita-image-store.s3.amazonaws.com/0/43487/1b86ba82-5ab2-a222-e973-cbaedfb7ad28.png)\n\n\n### \uff08\u4ee5\u4e0b\u3092\u5b9f\u884c\uff09\n```{r:RStudio} \nprint(fit, digits = 1)\n```\n\n### \uff08\u5b9f\u884c\u7d50\u679c\uff09\n```{r:RStudio} \nInference for Stan model: schools_code.\n4 chains, each with iter=1000; warmup=500; thin=1; \npost-warmup draws per chain=500, total post-warmup draws=2000.\n\n         mean se_mean  sd  2.5%  25%  50%  75% 97.5% n_eff Rhat\nmu        8.0     0.2 4.9  -1.2  4.8  7.8 11.1  17.8   904    1\ntau       6.1     0.2 4.9   0.2  2.4  5.1  8.7  18.7   625    1\neta[1]    0.4     0.0 0.9  -1.4 -0.2  0.4  1.0   2.2  1263    1\neta[2]    0.0     0.0 0.9  -1.8 -0.6  0.0  0.6   1.7  1426    1\neta[3]   -0.2     0.0 0.9  -2.0 -0.8 -0.2  0.4   1.6  1351    1\neta[4]    0.0     0.0 0.9  -1.8 -0.6  0.0  0.5   1.8  1506    1\neta[5]   -0.3     0.0 0.9  -2.1 -0.9 -0.4  0.2   1.4  1442    1\neta[6]   -0.2     0.0 0.9  -2.0 -0.8 -0.3  0.4   1.7  1578    1\neta[7]    0.3     0.0 0.9  -1.4 -0.2  0.4  0.9   1.9  1421    1\neta[8]    0.1     0.0 0.9  -1.9 -0.6  0.0  0.7   1.8  1525    1\ntheta[1] 11.3     0.2 7.9  -1.6  6.1 10.3 15.3  31.0  1364    1\ntheta[2]  7.9     0.1 6.2  -3.7  3.8  7.8 11.8  20.7  1932    1\ntheta[3]  6.1     0.2 7.5 -10.9  2.1  6.5 10.6  20.0  1365    1\ntheta[4]  7.5     0.2 6.4  -4.8  3.5  7.5 11.4  21.3  1645    1\ntheta[5]  5.4     0.2 6.1  -7.7  1.8  5.9  9.3  16.6  1545    1\ntheta[6]  6.4     0.2 6.5  -7.6  2.5  6.6 10.3  18.9  1597    1\ntheta[7] 10.5     0.2 6.8  -1.3  6.0  9.8 14.3  25.1  1487    1\ntheta[8]  8.6     0.2 7.5  -5.5  4.1  8.4 12.7  24.1  1230    1\nlp__     -5.0     0.1 2.5 -10.8 -6.4 -4.7 -3.2  -0.5   566    1\n\nSamples were drawn using NUTS(diag_e) at Mon Jun 30 16:36:51 2014.\nFor each parameter, n_eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor on split chains (at \nconvergence, Rhat=1).\n```\n\n### \uff08 _RStan_ \u306f\u3001\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u305f\uff01\uff09 :laughing: \u3000\n\n# \u3010\u5099\u8003: \uff08\u53c2\u8003\uff09 _MCMC Sampler RStan_ \u3092\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u89e3\u6790\u3011\n### \u203b _Stan_ \u30d5\u30a1\u30a4\u30eb\u306e\u8a18\u8ff0\u6587\u6cd5\u3084\u3001 _R_ \u304b\u3089 _RStan_ \u7d4c\u7531\u3067 _Stan_ \u3092\u52d5\u304b\u3057\u3066\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u5206\u6790\u3092\u884c\u3063\u305f\u4e8b\u4f8b\u306f\u3001\u4e0b\u8a18\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\n\n### [ \uff08\u30ea\u30f3\u30af\uff09\u9280\u5ea7\u3067\u50cd\u304f\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u306e\u30d6\u30ed\u30b0 \u300cMCMC\u306e\u8a08\u7b97\u306bStan\u3092\u4f7f\u3063\u3066\u307f\u305f\uff08\u8d85\u57fa\u790e\u30fb\u5c0e\u5165\u7de8\uff09\u300d](http://tjo.hatenablog.com/entry/2013/11/06/201735)\n\n![Ref.ginza.1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/89b81d4e-6afd-3316-fed5-d11e49887358.png)\n\n![Ref.ginza.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/947289fd-9958-9bc8-d95e-c33d1350bb7a.png)\n\n![Ref.ginza.3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/5d570bf5-50db-9ed6-d490-004c43d1ca9e.png)\n\n![Ref.ginza.4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f2b0e147-4d8d-8518-a5cb-9814375f189f.png)\n\n![Ref.ginza.5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/9d257305-562e-f4b8-407b-906206b5ec91.png)\n\n", "tags": ["R", "MCMC", "MCMCSampler", "RStan", "Stan"]}