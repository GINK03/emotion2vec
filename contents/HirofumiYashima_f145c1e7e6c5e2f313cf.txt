{"context": " More than 1 year has passed since last update.\n\n\u3010 \u30d0\u30c3\u30c1\u51e6\u7406 \u3067\u3084\u308b\u3053\u3068 \u3011\n\nuser_log \u30c6\u30fc\u30d6\u30eb \u306e datetime\uff08\u30ed\u30b0\u30a4\u30f3\u6642\u523b\uff09\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u6642\u306b\u5b9a\u7fa9\u3057\u305f${START_DATE} \uff5e ${END_DATE}\u3000\u307e\u3067\u306e \u30e6\u30fc\u30b6\u5225 \u30ed\u30b0\u30a4\u30f3\u65e5\u6570 \u3092 \u96c6\u8a08\u3057\u305f\u5f8c\u3001\n\u305d\u306e\u7d50\u679c\u3092\u3001user_profile_tbl \u30c6\u30fc\u30d6\u30eb \u306e \u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3057\u305f ${CULUMN} \u5217 \u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\n\n\n\uff08 \uff11\uff0ePostgreSQL \u306e\u5834\u5408 \uff09\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\n\n\nbash\nDB=user_profile\nSTART_DATE=2015/01/01\nEND_DATE=2015/01/31\nCULUMN=DOUMEI_SEN_A\n\n./all_user_period_login_days_count.sh ${DB} ${START_DATE} ${END_DATE} ${COLUMN}\n\n\n\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\n\n\nall_user_period_login_days_count.sh\n\n#!/bin/bash\n\n# \u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u6570\u3001\u3064\u307e\u308a\u5909\u6570 $# \u306e\u5024\u304c 4 \u3067\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u7d42\u4e86\u3002\nif [ $# -ne 4 ]; then\n  echo \"\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306f$#\u500b\u3067\u3059\u3002\" 1>&2\n  echo \"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3068\u3057\u3066\u3001{DB\u540d}, {\u96c6\u8a08\u671f\u9593\u306e\u958b\u59cb\u65e5}('YYYY-MM-DD'), {\u7d42\u4e86\u65e5}('YYYY-MM-DD') \u3068 {\u30c7\u30fc\u30bf\u683c\u7d0d\u5148\u30ab\u30e9\u30e0\u540d}\u3092\u3001\u534a\u89d2\u30b9\u30da\u30fc\u30b9\uff11\u6587\u5b57 \u958b\u3051\u3066 \u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\" 1>&2\n  exit 1\nfi\n\npsql ${DB} -f all_uu_period_login_days_count.sql  ${COLUMN} ${START_DATE} ${END_DATE} \n\n\n\nPostgresSQL\u30d5\u30a1\u30a4\u30eb\n\n\nall_uu_period_login_days_count.sql\n\nSET start_date {START_DATE}\nSET end_date {END_DATE}\nSET column {COLUMN}\n\nWITH temp AS (\n      SELECT user_id,\n             count(distinct date_trunc('day', datetime)) over(partition by user_id) as period_login_days\n      FROM   user_log\n      WHERE  date_trunc('day', datetime)) between :START_DATE and :END_DATE\n     ) ,\n     upsert AS (update user_profile_tbl\n                set :column = temp.period_login_days from temp\n                where user_profile_tbl.user_id = temp.user_id\n                returning temp.id\n               )\n     insert into user_profile_tbl\n     select user_id, :column from temp where user_id not in (select user_id from upsert)\n\n\nInsert\u6587\u306ewhere\u53e5\u306f\u3001exists\u53e5\u3092\u4f7f\u3063\u305f\u4ee5\u4e0b\u3067\u53ef\u3002\nWITH temp AS (\n      SELECT user_id,\n             count(distinct date_trunc('day', datetime)) over(partition by user_id) as period_login_days\n      FROM   user_log\n      WHERE  date_trunc('day', datetime)) between :START_DATE and :END_DATE\n     ) ,\n     upsert AS (update user_profile_tbl\n                set :column = temp.period_login_days from temp\n                where user_profile_tbl.user_id = temp.user_id\n                returning temp.id\n               )\n     insert into user_profile_tbl\n     select user_id, :column from temp where not exists (select * from upsert)\n\n\n\n\uff08 \uff12\uff0eOracle \u306e\u5834\u5408 \uff09\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\n\n\nbash\nUSERNAME=hirofumi\nPASSWORD=xxxxxxxx\nCONNECT_IDENTIFIER=yyyyyy\n\nDB=user_profile\n\nEVENT_NAME=TOKUBETSU_DOUMEI_SEN\nSTART_DATE=2015/01/01\nEND_DATE=2015/01/31\nCOLUMN=DOUMEI_SEN_A\n\n./all_user_period_login_days_count.sh ${USERNAME} ${PASSWORD} ${CONNECT_IDENTIFIER} ${DB} ${START_DATE} ${END_DATE} ${COLUMN}\n\n\n\n\n\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\n\n\nall_user_period_login_days_count.sh\n\n#!/bin/bash\n\n# \u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u6570\u3001\u3064\u307e\u308a\u5909\u6570 $# \u306e\u5024\u304c 6 \u3067\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u7d42\u4e86\u3002\nif [ $# -ne 6 ]; then\n  echo \"\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306f$#\u500b\u3067\u3059\u3002\" 1>&2\n  echo \"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3068\u3057\u3066\u3001DB\u63a5\u7d9a\u306b\u5fc5\u8981\u306a {USERNAME}, {PASSWORD}, {CONNECT_IDENTIFIER}, {DB\u540d}, {\u96c6\u8a08\u671f\u9593\u306e\u958b\u59cb\u65e5}('YYYY-MM-DD'), {\u7d42\u4e86\u65e5}('YYYY-MM-DD') \u3068 {\u30c7\u30fc\u30bf\u683c\u7d0d\u5148\u30ab\u30e9\u30e0\u540d}\u3092\u3001\u534a\u89d2\u30b9\u30da\u30fc\u30b9\uff11\u6587\u5b57 \u958b\u3051\u3066 \u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\" 1>&2\n  exit 1\nfi\n\nsqlplus ${USERNAME}/${PASSWORD}@{CONNECT_IDENTIFIER} @all_uu_period_login_days_count.sql ${COLUMN} ${START_DATE} ${END_DATE}\n\n\n\n\n\n\u3010 \u53c2\u8003 \u3011\n\nSHIFT the Oracle \u300c\u79d2\u5358\u4f4d\u3092\u5207\u308a\u6368\u3066\u308b\u3001\u9031\u306e\u521d\u3081\u306e\u65e5\u4ed8\u3092\u6c42\u3081\u308b\u3001\u56db\u534a\u671f\u3092\u6c42\u3081\u308b\u3001\u5e74\u3092\uff65\uff65\uff65\u300d\nSHIFT the Oracle SQL \u5165\u9580 (DML\u306e\u57fa\u672c\u5f62\u5f0f:MERGE) \u300c\u884c\u306e\u633f\u5165\u3068\u66f4\u65b0\u3092 \uff11\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3067\u884c\u306a\u3046 ( MERGE = UPDATE + INSERT ) Oracle 9i\u300d\ndrk7.jp \u300cOracle \u306e MERGE \u69cb\u6587\u306b\u95a2\u3059\u308b\u5099\u5fd8\u9332 - \u30d0\u30a4\u30f3\u30c9\u5909\u6570\u306e\u6271\u3044\u65b9\u300d\n\n\n\nsql\u30d5\u30a1\u30a4\u30eb\n\n\nall_uu_period_login_days_count.sql\n\nWITH temp AS (\n      SELECT user_id,\n             count(distinct TRUNC('DD', datetime)) over(partition by user_id) as period_login_days\n      FROM   user_log\n      WHERE  date_trunc('day', datetime)) between '&2' and '&3'\n     )\nMERGE INTO user_profile_tbl\nUSING temp \nON ( user_profile_tbl.user_id = temp.user_id)\nWHEN MATCHED THEN\n        UPDATE SET user_id  = temp.user,\n                   &1 = temp.period_login_days\nWHEN NOT MATCHED THEN\n        INSERT  (user_id, period_login_days)\n        VALUES  (temp.user_id,\n                 temp.period_login_days)\n\n\n\n\n\u3010 \u53c2\u8003 \u3011\n\nSQLite3 \u3067\u306f\u3001\u300cINSERT OR REPLACEMENT INTO\u300d\u69cb\u6587\u304c\u3042\u308b\n\nSTARRTUPS ACADEMIA \u300c\u30ec\u30b3\u30fc\u30c9\u304c\u306a\u3051\u308c\u3070\u8ffd\u52a0\u3001\u3042\u308c\u3070\u66f4\u65b0\u3092\u4e00\u5ea6\u306b\u5b9f\u884c\u3067\u304d\u308b\u300eUPSERT\u300f\u3068\u306f\u300d\n\n\n\n\u3010 \u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u3011\n\n\n\u300eUNIX & Linux \u30b3\u30de\u30f3\u30c9\u30fb\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8 \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u300f by SUNONE \u300c\u5f15\u6570\u3092\u51e6\u7406\u3059\u308b\u300d\n Studio ODIN\u300cpsql \u3067\u5909\u6570\u3092\u6271\u3046\u300d\n THE ART OF WEB,SQL: A basic UPSERT in PostgreSQL_ \n Yahoo \u77e5\u6075\u888b \u300cPostgreSQL\u3067\u3044\u308f\u3086\u308bUPSERT\u300d\n Hatena::Group::postgresql \u300cwritable CTE in 9.1Add Star\u300d \n\n\n## __\u3010 \u30d0\u30c3\u30c1\u51e6\u7406 \u3067\u3084\u308b\u3053\u3068 \u3011__\n\n__user_log \u30c6\u30fc\u30d6\u30eb__ \u306e __datetime__\uff08\u30ed\u30b0\u30a4\u30f3\u6642\u523b\uff09\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u6642\u306b\u5b9a\u7fa9\u3057\u305f**${START_DATE}** \uff5e **${END_DATE}**\u3000\u307e\u3067\u306e **\u30e6\u30fc\u30b6\u5225 \u30ed\u30b0\u30a4\u30f3\u65e5\u6570** \u3092 \u96c6\u8a08\u3057\u305f\u5f8c\u3001\n\u305d\u306e\u7d50\u679c\u3092\u3001__user_profile_tbl__ \u30c6\u30fc\u30d6\u30eb \u306e __\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3057\u305f ${CULUMN} \u5217__ \u306b__\u683c\u7d0d__\u3057\u307e\u3059\u3002\n\n___\n\n### **\uff08 \uff11\uff0ePostgreSQL \u306e\u5834\u5408 \uff09**\n\n* __\u30b3\u30f3\u30bd\u30fc\u30eb\u5b9f\u884c\u30b3\u30de\u30f3\u30c9__\n \n```{bash:bash}\nDB=user_profile\nSTART_DATE=2015/01/01\nEND_DATE=2015/01/31\nCULUMN=DOUMEI_SEN_A\n\n./all_user_period_login_days_count.sh ${DB} ${START_DATE} ${END_DATE} ${COLUMN}\n```\n\n* __\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8__\n\n```{bash:all_user_period_login_days_count.sh}\n\n#!/bin/bash\n\n# \u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u6570\u3001\u3064\u307e\u308a\u5909\u6570 $# \u306e\u5024\u304c 4 \u3067\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u7d42\u4e86\u3002\nif [ $# -ne 4 ]; then\n  echo \"\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306f$#\u500b\u3067\u3059\u3002\" 1>&2\n  echo \"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3068\u3057\u3066\u3001{DB\u540d}, {\u96c6\u8a08\u671f\u9593\u306e\u958b\u59cb\u65e5}('YYYY-MM-DD'), {\u7d42\u4e86\u65e5}('YYYY-MM-DD') \u3068 {\u30c7\u30fc\u30bf\u683c\u7d0d\u5148\u30ab\u30e9\u30e0\u540d}\u3092\u3001\u534a\u89d2\u30b9\u30da\u30fc\u30b9\uff11\u6587\u5b57 \u958b\u3051\u3066 \u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\" 1>&2\n  exit 1\nfi\n\npsql ${DB} -f all_uu_period_login_days_count.sql  ${COLUMN} ${START_DATE} ${END_DATE} \n```\n\n* __PostgresSQL\u30d5\u30a1\u30a4\u30eb__\n\n```{sql:all_uu_period_login_days_count.sql}\n\nSET start_date {START_DATE}\nSET end_date {END_DATE}\nSET column {COLUMN}\n\nWITH temp AS (\n      SELECT user_id,\n\t         count(distinct date_trunc('day', datetime)) over(partition by user_id) as period_login_days\n\t  FROM   user_log\n\t  WHERE  date_trunc('day', datetime)) between :START_DATE and :END_DATE\n\t ) ,\n\t upsert AS (update user_profile_tbl\n\t\t\t    set :column = temp.period_login_days from temp\n\t\t\t    where user_profile_tbl.user_id = temp.user_id\n\t\t\t    returning temp.id\n\t\t\t   )\n\t insert into user_profile_tbl\n\t select user_id, :column from temp where user_id not in (select user_id from upsert)\n```\n\nInsert\u6587\u306ewhere\u53e5\u306f\u3001exists\u53e5\u3092\u4f7f\u3063\u305f\u4ee5\u4e0b\u3067\u53ef\u3002\n\n```\nWITH temp AS (\n      SELECT user_id,\n\t         count(distinct date_trunc('day', datetime)) over(partition by user_id) as period_login_days\n\t  FROM   user_log\n\t  WHERE  date_trunc('day', datetime)) between :START_DATE and :END_DATE\n\t ) ,\n\t upsert AS (update user_profile_tbl\n\t\t\t    set :column = temp.period_login_days from temp\n\t\t\t    where user_profile_tbl.user_id = temp.user_id\n\t\t\t    returning temp.id\n\t\t\t   )\n\t insert into user_profile_tbl\n\t select user_id, :column from temp where not exists (select * from upsert)\n```\n\n___\n\n### **\uff08 \uff12\uff0eOracle \u306e\u5834\u5408 \uff09**\n\n* __\u30b3\u30f3\u30bd\u30fc\u30eb\u5b9f\u884c\u30b3\u30de\u30f3\u30c9__\n\n```{bash:bash}\nUSERNAME=hirofumi\nPASSWORD=xxxxxxxx\nCONNECT_IDENTIFIER=yyyyyy\n\nDB=user_profile\n\nEVENT_NAME=TOKUBETSU_DOUMEI_SEN\nSTART_DATE=2015/01/01\nEND_DATE=2015/01/31\nCOLUMN=DOUMEI_SEN_A\n\n./all_user_period_login_days_count.sh ${USERNAME} ${PASSWORD} ${CONNECT_IDENTIFIER} ${DB} ${START_DATE} ${END_DATE} ${COLUMN}\n\n\n```\n\n* __\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8__\n \n```{bash:all_user_period_login_days_count.sh}\n\n#!/bin/bash\n\n# \u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u6570\u3001\u3064\u307e\u308a\u5909\u6570 $# \u306e\u5024\u304c 6 \u3067\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u7d42\u4e86\u3002\nif [ $# -ne 6 ]; then\n  echo \"\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306f$#\u500b\u3067\u3059\u3002\" 1>&2\n  echo \"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3068\u3057\u3066\u3001DB\u63a5\u7d9a\u306b\u5fc5\u8981\u306a {USERNAME}, {PASSWORD}, {CONNECT_IDENTIFIER}, {DB\u540d}, {\u96c6\u8a08\u671f\u9593\u306e\u958b\u59cb\u65e5}('YYYY-MM-DD'), {\u7d42\u4e86\u65e5}('YYYY-MM-DD') \u3068 {\u30c7\u30fc\u30bf\u683c\u7d0d\u5148\u30ab\u30e9\u30e0\u540d}\u3092\u3001\u534a\u89d2\u30b9\u30da\u30fc\u30b9\uff11\u6587\u5b57 \u958b\u3051\u3066 \u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\" 1>&2\n  exit 1\nfi\n\nsqlplus ${USERNAME}/${PASSWORD}@{CONNECT_IDENTIFIER} @all_uu_period_login_days_count.sql ${COLUMN} ${START_DATE} ${END_DATE}\n\n```\n\n___\n\n#### \u3010 \u53c2\u8003 \u3011\n\n* [SHIFT the Oracle \u300c\u79d2\u5358\u4f4d\u3092\u5207\u308a\u6368\u3066\u308b\u3001\u9031\u306e\u521d\u3081\u306e\u65e5\u4ed8\u3092\u6c42\u3081\u308b\u3001\u56db\u534a\u671f\u3092\u6c42\u3081\u308b\u3001\u5e74\u3092\uff65\uff65\uff65\u300d](http://www.shift-the-oracle.com/sql/functions/trunc-datetime.html)\n\n* [SHIFT the Oracle SQL \u5165\u9580 (DML\u306e\u57fa\u672c\u5f62\u5f0f:MERGE) \u300c\u884c\u306e\u633f\u5165\u3068\u66f4\u65b0\u3092 \uff11\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3067\u884c\u306a\u3046 ( MERGE = UPDATE + INSERT ) Oracle 9i\u300d](http://www.shift-the-oracle.com/sql/merge.html)\n* [drk7.jp \u300cOracle \u306e MERGE \u69cb\u6587\u306b\u95a2\u3059\u308b\u5099\u5fd8\u9332 - \u30d0\u30a4\u30f3\u30c9\u5909\u6570\u306e\u6271\u3044\u65b9\u300d](http://www.drk7.jp/MT/archives/001386.html)\n\n___\n\n* __sql\u30d5\u30a1\u30a4\u30eb__\n \n```{sql:all_uu_period_login_days_count.sql}\n\nWITH temp AS (\n      SELECT user_id,\n\t         count(distinct TRUNC('DD', datetime)) over(partition by user_id) as period_login_days\n\t  FROM   user_log\n\t  WHERE  date_trunc('day', datetime)) between '&2' and '&3'\n\t )\nMERGE INTO user_profile_tbl\nUSING temp \nON ( user_profile_tbl.user_id = temp.user_id)\nWHEN MATCHED THEN\n\t\tUPDATE SET user_id  = temp.user,\n\t\t           &1 = temp.period_login_days\nWHEN NOT MATCHED THEN\n        INSERT  (user_id, period_login_days)\n        VALUES  (temp.user_id,\n                 temp.period_login_days)\n```\n\n___\n\n## __\u3010 \u53c2\u8003 \u3011__\n__SQLite3 \u3067\u306f\u3001\u300cINSERT OR REPLACEMENT INTO\u300d\u69cb\u6587\u304c\u3042\u308b__\n\n* [STARRTUPS ACADEMIA \u300c\u30ec\u30b3\u30fc\u30c9\u304c\u306a\u3051\u308c\u3070\u8ffd\u52a0\u3001\u3042\u308c\u3070\u66f4\u65b0\u3092\u4e00\u5ea6\u306b\u5b9f\u884c\u3067\u304d\u308b\u300eUPSERT\u300f\u3068\u306f\u300d](http://web-academia.org/it_business_web_development/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/482/)\n\n\n___\n### **\u3010 \u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u3011**\n\n* [\u300eUNIX & Linux \u30b3\u30de\u30f3\u30c9\u30fb\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8 \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u300f by SUNONE \u300c\u5f15\u6570\u3092\u51e6\u7406\u3059\u308b\u300d](http://shellscript.sunone.me/parameter.html)\n* [ Studio ODIN\u300cpsql \u3067\u5909\u6570\u3092\u6271\u3046\u300d](http://www.odin.hyork.net/write/write0668.html)\n* [ THE ART OF WEB,SQL: A basic UPSERT in PostgreSQL_ ](http://www.the-art-of-web.com/sql/upsert/)\n* [ Yahoo \u77e5\u6075\u888b \u300cPostgreSQL\u3067\u3044\u308f\u3086\u308bUPSERT\u300d](http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11145559451)\n* [ Hatena::Group::postgresql \u300cwritable CTE in 9.1Add Star\u300d ](https://postgresql.g.hatena.ne.jp/umitanuki/20110513/1305295805)\n", "tags": ["SQL", "\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0", "\u30a2\u30af\u30bb\u30b9\u89e3\u6790", "\u30c7\u30fc\u30bf\u5206\u6790", "\u30b9\u30de\u30db\u30b2\u30fc\u30e0"]}