{"context": " More than 1 year has passed since last update.\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306eJubatus\u3092Clojure\u304b\u3089\u5229\u7528\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fClassifier\uff08\u591a\u5024\u5206\u985e\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u516c\u5f0f\u30b5\u30a4\u30c8\u306e Python Ruby Java \u306e\u30b5\u30f3\u30d7\u30eb\u3068\u5185\u5bb9\u306f\u540c\u3058\u3067\u3059\u306e\u3067\u8a73\u7d30\u306f\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305a\u306f\u3001Leiningen\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067Jubatus\u306eJava\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u4f9d\u5b58\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nproject.clj\u629c\u7c8b\n  :repositories [[\"jubatus\" \"http://download.jubat.us/maven\"]]\n  :dependencies [[us.jubat/jubatus \"[0.6.,)\"] [org.clojure/clojure \"1.6.0\"]]\n\n\njubaclassifier -f shogun.json\u3067Jubatus\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u3066\u304a\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\n\ncore.clj\n(ns jubatus-sample.core\n  (:import [us.jubat.classifier ClassifierClient LabeledDatum]\n           [us.jubat.common Datum]))\n\n(def train-data\n  {\"\u5fb3\u5ddd\" [\"\u5bb6\u5eb7\" \"\u79c0\u5fe0\" \"\u5bb6\u5149\" \"\u5bb6\u7db1\" \"\u7db1\u5409\" \"\u5bb6\u5ba3\" \"\u5bb6\u7d99\" \"\u5409\u5b97\" \"\u5bb6\u91cd\" \"\u5bb6\u6cbb\" \"\u5bb6\u6589\" \"\u5bb6\u6176\" \"\u5bb6\u5b9a\" \"\u5bb6\u8302\" #_\"\u6176\u559c\"]\n   \"\u8db3\u5229\" [\"\u5c0a\u6c0f\" \"\u7fa9\u8a6e\" \"\u7fa9\u6e80\" \"\u7fa9\u6301\" \"\u7fa9\u91cf\" \"\u7fa9\u6559\" \"\u7fa9\u52dd\" \"\u7fa9\u653f\" \"\u7fa9\u5c1a\" \"\u7fa9\u7a19\" \"\u7fa9\u6f84\" \"\u7fa9\u7a19\" \"\u7fa9\u6674\" \"\u7fa9\u8f1d\" \"\u7fa9\u6804\" #_\"\u7fa9\u662d\"]\n   \"\u5317\u6761\" [\"\u6642\u653f\" \"\u7fa9\u6642\" \"\u6cf0\u6642\" \"\u7d4c\u6642\" \"\u6642\u983c\" \"\u9577\u6642\" \"\u653f\u6751\" \"\u6642\u5b97\" \"\u8c9e\u6642\" \"\u5e2b\u6642\" \"\u5b97\u5ba3\" \"\u7155\u6642\" \"\u57fa\u6642\" \"\u9ad8\u6642\" \"\u8c9e\u9855\" #_\"\u5b88\u6642\"]})\n\n(defn- make-datum [value]\n  (.addString (Datum.) \"name\" value))\n\n(defn train [client]\n  (let [data (for [[k v] train-data]\n               (map #(LabeledDatum. k (make-datum %)) v))]\n    (.train client (shuffle (apply concat data)))))\n\n(defn predict [client]\n  (let [names [\"\u6176\u559c\" \"\u7fa9\u662d\" \"\u5b88\u6642\"]\n        data (map #(identity [% (make-datum %)]) names)]\n    (doseq [[n d] data]\n      (->> (.classify client [d]) first (apply max-key #(.-score %)) .-label\n           (#(println % n))))))\n\n(def client (ClassifierClient. \"127.0.0.1\", 9199, \"test\", 1))\n(train client)\n(predict client)\n\n\n\u4ee5\u4e0b\u306e\u7d50\u679c\u304c\u30d7\u30ea\u30f3\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\u3046\u307e\u304f\u5206\u985e\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u7d50\u679c\n\u5fb3\u5ddd \u6176\u559c\n\u8db3\u5229 \u7fa9\u662d\n\u5317\u6761 \u5b88\u6642\n\n\n\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306eJubatus\u3092Clojure\u304b\u3089\u5229\u7528\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fClassifier\uff08\u591a\u5024\u5206\u985e\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u516c\u5f0f\u30b5\u30a4\u30c8\u306e [Python](http://jubat.us/ja/tutorial/classifier_python.html) [Ruby](http://jubat.us/ja/tutorial/classifier_ruby.html) [Java](http://jubat.us/ja/tutorial/classifier_java.html) \u306e\u30b5\u30f3\u30d7\u30eb\u3068\u5185\u5bb9\u306f\u540c\u3058\u3067\u3059\u306e\u3067\u8a73\u7d30\u306f\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u305a\u306f\u3001Leiningen\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067Jubatus\u306eJava\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u4f9d\u5b58\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```clj:project.clj\u629c\u7c8b\n  :repositories [[\"jubatus\" \"http://download.jubat.us/maven\"]]\n  :dependencies [[us.jubat/jubatus \"[0.6.,)\"] [org.clojure/clojure \"1.6.0\"]]\n```\n\n`jubaclassifier -f shogun.json`\u3067Jubatus\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u3066\u304a\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\n\n```core.clj\n(ns jubatus-sample.core\n  (:import [us.jubat.classifier ClassifierClient LabeledDatum]\n           [us.jubat.common Datum]))\n\n(def train-data\n  {\"\u5fb3\u5ddd\" [\"\u5bb6\u5eb7\" \"\u79c0\u5fe0\" \"\u5bb6\u5149\" \"\u5bb6\u7db1\" \"\u7db1\u5409\" \"\u5bb6\u5ba3\" \"\u5bb6\u7d99\" \"\u5409\u5b97\" \"\u5bb6\u91cd\" \"\u5bb6\u6cbb\" \"\u5bb6\u6589\" \"\u5bb6\u6176\" \"\u5bb6\u5b9a\" \"\u5bb6\u8302\" #_\"\u6176\u559c\"]\n   \"\u8db3\u5229\" [\"\u5c0a\u6c0f\" \"\u7fa9\u8a6e\" \"\u7fa9\u6e80\" \"\u7fa9\u6301\" \"\u7fa9\u91cf\" \"\u7fa9\u6559\" \"\u7fa9\u52dd\" \"\u7fa9\u653f\" \"\u7fa9\u5c1a\" \"\u7fa9\u7a19\" \"\u7fa9\u6f84\" \"\u7fa9\u7a19\" \"\u7fa9\u6674\" \"\u7fa9\u8f1d\" \"\u7fa9\u6804\" #_\"\u7fa9\u662d\"]\n   \"\u5317\u6761\" [\"\u6642\u653f\" \"\u7fa9\u6642\" \"\u6cf0\u6642\" \"\u7d4c\u6642\" \"\u6642\u983c\" \"\u9577\u6642\" \"\u653f\u6751\" \"\u6642\u5b97\" \"\u8c9e\u6642\" \"\u5e2b\u6642\" \"\u5b97\u5ba3\" \"\u7155\u6642\" \"\u57fa\u6642\" \"\u9ad8\u6642\" \"\u8c9e\u9855\" #_\"\u5b88\u6642\"]})\n\n(defn- make-datum [value]\n  (.addString (Datum.) \"name\" value))\n\n(defn train [client]\n  (let [data (for [[k v] train-data]\n               (map #(LabeledDatum. k (make-datum %)) v))]\n    (.train client (shuffle (apply concat data)))))\n\n(defn predict [client]\n  (let [names [\"\u6176\u559c\" \"\u7fa9\u662d\" \"\u5b88\u6642\"]\n        data (map #(identity [% (make-datum %)]) names)]\n    (doseq [[n d] data]\n      (->> (.classify client [d]) first (apply max-key #(.-score %)) .-label\n           (#(println % n))))))\n\n(def client (ClassifierClient. \"127.0.0.1\", 9199, \"test\", 1))\n(train client)\n(predict client)\n```\n\n\u4ee5\u4e0b\u306e\u7d50\u679c\u304c\u30d7\u30ea\u30f3\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\u3046\u307e\u304f\u5206\u985e\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n```text:\u7d50\u679c\n\u5fb3\u5ddd \u6176\u559c\n\u8db3\u5229 \u7fa9\u662d\n\u5317\u6761 \u5b88\u6642\n```\n", "tags": ["Clojure1.6.0", "\u6a5f\u68b0\u5b66\u7fd2", "jubatus0.6.1"]}