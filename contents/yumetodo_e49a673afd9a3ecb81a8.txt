{"context": "\n\nC++\u521d\u5fc3\u8005Advent Calendar 2015\n\u3053\u306e\u8a18\u4e8b\u306fC++\u521d\u5fc3\u8005Advent Calendar 2015 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\n<<9\u65e5\u76ee  \uff5cClang with Microsoft CodeGen\u304c\u3067\u305f\u306e\u3067\u8a66\u3059\n<<16\u65e5\u76ee | \u30d6\u30ed\u30b0\u30ba\u30df: Boost.Test v3 \u3092\u4f7f\u3063\u3066\u307f\u305f || 18\u65e5\u76ee | \u305d\u308cC++\u306a\u3089#define\u3058\u3083\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u3088 | \u3068\u3055\u3044\u306c\u306e\u96a0\u3057\u90e8\u5c4b >>\n\n\u306f\u3058\u3081\u306b\n\u307f\u306a\u3055\u307e\u3001\u30ca\u30de\u30b9\u30c6\u3002\u3055\u3066\u3001\u3053\u306e\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u898b\u3066\u3001\u300c\u6642\u4ee3\u30fb\u30fb\u30fb\u30b5\u30c8\u30a6\u30ad\u30d3\u30fb\u30fb\u30fb\u5fcd\u8005\u30fb\u30fb\u30fb\u3046\u3045\u3001\u982d\u304c\u300d\u3068\u306a\u3063\u305f\u4eba\u306f\u79c1\u3068\u8da3\u5473\u304c\u4f3c\u3066\u3044\u307e\u3059\u30fb\u30fb\u30fb\u3063\u3066\u8a71\u306f\u3069\u3046\u3067\u3082\u3044\u3044\u304b\u3002\n\u3088\u304f\u3001\u300cC++\u306fBetter C\u3068\u3057\u3066\u306f\u3058\u3081\u308c\u3070\u3044\u3044\u300d\u307f\u305f\u3044\u306a\u8a71\u3092\u805e\u304f\u306e\u3067\u305d\u308c\u306b\u305d\u3063\u3066\u4e00\u6c17\u306bC++14\u307e\u3067\u99c6\u3051\u629c\u3051\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bC99\u3092\u77e5\u3089\u306a\u3044\u4eba\u306f\u304a\u65ad\u308a\u3067\u3059\u3002\u3055\u3088\u3046\u306a\u3089\u3002\n\u3067\u306f\u306f\u3058\u3081\u307e\u3059\u304b\u3002\n\u3057\u3063\u304b\u3057\u66f8\u304d\u7d42\u308f\u3063\u3066\u304b\u3089\u601d\u3063\u305f\u3002\u306a\u305c\u8907\u6570\u306e\u8a18\u4e8b\u306b\u5206\u5272\u3057\u306a\u304b\u3063\u305f\u3057\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u8d85\u9577\u6587\u3067\u3059\u3002\u3059\u307f\u307e\u305b\u3093\u3002\u305d\u306e\u3046\u3061\u5358\u72ec\u306e\u8a18\u4e8b\u3082\u51fa\u3057\u307e\u3059\u3001\u304d\u3063\u3068\u3002\n\u3068\u3053\u308d\u3067\u3001\u5b9f\u306f\u30db\u30c3\u3068\u3057\u3066\u304a\u308a\u307e\u3057\u3066\u3001\u306a\u306b\u304b\u3068\u3044\u3046\u3068\u3001\u524d\u65e5\u306esrz-zumix\u3055\u3093\u306e\u8a18\u4e8b\u304c\u3061\u3063\u3068\u3082\u521d\u5fc3\u8005\u5411\u3051\u3058\u3083\u306a\u3044\u3093\u3067\u3059\u3088\u3002\u521d\u5fc3\u8005\u306fBoost\u306a\u3093\u3066\u4f7f\u3048\u307e\u305b\u3093!!\n\u66f8\u304d\u7d42\u308f\u3063\u3066\u304b\u3089\u6295\u7a3f\u306b\u6c17\u304c\u4ed8\u3044\u305f\u3093\u3067\u3059\u304c\u3002\u3053\u306e\u8a18\u4e8b\u306e\u5f8c\u534a\u306f\u521d\u5fc3\u8005\u5411\u3051\u3058\u3083\u306a\u3044\u306a\u3041\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u307f\u3066\u300c\u3053\u308c\u3088\u308a\u306f\u521d\u5fc3\u8005\u5411\u3051\u3060\u308f\u30fc\u300d\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3059\u3002\n\u500b\u4eba\u7684\u306b\u306f\u3001\u6b4c\u821e\u4f0e\u5ea7.tech #8 \u300cC++\u521d\u5fc3\u8005\u4f1a\u300d\u3068\u304b\u898b\u3066\u4ee5\u964d\u3001\u300c\u521d\u5fc3\u8005\u300d\u304c\u6016\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3057\u305f\u304c(\u521d\u5fc3\u8005\u304cBoost.asio\u3092\u3064\u304b\u3048\u308b\u3082\u3093\u304b\uff01)\u3001\u3055\u3089\u306b\u6016\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u521d\u5fc3\u8005\u6016\u3044\u3002(srz-zumix\u3055\u3093\u3059\u307f\u307e\u305b\u3093)\n\n=0\u3067\u521d\u671f\u5316\u3092\u3084\u3081\u3088\u3046\n\u3055\u3066\u3001C99\u3060\u3068\u521d\u671f\u5316\u3068\u805e\u304f\u3068\n\nC99\nint main()\n{\n  int hoge = 0;\n  //\u7565\n  return 0;\n}\n\n\n\u307f\u305f\u3044\u306a\u306e\u3092\u30a4\u30e1\u30fc\u30b8\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u8003\u3048\u306f\u6368\u3066\u3066\u304f\u3060\u3055\u3044\u3002\n\u3068\u3044\u3046\u304b\u305d\u3082\u305d\u3082C99\u3067\u3059\u3089\u3053\u306e\u8003\u3048\u306f\u826f\u304f\u306a\u3044\u3067\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u521d\u671f\u5316\u3068\u306f\u3001\u5909\u6570\u306a\u3069\u306e\u72b6\u614b\u3092\u30d7\u30ed\u30b0\u30e9\u30de\u306b\u3068\u3063\u3066\u65e2\u77e5\u306b\u3059\u308b\u3053\u3068\u3060\u304b\u3089\u3067\u3001\u65ad\u3058\u30660\u306b\u3059\u308b\u3053\u3068\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u540c\u3058\u7406\u7531\u3067memset\u3092\u4f7f\u3046\u306e\u3082\u8ad6\u7834\u3067\u304d\u307e\u3059(\u3082\u3061\u308d\u3093\u5225\u306e\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u304c)\u3002\n\u3055\u3066C++\u3067\u306f\u30af\u30e9\u30b9\u304c\u6709\u308a\u307e\u3059\u3002\u3067\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3068\u3044\u3046\u3068\u3001\u3044\u3063\u3064\u3082=0\u3063\u3066\u66f8\u3044\u3066\u521d\u671f\u5316\u3067\u304d\u308b\u3068\u601d\u3063\u305f\u3089\u5927\u9593\u9055\u3044\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\nhttp://melpon.org/wandbox/permlink/F7I4qUTqkrF4qRlZ\n\n=0\u521d\u671f\u5316\u3067\u304d\u306a\u3044\u7c21\u5358\u306a\u4f8b\nstd::pair<int, int> p = 0;//NG\n\n\n\u3058\u3083\u3042\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u7d71\u4e00\u521d\u671f\u5316\u30fb\u30ea\u30b9\u30c8\u521d\u671f\u5316\u306e\u898b\u672c\u5e33 - \u30a4\u30b0\u30c8\u30e9\u30f3\u30b9\u306e\u982d\u306e\u4e2d\n\u6ce2\u62ec\u5f27\u306e\u521d\u671f\u5316\u304c\u3042\u3063\u3066\u5b09\u3057\u3044\u3068\u304d - \u30a4\u30b0\u30c8\u30e9\u30f3\u30b9\u306e\u982d\u306e\u4e2d\naggregate\u3068\u521d\u671f\u5316\u30ea\u30b9\u30c8\u306e\u4e0d\u601d\u8b70 | \u672c\u306e\u866b\n\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u306f\u8a00\u8a9e\u3092\u8868\u9762\u7684\u306a\u7406\u89e3\u3060\u3051\u3067\u4f7f\u3063\u3066\u3044\u308b | \u672c\u306e\u866b\ninitializer list\u306e\u89e3\u8aac\nC++14\u306e\u65b0\u6a5f\u80fd: \u30e1\u30f3\u30d0\u30fc\u521d\u671f\u5316\u5b50\u3068\u521d\u671f\u5316\u30ea\u30b9\u30c8\u306e\u7d44\u307f\u5408\u308f\u305b | \u672c\u306e\u866b\nvector/array\u3068Uniform initialization+Initializer list - yohhoy\u306e\u65e5\u8a18\n\n\u306f\u3044\u30012\u65e5\u76ee\u30013\u65e5\u76ee\u3067\u3082\u89e3\u8aac\u304c\u3042\u308a\u307e\u3057\u305f\u3057\u3001\u672c\u306e\u866b\u306b\u3082\u3042\u308a\u307e\u3059\u306d\u3002\u7d71\u4e00\u521d\u671f\u5316\u69cb\u6587\u3092\u4f7f\u3048\u3070\u3044\u3044\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\n\n\u7d50\u8ad6\nstd::pair<int, int> p3{};//OK\nint hoge{};//OK\nstd::array<int, 4> arr{{}}\n\n\n\u307e\u3042\u4e0a\u8a18\u306e\u4f8b\u306b\u9650\u3063\u3066\u8a00\u3048\u3070\nstd::pair<int, int> p3 = {};//OK\nint hoge = 0;//OK\nstd::array<int, 4> arr = {{}}\n\n\u3068\u3057\u3066\u3057\u307e\u3057\u307e\u3059\u304c\u3001initializer list\u306e\u4ee3\u5165\u306f\u3067\u304d\u306a\u3044\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3002\n\nstd::cout\u3068printf\nC++\u3067\u306a\u3093\u304b\u51fa\u529b\u3068\u8a00\u308f\u308c\u305f\u3089\u3084\u3063\u3071\u308a\n\n\u3042\u308a\u304d\u305f\u308a\n#include <iostream>\nint main()\n{\n    std::cout << \"arikitari_na_world!\" << std::endl;\n    return 0;\n}\n\n\n\u3067\u3059\u3088\u306d\u3002\u306a\u3093\u3067printf\u304c\u597d\u307e\u308c\u306a\u3044\u306e\u304b\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u305d\u3082\u305d\u3082printf\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u306f\n\nprintf\nint printf ( const char * format, ... );\n\n\n\u3067\u3059\u306d\u3002\n\nformat\u6307\u5b9a\u3068\u578b\u5b89\u5168\n\u4f8b\u3048\u3070stdint.h/cstdint\u306b\u3042\u308bint64_t\u578b\u3092\u8868\u793a\u3055\u305b\u305f\u3044\u5834\u5408\u3001\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\nC99\n#include <stdint.h>\n#include <stdio.h>\nint64_t num = 4288957324576;\n//\u3069\u3063\u3061\uff1f\nprintf(\"%lld\", num);\nprintf(\"%I64d\", num);\n\n\n\u3053\u306e2\u3064\u3092#if\u3064\u304b\u3063\u3066\u5206\u3051\u308b\u3068\u3044\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306d\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3082\u3061\u308d\u3093\u305d\u3093\u306a\u3053\u3068\u306f\u306a\u304f\u3001\u6a19\u6e96\u306b\u305d\u308c\u3092\u3084\u3063\u3066\u304f\u308c\u308b\u30de\u30af\u30ed\u304c\u3042\u308a\u307e\u3059\u3002#define __STDC_FORMAT_MACROS & #include <inttypes.h> (C99) / #include <cinttypes> (C++11) \u306e\u30de\u30af\u30ed\u3092\u3064\u304b\u3063\u3066\u3001\n\n\u30b3\u30e1\u30f3\u30c8\u3067\u3082\u3089\u3063\u305f\u30b3\u30fc\u30c9\n#include <stdint.h>\n#include <stdio.h>\n#include <inttypes.h>\n\nint64_t num = 4288957324576;\nprintf(\"%\"PRId64, num);\n\n\n\u3053\u3046\u66f8\u304f\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\u3001\u6587\u5b57\u5217\u304c(\u30de\u30af\u30ed\u3067\u9023\u7d50\u3055\u308c\u307e\u3059\u304c)\u3068\u304e\u308c\u3066\u898b\u3048\u307e\u3059\u3002\u3053\u308c\u306f\u306a\u304b\u306a\u304b\u307f\u306b\u304f\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b(\u79c1\u898b)\u3002\n\u554f\u984c\u306f\u3055\u3089\u306b\u6df1\u3044\u3067\u3059\u3002format\u6307\u5b9a\u3059\u308b\u3053\u3068\u306e\u5229\u70b9\u306f\u51fa\u529b\u3055\u308c\u308b\u3082\u306e\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u5bfe\u5fdc\u3055\u305b\u308b\u3079\u304d\u578b\u304c\u7121\u9650\u306b\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u7121\u9650\u901a\u308a\u306eformat\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u6050\u308d\u3057\u3084\u3002STL\u306b\u5165\u3063\u3066\u3044\u308b\u578b\u306e\u3046\u3061\u5bfe\u5fdc\u3055\u305b\u308b\u3079\u304d\u3082\u306e\u3060\u3051\u3067\u3082\u3044\u304f\u3064\u3042\u308b\u3093\u3067\u3059\u304b\u306d\u3001\u899a\u3048\u3089\u308c\u308b\u304b\u3002\n\u3055\u3089\u306b\u578b\u5b89\u5168\u306a\u3082\u306e\u306b\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u3001\u3064\u307e\u308a\u3001format\u6307\u5b9a\u304c\u9069\u5207\u304b\u3092\u8abf\u3079\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u3059\u308b\u306b\u306f\u3001\u3069\u308c\u3060\u3051\u82e6\u52b4\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u5148\u306e\u3088\u3046\u306a\u30de\u30af\u30ed\u3082\u305f\u304f\u3055\u3093\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u308c\u3067\u3082\u578b\u5b89\u5168printf\u3092\u3064\u304f\u308b\u3079\u304f\u7acb\u3061\u5411\u304b\u3046\u4eba\u305f\u3061\u306f\u5f8c\u3092\u7acb\u3061\u307e\u305b\u3093\u3002\n\n\u7d50\u8ad6\n#include <iostream>\n#include <cstdint>\n#include <string>\nint main()\n{\n    std::int64_t num = 4288957324576;\n    std::size_t s = 32;\n    std::string str = \"arikitari\";\n    std::cout << num << \", \" << s << \", \" << str << std::endl;\n    return 0;\n}\n\ntemplate\u304c\u4f7f\u3048\u308b\u304a\u304b\u3052\u3067\u3001\u81a8\u5927\u306a\u578b\u5168\u3066\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3057\u305f\u3002format\u304c\u3042\u308b\u304b\u3089\u9762\u5012\u306a\u3093\u3060\u3001\u3068\u3044\u3046\u8ad6\u6cd5\u3067\u3059\u306d\u3002\n\u3042\u3042\u3001\u3061\u306a\u307f\u306bfmtlib/fmt\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u3063\u3066\u3001\u9ad8\u901f\u304b\u3064C#\u306b\u8fd1\u3044Syntax\u3067\u66f8\u3051\u307e\u3059\u3002\nC++ Advent Calendar 2014\u306e17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3042\u308b\n\u4eca\u5e74\u6c17\u306b\u306a\u3063\u305f C++ \u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u304b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u7d39\u4ecb\u3059\u308b\u8a18\u4e8b - \u306f\u3084\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308a\u305f\u3044\n\u306b\u7d39\u4ecb\u304c\u3042\u308a\u307e\u3059\u30022017/02/02\u73fe\u5728\u3082\u6d3b\u767a\u306b\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\nauto\n\u3044\u308f\u3086\u308b\u578b\u63a8\u8ad6\u3067\u3059\u306d\u3002\u3069\u3053\u305e\u306e\u7cde\u8a00\u8a9e(Java)\u3092\u9664\u3051\u3070\u3001\u578b\u63a8\u8ad6\u306f\u53f3\u8fba\u306e\u578b\u304b\u3089\u5de6\u8fba\u306e\u578b\u3092\u63a8\u6e2c\u3059\u308b\u3082\u306e\u3067\u3059\u3002\nint num = 2;\nauto re = 5 / num;//int\u578b\u30012\u306b\u306a\u308b\n\n\u7d44\u307f\u8fbc\u307f\u578b\u304f\u3089\u3044\u306fauto\u4f7f\u308f\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u304c\u3001std::array::iterator\u3068\u304bstd::vector<std::vector<int>>::iterator\u3068\u304b\u308f\u3051\u308f\u304b\u3081\u306a\u9577\u3055\u306e\u578b\u304c\u4f7f\u308f\u308c\u308b\u306e\u3067\u5fc5\u9808\u6a5f\u80fd\u3067\u3059\u3002\n\u3042\u3001\u3042\u3068TMP\u3059\u308b\u6642\u30fb\u30fb\u30fb(ry\n\u3053\u306e\u8fba\u306f\u3044\u306a\u3080\u5148\u751f\u304c\u3001C++\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc12\u65e5\u76ee\u3067\nC++\u306e\u3064\u307e\u305a\u304d\u30dd\u30a4\u30f3\u30c8\u89e3\u8aac\n\u8a73\u3057\u304f\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5c11\u3057\u96e3\u3057\u76ee\u3067\u3059\u304c\u305c\u3072\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nstd::pair\n\u3055\u3066\u3001\u3053\u3044\u3064\u306f\u306a\u306b\u304b\u3068\u4fbf\u5229\u3067\u3059\u3002\u7d14\u7c8b\u306b\uff12\u3064\u306e\u5909\u6570\u3092\u307e\u3068\u3081\u308b\u3060\u3051\u306e\u3082\u306e\u3067\u3059\ntypedef struct {\nint first;\nint second;\n} PIAR;\n\n\u307f\u305f\u3044\u306a\u3082\u306e\u3092\u4e8c\u5ea6\u3068\u66f8\u304b\u306a\u304f\u3066\u826f\u304f\u306a\u308a\u307e\u3059\u3002\uff12\u3064\u30da\u30a2\u306e\u3082\u306e\u3063\u3066\u591a\u3044\u3067\u3059\u304b\u3089\u306d\u3002\u5ea7\u6a19\u3068\u304b\u3001\u753b\u50cf\u306e\u5927\u304d\u3055\u3068\u304betc...\n\u5c02\u7528\u306e\u30af\u30e9\u30b9\u3092\u66f8\u304f\u307e\u3067\u3082\u306a\u3044\u3068\u304d\u306b\u91cd\u5b9d\u3057\u307e\u3059\u3002\nC++\u3067\u30de\u30a4\u30ca\u30f3\u30d0\u30fc\u306e\u30c1\u30a7\u30c3\u30af\u30c7\u30b8\u30c3\u30c8\u3092\u8a08\u7b97\u3059\u308b\n\u3053\u3053\u3067\u306f\n\n\u30de\u30a4\u30ca\u30f3\u30d0\u30fc\n#include <string>\n#include <utility>\n#include <numeric>\n#include <stdexcept>\n#include <cctype>\nint calc_check_digit(const std::string& n) noexcept(false) {\n    if (11 != n.size()) throw std::runtime_error(\"n.digit must be 11\");\n    const int r = std::accumulate(n.rbegin(), n.rend(), std::pair<int, int>{}, [](const auto& s, const char& e) -> std::pair<int, int>{\n        if(!std::isdigit(e)) throw std::runtime_error(\"n.digit must be 11\");\n        return {s.first + (e - '0') * ((5 < s.second) ? s.second - 4 : s.second + 2), s.second + 1};\n    }).first % 11;\n    return (0 == r || 1 == r) ? 0 : 11 - r;\n}\n\n\nfirst\u3092\u5408\u8a08\u3001secound\u3092\u30eb\u30fc\u30d7\u30ab\u30a6\u30f3\u30c8\u306b\u4f7f\u3044\u307e\u3057\u305f\u3002\n\nstd::array\n\u914d\u5217\u3067\u3059\u3002\u8aac\u660e\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u30fb\u30fb\u30fb\u5618\u3067\u3059\u3002\nC\u306b\u3082\u914d\u5217\u304c\u3042\u3063\u3066\n#include <stdio.h>\n#include <stdlib.h>\n#ifndef _countof\n#define _countof( arr ) ( sizeof(arr) / sizeof(arr[0]))\n#endif\nint main()\n{\n    int arr[3] = { 3, 4, 2 };\n    for(size_t i = 0; i < _countof(arr); ++i) printf(\"%d,\", arr[i]);\n    return 0;\n}\n\n\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3053\u3068\u306f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u3053\u308cC++\u3060\u3068\n#include <iostream>\nint main()\n{\n    int arr[3] = { 3, 4, 2 };\n    for(auto it = std::begin(arr); it != std::end(arr); ++it) std::cout << *it << \", \";\n    return 0;\n}\n\n\u3053\u3046\u66f8\u3051\u307e\u3059\u3002std::begin\u3068std::end\u304c\u914d\u5217\u306b\u3082\u4f7f\u3048\u308b\u3093\u3067\u3059\u306d\u3002\nstd::array\u3092\u4f7f\u3046\u3068\n#include <iostream>\n#include <array>\nint main()\n{\n    std::array<int, 3> arr = { 3, 4, 2 };\n    for(auto it = arr.begin(); it != arr.end(); ++it) std::cout << *it << \", \";\n    return 0;\n}\n\n\u3067\u3001C\u306e\u914d\u5217\u3067\u306f\u306a\u304fstd::array\u3092\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\u306f\u3001\n\n\nback()(\u6700\u5f8c\u306e\u8981\u7d20\u3092\u53d6\u5f97)\u3084size()(\u914d\u5217\u306e\u5927\u304d\u3055\u3092\u53d6\u5f97)\u304c\u4f7f\u3048\u308b\n\u5f0f\u4e2d\u3067\u30dd\u30a4\u30f3\u30bf\u3068\u307f\u306a\u3055\u308c\u306a\u3044\n\n\u5f0f\u4e2d\u3067\u30dd\u30a4\u30f3\u30bf\u3068\u307f\u306a\u3055\u308c\u306a\u3044\u3068\u306f\u3069\u3046\u3044\u3046\u3053\u3063\u3061\u3083\uff1f\u3067\u3059\u304c\u3001\u4f8b\u3048\u3070C\u3067\u8981\u7d20\u578b\u304cint\u578b\u306e\u914d\u5217\u306e\u5168\u8981\u7d20\u3092\u8868\u793a\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308b\u3053\u3068\u3092\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\nC\u7248\u306e\u914d\u5217\u5168\u8981\u7d20\u3092\u8868\u793a\u95a2\u6570\n#include <stdio.h>\nvoid array_print(const int * arr, size_t size)\n{\n    for(size_t i = 0; i < size; ++i) printf(\"%d, \", arr[i]);\n}\n\n\nC\u3067\u306f\u5fa1\u5b58\u77e5\u306e\u901a\u308a\u3001\u914d\u5217\u306f3\u3064\u306e\u4f8b\u5916\u3092\u9664\u304d\u3001\u5e38\u306b\u30dd\u30a4\u30f3\u30bf\u306b\u8aad\u307f\u66ff\u3048\u3089\u308c\u307e\u3059\u30023\u3064\u306e\u4f8b\u5916\u306e1\u3064\u306fsizeof\u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u5834\u5408\u3067\u3059\u304c\u3001\n#include <stdio.h>\nvoid f(int arr[])\n{\n    printf(\"%d\", sizeof(arr));//arr\u306fint*\u578b\n}\nint main()\n{\n    int arr[5];\n    printf(\"%d\", sizeof(arr));//arr\u306fint[5]\u578b\n    f(arr);\n    return 0;\n}\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u8981\u7d20\u6570\u306e\u578b\u30c7\u30fc\u30bf\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u308f\u3051\u3067\u3059\u3002\nC++\u3092\u4f7f\u3048\u3070\u3082\u3046\u3059\u3053\u3057\u30de\u30b7\u306b\u66f8\u3051\u307e\u3059\u3002\n#include <iostream>\n#include <cstddef>\ntemplate<std::size_t N> void f(const int (&arr)[N])\n{\n    std::cout << sizeof(arr);//arr\u306fconst int (&)[5]\u578b\n}\nint main()\n{\n    int arr[5];\n    std::cout << sizeof(arr);//arr\u306f//arr\u306fint[5]\u578b\n    f(arr);\n    return 0;\n}\n\n\u8981\u7d20\u6570\u30c7\u30fc\u30bf\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6e21\u305b\u3066\u3044\u307e\u3059\u3057\u3001\u3053\u306e\u3042\u3068\u8aac\u660e\u3059\u308b\u53c2\u7167\u3092\u4f7f\u3046\u3053\u3068\u3067\u914d\u5217\u3068\u5168\u304f\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u521d\u5fc3\u8005\u306b\u306ftemplate\u306a\u3093\u3066\u7121\u7406\u3067\u3059\u3002\u3068\u3044\u3046\u304b\u30bf\u30a4\u30d7\u6570\u304c\u591a\u3059\u304e\u3066\u3084\u3063\u3066\u3089\u308c\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067std::array\u3067\u3059\u3002\n#include <iostream>\n#include <array>\nvoid f(const std::array<int, 5>& arr)\n{\n    std::cout << arr.size();\n}\nint main()\n{\n    std::array<int, 5> arr;\n    std::cout << arr.size();\n    f(arr);\n    return 0;\n}\n\n\u3059\u3063\u304d\u308a\u3002\u306a\u304asize()\u306f\u660e\u65e5\u306emyon___\u6c0f\u304c\u8a18\u4e8b\u3067\u66f8\u3044\u3066\u304f\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001constexpr\u95a2\u6570\u306a\u306e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5024\u304c\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u3069\u3053\u305e\u306e\u9676\u82b8\u5bb6\u3067\u4e2d\uff13\u5973\u5b50\u306a\u4eba\u304c\u559c\u3073\u305d\u3046\u3002\n\nRange-based for\nRange-based for\u3068\u306fC\u306e\u914d\u5217\u3068\u3001begin()/end()\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u3082\u3064\u30af\u30e9\u30b9\u578b\u3068(\u7279\u6b8a\u306a?)ADL\u3067begin()/end()\u95a2\u6570\u304c\u898b\u3064\u304b\u308b\u578b\u306b\u306e\u307f\u63d0\u4f9b\u3067\u304d\u308bfor\u6587\u3067\u3059\u3002\u3044\u308f\u3086\u308bforeach\u3067\u3059\u306d\u3002\n\nRange-based_for\u4e0d\u4f7f\u7528\n#include <iostream>\nint main()\n{\n    int arr[3] = { 3, 4, 2 };\n    for(auto it = std::begin(arr); it != std::end(arr); ++it) std::cout << *it << \", \";\n    return 0;\n}\n\n\n\u3053\u308c\u304c\n\nRange-based_for\u4f7f\u7528\n#include <iostream>\nint main()\n{\n    int arr[3] = { 3, 4, 2 };\n    for(auto&& e : arr) std::cout << e << \", \";\n    return 0;\n}\n\n\n\nRange-based_for\u4e0d\u4f7f\u7528\n#include <iostream>\n#include <array>\nint main()\n{\n    std::array<int, 3> arr = { 3, 4, 2 };\n    for(auto it = arr.begin(); it != end(); ++it) std::cout << *it << \", \";\n    return 0;\n}\n\n\n\u3053\u308c\u304c\n\nRange-based_for\u4f7f\u7528\n#include <iostream>\n#include <array>\nint main()\n{\n    std::array<int, 3> arr = { 3, 4, 2 };\n    for(auto&& e : arr) std::cout << e << \", \";\n    return 0;\n}\n\n\n\u3053\u3046\u66f8\u3051\u307e\u3059\u3002auto&&\u3063\u3066\u306e\u306fRange-based_for\u3092\u4f7f\u3046\u969b\u306e\u304a\u307e\u3058\u306a\u3044\u3067\u3059\u3002\u30eb\u30fc\u30d7\u5185\u3067\u30eb\u30fc\u30d7\u5bfe\u8c61\u3092\u66f8\u304d\u63db\u3048\u306a\u3044\u306a\u3089const auto&\u306e\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u524d\u8005\u306e\u65b9\u304c\u6c4e\u7528\u7684\u306a\u306e\u3067\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u6642\u306f\u524d\u8005\u3092\u4f7f\u3048\u3070\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u304a\u307e\u3058\u306a\u3044\u306e\u539f\u7406\u306f\nrange-based for loops\u306e\u8981\u7d20\u306e\u578b\u306b\u3064\u3044\u3066\n\u3068\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u4e0b\u3067\u8a71\u3059Reference\u306e\u7a2e\u985e\u3068\u53c2\u7167\u3067\u304d\u308b\u3082\u306e\u304c\u95a2\u4fc2\u3057\u307e\u3059\u3002\n\nReference\n\u53c2\u7167\u3001\u3068\u8a00\u3063\u305f\u307b\u3046\u304c\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002Reference\u3068\u306f\u3059\u3067\u306b\u3042\u308b\u5024\u306b\u5bfe\u3057\u5225\u540d\u3092\u3064\u3051\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u3067\u3001Reference\u3067\u3059\u304c\u3001\u5927\u304d\u304f\u308f\u3051\u3066lvalue reference\u3068rvalue reference\u304c\u3042\u308a\u307e\u3059\u3002\n\u3067\u3001\u3053\u306e2\u3064\u306b\u3069\u3093\u306a\u5dee\u304c\u3042\u308b\u306e\u304b\u3001\u3067\u3059\u304c\u3001\u53c2\u7167\u3067\u304d\u308b\u3082\u306e\u306e\u578b\u3092\u9664\u3051\u3070\u306a\u306b\u3082\u9055\u3044\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3088\u304frvalue reference\u306flvalue reference\u3068\u5168\u304f\u7570\u306a\u308b\u3001\u3068\u8003\u3048\u3066\u9055\u3044\u3092\u8003\u3048\u3059\u304e\u308b\u3042\u307e\u308a\u3001\u308f\u3051\u308f\u304b\u3081\u306b\u306a\u308b\u4eba\u304c\u3044\u307e\u3059\u304c\u3001Reference\u306b\u306f\u9055\u3044\u306a\u3044\u306e\u3067\u3059\u3002\n\n\n\n\u7a2e\u985e\n\u53c2\u7167\u3067\u304d\u308b\u3082\u306e\n\n\n\n\nlvalue reference(T&)\nlvalue\n\n\nconst lvalue rederence(const T&)\n\u306a\u3093\u3067\u3082\n\n\nrvalue reference (T&&)\nrvalue\n\n\nconst rvalue reference(const T&&)\nconst rvalue\n\n\n\n\nReference\u306e\u4f8b\nstruct Test{\n    int e;\n};\nconst Test make_Test(){ return Test(); }\nint main()\n{\n    int a = 0;\n    const int b = 2;\n    Test t;\n    int& a_lr = a;\n    const int& a_clr = a;//OK\n    //int& b_lr = b;//NG\n    const int& b_clr = b;//OK\n    Test& t_lr = t;//OK\n    Test&& t_rr = Test();//OK\n    const Test& t_clr = Test();//OK\n    const Test&& t_crr = make_Test();//OK\n    const Test& t_clr = make_Test();//OK\n    return 0;\n}\n\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3001const lvalue reference\u304c\u7121\u53cc\u3068\u3044\u3046\u304b\u6700\u5f37\u306a\u306e\u3067\u3001rvalue reference\u306f\u3042\u307e\u308a\u51fa\u756a\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\nrvalue reference\u3092\u30e0\u30fc\u30d6\u306b\u4f7f\u3046\n\u3055\u3066\u3001\u3056\u3063\u3068const\u306e\u6709\u7121\u3092\u542b\u3081\u30664\u3064\u306ereference\u304c\u3042\u3063\u305f\u308f\u3051\u3067\u3059\u304c\u3001rvalue reference\u306b\u51fa\u756a\u304c\u7121\u3044\u304b\u3068\u3044\u3046\u3068\u305d\u3093\u306a\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u3042\u4ed6\u306b\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u6700\u3082\u4e00\u822c\u7684\u306a\u4f8b\u3067\u3042\u308brvalue reference\u306e\u7528\u9014\u3001move\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u306f\u540c\u3058\u3067\u3082\u578b\u306f\u9055\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u305d\u308c\u305e\u308c\u512a\u5148\u9806\u4f4d\u304c\u3042\u308a\u307e\u3059\u3002\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u95a2\u6570\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u578b\u3092\u5909\u3048\u308c\u3070\u547c\u3073\u5206\u3051\u304c\u3067\u304d\u308b\u3068\u3046\u3053\u3068\u3067\u3059\u3002\n\u512a\u5148\u9806\u4f4d\u306e\u8a73\u7d30\u306f\nconst rvalue reference\u306f\u4f55\u306b\u4f7f\u3048\u3070\u3044\u3044\u306e\u304b - \u3053\u3053\u306f\u5323\n\u3092\u53c2\u7167\u3057\u3066\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u3001\u7c21\u5358\u306a\u4f8b\u3092\u898b\u307e\u3057\u3087\u3046\u3002\u30fb\u30fb\u30fb\u30af\u30e9\u30b9\u304c\u306a\u306b\u304b\u306e\u8aac\u660e\u306f\u7701\u304d\u307e\u3059\u3002\n\n\u306a\u3093\u3061\u3083\u3063\u3066string\u30af\u30e9\u30b9\n#include <cstring>\n#include <cstddef>\n#include <iostream>\nclass inferior_string\n{\npublic:\n    inferior_string() noexcept : m_s_(nullptr), m_len_(0), m_capacity_(0) {}\n    inferior_string(const char* str)\n    {\n        const std::size_t len = (nullptr == str) ? 0 : std::strlen(str);\n        if(0 == len){\n            this->m_s_ = nullptr;\n            this->m_len_ = this->m_capacity_ = 0;\n        }\n        else{\n            const std::size_t cap = 2 * len;\n            this->m_s_ = new char[cap]();\n            std::memcpy(this->m_s_, str, len);//copy\n\n            this->m_len_ = len;\n            this->m_capacity_ = cap;\n        }\n    }\n    inferior_string(const inferior_string& o)//copy constructor\n    {\n        if(0 == o.m_len_){\n            this->m_s_ = nullptr;\n            this->m_len_ = this->m_capacity_ = 0;\n        }\n        else{\n            const std::size_t cap = o.m_len_ * 2;\n            this->m_s_ = new char[cap]();\n            std::memcpy(this->m_s_, o.m_s_, o.m_len_);//copy\n            this->m_len_ = o.m_len_;\n            this->m_capacity_ = cap;\n        }\n    }\n    inferior_string(inferior_string&& o) noexcept\n    : m_s_(o.m_s_), m_len_(o.m_len_), m_capacity_(o.m_capacity_)//move constructor\n    {\n        o.m_s_ = nullptr;//disable input object's destructor. DO NO FORGEET!!!\n    }\n    ~inferior_string()\n    {\n        delete[] this->m_s_;\n    }\n    const char* c_str() const noexcept { return this->m_s_; }\nprivate:\n    char* m_s_;\n    std::size_t m_len_;\n    std::size_t m_capacity_;\n};\nstd::ostream& operator<< (std::ostream& os, const inferior_string& str){\n    os << str.c_str();\n    return os;\n}\nint main()\n{\n    inferior_string str = \"arikitari\";\n    inferior_string str2 = str;//copy constructor call\n    std::cout << str << \", \" << str2 << \", \";\n    inferior_string str3 = std::move(str);//move constructor call\n    //inferior_string str3 = static_cast<inferior_string&&>(str);//\u540c\u3058\u610f\u5473\n    std::cout << str3 << std::endl;\n    return 0;\n\n}\n\n\nhttp://melpon.org/wandbox/permlink/Ame2XHIjS0oB0oLW\n\u3053\u306e\u5834\u5408\u3001const inferior_string&\u3088\u308ainferior_string&&\u306e\u307b\u3046\u304c\u3001\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u512a\u5148\u9806\u4f4d\u304c\u9ad8\u3044\u306e\u3067\u3001\ninferior_string str3 = static_cast<inferior_string&&>(str);\n\n\u3053\u308c\u306finferior_string&&\u3092\u53d7\u3051\u53d6\u308b\u3001move constructor\u304c\u547c\u3070\u308c\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u30ad\u30e3\u30b9\u30c8\u3092\u66f8\u304f\u306e\u306f\u3060\u308b\u3044\u306e\u3067\ninferior_string str3 = std::move(str);\n\n\u3068\u66f8\u304f\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\n\u3053\u3046\u3057\u3066\u307f\u3066\u308f\u304b\u3063\u305f\u3088\u3046\u306b\u3001\u65ad\u3058\u3066rvalue reference\u81ea\u4f53\u306b\u306fmove\u6a5f\u80fd\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u304b\u304c\u53c2\u7167\u306b\u4e00\u4f53\u4f55\u3092\u6c42\u3081\u3066\u308b\u306e\u3055\u3002\n\u3053\u306e\u8fba\u3082\u3044\u306a\u3080\u5148\u751f\u304c\u3001C++\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc12\u65e5\u76ee\u3067\nC++\u306e\u3064\u307e\u305a\u304d\u30dd\u30a4\u30f3\u30c8\u89e3\u8aac\n\u8a73\u3057\u304f\u66f8\u3044\u3066\u3044\u308b\u306e\u3067(ry\n\u5ff5\u306e\u70ba\u306b\u5f15\u7528\u3057\u3066\u304a\u304d\u307e\u3059\n\nhttp://cpplover.blogspot.jp/2009/12/rvalue-reference.html\nstd::move()\u3092\u3001\u4f55\u304b\u30b3\u30a2\u8a00\u8a9e\u306e\u6a5f\u80fd\u306e\u3088\u3046\u306b\u52d8\u9055\u3044\u3057\u3066\u3044\u307e\u305b\u3093\u304b\uff1f\n\u3042\u304f\u307e\u3067Semantics\u3067\u3059\u3002\nstd::move\u306f\u3001static_cast(a)\u3000\u3092\u3057\u3066\u3044\u308b\u306b\u3059\u304e\u306a\u3044\u306e\u3067\u3059\u3002\nrvalue reference\u3082\u3001\u5358\u306a\u308breference\u306b\u904e\u304e\u306a\u3044\u306e\u3067\u3059\u3002\nMove Semantics\u3068\u306f\u3001\u305f\u3093\u306blvalue\u3068rvalue\u3092\u3001movable\u306a\u30d5\u30e9\u30b0\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u308b\u306b\u904e\u304e\u306a\u3044\u306e\u3067\u3059\u3002\n\u305d\u306e\u4ed6\u306f\u3001lvalue reference\u306e\u5834\u5408\u3068\u3001\u4f55\u3082\u5909\u308f\u308a\u3042\u308a\u307e\u305b\u3093\u3002\nlvalue reference\u3067\u3001\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u304b\u3089\u3068\u8a00\u3063\u3066\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u305d\u306e\u5f8c\u4f7f\u3048\u306a\u304f\u306a\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\u3082\u3061\u308d\u3093\u3001\u53c2\u7167\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304b\u3089\u3001public\u306a\u30e1\u30f3\u30d0\u5909\u6570\u306b\u5bfe\u3057\u3066\u3001\u7834\u58ca\u7684\u306a\u66f8\u304d\u63db\u3048\u3082\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u5358\u306blvalue\u3068rvalue\u3092\u3001movable\u306a\u30d5\u30e9\u30b0\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u308b\u306b\u904e\u304e\u306a\u3044\u3093\u3067\u3059\u3002\n\nstd::string\n\u3055\u304d\u307b\u3069\u306a\u3093\u3061\u3083\u3063\u3066\u6587\u5b57\u5217\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3057\u305f\u304c\u3001\u3061\u3083\u3093\u3068C++\u306b\u306fstd::string\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\u3068\u3044\u3046\u304bC\u3067\u6587\u5b57\u5217\u64cd\u4f5c\u3059\u308b\u306a\u3001\u305d\u3046\u3044\u3046\u3053\u3068\u3059\u308b\u8a00\u8a9e\u3058\u3083\u306a\u3044\uff01\uff01\n#include <iostream>\n#include <string>\nint main()\n{\n    using std::cout;\n    using std::endl;\n    std::string str1 = \"arikitari_na_world!\";\n    cout << str1 << endl;\n    str1.popback();//\u6700\u5f8c\u306e\u4e00\u6587\u5b57\u6d88\u53bb\n    cout << str1 << endl;\n    const auto str2 = str1.substr(0, str1.find_first_of('_'));//\u6700\u521d\u306e'_'\u3088\u308a\u524d\u3092\u629c\u304d\u51fa\u3057('_'\u306f\u542b\u3081\u306a\u3044)\n    cout << str2 << endl;\n    const auto str3 = str2 + \"_toha\";//\u6587\u5b57\u5217\u306e\u9023\u7d50\n    cout << str3 << endl;\n    return 0;\n}\n\n\u30fb\u30fb\u30fb\u307e\u3042\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\u4f8b\u3048\u3070\u30d5\u30eb\u30d1\u30b9\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u540d\u3060\u3051\u307b\u3057\u3044\u6642\u306f\n#include <iostream>\n#include <string>\nstd::string get_n(const std::string& fullpath)\n{\n    return fullpath.substr(fullpath.find_last_of(\"\\\\/\"), fullpath.find_last_of('.'));\n}\nint main()\n{\n    using std::cout;\n    using std::endl;\n    std::string str1 = \"C:\\\\Users\\\\yumetodo\\\\OneDrive\\\\\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\\\\\u6771\u4eac\u7406\u79d1\u5927\\\\\u7269\u7406\u5b66\u5b9f\u9a13\\\\fit.log\";\n    cout << str1 << endl;\n    cout << get_n(str1) << endl;\n    return 0;\n}\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\u3068\u3063\u3066\u3082\u697d\u3002\n\u3082\u3063\u3068\u521d\u5fc3\u8005\u5411\u3051\u306a\u8aac\u660e\u306f\n22\u65e5\u76ee| C++\u306e\u6587\u5b57\u5217\u51e6\u7406\u95a2\u4fc2\u3068\u6b63\u898f\u63a2\u7d22\uff08\u672a\u5b8c\uff09\u306b\u3064\u3044\u3066 - \u6c34\u9762\u4e0b\u306e\u5922\n\u3078\u3002\n\ntemplate\u5165\u9580\n\u3055\u304d\u306b\u300c\u521d\u5fc3\u8005\u306b\u306ftemplate\u306a\u3093\u3066\u7121\u7406\u3067\u3059\u300d\u3068\u304b\u8a00\u3063\u305f\u306e\u306f\u8ab0\u3067\u3057\u3087\u3046\u306d(\u79c1\u3060)\u3002\n\u5927\u4e08\u592b\u3067\u3059\u3001\u5165\u9580\u3067\u3059\u3002\u3093\u306a\u306e\u307e\u3058\u3081\u306b\u89e3\u8aac\u3057\u305f\u3089\u672c\u304c\u4e00\u518a\u66f8\u3051\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u89e3\u8aac\u3088\u308a\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u4eba\u306f\u3001\nC++\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u534a\u9806\u5e8f\u3068\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\u3044\u306a\u3080\u5148\u751f\u304c\u306a\u305c\u304b\u30d7\u30ed\u751f\u3061\u3083\u3093\u306eAdventCalender\u306b\u6295\u7a3f\u3057\u3066\u307e\u3059\u3002\n\u307e\u3042\u3059\u3067\u306b\u51fa\u3066\u304d\u307e\u3057\u305f\u304c\u3002\u307e\u305a\u306f\u5b9a\u7fa9\u304b\u3089\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u578b\u3084\u5024\u3092\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u6a5f\u80fd\u306e\u3053\u3068\u3067\u3042\u308b\u3002\n14 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(Templates) | C++11\u306e\u6587\u6cd5\u3068\u6a5f\u80fd(C++11: Syntax and Feature)\n\n\u5206\u304b\u3063\u305f\u30fb\u30fb\u30fb\uff1f\u3044\u3044\uff1f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u3060\u3088\uff1f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u3002\u305d\u3053\u5927\u4e8b\u3060\u304b\u3089\u306d\u3002\n#include <iostream>\ntemplate<typename T_>\nconstexpr const T_ & max(const T_& a, const T_& b)\n{\n    return (a > b)? a : b;\n}\nint main()\n{\n    const auto hoge1 = max(54, 23);//hoge1\u306fint\u578b\n    const auto hoge2 = max<unsigned int>(54, 23);//hoge2\u306funsigned int\u578b\n\n    std::cout << hoge1 << hoge2 << std::endl;\n    return 0;\n}\n\n\u307f\u308c\u3070\u5206\u304b\u308b\u3088\u3046\u306b\u6700\u5927\u5024\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u304c\u3001\u578b\u304c\u300cT_\u300d\u306b\u306a\u3063\u3066\u307e\u3059\u3002\u3069\u3046\u3044\u3046\u3053\u3068\u3060\u3063\u3066\u3070\u3088\uff1f\n\u3053\u308c\u307e\u3067\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u95a2\u6570\u3092\u4f5c\u308d\u3046\u3068\u601d\u3063\u305f\u3089\u5168\u90e8\u306e\u578b\u3054\u3068\u306b\u95a2\u6570\u3092\u66f8\u304f\u5fc5\u8981\u304c\u6709\u308a\u307e\u3057\u305f\u3002\u4e8b\u5b9fC\u8a00\u8a9e\u306emath.h\u3092\u898b\u308b\u3068\u540c\u3058\u3088\u3046\u306a\u6a5f\u80fd\u306e\u578b\u304c\u9055\u3046\u95a2\u6570\u304c\u4e71\u9020\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3093\u306a\u3082\u3093\u3044\u3061\u3044\u3061\u899a\u3048\u3066\u3089\u3093\u306a\u3044\u3067\u3059\u3088\u306d\uff1f\n\u305d\u3046\u3044\u3063\u305f\u80cc\u666f\u304b\u3089(?)C++\u3067\u306f\u95a2\u6570\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3064\u307e\u308a\u3001\u5f15\u6570\u306e\u578b\u304c\u7570\u306a\u308c\u3070\u540c\u540d\u306e\u95a2\u6570\u3092\u3044\u304f\u3064\u3067\u3082\u4f5c\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n2\u884c\u76ee\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002template\u304b\u3089\u59cb\u307e\u308b\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u304ctemplate\u306e\u4eee\u5f15\u6570\u3068\u547c\u3070\u308c\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u95a2\u6570\u306b\u3082\u4eee\u5f15\u6570\u304c\u3042\u3063\u305f\u3051\u3069\u3042\u308c\u306b\u4f3c\u3066\u307e\u3059\u3002\n\u305f\u3060\u3057\u6307\u5b9a\u3067\u304d\u308b\u306e\u306f\u578b\u540d(\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u5b9a\u6570)\u306e\u307f\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3053\u306e\u5834\u5408\u65b0\u305f\u306bT_\u3068\u3044\u3046\u578b\u3092\u3067\u3063\u3061\u4e0a\u3052\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u306e\u6642\u70b9\u3067\u306f\u5b9f\u969b\u306e\u578b\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u82e5\u5e72\u9055\u3044\u307e\u3059\u304c\u65b9\u306e\u7570\u306a\u308b\u95a2\u6570\u304c\u7121\u9650\u306b\u5b58\u5728\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u5dee\u3057\u652f\u3048\u3042\u308a\u307e\u305b\u3093(\u4f46\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u78ba\u5b9a\u3057\u307e\u3059)\u3002\n7\u884c\u76ee\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b9f\u5f15\u6570\u63a8\u5b9a(Template argument deduction)\u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u3067\u304d\u308b\u3060\u3051\u666e\u901a\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e\u5e38\u8b58\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u3001\u3068\u3066\u3082\u8907\u96d1\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u9006\u306b\u8a00\u3048\u3070\u3001\n\u30ce\u30ea\u3068\u52d8\u3068\u6c17\u5206\u3068\u306a\u3093\u3068\u306a\u304f\u3067\u3069\u30fc\u306b\u304b\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u3088\u3046\u306ftemplate\u95a2\u6570\u306e\u5f15\u6570\u306b\u66f8\u3044\u305f\u578b\u306b\u63a8\u8ad6\u3055\u308c\u308b\u308f\u3051\u3067\u3002\u307e\u3042\u307f\u308c\u3070\u308f\u304b\u308b\u3067\u3057\u3087\u3002\n8\u884c\u76ee\u306f\u660e\u793a\u7684\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b9f\u5f15\u6570\u6307\u5b9a(explicit template argument specification)\u3068\u547c\u3070\u308c\u3066\u3044\u3066\u3001\u304b\u3063\u3053\u826f\u304f\u540d\u524d\u3092\u3064\u3051\u307e\u3057\u305f\u304c\u3053\u306e\u5834\u5408\u306a\u3089\u3088\u3046\u306fT_\u306e\u578b\u306funsigned int\u3060\u3088\uff5e\u3068\u6559\u3048\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n7, 8\u884c\u76ee\u306e\u3088\u3046\u306btemplate\u3092\u4f7f\u3063\u305f\u3082\u306e(\u4eca\u56de\u306ftempalte\u95a2\u6570)\u3092\u5b9f\u969b\u306b\u8aad\u3093\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3068\u3001\u5148\u307b\u3069\u306e\u300c\u7121\u9650\u306b\u5b58\u5728\u3059\u308b\u300d\u72b6\u614b\u306e\u4f8b\u3048\u3067\u8a00\u3046\u306a\u3089\u3069\u308c\u304b\u7279\u5b9a\u306e\u3082\u306e\u306b\u5b9a\u307e\u308a\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u5b9f\u969b\u306b\u95a2\u6570\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u306e\u306f\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3060\u3051\u3067\u3059(\u3064\u307e\u308a\u4f7f\u3046\u5834\u6240\u3068\u540c\u3058\u7ffb\u8a33\u5358\u4f4d\u306b\u306a\u3044\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044)\u3002\n\n\u521d\u5fc3\u8005\u3060\u3063\u3066std::enable_if\u3067SFINAE\u3057\u305f\u3044\n\nC++\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u534a\u9806\u5e8f\u3068\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\nSFINAE\u3068\u306f\nSubstitution Failure Is Not A Error\n\u306e\u7565\u8a9e\u3067\u3042\u308b\n\n\u77e5\u3089\u3093\u304b\u3063\u305f\u308f\u3001\u307e\u3042\u305d\u308c\u306f\u3055\u3066\u304a\u304d\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3069\u3093\u306a\u578b\u3067\u3082\u53d7\u3051\u53d6\u3063\u3066\u3044\u307e\u3044\u307e\u3059\u3002\u305d\u306e\u307e\u307e\u3060\u3068\u4e88\u671f\u305b\u306c\u52d5\u4f5c\u3092\u3057\u305f\u308a\u3001\u300c\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306e\u7206\u767a\u91cf\u3092\u7af6\u3046\u5927\u4f1a\u300d\u304c\u958b\u304b\u308c\u308b\u307b\u3069\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3067\u307e\u3059\u3002\n\u4f7f\u3048\u308b\u578b\u3092\u5236\u7d04\u3059\u308b\u306b\u306f\u3069\u3046\u3057\u305f\u3089\u826f\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\nconcept\u306e\u6b74\u53f2(\u8d85\u8981\u7d04)\u3068C++1z(C++17)\n\u3053\u3053\u3067\u3053\u306e\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u6539\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u300cC99\u304b\u3089C++14\u3092\u99c6\u3051\u629c\u3051\u308bC++\u8b1b\u5ea7\u300d\u3067\u3059\u3002\u6b8b\u5ff5\u306a\u304c\u3089C++1z(C++17)\u306e\u6a5f\u80fd\u306f\u7d39\u4ecb\u3067\u304d\u306a\u3044\u308f\u3051\u3067\u3059\u3002\n\u306a\u3093\u3067\u3053\u3093\u306a\u3053\u3068\u3092\u66f8\u304f\u304b\u3068\u3044\u3046\u3068\u3001C++1z\u306bconcept\u306a\u308b\u6a5f\u80fd\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3068\u3082\u3068C++11\u3067\u5165\u308b\u306f\u305a\u306e\u3082\u306e\u3067\u3057\u305f\u304c\u3001\nBjarne Stroustrup\u3001Concept\u3068\u672a\u6765\u3092\u8a9e\u308b | \u672c\u306e\u866b\n\u306b\u3042\u308b\u3088\u3046\u306b\u3001\u304b\u306a\u308a\u3044\u308d\u3044\u308d\u3042\u3063\u3066\u7d50\u5c40\u5165\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u305d\u308c\u304b\u3089\u307e\u3082\u306a\u304f6\u5e74\u3001\u518d\u3073concept\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u65b0\u6a5f\u80fd\"\u30b3\u30f3\u30bb\u30d7\u30c8\"\u3067C++1z\u6642\u4ee3\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u65e9\u304f\u307b\u3057\u3044\u3067\u3059\u3002\u3053\u308c\u304b\u3089\u7d39\u4ecb\u3059\u308bstd::enable_if\u3088\u308a\u3082\u76f4\u611f\u7684\u306a\u306f\u305a\u3067\u3059\u304b\u3089\u3002\n\u8ffd\u8a18:\u3053\u3093\u306a\u3044\u3044\u52a0\u6e1b\u306a\u8aac\u660e\u3088\u308a\u3001\u6c5f\u6dfb\u3055\u3093\u306e\n\u5e30\u3063\u3066\u304d\u305f\u30b3\u30f3\u30bb\u30d7\u30c8 | Boost\u52c9\u5f37\u4f1a #16 \u5927\u962a\n\u304c\u6570\u5343\u500d\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002(\u5ca1\u5c71\u306e\u9676\u82b8\u5bb6(@bolero_MURAKAMI)\u3068\u3067\u3061\u307e\u308b\u3055\u3093\u306e\u5144(@decimalbloat)\u306f\u30ef\u30ed\u30bf)\n\u3057\u304b\u3057\u7121\u3044\u3082\u306e\u306f\u4ed5\u65b9\u306a\u3044\u3067\u3059\u3002std::enable_if\u3092\u7d39\u4ecb\u3057\u307e\u3057\u3087\u3046\u3002\n\u66f4\u306b\u8ffd\u8a18:\u3069\u3046\u3082C++17\u306b\u63d0\u6848\u3055\u308c\u3066\u3044\u305fconcept\u306freject\u3055\u308c\u305f\u3063\u307d\u3044\u30fb\u30fb\u30fb\uff1fC++11\u3067\u3082\u3055\u3093\u3056\u3093\u63c9\u3081\u3066\u5165\u3089\u306a\u304b\u3063\u305f\u306e\u306b\u307e\u305f\u5165\u3089\u306d\u30fc\u306e\u304b\u3088\uff01\nC++17\u306eif constexpr\u3068C++14\u306e\u623b\u308a\u5024\u306bauto\u3092\u4f7f\u3046\u8a18\u6cd5\u3067\u5c11\u3057\u307e\u3057\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u304c\n\n\nC++17\n#include <type_traits>\ntemplate<typename T>\nauto f(const T& a){\n    if constexpr(std::is_integral_v<T>){\n        return a + 1;\n    }\n    else if constexpr(std::is_floating_point_v<T>){\n        return a + 0.1;\n    }\n    else {\n        return a;\n    }\n}\nint main(){\n    using namespace std::literals;\n    [[maybe_unused]] auto a1 = f(1);//result: 2(int)\n    [[maybe_unused]] auto a2 = f(1.0);//result: 1.1(double)\n    [[maybe_unused]] auto a3 = f(\"arikitari\"s);//result: \"arikitari\"(std::string)\n}\n\n\n\u3044\u3084\u3001concept\u304f\u308c\u3002\n\nstd::enable_if\nstd::enable_if\u306a\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3057\u3066\u3001\u3053\u308c\u3092\u4f7f\u3046\u3068SFINAE\u3092\u60aa\u7528\u5229\u7528\u3057\u305f\u578b\u5236\u7d04template\u3092\u66f8\u3051\u307e\u3059\u3002\n\u3044\u308d\u3044\u308d\u6d41\u5100\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u79c1\u306f\nstd::enable_if\u3092\u4f7f\u3063\u3066\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u6642\u3001enabler\u3092\u4f7f\u3046\uff1f\n\u306e\u65b9\u6cd5\u304c\u597d\u304d\u306a\u306e\u3067\u305d\u308c\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002enabler\u3092\u4f7f\u308f\u305a\u3001std::nullptr_t\u3092\u4f7f\u3046\u3068\u3044\u3048\u3070\u4f1d\u308f\u308b\u4eba\u306b\u306f\u4f1d\u308f\u308b\u3067\u3057\u3087\u3046\u3002\n\u4f8b\u3048\u3070\u3001\u7b97\u8853\u578b(int\u3068\u304bdouble\u3068\u304b)\u3060\u3051\u3092\u53d7\u3051\u53d6\u308a\u305f\u3044\u5834\u5408\u3092\u8003\u3048\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306f\u7b97\u8853\u578b\u304b\u5426\u304b\u3092\u5224\u5225\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3046\u3044\u3046\u6642\u306b\u6d3b\u8e8d\u3059\u308b\u306e\u304ctype_traits\u30d8\u30c3\u30c0\u30fc\u3067\u3059\u3002\u3066\u3044\u3046\u304bstd::enable_if\u3082\u3053\u308cinclude\u3057\u306a\u3044\u3068\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u3067\u65e5\u672c\u8a9e\u3088\u308a\u82f1\u8a9e\u306e\u30b5\u30a4\u30c8\u306e\u307b\u3046\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\n<type_traits> - C++ Reference\n\u3092\u898b\u306a\u304c\u3089\u8a71\u3092\u9032\u3081\u307e\u3059\u3002\n\n\u3053\u3093\u306a\u98a8\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u306d\u3002\u7b97\u8853\u578b\u306farithmetic\u3063\u3066\u8a00\u3046\u3093\u3067\u3059\u306d\u30fb\u30fb\u30fb\u3063\u3066\u305d\u3046\u3058\u3083\u306a\u3044\u3002\n\u3064\u307e\u308astd::is_arithmetic\u3092\u3064\u304b\u3048\u3070\u3044\u3044\u3068\u5206\u304b\u308a\u307e\u3059\u3002\nis_arithmetic - C++ Reference\nstd::is_arithmetic<T>::value\n\n\u3053\u308c\u304ctrue\u306b\u306a\u308b\u6642\u3001T\u306f\u7b97\u8853\u578b\u3067\u3059\u306d\u3002\n\u3055\u3066\u3001\u3067\u3042\u3068\u306fstd::enable_if\u3092\u66f8\u304f\u3060\u3051\u3067\u3059\u304c\u3001\u305d\u306e\u524d\u306b\u304a\u307e\u3058\u306a\u3044\u3092\u3002typename\u3063\u3066\u66f8\u304f\u306e\u306f\u3060\u308b\u3044\u306e\u3067\u3002\n\nalias_declaration\u3067\u304a\u307e\u3058\u306a\u3044\nnamespace std{\n    template<bool condition, typename T = void>\n    using enable_if_t = typename std::enable_if<condition, T>::type;\n}\n\n\nstd::enable_if_t\u3063\u3066\u306e\u304c\u6a19\u6e96\u306b\u3042\u308b\u3093\u3067\u3059\u306d\u3002\n\u3067\u306f\u7b97\u8853\u578b\u306e\u307f\u53d7\u3051\u53d6\u308b\u95a2\u6570f\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3088\u3046\u3002\n#include <iostream>\n#include <type_traits>\ntemplate<typename T, std::enable_if_t<std::is_arithmetic<T>::value, std::nullptr_t> = nullptr>\nvoid f(T num)\n{\n    std::cout << \"num:\" << num << std::endl;\n}\nint main()\n{\n    f(3);\n    //f(\"num\");\n    return 0;\n}\n\nhttp://melpon.org/wandbox/permlink/Dfn1NNNNR2lXaYlr\n\u3082\u3057\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3059\u3068\nprog.cc:12:5: error: no matching function for call to 'f'\n    f(\"num\");\n    ^\nprog.cc:3:48: note: candidate template ignored: disabled by 'enable_if' [with T = const char *]\nusing enable_if_type = typename std::enable_if<condition, T>::type;\n                                               ^\n1 error generated.\n\n\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u3084\u3063\u305f\u305c\uff01\n\u3055\u3066\u3001\u3053\u3053\u304b\u3089\u304cSFINAE\u306e\u51fa\u756a\u3067\u3059\u3002\n#include <iostream>\n#include <type_traits>\ntemplate<typename T> struct is_char_type : public std::false_type {};\ntemplate<typename T> struct is_char_type<T const> : public type_traits::is_char_type<T> {};\ntemplate<typename T> struct is_char_type<T volatile> : public type_traits::is_char_type<T> {};\ntemplate<typename T> struct is_char_type<T const volatile> : public type_traits::is_char_type<T> {};\ntemplate<> struct is_char_type<char> : public std::true_type {};\ntemplate<> struct is_char_type<wchar_t> : public std::true_type {};\ntemplate<> struct is_char_type<char16_t> : public std::true_type {};\ntemplate<> struct is_char_type<char32_t> : public std::true_type {};\ntemplate<typename T, std::enable_if_t<std::is_arithmetic<T>::value, std::nullptr_t> = nullptr>\nvoid f(T num)\n{\n    std::cout << \"num:\" << num << std::endl;\n}\ntemplate<typename T, std::enable_if_t<is_char_type<T>::value, std::nullptr_t> = nullptr>\nvoid f(const T* s)\n{\n    std::cout << \"str:\" << s << std::endl;\n}\nint main()\n{\n    f(3);\n    f(\"num\");\n    return 0;\n}\n\n\u3053\u3093\u306a\u98a8\u306b\u6587\u5b57\u5217\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d7\u3051\u53d6\u308b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u3082\u3057SFINAE\u304c\u306a\u3044\u3068f(3)\u3068\u3044\u3046\u547c\u3073\u51fa\u3057\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3070\u3001\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u89e3\u6c7a\u306e\u305f\u3081\u306b\u307e\u305af\u3068\u3044\u3046\u540d\u524d\u306e\u95a2\u6570\u3092\u635c\u7d22\u3057\u30012\u3064\u898b\u3064\u304b\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u4e0b\u306e\u307b\u3046\u306ef\u304c\u547c\u3079\u308b\u304b\u3092\u8abf\u3079\u308b\u3068\u304d\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002\nSFINAE\u306f\u3053\u306e\u30a8\u30e9\u30fc\u3092\u3068\u308a\u3042\u3048\u305a\u7121\u8996(=\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u5019\u88dc\u304b\u3089\u5916\u3059)\u306e\u3067\u95a2\u6570\u304c\u4e00\u3064\u306b\u5b9a\u307e\u308a\u3001\u547c\u3073\u5206\u3051\u304c\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\u3061\u306a\u307f\u306bC++03\u3067\u3082\u4ed5\u69d8\u304c\u66d6\u6627\u3060\u3063\u305f\u3060\u3051\u3067\u4f7f\u3048\u305f\u30b3\u30f3\u30d1\u30a4\u30e9\u3082\u3042\u3063\u305f\u3089\u3057\u3044\u3067\u3059\n\u4efb\u610f\u306e\u5f0f\u306b\u3088\u308bSFINAE - cpprefjp C++\u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\n\u307e\u3068\u3081\u308b\u3068\u3001\u578b\u540dT\u306b\u5236\u7d04\u3092\u66f8\u3051\u308b\u5834\u5408\u306f\ntemplate<typename T, std::enable_if_t<\u8a31\u53ef\u6761\u4ef6(true\u3067\u6709\u52b9), std::nullptr_t> = nullptr>\n\n\u306e\u3088\u3046\u306b\u66f8\u3051\u3070\u3044\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u3053\u308c\u3092\u4f7f\u3063\u3066\u30012\u6b21\u5143\u306epoint\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/Nagarei/DxLibEx/blob/master/dxlibex/basic_types/point2d.hpp#L72\n\u578b\u5236\u7d04\u3092\u304b\u3051\u305f\u3060\u3051\u3067\u306fSFINAE\u306f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3001\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u89e3\u6c7a\u306e\u969b\u306e\u5019\u88dc\u304b\u3089\u5916\u3059\u3053\u3068\u304cSFINAE\u3067\u3059\u3001\u5ff5\u306e\u305f\u3081\n\ntemplate\u3067if\n\u3082\u306f\u3084\u521d\u5fc3\u8005\u3068\u306f\u4f55\u3060\u3063\u305f\u306e\u304b\u3068\u3044\u3046\u5185\u5bb9\u3067\u3059\u304c\u3001\u3055\u308f\u308a\u3060\u3051\u3002\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001C++11\u3067std::conditional\u304c\u5165\u308a\u307e\u3057\u3066\u3001\u307e\u3093\u307eIF\u306a\u306e\u3067\u3001\u305d\u308c\u4f7f\u3048\u3070\u3044\u3044\u3067\u3059\n\u30e1\u30e2\uff1astd::conditional\u3067if\uff5eelse if\uff5eelse\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u898b\u3065\u3089\u3044\nC++0x std::conditional - Faith and Brave - C++\u3067\u904a\u307c\u3046\n//C++11 or later\nusing c_type = typename std::conditional<[(\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8a55\u4fa1\u3067\u304d\u308b)\u6761\u4ef6\u5f0f], [\u771f\u306e\u6642\u306e\u578b], [\u507d\u306e\u6642\u306e\u578b]>::type;\n//C++14 or later\nusing c_type = std::conditional_t<[(\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8a55\u4fa1\u3067\u304d\u308b)\u6761\u4ef6\u5f0f], [\u771f\u306e\u6642\u306e\u578b], [\u507d\u306e\u6642\u306e\u578b]>;\n\n\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3057\u3066\u3001\nVariadic Template \u3092\u4f7f\u3063\u3066 switch \u3092\u4f7f\u3063\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u9664\u53bb\u3059\u308b\nC++ Advent Calendar 2015\u306e2\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u304c\u3053\u3093\u306a\u5177\u5408\u306b\u60aa\u7528\u5229\u7528\u3067\u304d\u307e\u3059\n\u3067\u3059\u304c\u539f\u7406\u3092\u8aac\u660e\u3057\u307e\u3057\u3087\u3046\u3002\n#include <type_traits>\ntemplate <bool Con, class Then, class Else>//(2, 3, 4)\nstruct IF;//(1)\ntemplate <class Then, class Else>//(5)\nstruct IF<true, Then, Else> {//(6)template\u7b2c\u4e00\u5f15\u6570\u304ctrue\u306e\u6642\u306f\u3053\u306e\u5b9a\u7fa9\n    typedef Then type;//(7, 8, 12)\n};\ntemplate <class Then, class Else>//(5)\nstruct IF<false, Then, Else> {//(6)template\u7b2c\u4e00\u5f15\u6570\u304cfalse\u306e\u6642\u306f\u3053\u306e\u5b9a\u7fa9\n    typedef Else type;//(7, 9, 15)\n};\n\n//\u4e2d\u7565\nusing type1 = typename IF<true, int, double>::type;//int\u578b\u306b\u306a\u308b(10, 11, 13)\nusing type2 = typename IF<false, int, double>::type;//double\u578b\u306b\u306a\u308b(10, 14, 16)\n\n\u307e\u308b\u3067\u6697\u53f7\u306e\u3088\u3046\u3060\u3068\u3044\u3046\u58f0\u304c\u805e\u3053\u3048\u3066\u304d\u305d\u3046\u3067\u3059\u3002\u4e00\u3064\u4e00\u3064\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u3001IF\u3068\u3044\u3046\u30af\u30e9\u30b9(struct\u3068\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u539f\u5247public\u6307\u5b9a)\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u3044\u3064\u306ftemplate\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306etemplate\u5f15\u6570\u306f3\u3064\u3067\u3059\n\u4e00\u3064\u76ee\u306fbool\u578b\u30012\u3064\u3081\u30683\u3064\u3081\u306f\u578b\u540d\u3067\u3059\n2\u3064\u306etemplate\u7279\u6b8a\u5316\u304c\u3042\u308a\u307e\u3059\ntemplate\u7b2c1\u5f15\u6570\u304ctrue\u306e\u6642\u3068false\u306e\u6642\u3067\u3059\n2\u3064\u306etemplate\u7279\u6b8a\u5316\u3067\u306f\u3069\u3061\u3089\u3067\u3082\u578b\u540dtype\u304ctypedef\u3055\u308c\u307e\u3059\n\ntemplate\u7b2c1\u5f15\u6570\u304ctrue\u306e\u6642\u3001\u578b\u540dtype\u306ftemplate\u7b2c2\u5f15\u6570\u306e\u5225\u540d\u3068\u306a\u308a\u307e\u3059\u3002\ntemplate\u7b2c1\u5f15\u6570\u304cfalse\u306e\u6642\u3001\u578b\u540dtype\u306ftemplate\u7b2c3\u5f15\u6570\u306e\u5225\u540d\u3068\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\ntemplate\u7b2c1\u5b9f\u5f15\u6570\u306btrue\u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\n\u578b\u540dtype\u306ftemplate\u7b2c2\u5b9f\u5f15\u6570\u306e\u5225\u540d\u306b\u306a\u308b\u306e\u3067int\u578b\u306b\u306a\u308a\u307e\u3059\n\u305d\u308c\u306e\u5225\u540d\u3068\u3057\u3066type1\u3068\u3044\u3046\u65b0\u305f\u306a\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u3067\u3001type1\u306fint\u578b\u3067\u3059\ntemplate\u7b2c1\u5b9f\u5f15\u6570\u306bfalse\u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\n\u578b\u540dtype\u306ftemplate\u7b2c3\u5b9f\u5f15\u6570\u306e\u5225\u540d\u306b\u306a\u308b\u306e\u3067double\u578b\u306b\u306a\u308a\u307e\u3059\n\u305d\u308c\u306e\u5225\u540d\u3068\u3057\u3066type2\u3068\u3044\u3046\u65b0\u305f\u306a\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u3067\u3001type2\u306fdouble\u578b\u3067\u3059\n\n\u8aac\u660e\u3068\u30b3\u30fc\u30c9\u4e2d\u306e()\u306e\u6570\u5b57\u3092\u5bfe\u5fdc\u3055\u305b\u306a\u304c\u3089\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u3067\u3001\u4eca\u56detrue\u3068\u304bfalse\u3068\u304b\u3084\u3063\u3066\u305f\u3068\u3053\u308d\u306f\u3082\u3061\u308d\u3093\u3001std::is_arithmetic\u3068\u304b\u3001\u3068\u306b\u304b\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5024\u304c\u6c7a\u307e\u308c\u3070\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\ntemplate\u3092\u3064\u304b\u3063\u3066\u5165\u529b\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\n\u8ffd\u8a18\n\u5358\u4f53\u306e\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\nhttp://qiita.com/yumetodo/items/2a1d5f855bae6d100658\n\nC++\u521d\u5fc3\u8005Advent Calendar 2015\n\u3053\u306e\u8a18\u4e8b\u306fC++\u521d\u5fc3\u8005Advent Calendar 2015 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\n<<9\u65e5\u76ee  \uff5cClang with Microsoft CodeGen\u304c\u3067\u305f\u306e\u3067\u8a66\u3059\n<<16\u65e5\u76ee | \u30d6\u30ed\u30b0\u30ba\u30df: Boost.Test v3 \u3092\u4f7f\u3063\u3066\u307f\u305f || 18\u65e5\u76ee | \u305d\u308cC++\u306a\u3089#define\u3058\u3083\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u3088 | \u3068\u3055\u3044\u306c\u306e\u96a0\u3057\u90e8\u5c4b >>\n\u6b21\u306f18\u65e5\u76ee\u3001myon___\u3055\u3093\u306e\u300c\u305d\u308c #define \u3058\u3083\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u3088\u300d\u3067\u3059\u306d\u3002constexpr\u3068\u304b\u51fa\u308b\u306e\u304b\u306a(\u304d\u3063\u3068\u51fa\u306a\u3044)\u3068\u601d\u3063\u305f\u3089\u89e6\u308a\u3060\u3051\u3067\u305f\n# C++\u521d\u5fc3\u8005Advent Calendar 2015\n\u3053\u306e\u8a18\u4e8b\u306f[C++\u521d\u5fc3\u8005Advent Calendar 2015](http://www.adventar.org/calendars/922) 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\n[<<9\u65e5\u76ee\t\uff5cClang with Microsoft CodeGen\u304c\u3067\u305f\u306e\u3067\u8a66\u3059](http://qiita.com/yumetodo/items/bd41f31f39dd590e8c80)\n[<<16\u65e5\u76ee | \u30d6\u30ed\u30b0\u30ba\u30df: Boost.Test v3 \u3092\u4f7f\u3063\u3066\u307f\u305f](http://srz-zumix.blogspot.jp/2015/12/boosttest-v3.html) || [18\u65e5\u76ee | \u305d\u308cC++\u306a\u3089#define\u3058\u3083\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u3088 | \u3068\u3055\u3044\u306c\u306e\u96a0\u3057\u90e8\u5c4b >>](https://blog.myon.info/blog/2015-12-18/avoid-defining-macros/)\n\n# \u306f\u3058\u3081\u306b\n\n\u307f\u306a\u3055\u307e\u3001\u30ca\u30de\u30b9\u30c6\u3002\u3055\u3066\u3001\u3053\u306e\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u898b\u3066\u3001\u300c\u6642\u4ee3\u30fb\u30fb\u30fb**\u30b5\u30c8\u30a6\u30ad\u30d3**\u30fb\u30fb\u30fb[\u5fcd\u8005](http://www.nicovideo.jp/user/5006073)\u30fb\u30fb\u30fb\u3046\u3045\u3001\u982d\u304c\u300d\u3068\u306a\u3063\u305f\u4eba\u306f\u79c1\u3068\u8da3\u5473\u304c\u4f3c\u3066\u3044\u307e\u3059\u30fb\u30fb\u30fb\u3063\u3066\u8a71\u306f\u3069\u3046\u3067\u3082\u3044\u3044\u304b\u3002\n\n\u3088\u304f\u3001\u300cC++\u306fBetter C\u3068\u3057\u3066\u306f\u3058\u3081\u308c\u3070\u3044\u3044\u300d\u307f\u305f\u3044\u306a\u8a71\u3092\u805e\u304f\u306e\u3067\u305d\u308c\u306b\u305d\u3063\u3066\u4e00\u6c17\u306bC++14\u307e\u3067\u99c6\u3051\u629c\u3051\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306bC99\u3092\u77e5\u3089\u306a\u3044\u4eba\u306f\u304a\u65ad\u308a\u3067\u3059\u3002\u3055\u3088\u3046\u306a\u3089\u3002\n\n\u3067\u306f\u306f\u3058\u3081\u307e\u3059\u304b\u3002\n\n\u3057\u3063\u304b\u3057\u66f8\u304d\u7d42\u308f\u3063\u3066\u304b\u3089\u601d\u3063\u305f\u3002**\u306a\u305c\u8907\u6570\u306e\u8a18\u4e8b\u306b\u5206\u5272\u3057\u306a\u304b\u3063\u305f\u3057**\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u8d85\u9577\u6587\u3067\u3059\u3002\u3059\u307f\u307e\u305b\u3093\u3002\u305d\u306e\u3046\u3061\u5358\u72ec\u306e\u8a18\u4e8b\u3082\u51fa\u3057\u307e\u3059\u3001\u304d\u3063\u3068\u3002\n\n\u3068\u3053\u308d\u3067\u3001\u5b9f\u306f\u30db\u30c3\u3068\u3057\u3066\u304a\u308a\u307e\u3057\u3066\u3001\u306a\u306b\u304b\u3068\u3044\u3046\u3068\u3001\u524d\u65e5\u306esrz-zumix\u3055\u3093\u306e\u8a18\u4e8b\u304c**\u3061\u3063\u3068\u3082\u521d\u5fc3\u8005\u5411\u3051\u3058\u3083\u306a\u3044**\u3093\u3067\u3059\u3088\u3002**\u521d\u5fc3\u8005\u306fBoost\u306a\u3093\u3066\u4f7f\u3048\u307e\u305b\u3093!!**\n\u66f8\u304d\u7d42\u308f\u3063\u3066\u304b\u3089\u6295\u7a3f\u306b\u6c17\u304c\u4ed8\u3044\u305f\u3093\u3067\u3059\u304c\u3002\u3053\u306e\u8a18\u4e8b\u306e\u5f8c\u534a\u306f\u521d\u5fc3\u8005\u5411\u3051\u3058\u3083\u306a\u3044\u306a\u3041\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u307f\u3066\u300c**\u3053\u308c\u3088\u308a\u306f\u521d\u5fc3\u8005\u5411\u3051\u3060\u308f\u30fc**\u300d\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3059\u3002\n\n\u500b\u4eba\u7684\u306b\u306f\u3001[\u6b4c\u821e\u4f0e\u5ea7.tech #8 \u300cC++\u521d\u5fc3\u8005\u4f1a\u300d](https://ezoeryou.github.io/blog/article/2015-05-18-kabukiza-tech-8.html)\u3068\u304b\u898b\u3066\u4ee5\u964d\u3001\u300c\u521d\u5fc3\u8005\u300d\u304c\u6016\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3057\u305f\u304c([\u521d\u5fc3\u8005\u304cBoost.asio\u3092\u3064\u304b\u3048\u308b\u3082\u3093\u304b\uff01](http://www.shigemk2.com/entry/kbkz_tech.8.3))\u3001\u3055\u3089\u306b\u6016\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u521d\u5fc3\u8005\u6016\u3044\u3002(srz-zumix\u3055\u3093\u3059\u307f\u307e\u305b\u3093)\n\n# =0\u3067\u521d\u671f\u5316\u3092\u3084\u3081\u3088\u3046\n\n\u3055\u3066\u3001C99\u3060\u3068\u521d\u671f\u5316\u3068\u805e\u304f\u3068\n\n```c:C99\nint main()\n{\n  int hoge = 0;\n  //\u7565\n  return 0;\n}\n```\n\n\u307f\u305f\u3044\u306a\u306e\u3092\u30a4\u30e1\u30fc\u30b8\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u8003\u3048\u306f\u6368\u3066\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3068\u3044\u3046\u304b\u305d\u3082\u305d\u3082C99\u3067\u3059\u3089\u3053\u306e\u8003\u3048\u306f\u826f\u304f\u306a\u3044\u3067\u3059\u3002\u306a\u305c\u306a\u3089\u3001**\u521d\u671f\u5316\u3068\u306f\u3001\u5909\u6570\u306a\u3069\u306e\u72b6\u614b\u3092\u30d7\u30ed\u30b0\u30e9\u30de\u306b\u3068\u3063\u3066\u65e2\u77e5\u306b\u3059\u308b\u3053\u3068**\u3060\u304b\u3089\u3067\u3001**\u65ad\u3058\u30660\u306b\u3059\u308b\u3053\u3068\u3067\u306f\u3042\u308a\u307e\u305b\u3093**\u3002\u540c\u3058\u7406\u7531\u3067``memset``\u3092\u4f7f\u3046\u306e\u3082\u8ad6\u7834\u3067\u304d\u307e\u3059(\u3082\u3061\u308d\u3093\u5225\u306e\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u304c)\u3002\n\n\u3055\u3066C++\u3067\u306f\u30af\u30e9\u30b9\u304c\u6709\u308a\u307e\u3059\u3002\u3067\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3068\u3044\u3046\u3068\u3001**\u3044\u3063\u3064\u3082=0\u3063\u3066\u66f8\u3044\u3066\u521d\u671f\u5316\u3067\u304d\u308b\u3068\u601d\u3063\u305f\u3089\u5927\u9593\u9055\u3044\u3060**\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\nhttp://melpon.org/wandbox/permlink/F7I4qUTqkrF4qRlZ\n\n```cpp:=0\u521d\u671f\u5316\u3067\u304d\u306a\u3044\u7c21\u5358\u306a\u4f8b\nstd::pair<int, int> p = 0;//NG\n```\n\n\u3058\u3083\u3042\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n- [\u7d71\u4e00\u521d\u671f\u5316\u30fb\u30ea\u30b9\u30c8\u521d\u671f\u5316\u306e\u898b\u672c\u5e33 - \u30a4\u30b0\u30c8\u30e9\u30f3\u30b9\u306e\u982d\u306e\u4e2d](http://dev.activebasic.com/egtra/2015/12/02/845/)\n- [\u6ce2\u62ec\u5f27\u306e\u521d\u671f\u5316\u304c\u3042\u3063\u3066\u5b09\u3057\u3044\u3068\u304d - \u30a4\u30b0\u30c8\u30e9\u30f3\u30b9\u306e\u982d\u306e\u4e2d](http://dev.activebasic.com/egtra/2015/12/03/847/)\n- [aggregate\u3068\u521d\u671f\u5316\u30ea\u30b9\u30c8\u306e\u4e0d\u601d\u8b70 | \u672c\u306e\u866b](http://cpplover.blogspot.jp/2010/09/aggregate.html)\n- [\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u306f\u8a00\u8a9e\u3092\u8868\u9762\u7684\u306a\u7406\u89e3\u3060\u3051\u3067\u4f7f\u3063\u3066\u3044\u308b | \u672c\u306e\u866b](http://cpplover.blogspot.jp/2010/09/blog-post_18.html)\n- [initializer list\u306e\u89e3\u8aac](http://cpplover.blogspot.jp/2010/03/initializer-list.html)\n- [C++14\u306e\u65b0\u6a5f\u80fd: \u30e1\u30f3\u30d0\u30fc\u521d\u671f\u5316\u5b50\u3068\u521d\u671f\u5316\u30ea\u30b9\u30c8\u306e\u7d44\u307f\u5408\u308f\u305b | \u672c\u306e\u866b](http://cpplover.blogspot.jp/2014/10/c14_2.html)\n- [vector/array\u3068Uniform initialization+Initializer list - yohhoy\u306e\u65e5\u8a18](http://d.hatena.ne.jp/yohhoy/20120724/p1)\n\n\u306f\u3044\u30012\u65e5\u76ee\u30013\u65e5\u76ee\u3067\u3082\u89e3\u8aac\u304c\u3042\u308a\u307e\u3057\u305f\u3057\u3001\u672c\u306e\u866b\u306b\u3082\u3042\u308a\u307e\u3059\u306d\u3002\u7d71\u4e00\u521d\u671f\u5316\u69cb\u6587\u3092\u4f7f\u3048\u3070\u3044\u3044\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\n\n```cpp:\u7d50\u8ad6\nstd::pair<int, int> p3{};//OK\nint hoge{};//OK\nstd::array<int, 4> arr{{}}\n```\n\n\u307e\u3042\u4e0a\u8a18\u306e\u4f8b\u306b\u9650\u3063\u3066\u8a00\u3048\u3070\n\n```cpp\nstd::pair<int, int> p3 = {};//OK\nint hoge = 0;//OK\nstd::array<int, 4> arr = {{}}\n```\n\n\u3068\u3057\u3066\u3057\u307e\u3057\u307e\u3059\u304c\u3001initializer list\u306e\u4ee3\u5165\u306f\u3067\u304d\u306a\u3044\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3002\n\n# std::cout\u3068printf\n\nC++\u3067\u306a\u3093\u304b\u51fa\u529b\u3068\u8a00\u308f\u308c\u305f\u3089\u3084\u3063\u3071\u308a\n\n```cpp:\u3042\u308a\u304d\u305f\u308a\n#include <iostream>\nint main()\n{\n    std::cout << \"arikitari_na_world!\" << std::endl;\n    return 0;\n}\n```\n\n\u3067\u3059\u3088\u306d\u3002\u306a\u3093\u3067printf\u304c\u597d\u307e\u308c\u306a\u3044\u306e\u304b\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u305d\u3082\u305d\u3082printf\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u306f\n\n```c:printf\nint printf ( const char * format, ... );\n```\n\n\u3067\u3059\u306d\u3002\n\n## format\u6307\u5b9a\u3068\u578b\u5b89\u5168\n\u4f8b\u3048\u3070``stdint.h``/``cstdint``\u306b\u3042\u308b``int64_t``\u578b\u3092\u8868\u793a\u3055\u305b\u305f\u3044\u5834\u5408\u3001\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n```c:C99\n#include <stdint.h>\n#include <stdio.h>\nint64_t num = 4288957324576;\n//\u3069\u3063\u3061\uff1f\nprintf(\"%lld\", num);\nprintf(\"%I64d\", num);\n```\n\n\u3053\u306e2\u3064\u3092``#if``\u3064\u304b\u3063\u3066\u5206\u3051\u308b\u3068\u3044\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306d\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3082\u3061\u308d\u3093\u305d\u3093\u306a\u3053\u3068\u306f\u306a\u304f\u3001\u6a19\u6e96\u306b\u305d\u308c\u3092\u3084\u3063\u3066\u304f\u308c\u308b\u30de\u30af\u30ed\u304c\u3042\u308a\u307e\u3059\u3002``#define __STDC_FORMAT_MACROS`` & ``#include <inttypes.h>`` (C99) / ``#include <cinttypes>`` (C++11) \u306e\u30de\u30af\u30ed\u3092\u3064\u304b\u3063\u3066\u3001\n\n```c:\u30b3\u30e1\u30f3\u30c8\u3067\u3082\u3089\u3063\u305f\u30b3\u30fc\u30c9\n#include <stdint.h>\n#include <stdio.h>\n#include <inttypes.h>\n\nint64_t num = 4288957324576;\nprintf(\"%\"PRId64, num);\n```\n\n\u3053\u3046\u66f8\u304f\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\u3001\u6587\u5b57\u5217\u304c(\u30de\u30af\u30ed\u3067\u9023\u7d50\u3055\u308c\u307e\u3059\u304c)\u3068\u304e\u308c\u3066\u898b\u3048\u307e\u3059\u3002\u3053\u308c\u306f\u306a\u304b\u306a\u304b\u307f\u306b\u304f\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b(\u79c1\u898b)\u3002\n\n\u554f\u984c\u306f**\u3055\u3089\u306b\u6df1\u3044**\u3067\u3059\u3002format\u6307\u5b9a\u3059\u308b\u3053\u3068\u306e\u5229\u70b9\u306f\u51fa\u529b\u3055\u308c\u308b\u3082\u306e\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u5bfe\u5fdc\u3055\u305b\u308b\u3079\u304d\u578b\u304c\u7121\u9650\u306b\u5b58\u5728\u3059\u308b\u5834\u5408\u3001**\u7121\u9650\u901a\u308a\u306eformat\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059**\u3002\u6050\u308d\u3057\u3084\u3002STL\u306b\u5165\u3063\u3066\u3044\u308b\u578b\u306e\u3046\u3061\u5bfe\u5fdc\u3055\u305b\u308b\u3079\u304d\u3082\u306e\u3060\u3051\u3067\u3082\u3044\u304f\u3064\u3042\u308b\u3093\u3067\u3059\u304b\u306d\u3001\u899a\u3048\u3089\u308c\u308b\u304b\u3002\n\n\u3055\u3089\u306b\u578b\u5b89\u5168\u306a\u3082\u306e\u306b\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u3001\u3064\u307e\u308a\u3001**format\u6307\u5b9a\u304c\u9069\u5207\u304b\u3092\u8abf\u3079\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u3059\u308b\u306b\u306f\u3001\u3069\u308c\u3060\u3051\u82e6\u52b4\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b**\u3002\u5148\u306e\u3088\u3046\u306a\u30de\u30af\u30ed\u3082\u305f\u304f\u3055\u3093\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u308c\u3067\u3082\u578b\u5b89\u5168printf\u3092\u3064\u304f\u308b\u3079\u304f\u7acb\u3061\u5411\u304b\u3046\u4eba\u305f\u3061\u306f\u5f8c\u3092\u7acb\u3061\u307e\u305b\u3093\u3002\n\n## \u7d50\u8ad6\n\n```cpp\n#include <iostream>\n#include <cstdint>\n#include <string>\nint main()\n{\n    std::int64_t num = 4288957324576;\n    std::size_t s = 32;\n    std::string str = \"arikitari\";\n    std::cout << num << \", \" << s << \", \" << str << std::endl;\n    return 0;\n}\n```\n\ntemplate\u304c\u4f7f\u3048\u308b\u304a\u304b\u3052\u3067\u3001\u81a8\u5927\u306a\u578b\u5168\u3066\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3057\u305f\u3002format\u304c\u3042\u308b\u304b\u3089\u9762\u5012\u306a\u3093\u3060\u3001\u3068\u3044\u3046\u8ad6\u6cd5\u3067\u3059\u306d\u3002\n\n\u3042\u3042\u3001\u3061\u306a\u307f\u306b[fmtlib/fmt](https://github.com/fmtlib/fmt)\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u3063\u3066\u3001\u9ad8\u901f\u304b\u3064C#\u306b\u8fd1\u3044Syntax\u3067\u66f8\u3051\u307e\u3059\u3002\n[C++ Advent Calendar 2014](http://qiita.com/advent-calendar/2014/cpp)\u306e17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3042\u308b\n[\u4eca\u5e74\u6c17\u306b\u306a\u3063\u305f C++ \u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u304b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u7d39\u4ecb\u3059\u308b\u8a18\u4e8b - \u306f\u3084\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308a\u305f\u3044](http://rhysd.hatenablog.com/entry/2014/12/17/000053)\n\u306b\u7d39\u4ecb\u304c\u3042\u308a\u307e\u3059\u30022017/02/02\u73fe\u5728\u3082\u6d3b\u767a\u306b\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n# auto\n\n\u3044\u308f\u3086\u308b\u578b\u63a8\u8ad6\u3067\u3059\u306d\u3002[\u3069\u3053\u305e\u306e](http://d.hatena.ne.jp/nowokay/20131224)[\u7cde\u8a00\u8a9e](http://cpplover.blogspot.jp/2009/11/java-7.html)[(Java)](http://docs.oracle.com/javase/jp/8/docs/technotes/guides/language/type-inference-generic-instance-creation.html)\u3092\u9664\u3051\u3070\u3001\u578b\u63a8\u8ad6\u306f\u53f3\u8fba\u306e\u578b\u304b\u3089\u5de6\u8fba\u306e\u578b\u3092\u63a8\u6e2c\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\n```cpp\nint num = 2;\nauto re = 5 / num;//int\u578b\u30012\u306b\u306a\u308b\n```\n\n\u7d44\u307f\u8fbc\u307f\u578b\u304f\u3089\u3044\u306fauto\u4f7f\u308f\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u304c\u3001``std::array::iterator``\u3068\u304b``std::vector<std::vector<int>>::iterator``\u3068\u304b\u308f\u3051\u308f\u304b\u3081\u306a\u9577\u3055\u306e\u578b\u304c\u4f7f\u308f\u308c\u308b\u306e\u3067\u5fc5\u9808\u6a5f\u80fd\u3067\u3059\u3002\n\u3042\u3001\u3042\u3068TMP\u3059\u308b\u6642\u30fb\u30fb\u30fb(ry\n\n\u3053\u306e\u8fba\u306f\u3044\u306a\u3080\u5148\u751f\u304c\u3001[C++\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc](http://www.adventar.org/calendars/926)12\u65e5\u76ee\u3067\n[C++\u306e\u3064\u307e\u305a\u304d\u30dd\u30a4\u30f3\u30c8\u89e3\u8aac](http://qiita.com/_EnumHack/items/a3724dead343b5aecb4e)\n\u8a73\u3057\u304f\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5c11\u3057\u96e3\u3057\u76ee\u3067\u3059\u304c\u305c\u3072\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n# std::pair\n\n\u3055\u3066\u3001\u3053\u3044\u3064\u306f\u306a\u306b\u304b\u3068\u4fbf\u5229\u3067\u3059\u3002\u7d14\u7c8b\u306b\uff12\u3064\u306e\u5909\u6570\u3092\u307e\u3068\u3081\u308b\u3060\u3051\u306e\u3082\u306e\u3067\u3059\n\n```c\ntypedef struct {\nint first;\nint second;\n} PIAR;\n```\n\n\u307f\u305f\u3044\u306a\u3082\u306e\u3092\u4e8c\u5ea6\u3068\u66f8\u304b\u306a\u304f\u3066\u826f\u304f\u306a\u308a\u307e\u3059\u3002\uff12\u3064\u30da\u30a2\u306e\u3082\u306e\u3063\u3066\u591a\u3044\u3067\u3059\u304b\u3089\u306d\u3002\u5ea7\u6a19\u3068\u304b\u3001\u753b\u50cf\u306e\u5927\u304d\u3055\u3068\u304betc...\n\n\u5c02\u7528\u306e\u30af\u30e9\u30b9\u3092\u66f8\u304f\u307e\u3067\u3082\u306a\u3044\u3068\u304d\u306b\u91cd\u5b9d\u3057\u307e\u3059\u3002\n\n[C++\u3067\u30de\u30a4\u30ca\u30f3\u30d0\u30fc\u306e\u30c1\u30a7\u30c3\u30af\u30c7\u30b8\u30c3\u30c8\u3092\u8a08\u7b97\u3059\u308b](http://qiita.com/yumetodo/items/600ca0df422010cbc4c1)\n\u3053\u3053\u3067\u306f\n\n```cpp:\u30de\u30a4\u30ca\u30f3\u30d0\u30fc\n#include <string>\n#include <utility>\n#include <numeric>\n#include <stdexcept>\n#include <cctype>\nint calc_check_digit(const std::string& n) noexcept(false) {\n    if (11 != n.size()) throw std::runtime_error(\"n.digit must be 11\");\n    const int r = std::accumulate(n.rbegin(), n.rend(), std::pair<int, int>{}, [](const auto& s, const char& e) -> std::pair<int, int>{\n        if(!std::isdigit(e)) throw std::runtime_error(\"n.digit must be 11\");\n        return {s.first + (e - '0') * ((5 < s.second) ? s.second - 4 : s.second + 2), s.second + 1};\n    }).first % 11;\n    return (0 == r || 1 == r) ? 0 : 11 - r;\n}\n```\n\nfirst\u3092\u5408\u8a08\u3001secound\u3092\u30eb\u30fc\u30d7\u30ab\u30a6\u30f3\u30c8\u306b\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n# std::array\n\n\u914d\u5217\u3067\u3059\u3002\u8aac\u660e\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u30fb\u30fb\u30fb\u5618\u3067\u3059\u3002\n\nC\u306b\u3082\u914d\u5217\u304c\u3042\u3063\u3066\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#ifndef _countof\n#define _countof( arr ) ( sizeof(arr) / sizeof(arr[0]))\n#endif\nint main()\n{\n\tint arr[3] = { 3, 4, 2 };\n\tfor(size_t i = 0; i < _countof(arr); ++i) printf(\"%d,\", arr[i]);\n\treturn 0;\n}\n```\n\n\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3053\u3068\u306f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u3053\u308cC++\u3060\u3068\n\n```cpp\n#include <iostream>\nint main()\n{\n\tint arr[3] = { 3, 4, 2 };\n\tfor(auto it = std::begin(arr); it != std::end(arr); ++it) std::cout << *it << \", \";\n\treturn 0;\n}\n```\n\n\u3053\u3046\u66f8\u3051\u307e\u3059\u3002``std::begin``\u3068``std::end``\u304c\u914d\u5217\u306b\u3082\u4f7f\u3048\u308b\u3093\u3067\u3059\u306d\u3002\n\n``std::array``\u3092\u4f7f\u3046\u3068\n\n```cpp\n#include <iostream>\n#include <array>\nint main()\n{\n\tstd::array<int, 3> arr = { 3, 4, 2 };\n\tfor(auto it = arr.begin(); it != arr.end(); ++it) std::cout << *it << \", \";\n\treturn 0;\n}\n```\n\u3067\u3001C\u306e\u914d\u5217\u3067\u306f\u306a\u304f``std::array``\u3092\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\u306f\u3001\n\n- ``back()``(\u6700\u5f8c\u306e\u8981\u7d20\u3092\u53d6\u5f97)\u3084``size()``(\u914d\u5217\u306e\u5927\u304d\u3055\u3092\u53d6\u5f97)\u304c\u4f7f\u3048\u308b\n- **\u5f0f\u4e2d\u3067\u30dd\u30a4\u30f3\u30bf\u3068\u307f\u306a\u3055\u308c\u306a\u3044**\n\n\u5f0f\u4e2d\u3067\u30dd\u30a4\u30f3\u30bf\u3068\u307f\u306a\u3055\u308c\u306a\u3044\u3068\u306f\u3069\u3046\u3044\u3046\u3053\u3063\u3061\u3083\uff1f\u3067\u3059\u304c\u3001\u4f8b\u3048\u3070C\u3067\u8981\u7d20\u578b\u304cint\u578b\u306e\u914d\u5217\u306e\u5168\u8981\u7d20\u3092\u8868\u793a\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308b\u3053\u3068\u3092\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n```c:C\u7248\u306e\u914d\u5217\u5168\u8981\u7d20\u3092\u8868\u793a\u95a2\u6570\n#include <stdio.h>\nvoid array_print(const int * arr, size_t size)\n{\n    for(size_t i = 0; i < size; ++i) printf(\"%d, \", arr[i]);\n}\n```\n\nC\u3067\u306f\u5fa1\u5b58\u77e5\u306e\u901a\u308a\u3001**\u914d\u5217\u306f3\u3064\u306e\u4f8b\u5916\u3092\u9664\u304d\u3001\u5e38\u306b\u30dd\u30a4\u30f3\u30bf\u306b\u8aad\u307f\u66ff\u3048\u3089\u308c\u307e\u3059**\u30023\u3064\u306e\u4f8b\u5916\u306e1\u3064\u306f``sizeof``\u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u5834\u5408\u3067\u3059\u304c\u3001\n\n```c\n#include <stdio.h>\nvoid f(int arr[])\n{\n    printf(\"%d\", sizeof(arr));//arr\u306fint*\u578b\n}\nint main()\n{\n    int arr[5];\n    printf(\"%d\", sizeof(arr));//arr\u306fint[5]\u578b\n    f(arr);\n    return 0;\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u8981\u7d20\u6570\u306e\u578b\u30c7\u30fc\u30bf\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u308f\u3051\u3067\u3059\u3002\n\nC++\u3092\u4f7f\u3048\u3070\u3082\u3046\u3059\u3053\u3057\u30de\u30b7\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```cpp\n#include <iostream>\n#include <cstddef>\ntemplate<std::size_t N> void f(const int (&arr)[N])\n{\n    std::cout << sizeof(arr);//arr\u306fconst int (&)[5]\u578b\n}\nint main()\n{\n    int arr[5];\n    std::cout << sizeof(arr);//arr\u306f//arr\u306fint[5]\u578b\n    f(arr);\n    return 0;\n}\n```\n\n\u8981\u7d20\u6570\u30c7\u30fc\u30bf\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6e21\u305b\u3066\u3044\u307e\u3059\u3057\u3001\u3053\u306e\u3042\u3068\u8aac\u660e\u3059\u308b\u53c2\u7167\u3092\u4f7f\u3046\u3053\u3068\u3067\u914d\u5217\u3068\u5168\u304f\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001**\u521d\u5fc3\u8005\u306b\u306ftemplate\u306a\u3093\u3066\u7121\u7406\u3067\u3059**\u3002\u3068\u3044\u3046\u304b\u30bf\u30a4\u30d7\u6570\u304c\u591a\u3059\u304e\u3066\u3084\u3063\u3066\u3089\u308c\u307e\u305b\u3093\u3002\n\n\u305d\u3053\u3067``std::array``\u3067\u3059\u3002\n\n```cpp\n#include <iostream>\n#include <array>\nvoid f(const std::array<int, 5>& arr)\n{\n    std::cout << arr.size();\n}\nint main()\n{\n    std::array<int, 5> arr;\n    std::cout << arr.size();\n    f(arr);\n    return 0;\n}\n```\n\n\u3059\u3063\u304d\u308a\u3002\u306a\u304a``size()``\u306f\u660e\u65e5\u306emyon___\u6c0f\u304c\u8a18\u4e8b\u3067\u66f8\u3044\u3066\u304f\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001``constexpr``\u95a2\u6570\u306a\u306e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5024\u304c\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u3069\u3053\u305e\u306e[\u9676\u82b8\u5bb6\u3067\u4e2d\uff13\u5973\u5b50](http://boleros.hateblo.jp/)\u306a\u4eba\u304c\u559c\u3073\u305d\u3046\u3002\n\n# Range-based for\n\nRange-based for\u3068\u306fC\u306e\u914d\u5217\u3068\u3001``begin()``/``end()``\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u3082\u3064\u30af\u30e9\u30b9\u578b\u3068(\u7279\u6b8a\u306a?)ADL\u3067``begin()``/``end()``\u95a2\u6570\u304c\u898b\u3064\u304b\u308b\u578b\u306b\u306e\u307f\u63d0\u4f9b\u3067\u304d\u308bfor\u6587\u3067\u3059\u3002\u3044\u308f\u3086\u308bforeach\u3067\u3059\u306d\u3002\n\n\n```cpp:Range-based_for\u4e0d\u4f7f\u7528\n#include <iostream>\nint main()\n{\n\tint arr[3] = { 3, 4, 2 };\n\tfor(auto it = std::begin(arr); it != std::end(arr); ++it) std::cout << *it << \", \";\n\treturn 0;\n}\n```\n\n\u3053\u308c\u304c\n\n```cpp:Range-based_for\u4f7f\u7528\n#include <iostream>\nint main()\n{\n\tint arr[3] = { 3, 4, 2 };\n\tfor(auto&& e : arr) std::cout << e << \", \";\n\treturn 0;\n}\n```\n\n```cpp:Range-based_for\u4e0d\u4f7f\u7528\n#include <iostream>\n#include <array>\nint main()\n{\n\tstd::array<int, 3> arr = { 3, 4, 2 };\n\tfor(auto it = arr.begin(); it != end(); ++it) std::cout << *it << \", \";\n\treturn 0;\n}\n```\n\n\u3053\u308c\u304c\n\n```cpp:Range-based_for\u4f7f\u7528\n#include <iostream>\n#include <array>\nint main()\n{\n\tstd::array<int, 3> arr = { 3, 4, 2 };\n\tfor(auto&& e : arr) std::cout << e << \", \";\n\treturn 0;\n}\n```\n\n\u3053\u3046\u66f8\u3051\u307e\u3059\u3002``auto&&``\u3063\u3066\u306e\u306fRange-based_for\u3092\u4f7f\u3046\u969b\u306e\u304a\u307e\u3058\u306a\u3044\u3067\u3059\u3002\u30eb\u30fc\u30d7\u5185\u3067\u30eb\u30fc\u30d7\u5bfe\u8c61\u3092\u66f8\u304d\u63db\u3048\u306a\u3044\u306a\u3089``const auto&``\u306e\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u524d\u8005\u306e\u65b9\u304c**\u6c4e\u7528\u7684\u306a\u306e\u3067\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u6642\u306f\u524d\u8005\u3092\u4f7f\u3048\u3070\u3044\u3044**\u3068\u601d\u3044\u307e\u3059\u3002\u304a\u307e\u3058\u306a\u3044\u306e\u539f\u7406\u306f\n[range-based for loops\u306e\u8981\u7d20\u306e\u578b\u306b\u3064\u3044\u3066](http://qiita.com/rinse_/items/cdfce8aa6a685a8ebe0c)\n\u3068\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u4e0b\u3067\u8a71\u3059Reference\u306e\u7a2e\u985e\u3068\u53c2\u7167\u3067\u304d\u308b\u3082\u306e\u304c\u95a2\u4fc2\u3057\u307e\u3059\u3002\n\n\n\n# Reference\n\n\u53c2\u7167\u3001\u3068\u8a00\u3063\u305f\u307b\u3046\u304c\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002**Reference\u3068\u306f\u3059\u3067\u306b\u3042\u308b\u5024\u306b\u5bfe\u3057\u5225\u540d\u3092\u3064\u3051\u308b\u6a5f\u80fd\u3067\u3059\u3002**\n\u3067\u3001Reference\u3067\u3059\u304c\u3001\u5927\u304d\u304f\u308f\u3051\u3066lvalue reference\u3068rvalue reference\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3067\u3001\u3053\u306e2\u3064\u306b\u3069\u3093\u306a\u5dee\u304c\u3042\u308b\u306e\u304b\u3001\u3067\u3059\u304c\u3001\u53c2\u7167\u3067\u304d\u308b\u3082\u306e\u306e\u578b\u3092\u9664\u3051\u3070**\u306a\u306b\u3082\u9055\u3044\u306f\u3042\u308a\u307e\u305b\u3093**\u3002\u3088\u304frvalue reference\u306flvalue reference\u3068\u5168\u304f\u7570\u306a\u308b\u3001\u3068\u8003\u3048\u3066\u9055\u3044\u3092\u8003\u3048\u3059\u304e\u308b\u3042\u307e\u308a\u3001\u308f\u3051\u308f\u304b\u3081\u306b\u306a\u308b\u4eba\u304c\u3044\u307e\u3059\u304c\u3001Reference\u306b\u306f\u9055\u3044\u306a\u3044\u306e\u3067\u3059\u3002\n\n| \u7a2e\u985e                              | \u53c2\u7167\u3067\u304d\u308b\u3082\u306e |\n|-----------------------------------|----------------|\n| lvalue reference(T&)              | lvalue         |\n| const lvalue rederence(const T&)  | **\u306a\u3093\u3067\u3082**   |\n| rvalue reference (T&&)            | rvalue         |\n| const rvalue reference(const T&&) | const rvalue   |\n\n```cpp:Reference\u306e\u4f8b\nstruct Test{\n\tint e;\n};\nconst Test make_Test(){ return Test(); }\nint main()\n{\n\tint a = 0;\n\tconst int b = 2;\n\tTest t;\n\tint& a_lr = a;\n\tconst int& a_clr = a;//OK\n\t//int& b_lr = b;//NG\n\tconst int& b_clr = b;//OK\n\tTest& t_lr = t;//OK\n\tTest&& t_rr = Test();//OK\n\tconst Test& t_clr = Test();//OK\n\tconst Test&& t_crr = make_Test();//OK\n\tconst Test& t_clr = make_Test();//OK\n\treturn 0;\n}\n```\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3001``const lvalue reference``\u304c\u7121\u53cc\u3068\u3044\u3046\u304b\u6700\u5f37\u306a\u306e\u3067\u3001rvalue reference\u306f\u3042\u307e\u308a\u51fa\u756a\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n## rvalue reference\u3092\u30e0\u30fc\u30d6\u306b\u4f7f\u3046\n\n\u3055\u3066\u3001\u3056\u3063\u3068const\u306e\u6709\u7121\u3092\u542b\u3081\u30664\u3064\u306ereference\u304c\u3042\u3063\u305f\u308f\u3051\u3067\u3059\u304c\u3001rvalue reference\u306b\u51fa\u756a\u304c\u7121\u3044\u304b\u3068\u3044\u3046\u3068\u305d\u3093\u306a\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u3042\u4ed6\u306b\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u6700\u3082\u4e00\u822c\u7684\u306a\u4f8b\u3067\u3042\u308brvalue reference\u306e\u7528\u9014\u3001move\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u306f\u540c\u3058\u3067\u3082**\u578b\u306f\u9055\u3044\u307e\u3059**\u3002\u307e\u305f\u3001\u305d\u308c\u305e\u308c**\u512a\u5148\u9806\u4f4d\u304c\u3042\u308a\u307e\u3059**\u3002\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u95a2\u6570\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u578b\u3092\u5909\u3048\u308c\u3070\u547c\u3073\u5206\u3051\u304c\u3067\u304d\u308b\u3068\u3046\u3053\u3068\u3067\u3059\u3002\n\u512a\u5148\u9806\u4f4d\u306e\u8a73\u7d30\u306f\n[const rvalue reference\u306f\u4f55\u306b\u4f7f\u3048\u3070\u3044\u3044\u306e\u304b - \u3053\u3053\u306f\u5323](http://fimbul.hateblo.jp/entry/2013/12/22/015912)\n\u3092\u53c2\u7167\u3057\u3066\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u3001\u7c21\u5358\u306a\u4f8b\u3092\u898b\u307e\u3057\u3087\u3046\u3002\u30fb\u30fb\u30fb\u30af\u30e9\u30b9\u304c\u306a\u306b\u304b\u306e\u8aac\u660e\u306f\u7701\u304d\u307e\u3059\u3002\n\n```cpp:\u306a\u3093\u3061\u3083\u3063\u3066string\u30af\u30e9\u30b9\n#include <cstring>\n#include <cstddef>\n#include <iostream>\nclass inferior_string\n{\npublic:\n\tinferior_string() noexcept : m_s_(nullptr), m_len_(0), m_capacity_(0) {}\n\tinferior_string(const char* str)\n\t{\n\t\tconst std::size_t len = (nullptr == str) ? 0 : std::strlen(str);\n\t\tif(0 == len){\n\t\t\tthis->m_s_ = nullptr;\n\t\t\tthis->m_len_ = this->m_capacity_ = 0;\n\t\t}\n\t\telse{\n\t\t\tconst std::size_t cap = 2 * len;\n\t\t\tthis->m_s_ = new char[cap]();\n\t\t\tstd::memcpy(this->m_s_, str, len);//copy\n\n\t\t\tthis->m_len_ = len;\n\t\t\tthis->m_capacity_ = cap;\n\t\t}\n\t}\n\tinferior_string(const inferior_string& o)//copy constructor\n\t{\n\t\tif(0 == o.m_len_){\n\t\t\tthis->m_s_ = nullptr;\n\t\t\tthis->m_len_ = this->m_capacity_ = 0;\n\t\t}\n\t\telse{\n\t\t\tconst std::size_t cap = o.m_len_ * 2;\n\t\t\tthis->m_s_ = new char[cap]();\n\t\t\tstd::memcpy(this->m_s_, o.m_s_, o.m_len_);//copy\n\t\t\tthis->m_len_ = o.m_len_;\n\t\t\tthis->m_capacity_ = cap;\n\t\t}\n\t}\n\tinferior_string(inferior_string&& o) noexcept\n\t: m_s_(o.m_s_), m_len_(o.m_len_), m_capacity_(o.m_capacity_)//move constructor\n\t{\n\t\to.m_s_ = nullptr;//disable input object's destructor. DO NO FORGEET!!!\n\t}\n\t~inferior_string()\n\t{\n\t\tdelete[] this->m_s_;\n\t}\n\tconst char* c_str() const noexcept { return this->m_s_; }\nprivate:\n\tchar* m_s_;\n\tstd::size_t m_len_;\n\tstd::size_t m_capacity_;\n};\nstd::ostream& operator<< (std::ostream& os, const inferior_string& str){\n\tos << str.c_str();\n\treturn os;\n}\nint main()\n{\n\tinferior_string str = \"arikitari\";\n\tinferior_string str2 = str;//copy constructor call\n\tstd::cout << str << \", \" << str2 << \", \";\n\tinferior_string str3 = std::move(str);//move constructor call\n\t//inferior_string str3 = static_cast<inferior_string&&>(str);//\u540c\u3058\u610f\u5473\n\tstd::cout << str3 << std::endl;\n\treturn 0;\n\n}\n```\nhttp://melpon.org/wandbox/permlink/Ame2XHIjS0oB0oLW\n\n\u3053\u306e\u5834\u5408\u3001``const inferior_string&``\u3088\u308a``inferior_string&&``\u306e\u307b\u3046\u304c\u3001\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u512a\u5148\u9806\u4f4d\u304c\u9ad8\u3044\u306e\u3067\u3001\n\n```cpp\ninferior_string str3 = static_cast<inferior_string&&>(str);\n```\n\n\u3053\u308c\u306finferior_string&&\u3092\u53d7\u3051\u53d6\u308b\u3001move constructor\u304c\u547c\u3070\u308c\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u30ad\u30e3\u30b9\u30c8\u3092\u66f8\u304f\u306e\u306f\u3060\u308b\u3044\u306e\u3067\n\n```cpp\ninferior_string str3 = std::move(str);\n```\n\n\u3068\u66f8\u304f\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\n\n\u3053\u3046\u3057\u3066\u307f\u3066\u308f\u304b\u3063\u305f\u3088\u3046\u306b\u3001**\u65ad\u3058\u3066rvalue reference\u81ea\u4f53\u306b\u306fmove\u6a5f\u80fd\u306f\u3042\u308a\u307e\u305b\u3093**\u3002\u305f\u304b\u304c\u53c2\u7167\u306b\u4e00\u4f53\u4f55\u3092\u6c42\u3081\u3066\u308b\u306e\u3055\u3002\n\n\u3053\u306e\u8fba\u3082\u3044\u306a\u3080\u5148\u751f\u304c\u3001[C++\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc](http://www.adventar.org/calendars/926)12\u65e5\u76ee\u3067\n[C++\u306e\u3064\u307e\u305a\u304d\u30dd\u30a4\u30f3\u30c8\u89e3\u8aac](http://qiita.com/_EnumHack/items/a3724dead343b5aecb4e)\n\u8a73\u3057\u304f\u66f8\u3044\u3066\u3044\u308b\u306e\u3067(ry\n\n\u5ff5\u306e\u70ba\u306b\u5f15\u7528\u3057\u3066\u304a\u304d\u307e\u3059\n\n>http://cpplover.blogspot.jp/2009/12/rvalue-reference.html\n>std::move()\u3092\u3001\u4f55\u304b\u30b3\u30a2\u8a00\u8a9e\u306e\u6a5f\u80fd\u306e\u3088\u3046\u306b\u52d8\u9055\u3044\u3057\u3066\u3044\u307e\u305b\u3093\u304b\uff1f\n\u3042\u304f\u307e\u3067Semantics\u3067\u3059\u3002\nstd::move\u306f\u3001static_cast(a)\u3000\u3092\u3057\u3066\u3044\u308b\u306b\u3059\u304e\u306a\u3044\u306e\u3067\u3059\u3002\nrvalue reference\u3082\u3001\u5358\u306a\u308breference\u306b\u904e\u304e\u306a\u3044\u306e\u3067\u3059\u3002\nMove Semantics\u3068\u306f\u3001\u305f\u3093\u306blvalue\u3068rvalue\u3092\u3001movable\u306a\u30d5\u30e9\u30b0\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u308b\u306b\u904e\u304e\u306a\u3044\u306e\u3067\u3059\u3002\n\n>\u305d\u306e\u4ed6\u306f\u3001lvalue reference\u306e\u5834\u5408\u3068\u3001\u4f55\u3082\u5909\u308f\u308a\u3042\u308a\u307e\u305b\u3093\u3002\nlvalue reference\u3067\u3001\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u304b\u3089\u3068\u8a00\u3063\u3066\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u305d\u306e\u5f8c\u4f7f\u3048\u306a\u304f\u306a\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\u3082\u3061\u308d\u3093\u3001\u53c2\u7167\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304b\u3089\u3001public\u306a\u30e1\u30f3\u30d0\u5909\u6570\u306b\u5bfe\u3057\u3066\u3001\u7834\u58ca\u7684\u306a\u66f8\u304d\u63db\u3048\u3082\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\n**\u5358\u306blvalue\u3068rvalue\u3092\u3001movable\u306a\u30d5\u30e9\u30b0\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u308b\u306b\u904e\u304e\u306a\u3044**\u3093\u3067\u3059\u3002\n\n# std::string\n\n\u3055\u304d\u307b\u3069\u306a\u3093\u3061\u3083\u3063\u3066\u6587\u5b57\u5217\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3057\u305f\u304c\u3001\u3061\u3083\u3093\u3068C++\u306b\u306f``std::string``\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n**\u3068\u3044\u3046\u304bC\u3067\u6587\u5b57\u5217\u64cd\u4f5c\u3059\u308b\u306a\u3001\u305d\u3046\u3044\u3046\u3053\u3068\u3059\u308b\u8a00\u8a9e\u3058\u3083\u306a\u3044\uff01\uff01**\n\n```cpp\n#include <iostream>\n#include <string>\nint main()\n{\n\tusing std::cout;\n\tusing std::endl;\n\tstd::string str1 = \"arikitari_na_world!\";\n\tcout << str1 << endl;\n\tstr1.popback();//\u6700\u5f8c\u306e\u4e00\u6587\u5b57\u6d88\u53bb\n\tcout << str1 << endl;\n\tconst auto str2 = str1.substr(0, str1.find_first_of('_'));//\u6700\u521d\u306e'_'\u3088\u308a\u524d\u3092\u629c\u304d\u51fa\u3057('_'\u306f\u542b\u3081\u306a\u3044)\n\tcout << str2 << endl;\n\tconst auto str3 = str2 + \"_toha\";//\u6587\u5b57\u5217\u306e\u9023\u7d50\n\tcout << str3 << endl;\n\treturn 0;\n}\n```\n\n\u30fb\u30fb\u30fb\u307e\u3042\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\u4f8b\u3048\u3070\u30d5\u30eb\u30d1\u30b9\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u540d\u3060\u3051\u307b\u3057\u3044\u6642\u306f\n\n```cpp\n#include <iostream>\n#include <string>\nstd::string get_n(const std::string& fullpath)\n{\n\treturn fullpath.substr(fullpath.find_last_of(\"\\\\/\"), fullpath.find_last_of('.'));\n}\nint main()\n{\n\tusing std::cout;\n\tusing std::endl;\n\tstd::string str1 = \"C:\\\\Users\\\\yumetodo\\\\OneDrive\\\\\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\\\\\u6771\u4eac\u7406\u79d1\u5927\\\\\u7269\u7406\u5b66\u5b9f\u9a13\\\\fit.log\";\n\tcout << str1 << endl;\n\tcout << get_n(str1) << endl;\n\treturn 0;\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\u3068\u3063\u3066\u3082\u697d\u3002\n\n**\u3082\u3063\u3068\u521d\u5fc3\u8005\u5411\u3051**\u306a\u8aac\u660e\u306f\n[22\u65e5\u76ee| C++\u306e\u6587\u5b57\u5217\u51e6\u7406\u95a2\u4fc2\u3068\u6b63\u898f\u63a2\u7d22\uff08\u672a\u5b8c\uff09\u306b\u3064\u3044\u3066 - \u6c34\u9762\u4e0b\u306e\u5922](http://yumechi0525.hatenablog.com/entry/2015/12/23/004020)\n\u3078\u3002\n\n# template\u5165\u9580\n\n\u3055\u304d\u306b\u300c\u521d\u5fc3\u8005\u306b\u306ftemplate\u306a\u3093\u3066\u7121\u7406\u3067\u3059\u300d\u3068\u304b\u8a00\u3063\u305f\u306e\u306f\u8ab0\u3067\u3057\u3087\u3046\u306d(\u79c1\u3060)\u3002\n\u5927\u4e08\u592b\u3067\u3059\u3001\u5165\u9580\u3067\u3059\u3002\u3093\u306a\u306e\u307e\u3058\u3081\u306b\u89e3\u8aac\u3057\u305f\u3089\u672c\u304c\u4e00\u518a\u66f8\u3051\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u89e3\u8aac\u3088\u308a\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u4eba\u306f\u3001\n[C++\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u534a\u9806\u5e8f\u3068\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9](http://qiita.com/_EnumHack/items/cd904d383588ddb2189f)\n\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\u3044\u306a\u3080\u5148\u751f\u304c\u306a\u305c\u304b\u30d7\u30ed\u751f\u3061\u3083\u3093\u306eAdventCalender\u306b\u6295\u7a3f\u3057\u3066\u307e\u3059\u3002\n\n\u307e\u3042\u3059\u3067\u306b\u51fa\u3066\u304d\u307e\u3057\u305f\u304c\u3002\u307e\u305a\u306f\u5b9a\u7fa9\u304b\u3089\u3002\n\n> \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u578b\u3084\u5024\u3092\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u6a5f\u80fd\u306e\u3053\u3068\u3067\u3042\u308b\u3002\n>[14 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(Templates) | C++11\u306e\u6587\u6cd5\u3068\u6a5f\u80fd(C++11: Syntax and Feature)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#temp)\n\n\u5206\u304b\u3063\u305f\u30fb\u30fb\u30fb\uff1f\u3044\u3044\uff1f**\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u3060\u3088\uff1f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642**\u3002\u305d\u3053\u5927\u4e8b\u3060\u304b\u3089\u306d\u3002\n\n```cpp\n#include <iostream>\ntemplate<typename T_>\nconstexpr const T_ & max(const T_& a, const T_& b)\n{\n    return (a > b)? a : b;\n}\nint main()\n{\n    const auto hoge1 = max(54, 23);//hoge1\u306fint\u578b\n    const auto hoge2 = max<unsigned int>(54, 23);//hoge2\u306funsigned int\u578b\n\n    std::cout << hoge1 << hoge2 << std::endl;\n    return 0;\n}\n```\n\n\u307f\u308c\u3070\u5206\u304b\u308b\u3088\u3046\u306b\u6700\u5927\u5024\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u304c\u3001\u578b\u304c\u300cT_\u300d\u306b\u306a\u3063\u3066\u307e\u3059\u3002\u3069\u3046\u3044\u3046\u3053\u3068\u3060\u3063\u3066\u3070\u3088\uff1f\n\n\u3053\u308c\u307e\u3067\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u95a2\u6570\u3092\u4f5c\u308d\u3046\u3068\u601d\u3063\u305f\u3089\u5168\u90e8\u306e\u578b\u3054\u3068\u306b\u95a2\u6570\u3092\u66f8\u304f\u5fc5\u8981\u304c\u6709\u308a\u307e\u3057\u305f\u3002\u4e8b\u5b9fC\u8a00\u8a9e\u306emath.h\u3092\u898b\u308b\u3068\u540c\u3058\u3088\u3046\u306a\u6a5f\u80fd\u306e\u578b\u304c\u9055\u3046\u95a2\u6570\u304c\u4e71\u9020\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3093\u306a\u3082\u3093\u3044\u3061\u3044\u3061\u899a\u3048\u3066\u3089\u3093\u306a\u3044\u3067\u3059\u3088\u306d\uff1f\n\n\u305d\u3046\u3044\u3063\u305f\u80cc\u666f\u304b\u3089(?)C++\u3067\u306f\u95a2\u6570\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3064\u307e\u308a\u3001\u5f15\u6570\u306e\u578b\u304c\u7570\u306a\u308c\u3070\u540c\u540d\u306e\u95a2\u6570\u3092\u3044\u304f\u3064\u3067\u3082\u4f5c\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n2\u884c\u76ee\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002template\u304b\u3089\u59cb\u307e\u308b\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u304ctemplate\u306e\u4eee\u5f15\u6570\u3068\u547c\u3070\u308c\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u95a2\u6570\u306b\u3082\u4eee\u5f15\u6570\u304c\u3042\u3063\u305f\u3051\u3069\u3042\u308c\u306b\u4f3c\u3066\u307e\u3059\u3002\n\u305f\u3060\u3057\u6307\u5b9a\u3067\u304d\u308b\u306e\u306f\u578b\u540d(\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u5b9a\u6570)\u306e\u307f\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3053\u306e\u5834\u5408\u65b0\u305f\u306bT_\u3068\u3044\u3046\u578b\u3092\u3067\u3063\u3061\u4e0a\u3052\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u306e\u6642\u70b9\u3067\u306f\u5b9f\u969b\u306e\u578b\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u82e5\u5e72\u9055\u3044\u307e\u3059\u304c\u65b9\u306e\u7570\u306a\u308b\u95a2\u6570\u304c**\u7121\u9650\u306b\u5b58\u5728\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u5dee\u3057\u652f\u3048\u3042\u308a\u307e\u305b\u3093**(\u4f46\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u78ba\u5b9a\u3057\u307e\u3059)\u3002\n\n7\u884c\u76ee\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f[\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b9f\u5f15\u6570\u63a8\u5b9a(Template argument deduction)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#temp.expl.spec)\u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u3067\u304d\u308b\u3060\u3051\u666e\u901a\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e\u5e38\u8b58\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u3001\u3068\u3066\u3082\u8907\u96d1\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u9006\u306b\u8a00\u3048\u3070\u3001\n\u30ce\u30ea\u3068\u52d8\u3068\u6c17\u5206\u3068\u306a\u3093\u3068\u306a\u304f\u3067\u3069\u30fc\u306b\u304b\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u3088\u3046\u306ftemplate\u95a2\u6570\u306e\u5f15\u6570\u306b\u66f8\u3044\u305f\u578b\u306b\u63a8\u8ad6\u3055\u308c\u308b\u308f\u3051\u3067\u3002\u307e\u3042\u307f\u308c\u3070\u308f\u304b\u308b\u3067\u3057\u3087\u3002\n\n8\u884c\u76ee\u306f[\u660e\u793a\u7684\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b9f\u5f15\u6570\u6307\u5b9a(explicit template argument specification)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#temp.fct.spec)\u3068\u547c\u3070\u308c\u3066\u3044\u3066\u3001\u304b\u3063\u3053\u826f\u304f\u540d\u524d\u3092\u3064\u3051\u307e\u3057\u305f\u304c\u3053\u306e\u5834\u5408\u306a\u3089\u3088\u3046\u306fT_\u306e\u578b\u306funsigned int\u3060\u3088\uff5e\u3068\u6559\u3048\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n7, 8\u884c\u76ee\u306e\u3088\u3046\u306btemplate\u3092\u4f7f\u3063\u305f\u3082\u306e(\u4eca\u56de\u306ftempalte\u95a2\u6570)\u3092\u5b9f\u969b\u306b\u8aad\u3093\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3068\u3001\u5148\u307b\u3069\u306e\u300c\u7121\u9650\u306b\u5b58\u5728\u3059\u308b\u300d\u72b6\u614b\u306e\u4f8b\u3048\u3067\u8a00\u3046\u306a\u3089\u3069\u308c\u304b\u7279\u5b9a\u306e\u3082\u306e\u306b\u5b9a\u307e\u308a\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u5b9f\u969b\u306b\u95a2\u6570\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u306e\u306f\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3060\u3051\u3067\u3059(\u3064\u307e\u308a\u4f7f\u3046\u5834\u6240\u3068**\u540c\u3058\u7ffb\u8a33\u5358\u4f4d**\u306b\u306a\u3044\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044)\u3002\n\n# \u521d\u5fc3\u8005\u3060\u3063\u3066std::enable_if\u3067SFINAE\u3057\u305f\u3044\n\n>[C++\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u534a\u9806\u5e8f\u3068\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9](http://qiita.com/_EnumHack/items/cd904d383588ddb2189f)\n>SFINAE\u3068\u306f\nSubstitution Failure Is Not A Error\n\u306e\u7565\u8a9e\u3067\u3042\u308b\n\n\u77e5\u3089\u3093\u304b\u3063\u305f\u308f\u3001\u307e\u3042\u305d\u308c\u306f\u3055\u3066\u304a\u304d\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3069\u3093\u306a\u578b\u3067\u3082\u53d7\u3051\u53d6\u3063\u3066\u3044\u307e\u3044\u307e\u3059\u3002\u305d\u306e\u307e\u307e\u3060\u3068**\u4e88\u671f\u305b\u306c\u52d5\u4f5c**\u3092\u3057\u305f\u308a\u3001\u300c[\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306e\u7206\u767a\u91cf\u3092\u7af6\u3046\u5927\u4f1a](http://faithandbrave.hateblo.jp/entry/2014/03/25/150659)\u300d\u304c\u958b\u304b\u308c\u308b\u307b\u3069\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3067\u307e\u3059\u3002\n\u4f7f\u3048\u308b\u578b\u3092\u5236\u7d04\u3059\u308b\u306b\u306f\u3069\u3046\u3057\u305f\u3089\u826f\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n## concept\u306e\u6b74\u53f2(\u8d85\u8981\u7d04)\u3068C++1z(C++17)\n\u3053\u3053\u3067\u3053\u306e\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u6539\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002**\u300cC99\u304b\u3089C++14\u3092\u99c6\u3051\u629c\u3051\u308bC++\u8b1b\u5ea7\u300d**\u3067\u3059\u3002\u6b8b\u5ff5\u306a\u304c\u3089C++1z(C++17)\u306e\u6a5f\u80fd\u306f**\u7d39\u4ecb\u3067\u304d\u306a\u3044**\u308f\u3051\u3067\u3059\u3002\n\n\u306a\u3093\u3067\u3053\u3093\u306a\u3053\u3068\u3092\u66f8\u304f\u304b\u3068\u3044\u3046\u3068\u3001C++1z\u306b**concept**\u306a\u308b\u6a5f\u80fd\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3068\u3082\u3068C++11\u3067\u5165\u308b\u306f\u305a\u306e\u3082\u306e\u3067\u3057\u305f\u304c\u3001\n[Bjarne Stroustrup\u3001Concept\u3068\u672a\u6765\u3092\u8a9e\u308b | \u672c\u306e\u866b](http://cpplover.blogspot.jp/2009/08/bjarne-stroustrupconcept_14.html)\n\u306b\u3042\u308b\u3088\u3046\u306b\u3001\u304b\u306a\u308a\u3044\u308d\u3044\u308d\u3042\u3063\u3066\u7d50\u5c40\u5165\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u305d\u308c\u304b\u3089\u307e\u3082\u306a\u304f6\u5e74\u3001\u518d\u3073concept\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n[\u65b0\u6a5f\u80fd\"\u30b3\u30f3\u30bb\u30d7\u30c8\"\u3067C++1z\u6642\u4ee3\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0](http://qiita.com/_Nnwww/items/5a242466e94b2e432376)\n\u65e9\u304f\u307b\u3057\u3044\u3067\u3059\u3002\u3053\u308c\u304b\u3089\u7d39\u4ecb\u3059\u308bstd::enable_if\u3088\u308a\u3082\u76f4\u611f\u7684\u306a\u306f\u305a\u3067\u3059\u304b\u3089\u3002\n\n\u8ffd\u8a18:\u3053\u3093\u306a\u3044\u3044\u52a0\u6e1b\u306a\u8aac\u660e\u3088\u308a\u3001**\u6c5f\u6dfb\u3055\u3093\u306e\n[\u5e30\u3063\u3066\u304d\u305f\u30b3\u30f3\u30bb\u30d7\u30c8 | Boost\u52c9\u5f37\u4f1a \\#16 \u5927\u962a](http://ezoeryou.github.io/boost-benkyokai-oosaka-16/#/)\n\u304c\u6570\u5343\u500d\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002**(\u5ca1\u5c71\u306e\u9676\u82b8\u5bb6([@bolero_MURAKAMI](https://twitter.com/bolero_MURAKAMI))\u3068\u3067\u3061\u307e\u308b\u3055\u3093\u306e\u5144([@decimalbloat](https://twitter.com/decimalbloat))\u306f\u30ef\u30ed\u30bf)\n\n\u3057\u304b\u3057\u7121\u3044\u3082\u306e\u306f\u4ed5\u65b9\u306a\u3044\u3067\u3059\u3002std::enable_if\u3092\u7d39\u4ecb\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u66f4\u306b\u8ffd\u8a18:\u3069\u3046\u3082C++17\u306b\u63d0\u6848\u3055\u308c\u3066\u3044\u305fconcept\u306freject\u3055\u308c\u305f\u3063\u307d\u3044\u30fb\u30fb\u30fb\uff1fC++11\u3067\u3082\u3055\u3093\u3056\u3093\u63c9\u3081\u3066\u5165\u3089\u306a\u304b\u3063\u305f\u306e\u306b\u307e\u305f\u5165\u3089\u306d\u30fc\u306e\u304b\u3088\uff01\n\nC++17\u306e``if constexpr``\u3068C++14\u306e\u623b\u308a\u5024\u306bauto\u3092\u4f7f\u3046\u8a18\u6cd5\u3067\u5c11\u3057\u307e\u3057\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u304c\n\n[![C++ Weekly - Ep 18 C++17's constexpr if](http://img.youtube.com/vi/qHgM5UdzPQU/0.jpg)](http://www.youtube.com/watch?v=qHgM5UdzPQU)\n\n```cpp:C++17\n#include <type_traits>\ntemplate<typename T>\nauto f(const T& a){\n    if constexpr(std::is_integral_v<T>){\n        return a + 1;\n    }\n    else if constexpr(std::is_floating_point_v<T>){\n        return a + 0.1;\n    }\n    else {\n        return a;\n    }\n}\nint main(){\n    using namespace std::literals;\n    [[maybe_unused]] auto a1 = f(1);//result: 2(int)\n    [[maybe_unused]] auto a2 = f(1.0);//result: 1.1(double)\n    [[maybe_unused]] auto a3 = f(\"arikitari\"s);//result: \"arikitari\"(std::string)\n}\n```\n\n\u3044\u3084\u3001concept\u304f\u308c\u3002\n\n## std::enable_if\n\n``std::enable_if``\u306a\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3057\u3066\u3001\u3053\u308c\u3092\u4f7f\u3046\u3068SFINAE\u3092~~\u60aa\u7528~~\u5229\u7528\u3057\u305f\u578b\u5236\u7d04template\u3092\u66f8\u3051\u307e\u3059\u3002\n\n\u3044\u308d\u3044\u308d\u6d41\u5100\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u79c1\u306f\n[std::enable_if\u3092\u4f7f\u3063\u3066\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u6642\u3001enabler\u3092\u4f7f\u3046\uff1f](http://qiita.com/kazatsuyu/items/203584ef4cb8b9e52462)\n\u306e\u65b9\u6cd5\u304c\u597d\u304d\u306a\u306e\u3067\u305d\u308c\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002enabler\u3092\u4f7f\u308f\u305a\u3001``std::nullptr_t``\u3092\u4f7f\u3046\u3068\u3044\u3048\u3070\u4f1d\u308f\u308b\u4eba\u306b\u306f\u4f1d\u308f\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u4f8b\u3048\u3070\u3001\u7b97\u8853\u578b(int\u3068\u304bdouble\u3068\u304b)\u3060\u3051\u3092\u53d7\u3051\u53d6\u308a\u305f\u3044\u5834\u5408\u3092\u8003\u3048\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306f\u7b97\u8853\u578b\u304b\u5426\u304b\u3092\u5224\u5225\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3046\u3044\u3046\u6642\u306b\u6d3b\u8e8d\u3059\u308b\u306e\u304c**type_traits**\u30d8\u30c3\u30c0\u30fc\u3067\u3059\u3002\u3066\u3044\u3046\u304b``std::enable_if``\u3082\u3053\u308c**include\u3057\u306a\u3044\u3068\u4f7f\u3048\u307e\u305b\u3093**\u3002\n\u3067\u65e5\u672c\u8a9e\u3088\u308a\u82f1\u8a9e\u306e\u30b5\u30a4\u30c8\u306e\u307b\u3046\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\n[\\<type_traits> - C++ Reference](http://www.cplusplus.com/reference/type_traits/)\n\u3092\u898b\u306a\u304c\u3089\u8a71\u3092\u9032\u3081\u307e\u3059\u3002\n\n![\u7121\u984c.png](https://qiita-image-store.s3.amazonaws.com/0/94177/61a6529b-1f46-b888-cc43-1b4a8fcbdca8.png)\n\n\u3053\u3093\u306a\u98a8\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u306d\u3002\u7b97\u8853\u578b\u306farithmetic\u3063\u3066\u8a00\u3046\u3093\u3067\u3059\u306d\u30fb\u30fb\u30fb\u3063\u3066\u305d\u3046\u3058\u3083\u306a\u3044\u3002\n\u3064\u307e\u308a``std::is_arithmetic``\u3092\u3064\u304b\u3048\u3070\u3044\u3044\u3068\u5206\u304b\u308a\u307e\u3059\u3002\n[is_arithmetic - C++ Reference](http://www.cplusplus.com/reference/type_traits/is_arithmetic/)\n\n```cpp\nstd::is_arithmetic<T>::value\n```\n\n\u3053\u308c\u304ctrue\u306b\u306a\u308b\u6642\u3001``T``\u306f\u7b97\u8853\u578b\u3067\u3059\u306d\u3002\n\n\u3055\u3066\u3001\u3067\u3042\u3068\u306f``std::enable_if``\u3092\u66f8\u304f\u3060\u3051\u3067\u3059\u304c\u3001\u305d\u306e\u524d\u306b**\u304a\u307e\u3058\u306a\u3044**\u3092\u3002``typename``\u3063\u3066\u66f8\u304f\u306e\u306f\u3060\u308b\u3044\u306e\u3067\u3002\n\n```cpp:alias_declaration\u3067\u304a\u307e\u3058\u306a\u3044\nnamespace std{\n    template<bool condition, typename T = void>\n    using enable_if_t = typename std::enable_if<condition, T>::type;\n}\n```\n\n``std::enable_if_t``\u3063\u3066\u306e\u304c\u6a19\u6e96\u306b\u3042\u308b\u3093\u3067\u3059\u306d\u3002\n\n\u3067\u306f\u7b97\u8853\u578b\u306e\u307f\u53d7\u3051\u53d6\u308b\u95a2\u6570f\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3088\u3046\u3002\n\n```cpp\n#include <iostream>\n#include <type_traits>\ntemplate<typename T, std::enable_if_t<std::is_arithmetic<T>::value, std::nullptr_t> = nullptr>\nvoid f(T num)\n{\n    std::cout << \"num:\" << num << std::endl;\n}\nint main()\n{\n    f(3);\n    //f(\"num\");\n    return 0;\n}\n```\n\nhttp://melpon.org/wandbox/permlink/Dfn1NNNNR2lXaYlr\n\n\u3082\u3057\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3059\u3068\n\n```\nprog.cc:12:5: error: no matching function for call to 'f'\n    f(\"num\");\n    ^\nprog.cc:3:48: note: candidate template ignored: disabled by 'enable_if' [with T = const char *]\nusing enable_if_type = typename std::enable_if<condition, T>::type;\n                                               ^\n1 error generated.\n```\n\n\u306e\u3088\u3046\u306b**\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u3084\u3063\u305f\u305c\uff01**\n\n\u3055\u3066\u3001\u3053\u3053\u304b\u3089\u304cSFINAE\u306e\u51fa\u756a\u3067\u3059\u3002\n\n```cpp\n#include <iostream>\n#include <type_traits>\ntemplate<typename T> struct is_char_type : public std::false_type {};\ntemplate<typename T> struct is_char_type<T const> : public type_traits::is_char_type<T> {};\ntemplate<typename T> struct is_char_type<T volatile> : public type_traits::is_char_type<T> {};\ntemplate<typename T> struct is_char_type<T const volatile> : public type_traits::is_char_type<T> {};\ntemplate<> struct is_char_type<char> : public std::true_type {};\ntemplate<> struct is_char_type<wchar_t> : public std::true_type\t{};\ntemplate<> struct is_char_type<char16_t> : public std::true_type {};\ntemplate<> struct is_char_type<char32_t> : public std::true_type {};\ntemplate<typename T, std::enable_if_t<std::is_arithmetic<T>::value, std::nullptr_t> = nullptr>\nvoid f(T num)\n{\n    std::cout << \"num:\" << num << std::endl;\n}\ntemplate<typename T, std::enable_if_t<is_char_type<T>::value, std::nullptr_t> = nullptr>\nvoid f(const T* s)\n{\n    std::cout << \"str:\" << s << std::endl;\n}\nint main()\n{\n    f(3);\n    f(\"num\");\n    return 0;\n}\n```\n\n\u3053\u3093\u306a\u98a8\u306b\u6587\u5b57\u5217\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d7\u3051\u53d6\u308b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u3082\u3057SFINAE\u304c\u306a\u3044\u3068``f(3)``\u3068\u3044\u3046\u547c\u3073\u51fa\u3057\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3070\u3001\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u89e3\u6c7a\u306e\u305f\u3081\u306b\u307e\u305af\u3068\u3044\u3046\u540d\u524d\u306e\u95a2\u6570\u3092\u635c\u7d22\u3057\u30012\u3064\u898b\u3064\u304b\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u4e0b\u306e\u307b\u3046\u306ef\u304c\u547c\u3079\u308b\u304b\u3092\u8abf\u3079\u308b\u3068\u304d\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002\nSFINAE\u306f\u3053\u306e\u30a8\u30e9\u30fc\u3092**\u3068\u308a\u3042\u3048\u305a\u7121\u8996(=\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u5019\u88dc\u304b\u3089\u5916\u3059)**\u306e\u3067\u95a2\u6570\u304c\u4e00\u3064\u306b\u5b9a\u307e\u308a\u3001\u547c\u3073\u5206\u3051\u304c\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306bC++03\u3067\u3082\u4ed5\u69d8\u304c\u66d6\u6627\u3060\u3063\u305f\u3060\u3051\u3067\u4f7f\u3048\u305f\u30b3\u30f3\u30d1\u30a4\u30e9\u3082\u3042\u3063\u305f\u3089\u3057\u3044\u3067\u3059\n[\u4efb\u610f\u306e\u5f0f\u306b\u3088\u308bSFINAE - cpprefjp C++\u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://cpprefjp.github.io/lang/cpp11/sfinae_expressions.html)\n\n\u307e\u3068\u3081\u308b\u3068\u3001``\u578b\u540dT``\u306b\u5236\u7d04\u3092\u66f8\u3051\u308b\u5834\u5408\u306f\n\n```cpp\ntemplate<typename T, std::enable_if_t<\u8a31\u53ef\u6761\u4ef6(true\u3067\u6709\u52b9), std::nullptr_t> = nullptr>\n```\n\n\u306e\u3088\u3046\u306b\u66f8\u3051\u3070\u3044\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u5b9f\u969b\u306b\u3053\u308c\u3092\u4f7f\u3063\u3066\u30012\u6b21\u5143\u306epoint\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/Nagarei/DxLibEx/blob/master/dxlibex/basic_types/point2d.hpp#L72\n\n\u578b\u5236\u7d04\u3092\u304b\u3051\u305f\u3060\u3051\u3067\u306fSFINAE\u306f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3001\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u89e3\u6c7a\u306e\u969b\u306e\u5019\u88dc\u304b\u3089\u5916\u3059\u3053\u3068\u304cSFINAE\u3067\u3059\u3001\u5ff5\u306e\u305f\u3081\n\n# template\u3067if\n\n\u3082\u306f\u3084\u521d\u5fc3\u8005\u3068\u306f\u4f55\u3060\u3063\u305f\u306e\u304b\u3068\u3044\u3046\u5185\u5bb9\u3067\u3059\u304c\u3001\u3055\u308f\u308a\u3060\u3051\u3002\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001C++11\u3067``std::conditional``\u304c\u5165\u308a\u307e\u3057\u3066\u3001\u307e\u3093\u307eIF\u306a\u306e\u3067\u3001**\u305d\u308c\u4f7f\u3048\u3070\u3044\u3044\u3067\u3059**\n\n[\u30e1\u30e2\uff1astd::conditional\u3067if\uff5eelse if\uff5eelse\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u898b\u3065\u3089\u3044](http://qiita.com/kazatsuyu/items/f8c3b304e7f8b35263d8)\n[C++0x std::conditional - Faith and Brave - C++\u3067\u904a\u307c\u3046](http://faithandbrave.hateblo.jp/entry/20100510/1273473979)\n\n```cpp\n//C++11 or later\nusing c_type = typename std::conditional<[(\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8a55\u4fa1\u3067\u304d\u308b)\u6761\u4ef6\u5f0f], [\u771f\u306e\u6642\u306e\u578b], [\u507d\u306e\u6642\u306e\u578b]>::type;\n//C++14 or later\nusing c_type = std::conditional_t<[(\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8a55\u4fa1\u3067\u304d\u308b)\u6761\u4ef6\u5f0f], [\u771f\u306e\u6642\u306e\u578b], [\u507d\u306e\u6642\u306e\u578b]>;\n```\n\n\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3057\u3066\u3001\n\n[Variadic Template \u3092\u4f7f\u3063\u3066 switch \u3092\u4f7f\u3063\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u9664\u53bb\u3059\u308b](http://qiita.com/adatchey/items/7d721f7670c4cd8f8af0)\n[C++ Advent Calendar 2015](http://www.adventar.org/calendars/926)\u306e2\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u304c\u3053\u3093\u306a\u5177\u5408\u306b~~\u60aa\u7528~~\u5229\u7528\u3067\u304d\u307e\u3059\n\n\u3067\u3059\u304c**\u539f\u7406**\u3092\u8aac\u660e\u3057\u307e\u3057\u3087\u3046\u3002\n\n```cpp\n#include <type_traits>\ntemplate <bool Con, class Then, class Else>//(2, 3, 4)\nstruct IF;//(1)\ntemplate <class Then, class Else>//(5)\nstruct IF<true, Then, Else> {//(6)template\u7b2c\u4e00\u5f15\u6570\u304ctrue\u306e\u6642\u306f\u3053\u306e\u5b9a\u7fa9\n    typedef Then type;//(7, 8, 12)\n};\ntemplate <class Then, class Else>//(5)\nstruct IF<false, Then, Else> {//(6)template\u7b2c\u4e00\u5f15\u6570\u304cfalse\u306e\u6642\u306f\u3053\u306e\u5b9a\u7fa9\n    typedef Else type;//(7, 9, 15)\n};\n\n//\u4e2d\u7565\nusing type1 = typename IF<true, int, double>::type;//int\u578b\u306b\u306a\u308b(10, 11, 13)\nusing type2 = typename IF<false, int, double>::type;//double\u578b\u306b\u306a\u308b(10, 14, 16)\n```\n\n**\u307e\u308b\u3067\u6697\u53f7\u306e\u3088\u3046\u3060**\u3068\u3044\u3046\u58f0\u304c\u805e\u3053\u3048\u3066\u304d\u305d\u3046\u3067\u3059\u3002\u4e00\u3064\u4e00\u3064\u8aac\u660e\u3057\u307e\u3059\u3002\n\n1. \u307e\u305a\u3001``IF``\u3068\u3044\u3046\u30af\u30e9\u30b9(struct\u3068\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u539f\u5247public\u6307\u5b9a)\u304c\u3042\u308a\u307e\u3059\u3002\n2. \u3053\u3044\u3064\u306ftemplate\u30af\u30e9\u30b9\u3067\u3059\u3002\n3. \u3053\u306e\u30af\u30e9\u30b9\u306etemplate\u5f15\u6570\u306f3\u3064\u3067\u3059\n4. \u4e00\u3064\u76ee\u306f``bool``\u578b\u30012\u3064\u3081\u30683\u3064\u3081\u306f**\u578b\u540d**\u3067\u3059\n5. 2\u3064\u306etemplate\u7279\u6b8a\u5316\u304c\u3042\u308a\u307e\u3059\n6. template\u7b2c1\u5f15\u6570\u304c**true\u306e\u6642\u3068false\u306e\u6642**\u3067\u3059\n7. 2\u3064\u306etemplate\u7279\u6b8a\u5316\u3067\u306f**\u3069\u3061\u3089\u3067\u3082\u578b\u540dtype\u304ctypedef\u3055\u308c\u307e\u3059**\n8. template\u7b2c1\u5f15\u6570\u304ctrue\u306e\u6642\u3001**\u578b\u540dtype\u306ftemplate\u7b2c2\u5f15\u6570\u306e\u5225\u540d**\u3068\u306a\u308a\u307e\u3059\u3002\n9. template\u7b2c1\u5f15\u6570\u304cfalse\u306e\u6642\u3001**\u578b\u540dtype\u306ftemplate\u7b2c3\u5f15\u6570\u306e\u5225\u540d**\u3068\u306a\u308a\u307e\u3059\u3002\n10. \u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n11. template\u7b2c1\u5b9f\u5f15\u6570\u306btrue\u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\n12. \u578b\u540dtype\u306ftemplate\u7b2c2\u5b9f\u5f15\u6570\u306e\u5225\u540d\u306b\u306a\u308b\u306e\u3067int\u578b\u306b\u306a\u308a\u307e\u3059\n13. \u305d\u308c\u306e\u5225\u540d\u3068\u3057\u3066``type1``\u3068\u3044\u3046\u65b0\u305f\u306a\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u3067\u3001``type1``\u306fint\u578b\u3067\u3059\n14. template\u7b2c1\u5b9f\u5f15\u6570\u306bfalse\u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\n15. \u578b\u540dtype\u306ftemplate\u7b2c3\u5b9f\u5f15\u6570\u306e\u5225\u540d\u306b\u306a\u308b\u306e\u3067double\u578b\u306b\u306a\u308a\u307e\u3059\n16. \u305d\u308c\u306e\u5225\u540d\u3068\u3057\u3066``type2``\u3068\u3044\u3046\u65b0\u305f\u306a\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u3067\u3001``type2``\u306fdouble\u578b\u3067\u3059\n\n\u8aac\u660e\u3068\u30b3\u30fc\u30c9\u4e2d\u306e()\u306e\u6570\u5b57\u3092\u5bfe\u5fdc\u3055\u305b\u306a\u304c\u3089\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3067\u3001\u4eca\u56detrue\u3068\u304bfalse\u3068\u304b\u3084\u3063\u3066\u305f\u3068\u3053\u308d\u306f\u3082\u3061\u308d\u3093\u3001``std::is_arithmetic``\u3068\u304b\u3001\u3068\u306b\u304b\u304f**\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5024\u304c\u6c7a\u307e\u308c\u3070**\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n# template\u3092\u3064\u304b\u3063\u3066\u5165\u529b\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\n\n\u8ffd\u8a18\n**\u5358\u4f53\u306e\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f**\nhttp://qiita.com/yumetodo/items/2a1d5f855bae6d100658\n\n# C++\u521d\u5fc3\u8005Advent Calendar 2015\n\u3053\u306e\u8a18\u4e8b\u306f[C++\u521d\u5fc3\u8005Advent Calendar 2015](http://www.adventar.org/calendars/922) 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\n[<<9\u65e5\u76ee\t\uff5cClang with Microsoft CodeGen\u304c\u3067\u305f\u306e\u3067\u8a66\u3059](http://qiita.com/yumetodo/items/bd41f31f39dd590e8c80)\n[<<16\u65e5\u76ee | \u30d6\u30ed\u30b0\u30ba\u30df: Boost.Test v3 \u3092\u4f7f\u3063\u3066\u307f\u305f](http://srz-zumix.blogspot.jp/2015/12/boosttest-v3.html) || [18\u65e5\u76ee | \u305d\u308cC++\u306a\u3089#define\u3058\u3083\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u3088 | \u3068\u3055\u3044\u306c\u306e\u96a0\u3057\u90e8\u5c4b >>](https://blog.myon.info/blog/2015-12-18/avoid-defining-macros/)\n\n\u6b21\u306f18\u65e5\u76ee\u3001myon___\u3055\u3093\u306e\u300c\u305d\u308c #define \u3058\u3083\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u3088\u300d\u3067\u3059\u306d\u3002constexpr\u3068\u304b\u51fa\u308b\u306e\u304b\u306a~~(\u304d\u3063\u3068\u51fa\u306a\u3044)~~\u3068\u601d\u3063\u305f\u3089\u89e6\u308a\u3060\u3051\u3067\u305f\n", "tags": ["C++", "C++14", "C++11", "C99", "C"]}