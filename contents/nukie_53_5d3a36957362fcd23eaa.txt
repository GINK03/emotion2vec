{"context": "\n\n1. \u306f\u3058\u3081\u306b\n\u3053\u3061\u3089\u306e\u65b9\u306e\u30b3\u30fc\u30c9\u3092\u30d9\u30fc\u30b9\u306bPowerPoint\u7248\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\nExcel\u3067\u3084\u3089\u3056\u308b\u3092\u5f97\u306a\u3044\u304b\u3089\u3001Excel\u3067\u4f5c\u3089\u306a\u3044\u3068\u610f\u5473\u304c\u7121\u3044\u3053\u3068\u306f\u91cd\u3005\u627f\u77e5\u3060\u304c\u3001\u81ea\u5206\u306e\u52c9\u5f37\u7528\u3068\u3044\u3046\u3053\u3068\u3067\u3002\n\n2. \u30b3\u30fc\u30c9\nparam($path)\n\n#UserSetting\n[int32]$sleepTime = 100\n[String]$exitTxt = 'exit' #\u3053\u306e\u6587\u5b57\u5217\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3082\u7d42\u4e86\u3059\u308b\uff08\u5927\u6587\u5b57\u53ef\uff09\n#/UserSetting\n\nfunction logger($msg) {\n    Write-Host (Get-Date -Format \"u\")\"`t\"$msg\n}\nlogger \"Processing...\"\n\n#COM\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u683c\u7d0d\u914d\u5217\n[int32]$arrayUbound = 9\n[Object[]]$coms = 0..$arrayUbound\nfor ([int32]$i=0;$i -le $arrayUbound;$i++){\n    $coms[$i] = $null\n}\n\n#\u914d\u5217\u6dfb\u3048\u5b57\nNew-Variable -Name ppApp    -Value 0 -Option ReadOnly -Description 'PowerPoint.Application'\nNew-Variable -Name ppPress  -Value 1 -Option ReadOnly -Description 'PowerPoint.Presentations'\nNew-Variable -Name ppPres   -Value 2 -Option ReadOnly -Description 'PowerPoint.Presentation'\nNew-Variable -Name ppSlds   -Value 3 -Option ReadOnly -Description 'PowerPoint.Slides'\n#Loop\nNew-Variable -Name ppSld    -Value 4 -Option ReadOnly -Description 'PowerPoint.Slide'\nNew-Variable -Name ppShps   -Value 5 -Option ReadOnly -Description 'PowerPoint.Shpaes'\nNew-Variable -Name ppPic    -Value 6 -Option ReadOnly -Description 'PowerPoint.Shape Pasted Picture'\nNew-Variable -Name ppTitle  -Value 7 -Option ReadOnly -Description 'PowerPoint.Shpae Title PlaceHolder'\nNew-Variable -Name ppTxtFrm -Value 8 -Option ReadOnly -Description 'PowerPoint.TextFrame Title'\nNew-Variable -Name ppTxtRng -Value 9 -Option ReadOnly -Description 'PowerPoint.TextRange Title'\n\n#PowerPoint\u5b9a\u6570\nNew-Variable -Name ppLayoutTitleOnly -Value 11 -Option ReadOnly -Description 'PowerPoint.PpSlideLayout.ppLayoutTitleOnly'\n\n#System.Windows.Forms.Clipboard\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\nAdd-Type -AssemblyName System.Windows.Forms\n\ntry{\n    $coms[$ppApp] = New-Object -ComObject PowerPoint.Application\n    logger \"Connected to PowerPoint.\"\n\n    $coms[$ppPress] = $coms[$ppApp].Presentations\n\n    if ($path -ne $null) {\n        try {\n            $coms[$ppPres] = $coms[$ppPress].Open($Path)\n            logger \"Open $Path\"\n        } catch {\n            logger \"File Open Failed. => $Path\"\n            return;\n        }\n    } else {\n        $coms[$ppPres] = $coms[$ppPress].Add($true)\n    }\n\n    $coms[$ppSlds] = $coms[$ppPres].Slides\n\n    logger \"Clear Clipboard.\"\n    do {\n        if ([System.Windows.Forms.Clipboard]::ContainsText()){\n            #$exitTxt\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3068\u7d42\u4e86\n            if ([System.Windows.Forms.Clipboard]::GetText() -eq $exitTxt) {\n                [System.Windows.Forms.Clipboard]::Clear()\n                break\n            }\n        }\n        if ($coms[$ppApp].Visible -eq $False) {\n            logger \"PowerPoint Closed.\"\n            $coms[$ppApp].Quit()\n            break\n        }\n\n        if ([System.Windows.Forms.Clipboard]::ContainsImage()) {\n            Measure-Command {\n\n                #\u73fe\u5728\u306e\u30b9\u30e9\u30a4\u30c9\u679a\u6570\u3092\u53c2\u7167\u3057\u3066\u3001\u672b\u5c3e\u306b\u633f\u5165\u3059\u308b\u3002\u52d5\u4f5c\u4e2d\u306bPowerPoint\u3092\u7de8\u96c6\u3057\u306a\u3044\u524d\u63d0\u306a\u3089\u3001\u30ab\u30a6\u30f3\u30c8\u7528\u5909\u6570\u3092\u7528\u610f\u3057\u305f\u65b9\u304c\u65e9\u3044\u3002\n                $coms[$ppSld]  = $coms[$ppSlds].Add($coms[$ppSlds].Count + 1, $ppLayoutTitleOnly)\n                $coms[$ppShps] = $coms[$ppSld].Shapes\n                $coms[$ppPic]  = $coms[$ppShps].Paste()\n                <# \u753b\u50cf\u3092\u64cd\u4f5c\u3092\u3059\u308b\u306a\u3089\u3053\u3053\u306b\u8a18\u8ff0\u8ffd\u52a0 #>\n\n                $coms[$ppTitle]  = $coms[$ppShps].Title\n                $coms[$ppTxtFrm] = $coms[$ppTitle].TextFrame\n                $coms[$ppTxtRng] = $coms[$ppTxtFrm].TextRange\n                $coms[$ppTxtRng].Text = Get-Date -Format \"yyyy/MM/dd HH:mm:ss\"\n\n                [System.Windows.Forms.Clipboard]::Clear()\n\n            } | % { logger $_.TotalMilliseconds.ToString((\"#####.000ms\").PadLeft(10)) }\n        } else {\n            Start-Sleep -Milliseconds $sleepTime\n        }\n    } while($true)\n}catch{\n    Out-Host $Error\n    throw\n}finally{\n    <#\n    COM\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u89e3\u653e\u51e6\u7406\n    \u53c2\u8003\uff1aOffice \u30aa\u30fc\u30c8\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u5272\u308a\u5f53\u3066\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u89e3\u653e\u3059\u308b \u2013 Part1\n    https://blogs.msdn.microsoft.com/office_client_development_support_blog/2012/02/09/office-5/\n    #>\n    for ([int32]$i=$arrayUbound;$i -ge 0;$i--){\n        if ($coms[$i] -ne $null) {\n            [System.Runtime.InteropServices.Marshal]::FinalReleaseComObject($coms[$i]) >$null\n            $coms[$i] = $null\n        }\n    }\n\n    #\u5f37\u5236\u89e3\u653e\uff1a\u4ed6\u3068\u9023\u643a\u3057\u306a\u3044\u306a\u3089\u7121\u304f\u3066\u3082\uff1f\n    [System.GC]::Collect()\n    [System.GC]::WaitForPendingFinalizers()\n    [System.GC]::Collect()\n\n    logger \"Terminating...\"\n}\n\nPowerPoint\u3060\u3068\u753b\u9762\u4f9d\u5b58\u306e\u64cd\u4f5c\u3092\u5c11\u306a\u304f\u3067\u304d\u308b\u306e\u3067\u3001\u5272\u3068\u9069\u5f53\u306b\u66f8\u3044\u3066\u3082\u52d5\u304f\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\nExcel-PowerPoint\u9593\u306e\u9055\u3044\u4ee5\u5916\u306b\u624b\u3092\u52a0\u3048\u305f\u70b9\u3068\u3057\u3066\u306f\u3001COM\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u89e3\u653e\u51e6\u7406\uff08\u6700\u5f8c\u306e\"finally\"\u30d6\u30ed\u30c3\u30af\u5185\uff09\u3092\u8ffd\u52a0\u3002\nObject\u578b\u306e\u914d\u5217($coms)\u306bCOM\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5165\u308c\u3066\u304a\u304f\u3053\u3068\u3067\u53c2\u7167\u89e3\u653e\u306e\u8a18\u8ff0\u3092\u66f8\u304f\u624b\u9593\u3092\u6e1b\u3089\u3057\u3066\u3044\u308b\u3002\n\u307e\u305f\u3001\u914d\u5217\u306e\u6dfb\u3048\u5b57\u3068\u3057\u3066\u5927\u91cf\u306e\u5909\u6570($pp~)\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u304c\u3001PowerShell v5\u304b\u3089\u5217\u6319\u4f53\u304c\u4f7f\u3048\u308b\u3089\u3057\u3044\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u4f7f\u3048\u3070\u8a18\u8ff0\u304c\u304d\u308c\u3044\u306b\u306a\u308b\u3002\n\n\u53c2\u8003\n\nOffice \u30aa\u30fc\u30c8\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u5272\u308a\u5f53\u3066\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u89e3\u653e\u3059\u308b \u2013 Part1\n2016\u5e74\u5ea6\u7248\u30a8\u30af\u30bb\u30eb\u30b9\u30af\u30b7\u30e7\u53d6\u5f97\u30c4\u30fc\u30eb\n\n[Qiita1]:http://qiita.com/asterisk9101/items/a49ebe010e19e5c62f98 \"2016\u5e74\u5ea6\u7248\u30a8\u30af\u30bb\u30eb\u30b9\u30af\u30b7\u30e7\u53d6\u5f97\u30c4\u30fc\u30eb\"\n\n[COMRelease]:https://blogs.msdn.microsoft.com/office_client_development_support_blog/2012/02/09/office-5/ \"Office \u30aa\u30fc\u30c8\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u5272\u308a\u5f53\u3066\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u89e3\u653e\u3059\u308b \u2013 Part1\"\n\n#1. \u306f\u3058\u3081\u306b\n[\u3053\u3061\u3089][Qiita1]\u306e\u65b9\u306e\u30b3\u30fc\u30c9\u3092\u30d9\u30fc\u30b9\u306bPowerPoint\u7248\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\nExcel\u3067\u3084\u3089\u3056\u308b\u3092\u5f97\u306a\u3044\u304b\u3089\u3001Excel\u3067\u4f5c\u3089\u306a\u3044\u3068\u610f\u5473\u304c\u7121\u3044\u3053\u3068\u306f\u91cd\u3005\u627f\u77e5\u3060\u304c\u3001\u81ea\u5206\u306e\u52c9\u5f37\u7528\u3068\u3044\u3046\u3053\u3068\u3067\u3002\n\n#2. \u30b3\u30fc\u30c9\n```ps1\nparam($path)\n\n#UserSetting\n[int32]$sleepTime = 100\n[String]$exitTxt = 'exit' #\u3053\u306e\u6587\u5b57\u5217\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3082\u7d42\u4e86\u3059\u308b\uff08\u5927\u6587\u5b57\u53ef\uff09\n#/UserSetting\n\nfunction logger($msg) {\n    Write-Host (Get-Date -Format \"u\")\"`t\"$msg\n}\nlogger \"Processing...\"\n\n#COM\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u683c\u7d0d\u914d\u5217\n[int32]$arrayUbound = 9\n[Object[]]$coms = 0..$arrayUbound\nfor ([int32]$i=0;$i -le $arrayUbound;$i++){\n    $coms[$i] = $null\n}\n\n#\u914d\u5217\u6dfb\u3048\u5b57\nNew-Variable -Name ppApp    -Value 0 -Option ReadOnly -Description 'PowerPoint.Application'\nNew-Variable -Name ppPress  -Value 1 -Option ReadOnly -Description 'PowerPoint.Presentations'\nNew-Variable -Name ppPres   -Value 2 -Option ReadOnly -Description 'PowerPoint.Presentation'\nNew-Variable -Name ppSlds   -Value 3 -Option ReadOnly -Description 'PowerPoint.Slides'\n#Loop\nNew-Variable -Name ppSld    -Value 4 -Option ReadOnly -Description 'PowerPoint.Slide'\nNew-Variable -Name ppShps   -Value 5 -Option ReadOnly -Description 'PowerPoint.Shpaes'\nNew-Variable -Name ppPic    -Value 6 -Option ReadOnly -Description 'PowerPoint.Shape Pasted Picture'\nNew-Variable -Name ppTitle  -Value 7 -Option ReadOnly -Description 'PowerPoint.Shpae Title PlaceHolder'\nNew-Variable -Name ppTxtFrm -Value 8 -Option ReadOnly -Description 'PowerPoint.TextFrame Title'\nNew-Variable -Name ppTxtRng -Value 9 -Option ReadOnly -Description 'PowerPoint.TextRange Title'\n\n#PowerPoint\u5b9a\u6570\nNew-Variable -Name ppLayoutTitleOnly -Value 11 -Option ReadOnly -Description 'PowerPoint.PpSlideLayout.ppLayoutTitleOnly'\n\n#System.Windows.Forms.Clipboard\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\nAdd-Type -AssemblyName System.Windows.Forms\n\ntry{\n    $coms[$ppApp] = New-Object -ComObject PowerPoint.Application\n    logger \"Connected to PowerPoint.\"\n\n    $coms[$ppPress] = $coms[$ppApp].Presentations\n\n    if ($path -ne $null) {\n        try {\n            $coms[$ppPres] = $coms[$ppPress].Open($Path)\n            logger \"Open $Path\"\n        } catch {\n            logger \"File Open Failed. => $Path\"\n            return;\n        }\n    } else {\n        $coms[$ppPres] = $coms[$ppPress].Add($true)\n    }\n\n    $coms[$ppSlds] = $coms[$ppPres].Slides\n\n    logger \"Clear Clipboard.\"\n    do {\n        if ([System.Windows.Forms.Clipboard]::ContainsText()){\n            #$exitTxt\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3068\u7d42\u4e86\n            if ([System.Windows.Forms.Clipboard]::GetText() -eq $exitTxt) {\n                [System.Windows.Forms.Clipboard]::Clear()\n                break\n            }\n        }\n        if ($coms[$ppApp].Visible -eq $False) {\n            logger \"PowerPoint Closed.\"\n            $coms[$ppApp].Quit()\n            break\n        }\n\n        if ([System.Windows.Forms.Clipboard]::ContainsImage()) {\n            Measure-Command {\n                \n                #\u73fe\u5728\u306e\u30b9\u30e9\u30a4\u30c9\u679a\u6570\u3092\u53c2\u7167\u3057\u3066\u3001\u672b\u5c3e\u306b\u633f\u5165\u3059\u308b\u3002\u52d5\u4f5c\u4e2d\u306bPowerPoint\u3092\u7de8\u96c6\u3057\u306a\u3044\u524d\u63d0\u306a\u3089\u3001\u30ab\u30a6\u30f3\u30c8\u7528\u5909\u6570\u3092\u7528\u610f\u3057\u305f\u65b9\u304c\u65e9\u3044\u3002\n                $coms[$ppSld]  = $coms[$ppSlds].Add($coms[$ppSlds].Count + 1, $ppLayoutTitleOnly)\n                $coms[$ppShps] = $coms[$ppSld].Shapes\n                $coms[$ppPic]  = $coms[$ppShps].Paste()\n                <# \u753b\u50cf\u3092\u64cd\u4f5c\u3092\u3059\u308b\u306a\u3089\u3053\u3053\u306b\u8a18\u8ff0\u8ffd\u52a0 #>\n\n                $coms[$ppTitle]  = $coms[$ppShps].Title\n                $coms[$ppTxtFrm] = $coms[$ppTitle].TextFrame\n                $coms[$ppTxtRng] = $coms[$ppTxtFrm].TextRange\n                $coms[$ppTxtRng].Text = Get-Date -Format \"yyyy/MM/dd HH:mm:ss\"\n\n                [System.Windows.Forms.Clipboard]::Clear()\n                \n            } | % { logger $_.TotalMilliseconds.ToString((\"#####.000ms\").PadLeft(10)) }\n        } else {\n            Start-Sleep -Milliseconds $sleepTime\n        }\n    } while($true)\n}catch{\n    Out-Host $Error\n    throw\n}finally{\n    <#\n    COM\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u89e3\u653e\u51e6\u7406\n    \u53c2\u8003\uff1aOffice \u30aa\u30fc\u30c8\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u5272\u308a\u5f53\u3066\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u89e3\u653e\u3059\u308b \u2013 Part1\n    https://blogs.msdn.microsoft.com/office_client_development_support_blog/2012/02/09/office-5/\n    #>\n    for ([int32]$i=$arrayUbound;$i -ge 0;$i--){\n        if ($coms[$i] -ne $null) {\n            [System.Runtime.InteropServices.Marshal]::FinalReleaseComObject($coms[$i]) >$null\n            $coms[$i] = $null\n        }\n    }\n    \n    #\u5f37\u5236\u89e3\u653e\uff1a\u4ed6\u3068\u9023\u643a\u3057\u306a\u3044\u306a\u3089\u7121\u304f\u3066\u3082\uff1f\n    [System.GC]::Collect()\n    [System.GC]::WaitForPendingFinalizers()\n    [System.GC]::Collect()\n\n    logger \"Terminating...\"\n}\n```\n\nPowerPoint\u3060\u3068\u753b\u9762\u4f9d\u5b58\u306e\u64cd\u4f5c\u3092\u5c11\u306a\u304f\u3067\u304d\u308b\u306e\u3067\u3001\u5272\u3068\u9069\u5f53\u306b\u66f8\u3044\u3066\u3082\u52d5\u304f\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\n\nExcel-PowerPoint\u9593\u306e\u9055\u3044\u4ee5\u5916\u306b\u624b\u3092\u52a0\u3048\u305f\u70b9\u3068\u3057\u3066\u306f\u3001COM\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u89e3\u653e\u51e6\u7406\uff08\u6700\u5f8c\u306e\"finally\"\u30d6\u30ed\u30c3\u30af\u5185\uff09\u3092\u8ffd\u52a0\u3002\nObject\u578b\u306e\u914d\u5217(`$coms`)\u306bCOM\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5165\u308c\u3066\u304a\u304f\u3053\u3068\u3067\u53c2\u7167\u89e3\u653e\u306e\u8a18\u8ff0\u3092\u66f8\u304f\u624b\u9593\u3092\u6e1b\u3089\u3057\u3066\u3044\u308b\u3002\n\u307e\u305f\u3001\u914d\u5217\u306e\u6dfb\u3048\u5b57\u3068\u3057\u3066\u5927\u91cf\u306e\u5909\u6570(`$pp~`)\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u304c\u3001PowerShell v5\u304b\u3089\u5217\u6319\u4f53\u304c\u4f7f\u3048\u308b\u3089\u3057\u3044\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u4f7f\u3048\u3070\u8a18\u8ff0\u304c\u304d\u308c\u3044\u306b\u306a\u308b\u3002\n\n#\u53c2\u8003\n+ [Office \u30aa\u30fc\u30c8\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u5272\u308a\u5f53\u3066\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u89e3\u653e\u3059\u308b \u2013 Part1][COMRelease]\n+ [2016\u5e74\u5ea6\u7248\u30a8\u30af\u30bb\u30eb\u30b9\u30af\u30b7\u30e7\u53d6\u5f97\u30c4\u30fc\u30eb][Qiita1]\n", "tags": ["PowerShell", "PowerPoint"]}