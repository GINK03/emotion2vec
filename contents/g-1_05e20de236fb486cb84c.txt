{"context": " More than 1 year has passed since last update.\n\nFabric\u3067Twitter\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u8868\u793a\u3059\u308b\n\u5143\u30cd\u30bf\u306e\u30ea\u30f3\u30af\u306f\u3053\u308c\u3067\u3059\u3002\nhttp://qiita.com/mokumoku/items/bf0460f420acac3c04fc\nhttp://qiita.com/makora9143/items/5bdbab674bea55f56a81\n\u3057\u304b\u3057Febric\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u66f4\u65b0\u304c\u3042\u3063\u305f\u306e\u304b\u3001\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u306e\u30b3\u30fc\u30c9\u3067\u306fdeprecate\u8b66\u544a\u304c\u51fa\u3066\u3044\u305f\u306e\u3067\u3001\u9069\u5207\u306a\u5f62\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n\u4fee\u6b63\u3057\u305f\u30b3\u30fc\u30c9\n\u30b3\u30fc\u30c9\u5dee\u5206\n\nTwitterAPI.swift\n\n-  class func getHomeTimeline(tweets: [TWTRTweet]->(), error: (NSError) -> ()) {\n+  class func getHomeTimeline(user: String?, tweets: [TWTRTweet]->(), error: (NSError) -> ()) {\n     let api = TwitterAPI()\n+    let client = TWTRAPIClient(userID: user)\n     var clientError: NSError?\n     let path = \"/statuses/home_timeline.json\"\n     let endpoint = api.baseURL + api.version + path\n-    let request:NSURLRequest? = Twitter.sharedInstance().APIClient.URLRequestWithMethod(\"GET\", URL: endpoint, parameters: nil, error: &clientError)\n+    let request:NSURLRequest? = client.URLRequestWithMethod(\"GET\",\n+      URL: endpoint,\n+      parameters: nil,\n+      error: &clientError)\n\n     if request != nil {\n-      Twitter.sharedInstance().APIClient.sendTwitterRequest(request!, completion: {\n+      client.sendTwitterRequest(request!, completion: {\n         response, data, err in\n         if err == nil {\n           let json: AnyObject? =  try! NSJSONSerialization.JSONObjectWithData(data!,\n\n\nTwitter\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u306e\u4e00\u90e8\u304cdeprecate\u3055\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u4ee3\u308f\u308a\u306bTWTRAPIClient\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001login\u3057\u305f\u969b\u306b\u8fd4\u3055\u308c\u308bTWTRSession\u60c5\u5831\u304b\u3089userId\u3092\u6e21\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u30ab\u30b9\u30bf\u30e0\u3057\u305fLoginViewController\u30af\u30e9\u30b9\u3068 TimelineViewController\u30af\u30e9\u30b9\u3092\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nLoginViewController.swift\nimport UIKit\nimport TwitterKit\n\n\nclass LoginViewController: UIViewController {\n\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    /*\n    let logInButton = TWTRLogInButton { (session, error) in\n      if session != nil {\n        //self.performSegueWithIdentifier(\"main\", sender: session!.userName)\n        self.performSegueWithIdentifier(\"timeline\", sender: session!.userName)\n      } else {\n        NSLog(\"Login error: %@\", error!.localizedDescription);\n      }\n    }\n\n    // TODO: Change where the log in button is positioned in your view\n    logInButton.center = self.view.center\n    self.view.addSubview(logInButton)*/\n\n\n    Twitter.sharedInstance().logInWithCompletion { session, error in\n      if (session != nil) {\n        print(\"signed in as \\(session!.userName)\");\n        self.performSegueWithIdentifier(\"timeline\", sender: session)\n      } else {\n        print(\"error: \\(error!.localizedDescription)\");\n      }\n    }\n\n  }\n\n  override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {\n    let session = sender as? TWTRSession\n    let dest = segue.destinationViewController as! TimelineViewController\n    dest.title = session!.userName\n    dest.userId = session?.userID\n\n  }\n}\n\n\n\n\nTimelineViewController.swift\nimport UIKit\nimport TwitterKit\n\nclass TimelineViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {\n  var tableView: UITableView!\n  var tweets: [TWTRTweet] = [] {\n    didSet {\n      tableView.reloadData()\n    }\n  }\n  var prototypeCell: TWTRTweetTableViewCell?\n\n  var userId: String?\n\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    tableView = UITableView(frame: self.view.bounds)\n    tableView.delegate = self\n    tableView.dataSource = self\n\n    prototypeCell = TWTRTweetTableViewCell(style: .Default, reuseIdentifier: \"cell\")\n\n    tableView.registerClass(TWTRTweetTableViewCell.self, forCellReuseIdentifier: \"cell\")\n    self.view.addSubview(tableView)\n\n    loadTweets()\n  }\n\n  func loadTweets() {\n    TwitterAPI.getHomeTimeline(userId,tweets: {\n      twttrs in\n      for tweet in twttrs {\n        self.tweets.append(tweet)\n      }\n      }, error: {\n        error in\n        print(error.localizedDescription)\n    })\n  }\n\n  // MARK: UITableViewDataSource\n  func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    // Return the number of Tweets.\n    return tweets.count\n  }\n\n  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCellWithIdentifier(\"cell\") as! TWTRTweetTableViewCell\n\n    let tweet = tweets[indexPath.row]\n    cell.configureWithTweet(tweet)\n\n    return cell\n  }\n\n  // MARK: UITableViewDelegate\n  func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {\n    let tweet = tweets[indexPath.row]\n\n    prototypeCell?.configureWithTweet(tweet)\n\n    let height = TWTRTweetTableViewCell.heightForTweet(tweet, width: self.view.bounds.width)\n    if !height.isNaN {\n      return height\n    } else {\n      return tableView.estimatedRowHeight\n    }\n  }\n}\n\n\n\n\u6700\u5f8c\u306b\nFebric\u306f\u3059\u3054\u304f\u4fbf\u5229\u3063\u307d\u3044\u306e\u3067\u3059\u304c\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3084\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u60c5\u5831\u304c\u53e4\u304b\u3063\u305f\u308a\u3001\u4e0d\u5341\u5206\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u307e\u3060\u307e\u3060\u30cf\u30de\u308a\u3069\u3053\u308d\u306f\u591a\u305d\u3046\u3067\u3059\u3002\n\u65e5\u672c\u8a9e\u306e\u60c5\u5831\u306f\u3059\u3054\u304f\u5c11\u306a\u3044\u306e\u3067\u3001\u3082\u3063\u3068\u5e83\u307e\u3063\u3066\u60c5\u5831\u5171\u6709\u3057\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u306d\u3002\n\u3088\u3046\u3084\u304f\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3082\u53d6\u3063\u639b\u304b\u308a\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u89e6\u3063\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nThanks\nhttp://qiita.com/mokumoku\nhttp://qiita.com/makora9143\n# Fabric\u3067Twitter\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u8868\u793a\u3059\u308b\n\n\u5143\u30cd\u30bf\u306e\u30ea\u30f3\u30af\u306f\u3053\u308c\u3067\u3059\u3002\nhttp://qiita.com/mokumoku/items/bf0460f420acac3c04fc\nhttp://qiita.com/makora9143/items/5bdbab674bea55f56a81\n\u3057\u304b\u3057Febric\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u66f4\u65b0\u304c\u3042\u3063\u305f\u306e\u304b\u3001\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u306e\u30b3\u30fc\u30c9\u3067\u306fdeprecate\u8b66\u544a\u304c\u51fa\u3066\u3044\u305f\u306e\u3067\u3001\u9069\u5207\u306a\u5f62\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n## \u4fee\u6b63\u3057\u305f\u30b3\u30fc\u30c9\n\n\u30b3\u30fc\u30c9\u5dee\u5206\n\n```swift:TwitterAPI.swift\n\n-  class func getHomeTimeline(tweets: [TWTRTweet]->(), error: (NSError) -> ()) {\n+  class func getHomeTimeline(user: String?, tweets: [TWTRTweet]->(), error: (NSError) -> ()) {\n     let api = TwitterAPI()\n+    let client = TWTRAPIClient(userID: user)\n     var clientError: NSError?\n     let path = \"/statuses/home_timeline.json\"\n     let endpoint = api.baseURL + api.version + path\n-    let request:NSURLRequest? = Twitter.sharedInstance().APIClient.URLRequestWithMethod(\"GET\", URL: endpoint, parameters: nil, error: &clientError)\n+    let request:NSURLRequest? = client.URLRequestWithMethod(\"GET\",\n+      URL: endpoint,\n+      parameters: nil,\n+      error: &clientError)\n\n     if request != nil {\n-      Twitter.sharedInstance().APIClient.sendTwitterRequest(request!, completion: {\n+      client.sendTwitterRequest(request!, completion: {\n         response, data, err in\n         if err == nil {\n           let json: AnyObject? =  try! NSJSONSerialization.JSONObjectWithData(data!,\n```\n\nTwitter\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u306e\u4e00\u90e8\u304cdeprecate\u3055\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u4ee3\u308f\u308a\u306bTWTRAPIClient\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001login\u3057\u305f\u969b\u306b\u8fd4\u3055\u308c\u308bTWTRSession\u60c5\u5831\u304b\u3089userId\u3092\u6e21\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u30ab\u30b9\u30bf\u30e0\u3057\u305fLoginViewController\u30af\u30e9\u30b9\u3068 TimelineViewController\u30af\u30e9\u30b9\u3092\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```swift:LoginViewController.swift\nimport UIKit\nimport TwitterKit\n\n\nclass LoginViewController: UIViewController {\n\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    /*\n    let logInButton = TWTRLogInButton { (session, error) in\n      if session != nil {\n        //self.performSegueWithIdentifier(\"main\", sender: session!.userName)\n        self.performSegueWithIdentifier(\"timeline\", sender: session!.userName)\n      } else {\n        NSLog(\"Login error: %@\", error!.localizedDescription);\n      }\n    }\n    \n    // TODO: Change where the log in button is positioned in your view\n    logInButton.center = self.view.center\n    self.view.addSubview(logInButton)*/\n    \n    \n    Twitter.sharedInstance().logInWithCompletion { session, error in\n      if (session != nil) {\n        print(\"signed in as \\(session!.userName)\");\n        self.performSegueWithIdentifier(\"timeline\", sender: session)\n      } else {\n        print(\"error: \\(error!.localizedDescription)\");\n      }\n    }\n\n  }\n  \n  override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {\n    let session = sender as? TWTRSession\n    let dest = segue.destinationViewController as! TimelineViewController\n    dest.title = session!.userName\n    dest.userId = session?.userID\n    \n  }\n}\n\n```\n\n```swift:TimelineViewController.swift\nimport UIKit\nimport TwitterKit\n\nclass TimelineViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {\n  var tableView: UITableView!\n  var tweets: [TWTRTweet] = [] {\n    didSet {\n      tableView.reloadData()\n    }\n  }\n  var prototypeCell: TWTRTweetTableViewCell?\n  \n  var userId: String?\n  \n  override func viewDidLoad() {\n    super.viewDidLoad()\n    tableView = UITableView(frame: self.view.bounds)\n    tableView.delegate = self\n    tableView.dataSource = self\n    \n    prototypeCell = TWTRTweetTableViewCell(style: .Default, reuseIdentifier: \"cell\")\n    \n    tableView.registerClass(TWTRTweetTableViewCell.self, forCellReuseIdentifier: \"cell\")\n    self.view.addSubview(tableView)\n    \n    loadTweets()\n  }\n  \n  func loadTweets() {\n    TwitterAPI.getHomeTimeline(userId,tweets: {\n      twttrs in\n      for tweet in twttrs {\n        self.tweets.append(tweet)\n      }\n      }, error: {\n        error in\n        print(error.localizedDescription)\n    })\n  }\n  \n  // MARK: UITableViewDataSource\n  func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    // Return the number of Tweets.\n    return tweets.count\n  }\n  \n  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCellWithIdentifier(\"cell\") as! TWTRTweetTableViewCell\n    \n    let tweet = tweets[indexPath.row]\n    cell.configureWithTweet(tweet)\n    \n    return cell\n  }\n  \n  // MARK: UITableViewDelegate\n  func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {\n    let tweet = tweets[indexPath.row]\n    \n    prototypeCell?.configureWithTweet(tweet)\n    \n    let height = TWTRTweetTableViewCell.heightForTweet(tweet, width: self.view.bounds.width)\n    if !height.isNaN {\n      return height\n    } else {\n      return tableView.estimatedRowHeight\n    }\n  }\n}\n```\n\n## \u6700\u5f8c\u306b\n\nFebric\u306f\u3059\u3054\u304f\u4fbf\u5229\u3063\u307d\u3044\u306e\u3067\u3059\u304c\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3084\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u60c5\u5831\u304c\u53e4\u304b\u3063\u305f\u308a\u3001\u4e0d\u5341\u5206\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u307e\u3060\u307e\u3060\u30cf\u30de\u308a\u3069\u3053\u308d\u306f\u591a\u305d\u3046\u3067\u3059\u3002\n\u65e5\u672c\u8a9e\u306e\u60c5\u5831\u306f\u3059\u3054\u304f\u5c11\u306a\u3044\u306e\u3067\u3001\u3082\u3063\u3068\u5e83\u307e\u3063\u3066\u60c5\u5831\u5171\u6709\u3057\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u306d\u3002\n\n\u3088\u3046\u3084\u304f\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3082\u53d6\u3063\u639b\u304b\u308a\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u89e6\u3063\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Thanks\n\nhttp://qiita.com/mokumoku\nhttp://qiita.com/makora9143\n\n", "tags": ["Swift2.0", "TwitterAPI", "Swift", "iOS", "iOS9"]}