{"context": "\u4eca\u56de\u306f\u3001Spring Framework 4.3\u306e\u5909\u66f4\u70b9\u7d39\u4ecb\u30b7\u30ea\u30fc\u30ba\u306e\u7b2c5\u56de\u3067\u3001Web\u95a2\u9023\u306e\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\uff08\u30ea\u30ea\u30fc\u30b9\u524d\u306e\u6295\u7a3f\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\uff01\uff01\u3000\u5dee\u5206\u306f\u3001\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\n\u30b7\u30ea\u30fc\u30ba\n\n\u7b2c\uff11\u56de\uff1aSpring 4.3 DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff12\u56de\uff1aSpring 4.3 \u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff13\u56de\uff1aSpring 4.3 \u30ad\u30e3\u30c3\u30b7\u30e5\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff14\u56de\uff1aSpring 4.3 JMS\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff16\u56de\uff1aSpring 4.3 WebSocket\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff17\u56de(\u6700\u7d42\u56de)\uff1aSpring 4.3 \u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n\nSpring Framework 4.3.0.RELEASE\nSpring Boot 1.4.0.BUILD-SNAPSHOT (2016/6/11\u6642\u70b9)\n\n\nWeb Improvements\n\u4eca\u56de\u306f\u3001Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n\nNo\nWeb\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n1\nHEAD\u3068OPTIONS\u306b\u5bfe\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092Spring MVC\u304c\u6697\u9ed9\u7684\u306b\u7528\u610f\u3057\u3066\u304f\u308c\u308b\u305f\u3081\u3001\u3053\u308c\u3089\u306eHTTP\u30e1\u30bd\u30c3\u30c9\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u5b9f\u88c5\u304c\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n2\n\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001@RequestMapping\u306e\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\uff08@GetMapping, @PostMapping, @PutMapping, @DeleteMapping, @PatchMapping\uff09\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n3\nBean\u306e\u30b9\u30b3\u30fc\u30d7(Web\u5c02\u7528\u306e\u30b9\u30b3\u30fc\u30d7)\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001@Scope\u306e\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(@RequestScope, @SessionScope, @ApplicationScope)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n4\nRESTful Web Services(REST API)\u5411\u3051\u306eControllerAdvice\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001@RestControllerAdvice(@ControllerAdvice\u3068@ResponseBody\u3092\u5408\u6210\u3057\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n5\n\n@ResponseStatus\u3092\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n6\n\nHttpSession\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001@SessionAttribute\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n7\n\nHttpServletRequest\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001@RequestAttribute\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n8\n\nModel\u304b\u3089\u53d6\u5f97\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u6709\u7121\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n9\nSpring MVC\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9(HandlerExceptionResolver)\u3067Error\u3084\u81ea\u4f5c\u306eThrowable\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 (\u26056/11 \u8ffd\u52a0)\n\n\n10\n\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u306e\u30d1\u30fc\u30c8\u90e8\u5206\u3092\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308bHttpMessageConverter\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304cUTF-8\u306b\u306a\u308a\u307e\u3059\u3002 (\u26056/11 \u8ffd\u52a0)\n\n\n11\n\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306eContent-Type(Media Type)\u3092\u6c7a\u5b9a\u3059\u308b\u969b\u306b\u3001ContentNegotiationManager\u306e\u8a2d\u5b9a\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n12\n\nRestTemplate\u3068AsyncRestTemplate\u306b\u3066\u3001DefaultUriTemplateHandler\u3092\u4ecb\u3057\u3066URI\u5909\u6570\u5024\u306b\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528\u3059\u308b\u304b\u5426\u304b\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n13\n\nAsyncRestTemplate\u306b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc(RestTemplate\u3067\u3044\u3046\u3068\u3053\u308d\u306eClientHttpRequestInterceptor\u76f8\u5f53)\u306e\u4ed5\u7d44\u307f\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n\n\nHEAD\u3068OPTIONS\u306b\u5bfe\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u6697\u9ed9\u7684\u306b\u7528\u610f\u3055\u308c\u308b \n\nSpring 4.3\u304b\u3089\u3001HEAD\u3068OPTIONS\u306eHandler\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\uff01\uff01\nHTTP\u306e\u4ed5\u69d8\u306b\u6e96\u62e0\u3057\u305fWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(\u4e3b\u306bRESTful Web Services)\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001GET\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3059\u308b\u969b\u306b\u306fHEAD\u3082\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u6307\u5b9a\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u64cd\u4f5c(HTTP\u30e1\u30bd\u30c3\u30c9)\u3092OPTIONS\u30e1\u30bd\u30c3\u30c9\u7d4c\u7531\u3067\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff08\u3068\u306f\u3044\u3048\u3001\u5b9f\u969b\u306bHEAD\u3084OPTIONS\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u306e\u304b\uff1f\uff1f\uff1f\u3068\u3044\u3046\u8a71\u306f\u3053\u3053\u3067\u306f\u89e6\u308c\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3059  \uff09\n\nHEAD\u30e1\u30bd\u30c3\u30c9\nSpring 4.3\u304b\u3089\u306f\u3001GET\u30e1\u30bd\u30c3\u30c9\u7528\u306eHandler\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3068\u3001\u6697\u9ed9\u7684\u306bHEAD\u30e1\u30bd\u30c3\u30c9\u3082\u5b9f\u88c5\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n@RequestMapping(\"/todos\")\n@RestController\npublic class TodoRestController {\n\n    private final ConcurrentMap<String, Resource> resources = new ConcurrentHashMap<>();\n\n    @RequestMapping(method = RequestMethod.GET) // GET\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u30de\u30c3\u30d4\u30f3\u30b0\n    List<Resource> getAll() {\n        return resources.values().stream()\n                .sorted((a, b) -> a.createdAt.compareTo(b.createdAt))\n                .collect(Collectors.toList());\n\n    }\n    // ...\n}\n\n\u8d77\u52d5\u76f4\u5f8c\u306bGET\u30e1\u30bd\u30c3\u30c9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u7a7a\u306e\u30ea\u30b9\u30c8(JSON)\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/todos\n\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sun, 29 May 2016 14:32:33 GMT\n\n[]\n\nHEAD\u30e1\u30bd\u30c3\u30c9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u30e1\u30bf\u60c5\u5831(Content-Type\u306a\u3069)\u306e\u307f\u8fd4\u5374\u3055\u308c\u307e\u3059  \n$ curl -I http://localhost:8080/todos\n\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: application/json;charset=UTF-8\nContent-Length: 2\nDate: Sun, 29 May 2016 14:33:36 GMT\n\n\nSpring 4.2\u3067\u540c\u3058\u5b9f\u88c5\u3092\u3059\u308b\u3068\u30fb\u30fb\u30fb405 Method Not Allowed\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059  \nHTTP/1.1 405 Method Not Allowed\nServer: Apache-Coyote/1.1\nAllow: GET\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sun, 29 May 2016 14:37:42 GMT\n\n\nSpring 4.2\u30674.3\u3068\u540c\u3058\u6319\u52d5\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001HEAD\u30e1\u30bd\u30c3\u30c9\u3092\u660e\u793a\u7684\u306bHandler\u30e1\u30bd\u30c3\u30c9\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n@RequestMapping(method = {RequestMethod.GET, RequestMethod.HEAD}) // HEAD\u3082\u52a0\u3048\u308b\nList<Resource> getAll() {\n    // ...\n}\n\n\nOPTIONS\u30e1\u30bd\u30c3\u30c9\nSpring 4.3\u304b\u3089\u306f\u3001\u6697\u9ed9\u7684\u306bOPTIONS\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\nOPTIONS\u30e1\u30bd\u30c3\u30c9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u660e\u793a\u7684\u306b\u5b9f\u88c5\u3057\u305fGET\u3068Spring\u304c\u6697\u9ed9\u5b9f\u88c5\u3057\u3066\u304f\u308c\u308bHEAD\u306e\uff12\u3064\u304cAllow\u30d8\u30c3\u30c0\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059  \n$ curl -D - -X OPTIONS http://localhost:8080/todos\n\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nAllow: GET,HEAD\nContent-Length: 0\nDate: Sun, 29 May 2016 14:46:12 GMT\n\n\nSpring 4.2\u3060\u3068\u30fb\u30fb\u30fbDispatcherServlet\u304c\u6271\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5168\u3066Allow\u30d8\u30c3\u30c0\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3060\u3068\u3001HTTP\u306e\u4ed5\u69d8\u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3068\u306f\u3044\u3048\u307e\u305b\u3093\u30fb\u30fb\u30fb \nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nAllow: GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, PATCH\nContent-Length: 0\nDate: Sun, 29 May 2016 14:52:10 GMT\n\n\nSpring 4.2\u3067HTTP\u306e\u4ed5\u69d8\u306b\u6e96\u62e0\u3059\u308b\u305f\u3081\u306b\u306f\u3001DispatcherServlet\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5909\u66f4(dispatchOptionsRequest\u30d7\u30ed\u30d1\u30c6\u30a3\u3092true\u306b)\u3057\u305f\u4e0a\u3067\u3001OPTIONS\u30e1\u30bd\u30c3\u30c9\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306eHandler\u30e1\u30bd\u30c3\u30c9\u3092\u660e\u793a\u7684\u306b\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306fSpring Boot\u4e0a\u3067\u306e\u5909\u66f4\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nsrc/main/resources/application.properties\nspring.mvc.dispatch-options-request=true\n\n\n@RequestMapping(method = RequestMethod.OPTIONS) // OPTIONS\u3092\u660e\u793a\u7684\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\nHttpHeaders options() {\n    HttpHeaders headers = new HttpHeaders();\n    Set<HttpMethod> allows = new LinkedHashSet<>();\n    allows.add(HttpMethod.GET);\n    allows.add(HttpMethod.HEAD);\n    headers.setAllow(allows);\n    return headers;\n}\n\n\n@RequestMapping\u306e\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u308b \n\nSpring 4.3\u304b\u3089\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001@RequestMapping\u306e\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\uff08@GetMapping, @PostMapping, @PutMapping, @DeleteMapping, @PatchMapping\uff09\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001GET\u30e1\u30bd\u30c3\u30c9\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u301c4.2\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u4f8b\n@RequestMapping(method = RequestMethod.GET)\nList<Resource> getAll() {\n    return resources.values().stream()\n            .sorted((a, b) -> a.createdAt.compareTo(b.createdAt))\n            .collect(Collectors.toList());\n}\n\n\n\n4.3\u301c\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u4f8b\n@GetMapping // \u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\nList<Resource> getAll() {\n    return resources.values().stream()\n            .sorted((a, b) -> a.createdAt.compareTo(b.createdAt))\n            .collect(Collectors.toList());\n}\n\n\n\u30a4\u30e1\u30fc\u30b8\u7684\u306b\u306f\u3001JAX-RS\u306e@GET, @POST\u3068\u540c\u3058\u3088\u3046\u306a\u5207\u308a\u53e3\u3067\u3059\u306d\u3002\u3060\u305f\u3001Spring\u306fHTTP\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u5c5e\u6027(\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306a\u3069)\u3092\u4f7f\u3063\u3066\u30de\u30c3\u30d4\u30f3\u30b0\u30eb\u30fc\u30eb\u3092\u8868\u73fe\u3067\u304d\u308b\u306e\u3067\u3001JAX-RS\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u306f\u5225\u7269\u3067\u3059\u3002\n\nWeb\u5c02\u7528\u306eBean\u30b9\u30b3\u30fc\u30d7\u3092\u6307\u5b9a\u3059\u308b\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u308b \n\nSpring 4.3\u304b\u3089\u3001Web\u74b0\u5883\u5c02\u7528\u306eBean\u30b9\u30b3\u30fc\u30d7(request, session, application)\u3067\u3042\u308b\u3053\u3068\u3092\u6307\u5b9a\u3059\u308b\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001session(\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7)\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f7f\u7528\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u301c4.2\u306e\u6307\u5b9a\u4f8b\n@Scope(WebApplicationContext.SCOPE_SESSION)\n@Component\npublic class Cart implements Serializable {\n    private static final long serialVersionUID = 9202491228533102493L;\n    // ...\n}\n\n\n\n4.3\u301c\u306e\u6307\u5b9a\u4f8b\n@SessionScope // \u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\n@Component\npublic class Cart implements Serializable {\n    private static final long serialVersionUID = 9202491228533102493L;\n    // ...\n}\n\n\n\n@RestControllerAdvice\u304c\u8ffd\u52a0\u3055\u308c\u308b \n\nSpring 4.3\u304b\u3089\u3001RESTful Web Services(REST API)\u5411\u3051\u306eControllerAdvice\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001@RestControllerAdvice\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002@RestControllerAdvice\u306f\u3001@ControllerAdvice\u3068@ResponseBody\u3092\u5408\u6210\u3057\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3001\u57fa\u672c\u7684\u306b\u306f@ControllerAdvice\u3068\u540c\u3058\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001@ExceptionHandler\u30e1\u30bd\u30c3\u30c9\u3067@ResponseBody\u306e\u6307\u5b9a\u3092\u7701\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u301c4.2\u306e\u5b9f\u88c5\u4f8b\n@ControllerAdvice\npublic class ApiGlobalExceptionHandler {\n    private static final Logger logger = LoggerFactory.getLogger(ApiGlobalExceptionHandler.class);\n\n    @ExceptionHandler\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    @ResponseBody // \u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n    ApiError handleException(Exception e) {\n        logger.error(\"System error occurred.\", e);\n        ApiError error = new ApiError();\n        error.setCode(\"SYSTEM_ERROR\");\n        return error;\n    }\n\n}\n\n\n\n4.3\u301c\u306e\u5b9f\u88c5\u4f8b\n@RestControllerAdvice // @ControllerAdvice\u306e\u4ee3\u308f\u308a\u306b@RestControllerAdvice\u3092\u6307\u5b9a\npublic class ApiGlobalExceptionHandler {\n\n    @ExceptionHandler\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    // @ResponseBody \u7701\u7565\u3067\u304d\u308b\n    ApiError handleException(Exception e) {\n        // ...\n    }\n\n}\n\n\n\n@ResponseStatus\u3092\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u4ed8\u4e0e\u3067\u304d\u308b \n\n@ResponseStatus\u3092\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u3001\u5fdc\u7b54\u3059\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u30b3\u30fc\u30c9(\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30b3\u30fc\u30c9)\u3092\u5404\u30e1\u30bd\u30c3\u30c9\u3067\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Controller\u30af\u30e9\u30b9\u3068ControllerAdvice\u30af\u30e9\u30b9\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u304c\u3001@ExceptionHandler\u3092\u96c6\u7d04\u3057\u305fControllerAdvice\u30af\u30e9\u30b9\u3067\u5229\u7528\u3059\u308b\u306e\u304c\u6709\u52b9\u7684\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001@ExceptionHandler\u30e1\u30bd\u30c3\u30c9\u3067@ResponseStatus\u306e\u6307\u5b9a\u3092\u7701\u7565\u3057\u305f\u6642\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u300c500(Internal Server Error)\u300d\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u304a\u3001Spring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u300c200(OK)\u300d\u3067\u3059\u3002\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u306e\u306b\u300c200(OK)\u300d\u3068\u3044\u3046\u306e\u306f\u9069\u5207\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u300c500(Internal Server Error)\u300d\u306b\u3057\u3066\u304a\u304d\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30e1\u30bd\u30c3\u30c9\u3067\u4e0a\u66f8\u304d\u3059\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR) // \u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u300c500(Internal Server Error)\u300d\u306b\u8a2d\u5b9a\u3059\u308b\n@RestControllerAdvice\npublic class ApiGlobalExceptionHandler {\n\n    @ExceptionHandler\n    ApiError handleException(Exception e) {\n        // ...\n    }\n\n}\n\n\n@SessionAttribute\u3092\u4f7f\u7528\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b \n\nHttpSession\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u5834\u5408\u306f\u3001HttpSession\u306eAPI\u3092\u76f4\u63a5\u4f7f\u308f\u305a\u306b@SessionAttribute\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u301c4.2\u306e\u5b9f\u88c5\u4f8b\n@RequestMapping(\"/users\")\n@Controller\npublic class UserController {\n    // ...\n    @PostMapping(path = \"create\")\n    String create(@Validated Form form, BindingResult result,\n                  HttpSession session) {\n        ClientInfo clientInfo = ClientInfo.class.cast(session.getAttribute(\"clientInfo\")); // \u5f15\u6570\u3067\u53d7\u3051\u53d6\u3063\u305fHttpSession\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u76f4\u63a5\u5229\u7528\u3059\u308b\n        // ...\n        return \"redirect:/users/create?complete\";\n    }\n    // ...\n}\n\n\nSpring 4.2\u307e\u3067\u306f\u3001Servlet API\u306b\u4f9d\u5b58\u3059\u308b\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002HandlerMethodArgumentResolver\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308c\u3070Servlet API\u306b\u4f9d\u5b58\u3057\u306a\u3044\u5b9f\u88c5\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u3084\u3084\u5927\u3052\u3055\u306a\u4f5c\u308a\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002Spring 4.3\u3060\u3068\u3001\u4e0a\u8a18\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n4.3\u301c\u306e\u5b9f\u88c5\u4f8b\n@RequestMapping(\"/users\")\n@Controller\npublic class UserController {\n    // ...\n    @PostMapping(path = \"create\")\n    String create(@Validated Form form, BindingResult result,\n                  @SessionAttribute ClientInfo clientInfo) { // \u5f15\u6570\u3068\u3057\u3066\u76f4\u63a5\u53d7\u3051\u53d6\u308c\u308b\n        // ...\n        return \"redirect:/users/create?complete\";\n    }\n    // ...\n}\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001HttpSession\u306b\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001ServletRequestBindingException\u304c\u767a\u751f\u3057\u3066400(Bad Request)\u306b\u306a\u308a\u307e\u3059\u3002\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u8a72\u5f53\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u308a\u4e0a\u3042\u308a\u5f97\u308b\u5834\u5408\u306f\u3001required\u5c5e\u6027\u3092false\u306b\u3059\u308b\u304b\u3001java.util.Optional\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nrequired=false\u306e\u6307\u5b9a\u4f8b\n@PostMapping(path = \"create\")\nString create(@Validated Form form, BindingResult result,\n              @SessionAttribute(required = false) ClientInfo clientInfo) { // required = false\u3092\u6307\u5b9a\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n\n\n\njava.util.Optional\u306e\u5229\u7528\u4f8b\n@PostMapping(path = \"create\")\nString create(@Validated Form form, BindingResult result,\n              @SessionAttribute Optional<ClientInfo> clientInfo) { // Optional\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n\n\n\u306a\u304a\u3001HttpSession\u304b\u3089\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3059\u308b\u969b\u306e\u5c5e\u6027\u540d\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5f15\u6570\u306e\u540d\u524d\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u30c7\u30d0\u30c3\u30b0\u60c5\u5831(JDK\u306e\u300c-g\u300d\u30aa\u30d7\u30b7\u30e7\u30f3)\u307e\u305f\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30e1\u30bf\u60c5\u5831(JDK 8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u300c-parameters\u300d\u30aa\u30d7\u30b7\u30e7\u30f3)\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u5f8c\u306e\u30af\u30e9\u30b9\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u60c5\u5831\u3092\u30af\u30e9\u30b9\u306b\u542b\u3081\u306a\u3044\u5834\u5408\u306f\u3001name\u5c5e\u6027(or value\u5c5e\u6027)\u306b\u5c5e\u6027\u540d\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nname\u5c5e\u6027\u306e\u6307\u5b9a\u4f8b\n@PostMapping(path = \"create\")\nString create(@Validated Form form, BindingResult result,\n              @SessionAttribute(\"clientInfo\") Optional<ClientInfo> clientInfo) { // \u660e\u793a\u7684\u306b\u5c5e\u6027\u540d\u3092\u6307\u5b9a\u3059\u308b\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n\n\n\n@RequestAttribute\u3092\u4f7f\u7528\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b \n\nHttpServletRequest\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u5834\u5408\u306f\u3001HttpServletRequest\u306eAPI\u3092\u76f4\u63a5\u4f7f\u308f\u305a\u306b@RequestAttribute\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5177\u4f53\u7684\u306a\u4f7f\u3044\u65b9\u306f\u3001@SessionAttribute\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u672c\u6295\u7a3f\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u6709\u7121\u3092\u5236\u5fa1\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001Model\u304b\u3089\u53d6\u5f97\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u6709\u7121\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Spring MVC\u3067\u306f\u3001Handler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u30d5\u30a9\u30fc\u30e0\u30af\u30e9\u30b9\u306a\u3069\u306eJavaBean\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001JavaBean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u5024\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u306f\u975e\u5e38\u306b\u4fbf\u5229\u306a\u306e\u3067\u3059\u304c\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u3084\u30d5\u30e9\u30c3\u30b7\u30e5\u30b9\u30b3\u30fc\u30d7\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u306f\u3001\u3053\u306e\u4ed5\u7d44\u307f\u3092\u9069\u7528\u3057\u305f\u304f\u306a\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u5165\u529b\u30d5\u30a9\u30fc\u30e0\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u3067\u7ba1\u7406\u3057\u3066\u3044\u3066\u3001\u78ba\u8a8d\u753b\u9762\u304b\u3089\u9001\u4fe1\u51e6\u7406\u3092\u884c\u3046\u969b\u306b\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30d0\u30a4\u30f3\u30c9\u3055\u305b\u305f\u304f\u306a\u3044\uff01\uff01\u3068\u3044\u3046\u30b1\u30fc\u30b9\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002\nSpring 4.3\u3067\u306f\u3001@ModelAttribute\u306ebinding\u5c5e\u6027\u306bfalse\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u6291\u6b62\u3067\u304d\u307e\u3059\u3002\n\n\u301c4.2\u306e\u5b9f\u88c5\u4f8b\n@RequestMapping(path = \"create\", method = RequestMethod.POST)\nString create(ModelMap model) {\n    Form form = Form.class.cast(model.get(\"form\")); // \u5f15\u6570\u3067\u3046\u3051\u3068\u3063\u305fMap\u304b\u3089\u53d6\u5f97\u3059\u308b\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n\n\n\n4.3\u301c\u306e\u5b9f\u88c5\u4f8b\n@PostMapping(path = \"create\")\nString create(@ModelAttribute(binding = false) Form form) { // binding=false\u3092\u6307\u5b9a\u3057\u3066\u5f15\u6570\u3068\u3057\u3066\u76f4\u63a5\u53d7\u3051\u53d6\u308b\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n\n\n\nSpring MVC\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9\u3067Error\u3084Throwable\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001Spring MVC\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9(HandlerExceptionResolver)\u3067Error\u3084\u81ea\u4f5c\u306eThrowable\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Spring 4.2\u307e\u3067\u306f\u3001\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9\u306f\u547c\u3073\u51fa\u3055\u308c\u305a\u3001NestedServletException\u306b\u30e9\u30c3\u30d7\u3057\u3066\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u3078\u30b9\u30ed\u30fc\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u7279\u5b9a\u306eError\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u969b\u306e\u5b9f\u88c5\u4f8b\n@ExceptionHandler\npublic String handleStackOverflowError(StackOverflowError e) {\n    // ...\n}\n\n\n\u57fa\u672c\u7684\u306b\u306f\u3001Error\u3084Throwable\u306f\u3080\u3084\u307f\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u3079\u304d\u3067\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8981\u4ef6\u306b\u3088\u3063\u3066\u306f\u5229\u7528\u3092\u691c\u8a0e\u3057\u3066\u3082\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3053\u306e\u6539\u5584\u306b\u4f34\u3044\uff11\u70b9\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f\u3001\u3059\u3067\u306bjava.lang.Exception\u3084javax.servlet.ServletException\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u3068\u3001Spring 4.3\u3092\u4f7f\u3046\u3068\u610f\u56f3\u305b\u305aError\u3084Throwable\u3082\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u30fb\u30fb\u30fb  \n\u3053\u308c\u3092\u56de\u907f\u3059\u308b\u306b\u306f\u30fb\u30fb\u30fb\uff08\u3069\u3046\u3059\u308b\u306e\u304c\u3044\u3044\u306e\u304b\u306a\u30fb\u30fb\u30fb  \uff09 \u3068\u308a\u3042\u3048\u305a\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d0\u30a4\u30d1\u30b9\u7684\u306a\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308c\u3070Spring 4.2\u3068\u540c\u3058\u52d5\u304d\u306b(\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u901a\u77e5)\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u3051\u3069\u30fb\u30fb\u30fb\u30fb\uff08\u306a\u3093\u304b\u9055\u3046\u6c17\u304c\u3057\u3066\u306a\u3089\u306a\u3044\u30fb\u30fb\u30fb  \uff09\n@ExceptionHandler\npublic void handleNestedServletException(NestedServletException e) throws NestedServletException {\n    throw e;\n}\n\n\n\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u306e\u30d1\u30fc\u30c8\u90e8\u5206\u3092\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308bHttpMessageConverter\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304cUTF-8\u306b\u306a\u308b \n\nSpring 4.3\u304b\u3089\u3001\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u306e\u30d1\u30fc\u30c8\u90e8\u5206\u3092\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308bHttpMessageConverter\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304cUTF-8\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001RestTemplate\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u30fc\u3078\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u3084\u3001ResponseEntity\u3084@ResponseBody\u3092\u4f7f\u3063\u3066\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30c7\u30fc\u30bf\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u5fdc\u7b54\u3059\u308b\u969b\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u65b0\u898f\u306b\u4f5c\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5834\u5408\u306f\u3001UTF-8\u3092\u5229\u7528\u3059\u308b\u30b1\u30fc\u30b9\u304c\u591a\u3044\u3060\u308d\u3046\u304b\u3089\u3001\u3053\u306e\u5bfe\u5fdc\u306f\u5730\u5473\u306b\u3046\u308c\u3057\u3044\u3067\u3059\u306d  \n\u3053\u3053\u3067\u306f\u3001\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u9001\u308b\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5b9f\u88c5\u4f8b\n@RequestMapping(\"/upload\")\n@RestController\npublic class UploadRestController {\n    @RequestMapping(method = RequestMethod.POST)\n    String upload(MultipartFile file, String text) throws IOException {\n        System.out.println(StreamUtils.copyToString(file.getInputStream(), StandardCharsets.UTF_8));\n        System.out.println(text);\n        return file.getOriginalFilename();\n    }\n}\n\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u5b9f\u88c5\u4f8b(JUnit)\n\n@Test\npublic void upload() {\n\n    RestTemplate restTemplate = new RestTemplate();\n    // \u30c7\u30d0\u30c3\u30b0\u7528\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u3092\u5dee\u3057\u8fbc\u3080\n    restTemplate.setInterceptors(Collections.singletonList((request, body, execution) -> {\n        System.out.println(new String(body));\n        return execution.execute(request, body);\n    }));\n\n    // \u30d5\u30a1\u30a4\u30eb\u3068\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    MultiValueMap<String, Object> form = new LinkedMultiValueMap<>();\n    form.add(\"file\", new FileSystemResource(\"./a.txt\"));\n    form.add(\"text\", \"\u3042\u3042\u3042\");\n\n    // \u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\n    RequestEntity<MultiValueMap<String, Object>> requestEntity =\n            RequestEntity.post(URI.create(\"http://localhost:8080/upload\"))\n                    .contentType(MediaType.MULTIPART_FORM_DATA)\n                    .body(form);\n\n    // \u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\n    ResponseEntity<String> responseEntity = restTemplate.exchange(requestEntity, String.class);\n    System.out.println(responseEntity.getBody());\n}\n\n\nJUnit\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb(\u30af\u30e9\u30a4\u30a2\u30f3\u30c8)\n--_U91C0cWNkMO5HsYdnhF29Vz1Tj7dh0e0nQrAzM0\nContent-Disposition: form-data; name=\"file\"; filename=\"a.txt\"\nContent-Type: text/plain\nContent-Length: 12\n\n\u3042\u3042\u3042\u3042\n--_U91C0cWNkMO5HsYdnhF29Vz1Tj7dh0e0nQrAzM0\nContent-Disposition: form-data; name=\"text\"\nContent-Type: text/plain;charset=UTF-8\nContent-Length: 9\n\n\u3042\u3042\u3042\n--_U91C0cWNkMO5HsYdnhF29Vz1Tj7dh0e0nQrAzM0--\na.txt\n\n\n\u3053\u3053\u3067\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308b\u306e\u304c\u3001\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u306etext\u306eContent-Type\u306echarset\u304cUTF-8\u306b\u306a\u3063\u3066\u3044\u308b\u70b9\u3067\u3059\u3002\n\n4.3\u301c\n--_U91C0cWNkMO5HsYdnhF29Vz1Tj7dh0e0nQrAzM0\nContent-Disposition: form-data; name=\"text\"\nContent-Type: text/plain;charset=UTF-8\nContent-Length: 9\n\n\u3042\u3042\u3042\n\n\nSpring 4.2\u3060\u3068\u3001\u3053\u306e\u90e8\u5206\u304cISO-8859-1\u306b\u306a\u308b\u305f\u3081\u3001\u65e5\u672c\u8a9e\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u4f7f\u3046\u3068\u6587\u5b57\u5316\u3051\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u4efb\u610f\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u9762\u5012\u306a\u3093\u3060\u3088\u306d\u30fb\u30fb\u30fb  \n\n\u301c4.2\n--JPpi8b-TOpRe3PyEB7vcjpjID072o6wxXAZy7\nContent-Disposition: form-data; name=\"text\"\nContent-Type: text/plain;charset=ISO-8859-1\nContent-Length: 3\n\n???\n\n\n\u3067\u306f\u3001UTF-8\u4ee5\u5916\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f \u3053\u3053\u3067\u306f\u3001\u65e5\u672c\u306e\u30b7\u30b9\u30c6\u30e0\u3060\u3068\u307e\u3060\u307e\u3060\u73fe\u5f79\uff01\uff1f\u306e\u300cWindows-31J\u300d\u306b\u5909\u66f4\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u5909\u66f4\u3059\u308b\u969b\u306e\u5b9f\u88c5\u4f8b\nRestTemplate restTemplate = new RestTemplate();\nrestTemplate.getMessageConverters().stream()\n        .filter(c -> c instanceof FormHttpMessageConverter)\n        .forEach(c -> ((FormHttpMessageConverter) c).setCharset(Charset.forName(\"Windows-31J\")));\n\n\n\n\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092Windows-31J\u306b\u3057\u305f\u5834\u5408\u306e\u30c6\u30ad\u30b9\u30c8\u90e8\n--oym_khz0wPMOlL5rD3WZ70mNapWvjiaMXs\nContent-Disposition: form-data; name=\"text\"\nContent-Type: text/plain;charset=windows-31j\nContent-Length: 6\n\n\u3042\u3042\u3042\n\n\nContent-Length\u30826\u30d0\u30a4\u30c8\u306a\u306e\u3067\u3001Window-31J\u306b\u306a\u308a\u307e\u3057\u305f\u306d  \n\n\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306eContent-type\u3092ContentNegotiationManager\u7d4c\u7531\u3067\u6307\u5b9a\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306eContent-Type(Media Type)\u3092\u6c7a\u5b9a\u3059\u308b\u969b\u306b\u3001ContentNegotiationManager\u306e\u8a2d\u5b9a\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u306e\u307e\u307e\u3067\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\n\nsrc/main/resources/static/test.xml\n<test>\n    <code>TEST</code>\n</test>\n\n\n$ curl -D - http://localhost:8080/test.xml\n\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nLast-Modified: Sun, 29 May 2016 18:42:38 GMT\nAccept-Ranges: bytes\nContent-Type: application/xml\nContent-Length: 36\nDate: Sun, 29 May 2016 18:42:54 GMT\n\n<test>\n    <code>TEST</code>\n</test>\n\n\u6b21\u306bContentNegotiationManager\u306e\u8a2d\u5b9a\u3092\u5909\u66f4(\u62e1\u5f35\u5b50\u304cxml\u306e\u30e1\u30c7\u30a3\u30a2\u30bf\u30a4\u30d7\u3092text/xml\u306b\u8a2d\u5b9a)\u3057\u3066\u304b\u3089\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\nContentNegotiationManager\u306e\u8a2d\u5b9a\u5909\u66f4\u4f8b\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    @Override\n    public void configureContentNegotiation(ContentNegotiationConfigurer configurer) {\n        configurer.mediaType(\"xml\", MediaType.TEXT_XML); // XML\u306e\u30e1\u30c7\u30a3\u30a2\u30bf\u30a4\u30d7\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\n    }\n}\n\n\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nLast-Modified: Sun, 29 May 2016 18:42:38 GMT\nAccept-Ranges: bytes\nContent-Type: text/xml\nContent-Length: 36\nDate: Sun, 29 May 2016 18:45:21 GMT\n\n<test>\n    <code>TEST</code>\n</test>\n\n\nRestTemplate\u3068AsyncRestTemplate\u306b\u3066URI\u5909\u6570\u5024\u306b\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001RestTemplate\u3068AsyncRestTemplate\u306b\u8a2d\u5b9a\u3059\u308bDefaultUriTemplateHandler\u3092\u4ecb\u3057\u3066\u3001URI\u5909\u6570\u5024\u306b\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u3001\u53b3\u683c\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u884c\u3044\u307e\u305b\u3093\u3002\n\u53b3\u683c\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u300cRFC 3986\u306e\u30bb\u30af\u30b7\u30e7\u30f3\uff12\u300d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u300cunreserved\u300d\u4ee5\u5916\u306e\u6587\u5b57\u3082URL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u300c;\u300d\u3092\u4f8b\u306b\u3001\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6709\u7121\u3067\u3069\u306e\u3088\u3046\u306a\u9055\u3044\u304c\u3067\u308b\u306e\u304b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d0\u5074\u306e\u5b9f\u88c5\u4f8b\n@GetMapping(path = \"/users/{username}\")\n@ResponseBody\nString get(@PathVariable String username) {\n    return username;  // \u30d1\u30b9\u5909\u6570\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u540d\u3092\u53d6\u5f97\u3057\u3001\u53d6\u5f97\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u540d\u3092\u8fd4\u5374\u3059\u308b\n}\n\n\n\u307e\u305a\u3001\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u308f\u306a\u3044\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u308f\u306a\u3044\u5834\u5408\u306e\u5b9f\u88c5\u4f8b\nRestTemplate restTemplate = new RestTemplate();\nString body = restTemplate.getForObject(\"http://localhost:8080/users/{username}\"\n        , String.class, \"Kazuki;Shimizu\");\nSystem.out.println(body);\n\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nKazuki\n\n\n\u6b8b\u5ff5\u306a\u3053\u3068\u306b\u3001\u300c;\u300d\u4ee5\u964d\u306e\u6587\u5b57\u304c\u6b20\u843d\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u308f\u306a\u3044\u3068\u3001\u300chttp://localhost:8080/users/Kazuki;Shimizu\u300d\u3068\u3044\u3046URL\u3067\u30b5\u30fc\u30d0\u30fc\u5074\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u3001\u300c;\u300d\u4ee5\u964d\u304c\u6b20\u843d\u3057\u307e\u3057\u305f\u3002\n\u6b21\u306b\u3001\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3046\u5834\u5408\u306e\u5b9f\u88c5\u4f8b\nRestTemplate restTemplate = new RestTemplate();\nDefaultUriTemplateHandler handler = new DefaultUriTemplateHandler();\nhandler.setStrictEncoding(true); // \u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u6709\u52b9\u5316\u3059\u308b\nrestTemplate.setUriTemplateHandler(handler);\nString body = restTemplate.getForObject(\"http://localhost:8080/users/{username}\"\n        , String.class, \"Kazuki;Shimizu\");\nSystem.out.println(body);\n\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nKazuki;Shimizu\n\n\n\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3068\u3001\u300chttp://localhost:8080/users/Kazuki%3BShimizu\u300d\u3068\u3044\u3046URL\u3067\u30b5\u30fc\u30d0\u30fc\u5074\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u3001\u300c;\u300d\u4ee5\u964d\u306e\u6587\u5b57\u306f\u6b20\u843d\u3057\u307e\u305b\u3093\u3002\n\nAsyncRestTemplate\u306b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u3092\u7d44\u307f\u8fbc\u3081\u308b \n\nSpring 4.3\u304b\u3089\u3001AsyncRestTemplate\u306b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc(RestTemplate\u3067\u3044\u3046\u3068\u3053\u308d\u306eClientHttpRequestInterceptor\u76f8\u5f53)\u306e\u4ed5\u7d44\u307f\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u500b\u4eba\u7684\u306b\u306f\u30fb\u30fb\u30fb\u5f85\u671b\u306e\u30fb\u30fb\u30fb\u3068\u3044\u3063\u305f\u611f\u3058\u304c\u3042\u308a\u307e\u3059  \n\u3053\u3053\u3067\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30ed\u30b0\u51fa\u529b\u3059\u308b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u3092\u4f5c\u6210\u3057\u3001AsyncRestTemplate\u306b\u9069\u7528\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u306e\u5b9f\u88c5\u4f8b\npublic class LoggingInterceptor implements AsyncClientHttpRequestInterceptor {\n    @Override\n    public ListenableFuture<ClientHttpResponse> intercept(HttpRequest request, byte[] body, AsyncClientHttpRequestExecution execution) throws IOException {\n\n        // \u30ea\u30af\u30a8\u30b9\u30c8\u524d\u306b\u884c\u3046\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Request Header : {}\", request.getHeaders());\n            logger.debug(\"Request Body   : {}\", new String(body, StandardCharsets.UTF_8));\n        }\n\n        // \u5f8c\u7d9a\u51e6\u7406(\u5225\u306eAsyncClientHttpRequestInterceptor\u307e\u305f\u306f\u975e\u540c\u671f\u901a\u4fe1\u51e6\u7406)\u3092\u547c\u3073\u51fa\u3059\n        ListenableFuture<ClientHttpResponse> future = execution.executeAsync(request, body);\n\n        // \u30ec\u30b9\u30dd\u30f3\u30b9\u5f8c\u306b\u884c\u3046\u51e6\u7406\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\u3057\u3066ListenableFuture\u306b\u8ffd\u52a0\u3059\u308b\n        if (logger.isDebugEnabled()) {\n            future.addCallback(\n                    response -> {\n                        try {\n                            logger.debug(\"Response Status : {}\", response.getStatusCode());\n                            logger.debug(\"Response Header : {}\", response.getHeaders());\n                        } catch (IOException e) {\n                            throw new UncheckedIOException(e);\n                        }\n                    },\n                    e -> logger.debug(\"Error!!\", e)\n            );\n        }\n        return future;\n    }\n}\n\n\n\n\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u306e\u9069\u7528\u4f8b\nAsyncRestTemplate asyncRestTemplate = new AsyncRestTemplate();\nasyncRestTemplate.setInterceptors(Collections.singletonList(new LoggingInterceptor())); // \u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u3092\u9069\u7528\u3059\u308b\nListenableFuture<ResponseEntity<String>> future = asyncRestTemplate.getForEntity(\"http://localhost:8080/users/{username}\"\n        , String.class, \"kazuki43zoo\");\nfuture.addCallback(\n        entity -> System.out.println(entity.getBody()),\n        Throwable::printStackTrace);\n\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\n06:37:56.706 [main] DEBUG org.springframework.web.client.AsyncRestTemplate - Created asynchronous GET request for \"http://localhost:8080/users/kazuki43zoo\"\n06:37:56.713 [main] DEBUG org.springframework.web.client.RestTemplate - Setting request Accept header to [text/plain, application/json, application/*+json, */*]\n06:37:56.715 [main] DEBUG com.example.RestTemplateTests - Request Header : {Accept=[text/plain, application/json, application/*+json, */*], Content-Length=[0]}\n06:37:56.717 [main] DEBUG com.example.RestTemplateTests - Request Body   : \n06:37:59.755 [SimpleAsyncTaskExecutor-1] DEBUG com.example.RestTemplateTests - Response Status : 200\n06:37:59.755 [SimpleAsyncTaskExecutor-1] DEBUG com.example.RestTemplateTests - Response Header : {Server=[Apache-Coyote/1.1], Content-Type=[text/plain;charset=UTF-8], Content-Length=[11], Date=[Sun, 29 May 2016 21:37:59 GMT]}\n06:37:59.756 [SimpleAsyncTaskExecutor-1] DEBUG org.springframework.web.client.AsyncRestTemplate - Async GET request for \"http://localhost:8080/users/kazuki43zoo\" resulted in 200 (OK)\n06:37:59.757 [SimpleAsyncTaskExecutor-1] DEBUG org.springframework.web.client.RestTemplate - Reading [java.lang.String] as \"text/plain;charset=UTF-8\" using [org.springframework.http.converter.StringHttpMessageConverter@245d5499]\nkazuki43zoo\n\n\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u3001Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u3042\u308b\u65b0\u6a5f\u80fd\u306f\u306a\u3044\u3082\u306e\u306e\u3001\u65b0\u3057\u3044\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\u3084\u65e2\u5b58\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u6319\u52d5\u306e\u6539\u5584\u306a\u3069\u304c\u884c\u308f\u308c\u3066\u304a\u308a\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u99c6\u52d5\u958b\u767a\u3092\u624b\u52a9\u3051\u3059\u308b\u6a5f\u80fd\u304c\u5f37\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u500b\u4eba\u7684\u306b\u306fAsyncRestTemplate\u306b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u304c\u5c0e\u5165\u3055\u308c\u305f\u306e\u306fGood News\u3067\u3057\u305f\uff01\uff01  \u6b21\u56de\u306f\u3001\u300cWeb Socket\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u300d\u3092\u7d39\u4ecb\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://docs.spring.io/spring/docs/4.3.0.RELEASE/spring-framework-reference/htmlsingle/\nhttp://www.slideshare.net/makingx/jjugccc-cccgh5-whats-new-in-spring-framework-43-boot-14-pivotals-cloud-native-approach\n\n\n\u88dc\u8db3\n\nSpring 4.3 GA\u306b\u4f34\u3044\u5909\u66f4\u70b9\u3092\u8ffd\u52a0 (2016/6/11)\n\u3064\u3044\u306b4.3\u304cGA\u306b\u306a\u308a\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e3b\u306a\u5909\u66f4\u70b9\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30c8\u30d4\u30c3\u30af\u30b9\u3092\u53cd\u6620\u3057\u307e\u3057\u305f\u3002\uff08\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\u4eca\u56de\u306f\u3001Spring Framework 4.3\u306e\u5909\u66f4\u70b9\u7d39\u4ecb\u30b7\u30ea\u30fc\u30ba\u306e\u7b2c5\u56de\u3067\u3001Web\u95a2\u9023\u306e\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\uff08\u30ea\u30ea\u30fc\u30b9\u524d\u306e\u6295\u7a3f\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\uff01\uff01\u3000\u5dee\u5206\u306f\u3001\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\n# \u30b7\u30ea\u30fc\u30ba\n\n* \u7b2c\uff11\u56de\uff1a[Spring 4.3 DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/172d132ff8f4ba098888)\n* \u7b2c\uff12\u56de\uff1a[Spring 4.3 \u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/bc036b433444f5c33dc4)\n* \u7b2c\uff13\u56de\uff1a[Spring 4.3 \u30ad\u30e3\u30c3\u30b7\u30e5\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/43cea4b36822b58c0562)\n* \u7b2c\uff14\u56de\uff1a[Spring 4.3 JMS\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/f0142ebe76dbe873bd5d)\n* \u7b2c\uff16\u56de\uff1a[Spring 4.3 WebSocket\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/f2eac11f94e2afc7c964)\n* \u7b2c\uff17\u56de(\u6700\u7d42\u56de)\uff1a[Spring 4.3 \u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/6b6ecafd8e69a54e4803)\n\n# \u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n\n* Spring Framework 4.3.0.RELEASE\n* Spring Boot 1.4.0.BUILD-SNAPSHOT (2016/6/11\u6642\u70b9)\n\n# Web Improvements\n\n\u4eca\u56de\u306f\u3001Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n| No | Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| --- | --- |\n| 1 | HEAD\u3068OPTIONS\u306b\u5bfe\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092Spring MVC\u304c\u6697\u9ed9\u7684\u306b\u7528\u610f\u3057\u3066\u304f\u308c\u308b\u305f\u3081\u3001\u3053\u308c\u3089\u306eHTTP\u30e1\u30bd\u30c3\u30c9\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u5b9f\u88c5\u304c\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 2 | \u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001`@RequestMapping`\u306e\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\uff08`@GetMapping`, `@PostMapping`, `@PutMapping`, `@DeleteMapping`, `@PatchMapping`\uff09\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 3 | Bean\u306e\u30b9\u30b3\u30fc\u30d7(Web\u5c02\u7528\u306e\u30b9\u30b3\u30fc\u30d7)\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001`@Scope`\u306e\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(`@RequestScope`, `@SessionScope`, `@ApplicationScope`)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 4 | RESTful Web Services(REST API)\u5411\u3051\u306eControllerAdvice\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001`@RestControllerAdvice`(`@ControllerAdvice`\u3068`@ResponseBody`\u3092\u5408\u6210\u3057\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 5 | `@ResponseStatus`\u3092\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 6 | `HttpSession`\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001`@SessionAttribute`\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 7 | `HttpServletRequest`\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001`@RequestAttribute`\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 8 | `Model`\u304b\u3089\u53d6\u5f97\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u6709\u7121\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 9 | Spring MVC\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9(`HandlerExceptionResolver`)\u3067`Error`\u3084\u81ea\u4f5c\u306e`Throwable`\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 (\u26056/11 \u8ffd\u52a0) |\n| 10 | \u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u306e\u30d1\u30fc\u30c8\u90e8\u5206\u3092\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308b`HttpMessageConverter`\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304cUTF-8\u306b\u306a\u308a\u307e\u3059\u3002 (\u26056/11 \u8ffd\u52a0) |\n| 11 | \u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306eContent-Type(Media Type)\u3092\u6c7a\u5b9a\u3059\u308b\u969b\u306b\u3001`ContentNegotiationManager`\u306e\u8a2d\u5b9a\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 12 | `RestTemplate`\u3068`AsyncRestTemplate`\u306b\u3066\u3001`DefaultUriTemplateHandler`\u3092\u4ecb\u3057\u3066URI\u5909\u6570\u5024\u306b\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528\u3059\u308b\u304b\u5426\u304b\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 13 | `AsyncRestTemplate`\u306b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc(`RestTemplate`\u3067\u3044\u3046\u3068\u3053\u308d\u306e`ClientHttpRequestInterceptor`\u76f8\u5f53)\u306e\u4ed5\u7d44\u307f\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n\n# HEAD\u3068OPTIONS\u306b\u5bfe\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u6697\u9ed9\u7684\u306b\u7528\u610f\u3055\u308c\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001HEAD\u3068OPTIONS\u306eHandler\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\uff01\uff01\nHTTP\u306e\u4ed5\u69d8\u306b\u6e96\u62e0\u3057\u305fWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(\u4e3b\u306bRESTful Web Services)\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001GET\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3059\u308b\u969b\u306b\u306fHEAD\u3082\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u6307\u5b9a\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u64cd\u4f5c(HTTP\u30e1\u30bd\u30c3\u30c9)\u3092OPTIONS\u30e1\u30bd\u30c3\u30c9\u7d4c\u7531\u3067\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff08\u3068\u306f\u3044\u3048\u3001\u5b9f\u969b\u306bHEAD\u3084OPTIONS\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u306e\u304b\uff1f\uff1f\uff1f\u3068\u3044\u3046\u8a71\u306f\u3053\u3053\u3067\u306f\u89e6\u308c\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3059 :sweat_smile: \uff09\n\n## HEAD\u30e1\u30bd\u30c3\u30c9\n\nSpring 4.3\u304b\u3089\u306f\u3001GET\u30e1\u30bd\u30c3\u30c9\u7528\u306eHandler\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3068\u3001\u6697\u9ed9\u7684\u306bHEAD\u30e1\u30bd\u30c3\u30c9\u3082\u5b9f\u88c5\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\n@RequestMapping(\"/todos\")\n@RestController\npublic class TodoRestController {\n\n    private final ConcurrentMap<String, Resource> resources = new ConcurrentHashMap<>();\n\n    @RequestMapping(method = RequestMethod.GET) // GET\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u30de\u30c3\u30d4\u30f3\u30b0\n    List<Resource> getAll() {\n        return resources.values().stream()\n                .sorted((a, b) -> a.createdAt.compareTo(b.createdAt))\n                .collect(Collectors.toList());\n\n    }\n    // ...\n}\n```\n\n\u8d77\u52d5\u76f4\u5f8c\u306bGET\u30e1\u30bd\u30c3\u30c9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u7a7a\u306e\u30ea\u30b9\u30c8(JSON)\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ curl -D - http://localhost:8080/todos\n```\n```text\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sun, 29 May 2016 14:32:33 GMT\n\n[]\n```\n\nHEAD\u30e1\u30bd\u30c3\u30c9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u30e1\u30bf\u60c5\u5831(Content-Type\u306a\u3069)\u306e\u307f\u8fd4\u5374\u3055\u308c\u307e\u3059 :blush: \n\n```bash\n$ curl -I http://localhost:8080/todos\n```\n```\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: application/json;charset=UTF-8\nContent-Length: 2\nDate: Sun, 29 May 2016 14:33:36 GMT\n\n```\n\nSpring 4.2\u3067\u540c\u3058\u5b9f\u88c5\u3092\u3059\u308b\u3068\u30fb\u30fb\u30fb405 Method Not Allowed\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059 :disappointed: \n\n```\nHTTP/1.1 405 Method Not Allowed\nServer: Apache-Coyote/1.1\nAllow: GET\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sun, 29 May 2016 14:37:42 GMT\n\n```\n\nSpring 4.2\u30674.3\u3068\u540c\u3058\u6319\u52d5\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001HEAD\u30e1\u30bd\u30c3\u30c9\u3092\u660e\u793a\u7684\u306bHandler\u30e1\u30bd\u30c3\u30c9\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```java\n@RequestMapping(method = {RequestMethod.GET, RequestMethod.HEAD}) // HEAD\u3082\u52a0\u3048\u308b\nList<Resource> getAll() {\n    // ...\n}\n```\n\n## OPTIONS\u30e1\u30bd\u30c3\u30c9\n\nSpring 4.3\u304b\u3089\u306f\u3001\u6697\u9ed9\u7684\u306bOPTIONS\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\nOPTIONS\u30e1\u30bd\u30c3\u30c9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u660e\u793a\u7684\u306b\u5b9f\u88c5\u3057\u305fGET\u3068Spring\u304c\u6697\u9ed9\u5b9f\u88c5\u3057\u3066\u304f\u308c\u308bHEAD\u306e\uff12\u3064\u304cAllow\u30d8\u30c3\u30c0\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059 :blush: \n\n```bash\n$ curl -D - -X OPTIONS http://localhost:8080/todos\n```\n```text\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nAllow: GET,HEAD\nContent-Length: 0\nDate: Sun, 29 May 2016 14:46:12 GMT\n\n```\n\nSpring 4.2\u3060\u3068\u30fb\u30fb\u30fb`DispatcherServlet`\u304c\u6271\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5168\u3066Allow\u30d8\u30c3\u30c0\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3060\u3068\u3001HTTP\u306e\u4ed5\u69d8\u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3068\u306f\u3044\u3048\u307e\u305b\u3093\u30fb\u30fb\u30fb :disappointed:\n\n```text\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nAllow: GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, PATCH\nContent-Length: 0\nDate: Sun, 29 May 2016 14:52:10 GMT\n\n```\n\nSpring 4.2\u3067HTTP\u306e\u4ed5\u69d8\u306b\u6e96\u62e0\u3059\u308b\u305f\u3081\u306b\u306f\u3001`DispatcherServlet`\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5909\u66f4(`dispatchOptionsRequest`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092`true`\u306b)\u3057\u305f\u4e0a\u3067\u3001OPTIONS\u30e1\u30bd\u30c3\u30c9\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306eHandler\u30e1\u30bd\u30c3\u30c9\u3092\u660e\u793a\u7684\u306b\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306fSpring Boot\u4e0a\u3067\u306e\u5909\u66f4\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```src/main/resources/application.properties\nspring.mvc.dispatch-options-request=true\n```\n\n```java\n@RequestMapping(method = RequestMethod.OPTIONS) // OPTIONS\u3092\u660e\u793a\u7684\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\nHttpHeaders options() {\n    HttpHeaders headers = new HttpHeaders();\n    Set<HttpMethod> allows = new LinkedHashSet<>();\n    allows.add(HttpMethod.GET);\n    allows.add(HttpMethod.HEAD);\n    headers.setAllow(allows);\n    return headers;\n}\n```\n\n\n# `@RequestMapping`\u306e\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001`@RequestMapping`\u306e\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\uff08`@GetMapping`, `@PostMapping`, `@PutMapping`, `@DeleteMapping`, `@PatchMapping`\uff09\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001GET\u30e1\u30bd\u30c3\u30c9\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\n```java:\u301c4.2\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u4f8b\n@RequestMapping(method = RequestMethod.GET)\nList<Resource> getAll() {\n    return resources.values().stream()\n            .sorted((a, b) -> a.createdAt.compareTo(b.createdAt))\n            .collect(Collectors.toList());\n}\n```\n```java:4.3\u301c\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u4f8b\n@GetMapping // \u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\nList<Resource> getAll() {\n    return resources.values().stream()\n            .sorted((a, b) -> a.createdAt.compareTo(b.createdAt))\n            .collect(Collectors.toList());\n}\n```\n\n\u30a4\u30e1\u30fc\u30b8\u7684\u306b\u306f\u3001JAX-RS\u306e`@GET`, `@POST`\u3068\u540c\u3058\u3088\u3046\u306a\u5207\u308a\u53e3\u3067\u3059\u306d\u3002\u3060\u305f\u3001Spring\u306fHTTP\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u5c5e\u6027(\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306a\u3069)\u3092\u4f7f\u3063\u3066\u30de\u30c3\u30d4\u30f3\u30b0\u30eb\u30fc\u30eb\u3092\u8868\u73fe\u3067\u304d\u308b\u306e\u3067\u3001JAX-RS\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u306f\u5225\u7269\u3067\u3059\u3002\n\n\n# Web\u5c02\u7528\u306eBean\u30b9\u30b3\u30fc\u30d7\u3092\u6307\u5b9a\u3059\u308b\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001Web\u74b0\u5883\u5c02\u7528\u306eBean\u30b9\u30b3\u30fc\u30d7(`request`, `session`, `application`)\u3067\u3042\u308b\u3053\u3068\u3092\u6307\u5b9a\u3059\u308b\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001`session`(\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7)\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f7f\u7528\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```java:\u301c4.2\u306e\u6307\u5b9a\u4f8b\n@Scope(WebApplicationContext.SCOPE_SESSION)\n@Component\npublic class Cart implements Serializable {\n    private static final long serialVersionUID = 9202491228533102493L;\n    // ...\n}\n```\n\n```java:4.3\u301c\u306e\u6307\u5b9a\u4f8b\n@SessionScope // \u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\n@Component\npublic class Cart implements Serializable {\n    private static final long serialVersionUID = 9202491228533102493L;\n    // ...\n}\n```\n\n# `@RestControllerAdvice`\u304c\u8ffd\u52a0\u3055\u308c\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001RESTful Web Services(REST API)\u5411\u3051\u306eControllerAdvice\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001`@RestControllerAdvice`\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002`@RestControllerAdvice`\u306f\u3001`@ControllerAdvice`\u3068`@ResponseBody`\u3092\u5408\u6210\u3057\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3001\u57fa\u672c\u7684\u306b\u306f`@ControllerAdvice`\u3068\u540c\u3058\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001`@ExceptionHandler`\u30e1\u30bd\u30c3\u30c9\u3067`@ResponseBody`\u306e\u6307\u5b9a\u3092\u7701\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:\u301c4.2\u306e\u5b9f\u88c5\u4f8b\n@ControllerAdvice\npublic class ApiGlobalExceptionHandler {\n    private static final Logger logger = LoggerFactory.getLogger(ApiGlobalExceptionHandler.class);\n\n    @ExceptionHandler\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    @ResponseBody // \u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n    ApiError handleException(Exception e) {\n        logger.error(\"System error occurred.\", e);\n        ApiError error = new ApiError();\n        error.setCode(\"SYSTEM_ERROR\");\n        return error;\n    }\n\n}\n```\n\n```java:4.3\u301c\u306e\u5b9f\u88c5\u4f8b\n@RestControllerAdvice // @ControllerAdvice\u306e\u4ee3\u308f\u308a\u306b@RestControllerAdvice\u3092\u6307\u5b9a\npublic class ApiGlobalExceptionHandler {\n\n    @ExceptionHandler\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    // @ResponseBody \u7701\u7565\u3067\u304d\u308b\n    ApiError handleException(Exception e) {\n        // ...\n    }\n\n}\n```\n\n# `@ResponseStatus`\u3092\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u4ed8\u4e0e\u3067\u304d\u308b :+1: \n\n`@ResponseStatus`\u3092\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u3001\u5fdc\u7b54\u3059\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u30b3\u30fc\u30c9(\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30b3\u30fc\u30c9)\u3092\u5404\u30e1\u30bd\u30c3\u30c9\u3067\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Controller\u30af\u30e9\u30b9\u3068ControllerAdvice\u30af\u30e9\u30b9\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u304c\u3001`@ExceptionHandler`\u3092\u96c6\u7d04\u3057\u305fControllerAdvice\u30af\u30e9\u30b9\u3067\u5229\u7528\u3059\u308b\u306e\u304c\u6709\u52b9\u7684\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306f\u3001`@ExceptionHandler`\u30e1\u30bd\u30c3\u30c9\u3067`@ResponseStatus`\u306e\u6307\u5b9a\u3092\u7701\u7565\u3057\u305f\u6642\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u300c500(Internal Server Error)\u300d\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u304a\u3001Spring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u300c200(OK)\u300d\u3067\u3059\u3002\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u306e\u306b\u300c200(OK)\u300d\u3068\u3044\u3046\u306e\u306f\u9069\u5207\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u300c500(Internal Server Error)\u300d\u306b\u3057\u3066\u304a\u304d\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30e1\u30bd\u30c3\u30c9\u3067\u4e0a\u66f8\u304d\u3059\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n```java\n@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR) // \u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u300c500(Internal Server Error)\u300d\u306b\u8a2d\u5b9a\u3059\u308b\n@RestControllerAdvice\npublic class ApiGlobalExceptionHandler {\n\n    @ExceptionHandler\n    ApiError handleException(Exception e) {\n        // ...\n    }\n\n}\n```\n\n\n# `@SessionAttribute`\u3092\u4f7f\u7528\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b :+1: \n\n`HttpSession`\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u5834\u5408\u306f\u3001`HttpSession`\u306eAPI\u3092\u76f4\u63a5\u4f7f\u308f\u305a\u306b`@SessionAttribute`\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:\b\u301c4.2\u306e\u5b9f\u88c5\u4f8b\n@RequestMapping(\"/users\")\n@Controller\npublic class UserController {\n    // ...\n    @PostMapping(path = \"create\")\n    String create(@Validated Form form, BindingResult result,\n                  HttpSession session) {\n        ClientInfo clientInfo = ClientInfo.class.cast(session.getAttribute(\"clientInfo\")); // \u5f15\u6570\u3067\u53d7\u3051\u53d6\u3063\u305fHttpSession\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u76f4\u63a5\u5229\u7528\u3059\u308b\n        // ...\n        return \"redirect:/users/create?complete\";\n    }\n    // ...\n}\n```\n\nSpring 4.2\u307e\u3067\u306f\u3001Servlet API\u306b\u4f9d\u5b58\u3059\u308b\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002`HandlerMethodArgumentResolver`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308c\u3070Servlet API\u306b\u4f9d\u5b58\u3057\u306a\u3044\u5b9f\u88c5\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u3084\u3084\u5927\u3052\u3055\u306a\u4f5c\u308a\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002Spring 4.3\u3060\u3068\u3001\u4e0a\u8a18\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:\b4.3\u301c\u306e\u5b9f\u88c5\u4f8b\n@RequestMapping(\"/users\")\n@Controller\npublic class UserController {\n    // ...\n    @PostMapping(path = \"create\")\n    String create(@Validated Form form, BindingResult result,\n                  @SessionAttribute ClientInfo clientInfo) { // \u5f15\u6570\u3068\u3057\u3066\u76f4\u63a5\u53d7\u3051\u53d6\u308c\u308b\n        // ...\n        return \"redirect:/users/create?complete\";\n    }\n    // ...\n}\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001`HttpSession`\u306b\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001`ServletRequestBindingException`\u304c\u767a\u751f\u3057\u3066400(Bad Request)\u306b\u306a\u308a\u307e\u3059\u3002\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u8a72\u5f53\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u308a\u4e0a\u3042\u308a\u5f97\u308b\u5834\u5408\u306f\u3001`required`\u5c5e\u6027\u3092`false`\u306b\u3059\u308b\u304b\u3001`java.util.Optional`\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```java:required=false\u306e\u6307\u5b9a\u4f8b\n@PostMapping(path = \"create\")\nString create(@Validated Form form, BindingResult result,\n              @SessionAttribute(required = false) ClientInfo clientInfo) { // required = false\u3092\u6307\u5b9a\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n```\n```java:java.util.Optional\u306e\u5229\u7528\u4f8b\n@PostMapping(path = \"create\")\nString create(@Validated Form form, BindingResult result,\n              @SessionAttribute Optional<ClientInfo> clientInfo) { // Optional\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n```\n\n\u306a\u304a\u3001`HttpSession`\u304b\u3089\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3059\u308b\u969b\u306e\u5c5e\u6027\u540d\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5f15\u6570\u306e\u540d\u524d\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u30c7\u30d0\u30c3\u30b0\u60c5\u5831(JDK\u306e\u300c-g\u300d\u30aa\u30d7\u30b7\u30e7\u30f3)\u307e\u305f\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30e1\u30bf\u60c5\u5831(JDK 8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u300c-parameters\u300d\u30aa\u30d7\u30b7\u30e7\u30f3)\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u5f8c\u306e\u30af\u30e9\u30b9\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u60c5\u5831\u3092\u30af\u30e9\u30b9\u306b\u542b\u3081\u306a\u3044\u5834\u5408\u306f\u3001`name`\u5c5e\u6027(or `value`\u5c5e\u6027)\u306b\u5c5e\u6027\u540d\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```java:name\u5c5e\u6027\u306e\u6307\u5b9a\u4f8b\n@PostMapping(path = \"create\")\nString create(@Validated Form form, BindingResult result,\n              @SessionAttribute(\"clientInfo\") Optional<ClientInfo> clientInfo) { // \u660e\u793a\u7684\u306b\u5c5e\u6027\u540d\u3092\u6307\u5b9a\u3059\u308b\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n```\n\n# `@RequestAttribute`\u3092\u4f7f\u7528\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b :+1: \n\n`HttpServletRequest`\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u5834\u5408\u306f\u3001`HttpServletRequest`\u306eAPI\u3092\u76f4\u63a5\u4f7f\u308f\u305a\u306b`@RequestAttribute`\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5177\u4f53\u7684\u306a\u4f7f\u3044\u65b9\u306f\u3001`@SessionAttribute`\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u672c\u6295\u7a3f\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\n\n# \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u6709\u7121\u3092\u5236\u5fa1\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001`Model`\u304b\u3089\u53d6\u5f97\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u6709\u7121\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Spring MVC\u3067\u306f\u3001Handler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u30d5\u30a9\u30fc\u30e0\u30af\u30e9\u30b9\u306a\u3069\u306eJavaBean\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001JavaBean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u5024\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u306f\u975e\u5e38\u306b\u4fbf\u5229\u306a\u306e\u3067\u3059\u304c\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u3084\u30d5\u30e9\u30c3\u30b7\u30e5\u30b9\u30b3\u30fc\u30d7\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u306f\u3001\u3053\u306e\u4ed5\u7d44\u307f\u3092\u9069\u7528\u3057\u305f\u304f\u306a\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u5165\u529b\u30d5\u30a9\u30fc\u30e0\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u3067\u7ba1\u7406\u3057\u3066\u3044\u3066\u3001\u78ba\u8a8d\u753b\u9762\u304b\u3089\u9001\u4fe1\u51e6\u7406\u3092\u884c\u3046\u969b\u306b\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30d0\u30a4\u30f3\u30c9\u3055\u305b\u305f\u304f\u306a\u3044\uff01\uff01\u3068\u3044\u3046\u30b1\u30fc\u30b9\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\nSpring 4.3\u3067\u306f\u3001`@ModelAttribute`\u306e`binding`\u5c5e\u6027\u306b`false`\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u6291\u6b62\u3067\u304d\u307e\u3059\u3002\n\n```java:\u301c4.2\u306e\u5b9f\u88c5\u4f8b\n@RequestMapping(path = \"create\", method = RequestMethod.POST)\nString create(ModelMap model) {\n    Form form = Form.class.cast(model.get(\"form\")); // \u5f15\u6570\u3067\u3046\u3051\u3068\u3063\u305fMap\u304b\u3089\u53d6\u5f97\u3059\u308b\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n```\n\n```java:4.3\u301c\u306e\u5b9f\u88c5\u4f8b\n@PostMapping(path = \"create\")\nString create(@ModelAttribute(binding = false) Form form) { // binding=false\u3092\u6307\u5b9a\u3057\u3066\u5f15\u6570\u3068\u3057\u3066\u76f4\u63a5\u53d7\u3051\u53d6\u308b\n    // ...\n    return \"redirect:/users/create?complete\";\n}\n```\n\n# Spring MVC\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9\u3067Error\u3084Throwable\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001Spring MVC\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9(`HandlerExceptionResolver`)\u3067`Error`\u3084\u81ea\u4f5c\u306e`Throwable`\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Spring 4.2\u307e\u3067\u306f\u3001\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9\u306f\u547c\u3073\u51fa\u3055\u308c\u305a\u3001`NestedServletException`\u306b\u30e9\u30c3\u30d7\u3057\u3066\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u3078\u30b9\u30ed\u30fc\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n```java:\u7279\u5b9a\u306eError\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u969b\u306e\u5b9f\u88c5\u4f8b\n@ExceptionHandler\npublic String handleStackOverflowError(StackOverflowError e) {\n    // ...\n}\n```\n\n\u57fa\u672c\u7684\u306b\u306f\u3001`Error`\u3084`Throwable`\u306f\u3080\u3084\u307f\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u3079\u304d\u3067\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8981\u4ef6\u306b\u3088\u3063\u3066\u306f\u5229\u7528\u3092\u691c\u8a0e\u3057\u3066\u3082\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3053\u306e\u6539\u5584\u306b\u4f34\u3044\uff11\u70b9\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f\u3001\u3059\u3067\u306b`java.lang.Exception`\u3084`javax.servlet.ServletException`\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u3068\u3001Spring 4.3\u3092\u4f7f\u3046\u3068\u610f\u56f3\u305b\u305a`Error`\u3084`Throwable`\u3082\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u30fb\u30fb\u30fb :scream: \n\n\u3053\u308c\u3092\u56de\u907f\u3059\u308b\u306b\u306f\u30fb\u30fb\u30fb\uff08\u3069\u3046\u3059\u308b\u306e\u304c\u3044\u3044\u306e\u304b\u306a\u30fb\u30fb\u30fb :disappointed_relieved: \uff09 \u3068\u308a\u3042\u3048\u305a\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d0\u30a4\u30d1\u30b9\u7684\u306a\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308c\u3070Spring 4.2\u3068\u540c\u3058\u52d5\u304d\u306b(\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u901a\u77e5)\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u3051\u3069\u30fb\u30fb\u30fb\u30fb\uff08\u306a\u3093\u304b\u9055\u3046\u6c17\u304c\u3057\u3066\u306a\u3089\u306a\u3044\u30fb\u30fb\u30fb :sweat_smile: \uff09\n\n\n\n```java\n@ExceptionHandler\npublic void handleNestedServletException(NestedServletException e) throws NestedServletException {\n    throw e;\n}\n```\n\n\n\n# \u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u306e\u30d1\u30fc\u30c8\u90e8\u5206\u3092\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308b`HttpMessageConverter`\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304cUTF-8\u306b\u306a\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u306e\u30d1\u30fc\u30c8\u90e8\u5206\u3092\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308b`HttpMessageConverter`\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304cUTF-8\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001`RestTemplate`\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u30fc\u3078\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u3084\u3001`ResponseEntity`\u3084`@ResponseBody`\u3092\u4f7f\u3063\u3066\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30c7\u30fc\u30bf\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u5fdc\u7b54\u3059\u308b\u969b\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u65b0\u898f\u306b\u4f5c\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5834\u5408\u306f\u3001UTF-8\u3092\u5229\u7528\u3059\u308b\u30b1\u30fc\u30b9\u304c\u591a\u3044\u3060\u308d\u3046\u304b\u3089\u3001\u3053\u306e\u5bfe\u5fdc\u306f\u5730\u5473\u306b\u3046\u308c\u3057\u3044\u3067\u3059\u306d :laughing: \n\n\n\u3053\u3053\u3067\u306f\u3001\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u9001\u308b\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```java:\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5b9f\u88c5\u4f8b\n@RequestMapping(\"/upload\")\n@RestController\npublic class UploadRestController {\n    @RequestMapping(method = RequestMethod.POST)\n    String upload(MultipartFile file, String text) throws IOException {\n        System.out.println(StreamUtils.copyToString(file.getInputStream(), StandardCharsets.UTF_8));\n        System.out.println(text);\n        return file.getOriginalFilename();\n    }\n}\n```\n\n```java:\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u5b9f\u88c5\u4f8b(JUnit)\n\n@Test\npublic void upload() {\n\n    RestTemplate restTemplate = new RestTemplate();\n    // \u30c7\u30d0\u30c3\u30b0\u7528\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u3092\u5dee\u3057\u8fbc\u3080\n    restTemplate.setInterceptors(Collections.singletonList((request, body, execution) -> {\n        System.out.println(new String(body));\n        return execution.execute(request, body);\n    }));\n\n    // \u30d5\u30a1\u30a4\u30eb\u3068\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    MultiValueMap<String, Object> form = new LinkedMultiValueMap<>();\n    form.add(\"file\", new FileSystemResource(\"./a.txt\"));\n    form.add(\"text\", \"\u3042\u3042\u3042\");\n\n    // \u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\n    RequestEntity<MultiValueMap<String, Object>> requestEntity =\n            RequestEntity.post(URI.create(\"http://localhost:8080/upload\"))\n                    .contentType(MediaType.MULTIPART_FORM_DATA)\n                    .body(form);\n\n    // \u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\n    ResponseEntity<String> responseEntity = restTemplate.exchange(requestEntity, String.class);\n    System.out.println(responseEntity.getBody());\n}\n```\n\nJUnit\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb(\u30af\u30e9\u30a4\u30a2\u30f3\u30c8)\n--_U91C0cWNkMO5HsYdnhF29Vz1Tj7dh0e0nQrAzM0\nContent-Disposition: form-data; name=\"file\"; filename=\"a.txt\"\nContent-Type: text/plain\nContent-Length: 12\n\n\u3042\u3042\u3042\u3042\n--_U91C0cWNkMO5HsYdnhF29Vz1Tj7dh0e0nQrAzM0\nContent-Disposition: form-data; name=\"text\"\nContent-Type: text/plain;charset=UTF-8\nContent-Length: 9\n\n\u3042\u3042\u3042\n--_U91C0cWNkMO5HsYdnhF29Vz1Tj7dh0e0nQrAzM0--\na.txt\n```\n\n\u3053\u3053\u3067\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308b\u306e\u304c\u3001\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u306e`text`\u306eContent-Type\u306echarset\u304cUTF-8\u306b\u306a\u3063\u3066\u3044\u308b\u70b9\u3067\u3059\u3002\n\n```text:4.3\u301c\n--_U91C0cWNkMO5HsYdnhF29Vz1Tj7dh0e0nQrAzM0\nContent-Disposition: form-data; name=\"text\"\nContent-Type: text/plain;charset=UTF-8\nContent-Length: 9\n\n\u3042\u3042\u3042\n```\n\nSpring 4.2\u3060\u3068\u3001\u3053\u306e\u90e8\u5206\u304cISO-8859-1\u306b\u306a\u308b\u305f\u3081\u3001\u65e5\u672c\u8a9e\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u4f7f\u3046\u3068\u6587\u5b57\u5316\u3051\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u4efb\u610f\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u9762\u5012\u306a\u3093\u3060\u3088\u306d\u30fb\u30fb\u30fb :sweat_smile: \n\n```text:\u301c4.2\n--JPpi8b-TOpRe3PyEB7vcjpjID072o6wxXAZy7\nContent-Disposition: form-data; name=\"text\"\nContent-Type: text/plain;charset=ISO-8859-1\nContent-Length: 3\n\n???\n```\n\n\u3067\u306f\u3001UTF-8\u4ee5\u5916\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f \u3053\u3053\u3067\u306f\u3001\u65e5\u672c\u306e\u30b7\u30b9\u30c6\u30e0\u3060\u3068\u307e\u3060\u307e\u3060\u73fe\u5f79\uff01\uff1f\u306e\u300cWindows-31J\u300d\u306b\u5909\u66f4\u3057\u3066\u307f\u307e\u3059\u3002\n\n```java:\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u5909\u66f4\u3059\u308b\u969b\u306e\u5b9f\u88c5\u4f8b\nRestTemplate restTemplate = new RestTemplate();\nrestTemplate.getMessageConverters().stream()\n        .filter(c -> c instanceof FormHttpMessageConverter)\n        .forEach(c -> ((FormHttpMessageConverter) c).setCharset(Charset.forName(\"Windows-31J\")));\n```\n\n```text:\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092Windows-31J\u306b\u3057\u305f\u5834\u5408\u306e\u30c6\u30ad\u30b9\u30c8\u90e8\n--oym_khz0wPMOlL5rD3WZ70mNapWvjiaMXs\nContent-Disposition: form-data; name=\"text\"\nContent-Type: text/plain;charset=windows-31j\nContent-Length: 6\n\n\u3042\u3042\u3042\n```\n\nContent-Length\u30826\u30d0\u30a4\u30c8\u306a\u306e\u3067\u3001Window-31J\u306b\u306a\u308a\u307e\u3057\u305f\u306d :wink: \n\n# \u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306eContent-type\u3092`ContentNegotiationManager`\u7d4c\u7531\u3067\u6307\u5b9a\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306eContent-Type(Media Type)\u3092\u6c7a\u5b9a\u3059\u308b\u969b\u306b\u3001`ContentNegotiationManager`\u306e\u8a2d\u5b9a\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u306e\u307e\u307e\u3067\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\n\n```xml:src/main/resources/static/test.xml\n<test>\n    <code>TEST</code>\n</test>\n```\n\n```bash\n$ curl -D - http://localhost:8080/test.xml\n```\n```text\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nLast-Modified: Sun, 29 May 2016 18:42:38 GMT\nAccept-Ranges: bytes\nContent-Type: application/xml\nContent-Length: 36\nDate: Sun, 29 May 2016 18:42:54 GMT\n\n<test>\n    <code>TEST</code>\n</test>\n```\n\n\u6b21\u306b`ContentNegotiationManager`\u306e\u8a2d\u5b9a\u3092\u5909\u66f4(\u62e1\u5f35\u5b50\u304c`xml`\u306e\u30e1\u30c7\u30a3\u30a2\u30bf\u30a4\u30d7\u3092`text/xml`\u306b\u8a2d\u5b9a)\u3057\u3066\u304b\u3089\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\n```java:ContentNegotiationManager\u306e\u8a2d\u5b9a\u5909\u66f4\u4f8b\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    @Override\n    public void configureContentNegotiation(ContentNegotiationConfigurer configurer) {\n        configurer.mediaType(\"xml\", MediaType.TEXT_XML); // XML\u306e\u30e1\u30c7\u30a3\u30a2\u30bf\u30a4\u30d7\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\n    }\n}\n```\n```text\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nLast-Modified: Sun, 29 May 2016 18:42:38 GMT\nAccept-Ranges: bytes\nContent-Type: text/xml\nContent-Length: 36\nDate: Sun, 29 May 2016 18:45:21 GMT\n\n<test>\n    <code>TEST</code>\n</test>\n```\n\n\n# `RestTemplate`\u3068`AsyncRestTemplate`\u306b\u3066URI\u5909\u6570\u5024\u306b\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001`RestTemplate`\u3068`AsyncRestTemplate`\u306b\u8a2d\u5b9a\u3059\u308b`DefaultUriTemplateHandler`\u3092\u4ecb\u3057\u3066\u3001URI\u5909\u6570\u5024\u306b\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u3001\u53b3\u683c\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u884c\u3044\u307e\u305b\u3093\u3002\n\u53b3\u683c\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u300c[RFC 3986\u306e\u30bb\u30af\u30b7\u30e7\u30f3\uff12](https://tools.ietf.org/html/rfc3986#section-2)\u300d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u300c`unreserved`\u300d\u4ee5\u5916\u306e\u6587\u5b57\u3082URL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001\u300c`;`\u300d\u3092\u4f8b\u306b\u3001\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6709\u7121\u3067\u3069\u306e\u3088\u3046\u306a\u9055\u3044\u304c\u3067\u308b\u306e\u304b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n```java:\u30b5\u30fc\u30d0\u5074\u306e\u5b9f\u88c5\u4f8b\n@GetMapping(path = \"/users/{username}\")\n@ResponseBody\nString get(@PathVariable String username) {\n    return username;  // \u30d1\u30b9\u5909\u6570\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u540d\u3092\u53d6\u5f97\u3057\u3001\u53d6\u5f97\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u540d\u3092\u8fd4\u5374\u3059\u308b\n}\n````\n\n\u307e\u305a\u3001\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u308f\u306a\u3044\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```java:\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u308f\u306a\u3044\u5834\u5408\u306e\u5b9f\u88c5\u4f8b\nRestTemplate restTemplate = new RestTemplate();\nString body = restTemplate.getForObject(\"http://localhost:8080/users/{username}\"\n        , String.class, \"Kazuki;Shimizu\");\nSystem.out.println(body);\n```\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nKazuki\n```\n\u6b8b\u5ff5\u306a\u3053\u3068\u306b\u3001\u300c`;`\u300d\u4ee5\u964d\u306e\u6587\u5b57\u304c\u6b20\u843d\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u308f\u306a\u3044\u3068\u3001\u300c`http://localhost:8080/users/Kazuki;Shimizu`\u300d\u3068\u3044\u3046URL\u3067\u30b5\u30fc\u30d0\u30fc\u5074\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u3001\u300c`;`\u300d\u4ee5\u964d\u304c\u6b20\u843d\u3057\u307e\u3057\u305f\u3002\n\n\u6b21\u306b\u3001\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```java:\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3046\u5834\u5408\u306e\u5b9f\u88c5\u4f8b\nRestTemplate restTemplate = new RestTemplate();\nDefaultUriTemplateHandler handler = new DefaultUriTemplateHandler();\nhandler.setStrictEncoding(true); // \u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u6709\u52b9\u5316\u3059\u308b\nrestTemplate.setUriTemplateHandler(handler);\nString body = restTemplate.getForObject(\"http://localhost:8080/users/{username}\"\n        , String.class, \"Kazuki;Shimizu\");\nSystem.out.println(body);\n```\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nKazuki;Shimizu\n```\n\n\u53b3\u683c\u306aURL\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3068\u3001\u300c`http://localhost:8080/users/Kazuki%3BShimizu`\u300d\u3068\u3044\u3046URL\u3067\u30b5\u30fc\u30d0\u30fc\u5074\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u3001\u300c`;`\u300d\u4ee5\u964d\u306e\u6587\u5b57\u306f\u6b20\u843d\u3057\u307e\u305b\u3093\u3002\n\n\n# `AsyncRestTemplate`\u306b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u3092\u7d44\u307f\u8fbc\u3081\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001`AsyncRestTemplate`\u306b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc(`RestTemplate`\u3067\u3044\u3046\u3068\u3053\u308d\u306e`ClientHttpRequestInterceptor`\u76f8\u5f53)\u306e\u4ed5\u7d44\u307f\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u500b\u4eba\u7684\u306b\u306f\u30fb\u30fb\u30fb\u5f85\u671b\u306e\u30fb\u30fb\u30fb\u3068\u3044\u3063\u305f\u611f\u3058\u304c\u3042\u308a\u307e\u3059 :smile: \n\n\u3053\u3053\u3067\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30ed\u30b0\u51fa\u529b\u3059\u308b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u3092\u4f5c\u6210\u3057\u3001`AsyncRestTemplate`\u306b\u9069\u7528\u3057\u3066\u307f\u307e\u3059\u3002\n\n```java:\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u306e\u5b9f\u88c5\u4f8b\npublic class LoggingInterceptor implements AsyncClientHttpRequestInterceptor {\n    @Override\n    public ListenableFuture<ClientHttpResponse> intercept(HttpRequest request, byte[] body, AsyncClientHttpRequestExecution execution) throws IOException {\n\n        // \u30ea\u30af\u30a8\u30b9\u30c8\u524d\u306b\u884c\u3046\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Request Header : {}\", request.getHeaders());\n            logger.debug(\"Request Body   : {}\", new String(body, StandardCharsets.UTF_8));\n        }\n\n        // \u5f8c\u7d9a\u51e6\u7406(\u5225\u306eAsyncClientHttpRequestInterceptor\u307e\u305f\u306f\u975e\u540c\u671f\u901a\u4fe1\u51e6\u7406)\u3092\u547c\u3073\u51fa\u3059\n        ListenableFuture<ClientHttpResponse> future = execution.executeAsync(request, body);\n\n        // \u30ec\u30b9\u30dd\u30f3\u30b9\u5f8c\u306b\u884c\u3046\u51e6\u7406\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\u3057\u3066ListenableFuture\u306b\u8ffd\u52a0\u3059\u308b\n        if (logger.isDebugEnabled()) {\n            future.addCallback(\n                    response -> {\n                        try {\n                            logger.debug(\"Response Status : {}\", response.getStatusCode());\n                            logger.debug(\"Response Header : {}\", response.getHeaders());\n                        } catch (IOException e) {\n                            throw new UncheckedIOException(e);\n                        }\n                    },\n                    e -> logger.debug(\"Error!!\", e)\n            );\n        }\n        return future;\n    }\n}\n```\n\n```java:\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u306e\u9069\u7528\u4f8b\nAsyncRestTemplate asyncRestTemplate = new AsyncRestTemplate();\nasyncRestTemplate.setInterceptors(Collections.singletonList(new LoggingInterceptor())); // \u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u3092\u9069\u7528\u3059\u308b\nListenableFuture<ResponseEntity<String>> future = asyncRestTemplate.getForEntity(\"http://localhost:8080/users/{username}\"\n        , String.class, \"kazuki43zoo\");\nfuture.addCallback(\n        entity -> System.out.println(entity.getBody()),\n        Throwable::printStackTrace);\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\n06:37:56.706 [main] DEBUG org.springframework.web.client.AsyncRestTemplate - Created asynchronous GET request for \"http://localhost:8080/users/kazuki43zoo\"\n06:37:56.713 [main] DEBUG org.springframework.web.client.RestTemplate - Setting request Accept header to [text/plain, application/json, application/*+json, */*]\n06:37:56.715 [main] DEBUG com.example.RestTemplateTests - Request Header : {Accept=[text/plain, application/json, application/*+json, */*], Content-Length=[0]}\n06:37:56.717 [main] DEBUG com.example.RestTemplateTests - Request Body   : \n06:37:59.755 [SimpleAsyncTaskExecutor-1] DEBUG com.example.RestTemplateTests - Response Status : 200\n06:37:59.755 [SimpleAsyncTaskExecutor-1] DEBUG com.example.RestTemplateTests - Response Header : {Server=[Apache-Coyote/1.1], Content-Type=[text/plain;charset=UTF-8], Content-Length=[11], Date=[Sun, 29 May 2016 21:37:59 GMT]}\n06:37:59.756 [SimpleAsyncTaskExecutor-1] DEBUG org.springframework.web.client.AsyncRestTemplate - Async GET request for \"http://localhost:8080/users/kazuki43zoo\" resulted in 200 (OK)\n06:37:59.757 [SimpleAsyncTaskExecutor-1] DEBUG org.springframework.web.client.RestTemplate - Reading [java.lang.String] as \"text/plain;charset=UTF-8\" using [org.springframework.http.converter.StringHttpMessageConverter@245d5499]\nkazuki43zoo\n```\n\n# \u307e\u3068\u3081\n\n\u4eca\u56de\u306f\u3001Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u3042\u308b\u65b0\u6a5f\u80fd\u306f\u306a\u3044\u3082\u306e\u306e\u3001\u65b0\u3057\u3044\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\u3084\u65e2\u5b58\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u6319\u52d5\u306e\u6539\u5584\u306a\u3069\u304c\u884c\u308f\u308c\u3066\u304a\u308a\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u99c6\u52d5\u958b\u767a\u3092\u624b\u52a9\u3051\u3059\u308b\u6a5f\u80fd\u304c\u5f37\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u500b\u4eba\u7684\u306b\u306f`AsyncRestTemplate`\u306b\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u30fc\u304c\u5c0e\u5165\u3055\u308c\u305f\u306e\u306fGood News\u3067\u3057\u305f\uff01\uff01 :laughing: \u6b21\u56de\u306f\u3001\u300cWeb Socket\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u300d\u3092\u7d39\u4ecb\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n\n* http://docs.spring.io/spring/docs/4.3.0.RELEASE/spring-framework-reference/htmlsingle/\n* http://www.slideshare.net/makingx/jjugccc-cccgh5-whats-new-in-spring-framework-43-boot-14-pivotals-cloud-native-approach\n\n# \u88dc\u8db3\n## Spring 4.3 GA\u306b\u4f34\u3044\u5909\u66f4\u70b9\u3092\u8ffd\u52a0 (2016/6/11)\n\u3064\u3044\u306b4.3\u304cGA\u306b\u306a\u308a\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e3b\u306a\u5909\u66f4\u70b9\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30c8\u30d4\u30c3\u30af\u30b9\u3092\u53cd\u6620\u3057\u307e\u3057\u305f\u3002\uff08\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n", "tags": ["Java", "spring", "spring-boot", "spring-mvc", "JavaEE"]}