{"tags": ["Ruby", "HTTP"], "context": "\n\n\u306f\u3058\u3081\u306b\nHTTP\u30b5\u30fc\u30d0\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b,HTTP\u7528\u306e\u30b5\u30fc\u30d0\u30a2\u30d7\u30ea\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u308f\u305a\u306bTCP\u30ec\u30d9\u30eb\u306eSocket\u3092\u4f7f\u3063\u3066HTTP\u30b5\u30fc\u30d0\u3082\u3069\u304d\u3092\u4f5c\u3063\u3066\u307f\u305f\n\u52c9\u5f37\u7528\u306a\u306e\u3067\u7c21\u5358\u306a\u6a5f\u80fd\u3057\u304b\u3068\u308a\u3042\u3048\u305a\u3064\u3051\u3066\u307e\u305b\u3093\n\u203b\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u8106\u5f31\u6027\u6e80\u8f09\u306a\u306e\u3067\u4f7f\u7528\u306e\u969b\u306e\u30c8\u30e9\u30d6\u30eb\u7b49\u306f\u5168\u3066\u81ea\u5df1\u8cac\u4efb\u3067\u304a\u9858\u3044\u3057\u307e\u3059\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nhttpserver.rb\nrequire \"socket\"\n\nplane_ext = [\"html\",\"htm\",\"txt\"]\nbinary_ext = [\"ico\",\"jpg\",\"png\",\"gif\"]\npermited_ext = plane_ext + binary_ext\n\ns = TCPServer.open(8080)\n\nwhile true\n  puts \"Server Ready...\"\n  client = s.accept\n\n  puts \"Accept HTTP Message\"\n\n  msg=[]\n  msg_hash=Hash.new\n\n  request_msg = client.gets\n  request_msg = request_msg.chomp.split(\" \") if request_msg!=nil\n  redo if request_msg==nil\n\n  while str=client.gets\n    if str!=nil\n      break if (str.chomp) == \"\" \n      str.chomp!\n      msg << str\n      buf=str.split(\": \")\n      msg_hash[buf[0]] = buf[1]\n    end\n  end\n\n  puts \"======== message =========\"\n  puts request_msg.join(\" \") if request_msg != nil\n  puts \"======== message =========\"\n  puts msg if msg != nil\n  puts \"==========================\"\n\n  sleep(1)\n\n  begin\n    filename= request_msg[1]\n    filename+=\"index.html\" if filename[-1]==\"/\"         # add \"index.html\"\n    while filename.sub!(/(\\/\\w*)(\\/\\.\\.)/,\"\") do end    # remove .. from filename\n    filename[0]=\"\"                                      # remove \"/\" on the first word\n    ext = filename.match(/\\.([\\w\\.]*)/)[1]              # get extemsion name from the filename\n    puts \"filename = #{filename}\"\n    puts \"extension = [#{ext}]\"\n\n    if filename[0,2] != \"..\" && permited_ext.include?(ext)\n      if plane_ext.include?(ext)\n        html = IO.read(filename)\n      elsif binary_ext.include?(ext)\n        html = IO.binread(filename)\n      end\n      client.puts \"HTTP/1.1 200 OK\"\n      client.puts \"\"\n      client.puts html\n    else\n      client.puts \"HTTP/1.1 403 Forbidden\"\n      client.puts \"\"\n    end\n  rescue Errno::ENOENT => e\n    client.puts \"HTTP/1.1 404 Not Found\"\n    client.puts \"\"\n  end\n\n  client.close\nend\n\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u8aac\n\n\u30bd\u30b1\u30c3\u30c8\u304c\u7e4b\u304c\u3063\u305f\u3089request_msg\u306b\u6700\u521d\u306e[\u30ea\u30af\u30a8\u30b9\u30c8,\u30d1\u30b9,\u30d0\u30fc\u30b8\u30e7\u30f3]\u304c\u5165\u308a\u307e\u3059\n\u305d\u306e\u4ed6\u306e\u30d8\u30c3\u30c0\u90e8\u5206\u306fmsg\u3068msg_hash\u306b\u5165\u308c\u307e\u3059\n\u6539\u884c\u306e\u307f\u306e\u30c7\u30fc\u30bf\u304c\u6765\u305f\u3089\u8aad\u307f\u8fbc\u307f\u3092\u505c\u6b62\u3057\u307e\u3059\nrequest_msg\u306e\u30d1\u30b9\u3092\"/\"\u3067\u7d42\u308f\u308c\u3070\"index.html\"\u3092\u4ed8\u52a0\u3057\u3066,\u6700\u521d\u306e\"/\"\u3092\u6d88\u3057\u3066\u76f8\u5bfe\u30d1\u30b9\u306b\u3057\u307e\u3059\n\u5bfe\u5fdc\u3059\u308b\u30c7\u30fc\u30bf\u3092\u63a2\u3057,\u958b\u3051\u306a\u3051\u308c\u3070\u300c404\u300d,\u958b\u3051\u308c\u3070\u300c200\u300d\u3068\u300c\u6539\u884c\u300d,\u300c\u30c7\u30fc\u30bf\u300d\u3092\u9001\u308a\u307e\u3059\n\n#\u306f\u3058\u3081\u306b\nHTTP\u30b5\u30fc\u30d0\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b,HTTP\u7528\u306e\u30b5\u30fc\u30d0\u30a2\u30d7\u30ea\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u308f\u305a\u306bTCP\u30ec\u30d9\u30eb\u306eSocket\u3092\u4f7f\u3063\u3066HTTP\u30b5\u30fc\u30d0\u3082\u3069\u304d\u3092\u4f5c\u3063\u3066\u307f\u305f\n\u52c9\u5f37\u7528\u306a\u306e\u3067\u7c21\u5358\u306a\u6a5f\u80fd\u3057\u304b\u3068\u308a\u3042\u3048\u305a\u3064\u3051\u3066\u307e\u305b\u3093\n\u203b\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u8106\u5f31\u6027\u6e80\u8f09\u306a\u306e\u3067\u4f7f\u7528\u306e\u969b\u306e\u30c8\u30e9\u30d6\u30eb\u7b49\u306f\u5168\u3066\u81ea\u5df1\u8cac\u4efb\u3067\u304a\u9858\u3044\u3057\u307e\u3059\n\n#\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n```httpserver.rb\nrequire \"socket\"\n\nplane_ext = [\"html\",\"htm\",\"txt\"]\nbinary_ext = [\"ico\",\"jpg\",\"png\",\"gif\"]\npermited_ext = plane_ext + binary_ext\n\ns = TCPServer.open(8080)\n\nwhile true\n  puts \"Server Ready...\"\n  client = s.accept\n\n  puts \"Accept HTTP Message\"\n\n  msg=[]\n  msg_hash=Hash.new\n\n  request_msg = client.gets\n  request_msg = request_msg.chomp.split(\" \") if request_msg!=nil\n  redo if request_msg==nil\n\n  while str=client.gets\n    if str!=nil\n      break if (str.chomp) == \"\" \n      str.chomp!\n      msg << str\n      buf=str.split(\": \")\n      msg_hash[buf[0]] = buf[1]\n    end\n  end\n\n  puts \"======== message =========\"\n  puts request_msg.join(\" \") if request_msg != nil\n  puts \"======== message =========\"\n  puts msg if msg != nil\n  puts \"==========================\"\n\n  sleep(1)\n\n  begin\n    filename= request_msg[1]\n    filename+=\"index.html\" if filename[-1]==\"/\"         # add \"index.html\"\n    while filename.sub!(/(\\/\\w*)(\\/\\.\\.)/,\"\") do end    # remove .. from filename\n    filename[0]=\"\"                                      # remove \"/\" on the first word\n    ext = filename.match(/\\.([\\w\\.]*)/)[1]              # get extemsion name from the filename\n    puts \"filename = #{filename}\"\n    puts \"extension = [#{ext}]\"\n    \n    if filename[0,2] != \"..\" && permited_ext.include?(ext)\n      if plane_ext.include?(ext)\n        html = IO.read(filename)\n      elsif binary_ext.include?(ext)\n        html = IO.binread(filename)\n      end\n      client.puts \"HTTP/1.1 200 OK\"\n      client.puts \"\"\n      client.puts html\n    else\n      client.puts \"HTTP/1.1 403 Forbidden\"\n      client.puts \"\"\n    end\n  rescue Errno::ENOENT => e\n    client.puts \"HTTP/1.1 404 Not Found\"\n    client.puts \"\"\n  end\n\n  client.close\nend\n```\n##\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u8aac\n- \u30bd\u30b1\u30c3\u30c8\u304c\u7e4b\u304c\u3063\u305f\u3089request_msg\u306b\u6700\u521d\u306e[\u30ea\u30af\u30a8\u30b9\u30c8,\u30d1\u30b9,\u30d0\u30fc\u30b8\u30e7\u30f3]\u304c\u5165\u308a\u307e\u3059\n- \u305d\u306e\u4ed6\u306e\u30d8\u30c3\u30c0\u90e8\u5206\u306fmsg\u3068msg_hash\u306b\u5165\u308c\u307e\u3059\n- \u6539\u884c\u306e\u307f\u306e\u30c7\u30fc\u30bf\u304c\u6765\u305f\u3089\u8aad\u307f\u8fbc\u307f\u3092\u505c\u6b62\u3057\u307e\u3059\n- request_msg\u306e\u30d1\u30b9\u3092\"/\"\u3067\u7d42\u308f\u308c\u3070\"index.html\"\u3092\u4ed8\u52a0\u3057\u3066,\u6700\u521d\u306e\"/\"\u3092\u6d88\u3057\u3066\u76f8\u5bfe\u30d1\u30b9\u306b\u3057\u307e\u3059\n- \u5bfe\u5fdc\u3059\u308b\u30c7\u30fc\u30bf\u3092\u63a2\u3057,\u958b\u3051\u306a\u3051\u308c\u3070\u300c404\u300d,\u958b\u3051\u308c\u3070\u300c200\u300d\u3068\u300c\u6539\u884c\u300d,\u300c\u30c7\u30fc\u30bf\u300d\u3092\u9001\u308a\u307e\u3059\n"}