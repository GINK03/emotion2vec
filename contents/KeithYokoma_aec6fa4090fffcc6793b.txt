{"context": " More than 1 year has passed since last update.\n\nTL;DR\n\n\nMockito.mock(Class, Answer)\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u308a\u5024\u3092\u8a2d\u5b9a\u3057\u3088\u3046\u3002\n\n\nFluent Interface \u306b\u3064\u3044\u3066\u3056\u3063\u304f\u308a\u5fa9\u7fd2\n\u6700\u8fd1\u306f Fluent \u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u53d6\u308a\u5165\u308c\u305f\u3082\u306e\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f Fluent \u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3068\u547c\u3070\u308c\u307e\u3059\u3002\n\nSomethingFluent.java\n\npublic interface SomethingFluent {\n  SomethingFluent foo();\n  SomethingFluent bar();\n  SomethingFluent baz();\n}\n\n\n\u3053\u308c\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3092\u6570\u73e0\u3064\u306a\u304e\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3069\u306e\u3088\u3046\u306a\u72b6\u614b\u306e\u5909\u5316\u304c\u8d77\u3053\u308b\u304b\u304c\u3072\u3068\u76ee\u3067\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nSomethingFluent o1 = new ConcreteSomethingFluent().foo().bar(); // foo \u3068 bar \u3092\u547c\u3093\u3060\u72b6\u614b\u306e SomethingFluent\nSomethingFluent o2 = new ConcreteSomethingFluent().baz().bar(); // baz \u3068 bar \u3092\u547c\u3093\u3060\u72b6\u614b\u306e SomethingFluent\nSomethingFluent o3 = new ConcreteSomethingFluent().foo().bar().baz(); // \u5168\u3066\u3092\u547c\u3093\u3060\u72b6\u614b\u306e SomethingFluent\n\n\nFluent Interface \u3092\u30e2\u30c3\u30af\u3059\u308b\n\u3053\u3053\u3067\u3001\u3053\u306eSomethingFluent\u306b\u4f9d\u5b58\u3057\u305f\u30af\u30e9\u30b9TestTarget\u306e\u30c6\u30b9\u30c8\u3092\u8003\u3048\u307e\u3059\u3002\n\nTestTarget.java\n\npublic class TestTarget {\n  SomethingFluent fluent;\n\n  public TestTarget(SomethingFluent fluent) {\n    this.fluent = fluent;\n  }\n\n  public method1() {\n    fluent.foo();\n  }\n\n  public method2() {\n    fluent.foo().bar();\n  }\n}\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7d4c\u7531\u3067SomethingFluent\u306e\u4f9d\u5b58\u3092\u6ce8\u5165\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u3053\u3067SomethingFluent\u306e\u30e2\u30c3\u30af\u3092\u6d41\u3057\u8fbc\u307f\u307e\u3059\u3002\nMockito \u3092\u4f7f\u3048\u3070\u7c21\u5358\u3067\u3059\u306d\u3002\u3082\u3057 Mockito \u3092\u4f7f\u308f\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u81ea\u5206\u3067\u30e2\u30c3\u30af\u5b9f\u88c5\u3092\u4f5c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\nTestTargetTest.java\n\npublic class TestTargetTest {\n  private SomethingFluent dependency;\n  private TestTarget target;\n\n  @Before\n  public void setUp() {\n    dependency = mock(SomethingFluent.class);\n    target = new TestTarget(dependency);\n  }\n\n  @Test\n  public void test_method1() {\n    target.method1();\n    verify(dependency).foo();\n    verify(dependency, never()).bar();\n  }\n\n  @Test\n  public void test_method2() {\n    target.method2(); // causing NullPointerException\n    verify(dependency).foo();\n    verify(dependency).bar();\n  }\n}\n\n\nMockito.mock(Class)\u3092\u4f7f\u3046\u5834\u5408\u3001\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6301\u3064\u5404\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u306f\u3001void\u3067\u306a\u3044\u9650\u308anull\u304b\u5404\u578b\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u306a\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001SomethingFluent\u306e\u5834\u5408\u306f\u3001\u5168\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u304cSomethingFluent\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u306e\u3067\u3001\u30e2\u30c3\u30af\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u5e38\u306bnull\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3059\u308b\u3068\u3001TestTarget#method1()\u306f\u56f0\u3063\u305f\u3053\u3068\u306f\u8d77\u3053\u308a\u307e\u305b\u3093\u304c\u3001TestTarget#method2()\u3067\u306f\u56f0\u3063\u305f\u3053\u3068\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\n\u306a\u305c\u306a\u3089\u3001\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u6570\u73e0\u3064\u306a\u304e\u306b\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001SomethingFluent#foo()\u3092\u547c\u3093\u3060\u8fd4\u308a\u5024\u304cnull\u3068\u306a\u308a\u3001bar()\u306e\u547c\u3073\u51fa\u3057\u3067NullPointerException\u3068\u306a\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u308a\u5024\u3092\u8a2d\u5b9a\u3059\u308b\n\u611a\u76f4\u306b\u306f\u3001Mockito \u3067\u5404\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u3092\u305d\u308c\u305e\u308c\u3054\u3068\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u305d\u308c\u3092\u5168\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u884c\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3044\u304b\u3093\u305b\u3093\u305d\u308c\u306f\u975e\u5e38\u306b\u9762\u5012\u3067\u3059\u3002\u305d\u3057\u3066\u5927\u62b5\u305d\u306e\u3053\u3068\u304c\u5fd8\u308c\u53bb\u3089\u308c\u3001\u65b0\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u305f\u3068\u304d\u306b\u7121\u99c4\u306b\u30c6\u30b9\u30c8\u304c\u3053\u3051\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305d\u3053\u3067\u767b\u5834\u3059\u308b\u306e\u304c\u3001Mockito.mock(Class, Answer)\u3067\u3059\u3002\n\u7b2c\u4e8c\u5f15\u6570\u306eAnswer\u306f\u3001\u5404\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8fd4\u3059\u8fd4\u308a\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3082\u306e\u3067\u3059\u3002\u3053\u306eAnswer\u3092\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001null\u4ee5\u5916\u306e\u3001\u4efb\u610f\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u500b\u5225\u306b\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082\u8fd4\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001Fluent \u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u304b\u3089\u3001\u81ea\u5206\u81ea\u8eab\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nTestTargetTest.java\n\npublic class TestTargetTest {\n  private SomethingFluent dependency;\n  private TestTarget target;\n\n  @Before\n  public void setUp() {\n    dependency = mock(SomethingFluent.class, (Answer) invocation -> dependency);\n    target = new TestTarget(dependency);\n  }\n\n  @Test\n  public void test_method1() {\n    target.method1();\n    verify(dependency).foo();\n    verify(dependency, never()).bar();\n  }\n\n  @Test\n  public void test_method2() {\n    target.method2(); // no problem!\n    verify(dependency).foo();\n    verify(dependency).bar();\n  }\n}\n\n\n\u3053\u308c\u3067\u3001Fluent \u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u8fd4\u308a\u5024\u304c\u7121\u4e8b\u8a2d\u5b9a\u3067\u304d\u307e\u3057\u305f\u3002\n## TL;DR\n\n- `Mockito.mock(Class, Answer)`\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u308a\u5024\u3092\u8a2d\u5b9a\u3057\u3088\u3046\u3002\n\n## Fluent Interface \u306b\u3064\u3044\u3066\u3056\u3063\u304f\u308a\u5fa9\u7fd2\n\n\u6700\u8fd1\u306f Fluent \u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u53d6\u308a\u5165\u308c\u305f\u3082\u306e\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f Fluent \u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3068\u547c\u3070\u308c\u307e\u3059\u3002\n\n```java:SomethingFluent.java\n\npublic interface SomethingFluent {\n  SomethingFluent foo();\n  SomethingFluent bar();\n  SomethingFluent baz();\n}\n```\n\n\u3053\u308c\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3092\u6570\u73e0\u3064\u306a\u304e\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3069\u306e\u3088\u3046\u306a\u72b6\u614b\u306e\u5909\u5316\u304c\u8d77\u3053\u308b\u304b\u304c\u3072\u3068\u76ee\u3067\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```java\n\nSomethingFluent o1 = new ConcreteSomethingFluent().foo().bar(); // foo \u3068 bar \u3092\u547c\u3093\u3060\u72b6\u614b\u306e SomethingFluent\nSomethingFluent o2 = new ConcreteSomethingFluent().baz().bar(); // baz \u3068 bar \u3092\u547c\u3093\u3060\u72b6\u614b\u306e SomethingFluent\nSomethingFluent o3 = new ConcreteSomethingFluent().foo().bar().baz(); // \u5168\u3066\u3092\u547c\u3093\u3060\u72b6\u614b\u306e SomethingFluent\n```\n\n## Fluent Interface \u3092\u30e2\u30c3\u30af\u3059\u308b\n\n\u3053\u3053\u3067\u3001\u3053\u306e`SomethingFluent`\u306b\u4f9d\u5b58\u3057\u305f\u30af\u30e9\u30b9`TestTarget`\u306e\u30c6\u30b9\u30c8\u3092\u8003\u3048\u307e\u3059\u3002\n\n```java:TestTarget.java\n\npublic class TestTarget {\n  SomethingFluent fluent;\n\n  public TestTarget(SomethingFluent fluent) {\n    this.fluent = fluent;\n  }\n\n  public method1() {\n    fluent.foo();\n  }\n\n  public method2() {\n    fluent.foo().bar();\n  }\n}\n```\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7d4c\u7531\u3067`SomethingFluent`\u306e\u4f9d\u5b58\u3092\u6ce8\u5165\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u3053\u3067`SomethingFluent`\u306e\u30e2\u30c3\u30af\u3092\u6d41\u3057\u8fbc\u307f\u307e\u3059\u3002\nMockito \u3092\u4f7f\u3048\u3070\u7c21\u5358\u3067\u3059\u306d\u3002\u3082\u3057 Mockito \u3092\u4f7f\u308f\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u81ea\u5206\u3067\u30e2\u30c3\u30af\u5b9f\u88c5\u3092\u4f5c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java:TestTargetTest.java\n\npublic class TestTargetTest {\n  private SomethingFluent dependency;\n  private TestTarget target;\n\n  @Before\n  public void setUp() {\n    dependency = mock(SomethingFluent.class);\n    target = new TestTarget(dependency);\n  }\n\n  @Test\n  public void test_method1() {\n    target.method1();\n    verify(dependency).foo();\n    verify(dependency, never()).bar();\n  }\n\n  @Test\n  public void test_method2() {\n    target.method2(); // causing NullPointerException\n    verify(dependency).foo();\n    verify(dependency).bar();\n  }\n}\n```\n\n`Mockito.mock(Class)`\u3092\u4f7f\u3046\u5834\u5408\u3001\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6301\u3064\u5404\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u306f\u3001`void`\u3067\u306a\u3044\u9650\u308a`null`\u304b\u5404\u578b\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u306a\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001`SomethingFluent`\u306e\u5834\u5408\u306f\u3001\u5168\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u304c`SomethingFluent`\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u306e\u3067\u3001\u30e2\u30c3\u30af\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u5e38\u306b`null`\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3059\u308b\u3068\u3001`TestTarget#method1()`\u306f\u56f0\u3063\u305f\u3053\u3068\u306f\u8d77\u3053\u308a\u307e\u305b\u3093\u304c\u3001`TestTarget#method2()`\u3067\u306f\u56f0\u3063\u305f\u3053\u3068\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\n\u306a\u305c\u306a\u3089\u3001\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u6570\u73e0\u3064\u306a\u304e\u306b\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001`SomethingFluent#foo()`\u3092\u547c\u3093\u3060\u8fd4\u308a\u5024\u304c`null`\u3068\u306a\u308a\u3001`bar()`\u306e\u547c\u3073\u51fa\u3057\u3067`NullPointerException`\u3068\u306a\u308b\u304b\u3089\u3067\u3059\u3002\n\n## \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8fd4\u308a\u5024\u3092\u8a2d\u5b9a\u3059\u308b\n\n\u611a\u76f4\u306b\u306f\u3001Mockito \u3067\u5404\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u3092\u305d\u308c\u305e\u308c\u3054\u3068\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u305d\u308c\u3092\u5168\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u884c\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3044\u304b\u3093\u305b\u3093\u305d\u308c\u306f\u975e\u5e38\u306b\u9762\u5012\u3067\u3059\u3002\u305d\u3057\u3066\u5927\u62b5\u305d\u306e\u3053\u3068\u304c\u5fd8\u308c\u53bb\u3089\u308c\u3001\u65b0\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u305f\u3068\u304d\u306b\u7121\u99c4\u306b\u30c6\u30b9\u30c8\u304c\u3053\u3051\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u305d\u3053\u3067\u767b\u5834\u3059\u308b\u306e\u304c\u3001`Mockito.mock(Class, Answer)`\u3067\u3059\u3002\n\n\u7b2c\u4e8c\u5f15\u6570\u306e`Answer`\u306f\u3001\u5404\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8fd4\u3059\u8fd4\u308a\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3082\u306e\u3067\u3059\u3002\u3053\u306e`Answer`\u3092\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001`null`\u4ee5\u5916\u306e\u3001\u4efb\u610f\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u500b\u5225\u306b\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082\u8fd4\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001Fluent \u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u304b\u3089\u3001\u81ea\u5206\u81ea\u8eab\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```java:TestTargetTest.java\n\npublic class TestTargetTest {\n  private SomethingFluent dependency;\n  private TestTarget target;\n\n  @Before\n  public void setUp() {\n    dependency = mock(SomethingFluent.class, (Answer) invocation -> dependency);\n    target = new TestTarget(dependency);\n  }\n\n  @Test\n  public void test_method1() {\n    target.method1();\n    verify(dependency).foo();\n    verify(dependency, never()).bar();\n  }\n\n  @Test\n  public void test_method2() {\n    target.method2(); // no problem!\n    verify(dependency).foo();\n    verify(dependency).bar();\n  }\n}\n```\n\n\u3053\u308c\u3067\u3001Fluent \u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u8fd4\u308a\u5024\u304c\u7121\u4e8b\u8a2d\u5b9a\u3067\u304d\u307e\u3057\u305f\u3002\n", "tags": ["Java", "Mockito"]}