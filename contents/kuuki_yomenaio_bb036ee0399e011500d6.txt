{"tags": ["cocos2d-x3.0", "C++", "iOS", "Android"], "context": " More than 1 year has passed since last update.\n\n\u30ab\u30e1\u30e9\u304c\u81ea\u52d5\u3067\u8ffd\u5c3e\u3059\u308b\ncocos2d\u306b\u306fFollow\u3068\u3044\u3046\u6a5f\u80fd\u304c\u3042\u308b\u3002\n\u904e\u53bbVer\u3067\u306fCCFollow\u3068\u3044\u3046\u540d\u524d\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\u3053\u308c\u306f\u3001\u7279\u5b9a\u306eNode\u306b\u5bfe\u3057\u3066\u3001\u753b\u9762\u304c\u4ed8\u3044\u3066\u3044\u304f\u3068\u3044\u3046Action\u3067\u3059\u3002\n\u30ab\u30e1\u30e9\u304c\u305a\u3063\u3068\u8ffd\u5c3e\u3057\u3066\u304f\u308b\u3088\u3046\u306a\u3082\u306e\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u308c\u308c\u3070OK\u3002\n\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\nTestScene.cpp\n\nthis->runAction(Follow::create(cocos2d::Node *followedNode));\n\n\n\n\u3053\u306e\u4e00\u884c\u3067\u753b\u9762\u304cfollowedNode\u306e\u52d5\u304d\u306b\u5408\u308f\u305b\u3066\u4ed8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\nFollow\u306e\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u308b\u3068\n\nCCAction.cpp\n\nvoid Follow::step(float dt)\n{\n    CC_UNUSED_PARAM(dt);\n\n    if(_boundarySet)\n    {\n        // whole map fits inside a single screen, \n        // no need to modify the position - unless map boundaries are increased\n        if(_boundaryFullyCovered)\n            return;\n\n        Point tempPos = _halfScreenSize - _followedNode->getPosition();\n\n        _target->setPosition(Point(clampf(tempPos.x, _leftBoundary, _rightBoundary),\n                                   clampf(tempPos.y, _bottomBoundary, _topBoundary)));\n    }\n    else\n    {\n        _target->setPosition(_halfScreenSize - _followedNode->getPosition());\n    }\n}\n\n\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u6307\u5b9aNode\u304cAnchorPoint\u306b\u6765\u308b\u3088\u3046\u306b\u753b\u9762\u304c\u4ed8\u3044\u3066\u3044\u304f\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\nboundarySet\uff1f\nFollow::create\u3059\u308b\u6642\u306b\u5f15\u6570\u3067rect\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u30ab\u30e1\u30e9\u306e\u8ffd\u5c3e\u7bc4\u56f2\u3092\u6c7a\u3081\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u6ce8\u610f\u3068\u3057\u3066\u306f\u3001\u3053\u306e\u8ffd\u5c3e\u7bc4\u56f2\u304c\u753b\u9762\u30b5\u30a4\u30ba\u3088\u308a\u5c0f\u3055\u304b\u3063\u305f\u5834\u5408\u3001\n\u8ffd\u5c3e\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u305f\u3081\u8ffd\u5c3e\u3057\u306a\u3044\u3001\u3068\u3044\u3046\u52d5\u304d\u306b\u306a\u308a\u307e\u3059\u3002\n(_boundaryFullyCovered\u306b\u5f15\u3063\u304b\u304b\u308a\u307e\u3059\uff09\n\n\u30d4\u30fc\u30ad\u30fc\u904e\u304e\u3066\u304a\u524d\u306b\u306f\u7121\u7406\u3060\u3088\n\u3053\u306eFollow\u3002\"\u904a\u3073\"\u304c\u7121\u304f\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u8ffd\u5c3e\u3059\u308b\u305f\u3081\u3001\n\u30ad\u30e3\u30e9\u304c\u6fc0\u3057\u304f\u52d5\u304f\u30a2\u30af\u30b7\u30e7\u30f3\u30b2\u30fc\u30e0\u3060\u3063\u305f\u308a\u3059\u308b\u3068\n\u4e0a\u4e0b\u5de6\u53f3\u306b\u6fc0\u3057\u304f\u63fa\u308c\u308b\u305f\u3081\u3001\u76ee\u304c\u56de\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3061\u3087\u3063\u3068\u4f7f\u3044\u306b\u304f\u3044\u3067\u3059\u306d\u3002\n\u3058\u3083\u3042\u30ab\u30b9\u30bf\u30e0\u3057\u3061\u3083\u3044\u307e\u3057\u3087\u3046\u3002\n\n\u62e1\u5f35\u3057\u3066\u307f\u308b\nCustomFollow\u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\u3002\n\u901a\u5e38\u306e\u8ffd\u5c3e\u6a5f\u80fd\u306b\u52a0\u3048\u3066\u3001\u4ee5\u4e0b\u306e\uff13\u3064\u306e\u6a5f\u80fd\u3092\u52a0\u3048\u307e\u3059\u3002\n\u30fbX\u8ef8\u306e\u307f\u8ffd\u5c3e\u3059\u308b\n\u30fbY\u8ef8\u306e\u307f\u8ffd\u5c3e\u3059\u308b\n\u30fb\u6307\u5b9a\u7bc4\u56f2\u5916\u306b\u51fa\u305f\u6642\u306e\u307f\u8ffd\u5c3e\u3059\u308b\n\nCustomFollow.h\n\nenum CustomFollowType{\n    kCustomFollowNone,\n    kCustomFollowXOnly,\n    kCustomFollowYOnly\n};\n\nclass CustomFollow : public Follow\n{\nprivate:\n    CustomFollowType _type;\n    Rect _marginRect;\n\n    CustomFollow();\n    ~CustomFollow();\npublic:\n    static CustomFollow* create(Node *followedNode);\n    static CustomFollow* create(Node *followedNode, CustomFollowType type);\n    static CustomFollow* create(Node *followedNode, Rect marginRect);\n\n    virtual void step(float dt) override;\n};\n\n\n\n\nCustomFollow.cpp\n\nCustomFollow::CustomFollow(){\n    _type = kCustomFollowNone;\n    _marginRect = Rect::ZERO;\n}\n\nCustomFollow::~CustomFollow(){\n    CC_SAFE_RELEASE(_followedNode);\n}\n\nCustomFollow* CustomFollow::create(Node* followNode){\n    CustomFollow *follow = new CustomFollow();\n    if (follow && follow->initWithTarget(followNode, Rect::ZERO))\n    {\n        follow->autorelease();\n        return follow;\n    }\n    CC_SAFE_DELETE(follow);\n    return nullptr;\n}\n\nCustomFollow* CustomFollow::create(Node* followNode, CustomFollowType type){\n    CustomFollow *follow = new CustomFollow();\n    follow->_type = type;\n    if (follow && follow->initWithTarget(followNode, Rect::ZERO))\n    {\n        follow->autorelease();\n        return follow;\n    }\n    CC_SAFE_DELETE(follow);\n    return nullptr;\n}\n\nCustomFollow* CustomFollow::create(Node* followNode, Rect marginRect){\n    CustomFollow *follow = new CustomFollow();\n    follow->_marginRect = marginRect;\n    if (follow && follow->initWithTarget(followNode, Rect::ZERO))\n    {\n        follow->autorelease();\n        return follow;\n    }\n    CC_SAFE_DELETE(follow);\n    return nullptr;\n}\n\nvoid CustomFollow::step(float dt)\n{\n    CC_UNUSED_PARAM(dt);\n\n    if(_boundarySet)\n    {\n        if(_boundaryFullyCovered)\n            return;\n\n        Point tempPos = _halfScreenSize - _followedNode->getPosition();\n\n        float x = clampf(tempPos.x, _leftBoundary, _rightBoundary);\n        float y = clampf(tempPos.y, _bottomBoundary, _topBoundary);\n\n        if(_type == kCustomFollowXOnly){\n            y = _target->getPositionY();\n        }\n        else if (_type == kCustomFollowYOnly){\n            x = _target->getPositionX();\n        }\n\n        _target->setPosition(Point(x , y));\n\n    }\n    else\n    {\n        Point calcPos = _target->convertToWorldSpace(_followedNode->getPosition());\n\n        if(_marginRect.containsPoint(calcPos)){\n            return;\n        }\n\n        float x = _halfScreenSize.x - _followedNode->getPositionX();\n        float y = _halfScreenSize.y - _followedNode->getPositionY();\n\n        if(_type == kCustomFollowXOnly){\n            y = _target->getPositionY();\n        }\n        else if (_type == kCustomFollowYOnly){\n            x = _target->getPositionX();\n        }\n\n         _target->setPosition(Point(x , y));\n    }\n}\n\n\n\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n\u4f7f\u3063\u3066\u307f\u308b\n\n\u9759\u6b62\u753b\u3067\u306f\u4f1d\u308f\u308a\u307e\u305b\u3093\u306d\u3001\u306f\u3044\u3002\nX\u8ef8\u306e\u307f\u3001Y\u8ef8\u306e\u307f\u306f\u30a4\u30e1\u30fc\u30b8\u3057\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\u6307\u5b9a\u7bc4\u56f2\u5916\u306b\u51fa\u308b\u3068\u8ffd\u5c3e\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u3092\u3061\u3087\u3063\u3068\u8aac\u660e\u3002\n\n\u753b\u9762\u5916\u306b\u51fa\u308b\u3068\u8ffd\u5c3e\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b\n\u6307\u5b9a\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\nTestScene.cpp\n\nthis->runAction(CustomFollow::create(player , Rect(x, y, visibleSize.width - x , visibleSize.height - y)));\n\n\n\n\u3053\u308c\u3067\u3001\u753b\u9762\u5916\u306b\u51fa\u305f\u6642\u306e\u307f\u30ab\u30e1\u30e9\u304c\u8ffd\u5c3e\u3057\u307e\u3059\u3002\n\u753b\u9762\u5916\u306b\u51fa\u308b\u3068\u2026\n\n\u8ffd\u5c3e\uff01\n\n\n\u3042\u3068\u304c\u304d\nFollow\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f\u3001\u307e\u3060\u307e\u3060\u62e1\u5f35\u51fa\u6765\u308b\u4e8b\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u30bc\u30eb\u30c0\u306e\u4f1d\u8aac\u3084\u30ed\u30c3\u30af\u30de\u30f3\u306e\u3088\u3046\u306bMove\u3057\u3064\u3064\u8ffd\u3044\u304b\u3051\u308b\u3002\n\u8ffd\u3044\u304b\u3051\u305f\u5f8c\u3001\u753b\u9762\u9006\u5074\u304c\u51fa\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u306a\u3069\u306a\u3069\n\u8272\u3005\u3068\u5e83\u304c\u308b\u6a5f\u80fd\u306a\u3093\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u3061\u3087\u3063\u3068\u4f7f\u3044\u306b\u304f\u3044\u2026\u3002\n\u3058\u3083\u3042\u62e1\u5f35\u3057\u3061\u3083\u3048\uff01\u3068\u6761\u4ef6\u53cd\u5c04\u3067\u3084\u3063\u3066\u307f\u305f\u4e8b\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u7c21\u5358\u3067\u3057\u305f\u304c\u3001\u4ee5\u4e0a\u3002Follow\u306e\u304a\u8a71\u3067\u3057\u305f\u30fc\u3002\n# \u30ab\u30e1\u30e9\u304c\u81ea\u52d5\u3067\u8ffd\u5c3e\u3059\u308b\ncocos2d\u306b\u306fFollow\u3068\u3044\u3046\u6a5f\u80fd\u304c\u3042\u308b\u3002\n\u904e\u53bbVer\u3067\u306fCCFollow\u3068\u3044\u3046\u540d\u524d\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\u3053\u308c\u306f\u3001\u7279\u5b9a\u306eNode\u306b\u5bfe\u3057\u3066\u3001\u753b\u9762\u304c\u4ed8\u3044\u3066\u3044\u304f\u3068\u3044\u3046Action\u3067\u3059\u3002\n\u30ab\u30e1\u30e9\u304c\u305a\u3063\u3068\u8ffd\u5c3e\u3057\u3066\u304f\u308b\u3088\u3046\u306a\u3082\u306e\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u308c\u308c\u3070OK\u3002\n\n\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n``` cpp:TestScene.cpp\n\nthis->runAction(Follow::create(cocos2d::Node *followedNode));\n\n```\n\n\u3053\u306e\u4e00\u884c\u3067\u753b\u9762\u304cfollowedNode\u306e\u52d5\u304d\u306b\u5408\u308f\u305b\u3066\u4ed8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\nFollow\u306e\u30bd\u30fc\u30b9\u3092\u898b\u3066\u307f\u308b\u3068\n\n``` cpp:CCAction.cpp\n\nvoid Follow::step(float dt)\n{\n    CC_UNUSED_PARAM(dt);\n\n    if(_boundarySet)\n    {\n        // whole map fits inside a single screen, \n        // no need to modify the position - unless map boundaries are increased\n        if(_boundaryFullyCovered)\n            return;\n\n        Point tempPos = _halfScreenSize - _followedNode->getPosition();\n\n        _target->setPosition(Point(clampf(tempPos.x, _leftBoundary, _rightBoundary),\n                                   clampf(tempPos.y, _bottomBoundary, _topBoundary)));\n    }\n    else\n    {\n        _target->setPosition(_halfScreenSize - _followedNode->getPosition());\n    }\n}\n\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u6307\u5b9aNode\u304cAnchorPoint\u306b\u6765\u308b\u3088\u3046\u306b\u753b\u9762\u304c\u4ed8\u3044\u3066\u3044\u304f\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n## boundarySet\uff1f\n\nFollow::create\u3059\u308b\u6642\u306b\u5f15\u6570\u3067rect\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u30ab\u30e1\u30e9\u306e\u8ffd\u5c3e\u7bc4\u56f2\u3092\u6c7a\u3081\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u6ce8\u610f\u3068\u3057\u3066\u306f\u3001\u3053\u306e\u8ffd\u5c3e\u7bc4\u56f2\u304c\u753b\u9762\u30b5\u30a4\u30ba\u3088\u308a\u5c0f\u3055\u304b\u3063\u305f\u5834\u5408\u3001\n\u8ffd\u5c3e\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u305f\u3081\u8ffd\u5c3e\u3057\u306a\u3044\u3001\u3068\u3044\u3046\u52d5\u304d\u306b\u306a\u308a\u307e\u3059\u3002\n\n(_boundaryFullyCovered\u306b\u5f15\u3063\u304b\u304b\u308a\u307e\u3059\uff09\n\n# \u30d4\u30fc\u30ad\u30fc\u904e\u304e\u3066\u304a\u524d\u306b\u306f\u7121\u7406\u3060\u3088\n\n\u3053\u306eFollow\u3002\"\u904a\u3073\"\u304c\u7121\u304f\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u8ffd\u5c3e\u3059\u308b\u305f\u3081\u3001\n\u30ad\u30e3\u30e9\u304c\u6fc0\u3057\u304f\u52d5\u304f\u30a2\u30af\u30b7\u30e7\u30f3\u30b2\u30fc\u30e0\u3060\u3063\u305f\u308a\u3059\u308b\u3068\n\u4e0a\u4e0b\u5de6\u53f3\u306b\u6fc0\u3057\u304f\u63fa\u308c\u308b\u305f\u3081\u3001\u76ee\u304c\u56de\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3061\u3087\u3063\u3068\u4f7f\u3044\u306b\u304f\u3044\u3067\u3059\u306d\u3002\n\u3058\u3083\u3042\u30ab\u30b9\u30bf\u30e0\u3057\u3061\u3083\u3044\u307e\u3057\u3087\u3046\u3002\n\n# \u62e1\u5f35\u3057\u3066\u307f\u308b\n\nCustomFollow\u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\u3002\n\u901a\u5e38\u306e\u8ffd\u5c3e\u6a5f\u80fd\u306b\u52a0\u3048\u3066\u3001\u4ee5\u4e0b\u306e\uff13\u3064\u306e\u6a5f\u80fd\u3092\u52a0\u3048\u307e\u3059\u3002\n\u30fbX\u8ef8\u306e\u307f\u8ffd\u5c3e\u3059\u308b\n\u30fbY\u8ef8\u306e\u307f\u8ffd\u5c3e\u3059\u308b\n\u30fb\u6307\u5b9a\u7bc4\u56f2\u5916\u306b\u51fa\u305f\u6642\u306e\u307f\u8ffd\u5c3e\u3059\u308b\n\n```cpp:CustomFollow.h\n\nenum CustomFollowType{\n    kCustomFollowNone,\n    kCustomFollowXOnly,\n    kCustomFollowYOnly\n};\n\nclass CustomFollow : public Follow\n{\nprivate:\n    CustomFollowType _type;\n    Rect _marginRect;\n    \n    CustomFollow();\n    ~CustomFollow();\npublic:\n    static CustomFollow* create(Node *followedNode);\n    static CustomFollow* create(Node *followedNode, CustomFollowType type);\n    static CustomFollow* create(Node *followedNode, Rect marginRect);\n    \n    virtual void step(float dt) override;\n};\n\n```\n\n```cpp:CustomFollow.cpp\n\nCustomFollow::CustomFollow(){\n    _type = kCustomFollowNone;\n    _marginRect = Rect::ZERO;\n}\n\nCustomFollow::~CustomFollow(){\n    CC_SAFE_RELEASE(_followedNode);\n}\n\nCustomFollow* CustomFollow::create(Node* followNode){\n    CustomFollow *follow = new CustomFollow();\n    if (follow && follow->initWithTarget(followNode, Rect::ZERO))\n    {\n        follow->autorelease();\n        return follow;\n    }\n    CC_SAFE_DELETE(follow);\n    return nullptr;\n}\n\nCustomFollow* CustomFollow::create(Node* followNode, CustomFollowType type){\n    CustomFollow *follow = new CustomFollow();\n    follow->_type = type;\n    if (follow && follow->initWithTarget(followNode, Rect::ZERO))\n    {\n        follow->autorelease();\n        return follow;\n    }\n    CC_SAFE_DELETE(follow);\n    return nullptr;\n}\n\nCustomFollow* CustomFollow::create(Node* followNode, Rect marginRect){\n    CustomFollow *follow = new CustomFollow();\n    follow->_marginRect = marginRect;\n    if (follow && follow->initWithTarget(followNode, Rect::ZERO))\n    {\n        follow->autorelease();\n        return follow;\n    }\n    CC_SAFE_DELETE(follow);\n    return nullptr;\n}\n\nvoid CustomFollow::step(float dt)\n{\n    CC_UNUSED_PARAM(dt);\n    \n    if(_boundarySet)\n    {\n        if(_boundaryFullyCovered)\n            return;\n        \n        Point tempPos = _halfScreenSize - _followedNode->getPosition();\n\n        float x = clampf(tempPos.x, _leftBoundary, _rightBoundary);\n        float y = clampf(tempPos.y, _bottomBoundary, _topBoundary);\n        \n        if(_type == kCustomFollowXOnly){\n            y = _target->getPositionY();\n        }\n        else if (_type == kCustomFollowYOnly){\n            x = _target->getPositionX();\n        }\n        \n        _target->setPosition(Point(x , y));\n\n    }\n    else\n    {\n        Point calcPos = _target->convertToWorldSpace(_followedNode->getPosition());\n\n        if(_marginRect.containsPoint(calcPos)){\n            return;\n        }\n        \n        float x = _halfScreenSize.x - _followedNode->getPositionX();\n        float y = _halfScreenSize.y - _followedNode->getPositionY();\n        \n        if(_type == kCustomFollowXOnly){\n            y = _target->getPositionY();\n        }\n        else if (_type == kCustomFollowYOnly){\n            x = _target->getPositionX();\n        }\n        \n         _target->setPosition(Point(x , y));\n    }\n}\n\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n# \u4f7f\u3063\u3066\u307f\u308b\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-02-23 19.00.28.png](https://qiita-image-store.s3.amazonaws.com/0/26453/f352a96a-3fb3-b8dd-5759-ee161807a31d.png)\n\n\u9759\u6b62\u753b\u3067\u306f\u4f1d\u308f\u308a\u307e\u305b\u3093\u306d\u3001\u306f\u3044\u3002\n\nX\u8ef8\u306e\u307f\u3001Y\u8ef8\u306e\u307f\u306f\u30a4\u30e1\u30fc\u30b8\u3057\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\u6307\u5b9a\u7bc4\u56f2\u5916\u306b\u51fa\u308b\u3068\u8ffd\u5c3e\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u3092\u3061\u3087\u3063\u3068\u8aac\u660e\u3002\n\n# \u753b\u9762\u5916\u306b\u51fa\u308b\u3068\u8ffd\u5c3e\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b\n\n\u6307\u5b9a\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```cpp:TestScene.cpp\n\nthis->runAction(CustomFollow::create(player , Rect(x, y, visibleSize.width - x , visibleSize.height - y)));\n\n```\n\n\u3053\u308c\u3067\u3001\u753b\u9762\u5916\u306b\u51fa\u305f\u6642\u306e\u307f\u30ab\u30e1\u30e9\u304c\u8ffd\u5c3e\u3057\u307e\u3059\u3002\n\n\u753b\u9762\u5916\u306b\u51fa\u308b\u3068\u2026\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-02-23 19.07.04.png](https://qiita-image-store.s3.amazonaws.com/0/26453/a81cab6c-420f-0d54-de87-44c1dbafa899.png)\n\n\u8ffd\u5c3e\uff01\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-02-23 19.03.37.png](https://qiita-image-store.s3.amazonaws.com/0/26453/2ac4f6c9-4ca0-1553-3c03-6752abbea29a.png)\n\n# \u3042\u3068\u304c\u304d\n\nFollow\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f\u3001\u307e\u3060\u307e\u3060\u62e1\u5f35\u51fa\u6765\u308b\u4e8b\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u30bc\u30eb\u30c0\u306e\u4f1d\u8aac\u3084\u30ed\u30c3\u30af\u30de\u30f3\u306e\u3088\u3046\u306bMove\u3057\u3064\u3064\u8ffd\u3044\u304b\u3051\u308b\u3002\n\u8ffd\u3044\u304b\u3051\u305f\u5f8c\u3001\u753b\u9762\u9006\u5074\u304c\u51fa\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u306a\u3069\u306a\u3069\n\n\u8272\u3005\u3068\u5e83\u304c\u308b\u6a5f\u80fd\u306a\u3093\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u3061\u3087\u3063\u3068\u4f7f\u3044\u306b\u304f\u3044\u2026\u3002\n\u3058\u3083\u3042\u62e1\u5f35\u3057\u3061\u3083\u3048\uff01\u3068\u6761\u4ef6\u53cd\u5c04\u3067\u3084\u3063\u3066\u307f\u305f\u4e8b\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u7c21\u5358\u3067\u3057\u305f\u304c\u3001\u4ee5\u4e0a\u3002Follow\u306e\u304a\u8a71\u3067\u3057\u305f\u30fc\u3002\n\n"}