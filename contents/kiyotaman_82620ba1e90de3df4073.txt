{"tags": ["Arudion", "HC-SR04", "Edison"], "context": " More than 1 year has passed since last update.\n\n\u5fc5\u8981\u306a\u9053\u5177\u30fb\u90e8\u54c1\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4\u30fc\u30bb\u30c3\u30c8\u3061\u3087\u3063\u3068\u9ad8\u3044\u3051\u3069\u4fbf\u5229\n\u3053\u3093\u306a\u611f\u3058\u306e\u5c0f\u578b\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\n\n\u3053\u3093\u306a\u611f\u3058\u306eArduino\u7528\u30d0\u30cb\u30e9\u30b7\u30fc\u30eb\u30c9\u57fa\u677f\n\n\u8d85\u97f3\u6ce2\u8ddd\u96e2\u30bb\u30f3\u30b5\u30fc\u30e2\u30b8\u30e5\u30fc\u30ebHC-SR04\n\u306f\u3093\u3060\u3054\u3066\u30bb\u30c3\u30c8\uff08\u306f\u3093\u3060\u3054\u3066\u306f\u697d\u3057\u3044\uff01\uff09\n\n\n\u7b2c\u4e00\u6bb5\u968e\n\n\u914d\u7dda\n\n\nVCC(HC-SR04) \u3000<--\u7e4b\u3050--> 5v(Arudion)\nTrig(HC-SR04)\u3000<--\u7e4b\u3050--> Digital 12 (Arudion)\nEcho(HC-SR04)\u3000<--\u7e4b\u3050--> Digital 11 (Arudion)\nGnd(HC-SR04)\u3000 <--\u7e4b\u3050--> Gnd (Arudion)\n\n\n\n\u307e\u305a\u306f\u3001\u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4\u30fc\u3068\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u8a66\u3057\u3066\u307f\u308b\u3002\n\u4ee5\u4e0b\u3001\u30bb\u30f3\u30b5\u30fc\u3068\u9752\u3044\u7bb1\u306e\u9593\u3092\u4f55\u304b\u304c\u901a\u904e\u3057\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\n\u3053\u306e\u3042\u305f\u308a\u3092\u53c2\u8003\u306b\u3057\u305f\n\nsketch_HCSR04.ino\n/*\n   HC-SR04 Ping distance sensor:\n   VCC to arduino 5v \n   GND to arduino GND\n   Echo to Arduino pin 11\n   Trig to Arduino pin 12\n   */\n\n#define echoPin 11 // Echo Pin\n#define trigPin 12 // Trigger Pin\n#define LEDPin 13 // Onboard LED\n\nint defaultDistance = 0; // centim\u00e8tre \nint prevDistance = 0;\nint counter = 0;\nint adjustment = 3; // centim\u00e8tre\nboolean lock = false;\nint maximumRange = 500; // Maximum range needed\nint minimumRange = 3; // Minimum range needed\nint unlockReadyCounter = 0;\nint unlockReadyCounterAdjusment = 1;\n\nvoid lockCounter() {\n    digitalWrite(LEDPin, LOW);\n    unlockReadyCounter = 0;\n    lock = true;\n}\n\nvoid unlockCounter() {\n    if (unlockReadyCounter > unlockReadyCounterAdjusment) {\n        digitalWrite(LEDPin, HIGH);\n        unlockReadyCounter = 0;\n        lock = false;\n    } else {\n        unlockReadyCounter++;\n    }\n}\n\nvoid LEDBlink(int c) {\n    for (int i = 0; i < c; i++) {\n        digitalWrite(LEDPin, HIGH);\n        delay(500);\n        digitalWrite(LEDPin, LOW);\n    }\n}\n\nvoid init() {\n    lock = false;\n    defaultDistance = 0;\n    prevDistance = 0;\n    unlockReadyCounter = 0;\n    counter = 0;\n    digitalWrite(LEDPin, HIGH);\n    LEDBlink(3);\n}\n\nvoid setup() {\n    Serial.print(\"Start setup...\");\n    Serial.begin(115200);\n    pinMode(trigPin, OUTPUT);\n    pinMode(echoPin, INPUT);\n    pinMode(LEDPin, OUTPUT); // Use LED indicator (if required)\n    LEDBlink(3);\n}\n\nvoid loop() {\n    //capture the time the board has been running\n    int time = millis()/50;\n    if (time == 0) {\n        init();\n    }\n\n    long duration, distance; // Duration used to calculate distance\n    digitalWrite(trigPin, HIGH); \n    delayMicroseconds(2);\n    digitalWrite(trigPin, HIGH);\n    delayMicroseconds(10); // overhead \n    digitalWrite(trigPin, LOW);\n    duration = pulseIn(echoPin, HIGH);\n    distance = duration/58.2;\n\n    if (defaultDistance == 0) {\n        LEDBlink(2);\n        defaultDistance = distance;\n        Serial.print(\"Default Distance: \");\n        Serial.println(defaultDistance);\n        lockCounter();\n    } else if ( \n            distance >= maximumRange ||\n            distance <= minimumRange ||\n            defaultDistance <= distance ||\n            defaultDistance > prevDistance\n            ) { // lock condtion\n        lockCounter();\n    } else if (\n            (defaultDistance - adjustment) > distance\n            ) { // unlock condtion\n        unlockCounter();\n        Serial.print(\"unlockReadyCounter: \");\n        Serial.print(unlockReadyCounter);\n        Serial.println(\" count.\");\n    }\n    if (lock == false) {\n        LEDBlink(1);\n        lockCounter();\n        counter++;\n        Serial.print(\"Counter: \");\n        Serial.print(counter);\n        Serial.println(\".\");\n        Serial.print(\"Detected Distance: \");\n        Serial.print(distance);\n        Serial.println(\"cm.\");\n    }\n    if (distance && unlockReadyCounter == 0) {\n      prevDistance = distance;\n    }\n    delay(50);\n}\n\n\n\n\u7b2c\u4e8c\u6bb5\u968e\n\u7121\u4e8b\u306b\u306a\u3093\u3068\u306a\u304f\u52d5\u3044\u305f\u306e\u3067\u3001\u306f\u3093\u3060\u3054\u3066\u3067\u90e8\u54c1\u3092\u3064\u306a\u3044\u3067\u307f\u305f\u3002\u5b8c\u6210\u54c1\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u30b3\u30f3\u30d1\u30af\u30c8\u306b\u53ce\u307e\u3063\u305f\u3002\n\n\n\u307e\u3068\u3081\n\u304b\u306a\u308a\u7c21\u5358\u306b\u3064\u304f\u308c\u3066\u3057\u307e\u3046\u3002\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3082\u30bb\u30f3\u30b5\u30fc\u76f8\u624b\u3067\u7d20\u76f4\u306a\u306e\u3067\u697d\u3057\u3044\u3002\u30bb\u30f3\u30b5\u30fc\u306f\u58ca\u308c\u3066\u3044\u306a\u3044\u9650\u308a\u5618\u3084\u3044\u3044\u52a0\u6e1b\u306a\u3053\u3068\u3092\u8a00\u308f\u306a\u3044\u3002\u6b21\u56de\u306f\u7d44\u307f\u4e0a\u304c\u3063\u305f\u3082\u3092Intel Edison+Arudion\u306b\u4e57\u305b\u5909\u3048\u3066\u3001Edison\u7d4c\u7531\u3067\u64cd\u4f5c\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3059\u308b\u3002Intel Edison+Arudion\u306e\u5165\u624b\u5143\uff08PC\u30d1\u30fc\u30c4ARK\u3055\u3093\u3088\u308a\u63d0\u4f9b\u3057\u3066\u3082\u3063\u305f\u306e\u3067\u3001\u30d7\u30c1PR\uff09\u3002\n\u4e0a\u8a18\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u53c2\u8003\u306b\u3001Edison\u4e0a\u3067nodejs or python \u3067\u51e6\u7406\u3092\u66f8\u3044\u3066\u307f\u308b\u3053\u3068\u306b\u3059\u308b\u3002\u3053\u306e\u3042\u305f\u308a\u306emraa\u304c\u53c2\u8003\u306b\u306a\u308a\u305d\u3046\u3002\n\u5b8c\u6210\u30d0\u30fc\u30b8\u30e7\u30f31\u306fIntel Edison+Arudion\u3092\u63d0\u4f9b\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u3001ARK\u3055\u3093\u3067\u8a66\u9a13\u904b\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u6700\u7d42\u7cfb\u306f\u3001(\u65e5\u6642,\u5929\u6c17,\u6e7f\u5ea6,\u6c17\u6e29,\u30ab\u30a6\u30f3\u30bf\u30fc\u60c5\u5831)\u3092Endopoint\u306b\u30dd\u30b9\u30c8\u3059\u308b\u304b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u3069\u3093\u306a\u6642\u306b\u4eba\u304c\u304d\u3066\u3069\u3093\u306a\u6642\u306b\u58f2\u308a\u4e0a\u3052\u304c\u4e0a\u304c\u308b\u304b\u8abf\u67fb\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u7cbe\u5ea6\u306f\u7c97\u3081\u3060\u304c\u3001\u3053\u3046\u3044\u3046\u306e\u306f\u52d5\u304b\u3057\u3066\u30c7\u30fc\u30bf\u3092\u7a4d\u3093\u3067\u3044\u304f\u3068\u30c7\u30fc\u30bf\u3092\u76f8\u5bfe\u7684\u306b\u3042\u308b\u7a0b\u5ea6\u8a55\u4fa1\u3067\u304d\u308b\u304b\u3089\u307e\u305a\u306f\u4f7f\u3063\u3066\u307f\u3066\u69d8\u5b50\u3092\u307f\u308b\u3053\u3068\u304b\u3089\u59cb\u3081\u308b\u3002\n\u540c\u3058\u3088\u3046\u306a\u30b7\u30b9\u30c6\u30e0\u306f\u3059\u3067\u306b\u3042\u308b\u3051\u3069\u3001\u9ad8\u305d\u3046\u3002\u624b\u8efd\u306b\u30ea\u30fc\u30ba\u30ca\u30d6\u30eb\u306b\u3057\u304b\u3082\u81ea\u5206\u3067\u3082\u7c21\u5358\u306b\u4f5c\u308c\u3066\u3057\u307e\u3046\u6642\u4ee3\u306b\u7a81\u5165\u3002\u307e\u305f\u3001\u6642\u4ee3\u304c\u9032\u5316\u3059\u308b\u3002\n\u5f8c\u3001\u4f55\u4eba\u5e97\u8217\u306b\u5165\u3063\u305f\u304b\u304c\u308f\u304b\u308c\u3070\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3068\u308c\u308b\u3002\u305d\u306e\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0a\u3052\u308b\u3053\u3068\u304c\u76ee\u6a19\u306b\u306a\u308c\u3070\u5e97\u8217\u30b9\u30bf\u30c3\u30d5\u306b\u3068\u3063\u3066\u306f\u308f\u304b\u308a\u3084\u3059\u3044\u76ee\u6a19\u306b\u306a\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u5e97\u8217\u306e\u3082\u306e\u304c\u58f2\u308c\u306a\u3044\u306e\u306f\u3001\u5834\u6240\u304c\u539f\u56e0\uff1f\u30d0\u30a4\u30e4\u30fc\u304c\u8cb7\u3063\u305f\u3082\u306e\u304c\u539f\u56e0\uff1f\u5e97\u8217\u30b9\u30bf\u30c3\u30d5\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u539f\u56e0\uff1f\u3068\u304b\u6539\u5584\u7b87\u6240\u3092\u6d17\u3044\u51fa\u3059\u624b\u52a9\u3051\u306b\u3082\u306a\u308b\u306f\u305a\u3002\u3055\u3089\u306b\u3001\u58f2\u308a\u4e0a\u3052\u30a2\u30c3\u30d7\u306b\u7e4b\u304c\u308b\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u5e97\u8217\u30b9\u30bf\u30c3\u30d5\u304c\u52aa\u529b\u3059\u308c\u3070\u3001\u305d\u3053\u3067\u306e\u6210\u679c\u306f\u4e00\u76ee\u77ad\u7136\u306a\u306e\u3067\u3001\u5e97\u8217\u3067\u9811\u5f35\u3063\u3066\u3044\u308b\u30b9\u30bf\u30c3\u30d5\u3055\u3093\u306e\u624b\u52a9\u3051\u306b\u306a\u308c\u308c\u3070\u5b09\u3057\u3044\u3002\u5e97\u8217\u30b9\u30bf\u30c3\u30d5\u306e\u51e6\u9047\u306e\u6539\u5584\u306b\u3082\u3064\u306a\u304c\u3063\u305f\u3089\u5b09\u3057\u3044\u3002\n\n\n## \u5fc5\u8981\u306a\u9053\u5177\u30fb\u90e8\u54c1\n* \u3053\u3093\u306a\u611f\u3058\u306e[\u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4\u30fc\u30bb\u30c3\u30c8](http://www.amazon.co.jp/dp/B001P2O0BM)\u3061\u3087\u3063\u3068\u9ad8\u3044\u3051\u3069\u4fbf\u5229\n* \u3053\u3093\u306a\u611f\u3058\u306e[\u5c0f\u578b\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9](https://www.switch-science.com/catalog/1475/)\n* \u3053\u3093\u306a\u611f\u3058\u306e[Arduino\u7528\u30d0\u30cb\u30e9\u30b7\u30fc\u30eb\u30c9\u57fa\u677f](https://www.switch-science.com/catalog/991/)\n* [\u8d85\u97f3\u6ce2\u8ddd\u96e2\u30bb\u30f3\u30b5\u30fc\u30e2\u30b8\u30e5\u30fc\u30ebHC-SR04](http://www.amazon.co.jp/dp/B004U8TOE6/)\n* \u306f\u3093\u3060\u3054\u3066\u30bb\u30c3\u30c8\uff08\u306f\u3093\u3060\u3054\u3066\u306f\u697d\u3057\u3044\uff01\uff09\n\n## \u7b2c\u4e00\u6bb5\u968e\n\n* \u914d\u7dda\n * VCC(HC-SR04) \u3000<--\u7e4b\u3050--> 5v(Arudion)\n * Trig(HC-SR04)\u3000<--\u7e4b\u3050--> Digital 12 (Arudion)\n * Echo(HC-SR04)\u3000<--\u7e4b\u3050--> Digital 11 (Arudion)\n * Gnd(HC-SR04)\u3000 <--\u7e4b\u3050--> Gnd (Arudion)\n\n\u307e\u305a\u306f\u3001\u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4\u30fc\u3068\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u8a66\u3057\u3066\u307f\u308b\u3002\n\u4ee5\u4e0b\u3001\u30bb\u30f3\u30b5\u30fc\u3068\u9752\u3044\u7bb1\u306e\u9593\u3092\u4f55\u304b\u304c\u901a\u904e\u3057\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\n\n![IMG_0511.jpg](https://qiita-image-store.s3.amazonaws.com/0/18766/360388e7-3dd6-b315-fdb3-ea847f3af888.jpeg \"IMG_0511.jpg\")\n\n### \u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\n\n[\u3053\u306e\u3042\u305f\u308a\u3092\u53c2\u8003\u306b\u3057\u305f](http://arduinobasics.blogspot.jp/2012/11/arduinobasics-hc-sr04-ultrasonic-sensor.html?m=1)\n\n```ino:sketch_HCSR04.ino\n/*\n   HC-SR04 Ping distance sensor:\n   VCC to arduino 5v \n   GND to arduino GND\n   Echo to Arduino pin 11\n   Trig to Arduino pin 12\n   */\n\n#define echoPin 11 // Echo Pin\n#define trigPin 12 // Trigger Pin\n#define LEDPin 13 // Onboard LED\n\nint defaultDistance = 0; // centim\u00e8tre \nint prevDistance = 0;\nint counter = 0;\nint adjustment = 3; // centim\u00e8tre\nboolean lock = false;\nint maximumRange = 500; // Maximum range needed\nint minimumRange = 3; // Minimum range needed\nint unlockReadyCounter = 0;\nint unlockReadyCounterAdjusment = 1;\n\nvoid lockCounter() {\n    digitalWrite(LEDPin, LOW);\n    unlockReadyCounter = 0;\n    lock = true;\n}\n\nvoid unlockCounter() {\n    if (unlockReadyCounter > unlockReadyCounterAdjusment) {\n        digitalWrite(LEDPin, HIGH);\n        unlockReadyCounter = 0;\n        lock = false;\n    } else {\n        unlockReadyCounter++;\n    }\n}\n\nvoid LEDBlink(int c) {\n    for (int i = 0; i < c; i++) {\n        digitalWrite(LEDPin, HIGH);\n        delay(500);\n        digitalWrite(LEDPin, LOW);\n    }\n}\n\nvoid init() {\n    lock = false;\n    defaultDistance = 0;\n    prevDistance = 0;\n    unlockReadyCounter = 0;\n    counter = 0;\n    digitalWrite(LEDPin, HIGH);\n    LEDBlink(3);\n}\n\nvoid setup() {\n    Serial.print(\"Start setup...\");\n    Serial.begin(115200);\n    pinMode(trigPin, OUTPUT);\n    pinMode(echoPin, INPUT);\n    pinMode(LEDPin, OUTPUT); // Use LED indicator (if required)\n    LEDBlink(3);\n}\n\nvoid loop() {\n    //capture the time the board has been running\n    int time = millis()/50;\n    if (time == 0) {\n        init();\n    }\n\n    long duration, distance; // Duration used to calculate distance\n    digitalWrite(trigPin, HIGH); \n    delayMicroseconds(2);\n    digitalWrite(trigPin, HIGH);\n    delayMicroseconds(10); // overhead \n    digitalWrite(trigPin, LOW);\n    duration = pulseIn(echoPin, HIGH);\n    distance = duration/58.2;\n\n    if (defaultDistance == 0) {\n        LEDBlink(2);\n        defaultDistance = distance;\n        Serial.print(\"Default Distance: \");\n        Serial.println(defaultDistance);\n        lockCounter();\n    } else if ( \n            distance >= maximumRange ||\n            distance <= minimumRange ||\n            defaultDistance <= distance ||\n            defaultDistance > prevDistance\n            ) { // lock condtion\n        lockCounter();\n    } else if (\n            (defaultDistance - adjustment) > distance\n            ) { // unlock condtion\n        unlockCounter();\n        Serial.print(\"unlockReadyCounter: \");\n        Serial.print(unlockReadyCounter);\n        Serial.println(\" count.\");\n    }\n    if (lock == false) {\n        LEDBlink(1);\n        lockCounter();\n        counter++;\n        Serial.print(\"Counter: \");\n        Serial.print(counter);\n        Serial.println(\".\");\n        Serial.print(\"Detected Distance: \");\n        Serial.print(distance);\n        Serial.println(\"cm.\");\n    }\n    if (distance && unlockReadyCounter == 0) {\n      prevDistance = distance;\n    }\n    delay(50);\n}\n```\n\n## \u7b2c\u4e8c\u6bb5\u968e\n\n\u7121\u4e8b\u306b\u306a\u3093\u3068\u306a\u304f\u52d5\u3044\u305f\u306e\u3067\u3001\u306f\u3093\u3060\u3054\u3066\u3067\u90e8\u54c1\u3092\u3064\u306a\u3044\u3067\u307f\u305f\u3002\u5b8c\u6210\u54c1\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u30b3\u30f3\u30d1\u30af\u30c8\u306b\u53ce\u307e\u3063\u305f\u3002\n\n![IMG_0517.jpg](https://qiita-image-store.s3.amazonaws.com/0/18766/aaf59131-c95e-3bf0-a854-3a8a9c76873f.jpeg \"IMG_0517.jpg\")\n\n## \u307e\u3068\u3081\n\u304b\u306a\u308a\u7c21\u5358\u306b\u3064\u304f\u308c\u3066\u3057\u307e\u3046\u3002\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3082\u30bb\u30f3\u30b5\u30fc\u76f8\u624b\u3067\u7d20\u76f4\u306a\u306e\u3067\u697d\u3057\u3044\u3002\u30bb\u30f3\u30b5\u30fc\u306f\u58ca\u308c\u3066\u3044\u306a\u3044\u9650\u308a\u5618\u3084\u3044\u3044\u52a0\u6e1b\u306a\u3053\u3068\u3092\u8a00\u308f\u306a\u3044\u3002\u6b21\u56de\u306f\u7d44\u307f\u4e0a\u304c\u3063\u305f\u3082\u3092Intel Edison+Arudion\u306b\u4e57\u305b\u5909\u3048\u3066\u3001Edison\u7d4c\u7531\u3067\u64cd\u4f5c\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3059\u308b\u3002[Intel Edison+Arudion\u306e\u5165\u624b\u5143](https://www.ark-pc.co.jp/i/10390002/)\uff08PC\u30d1\u30fc\u30c4ARK\u3055\u3093\u3088\u308a\u63d0\u4f9b\u3057\u3066\u3082\u3063\u305f\u306e\u3067\u3001\u30d7\u30c1PR\uff09\u3002\n\n\u4e0a\u8a18\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u53c2\u8003\u306b\u3001Edison\u4e0a\u3067nodejs or python \u3067\u51e6\u7406\u3092\u66f8\u3044\u3066\u307f\u308b\u3053\u3068\u306b\u3059\u308b\u3002\u3053\u306e\u3042\u305f\u308a\u306e[mraa](https://github.com/intel-iot-devkit/mraa/tree/master/examples)\u304c\u53c2\u8003\u306b\u306a\u308a\u305d\u3046\u3002\n\n\u5b8c\u6210\u30d0\u30fc\u30b8\u30e7\u30f31\u306f[Intel Edison+Arudion](https://www.ark-pc.co.jp/i/10390002/)\u3092\u63d0\u4f9b\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u3001ARK\u3055\u3093\u3067\u8a66\u9a13\u904b\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u6700\u7d42\u7cfb\u306f\u3001(\u65e5\u6642,\u5929\u6c17,\u6e7f\u5ea6,\u6c17\u6e29,\u30ab\u30a6\u30f3\u30bf\u30fc\u60c5\u5831)\u3092Endopoint\u306b\u30dd\u30b9\u30c8\u3059\u308b\u304b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u3069\u3093\u306a\u6642\u306b\u4eba\u304c\u304d\u3066\u3069\u3093\u306a\u6642\u306b\u58f2\u308a\u4e0a\u3052\u304c\u4e0a\u304c\u308b\u304b\u8abf\u67fb\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u7cbe\u5ea6\u306f\u7c97\u3081\u3060\u304c\u3001\u3053\u3046\u3044\u3046\u306e\u306f\u52d5\u304b\u3057\u3066\u30c7\u30fc\u30bf\u3092\u7a4d\u3093\u3067\u3044\u304f\u3068\u30c7\u30fc\u30bf\u3092\u76f8\u5bfe\u7684\u306b\u3042\u308b\u7a0b\u5ea6\u8a55\u4fa1\u3067\u304d\u308b\u304b\u3089\u307e\u305a\u306f\u4f7f\u3063\u3066\u307f\u3066\u69d8\u5b50\u3092\u307f\u308b\u3053\u3068\u304b\u3089\u59cb\u3081\u308b\u3002\n\n\n\u540c\u3058\u3088\u3046\u306a\u30b7\u30b9\u30c6\u30e0\u306f\u3059\u3067\u306b\u3042\u308b\u3051\u3069\u3001\u9ad8\u305d\u3046\u3002\u624b\u8efd\u306b\u30ea\u30fc\u30ba\u30ca\u30d6\u30eb\u306b\u3057\u304b\u3082\u81ea\u5206\u3067\u3082\u7c21\u5358\u306b\u4f5c\u308c\u3066\u3057\u307e\u3046\u6642\u4ee3\u306b\u7a81\u5165\u3002\u307e\u305f\u3001\u6642\u4ee3\u304c\u9032\u5316\u3059\u308b\u3002\n\n\u5f8c\u3001\u4f55\u4eba\u5e97\u8217\u306b\u5165\u3063\u305f\u304b\u304c\u308f\u304b\u308c\u3070\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3068\u308c\u308b\u3002\u305d\u306e\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0a\u3052\u308b\u3053\u3068\u304c\u76ee\u6a19\u306b\u306a\u308c\u3070\u5e97\u8217\u30b9\u30bf\u30c3\u30d5\u306b\u3068\u3063\u3066\u306f\u308f\u304b\u308a\u3084\u3059\u3044\u76ee\u6a19\u306b\u306a\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u5e97\u8217\u306e\u3082\u306e\u304c\u58f2\u308c\u306a\u3044\u306e\u306f\u3001\u5834\u6240\u304c\u539f\u56e0\uff1f\u30d0\u30a4\u30e4\u30fc\u304c\u8cb7\u3063\u305f\u3082\u306e\u304c\u539f\u56e0\uff1f\u5e97\u8217\u30b9\u30bf\u30c3\u30d5\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u539f\u56e0\uff1f\u3068\u304b\u6539\u5584\u7b87\u6240\u3092\u6d17\u3044\u51fa\u3059\u624b\u52a9\u3051\u306b\u3082\u306a\u308b\u306f\u305a\u3002\u3055\u3089\u306b\u3001\u58f2\u308a\u4e0a\u3052\u30a2\u30c3\u30d7\u306b\u7e4b\u304c\u308b\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u5e97\u8217\u30b9\u30bf\u30c3\u30d5\u304c\u52aa\u529b\u3059\u308c\u3070\u3001\u305d\u3053\u3067\u306e\u6210\u679c\u306f\u4e00\u76ee\u77ad\u7136\u306a\u306e\u3067\u3001\u5e97\u8217\u3067\u9811\u5f35\u3063\u3066\u3044\u308b\u30b9\u30bf\u30c3\u30d5\u3055\u3093\u306e\u624b\u52a9\u3051\u306b\u306a\u308c\u308c\u3070\u5b09\u3057\u3044\u3002\u5e97\u8217\u30b9\u30bf\u30c3\u30d5\u306e\u51e6\u9047\u306e\u6539\u5584\u306b\u3082\u3064\u306a\u304c\u3063\u305f\u3089\u5b09\u3057\u3044\u3002\n\n![IMG_0515.jpg](https://qiita-image-store.s3.amazonaws.com/0/18766/6b277513-8aca-2ba0-afdd-4c87eecae723.jpeg \"IMG_0515.jpg\")\n"}