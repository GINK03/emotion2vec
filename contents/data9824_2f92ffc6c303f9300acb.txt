{"context": " More than 1 year has passed since last update.PRML4.3.3\u306e\u901a\u308a\u3001IRLS\uff08\u53cd\u5fa9\u518d\u91cd\u307f\u4ed8\u3051\u6700\u5c0f\u4e8c\u4e57\u6cd5\uff09\u306b\u3088\u308a\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bfw\u306e\u6700\u5c24\u63a8\u5b9a\u3092\u884c\u3044\u3001\u5404x\u306b\u304a\u3051\u308b\u30af\u30e9\u30b9\u306e\u4e8b\u5f8c\u78ba\u7387\u3092\u6c42\u3081\u3001\u56f34.4\u3068\u540c\u69d8\u306b\u56f3\u793a\u3057\u307e\u3059\u3002IRLS\u306e\u904e\u7a0b\u3067\u306ew\u304a\u3088\u3073\u25bdE(w)\u306e\u5909\u5316\u3082\u56f3\u793a\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u52fe\u914d\u964d\u4e0b\u6cd5\u3067\u89e3\u3044\u305f\u5834\u5408\u306b\u3064\u3044\u3066\u3082\u56f3\u793a\u3057\u307e\u3059\u3002\n\nlibrary(MASS)\nframe()\nset.seed(0)\npar(mfcol=c(3, 4))\npar(mar=c(3, 3, 1, 0.1))\npar(mgp=c(2, 1, 0))\nxrange <- c(-4, 8)\nyrange <- c(-8, 4)\nx1 <- seq(xrange[1], xrange[2], .1)\nx2 <- seq(yrange[1], xrange[2], .1)\nx <- mvrnorm(10, c(0,1), matrix(c(2, 1.9, 1.9, 2), 2))\nd1 <- as.data.frame(cbind(x, 1, 1))\nx <- mvrnorm(10, c(2,0), matrix(c(2, 1.9, 1.9, 2), 2))\nd1 <- rbind(d1, as.data.frame(cbind(x, 2, 0)))\nx <- mvrnorm(5, c(7,-7), matrix(c(.2, 0, 0, .2), 2))\nd2 <- rbind(d1, as.data.frame(cbind(x, 2, 0)))\nnames(d1) <- c(\"x1\",\"x2\",\"class\",\"t\")\nnames(d2) <- c(\"x1\",\"x2\",\"class\",\"t\")\n\nlogistic <- function(x) {\n        1 / (1 + exp(-x))\n}\nbase <- function(x1, x2) {\n        (cbind(1, x1, x2))   # w0\u3092\u30d0\u30a4\u30a2\u30b9\u9805\u3068\u3059\u308b\u305f\u3081\u03c60=1\n}\ndoplot <- function(d, irls) {\n        eta <- 0.1\n        w = c(0, 0, 0)\n        weights <- w\n        phi <- base(d$x1, d$x2)\n        grads <- c()\n        repeat {\n                y <- t(logistic(t(w) %*% t(phi)))\n                g <- t(phi) %*% (y - d$t)\n                grads <- rbind(grads, t(g))\n                if (sum(g^2) < 1.0e-5) break\n                if (irls) {\n                        rn <- as.vector(y * (1 - y))\n                        r <- diag(rn)\n                        hessian <- t(phi) %*% r %*% phi\n                        #rinv <- diag(1 / rn)\n                        #z <- phi %*% w - rinv %*% (y - d$t)\n                        #w <- solve(hessian) %*% t(phi) %*% r %*% z\n                        diff <- solve(hessian) %*% t(phi) %*% (y - d$t)\n                        w <- w - diff\n                } else {\n                        diff <- 0.1 * g\n                        w <- w - diff\n                }\n                weights = rbind(weights, t(w))\n        }\n        matplot(weights, type=\"l\", ylab=\"w\", main=ifelse(irls, \"IRLS\", paste(\"gradient descent\", eta)))\n        matplot(log(abs(grads)), type=\"l\", ylab=expression(paste(\"log\", group(\"|\", paste(nabla, \"E\"), \"|\"))))\n        estimate <- function(x1, x2){\n                logistic(t(w) %*% t(base(x1, x2)))\n        }\n        y1 <- outer(x1, x2, estimate)\n        contour(x1, x2, y1, xlim=xrange, ylim=yrange, levels=c(0.5))\n        image(x1, x2, y1, xlim=xrange, ylim=yrange, zlim=c(0,1), col=terrain.colors(32), add=T)\n        contour(x1, x2, y1, xlim=xrange, ylim=yrange, levels=c(0.5), add=T)\n        par(new=T)\n        plot(d$x1, d$x2, col=d$class, xlim=xrange, ylim=yrange)\n}\n\ndoplot(d1, T)\ndoplot(d1, F)\ndoplot(d2, T)\ndoplot(d2, F)\n\nPRML4.3.3\u306e\u901a\u308a\u3001IRLS\uff08\u53cd\u5fa9\u518d\u91cd\u307f\u4ed8\u3051\u6700\u5c0f\u4e8c\u4e57\u6cd5\uff09\u306b\u3088\u308a\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bfw\u306e\u6700\u5c24\u63a8\u5b9a\u3092\u884c\u3044\u3001\u5404x\u306b\u304a\u3051\u308b\u30af\u30e9\u30b9\u306e\u4e8b\u5f8c\u78ba\u7387\u3092\u6c42\u3081\u3001\u56f34.4\u3068\u540c\u69d8\u306b\u56f3\u793a\u3057\u307e\u3059\u3002IRLS\u306e\u904e\u7a0b\u3067\u306ew\u304a\u3088\u3073\u25bdE(w)\u306e\u5909\u5316\u3082\u56f3\u793a\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u52fe\u914d\u964d\u4e0b\u6cd5\u3067\u89e3\u3044\u305f\u5834\u5408\u306b\u3064\u3044\u3066\u3082\u56f3\u793a\u3057\u307e\u3059\u3002\n\n![](https://dl.dropbox.com/sh/cwfemibvr7gk4cy/zBcaWQ2InK/8.LogisticRegressionByIRLS.png)\n\n```r\nlibrary(MASS)\nframe()\nset.seed(0)\npar(mfcol=c(3, 4))\npar(mar=c(3, 3, 1, 0.1))\npar(mgp=c(2, 1, 0))\nxrange <- c(-4, 8)\nyrange <- c(-8, 4)\nx1 <- seq(xrange[1], xrange[2], .1)\nx2 <- seq(yrange[1], xrange[2], .1)\nx <- mvrnorm(10, c(0,1), matrix(c(2, 1.9, 1.9, 2), 2))\nd1 <- as.data.frame(cbind(x, 1, 1))\nx <- mvrnorm(10, c(2,0), matrix(c(2, 1.9, 1.9, 2), 2))\nd1 <- rbind(d1, as.data.frame(cbind(x, 2, 0)))\nx <- mvrnorm(5, c(7,-7), matrix(c(.2, 0, 0, .2), 2))\nd2 <- rbind(d1, as.data.frame(cbind(x, 2, 0)))\nnames(d1) <- c(\"x1\",\"x2\",\"class\",\"t\")\nnames(d2) <- c(\"x1\",\"x2\",\"class\",\"t\")\n \nlogistic <- function(x) {\n        1 / (1 + exp(-x))\n}\nbase <- function(x1, x2) {\n        (cbind(1, x1, x2))   # w0\u3092\u30d0\u30a4\u30a2\u30b9\u9805\u3068\u3059\u308b\u305f\u3081\u03c60=1\n}\ndoplot <- function(d, irls) {\n        eta <- 0.1\n        w = c(0, 0, 0)\n        weights <- w\n        phi <- base(d$x1, d$x2)\n        grads <- c()\n        repeat {\n                y <- t(logistic(t(w) %*% t(phi)))\n                g <- t(phi) %*% (y - d$t)\n                grads <- rbind(grads, t(g))\n                if (sum(g^2) < 1.0e-5) break\n                if (irls) {\n                        rn <- as.vector(y * (1 - y))\n                        r <- diag(rn)\n                        hessian <- t(phi) %*% r %*% phi\n                        #rinv <- diag(1 / rn)\n                        #z <- phi %*% w - rinv %*% (y - d$t)\n                        #w <- solve(hessian) %*% t(phi) %*% r %*% z\n                        diff <- solve(hessian) %*% t(phi) %*% (y - d$t)\n                        w <- w - diff\n                } else {\n                        diff <- 0.1 * g\n                        w <- w - diff\n                }\n                weights = rbind(weights, t(w))\n        }\n        matplot(weights, type=\"l\", ylab=\"w\", main=ifelse(irls, \"IRLS\", paste(\"gradient descent\", eta)))\n        matplot(log(abs(grads)), type=\"l\", ylab=expression(paste(\"log\", group(\"|\", paste(nabla, \"E\"), \"|\"))))\n        estimate <- function(x1, x2){\n                logistic(t(w) %*% t(base(x1, x2)))\n        }\n        y1 <- outer(x1, x2, estimate)\n        contour(x1, x2, y1, xlim=xrange, ylim=yrange, levels=c(0.5))\n        image(x1, x2, y1, xlim=xrange, ylim=yrange, zlim=c(0,1), col=terrain.colors(32), add=T)\n        contour(x1, x2, y1, xlim=xrange, ylim=yrange, levels=c(0.5), add=T)\n        par(new=T)\n        plot(d$x1, d$x2, col=d$class, xlim=xrange, ylim=yrange)\n}\n \ndoplot(d1, T)\ndoplot(d1, F)\ndoplot(d2, T)\ndoplot(d2, F)\n```\n", "tags": ["R", "PRML"]}