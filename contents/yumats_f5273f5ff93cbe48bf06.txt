{"context": " More than 1 year has passed since last update.G* Advent Calendar 20\u65e5\u76ee\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u3059\u3002\n\u4e16\u9593\u3067\u6ce8\u76ee\u3092\u96c6\u3081\u3066\u3044\u308b\u3089\u3057\u3044\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u3044\u3046\u306e\u304c\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u77e5\u308a\u305f\u304f\u3066\u3001\u5c11\u3057\u304b\u3058\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u3068\u306f\uff1f\n\u307e\u305a\u6982\u5ff5\u306b\u3064\u3044\u3066\u306f The Reactive Manifesto \u3068\u3044\u3046\u6587\u66f8\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u4e2d\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u5927\u4e8b\u3060\u305d\u3046\u3067\u3059\u3002\n\nReact to events (event-driven)\nReact to load (scalable)\nReact to failures (resilient)\nReact to users (responsive)\n\n\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u3067\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u304b\u3064\u8010\u969c\u5bb3\u6027\u306e\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308c\u3070\u30e6\u30fc\u30b6\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u3088\u304f\u4f7f\u3048\u308b\u3088\u3001\u3063\u3066\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\u3044\u307e\u3069\u304d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u305d\u3046\u3042\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u304c\u3001\u3053\u308c\u3060\u3051\u3060\u3068\u30e2\u30e4\u30e2\u30e4\u3057\u3066\u3044\u3066\u30a4\u30e1\u30fc\u30b8\u304c\u6e67\u304d\u307e\u305b\u3093\u3002\n\nRxJava\n\u4ee5\u4e0b\u3067\u306fJava/Groovy\u3067\u4f7f\u3048\u308b\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066 Netflix \u306e RxJava \u3092\u4f7f\u3063\u3066\u5177\u4f53\u7684\u306b\u8003\u3048\u3066\u307f\u307e\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3053\u3061\u3089\u3067\u3001API\u306f\u3053\u3061\u3089\u3002\n\u307e\u305a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f Observable \u306e\u6982\u5ff5\u304c\u91cd\u8981\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u308c\u306f\u6642\u9593\u3092\u542b\u3093\u3060\u30a4\u30d9\u30f3\u30c8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6271\u3046\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002\u975e\u540c\u671f\u51e6\u7406\u3067\u5c06\u6765\u306e\u5024\u3092\u8868\u3059 Future \u306e\u6982\u5ff5\u304c\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u62e1\u5f35\u3055\u308c\u305f\u30a4\u30e1\u30fc\u30b8\u3067\u3057\u3087\u3046\u304b\u3002\u901a\u5e38\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b\u51e6\u7406\u304c\u5024\u3092\u53d6\u3063\u3066\u304d\u3066\u4f55\u304b\u3059\u308b\u3068\u3044\u3046\u30d7\u30eb\u578b\u3067\u3042\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001Observable\u3067\u306f\u5024\u304c\u751f\u6210\u3055\u308c\u305f\u6642\u70b9\u3067\u3042\u3089\u304b\u3058\u3081\u767b\u9332\u3055\u308c\u305f\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3044\u3046\u30d7\u30c3\u30b7\u30e5\u578b\u3067\u3042\u308b\u3068\u3044\u3046\u70b9\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\u307e\u305fObservable\u306e\u64cd\u4f5c\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u3082\u306e\u3092\u3064\u306a\u3044\u3067\u8907\u96d1\u306a\u64cd\u4f5c\u3092\u7d44\u307f\u7acb\u3066\u3089\u308c\u308b\u3088\u3046\u5408\u6210\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u3092\u6307\u3057\u3066RxJava\u3067\u306f Functional Reactive Programming \u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002Observable\u306e\u64cd\u4f5c\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306f\u3053\u3061\u3089\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\nObservable\n\u307e\u305a\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u540c\u671f\u7684\u51e6\u7406\u3092\u884c\u3046Observable\u3092\u4f7f\u3063\u305f\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u307f\u307e\u3059\u3002Observable\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u306fsubscribe\u30e1\u30bd\u30c3\u30c9\u306bObserver\u3084\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u6e21\u3057\u3066\u3001\u5024\u306e\u751f\u6210\u6642\u306b\u547c\u3073\u51fa\u3059\u51e6\u7406\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\nSyncObservableSample.groovy\n@Grab(group='com.netflix.rxjava', module='rxjava-groovy', version='0.15.1')\nimport static java.util.concurrent.TimeUnit.*\nimport rx.Observable\nimport rx.concurrency.CurrentThreadScheduler\n\nObservable.interval(1, SECONDS, CurrentThreadScheduler.getInstance())\n    .filter { it % 2 == 1 } \n    .map { \"#\" + it }\n    .subscribe { println it }\n\nprintln \"Hoge\"\n\n\n\u4e0a\u8a18\u3067Observable#interval \u306f1\u79d2\u3054\u3068\u306b\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3055\u308c\u308b\u6574\u6570\u5024\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3068\u3057\u3066 CurrentThreadScheduler\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5024\u306e\u751f\u6210\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u4e0a\u3067\u540c\u671f\u7684\u306b\u884c\u308f\u308c\u307e\u3059\u3002Observable#interval \u3067\u4f5c\u3089\u308c\u305fObservable\u306b\u5bfe\u3057\u3066\u3001filter\u306b\u3088\u308b\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3068map\u306b\u3088\u308b\u5024\u306e\u5909\u63db\u3092\u884c\u3044\u3001\u6700\u5f8c\u306bsubscribe\u3067\u5024\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6b62\u3081\u306a\u3044\u9650\u308a\u8868\u793a\u304c\u7d9a\u304d\u307e\u3059\u3002\n\nstdout\n#1\n#3\n#5\n#7\n#9\n...\n\n\n\u6b21\u306b\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046Observable\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\nAsyncObservableSample.groovy\n@Grab(group='com.netflix.rxjava', module='rxjava-groovy', version='0.15.1')\nimport static java.util.concurrent.TimeUnit.*\nimport rx.Observable\nimport rx.concurrency.NewThreadScheduler\n\nObservable.interval(1, SECONDS, NewThreadScheduler.getInstance())\n    .filter { it % 2 == 1 } \n    .map { \"#\" + it }\n    .subscribe { println it }\n\nprintln \"Hoge\"\n\nThread.sleep 10000 // To prevent the program from quitting immediately\n\n\n\u4eca\u56de\u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3068\u3057\u3066NewThreadScheduler\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5024\u306e\u751f\u6210\u306f\u5225\u30b9\u30ec\u30c3\u30c9\u306b\u3066\u975e\u540c\u671f\u3067\u884c\u308f\u308c\u307e\u3059\u3002Observable\u304c\u540c\u671f\u304b\u975e\u540c\u671f\u304b\u306b\u95a2\u308f\u3089\u305a\u3001filter/map/subscribe\u7b49\u306e\u51e6\u7406\u304c\u5168\u304f\u540c\u3058\u3088\u3046\u306b\u66f8\u3051\u308b\u3068\u3053\u308d\u304c\u826f\u3044\u3067\u3059\u306d\u3002\u51fa\u529b\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nstdout\nHoge\n#1\n#3\n#5\n#7\n#9\n\n\n\u3053\u306e\u3088\u3046\u306bObservable\u3092\u4f7f\u3046\u3068\u30c7\u30fc\u30bf\u751f\u6210\u306e\u540c\u671f\u30fb\u975e\u540c\u671f\u3092\u64cd\u4f5c\u304b\u3089\u96a0\u853d\u3067\u304d\u307e\u3059\u3057\u3001\u751f\u6210\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u5404\u7a2e\u306e\u64cd\u4f5c\u3092\u30c1\u30a7\u30fc\u30f3\u3055\u305b\u3066\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Netflix\u304c\u5185\u90e8\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001\u3053\u306e\u4f8b\u306e\u3088\u3046\u306b\u591a\u304f\u306eAPI\u304cObservable\u3092\u8fd4\u3059\u3088\u3046\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u901a\u5e38\u306eObservable\u3067\u306fsubscribe\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067\u5024\u306e\u751f\u6210\u304c\u59cb\u307e\u308a\u307e\u3059\u304c\u3001publish\u30e1\u30bd\u30c3\u30c9\u3067 ConnectableObservable \u3092\u751f\u6210\u3059\u308c\u3070\u3001subscribe\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067\u306f\u306a\u304fconnect\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067\u5024\u306e\u751f\u6210\u304c\u958b\u59cb\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u8907\u6570\u306eObserver\u3092Observable\u306b\u767b\u9332\u3057\u3066\u3001\u305d\u306e\u5f8c\u3042\u308b\u6642\u70b9\u3067\u4e00\u6589\u306b\u51e6\u7406\u3092\u8d70\u3089\u305b\u305f\u3044\u3088\u3046\u306a\u5834\u5408\u306b\u6709\u52b9\u3067\u3059\u3002\n\nSubject\nSubject\u306fObservable\u3067\u3082\u3042\u308aObserver\u3067\u3082\u3042\u308b\u30af\u30e9\u30b9\u3067\u3059\u306e\u3067\u3001Observable\u3092\u3064\u306a\u3044\u3060\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e0b\u8a18\u3067\u306finterval\u3092\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3067\u3042\u308bObservable\u306b\u5bfe\u3057\u3066\u3001filter/map\u3092\u884c\u3046Observable\u3092Observer\u3068\u3057\u3066\u767b\u9332\u3057\u3066\u3044\u307e\u3059(Subject)\u3002Subject\u306f\u30c7\u30fc\u30bf\u751f\u6210\u65b9\u6cd5\u306e\u9055\u3044\u306b\u3088\u3063\u3066\u3044\u304f\u3064\u304b\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nSubjectSample.groovy\n@Grab(group='com.netflix.rxjava', module='rxjava-groovy', version='0.15.1')\nimport static java.util.concurrent.TimeUnit.*\nimport rx.Observable\nimport rx.concurrency.NewThreadScheduler\nimport rx.subjects.PublishSubject\n\ndef subject = PublishSubject.create()\nsubject.filter { it % 2 == 1 } \n    .map { \"#\" + it }\n    .subscribe { println it }\n\nObservable.interval(1, SECONDS, NewThreadScheduler.getInstance())\n    .subscribe(subject)\n\nprintln \"DONE\"\n\nThread.sleep 10000\n\n\n\n\u307e\u3068\u3081\nRxJava\u3092\u4f7f\u3063\u305f\u304b\u3089\u3068\u3044\u3063\u3066\u3059\u3050\u306b The Reactive Manifesto \u304c\u8a00\u3046\u3088\u3046\u306a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u4f5c\u308c\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Observable\u306b\u3088\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u306e\u62bd\u8c61\u5316\u306f\u78ba\u304b\u306b\u5f37\u529b\u3060\u3068\u601d\u3044\u307e\u3057\u305f\u3002\u307e\u3060\u307e\u3060\u7406\u89e3\u304c\u6d45\u3044\u306e\u3067\u5f15\u304d\u7d9a\u304d\u89e6\u3063\u3066\u307f\u307e\u3059\u3002\n\u306a\u304a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f Coursera \u306e Principles of Reactive Programming \u3068\u3044\u3046\u6388\u696d\u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002Scala\u4f5c\u8005\u306eMartin Odersky\u6c0f\u304c\u8b1b\u5e2b\u3092\u3057\u3066\u3044\u307e\u3059\u3002\nG* Advent Calendar 20\u65e5\u76ee\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u3059\u3002\n\n\u4e16\u9593\u3067[\u6ce8\u76ee\u3092\u96c6\u3081\u3066\u3044\u308b](http://www.infoq.com/jp/news/2013/09/reactive-programming-emerging)\u3089\u3057\u3044\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u3044\u3046\u306e\u304c\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u77e5\u308a\u305f\u304f\u3066\u3001\u5c11\u3057\u304b\u3058\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u3068\u306f\uff1f\n\n\u307e\u305a\u6982\u5ff5\u306b\u3064\u3044\u3066\u306f [The Reactive Manifesto](http://www.reactivemanifesto.org/) \u3068\u3044\u3046\u6587\u66f8\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u4e2d\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u5927\u4e8b\u3060\u305d\u3046\u3067\u3059\u3002\n\n* React to events (event-driven)\n* React to load (scalable)\n* React to failures (resilient)\n* React to users (responsive)\n\n\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u3067\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u304b\u3064\u8010\u969c\u5bb3\u6027\u306e\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308c\u3070\u30e6\u30fc\u30b6\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u3088\u304f\u4f7f\u3048\u308b\u3088\u3001\u3063\u3066\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\u3044\u307e\u3069\u304d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u305d\u3046\u3042\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u304c\u3001\u3053\u308c\u3060\u3051\u3060\u3068\u30e2\u30e4\u30e2\u30e4\u3057\u3066\u3044\u3066\u30a4\u30e1\u30fc\u30b8\u304c\u6e67\u304d\u307e\u305b\u3093\u3002\n\n## RxJava\n\n\u4ee5\u4e0b\u3067\u306fJava/Groovy\u3067\u4f7f\u3048\u308b\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066 Netflix \u306e [RxJava](https://github.com/Netflix/RxJava) \u3092\u4f7f\u3063\u3066\u5177\u4f53\u7684\u306b\u8003\u3048\u3066\u307f\u307e\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f[\u3053\u3061\u3089](https://github.com/Netflix/RxJava/wiki)\u3067\u3001API\u306f[\u3053\u3061\u3089](http://netflix.github.io/RxJava/javadoc/)\u3002\n\n\u307e\u305a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f [Observable](https://github.com/Netflix/RxJava/wiki/Observable) \u306e\u6982\u5ff5\u304c\u91cd\u8981\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u308c\u306f\u6642\u9593\u3092\u542b\u3093\u3060\u30a4\u30d9\u30f3\u30c8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6271\u3046\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002\u975e\u540c\u671f\u51e6\u7406\u3067\u5c06\u6765\u306e\u5024\u3092\u8868\u3059 Future \u306e\u6982\u5ff5\u304c\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u62e1\u5f35\u3055\u308c\u305f\u30a4\u30e1\u30fc\u30b8\u3067\u3057\u3087\u3046\u304b\u3002\u901a\u5e38\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b\u51e6\u7406\u304c\u5024\u3092\u53d6\u3063\u3066\u304d\u3066\u4f55\u304b\u3059\u308b\u3068\u3044\u3046\u30d7\u30eb\u578b\u3067\u3042\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001Observable\u3067\u306f\u5024\u304c\u751f\u6210\u3055\u308c\u305f\u6642\u70b9\u3067\u3042\u3089\u304b\u3058\u3081\u767b\u9332\u3055\u308c\u305f\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3044\u3046\u30d7\u30c3\u30b7\u30e5\u578b\u3067\u3042\u308b\u3068\u3044\u3046\u70b9\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u305fObservable\u306e\u64cd\u4f5c\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u3082\u306e\u3092\u3064\u306a\u3044\u3067\u8907\u96d1\u306a\u64cd\u4f5c\u3092\u7d44\u307f\u7acb\u3066\u3089\u308c\u308b\u3088\u3046\u5408\u6210\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u3092\u6307\u3057\u3066RxJava\u3067\u306f [Functional Reactive Programming](https://github.com/Netflix/RxJava/wiki#functional-reactive-programming-frp) \u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002Observable\u306e\u64cd\u4f5c\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306f[\u3053\u3061\u3089](https://github.com/Netflix/RxJava/wiki/Alphabetical-List-of-Observable-Operators)\u3002\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\n\n### Observable\n\n\u307e\u305a\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u540c\u671f\u7684\u51e6\u7406\u3092\u884c\u3046Observable\u3092\u4f7f\u3063\u305f\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u307f\u307e\u3059\u3002Observable\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u306fsubscribe\u30e1\u30bd\u30c3\u30c9\u306bObserver\u3084\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u6e21\u3057\u3066\u3001\u5024\u306e\u751f\u6210\u6642\u306b\u547c\u3073\u51fa\u3059\u51e6\u7406\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\n```groovy:SyncObservableSample.groovy\n@Grab(group='com.netflix.rxjava', module='rxjava-groovy', version='0.15.1')\nimport static java.util.concurrent.TimeUnit.*\nimport rx.Observable\nimport rx.concurrency.CurrentThreadScheduler\n\nObservable.interval(1, SECONDS, CurrentThreadScheduler.getInstance())\n    .filter { it % 2 == 1 } \n    .map { \"#\" + it }\n    .subscribe { println it }\n\nprintln \"Hoge\"\n```\n\n\u4e0a\u8a18\u3067Observable#interval \u306f1\u79d2\u3054\u3068\u306b\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3055\u308c\u308b\u6574\u6570\u5024\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3068\u3057\u3066 CurrentThreadScheduler\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5024\u306e\u751f\u6210\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u4e0a\u3067\u540c\u671f\u7684\u306b\u884c\u308f\u308c\u307e\u3059\u3002Observable#interval \u3067\u4f5c\u3089\u308c\u305fObservable\u306b\u5bfe\u3057\u3066\u3001filter\u306b\u3088\u308b\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3068map\u306b\u3088\u308b\u5024\u306e\u5909\u63db\u3092\u884c\u3044\u3001\u6700\u5f8c\u306bsubscribe\u3067\u5024\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6b62\u3081\u306a\u3044\u9650\u308a\u8868\u793a\u304c\u7d9a\u304d\u307e\u3059\u3002\n\n```text:stdout\n#1\n#3\n#5\n#7\n#9\n...\n```\n\n\u6b21\u306b\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046Observable\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```groovy:AsyncObservableSample.groovy\n@Grab(group='com.netflix.rxjava', module='rxjava-groovy', version='0.15.1')\nimport static java.util.concurrent.TimeUnit.*\nimport rx.Observable\nimport rx.concurrency.NewThreadScheduler\n\nObservable.interval(1, SECONDS, NewThreadScheduler.getInstance())\n    .filter { it % 2 == 1 } \n    .map { \"#\" + it }\n    .subscribe { println it }\n\nprintln \"Hoge\"\n\nThread.sleep 10000 // To prevent the program from quitting immediately\n```\n\n\u4eca\u56de\u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3068\u3057\u3066NewThreadScheduler\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5024\u306e\u751f\u6210\u306f\u5225\u30b9\u30ec\u30c3\u30c9\u306b\u3066\u975e\u540c\u671f\u3067\u884c\u308f\u308c\u307e\u3059\u3002Observable\u304c\u540c\u671f\u304b\u975e\u540c\u671f\u304b\u306b\u95a2\u308f\u3089\u305a\u3001filter/map/subscribe\u7b49\u306e\u51e6\u7406\u304c\u5168\u304f\u540c\u3058\u3088\u3046\u306b\u66f8\u3051\u308b\u3068\u3053\u308d\u304c\u826f\u3044\u3067\u3059\u306d\u3002\u51fa\u529b\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```text:stdout\nHoge\n#1\n#3\n#5\n#7\n#9\n```\n\n\u3053\u306e\u3088\u3046\u306bObservable\u3092\u4f7f\u3046\u3068\u30c7\u30fc\u30bf\u751f\u6210\u306e\u540c\u671f\u30fb\u975e\u540c\u671f\u3092\u64cd\u4f5c\u304b\u3089\u96a0\u853d\u3067\u304d\u307e\u3059\u3057\u3001\u751f\u6210\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u5404\u7a2e\u306e\u64cd\u4f5c\u3092\u30c1\u30a7\u30fc\u30f3\u3055\u305b\u3066\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Netflix\u304c\u5185\u90e8\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001[\u3053\u306e\u4f8b](https://github.com/Netflix/RxJava/blob/master/language-adaptors/rxjava-groovy/src/examples/groovy/rx/lang/groovy/examples/VideoExample.groovy)\u306e\u3088\u3046\u306b\u591a\u304f\u306eAPI\u304cObservable\u3092\u8fd4\u3059\u3088\u3046\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u901a\u5e38\u306eObservable\u3067\u306fsubscribe\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067\u5024\u306e\u751f\u6210\u304c\u59cb\u307e\u308a\u307e\u3059\u304c\u3001publish\u30e1\u30bd\u30c3\u30c9\u3067 [ConnectableObservable](https://github.com/Netflix/RxJava/wiki/Connectable-Observable-Operators) \u3092\u751f\u6210\u3059\u308c\u3070\u3001subscribe\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067\u306f\u306a\u304fconnect\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067\u5024\u306e\u751f\u6210\u304c\u958b\u59cb\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u8907\u6570\u306eObserver\u3092Observable\u306b\u767b\u9332\u3057\u3066\u3001\u305d\u306e\u5f8c\u3042\u308b\u6642\u70b9\u3067\u4e00\u6589\u306b\u51e6\u7406\u3092\u8d70\u3089\u305b\u305f\u3044\u3088\u3046\u306a\u5834\u5408\u306b\u6709\u52b9\u3067\u3059\u3002\n\n### Subject\n\nSubject\u306fObservable\u3067\u3082\u3042\u308aObserver\u3067\u3082\u3042\u308b\u30af\u30e9\u30b9\u3067\u3059\u306e\u3067\u3001Observable\u3092\u3064\u306a\u3044\u3060\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e0b\u8a18\u3067\u306finterval\u3092\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3067\u3042\u308bObservable\u306b\u5bfe\u3057\u3066\u3001filter/map\u3092\u884c\u3046Observable\u3092Observer\u3068\u3057\u3066\u767b\u9332\u3057\u3066\u3044\u307e\u3059(Subject)\u3002Subject\u306f\u30c7\u30fc\u30bf\u751f\u6210\u65b9\u6cd5\u306e\u9055\u3044\u306b\u3088\u3063\u3066\u3044\u304f\u3064\u304b\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u8a73\u7d30\u306f[\u3053\u3061\u3089](https://github.com/Netflix/RxJava/wiki/Subject)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```groovy:SubjectSample.groovy\n@Grab(group='com.netflix.rxjava', module='rxjava-groovy', version='0.15.1')\nimport static java.util.concurrent.TimeUnit.*\nimport rx.Observable\nimport rx.concurrency.NewThreadScheduler\nimport rx.subjects.PublishSubject\n\ndef subject = PublishSubject.create()\nsubject.filter { it % 2 == 1 } \n    .map { \"#\" + it }\n    .subscribe { println it }\n\nObservable.interval(1, SECONDS, NewThreadScheduler.getInstance())\n    .subscribe(subject)\n\nprintln \"DONE\"\n\nThread.sleep 10000\n```\n\n## \u307e\u3068\u3081\n\nRxJava\u3092\u4f7f\u3063\u305f\u304b\u3089\u3068\u3044\u3063\u3066\u3059\u3050\u306b [The Reactive Manifesto](http://www.reactivemanifesto.org/) \u304c\u8a00\u3046\u3088\u3046\u306a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u4f5c\u308c\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Observable\u306b\u3088\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u306e\u62bd\u8c61\u5316\u306f\u78ba\u304b\u306b\u5f37\u529b\u3060\u3068\u601d\u3044\u307e\u3057\u305f\u3002\u307e\u3060\u307e\u3060\u7406\u89e3\u304c\u6d45\u3044\u306e\u3067\u5f15\u304d\u7d9a\u304d\u89e6\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u306a\u304a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f Coursera \u306e [Principles of Reactive Programming](https://class.coursera.org/reactive-001/) \u3068\u3044\u3046\u6388\u696d\u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002Scala\u4f5c\u8005\u306eMartin Odersky\u6c0f\u304c\u8b1b\u5e2b\u3092\u3057\u3066\u3044\u307e\u3059\u3002", "tags": ["Groovy", "RxJava"]}