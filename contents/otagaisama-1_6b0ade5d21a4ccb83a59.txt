{"context": "\n\n\u6982\u8981\niTextSharp \u3092\u4f7f\u7528\u3057\u3066\u3001PDF\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5185\u306b\u3042\u308b\u753b\u50cf\u3092\u62bd\u51fa\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\nVisual Studio \u3067 NuGet \u30d1\u30c3\u30b1\u30fc\u30b8(nia_tn1012\u3055\u3093) \u304b\u3089  5 \u7cfb\uff08\u6295\u7a3f\u6642\u306e\u6700\u65b0\u7248\uff09\u3092\u53d6\u308a\u8fbc\u307f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u9023\u756a\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\uff08\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u5b9b\uff09\u306b\u629c\u304d\u51fa\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u203biTextSharp \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u5f62\u614b\u306b\u6ce8\u610f\u3002\n\u3055\u307e\u3056\u307e\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001iTextSharp.text.pdf.parser.PdfReaderContentParser \u30af\u30e9\u30b9\u306e ProcessContent \u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u3068\u3060\u3044\u3076\u697d\u306b\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\niTextSharp \u306f\u3001Java \u7528\u306b\u4f5c\u3089\u308c\u3066\u3044\u308b iText \u3092 .NET \u5411\u3051\u306b\u79fb\u690d\u3057\u305f\u3082\u306e\u306e\u3088\u3046\u3067\u3001Java \u3063\u307d\u304f\u30ea\u30b9\u30ca\u30fc\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3053\u308d\u304c\u3044\u304b\u306b\u3082\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nusing System;\nusing System.Collections.Generic;\nusing System.Drawing;\nusing System.Linq;\n\nnamespace SampleNS\n{\n    public class SampleClass\n    {\n        public void SampleMethod()\n        {\n            using (var reader = new iTextSharp.text.pdf.PdfReader(@\"sample.pdf\"))\n            {\n                var images = new System.Collections.Generic.List<iTextSharp.text.pdf.parser.PdfImageObject>(); // \u30ea\u30b9\u30ca\u30fc\u304b\u3089\u30d1\u30fc\u30b5\u30fc\u304c\u8fd4\u3057\u3066\u304d\u305f\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e\u5165\u308c\u7269\n\n                var parser = new iTextSharp.text.pdf.parser.PdfReaderContentParser(reader);\n                for (int pageNumber = 1; pageNumber < reader.NumberOfPages; pageNumber++)\n                {\n                    parser.ProcessContent<ImageRenderListener>(pageNumber, new ImageRenderListener(images));\n                }\n                var index = 1; // 1 \u304b\u3089\u306e\u9023\u756a\n                images.ForEach(q => q.GetDrawingImage().Save(System.IO.Path.Combine(System.Environment.GetFolderPath(System.Environment.SpecialFolder.DesktopDirectory), (index++).ToString() + \".\" + q.GetFileType())));\n            }\n        }\n    }\n\n    internal class ImageRenderListener : iTextSharp.text.pdf.parser.IRenderListener\n    {\n        private System.Collections.Generic.List<iTextSharp.text.pdf.parser.PdfImageObject> _list;\n\n        public ImageRenderListener(System.Collections.Generic.List<iTextSharp.text.pdf.parser.PdfImageObject> list)\n        {\n            _list = list;\n        }\n\n        public void BeginTextBlock()\n        {\n            // \u4eca\u56de\u306a\u306b\u3082\u3059\u308b\u5fc5\u8981\u306a\u3057\n        }\n\n        public void EndTextBlock()\n        {\n            // \u4eca\u56de\u306a\u306b\u3082\u3059\u308b\u5fc5\u8981\u306a\u3057\n        }\n\n        public void RenderImage(iTextSharp.text.pdf.parser.ImageRenderInfo renderInfo)\n        {\n            var img = renderInfo.GetImage();\n            _list.Add(img);\n        }\n\n        public void RenderText(iTextSharp.text.pdf.parser.TextRenderInfo renderInfo)\n        {\n            // \u4eca\u56de\u306a\u306b\u3082\u3059\u308b\u5fc5\u8981\u306a\u3057\n        }\n    }\n}\n\n\n\u3054\u53c2\u8003\n\n\nHow to extract images from PDF files using c# and itextsharp - psyCodeDeveloper Thank you so much!\n\n#\u6982\u8981\n[iTextSharp](https://ja.osdn.net/projects/sfnet_itextsharp/) \u3092\u4f7f\u7528\u3057\u3066\u3001PDF\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5185\u306b\u3042\u308b\u753b\u50cf\u3092\u62bd\u51fa\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\nVisual Studio \u3067 [NuGet \u30d1\u30c3\u30b1\u30fc\u30b8(nia_tn1012\u3055\u3093)](http://qiita.com/nia_tn1012/items/77c3c1b006f7c69d30ac) \u304b\u3089  5 \u7cfb\uff08\u6295\u7a3f\u6642\u306e\u6700\u65b0\u7248\uff09\u3092\u53d6\u308a\u8fbc\u307f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u9023\u756a\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\uff08\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u5b9b\uff09\u306b\u629c\u304d\u51fa\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u203biTextSharp \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u5f62\u614b\u306b\u6ce8\u610f\u3002\n\n\u3055\u307e\u3056\u307e\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001iTextSharp.text.pdf.parser.PdfReaderContentParser \u30af\u30e9\u30b9\u306e ProcessContent \u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u3068\u3060\u3044\u3076\u697d\u306b\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\niTextSharp \u306f\u3001Java \u7528\u306b\u4f5c\u3089\u308c\u3066\u3044\u308b iText \u3092 .NET \u5411\u3051\u306b\u79fb\u690d\u3057\u305f\u3082\u306e\u306e\u3088\u3046\u3067\u3001Java \u3063\u307d\u304f\u30ea\u30b9\u30ca\u30fc\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3053\u308d\u304c\u3044\u304b\u306b\u3082\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3059\u3002\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Drawing;\nusing System.Linq;\n\nnamespace SampleNS\n{\n    public class SampleClass\n    {\n        public void SampleMethod()\n        {\n            using (var reader = new iTextSharp.text.pdf.PdfReader(@\"sample.pdf\"))\n            {\n                var images = new System.Collections.Generic.List<iTextSharp.text.pdf.parser.PdfImageObject>(); // \u30ea\u30b9\u30ca\u30fc\u304b\u3089\u30d1\u30fc\u30b5\u30fc\u304c\u8fd4\u3057\u3066\u304d\u305f\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e\u5165\u308c\u7269\n\n                var parser = new iTextSharp.text.pdf.parser.PdfReaderContentParser(reader);\n                for (int pageNumber = 1; pageNumber < reader.NumberOfPages; pageNumber++)\n                {\n                    parser.ProcessContent<ImageRenderListener>(pageNumber, new ImageRenderListener(images));\n                }\n                var index = 1; // 1 \u304b\u3089\u306e\u9023\u756a\n                images.ForEach(q => q.GetDrawingImage().Save(System.IO.Path.Combine(System.Environment.GetFolderPath(System.Environment.SpecialFolder.DesktopDirectory), (index++).ToString() + \".\" + q.GetFileType())));\n            }\n        }\n    }\n\n    internal class ImageRenderListener : iTextSharp.text.pdf.parser.IRenderListener\n    {\n        private System.Collections.Generic.List<iTextSharp.text.pdf.parser.PdfImageObject> _list;\n\n        public ImageRenderListener(System.Collections.Generic.List<iTextSharp.text.pdf.parser.PdfImageObject> list)\n        {\n            _list = list;\n        }\n\n        public void BeginTextBlock()\n        {\n            // \u4eca\u56de\u306a\u306b\u3082\u3059\u308b\u5fc5\u8981\u306a\u3057\n        }\n\n        public void EndTextBlock()\n        {\n            // \u4eca\u56de\u306a\u306b\u3082\u3059\u308b\u5fc5\u8981\u306a\u3057\n        }\n\n        public void RenderImage(iTextSharp.text.pdf.parser.ImageRenderInfo renderInfo)\n        {\n            var img = renderInfo.GetImage();\n            _list.Add(img);\n        }\n\n        public void RenderText(iTextSharp.text.pdf.parser.TextRenderInfo renderInfo)\n        {\n            // \u4eca\u56de\u306a\u306b\u3082\u3059\u308b\u5fc5\u8981\u306a\u3057\n        }\n    }\n}\n```\n\n#\u3054\u53c2\u8003\n- [How to extract images from PDF files using c# and itextsharp](https://psycodedeveloper.wordpress.com/2013/01/10/how-to-extract-images-from-pdf-files-using-c-and-itextsharp/) - [psyCodeDeveloper](https://psycodedeveloper.wordpress.com/) Thank you so much!\n", "tags": ["PDF", "PDF\u5909\u63db", "C#", ".NETFramework", ".NET"]}