{"context": " More than 1 year has passed since last update.\n\u3053\u306e\u8a18\u4e8b\u306fVASILY DEVELOPERS BLOG\u306b\u3082\u540c\u3058\u5185\u5bb9\u3067\u6295\u7a3f\u3057\u3066\u3044\u307e\u3059\u3002\u3088\u308d\u3057\u3051\u308c\u3070\u4ed6\u306e\u8a18\u4e8b\u3082\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u6700\u8fd1\u306eiQON\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3067\u3001\u30b3\u30fc\u30c7\u306e\u30bf\u30b0\u8868\u793a\u306eUI\u3092\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\u3053\u306e\u5909\u66f4\u3067\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u30c6\u30ad\u30b9\u30c8\u3067\u7121\u5236\u9650\u306b\u57cb\u3081\u8fbc\u3093\u3060\u30bf\u30b0\u3092\u9078\u629e\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u4f8b\u3048\u3070\u300c#\u30b9\u30cb\u30fc\u30ab\u30fc\u300d\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3068\u3001\u300c\u30b9\u30cb\u30fc\u30ab\u30fc\u300d\u30bf\u30b0\u304c\u4ed8\u3044\u305f\u30b3\u30fc\u30c7\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u4ed6\u306e\u30a2\u30d7\u30ea\u3067\u3082\u898b\u304b\u3051\u308bUI\u306a\u306e\u3067\u3001\u7c21\u5358\u306bUITextView\u3067\u5b9f\u88c5\u3067\u304d\u308b\u304b\u3068\u601d\u3063\u3066\u305f\u306e\u3067\u3059\u304c\u2026\n\u601d\u3044\u306e\u5916\u30cf\u30de\u3063\u305f\u306e\u3067\u3001\u4eca\u56de\u306e\u5b9f\u88c5\u3092\u5171\u6709\u3057\u307e\u3059\u3002\nUITextView\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3001\u4e0a\u8a18\u306e\u52d5\u304d\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n\u5b9f\u88c5\n\n1. UIGestureRecognizer\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u308b\niQON\u306e\u30b3\u30fc\u30c7\u306e\u30bf\u30b0\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3060\u3068\u3001\u30ea\u30f3\u30af\u6587\u5b57\u5217\u304c\u591a\u3044\u305f\u3081\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u596a\u3063\u3066\u3057\u307e\u3044\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u306b\u5931\u6557\u3059\u308b\u3053\u3068\u304c\u591a\u304f\u306a\u308a\u307e\u3059\u3002\n\nNSAttributedString\u306eNSLinkAttributeName\u306e\u6a5f\u80fd\u3067\u306f\u4e0a\u8a18\u306e\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u3001\u72ec\u81ea\u306e\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc TouchUpDownGestureRecognizer \u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u3053\u306eGestureRecognizer\u3092\u6b21\u306b\u8aac\u660e\u3059\u308bUITextView\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u9069\u7528\u3057\u307e\u3059\u3002\n\u3053\u306e\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u304cUITextView\u306b\u5bfe\u3059\u308b\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306e\u3001\u958b\u59cb\u3001\u7d42\u4e86\u3001\u79fb\u52d5\u3001\u30ad\u30e3\u30f3\u30bb\u30eb\u306e\u72b6\u614b\u3092\u6c7a\u3081\u307e\u3059\u3002\n\n1-1. \u89aaView\u306e\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u3068\u306e\u885d\u7a81\u3092\u56de\u907f\u3059\u308b\n\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u963b\u5bb3\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u306b\u306f UIGestureRecognizerSubclass \u306e\u4e0b\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002\n// TouchUpDownGestureRecognizer.swift\n\noverride func canPreventGestureRecognizer(preventedGestureRecognizer: UIGestureRecognizer) -> Bool {\n    if let _ = preventedGestureRecognizer.view as? UIScrollView {\n        // UIScrollView\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u512a\u5148\u3055\u305b\u308b\n        return false\n    }\n    return true\n}\n\n\n2. UITextView\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u81ea\u4f5c\u3057\u305f\u30b8\u30a7\u30b9\u30c1\u30e3\u3092\u53d7\u3051\u53d6\u308bUITextView\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306eLinkTextView\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n2-1. \u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u306e\u8a2d\u5b9a\nLinkTextView\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3067\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n// LinkTextView.swift\n\nrequired init?(coder aDecoder: NSCoder) {\n    super.init(coder: aDecoder)\n\n    ...\n\n    let recognizer = TouchUpDownGestureRecognizer(target: self, action: \"handleTouchUpDownGesture:\")\n    addGestureRecognizer(recognizer)\n}\n\nfunc handleTouchUpDownGesture(recognizer: TouchUpDownGestureRecognizer) {\n    switch recognizer.state {\n    case .Began:\n        // \u30c6\u30ad\u30b9\u30c8\u3092\u30cf\u30a4\u30e9\u30a4\u30c8\u3055\u305b\u308b\n        touchDownWithRecognizer(recognizer)\n    case .Changed:\n        break\n    case .Ended:\n        // \u30cf\u30a4\u30e9\u30a4\u30c8\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u623b\u3057\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u6e21\u3059\n        touchUpWithRecognizer(recognizer)\n    default:\n        // \u30cf\u30a4\u30e9\u30a4\u30c8\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u623b\u3059\n        touchCancelWithRecognizer(recognizer)\n    }\n}\n\n\n2-2. \u30bf\u30c3\u30d7\u3057\u305f\u6587\u5b57\u5217\u3092\u5224\u5225\u3059\u308b\n\u4e0b\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u30bf\u30c3\u30c1\u3057\u305f\u4f4d\u7f6e\u306e\u30ea\u30f3\u30af\u6587\u5b57\u5217\u306e\u4f4d\u7f6e\u3068\u9577\u3055\u3092NSRange\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n// LinkTextView.swift\n\n/**\n \u9078\u629e\u3057\u305f\u30ea\u30f3\u30af\u6587\u5b57\u5217\u306erange\u3092\u8fd4\u3059\n\n - parameter recognizer: \u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u30ec\u30b3\u30b0\u30ca\u30a4\u30b6\n\n - returns: \u30bf\u30c3\u30d7\u3057\u305f\u30ea\u30f3\u30af\u6587\u5b57\u5217\u306eNSRange\u3002\u30ea\u30f3\u30af\u51fa\u306a\u3044\u5834\u5408\u306fnil\n */\nprivate func selectedLinkRangeWithRecognizer(recognizer: TouchUpDownGestureRecognizer) -> NSRange? {\n    var location = recognizer.locationInView(self)\n    location.y -= textContainerInset.top    // \u30bf\u30c3\u30c1\u4f4d\u7f6e\u304ctextContainerInset\u306e\u5206\u3060\u3051\u30ba\u30ec\u308b\u306e\u3067\u8abf\u6574\n    location.x -= textContainerInset.left\n\n    let characterIndex = layoutManager.characterIndexForPoint(  // \u30bf\u30c3\u30c1\u3057\u305f\u4f4d\u7f6e\u306e\u6587\u5b57\u5217\u306e\u4f4d\u7f6e\n        location,\n        inTextContainer: textContainer,\n        fractionOfDistanceBetweenInsertionPoints: nil)\n\n    // \u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u3068\u5c5e\u6027\u306b\u8a72\u5f53\u3059\u308b\u30ea\u30f3\u30af\u6587\u5b57\u5217\u306eNSRange\u3092range\u306b\u683c\u7d0d\u3059\u308b\n    var range = NSMakeRange(0, 0)\n    let object = attributedText.attribute(\n        LinkTextView.LinkKey,\n        atIndex: characterIndex,\n        effectiveRange: &range)\n\n    return (object == nil) ? nil : range\n}\n\n\n\u30cf\u30de\u3063\u305f\u3053\u3068\n\n3D Touch \u5bfe\u5fdc\u7aef\u672b\u3067\u52d5\u304b\u306a\u304b\u3063\u305f\niPhone 6s \u3092\u8cfc\u5165\u3057\u3066\u52d5\u4f5c\u3092\u691c\u8a3c\u3059\u308b\u3068\u3001\u30ea\u30f3\u30af\u304c\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nXcode7\u306eiPhoen 6s\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u306f\u518d\u73fe\u3057\u306a\u3044\u305f\u3081\u3001\u304b\u306a\u308a\u7126\u308a\u307e\u3057\u305f\u304c\u3001\u539f\u56e0\u306f3D Touch\u306e\u4ed5\u7d44\u307f\u306b\u3088\u308b\u3082\u306e\u3067\u3057\u305f\u3002\nUIGestureRecogniezr\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u306f\u3001\u30bf\u30c3\u30c1\u306e\u5f37\u3055 (touch.force) \u306e\u5909\u5316\u3067\u3082 touchesMoved:withEvent: \u304c\u547c\u3070\u308c\u3066\u3057\u307e\u3046\u3088\u3046\u3067\u3059\u3002\n// TouchUpDownGestureRecognizer.swift\n\n// \u4fee\u6b63\u524d\noverride func touchesMoved(touches: Set<UITouch>, withEvent event: UIEvent) {\n    super.touchesMoved(touches, withEvent: event)\n\n    state = .Cancelled\n}\n\n// \u4fee\u6b63\u5f8c\noverride func touchesMoved(touches: Set<UITouch>, withEvent event: UIEvent) {\n    super.touchesMoved(touches, withEvent: event)\n\n    if let touch = touches.first {\n        let beforePoint = touch.previousLocationInView(view)\n        let afterPoint = touch.locationInView(view)\n        if !CGPointEqualToPoint(beforePoint, afterPoint) {\n            // \u30bf\u30c3\u30c1\u3057\u305f\u6307\u304c\u52d5\u3044\u305f\u3089\u30ad\u30e3\u30f3\u30bb\u30eb\n            // 3D Touch \u5bfe\u5fdc\u7aef\u672b\u3067\u306f touch.force \u306e\u5909\u5316\u3067\u3082 touchesMoved:withEvent: \u304c\u547c\u3070\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u53b3\u5bc6\u306btouch\u306e\u4f4d\u7f6e\u306e\u5909\u5316\u3092\u76e3\u8996\u3059\u308b\n            state = .Cancelled\n        }\n    }\n}\n\n\n\u3067\u304d\u3042\u304c\u3063\u305f\u3082\u306e\n\u3053\u3093\u306a\u611f\u3058\u3067\u52d5\u304d\u307e\u3059\u3002\n\n\n\u4f7f\u3044\u65b9\nLinkTextView\u306eattributedString\u306b\u30ea\u30f3\u30af\u6587\u5b57\u5217\u3092NSAttributedString\u3067\u6e21\u3057\u307e\u3059\u3002\n\u3053\u306e\u6642\u3001\u30ea\u30f3\u30af\u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b LinkTextView.LinkKey \u3068\u3044\u3046\u5c5e\u6027\u3092\u542b\u3081\u307e\u3059\u3002\n\u30bf\u30c3\u30d7\u6642\u306e\u51e6\u7406\u306f\u30af\u30ed\u30fc\u30b8\u30e3\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u8a2d\u5b9a\u3057\u3001\u30ea\u30f3\u30af\u6587\u5b57\u5217\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\u306e\u307f\u3001\u3053\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\nlet mutableAttributedString = NSMutableAttributedString(string: \"hello, world!\")\nlet attributes = [\n    NSForegroundColorAttributeName: UIColor.blueColor(),  // \u30ea\u30f3\u30af\u6587\u5b57\u5217\u306e\u8272\n    LinkTextView.LinkKey: \"linked\",                       // \u30ea\u30f3\u30af\u3068\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306e\u30ab\u30b9\u30bf\u30e0\u30ad\u30fc\n]\nmutableAttributedString.addAttributes(attributes, range: NSRange(0, 5))  // hello\u3092\u30ea\u30f3\u30af\u306b\u3059\u308b\n\nlet textView = LinkTextView()\ntextView.attributedText = mutableAttributedString\ntextView.linkClickedBlock = { (string: String) in\n    // \u30ea\u30f3\u30af\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\u6642\u306e\u51e6\u7406\n}\n\n\n\u307e\u3068\u3081\n\u6587\u7ae0\u306e\u4e2d\u306e\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u30ea\u30f3\u30af\u306b\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306e\u65b9\u6cd5\u3092\u4f7f\u3048\u3070\u3001UIScrollView\u306baddSubview\u3057\u3066\u3082\u30b9\u30af\u30ed\u30fc\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u59a8\u5bb3\u305b\u305a\u306b\u30ea\u30f3\u30af\u3092\u4f5c\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n3D Touch\u7aef\u672b\u306e\u554f\u984c\u3092\u30af\u30ea\u30a2\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u9006\u306b3D Touch\u306ePeek\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u5225\u306e\u5b9f\u88c5\u306b\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u7d30\u304b\u3044\u3068\u3053\u308d\u306f\u3044\u304f\u3064\u304b\u7701\u304d\u307e\u3057\u305f\u304c\u3001\u305d\u306e\u307e\u307e\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3057\u305f\u306e\u3067\u3001\u52d5\u304b\u3057\u306a\u304c\u3089\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/WorldDownTown/LinkTextView\n\n> _\u3053\u306e\u8a18\u4e8b\u306f[VASILY DEVELOPERS BLOG](http://tech.vasily.jp/ios_linktextview/)\u306b\u3082\u540c\u3058\u5185\u5bb9\u3067\u6295\u7a3f\u3057\u3066\u3044\u307e\u3059\u3002\u3088\u308d\u3057\u3051\u308c\u3070\u4ed6\u306e\u8a18\u4e8b\u3082\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002_\n\n\u6700\u8fd1\u306eiQON\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3067\u3001\u30b3\u30fc\u30c7\u306e\u30bf\u30b0\u8868\u793a\u306eUI\u3092\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\u3053\u306e\u5909\u66f4\u3067\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u30c6\u30ad\u30b9\u30c8\u3067\u7121\u5236\u9650\u306b\u57cb\u3081\u8fbc\u3093\u3060\u30bf\u30b0\u3092\u9078\u629e\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u4f8b\u3048\u3070\u300c#\u30b9\u30cb\u30fc\u30ab\u30fc\u300d\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3068\u3001\u300c\u30b9\u30cb\u30fc\u30ab\u30fc\u300d\u30bf\u30b0\u304c\u4ed8\u3044\u305f\u30b3\u30fc\u30c7\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n![iqon_tag.gif](https://media.giphy.com/media/xTiTni0yPXEC0QqJ5C/giphy.gif)\n\n\u4ed6\u306e\u30a2\u30d7\u30ea\u3067\u3082\u898b\u304b\u3051\u308bUI\u306a\u306e\u3067\u3001\u7c21\u5358\u306bUITextView\u3067\u5b9f\u88c5\u3067\u304d\u308b\u304b\u3068\u601d\u3063\u3066\u305f\u306e\u3067\u3059\u304c\u2026\n\u601d\u3044\u306e\u5916\u30cf\u30de\u3063\u305f\u306e\u3067\u3001\u4eca\u56de\u306e\u5b9f\u88c5\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n`UITextView`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3001\u4e0a\u8a18\u306e\u52d5\u304d\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n# \u5b9f\u88c5\n## 1. UIGestureRecognizer\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u308b\niQON\u306e\u30b3\u30fc\u30c7\u306e\u30bf\u30b0\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3060\u3068\u3001\u30ea\u30f3\u30af\u6587\u5b57\u5217\u304c\u591a\u3044\u305f\u3081\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u596a\u3063\u3066\u3057\u307e\u3044\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u306b\u5931\u6557\u3059\u308b\u3053\u3068\u304c\u591a\u304f\u306a\u308a\u307e\u3059\u3002\n\n![normal_text_view](https://media.giphy.com/media/xTiTny9mpsG7fMYriU/giphy.gif)\n\n\n`NSAttributedString`\u306e`NSLinkAttributeName`\u306e\u6a5f\u80fd\u3067\u306f\u4e0a\u8a18\u306e\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u3001\u72ec\u81ea\u306e\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc [TouchUpDownGestureRecognizer](https://github.com/WorldDownTown/LinkTextView/blob/master/LinkTextView/TouchUpDownGestureRecognizer.swift) \u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u3053\u306eGestureRecognizer\u3092\u6b21\u306b\u8aac\u660e\u3059\u308b`UITextView`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u9069\u7528\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u304cUITextView\u306b\u5bfe\u3059\u308b\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306e\u3001\u958b\u59cb\u3001\u7d42\u4e86\u3001\u79fb\u52d5\u3001\u30ad\u30e3\u30f3\u30bb\u30eb\u306e\u72b6\u614b\u3092\u6c7a\u3081\u307e\u3059\u3002\n\n### 1-1. \u89aaView\u306e\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u3068\u306e\u885d\u7a81\u3092\u56de\u907f\u3059\u308b\n\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u963b\u5bb3\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u306b\u306f `UIGestureRecognizerSubclass` \u306e\u4e0b\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002\n\n```swift\n// TouchUpDownGestureRecognizer.swift\n\noverride func canPreventGestureRecognizer(preventedGestureRecognizer: UIGestureRecognizer) -> Bool {\n    if let _ = preventedGestureRecognizer.view as? UIScrollView {\n        // UIScrollView\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u512a\u5148\u3055\u305b\u308b\n        return false\n    }\n    return true\n}\n```\n\n## 2. UITextView\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u81ea\u4f5c\u3057\u305f\u30b8\u30a7\u30b9\u30c1\u30e3\u3092\u53d7\u3051\u53d6\u308b`UITextView`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e`LinkTextView`\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n### 2-1. \u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u306e\u8a2d\u5b9a\nLinkTextView\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3067\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```swift\n// LinkTextView.swift\n\nrequired init?(coder aDecoder: NSCoder) {\n    super.init(coder: aDecoder)\n\n    ...\n\n    let recognizer = TouchUpDownGestureRecognizer(target: self, action: \"handleTouchUpDownGesture:\")\n    addGestureRecognizer(recognizer)\n}\n\nfunc handleTouchUpDownGesture(recognizer: TouchUpDownGestureRecognizer) {\n    switch recognizer.state {\n    case .Began:\n        // \u30c6\u30ad\u30b9\u30c8\u3092\u30cf\u30a4\u30e9\u30a4\u30c8\u3055\u305b\u308b\n        touchDownWithRecognizer(recognizer)\n    case .Changed:\n        break\n    case .Ended:\n        // \u30cf\u30a4\u30e9\u30a4\u30c8\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u623b\u3057\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u6e21\u3059\n        touchUpWithRecognizer(recognizer)\n    default:\n        // \u30cf\u30a4\u30e9\u30a4\u30c8\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u623b\u3059\n        touchCancelWithRecognizer(recognizer)\n    }\n}\n```\n\n### 2-2. \u30bf\u30c3\u30d7\u3057\u305f\u6587\u5b57\u5217\u3092\u5224\u5225\u3059\u308b\n\n\u4e0b\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u30bf\u30c3\u30c1\u3057\u305f\u4f4d\u7f6e\u306e\u30ea\u30f3\u30af\u6587\u5b57\u5217\u306e\u4f4d\u7f6e\u3068\u9577\u3055\u3092NSRange\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n```swift\n// LinkTextView.swift\n\n/**\n \u9078\u629e\u3057\u305f\u30ea\u30f3\u30af\u6587\u5b57\u5217\u306erange\u3092\u8fd4\u3059\n\n - parameter recognizer: \u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u30ec\u30b3\u30b0\u30ca\u30a4\u30b6\n\n - returns: \u30bf\u30c3\u30d7\u3057\u305f\u30ea\u30f3\u30af\u6587\u5b57\u5217\u306eNSRange\u3002\u30ea\u30f3\u30af\u51fa\u306a\u3044\u5834\u5408\u306fnil\n */\nprivate func selectedLinkRangeWithRecognizer(recognizer: TouchUpDownGestureRecognizer) -> NSRange? {\n    var location = recognizer.locationInView(self)\n    location.y -= textContainerInset.top    // \u30bf\u30c3\u30c1\u4f4d\u7f6e\u304ctextContainerInset\u306e\u5206\u3060\u3051\u30ba\u30ec\u308b\u306e\u3067\u8abf\u6574\n    location.x -= textContainerInset.left\n\n    let characterIndex = layoutManager.characterIndexForPoint(  // \u30bf\u30c3\u30c1\u3057\u305f\u4f4d\u7f6e\u306e\u6587\u5b57\u5217\u306e\u4f4d\u7f6e\n        location,\n        inTextContainer: textContainer,\n        fractionOfDistanceBetweenInsertionPoints: nil)\n\n    // \u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u3068\u5c5e\u6027\u306b\u8a72\u5f53\u3059\u308b\u30ea\u30f3\u30af\u6587\u5b57\u5217\u306eNSRange\u3092range\u306b\u683c\u7d0d\u3059\u308b\n    var range = NSMakeRange(0, 0)\n    let object = attributedText.attribute(\n        LinkTextView.LinkKey,\n        atIndex: characterIndex,\n        effectiveRange: &range)\n\n    return (object == nil) ? nil : range\n}\n```\n\n## \u30cf\u30de\u3063\u305f\u3053\u3068\n### 3D Touch \u5bfe\u5fdc\u7aef\u672b\u3067\u52d5\u304b\u306a\u304b\u3063\u305f\niPhone 6s \u3092\u8cfc\u5165\u3057\u3066\u52d5\u4f5c\u3092\u691c\u8a3c\u3059\u308b\u3068\u3001\u30ea\u30f3\u30af\u304c\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nXcode7\u306eiPhoen 6s\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u306f\u518d\u73fe\u3057\u306a\u3044\u305f\u3081\u3001\u304b\u306a\u308a\u7126\u308a\u307e\u3057\u305f\u304c\u3001\u539f\u56e0\u306f3D Touch\u306e\u4ed5\u7d44\u307f\u306b\u3088\u308b\u3082\u306e\u3067\u3057\u305f\u3002\nUIGestureRecogniezr\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u306f\u3001\u30bf\u30c3\u30c1\u306e\u5f37\u3055 (`touch.force`) \u306e\u5909\u5316\u3067\u3082 `touchesMoved:withEvent:` \u304c\u547c\u3070\u308c\u3066\u3057\u307e\u3046\u3088\u3046\u3067\u3059\u3002\n\n```swift\n// TouchUpDownGestureRecognizer.swift\n\n// \u4fee\u6b63\u524d\noverride func touchesMoved(touches: Set<UITouch>, withEvent event: UIEvent) {\n    super.touchesMoved(touches, withEvent: event)\n\n    state = .Cancelled\n}\n\n// \u4fee\u6b63\u5f8c\noverride func touchesMoved(touches: Set<UITouch>, withEvent event: UIEvent) {\n    super.touchesMoved(touches, withEvent: event)\n\n    if let touch = touches.first {\n        let beforePoint = touch.previousLocationInView(view)\n        let afterPoint = touch.locationInView(view)\n        if !CGPointEqualToPoint(beforePoint, afterPoint) {\n            // \u30bf\u30c3\u30c1\u3057\u305f\u6307\u304c\u52d5\u3044\u305f\u3089\u30ad\u30e3\u30f3\u30bb\u30eb\n            // 3D Touch \u5bfe\u5fdc\u7aef\u672b\u3067\u306f touch.force \u306e\u5909\u5316\u3067\u3082 touchesMoved:withEvent: \u304c\u547c\u3070\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u53b3\u5bc6\u306btouch\u306e\u4f4d\u7f6e\u306e\u5909\u5316\u3092\u76e3\u8996\u3059\u308b\n            state = .Cancelled\n        }\n    }\n}\n```\n\n\n# \u3067\u304d\u3042\u304c\u3063\u305f\u3082\u306e\n\u3053\u3093\u306a\u611f\u3058\u3067\u52d5\u304d\u307e\u3059\u3002\n\n![link_text_view](https://media.giphy.com/media/3o85xxdmTz3hbmkRkQ/giphy.gif)\n\n## \u4f7f\u3044\u65b9\n`LinkTextView`\u306eattributedString\u306b\u30ea\u30f3\u30af\u6587\u5b57\u5217\u3092NSAttributedString\u3067\u6e21\u3057\u307e\u3059\u3002\n\u3053\u306e\u6642\u3001\u30ea\u30f3\u30af\u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b `LinkTextView.LinkKey` \u3068\u3044\u3046\u5c5e\u6027\u3092\u542b\u3081\u307e\u3059\u3002\n\u30bf\u30c3\u30d7\u6642\u306e\u51e6\u7406\u306f\u30af\u30ed\u30fc\u30b8\u30e3\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u8a2d\u5b9a\u3057\u3001\u30ea\u30f3\u30af\u6587\u5b57\u5217\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\u306e\u307f\u3001\u3053\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\n```swift\nlet mutableAttributedString = NSMutableAttributedString(string: \"hello, world!\")\nlet attributes = [\n    NSForegroundColorAttributeName: UIColor.blueColor(),  // \u30ea\u30f3\u30af\u6587\u5b57\u5217\u306e\u8272\n    LinkTextView.LinkKey: \"linked\",                       // \u30ea\u30f3\u30af\u3068\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306e\u30ab\u30b9\u30bf\u30e0\u30ad\u30fc\n]\nmutableAttributedString.addAttributes(attributes, range: NSRange(0, 5))  // hello\u3092\u30ea\u30f3\u30af\u306b\u3059\u308b\n\nlet textView = LinkTextView()\ntextView.attributedText = mutableAttributedString\ntextView.linkClickedBlock = { (string: String) in\n    // \u30ea\u30f3\u30af\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\u6642\u306e\u51e6\u7406\n}\n```\n\n\n# \u307e\u3068\u3081\n\u6587\u7ae0\u306e\u4e2d\u306e\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u30ea\u30f3\u30af\u306b\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306e\u65b9\u6cd5\u3092\u4f7f\u3048\u3070\u3001UIScrollView\u306baddSubview\u3057\u3066\u3082\u30b9\u30af\u30ed\u30fc\u30eb\u30a4\u30d9\u30f3\u30c8\u3092\u59a8\u5bb3\u305b\u305a\u306b\u30ea\u30f3\u30af\u3092\u4f5c\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n3D Touch\u7aef\u672b\u306e\u554f\u984c\u3092\u30af\u30ea\u30a2\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u9006\u306b3D Touch\u306ePeek\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u5225\u306e\u5b9f\u88c5\u306b\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u7d30\u304b\u3044\u3068\u3053\u308d\u306f\u3044\u304f\u3064\u304b\u7701\u304d\u307e\u3057\u305f\u304c\u3001\u305d\u306e\u307e\u307e\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3057\u305f\u306e\u3067\u3001\u52d5\u304b\u3057\u306a\u304c\u3089\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/WorldDownTown/LinkTextView\n", "tags": ["Swift", "UITextView", "iOS"]}