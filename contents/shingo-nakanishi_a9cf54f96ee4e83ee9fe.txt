{"context": " More than 1 year has passed since last update.inverse_of\u3067\u89e3\u6c7a\u3067\u304d\u308b\n\u3044\u3084 (\u8ffd\u8a18)rejet_if\u306e\u53ef\u80fd\u6027\u306e\u65b9\u304c\u5927\u304d\u3044\u304b\u3082\nRails - accepts_nested_attributes_for \u3092\u4f7f\u3063\u305f\u5165\u308c\u5b50\u306eform\u304c\u7f60\u3060\u3089\u3051\u306a\u6c17\u304c\u3059\u308b - Qiita\n\n\u53c2\u8003URL\u3068\u305d\u306e\u91cd\u8981\u90e8\u5206\u3092\u5f15\u7528\u3059\u308b\uff08\u6700\u3082\u91cd\u8981\u3067\u3042\u308b\u56de\u7b54\u306e\u30bd\u30fc\u30b9\u306fSO\u3092\u898b\u3066\u3082\u3089\u3048\u3070\u3088\u3044\u3068\u601d\u3046\u306e\u3067\u5f15\u7528\u3057\u306a\u3044\uff09\nruby on rails - Trouble with accepts_nested_attributes_for on validating foreign key - Stack Overflow\n can't be blank while using accepts_nested_attributes_for (Rails 4) - Stack Overflow\n\nTry removing contact_id to test if it will accept or not. If it does accept, it means you're not passing the contact_id through your params to the model\n\naccepts_nested_attributes_for with Has-Many-Through Relations\n\nIt seemed Rails was not setting the notice attribute on the EntityRole before attempting to save it, triggering the validation errors. This is a bit surprising as other has_many relations (omitted in this blog post) should have the same save mechanics and were working just fine.\n\n\n\nWhen you use collection= assignment with a has-many-through (as accepts_nested_attributes_for does), you have to specify inverse_of for Rails to save everything correctly.\n\n**`inverse_of`\u3067\u89e3\u6c7a\u3067\u304d\u308b**\n\u3044\u3084 **(\u8ffd\u8a18)rejet_if\u306e\u53ef\u80fd\u6027\u306e\u65b9\u304c\u5927\u304d\u3044\u304b\u3082**\n[Rails - accepts_nested_attributes_for \u3092\u4f7f\u3063\u305f\u5165\u308c\u5b50\u306eform\u304c\u7f60\u3060\u3089\u3051\u306a\u6c17\u304c\u3059\u308b - Qiita](http://qiita.com/shingo-nakanishi/items/229ae20bc1ddf7192dfb)\n\n## \u53c2\u8003URL\u3068\u305d\u306e\u91cd\u8981\u90e8\u5206\u3092\u5f15\u7528\u3059\u308b<br />\uff08\u6700\u3082\u91cd\u8981\u3067\u3042\u308b\u56de\u7b54\u306e\u30bd\u30fc\u30b9\u306fSO\u3092\u898b\u3066\u3082\u3089\u3048\u3070\u3088\u3044\u3068\u601d\u3046\u306e\u3067\u5f15\u7528\u3057\u306a\u3044\uff09\n[ruby on rails - Trouble with accepts_nested_attributes_for on validating foreign key - Stack Overflow](http://stackoverflow.com/questions/13344059/trouble-with-accepts-nested-attributes-for-on-validating-foreign-key/16793929#16793929)\n\n[<Child's Parent> can't be blank while using accepts_nested_attributes_for (Rails 4) - Stack Overflow](http://stackoverflow.com/questions/23463912/childs-parent-cant-be-blank-while-using-accepts-nested-attributes-for-rails/23467124#23467124)\n\n> Try removing contact_id to test if it will accept or not. If it does accept, it means you're not passing the contact_id through your params to the model\n\n[accepts_nested_attributes_for with Has-Many-Through Relations](https://robots.thoughtbot.com/accepts-nested-attributes-for-with-has-many-through)\n\n> It seemed Rails was not setting the notice attribute on the EntityRole before attempting to save it, triggering the validation errors. This is a bit surprising as other has_many relations (omitted in this blog post) should have the same save mechanics and were working just fine.\n\n<br />\n> When you use collection= assignment with a has-many-through (as accepts_nested_attributes_for does), you have to specify inverse_of for Rails to save everything correctly.\n\n", "tags": ["Rails", "DB"]}