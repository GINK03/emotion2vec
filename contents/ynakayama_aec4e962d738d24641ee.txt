{"tags": ["matplotlib", "Python"], "context": " More than 1 year has passed since last update.\u6628\u65e5\u306b\u5f15\u304d\u7d9a\u304d matplotlib \u306e\u6a5f\u80fd\u3092\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u8272\u3001\u30de\u30fc\u30ab\u30fc\u3001\u7dda\u7a2e\nimport numpy as np\nfrom pandas import *\nfrom pylab import *\nimport matplotlib.pyplot as plt\nfrom matplotlib import font_manager\nfrom numpy.random import randn\n\nprop = matplotlib.font_manager.FontProperties(fname=\"/usr/share/fonts/truetype/fonts-japanese-gothic.ttf\")\n\nr = randn(30).cumsum()\n\n# \u8272\u3001\u7dda\u7a2e\u3001\u30de\u30fc\u30ab\u30fc\u3092\u6307\u5b9a\u3059\u308b\n# \u9ed2\u3001\u7834\u7dda\u3001\u30de\u30fc\u30ab\u30fc\u306f o\nplt.plot(r, color='k', linestyle='dashed', marker='o')\n\nplt.show()\nplt.savefig(\"image.png\")\n\n\n\u6298\u308c\u7dda\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u76f4\u7dda\u3067\u7d50\u3070\u308c\u307e\u3059\u3002 drawstyle \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3053\u308c\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n# RGB \u5024\u3092\u660e\u793a\nplt.plot(r, color='#ff0000', linestyle='dashed', marker='o', label='dashed')\n# drawstyle \u3092\u5909\u66f4\nplt.plot(r, color='#0000ff', drawstyle='steps-post', label='steps-post')\n# \u51e1\u4f8b\u3092\u4ed8\u3051\u308b\nplt.legend(loc='best')\n\nplt.show()\nplt.savefig(\"image2.png\")\n\n\n\n\u76ee\u76db\u308a\u3001\u30e9\u30d9\u30eb\nplt.xlim() \u3084 plt.xticks() \u306f\u5f15\u6570\u3092\u4e0e\u3048\u305a\u306b\u547c\u3076\u3068\u73fe\u5728\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3053\u308c\u306b\u5024\u3092\u5f15\u6570\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n# \u5f15\u6570\u3092\u4e0e\u3048\u305a\u306b\u73fe\u5728\u5024\u3092\u78ba\u8a8d\u3059\u308b\nprint( plt.xlim() )\n# => (0.0, 30.0)\nprint( plt.xticks() )\n# => (array([  0.,   5.,  10.,  15.,  20.,  25.,  30.]), <a list of 7 Text xticklabel objects>)\n\n# \u65b0\u3057\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b\nplt.xlim([0, 40])\nplt.xticks([0,4,8,12,16,20,24,28,32,36,40])\n\nprint( plt.ylim() )\n# => (-7.0, 3.0)\nprint( plt.yticks() )\n# => (array([-8., -6., -4., -2.,  0.,  2.,  4.]), <a list of 7 Text yticklabel objects>)\n\nplt.ylim([-10, 10])\nplt.yticks([-10,-8,-6,-4,-2,0,2,4,6,8,10])\n\nplt.show()\nplt.savefig(\"image3.png\")\n\n\n\n\u8ef8\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n\u6b21\u306e\u3088\u3046\u306a\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\u306e\u30d7\u30ed\u30c3\u30c8\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\nfig = plt.figure()\nax = fig.add_subplot(1,1,1)\n\nr = randn(1000).cumsum()\nax.plot(r)\n\nplt.show()\nplt.savefig(\"image4.png\")\n\n\n\u3053\u308c\u306e\u76ee\u76db\u308a\u3001\u30e9\u30d9\u30eb\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u307f\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070 X \u8ef8\u306b\u3064\u3044\u3066\u306f 250 \u3054\u3068\u306b\u30e9\u30f3\u30af\u3092\u5206\u3051\u3001\u6587\u5b57\u306f 30 \u5ea6\u50be\u3051\u3001\u65e5\u672c\u8a9e\u3067\u8868\u793a\u3059\u308b\u3068\u3044\u3063\u305f\u3068\u3053\u308d\u3067\u3059\u3002\nax.set_xticks([0, 250, 500, 750, 1000])\nax.set_xticklabels(['A', 'B', 'C', 'D', 'E'], rotation=30, fontsize='small')\nax.set_title('\u30c6\u30b9\u30c8\u306e matplotlib plot \u3067\u3059', fontproperties=prop)\nax.set_xlabel('\u30e9\u30f3\u30af', fontproperties=prop)\n\nplt.show()\nplt.savefig(\"image5.png\")\n\n\n\n\u51e1\u4f8b\u306e\u8ffd\u52a0\n\u30d7\u30ed\u30c3\u30c8\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u8b58\u5225\u306b\u304a\u3044\u3066\u7c21\u5358\u306a\u65b9\u6cd5\u306f\u30e9\u30d9\u30eb\u3092\u6307\u5b9a\u3057\u51e1\u4f8b\u3067\u8868\u793a\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u30c7\u30fc\u30bf\u3054\u3068\u306b\u8272\u3084\u7dda\u7a2e\u3092\u5206\u3051\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002\nfig = plt.figure()\nax = fig.add_subplot(1,1,1)\n\ndef randn1000():\n    return randn(1000).cumsum()\n\nax.plot(randn1000(), 'k', label='one')\nax.plot(randn1000(), 'b--', label='two')\nax.plot(randn1000(), 'r.', label='three')\nax.plot(randn1000(), 'g+', label='four')\nax.plot(randn1000(), 'b*', label='five')\n\nplt.ylim([-100, 100])\n\nax.legend(loc='best')\n\nplt.show()\nplt.savefig(\"image6.png\")\n\n\n\n\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\nplt.savefig() \u306e\u3068\u304d\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n\u5f15\u6570\n\u8aac\u660e\n\n\n\n\nfname\n\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u542b\u3080\u6587\u5b57\u5217\u304b Python \u306e\u30d5\u30a1\u30a4\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u5f62\u5f0f\u306f\u62e1\u5f35\u5b50\u304b\u3089\u81ea\u52d5\u5224\u5b9a\u3055\u308c\u308b\u3002\n\n\ndpi\n1 \u30a4\u30f3\u30c1\u3042\u305f\u308a\u306e\u30c9\u30c3\u30c8\u6570\u3067\u3042\u308a\u56f3\u306e\u89e3\u50cf\u5ea6\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 100 \u3002\n\n\nfacecolor,edgecolor\n\u30b5\u30d6\u30d7\u30ed\u30c3\u30c8\u5916\u5074\u306e\u80cc\u666f\u8272\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f w (\u767d) \u3002\n\n\nformat\n\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u305f\u3044\u3068\u304d\u306b\u3002 png, pdf \u306a\u3069\u3002\n\n\nbbox_inches\n\u56f3\u4e2d\u306e\u4fdd\u5b58\u3059\u308b\u90e8\u5206\u306e\u6307\u5b9a\u3002 tight \u3092\u6307\u5b9a\u3059\u308b\u3068\u56f3\u306e\u5468\u308a\u306e\u7a7a\u767d\u9818\u57df\u3092\u9664\u53bb\u3059\u308b\u3002\n\n\n\n\u4eca\u56de\u306f\u307e\u3060 pandas \u306f\u767b\u5834\u3057\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u3001\u3053\u3053\u307e\u3067\u306f\u7d14\u7c8b\u306b matplotlib \u306e\u8a71\u3068\u306a\u308a\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u3001 pandas \u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30d7\u30ed\u30c3\u30c8\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u53c2\u8003\nMatplotlib \u5229\u7528\u30ce\u30fc\u30c8\nhttp://www.geocities.jp/showa_yojyo/note/python-matplotlib.html\nPython\u306b\u3088\u308b\u30c7\u30fc\u30bf\u5206\u6790\u5165\u9580\u2015\u2015NumPy\u3001pandas\u3092\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u51e6\u7406\nhttp://www.oreilly.co.jp/books/9784873116556/\n[\u6628\u65e5](http://qiita.com/ynakayama/items/8d3b1f7356da5bcbe9bc)\u306b\u5f15\u304d\u7d9a\u304d matplotlib \u306e\u6a5f\u80fd\u3092\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u8272\u3001\u30de\u30fc\u30ab\u30fc\u3001\u7dda\u7a2e\n\n```py3\nimport numpy as np\nfrom pandas import *\nfrom pylab import *\nimport matplotlib.pyplot as plt\nfrom matplotlib import font_manager\nfrom numpy.random import randn\n\nprop = matplotlib.font_manager.FontProperties(fname=\"/usr/share/fonts/truetype/fonts-japanese-gothic.ttf\")\n\nr = randn(30).cumsum()\n\n# \u8272\u3001\u7dda\u7a2e\u3001\u30de\u30fc\u30ab\u30fc\u3092\u6307\u5b9a\u3059\u308b\n# \u9ed2\u3001\u7834\u7dda\u3001\u30de\u30fc\u30ab\u30fc\u306f o\nplt.plot(r, color='k', linestyle='dashed', marker='o')\n\nplt.show()\nplt.savefig(\"image.png\")\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/38501/f3ce2849-13ae-a10d-1ab9-d17a89b38203.png)\n\n\u6298\u308c\u7dda\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u76f4\u7dda\u3067\u7d50\u3070\u308c\u307e\u3059\u3002 drawstyle \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3053\u308c\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\n```py3\n# RGB \u5024\u3092\u660e\u793a\nplt.plot(r, color='#ff0000', linestyle='dashed', marker='o', label='dashed')\n# drawstyle \u3092\u5909\u66f4\nplt.plot(r, color='#0000ff', drawstyle='steps-post', label='steps-post')\n# \u51e1\u4f8b\u3092\u4ed8\u3051\u308b\nplt.legend(loc='best')\n\nplt.show()\nplt.savefig(\"image2.png\")\n```\n\n![image2.png](https://qiita-image-store.s3.amazonaws.com/0/38501/1edf5039-70a7-07ec-e289-e60bc1dc5938.png)\n\n## \u76ee\u76db\u308a\u3001\u30e9\u30d9\u30eb\n\nplt.xlim() \u3084 plt.xticks() \u306f\u5f15\u6570\u3092\u4e0e\u3048\u305a\u306b\u547c\u3076\u3068\u73fe\u5728\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3053\u308c\u306b\u5024\u3092\u5f15\u6570\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```py3\n# \u5f15\u6570\u3092\u4e0e\u3048\u305a\u306b\u73fe\u5728\u5024\u3092\u78ba\u8a8d\u3059\u308b\nprint( plt.xlim() )\n# => (0.0, 30.0)\nprint( plt.xticks() )\n# => (array([  0.,   5.,  10.,  15.,  20.,  25.,  30.]), <a list of 7 Text xticklabel objects>)\n\n# \u65b0\u3057\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b\nplt.xlim([0, 40])\nplt.xticks([0,4,8,12,16,20,24,28,32,36,40])\n\nprint( plt.ylim() )\n# => (-7.0, 3.0)\nprint( plt.yticks() )\n# => (array([-8., -6., -4., -2.,  0.,  2.,  4.]), <a list of 7 Text yticklabel objects>)\n\nplt.ylim([-10, 10])\nplt.yticks([-10,-8,-6,-4,-2,0,2,4,6,8,10])\n\nplt.show()\nplt.savefig(\"image3.png\")\n```\n\n![image3.png](https://qiita-image-store.s3.amazonaws.com/0/38501/19ef0770-a2d1-b9ad-bf39-2b044005fddb.png)\n\n## \u8ef8\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n\n\u6b21\u306e\u3088\u3046\u306a\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\u306e\u30d7\u30ed\u30c3\u30c8\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\n```py3\nfig = plt.figure()\nax = fig.add_subplot(1,1,1)\n\nr = randn(1000).cumsum()\nax.plot(r)\n\nplt.show()\nplt.savefig(\"image4.png\")\n```\n\n![image4.png](https://qiita-image-store.s3.amazonaws.com/0/38501/dda867dc-4936-c53c-3ec8-74c78dee7872.png)\n\n\u3053\u308c\u306e\u76ee\u76db\u308a\u3001\u30e9\u30d9\u30eb\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u307f\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070 X \u8ef8\u306b\u3064\u3044\u3066\u306f 250 \u3054\u3068\u306b\u30e9\u30f3\u30af\u3092\u5206\u3051\u3001\u6587\u5b57\u306f 30 \u5ea6\u50be\u3051\u3001\u65e5\u672c\u8a9e\u3067\u8868\u793a\u3059\u308b\u3068\u3044\u3063\u305f\u3068\u3053\u308d\u3067\u3059\u3002\n\n```py3\nax.set_xticks([0, 250, 500, 750, 1000])\nax.set_xticklabels(['A', 'B', 'C', 'D', 'E'], rotation=30, fontsize='small')\nax.set_title('\u30c6\u30b9\u30c8\u306e matplotlib plot \u3067\u3059', fontproperties=prop)\nax.set_xlabel('\u30e9\u30f3\u30af', fontproperties=prop)\n\nplt.show()\nplt.savefig(\"image5.png\")\n```\n\n![image5.png](https://qiita-image-store.s3.amazonaws.com/0/38501/0c921720-6dd6-b830-c61d-200b427e5c16.png)\n\n## \u51e1\u4f8b\u306e\u8ffd\u52a0\n\n\u30d7\u30ed\u30c3\u30c8\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u8b58\u5225\u306b\u304a\u3044\u3066\u7c21\u5358\u306a\u65b9\u6cd5\u306f\u30e9\u30d9\u30eb\u3092\u6307\u5b9a\u3057\u51e1\u4f8b\u3067\u8868\u793a\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u30c7\u30fc\u30bf\u3054\u3068\u306b\u8272\u3084\u7dda\u7a2e\u3092\u5206\u3051\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002\n\n```py3\nfig = plt.figure()\nax = fig.add_subplot(1,1,1)\n\ndef randn1000():\n    return randn(1000).cumsum()\n\nax.plot(randn1000(), 'k', label='one')\nax.plot(randn1000(), 'b--', label='two')\nax.plot(randn1000(), 'r.', label='three')\nax.plot(randn1000(), 'g+', label='four')\nax.plot(randn1000(), 'b*', label='five')\n\nplt.ylim([-100, 100])\n\nax.legend(loc='best')\n\nplt.show()\nplt.savefig(\"image6.png\")\n```\n\n![image6.png](https://qiita-image-store.s3.amazonaws.com/0/38501/69f01d24-272e-0a92-8666-83fb3431e479.png)\n\n## \u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\n\nplt.savefig() \u306e\u3068\u304d\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n|\u5f15\u6570|\u8aac\u660e|\n|:--|:--|\n|fname|\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u542b\u3080\u6587\u5b57\u5217\u304b Python \u306e\u30d5\u30a1\u30a4\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u5f62\u5f0f\u306f\u62e1\u5f35\u5b50\u304b\u3089\u81ea\u52d5\u5224\u5b9a\u3055\u308c\u308b\u3002|\n|dpi|1 \u30a4\u30f3\u30c1\u3042\u305f\u308a\u306e\u30c9\u30c3\u30c8\u6570\u3067\u3042\u308a\u56f3\u306e\u89e3\u50cf\u5ea6\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 100 \u3002|\n|facecolor,edgecolor|\u30b5\u30d6\u30d7\u30ed\u30c3\u30c8\u5916\u5074\u306e\u80cc\u666f\u8272\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f w (\u767d) \u3002|\n|format|\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u305f\u3044\u3068\u304d\u306b\u3002 png, pdf \u306a\u3069\u3002|\n|bbox_inches|\u56f3\u4e2d\u306e\u4fdd\u5b58\u3059\u308b\u90e8\u5206\u306e\u6307\u5b9a\u3002 tight \u3092\u6307\u5b9a\u3059\u308b\u3068\u56f3\u306e\u5468\u308a\u306e\u7a7a\u767d\u9818\u57df\u3092\u9664\u53bb\u3059\u308b\u3002|\n\n\u4eca\u56de\u306f\u307e\u3060 pandas \u306f\u767b\u5834\u3057\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u3001\u3053\u3053\u307e\u3067\u306f\u7d14\u7c8b\u306b matplotlib \u306e\u8a71\u3068\u306a\u308a\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u3001 pandas \u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30d7\u30ed\u30c3\u30c8\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u53c2\u8003\n\nMatplotlib \u5229\u7528\u30ce\u30fc\u30c8\nhttp://www.geocities.jp/showa_yojyo/note/python-matplotlib.html\n\nPython\u306b\u3088\u308b\u30c7\u30fc\u30bf\u5206\u6790\u5165\u9580\u2015\u2015NumPy\u3001pandas\u3092\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u51e6\u7406\nhttp://www.oreilly.co.jp/books/9784873116556/\n"}