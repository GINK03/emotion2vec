{"context": " More than 1 year has passed since last update.\u30de\u30c3\u30c1\u30e3\u30fc\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af for Objective-C/Cocoa\nExpecta\u306fGithub\u306e\u30e1\u30f3\u30d0\u30fc\u304c\u4f5c\u3063\u305f\u30de\u30c3\u30c1\u30e3\u30fc\u3067\u3059\u3002BDD\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bSpecta\uff08\u3053\u308c\u3082Github\u88fd\uff09\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3059\u308b\u3068\u3001\u624b\u8efd\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u307e\u3059\u3002\u7279\u306b\u975e\u540c\u671f\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u3084\u3059\u3055\u306f\u79c0\u9038\u3067\u3059\u3002\u662f\u975e\u7686\u3055\u3093\u3082\u4e00\u5ea6\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u79c1\u304cspecta/expecta\u304b\u3089\u3001\u81ea\u5206\u304c\u5fc5\u8981\u3068\u3059\u308b\u90e8\u5206\u306e\u307f\u3092\u629c\u7c8b\u3057\u3066\u7ffb\u8a33\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\u7ffb\u8a33\u306b\u81ea\u4fe1\u304c\u306a\u3044\u90e8\u5206\u306f\u305d\u306e\u307e\u307e\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nCocoaPods\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\ntarget :MyApp do\n  # your app dependencies\nend\n\ntarget :MyAppTests do\n  pod 'Expecta',     '~> 0.2.3'   # expecta matchers\n  # pod 'Specta',      '~> 0.1.11'  # specta bdd framework\nend\n\n\u4f7f\u7528\u6e96\u5099\n// #define EXP_OLD_SYNTAX // enable backward-compatibility\n#define EXP_SHORTHAND\n#import \"Expecta.h\"\n\n\n\u3082\u3057EXP_SHORTHAND\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001expect\u306e\u4ee3\u308f\u308a\u306bEXP_expect\u3067\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nExpecta\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u4f9d\u5b58\u3057\u307e\u305b\u3093\u3002\nSpecta\u3084GHUnit\u3001GTMUnit\u306a\u3069\u306eOCUnit\uff08SenTestingKit\uff09\u3084OCUnit\u30b3\u30f3\u30d1\u30c1\u30d6\u30eb\u306a\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u7d44\u8fbc\u6e08\u307f\u306e\u30de\u30c3\u30c1\u30e3\u30fc\n\n\n\n\u8a18\u8ff0\n\u8aac\u660e\n\n\n\n\nexpect(x).to.equal(y);\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u307e\u305f\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6x\u3068y\u3092\u6bd4\u8f03\u3057\u3001\u305d\u308c\u3089\u304c\u540c\u4e00\uff08==\uff09\u307e\u305f\u306f\u540c\u7b49\uff08isEqual:\uff09\u3067\u3042\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beIdenticalTo(y);\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8x\u3068y\u3092\u6bd4\u8f03\u3057\u3001\u305d\u308c\u3089\u304c\u540c\u4e00\u3067\u3001\u540c\u4e00\u306e\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9\u3092\u6301\u3063\u3066\u3044\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beNil();\n\nx \u304cnil\u306a\u3089\u5408\u683c\n\n\nexpect(x).to.beTruthy();\n\nx\u304ctrue\uff08non-zero\uff09\u3068\u8a55\u4fa1\u3055\u308c\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beFalsy();\n\nx\u304cfalse\uff08zero\uff09\u3068\u8a55\u4fa1\u3055\u308c\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.contain(y);\nNSArray\u307e\u305f\u306fNSString\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9x\u304cy\u3092\u542b\u3080\u306a\u3089\u5408\u683c\n\n\nexpect(x).to.beSupersetOf(y);\nNSArray\u3001NSSet\u3001NSDictionary \u307e\u305f\u306f NSOrderedSet\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9x\u304cy\u306e\u5168\u3066\u306e\u8981\u7d20\u3092\u542b\u3080\u306a\u3089\u5408\u683c\n\n\nexpect(x).to.haveCountOf(y);\nNSArray\u3001NSSet\u3001NSDictionary\u307e\u305f\u306fNSStringx\u304cy\u306e\u6570\u307e\u305f\u306f\u9577\u3055\u3067\u3042\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beEmpty();\nNSArray\u3001NSSet\u3001NSDictionary\u307e\u305f\u306fNSStringx\u304c0\u306e\u6570\u307e\u305f\u306f\u9577\u3055\u3067\u3042\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beInstanceOf([Foo class]);\n\nx\u304c\u30af\u30e9\u30b9Foo\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beKindOf([Foo class]);\n\nx\u304c\u30af\u30e9\u30b9foo\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u3001\u307e\u305f\u306fx\u304cFoo\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3059\u308b\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308c\u3070\u5408\u683c\n\n\nexpect([Foo class]).to.beSubclassOf([Bar class]);\n\u30af\u30e9\u30b9Foo\u304c\u30af\u30e9\u30b9Bar\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3042\u308b\u304b\u3001\u30af\u30e9\u30b9Bar\u3068\u540c\u4e00\u3067\u3042\u308c\u3070\u5408\u683c\uff08\u30af\u30e9\u30b9\u30af\u30e9\u30b9\u30bf\u306e\u305f\u3081\u306bbeKindOf()\u3092\u4f7f\u7528\u3057\u307e\u3059\uff09\n\n\nexpect(x).to.beLessThan(y);\n\nx\u304cy\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beLessThanOrEqualTo(y);\n\nx\u304cy\u4ee5\u4e0b\u3067\u3042\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beGreaterThan(y);\n\nx\u304cy\u3088\u308a\u3082\u5927\u304d\u3051\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beGreaterThanOrEqualTo(y);\n\nx\u304cy\u4ee5\u4e0a\u3067\u3042\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beInTheRangeOf(y,z);\n\nx\u304cy\u3068z\u306e\u7bc4\u56f2\u5185\u3067\u3042\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beCloseTo(y);\n\nx\u304cy\u306b\u8fd1\u3051\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beCloseToWithin(y, z);\n\nx\u304cz\u5185\u306ey\u306b\u8fd1\u3051\u308c\u3070\u5408\u683c\n\n\nexpect(^{ code }).to.raise(@\"ExceptionName\");\n\u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u5185\u3067ExceptionName\u3068\u3044\u3046\u540d\u524d\u306e\u4f8b\u5916\u304c\u767a\u751f\u3059\u308c\u3070\u5408\u683c\n\n\nexpect(^{ code }).to.raiseAny();\n\u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u5185\u3067\u4efb\u610f\u306e\u4f8b\u5916\u304c\u767a\u751f\u3059\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.conformTo(y);\n\nx\u304c\u30d7\u30ed\u30c8\u30b3\u30eby\u306b\u6e96\u62e0\u3057\u3066\u3044\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.respondTo(y);\n\nx\u304c\u30bb\u30ec\u30af\u30bfy\u306b\u5fdc\u7b54\u3059\u308c\u3070\u5408\u683c\n\n\nexpect( code ).to.notify(@\"NotificationName\");\n\u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u304cNotificationName\u3068\u3044\u3046NSNotification\u3092\u751f\u6210\u3059\u308c\u3070\u5408\u683c\n\n\nexpect( code ).to.notify(notification);\n\u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u304c\u6e21\u3055\u308c\u305fnotification\u306e\u901a\u77e5\u3068\u7b49\u3057\u3044NSNotification\u3092\u751f\u6210\u3059\u308c\u3070\u5408\u683c\n\n\nexpect(x).to.beginWith(y);\nNSString\u3001NSArray\u307e\u305f\u306fNSOrderedSet\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9x\u304cy\u3067\u59cb\u307e\u308c\u3070\u5408\u683c\uff08Also aliased by startWith\uff09\n\n\nexpect(x).to.endWith(y);\nNSString\u3001NSArray\u307e\u305f\u306fNSOrderedSet\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9x\u304cy\u3067\u7d42\u308f\u308c\u3070\u5408\u683c\n\n\n\n\n\u30de\u30c3\u30c1\u30e3\u30fc\u306e\u53cd\u8ee2\nEvery matcher's criteria can be inverted by prepending .notTo or .toNot:\n\u5168\u3066\u306e\u30de\u30c3\u30c1\u30e3\u30fc\u306f.notTo \u3084 .toNot \u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u53cd\u8ee2\u3067\u304d\u307e\u3059\u3002\n\nexpect(x).notTo.equal(y); compares objects or primitives x and y and passes if they are not equivalent.\n\n\n\u975e\u540c\u671f\u30c6\u30b9\u30c8\n\u5168\u3066\u306e\u30de\u30c3\u30c1\u30e3\u30fc\u306f .will or .willNot\u3092\u524d\u306b\u4ed8\u52a0\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u975e\u540c\u671f\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\nexpect(x).will.beNil(); passes if x becomes nil before the timeout.\nexpect(x).willNot.beNil(); passes if x becomes non-nil before the timeout.\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f1.0\u79d2\u3067\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u306f [Expecta setAsynchronousTestTimeout:x] \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\nx\u306f\u5e0c\u671b\u3059\u308b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306e\u6642\u9593\u3067\u3059\u3002\n\n\u30de\u30c3\u30c1\u30e3\u30fc\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af for Objective-C/Cocoa\n\nExpecta\u306fGithub\u306e\u30e1\u30f3\u30d0\u30fc\u304c\u4f5c\u3063\u305f\u30de\u30c3\u30c1\u30e3\u30fc\u3067\u3059\u3002BDD\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bSpecta\uff08\u3053\u308c\u3082Github\u88fd\uff09\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3059\u308b\u3068\u3001\u624b\u8efd\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u307e\u3059\u3002\u7279\u306b\u975e\u540c\u671f\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u3084\u3059\u3055\u306f\u79c0\u9038\u3067\u3059\u3002\u662f\u975e\u7686\u3055\u3093\u3082\u4e00\u5ea6\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u79c1\u304c[specta/expecta](https://github.com/specta/expecta)\u304b\u3089\u3001\u81ea\u5206\u304c\u5fc5\u8981\u3068\u3059\u308b\u90e8\u5206\u306e\u307f\u3092\u629c\u7c8b\u3057\u3066\u7ffb\u8a33\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\u7ffb\u8a33\u306b\u81ea\u4fe1\u304c\u306a\u3044\u90e8\u5206\u306f\u305d\u306e\u307e\u307e\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n## \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n[CocoaPods](https://github.com/CocoaPods/CocoaPods)\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\n```ruby\ntarget :MyApp do\n  # your app dependencies\nend\n\ntarget :MyAppTests do\n  pod 'Expecta',     '~> 0.2.3'   # expecta matchers\n  # pod 'Specta',      '~> 0.1.11'  # specta bdd framework\nend\n```\n\n\u4f7f\u7528\u6e96\u5099\n\n```objective-c\n// #define EXP_OLD_SYNTAX // enable backward-compatibility\n#define EXP_SHORTHAND\n#import \"Expecta.h\"\n\n```\n\n\u3082\u3057`EXP_SHORTHAND`\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001`expect`\u306e\u4ee3\u308f\u308a\u306b`EXP_expect`\u3067\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nExpecta\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u4f9d\u5b58\u3057\u307e\u305b\u3093\u3002\n[Specta](http://github.com/petejkim/specta/)\u3084[GHUnit](http://github.com/gabriel/gh-unit/)\u3001[GTMUnit](http://code.google.com/p/google-toolbox-for-mac/)\u306a\u3069\u306eOCUnit\uff08SenTestingKit\uff09\u3084**OCUnit\u30b3\u30f3\u30d1\u30c1\u30d6\u30eb**\u306a\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u7d44\u8fbc\u6e08\u307f\u306e\u30de\u30c3\u30c1\u30e3\u30fc\n\n\u8a18\u8ff0 | \u8aac\u660e\n-------|-------\nexpect(`x`).to.equal(y); | \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u307e\u305f\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6`x`\u3068`y`\u3092\u6bd4\u8f03\u3057\u3001\u305d\u308c\u3089\u304c\u540c\u4e00\uff08==\uff09\u307e\u305f\u306f\u540c\u7b49\uff08isEqual:\uff09\u3067\u3042\u308c\u3070\u5408\u683c\nexpect(`x`).to.beIdenticalTo(y); | \u30aa\u30d6\u30b8\u30a7\u30af\u30c8`x`\u3068`y`\u3092\u6bd4\u8f03\u3057\u3001\u305d\u308c\u3089\u304c\u540c\u4e00\u3067\u3001\u540c\u4e00\u306e\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9\u3092\u6301\u3063\u3066\u3044\u308c\u3070\u5408\u683c\nexpect(`x`).to.beNil(); | `x` \u304c`nil`\u306a\u3089\u5408\u683c\nexpect(`x`).to.beTruthy(); | `x`\u304ctrue\uff08non-zero\uff09\u3068\u8a55\u4fa1\u3055\u308c\u308c\u3070\u5408\u683c\nexpect(`x`).to.beFalsy(); | `x`\u304cfalse\uff08zero\uff09\u3068\u8a55\u4fa1\u3055\u308c\u308c\u3070\u5408\u683c\nexpect(`x`).to.contain(`y`); | NSArray\u307e\u305f\u306fNSString\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9`x`\u304c`y`\u3092\u542b\u3080\u306a\u3089\u5408\u683c\nexpect(`x`).to.beSupersetOf(`y`); | NSArray\u3001NSSet\u3001NSDictionary \u307e\u305f\u306f NSOrderedSet\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9`x`\u304c`y`\u306e\u5168\u3066\u306e\u8981\u7d20\u3092\u542b\u3080\u306a\u3089\u5408\u683c\nexpect(x).to.haveCountOf(y); | NSArray\u3001NSSet\u3001NSDictionary\u307e\u305f\u306fNSString`x`\u304c`y`\u306e\u6570\u307e\u305f\u306f\u9577\u3055\u3067\u3042\u308c\u3070\u5408\u683c\nexpect(x).to.beEmpty(); | NSArray\u3001NSSet\u3001NSDictionary\u307e\u305f\u306fNSString`x`\u304c0\u306e\u6570\u307e\u305f\u306f\u9577\u3055\u3067\u3042\u308c\u3070\u5408\u683c\nexpect(x).to.beInstanceOf([Foo class]); | `x`\u304c\u30af\u30e9\u30b9Foo\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308c\u3070\u5408\u683c\nexpect(x).to.beKindOf([Foo class]); | `x`\u304c\u30af\u30e9\u30b9foo\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u3001\u307e\u305f\u306f`x`\u304cFoo\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3059\u308b\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308c\u3070\u5408\u683c\nexpect([Foo class]).to.beSubclassOf([Bar class]); | \u30af\u30e9\u30b9Foo\u304c\u30af\u30e9\u30b9Bar\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3042\u308b\u304b\u3001\u30af\u30e9\u30b9Bar\u3068\u540c\u4e00\u3067\u3042\u308c\u3070\u5408\u683c\uff08\u30af\u30e9\u30b9\u30af\u30e9\u30b9\u30bf\u306e\u305f\u3081\u306bbeKindOf()\u3092\u4f7f\u7528\u3057\u307e\u3059\uff09\nexpect(x).to.beLessThan(y); | `x`\u304c`y`\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\u5408\u683c\nexpect(x).to.beLessThanOrEqualTo(y); | `x`\u304c`y`\u4ee5\u4e0b\u3067\u3042\u308c\u3070\u5408\u683c\nexpect(x).to.beGreaterThan(y); | `x`\u304c`y`\u3088\u308a\u3082\u5927\u304d\u3051\u308c\u3070\u5408\u683c\nexpect(x).to.beGreaterThanOrEqualTo(y); | `x`\u304c`y`\u4ee5\u4e0a\u3067\u3042\u308c\u3070\u5408\u683c\nexpect(x).to.beInTheRangeOf(y,z); | `x`\u304c`y`\u3068`z`\u306e\u7bc4\u56f2\u5185\u3067\u3042\u308c\u3070\u5408\u683c\nexpect(x).to.beCloseTo(y); | `x`\u304c`y`\u306b\u8fd1\u3051\u308c\u3070\u5408\u683c\nexpect(x).to.beCloseToWithin(y, z); | `x`\u304c`z`\u5185\u306e`y`\u306b\u8fd1\u3051\u308c\u3070\u5408\u683c\nexpect(^{ code }).to.raise(@\"ExceptionName\"); | \u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u5185\u3067`ExceptionName`\u3068\u3044\u3046\u540d\u524d\u306e\u4f8b\u5916\u304c\u767a\u751f\u3059\u308c\u3070\u5408\u683c\nexpect(^{ code }).to.raiseAny(); |  \u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u5185\u3067\u4efb\u610f\u306e\u4f8b\u5916\u304c\u767a\u751f\u3059\u308c\u3070\u5408\u683c\nexpect(x).to.conformTo(y); | `x`\u304c\u30d7\u30ed\u30c8\u30b3\u30eb`y`\u306b\u6e96\u62e0\u3057\u3066\u3044\u308c\u3070\u5408\u683c\nexpect(x).to.respondTo(y); | `x`\u304c\u30bb\u30ec\u30af\u30bf`y`\u306b\u5fdc\u7b54\u3059\u308c\u3070\u5408\u683c\nexpect( code ).to.notify(@\"NotificationName\"); | \u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u304c`NotificationName`\u3068\u3044\u3046NSNotification\u3092\u751f\u6210\u3059\u308c\u3070\u5408\u683c\nexpect( code ).to.notify(notification); | \u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u304c\u6e21\u3055\u308c\u305f`notification`\u306e\u901a\u77e5\u3068\u7b49\u3057\u3044NSNotification\u3092\u751f\u6210\u3059\u308c\u3070\u5408\u683c\nexpect(x).to.beginWith(y); | NSString\u3001NSArray\u307e\u305f\u306fNSOrderedSet\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9`x`\u304c`y`\u3067\u59cb\u307e\u308c\u3070\u5408\u683c\uff08Also aliased by `startWith`\uff09\nexpect(x).to.endWith(y); | NSString\u3001NSArray\u307e\u305f\u306fNSOrderedSet\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9`x`\u304c`y`\u3067\u7d42\u308f\u308c\u3070\u5408\u683c\n\n## \u30de\u30c3\u30c1\u30e3\u30fc\u306e\u53cd\u8ee2\nEvery matcher's criteria can be inverted by prepending `.notTo` or `.toNot`:\n\u5168\u3066\u306e\u30de\u30c3\u30c1\u30e3\u30fc\u306f`.notTo` \u3084 `.toNot` \u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u53cd\u8ee2\u3067\u304d\u307e\u3059\u3002\n\n>`expect(x).notTo.equal(y);` compares objects or primitives x and y and passes if they are *not* equivalent.\n\n## \u975e\u540c\u671f\u30c6\u30b9\u30c8\n\n\u5168\u3066\u306e\u30de\u30c3\u30c1\u30e3\u30fc\u306f `.will` or `.willNot`\u3092\u524d\u306b\u4ed8\u52a0\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u975e\u540c\u671f\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n>`expect(x).will.beNil();` passes if x becomes nil before the timeout.\n\n>`expect(x).willNot.beNil();` passes if x becomes non-nil before the timeout.\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f1.0\u79d2\u3067\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u306f `[Expecta setAsynchronousTestTimeout:x]` \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n`x`\u306f\u5e0c\u671b\u3059\u308b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306e\u6642\u9593\u3067\u3059\u3002\n", "tags": ["bdd", "matcher"]}