{"context": "\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n\u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n2\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5834\u5408\u306e\u8a08\u7b97\u30ed\u30b8\u30c3\u30af\u3002\u3044\u308f\u3086\u308b\u30c0\u30d6\u30eb\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n2\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5834\u5408\u306b\u6b63\u3057\u304f\u8a08\u7b97\u304c\u52d5\u304f\u3088\u3046\u306b\u3059\u308b\n\n\n\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n    /**\n     * 2\u7403\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 3\u6295\u76ee: 3\n     * 4\u6295\u76ee: 1\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     * @return void\n     */\n    public function testDoubleStrikeAtFirstFlame()\n    {\n        $this->BowlingGame->recordShot(10); //10+(10+3)\n        $this->BowlingGame->recordShot(10); //10+(3+1)\n        $this->BowlingGame->recordShot(3); //3\n        $this->BowlingGame->recordShot(1); //1           [\u8a0841]\n\n        $this->loopRecordShot(14, 0);\n\n        $this->assertEquals(41, $this->BowlingGame->calculateScore());\n    }\n\n\n\n\n\u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\n1) BowlingGameTest::testDoubleStrikeAtFirstFlame\nFailed asserting that 38 matches expected 41.\n\n\n\u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(\u6700\u5c0f\u306e\u69cb\u6210\u3067)\n\n\u30c6\u30b9\u30c8\u304c\u901a\u3089\u306a\u3044\u539f\u56e0\n\n\u4e8c\u56de\u76ee\u306e\u30b9\u30c8\u30e9\u30a4\u30af\u306b\u3066\u3001\u30dc\u30fc\u30ca\u30b9\u8a08\u7b97\u7528\u306e\u5909\u6570\u304c\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3046\n($this->strikeBonusCount\u304c 2\u21921\u21920\u3067\u306a\u304f\u3066\u30012\u21921\u21922\u3068\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b)\n\u305d\u306e\u305f\u3081\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u306f3\u70b9\u5c11\u306a\u3044\u8a08\u7b97\u306b\u306a\u3063\u3066\u3044\u308b\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isStrike(int $pin)\n    {\n        if ($pin === 10) {\n            $this->strikeBonusCount = 2; //\u3053\u306e\u90e8\u5206\uff01\uff01\n        }\n    }\n\n\n\u89e3\u6c7a\u7b56\n\n\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u7528\u306e\u5909\u6570\u3092\u4f7f\u3046\n\u30a4\u30b1\u3066\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u554f\u984c\u3092\u6700\u5c0f\u9650\u3067\u89e3\u6c7a\u3057\u3066\u3044\u304f\u65b9\u91dd\u306b\u5f93\u3046\n\n\u8a2d\u8a08\n\u2460 doubleBonusCount\u3092\u5b9a\u7fa9\n\u2461 calculateStrike()\u5185\u306b\u3066\n\n\ndoubleBonusCount > 0\u306e\u5834\u5408\u3001\\$pin\u3092$score\u306b\u52a0\u7b97\n\ndoubleBonusCount > 0\u306e\u5834\u5408\u3001-1\u3092\u3059\u308b\n\n\u2462 isStrike()\u5185\u306b\u3066\n\n\n$strikeBonusCount === 0\u306e\u5834\u5408\u30012\u3092\u30bb\u30c3\u30c8\n\n$strikeBonusCount !== 0\u306e\u5834\u5408\u3001doubleBonusCount\u306b2\u3092\u30bb\u30c3\u30c8\n\n\u2191\u306f\u9806\u5e8f\u91cd\u8981\u306a\u306e\u3067\u6ce8\u610f\u3002\n\u9006\u306b\u3059\u308b\u3068\u4e00\u56de\u76ee\u306e\u30b9\u30c8\u30e9\u30a4\u30af\u3067doubleBonusCount\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3057\u307e\u3046\n\n\u5b9f\u88c5\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateStrike(int $pin)\n    {\n        if ($this->doubleBonusCount > 0) {\n            $this->score += $pin;\n            --$this->doubleBonusCount;\n        }\n\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isStrike(int $pin)\n    {\n        if ($pin === 10) {\n\n            if ($this->strikeBonusCount !== 0) {\n                $this->doubleBonusCount = 2;\n            }\n\n            if ($this->strikeBonusCount === 0) {\n                $this->strikeBonusCount = 2;\n            }\n        }\n    }\n\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\nOK (6 tests, 6 assertions)\n\n\n3\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5834\u5408\u306e\u8a08\u7b97\u30ed\u30b8\u30c3\u30af\u3002\u3044\u308f\u3086\u308b\u30bf\u30fc\u30ad\u30fc\n\n\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n    /**\n     * 3\u7403\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 3\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 4\u6295\u76ee: 3\n     * 5\u6295\u76ee: 1\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     */\n    public function testTurkeyAtFirstFlame()\n    {\n        $this->BowlingGame->recordShot(10); //10+(10+10)\n        $this->BowlingGame->recordShot(10); //10+(10+3)\n        $this->BowlingGame->recordShot(10); //10+(3+1)\n        $this->BowlingGame->recordShot(3); //3\n        $this->BowlingGame->recordShot(1); //1           [\u8a0871]\n\n        $this->loopRecordShot(12, 0);\n\n        $this->assertEquals(71, $this->BowlingGame->calculateScore());\n    }\n\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\nOK (7 tests, 7 assertions)\n\n\n\u611f\u60f3\n\u30c0\u30d6\u30eb\u3092\u5b9f\u88c5\u3057\u305f\u5f8c\u306b\u30bf\u30fc\u30ad\u30fc\u306e\u78ba\u8a8d\u307e\u3067\u3067\u304d\u305f\u306e\u306f\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3067\u304d\u308b\u306e\u306f\u697d\u3060\u3063\u305f\n\u30d5\u30e9\u30b0\u7ba1\u7406\u90e8\u5206\u304c\u591a\u3044\u306e\u3067\u305d\u306e\u8cac\u4efb\u306f\u30c6\u30b9\u30c8\u3092\u983c\u308a\u306b\u5225\u5834\u6240\u306b\u79fb\u3057\u305f\u3044\u304b\u306a\n\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n# \u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n## 2\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5834\u5408\u306e\u8a08\u7b97\u30ed\u30b8\u30c3\u30af\u3002\u3044\u308f\u3086\u308b\u30c0\u30d6\u30eb\n\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n- 2\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5834\u5408\u306b\u6b63\u3057\u304f\u8a08\u7b97\u304c\u52d5\u304f\u3088\u3046\u306b\u3059\u308b\n\n### \u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\n```php\n    /**\n     * 2\u7403\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 3\u6295\u76ee: 3\n     * 4\u6295\u76ee: 1\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     * @return void\n     */\n    public function testDoubleStrikeAtFirstFlame()\n    {\n        $this->BowlingGame->recordShot(10); //10+(10+3)\n        $this->BowlingGame->recordShot(10); //10+(3+1)\n        $this->BowlingGame->recordShot(3); //3\n        $this->BowlingGame->recordShot(1); //1           [\u8a0841]\n\n        $this->loopRecordShot(14, 0);\n\n        $this->assertEquals(41, $this->BowlingGame->calculateScore());\n    }\n\n\n```\n\n### \u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\n\n```bash\n1) BowlingGameTest::testDoubleStrikeAtFirstFlame\nFailed asserting that 38 matches expected 41.\n```\n\n### \u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(__\u6700\u5c0f\u306e\u69cb\u6210\u3067__)\n\n- \u30c6\u30b9\u30c8\u304c\u901a\u3089\u306a\u3044\u539f\u56e0\n\n__\u4e8c\u56de\u76ee\u306e\u30b9\u30c8\u30e9\u30a4\u30af\u306b\u3066\u3001\u30dc\u30fc\u30ca\u30b9\u8a08\u7b97\u7528\u306e\u5909\u6570\u304c\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3046__\n($this->strikeBonusCount\u304c 2\u21921\u21920\u3067\u306a\u304f\u3066\u30012\u21921\u21922\u3068\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b)\n\u305d\u306e\u305f\u3081\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u306f3\u70b9\u5c11\u306a\u3044\u8a08\u7b97\u306b\u306a\u3063\u3066\u3044\u308b\n\n```php\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isStrike(int $pin)\n    {\n        if ($pin === 10) {\n            $this->strikeBonusCount = 2; //\u3053\u306e\u90e8\u5206\uff01\uff01\n        }\n    }\n```\n\n- \u89e3\u6c7a\u7b56\n\n\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u7528\u306e\u5909\u6570\u3092\u4f7f\u3046\n__\u30a4\u30b1\u3066\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u554f\u984c\u3092\u6700\u5c0f\u9650\u3067\u89e3\u6c7a\u3057\u3066\u3044\u304f\u65b9\u91dd\u306b\u5f93\u3046__\n\n#### \u8a2d\u8a08\n\n\u2460 doubleBonusCount\u3092\u5b9a\u7fa9\n\n\u2461 calculateStrike()\u5185\u306b\u3066\n\n- __doubleBonusCount > 0__\u306e\u5834\u5408\u3001\\$pin\u3092$score\u306b\u52a0\u7b97\n- __doubleBonusCount > 0__\u306e\u5834\u5408\u3001-1\u3092\u3059\u308b\n\n\u2462 isStrike()\u5185\u306b\u3066\n\n- __$strikeBonusCount === 0__\u306e\u5834\u5408\u30012\u3092\u30bb\u30c3\u30c8\n- __$strikeBonusCount !== 0__\u306e\u5834\u5408\u3001doubleBonusCount\u306b2\u3092\u30bb\u30c3\u30c8\n\n\u2191\u306f\u9806\u5e8f\u91cd\u8981\u306a\u306e\u3067\u6ce8\u610f\u3002\n\u9006\u306b\u3059\u308b\u3068\u4e00\u56de\u76ee\u306e\u30b9\u30c8\u30e9\u30a4\u30af\u3067doubleBonusCount\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3057\u307e\u3046\n\n#### \u5b9f\u88c5\n\n```php\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateStrike(int $pin)\n    {\n        if ($this->doubleBonusCount > 0) {\n            $this->score += $pin;\n            --$this->doubleBonusCount;\n        }\n\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isStrike(int $pin)\n    {\n        if ($pin === 10) {\n\n            if ($this->strikeBonusCount !== 0) {\n                $this->doubleBonusCount = 2;\n            }\n\n            if ($this->strikeBonusCount === 0) {\n                $this->strikeBonusCount = 2;\n            }\n        }\n    }\n```\n\n#### \u30c6\u30b9\u30c8\u5b9f\u884c\n\n```bash\nOK (6 tests, 6 assertions)\n```\n\n## 3\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5834\u5408\u306e\u8a08\u7b97\u30ed\u30b8\u30c3\u30af\u3002\u3044\u308f\u3086\u308b\u30bf\u30fc\u30ad\u30fc\n\n#### \u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\n```php\n    /**\n     * 3\u7403\u9023\u7d9a\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 3\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 4\u6295\u76ee: 3\n     * 5\u6295\u76ee: 1\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     */\n    public function testTurkeyAtFirstFlame()\n    {\n        $this->BowlingGame->recordShot(10); //10+(10+10)\n        $this->BowlingGame->recordShot(10); //10+(10+3)\n        $this->BowlingGame->recordShot(10); //10+(3+1)\n        $this->BowlingGame->recordShot(3); //3\n        $this->BowlingGame->recordShot(1); //1           [\u8a0871]\n\n        $this->loopRecordShot(12, 0);\n\n        $this->assertEquals(71, $this->BowlingGame->calculateScore());\n    }\n```\n\n#### \u30c6\u30b9\u30c8\u5b9f\u884c\n\n```bash\nOK (7 tests, 7 assertions)\n```\n\n## \u611f\u60f3\n\n\u30c0\u30d6\u30eb\u3092\u5b9f\u88c5\u3057\u305f\u5f8c\u306b\u30bf\u30fc\u30ad\u30fc\u306e\u78ba\u8a8d\u307e\u3067\u3067\u304d\u305f\u306e\u306f\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3067\u304d\u308b\u306e\u306f\u697d\u3060\u3063\u305f\n\u30d5\u30e9\u30b0\u7ba1\u7406\u90e8\u5206\u304c\u591a\u3044\u306e\u3067\u305d\u306e\u8cac\u4efb\u306f\u30c6\u30b9\u30c8\u3092\u983c\u308a\u306b\u5225\u5834\u6240\u306b\u79fb\u3057\u305f\u3044\u304b\u306a\n", "tags": ["PHP", "PHPUnit"]}