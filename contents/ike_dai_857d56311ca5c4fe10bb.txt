{"tags": ["zabbix", "serverspec"], "context": "\u30aa\u30e9\u30a4\u30ea\u30fc\u306eServerspec\u672c\u3092\u8aad\u3093\u3067\u3001\u3053\u3093\u306a\u3053\u3068\u3082\u3067\u304d\u308b\u3088\u306d\u3068\u3044\u3046\u3053\u3068\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nServerspec\u306b\u3064\u3044\u3066\u306e\u7d39\u4ecb\u306f\u7701\u7565\u3057\u307e\u3059\u3002\nServerspec\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5834\u5408\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30b5\u30fc\u30d0\u6bce\u306b\u30d5\u30a9\u30eb\u30c0\u304c\u4f5c\u3089\u308c\u3001\u305d\u306e\u4e2d\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u3001\u30b5\u30fc\u30d0\u9593\u3067\u540c\u69d8\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3057\u305f\u3044\u6642\u306b\u91cd\u8907\u3057\u3066\u540c\u3058\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u52b9\u7387\u304c\u3088\u304f\u306a\u3044\u306e\u3067\u3001\u3067\u304d\u308c\u3070\u30b5\u30fc\u30d0\u7528\u9014\u6bce\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3057\u305f\u3044\u3068\u3044\u3063\u305f\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u3042\u308b\u3088\u3046\u306bRakefile\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u3067\u3069\u306e\u30db\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3069\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u304b\u3092\u67d4\u8edf\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nhttp://mizzy.org/blog/2013/05/12/1/\nhttp://thinkit.co.jp/story/2014/09/04/5212\n\u3053\u308c\u3089\u306e\u4f8b\u306f\u9759\u7684\u306b\u3069\u306e\u30db\u30b9\u30c8\u304c\u3069\u306e\u30ed\u30fc\u30eb\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u304b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092\u5c11\u3057\u767a\u5c55\u3055\u305b\u3066\u3001\u4eca\u56de\u306f\u5916\u90e8\u30c4\u30fc\u30eb\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u30db\u30b9\u30c8\u60c5\u5831\u3092\u81ea\u52d5\u53d6\u5f97\u3057\u3001\u30c6\u30b9\u30c8\u3092\u81ea\u52d5\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\nZabbix\u3068Serverspec\n\u4eca\u56de\u306f\u5916\u90e8\u30c4\u30fc\u30eb\u3068\u3057\u3066Zabbix\u3092\u5bfe\u8c61\u306b\u8003\u3048\u3066\u307f\u307e\u3059\u3002\nZabbix\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30db\u30b9\u30c8\u60c5\u5831(IP\u30a2\u30c9\u30ec\u30b9\u3084DNS\u540d\u7b49)\u3084\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u60c5\u5831\u3092\u81ea\u52d5\u53d6\u5f97\u3057\u3066\u30c6\u30b9\u30c8\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306a\u308b\u30db\u30b9\u30c8\u3092\u6c7a\u5b9a\u3057\u3001\u3069\u306e\u30ed\u30fc\u30eb\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u3079\u304d\u304b\u3092\u6c7a\u3081\u307e\u3059\u3002\n\u3053\u3046\u3044\u3063\u305f\u9023\u643a\u304c\u5b9f\u73fe\u3067\u304d\u308c\u3070\u3001\u300cZabbix\u3067\u76e3\u8996\u3092\u884c\u3046\u300d\u3001\u4f55\u304b\u8d77\u3053\u3063\u305f\u6642\u306b\u300cServerspec\u3067\u30b5\u30fc\u30d0\u5185\u90e8\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u300d\u3068\u3044\u3046\u4e00\u9023\u306e\u51e6\u7406\u304c\u3088\u308a\u30b9\u30e0\u30fc\u30ba\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nZabbix\u5074\u306e\u8a2d\u5b9a\nZabbix\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30db\u30b9\u30c8\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u60c5\u5831\u3068\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u60c5\u5831\u3092\u53ce\u96c6\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u3001\u307e\u305aZabbix\u306b\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30db\u30b9\u30c8\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30db\u30b9\u30c8\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\n\n\u30db\u30b9\u30c8\u540d: test-server-01\n\n\n\u6240\u5c5e\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7: DB\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9: \n\n\nIP\u30a2\u30c9\u30ec\u30b9: 10.2.2.1\nDNS\u540d: test-server-01\nUseIP: 0\n\n\n\n\n\u30db\u30b9\u30c8\u540d: test-server-02\n\n\n\u6240\u5c5e\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7: Web\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9: \n\n\nIP\u30a2\u30c9\u30ec\u30b9: 10.2.2.2\nDNS\u540d: \u306a\u3057\nUseIP: 1\n\n\n\n\n\u30db\u30b9\u30c8\u540d: Zabbix server\n\n\n\u6240\u5c5e\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7: Zabbix servers\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9: \n\n\nIP\u30a2\u30c9\u30ec\u30b9: 10.2.2.10\nDNS\u540d: \u306a\u3057\nUseIP: 1\n\n\n\n\n\n\nZabbix\u306e\u30db\u30b9\u30c8\u30ea\u30b9\u30c8\u53d6\u5f97\u30b9\u30af\u30ea\u30d7\u30c8\u4f5c\u6210\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u5f0f\u3067\u30db\u30b9\u30c8\u304a\u3088\u3073\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u60c5\u5831\u3092\u8fd4\u3059\u3088\u3046\u306bRuby\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nZabbix API\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30db\u30b9\u30c8\u306e\u4e00\u89a7\u3084\u5404\u30db\u30b9\u30c8\u304c\u6240\u5c5e\u3057\u3066\u3044\u308b\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u4eca\u56de\u306f\u3053\u306eZabbixAPI\u3092\u4f7f\u3063\u3066\u30db\u30b9\u30c8\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\nget_zabbix_hosts.rb\n#!/bin/env ruby\n\nrequire 'net/http'\nrequire 'json'\nrequire 'optparse'\n\noptions = ARGV.getopts(\"\", \"url:http://localhost/zabbix/api_jsonrpc.php\", \"username:Admin\", \"password:zabbix\")\nZABBIX_URL = options[\"url\"]\nZABBIX_USER = options[\"username\"]\nZABBIX_PASSWORD = options[\"password\"]\n\nZABBIX_URI = URI.parse(ZABBIX_URL)\nZABBIX_API_HEADER = {'Content-Type' =>'application/json-rpc'}\nAPI_REQUEST_BASE = Net::HTTP::Post.new(ZABBIX_URI.request_uri, initheader = ZABBIX_API_HEADER)\napi_connection = nil\n# api_connection is user.login returned value.\n# {\"jsonrpc\"=>\"2.0\", \"result\"=>\"099adde3cea983cece7c0f03195791eb\", \"id\"=>1}\n\ndef login\n  params = {user: ZABBIX_USER, password: ZABBIX_PASSWORD}\n\n  API_REQUEST_BASE.body = {method: \"user.login\", auth: nil, params: params, id: 1, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\ndef api_access(uri, request)\n  response = nil\n\n  http = Net::HTTP.new(uri.host, uri.port)\n  http.start do |h|\n    response = h.request(request)\n  end\n  return JSON.parse(response.body)\nend\n\ndef get_host_list(api_connection)\n  params = {output: \"extend\", selectGroups: \"true\", selectInterfaces: \"extend\"}\n\n  API_REQUEST_BASE.body = {method: \"host.get\", auth: api_connection[\"result\"], params: params, id: 2, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\ndef get_hostgroup_list(api_connection, hostgroup_ids)\n  params = {output: \"extend\", groupids: hostgroup_ids}\n\n  API_REQUEST_BASE.body = {method: \"hostgroup.get\", auth: api_connection[\"result\"], params: params, id: 3, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\n## main ##\nresult = []\n\napi_connection = login()\nhosts = get_host_list(api_connection)\n\n\nhosts[\"result\"].each do |h|\n  host = {}\n  h[\"interfaces\"].each do |interface|\n    if interface[\"useip\"] == \"1\" then\n      host = {:name => interface[\"ip\"]}\n    else\n      host = {:name => interface[\"dns\"]}\n    end\n    break\n  end\n  groups = get_hostgroup_list(api_connection, h[\"groups\"].map!{|group| group.values}.flatten)\n  group_names = groups[\"result\"].map {|group| group[\"name\"]}\n  host[:roles] = group_names\n\n  result << host\nend\n\nputs JSON.dump(result)\n\n\n\n\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u3001hosts.json\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n$ ./get_zabbix_hosts.rb --username Admin --password zabbix --url http://10.2.2.10/zabbix/api_jsonrpc.php > hosts.json\n\nhosts.json\u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\nhosts.json\n[\n  {\n    \"name\":\"10.2.2.2\",\n    \"roles\":[\"Web\"]\n  },\n  {\n    \"name\":\"10.2.2.10\",\n    \"roles\":[\"Zabbix servers\"]\n  },\n  {\n    \"name\":\"test-server-01\",\n    \"roles\":[\"DB\"]\n  }\n]\n\n\n\nRakefile\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\nserverspec-init\u3092\u5b9f\u884c\u3059\u308b\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306eRakefile\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\nhosts.json\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5404\u30db\u30b9\u30c8\u306ename\u3067\u6307\u5b9a\u3055\u308c\u305f\u5024\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u30db\u30b9\u30c8\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u305d\u306e\u30db\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3059\u3079\u304d\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\nspec/\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u540d/*_spec.rb\u306b\u8a72\u5f53\u3059\u308b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u5168\u3066\u3068\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nRakefile\nrequire 'rake'\nrequire 'rspec/core/rake_task'\nrequire 'json'\n\ntask :spec    => 'spec:all'\ntask :default => :spec\n\nnamespace :spec do\n  hosts = JSON.load(File.new('hosts.json'))\n  task :all     => hosts.map {|h| h['name'] }\n  task :default => :all\n\n  hosts.each do |host|\n    name = host['name']\n    desc \"Run serverspec tests to #{name}\"\n    RSpec::Core::RakeTask.new(name) do |t|\n      ENV['TARGET_HOST'] = name\n      t.pattern = \"spec/{#{host['roles'].join(',')}}/*_spec.rb\"\n    end\n  end\nend\n\n\n\u305d\u306e\u305f\u3081\u3001\u4f8b\u3048\u3070\u4eca\u56de\u306e\u5834\u5408\u3001spec\u4ee5\u4e0b\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u914d\u7f6e\u3059\u308c\u3070\u3001test-server-01\u3067\u306fDB\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u307f\u3001test-server-02\u3067\u306fWeb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u307f\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3044\u3063\u305f\u5177\u5408\u3067\u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u7ba1\u7406\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\u251c Rakefile\n\u251c get_zabbix_hosts.rb\n\u251c hosts.json\n\u2514 spec\n\u3000\u251c DB\n\u3000\u2502\u3000\u2514 postgresql_spec.rb\n\u3000\u251c Web\n\u3000\u2502\u3000\u2514 apache_spec.rb\n\u3000\u251c Zabbix servers\n\u3000\u2502\u3000\u2514 zabbix_server_spec.rb\n\u3000\u2514 spec_helper.rb\n\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\n\n\u5168\u30db\u30b9\u30c8\u306b\u5b9f\u884c\u3059\u308b\u5834\u5408\n$ rake spec:all (rake spec\u3060\u3051\u3067\u3082OK)\n\n\n\n\u500b\u5225\u306e\u30db\u30b9\u30c8\u6bce\u306b\u5b9f\u884c\u3059\u308b\u5834\u5408\n$ rake spec:test-server-01\n\n\n\nRakefile\u5185\u3067\u5168\u3066\u5b8c\u7d50\u3055\u305b\u308b\n\u307e\u305f\u3001\u4e0a\u8a18\u3067get_zabbix_hosts.rb\u3067\u5225\u3067\u5207\u308a\u51fa\u3057\u305f\u51e6\u7406\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5168\u3066Rakefile\u306b\u542b\u3081\u3066\u3001rake spec\u5b9f\u884c\u6642\u306b\u5168\u51e6\u7406\u3092\u4e00\u62ec\u5b9f\u884c\u3055\u305b\u308b\u3068\u3044\u3063\u305f\u3053\u3068\u3082\u3082\u3061\u308d\u3093\u53ef\u80fd\u3067\u3059\u3002\n\nRakefile\nrequire 'rake'\nrequire 'rspec/core/rake_task'\nrequire 'json'\nrequire 'net/http'\n\nZABBIX_URL = \"http://localhost:50008/zabbix/api_jsonrpc.php\"\nZABBIX_USER = \"Admin\"\nZABBIX_PASSWORD = \"zabbix\"\n\nZABBIX_URI = URI.parse(ZABBIX_URL)\nZABBIX_API_HEADER = {'Content-Type' =>'application/json-rpc'}\nAPI_REQUEST_BASE = Net::HTTP::Post.new(ZABBIX_URI.request_uri, initheader = ZABBIX_API_HEADER)\napi_connection = nil\n# api_connection is user.login returned value.\n# {\"jsonrpc\"=>\"2.0\", \"result\"=>\"099adde3cea983cece7c0f03195791eb\", \"id\"=>1}\n\n\ndef login\n  params = {user: ZABBIX_USER, password: ZABBIX_PASSWORD}\n\n  API_REQUEST_BASE.body = {method: \"user.login\", auth: nil, params: params, id: 1, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\ndef api_access(uri, request)\n  response = nil\n\n  http = Net::HTTP.new(uri.host, uri.port)\n  http.start do |h|\n    response = h.request(request)\n  end\n  return JSON.parse(response.body)\nend\n\ndef get_host_list(api_connection)\n  params = {output: \"extend\", selectGroups: \"true\", selectInterfaces: \"extend\"}\n\n  API_REQUEST_BASE.body = {method: \"host.get\", auth: api_connection[\"result\"], params: params, id: 2, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\ndef get_hostgroup_list(api_connection, hostgroup_ids)\n  params = {output: \"extend\", groupids: hostgroup_ids}\n\n  API_REQUEST_BASE.body = {method: \"hostgroup.get\", auth: api_connection[\"result\"], params: params, id: 3, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\n## main ##\nresult = []\n\napi_connection = login()\nhosts = get_host_list(api_connection)\n\n\nhosts[\"result\"].each do |h|\n  host = {}\n  h[\"interfaces\"].each do |interface|\n    if interface[\"useip\"] == \"1\" then\n      host = {:name => interface[\"ip\"]}\n    else\n      host = {:name => interface[\"dns\"]}\n    end\n    break\n  end\n  groups = get_hostgroup_list(api_connection, h[\"groups\"].map!{|group| group.values}.flatten)\n  group_names = groups[\"result\"].map {|group| group[\"name\"]}\n  host[:roles] = group_names\n\n  result << host\nend\n\nhosts = JSON.dump(result)\n\n\ntask :spec    => 'spec:all'\ntask :default => :spec\n\nnamespace :spec do\n  hosts = JSON.load(File.new('hosts.json'))\n  p hosts\n  task :all     => hosts.map {|h| h['name'] }\n  task :default => :all\n\n  hosts.each do |host|\n    name = host['name']\n    desc \"Run serverspec tests to #{name}\"\n    RSpec::Core::RakeTask.new(name) do |t|\n      ENV['TARGET_HOST'] = name\n      t.pattern = \"spec/{#{host['roles'].join(',')}}/*_spec.rb\"\n    end\n  end\nend\n\n\n\nServerspec\u672c\u3067\u306f\n\u4eca\u56de\u306e\u3053\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306fServerspec\u672c\u306e\u4e2d\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u3082\u3068\u306b\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u66f8\u7c4d\u306e\u4e2d\u3067\u306fConsul\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u30db\u30b9\u30c8\u4e00\u89a7\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u81ea\u52d5\u5b9f\u884c\u3055\u305b\u305f\u308a\u3001AWS\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u81ea\u52d5\u5b9f\u884c\u3055\u305b\u305f\u308a\u3068\u3044\u3063\u305f\u60c5\u5831\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u975e\u5e38\u306b\u3044\u308d\u3093\u306a\u60c5\u5831\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u306e\u305c\u3072\u4e00\u8aad\u3055\u308c\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\nhttp://www.amazon.co.jp/dp/4873117097\n\n\u307e\u3068\u3081\n\u57fa\u672c\u7684\u306b\u306fServerspec\u306fRuby\u3067\u51e6\u7406\u3092\u66f8\u3051\u3070\u3069\u3093\u306a\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u4eca\u56de\u306e\u3088\u3046\u306b\u69d8\u3005\u306a\u30c4\u30fc\u30eb\u3068\u9023\u643a\u3055\u305b\u308b\u3053\u3068\u3067\u52b9\u679c\u7684\u306a\u7ba1\u7406\u304c\u5b9f\u73fe\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\n\u30aa\u30e9\u30a4\u30ea\u30fc\u306eServerspec\u672c\u3092\u8aad\u3093\u3067\u3001\u3053\u3093\u306a\u3053\u3068\u3082\u3067\u304d\u308b\u3088\u306d\u3068\u3044\u3046\u3053\u3068\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nServerspec\u306b\u3064\u3044\u3066\u306e\u7d39\u4ecb\u306f\u7701\u7565\u3057\u307e\u3059\u3002\n\nServerspec\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5834\u5408\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30b5\u30fc\u30d0\u6bce\u306b\u30d5\u30a9\u30eb\u30c0\u304c\u4f5c\u3089\u308c\u3001\u305d\u306e\u4e2d\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u3001\u30b5\u30fc\u30d0\u9593\u3067\u540c\u69d8\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3057\u305f\u3044\u6642\u306b\u91cd\u8907\u3057\u3066\u540c\u3058\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u308c\u3067\u306f\u52b9\u7387\u304c\u3088\u304f\u306a\u3044\u306e\u3067\u3001\u3067\u304d\u308c\u3070\u30b5\u30fc\u30d0\u7528\u9014\u6bce\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3057\u305f\u3044\u3068\u3044\u3063\u305f\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u3042\u308b\u3088\u3046\u306bRakefile\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u3067\u3069\u306e\u30db\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3069\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u304b\u3092\u67d4\u8edf\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nhttp://mizzy.org/blog/2013/05/12/1/\nhttp://thinkit.co.jp/story/2014/09/04/5212\n\n\u3053\u308c\u3089\u306e\u4f8b\u306f\u9759\u7684\u306b\u3069\u306e\u30db\u30b9\u30c8\u304c\u3069\u306e\u30ed\u30fc\u30eb\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u304b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092\u5c11\u3057\u767a\u5c55\u3055\u305b\u3066\u3001\u4eca\u56de\u306f\u5916\u90e8\u30c4\u30fc\u30eb\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u30db\u30b9\u30c8\u60c5\u5831\u3092\u81ea\u52d5\u53d6\u5f97\u3057\u3001\u30c6\u30b9\u30c8\u3092\u81ea\u52d5\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n## Zabbix\u3068Serverspec\n\n\u4eca\u56de\u306f\u5916\u90e8\u30c4\u30fc\u30eb\u3068\u3057\u3066Zabbix\u3092\u5bfe\u8c61\u306b\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\nZabbix\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30db\u30b9\u30c8\u60c5\u5831(IP\u30a2\u30c9\u30ec\u30b9\u3084DNS\u540d\u7b49)\u3084\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u60c5\u5831\u3092\u81ea\u52d5\u53d6\u5f97\u3057\u3066\u30c6\u30b9\u30c8\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306a\u308b\u30db\u30b9\u30c8\u3092\u6c7a\u5b9a\u3057\u3001\u3069\u306e\u30ed\u30fc\u30eb\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u3079\u304d\u304b\u3092\u6c7a\u3081\u307e\u3059\u3002\n\n\u3053\u3046\u3044\u3063\u305f\u9023\u643a\u304c\u5b9f\u73fe\u3067\u304d\u308c\u3070\u3001\u300cZabbix\u3067\u76e3\u8996\u3092\u884c\u3046\u300d\u3001\u4f55\u304b\u8d77\u3053\u3063\u305f\u6642\u306b\u300cServerspec\u3067\u30b5\u30fc\u30d0\u5185\u90e8\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u300d\u3068\u3044\u3046\u4e00\u9023\u306e\u51e6\u7406\u304c\u3088\u308a\u30b9\u30e0\u30fc\u30ba\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## Zabbix\u5074\u306e\u8a2d\u5b9a\n\nZabbix\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30db\u30b9\u30c8\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u60c5\u5831\u3068\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u60c5\u5831\u3092\u53ce\u96c6\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u3001\u307e\u305aZabbix\u306b\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30db\u30b9\u30c8\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30db\u30b9\u30c8\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\n\n* \u30db\u30b9\u30c8\u540d: test-server-01\n    * \u6240\u5c5e\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7: DB\n    * \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9: \n        * IP\u30a2\u30c9\u30ec\u30b9: 10.2.2.1\n        * DNS\u540d: test-server-01\n        * UseIP: 0\n* \u30db\u30b9\u30c8\u540d: test-server-02\n    * \u6240\u5c5e\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7: Web\n    * \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9: \n        * IP\u30a2\u30c9\u30ec\u30b9: 10.2.2.2\n        * DNS\u540d: \u306a\u3057\n        * UseIP: 1\n* \u30db\u30b9\u30c8\u540d: Zabbix server\n    * \u6240\u5c5e\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7: Zabbix servers\n    * \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9: \n        * IP\u30a2\u30c9\u30ec\u30b9: 10.2.2.10\n        * DNS\u540d: \u306a\u3057\n        * UseIP: 1\n\n## Zabbix\u306e\u30db\u30b9\u30c8\u30ea\u30b9\u30c8\u53d6\u5f97\u30b9\u30af\u30ea\u30d7\u30c8\u4f5c\u6210\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u5f0f\u3067\u30db\u30b9\u30c8\u304a\u3088\u3073\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u60c5\u5831\u3092\u8fd4\u3059\u3088\u3046\u306bRuby\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nZabbix API\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30db\u30b9\u30c8\u306e\u4e00\u89a7\u3084\u5404\u30db\u30b9\u30c8\u304c\u6240\u5c5e\u3057\u3066\u3044\u308b\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u4eca\u56de\u306f\u3053\u306eZabbixAPI\u3092\u4f7f\u3063\u3066\u30db\u30b9\u30c8\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n```rb:get_zabbix_hosts.rb\n#!/bin/env ruby\n\nrequire 'net/http'\nrequire 'json'\nrequire 'optparse'\n\noptions = ARGV.getopts(\"\", \"url:http://localhost/zabbix/api_jsonrpc.php\", \"username:Admin\", \"password:zabbix\")\nZABBIX_URL = options[\"url\"]\nZABBIX_USER = options[\"username\"]\nZABBIX_PASSWORD = options[\"password\"]\n\nZABBIX_URI = URI.parse(ZABBIX_URL)\nZABBIX_API_HEADER = {'Content-Type' =>'application/json-rpc'}\nAPI_REQUEST_BASE = Net::HTTP::Post.new(ZABBIX_URI.request_uri, initheader = ZABBIX_API_HEADER)\napi_connection = nil\n# api_connection is user.login returned value.\n# {\"jsonrpc\"=>\"2.0\", \"result\"=>\"099adde3cea983cece7c0f03195791eb\", \"id\"=>1}\n\ndef login\n  params = {user: ZABBIX_USER, password: ZABBIX_PASSWORD}\n\n  API_REQUEST_BASE.body = {method: \"user.login\", auth: nil, params: params, id: 1, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\ndef api_access(uri, request)\n  response = nil\n\n  http = Net::HTTP.new(uri.host, uri.port)\n  http.start do |h|\n    response = h.request(request)\n  end\n  return JSON.parse(response.body)\nend\n\ndef get_host_list(api_connection)\n  params = {output: \"extend\", selectGroups: \"true\", selectInterfaces: \"extend\"}\n\n  API_REQUEST_BASE.body = {method: \"host.get\", auth: api_connection[\"result\"], params: params, id: 2, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\ndef get_hostgroup_list(api_connection, hostgroup_ids)\n  params = {output: \"extend\", groupids: hostgroup_ids}\n\n  API_REQUEST_BASE.body = {method: \"hostgroup.get\", auth: api_connection[\"result\"], params: params, id: 3, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\n## main ##\nresult = []\n\napi_connection = login()\nhosts = get_host_list(api_connection)\n\n\nhosts[\"result\"].each do |h|\n  host = {}\n  h[\"interfaces\"].each do |interface|\n    if interface[\"useip\"] == \"1\" then\n      host = {:name => interface[\"ip\"]}\n    else\n      host = {:name => interface[\"dns\"]}\n    end\n    break\n  end\n  groups = get_hostgroup_list(api_connection, h[\"groups\"].map!{|group| group.values}.flatten)\n  group_names = groups[\"result\"].map {|group| group[\"name\"]}\n  host[:roles] = group_names\n\n  result << host\nend\n\nputs JSON.dump(result)\n\n```\n\n\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u3001hosts.json\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n```shell-session\n$ ./get_zabbix_hosts.rb --username Admin --password zabbix --url http://10.2.2.10/zabbix/api_jsonrpc.php > hosts.json\n```\n\nhosts.json\u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```json:hosts.json\n[\n  {\n    \"name\":\"10.2.2.2\",\n    \"roles\":[\"Web\"]\n  },\n  {\n    \"name\":\"10.2.2.10\",\n    \"roles\":[\"Zabbix servers\"]\n  },\n  {\n    \"name\":\"test-server-01\",\n    \"roles\":[\"DB\"]\n  }\n]\n```\n\n## Rakefile\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n\nserverspec-init\u3092\u5b9f\u884c\u3059\u308b\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306eRakefile\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\nhosts.json\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5404\u30db\u30b9\u30c8\u306ename\u3067\u6307\u5b9a\u3055\u308c\u305f\u5024\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u30db\u30b9\u30c8\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u305d\u306e\u30db\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3059\u3079\u304d\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\n\nspec/\u30db\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u540d/*_spec.rb\u306b\u8a72\u5f53\u3059\u308b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u5168\u3066\u3068\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```rb:Rakefile\nrequire 'rake'\nrequire 'rspec/core/rake_task'\nrequire 'json'\n\ntask :spec    => 'spec:all'\ntask :default => :spec\n\nnamespace :spec do\n  hosts = JSON.load(File.new('hosts.json'))\n  task :all     => hosts.map {|h| h['name'] }\n  task :default => :all\n\n  hosts.each do |host|\n    name = host['name']\n    desc \"Run serverspec tests to #{name}\"\n    RSpec::Core::RakeTask.new(name) do |t|\n      ENV['TARGET_HOST'] = name\n      t.pattern = \"spec/{#{host['roles'].join(',')}}/*_spec.rb\"\n    end\n  end\nend\n```\n\n\u305d\u306e\u305f\u3081\u3001\u4f8b\u3048\u3070\u4eca\u56de\u306e\u5834\u5408\u3001spec\u4ee5\u4e0b\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u914d\u7f6e\u3059\u308c\u3070\u3001test-server-01\u3067\u306fDB\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u307f\u3001test-server-02\u3067\u306fWeb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u307f\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3044\u3063\u305f\u5177\u5408\u3067\u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u7ba1\u7406\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n```shell-session\n\u251c Rakefile\n\u251c get_zabbix_hosts.rb\n\u251c hosts.json\n\u2514 spec\n\u3000\u251c DB\n\u3000\u2502\u3000\u2514 postgresql_spec.rb\n\u3000\u251c Web\n\u3000\u2502\u3000\u2514 apache_spec.rb\n\u3000\u251c Zabbix servers\n\u3000\u2502\u3000\u2514 zabbix_server_spec.rb\n\u3000\u2514 spec_helper.rb\n```\n\n## \u30c6\u30b9\u30c8\u5b9f\u884c\n\n```shell-session:\u5168\u30db\u30b9\u30c8\u306b\u5b9f\u884c\u3059\u308b\u5834\u5408\n$ rake spec:all (rake spec\u3060\u3051\u3067\u3082OK)\n```\n\n```shell-session:\u500b\u5225\u306e\u30db\u30b9\u30c8\u6bce\u306b\u5b9f\u884c\u3059\u308b\u5834\u5408\n$ rake spec:test-server-01\n```\n\n## Rakefile\u5185\u3067\u5168\u3066\u5b8c\u7d50\u3055\u305b\u308b\n\n\u307e\u305f\u3001\u4e0a\u8a18\u3067get_zabbix_hosts.rb\u3067\u5225\u3067\u5207\u308a\u51fa\u3057\u305f\u51e6\u7406\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5168\u3066Rakefile\u306b\u542b\u3081\u3066\u3001rake spec\u5b9f\u884c\u6642\u306b\u5168\u51e6\u7406\u3092\u4e00\u62ec\u5b9f\u884c\u3055\u305b\u308b\u3068\u3044\u3063\u305f\u3053\u3068\u3082\u3082\u3061\u308d\u3093\u53ef\u80fd\u3067\u3059\u3002\n\n```rb:Rakefile\nrequire 'rake'\nrequire 'rspec/core/rake_task'\nrequire 'json'\nrequire 'net/http'\n\nZABBIX_URL = \"http://localhost:50008/zabbix/api_jsonrpc.php\"\nZABBIX_USER = \"Admin\"\nZABBIX_PASSWORD = \"zabbix\"\n\nZABBIX_URI = URI.parse(ZABBIX_URL)\nZABBIX_API_HEADER = {'Content-Type' =>'application/json-rpc'}\nAPI_REQUEST_BASE = Net::HTTP::Post.new(ZABBIX_URI.request_uri, initheader = ZABBIX_API_HEADER)\napi_connection = nil\n# api_connection is user.login returned value.\n# {\"jsonrpc\"=>\"2.0\", \"result\"=>\"099adde3cea983cece7c0f03195791eb\", \"id\"=>1}\n\n\ndef login\n  params = {user: ZABBIX_USER, password: ZABBIX_PASSWORD}\n\n  API_REQUEST_BASE.body = {method: \"user.login\", auth: nil, params: params, id: 1, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\ndef api_access(uri, request)\n  response = nil\n\n  http = Net::HTTP.new(uri.host, uri.port)\n  http.start do |h|\n    response = h.request(request)\n  end\n  return JSON.parse(response.body)\nend\n\ndef get_host_list(api_connection)\n  params = {output: \"extend\", selectGroups: \"true\", selectInterfaces: \"extend\"}\n\n  API_REQUEST_BASE.body = {method: \"host.get\", auth: api_connection[\"result\"], params: params, id: 2, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\ndef get_hostgroup_list(api_connection, hostgroup_ids)\n  params = {output: \"extend\", groupids: hostgroup_ids}\n\n  API_REQUEST_BASE.body = {method: \"hostgroup.get\", auth: api_connection[\"result\"], params: params, id: 3, jsonrpc: \"2.0\"}.to_json\n\n  return api_access(ZABBIX_URI, API_REQUEST_BASE)\nend\n\n## main ##\nresult = []\n\napi_connection = login()\nhosts = get_host_list(api_connection)\n\n\nhosts[\"result\"].each do |h|\n  host = {}\n  h[\"interfaces\"].each do |interface|\n    if interface[\"useip\"] == \"1\" then\n      host = {:name => interface[\"ip\"]}\n    else\n      host = {:name => interface[\"dns\"]}\n    end\n    break\n  end\n  groups = get_hostgroup_list(api_connection, h[\"groups\"].map!{|group| group.values}.flatten)\n  group_names = groups[\"result\"].map {|group| group[\"name\"]}\n  host[:roles] = group_names\n\n  result << host\nend\n\nhosts = JSON.dump(result)\n\n\ntask :spec    => 'spec:all'\ntask :default => :spec\n\nnamespace :spec do\n  hosts = JSON.load(File.new('hosts.json'))\n  p hosts\n  task :all     => hosts.map {|h| h['name'] }\n  task :default => :all\n\n  hosts.each do |host|\n    name = host['name']\n    desc \"Run serverspec tests to #{name}\"\n    RSpec::Core::RakeTask.new(name) do |t|\n      ENV['TARGET_HOST'] = name\n      t.pattern = \"spec/{#{host['roles'].join(',')}}/*_spec.rb\"\n    end\n  end\nend\n```\n\n## Serverspec\u672c\u3067\u306f\n\n\u4eca\u56de\u306e\u3053\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306fServerspec\u672c\u306e\u4e2d\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u3082\u3068\u306b\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u66f8\u7c4d\u306e\u4e2d\u3067\u306fConsul\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u30db\u30b9\u30c8\u4e00\u89a7\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u81ea\u52d5\u5b9f\u884c\u3055\u305b\u305f\u308a\u3001AWS\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u81ea\u52d5\u5b9f\u884c\u3055\u305b\u305f\u308a\u3068\u3044\u3063\u305f\u60c5\u5831\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u975e\u5e38\u306b\u3044\u308d\u3093\u306a\u60c5\u5831\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u306e\u305c\u3072\u4e00\u8aad\u3055\u308c\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\nhttp://www.amazon.co.jp/dp/4873117097\n\n## \u307e\u3068\u3081\n\n\u57fa\u672c\u7684\u306b\u306fServerspec\u306fRuby\u3067\u51e6\u7406\u3092\u66f8\u3051\u3070\u3069\u3093\u306a\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u4eca\u56de\u306e\u3088\u3046\u306b\u69d8\u3005\u306a\u30c4\u30fc\u30eb\u3068\u9023\u643a\u3055\u305b\u308b\u3053\u3068\u3067\u52b9\u679c\u7684\u306a\u7ba1\u7406\u304c\u5b9f\u73fe\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\n"}