{"tags": ["Python", "python3", "Ruby", "Ruby2.2"], "context": "\n\n\u6982\u8981\nRuby\u306eArray\u3001Python\u306elist\u306e\u5178\u578b\u7684\u306a\u64cd\u4f5c\u306e\u307e\u3068\u3081\u3002\nPython(Ruby)\u3092\u5b66\u7fd2\u3057\u59cb\u3081\u305f\u3070\u304b\u308a\u306eRubyist(Pythonista)\u7528\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u53c2\u8003 : C++\u7248\u306f\u3053\u3061\u3089 Ruby-C++ \u914d\u5217\u64cd\u4f5c\u306e\u5bfe\u5fdc\u307e\u3068\u3081\n\n\u524d\u63d0\u6761\u4ef6\n\nPython 3.5.1\nRuby 2.2.4\n\n\n\u53c2\u8003\u60c5\u5831\n\nRuby\n\n\nhttp://docs.ruby-lang.org/ja/2.2.0/class/Enumerable.html\n\n\nPython\n\n\nhttp://docs.python.jp/3.5/tutorial/introduction.html#lists\nhttp://docs.python.jp/3.5/tutorial/datastructures.html#more-on-lists\nhttp://kesin.hatenablog.com/entry/2013/05/12/004541\nhttp://www.walbrix.com/jp/blog/2014-01-findfirst-in-scala-and-python.html\n\n\n\n\n\u30e1\u30bd\u30c3\u30c9\n\nsize\n\nruby\n\n[1,2,3].size   #=> 3\n\n\npython\n\nlen( [1,2,3] )   #=> 3\n\n\neach\n\u8981\u7d20\u306b\u5bfe\u3057\u3066\u30eb\u30fc\u30d7\u3092\u56de\u3059\n\nruby\n\n[1,2,3,4,5].each do |x|\n  puts 2*x    #=> 2,4,6,8,10\nend\n\n\npython\n\nfor x in [1,2,3,4,5]:\n    print(2*x)\n\n\neach_with_index\nindex\u3068\u4e00\u7dd2\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059\n\nruby\n\n[5,4,3,2,1].each_with_index do |x,idx|\n  print \"#{idx}:#{x}, \"\nend\n# => 0:5, 1:4, 2:3, 3:2, 4:1,\n\n\npython\n\nfor idx,x in enumerate( [5,4,3,2,1] ):\n    print(\"{0}:{1}, \".format(idx,x), end=\"\")\n\n\n+\n\u914d\u5217\u306e\u7d50\u5408\n\nruby\n\n\n\nconcat \u3060\u3068\u7834\u58ca\u7684\u306a\u64cd\u4f5c, +\u3060\u3068\u975e\u7834\u58ca\u7684\u64cd\u4f5c\n\n\n\n[1,2,3] + [4,5]     # [1,2,3,4,5]\n\n\npython\n\n\n\nextend \u3060\u3068\u7834\u58ca\u7684\u64cd\u4f5c\u3002+\u3060\u3068\u975e\u7834\u58ca\u7684\u64cd\u4f5c\n\n\n\n[1,2,3] + [4,5]\n\n\npush (<<)\n\u672b\u5c3e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\n\nruby\n\na = [1,2]\na << 3\n# a => [1,2,3]\n\n\npython\n\na = [1,2]\na.append(3)\n# a => [1,2,3]\n\n\nmap\n\nruby\n\n[1,2,3].map {|x| 2*x }  #=> [2,4,6]\n\n\npython\n\n\n\nmap\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3082\u3088\u3044\u304c\u3001\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u304c\u30e2\u30c0\u30f3\u3089\u3057\u3044\u3002\n\n\n\n[ 2*x for x in [1,2,3] ]                 # => [2,4,6]\nlist( map( lambda x: 2*x, [1,2,3] ) )    # => [2,4,6]\n\n\nfind\n\nruby\n\n\n\u8981\u7d20\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306fnil\u304c\u8fd4\u308b\n\n\n\n[7,8,9,10,11].find {|x| x%5 == 0 }  #=> 10\n\n\npython\n\n\n\u3042\u307e\u308a\u826f\u3044\u8a18\u6cd5\u304c\u307f\u3064\u304b\u3089\u306a\u3044\n\n\n\n[ x for x in [7,8,9,10,11] if x % 5 == 0 ][0]   #=> 10\n\n\n\u8ffd\u8a18: http://stackoverflow.com/questions/9868653/find-first-list-item-that-matches-criteria\n\n\u7b2c\u4e8c\u5f15\u6570\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\nnext((x for x in [7,8,9,10,11] if x % 5 == 0), None)\n\n\nfind_all\n\nruby\n\n[1,2,3,4,5].find_all {|x| x>3 }  #=> [4,5]\n\n\npython\n\n\nfilter\u304b\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3046\n\n\n\n[ x for x in [1,2,3,4,5] if x > 3]     #=> [4,5]\nlist( filter( lambda x: x>3, [1,2,3,4,5] ) )    #=> [4,5]\n\n\nsort\n\nruby\n\n[4,1,3,2,5].sort  #=> [1,2,3,4,5]\n\n\npython\n\nsorted( [4,1,3,2,5] )   #=> [1,2,3,4,5]\n\n\nsort_by\n\nruby\n\n[4,1,2,3,5].sort_by {|x| (3-x).abs }  #=> [3,4,2,1,5]\n\n\npython\n\nsorted( [4,1,3,2,5], key= lambda x: abs(3-x) )\n\n\nindex\n\nruby\n\n\n\u8a72\u5f53\u8981\u7d20\u304c\u306a\u3051\u308c\u3070nil\u304c\u8fd4\u308b\n\n\n\n[5,1,4,2,3].index(2)  #=> 3\n\n\npython\n\n\n\u8a72\u5f53\u8981\u7d20\u304c\u306a\u3051\u308c\u3070\u4f8b\u5916\u304c\u767a\u751f\n\n\n\n[5,1,4,2,3].index(2)  #=> 3\n\n\nall?\n\nruby\n\n[2,4,6,8].all? {|x| x % 2 == 0 }  #=> true\n[2,4,6,9].all? {|x| x % 2 == 0 }  #=> false\n\n\npython\n\nall( x%2==0 for x in [2,4,6,8] )   #=> True\nall( x%2==0 for x in [2,4,6,9] )   #=> False\n\n\nsum\n\nruby\n\n\ninject\u3092\u4f7f\u3046\n\n\n\n[1,3,5].inject(:+)   #=> 9\n\n\npython\n\n\n\u7d44\u307f\u8fbc\u307f\u95a2\u6570sum\u3092\u4f7f\u3046\n\n\n\nsum( [1,3,5] )\n\n\ninject (reduce)\n\nruby\n\n[1,2,3,4,5].inject(1) {|acc,x| acc*x }   #=> 120\n[1,2,3,4,5].inject(\"\") {|acc,x| acc + (x%2==0?'e':'o') }   #=> oeoeo\n\n\npython\n\n\nreduce\u95a2\u6570\u3092\u4f7f\u3046\u3002Python2\u307e\u3067\u306f\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3002Python3\u304b\u3089\u306f functools\u3092import\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\n\nimport functools\nfunctools.reduce( lambda acc,x: acc*x, [1,2,3,4,5], 1 )\nfunctools.reduce( lambda acc,x: acc+(\"e\" if x%2==0 else \"o\") , [1,2,3,4,5], \"\" )\n\n\nuniq\n\nruby\n\n[5,1,1,2,3,5,5].uniq  #=> [5,1,2,3]\n\n\npython\n\n\nset\u306b\u5165\u308c\u3066\u304b\u3089list\u306b\u5909\u63db\u3059\u308b\u3002\u9806\u756a\u306f\u4fdd\u5b58\u3055\u308c\u306a\u3044\u3002\n\u9806\u756a\u3092\u4fdd\u5b58\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30eb\u30fc\u30d7\u3092\u56de\u3059\u3057\u304b\u306a\u3044\u3088\u3046\u3060\u3002\n\n\nhttp://www.lifewithpython.com/2013/11/python-remove-duplicates-from-lists.html\n\n\n\n\n\nlist( set( [5,1,1,2,3,5,5] ) )\n\nli_uniq = []\nfor x in [5,1,1,2,3,5,5]:\n  if x not in li_uniq:\n    li_uniq.append(x)\nli_uniq    #=> [5,1,2,3]\n\n\nuniq {block}\n\nruby\n\n\n\u30d6\u30ed\u30c3\u30af\u3092\u8a55\u4fa1\u3057\u305f\u7d50\u679c\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u524a\u9664\u3059\u308b\n\n\n\n[4,5,1,2,3,4,5].uniq {|x| x % 3 }   #=> [4,5,3]\n\n\npython\n\nli_uniq = []\nset_uniq = set()\nfor x in [4,5,1,2,3,4,5]:\n  if x % 3 not in set_uniq:\n    li_uniq.append(x)\n    set_uniq.add(x%3)\nli_uniq                    #=> [4,5,3]\n\n\njoin\n\nruby\n\n[1,5,3,2].join(\":\")  #=> \"1:5:3:2\"\n\n\npython\n\n\nString\u306bjoin\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3068\u3044\u3046\u306e\u304c\u975e\u5e38\u306b\u308f\u304b\u308a\u3065\u3089\u3044\u3002\u914d\u5217\u306f\u6587\u5b57\u5217\u578b\u306b\u660e\u793a\u7684\u306b\u5909\u63db\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3002\n\n\n\n\":\".join(map(str, [1,5,3,2]))\n\n\nreverse\n\nruby\n\n[1,2,3].reverse  #=> [3,2,1]\na = [1,2,3]\na.reverse!\na                #=> [3,2,1]\n\n\npython\n\n\nList\u306ereverse\u30e1\u30bd\u30c3\u30c9\u306f\u7834\u58ca\u7684\u64cd\u4f5c\u3002\n\u975e\u7834\u58ca\u7684\u306a\u64cd\u4f5c\u306f\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u306ereversed\u3092\u4f7f\u3046\u3002\n\n\n\nlist( reversed([1,2,3]) )\n\na = [1,2,3]\na.reverse()\na                #=> [3,2,1]\n\n\ngroup_by\n\nruby\n\n[\"cat\",\"bat\",\"bear\",\"camel\",\"alpaca\"].group_by {|x| x[0]}\n# {\"c\"=>[\"cat\", \"camel\"], \"b\"=>[\"bat\", \"bear\"], \"a\"=>[\"alpaca\"]}\n\n\npython\n\n\n\u30eb\u30fc\u30d7\u3092\u56de\u3057\u3066dictionary\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304f\n\n\n\nd = {}\nfor x in [\"cat\",\"bat\",\"bear\",\"camel\",\"alpaca\"]:\n    key = x[0]\n    if key not in d:\n        d[key] = []\n    d[key].append(x)\nd        # => {'c': ['cat', 'camel'], 'a': ['alpaca'], 'b': ['bat', 'bear']}\n\n\nshuffle\n\nruby\n\n[1,2,3,4,5,6,7].shuffle   #=> [2, 6, 4, 7, 5, 3, 1]\n\n\npython\n\nimport random\na = [1,2,3,4,5,6,7]\nrandom.shuffle(a)\na                       #=> [4, 5, 6, 2, 7, 1, 3]\n\n# \u6982\u8981\n\nRuby\u306eArray\u3001Python\u306elist\u306e\u5178\u578b\u7684\u306a\u64cd\u4f5c\u306e\u307e\u3068\u3081\u3002\n\nPython(Ruby)\u3092\u5b66\u7fd2\u3057\u59cb\u3081\u305f\u3070\u304b\u308a\u306eRubyist(Pythonista)\u7528\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u53c2\u8003 : C++\u7248\u306f\u3053\u3061\u3089 [Ruby-C++ \u914d\u5217\u64cd\u4f5c\u306e\u5bfe\u5fdc\u307e\u3068\u3081](http://qiita.com/yohm13/items/60bd7959ca9c2ff58224)\n\n# \u524d\u63d0\u6761\u4ef6\n\n- Python 3.5.1\n- Ruby 2.2.4\n\n## \u53c2\u8003\u60c5\u5831\n\n- Ruby\n    - http://docs.ruby-lang.org/ja/2.2.0/class/Enumerable.html\n- Python\n    - http://docs.python.jp/3.5/tutorial/introduction.html#lists\n    - http://docs.python.jp/3.5/tutorial/datastructures.html#more-on-lists\n    - http://kesin.hatenablog.com/entry/2013/05/12/004541\n    - http://www.walbrix.com/jp/blog/2014-01-findfirst-in-scala-and-python.html\n\n# \u30e1\u30bd\u30c3\u30c9\n\n## size\n\n- ruby\n\n```rb\n[1,2,3].size   #=> 3\n```\n\n- python\n\n```py3\nlen( [1,2,3] )   #=> 3\n```\n\n## each\n\n\u8981\u7d20\u306b\u5bfe\u3057\u3066\u30eb\u30fc\u30d7\u3092\u56de\u3059\n\n- ruby\n\n```rb\n[1,2,3,4,5].each do |x|\n  puts 2*x    #=> 2,4,6,8,10\nend\n```\n\n- python\n\n```py3\nfor x in [1,2,3,4,5]:\n    print(2*x)\n```\n\n## each_with_index\n\n\nindex\u3068\u4e00\u7dd2\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059\n\n- ruby\n\n```rb\n[5,4,3,2,1].each_with_index do |x,idx|\n  print \"#{idx}:#{x}, \"\nend\n# => 0:5, 1:4, 2:3, 3:2, 4:1,\n```\n\n- python\n\n```py3\nfor idx,x in enumerate( [5,4,3,2,1] ):\n    print(\"{0}:{1}, \".format(idx,x), end=\"\")\n```\n\n## +\n\n\u914d\u5217\u306e\u7d50\u5408\n\n- ruby\n  - `concat` \u3060\u3068\u7834\u58ca\u7684\u306a\u64cd\u4f5c, `+`\u3060\u3068\u975e\u7834\u58ca\u7684\u64cd\u4f5c\n\n```rb\n[1,2,3] + [4,5]     # [1,2,3,4,5]\n```\n\n- python\n  - `extend` \u3060\u3068\u7834\u58ca\u7684\u64cd\u4f5c\u3002`+`\u3060\u3068\u975e\u7834\u58ca\u7684\u64cd\u4f5c\n\n```py3\n[1,2,3] + [4,5]\n```\n\n## push (<<)\n\n\u672b\u5c3e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\n\n- ruby\n\n```rb\na = [1,2]\na << 3\n# a => [1,2,3]\n```\n\n- python\n\n```py3\na = [1,2]\na.append(3)\n# a => [1,2,3]\n```\n\n## map\n\n- ruby\n\n```rb\n[1,2,3].map {|x| 2*x }  #=> [2,4,6]\n```\n\n- python\n    - `map`\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3082\u3088\u3044\u304c\u3001\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u304c\u30e2\u30c0\u30f3\u3089\u3057\u3044\u3002\n\n```py3\n[ 2*x for x in [1,2,3] ]                 # => [2,4,6]\nlist( map( lambda x: 2*x, [1,2,3] ) )    # => [2,4,6]\n```\n\n## find\n\n- ruby\n  - \u8981\u7d20\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306fnil\u304c\u8fd4\u308b\n\n```rb\n[7,8,9,10,11].find {|x| x%5 == 0 }  #=> 10\n```\n\n- python\n    - \u3042\u307e\u308a\u826f\u3044\u8a18\u6cd5\u304c\u307f\u3064\u304b\u3089\u306a\u3044\n\n```py3\n[ x for x in [7,8,9,10,11] if x % 5 == 0 ][0]   #=> 10\n```\n\n- \u8ffd\u8a18: http://stackoverflow.com/questions/9868653/find-first-list-item-that-matches-criteria\n    - \u7b2c\u4e8c\u5f15\u6570\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n```py3\nnext((x for x in [7,8,9,10,11] if x % 5 == 0), None)\n```\n\n\n## find_all\n\n- ruby\n\n```rb\n[1,2,3,4,5].find_all {|x| x>3 }  #=> [4,5]\n```\n\n- python\n    - filter\u304b\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3046\n\n```py3\n[ x for x in [1,2,3,4,5] if x > 3]     #=> [4,5]\nlist( filter( lambda x: x>3, [1,2,3,4,5] ) )    #=> [4,5]\n```\n\n## sort\n\n- ruby\n\n```rb\n[4,1,3,2,5].sort  #=> [1,2,3,4,5]\n```\n\n- python\n\n```py3\nsorted( [4,1,3,2,5] )   #=> [1,2,3,4,5]\n```\n\n## sort_by\n\n- ruby\n\n```rb\n[4,1,2,3,5].sort_by {|x| (3-x).abs }  #=> [3,4,2,1,5]\n```\n\n- python\n\n```py3\nsorted( [4,1,3,2,5], key= lambda x: abs(3-x) )\n```\n\n## index\n\n- ruby\n    - \u8a72\u5f53\u8981\u7d20\u304c\u306a\u3051\u308c\u3070nil\u304c\u8fd4\u308b\n\n```rb\n[5,1,4,2,3].index(2)  #=> 3\n```\n\n- python\n    - \u8a72\u5f53\u8981\u7d20\u304c\u306a\u3051\u308c\u3070\u4f8b\u5916\u304c\u767a\u751f\n\n```py3\n[5,1,4,2,3].index(2)  #=> 3\n```\n\n## all?\n\n- ruby\n\n```rb\n[2,4,6,8].all? {|x| x % 2 == 0 }  #=> true\n[2,4,6,9].all? {|x| x % 2 == 0 }  #=> false\n```\n\n- python\n\n```rb\nall( x%2==0 for x in [2,4,6,8] )   #=> True\nall( x%2==0 for x in [2,4,6,9] )   #=> False\n```\n\n## sum\n\n- ruby\n  - inject\u3092\u4f7f\u3046\n\n```rb\n[1,3,5].inject(:+)   #=> 9\n```\n\n- python\n    - \u7d44\u307f\u8fbc\u307f\u95a2\u6570sum\u3092\u4f7f\u3046\n\n```py3\nsum( [1,3,5] )\n```\n\n## inject (reduce)\n\n- ruby\n\n```rb\n[1,2,3,4,5].inject(1) {|acc,x| acc*x }   #=> 120\n[1,2,3,4,5].inject(\"\") {|acc,x| acc + (x%2==0?'e':'o') }   #=> oeoeo\n```\n\n- python\n    - reduce\u95a2\u6570\u3092\u4f7f\u3046\u3002Python2\u307e\u3067\u306f\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3002Python3\u304b\u3089\u306f `functools`\u3092import\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```py3\nimport functools\nfunctools.reduce( lambda acc,x: acc*x, [1,2,3,4,5], 1 )\nfunctools.reduce( lambda acc,x: acc+(\"e\" if x%2==0 else \"o\") , [1,2,3,4,5], \"\" )\n```\n\n## uniq\n\n- ruby\n\n```rb\n[5,1,1,2,3,5,5].uniq  #=> [5,1,2,3]\n```\n\n- python\n    - set\u306b\u5165\u308c\u3066\u304b\u3089list\u306b\u5909\u63db\u3059\u308b\u3002\u9806\u756a\u306f\u4fdd\u5b58\u3055\u308c\u306a\u3044\u3002\n    - \u9806\u756a\u3092\u4fdd\u5b58\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30eb\u30fc\u30d7\u3092\u56de\u3059\u3057\u304b\u306a\u3044\u3088\u3046\u3060\u3002\n        - http://www.lifewithpython.com/2013/11/python-remove-duplicates-from-lists.html\n\n```py3\nlist( set( [5,1,1,2,3,5,5] ) )\n\nli_uniq = []\nfor x in [5,1,1,2,3,5,5]:\n  if x not in li_uniq:\n    li_uniq.append(x)\nli_uniq    #=> [5,1,2,3]\n```\n\n## uniq {block}\n\n- ruby\n  - \u30d6\u30ed\u30c3\u30af\u3092\u8a55\u4fa1\u3057\u305f\u7d50\u679c\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u524a\u9664\u3059\u308b\n\n```rb\n[4,5,1,2,3,4,5].uniq {|x| x % 3 }   #=> [4,5,3]\n```\n\n- python\n\n```py3\nli_uniq = []\nset_uniq = set()\nfor x in [4,5,1,2,3,4,5]:\n  if x % 3 not in set_uniq:\n    li_uniq.append(x)\n    set_uniq.add(x%3)\nli_uniq                    #=> [4,5,3]\n```\n\n## join\n\n- ruby\n\n```rb\n[1,5,3,2].join(\":\")  #=> \"1:5:3:2\"\n```\n\n- python\n    - String\u306b`join`\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3068\u3044\u3046\u306e\u304c\u975e\u5e38\u306b\u308f\u304b\u308a\u3065\u3089\u3044\u3002\u914d\u5217\u306f\u6587\u5b57\u5217\u578b\u306b\u660e\u793a\u7684\u306b\u5909\u63db\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3002\n\n```py3\n\":\".join(map(str, [1,5,3,2]))\n```\n\n## reverse\n\n- ruby\n\n```rb\n[1,2,3].reverse  #=> [3,2,1]\na = [1,2,3]\na.reverse!\na                #=> [3,2,1]\n```\n\n- python\n    - List\u306ereverse\u30e1\u30bd\u30c3\u30c9\u306f\u7834\u58ca\u7684\u64cd\u4f5c\u3002\n    - \u975e\u7834\u58ca\u7684\u306a\u64cd\u4f5c\u306f\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u306e`reversed`\u3092\u4f7f\u3046\u3002\n\n```py3\nlist( reversed([1,2,3]) )\n\na = [1,2,3]\na.reverse()\na                #=> [3,2,1]\n```\n\n## group_by\n\n- ruby\n\n```rb\n[\"cat\",\"bat\",\"bear\",\"camel\",\"alpaca\"].group_by {|x| x[0]}\n# {\"c\"=>[\"cat\", \"camel\"], \"b\"=>[\"bat\", \"bear\"], \"a\"=>[\"alpaca\"]}\n```\n\n- python\n    - \u30eb\u30fc\u30d7\u3092\u56de\u3057\u3066dictionary\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304f\n\n```py3\nd = {}\nfor x in [\"cat\",\"bat\",\"bear\",\"camel\",\"alpaca\"]:\n    key = x[0]\n    if key not in d:\n        d[key] = []\n    d[key].append(x)\nd        # => {'c': ['cat', 'camel'], 'a': ['alpaca'], 'b': ['bat', 'bear']}\n```\n\n## shuffle\n\n- ruby\n\n```rb\n[1,2,3,4,5,6,7].shuffle   #=> [2, 6, 4, 7, 5, 3, 1]\n```\n\n- python\n\n```py3\nimport random\na = [1,2,3,4,5,6,7]\nrandom.shuffle(a)\na                       #=> [4, 5, 6, 2, 7, 1, 3]\n```\n"}