{"context": "\n\nUsage\n\nRouters\u306e\u8aac\u660e\n\nurls.py\nfrom rest_framework import routers\n\nrouter = routers.SimpleRouter()\nrouter.register(r'users', UserViewSet)\nrouter.register(r'accounts', AccountViewSet)\nurlpatterns = router.urls\n\n\nregister\u30e1\u30bd\u30c3\u30c9\u306b\u306f\u3001\u4e0b\u8a18\u306e\uff12\u3064\u306e\u5f15\u6570\u304c\u5fc5\u9808\u3068\u306a\u308a\u307e\u3059\u3002\n\nprefix - URL\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3002\nviewset - viewset class\u3092\u6307\u5b9a\u3002\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u8ffd\u52a0\u306e\u5f15\u6570\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\n\nbase_name - \u30d9\u30fc\u30b9\u306fURL\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\n\u3082\u3057\u3001base_name\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\nveiwset\u306emodel\u3001\u307e\u305f\u306fqueryset\u5c5e\u6027\u3092\u5143\u306b\n\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u30e2\u30c7\u30eb\u307e\u305f\u306f\u3001\u30af\u30a8\u30ea\u30bb\u30c3\u30c8\u5c5e\u6027\u304c\u306a\u3044veiwset\u3092\u767b\u9332\u3059\u308b\u5834\u5408\u3001\nbase_name\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u4e0a\u8a18\u306e\u4f8b\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306eURL\u30d1\u30bf\u30fc\u30f3\u3068\u306a\u308a\u307e\u3059\u3002\n\n\nURL pattern: ^users/$ Name: 'user-list'\n\nURL pattern: ^users/{pk}/$ Name: 'user-detail'\n\nURL pattern: ^accounts/$ Name: 'account-list'\n\nURL pattern: ^accounts/{pk}/$ Name: 'account-detail'\n\n\n\n\u203bbase_name\u5f15\u6570\u306f\u3001\u30d3\u30e5\u30fc\u540d\u306e\u30d1\u30bf\u30fc\u30f3\u306e\u6700\u521d\u306e\u90e8\u5206\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002\n\u4e0a\u8a18\u306e\u4f8b\u3067\u3044\u3046\u3068\u3001users\u307e\u305f\u306faccounts\u90e8\u5206\u3067\u3059\u3002\n\u901a\u5e38\u306f\u3001 base_name\u5f15\u6570\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\n\u3082\u3057\u3001viewset\u306eget_queryset\u30e1\u30bd\u30c3\u30c9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3044\u305f\u5834\u5408\u3001\n.queryset\u5c5e\u6027\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n'base_name' argument not specified, and could not automatically determine the name from the viewset, as it does not have a '.queryset' attribute.\n\n\nrouters\u306e\u4f7f\u3044\u65b9\nrouter\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e.urls\u5c5e\u6027\u306f\u3001URL\u30d1\u30bf\u30fc\u30f3\u306e\u30ea\u30b9\u30c8\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u306b\u3064\u3044\u3066\u306e\u4f7f\u7528\u65b9\u6cd5\u306f\u3001\u8907\u6570\u3042\u308b\u306e\u3067\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u3001\u65e2\u5b58\u306e\u30d3\u30e5\u30fc\u306e\u30ea\u30b9\u30c8\u306brouter.urls\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \n\nurls.py\nrouter = routers.SimpleRouter()\nrouter.register(r'users', UserViewSet)\nrouter.register(r'accounts', AccountViewSet)\nurlpatterns = [\n    url(r'^forgot-password/$', ForgotPasswordFormView.as_view()),\n]\nurlpatterns += router.urls\n\n\ndjango\u306e\u624b\u6cd5\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\nurls.py\nurlpatterns = [\n    url(r'^forgot-password/$', ForgotPasswordFormView.as_view()),\n    url(r'^', include(router.urls))\n]\n\n\n\u30eb\u30fc\u30bf\u306eURL\u30d1\u30bf\u30fc\u30f3\u306e\u3001\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nurls.py\nurlpatterns = [\n    url(r'^forgot-password/$', ForgotPasswordFormView.as_view()),\n    url(r'^api/', include(router.urls, namespace='api'))\n]\n\n\n\n\u30a8\u30ad\u30b9\u30c8\u30e9\u30ea\u30f3\u30af\u3068\u30a2\u30af\u30b7\u30e7\u30f3\nviewset\u306emethod\u306b\u3001@detail_route @list_route\u306edecorater\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b)UserViewSet\u30af\u30e9\u30b9\u306emethod\u3092\u3001decorater\u3067\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\nviews.py\nfrom myapp.permissions import IsAdminOrIsSelf\nfrom rest_framework.decorators import detail_route\n\nclass UserViewSet(ModelViewSet):\n    ...\n\n    @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf])\n    def set_password(self, request, pk=None):\n        ...\n\n\n\u4ee5\u4e0b\u306eURL\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u3055\u3089\u306b\u751f\u6210\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002  \n\nURL pattern: ^users/{pk}/set_password/$ Name: 'user-set-password'\n\n\n\u4f5c\u6210\u3057\u305f\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u3001\u81ea\u52d5\u3067\u751f\u6210\u3055\u308c\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306eURL\u3092\u4f7f\u7528\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001\nurl_path\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \n\u4f8b) \u30ab\u30b9\u30bf\u30e0\u30a2\u30af\u30b7\u30e7\u30f3\u3078\u306eURL\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f ^users/{pk}/change-password/$, \u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002:\n\nviews.py\nfrom myapp.permissions import IsAdminOrIsSelf\nfrom rest_framework.decorators import detail_route\n\nclass UserViewSet(ModelViewSet):\n    ...\n\n    @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf], url_path='change-password')\n    def set_password(self, request, pk=None):\n        ...\n\n\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u4ee5\u4e0b\u306eURL\u30d1\u30bf\u30fc\u30f3\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002  \n\nURL pattern: ^users/{pk}/change-password/$ Name: 'user-change-password'\n\n\n\nAPI Guide\n\nSimpleRouter\nrouter\u306b\u306f\u3001 list, create, retrieve, update, partial_update , destroy \u30a2\u30af\u30b7\u30e7\u30f3\u306e\u30eb\u30fc\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\nviewset\u306emethod\u3092\u3001@detail_route\u307e\u305f\u306f@list_route\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\nURL Style\nHTTP Method\nAction\nURL Name\n\n\n{prefix}/\n GET \nlist\n{basename}-list\n\n\nPOST\ncreate\n\n\n{prefix}/{methodname}/\nGET, or as specified by `methods` argument\n`@list_route` decorated method\n{basename}-{methodname}\n\n\n{prefix}/{lookup}/\n GET \n retrieve \n{basename}-detail\n\n\nPUT\nupdate\n\n\nPATCH\npartial_update\n\n\nDELETE\ndestroy\n\n\n{prefix}/{lookup}/{methodname}/\nGET, or as specified by `methods` argument\n`@list_route` decorated method\n{basename}-{methodname}\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fSimpleRouter\u306b\u3088\u3063\u3066\u4f5c\u6210\u3055\u308c\u305fURL\u306f\u3001\u672b\u5c3e\u306b\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u4ed8\u52a0\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u30eb\u30fc\u30bf\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u3001trailing_slash\u5f15\u6570\u3092False\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u89e3\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nrouter = SimpleRouter(trailing_slash=False)\n\nDjango\u3067\u306f\u3001\u672b\u5c3e\u306e\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u304c\u3001\nRails\u3084\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306a\u3069\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\n\u30b9\u30e9\u30c3\u30b7\u30e5\u306e\u6709\u7121\u306f\u3001\u597d\u307f\u306b\u3088\u308a\u307e\u3059\u304c\u3001JavaScript\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3001\u4ed5\u69d8\u304c\u6c7a\u3081\u3089\u308c\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3001\n\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nThe router will match lookup values containing any characters except slashes and period characters. For a more restrictive (or lenient) lookup pattern, set the lookup_value_regex attribute on the viewset. \n\u4f8b) \u4e0b\u8a18\u306f\u3001\u691c\u7d22\u3092UUID\u306b\u5236\u9650\u3059\u308b\u5834\u5408\u3067\u3059\u3002\nclass MyModelViewSet(mixins.RetrieveModelMixin, viewsets.GenericViewSet):\n    lookup_field = 'my_model_id'\n    lookup_value_regex = '[0-9a-f]{32}'\n\n#Usage\n##Routers\u306e\u8aac\u660e\n\n```python:urls.py\nfrom rest_framework import routers\n\nrouter = routers.SimpleRouter()\nrouter.register(r'users', UserViewSet)\nrouter.register(r'accounts', AccountViewSet)\nurlpatterns = router.urls\n```\nregister\u30e1\u30bd\u30c3\u30c9\u306b\u306f\u3001\u4e0b\u8a18\u306e\uff12\u3064\u306e\u5f15\u6570\u304c\u5fc5\u9808\u3068\u306a\u308a\u307e\u3059\u3002\n>`prefix` - URL\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3002\n>`viewset` - viewset class\u3092\u6307\u5b9a\u3002\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u8ffd\u52a0\u306e\u5f15\u6570\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\n>`base_name` - \u30d9\u30fc\u30b9\u306fURL\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\n\u3082\u3057\u3001base_name\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\nveiwset\u306emodel\u3001\u307e\u305f\u306fqueryset\u5c5e\u6027\u3092\u5143\u306b\n\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n\u30e2\u30c7\u30eb\u307e\u305f\u306f\u3001\u30af\u30a8\u30ea\u30bb\u30c3\u30c8\u5c5e\u6027\u304c\u306a\u3044veiwset\u3092\u767b\u9332\u3059\u308b\u5834\u5408\u3001\n`base_name`\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u4e0a\u8a18\u306e\u4f8b\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306eURL\u30d1\u30bf\u30fc\u30f3\u3068\u306a\u308a\u307e\u3059\u3002\n>* URL pattern: `^users/$` Name: `'user-list'`\n>* URL pattern: `^users/{pk}/$` Name: `'user-detail'`\n>* URL pattern: `^accounts/$` Name: `'account-list'`\n>* URL pattern: `^accounts/{pk}/$` Name: `'account-detail'`\n\n\u203b`base_name`\u5f15\u6570\u306f\u3001\u30d3\u30e5\u30fc\u540d\u306e\u30d1\u30bf\u30fc\u30f3\u306e\u6700\u521d\u306e\u90e8\u5206\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002\n\u4e0a\u8a18\u306e\u4f8b\u3067\u3044\u3046\u3068\u3001`users`\u307e\u305f\u306f`accounts`\u90e8\u5206\u3067\u3059\u3002\n\u901a\u5e38\u306f\u3001 `base_name`\u5f15\u6570\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\n\u3082\u3057\u3001`viewset`\u306e`get_queryset`\u30e1\u30bd\u30c3\u30c9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3044\u305f\u5834\u5408\u3001\n`.queryset`\u5c5e\u6027\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```py\n'base_name' argument not specified, and could not automatically determine the name from the viewset, as it does not have a '.queryset' attribute.\n```\n\n##routers\u306e\u4f7f\u3044\u65b9\nrouter\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e`.urls`\u5c5e\u6027\u306f\u3001URL\u30d1\u30bf\u30fc\u30f3\u306e\u30ea\u30b9\u30c8\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u306b\u3064\u3044\u3066\u306e\u4f7f\u7528\u65b9\u6cd5\u306f\u3001\u8907\u6570\u3042\u308b\u306e\u3067\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u3001\u65e2\u5b58\u306e\u30d3\u30e5\u30fc\u306e\u30ea\u30b9\u30c8\u306brouter.urls\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \n\n\n```python:urls.py\nrouter = routers.SimpleRouter()\nrouter.register(r'users', UserViewSet)\nrouter.register(r'accounts', AccountViewSet)\nurlpatterns = [\n    url(r'^forgot-password/$', ForgotPasswordFormView.as_view()),\n]\nurlpatterns += router.urls\n```\n\ndjango\u306e\u624b\u6cd5\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```python:urls.py\nurlpatterns = [\n    url(r'^forgot-password/$', ForgotPasswordFormView.as_view()),\n    url(r'^', include(router.urls))\n]\n```\n\n\u30eb\u30fc\u30bf\u306eURL\u30d1\u30bf\u30fc\u30f3\u306e\u3001\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```python:urls.py\nurlpatterns = [\n    url(r'^forgot-password/$', ForgotPasswordFormView.as_view()),\n    url(r'^api/', include(router.urls, namespace='api'))\n]\n```\n\n###\u30a8\u30ad\u30b9\u30c8\u30e9\u30ea\u30f3\u30af\u3068\u30a2\u30af\u30b7\u30e7\u30f3  \nviewset\u306emethod\u306b\u3001`@detail_route` `@list_route`\u306edecorater\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4f8b)UserViewSet\u30af\u30e9\u30b9\u306emethod\u3092\u3001decorater\u3067\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\n```python:views.py\nfrom myapp.permissions import IsAdminOrIsSelf\nfrom rest_framework.decorators import detail_route\n\nclass UserViewSet(ModelViewSet):\n    ...\n\n    @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf])\n    def set_password(self, request, pk=None):\n        ...\n```\n\n\u4ee5\u4e0b\u306eURL\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u3055\u3089\u306b\u751f\u6210\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002  \n\n* URL pattern: `^users/{pk}/set_password/$` Name: `'user-set-password'`  \n\n\u4f5c\u6210\u3057\u305f\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u3001\u81ea\u52d5\u3067\u751f\u6210\u3055\u308c\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306eURL\u3092\u4f7f\u7528\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001  \nurl_path\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \n\n\u4f8b) \u30ab\u30b9\u30bf\u30e0\u30a2\u30af\u30b7\u30e7\u30f3\u3078\u306eURL\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f `^users/{pk}/change-password/$`, \u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002:\n\n\n```python:views.py\nfrom myapp.permissions import IsAdminOrIsSelf\nfrom rest_framework.decorators import detail_route\n\nclass UserViewSet(ModelViewSet):\n    ...\n\n    @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf], url_path='change-password')\n    def set_password(self, request, pk=None):\n        ...\n```\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u4ee5\u4e0b\u306eURL\u30d1\u30bf\u30fc\u30f3\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002  \n\n* URL pattern: `^users/{pk}/change-password/$` Name: `'user-change-password'`  \n \n# API Guide\n## SimpleRouter\n\nrouter\u306b\u306f\u3001 `list`, `create`, `retrieve`, `update`, `partial_update` , `destroy` \u30a2\u30af\u30b7\u30e7\u30f3\u306e\u30eb\u30fc\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\nviewset\u306emethod\u3092\u3001`@detail_route`\u307e\u305f\u306f`@list_route`\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n<TABLE>\n<TR><TH>URL Style</TH><TH>HTTP Method</TH><TH>Action</TH><TH>URL Name</TH></TR>\n<TR><TD ROWSPAN=2>{prefix}/</TD><TD> GET </TD><TD>list</TD><TD ROWSPAN=2>{basename}-list</TD></TR>\n<TR><TD>POST</TD><TD>create</TD></TR>\n<TR><TD>{prefix}/{methodname}/</TD><TD>GET, or as specified by `methods` argument</TD><TD>`@list_route` decorated method</TD><TD>{basename}-{methodname}</TD></TR>\n<TR><TD ROWSPAN=4>{prefix}/{lookup}/</TD><TD> GET </TD><TD> retrieve </TD><TD ROWSPAN=4>{basename}-detail</TD></TR>\n<TR><TD>PUT</TD><TD>update</TD></TR>\n<TR><TD>PATCH</TD><TD>partial_update</TD></TR>\n<TR><TD>DELETE</TD><TD>destroy</TD></TR>\n<TR><TD>{prefix}/{lookup}/{methodname}/</TD><TD>GET, or as specified by `methods` argument</TD><TD>`@list_route` decorated method</TD><TD>{basename}-{methodname}</TD></TR>\n</TABLE>\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fSimpleRouter\u306b\u3088\u3063\u3066\u4f5c\u6210\u3055\u308c\u305fURL\u306f\u3001\u672b\u5c3e\u306b\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u4ed8\u52a0\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u30eb\u30fc\u30bf\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u3001trailing_slash\u5f15\u6570\u3092False\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u89e3\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```python:\nrouter = SimpleRouter(trailing_slash=False)\n```\n\nDjango\u3067\u306f\u3001\u672b\u5c3e\u306e\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u304c\u3001\nRails\u3084\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\b\u306a\u3069\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u30b9\u30e9\u30c3\u30b7\u30e5\u306e\u6709\u7121\u306f\u3001\u597d\u307f\u306b\u3088\u308a\u307e\u3059\u304c\u3001JavaScript\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3001\u4ed5\u69d8\u304c\u6c7a\u3081\u3089\u308c\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3001\n\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nThe router will match lookup values containing any characters except slashes and period characters. For a more restrictive (or lenient) lookup pattern, set the<code><FONT COLOR='RED'> lookup_value_regex</FONT></code> attribute on the viewset. \n\n\n\u4f8b) \u4e0b\u8a18\u306f\u3001\u691c\u7d22\u3092UUID\u306b\u5236\u9650\u3059\u308b\u5834\u5408\u3067\u3059\u3002\n\n```py\nclass MyModelViewSet(mixins.RetrieveModelMixin, viewsets.GenericViewSet):\n    lookup_field = 'my_model_id'\n    lookup_value_regex = '[0-9a-f]{32}'\n```\n", "tags": ["django-rest-framework3.1", "Python2.8", "Django1.7"]}