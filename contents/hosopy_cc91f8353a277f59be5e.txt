{"context": "\n\nTL;DR\n\nRails5\u3067\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305fAction Cable\u306eJava\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\nhttps://github.com/hosopy/actioncable-client-java\n\n\nAction Cable\nRails 5.0\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u76ee\u7389\u6a5f\u80fd\u306e\u4e00\u3064\u306bAction Cable\u304c\u3042\u308a\u307e\u3059\u3002\n\u8a73\u7d30\u306fAction Cable Overview\u306b\u8b72\u308b\u3068\u3057\u3066\u3001Action Cable\u306e\u6982\u8981\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nRails\u3068WebSocket\u306e\u7d71\u5408\u3092\u5bb9\u6613\u306b\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\nWebSocket\u306e\u30b5\u30d6\u30d7\u30ed\u30c8\u30b3\u30eb\u7684\u306a\u3082\u306e\u3092\u5b9a\u7fa9\u3057\u3066\u3001Pub/Sub\u306e\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u3059\u308b\n\n\n\u305f\u3060\u3057\u3001\u5b9f\u969b\u306b\u306f\u30b5\u30d6\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u30671\u3001socket.io\u306e\u3088\u3046\u306a\u3082\u306e\u3060\u3068\u6349\u3048\u308c\u3070\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n\u5b9f\u306f\u3001\u307e\u3060\u672c\u5bb6\u306e\u958b\u767a\u304c\u30a2\u30eb\u30d5\u30a1\u7248\u3060\u3063\u305f\u534a\u5e74\u4ee5\u4e0a\u524d\u306b\u3001\u8208\u5473\u672c\u4f4d\u3067Java\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u88c5\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u5f53\u6642\u306f\u672a\u78ba\u5b9a\u306a\u8981\u7d20\u3082\u591a\u304b\u3063\u305f\u305f\u3081\u3001\u3042\u308b\u7a0b\u5ea6\u5b8c\u6210\u3057\u305f\u3068\u3053\u308d\u3067\u653e\u7f6e\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u3001Rails 5.0\u304c\u6b63\u5f0f\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3053\u3068\u3092\u53d7\u3051\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u8272\u3005\u6574\u7406\u3057\u30660.1.0\u3068\u3057\u3066\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u7d39\u4ecb\nGitHub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/hosopy/actioncable-client-java\nREADME\u306e\u713c\u304d\u76f4\u3057\u3067\u3059\u304c\u3001\u4f7f\u3044\u65b9\u3092\u7c21\u5358\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nGradle\u306b\u3088\u308b\u5c0e\u5165\nJitPack\u7d4c\u7531\u3067\u3001Gradle\u306b\u3088\u308b\u5c0e\u5165\u304c\u53ef\u80fd\u3067\u3059\u3002\nrepositories {\n    jcenter()\n    maven { url \"https://jitpack.io\" }\n}\n\ndependencies {\n    compile 'com.github.hosopy:actioncable-client-java:0.1.0'\n}\n\n\n\u57fa\u672c\u7684\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nActionCable,Channel,Subscription\u306a\u3069\u3001\u57fa\u672c\u7684\u306b\u306fJavaScript\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u4e16\u754c\u89b3\u3092\u5408\u308f\u305b\u3066\u3044\u307e\u3059\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d7\u3051\u6e21\u3057\u306b\u3064\u3044\u3066\u306f\u3001GSON\u306b\u4f9d\u5b58\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f2\u3002\n// 1. Setup\nURI uri = new URI(\"ws://cable.example.com\");\nConsumer consumer = ActionCable.createConsumer(uri);\n\n// 2. Create subscription\nChannel appearanceChannel = new Channel(\"AppearanceChannel\");\nSubscription subscription = consumer.getSubscriptions().create(appearanceChannel);\n\nsubscription\n    .onConnected(new Subscription.ConnectedCallback() {\n        @Override\n        public void call() {\n            // Called when the subscription has been successfully completed\n        }\n    }).onRejected(new Subscription.RejectedCallback() {\n        @Override\n        public void call() {\n            // Called when the subscription is rejected by the server\n        }\n    }).onReceived(new Subscription.ReceivedCallback() {\n        @Override\n        public void call(JsonElement data) {\n            // Called when the subscription receives data from the server\n        }\n    }).onDisconnected(new Subscription.DisconnectedCallback() {\n        @Override\n        public void call() {\n            // Called when the subscription has been closed\n        }\n    }).onFailed(new Subscription.FailedCallback() {\n        @Override\n        public void call(ActionCableException e) {\n            // Called when the subscription encounters any error\n        }\n    });\n\n// 3. Establish connection\nconsumer.connect();\n\n// 4. Perform any action\nsubscription.perform(\"away\");\n\n// 5. Perform any action using JsonObject(GSON)\nJsonObject params = new JsonObject();\nparams.addProperty(\"foo\", \"bar\");\nsubscription.perform(\"appear\", params);\n\n\nChannel\u3078\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u6307\u5b9a\n\u5148\u307b\u3069\u306e\u4f8b\u3067\u306fChannel\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\nChannel chatChannel = new Channel(\"ChatChannel\");\nchatChannel.addParam(\"room\", \"Best Room\");\nSubscription subscription = consumer.getSubscriptions().create(chatChannel);\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u30c7\u30fc\u30bf\u578b\u3068\u3057\u3066\u306f\u3001Number, String, Boolean,JsonElement(GSON)\u3067\u3059\u3002\nchatChannel.addParam(\"room_id\", 1);\nchatChannel.addParam(\"room\", \"Best Room\");\nchatChannel.addParam(\"private\", true);\nchatChannel.addParam(\"params\", new JsonObject());\n\n\n\u30ab\u30b9\u30bf\u30e0Subscription\u306e\u5b9a\u7fa9\n\u57fa\u672c\u7684\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306fSubscription#perform(\"action_name\", params)\u3067\u5b9f\u884c\u3057\u307e\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u7a2e\u985e\u306b\u5bfe\u5fdc\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3067\u304d\u305f\u307b\u3046\u304c\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u305f\u30ab\u30b9\u30bf\u30e0Subscription\u306e\u5b9a\u7fa9\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\npublic interface ChatSubscription extends Subscription {\n    /*\n     * Equivalent:\n     *   perform(\"join\")\n     */\n    @Perform(\"join\")\n    void join();\n\n    /*\n     * Equivalent:\n     *   perform(\"send_message\", JsonObjectFactory.fromJson(\"{body: \\\"...\\\", private: true}\"))\n     */\n    @Perform(\"send_message\")\n    void sendMessage(@Data(\"body\") String body, @Data(\"private\") boolean isPrivate);\n}\n\nSubscriptions#create()\u306e\u7b2c2\u5f15\u6570\u306b\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5bfe\u5fdc\u3057\u305fSubscription\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nChannel chatChannel = new Channel(\"ChatChannel\");\nChatSubscription subscription = consumer.getSubscriptions().create(appearanceChannel, ChatSubscription.class);\n\nconsumer.open();\n\nsubscription.join();\nsubscription.sendMessage(\"Hello\", true);\n\n\nOption\n\u305d\u306e\u4ed6\u3001\u3044\u304f\u3064\u304bOption\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u9577\u304f\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u8a73\u3057\u304f\u306fREADME#Options\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\nSwift\u7248\nJava\u3068\u4e00\u7dd2\u306bSwift\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3082\u958b\u767a\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u9014\u4e2d\u3067\u9762\u5012\u306b\u306a\u3063\u305f\u65e2\u306bGitHub\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u3063\u305f\u305f\u3081\u3001Swift\u7248\u306f\u304a\u8535\u5165\u308a\u3068\u306a\u308b\u4e88\u5b9a\u3067\u3059\u3002\u3002\ndanielrhodes/Swift-ActionCableClient\n\n\n\n\nWebSocket Protocol Registries\u00a0\u21a9\n\n\n\u30a4\u30b1\u3066\u306a\u3044\u6c17\u304c\u3059\u308b\u306e\u3067\u8003\u3048\u76f4\u3057\u305f\u3044\u00a0\u21a9\n\n\n\n# TL;DR\n\n* Rails5\u3067\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305fAction Cable\u306eJava\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\n* https://github.com/hosopy/actioncable-client-java\n\n# Action Cable\n\n[Rails 5.0\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f](http://weblog.rubyonrails.org/2016/6/30/Rails-5-0-final/)\u304c\u3001\u76ee\u7389\u6a5f\u80fd\u306e\u4e00\u3064\u306b**Action Cable**\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u8a73\u7d30\u306f[Action Cable Overview](http://railsguides.jp/action_cable_overview.html)\u306b\u8b72\u308b\u3068\u3057\u3066\u3001Action Cable\u306e\u6982\u8981\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n* Rails\u3068WebSocket\u306e\u7d71\u5408\u3092\u5bb9\u6613\u306b\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n* WebSocket\u306e\u30b5\u30d6\u30d7\u30ed\u30c8\u30b3\u30eb\u7684\u306a\u3082\u306e\u3092\u5b9a\u7fa9\u3057\u3066\u3001Pub/Sub\u306e\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u3059\u308b\n    * \u305f\u3060\u3057\u3001\u5b9f\u969b\u306b\u306f\u30b5\u30d6\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u3067[^1]\u3001[socket.io](http://socket.io/)\u306e\u3088\u3046\u306a\u3082\u306e\u3060\u3068\u6349\u3048\u308c\u3070\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n[^1]: [WebSocket Protocol Registries](http://www.iana.org/assignments/websocket/websocket.xml#subprotocol-name)\n\n\n\u5b9f\u306f\u3001\u307e\u3060\u672c\u5bb6\u306e\u958b\u767a\u304c\u30a2\u30eb\u30d5\u30a1\u7248\u3060\u3063\u305f\u534a\u5e74\u4ee5\u4e0a\u524d\u306b\u3001\u8208\u5473\u672c\u4f4d\u3067Java\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u88c5\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u5f53\u6642\u306f\u672a\u78ba\u5b9a\u306a\u8981\u7d20\u3082\u591a\u304b\u3063\u305f\u305f\u3081\u3001\u3042\u308b\u7a0b\u5ea6\u5b8c\u6210\u3057\u305f\u3068\u3053\u308d\u3067\u653e\u7f6e\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u3001Rails 5.0\u304c\u6b63\u5f0f\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3053\u3068\u3092\u53d7\u3051\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u8272\u3005\u6574\u7406\u3057\u3066[0.1.0](https://github.com/hosopy/actioncable-client-java/tree/0.1.0)\u3068\u3057\u3066\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n# \u7d39\u4ecb\n\nGitHub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\n\nhttps://github.com/hosopy/actioncable-client-java\n\n[README](https://github.com/hosopy/actioncable-client-java/blob/master/README.md)\u306e\u713c\u304d\u76f4\u3057\u3067\u3059\u304c\u3001\u4f7f\u3044\u65b9\u3092\u7c21\u5358\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## Gradle\u306b\u3088\u308b\u5c0e\u5165\n\n[JitPack](https://jitpack.io/)\u7d4c\u7531\u3067\u3001Gradle\u306b\u3088\u308b\u5c0e\u5165\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n```groovy\nrepositories {\n    jcenter()\n    maven { url \"https://jitpack.io\" }\n}\n\ndependencies {\n    compile 'com.github.hosopy:actioncable-client-java:0.1.0'\n}\n```\n\n## \u57fa\u672c\u7684\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\n`ActionCable`,`Channel`,`Subscription`\u306a\u3069\u3001\u57fa\u672c\u7684\u306b\u306fJavaScript\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u4e16\u754c\u89b3\u3092\u5408\u308f\u305b\u3066\u3044\u307e\u3059\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d7\u3051\u6e21\u3057\u306b\u3064\u3044\u3066\u306f\u3001GSON\u306b\u4f9d\u5b58\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f[^2]\u3002\n\n[^2]: \u30a4\u30b1\u3066\u306a\u3044\u6c17\u304c\u3059\u308b\u306e\u3067\u8003\u3048\u76f4\u3057\u305f\u3044\n\n```java\n// 1. Setup\nURI uri = new URI(\"ws://cable.example.com\");\nConsumer consumer = ActionCable.createConsumer(uri);\n\n// 2. Create subscription\nChannel appearanceChannel = new Channel(\"AppearanceChannel\");\nSubscription subscription = consumer.getSubscriptions().create(appearanceChannel);\n\nsubscription\n    .onConnected(new Subscription.ConnectedCallback() {\n        @Override\n        public void call() {\n            // Called when the subscription has been successfully completed\n        }\n    }).onRejected(new Subscription.RejectedCallback() {\n        @Override\n        public void call() {\n            // Called when the subscription is rejected by the server\n        }\n    }).onReceived(new Subscription.ReceivedCallback() {\n        @Override\n        public void call(JsonElement data) {\n            // Called when the subscription receives data from the server\n        }\n    }).onDisconnected(new Subscription.DisconnectedCallback() {\n        @Override\n        public void call() {\n            // Called when the subscription has been closed\n        }\n    }).onFailed(new Subscription.FailedCallback() {\n        @Override\n        public void call(ActionCableException e) {\n            // Called when the subscription encounters any error\n        }\n    });\n\n// 3. Establish connection\nconsumer.connect();\n\n// 4. Perform any action\nsubscription.perform(\"away\");\n\n// 5. Perform any action using JsonObject(GSON)\nJsonObject params = new JsonObject();\nparams.addProperty(\"foo\", \"bar\");\nsubscription.perform(\"appear\", params);\n```\n\n## Channel\u3078\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u6307\u5b9a\n\n\u5148\u307b\u3069\u306e\u4f8b\u3067\u306f`Channel`\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```java\nChannel chatChannel = new Channel(\"ChatChannel\");\nchatChannel.addParam(\"room\", \"Best Room\");\nSubscription subscription = consumer.getSubscriptions().create(chatChannel);\n```\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u30c7\u30fc\u30bf\u578b\u3068\u3057\u3066\u306f\u3001`Number`, `String`, `Boolean`,`JsonElement(GSON)`\u3067\u3059\u3002\n\n```java\nchatChannel.addParam(\"room_id\", 1);\nchatChannel.addParam(\"room\", \"Best Room\");\nchatChannel.addParam(\"private\", true);\nchatChannel.addParam(\"params\", new JsonObject());\n```\n\n## \u30ab\u30b9\u30bf\u30e0Subscription\u306e\u5b9a\u7fa9\n\n\u57fa\u672c\u7684\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306f`Subscription#perform(\"action_name\", params)`\u3067\u5b9f\u884c\u3057\u307e\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u7a2e\u985e\u306b\u5bfe\u5fdc\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3067\u304d\u305f\u307b\u3046\u304c\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u3053\u3067\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u305f\u30ab\u30b9\u30bf\u30e0Subscription\u306e\u5b9a\u7fa9\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java\npublic interface ChatSubscription extends Subscription {\n    /*\n     * Equivalent:\n     *   perform(\"join\")\n     */\n    @Perform(\"join\")\n    void join();\n\n    /*\n     * Equivalent:\n     *   perform(\"send_message\", JsonObjectFactory.fromJson(\"{body: \\\"...\\\", private: true}\"))\n     */\n    @Perform(\"send_message\")\n    void sendMessage(@Data(\"body\") String body, @Data(\"private\") boolean isPrivate);\n}\n```\n\n`Subscriptions#create()`\u306e\u7b2c2\u5f15\u6570\u306b\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5bfe\u5fdc\u3057\u305f`Subscription`\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```java\nChannel chatChannel = new Channel(\"ChatChannel\");\nChatSubscription subscription = consumer.getSubscriptions().create(appearanceChannel, ChatSubscription.class);\n\nconsumer.open();\n\nsubscription.join();\nsubscription.sendMessage(\"Hello\", true);\n```\n\n## Option\n\n\u305d\u306e\u4ed6\u3001\u3044\u304f\u3064\u304bOption\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u9577\u304f\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u8a73\u3057\u304f\u306f[README#Options](https://github.com/hosopy/actioncable-client-java/blob/master/README.md#options)\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n# Swift\u7248\n\nJava\u3068\u4e00\u7dd2\u306bSwift\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3082\u958b\u767a\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001~~\u9014\u4e2d\u3067\u9762\u5012\u306b\u306a\u3063\u305f~~\u65e2\u306bGitHub\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u3063\u305f\u305f\u3081\u3001Swift\u7248\u306f\u304a\u8535\u5165\u308a\u3068\u306a\u308b\u4e88\u5b9a\u3067\u3059\u3002\u3002\n\n[danielrhodes/Swift-ActionCableClient](https://github.com/danielrhodes/Swift-ActionCableClient)\n\n", "tags": ["Rails", "ActionCable", "Java"]}