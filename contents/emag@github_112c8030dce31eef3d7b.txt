{"context": "\u3053\u308c\u306f Java EE Advent Calendar 2016 \u306e 20 \u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n19\u65e5\u76ee\u306f @suke_masa \u3055\u3093\u306e Thymeleaf\u3067Apache Shiro\u3092\u4f7f\u3046\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u3066\u307f\u305f \u3067\u3057\u305f\u3002\n21\u65e5\u76ee\u306f @TTakakiyo \u3055\u3093\u306e WebSphere Liberty\u3067Java EE\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092One-JAR\u5316\u3059\u308b \u3067\u3059\u3002\n\n\n\n\u5bfe\u8c61\u3068\u3059\u308b\u74b0\u5883\n\nWildFly Swarm 2016.12.1\nJDK 8\nMaven 3.3.9\n\n\n\u5b8c\u5168\u306a\u30b3\u30fc\u30c9\n\u672c\u6587\u4e2d\u3067\u306e\u8aac\u660e\u7528\u30b3\u30fc\u30c9\u306f\u65ad\u7247\u7684\u306a\u3082\u306e\u3067\u3059\u3002\u52d5\u4f5c\u3059\u308b\u5b8c\u5168\u306a\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016\n\nWildFly Swarm \u3063\u3066\u306a\u306b?\n\u307e\u305a\u3001WildFly Swarm \u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\nWildFly Swarm \u306f Java EE \u306b\u3088\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u53ef\u80fd jar(uber jar)\u5316\u3067\u304d\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\u57fa\u76e4\u3068\u306a\u308b Java EE \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u306f\u305d\u306e\u540d\u306e\u901a\u308a WildFly \u3067\u3059\u3002\n\u307e\u305a\u306f\u96f0\u56f2\u6c17\u3092\u3064\u304b\u3080\u305f\u3081\u306b\u3001JAX-RS \u3092\u7528\u3044\u305f\u7c21\u5358\u306a API \u30b5\u30fc\u30d0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016/helloworld\n\u4eca\u56de\u5bfe\u8c61\u3068\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u985e\u306f\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3068\u3057\u3066 Maven \u3092\u5229\u7528\u3057\u307e\u3059\u306e\u3067\u3001\u307e\u305a\u306f pom.xml \u306b\u5fc5\u8981\u306a\u4f9d\u5b58\u6027\u3068 uber jar \u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n<dependencyManagement>\n  <dependencies>\n    <dependency>\n      <!-- (1) bom \u3092\u5229\u7528 -->\n      <groupId>org.wildfly.swarm</groupId>\n      <artifactId>bom-all</artifactId>\n      <version>${version.wildfly-swarm}</version>\n      <type>pom</type>\n      <scope>import</scope>\n    </dependency>\n  </dependencies>\n</dependencyManagement>\n\n<dependencies>\n  <dependency>\n    <!-- (2) JAX-RS \u3092\u5229\u7528\u3002\u4e0a\u8a18\u306e\u3088\u3046\u306b bom \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067 version \u6307\u5b9a\u306f\u4e0d\u8981 -->\n    <groupId>org.wildfly.swarm</groupId>\n    <artifactId>jaxrs</artifactId>\n  </dependency>\n</dependencies>\n\n<build>\n  [...]\n\n  <plugins>\n    <plugin>\n      <!-- (3) uber-jar \u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u8a2d\u5b9a -->\n      <groupId>org.wildfly.swarm</groupId>\n      <artifactId>wildfly-swarm-plugin</artifactId>\n      <version>${version.wildfly-swarm}</version>\n      <configuration>\n        <mainClass>wildflyswarm.Bootstrap</mainClass>\n      </configuration>\n      <executions>\n        <execution>\n          <goals>\n            <goal>package</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n</build>\n\n\u6b21\u306b JAX-RS \u3092\u5229\u7528\u3057\u305f\u7c21\u5358\u306a API \u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u4e0b\u8a18\u306f /hello \u306b GET \u3059\u308b\u3068 return \u306b\u6307\u5b9a\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u3000JSON \u3068\u3057\u3066\u8fd4\u3059\u3001\u3068\u3044\u3046\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\npackage helloworld;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/hello\")\npublic class HelloWorld {\n\n  @GET\n  @Produces(MediaType.APPLICATION_JSON)\n  public String hello() {\n    return \"{\\\"message\\\" : \\\"Hello, WildFly Swarm!\\\"}\";\n  }\n\n}\n\n\u6b21\u306b\u3000WildfFly Swarm \u3092\u5229\u7528\u3059\u308b\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u4e0a\u8a18\u306e pom.xml \u4e2d\u306e wildfly-swarm-plugin \u306e\u8a2d\u5b9a\u3067 <mainClass> \u3068\u3057\u3066\u6307\u5b9a\u3057\u305f\u3082\u306e\u3067\u3059\u3002\npackage wildflyswarm;\n\nimport helloworld.HelloWorld;\nimport org.jboss.shrinkwrap.api.ShrinkWrap;\nimport org.wildfly.swarm.Swarm;\nimport org.wildfly.swarm.jaxrs.JAXRSArchive;\n\npublic class Bootstrap {\n\n  public static void main(String[] args) throws Exception {\n    // (1) WildFly \u81ea\u8eab\u3092\u8868\u3059\n    Swarm swarm = new Swarm(args);\n\n    // (2) \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30fc\u30ab\u30a4\u30d6\n    JAXRSArchive archive = ShrinkWrap.create(JAXRSArchive.class);\n    archive.addClass(HelloWorld.class);\n\n    swarm\n      // (3) WildFly \u306e\u8d77\u52d5\n      .start()\n      // (4) \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30d7\u30ed\u30a4\n      .deploy(archive);\n  }\n\n}\n\norg.wildfly.swarm.Swarm \u304c WildFly \u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057(1)\u3001WildFly \u3092\u8d77\u52d5\u3057\u305f\u308a(3)\u3001\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30fc\u30ab\u30a4\u30d6(2)\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u308a\u3067\u304d\u307e\u3059(4)\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30fc\u30ab\u30a4\u30d6\u3068\u306f\u3001\u666e\u6bb5 Java EE \u306b\u3088\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3059\u308b\u969b\u306b\u30d3\u30eb\u30c9\u3059\u308b war \u306e\u3053\u3068\u3067\u3059\u3002\nWildFly Swarm \u3067\u306f ShrinkWrap \u3068\u3044\u3046\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5229\u7528\u3057\u30aa\u30f3\u30c7\u30de\u30f3\u30c9\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u3067\u5fc5\u8981\u306a\u3082\u306e\u306f\u4f5c\u6210\u5b8c\u4e86\u3067\u3059\u3002\u3042\u3068\u306f\u30d3\u30eb\u30c9\u3059\u308b\u3060\u3051\u3067 uber jar \u304c\u3067\u304d\u3042\u304c\u308a\u307e\u3059(uber jar \u306f -swarm \u3068\u3064\u3044\u305f\u3082\u306e\u3067\u3059)\u3002\n$ ./mvnw clean package && \\\n  java -jar target/helloworld-swarm.jar\n\n\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n$ curl localhost:8080/hello\n{\"message\" : \"Hello, WildFly Swarm!\"}\n\n\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f!\n\u305f\u3060\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001WildFly \u81ea\u4f53\u306e\u8a2d\u5b9a\u3092\u4e00\u5207\u3044\u3058\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u306a\u3093\u3089\u304b\u306e\u8a2d\u5b9a\u3082\u3057\u3066\u307f\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\u3053\u3053\u3067\u306f HTTPS \u30ea\u30b9\u30ca\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u3001\u4f9d\u5b58\u6027\u3068\u3057\u3066\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>management</artifactId>\n</dependency>\n\n\u5148\u307b\u3069\u306e wildflyswarm.Bootstrap \u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\npackage wildflyswarm;\n\n[...]\nimport org.wildfly.swarm.undertow.UndertowFraction;\n[...]\n\nSwarm swarm = new Swarm(args);\n\n// \u8ffd\u8a18\nswarm.fraction(\n  UndertowFraction.createDefaultFraction(\"keystore.jks\", \"password\", \"selfsigned\")\n);\n\nUndertowFraction.createDefaultFraction(...) \u306f\u5f15\u6570\u306b\u7b2c1\u5f15\u6570\u304b\u3089\u9806\u756a\u306b\u4ee5\u4e0b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u30d1\u30b9(\u76f8\u5bfe\u30d1\u30b9\u6307\u5b9a\u306e\u5834\u5408\u306f java \u5b9f\u884c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(user.dir)\u304b\u3089\u306e\u30d1\u30b9)\n\u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\n\u30b5\u30fc\u30d0\u8a3c\u660e\u66f8\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\n\n\n\u30ad\u30fc\u30b9\u30c8\u30a2\u306f\u30b5\u30f3\u30d7\u30eb\u3067\u7528\u610f\u3057\u3066\u3044\u308b keystore.jks \u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3054\u81ea\u8eab\u3067\u7528\u610f\u3057\u305f\u30ad\u30fc\u30b9\u30c8\u30a2\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u5024\u3092\u9069\u5b9c\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\n\n\u3053\u308c\u3060\u3051\u3067 HTTPS \u30ea\u30b9\u30ca\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u518d\u30d1\u30c3\u30b1\u30fc\u30b8\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n$ ./mvnw clean package && java -jar target/helloworld-swarm.jar\n$ curl https://localhost:8443/hello -k\n{\"message\" : \"Hello, WildFly Swarm!\"}\n\n\u3044\u3044\u3067\u3059\u306d\u3002\u306a\u304a\u3001HTTPS \u30ea\u30b9\u30ca\u3092\u6709\u52b9\u306b\u3057\u305f\u5834\u5408\u3001HTTP/2 \u304c\u5229\u7528\u53ef\u80fd\u306a\u74b0\u5883\u3067\u3042\u308c\u3070 HTTP/2 \u3082\u6709\u52b9\u5316\u3055\u308c\u307e\u3059\u3002\n$ curl --http2 https://localhost:8443/hello -kI\nHTTP/2 200\ncontent-type: application/json\ncontent-length: 37\ndate: Tue, 20 Dec 2016 04:07:28 GMT\n\n\u3053\u306e\u3088\u3046\u306b\u3001WildFly Swarm \u3067\u306f\u5f93\u6765\u306e Java EE \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3067\u5fc5\u8981\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff65\u8a2d\u5b9a\uff65\u30c7\u30d7\u30ed\u30a4\uff65\u8d77\u52d5\u304c\u5168\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u4e0a\u8a18\u306e UndertowFraction \u306e\u3088\u3046\u306b\u3001\u5fc5\u8981\u306a\u90e8\u5206\u3060\u3051 Fraction \u3068\u3044\u3046\u5358\u4f4d\u3067\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002org.wildfly.swarm:jaxrs \u306a\u3069\u3082 Fraction \u306e 1 \u3064\u3067\u3059\u3002\n\u307e\u305f\u3001WildFly Swarm \u306f Java EE \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092 uber jar \u5316\u3067\u304d\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u4e3b\u306b Microservices \u3067\u306e\u5229\u7528\u3092\u76ee\u7684\u3068\u3057\u305f\u72ec\u81ea\u6a5f\u80fd\u3084\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea(Netflix OSS \u3084 Zipkin/Brave \u306a\u3069)\u3068\u306e\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u6b21\u7ae0\u304b\u3089\u306f\u500b\u4eba\u7684\u306b\u6c17\u306b\u306a\u3063\u3066\u3044\u305f\u4e0b\u8a18\u6a5f\u80fd\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nMonitor\nZipkin\nEnhanced JAX-RS Client(\u305f\u3060\u3057\u52d5\u304b\u306a\u3044\u306e\u3067\u7d39\u4ecb\u3060\u3051\u3002\u3002)\n\n\nwar \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\n\u3068\u3001\u305d\u306e\u524d\u306b war \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u5148\u306e helloworld \u306f jar \u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001WildFly Swarm \u306f war \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3082\u53ef\u80fd\u3067\u3059\u3002war \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3067\u306f main() \u306f\u4e0d\u8981\u3067\u3059(\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5229\u7528\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093)\u3002\u307e\u305f\u3001uber jar \u4ee5\u5916\u306b war \u3082\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u3001Payara \u306a\u3069\u4ed6\u306e Java EE \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u5148\u307b\u3069\u306e helloworld \u3092 war \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306b\u5909\u66f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016/helloworld-war\npom.xml \u3067\u306e\u5909\u66f4\u70b9\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n\n<packaging>war</packaging> \u306b\u5909\u66f4\nmaven-war-plugin \u3092\u8ffd\u52a0(web.xml \u304c\u306a\u304f\u3066\u3082\u30d3\u30eb\u30c9\u3067\u304d\u308b\u3088\u3046\u306b)\nmainClass \u6307\u5b9a\u3092\u524a\u9664\n\n\u307e\u305f\u3001wildflyswarm.Bootstrap \u30af\u30e9\u30b9\u306f\u6d88\u3057\u3066\u3057\u307e\u3063\u3066\u5927\u4e08\u592b\u3067\u3059\u3002\n@@ -6,6 +6,7 @@\n   <groupId>javaee-ac-2016-wildflyswarm</groupId>\n   <artifactId>helloworld</artifactId>\n   <version>2016.12.1</version>\n+  <packaging>war</packaging>\n\n   <properties>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n@@ -15,6 +16,7 @@\n     <maven.compiler.target>1.8</maven.compiler.target>\n\n     <version.wildfly-swarm>${project.version}</version.wildfly-swarm>\n+    <version.maven-war-plugin>3.0.0</version.maven-war-plugin>\n   </properties>\n\n   <dependencyManagement>\n@@ -48,9 +50,6 @@\n         <groupId>org.wildfly.swarm</groupId>\n         <artifactId>wildfly-swarm-plugin</artifactId>\n         <version>${version.wildfly-swarm}</version>\n-        <configuration>\n-          <mainClass>wildflyswarm.Bootstrap</mainClass>\n-        </configuration>\n         <executions>\n           <execution>\n             <goals>\n@@ -59,6 +58,13 @@\n           </execution>\n         </executions>\n       </plugin>\n+      <plugin>\n+        <artifactId>maven-war-plugin</artifactId>\n+        <version>${version.maven-war-plugin}</version>\n+        <configuration>\n+          <failOnMissingWebXml>false</failOnMissingWebXml>\n+        </configuration>\n+      </plugin>\n     </plugins>\n   </build>\n\n\u6b21\u306b wildflyswarm.Bootstrap \u3067\u884c\u3063\u3066\u3044\u305f UndertowFraction.createDefaultFraction(\"keystore.jks\", \"password\", \"selfsigned\") \u306e\u90e8\u5206\u3092\u3069\u3046\u8a2d\u5b9a\u3059\u308b\u304b\u3067\u3059\u3002\u7b54\u3048\u306f\u5916\u304b\u3089\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u6307\u5b9a\u3059\u308b\u3001\u306a\u306e\u3067\u3059\u304c\u5177\u4f53\u7684\u306b\u306f\u4f55\u3092\u6307\u5b9a\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u4eca\u307e\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u5f8c\u3059\u3050\u306b\u51fa\u529b\u3055\u308c\u308b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u9577\u3044\u30ed\u30b0\u51fa\u529b\u306b\u6c17\u3065\u304b\u308c\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f WildFly Swarm \u3067\u8a2d\u5b9a\u53ef\u80fd\u306a\u7d44\u8fbc\u307f\u6e08\u306e\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u8a2d\u5b9a\u5024\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n2016-12-20 00:00:00,000 INFO  [org.wildfly.swarm] (main) WFSWARM0037: Configuration:\n  swarm.ajp.enable = false\n  swarm.ajp.port   = 8009\n  [...]\n\n\u3053\u306e\u9014\u4e2d\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u3066\u3044\u307e\u3057\u305f\u3002\nswarm.http.certificate.alias = selfsigned\nswarm.http.keystore.password = <redacted>\nswarm.http.keystore.path     = keystore.jks\n\n\u30ad\u30fc\u30b9\u30c8\u30a2\u95a2\u9023\u306f\u3053\u308c\u3089\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u3088\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\n\u6b8b\u5ff5\u306a\u304c\u3089\u73fe\u6642\u70b9(2016/12/20)\u3067\u306f\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306e\u4e00\u89a7\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\n\n\u3067\u306f\u4e0a\u8a18\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u305a\u3089\u305a\u3089\u3068\u4e26\u3079\u3066\u8d77\u52d5\u3057\u3066\u3082\u3088\u3044\u306e\u3067\u3059\u304c\u3001\u3082\u3046 1 \u3064\u3084\u308a\u65b9\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a project-stages.yml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u76f4\u4e0b\u306b\u7528\u610f\u3057\u3001\u305d\u3053\u306b\u66f8\u304d\u4e0b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nswarm:\n  http:\n    certificate.alias: selfsigned\n    keystore:\n      password: password\n      path: keystore.jks\n\n\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30c9\u30c3\u30c81\u3064\u5206\u3092\u533a\u5207\u308a\u306b\u30cd\u30b9\u30c8\u3055\u305b\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u3053\u307e\u3067\u3067\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u306e\u3067\u3001\u518d\u30d1\u30c3\u30b1\u30fc\u30b8/\u518d\u8d77\u52d5\u3092\u3057\u307e\u3059...\u3068\u3057\u3066\u3082\u3044\u3044\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u5225\u306e\u8d77\u52d5\u65b9\u6cd5\u3082\u3054\u7d39\u4ecb\u3057\u307e\u3057\u3087\u3046\u3002wildfly-swarm-plugin \u306b\u306f wildfly-swarm:run \u3068\u3044\u3046\u30b4\u30fc\u30eb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n$ ./mvnw clean wildfly-swarm:run\n\njar \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306e\u6642\u3068\u6319\u52d5\u306b\u306a\u3063\u3066\u3044\u308c\u3070\u554f\u984c\u306a\u3057\u3067\u3059\u3002\n\u3082\u3046 1 \u3064 project-stages.yml \u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001\u305d\u306e\u540d\u306e\u901a\u308a\u30b9\u30c6\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8ffd\u8a18\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nswarm:\n  http:\n    certificate.alias: selfsigned\n    keystore:\n      password: password\n      path: keystore.jks\n--- # \u3053\u3053\u304b\u3089\u8ffd\u8a18\nproject:\n  stage: production\nswarm:\n  undertow:\n    servers:\n      default-server:\n        http-listeners:\n          default:\n            enabled: false\n\n--- \u3067\u30b9\u30c6\u30fc\u30b8\u3092\u533a\u5207\u308a\u307e\u3059\u3002\u6700\u521d\u306b\u66f8\u3044\u305f\u30b9\u30c6\u30fc\u30b8\u6307\u5b9a\u304c\u306a\u3044\u3082\u306e\u306f default \u30b9\u30c6\u30fc\u30b8\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f production \u30b9\u30c6\u30fc\u30b8\u3067\u306f HTTP \u30ea\u30b9\u30ca(8080 \u30dd\u30fc\u30c8)\u306f\u6709\u52b9\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\ndefault \u3067\u8a2d\u5b9a\u3057\u305f\u5024\u306f\u4ed6\u306e\u30b9\u30c6\u30fc\u30b8\u3067\u3082\u5f15\u304d\u7d99\u304c\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n\u4e0a\u8a18\u3092\u8ffd\u8a18\u3057\u305f\u3089\u3001 production \u30b9\u30c6\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3057\u305f\u4e0a\u3067\u518d\u8d77\u52d5\u3057\u307e\u3059(\u518d\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306f\u4e0d\u8981\u3067\u3059)\u3002\n$ java -jar target/helloworld-swarm.jar -Dswarm.project.stage=production\n\n8080 \u30dd\u30fc\u30c8\u3067\u30ea\u30b9\u30f3\u3057\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n$ ss -alnp | grep <pid> | grep 8080\n# \u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\n\n\u305d\u306e\u4ed6 war \u3068 jar \u306e\u5404\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3067\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u3084\u3001project-stages.yml \u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u53c2\u8003\u304f\u3060\u3055\u3044\u3002\n\nhttp://wildfly-swarm.io/posts/to-war-or-jar/\nhttps://wildfly-swarm.gitbooks.io/wildfly-swarm-users-guide/content/v/2016.12.1/configuration/project_stages.html\n\n\nMonitor\n\u3061\u3087\u3063\u3068\u524d\u7f6e\u304d\u304c\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u3053\u304b\u3089 WildFly Swarm \u304c\u7528\u610f\u3057\u3066\u3044\u308b\u6a5f\u80fd\u306b\u3064\u3044\u3066 3 \u7a2e\u985e\u307b\u3069\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n1 \u3064\u76ee\u306f\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3067\u3059\u3002\u6a5f\u80fd\u306f\u9650\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001Spring Boot Actuator \u306e\u3088\u3046\u306a\u3082\u306e\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016/health\n\u4ee5\u4e0b\u306e\u4f9d\u5b58\u6027\u3092\u8ffd\u52a0\u3059\u308b\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u7528\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8(/node, /heap, /threads)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>monitor</artifactId>\n</dependency>\n\n\u8ffd\u52a0\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u305d\u308c\u305e\u308c\u898b\u3066\u307f\u307e\u3059\u3002\n\n/node\n\u30ce\u30fc\u30c9\u306e\u72b6\u614b\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nWildFly \u306b\u99b4\u67d3\u307f\u306e\u3042\u308b\u65b9\u5411\u304d\u306e\u8aac\u660e\u3092\u3059\u308b\u306a\u3089\u3070\u3001server-state \u306a\u3069\u306f CLI \u3067\u53d6\u5f97\u3067\u304d\u308b\u5c5e\u6027\u3067\u3059\u306d\n\n$ curl localhost:8080/node\n{\n    \"name\" : \"halo5\",\n    \"server-state\" : \"running\",\n    \"suspend-state\" : \"RUNNING\",\n    \"running-mode\" : \"NORMAL\",\n    \"uuid\" : \"99cf030e-f638-4aa8-9a78-398e8cf782d4\",\n    \"wfs-version\" : \"fixme\"\n}\n\n\n/heap\n\u5b9f\u884c\u3057\u3066\u3044\u308b JVM \u306e\u30d2\u30fc\u30d7\u60c5\u5831\u3067\u3059\u3002\n$ curl localhost:8080/heap\n{\n    \"heap-memory-usage\" : {\n        \"init\" : 257949696,\n        \"used\" : 62501624,\n        \"committed\" : 385351680,\n        \"max\" : 3666870272\n    },\n    \"non-heap-memory-usage\" : {\n        \"init\" : 2555904,\n        \"used\" : 71957736,\n        \"committed\" : 78274560,\n        \"max\" : -1\n    }\n}\n\n\n/threads\n\u30b9\u30ec\u30c3\u30c9\u306e\u60c5\u5831\u3067\u3059\u3002\n$ curl localhost:8080/threads\n{\n    \"thread-count\" : 130,\n    \"peak-thread-count\" : 145,\n    \"total-started-thread-count\" : 162,\n    \"current-thread-cpu-time\" : 921661,\n    \"current-thread-user-time\" : 0\n}\n\n\n\u30e6\u30fc\u30b6\u72ec\u81ea\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\n\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u306e\u4e00\u74b0\u3068\u3057\u3066\u30e6\u30fc\u30b6\u72ec\u81ea\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af API \u3082\u4f5c\u6210\u53ef\u80fd\u3067\u3059\u3002\n\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306f /health \u306b\u96c6\u7d04\u3055\u308c\u307e\u3059\u3002\n\u4f55\u3082\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u65e8\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\n$ curl localhost:8080/health -I\nHTTP/1.1 204 No health endpoints configured!\n\n\u3067\u306f 1 \u3064\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002JAX-RS \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u308b\u611f\u899a\u3067\u4f5c\u6210\u53ef\u80fd\u3067\u3059\u3002\npackage health;\n\nimport org.wildfly.swarm.monitor.Health;\nimport org.wildfly.swarm.monitor.HealthStatus;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport java.time.LocalDateTime;\n\n@Path(\"/health-check\")\npublic class HealthCheckResource {\n\n  @GET\n  @Path(\"/something\")\n  @Health\u3000// @Health \u3092\u4ed8\u4e0e\n  public HealthStatus checkSomething() {\u3000// HealthStatus \u3092\u8fd4\u3059\n    return HealthStatus\n      .named(\"something\") // \u540d\u524d\u3092\u3064\u3051\u308b(\u5fc5\u9808)\n      .up()\u3000// \u72b6\u614b\u306e\u8a2d\u5b9a(\u5fc5\u9808)\n      .withAttribute(\"date\", LocalDateTime.now().toString())\n      .withAttribute(\"time\", System.currentTimeMillis());\n  }\n\n}\n\n@Path \u306b\u6307\u5b9a\u3059\u308b\u30d1\u30b9\u306f\u306a\u3093\u3067\u3082\u3088\u3044\u3067\u3059\u304c\u3001\u30e1\u30bd\u30c3\u30c9\u30ec\u30d9\u30eb\u3067 @org.wildfly.swarm.monitor.Health \u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3068\u3001org.wildfly.swarm.monitor.HealthStatus \u3092\u8fd4\u308a\u5024\u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nHealthStatus \u306e\u8a2d\u5b9a\u306b\u306f\u3044\u304f\u3064\u304b\u3067\u304d\u3001\u6700\u4f4e\u9650\u5fc5\u8981\u306a\u306e\u306f named(...) \u3067\u540d\u524d\u3092\u3064\u3051\u308b\u3053\u3068\u3068\u3001\u72b6\u614b\u3092\u8868\u3059\u305f\u3081\u306b up() \u3082\u3057\u304f\u306f down() \u3092\u547c\u3093\u3067\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u307e\u305f withAttribute() \u3067\u306f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u5f62\u5f0f\u3067\u4efb\u610f\u306e\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u3067\u306f\u3053\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af API \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n$ curl localhost:8080/health-check/something -s | jq .\n{\n  \"id\": \"something\",\n  \"result\": \"UP\",\n  \"data\": {\n    \"date\": \"2016-12-20T00:00:00.000\",\n    \"time\": 1482159600000\n  }\n}\n\n\u6b21\u306b\u96c6\u7d04\u7528\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b /health \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n$ curl localhost:8080/health -s | jq .\n{\n  \"checks\": [\n    {\n      \"id\": \"something\",\n      \"result\": \"UP\",\n      \"data\": {\n        \"date\": \"2016-12-20T00:00:00.000\",\n        \"time\": 1482159600000\n      }\n    }\n  ],\n  \"outcome\": \"UP\"\n}\n\n\u3088\u3055\u305d\u3046\u3067\u3059\u304c\u30011 \u3064\u3060\u3068\u3042\u307e\u308a\u610f\u5473\u306a\u3044\u306e\u3067\u3001\u3082\u3046 1 \u3064\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af API \u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002something \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u5e38\u306b UP \u306a\u306e\u3067\u3001DOWN \u306b\u306a\u308b\u30d1\u30bf\u30fc\u30f3\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n@GET\n@Path(\"/unstable\")\n@Health\npublic HealthStatus unstable() {\n\n  return (Math.random() < 0.5) ?\n    HealthStatus\n      .named(\"unstable\")\n      .up()\n      .withAttribute(\"message\", \"Woo Hoo!\") :\n    HealthStatus\n      .named(\"unstable\")\n      .down()\n      .withAttribute(\"message\", \"Too Bad...\");\n}\n\n1/2 \u306e\u78ba\u7387\u3067 UP/DOWN \u3044\u305a\u308c\u304b\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u5ea6\u306f\u3053\u3061\u3089\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n$ curl localhost:8080/health-check/unstable -s | jq .\n{\n  \"id\": \"unstable\",\n  \"result\": \"UP\",\n  \"data\": {\n    \"message\": \"Woo Hoo!\"\n  }\n}\n\nUP \u306a\u3068\u304d\u306f\u5143\u6c17\u3067\u3059\u304c\u3002\u3002\n$ curl localhost:8080/health-check/unstable -s | jq .\n{\n  \"id\": \"unstable\",\n  \"result\": \"DOWN\",\n  \"data\": {\n    \"message\": \"Too Bad...\"\n  }\n}\n\n\u5834\u5408\u306b\u3088\u3063\u3066\u306f DOWN \u3057\u3066\u3057\u3087\u3093\u307c\u308a\u3057\u3066\u3044\u307e\u3059\u3002\n/health \u3082\u898b\u3066\u307f\u307e\u3059\u3002\n\u4e21\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c UP \u3067\u3042\u308c\u3070\u5168\u4f53\u306e\u7d50\u679c(outcome \u30d7\u30ed\u30d1\u30c6\u30a3)\u3082 UP \u3067\u3059\u304c\u3001\n$ curl localhost:8080/health -s | jq .\n{\n  \"checks\": [\n    {\n      \"id\": \"something\",\n      \"result\": \"UP\",\n      \"data\": {\n        \"date\": \"2016-12-20T00:00:00.000\",\n        \"time\": 1482159600000\n      }\n    },\n    {\n      \"id\": \"unstable\",\n      \"result\": \"UP\",\n      \"data\": {\n        \"message\": \"Woo Hoo!\"\n      }\n    }\n  ],\n  \"outcome\": \"UP\"\n}\n\n\u3072\u3068\u3064\u3067\u3082 DOWN \u304c\u3042\u308b\u3068 outcome \u3082 DOWN \u306b\u306a\u308a\u307e\u3059\u3002\n$ curl localhost:8080/health -s | jq .\n{\n  \"checks\": [\n    {\n      \"id\": \"something\",\n      \"result\": \"UP\",\n      \"data\": {\n        \"date\": \"2016-12-20T00:00:00.000\",\n        \"time\": 1482159600000\n      }\n    },\n    {\n      \"id\": \"unstable\",\n      \"result\": \"DOWN\",\n      \"data\": {\n        \"message\": \"Too Bad...\"\n      }\n    }\n  ],\n  \"outcome\": \"DOWN\"\n}\n\n\u30e6\u30fc\u30b6\u304c\u4efb\u610f\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u4f5c\u6210\u3067\u304d\u308b\u306e\u306f\u306a\u304b\u306a\u304b\u4fbf\u5229\u305d\u3046\u3067\u3059\u306d\u3002\nMonitor \u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\nhttps://wildfly-swarm.gitbooks.io/wildfly-swarm-users-guide/content/v/2016.12.1/advanced/monitoring.html\n\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u3064\u3044\u3066\u306f\u5185\u5bb9\u304c\u53e4\u3044\u306e\u3067\u6ce8\u610f\u3067\u3059\u3002\u8a73\u7d30\u306f\u4ee5\u4e0b\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nhttp://wildfly-swarm.io/posts/announcing-wildfly-swarm-2016-12-0/#_health_checks\n\nZipkin\n2 \u3064\u76ee\u306f Zipkin \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016/zipkin\nZipkin \u306f Microservices \u306a\u3069\u3067\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u547c\u3073\u51fa\u3057\u304c\u884c\u308f\u308c\u308b\u3088\u3046\u306a\u5206\u6563\u74b0\u5883\u306b\u304a\u3044\u3066\u3001\u5404\u30b5\u30fc\u30d3\u30b9\u3092\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u3067\u304d\u308b\u3082\u306e\u3067\u3059\u3002\n\u4eca\u5e74\u306e\u3053\u306e Java EE Advent Calendar \u3067\u3082 @kazuhira_r \u3055\u3093\u304c\u3059\u3067\u306b\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001Zipkin \u3084\u305d\u306e Java \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b Brave \u306e JAX-RS \u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u306e\u8a73\u3057\u3044\u8aac\u660e\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nBrave JAXRS2\u3067\u3001JAX-RS\u3067\u3082Distributed Tracing #javaee\n\u3053\u3053\u3067\u306f WildFly Swarm \u3067 Zipkin/Brave \u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3092\u7c21\u5358\u306b\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001\u5168\u4f53\u306e\u69cb\u6210\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u3057\u307e\u3059\u3002First \u306f Second \u3092\u3001Second \u306f Third \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n[Client] <-> [First Service] <-> [Second Service] <-> [Third Service]\n\n\u30b5\u30fc\u30d3\u30b9\u81ea\u4f53\u306f\u5358\u7d14\u306a\u3082\u306e\u3067\u3001\u9001\u3089\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u7279\u5b9a\u6587\u5b57\u5217\u3092\u8ffd\u52a0\u3059\u308b\u306e\u307f\u3067\u3059(Second \u3067\u3042\u308c\u3070 TWO \u306a\u3069)\u3002\n\u305d\u308c\u3067\u306f\u3001\u307e\u305a\u306f\u30b5\u30fc\u30d3\u30b9\u81ea\u4f53\u304c Zipkin \u3067\u30c8\u30ec\u30fc\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\u4f9d\u5b58\u6027\u3068\u3057\u3066\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>zipkin-jaxrs</artifactId>\n</dependency>\n\n\u4e0a\u8a18\u4f9d\u5b58\u6027\u3092\u8ffd\u52a0\u3059\u308b\u3068 Zipkin \u30b5\u30fc\u30d0\u306e URL \u3084\u30b5\u30fc\u30d3\u30b9\u540d\u3092\u6307\u5b9a\u3067\u304d\u308b ZipkinFraction \u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3001main() \u30e1\u30bd\u30c3\u30c9\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u8a2d\u5b9a\u306f\u73fe\u72b6\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001main() \u304c\u5fc5\u9808\u3067\u3059\u3002   \n\npackage wildflyswarm;\n\nimport org.jboss.shrinkwrap.api.ShrinkWrap;\nimport org.wildfly.swarm.Swarm;\nimport org.wildfly.swarm.jaxrs.JAXRSArchive;\nimport org.wildfly.swarm.jaxrs.btm.ZipkinFraction;\n\npublic class Bootstrap {\n\n  public static void main(String[] args) throws Exception {\n    Swarm swarm = new Swarm(args);\n\n    swarm.fraction(new ZipkinFraction(\"first\")\n      .reportAsync(\"http://localhost:9411/api/v1/spans\"));\n\n    [...]\n  }\n}\n\nFirst Service \u306f first \u3001Second Service \u306f second \u3068\u3044\u3063\u305f\u8981\u9818\u3067\u5404\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u540d\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002reportAsync \u306b\u306f\u30ec\u30dd\u30fc\u30c8\u3059\u308b Zipkin \u30b5\u30fc\u30d0\u306e URL \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u30b5\u30fc\u30d3\u30b9\u5074\u3060\u3051\u767b\u9332\u3059\u308b\u3068\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u304c\u305d\u3053\u3067\u9014\u5207\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u547c\u3073\u51fa\u3057\u5074\u3082\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306f Second Service \u3092\u547c\u3073\u51fa\u3059 First Service \u5074\u306e\u4f8b\u3067\u3059\u3002\npackage zipkin;\n\nimport com.github.kristofa.brave.Brave;\nimport zipkin.reporter.AsyncReporter;\nimport zipkin.reporter.urlconnection.URLConnectionSender;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.client.Client;\nimport javax.ws.rs.client.ClientBuilder;\nimport javax.ws.rs.client.WebTarget;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.Response;\n\n@Path(\"/\")\npublic class FirstController {\n\n  @GET\n  @Produces(MediaType.TEXT_PLAIN)\n  public String first() {\n    AsyncReporter<Span> asyncReporter = AsyncReporter.builder(\n        URLConnectionSender.create(\"http://localhost:9411/api/v1/spans\"))\n        .build();\n\n    Brave brave = new Brave.Builder(\"second-client\")\n      .reporter(asyncReporter)\n      .build();\n\n    Client client = ClientBuilder.newBuilder()\n      .register(BraveTracingFeature.create(brave))\n      .build();\n\n    try {\n      WebTarget target = client.target(\"http://localhost:8280\");\n      Response response = target.queryParam(\"message\", \"ONE\").request().get();\n      return response.readEntity(String.class);\n    } finally {\n      client.close();\n    }\n  }\n\n}\n\nFirst Service \u3067 Second Service \u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u90e8\u5206\u306b\u5bfe\u3057\u3066 second-client \u3068\u3057\u3066\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nAsyncReporter<Span> asyncReporter = AsyncReporter.builder(\n    URLConnectionSender.create(\"http://localhost:9411/api/v1/spans\"))\n    .build();\n\nBrave brave = new Brave.Builder(\"second-client\")\n  .reporter(asyncReporter)\n  .build();\n\nClient client = ClientBuilder.newBuilder()\n  .register(BraveTracingFeature.create(brave))\n  .build();\n\n\nWildFly Swarm \u306e Zipkin Fraction \u304c\u4f9d\u5b58\u3057\u3066\u3044\u308b brave-jaxrs2 \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 3.14.1 \u3067\u3042\u308a\u3001\u6700\u65b0\u306e 3.16.0 \u3067\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b BraveTracingFeature \u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\n\u3088\u3063\u3066\u30013.16.0 \u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u5fc5\u8981\u306a\u3068\u3053\u308d\u3060\u3051\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001Second Service \u3082 Third Service \u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u540c\u69d8\u306e\u5bfe\u51e6\u304c\u5fc5\u8981\u3067\u3059\u304c\u3001Second Service \u306f\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u306e\u52b9\u679c\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b 5 \u79d2\u9593\u30b9\u30ea\u30fc\u30d7\u3055\u305b\u308b\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089 Zipkin \u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u7c21\u5358\u306e\u305f\u3081 Docker \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n$ docker run -d -p 9411:9411 openzipkin/zipkin\n\n\u6b21\u306b\u5404\u30b5\u30fc\u30d3\u30b9\u3092\u30d3\u30eb\u30c9\u5f8c\u3001\u8d77\u52d5\u3057\u307e\u3059\u3002\u540c\u4e00\u30de\u30b7\u30f3\u3067\u8d77\u52d5\u3059\u308b\u5834\u5408\u306f swarm.port.offset \u3067\u30dd\u30fc\u30c8\u3092\u305a\u3089\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n$ ./mvnw clean package\n\nFirst Service \u306e\u8d77\u52d5(8080 \u30dd\u30fc\u30c8)\u3002\n$ java -jar first/target/first-swarm.jar\n\nSecond Service \u306e\u8d77\u52d5(8280 \u30dd\u30fc\u30c8)\u3002\n$ java -jar second/target/second-swarm.jar -Dswarm.port.offset=200\n\nThird Service \u306e\u8d77\u52d5(8380 \u30dd\u30fc\u30c8)\u3002\n$ java -jar third/target/third-swarm.jar -Dswarm.port.offset=300\n\n\u5404\u30b5\u30fc\u30d3\u30b9\u304c\u8d77\u52d5\u3057\u305f\u3089 First Service \u3078\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u307e\u3059\u3002\n$ curl localhost:8080\nONE TWO THREE\n\nSecond Service \u3067 5 \u79d2\u30b9\u30ea\u30fc\u30d7\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u3061\u3087\u3063\u3068\u6642\u9593\u304b\u304b\u308a\u307e\u3059\u3002\n\u3067\u306f http://localhost:9411 \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u30c8\u30ec\u30fc\u30b9\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\u30b5\u30fc\u30d3\u30b9\u540d\u3068\u3057\u3066 first \u3092\u9078\u629e\u3057\u3001Start time \u3068 End time \u3092\u9069\u5f53\u306a\u5024\u306b\u3057\u305f\u4e0a\u3067 Find Traces \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n\u3061\u3083\u3093\u3068\u51fa\u3066\u307e\u3059\u306d\u30025 \u79d2\u304b\u304b\u3063\u3066\u307e\u3059\u3002\u3053\u3053\u3092\u3055\u3089\u306b\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u547c\u3073\u51fa\u3057\u968e\u5c64\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\nsecond \u304c 5 \u79d2\u304b\u304b\u3063\u3066\u308b\u3053\u3068\u304c\u4e00\u76ee\u77ad\u7136\u3067\u3059\u3002\u5404\u30b5\u30fc\u30d3\u30b9\u306e\u547c\u3073\u51fa\u3057\u671f\u9593\u5185\u306e\u90e8\u5206\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u5185\u5bb9\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nZipkinFraction \u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\nhttps://wildfly-swarm.gitbooks.io/wildfly-swarm-users-guide/content/v/2016.12.1/advanced/tracing-zipkin.html\n\nEnhanced JAX-RS Client\n\u6700\u5f8c\u306b Enahnced JAX-RS Client \u306b\u3064\u3044\u3066\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3068\u306f\u3044\u3048\u3001\u3053\u306e\u6a5f\u80fd\u306f\u624b\u5143\u3067\u78ba\u8a8d\u3057\u305f\u3068\u3053\u308d\u4ee5\u4e0b\u306e\u554f\u984c\u306e\u305f\u3081 2016.12.1 \u6642\u70b9\u3067\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067\u53c2\u8003\u7a0b\u5ea6\u306b\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\nSWARM-940: NoClassDefFoundError with Enhanced JAX-RS Client\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf i1, i2 \u3092\u6e21\u3059\u3068\u8db3\u3057\u7b97\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306a JAX-RS \u306e\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\n@GET\n@Produces(MediaType.APPLICATION_JSON)\npublic String add(@QueryParam(\"i1\") int i1,\n                  @QueryParam(\"i2\") int i2) {\n\n  return String.format(\"{\\\"result\\\" : %d}\", i1 + i2);\n\n}\n\n\u5358\u7d14\u306b JAXRS Client \u3092\u5229\u7528\u3057\u3066\u4e0a\u8a18\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nimport javax.ws.rs.client.Client;\nimport javax.ws.rs.client.ClientBuilder;\nimport javax.ws.rs.client.WebTarget;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.Response;\n\nClient client = ClientBuilder.newClient();\n\ntry {\n  WebTarget target = client.target(\"<service base url>\");\n\n  Response response = target\n    .queryParam(\"i1\", i1)\n    .queryParam(\"i2\", i2)\n    .request(MediaType.APPLICATION_JSON).get();\n\n  // response \u3092\u8aad\u3093\u3067\u3069\u3046\u3053\u3046\u3059\u308b\u51e6\u7406\n\n} finally {\n  client.close();\n}\n\n\u500b\u4eba\u7684\u306b\u306f\u308f\u304b\u308a\u3084\u3059\u304f\u3066\u597d\u304d\u3067\u3059\u304c\u3001WildFly Swarm \u3067\u306f JAX-RS Client \u3092\u30e9\u30c3\u30d7\u3057\u305f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 API \u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u5229\u7528\u3059\u308b\u969b\u306f\u4ee5\u4e0b\u306e\u4f9d\u5b58\u6027\u304c\u5fc5\u8981\u3067\u3059\u3002\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>cdi</artifactId>\n</dependency>\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>cdi-jaxrsapi</artifactId>\n</dependency>\n\n\u6b21\u306b\u5bfe\u8c61\u30b5\u30fc\u30d3\u30b9\u306e API \u306b\u5373\u3057\u305f\u5f62\u3067\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5207\u308a\u307e\u3059\u3002\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f org.wildfly.swarm.cdi.jaxrsapi.ServiceClient \u3092\u7d99\u627f\u3057\u305f\u4e0a\u3067\u3001@org.wildfly.swarm.cdi.jaxrsapi.Service \u3092\u4ed8\u4e0e\u3057\u3001baseUrl \u306b\u5bfe\u8c61\u30b5\u30fc\u30d3\u30b9\u306e\u30d9\u30fc\u30b9 URL \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u5404\u30e1\u30bd\u30c3\u30c9\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5185\u5bb9\u306b\u5fdc\u3058\u305f API \u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\nimport org.wildfly.swarm.cdi.jaxrsapi.Service;\nimport org.wildfly.swarm.cdi.jaxrsapi.ServiceClient;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.QueryParam;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/\")\n@Service(baseUrl = \"<service base url>\")\npublic interface AdditionService extends ServiceClient<AdditionService> {\n\n  @GET\n  @Produces(MediaType.APPLICATION_JSON)\n  String add(@QueryParam(\"i1\") int i1,\n             @QueryParam(\"i2\") int i2);\n\n}\n\n\n\u3053\u3046\u3044\u3063\u305f\u30a2\u30d7\u30ed\u30fc\u30c1\u306f RESTEasy \u306e Proxy Framework \u3084 Retrofit \u3067\u3082\u3042\u308a\u307e\u3059\u306d\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u4e0a\u8a18\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\nimport javax.enterprise.context.ApplicationScoped;\nimport javax.inject.Inject;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.QueryParam;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/\")\n@ApplicationScoped\npublic class CalcController {\n\n  @Inject\n  AdditionService additionService;\n\n  @GET\n  @Produces(MediaType.APPLICATION_JSON)\n  public String calc(@QueryParam(\"i1\") int i1,\n                     @QueryParam(\"i2\") int i2) {\n\n    return additionService.add(i1, i2);\n\n  }\n\n}\n\n\u307e\u308b\u3067\u30ed\u30fc\u30ab\u30eb\u547c\u3073\u51fa\u3057\u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u306e\u304c\u3088\u3044\u3067\u3059\u306d\u3002\n\u305f\u3060\u3001\u73fe\u5728\u306e\u5b9f\u88c5\u3060\u3068 baseUrl \u3067\u6307\u5b9a\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306e URL \u306f\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3059\u308b\u3057\u304b\u306a\u3044\u305f\u3081\u3001\u3042\u307e\u308a\u5b9f\u7528\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u554f\u984c\u306b\u5bfe\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c1\u30b1\u30c3\u30c8\u304c\u5207\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3084\u3001\u305b\u3081\u3066\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u540d\u524d\u89e3\u6c7a\u3067\u304d\u308b\u306e\u306f\u5fc5\u9808\u3067\u3057\u3087\u3046\u3002\n\nSWARM-812 Extend JAX-RS Client API to integrate with Topology for service lookup\nSWARM-902 Provide way to set @Service base URL from configuration\n\n\u307e\u305f\u3001\u5148\u307b\u3069\u3054\u7d39\u4ecb\u3057\u305f Zipkin \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u3082\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 API \u3092\u4f7f\u3046\u3068\u3053\u3053\u3089\u3078\u3093\u306e\u8a2d\u5b9a\u3082\u52dd\u624b\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u3068\u3046\u308c\u3057\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\nSpring Cloud Sleuth \u306f\u307b\u3068\u3093\u3069 Zipkin \u3092\u610f\u8b58\u305b\u305a\u306b\u6e08\u307f\u307e\u3059\u3002\u3055\u3059\u304c\u3002\n\u3059\u3050\u8a66\u3059\u306b\u306f\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u30b7\u30f3\u30d7\u30eb\u3067\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3067\u3059\u3002\nhttps://github.com/openzipkin/sleuth-webmvc-example\n\n\n\u304a\u307e\u3051\n\u500b\u4eba\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a WildFly Swarm \u306e\u30ac\u30a4\u30c9\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\nWildFly Swarm Tour\nJAX-RS/CDI/JPA \u3092\u7528\u3044\u305f\u7c21\u5358\u306a Java EE \u306b\u3088\u308b CRUD \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u7528\u3044\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u5b9a\u3001\u3061\u3087\u3063\u3068\u3060\u3051 Docker \u306a\u3069\u3001\u305d\u308c\u306a\u308a\u306b\u30a8\u30c3\u30bb\u30f3\u30b9\u3092\u76db\u308a\u8fbc\u3093\u3067\u3044\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n\u672c\u30a8\u30f3\u30c8\u30ea\u306f\u3061\u3087\u3063\u3068\u3057\u305f\u6a5f\u80fd\u7d39\u4ecb\u3067\u3057\u305f\u304c\u3001\u57fa\u672c\u7684\u306a Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d44\u3093\u3067\u307f\u305f\u3044\u3068\u3044\u3046\u65b9\u306f\u305c\u3072\u4e00\u901a\u308a\u904a\u3093\u3067\u307f\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u53c2\u8003\n\nWildFly Swarm User\u2019s Guide - 2016.12.1\n\n\u3053\u308c\u306f Java EE Advent Calendar 2016 \u306e 20 \u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n* 19\u65e5\u76ee\u306f [@suke_masa](https://twitter.com/suke_masa) \u3055\u3093\u306e [Thymeleaf\u3067Apache Shiro\u3092\u4f7f\u3046\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u3066\u307f\u305f](http://masatoshitada.hatenadiary.jp/entry/2016/12/12/172526) \u3067\u3057\u305f\u3002\n* 21\u65e5\u76ee\u306f [@TTakakiyo](https://twitter.com/TTakakiyo) \u3055\u3093\u306e [WebSphere Liberty\u3067Java EE\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092One-JAR\u5316\u3059\u308b](http://qiita.com/TTakakiyo/items/470a44de519652701fae) \u3067\u3059\u3002\n\n-----\n\n## \u5bfe\u8c61\u3068\u3059\u308b\u74b0\u5883\n\n* WildFly Swarm 2016.12.1\n* JDK 8\n* Maven 3.3.9\n\n## \u5b8c\u5168\u306a\u30b3\u30fc\u30c9\n\n\u672c\u6587\u4e2d\u3067\u306e\u8aac\u660e\u7528\u30b3\u30fc\u30c9\u306f\u65ad\u7247\u7684\u306a\u3082\u306e\u3067\u3059\u3002\u52d5\u4f5c\u3059\u308b\u5b8c\u5168\u306a\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016\n\n## WildFly Swarm \u3063\u3066\u306a\u306b?\n\n\u307e\u305a\u3001WildFly Swarm \u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\nWildFly Swarm \u306f Java EE \u306b\u3088\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u53ef\u80fd jar(uber jar)\u5316\u3067\u304d\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\u57fa\u76e4\u3068\u306a\u308b Java EE \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u306f\u305d\u306e\u540d\u306e\u901a\u308a [WildFly](http://wildfly.org) \u3067\u3059\u3002\n\n\u307e\u305a\u306f\u96f0\u56f2\u6c17\u3092\u3064\u304b\u3080\u305f\u3081\u306b\u3001JAX-RS \u3092\u7528\u3044\u305f\u7c21\u5358\u306a API \u30b5\u30fc\u30d0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016/helloworld\n\n\u4eca\u56de\u5bfe\u8c61\u3068\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u985e\u306f\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3068\u3057\u3066 Maven \u3092\u5229\u7528\u3057\u307e\u3059\u306e\u3067\u3001\u307e\u305a\u306f pom.xml \u306b\u5fc5\u8981\u306a\u4f9d\u5b58\u6027\u3068 uber jar \u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n``` xml\n<dependencyManagement>\n  <dependencies>\n    <dependency>\n      <!-- (1) bom \u3092\u5229\u7528 -->\n      <groupId>org.wildfly.swarm</groupId>\n      <artifactId>bom-all</artifactId>\n      <version>${version.wildfly-swarm}</version>\n      <type>pom</type>\n      <scope>import</scope>\n    </dependency>\n  </dependencies>\n</dependencyManagement>\n\n<dependencies>\n  <dependency>\n    <!-- (2) JAX-RS \u3092\u5229\u7528\u3002\u4e0a\u8a18\u306e\u3088\u3046\u306b bom \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067 version \u6307\u5b9a\u306f\u4e0d\u8981 -->\n    <groupId>org.wildfly.swarm</groupId>\n    <artifactId>jaxrs</artifactId>\n  </dependency>\n</dependencies>\n\n<build>\n  [...]\n\n  <plugins>\n    <plugin>\n      <!-- (3) uber-jar \u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u8a2d\u5b9a -->\n      <groupId>org.wildfly.swarm</groupId>\n      <artifactId>wildfly-swarm-plugin</artifactId>\n      <version>${version.wildfly-swarm}</version>\n      <configuration>\n        <mainClass>wildflyswarm.Bootstrap</mainClass>\n      </configuration>\n      <executions>\n        <execution>\n          <goals>\n            <goal>package</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n</build>\n```\n\n\u6b21\u306b JAX-RS \u3092\u5229\u7528\u3057\u305f\u7c21\u5358\u306a API \u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u4e0b\u8a18\u306f `/hello` \u306b GET \u3059\u308b\u3068 return \u306b\u6307\u5b9a\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u3000JSON \u3068\u3057\u3066\u8fd4\u3059\u3001\u3068\u3044\u3046\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\n``` java\npackage helloworld;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/hello\")\npublic class HelloWorld {\n\n  @GET\n  @Produces(MediaType.APPLICATION_JSON)\n  public String hello() {\n    return \"{\\\"message\\\" : \\\"Hello, WildFly Swarm!\\\"}\";\n  }\n\n}\n```\n\n\u6b21\u306b\u3000WildfFly Swarm \u3092\u5229\u7528\u3059\u308b\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u4e0a\u8a18\u306e pom.xml \u4e2d\u306e wildfly-swarm-plugin \u306e\u8a2d\u5b9a\u3067 `<mainClass>` \u3068\u3057\u3066\u6307\u5b9a\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n``` java\npackage wildflyswarm;\n\nimport helloworld.HelloWorld;\nimport org.jboss.shrinkwrap.api.ShrinkWrap;\nimport org.wildfly.swarm.Swarm;\nimport org.wildfly.swarm.jaxrs.JAXRSArchive;\n\npublic class Bootstrap {\n\n  public static void main(String[] args) throws Exception {\n    // (1) WildFly \u81ea\u8eab\u3092\u8868\u3059\n    Swarm swarm = new Swarm(args);\n\n    // (2) \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30fc\u30ab\u30a4\u30d6\n    JAXRSArchive archive = ShrinkWrap.create(JAXRSArchive.class);\n    archive.addClass(HelloWorld.class);\n\n    swarm\n      // (3) WildFly \u306e\u8d77\u52d5\n      .start()\n      // (4) \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30d7\u30ed\u30a4\n      .deploy(archive);\n  }\n\n}\n```\n\n`org.wildfly.swarm.Swarm` \u304c WildFly \u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057(1)\u3001WildFly \u3092\u8d77\u52d5\u3057\u305f\u308a(3)\u3001\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30fc\u30ab\u30a4\u30d6(2)\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u308a\u3067\u304d\u307e\u3059(4)\u3002\n\n> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30fc\u30ab\u30a4\u30d6\u3068\u306f\u3001\u666e\u6bb5 Java EE \u306b\u3088\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3059\u308b\u969b\u306b\u30d3\u30eb\u30c9\u3059\u308b war \u306e\u3053\u3068\u3067\u3059\u3002\n> WildFly Swarm \u3067\u306f [ShrinkWrap](http://arquillian.org/guides/shrinkwrap_introduction/) \u3068\u3044\u3046\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5229\u7528\u3057\u30aa\u30f3\u30c7\u30de\u30f3\u30c9\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u3067\u5fc5\u8981\u306a\u3082\u306e\u306f\u4f5c\u6210\u5b8c\u4e86\u3067\u3059\u3002\u3042\u3068\u306f\u30d3\u30eb\u30c9\u3059\u308b\u3060\u3051\u3067 uber jar \u304c\u3067\u304d\u3042\u304c\u308a\u307e\u3059(uber jar \u306f -swarm \u3068\u3064\u3044\u305f\u3082\u306e\u3067\u3059)\u3002\n\n``` sh\n$ ./mvnw clean package && \\\n  java -jar target/helloworld-swarm.jar\n```\n\n\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n``` sh\n$ curl localhost:8080/hello\n{\"message\" : \"Hello, WildFly Swarm!\"}\n```\n\n\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f!\n\n\u305f\u3060\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001WildFly \u81ea\u4f53\u306e\u8a2d\u5b9a\u3092\u4e00\u5207\u3044\u3058\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u306a\u3093\u3089\u304b\u306e\u8a2d\u5b9a\u3082\u3057\u3066\u307f\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\u3053\u3053\u3067\u306f HTTPS \u30ea\u30b9\u30ca\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u3001\u4f9d\u5b58\u6027\u3068\u3057\u3066\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n``` xml\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>management</artifactId>\n</dependency>\n```\n\n\u5148\u307b\u3069\u306e wildflyswarm.Bootstrap \u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n``` java\npackage wildflyswarm;\n\n[...]\nimport org.wildfly.swarm.undertow.UndertowFraction;\n[...]\n\nSwarm swarm = new Swarm(args);\n\n// \u8ffd\u8a18\nswarm.fraction(\n  UndertowFraction.createDefaultFraction(\"keystore.jks\", \"password\", \"selfsigned\")\n);\n```\n\n`UndertowFraction.createDefaultFraction(...)` \u306f\u5f15\u6570\u306b\u7b2c1\u5f15\u6570\u304b\u3089\u9806\u756a\u306b\u4ee5\u4e0b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n* \u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u30d1\u30b9(\u76f8\u5bfe\u30d1\u30b9\u6307\u5b9a\u306e\u5834\u5408\u306f java \u5b9f\u884c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(user.dir)\u304b\u3089\u306e\u30d1\u30b9)\n* \u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\n* \u30b5\u30fc\u30d0\u8a3c\u660e\u66f8\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\n\n> \u30ad\u30fc\u30b9\u30c8\u30a2\u306f\u30b5\u30f3\u30d7\u30eb\u3067\u7528\u610f\u3057\u3066\u3044\u308b `keystore.jks` \u3092\u4f7f\u3044\u307e\u3059\u3002\n> \u3054\u81ea\u8eab\u3067\u7528\u610f\u3057\u305f\u30ad\u30fc\u30b9\u30c8\u30a2\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u5024\u3092\u9069\u5b9c\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\n\n\u3053\u308c\u3060\u3051\u3067 HTTPS \u30ea\u30b9\u30ca\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u518d\u30d1\u30c3\u30b1\u30fc\u30b8\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n``` sh\n$ ./mvnw clean package && java -jar target/helloworld-swarm.jar\n$ curl https://localhost:8443/hello -k\n{\"message\" : \"Hello, WildFly Swarm!\"}\n```\n\n\u3044\u3044\u3067\u3059\u306d\u3002\u306a\u304a\u3001HTTPS \u30ea\u30b9\u30ca\u3092\u6709\u52b9\u306b\u3057\u305f\u5834\u5408\u3001HTTP/2 \u304c\u5229\u7528\u53ef\u80fd\u306a\u74b0\u5883\u3067\u3042\u308c\u3070 HTTP/2 \u3082\u6709\u52b9\u5316\u3055\u308c\u307e\u3059\u3002\n\n``` sh\n$ curl --http2 https://localhost:8443/hello -kI\nHTTP/2 200\ncontent-type: application/json\ncontent-length: 37\ndate: Tue, 20 Dec 2016 04:07:28 GMT\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001WildFly Swarm \u3067\u306f\u5f93\u6765\u306e Java EE \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3067\u5fc5\u8981\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff65\u8a2d\u5b9a\uff65\u30c7\u30d7\u30ed\u30a4\uff65\u8d77\u52d5\u304c\u5168\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u4e0a\u8a18\u306e UndertowFraction \u306e\u3088\u3046\u306b\u3001\u5fc5\u8981\u306a\u90e8\u5206\u3060\u3051 Fraction \u3068\u3044\u3046\u5358\u4f4d\u3067\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002org.wildfly.swarm:jaxrs \u306a\u3069\u3082 Fraction \u306e 1 \u3064\u3067\u3059\u3002\n\n\u307e\u305f\u3001WildFly Swarm \u306f Java EE \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092 uber jar \u5316\u3067\u304d\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u4e3b\u306b Microservices \u3067\u306e\u5229\u7528\u3092\u76ee\u7684\u3068\u3057\u305f\u72ec\u81ea\u6a5f\u80fd\u3084\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea(Netflix OSS \u3084 Zipkin/Brave \u306a\u3069)\u3068\u306e\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u7ae0\u304b\u3089\u306f\u500b\u4eba\u7684\u306b\u6c17\u306b\u306a\u3063\u3066\u3044\u305f\u4e0b\u8a18\u6a5f\u80fd\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n* Monitor\n* Zipkin\n* Enhanced JAX-RS Client(\u305f\u3060\u3057\u52d5\u304b\u306a\u3044\u306e\u3067\u7d39\u4ecb\u3060\u3051\u3002\u3002)\n\n### war \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\n\n\u3068\u3001\u305d\u306e\u524d\u306b war \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5148\u306e helloworld \u306f jar \u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001WildFly Swarm \u306f war \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3082\u53ef\u80fd\u3067\u3059\u3002war \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3067\u306f main() \u306f\u4e0d\u8981\u3067\u3059(\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5229\u7528\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093)\u3002\u307e\u305f\u3001uber jar \u4ee5\u5916\u306b war \u3082\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u3001Payara \u306a\u3069\u4ed6\u306e Java EE \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n\u5148\u307b\u3069\u306e helloworld \u3092 war \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306b\u5909\u66f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016/helloworld-war\n\npom.xml \u3067\u306e\u5909\u66f4\u70b9\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n* `<packaging>war</packaging>` \u306b\u5909\u66f4\n* maven-war-plugin \u3092\u8ffd\u52a0(web.xml \u304c\u306a\u304f\u3066\u3082\u30d3\u30eb\u30c9\u3067\u304d\u308b\u3088\u3046\u306b)\n* mainClass \u6307\u5b9a\u3092\u524a\u9664\n\n\u307e\u305f\u3001`wildflyswarm.Bootstrap` \u30af\u30e9\u30b9\u306f\u6d88\u3057\u3066\u3057\u307e\u3063\u3066\u5927\u4e08\u592b\u3067\u3059\u3002\n\n``` diff\n@@ -6,6 +6,7 @@\n   <groupId>javaee-ac-2016-wildflyswarm</groupId>\n   <artifactId>helloworld</artifactId>\n   <version>2016.12.1</version>\n+  <packaging>war</packaging>\n\n   <properties>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n@@ -15,6 +16,7 @@\n     <maven.compiler.target>1.8</maven.compiler.target>\n\n     <version.wildfly-swarm>${project.version}</version.wildfly-swarm>\n+    <version.maven-war-plugin>3.0.0</version.maven-war-plugin>\n   </properties>\n\n   <dependencyManagement>\n@@ -48,9 +50,6 @@\n         <groupId>org.wildfly.swarm</groupId>\n         <artifactId>wildfly-swarm-plugin</artifactId>\n         <version>${version.wildfly-swarm}</version>\n-        <configuration>\n-          <mainClass>wildflyswarm.Bootstrap</mainClass>\n-        </configuration>\n         <executions>\n           <execution>\n             <goals>\n@@ -59,6 +58,13 @@\n           </execution>\n         </executions>\n       </plugin>\n+      <plugin>\n+        <artifactId>maven-war-plugin</artifactId>\n+        <version>${version.maven-war-plugin}</version>\n+        <configuration>\n+          <failOnMissingWebXml>false</failOnMissingWebXml>\n+        </configuration>\n+      </plugin>\n     </plugins>\n   </build>\n```\n\n\u6b21\u306b `wildflyswarm.Bootstrap` \u3067\u884c\u3063\u3066\u3044\u305f `UndertowFraction.createDefaultFraction(\"keystore.jks\", \"password\", \"selfsigned\")` \u306e\u90e8\u5206\u3092\u3069\u3046\u8a2d\u5b9a\u3059\u308b\u304b\u3067\u3059\u3002\u7b54\u3048\u306f\u5916\u304b\u3089\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u6307\u5b9a\u3059\u308b\u3001\u306a\u306e\u3067\u3059\u304c\u5177\u4f53\u7684\u306b\u306f\u4f55\u3092\u6307\u5b9a\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u4eca\u307e\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u5f8c\u3059\u3050\u306b\u51fa\u529b\u3055\u308c\u308b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u9577\u3044\u30ed\u30b0\u51fa\u529b\u306b\u6c17\u3065\u304b\u308c\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f WildFly Swarm \u3067\u8a2d\u5b9a\u53ef\u80fd\u306a\u7d44\u8fbc\u307f\u6e08\u306e\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u8a2d\u5b9a\u5024\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\n2016-12-20 00:00:00,000 INFO  [org.wildfly.swarm] (main) WFSWARM0037: Configuration:\n  swarm.ajp.enable = false\n  swarm.ajp.port   = 8009\n  [...]\n```\n\n\u3053\u306e\u9014\u4e2d\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u3066\u3044\u307e\u3057\u305f\u3002\n\n```\nswarm.http.certificate.alias = selfsigned\nswarm.http.keystore.password = <redacted>\nswarm.http.keystore.path     = keystore.jks\n```\n\n\u30ad\u30fc\u30b9\u30c8\u30a2\u95a2\u9023\u306f\u3053\u308c\u3089\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u3088\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\n> \u6b8b\u5ff5\u306a\u304c\u3089\u73fe\u6642\u70b9(2016/12/20)\u3067\u306f\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306e\u4e00\u89a7\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\n\n\u3067\u306f\u4e0a\u8a18\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u305a\u3089\u305a\u3089\u3068\u4e26\u3079\u3066\u8d77\u52d5\u3057\u3066\u3082\u3088\u3044\u306e\u3067\u3059\u304c\u3001\u3082\u3046 1 \u3064\u3084\u308a\u65b9\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a `project-stages.yml` \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u76f4\u4e0b\u306b\u7528\u610f\u3057\u3001\u305d\u3053\u306b\u66f8\u304d\u4e0b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n``` yml\nswarm:\n  http:\n    certificate.alias: selfsigned\n    keystore:\n      password: password\n      path: keystore.jks\n```\n\n\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30c9\u30c3\u30c81\u3064\u5206\u3092\u533a\u5207\u308a\u306b\u30cd\u30b9\u30c8\u3055\u305b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u3067\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u306e\u3067\u3001\u518d\u30d1\u30c3\u30b1\u30fc\u30b8/\u518d\u8d77\u52d5\u3092\u3057\u307e\u3059...\u3068\u3057\u3066\u3082\u3044\u3044\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u5225\u306e\u8d77\u52d5\u65b9\u6cd5\u3082\u3054\u7d39\u4ecb\u3057\u307e\u3057\u3087\u3046\u3002wildfly-swarm-plugin \u306b\u306f `wildfly-swarm:run` \u3068\u3044\u3046\u30b4\u30fc\u30eb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n``` sh\n$ ./mvnw clean wildfly-swarm:run\n```\n\njar \u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306e\u6642\u3068\u6319\u52d5\u306b\u306a\u3063\u3066\u3044\u308c\u3070\u554f\u984c\u306a\u3057\u3067\u3059\u3002\n\n\u3082\u3046 1 \u3064 `project-stages.yml` \u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001\u305d\u306e\u540d\u306e\u901a\u308a\u30b9\u30c6\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8ffd\u8a18\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n``` yml\nswarm:\n  http:\n    certificate.alias: selfsigned\n    keystore:\n      password: password\n      path: keystore.jks\n--- # \u3053\u3053\u304b\u3089\u8ffd\u8a18\nproject:\n  stage: production\nswarm:\n  undertow:\n    servers:\n      default-server:\n        http-listeners:\n          default:\n            enabled: false\n```\n\n`---` \u3067\u30b9\u30c6\u30fc\u30b8\u3092\u533a\u5207\u308a\u307e\u3059\u3002\u6700\u521d\u306b\u66f8\u3044\u305f\u30b9\u30c6\u30fc\u30b8\u6307\u5b9a\u304c\u306a\u3044\u3082\u306e\u306f default \u30b9\u30c6\u30fc\u30b8\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f production \u30b9\u30c6\u30fc\u30b8\u3067\u306f HTTP \u30ea\u30b9\u30ca(8080 \u30dd\u30fc\u30c8)\u306f\u6709\u52b9\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n> default \u3067\u8a2d\u5b9a\u3057\u305f\u5024\u306f\u4ed6\u306e\u30b9\u30c6\u30fc\u30b8\u3067\u3082\u5f15\u304d\u7d99\u304c\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n\u4e0a\u8a18\u3092\u8ffd\u8a18\u3057\u305f\u3089\u3001 production \u30b9\u30c6\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3057\u305f\u4e0a\u3067\u518d\u8d77\u52d5\u3057\u307e\u3059(\u518d\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306f\u4e0d\u8981\u3067\u3059)\u3002\n\n``` sh\n$ java -jar target/helloworld-swarm.jar -Dswarm.project.stage=production\n```\n\n8080 \u30dd\u30fc\u30c8\u3067\u30ea\u30b9\u30f3\u3057\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n``` sh\n$ ss -alnp | grep <pid> | grep 8080\n# \u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\n```\n\n\u305d\u306e\u4ed6 war \u3068 jar \u306e\u5404\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3067\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u3084\u3001project-stages.yml \u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u53c2\u8003\u304f\u3060\u3055\u3044\u3002\n\n* http://wildfly-swarm.io/posts/to-war-or-jar/\n* https://wildfly-swarm.gitbooks.io/wildfly-swarm-users-guide/content/v/2016.12.1/configuration/project_stages.html\n\n## Monitor\n\n\u3061\u3087\u3063\u3068\u524d\u7f6e\u304d\u304c\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u3053\u304b\u3089 WildFly Swarm \u304c\u7528\u610f\u3057\u3066\u3044\u308b\u6a5f\u80fd\u306b\u3064\u3044\u3066 3 \u7a2e\u985e\u307b\u3069\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n1 \u3064\u76ee\u306f\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3067\u3059\u3002\u6a5f\u80fd\u306f\u9650\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001Spring Boot Actuator \u306e\u3088\u3046\u306a\u3082\u306e\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016/health\n\n\u4ee5\u4e0b\u306e\u4f9d\u5b58\u6027\u3092\u8ffd\u52a0\u3059\u308b\u3068\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u7528\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8(/node, /heap, /threads)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n``` xml\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>monitor</artifactId>\n</dependency>\n```\n\n\u8ffd\u52a0\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u305d\u308c\u305e\u308c\u898b\u3066\u307f\u307e\u3059\u3002\n\n### /node\n\n\u30ce\u30fc\u30c9\u306e\u72b6\u614b\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n> WildFly \u306b\u99b4\u67d3\u307f\u306e\u3042\u308b\u65b9\u5411\u304d\u306e\u8aac\u660e\u3092\u3059\u308b\u306a\u3089\u3070\u3001server-state \u306a\u3069\u306f CLI \u3067\u53d6\u5f97\u3067\u304d\u308b\u5c5e\u6027\u3067\u3059\u306d\n\n``` sh\n$ curl localhost:8080/node\n{\n    \"name\" : \"halo5\",\n    \"server-state\" : \"running\",\n    \"suspend-state\" : \"RUNNING\",\n    \"running-mode\" : \"NORMAL\",\n    \"uuid\" : \"99cf030e-f638-4aa8-9a78-398e8cf782d4\",\n    \"wfs-version\" : \"fixme\"\n}\n```\n\n### /heap\n\n\u5b9f\u884c\u3057\u3066\u3044\u308b JVM \u306e\u30d2\u30fc\u30d7\u60c5\u5831\u3067\u3059\u3002\n\n``` sh\n$ curl localhost:8080/heap\n{\n    \"heap-memory-usage\" : {\n        \"init\" : 257949696,\n        \"used\" : 62501624,\n        \"committed\" : 385351680,\n        \"max\" : 3666870272\n    },\n    \"non-heap-memory-usage\" : {\n        \"init\" : 2555904,\n        \"used\" : 71957736,\n        \"committed\" : 78274560,\n        \"max\" : -1\n    }\n}\n```\n\n### /threads\n\n\u30b9\u30ec\u30c3\u30c9\u306e\u60c5\u5831\u3067\u3059\u3002\n\n``` sh\n$ curl localhost:8080/threads\n{\n    \"thread-count\" : 130,\n    \"peak-thread-count\" : 145,\n    \"total-started-thread-count\" : 162,\n    \"current-thread-cpu-time\" : 921661,\n    \"current-thread-user-time\" : 0\n}\n```\n\n### \u30e6\u30fc\u30b6\u72ec\u81ea\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\n\n\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u306e\u4e00\u74b0\u3068\u3057\u3066\u30e6\u30fc\u30b6\u72ec\u81ea\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af API \u3082\u4f5c\u6210\u53ef\u80fd\u3067\u3059\u3002\n\n\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306f `/health` \u306b\u96c6\u7d04\u3055\u308c\u307e\u3059\u3002\n\n\u4f55\u3082\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u65e8\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\n\n``` sh\n$ curl localhost:8080/health -I\nHTTP/1.1 204 No health endpoints configured!\n```\n\n\u3067\u306f 1 \u3064\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002JAX-RS \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u308b\u611f\u899a\u3067\u4f5c\u6210\u53ef\u80fd\u3067\u3059\u3002\n\n``` java\npackage health;\n\nimport org.wildfly.swarm.monitor.Health;\nimport org.wildfly.swarm.monitor.HealthStatus;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport java.time.LocalDateTime;\n\n@Path(\"/health-check\")\npublic class HealthCheckResource {\n\n  @GET\n  @Path(\"/something\")\n  @Health\u3000// @Health \u3092\u4ed8\u4e0e\n  public HealthStatus checkSomething() {\u3000// HealthStatus \u3092\u8fd4\u3059\n    return HealthStatus\n      .named(\"something\") // \u540d\u524d\u3092\u3064\u3051\u308b(\u5fc5\u9808)\n      .up()\u3000// \u72b6\u614b\u306e\u8a2d\u5b9a(\u5fc5\u9808)\n      .withAttribute(\"date\", LocalDateTime.now().toString())\n      .withAttribute(\"time\", System.currentTimeMillis());\n  }\n\n}\n```\n\n`@Path` \u306b\u6307\u5b9a\u3059\u308b\u30d1\u30b9\u306f\u306a\u3093\u3067\u3082\u3088\u3044\u3067\u3059\u304c\u3001\u30e1\u30bd\u30c3\u30c9\u30ec\u30d9\u30eb\u3067 `@org.wildfly.swarm.monitor.Health` \u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3068\u3001`org.wildfly.swarm.monitor.HealthStatus` \u3092\u8fd4\u308a\u5024\u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nHealthStatus \u306e\u8a2d\u5b9a\u306b\u306f\u3044\u304f\u3064\u304b\u3067\u304d\u3001\u6700\u4f4e\u9650\u5fc5\u8981\u306a\u306e\u306f `named(...)` \u3067\u540d\u524d\u3092\u3064\u3051\u308b\u3053\u3068\u3068\u3001\u72b6\u614b\u3092\u8868\u3059\u305f\u3081\u306b `up()` \u3082\u3057\u304f\u306f `down()` \u3092\u547c\u3093\u3067\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u307e\u305f `withAttribute()` \u3067\u306f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u5f62\u5f0f\u3067\u4efb\u610f\u306e\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n\u3067\u306f\u3053\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af API \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n``` sh\n$ curl localhost:8080/health-check/something -s | jq .\n{\n  \"id\": \"something\",\n  \"result\": \"UP\",\n  \"data\": {\n    \"date\": \"2016-12-20T00:00:00.000\",\n    \"time\": 1482159600000\n  }\n}\n```\n\n\u6b21\u306b\u96c6\u7d04\u7528\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b /health \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n``` sh\n$ curl localhost:8080/health -s | jq .\n{\n  \"checks\": [\n    {\n      \"id\": \"something\",\n      \"result\": \"UP\",\n      \"data\": {\n        \"date\": \"2016-12-20T00:00:00.000\",\n        \"time\": 1482159600000\n      }\n    }\n  ],\n  \"outcome\": \"UP\"\n}\n```\n\n\u3088\u3055\u305d\u3046\u3067\u3059\u304c\u30011 \u3064\u3060\u3068\u3042\u307e\u308a\u610f\u5473\u306a\u3044\u306e\u3067\u3001\u3082\u3046 1 \u3064\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af API \u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002something \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u5e38\u306b UP \u306a\u306e\u3067\u3001DOWN \u306b\u306a\u308b\u30d1\u30bf\u30fc\u30f3\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n``` java\n@GET\n@Path(\"/unstable\")\n@Health\npublic HealthStatus unstable() {\n\n  return (Math.random() < 0.5) ?\n    HealthStatus\n      .named(\"unstable\")\n      .up()\n      .withAttribute(\"message\", \"Woo Hoo!\") :\n    HealthStatus\n      .named(\"unstable\")\n      .down()\n      .withAttribute(\"message\", \"Too Bad...\");\n}\n```\n\n1/2 \u306e\u78ba\u7387\u3067 UP/DOWN \u3044\u305a\u308c\u304b\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4eca\u5ea6\u306f\u3053\u3061\u3089\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n``` sh\n$ curl localhost:8080/health-check/unstable -s | jq .\n{\n  \"id\": \"unstable\",\n  \"result\": \"UP\",\n  \"data\": {\n    \"message\": \"Woo Hoo!\"\n  }\n}\n```\n\nUP \u306a\u3068\u304d\u306f\u5143\u6c17\u3067\u3059\u304c\u3002\u3002\n\n``` sh\n$ curl localhost:8080/health-check/unstable -s | jq .\n{\n  \"id\": \"unstable\",\n  \"result\": \"DOWN\",\n  \"data\": {\n    \"message\": \"Too Bad...\"\n  }\n}\n```\n\n\u5834\u5408\u306b\u3088\u3063\u3066\u306f DOWN \u3057\u3066\u3057\u3087\u3093\u307c\u308a\u3057\u3066\u3044\u307e\u3059\u3002\n\n/health \u3082\u898b\u3066\u307f\u307e\u3059\u3002\n\n\u4e21\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c UP \u3067\u3042\u308c\u3070\u5168\u4f53\u306e\u7d50\u679c(outcome \u30d7\u30ed\u30d1\u30c6\u30a3)\u3082 UP \u3067\u3059\u304c\u3001\n\n\n``` sh\n$ curl localhost:8080/health -s | jq .\n{\n  \"checks\": [\n    {\n      \"id\": \"something\",\n      \"result\": \"UP\",\n      \"data\": {\n        \"date\": \"2016-12-20T00:00:00.000\",\n        \"time\": 1482159600000\n      }\n    },\n    {\n      \"id\": \"unstable\",\n      \"result\": \"UP\",\n      \"data\": {\n        \"message\": \"Woo Hoo!\"\n      }\n    }\n  ],\n  \"outcome\": \"UP\"\n}\n```\n\n\u3072\u3068\u3064\u3067\u3082 DOWN \u304c\u3042\u308b\u3068 outcome \u3082 DOWN \u306b\u306a\u308a\u307e\u3059\u3002\n\n``` sh\n$ curl localhost:8080/health -s | jq .\n{\n  \"checks\": [\n    {\n      \"id\": \"something\",\n      \"result\": \"UP\",\n      \"data\": {\n        \"date\": \"2016-12-20T00:00:00.000\",\n        \"time\": 1482159600000\n      }\n    },\n    {\n      \"id\": \"unstable\",\n      \"result\": \"DOWN\",\n      \"data\": {\n        \"message\": \"Too Bad...\"\n      }\n    }\n  ],\n  \"outcome\": \"DOWN\"\n}\n```\n\n\u30e6\u30fc\u30b6\u304c\u4efb\u610f\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u4f5c\u6210\u3067\u304d\u308b\u306e\u306f\u306a\u304b\u306a\u304b\u4fbf\u5229\u305d\u3046\u3067\u3059\u306d\u3002\n\nMonitor \u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\nhttps://wildfly-swarm.gitbooks.io/wildfly-swarm-users-guide/content/v/2016.12.1/advanced/monitoring.html\n\n\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u3064\u3044\u3066\u306f\u5185\u5bb9\u304c\u53e4\u3044\u306e\u3067\u6ce8\u610f\u3067\u3059\u3002\u8a73\u7d30\u306f\u4ee5\u4e0b\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nhttp://wildfly-swarm.io/posts/announcing-wildfly-swarm-2016-12-0/#_health_checks\n\n## Zipkin\n\n2 \u3064\u76ee\u306f Zipkin \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/emag/javaee-advent-calendar/tree/master/2016/zipkin\n\n[Zipkin](http://zipkin.io/) \u306f Microservices \u306a\u3069\u3067\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u547c\u3073\u51fa\u3057\u304c\u884c\u308f\u308c\u308b\u3088\u3046\u306a\u5206\u6563\u74b0\u5883\u306b\u304a\u3044\u3066\u3001\u5404\u30b5\u30fc\u30d3\u30b9\u3092\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u3067\u304d\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u4eca\u5e74\u306e\u3053\u306e Java EE Advent Calendar \u3067\u3082 [@kazuhira_r](https://twitter.com/kazuhira_r) \u3055\u3093\u304c\u3059\u3067\u306b\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001Zipkin \u3084\u305d\u306e Java \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b Brave \u306e JAX-RS \u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u306e\u8a73\u3057\u3044\u8aac\u660e\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n[Brave JAXRS2\u3067\u3001JAX-RS\u3067\u3082Distributed Tracing #javaee](http://d.hatena.ne.jp/Kazuhira/20161213/1481642322)\n\n\u3053\u3053\u3067\u306f WildFly Swarm \u3067 Zipkin/Brave \u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3092\u7c21\u5358\u306b\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u5168\u4f53\u306e\u69cb\u6210\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u3057\u307e\u3059\u3002First \u306f Second \u3092\u3001Second \u306f Third \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```\n[Client] <-> [First Service] <-> [Second Service] <-> [Third Service]\n```\n\n\u30b5\u30fc\u30d3\u30b9\u81ea\u4f53\u306f\u5358\u7d14\u306a\u3082\u306e\u3067\u3001\u9001\u3089\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u7279\u5b9a\u6587\u5b57\u5217\u3092\u8ffd\u52a0\u3059\u308b\u306e\u307f\u3067\u3059(Second \u3067\u3042\u308c\u3070 TWO \u306a\u3069)\u3002\n\n\u305d\u308c\u3067\u306f\u3001\u307e\u305a\u306f\u30b5\u30fc\u30d3\u30b9\u81ea\u4f53\u304c Zipkin \u3067\u30c8\u30ec\u30fc\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\u4f9d\u5b58\u6027\u3068\u3057\u3066\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n``` xml\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>zipkin-jaxrs</artifactId>\n</dependency>\n```\n\n\u4e0a\u8a18\u4f9d\u5b58\u6027\u3092\u8ffd\u52a0\u3059\u308b\u3068 Zipkin \u30b5\u30fc\u30d0\u306e URL \u3084\u30b5\u30fc\u30d3\u30b9\u540d\u3092\u6307\u5b9a\u3067\u304d\u308b `ZipkinFraction` \u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3001main() \u30e1\u30bd\u30c3\u30c9\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n> \u3053\u306e\u8a2d\u5b9a\u306f\u73fe\u72b6\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001main() \u304c\u5fc5\u9808\u3067\u3059\u3002   \n\n``` java\npackage wildflyswarm;\n\nimport org.jboss.shrinkwrap.api.ShrinkWrap;\nimport org.wildfly.swarm.Swarm;\nimport org.wildfly.swarm.jaxrs.JAXRSArchive;\nimport org.wildfly.swarm.jaxrs.btm.ZipkinFraction;\n\npublic class Bootstrap {\n\n  public static void main(String[] args) throws Exception {\n    Swarm swarm = new Swarm(args);\n\n    swarm.fraction(new ZipkinFraction(\"first\")\n      .reportAsync(\"http://localhost:9411/api/v1/spans\"));\n\n    [...]\n  }\n}\n```\n\nFirst Service \u306f `first` \u3001Second Service \u306f `second` \u3068\u3044\u3063\u305f\u8981\u9818\u3067\u5404\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u540d\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002`reportAsync` \u306b\u306f\u30ec\u30dd\u30fc\u30c8\u3059\u308b Zipkin \u30b5\u30fc\u30d0\u306e URL \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u30b5\u30fc\u30d3\u30b9\u5074\u3060\u3051\u767b\u9332\u3059\u308b\u3068\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u304c\u305d\u3053\u3067\u9014\u5207\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u547c\u3073\u51fa\u3057\u5074\u3082\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306f Second Service \u3092\u547c\u3073\u51fa\u3059 First Service \u5074\u306e\u4f8b\u3067\u3059\u3002\n\n``` java\npackage zipkin;\n\nimport com.github.kristofa.brave.Brave;\nimport zipkin.reporter.AsyncReporter;\nimport zipkin.reporter.urlconnection.URLConnectionSender;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.client.Client;\nimport javax.ws.rs.client.ClientBuilder;\nimport javax.ws.rs.client.WebTarget;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.Response;\n\n@Path(\"/\")\npublic class FirstController {\n\n  @GET\n  @Produces(MediaType.TEXT_PLAIN)\n  public String first() {\n    AsyncReporter<Span> asyncReporter = AsyncReporter.builder(\n        URLConnectionSender.create(\"http://localhost:9411/api/v1/spans\"))\n        .build();\n\n    Brave brave = new Brave.Builder(\"second-client\")\n      .reporter(asyncReporter)\n      .build();\n\n    Client client = ClientBuilder.newBuilder()\n      .register(BraveTracingFeature.create(brave))\n      .build();\n\n    try {\n      WebTarget target = client.target(\"http://localhost:8280\");\n      Response response = target.queryParam(\"message\", \"ONE\").request().get();\n      return response.readEntity(String.class);\n    } finally {\n      client.close();\n    }\n  }\n\n}\n```\n\nFirst Service \u3067 Second Service \u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u90e8\u5206\u306b\u5bfe\u3057\u3066 `second-client` \u3068\u3057\u3066\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n``` java\nAsyncReporter<Span> asyncReporter = AsyncReporter.builder(\n    URLConnectionSender.create(\"http://localhost:9411/api/v1/spans\"))\n    .build();\n\nBrave brave = new Brave.Builder(\"second-client\")\n  .reporter(asyncReporter)\n  .build();\n\nClient client = ClientBuilder.newBuilder()\n  .register(BraveTracingFeature.create(brave))\n  .build();\n```\n\n> WildFly Swarm \u306e Zipkin Fraction \u304c\u4f9d\u5b58\u3057\u3066\u3044\u308b brave-jaxrs2 \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 3.14.1 \u3067\u3042\u308a\u3001\u6700\u65b0\u306e 3.16.0 \u3067\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b BraveTracingFeature \u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\n> \u3088\u3063\u3066\u30013.16.0 \u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u5fc5\u8981\u306a\u3068\u3053\u308d\u3060\u3051\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001Second Service \u3082 Third Service \u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u540c\u69d8\u306e\u5bfe\u51e6\u304c\u5fc5\u8981\u3067\u3059\u304c\u3001Second Service \u306f\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u306e\u52b9\u679c\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b 5 \u79d2\u9593\u30b9\u30ea\u30fc\u30d7\u3055\u305b\u308b\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089 Zipkin \u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u7c21\u5358\u306e\u305f\u3081 Docker \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n``` sh\n$ docker run -d -p 9411:9411 openzipkin/zipkin\n```\n\n\u6b21\u306b\u5404\u30b5\u30fc\u30d3\u30b9\u3092\u30d3\u30eb\u30c9\u5f8c\u3001\u8d77\u52d5\u3057\u307e\u3059\u3002\u540c\u4e00\u30de\u30b7\u30f3\u3067\u8d77\u52d5\u3059\u308b\u5834\u5408\u306f `swarm.port.offset` \u3067\u30dd\u30fc\u30c8\u3092\u305a\u3089\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n``` sh\n$ ./mvnw clean package\n```\n\nFirst Service \u306e\u8d77\u52d5(8080 \u30dd\u30fc\u30c8)\u3002\n\n``` sh\n$ java -jar first/target/first-swarm.jar\n```\n\nSecond Service \u306e\u8d77\u52d5(8280 \u30dd\u30fc\u30c8)\u3002\n\n``` sh\n$ java -jar second/target/second-swarm.jar -Dswarm.port.offset=200\n```\n\nThird Service \u306e\u8d77\u52d5(8380 \u30dd\u30fc\u30c8)\u3002\n\n``` sh\n$ java -jar third/target/third-swarm.jar -Dswarm.port.offset=300\n```\n\n\u5404\u30b5\u30fc\u30d3\u30b9\u304c\u8d77\u52d5\u3057\u305f\u3089 First Service \u3078\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u307e\u3059\u3002\n\n``` sh\n$ curl localhost:8080\nONE TWO THREE\n```\n\nSecond Service \u3067 5 \u79d2\u30b9\u30ea\u30fc\u30d7\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u3061\u3087\u3063\u3068\u6642\u9593\u304b\u304b\u308a\u307e\u3059\u3002\n\n\u3067\u306f http://localhost:9411 \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u30c8\u30ec\u30fc\u30b9\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\u30b5\u30fc\u30d3\u30b9\u540d\u3068\u3057\u3066 `first` \u3092\u9078\u629e\u3057\u3001`Start time` \u3068 `End time` \u3092\u9069\u5f53\u306a\u5024\u306b\u3057\u305f\u4e0a\u3067 `Find Traces` \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n![zipkin-1.png](https://qiita-image-store.s3.amazonaws.com/0/8409/2c2596e9-b99c-80c8-6d5b-ff3f77281058.png)\n\n\u3061\u3083\u3093\u3068\u51fa\u3066\u307e\u3059\u306d\u30025 \u79d2\u304b\u304b\u3063\u3066\u307e\u3059\u3002\u3053\u3053\u3092\u3055\u3089\u306b\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u547c\u3073\u51fa\u3057\u968e\u5c64\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n![zipkin-2.png](https://qiita-image-store.s3.amazonaws.com/0/8409/b7efc739-db69-67a4-83ed-e54b5e2cc6b7.png)\n\nsecond \u304c 5 \u79d2\u304b\u304b\u3063\u3066\u308b\u3053\u3068\u304c\u4e00\u76ee\u77ad\u7136\u3067\u3059\u3002\u5404\u30b5\u30fc\u30d3\u30b9\u306e\u547c\u3073\u51fa\u3057\u671f\u9593\u5185\u306e\u90e8\u5206\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u5185\u5bb9\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n![zipkin-3.png](https://qiita-image-store.s3.amazonaws.com/0/8409/4369a1ef-cb46-cd2f-1f9a-a8ae5f5aa720.png)\n\nZipkinFraction \u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\nhttps://wildfly-swarm.gitbooks.io/wildfly-swarm-users-guide/content/v/2016.12.1/advanced/tracing-zipkin.html\n\n## Enhanced JAX-RS Client\n\n\u6700\u5f8c\u306b Enahnced JAX-RS Client \u306b\u3064\u3044\u3066\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u3068\u306f\u3044\u3048\u3001\u3053\u306e\u6a5f\u80fd\u306f\u624b\u5143\u3067\u78ba\u8a8d\u3057\u305f\u3068\u3053\u308d\u4ee5\u4e0b\u306e\u554f\u984c\u306e\u305f\u3081 2016.12.1 \u6642\u70b9\u3067\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067\u53c2\u8003\u7a0b\u5ea6\u306b\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\n[SWARM-940: NoClassDefFoundError with Enhanced JAX-RS Client](https://issues.jboss.org/browse/SWARM-940)\n\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf i1, i2 \u3092\u6e21\u3059\u3068\u8db3\u3057\u7b97\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306a JAX-RS \u306e\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\n\n``` java\n@GET\n@Produces(MediaType.APPLICATION_JSON)\npublic String add(@QueryParam(\"i1\") int i1,\n                  @QueryParam(\"i2\") int i2) {\n\n  return String.format(\"{\\\"result\\\" : %d}\", i1 + i2);\n\n}\n```\n\n\u5358\u7d14\u306b JAXRS Client \u3092\u5229\u7528\u3057\u3066\u4e0a\u8a18\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n``` java\nimport javax.ws.rs.client.Client;\nimport javax.ws.rs.client.ClientBuilder;\nimport javax.ws.rs.client.WebTarget;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.Response;\n\nClient client = ClientBuilder.newClient();\n\ntry {\n  WebTarget target = client.target(\"<service base url>\");\n\n  Response response = target\n    .queryParam(\"i1\", i1)\n    .queryParam(\"i2\", i2)\n    .request(MediaType.APPLICATION_JSON).get();\n\n  // response \u3092\u8aad\u3093\u3067\u3069\u3046\u3053\u3046\u3059\u308b\u51e6\u7406\n\n} finally {\n  client.close();\n}\n```\n\n\u500b\u4eba\u7684\u306b\u306f\u308f\u304b\u308a\u3084\u3059\u304f\u3066\u597d\u304d\u3067\u3059\u304c\u3001WildFly Swarm \u3067\u306f JAX-RS Client \u3092\u30e9\u30c3\u30d7\u3057\u305f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 API \u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5229\u7528\u3059\u308b\u969b\u306f\u4ee5\u4e0b\u306e\u4f9d\u5b58\u6027\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n``` xml\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>cdi</artifactId>\n</dependency>\n<dependency>\n  <groupId>org.wildfly.swarm</groupId>\n  <artifactId>cdi-jaxrsapi</artifactId>\n</dependency>\n```\n\n\u6b21\u306b\u5bfe\u8c61\u30b5\u30fc\u30d3\u30b9\u306e API \u306b\u5373\u3057\u305f\u5f62\u3067\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5207\u308a\u307e\u3059\u3002\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f `org.wildfly.swarm.cdi.jaxrsapi.ServiceClient` \u3092\u7d99\u627f\u3057\u305f\u4e0a\u3067\u3001`@org.wildfly.swarm.cdi.jaxrsapi.Service` \u3092\u4ed8\u4e0e\u3057\u3001`baseUrl` \u306b\u5bfe\u8c61\u30b5\u30fc\u30d3\u30b9\u306e\u30d9\u30fc\u30b9 URL \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u5404\u30e1\u30bd\u30c3\u30c9\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5185\u5bb9\u306b\u5fdc\u3058\u305f API \u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n``` java\nimport org.wildfly.swarm.cdi.jaxrsapi.Service;\nimport org.wildfly.swarm.cdi.jaxrsapi.ServiceClient;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.QueryParam;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/\")\n@Service(baseUrl = \"<service base url>\")\npublic interface AdditionService extends ServiceClient<AdditionService> {\n\n  @GET\n  @Produces(MediaType.APPLICATION_JSON)\n  String add(@QueryParam(\"i1\") int i1,\n             @QueryParam(\"i2\") int i2);\n\n}\n```\n\n> \u3053\u3046\u3044\u3063\u305f\u30a2\u30d7\u30ed\u30fc\u30c1\u306f [RESTEasy \u306e Proxy Framework](https://docs.jboss.org/resteasy/docs/3.1.0.Final/userguide/html/RESTEasy_Client_Framework.html#d4e2297) \u3084 [Retrofit](https://square.github.io/retrofit/) \u3067\u3082\u3042\u308a\u307e\u3059\u306d\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u4e0a\u8a18\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\n\n``` java\nimport javax.enterprise.context.ApplicationScoped;\nimport javax.inject.Inject;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.QueryParam;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/\")\n@ApplicationScoped\npublic class CalcController {\n\n  @Inject\n  AdditionService additionService;\n\n  @GET\n  @Produces(MediaType.APPLICATION_JSON)\n  public String calc(@QueryParam(\"i1\") int i1,\n                     @QueryParam(\"i2\") int i2) {\n\n    return additionService.add(i1, i2);\n\n  }\n\n}\n```\n\n\u307e\u308b\u3067\u30ed\u30fc\u30ab\u30eb\u547c\u3073\u51fa\u3057\u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u306e\u304c\u3088\u3044\u3067\u3059\u306d\u3002\n\n\u305f\u3060\u3001\u73fe\u5728\u306e\u5b9f\u88c5\u3060\u3068 baseUrl \u3067\u6307\u5b9a\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306e URL \u306f\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3059\u308b\u3057\u304b\u306a\u3044\u305f\u3081\u3001\u3042\u307e\u308a\u5b9f\u7528\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u554f\u984c\u306b\u5bfe\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c1\u30b1\u30c3\u30c8\u304c\u5207\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3084\u3001\u305b\u3081\u3066\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u540d\u524d\u89e3\u6c7a\u3067\u304d\u308b\u306e\u306f\u5fc5\u9808\u3067\u3057\u3087\u3046\u3002\n\n* [SWARM-812 Extend JAX-RS Client API to integrate with Topology for service lookup](https://issues.jboss.org/browse/SWARM-812)\n* [SWARM-902 Provide way to set @Service base URL from configuration](https://issues.jboss.org/browse/SWARM-902)\n\n\u307e\u305f\u3001\u5148\u307b\u3069\u3054\u7d39\u4ecb\u3057\u305f Zipkin \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u3082\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 API \u3092\u4f7f\u3046\u3068\u3053\u3053\u3089\u3078\u3093\u306e\u8a2d\u5b9a\u3082\u52dd\u624b\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u3068\u3046\u308c\u3057\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n> [Spring Cloud Sleuth](https://cloud.spring.io/spring-cloud-sleuth/) \u306f\u307b\u3068\u3093\u3069 Zipkin \u3092\u610f\u8b58\u305b\u305a\u306b\u6e08\u307f\u307e\u3059\u3002\u3055\u3059\u304c\u3002\n> \u3059\u3050\u8a66\u3059\u306b\u306f\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u30b7\u30f3\u30d7\u30eb\u3067\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3067\u3059\u3002\n> https://github.com/openzipkin/sleuth-webmvc-example\n\n## \u304a\u307e\u3051\n\n\u500b\u4eba\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a WildFly Swarm \u306e\u30ac\u30a4\u30c9\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\n\n[WildFly Swarm Tour](https://emag.gitbooks.io/wildfly-swarm-tour/content)\n\nJAX-RS/CDI/JPA \u3092\u7528\u3044\u305f\u7c21\u5358\u306a Java EE \u306b\u3088\u308b CRUD \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u7528\u3044\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a2d\u5b9a\u3001\u3061\u3087\u3063\u3068\u3060\u3051 Docker \u306a\u3069\u3001\u305d\u308c\u306a\u308a\u306b\u30a8\u30c3\u30bb\u30f3\u30b9\u3092\u76db\u308a\u8fbc\u3093\u3067\u3044\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n\u672c\u30a8\u30f3\u30c8\u30ea\u306f\u3061\u3087\u3063\u3068\u3057\u305f\u6a5f\u80fd\u7d39\u4ecb\u3067\u3057\u305f\u304c\u3001\u57fa\u672c\u7684\u306a Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d44\u3093\u3067\u307f\u305f\u3044\u3068\u3044\u3046\u65b9\u306f\u305c\u3072\u4e00\u901a\u308a\u904a\u3093\u3067\u307f\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n## \u53c2\u8003\n\n* [WildFly Swarm User\u2019s Guide - 2016.12.1](https://wildfly-swarm.gitbooks.io/wildfly-swarm-users-guide/content/v/2016.12.1/)\n", "tags": ["Java", "JavaEE", "WildFly-Swarm"]}