{"context": "\n\n\u5b9f\u88c5\nWPF\u306ePopup\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u30c9\u30e9\u30c3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3067\u3066\u304d\u305f\u306e\u3067\u3001Behavior\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\nDraggablePopupBehavior.cs\n\n    public class DraggablePopupBehavior : Behavior<Popup>\n    {\n        private bool _IsMouseDown;\n        private Point _OldPoint;\n        private double _InitHorizontalOffset;\n        private double _InitVerticalOffset;\n\n        protected override void OnAttached()\n        {\n            base.OnAttached();\n\n            AssociatedObject.MouseLeftButtonDown += AssociatedObject_MouseLeftButtonDown;\n            AssociatedObject.MouseMove += AssociatedObject_MouseMove;\n            AssociatedObject.MouseLeftButtonUp += AssociatedObject_MouseLeftButtonUp;\n            AssociatedObject.Opened += AssociatedObject_Opened;\n            AssociatedObject.Closed += AssociatedObject_Closed;\n        }\n\n        protected override void OnDetaching()\n        {\n            AssociatedObject.MouseLeftButtonDown -= AssociatedObject_MouseLeftButtonDown;\n            AssociatedObject.MouseMove -= AssociatedObject_MouseMove;\n            AssociatedObject.MouseLeftButtonUp -= AssociatedObject_MouseLeftButtonUp;\n            AssociatedObject.Opened -= AssociatedObject_Opened;\n            AssociatedObject.Closed -= AssociatedObject_Closed;\n\n            base.OnDetaching();\n        }\n\n        private void AssociatedObject_Opened(object sender, EventArgs e)\n        {\n            // \u521d\u671f\u8868\u793a\u4f4d\u7f6e\u3092\u78ba\u4fdd\n            _InitHorizontalOffset = AssociatedObject.HorizontalOffset;\n            _InitVerticalOffset = AssociatedObject.VerticalOffset;\n        }\n\n\n        private void AssociatedObject_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)\n        {\n            // Capture\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306e\u307f_IsMouseDown = true\u3068\u306a\u308b\u3088\u3046\u306b\u3059\u308b\n            _IsMouseDown = AssociatedObject.Child.CaptureMouse();\n            _OldPoint = AssociatedObject.PointToScreen(e.GetPosition(AssociatedObject));\n\n        }\n\n        private void AssociatedObject_MouseMove(object sender, MouseEventArgs e)\n        {\n            if(!_IsMouseDown)\n            {\n                return;\n            }\n\n            // \u524d\u56de\u4f4d\u7f6e\u304b\u3089\u306e\u5dee\u5206\u3092\u8a08\u7b97\n            var currentPoint = AssociatedObject.PointToScreen(e.GetPosition(AssociatedObject));\n            var offset = currentPoint - _OldPoint;\n            _OldPoint = currentPoint;\n\n            AssociatedObject.HorizontalOffset += offset.X;\n            AssociatedObject.VerticalOffset += offset.Y;\n        }\n\n        private void AssociatedObject_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)\n        {\n            // \u5f8c\u7247\u4ed8\u3051\n            _IsMouseDown = false;\n            AssociatedObject.Child.ReleaseMouseCapture();\n        }\n\n        private void AssociatedObject_Closed(object sender, EventArgs e)\n        {\n            // \u521d\u671f\u4f4d\u7f6e\u3092\u5143\u306b\u623b\u3059\n            AssociatedObject.HorizontalOffset = _InitHorizontalOffset;\n            AssociatedObject.VerticalOffset = _InitVerticalOffset;\n        }\n    }\n\n\n\n\u307b\u307c\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\u306e\u901a\u308a\u3067\u3059\u304c\u3001Popup.Opened\u3068Popup.Closed\u30a4\u30d9\u30f3\u30c8\u3092\u30ea\u30c3\u30b9\u30f3\u3057\u3066\u3001\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u70b9\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n\u53c2\u8003\nhttp://devlights.hatenablog.com/entry/2015/05/25/232704\n##\u5b9f\u88c5\nWPF\u306ePopup\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u30c9\u30e9\u30c3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3067\u3066\u304d\u305f\u306e\u3067\u3001Behavior\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n```csharp:DraggablePopupBehavior.cs\n\n    public class DraggablePopupBehavior : Behavior<Popup>\n    {\n        private bool _IsMouseDown;\n        private Point _OldPoint;\n        private double _InitHorizontalOffset;\n        private double _InitVerticalOffset;\n\n        protected override void OnAttached()\n        {\n            base.OnAttached();\n\n            AssociatedObject.MouseLeftButtonDown += AssociatedObject_MouseLeftButtonDown;\n            AssociatedObject.MouseMove += AssociatedObject_MouseMove;\n            AssociatedObject.MouseLeftButtonUp += AssociatedObject_MouseLeftButtonUp;\n            AssociatedObject.Opened += AssociatedObject_Opened;\n            AssociatedObject.Closed += AssociatedObject_Closed;\n        }\n\n        protected override void OnDetaching()\n        {\n            AssociatedObject.MouseLeftButtonDown -= AssociatedObject_MouseLeftButtonDown;\n            AssociatedObject.MouseMove -= AssociatedObject_MouseMove;\n            AssociatedObject.MouseLeftButtonUp -= AssociatedObject_MouseLeftButtonUp;\n            AssociatedObject.Opened -= AssociatedObject_Opened;\n            AssociatedObject.Closed -= AssociatedObject_Closed;\n\n            base.OnDetaching();\n        }\n\n        private void AssociatedObject_Opened(object sender, EventArgs e)\n        {\n            // \u521d\u671f\u8868\u793a\u4f4d\u7f6e\u3092\u78ba\u4fdd\n            _InitHorizontalOffset = AssociatedObject.HorizontalOffset;\n            _InitVerticalOffset = AssociatedObject.VerticalOffset;\n        }\n\n\n        private void AssociatedObject_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)\n        {\n            // Capture\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306e\u307f_IsMouseDown = true\u3068\u306a\u308b\u3088\u3046\u306b\u3059\u308b\n            _IsMouseDown = AssociatedObject.Child.CaptureMouse();\n            _OldPoint = AssociatedObject.PointToScreen(e.GetPosition(AssociatedObject));\n            \n        }\n\n        private void AssociatedObject_MouseMove(object sender, MouseEventArgs e)\n        {\n            if(!_IsMouseDown)\n            {\n                return;\n            }\n\n            // \u524d\u56de\u4f4d\u7f6e\u304b\u3089\u306e\u5dee\u5206\u3092\u8a08\u7b97\n            var currentPoint = AssociatedObject.PointToScreen(e.GetPosition(AssociatedObject));\n            var offset = currentPoint - _OldPoint;\n            _OldPoint = currentPoint;\n\n            AssociatedObject.HorizontalOffset += offset.X;\n            AssociatedObject.VerticalOffset += offset.Y;\n        }\n\n        private void AssociatedObject_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)\n        {\n            // \u5f8c\u7247\u4ed8\u3051\n            _IsMouseDown = false;\n            AssociatedObject.Child.ReleaseMouseCapture();\n        }\n\n        private void AssociatedObject_Closed(object sender, EventArgs e)\n        {\n            // \u521d\u671f\u4f4d\u7f6e\u3092\u5143\u306b\u623b\u3059\n            AssociatedObject.HorizontalOffset = _InitHorizontalOffset;\n            AssociatedObject.VerticalOffset = _InitVerticalOffset;\n        }\n    }\n\n```\n\n\u307b\u307c\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\u306e\u901a\u308a\u3067\u3059\u304c\u3001Popup.Opened\u3068Popup.Closed\u30a4\u30d9\u30f3\u30c8\u3092\u30ea\u30c3\u30b9\u30f3\u3057\u3066\u3001\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u70b9\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n##\u53c2\u8003\nhttp://devlights.hatenablog.com/entry/2015/05/25/232704\n", "tags": ["WPF"]}