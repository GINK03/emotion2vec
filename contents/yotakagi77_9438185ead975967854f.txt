{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f\u6d41\u4f53\u89e3\u6790\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3042\u308bOpenFOAM\u306etips\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3067\u3059\uff0eOpenFOAM\u3067\u306f\u5f8c\u51e6\u7406(\u53ef\u8996\u5316)\u3068\u3057\u3066ParaView\u3092\u7528\u3044\u3066\u8a08\u7b97\u7d50\u679c\u306e\u63cf\u753b\u3092\u884c\u3044\u307e\u3059\u304c\uff0c\u57fa\u672c\u7684\u306b\u63cf\u753b\u3055\u308c\u305f\u753b\u50cf\u306f\u30e9\u30b9\u30bf\u30fc\u5f62\u5f0f\u3067\u3042\u308a\uff0c\u4e8c\u6b21\u5143\u65ad\u9762\u3067\u306e\u7b49\u9ad8\u7dda(\u30b3\u30f3\u30bf\u30fc)\u3092\u30d9\u30af\u30bf\u30fc\u5f62\u5f0f\u3067\u51fa\u529b\u3067\u304d\u307e\u305b\u3093\uff0e\u307e\u305f\uff0c\u53ef\u8996\u5316\u3059\u308b\u65ad\u9762\u30fb\u5909\u6570\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u3068\u304d\u306fParaView\u3092\u8d77\u52d5\u3057\u3066\u63cf\u753b\u3059\u308b\u4f5c\u696d\u304c\u9762\u5012\u306b\u306a\u308a\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306fpython\u306e\u53ef\u8996\u5316\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308bmatplotlib\u3092\u7528\u3044\u3066\u534a\u81ea\u52d5\u7684\u306b\u4e8c\u6b21\u5143\u65ad\u9762\u30b3\u30f3\u30bf\u30fc\u3092\u63cf\u753b\u3057\u3066\u30d9\u30af\u30bf\u30fc\u5f62\u5f0f\u3067\u51fa\u529b\u3059\u308b\u65b9\u6cd5\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\uff0e\n\n\u74b0\u5883\u69cb\u7bc9\n\u4eca\u56de\u5fc5\u8981\u3068\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306fOpenFOAM\u3068Python\u3067\u3059\uff0eOpenFOAM\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u6700\u8fd1\u30e1\u30b8\u30e3\u30fc\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3055\u308c\u30664.0\u3082\u3057\u304f\u306fv1606\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306f2.4.x\u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0e\u307e\u305fPython\u306b\u95a2\u3057\u3066\u306f2.7\u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0ePython\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066numpy\uff0cmatplotlib\uff0cvtk (python-vtk)\uff0ctkinter (python-tk) \u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u306e\u3067\u7121\u3051\u308c\u3070\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\u74b0\u5883\u69cb\u7bc9\u304c\u6e08\u3093\u3060\u3089\uff0c\u7aef\u672b\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u3088\u3063\u3066\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\uff0e\n\nOpenFOAM\n$ foamInstallationTest\n$ mkdir -p $FOAM_RUN\n$ run\n$ cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity ./\n$ cd cavity\n$ blockMesh\n$ icoFoam\n\nfoamInstallationTest\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305fOpenFOAM\u306e\u57fa\u672c\u7684\u306a\u74b0\u5883\u8a2d\u5b9a\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u307e\u3059\uff0e\u4ee5\u964d\u306e\u30b3\u30de\u30f3\u30c9\u3067\u306fOpenFOAM\u306e\u57fa\u672c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u3042\u308b\u30ad\u30e3\u30d3\u30c6\u30a3\u6d41\u308c\u3092\u5b9f\u884c\u3057\u3066\u304a\u308a\uff0c\u3053\u3053\u307e\u3067\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3044\u306a\u3051\u308c\u3070OK\u3067\u3059\uff0e\n\nPython\n$ python\n>>> import numpy\n>>> import matplotlib\n>>> import vtk\n>>> import Tkinter\n>>> quit()\n\n\u5404\u30d1\u30c3\u30b1\u30fc\u30b8(\u30e2\u30b8\u30e5\u30fc\u30eb)\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308c\u3070\u4f55\u3082\u8868\u793a\u3055\u308c\u305a\u306b\u6b63\u5e38\u306b\u30d7\u30ed\u30f3\u30d7\u30c8\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff0eImportError: No module named xxxx\u306e\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u3066\u304d\u305f\u3089\uff0c\u3082\u3046\u4e00\u5ea6\u8a72\u5f53\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5165\u308c\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\u4e8c\u6b21\u5143\u65ad\u9762\u30c7\u30fc\u30bf(vtk)\u306e\u53d6\u5f97\n\u307e\u305aOpenFOAM\u306e\u89e3\u6790\u7d50\u679c\u304b\u3089\uff0c\u63cf\u753b\u3057\u305f\u3044\u4e8c\u6b21\u5143\u65ad\u9762\u30c7\u30fc\u30bf\u3092vtk\u5f62\u5f0f\u3067\u53d6\u5f97\u3057\u307e\u3059\uff0eOpenFOAM\u306e\u30c7\u30fc\u30bf\u3092ParaView\u3067\u8aad\u307f\u8fbc\u3093\u3067Slice\u3067\u65ad\u9762\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3057\u3066\u3082\u3088\u3044\u306e\u3067\u3059\u304c\uff0c\u4eca\u56de\u306e\u8da3\u65e8\u306f\u306a\u308b\u3079\u304f\u30b3\u30de\u30f3\u30c9or\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u81ea\u52d5\u7684\u306b\u7b49\u9ad8\u7dda\u56f3\u3092\u63cf\u304f\u3053\u3068\u306a\u306e\u3067\uff0cGUI\u64cd\u4f5c\u304c\u5fc5\u8981\u306aParaView\u306f\u7528\u3044\u307e\u305b\u3093\uff0e\u3053\u3053\u3067\u306fOpenFOAM\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3042\u308bsample(OpenFOAM 4.0\u4ee5\u964d\u3067\u306fpostProcess\u306b\u7d71\u5408\u3055\u308c\u3066\u3044\u308b)\u3092\u5229\u7528\u3057\u307e\u3059\uff0e\n\u74b0\u5883\u8a2d\u5b9a\u78ba\u8a8d\u306e\u3068\u3053\u308d\u3067\u5b9f\u884c\u3057\u305f\u30ad\u30e3\u30d3\u30c6\u30a3\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u7d50\u679c\u3092\u4f7f\u3063\u3066\u65ad\u9762\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\u307e\u305asample\u3092\u4f7f\u3046\u305f\u3081\u306b\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308bsampleDict\u306e\u96db\u5f62\u3092\u30b3\u30d4\u30fc\u3057\u3066\u7de8\u96c6\u3057\u307e\u3059\uff0e\n$ run\n$ cd cavity\n$ cp $FOAM_UTILITIES/postProcessing/sampling/sample/sampleDict ./system\n$ \n\n\u5143\u306e\u96db\u5f62\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u4f7f\u3044\u65b9\u30b3\u30e1\u30f3\u30c8\u3092\u542b\u3081\u3066\u69d8\u3005\u306a\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u65b9\u6cd5\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u304c\uff0c\u4eca\u56de\u306f\u4e8c\u6b21\u5143\u30ad\u30e3\u30d3\u30c6\u30a3\u306exxx-yyy\u5e73\u9762\u3060\u3051\u3092\u30b5\u30f3\u30d7\u30eb\u3059\u308b\u306e\u3067\uff0csampleDict\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5358\u7d14\u5316\u3057\u307e\u3059\uff0e\nsetFormat raw;\nsurfaceFormat vtk;\nformatOptions\n{\n}\ninterpolationScheme cellPoint;\nfields\n(\n    p\n    U\n);\nsets\n(\n);\nsurfaces\n(\n    interpolatedPlane\n    {\n        type            plane;\n        coordinateSystem\n        {\n            origin      (0.05 0.05 0.005);\n            coordinateRotation\n            {\n                type    axesRotation;\n                e1      (1 0 0);\n                e2      (0 1 0);\n            }\n        }\n        basePoint       (0 0 0);\n        normalVector    (0 0 1);\n        interpolate     true;\n    }\n);\n\nsets\u306f\u76f4\u7dda\u306a\u3069\u306e\u4e00\u6b21\u5143\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u4f7f\u3046\u3082\u306e\u306a\u306e\u3067\u4eca\u56de\u306f\u7a7a\u767d\u306b\u3057\u307e\u3059\uff0esurfaces\u306e\u6307\u5b9a\u306e\u4ed5\u65b9\u306f\u4f55\u901a\u308a\u304b\u3042\u308a\u307e\u3059\u304c\uff0c\u4eca\u56de\u306f\u88dc\u9593\u306b\u3088\u3063\u3066\u6c42\u3081\u308b\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\nsampleDict\u306e\u7de8\u96c6\u304c\u7d42\u308f\u3063\u305f\u3089\uff0csample\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u4e8c\u6b21\u5143\u65ad\u9762\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u30aa\u30d7\u30b7\u30e7\u30f3-latestTime\u3092\u4ed8\u3051\u3066\u6700\u7d42\u6642\u523b(0.5)\u306e\u30c7\u30fc\u30bf\u306e\u307f\u30b5\u30f3\u30d7\u30eb\u3057\u307e\u3059\uff0e\n$ sample -latestTime\n\n\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bpostProcessing/surfaces\u3068\u3044\u3046\u30c7\u30a3\u30af\u30ec\u30c8\u30ea\u304c\u3067\u304d\uff0c\u6307\u5b9a\u3057\u305f\u6642\u523b\u3067\u306evtk\u30c7\u30fc\u30bf\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\uff0e\n\nPython\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6e96\u5099\n\u4e0a\u8ff0\u306esample\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u4f5c\u6210\u3055\u308c\u305fvtk\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3044\u308f\u3086\u308b\u30ec\u30ac\u30b7\u30fc\u5f62\u5f0f\u306e\u30d0\u30fc\u30b8\u30e7\u30f32.0\u3067\u3059\uff0ePython\u3067\u306fvtk\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\uff0c\u53ef\u8996\u5316\u30e9\u30a4\u30d6\u30e9\u30ea\u306ematplotlib\u306b\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u308c\u3070\u81ea\u7531\u306b\u63cf\u753b\u3067\u304d\u307e\u3059\uff0e\u81ea\u5206\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u3082\u826f\u3044\u3067\u3059\u304c\uff0cAlexey Matveichev\u3055\u3093\u304cPlotting VTK files with matplotlib and python-vtk\u3068\u3044\u3046\u8a18\u4e8b\u3092\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\uff0c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5229\u7528\u3057\u307e\u3059\uff0e\u8a18\u4e8b\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306fpython-vtk\u306evtk\u30d0\u30fc\u30b8\u30e7\u30f3\u304c5.x\u7cfb\u306e\u3082\u306e\u306a\u306e\u3067\uff0c\u65b0\u3057\u30446.x\u7cfb\u3067\u74b0\u5883\u69cb\u7bc9\u3057\u305f\u5834\u5408\u306f\u8a18\u4e8b\u4e2d\u3067\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308bgithub\u516c\u958b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u3053\u3053\u3067\u306f5.x\u7cfb\u3092\u5229\u7528\u3059\u308b\u3068\u3057\u3066\u9032\u3081\u307e\u3059\uff0e\n\u5143\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066OpenFOAM\u306e\u89e3\u6790\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7f6e\u304d(\u30d5\u30a1\u30a4\u30eb\u540d\u306fplotUx.py\u3068\u3057\u3066\u304a\u304f)\uff0c\u5c11\u3057\u4fee\u6b63\u3057\u307e\u3059\uff0e\n\nplotUx.py\n#!/usr/bin/env python\n\nimport sys  # new\nimport os   # new\nimport numpy as N\nimport vtk\nimport matplotlib.pyplot as P\n\ndef load_velocity(filename):\n    if not os.path.exists(filename): return None\n    reader = vtk.vtkPolyDataReader()\n    reader.SetFileName(filename)\n    reader.ReadAllVectorsOn()\n    reader.Update()\n\n    data = reader.GetOutput()\n    cells = data.GetPolys()\n    triangles = cells.GetData()\n    points = data.GetPoints()\n    point_data = data.GetPointData()\n    Udata = point_data.GetArray(0)\n\n    ntri = triangles.GetNumberOfTuples()/4\n    npts = points.GetNumberOfPoints()\n    nvls = Udata.GetNumberOfTuples()\n\n    tri = N.zeros((ntri, 3))\n    x = N.zeros(npts)\n    y = N.zeros(npts)\n    ux = N.zeros(nvls)\n    uy = N.zeros(nvls)\n\n    for i in xrange(0, ntri):\n        tri[i, 0] = triangles.GetTuple(4*i + 1)[0]\n        tri[i, 1] = triangles.GetTuple(4*i + 2)[0]\n        tri[i, 2] = triangles.GetTuple(4*i + 3)[0]\n\n    for i in xrange(npts):  # modified\n        pt = points.GetPoint(i)\n        x[i] = pt[0]\n        y[i] = pt[1]\n\n    for i in xrange(0, nvls):  # modified\n        U = Udata.GetTuple(i)\n        ux[i] = U[0]\n        uy[i] = U[1]\n\n    return (x, y, tri, ux, uy)\n\nP.clf()\nfn = sys.argv[1]  # new\nlevels = N.linspace(-1.0, 1.0, 21)  # modified\nx, y, tri, ux, uy = load_velocity(fn)  # modified\nP.tricontour(x, y, tri, ux, levels, linestyles='-',\n             colors='black', linewidths=0.5)\nP.tricontourf(x, y, tri, ux, levels)  # modified\nP.xlim([0, 0.1])  # new\nP.ylim([0, 0.1])  # new\nP.gca().set_aspect('equal')\nP.minorticks_on()\nP.gca().set_xticklabels([])\nP.gca().set_yticklabels([])\nP.title('$U_x$')  # modified\nP.savefig(\"Ux.png\", dpi=300, bbox_inches='tight')\nP.savefig(\"Ux.pdf\", bbox_inches='tight')\nP.show() # new\n\n\n\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u306e\u5927\u304d\u306a\u5909\u66f4\u70b9\u306f\uff0c\u8aad\u307f\u8fbc\u3080vtk\u30d5\u30a1\u30a4\u30eb\u3092sys.argv\u3092\u7528\u3044\u3066\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u70b9\u3068\uff0c\u6700\u5f8c\u306bshow()\u3067\u753b\u9762\u306b\u56f3\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u70b9\u3067\u3059\uff0e\n\nPython\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c (\u901f\u5ea6\u306ex\u6210\u5206\u306e\u7b49\u9ad8\u7dda\u56f3)\n\u6e96\u5099\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u30d9\u30af\u30c8\u30eb\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u7528\u306a\u306e\u3067\uff0c\u30b5\u30f3\u30d7\u30eb\u3057\u305f\u901f\u5ea6\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\uff0e\n$ python plotUx.py postProcessing/surfaces/0.5/U_interpolatedPlane.vtk\n\n\u30a8\u30e9\u30fc\u306a\u3057\u3067\u5225\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u7b49\u9ad8\u7dda\u56f3\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\uff0e\u7d42\u4e86\u3059\u308b\u306b\u306f\u8868\u793a\u3055\u308c\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u307e\u3059\uff0epng\u3068pdf\u3067\u3082\u51fa\u529b\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u305d\u308c\u3089\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\n\n\u6e26\u5ea6\u306e\u7b49\u9ad8\u7dda\u56f3\n\u3053\u3053\u307e\u3067\u3067\u901f\u5ea6\u306exxx\u6210\u5206\u3092\u63cf\u753b\u3057\u3066\u307f\u307e\u3057\u305f\u304c\uff0c\u4ed6\u306e\u7269\u7406\u91cf\u3082\u63cf\u753b\u3057\u3066\u307f\u307e\u3059\uff0e\n\n\u6e26\u5ea6\u306e\u8a08\u7b97\nOpenFOAM\u306e\u30ad\u30e3\u30d3\u30c6\u30a3\u8a08\u7b97\u3092\u7d42\u3048\u305f\u6bb5\u968e\u3067\u306f\uff0c\u4e3b\u306a\u7269\u7406\u91cf\u3068\u3057\u3066\u306f\u901f\u5ea6\u3068\u5727\u529b\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u6d41\u4f53\u89e3\u6790\u3067\u306f\u6e26\u5ea6\u304c\u89e3\u6790\u9818\u57df\u306b\u5b58\u5728\u3059\u308b\u6e26\u3092\u89b3\u5bdf\u3059\u308b\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u308b\u306e\u3067\uff0c\u6e26\u5ea6\u3082\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3059\uff0e\u307e\u305a\u306fOpenFOAM\u6a19\u6e96\u306e\u6e26\u5ea6\u8a08\u7b97\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3vorticity\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n$ vorticity -latestTime\n\n\u30aa\u30d7\u30b7\u30e7\u30f3-latestTime\u3092\u4ed8\u3051\u305f\u306e\u3067\u6700\u7d42\u6642\u523b\u306b\u5bfe\u3057\u3066\u306e\u307f\u6e26\u5ea6\u304c\u8a08\u7b97\u3055\u308c\u307e\u3059\uff0e0.5\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306bvorticity\u30c7\u30fc\u30bf\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\uff0e\n\n\u65ad\u9762\u30c7\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\n\u901f\u5ea6\u306e\u3068\u304d\u306b\u7528\u610f\u3057\u305fsampleDict\u3092\u7de8\u96c6\u3057\uff0c\u30b5\u30f3\u30d7\u30eb\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u5909\u6570\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8ffd\u8a18\u3057\u307e\u3059\uff0e\n...\nfields\n(\n    p\n    U\n    vorticity  // new\n);\n...\n\n\u901f\u5ea6\u306e\u3068\u304d\u3068\u540c\u69d8\u306bsample\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n$ sample -latestTime\n\n\u5b9f\u884c\u5f8c\u306b\uff0c\u30c7\u30a3\u30af\u30ec\u30c8\u30eapostProcessing/surfaces/0.5\u306e\u4e0b\u306b\u6e26\u5ea6(vorticity)\u306evtk\u30c7\u30fc\u30bf\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\uff0e\n\n\u6e26\u5ea6\u7528Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6e96\u5099\n\u4e8c\u6b21\u5143\u30ad\u30e3\u30d3\u30c6\u30a3\u6d41\u308c\u306e\u5834\u5408\uff0c\u6e26\u5ea6\u306fxxx-yyy\u5e73\u9762\u306b\u5782\u76f4\u306azzz\u65b9\u5411\u6210\u5206\u3092\u6301\u3064\u306e\u3067\uff0c\u6e26\u5ea6\u30d9\u30af\u30c8\u30eb\u306ezzz\u6210\u5206\u3092\u63cf\u753b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0c\u901f\u5ea6xxx\u6210\u5206\u7528\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u62e1\u5f35\u3057\u307e\u3059\uff0e\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u540d\u306fplotWz.py\u3068\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\n\nplotWz.py\n#!/usr/bin/env python\n\nimport sys\nimport os\nimport numpy as N\nimport vtk\nimport matplotlib.pyplot as P\n\ndef load_vorticity(filename): # modified\n    if not os.path.exists(filename): return None\n    reader = vtk.vtkPolyDataReader()\n    reader.SetFileName(filename)\n    reader.ReadAllVectorsOn()\n    reader.Update()\n\n    data = reader.GetOutput()\n    cells = data.GetPolys()\n    triangles = cells.GetData()\n    points = data.GetPoints()\n    point_data = data.GetPointData()\n    Wdata = point_data.GetArray(0)  # modified\n\n    ntri = triangles.GetNumberOfTuples()/4\n    npts = points.GetNumberOfPoints()\n    nvls = Wdata.GetNumberOfTuples()  # modified\n\n    tri = N.zeros((ntri, 3))\n    x = N.zeros(npts)\n    y = N.zeros(npts)\n    wx = N.zeros(nvls)  # modified\n    wy = N.zeros(nvls)  # modified\n    wz = N.zeros(nvls)  # new\n\n    for i in xrange(0, ntri):\n        tri[i, 0] = triangles.GetTuple(4*i + 1)[0]\n        tri[i, 1] = triangles.GetTuple(4*i + 2)[0]\n        tri[i, 2] = triangles.GetTuple(4*i + 3)[0]\n\n    for i in xrange(npts):\n        pt = points.GetPoint(i)\n        x[i] = pt[0]\n        y[i] = pt[1]\n\n    for i in xrange(0, nvls):\n        W = Wdata.GetTuple(i)  # modified\n        wx[i] = W[0]  # modified\n        wy[i] = W[1]  # modified\n        wz[i] = W[2]  # new\n\n    return (x, y, tri, wx, wy, wz)  # new\n\nP.clf()\nfn = sys.argv[1]\nlevels = N.linspace(-260, 260, 16)  # modified\nx, y, tri, wx, wy, wz = load_vorticity(fn)  # modified\nP.tricontour(x, y, tri, wz, levels, linestyles='-',\n             colors='black', linewidths=0.5)  # modified\nP.tricontourf(x, y, tri, wz, levels)  # modified\nP.xlim([0, 0.1])\nP.ylim([0, 0.1])\nP.gca().set_aspect('equal')\nP.minorticks_on()\nP.gca().set_xticklabels([])\nP.gca().set_yticklabels([])\nP.title('$W_z$')  # modified\nP.savefig(\"Wz.png\", dpi=300, bbox_inches='tight')  # modified\nP.savefig(\"Wz.pdf\", bbox_inches='tight')  # modified\nP.show()\n\n\n\nPython\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c (\u6e26\u5ea6\u306ez\u6210\u5206\u306e\u7b49\u9ad8\u7dda\u56f3)\n\u901f\u5ea6\u306e\u3068\u304d\u3068\u540c\u69d8\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n$ python plotWz.py postProcessing/surfaces/0.5/vorticity_interpolatedPlane.vtk\n\n\u30a8\u30e9\u30fc\u306a\u3057\u3067\u5225\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u7b49\u9ad8\u7dda\u56f3\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\uff0e\n\n\u5727\u529b\u306e\u7b49\u9ad8\u7dda\u56f3\n\u901f\u5ea6\u306exxx\u6210\u5206\uff0c\u6e26\u5ea6\u306ezzz\u6210\u5206\u3092\u63cf\u753b\u3057\u3066\u6765\u307e\u3057\u305f\u304c\uff0c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u7269\u7406\u91cf\u3068\u3057\u3066\u306f\u5727\u529b\u3082\u3042\u308a\u307e\u3059\uff0e\u5727\u529b\u306f\u30b9\u30ab\u30e9\u30fc\u5024\u306a\u306e\u3067\uff0c\u306f\u3058\u3081\u306e\u901f\u5ea6\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u304a\u3044\u3066\u8aad\u307f\u8fbc\u3080\u5024\u30922\u3064\u304b\u30891\u3064\u306b\u5909\u66f4\u3059\u308b\u3060\u3051\u3067OK\u3067\u3059\uff0e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4fee\u6b63\u306f\u5358\u7d14\u306a\u306e\u3067\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\uff0e\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u81ea\u5206\u3067\u4f5c\u6210\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0eOpenFOAM\u306esampleDict\u3067\u306f\u3059\u3067\u306b\u5727\u529b(p)\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u4fee\u6b63\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308c\u3070\u5727\u529b\u306e\u7b49\u9ad8\u7dda\u56f3\u304c\u63cf\u3051\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u307e\u3068\u3081\n\u3053\u306e\u8a18\u4e8b\u3067\u306fmatplotlib\u3092\u5229\u7528\u3057\u3066OpenFOAM\u306e\u8a08\u7b97\u7d50\u679c\u3092\u4e8c\u6b21\u5143\u65ad\u9762\u3067\u7b49\u9ad8\u7dda\u56f3\u3068\u3057\u3066\u53ef\u8996\u5316\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\u5229\u7528\u3057\u3066\u3044\u308bOS\u306b\u3088\u3063\u3066\u306fPython\u306e\u74b0\u5883\u69cb\u7bc9\u304c\u9762\u5012\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u69cb\u7bc9\u304c\u6e08\u3093\u3067\u3057\u307e\u3048\u3070\u8a08\u7b97\u6761\u4ef6\u3092\u5909\u3048\u3066\u53ef\u8996\u5316\u56f3\u3092\u81ea\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e\u4eca\u56de\uff0c\u7b49\u9ad8\u7dda\u306e\u9593\u9694(levels)\u306f\u30de\u30cb\u30e5\u30a2\u30eb\u3067\u5165\u529b\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u6700\u5927\u30fb\u6700\u5c0f\u3092\u6c42\u3081\u305f\u308a\u3057\u3066Python\u4e0a\u3067\u81ea\u52d5\u306b\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\uff0e\u307e\u305fmatplotlib\u306f\u591a\u69d8\u306a\u53ef\u8996\u5316\u56f3\u3092\u63cf\u753b\u3067\u304d\u307e\u3059\u306e\u3067\uff0cPython\u306e\u6a5f\u80fd\u3068\u4f75\u305b\u3066\u81ea\u5206\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n# \u306f\u3058\u3081\u306b\n\n\u3053\u306e\u8a18\u4e8b\u306f\u6d41\u4f53\u89e3\u6790\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3042\u308b[OpenFOAM](http://www.openfoam.com/)\u306etips\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3067\u3059\uff0eOpenFOAM\u3067\u306f\u5f8c\u51e6\u7406(\u53ef\u8996\u5316)\u3068\u3057\u3066[ParaView](http://www.paraview.org/)\u3092\u7528\u3044\u3066\u8a08\u7b97\u7d50\u679c\u306e\u63cf\u753b\u3092\u884c\u3044\u307e\u3059\u304c\uff0c\u57fa\u672c\u7684\u306b\u63cf\u753b\u3055\u308c\u305f\u753b\u50cf\u306f\u30e9\u30b9\u30bf\u30fc\u5f62\u5f0f\u3067\u3042\u308a\uff0c\u4e8c\u6b21\u5143\u65ad\u9762\u3067\u306e\u7b49\u9ad8\u7dda(\u30b3\u30f3\u30bf\u30fc)\u3092\u30d9\u30af\u30bf\u30fc\u5f62\u5f0f\u3067\u51fa\u529b\u3067\u304d\u307e\u305b\u3093\uff0e\u307e\u305f\uff0c\u53ef\u8996\u5316\u3059\u308b\u65ad\u9762\u30fb\u5909\u6570\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u3068\u304d\u306fParaView\u3092\u8d77\u52d5\u3057\u3066\u63cf\u753b\u3059\u308b\u4f5c\u696d\u304c\u9762\u5012\u306b\u306a\u308a\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306fpython\u306e\u53ef\u8996\u5316\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308bmatplotlib\u3092\u7528\u3044\u3066\u534a\u81ea\u52d5\u7684\u306b\u4e8c\u6b21\u5143\u65ad\u9762\u30b3\u30f3\u30bf\u30fc\u3092\u63cf\u753b\u3057\u3066\u30d9\u30af\u30bf\u30fc\u5f62\u5f0f\u3067\u51fa\u529b\u3059\u308b\u65b9\u6cd5\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\uff0e\n\n# \u74b0\u5883\u69cb\u7bc9\n\n\u4eca\u56de\u5fc5\u8981\u3068\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306fOpenFOAM\u3068Python\u3067\u3059\uff0eOpenFOAM\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u6700\u8fd1\u30e1\u30b8\u30e3\u30fc\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3055\u308c\u30664.0\u3082\u3057\u304f\u306fv1606\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306f2.4.x\u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0e\u307e\u305fPython\u306b\u95a2\u3057\u3066\u306f2.7\u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0ePython\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066numpy\uff0cmatplotlib\uff0cvtk (python-vtk)\uff0ctkinter (python-tk) \u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u306e\u3067\u7121\u3051\u308c\u3070\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\u74b0\u5883\u69cb\u7bc9\u304c\u6e08\u3093\u3060\u3089\uff0c\u7aef\u672b\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u3088\u3063\u3066\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\uff0e\n\n### OpenFOAM\n\n```bash\n$ foamInstallationTest\n$ mkdir -p $FOAM_RUN\n$ run\n$ cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity ./\n$ cd cavity\n$ blockMesh\n$ icoFoam\n```\n\n`foamInstallationTest`\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305fOpenFOAM\u306e\u57fa\u672c\u7684\u306a\u74b0\u5883\u8a2d\u5b9a\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u307e\u3059\uff0e\u4ee5\u964d\u306e\u30b3\u30de\u30f3\u30c9\u3067\u306fOpenFOAM\u306e\u57fa\u672c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u3042\u308b\u30ad\u30e3\u30d3\u30c6\u30a3\u6d41\u308c\u3092\u5b9f\u884c\u3057\u3066\u304a\u308a\uff0c\u3053\u3053\u307e\u3067\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3044\u306a\u3051\u308c\u3070OK\u3067\u3059\uff0e\n\n### Python\n\n```bash\n$ python\n>>> import numpy\n>>> import matplotlib\n>>> import vtk\n>>> import Tkinter\n>>> quit()\n```\n\n\u5404\u30d1\u30c3\u30b1\u30fc\u30b8(\u30e2\u30b8\u30e5\u30fc\u30eb)\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308c\u3070\u4f55\u3082\u8868\u793a\u3055\u308c\u305a\u306b\u6b63\u5e38\u306b\u30d7\u30ed\u30f3\u30d7\u30c8\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff0e`ImportError: No module named xxxx`\u306e\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u3066\u304d\u305f\u3089\uff0c\u3082\u3046\u4e00\u5ea6\u8a72\u5f53\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5165\u308c\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n# \u4e8c\u6b21\u5143\u65ad\u9762\u30c7\u30fc\u30bf(vtk)\u306e\u53d6\u5f97\n\n\u307e\u305aOpenFOAM\u306e\u89e3\u6790\u7d50\u679c\u304b\u3089\uff0c\u63cf\u753b\u3057\u305f\u3044\u4e8c\u6b21\u5143\u65ad\u9762\u30c7\u30fc\u30bf\u3092vtk\u5f62\u5f0f\u3067\u53d6\u5f97\u3057\u307e\u3059\uff0eOpenFOAM\u306e\u30c7\u30fc\u30bf\u3092ParaView\u3067\u8aad\u307f\u8fbc\u3093\u3067`Slice`\u3067\u65ad\u9762\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3057\u3066\u3082\u3088\u3044\u306e\u3067\u3059\u304c\uff0c\u4eca\u56de\u306e\u8da3\u65e8\u306f\u306a\u308b\u3079\u304f\u30b3\u30de\u30f3\u30c9or\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u81ea\u52d5\u7684\u306b\u7b49\u9ad8\u7dda\u56f3\u3092\u63cf\u304f\u3053\u3068\u306a\u306e\u3067\uff0cGUI\u64cd\u4f5c\u304c\u5fc5\u8981\u306aParaView\u306f\u7528\u3044\u307e\u305b\u3093\uff0e\u3053\u3053\u3067\u306fOpenFOAM\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3042\u308b`sample`(OpenFOAM 4.0\u4ee5\u964d\u3067\u306f`postProcess`\u306b\u7d71\u5408\u3055\u308c\u3066\u3044\u308b)\u3092\u5229\u7528\u3057\u307e\u3059\uff0e\n\n\u74b0\u5883\u8a2d\u5b9a\u78ba\u8a8d\u306e\u3068\u3053\u308d\u3067\u5b9f\u884c\u3057\u305f\u30ad\u30e3\u30d3\u30c6\u30a3\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u7d50\u679c\u3092\u4f7f\u3063\u3066\u65ad\u9762\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\u307e\u305a`sample`\u3092\u4f7f\u3046\u305f\u3081\u306b\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b`sampleDict`\u306e\u96db\u5f62\u3092\u30b3\u30d4\u30fc\u3057\u3066\u7de8\u96c6\u3057\u307e\u3059\uff0e\n\n```bash\n$ run\n$ cd cavity\n$ cp $FOAM_UTILITIES/postProcessing/sampling/sample/sampleDict ./system\n$ \n```\n\n\u5143\u306e\u96db\u5f62\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u4f7f\u3044\u65b9\u30b3\u30e1\u30f3\u30c8\u3092\u542b\u3081\u3066\u69d8\u3005\u306a\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u65b9\u6cd5\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u304c\uff0c\u4eca\u56de\u306f\u4e8c\u6b21\u5143\u30ad\u30e3\u30d3\u30c6\u30a3\u306e$x$-$y$\u5e73\u9762\u3060\u3051\u3092\u30b5\u30f3\u30d7\u30eb\u3059\u308b\u306e\u3067\uff0c`sampleDict`\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5358\u7d14\u5316\u3057\u307e\u3059\uff0e\n\n```c++\nsetFormat raw;\nsurfaceFormat vtk;\nformatOptions\n{\n}\ninterpolationScheme cellPoint;\nfields\n(\n    p\n    U\n);\nsets\n(\n);\nsurfaces\n(\n    interpolatedPlane\n    {\n        type            plane;\n        coordinateSystem\n        {\n            origin      (0.05 0.05 0.005);\n            coordinateRotation\n            {\n                type    axesRotation;\n                e1      (1 0 0);\n                e2      (0 1 0);\n            }\n        }\n        basePoint       (0 0 0);\n        normalVector    (0 0 1);\n        interpolate     true;\n    }\n);\n```\n\n`sets`\u306f\u76f4\u7dda\u306a\u3069\u306e\u4e00\u6b21\u5143\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u4f7f\u3046\u3082\u306e\u306a\u306e\u3067\u4eca\u56de\u306f\u7a7a\u767d\u306b\u3057\u307e\u3059\uff0e`surfaces`\u306e\u6307\u5b9a\u306e\u4ed5\u65b9\u306f\u4f55\u901a\u308a\u304b\u3042\u308a\u307e\u3059\u304c\uff0c\u4eca\u56de\u306f\u88dc\u9593\u306b\u3088\u3063\u3066\u6c42\u3081\u308b\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\n\n`sampleDict`\u306e\u7de8\u96c6\u304c\u7d42\u308f\u3063\u305f\u3089\uff0c`sample`\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u4e8c\u6b21\u5143\u65ad\u9762\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u30aa\u30d7\u30b7\u30e7\u30f3`-latestTime`\u3092\u4ed8\u3051\u3066\u6700\u7d42\u6642\u523b(0.5)\u306e\u30c7\u30fc\u30bf\u306e\u307f\u30b5\u30f3\u30d7\u30eb\u3057\u307e\u3059\uff0e\n\n```bash\n$ sample -latestTime\n```\n\n\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b`postProcessing/surfaces`\u3068\u3044\u3046\u30c7\u30a3\u30af\u30ec\u30c8\u30ea\u304c\u3067\u304d\uff0c\u6307\u5b9a\u3057\u305f\u6642\u523b\u3067\u306evtk\u30c7\u30fc\u30bf\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\uff0e\n\n# Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6e96\u5099\n\n\u4e0a\u8ff0\u306e`sample`\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u4f5c\u6210\u3055\u308c\u305fvtk\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3044\u308f\u3086\u308b\u30ec\u30ac\u30b7\u30fc\u5f62\u5f0f\u306e\u30d0\u30fc\u30b8\u30e7\u30f32.0\u3067\u3059\uff0ePython\u3067\u306fvtk\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\uff0c\u53ef\u8996\u5316\u30e9\u30a4\u30d6\u30e9\u30ea\u306ematplotlib\u306b\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u308c\u3070\u81ea\u7531\u306b\u63cf\u753b\u3067\u304d\u307e\u3059\uff0e\u81ea\u5206\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u3082\u826f\u3044\u3067\u3059\u304c\uff0cAlexey Matveichev\u3055\u3093\u304c[Plotting VTK files with matplotlib and python-vtk](http://matveichev.blogspot.jp/2014/03/plotting-vtk-files-with-matplotlib-and.html)\u3068\u3044\u3046\u8a18\u4e8b\u3092\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\uff0c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5229\u7528\u3057\u307e\u3059\uff0e\u8a18\u4e8b\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306fpython-vtk\u306evtk\u30d0\u30fc\u30b8\u30e7\u30f3\u304c5.x\u7cfb\u306e\u3082\u306e\u306a\u306e\u3067\uff0c\u65b0\u3057\u30446.x\u7cfb\u3067\u74b0\u5883\u69cb\u7bc9\u3057\u305f\u5834\u5408\u306f\u8a18\u4e8b\u4e2d\u3067\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308b[github\u516c\u958b\u306e\u30b9\u30af\u30ea\u30d7\u30c8](https://gist.github.com/mrklein/44a392a01fa3e0181972)\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u3053\u3053\u3067\u306f5.x\u7cfb\u3092\u5229\u7528\u3059\u308b\u3068\u3057\u3066\u9032\u3081\u307e\u3059\uff0e\n\n\u5143\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066OpenFOAM\u306e\u89e3\u6790\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7f6e\u304d(\u30d5\u30a1\u30a4\u30eb\u540d\u306f`plotUx.py`\u3068\u3057\u3066\u304a\u304f)\uff0c\u5c11\u3057\u4fee\u6b63\u3057\u307e\u3059\uff0e\n\n```python:plotUx.py\n#!/usr/bin/env python\n\nimport sys  # new\nimport os   # new\nimport numpy as N\nimport vtk\nimport matplotlib.pyplot as P\n\ndef load_velocity(filename):\n    if not os.path.exists(filename): return None\n    reader = vtk.vtkPolyDataReader()\n    reader.SetFileName(filename)\n    reader.ReadAllVectorsOn()\n    reader.Update()\n\n    data = reader.GetOutput()\n    cells = data.GetPolys()\n    triangles = cells.GetData()\n    points = data.GetPoints()\n    point_data = data.GetPointData()\n    Udata = point_data.GetArray(0)\n\n    ntri = triangles.GetNumberOfTuples()/4\n    npts = points.GetNumberOfPoints()\n    nvls = Udata.GetNumberOfTuples()\n\n    tri = N.zeros((ntri, 3))\n    x = N.zeros(npts)\n    y = N.zeros(npts)\n    ux = N.zeros(nvls)\n    uy = N.zeros(nvls)\n\n    for i in xrange(0, ntri):\n        tri[i, 0] = triangles.GetTuple(4*i + 1)[0]\n        tri[i, 1] = triangles.GetTuple(4*i + 2)[0]\n        tri[i, 2] = triangles.GetTuple(4*i + 3)[0]\n\n    for i in xrange(npts):  # modified\n        pt = points.GetPoint(i)\n        x[i] = pt[0]\n        y[i] = pt[1]\n\n    for i in xrange(0, nvls):  # modified\n        U = Udata.GetTuple(i)\n        ux[i] = U[0]\n        uy[i] = U[1]\n\n    return (x, y, tri, ux, uy)\n\nP.clf()\nfn = sys.argv[1]  # new\nlevels = N.linspace(-1.0, 1.0, 21)  # modified\nx, y, tri, ux, uy = load_velocity(fn)  # modified\nP.tricontour(x, y, tri, ux, levels, linestyles='-',\n             colors='black', linewidths=0.5)\nP.tricontourf(x, y, tri, ux, levels)  # modified\nP.xlim([0, 0.1])  # new\nP.ylim([0, 0.1])  # new\nP.gca().set_aspect('equal')\nP.minorticks_on()\nP.gca().set_xticklabels([])\nP.gca().set_yticklabels([])\nP.title('$U_x$')  # modified\nP.savefig(\"Ux.png\", dpi=300, bbox_inches='tight')\nP.savefig(\"Ux.pdf\", bbox_inches='tight')\nP.show() # new\n```\n\n\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u306e\u5927\u304d\u306a\u5909\u66f4\u70b9\u306f\uff0c\u8aad\u307f\u8fbc\u3080vtk\u30d5\u30a1\u30a4\u30eb\u3092`sys.argv`\u3092\u7528\u3044\u3066\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u70b9\u3068\uff0c\u6700\u5f8c\u306b`show()`\u3067\u753b\u9762\u306b\u56f3\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u70b9\u3067\u3059\uff0e\n\n# Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c (\u901f\u5ea6\u306ex\u6210\u5206\u306e\u7b49\u9ad8\u7dda\u56f3)\n\n\u6e96\u5099\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u30d9\u30af\u30c8\u30eb\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u7528\u306a\u306e\u3067\uff0c\u30b5\u30f3\u30d7\u30eb\u3057\u305f\u901f\u5ea6\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\uff0e\n\n```bash\n$ python plotUx.py postProcessing/surfaces/0.5/U_interpolatedPlane.vtk\n```\n\n\u30a8\u30e9\u30fc\u306a\u3057\u3067\u5225\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u7b49\u9ad8\u7dda\u56f3\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\uff0e\u7d42\u4e86\u3059\u308b\u306b\u306f\u8868\u793a\u3055\u308c\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u307e\u3059\uff0epng\u3068pdf\u3067\u3082\u51fa\u529b\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u305d\u308c\u3089\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\n<img width=\"600\" alt=\"Ux.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/128259/d71b777c-adeb-1c19-174e-e893eb642dd3.png\">\n\n# \u6e26\u5ea6\u306e\u7b49\u9ad8\u7dda\u56f3\n\n\u3053\u3053\u307e\u3067\u3067\u901f\u5ea6\u306e$x$\u6210\u5206\u3092\u63cf\u753b\u3057\u3066\u307f\u307e\u3057\u305f\u304c\uff0c\u4ed6\u306e\u7269\u7406\u91cf\u3082\u63cf\u753b\u3057\u3066\u307f\u307e\u3059\uff0e\n\n## \u6e26\u5ea6\u306e\u8a08\u7b97\n\nOpenFOAM\u306e\u30ad\u30e3\u30d3\u30c6\u30a3\u8a08\u7b97\u3092\u7d42\u3048\u305f\u6bb5\u968e\u3067\u306f\uff0c\u4e3b\u306a\u7269\u7406\u91cf\u3068\u3057\u3066\u306f\u901f\u5ea6\u3068\u5727\u529b\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u6d41\u4f53\u89e3\u6790\u3067\u306f\u6e26\u5ea6\u304c\u89e3\u6790\u9818\u57df\u306b\u5b58\u5728\u3059\u308b\u6e26\u3092\u89b3\u5bdf\u3059\u308b\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u308b\u306e\u3067\uff0c\u6e26\u5ea6\u3082\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3059\uff0e\u307e\u305a\u306fOpenFOAM\u6a19\u6e96\u306e\u6e26\u5ea6\u8a08\u7b97\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3`vorticity`\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n\n```bash\n$ vorticity -latestTime\n```\n\n\u30aa\u30d7\u30b7\u30e7\u30f3`-latestTime`\u3092\u4ed8\u3051\u305f\u306e\u3067\u6700\u7d42\u6642\u523b\u306b\u5bfe\u3057\u3066\u306e\u307f\u6e26\u5ea6\u304c\u8a08\u7b97\u3055\u308c\u307e\u3059\uff0e`0.5`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b`vorticity`\u30c7\u30fc\u30bf\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\uff0e\n\n## \u65ad\u9762\u30c7\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\n\n\u901f\u5ea6\u306e\u3068\u304d\u306b\u7528\u610f\u3057\u305f`sampleDict`\u3092\u7de8\u96c6\u3057\uff0c\u30b5\u30f3\u30d7\u30eb\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u5909\u6570\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8ffd\u8a18\u3057\u307e\u3059\uff0e\n\n```c++\n...\nfields\n(\n    p\n    U\n    vorticity  // new\n);\n...\n```\n\n\u901f\u5ea6\u306e\u3068\u304d\u3068\u540c\u69d8\u306b`sample`\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n\n```bash\n$ sample -latestTime\n```\n\u5b9f\u884c\u5f8c\u306b\uff0c\u30c7\u30a3\u30af\u30ec\u30c8\u30ea`postProcessing/surfaces/0.5`\u306e\u4e0b\u306b\u6e26\u5ea6(`vorticity`)\u306evtk\u30c7\u30fc\u30bf\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\uff0e\n\n## \u6e26\u5ea6\u7528Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6e96\u5099\n\n\u4e8c\u6b21\u5143\u30ad\u30e3\u30d3\u30c6\u30a3\u6d41\u308c\u306e\u5834\u5408\uff0c\u6e26\u5ea6\u306f$x$-$y$\u5e73\u9762\u306b\u5782\u76f4\u306a$z$\u65b9\u5411\u6210\u5206\u3092\u6301\u3064\u306e\u3067\uff0c\u6e26\u5ea6\u30d9\u30af\u30c8\u30eb\u306e$z$\u6210\u5206\u3092\u63cf\u753b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0c\u901f\u5ea6$x$\u6210\u5206\u7528\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u62e1\u5f35\u3057\u307e\u3059\uff0e\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u540d\u306f`plotWz.py`\u3068\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\n\n```python:plotWz.py\n#!/usr/bin/env python\n\nimport sys\nimport os\nimport numpy as N\nimport vtk\nimport matplotlib.pyplot as P\n\ndef load_vorticity(filename): # modified\n    if not os.path.exists(filename): return None\n    reader = vtk.vtkPolyDataReader()\n    reader.SetFileName(filename)\n    reader.ReadAllVectorsOn()\n    reader.Update()\n\n    data = reader.GetOutput()\n    cells = data.GetPolys()\n    triangles = cells.GetData()\n    points = data.GetPoints()\n    point_data = data.GetPointData()\n    Wdata = point_data.GetArray(0)  # modified\n\n    ntri = triangles.GetNumberOfTuples()/4\n    npts = points.GetNumberOfPoints()\n    nvls = Wdata.GetNumberOfTuples()  # modified\n\n    tri = N.zeros((ntri, 3))\n    x = N.zeros(npts)\n    y = N.zeros(npts)\n    wx = N.zeros(nvls)  # modified\n    wy = N.zeros(nvls)  # modified\n    wz = N.zeros(nvls)  # new\n\n    for i in xrange(0, ntri):\n        tri[i, 0] = triangles.GetTuple(4*i + 1)[0]\n        tri[i, 1] = triangles.GetTuple(4*i + 2)[0]\n        tri[i, 2] = triangles.GetTuple(4*i + 3)[0]\n\n    for i in xrange(npts):\n        pt = points.GetPoint(i)\n        x[i] = pt[0]\n        y[i] = pt[1]\n\n    for i in xrange(0, nvls):\n        W = Wdata.GetTuple(i)  # modified\n        wx[i] = W[0]  # modified\n        wy[i] = W[1]  # modified\n        wz[i] = W[2]  # new\n\n    return (x, y, tri, wx, wy, wz)  # new\n\nP.clf()\nfn = sys.argv[1]\nlevels = N.linspace(-260, 260, 16)  # modified\nx, y, tri, wx, wy, wz = load_vorticity(fn)  # modified\nP.tricontour(x, y, tri, wz, levels, linestyles='-',\n             colors='black', linewidths=0.5)  # modified\nP.tricontourf(x, y, tri, wz, levels)  # modified\nP.xlim([0, 0.1])\nP.ylim([0, 0.1])\nP.gca().set_aspect('equal')\nP.minorticks_on()\nP.gca().set_xticklabels([])\nP.gca().set_yticklabels([])\nP.title('$W_z$')  # modified\nP.savefig(\"Wz.png\", dpi=300, bbox_inches='tight')  # modified\nP.savefig(\"Wz.pdf\", bbox_inches='tight')  # modified\nP.show()\n```\n## Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c (\u6e26\u5ea6\u306ez\u6210\u5206\u306e\u7b49\u9ad8\u7dda\u56f3)\n\n\u901f\u5ea6\u306e\u3068\u304d\u3068\u540c\u69d8\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n\n```bash\n$ python plotWz.py postProcessing/surfaces/0.5/vorticity_interpolatedPlane.vtk\n```\n\n\u30a8\u30e9\u30fc\u306a\u3057\u3067\u5225\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u7b49\u9ad8\u7dda\u56f3\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\uff0e\n\n# \u5727\u529b\u306e\u7b49\u9ad8\u7dda\u56f3\n\n\u901f\u5ea6\u306e$x$\u6210\u5206\uff0c\u6e26\u5ea6\u306e$z$\u6210\u5206\u3092\u63cf\u753b\u3057\u3066\u6765\u307e\u3057\u305f\u304c\uff0c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u7269\u7406\u91cf\u3068\u3057\u3066\u306f\u5727\u529b\u3082\u3042\u308a\u307e\u3059\uff0e\u5727\u529b\u306f\u30b9\u30ab\u30e9\u30fc\u5024\u306a\u306e\u3067\uff0c\u306f\u3058\u3081\u306e\u901f\u5ea6\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u304a\u3044\u3066\u8aad\u307f\u8fbc\u3080\u5024\u30922\u3064\u304b\u30891\u3064\u306b\u5909\u66f4\u3059\u308b\u3060\u3051\u3067OK\u3067\u3059\uff0e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4fee\u6b63\u306f\u5358\u7d14\u306a\u306e\u3067\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\uff0e\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u81ea\u5206\u3067\u4f5c\u6210\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0eOpenFOAM\u306e`sampleDict`\u3067\u306f\u3059\u3067\u306b\u5727\u529b(`p`)\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u4fee\u6b63\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308c\u3070\u5727\u529b\u306e\u7b49\u9ad8\u7dda\u56f3\u304c\u63cf\u3051\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n# \u307e\u3068\u3081\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306fmatplotlib\u3092\u5229\u7528\u3057\u3066OpenFOAM\u306e\u8a08\u7b97\u7d50\u679c\u3092\u4e8c\u6b21\u5143\u65ad\u9762\u3067\u7b49\u9ad8\u7dda\u56f3\u3068\u3057\u3066\u53ef\u8996\u5316\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\u5229\u7528\u3057\u3066\u3044\u308bOS\u306b\u3088\u3063\u3066\u306fPython\u306e\u74b0\u5883\u69cb\u7bc9\u304c\u9762\u5012\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u69cb\u7bc9\u304c\u6e08\u3093\u3067\u3057\u307e\u3048\u3070\u8a08\u7b97\u6761\u4ef6\u3092\u5909\u3048\u3066\u53ef\u8996\u5316\u56f3\u3092\u81ea\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e\u4eca\u56de\uff0c\u7b49\u9ad8\u7dda\u306e\u9593\u9694(`levels`)\u306f\u30de\u30cb\u30e5\u30a2\u30eb\u3067\u5165\u529b\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u6700\u5927\u30fb\u6700\u5c0f\u3092\u6c42\u3081\u305f\u308a\u3057\u3066Python\u4e0a\u3067\u81ea\u52d5\u306b\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\uff0e\u307e\u305fmatplotlib\u306f\u591a\u69d8\u306a\u53ef\u8996\u5316\u56f3\u3092\u63cf\u753b\u3067\u304d\u307e\u3059\u306e\u3067\uff0cPython\u306e\u6a5f\u80fd\u3068\u4f75\u305b\u3066\u81ea\u5206\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n\n\n\n\n\n", "tags": ["Python", "OpenFOAM", "matplotlib", "CAE", "OSS"]}