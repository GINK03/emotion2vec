{"tags": ["docker", "swarm", "swarmkit"], "context": "2016/6/16\u8ffd\u8a18\nDocker\u672c\u4f53\u306bSwarmKit\u3068\u306e\u9023\u643a\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u3066\u307e\u3057\u305f\u3002\nPullRequest:GH-23361\nSwarmKit\u5358\u4f53\u3067\u4f7f\u3046\u3068\u3044\u3046\u3088\u308a\u3001DockerCLI\u3068\u306e\u7d71\u5408\u3059\u308b\u65b9\u5411\u306e\u3088\u3046\u3067\u3059\u306d\u3002\ndocker CLI\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\nswarm init\nswarm join\nswarm leave\nswarm update\n\nswarm\u30af\u30e9\u30b9\u30bf\u30ce\u30fc\u30c9\u7ba1\u7406\u7528\u306e\u30b3\u30de\u30f3\u30c9\u3082\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nnode_accept\nnode_reject\nnode_promote\nnode_demote\nnode_inspect\nnode_update\nnode_tasks\nnode_ls\nnode_rm\n\nswarm\u30af\u30e9\u30b9\u30bf\u4e0a\u3067\u306e\u30b8\u30e7\u30d6\u5b9f\u884c\u7528\u30b3\u30de\u30f3\u30c9\u3082\u8ffd\u52a0\u3067\u3059\u3002\n\nservice create\nservice inspect\nservice update\nservice remove\nservice tasks\n\n\u6700\u5f8c\u306b\u3001\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7528\u306bDocker Stacks\u6a5f\u80fd(\u30b3\u30de\u30f3\u30c9)\u3082\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\nstack\ndeploy\n\n\u5404\u30b3\u30de\u30f3\u30c9\u306e\u8a73\u7d30\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nDocker Stacks\u306b\u3064\u3044\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u53c2\u8003\u307e\u3067\u306bswarm init\u3068swarm join\u306e\u30d8\u30eb\u30d7\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\nswarm init\nUsage:  docker swarm init [OPTIONS]\n\nInitialize a Swarm.\n\nOptions:\n      --auto-accept value   Acceptance policy (default [worker,manager])\n      --force-new-cluster   Force create a new cluster from current state.\n      --help                Print usage\n      --listen-addr value   Listen address (default 0.0.0.0:2377)\n      --secret string       Set secret value needed to accept nodes into cluster\n\nInitialize a Swarm cluster. The docker engine targeted by this command becomes a manager\nin the newly created one node Swarm cluster.\n\nswarm join\nUsage:  docker swarm join [OPTIONS] HOST:PORT\n\nJoin a Swarm as a node and/or manager.\n\nOptions:\n      --help                Print usage\n      --listen-addr value   Listen address (default 0.0.0.0:2377)\n      --manager             Try joining as a manager.\n      --secret string       Secret for node acceptance\n\nJoin a node to a Swarm cluster. If the --manager flag is specified, the docker engine\ntargeted by this command becomes a manager. If it is not specified, it becomes a worker.\n---2016/6/16\u8ffd\u8a18 End---\n\n\u4f55\u6c17\u306a\u304fDocker\u793e\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u898b\u3066\u305f\u3089SwarmKit\u306a\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u8abf\u3079\u3066\u307f\u305f\u3089\u767a\u8868\u3055\u308c\u305f\u3070\u304b\u308a\u307f\u305f\u3044\u3067\u3042\u307e\u308a\u8cc7\u6599\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u7d39\u4ecb\u8a18\u4e8b(\u82f1\u8a9e)\n\nFirst Look at Docker SwarmKit\n\n\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u65e9\u901f\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\nSwarmKit is \u4f55\uff1f\n\u4e00\u8a00\u3067\u8a00\u3046\u3068(\u5206\u6563)\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u74b0\u5883\u3067\u306eDocker\u30b3\u30f3\u30c6\u30ca\u306e\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3063\u3066\u304f\u308c\u308b\u30c4\u30fc\u30eb\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\u985e\u4f3c\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u3057\u3066\u306fHashicorp\u306enomad\u3084Mesos+Marathon\u304c\u3042\u308a\u307e\u3059\u306d\u3002\n\u79c1\u306e\u3064\u305f\u306a\u3044\u82f1\u8a9e\u8a33\u3060\u3068\u8aa4\u89e3\u3092\u62db\u304d\u305d\u3046\u306a\u306e\u3067\u3001README\u304b\u3089\u5f15\u7528\u3057\u3066\u304a\u304d\u307e\u3059\u306e\u3067\u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nSwarmKit is a toolkit for orchestrating distributed systems at any scale. It includes primitives for node discovery, raft-based consensus, task scheduling and more.\nIts main benefits are:\n\n\nDistributed: SwarmKit uses the Raft Consensus Algorithm in order to coordinate and does not rely on a single point of failure to perform decisions.\n\nSecure: Node communication and membership within a Swarm are secure out of the box. SwarmKit uses mutual TLS for node authentication, role authorization and transport encryption, automating both certificate issuance and rotation.\n\nSimple: SwarmKit is operationally simple and minimizes infrastructure dependencies. It does not need an external database to operate.\n\n\nConsul\u3084Nomad\u3068\u540c\u3058\u304fRaft\u5b9f\u88c5\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\u6a5f\u80fd\u4e00\u89a7\u306fFeatures\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\u74b0\u5883\n\u4ee5\u4e0b\u3067\u306fMac(OSX)\u3067\u4f5c\u696d\u3057\u3066\u3044\u307e\u3059\u3002Docker\u306fDocker for Mac(beta)\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u74b0\u5883\u306e\u65b9\u306f\u9069\u5b9c\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nSwarmKit\u306e\u30d0\u30a4\u30ca\u30ea\u3067\u306e\u914d\u5e03\u306f\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3057\u305f\u3002\nGithub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3057\u3066\u30d3\u30eb\u30c9\u3057\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\u53d6\u5f97\u301c\u30d3\u30eb\u30c9\u307e\u3067\n# \u30bd\u30fc\u30b9\u53d6\u5f97\ngo get -d github.com/docker/swarmkit/...\ncd $GOPATH/src/github.com/docker/swarmkit\n\n# \u78ba\u8a8d\ngo test $(go list ./... | grep -v vendor)\n\n# \u30d3\u30eb\u30c9\nmake binaries\n\n\nbin\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\nmake_binaries\u306e\u7d50\u679c\nbin/\n\u251c\u2500\u2500 protoc-gen-gogoswarm\n\u251c\u2500\u2500 swarm-bench\n\u251c\u2500\u2500 swarmctl\n\u2514\u2500\u2500 swarmd\n\n\n\u4ee5\u4e0b\u3067\u306fswarmd\u3068swarmctl\u306b\u30d1\u30b9\u304c\u901a\u3063\u305f\u72b6\u614b\u3068\u3057\u307e\u3059\u3002\n\nswarm\u30af\u30e9\u30b9\u30bf\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nswarmd\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\nswarmd\u306e\u30d8\u30eb\u30d7\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3057\u305f\u3002\n\nswarmd\u306e\u30d8\u30eb\u30d7\n$ swarmd --help\nRun a swarm control process\n\nUsage:\n  bin/swarmd [flags]\n\nFlags:\n  -c, --ca-hash string              Specifies the remote CA root certificate hash, necessary to join the cluster securely\n      --election-tick value         Defines the amount of ticks (in seconds) needed without a Leader to trigger a new election (default 3)\n      --engine-addr string          Address of engine instance of agent. (default \"unix:///var/run/docker.sock\")\n      --force-new-cluster           Force the creation of a new cluster from data directory\n      --heartbeat-tick value        Defines the heartbeat interval (in seconds) for raft member health-check (default 1)\n      --hostname string             Override reported agent hostname\n      --join-addr string            Join cluster with a node at this address\n      --listen-control-api string   Listen socket for control API (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n      --listen-debug string         Bind the Go debug server on the provided address\n      --listen-remote-api string    Listen address for remote API (default \"0.0.0.0:4242\")\n  -l, --log-level string            Log level (options \"debug\", \"info\", \"warn\", \"error\", \"fatal\", \"panic\") (default \"info\")\n      --manager                     Request initial CSR in a manager role\n  -s, --secret string               Specifies the secret token required to join the cluster\n  -d, --state-dir string            State directory (default \"/var/lib/docker/cluster\")\n  -v, --version                     Display the version and exit\n\n\n\n\u6700\u521d\u306e\u30ce\u30fc\u30c9\u306e\u4f5c\u6210\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u6700\u521d\u306e\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u6700\u521d\u306e\u30ce\u30fc\u30c9\u4f5c\u6210\n$ swarmd -d /tmp/node-1 --listen-control-api /tmp/manager1/swarm.sock --hostname node-1\n\n\n\n\u7d9a\u3044\u3066\uff12\u3064\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30ce\u30fc\u30c9\u8ffd\u52a0\n$ swarmd -d /tmp/node-2 --hostname node-2 --join-addr 127.0.0.1:4242\n$ swarmd -d /tmp/node-3 --hostname node-3 --join-addr 127.0.0.1:4242\n\n\n\n\u7ba1\u7406\u4f5c\u696d\u306fswarmctl\u30b3\u30de\u30f3\u30c9\u3067\u884c\u3046\u3088\u3046\u3067\u3059\u3002\nSwarm\u30af\u30e9\u30b9\u30bf\u5185\u306e\u30ce\u30fc\u30c9\u4e00\u89a7\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u4e00\u89a7\u8868\u793a\n# swarmctl\u30b3\u30de\u30f3\u30c9\u306e\u63a5\u7d9a\u5148\n$ export SWARM_SOCKET=/tmp/manager1/swarm.sock\n# \u4e00\u89a7\u8868\u793a(ls)\n$ swarmctl node ls\n\n\n\n3\u30ce\u30fc\u30c9\u304cSwarm\u30af\u30e9\u30b9\u30bf\u306b\u53c2\u52a0\u3057\u3066\u3044\u308b\u72b6\u614b\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\nSwarm\u30af\u30e9\u30b9\u30bf\u3067\u306e\u30b5\u30fc\u30d3\u30b9\u5b9f\u884c\n\u30af\u30e9\u30b9\u30bf\u4e0a\u3067\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3059\u308b\u306e\u306fswarmctl service\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u3002help\u8868\u793a\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nswarmctl_service\n$ swarmctl help service\nService management\n\nUsage:\n  bin/swarmctl service [command]\n\nAliases:\n  service, svc\n\n\nAvailable Commands:\n  inspect     Inspect a service\n  ls          List services\n  create      Create a service\n  update      Update a service\n  remove      Remove a service\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/tmp/manager1/swarm.sock\")\n\nUse \"swarmctl service [command] --help\" for more information about a command.\n\n\n\u3067\u306f\u65e9\u901f\u4f55\u304b\u8d77\u52d5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u3053\u3067\u306f\u4f8b\u3068\u3057\u3066redis\u3092\u8d77\u52d5\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\n\n\u8d77\u52d5\n$ swarmctl service create --name redis --image redis:3.0.5\n\n\n\u8d77\u52d5\u3067\u304d\u307e\u3057\u305f\u304b\uff1f\n\n\u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\u78ba\u8a8d\nswarmctl service ls\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u78ba\u8a8d\n$ swarmctl service ls\nID                         Name   Image        Instances\n--                         ----   -----        ---------\n2v5ima52ubn1szmrw5qxwiy00  redis  redis:3.0.5  1\n\n\n\u8d77\u52d5\u3057\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n\u30b5\u30fc\u30d3\u30b9\u8a73\u7d30\u78ba\u8a8d\nswarmctl service inspect [\u30b5\u30fc\u30d3\u30b9\u540d]\u3067\u8a73\u7d30\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\nswarmctl_inspect\n$ swarmctl service inspect redis\nID                : 2v5ima52ubn1szmrw5qxwiy00\nName              : redis\nInstances         : 1\nTemplate          \n Container        \n  Image           : redis:3.0.5\n\nTask ID                      Service    Instance    Image          Desired State    Last State               Node\n-------                      -------    --------    -----          -------------    ----------               ----\nf1r7p3b5m3hxvi7ggd14yppxe    redis      1           redis:3.0.5    RUNNING          RUNNING 3 minutes ago    node-1\n\n\n\u3064\u3044\u3067\u306bdocker\u30b3\u30de\u30f3\u30c9\u5074\u304b\u3089\u3082\u8d77\u52d5\u72b6\u6cc1\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\ndocker_ps\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES\ne57a1aca66f3        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.1.f1r7p3b5m3hxvi7ggd14yppxe\n\n\nredis\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u3066\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d3\u30b9UPDATE\n\u30b5\u30fc\u30d3\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u6570\u3092\u5897\u3084\u3059\u306a\u3069\u3001\u5c5e\u6027\u306e\u66f4\u65b0\u304c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u6570\u30926\u306b\u5897\u3084\u3057\u3066\u307f\u307e\u3059\u3002\n\nupdate\u5b9f\u65bd\n# \u5897\u3084\u3057\u3066\u307f\u308b\u3088\n$ swarmctl service update redis --instances 6\n2v5ima52ubn1szmrw5qxwiy00\n\n# \u78ba\u8a8d\u3057\u3066\u307f\u308b\u3088\n$ swarmctl service inspect redis\nID                : 2v5ima52ubn1szmrw5qxwiy00\nName              : redis\nInstances         : 6\nTemplate          \n Container        \n  Image           : redis:3.0.5\n\nTask ID                      Service    Instance    Image          Desired State    Last State                Node\n-------                      -------    --------    -----          -------------    ----------                ----\nf1r7p3b5m3hxvi7ggd14yppxe    redis      1           redis:3.0.5    RUNNING          RUNNING 7 minutes ago     node-1\n37xq1iluq89q9ln140way2wuj    redis      2           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-3\nchvth7r9ol2nhll0o6basebap    redis      3           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-2\n6d79qrshr74d1x7x0y57hercd    redis      4           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-2\netfpywpqz9zi0x90mhbzly5zs    redis      5           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-1\n43fackr1v05f6w7yuwc2uf2px    redis      6           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-3\n\n\n\n\u5897\u3048\u3066\u305d\u3046\u3067\u3059\u306d\u3002node\u306e\u5206\u6563\u3082\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\ndocker\u30b3\u30de\u30f3\u30c9\u5074\u304b\u3089\u3082\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\ndocker_ps\u3067\u78ba\u8a8d\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES\n44747f6bf347        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.6.43fackr1v05f6w7yuwc2uf2px\n655a2bf55185        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.4.6d79qrshr74d1x7x0y57hercd\ne1a1e2e993bc        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.3.chvth7r9ol2nhll0o6basebap\n43bc0449a374        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.2.37xq1iluq89q9ln140way2wuj\n9cbb0c1a419a        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.5.etfpywpqz9zi0x90mhbzly5zs\ne57a1aca66f3        redis:3.0.5         \"/entrypoint.sh redis\"   9 minutes ago        Up 9 minutes        6379/tcp            redis.1.f1r7p3b5m3hxvi7ggd14yppxe\n\n\n\u4eca\u56de\u306f\u3059\u3079\u3066\u306e\u30ce\u30fc\u30c9\u304c\u540c\u3058\u30db\u30b9\u30c8\u306e\u305f\u30816\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3059\u3079\u3066\u304c\u898b\u3048\u3066\u3044\u307e\u3059\u306d\u3002\n\u304a\u305d\u3089\u304f\u5404\u30ce\u30fc\u30c9\u5225\u30de\u30b7\u30f3\u3067swarm\u30af\u30e9\u30b9\u30bf\u3092\u7d44\u3081\u3070\u3001docker ps\u3082\u6b21\u30ce\u30fc\u30c9\u306e\u5206\u306e\u307f\u8868\u793a\u3055\u308c\u308b\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002(\u307e\u3060\u8a66\u3057\u3066\u307e\u305b\u3093)\nswarmctl service update\u3067\u306f\u3001\u5b9f\u884c\u30a4\u30e1\u30fc\u30b8\u306e\u66f4\u65b0\u3060\u3063\u305f\u308a\u3001\u30ed\u30fc\u30ea\u30f3\u30b0\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3082\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u30ce\u30fc\u30c9\u306e\u505c\u6b62(drain)\n\u30ce\u30fc\u30c9\u3092\u505c\u6b62\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u518d\u914d\u7f6e\u3055\u308c\u308b\u69d8\u5b50\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nnode\u505c\u6b62_\u518d\u914d\u7f6e\n# node-1\u3092\u505c\u6b62\n$ swarmctl node drain node-1\n\n# \u78ba\u8a8d\n$ swarmctl node ls\nID             Name    Membership  Status  Availability  Manager status\n--             ----    ----------  ------  ------------  --------------\n08ru842rs9yam  node-1  ACCEPTED    READY   DRAIN         REACHABLE *\n185o4l4u6nnqh  node-3  ACCEPTED    READY   ACTIVE        \n3ebkf6w3m1dnd  node-2  ACCEPTED    READY   ACTIVE        \n\n\n\n\u518d\u914d\u7f6e\u306e\u78ba\u8a8d\nnode-1\u3092\u505c\u6b62\u3057\u307e\u3057\u305f\u306e\u30676\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304cnode-2\u3068node-3\u306b\u5272\u308a\u632f\u3089\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nswarmctl_\u518d\u914d\u7f6e\u78ba\u8a8d\n$ swarmctl service inspect redis\nID                : 2v5ima52ubn1szmrw5qxwiy00\nName              : redis\nInstances         : 6\nTemplate          \n Container        \n  Image           : redis:3.0.5\n\nTask ID                      Service    Instance    Image          Desired State    Last State               Node\n-------                      -------    --------    -----          -------------    ----------               ----\n6dfvxo1hx0ml7wvuly76qzox7    redis      1           redis:3.0.5    RUNNING          RUNNING 2 minutes ago    node-2\n37xq1iluq89q9ln140way2wuj    redis      2           redis:3.0.5    RUNNING          RUNNING 9 minutes ago    node-3\nchvth7r9ol2nhll0o6basebap    redis      3           redis:3.0.5    RUNNING          RUNNING 9 minutes ago    node-2\n6d79qrshr74d1x7x0y57hercd    redis      4           redis:3.0.5    RUNNING          RUNNING 9 minutes ago    node-2\n93vr14ppi1quw5iekzuct8r5i    redis      5           redis:3.0.5    RUNNING          RUNNING 2 minutes ago    node-3\n43fackr1v05f6w7yuwc2uf2px    redis      6           redis:3.0.5    RUNNING          RUNNING 9 minutes ago    node-3\n\n\nnode-1\u3067\u8d77\u52d5\u3057\u3066\u3044\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u306a\u304f\u306a\u308a\u3001node-2\u3068node-3\u306b\u518d\u914d\u7f6e\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u304a\u307e\u3051:swarmctl\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3054\u3068\u306e\u30d8\u30eb\u30d7\n\u30d3\u30eb\u30c9\u304c\u9762\u5012\u306a\u65b9\u306e\u305f\u3081\u306b\u30d8\u30eb\u30d7\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u304a\u304d\u307e\u3059\u3002\n\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3001\u30b5\u30d6\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306b\u3064\u3044\u3066\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u6307\u5b9a\u3067\u304d\u305d\u3046\u306a\u3082\u306e\u306f\u8a18\u8f09\u3057\u3066\u3044\u307e\u3059\u3002\n(\u8a18\u8f09\u304c\u7121\u3044\u3082\u306e\u3067\u77e5\u308a\u305f\u3044\u3082\u306e\u304c\u3042\u308c\u3070@yamamoto-febc\u307e\u3067\u9023\u7d61\u304f\u3060\u3055\u3044\u3002\u8f09\u305b\u307e\u3059\u3002)\n\nswarmctl\n\n\nswarmctl_help\n$ swarmctl --help\nControl a swarm cluster\n\nUsage:\n  bin/swarmctl [command]\n\nAvailable Commands:\n  node        Node management\n  service     Service management\n  task        Task management\n  version     Print version number of swarm.\n  network     Network management\n  cluster     Cluster management\n\nFlags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl [command] --help\" for more information about a command.\n\n\n\n\nswarmctl node\n\n\nswarmctl_node\n$ swarmctl node --help\nNode management\n\nUsage:\n  swarmctl node [command]\n\nAvailable Commands:\n  accept      Accept a node into the cluster\n  remove      Remove a node\n  inspect     Inspect a node\n  ls          List nodes\n  activate    Activate a node\n  pause       Pause a node\n  drain       Drain a node\n  promote     Promote a node to a manager\n  demote      Demote a node from a manager to a worker\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl node [command] --help\" for more information about a command.\n\n\n\n\nswarmctl service\n\n\nswarmctl_service\n$ swarmctl service --help\nService management\n\nUsage:\n  swarmctl service [command]\n\nAliases:\n  service, svc\n\n\nAvailable Commands:\n  inspect     Inspect a service\n  ls          List services\n  create      Create a service\n  update      Update a service\n  remove      Remove a service\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl service [command] --help\" for more information about a command.\n\n\n\n\nswarmctl service create\n\n\nswarmctl_service_create\n$ swarmctl service create --help\nCreate a service\n\nUsage:\n  bin/swarmctl service create [flags]\n\nFlags:\n      --args value                  container args (default [])\n      --constraint value            Placement constraint (node.labels.key==value) (default [])\n      --cpu-limit string            CPU cores limit (e.g. 0.5)\n      --cpu-reservation string      number of CPU cores reserved (e.g. 0.5)\n      --env value                   container env (default [])\n      --image string                container image\n      --instances uint              number of instances for the service (default 1)\n      --label value                 service label (key=value) (default [])\n      --memory-limit string         memory limit (e.g. 512m)\n      --memory-reservation string   amount of reserved memory (e.g. 512m)\n      --mode string                 one of replicated, global (default \"replicated\")\n      --name string                 service name\n      --network string              network name\n      --ports value                 ports (default [])\n      --restart-condition string    condition to restart the task (any, failure, none) (default \"any\")\n      --restart-delay string        delay between task restarts (default \"5s\")\n      --restart-max-attempts uint   maximum number of restart attempts (0 = unlimited)\n      --restart-window string       time window to evaluate restart attempts (0 = unbound) (default \"0s\")\n      --update-delay string         delay between task updates (0s = none) (default \"0s\")\n      --update-parallelism uint     task update parallelism (0 = all at once)\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/tmp/manager1/swarm.sock\")\n\n\n\nswarmctl task\n\n\nswarmctl_task\n$ swarmctl task --help\nTask management\n\nUsage:\n  swarmctl task [command]\n\nAvailable Commands:\n  ls          List tasks\n  inspect     Inspect a task\n  remove      Remove a task\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl task [command] --help\" for more information about a command.\n\n\n\nswarmctl network\n\n\nswarmctl_network\n$ swarmctl  network --help\nNetwork management\n\nUsage:\n  swarmctl network [command]\n\nAvailable Commands:\n  inspect     Inspect a network\n  ls          List networks\n  create      Create a network\n  remove      Remove a network\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl network [command] --help\" for more information about a command.\n\n\n\n\nswarmctl network create\n\n\nswarmctl_network_create\n$ swarmctl network create --help\nCreate a network\n\nUsage:\n  bin/swarmctl network create [flags]\n\nFlags:\n      --driver string        Network driver\n      --gateway value        Gateway IP addresses for network segments (default [])\n      --ip-range value       IP ranges to allocate from within the subnets (default [])\n      --ipam-driver string   IPAM driver\n      --name string          Network name\n      --opts value           Network driver options (default [])\n      --subnet value         Subnets in CIDR format that represents a network segments (default [])\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/tmp/manager1/swarm.sock\")\n\n\n\nswarmctl cluster\n\n\nswarmctl_cluster\n$ swarmctl  cluster --help\nCluster management\n\nUsage:\n  swarmctl cluster [command]\n\nAvailable Commands:\n  inspect     Inspect a cluster\n  ls          List clusters\n  update      Update a cluster\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl cluster [command] --help\" for more information about a command.\n\n\n\n\nswarmctl cluster update\n\n\nswarmctl_cluster_update\n$ swarmctl cluster update\nError: cluster name missing\nUsage:\n  bin/swarmctl cluster update <cluster name> [flags]\n\nFlags:\n      --autoaccept value           Roles to automatically issue certificates for (default [])\n      --certexpiry duration        Duration node certificates will be valid for (default 2160h0m0s)\n      --heartbeatperiod duration   Period when heartbeat is expected to receive from agent\n  -h, --help                       help for update\n      --secret value               Secret required to join the cluster (default [])\n      --taskhistory int            Number of historic task entries to retain per instance or node\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/tmp/manager1/swarm.sock\")\n\n\n\n\u307e\u3068\u3081\nREADME\u304b\u3089\u4e00\u901a\u308aSwarmKit\u3092\u89e6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u308c\u307e\u3067\u306fSwarm\u30af\u30e9\u30b9\u30bf\u306e\u69cb\u7bc9\u306b\u5225\u9014KVS(etcd\u3084consul)\u306e\u69cb\u7bc9\u304c\u5fc5\u8981\u3067\u3057\u305f\u304c\u3001swarmd\u304c\u305d\u306e\u3042\u305f\u308a\u3092\u96a0\u853d\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5468\u308a\u3084\u30c7\u30fc\u30bf\u30dc\u30ea\u30e5\u30fc\u30e0\u5468\u308a\u306a\u3069\u3001\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u3067\u30af\u30e9\u30b9\u30bf\u3092\u7d44\u3080\u5834\u5408\u306f\u3044\u308d\u3044\u308d\u6c17\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u307e\u3060\u307e\u3060\u958b\u767a\u4e2d\u306e\u3088\u3046\u3067\u60c5\u5831\u304c\u5c11\u306a\u3044\u3067\u3059\u3002\nnomad\u3084Mesos+Marathon\u306a\u3069\u3068\u6bd4\u3079\u3066\u306e\u30e1\u30ea\u30c3\u30c8\u3082\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002(\u79c1\u304c\u8aad\u307f\u89e3\u3051\u3066\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3001\u3001\u3001)\n\u3082\u3046\u5c11\u3057\u958b\u767a\u72b6\u6cc1\u3092\u898b\u5b88\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u3059\u3002\n**2016/6/16\u8ffd\u8a18**\nDocker\u672c\u4f53\u306bSwarmKit\u3068\u306e\u9023\u643a\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u3066\u307e\u3057\u305f\u3002\n[PullRequest:GH-23361](https://github.com/docker/docker/pull/23361)\nSwarmKit\u5358\u4f53\u3067\u4f7f\u3046\u3068\u3044\u3046\u3088\u308a\u3001DockerCLI\u3068\u306e\u7d71\u5408\u3059\u308b\u65b9\u5411\u306e\u3088\u3046\u3067\u3059\u306d\u3002\n\ndocker CLI\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n - `swarm init`\n - `swarm join`\n - `swarm leave`\n - `swarm update`\n\nswarm\u30af\u30e9\u30b9\u30bf\u30ce\u30fc\u30c9\u7ba1\u7406\u7528\u306e\u30b3\u30de\u30f3\u30c9\u3082\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n  - `node_accept `\n  - `node_reject `\n  - `node_promote `\n  - `node_demote `\n  - `node_inspect `\n  - `node_update `\n  - `node_tasks `\n  - `node_ls `\n  - `node_rm `\n\nswarm\u30af\u30e9\u30b9\u30bf\u4e0a\u3067\u306e\u30b8\u30e7\u30d6\u5b9f\u884c\u7528\u30b3\u30de\u30f3\u30c9\u3082\u8ffd\u52a0\u3067\u3059\u3002\n\n  - `service create`\n  - `service inspect`\n  - `service update`\n  - `service remove`\n  - `service tasks`\n\n\u6700\u5f8c\u306b\u3001\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7528\u306b`Docker Stacks`\u6a5f\u80fd(\u30b3\u30de\u30f3\u30c9)\u3082\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n  - `stack`\n  - `deploy`\n\n\u5404\u30b3\u30de\u30f3\u30c9\u306e\u8a73\u7d30\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f[\u3053\u3061\u3089](https://github.com/docker/docker/blob/9acf97b72a4d5ff7b1bcad36fb19b53775f01596/docs/reference/commandline/index.md#swarm-swarm-commands)\u3067\u3059\u3002\n\n`Docker Stacks`\u306b\u3064\u3044\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f[\u3053\u3061\u3089](https://github.com/docker/docker/blob/ae816baa3c36aaec5e3b7c31425b620b4709ab50/experimental/docker-stacks.md)\u3067\u3059\u3002\n\n\u53c2\u8003\u307e\u3067\u306b`swarm init`\u3068`swarm join`\u306e\u30d8\u30eb\u30d7\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n# swarm init\n\n\tUsage:\tdocker swarm init [OPTIONS]\n\n\tInitialize a Swarm.\n\n\tOptions:\n\t      --auto-accept value   Acceptance policy (default [worker,manager])\n\t      --force-new-cluster   Force create a new cluster from current state.\n\t      --help                Print usage\n\t      --listen-addr value   Listen address (default 0.0.0.0:2377)\n\t      --secret string       Set secret value needed to accept nodes into cluster\n\nInitialize a Swarm cluster. The docker engine targeted by this command becomes a manager\nin the newly created one node Swarm cluster.\n\n# swarm join\n\n\tUsage:\tdocker swarm join [OPTIONS] HOST:PORT\n\n\tJoin a Swarm as a node and/or manager.\n\n\tOptions:\n\t      --help                Print usage\n\t      --listen-addr value   Listen address (default 0.0.0.0:2377)\n\t      --manager             Try joining as a manager.\n\t      --secret string       Secret for node acceptance\n\nJoin a node to a Swarm cluster. If the `--manager` flag is specified, the docker engine\ntargeted by this command becomes a `manager`. If it is not specified, it becomes a `worker`.\n\n---2016/6/16\u8ffd\u8a18 End---\n\n---\n\n\u4f55\u6c17\u306a\u304fDocker\u793e\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u898b\u3066\u305f\u3089[SwarmKit](https://github.com/docker/swarmkit)\u306a\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u8abf\u3079\u3066\u307f\u305f\u3089\u767a\u8868\u3055\u308c\u305f\u3070\u304b\u308a\u307f\u305f\u3044\u3067\u3042\u307e\u308a\u8cc7\u6599\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n#### \u7d39\u4ecb\u8a18\u4e8b(\u82f1\u8a9e)\n\n  - [First Look at Docker SwarmKit](https://blog.replicated.com/2016/06/08/first-look-at-swarmkit/)\n\n\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u65e9\u901f\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n## SwarmKit is \u4f55\uff1f\n\n\u4e00\u8a00\u3067\u8a00\u3046\u3068(\u5206\u6563)\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u74b0\u5883\u3067\u306eDocker\u30b3\u30f3\u30c6\u30ca\u306e\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3063\u3066\u304f\u308c\u308b\u30c4\u30fc\u30eb\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\u985e\u4f3c\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u3057\u3066\u306fHashicorp\u306e[nomad](https://www.nomadproject.io)\u3084Mesos+Marathon\u304c\u3042\u308a\u307e\u3059\u306d\u3002\n\n\u79c1\u306e\u3064\u305f\u306a\u3044\u82f1\u8a9e\u8a33\u3060\u3068\u8aa4\u89e3\u3092\u62db\u304d\u305d\u3046\u306a\u306e\u3067\u3001README\u304b\u3089\u5f15\u7528\u3057\u3066\u304a\u304d\u307e\u3059\u306e\u3067\u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n>*SwarmKit* is a toolkit for orchestrating distributed systems at any scale. It includes primitives for node discovery, raft-based consensus, task scheduling and more.\n\n> Its main benefits are:\n\n> - **Distributed**: *SwarmKit* uses the [Raft Consensus Algorithm](https://raft.github.io/) in order to coordinate and does not rely on a single point of failure to perform decisions.\n> - **Secure**: Node communication and membership within a *Swarm* are secure out of the box. *SwarmKit* uses mutual TLS for node *authentication*, *role authorization* and *transport encryption*, automating both certificate issuance and rotation.\n> - **Simple**: *SwarmKit* is operationally simple and minimizes infrastructure dependencies. It does not need an external database to operate.\n\nConsul\u3084Nomad\u3068\u540c\u3058\u304fRaft\u5b9f\u88c5\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\u6a5f\u80fd\u4e00\u89a7\u306f[Features](https://github.com/docker/swarmkit#features)\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n## \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n### \u74b0\u5883\n\n\u4ee5\u4e0b\u3067\u306fMac(OSX)\u3067\u4f5c\u696d\u3057\u3066\u3044\u307e\u3059\u3002Docker\u306f`Docker for Mac(beta)`\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u74b0\u5883\u306e\u65b9\u306f\u9069\u5b9c\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n### \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nSwarmKit\u306e\u30d0\u30a4\u30ca\u30ea\u3067\u306e\u914d\u5e03\u306f\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3057\u305f\u3002\nGithub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3057\u3066\u30d3\u30eb\u30c9\u3057\u307e\u3057\u305f\u3002\n\n```bash:\u30b3\u30fc\u30c9\u53d6\u5f97\u301c\u30d3\u30eb\u30c9\u307e\u3067\n# \u30bd\u30fc\u30b9\u53d6\u5f97\ngo get -d github.com/docker/swarmkit/...\ncd $GOPATH/src/github.com/docker/swarmkit\n\n# \u78ba\u8a8d\ngo test $(go list ./... | grep -v vendor)\n\n# \b\u30d3\u30eb\u30c9\nmake binaries\n```\n\n`bin`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n```bash:make_binaries\u306e\u7d50\u679c\nbin/\n\u251c\u2500\u2500 protoc-gen-gogoswarm\n\u251c\u2500\u2500 swarm-bench\n\u251c\u2500\u2500 swarmctl\n\u2514\u2500\u2500 swarmd\n```\n\n\u4ee5\u4e0b\u3067\u306fswarmd\u3068swarmctl\u306b\u30d1\u30b9\u304c\u901a\u3063\u305f\u72b6\u614b\u3068\u3057\u307e\u3059\u3002\n\n## swarm\u30af\u30e9\u30b9\u30bf\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nswarmd\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\nswarmd\u306e\u30d8\u30eb\u30d7\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3057\u305f\u3002\n\n```bash:swarmd\u306e\u30d8\u30eb\u30d7\n$ swarmd --help\nRun a swarm control process\n\nUsage:\n  bin/swarmd [flags]\n\nFlags:\n  -c, --ca-hash string              Specifies the remote CA root certificate hash, necessary to join the cluster securely\n      --election-tick value         Defines the amount of ticks (in seconds) needed without a Leader to trigger a new election (default 3)\n      --engine-addr string          Address of engine instance of agent. (default \"unix:///var/run/docker.sock\")\n      --force-new-cluster           Force the creation of a new cluster from data directory\n      --heartbeat-tick value        Defines the heartbeat interval (in seconds) for raft member health-check (default 1)\n      --hostname string             Override reported agent hostname\n      --join-addr string            Join cluster with a node at this address\n      --listen-control-api string   Listen socket for control API (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n      --listen-debug string         Bind the Go debug server on the provided address\n      --listen-remote-api string    Listen address for remote API (default \"0.0.0.0:4242\")\n  -l, --log-level string            Log level (options \"debug\", \"info\", \"warn\", \"error\", \"fatal\", \"panic\") (default \"info\")\n      --manager                     Request initial CSR in a manager role\n  -s, --secret string               Specifies the secret token required to join the cluster\n  -d, --state-dir string            State directory (default \"/var/lib/docker/cluster\")\n  -v, --version                     Display the version and exit\n```\n\n### \u6700\u521d\u306e\u30ce\u30fc\u30c9\u306e\u4f5c\u6210\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u6700\u521d\u306e\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u6700\u521d\u306e\u30ce\u30fc\u30c9\u4f5c\u6210\n$ swarmd -d /tmp/node-1 --listen-control-api /tmp/manager1/swarm.sock --hostname node-1\n```\n\n![first_node.jpg](https://qiita-image-store.s3.amazonaws.com/0/20668/552dbab0-9141-b5f7-9b19-dcc8533cfa18.jpeg \"first_node.jpg\")\n\n\n\u7d9a\u3044\u3066\uff12\u3064\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002\n\n```bash:\u30ce\u30fc\u30c9\u8ffd\u52a0\n$ swarmd -d /tmp/node-2 --hostname node-2 --join-addr 127.0.0.1:4242\n$ swarmd -d /tmp/node-3 --hostname node-3 --join-addr 127.0.0.1:4242\n```\n\n![second_node.jpg](https://qiita-image-store.s3.amazonaws.com/0/20668/445bab64-bce9-e9e6-bfd6-38ac25382299.jpeg \"second_node.jpg\")\n\n\n\u7ba1\u7406\u4f5c\u696d\u306f`swarmctl`\u30b3\u30de\u30f3\u30c9\u3067\u884c\u3046\u3088\u3046\u3067\u3059\u3002\nSwarm\u30af\u30e9\u30b9\u30bf\u5185\u306e\u30ce\u30fc\u30c9\u4e00\u89a7\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n```bash:\u4e00\u89a7\u8868\u793a\n# swarmctl\u30b3\u30de\u30f3\u30c9\u306e\u63a5\u7d9a\u5148\n$ export SWARM_SOCKET=/tmp/manager1/swarm.sock\n# \u4e00\u89a7\u8868\u793a(ls)\n$ swarmctl node ls\n```\n\n![swarmctl_ls.jpg](https://qiita-image-store.s3.amazonaws.com/0/20668/b80ecb43-6c67-930e-be78-dd96946bcb0b.jpeg \"swarmctl_ls.jpg\")\n\n\n3\u30ce\u30fc\u30c9\u304cSwarm\u30af\u30e9\u30b9\u30bf\u306b\u53c2\u52a0\u3057\u3066\u3044\u308b\u72b6\u614b\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n### Swarm\u30af\u30e9\u30b9\u30bf\u3067\u306e\u30b5\u30fc\u30d3\u30b9\u5b9f\u884c\n\n\u30af\u30e9\u30b9\u30bf\u4e0a\u3067\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3059\u308b\u306e\u306f`swarmctl service`\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u3002help\u8868\u793a\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```bash:swarmctl_service\n$ swarmctl help service\nService management\n\nUsage:\n  bin/swarmctl service [command]\n\nAliases:\n  service, svc\n\n\nAvailable Commands:\n  inspect     Inspect a service\n  ls          List services\n  create      Create a service\n  update      Update a service\n  remove      Remove a service\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/tmp/manager1/swarm.sock\")\n\nUse \"swarmctl service [command] --help\" for more information about a command.\n```\n\n\u3067\u306f\u65e9\u901f\u4f55\u304b\u8d77\u52d5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u3053\u3067\u306f\u4f8b\u3068\u3057\u3066redis\u3092\u8d77\u52d5\u3057\u3066\u307f\u307e\u3059\u3002\n\n#### \u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\n\n```\u30b5\u30fc\u30d3\u30b9bash:\u8d77\u52d5\n$ swarmctl service create --name redis --image redis:3.0.5\n```\n\n\u8d77\u52d5\u3067\u304d\u307e\u3057\u305f\u304b\uff1f\n\n#### \u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\u78ba\u8a8d\n\n`swarmctl service ls`\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n```bash:\u78ba\u8a8d\n$ swarmctl service ls\nID                         Name   Image        Instances\n--                         ----   -----        ---------\n2v5ima52ubn1szmrw5qxwiy00  redis  redis:3.0.5  1\n```\n\n\u8d77\u52d5\u3057\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n#### \u30b5\u30fc\u30d3\u30b9\u8a73\u7d30\u78ba\u8a8d\n\n`swarmctl service inspect [\u30b5\u30fc\u30d3\u30b9\u540d]`\u3067\u8a73\u7d30\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n```bash:swarmctl_inspect\n$ swarmctl service inspect redis\nID                : 2v5ima52ubn1szmrw5qxwiy00\nName              : redis\nInstances         : 1\nTemplate          \n Container        \n  Image           : redis:3.0.5\n\nTask ID                      Service    Instance    Image          Desired State    Last State               Node\n-------                      -------    --------    -----          -------------    ----------               ----\nf1r7p3b5m3hxvi7ggd14yppxe    redis      1           redis:3.0.5    RUNNING          RUNNING 3 minutes ago    node-1\n```\n\n\n\u3064\u3044\u3067\u306bdocker\u30b3\u30de\u30f3\u30c9\u5074\u304b\u3089\u3082\u8d77\u52d5\u72b6\u6cc1\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```bash:docker_ps\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES\ne57a1aca66f3        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.1.f1r7p3b5m3hxvi7ggd14yppxe\n```\n\nredis\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u3066\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n### \u30b5\u30fc\u30d3\u30b9UPDATE\n\n\u30b5\u30fc\u30d3\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u6570\u3092\u5897\u3084\u3059\u306a\u3069\u3001\u5c5e\u6027\u306e\u66f4\u65b0\u304c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u6570\u30926\u306b\u5897\u3084\u3057\u3066\u307f\u307e\u3059\u3002\n\n```bash:update\u5b9f\u65bd\n# \u5897\u3084\u3057\u3066\u307f\u308b\u3088\n$ swarmctl service update redis --instances 6\n2v5ima52ubn1szmrw5qxwiy00\n\n# \u78ba\u8a8d\u3057\u3066\u307f\u308b\u3088\n$ swarmctl service inspect redis\nID                : 2v5ima52ubn1szmrw5qxwiy00\nName              : redis\nInstances         : 6\nTemplate          \n Container        \n  Image           : redis:3.0.5\n\nTask ID                      Service    Instance    Image          Desired State    Last State                Node\n-------                      -------    --------    -----          -------------    ----------                ----\nf1r7p3b5m3hxvi7ggd14yppxe    redis      1           redis:3.0.5    RUNNING          RUNNING 7 minutes ago     node-1\n37xq1iluq89q9ln140way2wuj    redis      2           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-3\nchvth7r9ol2nhll0o6basebap    redis      3           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-2\n6d79qrshr74d1x7x0y57hercd    redis      4           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-2\netfpywpqz9zi0x90mhbzly5zs    redis      5           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-1\n43fackr1v05f6w7yuwc2uf2px    redis      6           redis:3.0.5    RUNNING          RUNNING 18 seconds ago    node-3\n\n```\n\n\u5897\u3048\u3066\u305d\u3046\u3067\u3059\u306d\u3002node\u306e\u5206\u6563\u3082\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\ndocker\u30b3\u30de\u30f3\u30c9\u5074\u304b\u3089\u3082\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```bash:docker_ps\u3067\u78ba\u8a8d\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES\n44747f6bf347        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.6.43fackr1v05f6w7yuwc2uf2px\n655a2bf55185        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.4.6d79qrshr74d1x7x0y57hercd\ne1a1e2e993bc        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.3.chvth7r9ol2nhll0o6basebap\n43bc0449a374        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.2.37xq1iluq89q9ln140way2wuj\n9cbb0c1a419a        redis:3.0.5         \"/entrypoint.sh redis\"   About a minute ago   Up About a minute   6379/tcp            redis.5.etfpywpqz9zi0x90mhbzly5zs\ne57a1aca66f3        redis:3.0.5         \"/entrypoint.sh redis\"   9 minutes ago        Up 9 minutes        6379/tcp            redis.1.f1r7p3b5m3hxvi7ggd14yppxe\n```\n\n\u4eca\u56de\u306f\u3059\u3079\u3066\u306e\u30ce\u30fc\u30c9\u304c\u540c\u3058\u30db\u30b9\u30c8\u306e\u305f\u30816\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3059\u3079\u3066\u304c\u898b\u3048\u3066\u3044\u307e\u3059\u306d\u3002\n\u304a\u305d\u3089\u304f\u5404\u30ce\u30fc\u30c9\u5225\u30de\u30b7\u30f3\u3067swarm\u30af\u30e9\u30b9\u30bf\u3092\u7d44\u3081\u3070\u3001docker ps\u3082\u6b21\u30ce\u30fc\u30c9\u306e\u5206\u306e\u307f\u8868\u793a\u3055\u308c\u308b\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002(\u307e\u3060\u8a66\u3057\u3066\u307e\u305b\u3093)\n\n`swarmctl service update`\u3067\u306f\u3001\u5b9f\u884c\u30a4\u30e1\u30fc\u30b8\u306e\u66f4\u65b0\u3060\u3063\u305f\u308a\u3001\u30ed\u30fc\u30ea\u30f3\u30b0\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3082\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n### \u30ce\u30fc\u30c9\u306e\u505c\u6b62(drain)\n\n\u30ce\u30fc\u30c9\u3092\u505c\u6b62\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u518d\u914d\u7f6e\u3055\u308c\u308b\u69d8\u5b50\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```bash:node\u505c\u6b62_\u518d\u914d\u7f6e\n# node-1\u3092\u505c\u6b62\n$ swarmctl node drain node-1\n\n# \u78ba\u8a8d\n$ swarmctl node ls\nID             Name    Membership  Status  Availability  Manager status\n--             ----    ----------  ------  ------------  --------------\n08ru842rs9yam  node-1  ACCEPTED    READY   DRAIN         REACHABLE *\n185o4l4u6nnqh  node-3  ACCEPTED    READY   ACTIVE        \n3ebkf6w3m1dnd  node-2  ACCEPTED    READY   ACTIVE        \n```\n\n#### \u518d\u914d\u7f6e\u306e\u78ba\u8a8d\n\nnode-1\u3092\u505c\u6b62\u3057\u307e\u3057\u305f\u306e\u30676\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304cnode-2\u3068node-3\u306b\u5272\u308a\u632f\u3089\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```bash:swarmctl_\u518d\u914d\u7f6e\u78ba\u8a8d\n$ swarmctl service inspect redis\nID                : 2v5ima52ubn1szmrw5qxwiy00\nName              : redis\nInstances         : 6\nTemplate          \n Container        \n  Image           : redis:3.0.5\n\nTask ID                      Service    Instance    Image          Desired State    Last State               Node\n-------                      -------    --------    -----          -------------    ----------               ----\n6dfvxo1hx0ml7wvuly76qzox7    redis      1           redis:3.0.5    RUNNING          RUNNING 2 minutes ago    node-2\n37xq1iluq89q9ln140way2wuj    redis      2           redis:3.0.5    RUNNING          RUNNING 9 minutes ago    node-3\nchvth7r9ol2nhll0o6basebap    redis      3           redis:3.0.5    RUNNING          RUNNING 9 minutes ago    node-2\n6d79qrshr74d1x7x0y57hercd    redis      4           redis:3.0.5    RUNNING          RUNNING 9 minutes ago    node-2\n93vr14ppi1quw5iekzuct8r5i    redis      5           redis:3.0.5    RUNNING          RUNNING 2 minutes ago    node-3\n43fackr1v05f6w7yuwc2uf2px    redis      6           redis:3.0.5    RUNNING          RUNNING 9 minutes ago    node-3\n```\n\nnode-1\u3067\u8d77\u52d5\u3057\u3066\u3044\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u306a\u304f\u306a\u308a\u3001node-2\u3068node-3\u306b\u518d\u914d\u7f6e\u3055\u308c\u307e\u3057\u305f\u3002\n\n## \u304a\u307e\u3051:swarmctl\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3054\u3068\u306e\u30d8\u30eb\u30d7\n\n\u30d3\u30eb\u30c9\u304c\u9762\u5012\u306a\u65b9\u306e\u305f\u3081\u306b\u30d8\u30eb\u30d7\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u304a\u304d\u307e\u3059\u3002\n\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3001\u30b5\u30d6\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306b\u3064\u3044\u3066\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u6307\u5b9a\u3067\u304d\u305d\u3046\u306a\u3082\u306e\u306f\u8a18\u8f09\u3057\u3066\u3044\u307e\u3059\u3002\n(\u8a18\u8f09\u304c\u7121\u3044\u3082\u306e\u3067\u77e5\u308a\u305f\u3044\u3082\u306e\u304c\u3042\u308c\u3070@yamamoto-febc\u307e\u3067\u9023\u7d61\u304f\u3060\u3055\u3044\u3002\u8f09\u305b\u307e\u3059\u3002)\n\n### `swarmctl`\n\n```bash:swarmctl_help\n$ swarmctl --help\nControl a swarm cluster\n\nUsage:\n  bin/swarmctl [command]\n\nAvailable Commands:\n  node        Node management\n  service     Service management\n  task        Task management\n  version     Print version number of swarm.\n  network     Network management\n  cluster     Cluster management\n\nFlags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl [command] --help\" for more information about a command.\n\n```\n\n### `swarmctl node`\n\n```bash:swarmctl_node\n$ swarmctl node --help\nNode management\n\nUsage:\n  swarmctl node [command]\n\nAvailable Commands:\n  accept      Accept a node into the cluster\n  remove      Remove a node\n  inspect     Inspect a node\n  ls          List nodes\n  activate    Activate a node\n  pause       Pause a node\n  drain       Drain a node\n  promote     Promote a node to a manager\n  demote      Demote a node from a manager to a worker\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl node [command] --help\" for more information about a command.\n\n```\n\n### `swarmctl service`\n\n```bash:swarmctl_service\n$ swarmctl service --help\nService management\n\nUsage:\n  swarmctl service [command]\n\nAliases:\n  service, svc\n\n\nAvailable Commands:\n  inspect     Inspect a service\n  ls          List services\n  create      Create a service\n  update      Update a service\n  remove      Remove a service\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl service [command] --help\" for more information about a command.\n\n```\n\n### `swarmctl service create`\n\n```bash:swarmctl_service_create\n$ swarmctl service create --help\nCreate a service\n\nUsage:\n  bin/swarmctl service create [flags]\n\nFlags:\n      --args value                  container args (default [])\n      --constraint value            Placement constraint (node.labels.key==value) (default [])\n      --cpu-limit string            CPU cores limit (e.g. 0.5)\n      --cpu-reservation string      number of CPU cores reserved (e.g. 0.5)\n      --env value                   container env (default [])\n      --image string                container image\n      --instances uint              number of instances for the service (default 1)\n      --label value                 service label (key=value) (default [])\n      --memory-limit string         memory limit (e.g. 512m)\n      --memory-reservation string   amount of reserved memory (e.g. 512m)\n      --mode string                 one of replicated, global (default \"replicated\")\n      --name string                 service name\n      --network string              network name\n      --ports value                 ports (default [])\n      --restart-condition string    condition to restart the task (any, failure, none) (default \"any\")\n      --restart-delay string        delay between task restarts (default \"5s\")\n      --restart-max-attempts uint   maximum number of restart attempts (0 = unlimited)\n      --restart-window string       time window to evaluate restart attempts (0 = unbound) (default \"0s\")\n      --update-delay string         delay between task updates (0s = none) (default \"0s\")\n      --update-parallelism uint     task update parallelism (0 = all at once)\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/tmp/manager1/swarm.sock\")\n```\n\n### `swarmctl task`\n\n```bash:swarmctl_task\n$ swarmctl task --help\nTask management\n\nUsage:\n  swarmctl task [command]\n\nAvailable Commands:\n  ls          List tasks\n  inspect     Inspect a task\n  remove      Remove a task\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl task [command] --help\" for more information about a command.\n```\n\n### `swarmctl network`\n\n```bash:swarmctl_network\n$ swarmctl  network --help\nNetwork management\n\nUsage:\n  swarmctl network [command]\n\nAvailable Commands:\n  inspect     Inspect a network\n  ls          List networks\n  create      Create a network\n  remove      Remove a network\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl network [command] --help\" for more information about a command.\n\n```\n\n### `swarmctl network create`\n\n```bash:swarmctl_network_create\n$ swarmctl network create --help\nCreate a network\n\nUsage:\n  bin/swarmctl network create [flags]\n\nFlags:\n      --driver string        Network driver\n      --gateway value        Gateway IP addresses for network segments (default [])\n      --ip-range value       IP ranges to allocate from within the subnets (default [])\n      --ipam-driver string   IPAM driver\n      --name string          Network name\n      --opts value           Network driver options (default [])\n      --subnet value         Subnets in CIDR format that represents a network segments (default [])\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/tmp/manager1/swarm.sock\")\n```\n\n### `swarmctl cluster`\n\n```bash:swarmctl_cluster\n$ swarmctl  cluster --help\nCluster management\n\nUsage:\n  swarmctl cluster [command]\n\nAvailable Commands:\n  inspect     Inspect a cluster\n  ls          List clusters\n  update      Update a cluster\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/var/run/docker/cluster/docker-swarmd.sock\")\n\nUse \"swarmctl cluster [command] --help\" for more information about a command.\n\n```\n\n### `swarmctl cluster update`\n\n```bash:swarmctl_cluster_update\n$ swarmctl cluster update\nError: cluster name missing\nUsage:\n  bin/swarmctl cluster update <cluster name> [flags]\n\nFlags:\n      --autoaccept value           Roles to automatically issue certificates for (default [])\n      --certexpiry duration        Duration node certificates will be valid for (default 2160h0m0s)\n      --heartbeatperiod duration   Period when heartbeat is expected to receive from agent\n  -h, --help                       help for update\n      --secret value               Secret required to join the cluster (default [])\n      --taskhistory int            Number of historic task entries to retain per instance or node\n\nGlobal Flags:\n  -n, --no-resolve      Do not try to map IDs to Names when displaying them\n  -s, --socket string   Socket to connect to the Swarm manager (default \"/tmp/manager1/swarm.sock\")\n```\n\n## \u307e\u3068\u3081\n\n[README](https://github.com/docker/swarmkit)\u304b\u3089\u4e00\u901a\u308aSwarmKit\u3092\u89e6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u308c\u307e\u3067\u306fSwarm\u30af\u30e9\u30b9\u30bf\u306e\u69cb\u7bc9\u306b\u5225\u9014KVS(etcd\u3084consul)\u306e\u69cb\u7bc9\u304c\u5fc5\u8981\u3067\u3057\u305f\u304c\u3001swarmd\u304c\u305d\u306e\u3042\u305f\u308a\u3092\u96a0\u853d\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5468\u308a\u3084\u30c7\u30fc\u30bf\u30dc\u30ea\u30e5\u30fc\u30e0\u5468\u308a\u306a\u3069\u3001\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u3067\u30af\u30e9\u30b9\u30bf\u3092\u7d44\u3080\u5834\u5408\u306f\u3044\u308d\u3044\u308d\u6c17\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u307e\u3060\u307e\u3060\u958b\u767a\u4e2d\u306e\u3088\u3046\u3067\u60c5\u5831\u304c\u5c11\u306a\u3044\u3067\u3059\u3002\n\n\n[nomad](https://www.nomadproject.io)\u3084Mesos+Marathon\u306a\u3069\u3068\u6bd4\u3079\u3066\u306e\u30e1\u30ea\u30c3\u30c8\u3082\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002(\u79c1\u304c\u8aad\u307f\u89e3\u3051\u3066\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3001\u3001\u3001)\n\n\u3082\u3046\u5c11\u3057\u958b\u767a\u72b6\u6cc1\u3092\u898b\u5b88\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n"}