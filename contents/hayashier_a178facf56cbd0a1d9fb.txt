{"context": "\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306f\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u306b\u304a\u3044\u3066\u3001\u9001\u4fe1\u5f8c\u30e6\u30fc\u30b6\u30fc\u304c\u30a2\u30d7\u30ea\u3092\u958b\u304f\u304d\u3063\u304b\u3051\u3068\u3082\u306a\u308a\u975e\u5e38\u306b\u91cd\u8981\u306a\u6a5f\u80fd\u3067\u3059\u3002\nAmazon SNS\u3067\u306f\u3053\u306e\u6a5f\u80fd\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001\u5b9f\u88c5\u4f8b\u3082\u6570\u591a\u304f\u30cd\u30c3\u30c8\u4e0a\u3067\u898b\u3064\u304b\u308a\u307e\u3059\u3002\u5168\u304f\u306e\u521d\u3081\u3066\u306e\u5834\u5408\u3001Amazon Mobile Hub\u3067\u6700\u4f4e\u9650\u5b9f\u88c5\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u306e\u65b9\u3082\u5229\u7528\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u4e00\u65b9\u3067\u3001\u898b\u3064\u304b\u308b\u60c5\u5831\u306e\u591a\u304f\u306f\u30e6\u30fc\u30b6\u30fc\u5168\u54e1\u306b\u540c\u3058\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3082\u306e\u3067\u3042\u308a\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5c64\u6bce\u306b\u5c64\u306e\u5b9a\u7fa9\u3092\u67d4\u8edf\u306b\u751f\u6210\u3057\u7570\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u308c\u3070\u3001\u3088\u308a\u30e6\u30fc\u30b6\u30fc\u306b\u523a\u3055\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\u3057\u304b\u3057\u3001\u30cd\u30c3\u30c8\u4e0a\u306b\u3042\u307e\u308a\u5b9f\u88c5\u4f8b\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u8a18\u4e8b\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3059\u3002\nAmazon SNS\u3067\u306f\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u9001\u308b\u305f\u3081\u306b\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u521d\u671f\u5316\u51e6\u7406\nEndpoint\u306e\u4f5c\u6210\nTopic\u306b\u5bfe\u3059\u308bsubscribe\u306e\u51e6\u7406\n\n\u3053\u3053\u307e\u3067\u306f\u30cd\u30c3\u30c8\u4e0a\u3067\u591a\u304f\u60c5\u5831\u304c\u898b\u3064\u304b\u308a\u307e\u3059\u3002\n\u4ee5\u964d\u3001SNS\u3067\u8907\u96d1\u306a\u51e6\u7406\u3082\u53ef\u80fd\u306a\u3088\u3046\u306b\u3001\u3088\u304f\u4f7f\u7528\u3055\u308c\u308b\u3068\u601d\u308f\u308c\u308bSNS\u306e\u4ee5\u4e0b\u306eAPI\u306e\u5b9f\u88c5\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\n\nListTopics API\nCreateTopic API\nCreatePlatformEndpoint API\nListSubscriptions API\nSubscribe API\nUnsubscribe API\n\n\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u8a00\u8a9e\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n\n\u7aef\u672b\n\u8a00\u8a9e\n\n\n\n\nAndroid\nJava\n\n\niOS\nSwift3\n\n\n\n\u307e\u305f\u3001\u63a8\u5968\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u3057\u3066\u3001Endpoint\u304c\u5931\u52b9\u3057\u3066\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u304c\u9001\u308c\u306a\u304f\u306a\u308b\u306e\u3092\u9632\u3050\u305f\u3081\u306bEndpoint\u3092\u5b89\u5168\u306b\u6700\u65b0\u7248\u306b\u4fdd\u3064\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u8a73\u3057\u3044\u8aac\u660e\u306f\u3053\u3061\u3089\u306e\u65b9\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u3053\u3067\u306f\u5b9f\u88c5\u4f8b\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u4f5c\u6210\u3057\u305fTopic\u6bce\u306b\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u9001\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u88c5\u4f8b(Ruby)\u3082\u6319\u3052\u307e\u3059\u3002\n\n\u521d\u671f\u5316\u51e6\u7406\nCognito\u3067\u8a8d\u8a3c\u5f8c\u3001SNS\u306e\u5404\u7a2eAPI\u306b\u3088\u308b\u51e6\u7406\u3092\u884c\u3046\u3002\n\nAndroid\nfinal CognitoCachingCredentialsProvider credentials = credentialsProvider =\n                new CognitoCachingCredentialsProvider(context,\n                        \"AWS_ACCOUNT_ID\",\n                        \"COGNITO_POOL_ID\",\n                        \"UNAUTH_ROLE_ARN\",\n                        \"AUTH_ROLE_ARN\",\n                        Regions.AP_NORTHEAST_1\n                );\n\n\niOS\nlet credentialsProvider:AWSCognitoCredentialsProvider = AWSCognitoCredentialsProvider(regionType: .apNortheast1, identityPoolId: \"us-east-1:xxxxxxxxxxxx(Identity pool ID )\")\nlet configuration = AWSServiceConfiguration(region: AWSRegionType.apNortheast1, credentialsProvider: credentialsProvider)\nconfiguration?.timeoutIntervalForResource = 1000\nAWSServiceManager.default().defaultServiceConfiguration =\nconfiguration\ncredentialsProvider.getIdentityId()\n\n\nListTopics API\nTopic\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n\nAndroid\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\nListTopicsResult listTopicsResult = snsClient.listTopics();\nList<Topic> topics = listTopicsResult.getTopics();\n\n\niOS\nlet sns = AWSSNS.default()\nlet request: AWSSNSListTopicsInput = AWSSNSListTopicsInput()\nsns.listTopics(request).continue(with: AWSExecutor.default(), with: { [weak self] (task: AWSTask) -> AnyObject? in\n    guard let me = self else { return nil }\n    if let error = task.error { print(\"Error: \\(error)\"); return nil; }\n\n    guard let listTopicsResponse = task.result else { return nil }\n    guard let topics = listTopicsResponse.topics else { return nil }\n\n    print(topics)\n\n    return nil\n})\n\n\n\nCreateTopic API\nTopic\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nAndroid\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\nCreateTopicRequest createTopicRequest = new CreateTopicRequest(topic);\nCreateTopicResult createTopicResult = snsClient.createTopic(createTopicRequest);\n\n\niOS\nlet request: AWSSNSCreateTopicInput = AWSSNSCreateTopicInput()\nrequest.name = topic\nsns.createTopic(request)\n\n\nCreatePlatformEndpoint API\nEndpoint\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nAndroid\nfinal GoogleCloudMessaging gcm = GoogleCloudMessaging.getInstance(context);\nString deviceToken = gcm.register(gcmSenderID);\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\n\nCreatePlatformEndpointRequest createRequest = new CreatePlatformEndpointRequest();\ncreateRequest.setToken(deviceToken);            createRequest.setPlatformApplicationArn(BuildConfig.AMAZON_SNS_PLATFORM_APPLICATION_ARN);\nCreatePlatformEndpointResult platformEndpoint = snsClient.createPlatformEndpoint(createRequest);\nString endPoint = platformEndpoint.getEndpointArn();\n\n\niOS\nlet sns = AWSSNS.default()\nlet input: AWSSNSCreatePlatformEndpointInput = AWSSNSCreatePlatformEndpointInput()\ninput.token = deviceToken\ninput.platformApplicationArn = SNS_ARN_DEV\nsns.createPlatformEndpoint(input)\n\n\nListSubscriptions API\nsubscribe\u3055\u308c\u3066\u3044\u308bSubscription\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u7aef\u672b\u6bce\u306bsubscribe\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u53d6\u308a\u51fa\u3059\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u8a8d\u8a3c\u306b\u4f7f\u7528\u3057\u305fIAM\u3067subscribe\u3057\u3066\u3044\u308b\u3082\u306e\u5168\u4f53\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3002\n\nAndroid\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\nListSubscriptionsResult listSubscriptionsResult = snsClient.listSubscriptions();\nList<Subscription> subscriptions = listSubscriptionResult.getSubscriptions();\n\n\niOS\nlet sns = AWSSNS.default()\nlet req: AWSSNSListSubscriptionsInput = AWSSNSListSubscriptionsInput()\nsns.listSubscriptions(req).continue(with: AWSExecutor.default(), with: { (task: AWSTask) -> AnyObject? in\n    if let error = task.error { print(\"Error: \\(error)\"); return nil; }\n    let result: AWSSNSListSubscriptionsResponse? = task.result\n    let subscriptions = result?.subscriptions\n\n    print(subscriptions)\n    return nil\n})\n\n\nSubscribe API\n\u5b58\u5728\u3057\u3066\u3044\u308bTopic\u540d\u3092\u6307\u5b9a\u3057\u3066subscribe\u3059\u308b\u3002\n\nAndroid\nString title = \"\u30c8\u30d4\u30c3\u30af\u540d\";\nString nesessaryTopicArn = SNS_TOPIC_PREFIX + title;\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\n\nSubscribeRequest subscribeRequest = new SubscribeRequest(nesessaryTopicArn, \"application\", endPoint);\nSubscribeResult subscribeResult = snsClient.subscribe(subscribeRequest);\nString subscriptionArn = subscribeResult.getSubscriptionArn();\n\n\niOS\nlet sns = AWSSNS.default()\nlet request: AWSSNSSubscribeInput = AWSSNSSubscribeInput()\n\nrequest.topicArn = SNS_TOPIC_PREFIX + subscribeTopicName\nrequest.protocols = \"application\"\nrequest.endpoint = endPointArn\n\nsns.subscribe(request).continue(with: AWSExecutor.default(), with: { (task: AWSTask) -> AnyObject? in\n    if let error = task.error { print(\"Error: \\(error)\"); return nil; }\n    guard let subscribeResponse = task.result else { return nil }\n    guard let subscriptionArn = subscribeResponse.subscriptionArn else { return nil }\n\n    print(subscriptionArn)    \n    return nil\n})\n\n\nUnsubscribe API\nsubscribe\u3057\u3066\u3044\u308bSubscription ARN\u3092\u6307\u5b9a\u3057\u3066unsubscribe\u3059\u308b\u3002\n\nAndroid\nString subscriptionArn = \"unsubscribe\u3059\u308b\u30c8\u30d4\u30c3\u30af\u306eSubscription ARN\"\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\nUnsubscribeRequest request = new UnsubscribeRequest(subscriptionArn);\nsnsClient.unsubscribe(request);\n\n\niOS\nlet sns = AWSSNS.default()\nlet request: AWSSNSUnsubscribeInput = AWSSNSUnsubscribeInput()\nrequest.subscriptionArn = subscriptionArn\nsns.unsubscribe(request)\n\n\nEndpoint\u3092\u5b89\u5168\u306b\u6700\u65b0\u7248\u306b\u4fdd\u3064\u305f\u3081\u306e\u51e6\u7406\nEndpoint\u304c\u6709\u52b9\u3067\u306a\u304f\u306a\u308b\u5834\u5408\u3092\u8003\u616e\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u3067\u3088\u308a\u5b89\u5168\u306bSNS\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nAndroid\nBoolean updateNeeded = false, createNeeded = false;\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\n\ntry {\n    GetEndpointAttributesRequest getAttributesRequest = new GetEndpointAttributesRequest().withEndpointArn(endPoint);\n    GetEndpointAttributesResult attributesResult = snsClient.getEndpointAttributes(getAttributesRequest);\n    Log.d(\"Endpoint Attributes Result: \" + attributesResult.toString());\n\n    updateNeeded = !attributesResult.getAttributes().get(\"Token\").equals(gcmToken)\n            || !attributesResult.getAttributes().get(\"Enabled\").equalsIgnoreCase(\"true\");\n} catch (NotFoundException e) {\n    createNeeded = true;\n    Log.d(\"No endpoint of SNS topic\");\n}\n\n// Make PlatformEndpoint latest safely\nif (createNeeded) {\n    Logg.d(\"Invalidate and recreate endpoint\");\n    createEndpoint(snsClient, gcmToken);\n}\nif (updateNeeded) {\n    Log.d(\"Set attributes for endpoint\");\n    setAttribute(snsClient, gcmToken, endPoint);\n}\n\nprivate static void setAttribute(AmazonSNSClient snsClient, String gcmToken, String endPoint) {\n    Map attributes = new HashMap();\n    attributes.put(\"Token\", gcmToken);\n    attributes.put(\"Enabled\", \"true\");\n    SetEndpointAttributesRequest setAttributesRequest = new SetEndpointAttributesRequest().withEndpointArn(endPoint).withAttributes(attributes);\n    snsClient.setEndpointAttributes(setAttributesRequest);\n}\n\nprivate static String createEndpoint(AmazonSNSClient snsClient, String gcmToken) {\n    String endPoint = \"\";\n    try {\n        CreatePlatformEndpointRequest createRequest = new CreatePlatformEndpointRequest();\n        createRequest.setToken(gcmToken);\n        createRequest.setPlatformApplicationArn(BuildConfig.AMAZON_SNS_PLATFORM_APPLICATION_ARN);\n        CreatePlatformEndpointResult platformEndpoint = snsClient.createPlatformEndpoint(createRequest);\n        endPoint = platformEndpoint.getEndpointArn();\n        Log.d(\"Success to get endpoint: \" + endPoint);\n        return endPoint;\n    } catch (Exception e) {\n        Log.d(\"Failure to get endpoint: \" + e);\n    }\n    return endPoint;\n}\n\n\niOS\nlet sns = AWSSNS.default()\n\nlet request: AWSSNSGetEndpointAttributesInput = AWSSNSGetEndpointAttributesInput()\nrequest.endpointArn = arn\nsns.getEndpointAttributes(request).continue(with: AWSExecutor.default(), with: { [weak self] (task: AWSTask) in\n    guard let me = self else { return nil }\n    if let error = task.error {\n        print(\"Error: Endpoint attributes error. The device should create endpoint: \\(error)\");\n        me.createEndpoint()\n        return nil\n    }\n\n    guard let endpointAttributesResult = task.result else { return nil }\n    let attributes: Dictionary<String, String>? = endpointAttributesResult.attributes\n    if !(attributes?[\"token\"] == endPointArn) || !(attributes?[\"Enabled\"] == \"true\") {\n        print(\"Error: Device token is old or not valid. The device should set latest information\");\n        me.setAttribute()\n    }\n\n    return nil\n})\n\n\nfileprivate func createEndpoint() {\n    let sns = AWSSNS.default()\n    let input: AWSSNSCreatePlatformEndpointInput = AWSSNSCreatePlatformEndpointInput()\n    input.token = endPointArn\n    input.platformApplicationArn = SNS_ARN_DEV\n\n    sns.createPlatformEndpoint(input)\n}\n\nfileprivate func setAttribute() {\n    let sns = AWSSNS.default()\n    let request: AWSSNSSetEndpointAttributesInput = AWSSNSSetEndpointAttributesInput() \n    request.attributes = [\"Token\": endPointArn, \"Enabled\": \"true\"]\n    sns.setEndpointAttributes(request)\n}\n\n\nRuby\u306b\u3088\u308bTopic\u306b\u5fdc\u3058\u305f\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u9001\u4fe1\u51e6\u7406\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3067\u5b9f\u88c5\u3092\u884c\u3046\u3002\nGemfile\n.env\npush.rb\nmessage/2016/10.ini\n             11.ini\n             12.ini\n\nbundler\u3092\u4f7f\u7528\u3059\u308b\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\ngem install bundler\n\n\u5bfe\u8c61\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306bbundler\u306e\u521d\u671f\u5316\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3002\nbundle init\n\nGemfile\u304c\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u3001AWS\u306eSDK\u3068Inifile\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u3002\n# frozen_string_literal: true\n# A sample Gemfile\nsource \"https://rubygems.org\"\n\n# gem \"rails\"\ngem 'aws-sdk', '~> 2'\ngem 'inifile'\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3046\u3002\nbundle install\n\n.env\u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u4f5c\u6210\u3057\u74b0\u5883\u5909\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3002\nexport ACCESS_KEY='AKIA****************'\nexport SECRET_KEY='*****************************************'\n\n\u4f5c\u6210\u5f8c\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u8fbc\u3080\u3002\nsource .env\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5e74/\u6708.ini\u3067\u65e5\u3054\u3068\u306bTopic\u6bce\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7ba1\u7406\u3059\u308b\u5b9f\u88c5\u3067\u3042\u308b\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3059\u308b\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e[18]\u306f2016/10/18\u306b\u5411\u3051\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u3059\u3002\n[18]\nDefualt_Topic = \u30a2\u30d7\u30ea\u3092\u3084\u308d\u3046\nTopic1 = Topic1\u3092\u4eca\u3059\u3050\u30c1\u30a7\u30c3\u30af!\nTopic2 = Topic2\u306f\u660e\u65e5\u9593\u3082\u306a\u304f!\nTopic3 = Topic3\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304a\u3053\u3046!\n\n[19]\nDefualt_Topic = \u30a2\u30d7\u30ea\u4eca\u65e5\u306f\u3082\u3046\u78ba\u8a8d\u3057\u305f\u304b\u306a\nTopic1 = Topic1\u306e\u30e6\u30fc\u30b6\u30fc\u306f\u3053\u308c\u5fc5\u898b\nTopic2 = Topic2\u304c\u4eca\u8a71\u984c\nTopic3 = Topic3\u304c\u71b1\u3044\n\n\u4ee5\u4e0b\u3001\u672c\u4f53\u3068\u306a\u308bRuby\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3042\u308b\u3002\nrequire 'date'\nrequire 'aws-sdk'\nrequire 'inifile'\n\nFILE_PATH = \"./message\"\nFILE_IDENTIFIER = \".ini\"\n\nSNS_PREFIX = \"arn:aws:sns:ap-northeast-1:<\u30a2\u30ab\u30a6\u30f3\u30c8\u756a\u53f7>:\"\nDEFAULT_TOPIC = \"\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u8a2d\u5b9a\u3059\u308b\u30c8\u30d4\u30c3\u30af\u540d\"\n\nclass Message\n    def initialize\n        today = Date.today\n        year = today.year\n        month = today.month\n        filename = FILE_PATH + '/' + year.to_s + '/' + month.to_s + FILE_IDENTIFIER\n        @init = IniFile.new(:filename => filename, :encoding => 'UTF-8')\n    end\n\n    def show(name)\n        day = Date.today.day\n        topic = decide_topic(name)\n        message = @init[day][topic]\n\n        if message.nil? then\n            @init[day][DEFAULT_TOPIC]\n        else\n            message\n        end\n    end\n\n    def decide_topic(name)\n        name\n    end\nend\n\nclass PushManager\n    def initialize\n        Aws.config.update({\n          region: 'ap-northeast-1',\n          credentials: Aws::Credentials.new(ENV['ACCESS_KEY'], ENV['SECRET_KEY'])\n        })\n\n        @client = Aws::SNS::Client.new\n        response = @client.list_topics\n        @topics = response.topics\n    end\n\n    def publish\n        @topics.each { |topic|\n            category = topic.topic_arn[SNS_PREFIX.length..-1]\n\n            topic_arn = SNS_PREFIX + category\n            message = Message.new\n            p category + ' :  ' + message.show(category)\n            @client.publish(\n                :topic_arn => topic_arn,\n                :message => message.show(category)\n            )\n        }\n    end\nend\n\nmanager = PushManager.new\nmanager.publish\n\n\n\u53c2\u8003\nSNS API\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttp://docs.aws.amazon.com/ja_jp/sns/latest/api/Welcome.html\nSNS SDK\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttp://docs.aws.amazon.com/AWSAndroidSDK/latest/javadoc/\nSNS\u306e\u30e2\u30d0\u30a4\u30eb\u30c8\u30fc\u30af\u30f3\u7ba1\u7406\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\nhttp://dev.classmethod.jp/cloud/aws/sns-mobile-token/\nhttps://aws.amazon.com/jp/blogs/mobile/mobile-token-management-with-amazon-sns/\n\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306f\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u306b\u304a\u3044\u3066\u3001\u9001\u4fe1\u5f8c\u30e6\u30fc\u30b6\u30fc\u304c\u30a2\u30d7\u30ea\u3092\u958b\u304f\u304d\u3063\u304b\u3051\u3068\u3082\u306a\u308a\u975e\u5e38\u306b\u91cd\u8981\u306a\u6a5f\u80fd\u3067\u3059\u3002\n\nAmazon SNS\u3067\u306f\u3053\u306e\u6a5f\u80fd\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001\u5b9f\u88c5\u4f8b\u3082\u6570\u591a\u304f\u30cd\u30c3\u30c8\u4e0a\u3067\u898b\u3064\u304b\u308a\u307e\u3059\u3002\u5168\u304f\u306e\u521d\u3081\u3066\u306e\u5834\u5408\u3001[Amazon Mobile Hub](https://aws.amazon.com/jp/mobile/)\u3067\u6700\u4f4e\u9650\u5b9f\u88c5\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u306e\u65b9\u3082\u5229\u7528\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u4e00\u65b9\u3067\u3001\u898b\u3064\u304b\u308b\u60c5\u5831\u306e\u591a\u304f\u306f\u30e6\u30fc\u30b6\u30fc\u5168\u54e1\u306b\u540c\u3058\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3082\u306e\u3067\u3042\u308a\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5c64\u6bce\u306b\u5c64\u306e\u5b9a\u7fa9\u3092\u67d4\u8edf\u306b\u751f\u6210\u3057\u7570\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u308c\u3070\u3001\u3088\u308a\u30e6\u30fc\u30b6\u30fc\u306b\u523a\u3055\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u3057\u304b\u3057\u3001\u30cd\u30c3\u30c8\u4e0a\u306b\u3042\u307e\u308a\u5b9f\u88c5\u4f8b\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u8a18\u4e8b\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3059\u3002\n\nAmazon SNS\u3067\u306f\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u9001\u308b\u305f\u3081\u306b\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n1. \u521d\u671f\u5316\u51e6\u7406\n2. Endpoint\u306e\u4f5c\u6210\n3. Topic\u306b\u5bfe\u3059\u308bsubscribe\u306e\u51e6\u7406\n\n\u3053\u3053\u307e\u3067\u306f\u30cd\u30c3\u30c8\u4e0a\u3067\u591a\u304f\u60c5\u5831\u304c\u898b\u3064\u304b\u308a\u307e\u3059\u3002\n\u4ee5\u964d\u3001SNS\u3067\u8907\u96d1\u306a\u51e6\u7406\u3082\u53ef\u80fd\u306a\u3088\u3046\u306b\u3001\u3088\u304f\u4f7f\u7528\u3055\u308c\u308b\u3068\u601d\u308f\u308c\u308bSNS\u306e\u4ee5\u4e0b\u306eAPI\u306e\u5b9f\u88c5\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\n\n- ListTopics API\n- CreateTopic API\n- CreatePlatformEndpoint API\n- ListSubscriptions API\n- Subscribe API\n- Unsubscribe API\n\n\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u8a00\u8a9e\u3068\u306a\u308a\u307e\u3059\u3002\n\n|\u7aef\u672b|\u8a00\u8a9e|\n|:--|:--|\n|Android|Java|\n|iOS|Swift3|\n\n\u307e\u305f\u3001\u63a8\u5968\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u3057\u3066\u3001Endpoint\u304c\u5931\u52b9\u3057\u3066\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u304c\u9001\u308c\u306a\u304f\u306a\u308b\u306e\u3092\u9632\u3050\u305f\u3081\u306bEndpoint\u3092\u5b89\u5168\u306b\u6700\u65b0\u7248\u306b\u4fdd\u3064\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u8a73\u3057\u3044\u8aac\u660e\u306f[\u3053\u3061\u3089](http://dev.classmethod.jp/cloud/aws/sns-mobile-token/)\u306e\u65b9\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u3053\u3067\u306f\u5b9f\u88c5\u4f8b\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u3001\u4f5c\u6210\u3057\u305fTopic\u6bce\u306b\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u9001\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u88c5\u4f8b(Ruby)\u3082\u6319\u3052\u307e\u3059\u3002\n\n#\u521d\u671f\u5316\u51e6\u7406\nCognito\u3067\u8a8d\u8a3c\u5f8c\u3001SNS\u306e\u5404\u7a2eAPI\u306b\u3088\u308b\u51e6\u7406\u3092\u884c\u3046\u3002\n\n##Android\n\n```\nfinal CognitoCachingCredentialsProvider credentials = credentialsProvider =\n                new CognitoCachingCredentialsProvider(context,\n                        \"AWS_ACCOUNT_ID\",\n                        \"COGNITO_POOL_ID\",\n                        \"UNAUTH_ROLE_ARN\",\n                        \"AUTH_ROLE_ARN\",\n                        Regions.AP_NORTHEAST_1\n                );\n```\n##iOS\n\n```\nlet credentialsProvider:AWSCognitoCredentialsProvider = AWSCognitoCredentialsProvider(regionType: .apNortheast1, identityPoolId: \"us-east-1:xxxxxxxxxxxx(Identity pool ID )\")\nlet configuration = AWSServiceConfiguration(region: AWSRegionType.apNortheast1, credentialsProvider: credentialsProvider)\nconfiguration?.timeoutIntervalForResource = 1000\nAWSServiceManager.default().defaultServiceConfiguration =\nconfiguration\ncredentialsProvider.getIdentityId()\n```\n\n#ListTopics API\nTopic\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n##Android\n\n```\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\nListTopicsResult listTopicsResult = snsClient.listTopics();\nList<Topic> topics = listTopicsResult.getTopics();\n```\n\n##iOS\n\n```\nlet sns = AWSSNS.default()\nlet request: AWSSNSListTopicsInput = AWSSNSListTopicsInput()\nsns.listTopics(request).continue(with: AWSExecutor.default(), with: { [weak self] (task: AWSTask) -> AnyObject? in\n    guard let me = self else { return nil }\n    if let error = task.error { print(\"Error: \\(error)\"); return nil; }\n    \n    guard let listTopicsResponse = task.result else { return nil }\n    guard let topics = listTopicsResponse.topics else { return nil }\n    \n    print(topics)\n    \n    return nil\n})\n\n```\n\n#CreateTopic API\nTopic\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n##Android\n\n```\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\nCreateTopicRequest createTopicRequest = new CreateTopicRequest(topic);\nCreateTopicResult createTopicResult = snsClient.createTopic(createTopicRequest);\n```\n##iOS\n\n```\nlet request: AWSSNSCreateTopicInput = AWSSNSCreateTopicInput()\nrequest.name = topic\nsns.createTopic(request)\n```\n\n#CreatePlatformEndpoint API\nEndpoint\u3092\u4f5c\u6210\u3059\u308b\u3002\n##Android\n\n```\nfinal GoogleCloudMessaging gcm = GoogleCloudMessaging.getInstance(context);\nString deviceToken = gcm.register(gcmSenderID);\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\n\nCreatePlatformEndpointRequest createRequest = new CreatePlatformEndpointRequest();\ncreateRequest.setToken(deviceToken);            createRequest.setPlatformApplicationArn(BuildConfig.AMAZON_SNS_PLATFORM_APPLICATION_ARN);\nCreatePlatformEndpointResult platformEndpoint = snsClient.createPlatformEndpoint(createRequest);\nString endPoint = platformEndpoint.getEndpointArn();\n```\n##iOS\n\n```\nlet sns = AWSSNS.default()\nlet input: AWSSNSCreatePlatformEndpointInput = AWSSNSCreatePlatformEndpointInput()\ninput.token = deviceToken\ninput.platformApplicationArn = SNS_ARN_DEV\nsns.createPlatformEndpoint(input)\n```\n\n#ListSubscriptions API\nsubscribe\u3055\u308c\u3066\u3044\u308bSubscription\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u7aef\u672b\u6bce\u306bsubscribe\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u53d6\u308a\u51fa\u3059\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u8a8d\u8a3c\u306b\u4f7f\u7528\u3057\u305fIAM\u3067subscribe\u3057\u3066\u3044\u308b\u3082\u306e\u5168\u4f53\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3002\n\n##Android\n\n```\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\nListSubscriptionsResult listSubscriptionsResult = snsClient.listSubscriptions();\nList<Subscription> subscriptions = listSubscriptionResult.getSubscriptions();\n```\n##iOS\n\n```\nlet sns = AWSSNS.default()\nlet req: AWSSNSListSubscriptionsInput = AWSSNSListSubscriptionsInput()\nsns.listSubscriptions(req).continue(with: AWSExecutor.default(), with: { (task: AWSTask) -> AnyObject? in\n    if let error = task.error { print(\"Error: \\(error)\"); return nil; }\n    let result: AWSSNSListSubscriptionsResponse? = task.result\n    let subscriptions = result?.subscriptions\n    \n    print(subscriptions)\n    return nil\n})\n```\n\n\n#Subscribe API\n\u5b58\u5728\u3057\u3066\u3044\u308bTopic\u540d\u3092\u6307\u5b9a\u3057\u3066subscribe\u3059\u308b\u3002\n\n##Android\n```\nString title = \"\u30c8\u30d4\u30c3\u30af\u540d\";\nString nesessaryTopicArn = SNS_TOPIC_PREFIX + title;\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\n\nSubscribeRequest subscribeRequest = new SubscribeRequest(nesessaryTopicArn, \"application\", endPoint);\nSubscribeResult subscribeResult = snsClient.subscribe(subscribeRequest);\nString subscriptionArn = subscribeResult.getSubscriptionArn();\n```\n##iOS\n\n```\nlet sns = AWSSNS.default()\nlet request: AWSSNSSubscribeInput = AWSSNSSubscribeInput()\n\nrequest.topicArn = SNS_TOPIC_PREFIX + subscribeTopicName\nrequest.protocols = \"application\"\nrequest.endpoint = endPointArn\n\nsns.subscribe(request).continue(with: AWSExecutor.default(), with: { (task: AWSTask) -> AnyObject? in\n    if let error = task.error { print(\"Error: \\(error)\"); return nil; }\n    guard let subscribeResponse = task.result else { return nil }\n    guard let subscriptionArn = subscribeResponse.subscriptionArn else { return nil }\n    \n    print(subscriptionArn)    \n    return nil\n})\n```\n\n#Unsubscribe API\nsubscribe\u3057\u3066\u3044\u308bSubscription ARN\u3092\u6307\u5b9a\u3057\u3066unsubscribe\u3059\u308b\u3002\n##Android\n\n```\nString subscriptionArn = \"unsubscribe\u3059\u308b\u30c8\u30d4\u30c3\u30af\u306eSubscription ARN\"\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\nUnsubscribeRequest request = new UnsubscribeRequest(subscriptionArn);\nsnsClient.unsubscribe(request);\n```\n##iOS\n\n```\nlet sns = AWSSNS.default()\nlet request: AWSSNSUnsubscribeInput = AWSSNSUnsubscribeInput()\nrequest.subscriptionArn = subscriptionArn\nsns.unsubscribe(request)\n```\n\n\n#Endpoint\u3092\u5b89\u5168\u306b\u6700\u65b0\u7248\u306b\u4fdd\u3064\u305f\u3081\u306e\u51e6\u7406\nEndpoint\u304c\u6709\u52b9\u3067\u306a\u304f\u306a\u308b\u5834\u5408\u3092\u8003\u616e\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u3067\u3088\u308a\u5b89\u5168\u306bSNS\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n##Android\n\n```\nBoolean updateNeeded = false, createNeeded = false;\nfinal AmazonSNSClient snsClient = new AmazonSNSClient(credentials);\n\ntry {\n    GetEndpointAttributesRequest getAttributesRequest = new GetEndpointAttributesRequest().withEndpointArn(endPoint);\n    GetEndpointAttributesResult attributesResult = snsClient.getEndpointAttributes(getAttributesRequest);\n    Log.d(\"Endpoint Attributes Result: \" + attributesResult.toString());\n\n    updateNeeded = !attributesResult.getAttributes().get(\"Token\").equals(gcmToken)\n            || !attributesResult.getAttributes().get(\"Enabled\").equalsIgnoreCase(\"true\");\n} catch (NotFoundException e) {\n    createNeeded = true;\n    Log.d(\"No endpoint of SNS topic\");\n}\n\n// Make PlatformEndpoint latest safely\nif (createNeeded) {\n    Logg.d(\"Invalidate and recreate endpoint\");\n    createEndpoint(snsClient, gcmToken);\n}\nif (updateNeeded) {\n    Log.d(\"Set attributes for endpoint\");\n    setAttribute(snsClient, gcmToken, endPoint);\n}\n\nprivate static void setAttribute(AmazonSNSClient snsClient, String gcmToken, String endPoint) {\n\tMap attributes = new HashMap();\n\tattributes.put(\"Token\", gcmToken);\n\tattributes.put(\"Enabled\", \"true\");\n\tSetEndpointAttributesRequest setAttributesRequest = new SetEndpointAttributesRequest().withEndpointArn(endPoint).withAttributes(attributes);\n\tsnsClient.setEndpointAttributes(setAttributesRequest);\n}\n\t\nprivate static String createEndpoint(AmazonSNSClient snsClient, String gcmToken) {\n\tString endPoint = \"\";\n\ttry {\n\t    CreatePlatformEndpointRequest createRequest = new CreatePlatformEndpointRequest();\n\t    createRequest.setToken(gcmToken);\n\t    createRequest.setPlatformApplicationArn(BuildConfig.AMAZON_SNS_PLATFORM_APPLICATION_ARN);\n\t    CreatePlatformEndpointResult platformEndpoint = snsClient.createPlatformEndpoint(createRequest);\n\t    endPoint = platformEndpoint.getEndpointArn();\n\t    Log.d(\"Success to get endpoint: \" + endPoint);\n\t    return endPoint;\n\t} catch (Exception e) {\n\t    Log.d(\"Failure to get endpoint: \" + e);\n\t}\n\treturn endPoint;\n}\n```\n##iOS\n\n```\nlet sns = AWSSNS.default()\n        \nlet request: AWSSNSGetEndpointAttributesInput = AWSSNSGetEndpointAttributesInput()\nrequest.endpointArn = arn\nsns.getEndpointAttributes(request).continue(with: AWSExecutor.default(), with: { [weak self] (task: AWSTask) in\n    guard let me = self else { return nil }\n    if let error = task.error {\n        print(\"Error: Endpoint attributes error. The device should create endpoint: \\(error)\");\n        me.createEndpoint()\n        return nil\n    }\n    \n    guard let endpointAttributesResult = task.result else { return nil }\n    let attributes: Dictionary<String, String>? = endpointAttributesResult.attributes\n    if !(attributes?[\"token\"] == endPointArn) || !(attributes?[\"Enabled\"] == \"true\") {\n        print(\"Error: Device token is old or not valid. The device should set latest information\");\n        me.setAttribute()\n    }\n\n    return nil\n})\n\n\nfileprivate func createEndpoint() {\n    let sns = AWSSNS.default()\n    let input: AWSSNSCreatePlatformEndpointInput = AWSSNSCreatePlatformEndpointInput()\n    input.token = endPointArn\n    input.platformApplicationArn = SNS_ARN_DEV\n    \n    sns.createPlatformEndpoint(input)\n}\n\nfileprivate func setAttribute() {\n    let sns = AWSSNS.default()\n    let request: AWSSNSSetEndpointAttributesInput = AWSSNSSetEndpointAttributesInput() \n    request.attributes = [\"Token\": endPointArn, \"Enabled\": \"true\"]\n    sns.setEndpointAttributes(request)\n}\n```\n\n#Ruby\u306b\u3088\u308bTopic\u306b\u5fdc\u3058\u305f\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u9001\u4fe1\u51e6\u7406\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3067\u5b9f\u88c5\u3092\u884c\u3046\u3002\n\n```\nGemfile\n.env\npush.rb\nmessage/2016/10.ini\n             11.ini\n             12.ini\n```\n\nbundler\u3092\u4f7f\u7528\u3059\u308b\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n```\ngem install bundler\n```\n\u5bfe\u8c61\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306bbundler\u306e\u521d\u671f\u5316\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n\n```\nbundle init\n```\n\nGemfile\u304c\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u3001AWS\u306eSDK\u3068Inifile\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u3002\n\n```Gemfile\n# frozen_string_literal: true\n# A sample Gemfile\nsource \"https://rubygems.org\"\n\n# gem \"rails\"\ngem 'aws-sdk', '~> 2'\ngem 'inifile'\n```\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3046\u3002\n\n```\nbundle install\n```\n\n.env\u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u4f5c\u6210\u3057\u74b0\u5883\u5909\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```.env\nexport ACCESS_KEY='AKIA****************'\nexport SECRET_KEY='*****************************************'\n```\n\u4f5c\u6210\u5f8c\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u8fbc\u3080\u3002\n\n```\nsource .env\n```\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5e74/\u6708.ini\u3067\u65e5\u3054\u3068\u306bTopic\u6bce\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7ba1\u7406\u3059\u308b\u5b9f\u88c5\u3067\u3042\u308b\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3059\u308b\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e[18]\u306f2016/10/18\u306b\u5411\u3051\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u3059\u3002\n\n```\n[18]\nDefualt_Topic = \u30a2\u30d7\u30ea\u3092\u3084\u308d\u3046\nTopic1 = Topic1\u3092\u4eca\u3059\u3050\u30c1\u30a7\u30c3\u30af!\nTopic2 = Topic2\u306f\u660e\u65e5\u9593\u3082\u306a\u304f!\nTopic3 = Topic3\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304a\u3053\u3046!\n\n[19]\nDefualt_Topic = \u30a2\u30d7\u30ea\u4eca\u65e5\u306f\u3082\u3046\u78ba\u8a8d\u3057\u305f\u304b\u306a\nTopic1 = Topic1\u306e\u30e6\u30fc\u30b6\u30fc\u306f\u3053\u308c\u5fc5\u898b\nTopic2 = Topic2\u304c\u4eca\u8a71\u984c\nTopic3 = Topic3\u304c\u71b1\u3044\n```\n\n\n\u4ee5\u4e0b\u3001\u672c\u4f53\u3068\u306a\u308bRuby\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3042\u308b\u3002\n\n```Ruby\nrequire 'date'\nrequire 'aws-sdk'\nrequire 'inifile'\n\nFILE_PATH = \"./message\"\nFILE_IDENTIFIER = \".ini\"\n\nSNS_PREFIX = \"arn:aws:sns:ap-northeast-1:<\u30a2\u30ab\u30a6\u30f3\u30c8\u756a\u53f7>:\"\nDEFAULT_TOPIC = \"\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u8a2d\u5b9a\u3059\u308b\u30c8\u30d4\u30c3\u30af\u540d\"\n\nclass Message\n    def initialize\n        today = Date.today\n        year = today.year\n        month = today.month\n        filename = FILE_PATH + '/' + year.to_s + '/' + month.to_s + FILE_IDENTIFIER\n        @init = IniFile.new(:filename => filename, :encoding => 'UTF-8')\n    end\n\n    def show(name)\n        day = Date.today.day\n        topic = decide_topic(name)\n        message = @init[day][topic]\n\n        if message.nil? then\n            @init[day][DEFAULT_TOPIC]\n        else\n            message\n        end\n    end\n\n    def decide_topic(name)\n        name\n    end\nend\n\nclass PushManager\n    def initialize\n        Aws.config.update({\n          region: 'ap-northeast-1',\n          credentials: Aws::Credentials.new(ENV['ACCESS_KEY'], ENV['SECRET_KEY'])\n        })\n\n        @client = Aws::SNS::Client.new\n        response = @client.list_topics\n        @topics = response.topics\n    end\n\n    def publish\n        @topics.each { |topic|\n            category = topic.topic_arn[SNS_PREFIX.length..-1]\n\n            topic_arn = SNS_PREFIX + category\n            message = Message.new\n            p category + ' :  ' + message.show(category)\n            @client.publish(\n                :topic_arn => topic_arn,\n                :message => message.show(category)\n            )\n        }\n    end\nend\n\nmanager = PushManager.new\nmanager.publish\n```\n\n#\u53c2\u8003\nSNS API\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttp://docs.aws.amazon.com/ja_jp/sns/latest/api/Welcome.html\nSNS SDK\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttp://docs.aws.amazon.com/AWSAndroidSDK/latest/javadoc/\nSNS\u306e\u30e2\u30d0\u30a4\u30eb\u30c8\u30fc\u30af\u30f3\u7ba1\u7406\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\nhttp://dev.classmethod.jp/cloud/aws/sns-mobile-token/\nhttps://aws.amazon.com/jp/blogs/mobile/mobile-token-management-with-amazon-sns/\n", "tags": ["SNS", "AWS", "Android", "Swift", "iOS"]}