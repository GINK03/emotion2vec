{"context": " More than 1 year has passed since last update.\u4ee5\u524d\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u305f\u30de\u30b9\u30af\u3092\u4f5c\u308b\u30c4\u30fc\u30eb\u3092python\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n\u958b\u767a\u74b0\u5883\nPython 2.7.9\nPython Imaging Library 1.1.7\n\n\u6982\u8981\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u5165\u308c\u308b\u3068\u30de\u30b9\u30af\u753b\u50cf\u3092\u51fa\u529b\u3059\u308b\nCreateMask.py [\u30de\u30b9\u30af\u5143\u306e\u30d5\u30a1\u30a4\u30eb]\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\n[-w] \u6a2a\u306b\u30de\u30b9\u30af\u3092\u6301\u3064\u753b\u50cf\u3092\u751f\u6210\n[-h] \u7e26\u306b\u30de\u30b9\u30af\u3092\u6301\u3064\u753b\u50cf\u3092\u751f\u6210\n[-o] [\u51fa\u529b\u30d5\u30a1\u30a4\u30eb] \u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u51fa\u529b(\u3053\u306e\u6307\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306b_m\u3092\u3064\u3051\u3066\u51fa\u529b)\n\nCreateMask.py\n\n# -*- coding: utf-8 -*-\n\nif __name__ == \"__main__\":\n  import sys\n  import os\n  import Image\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u901a\u5e38\u306e\u30de\u30b9\u30af\u753b\u50cf\u751f\u6210\n  # ------------------------------------------------------------------------------------------------------\n  def CreateMaskNormal(src, dst) :\n    srcdata = list(src.getdata())    # \u5143\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n    for i in range(len(data)) :\n      c = data[i][3]\n      data[i] = (c, c, c)\n    dst.putdata(data)\n\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u6a2a\u306b\u30de\u30b9\u30af\u304c\u3042\u308b\u753b\u50cf\u751f\u6210\n  # ------------------------------------------------------------------------------------------------------\n  def CreateMaskWidth(src, dst, width, height) :\n    srcdata = list(src.getdata())    # \u5143\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n    dstdata = srcdata + srcdata      # \u66f8\u304d\u8fbc\u307f\u5148\u306e\u9818\u57df\u3092\u78ba\u4fdd\n\n    for y in range(height) :\n      soff = y * width;\n      doff = y * width * 2;\n      for x in range(width) :\n        ct = srcdata[soff]\n        c = ct[3]\n        dstdata[doff] = (ct[0], ct[1], ct[2])\n        dstdata[doff + width] = (c, c, c)\n        soff += 1\n        doff += 1\n    dst.putdata(dstdata)\n\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u7e26\u306b\u30de\u30b9\u30af\u304c\u3042\u308b\u753b\u50cf\u751f\u6210\n  # ------------------------------------------------------------------------------------------------------\n  def CreateMaskHeight(src, dst, width, height) :\n    srcdata = list(src.getdata())    # \u5143\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n    dstdata = srcdata + srcdata      # \u66f8\u304d\u8fbc\u307f\u5148\u306e\u9818\u57df\u3092\u78ba\u4fdd\n\n    hlen = len(srcdata)\n    for y in range(height) :\n      off = y * width;\n      for x in range(width) :\n        ct = srcdata[off]\n        c = ct[3]\n        dstdata[off] = (ct[0], ct[1], ct[2])\n        dstdata[off + hlen] = (c, c, c)\n        off += 1\n    dst.putdata(dstdata)\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u30de\u30b9\u30af\u753b\u50cf\u306e\u751f\u6210\n  # ------------------------------------------------------------------------------------------------------\n  def CreateMask(in_file, out_file, w_scale, h_scale) :\n    src = Image.open(in_file)\n    if src.mode != \"RGBA\":\n      return False\n\n    dst = Image.new(\"RGB\", (src.size[0] * w_scale, src.size[1] * h_scale))\n\n    if w_scale != 1 :\n      CreateMaskWidth(src, dst, src.size[0], src.size[1])\n    elif h_scale != 1 :\n      CreateMaskHeight(src, dst, src.size[0], src.size[1])\n    else :\n      CreateMaskNormal(src, dst)\n\n    dst.save(out_file, \"png\")\n\n    return True\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u30e1\u30a4\u30f3\u51e6\u7406\n  # ------------------------------------------------------------------------------------------------------\n  args = sys.argv  # \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u683c\u7d0d\u3057\u305f\u30ea\u30b9\u30c8\u306e\u53d6\u5f97\n  argc = len(args) # \u5f15\u6570\u306e\u500b\u6570\n\n  w = False; # \u6a2a\u306b\u30de\u30b9\u30af\u3092\u4f5c\u6210\u306e\u6709\u7121\n  h = False; # \u7e26\u306b\u30de\u30b9\u30af\u3092\u4f5c\u6210\u306e\u6709\u7121\n  o = False; # \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u6307\u5b9a\n  in_file = \"\";    # \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n  out_file = \"\";   # \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n\n  # \u5f15\u6570\u3092\u78ba\u8a8d\n  for i in range(1, argc):\n    if args[i] == \"-w\":\n      w = True\n    elif args[i] == \"-h\":\n      h = True\n    elif args[i] == \"-o\":\n      o = True\n      out_file = args[i + 1]\n    elif o:\n      o = False\n      out_file = args[i]\n    else:\n      in_file = args[i]\n\n  if in_file == \"\":\n    print u\"CreateMask.py     [\u8aad\u307f\u8fbc\u3080\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d]\"\n    print u\"-w                \u6a2a\u306b\u30de\u30b9\u30af\u3092\u751f\u6210\"\n    print u\"-h                \u7e26\u306b\u30de\u30b9\u30af\u3092\u751f\u6210\"\n    print u\"-o \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a2d\u5b9a\"\n    print u\"                  \u8a2d\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306b_m\u304c\u8ffd\u52a0\u3055\u308c\u3066\u51fa\u529b\"\n    sys.exit()\n\n  path = os.path.dirname(in_file)\n  if path != \"\" :\n    path += u\"/\"\n\n  if out_file == \"\" :\n    # \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u306a\u3044\u5834\u5408\u306f\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306b_m\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3092\u8a2d\u5b9a\n    file, ext = os.path.splitext(os.path.basename(in_file))\n    out_file = path + file + u\"_m.png\";\n  elif os.path.exists(out_file) != u\".png\" :\n    # \u62e1\u5f35\u5b50\u306b.png\u3092\u8a2d\u5b9a\n    out_file = path + os.path.basename(out_file) + \".png\";\n\n  # \u5e45\u306e\u8a2d\u5b9a\n  w_scale = 1\n  if w :\n    w_scale = 2\n\n  # \u9ad8\u3055\u306e\u8a2d\u5b9a\n  h_scale = 1\n  if h and not w:\n    h_scale = 2\n\n  # \u30de\u30b9\u30af\u3092\u4f5c\u6210\n  CreateMask(in_file, out_file, w_scale, h_scale);\n\n\n\n\n\u6700\u5f8c\u306b\n\u3053\u308c\u3067mac\u3067\u3082\u5909\u63db\u3067\u304d\u307e\u3059\u3088\uff01\nPython Imaging Library\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u524d\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u305f\u30de\u30b9\u30af\u3092\u4f5c\u308b\u30c4\u30fc\u30eb\u3092python\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n##\u958b\u767a\u74b0\u5883\nPython 2.7.9\nPython Imaging Library 1.1.7\n\n##\u6982\u8981\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u5165\u308c\u308b\u3068\u30de\u30b9\u30af\u753b\u50cf\u3092\u51fa\u529b\u3059\u308b\nCreateMask.py [\u30de\u30b9\u30af\u5143\u306e\u30d5\u30a1\u30a4\u30eb]\n\n##\u30aa\u30d7\u30b7\u30e7\u30f3\n[-w] \u6a2a\u306b\u30de\u30b9\u30af\u3092\u6301\u3064\u753b\u50cf\u3092\u751f\u6210\n[-h] \u7e26\u306b\u30de\u30b9\u30af\u3092\u6301\u3064\u753b\u50cf\u3092\u751f\u6210\n[-o] [\u51fa\u529b\u30d5\u30a1\u30a4\u30eb] \u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u51fa\u529b(\u3053\u306e\u6307\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306b_m\u3092\u3064\u3051\u3066\u51fa\u529b)\n\n\n```csharp:CreateMask.py\n\n# -*- coding: utf-8 -*-\n\nif __name__ == \"__main__\":\n  import sys\n  import os\n  import Image\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u901a\u5e38\u306e\u30de\u30b9\u30af\u753b\u50cf\u751f\u6210\n  # ------------------------------------------------------------------------------------------------------\n  def CreateMaskNormal(src, dst) :\n    srcdata = list(src.getdata())    # \u5143\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n    for i in range(len(data)) :\n      c = data[i][3]\n      data[i] = (c, c, c)\n    dst.putdata(data)\n\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u6a2a\u306b\u30de\u30b9\u30af\u304c\u3042\u308b\u753b\u50cf\u751f\u6210\n  # ------------------------------------------------------------------------------------------------------\n  def CreateMaskWidth(src, dst, width, height) :\n    srcdata = list(src.getdata())    # \u5143\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n    dstdata = srcdata + srcdata      # \u66f8\u304d\u8fbc\u307f\u5148\u306e\u9818\u57df\u3092\u78ba\u4fdd\n\n    for y in range(height) :\n      soff = y * width;\n      doff = y * width * 2;\n      for x in range(width) :\n        ct = srcdata[soff]\n        c = ct[3]\n        dstdata[doff] = (ct[0], ct[1], ct[2])\n        dstdata[doff + width] = (c, c, c)\n        soff += 1\n        doff += 1\n    dst.putdata(dstdata)\n\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u7e26\u306b\u30de\u30b9\u30af\u304c\u3042\u308b\u753b\u50cf\u751f\u6210\n  # ------------------------------------------------------------------------------------------------------\n  def CreateMaskHeight(src, dst, width, height) :\n    srcdata = list(src.getdata())    # \u5143\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n    dstdata = srcdata + srcdata      # \u66f8\u304d\u8fbc\u307f\u5148\u306e\u9818\u57df\u3092\u78ba\u4fdd\n\n    hlen = len(srcdata)\n    for y in range(height) :\n      off = y * width;\n      for x in range(width) :\n        ct = srcdata[off]\n        c = ct[3]\n        dstdata[off] = (ct[0], ct[1], ct[2])\n        dstdata[off + hlen] = (c, c, c)\n        off += 1\n    dst.putdata(dstdata)\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u30de\u30b9\u30af\u753b\u50cf\u306e\u751f\u6210\n  # ------------------------------------------------------------------------------------------------------\n  def CreateMask(in_file, out_file, w_scale, h_scale) :\n    src = Image.open(in_file)\n    if src.mode != \"RGBA\":\n      return False\n\n    dst = Image.new(\"RGB\", (src.size[0] * w_scale, src.size[1] * h_scale))\n\n    if w_scale != 1 :\n      CreateMaskWidth(src, dst, src.size[0], src.size[1])\n    elif h_scale != 1 :\n      CreateMaskHeight(src, dst, src.size[0], src.size[1])\n    else :\n      CreateMaskNormal(src, dst)\n\n    dst.save(out_file, \"png\")\n\n    return True\n\n  # ------------------------------------------------------------------------------------------------------\n  # \u30e1\u30a4\u30f3\u51e6\u7406\n  # ------------------------------------------------------------------------------------------------------\n  args = sys.argv  # \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u683c\u7d0d\u3057\u305f\u30ea\u30b9\u30c8\u306e\u53d6\u5f97\n  argc = len(args) # \u5f15\u6570\u306e\u500b\u6570\n\n  w = False; # \u6a2a\u306b\u30de\u30b9\u30af\u3092\u4f5c\u6210\u306e\u6709\u7121\n  h = False; # \u7e26\u306b\u30de\u30b9\u30af\u3092\u4f5c\u6210\u306e\u6709\u7121\n  o = False; # \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u6307\u5b9a\n  in_file = \"\";    # \u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n  out_file = \"\";   # \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\n\n  # \u5f15\u6570\u3092\u78ba\u8a8d\n  for i in range(1, argc):\n    if args[i] == \"-w\":\n      w = True\n    elif args[i] == \"-h\":\n      h = True\n    elif args[i] == \"-o\":\n      o = True\n      out_file = args[i + 1]\n    elif o:\n      o = False\n      out_file = args[i]\n    else:\n      in_file = args[i]\n\n  if in_file == \"\":\n    print u\"CreateMask.py     [\u8aad\u307f\u8fbc\u3080\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d]\"\n    print u\"-w                \u6a2a\u306b\u30de\u30b9\u30af\u3092\u751f\u6210\"\n    print u\"-h                \u7e26\u306b\u30de\u30b9\u30af\u3092\u751f\u6210\"\n    print u\"-o \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a2d\u5b9a\"\n    print u\"                  \u8a2d\u5b9a\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306b_m\u304c\u8ffd\u52a0\u3055\u308c\u3066\u51fa\u529b\"\n    sys.exit()\n\n  path = os.path.dirname(in_file)\n  if path != \"\" :\n    path += u\"/\"\n\n  if out_file == \"\" :\n    # \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u306a\u3044\u5834\u5408\u306f\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u306b_m\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3092\u8a2d\u5b9a\n    file, ext = os.path.splitext(os.path.basename(in_file))\n    out_file = path + file + u\"_m.png\";\n  elif os.path.exists(out_file) != u\".png\" :\n    # \u62e1\u5f35\u5b50\u306b.png\u3092\u8a2d\u5b9a\n    out_file = path + os.path.basename(out_file) + \".png\";\n\n  # \u5e45\u306e\u8a2d\u5b9a\n  w_scale = 1\n  if w :\n    w_scale = 2\n\n  # \u9ad8\u3055\u306e\u8a2d\u5b9a\n  h_scale = 1\n  if h and not w:\n    h_scale = 2\n\n  # \u30de\u30b9\u30af\u3092\u4f5c\u6210\n  CreateMask(in_file, out_file, w_scale, h_scale);\n\n```\n\n##\u6700\u5f8c\u306b\n\u3053\u308c\u3067mac\u3067\u3082\u5909\u63db\u3067\u304d\u307e\u3059\u3088\uff01\n<b>Python Imaging Library\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u306a\u3044\u3068\u52d5\u304b\u306a\u3044</b>\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Python", "cocos2d-x", "Android"]}