{"context": "\u30a2\u30a4\u30c6\u30e0\u3084\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3001\u30a4\u30d9\u30f3\u30c8\u7528\u30d0\u30c3\u30c1\u7b49\u3001\n\u30b3\u30f3\u30c6\u30f3\u30c4\u5185\u3067\u6271\u3046\u753b\u50cf\u30ea\u30bd\u30fc\u30b9\u304c\u6bb5\u3005\u3068\u7740\u5b9f\u306b\u5897\u3048\u3066\u3044\u304d\n\u521d\u56de\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u5897\u52a0\u304c\u6b62\u307e\u3089\u306a\u3044\u3002\u3002\u3002\n\u305d\u3093\u306a\u60aa\u5922\u306a\u672a\u6765\u3092\u3001\u624b\u9593\u306a\u304f\u697d\u306b\u56de\u907f\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u305d\u3057\u3066\u601d\u3044\u4ed8\u3044\u305f\u306e\u306f\u3001\u968f\u6642\u8ffd\u52a0\u3055\u308c\u308b\u753b\u50cf\u30ea\u30bd\u30fc\u30b9\u3092\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304b\u3089\u76f4\u63a5\u53d6\u5f97\u3059\u308b\u3002\n\u3064\u307e\u308a\u3001html\u306eimg\u30bf\u30b0\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3067\n\u52ff\u8ad6url\u3092\u6307\u5b9a\u3057\u3066\u76f4\u63a5\u8868\u793a\u3067\u304d\u308b\u30b9\u30d7\u30e9\u30a4\u30c8\u3067\u3059\u3002\n\u7406\u60f3\u3068\u3057\u3066\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u4f7f\u3044\u305f\u3044\u3002\nauto sprite = Sprite::createWithUrl(\"http://resource-server/a.png\");\naddChild( sprite );\n\n\u5f8c\u306f\u30ed\u30fc\u30c9\u304c\u7d42\u308f\u3063\u305f\u3089\u52dd\u624b\u306b\u8868\u793a\u3055\u308c\u3066\u304f\u308c\u3066\u3001\n\u521d\u671f\u5316\u4e2d\u306bUI\u30b9\u30ec\u30c3\u30c9\u306b\u8ca0\u8377\u3092\u304b\u3051\u306a\u3044\u4e8b\u304c\u7406\u60f3\u3002\n\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3001\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304b\u3089\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306e\u306b\n\u30fbnetwork::HttpClient::getInstance()->sendImmediate\n\u7aef\u672b\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6e08\u307f\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u975e\u540c\u671f\u8aad\u307f\u8fbc\u307f\u3059\u308b\u306e\u306b\n\u30fbDirector::getInstance()->getTextureCache()->addImageAsync\n\u3092\u4f7f\u3046\u306e\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\u30b3\u30fc\u30c9\u306b\u3059\u308b\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u203b\u3068\u308a\u3042\u3048\u305a\u3001Sprite\u3092\u7d99\u627f\u3057\u305fLazySprite\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\u521d\u671f\u5316\u6642\u306b\u5148\u305a\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\nbool LazySprite::initWithURL(const std::string& url){\n    if( Sprite::init() ){\n        _saveFileDir = FileUtils::getInstance()->getWritablePath();\n        _saveFilePath = _saveFileDir + url.substr( url.rfind('/')+1, std::string::npos );\n\n        network::HttpRequest* req = new network::HttpRequest();\n        req->setRequestType( network::HttpRequest::Type::GET );\n        req->setUrl( url.c_str() );\n        req->setResponseCallback( CC_CALLBACK_2(LazySprite::httpRequestCallback, this) );\n\n        // \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u4e2d\u306b\u81ea\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u524a\u9664\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3001\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092\u4e0a\u3052\u3066\u304a\u304f\n        retain();\n        // HttpRequest\u767a\u884c\n        //   network::HttpClient::getInstance()->send\u3067\u306f\u306a\u304f\n        //   network::HttpClient::getInstance()->sendImmediate\u306a\u306e\u306f\u3001\n        //   network::HttpClient::getInstance()->send\u3067API\u30b3\u30fc\u30eb\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306b\n        //   \u963b\u5bb3\u3055\u308c\u308b\u4e8b\u304c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u70ba\n        network::HttpClient::getInstance()->sendImmediate( req );\n        return true;\n    }\n    return false;\n}\n\n\u6b21\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30ab\u30eb\u3078\u4fdd\u5b58\u3057\u3001\u305d\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u975e\u540c\u671f\u3067\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u672c\u5f53\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d0\u30a4\u30ca\u30ea\u304b\u3089\u76f4\u63a5Image\u3092\u4f5c\u6210\u3067\u304d\u308b\u3068\u826f\u3044\u306e\u3067\u3059\u304c\u3001\n\u305d\u306e\u5834\u5408\u306f\u81ea\u5206\u3067\u30b9\u30ec\u30c3\u30c9\u3092\u7acb\u3066\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\n\u3072\u3068\u307e\u305aaddImageAsync\u3092\u4f7f\u3044\u307e\u3059\u3002\nvoid LazySprite::httpRequestCallback(network::HttpClient* client, network::HttpResponse* response){\n\n    if( response->getResponseCode() == 200 ){\n        // \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30ab\u30eb\u3078\u4fdd\u5b58\u3059\u308b\n        if( FileUtils::getInstance()->createDirectory( _saveFileDir ) ){\n            FILE* file = fopen( _saveFilePath, \"wb\" );\n            fwrite( &response->getResponseData()->at(0), response->getResponseData()->size(), 1, file );\n            fclose( file );\n        }\n        // \u81ea\u5206\u4ee5\u5916\u304b\u3089\u306e\u53c2\u7167\u304c\u3042\u308c\u3070\u51e6\u7406\n        if( getReferenceCount() > 1 ){\n            // \u30c6\u30af\u30b9\u30c1\u30e3\u8aad\u8fbc\u4e2d\u306b\u81ea\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u524a\u9664\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3001\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092\u4e0a\u3052\u3066\u304a\u304f\n            retain();\n            // \u30c6\u30af\u30b9\u30c1\u30e3\u8aad\u307f\u8fbc\u307f\u958b\u59cb\n            Director::getInstance()->getTextureCache()->addImageAsync( _saveFilePath, CC_CALLBACK_1(LazySprite::textureLoadCallback, this) );\n        }\n    }else{\n        CCLOG(\"%s\", _saveFilePath.c_str());\n        CC_ASSERT(0);\n    }\n\n    // initWithURL\u3067\u4e0a\u3052\u305f\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092\u623b\u3059\n    release();\n}\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30b9\u30d7\u30e9\u30a4\u30c8\u3078\u9069\u7528\u3057\u307e\u3059\u3002\n\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30b9\u30d7\u30e9\u30a4\u30c8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\nvoid LazySprite::textureLoadCallback(Texture2D* texture){\n\n    // \u81ea\u5206\u4ee5\u5916\u304b\u3089\u306e\u53c2\u7167\u304c\u3042\u308c\u3070\u51e6\u7406\n    if( getReferenceCount() > 1 ){\n        setTexture( texture );\n        setTextureRect( Rect(0, 0, texture->getContentSize().width, texture->getContentSize().height ) );\n    }\n\n    // httpRequestCallback\u3067\u4e0a\u3052\u305f\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092\u623b\u3059\n    release();\n}\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001\u5404\u975e\u540c\u671f\u51e6\u7406\u306e\u5b8c\u4e86\u5f85\u3061\u4e2d\u306b\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u524a\u9664\u3055\u308c\u3066\u3057\u307e\u3046(removeChild\u7b49\u3067)\u3068\u826f\u304f\u306a\u3044\u3053\u3068\u306b\u306a\u308b\u70ba\u3001\n\u975e\u540c\u671f\u51e6\u7406\u30b3\u30fc\u30eb\u306e\u76f4\u524d\u306b\u81ea\u8eab\u3092retain\u3057\u3001\u7d42\u308f\u3063\u305f\u3089release\u3068\u3044\u3046\u611f\u3058\u3067\u4fdd\u8b77\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001cocos2d-x\u6052\u4f8b\u306e create**** \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nSprite* LazySprite::createWithURL(const std::string& url){\n    LazySprite *sprite = new (std::nothrow) LazySprite();\n    if (sprite && sprite->initWithURL(url))\n    {\n        sprite->autorelease();\n        return sprite;\n    }\n    CC_SAFE_DELETE(sprite);\n    return nullptr;\n}\n\n\u3053\u308c\u3067 cocos2d-x\u7248\u3001img\u30bf\u30b0\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u66f4\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u6a5f\u80fd\u3092\u4ed8\u3051\u308b\u3068\n\u30b3\u30c1\u30e9\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nCCLazySprite.h\nCCLazySprite.cpp\n\u30a2\u30a4\u30c6\u30e0\u3084\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3001\u30a4\u30d9\u30f3\u30c8\u7528\u30d0\u30c3\u30c1\u7b49\u3001\n\u30b3\u30f3\u30c6\u30f3\u30c4\u5185\u3067\u6271\u3046\u753b\u50cf\u30ea\u30bd\u30fc\u30b9\u304c\u6bb5\u3005\u3068\u7740\u5b9f\u306b\u5897\u3048\u3066\u3044\u304d\n\u521d\u56de\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u5897\u52a0\u304c\u6b62\u307e\u3089\u306a\u3044\u3002\u3002\u3002\n\n\u305d\u3093\u306a\u60aa\u5922\u306a\u672a\u6765\u3092\u3001\u624b\u9593\u306a\u304f\u697d\u306b\u56de\u907f\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n* * *\n\n\u305d\u3057\u3066\u601d\u3044\u4ed8\u3044\u305f\u306e\u306f\u3001\u968f\u6642\u8ffd\u52a0\u3055\u308c\u308b\u753b\u50cf\u30ea\u30bd\u30fc\u30b9\u3092\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304b\u3089\u76f4\u63a5\u53d6\u5f97\u3059\u308b\u3002\n\n\u3064\u307e\u308a\u3001html\u306eimg\u30bf\u30b0\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3067\n\u52ff\u8ad6url\u3092\u6307\u5b9a\u3057\u3066\u76f4\u63a5\u8868\u793a\u3067\u304d\u308b\u30b9\u30d7\u30e9\u30a4\u30c8\u3067\u3059\u3002\n\n\u7406\u60f3\u3068\u3057\u3066\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u4f7f\u3044\u305f\u3044\u3002\n\n```cpp\nauto sprite = Sprite::createWithUrl(\"http://resource-server/a.png\");\naddChild( sprite );\n```\n\n\u5f8c\u306f\u30ed\u30fc\u30c9\u304c\u7d42\u308f\u3063\u305f\u3089\u52dd\u624b\u306b\u8868\u793a\u3055\u308c\u3066\u304f\u308c\u3066\u3001\n\u521d\u671f\u5316\u4e2d\u306bUI\u30b9\u30ec\u30c3\u30c9\u306b\u8ca0\u8377\u3092\u304b\u3051\u306a\u3044\u4e8b\u304c\u7406\u60f3\u3002\n\n\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3001\n\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304b\u3089\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306e\u306b\n\u30fbnetwork::HttpClient::getInstance()->sendImmediate\n\n\u7aef\u672b\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6e08\u307f\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u975e\u540c\u671f\u8aad\u307f\u8fbc\u307f\u3059\u308b\u306e\u306b\n\u30fbDirector::getInstance()->getTextureCache()->addImageAsync\n\n\u3092\u4f7f\u3046\u306e\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n\n\u30b3\u30fc\u30c9\u306b\u3059\u308b\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n* * *\n\n\u203b\u3068\u308a\u3042\u3048\u305a\u3001Sprite\u3092\u7d99\u627f\u3057\u305fLazySprite\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u521d\u671f\u5316\u6642\u306b\u5148\u305a\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\n\n```cpp\nbool LazySprite::initWithURL(const std::string& url){\n    if( Sprite::init() ){\n        _saveFileDir = FileUtils::getInstance()->getWritablePath();\n        _saveFilePath = _saveFileDir + url.substr( url.rfind('/')+1, std::string::npos );\n\n        network::HttpRequest* req = new network::HttpRequest();\n        req->setRequestType( network::HttpRequest::Type::GET );\n        req->setUrl( url.c_str() );\n        req->setResponseCallback( CC_CALLBACK_2(LazySprite::httpRequestCallback, this) );\n\n        // \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u4e2d\u306b\u81ea\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u524a\u9664\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3001\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092\u4e0a\u3052\u3066\u304a\u304f\n        retain();\n        // HttpRequest\u767a\u884c\n        //   network::HttpClient::getInstance()->send\u3067\u306f\u306a\u304f\n        //   network::HttpClient::getInstance()->sendImmediate\u306a\u306e\u306f\u3001\n        //   network::HttpClient::getInstance()->send\u3067API\u30b3\u30fc\u30eb\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306b\n        //   \u963b\u5bb3\u3055\u308c\u308b\u4e8b\u304c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u70ba\n        network::HttpClient::getInstance()->sendImmediate( req );\n        return true;\n    }\n    return false;\n}\n```\n\n\u6b21\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30ab\u30eb\u3078\u4fdd\u5b58\u3057\u3001\u305d\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u975e\u540c\u671f\u3067\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u672c\u5f53\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d0\u30a4\u30ca\u30ea\u304b\u3089\u76f4\u63a5Image\u3092\u4f5c\u6210\u3067\u304d\u308b\u3068\u826f\u3044\u306e\u3067\u3059\u304c\u3001\n\u305d\u306e\u5834\u5408\u306f\u81ea\u5206\u3067\u30b9\u30ec\u30c3\u30c9\u3092\u7acb\u3066\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\n\u3072\u3068\u307e\u305aaddImageAsync\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```cpp:\nvoid LazySprite::httpRequestCallback(network::HttpClient* client, network::HttpResponse* response){\n    \n    if( response->getResponseCode() == 200 ){\n        // \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30ab\u30eb\u3078\u4fdd\u5b58\u3059\u308b\n        if( FileUtils::getInstance()->createDirectory( _saveFileDir ) ){\n            FILE* file = fopen( _saveFilePath, \"wb\" );\n            fwrite( &response->getResponseData()->at(0), response->getResponseData()->size(), 1, file );\n            fclose( file );\n        }\n        // \u81ea\u5206\u4ee5\u5916\u304b\u3089\u306e\u53c2\u7167\u304c\u3042\u308c\u3070\u51e6\u7406\n        if( getReferenceCount() > 1 ){\n            // \u30c6\u30af\u30b9\u30c1\u30e3\u8aad\u8fbc\u4e2d\u306b\u81ea\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u524a\u9664\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3001\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092\u4e0a\u3052\u3066\u304a\u304f\n            retain();\n            // \u30c6\u30af\u30b9\u30c1\u30e3\u8aad\u307f\u8fbc\u307f\u958b\u59cb\n            Director::getInstance()->getTextureCache()->addImageAsync( _saveFilePath, CC_CALLBACK_1(LazySprite::textureLoadCallback, this) );\n        }\n    }else{\n        CCLOG(\"%s\", _saveFilePath.c_str());\n        CC_ASSERT(0);\n    }\n    \n    // initWithURL\u3067\u4e0a\u3052\u305f\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092\u623b\u3059\n    release();\n}\n```\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30b9\u30d7\u30e9\u30a4\u30c8\u3078\u9069\u7528\u3057\u307e\u3059\u3002\n\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30b9\u30d7\u30e9\u30a4\u30c8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```cpp:\nvoid LazySprite::textureLoadCallback(Texture2D* texture){\n    \n    // \u81ea\u5206\u4ee5\u5916\u304b\u3089\u306e\u53c2\u7167\u304c\u3042\u308c\u3070\u51e6\u7406\n    if( getReferenceCount() > 1 ){\n        setTexture( texture );\n        setTextureRect( Rect(0, 0, texture->getContentSize().width, texture->getContentSize().height ) );\n    }\n    \n    // httpRequestCallback\u3067\u4e0a\u3052\u305f\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092\u623b\u3059\n    release();\n}\n```\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001\u5404\u975e\u540c\u671f\u51e6\u7406\u306e\u5b8c\u4e86\u5f85\u3061\u4e2d\u306b\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u524a\u9664\u3055\u308c\u3066\u3057\u307e\u3046(removeChild\u7b49\u3067)\u3068\u826f\u304f\u306a\u3044\u3053\u3068\u306b\u306a\u308b\u70ba\u3001\n\u975e\u540c\u671f\u51e6\u7406\u30b3\u30fc\u30eb\u306e\u76f4\u524d\u306b\u81ea\u8eab\u3092retain\u3057\u3001\u7d42\u308f\u3063\u305f\u3089release\u3068\u3044\u3046\u611f\u3058\u3067\u4fdd\u8b77\u3057\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u3001cocos2d-x\u6052\u4f8b\u306e create**** \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```cpp\nSprite* LazySprite::createWithURL(const std::string& url){\n    LazySprite *sprite = new (std::nothrow) LazySprite();\n    if (sprite && sprite->initWithURL(url))\n    {\n        sprite->autorelease();\n        return sprite;\n    }\n    CC_SAFE_DELETE(sprite);\n    return nullptr;\n}\n```\n\n\u3053\u308c\u3067 cocos2d-x\u7248\u3001img\u30bf\u30b0\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u66f4\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u6a5f\u80fd\u3092\u4ed8\u3051\u308b\u3068\n\u30b3\u30c1\u30e9\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n[CCLazySprite.h](https://github.com/yassy0413/cocos2dx-3.x-util/blob/develop/CCLazySprite.h)\n[CCLazySprite.cpp](https://github.com/yassy0413/cocos2dx-3.x-util/blob/develop/CCLazySprite.cpp)\n", "tags": ["cocos2d-x3.x"]}