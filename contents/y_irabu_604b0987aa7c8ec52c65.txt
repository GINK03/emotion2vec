{"context": "\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3060\u3051\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306b\u7cbe\u901a\u3057\u305f\u3064\u3082\u308a\u306b\u306a\u308b\n\n\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u57fa\u672c\u3092\u304a\u3055\u3048\u308b\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5404\u8a00\u8a9e\u306e\u57fa\u672c\u4ed5\u69d8\u3092\u30de\u30b9\u30bf\u30fc\u3057\u305f\u3064\u3082\u308a\u306b\u306a\u308a\u307e\u3059\u3002\nHello World!\u306e\u6b21\u306b\u3084\u3063\u3066\u307f\u308c\u3070\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\n\n\u5909\u6570\u306e\u5ba3\u8a00\u3068\u304b\u4ee3\u5165\uff08\u675f\u7e1b\uff09\u3068\u304b\u30b9\u30b3\u30fc\u30d7\u3068\u304b\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u53d6\u5f97\n\u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u306e\u5909\u63db\n\u95a2\u6570\u5b9a\u7fa9\u3068\u547c\u3073\u51fa\u3057\n\u518d\u5e30\u95a2\u6570\u306e\u5229\u7528\n\u6761\u4ef6\u5206\u5c90\n\u6587\u5b57\u5217\uff08\u6570\u5024\uff09\u306e\u8868\u793a\n\u30b3\u30e1\u30f3\u30c8\u6587\u306e\u66f8\u304d\u65b9\n\u5927\u307e\u304b\u306a\u5b9f\u884c\u901f\u5ea6\n\n\u4e0a\u8a18\u3092\u4e00\u6c17\u306b\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3042\u3089\u4fbf\u5229\u3002\nprogopedia \u3084\u4f3c\u305f\u3088\u3046\u306a\u8a18\u4e8b\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3059\u3079\u3066\u304c\u540c\u3058\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u52d5\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u5b8c\u7d50\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u5c11\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3068\u306f\n\u3081\u3093\u3069\u304f\u3055\u3044\u306e\u3067\u8a73\u3057\u3044\u3053\u3068\u306fWikipedia\u3067\u8abf\u3079\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u3067\u306f\u7c21\u5358\u306b\u66f8\u304d\u307e\u3059\u3002\n\u5b9a\u7fa9\u306f\u3001\n\n\u4e00\u822c\u9805\u306e\u8fd1\u4f3c\u5f0f\u306f\u3001\n\n\n\u6f38\u5316\u5f0f\u306e\u884c\u5217\u8868\u73fe\u306f\u3001\n\n\u4eca\u56de\u306f\u982d\u306e\u60aa\u3044\u518d\u5e30\u95a2\u6570\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u901a\u308a\u306b39\u756a\u76ee\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u300c63,245,986\u300d\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\u66f8\u304d\u65b9\u306b\u3064\u3044\u3066\n\u5404\u8a00\u8a9e\u3001\u3082\u3063\u3068\u3044\u3044\u66f8\u304d\u65b9\u306f\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u306a\u308b\u3079\u304f\u65b9\u8a00\u304c\u51fa\u306a\u3044\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u305d\u306e\u8a00\u8a9e\u306e\u6a19\u6e96\u7684\u306a\u66f8\u304d\u65b9\u306b\u306a\u3063\u3066\u3044\u306a\u304f\u3066\u3001\u305d\u306e\u8a00\u8a9e\u306e\u7279\u5fb4\u3092\u77e5\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u5bfe\u3057\u3066\u306f\u672c\u672b\u8ee2\u5012\u306a\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u304b\u3089\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6700\u9069\u5316\u3055\u308c\u3066\u56fa\u5b9a\u5024\u3092\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306f\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u9806\u5e8f\n\u5927\u4f53TIOBE\u306e2016\u5e741\u6708\u306e\u4eba\u6c17\u9806\u4f4d\u3067\u66f8\u3044\u3066\u307e\u3059\u3002\n\u9014\u4e2d\u77e5\u3089\u306a\u3044\u8a00\u8a9e\u3092\u98db\u3070\u3057\u305f\u308a\u3001C\u3068Java\u3092\u5165\u308c\u3048\u3061\u3083\u3063\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u304c\u3002\n\n\u89e3\u8aac\u306b\u3064\u3044\u3066\n\u3082\u306e\u3059\u3054\u304f\u500b\u4eba\u7684\u306a\u504f\u898b\u3084\u8aa4\u89e3\u3001\u601d\u3044\u8fbc\u307f\u306b\u6e80\u3061\u305f\u89e3\u8aac\u3067\u3059\u3002\n\u89e3\u8aac\u4e2d\u3067\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3068\u304b\u4e2d\u9593\u30b3\u30fc\u30c9\u3068\u304b\u306b\u306f\u3053\u3060\u308f\u3089\u305a\u3001\u96d1\u306b\n\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5fc5\u8981\u306a\u8a00\u8a9e\u2192\u30b3\u30f3\u30d1\u30a4\u30eb\u8a00\u8a9e\u3068\u304b\u30b3\u30f3\u30d1\u30a4\u30e9\u3068\u304b\n\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u4e0d\u8981\u306a\u8a00\u8a9e\u2192\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3068\u304b\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3068\u304b\n\u3068\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u300c\u8a00\u8a9e\u3068\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u9055\u3046\u3060\u308d\u3002\u300d\u3068\u304b\u3064\u3063\u3053\u307e\u308c\u305d\u3046\u3067\u3059\u304c\u3001\u307e\u3041\u306a\u3093\u3068\u306a\u304f\u3001\u3067\u3002\n\n\u4eca\u5f8c\u306e\u4e88\u5b9a\n\u8ffd\u52a0\u4e88\u5b9a\u306e\u8a00\u8a9e\n\nIo\n\nABC\u9806\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\nC\n\u3068\u308a\u3042\u3048\u305a\u304a\u7d04\u675f\u3068\u3044\u3046\u3053\u3068\u3067\u3001C\u8a00\u8a9e\u304b\u3089\u884c\u304d\u307e\u3059\u3002\n\u591a\u5206\u3001\u4e16\u754c\u6a19\u6e96\u3067\u3059\u3002\n\u901f\u3044\u3057\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u8c4a\u5bcc\u3060\u3057\u3001\u6b63\u76f4\u3053\u308c\u3060\u3051\u77e5\u3063\u3066\u3044\u308c\u3070\u4f55\u3067\u3082\u3067\u304d\u307e\u3059\u3002\n\u3068\u8a00\u3063\u3066\u3057\u307e\u3048\u3070\u3001\u3053\u306e\u8a18\u4e8b\u306e\u5b58\u5728\u304c\u5371\u3076\u307e\u308c\u307e\u3059\u304c\u3002\n\u3053\u308c\u3050\u3089\u3044\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3042\u308c\u3070\u3001PHP \u3084 JavaScript \u3057\u304b\u89e6\u3063\u305f\u3053\u3068\u306e\u306a\u3044\u4eba\u3067\u3082\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30bf\u3092\u7406\u89e3\u3067\u304d\u308b\u304b\u304c\u3069\u3046\u304b\u304c\u3053\u306e\u8a00\u8a9e\u306e\u9375\u3067\u3059\u3002\n\nfib_c.c\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\n#include <stdio.h>\n#include <stdlib.h>\n\nint fib(int n)\n{\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n-1) + fib(n-2);\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    int n;\n    n = atoi(argv[1]);\n    printf(\"%d\", fib(n));\n    return 0;\n}\n\n/*\nExample\n    compile:\n        gcc -O3 -o fib_c fib_c.c\n    run:\n        ./fib_c.c 39\n*/\n\n\n<\u8fd1\u4f3c\u5f0f\u3067\u3084\u3063\u3064\u3051>\nlong long int \u306a\u306e\u306792\u4ee5\u4e0b\u3057\u304b\u30c0\u30e1\u3067\u3059\u304c\u3001\u8a08\u6e2c\u4e0d\u80fd\u306a\u30bf\u30a4\u30e0\u3067\u77ac\u6bba\u3067\u3059\u3002\n\nfib_binet.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main(int argc, char *argv[])\n{\n    printf(\"%lld\", (long long int)(pow(((1+sqrt(5))/2),atof(argv[1]))/sqrt(5)+0.5));\n    return 0;\n}\n/*\nExample\n    compile:\n        gcc -O3 -lm -o fib_binet fib_binet.c\n    run:\n        ./fib_binet 92\n*/\n\n\n\nJava\n\u3053\u308c\u307e\u305f\u3053\u306e\u696d\u754c\u306b\u3044\u3066\u540d\u524d\u3092\u77e5\u3089\u306a\u3044\u4eba\u306f\u3044\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u6614\u306f\u9045\u3044\u9045\u3044\u3068\u8a00\u308f\u308c\u307e\u3057\u305f\u304c\u3001JIT\u304c\u52b9\u304f\u3088\u3046\u306b\u306a\u3063\u3066\u304b\u3089\u306f\u3001C\u8a00\u8a9e\u306b\u8feb\u308b\u901f\u5ea6\u3067\u3059\u3002\n\u3053\u306e\u8a00\u8a9e\u3082\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u8c4a\u5bcc\u3067\u3001\u3053\u308c\u3060\u3051\u3067\u307b\u307c\u4f55\u3067\u3082\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u8a00\u8a9e\u3067\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u6642\u9593\u306e\u6b86\u3069\u306f\u3001\u30af\u30bd\u307f\u305f\u3044\u306b\u968e\u5c64\u306e\u6df1\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3069\u3053\u306b\u4f55\u304c\u3042\u308b\u304b\u3092\u63a2\u3059\u3053\u3068\u306b\u8cbb\u3084\u3059\u3053\u3068\u3067\u3059\u3002\n\u66f8\u304d\u65b9\u304c\u3061\u3087\u3063\u3068\u5197\u9577\u306a\u306e\u304c\u5acc\u3044\u306a\u3068\u3053\u308d\u3067\u3059\u3002\nJIT\u3067\u5145\u5206\u901f\u3044\u306e\u3067\u3001GNU\u306eJava\u306e\u30b3\u30f3\u30d1\u30a4\u30e9gcj\u306f\u3082\u3046\u3044\u3089\u306a\u3044\u5b50\u304b\u3082\u2026\u3002\n\nfib_java.java\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by java\npublic class fib_java {\n    public static int fib(int n) {\n        if (n < 2) {\n            return n;\n        } else {\n            return fib(n-2) + fib(n-1);\n        }\n    }\n    public static void main(String[] args) {\n        int n = Integer.parseInt(args[0]);\n        System.out.println(fib(n));\n    }\n}\n\n/*\n    example\n        compile by OpenJDK:\n            javac fib_java.java\n        run by OpenJDK:\n            java fib_java 39\n        compile by gcj:\n            gcj -O4 --main=fib_java -o fib_gcj fib_java.java\n        rub by gcj:\n            ./fib_java 39\n*/\n\n\n\nC++\nC\u8a00\u8a9e\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3092\u53d6\u308a\u8fbc\u3093\u3060\u9b54\u7269\u3002\n\u3053\u306e\u8a00\u8a9e\u306e\u30c0\u30fc\u30af\u30b5\u30a4\u30c9\u306b\u9665\u308c\u3070\u3001\u30af\u30e9\u30b9\u7d99\u627f\u306e\u7121\u9593\u5730\u7344\u304c\u5473\u308f\u3048\u307e\u3059\u3002\n\u3055\u3059\u304c\u306b\u901f\u5ea6\u306fC\u540c\u69d8\u306b\u9ad8\u901f\u3002\n\nfib_cpp.cpp\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by C++\n\n#include <iostream>\n#include <cstdlib>\n\nusing namespace std;\n\nint fib(int n)\n{\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\n\nint main(int argc, char** argv)\n{\n    int n;\n    n = atoi(argv[1]);\n    cout << fib(n) << endl;\n\n    return 0;\n}\n\n/*\nexample\n    compile:\n        g++ -o fib_cpp -O3 -mtune=native fibonacci.cpp\n    run:\n        ./fib_cpp 39\n*/\n\n\n\nC\uff03\nMicrosoft\u8b39\u88fd\u306eC\u8a00\u8a9e\u3082\u3069\u304d\u3002\nC\u8a00\u8a9e\u3068Java\u3092\u8db3\u3057\u3066\u5272\u3063\u305f\u3088\u3046\u306a\u4ed5\u69d8\u3002\nVisualBasic\u3088\u308a\u3082\u3059\u3063\u304d\u308a\u3057\u305f\u66f8\u304d\u65b9\u304c\u3067\u304d\u3001Windows\u754c\u9688\u3067\u306f\u6a19\u6e96\u306b\u306a\u308a\u305d\u3046\u306a\u52e2\u3044\u3002\nMono\u3092\u5229\u7528\u3059\u308c\u3070Linux\u3067\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u304c\u53ef\u80fd\u3002\nWindows\u3067\u901f\u5ea6\u6bd4\u8f03\u3092\u3084\u3063\u3066\u3044\u306a\u3044\u304c\u591a\u5206\u9ad8\u901f\u3002\nLinux\u3067\u306fMono\u306b\u4f9d\u5b58\u3059\u308b\u306e\u3067\u306a\u3093\u3068\u3082\u8a00\u3048\u307e\u305b\u3093\u304c\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3088\u308a\u306f\u901f\u3044\u3002\n\u3044\u3084\u3001\u500b\u4eba\u7684\u306b\u306f\u5acc\u3044\u3067\u306f\u306a\u3044\u3093\u3067\u3059\u304c\u306d\u3002\n\nfib_cs.cs\n// C#\u3067\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\nusing System;\n\nclass Fibonacci\n{\n    static long Fib(int n)\n    {\n        if (n < 2)\n            return n;\n        else\n            return Fib(n - 2) + Fib(n - 1);\n    }\n\n    static void Main(string[] args)\n    {\n        int n = int.Parse(args[0]);\n        Console.Write(Fib(n));\n    }\n}\n\n/*\nexample\n    compile:\n        mcs -optimize+ fib_cs.cs\n    run:\n        mono fib_cs.exe 39\n*/\n\n\n\nPython\n\u3044\u304d\u306a\u308a\u30b9\u30af\u30ea\u30d7\u30c8\uff08\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\uff09\u8a00\u8a9e\u3002\n\u3053\u306e\u8a00\u8a9e\u306e\u7279\u5fb4\u306f\u306a\u3093\u3068\u8a00\u3063\u3066\u3082\u3001\u30a4\u30f3\u30c7\u30f3\u30c8\u3067\u30d6\u30ed\u30c3\u30af\u304c\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u3002\n\u8ab0\u304c\u66f8\u3044\u3066\u3082\u7dba\u9e97\u306b\u898b\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u66f8\u3051\u307e\u3059\u3002\n\u305f\u3060\u3057\u4e2d\u9014\u534a\u7aef\u306b\u30a4\u30f3\u30c7\u30f3\u30c8\u3064\u3051\u3066\u304f\u308c\u308b\u30a8\u30c7\u30a3\u30bf\u3067\u7de8\u96c6\u3059\u308b\u3068\u3001\u4e00\u767a\u3067\u4fee\u5fa9\u4e0d\u53ef\u80fd\u306a\u72b6\u614b\u307e\u3067\u7834\u58ca\u3055\u308c\u3061\u3083\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u901f\u5ea6\u306f\u9045\u3044\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u304c2\u21923\u306b\u306a\u3063\u3066\u66f4\u306b\u9045\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u3063\u3066\u304b\u3001\u5fae\u5999\u306b\u4e92\u63db\u6027\u304c\u306a\u3044\uff01\u52d8\u5f01\u3057\u3066\u304f\u3060\u3055\u3044\u3002\npypy\u3068\u304b\u306f\u540d\u524d\u304c\u3044\u3084\u3089\u3057\u3044\u306e\u3067\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u306a\u305c\u304b\u6d77\u5916\u3067\u306f\u4eba\u6c17\u3002\n\u6614\u300cpsp\u300d\u3068\u8a00\u3063\u3066PHP\u306b\u5bfe\u6297\u3057\u3066HTML\u306b\u57cb\u3081\u8fbc\u3080\u5f62\u5f0f\u306ePython\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u60f3\u50cf\u901a\u308aHTML\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u3068\u6df7\u3056\u308a\u5408\u3044\u6df7\u6c8c\u3057\u305f\u30bd\u30fc\u30b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u666e\u53ca\u3057\u306a\u304b\u3063\u305f\u306e\u306fPython\u306e\u9ed2\u6b74\u53f2\u3002\n\nfib_py.py\n# -*- coding: utf-8 -*-\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Python\n\nimport sys\n\ndef fib(n):\n    if n < 2 :\n        return n\n    else:\n        return fib(n-2) + fib(n-1)\n\nargv = int(sys.argv[1])\n\nprint(fib(argv))\n\n\"\"\"\nexample\n    run:\n        python fibonacci.py 39\n\"\"\"\n\n\n\nphp\u30fbHack\n\u307f\u3093\u306a\u5927\u597d\u304dphp\u3002\n\u9069\u5f53\u306b\u66f8\u3044\u3066\u3082\u305d\u3053\u305d\u3053\u52d5\u304f\u305f\u3081\u306b\u3001\u7cde\u30b3\u30fc\u30c9\u304c\u7e41\u6b96\u3057\u3084\u3059\u3044\u3002\nphp-7\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3001\u901f\u5ea6\u306f\u307b\u307c2\u500d\u306b\u3002Ruby\u3068\u307b\u307c\u540c\u3058\u901f\u5ea6\u3002\n\u3067\u3082php\u4e92\u63db\u306ehhvm\u306fChrome\u306eV8\u4e26\u307f\u306b\u901f\u3044\u3002\n\u30ed\u30b8\u30c3\u30af\u3060\u3051\u306ephp\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u3001\u5f8c\u308d\u306e\u300c?>\u300d\u306f\u3064\u3051\u306a\u3044\u306e\u304c\u6d41\u884c\u308a\u3089\u3057\u3044\u3002\n\u305f\u3057\u304b\u306b\u3001\u4f59\u8a08\u306a\u6539\u884c\u306b\u60a9\u307e\u3055\u308c\u306a\u304f\u3066\u826f\u3055\u305d\u3046\u3002\n\nfib_php.php\n<?php\n/**\n * \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3060\u3088\n * @param int $n\n * @return int\n */\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n    } else {\n        return fib($n-2) + fib($n-1);\n    }\n}\n\nprint fib($argv[1]);\n\n/*\nexample\n    run:\n        php fib_php.php 39\n*/\n\n\nhhvm \u3067\u578b\u3092\u6307\u5b9a\u3057\u3066\u66f8\u304f\u3068\u300cHack\u300d\u306b\u306a\u308a\u307e\u3059\u3002\n\u3060\u304b\u3089\u3068\u8a00\u3063\u3066\u3001\u666e\u901a\u306ehhvm \u3088\u308a\u901f\u3044\u3068\u3044\u3046\u3053\u3068\u306f\u306a\u304f\u3001\u3069\u3061\u3089\u304b\u3068\u3044\u3048\u3070\u30d0\u30b0\u9632\u6b62\uff1f\nphp\u307d\u304f\u306a\u3044\u3002\u3051\u3069php\u3088\u308a\u306f\u304b\u3063\u3053\u3044\u3044\u3002\n\nfib_php.hh\n<?hh\n/**\n * \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3060\u3088\n * @param int $n\n * @return int\n */\nfunction fib(int $n): int {\n    if ($n < 2) {\n        return $n;\n    } else {\n        return fib($n-2) + fib($n-1);\n    }\n}\n\nprint fib(intval($argv[1]));\n\n/*\nexample\n    run:\n        hhvm fib_php.hh 39\n*/\n\n\n\nBasic\n\nVB.Net\nMicrosoft\u4ed5\u69d8\u306eBasic\u3002\n\u9ad8\u6a5f\u80fd\u306b\u306a\u308a\u904e\u304e\u3066\u3001\u66f8\u304d\u65b9\u304c\u3059\u3054\u304f\u5197\u9577\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u6700\u8fd1\u306fC#\u306b\u4eba\u6c17\u3092\u596a\u308f\u308c\u3064\u3064\u3042\u308b\uff1f\nMono\u3067\u8a66\u3057\u307e\u3057\u305f\u3002\n\u901f\u5ea6\u306fMono\u306b\u4f9d\u5b58\u3059\u308b\u305f\u3081\u3001Mono\u306eC#\u3068\u307b\u307c\u540c\u3058\u3002\u6614\u306f\u3059\u3063\u3052\u3047\u9045\u304b\u3063\u305f\u3051\u3069\u3002\n\nfib_vb.bas\n' \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Visual Basic\nModule Fibonacci\n\n    Function Fib(ByVal N As Integer) As Integer\n        If N < 2 Then\n            Return N\n        Else\n            Return Fib(N - 2) + Fib(N - 1)\n        End If\n    End Function\n\n    Sub Main(ByVal CmdArgs() As String)\n        Dim N As Integer = Integer.Parse(CmdArgs(0))\n        Console.WriteLine(Fib(N))\n    End Sub\n\nEnd Module\n\n' example\n'   compile:\n'       vbnc /optimization+ /out:fib_vbnc.exe fib_bas.bas\n'   run:\n'       mono fib_vbnc.exe 39\n\n\n\nFreeBasic\n\u77e5\u540d\u5ea6\u306f\u4f4e\u3044\u304c\u3001\u4f55\u6c17\u306b\u30af\u30bd\u901f\u3044\u3002\nGNU \u30b3\u30f3\u30d1\u30a4\u30e9\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u753b\u7b56\u3057\u3066\u3044\u308b\u6a21\u69d8\u3002\nGNU C\u3088\u308a\u901f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\nfib_fbc.bas\n' \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by FreeBasic\nFunction Fib(N As Integer) As Integer\n    If N < 2 Then\n        Fib = N\n    Else\n        Fib = Fib(N - 2) + Fib(N - 1)\n    End If\nEnd Function\n\nDim N As Integer = ValInt(Command(1))\nPrint Fib(N)\n\n' example\n'   compile:\n'       fbc -O 3 fib_fbc.bas\n'   run:\n'       ./fib_fbc 39\n\n\n\nJavaScript\nJQUERY \u306e\u304a\u304b\u3052\uff08\u3060\u3051\uff1f\uff09\u3067WEB\u306b\u306f\u6b20\u304b\u305b\u306a\u3044\u8a00\u8a9e\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\u3068\u306f\u8a00\u3046\u3082\u306e\u306e\u3001\u4ed6\u306e\u8a00\u8a9e\u3067\u306f\u5c11\u306a\u3044prototype\u306e\u6982\u5ff5\u3084\u3001\u95a2\u6570\u578b\u8a00\u8a9e\u3063\u307d\u3044\u6a5f\u80fd\u3082\u3042\u308a\u3001\u975e\u5e38\u306b\u8208\u5473\u6df1\u3044\u8a00\u8a9e\u3002\nGoogle\u3068Mozilla\u3067\u958b\u767a\u7af6\u4e89\u3092\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u6700\u8fd1\u306eJavaScript\u306f\u30af\u30bd\u901f\u3044\u3002\nGoogle\u2192Chrome\u2192V8\nMozilla\u2192FireFox\u2192Spidermonkey\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067\u4f7f\u7528\u3059\u308bnode.js\u3068\u3044\u3046\u5b9f\u88c5\u3082\u3042\u308a\u307e\u3059\u3002\n\u3061\u3087\u3063\u3068\u671f\u5f85\u3057\u3066\u3044\u308b\u3001\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u540c\u3058\u8a00\u8a9e\u304c\u4f7f\u3048\u308b\u3068\u3044\u3046\u306e\u306f\u3001\u5b66\u7fd2\u30b3\u30b9\u30c8\u306e\u4f4e\u6e1b\u306b\u7e4b\u304c\u308a\u305d\u3046\u3060\u304c\u3001\u3069\u306e\u30ed\u30b8\u30c3\u30af\u304c\u3069\u3063\u3061\u3067\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\u6df7\u4e71\u3057\u305d\u3046\u3067\u60aa\u3044\u4e88\u611f\u3057\u304b\u3057\u307e\u305b\u3093\u3002\n\u30b5\u30f3\u30d7\u30eb\u306f\u3001V8\u3001node\u3001Spidermonkey \u3067\u52d5\u304f\u3088\u3046\u306b\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u306a\u3093\u304bd8\u30b3\u30de\u30f3\u30c9\u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u56fa\u5b9a\u5024\u3067\u59a5\u5354\u3002\n\nfib_js.js\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by JavaScript\n\nvar fib = function(n) {\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n-1) + fib(n-2);\n    }\n}\n\nif (typeof process === \"undefined\" && typeof scriptArgs !== \"undefined\") {\n    // for Spidermonkey\n    print(fib(scriptArgs[0]));\n} else if (typeof process !== \"undefined\") {\n    // for node\n    console.log(fib(process.argv[2]));\n} else {\n    // for d8\n    print(fib(39));\n}\n\n/*\nexample\n    Spidermonkey:\n        js fib_js.js 39\n    Node.js:\n        node fib_js.js 39\n    v8:\n        d8 fib_js.js\n*/\n\n\n\nRuby\u30fbCrystal\n\nRuby\nRuby\u306f\u65e5\u672c\u88fd\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3002\u304a\u304b\u3052\u3067\u65e5\u672c\u3067\u306e\u4eba\u6c17\u306f\u9ad8\u304f\u65e5\u672c\u8a9e\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u591a\u3044\u3002\n\u3068\u306f\u3044\u3046\u3082\u306e\u306e\u3001\u5b9f\u52d9\u3067Ruby\u3068\u3044\u3046\u306e\u306f\u610f\u5916\u3068\u5c11\u306a\u3044\u3002\n\u8a00\u8a9e\u304a\u305f\u304f\u306b\u3088\u308a\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u597d\u304d\u305d\u3046\u306a\u6a5f\u80fd\u304c\u305f\u3063\u3077\u308a\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u66f8\u304d\u65b9\u306b\u306f\u5bdb\u5bb9\u306a\u3068\u3053\u308d\u304c\u30e1\u30ea\u30c3\u30c8\u3067\u3042\u308a\u30c7\u30e1\u30ea\u30c3\u30c8\u3067\u3082\u3042\u308a\u307e\u3059\u3002\nRuby on Rails \u3067\u4eba\u6c17\u7206\u767a\u3057\u305f\u304c\u3001\u500b\u4eba\u7684\u306b\u306fRoL\u306f\u5b9f\u88c5\u304c\u91cd\u3044\u5370\u8c61\u304c\u3042\u308a\u3001\u3042\u307e\u308a\u597d\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nRuby\u81ea\u4f53\u306f\u597d\u304d\u3002\n\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8ffd\u3046\u3054\u3068\u306b\u901f\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002php\u3068\u901f\u5ea6\u7af6\u4e89\u3092\u3057\u3066\u308b\uff1f\n\nfib_rb.rb\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\ndef fib(n)\n    if (n < 2)\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend\nputs fib(ARGV[0].to_i)\n\n=begin\nexample\n    ruby fib_rb.rb 39\n=end\n\n\n\nCrystal\nCrystal\u306fRuby\u98a8\u306e\u6587\u6cd5\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u8a00\u8a9e\u3002\u958b\u767a\u5143\u306f\u9055\u3044\u307e\u3059\u3002\nRuby\u307b\u3069\u6587\u6cd5\u306b\u5bdb\u5bb9\u3067\u306f\u306a\u3044\u305f\u3081\u3001Ruby\u3067\u3060\u3089\u3057\u306a\u3044\u66f8\u304d\u65b9\u3092\u3057\u3066\u3044\u308b\u3068\u6012\u3089\u308c\u307e\u3059\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u7d4c\u7531\u3067C\u306e\u95a2\u6570\u304c\u547c\u3079\u305f\u308a\u3059\u308b\u3002\u3081\u3063\u3061\u3083\u901f\u3044\u3002\n\u672c\u6c17\u306eJava\u3068\u307b\u307c\u540c\u3058\u901f\u5ea6\u306e\u6700\u8fd1\u3061\u3087\u3063\u3068\u6c17\u306b\u306a\u308b\u8a00\u8a9e\u3002\nRuby\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u307b\u307c\u305d\u306e\u307e\u307e\u52d5\u304d\u305d\u3046\u3067\u3059\u304c\u3001=begin\u301c=end\u5f62\u5f0f\u306e\u30b3\u30e1\u30f3\u30c8\u30d6\u30ed\u30c3\u30af\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\nfib_rb.rb\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\ndef fib(n)\n    if (n < 2)\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend\nputs fib(ARGV[0].to_i)\n\n#\n# example\n#    compile:\n#        crystal compile --release -o fib_crystal fib_rb.rb\n#    run:\n#        ./fib_crystal 39\n#\n\n\n\nPerl\n\nPerl5\nCGI\u3067\u4e00\u6642\u306f\u4e16\u754c\u3092\u5f81\u670d\u3057\u305f\u8a00\u8a9e\u3002\n\u6b63\u898f\u8868\u73fe\u306b\u3088\u308b\u5f37\u529b\u306a\u6587\u5b57\u5217\u64cd\u4f5c\u304c\u7279\u5fb4\u3002\n\u6050\u308d\u3057\u304f\u7701\u7565\u3067\u304d\u308b\u305f\u3081\u3001\u81ea\u5206\u304c\u66f8\u3044\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30824\u6b69\u6b69\u3051\u3070\u308f\u304b\u3089\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u3088\u3063\u3066\u9d8f\u306b\u958b\u767a\u306f\u7121\u7406\u3002\n\u5b9f\u88c5\u304c\u53e4\u304f\u901f\u5ea6\u306f\u9045\u3044\u3002\n\u3057\u304b\u3057Perl\u5f62\u5f0f\u306e\u6b63\u898f\u8868\u73fe\u306f\u4ed6\u306e\u8a00\u8a9e\u306b\u53d7\u3051\u7d99\u304c\u308c\u3066\u3044\u307e\u3059\u3002\n\nfib_perl.pl\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Perl\nsub fib\n{\n    my $n = shift;\n    if ($n < 2) {\n        return $n;\n    } else {\n        return fib( $n - 2 ) + fib( $n - 1 );\n    }\n}\n\nprint fib($ARGV[0]);\n\n=pod\nexample\n    perl fib_perl.pl 39\n=cut\n\n\n\nPerl6\n\u51fa\u308b\u51fa\u308b\u3068\u8a00\u308f\u308c\u3066\u306a\u304b\u306a\u304b\u51fa\u3066\u3053\u306a\u3044\u6b21\u4e16\u4ee3\u578bPerl\u3002\nPerl6 \u3067\u66f8\u304b\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092rakudo \u3068\u3044\u3046\u30b3\u30f3\u30d1\u30a4\u30e9\u304c Moar VM \u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u307e\u3060\u5b9f\u9a13\u6bb5\u968e\u3089\u3057\u304f\u901f\u5ea6\u306f\u30b7\u30a7\u30eb\u4e26\u306b\u9045\u3044\u3002\nPerl5\u3068\u306e\u4e92\u63db\u6027\u3082\u4f4e\u304f\u306a\u304b\u306a\u304b\u4f7f\u3044\u3069\u3053\u308d\u304c\u306a\u3044\u3002\n\nfib_perl.pl6\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Perl\nsub fib ($n)\n{\n    if ($n < 2) {\n        return $n;\n    } else {\n        return fib( $n - 2 ) + fib( $n - 1 );\n    }\n}\n\nmy $ARGV = @*ARGS.shift;\n\nprint fib($ARGV);\n\n=pod\nexample\n    perl6 fib_pl.pl6 20\n=cut\n\n\n\nPascal\n\u304b\u3064\u3066\u306f\u300c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u52c9\u5f37\u3059\u308b\u306a\u3089\u30b3\u30ec\u300d\u3068\u8a00\u308f\u308c\u305f\u8a00\u8a9e\u3002\nbegin\u301cend\u5f62\u5f0f\u304c\u597d\u304d\u306a\u4eba\u306b\u306f\u305f\u307e\u3089\u306a\u3044\u8a00\u8a9e\u3002\nDelphi\u304c\u6d88\u3048\u3001\u305d\u3053\u305d\u3053\u4f7f\u3048\u305d\u3046\u306a\u306e\u306fFree Pascal Compiler\u3050\u3089\u3044\u3002\nFree Pascal Compiler \u306f\u3001\u53e4\u3044Pascal\u306e\u4ed6\u3001Delphi\u30e2\u30fc\u30c9\u3084ObjectPascal\u30e2\u30fc\u30c9\u3067\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3082\u53ef\u80fd\u3002\n\u305f\u3060\u3001\u751f\u6210\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u306b\u30e9\u30f3\u30bf\u30a4\u30e0\u304c\u304f\u3063\u3064\u304f\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u5927\u304d\u304f\u306a\u308a\u304c\u3061\u3002\n\u6700\u9069\u5316\u3082\u3044\u307e\u3044\u3061\u3002\n\u3067\u3082\u500b\u4eba\u7684\u306b\u306f\u611b\u7740\u306e\u3042\u308b\u8a00\u8a9e\u3067\u3059\u3002\n\nfib_pascal.pas\n\nuses sysutils;\n\nfunction fib(n:longint): longint;\nbegin\n     if (n < 2) then\n          fib := n\n     else\n          fib := fib(n - 2) + fib(n - 1);\n     end;\n\nvar\n     n : integer;\nbegin\n     n := StrToInt(ParamStr(1));\n     writeln(fib(n));\nend.\n\n(*\n     example\n    compile(Free Pascal Compiler):\n     fpc -O4 -Tlinux fib_pascal.pas\n*)\n\n\n\nSwift\n2016\u5e74\u306b\u30d6\u30ec\u30a4\u30af\u3057\u305d\u3046\u306a\u8a00\u8a9e\u3002Mac OSX\u306eXcode\u306b\u63a1\u7528\u3055\u308c\u307e\u3057\u305f\u3002\n\u3061\u3087\u3063\u3068\u95a2\u6570\u578b\u8a00\u8a9e\u3063\u307d\u3044\u4ed5\u69d8\u306a\u306e\u3067\u30af\u30bb\u304c\u3042\u308a\u307e\u3059\u3002\n\u305f\u3076\u3093Clang\u3092\u4f7f\u3063\u3066\u3044\u305d\u3046\u306a\u306e\u3067\u901f\u5ea6\u3082Clang\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305fC\u3068\u307b\u307c\u540c\u3058\u3002\n\u3053\u308c\u304c\u51fa\u305f\u3053\u3068\u3067Objective-C\u306e\u7acb\u5834\u304c\u5fae\u5999\u306b\u306a\u308a\u305d\u3046\u3002\n\nfib_swift.swift\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by swift\nfunc fib(n: Int) -> (Int) {\n    if n < 2 {\n        return n\n    } else {\n        return fib(n - 2) + fib(n - 1)\n    }\n}\n\nvar n = Int(Process.arguments.suffixFrom(0)[1])!\nprint(fib(n))\n\n/*\nexample\n    JITmode:\n        swift fib_swift.swift 39\n    compile:\n        swiftc -O -o fib_swift fib_swift.swift\n    run:\n        ./fib_swift 39\n*/\n\n\n\nOctave\u30fbScilab\n\u306a\u3093\u3067\u3044\u304d\u306a\u308a\u6570\u5024\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u304c\u51fa\u3066\u304d\u305f\u304b\u3068\u3044\u3046\u3068\u3001TIOBE\u3067\u306f\u3001\u3053\u306e\u4f4d\u7f6e\u306b\u300cMATLAB\u300d\u304c\u6765\u3066\u3044\u305f\u305f\u3081\u3002\n\u3068\u3044\u3046\u304b\u666e\u901a\u306e\u8a00\u8a9e\u304c\u7d9a\u3044\u305f\u306e\u3067\u3001\u5c11\u3057\u6c17\u5206\u8ee2\u63db\u306b\u3002\n\u809d\u5fc3\u306eMATLAB\u304c\u624b\u5143\u306b\u306a\u3044\u305f\u3081\u3001Octave\u3001Scilab\u3067\u304a\u8336\u3092\u6fc1\u3057\u307e\u3059\u3002\n\u3055\u3059\u304c\u306f\u6570\u5024\u8a08\u7b97\u304c\u5c02\u9580\u306e\u8a00\u8a9e\u3002\n\u6570\u5024\u6f14\u7b97\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3059\u3063\u304d\u308a\u66f8\u3051\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u5b9f\u52b9\u901f\u5ea6\u306f\u9045\u3044\u3002\n\u3042\u3068\u3001Scilab\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u5f15\u6570\u3092\u53d6\u5f97\u3057\u3066\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u306f\u8abf\u67fb\u4e2d\u3002\n\nOctave\n\nfib_octave.m\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Octave\nfunction f  = fib(n)\n    if (n<2)\n        f = n ;\n    else\n        f = fib(n - 2) + fib(n - 1);\n    endif\nendfunction\n\nargs = argv();\nprintf(\"%d\", fib(str2num(args{1})));\n\n#{\n    example\n        run:\n            octave-cli -qf fibonacci.m 20   \n#}\n\n\n\nScilab\n\nfib_scilab.m\n-->function f  = fib(n)\n-->    if n < 2 then\n-->        f = n\n-->    else\n-->        f = fib(n - 2) + fib(n - 1)\n-->    end\n-->endfunction\n\n-->fib(20)\n ans  =\n\n    6765. \n\n\n\nGroovy\n\u306a\u307e\u3051\u3082\u306e\u306e\u70ba\u306eJava\u3002Java\u304c\u6545\u306bJava\u3068\u306e\u89aa\u548c\u6027\u3082\u9ad8\u3044\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u306a\u304f\u3066\u3082\u52d5\u3044\u3061\u3083\u3046\u3002\u5909\u6570\u306e\u578b\u3068\u304b\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u52d5\u3044\u3061\u3083\u3046\u3002\n\u3067\u3082\u771f\u9762\u76ee\u306b\u578b\u6307\u5b9a\u3068\u304b\u3057\u3066\u3042\u3052\u308b\u3068\u3061\u3083\u3093\u3068\u9ad8\u901f\u3067\u52d5\u304d\u307e\u3059\u3002\n\u5acc\u3044\u3058\u3083\u306a\u3044\u3051\u3069\u3001\u30af\u30bb\u304c\u306a\u3055\u3059\u304e\u3066\u4f7f\u3044\u3069\u3053\u308d\u306b\u8ff7\u3044\u307e\u3059\u3002\n\u3067\u3082\u3001int \u3092Integer\u3063\u3066\u66f8\u3044\u3061\u3083\u3046\u3068\u3059\u3054\u304f\u9045\u304f\u306a\u3063\u305f\u308a\u3068\u304b\u3001\u3057\u308c\u3063\u3068\u7f60\u304c\u6f5c\u3093\u3067\u3044\u308b\u306e\u3067\u6ce8\u610f\u3002\n\nfib_groovy.groovy\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by groovy\nint fib(int n) {\n    if (n < 2) {\n      return n;\n    } else {\n      return fib(n - 2) + fib(n - 1);\n    }\n}\n\nint n = Integer.decode(args[0]);\nprintln fib(n);\n\n/*\nexample\n    run source code:\n        groovy fib_groovy.groovy 39\n    compile:\n        groovyc fib_groovy.groovy\n    run byte code:\n        groovy fib_groovy 39\n*/\n\n\n\nR\n\u6570\u5024\u8a08\u7b97\u7528\u8a00\u8a9e\u3002\n\u3068\u8a00\u3063\u3066\u3082\u884c\u5217\u3068\u304b\u96c6\u8a08\u3068\u304b\u304c\u66f8\u304d\u3084\u3059\u3044\u3063\u3066\u3060\u3051\u3067\u3001\u30b4\u30ea\u30b4\u30ea\u306e\u6570\u5024\u6f14\u7b97\u306f\u9045\u3044\u3002\n\u901f\u5ea6\u3092\u6c42\u3081\u308b\u306a\u3089\u3001C\u3068\u304bFortan\u3068\u304b\u4f7f\u3044\u306a\u3055\u3044\u3068\u3044\u3046\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u591a\u5206\u3002\n\u30b0\u30b0\u308a\u306b\u304f\u3044\u3002\n\nfib_r.r\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by R\nfib <- function(n) {\n    if (n < 2)\n        return(n)\n    else\n        return(fib(n - 2) + fib(n - 1))\n}\n\nargv <- commandArgs(TRUE)\nn <- as.integer(argv[1])\n\ncat(fib(n))\n\n# example\n#   run:\n#       Rscript fibonacci.R 30\n\n\n\nD\nC\u306e\u7f6e\u304d\u63db\u3048\u3092\u76ee\u6307\u3057\u3066\u4f5c\u3089\u308c\u305f\u8a00\u8a9e\uff08\u3060\u3068\u601d\u3044\u307e\u3059\uff09\u3002\nC++\u3084Java\u306e\u3044\u3044\u3068\u3053\u53d6\u308a\u3092\u3057\u3066\u9ad8\u6a5f\u80fd\u306b\u3057\u305f\u3089\u3001\u5b9f\u88c5\u304c\u8ffd\u3044\u3064\u3044\u3066\u3044\u306a\u3044\u5370\u8c61\u3002\n\u6765\u308b\u305e\u6765\u308b\u305e\u3068\u8a00\u308f\u308c\u3066\u4e00\u5411\u306b\u6765\u306a\u3044\u3002\n\u672c\u5bb6\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3088\u308a\u3001GNU\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u65b9\u304c\u901f\u3044\u59cb\u672b\u3002\n\nfib_d.d\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by D\n\nimport std.stdio;\nimport std.conv;\n\nint fib(int n) {\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n - 2) + fib(n - 1);\n    }\n}\n\nvoid main(string[] args) {\n    int n = to!int(args[1]);\n    writeln(fib(n));\n}\n\n/*\nexample\n    compile:\n        dmd fib_d.d -O -inline\n        gdc -O3 fib_d.d\n    run:\n        ./fib_d 39\n*/\n\n\n\nFORTRAN\n\u4eca\u56de\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u6f14\u7b97\u3067\u306f\u6700\u901f\u3092\u30de\u30fc\u30af\u3057\u305f\u8a00\u8a9e\u3002GNU\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u306fC\u3088\u308a\u901f\u3044\u3002\n\u6b74\u53f2\u306e\u53e4\u3055\u3001\u6027\u80fd\u306e\u9ad8\u3055\u3001\u96e3\u89e3\u305d\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3001\u30b9\u30d1\u30b3\u30f3\u3067\u306e\u5b9f\u7e3e\u306a\u3069\u6587\u53e5\u306a\u304f\u6700\u5f37\u8a00\u8a9e\u306e\u4e00\u3064\u3002\n\u5b9f\u306fBasic\u306fFortran\u3092\u7c21\u5358\u306b\u3057\u305f\u3082\u306e\u306a\u306e\u3067\u3001\u521d\u898b\u3067\u3082\u306a\u3093\u3068\u306a\u304f\u8aad\u3081\u308b\u8a00\u8a9e\u3002\n\u53e4\u3044\u5b9f\u88c5\u3086\u3048\u3001\u6700\u8fd1\u6d41\u884c\u308a\u306e\u6a5f\u80fd\u306f\u3042\u307e\u308a\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u305d\u3053\u304c\u9b45\u529b\u3002\nFORTAN90\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\nfib_fortan.f90\nprogram main\n    implicit none\n    character(255) a\n    integer n\n    call getarg(1, a)\n    read(a,*) n\n    print *, fib(n)\ncontains\n    recursive integer function fib(n) result(ret)\n        integer n\n        if (n < 2) then\n            ret = n\n        else\n            ret = fib(n-2) + fib(n-1)\n        end if\n    end function fib\nend program main\n\n! compile example\n!   gfortran -o fib_fortran -O3 fibonacci.f90\n\n\n\nDart\n\u6700\u8fd1\u6c17\u306b\u306a\u308b\u8a00\u8a9eNo.1\uff08\u8abf\u67fb\u4eba\u65701\u4eba\uff09\u3002\n\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u306e\u4e2d\u3067\u306f\u30c0\u30f3\u30c8\u30c4\u306b\u901f\u3044\u3002\u30d8\u30bf\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u8a00\u8a9e\u306b\u5339\u6575\u3059\u308b\u901f\u3055\u3002\n\u9759\u7684\u578b\u4ed8\u3051\u8a00\u8a9e\u3002\n\nfib_dart.dart\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Dart\nint fib(num n) {\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n - 2) + fib(n - 1);\n    }\n}\n\nvoid main(List<string> arguments) {\n    int n = int.parse(arguments[0]);\n    print(fib(n));\n}\n\n/*\n example\n    run:\n        dart fibonacchi.dart 39\n*/\n\n\n\nLisp\n\u96e3\u89e3\u305d\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u306f\u30c8\u30c3\u30d7\u30af\u30e9\u30b9\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u3002\n\u61a7\u308c\u306f\u3042\u308b\u306e\u3060\u304c\u3001\u3044\u3064\u3082\u30ab\u30c3\u30b3\u306e\u591a\u3055\u306e\u524d\u306b\u304f\u3058\u3051\u3066\u3057\u307e\u3046\u3002\nSteel Bank Common Lisp \u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nClisp\u3067\u52d5\u304f\u3088\u3046\u306b\u3082\u3057\u3066\u307f\u305f\u3064\u3082\u308a\u3060\u3051\u3069\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\nfib_lisp.cl\n(defun args()\n    #+sbcl sb-ext:*posix-argv*\n    #+clisp ext:*args*\n)\n\n(defun fib (n)\n    (if (< n 2)\n        n\n        (+ (fib (- n 2)) (fib (- n 1)))\n    )\n)\n\n(defun main()\n    (print (fib (parse-integer (nth 1 (args)))))\n)\n\n(main)\n#|\nexample\n    run:\n        sbcl --script fib_lisp.cl 39\n|#\n\n\n\nAda\n\u30a2\u30e1\u30ea\u30ab\u56fd\u9632\u7dcf\u7701\u306e\u8981\u6c42\u306b\u3088\u308a\u958b\u767a\u3055\u308c\u305f\u8d85\u786c\u6d3e\u8a00\u8a9e\u3002\n\u6b74\u53f2\u306f\u53e4\u3044\u304c\u30d1\u30c3\u30b1\u30fc\u30b8\u7b49\u306e\u6982\u5ff5\u304c\u3042\u308a\u307e\u3059\u3002\n\u3042\u307e\u308a\u306b\u6587\u6cd5\u306b\u53b3\u5bc6\u306b\u3057\u305f\u305f\u3081\u3001\u4e00\u822c\u3046\u3051\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u4eca\u3067\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\nGNU\u3067\u306fgnat\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002GNU C\u3088\u308a\u3082\u901f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\nfib_ada.adb\nwith\n    Ada.Integer_Text_IO,\n    Ada.Command_Line;\n\nuse\n    Ada.Integer_Text_IO,\n    Ada.Command_Line;\n\nprocedure fib_ada is\n    N : Integer := Integer'value(Argument(1));\n\nbegin\n    declare\n        function fib (n : Integer) return Integer is\n        begin\n            if n < 2 then\n                return n;\n            else\n                return fib(n - 2) + fib(n - 1);\n            end if;\n        end fib;\n\n    begin\n        Put(fib(N), 1);\n    end;\nend fib_ada;\n\n-- example\n--  compile\n--      gnatmake -O3 fib_ada.adb\n\n\n\nScratch\nMIT\u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u305f\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u8a00\u8a9e\u3002\n\u672c\u5f53\u306f\u6559\u80b2\u7528\u3067\u30bf\u30fc\u30c8\u30eb\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3068\u304b\u3092\u3084\u308b\u8a00\u8a9e\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u6570\u5024\u6f14\u7b97\u3082\u3067\u304d\u306a\u3044\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nJavaScript\u3092\u547c\u3073\u51fa\u305b\u308b\u306e\u3067\u3001\u672c\u5f53\u306f\u305d\u3063\u3061\u3067\u3084\u308b\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u904a\u3076\u3053\u3068\u3082\u3067\u304d\u308b\u3002\u7656\u306b\u306a\u308b\u3068\u697d\u3057\u3044\u3002\nScratch\u672c\u5bb6\u3067\u306f\u306a\u304f\u3001Snap!\u3068\u3044\u3046\u30b5\u30a4\u30c8\u3067\u904a\u3093\u3067\u307f\u307e\u3057\u305f\u3002\nSpidermonkey\u306e\u304a\u304b\u3052\u3060\u3068\u601d\u3046\u304c\u3001Octave\u3088\u308a\u901f\u3044\u3002\n\n\nScala\nJava \u3067\u5b9f\u88c5\u3055\u308c\u305f\u95a2\u6570\u578b\u8a00\u8a9e\u3002\n\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5927\u304d\u3044\u306e\u304b\u3001\u8efd\u3044\u51e6\u7406\u304c\u9045\u3044\u3002\n\u91cd\u3044\u51e6\u7406\u3067\u306f\u9650\u308a\u306a\u304fJava \u306e\u901f\u5ea6\u306b\u8fd1\u3065\u304f\u3002\n\u6587\u6cd5\u306f\u304b\u306a\u308a\u3059\u3063\u304d\u308a\u3057\u3066\u3044\u307e\u3059\u3002\n\u95a2\u6570\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u304c\u4f7f\u3048\u308b\u306e\u306f\u7d20\u6575\u3067\u3059\u304c\u3001if \u306e\u65b9\u304c\u901f\u3044\u306e\u304c\u6b8b\u5ff5\u3002\n\nfib_scala.scala\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1 by Scala\nobject fib_scala {\n    def fib(n: Int): Int =\n        if (n < 2)\n            n\n        else\n            fib(n - 2) + fib(n - 1)\n\n    /* \u3053\u3063\u3061\u304c\u9045\u3044\n    def fib(n: Int): Int = n match {\n        case 0 => 0\n        case 1 => 1\n        case _ => fib(n - 2) + fib(n - 1)\n    }\n    */\n\n    def main(args: Array[String]) = {\n        var n = Integer.parseInt(args(0))\n        println(fib(n))\n    }\n}\n\n/*\nexample\n    run as script:\n        scala -Onone fib_scala.scala 39\n    compile:\n        scalac -optimise -target:jvm-1.8 fib_scala.scala\n    run as byte code:\n        scala \n*/\n\n\n\nProlog\n\u65e5\u672c\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u696d\u754c\u3067\u53e3\u306b\u3057\u3066\u306f\u306a\u3089\u306a\u3044\u8a00\u8449\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u304c\u300c\u03a3\u8a08\u753b\u300d\u3068\u300c\u7b2c5\u4e16\u4ee3\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u300d\u3067\u3059\u3002\n\u305d\u306e\u300c\u7b2c5\u4e16\u4ee3\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u300d\u3092\u958b\u767a\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u4e2d\u6838\u3092\u62c5\u3063\u3066\u3044\u305f\u8a00\u8a9e\u304cProlog\u3067\u3059\u3002\n\u5225\u306b\u65e5\u672c\u7523\u306e\u8a00\u8a9e\u3063\u3066\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\u3002\n\u305d\u3046\u3044\u3046\u308f\u3051\u3067\u4e0d\u9047\u306aProlog\u3067\u3059\u304c\u3001\u300c\u8ad6\u7406\u578b\u8a00\u8a9e\u300d\u3068\u3044\u3046\u7279\u5fb4\u7684\u306a\u30d1\u30e9\u30c0\u30a4\u30e0\u306e\u8a00\u8a9e\u3067\u3059\u3002\n\u8aa4\u89e3\u3092\u6050\u308c\u305a\u306b\u8d85\u7c21\u5358\u306b\u7701\u7565\u3059\u308b\u3068\u3001\n\u300c\u547d\u984c\u3092\u5ba3\u8a00\u3057\u3066\u3044\u3063\u305f\u3089\u3001\u8cea\u554f\u306b\u7b54\u3048\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3093\u3058\u3083\u306d\uff1f\u300d\n\u3063\u3066\u611f\u3058\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u73fe\u72b6\u3001\u300c\u5b9f\u7528\u7684\u304b\uff1f\u300d\u3063\u3066\u805e\u304b\u308c\u305f\u3089\u5373\u7b54\u3067\u300c\u7121\u7406\u3002\u300d\u3067\u3059\u304c\u3001\u7814\u7a76\u3084\u5b66\u7fd2\u5bfe\u8c61\u3068\u3057\u3066\u306f\u975e\u5e38\u306b\u9762\u767d\u3044\u8a00\u8a9e\u3067\u3059\u3002\n\u3046\u3063\u304b\u308a\u3059\u308b\u3068\u30e1\u30e2\u30ea\u3092\u30d0\u30ab\u98df\u3044\u3057\u307e\u3059\u3002\n\u305d\u3082\u305d\u3082\u3053\u3093\u306a\u8a08\u7b97\u3055\u305b\u308b\u306a\u3063\u3066\u8a71\u3067\u3059\u304c\u3002\n\nGNU Prolog (gprolog)\n\u74b0\u5883\u5909\u6570GLOBALSZ\u3068\u304bTRAILSZ\u3068\u304b\u3067\u30e1\u30e2\u30ea\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u5927\u304d\u306a\u5f15\u6570\u3067\u52d5\u304d\u307e\u305b\u3093\u3002\nProlog\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6a19\u6e96\u306e\u62e1\u5f35\u5b50\u304c\u300c.pl\u300d\u306a\u305f\u3081\u3001Perl\u3068\u885d\u7a81\u3057\u307e\u3059\u3002\n\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306fPerl\u3088\u308a\u5c11\u3057\u9ad8\u901f\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068Ruby\u7a0b\u5ea6\u306e\u901f\u3055\u306b\u306a\u308a\u307e\u3059\u3002\n\nfibonacci.pl\n% \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by GNU Prolog\nfib(0,0).\nfib(1,1).\nfib(X,Y) :-\n    X > 1,\n    X2 is X - 2, fib(X2, Y2), !,\n    X1 is X - 1, fib(X1, Y1), !,\n    Y is Y1 + Y2.\n\nmain :- current_prolog_flag(argv, Argv),\n    nth0(1, Argv, Param),\n    number_atom(N, Param),\n    fib(N, X),\n    write(X),\n    nl,\n    halt.\n\n:- initialization(main).\n\n% exapmle\n%   interpreter:\n%       export GLOBALSZ=262144;export TRAILSZ=262144; gprolog 30 --consult-file fibonacci.pl\n%   compiler:\n%       gplc fibonacci.pl\n%       export TRAILSZ=1048576; ./fibonacci 39\n\n\n\nLua\n\u6d41\u884c\u308b\u304b\u306a\u3068\u601d\u308f\u305b\u3066\u304a\u3044\u3066\u3001\u306a\u304b\u306a\u304b\u6d41\u884c\u3089\u306a\u3044\u8a00\u8a9e\u3002\n\u77e5\u3089\u306a\u3044\u9593\u306bluajit \u3068\u304b\u51fa\u3066\u308b\u3057\u3001\u901f\u3044\u3002\n\u3042\u307e\u308a\u30af\u30bb\u306e\u306a\u3044\u6587\u6cd5\u3002\n\nfib_lua.lua\n-- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\nfunction fib(n)\n    if n < 2 then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend\n\nn = tonumber(arg[1])\nprint(fib(n))\n\n--[[\nexample\n    lua fib_lua.lua 39\n    luajit fib_lua.lua 39\n--]]\n\n\n\nF\uff03\nMicrosoft Visual Studio \u306e\u7570\u7aef\u5150\u3002\u95a2\u6570\u578b\u8a00\u8a9e\u3002\n\u7570\u7aef\u5150\u304c\u6545\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u5c11\u306a\u3044\u3002\u4f55\u4eba\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u95a2\u6570\u578b\u8a00\u8a9e\u3089\u3057\u304f\u3001\u95a2\u6570\u3067\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u4f7f\u3048\u307e\u3059\u3002\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u6c42\u3081\u308b\u4ee5\u5916\u306b\u4f7f\u3044\u307f\u3061\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\nfib_fs.fs\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by F#\n(* if else\nlet rec fib n = \n    if n < 2 then\n        n\n    else\n        fib(n - 2) + fib(n - 1)\n*)\nlet rec fib = function\n    | n when n=0 -> 0\n    | n when n=1 -> 1\n    | n -> fib(n - 2) + fib(n - 1)\n\n[<EntryPointAttribute>]\nlet main (args) = \n    //printf \"%d\" (fib(10))\n    let n : int = int args.[0]\n    printf \"%d\" (fib(n))\n    0\n\n(*\n    example\n        compile:\n            fsharpc --optimize+ fib_fs.fs\n        run:\n            mono fib_fs.exe 39\n*)\n\n\n\nHaskell\n\u786c\u6d3e\u306a\u95a2\u6570\u578b\u8a00\u8a9e\u3002\u786c\u6d3e\u3068\u3044\u3063\u3066\u3082Lisp\u307b\u3069\u30ab\u30c3\u30b3\u5730\u7344\u306b\u9665\u3089\u306a\u3044\u3002\n\u500b\u4eba\u7684\u306b\u306f\u597d\u304d\u3002\u3067\u3082\u4f7f\u3044\u3053\u306a\u305b\u306a\u3044\u81ea\u5206\u304c\u306f\u304c\u3086\u3044\u3002\n\nfib_haskell.hs\n-- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 Haskell\u7248\nimport System.Environment (getArgs)\n\nfib :: Int -> Int\nfib n\n    | n < 2 = n\n    | otherwise = fib(n - 2) + fib(n - 1)\n\nmain = do\n    argv <- getArgs\n    let n = read (argv !! 0) :: Int\n    print $ fib n\n\n{-\nexample\n    compile:\n        ghc -O -o fib_haskell fib_haskell.hs\n    run:\n        ./fib_haskell 39\n-}\n\n\nzipWith\u3092\u4f7f\u3063\u3066\u305a\u3089\u3057\u305f\u30ea\u30b9\u30c8\u3092\u5408\u6210\u3057\u3066\u3044\u304f\u65b9\u6cd5 -- bra_cat_ket\u69d8\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\uff08\u305f\u3076\u3093\u3053\u3063\u3061\u304cHaskell\u3089\u3057\u3044\u66f8\u304d\u65b9\uff09\n\nfib_haskell2.hs\n-- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 Haskell(zipWith)\u7248\nimport System.Environment (getArgs)\n\nfib :: Int -> Integer\nfib n = fibs !! n\n\nfibs :: [Integer]\nfibs = 0:1:zipWith (+) fibs (tail fibs)\n\nmain = do\n    argv <- getArgs\n    let n = read (argv !! 0) :: Int\n    print $ fib n\n\n\n\nErlang\n\u4e0b\u624b\u306a\u8aac\u660e\u3092\u3059\u308b\u3068\u3059\u3054\u3044\u4eba\u306b\u6012\u3089\u308c\u3066\u3057\u307e\u3044\u305d\u3046\u306a\u30a2\u30fc\u30e9\u30f3\u3002\n\u52d5\u7684\u578b\u4ed8\u3051\u306a\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u3059\u3002\n\u4e26\u5217\u51e6\u7406\u601d\u8003\u3067\u5206\u6563\u51e6\u7406\u6307\u5411\u3067\u2026\u3002\n\u3059\u307f\u307e\u305b\u3093\u3001\u3082\u3046\u3053\u308c\u3050\u3089\u3044\u3067\u52d8\u5f01\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6012\u3089\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\u8d77\u52d5\u3059\u308b\u306e\u306b1\u79d2\u7a0b\u5ea6\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u308b\u306e\u304c\u3064\u3089\u3044\u3068\u304b\u3001\n\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u62e1\u5f35\u5b50\u304c\u300c.beam\u300d\u3063\u3066\u3060\u3063\u305b\u3047\u3068\u304b\u3001\n\u8a00\u3044\u307e\u305b\u3093\u304b\u3089\u3054\u3081\u3093\u306a\u3055\u3044\u3001\u3054\u3081\u3093\u306a\u3055\u3044\u3002\n\u6c5a\u3044\u30b3\u30fc\u30c9\u6652\u3057\u3066\u3054\u3081\u3093\u306a\u3055\u3044\u3002\n\nfibonacci.erl\n% \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Erlang\n-module(fibonacci).\n-export([main/1]).\n\nmain(Arg) ->\n    N = fib(list_to_integer(hd(Arg))),\n    io:fwrite(integer_to_list(N)).\n\nfib(0) -> 0;\nfib(1) -> 1;\nfib(N) -> fib(N - 2) + fib(N - 1).\n\n% example\n%    compile:\n%        erlc fibonacci.erl\n%    run:\n%        erl -noshell -run fibonacci main 39 -run init stop\n\n\n\nRust\nMozilla\u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u4e26\u5217\u51e6\u7406\u304c\u5f97\u610f\u306a\u8a00\u8a9e\u3002\n\u3067\u3082\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306b\u306f\u4e26\u5217\u51e6\u7406\u306f\u4e0d\u8981\u3002\nSwift\u3092\u51cc\u3050\u901f\u5ea6\u3092\u51fa\u3057\u306a\u304c\u3089\u3001\u3044\u307e\u3044\u3061\u6ce8\u76ee\u3055\u308c\u306a\u3044\u8a00\u8a9e\u3002\n\u3057\u304b\u3082\u3061\u3087\u3063\u3068\u4f3c\u3066\u3044\u307e\u3059\u3002\n\nfib_rust.rs\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by rust\nuse std::env;\n\nfn fib(n: i64) -> i64 {\n    if n < 2 {\n        n\n    } else {\n        fib(n - 1)  + fib(n - 2)\n    }\n}\n\nfn main() {\n    if let Some(s) = env::args().nth(1) {\n        if let Ok(n) = s.parse::<i64>() {\n            println!(\"{}\", fib(n))\n        }\n    }\n}\n\n/*\n example\n    compile:\n        rustc -C opt-level=3 fib_rust.rs\n    run:\n        ./fib_rust 39\n*/\n\n\n\n\u3053\u308c\u3088\u308a\u4ee5\u4e0b\u306fTIOBE\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u5916\u306e\u8a00\u8a9e\n\n\nGo\nGoogle\u8b39\u88fd\u306e\u8a00\u8a9e\u3002\u6700\u8fd1\u306f\u3042\u307e\u308a\u30cb\u30e5\u30fc\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u3044\u3044\u8a00\u8a9e\u306a\u3093\u3067\u3059\u3051\u3069\u306d\u3002\n\u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u306a\u304f\u30b7\u30f3\u30b0\u30eb\u30d0\u30a4\u30ca\u30ea\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u304c\u4f55\u6c17\u306b\u3059\u3054\u3044\u3002\n\uff1c\u518d\u5e30\u95a2\u6570\u7248\uff1e\n\nfib_go.go\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Go\npackage main\n\nimport \"fmt\"\nimport \"flag\"\n\nfunc fib(n int) int {\n    if n < 2 {\n        return n\n    } else {\n         return fib(n-2) + fib(n-1)\n     }\n}\n\nfunc main() {\n    var n = flag.Int(\"n\", 0, \"usage\")\n    flag.Parse()\n    fmt.Println(fib(*n))\n}\n\n/*\n example\n    compile:\n        go build fib_go.go\n    run:\n        ./fib_go -n 39\n*/\n\n\n\uff1c\u30e1\u30e2\u5316\u95a2\u6570\u7248\uff1eTakaakiFuruse \u69d8\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\nfib_go.go\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 \u30e1\u30e2\u5316 by Go\npackage main\n\nimport \"fmt\"\nimport \"flag\"\n\nfunc calcFib(n int) int {\n    fib := []int{0, 1}\n    for i := 1; i < n; i++ {\n        f := fib[len(fib)-1] + fib[len(fib)-2]\n        if f == n {\n            break\n        }\n        fib = append(fib, f)\n    }\n    return fib[len(fib)-1]\n}\n\nfunc main() {\n    var n int\n    flag.IntVar(&n, \"n\", 0, \"usage\")\n    flag.Parse()\n    fmt.Println(calcFib(n))\n}\n\n/*\n example\n    compile:\n        go build fib_go.go\n    run:\n        ./fib_go -n 39\n*/\n\n\n\njulia\nC\u3001C++\u3001Scheme \u3067\u5b9f\u88c5\u3055\u308c\u305f\u3061\u3087\u3063\u3068\u95a2\u6570\u578b\u8a00\u8a9e\u3002\nGoogle V8 \u3068\u540c\u7b49\u306e\u901f\u3055\u3002\nVM \u306e\u8d77\u52d5\u306e\u9045\u3055\u3092\u62b1\u3048\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6700\u8fd1\u306f\u304b\u306a\u308a\u6539\u5584\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u7814\u7a76\u8005\uff08\u306a\u3093\u306e\uff1f\uff09\u306e\u9593\u3067\u3058\u308f\u3058\u308f\u3068\u4eba\u6c17\u3092\u4e0a\u3052\u3066\u3044\u308b\u3089\u3057\u3044\u3067\u3059\u3002\n\nfib_julia.jl\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by julia\nfunction fib(n)\n    if n < 2\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend\n\nn = parse(Int32, ARGS[1])\nprintln(fib(n))\n\n#=\nexample\n    julia -O fibonacci.jl -- 39\n=#\n\n\n\nMaxima\nMathematica \u306b\u4f3c\u305f\u6570\u5f0f\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u4e2d\u3067\u306f\u552f\u4e00\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3067fib()\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u6e21\u3057\u65b9\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067eval\u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u3092\u6e21\u3059\u3068\u3044\u3046\u5371\u967a\u306a\u3084\u308a\u65b9\u3067\u59a5\u5354\u3002\n\nfib_maxima.m\n/* \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Maxima */\nfib(n) := if n < 2 then n else fib(n - 2) + fib(n - 1);\n\n/*\nexample\n    run:\n        maxima --very-quiet --init-mac fibonacci.mac --batch-string=\"fib(10);\"\n*/\n\n\n\uff1c\u3044\u3084\u3041\u3001\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3042\u308b\u3093\u3060\u304b\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u66f8\u304b\u306a\u304f\u3066\u3044\u3044\u3093\u3058\u3083\u306d\uff1f\u7248\uff1e\nmaxima --very-quiet --batch-string=\"fib(10);\"\n\n\u3053\u308c\u306a\u3089\u3001\u5f15\u6570\u304c100\u3067\u30821000\u3067\u3082\u4e00\u77ac\u3067\u7d50\u679c\u304c\u3067\u307e\u3059\u3002\n\nWolfram (Mathematica)\n\u6559\u80b2\u5411\u3051\u6570\u5f0f\u51e6\u7406\u754c\u3067\u306f\u6700\u5f37\u3068\u5642\u306eMathematica\u3002\n\u4e00\u822c\u5411\u3051\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u9ad8\u4fa1\u306a\u305f\u3081\u5b66\u6821\u306e\u6388\u696d\u4ee5\u5916\u3067\u306f\u3042\u307e\u308a\u4f7f\u308f\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\uff1c\u518d\u5e30\u95a2\u6570\u7248\uff1e\n\nfib_mathematica.m\n(* \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by wolfram *)\nfib[0] := 0\nfib[1] := 1\nfib[n_] := fib[n - 2] + fib[n - 1]\n\nn = ToExpression[$ScriptCommandLine[[2]]]\nPrint[fib[n]]\n\n(* Example *)\n(* Run: *)\n(*  WolframScript -script fibonacci.m 30 *)\n\n\n\uff1c\u30e1\u30e2\u5316\u95a2\u6570\u7248\uff1e\n\u518d\u5e30\u95a2\u6570\u3092\u3061\u3087\u3063\u3068\u3044\u3058\u3063\u305f\u3060\u3051\u3002\u3053\u3046\u3044\u3046\u3068\u3053\u308d\u304c\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u697d\u3057\u3044\u3068\u3053\u308d\u3002\n\nfib_mathematica.m\n(* \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by wolfram *)\nfib[0] := 0\nfib[1] := 1\nfib[n_] := fib[n] = fib[n - 2] + fib[n - 1]\n\nn = ToExpression[$ScriptCommandLine[[2]]]\nPrint[fib[n]]\n\n(* Example *)\n(* Run: *)\n(*  WolframScript -script fibonacci.m 30 *)\n\n\n\nNim\uff08\u65e7Nimrod\uff09\n\u65e5\u672c\u8a9e\u7248\u306eWikipedia\u304c\u7121\u3044\u3068\u3044\u3046\u73cd\u3057\u3044\u8a00\u8a9e\uff082016\u5e741\u6708\u73fe\u5728\uff09\n(2016\u5e748\u6708\u3001Wikipedia\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002\uff09\nC\u7d4c\u7531\u3067\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u5410\u304f\u3089\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u4f55\u6545\u304bC\u3088\u308a\u901f\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\u3044\u3064\u304b\u4f7f\u3044\u305f\u3044\u3002\u3044\u3064\u304b\u306d\u3002\n\nfib_nim.nim\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Nim\nimport os\nimport strutils\n\nproc fib(n: int): int =\n    if n < 2:\n        return n\n    else:\n        return fib(n - 2) + fib(n - 1)\n\nvar n = parseInt(paramStr(1))\necho(fib(n))\n\ndiscard \"\"\"\n    example\n        compile:\n            nim compile --opt:[none|speed|size] fib_nim.nim\n        run:\n            ./fib_nim 39\n\"\"\"\n\n\n\nOCaml\n\u6d77\u5916\u3067\u306f\u306a\u305c\u304b\u4eba\u6c17\u306e\u306a\u3044\u95a2\u6570\u578b\u8a00\u8a9e\u3002\n\u30b9\u30af\u30ea\u30d7\u30c8\u30e2\u30fc\u30c9\u3067\u3082\u305d\u3053\u305d\u3053\u901f\u3044\u3051\u3069\u3001ocamlopt \u3067\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u3081\u3063\u3055\u901f\u304f\u306a\u308b\u3002\nOcaml \u3092\u4f7f\u3063\u3066WEB\u30b5\u30a4\u30c8\u3092\u7acb\u3061\u4e0a\u3052\u308b\u306e\u304c\u5922\u3002\n\nfib_ocaml.ml\n(* \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by OCaml *)\nlet rec fib(n) =\n    if n < 2 then\n        n\n    else\n        fib(n - 2) + fib(n - 1)\n    ;;\n\nlet n = int_of_string Sys.argv.(1);;\nprint_int(fib n);;\n\n(* example\n    interpreter:\n        ocaml fib.ml\n    compile:\n        ocamlc -o fib_ocaml fib.ml\n    compile (native):\n        ocamlopt -o fib_ocamlopt fib.ml\n*)\n\n\n\nSmalltalk\n\u6b74\u53f2\u306f\u53e4\u304f\u4ed6\u306e\u8a00\u8a9e\u306e\u30e2\u30c7\u30eb\u3068\u3055\u308c\u306a\u304c\u3089\u3082\u3001\u30af\u30bb\u306e\u5f37\u3044\u6587\u6cd5\u304c\u500b\u6027\u7684\u306a\u305f\u3081\u666e\u53ca\u3057\u3066\u3044\u308b\u3068\u306f\u8a00\u3044\u304c\u305f\u3044\u3002\n\u5358\u306a\u308b\u8a00\u8a9e\u3060\u3051\u3067\u306f\u306a\u304f\u300cSmalltalk\u74b0\u5883\u300d\u3068\u3057\u3066\u306e\u5b9f\u88c5\u3055\u308c\u3066\u304d\u305f\u305f\u3081\u3001\u4e00\u822c\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u3088\u3046\u306a\u666e\u53ca\u306e\u4ed5\u65b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u305d\u306e\u300c\u74b0\u5883\u300d\u3092\u5b8c\u5168\u306b\u7121\u8996\u3057\u305fGNU Smalltalk \u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nfib_gst.st\n\"\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Smallalk\"\nInteger extend [\n    fib [\n        self < 2\n        ifTrue: [ ^self ]\n        ifFalse: [ ^(self - 2) fib + (self - 1) fib ].\n    ]\n]\n\nSmalltalk arguments first asInteger fib printNl.\n\n\"example\n    run:\n        gst fibonacci.st -a 39\n\"\n\n\n\nForth\n\u30b9\u30bf\u30c3\u30af\u578b\u8a00\u8a9e\u3002\u5f8c\u7f6e\u8a18\u6cd5\u306b\u306a\u308b\u305f\u3081\u3001\u3071\u3063\u3068\u898b\u4f55\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u512a\u3057\u3044\u8a00\u8a9e\u3002\n\u3053\u308c\u304c\u66f8\u3051\u305f\u3089\u307f\u3093\u306a\u304b\u3089\u300c\u5909\u614b\u300d\u306e\u79f0\u53f7\u304c\u3082\u3089\u3048\u308b\u3042\u308a\u304c\u305f\u3044\u8a00\u8a9e\u3002\n\nfib_forth.fs\n\\ \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by forth\n\n: fib ( n )\n    dup 2 u< if exit then\n    1- dup recurse swap 1- recurse + ;\n\nfib . cr\nbye\n\n(\n    example\n        run:\n            gforth -e 39 fibonacci.fs\n            gforth-fast -e 39 fibonacci.fs\n)\n\n\n\nMind\n\u30b9\u30bf\u30c3\u30af\u578b\u8a00\u8a9e\u306e\u7279\u5fb4\u3092\u3046\u307e\u304f\uff08\uff1f\uff09\u5229\u7528\u3057\u305f\u65e5\u672c\u8a9e\u306b\u3088\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3002\n\u300c\u3074\u3085\u3046\u592a\u65e5\u672c\u8a9eBASIC\u300d\u4ee5\u6765\u306e\u885d\u6483\u3092\u53d7\u3051\u305f\u8a00\u8a9e\u3002\n\u3057\u3070\u3089\u304f\u958b\u767a\u304c\u6b62\u307e\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6700\u8fd1Android\u3067\u52d5\u304b\u3059\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308b\u3089\u3057\u3044\u3067\u3059\u3002\n\nfib_mind.src\n\uff08\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1 by Mind\uff09\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3068\u306f\u3000\uff08\u6570\u5024\u3000\u2192\u3000\u6570\u5024\uff09\n    \u50241\u306f\u3000\u5909\u6570\n    \u50241\u306b\u3000\u5165\u308c\n    \u50241\u304c\u30001\u3000\u4ee5\u4e0b\u3000\u306a\u3089\u3070\n        \u50241\u3092\u3000\u8fd4\u3059\n    \u3055\u3082\u306a\u3051\u308c\u3070\n        \u50241\u304b\u3089\u30002\u3092\u3000\u5f15\u304d\u3000\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3057\n        \u50241\u304b\u3089\u30001\u3092\u3000\u5f15\u304d\u3000\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3057\n        \u8db3\u3057\u3066\u3000\u8fd4\u3059\n    \u3064\u304e\u306b\n    \u3002\n\n\u30e1\u30a4\u30f3\u3068\u306f\n    \u8d77\u52d5\u5f15\u6570\uff08\uff11\uff09\u3092\u3000\u6570\u5024\u5909\u63db\u3057\u3066\u3000\u771f\uff1f\u3000\u306a\u3089\u3070\n        \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3057\u3066\n        \u6570\u5024\u8868\u793a\n    \u3064\u304e\u306b\n    \u3002\n\n\u203bexample\n\u203b   compile:\n\u203b      mind fib_mind.src file\n\u203b   run:\n\u203b       ./fib_mind 39\n\n\n\nAPL\n\u30cd\u30bf\u8a00\u8a9e\uff08Brainf**k\u7b49\uff09\u3092\u9664\u304d\u3001\u5909\u614b\u5ea6\u3067\u306f\u4ed6\u306e\u8ffd\u968f\u3092\u8a31\u3055\u306a\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\uff08\uff1f\uff09\u8a00\u8a9e\u3002\n\u7279\u6b8a\u306a\u8a18\u53f7\u3092\u591a\u7528\u3059\u308b\u305f\u3081\u5165\u529b\u3059\u308b\u3053\u3068\u3055\u3048\u56f0\u96e3\u3002\nAPL\u3067\u4f7f\u7528\u3059\u308b\u8a18\u53f7\u306fUTF-8\u306b\u767b\u9332\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u4f3c\u305f\u8a18\u53f7\u304c\u591a\u304f\u5165\u529b\u306e\u96e3\u3057\u3055\u306f\u6539\u5584\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u307e\u305f\u8868\u793a\u3055\u308c\u3066\u3044\u3066\u3082\u305d\u308c\u304c\u6587\u5b57\u5316\u3051\u306a\u306e\u304b\u6b63\u3057\u3044\u3082\u306e\u306a\u306e\u304b\u306fAPL\u3092\u30de\u30b9\u30bf\u30fc\u3057\u306a\u3044\u3068\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\u7d50\u5c40\u306f\u30ad\u30fc\u30dc\u30fc\u30c9\u3067\u5165\u529b\u53ef\u80fd\u306aJ\u8a00\u8a9e\u304c\u958b\u767a\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u5909\u614b\u9053\u3092\u7a81\u304d\u9032\u3093\u3067APL\u3092\u30de\u30b9\u30bf\u30fc\u3057\u3066\u6b32\u3057\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nGNU APL\n\uff1c\u518d\u5e30\u95a2\u6570\u7248\uff1e\n\nfib_apl.apl\n#!/usr/bin/apl --script\n\u2207R\u2190fib N\n  \u2192L+(N>1)\n  L:R\u2190N \u22c4 \u21920\n  R\u2190(fib (N - 2)) + fib (N - 1)\n\u2207\n\nfib \u234e\u2355\u00af1\u2191\u2395ARG\n\n)OFF\n\n\u235d example\n\u235d   run:\n\u235d       ./fibonacci.apl -- 20\n\n\n\uff1c\u884c\u5217\u306b\u3088\u308b\u6f38\u5316\u5f0f\u7248\uff1e\n\u6697\u53f7\u5316\u5ea6\u3055\u3089\u306bUP\n\nfib_apl.apl\n#!/usr/bin/apl --script\n\u2207R\u2190fib N\n  R\u2190\u21910 1\u2193\u2191+.\u00d7/N/\u22822 2\u23741 1 1 0\n\u2207\n\nfib \u234e\u2355\u00af1\u2191\u2395ARG\n\n)OFF\n\n\u235d example\n\u235d   run:\n\u235d       ./fibonacci.apl -- 20\n\n\n\nDyalog\u30fbNASR2000\nfib\u2190{\u2375\u22642:1 \u22c4 (\u2207\u2375-1)+\u2207\u2375-2}\n\u3067\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\nPike\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30af\u30bb\u306b\u9759\u7684\u578b\u4ed8\u3051\u306a\u8a00\u8a9e\u3067\u3059\u3002C\u3063\u307d\u3044\u3067\u3059\u3002\n\u305d\u306e\u304a\u304b\u3052\u306a\u306e\u304b\u305d\u3053\u305d\u3053\u901f\u3044\u3067\u3059\u3002\n\u4ee5\u524d\u304b\u3089Ruby\u3068\u540c\u3058\u3050\u3089\u3044\u306e\u901f\u5ea6\u3092\u7dad\u6301\u3057\u3066\u304a\u308a\u3001\u3080\u3057\u308dRuby\u304c\u6307\u6a19\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u306f\u3068\u601d\u308f\u305b\u308b\u307b\u3069\u3002\n\nfibonacci.pk\n// fibonacci by Pike\nint fib(int n)\n{\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n-2)+fib(n-1);\n    }\n}\nint main(int argc, array(string)argv)\n{\n    int n;\n    n = (int)argv[1];\n    write(\"%d\", fib(n));\n    return 0;\n}\n\n/*\n    example\n        run:\n            pike fibonacci.pk 39\n*/\n\n\n\nIcon\n\u30b4\u30fc\u30eb\u6307\u5411\u8a55\u4fa1\u3068\u3044\u3046\u300c\u6210\u529f\u300d\u304b\u300c\u5931\u6557\u300d\u306b\u3088\u308b\u5236\u5fa1\u69cb\u9020\u3092\u7279\u5fb4\u3068\u3059\u308b\u8a00\u8a9e\u3002\n\u771f\u507d\u5024\u306b\u3088\u308b\u8a55\u4fa1\u3068\u3069\u3046\u9055\u3046\u306e\u304b\u3068\u805e\u304b\u308c\u308b\u3068\u3061\u3083\u3093\u3068\u7b54\u3048\u3089\u308c\u307e\u305b\u3093\u304c\u3001\n\u300cif a < b < c\u300d\u3068\u304b\u6c17\u6301\u3061\u60aa\u3044if\u6587\u304c\u66f8\u3051\u307e\u3059\u3002\n\u4ed6\u306b\u3082\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u304c\u5f37\u529b\u3060\u3063\u305f\u308a\u3001\u30ea\u30b9\u30c8\u3084\u9023\u60f3\u914d\u5217\u3001\u96c6\u5408\u3001\u30ec\u30b3\u30fc\u30c9\u578b\u306a\u3069\u30c7\u30fc\u30bf\u69cb\u9020\u3082\u8c4a\u5bcc\u3002\n\u624b\u7d9a\u304d\u305d\u306e\u3082\u306e\u3092\u5909\u6570\u306b\u3076\u3061\u3053\u3081\u308b\u300c\u30b3\u30fb\u30a8\u30af\u30b9\u30d7\u30ec\u30c3\u30b7\u30e7\u30f3\u300d\u3068\u3044\u3046\u95a2\u6570\u578b\u8a00\u8a9e\u3063\u307d\u3044\u3053\u3068\u3082\u3067\u304d\u308b\u305d\u3046\u306a\u306e\u3067\u3059\u304c\u3001\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u305d\u3082\u305d\u3082\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u305d\u308c\u3089\u306e\u7279\u5fb4\u3092\u307e\u3063\u305f\u304f\u6d3b\u304b\u305b\u3066\u307e\u305b\u3093\u3002\n\u9762\u767d\u305d\u3046\u306a\u8a00\u8a9e\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3002\nicont\u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u306b\u3067\u304d\u307e\u3059\u304c\u3001\u901f\u5ea6\u306f\u307e\u3063\u305f\u304f\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\u306a\u304a\u3001Wikipedia\u306a\u3069\u306e\u30ea\u30f3\u30af\u304c\u53e4\u304f\u306a\u3063\u3066\u3044\u308b\u6a21\u69d8\u3002\nhttp://www2.cs.arizona.edu/icon/\n\u2191\u304c\u751f\u304d\u3066\u3044\u307e\u3059\u3002\n\u30a2\u30ea\u30be\u30ca\u5927\u5b66\u306e\u30b5\u30a4\u30c8\u3067\u300cPast Research Projects\u300d\u306b\u5165\u3063\u3061\u3083\u3063\u3066\u307e\u3059\u304c\u3001\u4f55\u304b\u3042\u3063\u305f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u30b5\u30a4\u30c8\u306e\u66f4\u65b0\u306f2016\u5e74\u73fe\u5728\u3082\u7d9a\u3044\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\nfibonacci.icn\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\nprocedure fibonacci(n)\n    if n < 2 then\n        return n\n    else\n        return fibonacci(n - 2) + fibonacci(n - 1)\nend\n\nprocedure main(args)\n    local n\n    n := args[1]\n    write(fibonacci(n))\nend\n\n# example\n#    interpreter:\n#        icon fibonacci.icn 39\n#    translator:\n#        icont fibonacci.icn\n#        ./fibonacci 39\n\n\nQiita\u306e\u30b3\u30fc\u30c9\u30cf\u30a4\u30e9\u30a4\u30c8\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\nOccam\n\u82f1\u8a9e\u3082\u65e5\u672c\u8a9e\u3082\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u5c11\u306a\u3044\u4e0a\u306b\u3001\u3081\u3061\u3083\u304f\u3061\u3083\u691c\u7d22\u3057\u3065\u3089\u3044\u3067\u3059\u3002\n\u305f\u3076\u3093\u300c\u7d42\u308f\u3063\u305f\u8a00\u8a9e\u300d\u3067\u3059\u3002\n1980\u5e74\u4ee3\u306b\u6b21\u4e16\u4ee3\u306e\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u3057\u3066\u4e26\u884c\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306b\u7279\u5316\u3057\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3042\u308b\u300c\u30c8\u30e9\u30f3\u30b9\u30d4\u30e5\u30fc\u30bf\u300d\u306e\u305f\u3081\u306b\u958b\u767a\u3055\u308c\u305f\u300cCSP\u300d\u3092\u3088\u308a\u5b9f\u7528\u7684\u306b\u62e1\u5f35\u3057\u305f\u8a00\u8a9e\u3067\u3059\u3002\n\u305d\u3046\u3044\u3063\u305f\u51fa\u81ea\u3086\u3048\u4e26\u5217\u51e6\u7406\u304c\u5f97\u610f\u3067\u3001\u300cPAR\u300d\u3068\u304b\u300cSEQ\u300d\u3068\u304b\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u7a4d\u6975\u7684\u306b\u4e26\u5217\u51e6\u7406\u3068\u9010\u6b21\u51e6\u7406\u3092\u6307\u5b9a\u3067\u304d\u305f\u308a\u3059\u308b\u3068\u3053\u308d\u3082\u9762\u767d\u3044\u3067\u3059\u3002\n\u4e26\u5217\u51e6\u7406\u3068\u30d7\u30ed\u30bb\u30b9\u9593\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u4ee5\u5916\u306f\u3001\u666e\u901a\u306b\u624b\u7d9a\u304d\u578b\u306e\u8a00\u8a9e\u3067\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u304c\u5927\u6587\u5b57\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u6642\u4ee3\u3092\u611f\u3058\u3055\u305b\u307e\u3059\u3002\n\u30d6\u30ed\u30c3\u30af\u306fPython\u540c\u69d8\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u5f62\u5f0f\u3067\u3059\u304c\u3001\u304d\u3063\u3061\u308a2\u6587\u5b57\u305a\u3064\u3058\u3083\u306a\u3044\u3068\u6012\u3089\u308c\u307e\u3059\u3002\n\u4e26\u5217\u51e6\u7406\u5411\u3051\u306e\u8a00\u8a9e\u3068\u3057\u3066\u5c06\u6765\u518d\u3073\u6ce8\u76ee\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3057\u3001\u3055\u308c\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nKRoc (Occam-\u03c0)\n\u30b1\u30f3\u30c8\u5927\u5b66\u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u305fOccam\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3002\n\u958b\u767a\u306f\u7d42\u308f\u3063\u3066\u308b\u3063\u307d\u3044\u3067\u3059\u304c\u3001\u305f\u307e\u306bgit\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3084\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u306bPython\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001Python3\u3067\u52d5\u304d\u307e\u305b\u3093\u3002\n\u3044\u3089\u3063\u3068\u3057\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u308b\u306e\u306b\u632b\u6298\u3057\u307e\u3057\u305f\u3002\n\nfibonacci.occ\n-- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Occam\n#INCLUDE \"course.module\"\n\nINT REC FUNCTION fib (VAL INT n)\n  INT res:\n  VALOF\n    IF\n      n < 2\n        res := n\n      TRUE\n        res := fib (n - 2) + fib (n - 1)\n    RESULT res\n:\n\nPROC fibonacci (CHAN BYTE out)\n  out.int (fib(39), 0, out)\n:\n\n-- example\n--  compile:\n--   occbuild --program fibonacci.occ\n--   or\n--   kroc fibonacci.occ\n--  run\n--   ./fibonacci 39\n\n\n\nChapel\n\u30a2\u30e1\u30ea\u30ab\u56fd\u9632\u9ad8\u7b49\u7814\u7a76\u8a08\u753b\u5c40\u306e\u9ad8\u751f\u7523\u6027\u8a08\u7b97\u6a5f\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\n\u30b9\u30fc\u30d1\u30fc\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306eCRAY\u3067\u3059\u3002\n\u3082\u3046\u30b3\u30ec\u3060\u3051\u3067\u5f37\u3046\u305d\u3046\u3067\u3057\u3087\uff1f\n\u300cChapel\u300d\u306f\u300cCascade High Productivity Language\u300d\u306e\u7565\u3067\u3001\u65e5\u672c\u8a9e\u306b\u3059\u308b\u3068\n\u300c\u591a\u6bb5\u9ad8\u751f\u7523\u6027\u8a00\u8a9e\u300d\u3060\u305d\u3046\u3067\u3059\u3002\n\u53a8\u4e8c\u30b4\u30b3\u30ed\u306b\u3069\u30b9\u30c8\u30e9\u30a4\u30af\u3067\u3059\u3002\n\u4e26\u5217\u8a08\u7b97\u6a5f\u300cCascade\u300d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u52b9\u7387\u3092\u6539\u5584\u3059\u308b\u305f\u3081\u306b\u4f5c\u3089\u308c\u305f\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002\n\u306a\u306e\u3067\u524d\u8ff0\u306eOccam\u540c\u69d8\u3001\u4e26\u5217\u8a08\u7b97\u5411\u304d\u306e\u8a00\u8a9e\u3067\u3059\u3002\n\u3082\u3061\u308d\u3093\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3064\u3044\u3066\u306f\u305d\u3053\u3093\u3068\u3053\u307e\u3063\u305f\u304f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u52b9\u7387\u3092\u4e0a\u3052\u308b\u305f\u3081\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3084\u73fe\u4ee3\u7684\u3067\u898b\u6163\u308c\u305f\u6587\u6cd5\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u786c\u6d3e\u306a\u5272\u306b\u306f\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u81ea\u4f53\u306f2010\u5e74\u306b\u7d42\u4e86\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u73fe\u5728\u3082\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u958b\u767a\u306f\u7d76\u8cdb\u7d99\u7d9a\u4e2d\u3067\u3001CRAY\u793e\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3082\u3063\u3068\u6ce8\u76ee\u3055\u308c\u3066\u3082\u3044\u3044\u8a00\u8a9e\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u2026\u3002\n\u3057\u304b\u3057\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u30683.1MB\u3042\u308a\u307e\u3059\u3002\n\nfibonacci.chpl\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Chapel\nproc fib(n: int): int {\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n - 2) + fib(n - 1);\n    }\n}\n\nproc main(args: [] string) {\n    var n: int = args[1]:int;\n    writeln(fib(n));\n}\n\n/*\n    example\n        compile:\n            chpl -o fibonacci fibonacci.chpl\n        run:\n            ./fibonacci 39\n*/\n\n\n\nOz (Mozart)\nOz\u306f\u30de\u30eb\u30c1\u30d1\u30e9\u30c0\u30a4\u30e0\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u900f\u904e\u306a\u5206\u6563\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u3067\u304d\u308b\u3089\u3057\u3044\u3002\u3088\u304f\u308f\u304b\u3089\u3093\u3002\n\u6bd4\u8f03\u7684\u65b0\u3057\u3044\uff08\u6700\u521d\u306e\u8a2d\u8a08\u304c1991\u5e74\uff09\u8a00\u8a9e\u306a\u306e\u3067\u3001\u5b9f\u7528\u4e91\u3005\u3088\u308a\u306f\u3001\u4eca\u5f8c\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u53ef\u80fd\u6027\u306e\u4e00\u3064\u3068\u3057\u3066\u898b\u308b\u5206\u306b\u306f\u9762\u767d\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3002\n\u305f\u3060\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u5c11\u306a\u304f\u3001\u3084\u3063\u3068\u305f\u3069\u308a\u7740\u3044\u3066\u3082\u307b\u3068\u3093\u3069\u304cemacs\u306e\u8aac\u660e\u3060\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\nMozart2\nOz\u306e\u9ad8\u54c1\u4f4d\u306a\u5b9f\u88c5\u304cMozart\u3002Mozart2\u304c\u51fa\u3066\u3044\u308b\u304c\u3001\u307e\u3060Alpha\u7248\u3002\u3068\u306f\u3044\u3046\u3082\u306e\u306e\u305d\u3053\u305d\u3053\u52d5\u304f\u3088\u3046\u3067\u3059\u3002\nVer.1 \u306fLLVM\u3092\u4f7f\u3063\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u304c\u3001Ver.2\u306f\u3069\u3046\u306a\u3093\u3067\u3057\u3087\u3046\uff1f\u308f\u304b\u3093\u306a\u3044\u3002\nVer.2 alpha \u3067\u306f\u3001ozc -x \u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3082\u5358\u72ec\u3067\u5b9f\u884c\u3067\u304d\u308b\u5f62\u306b\u306f\u306a\u3089\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u300c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u300d\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\uff08\u3067\u3082\u30a8\u30b0\u30bc\u30ad\u30e5\u30fc\u30c8\u30d3\u30c3\u30c8\u306f\u7acb\u3063\u3066\u308b\uff09\nozc -c \u3068 ozc -x \u3067functor \u306e\u66f8\u304d\u65b9\u304c\u5fae\u5999\u306b\u9055\u3046\u306e\u306f\u79c1\u304c\u308f\u304b\u3063\u3066\u306a\u3044\u305b\u3044\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\nfibonacci.oz\n% \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570  by Mozart2(Oz)\nfunctor\n\nimport\n    System\n    Application\n\nprepare\n  fun {Fib N}\n    if N < 2 then\n      N\n    else\n      {Fib N - 2} + {Fib N - 1}\n    end\n  end\n\ndefine\n  N in\n    [N] = {Application.getArgs plain}\n    {System.showInfo {Fib {String.toInt N}}}\n    {Application.exit 0}\nend\n\n/*\n    example\n        compile:\n            ozc -c fibonacci.oz\n        run:\n            ozengine fibonacci.ozf 39\n*/\n\n\nfun {Fib N] \u3092 fun lazy {Fib N} \u306b\u66f8\u304d\u63db\u3048\u308b\u3068\u9045\u5ef6\u8a55\u4fa1\u306e\u95a2\u6570\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3060\u3068\u9045\u304f\u306a\u3063\u3061\u3083\u3044\u307e\u3057\u305f\u3002\n\nTcl\nTcl \u306f\u3059\u3063\u3054\u3044\u6709\u80fd\u306a\u30b7\u30a7\u30eb\u3067\u3059\u3002\n\u307e\u305a\u3001\u8a08\u7b97\u3055\u305b\u3088\u3046\u3068\u304b\u601d\u3063\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\nTk\u3068\u5408\u308f\u305b\u308c\u3070\u3055\u304f\u3063\u3068GUI\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4f5c\u308c\u307e\u3059\u3002\n\u3057\u304b\u3082Linux \u3068 Windows \u3068\u3067\u307b\u307c\u540c\u3058\u30bd\u30fc\u30b9\u3067\u3002\n\u3067\u3082\u3001\u8a08\u7b97\u3055\u305b\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u30d6\u30ed\u30c3\u30af\u306e\u66f8\u304d\u65b9\u304c\u5f37\u70c8\u3067\u3059\u3002\uff08\u516c\u5f0f\u306a\u66f8\u304d\u65b9\u306e\u4e00\u3064\uff09\n\u300ctcl::mathfunc::\u300d\u3092\u3064\u3051\u306a\u3044\u3068\u518d\u5e30\u547c\u3073\u51fa\u3057\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n10\u5206\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\n\nfibonacci.tcl\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Tcl\nproc tcl::mathfunc::fib {n} {\n    if {$n < 2} {\n        return $n\n    } else {\n        return [expr fib([expr {$n - 1}]) + fib([expr {$n - 2}])]\n    }\n}\n\nset n [lindex $argv 0]\nputs [expr fib($n)]\n\nif 0 {\n    example\n        run:\n            tclsh fibonacci.tcl 10\n}\n\n\n\n\u304a\u307e\u3051\n\ndc\n\u3053\u308c\u307e\u305f\u691c\u7d22\u3057\u306b\u304f\u3044\u8a00\u8a9e\uff1f\u3067\u3059\u304c\u3001Linux\u3067\u307b\u307c\u6a19\u6e96\u3067\u3064\u3044\u3066\u304f\u308bRPN\uff08\u9006\u30dd\u30fc\u30e9\u30f3\u30c9\u8a18\u6cd5\uff09\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u8a08\u7b97\u6a5f\u3067\u3059\u3002\u518d\u5e30\u53ef\u80fd\u306a\u30de\u30af\u30ed\u3082\u66f8\u3051\u307e\u3059\u3002\n\u30ec\u30b8\u30b9\u30bf\u306e\u30bb\u30fc\u30d6\u3068\u30ed\u30fc\u30c9\u304c\u524d\u7f6e\u8a18\u6cd5\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u6c17\u306b\u5165\u308a\u307e\u305b\u3093\u304c\u2026\u3002\ndc\u3092\u4f7f\u3063\u305f\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u307e\u3060\u898b\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u9650\u308a\u306a\u304f\u30cd\u30bf\u8a00\u8a9e\u3067\u3059\u3057\u3001\u307e\u3041\u3001\u3084\u308b\u3084\u3064\u306f\u3044\u306a\u3044\u3067\u3057\u3087\u3046\u3051\u3069\u3002\n\u9045\u3044\u3067\u3059\u3002\n\nfibonacci.dc\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by dc\nsa\n[2Q] s.\n[d 2 >. 1 - d lfx r 1 - lfx +] sf\nla lfx p\n\n# example\n#    run:\n#        dc -e 30 fibonacci.dc\n\n\n\n\u5b9f\u884c\u901f\u5ea6\u6bd4\u8f03\n\u30b7\u30b9\u30c6\u30e0\u69cb\u6210\nCPU\uff1aIntel(R) Core(TM) i7-3930K CPU @ 3.20GHz\n\u30e1\u30e2\u30ea\uff1a32GB\uff08\u901f\u5ea6\u3068\u304b\u5fd8\u308c\u307e\u3057\u305f\uff09\nOS\uff1aArch Linux Kernel-4.4.1 SMP x86_64\n\u982d\u306e\u60aa\u3044\u518d\u5e30\u95a2\u6570\u306739\u756a\u76ee\u306e\u5024\u300c63,245,986\u300d\u3092\u6c42\u3081\u308b\u6642\u9593\u3067\u3059\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u9069\u5f53\u306b\u4f55\u7a2e\u985e\u304b\u8a66\u3057\u3066\u901f\u304b\u3063\u305f\u3082\u306e\u3092\u63a1\u7528\u3057\u307e\u3057\u305f\u3002\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u30b3\u30b9\u30c8\u3050\u3089\u3044\u3057\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3002\n\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3060\u3068\u5927\u4f53\u77ac\u6bba\u306a\u306e\u3067\u9762\u767d\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n\n\u9806\u4f4d\n\u8a00\u8a9e\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\u5b9f\u884c\u6642\u9593\n\n\n\n\n1\nFortran (gfortran -O3)\n5.3.0\n0.146 sec\n\n\n2\nD (gdc -O3)\n5.3.0\n0.179 sec\n\n\n3\nNim (-d:release)\n0.12.0\n0.184 sec\n\n\n3\nBasic (fbc -O3)\n1.04\n0.184 sec\n\n\n5\nAda (gnat -O3)\n5.3.0\n0.194 sec\n\n\n6\nC++ (g++ -O3)\n5.3.0\n0.252 sec\n\n\n7\nC (gcc -O3)\n5.3.0\n0.255 sec\n\n\n8\nOCaml (ocamlopt)\n4.02.3\n0.302 sec\n\n\n9\nJava (Open JDK)\n1.8.0\n0.303 sec\n\n\n10\nC (clang -O)\n3.7.0\n0.357 sec\n\n\n11\nRust (rustc -C opt-level=3)\n1.5.0\n0.358 sec\n\n\n12\nSwift (swiftc -O)\n2.2-dev\n0.361 sec\n\n\n13\nGo\n1.5.2\n0.388 sec\n\n\n14\nCrystal (--release)\n0.10.1\n0.395 sec\n\n\n15\nPascal (fpc -O4)\n3.0.0\n0.405 sec\n\n\n16\nDart\n1.16.0\n0.436 sec\n\n\n17\nC# (mono -optimize+)\n2.2.2.0\n0.442 sec\n\n\n18\nBasic (mono /optimize+)\n0.0.0.5943\n0.485 sec\n\n\n19\nScala\n2.11.8\n0.490 sec\n\n\n20\nD (dmd -O -inline)\nDMD64 v2.069\n0.513 sec\n\n\n21\nJavaScript (SpiderMonkey)\n38.1\n0.537 sec\n\n\n22\nHaskell (ghc -O2)\n7.10.3\n0.570 sec\n\n\n23\njulia (-O)\n0.4.5\n0.711 sec\n\n\n24\nJavaScript (V8)\n4.9.170\n0.845 sec\n\n\n25\nLua (luajit)\n2.0.4\n0.897 sec\n\n\n26\nChapel\n1.13.1\n0.959 sec\n\n\n27\nPHP (hhvm)\n3.13.1\n1.021 sec\n\n\n28\nGroovy\n2.4.5\n1.287 sec\n\n\n29\nLisp (sbcl)\n1.3.0\n1.551 sec\n\n\n30\nOCaml (script)\n4.02.3\n3.389 sec\n\n\n31\nErlang (erlc)\n19.0.3\n4.346 sec\n\n\n32\nForth (gforth-fast)\n0.7.3\n4.792 sec\n\n\n33\nPike\n8.0.182\n7.205 sec\n\n\n34\nMind\n7.20\n7.325 sec\n\n\n35\nPHP\n7.0.1\n7.735 sec\n\n\n36\nSmalltalk (gst)\n3.2.5\n8.098 sec\n\n\n37\nProlog (gplc)\n1.4.4\n8.305 sec\n\n\n38\nRuby\n2.3.0p0\n8.417 sec\n\n\n39\nLua\n5.3.2\n10.147 sec\n\n\n40\nOccam (KRoC)\n1.6.0\n11.510 sec\n\n\n41\nPython\n2.7.11\n20.680 sec\n\n\n42\nPython\n3.5.1\n23.375 sec\n\n\n43\nIcon\n9.5.1\n28.256 sec\n\n\n44\nOz(Mozart)\n2.0.0 aplha\n36.134 sec\n\n\n45\nPerl\n5.22.1\n56.042 sec\n\n\n\n\u3053\u306e\u8fba\u307e\u3067\u306739\u756a\u76ee\u306e\u5024\u3092\u6c42\u3081\u308b\u306e\u306f\u632b\u6298\u3057\u307e\u3057\u305f\u3002\n\u3053\u3053\u4ee5\u4e0b\u306f\u4e88\u9078\u843d\u3061\u3067\u3059\u3002\n30\u756a\u76ee\u306e\u5024\u300c832,040\u300d\u3092\u6c42\u3081\u305f\u7d50\u679c\u3067\u3059\u3002\n\u6bd4\u8f03\u306e\u305f\u3081Perl\u3067\u306e\u5b9f\u884c\u6642\u9593\u3082\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n\n\n\u9806\u4f4d\n\u8a00\u8a9e\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\u5b9f\u884c\u6642\u9593\n\n\n\n\n45\nPerl\n5.22.1\n0.843 sec\n\n\n46\nR\n3.2.3\n2.022 sec\n\n\n47\nWolfram (Mathematica)\n10.3\n2.148 sec\n\n\n48\ndc\n1.3.95\n2.768 sec\n\n\n49\nTcl\n8.6.6\n3.262 sec\n\n\n50\nAPL (GNU APL)\n1.5\n6.482 sec\n\n\n51\nMaxima\n5.37.2\n10.366 sec\n\n\n52\nPerl6 (Rakudo)\n2015.12\n10.672 sec\n\n\n53\nSnap! (FireFox 45.0a2)\n4.0.4\n21.1 sec\n\n\n54\nOctave (octave-cli)\n4.0.0\n35.544 sec\n\n\n\n\u6570\u5024\u51e6\u7406\u3001\u6570\u5f0f\u51e6\u7406\u306e\u8a00\u8a9e\u304c\u4f4e\u3044\u9806\u4f4d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3082\u305d\u3082\u3053\u306e\u8fba\u306e\u8a00\u8a9e\u306f\u3001\u30a2\u30db\u307f\u305f\u3044\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u901f\u5ea6\u3092\u6c42\u3081\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u305d\u308c\u3092\u88dc\u3063\u3066\u3042\u307e\u308a\u3042\u308b\u9ad8\u5ea6\u306a\u30b0\u30e9\u30d5\u6a5f\u80fd\u7b49\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3042\u3068\u304c\u304d\n\u6c17\u304c\u5411\u3044\u305f\u3089\u3001\u30e1\u30e2\u5316\u3059\u308b\u66f8\u304d\u65b9\u3001\u9ec4\u91d1\u6bd4\u304b\u3089\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u3001\u884c\u5217\u304b\u3089\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u3082\u66f8\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u5404\u8a00\u8a9e\u306e\u7279\u5fb4\u3092\u6d3b\u304b\u3057\u305f\u66f8\u304d\u65b9\u3082\u305d\u306e\u3046\u3061\u2026\u3002\n#\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3060\u3051\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306b\u7cbe\u901a\u3057\u305f\u3064\u3082\u308a\u306b\u306a\u308b\n##\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u57fa\u672c\u3092\u304a\u3055\u3048\u308b\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5404\u8a00\u8a9e\u306e\u57fa\u672c\u4ed5\u69d8\u3092\u30de\u30b9\u30bf\u30fc\u3057\u305f\u3064\u3082\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n**Hello World!**\u306e\u6b21\u306b\u3084\u3063\u3066\u307f\u308c\u3070\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\n\n- \u5909\u6570\u306e\u5ba3\u8a00\u3068\u304b\u4ee3\u5165\uff08\u675f\u7e1b\uff09\u3068\u304b\u30b9\u30b3\u30fc\u30d7\u3068\u304b\n- \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u53d6\u5f97\n- \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u306e\u5909\u63db\n- \u95a2\u6570\u5b9a\u7fa9\u3068\u547c\u3073\u51fa\u3057\n- \u518d\u5e30\u95a2\u6570\u306e\u5229\u7528\n- \u6761\u4ef6\u5206\u5c90\n- \u6587\u5b57\u5217\uff08\u6570\u5024\uff09\u306e\u8868\u793a\n- \u30b3\u30e1\u30f3\u30c8\u6587\u306e\u66f8\u304d\u65b9\n- [\u5927\u307e\u304b\u306a\u5b9f\u884c\u901f\u5ea6](#\u5b9f\u884c\u901f\u5ea6\u6bd4\u8f03)\n\n\u4e0a\u8a18\u3092\u4e00\u6c17\u306b\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3042\u3089\u4fbf\u5229\u3002\n\n[progopedia](http://progopedia.com/example/fibonacci/) \u3084\u4f3c\u305f\u3088\u3046\u306a\u8a18\u4e8b\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3059\u3079\u3066\u304c\u540c\u3058\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u52d5\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u5b8c\u7d50\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u5c11\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n##\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3068\u306f\n\u3081\u3093\u3069\u304f\u3055\u3044\u306e\u3067\u8a73\u3057\u3044\u3053\u3068\u306fWikipedia\u3067\u8abf\u3079\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u3067\u306f\u7c21\u5358\u306b\u66f8\u304d\u307e\u3059\u3002\n\u5b9a\u7fa9\u306f\u3001\n![41.png](https://qiita-image-store.s3.amazonaws.com/0/39434/ed6e5d43-f317-a7af-38cd-65ce29425200.png)\n\n\u4e00\u822c\u9805\u306e\u8fd1\u4f3c\u5f0f\u306f\u3001\n![45.png](https://qiita-image-store.s3.amazonaws.com/0/39434/f8112d0d-8d8b-a2ec-318d-02e167daf018.png)\n![70.png](https://qiita-image-store.s3.amazonaws.com/0/39434/601e821e-6d5b-c00c-8936-e7060c7c2bcc.png)\n\n\n\u6f38\u5316\u5f0f\u306e\u884c\u5217\u8868\u73fe\u306f\u3001\n![44.png](https://qiita-image-store.s3.amazonaws.com/0/39434/59df27a1-76fb-309b-bc36-5053214c060a.png)\n\n\u4eca\u56de\u306f\u982d\u306e\u60aa\u3044\u518d\u5e30\u95a2\u6570\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u901a\u308a\u306b39\u756a\u76ee\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u300c63,245,986\u300d\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n#\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n##\u66f8\u304d\u65b9\u306b\u3064\u3044\u3066\n\u5404\u8a00\u8a9e\u3001\u3082\u3063\u3068\u3044\u3044\u66f8\u304d\u65b9\u306f\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u306a\u308b\u3079\u304f\u65b9\u8a00\u304c\u51fa\u306a\u3044\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u305d\u306e\u8a00\u8a9e\u306e\u6a19\u6e96\u7684\u306a\u66f8\u304d\u65b9\u306b\u306a\u3063\u3066\u3044\u306a\u304f\u3066\u3001\u305d\u306e\u8a00\u8a9e\u306e\u7279\u5fb4\u3092\u77e5\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u5bfe\u3057\u3066\u306f\u672c\u672b\u8ee2\u5012\u306a\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u304b\u3089\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6700\u9069\u5316\u3055\u308c\u3066\u56fa\u5b9a\u5024\u3092\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306f\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n##\u30b5\u30f3\u30d7\u30eb\u306e\u9806\u5e8f\n\u5927\u4f53[TIOBE\u306e2016\u5e741\u6708\u306e\u4eba\u6c17\u9806\u4f4d](http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html)\u3067\u66f8\u3044\u3066\u307e\u3059\u3002\n\u9014\u4e2d\u77e5\u3089\u306a\u3044\u8a00\u8a9e\u3092\u98db\u3070\u3057\u305f\u308a\u3001C\u3068Java\u3092\u5165\u308c\u3048\u3061\u3083\u3063\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u304c\u3002\n\n##\u89e3\u8aac\u306b\u3064\u3044\u3066\n\u3082\u306e\u3059\u3054\u304f\u500b\u4eba\u7684\u306a\u504f\u898b\u3084\u8aa4\u89e3\u3001\u601d\u3044\u8fbc\u307f\u306b\u6e80\u3061\u305f\u89e3\u8aac\u3067\u3059\u3002\n\u89e3\u8aac\u4e2d\u3067\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3068\u304b\u4e2d\u9593\u30b3\u30fc\u30c9\u3068\u304b\u306b\u306f\u3053\u3060\u308f\u3089\u305a\u3001\u96d1\u306b\n\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5fc5\u8981\u306a\u8a00\u8a9e\u2192\u30b3\u30f3\u30d1\u30a4\u30eb\u8a00\u8a9e\u3068\u304b\u30b3\u30f3\u30d1\u30a4\u30e9\u3068\u304b\n\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u4e0d\u8981\u306a\u8a00\u8a9e\u2192\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3068\u304b\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3068\u304b\n\u3068\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u300c\u8a00\u8a9e\u3068\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u9055\u3046\u3060\u308d\u3002\u300d\u3068\u304b\u3064\u3063\u3053\u307e\u308c\u305d\u3046\u3067\u3059\u304c\u3001\u307e\u3041\u306a\u3093\u3068\u306a\u304f\u3001\u3067\u3002\n\n##\u4eca\u5f8c\u306e\u4e88\u5b9a\n\u8ffd\u52a0\u4e88\u5b9a\u306e\u8a00\u8a9e\n\n- Io\n\nABC\u9806\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n##C\n\u3068\u308a\u3042\u3048\u305a\u304a\u7d04\u675f\u3068\u3044\u3046\u3053\u3068\u3067\u3001C\u8a00\u8a9e\u304b\u3089\u884c\u304d\u307e\u3059\u3002\n\u591a\u5206\u3001\u4e16\u754c\u6a19\u6e96\u3067\u3059\u3002\n**\u901f\u3044\u3057\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u8c4a\u5bcc\u3060\u3057\u3001\u6b63\u76f4\u3053\u308c\u3060\u3051\u77e5\u3063\u3066\u3044\u308c\u3070\u4f55\u3067\u3082\u3067\u304d\u307e\u3059\u3002**\n\u3068\u8a00\u3063\u3066\u3057\u307e\u3048\u3070\u3001\u3053\u306e\u8a18\u4e8b\u306e\u5b58\u5728\u304c\u5371\u3076\u307e\u308c\u307e\u3059\u304c\u3002\n\u3053\u308c\u3050\u3089\u3044\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3042\u308c\u3070\u3001PHP \u3084 JavaScript \u3057\u304b\u89e6\u3063\u305f\u3053\u3068\u306e\u306a\u3044\u4eba\u3067\u3082\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30bf\u3092\u7406\u89e3\u3067\u304d\u308b\u304b\u304c\u3069\u3046\u304b\u304c\u3053\u306e\u8a00\u8a9e\u306e\u9375\u3067\u3059\u3002\n\n```c:fib_c.c\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\n#include <stdio.h>\n#include <stdlib.h>\n\nint fib(int n)\n{\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n-1) + fib(n-2);\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    int n;\n    n = atoi(argv[1]);\n    printf(\"%d\", fib(n));\n    return 0;\n}\n\n/*\nExample\n    compile:\n        gcc -O3 -o fib_c fib_c.c\n    run:\n        ./fib_c.c 39\n*/\n```\n**<\u8fd1\u4f3c\u5f0f\u3067\u3084\u3063\u3064\u3051>**\nlong long int \u306a\u306e\u306792\u4ee5\u4e0b\u3057\u304b\u30c0\u30e1\u3067\u3059\u304c\u3001\u8a08\u6e2c\u4e0d\u80fd\u306a\u30bf\u30a4\u30e0\u3067\u77ac\u6bba\u3067\u3059\u3002\n\n```c:fib_binet.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main(int argc, char *argv[])\n{\n    printf(\"%lld\", (long long int)(pow(((1+sqrt(5))/2),atof(argv[1]))/sqrt(5)+0.5));\n    return 0;\n}\n/*\nExample\n    compile:\n        gcc -O3 -lm -o fib_binet fib_binet.c\n    run:\n        ./fib_binet 92\n*/\n```\n\n##Java\n\u3053\u308c\u307e\u305f\u3053\u306e\u696d\u754c\u306b\u3044\u3066\u540d\u524d\u3092\u77e5\u3089\u306a\u3044\u4eba\u306f\u3044\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u6614\u306f\u9045\u3044\u9045\u3044\u3068\u8a00\u308f\u308c\u307e\u3057\u305f\u304c\u3001JIT\u304c\u52b9\u304f\u3088\u3046\u306b\u306a\u3063\u3066\u304b\u3089\u306f\u3001C\u8a00\u8a9e\u306b\u8feb\u308b\u901f\u5ea6\u3067\u3059\u3002\n\u3053\u306e\u8a00\u8a9e\u3082\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u8c4a\u5bcc\u3067\u3001\u3053\u308c\u3060\u3051\u3067\u307b\u307c\u4f55\u3067\u3082\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u8a00\u8a9e\u3067\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u6642\u9593\u306e\u6b86\u3069\u306f\u3001\u30af\u30bd\u307f\u305f\u3044\u306b\u968e\u5c64\u306e\u6df1\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3069\u3053\u306b\u4f55\u304c\u3042\u308b\u304b\u3092\u63a2\u3059\u3053\u3068\u306b\u8cbb\u3084\u3059\u3053\u3068\u3067\u3059\u3002\n\u66f8\u304d\u65b9\u304c\u3061\u3087\u3063\u3068\u5197\u9577\u306a\u306e\u304c\u5acc\u3044\u306a\u3068\u3053\u308d\u3067\u3059\u3002\nJIT\u3067\u5145\u5206\u901f\u3044\u306e\u3067\u3001GNU\u306eJava\u306e\u30b3\u30f3\u30d1\u30a4\u30e9gcj\u306f\u3082\u3046\u3044\u3089\u306a\u3044\u5b50\u304b\u3082\u2026\u3002\n\n```java:fib_java.java\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by java\npublic class fib_java {\n    public static int fib(int n) {\n        if (n < 2) {\n            return n;\n        } else {\n            return fib(n-2) + fib(n-1);\n        }\n    }\n    public static void main(String[] args) {\n        int n = Integer.parseInt(args[0]);\n        System.out.println(fib(n));\n    }\n}\n\n/*\n    example\n        compile by OpenJDK:\n            javac fib_java.java\n        run by OpenJDK:\n            java fib_java 39\n        compile by gcj:\n            gcj -O4 --main=fib_java -o fib_gcj fib_java.java\n        rub by gcj:\n            ./fib_java 39\n*/\n```\n\n##C++\nC\u8a00\u8a9e\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3092\u53d6\u308a\u8fbc\u3093\u3060\u9b54\u7269\u3002\n\u3053\u306e\u8a00\u8a9e\u306e\u30c0\u30fc\u30af\u30b5\u30a4\u30c9\u306b\u9665\u308c\u3070\u3001\u30af\u30e9\u30b9\u7d99\u627f\u306e\u7121\u9593\u5730\u7344\u304c\u5473\u308f\u3048\u307e\u3059\u3002\n\u3055\u3059\u304c\u306b\u901f\u5ea6\u306fC\u540c\u69d8\u306b\u9ad8\u901f\u3002\n\n```cpp:fib_cpp.cpp\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by C++\n\n#include <iostream>\n#include <cstdlib>\n\nusing namespace std;\n\nint fib(int n)\n{\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\n\nint main(int argc, char** argv)\n{\n    int n;\n    n = atoi(argv[1]);\n    cout << fib(n) << endl;\n\n    return 0;\n}\n\n/*\nexample\n    compile:\n        g++ -o fib_cpp -O3 -mtune=native fibonacci.cpp\n    run:\n        ./fib_cpp 39\n*/\n```\n\n##C\uff03\nMicrosoft\u8b39\u88fd\u306eC\u8a00\u8a9e\u3082\u3069\u304d\u3002\nC\u8a00\u8a9e\u3068Java\u3092\u8db3\u3057\u3066\u5272\u3063\u305f\u3088\u3046\u306a\u4ed5\u69d8\u3002\nVisualBasic\u3088\u308a\u3082\u3059\u3063\u304d\u308a\u3057\u305f\u66f8\u304d\u65b9\u304c\u3067\u304d\u3001Windows\u754c\u9688\u3067\u306f\u6a19\u6e96\u306b\u306a\u308a\u305d\u3046\u306a\u52e2\u3044\u3002\nMono\u3092\u5229\u7528\u3059\u308c\u3070Linux\u3067\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u304c\u53ef\u80fd\u3002\nWindows\u3067\u901f\u5ea6\u6bd4\u8f03\u3092\u3084\u3063\u3066\u3044\u306a\u3044\u304c\u591a\u5206\u9ad8\u901f\u3002\nLinux\u3067\u306fMono\u306b\u4f9d\u5b58\u3059\u308b\u306e\u3067\u306a\u3093\u3068\u3082\u8a00\u3048\u307e\u305b\u3093\u304c\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3088\u308a\u306f\u901f\u3044\u3002\n\u3044\u3084\u3001\u500b\u4eba\u7684\u306b\u306f\u5acc\u3044\u3067\u306f\u306a\u3044\u3093\u3067\u3059\u304c\u306d\u3002\n\n```csharp:fib_cs.cs\n// C#\u3067\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\nusing System;\n\nclass Fibonacci\n{\n    static long Fib(int n)\n    {\n        if (n < 2)\n            return n;\n        else\n            return Fib(n - 2) + Fib(n - 1);\n    }\n\n    static void Main(string[] args)\n    {\n        int n = int.Parse(args[0]);\n        Console.Write(Fib(n));\n    }\n}\n\n/*\nexample\n    compile:\n        mcs -optimize+ fib_cs.cs\n    run:\n        mono fib_cs.exe 39\n*/\n```\n\n##Python\n\u3044\u304d\u306a\u308a\u30b9\u30af\u30ea\u30d7\u30c8\uff08\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\uff09\u8a00\u8a9e\u3002\n\u3053\u306e\u8a00\u8a9e\u306e\u7279\u5fb4\u306f\u306a\u3093\u3068\u8a00\u3063\u3066\u3082\u3001\u30a4\u30f3\u30c7\u30f3\u30c8\u3067\u30d6\u30ed\u30c3\u30af\u304c\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u3002\n\u8ab0\u304c\u66f8\u3044\u3066\u3082\u7dba\u9e97\u306b\u898b\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u66f8\u3051\u307e\u3059\u3002\n\u305f\u3060\u3057\u4e2d\u9014\u534a\u7aef\u306b\u30a4\u30f3\u30c7\u30f3\u30c8\u3064\u3051\u3066\u304f\u308c\u308b\u30a8\u30c7\u30a3\u30bf\u3067\u7de8\u96c6\u3059\u308b\u3068\u3001\u4e00\u767a\u3067\u4fee\u5fa9\u4e0d\u53ef\u80fd\u306a\u72b6\u614b\u307e\u3067\u7834\u58ca\u3055\u308c\u3061\u3083\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u901f\u5ea6\u306f**\u9045\u3044**\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u304c2\u21923\u306b\u306a\u3063\u3066\u66f4\u306b\u9045\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u3063\u3066\u304b\u3001**\u5fae\u5999\u306b\u4e92\u63db\u6027\u304c\u306a\u3044\uff01**\u52d8\u5f01\u3057\u3066\u304f\u3060\u3055\u3044\u3002\npypy\u3068\u304b\u306f\u540d\u524d\u304c\u3044\u3084\u3089\u3057\u3044\u306e\u3067\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u306a\u305c\u304b\u6d77\u5916\u3067\u306f\u4eba\u6c17\u3002\n\n\u6614\u300cpsp\u300d\u3068\u8a00\u3063\u3066PHP\u306b\u5bfe\u6297\u3057\u3066HTML\u306b\u57cb\u3081\u8fbc\u3080\u5f62\u5f0f\u306ePython\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u60f3\u50cf\u901a\u308aHTML\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u3068\u6df7\u3056\u308a\u5408\u3044\u6df7\u6c8c\u3057\u305f\u30bd\u30fc\u30b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u666e\u53ca\u3057\u306a\u304b\u3063\u305f\u306e\u306fPython\u306e\u9ed2\u6b74\u53f2\u3002\n\n\n```py:fib_py.py\n# -*- coding: utf-8 -*-\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Python\n\nimport sys\n\ndef fib(n):\n    if n < 2 :\n        return n\n    else:\n        return fib(n-2) + fib(n-1)\n\nargv = int(sys.argv[1])\n\nprint(fib(argv))\n\n\"\"\"\nexample\n    run:\n        python fibonacci.py 39\n\"\"\"\n```\n\n##php\u30fbHack\n\u307f\u3093\u306a\u5927\u597d\u304dphp\u3002\n\u9069\u5f53\u306b\u66f8\u3044\u3066\u3082\u305d\u3053\u305d\u3053\u52d5\u304f\u305f\u3081\u306b\u3001\u7cde\u30b3\u30fc\u30c9\u304c\u7e41\u6b96\u3057\u3084\u3059\u3044\u3002\nphp-7\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3001\u901f\u5ea6\u306f\u307b\u307c2\u500d\u306b\u3002Ruby\u3068\u307b\u307c\u540c\u3058\u901f\u5ea6\u3002\n\u3067\u3082php\u4e92\u63db\u306ehhvm\u306fChrome\u306eV8\u4e26\u307f\u306b\u901f\u3044\u3002\n\u30ed\u30b8\u30c3\u30af\u3060\u3051\u306ephp\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u3001\u5f8c\u308d\u306e\u300c?>\u300d\u306f\u3064\u3051\u306a\u3044\u306e\u304c\u6d41\u884c\u308a\u3089\u3057\u3044\u3002\n\u305f\u3057\u304b\u306b\u3001\u4f59\u8a08\u306a\u6539\u884c\u306b\u60a9\u307e\u3055\u308c\u306a\u304f\u3066\u826f\u3055\u305d\u3046\u3002\n\n```php:fib_php.php\n<?php\n/**\n * \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3060\u3088\n * @param int $n\n * @return int\n */\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n    } else {\n        return fib($n-2) + fib($n-1);\n    }\n}\n\nprint fib($argv[1]);\n\n/*\nexample\n    run:\n        php fib_php.php 39\n*/\n```\n\nhhvm \u3067\u578b\u3092\u6307\u5b9a\u3057\u3066\u66f8\u304f\u3068\u300cHack\u300d\u306b\u306a\u308a\u307e\u3059\u3002\n\u3060\u304b\u3089\u3068\u8a00\u3063\u3066\u3001\u666e\u901a\u306ehhvm \u3088\u308a\u901f\u3044\u3068\u3044\u3046\u3053\u3068\u306f\u306a\u304f\u3001\u3069\u3061\u3089\u304b\u3068\u3044\u3048\u3070\u30d0\u30b0\u9632\u6b62\uff1f\nphp\u307d\u304f\u306a\u3044\u3002\u3051\u3069php\u3088\u308a\u306f\u304b\u3063\u3053\u3044\u3044\u3002\n\n```php:fib_php.hh\n<?hh\n/**\n * \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3060\u3088\n * @param int $n\n * @return int\n */\nfunction fib(int $n): int {\n    if ($n < 2) {\n        return $n;\n    } else {\n        return fib($n-2) + fib($n-1);\n    }\n}\n\nprint fib(intval($argv[1]));\n\n/*\nexample\n    run:\n        hhvm fib_php.hh 39\n*/\n```\n\n##Basic\n###VB.Net\nMicrosoft\u4ed5\u69d8\u306eBasic\u3002\n\u9ad8\u6a5f\u80fd\u306b\u306a\u308a\u904e\u304e\u3066\u3001\u66f8\u304d\u65b9\u304c\u3059\u3054\u304f\u5197\u9577\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u6700\u8fd1\u306fC#\u306b\u4eba\u6c17\u3092\u596a\u308f\u308c\u3064\u3064\u3042\u308b\uff1f\nMono\u3067\u8a66\u3057\u307e\u3057\u305f\u3002\n\u901f\u5ea6\u306fMono\u306b\u4f9d\u5b58\u3059\u308b\u305f\u3081\u3001Mono\u306eC#\u3068\u307b\u307c\u540c\u3058\u3002\u6614\u306f\u3059\u3063\u3052\u3047\u9045\u304b\u3063\u305f\u3051\u3069\u3002\n\n```vbnet:fib_vb.bas\n' \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Visual Basic\nModule Fibonacci\n\n    Function Fib(ByVal N As Integer) As Integer\n        If N < 2 Then\n            Return N\n        Else\n            Return Fib(N - 2) + Fib(N - 1)\n        End If\n    End Function\n\n    Sub Main(ByVal CmdArgs() As String)\n        Dim N As Integer = Integer.Parse(CmdArgs(0))\n        Console.WriteLine(Fib(N))\n    End Sub\n\nEnd Module\n\n' example\n'   compile:\n'       vbnc /optimization+ /out:fib_vbnc.exe fib_bas.bas\n'   run:\n'       mono fib_vbnc.exe 39\n```\n\n###FreeBasic\n\u77e5\u540d\u5ea6\u306f\u4f4e\u3044\u304c\u3001\u4f55\u6c17\u306b\u30af\u30bd\u901f\u3044\u3002\nGNU \u30b3\u30f3\u30d1\u30a4\u30e9\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u753b\u7b56\u3057\u3066\u3044\u308b\u6a21\u69d8\u3002\nGNU C\u3088\u308a\u901f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n```vb.net:fib_fbc.bas\n' \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by FreeBasic\nFunction Fib(N As Integer) As Integer\n    If N < 2 Then\n        Fib = N\n    Else\n        Fib = Fib(N - 2) + Fib(N - 1)\n    End If\nEnd Function\n\nDim N As Integer = ValInt(Command(1))\nPrint Fib(N)\n\n' example\n'   compile:\n'       fbc -O 3 fib_fbc.bas\n'   run:\n'       ./fib_fbc 39\n```\n\n##JavaScript\nJQUERY \u306e\u304a\u304b\u3052\uff08\u3060\u3051\uff1f\uff09\u3067WEB\u306b\u306f\u6b20\u304b\u305b\u306a\u3044\u8a00\u8a9e\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\u3068\u306f\u8a00\u3046\u3082\u306e\u306e\u3001\u4ed6\u306e\u8a00\u8a9e\u3067\u306f\u5c11\u306a\u3044prototype\u306e\u6982\u5ff5\u3084\u3001\u95a2\u6570\u578b\u8a00\u8a9e\u3063\u307d\u3044\u6a5f\u80fd\u3082\u3042\u308a\u3001\u975e\u5e38\u306b\u8208\u5473\u6df1\u3044\u8a00\u8a9e\u3002\nGoogle\u3068Mozilla\u3067\u958b\u767a\u7af6\u4e89\u3092\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u6700\u8fd1\u306eJavaScript\u306f\u30af\u30bd\u901f\u3044\u3002\nGoogle\u2192Chrome\u2192V8\nMozilla\u2192FireFox\u2192Spidermonkey\n\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067\u4f7f\u7528\u3059\u308bnode.js\u3068\u3044\u3046\u5b9f\u88c5\u3082\u3042\u308a\u307e\u3059\u3002\n\u3061\u3087\u3063\u3068\u671f\u5f85\u3057\u3066\u3044\u308b\u3001\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u540c\u3058\u8a00\u8a9e\u304c\u4f7f\u3048\u308b\u3068\u3044\u3046\u306e\u306f\u3001\u5b66\u7fd2\u30b3\u30b9\u30c8\u306e\u4f4e\u6e1b\u306b\u7e4b\u304c\u308a\u305d\u3046\u3060\u304c\u3001\u3069\u306e\u30ed\u30b8\u30c3\u30af\u304c\u3069\u3063\u3061\u3067\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\u6df7\u4e71\u3057\u305d\u3046\u3067\u60aa\u3044\u4e88\u611f\u3057\u304b\u3057\u307e\u305b\u3093\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u306f\u3001V8\u3001node\u3001Spidermonkey \u3067\u52d5\u304f\u3088\u3046\u306b\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u306a\u3093\u304bd8\u30b3\u30de\u30f3\u30c9\u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u56fa\u5b9a\u5024\u3067\u59a5\u5354\u3002\n\n```js:fib_js.js\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by JavaScript\n\nvar fib = function(n) {\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n-1) + fib(n-2);\n    }\n}\n\nif (typeof process === \"undefined\" && typeof scriptArgs !== \"undefined\") {\n    // for Spidermonkey\n    print(fib(scriptArgs[0]));\n} else if (typeof process !== \"undefined\") {\n    // for node\n    console.log(fib(process.argv[2]));\n} else {\n    // for d8\n    print(fib(39));\n}\n\n/*\nexample\n    Spidermonkey:\n        js fib_js.js 39\n    Node.js:\n        node fib_js.js 39\n    v8:\n        d8 fib_js.js\n*/\n```\n\n##Ruby\u30fbCrystal\n###Ruby\nRuby\u306f\u65e5\u672c\u88fd\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3002\u304a\u304b\u3052\u3067\u65e5\u672c\u3067\u306e\u4eba\u6c17\u306f\u9ad8\u304f\u65e5\u672c\u8a9e\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u591a\u3044\u3002\n\u3068\u306f\u3044\u3046\u3082\u306e\u306e\u3001\u5b9f\u52d9\u3067Ruby\u3068\u3044\u3046\u306e\u306f\u610f\u5916\u3068\u5c11\u306a\u3044\u3002\n\u8a00\u8a9e\u304a\u305f\u304f\u306b\u3088\u308a\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u597d\u304d\u305d\u3046\u306a\u6a5f\u80fd\u304c\u305f\u3063\u3077\u308a\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u66f8\u304d\u65b9\u306b\u306f\u5bdb\u5bb9\u306a\u3068\u3053\u308d\u304c\u30e1\u30ea\u30c3\u30c8\u3067\u3042\u308a\u30c7\u30e1\u30ea\u30c3\u30c8\u3067\u3082\u3042\u308a\u307e\u3059\u3002\nRuby on Rails \u3067\u4eba\u6c17\u7206\u767a\u3057\u305f\u304c\u3001\u500b\u4eba\u7684\u306b\u306fRoL\u306f\u5b9f\u88c5\u304c\u91cd\u3044\u5370\u8c61\u304c\u3042\u308a\u3001\u3042\u307e\u308a\u597d\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nRuby\u81ea\u4f53\u306f\u597d\u304d\u3002\n\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8ffd\u3046\u3054\u3068\u306b\u901f\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002php\u3068\u901f\u5ea6\u7af6\u4e89\u3092\u3057\u3066\u308b\uff1f\n\n```rb:fib_rb.rb\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\ndef fib(n)\n    if (n < 2)\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend\nputs fib(ARGV[0].to_i)\n\n=begin\nexample\n    ruby fib_rb.rb 39\n=end\n```\n\n###Crystal\nCrystal\u306fRuby\u98a8\u306e\u6587\u6cd5\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u8a00\u8a9e\u3002\u958b\u767a\u5143\u306f\u9055\u3044\u307e\u3059\u3002\nRuby\u307b\u3069\u6587\u6cd5\u306b\u5bdb\u5bb9\u3067\u306f\u306a\u3044\u305f\u3081\u3001Ruby\u3067\u3060\u3089\u3057\u306a\u3044\u66f8\u304d\u65b9\u3092\u3057\u3066\u3044\u308b\u3068\u6012\u3089\u308c\u307e\u3059\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u7d4c\u7531\u3067C\u306e\u95a2\u6570\u304c\u547c\u3079\u305f\u308a\u3059\u308b\u3002\u3081\u3063\u3061\u3083\u901f\u3044\u3002\n\u672c\u6c17\u306eJava\u3068\u307b\u307c\u540c\u3058\u901f\u5ea6\u306e\u6700\u8fd1\u3061\u3087\u3063\u3068\u6c17\u306b\u306a\u308b\u8a00\u8a9e\u3002\nRuby\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u307b\u307c\u305d\u306e\u307e\u307e\u52d5\u304d\u305d\u3046\u3067\u3059\u304c\u3001=begin\u301c=end\u5f62\u5f0f\u306e\u30b3\u30e1\u30f3\u30c8\u30d6\u30ed\u30c3\u30af\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n```rb:fib_rb.rb\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\ndef fib(n)\n    if (n < 2)\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend\nputs fib(ARGV[0].to_i)\n\n#\n# example\n#    compile:\n#        crystal compile --release -o fib_crystal fib_rb.rb\n#    run:\n#        ./fib_crystal 39\n#\n```\n\n##Perl\n###Perl5\nCGI\u3067\u4e00\u6642\u306f\u4e16\u754c\u3092\u5f81\u670d\u3057\u305f\u8a00\u8a9e\u3002\n\u6b63\u898f\u8868\u73fe\u306b\u3088\u308b\u5f37\u529b\u306a\u6587\u5b57\u5217\u64cd\u4f5c\u304c\u7279\u5fb4\u3002\n\u6050\u308d\u3057\u304f\u7701\u7565\u3067\u304d\u308b\u305f\u3081\u3001\u81ea\u5206\u304c\u66f8\u3044\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30824\u6b69\u6b69\u3051\u3070\u308f\u304b\u3089\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u3088\u3063\u3066\u9d8f\u306b\u958b\u767a\u306f\u7121\u7406\u3002\n\u5b9f\u88c5\u304c\u53e4\u304f\u901f\u5ea6\u306f\u9045\u3044\u3002\n\u3057\u304b\u3057Perl\u5f62\u5f0f\u306e\u6b63\u898f\u8868\u73fe\u306f\u4ed6\u306e\u8a00\u8a9e\u306b\u53d7\u3051\u7d99\u304c\u308c\u3066\u3044\u307e\u3059\u3002\n\n```pl:fib_perl.pl\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Perl\nsub fib\n{\n    my $n = shift;\n    if ($n < 2) {\n        return $n;\n    } else {\n        return fib( $n - 2 ) + fib( $n - 1 );\n    }\n}\n\nprint fib($ARGV[0]);\n\n=pod\nexample\n    perl fib_perl.pl 39\n=cut\n```\n\n###Perl6\n\u51fa\u308b\u51fa\u308b\u3068\u8a00\u308f\u308c\u3066\u306a\u304b\u306a\u304b\u51fa\u3066\u3053\u306a\u3044\u6b21\u4e16\u4ee3\u578bPerl\u3002\nPerl6 \u3067\u66f8\u304b\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092rakudo \u3068\u3044\u3046\u30b3\u30f3\u30d1\u30a4\u30e9\u304c Moar VM \u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u307e\u3060\u5b9f\u9a13\u6bb5\u968e\u3089\u3057\u304f\u901f\u5ea6\u306f\u30b7\u30a7\u30eb\u4e26\u306b\u9045\u3044\u3002\nPerl5\u3068\u306e\u4e92\u63db\u6027\u3082\u4f4e\u304f\u306a\u304b\u306a\u304b\u4f7f\u3044\u3069\u3053\u308d\u304c\u306a\u3044\u3002\n\n```pl:fib_perl.pl6\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Perl\nsub fib ($n)\n{\n    if ($n < 2) {\n        return $n;\n    } else {\n        return fib( $n - 2 ) + fib( $n - 1 );\n    }\n}\n\nmy $ARGV = @*ARGS.shift;\n\nprint fib($ARGV);\n\n=pod\nexample\n    perl6 fib_pl.pl6 20\n=cut\n```\n\n##Pascal\n\u304b\u3064\u3066\u306f\u300c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u52c9\u5f37\u3059\u308b\u306a\u3089\u30b3\u30ec\u300d\u3068\u8a00\u308f\u308c\u305f\u8a00\u8a9e\u3002\nbegin\u301cend\u5f62\u5f0f\u304c\u597d\u304d\u306a\u4eba\u306b\u306f\u305f\u307e\u3089\u306a\u3044\u8a00\u8a9e\u3002\nDelphi\u304c\u6d88\u3048\u3001\u305d\u3053\u305d\u3053\u4f7f\u3048\u305d\u3046\u306a\u306e\u306fFree Pascal Compiler\u3050\u3089\u3044\u3002\nFree Pascal Compiler \u306f\u3001\u53e4\u3044Pascal\u306e\u4ed6\u3001Delphi\u30e2\u30fc\u30c9\u3084ObjectPascal\u30e2\u30fc\u30c9\u3067\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3082\u53ef\u80fd\u3002\n\u305f\u3060\u3001\u751f\u6210\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u306b\u30e9\u30f3\u30bf\u30a4\u30e0\u304c\u304f\u3063\u3064\u304f\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u5927\u304d\u304f\u306a\u308a\u304c\u3061\u3002\n\u6700\u9069\u5316\u3082\u3044\u307e\u3044\u3061\u3002\n\u3067\u3082\u500b\u4eba\u7684\u306b\u306f\u611b\u7740\u306e\u3042\u308b\u8a00\u8a9e\u3067\u3059\u3002\n\n```delphi:fib_pascal.pas\n\nuses sysutils;\n\nfunction fib(n:longint): longint;\nbegin\n     if (n < 2) then\n          fib := n\n     else\n          fib := fib(n - 2) + fib(n - 1);\n     end;\n\nvar\n     n : integer;\nbegin\n     n := StrToInt(ParamStr(1));\n     writeln(fib(n));\nend.\n\n(*\n     example\n    compile(Free Pascal Compiler):\n     fpc -O4 -Tlinux fib_pascal.pas\n*)\n```\n\n##Swift\n2016\u5e74\u306b\u30d6\u30ec\u30a4\u30af\u3057\u305d\u3046\u306a\u8a00\u8a9e\u3002Mac OSX\u306eXcode\u306b\u63a1\u7528\u3055\u308c\u307e\u3057\u305f\u3002\n\u3061\u3087\u3063\u3068\u95a2\u6570\u578b\u8a00\u8a9e\u3063\u307d\u3044\u4ed5\u69d8\u306a\u306e\u3067\u30af\u30bb\u304c\u3042\u308a\u307e\u3059\u3002\n\u305f\u3076\u3093Clang\u3092\u4f7f\u3063\u3066\u3044\u305d\u3046\u306a\u306e\u3067\u901f\u5ea6\u3082Clang\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305fC\u3068\u307b\u307c\u540c\u3058\u3002\n\u3053\u308c\u304c\u51fa\u305f\u3053\u3068\u3067Objective-C\u306e\u7acb\u5834\u304c\u5fae\u5999\u306b\u306a\u308a\u305d\u3046\u3002\n\n```swift:fib_swift.swift\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by swift\nfunc fib(n: Int) -> (Int) {\n    if n < 2 {\n        return n\n    } else {\n        return fib(n - 2) + fib(n - 1)\n    }\n}\n\nvar n = Int(Process.arguments.suffixFrom(0)[1])!\nprint(fib(n))\n\n/*\nexample\n    JITmode:\n        swift fib_swift.swift 39\n    compile:\n        swiftc -O -o fib_swift fib_swift.swift\n    run:\n        ./fib_swift 39\n*/\n```\n\n##Octave\u30fbScilab\n\u306a\u3093\u3067\u3044\u304d\u306a\u308a\u6570\u5024\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u304c\u51fa\u3066\u304d\u305f\u304b\u3068\u3044\u3046\u3068\u3001TIOBE\u3067\u306f\u3001\u3053\u306e\u4f4d\u7f6e\u306b\u300cMATLAB\u300d\u304c\u6765\u3066\u3044\u305f\u305f\u3081\u3002\n\u3068\u3044\u3046\u304b\u666e\u901a\u306e\u8a00\u8a9e\u304c\u7d9a\u3044\u305f\u306e\u3067\u3001\u5c11\u3057\u6c17\u5206\u8ee2\u63db\u306b\u3002\n\u809d\u5fc3\u306eMATLAB\u304c\u624b\u5143\u306b\u306a\u3044\u305f\u3081\u3001Octave\u3001Scilab\u3067\u304a\u8336\u3092\u6fc1\u3057\u307e\u3059\u3002\n\u3055\u3059\u304c\u306f\u6570\u5024\u8a08\u7b97\u304c\u5c02\u9580\u306e\u8a00\u8a9e\u3002\n\u6570\u5024\u6f14\u7b97\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3059\u3063\u304d\u308a\u66f8\u3051\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u5b9f\u52b9\u901f\u5ea6\u306f\u9045\u3044\u3002\n\u3042\u3068\u3001Scilab\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u5f15\u6570\u3092\u53d6\u5f97\u3057\u3066\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u306f\u8abf\u67fb\u4e2d\u3002\n\n###Octave\n```matlab:fib_octave.m\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Octave\nfunction f  = fib(n)\n    if (n<2)\n        f = n ;\n    else\n        f = fib(n - 2) + fib(n - 1);\n    endif\nendfunction\n\nargs = argv();\nprintf(\"%d\", fib(str2num(args{1})));\n\n#{\n    example\n        run:\n            octave-cli -qf fibonacci.m 20   \n#}\n```\n###Scilab\n```matlab:fib_scilab.m\n-->function f  = fib(n)\n-->    if n < 2 then\n-->        f = n\n-->    else\n-->        f = fib(n - 2) + fib(n - 1)\n-->    end\n-->endfunction\n \n-->fib(20)\n ans  =\n \n    6765. \n```\n\n##Groovy\n\u306a\u307e\u3051\u3082\u306e\u306e\u70ba\u306eJava\u3002Java\u304c\u6545\u306bJava\u3068\u306e\u89aa\u548c\u6027\u3082\u9ad8\u3044\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u306a\u304f\u3066\u3082\u52d5\u3044\u3061\u3083\u3046\u3002\u5909\u6570\u306e\u578b\u3068\u304b\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u52d5\u3044\u3061\u3083\u3046\u3002\n\u3067\u3082\u771f\u9762\u76ee\u306b\u578b\u6307\u5b9a\u3068\u304b\u3057\u3066\u3042\u3052\u308b\u3068\u3061\u3083\u3093\u3068\u9ad8\u901f\u3067\u52d5\u304d\u307e\u3059\u3002\n\u5acc\u3044\u3058\u3083\u306a\u3044\u3051\u3069\u3001\u30af\u30bb\u304c\u306a\u3055\u3059\u304e\u3066\u4f7f\u3044\u3069\u3053\u308d\u306b\u8ff7\u3044\u307e\u3059\u3002\n\u3067\u3082\u3001int \u3092Integer\u3063\u3066\u66f8\u3044\u3061\u3083\u3046\u3068\u3059\u3054\u304f\u9045\u304f\u306a\u3063\u305f\u308a\u3068\u304b\u3001\u3057\u308c\u3063\u3068\u7f60\u304c\u6f5c\u3093\u3067\u3044\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n```groovy:fib_groovy.groovy\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by groovy\nint fib(int n) {\n    if (n < 2) {\n      return n;\n    } else {\n      return fib(n - 2) + fib(n - 1);\n    }\n}\n\nint n = Integer.decode(args[0]);\nprintln fib(n);\n\n/*\nexample\n    run source code:\n        groovy fib_groovy.groovy 39\n    compile:\n        groovyc fib_groovy.groovy\n    run byte code:\n        groovy fib_groovy 39\n*/\n```\n\n##R\n\u6570\u5024\u8a08\u7b97\u7528\u8a00\u8a9e\u3002\n\u3068\u8a00\u3063\u3066\u3082\u884c\u5217\u3068\u304b\u96c6\u8a08\u3068\u304b\u304c\u66f8\u304d\u3084\u3059\u3044\u3063\u3066\u3060\u3051\u3067\u3001\u30b4\u30ea\u30b4\u30ea\u306e\u6570\u5024\u6f14\u7b97\u306f\u9045\u3044\u3002\n\u901f\u5ea6\u3092\u6c42\u3081\u308b\u306a\u3089\u3001C\u3068\u304bFortan\u3068\u304b\u4f7f\u3044\u306a\u3055\u3044\u3068\u3044\u3046\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u591a\u5206\u3002\n\u30b0\u30b0\u308a\u306b\u304f\u3044\u3002\n\n```r:fib_r.r\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by R\nfib <- function(n) {\n    if (n < 2)\n        return(n)\n    else\n        return(fib(n - 2) + fib(n - 1))\n}\n\nargv <- commandArgs(TRUE)\nn <- as.integer(argv[1])\n\ncat(fib(n))\n\n# example\n#   run:\n#       Rscript fibonacci.R 30\n```\n\n##D\nC\u306e\u7f6e\u304d\u63db\u3048\u3092\u76ee\u6307\u3057\u3066\u4f5c\u3089\u308c\u305f\u8a00\u8a9e\uff08\u3060\u3068\u601d\u3044\u307e\u3059\uff09\u3002\nC++\u3084Java\u306e\u3044\u3044\u3068\u3053\u53d6\u308a\u3092\u3057\u3066\u9ad8\u6a5f\u80fd\u306b\u3057\u305f\u3089\u3001\u5b9f\u88c5\u304c\u8ffd\u3044\u3064\u3044\u3066\u3044\u306a\u3044\u5370\u8c61\u3002\n\u6765\u308b\u305e\u6765\u308b\u305e\u3068\u8a00\u308f\u308c\u3066\u4e00\u5411\u306b\u6765\u306a\u3044\u3002\n\u672c\u5bb6\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3088\u308a\u3001GNU\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u65b9\u304c\u901f\u3044\u59cb\u672b\u3002\n\n```d:fib_d.d\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by D\n\nimport std.stdio;\nimport std.conv;\n\nint fib(int n) {\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n - 2) + fib(n - 1);\n    }\n}\n\nvoid main(string[] args) {\n    int n = to!int(args[1]);\n    writeln(fib(n));\n}\n\n/*\nexample\n    compile:\n        dmd fib_d.d -O -inline\n        gdc -O3 fib_d.d\n    run:\n        ./fib_d 39\n*/\n```\n\n##FORTRAN\n\u4eca\u56de\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u6f14\u7b97\u3067\u306f\u6700\u901f\u3092\u30de\u30fc\u30af\u3057\u305f\u8a00\u8a9e\u3002GNU\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u306fC\u3088\u308a\u901f\u3044\u3002\n\u6b74\u53f2\u306e\u53e4\u3055\u3001\u6027\u80fd\u306e\u9ad8\u3055\u3001\u96e3\u89e3\u305d\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3001\u30b9\u30d1\u30b3\u30f3\u3067\u306e\u5b9f\u7e3e\u306a\u3069\u6587\u53e5\u306a\u304f\u6700\u5f37\u8a00\u8a9e\u306e\u4e00\u3064\u3002\n\u5b9f\u306fBasic\u306fFortran\u3092\u7c21\u5358\u306b\u3057\u305f\u3082\u306e\u306a\u306e\u3067\u3001\u521d\u898b\u3067\u3082\u306a\u3093\u3068\u306a\u304f\u8aad\u3081\u308b\u8a00\u8a9e\u3002\n\u53e4\u3044\u5b9f\u88c5\u3086\u3048\u3001\u6700\u8fd1\u6d41\u884c\u308a\u306e\u6a5f\u80fd\u306f\u3042\u307e\u308a\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u305d\u3053\u304c\u9b45\u529b\u3002\nFORTAN90\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n```fortan:fib_fortan.f90\nprogram main\n    implicit none\n    character(255) a\n    integer n\n    call getarg(1, a)\n    read(a,*) n\n    print *, fib(n)\ncontains\n    recursive integer function fib(n) result(ret)\n        integer n\n        if (n < 2) then\n            ret = n\n        else\n            ret = fib(n-2) + fib(n-1)\n        end if\n    end function fib\nend program main\n\n! compile example\n!   gfortran -o fib_fortran -O3 fibonacci.f90\n```\n\n##Dart\n\u6700\u8fd1\u6c17\u306b\u306a\u308b\u8a00\u8a9eNo.1\uff08\u8abf\u67fb\u4eba\u65701\u4eba\uff09\u3002\n\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u306e\u4e2d\u3067\u306f\u30c0\u30f3\u30c8\u30c4\u306b\u901f\u3044\u3002\u30d8\u30bf\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u8a00\u8a9e\u306b\u5339\u6575\u3059\u308b\u901f\u3055\u3002\n\u9759\u7684\u578b\u4ed8\u3051\u8a00\u8a9e\u3002\n\n```dart:fib_dart.dart\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Dart\nint fib(num n) {\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n - 2) + fib(n - 1);\n    }\n}\n\nvoid main(List<string> arguments) {\n    int n = int.parse(arguments[0]);\n    print(fib(n));\n}\n\n/*\n example\n    run:\n        dart fibonacchi.dart 39\n*/\n```\n\n##Lisp\n\u96e3\u89e3\u305d\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u306f\u30c8\u30c3\u30d7\u30af\u30e9\u30b9\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u3002\n\u61a7\u308c\u306f\u3042\u308b\u306e\u3060\u304c\u3001\u3044\u3064\u3082\u30ab\u30c3\u30b3\u306e\u591a\u3055\u306e\u524d\u306b\u304f\u3058\u3051\u3066\u3057\u307e\u3046\u3002\nSteel Bank Common Lisp \u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nClisp\u3067\u52d5\u304f\u3088\u3046\u306b\u3082\u3057\u3066\u307f\u305f\u3064\u3082\u308a\u3060\u3051\u3069\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n```cl:fib_lisp.cl\n(defun args()\n    #+sbcl sb-ext:*posix-argv*\n    #+clisp ext:*args*\n)\n\n(defun fib (n)\n    (if (< n 2)\n        n\n        (+ (fib (- n 2)) (fib (- n 1)))\n    )\n)\n\n(defun main()\n    (print (fib (parse-integer (nth 1 (args)))))\n)\n\n(main)\n#|\nexample\n    run:\n        sbcl --script fib_lisp.cl 39\n|#\n```\n\n##Ada\n\u30a2\u30e1\u30ea\u30ab\u56fd\u9632\u7dcf\u7701\u306e\u8981\u6c42\u306b\u3088\u308a\u958b\u767a\u3055\u308c\u305f\u8d85\u786c\u6d3e\u8a00\u8a9e\u3002\n\u6b74\u53f2\u306f\u53e4\u3044\u304c\u30d1\u30c3\u30b1\u30fc\u30b8\u7b49\u306e\u6982\u5ff5\u304c\u3042\u308a\u307e\u3059\u3002\n\u3042\u307e\u308a\u306b\u6587\u6cd5\u306b\u53b3\u5bc6\u306b\u3057\u305f\u305f\u3081\u3001\u4e00\u822c\u3046\u3051\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u4eca\u3067\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\nGNU\u3067\u306fgnat\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002GNU C\u3088\u308a\u3082\u901f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n```ada:fib_ada.adb\nwith\n    Ada.Integer_Text_IO,\n    Ada.Command_Line;\n\nuse\n    Ada.Integer_Text_IO,\n    Ada.Command_Line;\n\nprocedure fib_ada is\n    N : Integer := Integer'value(Argument(1));\n    \nbegin\n    declare\n        function fib (n : Integer) return Integer is\n        begin\n            if n < 2 then\n                return n;\n            else\n                return fib(n - 2) + fib(n - 1);\n            end if;\n        end fib;\n    \n    begin\n        Put(fib(N), 1);\n    end;\nend fib_ada;\n\n-- example\n--  compile\n--      gnatmake -O3 fib_ada.adb\n```\n\n##Scratch\nMIT\u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u305f\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u8a00\u8a9e\u3002\n\u672c\u5f53\u306f\u6559\u80b2\u7528\u3067\u30bf\u30fc\u30c8\u30eb\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u3068\u304b\u3092\u3084\u308b\u8a00\u8a9e\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u6570\u5024\u6f14\u7b97\u3082\u3067\u304d\u306a\u3044\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nJavaScript\u3092\u547c\u3073\u51fa\u305b\u308b\u306e\u3067\u3001\u672c\u5f53\u306f\u305d\u3063\u3061\u3067\u3084\u308b\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u904a\u3076\u3053\u3068\u3082\u3067\u304d\u308b\u3002\u7656\u306b\u306a\u308b\u3068\u697d\u3057\u3044\u3002\nScratch\u672c\u5bb6\u3067\u306f\u306a\u304f\u3001[Snap!](http://snap.berkeley.edu/)\u3068\u3044\u3046\u30b5\u30a4\u30c8\u3067\u904a\u3093\u3067\u307f\u307e\u3057\u305f\u3002\nSpidermonkey\u306e\u304a\u304b\u3052\u3060\u3068\u601d\u3046\u304c\u3001Octave\u3088\u308a\u901f\u3044\u3002\n\n![57.png](https://qiita-image-store.s3.amazonaws.com/0/39434/bec3b6ea-9711-eb17-6049-db1f1079a2a2.png)\n\n##Scala\nJava \u3067\u5b9f\u88c5\u3055\u308c\u305f\u95a2\u6570\u578b\u8a00\u8a9e\u3002\n\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5927\u304d\u3044\u306e\u304b\u3001\u8efd\u3044\u51e6\u7406\u304c\u9045\u3044\u3002\n\u91cd\u3044\u51e6\u7406\u3067\u306f\u9650\u308a\u306a\u304fJava \u306e\u901f\u5ea6\u306b\u8fd1\u3065\u304f\u3002\n\u6587\u6cd5\u306f\u304b\u306a\u308a\u3059\u3063\u304d\u308a\u3057\u3066\u3044\u307e\u3059\u3002\n\u95a2\u6570\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u304c\u4f7f\u3048\u308b\u306e\u306f\u7d20\u6575\u3067\u3059\u304c\u3001if \u306e\u65b9\u304c\u901f\u3044\u306e\u304c\u6b8b\u5ff5\u3002\n\n\n```scala:fib_scala.scala\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1 by Scala\nobject fib_scala {\n    def fib(n: Int): Int =\n        if (n < 2)\n            n\n        else\n            fib(n - 2) + fib(n - 1)\n\n    /* \u3053\u3063\u3061\u304c\u9045\u3044\n    def fib(n: Int): Int = n match {\n        case 0 => 0\n        case 1 => 1\n        case _ => fib(n - 2) + fib(n - 1)\n    }\n    */\n\n    def main(args: Array[String]) = {\n        var n = Integer.parseInt(args(0))\n        println(fib(n))\n    }\n}\n\n/*\nexample\n    run as script:\n        scala -Onone fib_scala.scala 39\n    compile:\n        scalac -optimise -target:jvm-1.8 fib_scala.scala\n    run as byte code:\n        scala \n*/\n```\n\n##Prolog\n\u65e5\u672c\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u696d\u754c\u3067\u53e3\u306b\u3057\u3066\u306f\u306a\u3089\u306a\u3044\u8a00\u8449\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u304c\u300c\u03a3\u8a08\u753b\u300d\u3068\u300c\u7b2c5\u4e16\u4ee3\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u300d\u3067\u3059\u3002\n\u305d\u306e\u300c\u7b2c5\u4e16\u4ee3\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u300d\u3092\u958b\u767a\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u4e2d\u6838\u3092\u62c5\u3063\u3066\u3044\u305f\u8a00\u8a9e\u304cProlog\u3067\u3059\u3002\n\u5225\u306b\u65e5\u672c\u7523\u306e\u8a00\u8a9e\u3063\u3066\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\u3002\n\u305d\u3046\u3044\u3046\u308f\u3051\u3067\u4e0d\u9047\u306aProlog\u3067\u3059\u304c\u3001\u300c\u8ad6\u7406\u578b\u8a00\u8a9e\u300d\u3068\u3044\u3046\u7279\u5fb4\u7684\u306a\u30d1\u30e9\u30c0\u30a4\u30e0\u306e\u8a00\u8a9e\u3067\u3059\u3002\n\u8aa4\u89e3\u3092\u6050\u308c\u305a\u306b\u8d85\u7c21\u5358\u306b\u7701\u7565\u3059\u308b\u3068\u3001\n\u300c\u547d\u984c\u3092\u5ba3\u8a00\u3057\u3066\u3044\u3063\u305f\u3089\u3001\u8cea\u554f\u306b\u7b54\u3048\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3093\u3058\u3083\u306d\uff1f\u300d\n\u3063\u3066\u611f\u3058\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u73fe\u72b6\u3001\u300c\u5b9f\u7528\u7684\u304b\uff1f\u300d\u3063\u3066\u805e\u304b\u308c\u305f\u3089\u5373\u7b54\u3067\u300c\u7121\u7406\u3002\u300d\u3067\u3059\u304c\u3001\u7814\u7a76\u3084\u5b66\u7fd2\u5bfe\u8c61\u3068\u3057\u3066\u306f\u975e\u5e38\u306b\u9762\u767d\u3044\u8a00\u8a9e\u3067\u3059\u3002\n\n\u3046\u3063\u304b\u308a\u3059\u308b\u3068\u30e1\u30e2\u30ea\u3092\u30d0\u30ab\u98df\u3044\u3057\u307e\u3059\u3002\n\u305d\u3082\u305d\u3082\u3053\u3093\u306a\u8a08\u7b97\u3055\u305b\u308b\u306a\u3063\u3066\u8a71\u3067\u3059\u304c\u3002\n###GNU Prolog (gprolog)\n\u74b0\u5883\u5909\u6570GLOBALSZ\u3068\u304bTRAILSZ\u3068\u304b\u3067\u30e1\u30e2\u30ea\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u5927\u304d\u306a\u5f15\u6570\u3067\u52d5\u304d\u307e\u305b\u3093\u3002\nProlog\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6a19\u6e96\u306e\u62e1\u5f35\u5b50\u304c\u300c.pl\u300d\u306a\u305f\u3081\u3001Perl\u3068\u885d\u7a81\u3057\u307e\u3059\u3002\n\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306fPerl\u3088\u308a\u5c11\u3057\u9ad8\u901f\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068Ruby\u7a0b\u5ea6\u306e\u901f\u3055\u306b\u306a\u308a\u307e\u3059\u3002\n\n```prolog:fibonacci.pl\n% \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by GNU Prolog\nfib(0,0).\nfib(1,1).\nfib(X,Y) :-\n    X > 1,\n    X2 is X - 2, fib(X2, Y2), !,\n    X1 is X - 1, fib(X1, Y1), !,\n    Y is Y1 + Y2.\n\nmain :- current_prolog_flag(argv, Argv),\n    nth0(1, Argv, Param),\n    number_atom(N, Param),\n    fib(N, X),\n    write(X),\n    nl,\n    halt.\n\n:- initialization(main).\n\n% exapmle\n%   interpreter:\n%       export GLOBALSZ=262144;export TRAILSZ=262144; gprolog 30 --consult-file fibonacci.pl\n%   compiler:\n%       gplc fibonacci.pl\n%       export TRAILSZ=1048576; ./fibonacci 39\n```\n\n##Lua\n\u6d41\u884c\u308b\u304b\u306a\u3068\u601d\u308f\u305b\u3066\u304a\u3044\u3066\u3001\u306a\u304b\u306a\u304b\u6d41\u884c\u3089\u306a\u3044\u8a00\u8a9e\u3002\n\u77e5\u3089\u306a\u3044\u9593\u306bluajit \u3068\u304b\u51fa\u3066\u308b\u3057\u3001\u901f\u3044\u3002\n\u3042\u307e\u308a\u30af\u30bb\u306e\u306a\u3044\u6587\u6cd5\u3002\n\n```lua:fib_lua.lua\n-- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\nfunction fib(n)\n    if n < 2 then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend\n\nn = tonumber(arg[1])\nprint(fib(n))\n\n--[[\nexample\n    lua fib_lua.lua 39\n    luajit fib_lua.lua 39\n--]]\n```\n\n##F\uff03\nMicrosoft Visual Studio \u306e\u7570\u7aef\u5150\u3002\u95a2\u6570\u578b\u8a00\u8a9e\u3002\n\u7570\u7aef\u5150\u304c\u6545\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u5c11\u306a\u3044\u3002\u4f55\u4eba\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u95a2\u6570\u578b\u8a00\u8a9e\u3089\u3057\u304f\u3001\u95a2\u6570\u3067\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u4f7f\u3048\u307e\u3059\u3002\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u6c42\u3081\u308b\u4ee5\u5916\u306b\u4f7f\u3044\u307f\u3061\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\n```fsharp:fib_fs.fs\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by F#\n(* if else\nlet rec fib n = \n    if n < 2 then\n        n\n    else\n        fib(n - 2) + fib(n - 1)\n*)\nlet rec fib = function\n    | n when n=0 -> 0\n    | n when n=1 -> 1\n    | n -> fib(n - 2) + fib(n - 1)\n\n[<EntryPointAttribute>]\nlet main (args) = \n    //printf \"%d\" (fib(10))\n    let n : int = int args.[0]\n    printf \"%d\" (fib(n))\n    0\n\n(*\n    example\n        compile:\n            fsharpc --optimize+ fib_fs.fs\n        run:\n            mono fib_fs.exe 39\n*)\n```\n\n##Haskell\n\u786c\u6d3e\u306a\u95a2\u6570\u578b\u8a00\u8a9e\u3002\u786c\u6d3e\u3068\u3044\u3063\u3066\u3082Lisp\u307b\u3069\u30ab\u30c3\u30b3\u5730\u7344\u306b\u9665\u3089\u306a\u3044\u3002\n\u500b\u4eba\u7684\u306b\u306f\u597d\u304d\u3002\u3067\u3082\u4f7f\u3044\u3053\u306a\u305b\u306a\u3044\u81ea\u5206\u304c\u306f\u304c\u3086\u3044\u3002\n\n```hs:fib_haskell.hs\n-- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 Haskell\u7248\nimport System.Environment (getArgs)\n\nfib :: Int -> Int\nfib n\n    | n < 2 = n\n    | otherwise = fib(n - 2) + fib(n - 1)\n\nmain = do\n    argv <- getArgs\n    let n = read (argv !! 0) :: Int\n    print $ fib n\n\n{-\nexample\n    compile:\n        ghc -O -o fib_haskell fib_haskell.hs\n    run:\n        ./fib_haskell 39\n-}\n```\n\nzipWith\u3092\u4f7f\u3063\u3066\u305a\u3089\u3057\u305f\u30ea\u30b9\u30c8\u3092\u5408\u6210\u3057\u3066\u3044\u304f\u65b9\u6cd5 -- bra_cat_ket\u69d8\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\uff08\u305f\u3076\u3093\u3053\u3063\u3061\u304cHaskell\u3089\u3057\u3044\u66f8\u304d\u65b9\uff09\n\n```hs:fib_haskell2.hs\n-- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 Haskell(zipWith)\u7248\nimport System.Environment (getArgs)\n\nfib :: Int -> Integer\nfib n = fibs !! n\n\nfibs :: [Integer]\nfibs = 0:1:zipWith (+) fibs (tail fibs)\n\nmain = do\n    argv <- getArgs\n    let n = read (argv !! 0) :: Int\n    print $ fib n\n```\n##Erlang\n\u4e0b\u624b\u306a\u8aac\u660e\u3092\u3059\u308b\u3068\u3059\u3054\u3044\u4eba\u306b\u6012\u3089\u308c\u3066\u3057\u307e\u3044\u305d\u3046\u306a\u30a2\u30fc\u30e9\u30f3\u3002\n\u52d5\u7684\u578b\u4ed8\u3051\u306a\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u3059\u3002\n\u4e26\u5217\u51e6\u7406\u601d\u8003\u3067\u5206\u6563\u51e6\u7406\u6307\u5411\u3067\u2026\u3002\n\u3059\u307f\u307e\u305b\u3093\u3001\u3082\u3046\u3053\u308c\u3050\u3089\u3044\u3067\u52d8\u5f01\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6012\u3089\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\u8d77\u52d5\u3059\u308b\u306e\u306b1\u79d2\u7a0b\u5ea6\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u308b\u306e\u304c\u3064\u3089\u3044\u3068\u304b\u3001\n\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u62e1\u5f35\u5b50\u304c\u300c.beam\u300d\u3063\u3066\u3060\u3063\u305b\u3047\u3068\u304b\u3001\n\u8a00\u3044\u307e\u305b\u3093\u304b\u3089\u3054\u3081\u3093\u306a\u3055\u3044\u3001\u3054\u3081\u3093\u306a\u3055\u3044\u3002\n\u6c5a\u3044\u30b3\u30fc\u30c9\u6652\u3057\u3066\u3054\u3081\u3093\u306a\u3055\u3044\u3002\n\n```erl:fibonacci.erl\n% \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Erlang\n-module(fibonacci).\n-export([main/1]).\n\nmain(Arg) ->\n    N = fib(list_to_integer(hd(Arg))),\n    io:fwrite(integer_to_list(N)).\n\nfib(0) -> 0;\nfib(1) -> 1;\nfib(N) -> fib(N - 2) + fib(N - 1).\n\n% example\n%    compile:\n%        erlc fibonacci.erl\n%    run:\n%        erl -noshell -run fibonacci main 39 -run init stop\n```\n\n##Rust\nMozilla\u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u4e26\u5217\u51e6\u7406\u304c\u5f97\u610f\u306a\u8a00\u8a9e\u3002\n\u3067\u3082\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306b\u306f\u4e26\u5217\u51e6\u7406\u306f\u4e0d\u8981\u3002\nSwift\u3092\u51cc\u3050\u901f\u5ea6\u3092\u51fa\u3057\u306a\u304c\u3089\u3001\u3044\u307e\u3044\u3061\u6ce8\u76ee\u3055\u308c\u306a\u3044\u8a00\u8a9e\u3002\n\u3057\u304b\u3082\u3061\u3087\u3063\u3068\u4f3c\u3066\u3044\u307e\u3059\u3002\n\n```rust:fib_rust.rs\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by rust\nuse std::env;\n \nfn fib(n: i64) -> i64 {\n    if n < 2 {\n        n\n    } else {\n        fib(n - 1)  + fib(n - 2)\n    }\n}\n\nfn main() {\n    if let Some(s) = env::args().nth(1) {\n        if let Ok(n) = s.parse::<i64>() {\n            println!(\"{}\", fib(n))\n        }\n    }\n}\n\n/*\n example\n    compile:\n        rustc -C opt-level=3 fib_rust.rs\n    run:\n        ./fib_rust 39\n*/\n```\n\n## **\u3053\u308c\u3088\u308a\u4ee5\u4e0b\u306fTIOBE\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u5916\u306e\u8a00\u8a9e**\n\n##Go\nGoogle\u8b39\u88fd\u306e\u8a00\u8a9e\u3002\u6700\u8fd1\u306f\u3042\u307e\u308a\u30cb\u30e5\u30fc\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u3044\u3044\u8a00\u8a9e\u306a\u3093\u3067\u3059\u3051\u3069\u306d\u3002\n\u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u306a\u304f\u30b7\u30f3\u30b0\u30eb\u30d0\u30a4\u30ca\u30ea\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u304c\u4f55\u6c17\u306b\u3059\u3054\u3044\u3002\n\n**\uff1c\u518d\u5e30\u95a2\u6570\u7248\uff1e**\n\n```go:fib_go.go\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Go\npackage main\n\nimport \"fmt\"\nimport \"flag\"\n\nfunc fib(n int) int {\n    if n < 2 {\n        return n\n    } else {\n         return fib(n-2) + fib(n-1)\n     }\n}\n\nfunc main() {\n    var n = flag.Int(\"n\", 0, \"usage\")\n    flag.Parse()\n    fmt.Println(fib(*n))\n}\n\n/*\n example\n    compile:\n        go build fib_go.go\n    run:\n        ./fib_go -n 39\n*/\n```\n\n**\uff1c\u30e1\u30e2\u5316\u95a2\u6570\u7248\uff1e**TakaakiFuruse \u69d8\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n```go:fib_go.go\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 \u30e1\u30e2\u5316 by Go\npackage main\n\nimport \"fmt\"\nimport \"flag\"\n\nfunc calcFib(n int) int {\n    fib := []int{0, 1}\n    for i := 1; i < n; i++ {\n        f := fib[len(fib)-1] + fib[len(fib)-2]\n        if f == n {\n            break\n        }\n        fib = append(fib, f)\n    }\n    return fib[len(fib)-1]\n}\n\nfunc main() {\n    var n int\n    flag.IntVar(&n, \"n\", 0, \"usage\")\n    flag.Parse()\n    fmt.Println(calcFib(n))\n}\n\n/*\n example\n    compile:\n        go build fib_go.go\n    run:\n        ./fib_go -n 39\n*/\n```\n##julia\nC\u3001C++\u3001Scheme \u3067\u5b9f\u88c5\u3055\u308c\u305f\u3061\u3087\u3063\u3068\u95a2\u6570\u578b\u8a00\u8a9e\u3002\nGoogle V8 \u3068\u540c\u7b49\u306e\u901f\u3055\u3002\nVM \u306e\u8d77\u52d5\u306e\u9045\u3055\u3092\u62b1\u3048\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6700\u8fd1\u306f\u304b\u306a\u308a\u6539\u5584\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u7814\u7a76\u8005\uff08\u306a\u3093\u306e\uff1f\uff09\u306e\u9593\u3067\u3058\u308f\u3058\u308f\u3068\u4eba\u6c17\u3092\u4e0a\u3052\u3066\u3044\u308b\u3089\u3057\u3044\u3067\u3059\u3002\n\n```jl:fib_julia.jl\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by julia\nfunction fib(n)\n    if n < 2\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend\n\nn = parse(Int32, ARGS[1])\nprintln(fib(n))\n\n#=\nexample\n    julia -O fibonacci.jl -- 39\n=#\n```\n\n\n##Maxima\nMathematica \u306b\u4f3c\u305f\u6570\u5f0f\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u4e2d\u3067\u306f\u552f\u4e00\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3067fib()\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u6e21\u3057\u65b9\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067eval\u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u3092\u6e21\u3059\u3068\u3044\u3046\u5371\u967a\u306a\u3084\u308a\u65b9\u3067\u59a5\u5354\u3002\n\n```fib_maxima.m\n/* \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Maxima */\nfib(n) := if n < 2 then n else fib(n - 2) + fib(n - 1);\n\n/*\nexample\n    run:\n        maxima --very-quiet --init-mac fibonacci.mac --batch-string=\"fib(10);\"\n*/\n```\n**\uff1c\u3044\u3084\u3041\u3001\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3042\u308b\u3093\u3060\u304b\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u66f8\u304b\u306a\u304f\u3066\u3044\u3044\u3093\u3058\u3083\u306d\uff1f\u7248\uff1e**\n\n```bash\nmaxima --very-quiet --batch-string=\"fib(10);\"\n```\n\u3053\u308c\u306a\u3089\u3001\u5f15\u6570\u304c100\u3067\u30821000\u3067\u3082\u4e00\u77ac\u3067\u7d50\u679c\u304c\u3067\u307e\u3059\u3002\n\n##Wolfram (Mathematica)\n\u6559\u80b2\u5411\u3051\u6570\u5f0f\u51e6\u7406\u754c\u3067\u306f\u6700\u5f37\u3068\u5642\u306eMathematica\u3002\n\u4e00\u822c\u5411\u3051\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u9ad8\u4fa1\u306a\u305f\u3081\u5b66\u6821\u306e\u6388\u696d\u4ee5\u5916\u3067\u306f\u3042\u307e\u308a\u4f7f\u308f\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n**\uff1c\u518d\u5e30\u95a2\u6570\u7248\uff1e**\n\n```fib_mathematica.m\n(* \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by wolfram *)\nfib[0] := 0\nfib[1] := 1\nfib[n_] := fib[n - 2] + fib[n - 1]\n\nn = ToExpression[$ScriptCommandLine[[2]]]\nPrint[fib[n]]\n\n(* Example *)\n(* Run: *)\n(*  WolframScript -script fibonacci.m 30 *)\n```\n**\uff1c\u30e1\u30e2\u5316\u95a2\u6570\u7248\uff1e**\n\u518d\u5e30\u95a2\u6570\u3092\u3061\u3087\u3063\u3068\u3044\u3058\u3063\u305f\u3060\u3051\u3002\u3053\u3046\u3044\u3046\u3068\u3053\u308d\u304c\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u697d\u3057\u3044\u3068\u3053\u308d\u3002\n\n```fib_mathematica.m\n(* \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by wolfram *)\nfib[0] := 0\nfib[1] := 1\nfib[n_] := fib[n] = fib[n - 2] + fib[n - 1]\n\nn = ToExpression[$ScriptCommandLine[[2]]]\nPrint[fib[n]]\n\n(* Example *)\n(* Run: *)\n(*  WolframScript -script fibonacci.m 30 *)\n```\n\n##Nim\uff08\u65e7Nimrod\uff09\n\u65e5\u672c\u8a9e\u7248\u306eWikipedia\u304c\u7121\u3044\u3068\u3044\u3046\u73cd\u3057\u3044\u8a00\u8a9e\uff082016\u5e741\u6708\u73fe\u5728\uff09\n(2016\u5e748\u6708\u3001Wikipedia\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002\uff09\nC\u7d4c\u7531\u3067\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u3092\u5410\u304f\u3089\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u4f55\u6545\u304bC\u3088\u308a\u901f\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\u3044\u3064\u304b\u4f7f\u3044\u305f\u3044\u3002\u3044\u3064\u304b\u306d\u3002\n\n```nim:fib_nim.nim\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Nim\nimport os\nimport strutils\n\nproc fib(n: int): int =\n    if n < 2:\n        return n\n    else:\n        return fib(n - 2) + fib(n - 1)\n\nvar n = parseInt(paramStr(1))\necho(fib(n))\n\ndiscard \"\"\"\n    example\n        compile:\n            nim compile --opt:[none|speed|size] fib_nim.nim\n        run:\n            ./fib_nim 39\n\"\"\"\n```\n\n##OCaml\n\u6d77\u5916\u3067\u306f\u306a\u305c\u304b\u4eba\u6c17\u306e\u306a\u3044\u95a2\u6570\u578b\u8a00\u8a9e\u3002\n\u30b9\u30af\u30ea\u30d7\u30c8\u30e2\u30fc\u30c9\u3067\u3082\u305d\u3053\u305d\u3053\u901f\u3044\u3051\u3069\u3001ocamlopt \u3067\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u3081\u3063\u3055\u901f\u304f\u306a\u308b\u3002\nOcaml \u3092\u4f7f\u3063\u3066WEB\u30b5\u30a4\u30c8\u3092\u7acb\u3061\u4e0a\u3052\u308b\u306e\u304c\u5922\u3002\n\n```ocaml:fib_ocaml.ml\n(* \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by OCaml *)\nlet rec fib(n) =\n    if n < 2 then\n        n\n    else\n        fib(n - 2) + fib(n - 1)\n    ;;\n\nlet n = int_of_string Sys.argv.(1);;\nprint_int(fib n);;\n\n(* example\n    interpreter:\n        ocaml fib.ml\n    compile:\n        ocamlc -o fib_ocaml fib.ml\n    compile (native):\n        ocamlopt -o fib_ocamlopt fib.ml\n*)\n```\n\n##Smalltalk\n\u6b74\u53f2\u306f\u53e4\u304f\u4ed6\u306e\u8a00\u8a9e\u306e\u30e2\u30c7\u30eb\u3068\u3055\u308c\u306a\u304c\u3089\u3082\u3001\u30af\u30bb\u306e\u5f37\u3044\u6587\u6cd5\u304c\u500b\u6027\u7684\u306a\u305f\u3081\u666e\u53ca\u3057\u3066\u3044\u308b\u3068\u306f\u8a00\u3044\u304c\u305f\u3044\u3002\n\u5358\u306a\u308b\u8a00\u8a9e\u3060\u3051\u3067\u306f\u306a\u304f\u300cSmalltalk\u74b0\u5883\u300d\u3068\u3057\u3066\u306e\u5b9f\u88c5\u3055\u308c\u3066\u304d\u305f\u305f\u3081\u3001\u4e00\u822c\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u3088\u3046\u306a\u666e\u53ca\u306e\u4ed5\u65b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u305d\u306e\u300c\u74b0\u5883\u300d\u3092\u5b8c\u5168\u306b\u7121\u8996\u3057\u305fGNU Smalltalk \u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```smalltalk:fib_gst.st\n\"\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Smallalk\"\nInteger extend [\n    fib [\n        self < 2\n        ifTrue: [ ^self ]\n        ifFalse: [ ^(self - 2) fib + (self - 1) fib ].\n    ]\n]\n\nSmalltalk arguments first asInteger fib printNl.\n\n\"example\n    run:\n        gst fibonacci.st -a 39\n\"\n```\n\n##Forth\n\u30b9\u30bf\u30c3\u30af\u578b\u8a00\u8a9e\u3002\u5f8c\u7f6e\u8a18\u6cd5\u306b\u306a\u308b\u305f\u3081\u3001\u3071\u3063\u3068\u898b\u4f55\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u512a\u3057\u3044\u8a00\u8a9e\u3002\n\u3053\u308c\u304c\u66f8\u3051\u305f\u3089\u307f\u3093\u306a\u304b\u3089\u300c\u5909\u614b\u300d\u306e\u79f0\u53f7\u304c\u3082\u3089\u3048\u308b\u3042\u308a\u304c\u305f\u3044\u8a00\u8a9e\u3002\n\n```fib_forth.fs\n\\ \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by forth\n\n: fib ( n )\n    dup 2 u< if exit then\n    1- dup recurse swap 1- recurse + ;\n\nfib . cr\nbye\n\n(\n    example\n        run:\n            gforth -e 39 fibonacci.fs\n            gforth-fast -e 39 fibonacci.fs\n)\n```\n\n##Mind\n\u30b9\u30bf\u30c3\u30af\u578b\u8a00\u8a9e\u306e\u7279\u5fb4\u3092\u3046\u307e\u304f\uff08\uff1f\uff09\u5229\u7528\u3057\u305f\u65e5\u672c\u8a9e\u306b\u3088\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3002\n\u300c\u3074\u3085\u3046\u592a\u65e5\u672c\u8a9eBASIC\u300d\u4ee5\u6765\u306e\u885d\u6483\u3092\u53d7\u3051\u305f\u8a00\u8a9e\u3002\n\u3057\u3070\u3089\u304f\u958b\u767a\u304c\u6b62\u307e\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6700\u8fd1Android\u3067\u52d5\u304b\u3059\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308b\u3089\u3057\u3044\u3067\u3059\u3002\n\n```fib_mind.src\n\uff08\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1 by Mind\uff09\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3068\u306f\u3000\uff08\u6570\u5024\u3000\u2192\u3000\u6570\u5024\uff09\n    \u50241\u306f\u3000\u5909\u6570\n    \u50241\u306b\u3000\u5165\u308c\n    \u50241\u304c\u30001\u3000\u4ee5\u4e0b\u3000\u306a\u3089\u3070\n        \u50241\u3092\u3000\u8fd4\u3059\n    \u3055\u3082\u306a\u3051\u308c\u3070\n        \u50241\u304b\u3089\u30002\u3092\u3000\u5f15\u304d\u3000\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3057\n        \u50241\u304b\u3089\u30001\u3092\u3000\u5f15\u304d\u3000\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3057\n        \u8db3\u3057\u3066\u3000\u8fd4\u3059\n    \u3064\u304e\u306b\n    \u3002\n \n\u30e1\u30a4\u30f3\u3068\u306f\n    \u8d77\u52d5\u5f15\u6570\uff08\uff11\uff09\u3092\u3000\u6570\u5024\u5909\u63db\u3057\u3066\u3000\u771f\uff1f\u3000\u306a\u3089\u3070\n        \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3057\u3066\n        \u6570\u5024\u8868\u793a\n    \u3064\u304e\u306b\n    \u3002\n\n\u203bexample\n\u203b   compile:\n\u203b      mind fib_mind.src file\n\u203b   run:\n\u203b       ./fib_mind 39\n```\n\n##APL\n\u30cd\u30bf\u8a00\u8a9e\uff08Brainf**k\u7b49\uff09\u3092\u9664\u304d\u3001\u5909\u614b\u5ea6\u3067\u306f\u4ed6\u306e\u8ffd\u968f\u3092\u8a31\u3055\u306a\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\uff08\uff1f\uff09\u8a00\u8a9e\u3002\n\u7279\u6b8a\u306a\u8a18\u53f7\u3092\u591a\u7528\u3059\u308b\u305f\u3081\u5165\u529b\u3059\u308b\u3053\u3068\u3055\u3048\u56f0\u96e3\u3002\nAPL\u3067\u4f7f\u7528\u3059\u308b\u8a18\u53f7\u306fUTF-8\u306b\u767b\u9332\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u4f3c\u305f\u8a18\u53f7\u304c\u591a\u304f\u5165\u529b\u306e\u96e3\u3057\u3055\u306f\u6539\u5584\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u307e\u305f\u8868\u793a\u3055\u308c\u3066\u3044\u3066\u3082\u305d\u308c\u304c\u6587\u5b57\u5316\u3051\u306a\u306e\u304b\u6b63\u3057\u3044\u3082\u306e\u306a\u306e\u304b\u306fAPL\u3092\u30de\u30b9\u30bf\u30fc\u3057\u306a\u3044\u3068\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\u7d50\u5c40\u306f\u30ad\u30fc\u30dc\u30fc\u30c9\u3067\u5165\u529b\u53ef\u80fd\u306aJ\u8a00\u8a9e\u304c\u958b\u767a\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u5909\u614b\u9053\u3092\u7a81\u304d\u9032\u3093\u3067APL\u3092\u30de\u30b9\u30bf\u30fc\u3057\u3066\u6b32\u3057\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n###GNU APL\n**\uff1c\u518d\u5e30\u95a2\u6570\u7248\uff1e**\n\n```fib_apl.apl\n#!/usr/bin/apl --script\n\u2207R\u2190fib N\n  \u2192L+(N>1)\n  L:R\u2190N \u22c4 \u21920\n  R\u2190(fib (N - 2)) + fib (N - 1)\n\u2207\n\nfib \u234e\u2355\u00af1\u2191\u2395ARG\n\n)OFF\n\n\u235d example\n\u235d   run:\n\u235d       ./fibonacci.apl -- 20\n```\n**\uff1c\u884c\u5217\u306b\u3088\u308b\u6f38\u5316\u5f0f\u7248\uff1e**\n\u6697\u53f7\u5316\u5ea6\u3055\u3089\u306bUP\n\n```fib_apl.apl\n#!/usr/bin/apl --script\n\u2207R\u2190fib N\n  R\u2190\u21910 1\u2193\u2191+.\u00d7/N/\u22822 2\u23741 1 1 0\n\u2207\n\nfib \u234e\u2355\u00af1\u2191\u2395ARG\n\n)OFF\n\n\u235d example\n\u235d   run:\n\u235d       ./fibonacci.apl -- 20\n```\n\n###Dyalog\u30fbNASR2000\nfib\u2190{\u2375\u22642:1 \u22c4 (\u2207\u2375-1)+\u2207\u2375-2}\n\u3067\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\n##Pike\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30af\u30bb\u306b\u9759\u7684\u578b\u4ed8\u3051\u306a\u8a00\u8a9e\u3067\u3059\u3002C\u3063\u307d\u3044\u3067\u3059\u3002\n\u305d\u306e\u304a\u304b\u3052\u306a\u306e\u304b\u305d\u3053\u305d\u3053\u901f\u3044\u3067\u3059\u3002\n\u4ee5\u524d\u304b\u3089Ruby\u3068\u540c\u3058\u3050\u3089\u3044\u306e\u901f\u5ea6\u3092\u7dad\u6301\u3057\u3066\u304a\u308a\u3001\u3080\u3057\u308dRuby\u304c\u6307\u6a19\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u306f\u3068\u601d\u308f\u305b\u308b\u307b\u3069\u3002\n\n```fibonacci.pk\n// fibonacci by Pike\nint fib(int n)\n{\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n-2)+fib(n-1);\n    }\n}\nint main(int argc, array(string)argv)\n{\n    int n;\n    n = (int)argv[1];\n    write(\"%d\", fib(n));\n    return 0;\n}\n\n/*\n    example\n        run:\n            pike fibonacci.pk 39\n*/\n```\n##Icon\n\u30b4\u30fc\u30eb\u6307\u5411\u8a55\u4fa1\u3068\u3044\u3046\u300c\u6210\u529f\u300d\u304b\u300c\u5931\u6557\u300d\u306b\u3088\u308b\u5236\u5fa1\u69cb\u9020\u3092\u7279\u5fb4\u3068\u3059\u308b\u8a00\u8a9e\u3002\n\u771f\u507d\u5024\u306b\u3088\u308b\u8a55\u4fa1\u3068\u3069\u3046\u9055\u3046\u306e\u304b\u3068\u805e\u304b\u308c\u308b\u3068\u3061\u3083\u3093\u3068\u7b54\u3048\u3089\u308c\u307e\u305b\u3093\u304c\u3001\n\u300cif a < b < c\u300d\u3068\u304b\u6c17\u6301\u3061\u60aa\u3044if\u6587\u304c\u66f8\u3051\u307e\u3059\u3002\n\u4ed6\u306b\u3082\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u304c\u5f37\u529b\u3060\u3063\u305f\u308a\u3001\u30ea\u30b9\u30c8\u3084\u9023\u60f3\u914d\u5217\u3001\u96c6\u5408\u3001\u30ec\u30b3\u30fc\u30c9\u578b\u306a\u3069\u30c7\u30fc\u30bf\u69cb\u9020\u3082\u8c4a\u5bcc\u3002\n\u624b\u7d9a\u304d\u305d\u306e\u3082\u306e\u3092\u5909\u6570\u306b\u3076\u3061\u3053\u3081\u308b\u300c\u30b3\u30fb\u30a8\u30af\u30b9\u30d7\u30ec\u30c3\u30b7\u30e7\u30f3\u300d\u3068\u3044\u3046\u95a2\u6570\u578b\u8a00\u8a9e\u3063\u307d\u3044\u3053\u3068\u3082\u3067\u304d\u308b\u305d\u3046\u306a\u306e\u3067\u3059\u304c\u3001\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u305d\u3082\u305d\u3082\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u305d\u308c\u3089\u306e\u7279\u5fb4\u3092\u307e\u3063\u305f\u304f\u6d3b\u304b\u305b\u3066\u307e\u305b\u3093\u3002\n\u9762\u767d\u305d\u3046\u306a\u8a00\u8a9e\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3002\n\nicont\u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u306b\u3067\u304d\u307e\u3059\u304c\u3001\u901f\u5ea6\u306f\u307e\u3063\u305f\u304f\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\n\u306a\u304a\u3001Wikipedia\u306a\u3069\u306e\u30ea\u30f3\u30af\u304c\u53e4\u304f\u306a\u3063\u3066\u3044\u308b\u6a21\u69d8\u3002\nhttp://www2.cs.arizona.edu/icon/\n\u2191\u304c\u751f\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u30a2\u30ea\u30be\u30ca\u5927\u5b66\u306e\u30b5\u30a4\u30c8\u3067\u300cPast Research Projects\u300d\u306b\u5165\u3063\u3061\u3083\u3063\u3066\u307e\u3059\u304c\u3001\u4f55\u304b\u3042\u3063\u305f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u30b5\u30a4\u30c8\u306e\u66f4\u65b0\u306f2016\u5e74\u73fe\u5728\u3082\u7d9a\u3044\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n```fibonacci.icn\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\nprocedure fibonacci(n)\n    if n < 2 then\n        return n\n    else\n        return fibonacci(n - 2) + fibonacci(n - 1)\nend\n\nprocedure main(args)\n    local n\n    n := args[1]\n    write(fibonacci(n))\nend\n\n# example\n#    interpreter:\n#        icon fibonacci.icn 39\n#    translator:\n#        icont fibonacci.icn\n#        ./fibonacci 39\n```\nQiita\u306e\u30b3\u30fc\u30c9\u30cf\u30a4\u30e9\u30a4\u30c8\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n##Occam\n\u82f1\u8a9e\u3082\u65e5\u672c\u8a9e\u3082\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u5c11\u306a\u3044\u4e0a\u306b\u3001\u3081\u3061\u3083\u304f\u3061\u3083\u691c\u7d22\u3057\u3065\u3089\u3044\u3067\u3059\u3002\n\u305f\u3076\u3093\u300c\u7d42\u308f\u3063\u305f\u8a00\u8a9e\u300d\u3067\u3059\u3002\n1980\u5e74\u4ee3\u306b\u6b21\u4e16\u4ee3\u306e\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u3057\u3066\u4e26\u884c\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306b\u7279\u5316\u3057\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3042\u308b\u300c\u30c8\u30e9\u30f3\u30b9\u30d4\u30e5\u30fc\u30bf\u300d\u306e\u305f\u3081\u306b\u958b\u767a\u3055\u308c\u305f\u300cCSP\u300d\u3092\u3088\u308a\u5b9f\u7528\u7684\u306b\u62e1\u5f35\u3057\u305f\u8a00\u8a9e\u3067\u3059\u3002\n\u305d\u3046\u3044\u3063\u305f\u51fa\u81ea\u3086\u3048\u4e26\u5217\u51e6\u7406\u304c\u5f97\u610f\u3067\u3001\u300cPAR\u300d\u3068\u304b\u300cSEQ\u300d\u3068\u304b\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u7a4d\u6975\u7684\u306b\u4e26\u5217\u51e6\u7406\u3068\u9010\u6b21\u51e6\u7406\u3092\u6307\u5b9a\u3067\u304d\u305f\u308a\u3059\u308b\u3068\u3053\u308d\u3082\u9762\u767d\u3044\u3067\u3059\u3002\n\u4e26\u5217\u51e6\u7406\u3068\u30d7\u30ed\u30bb\u30b9\u9593\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u308a\u53d6\u308a\u4ee5\u5916\u306f\u3001\u666e\u901a\u306b\u624b\u7d9a\u304d\u578b\u306e\u8a00\u8a9e\u3067\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u304c\u5927\u6587\u5b57\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u6642\u4ee3\u3092\u611f\u3058\u3055\u305b\u307e\u3059\u3002\n\u30d6\u30ed\u30c3\u30af\u306fPython\u540c\u69d8\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u5f62\u5f0f\u3067\u3059\u304c\u3001\u304d\u3063\u3061\u308a2\u6587\u5b57\u305a\u3064\u3058\u3083\u306a\u3044\u3068\u6012\u3089\u308c\u307e\u3059\u3002\n\n\u4e26\u5217\u51e6\u7406\u5411\u3051\u306e\u8a00\u8a9e\u3068\u3057\u3066\u5c06\u6765\u518d\u3073\u6ce8\u76ee\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3057\u3001\u3055\u308c\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n###KRoc (Occam-\u03c0)\n\u30b1\u30f3\u30c8\u5927\u5b66\u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u305fOccam\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3002\n\u958b\u767a\u306f\u7d42\u308f\u3063\u3066\u308b\u3063\u307d\u3044\u3067\u3059\u304c\u3001\u305f\u307e\u306bgit\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3084\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u306bPython\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001Python3\u3067\u52d5\u304d\u307e\u305b\u3093\u3002\n\u3044\u3089\u3063\u3068\u3057\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u308b\u306e\u306b\u632b\u6298\u3057\u307e\u3057\u305f\u3002\n\n```occam:fibonacci.occ\n-- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Occam\n#INCLUDE \"course.module\"\n\nINT REC FUNCTION fib (VAL INT n)\n  INT res:\n  VALOF\n    IF\n      n < 2\n        res := n\n      TRUE\n        res := fib (n - 2) + fib (n - 1)\n    RESULT res\n:\n\nPROC fibonacci (CHAN BYTE out)\n  out.int (fib(39), 0, out)\n:\n\n-- example\n--  compile:\n--   occbuild --program fibonacci.occ\n--   or\n--   kroc fibonacci.occ\n--  run\n--   ./fibonacci 39\n```\n##Chapel\n\u30a2\u30e1\u30ea\u30ab\u56fd\u9632\u9ad8\u7b49\u7814\u7a76\u8a08\u753b\u5c40\u306e\u9ad8\u751f\u7523\u6027\u8a08\u7b97\u6a5f\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\n\u30b9\u30fc\u30d1\u30fc\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306eCRAY\u3067\u3059\u3002\n\u3082\u3046\u30b3\u30ec\u3060\u3051\u3067\u5f37\u3046\u305d\u3046\u3067\u3057\u3087\uff1f\n\u300cChapel\u300d\u306f\u300cCascade High Productivity Language\u300d\u306e\u7565\u3067\u3001\u65e5\u672c\u8a9e\u306b\u3059\u308b\u3068\n\u300c\u591a\u6bb5\u9ad8\u751f\u7523\u6027\u8a00\u8a9e\u300d\u3060\u305d\u3046\u3067\u3059\u3002\n\u53a8\u4e8c\u30b4\u30b3\u30ed\u306b\u3069\u30b9\u30c8\u30e9\u30a4\u30af\u3067\u3059\u3002\n\n\u4e26\u5217\u8a08\u7b97\u6a5f\u300cCascade\u300d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u52b9\u7387\u3092\u6539\u5584\u3059\u308b\u305f\u3081\u306b\u4f5c\u3089\u308c\u305f\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002\n\u306a\u306e\u3067\u524d\u8ff0\u306eOccam\u540c\u69d8\u3001\u4e26\u5217\u8a08\u7b97\u5411\u304d\u306e\u8a00\u8a9e\u3067\u3059\u3002\n\u3082\u3061\u308d\u3093\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3064\u3044\u3066\u306f\u305d\u3053\u3093\u3068\u3053\u307e\u3063\u305f\u304f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u52b9\u7387\u3092\u4e0a\u3052\u308b\u305f\u3081\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3084\u73fe\u4ee3\u7684\u3067\u898b\u6163\u308c\u305f\u6587\u6cd5\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u786c\u6d3e\u306a\u5272\u306b\u306f\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u81ea\u4f53\u306f2010\u5e74\u306b\u7d42\u4e86\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u73fe\u5728\u3082\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u958b\u767a\u306f\u7d76\u8cdb\u7d99\u7d9a\u4e2d\u3067\u3001CRAY\u793e\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3082\u3063\u3068\u6ce8\u76ee\u3055\u308c\u3066\u3082\u3044\u3044\u8a00\u8a9e\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u2026\u3002\n\n\u3057\u304b\u3057\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u30683.1MB\u3042\u308a\u307e\u3059\u3002\n\n```chpl:fibonacci.chpl\n// \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Chapel\nproc fib(n: int): int {\n    if (n < 2) {\n        return n;\n    } else {\n        return fib(n - 2) + fib(n - 1);\n    }\n}\n\nproc main(args: [] string) {\n    var n: int = args[1]:int;\n    writeln(fib(n));\n}\n\n/*\n    example\n        compile:\n            chpl -o fibonacci fibonacci.chpl\n        run:\n            ./fibonacci 39\n*/\n```\n\n## Oz (Mozart)\nOz\u306f\u30de\u30eb\u30c1\u30d1\u30e9\u30c0\u30a4\u30e0\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u900f\u904e\u306a\u5206\u6563\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u3067\u304d\u308b\u3089\u3057\u3044\u3002\u3088\u304f\u308f\u304b\u3089\u3093\u3002\n\u6bd4\u8f03\u7684\u65b0\u3057\u3044\uff08\u6700\u521d\u306e\u8a2d\u8a08\u304c1991\u5e74\uff09\u8a00\u8a9e\u306a\u306e\u3067\u3001\u5b9f\u7528\u4e91\u3005\u3088\u308a\u306f\u3001\u4eca\u5f8c\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u53ef\u80fd\u6027\u306e\u4e00\u3064\u3068\u3057\u3066\u898b\u308b\u5206\u306b\u306f\u9762\u767d\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3002\n\u305f\u3060\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u5c11\u306a\u304f\u3001\u3084\u3063\u3068\u305f\u3069\u308a\u7740\u3044\u3066\u3082\u307b\u3068\u3093\u3069\u304cemacs\u306e\u8aac\u660e\u3060\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n###Mozart2\nOz\u306e\u9ad8\u54c1\u4f4d\u306a\u5b9f\u88c5\u304cMozart\u3002Mozart2\u304c\u51fa\u3066\u3044\u308b\u304c\u3001\u307e\u3060Alpha\u7248\u3002\u3068\u306f\u3044\u3046\u3082\u306e\u306e\u305d\u3053\u305d\u3053\u52d5\u304f\u3088\u3046\u3067\u3059\u3002\nVer.1 \u306fLLVM\u3092\u4f7f\u3063\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u304c\u3001Ver.2\u306f\u3069\u3046\u306a\u3093\u3067\u3057\u3087\u3046\uff1f\u308f\u304b\u3093\u306a\u3044\u3002\nVer.2 alpha \u3067\u306f\u3001ozc -x \u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3082\u5358\u72ec\u3067\u5b9f\u884c\u3067\u304d\u308b\u5f62\u306b\u306f\u306a\u3089\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u300c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u300d\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\uff08\u3067\u3082\u30a8\u30b0\u30bc\u30ad\u30e5\u30fc\u30c8\u30d3\u30c3\u30c8\u306f\u7acb\u3063\u3066\u308b\uff09\nozc -c \u3068 ozc -x \u3067functor \u306e\u66f8\u304d\u65b9\u304c\u5fae\u5999\u306b\u9055\u3046\u306e\u306f\u79c1\u304c\u308f\u304b\u3063\u3066\u306a\u3044\u305b\u3044\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n```oz:fibonacci.oz\n% \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570  by Mozart2(Oz)\nfunctor\n\nimport\n    System\n    Application\n\nprepare\n  fun {Fib N}\n    if N < 2 then\n      N\n    else\n      {Fib N - 2} + {Fib N - 1}\n    end\n  end\n\ndefine\n  N in\n    [N] = {Application.getArgs plain}\n    {System.showInfo {Fib {String.toInt N}}}\n    {Application.exit 0}\nend\n\n/*\n    example\n        compile:\n            ozc -c fibonacci.oz\n        run:\n            ozengine fibonacci.ozf 39\n*/\n```\nfun {Fib N] \u3092 fun lazy {Fib N} \u306b\u66f8\u304d\u63db\u3048\u308b\u3068\u9045\u5ef6\u8a55\u4fa1\u306e\u95a2\u6570\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3060\u3068\u9045\u304f\u306a\u3063\u3061\u3083\u3044\u307e\u3057\u305f\u3002\n\n##Tcl\nTcl \u306f\u3059\u3063\u3054\u3044\u6709\u80fd\u306a\u30b7\u30a7\u30eb\u3067\u3059\u3002\n\u307e\u305a\u3001\u8a08\u7b97\u3055\u305b\u3088\u3046\u3068\u304b\u601d\u3063\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\n\nTk\u3068\u5408\u308f\u305b\u308c\u3070\u3055\u304f\u3063\u3068GUI\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4f5c\u308c\u307e\u3059\u3002\n\u3057\u304b\u3082Linux \u3068 Windows \u3068\u3067\u307b\u307c\u540c\u3058\u30bd\u30fc\u30b9\u3067\u3002\n\n\u3067\u3082\u3001\u8a08\u7b97\u3055\u305b\u307e\u3059\u3002\n\n\u30b3\u30e1\u30f3\u30c8\u30d6\u30ed\u30c3\u30af\u306e\u66f8\u304d\u65b9\u304c\u5f37\u70c8\u3067\u3059\u3002\uff08\u516c\u5f0f\u306a\u66f8\u304d\u65b9\u306e\u4e00\u3064\uff09\n\n\u300ctcl::mathfunc::\u300d\u3092\u3064\u3051\u306a\u3044\u3068\u518d\u5e30\u547c\u3073\u51fa\u3057\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n10\u5206\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\n\n```tcl:fibonacci.tcl\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by Tcl\nproc tcl::mathfunc::fib {n} {\n    if {$n < 2} {\n        return $n\n    } else {\n        return [expr fib([expr {$n - 1}]) + fib([expr {$n - 2}])]\n    }\n}\n\nset n [lindex $argv 0]\nputs [expr fib($n)]\n\nif 0 {\n    example\n        run:\n            tclsh fibonacci.tcl 10\n}\n```\n\n#\u304a\u307e\u3051\n##dc\n\u3053\u308c\u307e\u305f\u691c\u7d22\u3057\u306b\u304f\u3044\u8a00\u8a9e\uff1f\u3067\u3059\u304c\u3001Linux\u3067\u307b\u307c\u6a19\u6e96\u3067\u3064\u3044\u3066\u304f\u308bRPN\uff08\u9006\u30dd\u30fc\u30e9\u30f3\u30c9\u8a18\u6cd5\uff09\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u8a08\u7b97\u6a5f\u3067\u3059\u3002\u518d\u5e30\u53ef\u80fd\u306a\u30de\u30af\u30ed\u3082\u66f8\u3051\u307e\u3059\u3002\n\u30ec\u30b8\u30b9\u30bf\u306e\u30bb\u30fc\u30d6\u3068\u30ed\u30fc\u30c9\u304c\u524d\u7f6e\u8a18\u6cd5\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u6c17\u306b\u5165\u308a\u307e\u305b\u3093\u304c\u2026\u3002\ndc\u3092\u4f7f\u3063\u305f\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u307e\u3060\u898b\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u9650\u308a\u306a\u304f\u30cd\u30bf\u8a00\u8a9e\u3067\u3059\u3057\u3001\u307e\u3041\u3001\u3084\u308b\u3084\u3064\u306f\u3044\u306a\u3044\u3067\u3057\u3087\u3046\u3051\u3069\u3002\n\u9045\u3044\u3067\u3059\u3002\n\n```dc:fibonacci.dc\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 by dc\nsa\n[2Q] s.\n[d 2 >. 1 - d lfx r 1 - lfx +] sf\nla lfx p\n\n# example\n#    run:\n#        dc -e 30 fibonacci.dc\n```\n\n#\u5b9f\u884c\u901f\u5ea6\u6bd4\u8f03\n\u30b7\u30b9\u30c6\u30e0\u69cb\u6210\nCPU\uff1aIntel(R) Core(TM) i7-3930K CPU @ 3.20GHz\n\u30e1\u30e2\u30ea\uff1a32GB\uff08\u901f\u5ea6\u3068\u304b\u5fd8\u308c\u307e\u3057\u305f\uff09\nOS\uff1aArch Linux Kernel-4.4.1 SMP x86_64\n\n\u982d\u306e\u60aa\u3044\u518d\u5e30\u95a2\u6570\u306739\u756a\u76ee\u306e\u5024\u300c63,245,986\u300d\u3092\u6c42\u3081\u308b\u6642\u9593\u3067\u3059\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u9069\u5f53\u306b\u4f55\u7a2e\u985e\u304b\u8a66\u3057\u3066\u901f\u304b\u3063\u305f\u3082\u306e\u3092\u63a1\u7528\u3057\u307e\u3057\u305f\u3002\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u30b3\u30b9\u30c8\u3050\u3089\u3044\u3057\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3002\n\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3060\u3068\u5927\u4f53\u77ac\u6bba\u306a\u306e\u3067\u9762\u767d\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\n|\u9806\u4f4d|\u8a00\u8a9e|\u30d0\u30fc\u30b8\u30e7\u30f3|\u5b9f\u884c\u6642\u9593|\n|----------:|:----------|:----------:|----------:|\n|1|Fortran (gfortran -O3)|5.3.0|0.146 sec|\n|2|D (gdc -O3)|5.3.0|0.179 sec|\n|3|Nim (-d:release)|0.12.0|0.184 sec|\n|3|Basic (fbc -O3)|1.04|0.184 sec|\n|5|Ada (gnat -O3)|5.3.0|0.194 sec|\n|6|C++ (g++ -O3)|5.3.0|0.252 sec|\n|7|C (gcc -O3)|5.3.0|0.255 sec|\n|8|OCaml (ocamlopt)|4.02.3|0.302 sec|\n|9|Java (Open JDK)|1.8.0|0.303 sec|\n|10|C (clang -O)|3.7.0|0.357 sec|\n|11|Rust (rustc -C opt-level=3)|1.5.0|0.358 sec|\n|12|Swift (swiftc -O)|2.2-dev|0.361 sec|\n|13|Go|1.5.2|0.388 sec|\n|14|Crystal (--release)|0.10.1|0.395 sec|\n|15|Pascal (fpc -O4)|3.0.0|0.405 sec|\n|16|Dart|1.16.0|0.436 sec|\n|17|C# (mono -optimize+)|2.2.2.0|0.442 sec|\n|18|Basic (mono /optimize+)|0.0.0.5943|0.485 sec|\n|19|Scala|2.11.8|0.490 sec|\n|20|D (dmd -O -inline)|DMD64 v2.069|0.513 sec|\n|21|JavaScript (SpiderMonkey)|38.1|0.537 sec|\n|22|Haskell (ghc -O2)|7.10.3|0.570 sec|\n|23|julia (-O)|0.4.5|0.711 sec|\n|24|JavaScript (V8)|4.9.170|0.845 sec|\n|25|Lua (luajit)|2.0.4|0.897 sec|\n|26|Chapel|1.13.1|0.959 sec|\n|27|PHP (hhvm)|3.13.1|1.021 sec|\n|28|Groovy|2.4.5|1.287 sec|\n|29|Lisp (sbcl)|1.3.0|1.551 sec|\n|30|OCaml (script)|4.02.3|3.389 sec|\n|31|Erlang (erlc)|19.0.3|4.346 sec|\n|32|Forth (gforth-fast)|0.7.3|4.792 sec|\n|33|Pike|8.0.182|7.205 sec|\n|34|Mind|7.20|7.325 sec|\n|35|PHP|7.0.1|7.735 sec|\n|36|Smalltalk (gst)|3.2.5|8.098 sec|\n|37|Prolog (gplc)|1.4.4|8.305 sec|\n|38|Ruby|2.3.0p0|8.417 sec|\n|39|Lua|5.3.2|10.147 sec|\n|40|Occam (KRoC)|1.6.0|11.510 sec|\n|41|Python|2.7.11|20.680 sec|\n|42|Python|3.5.1|23.375 sec|\n|43|Icon|9.5.1|28.256 sec|\n|44|Oz(Mozart)|2.0.0 aplha|36.134 sec|\n|45|Perl|5.22.1|56.042 sec|\n\n\u3053\u306e\u8fba\u307e\u3067\u306739\u756a\u76ee\u306e\u5024\u3092\u6c42\u3081\u308b\u306e\u306f\u632b\u6298\u3057\u307e\u3057\u305f\u3002\n\u3053\u3053\u4ee5\u4e0b\u306f\u4e88\u9078\u843d\u3061\u3067\u3059\u3002\n30\u756a\u76ee\u306e\u5024\u300c832,040\u300d\u3092\u6c42\u3081\u305f\u7d50\u679c\u3067\u3059\u3002\n\u6bd4\u8f03\u306e\u305f\u3081Perl\u3067\u306e\u5b9f\u884c\u6642\u9593\u3082\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n|\u9806\u4f4d|\u8a00\u8a9e|\u30d0\u30fc\u30b8\u30e7\u30f3|\u5b9f\u884c\u6642\u9593|\n|----------:|:----------|:----------:|----------:|\n|45|Perl|5.22.1|0.843 sec|\n|46|R|3.2.3|2.022 sec|\n|47|Wolfram (Mathematica)|10.3|2.148 sec|\n|48|dc|1.3.95|2.768 sec|\n|49|Tcl|8.6.6|3.262 sec|\n|50|APL (GNU APL)|1.5|6.482 sec|\n|51|Maxima|5.37.2|10.366 sec|\n|52|Perl6 (Rakudo)|2015.12|10.672 sec|\n|53|Snap! (FireFox 45.0a2)|4.0.4|21.1 sec|\n|54|Octave (octave-cli)|4.0.0|35.544 sec|\n\n\u6570\u5024\u51e6\u7406\u3001\u6570\u5f0f\u51e6\u7406\u306e\u8a00\u8a9e\u304c\u4f4e\u3044\u9806\u4f4d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3082\u305d\u3082\u3053\u306e\u8fba\u306e\u8a00\u8a9e\u306f\u3001\u30a2\u30db\u307f\u305f\u3044\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u901f\u5ea6\u3092\u6c42\u3081\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u305d\u308c\u3092\u88dc\u3063\u3066\u3042\u307e\u308a\u3042\u308b\u9ad8\u5ea6\u306a\u30b0\u30e9\u30d5\u6a5f\u80fd\u7b49\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n#\u3042\u3068\u304c\u304d\n\u6c17\u304c\u5411\u3044\u305f\u3089\u3001\u30e1\u30e2\u5316\u3059\u308b\u66f8\u304d\u65b9\u3001\u9ec4\u91d1\u6bd4\u304b\u3089\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u3001\u884c\u5217\u304b\u3089\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u3082\u66f8\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u5404\u8a00\u8a9e\u306e\u7279\u5fb4\u3092\u6d3b\u304b\u3057\u305f\u66f8\u304d\u65b9\u3082\u305d\u306e\u3046\u3061\u2026\u3002\n\n", "tags": ["\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u6bd4\u8f03", "Fibonacci", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580"]}