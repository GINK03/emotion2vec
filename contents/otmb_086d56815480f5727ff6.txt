{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\n\u30cd\u30a4\u30c6\u30a3\u30d6\u9023\u643a\u306e\u521d\u52d5\u3067\u6bce\u56de\u306f\u307e\u308b\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u306a\u69cb\u9020\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5316\u3057\u3066\u304a\u304f\u3002\u5099\u5fd8\u9332\u3002\n\n\u521d\u671f\u8a2d\u5b9a\nXcode\u3068Eclipese(Android)\u3067\u30b3\u30fc\u30c9\u9023\u643a\u3059\u308b\u969b\u3001Xcode\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068Classes\u4ee5\u4e0b\u306e\u30d1\u30b9\u306f\u5f15\u3051\u306a\u3044\u306e\u3067\u300cSearch Paths\u300d\u306b\u300cClasses\u300d\u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\n\n\nTree\u69cb\u9020\n\nXcode\u4e0a\u3067\u306e\u914d\u7f6e\nplatform/Android\u4ee5\u4e0b\u306f\u300cTarget Membership\u300d\u306e\u30c1\u30a7\u30c3\u30af\u3092\u306f\u305a\u3059\n\nAndroid\u306eJava\u30d5\u30a1\u30a4\u30eb\u306fsrc/org/cocos2dx/lib\u306b\u8a2d\u7f6e\n\n\n\n\u5229\u7528\u65b9\u6cd5\n\nDelegate\u3092\u4f7f\u3046\u306e\u3067class\u306bDelegate\u3092\u8a2d\u5b9a\n\n\nHelloWorld.h\nclass HelloWorld : public cocos2d::Layer,public native_plugin::NativeDelegate\n{\n    // CallBack\n    void method1(const char* str);\n    void method2();\n}\n\n\n\nHelloWorld.cpp\n#include \"HelloWorldScene.h\"\n#include \"platform/NativeTest.h\"\nbool HelloWorld::init()\n{\n  \u2026 \u7701\u7565\n  auto* native = new native_plugin::NativeTest(this);\n  native->test(\"hoge\");\n  \u2026 \u7701\u7565\n}\nvoid HelloWorld::method1(const char *str){\n    log(\"HelloWorld %s\",str);\n}\n\nvoid HelloWorld::method2(){\n    log(\"method2\");\n}\n\n\n\n\u4ee5\u4e0b\u5b9f\u88c5\n\nNativeTest.h\nnamespace native_plugin {\n\n    class NativeTest;\n    class NativeDelegate\n    {\n    public:\n        virtual void method1(const char * str){}\n        virtual void method2(){}\n    };\n    class NativeTest\n    {\n    public:\n        NativeTest(NativeDelegate* delegate);\n        ~NativeTest();\n        void test(const char* str);\n    };\n}\n\n\n\n\u4ee5\u4e0biOS\n\nNativeTest.mm\n#import \"NativeTest.h\"\n\n@interface NativeManager : NSObject\n{\n    void *object;\n}\n- (void)test:(NSString*)str;\n\n@end\n\n@implementation NativeManager\n\n- (void)test:(NSString*)str\n{\n    NSLog(@\"[NativeTest] %@\", str);\n\n    native_plugin::NativeDelegate *pDelegate = (native_plugin::NativeDelegate*)object;\n    if(pDelegate != NULL){\n        pDelegate->method1(\"method1\");\n        pDelegate->method2();\n    }\n}\n\n-(id)initWithDelegate:(void *)delegate\n{\n    self = [super init];\n    if (self) {\n        object = delegate;\n    }\n    return self;\n}\n@end\n\nnamespace native_plugin {\n\n    NativeManager * _native = NULL;\n    class NativeTest;\n\n    NativeTest::NativeTest(NativeDelegate* delegate){\n        _native = [[NativeManager alloc] initWithDelegate:(void *)delegate];\n    }\n    NativeTest::~NativeTest()\n    {\n        [_native release];\n    }\n    void NativeTest::test(const char* str){\n        [_native test:[NSString stringWithFormat:@\"%s\", str]];\n    }\n}\n\n\n\n\u4ee5\u4e0bAndroid\n\nNativeTest.cpp\n#include \"platform/NativeTest.h\"\n#include \"NativeTestJni.h\"\n\n\nnamespace native_plugin {\n\n    NativeTest::NativeTest(NativeDelegate* delegate)\n    {\n        setDelegateJni(delegate);\n    }\n    NativeTest::~NativeTest()\n    {\n        stopJni();\n    }\n    void NativeTest::test(const char *str)\n    {\n        testJni(str);\n    }\n}\n\n\n\nNativeTestJni.h\n#include <jni.h>\n\nextern \"C\"\n{\n    void setDelegateJni(void *delegate);\n    void testJni(const char *peerID);\n    void stopJni();\n}\n\n\n\nNativeTestJni.cpp\n#include \"NativeTestJni.h\"\n#include \"platform/NativeTest.h\"\n#include \"jni/JniHelper.h\"\n#include <jni.h>\n\n#define  CLASS_NAME \"org/cocos2dx/lib/NativeTest\"\n\nusing namespace cocos2d;\nusing namespace std;\n\nvoid *_delegate;\n\nextern \"C\"\n{\n    void setDelegateJni(void *delegate)\n    {\n        _delegate = delegate;\n    }\n\n    void stopJni()\n    {\n    }\n    void testJni(const char* str){\n        JniMethodInfo t;\n        if (JniHelper::getStaticMethodInfo(t, CLASS_NAME, \"method1\", \"(Ljava/lang/String;)V\")) {\n            jstring arg1 = t.env->NewStringUTF(str);\n            t.env->CallStaticVoidMethod(t.classID, t.methodID, arg1);\n            t.env->DeleteLocalRef(arg1);\n        }\n    }\n\n    JNIEXPORT void JNICALL Java_org_cocos2dx_lib_NativeTest_onMethod1(JNIEnv *env, jobject thiz, jstring str) {\n        if(_delegate) {\n            const char *arg1 = env->GetStringUTFChars(str, NULL);\n\n            native_plugin::NativeDelegate *nativeDelegate = (native_plugin::NativeDelegate*)_delegate;\n            nativeDelegate->method1(arg1);\n        }\n    }\n}\n\n\n\nNativeTest.java\npackage org.cocos2dx.lib;\n\nimport org.cocos2dx.lib.Cocos2dxActivity;\nimport android.os.Bundle; \nimport android.util.Log;\n\npublic class NativeTest extends Cocos2dxActivity {\n\n    private static final String TAG = \"NativeTest\";\n    private static final boolean D = true;\n    public static native void onMethod1(String str);\n\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if(D) Log.e(TAG, \"onCreate\"); \n    }\n\n    public static void method1(String str) {\n        if (D) Log.d(TAG, \"start()\");\n        if (D) Log.d(TAG, \" > \" + str);\n        NativeTest.onMethod1(\"method1\");\n    }\n}\n\n\n\n# \u76ee\u7684\n\u30cd\u30a4\u30c6\u30a3\u30d6\u9023\u643a\u306e\u521d\u52d5\u3067\u6bce\u56de\u306f\u307e\u308b\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u306a\u69cb\u9020\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5316\u3057\u3066\u304a\u304f\u3002\u5099\u5fd8\u9332\u3002\n\n# \u521d\u671f\u8a2d\u5b9a\nXcode\u3068Eclipese(Android)\u3067\u30b3\u30fc\u30c9\u9023\u643a\u3059\u308b\u969b\u3001Xcode\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068Classes\u4ee5\u4e0b\u306e\u30d1\u30b9\u306f\u5f15\u3051\u306a\u3044\u306e\u3067\u300cSearch Paths\u300d\u306b\u300cClasses\u300d\u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\n![SearchPath.png](https://qiita-image-store.s3.amazonaws.com/0/35973/8674faa8-2bd1-1690-cf0a-7a6e413c5349.png \"SearchPath.png\")\n\n# Tree\u69cb\u9020\n* Xcode\u4e0a\u3067\u306e\u914d\u7f6e\n* platform/Android\u4ee5\u4e0b\u306f\u300cTarget Membership\u300d\u306e\u30c1\u30a7\u30c3\u30af\u3092\u306f\u305a\u3059\n![\u30c4\u30ea\u30fc\u69cb\u9020.png](https://qiita-image-store.s3.amazonaws.com/0/35973/0b999585-8e6f-a4e8-4dbb-a7890cbfd1e7.png \"\u30c4\u30ea\u30fc\u69cb\u9020.png\")\n\n* Android\u306eJava\u30d5\u30a1\u30a4\u30eb\u306fsrc/org/cocos2dx/lib\u306b\u8a2d\u7f6e\n![\u30c4\u30ea\u30fc\u69cb\u9020Java.png](https://qiita-image-store.s3.amazonaws.com/0/35973/708e5bce-7207-4473-a904-5a0c6f4148fb.png \"\u30c4\u30ea\u30fc\u69cb\u9020Java.png\")\n\n# \u5229\u7528\u65b9\u6cd5\n* Delegate\u3092\u4f7f\u3046\u306e\u3067class\u306bDelegate\u3092\u8a2d\u5b9a\n\n```cpp:HelloWorld.h\nclass HelloWorld : public cocos2d::Layer,public native_plugin::NativeDelegate\n{\n    // CallBack\n    void method1(const char* str);\n    void method2();\n}\n```\n\n```cpp:HelloWorld.cpp\n#include \"HelloWorldScene.h\"\n#include \"platform/NativeTest.h\"\nbool HelloWorld::init()\n{\n  \u2026 \u7701\u7565\n  auto* native = new native_plugin::NativeTest(this);\n  native->test(\"hoge\");\n  \u2026 \u7701\u7565\n}\nvoid HelloWorld::method1(const char *str){\n    log(\"HelloWorld %s\",str);\n}\n\nvoid HelloWorld::method2(){\n    log(\"method2\");\n}\n```\n\n# \u4ee5\u4e0b\u5b9f\u88c5\n\n```cpp:NativeTest.h\nnamespace native_plugin {\n\n    class NativeTest;\n    class NativeDelegate\n    {\n    public:\n        virtual void method1(const char * str){}\n        virtual void method2(){}\n    };\n    class NativeTest\n    {\n    public:\n        NativeTest(NativeDelegate* delegate);\n        ~NativeTest();\n        void test(const char* str);\n    };\n}\n```\n## \u4ee5\u4e0biOS\n```cpp:NativeTest.mm\n#import \"NativeTest.h\"\n\n@interface NativeManager : NSObject\n{\n    void *object;\n}\n- (void)test:(NSString*)str;\n\n@end\n\n@implementation NativeManager\n\n- (void)test:(NSString*)str\n{\n    NSLog(@\"[NativeTest] %@\", str);\n    \n    native_plugin::NativeDelegate *pDelegate = (native_plugin::NativeDelegate*)object;\n    if(pDelegate != NULL){\n        pDelegate->method1(\"method1\");\n        pDelegate->method2();\n    }\n}\n\n-(id)initWithDelegate:(void *)delegate\n{\n    self = [super init];\n    if (self) {\n\t    object = delegate;\n    }\n    return self;\n}\n@end\n\nnamespace native_plugin {\n    \n    NativeManager * _native = NULL;\n    class NativeTest;\n    \n    NativeTest::NativeTest(NativeDelegate* delegate){\n        _native = [[NativeManager alloc] initWithDelegate:(void *)delegate];\n    }\n    NativeTest::~NativeTest()\n    {\n        [_native release];\n    }\n    void NativeTest::test(const char* str){\n        [_native test:[NSString stringWithFormat:@\"%s\", str]];\n    }\n}\n```\n## \u4ee5\u4e0bAndroid\n```cpp:NativeTest.cpp\n#include \"platform/NativeTest.h\"\n#include \"NativeTestJni.h\"\n\n\nnamespace native_plugin {\n    \n    NativeTest::NativeTest(NativeDelegate* delegate)\n    {\n        setDelegateJni(delegate);\n    }\n    NativeTest::~NativeTest()\n    {\n        stopJni();\n    }\n    void NativeTest::test(const char *str)\n    {\n    \ttestJni(str);\n    }\n}\n```\n\n```cpp:NativeTestJni.h\n#include <jni.h>\n\nextern \"C\"\n{\n\tvoid setDelegateJni(void *delegate);\n\tvoid testJni(const char *peerID);\n\tvoid stopJni();\n}\n```\n```cpp:NativeTestJni.cpp\n#include \"NativeTestJni.h\"\n#include \"platform/NativeTest.h\"\n#include \"jni/JniHelper.h\"\n#include <jni.h>\n\n#define  CLASS_NAME \"org/cocos2dx/lib/NativeTest\"\n\nusing namespace cocos2d;\nusing namespace std;\n\nvoid *_delegate;\n\nextern \"C\"\n{\n\tvoid setDelegateJni(void *delegate)\n\t{\n\t\t_delegate = delegate;\n\t}\n\n\tvoid stopJni()\n\t{\n\t}\n\tvoid testJni(const char* str){\n\t\tJniMethodInfo t;\n\t\tif (JniHelper::getStaticMethodInfo(t, CLASS_NAME, \"method1\", \"(Ljava/lang/String;)V\")) {\n\t\t\tjstring arg1 = t.env->NewStringUTF(str);\n\t\t\tt.env->CallStaticVoidMethod(t.classID, t.methodID, arg1);\n\t\t\tt.env->DeleteLocalRef(arg1);\n\t\t}\n\t}\n\n\tJNIEXPORT void JNICALL Java_org_cocos2dx_lib_NativeTest_onMethod1(JNIEnv *env, jobject thiz, jstring str) {\n\t\tif(_delegate) {\n\t\t\tconst char *arg1 = env->GetStringUTFChars(str, NULL);\n\n\t\t\tnative_plugin::NativeDelegate *nativeDelegate = (native_plugin::NativeDelegate*)_delegate;\n\t\t\tnativeDelegate->method1(arg1);\n\t\t}\n\t}\n}\n```\n\n```java:NativeTest.java\npackage org.cocos2dx.lib;\n\nimport org.cocos2dx.lib.Cocos2dxActivity;\nimport android.os.Bundle; \nimport android.util.Log;\n\npublic class NativeTest extends Cocos2dxActivity {\n\t\n\tprivate static final String TAG = \"NativeTest\";\n\tprivate static final boolean D = true;\n\tpublic static native void onMethod1(String str);\n\n\tprotected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if(D) Log.e(TAG, \"onCreate\"); \n    }\n\t\n\tpublic static void method1(String str) {\n        if (D) Log.d(TAG, \"start()\");\n\t    if (D) Log.d(TAG, \" > \" + str);\n\t\tNativeTest.onMethod1(\"method1\");\n\t}\n}\n```\n\n", "tags": ["cocos2d-x", "iOS", "Android", "C++"]}