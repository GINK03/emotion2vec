{"tags": ["Swift", "swift3", "iOS", "AdventCalendar2016", "AdventCalendar"], "context": "\u3053\u306e\u6295\u7a3f\u306f\u300cSwift Advent Calendar 2016\u300d 8\u65e5\u76ee\u306e\u3082\u306e\u3067\u3059\u3002\n\u4eca\u65e5\u304c\u706b\u66dc\u65e5\u3060\u3063\u305f\u3089\u5b8c\u74a7\u3060\u3063\u305f\u306e\u306b...\n\u4eca\u56de\u306f\u300c\u3042\u306a\u305f\u306e\u77e5\u3089\u306a\u3044Collection\u306e\u4e16\u754c\u300d\u3068\u3044\u3046\u30c6\u30fc\u30de\u3067\u304a\u9001\u308a\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\n\nXcode8.1\nSwift3.0.1\n\n\n\u305d\u3082\u305d\u3082Collection (protocol) \u3063\u3066\n\n(\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u6301\u3064)\u8981\u7d20(element)\u304c\u8907\u6570\u56de\u3001\u975e\u7834\u58ca\u7684\u306b\u8d70\u67fb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3055\u308c\u305f\u6dfb\u5b57\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30b7\u30fc\u30b1\u30f3\u30b9\n\n\u306e\u3053\u3068\u3092\u6307\u3059\u3088\u3046\u3067\u3059\u3002(\u3061\u3087\u3063\u3068\u8a33\u304c\u602a\u3057\u3044...  )\n\u666e\u6bb5\u4f55\u6c17\u306a\u304f\u4f7f\u3063\u3066\u3044\u308bArray\u3082\u3053\u306eCollection\uff08\u6b63\u78ba\u306b\u306f MutableCollection protocol\u3067\u3059\u304c) \u306b\u9069\u5408\u3057\u3066\u3044\u307e\u3059\u3002Dictionary\u3084Set\u306a\u3093\u304b\u3082\u3002\n\nCollection protocol\u306e\u7d99\u627f\u56f3\n\nCollection \u81ea\u4f53\u306f\u3001 Indexable \u3068 Sequence \u3092\u7d99\u627f(\u306b\u9069\u5408) \u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u964d\u306f\u3053\u306eCollection\u3092\u30d9\u30fc\u30b9\u306b\u591a\u5c90\u306b\u6e21\u3063\u3066\u69d8\u3005\u306aprotocol\u3001struct\u306b\u5c55\u958b\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\u6700\u7d42\u7684\u306b\u306fArray\u3084Dictionary\u3001Set\u3001AnyCollection\u3001String\u306eCharacterView\u306a\u3069\u306b\u8fbf\u308a\u7740\u304d\u307e\u3059\u3002\n\u6a2a\u306b\u9577\u3044\u306e\u3067\u3001\u898b\u305f\u3044\u65b9\u306f\u2193\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u7d99\u627f\u56f3\n\n\nCollection\u306b\u9069\u5408\u3057\u3066\u3044\u308b\u3068\u4f55\u304c\u3067\u304d\u308b\u306e\u304c\nCollection\u306b\u9069\u5408\u3057\u3066\u3044\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\n\u300cfor in\u300d\u6587\u3067\u5217\u6319\u304c\u3067\u304d\u308b\n\u5b9a\u3081\u3089\u308c\u305f\u6dfb\u5b57\u3067\u30a2\u30af\u30bb\u30b9\u304c\u3067\u304d\u308b (e.g. array[0])\n\u8981\u7d20\u306e\u6570\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u308b (count, isEmpty\u306a\u3069)\n\nfilter, map, flatMap, reduce, sort\u306a\u3069\u306e\u95a2\u6570\u304c\u4f7f\u3048\u308b\n\n\u306a\u3069\u306a\u3069\u3002(\u203b\u4e00\u90e8\u3001Sequence\u306e\u307f\u3067\u3082\u3067\u304d\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059)\n\u57fa\u672c\u7684\u306b\u306fArray\u3084Dictionary\u3067\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u99b4\u67d3\u307f\u304c\u3042\u308b\u306e\u3067\u306f\u3068\u601d\u3044\u307e\u3059\u3002\n\nCollection\u3092\u81ea\u4f5c\u306e\u578b\u3067\u4f7f\u3063\u3066\u307f\u308b\n\u8a66\u3057\u306bCollection\u306b\u9069\u5408\u3055\u305b\u305f\u81ea\u4f5c\u306e\u578b\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\n\nFizzBuzz\u3092Collection\u3067\nFizzBuzz\u3092Collection\u3067\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\nlimit\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u30011\u301climit(limit\u542b\u3080)\u3092Fizz,Buzz\u3092\u4f7f\u3063\u3066\u8868\u305b\u308bCollection\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\nstruct FizzBuzzCollection: Collection {\n\n    typealias _Element = String\n    typealias Index = Int\n\n    var startIndex: Index { return 0 }\n    var endIndex: Index { return limit }\n\n    let limit: Int\n\n    subscript (position: Index) -> _Element {\n        precondition((startIndex..<endIndex) ~= position, \"Index out of bounds.\")\n        let num = position + 1\n        switch (num % 3, num % 5) {\n        case (0, 0): return \"Fizz Buzz\"\n        case (0, _): return \"Fizz\"\n        case (_, 0): return \"Buzz\"\n        default: return \"\\(num)\"\n        }\n    }\n\n   func index(after i: Index) -> Index {\n        precondition(i < endIndex, \"Can't advance beyond endIndex\")\n        return i + 1\n    }\n}\n\n\n\u4f7f\u3063\u3066\u307f\u308b\nlet fizzbuzzCollection = FizzBuzzCollection(limit: 100)\nfizzbuzzCollection.forEach { print($0) }\n//1\n//2\n//Fizz\n//4\n//Buzz\n//Fizz\n//...\n//98\n//Fizz\n//Buzz\n\nprint(fizzbuzzCollection[4]) // -> \"Buzz\"\nprint(fizzbuzzCollection.first as Any) // -> Optional(\"1\")\n\n\nCollection\u306b\u9069\u5408\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5b9a\u7fa9\nCollection \u306b\u9069\u5408\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u5c11\u306a\u304f\u3068\u3082\u4ee5\u4e0b\u306e\u5b9a\u7fa9\u304c\u5fc5\u8981\u306b\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n// \u8981\u7d20\u306e\u59cb\u70b9(Index\u578b)\u3092\u8fd4\u3059\nvar startIndex: Self.Index { get }\n\n// \u8981\u7d20\u306e\u7d42\u70b9(Index\u578b)\u3092\u8fd4\u3059\nvar endIndex: Self.Index { get }\n\n// \u3042\u308bindex\u306e\u6b21\u306eindex(Index\u578b)\u3092\u8fd4\u3059\nfunc index(after i: Self.Index) -> Self.Index\n\n// Index\u578b\u306e\u6dfb\u5b57\u3067\u30a2\u30af\u30bb\u30b9\u3092\u53ef\u80fd\u306b\u3059\u308bsubscript\nsubscript(position: Self.Index) -> Self.Iterator.Element { get }\n\n\u5b9f\u306f\u3053\u308c\u3089\u304c\u6c7a\u307e\u308b\u3053\u3068\u3067\u3001\u672c\u6765\u306f\u5b9a\u7fa9\u304c\u5fc5\u9808\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3082\u306e\u3082\u5b9a\u307e\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nvar indices: Self.Indices { get }\nsubscript(bounds: Range<Self.Index>) -> Self.SubSequence { get }\nfunc makeIterator() -> Self.Iterator\n\n\u6700\u521d\u3001\u5fc5\u9808\u3060\u3088\u3068\u66f8\u304b\u308c\u3066\u308b\u3082\u306e\u304c\u591a\u304f\u3066\u5b9a\u7fa9\u5927\u5909\u3058\u3083\u306d...\u3063\u3066\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e3\u3064\u306f\u305d\u306e\u4e0a\u306e\uff14\u3064\u304c\u6c7a\u307e\u308b\u3068\u826f\u3044\u3088\u3046\u3067\u3059  \n\u307e\u305f\u3001 Index\u53ca\u3073Element\u306e\u578b\u304c\u4f55\u3067\u3042\u308b\u304btypealias\u3067\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\ntypealias Element = String\ntypealias Index = Int\n\n\u305f\u3060\u3001\u3053\u3061\u3089\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u305d\u308c\u305e\u308c\u306e\u95a2\u6570\u3067\u578b\u3092\u6b63\u78ba\u306b\u4e0e\u3048\u3066\u3042\u3052\u308b\u3053\u3068\u3067Index\u53ca\u3073Element\u306e\u578b\u304c\u5b9a\u307e\u308b\u306e\u3067\u3001typealias\u3067\u306e\u5b9a\u7fa9\u306f\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002\nstruct FizzBuzzCollection: Collection {\n\n    var startIndex: Int { return 0 }\n    var endIndex: Int { return limit }\n\n    let limit: Int\n\n    subscript (position: Int) -> String {\n        precondition((startIndex..<endIndex) ~= position, \"Index out of bounds.\")\n        let num = position + 1\n        switch (num % 3, num % 5) {\n        case (0, 0): return \"Fizz Buzz\"\n        case (0, _): return \"Fizz\"\n        case (_, 0): return \"Buzz\"\n        default: return \"\\(num)\"\n        }\n    }\n\n   func index(after i: Int) -> Int {\n        precondition((startIndex..<endIndex) ~= position, \"Index out of bounds.\")\n        return i + 1\n    }\n}\n\n\u500b\u4eba\u7684\u306b\u306f\u3001\u6700\u521d\u306btypealias\u3067\u578b\u3092\u66f8\u3044\u3066...\u3068\u3057\u305f\u307b\u3046\u304c\u5ba3\u8a00\u6642\u306f\u5206\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u3059\u304c\u3001\u4f7f\u3046\u6642\u306b_Element\u307f\u305f\u3044\u306b\u898b\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u5f8c\u8005\u306e\u66f8\u304d\u65b9\u306e\u307b\u3046\u304c\u597d\u304d\u3067\u3059 \n\n\u307e\u305f\u3001\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001subscript\u3084index(after:)\u3067\u306f\u7bc4\u56f2\u5916\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u3092\u3057\u3066\u3042\u3052\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\nsubscript (position: Index) -> _Element {\n    precondition((startIndex..<endIndex) ~= position, \"Index out of bounds.\")\n    ...\n}\n\nfunc index(after i: Index) -> Index {\n    precondition(i < endIndex, \"Can't advance beyond endIndex\")\n    ...\n}\n\n\nlet fizzbuzzCollection = FizzBuzzCollection(limit: 100)\nfizzbuzzCollection[99] // -> \"Buzz\"\nfizzbuzzCollection[100] // => Error! \"Index out of bounds.\"\n\n\n\u4f59\u8ac7\n\u3061\u306a\u307f\u306b\u3001(startIndex..<endIndex) ~= position\u306e\u90e8\u5206\u3092\u3001indices.contains(position)\u306a\u3093\u3066\u3061\u3087\u3063\u3068\u683c\u597d\u3064\u3051\u3066\u3057\u307e\u3046\u3068\u3053\u3053\u306b\u8a08\u7b97\u30b3\u30b9\u30c8\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3063\u3066\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3067\u3059\u3002(\u672c\u4eba\u8ac7)\n\nfirst, last\u3092\u53d6\u5f97\u3059\u308b\nFizzBuzzCollection \u306f Collection\u306b\u9069\u5408\u3055\u305b\u3066\u3044\u308b\u306e\u3067\u3001\u8981\u7d20\u306e\u6700\u521d\u3001\u6700\u5f8c\u3092\u53d6\u5f97\u3059\u308b\u306e\u306f\u7c21\u5358...!  \nlet fizzbuzzCollection = FizzBuzzCollection(limit: 100)\nprint(fizzbuzzCollection.first as Any) // => \"Optinal(\"1\")\"\nprint(fizzbuzzCollection.last as Any) // ... Error!\n\n\u3042\u308c\u3001 last\u304c\u53d6\u308c\u306a\u3044...\u3060\u3068\u3002\ndocument\u3092\u8aad\u3093\u3067\u307f\u308b\u3068\u3001first\u306f\u3042\u308b\u3051\u3069\u3001last\u304c\u306a\u3044...\n\nlast\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\nlast\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001 Collection\u3092BidirectionalCollection\u306b\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nstruct FizzBuzzCollection: BidirectionalCollection {\n    // ...\n}\n\n\u305d\u3046\u3059\u308b\u3068\u3001\n// \u6307\u5b9a\u3057\u305findex(i)\u306e\u524d\u306eindex\u3092\u53d6\u5f97\u3059\u308b\nfunc index(before i: Index) -> Self.Index\n\nindex(before:)\u3092\u5b9f\u88c5\u3057\u308d\u3068\u8a00\u308f\u308c\u308b\u306e\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\nstruct FizzBuzzCollection: BidirectionalCollection {\n    func index(before i: Int) -> Int {\n        precondition(startIndex <= i, \"Can't back beyond startIndex\")\n        return i - 1\n    }\n}\n\n\u3053\u308c\u3067\u3001last\u304c\u6674\u308c\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059  \nlet fizzbuzzCollection = FizzBuzzCollection(limit: 100)\nprint(fizzbuzzCollection.first as Any) => \"Optinal(\"1\")\"\nprint(fizzbuzzCollection.last as Any) ... Error!\n\n\u7d99\u627f\u56f3\u3092\u898b\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002Collection\u3068BiDirectionalIndexable\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308c\u3070\u81ea\u4f5c\u306eCollection\u3068\u3057\u3066\u306f\u5341\u5206\u306a\u3082\u306e\u3068\u306a\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u3082\u3057\u3001\u8981\u7d20\u3078\u306e\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u306b\u95a2\u3057\u3066\u9069\u5207\u306a\u8a08\u7b97\u91cf\u3067\u884c\u3048\u308b\u5b9f\u88c5\u304c\u3067\u304d\u308b\u5834\u5408\u306b\u306f\u3001 RandomAccessCollection \u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u3066\u3082\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nBidirectionalCollection \u3068\u6bd4\u3079\u3066\u5fc5\u9808\u306e\u5b9f\u88c5\u306f\u5897\u3048\u307e\u305b\u3093\u304c\u3001\nindex(_:offsetBy:), distance(from: to:) \u3068\u3044\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u8a08\u7b97\u91cf O(1) \u3067\u5b9f\u88c5\u3067\u304d\u308b\u306e\u304c\u671b\u307e\u3057\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306bArray\u306f...\n\u4eca\u56de\u306fBidirectionalCollection \u307e\u3067\u8a71\u304c\u9032\u307f\u307e\u3057\u305f\u304c\u3001\u66f4\u306b\u9032\u3081\u3066\u3044\u304f\u3068Array\u306b\u305f\u3069\u308a\u7740\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u666e\u6bb5\u4f55\u6c17\u306a\u304f\u4f7f\u3063\u3066\u3044\u308bArray\u3082\u3001\u3053\u306e\u3088\u3046\u306b\u3044\u304f\u3064\u3082\u306eprotocol\u3092\u7d4c\u3066\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u6539\u3081\u3066protocol\u6307\u5411\u306a\u3093\u3060\u306a\u3068\u601d\u3044\u77e5\u3089\u3055\u308c\u307e\u3059  \n\nAnyCollection\u3068\u306f... \n\nAnyCollection\u306f\u3001Collection\u3092\u7d99\u627f\u3057\u3066\u3044\u3066\u3001Collection\u3092\u578b\u6d88\u53bb\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308bstruct\u3067\u3059\u3002\n\u304a\u3063\u3068... \u578b\u6d88\u53bb \u304c\u3067\u3066\u304d\u307e\u3057\u305f\u306d\u3002\n\u578b\u6d88\u53bb\u306b\u95a2\u3057\u3066\u306f\u5e73\u5e38\u5fc3\u3067\u578b\u3092\u6d88\u3057\u53bb\u308b\u3092\u898b\u308b\u306e\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002(\u8aac\u660e\u306f\u5272\u611b...)\n\u4f55\u306b\u4f7f\u3046\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u4f8b\u3048\u3070\u5916\u304b\u3089FizzBuzzCollection\u3068\u3044\u3046\u5b9f\u88c5\u3092\u96a0\u3057\u305f\u3044\u304c\u3001\u5916\u304b\u3089\u306f\u3061\u3083\u3093\u3068\u3053\u306eCollection\u3092\u4f7f\u3044\u305f\u3044\u3068\u3044\u3046\u5834\u5408\u306b\u3001\u3053\u306e AnyCollection \u3092\u4f7f\u3063\u3066\u3042\u3052\u307e\u3059\u3002\nclass MyCollections {\n    lazy var fizzBuzzCollection: AnyCollection<String> = AnyCollection(FizzBuzzCollection(limit: 100))\n\n    // \u3053\u308c\u306fNG\u3002\n    lazy var fizzBuzzCollection: Collection = FizzBuzzCollection(limit: 100)\n}\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001MyCollections\u3092\u5916\u304b\u3089\u751f\u6210\u3057\u3066fizzBuzzCollection\u3092\u898b\u308b\u3068\u304d\u306b\u306f\u3001FizzBuzzCollection\u3068\u3044\u3046\u578b\u306f\u898b\u3048\u305a\u3001AnyCollection<String>\u3068\u3044\u3046\u578b\u3067\u898b\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u578b\u3092\u96a0\u853d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3082\u3046\u4e00\u3064\u306e\u4f7f\u3044\u65b9\u3068\u3057\u3066\u306f\u3001\u4f8b\u3048\u3070FizzBuzzCollection\u3068\u540c\u3058\u304f\u8981\u7d20\u304cString\u306ePPAPCollection\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3057\u3087\u3046\u3002\nstruct PPAPCollection: Collection {\n\n    // P-P-A-P\u306e\u9806\u3067\u8981\u7d20\u3092\u3044\u308c\u308b\n    let elements: (String, String, String, String)\n    init(_ first: String, _ second: String, _ third: String, _ fourth: String) {\n        self.elements = (first, second, third, fourth)\n    }\n\n    var startIndex: Int { return 0 }\n    var endIndex: Int   { return 4 }\n\n    subscript(index: Int) -> String {\n        switch index {\n        case 0: return elements.0\n        case 1: return elements.1\n        case 2: return elements.2\n        case 3: return elements.3\n        default: fatalError(\"Index out of bounds.\")\n        }\n    }\n\n    func index(after i: Int) -> Int {\n        precondition(i < endIndex, \"Can't advance beyond endIndex\")\n        return i + 1\n    }\n\n    var ppap: String {\n        return [elements.0, elements.1, elements.2, elements.3].map {\n            $0.capitalized\n        }.joined(separator: \"-\")\n    }\n}\n\nlet ppapCollection = PPAPCollection(\"pen\", \"pineapple\", \"apple\", \"pen\")\nprint(ppapCollection.ppap)\n// => Pen-Pineapple-Apple-Pen!\n\n\u3069\u3061\u3089\u3082funny\u306acollection\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u308c\u3089\u3092\u307e\u3068\u3081\u308b\u914d\u5217\u3092\u4f5c\u308b\u3068\u3057\u307e\u3059\u3002\n\u3053\u306e\u3068\u304d\u306b [Collection]\u3068\u3057\u3066\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001 [AnyCollection<String>] \u3068\u3057\u3066AnyCollection\u306b\u5305\u3093\u3067\u3042\u3052\u308b\u3053\u3068\u3067\u578b\u6d88\u53bb\u3057\u3064\u3064\u307e\u3068\u3081\u3066\u3042\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nvar NG_funnyCollections: [Collection] = [\n    FizzBuzzCollection(limit: 100),\n    PPAPCollection(\"pen\", \"pineapple\", \"apple\", \"pen\")\n]\n// Protocol 'Collection' can only be used as a generic constraint because it has Self or associated type requirements \u3068\u6012\u3089\u308c\u308b\n\nvar funnyCollections: [AnyCollection<String>] = [\n    AnyCollection(FizzBuzzCollection(limit: 100)),\n    AnyCollection(PPAPCollection(\"pen\", \"pineapple\", \"apple\", \"pen\"))\n]\n// AnyCollection\u3068\u3057\u3066\u5305\u3093\u3067\u3042\u3052\u308b\u3053\u3068\u3067\u3001\u3069\u3061\u3089\u3082\u8981\u7d20\u304c`String`\u3067\u3042\u308bCollection\u3092\u307e\u3068\u3081\u3089\u308c\u305f\uff01\n\n\u3061\u306a\u307f\u306b\u3001AnyCollection<Any> \u307f\u305f\u3044\u306b\u3057\u3066\u4f55\u3067\u3082...\u3068\u3044\u3046\u308f\u3051\u306b\u306f\u3044\u304b\u306a\u3044\u306e\u3067\u6ce8\u610f\u3067\u3059  \n\n\u5185\u90e8\u306blist\u3092\u6240\u6709\u3059\u308b\u3088\u3046\u306aCollection\u3092\u81ea\u4f5c\u3057\u3066\u307f\u308b\n\u4eca\u5ea6\u306f\u5185\u90e8\u306blist(Array)\u3092\u6301\u3064Collection\u3092\u81ea\u4f5c\u3057\u3066\u307f\u307e\u3059\u3002\n\u672c\u3092\u8868\u3059\u578bBook\u3068\u3001\u672c\u68da\u3092\u8868\u3059\u578bBookShelf\u3092\u7528\u610f\u3057\u3001BookShelf\u306bBidirectionalCollection\u3092\u9069\u5408\u3057\u3066\u307f\u307e\u3059\nstruct Book {\n    let title: String\n    let content: String\n}\n\nstruct BookShelf: BidirectionalCollection {\n\n    private let list: [Book]\n\n    let title: String\n\n\n    init(title: String, list: [Book]) {\n        self.title = title\n        self.list = list\n    }\n\n    var startIndex: Int { return self.list.startIndex }\n    var endIndex: Int { return self.list.endIndex }\n\n    subscript (position: Int) -> Book {\n        return list[position]\n    }\n\n    func index(after i: Int) -> Int {\n        return self.list.index(after: i)\n    }\n\n    func index(before i: Int) -> Int {\n        return self.list.index(before: i)\n    }\n}\n\n\n\u4f7f\u3063\u3066\u307f\u308b\n\nCollection\u3092\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\n\u3053\u306e\u4f8b\u3060\u3068\u3001\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\u306f\u306a\u3093\u306a\u306e\u304b\u3068\u8a00\u308f\u308c\u308b\u3068\u3001 Array + \u03b1\u3092\u3082\u3064\u578b\u3068\u3057\u3066\u5b9a\u7fa9\u3067\u304d\u308b\u3068\u3053\u308d\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nCollection\u3092\u9069\u5408\u3055\u305b\u305f\u5834\u5408\u3068\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3092\u6bd4\u8f03\u3059\u308b\u3068\u3001\nlet shelf = BookShelf(title: \"swift\u306e\u672c\u68da\", list: [\"The Swift Programming Language\"])\n// \u9069\u5408\u3055\u305b\u3066\u3044\u306a\u3044\u5834\u5408\nshelf.list.forEach { book in prnt(book.title) }\nlet firstBook: Book? = Shelf.list.first\n\n// \u9069\u5408\u3055\u305b\u305f\u5834\u5408\nshelf.forEach  { book in prnt(book.title) }\nlet firstBook: Book? = shelf.first\n\nShelf.list\u3067\u3082\u3044\u3044\u3058\u3083\u3093\u3068\u3044\u3046\u611f\u3058\u3082\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u578b\u81ea\u8eab\u3092Collection\u3068\u898b\u7acb\u3066\u3066\u64cd\u4f5c\u304c\u3067\u304d\u308b\u306e\u3067\u500b\u4eba\u7684\u306b\u306f\u826f\u3044\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\u3042\u3068\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u4f55\u304b\u3057\u3089\u306e\u30e2\u30c7\u30eb\u3092\u307e\u3068\u3081\u3064\u3064\u3001\u4ed6\u306e +\u03b1 \u3092\u3082\u3064\u3068\u304d\u306b\u3001Collection\u5316\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u3001\nmodels.list \u307f\u305f\u3044\u306a\u5197\u9577\u3055\u3092\u89e3\u6d88\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nstruct SomeViewModels {\n    private let id: Int\n    private let models: [SomeViewModel]\n}\n\nlet models = SomeViewModels(id: 1, models: [SomeViewModel(),...])\nmodels.id\nmodels.list.forEach { model in ... } // models.list\u3063\u3066\u3061\u3087\u3063\u3068\u5197\u9577\u7684\n\n\nCollection\u5316\u3059\u308b\u3068...\n\nstruct SomeViewModels {\n    private let id: Int\n    private let models: [SomeViewModel]\n}\n\nlet models = SomeViewModels(id: 1, models: [SomeViewModel(),...])\nmodels.id\nmodels.forEach { model in ... } // \u5197\u9577\u3055\u3092\u611f\u3058\u306a\u304f\u306a\u3063\u305f!\n\n\u3068\u306f\u3044\u3044\u3064\u3064\u3082\u3001\u4f7f\u3044\u6240\u304c\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3002\u304c\u3001\u3084\u306f\u308a\u5185\u90e8\u306b\u6301\u3064list(\u914d\u5217)\u3092\u5916\u304b\u3089\u898b\u3048\u306a\u304f\u3057\u3064\u3064\u3001\u305d\u306e\u578b\u3092Collection\u3068\u3057\u3066\u6271\u3048\u308b\u306e\u306f\u826f\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u305d\u306e\u4ed6Document\u3092\u898b\u3066\u6c17\u306b\u306a\u3063\u305f\u3082\u306e\n\u3069\u3046\u3084\u3089\u3001Swift4\u3067 IndexableBase, Indexable, BidirectionalIndexable, RandomAccessIndexable\u306a\u3069\u304c\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3082\u3057\u4f7f\u3063\u3066\u308b\u5834\u5408\u306f\u4eca\u306e\u3046\u3061\u306b\u4ee3\u6848\u304c\u306a\u3044\u304b\u8003\u3048\u3066\u304a\u304d\u307e\u3057\u3087\u3046...!\nhttp://swiftdoc.org/v3.0/protocol/IndexableBase/\n\nDeprecated: it will be removed in Swift 4.0. Please use 'Collection' instead.\n\n\u4e00\u5fdc\u3001 InedexableBase, Indexable\u306e\u5834\u5408\u306fCollection\u3092\u4f7f\u3048\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059 \n\n\u307e\u3068\u3081\n\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308bArray\u3084Dictionary\u306e\u5148\u7956\u3092\u8fbf\u3063\u3066\u307f\u308b\u3001\u5b9f\u969b\u306bprotocol\u3092\u9069\u5408\u3055\u305b\u305f\u81ea\u4f5c\u306e\u578b\u3092\u4f7f\u3063\u3066\u307f\u308b\u3068\u7406\u89e3\u304c\u6df1\u307e\u308a\u307e\u3059\u306d\uff01\n\u672c\u5f53\u306fSubSequence\u3068\u304bIterator\u3068\u304b\u307e\u3067\u6df1\u6398\u308a\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u8ff7\u5bae\u5165\u308a\u3057\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u4eca\u56de\u306f\u8ae6\u3081\u3066\u3001\u306a\u308b\u3079\u304f\u305d\u308c\u3092\u4eca\u56de\u306f\u610f\u8b58\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f  \n\u4eca\u56de\u81ea\u5206\u3067\u307e\u3068\u3081\u308b\u307e\u3067\u3001AnyCollection\u3063\u3066\u306a\u3093\u305e\u3084?\u3063\u3066\u611f\u3058\u3060\u3063\u305f\u306e\u3067\u3001\u52c9\u5f37\u306b\u3082\u306a\u308a\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001\u81ea\u4f5c\u306e\u578b\u306bCollection\u3092\u9069\u5408\u3055\u305b\u308b\u5834\u5408\u306b\u306f\u3001\u7bc4\u56f2\u5916\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3057\u307e\u308f\u306c\u3088\u3046\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046\u3002 \n\u4f55\u304b\u3042\u308c\u3070\u6c17\u8efd\u306b\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u304b\u3067\u3082\u304a\u6295\u3052\u304f\u3060\u3055\u3044\u3002\n\n\u53c2\u8003\n\nswiftdoc\nCollection\n\n\n\u304a\u307e\u3051\nCollection\u3068\u306f\u3061\u3087\u3063\u3068\u96e2\u308c\u307e\u3059\u304c\u3001Iterator\u3060\u3051\u3092\u4f7f\u3063\u3066FizzBuzz\u3082\u3067\u304d\u308b\u3088\u3068\u3044\u3046\u3053\u3068\u3067\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\nlet makeFizzBuzzIterator: (Int) -> AnyIterator<String> = { limit in\n    var index = 0\n    return AnyIterator<String> {\n        defer { index += 1 }\n        if index < limit {\n            let num = index + 1\n            switch (num % 3, num % 5) {\n            case (0, 0): return \"Fizz Buzz\"\n            case (0, _): return \"Fizz\"\n            case (_, 0): return \"Buzz\"\n            default: return \"\\(num)\"\n            }\n        } else {\n            return nil\n        }\n    }\n}\n\nmakeFizzBuzzIterator(100).forEach { print($0) }\n\n[collection]: http://swiftdoc.org/v3.0/protocol/Collection/\n\n\u3053\u306e\u6295\u7a3f\u306f\u300cSwift Advent Calendar 2016\u300d 8\u65e5\u76ee\u306e\u3082\u306e\u3067\u3059\u3002\n\n~~\u4eca\u65e5\u304c\u706b\u66dc\u65e5\u3060\u3063\u305f\u3089\u5b8c\u74a7\u3060\u3063\u305f\u306e\u306b...~~\n\u4eca\u56de\u306f\u300c\u3042\u306a\u305f\u306e\u77e5\u3089\u306a\u3044[`Collection`][collection]\u306e\u4e16\u754c\u300d\u3068\u3044\u3046\u30c6\u30fc\u30de\u3067\u304a\u9001\u308a\u3057\u307e\u3059\u3002\n\n##### \u74b0\u5883\n- Xcode8.1\n- Swift3.0.1\n\n## \u305d\u3082\u305d\u3082[`Collection`][collection] (protocol) \u3063\u3066\n> (\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u6301\u3064)\u8981\u7d20(element)\u304c\u8907\u6570\u56de\u3001\u975e\u7834\u58ca\u7684\u306b\u8d70\u67fb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3055\u308c\u305f\u6dfb\u5b57\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30b7\u30fc\u30b1\u30f3\u30b9\n\n\u306e\u3053\u3068\u3092\u6307\u3059\u3088\u3046\u3067\u3059\u3002(\u3061\u3087\u3063\u3068\u8a33\u304c\u602a\u3057\u3044... :pray: )\n\u666e\u6bb5\u4f55\u6c17\u306a\u304f\u4f7f\u3063\u3066\u3044\u308b`Array`\u3082\u3053\u306e`Collection`\uff08\u6b63\u78ba\u306b\u306f MutableCollection protocol\u3067\u3059\u304c) \u306b\u9069\u5408\u3057\u3066\u3044\u307e\u3059\u3002`Dictionary`\u3084`Set`\u306a\u3093\u304b\u3082\u3002\n\n## Collection protocol\u306e\u7d99\u627f\u56f3\n\n<img width=\"239\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-03 11.13.08.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/27802/ab2b1c47-b053-d218-7131-fa740a9d3e89.png\">\n\n`Collection` \u81ea\u4f53\u306f\u3001 `Indexable` \u3068 `Sequence` \u3092\u7d99\u627f(\u306b\u9069\u5408) \u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u964d\u306f\u3053\u306e`Collection`\u3092\u30d9\u30fc\u30b9\u306b\u591a\u5c90\u306b\u6e21\u3063\u3066\u69d8\u3005\u306a*protocol*\u3001*struct*\u306b\u5c55\u958b\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002  \n\u6700\u7d42\u7684\u306b\u306f`Array`\u3084`Dictionary`\u3001`Set`\u3001`AnyCollection`\u3001String\u306e`CharacterView`\u306a\u3069\u306b\u8fbf\u308a\u7740\u304d\u307e\u3059\u3002\n\u6a2a\u306b\u9577\u3044\u306e\u3067\u3001\u898b\u305f\u3044\u65b9\u306f\u2193\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n- [\u7d99\u627f\u56f3](http://swiftdoc.org/v3.0/protocol/Collection/hierarchy/)\n\n## Collection\u306b\u9069\u5408\u3057\u3066\u3044\u308b\u3068\u4f55\u304c\u3067\u304d\u308b\u306e\u304c\nCollection\u306b\u9069\u5408\u3057\u3066\u3044\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\n- \u300cfor in\u300d\u6587\u3067\u5217\u6319\u304c\u3067\u304d\u308b\n- \u5b9a\u3081\u3089\u308c\u305f\u6dfb\u5b57\u3067\u30a2\u30af\u30bb\u30b9\u304c\u3067\u304d\u308b (e.g. `array[0]`)\n- \u8981\u7d20\u306e\u6570\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u308b (*count*, *isEmpty*\u306a\u3069)\n- *filter*, *map*, *flatMap*, *reduce*, *sort*\u306a\u3069\u306e\u95a2\u6570\u304c\u4f7f\u3048\u308b\n\n\u306a\u3069\u306a\u3069\u3002(\u203b\u4e00\u90e8\u3001`Sequence`\u306e\u307f\u3067\u3082\u3067\u304d\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059)\n\u57fa\u672c\u7684\u306b\u306f`Array`\u3084`Dictionary`\u3067\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u99b4\u67d3\u307f\u304c\u3042\u308b\u306e\u3067\u306f\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Collection\u3092\u81ea\u4f5c\u306e\u578b\u3067\u4f7f\u3063\u3066\u307f\u308b\n\u8a66\u3057\u306b`Collection`\u306b\u9069\u5408\u3055\u305b\u305f\u81ea\u4f5c\u306e\u578b\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\n\n### FizzBuzz\u3092`Collection`\u3067\n\nFizzBuzz\u3092Collection\u3067\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002  \n`limit`\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u30011\u301c`limit`(limit\u542b\u3080)\u3092Fizz,Buzz\u3092\u4f7f\u3063\u3066\u8868\u305b\u308bCollection\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```swift\nstruct FizzBuzzCollection: Collection {\n\n    typealias _Element = String\n    typealias Index = Int\n    \n    var startIndex: Index { return 0 }\n    var endIndex: Index { return limit }\n    \n    let limit: Int\n    \n    subscript (position: Index) -> _Element {\n        precondition((startIndex..<endIndex) ~= position, \"Index out of bounds.\")\n        let num = position + 1\n        switch (num % 3, num % 5) {\n        case (0, 0): return \"Fizz Buzz\"\n        case (0, _): return \"Fizz\"\n        case (_, 0): return \"Buzz\"\n        default: return \"\\(num)\"\n        }\n    }\n    \n   func index(after i: Index) -> Index {\n        precondition(i < endIndex, \"Can't advance beyond endIndex\")\n        return i + 1\n    }\n}\n```\n\n### \u4f7f\u3063\u3066\u307f\u308b\n\n```swift\nlet fizzbuzzCollection = FizzBuzzCollection(limit: 100)\nfizzbuzzCollection.forEach { print($0) }\n//1\n//2\n//Fizz\n//4\n//Buzz\n//Fizz\n//...\n//98\n//Fizz\n//Buzz\n\nprint(fizzbuzzCollection[4]) // -> \"Buzz\"\nprint(fizzbuzzCollection.first as Any) // -> Optional(\"1\")\n```\n\n### `Collection`\u306b\u9069\u5408\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5b9a\u7fa9\n`Collection` \u306b\u9069\u5408\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u5c11\u306a\u304f\u3068\u3082\u4ee5\u4e0b\u306e\u5b9a\u7fa9\u304c\u5fc5\u8981\u306b\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n\n```swift\n// \u8981\u7d20\u306e\u59cb\u70b9(Index\u578b)\u3092\u8fd4\u3059\nvar startIndex: Self.Index { get }\n\n// \u8981\u7d20\u306e\u7d42\u70b9(Index\u578b)\u3092\u8fd4\u3059\nvar endIndex: Self.Index { get }\n\n// \u3042\u308bindex\u306e\u6b21\u306eindex(Index\u578b)\u3092\u8fd4\u3059\nfunc index(after i: Self.Index) -> Self.Index\n\n// Index\u578b\u306e\u6dfb\u5b57\u3067\u30a2\u30af\u30bb\u30b9\u3092\u53ef\u80fd\u306b\u3059\u308bsubscript\nsubscript(position: Self.Index) -> Self.Iterator.Element { get }\n```\n\n\u5b9f\u306f\u3053\u308c\u3089\u304c\u6c7a\u307e\u308b\u3053\u3068\u3067\u3001\u672c\u6765\u306f\u5b9a\u7fa9\u304c\u5fc5\u9808\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3082\u306e\u3082\u5b9a\u307e\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\nvar indices: Self.Indices { get }\nsubscript(bounds: Range<Self.Index>) -> Self.SubSequence { get }\nfunc makeIterator() -> Self.Iterator\n```\n\n\u6700\u521d\u3001\u5fc5\u9808\u3060\u3088\u3068\u66f8\u304b\u308c\u3066\u308b\u3082\u306e\u304c\u591a\u304f\u3066\u5b9a\u7fa9\u5927\u5909\u3058\u3083\u306d...\u3063\u3066\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e3\u3064\u306f\u305d\u306e\u4e0a\u306e\uff14\u3064\u304c\u6c7a\u307e\u308b\u3068\u826f\u3044\u3088\u3046\u3067\u3059 :thinking: \n\n\u307e\u305f\u3001 `Index`\u53ca\u3073`Element`\u306e\u578b\u304c\u4f55\u3067\u3042\u308b\u304btypealias\u3067\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n```swift\ntypealias Element = String\ntypealias Index = Int\n```\n\n\u305f\u3060\u3001\u3053\u3061\u3089\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u305d\u308c\u305e\u308c\u306e\u95a2\u6570\u3067\u578b\u3092\u6b63\u78ba\u306b\u4e0e\u3048\u3066\u3042\u3052\u308b\u3053\u3068\u3067`Index`\u53ca\u3073`Element`\u306e\u578b\u304c\u5b9a\u307e\u308b\u306e\u3067\u3001`typealias`\u3067\u306e\u5b9a\u7fa9\u306f\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\nstruct FizzBuzzCollection: Collection {\n    \n    var startIndex: Int { return 0 }\n    var endIndex: Int { return limit }\n    \n    let limit: Int\n    \n    subscript (position: Int) -> String {\n        precondition((startIndex..<endIndex) ~= position, \"Index out of bounds.\")\n        let num = position + 1\n        switch (num % 3, num % 5) {\n        case (0, 0): return \"Fizz Buzz\"\n        case (0, _): return \"Fizz\"\n        case (_, 0): return \"Buzz\"\n        default: return \"\\(num)\"\n        }\n    }\n    \n   func index(after i: Int) -> Int {\n        precondition((startIndex..<endIndex) ~= position, \"Index out of bounds.\")\n        return i + 1\n    }\n}\n```\n\n\u500b\u4eba\u7684\u306b\u306f\u3001\u6700\u521d\u306b`typealias`\u3067\u578b\u3092\u66f8\u3044\u3066...\u3068\u3057\u305f\u307b\u3046\u304c\u5ba3\u8a00\u6642\u306f\u5206\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u3059\u304c\u3001\u4f7f\u3046\u6642\u306b`_Element`\u307f\u305f\u3044\u306b\u898b\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u5f8c\u8005\u306e\u66f8\u304d\u65b9\u306e\u307b\u3046\u304c\u597d\u304d\u3067\u3059 :v_tone1:\n<br />\n\n\u307e\u305f\u3001\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001`subscript`\u3084`index(after:)`\u3067\u306f\u7bc4\u56f2\u5916\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u3092\u3057\u3066\u3042\u3052\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```swift\nsubscript (position: Index) -> _Element {\n    precondition((startIndex..<endIndex) ~= position, \"Index out of bounds.\")\n    ...\n}\n\nfunc index(after i: Index) -> Index {\n    precondition(i < endIndex, \"Can't advance beyond endIndex\")\n    ...\n}\n\n\nlet fizzbuzzCollection = FizzBuzzCollection(limit: 100)\nfizzbuzzCollection[99] // -> \"Buzz\"\nfizzbuzzCollection[100] // => Error! \"Index out of bounds.\"\n```\n\n##### \u4f59\u8ac7\n\u3061\u306a\u307f\u306b\u3001`(startIndex..<endIndex) ~= position`\u306e\u90e8\u5206\u3092\u3001`indices.contains(position)`\u306a\u3093\u3066\u3061\u3087\u3063\u3068\u683c\u597d\u3064\u3051\u3066\u3057\u307e\u3046\u3068\u3053\u3053\u306b\u8a08\u7b97\u30b3\u30b9\u30c8\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3063\u3066\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3067\u3059\u3002(\u672c\u4eba\u8ac7)\n\n### first, last\u3092\u53d6\u5f97\u3059\u308b\n\nFizzBuzzCollection \u306f `Collection`\u306b\u9069\u5408\u3055\u305b\u3066\u3044\u308b\u306e\u3067\u3001\u8981\u7d20\u306e\u6700\u521d\u3001\u6700\u5f8c\u3092\u53d6\u5f97\u3059\u308b\u306e\u306f\u7c21\u5358...! :star2: \n\n\n```swift\nlet fizzbuzzCollection = FizzBuzzCollection(limit: 100)\nprint(fizzbuzzCollection.first as Any) // => \"Optinal(\"1\")\"\nprint(fizzbuzzCollection.last as Any) // ... Error!\n```\n\n\u3042\u308c\u3001 **<font color=\"red\">last\u304c\u53d6\u308c\u306a\u3044...\u3060\u3068\u3002</font>**\n[document][collection]\u3092\u8aad\u3093\u3067\u307f\u308b\u3068\u3001*first*\u306f\u3042\u308b\u3051\u3069\u3001*last*\u304c\u306a\u3044...\n\n### *last*\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\n`last`\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001 `Collection`\u3092`BidirectionalCollection`\u306b\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```swift\nstruct FizzBuzzCollection: BidirectionalCollection {\n    // ...\n}\n```\n\n\u305d\u3046\u3059\u308b\u3068\u3001\n\n```swift\n// \u6307\u5b9a\u3057\u305findex(i)\u306e\u524d\u306eindex\u3092\u53d6\u5f97\u3059\u308b\nfunc index(before i: Index) -> Self.Index\n```\n\n*index(before:)*\u3092\u5b9f\u88c5\u3057\u308d\u3068\u8a00\u308f\u308c\u308b\u306e\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```swift\nstruct FizzBuzzCollection: BidirectionalCollection {\n    func index(before i: Int) -> Int {\n        precondition(startIndex <= i, \"Can't back beyond startIndex\")\n        return i - 1\n    }\n}\n```\n\n\u3053\u308c\u3067\u3001*last*\u304c\u6674\u308c\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059 :clap_tone1: \n\n```swift\nlet fizzbuzzCollection = FizzBuzzCollection(limit: 100)\nprint(fizzbuzzCollection.first as Any) => \"Optinal(\"1\")\"\nprint(fizzbuzzCollection.last as Any) ... Error!\n```\n\n\n\u7d99\u627f\u56f3\u3092\u898b\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002`Collection`\u3068`BiDirectionalIndexable`\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\n\n<img width=\"322\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-03 18.07.20.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/27802/6d48849a-7582-85c7-30f2-5993479e6ac2.png\">\n\n\u3053\u3053\u307e\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308c\u3070\u81ea\u4f5c\u306eCollection\u3068\u3057\u3066\u306f\u5341\u5206\u306a\u3082\u306e\u3068\u306a\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u3082\u3057\u3001\u8981\u7d20\u3078\u306e\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u306b\u95a2\u3057\u3066\u9069\u5207\u306a\u8a08\u7b97\u91cf\u3067\u884c\u3048\u308b\u5b9f\u88c5\u304c\u3067\u304d\u308b\u5834\u5408\u306b\u306f\u3001 `RandomAccessCollection` \u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u3066\u3082\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n`BidirectionalCollection` \u3068\u6bd4\u3079\u3066\u5fc5\u9808\u306e\u5b9f\u88c5\u306f\u5897\u3048\u307e\u305b\u3093\u304c\u3001\n*index(_:offsetBy:)*, *distance(from: to:)* \u3068\u3044\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u8a08\u7b97\u91cf *O(1)* \u3067\u5b9f\u88c5\u3067\u304d\u308b\u306e\u304c\u671b\u307e\u3057\u3044\u3088\u3046\u3067\u3059\u3002\n\n## \u3061\u306a\u307f\u306bArray\u306f...\n\n\u4eca\u56de\u306f`BidirectionalCollection` \u307e\u3067\u8a71\u304c\u9032\u307f\u307e\u3057\u305f\u304c\u3001\u66f4\u306b\u9032\u3081\u3066\u3044\u304f\u3068Array\u306b\u305f\u3069\u308a\u7740\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n<img width=\"1478\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-03 18.19.31.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/27802/2634b4a1-26a7-df10-a6a2-9cf945a9d76c.png\">\n\n\u666e\u6bb5\u4f55\u6c17\u306a\u304f\u4f7f\u3063\u3066\u3044\u308bArray\u3082\u3001\u3053\u306e\u3088\u3046\u306b\u3044\u304f\u3064\u3082\u306eprotocol\u3092\u7d4c\u3066\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u6539\u3081\u3066protocol\u6307\u5411\u306a\u3093\u3060\u306a\u3068\u601d\u3044\u77e5\u3089\u3055\u308c\u307e\u3059 :laughing: \n\n## AnyCollection\u3068\u306f... :thinking: \n`AnyCollection\u306f`\u3001`Collection`\u3092\u7d99\u627f\u3057\u3066\u3044\u3066\u3001`Collection`\u3092\u578b\u6d88\u53bb\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b*struct*\u3067\u3059\u3002\n\u304a\u3063\u3068... **\u578b\u6d88\u53bb** \u304c\u3067\u3066\u304d\u307e\u3057\u305f\u306d\u3002\n\u578b\u6d88\u53bb\u306b\u95a2\u3057\u3066\u306f[\u5e73\u5e38\u5fc3\u3067\u578b\u3092\u6d88\u3057\u53bb\u308b](https://realm.io/jp/news/tryswift-gwendolyn-weston-type-erasure/)\u3092\u898b\u308b\u306e\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002(\u8aac\u660e\u306f\u5272\u611b...)\n\n\u4f55\u306b\u4f7f\u3046\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u4f8b\u3048\u3070\u5916\u304b\u3089`FizzBuzzCollection`\u3068\u3044\u3046\u5b9f\u88c5\u3092\u96a0\u3057\u305f\u3044\u304c\u3001\u5916\u304b\u3089\u306f\u3061\u3083\u3093\u3068\u3053\u306e`Collection`\u3092\u4f7f\u3044\u305f\u3044\u3068\u3044\u3046\u5834\u5408\u306b\u3001\u3053\u306e `AnyCollection` \u3092\u4f7f\u3063\u3066\u3042\u3052\u307e\u3059\u3002\n\n```swift\nclass MyCollections {\n    lazy var fizzBuzzCollection: AnyCollection<String> = AnyCollection(FizzBuzzCollection(limit: 100))\n    \n    // \u3053\u308c\u306fNG\u3002\n    lazy var fizzBuzzCollection: Collection = FizzBuzzCollection(limit: 100)\n}\n```\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001`MyCollections`\u3092\u5916\u304b\u3089\u751f\u6210\u3057\u3066`fizzBuzzCollection`\u3092\u898b\u308b\u3068\u304d\u306b\u306f\u3001`FizzBuzzCollection`\u3068\u3044\u3046\u578b\u306f\u898b\u3048\u305a\u3001`AnyCollection<String>`\u3068\u3044\u3046\u578b\u3067\u898b\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u578b\u3092\u96a0\u853d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n<img width=\"299\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-04 1.38.50.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/27802/a4280a1b-94ff-5de8-2024-bc25fda5bf13.png\">\n\n\u3082\u3046\u4e00\u3064\u306e\u4f7f\u3044\u65b9\u3068\u3057\u3066\u306f\u3001\u4f8b\u3048\u3070FizzBuzzCollection\u3068\u540c\u3058\u304f\u8981\u7d20\u304c`String`\u306e`PPAPCollection`\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3057\u3087\u3046\u3002\n\n```swift\nstruct PPAPCollection: Collection {\n    \n    // P-P-A-P\u306e\u9806\u3067\u8981\u7d20\u3092\u3044\u308c\u308b\n    let elements: (String, String, String, String)\n    init(_ first: String, _ second: String, _ third: String, _ fourth: String) {\n        self.elements = (first, second, third, fourth)\n    }\n    \n    var startIndex: Int { return 0 }\n    var endIndex: Int   { return 4 }\n    \n    subscript(index: Int) -> String {\n        switch index {\n        case 0: return elements.0\n        case 1: return elements.1\n        case 2: return elements.2\n        case 3: return elements.3\n        default: fatalError(\"Index out of bounds.\")\n        }\n    }\n    \n    func index(after i: Int) -> Int {\n        precondition(i < endIndex, \"Can't advance beyond endIndex\")\n        return i + 1\n    }\n    \n    var ppap: String {\n        return [elements.0, elements.1, elements.2, elements.3].map {\n            $0.capitalized\n        }.joined(separator: \"-\")\n    }\n}\n\nlet ppapCollection = PPAPCollection(\"pen\", \"pineapple\", \"apple\", \"pen\")\nprint(ppapCollection.ppap)\n// => Pen-Pineapple-Apple-Pen!\n```\n\n\u3069\u3061\u3089\u3082funny\u306acollection\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u308c\u3089\u3092\u307e\u3068\u3081\u308b\u914d\u5217\u3092\u4f5c\u308b\u3068\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u3068\u304d\u306b `[Collection]`\u3068\u3057\u3066\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001 **`[AnyCollection<String>]`** \u3068\u3057\u3066AnyCollection\u306b\u5305\u3093\u3067\u3042\u3052\u308b\u3053\u3068\u3067\u578b\u6d88\u53bb\u3057\u3064\u3064\u307e\u3068\u3081\u3066\u3042\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```swift\nvar NG_funnyCollections: [Collection] = [\n    FizzBuzzCollection(limit: 100),\n    PPAPCollection(\"pen\", \"pineapple\", \"apple\", \"pen\")\n]\n// Protocol 'Collection' can only be used as a generic constraint because it has Self or associated type requirements \u3068\u6012\u3089\u308c\u308b\n\nvar funnyCollections: [AnyCollection<String>] = [\n    AnyCollection(FizzBuzzCollection(limit: 100)),\n    AnyCollection(PPAPCollection(\"pen\", \"pineapple\", \"apple\", \"pen\"))\n]\n// AnyCollection\u3068\u3057\u3066\u5305\u3093\u3067\u3042\u3052\u308b\u3053\u3068\u3067\u3001\u3069\u3061\u3089\u3082\u8981\u7d20\u304c`String`\u3067\u3042\u308bCollection\u3092\u307e\u3068\u3081\u3089\u308c\u305f\uff01\n```\n\n\u3061\u306a\u307f\u306b\u3001`AnyCollection<Any>` \u307f\u305f\u3044\u306b\u3057\u3066\u4f55\u3067\u3082...\u3068\u3044\u3046\u308f\u3051\u306b\u306f\u3044\u304b\u306a\u3044\u306e\u3067\u6ce8\u610f\u3067\u3059 :pray: \n\n## \n\n## \u5185\u90e8\u306blist\u3092\u6240\u6709\u3059\u308b\u3088\u3046\u306aCollection\u3092\u81ea\u4f5c\u3057\u3066\u307f\u308b\n\u4eca\u5ea6\u306f\u5185\u90e8\u306blist(Array)\u3092\u6301\u3064`Collection`\u3092\u81ea\u4f5c\u3057\u3066\u307f\u307e\u3059\u3002\n\u672c\u3092\u8868\u3059\u578b*Book*\u3068\u3001\u672c\u68da\u3092\u8868\u3059\u578b*BookShelf*\u3092\u7528\u610f\u3057\u3001*BookShelf*\u306b`BidirectionalCollection`\u3092\u9069\u5408\u3057\u3066\u307f\u307e\u3059\n\n```swift\nstruct Book {\n    let title: String\n    let content: String\n}\n\nstruct BookShelf: BidirectionalCollection {\n    \n    private let list: [Book]\n    \n    let title: String\n    \n    \n    init(title: String, list: [Book]) {\n        self.title = title\n        self.list = list\n    }\n    \n    var startIndex: Int { return self.list.startIndex }\n    var endIndex: Int { return self.list.endIndex }\n    \n    subscript (position: Int) -> Book {\n        return list[position]\n    }\n    \n    func index(after i: Int) -> Int {\n        return self.list.index(after: i)\n    }\n    \n    func index(before i: Int) -> Int {\n        return self.list.index(before: i)\n    }\n}\n```\n\n### \u4f7f\u3063\u3066\u307f\u308b\n\n### Collection\u3092\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\n\u3053\u306e\u4f8b\u3060\u3068\u3001\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\u306f\u306a\u3093\u306a\u306e\u304b\u3068\u8a00\u308f\u308c\u308b\u3068\u3001 Array **+ \u03b1**\u3092\u3082\u3064\u578b\u3068\u3057\u3066\u5b9a\u7fa9\u3067\u304d\u308b\u3068\u3053\u308d\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nCollection\u3092\u9069\u5408\u3055\u305b\u305f\u5834\u5408\u3068\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3092\u6bd4\u8f03\u3059\u308b\u3068\u3001\n\n```swift\nlet shelf = BookShelf(title: \"swift\u306e\u672c\u68da\", list: [\"The Swift Programming Language\"])\n// \u9069\u5408\u3055\u305b\u3066\u3044\u306a\u3044\u5834\u5408\nshelf.list.forEach { book in prnt(book.title) }\nlet firstBook: Book? = Shelf.list.first\n\n// \u9069\u5408\u3055\u305b\u305f\u5834\u5408\nshelf.forEach  { book in prnt(book.title) }\nlet firstBook: Book? = shelf.first\n```\n\n`Shelf.list`\u3067\u3082\u3044\u3044\u3058\u3083\u3093\u3068\u3044\u3046\u611f\u3058\u3082\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u578b\u81ea\u8eab\u3092`Collection`\u3068\u898b\u7acb\u3066\u3066\u64cd\u4f5c\u304c\u3067\u304d\u308b\u306e\u3067\u500b\u4eba\u7684\u306b\u306f\u826f\u3044\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3042\u3068\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u4f55\u304b\u3057\u3089\u306e\u30e2\u30c7\u30eb\u3092\u307e\u3068\u3081\u3064\u3064\u3001\u4ed6\u306e **+\u03b1** \u3092\u3082\u3064\u3068\u304d\u306b\u3001`Collection`\u5316\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u3001\n`models.list` \u307f\u305f\u3044\u306a\u5197\u9577\u3055\u3092\u89e3\u6d88\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```swift\nstruct SomeViewModels {\n    private let id: Int\n    private let models: [SomeViewModel]\n}\n\nlet models = SomeViewModels(id: 1, models: [SomeViewModel(),...])\nmodels.id\nmodels.list.forEach { model in ... } // models.list\u3063\u3066\u3061\u3087\u3063\u3068\u5197\u9577\u7684\n```\n\n- Collection\u5316\u3059\u308b\u3068...\n\n```swift\nstruct SomeViewModels {\n    private let id: Int\n    private let models: [SomeViewModel]\n}\n\nlet models = SomeViewModels(id: 1, models: [SomeViewModel(),...])\nmodels.id\nmodels.forEach { model in ... } // \u5197\u9577\u3055\u3092\u611f\u3058\u306a\u304f\u306a\u3063\u305f!\n```\n\n\u3068\u306f\u3044\u3044\u3064\u3064\u3082\u3001\u4f7f\u3044\u6240\u304c\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3002\u304c\u3001\u3084\u306f\u308a\u5185\u90e8\u306b\u6301\u3064`list`(\u914d\u5217)\u3092\u5916\u304b\u3089\u898b\u3048\u306a\u304f\u3057\u3064\u3064\u3001\u305d\u306e\u578b\u3092`Collection`\u3068\u3057\u3066\u6271\u3048\u308b\u306e\u306f\u826f\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## \u305d\u306e\u4ed6Document\u3092\u898b\u3066\u6c17\u306b\u306a\u3063\u305f\u3082\u306e\n\n\u3069\u3046\u3084\u3089\u3001Swift4\u3067 `IndexableBase, Indexable, BidirectionalIndexable, RandomAccessIndexable`\u306a\u3069\u304c\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3082\u3057\u4f7f\u3063\u3066\u308b\u5834\u5408\u306f\u4eca\u306e\u3046\u3061\u306b\u4ee3\u6848\u304c\u306a\u3044\u304b\u8003\u3048\u3066\u304a\u304d\u307e\u3057\u3087\u3046...!\n\nhttp://swiftdoc.org/v3.0/protocol/IndexableBase/\n\n> Deprecated: it will be removed in Swift 4.0. Please use 'Collection' instead.\n\n\u4e00\u5fdc\u3001 `InedexableBase, Indexable`\u306e\u5834\u5408\u306f`Collection`\u3092\u4f7f\u3048\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059 :star2:\n\n## \u307e\u3068\u3081\n\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308bArray\u3084Dictionary\u306e\u5148\u7956\u3092\u8fbf\u3063\u3066\u307f\u308b\u3001\u5b9f\u969b\u306bprotocol\u3092\u9069\u5408\u3055\u305b\u305f\u81ea\u4f5c\u306e\u578b\u3092\u4f7f\u3063\u3066\u307f\u308b\u3068\u7406\u89e3\u304c\u6df1\u307e\u308a\u307e\u3059\u306d\uff01\n\u672c\u5f53\u306f`SubSequence`\u3068\u304b`Iterator`\u3068\u304b\u307e\u3067\u6df1\u6398\u308a\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u8ff7\u5bae\u5165\u308a\u3057\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u4eca\u56de\u306f\u8ae6\u3081\u3066\u3001\u306a\u308b\u3079\u304f\u305d\u308c\u3092\u4eca\u56de\u306f\u610f\u8b58\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f :pray: \n\u4eca\u56de\u81ea\u5206\u3067\u307e\u3068\u3081\u308b\u307e\u3067\u3001`AnyCollection`\u3063\u3066\u306a\u3093\u305e\u3084?\u3063\u3066\u611f\u3058\u3060\u3063\u305f\u306e\u3067\u3001\u52c9\u5f37\u306b\u3082\u306a\u308a\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001\u81ea\u4f5c\u306e\u578b\u306bCollection\u3092\u9069\u5408\u3055\u305b\u308b\u5834\u5408\u306b\u306f\u3001\u7bc4\u56f2\u5916\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3057\u307e\u308f\u306c\u3088\u3046\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046\u3002 :dizzy_face:\n\n\u4f55\u304b\u3042\u308c\u3070\u6c17\u8efd\u306b\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u304b\u3067\u3082\u304a\u6295\u3052\u304f\u3060\u3055\u3044\u3002\n\n## \u53c2\u8003\n- [swiftdoc](http://swiftdoc.org/v3.0/)\n- [Collection][collection]\n\n## \u304a\u307e\u3051\n`Collection`\u3068\u306f\u3061\u3087\u3063\u3068\u96e2\u308c\u307e\u3059\u304c\u3001`Iterator`\u3060\u3051\u3092\u4f7f\u3063\u3066`FizzBuzz`\u3082\u3067\u304d\u308b\u3088\u3068\u3044\u3046\u3053\u3068\u3067\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n```swift\nlet makeFizzBuzzIterator: (Int) -> AnyIterator<String> = { limit in\n    var index = 0\n    return AnyIterator<String> {\n        defer { index += 1 }\n        if index < limit {\n            let num = index + 1\n            switch (num % 3, num % 5) {\n            case (0, 0): return \"Fizz Buzz\"\n            case (0, _): return \"Fizz\"\n            case (_, 0): return \"Buzz\"\n            default: return \"\\(num)\"\n            }\n        } else {\n            return nil\n        }\n    }\n}\n\nmakeFizzBuzzIterator(100).forEach { print($0) }\n```\n"}