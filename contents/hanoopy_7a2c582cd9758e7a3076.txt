{"context": " More than 1 year has passed since last update.\n\n\u30a2\u30d7\u30ea\u5185\u5bb9\n\n\u62e1\u5927\u30fb\u7e2e\u5c0f\u306e\u7bc4\u56f2\u306f8\u500d\u301c1\u500d\n\u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u6642\u306f3\u500d\u305a\u3064\u62e1\u5927\u3057\u3066\u3001\u4e0a\u9650\u3092\u8d85\u3048\u305f\u30891\u500d\u306b\u623b\u308b\u3002\n\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u753b\u50cf\u3081\u3063\u3061\u3083\u9762\u767d\u3044\u3002\n\u300c\u8a73\u7d30! Objective-C iPhone\u30a2\u30d7\u30ea\u958b\u767a \u5165\u9580\u30ce\u30fc\u30c8\u300d\u3068\u3044\u3046\u66f8\u7c4d\u306eChapter6-4\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092Swift\u306b\u3057\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u753b\u50cf\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\nViewController.swift\nclass ViewController: UIViewController , UIScrollViewDelegate{\n\n    @IBOutlet var myImageView: UIImageView!\n    @IBOutlet var myScrollView: UIScrollView!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        // \u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\u306e\u8a2d\u5b9a\n        self.myScrollView.delegate = self\n        self.myScrollView.minimumZoomScale = 1\n        self.myScrollView.maximumZoomScale = 8\n        self.myScrollView.scrollEnabled = true\n        self.myScrollView.showsHorizontalScrollIndicator = true\n        self.myScrollView.showsVerticalScrollIndicator = true\n\n        var doubleTapGesture: UITapGestureRecognizer = UITapGestureRecognizer(target: self\n            , action:\"doubleTap:\")\n        doubleTapGesture.numberOfTapsRequired = 2\n        self.myImageView.userInteractionEnabled = true\n        self.myImageView.addGestureRecognizer(doubleTapGesture)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n\n    // \u30d4\u30f3\u30c1\u30a4\u30f3\u30fb\u30d4\u30f3\u30c1\u30a2\u30a6\u30c8\n    func viewForZoomingInScrollView(scrollView: UIScrollView) -> UIView? {\n        print(\"pinch\")\n        return self.myImageView\n    }\n    // \u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\n    func doubleTap(gesture: UITapGestureRecognizer) -> Void {\n\n        print(self.myScrollView.zoomScale)\n        if ( self.myScrollView.zoomScale < self.myScrollView.maximumZoomScale ) {\n\n            var newScale:CGFloat = self.myScrollView.zoomScale * 3\n            var zoomRect:CGRect = self.zoomRectForScale(newScale, center: gesture.locationInView(gesture.view))\n            self.myScrollView.zoomToRect(zoomRect, animated: true)\n\n        } else {\n            self.myScrollView.setZoomScale(1.0, animated: true)\n        }\n    }\n    // \u9818\u57df\n    func zoomRectForScale(scale:CGFloat, center: CGPoint) -> CGRect{\n        var zoomRect: CGRect = CGRect()\n        zoomRect.size.height = self.myScrollView.frame.size.height / scale\n        zoomRect.size.width = self.myScrollView.frame.size.width / scale\n\n        zoomRect.origin.x = center.x - zoomRect.size.width / 2.0\n        zoomRect.origin.y = center.y - zoomRect.size.height / 2.0\n\n        return zoomRect\n    }\n}\n\n\n\n\u30bd\u30fc\u30b9\u30a2\u30c3\u30d7\nhttps://github.com/hanoopy/ios_study_pinchapp.git\n\n\u30b3\u30e1\u30f3\u30c8\n\nios\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u30d4\u30f3\u30c1\u30a4\u30f3\u30fb\u30d4\u30f3\u30c1\u30a2\u30a6\u30c8\u306foption\u30ad\u30fc\u3092\u62bc\u3057\u306a\u304c\u3089\u30de\u30a6\u30b9\u3092\u30c9\u30e9\u30c3\u30b0\u3059\u308b\u3002\n\u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u3068\u30d4\u30f3\u30c1\u4ee5\u5916\u3082\u8f09\u3063\u3066\u3044\u308bSwift\u306e\u30b5\u30f3\u30d7\u30eb\nhttps://sites.google.com/a/gclue.jp/swift-docs/ni-yinki100-ios/uikit/uiswipegesturerecognizerdesuwaipuwo-ren-shi\n\n\n\n![\u30a2\u30d7\u30ea\u753b\u50cf](http://i.gyazo.com/485e3c502d7be2e23ebb1062bfddf9d9.gif)\n\n###\u30a2\u30d7\u30ea\u5185\u5bb9\n* \u62e1\u5927\u30fb\u7e2e\u5c0f\u306e\u7bc4\u56f2\u306f8\u500d\u301c1\u500d\n* \u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u6642\u306f3\u500d\u305a\u3064\u62e1\u5927\u3057\u3066\u3001\u4e0a\u9650\u3092\u8d85\u3048\u305f\u30891\u500d\u306b\u623b\u308b\u3002\n\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u753b\u50cf\u3081\u3063\u3061\u3083\u9762\u767d\u3044\u3002\n\u300c\u8a73\u7d30! Objective-C iPhone\u30a2\u30d7\u30ea\u958b\u767a \u5165\u9580\u30ce\u30fc\u30c8\u300d\u3068\u3044\u3046\u66f8\u7c4d\u306eChapter6-4\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092Swift\u306b\u3057\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u753b\u50cf\u3067\u3059\u3002\n\n###\u30b3\u30fc\u30c9\n```Swift:ViewController.swift\nclass ViewController: UIViewController , UIScrollViewDelegate{\n    \n    @IBOutlet var myImageView: UIImageView!\n    @IBOutlet var myScrollView: UIScrollView!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        // \u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\u306e\u8a2d\u5b9a\n        self.myScrollView.delegate = self\n        self.myScrollView.minimumZoomScale = 1\n        self.myScrollView.maximumZoomScale = 8\n        self.myScrollView.scrollEnabled = true\n        self.myScrollView.showsHorizontalScrollIndicator = true\n        self.myScrollView.showsVerticalScrollIndicator = true\n        \n        var doubleTapGesture: UITapGestureRecognizer = UITapGestureRecognizer(target: self\n            , action:\"doubleTap:\")\n        doubleTapGesture.numberOfTapsRequired = 2\n        self.myImageView.userInteractionEnabled = true\n        self.myImageView.addGestureRecognizer(doubleTapGesture)\n    }\n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n    \n    // \u30d4\u30f3\u30c1\u30a4\u30f3\u30fb\u30d4\u30f3\u30c1\u30a2\u30a6\u30c8\n    func viewForZoomingInScrollView(scrollView: UIScrollView) -> UIView? {\n        print(\"pinch\")\n        return self.myImageView\n    }\n    // \u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\n    func doubleTap(gesture: UITapGestureRecognizer) -> Void {\n        \n        print(self.myScrollView.zoomScale)\n        if ( self.myScrollView.zoomScale < self.myScrollView.maximumZoomScale ) {\n            \n            var newScale:CGFloat = self.myScrollView.zoomScale * 3\n            var zoomRect:CGRect = self.zoomRectForScale(newScale, center: gesture.locationInView(gesture.view))\n            self.myScrollView.zoomToRect(zoomRect, animated: true)\n            \n        } else {\n            self.myScrollView.setZoomScale(1.0, animated: true)\n        }\n    }\n    // \u9818\u57df\n    func zoomRectForScale(scale:CGFloat, center: CGPoint) -> CGRect{\n        var zoomRect: CGRect = CGRect()\n        zoomRect.size.height = self.myScrollView.frame.size.height / scale\n        zoomRect.size.width = self.myScrollView.frame.size.width / scale\n        \n        zoomRect.origin.x = center.x - zoomRect.size.width / 2.0\n        zoomRect.origin.y = center.y - zoomRect.size.height / 2.0\n        \n        return zoomRect\n    }\n}\n```\n\n###\u30bd\u30fc\u30b9\u30a2\u30c3\u30d7\nhttps://github.com/hanoopy/ios_study_pinchapp.git\n\n###\u30b3\u30e1\u30f3\u30c8\n* ios\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u30d4\u30f3\u30c1\u30a4\u30f3\u30fb\u30d4\u30f3\u30c1\u30a2\u30a6\u30c8\u306foption\u30ad\u30fc\u3092\u62bc\u3057\u306a\u304c\u3089\u30de\u30a6\u30b9\u3092\u30c9\u30e9\u30c3\u30b0\u3059\u308b\u3002\n* \u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u3068\u30d4\u30f3\u30c1\u4ee5\u5916\u3082\u8f09\u3063\u3066\u3044\u308bSwift\u306e\u30b5\u30f3\u30d7\u30eb\nhttps://sites.google.com/a/gclue.jp/swift-docs/ni-yinki100-ios/uikit/uiswipegesturerecognizerdesuwaipuwo-ren-shi\n", "tags": ["Swift", "Xcode6", "iOS"]}