{"tags": ["Swift", "Swift3.0", "NSException"], "context": "KVO\u3067addObserver\u3057\u305f\u3082\u306e\u3092removeObserver\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u3001add\u3057\u305f\u4ee5\u4e0a\u306bremove\u3092\u547c\u3076\u3068Exception\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u767a\u751f\u3057\u305fException\u306fSwift\u3067\u76f4\u63a5catch\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306aObjective-C\u306e\u30e9\u30c3\u30d1\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306eException\u3092catch\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nExceptionHandler.m\n#import \"ExceptionHandler.h\"\n\n@implementation ExceptionHandler\n\n+ (BOOL)catchExceptionWithTryBlock:(__attribute__((noescape)) void(^ _Nonnull)())tryBlock error:(NSError * _Nullable __autoreleasing * _Nullable)error {\n    @try {\n        tryBlock();\n        return YES;\n    } @catch (NSException *exception) {\n        *error = [NSError errorWithDomain:exception.name code:-9999 userInfo:exception.userInfo];\n        return NO;\n    }\n}\n\n@end\n\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u5f15\u6570\u304cNSError **\u3067\u8fd4\u308a\u5024\u304cBOOL\u306a\u30e1\u30bd\u30c3\u30c9\u306f\u3001Swift\u5074\u3067\u81ea\u52d5\u7684\u306bthrowable\u306a\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5909\u63db\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\nExceptionCatchable.swift\nprotocol ExceptionCatchable {}\n\nextension ExceptionCatchable {\n    func execute(_ tryBlock: () -> ()) throws {\n        try ExceptionHandler.catchException(try: tryBlock)\n    }\n}\n\n\nProtocol\u3068\u3057\u3066\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u306e\u307f\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3092\u3057\u3066\u3082\u3046\u4e00\u5ea6throw\u3057\u307e\u3059\u3002\n\nViewController.swift\nclass DataSource: NSObject {\n    dynamic var value: String = \"\"\n}\n\nclass ViewController: UIViewController, ExceptionCatchable {\n\n    let dataSource = DataSource()\n\n    deinit {\n        do {\n            try execute {\n                dataSource.removeObserver(self, forKeyPath: \"value\")\n                dataSource.removeObserver(self, forKeyPath: \"value\")\n            }\n        } catch let e {\n            print(\"\\n\", e, \"\\n\")\n        }\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n        dataSource.addObserver(self, forKeyPath: \"value\", options: .new, context: nil)\n    }\n}\n\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001execute\u30e1\u30bd\u30c3\u30c9\u306bException\u304c\u8d77\u3053\u308b\u3067\u3042\u308d\u3046\u51e6\u7406\u306eClosure\u3092\u6e21\u3057\u3066\u3001try-catch\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nKVO\u306eremove\u306e\u5834\u5408\u3060\u3051\u3067\u306a\u304f\u3001\u63e1\u308a\u3064\u3076\u3057\u305f\u3044Exception\u306e\u5834\u5408\u306b\u3082\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\nKVO\u3067addObserver\u3057\u305f\u3082\u306e\u3092removeObserver\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u3001add\u3057\u305f\u4ee5\u4e0a\u306bremove\u3092\u547c\u3076\u3068Exception\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u767a\u751f\u3057\u305fException\u306fSwift\u3067\u76f4\u63a5catch\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306aObjective-C\u306e\u30e9\u30c3\u30d1\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306eException\u3092catch\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```objc:ExceptionHandler.m\n#import \"ExceptionHandler.h\"\n\n@implementation ExceptionHandler\n\n+ (BOOL)catchExceptionWithTryBlock:(__attribute__((noescape)) void(^ _Nonnull)())tryBlock error:(NSError * _Nullable __autoreleasing * _Nullable)error {\n\t@try {\n\t\ttryBlock();\n\t\treturn YES;\n\t} @catch (NSException *exception) {\n\t\t*error = [NSError errorWithDomain:exception.name code:-9999 userInfo:exception.userInfo];\n\t\treturn NO;\n\t}\n}\n\n@end\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u5f15\u6570\u304c`NSError **`\u3067\u8fd4\u308a\u5024\u304c`BOOL`\u306a\u30e1\u30bd\u30c3\u30c9\u306f\u3001Swift\u5074\u3067\u81ea\u52d5\u7684\u306bthrowable\u306a\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5909\u63db\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n```swift:ExceptionCatchable.swift\nprotocol ExceptionCatchable {}\n\nextension ExceptionCatchable {\n    func execute(_ tryBlock: () -> ()) throws {\n        try ExceptionHandler.catchException(try: tryBlock)\n    }\n}\n```\n\nProtocol\u3068\u3057\u3066\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u306e\u307f\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3092\u3057\u3066\u3082\u3046\u4e00\u5ea6throw\u3057\u307e\u3059\u3002\n\n```swift:ViewController.swift\nclass DataSource: NSObject {\n    dynamic var value: String = \"\"\n}\n\nclass ViewController: UIViewController, ExceptionCatchable {\n\n    let dataSource = DataSource()\n    \n    deinit {\n        do {\n            try execute {\n                dataSource.removeObserver(self, forKeyPath: \"value\")\n                dataSource.removeObserver(self, forKeyPath: \"value\")\n            }\n        } catch let e {\n            print(\"\\n\", e, \"\\n\")\n        }\n    }\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n        dataSource.addObserver(self, forKeyPath: \"value\", options: .new, context: nil)\n    }\n}\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001execute\u30e1\u30bd\u30c3\u30c9\u306bException\u304c\u8d77\u3053\u308b\u3067\u3042\u308d\u3046\u51e6\u7406\u306eClosure\u3092\u6e21\u3057\u3066\u3001try-catch\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nKVO\u306eremove\u306e\u5834\u5408\u3060\u3051\u3067\u306a\u304f\u3001\u63e1\u308a\u3064\u3076\u3057\u305f\u3044Exception\u306e\u5834\u5408\u306b\u3082\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\n"}