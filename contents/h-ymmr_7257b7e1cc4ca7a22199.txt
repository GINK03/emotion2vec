{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nserverspec\u306ewinrm\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066\u300cwinrs.exe\u300d\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u305d\u306e\u7d50\u679c\u51e6\u7406\u6642\u9593\u304c\u304b\u306a\u308a\u77ed\u7e2e\u3055\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001Sysinternals\u306b\u542b\u307e\u308c\u308b\u300cPsExec.exe\u300d\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u3053\u3061\u3089\u306f\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u306e\u6587\u5b57\u5217\u6570\u306b\u5236\u9650\u304c\u3042\u308b\u3088\u3046\u3067Serverspec\u3067\u306f\u5229\u7528\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u300cwinrs.exe\u300d\u306e\u7f6e\u304d\u63db\u3048\u306b\u3064\u3044\u3066\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\u8a18\u4e8b\u4f5c\u6210\u3067\u7528\u3044\u305fOS\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\nWindows 7 Pro SP1 32bit \u65e5\u672c\u8a9e\u7248\nruby 2.2.3p173 (2015-08-18 revision 51636) [i386-mingw32]\nrspec (3.4.0)\nrspec-core (3.4.1)\nrspec-its (1.2.0)\nserverspec (2.26.0)\nspecinfra (2.47.0)\n\n\u203bruby\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5168\u3066\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u300cUTF-8\u300d\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u203b\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u306f\u300cShift-JIS\u300d\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\nWinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f5c\u6210\nwinrm\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304b\u3089winrs.exe\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u203bOpen3.capture3\u3092\u4f7f\u3046\u3068\u56fa\u307e\u3063\u3066\u3057\u307e\u3046\u306e\u3067systemu\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\nC\uff1a\\serverspec\\sample\\lib\\CustomWinRs.rb\nrequire 'rubygems'\nrequire 'open3'\nrequire 'systemu'\nrequire 'kconv'\n\nclass CustomWinRs\n\n  @my_name = 'CustomWinRs'\n\n  def initialize(args = {})\n    @user_name = args['user']     if args.key?('user')\n    @user_pass = args['pass']     if args.key?('pass')\n    @host_name = args['host']     if args.key?('host')\n    @winrm_client = args['winrm'] if args.key?('winrm')\n    @run_mode = args['mode']      if args.key?('mode')\n  end\n\n  def run_command(command)\n    retcode = -1\n    if @run_mode == \"ps1\"\n      exec_cmd = \"powershell -NoProfile -encodedCommand #{command}\"\n    else\n      command  = \"#{command}\".gsub(\"\\\\\\\"\",\"\\\"\").gsub(\"\\\"\",\"\\\\\\\"\")\n      exec_cmd = \"powershell -NoProfile -command \\\"#{command}\\\"\"\n    end\n    exec_cmd     = \"#{@winrm_client} -r:#{@host_name} -u:#{@user_name} -p:#{@user_pass} #{exec_cmd}\"\n    # systemu\u306e\u4e0d\u5177\u5408\u56de\u907f\n    case \"#{exec_cmd}\".length\n      when 21,282,3866 then\n        exec_cmd = \"#{@winrm_client} -remote:#{@host_name} -u:#{@user_name} -p:#{@user_pass} #{exec_cmd}\"\n    end\n    begin\n      # stdout, stderr, status  = Open3.capture3(exec_cmd)\n      status, stdout, stderr = systemu \"#{exec_cmd}\"\n      retcode = status.exitstatus   if ! status.nil?\n      retcode = -1                  if retcode.nil? || \"#{retcode}\" == ''\n    rescue Exception => excptn\n      puts Kconv.tosjis( \"EXCEPTION : #{excptn.message}\" )\n      retcode = -1\n      stdout  = \"\"\n      stderr  = excptn.message\n    end\n    return {:exitcode => retcode, :stdout => stdout, :stderr => stderr}\n  end\n\n  def run_cmd(command)\n    @run_mode = \"cmd\"\n    return run_command(command)\n  end\n  alias :cmd :run_cmd\n\n  def run_powershell_script(command)\n    @run_mode = \"ps1\"\n    return run_command(Base64.strict_encode64(\"#{command}\".encode('UTF-16LE')))\n  end\n  alias :powershell :run_powershell_script\n\nend\n\n\nspec_helper.rb\u3067WinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\nC\uff1a\\serverspec\\sample\\spec\\spec_helper.rb\nrequire 'serverspec'\nrequire 'yaml'\nWINRM_CLIENT_GEM_WINRM = 1\nWINRM_CLIENT_PS1_WINRM = 2\nWINRM_CLIENT_CSP_WINRM = 3\nWINRM_CLIENT_EXE_WINRS = 4\nWINRM_CLIENT_EXE_PSEXE = 5\nwinrm_client = WINRM_CLIENT_EXE_WINRS\nparams = {}\nparams['hostname'] = ENV['TARGET_HOST']\nparams['run_env'] = \"development\"\nputs \"\"\nputs \"##################################################\"\nputs \"HOST: #{params['hostname']} : #{params['run_env']} : winrm_client = #{winrm_client}\"\nputs \"##################################################\"\nproperties      = YAML.load_file(\"env/properties.#{params['run_env']}.yml\")\nset_property    = properties\nset :backend, :winrm\nset :os, :family => 'windows'\nSpecinfra.configuration.customwinrm = true\ncase winrm_client\n  when WINRM_CLIENT_GEM_WINRM\n    require 'winrm'\n    endpoint = \"http://#{ENV['TARGET_HOST']}:5985/wsman\"\n    winrm = ::WinRM::WinRMWebService.new(endpoint, :ssl, :user => \"#{properties[:winrm_user]}\", :pass => \"#{properties[:winrm_pass]}\", :basic_auth_only => true)\n    winrm.set_timeout 300\n  when WINRM_CLIENT_PS1_WINRM\n    require 'CustomWinRm'\n    winrm   = CustomWinRm.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \".\\\\lib\\\\WinRm.ps1\"})\n  when WINRM_CLIENT_CSP_WINRM\n    require 'CustomWinRm'\n    winrm  = CustomWinRm.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \".\\\\lib\\\\rmtcmd.exe\"})\n  when WINRM_CLIENT_EXE_WINRS\n    require 'CustomWinRs'\n    winrm   = CustomWinRs.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \"C:\\\\Windows\\\\system32\\\\winrs.exe\"})\n    Specinfra.configuration.os_encoding = \"Windows-31J\"\n    Specinfra.configuration.file_encoding = \"Shift-JIS\"\n    Specinfra.configuration.script_encoding = \"Windows-31J\"\n  when WINRM_CLIENT_EXE_PSEXE\n    require 'CustomPsExec'\n    winrm   = CustomPsExec.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \"C:\\\\Tool\\\\SysinternalsSuite\\\\PsExec.exe\"})\nend\nSpecinfra.configuration.winrm = winrm\n\n\n\nSpecInfra\u306e\u4fee\u6b63\n\u4ee5\u524d\u66f8\u3044\u305f\u8a18\u4e8bServerspec\u3067\u4f7f\u3046WinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092Invoke-command\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u305f\u3067\u4fee\u6b63\u3057\u305f\u300clib\\specinfra\\backend\\winrm.rb\u300d\u4ee5\u5916\u306b\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nlib\\specinfra\\command\\windows\\base\\file.rb\n46c46,51\n<       %Q!Get-Content(\"#{file}\") | Out-String!\n---\n>       # MODIFIED\n>       if Specinfra.configuration.file_encoding.nil?\n>         %Q!Get-Content(\"#{file}\") | Out-String!\n>       else\n>         %Q![Io.File]::ReadAllText(\"#{file}\", [System.Text.Encoding]::GetEncoding(\"#{Specinfra.configuration.file_encod\ning}\"))!\n>       end\n91c96,101\n<         exec %Q!(Get-Content(\"#{file}\") | Out-String) -match '#{convert_regexp(pattern)}'!\n---\n>         # MODIFIED\n>         if Specinfra.configuration.file_encoding.nil?\n>           exec %Q!(Get-Content(\"#{file}\") | Out-String) -match '#{convert_regexp(pattern)}'!\n>         else\n>           exec %Q![Io.File]::ReadAllText(\"#{file}\", [System.Text.Encoding]::GetEncoding(\"#{Specinfra.configuration.fil\ne_encoding}\")) -match \"#{convert_regexp(pattern)}\"!\n>         end\n100c110,115\n<         exec %Q!(CropText -text (Get-Content(\"#{file}\") | Out-String) -fromPattern '#{convert_regexp(from)}' -toPatter\nn '#{convert_regexp(to)}') -match '#{pattern}'!\n---\n>         # MODIFIED\n>         if Specinfra.configuration.file_encoding.nil?\n>           exec %Q!(CropText -text (Get-Content(\"#{file}\") | Out-String) -fromPattern '#{convert_regexp(from)}' -toPatt\nern '#{convert_regexp(to)}') -match '#{pattern}'!\n>         else\n>           exec %Q!(CropText -text ([Io.File]::ReadAllText(\"#{file}\"), [System.Text.Encoding]::GetEncoding(\"#{Specinfra\n.configuration.file_encoding}\")) -fromPattern \"#{convert_regexp(from)}\" -toPattern \"#{convert_regexp(to)}\") -match \"#{pa\nttern}\"!\n>         end\n\n\n\nlib\\specinfra\\backend\\powershell\\script_helper.rb\n40c40,44\n<             script_text = script_text.encode('ASCII-8BIT')\n---\n>             if Specinfra.configuration.script_encoding.nil?\n>               script_text = script_text.encode('ASCII-8BIT')\n>             else\n>               script_text = script.strip.encode('UTF-16LE', Specinfra.configuration.script_encoding)\n>             end\n\n\n\nServerspec\u306e\u4fee\u6b63\nServerspec\u5074\u3082\u5c11\u3057\u3060\u3051\u4fee\u6b63\u3092\u52a0\u3048\u3066\u3044\u304d\u307e\u3059\u3002\n\nlib\\serverspec.rb\n61a62,80\n>     # ADD\n>     # rspec-core-3.4.1/lib/rspec/core/formatters/exception_presenter.rb:77:in `join': incompatible character encodings: Windows-31J and UTF-8 (Encoding::CompatibilityError)\n>     def fully_formatted(failure_number, colorizer=::RSpec::Core::Formatters::ConsoleCodes)\n>       lines = fully_formatted_lines(failure_number, colorizer)\n>       # lines.join(\"\\n\") << \"\\n\"\n>       tmp = \"\"\n>       lines.each {|line| tmp << \"#{line}\\n\".encode('UTF-8')}\n>       tmp\n>     end\n>   end\n> end\n>\n> # ADD\n> # rspec-core-3.4.1/lib/rspec/core/source.rb:23:in `split': invalid byte sequence in Windows-31J (ArgumentError)\n> if defined?(RSpec::Core::Source)\n>   class RSpec::Core::Source\n>     def lines\n>       @lines ||= source.scrub('?').split(\"\\n\")\n>     end\n\n\n\nlib\\serverspec\\type\\command.rb\n0a1\n> require \"kconv\"     # ADD\n4c5,8\n<       command_result.stdout\n---\n>       # MODIFIED\n>       # command_result.stdout\n>       # Kconv.toutf8( \"#{command_result.stdout}\" ).encode(\"Windows-31J\")\n>       return_result(command_result.stdout)\n8c12,15\n<       command_result.stderr\n---\n>       # MODIFIED\n>       # command_result.stderr\n>       # Kconv.toutf8( \"#{command_result.stderr}\" ).encode(\"Windows-31J\")\n>       return_result(command_result.stderr)\n18a26,35\n>\n>     # MODIFIED\n>     def return_result(result)\n>       if Specinfra.configuration.os_encoding.nil?\n>         result\n>       else\n>         Kconv.toutf8( \"#{result}\" ).encode(Specinfra.configuration.os_encoding)\n>       end\n>     end\n>\n\n\n\nlib\\serverspec\\type\\file.rb\n1a2\n> require \"kconv\"     # ADD\n113c114,119\n<       @content\n---\n>       # MODIFIED\n>       if Specinfra.configuration.os_encoding.nil?\n>         @content\n>       else\n>         Kconv.toutf8(\"#{@content}\").encode(Specinfra.configuration.os_encoding)\n>       end\n\n\n\n\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\n\u305d\u308c\u3067\u306f\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\nPS C:\\serverspec\\sample> rake\n\n##################################################\nHOST: REMOTEHOST : development : winrm_client = 4\n##################################################\n\nCommand \"ipconfig /all | Select-String \u30ce\u30fc\u30c9\"\n  stdout\n    should match /\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9/\n\nFile \"C:\\serverspec\\test.cmd\"\n  should be file\n  should contain \"\u3042\u3044\u3046\u3048\u304a\"\n  should not contain \"\u304b\u304d\u304f\u3051\u3053\"\n  content\n    should match /\u3042\u3044\u3046\u3048\u304a/\n  content\n    should not match /\u304b\u304d\u304f\u3051\u3053/\n\nFinished in 6.5 seconds (files took 1.29 seconds to load)\n6 examples, 0 failures\n\nPS C:\\serverspec\\sample>\n\n\u304b\u306a\u308a\u51e6\u7406\u6642\u9593\u304c\u77ed\u7e2e\u3055\u308c\u307e\u3057\u305f\u3002\n# \u306f\u3058\u3081\u306b\nserverspec\u306ewinrm\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066\u300cwinrs.exe\u300d\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u305d\u306e\u7d50\u679c\u51e6\u7406\u6642\u9593\u304c\u304b\u306a\u308a\u77ed\u7e2e\u3055\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001Sysinternals\u306b\u542b\u307e\u308c\u308b\u300cPsExec.exe\u300d\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u3053\u3061\u3089\u306f\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u306e\u6587\u5b57\u5217\u6570\u306b\u5236\u9650\u304c\u3042\u308b\u3088\u3046\u3067Serverspec\u3067\u306f\u5229\u7528\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306f\u300cwinrs.exe\u300d\u306e\u7f6e\u304d\u63db\u3048\u306b\u3064\u3044\u3066\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n# \u30d0\u30fc\u30b8\u30e7\u30f3\n\n\u8a18\u4e8b\u4f5c\u6210\u3067\u7528\u3044\u305fOS\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n- Windows 7 Pro SP1 32bit \u65e5\u672c\u8a9e\u7248\n- ruby 2.2.3p173 (2015-08-18 revision 51636) [i386-mingw32]\n- rspec (3.4.0)\n- rspec-core (3.4.1)\n- rspec-its (1.2.0)\n- serverspec (2.26.0)\n- specinfra (2.47.0)\n\n\u203bruby\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5168\u3066\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u300cUTF-8\u300d\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u203b\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u306f\u300cShift-JIS\u300d\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\n# WinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f5c\u6210\n\nwinrm\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304b\u3089winrs.exe\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u203bOpen3.capture3\u3092\u4f7f\u3046\u3068\u56fa\u307e\u3063\u3066\u3057\u307e\u3046\u306e\u3067systemu\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n```ruby:C\uff1a\\serverspec\\sample\\lib\\CustomWinRs.rb\nrequire 'rubygems'\nrequire 'open3'\nrequire 'systemu'\nrequire 'kconv'\n\nclass CustomWinRs\n\n  @my_name = 'CustomWinRs'\n\n  def initialize(args = {})\n    @user_name = args['user']     if args.key?('user')\n    @user_pass = args['pass']     if args.key?('pass')\n    @host_name = args['host']     if args.key?('host')\n    @winrm_client = args['winrm'] if args.key?('winrm')\n    @run_mode = args['mode']      if args.key?('mode')\n  end\n\n  def run_command(command)\n    retcode = -1\n    if @run_mode == \"ps1\"\n      exec_cmd = \"powershell -NoProfile -encodedCommand #{command}\"\n    else\n      command  = \"#{command}\".gsub(\"\\\\\\\"\",\"\\\"\").gsub(\"\\\"\",\"\\\\\\\"\")\n      exec_cmd = \"powershell -NoProfile -command \\\"#{command}\\\"\"\n    end\n    exec_cmd     = \"#{@winrm_client} -r:#{@host_name} -u:#{@user_name} -p:#{@user_pass} #{exec_cmd}\"\n    # systemu\u306e\u4e0d\u5177\u5408\u56de\u907f\n    case \"#{exec_cmd}\".length\n      when 21,282,3866 then\n        exec_cmd = \"#{@winrm_client} -remote:#{@host_name} -u:#{@user_name} -p:#{@user_pass} #{exec_cmd}\"\n    end\n    begin\n      # stdout, stderr, status  = Open3.capture3(exec_cmd)\n      status, stdout, stderr = systemu \"#{exec_cmd}\"\n      retcode = status.exitstatus   if ! status.nil?\n      retcode = -1                  if retcode.nil? || \"#{retcode}\" == ''\n    rescue Exception => excptn\n      puts Kconv.tosjis( \"EXCEPTION : #{excptn.message}\" )\n      retcode = -1\n      stdout  = \"\"\n      stderr  = excptn.message\n    end\n    return {:exitcode => retcode, :stdout => stdout, :stderr => stderr}\n  end\n\n  def run_cmd(command)\n    @run_mode = \"cmd\"\n    return run_command(command)\n  end\n  alias :cmd :run_cmd\n\n  def run_powershell_script(command)\n    @run_mode = \"ps1\"\n    return run_command(Base64.strict_encode64(\"#{command}\".encode('UTF-16LE')))\n  end\n  alias :powershell :run_powershell_script\n\nend\n```\n\nspec_helper.rb\u3067WinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```ruby:C\uff1a\\serverspec\\sample\\spec\\spec_helper.rb\nrequire 'serverspec'\nrequire 'yaml'\nWINRM_CLIENT_GEM_WINRM = 1\nWINRM_CLIENT_PS1_WINRM = 2\nWINRM_CLIENT_CSP_WINRM = 3\nWINRM_CLIENT_EXE_WINRS = 4\nWINRM_CLIENT_EXE_PSEXE = 5\nwinrm_client = WINRM_CLIENT_EXE_WINRS\nparams = {}\nparams['hostname'] = ENV['TARGET_HOST']\nparams['run_env'] = \"development\"\nputs \"\"\nputs \"##################################################\"\nputs \"HOST: #{params['hostname']} : #{params['run_env']} : winrm_client = #{winrm_client}\"\nputs \"##################################################\"\nproperties      = YAML.load_file(\"env/properties.#{params['run_env']}.yml\")\nset_property    = properties\nset :backend, :winrm\nset :os, :family => 'windows'\nSpecinfra.configuration.customwinrm = true\ncase winrm_client\n  when WINRM_CLIENT_GEM_WINRM\n    require 'winrm'\n    endpoint = \"http://#{ENV['TARGET_HOST']}:5985/wsman\"\n    winrm = ::WinRM::WinRMWebService.new(endpoint, :ssl, :user => \"#{properties[:winrm_user]}\", :pass => \"#{properties[:winrm_pass]}\", :basic_auth_only => true)\n    winrm.set_timeout 300\n  when WINRM_CLIENT_PS1_WINRM\n    require 'CustomWinRm'\n    winrm   = CustomWinRm.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \".\\\\lib\\\\WinRm.ps1\"})\n  when WINRM_CLIENT_CSP_WINRM\n    require 'CustomWinRm'\n    winrm  = CustomWinRm.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \".\\\\lib\\\\rmtcmd.exe\"})\n  when WINRM_CLIENT_EXE_WINRS\n    require 'CustomWinRs'\n    winrm   = CustomWinRs.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \"C:\\\\Windows\\\\system32\\\\winrs.exe\"})\n    Specinfra.configuration.os_encoding = \"Windows-31J\"\n    Specinfra.configuration.file_encoding = \"Shift-JIS\"\n    Specinfra.configuration.script_encoding = \"Windows-31J\"\n  when WINRM_CLIENT_EXE_PSEXE\n    require 'CustomPsExec'\n    winrm   = CustomPsExec.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \"C:\\\\Tool\\\\SysinternalsSuite\\\\PsExec.exe\"})\nend\nSpecinfra.configuration.winrm = winrm\n```\n\n# SpecInfra\u306e\u4fee\u6b63\n\n\u4ee5\u524d\u66f8\u3044\u305f\u8a18\u4e8b[Serverspec\u3067\u4f7f\u3046WinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092Invoke-command\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u305f](http://qiita.com/h-ymmr/items/627aa60b57171f67d295)\u3067\u4fee\u6b63\u3057\u305f\u300clib\\specinfra\\backend\\winrm.rb\u300d\u4ee5\u5916\u306b\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```diff:lib\\specinfra\\command\\windows\\base\\file.rb\n46c46,51\n<       %Q!Get-Content(\"#{file}\") | Out-String!\n---\n>       # MODIFIED\n>       if Specinfra.configuration.file_encoding.nil?\n>         %Q!Get-Content(\"#{file}\") | Out-String!\n>       else\n>         %Q![Io.File]::ReadAllText(\"#{file}\", [System.Text.Encoding]::GetEncoding(\"#{Specinfra.configuration.file_encod\ning}\"))!\n>       end\n91c96,101\n<         exec %Q!(Get-Content(\"#{file}\") | Out-String) -match '#{convert_regexp(pattern)}'!\n---\n>         # MODIFIED\n>         if Specinfra.configuration.file_encoding.nil?\n>           exec %Q!(Get-Content(\"#{file}\") | Out-String) -match '#{convert_regexp(pattern)}'!\n>         else\n>           exec %Q![Io.File]::ReadAllText(\"#{file}\", [System.Text.Encoding]::GetEncoding(\"#{Specinfra.configuration.fil\ne_encoding}\")) -match \"#{convert_regexp(pattern)}\"!\n>         end\n100c110,115\n<         exec %Q!(CropText -text (Get-Content(\"#{file}\") | Out-String) -fromPattern '#{convert_regexp(from)}' -toPatter\nn '#{convert_regexp(to)}') -match '#{pattern}'!\n---\n>         # MODIFIED\n>         if Specinfra.configuration.file_encoding.nil?\n>           exec %Q!(CropText -text (Get-Content(\"#{file}\") | Out-String) -fromPattern '#{convert_regexp(from)}' -toPatt\nern '#{convert_regexp(to)}') -match '#{pattern}'!\n>         else\n>           exec %Q!(CropText -text ([Io.File]::ReadAllText(\"#{file}\"), [System.Text.Encoding]::GetEncoding(\"#{Specinfra\n.configuration.file_encoding}\")) -fromPattern \"#{convert_regexp(from)}\" -toPattern \"#{convert_regexp(to)}\") -match \"#{pa\nttern}\"!\n>         end\n```\n\n```diff:lib\\specinfra\\backend\\powershell\\script_helper.rb\n40c40,44\n<             script_text = script_text.encode('ASCII-8BIT')\n---\n>             if Specinfra.configuration.script_encoding.nil?\n>               script_text = script_text.encode('ASCII-8BIT')\n>             else\n>               script_text = script.strip.encode('UTF-16LE', Specinfra.configuration.script_encoding)\n>             end\n```\n\n# Serverspec\u306e\u4fee\u6b63\n\nServerspec\u5074\u3082\u5c11\u3057\u3060\u3051\u4fee\u6b63\u3092\u52a0\u3048\u3066\u3044\u304d\u307e\u3059\u3002\n\n```diff:lib\\serverspec.rb\n61a62,80\n>     # ADD\n>     # rspec-core-3.4.1/lib/rspec/core/formatters/exception_presenter.rb:77:in `join': incompatible character encodings: Windows-31J and UTF-8 (Encoding::CompatibilityError)\n>     def fully_formatted(failure_number, colorizer=::RSpec::Core::Formatters::ConsoleCodes)\n>       lines = fully_formatted_lines(failure_number, colorizer)\n>       # lines.join(\"\\n\") << \"\\n\"\n>       tmp = \"\"\n>       lines.each {|line| tmp << \"#{line}\\n\".encode('UTF-8')}\n>       tmp\n>     end\n>   end\n> end\n>\n> # ADD\n> # rspec-core-3.4.1/lib/rspec/core/source.rb:23:in `split': invalid byte sequence in Windows-31J (ArgumentError)\n> if defined?(RSpec::Core::Source)\n>   class RSpec::Core::Source\n>     def lines\n>       @lines ||= source.scrub('?').split(\"\\n\")\n>     end\n```\n\n```diff:lib\\serverspec\\type\\command.rb\n0a1\n> require \"kconv\"     # ADD\n4c5,8\n<       command_result.stdout\n---\n>       # MODIFIED\n>       # command_result.stdout\n>       # Kconv.toutf8( \"#{command_result.stdout}\" ).encode(\"Windows-31J\")\n>       return_result(command_result.stdout)\n8c12,15\n<       command_result.stderr\n---\n>       # MODIFIED\n>       # command_result.stderr\n>       # Kconv.toutf8( \"#{command_result.stderr}\" ).encode(\"Windows-31J\")\n>       return_result(command_result.stderr)\n18a26,35\n>\n>     # MODIFIED\n>     def return_result(result)\n>       if Specinfra.configuration.os_encoding.nil?\n>         result\n>       else\n>         Kconv.toutf8( \"#{result}\" ).encode(Specinfra.configuration.os_encoding)\n>       end\n>     end\n>\n```\n\n```diff:lib\\serverspec\\type\\file.rb\n1a2\n> require \"kconv\"     # ADD\n113c114,119\n<       @content\n---\n>       # MODIFIED\n>       if Specinfra.configuration.os_encoding.nil?\n>         @content\n>       else\n>         Kconv.toutf8(\"#{@content}\").encode(Specinfra.configuration.os_encoding)\n>       end\n```\n\n# \u30c6\u30b9\u30c8\u306e\u5b9f\u884c\n\n\u305d\u308c\u3067\u306f\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```serverspec\nPS C:\\serverspec\\sample> rake\n\n##################################################\nHOST: REMOTEHOST : development : winrm_client = 4\n##################################################\n\nCommand \"ipconfig /all | Select-String \u30ce\u30fc\u30c9\"\n  stdout\n    should match /\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9/\n\nFile \"C:\\serverspec\\test.cmd\"\n  should be file\n  should contain \"\u3042\u3044\u3046\u3048\u304a\"\n  should not contain \"\u304b\u304d\u304f\u3051\u3053\"\n  content\n    should match /\u3042\u3044\u3046\u3048\u304a/\n  content\n    should not match /\u304b\u304d\u304f\u3051\u3053/\n\nFinished in 6.5 seconds (files took 1.29 seconds to load)\n6 examples, 0 failures\n\nPS C:\\serverspec\\sample>\n```\n\n\u304b\u306a\u308a\u51e6\u7406\u6642\u9593\u304c\u77ed\u7e2e\u3055\u308c\u307e\u3057\u305f\u3002\n", "tags": ["serverspec", "Windows", "Ruby", "winrs"]}