{"tags": ["backlog", "Slack", "Ruby"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u53c2\u7167\n\u305d\u306e\uff11\n\u305d\u306e\uff13\n\n\u3084\u308a\u305f\u3044\u3053\u3068\nslack\u306e\u6295\u7a3f\u3092\u6574\u5f62\u3059\u308b\n\u524d\u56de\u306e\u3084\u308a\u65b9\u3067\u306f\u3001\u4e00\u884c\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u304c\u6295\u7a3f\u53ef\u80fd\u3060\u3063\u305f\u306e\u3067\u3001attachment\u3092\u4f7f\u3063\u305f\u3082\u306e\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001slack-notifier\u3092\u4f7f\u7528\u3059\u308b\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\nslack.rb\nrequire 'slack-notifier'\n\nclass SlackClient\n  #\n  def initialize(team, token, room='#general', name=nil)\n    @client = Slack::Notifier.new(team, token)\n    @default_room = room\n    if name\n      @client.username = name\n      @default_name = name\n    end\n    clear_fields\n  end\n  #\n  def clear_fields\n    @client.channel = @default_room\n    @fields = []\n  end\n  #\n  def message(msg, room = nil)\n    @client.channel = room if room\n    @client.ping(msg)\n    clear_fields\n  end\n  #\n  def append_field(title, value, short = false)\n    @fields << {:title => title, :value => value, :short => short}\n  end\n  #\n  def format_message(msg, fields = [], room = nil)\n    opts = {\n      \"fallback\"  => msg,\n      \"color\"     => \"#8ABE00\",\n      \"fields\"    => @fields + fields,\n    }\n    @client.channel = room if room\n    @client.ping(msg, attachments: [opts])\n    clear_fields\n  end\n\nend\n\n\n\u6295\u7a3f\u90e8\u5206\u306e\u307f\u3002\u524d\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nsample.rb\n#\ndef slack_send(slack, project, issue)\n  action = (issue[\"created_on\"] == issue[\"updated_on\"]) ? \"created\" : \"updated\"\n  #\n  mes = \"[\" + project[\"name\"] + \"]\" + issue['summary'] + \"(\" + issue['url'] + \") \" + action\n  mes_format = issue['summary']\n  #\n  slack.clear_fields\n  slack.append_field(\"project\", project[\"name\"], true)\n  slack.append_field(\"created by\", issue['created_user']['name'], true)\n  slack.append_field(\"priority\", issue['priority']['name'], true)\n  slack.append_field(\"url\", issue['url'], true)\n  room = project2room(project[\"name\"])\n  puts room\n  if action == \"created\"\n    slack.format_message(mes_format, [], room)\n  else\n    slack.message(mes, room)\n  end\nend\n\n\uff08\u4e2d\u7565\uff09\n\n  slack = SlackClient.new('test', 'xxxxxxxx', '#test', 'backlog')\n\n\uff08\u4e2d\u7565\uff09\n\n    slack_send(slack, project, issue)\n\n\n\n\n\u3053\u3061\u3089\u306b\u7d9a\u304d\u307e\u3059\n\n# \u53c2\u7167\n[\u305d\u306e\uff11](http://qiita.com/masuyama/items/6875fcbf936bb5f01922)\n[\u305d\u306e\uff13](http://qiita.com/masuyama/items/6e86a17cbcfa77778d7d)\n\n# \u3084\u308a\u305f\u3044\u3053\u3068\nslack\u306e\u6295\u7a3f\u3092\u6574\u5f62\u3059\u308b\n\n\u524d\u56de\u306e\u3084\u308a\u65b9\u3067\u306f\u3001\u4e00\u884c\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u304c\u6295\u7a3f\u53ef\u80fd\u3060\u3063\u305f\u306e\u3067\u3001attachment\u3092\u4f7f\u3063\u305f\u3082\u306e\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001slack-notifier\u3092\u4f7f\u7528\u3059\u308b\n\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```rb:slack.rb\nrequire 'slack-notifier'\n\nclass SlackClient\n  #\n  def initialize(team, token, room='#general', name=nil)\n    @client = Slack::Notifier.new(team, token)\n    @default_room = room\n    if name\n      @client.username = name\n      @default_name = name\n    end\n    clear_fields\n  end\n  #\n  def clear_fields\n    @client.channel = @default_room\n    @fields = []\n  end\n  #\n  def message(msg, room = nil)\n    @client.channel = room if room\n    @client.ping(msg)\n    clear_fields\n  end\n  #\n  def append_field(title, value, short = false)\n    @fields << {:title => title, :value => value, :short => short}\n  end\n  #\n  def format_message(msg, fields = [], room = nil)\n    opts = {\n      \"fallback\"  => msg,\n      \"color\"     => \"#8ABE00\",\n      \"fields\"    => @fields + fields,\n    }\n    @client.channel = room if room\n    @client.ping(msg, attachments: [opts])\n    clear_fields\n  end\n\nend\n```\n\n\u6295\u7a3f\u90e8\u5206\u306e\u307f\u3002\u524d\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```rb:sample.rb\n#\ndef slack_send(slack, project, issue)\n  action = (issue[\"created_on\"] == issue[\"updated_on\"]) ? \"created\" : \"updated\"\n  #\n  mes = \"[\" + project[\"name\"] + \"]\" + issue['summary'] + \"(\" + issue['url'] + \") \" + action\n  mes_format = issue['summary']\n  #\n  slack.clear_fields\n  slack.append_field(\"project\", project[\"name\"], true)\n  slack.append_field(\"created by\", issue['created_user']['name'], true)\n  slack.append_field(\"priority\", issue['priority']['name'], true)\n  slack.append_field(\"url\", issue['url'], true)\n  room = project2room(project[\"name\"])\n  puts room\n  if action == \"created\"\n    slack.format_message(mes_format, [], room)\n  else\n    slack.message(mes, room)\n  end\nend\n\n\uff08\u4e2d\u7565\uff09\n\n  slack = SlackClient.new('test', 'xxxxxxxx', '#test', 'backlog')\n\n\uff08\u4e2d\u7565\uff09\n\n    slack_send(slack, project, issue)\n\n```\n\n# [\u3053\u3061\u3089\u306b\u7d9a\u304d\u307e\u3059](http://qiita.com/masuyama/items/6e86a17cbcfa77778d7d)\n"}