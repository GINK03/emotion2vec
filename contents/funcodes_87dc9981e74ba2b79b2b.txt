{"context": "\n\n2016.09.05\n\n\u30aa\u30c7\u30a3\u30aa\u306eAVFrame\u306elinesize\u3084nb_samples\u306b\u3064\u3044\u3066AVAudioPCMBuffer\u306e\u8a2d\u5b9a\u5024\u3092\u3082\u3063\u3068\u7cbe\u5bc6\u306b\u3084\u308a\u76f4\u3057\u307e\u3057\u305f\u3002\n\n\nlet audioContext: UnsafeMutablePointer<AVCodecContext>\n\n// \u30d7\u30ec\u30a4\u3059\u308b\u30b5\u30a6\u30f3\u30c9\u306e\u57fa\u672c\u8a2d\u5b9a\nlet audioFormat: AVAudioFormat(\n    commonFormat: .pcmFormatFloat32, \n    sampleRate: Double(audioContext.pointee.sample_rate),\n    channels: 2, // \u30b5\u30a6\u30f3\u30c9\u30b7\u30b9\u30c6\u30e0\u306eoutput\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u8d85\u3048\u305f\u3089\u30af\u30e9\u30c3\u30b7\u30e5\u30fc\u304c\u767a\u751f\u3055\u308c\u307e\u3059\u3002\n    interleaved: false)\n\nlet audioEngine = AVAudioEngine()\nlet audioPlayer = AVAudioPlayerNode()\n\n// \u30aa\u30c7\u30a3\u30aa\u30a8\u30f3\u30b8\u30f3\u306b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u4ed8\u3051\u307e\u3059\u3002\nengine.attach(audioPlayer)\n// \u30aa\u30c7\u30a3\u30aa\u30a8\u30f3\u30b8\u30f3\u306e\u57fa\u672c\u51fa\u529b\u30ce\u30fc\u30c9\u306b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u9023\u7d50\u3057\u307e\u3059\u3002\nengine.connect(audioPlayer, to: engine.mainMixerNode, format: audioFormat)\n\nengine.prepare()\n\ntry! engine.start()\n\naudioPlayer.play()\n...\n// \u30c7\u30a3\u30b3\u30fc\u30c9\u3055\u308c\u305fAVFrame\u3092AVAudioPCMBuffer\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\nlet frame: AVFrame\n\n// frameCapacity\u306fframe\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u308bfloat\u30c7\u30fc\u30bf\u306e\u500b\u6570\u3092\u8a08\u7b97\u3057\u6e21\u3057\u307e\u3059\u3002\nlet pcmBuffer = AVAudioPCMBuffer(\n    pcmFormat: audioFormat, \n    frameCapacity: AVAudioFrameCount(frame.linesize.0 / MemoryLayout<Float>.size))\n// frameLength\u306f\u5b9f\u969b\u306eaudio\u306efloat\u30c7\u30fc\u30bf\u306e\u500b\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\n// \u30d0\u30fc\u30d5\u30a1\u30fc\u306e\u9577\u3055\u3068samples\u306e\u500b\u6570\u306f\u540c\u3058\u5834\u5408\u3082\u9055\u3046\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\npcmBuffer.frameLength = frame.nb_samples // AVAudioFile\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u81ea\u52d5\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u305d\u306e\u4ee5\u5916\u306f\u76f4\u63a5\u3084\u308a\u307e\u3059\u3002\n\n// \u30d5\u30a1\u30d5\u30a1\u30fc\u306b\u8a2d\u5b9a\u3057\u305fformat\u3067\u304b\u304f\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30c7\u30fc\u30bf\u306e\u30e1\u30e2\u30ea\u304c\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n//\u3000\u666e\u901a\u306f\u30b9\u30c6\u30ec\u30aa\u30672\u500b\u306b\u306a\u308a\u307e\u3059\u3002\nlet channels = buffer.floatChannelData! \nlet leftOutputChannel: UnsafeMutablePointer<UnsafeMutablePointer<Float>> = channels[0]\nlet rightOutputChannel: UnsafeMutablePointer<UnsafeMutablePointer<Float>> = channels[1]\n\n// frame\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306f\u5e38\u306bUInt8\u306a\u306e\u3067Float\u306b\u5909\u3048\u307e\u3059\u3002\nlet leftAudioBuffer: UnsafeMutablePointer<Float> = frame.data.0!.withMemoryRebound(to: Float.self, capacity: Int(pcmBuffer.frameLength)){$0}\nlet rightAudioBuffer: UnsafeMutablePointer<Float> = frame.data.1!.withMemoryRebound(to: Float.self, capacity: Int(pcmBuffer.frameLength)){$0}\n\n// leftAudioBuffer\u306e\u5185\u5bb9\u3092Accelerate\u306e\u95a2\u6570\u3092\u5229\u7528\u3057\u8907\u5199\u3057\u307e\u3059\u3002\ncblas_scopy(Int32(pcmBuffer.frameLength), leftAudioBuffer, 1, channels[0], 1)\ncblas_scopy(Int32(pcmBuffer.frameLength), rightAudioBuffer, 1, channels[1], 1)\n\n// \u30aa\u30c7\u30a3\u30aa\u306e\u30c7\u30fc\u30bf\u304c2\u30c1\u30e3\u30f3\u30cd\u30eb\u4ee5\u4e0a\u3092\u6301\u3064\u5834\u5408\u3001\u3053\u3053\u3067\u306f5.1ch\u306e\u30aa\u30c7\u30a3\u30aa\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n// \u51fa\u529b\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u306f\u4e8c\u3064\u306a\u306e\u3067\u4f59\u308b\u30c7\u30fc\u30bf\u306fAccelerate\u306e\u95a2\u6570\u3092\u4f7f\u3063\u3066\u65e2\u5b58\u306e\u30c7\u30fc\u30bf\u306b\u52a0\u3048\u307e\u3059\u3002\nlet lbuf1 = frame.data.2!.withMemoryRebound(to: Float.self, capacity: Int(buffer.frameLength)){$0}\nlet rbuf1 = frame.data.3!.withMemoryRebound(to: Float.self, capacity: Int(buffer.frameLength)){$0}\nlet lbuf2 = frame.data.4!.withMemoryRebound(to: Float.self, capacity: Int(buffer.frameLength)){$0}\nlet rbuf2 = frame.data.5!.withMemoryRebound(to: Float.self, capacity: Int(buffer.frameLength)){$0}\n\nvDSP_vadd(channels[0], 1, lbuf1, 1, channels[0], 1, vDSP_Length(buffer.frameLength))\nvDSP_vadd(channels[1], 1, rbuf1, 1, channels[1], 1, vDSP_Length(buffer.frameLength))\nvDSP_vadd(channels[0], 1, lbuf2, 1, channels[0], 1, vDSP_Length(buffer.frameLength))\nvDSP_vadd(channels[1], 1, rbuf2, 1, channels[1], 1, vDSP_Length(buffer.frameLength))\n\n//\u6700\u5f8c\u306b\u4f5c\u3063\u305f\u30aa\u30c7\u30a3\u30aa\u306ebuffer\u3092AVAudioPlayerNode\u306b\u5165\u308c\u307e\u3059\u3002\naudioPlayer.scheduleBuffer(pcmBuffer, completionHandler: nil)\n\n\n\u3067\u3001\u30b5\u30a6\u30f3\u30c9\u306e\u518d\u751f\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n###2016.09.05\n- \u30aa\u30c7\u30a3\u30aa\u306e**AVFrame**\u306e**linesize**\u3084**nb_samples**\u306b\u3064\u3044\u3066AVAudioPCMBuffer\u306e\u8a2d\u5b9a\u5024\u3092\u3082\u3063\u3068\u7cbe\u5bc6\u306b\u3084\u308a\u76f4\u3057\u307e\u3057\u305f\u3002\n\n\n```\n\nlet audioContext: UnsafeMutablePointer<AVCodecContext>\n\n// \u30d7\u30ec\u30a4\u3059\u308b\u30b5\u30a6\u30f3\u30c9\u306e\u57fa\u672c\u8a2d\u5b9a\nlet audioFormat: AVAudioFormat(\n    commonFormat: .pcmFormatFloat32, \n    sampleRate: Double(audioContext.pointee.sample_rate),\n    channels: 2, // \u30b5\u30a6\u30f3\u30c9\u30b7\u30b9\u30c6\u30e0\u306eoutput\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u8d85\u3048\u305f\u3089\u30af\u30e9\u30c3\u30b7\u30e5\u30fc\u304c\u767a\u751f\u3055\u308c\u307e\u3059\u3002\n    interleaved: false)\n\nlet audioEngine = AVAudioEngine()\nlet audioPlayer = AVAudioPlayerNode()\n\n// \u30aa\u30c7\u30a3\u30aa\u30a8\u30f3\u30b8\u30f3\u306b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u4ed8\u3051\u307e\u3059\u3002\nengine.attach(audioPlayer)\n// \u30aa\u30c7\u30a3\u30aa\u30a8\u30f3\u30b8\u30f3\u306e\u57fa\u672c\u51fa\u529b\u30ce\u30fc\u30c9\u306b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u9023\u7d50\u3057\u307e\u3059\u3002\nengine.connect(audioPlayer, to: engine.mainMixerNode, format: audioFormat)\n\nengine.prepare()\n\ntry! engine.start()\n\naudioPlayer.play()\n...\n// \u30c7\u30a3\u30b3\u30fc\u30c9\u3055\u308c\u305fAVFrame\u3092AVAudioPCMBuffer\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\nlet frame: AVFrame\n\n// frameCapacity\u306fframe\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u308bfloat\u30c7\u30fc\u30bf\u306e\u500b\u6570\u3092\u8a08\u7b97\u3057\u6e21\u3057\u307e\u3059\u3002\nlet pcmBuffer = AVAudioPCMBuffer(\n    pcmFormat: audioFormat, \n    frameCapacity: AVAudioFrameCount(frame.linesize.0 / MemoryLayout<Float>.size))\n// frameLength\u306f\u5b9f\u969b\u306eaudio\u306efloat\u30c7\u30fc\u30bf\u306e\u500b\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\n// \u30d0\u30fc\u30d5\u30a1\u30fc\u306e\u9577\u3055\u3068samples\u306e\u500b\u6570\u306f\u540c\u3058\u5834\u5408\u3082\u9055\u3046\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\npcmBuffer.frameLength = frame.nb_samples // AVAudioFile\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u81ea\u52d5\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u305d\u306e\u4ee5\u5916\u306f\u76f4\u63a5\u3084\u308a\u307e\u3059\u3002\n\n// \u30d5\u30a1\u30d5\u30a1\u30fc\u306b\u8a2d\u5b9a\u3057\u305fformat\u3067\u304b\u304f\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30c7\u30fc\u30bf\u306e\u30e1\u30e2\u30ea\u304c\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n//\u3000\u666e\u901a\u306f\u30b9\u30c6\u30ec\u30aa\u30672\u500b\u306b\u306a\u308a\u307e\u3059\u3002\nlet channels = buffer.floatChannelData! \nlet leftOutputChannel: UnsafeMutablePointer<UnsafeMutablePointer<Float>> = channels[0]\nlet rightOutputChannel: UnsafeMutablePointer<UnsafeMutablePointer<Float>> = channels[1]\n\n// frame\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306f\u5e38\u306bUInt8\u306a\u306e\u3067Float\u306b\u5909\u3048\u307e\u3059\u3002\nlet leftAudioBuffer: UnsafeMutablePointer<Float> = frame.data.0!.withMemoryRebound(to: Float.self, capacity: Int(pcmBuffer.frameLength)){$0}\nlet rightAudioBuffer: UnsafeMutablePointer<Float> = frame.data.1!.withMemoryRebound(to: Float.self, capacity: Int(pcmBuffer.frameLength)){$0}\n\n// leftAudioBuffer\u306e\u5185\u5bb9\u3092Accelerate\u306e\u95a2\u6570\u3092\u5229\u7528\u3057\u8907\u5199\u3057\u307e\u3059\u3002\ncblas_scopy(Int32(pcmBuffer.frameLength), leftAudioBuffer, 1, channels[0], 1)\ncblas_scopy(Int32(pcmBuffer.frameLength), rightAudioBuffer, 1, channels[1], 1)\n\n// \u30aa\u30c7\u30a3\u30aa\u306e\u30c7\u30fc\u30bf\u304c2\u30c1\u30e3\u30f3\u30cd\u30eb\u4ee5\u4e0a\u3092\u6301\u3064\u5834\u5408\u3001\u3053\u3053\u3067\u306f5.1ch\u306e\u30aa\u30c7\u30a3\u30aa\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n// \u51fa\u529b\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u306f\u4e8c\u3064\u306a\u306e\u3067\u4f59\u308b\u30c7\u30fc\u30bf\u306fAccelerate\u306e\u95a2\u6570\u3092\u4f7f\u3063\u3066\u65e2\u5b58\u306e\u30c7\u30fc\u30bf\u306b\u52a0\u3048\u307e\u3059\u3002\nlet lbuf1 = frame.data.2!.withMemoryRebound(to: Float.self, capacity: Int(buffer.frameLength)){$0}\nlet rbuf1 = frame.data.3!.withMemoryRebound(to: Float.self, capacity: Int(buffer.frameLength)){$0}\nlet lbuf2 = frame.data.4!.withMemoryRebound(to: Float.self, capacity: Int(buffer.frameLength)){$0}\nlet rbuf2 = frame.data.5!.withMemoryRebound(to: Float.self, capacity: Int(buffer.frameLength)){$0}\n\nvDSP_vadd(channels[0], 1, lbuf1, 1, channels[0], 1, vDSP_Length(buffer.frameLength))\nvDSP_vadd(channels[1], 1, rbuf1, 1, channels[1], 1, vDSP_Length(buffer.frameLength))\nvDSP_vadd(channels[0], 1, lbuf2, 1, channels[0], 1, vDSP_Length(buffer.frameLength))\nvDSP_vadd(channels[1], 1, rbuf2, 1, channels[1], 1, vDSP_Length(buffer.frameLength))\n\n//\u6700\u5f8c\u306b\u4f5c\u3063\u305f\u30aa\u30c7\u30a3\u30aa\u306ebuffer\u3092AVAudioPlayerNode\u306b\u5165\u308c\u307e\u3059\u3002\naudioPlayer.scheduleBuffer(pcmBuffer, completionHandler: nil)\n\n```\n\n\u3067\u3001\u30b5\u30a6\u30f3\u30c9\u306e\u518d\u751f\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n", "tags": ["ffmpeg", "Swift3.0", "Accelerate", "AVAudioEngine"]}