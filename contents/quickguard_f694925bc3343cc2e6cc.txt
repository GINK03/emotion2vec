{"context": "\n\n\u6982\u8981\ngithub/orchestrator(MySQL replication topology management and HA ) \u3092\u5c11\u3057\u89e6\u3063\u3066\u307f\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u4e3b\u306a\u6a5f\u80fd\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n\nDiscovery orchestrator actively crawls through your topologies and maps them. It reads basic MySQL info such as replication status and configuration.\n\nRefactoring orchestrator understands replication rules. It knows about binlog file:position, GTID, Pseudo GTID, Binlog Servers.\n\nRecovery orchestrator uses a holistic approach to detect master and intermediate master failures. Based on information gained from the topology itself, it recognizes a variety of failure scenarios.\n\nThe interface orchestrator supports:\n\n\nCommand line interface\nWeb API\nWeb interface\n\n\n\n\n\u74b0\u5883\nGCE \u4e0a\u306b 3\u53f0\u306e MySQL \u74b0\u5883\u3092\u69cb\u7bc9\n(MySQLMaster: db-01 / MySQLSlave: db-02, db-03)\n\nOS : CentOS Linux release 7.2.1511 (Core)\norchestrator version : 2.0.1-1\n\n\n\u74b0\u5883\u69cb\u7bc9\nGCE \u3068\u3044\u3046\u3053\u3068\u3067 DeploymentManager \u3067\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u307f\u308b\n\nconfig.yaml\nimports:\n- path: templates/network.jinja\n- path: templates/instance.jinja\n- path: templates/firewall.jinja\n\nresources:\n- name: mysql-network\n  type: templates/network.jinja\n  properties:\n    region: asia-northeast1\n    range: 10.255.0.0/24\n\n- name: mysql-instance\n  type: templates/instance.jinja\n  properties:\n    instances:\n     - name: db-01\n     - name: db-02\n     - name: db-03\n    machineType: f1-micro\n    region: asia-northeast1\n    zone: asia-northeast1-a\n\n- name: mysql-firewall\n  type: templates/firewall.jinja\n\n\n\ntemplates/network.yaml\nresources:\n- type: compute.v1.network\n  name: {{ env[\"name\"] }}\n  properties:\n    autoCreateSubnetworks: false\n\n- type: compute.v1.subnetwork\n  name: {{ env[\"name\"] }}-subnet\n  properties:\n    network: $(ref.mysql-network.selfLink)\n    ipCidrRange: {{ properties[\"range\"] }}\n    region: {{ properties[\"region\"] }}\n\n\n\ntemplates/instance.yaml\nresources:\n{% for instance in properties[\"instances\"] %}\n  {%set name = instance[\"name\"] %}\n\n- type: compute.v1.instance\n  name: {{ name }}\n  properties:\n    zone: {{ properties[\"zone\"] }}\n    machineType: https://www.googleapis.com/compute/v1/projects/{{ env[\"project\"] }}/zones/{{ properties[\"zone\"] }}/machineTypes/{{ properties[\"machineType\"] }}\n\n    tags:\n      items:\n        - mysql\n\n    disks:\n    - type: PERSISTENT\n      deviceName: {{ name }}-disk\n      boot: true\n      mode: READ_WRITE\n      autoDelete: true\n      initializeParams:\n        sourceImage: https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20161129\n        diskType: projects/{{ env[\"project\"] }}/zones/{{ properties[\"zone\"] }}/diskTypes/pd-standard\n        diskSizeGb: 10\n\n    canIpForward: true\n\n    networkInterfaces:\n    - network: $(ref.mysql-network.selfLink)\n      subnetwork: $(ref.mysql-network-subnet.selfLink)\n      accessConfigs:\n      - name: External NAT\n        type: ONE_TO_ONE_NAT\n\n    metadata:\n      items:\n      - key: startup-script\n        value: |\n          #!/bin/bash\n          timedatectl set-timezone Asia/Tokyo\n\n    scheduling:\n      preemptible: false\n      onHostMaintenance: MIGRATE\n      automaticRestart: true\n\n    serviceAccounts:\n    - email: default\n      scopes:\n        - https://www.googleapis.com/auth/logging.write\n        - https://www.googleapis.com/auth/monitoring.write\n{% endfor %}\n\n\n\ntemplates/firewall.yaml\nresources:\n- name: {{ env[\"name\"] }}-ssh\n  type: compute.v1.firewall\n  properties:\n    network: $(ref.mysql-network.selfLink)\n    sourceRanges: [\"0.0.0.0/0\"]\n    allowed:\n    - IPProtocol: TCP\n      ports: [\"22\"]\n\n- name: {{ env[\"name\"] }}-internal\n  type: compute.v1.firewall\n  properties:\n    network: $(ref.condor-network.selfLink)\n    sourceRanges: [\"10.255.0.0/24\"]\n    allowed:\n    - IPProtocol: TCP\n      ports: [\"0-65535\"]\n    - IPProtocol: UDP\n      ports: [\"0-65535\"]\n    - IPProtocol: ICMP\n\n\n\u30d7\u30ec\u30d3\u30e5\u30fc\u5b9f\u884c\n$ gcloud deployment-manager deployments create mysql-cluster --config=config.yaml --preview\n\nNAME                       TYPE                   STATE      ERRORS  INTENT\ndb-01                      compute.v1.instance    COMPLETED  []\ndb-02                      compute.v1.instance    COMPLETED  []\ndb-03                      compute.v1.instance    COMPLETED  []\nmysql-firewall-management  compute.v1.firewall    COMPLETED  []\nmysql-network              compute.v1.network     COMPLETED  []\nmysql-network-subnet       compute.v1.subnetwork  COMPLETED  []\n\nWEB\u304b\u3089\u30c7\u30d7\u30ed\u30a4\u5b9f\u884c\n\n\norchestrator \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nMySQL Replication \u74b0\u5883\u306e\u69cb\u7bc9\u306f\u5272\u611b\norchestrator \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n$ curl -s https://packagecloud.io/install/repositories/github/orchestrator/script.rpm.sh | sudo bash\n$ sudo yum install orchestrator orchestrator-cli\n\norchestrator \u8a2d\u5b9a\n\u4ee5\u4e0b\u3092\u53c2\u7167\nhttps://github.com/github/orchestrator/blob/master/docs/install.md\nhttps://github.com/github/orchestrator/blob/master/docs/executing-via-command-line.md\n\nUI \u304b\u3089\u78ba\u8a8d\u3057\u3066\u307f\u308b\nhttp://\uff5b\u30b5\u30fc\u30d0IP\u30a2\u30c9\u30ec\u30b9\uff5d:3000/ \u306b\u30a2\u30af\u30bb\u30b9\nDiscover \u3088\u308a\u69cb\u7bc9\u3057\u305f3\u53f0\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767b\u9332\n\nCluster \u306e\u78ba\u8a8d\n\nSlave \u969c\u5bb3\u6642\n\n\u3068\u308a\u3042\u3048\u305a\u52d5\u4f5c\u3057\u305f\u306e\u3067\u3001\u8a73\u7d30\u306f\u5225\u9014\u3002\u3002\u3002\n# \u6982\u8981\n[github/orchestrator](https://github.com/github/orchestrator)(MySQL replication topology management and HA ) \u3092\u5c11\u3057\u89e6\u3063\u3066\u307f\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n\u4e3b\u306a\u6a5f\u80fd\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n - `Discovery` orchestrator actively crawls through your topologies and maps them. It reads basic MySQL info such as replication status and configuration.\n - `Refactoring` orchestrator understands replication rules. It knows about binlog file:position, GTID, Pseudo GTID, Binlog Servers.\n - `Recovery` orchestrator uses a holistic approach to detect master and intermediate master failures. Based on information gained from the topology itself, it recognizes a variety of failure scenarios.\n - `The interface` orchestrator supports:\n     - Command line interface\n     - Web API\n     - Web interface\n\n# \u74b0\u5883\nGCE \u4e0a\u306b 3\u53f0\u306e MySQL \u74b0\u5883\u3092\u69cb\u7bc9\n(MySQLMaster: db-01 / MySQLSlave: db-02, db-03)\n\n- OS : CentOS Linux release 7.2.1511 (Core)\n- orchestrator version : 2.0.1-1\n\n# \u74b0\u5883\u69cb\u7bc9\nGCE \u3068\u3044\u3046\u3053\u3068\u3067 DeploymentManager \u3067\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u307f\u308b\n\n```yaml:config.yaml\nimports:\n- path: templates/network.jinja\n- path: templates/instance.jinja\n- path: templates/firewall.jinja\n\nresources:\n- name: mysql-network\n  type: templates/network.jinja\n  properties:\n    region: asia-northeast1\n    range: 10.255.0.0/24\n\n- name: mysql-instance\n  type: templates/instance.jinja\n  properties:\n    instances:\n     - name: db-01\n     - name: db-02\n     - name: db-03\n    machineType: f1-micro\n    region: asia-northeast1\n    zone: asia-northeast1-a\n\n- name: mysql-firewall\n  type: templates/firewall.jinja\n```\n\n```yaml:templates/network.yaml\nresources:\n- type: compute.v1.network\n  name: {{ env[\"name\"] }}\n  properties:\n    autoCreateSubnetworks: false\n\n- type: compute.v1.subnetwork\n  name: {{ env[\"name\"] }}-subnet\n  properties:\n    network: $(ref.mysql-network.selfLink)\n    ipCidrRange: {{ properties[\"range\"] }}\n    region: {{ properties[\"region\"] }}\n```\n\n```yaml:templates/instance.yaml\nresources:\n{% for instance in properties[\"instances\"] %}\n  {%set name = instance[\"name\"] %}\n\n- type: compute.v1.instance\n  name: {{ name }}\n  properties:\n    zone: {{ properties[\"zone\"] }}\n    machineType: https://www.googleapis.com/compute/v1/projects/{{ env[\"project\"] }}/zones/{{ properties[\"zone\"] }}/machineTypes/{{ properties[\"machineType\"] }}\n\n    tags:\n      items:\n        - mysql\n\n    disks:\n    - type: PERSISTENT\n      deviceName: {{ name }}-disk\n      boot: true\n      mode: READ_WRITE\n      autoDelete: true\n      initializeParams:\n        sourceImage: https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20161129\n        diskType: projects/{{ env[\"project\"] }}/zones/{{ properties[\"zone\"] }}/diskTypes/pd-standard\n        diskSizeGb: 10\n\n    canIpForward: true\n\n    networkInterfaces:\n    - network: $(ref.mysql-network.selfLink)\n      subnetwork: $(ref.mysql-network-subnet.selfLink)\n      accessConfigs:\n      - name: External NAT\n        type: ONE_TO_ONE_NAT\n\n    metadata:\n      items:\n      - key: startup-script\n        value: |\n          #!/bin/bash\n          timedatectl set-timezone Asia/Tokyo\n\n    scheduling:\n      preemptible: false\n      onHostMaintenance: MIGRATE\n      automaticRestart: true\n\n    serviceAccounts:\n    - email: default\n      scopes:\n        - https://www.googleapis.com/auth/logging.write\n        - https://www.googleapis.com/auth/monitoring.write\n{% endfor %}\n```\n\n```yaml:templates/firewall.yaml\nresources:\n- name: {{ env[\"name\"] }}-ssh\n  type: compute.v1.firewall\n  properties:\n    network: $(ref.mysql-network.selfLink)\n    sourceRanges: [\"0.0.0.0/0\"]\n    allowed:\n    - IPProtocol: TCP\n      ports: [\"22\"]\n\n- name: {{ env[\"name\"] }}-internal\n  type: compute.v1.firewall\n  properties:\n    network: $(ref.condor-network.selfLink)\n    sourceRanges: [\"10.255.0.0/24\"]\n    allowed:\n    - IPProtocol: TCP\n      ports: [\"0-65535\"]\n    - IPProtocol: UDP\n      ports: [\"0-65535\"]\n    - IPProtocol: ICMP\n```\n\n\u30d7\u30ec\u30d3\u30e5\u30fc\u5b9f\u884c\n\n```\n$ gcloud deployment-manager deployments create mysql-cluster --config=config.yaml --preview\n\nNAME                       TYPE                   STATE      ERRORS  INTENT\ndb-01                      compute.v1.instance    COMPLETED  []\ndb-02                      compute.v1.instance    COMPLETED  []\ndb-03                      compute.v1.instance    COMPLETED  []\nmysql-firewall-management  compute.v1.firewall    COMPLETED  []\nmysql-network              compute.v1.network     COMPLETED  []\nmysql-network-subnet       compute.v1.subnetwork  COMPLETED  []\n```\n\nWEB\u304b\u3089\u30c7\u30d7\u30ed\u30a4\u5b9f\u884c\n![01.png](https://qiita-image-store.s3.amazonaws.com/0/105824/72803985-641c-5d18-7eee-bea197ab7ec3.png)\n\n\n# orchestrator \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nMySQL Replication \u74b0\u5883\u306e\u69cb\u7bc9\u306f\u5272\u611b\n\norchestrator \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\n```\n$ curl -s https://packagecloud.io/install/repositories/github/orchestrator/script.rpm.sh | sudo bash\n$ sudo yum install orchestrator orchestrator-cli\n```\n\norchestrator \u8a2d\u5b9a\n\n\u4ee5\u4e0b\u3092\u53c2\u7167\nhttps://github.com/github/orchestrator/blob/master/docs/install.md\nhttps://github.com/github/orchestrator/blob/master/docs/executing-via-command-line.md\n\n\n# UI \u304b\u3089\u78ba\u8a8d\u3057\u3066\u307f\u308b\n\nhttp://\uff5b\u30b5\u30fc\u30d0IP\u30a2\u30c9\u30ec\u30b9\uff5d:3000/ \u306b\u30a2\u30af\u30bb\u30b9\n\nDiscover \u3088\u308a\u69cb\u7bc9\u3057\u305f3\u53f0\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767b\u9332\n![03.png](https://qiita-image-store.s3.amazonaws.com/0/105824/bfdd2069-7ab9-9ae3-46ce-bf5e126dc751.png)\n\nCluster \u306e\u78ba\u8a8d\n![02.png](https://qiita-image-store.s3.amazonaws.com/0/105824/67a8b41d-858a-1410-033e-197202ad4803.png)\n\nSlave \u969c\u5bb3\u6642\n![04.png](https://qiita-image-store.s3.amazonaws.com/0/105824/e983b7dd-2e86-26f6-0ca2-3c684371a9b5.png)\n\n\n\u3068\u308a\u3042\u3048\u305a\u52d5\u4f5c\u3057\u305f\u306e\u3067\u3001\u8a73\u7d30\u306f\u5225\u9014\u3002\u3002\u3002\n", "tags": ["MySQL", "GoogleCloudPlatform", "CentOS"]}