{"tags": ["ECDSA", "HTML5", "Chrome", "firefox", "JWT"], "context": "WebCrypto API\u3067ECDH\u9375\u4ea4\u63db\u3092\u7528\u3044\u305f\u6697\u53f7\u5316\u3092\u4f7f\u3063\u3066\u307f\u308b\u3067\u306f\u3001WebCrypto API\u3092\u4f7f\u3063\u305f\u6697\u53f7\u5316\u3068\u5fa9\u53f7\u306b\u3064\u3044\u3066\u89e6\u308c\u307e\u3057\u305f\u304c\u3001\u4eca\u5ea6\u306f\u540c\u3058\u304f\u6955\u5186\u66f2\u7dda\u6697\u53f7\u3092\u30d9\u30fc\u30b9\u3068\u3057\u305fECDSA (Elliptic Curve Digital Signature Algorithm)\u3067JWT (JSON Web Token)\u306b\u3088\u308b\u96fb\u5b50\u7f72\u540d\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\u6b63\u78ba\u306b\u306f\u3001SHA-256\u30cf\u30c3\u30b7\u30e5\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3001SHA-256 with ECDSA\u306b\u3088\u308b\u96fb\u5b50\u7f72\u540d\u3001\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u305a\u306fJWT\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u6e96\u5099(\u7f72\u540d\u3059\u308b\u5074)\nJWT\u306b\u3064\u3044\u3066\u306fWebCrypto API\u3067JSON Web Token\u306e\u691c\u8a3c\u3092\u8a66\u3057\u3066\u307f\u308b\u3067(\u691c\u8a3c\u306e\u307f)\u89e6\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u5168\u4f53\u306e\u6d41\u308c\u3068JWT\u306e\u66f8\u304d\u65b9\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u4eca\u56de\u3082\u3001JWT\u81ea\u4f53\u306e\u5f62\u5f0f\u306f\u540c\u69d8\u306b\u3001\n[\u30d8\u30c3\u30c0].[\u30af\u30ec\u30fc\u30e0].[\u30b7\u30b0\u30cd\u30c1\u30e3]\n\n\u3068\u306a\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306fRSA\u3067\u306f\u306a\u304fECDSA\u3092\u7528\u3044\u307e\u3059\u306e\u3067\u3001\u30d8\u30c3\u30c0\u306f\u3001\n{\"typ\":\"JWT\",\"alg\":\"ES256\"}\n\n\u3092URL\u30bb\u30fc\u30d5Base64\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002\n\u30af\u30ec\u30fc\u30e0\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u3001\u4eca\u56de\u306f\u8a66\u3057\u306b\u6b21\u306e\u3088\u3046\u306a\u5f62\u5f0f(\u3092URL\u30bb\u30fc\u30d5Base64\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u3082\u306e)\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n{\"sub\":\"mailto:user@example.com\",\"aud\":\"http://example.com\",\"exp\":\"(\u73fe\u5728\u6642\u523b+12\u6642\u9593)\"}\n\n\u3053\u308c\u3089\u304b\u3089\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u307e\u3067\u306e\u624b\u9806\u3092JavaScript\u3067\u5b9f\u88c5\u3059\u308b\u4f8b\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nfunction encodeBase64URL(data) {\n  let str = '';\n  if(typeof data === 'string') {\n    str = data;\n  }\n  else if(data instanceof Uint8Array)  {\n    str = String.fromCharCode.apply(null, data);\n  }\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\nlet header = {\n  typ: 'JWT',\n  alg: 'ES256'\n};\n\nlet claim = {\n  sub: 'mailto:user@example.com',\n  aud: 'http://example.com',\n  exp: Date.now() / 1000 | 0 + 12 * 60 * 60\n};\n\nlet payload = encodeBase64URL(JSON.stringify(header)) + '.' + encodeBase64URL(JSON.stringify(claim));\n\n\n\u9375\u30da\u30a2\u306e\u751f\u6210(\u7f72\u540d\u3059\u308b\u5074)\n\u7f72\u540d\u306b\u5fc5\u8981\u306a\u9375\u30da\u30a2\u306e\u751f\u6210\u306f\u3001\u6982\u306dECDH\u306e\u5834\u5408\u3068\u540c\u69d8\u3067\u3059\u3002\u65b9\u5f0f\u3068\u3057\u3066ECDSA\u3001usage\u3068\u3057\u3066sign\u3068verify\u3092\u6307\u5b9a\u3059\u308b\u70b9\u304cECDH\u3068\u306e\u9055\u3044\u3068\u306a\u308a\u307e\u3059\u3002\n\nWebCrypto\u3067\u9375\u30da\u30a2\u3092\u751f\u6210\nlet keyPair, publicKeyJWK;\n\ncrypto.subtle.generateKey({ name: 'ECDSA', namedCurve: 'P-256'}, false, ['sign', 'verify'])\n  .then(key => {   // \u9375\u30da\u30a2\u3092\u751f\u6210\n    keyPair = key;\n    return crypto.subtle.exportKey('jwk', keyPair.publicKey);\n  }).then(jwk => { // \u516c\u958b\u9375\u3092JWK\u3068\u3057\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\n    publicKeyJWK = jwk;\n  });\n\n\n\n\u516c\u958b\u9375\u306e\u30a4\u30f3\u30dd\u30fc\u30c8(\u691c\u8a3c\u3059\u308b\u5074)\n\u691c\u8a3c\u3059\u308b\u5074\u3067\u7f72\u540d\u8005\u306e\u516c\u958b\u9375\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u624b\u9806\u3082\u3001\u6982\u306dECDH\u306e\u5834\u5408\u3068\u540c\u69d8\u3067\u3059\u3002\u7f72\u540d\u8005\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u516c\u958b\u9375\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u3088\u3063\u3066\u624b\u9806\u304c\u7570\u306a\u308b\u70b9\u3082ECDH\u3068\u540c\u69d8\u3067\u3059\u3002\u65b9\u5f0f\u3068\u3057\u3066ECDSA\u3001usage\u3068\u3057\u3066verify`\u3092\u6307\u5b9a\u3059\u308b\u70b9\u304cECDH\u3068\u306e\u9055\u3044\u3068\u306a\u308a\u307e\u3059\u3002\n\nWebCrypto\u3067JWK\u516c\u958b\u9375\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nlet remotePublicKey, jwk = JSON.parse('(\u6587\u5b57\u5217\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305fJWK)');\n\ncrypto.subtle.importKey(\n  'jwk',\n  jwk,\n  { name: 'ECDSA', namedCurve: 'P-256'},\n  false,\n  ['verify']\n).then(key => {\n  remotePublicKey = key;\n});\n\n\n\n\u7f72\u540d\u3057\u3066JWT\u3092\u751f\u6210(\u7f72\u540d\u3059\u308b\u5074)\n\u9375\u30da\u30a2\u306e\u79d8\u5bc6\u9375\u3068JWT\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u304b\u3089\u7f72\u540d\u3092\u884c\u3044\u3001JWT\u5168\u4f53\u3092\u751f\u6210\u3059\u308b\u624b\u9806\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u7f72\u540d\u7d50\u679c\u306fUint8Array\u578b\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3068\u306a\u308a\u307e\u3059\u3002\n\nWebCrypto\u3067\u7f72\u540d\u3057\u3066JWT\u3092\u751f\u6210\n// JavaScript\u306ebtoa()\u3067\u306fURL-safe Base64\u304c\u6271\u3048\u306a\u3044\u305f\u3081\u5909\u63db\u304c\u5fc5\u8981\nfunction encodeBase64URL(data) {\n  if(!(data instanceof Uint8Array))\n    return null;\n  let output = '';\n  for(let i = 0 ; i < data.length ; i++)\n    output += String.fromCharCode(data[i]);\n  return btoa(data.replace(/\\+/g, '-').replace(/\\//g, '_')).replace(/=+$/, '');\n}\n\nfunction toBufferSource(t) {\n  var r = new Uint8Array(t.length);\n  for(var i = 0 ; i < s.length ; i++)\n    r[i] = s.charCodeAt(i);\n  return r;\n}\n\nlet result;\n\ncrypto.subtle.sign(\n  { name: 'ECDSA', hash: { name: 'SHA-256' } },\n  keyPair.privateKey,\n  toBufferSource(payload)\n).then(signature => {\n  result = payload + '.' + encodeBase64URL(signature);\n});\n\n\n\n\u7f72\u540d\u3092\u691c\u8a3c(\u691c\u8a3c\u3059\u308b\u5074)\n\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u516c\u958b\u9375\u3092\u7528\u3044\u305fJWT\u306e\u691c\u8a3c\u306f\u6b21\u306e\u3088\u3046\u306a\u624b\u9806\u306b\u306a\u308a\u307e\u3059\u3002crypto.subtle.verify()\u306e\u7d50\u679c\u3092then()\u3067\u53d6\u5f97\u3059\u308b\u969b\u3001boolean\u578b\u306e\u5f15\u6570\u304c\u7d50\u679c\u3068\u3057\u3066\u6e21\u3055\u308c\u307e\u3059\u3002\n\nWebCrypto\u3067JWT\u3092\u691c\u8a3c\n// JavaScript\u306eatob()\u3067\u306fURL-safe Base64\u304c\u6271\u3048\u306a\u3044\u305f\u3081\u5909\u63db\u304c\u5fc5\u8981\nfunction decodeBase64URL(data) {\n  if(typeof data !== 'string')\n    return null;\n  let decoded = atob(data.replace(/\\-/g, '+').replace(/_/g, '/'));\n  let buffer = new Uint8Array(decoded.length);\n  for(let i = 0 ; i < data.length ; i++)\n    buffer[i] = decoded.charCodeAt(i);\n  return buffer;\n}\n\nlet jwt = '(JWT\u3092\u6587\u5b57\u5217\u8868\u8a18\u3057\u305f\u3082\u306e)',\nlet t = jwt.split('.');\nlet signature = toBufferSource(base64UrlDecode(t[2])),\n    payload = toBufferSource(t[0] + '.' + t[1]);\n\ncrypto.subtle.verify(\n  { name: 'ECDSA', hash: { name: 'SHA-256' } },\n  remotePublicKey,\n  signature,\n  payload\n).then(result => {\n  console.log(result ? '\u691c\u8a3c\u6210\u529f' : '\u691c\u8a3c\u5931\u6557');\n});\n\n\n\nJWT\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u4ed6\u306e\u5b9f\u884c\u74b0\u5883\u306b\u95a2\u3059\u308b\u6ce8\u610f\u4e8b\u9805\nSHA-256 with ECDSA\u306b\u3088\u308b\u96fb\u5b50\u7f72\u540d\u306f\u3001\u540432\u30aa\u30af\u30c6\u30c3\u30c8\u306eR\u3068S\u306e\u5024\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\nJWT\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u306b\u683c\u7d0d\u3059\u308b\u969b\u306f\u3001RFC 7518\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001R\u3068S\u3092\u5358\u7d14\u306b\u9023\u7d50\u3057\u306664\u30aa\u30af\u30c6\u30c3\u30c8\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u751f\u6210\u3057\u3001\u3053\u308c\u3092URL\u30bb\u30fc\u30d5Base64\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u307e\u3059\u3002\nWebCrypto API\u3067crypto.subtle.sign()\u3092\u5b9f\u884c\u3057\u3066SHA-256 with ECDSA\u306b\u3088\u3063\u3066\u7f72\u540d\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306eR\u3068S\u306e\u5358\u7d14\u9023\u7d50\u3057\u305f64\u30aa\u30af\u30c6\u30c3\u30c8\u306eUint8Array\u3092\u5b9f\u884c\u7d50\u679c\u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u3053\u308c\u3092URL\u30bb\u30fc\u30d5Base64\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u3068.\u3092\u631f\u3093\u3067\u9023\u7d50\u3059\u308b\u3053\u3068\u3067\u3001JWT\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4e00\u65b9\u3001Java 8\u7b49\u3067\u306f\u3001ECDSA\u306b\u3088\u308b\u96fb\u5b50\u7f72\u540d\u306fASN.1 DER\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u6271\u308f\u308c\u308b\u305f\u3081\u3001JWT\u306e\u4f5c\u6210\u3084\u691c\u8a3c\u306e\u969b\u306fR\u3068S\u306e\u5358\u7d14\u9023\u7d50\u3068\u306e\u76f8\u4e92\u5909\u63db\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u304a\u3001WebCrypto API\u3067\u306f\u3001\u3053\u306eASN.1 DER\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\nASN.1 DER\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306eECDSA\u96fb\u5b50\u7f72\u540d\u306f\u6b21\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u306a\u308a\u307e\u3059\u3002\n0x30||(\u3053\u306e\u6b21\u306b\u7d9a\u304f\u30c7\u30fc\u30bf\u306e\u30aa\u30af\u30c6\u30c3\u30c8\u9577(1\u30aa\u30af\u30c6\u30c3\u30c8))\n||0x02||(R\u306e\u30aa\u30af\u30c6\u30c3\u30c8\u9577(1\u30aa\u30af\u30c6\u30c3\u30c8))||R(\u7b26\u53f7\u4ed8\u304d\u6574\u6570)\n||0x02||(S\u306e\u30aa\u30af\u30c6\u30c3\u30c8\u9577(1\u30aa\u30af\u30c6\u30c3\u30c8))||S(\u7b26\u53f7\u4ed8\u304d\u6574\u6570)\n\n(\u6ce8: ||\u306f\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306e\u7d50\u5408\u3092\u8868\u3057\u307e\u3059)\n\u3053\u3053\u3067\u3001R\u304a\u3088\u3073S\u306f\u7b26\u53f7\u306a\u3057256\u30d3\u30c3\u30c8\u6574\u6570\u3067\u3042\u308b\u306e\u306b\u5bfe\u3057\u3001ASN.1 DER\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u306f\u7b26\u53f7\u4ed8\u304d\u6574\u6570\u3092\u6271\u3046\u70b9\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\u5f93\u3063\u3066\u3001R, S\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u3001\u5148\u982d\u306e1\u30aa\u30af\u30c6\u30c3\u30c8\u304c0x80\u304b\u30890xff\u3067\u3042\u308b\u5834\u5408\u3001\u5148\u982d\u306b0x00\u3092\u8db3\u3059\u3053\u3068\u3067\u6b63\u306e\u6574\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3088\u3046\u306b\u88dc\u6b63\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5148\u982d\u306b0x00\u306e1\u30aa\u30af\u30c6\u30c3\u30c8\u3092\u8ffd\u52a0\u3057\u305f\u5834\u5408\u3001\u5f53\u7136\u306a\u304c\u3089R\u3042\u308b\u3044\u306fS\u306e\u30aa\u30af\u30c6\u30c3\u30c8\u9577\u3001\u305d\u3057\u3066\u30010x30\u306e\u6b21\u306b\u683c\u7d0d\u3059\u308b\u30aa\u30af\u30c6\u30c3\u30c8\u9577\u3082\u5909\u5316\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u4e0b\u3055\u3044\u3002\n[WebCrypto API\u3067ECDH\u9375\u4ea4\u63db\u3092\u7528\u3044\u305f\u6697\u53f7\u5316\u3092\u4f7f\u3063\u3066\u307f\u308b](http://qiita.com/tomoyukilabs/items/eac94fdb2d0ca92f443a)\u3067\u306f\u3001WebCrypto API\u3092\u4f7f\u3063\u305f\u6697\u53f7\u5316\u3068\u5fa9\u53f7\u306b\u3064\u3044\u3066\u89e6\u308c\u307e\u3057\u305f\u304c\u3001\u4eca\u5ea6\u306f\u540c\u3058\u304f\u6955\u5186\u66f2\u7dda\u6697\u53f7\u3092\u30d9\u30fc\u30b9\u3068\u3057\u305fECDSA (Elliptic Curve Digital Signature Algorithm)\u3067JWT (JSON Web Token)\u306b\u3088\u308b\u96fb\u5b50\u7f72\u540d\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\u6b63\u78ba\u306b\u306f\u3001SHA-256\u30cf\u30c3\u30b7\u30e5\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3001SHA-256 with ECDSA\u306b\u3088\u308b\u96fb\u5b50\u7f72\u540d\u3001\u3068\u306a\u308a\u307e\u3059\u3002\n\n# \u307e\u305a\u306fJWT\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u6e96\u5099(\u7f72\u540d\u3059\u308b\u5074)\n\nJWT\u306b\u3064\u3044\u3066\u306f[WebCrypto API\u3067JSON Web Token\u306e\u691c\u8a3c\u3092\u8a66\u3057\u3066\u307f\u308b](http://qiita.com/tomoyukilabs/items/faa66805a440f4b30cfb)\u3067(\u691c\u8a3c\u306e\u307f)\u89e6\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u5168\u4f53\u306e\u6d41\u308c\u3068JWT\u306e\u66f8\u304d\u65b9\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u4eca\u56de\u3082\u3001JWT\u81ea\u4f53\u306e\u5f62\u5f0f\u306f\u540c\u69d8\u306b\u3001\n\n```text\n[\u30d8\u30c3\u30c0].[\u30af\u30ec\u30fc\u30e0].[\u30b7\u30b0\u30cd\u30c1\u30e3]\n```\n\n\u3068\u306a\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306fRSA\u3067\u306f\u306a\u304fECDSA\u3092\u7528\u3044\u307e\u3059\u306e\u3067\u3001\u30d8\u30c3\u30c0\u306f\u3001\n\n```json\n{\"typ\":\"JWT\",\"alg\":\"ES256\"}\n```\n\n\u3092URL\u30bb\u30fc\u30d5Base64\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30af\u30ec\u30fc\u30e0\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u3001\u4eca\u56de\u306f\u8a66\u3057\u306b\u6b21\u306e\u3088\u3046\u306a\u5f62\u5f0f(\u3092URL\u30bb\u30fc\u30d5Base64\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u3082\u306e)\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n```json\n{\"sub\":\"mailto:user@example.com\",\"aud\":\"http://example.com\",\"exp\":\"(\u73fe\u5728\u6642\u523b+12\u6642\u9593)\"}\n```\n\n\u3053\u308c\u3089\u304b\u3089\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u307e\u3067\u306e\u624b\u9806\u3092JavaScript\u3067\u5b9f\u88c5\u3059\u308b\u4f8b\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```js\nfunction encodeBase64URL(data) {\n  let str = '';\n  if(typeof data === 'string') {\n    str = data;\n  }\n  else if(data instanceof Uint8Array)  {\n    str = String.fromCharCode.apply(null, data);\n  }\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\nlet header = {\n  typ: 'JWT',\n  alg: 'ES256'\n};\n\nlet claim = {\n  sub: 'mailto:user@example.com',\n  aud: 'http://example.com',\n  exp: Date.now() / 1000 | 0 + 12 * 60 * 60\n};\n\nlet payload = encodeBase64URL(JSON.stringify(header)) + '.' + encodeBase64URL(JSON.stringify(claim));\n```\n\n# \u9375\u30da\u30a2\u306e\u751f\u6210(\u7f72\u540d\u3059\u308b\u5074)\n\n\u7f72\u540d\u306b\u5fc5\u8981\u306a\u9375\u30da\u30a2\u306e\u751f\u6210\u306f\u3001\u6982\u306dECDH\u306e\u5834\u5408\u3068\u540c\u69d8\u3067\u3059\u3002\u65b9\u5f0f\u3068\u3057\u3066`ECDSA`\u3001usage\u3068\u3057\u3066`sign`\u3068`verify`\u3092\u6307\u5b9a\u3059\u308b\u70b9\u304cECDH\u3068\u306e\u9055\u3044\u3068\u306a\u308a\u307e\u3059\u3002\n\n```js:WebCrypto\u3067\u9375\u30da\u30a2\u3092\u751f\u6210\nlet keyPair, publicKeyJWK;\n\ncrypto.subtle.generateKey({ name: 'ECDSA', namedCurve: 'P-256'}, false, ['sign', 'verify'])\n  .then(key => {   // \u9375\u30da\u30a2\u3092\u751f\u6210\n    keyPair = key;\n    return crypto.subtle.exportKey('jwk', keyPair.publicKey);\n  }).then(jwk => { // \u516c\u958b\u9375\u3092JWK\u3068\u3057\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\n    publicKeyJWK = jwk;\n  });\n```\n\n# \u516c\u958b\u9375\u306e\u30a4\u30f3\u30dd\u30fc\u30c8(\u691c\u8a3c\u3059\u308b\u5074)\n\n\u691c\u8a3c\u3059\u308b\u5074\u3067\u7f72\u540d\u8005\u306e\u516c\u958b\u9375\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u624b\u9806\u3082\u3001\u6982\u306dECDH\u306e\u5834\u5408\u3068\u540c\u69d8\u3067\u3059\u3002\u7f72\u540d\u8005\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u516c\u958b\u9375\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u3088\u3063\u3066\u624b\u9806\u304c\u7570\u306a\u308b\u70b9\u3082ECDH\u3068\u540c\u69d8\u3067\u3059\u3002\u65b9\u5f0f\u3068\u3057\u3066`ECDSA`\u3001usage\u3068\u3057\u3066verify`\u3092\u6307\u5b9a\u3059\u308b\u70b9\u304cECDH\u3068\u306e\u9055\u3044\u3068\u306a\u308a\u307e\u3059\u3002\n\n```js:WebCrypto\u3067JWK\u516c\u958b\u9375\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nlet remotePublicKey, jwk = JSON.parse('(\u6587\u5b57\u5217\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305fJWK)');\n\ncrypto.subtle.importKey(\n  'jwk',\n  jwk,\n  { name: 'ECDSA', namedCurve: 'P-256'},\n  false,\n  ['verify']\n).then(key => {\n  remotePublicKey = key;\n});\n```\n\n# \u7f72\u540d\u3057\u3066JWT\u3092\u751f\u6210(\u7f72\u540d\u3059\u308b\u5074)\n\n\u9375\u30da\u30a2\u306e\u79d8\u5bc6\u9375\u3068JWT\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u304b\u3089\u7f72\u540d\u3092\u884c\u3044\u3001JWT\u5168\u4f53\u3092\u751f\u6210\u3059\u308b\u624b\u9806\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u7f72\u540d\u7d50\u679c\u306f`Uint8Array`\u578b\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3068\u306a\u308a\u307e\u3059\u3002\n\n```js:WebCrypto\u3067\u7f72\u540d\u3057\u3066JWT\u3092\u751f\u6210\n// JavaScript\u306ebtoa()\u3067\u306fURL-safe Base64\u304c\u6271\u3048\u306a\u3044\u305f\u3081\u5909\u63db\u304c\u5fc5\u8981\nfunction encodeBase64URL(data) {\n  if(!(data instanceof Uint8Array))\n    return null;\n  let output = '';\n  for(let i = 0 ; i < data.length ; i++)\n    output += String.fromCharCode(data[i]);\n  return btoa(data.replace(/\\+/g, '-').replace(/\\//g, '_')).replace(/=+$/, '');\n}\n\nfunction toBufferSource(t) {\n  var r = new Uint8Array(t.length);\n  for(var i = 0 ; i < s.length ; i++)\n    r[i] = s.charCodeAt(i);\n  return r;\n}\n\nlet result;\n\ncrypto.subtle.sign(\n  { name: 'ECDSA', hash: { name: 'SHA-256' } },\n  keyPair.privateKey,\n  toBufferSource(payload)\n).then(signature => {\n  result = payload + '.' + encodeBase64URL(signature);\n});\n```\n\n# \u7f72\u540d\u3092\u691c\u8a3c(\u691c\u8a3c\u3059\u308b\u5074)\n\n\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u516c\u958b\u9375\u3092\u7528\u3044\u305fJWT\u306e\u691c\u8a3c\u306f\u6b21\u306e\u3088\u3046\u306a\u624b\u9806\u306b\u306a\u308a\u307e\u3059\u3002`crypto.subtle.verify()`\u306e\u7d50\u679c\u3092`then()`\u3067\u53d6\u5f97\u3059\u308b\u969b\u3001`boolean`\u578b\u306e\u5f15\u6570\u304c\u7d50\u679c\u3068\u3057\u3066\u6e21\u3055\u308c\u307e\u3059\u3002\n\n```js:WebCrypto\u3067JWT\u3092\u691c\u8a3c\n// JavaScript\u306eatob()\u3067\u306fURL-safe Base64\u304c\u6271\u3048\u306a\u3044\u305f\u3081\u5909\u63db\u304c\u5fc5\u8981\nfunction decodeBase64URL(data) {\n  if(typeof data !== 'string')\n    return null;\n  let decoded = atob(data.replace(/\\-/g, '+').replace(/_/g, '/'));\n  let buffer = new Uint8Array(decoded.length);\n  for(let i = 0 ; i < data.length ; i++)\n    buffer[i] = decoded.charCodeAt(i);\n  return buffer;\n}\n\nlet jwt = '(JWT\u3092\u6587\u5b57\u5217\u8868\u8a18\u3057\u305f\u3082\u306e)',\nlet t = jwt.split('.');\nlet signature = toBufferSource(base64UrlDecode(t[2])),\n    payload = toBufferSource(t[0] + '.' + t[1]);\n\ncrypto.subtle.verify(\n  { name: 'ECDSA', hash: { name: 'SHA-256' } },\n  remotePublicKey,\n  signature,\n  payload\n).then(result => {\n  console.log(result ? '\u691c\u8a3c\u6210\u529f' : '\u691c\u8a3c\u5931\u6557');\n});\n```\n\n# JWT\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u4ed6\u306e\u5b9f\u884c\u74b0\u5883\u306b\u95a2\u3059\u308b\u6ce8\u610f\u4e8b\u9805\n\nSHA-256 with ECDSA\u306b\u3088\u308b\u96fb\u5b50\u7f72\u540d\u306f\u3001\u540432\u30aa\u30af\u30c6\u30c3\u30c8\u306eR\u3068S\u306e\u5024\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\n\nJWT\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u306b\u683c\u7d0d\u3059\u308b\u969b\u306f\u3001[RFC 7518](https://tools.ietf.org/html/rfc7518#section-3.4)\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001R\u3068S\u3092\u5358\u7d14\u306b\u9023\u7d50\u3057\u306664\u30aa\u30af\u30c6\u30c3\u30c8\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u751f\u6210\u3057\u3001\u3053\u308c\u3092URL\u30bb\u30fc\u30d5Base64\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nWebCrypto API\u3067`crypto.subtle.sign()`\u3092\u5b9f\u884c\u3057\u3066SHA-256 with ECDSA\u306b\u3088\u3063\u3066\u7f72\u540d\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306eR\u3068S\u306e\u5358\u7d14\u9023\u7d50\u3057\u305f64\u30aa\u30af\u30c6\u30c3\u30c8\u306e`Uint8Array`\u3092\u5b9f\u884c\u7d50\u679c\u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u3053\u308c\u3092URL\u30bb\u30fc\u30d5Base64\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u3068`.`\u3092\u631f\u3093\u3067\u9023\u7d50\u3059\u308b\u3053\u3068\u3067\u3001JWT\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4e00\u65b9\u3001Java 8\u7b49\u3067\u306f\u3001ECDSA\u306b\u3088\u308b\u96fb\u5b50\u7f72\u540d\u306f[ASN.1 DER\u30d5\u30a9\u30fc\u30de\u30c3\u30c8](https://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One#Example_encoded_in_DER)\u3067\u6271\u308f\u308c\u308b\u305f\u3081\u3001JWT\u306e\u4f5c\u6210\u3084\u691c\u8a3c\u306e\u969b\u306fR\u3068S\u306e\u5358\u7d14\u9023\u7d50\u3068\u306e\u76f8\u4e92\u5909\u63db\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u304a\u3001WebCrypto API\u3067\u306f\u3001\u3053\u306eASN.1 DER\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\nASN.1 DER\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306eECDSA\u96fb\u5b50\u7f72\u540d\u306f\u6b21\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u306a\u308a\u307e\u3059\u3002\n\n```text\n0x30||(\u3053\u306e\u6b21\u306b\u7d9a\u304f\u30c7\u30fc\u30bf\u306e\u30aa\u30af\u30c6\u30c3\u30c8\u9577(1\u30aa\u30af\u30c6\u30c3\u30c8))\n||0x02||(R\u306e\u30aa\u30af\u30c6\u30c3\u30c8\u9577(1\u30aa\u30af\u30c6\u30c3\u30c8))||R(\u7b26\u53f7\u4ed8\u304d\u6574\u6570)\n||0x02||(S\u306e\u30aa\u30af\u30c6\u30c3\u30c8\u9577(1\u30aa\u30af\u30c6\u30c3\u30c8))||S(\u7b26\u53f7\u4ed8\u304d\u6574\u6570)\n```\n\n(\u6ce8: `||`\u306f\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306e\u7d50\u5408\u3092\u8868\u3057\u307e\u3059)\n\n\u3053\u3053\u3067\u3001R\u304a\u3088\u3073S\u306f\u7b26\u53f7\u306a\u3057256\u30d3\u30c3\u30c8\u6574\u6570\u3067\u3042\u308b\u306e\u306b\u5bfe\u3057\u3001**ASN.1 DER\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u306f\u7b26\u53f7\u4ed8\u304d\u6574\u6570\u3092\u6271\u3046**\u70b9\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\u5f93\u3063\u3066\u3001R, S\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u3001**\u5148\u982d\u306e1\u30aa\u30af\u30c6\u30c3\u30c8\u304c0x80\u304b\u30890xff\u3067\u3042\u308b\u5834\u5408\u3001\u5148\u982d\u306b0x00\u3092\u8db3\u3059\u3053\u3068\u3067\u6b63\u306e\u6574\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3088\u3046\u306b\u88dc\u6b63\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059**\u3002\u5148\u982d\u306b0x00\u306e1\u30aa\u30af\u30c6\u30c3\u30c8\u3092\u8ffd\u52a0\u3057\u305f\u5834\u5408\u3001\u5f53\u7136\u306a\u304c\u3089R\u3042\u308b\u3044\u306fS\u306e\u30aa\u30af\u30c6\u30c3\u30c8\u9577\u3001\u305d\u3057\u3066\u30010x30\u306e\u6b21\u306b\u683c\u7d0d\u3059\u308b\u30aa\u30af\u30c6\u30c3\u30c8\u9577\u3082\u5909\u5316\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u4e0b\u3055\u3044\u3002\n"}