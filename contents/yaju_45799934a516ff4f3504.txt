{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4f1a\u793e\u3067\u306f\u904b\u7528\u30c1\u30fc\u30e0\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001\u5404\u770c\u306b\u3042\u308b30\u8fd1\u3044\u5de5\u5834\u306e\u904b\u7528\u4f5c\u696d\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u306e\u5c0e\u5165\u4f5c\u696d\u304c\u3042\u308b\u3068\u5de5\u5834\u3054\u3068\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u3066\u5c0e\u5165\u3057\u3066\u304a\u308a\u3001\u73fe\u5728\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u306f\u624b\u4f5c\u696d\u3067\u884c\u3063\u3066\u3044\u308b\u3002\n\u5c0e\u5165\u4f5c\u696d\u306e\u4e2d\u3067\u9762\u5012\u306a\u306e\u304c\u3001\u3042\u308bClickOnce\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u5185\u3067IP\u30a2\u30c9\u30ec\u30b9\u3092\u5909\u66f4\u3059\u308b\u7b87\u6240\u304c2\u30d5\u30a1\u30a4\u30eb\u3042\u308b\u4e0a\u306b\u3001ClickOnce\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306eURL\u306eIP\u30a2\u30c9\u30ec\u30b9\u3082\u5909\u66f4\u3059\u308b\u306e\u3067\u8a083\u7b87\u6240\u3042\u308a\u307e\u3059\u3002\nIP\u30a2\u30c9\u30ec\u30b9\u30921\u56de\u5165\u529b\u3057\u305f\u30893\u7b87\u6240\u5909\u66f4\u3059\u308b\u3088\u3046\u306b\u51fa\u6765\u308c\u3070\u3001\u30df\u30b9\u3082\u7121\u304f\u306a\u308a\u4f5c\u696d\u3082\u7c21\u5358\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\u4eca\u56de\u3001\u4e00\u5ff5\u767a\u8d77\u3057\u3066\u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u590f\u4f11\u307f\u671f\u9593\u3092\u5229\u7528\u3057\u3066\u591a\u304f\u306e\u4eba\u306b\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u203bClickOnce\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306eURL\u306e\u5909\u66f4\u306f\u300cmage.exe\u300d\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u4eca\u56de\u306e\u7de8\u96c6\u30c4\u30fc\u30eb\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3067\u3059\u3002\n\n\u958b\u767a\u306b\u3042\u305f\u308a\nxml\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u3059\u308b\u4e0a\u3067\u6700\u521d\u306b\u300cMSXML2.DOMDocument\u300d\u3092\u4f7f\u7528\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u4fdd\u5b58\u5f8c\u306b\u4e0b\u8a18\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u306e\u3067\u4f7f\u7528\u3092\u3084\u3081\u307e\u3057\u305f\u3002\n\n\u958b\u59cb\u30bf\u30b0\u306e\u672b\u5c3e\u300c /\uff1e\u300d\u306a\u3069\u306e\u7a7a\u767d\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u3002\n\u7a7a\u884c\u304c\u524a\u9664\u3055\u308c\u3066\u3057\u307e\u3046\n\u7279\u6b8a\u6587\u5b57\u304c\u30a8\u30b9\u30b1\u30fc\u30d7\u6587\u5b57\u306b\u5909\u63db\u3055\u308c\u3066\u3057\u307e\u3046\n\n\u4ed6\u306b\u3082\u554f\u984c\u304c\u3042\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\u3084\u306f\u308a\u3001\u6307\u5b9a\u3057\u305f\u7b87\u6240\u4ee5\u5916\u306e\u5909\u66f4\u306f\u4f55\u3082\u3057\u3066\u6b32\u3057\u304f\u306a\u3044\u308f\u3051\u3067\u3059\u3002\n\u300cMSXML2.DOMDocument\u300d\u3092\u4f7f\u3046\u3053\u3068\u3092\u3084\u3081\u305f\u3053\u3068\u3067\u3001\u307b\u307c\u540c\u3058\u65b9\u6cd5\u3067ini\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u3082\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u3053\u308c\u3067\u826f\u304b\u3063\u305f\u3067\u3059\u3002\n2016/11/16\u8ffd\u8a18\n\u7f6e\u63db\u5bfe\u8c61\u306e\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3068\u3044\u3044\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\n\u300cReplaceConfig.vbs\u300d\u306f\u5f15\u6570\u3092\uff14\u3064\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\nReplaceConfig FileName FindKey Value [CharSet]\n\n\nFileName\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(xml,ini)\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nFindKey\n\u5909\u66f4\u3059\u308b\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u5c5e\u6027\u3092\u30ad\u30fc\u306b\u3059\u308b\u5834\u5408\u306f\u3001\u300c[]=\u89d2\u62ec\u5f27\u300d\u3067\u56f2\u3093\u3060\u4e0a\u3067\u5c5e\u6027\u540d\u306e\u624b\u524d\u306b\u300c@\u300d\u3092\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\n\u4f8b configuration/appSettings/add[@key='url']\nValue\n\u5909\u66f4\u3059\u308b\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u7a7a\u767d\u3092\u542b\u3080\u5024\u306f2\u91cd\u5f15\u7528\u7b26\u3067\u56f2\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u7279\u6b8a\u6587\u5b57\u300c\"\u300d\u3084\u300c%\u300d\u306a\u3069\u3092\u5024\u3068\u3057\u3066\u4f7f\u3046\u5834\u5408\u306f\u3001\u300c#(16\u9032\u6570)\u300d\u3068\u3057\u3066\u304f\u3060\u3055\u3044\u30022\u91cd\u5f15\u7528\u7b26\u306e\u300c\"\u300d\u306f\u300c#22\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n\u5c5e\u6027\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u3001\u300c/@\u300d\u3092\u5148\u982d\u306b\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\n\u56fa\u5b9a\u6587\u5b57\u5217\u300cGETVALUE\u300d\u306b\u3059\u308b\u3068\u3001\u7f6e\u63db\u3067\u306f\u306a\u304f\u7f6e\u63db\u5bfe\u8c61\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nCharSet\nBOM\u7121\u3057\u306e\u5834\u5408\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u4e0d\u8981\u306a\u5834\u5408\u306f\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001ini\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306f\u300cShift-JIS\u300d\u3067\u305d\u308c\u4ee5\u5916\u306f\u300cUTF-8\u300d\u3068\u306a\u308a\u307e\u3059\u3002xml\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306f\u300cencoding\u300d\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n\n\u203b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u8907\u6570\u540c\u4e00\u30ad\u30fc\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u3067\u3082\u6700\u521d\u306e\u307f\u5909\u66f4\u3057\u3066\u7d42\u4e86\u3059\u308b\u4ed5\u69d8\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4f7f\u7528\u4f8b\n\nxml\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\n\nsystem-config.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<system-config>\n  <system-name>ConfigSetValue</system-name>\n  <version>1.1</version>\n  <users>\n    <user id=\"0001\" expired=\"2015/12/31\">\n      <name>foo</name>\n    </user>\n    <user id=\"0002\" expired=\"2015/09/30\">\n      <name>bar</name>\n    </user>\n  </users>\n</system-config>\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u30921.1\u304b\u30891.2\u306b\u5909\u66f4\u3059\u308b\u3002\nReplaceConfig system-config.xml system-config/version 1.2\n\n\u30e6\u30fc\u30b6\u30fc Id=0002\u306e\u540d\u524d\u3092bar\u304b\u3089hoge\u306b\u5909\u66f4\u3059\u308b\u3002\nReplaceConfig system-config.xml system-config/users/user[@id='0002']/name hoge\n\n\u30e6\u30fc\u30b6\u30fc Id=0001\u306e\u65e5\u4ed8\u30922015/12/31\u304b\u30892016/08/17\u306b\u5909\u66f4\u3059\u308b\u3002\nReplaceConfig system-config.xml system-config/users/user[@id='0001']/@expired 2016/08/17\n\n\u3010\u7d50\u679c\u30a4\u30e1\u30fc\u30b8\u3011\n\n\n\u5024\u306e\u53d6\u5f97\n\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u306e1.1\u3092\u53d6\u5f97\u3059\u308b\u3002\u56fa\u5b9a\u6587\u5b57\u5217\u300cGETVALUE\u300d\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\nfor /f \"usebackq tokens=*\" %%i IN (`call cscript //nologo ReplaceConfig.vbs system-config.xml system-config/version GETVALUE`) DO @set result=%%i\n\necho %result%\n\n\nini\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\n\ndb.ini\n[database]\nhost = 192.168.0.1\nUSER = username\nPASS = password\n\n[encoding]\nenc = SJIS\n\n\nhost\u3092192.168.0.1\u304b\u3089localhost\u306b\u5909\u66f4\u3059\u308b\u3002\nReplaceConfig db.ini database/host 127.0.0.1\n\nenc\u3092SJIS\u304b\u3089UTF-8\u306b\u5909\u66f4\u3059\u308b\u3002\nReplaceConfig db.ini encoding/enc UTF-8\n\n\u3010\u7d50\u679c\u30a4\u30e1\u30fc\u30b8\u3011\n\n\n\u5024\u306e\u53d6\u5f97\nhost\u306e192.168.0.1\u3092\u53d6\u5f97\u3059\u308b\u3002\u56fa\u5b9a\u6587\u5b57\u5217\u300cGETVALUE\u300d\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\nfor /f \"usebackq tokens=*\" %%i IN (`call cscript //nologo ReplaceConfig.vbs db.ini database/host GETVALUE`) DO @set result=%%i\n\necho %result%\n\n\n\u30bd\u30fc\u30b9\u30ea\u30b9\u30c8\n\nReplaceConfig.vbs\n'--------------------------------------\n'  \u5f15\u65701: \u5909\u66f4\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n'  \u5f15\u65702: \u691c\u7d22\u6587\u5b57\u5217\n'  \u5f15\u65703: \u5909\u66f4\u6587\u5b57\u5217\n'  \u5f15\u65704: \u6587\u5b57\u30b3\u30fc\u30c9(BOM\u4ee5\u5916)\n'--------------------------------------\nOption Explicit\n'On Error Resume Next\n\nConst ForReading = 1, ForWriting = 2, ForAppEnding = 8\nConst adTypeBinary = 1, adTypeText = 2\nConst adReadAll = -1, adReadLine = -2\n\nConst typeXML = 1, typeINI = 2\n\nConst GET_CONFIG = \"GETVALUE\"\n\nDim objArgs\nDim pathName, keyName, valueString, charSet, strLine\n\n'\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u53d6\u5f97\nSet objArgs = WScript.Arguments\n\n'\u5bfe\u8c61\u30d1\u30b9\u540d\u53d6\u5f97\nIf objArgs.Count >= 1 Then\n    pathName = objArgs(0)\nElse\n    WScript.Echo \"\u5bfe\u8c61\u30d1\u30b9\u540d\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(1)\nEnd If\n\n'\u691c\u7d22\u30ad\u30fc\u53d6\u5f97\nIf objArgs.Count >= 2 Then\n    keyName = objArgs(1)\nElse\n    WScript.Echo \"\u691c\u7d22\u30ad\u30fc\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(2)\nEnd If\n\n'\u5909\u66f4\u5bfe\u8c61\u5024\u53d6\u5f97\nIf objArgs.count >= 3 then\n    valueString = objArgs(2)\nElse\n    WScript.Echo \"\u5909\u66f4\u5bfe\u8c61\u5024\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(3)\nEnd If\n\n'\u6587\u5b57\u30b3\u30fc\u30c9(BOM\u4ee5\u5916)\nIf objArgs.count >= 4 then\n    charSet = UCase(objArgs(3))\nEnd If\n\n'\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\nDim param, key, str, result\nSet param = CreateObject(\"Scripting.Dictionary\")\nCall GetInfo(pathName, charSet)\n\n'\u8a2d\u5b9a\u5024\u5909\u66f4\u51e6\u7406\nresult = Main(pathName, keyName, valueString)\nSet param = Nothing\n\nWScript.Quit(result)\n\n'------------------------------------------------------------------------\n'  \u8a2d\u5b9a\u5024\u5909\u66f4\u51e6\u7406\n'  pathName:    \u5bfe\u8c61\u30d1\u30b9\u540d\n'  keyName:     \u691c\u7d22\u30ad\u30fc\n'  valueString: \u5909\u66f4\u5bfe\u8c61\u5024\n'------------------------------------------------------------------------\nFunction Main(pathName, keyName, valueString)\n\n    Dim dic, reg, matches, match, hexvalue, stream_r, stream_pre, stream_w\n    Dim bin, newtxt, line, nextline, aryKey, i, idx, curKey, count, key\n    Dim attrKey, aryAttr, node, exitFlag, lfType, lfType2, allLine, aryLine\n    Dim result\n\n    Main = 0\n\n    Set stream_r = CreateObject(\"ADODB.Stream\")\n    Set stream_pre = CreateObject(\"ADODB.Stream\")\n    Set stream_w = CreateObject(\"ADODB.Stream\")\n    Set dic = CreateObject(\"Scripting.Dictionary\")\n    Set reg = CreateObject(\"VBScript.RegExp\")\n    reg.Global = True\n    reg.IgnoreCase = True\n\n    '\u691c\u7d22\u30ad\u30fc\u5206\u5272\u3057\u3001\u30ad\u30fc\u5358\u4f4d\u3067\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\n    aryKey = Split(keyName, \"/\")\n    For i=0 To UBound(aryKey)\n        dic.Add aryKey(i), 0\n    Next\n\n    '\u73fe\u884c\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u8aad\u307f\u8fbc\u3080\n    stream_r.Open\n    stream_r.CharSet = param(\"CharSet\")\n    stream_r.LoadFromFile pathName\n    allLine = stream_r.ReadText(adReadAll)\n    stream_r.Close\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\n    lfType = \"\"\n    Select Case param(\"LfType\")\n        Case \"CrLf\": lfType = vbCrLf\n        Case \"Lf\": lfType = vbLf\n        Case \"Cr\": lfType = vbCr\n    End Select\n\n    'XML\u3067\u6539\u884c\u7121\u3057\u306e\u5834\u5408\n    lfType2 = lfType\n    If param(\"FileType\") = typeXML And param(\"LfType\") = \"\" Then\n        '\u4e00\u6642\u7684\u306b\u6539\u884c\u3092\u4ed8\u3051\u308b\n        reg.Pattern =  \"(.*?>)(<.*?)\"\n        allLine = reg.Replace(allLine, \"$1\" & vbCrLf & \"$2\")\n        lfType2 = vbCrLf\n    End If\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u3067\u5206\u5272\n    aryLine = Split(allLine, lfType2)\n\n    '\u8a2d\u5b9a\u5024\u306e#\u8a18\u53f7\u306e\u6570\u5024\u5909\u63db\n    reg.Pattern =  \"#(\\d\\d)\"\n    Set matches = reg.Execute(valueString)\n    For Each match In matches\n        hexvalue = match.SubMatches(0)\n        valueString = Replace(valueString, \"#\" & hexvalue, Chr(CInt(\"&H\" & hexvalue)))\n    Next\n    Set matches = Nothing\n\n    i = 0\n    count = 0\n    exitFlag = False\n\n    For idx = 0 To UBound(aryLine)\n        line = aryLine(idx)\n        IF exitFlag = False Then\n            key = dic.Keys\n            node = key(i)\n\n            '\u30ad\u30fc\u306e\u4e00\u81f4\u78ba\u8a8d\n            If param(\"FileType\") = typeXML Then\n                If Instr(node, \"[\") > 0 Then\n                   node = Replace(node,\"[@\",\".*?\")\n                   node = Replace(node,\"='\",\"=.*?\")\n                   node = Replace(node,\"']\",\"\")\n                   node = Replace(node,\"]\",\"\")\n                End If\n                reg.Pattern = \"<\\s*?\" & node & \".*?>\"\n            Else\n                reg.Pattern = \"^[^;]*?\" & node & \".*?\"\n            End If\n            If reg.Test(line) Then\n                '\u30ad\u30fc\u72b6\u614b\u6709\u308a\u306b\u8a2d\u5b9a\n                dic.Item(key(i)) = 1\n\n                '\u6b21\u306e\u30ad\u30fc\u3078\n                i = i + 1\n\n                If i <= UBound(key) Then\n                    '\u5c5e\u6027\u5024\u306e\u5909\u66f4\u304b\u30c1\u30a7\u30c3\u30af(\u5148\u982d\u306b\"@\"\u8a18\u53f7)\n                    attrKey = \"\"\n                    If Instr(key(i), \"@\") = 1 Then\n                        attrKey = Mid(key(i), 2, Len(key(i)))\n                        reg.Pattern =  \".*?\" & attrKey & \".*?=\"\n                        If reg.Test(line) Then\n                            '\u30ad\u30fc\u72b6\u614b\u6709\u308a\u306b\u8a2d\u5b9a\n                            dic.Item(key(i)) = 1\n                        End If\n                    End If\n                End If\n\n                '\u30ad\u30fc\u6709\u7121\u72b6\u614b\u306e\u78ba\u8a8d\n                count = 0\n                For Each curKey In dic\n                    count = count + dic.Item(curKey)\n                Next\n            End If\n\n            '\u6700\u7d42\u30ad\u30fc\u306b\u5230\u9054\n            If count = UBound(aryKey) + 1 Then\n                '\u8a2d\u5b9a\u5024\u306e\u5909\u66f4\n                If param(\"FileType\") = typeXML Then\n                    'XML\u30d5\u30a1\u30a4\u30eb\u5074\u306e\u5909\u66f4\n                    If attrKey <> \"\" Then\n                        '\u5c5e\u6027\u5024\u306e\u5909\u66f4\n                        reg.Pattern = attrKey & \"(.*?=.*?['\"\"])(.*?)(['\"\"])\"\n                        If reg.Test(line) Then\n                            result = GetValue(reg, valueString, line)\n                            line = reg.Replace(line, attrKey & \"$1\" & valueString & \"$3\")\n                        End If\n                    Else\n                        '\u5024\u306e\u5909\u66f4\n                        reg.Pattern = \"(>)(.*?)(<)\"\n                        If reg.Test(line) Then\n                            result = GetValue(reg, valueString, line)\n                            line = reg.Replace(line, \"$1\" & valueString & \"$3\")\n                        Else\n                            '\u6b21\u306e\u884c\u306b\u5024\u304c\u3042\u308b\n                            nextline = aryLine(idx + 1)\n                            reg.Pattern = \"(.*?)(\\S.*)\"\n                            If reg.Test(nextline) Then\n                                result = GetValue(reg, valueString, nextline)\n                                '\u8aad\u307f\u8fbc\u3093\u3060\u6b21\u306e\u884c\u3092\u518d\u30bb\u30c3\u30c8\n                                aryLine(idx + 1) = reg.Replace(nextline, \"$1\" & valueString)\n                            End If\n                        End If\n                    End If\n                Else\n                    'Ini\u30d5\u30a1\u30a4\u30eb\u5074\u306e\u5024\u5909\u66f4\n                    reg.Pattern = \"(=\\s*)(.*)\"\n                    If reg.Test(line) Then\n                        result = GetValue(reg, valueString, line)\n                        line = reg.Replace(line, \"$1\" & valueString)\n                    End If\n                End If\n                dic.Item(aryKey(count-1)) = 0\n\n                '\u5909\u66f4\u5bfe\u8c61\u5024\u306b\u5909\u66f4\u3057\u305f\u3089\u51e6\u7406\u7d42\u4e86\n                exitFlag = True\n            End If\n        End If\n\n        '\u8aad\u307f\u8fbc\u3093\u3060\u884c\u3092\u518d\u30bb\u30c3\u30c8\n        aryLine(idx) = line\n    Next\n\n    If exitFlag = True Then\n        If UCase(valueString) = GET_CONFIG Then\n            '\u5024\u3092\u8fd4\u3059\n            WScript.Echo result\n        Else\n            '\u6539\u884c\u3092\u4ed8\u52a0\n            newtxt = Join(aryLine, lfType)\n\n            '\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\n            If param(\"CharSet\") = \"UTF-8\" And param(\"IsBOM\") = False Then \n                'BOM\u7121\u3057\n                stream_pre.Type = adTypeText\n                stream_pre.CharSet = param(\"CharSet\")\n                stream_pre.Open\n                stream_pre.WriteText newtxt\n\n                stream_pre.Position = 0\n                stream_pre.Type = adTypeBinary\n                stream_pre.Position = 3\n                bin = stream_pre.Read()\n                stream_pre.Close()\n\n                stream_w.Type = adTypeBinary\n                stream_w.Open()\n                stream_w.Write(bin)\n                stream_w.SaveToFile pathName, ForWriting\n                stream_w.Close()\n            Else\n                stream_w.Open()\n                stream_w.Charset = param(\"CharSet\")\n                stream_w.WriteText newtxt\n                stream_w.SaveToFile pathName, ForWriting\n                stream_w.Close()\n            End If\n        End If\n    Else\n        WScript.Echo \"\u30ad\u30fc\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"\n        Main = 9\n    End If\n\n    Set dic = Nothing\n    Set reg = Nothing\n\nEnd Function\n\n'------------------------------------------------------------------------\n'\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u7b49\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction GetInfo(pathName, charSet)\n\n    Dim stream, reg, match, matches, bytCode, allLine, line, endLine, lfType, aryLine\n    Dim fso, ext\n\n    GetInfo = False\n\n    '\u521d\u671f\u5024\u30bb\u30c3\u30c8\n    param.Add \"CharSet\", \"UTF-8\"        '\u6587\u5b57\u30b3\u30fc\u30c9\n    param.Add \"IsBOM\", False            'BOM\u6709\u7121\n    param.Add \"FileType\", typeINI       '\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\n    param.Add \"LfType\", \"CrLf\"          '\u6539\u884c\u30b3\u30fc\u30c9\n    param.Add \"IsEndLf\", False          '\u672b\u5c3e\u6539\u884c\u6709\u7121\n\n    '\u62e1\u5f35\u5b50\u3092\u53d6\u5f97\u3059\u308b\n    Set fso = CreateObject(\"Scripting.FileSystemObject\")\n    ext = fso.GetExtensionName(pathName)\n    Set fso = Nothing\n\n    '\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\n    Set stream = CreateObject(\"ADODB.Stream\")\n\n    'BOM\u30c1\u30a7\u30c3\u30af\u7528\u306b\u5148\u982d\u884c\u3092\u8aad\u307f\u8fbc\u3080\n    stream.Type = adTypeBinary\n    stream.Open\n    stream.LoadFromFile pathName\n    bytCode = stream.Read\n    stream.Close\n    Call CheckBOM(bytCode)\n\n    If param(\"IsBOM\") = False Then\n        'Ini\u30d5\u30a1\u30a4\u30eb\u306fSJIS\u3068\u3059\u308b\n        If charSet = \"\" And (LCase(ext) = \"ini\" Or Instr(LCase(pathName),\".ini\") > 1) Then\n            charSet = \"Shift-JIS\"\n        End If\n        param(\"CharSet\") = charSet\n    End If\n\n    '\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u5224\u5b9a\u3067\u8aad\u307f\u8fbc\u307f\n    stream.Type = adTypeText\n    stream.CharSet = \"_autodetect_all\"\n    If charSet <> \"\" Then stream.CharSet = charSet\n    stream.Open\n    stream.LoadFromFile pathName\n    allLine = stream.ReadText(adReadAll)\n    stream.Close\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u5224\u5b9a(100\u6587\u5b57\u3067\u5224\u65ad)\n    line = Left(allLine, 100)\n    If Instr(line, vbCrLf) <> 0 Then\n        lfType = \"CrLf\"\n    ElseIf Instr(line, vbLf) <> 0 Then\n        lfType = \"Lf\"\n    ElseIf Instr(line, vbCr) <> 0 Then\n        lfType = \"Cr\"\n    End If\n    param(\"LfType\") = lfType\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u3067\u5206\u5272\n    Select Case lfType\n        Case \"CrLf\": lfType = vbCrLf\n        Case \"Lf\": lfType = vbLf\n        Case \"Cr\": lfType = vbCr\n    End Select\n    aryLine = Split(allLine, lfType)\n\n    '\u5148\u982d\u884c\u306b\"< >\"\u304c\u3042\u308c\u3070\u3001XML\u3068\u3057\u3066\u6271\u3046\n    Set reg = CreateObject(\"VBScript.RegExp\")\n    reg.Pattern = \"<.*?>\"\n    If reg.Test(aryLine(0)) Then\n        param(\"FileType\") = typeXML\n        If param(\"IsBOM\") = False Then\n            'encoding\u306e\u5024\u3092\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u30bb\u30c3\u30c8\n            reg.Pattern = \"encoding.*?=['\"\"](.*?)['\"\"]\"\n            Set matches = reg.Execute(aryLine(0))\n            For Each match In matches\n                param(\"CharSet\") = UCase(match.SubMatches(0))\n            Next\n            Set matches = Nothing\n        End If\n    End If\n    Set reg = Nothing\n\n    '\u6700\u7d42\u884c\u306e\u6539\u884c\u30b3\u30fc\u30c9\u6709\u7121\n    If aryLine(UBound(aryLine)) = \"\" Then\n        param(\"IsEndLf\") = True\n    End If\n\n    GetInfo = True\n\nEnd Function\n\n'------------------------------------------------------------------------\n'BOM\u30c1\u30a7\u30c3\u30af\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction CheckBOM(str)\n    Dim bytes(2), result\n\n    bytes(0) = AscB(MidB(str, 1, 1))\n    bytes(1) = AscB(MidB(str, 2, 1))\n    bytes(2) = AscB(MidB(str, 3, 1))\n\n    If LenB(str) > 1 Then\n        If bytes(0) >= &HFE And bytes(1) >= &HFE Then\n            result = \"unicode\"\n            If bytes(0) = &HFF And bytes(1) = &HFE Then\n                result = \"unicodeFFFE\"\n            End If\n        Else If bytes(0) = &HEF And bytes(1) = &HBB And bytes(2) = &HBF Then\n                result = \"UTF-8\"\n            End If\n        End If\n    End If\n\n    If result <> \"\" Then\n        param(\"CharSet\") = result\n        param(\"IsBOM\") = True\n    End If\n\n    CheckBOM = result\n\nEnd Function\n\n'------------------------------------------------------------------------\n'\u73fe\u5728\u306e\u8a2d\u5b9a\u5024\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction GetValue(reg, valueString, target)\n    Dim matches, match\n\n    GetValue = \"\"\n    If UCase(valueString) = GET_CONFIG Then\n        Set matches = reg.Execute(target)\n        For Each match In matches\n            GetValue = match.SubMatches(1)\n            Exit For\n        Next\n    End If\n\nEnd Function\n\n\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\u3063\u307d\u3044\u3053\u3068\n\n\u30b3\u30fc\u30c9\u6539\u5909\u3084\u914d\u5e03\u306f\u81ea\u7531\u3067\u3059\u3002\n\u3053\u306e\u30c4\u30fc\u30eb\u306b\u3088\u308b\u7fa9\u52d9\uff0f\u8cac\u4efb\u3092\u4f55\u3089\u8ca0\u3044\u307e\u305b\u3093\u3002\n\n\n\u6700\u5f8c\u306b\n\u4ed5\u7d44\u307f\u3068\u3057\u3066\u306f\u3001\u5909\u66f4\u30ad\u30fc\u3092\"/\"\u533a\u5207\u308a\u3067\u5206\u5272\u3057\u3066\u9023\u60f3\u914d\u5217\u306e\u30ad\u30fc\u3068\u3057\u5024\u3092\u300c0\u300d\u3067\u30bb\u30c3\u30c8\u3001\u30ad\u30fc\u304c\u898b\u3064\u304b\u308c\u3070\u300c1\u300d\u306b\u5909\u66f4\u3057\u3066\u3001\u5168\u3066\u306e\u30ad\u30fc\u306e\u5024\u304c\u300c1\u300d\u306b\u306a\u308c\u3070\u5024\u3092\u5909\u66f4\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u3057\u305f\u5185\u5bb9\u3068\u3057\u3066\u306f\u3001\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u7279\u6b8a\u6587\u5b57\u300c\"\u300d\u3084\u300c%\u300d\u306a\u3069\u306e\u5bfe\u5fdc\n\u6587\u5b57\u30b3\u30fc\u30c9\u95a2\u9023\n\u6539\u884c\u7121\u3057XML\u30d5\u30a1\u30a4\u30eb\u306e\u5bfe\u5fdc\n\u30ad\u30fc\u3068\u5024\u306e\u9593\u306e\u7a7a\u767d\u3084\u30bf\u30b0\u9593\u306e\u6539\u884c\u5bfe\u5fdc\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3082\u624b\u4f5c\u696d\u3067\u4fee\u6b63\u3057\u3066\u3082\u305d\u3093\u306a\u624b\u9593\u3067\u306f\u306a\u3044\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u3046\u3044\u3046\u30c4\u30fc\u30eb\u304c\u3042\u308c\u3070\u3001\u30d0\u30c3\u30c1\u3092\u4f7f\u3063\u3066\u5024\u3092\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u4f5c\u696d\u3082\u7c21\u5358\u306b\u306a\u308a\u30df\u30b9\u3082\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\u4f1a\u793e\u3067\u306f\u904b\u7528\u30c1\u30fc\u30e0\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001\u5404\u770c\u306b\u3042\u308b30\u8fd1\u3044\u5de5\u5834\u306e\u904b\u7528\u4f5c\u696d\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u306e\u5c0e\u5165\u4f5c\u696d\u304c\u3042\u308b\u3068\u5de5\u5834\u3054\u3068\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u3066\u5c0e\u5165\u3057\u3066\u304a\u308a\u3001\u73fe\u5728\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u306f\u624b\u4f5c\u696d\u3067\u884c\u3063\u3066\u3044\u308b\u3002\n\u5c0e\u5165\u4f5c\u696d\u306e\u4e2d\u3067\u9762\u5012\u306a\u306e\u304c\u3001\u3042\u308bClickOnce\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u5185\u3067IP\u30a2\u30c9\u30ec\u30b9\u3092\u5909\u66f4\u3059\u308b\u7b87\u6240\u304c2\u30d5\u30a1\u30a4\u30eb\u3042\u308b\u4e0a\u306b\u3001ClickOnce\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306eURL\u306eIP\u30a2\u30c9\u30ec\u30b9\u3082\u5909\u66f4\u3059\u308b\u306e\u3067\u8a083\u7b87\u6240\u3042\u308a\u307e\u3059\u3002\nIP\u30a2\u30c9\u30ec\u30b9\u30921\u56de\u5165\u529b\u3057\u305f\u30893\u7b87\u6240\u5909\u66f4\u3059\u308b\u3088\u3046\u306b\u51fa\u6765\u308c\u3070\u3001\u30df\u30b9\u3082\u7121\u304f\u306a\u308a\u4f5c\u696d\u3082\u7c21\u5358\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\u4eca\u56de\u3001\u4e00\u5ff5\u767a\u8d77\u3057\u3066\u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u590f\u4f11\u307f\u671f\u9593\u3092\u5229\u7528\u3057\u3066\u591a\u304f\u306e\u4eba\u306b\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u203bClickOnce\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306eURL\u306e\u5909\u66f4\u306f\u300cmage.exe\u300d\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u4eca\u56de\u306e\u7de8\u96c6\u30c4\u30fc\u30eb\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3067\u3059\u3002\n\n# \u958b\u767a\u306b\u3042\u305f\u308a\nxml\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u3059\u308b\u4e0a\u3067\u6700\u521d\u306b\u300cMSXML2.DOMDocument\u300d\u3092\u4f7f\u7528\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u4fdd\u5b58\u5f8c\u306b\u4e0b\u8a18\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u306e\u3067\u4f7f\u7528\u3092\u3084\u3081\u307e\u3057\u305f\u3002\n\n* \u958b\u59cb\u30bf\u30b0\u306e\u672b\u5c3e\u300c /\uff1e\u300d\u306a\u3069\u306e\u7a7a\u767d\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u3002\n* \u7a7a\u884c\u304c\u524a\u9664\u3055\u308c\u3066\u3057\u307e\u3046\n* \u7279\u6b8a\u6587\u5b57\u304c\u30a8\u30b9\u30b1\u30fc\u30d7\u6587\u5b57\u306b\u5909\u63db\u3055\u308c\u3066\u3057\u307e\u3046\n\n\u4ed6\u306b\u3082\u554f\u984c\u304c\u3042\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\u3084\u306f\u308a\u3001\u6307\u5b9a\u3057\u305f\u7b87\u6240\u4ee5\u5916\u306e\u5909\u66f4\u306f\u4f55\u3082\u3057\u3066\u6b32\u3057\u304f\u306a\u3044\u308f\u3051\u3067\u3059\u3002\n\u300cMSXML2.DOMDocument\u300d\u3092\u4f7f\u3046\u3053\u3068\u3092\u3084\u3081\u305f\u3053\u3068\u3067\u3001\u307b\u307c\u540c\u3058\u65b9\u6cd5\u3067ini\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u3082\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u3053\u308c\u3067\u826f\u304b\u3063\u305f\u3067\u3059\u3002\n\n2016/11/16\u8ffd\u8a18\n\u7f6e\u63db\u5bfe\u8c61\u306e\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3068\u3044\u3044\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n# \u4f7f\u7528\u65b9\u6cd5\n\u300cReplaceConfig.vbs\u300d\u306f\u5f15\u6570\u3092\uff14\u3064\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```\nReplaceConfig FileName FindKey Value [CharSet]\n```\n\n* FileName\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(xml,ini)\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n* FindKey\n\u5909\u66f4\u3059\u308b\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u5c5e\u6027\u3092\u30ad\u30fc\u306b\u3059\u308b\u5834\u5408\u306f\u3001\u300c[]=\u89d2\u62ec\u5f27\u300d\u3067\u56f2\u3093\u3060\u4e0a\u3067\u5c5e\u6027\u540d\u306e\u624b\u524d\u306b\u300c@\u300d\u3092\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\n\u4f8b configuration/appSettings/add[@key='url']\n\n* Value\n\u5909\u66f4\u3059\u308b\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u7a7a\u767d\u3092\u542b\u3080\u5024\u306f2\u91cd\u5f15\u7528\u7b26\u3067\u56f2\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u7279\u6b8a\u6587\u5b57\u300c\"\u300d\u3084\u300c%\u300d\u306a\u3069\u3092\u5024\u3068\u3057\u3066\u4f7f\u3046\u5834\u5408\u306f\u3001\u300c#(16\u9032\u6570)\u300d\u3068\u3057\u3066\u304f\u3060\u3055\u3044\u30022\u91cd\u5f15\u7528\u7b26\u306e\u300c\"\u300d\u306f\u300c#22\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n\u5c5e\u6027\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u3001\u300c/@\u300d\u3092\u5148\u982d\u306b\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\n\u56fa\u5b9a\u6587\u5b57\u5217\u300cGETVALUE\u300d\u306b\u3059\u308b\u3068\u3001\u7f6e\u63db\u3067\u306f\u306a\u304f\u7f6e\u63db\u5bfe\u8c61\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n* CharSet\nBOM\u7121\u3057\u306e\u5834\u5408\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u4e0d\u8981\u306a\u5834\u5408\u306f\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001ini\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306f\u300cShift-JIS\u300d\u3067\u305d\u308c\u4ee5\u5916\u306f\u300cUTF-8\u300d\u3068\u306a\u308a\u307e\u3059\u3002xml\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306f\u300cencoding\u300d\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n\n\u203b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u8907\u6570\u540c\u4e00\u30ad\u30fc\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u3067\u3082\u6700\u521d\u306e\u307f\u5909\u66f4\u3057\u3066\u7d42\u4e86\u3059\u308b\u4ed5\u69d8\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u4f7f\u7528\u4f8b\n## xml\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\n\n```xml:system-config.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<system-config>\n  <system-name>ConfigSetValue</system-name>\n  <version>1.1</version>\n  <users>\n    <user id=\"0001\" expired=\"2015/12/31\">\n      <name>foo</name>\n    </user>\n    <user id=\"0002\" expired=\"2015/09/30\">\n      <name>bar</name>\n    </user>\n  </users>\n</system-config>\n```\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u30921.1\u304b\u30891.2\u306b\u5909\u66f4\u3059\u308b\u3002\n\n```\nReplaceConfig system-config.xml system-config/version 1.2\n```\n\n\u30e6\u30fc\u30b6\u30fc Id=0002\u306e\u540d\u524d\u3092bar\u304b\u3089hoge\u306b\u5909\u66f4\u3059\u308b\u3002\n\n```\nReplaceConfig system-config.xml system-config/users/user[@id='0002']/name hoge\n```\n\n\u30e6\u30fc\u30b6\u30fc Id=0001\u306e\u65e5\u4ed8\u30922015/12/31\u304b\u30892016/08/17\u306b\u5909\u66f4\u3059\u308b\u3002\n\n```\nReplaceConfig system-config.xml system-config/users/user[@id='0001']/@expired 2016/08/17\n```\n\u3010\u7d50\u679c\u30a4\u30e1\u30fc\u30b8\u3011\n![diff.png](https://qiita-image-store.s3.amazonaws.com/0/14053/2c8a4e0a-909f-f4fd-fa2e-03b1e7faec54.png)\n\n## \u5024\u306e\u53d6\u5f97\n\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u306e1.1\u3092\u53d6\u5f97\u3059\u308b\u3002\u56fa\u5b9a\u6587\u5b57\u5217\u300cGETVALUE\u300d\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n```bat\nfor /f \"usebackq tokens=*\" %%i IN (`call cscript //nologo ReplaceConfig.vbs system-config.xml system-config/version GETVALUE`) DO @set result=%%i\n\necho %result%\n```\n\n## ini\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\n\n```ini:db.ini\n[database]\nhost = 192.168.0.1\nUSER = username\nPASS = password\n\n[encoding]\nenc = SJIS\n```\n\nhost\u3092192.168.0.1\u304b\u3089localhost\u306b\u5909\u66f4\u3059\u308b\u3002\n\n```\nReplaceConfig db.ini database/host 127.0.0.1\n```\n\nenc\u3092SJIS\u304b\u3089UTF-8\u306b\u5909\u66f4\u3059\u308b\u3002\n\n```\nReplaceConfig db.ini encoding/enc UTF-8\n```\n\n\u3010\u7d50\u679c\u30a4\u30e1\u30fc\u30b8\u3011\n![diffini.png](https://qiita-image-store.s3.amazonaws.com/0/14053/4d7eaee4-02c1-3334-e474-2b201dfc79e4.png)\n\n## \u5024\u306e\u53d6\u5f97\nhost\u306e192.168.0.1\u3092\u53d6\u5f97\u3059\u308b\u3002\u56fa\u5b9a\u6587\u5b57\u5217\u300cGETVALUE\u300d\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n```bat\nfor /f \"usebackq tokens=*\" %%i IN (`call cscript //nologo ReplaceConfig.vbs db.ini database/host GETVALUE`) DO @set result=%%i\n\necho %result%\n```\n\n# \u30bd\u30fc\u30b9\u30ea\u30b9\u30c8\n```vbnet:ReplaceConfig.vbs\n'--------------------------------------\n'  \u5f15\u65701: \u5909\u66f4\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n'  \u5f15\u65702: \u691c\u7d22\u6587\u5b57\u5217\n'  \u5f15\u65703: \u5909\u66f4\u6587\u5b57\u5217\n'  \u5f15\u65704: \u6587\u5b57\u30b3\u30fc\u30c9(BOM\u4ee5\u5916)\n'--------------------------------------\nOption Explicit\n'On Error Resume Next\n\nConst ForReading = 1, ForWriting = 2, ForAppEnding = 8\nConst adTypeBinary = 1, adTypeText = 2\nConst adReadAll = -1, adReadLine = -2\n\nConst typeXML = 1, typeINI = 2\n\nConst GET_CONFIG = \"GETVALUE\"\n\nDim objArgs\nDim pathName, keyName, valueString, charSet, strLine\n\n'\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u53d6\u5f97\nSet objArgs = WScript.Arguments\n\n'\u5bfe\u8c61\u30d1\u30b9\u540d\u53d6\u5f97\nIf objArgs.Count >= 1 Then\n    pathName = objArgs(0)\nElse\n    WScript.Echo \"\u5bfe\u8c61\u30d1\u30b9\u540d\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(1)\nEnd If\n\n'\u691c\u7d22\u30ad\u30fc\u53d6\u5f97\nIf objArgs.Count >= 2 Then\n    keyName = objArgs(1)\nElse\n    WScript.Echo \"\u691c\u7d22\u30ad\u30fc\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(2)\nEnd If\n\n'\u5909\u66f4\u5bfe\u8c61\u5024\u53d6\u5f97\nIf objArgs.count >= 3 then\n    valueString = objArgs(2)\nElse\n    WScript.Echo \"\u5909\u66f4\u5bfe\u8c61\u5024\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(3)\nEnd If\n\n'\u6587\u5b57\u30b3\u30fc\u30c9(BOM\u4ee5\u5916)\nIf objArgs.count >= 4 then\n    charSet = UCase(objArgs(3))\nEnd If\n\n'\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\nDim param, key, str, result\nSet param = CreateObject(\"Scripting.Dictionary\")\nCall GetInfo(pathName, charSet)\n\n'\u8a2d\u5b9a\u5024\u5909\u66f4\u51e6\u7406\nresult = Main(pathName, keyName, valueString)\nSet param = Nothing\n\nWScript.Quit(result)\n\n'------------------------------------------------------------------------\n'  \u8a2d\u5b9a\u5024\u5909\u66f4\u51e6\u7406\n'  pathName:    \u5bfe\u8c61\u30d1\u30b9\u540d\n'  keyName:     \u691c\u7d22\u30ad\u30fc\n'  valueString: \u5909\u66f4\u5bfe\u8c61\u5024\n'------------------------------------------------------------------------\nFunction Main(pathName, keyName, valueString)\n\n    Dim dic, reg, matches, match, hexvalue, stream_r, stream_pre, stream_w\n    Dim bin, newtxt, line, nextline, aryKey, i, idx, curKey, count, key\n    Dim attrKey, aryAttr, node, exitFlag, lfType, lfType2, allLine, aryLine\n    Dim result\n\n    Main = 0\n\n    Set stream_r = CreateObject(\"ADODB.Stream\")\n    Set stream_pre = CreateObject(\"ADODB.Stream\")\n    Set stream_w = CreateObject(\"ADODB.Stream\")\n    Set dic = CreateObject(\"Scripting.Dictionary\")\n    Set reg = CreateObject(\"VBScript.RegExp\")\n    reg.Global = True\n    reg.IgnoreCase = True\n\n    '\u691c\u7d22\u30ad\u30fc\u5206\u5272\u3057\u3001\u30ad\u30fc\u5358\u4f4d\u3067\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\n    aryKey = Split(keyName, \"/\")\n    For i=0 To UBound(aryKey)\n        dic.Add aryKey(i), 0\n    Next\n\n    '\u73fe\u884c\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u8aad\u307f\u8fbc\u3080\n    stream_r.Open\n    stream_r.CharSet = param(\"CharSet\")\n    stream_r.LoadFromFile pathName\n    allLine = stream_r.ReadText(adReadAll)\n    stream_r.Close\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\n    lfType = \"\"\n    Select Case param(\"LfType\")\n        Case \"CrLf\": lfType = vbCrLf\n        Case \"Lf\": lfType = vbLf\n        Case \"Cr\": lfType = vbCr\n    End Select\n\n    'XML\u3067\u6539\u884c\u7121\u3057\u306e\u5834\u5408\n    lfType2 = lfType\n    If param(\"FileType\") = typeXML And param(\"LfType\") = \"\" Then\n        '\u4e00\u6642\u7684\u306b\u6539\u884c\u3092\u4ed8\u3051\u308b\n        reg.Pattern =  \"(.*?>)(<.*?)\"\n        allLine = reg.Replace(allLine, \"$1\" & vbCrLf & \"$2\")\n        lfType2 = vbCrLf\n    End If\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u3067\u5206\u5272\n    aryLine = Split(allLine, lfType2)\n\n    '\u8a2d\u5b9a\u5024\u306e#\u8a18\u53f7\u306e\u6570\u5024\u5909\u63db\n    reg.Pattern =  \"#(\\d\\d)\"\n    Set matches = reg.Execute(valueString)\n    For Each match In matches\n        hexvalue = match.SubMatches(0)\n        valueString = Replace(valueString, \"#\" & hexvalue, Chr(CInt(\"&H\" & hexvalue)))\n    Next\n    Set matches = Nothing\n\n    i = 0\n    count = 0\n    exitFlag = False\n\n    For idx = 0 To UBound(aryLine)\n        line = aryLine(idx)\n        IF exitFlag = False Then\n            key = dic.Keys\n            node = key(i)\n\n            '\u30ad\u30fc\u306e\u4e00\u81f4\u78ba\u8a8d\n            If param(\"FileType\") = typeXML Then\n                If Instr(node, \"[\") > 0 Then\n                   node = Replace(node,\"[@\",\".*?\")\n                   node = Replace(node,\"='\",\"=.*?\")\n                   node = Replace(node,\"']\",\"\")\n                   node = Replace(node,\"]\",\"\")\n                End If\n                reg.Pattern = \"<\\s*?\" & node & \".*?>\"\n            Else\n                reg.Pattern = \"^[^;]*?\" & node & \".*?\"\n            End If\n            If reg.Test(line) Then\n                '\u30ad\u30fc\u72b6\u614b\u6709\u308a\u306b\u8a2d\u5b9a\n                dic.Item(key(i)) = 1\n\n                '\u6b21\u306e\u30ad\u30fc\u3078\n                i = i + 1\n\n                If i <= UBound(key) Then\n                    '\u5c5e\u6027\u5024\u306e\u5909\u66f4\u304b\u30c1\u30a7\u30c3\u30af(\u5148\u982d\u306b\"@\"\u8a18\u53f7)\n                    attrKey = \"\"\n                    If Instr(key(i), \"@\") = 1 Then\n                        attrKey = Mid(key(i), 2, Len(key(i)))\n                        reg.Pattern =  \".*?\" & attrKey & \".*?=\"\n                        If reg.Test(line) Then\n                            '\u30ad\u30fc\u72b6\u614b\u6709\u308a\u306b\u8a2d\u5b9a\n                            dic.Item(key(i)) = 1\n                        End If\n                    End If\n                End If\n\n                '\u30ad\u30fc\u6709\u7121\u72b6\u614b\u306e\u78ba\u8a8d\n                count = 0\n                For Each curKey In dic\n                    count = count + dic.Item(curKey)\n                Next\n            End If\n\n            '\u6700\u7d42\u30ad\u30fc\u306b\u5230\u9054\n            If count = UBound(aryKey) + 1 Then\n                '\u8a2d\u5b9a\u5024\u306e\u5909\u66f4\n                If param(\"FileType\") = typeXML Then\n                    'XML\u30d5\u30a1\u30a4\u30eb\u5074\u306e\u5909\u66f4\n                    If attrKey <> \"\" Then\n                        '\u5c5e\u6027\u5024\u306e\u5909\u66f4\n                        reg.Pattern = attrKey & \"(.*?=.*?['\"\"])(.*?)(['\"\"])\"\n                        If reg.Test(line) Then\n                            result = GetValue(reg, valueString, line)\n                            line = reg.Replace(line, attrKey & \"$1\" & valueString & \"$3\")\n                        End If\n                    Else\n                        '\u5024\u306e\u5909\u66f4\n                        reg.Pattern = \"(>)(.*?)(<)\"\n                        If reg.Test(line) Then\n                            result = GetValue(reg, valueString, line)\n                            line = reg.Replace(line, \"$1\" & valueString & \"$3\")\n                        Else\n                            '\u6b21\u306e\u884c\u306b\u5024\u304c\u3042\u308b\n                            nextline = aryLine(idx + 1)\n                            reg.Pattern = \"(.*?)(\\S.*)\"\n                            If reg.Test(nextline) Then\n                                result = GetValue(reg, valueString, nextline)\n                                '\u8aad\u307f\u8fbc\u3093\u3060\u6b21\u306e\u884c\u3092\u518d\u30bb\u30c3\u30c8\n                                aryLine(idx + 1) = reg.Replace(nextline, \"$1\" & valueString)\n                            End If\n                        End If\n                    End If\n                Else\n                    'Ini\u30d5\u30a1\u30a4\u30eb\u5074\u306e\u5024\u5909\u66f4\n                    reg.Pattern = \"(=\\s*)(.*)\"\n                    If reg.Test(line) Then\n                        result = GetValue(reg, valueString, line)\n                        line = reg.Replace(line, \"$1\" & valueString)\n                    End If\n                End If\n                dic.Item(aryKey(count-1)) = 0\n\n                '\u5909\u66f4\u5bfe\u8c61\u5024\u306b\u5909\u66f4\u3057\u305f\u3089\u51e6\u7406\u7d42\u4e86\n                exitFlag = True\n            End If\n        End If\n\n        '\u8aad\u307f\u8fbc\u3093\u3060\u884c\u3092\u518d\u30bb\u30c3\u30c8\n        aryLine(idx) = line\n    Next\n\n    If exitFlag = True Then\n        If UCase(valueString) = GET_CONFIG Then\n            '\u5024\u3092\u8fd4\u3059\n            WScript.Echo result\n        Else\n            '\u6539\u884c\u3092\u4ed8\u52a0\n            newtxt = Join(aryLine, lfType)\n\n            '\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\n            If param(\"CharSet\") = \"UTF-8\" And param(\"IsBOM\") = False Then \n                'BOM\u7121\u3057\n                stream_pre.Type = adTypeText\n                stream_pre.CharSet = param(\"CharSet\")\n                stream_pre.Open\n                stream_pre.WriteText newtxt\n\n                stream_pre.Position = 0\n                stream_pre.Type = adTypeBinary\n                stream_pre.Position = 3\n                bin = stream_pre.Read()\n                stream_pre.Close()\n\n                stream_w.Type = adTypeBinary\n                stream_w.Open()\n                stream_w.Write(bin)\n                stream_w.SaveToFile pathName, ForWriting\n                stream_w.Close()\n            Else\n                stream_w.Open()\n                stream_w.Charset = param(\"CharSet\")\n                stream_w.WriteText newtxt\n                stream_w.SaveToFile pathName, ForWriting\n                stream_w.Close()\n            End If\n        End If\n    Else\n        WScript.Echo \"\u30ad\u30fc\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"\n        Main = 9\n    End If\n\n    Set dic = Nothing\n    Set reg = Nothing\n\nEnd Function\n\n'------------------------------------------------------------------------\n'\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u7b49\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction GetInfo(pathName, charSet)\n\n    Dim stream, reg, match, matches, bytCode, allLine, line, endLine, lfType, aryLine\n    Dim fso, ext\n\n    GetInfo = False\n\n    '\u521d\u671f\u5024\u30bb\u30c3\u30c8\n    param.Add \"CharSet\", \"UTF-8\"        '\u6587\u5b57\u30b3\u30fc\u30c9\n    param.Add \"IsBOM\", False            'BOM\u6709\u7121\n    param.Add \"FileType\", typeINI       '\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\n    param.Add \"LfType\", \"CrLf\"          '\u6539\u884c\u30b3\u30fc\u30c9\n    param.Add \"IsEndLf\", False          '\u672b\u5c3e\u6539\u884c\u6709\u7121\n\n    '\u62e1\u5f35\u5b50\u3092\u53d6\u5f97\u3059\u308b\n    Set fso = CreateObject(\"Scripting.FileSystemObject\")\n    ext = fso.GetExtensionName(pathName)\n    Set fso = Nothing\n\n    '\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\n    Set stream = CreateObject(\"ADODB.Stream\")\n\n    'BOM\u30c1\u30a7\u30c3\u30af\u7528\u306b\u5148\u982d\u884c\u3092\u8aad\u307f\u8fbc\u3080\n    stream.Type = adTypeBinary\n    stream.Open\n    stream.LoadFromFile pathName\n    bytCode = stream.Read\n    stream.Close\n    Call CheckBOM(bytCode)\n\n    If param(\"IsBOM\") = False Then\n        'Ini\u30d5\u30a1\u30a4\u30eb\u306fSJIS\u3068\u3059\u308b\n        If charSet = \"\" And (LCase(ext) = \"ini\" Or Instr(LCase(pathName),\".ini\") > 1) Then\n            charSet = \"Shift-JIS\"\n        End If\n        param(\"CharSet\") = charSet\n    End If\n\n    '\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u5224\u5b9a\u3067\u8aad\u307f\u8fbc\u307f\n    stream.Type = adTypeText\n    stream.CharSet = \"_autodetect_all\"\n    If charSet <> \"\" Then stream.CharSet = charSet\n    stream.Open\n    stream.LoadFromFile pathName\n    allLine = stream.ReadText(adReadAll)\n    stream.Close\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u5224\u5b9a(100\u6587\u5b57\u3067\u5224\u65ad)\n    line = Left(allLine, 100)\n    If Instr(line, vbCrLf) <> 0 Then\n        lfType = \"CrLf\"\n    ElseIf Instr(line, vbLf) <> 0 Then\n        lfType = \"Lf\"\n    ElseIf Instr(line, vbCr) <> 0 Then\n        lfType = \"Cr\"\n    End If\n    param(\"LfType\") = lfType\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u3067\u5206\u5272\n    Select Case lfType\n        Case \"CrLf\": lfType = vbCrLf\n        Case \"Lf\": lfType = vbLf\n        Case \"Cr\": lfType = vbCr\n    End Select\n    aryLine = Split(allLine, lfType)\n\n    '\u5148\u982d\u884c\u306b\"< >\"\u304c\u3042\u308c\u3070\u3001XML\u3068\u3057\u3066\u6271\u3046\n    Set reg = CreateObject(\"VBScript.RegExp\")\n    reg.Pattern = \"<.*?>\"\n    If reg.Test(aryLine(0)) Then\n        param(\"FileType\") = typeXML\n        If param(\"IsBOM\") = False Then\n            'encoding\u306e\u5024\u3092\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u30bb\u30c3\u30c8\n            reg.Pattern = \"encoding.*?=['\"\"](.*?)['\"\"]\"\n            Set matches = reg.Execute(aryLine(0))\n            For Each match In matches\n                param(\"CharSet\") = UCase(match.SubMatches(0))\n            Next\n            Set matches = Nothing\n        End If\n    End If\n    Set reg = Nothing\n\n    '\u6700\u7d42\u884c\u306e\u6539\u884c\u30b3\u30fc\u30c9\u6709\u7121\n    If aryLine(UBound(aryLine)) = \"\" Then\n        param(\"IsEndLf\") = True\n    End If\n\n    GetInfo = True\n\nEnd Function\n\n'------------------------------------------------------------------------\n'BOM\u30c1\u30a7\u30c3\u30af\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction CheckBOM(str)\n    Dim bytes(2), result\n\n    bytes(0) = AscB(MidB(str, 1, 1))\n    bytes(1) = AscB(MidB(str, 2, 1))\n    bytes(2) = AscB(MidB(str, 3, 1))\n\n    If LenB(str) > 1 Then\n        If bytes(0) >= &HFE And bytes(1) >= &HFE Then\n            result = \"unicode\"\n            If bytes(0) = &HFF And bytes(1) = &HFE Then\n                result = \"unicodeFFFE\"\n            End If\n        Else If bytes(0) = &HEF And bytes(1) = &HBB And bytes(2) = &HBF Then\n                result = \"UTF-8\"\n            End If\n        End If\n    End If\n\n    If result <> \"\" Then\n        param(\"CharSet\") = result\n        param(\"IsBOM\") = True\n    End If\n\n    CheckBOM = result\n\nEnd Function\n\n'------------------------------------------------------------------------\n'\u73fe\u5728\u306e\u8a2d\u5b9a\u5024\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction GetValue(reg, valueString, target)\n    Dim matches, match\n\n    GetValue = \"\"\n    If UCase(valueString) = GET_CONFIG Then\n        Set matches = reg.Execute(target)\n        For Each match In matches\n            GetValue = match.SubMatches(1)\n            Exit For\n        Next\n    End If\n\nEnd Function\n```\n\n# \u30e9\u30a4\u30bb\u30f3\u30b9\u3063\u307d\u3044\u3053\u3068\n* \u30b3\u30fc\u30c9\u6539\u5909\u3084\u914d\u5e03\u306f\u81ea\u7531\u3067\u3059\u3002\n* \u3053\u306e\u30c4\u30fc\u30eb\u306b\u3088\u308b\u7fa9\u52d9\uff0f\u8cac\u4efb\u3092\u4f55\u3089\u8ca0\u3044\u307e\u305b\u3093\u3002\n\n# \u6700\u5f8c\u306b\n\u4ed5\u7d44\u307f\u3068\u3057\u3066\u306f\u3001\u5909\u66f4\u30ad\u30fc\u3092\"/\"\u533a\u5207\u308a\u3067\u5206\u5272\u3057\u3066\u9023\u60f3\u914d\u5217\u306e\u30ad\u30fc\u3068\u3057\u5024\u3092\u300c0\u300d\u3067\u30bb\u30c3\u30c8\u3001\u30ad\u30fc\u304c\u898b\u3064\u304b\u308c\u3070\u300c1\u300d\u306b\u5909\u66f4\u3057\u3066\u3001\u5168\u3066\u306e\u30ad\u30fc\u306e\u5024\u304c\u300c1\u300d\u306b\u306a\u308c\u3070\u5024\u3092\u5909\u66f4\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u3057\u305f\u5185\u5bb9\u3068\u3057\u3066\u306f\u3001\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\n* \u7279\u6b8a\u6587\u5b57\u300c\"\u300d\u3084\u300c%\u300d\u306a\u3069\u306e\u5bfe\u5fdc\n* \u6587\u5b57\u30b3\u30fc\u30c9\u95a2\u9023\n* \u6539\u884c\u7121\u3057XML\u30d5\u30a1\u30a4\u30eb\u306e\u5bfe\u5fdc\n* \u30ad\u30fc\u3068\u5024\u306e\u9593\u306e\u7a7a\u767d\u3084\u30bf\u30b0\u9593\u306e\u6539\u884c\u5bfe\u5fdc\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3082\u624b\u4f5c\u696d\u3067\u4fee\u6b63\u3057\u3066\u3082\u305d\u3093\u306a\u624b\u9593\u3067\u306f\u306a\u3044\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u3046\u3044\u3046\u30c4\u30fc\u30eb\u304c\u3042\u308c\u3070\u3001\u30d0\u30c3\u30c1\u3092\u4f7f\u3063\u3066\u5024\u3092\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u4f5c\u696d\u3082\u7c21\u5358\u306b\u306a\u308a\u30df\u30b9\u3082\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n", "tags": ["WSH", "VBScript", "XML", "ini"]}