{"context": "\nscaffold\u304c\u306a\u3044\n\u7a4d\u307f\u4e2d, \u3068\u308a\u3042\u3048\u305a\u6700\u4f4e\u9650\u306f\u5b8c\u4e86\n\n\n\u53c2\u8003\n\nhttps://docs.djangoproject.com/en/1.10/\nhttps://docs.djangoproject.com/en/1.10/intro/\n\n\ninstall\n\npip_install_django.sh\npip install django\n\n\n\nproject\n\u30a2\u30d7\u30ea\u3058\u3083\u306a\u304f\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\ndjango_admin_startproject.sh\ndjango-admin startproject en_jp_dict\n\ncd en_jp_dict\nls\nmanage.py en_jp_dict\n\n\n\nmigrate\n\u57fa\u672c\u3068\u306a\u308b\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n\nmanage_py_migrate.sh\npython manage.py migrate\n\nsqlite3 db.sqlite3\n\nsqlite> .tables\nsqlite> .schema\n\n\n\n\u7ba1\u7406\u30e6\u30fc\u30b6\u3068\u7ba1\u7406\u753b\u9762\n\nmanage_py_createsuperuser.sh\npython manage.py createsuperuser\n# mail\u7701\u7565\u5316\n\n\n\nWebServer\n\n\u30b5\u30fc\u30d0\u30fc\u7acb\u3061\u4e0a\u3052\u3066\u78ba\u8a8d\n\u3064\u3044\u3067\u306b /admin \u3082\u78ba\u8a8d\n\n\nrunserver.sh\npython manage.py runserver\n\nStarting development server at http://127.0.0.1:8000/\n\n\n\nresponse.txt\nIt worked!\nCongratulations on your first Django-powered page.\n\nOf course, you haven't actually done any work yet. Next, start your first app by running python manage.py startapp [app_label].\nYou're seeing this message because you have DEBUG = True in your Django settings file and you haven't configured any URLs. Get to work!\n\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\n\nproject_files.sh\ncd en_jp_dict\nls\n__init__.py __pycache__ settings.py urls.py wsgi.py\n\n\n\ninit\n\n\n\u4f55\u3082\u66f8\u3044\u3066\u306a\u3044\n\n\nsettings\n\n\n\u5404\u7a2e\u8a2d\u5b9a\nINSTALLED_APPS\n\n\n\u7ba1\u7406\u6a5f\u80fd\u3084session\u306a\u3069\u4fbf\u5229\u305d\u3046\u306a\u540d\u524d\u3082\u306e\u304c\u5b58\u5728\u3059\u308b\n\n\nMIDDLEWARE\n\n\nhook ?\ncontrib\u3082\u3042\u308b\n\n\nDATABASES\n\n\nDB\u8a2d\u5b9a/py\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\u74b0\u5883\u5909\u6570\u306a\u3069\u304b\u3089\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\u304c\u3088\u3055\u305d\u3046\n\n\nrunserver\u306b\u51fa\u3066\u304d\u305f\u306e\u3067\u898b\u59cb\u3081\u305f\n\n\nurls\n\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\n\u6b63\u898f\u8868\u73fe\u66f8\u3044\u3066\u3042\u3063\u305f\nid\u306a\u3069\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u306a\u304b\u3063\u305f\n\n\nwsgi\n\n\nhttps://www.python.org/dev/peps/pep-0333/\nWeb Server Gateway Interface\nWeb\u30a2\u30d7\u30ea\u306fPHP\u3067\u3057\u304b\u4f5c\u3063\u305f\u3053\u3068\u7121\u3044\nRack\u306a\u3069\u306e\u3053\u3053\u3089\u8fba\u308f\u304b\u3063\u3066\u306a\u3044\u2026\n\u6982\u8981\u306fWAF\u3068WebServer\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\n\u3053\u308c\u306b\u6cbf\u3063\u3066\u3044\u308c\u3070WAF WebServer\u3092\u5165\u308c\u66ff\u3048\u3089\u308c\u308b\n\n\n\n\njapanese_settings.py\n# settings.py\u306e\u65e5\u672c\u306b\u95a2\u308f\u308a\u305d\u3046\u306a\u90e8\u5206\u3092\u5909\u66f4\u3057\u3066\u304a\u304f\nLANGUAGE_CODE = 'ja'\nTIME_ZOME = Asia/Tokyo\n\n\nSECRET_KEY\u306fenviron\u3067\u56de\u907f\u3057\u305f(http://qiita.com/ksomemo/items/ea887b527182500991cb)\n\nhttp://stackoverflow.com/questions/13866926/python-pytz-list-of-timezones\nUSE_TZ\u306f\u305d\u306e\u307e\u307e\n\u5909\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u308b\u306e\u3042\u308b\u3051\u3069\u3001\u3069\u3046\u5909\u308f\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u305d\u306e\u307e\u307e\n\n\n\u30a2\u30d7\u30ea\u4f5c\u6210\n\nmanage_py_startapp.sh\ncd ..\npython manage.py startapp dictionary\n\ncd dictionary\nls\n__init__.py admin.py migrations models.py tests.py views.py\n\n\n\ninit\n\nmigrations/_init_.py\n\n\u4f55\u3082\u66f8\u3044\u3066\u306a\u3044\n\n\nadmin\nmodels\ntests\nviews\n\n\napp_templates.py\nfrom django.contrib import admin\n# Register your models here.\n\nfrom django.db import models\n# Create your models here.\n\nfrom django.test import TestCase\n# Create your tests here.\n\nfrom django.shortcuts import render\n# Create your views here.\n\n\n\n\u3053\u3053\u304b\u3089\u3001\u4e0a\u8a18\u306ehere\u90e8\u5206\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\u3081\u3093\u3069\u3046\u3060\u306a\u30fc\u3068\u601d\u3063\u3066Scaffold\u8abf\u3079\u305f\u3089\u53e4\u304f\u3066\u30e1\u30f3\u30c6\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\n\u7d20\u76f4\u306b\u9811\u5f35\u308d\u3046\n\n\napp Inex view\n\napp\u306eviews.py \u306b\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\n\n\nrequest\u5f15\u6570\u3092\u6301\u3064\nhttp.Response\u3092\u8fd4\u3059(\u6587\u5b57\u5217\u3067body\u3092\u6e21\u3057\u305f)\n\n\napp\u306burls.py \u3092\u4f5c\u6210\n\n\n\u660e\u793a\u7684\u306brouting\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\nurlpatterns\u3068\u3044\u3046list\u306burl\u5b9a\u7fa9\u3092\u8ffd\u52a0\u3059\u308b\nregex, callable?, url name\n\n\nsite\u306eurls.py \u306bapp\u306eurls.py\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u767b\u9332\u3059\u308b\n\n\n\u3053\u3061\u3089\u3082\u660e\u793a\u3059\u308b\n\n\n\n\ncreate model\n\napp\u306emodels.py\u306bclass\u3092\u5b9a\u7fa9\u3059\u308b\n\n\n\nmodels.Model\u306esubtype\nfield\u306f, models.XxxxField\n\ncolumn\u3067\u306a\u3044\u7406\u7531\u306fDB\u306b\u9650\u3089\u306a\u3044model\u3067\u3042\u308b\u305f\u3081\nform\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\n\n\nWord\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057Char,Int,DateTime\u3092\u5229\u7528\u3057\u305f\n\n\nform\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067DB\u306e\u578b\u306b\u9650\u3089\u306a\u3044\nFile/Image, IP Address/UUID\u306a\u3069\n\u8f9e\u66f8\u3068\u3057\u3066\u5fc5\u8981\u306a word, japanese, search_count, created_at, updated_at \u3092\u4f5c\u6210\u3057\u305f\n\u691c\u7d22\u5c65\u6b74table\u3092\u4f5c\u308c\u3070\u3088\u3044\u306e\u3060\u3051\u3069\u3001\u3081\u3093\u3069\u3046\u306a\u306e\u3067\uff11\u3064\u306b\u3057\u3066\u3042\u308b\n\n\n\u3044\u308d\u3044\u308d\u306aoption\u304c\u3042\u308b\n\n\nprimary_key: word\ndefault\n\n\nimmutable value or a callable object\n\n\nauto_now/auto_now_add\n\n\ndatetime field\n\u4e0a\u8a18\u3067\u73fe\u5728\u65e5\u6642(django\u306etimezone.now)\u304c\u4f7f\u308f\u308c\u308b\nhttps://docs.djangoproject.com/ja/1.10/ref/models/fields/#datefield\n\u306a\u306e\u3067\u3001default=datetime.datetime.now \u3068\u306f\u9055\u3044\u305d\u3046\n\n\nunique: \u4eca\u56de\u4f7f\u3063\u3066\u3044\u306a\u3044\ndb_index: \u6642\u523b\u306b\u4f7f\u3063\u305f\nnull/blank: null\u8a31\u5bb9/form\u3067\u306eblank\u8a31\u5bb9, japanese\u306b\u8a66\u3057\u3066\u307f\u305f\neditable: form\u3067\u306e\u7de8\u96c6\u62d2\u5426, xxx_at\u306b\u8a66\u3057\u3066\u307f\u305f\n\n\n\n\napp\u306emodel\u3092\u5229\u7528\u3067\u304d\u308b\u6e96\u5099\n\n\n\nsettings.py \u306eINSTALLED_APPS\u306b\u8ffd\u52a0\u3059\u308b\n\napp/apps.py \u306b AppConfig class\u304c\u3042\u308b\u306e\u3067\u305d\u306e\u540d\u524d\u3068\u898f\u5247\u306b\u5f93\u3046\n\n\nmodel\u306e\u8ffd\u52a0\u3092Migrations\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059\n\n\npython manage.py makemigrations app\napp/migrations/0001_initial.py:\n\n\nCreate model Word\n\n\nmigration class\u306boperation\u304c\u305a\u3089\u305a\u3089\u3068\u66f8\u304b\u308c\u3066\u3044\u305f\n\u4eca\u56de\u306fCreateModel, model\u306e\u5185\u5bb9\u3068\u307b\u307c\u540c\u3058\n\npython manage.py sqlmigrate app 0001 \u3067SQL\u3068\u3057\u3066\u78ba\u8a8d\u3067\u304d\u308b\n\n\nmigration\u3059\u308b(\u524d\u56de\u3068\u540c\u3058\u30b3\u30de\u30f3\u30c9)\n\n\nsqlite\u306btable\u4f5c\u3089\u308c\u3066\u3044\u305f\n\u8a73\u3057\u304f\u306f\u4e0b\u8a18\n\n\nhttps://docs.djangoproject.com/en/1.10/topics/migrations/\n\n\n\n\nmigration\u306e\u5c65\u6b74\n\n\n\npython manage.py showmigrations \u3067migration\u4e00\u89a7\u3092\u898b\u308b\u3068X mark\u304c\u3064\u3044\u3066\u3044\u308b\ndjango\u306emeta table\u306bmigration\u306e\u5c65\u6b74\u304c\u6b8b\u3063\u3066\u3044\u308b\ndelete\u3057\u3066\u4e00\u89a7\u3092\u307f\u308b\u3068X mark\u304c\u6d88\u3048\u3066\u3044\u308b\nmigrate\u3059\u308b\u3068table\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n\n\nmigrate --fake \u3092\u3057\u3066\u5c65\u6b74\u3060\u3051\u4f5c\u6210\u3059\u308b\n\uff40--fake-initial\uff40 \u306e\u8aac\u660e\u3060\u3051\u3057\u304b\u306a\u304b\u3063\u305f\n\u672c\u6765\u306e\u7528\u9014\u306f\u3001\u3059\u3067\u306bDB\u5b58\u5728\u3059\u308b\u3051\u3069,django\u3078\u306e\u79fb\u884c\u306a\u3069\u306b\u4f7f\u3046\u611f\u3058\u304c\u3059\u308b\n\n\n\n\n\n\nsqlite3_run_sql_from_stdin.sh\necho \"select * from django_migrations\" | \\\nsqlite3 db.sqlite3 -column -cmd \".headers on\"\n\n\n\nadd model and change model\n\nWord\u306b\u54c1\u8a5e(Parts of Speech)\u3092\u8ffd\u52a0\n\n\npos\u3068\u3057\u3066choices\u3092\u5229\u7528\nform selector\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306e\u6301\u3061\u65b9 list[tuple(value, name), ...]\n\n\n\n\u54c1\u8a5e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4e0a\u8a18\u306f\u5916\u90e8\u30ad\u30fc\u3068\u3059\u308b\n\n\nHINT: ForeignKey(unique=True) is usually better served by a OneToOneField.\nhttps://docs.djangoproject.com/ja/1.10/topics/db/models/#verbose-field-names\nForeignKey for Many-to-one relationships\n\n\n\u30de\u30b9\u30bf\u3068\u7d10\u4ed8\u3051\u305f\u660e\u793a\n\n\n\n\nmakemigration\n\n\nOneToOne\u306b\u4f7f\u3063\u305ffield\u304cnon-nullable\u306a\u306e\u306bdefault\u5024\u304c\u306a\u3044\u306e\u3067\u8b66\u544a\n\u7d9a\u3051\u308b\u304b\u3084\u3081\u308b\u304b\u306e\u9078\u629e, \u89aa\u5207\n\u7d9a\u3051\u305f\u3089default\u5024\u306e\u8a2d\u5b9a\u3092\u6c42\u3081\u3089\u308c\u305f\n\n\n1\u56de\u76ee:1, 2\u56de\u76ee:None\u3092\u8a2d\u5b9a(\u4e21\u65b9\u6210\u529f)\nmigration file\u306b\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\nmodel file\u306b\u306f\u53cd\u6620\u3055\u308c\u3066\u3044\u306a\u3044\n\n\n0002_auto_yyyymmdd_HHMM.py\n\n\nsqlmigrate\u306e\u5185\u5bb9\n\n\n\u5909\u66f4\u3042\u308a\u30c6\u30fc\u30d6\u30eb\u306frename\n\n\n\u65b0\u5b9a\u7fa9\u3067\u4f5c\u308a\u76f4\u3057\n\n\n(sqlite3)CREATE TABLE \u5b9a\u7fa9 SELECT *, (\u65b0\u5b9a\u7fa9\u30ab\u30e9\u30e0:makemigration \u3067\u6c7a\u3081\u305fdefault\u5024)\n\n\nrename\u3057\u305ftable\u3092drop\n\n\nindex\u8cbc\u308a\u76f4\u3057\n\n\n\u3053\u308c\u306f\u4f7f\u3044\u7269\u306b\u306a\u3089\u306a\u3044\u306e\u3067\u306f\u2026\n\n\n\n\n\n\ndjango shell\n\nipython\u3067\u8d77\u52d5\u3057\u305f\ninstall\u3055\u308c\u3066\u306a\u3044\u5834\u5408, default python repl\n\n\ninsert to \u54c1\u8a5emaster\n\nmodel_in_django_shell.py\nfrom dictionary.models import PartOfSpeech, Word\n\n# SQLAlchemy\u3068\u4f3c\u305f\u611f\u3058, choice\u306f\u540d\u524d\u3092\u5f15\u3051\u308b\np_list=[PartOfSpeech(pos=i) for i in range(1, len(PartOfSpeech.CHOICES)+1)]\n[p.save() for p in p_list]\n[(p.pos, p.get_pos_display()), for p in PartOfSpeech.objects.all()]\nw = Word(word=\"word test\", japanese=\"\u30c6\u30b9\u30c8\",\n         parts_of_speech=PartOfSpeech.objects.get(pos=1))\n# choice\u306fmodel instance\u3092\u6c42\u3081\u3089\u308c\u308b, xxx_at are empty\nw.save()\n# xxx_at are not empty\nw.word = \"test\"\nw.save()\n# updated_at is updated\n\n\n\n\u7ba1\u7406\u753b\u9762\u3067model\u64cd\u4f5c\n\n\napp/admin.py \u306bmodel\u3092\u767b\u9332\nuser, group\u4ee5\u5916\u306b\u767b\u9332\u3057\u305f\u30e2\u30c7\u30eb\u304c\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\nmodel class\u540d\u3057\u304b\u5206\u304b\u3089\u306a\u304f\u3066\u4e00\u89a7\u306e\u610f\u5473\u304c\u306a\u3044\u2026\n\u4e0b\u8a18\u3067\u5bfe\u5fdc\u3057\u305f\u3051\u3069\u3001best practice\u304c\u5206\u304b\u3089\u306a\u3044\n\n\nto_string_model.py\n    def __str__(self):\n        values = [str(v) for v in [self.pos, self.get_pos_display()]]\n        return \"({0})\".format(\", \".join(values))\n\n\n- scaffold\u304c\u306a\u3044\n- \u7a4d\u307f\u4e2d, \u3068\u308a\u3042\u3048\u305a\u6700\u4f4e\u9650\u306f\u5b8c\u4e86\n\n## \u53c2\u8003\n- https://docs.djangoproject.com/en/1.10/\n- https://docs.djangoproject.com/en/1.10/intro/\n\n## install\n```bash:pip_install_django.sh\npip install django\n```\n\n## project\n\u30a2\u30d7\u30ea\u3058\u3083\u306a\u304f\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\n```bash:django_admin_startproject.sh\ndjango-admin startproject en_jp_dict\n\ncd en_jp_dict\nls\nmanage.py en_jp_dict\n```\n\n## migrate\n\u57fa\u672c\u3068\u306a\u308b\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n\n```bash:manage_py_migrate.sh\npython manage.py migrate\n\nsqlite3 db.sqlite3\n\nsqlite> .tables\nsqlite> .schema\n```\n\n## \u7ba1\u7406\u30e6\u30fc\u30b6\u3068\u7ba1\u7406\u753b\u9762\n```bash:manage_py_createsuperuser.sh\npython manage.py createsuperuser\n# mail\u7701\u7565\u5316\n```\n\n## WebServer\n- \u30b5\u30fc\u30d0\u30fc\u7acb\u3061\u4e0a\u3052\u3066\u78ba\u8a8d\n- \u3064\u3044\u3067\u306b /admin \u3082\u78ba\u8a8d\n\n```bash:runserver.sh\npython manage.py runserver\n\nStarting development server at http://127.0.0.1:8000/\n```\n\n```text:response.txt\nIt worked!\nCongratulations on your first Django-powered page.\n\nOf course, you haven't actually done any work yet. Next, start your first app by running python manage.py startapp [app_label].\nYou're seeing this message because you have DEBUG = True in your Django settings file and you haven't configured any URLs. Get to work!\n```\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\n```bash:project_files.sh\ncd en_jp_dict\nls\n__init__.py __pycache__ settings.py urls.py wsgi.py\n```\n\n- init\n  - \u4f55\u3082\u66f8\u3044\u3066\u306a\u3044\n- settings\n  - \u5404\u7a2e\u8a2d\u5b9a\n    - INSTALLED_APPS\n        - \u7ba1\u7406\u6a5f\u80fd\u3084session\u306a\u3069\u4fbf\u5229\u305d\u3046\u306a\u540d\u524d\u3082\u306e\u304c\u5b58\u5728\u3059\u308b\n    - MIDDLEWARE\n        - hook ?\n        - contrib\u3082\u3042\u308b\n    - DATABASES\n        - DB\u8a2d\u5b9a/py\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\u74b0\u5883\u5909\u6570\u306a\u3069\u304b\u3089\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\u304c\u3088\u3055\u305d\u3046\n  - runserver\u306b\u51fa\u3066\u304d\u305f\u306e\u3067\u898b\u59cb\u3081\u305f\n- urls\n  - \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\n  - \u6b63\u898f\u8868\u73fe\u66f8\u3044\u3066\u3042\u3063\u305f\n  - id\u306a\u3069\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u306a\u304b\u3063\u305f\n- wsgi\n  - https://www.python.org/dev/peps/pep-0333/\n  - Web Server Gateway Interface\n    - Web\u30a2\u30d7\u30ea\u306fPHP\u3067\u3057\u304b\u4f5c\u3063\u305f\u3053\u3068\u7121\u3044\n    - Rack\u306a\u3069\u306e\u3053\u3053\u3089\u8fba\u308f\u304b\u3063\u3066\u306a\u3044\u2026\n    - \u6982\u8981\u306fWAF\u3068WebServer\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\n    - \u3053\u308c\u306b\u6cbf\u3063\u3066\u3044\u308c\u3070WAF WebServer\u3092\u5165\u308c\u66ff\u3048\u3089\u308c\u308b\n\n```py3:japanese_settings.py\n# settings.py\u306e\u65e5\u672c\u306b\u95a2\u308f\u308a\u305d\u3046\u306a\u90e8\u5206\u3092\u5909\u66f4\u3057\u3066\u304a\u304f\nLANGUAGE_CODE = 'ja'\nTIME_ZOME = Asia/Tokyo\n```\n\nSECRET_KEY\u306fenviron\u3067\u56de\u907f\u3057\u305f(http://qiita.com/ksomemo/items/ea887b527182500991cb)\n\n- http://stackoverflow.com/questions/13866926/python-pytz-list-of-timezones\n- USE_TZ\u306f\u305d\u306e\u307e\u307e\n- \u5909\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u308b\u306e\u3042\u308b\u3051\u3069\u3001\u3069\u3046\u5909\u308f\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u305d\u306e\u307e\u307e\n\n## \u30a2\u30d7\u30ea\u4f5c\u6210\n```bash:manage_py_startapp.sh\ncd ..\npython manage.py startapp dictionary\n\ncd dictionary\nls\n__init__.py admin.py migrations models.py tests.py views.py\n```\n\n- init\n- migrations/\\__init__.py\n  - \u4f55\u3082\u66f8\u3044\u3066\u306a\u3044\n\n- admin\n- models\n- tests\n- views\n\n```py3:app_templates.py\nfrom django.contrib import admin\n# Register your models here.\n\nfrom django.db import models\n# Create your models here.\n\nfrom django.test import TestCase\n# Create your tests here.\n\nfrom django.shortcuts import render\n# Create your views here.\n```\n\n- \u3053\u3053\u304b\u3089\u3001\u4e0a\u8a18\u306ehere\u90e8\u5206\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n- \u3081\u3093\u3069\u3046\u3060\u306a\u30fc\u3068\u601d\u3063\u3066Scaffold\u8abf\u3079\u305f\u3089\u53e4\u304f\u3066\u30e1\u30f3\u30c6\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\n- \u7d20\u76f4\u306b\u9811\u5f35\u308d\u3046\n\n## app Inex view\n- app\u306e`views.py` \u306b\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\n    - request\u5f15\u6570\u3092\u6301\u3064\n    - http.Response\u3092\u8fd4\u3059(\u6587\u5b57\u5217\u3067body\u3092\u6e21\u3057\u305f)\n- app\u306b`urls.py` \u3092\u4f5c\u6210\n    - \u660e\u793a\u7684\u306brouting\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n    - urlpatterns\u3068\u3044\u3046list\u306burl\u5b9a\u7fa9\u3092\u8ffd\u52a0\u3059\u308b\n    - regex, callable?, url name\n- site\u306e`urls.py` \u306bapp\u306e`urls.py`\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u767b\u9332\u3059\u308b\n    - \u3053\u3061\u3089\u3082\u660e\u793a\u3059\u308b\n\n## create model\n- app\u306e`models.py`\u306bclass\u3092\u5b9a\u7fa9\u3059\u308b\n    - `models.Model`\u306esubtype\n    - field\u306f, `models.XxxxField`\n        - column\u3067\u306a\u3044\u7406\u7531\u306fDB\u306b\u9650\u3089\u306a\u3044model\u3067\u3042\u308b\u305f\u3081\n        - form\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\n    - Word\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057Char,Int,DateTime\u3092\u5229\u7528\u3057\u305f\n        - form\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067DB\u306e\u578b\u306b\u9650\u3089\u306a\u3044\n        - File/Image, IP Address/UUID\u306a\u3069\n        - \u8f9e\u66f8\u3068\u3057\u3066\u5fc5\u8981\u306a word, japanese, search_count, created_at, updated_at \u3092\u4f5c\u6210\u3057\u305f\n        - \u691c\u7d22\u5c65\u6b74table\u3092\u4f5c\u308c\u3070\u3088\u3044\u306e\u3060\u3051\u3069\u3001\u3081\u3093\u3069\u3046\u306a\u306e\u3067\uff11\u3064\u306b\u3057\u3066\u3042\u308b\n    - \u3044\u308d\u3044\u308d\u306aoption\u304c\u3042\u308b\n        - primary_key: word\n        - default\n            - immutable value or a callable object\n        - auto_now/auto_now_add\n            - datetime field\n            - \u4e0a\u8a18\u3067\u73fe\u5728\u65e5\u6642(django\u306etimezone.now)\u304c\u4f7f\u308f\u308c\u308b\n            - https://docs.djangoproject.com/ja/1.10/ref/models/fields/#datefield\n            - \u306a\u306e\u3067\u3001`default=datetime.datetime.now` \u3068\u306f\u9055\u3044\u305d\u3046\n        - unique: \u4eca\u56de\u4f7f\u3063\u3066\u3044\u306a\u3044\n        - db_index: \u6642\u523b\u306b\u4f7f\u3063\u305f\n        - null/blank: null\u8a31\u5bb9/form\u3067\u306eblank\u8a31\u5bb9, japanese\u306b\u8a66\u3057\u3066\u307f\u305f\n        - editable: form\u3067\u306e\u7de8\u96c6\u62d2\u5426, xxx_at\u306b\u8a66\u3057\u3066\u307f\u305f\n- app\u306emodel\u3092\u5229\u7528\u3067\u304d\u308b\u6e96\u5099\n    - `settings.py` \u306eINSTALLED_APPS\u306b\u8ffd\u52a0\u3059\u308b\n    - `app/apps.py` \u306b `AppConfig` class\u304c\u3042\u308b\u306e\u3067\u305d\u306e\u540d\u524d\u3068\u898f\u5247\u306b\u5f93\u3046\n- model\u306e\u8ffd\u52a0\u3092Migrations\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059\n    - `python manage.py makemigrations app`\n    - app/migrations/0001_initial.py:\n        - Create model Word\n    - migration class\u306boperation\u304c\u305a\u3089\u305a\u3089\u3068\u66f8\u304b\u308c\u3066\u3044\u305f\n    - \u4eca\u56de\u306fCreateModel, model\u306e\u5185\u5bb9\u3068\u307b\u307c\u540c\u3058\n    - `python manage.py sqlmigrate app 0001` \u3067SQL\u3068\u3057\u3066\u78ba\u8a8d\u3067\u304d\u308b\n- migration\u3059\u308b(\u524d\u56de\u3068\u540c\u3058\u30b3\u30de\u30f3\u30c9)\n    - sqlite\u306btable\u4f5c\u3089\u308c\u3066\u3044\u305f\n    - \u8a73\u3057\u304f\u306f\u4e0b\u8a18\n        - https://docs.djangoproject.com/en/1.10/topics/migrations/\n- migration\u306e\u5c65\u6b74\n    - `python manage.py showmigrations` \u3067migration\u4e00\u89a7\u3092\u898b\u308b\u3068X mark\u304c\u3064\u3044\u3066\u3044\u308b\n    - django\u306emeta table\u306bmigration\u306e\u5c65\u6b74\u304c\u6b8b\u3063\u3066\u3044\u308b\n    - delete\u3057\u3066\u4e00\u89a7\u3092\u307f\u308b\u3068X mark\u304c\u6d88\u3048\u3066\u3044\u308b\n    - migrate\u3059\u308b\u3068table\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\n        - `migrate --fake` \u3092\u3057\u3066\u5c65\u6b74\u3060\u3051\u4f5c\u6210\u3059\u308b\n        - \uff40--fake-initial\uff40 \u306e\u8aac\u660e\u3060\u3051\u3057\u304b\u306a\u304b\u3063\u305f\n        - \u672c\u6765\u306e\u7528\u9014\u306f\u3001\u3059\u3067\u306bDB\u5b58\u5728\u3059\u308b\u3051\u3069,django\u3078\u306e\u79fb\u884c\u306a\u3069\u306b\u4f7f\u3046\u611f\u3058\u304c\u3059\u308b\n\n```bash:sqlite3_run_sql_from_stdin.sh\necho \"select * from django_migrations\" | \\\nsqlite3 db.sqlite3 -column -cmd \".headers on\"\n```\n\n### add model and change model\n- Word\u306b\u54c1\u8a5e(Parts of Speech)\u3092\u8ffd\u52a0\n    - pos\u3068\u3057\u3066choices\u3092\u5229\u7528\n    - form selector\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306e\u6301\u3061\u65b9 `list[tuple(value, name), ...]`\n- \u54c1\u8a5e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4e0a\u8a18\u306f\u5916\u90e8\u30ad\u30fc\u3068\u3059\u308b\n    - `HINT: ForeignKey(unique=True) is usually better served by a OneToOneField.`\n    - https://docs.djangoproject.com/ja/1.10/topics/db/models/#verbose-field-names\n    - ForeignKey for Many-to-one relationships\n        - \u30de\u30b9\u30bf\u3068\u7d10\u4ed8\u3051\u305f\u660e\u793a\n- makemigration\n    - OneToOne\u306b\u4f7f\u3063\u305ffield\u304cnon-nullable\u306a\u306e\u306bdefault\u5024\u304c\u306a\u3044\u306e\u3067\u8b66\u544a\n    - \u7d9a\u3051\u308b\u304b\u3084\u3081\u308b\u304b\u306e\u9078\u629e, \u89aa\u5207\n    - \u7d9a\u3051\u305f\u3089default\u5024\u306e\u8a2d\u5b9a\u3092\u6c42\u3081\u3089\u308c\u305f\n        - 1\u56de\u76ee:1, 2\u56de\u76ee:None\u3092\u8a2d\u5b9a(\u4e21\u65b9\u6210\u529f)\n        - migration file\u306b\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\n        - model file\u306b\u306f\u53cd\u6620\u3055\u308c\u3066\u3044\u306a\u3044\n    - `0002_auto_yyyymmdd_HHMM.py`\n- sqlmigrate\u306e\u5185\u5bb9\n    - \u5909\u66f4\u3042\u308a\u30c6\u30fc\u30d6\u30eb\u306frename\n        - \u65b0\u5b9a\u7fa9\u3067\u4f5c\u308a\u76f4\u3057\n            - `(sqlite3)CREATE TABLE \u5b9a\u7fa9 SELECT *, (\u65b0\u5b9a\u7fa9\u30ab\u30e9\u30e0:makemigration \u3067\u6c7a\u3081\u305fdefault\u5024)`\n        - rename\u3057\u305ftable\u3092drop\n    - index\u8cbc\u308a\u76f4\u3057\n        - \u3053\u308c\u306f\u4f7f\u3044\u7269\u306b\u306a\u3089\u306a\u3044\u306e\u3067\u306f\u2026\n\n## django shell\n- ipython\u3067\u8d77\u52d5\u3057\u305f\n- install\u3055\u308c\u3066\u306a\u3044\u5834\u5408, default python repl\n\n### insert to \u54c1\u8a5emaster \n```py3:model_in_django_shell.py \nfrom dictionary.models import PartOfSpeech, Word\n\n# SQLAlchemy\u3068\u4f3c\u305f\u611f\u3058, choice\u306f\u540d\u524d\u3092\u5f15\u3051\u308b\np_list=[PartOfSpeech(pos=i) for i in range(1, len(PartOfSpeech.CHOICES)+1)]\n[p.save() for p in p_list]\n[(p.pos, p.get_pos_display()), for p in PartOfSpeech.objects.all()]\nw = Word(word=\"word test\", japanese=\"\u30c6\u30b9\u30c8\",\n         parts_of_speech=PartOfSpeech.objects.get(pos=1))\n# choice\u306fmodel instance\u3092\u6c42\u3081\u3089\u308c\u308b, xxx_at are empty\nw.save()\n# xxx_at are not empty\nw.word = \"test\"\nw.save()\n# updated_at is updated\n```\n\n## \u7ba1\u7406\u753b\u9762\u3067model\u64cd\u4f5c\n- `app/admin.py` \u306bmodel\u3092\u767b\u9332\n- user, group\u4ee5\u5916\u306b\u767b\u9332\u3057\u305f\u30e2\u30c7\u30eb\u304c\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n- model class\u540d\u3057\u304b\u5206\u304b\u3089\u306a\u304f\u3066\u4e00\u89a7\u306e\u610f\u5473\u304c\u306a\u3044\u2026\n- \u4e0b\u8a18\u3067\u5bfe\u5fdc\u3057\u305f\u3051\u3069\u3001best practice\u304c\u5206\u304b\u3089\u306a\u3044\n\n```py3:to_string_model.py\n    def __str__(self):\n        values = [str(v) for v in [self.pos, self.get_pos_display()]]\n        return \"({0})\".format(\", \".join(values))\n```\n", "tags": ["memo"]}