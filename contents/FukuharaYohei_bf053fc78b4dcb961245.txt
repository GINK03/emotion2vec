{"context": "\n\n\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\nS3\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067Slack\u306b\u901a\u77e5\u3059\u308b\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u3060\u3044\u305f\u30441\u6642\u9593\u304f\u3089\u3044\u3067\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\u5b9f\u88c5\u5f8c\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u3001\u307e\u305a\u306f\u3053\u3093\u306a\u611f\u3058\u306bS3\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n\u3059\u308b\u3068Slack\u306b\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\n\n\n\u4ed5\u7d44\u307f\n\u901a\u77e5\u306e\u4ed5\u7d44\u307f\u3092\u56f3\u3067\u8868\u3059\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nAWS\u306e\u30b5\u30fc\u30d3\u30b9\u9593\u306f\u9023\u643a\u304c\u512a\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8fba\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u305f\u7d50\u679c\u306e\u611f\u60f3\u3092\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5426\u5b9a\u6d3e\u304c\u5909\u7bc0\u3057\u305f\u7d4c\u9a13\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\nSlack\u5074\u8a2d\u5b9a\nSlack\u306e\u53d7\u4fe1\u8a2d\u5b9a\u3092incoming webhook integration\u304b\u3089\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u6295\u7a3f\u3059\u308b\u30c1\u30e3\u30cd\u30eb\u3092\u9078\u629e\u3057\u3066\"Add Incoming WebHooks integration\"\u3092\u62bc\u3057\u307e\u3059\u3002\n\n\u305d\u3046\u3059\u308b\u3068\u3001Webhook URL\u304c\u767a\u884c\u3055\u308c\u307e\u3059\u3002\n\n\nAWS Lambda\u8a2d\u5b9a\nAWS Lambda\u8a2d\u5b9a\u3092\u7c21\u5358\u306b\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u8cbc\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n1. Select blueprint\nblueprint\u304b\u3089s3-get-object\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u3053\u3053\u306fpython\u3067\u3082\u3088\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u7279\u306b\u3053\u3060\u308f\u308a\u306a\u304f\u9078\u3093\u3067\u3044\u307e\u3059\u3002\n\n\n2. Configure triggers\nS3\u306eBucket\u540d\u3068Even type(Put)\u3092\u9078\u629e\u3002\n\n\n3. Configure function\n\u3042\u3068\u306f\u305d\u306e\u4ed6\u306e\u5c5e\u6027\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\n\n\nAWS Lambda\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n\u6700\u5f8c\u306b\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3002\u52d5\u3051\u3070\u3044\u3044\u7a0b\u5ea6\u306e\u8a8d\u8b58\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u306e\u3067\u3001\u6b63\u76f4\u3001\u81ea\u4fe1\u304c\u3042\u308a\u307e\u305b\u3093(Node.js\u306f\u304a\u904a\u3073\u7a0b\u5ea6\u306e\u77e5\u8b58\u3057\u304b\u306a\u3044\u3067\u3059\u3057)\u3002\n\nS3toPostSlack.js\n'use strict';\nconsole.log('Loading function');\n\nlet aws = require('aws-sdk');\nlet s3 = new aws.S3({ apiVersion: '2006-03-01' });\n\nvar url        = require(\"url\");\nvar http       = require('http');\nvar https      = require('https');\nvar webhookUrl = url.parse(\"https://hooks.slack.com/services/<path>\");\n\nvar webhookOptions = {\n  hostname: webhookUrl.hostname,\n  path:     webhookUrl.path,\n  port:     443,\n  method:   \"POST\",\n  headers: { \"Content-Type\": \"application/json\"  }\n};\n\nexports.handler = (event, context, callback) => {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n\n    // Get the object from the event and show its content type\n    const bucket = event.Records[0].s3.bucket.name;\n    const key    = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n    const size   = Math.floor(event.Records[0].s3.object.size / 1024);\n    const params = {\n        Bucket: bucket,\n        Key: key\n    };\n\n    var filename = event.Records[0].s3.object.key;\n    var payload = JSON.stringify({\n        channel:    \"#<channel name>\",\n        icon_emoji: \":paperclip:\",\n        username:   \"S3 Backet:\" + bucket,\n        text:       key + \"\u304c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3057\u305f:\" + size + \"MB\"\n      }); \n\n    console.log(payload);\n\n    var req = https.request(webhookOptions, function(res) {\n        res.setEncoding(\"utf8\");\n        res.on(\"data\", function(chunk) {\n          console.log(chunk);\n          context.succeed();\n        });\n      }).on(\"error\", function(e) {\n        console.log(\"error: \" + e.message);\n      });\n    req.write(payload);\n    req.end();\n\n\n    s3.getObject(params, (err, data) => {\n        if (err) {\n            console.log(err);\n            const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n            console.log(message);\n            callback(message);\n        } else {\n            console.log('CONTENT TYPE:', data.ContentType);\n            callback(null, data.ContentType);\n        }\n    });\n};\n\n\n\n\u53c2\u8003\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3082\u4f75\u305b\u3066\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5426\u5b9a\u6d3e\u304c\u5909\u7bc0\u3057\u305f\u7d4c\u9a13\n[AWS IoT] Kinesis Firehose\u306b\u9023\u643a\u3057Amazon S3\u3078\u4fdd\u7ba1\n\n#\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\n**S3\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067Slack\u306b\u901a\u77e5\u3059\u308b\u4ed5\u7d44\u307f**\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u3060\u3044\u305f\u3044**1\u6642\u9593\u304f\u3089\u3044\u3067\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002**\n\u5b9f\u88c5\u5f8c\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u3001\u307e\u305a\u306f\u3053\u3093\u306a\u611f\u3058\u306bS3\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n![UploadToS3.jpg](https://qiita-image-store.s3.amazonaws.com/0/134273/2357801e-16ab-8fd1-414b-904d414ea7d3.jpeg)\n\u3059\u308b\u3068Slack\u306b\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\n![UploadNotification.jpg](https://qiita-image-store.s3.amazonaws.com/0/134273/a6263955-e4f3-0264-9240-b161b0dac4c9.jpeg)\n#\u4ed5\u7d44\u307f\n\u901a\u77e5\u306e\u4ed5\u7d44\u307f\u3092\u56f3\u3067\u8868\u3059\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n![S3toSlackOverview.jpg](https://qiita-image-store.s3.amazonaws.com/0/134273/6634ed75-b61d-a552-00e0-041c6a720d0a.jpeg)\n**AWS\u306e\u30b5\u30fc\u30d3\u30b9\u9593\u306f\u9023\u643a\u304c\u512a\u308c\u3066\u3044\u307e\u3059\u3002**\u3053\u306e\u8fba\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u305f\u7d50\u679c\u306e\u611f\u60f3\u3092[\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5426\u5b9a\u6d3e\u304c\u5909\u7bc0\u3057\u305f\u7d4c\u9a13](http://qiita.com/FukuharaYohei/items/3c1b1b1b9283e45adad7)\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n#Slack\u5074\u8a2d\u5b9a\nSlack\u306e\u53d7\u4fe1\u8a2d\u5b9a\u3092[incoming webhook integration](https://my.slack.com/services/new/incoming-webhook/)\u304b\u3089\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u6295\u7a3f\u3059\u308b\u30c1\u30e3\u30cd\u30eb\u3092\u9078\u629e\u3057\u3066\"Add Incoming WebHooks integration\"\u3092\u62bc\u3057\u307e\u3059\u3002\n![SlackWebhookSetting.jpg](https://qiita-image-store.s3.amazonaws.com/0/134273/180d92cb-63cb-651e-ae42-bb402b465246.jpeg)\n\u305d\u3046\u3059\u308b\u3068\u3001Webhook URL\u304c\u767a\u884c\u3055\u308c\u307e\u3059\u3002\n![SlackWebhookResult.jpg](https://qiita-image-store.s3.amazonaws.com/0/134273/f2b15e0d-a606-fe0c-479a-8e519207ff9b.jpeg)\n#AWS Lambda\u8a2d\u5b9a\nAWS Lambda\u8a2d\u5b9a\u3092\u7c21\u5358\u306b\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u8cbc\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n###1. Select blueprint\nblueprint\u304b\u3089s3-get-object\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u3053\u3053\u306fpython\u3067\u3082\u3088\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u7279\u306b\u3053\u3060\u308f\u308a\u306a\u304f\u9078\u3093\u3067\u3044\u307e\u3059\u3002\n![S3toSlack.jpg](https://qiita-image-store.s3.amazonaws.com/0/134273/6957f380-8b80-77dc-480b-eb3de223eb5b.jpeg)\n###2. Configure triggers\nS3\u306eBucket\u540d\u3068Even type(Put)\u3092\u9078\u629e\u3002\n![S3toSlack_02.ConfigureTriggers.jpg](https://qiita-image-store.s3.amazonaws.com/0/134273/f5ca9d9d-e3bb-f0bd-5b8c-24dfcf275e4d.jpeg)\n###3. Configure function\n\u3042\u3068\u306f\u305d\u306e\u4ed6\u306e\u5c5e\u6027\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n![S3toSlack_03.ConfigureFunction.jpg](https://qiita-image-store.s3.amazonaws.com/0/134273/1ef34c01-1e70-ff44-195d-db0645e8652c.jpeg)\n![S3toSlack_03.ConfigureFunction2.jpg](https://qiita-image-store.s3.amazonaws.com/0/134273/37a4b8fe-a510-83ac-3173-9eef2d73ed46.jpeg)\n\n#AWS Lambda\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n\u6700\u5f8c\u306b\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3002\u52d5\u3051\u3070\u3044\u3044\u7a0b\u5ea6\u306e\u8a8d\u8b58\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u306e\u3067\u3001\u6b63\u76f4\u3001\u81ea\u4fe1\u304c\u3042\u308a\u307e\u305b\u3093(Node.js\u306f\u304a\u904a\u3073\u7a0b\u5ea6\u306e\u77e5\u8b58\u3057\u304b\u306a\u3044\u3067\u3059\u3057)\u3002\n\n```js:S3toPostSlack.js\n'use strict';\nconsole.log('Loading function');\n\nlet aws = require('aws-sdk');\nlet s3 = new aws.S3({ apiVersion: '2006-03-01' });\n\nvar url        = require(\"url\");\nvar http       = require('http');\nvar https      = require('https');\nvar webhookUrl = url.parse(\"https://hooks.slack.com/services/<path>\");\n\nvar webhookOptions = {\n  hostname: webhookUrl.hostname,\n  path:     webhookUrl.path,\n  port:     443,\n  method:   \"POST\",\n  headers: { \"Content-Type\": \"application/json\"  }\n};\n\nexports.handler = (event, context, callback) => {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n\n    // Get the object from the event and show its content type\n    const bucket = event.Records[0].s3.bucket.name;\n    const key    = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n    const size   = Math.floor(event.Records[0].s3.object.size / 1024);\n    const params = {\n        Bucket: bucket,\n        Key: key\n    };\n    \n    var filename = event.Records[0].s3.object.key;\n    var payload = JSON.stringify({\n        channel:    \"#<channel name>\",\n        icon_emoji: \":paperclip:\",\n        username:   \"S3 Backet:\" + bucket,\n        text:       key + \"\u304c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3057\u305f:\" + size + \"MB\"\n      }); \n    \n    console.log(payload);\n\n    var req = https.request(webhookOptions, function(res) {\n        res.setEncoding(\"utf8\");\n        res.on(\"data\", function(chunk) {\n          console.log(chunk);\n          context.succeed();\n        });\n      }).on(\"error\", function(e) {\n        console.log(\"error: \" + e.message);\n      });\n    req.write(payload);\n    req.end();\n    \n    \n    s3.getObject(params, (err, data) => {\n        if (err) {\n            console.log(err);\n            const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n            console.log(message);\n            callback(message);\n        } else {\n            console.log('CONTENT TYPE:', data.ContentType);\n            callback(null, data.ContentType);\n        }\n    });\n};\n```\n\n#\u53c2\u8003\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3082\u4f75\u305b\u3066\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n- [\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5426\u5b9a\u6d3e\u304c\u5909\u7bc0\u3057\u305f\u7d4c\u9a13](http://qiita.com/FukuharaYohei/items/3c1b1b1b9283e45adad7)\n- [[AWS IoT] Kinesis Firehose\u306b\u9023\u643a\u3057Amazon S3\u3078\u4fdd\u7ba1](http://qiita.com/FukuharaYohei/items/96699933fa7ff9247739)\n", "tags": ["S3", "Slack", "lambda"]}