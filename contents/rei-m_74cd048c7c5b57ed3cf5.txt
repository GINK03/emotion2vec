{"context": "\u91cd\u3044\u8170\u3092\u3042\u3052\u3066\u5bfe\u5fdc\u3057\u305f\u3068\u304d\u306e\u30e1\u30e2\u3067\u3059\u3002\n\nRxJava -> RxJava2\u306e\u5909\u66f4\u70b9\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306bSingle\u3084Maybe\u306a\u3069\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\u8a73\u7d30\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\n\nhttp://qiita.com/takahirom/items/f3e576e91b219c7239e7\n\n\n\n\n\u5bfe\u5fdc\n\n\u6e96\u5099\n\nRxJava/RxAndroid\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u3042\u3052\u3066\u3001Retrofit\u306eAdapter\u306fJake\u795e\u304c\u4f5c\u3063\u305f\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u3092\u5165\u308c\u307e\u3059\u3002\n\n\nhttps://github.com/JakeWharton/retrofit2-rxjava2-adapter\n\n\nRetrofit\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308bRxJava\u306eAdapter\u306fJake\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306eRxJava2CallAdapterFactory\u3067\u4f5c\u3063\u305f\u3082\u306e\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5909\u66f4\n\nAPI\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067Observable\u3067\u53d7\u3051\u3066\u3044\u305f\u3068\u3053\u308d\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\nGET\u306a\u3069\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304f\u308b\u3082\u306e\u306f Single\n\nPOST\u306a\u3069\u30ec\u30b9\u30dd\u30f3\u30b9\u304cNoContent\u306e\u3082\u306e\u306f Completable\n\n\u5024\u304c\u6d41\u308c\u3066\u304f\u308b\u304b\u3069\u3046\u304b\u306e\u9055\u3044\u306f\u3042\u308a\u307e\u3059\u304c\u3001Subscribe\u3059\u308b\u5074\u306f\u6210\u529f\u3057\u305f\u304b\u5931\u6557\u3057\u305f\u304b\u3068\u3044\u3046\u3053\u3068\u3060\u3051\u6c17\u306b\u3059\u308c\u3070\u3088\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3061\u306a\u307f\u306bNoContent\u304c\u8fd4\u308bAPI\u3092Single\u3067\u53d7\u3051\u308b\u3068onSuccess\u306bnull\u306f\u6d41\u305b\u306a\u3044\u3068\u3044\u3046\u65e8\u306e\u4f8b\u5916\u304conError\u306b\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\n\n\n\nSubscription\u306f\u540d\u524d\u304c\u5909\u308f\u3063\u3066Disposable\u306b\u306a\u3063\u305f\u306e\u3067\u3001CompositeSubscription\u3092\u4f7f\u3063\u3066\u3044\u305f\u3068\u3053\u308d\u306fCompositeDisposable\u306b\u5909\u3048\u3066\u3001\u89e3\u653e\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082unsubscribe\u304b\u3089dispose\u306b\u5909\u308f\u308a\u307e\u3059\u3002\nStream\u306e\u7a2e\u985e\u304c\u5897\u3048\u305f\u306e\u3067\u3001Stream\u3092\u3064\u306a\u3052\u3066\u3044\u305foperator\u3084doXXX\u306e\u7a2e\u985e\u3082\u5897\u3048\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070API\u3092\u547c\u3093\u3067\u8fd4\u3063\u3066\u304d\u305f\u7d50\u679c\u3092\u6b21\u306eAPI\u306b\u6e21\u3057\u3066\u6700\u7d42\u7684\u306bCompletable\u3092\u8fd4\u3059\u3068\u3044\u3046\u5834\u5408\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002(\u30b3\u30fc\u30c9\u306fkotlin\u3067\u3059)\n\n\nSampleUsecase.kt\nfun execute(postData: String): Completable\n    return retrofitService.getHoge().flatMap { response -> \n        return@flatMap retrofitService.postFuga(response.id, postData) \n    }.doOnEvent { response, throwable ->\n        // \u6210\u529f / \u5931\u6557\u306b\u304b\u304b\u308f\u3089\u305a\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406\n    }.flatMapCompletable {\n        // \u6210\u529f\u3057\u305f\u3089\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u51e6\u7406\u3057\u3066Completable\u3092\u8fd4\u3059\n        return@flatMapCompletable Completable.complete()\n    }.onErrorResumeNext {\n        // \u5931\u6557\u3057\u305f\u3089\u30a8\u30e9\u30fc\u3092\u51e6\u7406\u3057\u3066Completable\u3092\u8fd4\u3059\n        return@onErrorResumeNext Completable.error(RegistrationFailedException())\n    }\n}\n\n\n\nsubscribe\u3059\u308b\u5074\u306f\u30e9\u30e0\u30c0\u3092\u4f7f\u3063\u3066\u3044\u308c\u3070\u305d\u3093\u306a\u306b\u610f\u8b58\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001onComplete\u306b\u306f Action \u3092\u6e21\u3059\u3051\u3069\u3001Single\u306b\u306f Consumer<? super T> \u3092\u6e21\u3059\u3068\u3044\u3046\u3088\u3046\u306a\u9055\u3044\u3082\u3042\u308a\u307e\u3059\u3002\n\n\nSamplePresenter.kt\nfun onClickHogeFuga(value: String) {\n    disposable?.add(sampleUsecase.execute(value)                \n            .subscribeOn(Schedulers.newThread())\n            .observeOn(AndroidSchedulers.mainThread())\n            .subscribe({\n                // \u6210\u529f\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n            }, {\n                // \u5931\u6557\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n            }))\n}\n\n\n\n\u3061\u306a\u307f\u306b\u5f0a\u793e\u3067\u306f\u62e1\u5f35\u95a2\u6570\u3092\u751f\u3084\u3057\u3066\u3053\u3093\u306a\u611f\u3058\u306b\u66f8\u3044\u3066\u307e\u3059\u3002\n\n\nSamplePresenter.kt\nfun Completable.subscribeAsync(onComplete: () -> Unit, onFailure: (Throwable) -> Unit = {}, onEventFinished: () -> Unit = {}): Disposable {\n    return subscribeOn(Schedulers.newThread())\n            .observeOn(AndroidSchedulers.mainThread())\n            .doFinally(onEventFinished)\n            .subscribe(onComplete, onFailure)\n}\n\nfun onClickHogeFuga(value: String) {\n    disposable?.add(sampleUsecase.execute(value).subscribeAsync({\n        // \u6210\u529f\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n    }, {\n        // \u5931\u6557\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n    }))\n}\n\n\n\n\u6240\u611f\u306a\u3069\n\nStream\u306e\u7a2e\u985e\u304c\u5897\u3048\u305f\u3053\u3068\u3067\u3001Publish\u3059\u308b\u5074\u306f\u4f55\u3092\u6d41\u3059\u304b\u8003\u3048\u308b\u3053\u3068\u304c\u5897\u3048\u305f\u5206\u3001Suscribe\u3059\u308b\u5074\u306f\u6d41\u308c\u3066\u304f\u308b\u3082\u306e\u306b\u5408\u308f\u305b\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u8003\u3048\u308b\u3053\u3068\u304c\u6e1b\u308a\u307e\u3057\u305f\u3002\u500b\u4eba\u7684\u306b\u306f2\u7cfb\u306e\u65b9\u304c\u7d20\u76f4\u306a\u5b9f\u88c5\u304c\u3067\u304d\u308b\u5370\u8c61\u3067\u3059\u3002\n\n\u91cd\u3044\u8170\u3092\u3042\u3052\u3066\u5bfe\u5fdc\u3057\u305f\u3068\u304d\u306e\u30e1\u30e2\u3067\u3059\u3002\n\n## RxJava -> RxJava2\u306e\u5909\u66f4\u70b9\n- \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306bSingle\u3084Maybe\u306a\u3069\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n- \u8a73\u7d30\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n    - http://qiita.com/takahirom/items/f3e576e91b219c7239e7\n\n## \u5bfe\u5fdc\n### \u6e96\u5099\n- RxJava/RxAndroid\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u3042\u3052\u3066\u3001Retrofit\u306eAdapter\u306fJake\u795e\u304c\u4f5c\u3063\u305f\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u3092\u5165\u308c\u307e\u3059\u3002\n    - https://github.com/JakeWharton/retrofit2-rxjava2-adapter\n- Retrofit\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308bRxJava\u306eAdapter\u306fJake\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e`RxJava2CallAdapterFactory`\u3067\u4f5c\u3063\u305f\u3082\u306e\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n### \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5909\u66f4\n- API\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067Observable\u3067\u53d7\u3051\u3066\u3044\u305f\u3068\u3053\u308d\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n    - GET\u306a\u3069\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304f\u308b\u3082\u306e\u306f `Single`\n    - POST\u306a\u3069\u30ec\u30b9\u30dd\u30f3\u30b9\u304cNoContent\u306e\u3082\u306e\u306f `Completable`\n    - \u5024\u304c\u6d41\u308c\u3066\u304f\u308b\u304b\u3069\u3046\u304b\u306e\u9055\u3044\u306f\u3042\u308a\u307e\u3059\u304c\u3001Subscribe\u3059\u308b\u5074\u306f\u6210\u529f\u3057\u305f\u304b\u5931\u6557\u3057\u305f\u304b\u3068\u3044\u3046\u3053\u3068\u3060\u3051\u6c17\u306b\u3059\u308c\u3070\u3088\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3061\u306a\u307f\u306bNoContent\u304c\u8fd4\u308bAPI\u3092`Single`\u3067\u53d7\u3051\u308b\u3068`onSuccess`\u306bnull\u306f\u6d41\u305b\u306a\u3044\u3068\u3044\u3046\u65e8\u306e\u4f8b\u5916\u304c`onError`\u306b\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\n- `Subscription`\u306f\u540d\u524d\u304c\u5909\u308f\u3063\u3066`Disposable`\u306b\u306a\u3063\u305f\u306e\u3067\u3001`CompositeSubscription`\u3092\u4f7f\u3063\u3066\u3044\u305f\u3068\u3053\u308d\u306f`CompositeDisposable`\u306b\u5909\u3048\u3066\u3001\u89e3\u653e\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082`unsubscribe`\u304b\u3089`dispose`\u306b\u5909\u308f\u308a\u307e\u3059\u3002\n- Stream\u306e\u7a2e\u985e\u304c\u5897\u3048\u305f\u306e\u3067\u3001Stream\u3092\u3064\u306a\u3052\u3066\u3044\u305foperator\u3084doXXX\u306e\u7a2e\u985e\u3082\u5897\u3048\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070API\u3092\u547c\u3093\u3067\u8fd4\u3063\u3066\u304d\u305f\u7d50\u679c\u3092\u6b21\u306eAPI\u306b\u6e21\u3057\u3066\u6700\u7d42\u7684\u306b`Completable`\u3092\u8fd4\u3059\u3068\u3044\u3046\u5834\u5408\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002(\u30b3\u30fc\u30c9\u306fkotlin\u3067\u3059)\n\n```kotlin:SampleUsecase.kt\nfun execute(postData: String): Completable\n    return retrofitService.getHoge().flatMap { response -> \n        return@flatMap retrofitService.postFuga(response.id, postData) \n    }.doOnEvent { response, throwable ->\n        // \u6210\u529f / \u5931\u6557\u306b\u304b\u304b\u308f\u3089\u305a\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406\n    }.flatMapCompletable {\n        // \u6210\u529f\u3057\u305f\u3089\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u51e6\u7406\u3057\u3066Completable\u3092\u8fd4\u3059\n        return@flatMapCompletable Completable.complete()\n    }.onErrorResumeNext {\n        // \u5931\u6557\u3057\u305f\u3089\u30a8\u30e9\u30fc\u3092\u51e6\u7406\u3057\u3066Completable\u3092\u8fd4\u3059\n        return@onErrorResumeNext Completable.error(RegistrationFailedException())\n    }\n}\n```\n\n- subscribe\u3059\u308b\u5074\u306f\u30e9\u30e0\u30c0\u3092\u4f7f\u3063\u3066\u3044\u308c\u3070\u305d\u3093\u306a\u306b\u610f\u8b58\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001onComplete\u306b\u306f `Action` \u3092\u6e21\u3059\u3051\u3069\u3001Single\u306b\u306f `Consumer<? super T>` \u3092\u6e21\u3059\u3068\u3044\u3046\u3088\u3046\u306a\u9055\u3044\u3082\u3042\u308a\u307e\u3059\u3002\n\n```kotlin:SamplePresenter.kt\nfun onClickHogeFuga(value: String) {\n    disposable?.add(sampleUsecase.execute(value)                \n            .subscribeOn(Schedulers.newThread())\n            .observeOn(AndroidSchedulers.mainThread())\n            .subscribe({\n                // \u6210\u529f\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n            }, {\n                // \u5931\u6557\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n            }))\n}\n```\n\n- \u3061\u306a\u307f\u306b\u5f0a\u793e\u3067\u306f\u62e1\u5f35\u95a2\u6570\u3092\u751f\u3084\u3057\u3066\u3053\u3093\u306a\u611f\u3058\u306b\u66f8\u3044\u3066\u307e\u3059\u3002\n\n```kotlin:SamplePresenter.kt\nfun Completable.subscribeAsync(onComplete: () -> Unit, onFailure: (Throwable) -> Unit = {}, onEventFinished: () -> Unit = {}): Disposable {\n    return subscribeOn(Schedulers.newThread())\n            .observeOn(AndroidSchedulers.mainThread())\n            .doFinally(onEventFinished)\n            .subscribe(onComplete, onFailure)\n}\n\nfun onClickHogeFuga(value: String) {\n    disposable?.add(sampleUsecase.execute(value).subscribeAsync({\n        // \u6210\u529f\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n    }, {\n        // \u5931\u6557\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n    }))\n}\n```\n\n## \u6240\u611f\u306a\u3069\n- Stream\u306e\u7a2e\u985e\u304c\u5897\u3048\u305f\u3053\u3068\u3067\u3001Publish\u3059\u308b\u5074\u306f\u4f55\u3092\u6d41\u3059\u304b\u8003\u3048\u308b\u3053\u3068\u304c\u5897\u3048\u305f\u5206\u3001Suscribe\u3059\u308b\u5074\u306f\u6d41\u308c\u3066\u304f\u308b\u3082\u306e\u306b\u5408\u308f\u305b\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u8003\u3048\u308b\u3053\u3068\u304c\u6e1b\u308a\u307e\u3057\u305f\u3002\u500b\u4eba\u7684\u306b\u306f2\u7cfb\u306e\u65b9\u304c\u7d20\u76f4\u306a\u5b9f\u88c5\u304c\u3067\u304d\u308b\u5370\u8c61\u3067\u3059\u3002\n", "tags": ["Android", "RxJava", "RxJava2", "Kotlin"]}